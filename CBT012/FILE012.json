{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011042000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 764218, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 11, "INMDSNAM": "CBT.V500.FILE012.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 764218, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 764218, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE012.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x0e\\x06'", "DS1TRBAL": "b'\\xa9V'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b\"X\\xf4\\xfd\\xd0\\x00\\x00\\x00&\\x00\\x01\\x00'\\x00\\x00\\x00\\x0f\"", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\n                  JOHN HANCOCK ISPF OPTIONS\n\n                                       JOHN HANCOCK MUTUAL LIFE INSURANCE CO.\n                                       P. O. BOX 111\n                                       BOSTON, MASSACHUSETTS 02117\n\n                                       RON MURA, 1-617-421-2850\n\n This tape consists of options designed to be used with the Interactive\n System Productivity Facility/Program Development Facility (ISPF/PDF).\n\n NOTE: Some of these options will work only under ISPF version 2.\n Panels/skeletons/messages provided for use with JH#PDF8 are intended\n only as samples.  Some modification (e.g., accounting fields) would\n be required at your installation.  Panels that contain a \"volume\n serial\" field determine a unit name in their )PROC section.  This\n should be checked for installation compatibility.\n\n Changes 03/04/85: Modifications to exploit ISPF version 2:  macro\n        ISPCALL now supports ISPEXEC format (see new JH#PDF8 for\n        example); JH#PDF8 modified to use LM services to enable VIO\n        ISPCTLn data sets to be edited (under V1 JH#PDF8 works as\n        before); panel JHAEFR01 added (used by JH#PDF8 under V2); JH\n        ISR@PRIM replaced for V2; msgs JHA@M04 added; many\n        panels/skeletons/messages formerly prefixed Z* are now prefixed\n        JHA*; CLIST ISRCTBL renamed JH#YCTBL; JH edit interface altered\n        for V2; CLIST TSEDITPR renamed JH#TEDPR and changed to process\n        PDF V2 fields; added JH#GTDSN (a dialog program that returns\n        volume serial and data set name when provided a ddname - used by\n        other dialogs); added JH#TEDRT to display and edit a user's PDF\n        edit recovery table; added ISRUOLJH, IBM's ISRUOL (PDF 3.8)\n        modified to run faster by using temporary data sets; added\n        JH#TPRGM to invoke IEHPROGM foreground; added JH#EDTMP to\n        allow editing of VIO ISPCTLn data sets.\n Changes 10/18/83: Table display utility rewritten and enhanced.  CLIST\n        renamed JH#YDTBL from ISRYDTBL.\n Changes 10/3/83: John Hancock edit interface is enhanced to allow\n        user-defined abbreviations (see #3 below); small changes to\n        JH#PDF8 and associated sample panels; added #6, #7, #8, #9.\n\n 1. John Hancock Batch Jobs driver (JH#PDF8) is a general purpose ISPF\n    function for the generation of JCL based on data entered on panels.\n    Processing is controlled by an initial parm and by ISPF variables.\n    See the comments at the beginning of the JH#PDF8 source for\n    additional information.\n\n    Some differences between PDF option 5 and JH#PDF8:  JH#PDF8 does\n    not allocate data sets for verification, where option 5 optionally\n    allocates the input data set (only); JH#PDF8 allows a user to edit\n    the temporary generated JCL in addition to submitting or canceling\n    the job; JH#PDF8 allows initial and final skeletons to be tailored\n    for each invocation; JH#PDF8 allows two or more panels to provide\n    input to one tailoring operation; with JH#PDF8 processing such as\n    job character incrementation is done in the panels (see sample\n    JHABP@B) instead of in the driver program.\n\n    Sample panels, skeletons, and messages are provided for use with\n    JH#PDF8.  It is possible, however, to create totally different ISPF\n    components for use with this driver.  The only requirements are that\n    there be a pseudo-selection panel whose name is passed via a parm to\n    JH#PDF8 (sample is JHABP@A) and that the components set ISPF\n    variables to dictate processing (again, see the comments).\n\n    JH#PDF8 code is reenterant; the module may be placed in LPALIB\n    with other ISPF modules.\n\n 2. CLIST JH#YDTBL will display the contents (non-extension variables)\n    of any table in table display (scrollable) format.  As provided here\n    it supports five different table display formats.  It may be invoked\n    from ISPF/PDF option 6, via the ISPF TSO command, or from a\n    selection panel (e.g., ISRYXD1).\n\n 3. Panel JHTEPE01 is a John Hancock edit interface.  To use it, add\n    the following entry to a selection panel:\n          n,'PGM(ISREDIT) PARM(P,JHTEPE01) NEWAPPL(ISR)'\n    Note: future releases of PDF may not support this method of\n    implementation.\n\n 4. CLIST JH#TEDPR will display the contents of a user's current edit\n    profile (for the application he has entered).  It may be invoked\n    from ISPF/PDF option 6, via the ISPF TSO command, or from a\n    selection panel.  The CLIST must be modified for your installation's\n    ISPF profile naming convention.\n\n 5. CLIST TSCMDTB will display the contents of the current system\n    command table.  This may be used by end-users, since the\n    \"description,\" not the \"action,\" is displayed.  If this CLIST is to\n    be used, it is recommended that a copy of the system command table\n    (ISPCMDS) be made under a different name (SYSCMDS is used in the\n    CLIST).  Strange things will happen if you attempt to open and close\n    a command table that ISPF has already opened.  TSCMDTB may be\n    invoked from ISPF/PDF option 6, via the ISPF TSO command, or from a\n    selection panel.\n\n 6. CLIST JH#YCTBL drives the table reconstruction utility.  This allows\n    fields to be added to/removed from tables without losing the table\n    data.  It may be invoked from ISPF/PDF option 6, or from a selection\n    panel (e.g., ISRYXD1).\n\n 7. Panel JHAYP14@ provides entry to a foreground interface to the\n    IBM-supplied selection panel update utility (ISPPUP).  This may\n    be entered from a higher-level selection panel (xx,'PANEL(ZYPUP@)')\n    or from TSO ready (ISPSTART PANEL(ZYPUP@)).\n\n 8. CLIST ISRALTK allows a user to define and activate a second set\n    of program function key definitions.  Read help panel XALTK before\n    using.  It may be invoked from a selection panel (e.g.,ISPOPTA)\n    by \"'xx,CMD(%ISRALTK)'.\"  An entry in a command table is also a\n    good idea:\n                 VERB    ACTION\n                  K2     SELECT CMD(%ISRALTK PARM('&ZPARM'))\n\n 9. Panel PANELID is a example of how \"PANELID ON\" may be set without\n    the user having to enter the ISPF command.  The code in this panel\n    could be used in any selection panel, including ISR@PRIM and\n    ISP@MSTR.\n\n10. CLIST JH#TEDRT allows the displaying and modification of a user's\n    edit recovery table.  It may be invoked from ISPF/PDF option 6, or\n    from a selection panel.  The CLIST must be modified for your\n    installation's ISPF profile naming convention.\n\n11. CLIST ISRUOLJH is John Hancock's modified ISRUOL, the CLIST that\n    drives PDF option 3.8.  It has been modified to run faster by using\n    temporary data sets, bypassing cataloging and deletion.  It uses\n    provided dialog program JH#GTDSN (which can be in LPA if heavily\n    used).  (This CLIST has also been modified to use the same job cards\n    as option 3.6.)\n\n12. CLIST JH#TPRGM provides a panel to run IEHPROGM foreground.  To use\n    it add the following entry to a selection panel:\n       nn,'CMD(%JH#TPRGM PANEL(JHTEP0M) PANEL2(JHTEP0M2) SKEL(JHTES0M))'\n\n13. Program JH#EDTMP puts the user into edit of an ISPF temporary\n    control data set (ISPCTLn).  It supports VIO as well as DASD data\n    sets.  If no parm is supplied, the data set associated with the\n    current logical screen is used.  To access the data set used by the\n    PDF SUBMIT command, use a parm of 0 (zero).  This program may be\n    invoked via the ISPF select service from another dialog function.\n    An entry may also be placed in a command table:\n            VERB      T  ACTION\n            EDTEMP    3  SELECT PGM(JH#EDTMP) PARM(&ZPARM) NEWAPPL(ISR)\n    Then a user can enter the EDTEMP command on any screen and\n    edit the data set.\n\n\n CONTENTS OF THIS PDS:\n\n    SOURCE:    JH#EDTMP\n               JH#GTDSN\n               JH#PDF8\n\n    MACROS:    ENTER\n               ISPCALL\n               LEAVE\n               REQUS\n               SCANLINE\n\n    JCL:       $INSTALL (Copy ISPF components and assemble programs)\n               $LOAD    (Sample JCL to load distribution lib from tape)\n\n    CLISTS:    See IEBCOPY statements in $INSTALL member\n\n    PANELS:    See IEBCOPY statements in $INSTALL member\n               Plus modified ISR@PRIM\n\n    SKELETONS: See IEBCOPY statements in $INSTALL member\n\n    MESSAGES:  See IEBCOPY statements in $INSTALL member\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$INSTALL": {"ttr": 520, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//MINSTALL JOB (D72667,A,SMU),'MMURA      ',MSGLEVEL=1,\n//             CLASS=L,MSGCLASS=Y,NOTIFY=MC00200\n/*JOBPARM R=B04A\n//*\n//*   SAMPLE INSTALLATION JOB.  CHANGE PARAMETERS WHERE NECESSARY.\n//*\n//*   NOTE: A MODIFIED COPY OF PDF'S ISR@PRIM IS IN THE\n//*         DISTRIBUTION LIBRARY BUT IS NOT COPIED BY THIS JOB.\n//*         YOU MUST COPY OR ADAPT IT TO A MENU AT YOUR INSTALLATION\n//*         TO USE JH#PDF8.\n//*\n//STEP1    EXEC PGM=IEBCOPY,REGION=384K\n//SYSPRINT DD  SYSOUT=*\n//MODS     DD  DISP=SHR,DSN=dist.library                 <===\n//PANELS   DD  DISP=SHR,DSN=panel.library                <===\n//SKELS    DD  DISP=SHR,DSN=skel.library                 <===\n//MSGS     DD  DISP=SHR,DSN=msg.library                  <===\n//CLISTS   DD  DISP=SHR,DSN=clist.library                <===\n//SYSUT3   DD  UNIT=DISK,SPACE=(TRK,(10,10))\n//SYSUT4   DD  UNIT=DISK,SPACE=(TRK,(10,10))\n//SYSIN    DD  *\n C O=PANELS,I=((MODS,R))\n S M=JHABH@0,JHABH@1                SAMPLE JH#PDF8 TUTORIAL PANELS\n S M=JHABH@2,JHABH@3                SAMPLE JH#PDF8 TUTORIAL PANELS\n S M=JHABH01,JHABH02                SAMPLE JH#PDF8...\n S M=JHABH03,JHABH03A,JHABH03B         SUBOPTION TUTORIAL PANELS\n S M=JHABH05,JHABH07,JHABH07A       SAMPLE JH#PDF8...\n S M=JHABH09,JHABH09A,JHABH10          SUBOPTION TUTORIAL PANELS\n S M=JHABP@A,JHABP@B                SAMPLE JH#PDF8 PESUDO-SEL. PANELS\n S M=JHABP0A,JHABP0G                SAMPLE JH#PDF8 SUBOPTION PANELS\n S M=JHABP0Z                        SAMPLE JH#PDF8 SUBOPTION PANELS\n S M=JHABP01,JHABP02,JHABP03        SAMPLE JH#PDF8 SUBOPTION PANELS\n S M=JHABP05,JHABP07,JHABP09        SAMPLE JH#PDF8 SUBOPTION PANELS\n S M=JHABP10,JHABP14                SAMPLE JH#PDF8 SUBOPTION PANELS\n S M=JHABP18,JHABP19,JHABP19V       SAMPLE JH#PDF8 SUBOPTION PANELS\n S M=JHABROB                        JH BROWSE PANEL\n S M=JHAEFR01                       EDIT PANEL FOR JH#PDF8/JH#EDTMP\n S M=JHAYP110,JHAYP111              PANELS FOR JH#YDTBL\n S M=JHAYP112,JHAYP113              PANELS FOR JH#YDTBL\n S M=JHAYP12,JHAYP12B               PANELS FOR JH#YCTBL\n S M=JHAYP14@,JHAYP141,JHAYP142     PANELS FOR FG SEL. PANEL UPDATE\n S M=JHTEPE01                       JH EDIT ENTRY PANEL\n S M=JHTEPE31,JHTEPE32              PANELS FOR JH#TEDPR\n S M=JHTEPE41,JHTEPE42              PANELS FOR JH#TEDRT\n S M=JHTEP0M,JHTEP0M2               PANELS FOR JH#TPRGM\n S M=PANELID                        SAMPLE PANEL TO TURN PANELID ON\n S M=XALTK                          HELP PANEL FOR SECONDARY PFKS\n S M=ZALTKA,ZALTKB,ZALTKC           PANELS FOR SECONDARY PFKS\n S M=ZCMDTBL                        TABLE DISPLAY PANEL FOR TSCMDTB\n C O=SKELS,I=((MODS,R))\n S M=JHABS@C,JHABS@I                SAMPLE JH#PDF8 INIT AND TERM SKELS\n S M=JHABS0A,JHABS0G,JHABS0Z        SAMPLE JH#PDF8 SUBOPTION SKELS\n S M=JHABS01,JHABS02,JHABS03        SAMPLE JH#PDF8 SUBOPTION SKELS\n S M=JHABS05,JHABS07,JHABS09        SAMPLE JH#PDF8 SUBOPTION SKELS\n S M=JHABS10,JHABS14                SAMPLE JH#PDF8 SUBOPTION SKELS\n S M=JHABS18,JHABS19                SAMPLE JH#PDF8 SUBOPTION SKELS\n S M=JHTES0M                        SKELETON FOR JH#TPRGM\n C O=MSGS,I=((MODS,R))\n S M=JHA@M00,JHA@M01,JHA@M02        GENERAL PURPOSE MESSAGES\n S M=JHA@M03,JHA@M04                GENERAL PURPOSE MESSAGES\n S M=JHABM00                        SAMPLE JH#PDF8 MESSAGES\n S M=JHABM01,JHABM02,JHABM03        SAMPLE JH#PDF8 SUBOPTION MESSAGES\n S M=JHABM05,JHABM07,JHABM09        SAMPLE JH#PDF8 SUBOPTION MESSAGES\n S M=JHABM10,JHABM14                SAMPLE JH#PDF8 SUBOPTION MESSAGES\n S M=JHABM18,JHABM19                SAMPLE JH#PDF8 SUBOPTION MESSAGES\n S M=JHAYM11,JHAYM12                MSGS FOR JH#YCTBL, JH#YDTBL\n S M=JHAYM14                        MESSAGES FOR FG SEL. PANEL UPDATE\n S M=JHTEM01                        JH EDIT ENTRY PANEL MSGS\n C O=CLISTS,I=((MODS,R))\n S M=ISRALTK                        CLIST FOR SECONDARY PFKS\n S M=ISRUOLJH                       JH PDF 3.8 (ISRUOL) CLIST\n S M=JH#TEDPR                       CLIST TO DISPLAY EDIT PROFILE\n S M=JH#TEDRT                       CLIST TO DISPL/MODIFY EDIT RECOV TB\n S M=JH#TPRGM                       CLIST TO INVOKE IEHPROGM FOREGROUND\n S M=JH#YCTBL                       CLIST FOR TABLE RECONSTRUCTION\n S M=JH#YDTBL                       CLIST TO DISPLAY TABLE CONTENTS\n S M=JH#YPUP,JH#YPUPG               CLISTS FOR FG SEL. PANEL UPDATE\n S M=TSCMDTB                        CLIST TO DISPLAY COMMAND TABLE\n/*\n//*\n//STEP2   EXEC ASMHCL,CLASS='*',\n//    PARM.LKED='RENT,REFR,XREF,LIST,LET'\n//ASM.SYSLIB DD DISP=SHR,DSN=SYS1.MACLIB\n//           DD DISP=SHR,DSN=dist.library                <===\n//ASM.SYSIN  DD DISP=SHR,DSN=dist.library(JH#PDF8)       <===\n//LKED.SYSLMOD DD DISP=SHR,DSN=target.loadlib            <===\n//LKED.SYSIN DD *\n   NAME JH#PDF8(R)\n/*\n//*\n//STEP3   EXEC ASMHCL,CLASS='*',\n//    PARM.LKED='RENT,REFR,XREF,LIST,LET'\n//ASM.SYSLIB DD DISP=SHR,DSN=SYS1.MACLIB\n//           DD DISP=SHR,DSN=dist.library                <===\n//ASM.SYSIN  DD DISP=SHR,DSN=dist.library(JH#GTDSN)      <===\n//LKED.SYSLMOD DD DISP=SHR,DSN=target.loadlib            <===\n//LKED.SYSIN DD *\n   NAME JH#GTDSN(R)\n/*\n//*\n//STEP4   EXEC ASMHCL,CLASS='*',\n//    PARM.LKED='RENT,REFR,XREF,LIST,LET'\n//ASM.SYSLIB DD DISP=SHR,DSN=SYS1.MACLIB\n//           DD DISP=SHR,DSN=dist.library                <===\n//ASM.SYSIN  DD DISP=SHR,DSN=dist.library(JH#EDTMP)      <===\n//LKED.SYSLMOD DD DISP=SHR,DSN=target.loadlib            <===\n//LKED.SYSIN DD *\n   NAME JH#EDTMP(R)\n/*\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$LOAD": {"ttr": 523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//MC00200L JOB (D72667,A,SSS),'MMURA               ',MSGLEVEL=(1,1),    B3 STA 8\n//             CLASS=L,MSGCLASS=Y,NOTIFY=MC00200,TYPRUN=HOLD\n/*JOBPARM R=B04A\n//*\n//*   THIS JCL LOADS THE DISTRIBUTION LIBRARY FROM TAPE.\n//*\n//LOAD     EXEC PGM=IEBCOPY,REGION=384K\n//SYSPRINT DD  SYSOUT=*\n//TAPE     DD  DSN=MODLIB,UNIT=TAPE9,DISP=OLD,LABEL=(1,SL),\n//             VOL=SER=XXXXXX               <=== TAPE VOLUME SERIAL\n//DISK     DD  DSN=ISP.V2.MODLIB,           <=== DISTRIBUTION LIBRARY\n//             UNIT=DISK, VOL=SER=XXXXXX,   <=== UNIT (AND VOLUME)\n//             DISP=(,CATLG),\n//             SPACE=(CYL,(2,1,36)),\n//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=3120)\n//SYSUT3   DD  UNIT=DISK,SPACE=(TRK,(5,5))\n//SYSUT4   DD  UNIT=DISK,SPACE=(TRK,(5,5))\n C O=DISK,I=TAPE\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ENTER": {"ttr": 525, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&LABEL   ENTER &SA=,        SAVEAREA ADDRESS                           X\n               &BASE=12,    BASE REGISTER                              X\n               &BASE2=,     SECOND BASE REGISTER                       X\n               &BASE3=,     THIRD BASE REGISTER                        X\n               &ID=,        MODULE IDENTIFIER                          X\n               &TITLE=,     ASSEMBLY LISTING TITLE                     X\n               &RENT=NO,    REENTERANT OR NONREENTERANT SAVEAREAS      X\n               &CSECT=YES,  CSECT OR NOT                    9/3/81     X\n               &WKBYTES=0,  BYTES TO BE GETMAIN'D BESIDES 72 FOR SA    X\n               &ID2=,       CONCATENATED TO MODULE ID         10/27/82 X\n               &GETFAIL=    BRANCH-TO ADDRESS IF GETMAIN FAILS\n.*                                                      RON MURA, TPD\n.*               NO PARAMETERS REQUIRED\n.*               SA IGNORED IF RENT=YES SPECIFIED\n.*               WKBYTES AND GETFAIL IGNORED UNLESS RENT=YES SPECIFIED\n         MNOTE *,'*** ENTER - STANDARD OS LINKAGE ***'\n         GBLB  &RENTSW1     1 = REENTERANT SAVEAREA\n         GBLC  &WKLNTH\n&RENTSW1 SETB  0            TURN OFF IN CASE MULT. MACROS PER ASSEMBLY\n&WKLNTH  SETC  '&WKBYTES'   KEEP FOR FREEMAIN IN LEAVE MACRO\n         LCLC  &CSECTNM,&WID,&NDX,&SAVE,&GETTYPE              10/27/82\n&NDX     SETC  '&SYSNDX'\n         AIF   ('&TITLE' EQ '').NOTITLE\n         TITLE &TITLE\n.*                          TITLE MUST BE ENCLOSED BY QUOTATION MARKS\n.NOTITLE AIF   ('&LABEL' EQ '').NOLABEL\n&CSECTNM SETC  '&LABEL'\n         AGO   .CHKID\n.NOLABEL AIF   ('&CSECT' NE 'YES').CHKID                    9/3/81\n&CSECTNM SETC  '$PRIVATE'\n         MNOTE *,'*** NO LABEL ON ENTER MACRO, CSECT CALLED ''$PRIVATE'X\n               ' ***'\n.CHKID   AIF   (T'&ID EQ 'O').NOID\n&WID     SETC  '&ID'                                          10/27/82\n         AGO   .CHKID2                                        10/27/82\n.NOID    ANOP\n&WID     SETC  '&CSECTNM-&SYSDATE-&SYSTIME'                   10/27/82\n.CHKID2  AIF   (T'&ID2 EQ 'O').CHKSA                          10/27/82\n&WID     SETC  '&WID-&ID2'    CONCATENATE ID2 TO ID STRING    10/27/82\n.CHKSA   ANOP\n         AIF   ('&CSECT' EQ 'YES').CS                       9/3/81\n&LABEL   SAVE  (14,12),,&WID                           9/3/81 10/27/82\n         AGO   .LR\n.CS      ANOP                                               9/3/81\n&CSECTNM CSECT\n         SAVE  (14,12),,&WID                                  10/27/82\n.LR      ANOP                                               9/3/81\n         LR    &BASE,15               ESTABLISH BASE\n         USING &CSECTNM,&BASE         INFORM ASSEMBLER\n         AIF   (T'&BASE2 EQ 'O').CHKRENT\n         LA    &BASE2,2048(&BASE)\n         LA    &BASE2,2048(&BASE2)    ESTABLISH SECOND BASE REG\n         USING &CSECTNM+4096,&BASE2\n         AIF   (T'&BASE3 EQ 'O').CHKRENT\n         LA    &BASE3,2048(&BASE2)\n         LA    &BASE3,2048(&BASE3)    ESTABLISH THIRD BASE REG\n         USING &CSECTNM+8192,&BASE3\n.CHKRENT AIF   ('&RENT' EQ 'YES').REENT\n         AIF   (T'&SA EQ 'O').NOSA\n&SAVE    SETC  '&SA'\n         AGO   .SAOK\n.NOSA    ANOP\n&SAVE    SETC  'SAVE&NDX'\n.SAOK    ANOP\n         ST    13,&SAVE+4             CHAIN UP TO HSA\n         LA    15,&SAVE\n         ST    15,8(13)               CHAIN DOWN TO LSA\n         LR    13,15                  POINT TO SAVEAREA\n         AGO   .CHKB\n.REENT   ANOP\n&RENTSW1 SETB  1         INDICATE REENTERANT SAVEAREA FOR LEAVE MACRO\n         LR    14,1                   SAVE PTR TO PARAM LIST\n         LR    15,0                   SAVE REG 0\n         AIF   (T'&GETFAIL EQ 'O').UNCOND\n         MNOTE '         GETMAIN RC,LV=72+&WKBYTES  REENT. SA FMT USED'\n         GETMAIN RC,LV=72+&WKBYTES    GET 72 BYTES FOR SAVEAREA\n         LTR   15,15                  TEST FOR SUCCESS\n         BNZ   &GETFAIL\n         AGO   .CHAIN\n.UNCOND  MNOTE '         GETMAIN R,LV=72+&WKBYTES  REENTERANT SAVEAREA X\n               FORMAT USED'\n         GETMAIN R,LV=72+&WKBYTES     GET 72 BYTES FOR SAVEAREA\n.CHAIN   ANOP\n         ST    13,4(1)                CHAIN UP TO HSA\n         ST    1,8(13)                CHAIN DOWN TO LSA\n         LR    0,15                   RESTORE REG 0\n         LR    13,1                   POINT TO SAVEAREA\n         LR    1,14                   RESTORE REG 1\n.*    SEE IF WE NEED TO BRANCH AROUND CONSTANTS:\n.CHKB    AIF   (T'&SA NE 'O' OR '&RENT' EQ 'YES').MEND\n         B     SAVE&NDX.+72           BRANCH AROUND SAVEAREA\nSAVE&NDX DS    18F\n.MEND    MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ISPCALL": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&LBL     ISPCALL &LIST,        CALL PARAMETERS                         X\n               &DELETED=,   EP PARAMETER DELETED               01/17/84X\n               &LISTLBL=,      LABEL FOR PARAMETER LIST (NON-REENT)    X\n               &WKAREA=,       TO BUILD CALL LIST (REENTERANT CODE)    X\n               &WKREG=,        WORK REGISTER (DEFAULT 1)               X\n               &TRACE=         'OFF' OR BIT FOR TRACE MODE\n.*                                     RON MURA, TECHNICAL SERVICES\n.*  ONCE WKAREA, WKREG, AND TRACE ARE SPECIFIED, THEY ARE USED IN ALL\n.*  SUBSEQUENT OCCURRENCES OF THIS MACRO, UNLESS THE PARAMETER IS\n.*  EXPLICITLY CODED.\n.*  NOTE: FIRST 4 BYTES OF WKAREA ARE USED TO STORE NUMERIC VALUES,\n.*  WHICH ARE PRIMARILY LENGTH FIELDS.\n.* 01/17/84 MURA - SUPPORT \"CALL ISPEXEC\" FORMAT FOR ISPF VER2 01/17/84\n         LCLA  &S,&T,&U,&TRCEMSK\n         LCLB  &NUMSW\n         LCLC  &NDX,&WKAR,&WKRG\n         LCLC  &EP             ISPLINK OR ISPEXEC              01/17/84\n         GBLC  &ISPRREG,&ISPRAR,&ISPTRC1\n         GBLA  &ISPTRC2\n&NDX     SETC  '&SYSNDX'\n&EP      SETC  'ISPLINK'       DEFAULT IS CALL TO ISPLINK      01/17/84\n&S       SETA  1               SUBSCRIPT FOR GOING THRU &LIST\n***********************************************************************\n         AIF   (T'&LBL NE 'O').L1\n*                  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL\n         AGO   .L2\n.L1      ANOP\n&LBL     DS    0H  ISPCALL  -  INVOKE ISPF DIALOG SERVICES      ISPCALL\n.L2      ANOP\n         AIF   (T'&LIST NE 'O').A1\n         MNOTE 12,'*** ISPCALL PARAMETERS MUST BE PROVIDED ***'\n         AGO   .EXIT\n.A1      AIF   ('&LIST'(1,1) EQ '(').CHKTRCE\n         MNOTE *,'*** ISPCALL \"CALL ISPEXEC\" FORMAT USED ***'  01/17/84\n&EP      SETC  'ISPEXEC'       CALL ISPEXEC                    01/17/84\n.*               LINE DELETED                                  01/17/84\n.****************** ANALYZE \"TRACE\" PARAMETER *************************\n.CHKTRCE AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' NE '').TRCE4\n         AIF   (T'&TRACE EQ 'O' AND '&ISPTRC1' EQ '').TRCEOFF\n         AIF   ('&TRACE'(1,1) EQ '(').TRCEON\n         AIF   ('&TRACE' EQ 'OFF').TRCEOFF\n         MNOTE 12,'*** INVALID TRACE PARAMETERS ***'\n         AGO   .EXIT\n.TRCEON  AIF   (T'&TRACE(2) EQ 'N').TRCE2\n.TRCE8   MNOTE 12,'*** TRACE BIT (2ND PARAMETER) MUST BE 0 - 7 ***'\n         AGO   .EXIT\n.TRCE2   AIF   (&TRACE(2) GE 0 OR &TRACE(2) LE 7).TRCE3\n         AGO   .TRCE8\n.TRCE3   ANOP\n&ISPTRC1 SETC  '&TRACE(1)'     SET GLOBAL VARIABLE\n&ISPTRC2 SETA  &TRACE(2)       SET GLOBAL VARIABLE\n.TRCE4   ANOP\n&U       SETA  0\n&TRCEMSK SETA  255\n&T       SETA  128\n.TRCE5   AIF   (&U GT 7).CHKREG\n         AIF   (&ISPTRC2 NE &U).TRCE7\n.TRCE6   ANOP\n&U       SETA  &U+1\n&T       SETA  &T/2\n         AGO   .TRCE5\n.TRCE7   ANOP\n&TRCEMSK SETA  &TRCEMSK-&T\n         AGO   .TRCE6\n.TRCEOFF ANOP\n&ISPTRC1 SETC  ''              SET GLOBAL VARIABLE\n.****************** ANALYZE \"WKREG\" PARAMETER *************************\n.CHKREG  AIF   (T'&WKREG EQ 'O').A2\n&ISPRREG SETC  '&WKREG'        SET GLOBAL VARIABLE\n.A2      AIF   ('&ISPRREG' EQ '').A3\n&WKRG    SETC  '&ISPRREG'\n         AGO   .CHKAREA\n.A3      ANOP\n&ISPRREG SETC  '1'             SET GLOBAL VARIABLE\n         AGO   .A2\n.****************** SEE IF USING PROVIDED WORKAREA ********************\n.CHKAREA AIF   (T'&WKAREA NE 'O' OR '&ISPRAR' NE '').RENT\n         AIF   (T'&LISTLBL EQ 'O').B1\n&WKAR    SETC  '&LISTLBL'\n         AGO   .B2\n.B1      ANOP\n&WKAR    SETC  'ISPC&NDX'      LABEL FOR MACRO WORKAREA\n.B2      ANOP\n&T       SETA  4*(N'&LIST+1)   LENGTH OF MACRO WORKAREA\n         B     &WKAR.+&T             BRANCH AROUND DATA         ISPCALL\n&T       SETA  N'&LIST+1\n&WKAR    DC    &T.F'0'               PARAMETER LIST             ISPCALL\n.******************** BUILD PARAMETER LIST ****************************\n.CHKTYPE AIF   ('&EP' EQ 'ISPEXEC').ISPEXEC                    01/17/84\n.LOOP    AIF   (&S GT N'&LIST).ENDLOOP\n         AIF   ('&LIST(&S)'(1,1) EQ '''').C1 TEST FOR LITERAL\n         AIF   (T'&LIST(&S) EQ 'N').NUM      TEST FOR NUMERIC\n         AIF   ('&LIST(&S)'(1,1) EQ '(').REG TEST FOR REG NOTATION\n         LA    &WKRG,&LIST(&S)       LOAD DATA ADDR             ISPCALL\n.ST      ANOP\n&T       SETA  4*&S\n         ST    &WKRG,&WKAR.+&T       STORE IN PARAM LIST        ISPCALL\n         AIF   ('&ISPTRC1' EQ '' OR &S GT 1).C3           TRACE\n         TM    &ISPTRC1,&TRCEMSK     IS TRACE BIT ON?     TRACE ISPCALL\n         BZ    ISPT&NDX                                   TRACE ISPCALL\n         AIF   ('&WKRG' EQ '1' OR '&WKRG' EQ 'R1').C4     TRACE\n         LR    1,&WKRG               LOAD SRVC NAME ADDR  TRACE ISPCALL\n.C4      AIF   ('&LIST(&S)'(1,1) EQ '''').C5 LITERAL?     TRACE\n         LA    0,8                   LOAD LENGTH          TRACE ISPCALL\n         AGO   .C6                                        TRACE\n.C5      ANOP                                             TRACE\n&U       SETA  K'&LIST(&S)-2   LENGTH OF SERVICE NAME     TRACE\n         LA    0,&U                  LOAD LENGTH          TRACE ISPCALL\n.C6      ANOP                                             TRACE\n         SVC   93                    ISSUE TPUT SVC       TRACE ISPCALL\nISPT&NDX EQU   *                                          TRACE ISPCALL\n.C3      ANOP\n&S       SETA  &S+1\n         AGO   .LOOP\n.C1      AIF   (&S EQ 1).C2    SPF SERVICE NAME - LENGTH IS OK\n&T       SETA  K'&LIST(&S)-2\n         AIF   (&T GT 7).C2    LENGTH 8 OR GREATER IS OK\n&T       SETA  &T+1            ADD FOR ONE BLANK\n         LA    &WKRG,=CL&T.&LIST(&S) LOAD DATA ADDR             ISPCALL\n         AGO   .ST\n.C2      ANOP\n         LA    &WKRG,=C&LIST(&S)     LOAD DATA ADDR             ISPCALL\n         AGO   .ST\n.NUM     AIF   (&NUMSW).NUM2\n.*  NOTE: SPF WILL MODIFY LENGTH FIELDS, SO THEY CANNOT BE IN\n.*  REENTERANT CODE.\n         MVC   &WKAR.(4),=F'&LIST(&S)'                                 X\n                                     MOVE NUMERIC VALUE         ISPCALL\n&NUMSW   SETB  1\n         AGO   .LA\n.NUM2    MNOTE 12,'*** ONLY ONE NUMERIC ALLOWED PER ISPCALL MACRO - LISX\n               T ITEM &S --&LIST(&S)-- IS SECOND OCCURRENCE ***'\n         AGO   .EXIT\n.LA      ANOP\n         LA    &WKRG,&WKAR           LOAD DATA ADDR             ISPCALL\n         AGO   .ST\n.REG     ANOP\n&T       SETA  4*&S\n         ST    &LIST(&S),&WKAR.+&T                              ISPCALL\n         AGO   .C3\n.******************** USING PROVIDED WORKAREA *************************\n.RENT    AIF   (T'&WKAREA EQ 'O').RENT2\n&ISPRAR  SETC  '&WKAREA'       SET GLOBAL VARIABLE\n.RENT2   ANOP\n&WKAR    SETC  '&ISPRAR'\n         AGO   .CHKTYPE                                        01/17/84\n.*************** BUILD PARAMETER LIST FOR CALL TO ISPEXEC *****01/17/84\n.ISPEXEC ANOP  ,   FIRST FIND ALL DOUBLE QUOTE AND AMPERSAND   01/17/84\n&S       SETA  2                     SEARCH START LOC.         01/17/84\n&T       SETA  K'&LIST-2             SEARCH END LOC.           01/17/84\n&U       SETA  K'&LIST-2             LENGTH OF BUFFER          01/17/84\n.ISPEXLP AIF   (&S GT &T).ISPEXCD                              01/17/84\n         AIF   ('&LIST'(&S,2) EQ '''').DOUBLE                  01/17/84\n         AIF   ('&LIST'(&S,2) EQ '&&').DOUBLE                  01/17/84\n&S       SETA  &S+1                                            01/17/84\n         AGO   .ISPEXLP                                        01/17/84\n.DOUBLE  ANOP ,                                                01/17/84\n&S       SETA  &S+2                  SKIP DOUBLED CHAR.        01/17/84\n&U       SETA  &U-1                  DEDUCT ONE FOR DOUBLE CHR 01/17/84\n         AGO   .ISPEXLP                                        01/17/84\n.ISPEXCD ANOP ,                                                01/17/84\n         MVC   &WKAR.(4),=F'&U'      LENGTH OF BUFFER  01/17/84 ISPCALL\n         LA    &WKRG,&WKAR           ADDR./ BUFF. LNTH 01/17/84 ISPCALL\n         ST    &WKRG,&WKAR+4         STORE BUFF. LNTH  01/17/84 ISPCALL\n         LA    &WKRG,=C&LIST         ADDR./ BUFFER     01/17/84 ISPCALL\n         ST    &WKRG,&WKAR+8         STORE BUFF. ADDR. 01/17/84 ISPCALL\n&T       SETA  8                     SET TO VL BIT LOC.        01/17/84\n.****************** GENERATE STATEMENTS FOR CALL **********************\n.ENDLOOP ANOP\n         OI    &WKAR.+&T,X'80'       TURN ON VL BIT             ISPCALL\n         LA    1,&WKAR.+4                                       ISPCALL\n         L     15,=V(&EP)                                       ISPCALL\n         BALR  14,15                                            ISPCALL\n.EXIT    ANOP\n***********************************************************************\n         SPACE 2\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ISR@PRIM": {"ttr": 771, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/04/84 Mura - add JH batch (option 9)                          */\n /* 07/09/84 Mura - ensure applid is ISR on entry                    */\n /* 07/25/84 Mura - add logon proc, date, Julian date to display     */\n /* 08/09/84 Mura - set PSWD to blanks to avoid various user problems*/\n /* 08/17/84 Mura - remove new-version message                       */\n  $  TYPE(TEXT)  INTENS(HIGH) COLOR(PINK)\n)BODY\n%-----------------------  ISPF/PDF PRIMARY OPTION MENU  ------------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%   0 +ISPF PARMS +- Specify terminal and user parameters   +TIME     - &ZTIME\n%   1 +BROWSE     +- Display source data or output listings +TERMINAL - &ZTERM\n%   2 +EDIT       +- Create or change source data           +PF KEYS  - &ZKEYS\n%   3 +UTILITIES  +- Perform utility functions              +DATE     - &ZDATE\n%   4 +FOREGROUND +- Invoke language processors or JH opts  +JULIAN   - &ZJDATE\n%   5 +BATCH      +- Submit job for language processing     +PROC     - &ZLOGON\n%   6 +COMMAND    +- Enter TSO command or CLIST\n%   7 +DIALOG TEST+- Perform dialog testing\n%   8 +LM UTILITIES- Perform library management utility functions\n%   9 +JH BATCH   +- Submit job for batch processing\n%   C +CHANGES    +- Display summary of changes for this release\n%   T +TUTORIAL   +- Display information about ISPF/PDF\n%   X +EXIT       +- Terminate ISPF using log and list defaults\n%\n+Enter%END+command to terminate PDF.\n%$\n)INIT\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n  VPUT (ZHTOP,ZHINDEX) PROFILE\n  &PSWD = ' '                        /* prevent user errors  08/09/84*/\n)PROC\n  IF (&ZAPPLID \u00ac= ISR)               /*                      07/09/84*/\n     .MSG = JHA@M041                 /*                      07/09/84*/\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n                6,'PGM(ISRPTC)'\n                7,'PGM(ISRYXDR) NOCHECK'\n                8,'PANEL(ISRLPRIM)'\n                9,'PGM(JH#PDF8) PARM(JHABP@A) NOCHECK'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ISRALTK": {"ttr": 773, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 PARM()\n/*    RON MURA, TECHNICAL SERVICES, ISPF V1R1M0             */\nCONTROL NOFLUSH                      /*                              */\nSET &PNL =                           /*                              */\nISPEXEC VGET (ZKEYS)                 /* GET NUMBER OF PF KEYS        */\nSET &PPFKG = &STR(&PARM)             /* PARM, IF ANY, IS PFK GROUP   */\nISPEXEC VGET (JHPFKG)                /* GET PFK GROUP IN EFFECT      */\nIF &LASTCC \u00ac= 0 THEN SET &JHPFKG =   /*                              */\nSET &TPFKG = &JHPFKG                 /* SAVE OLD PFK GROUP           */\n\nDISPLAY: +\nIF &ZKEYS = 12 THEN SET &PNL = ZALTKA /* ALWAYS THIS PANEL IF 12 KEYS*/\nIF &ZKEYS = 24                       /* IF 24 PF KEYS                */-\n   THEN IF &TPFKG = &JHPFKG          /* IF OLD GRP = CURRENT GRP     */-\n           THEN IF &PNL = ZALTKB     /* IF PNL WAS ZALTKB            */-\n                   THEN SET &PNL = ZALTKC\n                   ELSE SET &PNL = ZALTKB\nISPEXEC DISPLAY PANEL(&PNL)\nIF &LASTCC = 8 THEN EXIT CODE(0)\nGOTO DISPLAY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ISRUOLJH": {"ttr": 775, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         PROC 0\n /* 01/03/84 MURA - SPACE ALLOCATION FOR OUTLIST LOWERED             */\n /* 04/23/84 MURA - REMOVE TBSAVE                                    */\n /* 06/22/84 MURA - USE 3.6 JOBCARDS: ZOJB1 -> HJC1, ZOJB2 -> HJC2,  */\n /*                 ZOJB3 -> HJC3, ZOJB4 -> HJC4, ZOCLA -> HCLA      */\n /* 07/06/84 MURA - CHANGE ALLOC. TO TEMP. DS FOR BROWSE, NOT PRINT  */\n /* 07/06/84 MURA - ADD TITLE USING JHABROB                          */\n           CONTROL NOFLUSH                     /* OUTLIST UTILITY(3.8)/\n           SET &MSGID =\n         LOOP: +\n           ISPEXEC DISPLAY PANEL(ISRUOL01) MSG(&MSGID)\n           IF &LASTCC = 8 THEN +\n             EXIT CODE(0)                      /* END WAS REQUESTED  */\n           ELSE +\n             DO                                /* END NOT REQUESTED  */\n               ISPEXEC CONTROL DISPLAY LINE START(20)\n               SET &MSGID =\n               IF &C \u00ac=  THEN +\n                 SET &CLASS = CLASS(&C.)       /* SET UP CLASS       */\n               ELSE +\n                 SET &CLASS =\n               IF &TJID \u00ac=  THEN +\n                 SET &JOBID = &STR((&TJID.&STR())) /* SET UP JOBID   */\n               ELSE +\n                 SET &JOBID =\n               IF (&ZCMD = P OR &ZCMD =  )  THEN +\n                 DO                            /* ALLOC PRINT DATASET*/\n                   SET &ZOLID = 100            /*                    */\n                   ISPEXEC VGET (ZOLID) PROFILE\n                   IF (&LASTCC = 8 OR &ZOLID = 999) THEN +\n                     SET &ZOLID = 100          /* GENERATE 3 DIGIT # */\n                   ELSE                        /* TO MAKE DSN UNIQUE */+\n                     SET &ZOLID = &ZOLID + 1\n                   ISPEXEC VPUT (ZOLID) PROFILE\n                   ISPEXEC VGET (ZAPPLID) ASIS   /* GET APPLICATION ID  AND */\n /* 04/23/84 MURA  ISPEXEC TBSAVE &ZAPPLID.PROF  /* SAVE IT IN CASE OF      */\n                                                 /* ABNORMAL TERMINATION    */\n                   IF (&SYSUID = &SYSPREF OR &LENGTH(&SYSPREF)=0) THEN +\n                     SET &DSN = &SYSUID..SPF&ZOLID..OUTLIST\n                   ELSE  +\n                     SET &DSN = &SYSPREF..&SYSUID..SPF&ZOLID..OUTLIST\n                   ISPEXEC VGET (ZSCREEN) ASIS /*            07/06/84*/\n                   CONTROL NOMSG\n                   FREE FI(SPFUOL1 JHUOL&ZSCREEN) /*         07/06/84*/\n                   ATTR SPFUOL1 BLKSIZE(3059) LRECL(133) +\n                     DSORG(PS) RECFM(F B &R)\n                   CONTROL MSG\n                   IF &ZCMD = P      /*                      07/06/84*/-\n                      THEN DO        /*                      07/06/84*/\n                             SET JHOLDISP = CATALOG /*       07/06/84*/\n                             SET JHOLDA = &STR(DA('&DSN')) /*07/06/84*/\n                           END       /*                      07/06/84*/\n                      ELSE DO        /*                      07/06/84*/\n                             SET JHOLDISP = DELETE  /*       07/06/84*/\n                             SET JHOLDA = &STR()  /*         07/06/84*/\n                           END       /*                      07/06/84*/\n                   ERROR +\n                     DO                        /* EXIT USED FOR      */\n                       SET &MSGID = ISRU220    /* ALLOCATION ERROR   */\n                       RETURN\n                     END\n /* FOLLOWING LINE MODIFIED BY MURA                          07/06/84*/\n                   ALLOC &JHOLDA    TRACKS     /* ATTRIBUTES OF THE  */+\n                     USING(SPFUOL1) RELEASE    /* PRINT DATASET MAY  */+\n                     FI(JHUOL&ZSCREEN) &JHOLDISP /*LINE ADDED07/06/84*/+\n                     SPACE(10 10) /*CATALOG    /* BE CHANGED TO FIT  */\n                                     /* SPACE CHANGED - MURA 01/03/84*/\n                   ERROR OFF                   /* LOCAL ENVIRONMENT. */\n                   ISPEXEC SELECT PGM(JH#GTDSN) /*           07/06/84*/-\n                      PARM(JHUOL&ZSCREEN)       /*           07/06/84*/\n                   ISPEXEC VGET (JHTDSN JHTVOL) /*           07/06/84*/\n                 END                           /* TAKE CARE          */\n               IF &ZCMD = P AND &MSGID =   THEN +\n                 DO                            /* PRINT OPTION       */\n                   OUTPUT &TJNM.&JOBID &CLASS PRINT('&DSN') BEGIN\n                   ISPEXEC CONTROL NONDISPL END\n                   ISPEXEC CONTROL ERRORS RETURN\n                   ISPEXEC BROWSE DATASET('&DSN')\n                   SET &RC = &LASTCC\n                   ISPEXEC CONTROL NONDISPL END\n                   ISPEXEC DISPLAY\n                   IF &RC \u00ac= 0 THEN            /* CHECK FOR          */+\n                     DO                        /* EMPTY DATASET      */\n                       SET &MSGID = ISRU222\n                       CONTROL NOMSG\n                       DELETE '&DSN'\n                       CONTROL MSG\n                     END\n                   ELSE +\n                     DO                        /* FOREGROUND PRINT   */\n                       FREE DA('&DSN')\n                       ISPEXEC CONTROL ERRORS CANCEL\n /* FOLLOWING LINE CHANGED BY MURA                           06/22/84*/\n                       SET &HCLA =               /* INIT VARIABLES   */\n                       SET &ZOPID =              /* IN CASE THEY ARE */\n /* FOLLOWING 7 LINES CHANGED BY MURA                        06/22/84*/\n                       SET &HJC1 =               /* NOT IN THE       */\n                       SET &HJC2 =               /* PROFILE POOL     */\n                       SET &HJC3 =\n                       SET &HJC4 =\n                       ISPEXEC VGET (HCLA,ZOPID, +\n                         HJC1,HJC2,HJC3,HJC4) PROFILE /*     06/22/84*/\n                       SET &ZCLA = &STR(&HCLA)   /* THESE VARIABLES  */\n                       SET &ZPID = &STR(&ZOPID)  /* ARE NEEDED BY THE*/\n /* FOLLOWING 4 LINES CHANGED BY MURA                        06/22/84*/\n                       SET &ZJB1 = &STR(&HJC1)   /* ISRFPT PROGRAM   */\n                       SET &ZJB2 = &STR(&HJC2)   /* IN THE SHARED    */\n                       SET &ZJB3 = &STR(&HJC3)   /* VARIABLE POOL    */\n                       SET &ZJB4 = &STR(&HJC4)\n                       SET &ZFPRINT = ISRFPPRT\n                       SET &ZFLID = &DSN\n                       ISPEXEC VPUT (ZFPRINT,ZFLID,  +\n                         ZCLA,ZPID,ZJB1,ZJB2,ZJB3,ZJB4)\n                       ISPEXEC SELECT PGM(ISRFPT)\n                       ISPEXEC VGET (ZCLA,ZPID,ZJB1,ZJB2,ZJB3,ZJB4)\n /* FOLLOWING LINE CHANGED BY MURA                           06/22/84*/\n                       SET &HCLA = &STR(&ZCLA)   /* SAVE VARIABLES   */\n                       SET &ZOPID = &STR(&ZPID)  /* FROM THE PRINT   */\n /* FOLLOWING 4 LINES CHANGED BY MURA                        06/22/84*/\n                       SET &HJC1 = &STR(&ZJB1)   /* PANEL IN THE     */\n                       SET &HJC2 = &STR(&ZJB2)   /* PROFILE POOL     */\n                       SET &HJC3 = &STR(&ZJB3)\n                       SET &HJC4 = &STR(&ZJB4)\n                       SET &MSGID = ISRU227\n                       ISPEXEC VPUT (HCLA,ZOPID, +\n                         HJC1,HJC2,HJC3,HJC4) PROFILE /*     06/22/84*/\n                     END\n                 END\n               ELSE +\n                 IF &ZCMD =  AND &MSGID =   THEN +\n                   DO                          /* BROWSE OPTION      */\n /* 07/06/84 FOLLOWING LINE CHANGED BY R. MURA               07/06/84*/\n                     OUTPUT &TJNM.&JOBID &CLASS PRINT('&JHTDSN') +\n                       BEGIN KEEP HOLD\n                     SET &JHTITLE =     /* FOR JHABROB PANEL 07/06/84*/-\n                      &STR(OUTPUT OF &TJNM&JOBID) /*         07/06/84*/\n                     ISPEXEC CONTROL ERRORS RETURN\n                     ISPEXEC BROWSE DATASET('&JHTDSN') /*    07/06/84*/-\n                       VOLUME(&JHTVOL) PANEL(JHABROB) /*     07/06/84*/\n                     IF &LASTCC \u00ac= 0 THEN      /* CHECK FOR          */+\n                       SET &MSGID = ISRU221    /* EMPTY DATASET      */\n                     ISPEXEC CONTROL ERRORS CANCEL\n                     CONTROL NOMSG\n  /*                 DELETE '&DSN'        LINE REMOVED       07/06/84*/\n                     FREE F(JHUOL&ZSCREEN) /* FREE/DELETE    07/06/84*/\n                     CONTROL MSG\n                   END\n                 ELSE +\n                   IF &ZCMD = L THEN +\n                     DO                        /* LIST OPTION        */\n                       SET &L = &LENGTH(&SYSUID)\n                       IF &LENGTH(&TJNM) = &EVAL(&L + 1) THEN +\n                         IF (&SUBSTR(1:&L,&TJNM) = &SYSUID) THEN +\n                           STATUS\n                         ELSE +\n                           STATUS &TJNM\n                       ELSE +\n                         STATUS &TJNM\n                     END\n                   ELSE +\n                     IF &ZCMD = R THEN +\n                       DO                     /* REQUEUE OPTION      */\n                         OUTPUT &TJNM.&JOBID &CLASS NEWCLASS(&N)\n                         ISPEXEC LOG MSG(ISRU223)\n                         SET &MSGID = ISRU225  /* REQUEUE COMPLETED  */\n                       END\n                     ELSE +\n                       IF &ZCMD = D THEN +\n                         DO                   /* DELETE OPTION       */\n                           OUTPUT &TJNM.&JOBID &CLASS DELETE\n                           ISPEXEC LOG MSG(ISRU224)\n                           SET &MSGID = ISRU226 /* DELETE COMPLETED  */\n                         END\n             END\n           GOTO LOOP                           /* LOOP UNTIL END     */\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JH#EDTMP": {"ttr": 779, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "*  RON MURA, TECHNICAL SERVICES, APRIL 26, 1984\n*  THIS PROGRAM EDITS THE ISPF TEMPORARY FILE.\n*  IF NO PARM IS PROVIDED, THE DDNAME IS OBTAINED FROM ISPF SYSTEM\n*  VARIABLE ZTEMPN.  IF A PARM IS PROVIDED, IT MUST BE ONE CHARACTER.\n*  AN ATTEMPT IS MADE TO USE DDNAME ISPCTL?, WHERE ? IS THE PARM\n*  VALUE.  IF THIS FAILS, A LAST-DITCH EFFORT IS TO EDIT DSNAME\n*  TSOPREFIX.SPFTEMP?.CNTL.\n*  ATTRIBUTES: REFRESHABLE, REENTERANT.\n*\n*  08/28/84 MURA - USE PANEL JHAEFR01 WHEN EDITING.\nJH#EDTMP ENTER RENT=YES,ID2=R-MURA,WKBYTES=WKBYTES\n         USING DSECT,R13\n         XR    R10,R10                INIT. RETURN CODE\n         L     R3,0(R1)               GET PARM ADDRESS\n         LH    R2,0(R3)               GET PARM LENGTH\n*                                         FOLLOWING LINE ADDED 08/28/84\n         ISPCALL ('VDEFINE','(JHTITLE)',JHTITLE,'CHAR',=A(L'JHTITLE)), X\n               WKAREA=WKAREA\n         CH    R2,=H'1'               ANY PARM?\n         BL    GETTMPDD               NO - GET TEMP. DD\n         BH    BADPARM\n         MVC   PARMDDN,=CL8'ISPCTL? '\n         MVC   PARMDDN+6(1),2(R3)     GET NUMBER FROM PARM\n         ISPCALL ('VDEFINE','(PARMDDN)',PARMDDN,'CHAR',8)\n         ISPCALL 'LMINIT DATAID(JHEDTMPD) DDNAME(&&PARMDDN)'\n         LTR   R15,R15                WAS ISPCTL# ALLOCATED?\n         BZ    EDIT                   YES - OK\n         MVI   PARMDSN,X'40'          NO - TRY FOR DSNAME\n         MVC   PARMDSN+1(L'PARMDSN-1),PARMDSN  BLANK OUT DSN\n         MVC   PARMDSN(13),=C'SPFTEMP?.CNTL'\n         MVC   PARMDSN+7(1),2(R3)     GET NUMBER FROM PARM\n         ISPCALL ('VDEFINE','(PARMDSN)',PARMDSN,'CHAR',17)\n         ISPCALL 'LMINIT DATAID(JHEDTMPD) DATASET(&&PARMDSN)'\n         LTR   R15,R15                WAS SPFTEMP? ALLOCATED?\n         BZ    EDIT                   YES - OK\n         MVC   MSG,=C'JHAEM005'       NO - ERROR MSG\n         B     SETMSG\nGETTMPDD ISPCALL 'VGET (ZTEMPN) SHARED'\n         LTR   R15,R15\n         BNZ   NODD\n         ISPCALL 'LMINIT DATAID(JHEDTMPD) DDNAME(&&ZTEMPN)'\nEDIT     ISPCALL 'EDIT DATAID(&&JHEDTMPD) PANEL(JHAEFR01)'     08/28/84\n         ISPCALL 'LMFREE DATAID(&&JHEDTMPD)'\nLEAVE    LEAVE RC=(R10)\nNODD     MVC   MSG,=C'JHAEM003'\nSETMSG   ISPCALL ('SETMSG',MSG)\n         LA    R10,20                 LOAD RETURN CODE\n         B     LEAVE\nBADPARM  MVC   MSG,=C'JHAEM004'\n         B     SETMSG\nJHTITLE  DC    C'EDIT - TEMPORARY CONTROL DATA SET'            08/28/84\n         REQUS\nDSECT    DSECT\nSAVEAREA DS    18F\nWKAREA   DS    16F\nPARMDDN  DS    CL8\nPARMDSN  DS    CL17\nMSG      DS    CL8\nWKBYTES  EQU   *-WKAREA               LENGTH OF DSECT EXCEPT SAVEAREA\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JH#GTDSN": {"ttr": 781, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "***********************************************************************\n*                                                                     *\n*  JH#GTDSN - DETERMINE DSNAME AND VOLUME SERIAL FOR PROVIDED DDNAME  *\n*             (ISPF SUBFUNCTION).                                     *\n*  RON MURA, TECHNICAL SERVICES, 9/14/82.                             *\n*  THIS CODE IS REENTERANT.                                           *\n*                                                                     *\n*  PARM - DDNAME.                                                     *\n*                                                                     *\n*  THIS PROGRAM WILL SET VARIABLE &JHTDSN AND &JHTVOL AND PUT THEM    *\n*  IN THE ISPF SHARED POOL.                                           *\n*                                                                     *\n*  SAMPLE INVOCATION (FROM CLIST):                                    *\n*     ISPEXEC SELECT PGM(JH#GTDSN) PARM(SYSUT1)                       *\n*     ISPEXEC VGET (JHTDSN JHTVOL) SHARED                             *\n*                                                                     *\n*  REGISTERS:                                                         *\n*  R0 - SVC                       R8  -                               *\n*  R1 - WORK, SVC                 R9  -                               *\n*  R2 - WORK                      R10 -                               *\n*  R3 -                           R11 -                               *\n*  R4 - WORK                      R12 - PROGRAM BASE REGISTER         *\n*  R5 -                           R13 - DSECT BASE REGISTER           *\n*  R6 -                           R14 -                               *\n*  R7 -                           R15 - WORK, SVC                     *\n*                                                                     *\n***********************************************************************\nJH#GTDSN ENTER RENT=YES,WKBYTES=DSECTL\n         USING DSECT,R13\n         L     R4,0(R1)\n         LH    R2,0(R4)                LOAD PARM LENGTH\n         LTR   R2,R2                   TEST PARM LENGTH\n         BZ    BADPARM\n         CH    R2,=H'8'                PARM LENGTH <= 8?\n         BH    BADPARM                 NO - BAD PARM\n         MVC   WKAREA(DCBL),DCB        MOVE DCB INTO WORK AREA\n         MVC   WKAREA+40(8),=CL8' '    INITIALIZE DDNAME\n         BCTR  R2,0                    DEDUCT 1 FOR EX\n         EX    R2,MVC$1                MOVE PARM INTO DCB DDNAME\n         LA    R1,JFCB\n         ST    R1,EXLST                STORE JFCB ADDR INTO EXLST\n         MVI   EXLST,X'87'             SET INDICATOR BYTE\n         MVC   JFCB(44),BLANKS\n         LA    R1,EXLST\n         ST    R1,WKAREA+36            STORE EXLST ADDR INTO DCB\n         MVC   RDJFCB$(RDJFCBL),RDJFCB\n         LA    R1,WKAREA\n         ST    R1,RDJFCB$              STORE DCB ADDR INTO RDJFCB LIST\n         OI    RDJFCB$,X'80'           TURN ON HIGH-ORDER BIT\n         LA    R1,RDJFCB$\n         RDJFCB MF=(E,(1))\n         ISPCALL ('VREPLACE','JHTDSN',44,JFCB),WKAREA=WKAREA\n         ISPCALL ('VREPLACE','JHTVOL',6,JFCB+118)\n         ISPCALL ('VPUT','(JHTDSN JHTVOL)','SHARED')\n         LEAVE RC=0\nMVC$1    MVC   WKAREA+40(1),2(R4)\nBADPARM  WTO   'JH#GTDSN - INVALID OR MISSING PARM',ROUTCDE=11\n         ABEND 3,DUMP\nBLANKS   DC    CL44' '\nRDJFCB   RDJFCB 0,MF=L\nRDJFCBL  EQU   *-RDJFCB\nDCB      DCB   DDNAME=DDNAME,MACRF=R,DSORG=PS,EXLST=0\nDCBL     EQU   *-DCB\n         LTORG ,\nDSECT    DSECT\n         DS    18F                     SAVE AREA\nEXLST    DS    A\nJFCB     DS    176X\nWKAREA   DS    (DCBL)X\nRDJFCB$  DS    (RDJFCBL)X\nDSECTL   EQU   *-DSECT\n         REQUS\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JH#PDF8": {"ttr": 784, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         TITLE 'JH#PDF8 - JH ISPF BACKGROUND JOBS DRIVER'\n*---------------------------------------------------------------------*\n*                                                                     *\n*   JOHN HANCOCK MUTUAL LIFE INSURANCE COMPANY, INC.                  *\n*   TECHNICAL SERVICES, B-3                                           *\n*   P. O. BOX 111                                                     *\n*   BOSTON, MASSACHUSETTS 02117                                       *\n*                                                                     *\n*   JH#PDF8      SEPTEMBER 17, 1982      RON MURA, TECHNICAL SERVICES *\n*   REENTERANT, REUSABLE, REFRESHABLE.                                *\n*                                                                     *\n*   THIS PROGRAM IS AN ISPF DIALOG FUNCTION. IT IS INVOKED VIA ISPF   *\n*   SELECT SERVICE AND IN TURN INVOKES OTHER ISPF SERVICES.           *\n*   THIS MODULE CONTROLS THE JOHN HANCOCK BATCH JOBS OPTION OF ISPF.  *\n*                                                                     *\n*   PARM - NAME OF INITIAL BATCH SELECTION MENU (DEFAULT ZPDF8A).     *\n*                                                                     *\n*   NOTE: ZB@A REFERS TO THE INITIAL SELECTION MENU AND ZB@B REFERS   *\n*         TO THE TERMINATION SELECTION MENU WHEN THEY APPEAR BELOW.   *\n*                                                                     *\n*   THE FOLLOWING IS HOW THIS PROGRAM MAY BE INVOKED FROM A           *\n*   SELECTION PANEL (E.G., ISR@PRIM):                                 *\n*                                                                     *\n*         &ZSEL = TRANS( TRUNC (&ZCMD,'.')                            *\n*                       8,'PGM(JH#PDF8) PARM(ZB@A) NOCHECK'           *\n*         &ZTRAIL = .TRAIL                                            *\n*                                                                     *\n*   \"NOCHECK\" AND &ZTRAIL ARE REQUIRED.                               *\n*                                                                     *\n*   THE FOLLOWING VARIABLES MAY BE SET TO PASS INFORMATION TO THIS    *\n*   PROGRAM:                                                          *\n*                                                                     *\n*       NAME      WHERE SET                PURPOSE                    *\n*       ----      ---------                -------                    *\n*       TERMMENU  ZB@A                     TERMINATION SELECTION MENU *\n*       PANEL     ZB@A/ZB@B                SUBOPTION PANEL            *\n*       JOBSKEL   ZB@A                     JOB JCL SKELETON           *\n*                                           (INITIAL SKELETON)        *\n*       SUBMSG    ZB@A/ZB@B                JOB SUBMITTED LOG MSG      *\n*       CANMSG    ZB@A/ZB@B                JOB CANCELED LOG MSG       *\n*       EDITMSG   ZB@A/ZB@B                JOB JCL EDITED LOG MSG     *\n*       SKEL      ZB@A/ZB@B OR             SUBOPTION SKELETON         *\n*                  IN SUBOPTION PANEL                                 *\n*       LOGMSG    ZB@A/ZB@B OR             MSG ID FOR LOG             *\n*                  IN SUBOPTION PANEL                                 *\n*       NXTPNL    IN SUBOPTION PANEL ONLY  NEXT SUBOPT PANEL          *\n*       LASTSKEL  ZB@A/ZB@B OR             LAST SKELETON              *\n*                  IN SUBOPTION PANEL                                 *\n*                                                                     *\n*   PANEL IS REQUIRED.  SKEL DEFAULTS TO PANEL NAME IF NOT SET.       *\n*   TERMMENU DEFAULTS TO INITIAL MENU IF NOT SET.                     *\n*                                                                     *\n*   VARIABLE PRIORSKL IS SET BY THIS PROGRAM.  IT MAY BE TESTED IN    *\n*   SKELETONS (FOR EXAMPLE) TO SEE IF IT IS NECESSARY TO GENERATE     *\n*   THE ENTIRE STEP JCL OR JUST ADDITIONAL CONTROL CARDS.             *\n*                                                                     *\n*   NOTE THAT ZB@A AND ZB@B ARE NOT NORMAL ISPF SELECTION             *\n*   MENUS (THEY ARE NOT DISPLAYED BY THE SELECT SERVICE).  THIS IS    *\n*   BECAUSE WHEN THE END KEY IS PRESSED (WHICH CAUSES THE SELECT      *\n*   SERVICE TO REVERT TO A HIGHER FUNCTION), FURTHER PROCESSING       *\n*   (ESPECIALLY JOB SUBMISSION) MAY BE REQUIRED.  THIS PROGRAM        *\n*   CONTROLS THE DISPLAYING OF ZB@A/ZB@B AND OF THE SUBOPTION         *\n*   PANELS.                                                           *\n*                                                                     *\n*   IF A USER ENTERS 8.SUBOPT, ZB@A IS PROCESSED IN                   *\n*   NONDISPLAY-ENTER MODE AND ZB@B IN NONDISPLAY-END MODE.            *\n*   THIS ALLOWS VALIDATION OF JOB JCL FIELDS IN ZB@A AND END-OF-JCL   *\n*   PROCESSING IN ZB@B (E.G., INCREMENTING A JOB CHARACTER).          *\n*   ZB@A MAY SET &PANEL TO ? AND CONTROL VARIABLE .RESP TO END IF THE *\n*   OPTION (&ZCMD) IS INVALID AND THE USER ENTERED 8.SUBOPT           *\n*   (I.E., &ZTRAIL IS NONBLANK).  THIS WILL CAUSE TERMINATION         *\n*   FOLLOWING A SETMSG OF AN 'INVALID SUBOPTION' MSG (ZB@003).        *\n*                                                                     *\n*   PANEL AND JOB SUBMISSION FLOW ARE THE SAME (TO THE END-USER) AS   *\n*   FOR THE IBM-PROVIDED BACKGROUND OPTIONS (SEE ISPF TUTORIAL).      *\n*   THERE IS THE ADDITIONAL OPTION, HOWEVER, OF ENTERING \"E\" ON ZB@B  *\n*   TO LEAVE BY WAY OF EDITING THE ISPF TEMPORARY JCL DATASET INSTEAD *\n*   OF SUBMITTING.  WHEN INVOKED WITH A SUBOPTION (WHICH CAUSES ZB@B  *\n*   TO BE BYPASSED), USE THE FORM \"8.SUBOPT/E\".                       *\n*                                                                     *\n*   CHANGED 3/22/83 - MURA - DEFAULT INITIAL SELECTION PANEL NAME     *\n*      CHANGED FROM ZB@A TO ZPDF8A.  VARIABLE PRIORSKL SET FOR        *\n*      TESTING IN SKELETONS.                                          *\n*   CHANGED 9/01/83 - MURA - SET RC=20 IF &PANEL SET TO ?, INDICATING *\n*      AN INVALID SUBOPTION.  ISPF WILL THEN ISSUE ITS OWN INVALID    *\n*      OPTION MESSAGE, WITHOUT ERASING THE ENTERED OPTION.  THIS ALSO *\n*      MEANS THAT &INVALMSG IS NO LONGER USED.                        *\n*   CHANGED 01/10/84 MURA - GET &ZCMD FIRST, BEFORE &PANEL, TO PREVENT*\n*      ANY TRUNCATION ERROR IF USER ENTERS CANCEL/EDIT ON ZB@A.       *\n*   CHANGED 04/25/84 MURA - IF ISPF VERSION 2 (ZTEMPN IS SET TO       *\n*      JCL DDNAME), THEY USE LM SERVICES TO EDIT TEMPORARY FILE.      *\n*      THIS WILL ALLOW VIO DATA SET EDITING.                          *\n*   CHANGED 08/28/84 MURA - USE PANEL JHAEFR01 WITH EDIT SERVICE.     *\n*                                                                     *\n*   MACROS:                                                           *\n*   ENTER                                                             *\n*   LEAVE                                                             *\n*   SCANLINE                                                          *\n*   ISPCALL                                                           *\n*   REQUS                                                             *\n*   MACROS ON SYS1.MACLIB                                             *\n*                                                                     *\n*   REGISTERS:                                                        *\n*   R2  - WORK                                                        *\n*   R3  - WORK                                                        *\n*   R4  - WORK                                                        *\n*   R5  - WORK                                                        *\n*   R6  - (NOT USED)                                                  *\n*   R7  - (NOT USED)                                                  *\n*   R8  - (NOT USED)                                                  *\n*   R9  - RETURN CODE                                         09/01/83*\n*   R10 - (NOT USED)                                                  *\n*   R11 - 2ND BASE (IF NECESSARY)                                     *\n*   R12 - 1ST BASE                                                    *\n*   R13 - DSECT BASE (1ST 18F FOR SAVEAREA)                           *\n*                                                                     *\n*---------------------------------------------------------------------*\nJH#PDF8  ENTER RENT=YES,WKBYTES=WKBYTES    ,BASE2=R11\n         USING DSECT,R13\n         XR    R9,R9                      INIT RETURN CODE    09/01/83\n*---------------------------------------------------------------------*\n*  HANDLE PARM (NAME OF INITIAL SELECTION MENU):                      *\n*---------------------------------------------------------------------*\n         L     R3,0(R1)                   GET PARM ADDRESS\n         LH    R4,0(R3)                   LOAD PARM LENGTH\n         MVC   USERPARM,=CL8'ZPDF8A'      DEFAULT INIT MENU     3/22/83\n         LTR   R4,R4                      ANY USER PARM PROVIDED?\n         BZ    INITFLDS                   NO - JUST USE DEFAULT\n         MVC   USERPARM,BLANKS\n         CH    R4,=H'8'\n         BNH   USRPRMOK\n         LH    R4,=H'8'                   MAX. ALLOWABLE PARM LNTH IS 8\nUSRPRMOK BCTR  R4,0                       SUBTRACT 1 FOR EX\n         EX    R4,MVC$1                   MOVE IN USER PARM\n         B     INITFLDS\nMVC$1    MVC   USERPARM(1),2(R3)          MOVE USER PARM (EXECUTED)\n*---------------------------------------------------------------------*\n*  INITIALIZE FIELDS.  INITIALLY DEFINE ALL FUNCTION VARIABLES AS     *\n*  BLANK:                                                             *\n*---------------------------------------------------------------------*\nINITFLDS MVC   ZCMD,BLANKS\n         MVI   SWITCHES,X'00'             INITIALIZE\n         ISPCALL ('VREPLACE','(TERMMENU PANEL JOBSKEL SUBMSG CANMSG    X\n               EDITMSG SKEL LOGMSG NXTPNL LASTSKEL PRIORSKL)', 09/01/83X\n               VREPARAY,BLANKS),WKAREA=WKAREA                   3/22/83\n*---------------------------------------------------------------------*\n*  GET CONTENTS OF ZTRAIL TO SEE IF A SUBOPTION WAS ENTERED.          *\n*  (TELL ISPF NOT TO QUIT WITH DIALOG ERROR ON VCOPY IN CASE USER     *\n*  ENTERS A LONG--AND INVALID--SUBOPTION ON ISP@PRIM, WHICH WOULD     *\n*  CAUSE A TRUNCATION ERROR ON VCOPY SERVICE.)                        *\n*---------------------------------------------------------------------*\n         ISPCALL ('CONTROL','ERRORS','RETURN'),                        X\n               WKAREA=WKAREA              DON'T QUIT IF BAD ERROR\n         MVC   ZTRAIL,BLANKS\n         ISPCALL ('VCOPY','ZTRAIL',16,ZTRAIL,'MOVE')\n         ISPCALL ('CONTROL','ERRORS','CANCEL') RESTORE TO DEFAULT\n         CLI   ZTRAIL,X'40'               ANY SUBOPTION ENTERED?\n         BE    DISPZB@A                   NO - JUST DISPLAY ZB@A\n*---------------------------------------------------------------------*\n*  A SUBOPTION WAS ENTERED, SO BYPASS JH BG SELECTION MENU            *\n*  (ZB@A/ZB@B), SET VARIABLE ZCMD TO SUBOPTION VALUE, AND PROCESS     *\n*  PANEL ZB@A IN NON-DISPLAY MODE TO ENSURE THAT THE SUBOPTION AND    *\n*  JOBCARD PARAMETERS ARE VALID:                                      *\n*---------------------------------------------------------------------*\n         SCANLINE '/',RECADDR=ZTRAIL,ENDCOL=15,NOFIND=NOSLASH\n         LR    R4,R1\n         LA    R5,ZTRAIL\n         SR    R1,R5                      GET LENGTH BEFORE SLASH\n         CH    R1,=H'1'                   WATCH OUT FOR '8./E'\n         BL    DISPZB@A                   TREAT AS NO SUBOPT\n         BCTR  R1,0                       DEDUCT 1 FOR MVC\n         EX    R1,MVC$3                   MOVE SUBOPT INTO ZCMD\n         CLI   1(R4),C'E'                 \"/E\" ENTERED?\n         BE    SETEDIT                       YES - SET SW FOR EDIT\n         CLI   1(R4),C'C'                 \"/C\" ENTERED?\n         BNE   NOSLASH                       NO - NOTHING SPECIAL\n         OI    SWITCHES,CANCEL               YES - SET SW FOR CANCEL\nZCMDDONE ISPCALL ('VREPLACE','ZCMD',16,ZCMD) MAKE ZCMD AVAIL TO FUNCT\n         OI    SWITCHES,SKIPSEL           SKIP SELECTION PANEL\n         ISPCALL ('CONTROL','NONDISPL','ENTER') SET NONDISPL FOR ZB@A\n         B     DISPZB@A                   GO \"DISPLAY\" ZB@A\nNOSLASH  MVC   ZCMD,ZTRAIL\n         B     ZCMDDONE\nSETEDIT  OI    SWITCHES,EDIT              SET SWITCH FOR EDIT\n         B     ZCMDDONE\nMVC$3    MVC   ZCMD(1),ZTRAIL\n*---------------------------------------------------------------------*\n*  DISPLAY INITIAL SELECTION MENU, WITH SIMULATED \"ENTER\"             *\n*  IF 8.SUBOPT WAS ENTERED.  GET SUBOPTION (ZCMD) AND THE SUBOPTION   *\n*  PANEL NAME:                                                        *\n*---------------------------------------------------------------------*\nDISPZB@A ISPCALL ('DISPLAY',USERPARM)     DISPLAY INIT SELECTION PANEL\n         LR    R4,R15                     SAVE SERVICE RETURN CODE\n*  GET &ZCMD BEFORE &PANEL TO CHECK FOR CANCEL/EDIT.           01/10/84\n         BAL   R5,GETZCMD                 GET &ZCMD FROM SELECTION PNL\n         CLI   ZCMD,C'C'                  CANCEL ENTERED?\n         BE    FINISH\n         CLI   ZCMD,C'E'                  EDIT ENTERED?\n         BE    FINISH                     YES - NOTHING TO EDIT\n         MVC   PANEL,BLANKS\n         ISPCALL ('VCOPY','PANEL',8,PANEL,'MOVE') GET PNL FROM ZB@A\n         CH    R4,=H'8'                   END COMMAND ENTERED?\n         BL    ZB@ACONT                   NO - CONTINUE ON\n         CLI   PANEL,C'?'                 ? RETURNED AS PANEL NAME?\n         BE    BADZCMD                    YES - INDICATES SUBOPT ERROR\n         B     FINISH                     NO - SIMPLY QUIT\n*---------------------------------------------------------------------*\n*  OPEN THE TEMPORARY JCL FILE.   GET THE                             *\n*  DSN OF THE TEMPORARY FILE AND DO SOME PREPARATION THAT WILL BE     *\n*  REQUIRED FOR EITHER SUBMITTING THE JOB OR EDITING THE TEMP. FILE:  *\n*---------------------------------------------------------------------*\nZB@ACONT MVC   CMDBUFF,=C'CMD(SUB '''\n         ISPCALL ('FTOPEN','TEMP')        OPEN TEMP JCL FILE\n         MVC   ZTEMPN,BLANKS                                   04/25/84\n         ISPCALL ('VCOPY','ZTEMPN',8,ZTEMPN,'MOVE')            04/25/84\n         MVC   ZTEMPF,BLANKS\n         ISPCALL ('VCOPY','ZTEMPF',44,ZTEMPF,'MOVE')\n         SCANLINE ' ',RECADDR=ZTEMPF      FIND END OF ZTEMPF DSN\n         MVI   0(R1),C''''                ADD ENDING QUOTE\n*---------------------------------------------------------------------*\n*  RESET VARIABLE &NXTPNL BEFORE EACH SUBOPTION PANEL DISPLAY.        *\n*  DISPLAY THE SUBOPTION PANEL:                                       *\n*---------------------------------------------------------------------*\nDSPLSOPT ISPCALL ('VREPLACE','NXTPNL',1,BLANKS)  ALWAYS SET TO BLANK\n         ISPCALL ('DISPLAY',PANEL)        DISPLAY PANEL FOR OPTION\n         LR    R4,R15                     SAVE RETURN CODE\n         CH    R4,=H'8'                   END KEY PRESSED?\n         BL    DISPLOK                    NO - GO GENERATE JCL\n*---------------------------------------------------------------------*\n*  END KEY PRESSED - IF WE ARE BYPASSING THE JH BG SELECTION MENU,    *\n*  THEN GO ON TO QUIT; OTHERWISE, SHOW TERMINATION SELECTION          *\n*  MENU TO ALLOW ANOTHER SUBOPTION TO BE SELECTED:                    *\n*---------------------------------------------------------------------*\n         TM    SWITCHES,SKIPSEL           BYPASS SELECTION MENU?\n         BO    FINNOSUB\n         MVI   ZCMD,C' '                  RESET ZCMD TO BLANKS\n         B     DISPZB@B\n*---------------------------------------------------------------------*\n*  END KEY NOT PRESSED ON SUBOPTION - GENERATE JOB CARDS IF &JOBSKEL  *\n*  IS NONBLANK AND THIS IS THE FIRST SUBOPTION PROCESSED.  GENERATE   *\n*  JCL FOR THE SUBOPTION.  LOG A MSG IF VARIABLE &LOGMSG HAS BEEN     *\n*  SET.  CHECK TO SEE IF WE ARE BYPASSING THE SELECTION MENU AND,     *\n*  IF SO, IF THE USER ENTERED \"/E\" OR \"/C\" AFTER THE SELECTION:       *\n*---------------------------------------------------------------------*\nDISPLOK  MVC   NXTPNL,BLANKS\n         ISPCALL ('VCOPY','NXTPNL',8,NXTPNL,'MOVE') GET NXTPNL\n         CLI   NXTPNL,C' '                ANOTHER PANEL?\n         BE    VCOPSKEL                   NO - GET SKELETON NAME\n         MVC   PANEL,NXTPNL               YES - SET NEW PANEL NAME\n         B     DSPLSOPT                   GO DISPLAY NEXT PANEL\nVCOPSKEL MVC   SKEL,BLANKS\n         ISPCALL ('VCOPY','SKEL',8,SKEL,'MOVE')   GET SKELETON NAME\n         CLI   SKEL,X'40'                 WAS SKEL SET?\n         BNE   CHKJBJCL\n         MVC   SKEL,PANEL                 ASSUME SKEL NAME = PNL NAME\nCHKJBJCL TM    SWITCHES,JCLGEND           ANY JCL WRITTEN OUT YET?\n         BO    INCLSKEL                   YES - SKIP JOB CARDS\n         MVC   JOBSKEL,BLANKS\n         ISPCALL ('VCOPY','JOBSKEL',8,JOBSKEL,'MOVE')\n         CLI   JOBSKEL,X'40'              IS &JOBSKEL NONBLANK?\n         BE    INCLSKEL                   YES - THEN NO JOB CARDS\n         ISPCALL ('FTINCL',JOBSKEL)       NO - WRITE JOB CARDS\nINCLSKEL ISPCALL ('FTINCL',SKEL)          WRITE JCL FOR SUBOPTION\n         ISPCALL ('VREPLACE','PRIORSKL',8,SKEL)                 3/22/83\n         MVC   LOGMSG,BLANKS\n         ISPCALL ('VCOPY','LOGMSG',8,LOGMSG,'MOVE') GET LOG MSG ID\n         CLI   LOGMSG,X'40'               ANY LOG MSG ID?\n         BE    DISPLOK2                   NO - SKIP LOGGING\n         ISPCALL ('LOG',LOGMSG)           LOG MSG FOR SUBOPTION\nDISPLOK2 OI    SWITCHES,JCLGEND           JCL HAS BEEN GENERATED\n         MVI   ZCMD,C' '                  RESET ZCMD TO BLANKS\n         TM    SWITCHES,SKIPSEL           SELECTION PANEL SKIPPED?\n         BZ    DISPZB@B                   NO - GO DISPLAY ZB@B\n         TM    SWITCHES,EDIT              \"/E\" ENTERED?\n         BO    SETZCMDE\n         TM    SWITCHES,CANCEL            \"/C\" ENTERED?\n         BZ    NONDISPL\n         MVI   ZCMD,C'C'                  SET ZCMD TO 'C'\n         B     NONDISPL\nSETZCMDE MVI   ZCMD,C'E'                  SET ZCMD TO 'E'\nNONDISPL ISPCALL ('CONTROL','NONDISPL','END')  PROCESS ZB@B IN NONDISPL\n*---------------------------------------------------------------------*\n*  REPLACE ZCMD (BLANK, \"C\", OR \"E\").                                 *\n*  RESET THE VARIABLES THAT CHANGE WITH EACH SUBOPTION.               *\n*  DISPLAY TERMINATION SELECTION MENU TO ALLOW ADDITIONAL JCL TO BE   *\n*  GENERATED.  IF CANCEL (C) ENTERED, LOG A \"CANCELLED\" MSG (IF       *\n*  VARIABLE &CANMSG IS DEFINED) AND QUIT.                             *\n*  IF EDIT (E) ENTERED, BRANCH TO CLOSE TEMP. FILE BEFORE INVOKING    *\n*  EDIT SERVICE:                                                      *\n*---------------------------------------------------------------------*\nDISPZB@B ISPCALL ('VREPLACE','ZCMD',1,ZCMD)\n         ISPCALL ('VREPLACE','(PANEL SKEL LOGMSG)',VREPARAY,BLANKS)\n         MVC   TERMMENU,BLANKS\n         ISPCALL ('VCOPY','TERMMENU',8,TERMMENU,'MOVE')\n         CLI   TERMMENU,X'40'             TERMMENU BLANK?\n         BNE   DSPZB@B2\n         MVC   TERMMENU,USERPARM          YES - DEFAULT IS INIT MENU\nDSPZB@B2 ISPCALL ('DISPLAY',TERMMENU)     DISPLAY SELECTION PANEL\n         LR    R4,R15\n         MVC   ZCMD,BLANKS\n         BAL   R5,GETZCMD                 GET ZCMD FROM SELECTION PNL\n         CLI   ZCMD,C'E'                  EDIT ENTERED?\n         BE    FINNOSUB\n         CLI   ZCMD,C'C'                  CANCEL ENTERED?\n         BE    CANCELJB\n         CH    R4,=H'8'                   END KEY PRESSED?\n         BNL   JOBBEND\n         MVC   PANEL,BLANKS\n         ISPCALL ('VCOPY','PANEL',8,PANEL,'MOVE') GET PNL FROM ZB@B\n         B     DSPLSOPT\nCANCELJB MVC   CANMSG,BLANKS\n         ISPCALL ('VCOPY','CANMSG',8,CANMSG,'MOVE')\n         CLI   CANMSG,X'40'\n         BE    FINNOSUB                   NO LOG MSG IF &CANMSG NOT SET\n         ISPCALL ('LOG',CANMSG)           WRITE CANCELED MSG ON LOG\n         B     FINNOSUB\n*---------------------------------------------------------------------*\n*  END KEY PRESSED ON SELECTION MENU ZB@B - IF ANY JCL HAS BEEN       *\n*  GENERATED, GO ON TO SUBMIT THE JOB; OTHERWISE, JUST QUIT:          *\n*---------------------------------------------------------------------*\nJOBBEND  TM    SWITCHES,JCLGEND           DON'T SUB IF NO JCL GEN'D\n         BZ    FINNOSUB\n*---------------------------------------------------------------------*\n*  PREPARE TO SUBMIT -                                                *\n*  CLOSE THE FILE AND PREPARE FOR LINE OUTPUT:                        *\n*---------------------------------------------------------------------*\n         BAL     R2,FTCLOSE$              CLOSE TEMP JCL FILE\n         ISPCALL ('CONTROL','DISPLAY','LINE',19)\n*---------------------------------------------------------------------*\n*  SUBMIT THE GENERATED JCL VIA SELECT SERVICE:                       *\n*---------------------------------------------------------------------*\n         ISPCALL ('SELECT',54,CMDBUFF)    SUBMIT THE JOB\n         MVC   SUBMSG,BLANKS\n         ISPCALL ('VCOPY','SUBMSG',8,SUBMSG,'MOVE')\n         CLI   SUBMSG,X'40'\n         BE    FINISH                     NO LOG MSG IF &SUBMSG NOT SET\n         ISPCALL ('LOG',SUBMSG)           WRITE SUBMITTED MSG ON LOG\nFINISH   LEAVE RC=(R9)                                        09/01/83\n*---------------------------------------------------------------------*\n*  QUIT WITHOUT SUBMITTING JOB - CLOSE THE TEMPORARY FILE (OTHERWISE  *\n*  THE NEXT INVOCATION WILL ADD TO DATASET INSTEAD OF STARTING CLEAN),*\n*  THEN WE CAN QUIT:                                                  *\n*---------------------------------------------------------------------*\nFINNOSUB BAL   R2,FTCLOSE$\n         CLI   ZCMD,C'E'                  EDIT ENTERED?\n         BNE   FINISH                        NO - JUST LEAVE\nEDITJCL  MVC   EDITMSG,BLANKS\n         ISPCALL ('VCOPY','EDITMSG',8,EDITMSG,'MOVE')\n         CLI   EDITMSG,X'40'\n         BE    EDITJCL2                  NO LOG MSG IF &EDITMSG NOT SET\n         ISPCALL ('LOG',EDITMSG)\nEDITJCL2 CLI   ZTEMPN,C' '                ANY TEMP. DDNAME?    04/25/84\n         BE    EDITJCL3                   NO - (ISPF V1)       04/25/84\n*                                         FOLLOWING LINE ADDED 08/28/84\n         ISPCALL ('VDEFINE','(JHTITLE)',JHTITLE,'CHAR',=A(L'JHTITLE))\n         ISPCALL 'LMINIT DATAID(JHPDF8ED) DDNAME(&&ZTEMPN)'\n         ISPCALL 'EDIT DATAID(&&JHPDF8ED) PANEL(JHAEFR01)'     08/28/84\n         ISPCALL 'LMFREE DATAID(&&JHPDF8ED)'\n         B     FINISH\nEDITJCL3 ISPCALL ('EDIT',ZTEMPF-1)        EDIT TEMP. FILE\n         B     FINISH\n*---------------------------------------------------------------------*\n*  ROUTINE TO FINISH UP AND CLOSE TEMPORARY JCL:                      *\n*---------------------------------------------------------------------*\nFTCLOSE$ MVC   LASTSKEL,BLANKS\n         ISPCALL ('VCOPY','LASTSKEL',8,LASTSKEL,'MOVE')\n         CLI   LASTSKEL,X'40'             IS &LASTSKEL NONBLANK?\n         BE    FTCLOSE\n         ISPCALL ('FTINCL',LASTSKEL)\nFTCLOSE  ISPCALL ('FTCLOSE')\n         BR    R2\n*---------------------------------------------------------------------*\n*  HANDLE BAD SUBOPTION (ENTERED ONLY IF USER HAS ENTERED 8.SUBOPT    *\n*  AND ZB@A HAS SET &PANEL TO ? TO INDICATE ERROR):                   *\n*---------------------------------------------------------------------*\nBADZCMD  LA    R9,20                      SET RET CODE FOR ISPF 9/01/83\n         B     FINISH                     THEN LEAVE\n*---------------------------------------------------------------------*\n*  GET VARIABLE &ZCMD FROM SELECTION MENU, THEN IMMEDIATELY RESET:    *\n*---------------------------------------------------------------------*\nGETZCMD  MVC   ZCMD,BLANKS\n         ISPCALL ('VCOPY','ZCMD',16,ZCMD,'MOVE')\n         ISPCALL ('VREPLACE','ZCMD',1,BLANKS)  RESET TO BLANK\n         BR    R5\n*---------------------------------------------------------------------*\n*  DATA AREAS:                                                        *\n*---------------------------------------------------------------------*\nBLANKS   DC    CL48' '\nVREPARAY DC    11F'1'                     LENGTHS FOR VREPLACE 09/01/83\nJHTITLE  DC    C'EDIT - TEMPORARY CONTROL DATA SET'            08/28/84\n         LTORG\nDSECT    DSECT\nSAVEAREA DS    18F\nWKAREA   DS    3D                         1ST F FOR NUMERICS IN ISPCALL\nUSERPARM DS    CL8\nSWITCHES DS    XL1\nJCLGEND  EQU   B'00000001'   JCL FOR A SUBOPTION HAS BEEN GEN'D\nSKIPSEL  EQU   B'00000010'   BYPASS \"SELECTION\" MENU (ZB@B)\nEDIT     EQU   B'00000100'   EDIT INSTEAD OF SUB (\"/E\")\nCANCEL   EQU   B'00001000'   CANCEL INSTEAD OF SUB (\"/C\")\nCMDBUFF  DS    CL9                        \"CMD(SUB '\"\nZTEMPF   DS    CL45                       MUST FOLLOW CMDBUFF FIELD\n         DS    0F\nZTEMPN   DS    CL8                                             04/25/84\nCANMSG   DS    CL8                        JOB CANCELED LOG MSG ID\nEDITMSG  DS    CL8                        JOB JCL EDITED LOG MSG ID\nJOBSKEL  DS    CL8                        JOB JCL (1ST) SKELETON NAME\nLASTSKEL DS    CL8                        SKEL INCLUDED BEFORE FTCLOSE\nLOGMSG   DS    CL8                        LOG MSG ID\nNXTPNL   DS    CL8                        NEXT PANEL NAME\nPANEL    DS    CL8                        SUBOPT PANEL NAME\nSKEL     DS    CL8                        SUBOPT SKELETON NAME\nSUBMSG   DS    CL8                        JOB SUBMITTED LOG MSG ID\nTERMMENU DS    CL8                        TERMINATION MENU NAME\nZCMD     DS    CL16                       SUBOPTION (FROM ZB@A/ZB@B)\nZTRAIL   DS    CL16                       SET IN ISR@PRIM (INVOKNG PNL)\nWKBYTES  EQU   *-WKAREA\n         REQUS\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JH#TEDPR": {"ttr": 1030, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 PANEL1(JHTEPE31) PANEL2(JHTEPE32) W(W&SYSUID) Y(Y&SYSUID)\n CONTROL NOFLUSH                     /*                      07/10/84*/\n ISPEXEC VGET (ZSCREEN) SHARED       /*                      07/10/84*/\n SET &DDN = JHEDPR&ZSCREEN           /*                      07/10/84*/\n CONTROL NOMSG                       /*                      07/10/84*/\n FREE F(&DDN)                        /*                      07/10/84*/\n CONTROL MSG                         /*                      07/10/84*/\n ALLOC F(&DDN) SP(2 2) TR DIR(8) BLKSIZE(3120) LRECL(80) RECFM(F B)\nDISPLAY:                             /*                      07/10/84*/-\n ISPEXEC DISPLAY PANEL(&PANEL1)      /*                      07/10/84*/\n IF &LASTCC \u00ac= 0                     /*                      07/10/84*/-\n    THEN GOTO FINISH                 /*                      07/10/84*/\n SET &CSR =                          /*                      07/12/84*/\nPROCESS:                             /*                      07/10/84*/-\n SET &TB = &STR(&JHEDPRAP.EDIT)      /* SET NAME OF EDIT PROF TABLE  */\n ISPEXEC SELECT PGM(JH#GTDSN) PARM(&DDN) /*                  07/10/84*/\n ISPEXEC VGET (JHTDSN JHTVOL) SHARED /*                      07/10/84*/\n SET &JHPROFDS = &STR(ISP.PROFILE.&JHEDPRID) /*              07/12/84*/\n ISPEXEC LMINIT DATAID(JHDID) DATASET('&JHPROFDS')\n IF &LASTCC \u00ac= 0                     /*                      07/10/84*/-\n    THEN DO                          /*                      07/10/84*/\n           SET &TDSN = &STR(&JHPROFDS) /*                    07/12/84*/\n           SET &MSG = JHA@M003       /*                      07/10/84*/\n           GOTO ERRMSG               /*                      07/10/84*/\n         END                         /*                      07/10/84*/\n ISPEXEC LMOPEN DATAID(&JHDID)       /*                      07/12/84*/\n ISPEXEC LMMFIND DATAID(&JHDID) MEMBER(&TB)\n IF &LASTCC \u00ac= 0                     /*                      07/10/84*/-\n    THEN DO                          /*                      07/10/84*/\n           SET &TDSN = &STR(&JHPROFDS) /*                    07/12/84*/\n           SET &TMEM = &TB           /*                      07/12/84*/\n           SET &MSG = JHA@M007       /*                      07/10/84*/\n           SET &CSR = JHEDPRAP       /*                      07/12/84*/\n           GOTO ERRMSG               /*                      07/10/84*/\n         END                         /*                      07/10/84*/\n ISPEXEC LMCLOSE DATAID(&JHDID)      /*                      07/12/84*/\n ISPEXEC LMFREE DATAID(&JHDID)       /*                      07/12/84*/\n COPY '&JHPROFDS(&TB)' '&JHTDSN(&Y)' NONUM /*                07/10/84*/\n SET &TB = &STR(&Y)                  /* SET NAME OF EDIT PROF TABLE  */\n ISPEXEC CONTROL ERRORS RETURN       /*                      07/10/84*/\n ISPEXEC TBCLOSE &TB                 /*                      07/10/84*/\n ISPEXEC CONTROL ERRORS CANCEL       /*                      07/10/84*/\n SET JHEDUDT =                       /*                      08/14/84*/\n ISPEXEC TBSTATS &TB UDATE(JHEDUDT) UTIME(JHEDUTM) LIBRARY(&DDN)\n SET &ZEDPIMAC =                     /* NOT IN OLD PROFILES  07/11/84*/\n ISPEXEC TBOPEN &TB LIBRARY(&DDN) NOWRITE  /*                07/10/84*/\n SET &PNL = &PANEL2                  /* SET NAME OF TABLE DISPLAY PNL*/\n ISPEXEC TBTOP &TB                   /*                              */\n ISPEXEC TBCREATE &W NOWRITE +\n           NAMES(JHEDPROF JHEDATTR JHEDLOCK JHEDIMAC JHEDSTAT +\n                 JHEDPACK JHEDRECV JHEDNULL JHEDCAPS JHEDTABZ +\n                 JHEDNUMB JHEDAUTN JHEDBNDL JHEDBNDR)\n SET &MSG =                          /*                      07/10/84*/\nTBSKIP: +\nISPEXEC TBSKIP &TB NUMBER(1)         /*                              */\nIF &LASTCC = 8 THEN GOTO TBDISPL     /*                              */\nSET &JHEDPROF = &ZEDPTYPE            /*                              */\nSET &JHEDATTR = &STR(&ZEDPRCFM-&ZEDPLRCL)\nIF &SUBSTR(21,&ZEDPFLAG) = 0         /* RECOVERY                     */-\n   THEN SET &JHEDRECV = &STR(-)      /*                              */\n   ELSE SET &JHEDRECV = ON           /*                              */\nIF &SUBSTR(6,&ZEDPFLAG) = 0          /* PACK                         */-\n   THEN SET &JHEDPACK = &STR(-)      /*                              */\n   ELSE SET &JHEDPACK = ON           /*                              */\nIF &SUBSTR(7,&ZEDPFLAG) = 0          /* NULLS                        */-\n   THEN SET &JHEDNULL = OFF          /*                              */\n   ELSE IF &SUBSTR(8,&ZEDPFLAG) = 0  /*                              */-\n           THEN SET &JHEDNULL = STD  /*                              */\n           ELSE SET &JHEDNULL = ALL  /*                              */\nIF &SUBSTR(2,&ZEDPFLAG) = 0          /* CAPS                         */-\n   THEN SET &JHEDCAPS = OFF          /*                              */\n   ELSE SET &JHEDCAPS = ON           /*                              */\nIF &SUBSTR(14,&ZEDPFLAG) = 0         /* TABS                         */-\n   THEN SET &JHEDTABZ = OFF          /*                              */\n   ELSE IF &SUBSTR(15:16,&ZEDPFLAG) = 0 +\n           THEN SET &JHEDTABZ = STD  /*                              */\n           ELSE IF &SUBSTR(15:16,&ZEDPFLAG) = 01 +\n                   THEN SET &JHEDTABZ = &STR(ON &ZEDPTABC)\n                   ELSE SET &JHEDTABZ = ANY\nIF &SUBSTR(13,&ZEDPFLAG) = 0         /* STATS                        */-\n   THEN SET &JHEDSTAT = OFF          /*                              */\n   ELSE SET &JHEDSTAT = ON           /*                              */\nSET &JHEDNUMB =                      /* NUMBER                       */\nIF &SUBSTR(11,&ZEDPFLAG) = 1         /*                              */-\n   THEN SET &JHEDNUMB = &STR(&JHEDNUMB DISPLAY)\nIF &SUBSTR(10,&ZEDPFLAG) = 1         /*                              */-\n   THEN SET &JHEDNUMB = &STR(&JHEDNUMB STD)\nIF &SUBSTR(9,&ZEDPFLAG) = 1          /*                              */-\n   THEN SET &JHEDNUMB = &STR(&JHEDNUMB COB)\nIF &SUBSTR(18,&ZEDPFLAG) = 0         /* AUTONUM                      */-\n   THEN SET &JHEDAUTN = &STR(-)      /*                              */\n   ELSE SET &JHEDAUTN = ON           /*                              */\nIF &SUBSTR(19,&ZEDPFLAG) = 0         /* AUTOLIST                     */-\n   THEN SET &JHEDAUTL = &STR(-)      /*                              */\n   ELSE SET &JHEDAUTL = ON           /*                              */\nIF &SUBSTR(22,&ZEDPFLAG) = 0         /* LOCK                         */-\n   THEN SET &JHEDLOCK = NO           /*                              */\n   ELSE SET &JHEDLOCK = YES          /*                              */\nIF &STR(&JHEDNUMB) =                 /* NUMBER                       */-\n   THEN SET &JHEDNUMB = OFF          /*                              */\nSET &JHEDBNDL = &STR(&ZEDPBNDL)      /* LEFT BOUNDS                  */\nSET &JHEDBNDR = &STR(&ZEDPBNDR)      /* RIGHT BOUNDS                 */\nSET &JHEDIMAC = &STR(&ZEDPIMAC)      /* INITIAL EDIT MACRO           */\nISPEXEC TBADD &W                     /*                              */\nGOTO TBSKIP                          /*                              */\n\nTBDISPL: +\n ISPEXEC TBTOP &W                    /*                              */\n ISPEXEC TBDISPL &W PANEL(&PNL) MSG(&MSG)\n SET &RC = &LASTCC                   /*                              */\n SET &PNL =                          /*                      07/12/84*/\n IF &ZCMD \u00ac=                         /*                              */-\n    THEN DO                          /*                              */\n           SET &MSG = ISPZ001        /* INVALID COMMAND              */\n           GOTO TBDISPL              /*                              */\n         END                         /*                              */\n IF &RC = 0                          /* JUST PRESSED ENTER   07/12/84*/-\n    THEN GOTO TBDISPL                /*                      07/12/84*/\n ISPEXEC TBEND &W                    /*                              */\n\n ISPEXEC TBEND &TB                   /*                      07/10/84*/\n ISPEXEC CONTROL ERRORS RETURN       /*                      07/12/84*/\n ISPEXEC TBOPEN &TB LIBRARY(NOSUCH)  /* FORCE CLOSING OF DDN 07/12/84*/\n ISPEXEC CONTROL ERRORS CANCEL       /*                      07/12/84*/\n GOTO DISPLAY                        /*                      07/10/84*/\nERRMSG:                              /*                      07/10/84*/-\n ISPEXEC DISPLAY MSG(&MSG) CURSOR(&CSR) /*                   07/10/84*/\n IF &LASTCC = 0                      /*                      07/10/84*/-\n    THEN GOTO PROCESS                /*                      07/10/84*/\n    ELSE GOTO FINISH                 /*                      07/10/84*/\nFINISH:                              /*                      07/10/84*/-\n FREE F(&DDN)                        /*                      07/10/84*/\n EXIT                                /*                      07/10/84*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JH#TEDRT": {"ttr": 1033, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 PANEL1(JHTEPE41) PANEL2(JHTEPE42) W1(Z&SYSUID)\n CONTROL NOFLUSH                     /*                              */\n ISPEXEC VGET (ZSCREEN) SHARED       /*                              */\n SET &DDN = JHEDRT&ZSCREEN           /*                              */\n CONTROL NOMSG                       /*                              */\n FREE F(&DDN)                        /*                              */\n CONTROL MSG                         /*                              */\n ALLOC F(&DDN) SP(2 2) TR DIR(8) BLKSIZE(3120) LRECL(80) RECFM(F B)\nDISPLAY:                             /*                              */-\n ISPEXEC DISPLAY PANEL(&PANEL1)      /*                              */\n IF &LASTCC \u00ac= 0                     /*                              */-\n    THEN GOTO FINISH                 /*                              */\n SET &CSR =                          /*                              */\nPROCESS:                             /*                              */-\n SET &TB = &STR(&JHEDRTAP.EDRT)      /* SET NAME OF EDIT PROF TABLE  */\n ISPEXEC SELECT PGM(JH#GTDSN) PARM(&DDN) /*                          */\n ISPEXEC VGET (JHTDSN JHTVOL) SHARED /*                              */\n SET &JHPROFDS = &STR(ISP.PROFILE.&JHEDRTID) /*                      */\n ISPEXEC LMINIT DATAID(JHDID) DATASET('&JHPROFDS')\n IF &LASTCC \u00ac= 0                     /*                              */-\n    THEN DO                          /*                              */\n           SET &TDSN = &STR(&JHPROFDS) /*                            */\n           SET &MSG = JHA@M003       /*                              */\n           GOTO ERRMSG               /*                              */\n         END                         /*                              */\n ISPEXEC LMOPEN DATAID(&JHDID)       /*                              */\n ISPEXEC LMMFIND DATAID(&JHDID) MEMBER(&TB)\n IF &LASTCC \u00ac= 0                     /*                              */-\n    THEN DO                          /*                              */\n           SET &TDSN = &STR(&JHPROFDS) /*                            */\n           SET &TMEM = &TB           /*                              */\n           SET &MSG = JHA@M007       /*                              */\n           SET &CSR = JHEDRTAP       /*                              */\n           GOTO ERRMSG               /*                              */\n         END                         /*                              */\n ISPEXEC LMCLOSE DATAID(&JHDID)      /*                              */\n ISPEXEC LMFREE DATAID(&JHDID)       /*                              */\n COPY '&JHPROFDS(&TB)' '&JHTDSN(&W1)' NON /*                         */\n ISPEXEC CONTROL ERRORS RETURN       /*                              */\n ISPEXEC TBCLOSE &W1                 /*                              */\n ISPEXEC CONTROL ERRORS CANCEL       /*                              */\n ISPEXEC TBOPEN &W1 LIBRARY(&DDN)    /* OPEN FOR UPDATE              */\n SET &PNL = &PANEL2                  /* SET NAME OF TABLE DISPLAY PNL*/\n ISPEXEC TBTOP &W1                   /*                              */\n SET &MSG2 =                         /*                              */\n SET &CSR =                          /*                              */\n SET &CSRROW =                       /*                              */\n SET &ZTDTOP = 1                     /*                              */\n SET &AUTOSEL = YES                  /*                              */\n\nTBDISPL: +\n ISPEXEC TBTOP &W1                   /*                              */\n ISPEXEC TBSKIP &W1 NUMBER(&ZTDTOP)  /* POSITION AS USER LAST SAW IT */\n ISPEXEC TBDISPL &W1 PANEL(&PNL) MSG(&MSG2) CURSOR(&CSR) +\n             CSRROW(&CSRROW) AUTOSEL(&AUTOSEL)\n SET &RC = &LASTCC                   /*                              */\n SET &PNL =                          /*                              */\n SET &AUTOSEL = YES                  /*                              */\n SET &CSR =                          /*                              */\n SET &CSRROW =                       /*                              */\n SET &MSG2 =                         /*                              */\n ISPEXEC TBQUERY &W1 POSITION(POS)   /*                              */\n IF &ZCMD = CAN | &ZCMD = CANCEL     /*                              */-\n    THEN DO                          /*                              */\n           SET &ZCMD =               /*                              */\n           GOTO TBEND                /*                              */\n         END                         /*                              */\n IF &RC = 0 && &ZTDSELS = 0 +\n    THEN DO\n            SET &PNL = &PANEL2\n            GOTO TBDISPL\n         END\n IF &SELN = THEN SET &SELN = 1       /* PROCESS MODIFIED LINE        */\n IF &SELT \u00ac= D                       /*                              */-\n    THEN ISPEXEC TBPUT &W1           /* MODIFY ROW                   */\n SET &X = 0\n IF &SELT = R +\n    THEN DO\n            SET &CSR    = ZEDSTAT\n            SET &CSRROW = &POS + 1\n            SET &AUTOSEL = NO\n            DO WHILE &X < &SELN\n               ISPEXEC TBADD &W1\n               SET &X = &X + 1\n            END\n         END\n IF &SELT = I +\n    THEN DO\n            SET &CSR    = ZEDSTAT\n            SET &CSRROW = &POS + 1\n            DO WHILE &X < &SELN\n               SET &ZEDSTAT =\n               SET &ZEDDISP =\n               SET &ZEDBDSN =\n               SET &ZEDTDSN =\n               SET &ZEDTMEM =\n               SET &ZEDTVOL =\n               ISPEXEC TBADD &W1\n               SET &X = &X + 1\n            END\n         END\n IF &SELT = D +\n    THEN DO WHILE &X < &SELN\n               ISPEXEC TBDELETE &W1\n               ISPEXEC TBSKIP &W1 NUMBER(+1)\n               IF &LASTCC = 8 +\n                  THEN SET &X = &SELN\n               SET &X = &X + 1\n         END\n IF &RC < 8 +\n    THEN DO                          /* ENTER KEY WAS PRESSED        */\n            SET &PNL = &PANEL2\n            GOTO TBDISPL             /* GO DISPLAY TABLE AGAIN       */\n         END\n ISPEXEC TBSAVE &W1 LIBRARY(&DDN)    /* END KEY PRESSED      11/27/84*/\n\nTBEND:                               /*                              */-\n ISPEXEC TBEND &W1                   /*                              */\n ISPEXEC CONTROL ERRORS RETURN       /*                              */\n ISPEXEC TBOPEN &W1 LIBRARY(NOSUCH)  /* FORCE CLOSING OF DDN         */\n ISPEXEC CONTROL ERRORS CANCEL       /*                              */\n IF &ZCMD \u00ac= CAN && &ZCMD \u00ac= CANCEL  /*                      11/27/84*/-\n    THEN COPY '&JHTDSN(&W1)' '&JHPROFDS(&TB)' NONUM /* COPY EDRT BACK*/\n GOTO DISPLAY                        /*                              */\nERRMSG:                              /*                              */-\n ISPEXEC DISPLAY MSG(&MSG) CURSOR(&CSR) /*                           */\n IF &LASTCC = 0                      /*                              */-\n    THEN GOTO PROCESS                /*                              */\n    ELSE GOTO FINISH                 /*                              */\nFINISH:                              /*                              */-\n FREE F(&DDN)                        /*                              */\n EXIT                                /*                              */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JH#TPRGM": {"ttr": 1036, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 PANEL() PANEL2() SKEL() MSGPFX()\n /*    RON MURA, TECHNICAL SERVICES                                  */\n /* 01/18/84 MURA - CHANGE COMPONENT NAMES                           */\n CONTROL NOFLUSH NOPROMPT\n SET &MSG =\nSHOW: +\n ISPEXEC DISPLAY PANEL(&PANEL) MSG(&MSG)     /*              01/18/84*/\n IF &LASTCC\u00ac=0 THEN EXIT CODE(0)\n SET &MSG =\n IF &O \u00ac= 4 THEN DO\n         ISPEXEC DISPLAY PANEL(&PANEL2)     /*     VERIFICATION PANEL*/\n         IF &LASTCC\u00ac=0 THEN GOTO SHOW\n                 END\n\n CONTROL NOMSG\n FREE    F(SYSPRINT SYSIN DD1)\n CONTROL MSG\n\n ALLOC F(SYSPRINT) DA(*)             /* ALLOCATE SYSPRINT            */\n\n IF &O < 3 | &O > 4                  /* ALLOCATE VOLUME              */+\n    THEN ALLOC F(DD1) UNIT(&TDEV) VOL(&TVOL) DA('&TDSN') SHR\n\n ISPEXEC FTOPEN TEMP\n ISPEXEC VGET ZTEMPF\n ISPEXEC FTINCL &SKEL\n ISPEXEC FTCLOSE\n ALLOC F(SYSIN) DA('&ZTEMPF') SHR\n\n CALL 'SYS1.LINKLIB(IEHPROGM)'\n SET &TRC = &LASTCC\n\n CONTROL NOMSG\n FREE    F(SYSIN DD1)\n CONTROL MSG\n ALLOC   F(SYSIN)      DA(*)\n\n SET &TFUNC2 = &STR(&TFUNC OF &TDSN &TVOL &TMEM..) /*        01/18/84*/\n SET &TFUNC = IEHPROGM               /*                      01/18/84*/\n ISPEXEC LOG MSG(JHA@M029)           /* WRITE MSG TO LOG             */\n SET &MSG = JHA@M001                 /* SET ERROR RETURN CODE MSG    */\n IF &TRC = 0 THEN SET &MSG = JHA@M000 /* UNLESS CC IS 0              */\n\n GOTO SHOW\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JH#YCTBL": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0                              /*                               */\n/*    RON MURA, TECHNICAL SERVICES                                   */\n/* 01/16/84 KMURA - PANEL, MSG ID NAMES CHANGED                      */\n/*    RECONSTRUCT (ADD/DELETE FIELDS) AN EXISTING TABLE              */\nCONTROL NOFLUSH                     /*                               */\nSET &MSG1 =                         /*                               */\nDISPLAY1:                           /*                               */-\nISPEXEC DISPLAY PANEL(JHAYP12) MSG(&MSG1) /* ENTRY PANEL     01/16/84*/\nIF &LASTCC > 4 THEN EXIT            /*                               */\nSET &MSG1 =                         /*                               */\nISPEXEC TBOPEN &JHCTNM1 NOWRITE     /* OPEN INPUT TABLE              */\nIF &LASTCC > 4                      /*                               */-\n   THEN DO                          /*                               */\n           SET &MSG1 = JHAYM121     /* TABLE NOT FOUND       01/16/84*/\n           GOTO DISPLAY1            /*                               */\n        END                         /*                               */\nISPEXEC TBQUERY &JHCTNM1 KEYS(JHCTKEYS) NAMES(JHCTNMS1) /*           */\nSET &JHCTLN = &LENGTH(&STR(&JHCTKEYS)) /*                            */\nIF &JHCTLN > 1                      /*                               */-\n   THEN SET &JHCTKEYS = &SUBSTR(2:&JHCTLN-1,&STR(&JHCTKEYS)) /*      */\nSET &JHCTLN = &LENGTH(&STR(&JHCTNMS1)) /*                            */\nIF &JHCTLN > 1                      /*                               */-\n   THEN SET &JHCTNMS1 = &SUBSTR(2:&JHCTLN-1,&STR(&JHCTNMS1)) /*      */\n/* SEPARATE NON-KEY FIELD LIST INTO TWO PORTIONS IF THE LENGTH       */\n/* EXCEEDS 219 CHARACTERS.  (MAX. VAR. LENGTH ON ANY ISPF PANEL      */\n/* IS 255.)                                                          */\nSET &JHCTLN = &LENGTH(&STR(&JHCTNMS1)) /*                            */\nSET &JHCTNMS2 =                     /*                               */\nIF &JHCTLN > 219                    /* 219 CHARS PER FIELD ON PANEL  */-\n   THEN DO                          /*                               */\n           SET &JHCTI = 212         /* LOOK FOR BLANK IN POS. 212+   */\n           DO WHILE &SUBSTR(&JHCTI,&JHCTNMS1) \u00ac= &STR( )\n              SET &JHCTI = &JHCTI + 1 /* SKIP TO NEXT POSITION       */\n           END                      /*                               */\n           SET &JHCTNMS2 = &SUBSTR(&JHCTI+1:&JHCTLN,&STR(&JHCTNMS1))\n           SET &JHCTNMS1 = &SUBSTR(1:&JHCTI,&STR(&JHCTNMS1))\n        END                         /*                               */\nSET &MSG2 =                         /*                               */\nDISPLAY2:                           /*                               */-\nISPEXEC DISPLAY PANEL(JHAYP12B) MSG(&MSG2) /* 2ND PANEL      01/16/84*/\nIF &LASTCC > 4                      /*                               */-\n   THEN DO                          /*                               */\n           ISPEXEC TBEND &JHCTNM1   /*                               */\n           GOTO DISPLAY1            /*                               */\n        END                         /*                               */\nSET &MSG2 =                         /*                               */\nSET &SAMESW = OFF                   /* NORMALLY NEW NAME IS DIFFERENT*/\nIF &JHCTNM1 = &JHCTNM2              /* IF NEW NAME = OLD NAME        */-\n   THEN DO                          /*                               */\n           IF &JHCTREPL \u00ac= REPLACE  /* IF REPLACE NOT SPECIFIED      */-\n              THEN GOTO ERR002      /* THEN SAMEW NAME NOT ALLOWED   */\n           SET &JHCTNM2 = JHCTTEMP  /* CREATE WITH TEMPORARY NAME    */\n           SET &SAMESW = ON         /* SET SWITCH                    */\n        END                         /*                               */\nISPEXEC TBCREATE &JHCTNM2 +\n            KEYS(&JHCTKEYS) NAMES(&JHCTNMS1 &JHCTNMS2) WRITE &JHCTREPL\nIF &LASTCC = 8                      /*                               */-\n   THEN DO                          /*                               */\nERR002:    SET &MSG2 = JHAYM122     /* TABLE ALREADY EXISTS  01/16/84*/\n           GOTO DISPLAY2            /*                               */\n        END                         /*                               */\nSET &JHCTCTI = 0                    /* INITIALIZE INPUT COUNTER      */\nSET &JHCTCTO = 0                    /* INITIALIZE OUTPUT COUNTER     */\nTBSKIP: ISPEXEC TBSKIP &JHCTNM1 SAVENAME(JHCTSVNM) /*                */\nIF &LASTCC = 8 THEN GOTO FINISH     /*                               */\nSET &JHCTCTI = &JHCTCTI + 1         /*                               */\nIF &STR(&JHCTSVNM) =                /*                               */-\n   THEN SET &JHCTSVNM = &STR(())    /*                               */\nIF &JHCTFUNQ = Y                    /* IF FORCE UNIQUE KEY SPECIFIED */-\n   THEN IF &STR(&JHCTKEY1) \u00ac=       /* AND THERE IS A KEY FIELD      */-\n           THEN DO                  /* THEN SET 1ST KEY FLD = REC NO.*/\n                   SET &JHCTI = &STR(X0000000&JHCTCTI) /*MIN 8 DIGITS*/\n                   SET &JHCTLN = &LENGTH(&JHCTI)\n                   SET &&JHCTKEY1 = &SUBSTR(&JHCTLN-7:&JHCTLN,&JHCTI)\n                END                 /*                               */\nISPEXEC TBADD &JHCTNM2 SAVE&JHCTSVNM /*                              */\nIF &LASTCC = 0                      /* IF THE ADD WORKED             */-\n   THEN SET &JHCTCTO = &JHCTCTO + 1 /* THEN INCREMENT OUTPUT COUNTER */\nGOTO TBSKIP                         /*                               */\nFINISH: ISPEXEC TBEND &JHCTNM1      /*                               */\nIF &SAMESW = ON                     /*                               */-\n   THEN SET &WNAME = &STR(NAME(&JHCTNM1)) /*                         */\n   ELSE SET &WNAME =                /*                               */\nISPEXEC TBCLOSE &JHCTNM2 PAD(50) &WNAME /*                           */\nIF &SAMESW = ON                     /*                               */-\n   THEN SET &JHCTNM2 = &JHCTNM1     /* RESET NEW NAME FOR MSGS       */\nISPEXEC LOG MSG(JHAYM127)           /*                       01/16/84*/\nISPEXEC LOG MSG(JHAYM128)           /*                       01/16/84*/\nISPEXEC LOG MSG(JHAYM129)           /*                       01/16/84*/\nIF &JHCTCTI = &JHCTCTO              /*                               */-\n   THEN SET &MSG1 = JHAYM123        /* OPERATION COMPLETED   01/16/84*/\n   ELSE SET &MSG1 = JHAYM124      /* SOME RECS LOST (DUP KEY)01/16/84*/\nGOTO DISPLAY1                       /*                               */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JH#YDTBL": {"ttr": 1284, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0                               /*                              */\n/*    RON MURA, TECHNICAL SERVICES, ISPF V1R1M0                      */\n/* 10/18/83 MURA - ADDED SUPPORT FOR MULTIPLE DISPLAY FORMATS        */\n/* 10/18/83 MURA - ALL VARIABLES CHANGED TO BEGIN WITH \"JHY\"         */\nCONTROL NOFLUSH                      /*                              */\nSET &JHYMSG1 =                       /* MESSAGE FOR ENTRY PANEL      */\nSET &JHYMSG2 =                       /* MESSAGE FOR TABLE DISPLAY    */\nINIT: +\nISPEXEC DISPLAY PANEL(ZYDTBL0) MSG(&JHYMSG1) /* GET TABLE NM 10/18/83*/\nIF &LASTCC = 8 THEN EXIT CODE(0)     /* QUIT IF END COMMAND ENTERED  */\nSET &JHYMSG1 =                       /* RESET MESSAGE                */\nSET &JHYTBDPL = &STR(ZYDTBL&JHYDFMT) /* SET NAME/TBDISPL PNL 10/18/83*/\nSET &JHYPNL2 = &JHYTBDPL             /* SET NAME OF TABLE DSPL PANEL */\nSET &JHYCLOSE = Y                    /* NORMALLY CLOSE TBL WHEN DONE */\nOPENTBL: ISPEXEC CONTROL ERRORS RETURN /*                            */\nISPEXEC TBOPEN &JHYTBNM NOWRITE      /*                              */\nSET &JHYRC = &LASTCC                 /*                              */\nISPEXEC CONTROL ERRORS CANCEL        /*                              */\nIF &JHYRC = 8                        /* TABLE DOES NOT EXIST         */-\n   THEN DO                           /*                              */\n           SET &JHYMSG1 = ZYDT001    /*                              */\n           GOTO INIT                 /*                              */\n        END                          /*                              */\nIF &JHYRC > 8                        /*                      10/18/83*/-\n   THEN IF &ZERRMSG = ISPT033        /* IF TBL ALREADY OPEN  10/18/83*/-\n           THEN SET &JHYCLOSE = N    /* THEN JUST USE IT     10/18/83*/\n           ELSE DO                   /*                      10/18/83*/\n                   SET &JHYMSG1 = &ZERRMSG /*                10/18/83*/\n                   GOTO INIT         /*                      10/18/83*/\n                END                  /*                      10/18/83*/\nISPEXEC TBQUERY &JHYTBNM KEYS(JHYKEYS) NAMES(JHYNAMES) ROWNUM(JHYRWNUM)\nIF &JHYRWNUM = 0                     /* IF TABLE IS EMPTY            */-\n   THEN DO                           /*                              */\n           SET &JHYMSG1 = ZYDT004    /* THEN SHOW ERROR MSG          */\n           GOTO INIT                 /*                              */\n        END                          /*                              */\nSET &JHYI = 1                        /*                      10/18/83*/\nDO WHILE &JHYI <= &JHYMXFLD          /*                      10/18/83*/\n   SET &JHYVAR&JHYI = &STR()         /* SET ALL VAR NAMES TO NULLS   */\n   SET &JHYTTL&JHYI = &STR()         /* SET ALL VAR TITLES TO NULLS  */\n   SET &JHYI = &JHYI + 1             /*                      10/18/83*/\nEND                                  /*                      10/18/83*/\nSET &JHYNUMVR = 1                    /* PROCESS LIST OF VAR NAMES    */\nSET &JHYPOS = 1                      /*                              */\nSET &JHYWORK =                       /*                              */\nSET &JHYSTR = &STR(&JHYKEYS)         /* PROCESS KEYS FIRST           */\nIF &STR(&JHYKEYS) =                  /* IF NO KEYS                   */-\n   THEN IF &STR(&JHYNAMES) =         /* THEN IF NO \"NAME\" VARS       */-\n           THEN DO                   /*                              */\n                   SET &JHYMSG1 = ZYDT002  /* CANNOT PROCESS TABLE   */\n                   GOTO INIT         /*                              */\n                END                  /*                              */\n           ELSE GOTO ENDSTR          /* NO KEYS BUT \"NAMES\"          */\nLOOP: SET &JHYPOS = &JHYPOS + 1      /*                              */\nSET &JHYC = &SUBSTR(&JHYPOS,&JHYSTR) /* PICK OFF ONE CHARACTER       */\nIF &JHYC = &STR()) | &JHYC = &STR( ) /* IF END OF A VARIABLE NAME    */-\n   THEN DO                           /*                              */\n           SET &JHYVAR&JHYNUMVR = &JHYWORK /* SAVE FLD NAME IN VAR#  */\n           SET &JHYWORK =            /*                              */\n           SET &JHYTITLE = &&JHYVAR&JHYNUMVR /* SET TO \"&JHYVAR#\"    */\n           SET &JHYTITLE = &JHYTITLE /* SET TO VALUE OF &JHYVAR#     */\n           IF &STR(&JHYSTR) = &STR(&JHYKEYS) /* IF PROCESSING \"KEYS\" */-\n              THEN SET &JHYTTL&JHYNUMVR = &STR(&JHYTITLE&STR(*))\n              ELSE SET &JHYTTL&JHYNUMVR = &STR(&JHYTITLE) /* 10/18/83*/\n           SET &JHYNUMVR = &JHYNUMVR + 1 /*                          */\n           IF &JHYNUMVR > &JHYMXFLD  /*                              */-\n              THEN GOTO HAVEALL      /*                              */\n           IF &JHYC = &STR())        /*                              */-\n              THEN GOTO ENDSTR       /*                              */\n           GOTO LOOP                 /*                              */\n        END                          /*                              */\nSET &JHYWORK = &STR(&JHYWORK&JHYC)   /* CONCATENATE NEXT CHAR        */\nGOTO LOOP                            /*                              */\n\nENDSTR: SET &JHYPOS = 1              /*                              */\nIF &STR(&JHYSTR) = &STR(&JHYNAMES) | /*                              */-\n      &STR(&JHYNAMES) =              /* IF FINISHED WITH ALL \"NAMES\" */-\n   THEN GOTO HAVEALL                 /*                              */\nSET &JHYSTR = &STR(&JHYNAMES)        /* NOW PROCESS NON-KEYS         */\nGOTO LOOP                            /*                              */\n\nHAVEALL: ISPEXEC TBDISPL &JHYTBNM PANEL(&JHYPNL2) MSG(&JHYMSG2)\nSET &JHYRC = &LASTCC                 /*                              */\nIF &JHYRC < 8 && &ZCMD \u00ac=            /*                              */-\n   THEN DO                           /*                              */\n           SET &JHYMSG2 = ISPZ001    /* INVALID COMMAND              */\n           SET &JHYPNL2 =            /*                              */\n           GOTO HAVEALL              /*                              */\n        END                          /*                              */\nIF &JHYCLOSE \u00ac= N                    /*                      10/18/83*/-\n   THEN ISPEXEC TBEND &JHYTBNM       /*                              */\nSET &JHYMSG2 =                       /*                              */\nSET &JHYPNL2 = &JHYTBDPL             /*                              */\nSET &ZCMD =                          /*                              */\nGOTO INIT                            /*                              */\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JH#YPUP": {"ttr": 1287, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 T(CLOSE) DEBUG TBNM(SYSPUP)\n/*    RON MURA, TECHNICAL SERVICES                          */\n/* 01/16/84 KMURA - PANEL, MSG ID, CLIST NAMES CHANGED               */\n/* 01/16/84 KMURA - VERIFICATION MOVED TO PANEL                      */\nCONTROL NOFLUSH\nSET &PNL = JHAYP141                 /* INITIALIZE VALUES     01/16/84*/\nSET &MSG =\nSET &CSR =\nSET &CSRROW =\nSET &ZTDTOP = 1\n\nISPEXEC TBOPEN &TBNM\nIF &LASTCC = 8 +\n   THEN DO                          /* CREATE NEW TABLE              */\n           ISPEXEC TBCREATE &TBNM NAMES(PANEL OPTION KEYWORD KEYFLAG +\n                        TEXTNUM TEXT1 TEXT2 TEXT3 TEXT4 SELECT +\n                        DATE USERID)\n           GOTO FILLTBL\n        END\nISPEXEC TBQUERY &TBNM ROWNUM(ROWNUM) /* MAKE SURE TABLE NOT EMPTY    */\nIF &ROWNUM \u00ac= 0 THEN GOTO TBDISPL\nFILLTBL: +\nSET &PANEL =\nSET &OPTION =\nSET &KEYWORD =\nSET &KEYFLAG =\nSET &TEXTNUM =\nSET &TEXT1 =\nSET &TEXT2 =\nSET &TEXT3 =\nSET &TEXT4 =\nSET &SELECT =\nSET &DATE = &STR(&SYSDATE)\nSET &USERID = &STR(&SYSUID)\nISPEXEC TBADD &TBNM\nISPEXEC TBADD &TBNM\nISPEXEC TBADD &TBNM\nISPEXEC TBTOP &TBNM\n\nTBDISPL: +\nISPEXEC TBTOP &TBNM                 /* POSITION CRP TO CORRECT ROW   */\nISPEXEC TBSKIP &TBNM NUMBER(&ZTDTOP)\nISPEXEC TBQUERY &TBNM POSITION(POS)\nIF &DEBUG = DEBUG +\n   THEN WRITE TABLE POSITIONED TO ROW &POS (&ZTDTOP)\nTBDISPL2: +\nIF &DEBUG = DEBUG +\n   THEN WRITE PANEL=&PNL MSG=&MSG CURSOR=&CSR CSRROW=&CSRROW +\n              ZTDTOP=&ZTDTOP\nISPEXEC TBQUERY &TBNM ROWNUM(ROWNUM)\nIF &EVAL(&ROWNUM) = 0 +\n   THEN DO                          /* MUST HAVE AT LEAST 1 ROW      */\n           SET &PANEL =\n           SET &OPTION =\n           SET &KEYWORD =\n           SET &KEYFLAG =\n           SET &TEXTNUM =\n           SET &TEXT1 =\n           SET &TEXT2 =\n           SET &TEXT3 =\n           SET &TEXT4 =\n           SET &SELECT =\n           SET &DATE = &STR(&SYSDATE)\n           SET &USERID = &STR(&SYSUID)\n           ISPEXEC TBADD &TBNM\n        END\nSET &SEL =                          /* ALWAYS RESET BEFORE TBDISPL   */\nISPEXEC TBDISPL &TBNM PANEL(&PNL) MSG(&MSG) CURSOR(&CSR) +\n                                              CSRROW(&CSRROW)\nSET &RC = &LASTCC\nSET &PNL =                          /* ONLY USE PANEL NAME ONCE      */\nSET &MSG =                          /* INITIALIZE AFTER TBDISPL      */\nSET &CSR =                          /* INITIALIZE AFTER TBDISPL      */\nSET &CSRROW =                       /* INITIALIZE AFTER TBDISPL      */\nISPEXEC VGET ZTDTOP                 /* GET MOST RECENT TOP ROW       */\nISPEXEC TBQUERY &TBNM POSITION(POS) /* DETERMINE CRP AFTER TBDISPL */\nIF &DEBUG = DEBUG +\n   THEN WRITE RC=&RC POS=&POS PANEL=&PANEL ZTDTOP=&ZTDTOP\n\n/* PROCESS PRIMARY COMMAND, IF ANY                                   */\nIF &STR(&ZCMD) \u00ac= +\n   THEN IF &STR(&ZCMD) = C | &STR(&ZCMD) = CAN | &STR(&ZCMD) = CANCEL +\n           THEN DO\n                   ISPEXEC TBEND &TBNM\n                   EXIT CODE(0)\n                END\n\nIF &POS = 0 THEN GOTO RCCHK         /* CRP AT TOP MEANS NO MORE CHNGS*/\n\n/* VALIDATE EACH ROW THAT HAS BEEN ALTERED                           */\n/* VALIDATE SELECTION CODE ON THE LINE, IF ANY                       */\nIF &SELN = THEN SET &SELN = 1\nIF &SELT \u00ac= D THEN +\nIF &STR(&PANEL) = +\n   THEN IF &STR(&OPTION&KEYWORD&KEYFLAG&TEXT1&TEXT2+\n                &TEXT3&TEXT4&SELECT)\u00ac= +\n           THEN DO                  /* PANEL NAME IS REQUIRED        */\n                   SET &MSG = JHAYM141 /*                    01/16/84*/\n                   SET &CSR = PANEL\n                   SET &CSRROW = &POS\n                   GOTO TBDISPL2\n                END\n           ELSE\n   ELSE DO\n           IF &SEL = THEN SET &DATE=&STR(&SYSDATE)\n           IF &SEL = THEN SET &USERID =&STR(&SYSUID)\n           IF &TEXT1 \u00ac= THEN SET &TEXTNUM = 1\n           IF &TEXT2 \u00ac= THEN SET &TEXTNUM = 2\n           IF &TEXT3 \u00ac= THEN SET &TEXTNUM = 3\n           IF &TEXT4 \u00ac= THEN SET &TEXTNUM = 4\n           ISPEXEC TBPUT &TBNM           /* MODIFY ROW     */\n        END\nSET &X = 0\nIF &SELT = R +\n   THEN DO\n           SET &CSR    = PANEL\n           SET &CSRROW = &POS + 1\n           SET &DATE=&STR(&SYSDATE)\n           SET &USERID =&STR(&SYSUID)\n           DO WHILE &X < &SELN\n              ISPEXEC TBADD &TBNM\n              SET &X = &X + 1\n           END\n        END\nIF &SELT = I +\n   THEN DO\n           SET &CSR    = PANEL\n           SET &CSRROW = &POS + 1\n           DO WHILE &X < &SELN\n              SET &PANEL =\n              SET &OPTION =\n              SET &KEYWORD =\n              SET &KEYFLAG =\n              SET &TEXTNUM =\n              SET &TEXT1 =\n              SET &TEXT2 =\n              SET &TEXT3 =\n              SET &TEXT4 =\n              SET &SELECT =\n              SET &DATE=&STR(&SYSDATE)\n              SET &USERID =&STR(&SYSUID)\n              ISPEXEC TBADD &TBNM\n              SET &X = &X + 1\n           END\n        END\nIF &SELT = D +\n   THEN DO WHILE &X < &SELN\n              ISPEXEC TBDELETE &TBNM\n              ISPEXEC TBSKIP &TBNM NUMBER(+1)\n              IF &LASTCC = 8 +\n                 THEN SET &X = &SELN\n              SET &X = &X + 1\n        END\nIF &RC = 0 +\n   THEN DO\n           SET &PNL = JHAYP141       /*                      01/16/84*/\n           GOTO TBDISPL\n        END\nGOTO TBDISPL2                       /* ADDITONAL DATA REMAINS        */\n\nRCCHK: +\nIF &RC < 8 +\n   THEN DO                          /* ENTER KEY WAS PRESSED         */\n           SET &PNL = JHAYP141       /*                      01/16/84*/\n           GOTO TBDISPL             /* GO DISPLAY TABLE AGAIN        */\n        END\n\nISPEXEC TBTOP &TBNM                 /* END KEY PRESSED               */\nTBSKIP: +\nISPEXEC TBSKIP &TBNM NUMBER(+1)     /* GET NEXT TABLE RECORD         */\nIF &LASTCC = 8 THEN GOTO TBCLOSE\nIF &STR(&PANEL) = +\n   THEN ISPEXEC TBDELETE &TBNM      /* REMOVE BLANK LINES FROM TABLE */\nGOTO TBSKIP\n\nTBCLOSE: +\nISPEXEC TB&T &TBNM PAD(50) REPLCOPY /* CLOSE TABLE BEFORE LEAVING    */\nEXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JH#YPUPG": {"ttr": 1291, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0 TBNM(SYSPUP)                 /*                               */\n/*    RON MURA, TECHNICAL SERVICES                                   */\n/* 01/17/84 CLIST, PANEL, MSG ID NAMES CHANGED                       */\n/* 01/30/84 MURA - FREE AND REALLOC. ISPPMOD AFTER DISPLAY           */\nCONTROL NOFLUSH NOPROMPT\nSET &MSG =\nDISPLAY: +\nISPEXEC DISPLAY PANEL(JHAYP142) MSG(&MSG) /*                 01/17/84*/\nSET RC = &LASTCC                     /*                      01/30/84*/\nCONTROL NOMSG\nFREE    F(ISPPMOD)\nCONTROL MSG\nIF &RC \u00ac= 0 THEN EXIT CODE(0)        /*                      01/30/84*/\nSET &MSG =\n\nERROR DO\n      ERROR OFF\n      SET &MSG = JHA@M006              /* ALLOCATION ERROR   01/17/84*/\n      GOTO DISPLAY\n      END\nIF &VOL = THEN ALLOC F(ISPPMOD) DA('&TDSN') SHR\n          ELSE ALLOC F(ISPPMOD) DA('&TDSN') SHR UNIT(&TUNIT) VOL(&VOL)\nERROR OFF\n\nISPEXEC LOG MSG(JHAYM149)            /*                      01/17/84*/\nISPEXEC SELECT PGM(ISPPUP) PARM(&TBNM)\nSET &TRC = &LASTCC\nSET &MSG = JHA@M000                  /*                      01/17/84*/\nIF &DATATYPE(&SUBSTR(1,&TRC)) \u00ac= NUM +\n   THEN SET &MSG = JHA@M002          /* INDICATE ABEND       01/17/84*/\nIF &TRC = 0 +\n   THEN GOTO DISPLAY\nSET &MSG = JHAYM145                  /*                      01/17/84*/\nGOTO DISPLAY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHA@M00": {"ttr": 1293, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* GENERAL-PURPOSE MESSAGES USED IN VARIOUS PLACES                   */\n/* BY JOHN HANCOCK MODIFICATIONS/EXTENSIONS TO PDF.                  */\n\nJHA@M000 'FUNCTION ENDED RC=&TRC.'\n'INVOKED FUNCTION HAS COMPLETED.  RETURN CODE IS &TRC..'\n\nJHA@M001 'FUNCTION ENDED RC=&TRC.' .ALARM=YES\n'INVOKED FUNCTION HAS COMPLETED.  RETURN CODE IS &TRC..'\n\nJHA@M002 'ABEND &TRC'              .ALARM=YES\n'INVOKED FUNCTION HAS ABENDED &TRC..'\n\nJHA@M003 'DATA SET NOT CATALOGED'  .ALARM=YES\n'DATA SET &TDSN WAS NOT FOUND IN CATALOG.'\n\nJHA@M004 'DATA SET NOT FOUND'      .ALARM=YES\n'DATA SET &TDSN WAS NOT FOUND ON VOLUME &TVOL..'\n\nJHA@M005 'VOLUME NOT MOUNTED'      .ALARM=YES\n'REQUIRED VOLUME IS NOT MOUNTED AND CANNOT BE ACCESSED.'\n\nJHA@M006 'ALLOCATION ERROR'        .ALARM=YES\n'ERROR ALLOCATING DATA SET - VERIFY EXISTENCE, CATALOG STATUS, ETC.'\n\nJHA@M007 'MEMBER NOT FOUND'        .ALARM=YES\n'&TMEM IS NOT A MEMBER OF &TDSN..'\n\nJHA@M008 'MEMBER MISSING/INVALID'  .ALARM=YES\n'CORRECT THE INVALID OR MISSING MEMBER NAME (IN PARENTHESES).'\n\nJHA@M009 'MEMBER NAME NOT ALLOWED' .ALARM=YES\n'THE DATA SET NAME MAY NOT INCLUDE A MEMBER NAME (IN PARENTHESES).'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHA@M01": {"ttr": 1295, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* GENERAL-PURPOSE MESSAGES USED IN VARIOUS PLACES                   */\n/* BY JOHN HANCOCK MODIFICATIONS/EXTENSIONS TO PDF.                  */\n\nJHA@M010 'MEMBER IS AN ALIAS'      .ALARM=YES\n'&TMEM IS AN ALIAS OF ANOTHER MEMBER.'\n\nJHA@M011 'MEMBER HAS NO STATS'     .ALARM=YES\n'&TMEM HAS NO ISPF STATS NOR IEBUPDTE SSI.'\n\nJHA@M012 'I/O ERROR'               .ALARM=YES\n'I/O ERROR ON BLDL OF &TDSN..'\n\nJHA@M013 'INSUFFICIENT CORE'       .ALARM=YES\n'INSUFFICIENT STORAGE IS AVAILABLE FOR BLDL.'\n\nJHA@M014 'ERROR OPENING LIBRARY'   .ALARM=YES\n'ERROR ENCOUNTERED TRYING TO OPEN &TDSN..'\n\nJHA@M015 'NOT A LIBRARY'           .ALARM=YES\n'THE DATA SET IS NOT OF PARTITIONED ORGANIZATION.'\n\nJHA@M016 'NOT A LOAD LIBRARY'      .ALARM=YES\n'THE LIBRARY DOES NOT HAVE AN UNDEFINED RECORD FORMAT.'\n\nJHA@M018 'MEMBER &TMEM SAVED'\n'EDIT CHANGES TO &TDSN(&TMEM) HAVE BEEN SAVED.'\n\nJHA@M019 'DATA SET IN USE'         .ALARM=YES\n'ANOTHER JOB IS USING &TDSN..  TRY LATER.'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHA@M02": {"ttr": 1297, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* GENERAL-PURPOSE MESSAGES USED IN VARIOUS PLACES                   */\n/* BY JOHN HANCOCK MODIFICATIONS/EXTENSIONS TO PDF.                  */\n\nJHA@M020 'QUOTES NOT ALLOWED'      .ALARM=YES\n'QUOTES (APOSTROPHES) SHOULD NOT BE USED WITH THIS PARAMETER.'\n\nJHA@M021 'ERROR - SAME DATA SET'   .ALARM=YES\n'THE OLD AND NEW DATA SETS SPECIFIED ARE THE SAME.'\n\nJHA@M022 'ENTER DELIV. STATION'    .ALARM=YES\n'DELIVERY INFORMATION MUST BE ENTERED HERE OR IN JOBPARM R= PARAMETER.'\n\nJHA@M023 'INVALID JOB CHARACTER'   .ALARM=YES\n'JOB CHARACTER MUST BE ALPHAMERIC (0-9, A-Z, $, #, @).'\n\nJHA@M024 'INVALID OPTION'          .ALARM=YES\n'ENTER ONE OF THE LISTED OPTIONS.'\n\nJHA@M025 'MEMBER NOT ALLOWED'      .ALARM=YES\n'A MEMBER NAME MAY NOT BE GIVEN WITH A SELECTION LIST AS INPUT.'\n\nJHA@M026 'PUNCH FILE EMPTY'        .ALARM=YES\n'SYSPUNCH FILE IS EMPTY.'\n\nJHA@M027 'INVALID VOLUME SERIAL'   .ALARM=YES\n'J.H. DASD VOLUME SERIALS MUST BE 1 ALPHA FOLLOWED BY 5 ALPHAMERICS.'\n\nJHA@M028 'INVALID VOLUME SERIAL'   .ALARM=YES\n'MUST BE SIX ALPHAMERIC CHARACTERS.'\n\nJHA@M029 'JH FG   - &TFUNC'\n'&TFUNC2'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHA@M03": {"ttr": 1299, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* GENERAL-PURPOSE MESSAGES USED IN VARIOUS PLACES                   */\n/* BY JOHN HANCOCK MODIFICATIONS/EXTENSIONS TO PDF.                  */\n\nJHA@M031 'INVALID COMMAND'         .ALARM=YES\n'VALID COMMANDS ARE END AND CANCEL (CAN).'\n\nJHA@M033 'INVALID LINE COMMAND'    .ALARM=YES\n'VALID LINE COMMANDS ARE I (INSERT), R (REPEAT), AND D (DELETE).'\n\nJHA@M034 'FIELD TOO SHORT'         .ALARM=YES\n'MUST BE AT LEAST 3 CHARACTERS.'\n\nJHA@M035 'FIELD TOO SHORT'         .ALARM=YES\n'MUST BE AT LEAST 2 CHARACTERS.'\n\nJHA@M036 'PARAMETER CONFLICT'      .ALARM=YES\n'MUTUALLY EXCLUSIVE FIELDS HAVE BEEN ENTERED; ONLY ONE MAY BE NON-BLANK.'\n\nJHA@M037 'IMBEDDED BLANK INVALID'  .ALARM=YES\n'IF MORE THAN ONE PARAMETER, SEPARATE THEM WITH COMMAS.'                '\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHA@M04": {"ttr": 1301, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* GENERAL-PURPOSE MESSAGES USED IN VARIOUS PLACES                   */\n/* BY JOHN HANCOCK MODIFICATIONS/EXTENSIONS TO PDF.                  */\n\nJHA@M040 'PARENTHESES INVALID'     .ALARM=YES\n'DON''T ENCLOSE PARAMETERS IN PARENTHESES.  ISPF WILL GENERATE PARENS.'\n\nJHA@M041 'INVALID PDF ENVIRONMENT' .ALARM=YES\n'PDF HAS BEEN INVOKED WITH AN UNAUTHORIZED APPLICATION ID, ''&ZAPPLID''.'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABH@0": {"ttr": 1537, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%!_)\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL --------------- JH BATCH PROCESSING --------------------------TUTORIAL\n%OPTION  ===>_ZCMD                                                             +\n%                     -----------------------------------\n                      |          JOHN HANCOCK           |\n                      |        BATCH PROCESSING         |\n                      -----------------------------------\n!  The JH batch processing option allows a processing program to be executed\n   as a batch job.  ISPF generates JCL for the job, based on information\n   you enter on the JH batch processing panels, and then submits the job for\n   execution.  The JH batch selection menu, which is displayed when option%8!\n   is entered on the primary option menu, allows you to select one of the\n   processing programs listed on that menu.\n\n The following topics are presented in sequence, or may be selected by number:\n    %0!- General information      % 9!- SCRIPT/VS\n    %1!- Assemble (+ link)        %10!- IMS Format purge\n    %2!- COBOL compile (+ link)\n    %3!- Copy\n    %4!- LISTLIB(90)              %13!- PURGELIB\n    %5!- PLI OPT compile (+ link)\n    %6!- SCUP\n    %7!- Linkage editor           %22!- JCLCHECK\n)PROC\n &ZSEL = TRANS( &ZCMD\n               0,JHABH@1             /*                      01/17/84*/\n               1,JHABH01             /*                      01/17/84*/\n               2,JHABH02             /*                      01/17/84*/\n               3,JHABH03             /*                      01/17/84*/\n               4,JHABH04             /*                      01/17/84*/\n               5,JHABH05             /*                      01/17/84*/\n               6,JHABH06             /*                      01/17/84*/\n               7,JHABH07             /*                      01/17/84*/\n               9,JHABH09             /*                      01/17/84*/\n              10,JHABH10             /*                      01/17/84*/\n              13,JHABH13             /*                      01/17/84*/\n              22,JHABH22             /*                      01/17/84*/\n               )\n &ZUP = ISR00003\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABH@1": {"ttr": 1539, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL ----- JH BATCH PROCESSING - GENERAL INFORMATION ------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n%\n                      -----------------------------------\n                      |  JOHN HANCOCK BATCH PROCESSING  |\n                      |       GENERAL INFORMATION       |\n                      -----------------------------------\n+  The JH batch processing option generates job statements and JCL for\n   executing processing and utility programs.  Generated JCL is placed in a\n   temporary data set until a request is made for the job to be submitted,\n   canceled, or edited.\n\n   Screen flow in the John Hancock batch processing option (9) works in the a\n   manner similar to batch processing option 5.  When 9 is entered on the\n   primary option menu, the JH batch selection menu is displayed.  In addition\n   to the suboption, the variuos job information fields should be reviewed and\n   modified, if necessary.\n\n   Job JCL is generated based on the parameters entered on the JH batch\n   selection menu.  Some validity is performed, but it is up to the user to\n   ensure that the fields contain valid JCL parameters.\n\n                     (continued on next page)\n)PROC\n &ZCONT = JHABH@2                    /*                      01/17/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABH@2": {"ttr": 1541, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL -------------------- JH BATCH ------------------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n   The following is an example of a correctly entered JH batch screen:\n+\n+JOB INFORMATION:  (Verify before proceeding)\n+  JOBCHAR   %===> 1+     ACCOUNT    %===> D77999+     AREA    %===> DEB+\n+  CLASS     %===> 1+    +DEL (73-80)%===> B3 STA 1+   MSGLEVEL%===> 1  +\n+  MSGCLASS  %===> S+     NAME FIELD %===> XXX.000.00000.B3.001  +\n+  XEQ NODE  %===> BOSTON+JOBPARM    %===>                                +\n+  PRINT NODE%===> BOSTON+MAX CC     %===> 4   +\n+\n\n   As in option 5, the JOBCHAR will be incremented (except #, @, and $)\n   for each job submitted.  Quotes will not be generated around the NAME\n   FIELD; they should be included if necessary.  MSGLEVEL should be of\n   the form%1+or%1,1.+ No /* should be entered in the JOBPARM field;\n  %/*JOBPARM+will be generated by ISPF.  DELIVERY (73-80) is optional;\n   if omitted, JOBPARM%ROOM=+should be used.  MAX CC is the maximum\n   allowable condition code; if exceeded, the job will be terminated.\n   MAX CC may be left blank.\n\n                     (continued on next page)\n)PROC\n &ZCONT = JHABH@3                    /*                      01/17/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABH@3": {"ttr": 1543, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------------- JH BATCH ------------------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n   After each suboption has been processed, the JH batch selection menu is\n   displayed.  This time the generated job JCL is shown.  Since it has already\n   been written to the temporary file, it may not be modified.\n\n   Additional JCL may be generated by selecting other options.  Entering\n   the%END+or%RETURN+commands will cause the job to be submitted.\n   Entering%C+on the option line will cause termination of the JH batch option\n   without submitting the job.  Entering%E+will allow editing of the generated\n   JCL before terminating the option.\n\n   As with other ISPF options, it is possible to bypass the intermediate\n   selection menu by entering%9.subopt+on the primary option menu.  In this\n   case the suboption and job JCL parameters are still verified.  If\n   verification fails, the JH batch selection menu will be displayed with an\n   error message so that the invalid parameters may be corrected.  The job will\n   be submitted as soon as ENTER is pressed on the suboption screen screen\n   (providing all fields are valid).  Entering the%END+command will terminate\n   the option without job submission.  Entering%9.subopt/E+will allow editing\n   of the generated JCL, instead of submitting the job.\n\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABH01": {"ttr": 1545, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL -------------- JH BATCH ASSEMBLE (AND LINK) ----------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n Notes on this option:\n\n+  Input is a single member specified by the project, group, type, and\n   member fields or, if it is entered, the \"other DSN\" field.  Example:\n\n      PROJECT%===> TSO     +\n      GROUP  %===> DUS     +\n      TYPE   %===> SOURCLIB+\n      MEMBER %===>         +  OTHER DSN%===> 'DUS.SOURCLIB(ASMMEM)'+\n\n+  Macro libraries may be specified on the lines provided.  These will\n   be searched before 'SYS1.MACLIB' and 'JH.MACLIB'. %Note:+the input\n   library will not be searched for macros unless it is also specified\n   as a maclib.\n\n+  The \"LINK TO\" field should specify a link library.  If the link\n   member name is blank, the member name in the link library defaults to\n   the source member name.  Link edit parms should not be contained in\n   quotes; quotes will be generated.  Link syslibs specified will be\n   searched ahead of 'SYS1.PRODUCT'.\n)PROC\n &ZUP = JHABH@0\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHABH02": {"ttr": 1547, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL ----------- JH BATCH COBOL COMPILE (AND LINK) --------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n NOTES ON THIS OPTION:\n\n+  INPUT IS A SINGLE MEMBER SPECIFIED BY THE PROJECT, GROUP, TYPE, AND\n   MEMBER FIELDS OR, IF IT IS ENTERED, THE \"OTHER DSN\" FIELD.  EXAMPLE:\n\n      PROJECT%===> TSO     +\n      GROUP  %===> DUS     +\n      TYPE   %===> SOURCLIB+\n      MEMBER %===>         +  OTHER DSN%===> 'DUS.SOURCLIB(COBMEM)'+\n\n+  COMPILE AND LINK EDIT OPTIONS SHOULD NOT BE ENCLOSED IN QUOTES;\n   QUOTES WILL BE GENERATED BY ISPF.\n   COPYLIBS MAY BE SPECIFIED ON THE LINES PROVIDED. %NOTE:+THE INPUT\n   LIBRARY WILL NOT BE SEARCHED UNLESS IT IS ALSO SPECIFIED AS A COPYLIB.\n\n+  THE \"LINK TO\" SHOULD SPECIFY A LINK LIBRARY.  IF THE LINK MEMBER\n   NAME IS BLANK, THE MEMBER NAME IN THE LINK LIBRARY DEFAULTS\n   TO THE SOURCE MEMBER NAME SPECIFIED.  LINK SYSLIBS\n   SPECIFIED WILL BE SEARCHED AHEAD OF 'SYS1.COBLIB' AND 'SYS1.PRODUCT'.\n   ALL LINK EDIT FIELDS ARE IGNORED IF%COBVC+IS ENTERED AS THE PROC.\n)PROC\n &ZUP = JHABH@0\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHABH03": {"ttr": 1549, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL --------------------- BATCH COPY ---------------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n%                    -----------------------------------\n%                    |          BATCH COPY             |\n%                    -----------------------------------\n+\n+  The batch copy panel allows you to request that JCL be generated\n+  to execute the IEBCOPY.  JCL is generated from the parameters\n+  you specify on this panel.\n+\n The following topics are presented in sequence, or may be selected by number:\n%  1+- Input data set\n%  2+- Output data sets\n)PROC\n &ZSEL = TRANS( &ZCMD\n               1,JHABH03A\n               2,JHABH03B\n               )\n &ZUP = JHABH@0\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABH03A": {"ttr": 1551, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ---------- BATCH COPY - INPUT DATA SET ---------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n+  INPUT TO THE COPY OPERATION IS A  PARTITIONED DATA SET.  EITHER\n   'PROJECT.LIBRARY.TYPE' OR 'OTHER DATA SET NAME' MAY BE SPECIFIED.\n+\n%FROM+ISPF LIBRARY:\n+   PROJECT%===> TSO     +\n+   GROUP  %===> DUS     +\n+   TYPE   %===> SOURCLIB+\n%FROM+OTHER PARTITIONED DATA SET:\n+   DATA SET NAME%===> 'DUS.SOURCLIB' +\n+\n+  ADDITIONAL INPUT IS PROVIDED BY MEMBER SELECTION CARDS.\n+\n+   MEMBER:       RENAME AS:             MEMBER:       RENAME AS:\n%===> OLDNAME  ===> NEWNAME           ===>          ===>\n%===> MEM2     ===>                   ===>          ===>\n%===>          ===>                   ===>          ===>\n+\n+   ALL MEMBERS SPECIFIED WILL BE COPIED TO THE OUTPUT PARTITIONED\n+   DATA SET.  THOSE TO BE RENAMED SHOULD HAVE THE NEWNAME ENTERED IN\n+   THE \"RENAME AS\" COLUMN.\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHABH03B": {"ttr": 1553, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------- BATCH COPY - OUTPUT -------------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n+  INPUT TO THE COPY OPERATION IS A PARTITIONED DATA SET AND MEMBER\n   SELECTION CARDS.  OUTPUT FROM THE OPERATION IS THE MEMBERS IN THE\n   OUTPUT DATA SET AND OUTPUT LISTING.  THE FOLLOWING ENTRIES IN THE\n   BATCH COPY MENU AFFECT OUTPUT:\n\n%TO+DATA SET NAME%===> 'ABC.SOURCLIB' +\n+   VOLUME SERIAL%===>\n+   SPACE        %===>\n+REPLACE LIKE-NAMED MEMBERS%===> YES\n+\n+  SPACE IS USED FOR NEW ALLOCATION (EXAMPLE: \"TRK,(5,5,12)\").\n+  \"REPLACE LIKE-NAMED MEMBERS\" INDICATES WHETHER OR NOT EXISTING\n+  MEMBERS IN THE OUTPUT LIBRARY SHOULD BE REPLACED BY THE COPY\n+  OPERATION.\n+\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHABH05": {"ttr": 1555, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL ------ JH BATCH PLI OPTIMIZER COMPILE (AND LINK) ------------ TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n NOTES ON THIS OPTION:\n\n   INPUT IS A SINGLE MEMBER SPECIFIED BY THE PROJECT, GROUP, TYPE, AND\n   MEMBER FIELDS OR, IF IT IS ENTERED, THE \"OTHER DSN\" FIELD.  EXAMPLE:\n\n      PROJECT%===> TSO     +\n      GROUP  %===> DUS     +\n      TYPE   %===> SOURCLIB+\n      MEMBER %===>         +  OTHER DSN%===> 'DUS.SOURCLIB(PLIMEM)'+\n\n   COMPILE AND LINK EDIT OPTIONS SHOULD NOT BE ENCLOSED IN QUOTES;\n   QUOTES WILL BE GENERATED BY ISPF.\n   PLI SYSLIBS MAY BE SPECIFIED ON THE LINES PROVIDED. %NOTE:+THE INPUT\n   LIBRARY WILL NOT BE SEARCHED UNLESS IT IS ALSO SPECIFIED AS A SYSLIB.\n\n   THE \"LINK TO\" SHOULD SPECIFY A LINK LIBRARY.  IF THE LINK MEMBER NAME\n   IS BLANK, IT WILL DEFAULT TO THE SOURCE MEMBER NAME SPECIFIED.  LINK\n   SYSLIBS SPECIFIED WILL BE SEARCHED AHEAD OF 'SYS1.PLIBASE'.  ALL LINK\n   EDIT FIELDS ARE IGNORED IF%PLIXC+IS ENTERED AS THE PROC.\n)PROC\n &ZUP = JHABH@0\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHABH07": {"ttr": 1557, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL -------------- JH BATCH LINKAGE EDITOR ---------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n NOTES ON THIS OPTION:\n\n   THE OPTION OPERATES DIFFERENTLY FROM OPTION 5.7.  IT ALLOWS A MODULE\n   TO BE RE-LINKED AND TO INCLUDE OTHER MODULES.\n\n   INPUTS ARE LOAD LIBRARIES.  THESE MAY BE ENTERED AS DD1 AND DD2:\n\n        INPUT LOAD LIBRARIES (Referenced by control cards):\n                    DD1%===> 'TSO.DUS.LINKLIB'             +\n                    DD2%===>                               +\n\n   IF, HOWEVER, THE OUTPUT AND INPUT LIBRARIES ARE THE SAME, IT IS NOT\n   NECESSARY TO SPECIFY A DD1 OR DD2, SINCE AN%INCLUDE SYSLMOD()+CARD\n   MADE BE USED. %NOTE:+DD1 AND DD2 WILL NOT BE INCLUDED AS AUTOMATICALLY\n   SEARCHED LIBRARIES UNLESS THEY ARE ALSO ENTERED AS \"LINK SYSLIBS\".\n\n   OUTPUT (SYSLMOD) IS THE \"MEMBER NAME\" SPECIFIED FOR THE \"LINK TO\"\n   LIBRARY.\n\n                      (CONTINUED ON NEXT PAGE)\n)PROC\n &ZUP = JHABH@0\n &ZCONT = JHABH07A\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHABH07A": {"ttr": 1559, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL -------------- JH BATCH LINKAGE EDITOR ---------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n\n   LINK EDIT PARMS SHOULD NOT BE ENCLOSED IN QUOTES; QUOTES WILL BE\n   GENERATED BY ISPF.\n\n   \"LINK SYSLIBS\" SPECIFY LOAD LIBRARIES TO BE AUTOMATICALLY SEARCHED.\n   LIBRARIES ENTERED ARE SEARCHED AHEAD OF 'SYS1.PRODUCT'.\n\n   CONTROL CARDS ARE ENTERED TO DIRECT PROCESSING.  EXAMPLE:\n\n        LINK CONTROL CARDS:\n                       %===> INCLUDE DD1(NEWMOD)    +\n                       %===> INCLUDE SYSLMOD(OLDMOD)+\n                       %===> SETSSI 00100692        +\n\n   A \"NAME\" CARD WILL BE GENERATED FROM THE \"MEMBER NAME\" ENTERED.\n\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHABH09": {"ttr": 1561, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL -------------------- BATCH SCRIPT/VS ------------------------ TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n Notes on this option:\n\n+  The batch SCRIPT option allows you to request that JCL be generated to\n   execute the SCRIPT processor.  JCL is constructed from the parameters you\n   specify on the panel.\n\n+  Sample parameter specifications and allowable values:\n\n+COPIES        %===> 1     +       PROFILE%===> SSPROF  +\n+CHAR1         %===> GP12  +       CHAR2  %===> GB12  +\n+DEVICE        %===> 3800N8S+      FCB    %===>      +(May be blank)\n+SPELLING CHECK%===> NO +(YES/NO)  MESSAGE%===> DELAY ID TRACE+\n+OTHER PARMS   %===> B(1.5I) SY(C 1)\n+\n+     CHAR1, CHAR2 - any allowable fonts.\n+     FCB          - blank for 3800N8S, S085 for 3800N6S.\n+     OTHER PARMS  - any SCRIPT/VS options except FILE and CONTINUE.\n\n+  NOTE:%CONTINUE+will be automatically generated by PDF.\n\n+                     (Continued on next page)\n)PROC\n &ZSEL = TRANS( &ZCMD\n               1,JHABH09A\n               )\n &ZUP = JHABH@0\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABH09A": {"ttr": 1563, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL --------- BATCH SCRIPT/VS (CONTINUED) ----------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n   THE ORDER IN WHICH MEMBERS ARE IMBEDED IS CONTROLLED BY THE ORDER\n   THE MEMBERS ARE PLACED IN THE MEMBER LIST.  ALL MEMBERS MUST BE IN\n   THE SAME LIBRARY.  AN INCORRECT MEMBER NAME WILL PRODUCE EITHER IN-\n   CORRECT RESELTS OR CAUSE THE JOB TO ABEND.\n\n   IN THE FOLLOWING EXAMPLE, THE ORDER OF IMBEDS WILL BE:\n   A, B, C, D, E.\n\n+MEMBER%===> A       +MEMBER%===> B       +MEMBER%===> C       +\n+MEMBER%===> D       +MEMBER%===> E       +MEMBER%===>         +\n+MEMBER%===>         +MEMBER%===>         +MEMBER%===>         +\n+MEMBER%===>         +MEMBER%===> +...\n+\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABH10": {"ttr": 1565, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel names changed                              */\n)BODY\n%TUTORIAL ---------------- BATCH FORMAT PURGE ------------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n+   Format purge removes MIDS/MODs and DIF/DOFs from FORMAT and REFERAL\n    libraries.  It also removes those entries from the MFS incore index\n    by executing the MFS service utility program.  For IMSA and IMST\n    purges, the job class will be forced to D and C, respectively to\n    ensure that the job is not started while on-line is up.  Because of\n    this option%10+may only be chosen from the initial JH BATCH\n    selection menu, not after any other option has been chosen.\n+\n+   The batch format purge option will not delete member from production\n    libraries.\n+\n+   See the MFS Users Guide for additional information.\n+\n)PROC\n &ZUP = JHABH@0\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABM00": {"ttr": 1567, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* 08/02/84 MURA - JHABM002 ADDED                                    */\n\nJHABM001 'JOB CLASS INSUFFICIENT'  .ALARM=YES\n'OPTION &ZCMD MAY NOT RUN AS A CLASS &JCLASS JOB.'\n\nJHABM002 'INVALID NODE'            .ALARM=YES\n'THE DESTINATION ENTERED HAS INVALID SYNTAX.'\n\nJHABM006 'JH BATCH- &JHBOPT'\n'&JHBLMSG'\n\nJHABM007 'MUST BE FIRST OPTION'    .ALARM=YES\n'OPTION &ZCMD MAY NOT BE SELECTED AFTER ANOTHER OPTION.'\n\nJHABM008 'JH BATCH-  JOB CANCELED'\n'&ZUSER&TJBCHR CANCELED (GENERATED JCL NOT SUBMITTED).'\n\nJHABM009 'JH BATCH- JOB SUBMITTED'\n'JOB &ZUSER&TJBCHR SUBMITTED.'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABM01": {"ttr": 1569, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM018 'JH BATCH- ASSEMBLY'\n'&ASPRC OF &TDSN..'\n\nJHABM019 'JH BATCH- ASSEMBLY'\n'&ASPRC OF &TDSN, LINK TO &TLNKLB2(&TLMEM).'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABM02": {"ttr": 1793, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM028 'JH BATCH- COBOL COMPILE'\n'&CLPRC OF &TDSN..'\n\nJHABM029 'JH BATCH- COBOL COMPILE'\n'&CLPRC OF &TDSN, LINK TO &TLNKLB2(&TLMEM).'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABM03": {"ttr": 1795, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM030 'INVALID REPLACE VALUE'         .ALARM=YES\n'REPLACE PARAMETER MUST BE ''YES'' OR ''NO''.'\n\nJHABM031 'INVALID MEMBER'                .ALARM=YES\n'FIRST MEMBER MUST BE VALID MEMBER NAME OR ''*ALL*''.'\n\nJHABM032 'MEMBER NAME REQUIRED'          .ALARM=YES\n'MEMBER NAME MUST BE ENTERED IF A NEW NAME IS PROVIDED.'\n\nJHABM033 'NAMES NOT DIFFERENT'           .ALARM=YES\n'NEW MEMBER NAME, IF ENTERED, MUST BE DIFFERENT FROM OLD MEMBER NAME.'\n\nJHABM034 'LIBRARIES NOT DIFFERENT'       .ALARM=YES\n'''FROM'' AND ''TO'' LIBRARIES MUST BE DIFFERENT.'\n\nJHABM035 'SPACE INVALID'                 .ALARM=YES\n'ENTER ''xxx,(p,s)'' WHERE ''xxx'' IS ''TRK'' OR ''CYL''.'\n\nJHABM036 'MEMBER NOT ALLOWED'            .ALARM=YES\n'MEMBER NAMES MAY NOT BE ENTERED WHEN ''*ALL*'' IS SPECIFIED.'\n\nJHABM039 'JH BATCH- IEBCOPY'\n'JCL GENERATED FOR COPY FROM &TDSN TO &TOUTDSN..'\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABM05": {"ttr": 1797, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM058 'JH BATCH- PLI OPT COMPILE'\n'&PL1PRC OF &TDSN..'\n\nJHABM059 'JH BATCH- PLI OPT COMPILE'\n'&PL1PRC OF &TDSN, LINK TO &TLNKLB2(&TLMEM).'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABM07": {"ttr": 1799, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM079 'JH BATCH- LINK EDIT'\n'LINK TO &TLNKLB2(&TLMEM).'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABM09": {"ttr": 1801, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM099 'JH BATCH- SCRIPT/VS'\n'JCL GENERATED FOR SCRIPT/VS FROM &TDSN..'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABM10": {"ttr": 1803, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM109 'JH BATCH- FORMAT PURGE'\n'JCL GENERATED FOR FORMAT PURGE OF IMS&E SYSTEM.'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABM14": {"ttr": 1805, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM149 'JH BATCH- DEFINE GDG'\n'JCL GENERATED TO DEFINE GDG BASE FOR &TDSN LIMIT(&LIM) &EMP..'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABM18": {"ttr": 1807, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM189 'JH BATCH - LISTCAT'\n'IDCAMS LISTCAT &JHLISTCP..'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABM19": {"ttr": 1809, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHABM190 'ENTER NEW NAME'             .ALARM=YES\n'NEW NAME IS REQUIRED FOR OPTIONS 5 AND 6.'\n\nJHABM192 'INVALID VOLUME SERIAL'      .ALARM=YES\n'VOLUME SERIALS MUST BE 6 ALPHAMERIC CHARACTERS, SEPARATED BY COMMAS.'\n\nJHABM199 'JH BATCH- IEHPROGM'\n'JCL GENERATED FOR &TFUNC OF &TVOL &TDSN &TMEM..'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABP@A": {"ttr": 1811, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%!_)\n /* 10/19/83 Mura - XEQ NODE made optional; PRINT NODE added         */\n /* 01/03/84 Mura - add option 21; reformat option list              */\n /* 01/17/84 Mura - panel, msg, skel names changed with PDF version 2*/\n /* 01/17/84 Mura - JCLCHECK changed from option 12 to option 22     */\n /* 08/02/84 Mura - allow remote ID on print node                    */\n /* 01/16/85 Mura - allow 8-character XEQ node                       */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  !  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%------------------------  JH BATCH SELECTION MENU  ----------------------------\n%OPTION  ===>_ZCMD                                                             !\n!\n% 1!- Assemble (+ link)       %  !                   %TECH. SERVICES OPTIONS:\n% 2!- COBOL compile (+ link)  %13!-                    % A!- AMBLIST\n% 3!- Copy                    %14!- Create GDG base    % D!-\n% 4!-                         %15!-                    % G!- GTF edit\n% 5!- PLI OPT compile (+ link)%16!-                    % I!-\n% 6!-                         %17!-                    % L!-\n% 7!- Linkage editor          %18!- IDCAMS LISTCAT     % P!-\n% 8!-                         %19!- IEHPROGM           % Z!- Superzap\n% 9!- SCRIPT/VS               %20!-\n%10!- IMS format purge        %21!-\n%11!-                         %22!-\n!\n!JOB INFORMATION:  (Verify before proceeding)\n!  JOBCHAR   %===>_Z!       ACCOUNT    %===>_YACCT !     AREA    %===>_YAR!\n!  CLASS     %===>_Z!    !  DEL (73-80)%===>_Y7380   !   MSGLEVEL%===>_YML!\n!  MSGCLASS  %===>_Z!       NAME FIELD %===>_YNAME                 !\n!  XEQ NODE  %===>_YNODE   !JOBPARM    %===>_YJBPRM                            !\n!  PRINT NODE%===>_Z                !                    MAX CC  %===>_YC  !\n!\n)INIT\n .HELP = JHABH@0                     /*                      01/17/84*/\n .ZVARS = '(YJBCHR YJC YMC JHBPTNOD)'   /*                   10/19/83*/\n .CURSOR = ZCMD\n IF (&YML = &Z)     &YML = '1,1'\n IF (&YJC = &Z)     &YJC = 1\n IF (&YNAME = &Z)   &YNAME = ''' &ZUSER           '''\n IF (&YJBCHR = &Z)  &YJBCHR = 1\n IF (&YMC = &Z)     &YMC = S\n &JHUSER1 = TRUNC(&ZUSER,1)\n\n)PROC\n VER(&ZCMD,NB,LIST,1,2,3,5,7,9,10,\n                   14,18,19,\n                   A,G,Z,\n                   C,CAN,CANCEL,MSG=JHA@M024)             /* 01/17/84*/\n\n /* set variables for JH#PDF8                                        */\n &T1 = TRUNC(&ZCMD,1)                /* to chk lnth of opt   01/17/84*/\n IF (.TRAIL = &Z)                    /*                      01/17/84*/\n    &PANEL = 'JHABP0&ZCMD'           /* one-digit option     01/17/84*/\n    &SKEL  = 'JHABS0&ZCMD'           /* one-digit option     01/17/84*/\n IF (.TRAIL \u00ac= &Z)                   /*                      01/17/84*/\n    &PANEL = 'JHABP&ZCMD'            /* two-digit option     01/17/84*/\n    &SKEL  = 'JHABS&ZCMD'            /* two-digit option     01/17/84*/\n &TERMMENU = JHABP@B                 /* termination selection menu   */\n &JOBSKEL = JHABS@C                  /* job JCL skeleton             */\n &CANMSG = JHABM008                  /* job canceled msg     01/17/84*/\n &SUBMSG = JHABM009                  /* job submitted msg    01/17/84*/\n IF (.MSG \u00ac= ' ')                    /* if option invalid            */\n    IF (&ZTRAIL \u00ac= ' ')              /* and in nondisplay mode       */\n       &PANEL = '?'                  /* then indicate error          */\n       .RESP = END                   /* and change to nondispl-end   */\n /* end of variables for JH#PDF8                                     */\n\n IF(&ZCMD=8,9,11)                    /* certain options may  02/22/84*/\n   IF(&YJC=1)                        /*   not run as class 1 02/22/84*/\n     .CURSOR=ZCMD                    /*                      02/22/84*/\n     .MSG=JHABM001                   /*                      02/22/84*/\n\n VER(&YJBCHR,NB)\n IF(&YJBCHR\u00ac=0,1,2,3,4,5,6,7,8,9)    /*                              */\n   VER(&YJBCHR,ALPHA,MSG=JHA@M023)   /*                      01/17/84*/\n VER(&YACCT,NB,PICT,'A99999')        /*                              */\n VER(&YAR,NB,PICT,'CCC')             /*                              */\n VER(&YJC,NB)                        /*                              */\n IF(&YJBPRM=&Z)                      /*                              */\n   VER(&Y7380,NB,MSG=JHA@M022)       /*                      01/17/84*/\n VER(&YMC,NB)                        /*                              */\n VER(&YNAME,NB)                      /*                              */\n VER(&YML,NB)                        /*                              */\n IF(&YML\u00ac=0,1,2)                     /*                              */\n   VER(&YML,PICT,'9,9')              /*                              */\n VER(&YNODE,NAME,MSG=JHABM002)       /*                      08/02/84*/\n VER(&JHBPTNOD,DSNAME,MSG=JHABM002)  /*                      08/02/84*/\n VER(&YC,RANGE,0,4094)               /*                              */\n /* set JCLASS for JHABP@B and skeleton JHABS@C:                     */\n &JCLASS=&YJC                        /*                              */\n &S=0                                /* step number and jcl-gen'd ind*/\n VPUT(YJBCHR YACCT YAR YJC Y7380 YML YMC YNAME YNODE YJBPRM\n      YC JHBPTNOD) PROFILE           /*                      10/19/83*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP@B": {"ttr": 1814, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR DEFAULT(%!_)\n /* 10/19/83 Mura - add support for modifiable PRINT NODE            */\n /* 01/03/84 Mura - add option 21; reformat option list              */\n /* 01/17/84 Mura - panel, msg, skel names changed with PDF version 2*/\n /* 01/17/84 Mura - JCLCHECK changed from option 12 to option 22     */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  !  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%------------------------  JH BATCH SELECTION MENU  ----------------------------\n%OPTION  ===>_ZCMD                                                             !\n!\n% 1!- Assemble (+ link)       %  !                   %TECH. SERVICES OPTIONS:\n% 2!- COBOL compile (+ link)  %13!-                    % A!- AMBLIST\n% 3!- Copy                    %14!- Create GDG base    % D!-\n% 4!-                         %15!-                    % G!- GTF edit\n% 5!- PLI OPT compile (+ link)%16!-                    % I!-\n% 6!-                         %17!-                    % L!-\n% 7!- Linkage editor          %18!- IDCAMS LISTCAT     % P!-\n% 8!-                         %19!- IEHPROGM           % Z!- Superzap\n% 9!- SCRIPT/VS               %20!-\n%10!- IMS format purge        %21!-\n%11!-                         %22!-\n!\n!Enter%END!command to submit job.  Enter%C!to cancel;%E!to edit JCL and leave.\n!\n!GENERATED JOB JCL:\n!//&A&B    !JOB (&YACCT,A,&YAR),&YNAME,MSGLEVEL=(&YML),               !&Y7380\n!//             CLASS=&JCLASS,MSGCLASS=&YMC,NOTIFY=&ZUSER&C\n!&TJCL1\n!&TJCL2\n!&TJCL3\n)INIT\n .HELP = JHABH@2                     /*                      01/17/84*/\n &A = &ZUSER    &B = &YJBCHR\n &TJCL2 = &Z    &TJCL3 = &Z\n &TPTNOD = &Z                        /*                      10/19/83*/\n IF (&JHBPTNOD \u00ac= &Z)                /*                      10/19/83*/\n    &TPTNOD = '/*ROUTE PRINT &JHBPTNOD' /*                   10/19/83*/\n IF (&YJBPRM \u00ac= &Z)\n    &TJCL1 = '/*JOBPARM &YJBPRM'\n    IF (&YNODE \u00ac= &Z)\n       &TJCL2 = '/*XEQ &YNODE'\n       &TJCL3 = &TPTNOD              /*                      10/19/83*/\n    IF (&YNODE = &Z)\n       &TJCL2 = &TPTNOD              /*                      10/19/83*/\n IF (&YJBPRM = &Z)\n    IF (&YNODE \u00ac= &Z)\n       &TJCL1 = '/*XEQ &YNODE'\n       &TJCL2 = &TPTNOD              /*                      10/19/83*/\n    IF (&YNODE = &Z)\n       &TJCL1 = &TPTNOD              /*                      10/19/83*/\n &C = &Z\n IF (&YC \u00ac= &Z)  &C = ',COND=(&YC,LT)'\n\n)PROC\n VER(&ZCMD,NB,LIST,1,2,3,5,7,9,10,\n                   14,18,19,\n                   A,G,Z,\n                   C,CAN,CANCEL,E,ED,EDIT,MSG=JHA@M024)\n IF (&ZCMD = 10)  .MSG = JHABM007    /* valid on init. menu only     */\n IF(&ZCMD=8,9,11)                    /* certain options may  02/22/84*/\n   IF(&JCLASS=1)                     /*   not run as class 1 02/22/84*/\n     .CURSOR=ZCMD                    /*                      02/22/84*/\n     .MSG=JHABM001                   /*                      02/22/84*/\n\n /* set variables for JH#PDF8                                        */\n &T1 = TRUNC(&ZCMD,1)                /* to chk lnth of opt   01/17/84*/\n IF (.TRAIL = &Z)                    /*                      01/17/84*/\n    &PANEL = 'JHABP0&ZCMD'           /* one-digit option     01/17/84*/\n    &SKEL  = 'JHABS0&ZCMD'           /* one-digit option     01/17/84*/\n IF (.TRAIL \u00ac= &Z)                   /*                      01/17/84*/\n    &PANEL = 'JHABP&ZCMD'            /* two-digit option     01/17/84*/\n    &SKEL  = 'JHABS&ZCMD'            /* two-digit option     01/17/84*/\n &UPCHAR = N                         /* initialize panel switch      */\n &LASTSKEL = ' '                     /* initialize last skel name    */\n &TJBCHR = &YJBCHR                   /* save current char for log    */\n IF (&S \u00ac= 0)                        /* if some jcl has been gen'd   */\n    IF (&ZCMD = E,ED,EDIT)           /* if edit selected             */\n       &UPCHAR = Y                   /* then increment job char      */\n    IF (.RESP = END)                 /* if END entered               */\n       IF (&ZCMD \u00ac= C,CAN,CANCEL)    /* without CANCEL               */\n          &UPCHAR = Y                /* then increment job char      */\n    IF (&YC \u00ac= &Z)                   /* if max cc specified          */\n       &LASTSKEL = JHABS@I           /* then add IEFBR14 step01/17/84*/\n /* end of variables for JH#PDF8                                     */\n IF (&UPCHAR = Y)\n    &YJBCHR = TRANS(&YJBCHR  A B  B C  C D  D E  E F  F G  G H  H I\n                             I J  J K  K L  L M  M N  N O  O P  P Q\n                             Q R  R S  S T  T U  U V  V W  W X  X Y\n                             Y Z  Z A  $ $  @ @  # #\n                             0 1  1 2  2 3  3 4  4 5\n                             5 6  6 7  7 8  8 9  * 0)\n    VPUT (YJBCHR) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP0A": {"ttr": 1817, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skeleton names changed            */\n  %  TYPE(TEXT)    INTENS(HIGH)    SKIP(ON)\n  +  TYPE(TEXT)    INTENS(LOW)     SKIP(ON)\n  \u00a2  TYPE(TEXT)    INTENS(LOW)     SKIP(OFF)\n  #  TYPE(OUTPUT)  INTENS(HIGH)\n)BODY\n%----------------------------  BATCH AMBLIST  ----------------------------------\n%OPTION  ===>_ZCMD                                                             +\n+\n%   1+- XREF (Lengths and cross reference)\n%   2+- LISTIDR (Dates)\n%   3+- LISTIDR and XREF              #Z+- &JHAMBD4\n+\n+LOAD LIBRARY %===>_LNKLB                                       +\n+VOLUME SERIAL%===>_TVOL  +(If not cataloged)\n+\n+MEMBER       %===>_TMEM1   +\n+MEMBER       %===>_TMEM2   +\n+MEMBER       %===>_TMEM3   +\n+MEMBER       %===>_TMEM4   +\n+MEMBER       %===>_TMEM5   \u00a2\n+\n)INIT\n .ZVARS = '(JHAMBO4)'\n .HELP = JHABH@0                     /*                      02/10/84*/\n IF (&ZCMD = &Z)   .CURSOR = ZCMD\n IF (&LNKLB = &Z)  .CURSOR = LNKLB\n IF (&ZCMD \u00ac= &Z)  .CURSOR = TMEM1\n &JHAMBO4 = ' '     &JHAMBD4 = ' '\n IF (&JHUSER1 = K,M)\n    &JHAMBO4 = '4'  &JHAMBD4 = 'LISTLPA'\n\n)PROC\n IF (&JHUSER1 \u00ac= K,M)\n    VER(&ZCMD,NB,LIST,1,2,3)\n IF (&JHUSER1 = K,M)\n    VER(&ZCMD,NB,LIST,1,2,3,4)\n &O = &ZCMD\n\n VER(&LNKLB,NB,DSNAME)\n &T1=TRUNC(&LNKLB,'(')\n IF (.TRAIL \u00ac= &Z) .MSG = JHA@M009   /* MEMBER NAME NOT ALLOWED      */\n &T1=TRUNC(&LNKLB,1)                 /* CHECK FOR INITIAL APOSTROPHE */\n IF (&T1 \u00ac= '''')\n    &TLNKLB = '&ZPREFIX..&LNKLB'\n &T2=.TRAIL\n IF (&T1 = '''')\n    &TLNKLB = TRUNC(&T2,'''')        /* STRIP OFF APOSTROPHES        */\n VER(&TLNKLB,DSNAME)\n\n VER(&TVOL,PICT,CCCCCC,MSG=JHA@M027) /*                              */\n VER(&TVOL,NAME,MSG=JHA@M027)        /*                              */\n &T1 = TRUNC(&TVOL,3)                /*                              */\n &T1 = .TRAIL                        /*                              */\n &TUNIT = TRANS(TRUNC(&T1,1) 1,3350 2,3350 V,3330V *,3380)\n\n IF (&O \u00ac= 4)  VER(&TMEM1,NB)\n VER(&TMEM1,NAME)\n VER(&TMEM2,NAME)\n VER(&TMEM3,NAME)\n VER(&TMEM4,NAME)\n VER(&TMEM5,NAME)\n\n VPUT (LNKLB) PROFILE\n &ZCMD = &Z\n\n &JHBOPT = 'AMBLIST'                /*                      01/17/84*/\n &JHBLMSG = 'LOAD MODULE XREF OPTION &O OF &TLNKLB &TVOL..'\n &LOGMSG = JHABM006                 /*                      01/17/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP0G": {"ttr": 1820, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skeleton names changed            */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%----------------------------  BATCH GTF EDIT  ---------------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+DATA SET NAME     %===>_DSN                                     +\n+TAPE VOLUME SERIAL%===>_GTFVOL+\n+TRACE OUTPUT CLASS%===>_Z+\n\n+OPTIONS%===>_GTFOPT1                                            +\n        %===>_GTFOPT2                                            +\n        %===>_GTFOPT3                                            +\n        %===>_GTFOPT4                                            +\n\n+             (Do not specify DD option or END card)\n)INIT\n  .ZVARS = '(GTFC)'\n  .HELP = JHABH0G                    /*                      01/17/84*/\n  .CURSOR = DSN\n  &DSN = '''SYS1.TRACE'''\n\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n\n  VER(&DSN,NB,DSNAME)\n  &T1=TRUNC(&DSN,'(')\n  IF (.TRAIL \u00ac= &Z)  .MSG=JHA@M009   /* MEMBER NAME NOT ALLOWED      */\n  &T1=TRUNC(&DSN,1)                  /* CHECK FOR INITIAL APOSTROPHE */\n  IF (&T1 \u00ac= '''')\n     &TDSN = '&ZPREFIX..&DSN'\n  &T2=.TRAIL\n  IF (&T1 = '''')\n     &TDSN = TRUNC(&T2,'''')         /* STRIP OFF APOSTROPHES        */\n  VER(&TDSN,DSNAME)\n\n  VER(&GTFVOL,PICT,'CCCCCC')\n  VER(&GTFC,NONBLANK)\n  VPUT (GTFC GTFVOL GTFOPT1 GTFOPT2 GTFOPT3 GTFOPT3 GTFOPT4) PROFILE\n\n  &JHBOPT = 'GTF EDIT'               /*                      01/17/84*/\n  &JHBLMSG = 'JCL GENERATED FOR GTF EDIT OF &TDSN VOL(&GTFVOL) TO +\n              SYSOUT &GTFC..'        /*                      01/17/84*/\n  &LOGMSG = JHABM006                 /*                      01/17/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP0Z": {"ttr": 1822, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skeleton names changed            */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%--------------------------  BATCH SUPERZAP  -----------------------------------\n%OPTION  ===>_ZCMD                                                             +\n+\n%   M+- Modify          %D+- Dump           %T+- Dump and translate\n+\n+LIB    %===>_LNKLB                                 +\n+VOLUME %===>_TVOL  +(If not cataloged)\n+\n+NAME   %===>_JHNAME  +CSECT%===>_JHCSECT +\n+IDRDATA%===>_FIXNO   +\n+\n+DISPL  %===>_DISPL1  +VER  %===>_VER1                                     +\n+                     +REP  %===>_REP1                                     +\n+DISPL  %===>_DISPL2  +VER  %===>_VER2                                     +\n+                     +REP  %===>_REP2                                     +\n+DISPL  %===>_DISPL3  +VER  %===>_VER3                                     +\n+                     +REP  %===>_REP3                                     +\n+DISPL  %===>_DISPL4  +VER  %===>_VER4                                     +\n+                     +REP  %===>_REP4                                     +\n+DISPL  %===>_DISPL5  +VER  %===>_VER5                                     +\n+                     +REP  %===>_REP5                                     +\n)INIT\n .HELP = JHABH0Z\n .CURSOR = ZCMD\n\n)PROC\n VER(&ZCMD,NB,LIST,M,D,T)            /* validate option              */\n\n VER(&LNKLB,NB,DSNAME)\n &T1=TRUNC(&LNKLB,'(')\n IF (.TRAIL \u00ac= &Z)   .MSG=JHA@M009   /* MEMBER NAME NOT ALLOWED      */\n &T1=TRUNC(&LNKLB,1)                 /* CHECK FOR INITIAL APOSTROPHE */\n IF (&T1 \u00ac= '''')\n    &TLNKLB = '&ZPREFIX..&LNKLB'\n &T2=.TRAIL\n IF (&T1 = '''')\n    &TLNKLB = TRUNC(&T2,'''')        /* STRIP OFF APOSTROPHES FOR JCL*/\n VER(&TLNKLB,DSNAME)\n\n VER(&TVOL,PICT,CCCCCC,MSG=JHA@M027) /*                              */\n VER(&TVOL,NAME,MSG=JHA@M027)        /*                              */\n &T1 = TRUNC(&TVOL,3)                /*                              */\n &T1 = .TRAIL                        /*                              */\n &TUNIT = TRANS(TRUNC(&T1,1) 1,3350 2,3350 V,3330V *,3380)\n\n VER(&JHNAME,NB,NAME)\n VER(&JHCSECT,NAME)\n IF (&ZCMD = M)\n    VER(&FIXNO,NB)\n    VER(&DISPL1,NB)\n    VER(&VER1,NB)\n VER(&DISPL1,HEX)\n VER(&DISPL2,HEX)\n IF (&DISPL2 \u00ac= &Z)\n    VER(&VER2,NB)\n VER(&DISPL3,HEX)\n IF (&DISPL3 \u00ac= &Z)\n    VER(&VER3,NB)\n VER(&DISPL4,HEX)\n IF (&DISPL4 \u00ac= &Z)\n    VER(&VER4,NB)\n VER(&DISPL5,HEX)\n IF (&DISPL5 \u00ac= &Z)\n    VER(&VER5,NB)\n IF (&REP1 \u00ac= &Z)\n    VER(&DISPL1,NB)\n    VER(&VER1,NB)\n IF (&REP2 \u00ac= &Z)\n    VER(&DISPL2,NB)\n    VER(&VER2,NB)\n IF (&REP3 \u00ac= &Z)\n    VER(&DISPL3,NB)\n    VER(&VER3,NB)\n IF (&REP4 \u00ac= &Z)\n    VER(&DISPL4,NB)\n    VER(&VER4,NB)\n IF (&REP5 \u00ac= &Z)\n    VER(&DISPL5,NB)\n    VER(&VER5,NB)\n &TZFUNC = TRANS(&ZCMD\n                 M,NAME\n                 D,DUMP\n                 T,DUMPT )\n\n VPUT (LNKLB JHNAME JHCSECT FIXNO DISPL1 VER1 REP1\n                 DISPL2 VER2 REP2 DISPL3 VER3 REP3\n                 DISPL4 VER4 REP4 DISPL5 VER5 REP5) PROFILE\n\n &JHBOPT = 'SUPERZAP'                /*                      01/17/84*/\n &JHBLMSG = 'MODIFICATION TO &TLNKLB &JHNAME &JHCSECT &TVOL..'\n IF (&ZCMD = D,T)                    /*                      01/17/84*/\n    &JHBLMSG = '&TZFUNC OF &TLNKLB &JHNAME &JHCSECT &TVOL..'\n &LOGMSG = JHABM006                  /*                      01/17/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP01": {"ttr": 2051, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%--------------------  BATCH ASSEMBLY (AND LINK)  ------------------------------\n%COMMAND%===>_ZCMD                                                             +\n+\n+ASSEMBLY PROC   %===>_ASPRC   +(such as ASMHC or ASMHCL)\n+\n+PROJECT%===>_PRJ1    +                                ASM REGION%===>_YRGN +\n+GROUP  %===>_LIB1    +\n+TYPE   %===>_TYP1    +\n+MEMBER %===>_TMEM    +  OTHER DSN%===>_DSN                                    +\n\n+MACLIBS         %===>_BAL1                                        +\n                 %===>_BAL2                                        +\n                       (Besides 'SYS1.MACLIB' and 'JH.MACLIB')\n\n+(Linkage editor parameters are ignored if proc is ASMHC.)\n+LINK TO         %===>_LNKLB2                                          +\n+MEMBER NAME     %===>_TLMEM   +\n+ENTRY POINT     %===>_TENTRY  +\n+LINK EDIT PARMS %===>_BLNK                                 +\n+LINK SYSLIBS    %===>_BSL1                                        +\n                 %===>_BSL2                                        +\n)INIT\n  &DSN = &Z   &TMEM = &Z   &TLMEM = &Z   &TENTRY = &Z\n  IF (&YRGN = &Z)  &YRGN = 256K\n  .HELP = JHABH01                    /*                      01/17/84*/\n\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n  &LOGMSG = JHABM019                 /*                      01/17/84*/\n  IF (&ASPRC = ASMHC)\n     &LOGMSG = JHABM018              /*                      01/17/84*/\n\n  VER(&ASPRC,NB,NAME)\n\n  IF (&DSN = &Z)\n     VER(&PRJ1,NONBLANK,DSNAME)\n     VER(&LIB1,NONBLANK,DSNAME)\n     VER(&TYP1,NONBLANK,DSNAME)\n     VER(&TMEM,NONBLANK,NAME)\n     &TDSN = '&PRJ1..&LIB1..&TYP1(&TMEM)'\n     IF (&TLMEM = &Z)\n        &TLMEM = &TMEM               /* LINK MEM NAME = SRC MEM NAME */\n  IF (&DSN \u00ac= &Z)\n     VER(&DSN,DSNAME)\n     &T1=TRUNC(&DSN,'(')\n     &T1=.TRAIL\n     &T2=TRUNC(&T1,')')              /* ISOLATE MEMBER NAME          */\n     VER(&T2,NONBLANK,NAME,MSG=JHA@M008) /*                  01/17/84*/\n     IF (&TLMEM = &Z)\n        &TLMEM = &T2                 /* LINK MEM NAME = SRC MEM NAME */\n     &T1=TRUNC(&DSN,1)               /* CHECK FOR INITIAL APOSTROPHE */\n     IF (&T1 \u00ac= '''')\n        &TDSN = '&ZPREFIX..&DSN'\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TDSN = TRUNC(&T2,'''')      /* STRIP OFF APOSTROPHES        */\n  VER(&TDSN,DSNAME)\n\n  &TBAL1 = &Z\n  VER(&BAL1,DSNAME)\n  IF (&BAL1 \u00ac= &Z)\n     &T1=TRUNC(&BAL1,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BAL1,1)\n     IF (&T1 \u00ac= '''')\n        &TBAL1 = '&ZPREFIX..&BAL1'   /* ADD USER'S TSO PREFIX       */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBAL1 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TBAL1,DSNAME)\n\n  &TBAL2 = &Z\n  VER(&BAL2,DSNAME)\n  IF (&BAL2 \u00ac= &Z)\n     &T1=TRUNC(&BAL2,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BAL2,1)\n     IF (&T1 \u00ac= '''')\n        &TBAL2 = '&ZPREFIX..&BAL2'   /* ADD USER'S TSO PREFIX       */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBAL2 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TBAL2,DSNAME)\n\n  &TLNKLB2 = &Z\n  VER(&LNKLB2,DSNAME)\n  IF (&LNKLB2 \u00ac= &Z)\n     &T1=TRUNC(&LNKLB2,1)\n     IF (&T1 \u00ac= '''')\n        &TLNKLB2 = '&ZPREFIX..&LNKLB2' /* ADD USER'S TSO PREFIX     */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TLNKLB2 = TRUNC(&T2,'''')   /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TLNKLB2,DSNAME)\n  IF (&ASPRC \u00ac= ASMHC)\n     VER(&LNKLB2,NONBLANK)\n\n  VER(&TLMEM,NAME)\n\n  VER(&TENTRY,NAME)\n\n  &TBSL1 = &Z\n  VER(&BSL1,DSNAME)\n  IF (&BSL1 \u00ac= &Z)\n     &T1=TRUNC(&BSL1,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BSL1,1)\n     IF (&T1 \u00ac= '''')\n        &TBSL1 = '&ZPREFIX..&BSL1'   /* ADD USER'S TSO PREFIX       */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBSL1 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TBSL1,DSNAME)\n\n  &TBSL2 = &Z\n  VER(&BSL2,DSNAME)\n  IF (&BSL2 \u00ac= &Z)\n     &T1=TRUNC(&BSL2,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BSL2,1)\n     IF (&T1 \u00ac= '''')\n        &TBSL2 = '&ZPREFIX..&BSL2'   /* ADD USER'S TSO PREFIX       */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBSL2 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TBSL2,DSNAME)\n\n  VPUT (PRJ1 LIB1 TYP1 ASPRC BSL1 BSL2 BAL1 BAL2 LNKLB2\n        YRGN BLNK) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP02": {"ttr": 2054, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n /* 02/06/84 Mura - add third compiler SYSLIB (BCL3)                 */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%--------------------  BATCH COBOL COMPILE (AND LINK)  -------------------------\n%COMMAND ===>_ZCMD                                                             +\n%\n+COMPILE PROC    %===>_CLPRC   +(COBVC, COBVCL, OR COBVOPT)\n+\n+PROJECT%===>_PRJ1    +\n+GROUP  %===>_LIB1    +\n+TYPE   %===>_TYP1    +\n+MEMBER %===>_TMEM    +  OTHER DSN%===>_DSN                                    +\n\n+COMPILER OPTIONS%===>_BCOB\n+COPYLIBS        %===>_BCL1                                        +\n                 %===>_BCL2                                        +\n                 %===>_BCL3                                        +\n\n+(Linkage editor parameters are ignored if proc is COBVC.)\n+LINK TO         %===>_LNKLB2                                          +\n+MEMBER NAME     %===>_TLMEM   +\n+ENTRY POINT     %===>_TENTRY  +\n+LINK EDIT PARMS %===>_BLNK                                 +\n+LINK SYSLIBS    %===>_BSL1                                        +\n                 %===>_BSL2                                        +\n)INIT\n  .HELP = JHABH02\n  &DSN = &Z   &TMEM = &Z   &TLMEM = &Z   &TENTRY = &Z\n\n)PROC\n  IF (&ZCMD \u00ac= ' ')  .MSG = ISPZ001\n  &LOGMSG = JHABM029\n  IF (&CLPRC = COBVC,COBWC)\n     &LOGMSG = JHABM028\n  VER(&CLPRC,NB,NAME)\n\n  IF (&DSN = &Z)\n     VER(&PRJ1,NONBLANK,DSNAME)\n     VER(&LIB1,NONBLANK,DSNAME)\n     VER(&TYP1,NONBLANK,DSNAME)\n     VER(&TMEM,NONBLANK,NAME)\n     &TDSN = '&PRJ1..&LIB1..&TYP1(&TMEM)'\n     IF (&TLMEM = &Z)\n        &TLMEM = &TMEM       /* SET LINK MEM NAME = SRC MEM NAME */\n  IF (&DSN \u00ac= &Z)\n     VER(&DSN,DSNAME)\n     &T1=TRUNC(&DSN,'(')\n     &T1=.TRAIL\n     &T2=TRUNC(&T1,')')      /* ISOLATE MEMBER NAME              */\n     VER(&T2,NONBLANK,NAME,MSG=JHA@M008)\n     IF (&TLMEM = &Z)\n        &TLMEM = &T2         /* SET LINK MEM NAME = SRC MEM NAME */\n     &T1=TRUNC(&DSN,1)       /* CHECK FOR INITIAL APOSTROPHE     */\n     IF (&T1 \u00ac= '''')\n        &TDSN = '&ZPREFIX..&DSN'\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TDSN = TRUNC(&T2,'''')  /* STRIP OFF APOSTROPHES       */\n  VER(&TDSN,DSNAME)\n\n  &TBCL1 = &Z\n  VER(&BCL1,DSNAME)\n  IF (&BCL1 \u00ac= &Z)\n     &T1=TRUNC(&BCL1,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BCL1,1)\n     IF (&T1 \u00ac= '''')\n        &TBCL1 = '&ZPREFIX..&BCL1' /* ADD USER'S TSO PREFIX         */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBCL1 = TRUNC(&T2,'''')        /* STRIP OFF QUOTES FOR JCL */\n     VER(&TBCL1,DSNAME)\n\n  &TBCL2 = &Z\n  VER(&BCL2,DSNAME)\n  IF (&BCL2 \u00ac= &Z)\n     &T1=TRUNC(&BCL2,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BCL2,1)\n     IF (&T1 \u00ac= '''')\n        &TBCL2 = '&ZPREFIX..&BCL2' /* ADD USER'S TSO PREFIX         */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBCL2 = TRUNC(&T2,'''')        /* STRIP OFF QUOTES FOR JCL */\n     VER(&TBCL2,DSNAME)\n\n  &TBCL3 = &Z\n  VER(&BCL3,DSNAME)\n  IF (&BCL3 \u00ac= &Z)\n     &T1=TRUNC(&BCL3,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BCL3,1)\n     IF (&T1 \u00ac= '''')\n        &TBCL3 = '&ZPREFIX..&BCL3' /* ADD USER'S TSO PREFIX         */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBCL3 = TRUNC(&T2,'''')        /* STRIP OFF QUOTES FOR JCL */\n     VER(&TBCL3,DSNAME)\n\n  &TLNKLB2 = &Z\n  VER(&LNKLB2,DSNAME)\n  IF (&LNKLB2 \u00ac= &Z)\n     &T1=TRUNC(&LNKLB2,1)\n     IF (&T1 \u00ac= '''')\n        &TLNKLB2 = '&ZPREFIX..&LNKLB2' /* ADD USER'S TSO PREFIX     */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TLNKLB2 = TRUNC(&T2,'''')      /* STRIP OFF QUOTES FOR JCL */\n     VER(&TLNKLB2,DSNAME)\n  IF (&CLPRC \u00ac= COBVC,COBWC)\n     VER(&LNKLB2,NONBLANK)\n\n  VER(&TLMEM,NAME)\n\n  VER(&TENTRY,NAME)\n\n  &TBSL1 = &Z\n  VER(&BSL1,DSNAME)\n  IF (&BSL1 \u00ac= &Z)\n     &T1=TRUNC(&BSL1,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BSL1,1)\n     IF (&T1 \u00ac= '''')\n        &TBSL1 = '&ZPREFIX..&BSL1' /* ADD USER'S TSO PREFIX         */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBSL1 = TRUNC(&T2,'''')        /* STRIP OFF QUOTES FOR JCL */\n     VER(&TBSL1,DSNAME)\n\n  &TBSL2 = &Z\n  VER(&BSL2,DSNAME)\n  IF (&BSL2 \u00ac= &Z)\n     &T1=TRUNC(&BSL2,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BSL2,1)\n     IF (&T1 \u00ac= '''')\n        &TBSL2 = '&ZPREFIX..&BSL2' /* ADD USER'S TSO PREFIX         */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBSL2 = TRUNC(&T2,'''')        /* STRIP OFF QUOTES FOR JCL */\n     VER(&TBSL2,DSNAME)\n\n  VPUT (PRJ1 LIB1 TYP1 CLPRC BSL1 BSL2 BCL1 BCL2 BCL3 LNKLB2\n        BCOB BLNK) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP03": {"ttr": 2058, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 09/01/83 MURA - length of OUTDSN field increased                 */\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n /* 01/23/84 Mura - don't allow other members if 1st is \"*ALL*\"      */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%-----------------------------  BATCH COPY  ------------------------------------\n%COMMAND ===>_ZCMD                                                             +\n%\n%FROM+ISPF LIBRARY:\n+   PROJECT%===>_PRJ1    +\n+   GROUP  %===>_LIB1    +\n+   TYPE   %===>_TYP1    +                                                     +\n%FROM+OTHER PARTITIONED DATA SET:                                              +\n+   DATA SET NAME %===>_DSN                                                    +\n+   VOLUME SERIAL %===>_TVOL1 +  (If not cataloged)\n+\n%TO+DATA SET NAME %===>_OUTDSN                                                 +\n+   VOLUME SERIAL %===>_TVOL2 +  (If not cataloged)\n+   SPACE         %===>_TSPACE              +(For new allocation)\n+REPLACE LIKE-NAMED MEMBERS%===>_BREP+(YES or NO)\n+\n+   MEMBER:        RENAME AS:                  MEMBER:        RENAME AS:\n%===>_TMEM1   % ===>_TNEW1   +             %===>_TMEM2   % ===>_TNEW2   +\n%===>_TMEM3   % ===>_TNEW3   +             %===>_TMEM4   % ===>_TNEW4   +\n%===>_TMEM5   % ===>_TNEW5   +             %===>_TMEM6   % ===>_TNEW6   +\n%===>_TMEM7   % ===>_TNEW7   +             %===>_TMEM8   % ===>_TNEW8   +\n%===>_TMEM9   % ===>_TNEW9   +             %===>_TMEM10  % ===>_TNEW10  +\n%===>_TMEM11  % ===>_TNEW11  +             %===>_TMEM12  % ===>_TNEW12  +\n%===>_TMEM13  % ===>_TNEW13  +             %===>_TMEM14  % ===>_TNEW14  +\n)INIT\n .HELP = JHABH03\n &DSN = &Z     &TVOL1 = &Z   &TVOL2 = &Z\n &TMEM1 = &Z   &TNEW1 = &Z   &TMEM2 =&Z   &TNEW2 = &Z\n &TMEM3 = &Z   &TNEW3 = &Z   &TMEM4 =&Z   &TNEW4 = &Z\n &TMEM5 = &Z   &TNEW5 = &Z   &TMEM6 =&Z   &TNEW6 = &Z\n &TMEM7 = &Z   &TNEW7 = &Z   &TMEM8 =&Z   &TNEW8 = &Z\n &TMEM9 = &Z   &TNEW9 = &Z   &TMEM10 =&Z  &TNEW10 = &Z\n &TMEM11 = &Z  &TNEW11 = &Z  &TMEM12 =&Z  &TNEW12 = &Z\n &TMEM13 = &Z  &TNEW13 = &Z  &TMEM14 =&Z  &TNEW14 = &Z\n &BREP = TRANS (&BREP  N,NO  *,YES)\n\n)PROC\n IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n &LOGMSG = JHABM039\n\n &BREP = TRANS (TRUNC (&BREP,1)  Y,Y  N,N  MSG=JHABM030)\n\n IF (&DSN = &Z)\n    VER(&PRJ1,NB,DSNAME)\n    VER(&LIB1,NB,DSNAME)\n    VER(&TYP1,NB,DSNAME)\n    &TDSN = '&PRJ1..&LIB1..&TYP1'\n IF (&DSN \u00ac= &Z)\n    VER(&DSN,DSNAME)\n    &T1=TRUNC(&DSN,'(')\n    IF (.TRAIL \u00ac= &Z) .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED     */\n    &T1=TRUNC(&DSN,1)                /* CHECK FOR INITIAL APOSTROPHE */\n    IF (&T1 \u00ac= '''')\n       &TDSN = '&ZPREFIX..&DSN'\n    &T2=.TRAIL\n    IF (&T1 = '''')\n       &TDSN = TRUNC(&T2,'''')       /* STRIP OFF APOSTROPHES        */\n VER(&TDSN,DSNAME)\n\n VER(&TVOL1,PICT,CCCCCC,MSG=JHA@M027) /*                             */\n VER(&TVOL1,NAME,MSG=JHA@M027)       /*                              */\n &T1 = TRUNC(&TVOL1,3)               /*                              */\n &T1 = .TRAIL                        /*                              */\n &TUNIT1 = TRANS(TRUNC(&T1,1) 1,3350 2,3350 V,3330V *,3380)\n\n VER(&OUTDSN,NB,DSNAME)\n &T1=TRUNC(&OUTDSN,'(')\n IF (.TRAIL \u00ac= &Z) .MSG = JHA@M009   /* MEMBER NAME NOT ALLOWED      */\n &T1=TRUNC(&OUTDSN,1)                /* CHECK FOR INITIAL APOSTROPHE */\n IF (&T1 \u00ac= '''')\n    &TOUTDSN = '&ZPREFIX..&OUTDSN'\n &T2=.TRAIL\n IF (&T1 = '''')\n    &TOUTDSN = TRUNC(&T2,'''')       /* STRIP OFF APOSTROPHES        */\n VER(&TOUTDSN,DSNAME)\n\n VER(&TVOL2,PICT,CCCCCC,MSG=JHA@M027) /*                             */\n VER(&TVOL2,NAME,MSG=JHA@M027)       /*                              */\n &T1 = TRUNC(&TVOL2,3)               /*                              */\n &T1 = .TRAIL                        /*                              */\n &TUNIT2 = TRANS(TRUNC(&T1,1) 1,3350 2,3350 V,3330V *,3380)\n\n &T1 = '&TDSN&TVOL1'\n &T2 = '&TOUTDSN&TVOL2'\n IF (&T1 = &T2) .MSG=JHABM034 .CURSOR=OUTDSN  /* SAME LIB ILLEGAL    */\n\n IF (&TSPACE \u00ac= &Z)\n    &TSPACE4 = TRUNC(&TSPACE,4)\n    IF (&TSPACE4 \u00ac= 'TRK,','CYL,')  .MSG=JHABM035 .CURSOR=TSPACE\n VER(&TMEM1,NONBLANK)\n IF (&TMEM1 \u00ac= '*ALL*')\n    VER(&TMEM1,NAME,MSG=JHABM031)\n VER(&TMEM2,NAME)\n VER(&TMEM3,NAME)\n VER(&TMEM4,NAME)\n VER(&TMEM5,NAME)\n VER(&TMEM6,NAME)\n VER(&TMEM7,NAME)\n VER(&TMEM8,NAME)\n VER(&TMEM9,NAME)\n VER(&TMEM10,NAME)\n VER(&TMEM11,NAME)\n VER(&TMEM12,NAME)\n VER(&TMEM13,NAME)\n VER(&TMEM14,NAME)\n VER(&TNEW1,NAME)\n VER(&TNEW2,NAME)\n VER(&TNEW3,NAME)\n VER(&TNEW4,NAME)\n VER(&TNEW5,NAME)\n VER(&TNEW6,NAME)\n VER(&TNEW7,NAME)\n VER(&TNEW8,NAME)\n VER(&TNEW9,NAME)\n VER(&TNEW10,NAME)\n VER(&TNEW11,NAME)\n VER(&TNEW12,NAME)\n VER(&TNEW13,NAME)\n VER(&TNEW14,NAME)\n\n IF (&TMEM1 = '*ALL*')               /*                      01/23/84*/\n   VER(&TMEM2,LIST,,MSG=JHABM036)    /*                      01/23/84*/\n   VER(&TMEM3,LIST,,MSG=JHABM036)    /*                      01/23/84*/\n   VER(&TMEM4,LIST,,MSG=JHABM036)    /*                      01/23/84*/\n   VER(&TMEM5,LIST,,MSG=JHABM036)    /*                      01/23/84*/\n   VER(&TMEM6,LIST,,MSG=JHABM036)    /*                      01/23/84*/\n   VER(&TMEM7,LIST,,MSG=JHABM036)    /*                      01/23/84*/\n   VER(&TMEM8,LIST,,MSG=JHABM036)    /*                      01/23/84*/\n   VER(&TMEM9,LIST,,MSG=JHABM036)    /*                      01/23/84*/\n   VER(&TMEM10,LIST,,MSG=JHABM036)   /*                      01/23/84*/\n   VER(&TMEM11,LIST,,MSG=JHABM036)   /*                      01/23/84*/\n   VER(&TMEM12,LIST,,MSG=JHABM036)   /*                      01/23/84*/\n   VER(&TMEM13,LIST,,MSG=JHABM036)   /*                      01/23/84*/\n   VER(&TMEM14,LIST,,MSG=JHABM036)   /*                      01/23/84*/\n\n IF (&TMEM1 = &TNEW1)\n    .MSG=JHABM033\n    .CURSOR=TNEW1\n IF (&TNEW2 \u00ac= &Z)\n    VER(&TMEM2,NONBLANK,MSG=JHABM032)\n    IF (&TMEM2 = &TNEW2)\n       .MSG=JHABM033\n       .CURSOR=TNEW2\n IF (&TNEW3 \u00ac= &Z)\n    VER(&TMEM3,NONBLANK,MSG=JHABM032)\n    IF (&TMEM3 = &TNEW3)\n       .MSG=JHABM033\n       .CURSOR=TNEW3\n IF (&TNEW4 \u00ac= &Z)\n    VER(&TMEM4,NONBLANK,MSG=JHABM032)\n    IF (&TMEM4 = &TNEW4)\n       .MSG=JHABM033\n       .CURSOR=TNEW4\n IF (&TNEW5 \u00ac= &Z)\n    VER(&TMEM5,NONBLANK,MSG=JHABM032)\n    IF (&TMEM5 = &TNEW5)\n       .MSG=JHABM033\n       .CURSOR=TNEW5\n IF (&TNEW6 \u00ac= &Z)\n    VER(&TMEM6,NONBLANK,MSG=JHABM032)\n    IF (&TMEM6 = &TNEW6)\n       .MSG=JHABM033\n       .CURSOR=TNEW6\n IF (&TNEW7 \u00ac= &Z)\n    VER(&TMEM7,NONBLANK,MSG=JHABM032)\n    IF (&TMEM7 = &TNEW7)\n       .MSG=JHABM033\n       .CURSOR=TNEW7\n IF (&TNEW8 \u00ac= &Z)\n    VER(&TMEM8,NONBLANK,MSG=JHABM032)\n    IF (&TMEM8 = &TNEW8)\n       .MSG=JHABM033\n       .CURSOR=TNEW8\n IF (&TNEW9 \u00ac= &Z)\n    VER(&TMEM9,NONBLANK,MSG=JHABM032)\n    IF (&TMEM9 = &TNEW9)\n       .MSG=JHABM033\n       .CURSOR=TNEW9\n IF (&TNEW10 \u00ac= &Z)\n    VER(&TMEM10,NONBLANK,MSG=JHABM032)\n    IF (&TMEM10 = &TNEW10)\n       .MSG=JHABM033\n       .CURSOR=TNEW10\n IF (&TNEW11 \u00ac= &Z)\n    VER(&TMEM11,NONBLANK,MSG=JHABM032)\n    IF (&TMEM11 = &TNEW11)\n       .MSG=JHABM033\n       .CURSOR=TNEW11\n IF (&TNEW12 \u00ac= &Z)\n    VER(&TMEM12,NONBLANK,MSG=JHABM032)\n    IF (&TMEM12 = &TNEW12)\n       .MSG=JHABM033\n       .CURSOR=TNEW12\n IF (&TNEW13 \u00ac= &Z)\n    VER(&TMEM13,NONBLANK,MSG=JHABM032)\n    IF (&TMEM13 = &TNEW13)\n       .MSG=JHABM033\n       .CURSOR=TNEW13\n IF (&TNEW14 \u00ac= &Z)\n    VER(&TMEM14,NONBLANK,MSG=JHABM032)\n    IF (&TMEM14 = &TNEW14)\n       .MSG=JHABM033\n       .CURSOR=TNEW14\n\n VPUT (PRJ1 LIB1 TYP1 OUTDSN BREP) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHABP05": {"ttr": 2305, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n /* 01/27/84 Mura - change SYSLIB vars to BPL1/BPL2 from BCL1/BCL2   */\n /* 02/06/84 Mura - add third compile SYSLIB (BCL3)                  */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%----------------  BATCH PLI OPTIMIZER COMPILE (AND LINK)  ---------------------\n%COMMAND ===>_ZCMD                                                             +\n%\n+COMPILE PROC    %===>_PL1PRC  +(PLIXC or PLIXCL)\n+\n+PROJECT%===>_PRJ1    +\n+GROUP  %===>_LIB1    +\n+TYPE   %===>_TYP1    +\n+MEMBER %===>_TMEM    +  OTHER DSN%===>_DSN                                    +\n\n+COMPILER OPTIONS%===>_BPLO\n+PLI SYSLIBS     %===>_BPL1                                        +\n                 %===>_BPL2                                        +\n                 %===>_BCL3                                        +\n\n+(Linkage editor parameters are ignored if proc is PLIXC.)\n+LINK TO         %===>_LNKLB2                                          +\n+MEMBER NAME     %===>_TLMEM   +\n+ENTRY POINT     %===>_TENTRY  +\n+LINK EDIT PARMS %===>_BLNK                                 +\n+LINK SYSLIBS    %===>_BSL1                                        +\n                 %===>_BSL2                                        +\n)INIT\n  &DSN = &Z   &TMEM = &Z   &TLMEM = &Z   &TENTRY = &Z\n  .HELP = JHABH05\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n  &LOGMSG = JHABM059\n  IF (&PL1PRC = PLIXC)\n     &LOGMSG = JHABM058\n\n  VER(&PL1PRC,NB,NAME)\n\n  IF (&DSN = &Z)\n     VER(&PRJ1,NONBLANK,DSNAME)\n     VER(&LIB1,NONBLANK,DSNAME)\n     VER(&TYP1,NONBLANK,DSNAME)\n     VER(&TMEM,NONBLANK,NAME)\n     &TDSN = '&PRJ1..&LIB1..&TYP1(&TMEM)'\n     IF (&TLMEM = &Z)\n        &TLMEM = &TMEM       /* SET LINK MEM NAME = SRC MEM NAME */\n\n  IF (&DSN \u00ac= &Z)\n     VER(&DSN,DSNAME)\n     &T1=TRUNC(&DSN,'(')\n     &T1=.TRAIL\n     &T2=TRUNC(&T1,')')      /* ISOLATE MEMBER NAME              */\n     VER(&T2,NONBLANK,NAME,MSG=JHA@M008)\n     IF (&TLMEM = &Z)\n        &TLMEM = &T2         /* SET LINK MEM NAME = SRC MEM NAME */\n     &T1=TRUNC(&DSN,1)       /* CHECK FOR INITIAL APOSTROPHE     */\n     IF (&T1 \u00ac= '''')\n        &TDSN = '&ZPREFIX..&DSN'\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TDSN = TRUNC(&T2,'''')   /* STRIP OFF APOSTROPHES       */\n  VER(&TDSN,DSNAME)\n\n  &TBPL1 = &Z                        /*                      01/27/84*/\n  VER(&BPL1,DSNAME)                  /*                      01/27/84*/\n  IF (&BPL1 \u00ac= &Z)                   /*                      01/27/84*/\n     &T1=TRUNC(&BPL1,'(')            /*                      01/27/84*/\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BPL1,1)              /*                      01/27/84*/\n     IF (&T1 \u00ac= '''')\n        &TBPL1 = '&ZPREFIX..&BPL1'   /* ADD USER'S TSO PREFIX01/27/84*/\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBPL1 = TRUNC(&T2,'''')        /* STRIP OFF QUOTES FOR JCL */\n     VER(&TBPL1,DSNAME)              /*                      01/27/84*/\n\n  &TBPL2 = &Z                        /*                      01/27/84*/\n  VER(&BPL2,DSNAME)                  /*                      01/27/84*/\n  IF (&BPL2 \u00ac= &Z)                   /*                      01/27/84*/\n     &T1=TRUNC(&BPL2,'(')            /*                      01/27/84*/\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BPL2,1)              /*                      01/27/84*/\n     IF (&T1 \u00ac= '''')\n        &TBPL2 = '&ZPREFIX..&BPL2'   /* ADD USER'S TSO PREFIX01/27/84*/\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBPL2 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL     */\n     VER(&TBPL2,DSNAME)              /*                      01/27/84*/\n\n  &TBCL3 = &Z                        /*                      01/27/84*/\n  VER(&BCL3,DSNAME)                  /*                      01/27/84*/\n  IF (&BCL3 \u00ac= &Z)                   /*                      01/27/84*/\n     &T1=TRUNC(&BCL3,'(')            /*                      01/27/84*/\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BCL3,1)              /*                      01/27/84*/\n     IF (&T1 \u00ac= '''')\n        &TBCL3 = '&ZPREFIX..&BCL3'   /* ADD USER'S TSO PREFIX01/27/84*/\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBCL3 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL     */\n     VER(&TBCL3,DSNAME)              /*                      01/27/84*/\n\n  &TLNKLB2 = &Z\n  VER(&LNKLB2,DSNAME)\n  IF (&LNKLB2 \u00ac= &Z)\n     &T1=TRUNC(&LNKLB2,1)\n     IF (&T1 \u00ac= '''')\n        &TLNKLB2 = '&ZPREFIX..&LNKLB2' /* ADD USER'S TSO PREFIX      */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TLNKLB2 = TRUNC(&T2,'''')   /* STRIP OFF QUOTES FOR JCL     */\n     VER(&TLNKLB2,DSNAME)\n  IF (&PL1PRC \u00ac= PLIXC)\n     VER(&LNKLB2,NONBLANK)\n\n  VER(&TLMEM,NAME)\n\n  VER(&TENTRY,NAME)\n\n  &TBSL1 = &Z\n  VER(&BSL1,DSNAME)\n  IF (&BSL1 \u00ac= &Z)\n     &T1=TRUNC(&BSL1,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED   */\n     &T1=TRUNC(&BSL1,1)\n     IF (&T1 \u00ac= '''')\n        &TBSL1 = '&ZPREFIX..&BSL1'   /* ADD USER'S TSO PREFIX        */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBSL1 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL     */\n     VER(&TBSL1,DSNAME)\n\n  &TBSL2 = &Z\n  VER(&BSL2,DSNAME)\n  IF (&BSL2 \u00ac= &Z)\n     &T1=TRUNC(&BSL2,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED   */\n     &T1=TRUNC(&BSL2,1)\n     IF (&T1 \u00ac= '''')\n        &TBSL2 = '&ZPREFIX..&BSL2'   /* ADD USER'S TSO PREFIX        */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBSL2 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL     */\n     VER(&TBSL2,DSNAME)\n\n  VPUT (PRJ1 LIB1 TYP1 PL1PRC BSL1 BSL2 BPL1 BPL2 BCL3\n        LNKLB2 BPLO BLNK) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP07": {"ttr": 2309, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%---------------------------  BATCH LINKAGE EDIT  ------------------------------\n%COMMAND ===>_ZCMD                                                             +\n%\n+INPUT LOAD LIBRARIES (Referenced by control cards below):\n+            DD1%===>_LNKDD1                                 +\n+            DD2%===>_LNKDD2                                 +\n+\n+LINK TO        %===>_LNKLB2                                 +\n+MEMBER NAME    %===>_TLMEM   +\n+ENTRY POINT    %===>_TENTRY  +\n+LINK EDIT PARMS%===>_BLNK                                                %\n+LINK SYSLIBS   %===>_BSL1                                        +\n+               %===>_BSL2                                        +\n+\n+LINK CONTROL CARDS:\n+               %===>_LNKC1                                       +\n+               %===>_LNKC2                                       +\n+               %===>_LNKC3                                       +\n+\n%                Note: \"NAME\" and \"ENTRY\" cards will be generated automatically\n)INIT\n  &TLMEM = &Z   &TENTRY = &Z\n  .HELP = JHABH07\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n  &LOGMSG = JHABM079\n\n  &TLNKDD1 = &Z\n  VER(&LNKDD1,DSNAME)\n  IF (&LNKDD1 \u00ac= &Z)\n     &T1=TRUNC(&LNKDD1,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&LNKDD1,1)\n     IF (&T1 \u00ac= '''')\n        &TLNKDD1 = '&ZPREFIX..&LNKDD1' /* ADD USER'S TSO PREFIX     */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TLNKDD1 = TRUNC(&T2,'''')   /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TLNKDD1,DSNAME)\n\n  &TLNKDD2 = &Z\n  VER(&LNKDD2,DSNAME)\n  IF (&LNKDD2 \u00ac= &Z)\n     &T1=TRUNC(&LNKDD2,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&LNKDD2,1)\n     IF (&T1 \u00ac= '''')\n        &TLNKDD2 = '&ZPREFIX..&LNKDD2' /* ADD USER'S TSO PREFIX     */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TLNKDD2 = TRUNC(&T2,'''')   /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TLNKDD2,DSNAME)\n\n  VER(&LNKLB2,NB,DSNAME)\n  IF (&LNKLB2 \u00ac= &Z)\n     &T1=TRUNC(&LNKLB2,1)\n     IF (&T1 \u00ac= '''')\n        &TLNKLB2 = '&ZPREFIX..&LNKLB2' /* ADD USER'S TSO PREFIX     */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TLNKLB2 = TRUNC(&T2,'''')   /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TLNKLB2,DSNAME)\n\n  VER(&TLMEM,NB,NAME)\n\n  VER(&TENTRY,NAME)\n\n  &TBSL1 = &Z\n  VER(&BSL1,DSNAME)\n  IF (&BSL1 \u00ac= &Z)\n     &T1=TRUNC(&BSL1,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BSL1,1)\n     IF (&T1 \u00ac= '''')\n        &TBSL1 = '&ZPREFIX..&BSL1'   /* ADD USER'S TSO PREFIX       */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBSL1 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TBSL1,DSNAME)\n\n  &TBSL2 = &Z\n  VER(&BSL2,DSNAME)\n  IF (&BSL2 \u00ac= &Z)\n     &T1=TRUNC(&BSL2,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG = JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n     &T1=TRUNC(&BSL2,1)\n     IF (&T1 \u00ac= '''')\n        &TBSL2 = '&ZPREFIX..&BSL2'   /* ADD USER'S TSO PREFIX       */\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TBSL2 = TRUNC(&T2,'''')     /* STRIP OFF QUOTES FOR JCL    */\n     VER(&TBSL2,DSNAME)\n\n  VPUT (LNKDD1 LNKDD2 LNKLB2 LNKC1 LNKC2 LNKC3\n        BLNK BSL1 BSL2) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHABP09": {"ttr": 2312, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/04/84 Mura - variable name chgd from PROF to JHSCRPRF         */\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%---------------------------  BATCH SCRIPT/VS  ---------------------------------\n%COMMAND ===>_ZCMD                                                             +\n%\n+ISPF LIBRARY:\n+   PROJECT%===>_PRJ1    +   %Remember: all members must be unnumbered.\n+   GROUP  %===>_LIB1    +\n+   TYPE   %===>_TYP1    +\n+\n+OTHER PARTITIONED DATA SET:\n+   DATA SET NAME %===>_DSN                                                    +\n+\n+COPIES        %===>_COPIES+       PROFILE%===>_JHSCRPRF+\n+CHAR1         %===>_SCHAR1+       CHAR2  %===>_SCHAR2+\n+DEVICE        %===>_SDEV   +      FCB    %===>_SFCB +(May be blank)\n+SPELLING CHECK%===>_PDS+(YES/NO)  MESSAGE%===>_JHDCFMSG                       +\n+OTHER PARMS   %===>_PDOS\n                                                                               +\n+MEMBER%===>_TMEM1   +MEMBER%===>_TMEM2   +MEMBER%===>_TMEM3   +\n+MEMBER%===>_TMEM4   +MEMBER%===>_TMEM5   +MEMBER%===>_TMEM6   +\n+MEMBER%===>_TMEM7   +MEMBER%===>_TMEM8   +MEMBER%===>_TMEM9   +\n+MEMBER%===>_TMEM10  +MEMBER%===>_TMEM11  +MEMBER%===>_TMEM12  +\n+MEMBER%===>_TMEM13  +MEMBER%===>_TMEM14  +MEMBER%===>_TMEM15  +\n+MEMBER%===>_TMEM16  +MEMBER%===>_TMEM17  +MEMBER%===>_TMEM18  +\n+MEMBER%===>_TMEM19  +MEMBER%===>_TMEM20  +MEMBER%===>_TMEM21  +\n)INIT\n  .HELP = JHABH09\n  .CURSOR = DSN\n  &DSN = &Z\n  &TMEM1 = &Z   &TMEM2 = &Z   &TMEM3 = &Z   &TMEM4 = &Z   &TMEM5 = &Z\n  &TMEM6 = &Z   &TMEM7 = &Z   &TMEM8 = &Z   &TMEM9 = &Z   &TMEM10 = &Z\n  &TMEM11 = &Z  &TMEM12 = &Z  &TMEM13 = &Z  &TMEM14 = &Z  &TMEM15 = &Z\n  &TMEM16 = &Z  &TMEM17 = &Z  &TMEM18 = &Z  &TMEM19 = &Z  &TMEM20 = &Z\n  &TMEM21 = &Z\n  &PDS = TRANS(TRUNC(&PDS,1)  Y,YES  *,NO)\n  IF (&PROF \u00ac= &Z)                   /*T temporary to help   01/04/84*/\n     IF (&JHSCRPRF = &Z)             /*T convert user        01/04/84*/\n        &JHSCRPRF = &PROF            /*T                     01/04/84*/\n        &PROF = &Z                   /*T                     01/04/84*/\n        VPUT (PROF) PROFILE          /*T                     01/04/84*/\n  IF (&JHSCRPRF = &Z) &JHSCRPRF = SSPROF  /*                 01/04/84*/\n  IF (&SCHAR1 = &Z)  &SCHAR1 = GT12\n  IF (&SCHAR2 = &Z)  &SCHAR2 = GB12\n  IF (&SDEV = &Z)    &SDEV = 3800N8S\n  IF (&PDOS = &Z)    &PDOS = 'B(1.5I) SY(C 1)'\n  IF (&JHDCFMSG = &Z)   &JHDCFMSG = 'DELAY ID'\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n  &LOGMSG = JHABM099\n\n  IF (&DSN = &Z)\n     VER(&PRJ1,NONBLANK,DSNAME)\n     VER(&LIB1,NONBLANK,DSNAME)\n     VER(&TYP1,NONBLANK,DSNAME)\n     &TDSN = '&PRJ1..&LIB1..&TYP1'\n  IF (&DSN \u00ac= &Z)\n     VER(&DSN,DSNAME)\n     &T1=TRUNC(&DSN,'(')\n     IF (.TRAIL \u00ac= &Z)  .MSG=JHA@M009 /* member name not allowed     */\n     &T1=TRUNC(&DSN,1)               /* CHECK FOR INITIAL APOSTROPHE */\n     IF (&T1 \u00ac= '''')\n        &TDSN = '&ZPREFIX..&DSN'\n     &T2=.TRAIL\n     IF (&T1 = '''')\n        &TDSN = TRUNC(&T2,'''')      /* STRIP OFF APOSTROPHES        */\n  VER(&TDSN,DSNAME)\n\n  VER(&COPIES,NB,RANGE,1,255)\n  VER(&JHSCRPRF,NB,NAME)             /*                      01/04/84*/\n  VER(&SCHAR1,NAME)\n  VER(&SCHAR2,NAME)\n  VER(&SDEV,NONBLANK)\n  &PDS = TRUNC(&PDS,1)   VER(&PDS,NB,LIST,Y,N)\n\n  VER(&TMEM1,NB,NAME)\n  VER(&TMEM2,NAME)\n  VER(&TMEM3,NAME)\n  VER(&TMEM4,NAME)\n  VER(&TMEM5,NAME)\n  VER(&TMEM6,NAME)\n  VER(&TMEM7,NAME)\n  VER(&TMEM8,NAME)\n  VER(&TMEM9,NAME)\n  VER(&TMEM10,NAME)\n  VER(&TMEM11,NAME)\n  VER(&TMEM12,NAME)\n  VER(&TMEM13,NAME)\n  VER(&TMEM14,NAME)\n  VER(&TMEM15,NAME)\n  VER(&TMEM16,NAME)\n  VER(&TMEM17,NAME)\n  VER(&TMEM18,NAME)\n  VER(&TMEM19,NAME)\n  VER(&TMEM20,NAME)\n  VER(&TMEM21,NAME)\n  VPUT (PRJ1 LIB1 TYP1 COPIES JHSCRPRF SCHAR1 SCHAR2 SFCB SDEV PDS\n        PDOS JHDCFMSG) PROFILE       /*                      01/04/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP10": {"ttr": 2315, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n /* 01/20/84 Mura - allow IMSP                                       */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%----------------------------  BATCH FORMAT PURGE  -----------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+IMS SYSTEM%===>_E+(A, B, P, or T)\n\n+         MID/MOD                          DIF/DOF\n\n+    MEMBER%===>_TMEM1   +            MEMBER%===>_TMEMD1  +\n+    MEMBER%===>_TMEM2   +            MEMBER%===>_TMEMD2  +\n+    MEMBER%===>_TMEM3   +            MEMBER%===>_TMEMD3  +\n+    MEMBER%===>_TMEM4   +            MEMBER%===>_TMEMD4  +\n+    MEMBER%===>_TMEM5   +            MEMBER%===>_TMEMD5  +\n+    MEMBER%===>_TMEM6   +            MEMBER%===>_TMEMD6  +\n+    MEMBER%===>_TMEM7   +            MEMBER%===>_TMEMD7  +\n+    MEMBER%===>_TMEM8   +            MEMBER%===>_TMEMD8  +\n+    MEMBER%===>_TMEM9   +            MEMBER%===>_TMEMD9  +\n+    MEMBER%===>_TMEM10  +            MEMBER%===>_TMEMD10 +\n+\n+Note: Use of this option will force job class to C for IMST, D for\n+      IMSA, for the current job.\n)INIT\n  .HELP = JHABH10\n  .CURSOR = E\n  IF (&E \u00ac= A,B,P,T)   &E = &Z       /*                      01/20/84*/\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n  VER(&E,NB,LIST,A,B,P,T)            /*                      01/20/84*/\n  IF (&TMEMD1 = &Z)\n     VER(&TMEM1,NONBLANK)\n  VER(&TMEM1,NAME)\n  VER(&TMEMD1,NAME)\n  VER(&TMEM2,NAME)\n  VER(&TMEMD2,NAME)\n  VER(&TMEM3,NAME)\n  VER(&TMEMD3,NAME)\n  VER(&TMEM4,NAME)\n  VER(&TMEMD4,NAME)\n  VER(&TMEM5,NAME)\n  VER(&TMEMD5,NAME)\n  VER(&TMEM6,NAME)\n  VER(&TMEMD6,NAME)\n  VER(&TMEM7,NAME)\n  VER(&TMEMD7,NAME)\n  VER(&TMEM8,NAME)\n  VER(&TMEMD8,NAME)\n  VER(&TMEM9,NAME)\n  VER(&TMEMD9,NAME)\n  VER(&TMEM10,NAME)\n  VER(&TMEMD10,NAME)\n  &JCLASS = TRANS(&E       /* set required job class (this job only) */\n                 A,D\n                 T,C\n                 P,C                 /*                      01/20/84*/\n                 *,&JCLASS )\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP14": {"ttr": 2317, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n /* 01/20/84 Mura - change default limit to 3                        */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%--------------------------  BATCH GDG INDEX CREATE  ---------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+INDEX NAME   %===>_DSN                                       +\n+\n+LIMIT        %===>_LIM+     (1 - 255)\n+EMPTY/NOEMPTY%===>_EMP    +\n+OWNER        %===>_GDOWN   +(Optional)\n+\n+\n+Remember: If the index name is not enclosed in apostrophes, your prefix will\n+          be front-appended to the name.\n)INIT\n  .HELP = JHABH@0                    /*                      01/17/84*/\n  &DSN = &Z\n  IF (&LIM = &Z)  &LIM = 3           /*                      01/20/84*/\n  IF (&EMP = &Z)  &EMP = NOEMPTY\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n  &LOGMSG = JHABM149\n\n  VER(&DSN,NB,DSNAME)\n  &T1=TRUNC(&DSN,'(')\n  IF (.TRAIL \u00ac= &Z)  .MSG=JHA@M009   /* MEMBER NAME NOT ALLOWED      */\n  &T1=TRUNC(&DSN,1)                  /* CHECK FOR INITIAL APOSTROPHE */\n  IF (&T1 \u00ac= '''')\n     &TDSN = '&ZPREFIX..&DSN'\n  &T2=.TRAIL\n  IF (&T1 = '''')\n     &TDSN = TRUNC(&T2,'''')         /* STRIP OFF APOSTROPHES        */\n  VER(&TDSN,DSNAME)\n\n  VER(&LIM,NB,RANGE,1,255)\n  &EMP = TRANS(TRUNC(&EMP,1)  E,EMPTY  N,NOEMPTY  *,* )\n  VER(&EMP,NB,LIST,EMPTY,NOEMPTY)\n  VPUT (GDOWN) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP18": {"ttr": 2319, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 10/19/83 Mura - remove code to convert user parms from old option*/\n /* 10/19/83 Mura - trans. LEVEL, ENTRY abbrevs. to full word        */\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  %  TYPE(TEXT)   INTENS(HIGH)   SKIP(ON)\n  +  TYPE(TEXT)   INTENS(LOW)    SKIP(ON)\n  \u00a2  TYPE(TEXT)   INTENS(LOW)    SKIP(OFF)\n)BODY\n%----------------------------  BATCH LISTCAT  ----------------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+LISTCAT PARAMETERS:\n%   ===>_JHLISTCP\n                                                                               +\n+\n)INIT\n  .HELP = JHABH@0                    /*                      01/17/84*/\n\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001   /*                              */\n  &LOGMSG = JHABM189                 /*                              */\n\n  /* if user abbreviated LEVEL or ENTRY, set to full keyword:        */\n  &T3 = ' '                          /*                      10/19/83*/\n  &T1 = TRUNC(&JHLISTCP,' ')         /* isolate first token  10/19/83*/\n  IF (&T1 = 'ALL')                   /* if ALL is 1st param  10/19/83*/\n     &T3 = 'ALL'                     /* then save it         10/19/83*/\n     &JHLISTCP = .TRAIL              /* and work with rest   10/19/83*/\n  &T1 = TRUNC(&JHLISTCP,'(')         /* get first parm       10/19/83*/\n  &T2 = .TRAIL                       /*                      10/19/83*/\n  &T1 = TRUNC(&T1,1)                 /* get first char       10/19/83*/\n  &JHLISTCP = TRANS(&T1              /*                      10/19/83*/\n                L,'LEVEL(&T2'        /* LEVEL type           10/19/83*/\n                E,'ENTRY(&T2'        /* ENTRY type           10/19/83*/\n                *,&JHLISTCP)         /* leave alone          10/19/83*/\n  &JHLISTCP = '&T3 &JHLISTCP'        /* restore ALL if neces.10/19/83*/\n\n  VPUT (JHLISTCP) PROFILE            /* first save in profile        */\n\n  IF (&JHLISTCP = &Z)                /* then check for blank         */\n     &JHLISTCP = 'LEVEL(&ZPREFIX)'   /* set default for batch        */\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP19": {"ttr": 2321, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 07/26/83 Mura - additional validation of volume serial           */\n /* 07/26/83 Mura - determine device type from volume serial if blank*/\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%--------------------------  BATCH IEHPROGM  -----------------------------------\n%OPTION  ===>_ZCMD                                                             +\n+\n+        %1+- Scratch                 %4+- Catalog\n+        %2+- Scratch and uncatalog   %5+- Rename\n+        %3+- Uncatalog               %6+- Rename and recatalog\n+\n+DATA SET NAME%===>_DSN                                         +\n+\n+FOR ALL OPTIONS EXCEPT%3+ENTER THE FOLLOWING:\n+  VOLUME(S)  %===>_TVOL                              +(Separated by commas)\n+  DEVICE     %===>_TDEV  +(3350, 3380, 3330V, or 3400-5 for tape)\n+\n+ENTER FOR OPTIONS%1+AND%5+FOR OPERATION ON A%SINGLE MEMBER+OF A LIBRARY:\n+  MEMBER     %===>_TMEM    +\n+\n+ENTER THE FOLLOWING FOR OPTIONS%5+AND%6+ONLY:\n+  NEW NAME   %===>_NEW                                         +\n+\n)INIT\n  .CURSOR = ZCMD\n  .HELP = JHABH@0                    /*                      01/17/84*/\n  &ZCMD = &Z\n\n)PROC\n  &NXTPNL = &Z\n  IF (&ZCMD=1,2,5)\n     IF (&TMEM = &Z)\n        &NXTPNL = JHABP19V           /* second panel for verification*/\n  &LOGMSG = JHABM199\n  VER(&ZCMD,NB,LIST,1,2,3,4,5,6)     /*                      02/21/84*/\n  &O = &ZCMD                    /* must save for JCL after ver. panel*/\n\n  VER(&DSN,NB,DSNAME)\n  &T1=TRUNC(&DSN,'(')\n  IF (.TRAIL \u00ac= &Z)  .MSG=JHA@M009   /* MEMBER NAME NOT ALLOWED      */\n  &T1=TRUNC(&DSN,1)                  /* CHECK FOR INITIAL APOSTROPHE */\n  IF (&T1 \u00ac= '''')\n     &TDSN = '&ZPREFIX..&DSN'\n  &T2=.TRAIL\n  IF (&T1 = '''')\n     &TDSN = TRUNC(&T2,'''')         /* STRIP OFF APOSTROPHES        */\n  VER(&TDSN,DSNAME)\n\n  IF (&ZCMD \u00ac= 3)\n     VER(&TVOL,NB)\n  &T1=TRUNC(&TVOL,6)  &T2='A&T1'     /* must be alphamerics  07/26/83*/\n  VER(&T2,NAME,MSG=JHABM192)         /* validate 1st volser  07/26/83*/\n  &T2=TRUNC(&T1,5)  &T2=.TRAIL       /* get 6th char of vol  07/26/83*/\n  IF(&TVOL\u00ac=&Z) VER(&T2,NB,MSG=JHABM192) /* ensure >= 6 chars07/26/83*/\n  &T1=TRUNC(&TVOL,4)                 /*                      07/26/83*/\n  &T1=TRUNC(&T1,3)  &T2=.TRAIL       /* get 4th char of vol  07/26/83*/\n  &T1=TRUNC(&T1,1)                   /* get 1st char of vol  07/26/83*/\n  IF(&TDEV=&Z)                       /*                      07/26/83*/\n    &TDEV=TRANS(&T2  1,3350  2,3350  /* determine dev type   07/26/83*/\n                     V,3330V $,3330V /*                      07/26/83*/\n                     *,3380 )        /*                      07/26/83*/\n    IF(&T1=0,1,2,3,4,5,6,7,8,9)  &TDEV='3400-5' /* tape      07/26/83*/\n\n  VER(&TDEV,LIST,3330V,3350,3380,'3400-5')\n\n  VER (&TMEM,NAME)\n  IF (&ZCMD = 5,6)\n     VER(&NEW,NONBLANK,MSG=JHABM190)\n\n  &TNEW = &Z\n  IF (&TMEM = &Z)\n     IF (&NEW \u00ac= &Z)\n        VER (&NEW,DSNAME)\n        &T1=TRUNC(&NEW,'(')\n        IF (.TRAIL \u00ac= &Z)  .MSG=JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n        &T1=TRUNC(&NEW,1)               /* CHECK FOR INITIAL APOSTROP*/\n        IF (&T1 \u00ac= '''')\n           &TNEW = '&ZPREFIX..&NEW'\n        &T2=.TRAIL\n        IF (&T1 = '''')\n           &TNEW = TRUNC(&T2,'''')      /* STRIP OFF APOSTROPHES     */\n        VER(&TNEW,DSNAME)\n  IF (&TMEM \u00ac= &Z)\n     VER (&NEW,NAME)\n     &TNEW = &NEW\n\n  &TFUNC = TRANS(&ZCMD\n                 1,'SCRATCH'\n                 2,'SCRATCH + UNCATALOG'\n                 3,'UNCATALOG'\n                 4,'CATALOG'\n                 5,'RENAME'\n                 6,'RENAME + RECATALOG')\n  &ZCMD = &Z\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABP19V": {"ttr": 2563, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%--------------------------  BATCH IEHPROGM  -----------------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n%Verify &TFUNC of the following data set:\n+\n+     DATA SET NAME:%&TDSN\n+\n+     &T01          %&TVOL\n+\n+     &T02          %&TDEV\n+\n+\n%&MSG1\n+\n+\n+\n+\n+Press%ENTER+to confirm operation.\n+Enter%END+command to cancel operation.\n+\n)INIT\n  .HELP = JHABH@0                    /*                      01/17/84*/\n  &ZCMD = &Z   &MSG1 = &Z\n  IF (&O = 1,2,5)\n     IF (&TMEM = &Z)\n        &MSG1 = 'Warning: member name not entered.  &TFUNC +\n                 will apply to entire data set.'\n  &T01 = ' '\n  IF (&TVOL \u00ac= &Z)  &T01 = 'VOLUME SERIAL:'\n  &T02 = ' '\n  IF (&TDEV \u00ac= &Z)  &T02 = 'DEVICE TYPE:'\n\n)PROC\n  IF (&ZCMD = C,CAN,CANCEL)\n     &ZCMD = &Z\n     .RESP = END\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n  &LOGMSG = JHABM199\n  &SKEL = JHABS19                    /* must set after ver.  01/17/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABROB": {"ttr": 2565, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/10/84 Mura - added for JH PDF extensions (change heading)     */\n  _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH)\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON)\n  + TYPE(TEXT) INTENS(LOW)\n  ! TYPE(OUTPUT) INTENS(HIGH) PAD(-)\n 01 TYPE(DATAOUT) INTENS(LOW)\n 02 TYPE(DATAOUT) INTENS(HIGH)\n)BODY WIDTH(&ZWIDTH) EXPAND(//)\n%&JHTITLE -------------------------------------/-/-----%LINE!ZLINES%COL!ZCOLUMS+\n%COMMAND ===>_ZCMD                             / /            %SCROLL ===>_Z   +\n|ZDATA ---------------------------------/ /------------------------------------|\n|                                       / /                                    |\n| --------------------------------------/-/------------------------------------|\n)INIT\n  .HELP = ISR10000         /* DEFAULT TUTORIAL NAME     */\n  .ZVARS = 'ZSCBR'         /* SCROLL AMT VARIABLE NAME  */\n\n)REINIT\n  REFRESH(ZCMD,ZSCBR,ZDATA,ZLINES,ZCOLUMS)\n  .ATTRCHAR(+) = 'INTENS(&ZINTEN)'\n\n)PROC\n  &ZCURSOR = .CURSOR\n  &ZCSROFF = .CSRPOS\n  &ZLVLINE = LVLINE(ZDATA)\n\n)END\n\n/*  DYNAMIC AREA SCREEN WIDTH FROM PQUERY. (80,132,160)\n/*  DYNAMIC AREA SCREEN DEPTH FROM PQUERY. (24,32,43,27,60)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHABS@C": {"ttr": 2567, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM 10/19/83 MURA - ADD SUPPORT FOR MODIFIABLE PRINT NODE\n)TB 12 73\n)SET J = &JCLASS\n//&ZUSER&YJBCHR!JOB (&YACCT,A,&YAR),&YNAME,MSGLEVEL=(&YML),!&Y7380\n//             CLASS=&J,MSGCLASS=&YMC,NOTIFY=&ZUSER<,COND=(&YC,LT)|>\n</*JOBPARM &YJBPRM.|>\n</*XEQ &YNODE                                      &ZDATE &ZTIME|>\n</*ROUTE PRINT &JHBPTNOD                              &ZDATE &ZTIME|>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS@I": {"ttr": 2569, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//*\n//WARN     EXEC PGM=IEFBR14            FORCE MSG IF RC >> &YC\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS0A": {"ttr": 2571, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  JH BG - AMBLIST OF &TLNKLB &TVOL\n//*---------------------------------------------------------------------\n//AMBL&S   EXEC PGM=AMBLIST,REGION=128K\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DSN=&TLNKLB,\n<//             VOL=SER=&TVOL,UNIT=&TUNIT,|>\n//             DISP=SHR\n//SYSIN    DD  *\n)SEL &O = 2 | &O = 3\n  LISTIDR MEMBER=&TMEM1\n)ENDSEL\n)SEL &O = 1 | &O = 3\n  LISTLOAD OUTPUT=XREF,MEMBER=&TMEM1\n)ENDSEL\n)SEL &O = 2 | &O = 3\n  <LISTIDR MEMBER=&TMEM2|>\n)ENDSEL\n)SEL &O = 1 | &O = 3\n  <LISTLOAD OUTPUT=XREF,MEMBER=&TMEM2|>\n)ENDSEL\n)SEL &O = 2 | &O = 3\n  <LISTIDR MEMBER=&TMEM3|>\n)ENDSEL\n)SEL &O = 1 | &O = 3\n  <LISTLOAD OUTPUT=XREF,MEMBER=&TMEM3|>\n)ENDSEL\n)SEL &O = 2 | &O = 3\n  <LISTIDR MEMBER=&TMEM4|>\n)ENDSEL\n)SEL &O = 1 | &O = 3\n  <LISTLOAD OUTPUT=XREF,MEMBER=&TMEM4|>\n)ENDSEL\n)SEL &O = 2 | &O = 3\n  <LISTIDR MEMBER=&TMEM5|>\n)ENDSEL\n)SEL &O = 1 | &O = 3\n  <LISTLOAD OUTPUT=XREF,MEMBER=&TMEM5|>\n)ENDSEL\n)SEL &O = 4\n  LISTLPA\n)ENDSEL\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS0G": {"ttr": 2573, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  JH BG - GTF EDIT OF &TDSN\n<//*                     ON VOLUME &GTFVOL|>\n//*---------------------------------------------------------------------\n//GTFE&S   EXEC PGM=AMDPRDMP,REGION=256K\n//SYSPRINT DD  SYSOUT=*\n//PRINTER  DD  SYSOUT=&GTFC\n//TRACE    DD  DSN=&TDSN,\n//             <UNIT=TAPE9,VOL=SER=&GTFVOL,|>DISP=SHR\n//SYSIN    DD  *\n    EDIT DD=TRACE,\n    &GTFOPT1\n    &GTFOPT2\n    &GTFOPT3\n    &GTFOPT4\n   END\n/*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS0Z": {"ttr": 2575, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM 08/02/84 MURA - ADD VOLUME SERIAL TO COMMENTS\n)SET S = &S + 1\n//*---------------------------------------------------------------------\n)SEL &ZCMD \u00ac= M\n//*  JH BG - SUPERZAP &TZFUNC OF &TLNKLB &TVOL\n//*                            &JHNAME &JHCSECT\n)ENDSEL\n)SEL &ZCMD = M\n//*  JH BG - SUPERZAP TO &TLNKLB &TVOL\n//*                      &JHNAME &JHCSECT\n<//*          FIX ID: &FIXNO|>\n)ENDSEL\n//*---------------------------------------------------------------------\n//ZAP&S    EXEC PGM=IMASPZAP,REGION=128K\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DSN=&TLNKLB,\n//             <VOL=SER=&TVOL,UNIT=&TUNIT,|>DISP=SHR\n//SYSIN    DD  *\n     &TZFUNC &JHNAME &JHCSECT\n)SEL &ZCMD = M\n     <VER &DISPL1 &VER1 |>\n     <VER &DISPL2 &VER2 |>\n     <VER &DISPL3 &VER3 |>\n     <VER &DISPL4 &VER4 |>\n     <VER &DISPL5 &VER5 |>\n)SEL &DISPL1 \u00ac= &Z && &REP1 \u00ac= &Z\n     REP &DISPL1 &REP1\n)ENDSEL\n)SEL &DISPL2 \u00ac= &Z && &REP2 \u00ac= &Z\n     REP &DISPL2 &REP2\n)ENDSEL\n)SEL &DISPL3 \u00ac= &Z && &REP3 \u00ac= &Z\n     REP &DISPL3 &REP3\n)ENDSEL\n)SEL &DISPL4 \u00ac= &Z && &REP4 \u00ac= &Z\n     REP &DISPL4 &REP4\n)ENDSEL\n)SEL &DISPL5 \u00ac= &Z && &REP5 \u00ac= &Z\n     REP &DISPL5 &REP5\n)ENDSEL\n     <IDRDATA &FIXNO |>\n)ENDSEL\n/*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS01": {"ttr": 2577, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  JH BG - ASSEMBLY OF &TDSN\n)SEL &ASPRC \u00ac= ASMHC\n//*          AND LINK TO &TLNKLB2.(&TLMEM.)\n)ENDSEL\n//*---------------------------------------------------------------------\n//STEP&S   EXEC &ASPRC,\n//    REGION.ASM=&YRGN,\n)SEL &ASPRC \u00ac= ASMHC && &BLNK \u00ac= &Z\n//    PARM.LKED='&BLNK',\n)ENDSEL\n//    CLASS='*'\n)SEL &TBAL1 \u00ac= &Z | &TBAL2 \u00ac= &Z | &JHUSER1 = M | &JHUSER1 = K\n//ASM.SYSLIB  DD DSN=SYS1.BLOCKLIB,DISP=SHR\n<//         DD  DSN=&TBAL1,DISP=SHR|>\n<//         DD  DSN=&TBAL2,DISP=SHR|>\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n)SEL &JHUSER1 = M | &JHUSER1 = K\n//*         DD  DSN=ES2.MACLIB,DISP=SHR\n)ENDSEL\n//         DD  DSN=JH.MACLIB,DISP=SHR\n)ENDSEL\n//ASM.SYSUT1   DD UNIT=DISK\n//ASM.SYSIN    DD DSN=&TDSN,DISP=SHR\n)SEL &ASPRC \u00ac= ASMHC\n//LKED.SYSLMOD DD DSN=&TLNKLB2,DISP=SHR,UNIT=\n)SEL &TBSL1 \u00ac= &Z\n//LKED.SYSLIB DD DSN=&TBSL1,DISP=SHR\n<//         DD DSN=&TBSL2,DISP=SHR|>\n//         DD  DSN=SYS1.PRODUCT,DISP=SHR\n)ENDSEL\n)SEL &TBSL1 = &Z && &TBSL2 \u00ac= &Z\n//LKED.SYSLIB DD DSN=&TBSL2,DISP=SHR\n//         DD  DSN=SYS1.PRODUCT,DISP=SHR\n)ENDSEL\n//LKED.SYSUT1  DD UNIT=DISK\n//*   IDENTIFY &TLMEM('&TLMEM &ZUSER &ZDATE &ZTIME')\n//LKED.SYSIN DD *\n   <ENTRY &TENTRY|>\n   NAME &TLMEM.(R)\n/*\n)ENDSEL\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS02": {"ttr": 2579, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  JH BG - COBOL COMPILE OF &TDSN\n)SEL &CLPRC \u00ac= COBVC && &CLPRC \u00ac= COBWC\n//*          AND LINK TO &TLNKLB2.(&TLMEM.)\n)ENDSEL\n//*---------------------------------------------------------------------\n//STEP&S   EXEC &CLPRC,\n<//    PARM.COB='&BCOB',|>\n)SEL &CLPRC \u00ac= COBVC && &CLPRC \u00ac= COBWC && &BLNK \u00ac= &Z\n//    PARM.LKED='&BLNK',\n)ENDSEL\n//    CLASS='*'\n//COB.SYSLIB   DD\n<//         DD DSN=&TBCL1,DISP=SHR|>\n<//         DD DSN=&TBCL2,DISP=SHR|>\n<//         DD DSN=&TBCL3,DISP=SHR|>\n//COB.SYSIN    DD DSN=&TDSN,DISP=SHR\n)SEL &CLPRC \u00ac= COBVC && &CLPRC \u00ac= COBWC\n//LKED.SYSLMOD DD DSN=&TLNKLB2,DISP=SHR,UNIT=\n)SEL &TBSL1 \u00ac= &Z\n//LKED.SYSLIB DD DSN=&TBSL1,DISP=SHR\n)SEL &TBSL2 \u00ac= &Z\n//         DD DSN=&TBSL2,DISP=SHR\n)ENDSEL\n//         DD DSN=SYS1.COBLIB,DISP=SHR\n//         DD DSN=SYS1.PRODUCT,DISP=SHR\n)ENDSEL\n)SEL &TBSL1 = &Z && &TBSL2 \u00ac= &Z\n//LKED.SYSLIB DD DSN=&TBSL2,DISP=SHR\n//         DD DSN=SYS1.COBLIB,DISP=SHR\n//         DD DSN=SYS1.PRODUCT,DISP=SHR\n)ENDSEL\n//LKED.SYSIN DD *\n   <ENTRY &TENTRY|>\n   NAME &TLMEM.(R)\n/*\n)ENDSEL\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS03": {"ttr": 2581, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM 11/10/82 MURA - GEN UNIT=DISK FOR OUT DD IF SPACE EVEN W/O VOL\n)CM 01/31/84 MURA - USE UNIT DETERMINED IN PANEL\n)SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  JH BG - COPY FROM &TDSN &TVOL1\n//*                 TO &TOUTDSN &TVOL2\n)SEL &TMEM1 = *ALL*\n//*                *** ALL MEMBERS ***\n)ENDSEL\n//*---------------------------------------------------------------------\n//COPY&S   EXEC PGM=IEBCOPY,REGION=192K\n//SYSPRINT DD  SYSOUT=*\n//IN       DD  DSN=&TDSN,\n//             <VOL=SER=&TVOL1,UNIT=&TUNIT1,|>DISP=SHR\n//OUT      DD  DSN=&TOUTDSN,\n)SEL &TVOL2 \u00ac= &Z | &TSPACE \u00ac= &Z\n//             UNIT=&TUNIT2,VOL=SER=&TVOL2,\n)ENDSEL\n//             <DISP=(,CATLG),SPACE=(&TSPACE)|DISP=SHR>\n//SYSUT3   DD  UNIT=DISK,SPACE=(TRK,(5,5))\n//SYSUT4   DD  UNIT=DISK,SPACE=(TRK,(5,5))\n//SYSIN    DD  *\n)SEL &BREP \u00ac= Y\n   COPY O=OUT,I=IN\n)ENDSEL\n)SEL &BREP = Y\n   COPY O=OUT,I=((IN,R))\n)ENDSEL\n)SEL &TMEM1 \u00ac= *ALL* && &TMEM1 \u00ac= &Z AND &TNEW1 \u00ac= &Z\n   S M=((&TMEM1.,&TNEW1.))\n)ENDSEL\n)SEL &TMEM1 \u00ac= *ALL* && &TMEM1 \u00ac= &Z AND &TNEW1 = &Z\n   S M=(&TMEM1.)\n)ENDSEL\n)SEL &TMEM2 \u00ac= &Z AND &TNEW2 \u00ac= &Z\n   S M=((&TMEM2.,&TNEW2.))\n)ENDSEL\n)SEL &TMEM2 \u00ac= &Z AND &TNEW2 = &Z\n   S M=(&TMEM2.)\n)ENDSEL\n)SEL &TMEM3 \u00ac= &Z AND &TNEW3 \u00ac= &Z\n   S M=((&TMEM3.,&TNEW3.))\n)ENDSEL\n)SEL &TMEM3 \u00ac= &Z AND &TNEW3 = &Z\n   S M=(&TMEM3.)\n)ENDSEL\n)SEL &TMEM4 \u00ac= &Z AND &TNEW4 \u00ac= &Z\n   S M=((&TMEM4.,&TNEW4.))\n)ENDSEL\n)SEL &TMEM4 \u00ac= &Z AND &TNEW4 = &Z\n   S M=(&TMEM4.)\n)ENDSEL\n)SEL &TMEM5 \u00ac= &Z AND &TNEW5 \u00ac= &Z\n   S M=((&TMEM5.,&TNEW5.))\n)ENDSEL\n)SEL &TMEM5 \u00ac= &Z AND &TNEW5 = &Z\n   S M=(&TMEM5.)\n)ENDSEL\n)SEL &TMEM6 \u00ac= &Z AND &TNEW6 \u00ac= &Z\n   S M=((&TMEM6.,&TNEW6.))\n)ENDSEL\n)SEL &TMEM6 \u00ac= &Z AND &TNEW6 = &Z\n   S M=(&TMEM6.)\n)ENDSEL\n)SEL &TMEM7 \u00ac= &Z AND &TNEW7 \u00ac= &Z\n   S M=((&TMEM7.,&TNEW7.))\n)ENDSEL\n)SEL &TMEM7 \u00ac= &Z AND &TNEW7 = &Z\n   S M=(&TMEM7.)\n)ENDSEL\n)SEL &TMEM8 \u00ac= &Z AND &TNEW8 \u00ac= &Z\n   S M=((&TMEM8.,&TNEW8.))\n)ENDSEL\n)SEL &TMEM8 \u00ac= &Z AND &TNEW8 = &Z\n   S M=(&TMEM8.)\n)ENDSEL\n)SEL &TMEM9 \u00ac= &Z AND &TNEW9 \u00ac= &Z\n   S M=((&TMEM9.,&TNEW9.))\n)ENDSEL\n)SEL &TMEM9 \u00ac= &Z AND &TNEW9 = &Z\n   S M=(&TMEM9.)\n)ENDSEL\n)SEL &TMEM10 \u00ac= &Z AND &TNEW10 \u00ac= &Z\n   S M=((&TMEM10.,&TNEW10.))\n)ENDSEL\n)SEL &TMEM10 \u00ac= &Z AND &TNEW10 = &Z\n   S M=(&TMEM10.)\n)ENDSEL\n)SEL &TMEM11 \u00ac= &Z AND &TNEW11 \u00ac= &Z\n   S M=((&TMEM11.,&TNEW11.))\n)ENDSEL\n)SEL &TMEM11 \u00ac= &Z AND &TNEW11 = &Z\n   S M=(&TMEM11.)\n)ENDSEL\n)SEL &TMEM12 \u00ac= &Z AND &TNEW12 \u00ac= &Z\n   S M=((&TMEM12.,&TNEW12.))\n)ENDSEL\n)SEL &TMEM12 \u00ac= &Z AND &TNEW12 = &Z\n   S M=(&TMEM12.)\n)ENDSEL\n)SEL &TMEM13 \u00ac= &Z AND &TNEW13 \u00ac= &Z\n   S M=((&TMEM13.,&TNEW13.))\n)ENDSEL\n)SEL &TMEM13 \u00ac= &Z AND &TNEW13 = &Z\n   S M=(&TMEM13.)\n)ENDSEL\n)SEL &TMEM14 \u00ac= &Z AND &TNEW14 \u00ac= &Z\n   S M=((&TMEM14.,&TNEW14.))\n)ENDSEL\n)SEL &TMEM14 \u00ac= &Z AND &TNEW14 = &Z\n   S M=(&TMEM14.)\n)ENDSEL\n)SEL &TMEM15 \u00ac= &Z AND &TNEW15 \u00ac= &Z\n   S M=((&TMEM15.,&TNEW15.))\n)ENDSEL\n)SEL &TMEM15 \u00ac= &Z AND &TNEW15 = &Z\n   S M=(&TMEM15.)\n)ENDSEL\n)SEL &TMEM16 \u00ac= &Z AND &TNEW16 \u00ac= &Z\n   S M=((&TMEM16.,&TNEW16.))\n)ENDSEL\n)SEL &TMEM16 \u00ac= &Z AND &TNEW16 = &Z\n   S M=(&TMEM16.)\n)ENDSEL\n/*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS05": {"ttr": 2584, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM 10/03/83 MURA - MOVE LKED.SYSLIB AHEAD OF SYSLMOD\n)CM 10/05/83 MURA - ADD REGION.LKED\n)CM 01/27/84 MURA - CHANGE BCL1/BCL2 TO BPL1/BPL2\n)CM 02/06/84 MURA - ADD BCL3\n)SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  JH BG - PLI OPT COMPILE OF &TDSN\n)SEL &PL1PRC \u00ac= PLIXC\n//*          AND LINK TO &TLNKLB2(&TLMEM)\n)ENDSEL\n//*---------------------------------------------------------------------\n//STEP&S   EXEC &PL1PRC,REGION.PLI=256K,\n<//    PARM.PLI='&BPLO',|>\n)SEL &PL1PRC \u00ac= PLIXC\n//    REGION.LKED=256K,\n)SEL &BLNK \u00ac= &Z\n//    PARM.LKED='&BLNK',\n)ENDSEL\n)ENDSEL\n//    CLASS='*'\n)SEL &TBPL1 \u00ac= &Z | &TBPL2 \u00ac= &Z | &TBCL3 \u00ac= &Z\n//PLI.SYSLIB DD DSN=SYS1.BLOCKLIB,DISP=SHR\n<//         DD DSN=&TBPL1,DISP=SHR|>\n<//         DD DSN=&TBPL2,DISP=SHR|>\n<//         DD DSN=&TBCL3,DISP=SHR|>\n)ENDSEL\n//PLI.SYSIN    DD DSN=&TDSN,DISP=SHR\n)SEL &PL1PRC \u00ac= PLIXC\n)SEL &TBSL1 \u00ac= &Z\n//LKED.SYSLIB DD DSN=&TBSL1,DISP=SHR\n)SEL &TBSL2 \u00ac= &Z\n//         DD DSN=&TBSL2,DISP=SHR\n//         DD DSN=SYS1.PLIBASE,DISP=SHR\n)ENDSEL\n)ENDSEL\n)SEL &TBSL1 = &Z && &TBSL2 \u00ac= &Z\n//LKED.SYSLIB DD DSN=&TBSL2,DISP=SHR\n)ENDSEL\n//LKED.SYSLMOD DD DSN=&TLNKLB2,DISP=SHR,UNIT=\n//LKED.SYSIN DD *\n   <ENTRY &TENTRY|>\n   NAME &TLMEM.(R)\n/*\n)ENDSEL\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS07": {"ttr": 2817, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  JH BG - LINKAGE EDIT TO &TLNKLB2.(&TLMEM.)\n//*---------------------------------------------------------------------\n//LKED&S   EXEC PGM=IEWL,REGION=192K,COND=(12,LE),\n//             PARM='&BLNK.'\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DDNAME=SYSIN\n<//DD1      DD  DSN=&TLNKDD1,DISP=SHR|>\n<//DD2      DD  DSN=&TLNKDD2,DISP=SHR|>\n//SYSLMOD  DD  DSN=&TLNKLB2.,DISP=SHR,UNIT=\n)SEL &TBSL1 \u00ac= &Z\n//SYSLIB   DD  DSN=&TBSL1,DISP=SHR\n<//         DD  DSN=&TBSL2,DISP=SHR|>\n//         DD  DSN=SYS1.PRODUCT,DISP=SHR\n)ENDSEL\n)SEL &TBSL1 = &Z && &TBSL2 \u00ac= &Z\n//SYSLIB   DD  DSN=&TBSL2,DISP=SHR\n//         DD  DSN=SYS1.PRODUCT,DISP=SHR\n)ENDSEL\n)SEL &TBSL1 = &Z && &TBSL2 = &Z\n//SYSLIB   DD  DSN=SYS1.PRODUCT,DISP=SHR\n)ENDSEL\n//SYSUT1   DD  UNIT=DISK,SPACE=(CYL,(2,2))\n//SYSIN    DD  *\n  &LNKC1.\n  &LNKC2.\n  &LNKC3.\n  <ENTRY &TENTRY|>\n  NAME &TLMEM.(R)\n/*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS09": {"ttr": 2819, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM 11/10/83 MURA - CHANGE OUTPUT TO SYSOUT=P FROM SYSOUT=S\n)CM 01/04/83 MURA - VAR. NAME CHGD FROM PROF TO JHSCRPRF\n)SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  JH BG - SCRIPT FROM &TDSN\n//*---------------------------------------------------------------------\n//SCRPT&S  EXEC PGM=DSMSPEXC,REGION=960K,TIME=1\n//D3800    DD  SYSOUT=P,CHARS=(&SCHAR1,&SCHAR2),     11/10/83\n//             COPIES=&COPIES,FCB=&SFCB,\n//             DCB=(OPTCD=J,RECFM=VBM,BLKSIZE=260,LRECL=256)\n//SYSPRINT DD  SYSOUT=*\n//DSMLIST  DD  SYSOUT=*\n//DSMINDIR DD  DSN=VDUST.DLF2DIRK,DISP=SHR\n//DSMINLIB DD  DSN=VDUST.DLF2SRCE,DISP=SHR\n//DSMUTTOC DD  UNIT=DISK,SPACE=(TRK,(5,5))\n//DSMUTMSG DD  UNIT=DISK,SPACE=(TRK,(5,5))\n//DSMUTDIM DD  UNIT=DISK,SPACE=(TRK,(5,5))\n//DSMUTWTF DD  UNIT=DISK,SPACE=(TRK,(5,5))\n//SCRIPTIN DD  *\n.DD &TMEM1 DSN '&TDSN.(&TMEM1)';.IM &TMEM1\n<.DD &TMEM2 DSN '&TDSN.(&TMEM2)';.IM &TMEM2      |>\n<.DD &TMEM3 DSN '&TDSN.(&TMEM3)';.IM &TMEM3      |>\n<.DD &TMEM4 DSN '&TDSN.(&TMEM4)';.IM &TMEM4      |>\n<.DD &TMEM5 DSN '&TDSN.(&TMEM5)';.IM &TMEM5      |>\n<.DD &TMEM6 DSN '&TDSN.(&TMEM6)';.IM &TMEM6      |>\n<.DD &TMEM7 DSN '&TDSN.(&TMEM7)';.IM &TMEM7      |>\n<.DD &TMEM8 DSN '&TDSN.(&TMEM8)';.IM &TMEM8      |>\n<.DD &TMEM9 DSN '&TDSN.(&TMEM9)';.IM &TMEM9      |>\n<.DD &TMEM10 DSN '&TDSN.(&TMEM10)';.IM &TMEM10 |>\n<.DD &TMEM11 DSN '&TDSN.(&TMEM11)';.IM &TMEM11 |>\n<.DD &TMEM12 DSN '&TDSN.(&TMEM12)';.IM &TMEM12 |>\n<.DD &TMEM13 DSN '&TDSN.(&TMEM13)';.IM &TMEM13 |>\n<.DD &TMEM14 DSN '&TDSN.(&TMEM14)';.IM &TMEM14 |>\n<.DD &TMEM15 DSN '&TDSN.(&TMEM15)';.IM &TMEM15 |>\n<.DD &TMEM16 DSN '&TDSN.(&TMEM16)';.IM &TMEM16 |>\n<.DD &TMEM17 DSN '&TDSN.(&TMEM17)';.IM &TMEM17 |>\n<.DD &TMEM18 DSN '&TDSN.(&TMEM18)';.IM &TMEM18 |>\n<.DD &TMEM19 DSN '&TDSN.(&TMEM19)';.IM &TMEM19 |>\n<.DD &TMEM20 DSN '&TDSN.(&TMEM20)';.IM &TMEM20 |>\n<.DD &TMEM21 DSN '&TDSN.(&TMEM21)';.IM &TMEM21 |>\n//SYSIN     DD    *\n   AUTH 1314151\n   SCRIPT FROM(SCRIPTIN) -\n   (PROF(&JHSCRPRF) <M(&JHDCFMSG)|> -\n)SEL &PDS = Y\n   SPELLCHK -\n)ENDSEL\n   &PDOS. -\n   CONTINUE -\n   CHARS(&SCHAR1 &SCHAR2.) DEVICE(&SDEV.) -\n   FILE(D3800) )\n/*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS10": {"ttr": 2821, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  JH BG - FORMAT PURGE FOR IMS&E\n//*          &TMEM1 &TMEM2 &TMEM3 &TMEM4 &TMEM5\n//*          &TMEM6 &TMEM7 &TMEM8 &TMEM9 &TMEM10\n//*          &TMEMD1 &TMEMD2 &TMEMD3 &TMEMD4 &TMEMD5\n//*          &TMEMD6 &TMEMD7 &TMEMD8 &TMEMD9 &TMEMD10\n//*---------------------------------------------------------------------\n//*\n//*      ALL DISP=OLD SPECIFICATIONS IN THIS JCL ARE REQUIRED.\n//*\n//*              MSG = MID OR MOD\n//*              FMT = DIF/DOF\n//*\n//FMTPURGE EXEC PGM=DFSUTSA0,REGION=256K\n//STEPLIB  DD  DSN=IMST.RESLIB,DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSSNAP  DD  SYSOUT=*\n//SYSUDUMP DD  SYSOUT=*\n//REFIN    DD  DSN=IMS&E..REFERAL,DISP=OLD  MUST BE DISP=OLD\n//FORMAT   DD  DSN=IMS&E..FORMAT,DISP=OLD   MUST BE DISP=OLD\n//SYSIN    DD  *\n   <DELETE MSG=&TMEM1  |>\n   <SCRATCH MSG=&TMEM1 |>\n   <DELETE FMT=&TMEMD1 |>\n   <SCRATCH FMT=&TMEMD1|>\n   <DELETE MSG=&TMEM2  |>\n   <SCRATCH MSG=&TMEM2 |>\n   <DELETE FMT=&TMEMD2 |>\n   <SCRATCH FMT=&TMEMD2|>\n   <DELETE MSG=&TMEM3  |>\n   <SCRATCH MSG=&TMEM3 |>\n   <DELETE FMT=&TMEMD3 |>\n   <SCRATCH FMT=&TMEMD3|>\n   <DELETE MSG=&TMEM4  |>\n   <SCRATCH MSG=&TMEM4 |>\n   <DELETE FMT=&TMEMD4 |>\n   <SCRATCH FMT=&TMEMD4|>\n   <DELETE MSG=&TMEM5  |>\n   <SCRATCH MSG=&TMEM5 |>\n   <DELETE FMT=&TMEMD5 |>\n   <SCRATCH FMT=&TMEMD5|>\n   <DELETE MSG=&TMEM6  |>\n   <SCRATCH MSG=&TMEM6 |>\n   <DELETE FMT=&TMEMD6 |>\n   <SCRATCH FMT=&TMEMD6|>\n   <DELETE MSG=&TMEM7  |>\n   <SCRATCH MSG=&TMEM7 |>\n   <DELETE FMT=&TMEMD7 |>\n   <SCRATCH FMT=&TMEMD7|>\n   <DELETE MSG=&TMEM8  |>\n   <SCRATCH MSG=&TMEM8 |>\n   <DELETE FMT=&TMEMD8 |>\n   <SCRATCH FMT=&TMEMD8|>\n   <DELETE MSG=&TMEM9  |>\n   <SCRATCH MSG=&TMEM9 |>\n   <DELETE FMT=&TMEMD9 |>\n   <SCRATCH FMT=&TMEMD9|>\n   <DELETE MSG=&TMEM10 |>\n   <SCRATCH MSG=&TMEM10|>\n   <DELETE FMT=&TMEMD10|>\n   <SCRATCH FMT=&TMEMD10|>\n/*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS14": {"ttr": 2823, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")SET S = &S + 1\n//*---------------------------------------------------------------------\n//*  DEFINE GDG INDEX FOR &TDSN LIMIT(&LIM) &EMP\n//*---------------------------------------------------------------------\n//GDG&S    EXEC PGM=IDCAMS,REGION=256K\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n)SEL &GDOWN = &Z\n  DEF GDG (NAME(&TDSN) -\n           LIMIT(&LIM) SCRATCH &EMP)\n)ENDSEL\n)SEL &GDOWN \u00ac= &Z\n  DEF GDG (NAME(&TDSN) -\n           LIMIT(&LIM) SCRATCH &EMP OWNER(&GDOWN))\n)ENDSEL\n  LISTC ENTRY(&TDSN) ALL\n/*\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS18": {"ttr": 2825, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")SET S = &S + 1\n)SEL &PRIORSKL \u00ac= ZB18\n//*\n//*---------------------------------------------------------------------\n//*  JH BATCH - LISTCAT\n//*---------------------------------------------------------------------\n//LISTC&S  EXEC PGM=IDCAMS,REGION=272K\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  *\n)ENDSEL\n LISTCAT -\n  &JHLISTCP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHABS19": {"ttr": 2827, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM CHK PRIORSKL TO DETERMINE IF LAST SEL. WAS IEHPROGM - MURA 3/22/83\n)CM 01/17/84 SKELETON NAME CHANGED\n)SEL &PRIORSKL \u00ac= JHABS19 | &PREVVOL \u00ac= &TVOL\n)SET S = &S + 1\n//*\n//*---------------------------------------------------------------------\n//*  JH BG - IEHPROGM &TFUNC OF &TDSN &TMEM\n//*---------------------------------------------------------------------\n//IEHP&S   EXEC PGM=IEHPROGM,REGION=128K,PARM='LINECNT=60'\n//SYSPRINT DD  SYSOUT=*\n)SEL &O \u00ac= 3 && &O \u00ac= 4\n//DD1      DD  UNIT=&TDEV,DISP=OLD,\n//             VOL=SER=(&TVOL)\n)ENDSEL\n//SYSIN    DD  *\n)ENDSEL\n)CM\n)CM   ***** RENAME *****\n)SEL &O = 5 | &O = 6\n  RENAME       DSNAME=&TDSN,                                           X\n)SEL &O = 5 && &TMEM \u00ac= &Z\n               MEMBER=&TMEM,                                           X\n)ENDSEL\n               VOL=&TDEV=(&TVOL),                                      X\n               NEWNAME=&TNEW\n)ENDSEL\n)CM\n)CM   ***** SCRATCH *****\n)SEL &O = 1 | &O = 2\n  SCRATCH      DSNAME=&TDSN,<MEMBER=&TMEM,|>                           X\n               VOL=&TDEV=(&TVOL),PURGE\n)ENDSEL\n)CM\n)CM   ***** UNCATLG *****\n)SEL &O = 2 | &O = 3 | &O = 6\n  UNCATLG      DSNAME=&TDSN\n)ENDSEL\n)CM\n)CM   ***** CATLG *****\n)SEL &O = 4\n  CATLG        DSNAME=&TDSN,                                           X\n)ENDSEL\n)SEL &O = 6\n  CATLG        DSNAME=&TNEW,                                           X\n)ENDSEL\n)SEL &O = 4 | &O = 6\n               VOL=&TDEV=(&TVOL)\n)ENDSEL\n)SET PREVVOL = &TVOL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHAEFR01": {"ttr": 2829, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 08/28/84 Mura - adapted from ISREFR01; JHTITLE added             */\n  _ TYPE(INPUT) CAPS(OFF) INTENS(HIGH)\n  | AREA(DYNAMIC) EXTEND(ON) SCROLL(ON) USERMOD(20)\n  ! TYPE(OUTPUT) INTENS(HIGH) PAD(-)\n 01 TYPE(DATAOUT) INTENS(LOW)\n 02 TYPE(DATAOUT) INTENS(HIGH)\n 03 TYPE(DATAOUT) SKIP(ON) /* FOR TEXT ENTER CMD. FIELD */\n 04 TYPE(DATAIN)  INTENS(LOW)  CAPS(OFF)\n 05 TYPE(DATAIN)  INTENS(HIGH) CAPS(OFF)\n 06 TYPE(DATAIN)  INTENS(LOW)  CAPS(IN)\n 07 TYPE(DATAIN)  INTENS(HIGH) CAPS(IN)\n 20 TYPE(DATAIN)  INTENS(LOW) CAPS(IN)\n)BODY WIDTH(&ZWIDTH) EXPAND(//)\n%&JHTITLE ----------------------------/-/---------------------%COLUMNS!ZCL!ZCR%%\n%COMMAND ===>_ZCMD                    / /                     %SCROLL ===>_Z   %\n|ZDATA -------------------------------/-/--------------------------------------|\n|                                     / /                                      |\n| ------------------------------------/-/--------------------------------------|\n)INIT\n  .HELP = ISR20000         /* DEFAULT TUTORIAL NAME     */\n  .ZVARS = 'ZSCED'         /* SCROLL AMT VARIABLE NAME  */\n\n)REINIT\n  REFRESH(ZCMD,ZSCED,ZDATA,ZCL,ZCR)  /*                      08/28/84*/\n  .HELP = ISR20000         /* DEFAULT TUTORIAL NAME     */\n\n)PROC\n  &ZCURSOR = .CURSOR\n  &ZCSROFF = .CSRPOS\n  &ZLVLINE = LVLINE(ZDATA)\n\n)END\n\n/*  DYNAMIC AREA SCREEN WIDTH FROM PQUERY. (80,132,160)\n/*  DYNAMIC AREA SCREEN DEPTH FROM PQUERY. (24,32,43,27,60)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHAYM11": {"ttr": 2831, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHAYM111 'TABLE NOT FOUND'         .ALARM=YES\n'TABLE ''&JHYTBNM'' DOES NOT EXIST IN TABLE INPUT LIBRARY (ISPTLIB).'\n\nJHAYM112 'TABLE HAS NO KEYS/NAMES' .ALARM=YES\n'TABLE ''&JHYTBNM'' HAS NO KEY NOR \"NAME\" FIELDS - ONLY EXTENSION VARS.'\n\nJHAYM113 'INVALID TABLE NAME'      .ALARM=YES\n'DO NOT ATTEMPT TO OPEN/CLOSE TABLES BEGINNING WITH ''ISP'' OR ''ISR''.'\n\nJHAYM114 'TABLE ''&JHYTBNM'' EMPTY' .ALARM=YES\n'UNABLE TO DISPLAY TABLE ''&JHYTBNM'' BECAUSE IT CONTAINS NO ROWS.'\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHAYM12": {"ttr": 2833, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHAYM121 'TABLE NOT FOUND'         .ALARM=YES\n'TABLE ''&JHCTNM1'' DOES NOT EXIST IN TABLE INPUT LIBRARY (ISPTLIB).'\n\nJHAYM122 'TABLE ALREADY EXISTS'    .ALARM=YES\n'TABLE ''&JHCTNM2'' ALREADY EXISTS IN TABLE OUTPUT LIBRARY.'\n\nJHAYM123 '&JHCTCTO RECORDS COPIED'\n'TABLE ''&JHCTNM2'' SUCCESSFULLY RECONSTRUCTED FROM ''&JHCTNM1''.'\n\nJHAYM124 'DUPLICATE KEYS LOST'     .ALARM=YES\n'IN: ''&JHCTNM1'' (&JHCTCTI RECS); OUT: ''&JHCTNM2'' (&JHCTCTO RECS).'\n\n/* LOG MESSAGES FOLLOW:                                              */\n\nJHAYM127 'JH TABLE RECONSTRUCT'\n'FROM ''&JHCTNM1'' (&JHCTCTI RECS) TO ''&JHCTNM2'' (&JHCTCTO RECS).'\n\nJHAYM128 '              KEYS: '\n'&JHCTKEYS'\n\nJHAYM129 '          NON-KEYS: '\n'&JHCTNMS1'\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHAYM14": {"ttr": 2835, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JHAYM141 'PANEL NAME REQUIRED'     .ALARM=YES\n'PANEL NAME IS REQUIRED FOR ALL ENTRIES.'\n\nJHAYM145 'RC=&TRC.. SEE ISPF LOG'  .ALARM=YES\n'RETURN CODE &TRC FROM SELECTION PANEL UPDATE UTILITY.  CHECK ISPF LOG.'\n\nJHAYM147 'UNAUTHORIZED LIBRARY'    .ALARM=YES\n'DON''T UPDATE \"PRODUCTION\" PANEL LIBRARIES WITH THIS UTILITY.'\n\nJHAYM149 'SEL. PANEL UPDATE '\n'UTILITY RUN WITH TABLE &TBNM TO UPDATE &TDSN..'\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHAYP110": {"ttr": 2837, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 10/18/83 Mura - add other table display formats                  */\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n  \u00a2  TYPE(TEXT)  INTENS(LOW)   SKIP(OFF)\n)BODY\n%-------------------------  DISPLAY TABLE  -------------------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+     TABLE NAME%===>_JHYTBNM +\n+\n+FIELDS PER LINE%===>_Z\u00a2 (1, 2, or 4)\n+\n+\n+This option may be used to display the contents of any table.\n+Key fields are indicated in the heading lines by an asterisk (*).\n+\n+\n)INIT\n .CURSOR = JHYTBNM\n .ZVARS = '(JHYFLDS)'                /*                      10/18/83*/\n IF (&JHYFLDS = &Z)                  /*                      10/18/83*/\n    &JHYFLDS = 2                     /*                      01/17/84*/\n\n)PROC\n IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n VER(&JHYTBNM,NB,NAME)\n &T1 = TRUNC(&JHYTBNM,3)\n IF (&T1 = ISP,ISR)  .MSG=JHAYM113   /*                      01/17/84*/\n VER(&JHYFLDS,NB,LIST,1,2,4)         /*                      01/17/84*/\n &JHYMXFLD = TRANS(&JHYFLDS 1,7      /* set max. no. of flds 01/17/84*/\n                       2,14  *,28)   /*   to be displayed    01/17/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHAYP111": {"ttr": 2839, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  @  TYPE(OUTPUT)  INTENS(LOW)\n  %  TYPE(TEXT)    INTENS(HIGH)   SKIP(ON)\n  +  TYPE(TEXT)    INTENS(LOW)    SKIP(ON)\n)BODY\n%-------------------------  TABLE '&JHYTBNM'  ----------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_JHYS+\n+\n%&JHYTTL1           %&JHYTTL2           %&JHYTTL3           %&JHYTTL4\n%&JHYTTL5           %&JHYTTL6           %&JHYTTL7           %&JHYTTL8\n%&JHYTTL9           %&JHYTTL10          %&JHYTTL11          %&JHYTTL12\n%&JHYTTL13          %&JHYTTL14          %&JHYTTL15          %&JHYTTL16\n%&JHYTTL17          %&JHYTTL18          %&JHYTTL19          %&JHYTTL20\n%&JHYTTL21          %&JHYTTL22          %&JHYTTL23          %&JHYTTL24\n%&JHYTTL25          %&JHYTTL26          %&JHYTTL27          %&JHYTTL28\n)MODEL\n&JHYTMOD1\n&JHYTMOD2\n&JHYTMOD3\n&JHYTMOD4\n&JHYTMOD5\n&JHYTMOD6\n&JHYTMOD7\n+-------------------------------------------------------------------------------\n)INIT\n .CURSOR = ZCMD\n IF (&JHYS = &Z)   &JHYS = CSR\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001     /* invalid command      01/20/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHAYP112": {"ttr": 2841, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  @  TYPE(OUTPUT)  INTENS(LOW)\n  %  TYPE(TEXT)    INTENS(HIGH)   SKIP(ON)\n  +  TYPE(TEXT)    INTENS(LOW)    SKIP(ON)\n)BODY\n%-------------------------  TABLE '&JHYTBNM'  ----------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_JHYS+\n+\n%&JHYTTL1           %&JHYTTL2           %&JHYTTL3           %&JHYTTL4\n%&JHYTTL5           %&JHYTTL6           %&JHYTTL7           %&JHYTTL8\n%&JHYTTL9           %&JHYTTL10          %&JHYTTL11          %&JHYTTL12\n%&JHYTTL13          %&JHYTTL14          %&JHYTTL15          %&JHYTTL16\n%&JHYTTL17          %&JHYTTL18          %&JHYTTL19          %&JHYTTL20\n)MODEL\n&JHYTMOD1\n&JHYTMOD2\n&JHYTMOD3\n&JHYTMOD4\n&JHYTMOD5\n&JHYTMOD6\n&JHYTMOD7\n+-------------------------------------------------------------------------------\n)INIT\n .CURSOR = ZCMD\n IF (&JHYS = &Z)   &JHYS = CSR\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001     /* invalid command      01/20/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHAYP113": {"ttr": 2843, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg id, skel names changed                */\n  @  TYPE(OUTPUT)  INTENS(LOW)\n  %  TYPE(TEXT)    INTENS(HIGH)   SKIP(ON)\n  +  TYPE(TEXT)    INTENS(LOW)    SKIP(ON)\n)BODY\n%-------------------------  TABLE '&JHYTBNM'  ----------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_JHYS+\n+\n%&JHYTTL1           %&JHYTTL2           %&JHYTTL3           %&JHYTTL4\n%&JHYTTL5           %&JHYTTL6           %&JHYTTL7           %&JHYTTL8\n%&JHYTTL9           %&JHYTTL10          %&JHYTTL11          %&JHYTTL12\n)MODEL\n&JHYTMOD1\n&JHYTMOD2\n&JHYTMOD3\n&JHYTMOD4\n&JHYTMOD5\n&JHYTMOD6\n&JHYTMOD7\n+-------------------------------------------------------------------------------\n)INIT\n .CURSOR = ZCMD\n IF (&JHYS = &Z)   &JHYS = CSR\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001     /* invalid command      01/20/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHAYP12": {"ttr": 2845, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/16/84 Mura - panel, msg ids changed                           */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n  \u00a2  TYPE(TEXT)  INTENS(LOW)   SKIP(OFF)\n)BODY\n%------------------------  RECONSTRUCT TABLE  ----------------------------------\n%COMMAND ===>_ZCMD                                                             +\n\n\n+TABLE NAME%===>_JHCTNM1 \u00a2\n\n\n\n+This option allows key and non-key fields to be added and deleted from a table\n structure.  Existing records are rewritten to the new table.  Extension\n variables will be preserved.\n+\n)INIT\n  .CURSOR = JHCTNM1\n\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n\n  VER(&JHCTNM1,NB,NAME)\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHAYP12B": {"ttr": 3073, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/16/84 Mura - panel, msg ids changed                           */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n  \u00a2  TYPE(TEXT)  INTENS(LOW)   SKIP(OFF)\n /* NOTE: Each non-key input field is 219 characters.                */\n)BODY\n%------------------------  RECONSTRUCT TABLE  ----------------------------------\n%COMMAND ===>_ZCMD                                                             +\n\n+INPUT TABLE:       %&JHCTNM1 +\n\n+NEW TABLE NAME%===>_JHCTNM2 +\n+REPLACE LIKED-NAME TABLE IN TABLE OUTPUT LIBRARY%===>_Z  +(YES or NO)\n\n+Verify/modify new table key and non-key fields below:\n+KEY FIELDS    %===>_JHCTKEYS\n\n\n+NON-KEY FIELDS%===>_JHCTNMS1\n\n\n+              %===>_JHCTNMS2\n\n\n+Warning: the removal of key fields, or the addition of keys to a table that\n previously had none, may result in records being lost due to duplicate keys.\n+SET FIRST KEY FIELD TO OUTPUT RECORD NUMBER%===>_Z  +(YES or NO)\n)INIT\n  .CURSOR = JHCTNM2\n  .ZVARS = '(JHCTREPL JHCTFUNQ)'\n  &JHCTREPL = TRANS(&JHCTREPL  REPLACE,YES  *,NO)\n  &JHCTFUNQ = TRANS(&JHCTFUNQ  Y,YES        *,NO)\n\n)PROC\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n\n  VER(&JHCTNM2,NB,NAME)\n\n  VER(&JHCTREPL,NB)\n  &JHCTREPL = TRANS(TRUNC(&JHCTREPL,1)  Y,REPLACE  *,' ')\n  VER(&JHCTREPL,LIST,REPLACE)\n\n  VER(&JHCTFUNQ,NB)\n  &JHCTFUNQ = TRUNC(&JHCTFUNQ,1)\n  VER(&JHCTFUNQ,LIST,Y,N)\n\n  &JHCTKEY1 = TRUNC(&JHCTKEYS,' ')  /* isolate first key field       */\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHAYP14@": {"ttr": 3075, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/16/84 Mura - panel, msg id, CLIST names changed               */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%---------------------  SELECTION PANEL UPDATE UTILITY  ------------------------\n%OPTION  ===>_ZCMD                                                             +\n+\n%   1 +EDIT TABLE - Create/modify table to drive update utility\n%   2 +RUN UPDATE - Run selection panel update utility\n+\n+TABLE NAME%===>_TBNM    +\n+\n)INIT\n  IF (&TBNM = &Z)  &TBNM = SYSPUP\n\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                 1,'CMD(%JH#YPUP TBNM(&TBNM))' /*            01/16/84*/\n                 2,'CMD(%JH#YPUPG TBNM(&TBNM))' /*           01/16/84*/\n               ' ',' '\n                 *,'?' )\n  VER(&TBNM,NB,NAME)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHAYP141": {"ttr": 3077, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/16/84 Mura - panel, msg ids changed; PROC section added       */\n  %  TYPE(TEXT)   INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)   INTENS(LOW)   SKIP(ON)\n  /  TYPE(INPUT)  INTENS(HIGH)  PAD(_)     CAPS(ON)\n  \u00a2  TYPE(INPUT)  INTENS(LOW)   PAD('''')  CAPS(ON)\n  |  TYPE(INPUT)  INTENS(LOW)   PAD(_)     CAPS(OFF)\n  @  TYPE(OUTPUT) INTENS(LOW)   SKIP(ON)   CAPS(ON)\n)BODY\n%SELECTION PANEL UPDATE TABLE - &TBNM ------------------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_SCIN+\n%\n%     PANEL    OPT  KEYWORD     F N SELECT\n+\n)MODEL\n\u00a2Z   /PANEL   /Z   /KEYWORD    /Z@Z/SELECT                        +\n+              TEXT1:|TEXT1\n+              TEXT2:|TEXT2\n+              TEXT3:|TEXT3\n+              TEXT4:|TEXT4\n%\n)INIT\n &SCIN = CSR\n .ZVARS = '(SEL OPTION KEYFLAG TEXTNUM)'\n\n)PROC\n VER(&ZCMD,LIST,C,CAN,CANCEL,MSG=JHA@M031) /*                01/16/84*/\n\n &SELT = TRUNC(&SEL,1)               /*                      01/16/84*/\n &SELN = .TRAIL                      /*                      01/16/84*/\n VER(&SELT,LIST,D,I,R,MSG=JHA@M033)  /*                      01/16/84*/\n VER(&SELN,NUM,MSG=JHA@M033)         /*                      01/16/84*/\n\n IF (&SELT \u00ac= D)                     /*                      01/16/84*/\n   VER(&PANEL,NB,MSG=JHAYM141)       /*                      01/16/84*/\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHAYP142": {"ttr": 3079, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 01/17/84 Mura - panel, msg ids changed                           */\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%-------------------  RUN SELECTION PANEL UPDATE UTILITY  ----------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+TABLE NAME:%&TBNM    +\n+\n+ISPF PANEL LIBRARY:\n+   PROJECT%===>_PRJ1    +\n+   LIBRARY%===>_LIB1    +\n+   TYPE   %===>_TYP1    +\n+\n+OTHER PANEL LIBRARY:\n+   DATA SET NAME %===>_DSN                                         +\n+   VOLUME SERIAL %===>_VOL   + (If not cataloged)\n+\n)INIT\n IF (&DSN \u00ac= &Z)   .CURSOR = DSN\n IF (&DSN = &Z)    .CURSOR = PRJ1\n\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n\n IF (&DSN = &Z)                      /* ISPF panel library           */\n    VER(&PRJ1,NB,DSNAME)\n    VER(&LIB1,NB,DSNAME)\n    VER(&TYP1,NB,DSNAME)\n    &TDSN = '&PRJ1..&LIB1..&TYP1'\n IF (&DSN \u00ac= &Z)                     /* other panel library          */\n    VER(&DSN,NB,DSNAME)\n    &T1=TRUNC(&DSN,'(')\n    IF (.TRAIL \u00ac= &Z) .MSG = JHA@M009 /* member name not allowed     */\n    &T1=TRUNC(&DSN,1)                /* check for initial apostrophe */\n    IF (&T1 \u00ac= '''')\n       &TDSN = '&ZPREFIX..&DSN'\n    &T2=.TRAIL\n    IF (&T1 = '''')\n       &TDSN = TRUNC(&T2,'''')       /* strip off apostrophes        */\n VER(&TDSN,DSNAME)\n\n VER(&VOL,PICT,CCCCCC,MSG=JHA@M027)  /*                              */\n VER(&VOL,NAME,MSG=JHA@M027)         /*                              */\n &T1 = TRUNC(&VOL,3)                 /*                              */\n &T1 = .TRAIL                        /*                              */\n &TUNIT = TRANS(TRUNC(&T1,1) 1,3350 2,3350 V,3330V *,3380)\n\n &T1 = TRUNC(&TDSN,'.')              /* get first qualifier          */\n &T2 = .TRAIL\n &T2 = TRUNC(&T2,'.')                /* get second qualifier         */\n IF (&T1 = ISP,ISR,ES2,SM1,ZL2)      /*                      01/17/84*/\n    IF (&T2 = V1R1M0,V2R1M0,V1R2M0,JH,JHR2M0) /*             01/17/84*/\n       IF (&DSN = &Z)  .CURSOR = PRJ1\n       IF (&DSN \u00ac= &Z) .CURSOR = DSN\n       .MSG = JHAYM147               /*                      01/17/84*/\n\n VPUT (PRJ1 LIB1 TYP1) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHTEM01": {"ttr": 3081, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/* 07/08/84 MURA - JHTEM017 ADDED FOR JH EDIT INTERFACE (JHTEPE01)   */\n\nJHTEM010 'PROD. EDIT'\n'JOHN HANCOCK PRODUCTION LIBRARY EDIT FACILITY ENTERED.'\n\nJHTEM013 'INTERNAL ERROR - QUOTES'     .ALARM=YES\n'A DATA SET NAME IN QUOTES HAS BEEN PASSED TO JH#TPRED.'\n\nJHTEM017 'PARAMETER CONFLICT'          .ALARM=YES\n'AN \"OTHER DATA SET\" IS NOT ALLOWED WHEN SELECTING A REMEMBERED DATA SET.'\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHTEPE01": {"ttr": 3083, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 07/09/84 Mura - adapted from ISREDM01                            */\n  \u00ac TYPE(INPUT) INTENS(NON)\n  %  TYPE(TEXT)    INTENS(HIGH)   SKIP(ON)   /*              07/09/84*/\n  +  TYPE(TEXT)    INTENS(LOW)    SKIP(ON)   /*              07/09/84*/\n  \u00a2  TYPE(TEXT)    INTENS(LOW)    SKIP(OFF)  /*              07/09/84*/\n  @  TYPE(TEXT)    INTENS(LOW)    SKIP(ON)  COLOR(TURQ) /*   07/09/84*/\n)BODY\n%-------------------------  JH EDIT - ENTRY PANEL  -----------------------------\n%COMMAND ===>_ZCMD                                                             +\n%\n+ISPF LIBRARY:\n+   PROJECT%===>_PRJ1    +\n+   GROUP  %===>_LIB1    % ===>_LIB2    % ===>_LIB3    % ===>_LIB4    +\n+   TYPE   %===>_TYP1    +\n+   MEMBER %===>_MEM     +       (Blank for member selection list)\n+\n+OTHER PARTITIONED OR SEQUENTIAL DATA SET:\n+   DATA SET NAME %===>_DSN\n+   VOLUME SERIAL %===>_VOL   +  (If not cataloged)\n+\n@REMEMBERED DATA SETS:          +(Enter number in TYPE field)\n@                1%===>_JHEDDSN1\n@                2%===>_JHEDDSN2\n@                3%===>_JHEDDSN3\n+\n+PROFILE NAME     %===>_PROF    +(Blank defaults to data set type)\n+\n+INITIAL MACRO    %===>_IMAC    \u00a2\n)INIT\n  .HELP = ISR20000\n  &ZCMD = ' '\n  /* TYP1 must be saved in case user overtypes a numeric     07/09/84*/\n  &JHEDTYP1 = &TYP1                  /* save TYP1            07/09/84*/\n  IF (&TEMPTYP1 \u00ac= &Z)               /* keep numeric or      07/09/84*/\n     &TYP1 = &TEMPTYP1               /*   qualifier          07/09/84*/\n  IF (&TYP1 = 1,2,3)                 /*                      07/09/84*/\n     .CURSOR = TYP1                  /*                      07/09/84*/\n     &DSN = ' '                      /*                      07/09/84*/\n  IF (&DSN \u00ac= ' ')\n    IF (.CURSOR \u00ac= 'VOL')\n      .CURSOR = DSN\n  IF (.MSG = ' ')\n    &MEM = ' '\n  &PSWD = ' '                        /*                      07/09/84*/\n\n)REINIT\n  IF (.MSG \u00ac= JHTEM017)              /*                      07/09/84*/\n     REFRESH(DSN,TYP1)               /*                      07/09/84*/\n\n)PROC\n IF (&ZCMD \u00ac= ' ')\n   .MSG = ISRE176\n   .CURSOR = ZCMD\n\n IF (&TYP1 = 1,2,3)                  /* if a number entered  07/09/84*/\n    VER(&DSN,LIST,' ',MSG=JHTEM017)  /* other DSN invalid    07/09/84*/\n &JHEDMEM = ' '                      /*                      07/09/84*/\n IF (&MEM \u00ac= ' ')                    /*                      07/09/84*/\n    &JHEDMEM = '(&MEM)'              /*                      07/09/84*/\n /* if user has a selected a remembered library, apostrophes must    */\n /* be stripped off so a member name, if provided, can be appended:  */\n IF (&TYP1 = 1)                      /*                      07/09/84*/\n    VER(&JHEDDSN1,NB,DSNAME)         /*                      07/09/84*/\n    &T1 = TRUNC(&JHEDDSN1,1)         /*                      07/09/84*/\n    &T2 = .TRAIL                     /*                      07/09/84*/\n    IF (&T1 = '''')    &T3 = TRUNC(&T2,'''')  /* strip quotes07/09/84*/\n    IF (&T1 \u00ac= '''')   &T3 = '&ZPREFIX..&JHEDDSN1' /*        07/09/84*/\n    &DSN = '''&T3.&JHEDMEM'''        /*                      07/09/84*/\n IF (&TYP1 = 2)                      /*                      07/09/84*/\n    VER(&JHEDDSN2,NB,DSNAME)         /*                      07/09/84*/\n    &T1 = TRUNC(&JHEDDSN2,1)         /*                      07/09/84*/\n    &T2 = .TRAIL                     /*                      07/09/84*/\n    IF (&T1 = '''')    &T3 = TRUNC(&T2,'''')  /* strip quotes07/09/84*/\n    IF (&T1 \u00ac= '''')   &T3 = '&ZPREFIX..&JHEDDSN2' /*        07/09/84*/\n    &DSN = '''&T3.&JHEDMEM'''        /*                      07/09/84*/\n IF (&TYP1 = 3)                      /*                      07/09/84*/\n    VER(&JHEDDSN3,NB,DSNAME)         /*                      07/09/84*/\n    &T1 = TRUNC(&JHEDDSN3,1)         /*                      07/09/84*/\n    &T2 = .TRAIL                     /*                      07/09/84*/\n    IF (&T1 = '''')    &T3 = TRUNC(&T2,'''')  /* strip quotes07/09/84*/\n    IF (&T1 \u00ac= '''')   &T3 = '&ZPREFIX..&JHEDDSN3' /*        07/09/84*/\n    &DSN = '''&T3.&JHEDMEM'''        /*                      07/09/84*/\n /* if a remembered data set slot is available, and the data set     */\n /* being edited is not already remembered, then set the available   */\n /* slot to the DSN being edited:                                    */\n IF (.RESP = ENTER)                  /* if ENTER pressed     07/09/84*/\n    IF (&TYP1 \u00ac= 1,2,3)              /* & not a number       07/09/84*/\n       IF (&JHEDDSN1 = &Z)           /* & slot available     07/09/84*/\n          IF (&DSN \u00ac= &JHEDDSN1,&JHEDDSN2,&JHEDDSN3) /* & not saved  */\n             &JHEDDSN1 = &DSN        /* then save DSN        07/09/84*/\n       IF (&JHEDDSN2 = &Z)           /*                      07/09/84*/\n          IF (&DSN \u00ac= &JHEDDSN1,&JHEDDSN2,&JHEDDSN3) /*      07/09/84*/\n             &JHEDDSN2 = &DSN        /* save DSN             07/09/84*/\n       IF (&JHEDDSN3 = &Z)           /*                      07/09/84*/\n          IF (&DSN \u00ac= &JHEDDSN1,&JHEDDSN2,&JHEDDSN3) /*      07/09/84*/\n             &JHEDDSN3 = &DSN        /* save DSN             07/09/84*/\n &TEMPTYP1 = &TYP1                   /* save for redisplay   07/09/84*/\n IF (&TYP1 = 1,2,3)                  /*                      07/09/84*/\n    &TYP1 = &JHEDTYP1                /* restore \"real\" TYP1  07/09/84*/\n VPUT (JHEDDSN1 JHEDDSN2 JHEDDSN3) PROFILE /*                07/09/84*/\n\n IF (&DSN = ' ' )\n   VER (&PRJ1 NONBLANK)\n   VER (&LIB1 NONBLANK)\n   VER (&TYP1 NONBLANK)\n   IF (&VOL \u00ac= ' ')\n     .MSG = ISRE094\n     .CURSOR = VOL\n VER (&DSN DSNAME)\n VER (&PROF NAME)\n IF (&IMAC \u00ac= ' ' )\n   &ZXXX = TRUNC(&IMAC,'!')\n   &IMACNM = .TRAIL\n   IF (&IMACNM = ' ') &IMACNM = &ZXXX\n   VER (&IMACNM NAME MSG = ISRE900)\n &PRJ0 = &PRJ1\n &LIB0 = &LIB1\n &TYP0 = &TYP1\n VPUT (PRJ1 LIB1 LIB2 LIB3 LIB4 TYP1 PRJ0 LIB0 TYP0 PSWD) PROFILE\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHTEPE31": {"ttr": 3086, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n  \u00a2  TYPE(TEXT)  INTENS(LOW)   SKIP(OFF)\n)BODY\n%-------------------------  LIST EDIT PROFILE  ---------------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+\n+          USERID %===>_Z      +\n+\n+          APPLID %===>_Z   \u00a2\n+\n)INIT\n .ZVARS = '(JHEDPRID JHEDPRAP)'\n .CURSOR = JHEDPRID\n IF (&JHEDPRAP = ' ')\n    &JHEDPRAP = ISR\n\n)REINIT\n IF (.CURSOR = ' ')\n    .CURSOR = JHEDPRID\n\n)PROC\n IF (&ZCMD \u00ac= ' ') .MSG = ISPZ001\n\n VER(&JHEDPRID,NB,NAME)\n VER(&JHEDPRAP,NB,NAME)\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHTEPE32": {"ttr": 3088, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  %  TYPE(TEXT)   INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)   INTENS(LOW)   SKIP(ON)\n  |  TYPE(OUTPUT) INTENS(LOW)   SKIP(ON)  JUST(LEFT)\n  ?  TYPE(OUTPUT) INTENS(LOW)   SKIP(ON)  JUST(LEFT)\n)BODY\n%'&JHEDPRAP' EDIT PROFILES FOR '&JHEDPRID' -------------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_SCIN+\n+                                                LAST USED: &JHEDUDT &JHEDUTM\n%PROFILE         L IMACRO   S  P  R  N  C  TABS NUMBER           AN BOUNDS\n%                O          T  A  E  U  A                        UU L   R\n%                C          A  C  C  L  P                        TM\n%                K          T  K     L  S                        O\n)MODEL\n|JHEDPROF|Z     |Z|JHEDIMAC?Z |Z |Z |Z |Z |Z   |JHEDNUMB        |Z |Z  |Z\n)INIT\n .ZVARS = '(JHEDATTR JHEDLOCK JHEDSTAT JHEDPACK JHEDRECV JHEDNULL +\n            JHEDCAPS JHEDTABZ JHEDAUTN JHEDBNDL JHEDBNDR)'\n IF (&SCIN = &Z) &SCIN = 'CSR'\n IF (&JHEDSTAT = OFF)                /*                      07/12/84*/\n    .ATTRCHAR(?) = 'COLOR(YELLOW) INTENS(HIGH)' /*           07/12/84*/\n    .ATTR(JHEDSTAT) = 'COLOR(RED) INTENS(HIGH)' /*           07/12/84*/\n    .ALARM = YES                     /*                      07/12/84*/\n)REINIT\n IF (&JHEDSTAT = OFF)                /*                      07/12/84*/\n    .ATTRCHAR(?) = 'COLOR(YELLOW) INTENS(HIGH)' /*           07/12/84*/\n    .ATTR(JHEDSTAT) = 'COLOR(RED) INTENS(HIGH)' /*           07/12/84*/\n    .ALARM = YES                     /*                      07/12/84*/\n)PROC\n IF (&ZCMD \u00ac= &Z) .MSG = ISPZ001\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JHTEPE41": {"ttr": 3090, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n  \u00a2  TYPE(TEXT)  INTENS(LOW)   SKIP(OFF)\n)BODY\n%-----------------------  MODIFY EDIT RECOVERY TABLE  --------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+\n+          USERID %===>_Z      +\n+\n+          APPLID %===>_Z   \u00a2\n+\n+\n+\n+\n+Note: Use of this option creates \"gas\" members in user's profile library.\n+\n)INIT\n .ZVARS = '(JHEDRTID JHEDRTAP)'\n .CURSOR = JHEDRTID\n IF (&JHEDRTAP = ' ')\n    &JHEDRTAP = ISR\n\n)REINIT\n IF (.CURSOR = ' ')\n    .CURSOR = JHEDRTID\n\n)PROC\n IF (&ZCMD \u00ac= ' ') .MSG = ISPZ001\n\n VER(&JHEDRTID,NB,NAME)\n VER(&JHEDRTAP,NB,NAME)\n)END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JHTEPE42": {"ttr": 3092, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n @ TYPE(INPUT) INTENS(HIGH) PADC(_)\n ? TYPE(INPUT) INTENS(HIGH) PAD('''') CAPS(ON)\n)BODY\n%EDIT RECOVERY TABLE (&JHEDRTAP.EDRT) FOR &JHEDRTID  ---------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_AMT +\n+-------------------------------------------------------------------------------\n+SEL STAT   DISP          BACKUP DATA SET NAME\n+  TARGET DATA SET NAME                          MEMBER   VOLUME\n+-------------------------------------------------------------------------------\n)MODEL\n?Z  @Z     @Z           @ZEDBDSN\n+ @ZEDTDSN                                      @ZEDTMEM @ZEDTVOL\n)INIT\n .ZVARS = '(SEL ZEDSTAT ZEDDISP)'\n &SEL = ' '\n IF (&AMT = ' ')  &AMT = CSR\n\n)REINIT\n IF (.MSG \u00ac= ' ')\n   .ATTR(.CURSOR) = 'COLOR(PINK) HILITE(REVERSE)'\n IF (.MSG = ' ')\n   &SEL = ' '\n   REFRESH(SEL)\n\n)PROC\n IF (&ZCMD \u00ac= ' ',CANCEL,CAN) .MSG = ISPZ001\n\n IF (&ZCMD \u00ac= CANCEL,CAN)            /*                              */\n   &SELT = TRUNC(&SEL,1)             /*                              */\n   &SELN = .TRAIL                    /*                              */\n   VER(&SELT,LIST,D,I,R,MSG=JHA@M033) /* validate line cmd           */\n   VER(&SELN,NUM,MSG=JHA@M033)       /* validate line cmd            */\n   IF (&SELT = D)                    /*                              */\n     VER(&SEL,LIST,D,MSG=JHA@M033)   /* no number after D            */\n   IF (&SELT \u00ac= D)                   /*                              */\n     &TEMP = TRUNC(&ZEDBDSN,10)      /*                              */\n     IF (&TEMP \u00ac= '__________')      /*                              */\n       VER(&ZEDBDSN,NB,DSNAME)       /*                              */\n     &TEMP = TRUNC(&ZEDTDSN,10)      /*                              */\n     IF (&TEMP \u00ac= '__________')      /*                              */\n       VER(&ZEDTDSN,DSNAME)          /*                              */\n     IF (&ZEDTMEM \u00ac= '________')     /*                              */\n       VER(&ZEDTMEM,NAME)            /*                              */\n     IF (&ZEDTVOL \u00ac= '______')       /*                              */\n       VER(&ZEDTVOL,PICT,'CCCCCC')   /*                              */\n       VER(&ZEDTVOL,NAME)            /*                              */\n\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHTEP0M": {"ttr": 3094, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n /* 07/27/83 Mura - additional validation of volume serial           */\n /* 07/27/83 Mura - determine device type from volume serial if blank*/\n /* 01/18/84 Mura - panel, msg id, skeleton names changed            */\n  %  TYPE(TEXT)    INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)    INTENS(LOW)   SKIP(ON)\n  @  TYPE(OUTPUT)  INTENS(HIGH)  SKIP(ON)\n)BODY\n%------------------------  FOREGROUND IEHPROGM  --------------------------------\n%OPTION  ===>_ZCMD                                                             +\n+\n+        %1+- Scratch                 %4+- Catalog\n+        %2+- Scratch and uncatalog   %5+- Rename\n+        %3+- Uncatalog               %6+- Rename and recatalog\n+\n+DATA SET NAME%===>_DSN                                              +\n+\n+FOR ALL OPTIONS EXCEPT%3+ENTER THE FOLLOWING:\n+  VOLUME(S)  %===>_TVOL                              +(Separated by commas)\n+  DEVICE     %===>_TDEV  +(3350, 3380, 3330V, or 3400-5 for tape)\n+\n+ENTER FOR OPTIONS%1+AND%5+FOR OPERATION ON A%SINGLE MEMBER+OF A LIBRARY:\n+  MEMBER     %===>_TMEM    +\n+\n+ENTER THE FOLLOWING FOR OPTIONS%5+AND%6+ONLY:\n+  NEW NAME   %===>_NEW                                         +\n+\n)INIT\n  .CURSOR = ZCMD\n\n)PROC\n  VER(&ZCMD,NB,LIST,1,2,3,4,5,6)     /*                      02/21/84*/\n  &O = &ZCMD\n\n  VER(&DSN,NB,DSNAME)\n  &T1 = TRUNC(&DSN,'(')\n  IF (.TRAIL \u00ac= &Z)  .MSG=JHA@M009   /* MEMBER NAME NOT ALLOWED      */\n  &T1 = TRUNC(&DSN,1)\n  IF (&T1 \u00ac= '''')\n     &TDSN = '&ZPREFIX..&DSN'\n  &T2=.TRAIL\n  IF (&T1 = '''')\n     &TDSN = TRUNC(&T2,'''')         /* STRIP OFF APOSTROPHES        */\n  VER(&TDSN,DSNAME)\n\n  IF (&ZCMD \u00ac= 3)\n     VER(&TVOL,NB)\n  &T1=TRUNC(&TVOL,6)  &T2='A&T1'     /* must be alphamerics  07/27/83*/\n  VER(&T2,NAME,MSG=JHABM192)         /* validate 1st volser  01/18/84*/\n  &T2=TRUNC(&T1,5)  &T2=.TRAIL       /* get 6th char of vol  07/27/83*/\n  IF(&TVOL\u00ac=&Z) VER(&T2,NB,MSG=JHABM192) /* ensure >= 6 chars01/18/84*/\n  &T1=TRUNC(&TVOL,4)                 /*                      07/27/83*/\n  &T1=TRUNC(&T1,3)  &T2=.TRAIL       /* get 4th char of vol  07/27/83*/\n  &T1=TRUNC(&T1,1)                   /* get 1st char of vol  07/27/83*/\n  IF(&TDEV=&Z)                       /*                      07/27/83*/\n    &TDEV=TRANS(&T2  1,3350  2,3350  /* determine dev type   07/27/83*/\n                     V,3330V $,3330V /*                      07/27/83*/\n                     *,3380 )        /*                      07/27/83*/\n    IF(&T1=0,1,2,3,4,5,6,7,8,9)  &TDEV='3400-5' /* tape      07/27/83*/\n\n  VER(&TDEV,LIST,3330V,3350,3380,'3400-5')\n\n  VER (&TMEM,NAME)\n\n  IF (&ZCMD = 5,6)\n     VER(&NEW,NB,MSG=JHABM190)       /*                      01/18/84*/\n  VER (&NEW,DSNAME)\n  &TNEW = &NEW\n  IF (&TMEM = &Z)                    /* if member not entered        */\n     IF (&TNEW \u00ac= &Z)                /* and TNEW is entered          */\n        &T1 = TRUNC(&NEW,'(')        /* then TNEW is a DSN (not MEM) */\n        IF (.TRAIL \u00ac= &Z)  .MSG=JHA@M009 /* MEMBER NAME NOT ALLOWED  */\n        &T1 = TRUNC(&NEW,1)\n        IF (&T1 \u00ac= '''')\n           &TNEW = '&ZPREFIX..&NEW'\n        &T2=.TRAIL\n        IF (&T1 = '''')\n           &TNEW = TRUNC(&T2,'''')      /* STRIP OFF APOSTROPHES     */\n        VER(&TNEW,DSNAME)\n\n  &TFUNC = TRANS(&ZCMD\n                 1,'SCRATCH'\n                 2,'SCRATCH + UNCATALOG'\n                 3,'UNCATALOG'\n                 4,'CATALOG'\n                 5,'RENAME'\n                 6,'RENAME + RECATALOG')\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHTEP0M2": {"ttr": 3331, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%------------------------  FOREGROUND IEHPROGM  --------------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n%Verify &TFUNC of the following data set:\n+\n+     DATA SET NAME:%&TDSN\n+\n+     &T01          %&TVOL\n+\n+     &T02          %&TDEV\n+\n+\n%&MSG1\n+\n+\n+\n+\n+Press%ENTER+to confirm operation.\n+Enter%END+command to cancel operation.\n+\n)INIT\n  &ZCMD = &Z   &MSG1 = &Z\n  IF (&O = 1,2,5)\n     IF (&TMEM = &Z)\n        &MSG1 = 'Warning: member name not entered.  &TFUNC +\n                 will apply to entire data set.'\n  &T01 = ' '\n  IF (&TVOL \u00ac= &Z)  &T01 = 'VOLUME SERIAL:'\n  IF (&TDEV \u00ac= &Z)  &T02 = 'DEVICE TYPE:'\n\n)PROC\n  IF (&ZCMD = C,CAN,CANCEL)\n     &ZCMD = &Z\n     .RESP = END\n  IF (&ZCMD \u00ac= &Z)  .MSG = ISPZ001\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "JHTES0M": {"ttr": 3333, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")CM\n)CM   ***** RENAME *****\n)SEL &O = 5 | &O = 6\n  RENAME       DSNAME=&TDSN,                                           X\n)SEL &O = 5 && &TMEM \u00ac= &Z\n               MEMBER=&TMEM,                                           X\n)ENDSEL\n               VOL=&TDEV=(&TVOL),                                      X\n               NEWNAME=&TNEW\n)ENDSEL\n)CM\n)CM   ***** SCRATCH *****\n)SEL &O = 1 | &O = 2\n  SCRATCH      DSNAME=&TDSN,                                           X\n)SEL &TMEM \u00ac= &Z\n               MEMBER=&TMEM,                                           X\n)ENDSEL\n               VOL=&TDEV=(&TVOL),PURGE\n)ENDSEL\n)CM\n)CM   ***** UNCATLG *****\n)SEL &O = 2 | &O = 3 | &O = 6\n  UNCATLG      DSNAME=&TDSN\n)ENDSEL\n)CM\n)CM   ***** CATLG *****\n)SEL &O = 4\n  CATLG        DSNAME=&TDSN,                                           X\n)ENDSEL\n)SEL &O = 6\n  CATLG        DSNAME=&TNEW,                                           X\n)ENDSEL\n)SEL &O = 4 | &O = 6\n               VOL=&TDEV=(&TVOL)\n)ENDSEL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LEAVE": {"ttr": 3335, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&LABEL   LEAVE &RC=0,       RETURN CODE (VALUE OR REGISTER)            X\n               &LABEL2=     LABEL FOR REGISTER RESTORES\n.*                                                      RON MURA, TPD\n.*                 NO PARAMETERS REQUIRED\n         MNOTE *,'*** LEAVE - STANDARD OS LINKAGE ***'\n         GBLB  &RENTSW1              1 = REENTERANT SAVEAREA IN ENTER\n         GBLC  &WKLNTH\n         LCLB  &RCSW                 1 = MUST RESTORE REG 15\n&RCSW    SETB  0                     INSURE OFF TO START\n&LABEL   CNOP  0,4\n         AIF   (&RENTSW1 EQ 1).REENT\n         L     13,4(13)              RESTORE REG 13 (POINT TO HSA)\n.*\n.COMMON  ANOP       COMMON CODE FOR RENT AND NORENT:\n&LABEL2  L     14,12(13)             RESTORE REGISTER\n         AIF   ('&RC'(1,1) EQ '(').REGRC    CHECK FOR REGISTER NOTATION\n         LA    15,&RC                LOAD RETURN CODE\n         AGO   .L14\n.REGRC   AIF   (&RCSW EQ 0).REGRC2\n         LR    15,5                  RESTORE RETURN CODE\n         AGO   .L14\n.REGRC2  AIF   ('&RC(1)' EQ '15' OR '&RC(1)' EQ 'R15').L14\n         LR    15,&RC(1)             LOAD RETURN CODE\n.L14     ANOP\n         LM    0,12,20(13)           RESTORE REGISTERS\n         MVI   12(13),X'FF'          SET RETURN INDICATION IN CALLER SA\n         BR    14\n.*       LTORG\n         MEXIT\n.REENT   ANOP\n         LR    1,13                  LOAD REG 1 FOR FREEMAIN\n         AIF   ('&RC'(1,1) NE '(').R2\n         AIF   ('&RC(1)' NE '15' AND '&RC(1)' NE 'R15').R2\n         LR    5,&RC(1)              SAVE RETURN CODE\n&RCSW    SETB  1\n.R2      ANOP\n         L     13,4(13)              RESTORE REG 13 (POINT TO HSA)\n         MNOTE '         FREEMAIN R,LV=72+&WKLNTH,A=(1) '\n         FREEMAIN R,LV=72+&WKLNTH,A=(1)\n         AGO  .COMMON\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PANELID": {"ttr": 3337, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%------------------------  SAMPLE PRIMARY OPTION MENU  -------------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%   0 +ISPF PARMS  - Specify terminal and user parameters   +TIME     - &ZTIME\n%   1 +COMMANDS    - Create/change command table            +TERMINAL - &ZTERM\n%   2 +.           - (Description for option 2)             +PF KEYS  - &ZKEYS\n%   3 +.           - (Description for option 3)\n%   4 +.           - (Description for option 4)\n%   5 +.           - (Description for option 5)\n%   T +TUTORIAL    - Display information about this application\n%   X +EXIT        - Terminate ISPF using list/log defaults\n%\n+Enter%END+command to terminate application.\n%\n)INIT\n  .HELP = ISP00003      /* Help for this panel                     */\n  &ZPRIM = YES          /* This is a primary option menu           */\n  &ZHTOP = ISP00003     /* Tutorial table of contents for this appl*/\n  &ZHINDEX = ISP91000   /* Tutorial index - 1st page for this appl */\n  IF(&XPANELID=Y)                    /* if we've set switch already  */\n    IF(&XCMD\u00ac=&Z)                    /* if an initial option saved   */\n      &ZCMD=&XCMD                    /* then restore initial option  */\n      &XCMD=&Z                       /* reset our work variable      */\n      .RESP=ENTER                    /* process user's initial option*/\n  IF(&XPANELID\u00ac=Y)                   /* if we haven't set switch     */\n    &XCMD=&ZCMD                      /* then save initial opt, if any*/\n    &XPANELID=Y                      /* indicate we've set panelid on*/\n    &ZCMD=PANELID                    /* set command to special option*/\n    .RESP=ENTER                      /* simulate ENTER               */\n\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PANEL(ISPUCMA)'\n            /*******************************************************/\n            /*                                                     */\n            /* Add other applications here.                        */\n            /*                                                     */\n            /*******************************************************/\n                T,'PGM(ISPTUTOR) PARM(ISP00000)'\n          PANELID,'PGM(ISPOPI) NOFUNC' /* opt to turn on panelid     */\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  /* The following is to protect a user who has XPANELID in his      */\n  /* profile (which hopefully will not occur).  The )PROC section    */\n  /* will not be executed on the way back in certain cases, however  */\n  /* (e.g., user enters =X on lower panel).                          */\n  IF(.RESP=END)                      /* if END/RETURN, then reset    */\n    &XPANELID=&Z                     /* switch in case it's in prof. */\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "REQUS": {"ttr": 3339, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n         REQUS\n         GBLB  &HADREQ\n         AIF   (&HADREQ).MEND\n&HADREQ  SETB  1\n         SPACE 2\n* G E N E R A L   R E G I S T E R S\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\n.MEND    MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SCANLINE": {"ttr": 3341, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&LBL     SCANLINE &SEEK,      CHARS SOUGHT (IN QUOTES)                 X\n               &RECADDR=,     START OF RECORD TO BE SEARCHED           X\n               &STRTCOL=1,    STARTING COLUMN                          X\n               &ENDCOL=71,    ENDING COLUMN                            X\n               &FIND=,        BRANCH ADDRESS IF CHARS FOUND            X\n               &NOFIND=,      BRANCH ADDRESS IF CHARS NOT FOUND        X\n               &WKREG=15      WORK REGISTER\n.*                                                      RON MURA, TPD\n.*   THIS MACRO GENERATES REENTERANT CODE.\n         LCLA  &WORK,&WORK2\n         LCLB  &ERRSW,&RECSW\n         LCLC  &NDX,&WSEEK                                     9/20/82\n&NDX     SETC  '&SYSNDX'       KEEP IN SHORT-NAMED FIELD FOR ALIGNMENT\n         AIF   (T'&SEEK EQ 'O').ERR1\n.CHK2    AIF   (T'&RECADDR EQ 'O').WARN1\n.CHK4    AIF   (T'&FIND EQ 'O' AND T'&NOFIND EQ 'O').ERR2\n.CHK5    AIF   (T'&STRTCOL NE 'N' OR T'&ENDCOL NE 'N').ERR3\n         AIF   (&STRTCOL GT &ENDCOL).ERR4\n         AIF   (&ERRSW EQ 1).MEND\n         AIF   (&RECSW EQ 1).R3OK    BRANCH IF DEFAULT (REG 1)\n         AIF   ('&RECADDR'(1,1) EQ '(').REG    CHECK FOR REG FORMAT\n&LBL     LA    1,&RECADDR            LOAD RECORD ADDRESS\n         AGO   .R3OK\n.REG     AIF   ('&RECADDR(1)' EQ '1').R3OK\n&LBL     LR    1,&RECADDR(1)         LOAD RECORD ADDRESS\n.R3OK    ANOP\n&WORK    SETA  &STRTCOL-1\n         AIF   (&WORK EQ 0).SKPLA1   IF 0, LA IS NOT NEEDED\n         LA    1,&WORK.(0,1)         POINT AT START LOCATION\n.SKPLA1  ANOP\n&WORK    SETA  &ENDCOL-&STRTCOL+1    NUMBER OF COLUMNS TO BE SEARCHED\n&WORK2   SETA  K'&SEEK-2             ASSUME CHARACTER DATA - SET LENGTH\n.*                                   (SUBTRACT 2 FOR QUOTES)\n&WORK    SETA  &WORK-&WORK2+1        MAX NUMBER OF SEARCHES NEEDED\n         LA    &WKREG,&WORK          LOAD MAX NUMBER OF SEARCHES\n         AIF   (&WORK2 GT 1).CLC                               9/20/82\nSCCL&NDX CLI   0(1),C&SEEK                                     9/20/82\n         AGO   .CHKFIND                                        9/20/82\n.CLC     ANOP  ,                                               9/20/82\nSCCL&NDX CLC   0(&WORK2,1),=C&SEEK\n.CHKFIND AIF   (T'&FIND EQ 'O').FIND2\n         BE    &FIND\n         AGO   .LA\n.FIND2   ANOP\n         BE    SCEX&NDX\n.LA      ANOP\n         LA    1,1(0,1)              INCREMENT TO NEXT POSITION\n         BCT   &WKREG,SCCL&NDX\n         XR    1,1                   STRING NOT FOUND\n         AIF   (T'&NOFIND EQ 'O').END\n         B     &NOFIND\n.END     ANOP\n.*               NO NEED FOR SCEX LABEL IF FIND PROVIDED:\n         AIF   (T'&FIND NE 'O').MEND\nSCEX&NDX EQU   *                     END OF SCANLINE MACRO\n         AGO   .MEND\n.ERR1    MNOTE 12,'*** NO STRING TO BE FOUND SPECIFIED ***'\n&ERRSW   SETB  1\n         AGO   .CHK2\n.WARN1   MNOTE *,'*** NO RECORD ADDR SPECIFIED - REG. 1 ASSUMED ***'\n&RECSW   SETB  1\n         AGO   .CHK4\n.ERR2    MNOTE *,'*** NO FIND OR NOFIND ADDRESS GIVEN ***'\n         AGO   .CHK5\n.ERR3    MNOTE 12,'*** STRTCOL AND ENDCOL MUST BE NUMERIC ***'\n         AGO   .MEND\n.ERR4    MNOTE 12,'*** STRTCOL MAY NOT BE GREATER THAN ENDCOL ***'\n         AGO   .MEND\n.FIN     ANOP\n.MEND    MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSCMDTB": {"ttr": 3344, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PROC 0                               /* DISPLAY COPY OF COMMAND TABLE*/\n/*    RON MURA, TECHNICAL SERVICES, ISPF V1R1M0                      */\nCONTROL NOFLUSH                      /*                              */\nSET &TBNM = SYSCMDS                  /* A COPY OF ISPCMDS            */\nSET &MSG =                           /*                              */\nSET &PNL = ZCMDTBL                   /*                              */\nISPEXEC TBOPEN &TBNM NOWRITE         /*                              */\nSET &RC = &LASTCC                    /*                              */\nIF &RC = 8 THEN DO                   /* TABLE DOES NOT EXIST         */\n                   SET &JHYTBNM = &TBNM /*                   10/18/83*/\n                   ISPEXEC SETMSG MSG(JHAYM111)       /*     03/04/85*/\n                   EXIT              /*                              */\n                END                  /*                              */\n\nDISPLAY: ISPEXEC TBDISPL &TBNM PANEL(&PNL) MSG(&MSG)\n                                     /*                              */\nSET &RC = &LASTCC                    /*                              */\nIF &RC < 8 && &ZCMD \u00ac=               /*                              */-\n   THEN DO                           /*                              */\n           SET &MSG = ISPZ001        /* INVALID COMMAND              */\n           SET &PNL =                /*                              */\n           GOTO DISPLAY              /*                              */\n        END                          /*                              */\nISPEXEC TBEND &TBNM                  /*                              */\nSET &MSG =                           /*                              */\nSET &PNL = ZCMDTBL                   /*                              */\nEXIT                                 /*                              */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XALTK": {"ttr": 3346, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "%TUTORIAL ---------- JH SECONDARY PF KEY DEFINITION ------------------- TUTORIAL\n%COMMAND ===>_ZCMD                                                             +\n+\n+   This option allows a second set of PF keys to be defined.\n\n+   Before this option is used, the number of PK keys must be correct.  (Use\n    option 0.1 or 0.3.)\n\n+   The active set of PF keys is that specified on the panel (A or B).  The\n    other set is remembered but is not active.  When changing a set of keys,\n    enter the new designation (A or B) first and press ENTER.  This will\n    display the current values for the specified set of PF keys, and these\n    values may then be changed.\n\n+   The command%K2+will invoke this option from any panel.  If K2 is used, a\n    parameter of%A+or%B+ may also be entered.  The parameter will activate the\n    specified set of PF keys without displaying the PF key specification panel.\n\n+   If 0.3 (or the%KEYS+command) is used, only the active keys will be known\n    to that option.\n\n+\n)PROC\n   &ZUP = ISP05000\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZALTKA": {"ttr": 3348, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  @  TYPE(INPUT)  CAPS(OFF)\n  %  TYPE(TEXT)   INTENS(HIGH)   SKIP(ON)\n  +  TYPE(TEXT)   INTENS(LOW)    SKIP(ON)\n /* 10/03/83 MURA - don't vput variables not set after uz61079       */\n)BODY\n%------------------  JH SECONDARY PF KEY DEFINITION  ------------------------\n%COMMAND ===>_ZCMD\n+\n+NUMBER OF PF KEYS:%12+\n+SET OF PF KEYS IN EFFECT%===>_Z+(A or B - verify before proceeding)\n+\n+PF1 %===>@ZPF13\n+PF2 %===>@ZPF14\n+PF3 %===>@ZPF15\n+PF4 %===>@ZPF16\n+PF5 %===>@ZPF17\n+PF6 %===>@ZPF18\n+PF7 %===>@ZPF19\n+PF8 %===>@ZPF20\n+PF9 %===>@ZPF21\n+PF10%===>@ZPF22\n+PF11%===>@ZPF23\n+PF12%===>@ZPF24\n+\n+Use%HELP+if you have not entered this option previously.\n+\n)INIT\n  .ZVARS = '(JHPFKG)'\n  .CURSOR = JHPFKG\n  .HELP = XALTK\n  IF (&JHPFKG = &Z)                  /* if option never used before  */\n     &JHPFKG = A                     /* then initialize PFK set to A */\n  &TPFKG = &JHPFKG                   /* save old value for CLIST     */\n  IF (&PPFKG \u00ac= &Z)                  /* if parm provided with cmd    */\n     .RESP = END                     /* then don't display panel     */\n     &JHPFKG = &PPFKG                /* set panel field to parm value*/\n     &PPFKG = &Z                     /* reset parm value to blanks   */\n\n)PROC\n IF (&ZCMD \u00ac= ' ') .MSG = ISPZ001    /* invalid command              */\n VER (&JHPFKG NB LIST A,B)           /*                              */\n\n IF (.MSG = &Z)                      /* continue only if no error    */\n    IF (&TPFKG \u00ac= &JHPFKG) /* if set has been changed via panel/parm */\n       &TPF13=&ZPF13   &TPF14=&ZPF14   &TPF15=&ZPF15   &TPF16=&ZPF16\n       &TPF17=&ZPF17   &TPF18=&ZPF18   &TPF19=&ZPF19   &TPF20=&ZPF20\n       &TPF21=&ZPF21   &TPF22=&ZPF22   &TPF23=&ZPF23   &TPF24=&ZPF24\n       &ZPF13=&JHPF13  &ZPF14=&JHPF14  &ZPF15=&JHPF15  &ZPF16=&JHPF16\n       &ZPF17=&JHPF17  &ZPF18=&JHPF18  &ZPF19=&JHPF19  &ZPF20=&JHPF20\n       &ZPF21=&JHPF21  &ZPF22=&JHPF22  &ZPF23=&JHPF23  &ZPF24=&JHPF24\n       &JHPF13=&TPF13  &JHPF14=&TPF14  &JHPF15=&TPF15  &JHPF16=&TPF16\n       &JHPF17=&TPF17  &JHPF18=&TPF18  &JHPF19=&TPF19  &JHPF20=&TPF20\n       &JHPF21=&TPF21  &JHPF22=&TPF22  &JHPF23=&TPF23  &JHPF24=&TPF24\n\n       IF (&ZPF13 = ' ')\n         &ZPF13 = HELP\n       IF (&ZPF14 = ' ')\n         &ZPF14 = SPLIT\n       IF (&ZPF15 = ' ')\n         &ZPF15 = END\n       IF (&ZPF16 = ' ')\n         &ZPF16 = RETURN\n       IF (&ZPF17 = ' ')\n         &ZPF17 = RFIND\n       IF (&ZPF18 = ' ')\n         &ZPF18 = RCHANGE\n       IF (&ZPF19 = ' ')\n         &ZPF19 = UP\n       IF (&ZPF20 = ' ')\n         &ZPF20 = DOWN\n       IF (&ZPF21 = ' ')\n         &ZPF21 = SWAP\n       IF (&ZPF22 = ' ')\n         &ZPF22 = LEFT\n       IF (&ZPF23 = ' ')\n         &ZPF23 = RIGHT\n       IF (&ZPF24 = ' ')\n         &ZPF24 = CURSOR\n\n       VPUT ( ZPF13 ZPF14 ZPF15 ZPF16 ZPF17 ZPF18 ) PROFILE\n       VPUT ( ZPF19 ZPF20 ZPF21 ZPF22 ZPF23 ZPF24 ) PROFILE\n       VPUT ( JHPF13 JHPF14 JHPF15 JHPF16 JHPF17 JHPF18 )       PROFILE\n       VPUT ( JHPF19 JHPF20 JHPF21 JHPF22 JHPF23 JHPF24 JHPFKG) PROFILE\n\n IF (.MSG \u00ac= ' ')\n   .RESP = ENTER\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZALTKB": {"ttr": 3351, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  @  TYPE(INPUT)  CAPS(OFF)\n  %  TYPE(TEXT)   INTENS(HIGH)   SKIP(ON)\n  +  TYPE(TEXT)   INTENS(LOW)    SKIP(ON)\n /* 10/03/83 MURA - don't vput variables not set after uz61079       */\n)BODY\n%----------------  JH PF KEY DEFINITION - PRIMARY KEYS -------------------------\n%COMMAND ===>_ZCMD\n+\n+NUMBER OF PF KEYS:%24+\n+SET OF PF KEYS IN EFFECT%===>_Z+(A or B - verify before proceeding)\n+\n+PF13%===>@ZPF13\n+PF14%===>@ZPF14\n+PF15%===>@ZPF15\n+PF16%===>@ZPF16\n+PF17%===>@ZPF17\n+PF18%===>@ZPF18\n+PF19%===>@ZPF19\n+PF20%===>@ZPF20\n+PF21%===>@ZPF21\n+PF22%===>@ZPF22\n+PF23%===>@ZPF23\n+PF24%===>@ZPF24\n+\n+Press%ENTER+key to process changes and display alternate keys (PF1-PF12).\n+Use%HELP+if you have not entered this option previously.\n)INIT\n  .ZVARS = '(JHPFKG)'\n  .CURSOR = JHPFKG\n  .HELP = XALTK\n  IF (&JHPFKG = &Z)                  /* if option never used before  */\n     &JHPFKG = A                     /* then initialize PFK set to A */\n  &TPFKG = &JHPFKG                   /* save old value for CLIST     */\n  IF (&PPFKG \u00ac= &Z)                  /* if parm provided with cmd    */\n     .RESP = END                     /* then don't display panel     */\n     &JHPFKG = &PPFKG                /* set panel field to parm value*/\n     &PPFKG = &Z                     /* reset parm value to blanks   */\n\n)PROC\n IF (&ZCMD \u00ac= ' ') .MSG = ISPZ001    /* invalid command              */\n VER (&JHPFKG NB LIST A,B)           /*                              */\n\n IF (.MSG = &Z)                      /* continue only if no error    */\n    IF (&TPFKG \u00ac= &JHPFKG) /* if set has been changed via panel/parm */\n       &TPF13=&ZPF13   &TPF14=&ZPF14   &TPF15=&ZPF15   &TPF16=&ZPF16\n       &TPF17=&ZPF17   &TPF18=&ZPF18   &TPF19=&ZPF19   &TPF20=&ZPF20\n       &TPF21=&ZPF21   &TPF22=&ZPF22   &TPF23=&ZPF23   &TPF24=&ZPF24\n       &ZPF13=&JHPF13  &ZPF14=&JHPF14  &ZPF15=&JHPF15  &ZPF16=&JHPF16\n       &ZPF17=&JHPF17  &ZPF18=&JHPF18  &ZPF19=&JHPF19  &ZPF20=&JHPF20\n       &ZPF21=&JHPF21  &ZPF22=&JHPF22  &ZPF23=&JHPF23  &ZPF24=&JHPF24\n       &JHPF13=&TPF13  &JHPF14=&TPF14  &JHPF15=&TPF15  &JHPF16=&TPF16\n       &JHPF17=&TPF17  &JHPF18=&TPF18  &JHPF19=&TPF19  &JHPF20=&TPF20\n       &JHPF21=&TPF21  &JHPF22=&TPF22  &JHPF23=&TPF23  &JHPF24=&TPF24\n       &TPF01=&ZPF01   &TPF02=&ZPF02   &TPF03=&ZPF03   &TPF04=&ZPF04\n       &TPF05=&ZPF05   &TPF06=&ZPF06   &TPF07=&ZPF07   &TPF08=&ZPF08\n       &TPF09=&ZPF09   &TPF10=&ZPF10   &TPF11=&ZPF11   &TPF12=&ZPF12\n       &ZPF01=&JHPF01  &ZPF02=&JHPF02  &ZPF03=&JHPF03  &ZPF04=&JHPF04\n       &ZPF05=&JHPF05  &ZPF06=&JHPF06  &ZPF07=&JHPF07  &ZPF08=&JHPF08\n       &ZPF09=&JHPF09  &ZPF10=&JHPF10  &ZPF11=&JHPF11  &ZPF12=&JHPF12\n       &JHPF01=&TPF01  &JHPF02=&TPF02  &JHPF03=&TPF03  &JHPF04=&TPF04\n       &JHPF05=&TPF05  &JHPF06=&TPF06  &JHPF07=&TPF07  &JHPF08=&TPF08\n       &JHPF09=&TPF09  &JHPF10=&TPF10  &JHPF11=&TPF11  &JHPF12=&TPF12\n\n       IF (&ZPF13 = ' ')\n         &ZPF13 = HELP\n       IF (&ZPF14 = ' ')\n         &ZPF14 = SPLIT\n       IF (&ZPF15 = ' ')\n         &ZPF15 = END\n       IF (&ZPF16 = ' ')\n         &ZPF16 = RETURN\n       IF (&ZPF17 = ' ')\n         &ZPF17 = RFIND\n       IF (&ZPF18 = ' ')\n         &ZPF18 = RCHANGE\n       IF (&ZPF19 = ' ')\n         &ZPF19 = UP\n       IF (&ZPF20 = ' ')\n         &ZPF20 = DOWN\n       IF (&ZPF21 = ' ')\n         &ZPF21 = SWAP\n       IF (&ZPF22 = ' ')\n         &ZPF22 = LEFT\n       IF (&ZPF23 = ' ')\n         &ZPF23 = RIGHT\n       IF (&ZPF24 = ' ')\n         &ZPF24 = CURSOR\n       IF (&ZPF01 = ' ')\n         &ZPF01 = HELP\n       IF (&ZPF02 = ' ')\n         &ZPF02 = SPLIT\n       IF (&ZPF03 = ' ')\n         &ZPF03 = END\n       IF (&ZPF04 = ' ')\n         &ZPF04 = RETURN\n       IF (&ZPF05 = ' ')\n         &ZPF05 = RFIND\n       IF (&ZPF06 = ' ')\n         &ZPF06 = RCHANGE\n       IF (&ZPF07 = ' ')\n         &ZPF07 = UP\n       IF (&ZPF08 = ' ')\n         &ZPF08 = DOWN\n       IF (&ZPF09 = ' ')\n         &ZPF09 = SWAP\n       IF (&ZPF10 = ' ')\n         &ZPF10 = LEFT\n       IF (&ZPF11 = ' ')\n         &ZPF11 = RIGHT\n       IF (&ZPF12 = ' ')\n         &ZPF12 = CURSOR\n\n       VPUT ( ZPF13 ZPF14 ZPF15 ZPF16 ZPF17 ZPF18 ) PROFILE\n       VPUT ( ZPF19 ZPF20 ZPF21 ZPF22 ZPF23 ZPF24 ) PROFILE\n       VPUT ( JHPF13 JHPF14 JHPF15 JHPF16 JHPF17 JHPF18 )       PROFILE\n       VPUT ( JHPF19 JHPF20 JHPF21 JHPF22 JHPF23 JHPF24 JHPFKG) PROFILE\n       VPUT ( ZPF01 ZPF02 ZPF03 ZPF04 ZPF05 ZPF06 ) PROFILE\n       VPUT ( ZPF07 ZPF08 ZPF09 ZPF10 ZPF11 ZPF12 ) PROFILE\n       VPUT ( JHPF01 JHPF02 JHPF03 JHPF04 JHPF05 JHPF06 ) PROFILE\n       VPUT ( JHPF07 JHPF08 JHPF09 JHPF10 JHPF11 JHPF12 ) PROFILE\n\n IF (.MSG \u00ac= ' ')\n   .RESP = ENTER\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZALTKC": {"ttr": 3587, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  @  TYPE(INPUT)  CAPS(OFF)\n  %  TYPE(TEXT)   INTENS(HIGH)   SKIP(ON)\n  +  TYPE(TEXT)   INTENS(LOW)    SKIP(ON)\n /* 10/03/83 MURA - don't vput variables not set after uz61079       */\n)BODY\n%---------------  JH PF KEY DEFINITION - ALTERNATE KEYS ------------------------\n%COMMAND ===>_ZCMD\n%\n+SET OF PF KEYS IN EFFECT:%&JHPFKG+             NUMBER OF PF KEYS:%24+\n+NOTE: The definitions below apply only to terminals with 24 PF keys.\n%\n+PF1 %===>@ZPF01\n+PF2 %===>@ZPF02\n+PF3 %===>@ZPF03\n+PF4 %===>@ZPF04\n+PF5 %===>@ZPF05\n+PF6 %===>@ZPF06\n+PF7 %===>@ZPF07\n+PF8 %===>@ZPF08\n+PF9 %===>@ZPF09\n+PF10%===>@ZPF10\n+PF11%===>@ZPF11\n+PF12%===>@ZPF12\n+\n+Press%ENTER+key to display primary keys (PF13-PF24) and to change\n+JH PF key set in effect.\n)INIT\n  .HELP = XALTK\n\n)PROC\n IF (&ZCMD \u00ac= ' ') .MSG = ISPZ001    /* invalid command              */\n\n IF (&ZPF01 = ' ')\n   &ZPF01 = HELP\n IF (&ZPF02 = ' ')\n   &ZPF02 = SPLIT\n IF (&ZPF03 = ' ')\n   &ZPF03 = END\n IF (&ZPF04 = ' ')\n   &ZPF04 = RETURN\n IF (&ZPF05 = ' ')\n   &ZPF05 = RFIND\n IF (&ZPF06 = ' ')\n   &ZPF06 = RCHANGE\n IF (&ZPF07 = ' ')\n   &ZPF07 = UP\n IF (&ZPF08 = ' ')\n   &ZPF08 = DOWN\n IF (&ZPF09 = ' ')\n   &ZPF09 = SWAP\n IF (&ZPF10 = ' ')\n   &ZPF10 = LEFT\n IF (&ZPF11 = ' ')\n   &ZPF11 = RIGHT\n IF (&ZPF12 = ' ')\n   &ZPF12 = CURSOR\n\n VPUT ( ZPF01 ZPF02 ZPF03 ZPF04 ZPF05 ZPF06 ) PROFILE\n VPUT ( ZPF07 ZPF08 ZPF09 ZPF10 ZPF11 ZPF12 ) PROFILE\n\n IF (.MSG \u00ac= ' ')\n   .RESP = ENTER\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZCMDTBL": {"ttr": 3589, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")ATTR\n  @  TYPE(OUTPUT)  INTENS(LOW)\n  %  TYPE(TEXT)  INTENS(HIGH)  SKIP(ON)\n  +  TYPE(TEXT)  INTENS(LOW)   SKIP(ON)\n)BODY\n%--------------------  ISPF SYSTEM COMMANDS  -----------------------------------\n%COMMAND ===>_ZCMD                                            %SCROLL ===>_JHSC+\n\n+  Note: L is the minimum number of characters in the command which must be\n+        entered.  If 0, the command has no abbreviation.\n+\n%COMMAND   L  FUNCTION\n%\n)MODEL\n@Z        @Z @Z\n)INIT\n  .CURSOR = ZCMD\n  IF (&JHSC = &Z)  &JHSC = CSR\n  .ZVARS = '(ZCTVERB ZCTTRUNC ZCTDESC)'\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT012/FILE012.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT012", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}