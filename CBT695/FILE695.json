{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012619000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE695.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE695.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x12'", "DS1TRBAL": "b'\\x0c8'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xd5\\x00\\x08\\x04\\xd5\\x00\\x0b\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04C\\x00\\x00\\x01\\x040\\x9f\\x01\\x040\\x9f\"B\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf7@@@'", "ispf": {"version": "04.67", "flags": 0, "createdate": "2004-11-04T00:00:00", "modifydate": "2004-11-04T22:42:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-467"}, "text": "REGULAR CBT TAPE - VERSION 467    FILE:  695\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT467.FILE695\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    27920   PO\n\n   PDS117I 16 MEMBERS COUNTED; CUMULATIVE SIZE IS 1,002 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/04/04    22:42:33    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$README": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x040\\x7f\\x01\\x040\\x7f\\x17Q\\x00\\x17\\x00\\x17\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-02T00:00:00", "modifydate": "2004-11-02T17:51:28", "lines": 23, "newlines": 23, "modlines": 0, "user": "ACEVEDO"}, "text": "\n     J.D. Acevedo      neither expresses nor implies any warranty\n     as to the fitness of these computer programs for any function.\n     The use of these programs or the results therefrom is entirely\n     at the risk of the user.  Consequently, the user may modify\n     these programs in any way he/she thinks fit.\n\n             --------------------------------------------\n             |This software is provided on an asis basis|\n             |              and                         |\n             |       no warranty is provided            |\n             --------------------------------------------\n\n     These programs are Freeware and may be freely copied.  They\n     may be freely distributed to any other party on condition\n     that no inducement beyond reasonable handling costs is\n     offered or accepted by either side for such distribution.\n\n     I would be interested to hear of comments and/or proposed\n     enhancements, if so, please email me at:  j_d_a@eresmas.com\n\n     Thanks\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$CHANGES": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x040\\x7f\\x01\\x040\\x7f\\x17Q\\x00\\x02\\x00\\x02\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-02T00:00:00", "modifydate": "2004-11-02T17:51:28", "lines": 2, "newlines": 2, "modlines": 0, "user": "ACEVEDO"}, "text": "___Date___ _Member_ _Description____________________________________\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$INDEX": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0c\\x00\\x19\\x01\\x040\\x9f\\x01\\x040\\x9f\\x10C\\x00\\x0e\\x00\\x0e\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.12", "flags": 0, "createdate": "2004-11-04T00:00:00", "modifydate": "2004-11-04T10:43:19", "lines": 14, "newlines": 14, "modlines": 0, "user": "ACEVEDO"}, "text": "$$README  Lincense and author information\n$INDEX    What you are reading right now ]\n$CHANGES  Changes History\n$INSTALL  Install Information\nACEEBMS   View BMS in TSO\nACEEFRC   ForeGround Rexx Compilation\nACEEFRC   ForeGround Rexx Testing\nACEEMON   Monitor Utility FUNCTION ----  Read ACEEMON for EXAMPLES ]]]]\nACEESCD   SqlCode Description (DSNTIAR)\nACEETIA   TSO/ISPF allocations\nACEEUSR   User Data from RACF Data Areas\nACEEVAR   Just display System Variables: SYSVAR MVSVAR ISPF\nACEPBMS   Dynamic Panel of 80x24\nACEPMON   Monitor Panel of  1x40\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$INSTALL": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x040\\x8f\\x01\\x040\\x8f\\x10\\x03\\x00\\x0b\\x00\\x0b\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-03T00:00:00", "modifydate": "2004-11-03T10:03:25", "lines": 11, "newlines": 11, "modlines": 0, "user": "ACEVEDO"}, "text": "Depending on the 4th position of the members:\n\n     ______Type________      _Copy/Move to__\n     E-Rexx exec               sysexec\n     P-Panels                  ISPPLIB\n\n     M-Messages  -none         ISPMLIB\n     S-Skeletons -none         ISPSLIB\n     T-Tables    -none         ISPTLIB\n\n  Take a look at ACEETIA: TSO ISPF ALLOCATIONS.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE695": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04C\\x00\\x00\\x01\\x040\\x9f\\x01\\x040\\x9f\"B\\x00\\x16\\x00\\x16\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf7@@@'", "ispf": {"version": "04.67", "flags": 0, "createdate": "2004-11-04T00:00:00", "modifydate": "2004-11-04T22:42:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "CBT-467"}, "text": "//***FILE 695 is from J.D. Acevedo and contains some very useful    *   FILE 695\n//*           REXX execs, together with associated panels.          *   FILE 695\n//*                                                                 *   FILE 695\n//*           email:  j_d_a@eresmas.com                             *   FILE 695\n//*                                                                 *   FILE 695\n//*       Description of contents:                                  *   FILE 695\n//*                                                                 *   FILE 695\n//*       $$README  License and author information                  *   FILE 695\n//*       $INDEX    What you are reading right now                  *   FILE 695\n//*       $CHANGES  Changes History                                 *   FILE 695\n//*       $INSTALL  Install Information                             *   FILE 695\n//*       ACEEBMS   View BMS in TSO                                 *   FILE 695\n//*       ACEEFRC   ForeGround Rexx Compilation                     *   FILE 695\n//*       ACEEFRC   ForeGround Rexx Testing                         *   FILE 695\n//*       ACEEMON   Monitor Utility                                 *   FILE 695\n//*       ACEEUSR   User Data from RACF Data Areas                  *   FILE 695\n//*       ACEESCD   SqlCode Description (DSNTIAR)                   *   FILE 695\n//*       ACEEVAR   Just display System Variables:                  *   FILE 695\n//*                 SYSVAR MVSVAR ISPF CUA                          *   FILE 695\n//*       ACEPBMS   Dynamic Panel of 80x24                          *   FILE 695\n//*       ACEPMON   Monitor Panel of  1x40                          *   FILE 695\n//*                                                                 *   FILE 695\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ACEEBMS": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00%\\x01\\x040\\x8f\\x01\\x040\\x8f\\x10\\x03\\x00\\xb6\\x00\\xb6\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2004-11-03T00:00:00", "modifydate": "2004-11-03T10:03:25", "lines": 182, "newlines": 182, "modlines": 0, "user": "ACEVEDO"}, "text": "/*>Rexx --------------------------------------------------------------*/\n/*                                                                    */\n/* ACEEBMS: ForeGround Rexx Compiler                                  */\n/*                                                                    */\n/*--------------------------------------------------------------------*/\n/* Parameters:                                                        */\n/*        library LIBRARY                                             */\n/*        member  BMS Source                                          */\n/*        option  P-Panel, other DISPLAY                              */\n/*--------------------------------------------------------------------*/\n/* Other objects: ACEPBMS Dynamic panel                               */\n/*                ACEEMON Monitor utility                             */\n/*--------------------------------------------------------------------*/\n/* Changes:2001/01/13 Acevedo First Development                       */\n/*         2002/06/30 Acevedo Add Dynamic Panel                       */\n/*--------------------------------------------------------------------*/\n\narg library member option .\noption='P'\n\ncall start\ncall verify_bms\ncall populate_dyn\ncall show_dyn\ncall finish\n\n/*--------------------------------------------------------------------*/\n/* Desc.: Start                                                       */\n/* Parms: _______ ____________________________________________________*/\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\nstart:\nz_winttl='TSO BMS'\n\n   /*________________________________________________ Verify Source */\n_mon=ACEEMON(Z_WINTTL,'Verifying Source',)\ndd=library'('member')'\nif sysdsn(\"'\"dd\"'\")\u00ac=\"OK\" then do\n   zerrsm='';zerralrm='YES';zerrhm='*'\n   zerrlm=dd sysdsn(\"'\"dd\"'\")\n   address ispexec \"setmsg msg(isrz002)\"\n   exit\n   end\n\n   /*________________________________________________ Read   Source */\n_mon=ACEEMON(Z_WINTTL,'Reading   Source',)\naddress tso \"alloc dd(acefbms) da('\"dd\"') shr \"\naddress tso \"execio * diskr acefbms (stem bms.\"\naddress tso \"execio 0 diskr acefbms (finis\"\naddress tso \"free dd(acefbms)\"\nreturn\n\n/*--------------------------------------------------------------------*/\n/* Desc.: verify_bms                                                  */\n/*        simple test                                                 */\n/* Parms: _______ ____________________________________________________*/\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\nverify_bms:\ndo i=1 to bms.0 while(pos(' DFHMDF ',bms.i)=0)\n   end\n\nif i=bms.0 & pos(' DFHMDF ',bms.i)=0 then do\n   zerrsm='';zerralrm='YES';zerrhm='*'\n   zerrlm='Sure it is BMS?'\n   address ispexec \"setmsg msg(isrz002)\"\n   exit\n   end\nreturn\n\n\n/*--------------------------------------------------------------------*/\n/* Desc.: populate_dyn                                                */\n/* Parms: _______ ____________________________________________________*/\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\npopulate_dyn:\nline=''\ndyn.  =''; dyn =''\nsdyn. =''; sdyn=''\ndatain='08'x;dataout='09'x\n\n_mon=ACEEMON(Z_WINTTL,'Parsing   Source',)\ndo i = 1 to bms.0\n   if left(bms.i,1) = '*' then iterate i\n\n   sigue = substr(bms.i,72,1) = ' '\n   bms.i = left(bms.i,71)   /* ignorar la ultima */\n\n   p = pos(\"DFHMDF\",bms.i)\n   if p > 0 then line = substr(bms.i,p+7)\n   if line = '' then iterate\n   if p=0 then line = line || substr(bms.i,16)\n   if \u00acsigue then iterate\n\n    /*--------------------------*/\n    /* calcular las coordenadas */\n    /*--------------------------*/\n   parse var line 'POS=(' x1 ',' x2 ')' .\n   x1=format(x1)\n   x2=format(x2)\n   if x1 = '' | x2 = '' then iterate\n\n    /*--------------------------*/\n    /* calculate length         */\n    /*--------------------------*/\n   parse var line 'LENGTH=' long ',' .\n\n    /*--------------------------*/\n    /* determine INITIAL        */\n    /*--------------------------*/\n   parse var line \"INITIAL='\" initial \"'\"\n\n   if initial\u00ac='' then dyn.x1=overlay(initial,dyn.x1,x2)\n   if pos('UNPROT',line)>0 then\n      dyn.x1=overlay(datain||copies('_',long)||dataout,dyn.x1,x2-1)\n\n   if option='P' then do\n      parse var line 'COLOR=' color ','\n      select\n         when color='BLUE'      then color='01'\n         when color='RED'       then color='03'\n         when color='PINK'      then color='07'\n         when color='GREEN'     then color='04'\n         when color='TURQUOISE' then color='05'\n         when color='YELLOW'    then color='06'\n         when color='NEUTRAL'   then color='02'\n         otherwise                   color='01'\n         end\n\n      parse var line 'HILIGHT=' hilight ','\n      select\n         when hilight='REVERSE'   then color=overlay('1',color,1)\n         when hilight='UNDERLINE' then color=overlay('2',color,1)\n         when hilight='BLINK'     then color=overlay('4',color,1)\n         otherwise nop\n         end\n\n      if initial='' & left(color,1)='0' then color=overlay('2',color,1)\n\n      interpret \"color='\"left(color,2)\"'x\"\n      sdyn.x1=overlay(copies(color,long),sdyn.x1,x2)\n      end\n\n   line = ''\n   end i\ndrop bms.\nreturn\n\n/*--------------------------------------------------------------------*/\n/* Desc.: show_dyn                                                    */\n/* Parms: _______ ____________________________________________________*/\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\nshow_dyn:\n\nif option='P' then do\n   dyn=''\n   do i=1 to x1\n      dyn =dyn ||left(dyn.i ,80)\n      sdyn=sdyn||left(sdyn.i,80)\n      end i\n\n   address ispexec \"display panel(acepbms)\"\n   end\nelse do /* for compatibility ;)  */\n   say copies('_',79)\n   do i=1 to x1\n      dyn.i=translate(dyn.i,'aeiou','\u00e1\u00e9\u00ed\u00f3\u00fa')\n      say dyn.i\n      end i\n   say copies('_',79)\n   end\nreturn\n\n/*--------------------------------------------------------------------*/\n/* Desc.: finish                                                      */\n/* Parms: _______ ____________________________________________________*/\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\nfinish:\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ACEEFRC": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x19\\x01\\x040\\x9f\\x01\\x040\\x9f\\x10C\\x00\\x9f\\x00\\x9f\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2004-11-04T00:00:00", "modifydate": "2004-11-04T10:43:19", "lines": 159, "newlines": 159, "modlines": 0, "user": "ACEVEDO"}, "text": "/*>Rexx --------------------------------------------------------------*/\n/*                                                                    */\n/* ACEEFRC: ForeGround Rexx Compilation                               */\n/*                                                                    */\n/*--------------------------------------------------------------------*/\n/* Other objects: ACEEMON Monitor utility                             */\n/*--------------------------------------------------------------------*/\n/* Changes:2002/12/13 Acevedo First Development                       */\n/*         2002/10/17 Acevedo Setting NOSOURCE to reduce output       */\n/*         2003/01/23 Acevedo SAVE Before executing                   */\n/*--------------------------------------------------------------------*/\n\naddress isredit\n\"MACRO NOPROCESS\"\n\ncall start\ncall Compilation\ncall process_output\ncall finish\n\n/*--------------------------------------------------------------------*/\n/* Desc.: start                                                       */\n/* Parms: _______ ____________________________________________________*/\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\nstart:\nz_winttl='ForeGround Rexx Compiler'\n\n_mon=ACEEMON(Z_WINTTL,'Validating First Line',)\n\"(member)  = member\"\n\"(library) = dataset\"\n\n\"(line) = line 1\"\nif pos('REXX',translate(line))=0 then do\n   zerrsm='';zerralrm='yes';zerrhm='*'\n   zerrlm='               First Line should contain the word REXX'\n   address ispexec \"setmsg msg(isrz002)\"\n\n   call msg_line_after 0 zerrlm\n   exit 4\n   end\n\n\"recovery on\"\n\"hi auto\"\n\"save\"\n\nhlq='your-hlq'\nllq='your-llq'\nhlq=userid()\nllq='temp'\ndsn_temp=hlq'.'userid()'.'llq\nreturn\n\n\n/*--------------------------------------------------------------------*/\n/* Desc.: Compilation                                                 */\n/* Parms: _______ ____________________________________________________*/\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\nCompilation:\nx=msg(\"OFF\")\naddress tso \"delete '\"dsn_temp\"'\"\n\naddress tso \"alloc fi(sysin)  da('\"library\"(\"member\")') shr reuse \"\naddress tso \"alloc fi(systerm)  dummy reuse \"\naddress tso \"alloc fi(syspunch) dummy reuse \"\naddress tso \"alloc fi(syscexec) dummy reuse \"\naddress tso \"alloc fi(sysdump)  dummy reuse \"\naddress tso \"alloc fi(sysprint) da('\"dsn_temp\"') new reuse\"\n/* \"alloc fi(SYSEXEC)  da('REXX.V1R3M0.SFANLMD') shr reuse \" */\n\nos=\"NOCEXEC SL NOSOURCE\"\nos=strip(os,'B')\n_mon=ACEEMON(Z_WINTTL,'Invoking Compiler....',)\naddress linkmvs 'REXXCOMP OS'\n\nrc_rexx=rc\nselect\n   when rc=0  then txt='No messages or only informational messages'\n   when rc=4  then txt='Warning'\n   when rc=8  then txt='Error'\n   when rc=12 then txt='Severe error'\n   when rc=16 then txt='Terminating error'\n   otherwise       txt='ooooooops'\n   end\n_mon=ACEEMON(Z_WINTTL,'Return Code:'rc_rexx'('txt')' )\n\naddress tso \"free (sysin,systerm,syspunch,syscexec,sysdump,sysprint)\"\nreturn\n\n/*--------------------------------------------------------------------*/\n/* Desc.: process_output                                              */\n/* Parms: _______ ____________________________________________________*/\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\nprocess_output:\n_mon=ACEEMON(Z_WINTTL,'Processing Output' )\n\naddress tso \"alloc fi(aceffrc) dsn('\"dsn_temp\"') shr reuse\"\naddress tso \"execio * diskr aceffrc(stem frc.\"\naddress tso \"execio 0 diskr aceffrc(finis\"\naddress tso \"free fi(aceffrc)\"\naddress tso \"delete '\"dsn_temp\"'\"\n\n\"res\"\n\"exclude all\"\nlinenum=0\nn_msg=0\n\ndo i=1 to frc.0 while(pos('===> Source Listing',frc.i)=0)\n   _mon=ACEEMON(Z_WINTTL,'Processing' i 'of' frc.0)\n   end i\n\ndo i=i to frc.0 while(pos('===> Compilation Statistics',frc.i)=0)\n   _mon=ACEEMON(Z_WINTTL,'Processing' i 'of' frc.0)\n   if substr(frc.i,2,3)='+++' then do\n      \"locate\" linenum\n      n_msg=n_msg+1\n\n      call msg_line_after linenum frc.i\n      B4=i-1\n      call msg_line_after linenum substr(frc.B4,22)\n      end\n   else do\n      number=substr(frc.i,13,6)\n      number=strip(number)\n      if datatype(number)='NUM' then linenum=number\n      end\n   end i\ndrop frc.\n\"locate\" 0\nreturn\n\n/*--------------------------------------------------------------------*/\n/* Desc.: msg_line_after                                              */\n/*        include line in source                                      */\n/* Parms: LINEN   LINE NUMBER                                         */\n/*        TEXT    TEXT TO SHOW                                        */\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\nmsg_line_after: PARSE arg LINEN TEXT\ntext= translate(text,'7f'x,'7d'x)\n\"line_after\" LINEN \"= msgline '\"text\"'\"\nreturn\n\n/*--------------------------------------------------------------------*/\n/* Desc.: finish                                                      */\n/* Parms: _______ ____________________________________________________*/\n/* Retrn: _______ ____________________________________________________*/\n/*--------------------------------------------------------------------*/\nfinish:\nif n_msg=0 then do\n   \"res\"\n   zedsmsg = 'No Messages'\n   end\nelse\n   zedsmsg = n_msg 'Messages'\naddress ispexec \"setmsg msg(isrz001)\"\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ACEEFRT": {"ttr": 536, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x040\\x8f\\x01\\x040\\x8f\\x10\\x03\\x00/\\x00/\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-03T00:00:00", "modifydate": "2004-11-03T10:03:25", "lines": 47, "newlines": 47, "modlines": 0, "user": "ACEVEDO"}, "text": "/*>Rexx --------------------------------------------------------------*/\n/*                                                                    */\n/* ACEEFRC: ForeGround Rexx Testing                                   */\n/*                                                                    */\n/*--------------------------------------------------------------------*/\n/* Parameters   :                                                     */\n/*--------------------------------------------------------------------*/\n/* Other objects:                                                     */\n/*--------------------------------------------------------------------*/\n/* Changes:2000/01/15 Acevedo First Development                       */\n/*--------------------------------------------------------------------*/\n\nstart:\ncall on halt\nsignal on syntax\nsignal on error\nsignal on failure\nrc=0\n\nsay 'Input  :';parse pull cmd\n\ndo while(translate(cmd)\u00ac= '')\n   say 'Output :'\n   interpret cmd\n   if translate(word(cmd,1))\u00ac='SAY' then say '(rc='rc')'\n\n   say 'Input  :';parse pull cmd\n   end\n\nsay 'Bye'\nexit\n\n/*-------------------------------------------------------------------*/\n/*>Proc: syntax                                                      */\n/*-------------------------------------------------------------------*/\nsyntax:\nerror:\nfailure:\nsay '-Return Code:' rc\nsay '-Description:' errortext(rc)\nsignal start\n\n/*-------------------------------------------------------------------*/\n/*>Proc: halt                                                        */\n/*-------------------------------------------------------------------*/\nhalt: procedure\nexit 0\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ACEEMON": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x19\\x01\\x040\\x9f\\x01\\x040\\x9f\\x10C\\x00<\\x00<\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2004-11-04T00:00:00", "modifydate": "2004-11-04T10:43:19", "lines": 60, "newlines": 60, "modlines": 0, "user": "ACEVEDO"}, "text": "/*>Rexx --------------------------------------------------------------*/\n/*                                                                    */\n/* ACEEMON: Monitor Utility FUNCTION                                  */\n/*          The panel has a row of 40 columns to display text.        */\n/*  ================================================================  */\n/*  BY <FUNCTION> I MEAN IT SHOULD BE CALLED/INVOKED BY ANOTHER EXEC  */\n/*  ================================================================  */\n/*--------------------------------------------------------------------*/\n/*                                                                    */\n/* Sintaxis: _mon=ACEEMON('Panel Title','Text to show',Color)         */\n/*                                                                    */\n/*--------------------------------------------------------------------*/\n/*                                                                    */\n/*  --------                                                          */\n/*  EXAMPLES:                                                         */\n/*  --------                                                          */\n/*     _mon=ACEEMON('Reading Catalog','Processing Entry n','G')       */\n/*     _mon=ACEEMON('ForeGround Rexx Compiler','Processing Output')   */\n/*                                                                    */\n/*       Execs ACEEFRC and ACEEBMS invoke it                          */\n/*                                                                    */\n/*--------------------------------------------------------------------*/\n/* Parameters: TITLE Panel title    (zwinttl)                         */\n/*             TEXT  text to show   (max 40 chars)                    */\n/*             COLOR text color     (G-reen B-lue R-ed W-hite P-ink)  */\n/*--------------------------------------------------------------------*/\n/* Other objects: ACEPMON Utility Panel                               */\n/*--------------------------------------------------------------------*/\n/* Changes:2002/12/13 Acevedo First Development                       */\n/*--------------------------------------------------------------------*/\n\ntitle=arg(1)\ntext =arg(2)\ncolor=arg(3)\n\nif sysvar('sysenv') = 'BACK' then do\n   say time() text\n   return\n   end\n\ndyn=' 'text\n\nselect\n   when color='G' then w_color='04'x\n   when color='B' then w_color='00'x\n   when color='R' then w_color='03'x\n   when color='W' then w_color='12'x\n   when color='P' then w_color='17'x\n   otherwise           w_color='04'x\n   end\nsdyn=copies(w_color,40*1)\n\n\nzwinttl=TITLE\naddress ispexec \"control display lock     \"\naddress ispexec \"addpop row(14) column(15)\"\naddress ispexec \"display panel(ACEPMON)   \"\naddress ispexec \"control display restore  \"\nzwinttl=''\nreturn 0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ACEESCD": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x040\\x8f\\x01\\x040\\x8f\\x10\\x03\\x00\\x1b\\x00\\x1b\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-03T00:00:00", "modifydate": "2004-11-03T10:03:25", "lines": 27, "newlines": 27, "modlines": 0, "user": "ACEVEDO"}, "text": "/*>Rexx --------------------------------------------------------------*/\n/*                                                                    */\n/* ACEESCD: SqlCode Description                                       */\n/*                                                                    */\n/*        Just invoke DSNTIAR                                         */\n/*--------------------------------------------------------------------*/\n/* Parameters   : SQLCODE                                             */\n/*--------------------------------------------------------------------*/\n/* Other objects:                                                     */\n/*--------------------------------------------------------------------*/\n/* Changes:                   First Development                       */\n/*--------------------------------------------------------------------*/\n\narg sqlcode\n\nsqlc =d2x(sqlcode,8)\nsqlc =x2c(sqlc)\nsqlca='SQLCA   'x2c(00000088)sqlc||x2c(0000)||copies(' ',78)\nsqlca=sqlca||copies(x2c(00),24)copies(' ',16)\ntiar_msg= x2c(0190)copies(' ',400)\ntext_len= x2c(00000050)\naddress attchpgm 'dsntiar sqlca tiar_msg text_len'\n\nzerralrm='NO';zerrsm='';zerrhm='*'\nzerrlm  = strip(substr(tiar_msg,4,400))\naddress ispexec \"setmsg msg(isrz002)\"\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ACEETIA": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x19\\x01\\x040\\x9f\\x01\\x040\\x9f\\x10C\\x00D\\x00D\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-11-04T00:00:00", "modifydate": "2004-11-04T10:43:19", "lines": 68, "newlines": 68, "modlines": 0, "user": "ACEVEDO"}, "text": "/*>Rexx --------------------------------------------------------------*/\n/*                                                                    */\n/* ACEETIA: TSO ISPF ALLOCATIONS                                      */\n/*                                                                    */\n/*          Add as many environments as needed ]]]                    */\n/*--------------------------------------------------------------------*/\n/* Parameters   : opt - Install / UnInstall                           */\n/*              : env - environment                                   */\n/*--------------------------------------------------------------------*/\n/* Other objects:                                                     */\n/*--------------------------------------------------------------------*/\n/* Changes:2002/12/13 Acevedo First Development                       */\n/*         2002/10/17 Acevedo Setting NOSOURCE to reduce output       */\n/*         2003/01/23 Acevedo SAVE Before executing                   */\n/*--------------------------------------------------------------------*/\narg opt env\nopt=strip(translate(opt))\n\nselect\n   when opt='U' then do\n      /*----------------------------------------------*/\n      /*---------------- Uninstall -------------------*/\n      /*----------------------------------------------*/\n      address ispexec \"libdef ispllib\"\n      address ispexec \"libdef ispplib\"\n      address ispexec \"libdef ispslib\"\n\n      address tso     \"altlib deactivate application(clist)\"\n      address tso     \"altlib deactivate application(exec)\"\n      end\n\n   /*----------------------------------------------*/\n   /*----------------   Install -------------------*/\n   /*----------------------------------------------*/\n   when opt='I' then do\n      select\n         when env='a' then yourlibrary='environmentA'\n         when env='b' then yourlibrary='environmentB'\n         when env='b' then yourlibrary='environmentC'\n         otherwise do\n            zerrsm='';zerralrm='YES';zerrhm='*'\n            zerrlm='Wrong Environment <'env'>'\n            address ispexec \"setmsg msg(isrz002)\"\n            exit\n            end\n         end\n\n      address ispexec \"libdef ispllib  dataset id('\"yourlibrary\"')\"\n      address ispexec \"libdef ispmlib  dataset id('\"yourlibrary\"')\"\n      address ispexec \"libdef ispplib  dataset id('\"yourlibrary\"')\"\n      address ispexec \"libdef ispslib  dataset id('\"yourlibrary\"')\"\n      address ispexec \"libdef isptlib  dataset id('\"yourlibrary\"')\"\n      address ispexec \"libdef isptabl  dataset id('\"yourlibrary\"')\"\n\n      address tso \"altlib activate application(CLIST)\n                            dsname('\"yourlibrary\"')\"\n      address tso \"altlib activate application(EXEC)\n                            dsname('\"yourlibrary\"')\"\n      end\n   otherwise do\n      zerrsm='';zerralrm='YES';zerrhm='*'\n      zerrlm='Wrong Option, Valids I-Install, U-Uninstall'\n      address ispexec \"setmsg msg(isrz002)\"\n      exit\n      end\n   end\n\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ACEEUSR": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x040\\x8f\\x01\\x040\\x8f\\x10\\x03\\x00!\\x00!\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-03T00:00:00", "modifydate": "2004-11-03T10:03:25", "lines": 33, "newlines": 33, "modlines": 0, "user": "ACEVEDO"}, "text": "/*>Rexx --------------------------------------------------------------*/\n/*                                                                    */\n/* ACEEUSR: User Data                                                 */\n/*          take a look a MVS DATA AREAS and RACF DATA AREAS          */\n/*                                                                    */\n/*          I found it (out there]) in Cobol but only getting the     */\n/*          User Name.                                                */\n/*--------------------------------------------------------------------*/\n/* Parameters   :                                                     */\n/*--------------------------------------------------------------------*/\n/* Other objects:                                                     */\n/*--------------------------------------------------------------------*/\n/* Changes:2002/03/02 Acevedo First Development                       */\n/*         2002/03/03 Acevedo Added group and terminal                */\n/*--------------------------------------------------------------------*/\n\nascb = storage(224,4)                             /* psaaold  */\nasxb = storage(d2x(c2d(ascb)+108),4)              /* ascbasxb */\nasxbuser= strip(storage(d2x(c2d(asxb)+192),8))    /* asxbuser */\n\n                                                  /*___racf___*/\nacee = storage(d2x(c2d(asxb)+200),4)              /* acee     */\naceegrpn=strip(storage(d2x(c2d(acee)+30),8))      /* aceegrpn */\naceetrid=storage(d2x(c2d(acee)+64),8)             /* aceetrid */\n\nunam = storage(d2x(c2d(acee)+100),4)              /* aceeunam */\nuser_name=strip(storage(d2x(c2d(unam)+1),24))\n\nSAY 'USER      :' asxbuser\nSAY 'RACF GROUP:' aceegrpn\nSAY 'TERMINAL  :' aceetrid\nSAY 'USER NAME :' user_name\nexit\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ACEEVAR": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00%\\x01\\x040\\x8f\\x01\\x040\\x8f\\x10\\x03\\x00\\xbb\\x00\\xbb\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-11-03T00:00:00", "modifydate": "2004-11-03T10:03:25", "lines": 187, "newlines": 187, "modlines": 0, "user": "ACEVEDO"}, "text": "/*>Rexx --------------------------------------------------------------*/\n/*                                                                    */\n/* ACEEVAR: SYSTEM VARS                                               */\n/*                                                                    */\n/*--------------------------------------------------------------------*/\n/* Parameters   : opt                                                 */\n/*--------------------------------------------------------------------*/\n/* Other objects:                                                     */\n/*--------------------------------------------------------------------*/\n/* Changes:2002/12/02 ACEVEDO First Development                       */\n/*         2002/12/16 ACEVEDO Include CUA attributes                  */\n/*--------------------------------------------------------------------*/\narg opt\nopt=strip(translate(opt))\n\nselect\n              /* --- */\n   when abbrev('SYSVAR',opt,1) then do\n              /* --- */\n      say \"_____________________SYSVAR_________________________\"\n      say \"  User:\"\n      say \"  ---- \"\n      say \"    syspref---\"sysvar(syspref)\n      say \"    sysproc---\"sysvar(sysproc)\n      say \"    sysuid----\"sysvar(sysuid)\n      say \"  Terminal:\"\n      say \"  -------- \"\n      say \"    syslterm--\"sysvar(syslterm)\n      say \"    syswterm--\"sysvar(syswterm)\n      say \"  Exec:\"\n      say \"  ---- \"\n      say \"    sysenv----\"sysvar(sysenv)\n      say \"    sysicmd---\"sysvar(\"sysicmd\")\n      say \"    sysispf---\"sysvar(sysispf)\n      say \"    sysnest---\"sysvar(sysnest)\n      say \"    syspcmd---\"sysvar(syspcmd)\n      say \"    sysscmd---\"sysvar(sysscmd)\n      say \"  System:\"\n      say \"  ------\"\n      say \"    syscpu----\"sysvar(syscpu)\n      say \"    syshsm----\"sysvar(syshsm)\n      say \"    syslracf--\"sysvar(syslracf)\n      say \"    sysracf---\"sysvar(sysracf)\n      say \"    syssrv----\"sysvar(syssrv)\n      say \"    systsoe---\"sysvar(systsoe)\n\n      say \"    sysjes----\"sysvar(sysjes)\n      say \"    sysnode---\"sysvar(sysnode)\n      say \"    systermid-\"sysvar(systermid)\n\n      say \"  Language:\"\n      say \"  --------\"\n      say \"    sysdterm--\"sysvar(sysdterm)\n      say \"    syskterm--\"sysvar(syskterm)\n      say \"    sysplang--\"sysvar(sysplang)\n      say \"    sysslang--\"sysvar(sysslang)\n      say \" \"\n\n      say \"no-SYSVAR:\"\n      x=syscpus(cpus.)\n      do i = 1 to cpus.0\n         say \"  syscpus.\"i\" ... \"cpus.i\n         end i\n      end /* sys */\n\n              /* --- */\n   when abbrev('MVSVAR',opt,1) then do\n              /* --- */\n      say \"_____________________MVSVAR_________________________\"\n      say \"symdef,sysclone---\"mvsvar('symdef','sysclone')\n      say \"symdef,sysname----\"mvsvar('symdef','sysname')\n      say \"sysappclu---------\"mvsvar('sysappclu')\n      say \"sysclone----------\"mvsvar('sysclone')\n      say \"sysdfp------------\"mvsvar('sysdfp')\n      say \"sysmvs------------\"mvsvar('sysmvs')\n      say \"sysname-----------\"mvsvar('sysname')\n      say \"sysplex-----------\"mvsvar('sysplex')\n      say \"sysseclab---------\"mvsvar('sysseclab')\n      say \"syssmfid----------\"mvsvar('syssmfid')\n      say \"syssms------------\"mvsvar('syssms')\n      end /*mvs */\n\n             /* ---- */\n   when abbrev('ISPF',opt,1) then do\n             /* ---- */\n\n      say \"______________________ISPF__________________________\"\n      address ispexec\n      \"vget zapplid\" ;say \"zapplid----\"zapplid\n      \"vget zaspect\" ;say \"zaspect----\"zaspect\n      \"vget zcolors\" ;say \"zcolors----\"zcolors\n      \"vget zdate  \" ;say \"zdate------\"zdate\n      \"vget zdatef \" ;say \"zdatef-----\"zdatef\n      \"vget zdatefd\" ;say \"zdatefd----\"zdatefd\n      \"vget zdatestd\";say \"zdatestd---\"zdatestd\n      \"vget zday \"   ;say \"zday-------\"zday\n      \"vget zdbcs\"   ;say \"zdbcs------\"zdbcs\n      \"vget zdecs\"   ;say \"zdecs------\"zdecs\n      \"vget zdel \"   ;say \"zdel-------\"zdel\n      \"vget zdevnam\" ;say \"zdevnam----\"zdevnam\n      \"vget zenvir\"  ;say \"zenvir-----\"zenvir\n      \"vget zfamprt\" ;say \"zfamprt----\"zfamprt\n      \"vget zhilite\" ;say \"zhilite----\"zhilite\n      \"vget zispfos \";say \"zispfos----\"zispfos\n      \"vget zispfrc\" ;say \"zispfrc----\"zispfrc\n      \"vget zjdate \" ;say \"zjdate-----\"zjdate\n      \"vget zj4date\" ;say \"zj4date----\"zj4date\n      \"vget zkeys\"   ;say \"zkeys------\"zkeys\n      \"vget zlang\"   ;say \"zlang------\"zlang\n      \"vget zlogon\"  ;say \"zlogon-----\"zlogon\n      \"vget zmonth \" ;say \"zmonth-----\"zmonth\n      \"vget zpfctl\"  ;say \"zpfctl-----\"zpfctl\n      \"vget zpffmt\"  ;say \"zpffmt-----\"zpffmt\n      \"vget zpfset\"  ;say \"zpfset-----\"zpfset\n      \"vget zpfshow\" ;say \"zpfshow----\"zpfshow\n      \"vget zplace\"  ;say \"zplace-----\"zplace\n      \"vget zprefix\" ;say \"zprefix----\"zprefix\n      \"vget zprofapp\";say \"zprofapp---\"zprofapp\n      \"vget zscreen\" ;say \"zscreen----\"zscreen\n      \"vget zscreend\";say \"zscreend---\"zscreend\n      \"vget zscreenw\";say \"zscreenw---\"zscreenw\n      \"vget zscrmaxd\";say \"zscrmaxd---\"zscrmaxd\n      \"vget zscrmaxw\";say \"zscrmaxw---\"zscrmaxw\n      \"vget zsctpref\";say \"zsctpref---\"zsctpref\n      \"vget zsplit\"  ;say \"zsplit-----\"zsplit\n      \"vget zsysid\"  ;say \"zsysid-----\"zsysid\n      \"vget ztempf\"  ;say \"ztempf-----\"ztempf\n      \"vget ztempn\"  ;say \"ztempn-----\"ztempn\n      \"vget zterm\"   ;say \"zterm------\"zterm\n      \"vget zths    \";say \"zths-------\"zths\n      \"vget ztime  \" ;say \"ztime------\"ztime\n      \"vget zts     \";say \"zts--------\"zts\n      \"vget zuser\"   ;say \"zuser------\"zuser\n      \"vget zyear  \" ;say \"zyear------\"zyear\n\n      /*pf keys */\n      \"vget zkeys\";say \"zkeys------\"zkeys\n      do i = 1 to zkeys\n         if i < 10 then i='0'i\n\n         \"vget zpf\"i\n         \"vget zpfl\"i\n         interpret \"val=zpf\"i\n         interpret \"label=zpfl\"i\n         if label <> \"\" then label = \"- \"label\n         say \" zpf\"i\" ------\"val label\n         end i\n\n      end /* ispf */\n\n             /* ---- */\n   when abbrev('CUA',opt,1) then do\n             /* ---- */\n      say \"____________________CUA attributes__________________\"\n      say \"AB    - AB unselected choice      \"\n      say \"ABSL  - AB separator line         \"\n      say \"CEF   - Choice entry field        \"\n      say \"CH    - Column heading            \"\n      say \"CT    - Caution text              \"\n      say \"DT    - Descriptive text          \"\n      say \"EE    - Error emphasis            \"\n      say \"ET    - Emphasized text           \"\n      say \"FP    - Field prompt              \"\n      say \"LEF   - List entry field          \"\n      say \"LI    - List items                \"\n      say \"LID   - List item description     \"\n      say \"NEF   - Normal entry field        \"\n      say \"NT    - Normal text               \"\n      say \"PIN   - Panel instruction         \"\n      say \"PS    - Point-and-shoot           \"\n      say \"PT    - Panel title               \"\n      say \"RP    - Reference phrase          \"\n      say \"SAC   - Sel. available choice     \"\n      say \"SI    - Scroll information        \"\n      say \"SUC   - Sel. unavailable choice   \"\n      say \"VOI   - Variable output info.     \"\n      say \"WASL  - Work area sep. line       \"\n      say \"WT    - Warning text              \"\n      end /* panel */\n   otherwise do\n      zedsmsg=''\n      zedlmsg='Valid Option: ISPF, SYSVAR, MVSVAR and CUA'\n      address ispexec \"setmsg msg(isrz001)\"\n      exit 12\n      end\n   end /* ispf */\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ACEPBMS": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00V\\x01\\x040\\x7f\\x01\\x040\\x7f\\x18&\\x00T\\x00T\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-02T00:00:00", "modifydate": "2004-11-02T18:26:56", "lines": 84, "newlines": 84, "modlines": 0, "user": "ACEVEDO"}, "text": ")ATTR\n/* ACEPBMS - DYNAMIC PANEL OF 80X24    */\n< TYPE(INPUT) INTENS(HIGH) COLOR(GREEN)  JUST(ASIS) CAPS(ON)\n$ TYPE(TEXT)  INTENS(LOW)  COLOR(BLUE)   JUST(ASIS) CAPS(ON)\n                                                    HILITE(REVERSE)\n\\ TYPE(TEXT)  INTENS(HIGH) COLOR(TURQ)   JUST(ASIS) CAPS(ON)\n                                                    HILITE(REVERSE)\n! TYPE(TEXT)  INTENS(HIGH) COLOR(GREEN)  JUST(ASIS) CAPS(ON)\n\u00a2 TYPE(TEXT)  INTENS(HIGH) COLOR(YELLOW)            SKIP(ON)\n| AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)\n   08 TYPE(DATAIN) COLOR(RED)\n   09 TYPE(DATAOUT) COLOR(BLUE)\n\n   01 TYPE(CHAR) COLOR(BLUE)\n   02 TYPE(CHAR) COLOR(WHITE)\n   03 TYPE(CHAR) COLOR(RED)\n   04 TYPE(CHAR) COLOR(GREEN)\n   05 TYPE(CHAR) COLOR(TURQ)\n   06 TYPE(CHAR) COLOR(YELLOW)\n   07 TYPE(CHAR) COLOR(PINK)\n\n   11 TYPE(CHAR) COLOR(BLUE)   HILITE(REVERSE)\n   12 TYPE(CHAR) COLOR(WHITE)  HILITE(REVERSE)\n   13 TYPE(CHAR) COLOR(RED)    HILITE(REVERSE)\n   14 TYPE(CHAR) COLOR(GREEN)  HILITE(REVERSE)\n   15 TYPE(CHAR) COLOR(TURQ)   HILITE(REVERSE)\n   16 TYPE(CHAR) COLOR(YELLOW) HILITE(REVERSE)\n   17 TYPE(CHAR) COLOR(PINK)   HILITE(REVERSE)\n\n   21 TYPE(CHAR) COLOR(BLUE)   HILITE(USCORE)\n   22 TYPE(CHAR) COLOR(WHITE)  HILITE(USCORE)\n   23 TYPE(CHAR) COLOR(RED)    HILITE(USCORE)\n   24 TYPE(CHAR) COLOR(GREEN)  HILITE(USCORE)\n   25 TYPE(CHAR) COLOR(TURQ)   HILITE(USCORE)\n   26 TYPE(CHAR) COLOR(YELLOW) HILITE(USCORE)\n   27 TYPE(CHAR) COLOR(PINK)   HILITE(USCORE)\n\n   41 TYPE(CHAR) COLOR(BLUE)   HILITE(BLINK)\n   42 TYPE(CHAR) COLOR(WHITE)  HILITE(BLINK)\n   43 TYPE(CHAR) COLOR(RED)    HILITE(BLINK)\n   44 TYPE(CHAR) COLOR(GREEN)  HILITE(BLINK)\n   45 TYPE(CHAR) COLOR(TURQ)   HILITE(BLINK)\n   46 TYPE(CHAR) COLOR(YELLOW) HILITE(BLINK)\n   47 TYPE(CHAR) COLOR(PINK)   HILITE(BLINK)\n\n   81 TYPE(CHAR) COLOR(BLUE)                           GE(ON)\n   82 TYPE(CHAR) COLOR(WHITE)                          GE(ON)\n   83 TYPE(CHAR) COLOR(RED)                            GE(ON)\n   84 TYPE(CHAR) COLOR(GREEN)                          GE(ON)\n   85 TYPE(CHAR) COLOR(TURQ)                           GE(ON)\n   86 TYPE(CHAR) COLOR(YELLOW)                         GE(ON)\n   87 TYPE(CHAR) COLOR(PINK)                           GE(ON)\n   91 TYPE(CHAR) COLOR(BLUE)   HILITE(REVERSE)         GE(ON)\n   92 TYPE(CHAR) COLOR(WHITE)  HILITE(REVERSE)         GE(ON)\n   93 TYPE(CHAR) COLOR(RED)    HILITE(REVERSE)         GE(ON)\n   94 TYPE(CHAR) COLOR(GREEN)  HILITE(REVERSE)         GE(ON)\n   95 TYPE(CHAR) COLOR(TURQ)   HILITE(REVERSE)         GE(ON)\n   96 TYPE(CHAR) COLOR(YELLOW) HILITE(REVERSE)         GE(ON)\n   97 TYPE(CHAR) COLOR(PINK)   HILITE(REVERSE)         GE(ON)\n   A1 TYPE(CHAR) COLOR(BLUE)   HILITE(USCORE)          GE(ON)\n   A2 TYPE(CHAR) COLOR(WHITE)  HILITE(USCORE)          GE(ON)\n   A3 TYPE(CHAR) COLOR(RED)    HILITE(USCORE)          GE(ON)\n   A4 TYPE(CHAR) COLOR(GREEN)  HILITE(USCORE)          GE(ON)\n   A5 TYPE(CHAR) COLOR(TURQ)   HILITE(USCORE)          GE(ON)\n   A6 TYPE(CHAR) COLOR(YELLOW) HILITE(USCORE)          GE(ON)\n   A7 TYPE(CHAR) COLOR(PINK)   HILITE(USCORE)          GE(ON)\n   C1 TYPE(CHAR) COLOR(BLUE)   HILITE(BLINK)           GE(ON)\n   C2 TYPE(CHAR) COLOR(WHITE)  HILITE(BLINK)           GE(ON)\n   C3 TYPE(CHAR) COLOR(RED)    HILITE(BLINK)           GE(ON)\n   C4 TYPE(CHAR) COLOR(GREEN)  HILITE(BLINK)           GE(ON)\n   C5 TYPE(CHAR) COLOR(TURQ)   HILITE(BLINK)           GE(ON)\n   C6 TYPE(CHAR) COLOR(YELLOW) HILITE(BLINK)           GE(ON)\n   C7 TYPE(CHAR) COLOR(PINK)   HILITE(BLINK)           GE(ON)\n)BODY WINDOW(80,24)\n\n|DYN,SDYN                                                                      |\n)INIT\n)REINIT\n REFRESH(*)\n)PROC\n &CUR = .CURSOR\n &POS = .CSRPOS\n &PFP = .PFKEY\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ACEPMON": {"ttr": 784, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x040\\x7f\\x01\\x040\\x7f\\x17Q\\x00G\\x00G\\x00\\x00\\xc1\\xc3\\xc5\\xe5\\xc5\\xc4\\xd6@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-02T00:00:00", "modifydate": "2004-11-02T17:51:28", "lines": 71, "newlines": 71, "modlines": 0, "user": "ACEVEDO"}, "text": ")ATTR\n/* MONITOR       PANEL REFERENCED BY ACEEMON               */\n| AREA(DYNAMIC) SCROLL(ON) EXTEND(ON)\n   08 TYPE(DATAIN) COLOR(RED)\n   09 TYPE(DATAOUT) COLOR(BLUE)\n   01 TYPE(CHAR) COLOR(BLUE)\n   02 TYPE(CHAR) COLOR(WHITE)\n   03 TYPE(CHAR) COLOR(RED)\n   04 TYPE(CHAR) COLOR(GREEN)\n   05 TYPE(CHAR) COLOR(TURQ)\n   06 TYPE(CHAR) COLOR(YELLOW)\n   07 TYPE(CHAR) COLOR(PINK)\n   11 TYPE(CHAR) COLOR(BLUE)   HILITE(REVERSE)\n   12 TYPE(CHAR) COLOR(WHITE)  HILITE(REVERSE)\n   13 TYPE(CHAR) COLOR(RED)    HILITE(REVERSE)\n   14 TYPE(CHAR) COLOR(GREEN)  HILITE(REVERSE)\n   15 TYPE(CHAR) COLOR(TURQ)   HILITE(REVERSE)\n   16 TYPE(CHAR) COLOR(YELLOW) HILITE(REVERSE)\n   17 TYPE(CHAR) COLOR(PINK)   HILITE(REVERSE)\n   21 TYPE(CHAR) COLOR(BLUE)   HILITE(USCORE)\n   22 TYPE(CHAR) COLOR(WHITE)  HILITE(USCORE)\n   23 TYPE(CHAR) COLOR(RED)    HILITE(USCORE)\n   24 TYPE(CHAR) COLOR(GREEN)  HILITE(USCORE)\n   25 TYPE(CHAR) COLOR(TURQ)   HILITE(USCORE)\n   26 TYPE(CHAR) COLOR(YELLOW) HILITE(USCORE)\n   27 TYPE(CHAR) COLOR(PINK)   HILITE(USCORE)\n   41 TYPE(CHAR) COLOR(BLUE)   HILITE(BLINK)\n   42 TYPE(CHAR) COLOR(WHITE)  HILITE(BLINK)\n   43 TYPE(CHAR) COLOR(RED)    HILITE(BLINK)\n   44 TYPE(CHAR) COLOR(GREEN)  HILITE(BLINK)\n   45 TYPE(CHAR) COLOR(TURQ)   HILITE(BLINK)\n   46 TYPE(CHAR) COLOR(YELLOW) HILITE(BLINK)\n   47 TYPE(CHAR) COLOR(PINK)   HILITE(BLINK)\n   81 TYPE(CHAR) COLOR(BLUE)                           GE(ON)\n   82 TYPE(CHAR) COLOR(WHITE)                          GE(ON)\n   83 TYPE(CHAR) COLOR(RED)                            GE(ON)\n   84 TYPE(CHAR) COLOR(GREEN)                          GE(ON)\n   85 TYPE(CHAR) COLOR(TURQ)                           GE(ON)\n   86 TYPE(CHAR) COLOR(YELLOW)                         GE(ON)\n   87 TYPE(CHAR) COLOR(PINK)                           GE(ON)\n   91 TYPE(CHAR) COLOR(BLUE)   HILITE(REVERSE)         GE(ON)\n   92 TYPE(CHAR) COLOR(WHITE)  HILITE(REVERSE)         GE(ON)\n   93 TYPE(CHAR) COLOR(RED)    HILITE(REVERSE)         GE(ON)\n   94 TYPE(CHAR) COLOR(GREEN)  HILITE(REVERSE)         GE(ON)\n   95 TYPE(CHAR) COLOR(TURQ)   HILITE(REVERSE)         GE(ON)\n   96 TYPE(CHAR) COLOR(YELLOW) HILITE(REVERSE)         GE(ON)\n   97 TYPE(CHAR) COLOR(PINK)   HILITE(REVERSE)         GE(ON)\n   A1 TYPE(CHAR) COLOR(BLUE)   HILITE(USCORE)          GE(ON)\n   A2 TYPE(CHAR) COLOR(WHITE)  HILITE(USCORE)          GE(ON)\n   A3 TYPE(CHAR) COLOR(RED)    HILITE(USCORE)          GE(ON)\n   A4 TYPE(CHAR) COLOR(GREEN)  HILITE(USCORE)          GE(ON)\n   A5 TYPE(CHAR) COLOR(TURQ)   HILITE(USCORE)          GE(ON)\n   A6 TYPE(CHAR) COLOR(YELLOW) HILITE(USCORE)          GE(ON)\n   A7 TYPE(CHAR) COLOR(PINK)   HILITE(USCORE)          GE(ON)\n   C1 TYPE(CHAR) COLOR(BLUE)   HILITE(BLINK)           GE(ON)\n   C2 TYPE(CHAR) COLOR(WHITE)  HILITE(BLINK)           GE(ON)\n   C3 TYPE(CHAR) COLOR(RED)    HILITE(BLINK)           GE(ON)\n   C4 TYPE(CHAR) COLOR(GREEN)  HILITE(BLINK)           GE(ON)\n   C5 TYPE(CHAR) COLOR(TURQ)   HILITE(BLINK)           GE(ON)\n   C6 TYPE(CHAR) COLOR(YELLOW) HILITE(BLINK)           GE(ON)\n   C7 TYPE(CHAR) COLOR(PINK)   HILITE(BLINK)           GE(ON)\n)BODY WINDOW(40,1)\n|DYN,SDYN                              |\n)INIT\n)REINIT\n REFRESH(*)\n)PROC\n &CUR = .CURSOR\n &POS = .CSRPOS\n &PFP = .PFKEY\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT695/FILE695.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT695", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}