/*>Rexx --------------------------------------------------------------*/
/*                                                                    */
/* ACEEVAR: SYSTEM VARS                                               */
/*                                                                    */
/*--------------------------------------------------------------------*/
/* Parameters   : opt                                                 */
/*--------------------------------------------------------------------*/
/* Other objects:                                                     */
/*--------------------------------------------------------------------*/
/* Changes:2002/12/02 ACEVEDO First Development                       */
/*         2002/12/16 ACEVEDO Include CUA attributes                  */
/*--------------------------------------------------------------------*/
arg opt
opt=strip(translate(opt))

select
              /* --- */
   when abbrev('SYSVAR',opt,1) then do
              /* --- */
      say "_____________________SYSVAR_________________________"
      say "  User:"
      say "  ---- "
      say "    syspref---"sysvar(syspref)
      say "    sysproc---"sysvar(sysproc)
      say "    sysuid----"sysvar(sysuid)
      say "  Terminal:"
      say "  -------- "
      say "    syslterm--"sysvar(syslterm)
      say "    syswterm--"sysvar(syswterm)
      say "  Exec:"
      say "  ---- "
      say "    sysenv----"sysvar(sysenv)
      say "    sysicmd---"sysvar("sysicmd")
      say "    sysispf---"sysvar(sysispf)
      say "    sysnest---"sysvar(sysnest)
      say "    syspcmd---"sysvar(syspcmd)
      say "    sysscmd---"sysvar(sysscmd)
      say "  System:"
      say "  ------"
      say "    syscpu----"sysvar(syscpu)
      say "    syshsm----"sysvar(syshsm)
      say "    syslracf--"sysvar(syslracf)
      say "    sysracf---"sysvar(sysracf)
      say "    syssrv----"sysvar(syssrv)
      say "    systsoe---"sysvar(systsoe)

      say "    sysjes----"sysvar(sysjes)
      say "    sysnode---"sysvar(sysnode)
      say "    systermid-"sysvar(systermid)

      say "  Language:"
      say "  --------"
      say "    sysdterm--"sysvar(sysdterm)
      say "    syskterm--"sysvar(syskterm)
      say "    sysplang--"sysvar(sysplang)
      say "    sysslang--"sysvar(sysslang)
      say " "

      say "no-SYSVAR:"
      x=syscpus(cpus.)
      do i = 1 to cpus.0
         say "  syscpus."i" ... "cpus.i
         end i
      end /* sys */

              /* --- */
   when abbrev('MVSVAR',opt,1) then do
              /* --- */
      say "_____________________MVSVAR_________________________"
      say "symdef,sysclone---"mvsvar('symdef','sysclone')
      say "symdef,sysname----"mvsvar('symdef','sysname')
      say "sysappclu---------"mvsvar('sysappclu')
      say "sysclone----------"mvsvar('sysclone')
      say "sysdfp------------"mvsvar('sysdfp')
      say "sysmvs------------"mvsvar('sysmvs')
      say "sysname-----------"mvsvar('sysname')
      say "sysplex-----------"mvsvar('sysplex')
      say "sysseclab---------"mvsvar('sysseclab')
      say "syssmfid----------"mvsvar('syssmfid')
      say "syssms------------"mvsvar('syssms')
      end /*mvs */

             /* ---- */
   when abbrev('ISPF',opt,1) then do
             /* ---- */

      say "______________________ISPF__________________________"
      address ispexec
      "vget zapplid" ;say "zapplid----"zapplid
      "vget zaspect" ;say "zaspect----"zaspect
      "vget zcolors" ;say "zcolors----"zcolors
      "vget zdate  " ;say "zdate------"zdate
      "vget zdatef " ;say "zdatef-----"zdatef
      "vget zdatefd" ;say "zdatefd----"zdatefd
      "vget zdatestd";say "zdatestd---"zdatestd
      "vget zday "   ;say "zday-------"zday
      "vget zdbcs"   ;say "zdbcs------"zdbcs
      "vget zdecs"   ;say "zdecs------"zdecs
      "vget zdel "   ;say "zdel-------"zdel
      "vget zdevnam" ;say "zdevnam----"zdevnam
      "vget zenvir"  ;say "zenvir-----"zenvir
      "vget zfamprt" ;say "zfamprt----"zfamprt
      "vget zhilite" ;say "zhilite----"zhilite
      "vget zispfos ";say "zispfos----"zispfos
      "vget zispfrc" ;say "zispfrc----"zispfrc
      "vget zjdate " ;say "zjdate-----"zjdate
      "vget zj4date" ;say "zj4date----"zj4date
      "vget zkeys"   ;say "zkeys------"zkeys
      "vget zlang"   ;say "zlang------"zlang
      "vget zlogon"  ;say "zlogon-----"zlogon
      "vget zmonth " ;say "zmonth-----"zmonth
      "vget zpfctl"  ;say "zpfctl-----"zpfctl
      "vget zpffmt"  ;say "zpffmt-----"zpffmt
      "vget zpfset"  ;say "zpfset-----"zpfset
      "vget zpfshow" ;say "zpfshow----"zpfshow
      "vget zplace"  ;say "zplace-----"zplace
      "vget zprefix" ;say "zprefix----"zprefix
      "vget zprofapp";say "zprofapp---"zprofapp
      "vget zscreen" ;say "zscreen----"zscreen
      "vget zscreend";say "zscreend---"zscreend
      "vget zscreenw";say "zscreenw---"zscreenw
      "vget zscrmaxd";say "zscrmaxd---"zscrmaxd
      "vget zscrmaxw";say "zscrmaxw---"zscrmaxw
      "vget zsctpref";say "zsctpref---"zsctpref
      "vget zsplit"  ;say "zsplit-----"zsplit
      "vget zsysid"  ;say "zsysid-----"zsysid
      "vget ztempf"  ;say "ztempf-----"ztempf
      "vget ztempn"  ;say "ztempn-----"ztempn
      "vget zterm"   ;say "zterm------"zterm
      "vget zths    ";say "zths-------"zths
      "vget ztime  " ;say "ztime------"ztime
      "vget zts     ";say "zts--------"zts
      "vget zuser"   ;say "zuser------"zuser
      "vget zyear  " ;say "zyear------"zyear

      /*pf keys */
      "vget zkeys";say "zkeys------"zkeys
      do i = 1 to zkeys
         if i < 10 then i='0'i

         "vget zpf"i
         "vget zpfl"i
         interpret "val=zpf"i
         interpret "label=zpfl"i
         if label <> "" then label = "- "label
         say " zpf"i" ------"val label
         end i

      end /* ispf */

             /* ---- */
   when abbrev('CUA',opt,1) then do
             /* ---- */
      say "____________________CUA attributes__________________"
      say "AB    - AB unselected choice      "
      say "ABSL  - AB separator line         "
      say "CEF   - Choice entry field        "
      say "CH    - Column heading            "
      say "CT    - Caution text              "
      say "DT    - Descriptive text          "
      say "EE    - Error emphasis            "
      say "ET    - Emphasized text           "
      say "FP    - Field prompt              "
      say "LEF   - List entry field          "
      say "LI    - List items                "
      say "LID   - List item description     "
      say "NEF   - Normal entry field        "
      say "NT    - Normal text               "
      say "PIN   - Panel instruction         "
      say "PS    - Point-and-shoot           "
      say "PT    - Panel title               "
      say "RP    - Reference phrase          "
      say "SAC   - Sel. available choice     "
      say "SI    - Scroll information        "
      say "SUC   - Sel. unavailable choice   "
      say "VOI   - Variable output info.     "
      say "WASL  - Work area sep. line       "
      say "WT    - Warning text              "
      end /* panel */
   otherwise do
      zedsmsg=''
      zedlmsg='Valid Option: ISPF, SYSVAR, MVSVAR and CUA'
      address ispexec "setmsg msg(isrz001)"
      exit 12
      end
   end /* ispf */
return
