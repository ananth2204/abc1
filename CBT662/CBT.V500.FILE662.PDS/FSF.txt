//ASMH EXEC PGM=ASMA90,PARM=(NODECK,OBJECT,NOESD,NORLD,NOXREF,RENT)
FSF      TITLE 'FAKETAPE SCRATCH FINDER'
***********************************************************************
*        PDSDOC *DIRECTLY READ THE CA-1 TMC TO FIND A SCRATCH TAPE....*
*                                                                     *
*        PROGRAM ID. :             FSF                                *
*                                                                     *
*        DATE WRITTEN :            JULY      2003                     *
*                                                                     *
*        AUTHOR :                  D.H.CARTWRIGHT.                    *
*        COPYRIGHT:                AGCO UK  LTD.                      *
*                                                                     *
*        LOCATION :                COVENTRY                           *
*                                  ENGLAND                            *
*                                                                     *
*        HISTORY  :                                                   *
*                                                                     *
* 29JAN04  DHC  ADD PARM PROCESSING FOR THE 'N'TH SCRATCH TAPE        *
*               ACTUAL ENQUEUE REMOVED, DATA LISTS REMAIN             *
* 26NOV03  DHC  CHANGE TO SELECT 3480 FOR FAKETAPE               *3480*
* 06JUL03  DHC  OUR TMC HAS CRAP AT THE BEGINNING, SWITCH TO BDAM     *
* 03JUL03  DHC  STARTED WRITING                                       *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        PURPOSE                                                      *
*       ---------                                                     *
*                                                                     *
* THIS PROGRAM IS INTENDED FOR USE ON AN MVS SYSTEM RUNNING UNDER THE *
* FLEX-ES EMULATOR FROM FUNDAMENTAL SOFTWARE INC.. IT IS INTENDED TO  *
* HELP THE AUTOMATION OF FAKETAPE(TM) OPERATIONS BY FINDING THE       *
* VOLUME SERIAL OF A SCRATCH TAPE TO BE ASSIGNED TO A FAKETAPE(TM)    *
* FILE IN A CA-1 ENVIRONMENT. IT DOES THIS BY READING THE TMC         *
* DIRECTLY.                                                           *
*                                                                     *
* ALL TRADEMARKS ARE ACKNOWLEDGED.                                    *
* THIS PROGRAM USES THE 'SETVAR' PROGRAM FROM FILE 270 OF THE CBT     *
* TAPE (HTTP://WWW.CBTTAPE.ORG/) AND WAS INITIALLY BASED ON CODE      *
* FROM THE 'TMS' PROGRAM IN FILE 183 OF THE CBT TAPE. THE WORK        *
* OF KERMIT KISER AND GILBERT SAINT FLOUR IS GRATEFULLY ACKNOWLEDGED. *
* IT REQUIRES FILE 172 FROM THE CBT TAPE AND THE CA-1 MACRO LIBRARY   *
* FOR ASSEMBLY.                                                       *
*                                                                     *
***********************************************************************
         SPACE 2
***********************************************************************
*                                                                     *
*        LIMITATIONS                                                  *
*       ------------                                                  *
*                                                                     *
*  UNAVOIDABLY THERE ARE SOME INSTALLATION SPECIFIC VARIABLES. THESE  *
*  ARE SET BY ASSEMBLER VARIABLES BEFORE INSTALLATION.                *
*                                                                     *
*  IN ORDER TO HANDLE MULTIPLE SIMULTANEOUS TAPE MOUNTS I HAVE ADDED  *
*  A PARM OF A NUMERIC VALUE 'N' TO ALLOW THE PROGRAM TO RETURN THE   *
*  'N'TH FREE SCRATCH TAPE. THIS MEANT I HAD TO CHOOSE WHETHER TO USE *
*  TSO CP PARM PROCESSING OR TRADITIONAL BATCH PROGRAM PARMS. AS I    *
*  HAVE EXPERIENCE OF BATCH PARM PROCESSING THIS PROGRAM NO LONGER    *
*  RUNS AS A CP. AN INVALID PARM WILL RESULT IN RC=16, AS WILL MOST   *
*  OTHER FAILURES.                                                    *
*                                                                     *
*  THIS PROGRAM SHOULD BE REWRITTEN USING ONLY CA MACROS TO ACCESS    *
*  THE TMC. IF ANYONE DOES THAT, PLEASE SEND ME A COPY.               *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
*       INPUT                                                         *
*       -----                                                         *
*                                                                     *
* 1)PARM   - A PARM FIELD WITH A NUMERIC VALUE BETWEN 0 AND 255.      *
*            THE PROGRAM WILL RETURN THE 'N'TH FREE SCRATCH TAPE.     *
*            NO PARM, ZERO AND ONE ARE SYNONYMOUS AND WILL RETURN     *
*            THE FIRST FREE SCRATCH TAPE.                             *
*                                                                     *
* 2)CAITMC - A DD STATEMENT TO POINT TO THE TMC. IF THIS IS NOT       *
*            PRESENT A PREDEFINED DSNAME IS DYNAMICALLY ALLOCATED.    *
*                                                                     *
*                                                                     *
***********************************************************************
         SPACE 3
***********************************************************************
*                                                                     *
*       OUTPUT                                                        *
*       ------                                                        *
*                                                                     *
* 1)FAKETAPE - A TSO VARIABLE IS SET CONTAINING THE VOLUME SERIAL OF  *
*              THE FIRST 3490 STARTING AT A PREDEFINED RANGE THAT IS  *
*              CONSIDERED 'SCRATCH' BY CA-1.                          *
*                                                                     *
***********************************************************************
         EJECT
         PRINT ON,GEN              SHOW MACRO EXPANSIONS
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
         SPACE 1
FSF      CSECT ,                   MAIN CSECT
         SPACE 1
***********************************************************************
*        INSTALLATION DEPENDENT VALUES                                *
***********************************************************************
         SPACE 1
&BLKSZ   SETA  8840                TMC BLOCKSIZE
&CARTS   SETA  140000              FIRST 3480 IN RANGE
&TMCDSN  SETC  'CSOFT.CA1R524.TMC' TMC DSNAME
         SPACE 1
***********************************************************************
*        REGISTER EQUATES AND USAGES.                                 *
***********************************************************************
         SPACE 1
R0       EQU   0
R1       EQU   1                   WORK
R2       EQU   2                   DCB TABLE POINTER,STRING LENGTH
REG2     EQU   R2                  WORK REGISTER IN 'SCAN' MACRO
R3       EQU   3                   WORK
R4       EQU   4                   LINKAGE RETURN
R5       EQU   5                   TMC RECORD BASE
R6       EQU   6                   WORK/TMC RECORD LENGTH
R7       EQU   7                   WORK/TMC END OF BLOCK
R8       EQU   8                   BUFFER POINTER
R9       EQU   9                   TMC DCB POINTER
R10      EQU   10                  WORK
R11      EQU   11                  PARM OR CPPL POINTER
R12      EQU   12                  BASE REGISTER 1
R13      EQU   13                  SAVE AREA / DATA BASE REG
R14      EQU   14                  .
R15      EQU   15                  .
         SPACE 1
         ZCSECT GETMAIN=1,WKLEN=LWORK HOUSEKEEPING
         USING CLOSET,R13          ESTABLISH WORK AREA ADDSESSABILITY
         LR    R11,R1              SAVE CPPL POINTER
         USING CPPL,R11            ESTABLISH CPPL ADDRESSABILITY
         SPACE 2
         GOSUB INITIAL             PERFORM INITIALISATION
         EJECT
***********************************************************************
*        MAIN PROCESSING ROUTINE                                      *
***********************************************************************
         SPACE 1
MAINLINE DS    0H                  PROGRAM FUNCTION
         LA    R9,DCB1             POINT TO INPUT FILE
         USING IHADCB,R9           ESTABLISH DCB ADDRESSABILITY
         LA    R6,340              SET TMCRECORD LENGTH
         LH    R7,DCBBLKSI         AND BLOCKSIZE
         LA    R7,0(R7,R5)         END OF BLOCK
         LH    R1,NTH              GET PARM VALUE
         SPACE 1
MAINLOOP DS    0H                  PROGRAM FUNCTION
         CLI   0(R5),X'FF'         IS IT A DSNB RECORD?
         BE    QUIT16              WHOOPS, OVERSHOT. NO SCRATCH
         USING TMRECORD,R5         ESTABLISH RECORD ADDRESSABILITY
         CLC   TMVOLSER,CRANGE     HAVE WE REACHED THE RIGHT RANGE?
         BL    MAINUP              NO, CARRY ON DEBLOCKING
*        DC    A(0)                ABEND S0C1                   *DEBUG*
*        CLI   TMTRTCH,TM36TRK     IS IT A 3490?                 *3480*
         CLI   TMTRTCH,TM18TRK     IS IT A 3480?                 *3480*
         BNE   MAINUP              NO, GO LOOK AT NEXT RECORD
         TM    TMFLAG1,TMSCRTCH    IS IT A SCRATCH TAPE?
         BNO   MAINUP              NO, GO LOOK AT NEXT RECORD
         TM    TMFLAG1,TMDELET     IS IT ACTIVE?
         BO    MAINUP              NO, GO LOOK AT NEXT RECORD
         BCT   R1,*+4+4            ONLY RETURN THE 'N'TH TAPE
         B     SETTSO              CONVEY ANSWER TO CALLER
         STH   R1,NTH              SAVE NEW PARM VALUE
         SPACE 1
MAINUP   DS    0H                  GO ROUND FOR NEXT TMC RECORD
         BXLE  R5,R6,MAINLOOP      BUMP RECORD POINTER AND TEST
*        DC    A(0)                ABEND S0C1                  *DEBUG*
         SPACE 1
         FREEBUF (9),(8)           FREE PREVIOUS BUFFER
         GETBUF (9),(8)            GET A BUFFER TO READ INTO
         LTR   R5,R8               COPY IT
         BZ    QUIT16              EXIT IF NO BUFFER
         L     R4,BLKREF           GET LAST RECORD NUMBER
         LA    R4,1(,R4)           INCREMENT TO NEXT RECORD
         ST    R4,BLKREF           AND SAVE IT
         LA    R4,BLKREF+1         POINT TO BLOCK NUMBER
         READ  DECB1,DI,(9),(8),'S',0,(4),MF=E GET RECORD
         CHECK DECB1                   WAIT FOR COMPLETION (OR SYNAD)
         LA    R6,340              SET TMCRECORD LENGTH
         LH    R7,DCBBLKSI         AND BLOCKSIZE
         LA    R7,0(R7,R5)         END OF BLOCK
         LH    R1,NTH              GET PARM VALUE
         B     MAINLOOP            GO PROCESS NEXT BLOCK
         SPACE 1
********************************************************************
*        BUILD UPDTLIST (SETVAR PARM LIST)                         *
********************************************************************
SETTSO   DS    0H                  TELL CALLER THE NEXT SCRATCH VOLUME
         LA    R3,MAJORENQ         USE ENQ NAME AS VARIABLE
         ST    R3,LOCPTR           SET POINTER
         LA    R3,L'MAJORENQ       GET ITS LENGTH
         ST    R3,LOCLEN           AND PUT IT IN THE LIST
         LA    R3,TMVOLSER         POINT TO THE VOLUME SERIAL
         ST    R3,VALPTR           AND PUT IT IN THE LIST
         LA    R3,6                LENGTH OF THAT
         ST    R3,VALLEN           IN THE LIST
         MVC   UPDTUPT,CPPLUPT     UPT
         MVC   UPDTECT,CPPLECT     ECT
         LA    R3,ECB
         ST    R3,UPDTECB          ECB
         LA    R3,UPLIST
         ST    R3,UPDTUPL          UPLIST
         LA    R1,UPDTLIST         POINT TO SETVAR PARM LIST
         LINK  EP=SETVAR,MF=(L,SETVAR)  GO SET THE VARIABLE
         EJECT
***********************************************************************
*        END OF PROCESSING. TIDY UP AND LEAVE.                        *
***********************************************************************
         SPACE 1
STOPPGM  DS    0H                  NOW SHUTTING DOWN
         CLOSE MF=(E,OPENLIST)     CLOSE THE TMC
         SR    R15,R15             SET ZERO RETURN CODE
         SPACE 2
ENDOFPGM DS    0H                  NOW SHUTTING DOWN
         ZRETURN RC=(15)           EXIT PROGRAM
         SPACE 2
QUIT16   DS    0H                  ERROR EXIT
         LA    R15,16              SET RETURN CODE
         B     ENDOFPGM            AND GO OUT THE EXIT
         TITLE 'INITIALISATION PROCESSING'
***********************************************************************
*        OPEN SUPPLIED DD CARDS ETC.                                  *
***********************************************************************
         SPACE 1
INITIAL  DS    0H                  PROGRAM INITIALISATION
         RIN   ,                   SUBROUTINE ENTRY
         MVC   BONEYARD(SKELEND),SKELETON  MAKE RE-ENTRANT CONROLBLOCKS
*
*        PARM PROCESSING
*
         L     R1,0(,R11)          GET ADDRESS OF PARM
         LH    R2,0(,R1)           GET LENGTH OF PARM
         LTR   R2,R2               TEST LENGTH
         BZ    NULLPARM            NO PARM
         CH    R2,=H'3'            TEST MAXIMUM LENGTH
         BH    QUIT16              ERROR IN PARM FIELD
         BCTR  R2,0                DECREMENT FOR EXECUTE
         EX    R2,PRMTEST1         TEST IF GE ZERO
         BL    QUIT16              NO, WRONG
         EX    R2,PRMTEST2         TEST IF LE NINES
         BH    QUIT16              NO, WRONG
         EX    R2,PRMPACK          PACK THE PARM
         OI    PARMPACK+7,X'0F'    ENSURE SIGNED
         CVB   R4,PARMPACK         GET BINARY VALUE OF PARM
         LTR   R4,R4               IS IT GT ZERO?
         BZ    NULLPARM            NO, SET TO ONE
         CH    R4,=H'1'            TEST FOR VALUE ONE
         BE    NULLPARM            ERROR IN PARM FIELD
         CH    R4,=H'255'          TEST MAXIMUM VALUE
         BH    QUIT16              ERROR IN PARM FIELD
         STH   R4,NTH              SAVE THAT VALUE
         B     PARMDONE            FINISHED PARM PROCESING
         SPACE 1
PRMTEST1 CLC   2(*-*,R1),=CL3'000' TEST FOR NUMERIC DATA      *EXECUTE*
PRMTEST2 CLC   2(*-*,R1),=CL3'999' TEST FOR NUMERIC DATA      *EXECUTE*
PRMPACK  PACK  PARMPACK,2(*-*,R1)  CONVERT PARM TO PACKED     *EXECUTE*
         SPACE 1
NULLPARM DS    0H                  PROCESSING FOR NULL, ZERO OR ONE
         LA    R4,1                SET DEFAULT VALUE
         STH   R4,NTH              SAVE THAT VALUE
*        B     PARMDONE            FINISHED PARM PROCESING
         SPACE 2
PARMDONE DS    0H                  END OF PARM PROCESSING
         EJECT ,
         LA    R2,ADDRTIOT         POINT TO TIOT ADDRESS HOLDER
         EXTRACT (2),'S',FIELDS=(TIOT),MF=(E,GETTIOT) GET TIOT ADDRESS
         SR    R0,R0               SET ZERO COMPARATOR
         LR    R15,R0              AND LENGTH
         ICM   R1,B'1111',ADDRTIOT GET TIOT ADDRESS
         BZ    ALLOCTMC            HUH? UNLIKELY, BUT WHAT THE HECK
         LA    R1,24(,R1)          POINT AT FIRST DD ENTRY
INLOOP1  DS    0H                  SCAN THE TIOT
         C     R0,0(,R1)           HAVE WE REACHED THE END?
         BE    ALLOCTMC            YES, REQUIRED DD NOT FOUND
         CLC   =CL8'CAITMC',4(R1)  LOOK FOR MY DDNAME
         BE    INSETUP1            IT IS THERE, GO OPEN IT
         IC    R15,0(,R1)          GET LENGTH OF ENTRY
         LA    R1,0(R15,R1)        POINT TO NEXT ENTRY
         B     INLOOP1             GO TEST IT
         SPACE 2
ALLOCTMC DS    0H                  NO DD CARD, CREATE ONE
*
*        ALLOCATE & OPEN THE TAPE MANAGEMENT CATALOG (TMC)
*
         LA    R1,=A(S99RB+VL)
         SVC   99                      ALLOCATE THE TMC DATA SET
         LTR   R15,R15
         BNZ   QUIT16                  SVC99 FAILED, QUIT
*----------------------------------------------------------------------
INSETUP1 DS    0H                  CARRY ON WITH INITIALISATION
         LA    R9,DCB1             POINT TO DCB
         STCM  R9,B'0111',OPENLIST+1 SAVE ADDRESS
         OPEN  MF=(E,OPENLIST) OPEN IT
         LTR   R15,R15
         BNZ   QUIT16
         LA    R1,340              SET TMC RECORD LENGTH
         LH    R7,DCBBLKSI         AND BLOCKSIZE
         SR    R6,R6               CLEAR EVEN REGISTER
         ST    R6,ECB              CLEAR ECB
         ST    R6,BLKREF           SET POINTER TO ZERO
         DR    R6,R1               FIND BLOCKING FACTOR
         ST    R7,BLOCKING         SAVE THAT VALUE
         SPACE 2
*----------------------------------------------------------------------
*
*        PROCESS SEGMENT RECORDS TO DETERMINE THE
*        BLOCK NUMBER OF MY TMCBASE RECORD
*
*----------------------------------------------------------------------
*LOOP
SCANSEG1 DS    0H                  READ  TMSCTL#1
         GETBUF (9),(8)            GET A BUFFER TO READ INTO
         LTR   R5,R8               COPY IT
         BZ    QUIT16              EXIT IF NO BUFFER
         LA    R4,BLKREF+1         POINT TO BLOCK NUMBER
         READ  DECB1,DI,(9),(8),'S',0,(4),MF=E
         CHECK DECB1                   WAIT FOR COMPLETION (OR SYNAD)
         L     R5,DECB1+12         PICK UP BUFFER ADDRESS
         CLC   =C'TMSCTL#1',TMSCTL#1   IS THIS THE RIGHT RECORD?
         BNE   QUIT16                  NO, QUIT
         L     R7,RANGE                SET START VOLSER
         LA    R1,H1VOLLOW             POINT TO 1ST VOL-SER RANGE
         LH    R2,TMCEXTNT             MAX NUMBER OF VOL-SER RANGES
*--LOOP
SCANSEG4 CL    R7,000(,R1)             COMPARE TO H1VOLLOW (LOW-VOL)
         BL    SCANSEG5                NOT IN THIS RANGE
         CL    R7,004(,R1)             COMPARE TO H1VOLHGH (HIGH-VOL)
         BNH   SCANSEG9                YES, EXIT LOOP
SCANSEG5 LA    R1,012(,R1)             NEXT RANGE
         BCT   R2,SCANSEG4             NEXT RANGE IN TMSCTL#1
*--ENDLOOP
         B     QUIT16                  VOLSER NOT FOUND, QUIT
*
SCANSEG9 A     R7,008(,R1)             ADJUST BLK NUMBER
         SR    R6,R6               CLEAR EVEN REGISTER
         D     R6,BLOCKING         FIND PHYSICAL BLOCK
         CL    R7,DCB1+16              IS IT TOO HIGH?
         BH    QUIT16                  YES, QUIT
         ST    R7,BLKREF               STORE RECORD NUMBER
*----------------------------------------------------------------------
*
*        READ THE TMC RECORD FOR THE FIRST IN THE SCRATCH RANGE
*
*----------------------------------------------------------------------
         FREEBUF (9),(8)           FREE PREVIOUS BUFFER
         GETBUF (9),(8)            GET A BUFFER TO READ INTO
         LTR   R5,R8               COPY IT
         BZ    QUIT16              EXIT IF NO BUFFER
         LA    R4,BLKREF+1         POINT TO BLOCK NUMBER
         READ  DECB1,DI,(9),(8),'S',0,(4),MF=E GET RECORD FOR VOLSER
         CHECK DECB1                   WAIT FOR COMPLETION (OR SYNAD)
*
         SPACE 2
INITIALX DS    0H                  END OF INITIALISATION
         ROUT  ,                   RETURN TO CALLER
         TITLE 'DATA AREAS'
BEGSNAP  DS    0D                  SNAP DATA AREAS FOLLOWING
***********************************************************************
*        CONSTANTS AND WORK AREAS                                     *
***********************************************************************
         SPACE 2
         DS    0F                  GET ADDRESSES ALIGNED
MAJORENQ DC    CL8'FAKETAPE'       MAJOR QNAME FOR ENQUEUE
MINORENQ DC    CL6'VOLSER'         MINOR QNAME FOR ENQUEUE
RANGE    DC    AL4(&CARTS)         START VOLUME OF TAPE RANGE
CRANGE   DC    CL8'&CARTS'         START VOLUME OF TAPE RANGE (CHARS)
         SPACE 1
*------- BLOCS POUR ALLOCATION DYNAMIQUE DES FICHIERS ----------------
S99RB    DC    A(X'14010000',0,S99TUPL,0,0)
S99TUPL  DC    A(S99T1,S99T2,S99T4+VL)
S99T1    DC    AL2(1,1,6),C'CAITMC'     DDNAME
S99T2    DC    AL2(2,1,L'TMCDSN)        DSNAME
TMCDSN   DC    C'&TMCDSN'               TMC DSNAME
S99T4    DC    AL2(4,1,1),X'08',0F'0'   DISP=SHR
DS1RECFF EQU   X'80'  10.. ....    F - FIXED LENGTH
DS1RECFV EQU   X'40'  01.. ....    V - VARIABLE LENGTH
DS1RECFU EQU   X'C0'  11.. ....    U - UNDEFINED LENGTH
DS1RECFT EQU   X'20'  ..1. ....    T - TRACK OVERFLOW
DS1RECFB EQU   X'10'  ...1 ....    B - BLOCKED
DS1RECFS EQU   X'08'  .... 1...    FIXED LENGTH: (X'88')
DS1RECFA EQU   X'04'  .... .10.    ANSI CONTROL CHARACTER
DS1RECMC EQU   X'02'  .... .01.    MACHINE CONTROL CHARACTER
VL       EQU   X'80000000'         END OF LIST
         TITLE 'LITERAL POOL'
***********************************************************************
*        LITERAL POOL                                                 *
***********************************************************************
         SPACE 1
         LTORG ,                   LITERAL POOL GOES HERE
         TITLE 'DCB''S AND I/O CONTROL TABLES'
*        PUSH  PRINT               SAVE PRINT STATUS
*        PRINT ON,NOGEN            SUPPRESS MACRO EXPANSIONS
***********************************************************************
*        SKELETON CONTROL BLOCKS                                      *
***********************************************************************
         SPACE 1
SKELETON DS    0F                  START OF SKELETON CONTROL BLOCKS
EYECATCH DC    CL8'IEHIBALL'       EYE CATCHER
         DC    PL8'0'              WORK AREA
         DC    H'0'                BINARY VALUE OF PARM
         DC    AL2(0)              PADDING
CAITMC   DCB   DSORG=DA,MACRF=RICS,OPTCD=R,DDNAME=CAITMC,BUFL=&BLKSZ
         SPACE 1
         EXTRACT 0,'S',,FIELDS=(TIOT),MF=L CONTROL LIST
         SPACE 1
         OPEN  0,MF=L
         SPACE 1
         READ  DECB0,DI,CAITMC,0,'S','S',0,MF=L
         SPACE 1
         ENQ   (MAJORENQ,MINORENQ,E,6,SYSTEM),RET=USE,MF=L
         SPACE 1
         LINK  EP=SETVAR,SF=L      GO SET THE VARIABLE
         SPACE 1
SKELEN   EQU   *-SKELETON          SIZE OF THE SKELETON
         TITLE 'DSECT MAPS'
**********************************************************************
*        HOUSEKEEPING STORAGE AREA
**********************************************************************
         SPACE 1
CLOSET   DSECT ,                   KEEP ALL OUR SKELETONS HERE
         DS    18F                 STANDARD SAVE AREA
         RIN   GENERATE            SUB-ROUTINE SAVE AREA
ADDRTIOT DS    F                   ADDRESS OF TIOT
BLKREF   DS    F                   ADDRESS OF BLOCK
BLOCKING DS    F                   TMC BLOCKING FACTOR
ECB      DS    F                   AN ECB
*
UPDTLIST DS    0F
UPDTUPT  DS    F
UPDTECT  DS    F
UPDTECB  DS    F
UPDTUPL  DS    F
*
UPLIST   DS    0F
LOCPTR   DS    AL4
LOCLEN   DS    FL4
VALPTR   DS    AL4
VALLEN   DS    FL4
         SPACE 2
BONEYARD DS    0F                  LAY SKELETON HERE
         DS    CL8'IEHIBALL'       EYE CATCHER
PARMPACK DS    PL8'0'              WORK AREA
NTH      DS    XL2'00'             BINARY VALUE OF PARM
         DS    AL2(0)              PADDING
DCB1     DCB   DSORG=DA,MACRF=RICS,OPTCD=R,DDNAME=CAITMC,BUFL=&BLKSZ
         SPACE 1
GETTIOT  EXTRACT ADDRTIOT,'S',,FIELDS=(TIOT),MF=L CONTROL LIST
         SPACE 1
OPENLIST OPEN  DCB1,MF=L
         SPACE 1
READLIST READ  DECB1,DI,DCB1,0,'S','S',0,MF=L
         SPACE 1
ENQLIST  ENQ   (MAJORENQ,MINORENQ,E,6,SYSTEM),RET=USE,MF=L
         SPACE 1
SETVAR   LINK  EP=SETVAR,SF=L      GO SET THE VARIABLE
         SPACE 1
SKELEND  EQU   *-BONEYARD          SIZE OF THE SKELETON (=SKELEN?)
         SPACE 2
LWORK    EQU   *-CLOSET            SIZE OF THE CLOSET
*
         EJECT
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         SPACE 2
CPPL     IKJCPPL ,
         TITLE 'INPUT RECORD'
***********************************************************************
*   MAPPING OF TMC VOLUME RECORD                                      *
*                                                                     *
***********************************************************************
         SPACE 1
         PRINT GEN
         TMMTMREC PREFIX=TM,LIST=YES,DSECT=YES  SOFTWARE.CA1R524.CAIMAC
         SPACE 3
         END
//SYSLIB   DD DISP=SHR,DSN=SYS1.MACLIB
//         DD DISP=SHR,DSN=SOFTWARE.CA1R524.CAIMAC            TMMTMREC
//         DD DISP=SHR,DSN=MMS.MAK.ASM                        CBT172
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,2)
//SYSPRINT DD SYSOUT=*
//SYSLIN   DD UNIT=SYSDA,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//LKED    EXEC PGM=HEWL,PARM='MAP,REUS',COND=(8,LE)
//SYSLIN   DD DSN=*.ASMH.SYSLIN,DISP=(OLD,PASS)
//SYSPRINT DD SYSOUT=*
//SYSLMOD  DD DISP=SHR,DSN=MMS.MAK.LOAD(FSF)
//*  //SYSLMOD  DD DISP=SHR,DSN=SYSL.AGCO.LINKLIB(FSF)
//*
