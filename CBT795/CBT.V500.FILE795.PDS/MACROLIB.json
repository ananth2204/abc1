{"INMR01": {"INMLRECL": 80, "INMFNODE": "BVOMM", "INMFUID": "RLRICE", "INMTNODE": "BVOMM", "INMTUID": "RLRICE", "INMFTIME": "20081016153611000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 4000, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "RLRICE.HTTP.MACLIB.CBT", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"RLRICE.HTTP.MACLIB.CBT": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 4000, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x05\\xf0\\x00\\x04\\x8a0P'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x05\\xf0\\x00\\x04\\x8a0P'", "b'X\\xf1\\xf5\\xe0\\x00\\x00\\x00#\\x00\\x0c\\x00#\\x00\\x0e\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"APPPARM": {"ttr": 17, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00W\\x01\\x05\\x11\\x1f\\x01\\x05\\x11_\\x130\\x00$\\x00 \\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2005-04-21T00:00:00", "modifydate": "2005-04-25T13:30:57", "lines": 36, "newlines": 32, "modlines": 0, "user": "RLRICE"}, "text": "                  MACRO\n                  APPPARM &TYPE=CSECT\n                  AIF    ('&TYPE' EQ 'DSECT').DSECT\n                  AIF    ('&TYPE' EQ 'CSECT').CSECT\n                  MNOTE  'INVALID TYPE'\n                  MEXIT\n.DSECT            ANOP\nHTTPAPP_PARMS       DSECT\n                    AGO    .COMM\n.CSECT              ANOP\nHTTPAPP_PARMS       DS     0F\n.COMM               ANOP\nHTTPAPP_FUNCTION    DS     X\n$HTTPAPP_WRITE      EQU    X'01'       WRITE to webuser\n$HTTPAPP_WRITE_RAW  EQU    X'02'       WRITE to webuser (no translate)\n$HTTPAPP_ALLOCATE   EQU    X'03'       Allocate a DATASET\n$HTTPAPP_FREE       EQU    X'04'       Free a DATASET\n$HTTPAPP_EXIT       EQU    X'05'       Application is complete\nHTTPAPP_RETURN_CODE DS     X           Return code\n$HTTPAPP_OK         EQU    X'00'       .. Successful\n$HTTPAPP_ERROR      EQU    X'FF'       .. Not successful\nHTTPAPP_DDNAME      DS     CL8         DD name for ALLOCATE or FREE\nHTTPAPP_DSNAME      DS     CL44        Dataset name for ALLOCATE\nHTTPAPP_MEMBER      DS     CL8         Member name for ALLOCATE\nHTTPAPP_DATA        DS     XL4         Address of URL or data to WRITE\nHTTPAPP_LENGTH      DS     XL4         Length of data for WRITE\nHTTPAPP_PARM        DS     XL4         Address of PARM in URL\nHTTPAPP_PARM_LENGTH DS     XL4         Length of PARM in URL\nHTTPAPP_ALET        DS     XL4         ALET for data to WRITE\nHTTPAPP_USER        DS     XL4         Available to user app\nHTTPAPP_MESSAGE_1   DS     CL80        Messages to explain cause\nHTTPAPP_MESSAGE_2   DS     CL80          of error(s)\nHTTPAPP_MESSAGE_3   DS     CL80\nHTTPAPP_MESSAGE_4   DS     CL80\nHTTPAPP_MESSAGE_5   DS     CL80\n                  MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ATOE": {"ttr": 19, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00T\\x01\\x041O\\x01\\x041O\\x13\\t\\x00\\x17\\x00\\x17\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-11-09T00:00:00", "modifydate": "2004-11-09T13:09:54", "lines": 23, "newlines": 23, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         ATOE\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nASCII_TO_EBCDIC       DS     0C\n                      DC     X'000102030405060708090A0B0C0D0E0F' 10-0F\n                      DC     X'101112131415161718191A1B1C1D1E1F' 10-1F\n                      DC     X'405A7F7B5B6C507D4D5D5C4E6B604B61' 20-2F\n                      DC     X'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F' 30-3F\n                      DC     X'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6' 40-4F\n                      DC     X'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5E6D' 50-5F\n                      DC     X'79818283848586878889919293949596' 60-6F\n                      DC     X'979899A2A3A4A5A6A7A8A98B6A9BA17F' 70-7F\n                      DC     X'808182838485868788898A8B8C8D8E8F' 80-8F\n                      DC     X'909192939495969798999A9B9C9D9E9F' 90-9F\n                      DC     X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF' A0-AF\n                      DC     X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF' B0-BF\n                      DC     X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF' C0-CF\n                      DC     X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF' D0-DF\n                      DC     X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF' E0-EF\n                      DC     X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF' F0-FF\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLIENT": {"ttr": 21, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x040\\x1f\\x01\\x040\\x1f\\x16\\x01\\x00\\x08\\x00\\x08\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-10-27T00:00:00", "modifydate": "2004-10-27T16:01:04", "lines": 8, "newlines": 8, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         CLIENT &PREFIX=\n&PREFIX._CLIENT       DS   0F\n&PREFIX._CLIENT_DOMAIN DS  F\n&PREFIX._CLIENT_NAME  DS   CL8\n&PREFIX._CLIENT_TASK  DS   CL8\n                      DS   XL20\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBPARM": {"ttr": 23, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x05\\x01\\x073/\\x01\\x073?\\x14\\x19\\x00'\\x00+\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-11-28T00:00:00", "modifydate": "2007-11-29T14:19:05", "lines": 39, "newlines": 43, "modlines": 0, "user": "RLRICE"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "COMMON": {"ttr": 25, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x10\\x01\\x04$_\\x01\\x07(\\x1f\\x15W\\x01V\\x00y\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2007-10-08T15:57:10", "lines": 342, "newlines": 121, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         COMMON &COMM,&TYPE=\n         AIF   (T'&COMM EQ 'O').NOCOMM\n         AIF   ('&TYPE' EQ 'DSECT').LBL0010\n         AIF   ('&TYPE' EQ 'CSECT').LBL0010\n         MNOTE 12,'TYPE MUST BE -DSECT- or -CSECT-'\n         MEXIT\n.LBL0010 ANOP\n         AIF   ('&COMM' EQ 'MAIN').MAIN\n         MNOTE 12,'UNKNOWN COMM TYPE'\n         MEXIT\n.MAIN    ANOP\n         AIF   ('&TYPE' EQ 'DSECT').LBL0020\nHTTPCOMM CSECT\n         AGO   .LBL0030\n.LBL0020 ANOP\nHTTPCOMM DSECT\n.LBL0030 ANOP\n*---------------------------------------------------------------------*\n*                                                                     *\n*          ADD ITRACE ENTRY                                           *\n*                                                                     *\n*  During initialization the \"main\" module will have obtained storage *\n*  for the ITRACE table. The \"main\" module will have set TRACE_FIRST, *\n*  TRACE_LAST, AND TRACE_CURRENT. THE \"MAIN\" module will also have    * 1* o *\n*  set R11 to label \"COMM\" at the very top of this CSECT.  All other  *\n*  modules depend on this remaining unchanged.  Any module except this*\n*  module may call the trace routine.  Macro ITRACE  generates the    *\n*  calling sequence.  R14 is the only register altered by the ITRACE  *\n*  macro.                                                             *\n*                                                                     *\n*  The trace table is a \"wrap-around\" table. TRACE_FIRST is the first *\n*  entry's address, TRACE_LAST is the last entry's address, and       *\n*  TRACE_CURRENT is the address of the last entry added to the table. *\n*                                                                     *\n*  Data captured in each ITRACE entry is:                             *\n*        The TCB address of the calling task                          *\n*        The calling CSECT's suffix                                   *\n*        ID coded on the ITRACE macro                                 *\n*        DATA1 or RDATA1 or zeros                                     *\n*        DATA2 or RDATA2 or zeros                                     *\n*                                                                     *\n*                                                                     *\n*      This code depends on:                                          *\n*           R11  base address of this code                            *\n*           R12  current module's base address                        *\n*           R13  the standard work area address for the caller        *\n*           R14  XTRACE ID'S ADDRESS AND R14 + 8 WILL BE THE RETURN   *\n*                address                                              *\n*                                                                     *\n*---------------------------------------------------------------------*\nTRACE000 DS    0H\n         USING REGISTER_SAVE_AREA,R13             DEFINE BASE\n         USING MODPRFX,R12                        DEFINE BASE\n         USING TRACE_ENTRY,R2                     DEFINE BASE\n         STM   R14,R12,12(R13)                    SAVE REGISTERS\n         ICM   R2,15,COMM_LOG_QUEUE\n         BZ    TRACE030\nTRACE010 DS    0H\n         CLC   X_LOGBLOK,0(R2)\n         BNE   TRACE020\n         ICM   R2,15,8(R2)\n         BZ    TRACE030\n         B     TRACE010\nTRACE020 DS    0H\n         DC    H'0'\nTRACE030 DS    0H\n         ICM   R2,15,TRACE_CURRENT                CURRENT TRACE ENTRY\n         BZ    TRACD050                           NO TRACE TABLE\n         OC    0(TRACE_ENTRY_LENGTH,R2),0(R2)     EMPTY ENTRY?\n         BZ    TRACE040                           YES.. USE THIS ENTRY\n         LA    R2,TRACE_ENTRY_LENGTH(R2)          NEXT TRACE ENTRY\n         C     R2,TRACE_LAST                      BEYOND END OF TABLE?\n         BNH   TRACE040                           NO\n         L     R2,TRACE_FIRST                     'WRAP' TRACE TABLE\nTRACE040 DS    0H\n         L     R1,TRACE_CURRENT                   CURRENT TRACE ENTRY\n         CS    R1,R2,TRACE_CURRENT                UPDATE CURRENT\n         BC    4,TRACE030                         TRY AGAIN\n         ST    R2,TRACE_CURRENT                   CURRENTY ENTRY ADDR\n         USING PSA,R0                             DEFINE BASE\n         MVC   TRACE_ENTRY_TCB,PSATNEW+1          COPY TCB ADDRESS\n         MVC   TRACE_ENTRY_MODULE_NAME,PFXMODNM+3 COPY MODULE NAME\n         MVC   TRACE_ENTRY_TRACE_ID,0(R14)        TRACE ID\n         MVC   TRACE_ID,0(R14)\n         MVC   TRACE_ENTRY_DATA_1,TRACE_DATA_1    COPY TRACE DATA 1\n         MVC   TRACE_ENTRY_DATA_2,TRACE_DATA_2    COPY TRACE DATA 2\n         XC    TRACE_DATA_1,TRACE_DATA_1          CLEAR TRACE DATA\n         XC    TRACE_DATA_2,TRACE_DATA_2          CLEAR TRACE DATA\n         TM    X_TRACE_FLAG,$X_TRACE_ON\n         BNO   TRACD050                           NO\n         MVC   X_TRACE_DATA(TRACE_ENTRY_LENGTH),TRACE_ENTRY\n         MVI   X_TRACE_LENGTH+0,0                 SET LENGTH\n         MVI   X_TRACE_LENGTH+1,36                SET LENGTH\n         GETMAIN R,LV=72\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         PUT   X_TRACE_DCB,X_TRACE_RECORD\n         LR    R1,R13\n         L     R13,4(R1)\n         FREEMAIN R,A=(1),LV=72\nTRACD050 DS    0H\n         ICM   R2,15,COMM_LOG_QUEUE\n         BZ    TRACE080\nTRACD060 DS    0H\n         CLC   X_LOGBLOK,0(R2)\n         BNE   TRACE070\n         ICM   R2,15,8(R2)\n         BZ    TRACE080\n         B     TRACD060\nTRACE070 DS    0H\n         DC    H'0'\nTRACE080 DS    0H\n         LM    R14,R12,12(R13)             SAVE REGISTERS\n         B     8(R14)                      RETURN\nX_LOGBLOK DC   CL8'LOGBLOK'\n*---------------------------------------------------------------------*\n*                                                                     *\n*           TRACE CONTROL                                             *\n*                                                                     *\n*---------------------------------------------------------------------*\n                    DS    0A\n                    DC    CL4'1STX'        FIRST TRACE ENTRY\nTRACE_FIRST         DC    A(0)\n                    DC    CL4'LAST'        LAST TRACE ENTRY\nTRACE_LAST          DC    A(0)\n                    DC    CL4'CURR'        CURRENT XTRACE ENTRY\nTRACE_CURRENT       DC    A(0)\nTRACE_TABLE_ADDRESS DC    A(0)             TRACE TABLE STORAGE ADDRESS\nTRACE_TABLE_SIZE    DC    A(1000*TRACE_ENTRY_LENGTH)\nX_TRACE_FLAG        DC    X'00'\n$X_TRACE_ON         EQU   X'80'            EXTERNAL TRACE DD PRESENT\n$X_TRACE_OPEN       EQU   X'40'            EXTERNAL XTRACE IS OPEN\n\nX_TRACE_RECORD      DS    0H\nX_TRACE_LENGTH      DS    XL2\nX_TRACE_BB          DS    XL2\nX_TRACE_DATA        DS    (TRACE_ENTRY_LENGTH)C\nX_TRACE_DCB    DCB DSORG=PS,                                           +\n               DDNAME=HTTPXTR,                                         +\n               RECFM=VB,                                               +\n               LRECL=16000,                                            +\n               BLKSIZE=16004,                                          +\n               MACRF=PM\n.*\n.*   END OF COMMON COMMON\n.*\n*---------------------------------------------------------------------*\n*                                                                     *\n*     HTTP main address space common                                  *\n*                                                                     *\n*---------------------------------------------------------------------*\n\nCOMM_DXD_ADDRESS      DC   A(0)      DXD (WORK AREA) ADDRESS\n                      DC   CL8'HTTPMAIN'\nCOMM_HTTPMAIN_ADDRESS DC   A(0)\n                      DC   CL8'HTTPCONS'\nCOMM_HTTPCONS_ADDRESS DC   A(0)\n                      DC   CL8'HTTPDAIR'\nCOMM_HTTPDAIR_ADDRESS DC   A(0)\n                      DC   CL8'HTTPLOCL'\nCOMM_HTTPLOCL_ADDRESS DC   A(0)\n                      DC   CL8'HTTPLOG'\nCOMM_HTTPLOG_ADDRESS  DC   A(0)\n                      DC   CL8'HTTPPRT'\nCOMM_HTTPPRT_ADDRESS  DC   A(0)\n                      DC   CL8'HTTPSERV'\nCOMM_HTTPSERV_ADDRESS DC   A(0)\n                      DC   CL8'HTTPTCP '\nCOMM_HTTPTCP_ADDRESS  DC   A(0)\n                      DC   CL8'HTTPURL '\nCOMM_HTTPURL_ADDRESS  DC   A(0)\n                      DC   CL8'HTTPWEB'\nCOMM_HTTPWEB_ADDRESS  DC   A(0)\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_TERMINATION_ECB  DC   A(0)\nCOMM_MAIN_WORK_ECB    DC   A(0)\n*---------------------------------------------------------------------*\n*                                                                     *\n*          PRINT SUBTASK CONTROL                                      *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_PRINT_TCB        DC   A(0)      PRINT SUBTASK'S TCB ADDRESS\nCOMM_PRINT_QUEUE      DC   A(0)      PRINT SUBTASK PRTBLOK QUEUE\nCOMM_PRINT_TERM_ECB   DC   A(0)      PRINT SUBTASK TERMINATION ECB\nCOMM_PRINT_WORK_ECB   DC   A(0)      PRINT WORK TO DO ECB\nCOMM_PRINT_WORK_AREA  DC   A(0)      PRINT SUBTASK'S WORK AREA\n*---------------------------------------------------------------------*\n*                                                                     *\n*          Console subtask control                                    *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_CONSOLE_TCB      DC   A(0)      CONSOLE SUBTASK'S ECB ADDRESS\nCOMM_CONSOLE_TERM_ECB DC   A(0)      CONSOLE SUBTASK TERMINATION ECB\nCOMM_CONSOLE_WORK_ECB DC   A(0)      CONSOLE WORK TO DO ECB\nCOMM_CONSOLE_WORK_AREA DC  A(0)      CONSOLE SUBTASK'S WORK AREA\n*---------------------------------------------------------------------*\n*                                                                     *\n*          Logging subtask control                                    *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_LOG_TCB          DC   A(0)      LOGGING SUBTASK'S ECB ADDRESS\nCOMM_LOG_TERM_ECB     DC   A(0)      LOGGING SUBTASK TERMINATION ECB\nCOMM_LOG_WORK_ECB     DC   A(0)      LOGGING WORK TO DO ECB\nCOMM_LOG_QUEUE        DC   A(0)      LOGBLOK QUEUE\nCOMM_LOG_WORK_AREA    DC   A(0)      LOGGING SUBTASK'S WORK AREA\n*---------------------------------------------------------------------*\n*                                                                     *\n*          URL subtask control                                        *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_URL_TCB          DC   A(0)      URL SUBTASK'S ECB ADDRESS\nCOMM_URL_TERM_ECB     DC   A(0)      URL SUBTASK TERMINATION ECB\nCOMM_URL_WORK_ECB     DC   A(0)      URL WORK TO DO ECB\nCOMM_URL_QUEUE        DC   A(0)      URL QUEUE\nCOMM_URL_WORK_AREA    DC   A(0)      URL SUBTASK'S WORK AREA\n*---------------------------------------------------------------------*\n*                                                                     *\n*          WEB COMMUNICATION SUBTASK                                  *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_WEB_TCB          DC   A(0)      WEB SUBTASK'S ECB ADDRESS\nCOMM_WEB_TERM_ECB     DC   A(0)      WEB SUBTASK TERMINATION ECB\nCOMM_WEB_WORK_ECB     DC   A(0)      WEB WORK TO DO ECB\nCOMM_WEB_INITIALIZED  DC   A(0)      WEB SUBTASK IS INITIALIZED\nCOMM_WEB_COMPLETED    DC   A(0)      COMPLETED REQUESTS\nCOMM_WEB_WORK_AREA    DC   A(0)      WEB SUBTASK'S WORK AREA\n*---------------------------------------------------------------------*\n*                                                                     *\n*          Main to server communcation                                *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_HTTPTCP_TCB       DC  A(0)      TCP/IP SUBTASK'S ECB ADDRESS\nCOMM_HTTPTCP_TERM_ECB  DC  A(0)      TCP/IP SUBTASK TERMINATION ECB\nCOMM_HTTPTCP_WORK_ECB  DC  A(0)      TCP/IP WORK TO DO ECB\nCOMM_HTTPTCP_INITIALIZED DC A(0)     TCP/IP SUBTASK IS INITIALIZED\nCOMM_HTTPTCP_CONTACTS  DC  A(0)      NUMBER OF CONTACTS\nCOMM_HTTPTCP_WORK_AREA DC  A(0)      TCP/IP SUBTASK'S WORK AREA\n                       CLIENT   PREFIX=COMM_HTTPTCP\n*---------------------------------------------------------------------*\n*                                                                     *\n*          Local URL server subtask control                           *\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_LOCAL_TCB        DC   A(0)      LOCAL URL TASK'S ECB ADDRESS\nCOMM_LOCAL_TERM_ECB   DC   A(0)      LOCAL URL TASK TERMINATION ECB\nCOMM_LOCAL_WORK_ECB   DC   A(0)      LOCAL URL TASK WORK TO DO ECB\nCOMM_LOCAL_URL_QUEUE  DC   A(0)      LOCAL URL TASK URL QUEUE\nCOMM_LOCAL_WORK_AREA  DC   A(0)      LOCAL URL SUBTASK'S WORK AREA\nCOMM_LOCAL_INIT_ECB   DC   A(0)      LOCAL URL SUBTASK IS INITIALIZED\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_SERVERS          DC   A(0)      SERVER ADDRESS SPACE CHAIN\nCOMM_SERVER_ECB       DC   F'0'      ECB POSTED FOR NEW/LOST SERVERs\nCOMM_NEW_SERVERS      DC   A(0)      NEW SERVER SPACE CHAIN\nCOMM_LOST_SERVERS     DC   A(0)      LOST SERVER SPACE CHAIN\n\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_NBR_URLS         DC     F'0'    NUMBER OF URLS IN DATASPACE\nCOMM_URL_SPACE_TOKEN  DC     XL8'00'\nCOMM_URL_SPACE_ALET   DC     XL4'0'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_URLS_RECEIVED    DC     F'0'\nCOMM_WEB_PORT         DC     H'0'\nCOMM_WEB_PORT_CHAR    DC     CL5'00000'\nCOMM_SERVER_PORT      DC     H'0'\nCOMM_SERVER_PORT_CHAR DC     CL5'00000'\nCOMM_MAX_LINES        DC     PL3'65'\nCOMM_SNAP_CLASS       DC     C' '\nCOMM_SNAP_NUMBER      DC     PL4'0'\n\n*---------------------------------------------------------------------*\n*            CLIENT ID for HTTPWEB                                    *\n*---------------------------------------------------------------------*\n                      CLIENT PREFIX=COMM_HTTPWEB\n\n*---------------------------------------------------------------------*\n*            CLIENT ID for HTTPLOCL                                   *\n*---------------------------------------------------------------------*\n                      CLIENT PREFIX=COMM_HTTPLOCL\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_SUBTASKS         DC     X'00'\n$CONSOLE_SUBTASK      EQU    X'80'   CONSOLE SUBTASK ACTIVE\n$LOCAL_SUBTASK        EQU    X'40'   LOCAL URL SUBTASK ACTIVE\n$LOGGING_SUBTASK      EQU    X'20'   LOGGING SUBTASK ACTIVE\n$PRINT_SUBTASK        EQU    X'10'   PRINT SUBTASK ACTIVE\n$WEB_SUBTASK          EQU    X'08'   WEB SUBTASK ACTIVE\n$TCP_SUBTASK          EQU    X'04'   SERVER CONTACT SUBTASK ACTIVE\n$URL_SUBTASK          EQU    X'02'   URL MANAGER SUBTASK ACTIVE\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_FLAGS            DC     X'00'\n$COMM_ABEND           EQU    X'80'   SERIOUS ERROR.. ABEND\n$COMM_ABORT           EQU    X'40'   SERIOUS ERROR.. ABORT\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_TRACE_FLAGS      DC     X'00'\n$TRACE_URLS           EQU    X'80'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_EOJ              DC     X'00'\n$EOJ_PHASE_1          EQU    X'80'\n$EOJ_PHASE_2          EQU    X'40'\n$EOJ_PHASE_3          EQU    X'20'\n$EOJ_PHASE_4          EQU    X'10'\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nCOMM_BLANKS           DC     CL256' '\n\n                      ETOA\n                      ATOE\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nURL_BUFFER_SIZE       EQU    32000\n         COPY   TRENTRY\n         COPY   MODPRFX\n         IHAPSA DSECT=YES,LIST=NO\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DAIRBLOK": {"ttr": 260, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00F\\x01\\x043_\\x01\\x043_\\t6\\x00'\\x00'\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-11-30T00:00:00", "modifydate": "2004-11-30T09:36:46", "lines": 39, "newlines": 39, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         DAIRBLOK &DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      DAIR REQUEST BLOCK                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\nDAIRBLOK DS   0F\n         AGO  .COMMON\n.DSECT00 ANOP\nDAIRBLOK DSECT\n.COMMON  ANOP\nDAIRCMD  DS   X                    COMMAND\n$DAIRALE EQU  X'01'                .. ALLOCATE EXISTING DATA SET\n$DAIRALN EQU  X'02'                .. ALLOCATE NEW DATA SET\n$DAIRALS EQU  X'03'                .. ALLOCATE SNAP (SPUN SYSOUT)\n$DAIRREL EQU  X'04'                .. RELEASE\n$DAIRDEL EQU  X'05'                .. DELETE\nDAIRDDN  DS   CL8                  DDNAME NAME\nDAIRDSN  DS   CL44                 DATASET NAME\nDAIRMEM  DS   CL8                  MEMBER NAME\nDAIRBLKN DS   XL4                  ALLOCATION BLOCK LENGTH\nDAIRPRI  DS   XL4                  PRIMARY ALLOCATION QUANTITY\nDAIRSEC  DS   XL4                  SECONDARY ALLOCATION QUANTITY\nDAIRUNIT DS   CL8                  UNIT NAME\nDAIRCLS  DS   C                    OUTPUT CLASS FOR SPUN SYSOUT\nDAIRR15  DS   XL2                  R15 FROM SVC99\nDAIRERR  DS   XL2                  ERROR CODE FROM SVC99\nDAIRINFO DS   XL2                  INFO CODE FROM SVC99\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ETOA": {"ttr": 262, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x04\\x01\\x041O\\x01\\x041O\\x13\\x10\\x00\\x17\\x00\\x16\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-11-09T00:00:00", "modifydate": "2004-11-09T13:10:04", "lines": 23, "newlines": 22, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         ETOA\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEBCDIC_TO_ASCII       DS     0C\n                      DC     X'000102030405060708090A0B0C0D0E0F' 10-0F\n                      DC     X'101112131415161718191A1B1C1D1E1F' 10-1F\n                      DC     X'202122232425262728292A2B2C2D202F' 20-2F\n                      DC     X'303132333435363738393A3B3C3D303F' 30-3F\n                      DC     X'204142434445464748494A2E3C282B4F' 40-4F\n                      DC     X'2651525354555657585921242A293B5F' 50-5F\n                      DC     X'2D2F62636465666768697C2C255F3E3F' 60-6F\n                      DC     X'707172737475767778793A2340273D22' 70-7F\n                      DC     X'806162636465666768698A7B8C8D808F' 80-8F\n                      DC     X'906A6B6C6D6E6F7071729A7D9C9D909F' 90-9F\n                      DC     X'A07E737475767778797AAAABACADAEAF' A0-AF\n                      DC     X'B0B1B2B3B4B5B6B7B8B9BABBBCBDB0BF' B0-BF\n                      DC     X'C0414243444546474849CACBCCCDC0CF' C0-CF\n                      DC     X'D04A4B4C4D4E4F505152DADBDCDDD0DF' D0-DF\n                      DC     X'5CE1535455565758595AEAEBECEDE0EF' E0-EF\n                      DC     X'30313233343536373839FAFBFCFDF0FF' F0-FF\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ITRACE": {"ttr": 264, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00$\\x01\\x04$_\\x01\\x072?\\x17\\x01\\x00R\\x00G\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2007-11-19T17:01:24", "lines": 82, "newlines": 71, "modlines": 0, "user": "RLRICE"}, "text": ".* ------------------------------------------------------------------*\n.*                                                                   *\n.*                        TRACE MACRO                                *\n.*                                                                   *\n.*       The trace function always captures the last three bytes of  *\n.*       the active task's TCB address and bytes 3-7 of the active   *\n.*       CSECT's name, and a trace ID.                               *\n.*                                                                   *\n.*       One or two data elements (8 bytes each) may be captured at  *\n.*       any trace point.  The data to be captured may be specified  *\n.*       in either of two ways: DATA1 or RDATA1 and DATA2 or RDATA2. *\n.*       DATA1 and RDATA1 are mutually exclusive as are DATA2 and    *\n.*       RDATA2.  DATA1 and DATA2 specify the address of data to be  *\n.*       captured, RDATA1 and RDATA2 specify a register whose        *\n.*       contents are to be captured.                                *\n.*                                                                   *\n.*       For example:                                                *\n.*                                                                   *\n.*                 ITRACE ID=POINTA,DATA1=VALUE1,RDATA2=R4           *\n.*                                                                   *\n.*          In this case the trace entry would include the TCB       *\n.*          address, CSECT name, ID \"POINTA\", 8 bytes of data        *\n.*          beginning at value1's address and the contents of        *\n.*          register 4.                                              *\n.*                                                                   *\n.* ------------------------------------------------------------------*\n         MACRO\n&NAME    ITRACE &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=\n         LCLA  &L\n         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010\n         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020\n         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT\n         AIF   (T'&DATA1 EQ 'O').DATA030\n         AIF   ('&DATA1'(1,1) EQ '(').DATA010\n         LA    R14,&DATA1            DATA ADDRESS\n         MVC   TRACE_DATA_1,0(R14)   MOVE DATA\n         AGO   .DATA040\n.DATA010 ANOP\n         AIF   (N'&DATA1 EQ 1).DATA020\n&L       SETA  &DATA1(2)\n         MVC   TRACE_DATA_1(&L),&DATA1(1)\n         AGO   .DATA040\n.DATA020 ANOP\n         MVC   TRACE_DATA_1,0&DATA1  MOVE DATA\n         AGO   .DATA040\n.DATA030 ANOP\n         AIF   (T'&RDATA1 EQ 'O').DATA040\n         STCM  &RDATA1,15,TRACE_DATA_1 SAVE REGISTER CONTENTS\n.DATA040 ANOP\n         AIF   (T'&DATA2 EQ 'O').DATA070\n         AIF   ('&DATA2'(1,1) EQ '(').DATA050\n         LA    R14,&DATA2            DATA ADDRESS\n         MVC   TRACE_DATA_2,0(R14)   MOVE DATA\n         AGO   .DATA080\n.DATA050 ANOP\n         AIF   (N'&DATA2 EQ 1).DATA060\n&L       SETA  &DATA2(2)\n         MVC   TRACE_DATA_2(&L),&DATA2(1)\n         AGO   .DATA080\n.DATA060 ANOP\n         MVC   TRACE_DATA_2,0&DATA2  MOVE DATA\n         AGO   .DATA080\n.DATA070 ANOP\n         AIF   (T'&RDATA2 EQ 'O').DATA080\n         STCM  &RDATA2,15,TRACE_DATA_2 SAVE REGISTER CONTENTS\n.DATA080 ANOP\n         BAL   R14,TRACE000          ENTER TRACE ROUTINE\n         AIF      (T'&ID EQ 'O').NOID\n&NAME    DC    CL8'&ID'              TRACE ID\n         AGO   .ID\n.NOID    ANOP\n&NAME    DC    CL8'**NOID**'\n.ID      ANOP\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'\n.MEXIT   ANOP\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ITRACEO": {"ttr": 267, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x01\\x072?\\x01\\x072?\\x16W\\x00T\\x00T\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-11-19T00:00:00", "modifydate": "2007-11-19T16:57:59", "lines": 84, "newlines": 84, "modlines": 0, "user": "RLRICE"}, "text": ".* ------------------------------------------------------------------*\n.*                                                                   *\n.*                        TRACE MACRO                                *\n.*                                                                   *\n.*       One or two data elements (8 bytes each) may be captured at  *\n.*       any trace point.  The data to be captured may be specified  *\n.*       in either of two ways: DATA1 or RDATA1 and DATA2 or RDATA2. *\n.*       DATA1 and RDATA1 are mutually exclusive as are DATA2 and    *\n.*       RDATA2.  DATA1 and DATA2 specify the address of data to be  *\n.*       captured, RDATA1 and RDATA2 specify a register whose        *\n.*       contents are to be captured.                                *\n.*                                                                   *\n.*       For example:                                                *\n.*                                                                   *\n.*                 ITRACE ID=X1,DATA1=VALUE1,RDATA2=R4               *\n.*                                                                   *\n.*          In this case the trace entry would include the TCB       *\n.*          address, CSECT name, ID \"X1\", 8 bytes of data            *\n.*          beginning at value1's address and the contents of        *\n.*          register 4.                                              *\n.*                                                                   *\n.*                                                                   *\n.*                                                                   *\n.*       The ID is different in this than other code I have written. *\n.*       This is a trade-off to allow the trace entries to be 32     *\n.*       bytes long and still capture all the information I wanted.  *\n.*       Because there are multiple subtasks, I wanted to capture    *\n.*       the TCB addresses.  TCB addresses are (at least as of       *\n.*       z/OS 1.4) 24-bits, TCB addresses use 3 bytes per trace      *\n.*       entry.  So... data per trace entry is..                     *\n.*                                                                   *\n.*              TCB address    3 bytes                               *\n.*              CSECT name     8 bytes                               *\n.*              ID             5 bytes                               *\n.*              Data 1         8 bytes                               *\n.*              DATA 2         8 bytes                               *\n.*                                                                   *\n.*                                                                   *\n.* ------------------------------------------------------------------*\n         MACRO\n&NAME    ITRACE &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=\n         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010\n         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020\n         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT\n         AIF   (T'&DATA1 EQ 'O').DATA020\n         AIF   ('&DATA1'(1,1) EQ '(').DATA010\n         LA    R14,&DATA1            DATA ADDRESS\n         MVC   TRACE_DATA_1,0(R14)   MOVE DATA\n         AGO   .DATA030\n.DATA010 ANOP\n         MVC   TRACE_DATA_1,0&DATA1  MOVE DATA\n         AGO   .DATA030\n.DATA020 ANOP\n         AIF   (T'&RDATA1 EQ 'O').DATA030\n         STCM  &RDATA1,15,TRACE_DATA_1 SAVE REGISTER CONTENTS\n.DATA030 ANOP\n         AIF   (T'&DATA2 EQ 'O').DATA050\n         AIF   ('&DATA2'(1,1) EQ '(').DATA040\n         LA    R14,&DATA2            DATA ADDRESS\n         MVC   TRACE_DATA_2,0(R14)   MOVE DATA\n         AGO   .DATA060\n.DATA040 ANOP\n         MVC   TRACE_DATA_2,0&DATA2  MOVE DATA\n         AGO   .DATA060\n.DATA050 ANOP\n         AIF   (T'&RDATA2 EQ 'O').DATA060\n         STCM  &RDATA2,15,TRACE_DATA_2 SAVE REGISTER CONTENTS\n.DATA060 ANOP\n         BAL   R14,TRACE000          ENTER TRACE ROUTINE\n         AIF      (T'&ID EQ 'O').NOID\n&NAME    DC    CL8'&ID'              TRACE ID\n         AGO   .ID\n.NOID    ANOP\n&NAME    DC    CL8'**NOID**'\n.ID      ANOP\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'\n.MEXIT   ANOP\n         MEXIT\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LOGBLOK": {"ttr": 270, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x18\\x01\\x04)?\\x01\\x045/\\x13C\\x00\\x18\\x00\\x14\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2004-10-19T00:00:00", "modifydate": "2004-12-17T13:43:18", "lines": 24, "newlines": 20, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        LOG REQUEST BLOCK                                            *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         LOGBLOK &DSECT=NO\n         AIF    (T'&DSECT EQ 'O').LBL010\n         AIF    ('&DSECT' EQ 'NO').LBL010\nLOGBLOK         DSECT\n                AGO  .LBL020\n.LBL010         ANOP\nLOGBLOK         DS   0F\n.LBL020         ANOP\nLOG_EYE         DS   CL8              EYECATCHER\nLOG_NEXT        DS   A                NEXT BLOCK ON THE CHAIN\nLOG_DATA_LENGTH DS   H\n                DS   XL2\nLOG_ID          DS   X                RECORD TYPE\n$LOG_URL        EQU  X'01'            .. URL DATA\n$LOG_WEB_WRITE  EQU  X'02'            .. DATA WRITTEN TO WEB\nLOG_DATA        DS   0C\nLOGBLOKL        EQU  *-LOGBLOK\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MODPRFX": {"ttr": 272, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00'\\x01\\x04$_\\x01\\x04$_\\x15\\x02\\x00\\x07\\x00\\x07\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2004-09-01T15:02:27", "lines": 7, "newlines": 7, "modlines": 0, "user": "RLRICE"}, "text": "MODPRFX  DSECT\n         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS                 ASE00110\n         LR    R12,R15             LOAD PERMANENT BASE                  ASE00120\n         B     0(R0)               BRANCH AROUND MOD NAME/TIME/DESC\nPFXMODNM DS    CL8                 MODULE NAME\nPFXMODDT DS    CL8                 ASSEMBLY DATE\nPFXMODTM DS    CL6                 ASSEMBLY TIME\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NETBLOK": {"ttr": 274, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x1c\\x00G\\x01\\x04&O\\x01\\x07$\\x0f\\x168\\x00'\\x00\\x1e\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.28", "flags": 0, "createdate": "2004-09-20T00:00:00", "modifydate": "2007-08-28T16:38:47", "lines": 39, "newlines": 30, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         NETBLOK &DSECT=\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      NETBLOK  is the data sent between the main and a server        *\n*               address space.                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         AIF  (T'&DSECT EQ 'O').ERR0010\n         AIF  ('&DSECT' EQ 'NO').CSECT00\n         AIF  ('&DSECT' EQ 'YES').DSECT00\n         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'\n         MEXIT\n.CSECT00 ANOP\nNETBLOK                DS    0D\n         AGO  .COMMON\n.DSECT00 ANOP\nNETBLOK                DSECT\n.COMMON  ANOP\nNET_LENGTH             DS   F       LENGTH\nNET_FUNCTION           DS   X       FUNCTION\n$NET_IDENTIFY          EQU  X'01'   .. IDENTIFY (SENDING CLIENTID)\n$NET_DEFINE_PREFIX     EQU  X'02'   .. Define a URL prefix\n$NET_DEFINE_SPECIFIC   EQU  X'03'   .. Define a specific URL\n$NET_GET_URL           EQU  X'04'   .. Request a URL to process\n$NET_LOG_INQUIRY       EQU  X'05'   .. Request status of logging\n$NET_LOG               EQU  X'06'   .. WRITE DATA TO LOG\nNET_RETURN_CODE        DS   X       RETURN CODE\n$NET_OK                EQU  X'00'   .. SUCCESSFUL\n$NET_ERROR             EQU  X'01'   .. ERROR\n$NET_SHUTDOWN          EQU  X'02'   .. MAIN ADDRESS SPACE SHUTDOWN\n\nNET_DATA               DS   0F\nNET_PREFIX_LENGTH      EQU  *-NETBLOK\n\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRTBLOK": {"ttr": 276, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x10\\x01\\x04$_\\x01\\x04$\\x7f\\x087\\x00\\x19\\x00\\x18\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2004-09-03T08:37:10", "lines": 25, "newlines": 24, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        PRINTER REQUEST BLOCK                                        *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         PRTBLOK &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nPRTBLOK        DS    0A\n               AGO   .LBL0020\n.LBL0010       ANOP\nPRTBLOK        DSECT\n.LBL0020       ANOP\nPRT_EYE        DS    CL8              EYECATCHER\nPRT_NEXT       DS    A                NEXT BLOCK ON THE CHAIN\nPRT_COMMAND    DS    C                COMMAND\n$PRT_HEAD      EQU   C'H'             .. PRINT HEADING\n$PRT_PRINT     EQU   C'P'             .. PRINT\n$PRT_ASIS      EQU   C'A'             .. PRINT AS IS\nPRT_CC         DS    C                CARRIAGE CONTROL\nPRT_MESSAGE_ID DS    CL15             MESSAGE ID\nPRT_DATA       DS    CL200            PRINT DATA\nPRT_LRECL      EQU   *-PRT_CC\nPRTBLOKL       EQU   *-PRTBLOK\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REGEQU": {"ttr": 278, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x01\\x04$_\\x01\\x04$_\\x15\\x06\\x00\\x10\\x00\\x10\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2004-09-01T15:06:25", "lines": 16, "newlines": 16, "modlines": 0, "user": "RLRICE"}, "text": "R0       EQU    0\nR1       EQU    1\nR2       EQU    2\nR3       EQU    3\nR4       EQU    4\nR5       EQU    5\nR6       EQU    6\nR7       EQU    7\nR8       EQU    8\nR9       EQU    9\nR10      EQU    10\nR11      EQU    11\nR12      EQU    12\nR13      EQU    13\nR14      EQU    14\nR15      EQU    15\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SERVBLOK": {"ttr": 280, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01*\\x005\\x01\\x04%\\x8f\\x01\\x07%o\\x082\\x00E\\x00\\x1e\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.42", "flags": 0, "createdate": "2004-09-14T00:00:00", "modifydate": "2007-09-13T08:32:35", "lines": 69, "newlines": 30, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        Server block                                                 *\n*                                                                     *\n*          A SERVBLOK exists for each SERVER that connects.           *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         SERVBLOK &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nSERVBLOK              DS    0A\n                      AGO   .LBL0020\n.LBL0010              ANOP\nSERVBLOK              DSECT\n.LBL0020              ANOP\nSERVER_NEXT           DS    A              NEXT BLOCK ON THE CHAIN\nSERVER_EYE            DS    CL8            EYECATCHER\nSERVER_TCB            DS    A              SUBTASK'S TCB ADDRESS\nSERVER_HTTP_COMMON    DS    A              ADDRESS OF HTTP COMMON\nSERVER_WORK_ADDRESS   DS    A              WORK AREA ADDRESS\nSERVER_TCPIP_GWA      DS    A              TCP/IP GLOBAL WORK AREA\nSERVER_URL            DS    A              WEBURL BLOCK ADDRESS\nSERVER_TCPIP_RETURN_CODE  DS   F           TCP/IP RETURN CODE\nSERVER_TCPIP_ERROR_NUMBER DS   F           TCP/IP ERROR NUMBER\nSERVER_INITAPI_ECB    DS    F              TCP/IP INITAPI COMPLETE\nSERVER_GIVESOCKET_ECB DS    F              GIVESOCKET ISSUED\nSERVER_ECB_X          DS    F\n\nSERVER_TCPIP_ECB      DS    XL4            TCP/IP ECB\n                      DS    XL100          REQUIRED BY TCP/IP\n\nSERVER_TERM_ECB       DS    XL4            SUBTASK TERMINATION ECB\nSERVER_WORK_ECB       DS    XL4            POSTED BY MAIN TASK\nSERVER_CONNECT_DATE   DS    XL4            DATE CONNECTED\nSERVER_CONNECT_TIME   DS    XL4            TIME CONNECTED\nSERVER_LAST_DATE      DS    XL4            DATE OF LAST COMMUNICATION\nSERVER_LAST_TIME      DS    XL4            TIME OF LAST COMMUNICATION\nSERVER_URLS           DS    F              NUMBER OF URLS PROCESSED\nSERVER_SENDS          DS    F              NUMBER OF SENDS\nSERVER_RECEIVES       DS    F              NUMBER OF RECEIVES\nSERVER_BYTES_RECEIVED DS    F              BYTES RECEIVED\nSERVER_BYTES_SENT     DS    F              BYTES SENT\n\nSERVER_SOCKET         DS    H              SOCKET DESCRIPTOR\nSERVER_MAX_SOCKET     DS    H              MAXIMUM SOCKET DESCRIPTORS\n\nSERVER_SUBTASK        DS    CL8            SERVER SUBTASK NAME\n\nSERVER_FLAGS          DS    X\n$SERVER_READY         EQU   X'80'\n$SERVER_LOST          EQU   X'40'\n\nSERVER_TCPIP_FUNCTION DS  CL16\n\n                      CLIENT PREFIX=SERVER\n                      CLIENT PREFIX=PARTNER\n\nSERVER_IO_AREA        DS    0F,(URL_BUFFER_SIZE)X\n                      ORG   SERVER_IO_AREA\nSERVER_IO_LENGTH      DS    XL2\n                      DS    XL2\nSERVER_IO_FUNCTION    DS    X\nSERVER_RETURN_CODE    DS    X\n\n                      ORG   ,\n\nSERVBLOKL             EQU   *-SERVBLOK\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "STDSAVE": {"ttr": 513, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x15\\x01\\x04$_\\x01\\x04$o\\x105\\x00\\x15\\x00\\x15\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2004-09-02T10:35:15", "lines": 21, "newlines": 21, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n&NAME    STDSAVE &DSECT=NO\n         LCLC   &DNAME\n         AIF    ('&DSECT' EQ 'YES').LBL0010\n         AIF    ('&DSECT' EQ 'NO').LBL0020\n         MNOTE  12,'INVALID ''DSECT'' PARAMETER'\n         MEXIT\n.LBL0010 ANOP\n         AIF    (T'&NAME EQ 'O').LBL001A\n&DNAME   SETC   '&NAME'\n         AGO    .LBL001B\n.LBL001A ANOP\n&DNAME   SETC   'STDSAVE'\n.LBL001B ANOP\n&DNAME             DSECT\n.LBL0020 ANOP\nREGISTER_SAVE_AREA DS    18F\nTRACE_ID           DS    CL8\nTRACE_DATA_1       DS    CL8\nTRACE_DATA_2       DS    CL8\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SUBPARM": {"ttr": 515, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1a\\x00S\\x01\\x042\\x8f\\x01\\x08\\x16O\\x16\\x00\\x006\\x00$\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.26", "flags": 0, "createdate": "2004-11-23T00:00:00", "modifydate": "2008-06-12T16:00:53", "lines": 54, "newlines": 36, "modlines": 0, "user": "RLRICE"}, "text": "                  MACRO\n                  SUBPARM &TYPE=CSECT\n                  AIF    ('&TYPE' EQ 'DSECT').DSECT\n                  AIF    ('&TYPE' EQ 'CSECT').CSECT\n                  MNOTE  'INVALID TYPE'\n                  MEXIT\n.DSECT            ANOP\nHTTP_PARMS        DSECT\n                  AGO    .COMM\n.CSECT            ANOP\nHTTP_PARMS        DS     0F\n.COMM             ANOP\nHTTP_HTTPSUB      DS     A\nHTTP_DATA         DS     A               Data address\nHTTP_LENGTH       DS     F               Data length\nHTTP_PARM         DS     A               Parm address\nHTTP_PARM_LENGTH  DS     F               Parm length\nHTTP_ALET         DS     F               Data's ALET\nHTTP_TRACE_DCB    DS     A               DCB for tracing\nHTTP_TRACE_IOAREA DS     A               I/O area for tracing\nHTTP_TCPIP_RC     DS     XL4             TCP/IP return code\nHTTP_TCPIP_ERROR  DS     XL4             TCP/IP error number\nHTTP_URL_ID       DS     XL4             URL ID\nHTTP_WORKAREA     DS     A\nHTTP_PORT         DS     H               PORT number for HTTPMAIN\nHTTP_SOCKET       DS     H               SOCKET ID\nHTTP_FUNCTION     DS     C               Function\n$HTTP_ALLOCATE    EQU    x'01'           .. Allocate DD\n$HTTP_CLEAN_UP    EQU    x'02'           .. Clean up\n$HTTP_CLOSE       EQU    x'03'           .. Close socket\n$HTTP_CONNECT     EQU    x'04'           .. Connect to main\n$HTTP_DEFINE_PRFX EQU    x'05'           .. Define URL (prefix)\n$HTTP_DEFINE_SPEC EQU    x'06'           .. Define URL (Specific)\n$HTTP_FREE        EQU    x'07'           .. Free DD\n$HTTP_GET_URL     EQU    x'08'           .. Get a URL\n$HTTP_INIT        EQU    x'09'           .. Initialize\n$HTTP_LOG         EQU    x'0A'           .. Write to log\n$HTTP_WRITE       EQU    x'0B'           .. Write to web user\n$HTTP_WRITE_RAW   EQU    x'0C'           .. Write raw (binary data)\nHTTP_RETURN_CODE  DS     X               Return code\n$HTTP_OK          EQU    X'00'           .. Successful\n$HTTP_CONSOLE     EQU    X'01'           .. Command from console\n$HTTP_TCPIP_ERROR EQU    X'02'           .. TCP/IP error\n$HTTP_OTHER       EQU    X'03'           .. Other type of error\n$HTTP_MAIN_SHUTDOWN EQU  X'04'           .. HTTPMAIN shutdown\nHTTP_DD           DS     CL8             DD name\nHTTP_DSN          DS     CL44            Dataset name\nHTTP_MEMBER       DS     CL8             Member name\nHTTP_MESSAGE_1    DS     CL80            Messages to explain cause\nHTTP_MESSAGE_2    DS     CL80               of error(s)\nHTTP_MESSAGE_3    DS     CL80\nHTTP_MESSAGE_4    DS     CL80\nHTTP_MESSAGE_5    DS     CL80\n                  MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "TRENTRY": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x14\\x01\\x04$_\\x01\\x040\\x1f\\t)\\x00\\x0c\\x00\\x0c\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2004-10-27T09:29:14", "lines": 12, "newlines": 12, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*          TRACE TABLE ENTRY                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\nTRACE_ENTRY              DSECT\nTRACE_ENTRY_TCB          DS   XL3  TCB ADDRESS\nTRACE_ENTRY_MODULE_NAME  DS   CL5  MODULE SUFFIX\nTRACE_ENTRY_TRACE_ID     DS   CL8  TRACE ID\nTRACE_ENTRY_DATA_1       DS   CL8  TRACE DATA 1\nTRACE_ENTRY_DATA_2       DS   CL8  TRACE DATA 2\nTRACE_ENTRY_LENGTH       EQU  *-TRACE_ENTRY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "URL": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00@\\x01\\x07!O\\x01\\x07!_\\x15$\\x00\\x12\\x00\\x12\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2007-08-02T00:00:00", "modifydate": "2007-08-03T15:24:40", "lines": 18, "newlines": 18, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        URL REQUEST BLOCK                                            *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         URL     &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nURL             DS    0A\n                AGO   .LBL0020\n.LBL0010        ANOP\nURL             DSECT\n.LBL0020        ANOP\nURL_EYE         DS    CL8              EYECATCHER\nURL_LENGTH      DS    H                TEXT LENGTH\nURL_TEXT        DS    0C               URL TEXT\nURL_PREFIX_L    EQU   *-URL\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "URLREQ": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x05\\x01\\x07!/\\x01\\x07!O\\x10\\x17\\x00\\x1b\\x00\\x17\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2007-07-31T00:00:00", "modifydate": "2007-08-02T10:17:05", "lines": 27, "newlines": 23, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*        URL REQUEST BLOCK                                            *\n*                                                                     *\n*---------------------------------------------------------------------*\n         MACRO\n         URLREQ &DSECT=YES\n         AIF   ('&DSECT' EQ 'YES').LBL0010\nURLREQ          DS    0A\n                AGO   .LBL0020\n.LBL0010        ANOP\nURLREQ          DSECT\n.LBL0020        ANOP\nURLREQ_EYE      DS    CL8              EYECATCHER\nURLREQ_NEXT     DS    A                NEXT BLOCK ON THE CHAIN\nURLREQ_SERVBLOK DS    A                ADDRESS OF SERVBLOK\nURLREQ_ECB      DS    A                ECB\nURLREQ_COMMAND  DS    X                COMMAND\n$URL_DEFINE     EQU   X'01'            .. DEFINE URL\n$URL_LOOKUP     EQU   X'02'            .. LOOKUP (FIND) URL\n$URL_DELETE     EQU   X'03'            .. DELETE URL'S FOR A SERVER\nURLREQ_RC       DS    X                RETURN CODE\n$URL_OK         EQU   X'00'            .. SUCCESSFUL\n$URL_ERROR      EQU   X'FF'            .. ERROR\nURLREQ_URL      DS    0C               URL\nURLREQ_PREFIX_L EQU   *-URLREQ\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "URLSERV": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x002\\x01\\x04(o\\x01\\x04(o\\x10U\\x00\\x0f\\x00\\x0f\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-10-12T00:00:00", "modifydate": "2004-10-12T10:55:32", "lines": 15, "newlines": 15, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         URLSERV\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*  Any given URL may have multiple server address spaces.             *\n*  The URLSERV blocks are chained from the DATAURL blocks.            *\n*                                                                     *\n*---------------------------------------------------------------------*\nURLSERV              DSECT\nURLSERV_EYE          DS   CL8       EYE CATCHER\nURLSERV_NEXT         DS   A         NEXT URLSERV BLOCK\nURLSERV_SERVER       DS   XL4       ADDRESS OF SERVER TASK'S SERVBLOK\nURLSERVL             EQU  *-URLSERV\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "WEBURL": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01%\\x00\\'\\x01\\x04&o\\x01\\x07\"_\\x08Q\\x00+\\x00\\x18\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.37", "flags": 0, "createdate": "2004-09-22T00:00:00", "modifydate": "2007-08-13T08:51:27", "lines": 43, "newlines": 24, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         WEBURL       &DSECT=YES\n*---------------------------------------------------------------------*\n*                                                                     *\n*  When a web client (usually a web browser like Internet Explorer)   *\n*  contacts the web server (the main address space), it sends the     *\n*  URL for the information the user is seeking.                       *\n*                                                                     *\n*---------------------------------------------------------------------*\n         AIF  ('&DSECT' EQ 'YES').DSECT\n         AIF  ('&DSECT' EQ 'NO').NODSECT\n         MNOTE 12,'INVALID DSECT TYPE'\n         MEXIT\n.DSECT   ANOP\nWEBURL                DSECT\n         AGO   .COMM\n.NODSECT ANOP\nWEBURL   DS    0F\n.COMM    ANOP\nWEBURL_EYE            DS   CL8       BLOCK IDENTIFIER\nWEBURL_NEXT           DS   A         ADDRESS OF NEXT WEBURL BLOCK\nWEBURL_LENGTH         DS   F         LENGTH OF THIS WEBURL BLOCK\nWEBURL_ECB            DS   F         USED FOR GIVESOCKET\nWEBURL_SERVBLOK       DS   F         ADDRESS OF SERVER'S SERVBLOK\nWEBURL_RETURN_CODE    DS   F         TCP/IP RETURN CODE\nWEBURL_ERROR_NUMBER   DS   F         TCP/IP ERROR NUMBER\nWEBURL_ID             DS   F         URL \"ID\"\nWEBURL_SOCKET         DS   H         SOCKET DESCRIPTOR\nWEBURL_PARM_LENGTH    DS   H         LENGTH OF URL PARM\nWEBURL_PARM_DISP      DS   H         DISP TO URL PARM\nWEBURL_STATUS         DS   X         STATUS\n$URL_DEFINE_SPECIFIC  EQU  X'01'     .. DEFINE SPECIFIC URL\n$URL_DEFINE_PREFIX    EQU  X'02'     .. DEFINE URL PREFIX\n$URL_LOOKUP           EQU  X'03'     .. LOOK-UP URL\n$URL_PROCESS          EQU  X'04'     .. PROCESS THIS URL\n$URL_DELETE           EQU  X'05'     .. DELETE URL(S)\n$URL_COMPLETE         EQU  X'06'     .. PROCESSING COMPLETE\n$URL_SNAP             EQU  X'07'     .. SNAP DUMP URLs\nWEBURL_FROM_CLIENT    CLIENT PREFIX=WEBURL_FROM\nWEBURL_TO_CLIENT      CLIENT PREFIX=WEBURL_TO\nWEBURL_URL            DS   0C        URL\nWEBURLL               EQU  *-WEBURL\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT795/CBT.V500.FILE795.PDS/MACROLIB.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT795/CBT.V500.FILE795.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}