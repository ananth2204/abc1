* ------------------------------------------------------------------- *
*                                                                     *
*    TCP/IP subtask (probably a bad name.. it is misleading)          *
*                                                                     *
*                                                                     *
*   After HTTPINIT has called HTTPPARM, it verifies there were no     *
*   errors.  It then ATTACHes several subtasks including this one.    *
*   One of the parameters is the TCP/IP port number we are to use.    *
*                                                                     *
*   At start-up this subtask                                          *
*      1) initializes the TCP/IP environment                          *
*      2) obtains its own CLIENTID                                    *
*      3) creates a socket                                            *
*      4) BINDs to the port given for SERVERPORT                      *
*      5) issues a LISTEN                                             *
*                                                                     *
*                                                                     *
*   When a server space contacts us                                   *
*      1) Issue an ACCEPT to get the socket for this connection       *
*      2) ATTACH a subtask for managing communication to the          *
*           server space                                              *
*      3) WAIT for the subtask to initialize                          *
*      4) Issue a GIVESOCKET to transer ownership of the socket       *
*           to the subtask just ATTACHed                              *
*      5) WAIT for the GIVESOCKET to complete                         *
*                                                                     *
*   When the connection to a server space is lost                     *
*      1) DETACH the subtask                                          *
*      2) FREEMAIN any work queued to the subtask                     *
*                                                                     *
*                                                                     *
*                                                                     *
*   By default TCP/IP allows a given program to have up to 50         *
*   socket descriptors at one time.  In response to an ACCEPT,        *
*   TCP/IP creates a socket descriptor.  When a web user contacts     *
*   the main space, we get a socket descriptor for communication      *
*   with that web user.  Call this descriptor A.  We issue a          *
*   GIVESOCKET referencing descriptor A and notify the server space.  *
*   The server space will issue a TAKESOCKET referencing desriptor A. *
*   TCP/IP will create a second socket.  Call this descriptor B.      *
*   After the GIVESOCKET/TAKESOCKET have completed, there are         *
*   two socket descriptors.  That is descriptor A still exists        *
*   and counts toward the 50 descriptors we are allowed to have.      *
*   We need to issue a CLOSE referencing descriptor A.  TCP/IP        *
*   will free any resources related to this descriptor and reduce     *
*   the number of our active descriptors by 1.  Simple, right?        *
*                                                                     *
*                                                                     *
*   When a server space successfully completes the TAKESOCKET, it     *
*   will send back confirmation that it has the WEBURL and has        *
*   the socket for communicating with the web client.                 *
*   This subtask now                                                  *
*      1) issues a WAIT to complete the GIVESOCKET                    *
*      2) CLOSEs the SOCKET using the descriptor given to us          *
*         in response to our ACCEPT call                              *
*      2) FREEMAINs the WEBURL block                                  *
*                                                                     *
* ------------------------------------------------------------------- *
HTTPTCP  CSECT
HTTPTCP  AMODE 31
HTTPTCP  RMODE ANY
         USING HTTPTCP,R12,R10                DEFINE BASE
         USING SERVBLOK,R6
         USING HTTPCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'HTTPTCP'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LA    R10,2048(R12)
         LA    R10,2048(R10)
         L     R11,0(R1)                      COPY COMM AREA BASE
         ST    R12,COMM_HTTPTCP_ADDRESS       SAVE OUR BASE ADDRESS
         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +
               LV=WORKL,                                               +
               LOC=ANY
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ST    R13,COMM_HTTPTCP_WORK_AREA
         ITRACE ID=INIT
         MVC   PRT_EYE,C_PRT_ID               IDENTIFY CONTROL BLOCK
         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS
         MVI   PRT_COMMAND,$PRT_PRINT
         LA    R1,COMM_HTTPTCP_WORK_ECB
         ST    R1,WORK_WAIT_ECB_1
         LA    R1,WORK_TCPIP_ECB
         ST    R1,WORK_WAIT_ECB_2
         OI    WORK_WAIT_ECB_2,X'80'
         XC    COMM_HTTPTCP_WORK_ECB,COMM_HTTPTCP_WORK_ECB
* ------------------------------------------------------------------- *
*     Make the INITAPI call                                           *
* ------------------------------------------------------------------- *
         ITRACE ID=INITAPI,                                            +
               DATA1=(C_HTTPTCP,8)
         MVC   PRT_MESSAGE_ID(MSG01_L),MSG01
         BAL   R9,PRT0000
         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK
         MVC   WORK_TCPIP_FUNCTION,=CL16'INITAPI'
         EZASMI TYPE=INITAPI,                                          +
               MAXSNO=WORK_MAX_SOCKET,                                 +
               SUBTASK=C_HTTPTCP,                                      +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ASYNC='ECB',                                            +
               TASK=WORK_TCPIP_TASK
         BAL   R8,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*     Get our CLIENTID                                                *
* ------------------------------------------------------------------- *
         ITRACE ID=GETID
         MVC   COMM_HTTPTCP_CLIENT_NAME,COMM_BLANKS
         MVC   COMM_HTTPTCP_CLIENT_TASK,COMM_BLANKS
         XC   COMM_HTTPTCP_CLIENT_TASK+8(20),COMM_HTTPTCP_CLIENT_TASK+8
         MVC   WORK_TCPIP_FUNCTION,=CL16'GETCLIENTID'
         EZASMI TYPE=GETCLIENTID,                                      +
               CLIENT=COMM_HTTPTCP_CLIENT,                             +
               ECB=WORK_TCPIP_ECB,                                     +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
         ITRACE ID=CLIENTID,                                           +
               DATA1=(COMM_HTTPTCP_CLIENT_NAME,8),                     +
               DATA2=(COMM_HTTPTCP_CLIENT_TASK,8)
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*     Create the socket                                               *
* ------------------------------------------------------------------- *
         MVC   PRT_MESSAGE_ID(MSG02_L),MSG02
         BAL   R9,PRT0000
         ITRACE ID=SOCKET
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'SOCKET'
         EZASMI TYPE=SOCKET,                                           +
               AF='INET',                                              +
               SOCTYPE='STREAM',                                       +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R8,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
         MVC   WORK_SOCKET,WORK_TCPIP_RETURN_CODE+2
* ------------------------------------------------------------------- *
*     BIND the socket                                                 *
* ------------------------------------------------------------------- *
         MVC   PRT_MESSAGE_ID(MSG03_L),MSG03
         MVC   PRT_MESSAGE_ID+(MSG03_PORT-MSG03)(L'MSG03_PORT),COMM_SER+
               VER_PORT_CHAR
         BAL   R9,PRT0000
         XC    WORK_SOCKET_STRUCTURE,WORK_SOCKET_STRUCTURE
         MVC   WORK_SOCKET_FAMILY,C_AF_INET
         MVC   WORK_SOCKET_PORT,COMM_SERVER_PORT
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'BIND'
         ITRACE ID=BIND,                                               +
               DATA1=(WORK_SOCKET_PORT,2)
         EZASMI TYPE=BIND,                                             +
               S=WORK_SOCKET,                                          +
               NAME=WORK_SOCKET_STRUCTURE,                             +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R8,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*     Start LISTENing                                                 *
* ------------------------------------------------------------------- *
         MVC   PRT_MESSAGE_ID(MSG04_L),MSG04
         BAL   R9,PRT0000
         ITRACE ID=LISTEN
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'LISTEN'
         EZASMI TYPE=LISTEN,                                           +
               BACKLOG=5,                                              +
               S=WORK_SOCKET,                                          +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R8,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
         POST  COMM_HTTPTCP_INITIALIZED
* ------------------------------------------------------------------- *
*                                                                     *
*     Print "Accepting LOG ONs" message                               *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   PRT_MESSAGE_ID(MSG05_L),MSG05
         BAL   R9,PRT0000
* ------------------------------------------------------------------- *
*     Issue ACCEPT                                                    *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         TM    COMM_EOJ,$EOJ_PHASE_1
         BO    TERM0000
         ITRACE ID=ACCEPT
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'ACCEPT'
         EZASMI TYPE=ACCEPT,                                           +
               S=WORK_SOCKET,                                          +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               NAME=WORK_SOCKET_STRUCTURE,                             +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         TM    WORK_TCPIP_RETURN_CODE,X'80'
         BO    ERR0020
* ------------------------------------------------------------------- *
*                                                                     *
*        Wait for either a CONNECT or server shutdown                 *
*        command (entered via the console).                           *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=WAIT
         WAIT  ECBLIST=WORK_WAIT_LIST
         ITRACE ID=AWAKE
MAIN0020 DS    0H
         TM    COMM_EOJ,$EOJ_PHASE_1
         BO    TERM0000
         TM    WORK_TCPIP_ECB,X'40'
         BNO   MAIN0010
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
* ------------------------------------------------------------------- *
*                                                                     *
*        A new connection has arrived                                 *
*                                                                     *
*   GETMAIN a SERVBLOK                                                *
*   Add the SERVBLOK to chain                                         *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R1,COMM_HTTPTCP_CONTACTS
         LA    R1,1(,R1)
         ST    R1,COMM_HTTPTCP_CONTACTS
         MVC   WORK_NEW_SOCKET,WORK_TCPIP_RETURN_CODE+2
         ITRACE ID=NEW_SOCK,                                           +
               DATA1=(WORK_NEW_SOCKET,2)
         GETMAIN RU,                                                   +
               LV=SERVBLOKL,                                           +
               LOC=ANY
         LR    R6,R1
         ITRACE ID=SERVBLOK,                  TRACE SERVBLOK           +
               RDATA1=R6
         LR    R0,R6
         L     R1,=A(SERVBLOKL)
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14                         INITIALIZE SERVBLOK
         MVC   SERVER_EYE,C_SERVER_ID
         ST    R11,SERVER_HTTP_COMMON         SET COMMON'S ADDRESS
         TIME  DEC
         ST    R0,SERVER_CONNECT_TIME         SET CONNECT TIME
         ST    R1,SERVER_CONNECT_DATE         SET CONNECT DATE
         ZAP   SERVER_LAST_DATE,C_P0          INITIALIZE LAST COMM DATE
MAIN0030 DS    0H
         L     R1,COMM_NEW_SERVERS            1ST ON CHAIN NOW
         ST    R1,SERVER_NEXT                 SAVE ADDRESS
         CS    R1,R6,COMM_NEW_SERVERS         SWAP IN NEW BLOCK
         BC    4,MAIN0030                     BAD TIMING.. TRY AGAIN
* ------------------------------------------------------------------- *
*                                                                     *
*   It is much cleaner overall for the main task to be the parent     *
*                                                                     *
*   1)  The SERVBLOK is already on the new SERVBLOK chain             *
*   2)  WAIT for the new HTTPSERV subtask to initialize               *
*   3)  The POST (from step 2) will "wake up" the main task           *
*   4)  The main task will ATTACH a new HTTPSERV subtask              *
*   5)  The new HTTPSERV subtask will initialize its TCP/IP           *
*         environment                                                 *
*   6)  The HTTPSERV subtask will determine its CLIENTID              *
*         (the ID will be placed in the SERVBLOK)                     *
*   7)  The new HTTPSERV subtask will POST the ECB we are             *
*         WAITing on (step 2).                                        *
*   8)  The HTTPSERV task will issue a WAIT                           *
*   9)  This subtask will "wake up" and issue a GIVESOCKET            *
*         referencing the CLIENT ID for the new HTTPSERV task         *
*  10)  This subtask will POST the ECB used in step 8                 *
*  11)  This subtask will WAIT                                        *
*  12)  The HTTPSERV subtask will "wake up" and issue a TAKESOCKET    *
*  13)  TCP/IP will POST the ECB used in step 11                      *
*  14)  This task CLOSEs the SOCKET given to the new HTTPSERV task    *
*  15)  This task issues another ACCEPT                               *
*                                                                     *
*                                                                     *
*   Now the new HTTPSERV task "owns" the socket used to communicate   *
*   with the server space... this task is no longer involved with     *
*   traffic related to the socket that started this whole process.    *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=POSTMAIN
         POST  COMM_MAIN_WORK_ECB
* ------------------------------------------------------------------- *
*                                                                     *
*   HTTPMAIN WILL HAVE ATTACHED A HTTPSERV SUBTASK                    *
*   We want to give the socket to the new subtask.                    *
*   We have to wait for the subtask to issue the INITAPI call         *
*   to TCP/IP before issuing the GIVESOCKET.                          *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=INITWAIT
         WAIT  ECB=SERVER_INITAPI_ECB
         ITRACE ID=INITECB,                                            +
               DATA1=(SERVER_INITAPI_ECB,4)
* ------------------------------------------------------------------- *
*        Issue GIVESOCKET                                             *
* ------------------------------------------------------------------- *
         MVC   WORK_TCPIP_FUNCTION,=CL16'GIVESOCKET'
         MVC   SERVER_SOCKET,WORK_NEW_SOCKET
         ITRACE ID=GIVESOCK,                                           +
               DATA1=(WORK_NEW_SOCKET,2)
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         EZASMI TYPE=GIVESOCKET,                                       +
               S=WORK_NEW_SOCKET,                                      +
               CLIENT=SERVER_CLIENT,                                   +
               ECB=WORK_TCPIP_ECB,                                     +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               RETCODE=WORK_TCPIP_RETURN_CODE
         POST  SERVER_GIVESOCKET_ECB           GIVE SOCKET ISSUED
         ITRACE ID=SOCKWAIT
         WAIT  ECB=WORK_TCPIP_ECB
         ITRACE ID=GIVE_RC,                                            +
               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +
               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)

         ITRACE ID=WAITECBX
         WAIT  ECB=SERVER_ECB_X
         ITRACE ID=ECB_X,                                              +
               DATA1=(SERVER_ECB_X,4)

* ------------------------------------------------------------------- *
*                                                                     *
*        The HTTPSERV subtask now has the connection to the server    *
*                                                                     *
*        CLOSE the SOCKET                                             *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=CLOSE,                                              +
               DATA1=(WORK_NEW_SOCKET,4)
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         EZASMI TYPE=CLOSE,                                            +
               S=WORK_NEW_SOCKET,                                      +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB
         WAIT  ECB=WORK_TCPIP_ECB
         TM    WORK_TCPIP_RETURN_CODE,X'80'
         BO    ERR0020
         B     MAIN0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TERM0000 DS    0H
         ITRACE ID=TERMAPI
         MVC   WORK_TCPIP_FUNCTION,=CL16'TERMAPI'
         EZASMI TYPE=TERMAPI,                                          +
               TASK=WORK_TCPIP_TASK
         BAL   R8,INFO0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INFO0000 DS    0H
         MVC   PRT_MESSAGE_ID(MSG90_L),MSG90
         MVC   PRT_MESSAGE_ID+(MSG90_FUNCTION-MSG90)(L'MSG90_FUNCTION),+
               WORK_TCPIP_FUNCTION
         UNPK  PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(9),WORK_TCPIP_R+
               ETURN_CODE(5)
         MVZ   PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXZERO
         TR    PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXCHAR
         MVI   PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)+8,C' '
         L     R1,WORK_TCPIP_ERROR_NUMBER
         CVD   R1,WORK_DWORD
         ED    PRT_MESSAGE_ID+(MSG90_ERROR_NUMBER-MSG90)(L'MSG90_ERROR_+
               NUMBER),WORK_DWORD+5
         BAL   R9,PRT0000
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS
PRT0010  DS    0H
         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE
         ST    R14,PRT_NEXT-PRTBLOK(R1)
         CS    R14,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK
         BR    R9
* ------------------------------------------------------------------- *
*        Error routines                                               *
* ------------------------------------------------------------------- *
ERR0020  DS    0H
         BAL   R8,INFO0000
         ABEND 3,DUMP,,USER
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
EXIT0010 DS    0H
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S R13
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKL
         LM    R14,R12,12(R13)
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER

* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
C_AF_INET                DC    X'0002'
C_HEXCHAR                DC    C'0123456789ABCDEF'
C_HEXZERO                DC    0F,XL8'0000000000000000'
C_PRT_ID                 DC    CL8'PRTBLOK'
C_P0                     DC    P'0'
C_HTTPTCP                DC    CL8'HTTPTCP '
C_SERVER_ID              DC    CL8'SERVBLOK'

MSG01                    DS    0C
                         DC    CL15'HTTPTCP01I'
                         DC    C'Issuing INITAPI'
MSG01_L                  EQU   *-MSG01
MSG02                    DS    0C
                         DC    CL15'HTTPTCP02I'
                         DC    C'Creating socket'
MSG02_L                  EQU   *-MSG02
MSG03                    DS    0C
                         DC    CL15'HTTPTCP03I'
                         DC    C'BINDing to port '
MSG03_PORT               DC    CL5' '
MSG03_L                  EQU   *-MSG03
MSG04                    DS    0C
                         DC    CL15'HTTPTCP04I'
                         DC    C'LISTENing'
MSG04_L                  EQU   *-MSG04
MSG05                    DS    0C
                         DC    CL15'HTTPTCP05I'
                         DC    C'ACCEPTing connections from server(s)'
MSG05_L                  EQU   *-MSG05
MSG90                    DS    0C
                         DC    CL15'HTTPTCP90I'
                         DC    C'TCP/IP function '
MSG90_FUNCTION           DC    CL16' '
                         DC    C'  Return code: '
MSG90_RETURN_CODE        DC    CL8' '
                         DC    C'  Error number:'
MSG90_ERROR_NUMBER       DC    X'402020202120'
MSG90_L                  EQU   *-MSG90

                         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA                 DSECT
                         STDSAVE  DSECT=NO
WORK_ID                  DS   CL8
WORK_DWORD               DS   D
WORK_MAX_SOCKET          DS   F
WORK_BUFFER_LENGTH       DS   F

WORK_RC                  DS   H

WORK_SOCKET              DS   H
WORK_NEW_SOCKET          DS   H

                         DS   0F
WORK_SOCKET_STRUCTURE    DS   0XL16
WORK_SOCKET_FAMILY       DS   AL2           FAMILY (ALWAYS = 2)
WORK_SOCKET_PORT         DS   XL2           PORT NUMBER
WORK_SOCKET_CLIENT_IP    DS   XL4           CLIENT'S IP ADDRESS
                         DS   XL8           RESERVED

WORK_TCPIP_ECB           DS   F
                         DS   XL100         REQUIRED BY TCP/IP

                         CLIENT PREFIX=WORK
WORK_CLIENTL             EQU  *-WORK_CLIENT

WORK_TCPIP_ERROR_NUMBER  DS   F
WORK_TCPIP_RETURN_CODE   DS   F
WORK_TCPIP_FUNCTION      DS   CL16
WORK_TCPIP_TASK          EZASMI TYPE=TASK,STORAGE=CSECT

WORK_WAIT_LIST           DS   0F            WAIT LIST
WORK_WAIT_ECB_1          DS   F             COMM_TERMINATION_ECB
WORK_WAIT_ECB_2          DS   F             TCPIP_ECB

                         PRTBLOK  DSECT=NO

WORK_BUFFER              DS   (BUFFER_SIZE)X
WORKL                    EQU  *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON  MAIN,TYPE=DSECT
         SERVBLOK
         LOGBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         EZASMI TYPE=GLOBAL,STORAGE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                COPY   REGEQU
BUFFER_SIZE     EQU    1000
$LINE_FEED      EQU    X'0A'
         END    HTTPTCP
