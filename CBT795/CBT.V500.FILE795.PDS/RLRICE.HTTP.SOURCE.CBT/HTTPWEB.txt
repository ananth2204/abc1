* ------------------------------------------------------------------- *
*                                                                     *
*    TCP/IP subtask                                                   *
*                                                                     *
*   This subtask performs the TCP/IP functions for the 'web' port.    *
*                                                                     *
*   After HTTPINIT has called HTTPPARM, it verifies there were no     *
*   errors.  It then ATTACHes several subtasks including this one.    *
*   One of the parameters is the TCP/IP port number we are to use.    *
*                                                                     *
*   At start-up this subtask                                          *
*      1) initializes the TCP/IP environment                          *
*      3) obtains its own CLIENTID                                    *
*      4) creates a socket                                            *
*      5) BINDs to the port given on the WEBPORT parameter statement  *
*      6) issues a LISTEN                                             *
*      7) Issue an ACCEPT to get the socket for this connection       *
*                                                                     *
*                                                                     *
*   Whenever a web client contacts us                                 *
*      1) Log this connection                                         *
*      2) Issue a READ to get whatever the client has sent us.        *
*           This should be a URL.                                     *
*      3) Build a WEBURL block                                        *
*      4) Translate the URL into EBCDIC                               *
*      5) determine which server will process this URL                *
*      6) Issue a GIVESOCKET                                          *
*      7) Add the WEBURL block to the queue of work for the server    *
*      8) POST the 'work to do' ECB for the server's subtask.         *
*      9) Check for more work                                         *
*                                                                     *
*   When work for a URL has been completed, the server task will      *
*   put the WEBURL block on the "work completed" queue.               *
*      1) WAIT for the ECB specified on the GIVESOCKET.  This is      *
*         to make sure the ECB has been POSTed (otherwise TCP/IP      *
*         could POST the ECB after it is FREEMAINed).                 *
*      2) CLOSE the SOCKET                                            *
*      3) FREEMAIN the URL                                            *
*      4) If there are more completed URLs, go to step 1              *
*      5) if there are no more URLs, check for other work             *
*                                                                     *
*                                                                     *
*                                                                     *
*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  *
*                                                                     *
*                                                                     *
*   This is the subtask that BINDs to the PORT specified on the       *
*   WEBPORT initialization statement and has an ACCEPT pending.       *
*   In response to our ACCEPT, TCP/IP will create a SOCKET and        *
*   return the socket descriptor in the last two bytes of RETCODE.    *
*   Call this descriptor A.  This subtask issues a READ on            *
*   descriptor A.  This "reads" the data (the URL) from the user.     *
*   A WEBURL block is created and queued to HTTPURL for 'look up'.    *
*   HTTPURL will search the list of registered URLs to determine      *
*   which server will process this URL.  When HTTPURL has located     *
*   the server, it returns the server's SERVBLOK address.  This       *
*   subtask will issue a GIVESOCKET to the server task and send       *
*   the info                                                          *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*   When a server space successfully completes the TAKESOCKET, it     *
*   will send back confirmation that it has the WEBURL and has        *
*   the socket for communicating with the web client.                 *
*   This subtask now                                                  *
*      1) issues a WAIT to complete the GIVESOCKET                    *
*      2) CLOSEs the SOCKET using the descriptor given to us          *
*         in response to our ACCEPT call                              *
*      2) FREEMAINs the WEBURL block                                  *
*                                                                     *
* ------------------------------------------------------------------- *
HTTPWEB  CSECT
HTTPWEB  AMODE 31
HTTPWEB  RMODE ANY
         USING HTTPWEB,R12,R10                DEFINE BASE
         USING HTTPCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'HTTPWEB'                   MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         LA    R10,2048(R12)
         LA    R10,2048(R10)
         L     R11,0(R1)                      COPY COMM AREA BASE
         ST    R12,COMM_HTTPWEB_ADDRESS
         GETMAIN RU,                          OBTAIN WORK AREA         +
               LV=WORKL,                                               +
               LOC=ANY
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1                         SAVE WORK AREA ADDRESS
         USING WORKAREA,R13                   DEFINE BASE
         ST    R13,COMM_WEB_WORK_AREA
         ITRACE ID=INIT
         MVC   PRT_EYE,C_PRT_ID               IDENTIFY CONTROL BLOCK
         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS
         MVI   PRT_COMMAND,$PRT_PRINT
         GETMAIN RU,                                                   +
               LV=GWALENTH,                                            +
               LOC=ANY
         ST    R1,WORK_TCPIP_GWA              TCP/IP GLOBAL WORK AREA
         LA    R1,COMM_WEB_WORK_ECB
         ST    R1,WORK_WAIT_ECB_1
         LA    R1,WORK_TCPIP_ECB
         ST    R1,WORK_WAIT_ECB_2
         OI    WORK_WAIT_ECB_2,X'80'
         LA    R1,WORK_LINK_SAVE              FIRST LINK SAVE AREA
         ST    R1,WORK_LINK_CURRENT           SET CURRENT ADDRESS
* ------------------------------------------------------------------- *
*     Make the INITAPI call                                           *
* ------------------------------------------------------------------- *
         ITRACE ID=INITAPI,                                            +
               DATA1=(C_HTTPWEB,8)
         MVC   PRT_MESSAGE_ID(MSG01_L),MSG01
         BAL   R15,PRT0000
         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK
         MVC   WORK_TCPIP_FUNCTION,=CL16'INITAPI'
         EZASMI TYPE=INITAPI,                                          +
               MAXSNO=WORK_MAX_SOCKET,                                 +
               SUBTASK=C_HTTPWEB,                                      +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ASYNC='ECB',                                            +
               ERROR=ERR0010,                                          +
               TASK=WORK_TCPIP_TASK
         BAL   R15,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*     Get our CLIENTID                                                *
* ------------------------------------------------------------------- *
         ITRACE ID=GETID
         MVC   COMM_HTTPWEB_CLIENT_NAME,COMM_BLANKS
         MVC   COMM_HTTPWEB_CLIENT_TASK,COMM_BLANKS
         XC   COMM_HTTPWEB_CLIENT_TASK+8(20),COMM_HTTPWEB_CLIENT_TASK+8
         MVC   WORK_TCPIP_FUNCTION,=CL16'GETCLIENTID'
         EZASMI TYPE=GETCLIENTID,                                      +
               CLIENT=COMM_HTTPWEB_CLIENT,                             +
               ECB=WORK_TCPIP_ECB,                                     +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
         ITRACE ID=CLIENTID,                                           +
               DATA1=(COMM_HTTPWEB_CLIENT_NAME,8),                     +
               DATA2=(COMM_HTTPWEB_CLIENT_TASK,8)
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*     Create the socket                                               *
* ------------------------------------------------------------------- *
         MVC   PRT_MESSAGE_ID(MSG02_L),MSG02
         BAL   R15,PRT0000
         ITRACE ID=SOCKET
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'SOCKET'
         EZASMI TYPE=SOCKET,                                           +
               AF='INET',                                              +
               SOCTYPE='STREAM',                                       +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R15,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
         MVC   WORK_SOCKET_DESCRIPTOR,WORK_TCPIP_RETURN_CODE+2
* ------------------------------------------------------------------- *
*     BIND the socket                                                 *
* ------------------------------------------------------------------- *
         MVC   PRT_MESSAGE_ID(MSG03_L),MSG03
         MVC   PRT_MESSAGE_ID+(MSG03_PORT-MSG03)(L'MSG03_PORT),COMM_WEB+
               _PORT_CHAR
         BAL   R15,PRT0000
         ITRACE ID=BIND
         XC    WORK_SOCKET_STRUCTURE,WORK_SOCKET_STRUCTURE
         MVC   WORK_SOCKET_FAMILY,C_AF_INET
         MVC   WORK_SOCKET_PORT,COMM_WEB_PORT
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'BIND'
         EZASMI TYPE=BIND,                                             +
               S=WORK_SOCKET_DESCRIPTOR,                               +
               NAME=WORK_SOCKET_STRUCTURE,                             +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R15,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
* ------------------------------------------------------------------- *
*     Start LISTENing                                                 *
* ------------------------------------------------------------------- *
         MVC   PRT_MESSAGE_ID(MSG04_L),MSG04
         BAL   R15,PRT0000
         ITRACE ID=LISTEN
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'LISTEN'
         EZASMI TYPE=LISTEN,                                           +
               BACKLOG=5,                                              +
               S=WORK_SOCKET_DESCRIPTOR,                               +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R15,INFO0000
         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE
         BNZ   ERR0020
         POST  COMM_WEB_INITIALIZED
* ------------------------------------------------------------------- *
*                                                                     *
*     Print "Accepting LOG ONs" message                               *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   PRT_MESSAGE_ID(MSG05_L),MSG05
         BAL   R15,PRT0000
* ------------------------------------------------------------------- *
*     Issue ACCEPT                                                    *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         TM    COMM_EOJ,$EOJ_PHASE_1
         BO    TERM0000
         ITRACE ID=ACCEPT
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'ACCEPT'
         EZASMI TYPE=ACCEPT,                                           +
               S=WORK_SOCKET_DESCRIPTOR,                               +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               NAME=WORK_SOCKET_STRUCTURE,                             +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB,                                     +
               TASK=WORK_TCPIP_TASK
         TM    WORK_TCPIP_RETURN_CODE,X'80'
         BO    ERR0020
* ------------------------------------------------------------------- *
*                                                                     *
*        Wait for either a CONNECT or server shutdown                 *
*        command (entered via the console).                           *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0010 DS    0H
         ITRACE ID=WAIT
         WAIT  ECBLIST=WORK_WAIT_LIST
         ITRACE ID=AWAKE,                                              +
               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +
               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)
MAIN0020 DS    0H
         ITRACE ID=CHECKEOJ,                                           +
               DATA1=(COMM_EOJ,1)
         TM    COMM_EOJ,$EOJ_PHASE_1
         BO    TERM0000
         ITRACE ID=CHECKCMP,                                           +
               DATA1=(COMM_WEB_WORK_ECB,4)
         TM    COMM_WEB_WORK_ECB,X'40'
         BO    MAIN2000
         ITRACE ID=CHECKTCP,                                           +
               DATA1=(WORK_TCPIP_ECB,4)
         TM    WORK_TCPIP_ECB,X'40'
         BNO   MAIN0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   WORK_NEW_SOCKET,WORK_TCPIP_RETURN_CODE+2
         ITRACE ID=NEW_SOCK,                                           +
               DATA1=(WORK_NEW_SOCKET,2)
* ------------------------------------------------------------------- *
*                                                                     *
*              Log the connection                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   PRT_MESSAGE_ID(MSG06_L),MSG06
         L     R1,COMM_URLS_RECEIVED
         LA    R1,1(,R1)
         ST    R1,COMM_URLS_RECEIVED
         CVD   R1,WORK_DWORD
         ED    PRT_MESSAGE_ID+(MSG06_ID-MSG06)(L'MSG06_ID),WORK_DWORD+3

         SR    R1,R1

         IC    R1,WORK_SOCKET_CLIENT_IP+0
         CVD   R1,WORK_DWORD
         MVC   WORK_PACK_IN,=X'F0212020'
         ED    WORK_PACK_IN,WORK_DWORD+6
         MVC   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06+00)(3),WORK_PACK_+
               IN+1

         IC    R1,WORK_SOCKET_CLIENT_IP+1
         CVD   R1,WORK_DWORD
         MVC   WORK_PACK_IN,=X'F0212020'
         ED    WORK_PACK_IN,WORK_DWORD+6
         MVC   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06+04)(3),WORK_PACK_+
               IN+1

         IC    R1,WORK_SOCKET_CLIENT_IP+2
         CVD   R1,WORK_DWORD
         MVC   WORK_PACK_IN,=X'F0212020'
         ED    WORK_PACK_IN,WORK_DWORD+6
         MVC   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06+08)(3),WORK_PACK_+
               IN+1

         IC    R1,WORK_SOCKET_CLIENT_IP+3
         CVD   R1,WORK_DWORD
         MVC   WORK_PACK_IN,=X'F0212020'
         ED    WORK_PACK_IN,WORK_DWORD+6
         MVC   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06+12)(3),WORK_PACK_+
               IN+1
         MVI   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06)+03,C'.'
         MVI   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06)+07,C'.'
         MVI   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06)+11,C'.'
         BAL   R15,PRT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Issue a TCP/IP READ (get the URL)                            *
*                                                                     *
* ------------------------------------------------------------------- *
         MVC   WORK_TCPIP_FUNCTION,=CL16'READ'
         ITRACE ID=READ,                                               +
               DATA1=(WORK_NEW_SOCKET,2)
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         EZASMI TYPE=READ,                                             +
               S=WORK_NEW_SOCKET,                                      +
               NBYTE==A(URL_BUFFER_SIZE),                              +
               BUF=WORK_BUFFER,                                        +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB
         WAIT  ECB=WORK_TCPIP_ECB
         ITRACE ID=READ_RC,                                            +
               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +
               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)
         CLC   X_00000036,WORK_TCPIP_ERROR_NUMBER  CONNECTION RESET?
         BE    MAIN1050                            YES
         ICM   R5,15,WORK_TCPIP_RETURN_CODE        LENGTH RECEIVED
         BM    ERR0020                             ERROR
* ------------------------------------------------------------------- *
*                                                                     *
*              Build WEBURL block                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=NEWURL,                                             +
               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +
               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)
         LA    R0,WEBURLL+URL_PREFIX_L(,R5)
         GETMAIN RU,                                                   +
               LV=(0),                              GETMAIN URL        +
               LOC=ANY
         LR    R8,R1
         USING WEBURL,R8
         USING URL,WEBURL_URL
         ITRACE ID=NEWWEB,                                             +
               RDATA1=R8,                                              +
               RDATA2=R5
         MVC   WEBURL_EYE,C_WEBURL_ID
         XC    WEBURL_NEXT,WEBURL_NEXT
         LA    R0,WEBURLL+URL_PREFIX_L(,R5)
         ST    R0,WEBURL_LENGTH
         MVC   WEBURL_SOCKET,WORK_NEW_SOCKET
         XC    WEBURL_ECB,WEBURL_ECB
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         MVC   WEBURL_ID,COMM_URLS_RECEIVED
* ------------------------------------------------------------------- *
*                                                                     *
*        Translate the URL into EBCDIC                                *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=EBCDIC
         LA    R4,WORK_BUFFER
         LR    R3,R5
MAIN0030 DS    0H
         LR    R2,R3
         CH    R2,C_H256
         BL    MAIN0040
         LH    R2,C_H256
MAIN0040 DS    0H
         SR    R3,R2
         BCTR  R2,0
         EX    R2,TR_TO_EBCDIC
         EX    R2,TR_TO_UPPER
         LA    R4,1(R2,R4)
         LTR   R3,R3
         BH    MAIN0030
         MVC   PRT_MESSAGE_ID(MSG07_L),MSG07
         L     R1,WEBURL_ID                   URL ID
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         ED    PRT_MESSAGE_ID+(MSG07_URL_ID-MSG07)(L'MSG07_URL_ID),WORK+
               _DWORD+3
         L     R15,WEBURL_LENGTH              URL LENGTH
         CH    R15,=Y(L'MSG07_URL)            TOO LONG?
         BNH   MAIN0050                       NO
         LH    R15,=Y(L'MSG07_URL)            LIMIT LENGTH
MAIN0050 DS    0H
         BCTR  R15,0
         EX    R15,MVC_01
         BAL   R15,PRT0000
* ------------------------------------------------------------------- *
*                                                                     *
*        Make sure the data we got starts with "GET /" or "POST/"     *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0060 DS    0H
         CLC   C_GET,WORK_BUFFER              GET METHOD?
         BE    MAIN0070                       YES
         CLC   C_POST,WORK_BUFFER             POST METHOD?
         BNE   MAIN1010                       NO
* ------------------------------------------------------------------- *
*                                                                     *
*        Copy the URL to the WEBURL block "translating" those         *
*        pesky "%XX"S TO EBCDIC AS THE DATA IS BEING COPIED.          *
*                                                                     *
*        The copy starts immediately after the "GET /" or "POST/"     *
*        and ends with the first EBCDIC blank.                        *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0070 DS    0H
         ITRACE ID=COPYURL
         XC    URL_LENGTH,URL_LENGTH
         LA    R0,URL_TEXT                    CLEAR THE URL DATA
         LR    R1,R5                          LENGTH (FROM READ)
         SR    R14,R14
         SR    R15,R15
         MVCL  R0,R14
         LA    R1,URL_TEXT                    OUTPUT URL ADDRESS
         LA    R2,WORK_BUFFER+5               RAW BUFFER ADDRESS
         SR    R3,R3                          START OUTPUT LENGTH
         LA    R4,URL_LENGTH                  WERE LENGTH SHOULD GO
MAIN0080 DS    0H
         CLI   0(R2),C' '                     BLANK?
         BE    MAIN0130                       YES
         CLI   0(R2),C'%'                     HEX VALUE?
         BE    MAIN0090                       YES
         CLI   0(R2),C'?'                     START OF PARMS?
         BE    MAIN0100                       YES
         MVC   0(1,R1),0(R2)                  OTHERWISE COPY AS IS
         LA    R0,1                           LENGTH OF INPUT
         B     MAIN0110
MAIN0090 DS    0H
         MVC   WORK_PACK_IN(2),1(R2)          COPY THE HEX
         NC    WORK_PACK_IN(2),C_HEX1F        PREPARE FOR TRANSLATE
         TR    WORK_PACK_IN(2),C_CHAR_TO_HEX
         PACK  WORK_DWORD(2),WORK_PACK_IN(3)  PACK THE HEX VALUE
         TR    WORK_DWORD(1),ASCII_TO_EBCDIC  CONVERT TO EBCDIC
         MVC   0(1,R1),WORK_DWORD             COPY TO OUTPUT
         LA    R0,3                           LENGTH OF INPUT DATA
         B     MAIN0110
MAIN0100 DS    0H
         STH   R3,0(R4)                       SET LENGTH
         LA    R4,WEBURL_PARM_LENGTH          WERE LENGTH GOES NEXT
         LA    R3,1(R3)                       DISP TO PARM INFO
         STH   R3,WEBURL_PARM_DISP            SET DISPLACEMENT
         SR    R3,R3                          RESET LENGTH
         MVC   0(1,R1),0(R2)                  COPY THE '?'
         LA    R0,1                           LENGTH OF INPUT DATA
         B     MAIN0120                       BYPASS ADDING TO LENGTH
MAIN0110 DS    0H
         LA    R3,1(R3)                       UPDATE OUTPUT LENGTH
MAIN0120 DS    0H
         AR    R2,R0                          UPDATE INPUT ADDRESS
         LA    R1,1(R1)                       UPDATE OUTPUT ADDRESS
         SR    R5,R0                          COMPUTE LENGTH LEFT
         BH    MAIN0080
MAIN0130 DS    0H
         STCM  R3,3,0(R4)                     SET LENGTH
         ITRACE ID=URLINFO,                                            +
               DATA1=(URL_LENGTH,4),                                   +
               DATA2=(WEBURL_PARM_LENGTH,2)
         ITRACE ID=URLINFO2,                                           +
               DATA1=(URL_TEXT+00,8),                                  +
               DATA2=(URL_TEXT+08,8)
         ITRACE ID=URLINFO3,                                           +
               DATA1=(URL_TEXT+16,8),                                  +
               DATA2=(URL_TEXT+24,8)
         TM    COMM_TRACE_FLAGS,$TRACE_URLS
         BNO   MAIN0150
         ITRACE ID=LOGURL
         LH    R3,URL_LENGTH                  URL LENGTH
         AH    R3,WEBURL_PARM_LENGTH          PLUS LENGTH OF PARMS
         LA    R2,LOGBLOKL(R3)                PLUS LOGBLOK OVERHEAD
         GETMAIN RU,                                                   +
               LV=(R2),                                                +
               LOC=BELOW
         LR    R4,R1                          COPY STORAGE ADDRESS
         ITRACE ID=LOGURL,                                             +
               RDATA1=R4,                                              +
               RDATA2=R2
         USING LOGBLOK,R4                     DEFINE BASE
         XC    LOGBLOK(LOGBLOKL),LOGBLOK      INITIALIZE THE STORAGE
         MVC   LOG_EYE,=CL8'LOGBLOK'
         LA    R0,5(R3)                       + RDW + LENGTH OF ID
         STH   R0,LOG_DATA_LENGTH             SET DATA LENGTH
         MVI   LOG_ID,$LOG_URL                SET RECORD TYPE
         LA    R0,URL_TEXT                    URL DATA
         LR    R1,R3                          URL DATA & PARM LENGTH
         LA    R14,LOG_DATA                   ADDRESS OF DATA
         LR    R15,R3                         URL DATA & PARM LENGTH
         MVCL  R14,R0                         COPY DATA
MAIN0140 DS    0H
         L     R1,COMM_LOG_QUEUE              FIRST NOW ON CHAIN
         ST    R1,LOG_NEXT
         CS    R1,R4,COMM_LOG_QUEUE
         BC    4,MAIN0140
*        POST  COMM_LOG_WORK_ECB              WAKE UP THE LOGGING TASK
* ------------------------------------------------------------------- *
*                                                                     *
*        Determine which server should process this URL               *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0150 DS    0H
         ITRACE ID=FINDSERV,                                           +
               RDATA1=R8
         MVI   WEBURL_STATUS,$URL_LOOKUP
         XC    WEBURL_ECB,WEBURL_ECB
MAIN0160 DS    0H
         L     R1,COMM_URL_QUEUE
         ST    R1,WEBURL_NEXT
         CS    R1,R8,COMM_URL_QUEUE
         BC    4,MAIN0160
         ITRACE ID=POSTURL
         POST   COMM_URL_WORK_ECB
         ITRACE ID=WAITURL,                                            +
               RDATA1=R8
         WAIT   ECB=WEBURL_ECB
         ITRACE ID=SERVBLOK,                                           +
               RDATA1=R8,                                              +
               DATA2=(WEBURL_SERVBLOK,4)
         ICM   R9,15,WEBURL_SERVBLOK          SERVBLOK ADDRESS
         USING SERVBLOK,R9
         BZ    MAIN1000                       NO SERVER FOUND
         BM    MAIN0180                       LOCAL SERVER
* ------------------------------------------------------------------- *
*                                                                     *
*        Queue work to remote server                                  *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=REMOTE,                                             +
               RDATA1=R8,                                              +
               RDATA2=R9
         MVC   WEBURL_FROM_CLIENT(36),COMM_HTTPWEB_CLIENT
         MVC   WEBURL_TO_CLIENT(36),PARTNER_CLIENT
         MVC   PRT_MESSAGE_ID(MSG08_L),MSG08
         L     R1,WEBURL_ID                   URL ID
         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL
         ED    PRT_MESSAGE_ID+(MSG08_URL_ID-MSG08)(L'MSG08_URL_ID),WORK+
               _DWORD+3
         MVC   PRT_MESSAGE_ID+(MSG08_PARTNER_NAME-MSG08)(L'MSG08_PARTNE+
               R_NAME),PARTNER_CLIENT_NAME
         MVC   PRT_MESSAGE_ID+(MSG08_PARTNER_TASK-MSG08)(L'MSG08_PARTNE+
               R_TASK),PARTNER_CLIENT_TASK
         BAL   R15,PRT0000
         BAL   R7,GIVE0000
MAIN0170 DS    0H
         L     R1,SERVER_URL                  1ST URL
         ST    R1,WEBURL_NEXT
         CS    R1,R8,SERVER_URL               ADD NEW TO QUEUE
         BC    4,MAIN0170
         ITRACE ID=POST_REM
         POST  SERVER_WORK_ECB                WAKE UP SERVER SUBTASK
         B     MAIN0000                       ISSUE ANOTHER ACCEPT
* ------------------------------------------------------------------- *
*                                                                     *
*        Queue work to local server                                   *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0180 DS    0H
         MVC   WEBURL_FROM_CLIENT(36),COMM_HTTPWEB_CLIENT
         MVC   WEBURL_TO_CLIENT(36),COMM_HTTPLOCL_CLIENT
         ITRACE ID=LOCAL
         BAL   R7,GIVE0000
MAIN0190 DS    0H
         L     R1,COMM_LOCAL_URL_QUEUE        1ST URL
         ST    R1,WEBURL_NEXT
         CS    R1,R8,COMM_LOCAL_URL_QUEUE
         BC    4,MAIN0190
         ITRACE ID=POSTLOCL
         POST  COMM_LOCAL_WORK_ECB            WAKE UP LOCAL SUBTASK
         B     MAIN0000                       ISSUE ANOTHER ACCEPT
* ------------------------------------------------------------------- *
*                                                                     *
*        No server was found for this URL                             *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1000 DS    0H
         ITRACE ID=NOSERVER
         MVC   WORK_BUFFER(MSG_NO_SERVERL),MSG_NO_SERVER
         TR    WORK_BUFFER(MSG_NO_SERVERL),EBCDIC_TO_ASCII
         MVC   WORK_BUFFER_LENGTH,=A(MSG_NO_SERVERL)
         B     MAIN1020
* ------------------------------------------------------------------- *
*                                                                     *
*        The buffer we receive from a web user should begin with      *
*        the "method" ('GET /' or 'POST/').  Otherwise we don't       *
*        know how to get the URL from the buffer.                     *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1010 DS    0H
         ITRACE ID=BADMETH
         MVC   WORK_BUFFER(MSG_400_L),MSG_400
         TR    WORK_BUFFER(MSG_400_L),EBCDIC_TO_ASCII
         MVC   WORK_BUFFER_LENGTH,=A(MSG_400_L)
* ------------------------------------------------------------------- *
*                                                                     *
*        Send the response                                            *
*        CLOSE the SOCKET                                             *
*        FREEMAIN the WEBURL block                                    *
*        Go issue another ACCEPT                                      *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1020 DS    0H
         MVC   WORK_TCPIP_FUNCTION,=CL16'WRITE'
         LA    R2,WORK_BUFFER
         L     R3,WORK_BUFFER_LENGTH
         ITRACE ID=WRITE_A,                                            +
               RDATA1=R8,                                              +
               DATA2=(WEBURL_SOCKET,2)
MAIN1030 DS    0H
         ITRACE ID=WRITE_B,                                            +
               RDATA1=R2,                                              +
               RDATA2=R3
         ST    R3,WORK_LENGTH
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         EZASMI TYPE=WRITE,                                            +
               S=WEBURL_SOCKET,                                        +
               NBYTE=WORK_LENGTH,                                      +
               BUF=(R2),                                               +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_RETURN_CODE,                           +
               ECB=WORK_TCPIP_ECB
         WAIT  ECB=WORK_TCPIP_ECB
         ITRACE ID=WRITE_RC,                                           +
               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +
               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)
         TM    WORK_TCPIP_RETURN_CODE,X'80'
         BO    ERR0020
         A     R2,WORK_TCPIP_RETURN_CODE
         S     R3,WORK_TCPIP_RETURN_CODE
         BNZ   MAIN1030
         ITRACE ID=CLOSE,                                              +
               DATA1=(WEBURL_SOCKET,2)
         MVC   WORK_TCPIP_FUNCTION,=CL16'CLOSE'
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         EZASMI TYPE=CLOSE,                                            +
               S=WEBURL_SOCKET,                                        +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB
         WAIT  ECB=WORK_TCPIP_ECB
         TM    WORK_TCPIP_RETURN_CODE,X'80'
         BO    ERR0020
         L     R0,WEBURL_LENGTH
         ITRACE ID=FREE_URL,                                           +
               RDATA1=R8,                                              +
               RDATA2=R0
         FREEMAIN RU,                                                  +
               A=(R8),                                                 +
               LV=(0)
         B     MAIN0000                       ISSUE ANOTHER ACCEPT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN1050 DS    0H
         ITRACE ID=RESET
         ITRACE ID=CLOSE,                                              +
               DATA1=(WEBURL_SOCKET,2)
         MVC   WORK_TCPIP_FUNCTION,=CL16'CLOSE'
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         EZASMI TYPE=CLOSE,                                            +
               S=WEBURL_SOCKET,                                        +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB
         WAIT  ECB=WORK_TCPIP_ECB
         ITRACE ID=CLOSE_RC,                                           +
               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +
               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)
         B     MAIN0000                       ISSUE ANOTHER ACCEPT
* ------------------------------------------------------------------- *
*                                                                     *
*    What's going on here...                                          *
*      this subtask received a URL from a web user                    *
*      this subtask GETMAIN'd a WEBURL block, translated the URL      *
*         into EBCDIC, and translated the '%' characters.             *
*      this subtask then determined which server should process       *
*         the URL                                                     *
*      the WEBURL block was placed on the work queue for that server's*
*         subtask                                                     *
*      The server's subtask will send the URL to the remote server.   *
*      The server will process the request and send back a resopnse.  *
*         Note that this response is only to notify us that it got    *
*         the URL and has issued the TAKESOCKET.                      *
*      This task then CLOSEs the SOCKET.                              *
*                                                                     *
*      Now this subtask needs to issue a WAIT to complete the         *
*      GIVESOCKET, CLOSE the socket,  and FREEMAIN the WEBURL block.  *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN2000 DS    0H
         XC    COMM_WEB_WORK_ECB,COMM_WEB_WORK_ECB
         ITRACE ID=CMPLT_Q,                                            +
               DATA1=(COMM_WEB_COMPLETED,4)
MAIN2020 DS    0H
         SR    R1,R1
         ICM   R8,15,COMM_WEB_COMPLETED
         BZ    MAIN0020
         CS    R8,R1,COMM_WEB_COMPLETED
         BC    4,MAIN2020
MAIN2030 DS    0H
         ITRACE ID=GIVEWAIT,                                           +
               RDATA1=R8,                                              +
               DATA2=(WEBURL_ID,4)
         WAIT  ECB=WEBURL_ECB
         ITRACE ID=CLOSE,                                              +
               DATA1=(WEBURL_ID,4)
         XC    WEBURL_ECB,WEBURL_ECB
         EZASMI TYPE=CLOSE,                                            +
               S=WEBURL_SOCKET,                                        +
               RETCODE=WEBURL_RETURN_CODE,                             +
               ERRNO=WEBURL_RETURN_CODE,                               +
               ECB=WEBURL_ECB
         ITRACE ID=WAIT
         WAIT  ECB=WEBURL_ECB
         TM    WEBURL_RETURN_CODE,X'80'
         BO    ERR0010
         L     R2,WEBURL_NEXT
         L     R0,WEBURL_LENGTH
         ITRACE ID=FREE_URL,                                           +
               RDATA1=R8,                                              +
               RDATA2=R0
         FREEMAIN RU,                                                  +
               A=(R8),                                                 +
               LV=(0)
         LTR   R8,R2
         BNZ   MAIN2030
         B     MAIN0020
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
GIVE0000 DS    0H
         ITRACE ID=GIVESOKT,                                           +
               DATA1=(WEBURL_SOCKET,2),                                +
               DATA2=(WEBURL_ID,4)
         ITRACE ID=GIVEFROM,                                           +
               DATA1=(WEBURL_FROM_CLIENT_NAME,8),                      +
               DATA2=(WEBURL_FROM_CLIENT_TASK,8)
         ITRACE ID=GIVETO,                                             +
               DATA1=(WEBURL_TO_CLIENT_NAME,8),                        +
               DATA2=(WEBURL_TO_CLIENT_TASK,8)
         XC    WEBURL_ECB,WEBURL_ECB
         MVC   WORK_TCPIP_FUNCTION,=CL16'GIVESOCKET'
         EZASMI TYPE=GIVESOCKET,                                       +
               S=WEBURL_SOCKET,                                        +
               CLIENT=WEBURL_TO_CLIENT,                                +
               ECB=WEBURL_ECB,                                         +
               RETCODE=WEBURL_RETURN_CODE,                             +
               ERRNO=WEBURL_ERROR_NUMBER
         BR    R7
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TERM0000 DS    0H
         ITRACE ID=CLOSE
         MVC   WORK_TCPIP_FUNCTION,=CL16'CLOSE'
         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB
         EZASMI TYPE=CLOSE,                                            +
               S=WORK_SOCKET_DESCRIPTOR,                               +
               RETCODE=WORK_TCPIP_RETURN_CODE,                         +
               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +
               ECB=WORK_TCPIP_ECB
         WAIT  ECB=WORK_TCPIP_ECB
         BAL   R15,INFO0000

         ITRACE ID=TERMAPI
         MVC   WORK_TCPIP_FUNCTION,=CL16'TERMAPI'
         EZASMI TYPE=TERMAPI,                                          +
               TASK=WORK_TCPIP_TASK
         BAL   R15,INFO0000
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
INFO0000 DS    0H
         L     R14,WORK_LINK_CURRENT
         ST    R15,0(R14)
         LA    R14,4(R14)
         ST    R14,WORK_LINK_CURRENT
         MVC   PRT_MESSAGE_ID(MSG90_L),MSG90
         MVC   PRT_MESSAGE_ID+(MSG90_FUNCTION-MSG90)(L'MSG90_FUNCTION),+
               WORK_TCPIP_FUNCTION
         UNPK  PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(9),WORK_TCPIP_R+
               ETURN_CODE(5)
         MVZ   PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXZERO
         TR    PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXCHAR
         MVI   PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)+8,C' '
         L     R1,WORK_TCPIP_ERROR_NUMBER
         CVD   R1,WORK_DWORD
         ED    PRT_MESSAGE_ID+(MSG90_ERROR_NUMBER-MSG90)(L'MSG90_ERROR_+
               NUMBER),WORK_DWORD+5
         BAL   R15,PRT0000
         L     R14,WORK_LINK_CURRENT
         SH    R14,C_H4
         ST    R14,WORK_LINK_CURRENT
         L     R15,0(R14)
         CLI   WORK_TCPIP_RETURN_CODE,X'FF'
         BNER  R15
         DC    H'0'
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         L     R14,WORK_LINK_CURRENT
         ST    R15,0(R14)
         LA    R14,4(R14)
         ST    R14,WORK_LINK_CURRENT
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS
PRT0010  DS    0H
         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE
         ST    R14,PRT_NEXT-PRTBLOK(R1)                       '
         CS    R14,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK
         L     R14,WORK_LINK_CURRENT
         SH    R14,C_H4
         ST    R14,WORK_LINK_CURRENT
         L     R15,0(R14)
         BR    R15
* ------------------------------------------------------------------- *
*        Error routines                                               *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         DC    H'1'
ERR0020  DS    0H
         BAL   R15,INFO0000
         DC    H'2'
ERR0030  DS    0H
         DC    H'3'
ERR0040  DS    0H
         DC    H'4'
* ------------------------------------------------------------------- *
*        Exit                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         ICM   R1,15,WORK_TCPIP_GWA
         BZ    EXIT0010
         FREEMAIN RU,                                                  +
               A=(1),                                                  +
               LV=GWALENTH
EXIT0010 DS    0H
         LR    R1,R13                         COPY SAVE AREA ADDRESS
         L     R13,4(R13)                     CALLER'S R13
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORKL
         LM    R14,R12,12(R13)
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER

* ------------------------------------------------------------------- *
TR_TO_EBCDIC TR    0(0,R4),ASCII_TO_EBCDIC
TR_TO_UPPER  OC    0(0,R4),COMM_BLANKS
MVC_01       MVC   PRT_MESSAGE_ID+(MSG07_URL-MSG07)(0),WORK_BUFFER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
C_F2                     DC    F'2'
C_F4                     DC    F'4'

C_H4                     DC    H'4'
C_H256                   DC    H'256'
C_AF_INET                DC    X'0002'
C_GET                    DC    C'GET /'
C_HEXCHAR                DC    C'0123456789ABCDEF'
C_HEXZERO                DC    XL8'0000000000000000'
C_POST                   DC    C'POST/'
C_PRT_ID                 DC    CL8'PRTBLOK'
C_WEBURL_ID              DC    CL8'WEBURL'
C_HTTPWEB                DC    CL8'HTTPWEB '
C_HEX1F                  DC    8X'1F'
C_CHAR_TO_HEX            DC    X'000A0B0C0D0E0F000000000000000000'
                         DC    X'00102003040506070809000000000000'

X_00000036               DC    X'00000036'    CONNECTION RESET

MSG01                    DS    0C
                         DC    CL15'HTTPWEB01I'
                         DC    C'Issuing INITAPI'
MSG01_L                  EQU   *-MSG01
MSG02                    DS    0C
                         DC    CL15'HTTPWEB02I'
                         DC    C'Creating socket'
MSG02_L                  EQU   *-MSG02
MSG03                    DS    0C
                         DC    CL15'HTTPWEB03I'
                         DC    C'BINDing to port '
MSG03_PORT               DC    CL5' '
MSG03_L                  EQU   *-MSG03
MSG04                    DS    0C
                         DC    CL15'HTTPWEB04I'
                         DC    C'LISTENing'
MSG04_L                  EQU   *-MSG04
MSG05                    DS    0C
                         DC    CL15'HTTPWEB05I'
                         DC    C'ACCEPTing connections'
MSG05_L                  EQU   *-MSG05
MSG06                    DS    0C
                         DC    CL15'HTTPWEB06I'
                         DC    C'Connection'
MSG06_ID                 DC    X'402020206b2020206b202120'
                         DC    C' arrived from '
MSG06_IP_ADDRESS         DC    CL15' '
MSG06_L                  EQU   *-MSG06
MSG07                    DS    0C
                         DC    CL15'HTTPWEB07I'
                         DC    C'URL ID '
MSG07_URL_ID             DC    X'40202020202020202120'
                         DC    C' assigned to:'
MSG07_URL                DC    CL100' '
MSG07_L                  EQU   *-MSG07
MSG08                    DS    0C
                         DC    CL15'HTTPWEB08I'
                         DC    C'URL '
MSG08_URL_ID             DC    X'40202020202020202120'
                         DC    C' processed by '
MSG08_PARTNER_NAME       DC    CL8' '
                         DC    C' '
MSG08_PARTNER_TASK       DC    CL8' '
MSG08_L                  EQU   *-MSG08
MSG90                    DS    0C
                         DC    CL15'HTTPWEB90I'
                         DC    C'TCP/IP function '
MSG90_FUNCTION           DC    CL16' '
                         DC    C'  Return code: '
MSG90_RETURN_CODE        DC    CL8' '
                         DC    C'  Error number:'
MSG90_ERROR_NUMBER       DC    X'402020202120'
MSG90_L                  EQU   *-MSG90

MSG_400                  DS    0C
                         DC    C'HTTP/1.0 400  '
                         DC    AL1($LINE_FEED)
MSG_400_METHOD           DC    CL4' '
                         DC    C'  Unrecognized method'
                         DC    AL1($LINE_FEED)
MSG_400_L                EQU   *-MSG_400

MSG_NO_SERVER            DS    0C
                         DC    C'HTTP/1.0 200 OK'
                         DC    AL1($LINE_FEED)
                         DC    C'Content-type: text/html'
                         DC    AL1($LINE_FEED)
                         DC    AL1($LINE_FEED)
                         DC    AL1($LINE_FEED)
                         DC    C'<HTML>'
                         DC    C'No server for this URL'
                         DC    C'</HTML>'
MSG_NO_SERVERL           EQU   *-MSG_NO_SERVER

                         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA                 DSECT
                         STDSAVE  DSECT=NO
WORK_ID                  DS   CL8
WORK_DWORD               DS   D
WORK_MAX_SOCKET          DS   F
WORK_BUFFER_LENGTH       DS   F
WORK_URL_LENGTH          DS   F
WORK_LENGTH              DS   F

WORK_PACK_IN             DS   XL4

WORK_RC                  DS   H

WORK_SOCKET_DESCRIPTOR   DS   H
WORK_NEW_SOCKET          DS   H

                         DS   0F
WORK_SOCKET_STRUCTURE    DS   0XL16
WORK_SOCKET_FAMILY       DS   AL2           FAMILY (ALWAYS = 2)
WORK_SOCKET_PORT         DS   XL2           PORT NUMBER
WORK_SOCKET_CLIENT_IP    DS   XL4           CLIENT'S IP ADDRESS
                         DS   XL8           RESERVED

WORK_TCPIP_ECB           DS   F
                         DS   XL100         REQUIRED BY TCP/IP

                         CLIENT PREFIX=WORK
WORK_CLIENTL             EQU  *-WORK_CLIENT

WORK_TCPIP_ERROR_NUMBER  DS   F
WORK_TCPIP_FUNCTION      DS   CL16
WORK_TCPIP_GWA           DS   F
WORK_TCPIP_RETURN_CODE   DS   F
WORK_TCPIP_TASK          EZASMI TYPE=TASK,STORAGE=CSECT

WORK_WAIT_LIST           DS   0F            WAIT LIST
WORK_WAIT_ECB_1          DS   F             COMM_TERMINATION_ECB
WORK_WAIT_ECB_2          DS   F             TCPIP_ECB

WORK_LINK_CURRENT        DS   A
WORK_LINK_SAVE           DS   16F

                         PRTBLOK  DSECT=NO

WORK_BUFFER              DS   0F,(BUFFER_SIZE)X
WORKL                    EQU  *-WORKAREA
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON  MAIN,TYPE=DSECT
         WEBURL
         URL
         LOGBLOK
         SERVBLOK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         EZASMI TYPE=GLOBAL,STORAGE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                COPY   REGEQU
BUFFER_SIZE     EQU    1000
$LINE_FEED      EQU    X'0A'
         END    HTTPWEB
