         TITLE 'HTTPLOG    PRINT SUBTASK'
*---------------------------------------------------------------------*
*                                                                     *
*  Module name: HTTPLOG                                               *
*                                                                     *
*   This subtask performs logging for the HTTP main address space.    *
*                                                                     *
*   The HTTP server is designed to run as multiple address spaces.    *
*   The server address spaces can request information to be written   *
*   to the main address space's log.  This allows main address space  *
*   and all the server spaces to have a common log of events.         *
*                                                                     *
*   A secondary use is that server spaces can use the log for         *
*   debugging.                                                        *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
HTTPLOG  CSECT
HTTPLOG  AMODE 31
HTTPLOG  RMODE ANY
         USING HTTPLOG,R12                    DEFINE BASE
         USING HTTPCOMM,R11                   DEFINE BASE
         STM   R14,R12,12(R13)                CHAIN REGISTERS
         LR    R12,R15                        COPY ENTRY POINT ADDRESS
         B     LOG0000
         DC    CL8'HTTPLOG'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
LOG0000  DS    0H
         L     R11,0(R1)                      LOAD HTTPCOMM'S ADDRESS
         ST    R12,COMM_HTTPLOG_ADDRESS
         GETMAIN RU,                          STORAGE FOR WORK AREA    +
               LV=WORK_AREA_LENGTH,                                    +
               LOC=BELOW
         ST    R13,4(R1)                      CHAIN PREVIOUS AREA
         ST    R1,8(R13)                      CHAIN OUR AREA
         LR    R13,R1                         COPY WORK AREA ADDRESS
         USING WORKAREA,R13
         ST    R13,COMM_LOG_WORK_AREA
         ITRACE ID=INIT
         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE DCB
         MVC   WORK_OC_PARMS(OPENL),OPENI
         OPEN  (WORK_DCB,OUTPUT),                                      +
               MF=(E,WORK_OC_PARMS),                                   +
               MODE=31
         B     LOG0030                        FORCE A CHECK OF QUEUE
LOG0010  DS    0H
         TM    COMM_EOJ,$EOJ_PHASE_3          SHUTDOWN PHASE 3?
         BO    EXIT0000                       YES.. IT'S MILLER TIME
         TM    COMM_LOG_WORK_ECB,X'40'        ECB ALREADY POSTED?
         BO    LOG0020                        GET BUSY
         ITRACE ID=WORKWAIT                   WAITING FOR WORK
         WAIT  ECB=COMM_LOG_WORK_ECB          WAIT FOR WORK TO DO ECB
         ITRACE ID=WOKEUP
LOG0020  DS    0H
         XC    COMM_LOG_WORK_ECB,COMM_LOG_WORK_ECB
LOG0030  DS    0H
         SR    R1,R1                          CLEAR REGISTER
         ICM   R2,15,COMM_LOG_QUEUE
         BZ    LOG0010
         CS    R2,R1,COMM_LOG_QUEUE
         BC    4,LOG0030
         USING LOGBLOK,R10                    DEFINE BASE
         ITRACE ID=HAVEQ,                     WE HAVE THE QUEUE        +
               RDATA1=R2                      .. FIRST (LAST) BLOCK
         LR    R3,R2                          COPY ADDRESS
         LA    R1,4                           INITIALIZE GETMAIN LENGTH
LOG0050  DS    0H
         ICM   R3,15,LOG_NEXT-LOGBLOK(R3)
         BZ    LOG0060                        NEXT BLOCK'S ADDRESS
         ITRACE ID=VEC1,                                               +
               RDATA1=R3,                                              +
               RDATA2=R1
         LA    R1,4(R1)                       ADD TO VECTOR LENGTH
         B     LOG0050                        LOOP
LOG0060  DS    0H
         ITRACE ID=GETVEC,                                             +
               RDATA1=R1                      .. SIZE OF VECTOR LIST
         ST    R1,WORK_VECTOR_SIZE            SAVE VECTOR SIZE
         GETMAIN RU,                          GETMAIN STORAGE          +
               LV=(1),                                                 +
               LOC=ANY
         ST    R1,WORK_VECTOR_ADDRESS         SAVE VECTOR ADDRESS
         ITRACE ID=VECADDR,                                            +
               RDATA1=R1                      .. VECTOR ADDRESS
LOG0070  DS    0H
         ITRACE ID=BLDVEC,                                             +
               RDATA1=R1,                     .. CURRENT IN VECTOR     +
               RDATA2=R2                      .. LOGBLOK'S ADDRESS
         ST    R2,0(R1)                       SET ADDRESS
         ST    R1,WORK_VECTOR_CURRENT
         LA    R1,4(R1)                       NEXT
         ICM   R2,15,LOG_NEXT-LOGBLOK(R2)
         BNZ   LOG0070
LOG0080  DS    0H
         L     R1,WORK_VECTOR_CURRENT
         L     R10,0(R1)                      LOGBLOK'S ADDRESS
         PUT   WORK_DCB,LOG_DATA_LENGTH
         LH    R0,LOG_DATA_LENGTH
         AH    R0,=Y(LOGBLOKL)
         ITRACE ID=FREELOG,                                            +
               RDATA1=R10,                                             +
               RDATA2=R0
         FREEMAIN RU,                                                  +
               A=(R10),                                                +
               LV=(0)
         L     R1,WORK_VECTOR_CURRENT         CURRENT ADDRESS IN VECTOR
         C     R1,WORK_VECTOR_ADDRESS         AT FIRST ENTRY?
         BE    LOG0210                        YES
         SH    R1,H4                          BACK UP 1 ENTRY
         ST    R1,WORK_VECTOR_CURRENT         SAVE CURRENT ADDRESS
         B     LOG0080                        PROCESS THIS LOGBLOK
LOG0210  DS    0H
         L     R0,WORK_VECTOR_SIZE            VECTOR SIZE
         ITRACE ID=FREEVEC,                                            +
               RDATA1=R1,                                              +
               RDATA2=R0
         FREEMAIN RU,                         FREE THE VECTOR          +
               A=(1),                                                  +
               LV=(0)
         B     LOG0020
* ------------------------------------------------------------------- *
*        EXIT                                                         *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         MVC   WORK_OC_PARMS(CLOSEL),CLOSEI   COPY CLOSE LIST FORM
         CLOSE WORK_DCB,                      CLOSE DCB                +
               MF=(E,WORK_OC_PARMS),                                   +
               MODE=31
         LR    R1,R13                         COPY WORK AREA ADDRESS
         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=WORK_AREA_LENGTH
         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680
         SR    R15,R15                        RETURN CODE               ASE01690
         BR    R14                            RETURN TO CALLER          ASE01700
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
* ------------------------------------------------------------------- *
H4       DC    H'4'
DCBI     DCB   DSORG=PS,                                               +
               DDNAME=LOG,                                             +
               RECFM=VB,                                               +
               LRECL=32000,                                            +
               BLKSIZE=32004,                                          +
               MACRF=PM
DCBL     EQU   *-DCBI
OPENI    OPEN  (*,OUTPUT),MODE=31,MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE (*),MODE=31,MF=L
CLOSEL   EQU   *-CLOSEI
         LTORG
* ------------------------------------------------------------------- *
*                                                                     *
*        WORK AREAS                                                   *
*                                                                     *
* ------------------------------------------------------------------- *
WORKAREA              DSECT
                      STDSAVE DSECT=NO
WORK_DCB              DS  0A,(DCBL)X RESERVE SPACE FOR DCB
WORK_OC_PARMS         DS  (OPENL)X
WORK_VECTOR_ADDRESS   DS  A
WORK_VECTOR_SIZE      DS  A
WORK_VECTOR_CURRENT   DS  A
WORK_AREA_LENGTH      EQU *-WORKAREA
* ------------------------------------------------------------------- *
*              COMMON DATA MAP                                        *
* ------------------------------------------------------------------- *
                      COMMON MAIN,TYPE=DSECT
* ------------------------------------------------------------------- *
*              LOG REQUEST BLOCK                                      *
* ------------------------------------------------------------------- *
               LOGBLOK
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  HTTPLOG
