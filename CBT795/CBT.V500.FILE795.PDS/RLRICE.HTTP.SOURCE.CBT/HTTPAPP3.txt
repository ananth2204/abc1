          MACRO
          LOG &T
          LCLA &L
&L        SETA K'&T-2
          MVC  WORK_PRINT_BUFFER(&L),=C&T
          BAL  R11,LOG0000
          MEND
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*        Display VTOC                                                 *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
HTTPAPP3 CSECT
HTTPAPP3 AMODE 31
HTTPAPP3 RMODE 24
         STM   R14,R12,12(R13)                SAVE REGISTERS
         LR    R12,R15                        SET BASE REGISTER
         USING HTTPAPP3,R12                   DEFINE PROGRAM BASE
         B     INIT0000
MODID    DC    CL8'HTTPAPP3'
         DC    CL8'&SYSDATE'
         DC    CL6'&SYSTIME'
INIT0000 DS    0H
         GETMAIN RU,                                                   +
               LV=WORKL,                                               +
               LOC=BELOW
         ST    R1,8(R13)
         ST    R13,4(R1)
         LR    R13,R1
         USING WORK,R13
         USING S99RB,WORK_S99RB
         USING JFCB,WORK_JFCB
         LOAD  EP=HTTPSUB
         ST    R0,WORK_HTTPSUB
         ST    R0,HTTP_HTTPSUB
         MVC   WORK_PRINTDCB(PRINTDCBL),PRINTDCBI
         MVC   WORK_VTOCDCB(VTOCDCBL),VTOCDCBI
         MVC   WORK_OPEN(OPENL),OPENI
         MVC   WORK_CLOSE(CLOSEL),CLOSEI
         MVC   WORK_EXLST(EXLSTL),EXLSTI
         LA    R10,WORK_VTOCDCB
         USING IHADCB,R10
         OPEN  (WORK_PRINTDCB,OUTPUT),                                 +
               MF=(E,WORK_OPEN)
         MVI   WORK_PRINT_BUFFER-1,C' '
         MVC   WORK_PRINT_BUFFER,WORK_PRINT_BUFFER-1
         MVI   WORK_BUFFER-1,C' '
         MVC   WORK_BUFFER,WORK_BUFFER-1
         MVC   WORK_BUFFER(HEADL),HEADI
         PUT   WORK_PRINTDCB,WORK_BUFFER
         MVC   WORK_BUFFER,WORK_BUFFER-1
         MVC   WORK_TEXT(TEXTL),TEXTI
         LA    R1,WORK_S99RB
         ST    R1,WORK_S99RBA
         OI    WORK_S99RBA,X'80'             FLAG END-OF-LIST
         LA    R1,WORK_DD_TEXT
         ST    R1,WORK_TEXT_ADDR1
         LA    R1,WORK_UNIT_TEXT
         ST    R1,WORK_TEXT_ADDR2
         LA    R1,WORK_VOLSER_TEXT
         ST    R1,WORK_TEXT_ADDR3
         LA    R1,WORK_DISP_TEXT
         ST    R1,WORK_TEXT_ADDR4
         OI    WORK_TEXT_ADDR4,X'80'         FLAG END-OF-LIST
         MVI   S99RBLN,S99RBEND-S99RB
         LA    R1,WORK_TEXT_ADDR1
         ST    R1,S99TXTPP
         MVC   WORK_CCW1(CCW1L),CCW1I
         MVC   WORK_CCW2(CCW2L),CCW2I
         MVC   WORK_CCW3(CCW3L),CCW3I
         LA    R1,WORK_IOB
         ST    R1,DCBIOBAD                   SET IOB ADDRESS
         USING IOB,WORK_IOB
         STCM  R10,7,IOBDCBPB                SET DCB ADDRESS IN IOB
         LA    R1,WORK_ECB                   I/O ECB ADDRESS
         STCM  R1,7,IOBECBPB                 SET ECB ADDRESS
         MVI   IOBFLAG1,X'02'                SET FLAG BYTE 1
         LA    R1,WORK_EXLST                 EXIT LIST
         STCM  R1,7,DCBEXLSA                 RELOCATE EXIT LIST
         LA    R1,WORK_JFCB                  JFCB
         STCM  R1,7,WORK_EXLST+1             RELOCATE JFCB
         LA    R1,IOBCC                      DISK ADDRESS
         STCM  R1,7,WORK_CCW1+1              RELOCATE ADDRESS
         LA    R1,WORK_CCW1                  SEARCH CCW ADDRESS
         STCM  R1,7,WORK_CCW2+1              RELOCATE ADDRESS IN TIC
         LA    R1,WORK_IO_AREA               I/O AREA ADDRESS
         STCM  R1,7,WORK_CCW3+1              RELOCATE I/O AREA IN READ
         LA    R1,WORK_CCW1
         ST    R1,IOBSTART
         LA    R1,WORK_ECB
         STCM  R1,7,IOBECBPB
         SR    R1,R1
* ------------------------------------------------------------------- *
*     Initialize TCP/IP environment                                   *
* ------------------------------------------------------------------- *
         MVI   HTTP_FUNCTION,$HTTP_INIT
         LA    R1,HTTP_PARMS
         L     R15,HTTP_HTTPSUB
         BALR  R14,R15
         CLI   HTTP_RETURN_CODE,$HTTP_OK
         BNE   ERR0010
* ------------------------------------------------------------------- *
*     Connect to MAIN                                                 *
* ------------------------------------------------------------------- *
         MVC   HTTP_PORT,OUR_PORT
         MVI   HTTP_FUNCTION,$HTTP_CONNECT
         LA    R1,HTTP_PARMS
         L     R15,HTTP_HTTPSUB
         BALR  R14,R15
         CLI   HTTP_RETURN_CODE,$HTTP_OK
         BNE   ERR0020
* ------------------------------------------------------------------- *
*     Register the URL                                                *
* ------------------------------------------------------------------- *
         LA    R1,OUR_URL
         ST    R1,HTTP_DATA
         LA    R1,OUR_URLL
         ST    R1,HTTP_LENGTH
         MVI   HTTP_FUNCTION,$HTTP_DEFINE_PRFX
         LA    R1,HTTP_PARMS
         L     R15,HTTP_HTTPSUB
         BALR  R14,R15
         CLI   HTTP_RETURN_CODE,$HTTP_OK
         BNE   ERR0030
* ------------------------------------------------------------------- *
*                                                                     *
*     Wait for the main address space to get a reference to our URL   *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         LOG   'GET URL'
         MVI   HTTP_FUNCTION,$HTTP_GET_URL    GET URL
         LA    R1,HTTP_PARMS
         L     R15,HTTP_HTTPSUB
         BALR  R14,R15
         CLI   HTTP_RETURN_CODE,$HTTP_CONSOLE
         BE    EXIT0000
         CLI   HTTP_RETURN_CODE,$HTTP_MAIN_SHUTDOWN
         BE    EXIT0000                       YES
         CLI   HTTP_RETURN_CODE,$HTTP_OK
         BNE   ERR0040
* ------------------------------------------------------------------- *
*                                                                     *
*     We have a URL                                                   *
*                                                                     *
*     The URL looks like "HTTP://server/vtoc/volser"                  *
*                                                                     *
*     Log the URL                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
         LOG   'HAVE A URL'
         L     R1,HTTP_LENGTH                URL LENGTH
         L     R2,HTTP_DATA                  DATA ADDRESS
         CVD   R1,WORK_DWORD
         MVC   WORK_BUFFER,WORK_BUFFER-1
         MVC   WORK_BUFFER(MSG04L),MSG04     COPY MESSAGE
         ED    WORK_BUFFER+(MSG04_LENGTH-MSG04)(L'MSG04_LENGTH),WORK_DW++
               ORD+5
         CH    R1,=Y(L'MSG04_TEXT)           TOO LONG?
         BNH   MAIN0010                      NO
         LH    R1,=Y(L'MSG04_TEXT)           LIMIT LENGTH
MAIN0010 DS    0H
         BCTR  R1,0
         EX    R1,URL_MVC                    COPY THE URL
         PUT   WORK_PRINTDCB,WORK_BUFFER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NI    WORK_FLAGS,255-$VOLSER        RESET FLAG
         L     R1,HTTP_DATA                  URL'S ADDRESS
         L     R2,HTTP_LENGTH                URL LENGTH
MAIN0020 DS    0H
         SR    R3,R3                         INITIALIZE FOR COUNTER
MAIN0030 DS    0H
         CLI   0(R1),C'/'                    DELIMITER?
         BE    MAIN0040                      YES
         CLI   0(R1),C' '                    END OF URL
         BE    MAIN0050                      YES
         CLI   0(R1),X'00'                   END OF URL?
         BE    MAIN0050                      YES
         LA    R1,1(,R1)                     NEXT
         LA    R3,1(,R3)                     PLUS 1
         BCT   R2,MAIN0030
         B     ERR0050                       NO VOLSER
MAIN0040 DS    0H
         TM    WORK_FLAGS,$VOLSER            HAVE VOLSER?
         BO    MAIN0060                      YES
         OI    WORK_FLAGS,$VOLSER            SET FLAG
         LA    R1,1(,R1)                     SKIP DELIMITER
         MVC   WORK_VOLSER,0(R1)             COPY VOLSER
         BCT   R2,MAIN0020                   UPDATE LENGTH REMAINING
         B     ERR0050                       NO VOLSER
MAIN0050 DS    0H
         TM    WORK_FLAGS,$VOLSER            HAVE VOLSER?
         BNO   ERR0050                       NO
MAIN0060 DS    0H
         CH    R3,H6                         CORRECT LENGTH?
         BNE   ERR0060                       NO
* ------------------------------------------------------------------- *
*        Allocate the device                                          *
* ------------------------------------------------------------------- *
MAIN0070 DS    0H
         LOG   'ALLOCATE DEVICE'
         NI    WORK_TEXT_ADDR1,X'7F'         RESET END-OF-LIST
         MVI   S99VERB,S99VRBAL              SET VERB
         LA    R1,WORK_S99RBA                ADDRESS OF ADDRESS
         SVC   99
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   ERR0080                       NO
* ------------------------------------------------------------------- *
*        OPEN THE VTOC                                                *
* ------------------------------------------------------------------- *
         LOG   'RDJFCB'
         RDJFCB ((R10)),                                               +
               MF=(E,WORK_OPEN)
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   ERR0090                       NO
         MVI   JFCBDSNM,X'04'
         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM
         OI    JFCBTSDM,JFCNWRIT             NO WRITE-BACK
         LOG   'OPEN VTOC'
         OPEN  ((R10),INPUT),                OPEN THE VTOC             +
               MF=(E,WORK_OPEN),                                       +
               TYPE=J
         ICM   R1,7,DCBDEBA
         USING DEBBASIC,R1
         LA    R1,DEBBASND
         DROP  R1
         USING DEBDASD,R1
         MVC   WORK_DISK_ADDR,DEBSTRCC       COPY STARTING ADDRESS
         MVI   WORK_RECORD,0                 FORCE RECORD 0
* ------------------------------------------------------------------- *
*        Send HTTP and HTML headers                                   *
* ------------------------------------------------------------------- *
         MVI   HTTP_FUNCTION,$HTTP_WRITE
         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER
         LA    R0,WORK_BUFFER
         ST    R0,HTTP_DATA
         LA    R0,HTTP_HEADERL
         ST    R0,HTTP_LENGTH
         LA    R1,HTTP_PARMS
         L     R15,WORK_HTTPSUB
         BALR  R14,R15

         MVC   WORK_PRINT_BUFFER(HTTP_HEADERL),HTTP_HEADER
         BAL   R11,LOG0000

         MVC   WORK_BUFFER(HTML_HEADERL),HTML_HEADER
         LA    R0,HTML_HEADERL
         ST    R0,HTTP_LENGTH
         LA    R1,HTTP_PARMS
         L     R15,WORK_HTTPSUB
         BALR  R14,R15

         MVC   WORK_PRINT_BUFFER(HTML_HEADERL),HTML_HEADER
         BAL   R11,LOG0000

         MVC   WORK_BUFFER(PRE_HEADERL),PRE_HEADER
         LA    R0,PRE_HEADERL
         ST    R0,HTTP_LENGTH
         LA    R1,HTTP_PARMS
         L     R15,WORK_HTTPSUB
         BALR  R14,R15

         MVC   WORK_PRINT_BUFFER(PRE_HEADERL),PRE_HEADER
         BAL   R11,LOG0000

* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0080 DS    0H
         LOG   'START I/O'
         XC    WORK_ECB,WORK_ECB             CLEAR ECB
         MVC   IOBCC(5),WORK_DISK_ADDR
         EXCP  IOBSTDRD                      START THE I/O
         WAIT  ECB=WORK_ECB                  WAIT FOR I/O
         CLI   WORK_ECB,X'42'                END OF VTOC?
         BE    MAIN0130                      YES
         CLI   WORK_ECB,X'44'                RETRY?
         BE    MAIN0080                      YES
         CLI   WORK_ECB,X'7F'                SUCCESSFUL?
         BNE   ERR0100                       NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0090 DS    0H
         LOG   'PROCESS TRACK'
         LA    R9,WORK_IO_AREA               I/O AREA
         USING VTOC_RECORD,R9
         LH    R8,WORK_DSCB_TRACK            DSCB'S PER TRACK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0100 DS    0H
         LOG   'PROCESS DSCB'
         CLI   DS1FMTID,C'1'                 FORMAT-1?
         BE    FMT10000                      YES
         CLI   DS1FMTID,C'4'                 FORMAT-4?
         BE    FMT40000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0110 DS    0H
         LOG   'NEXT DSCB'
         LA    R9,VTOC_RECORDL(,R9)          NEXT DSCB
         BCT   R8,MAIN0100                   LOOP
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LOG   'TRACK DONE'
         CLC   WORK_DISK_ADDR,WORK_VTOC_HIGH END OF VTOC?
         BNL   MAIN0130                      YES.. SEND TRAILER
         SR    R1,R1                         CLEAR R1
         ICM   R1,3,WORK_HEAD                CURRENT HEAD NUMBER
         LA    R1,1(,R1)                     PLUS 1
         CLM   R1,3,WORK_TRACKS_PER_CYL      AT MAX?
         BE    MAIN0120                      YES
         STCM  R1,3,WORK_HEAD                UPDATE HEAD
         MVI   WORK_RECORD,0                 FORCE RECORD 0
         LOG   'NEXT TRACK'
         B     MAIN0080                      READ NEXT TRACK
MAIN0120 DS    0H
         ICM   R1,3,WORK_CYLINDER            CYLINDER NUMBER
         LA    R1,1(,R1)                     PLUS 1
         STCM  R1,3,WORK_CYLINDER            UPDATE CYLINDER
         XC    WORK_HEAD,WORK_HEAD           RESET HEAD
         MVI   WORK_RECORD,0                 FORCE RECORD 0
         LOG   'NEXT CYLINDER'
         B     MAIN0080                      READ 1ST TRACK ON NEXT CYL
* ------------------------------------------------------------------- *
*        Send trailer                                                 *
* ------------------------------------------------------------------- *
MAIN0130 DS    0H
         LOG   'SEND TRAILER'
         MVC   WORK_BUFFER(PRE_TRAILERL),PRE_TRAILER
         LA    R0,PRE_TRAILERL
         ST    R0,HTTP_LENGTH
         LA    R1,HTTP_PARMS
         L     R15,HTTP_HTTPSUB
         BALR  R14,R15                       SEND TABLE TRAILER

         MVC   WORK_PRINT_BUFFER(PRE_TRAILERL),PRE_TRAILER
         BAL   R11,LOG0000

         MVC   WORK_BUFFER(HTML_TRAILERL),HTML_TRAILER
         LA    R0,HTML_TRAILERL
         ST    R0,HTTP_LENGTH
         LA    R1,HTTP_PARMS
         L     R15,HTTP_HTTPSUB
         BALR  R14,R15                       SEND HTML TRAILER

         MVC   WORK_PRINT_BUFFER(HTML_TRAILERL),HTML_TRAILER
         BAL   R11,LOG0000

* ------------------------------------------------------------------- *
*        Close connection                                             *
* ------------------------------------------------------------------- *
         LOG   'CLOSE CONNECTION'
         MVI   HTTP_FUNCTION,$HTTP_CLOSE
         LA    R1,HTTP_PARMS
         L     R15,HTTP_HTTPSUB
         BALR  R14,R15                       CLOSE THE CONNECTION
* ------------------------------------------------------------------- *
*        Close the VTOC DCB                                           *
* ------------------------------------------------------------------- *
         LOG   'CLOSE VTOC'
         CLOSE ((R10))                       CLOSE DCB
* ------------------------------------------------------------------- *
*        Deallocate the device                                        *
* ------------------------------------------------------------------- *
         LOG   'DEALLOCATE DEVICE'
         OI    WORK_TEXT_ADDR1,X'80'         FLAG END-OF-LIST
         MVI   S99VERB,S99VRBUN              SET VERB
         LA    R1,WORK_S99RBA
         SVC   99                            DE-ALLOCATE
         LTR   R15,R15                       SUCCESSFUL?
         BNZ   ERR0080                       NO
         B     MAIN0000                      WAIT FOR ANOTHER URL
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMT10000 DS    0H
         LOG   'FORMAT-1'
         MVC   WORK_BUFFER(L'DS1DSNAM),DS1DSNAM
         MVI   WORK_BUFFER+L'DS1DSNAM,$LF
         LA    R0,WORK_BUFFER
         ST    R0,HTTP_DATA
         LA    R0,L'DS1DSNAM+1
         ST    R0,HTTP_LENGTH
         MVI   HTTP_FUNCTION,$HTTP_WRITE
         LA    R1,HTTP_PARMS
         L     R15,HTTP_HTTPSUB
         BALR  R14,R15                       SEND DATA SET NAME

         MVC   WORK_PRINT_BUFFER(L'DS1DSNAM),DS1DSNAM
         BAL   R11,LOG0000

         B     MAIN0110
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FMT40000 DS    0H
         LOG   'FORMAT-4'
         MVC   WORK_DSCB_TRACK+0,0
         MVC   WORK_DSCB_TRACK+1,DS4DEVDT    DSCB'S PER TRACK
         MVC   WORK_TRACKS_PER_CYL,DS4DSTRK  TRACKS PER CYLINDER
         LH    R8,WORK_DSCB_TRACK            DSCB'S PER TRACK
         MVC   WORK_VTOC_LOW,DS4VTOCE+0      VTOC EXTENT LOW
         MVC   WORK_VTOC_HIGH,DS4HPCHR       VTOC EXTENT HIGH
         B     MAIN0110
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         DC    H'1'
ERR0020  DS    0H
         DC    H'2'
ERR0030  DS    0H
         DC    H'3'
ERR0040  DS    0H
         DC    H'4'
ERR0050  DS    0H
         MVI   HTTP_FUNCTION,$HTTP_WRITE
         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER
         LA    R0,WORK_BUFFER
         ST    R0,HTTP_DATA
         LA    R0,HTTP_HEADERL
         ST    R0,HTTP_LENGTH
         LA    R1,HTTP_PARMS
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         MVC   WORK_BUFFER(MSG01L),MSG01
         LA    R0,MSG01L
         ST    R0,HTTP_LENGTH
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         MVI   HTTP_FUNCTION,$HTTP_CLOSE
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         B     MAIN0000
ERR0060  DS    0H
         MVI   HTTP_FUNCTION,$HTTP_WRITE
         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER
         LA    R0,WORK_BUFFER
         ST    R0,HTTP_DATA
         LA    R0,HTTP_HEADERL
         ST    R0,HTTP_LENGTH
         LA    R1,HTTP_PARMS
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         MVC   WORK_BUFFER(MSG02L),MSG02
         CVD   R3,WORK_DWORD
         ED    WORK_BUFFER+(MSG02_LENGTH-MSG02)(L'MSG02_LENGTH),WORK_DW++
               ORD+5
         LA    R0,MSG02L
         ST    R0,HTTP_LENGTH
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         MVI   HTTP_FUNCTION,$HTTP_CLOSE
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         B     MAIN0000
ERR0080  DS    0H
         MVI   HTTP_FUNCTION,$HTTP_WRITE
         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER
         LA    R0,WORK_BUFFER
         ST    R0,HTTP_DATA
         LA    R0,HTTP_HEADERL
         ST    R0,HTTP_LENGTH
         LA    R1,HTTP_PARMS
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         MVC   WORK_BUFFER(MSG05L),MSG05
         MVC   WORK_BUFFER+(MSG05_VOLSER-MSG05)(L'MSG05_VOLSER),WORK_VO+
               LSER
         ST    R15,WORK_DWORD
         UNPK  WORK_BUFFER+(MSG05_R15-MSG05)(5),WORK_DWORD+2(3)         +
         TR    WORK_BUFFER+(MSG05_R15-MSG05)(4),HEXCHAR
         MVI   WORK_BUFFER+(MSG05_R15-MSG05)+4,C' '
         UNPK  WORK_BUFFER+(MSG05_ERROR-MSG05)(5),S99ERROR(3)           +
         TR    WORK_BUFFER+(MSG05_ERROR-MSG05)(4),HEXCHAR
         MVI   WORK_BUFFER+(MSG05_ERROR-MSG05)+4,C' '
         UNPK  WORK_BUFFER+(MSG05_INFO-MSG05)(5),S99INFO(3)             +
         TR    WORK_BUFFER+(MSG05_INFO-MSG05)(4),HEXCHAR
         MVI   WORK_BUFFER+(MSG05_INFO-MSG05)+4,C' '
         LA    R0,MSG05L
         ST    R0,HTTP_LENGTH
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         MVI   HTTP_FUNCTION,$HTTP_CLOSE
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         B     MAIN0000
ERR0090  DS    0H
         MVI   HTTP_FUNCTION,$HTTP_WRITE
         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER
         LA    R0,WORK_BUFFER
         ST    R0,HTTP_DATA
         LA    R0,HTTP_HEADERL
         ST    R0,HTTP_LENGTH
         LA    R1,HTTP_PARMS
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         MVC   WORK_BUFFER(MSG03L),MSG03
         ST    R15,WORK_DWORD
         UNPK  WORK_BUFFER+(MSG03_R15-MSG03)(5),WORK_DWORD+2(3)         +
         TR    WORK_BUFFER+(MSG03_R15-MSG03)(4),HEXCHAR
         MVI   WORK_BUFFER+(MSG03_R15-MSG03)+4,C' '
         LA    R0,MSG03L
         ST    R0,HTTP_LENGTH
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         MVI   HTTP_FUNCTION,$HTTP_CLOSE
         L     R15,WORK_HTTPSUB
         BALR  R14,R15
         B     MAIN0000
ERR0100  DS    0H
         DC    H'10'
ERR0110  DS    0H
         DC    H'11'
* ------------------------------------------------------------------- *
*                                                                     *
*        COMMENT OUT THE FIRST 'BR   R11' TO ACTIVATE LOGGING         *
*                                                                     *
* ------------------------------------------------------------------- *
LOG0000  DS    0H
         BR    R11
         PUT   WORK_PRINTDCB,WORK_PRINT_BUFFER
         MVC   WORK_PRINT_BUFFER,WORK_PRINT_BUFFER-1
         BR    R11
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         MVI   HTTP_FUNCTION,$HTTP_CLEAN_UP
         LA    R1,HTTP_PARMS
         L     R15,HTTP_HTTPSUB
         BALR  R14,R15
         CLI   HTTP_RETURN_CODE,$HTTP_OK
         BNE   ERR0110
         DELETE EP=HTTPSUB
         CLOSE WORK_PRINTDCB,                                          +
               MF=(E,WORK_OPEN)
         LR    R1,R13                  COPY WORK AREA ADDRESS
         L     R13,4(R13)              RESTORE CALLER'S R13
         FREEMAIN RU,A=(1),LV=WORKL    FREE THE WORK AREA
         LM    R14,R12,12(R13)         RESTORE REGS
         SR    R15,R15                 SET RETURN CODE
         BR    R14
* ------------------------------------------------------------------- *

URL_MVC      MVC  WORK_BUFFER+(MSG04_TEXT-MSG04)(0),0(R2)

* ------------------------------------------------------------------- *

PRINTDCBI DCB  DSORG=PS,                                               +
               DDNAME=SYSPRINT,                                        +
               RECFM=FB,                                               +
               LRECL=132,                                              +
               MACRF=PM
PRINTDCBL EQU  *-PRINTDCBI

VTOCDCBI  DCB  DSORG=PS,                                               +
               DDNAME=APP3VTOC,                                        +
               DEVD=DA,                                                +
               EXLST=*,                                                +
               MACRF=EXCP
VTOCDCBL  EQU  *-VTOCDCBI

OPENI    OPEN  (*,INPUT),                                              +
               MF=L
OPENL    EQU   *-OPENI
CLOSEI   CLOSE *,                                                      +
               MF=L
CLOSEL   EQU   *-CLOSEI
EXLSTI   DC    X'87',AL3(0)
EXLSTL   EQU   *-EXLSTI

CCW1I    CCW   $SEARCH,*,$CC,5
CCW1L    EQU   *-CCW1I
CCW2I    CCW   $TIC,CCW1I,0,8
CCW2L    EQU   *-CCW2I
CCW3I    CCW   $READ_MULTIPLE,*,$SILI,65535
CCW3L    EQU   *-CCW3I

OUR_PORT  DC   H'1001'

OUR_URL   DC   C'VTOC'
OUR_URLL  EQU  *-OUR_URL

HEXCHAR   EQU  *-C'0'
          DC   C'0123456789ABCDEF'

H6        DC   H'6'
LINE_FEED DC   AL1($LF)

HEADI     DC   C'HTTPAPP3 '
HEADL     EQU  *-HEADI

TEXTI     DS   0C
          DC   AL2(DALDDNAM),AL2(1),AL2(8)
          DC   CL8'APP3VTOC'
          DC   AL2(DALUNIT),AL2(1),AL2(8)
          DC   CL8'SYSALLDA'
          DC   AL2(DALVLSER),AL2(1),AL2(6)
          DC   CL6'******'
          DC   AL2(DALSTATS),AL2(1),AL2(1)
          DC   X'08'
TEXTL     EQU  *-TEXTI
* ------------------------------------------------------------------- *


* ------------------------------------------------------------------- *
HTTP_HEADER    DS    0C
               DC    C'HTTP/1.1 200 OK'
               DC    AL1($LF)
               DC    C'Content-Type: text/html'
               DC    AL1($LF)
               DC    AL1($LF)
HTTP_HEADERL   EQU   *-HTTP_HEADER
HTML_HEADER    DS    0C
               DC    C'<HTML>'
               DC    C'<BODY>'
               DC    AL1($LF)
HTML_HEADERL   EQU   *-HTML_HEADER
PRE_HEADER     DS    0C
               DC    C'<PRE><CENTER>'
PRE_HEADERL    EQU   *-PRE_HEADER
HTML_TRAILER   DS    0C
               DC    C'</BODY>'
               DC    C'</HTML>'
HTML_TRAILERL  EQU   *-HTML_TRAILER
PRE_TRAILER    DS    0C
               DC    C'</CENTER></PRE>'
PRE_TRAILERL EQU     *-PRE_TRAILER

MSG01          DS    0C
               DC    C'VOLSER is required'
MSG01L         EQU   *-MSG01

MSG02          DS    0C
               DC    C'HTTPAPP302E VOLSER must be 6 characters, not '
MSG02_LENGTH   DC    X'402020202120'
MSG02L         EQU   *-MSG02
MSG03          DS    0C
               DC    C'VTOC OPEN failed, R15='
MSG03_R15      DC    C'    '
               DC    C' '
MSG03L         EQU   *-MSG04

MSG04          DC    C'URL length '
MSG04_LENGTH   DC    X'402020202120'
               DC    C'  Text-'
MSG04_TEXT     DC    CL100' '
MSG04L         EQU   *-MSG04

MSG05          DC    C'HTTPAPP305I '
               DC    C'Allocate failed.  VOLSER='
MSG05_VOLSER   DC    CL6' '
               DC    C'  R15='
MSG05_R15      DC    CL4' '
               DC    C'  ERROR='
MSG05_ERROR    DC    CL4' '
               DC    C'  INFO='
MSG05_INFO     DC    CL4' '
               DC    C' '
MSG05L         EQU   *-MSG05

* ------------------------------------------------------------------- *
*        WORK AREAS                                                   *
* ------------------------------------------------------------------- *
WORK                DSECT
                    DS    18F
WORK_DWORD          DS    D

WORK_HTTPSUB        DS    A

WORK_PRINTDCB       DS    0F,(PRINTDCBL)X
WORK_VTOCDCB        DS    0F,(VTOCDCBL)X
WORK_OPEN           DS    0F,(OPENL)X
WORK_CLOSE          DS    0F,(CLOSEL)X
WORK_EXLST          DS    0F,(EXLSTL)X
WORK_JFCB           DS    0F,(JFCBL)X
WORK_IOB            DS    0F,(IOBL)X
WORK_ECB            DS    0F,XL4
WORK_S99RBA         DS    A
WORK_S99RB          DS    0F,(S99RBEND-S99RB)X

WORK_TEXT_ADDR1     DS    A
WORK_TEXT_ADDR2     DS    A
WORK_TEXT_ADDR3     DS    A
WORK_TEXT_ADDR4     DS    A

WORK_CCW1           DS    0F,(CCW1L)X
WORK_CCW2           DS    0F,(CCW2L)X
WORK_CCW3           DS    0F,(CCW3L)X

WORK_TRACKS_PER_CYL DS    XL2
WORK_DSCB_TRACK     DS    XL2
WORK_VTOC_LOW       DS    XL4
WORK_VTOC_HIGH      DS    XL4

WORK_DISK_ADDR      DS    0CL5
WORK_CYLINDER       DS    XL2
WORK_HEAD           DS    XL2
WORK_RECORD         DS    X

WORK_FLAGS          DS    X
$VOLSER             EQU   X'80'

                    DS    C
WORK_BUFFER         DS    CL256

                    DS    C
WORK_PRINT_BUFFER   DS    CL256

WORK_TEXT           DS    0C
WORK_DD_TEXT        DS    AL2,AL2,AL2
                    DS    CL8
WORK_UNIT_TEXT      DS    AL2,AL2,AL2
                    DS    CL8
WORK_VOLSER_TEXT    DS    AL2,AL2,AL2
WORK_VOLSER         DS    CL6
WORK_DISP_TEXT      DS    AL2,AL2,AL2
                    DS    X

                    SUBPARM TYPE=CSECT

WORK_IO_AREA        DS    65536X
WORKL               EQU   *-WORK
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
VTOC_RECORD         DSECT
VTOC_COUNT          DS    CL8
                    IECSDSL1 1
                    ORG   DS1FMTID
                    IECSDSL1 4
VTOC_RECORDL        EQU   *-VTOC_RECORD
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
                DCBD    DSORG=PS
                IEZDEB
                IEZIOB  DSECT=YES
IOBL            EQU     *-IOB
JFCB            DSECT
                IEFJFCBN
JFCBL           EQU     *-JFCB
                IEFZB4D0
                IEFZB4D2
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
$SEARCH         EQU  X'31'
$TIC            EQU  X'08'
$READ_MULTIPLE  EQU  X'5E'
$CC             EQU  X'40'
$SILI           EQU  X'20'

         COPY REGEQU
$LF      EQU  X'0A'
         END  HTTPAPP3
