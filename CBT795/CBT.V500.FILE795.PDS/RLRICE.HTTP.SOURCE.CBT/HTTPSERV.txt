*---------------------------------------------------------------------*
*                                                                     *
*  Module name: HTTPSERV                                              *
*                                                                     *
*  Manage the communication between the HTTP main and a server        *
*  address space.                                                     *
*                                                                     *
*                                                                     *
*  The HTTP server is intended to be run as multiple address spaces,  *
*  the main space (HTTPMAIN) and server space(s).  This has several   *
*  advantages.  For one, if your processor has multiple CPUs, more    *
*  than one task can be executing in parallel.  If one server abends  *
*  it does not always affect the main space or other server spaces.   *
*  Also server spaces may be stopped if the resources they are using  *
*  are needed or are being updated without impacting the main space   *
*  or other server spaces.  You may want to run new applications in   *
*  "test" servers or isolate an application for tuning.               *
*                                                                     *
*                                                                     *
*  At start-up, HTTMAIN will ATTACH HTTPTCP as a subtask.  HTTPTCP    *
*  will BIND to the port given on the SERVPORT start up parameter     *
*  and "listen".  When a server space "connects", HTTPTCP will        *
*  build a new SERVBLOK and wake up the main task.  The main task     *
*  will ATTACH a new HTTPSERV subtask.  HTTPTCP will then transfer    *
*  the connection (socket) to the new HTTPSERV subtask via            *
*  GIVESOCKET/TAKESOCKET.  From that point on, the HTTPSERV subtask   *
*  will communicate directly to the server space (HTTPTCP is no       *
*  longer involved for that particular server space).                 *
*                                                                     *
*  If/when the server space shuts down, the HTTPSERV subtask will     *
*  put itself on the "lost" server chain and POST an ECB that will    *
*  cause the main task to 'wake up'.  The main task will DETACH       *
*  the HTTPSERV subtask and FREEMAIN the SERVBLOK.                    *
*                                                                     *
* ------------------------------------------------------------------- *
HTTPSERV CSECT
HTTPSERV AMODE 31
HTTPSERV RMODE ANY
         USING HTTPSERV,R12                   DEFINE BASE
         USING HTTPCOMM,R11                   DEFINE BASE
         USING SERVBLOK,R10                   DEFINE BASE
         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS
         LR    R12,R15                        COPY BASE
         B     INIT0000                       BRANCH AROUND EYECATCHER
MODID    DC    CL8'HTTPSERV'                  MODULE NAME
         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY
         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY
INIT0000 DS    0H
         L     R10,0(R1)                      COPY OUR SERVBLOK ADDRESS
         L     R11,SERVER_HTTP_COMMON
         L     R3,WORK_SIZE                   WORK AREA SIZE
         GETMAIN RU,                          WORK AREA STORAGE        +
               LV=(R3),                                                +
               LOC=ANY
         ST    R1,SERVER_WORK_ADDRESS         SAVE WORK AREA ADDRESS
         LR    R4,R1                          COPY STORAGE ADDRESS
         LR    R2,R1                          COPY WORK AREA ADDRESS
         SR    R0,R0                          CLEAR REGISTER
         SR    R1,R1                          CLEAR REGISTER
         MVCL  R2,R0                          CLEAR WORK AREA
         A     R4,WORK_START                  PLUS DISPLACEMENT
         ST    R13,4(R4)
         ST    R4,8(R13)
         LR    R13,R4                         COPY WORKAREA ADDRESS
         USING DXDSERV,R13                    DEFINE BASE
         MVC   WORK_ID,MODID                  IDENTIFY WORK AREA OWNER
         ITRACE ID=INIT,                                               +
               RDATA1=R10
         LA    R5,SERVER_IO_AREA
         USING NETBLOK,R5
         XC    NETBLOK(256),NETBLOK           INITIALIZE HEADER PORTION
         XC    SERVER_WORK_ECB,SERVER_WORK_ECB
         MVI   PRT_CC,C' '                    SINGLE SPACING
         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS
         LA    R1,SERVER_WORK_ECB
         ST    R1,WORK_ECB1
         LA    R1,SERVER_TCPIP_ECB
         ST    R1,WORK_ECB2
         OI    WORK_ECB2,X'80'                FLAG END-OF-LIST
         XC    SERVER_WORK_ECB,SERVER_WORK_ECB
         MVI   WORK_FLAGS,0                   RESET FLAGS
* ------------------------------------------------------------------- *
*     Make the INITAPI call                                           *
* ------------------------------------------------------------------- *
         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK
         MVC   SERVER_TCPIP_FUNCTION,=CL16'INITAPI'
         UNPK  WORK_10(9),SERVER_TCB(5)
         TR    WORK_10(8),HEXCHAR
         MVC   SERVER_SUBTASK,WORK_10
         ITRACE ID=INITAPI,                                            +
               DATA1=(SERVER_SUBTASK,8)
         MVC   PRT_MESSAGE_ID(MSG01L),MSG01
         MVC   PRT_MESSAGE_ID+(MSG01_SUBTASK-MSG01)(L'MSG01_SUBTASK),SE+
               RVER_SUBTASK
         BAL   R9,PRT0000
         EZASMI TYPE=INITAPI,                                          +
               MAXSNO=SERVER_MAX_SOCKET,                               +
               SUBTASK=SERVER_SUBTASK,                                 +
               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +
               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +
               ASYNC='ECB',                                            +
               TASK=WORK_TCPIP_TASK
         TM    SERVER_TCPIP_RETURN_CODE,X'80' SUCCESSFUL?
         BO    ERR0010                        NO

* ------------------------------------------------------------------- *
*     Get our CLIENT NAME                                             *
* ------------------------------------------------------------------- *
         ITRACE ID=GET_ID
         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB
         EZASMI TYPE=GETCLIENTID,                                      +
               CLIENT=SERVER_CLIENT,                                   +
               ECB=SERVER_TCPIP_ECB,                                   +
               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +
               RETCODE=SERVER_TCPIP_RETURN_CODE
         WAIT  ECB=SERVER_TCPIP_ECB
         ITRACE ID=MY_ID,                                              +
               DATA1=(SERVER_CLIENT_NAME,8),                           +
               DATA2=(SERVER_CLIENT_TASK,8)
* ------------------------------------------------------------------- *
*    Inform HTTPTCP our TCP/IP environment is initialized             *
* ------------------------------------------------------------------- *
         POST  SERVER_INITAPI_ECB             INITAPI COMPLETE
* ------------------------------------------------------------------- *
*    Wait for HTTPTCP to issue GIVESOCKET                             *
* ------------------------------------------------------------------- *
         ITRACE ID=GIVEWAIT
         WAIT  ECB=SERVER_GIVESOCKET_ECB      WAIT FOR GIVESOCKET
         ITRACE ID=GIVEN,                                              +
               DATA1=SERVER_GIVESOCKET_ECB
* ------------------------------------------------------------------- *
*    Issue TAKESOCKET                                                 *
* ------------------------------------------------------------------- *
         ITRACE ID=TAKESOCK,                                           +
               DATA1=(SERVER_SOCKET,2)
         MVC   SERVER_TCPIP_FUNCTION,=CL16'TAKESOCKET'
         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB
         EZASMI TYPE=TAKESOCKET,                                       +
               SOCRECV=SERVER_SOCKET,                                  +
               CLIENT=COMM_HTTPTCP_CLIENT,                             +
               ECB=SERVER_TCPIP_ECB,                                   +
               TASK=WORK_TCPIP_TASK,                                   +
               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +
               RETCODE=SERVER_TCPIP_RETURN_CODE
         WAIT  ECB=SERVER_TCPIP_ECB
         ITRACE ID=TAKE_RC,                                            +
               DATA1=(SERVER_TCPIP_RETURN_CODE,4),                     +
               DATA2=(SERVER_TCPIP_ERROR_NUMBER,4)
         TM    SERVER_TCPIP_RETURN_CODE,X'80'
         BO    ERR0010
         ITRACE ID=SOCKET,                                             +
               DATA1=(serVER_SOCKET,2),                                +
               DATA2=(SERVER_TCPIP_RETURN_CODE+2,2)
         MVC   SERVER_SOCKET,SERVER_TCPIP_RETURN_CODE+2

         ITRACE ID=POST_X,                                             +
               DATA1=(sERVER_ECB_X,4)
         POST  SERVER_ECB_X
         ITRACE ID=POSTED_X,                                           +
               DATA1=(SERVER_ECB_X,4)

* ------------------------------------------------------------------- *
*                                                                     *
*    We now have the connection to the server space                   *
*                                                                     *
*    Issue a TCP/IP READ                                              *
*                                                                     *
* ------------------------------------------------------------------- *
MAIN0000 DS    0H
         SR    R2,R2                          RESET BYTES READ
         LA    R3,SERVER_IO_AREA              INITIALIZE I/O ADDRESS
         MVC   WORK_LENGTH,=A(IOSIZE)         INITIALIZE AREA LEGNTH
MAIN0010 DS    0H
         ITRACE ID=TCP_READ,                                           +
               DATA1=(SERVER_SOCKET,4),                                +
               RDATA2=R3
         MVC   SERVER_TCPIP_FUNCTION,=CL16'READ'
         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB
         EZASMI TYPE=READ,                                             +
               S=SERVER_SOCKET,                                        +
               TASK=WORK_TCPIP_TASK,                                   +
               NBYTE=WORK_LENGTH,                                      +
               BUF=(R3),                                               +
               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +
               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +
               ECB=SERVER_TCPIP_ECB
         ITRACE ID=WORKWAIT,                                           +
               DATA1=(SERVER_WORK_ECB,4),                              +
               DATA2=(SERVER_TCPIP_ECB,4)
         WAIT  1,ECBLIST=WORK_WAIT
         ITRACE ID=AWAKE,                                              +
               DATA1=(SERVER_WORK_ECB,4),                              +
               DATA2=(SERVER_TCPIP_ECB,4)
         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB
         TM    COMM_EOJ,$EOJ_PHASE_1          EOJ SIGNALLED?
         BO    TERM0000                       YES
         ICM   R1,15,SERVER_TCPIP_RETURN_CODE BYTES READ
         BM    ERR0010                        IF NEGATIVE.. ERROR
         BZ    ERR0010                        IF ZERO.. DEBUG
         AR    R2,R1                          PLUS RECIEVED THIS TIME
         ITRACE ID=READDONE,                                           +
               RDATA1=R1,                                              +
               RDATA2=R2
         L     R0,SERVER_BYTES_RECEIVED       TOTAL RECEIVED
         AR    R0,R1                          PLUS WHAT WE GOT
         ST    R0,SERVER_BYTES_RECEIVED       SAVE TOTAL
         L     R0,WORK_LENGTH                 I/O AREA LEFT
         SR    R0,R1                          MINUS WHAT WAS USED
         ST    R0,WORK_LENGTH
         AR    R3,R1                          UPDATE BUFFER ADDRESS
         ITRACE ID=MORE_BS,                                            +
               RDATA1=R2,                                              +
               DATA2=(NET_LENGTH,4)
         C     R2,NET_LENGTH                  ALL RECEIVED?
         BL    MAIN0010                       READ MORE DATA
         ITRACE ID=ALL_READ,                                           +
               RDATA1=R2                      TOTAL LENGTH
         TIME  DEC
         ST    R0,SERVER_LAST_TIME            TIME OF COMMUNICATION
         ST    R1,SERVER_LAST_DATE            DATE OF COMMUNICATION
* ------------------------------------------------------------------- *
*     Perform the requested service.                                  *
* ------------------------------------------------------------------- *
         ITRACE ID=WORK,                                               +
               DATA1=(NETBLOK,4)
         LA    R1,SERVICE_TABLE
MAIN0020 DS    0H
         CLC   NET_FUNCTION,0(R1)             FUNCTION LOCATED?
         BE    MAIN0030                       YES
         LA    R1,5(R1)                       NEXT FUNCTION
         CLI   0(R1),X'FF'                    END OF TABLE?
         BNE   MAIN0020                       NO
         MVC   PRT_MESSAGE_ID(MSG02L),MSG02
         BAL   R9,PRT0000
         DC    H'0'
MAIN0030 DS    0H
         ICM   R15,15,1(R1)
         ITRACE ID=MAIN0030,                                           +
               RDATA1=R1,                                              +
               RDATA2=R15
         BR    R15
* ------------------------------------------------------------------- *
*                                                                     *
*    Save the CLIENT ID of the partner server space and send the      *
*    CLIENT ID of the HTTPWEB subtask.                                *
*                                                                     *
*    NOTE:  The CLIENT ID sent back is the HTTPWEB subtask's          *
*           CLIENT ID *NOT* our own.  Web clients CONTACT             *
*           (CONTACT is a TCP/IP function) the subtask LISTENing      *
*           on the WEBPORT (which is HTTPWEB).  HTTPWEB issues        *
*           the GIVESOCKET so the server space must reference         *
*           the HTTPWEB subtask on the TAKESOCKET.                    *
*                                                                     *
* ------------------------------------------------------------------- *
IDENT000 DS    0H
         ITRACE ID=IDENT000,                                           +
               DATA1=(NET_DATA+0,8),                                   +
               DATA2=(NET_DATA+8,8)
         MVC   PARTNER_CLIENT(CLIENTL),NET_DATA   SAVE PARTNER CLIENT
         MVC   NET_DATA(CLIENTL),COMM_HTTPWEB_CLIENT
         LA    R1,NET_PREFIX_LENGTH+CLIENTL       LENGTH TO SEND
         ST    R1,NET_LENGTH                      SET LENGTH
         MVI   NET_RETURN_CODE,$NET_OK            SET RC
         BAL   R8,WRITE000                        SEND THE REPLY
         B     MAIN0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
DEF0000  DS    0H
         ITRACE ID=DEF0000
         ST    R10,WEBURL_SERVBLOK            SET OUR SERVBLOK
         LA    R2,NET_DATA
         XC    WEBURL_ECB,WEBURL_ECB          RESET ECB
DEF0010  DS    0H
         L     R3,COMM_URL_QUEUE              1ST URL ON QUEUE
         ST    R3,WEBURL_NEXT                 CHAIN TO OUR URL
         CS    R3,R2,COMM_URL_QUEUE           ADD TO QUEUE
         BC    4,DEF0010                      TRY AGAIN
         ITRACE ID=POSTURL
         POST  COMM_URL_WORK_ECB              WAKE UP URL SUBTASK
         ITRACE ID=DEF_WAIT                   WAIT
         WAIT  ECB=WEBURL_ECB                 WAIT FOR URL SUBTASK
         ITRACE ID=DEFINED
         MVI   NET_RETURN_CODE,$NET_OK        SET RC
         LA    R1,NET_PREFIX_LENGTH           LENGTH TO SEND
         BAL   R8,WRITE000                    SEND THE REPLY
         B     MAIN0000                       WAIT FOR MORE WORK
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
*                                                                     *
* ------------------------------------------------------------------- *
GETURL00 DS    0H
         ICM   R7,15,WORK_URL_ADDRESS         ANY LEFT ON LOCAL QUEUE?
         BNZ   GETURL20                       YES
         ITRACE ID=GETURL00
         WAIT  1,ECBLIST=WORK_WAIT            WAIT FOR WORK
         ITRACE ID=AWAKE,                                              +
               DATA1=(COMM_EOJ,1)
         TM    COMM_EOJ,$EOJ_PHASE_1          EOJ SIGNALLED?
         BO    TERM0000                       YES
         XC    SERVER_WORK_ECB,SERVER_WORK_ECB
GETURL10 DS    0H
         SR    R1,R1
         L     R7,SERVER_URL                  URL ADDRESS
         CS    R7,R1,SERVER_URL               GRAB THE QUEUE
         BC    4,GETURL10                     TRY AGAIN
         ITRACE ID=HAVEQ,                                              +
               RDATA1=R7
         LTR   R7,R7
         BZ    GETURL00                       NOTHING ON QUEUE
         ST    R7,WORK_URL_ADDRESS            URL BEING PROCESSED
GETURL20 DS    0H
WEB      USING WEBURL,R7
         ITRACE ID=SEND_URL,                                           +
               DATA1=(wEB.WEBURL+0,8),                                 +
               DATA2=(WEB.WEBURL+8,8)
         LR    R0,R7                          COPY URL ADDRESS
         L     R1,WEB.WEBURL_LENGTH           WEBURL LENGTH
         LA    R1,WEBURLL+URL_PREFIX_L(,R1)   PLUS PREFIX LENGTH
         LA    R14,NET_DATA                   DATA FOR NETWORK
         LR    R15,R1                         COPY TO LENGTH 2
         MVCL  R14,R0                         COPY URL INFO
         L     R1,WEB.WEBURL_LENGTH           WEBURL LENGTH
         LA    R1,NET_PREFIX_LENGTH+WEBURLL+URL_PREFIX_L(,R1)
         ST    R1,NET_LENGTH                  LENGTH TO TRANSMIT
         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         L     R1,SERVER_URLS                 NBR OF URLS PROCESSED
         LA    R1,1(,R1)                      PLUS 1
         ST    R1,SERVER_URLS                 UPDATE STATISTICS
* ------------------------------------------------------------------- *
*        Send the URL to partner address space                        *
* ------------------------------------------------------------------- *
         ITRACE ID=SEND_URL
         BAL   R8,WRITE000                    SEND URL TO SERVER SPACE
* ------------------------------------------------------------------- *
*        Wait for partner to issue TAKESOCKET                         *
* ------------------------------------------------------------------- *
         ITRACE ID=WAIT4OK
         MVC   SERVER_TCPIP_FUNCTION,=CL16'READ'
         SR    R2,R2                          INITIALIZE LENGTH READ
         LA    R3,SERVER_IO_AREA              INITIALIZE I/O ADDRESS
         MVC   WORK_LENGTH,=A(IOSIZE)
         XC    SERVER_IO_AREA(4),SERVER_IO_AREA
GETURL30 DS    0H
         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB
         EZASMI TYPE=READ,                                             +
               S=SERVER_SOCKET,                                        +
               TASK=WORK_TCPIP_TASK,                                   +
               NBYTE=WORK_LENGTH,                                      +
               BUF=(R3),                                               +
               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +
               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +
               ECB=SERVER_TCPIP_ECB
         WAIT  ECB=SERVER_TCPIP_ECB
         ITRACE ID=READ_RC,                                            +
               DATA1=(SERVER_TCPIP_RETURN_CODE,4),                     +
               DATA2=(SERVER_TCPIP_ERROR_NUMBER,4)
         TM    SERVER_TCPIP_RETURN_CODE,X'80'
         BO    ERR0010
         A     R2,SERVER_TCPIP_RETURN_CODE    PLUS BYTES READ
         A     R3,SERVER_TCPIP_RETURN_CODE    PLUS BYTES READ
         L     R0,WORK_LENGTH
         S     R0,SERVER_TCPIP_RETURN_CODE    MINUS LENGTH USED
         ST    R0,WORK_LENGTH
         C     R2,SERVER_IO_AREA              ALL DATA READ?
         BL    GETURL30                       NO
         ITRACE ID=ALLREAD
* ------------------------------------------------------------------- *
*                                                                     *
*        TAKESOCKET has completed in partner space                    *
*        Send response..                                              *
*          mostly this keeps the SENDs and WRITEs in 'pairs'.         *
*          It also forces TCP/IP to "flush" the buffer.               *
*                                                                     *
* ------------------------------------------------------------------- *
         LA    R1,NET_PREFIX_LENGTH           LENGTH FOR RESPONSE
         ST    R1,NET_LENGTH                  SET LENGTH
         BAL   R8,WRITE000                    SEND THE RESPONSE
* ------------------------------------------------------------------- *
*                                                                     *
*        Processing for this URL for us is complete.                  *
*        Queue the URL back to the HTTPWEB subtask so it              *
*        can CLOSE the SOCKET given to the partner.                   *
*        Once HTTPWEB has CLOSEd the SOCKET, the URL is FREEMAINed.   *
*                                                                     *
* ------------------------------------------------------------------- *
         ITRACE ID=Q2_CMPLT,                                           +
               RDATA1=R1
         LR    R1,R7                          COPY WEBURL ADDRESS
         MVC   WORK_URL_ADDRESS,WEBURL_NEXT   NEXT WEBURL
GETURL40 DS    0H
         L     R2,COMM_WEB_COMPLETED
         ST    R2,WEB.WEBURL_NEXT-WEB.WEBURL(R1)
         CS    R2,R1,COMM_WEB_COMPLETED       ADD WEBURL TO QUEUE
         BC    4,GETURL40
         ITRACE ID=POSTWEB
         POST  COMM_WEB_WORK_ECB              WAKE UP HTTPWEB SUBTASK
         ITRACE ID=NEXT_URL,                                           +
               DATA1=(WORK_URL_ADDRESS,4)
         B     MAIN0000                       WAIT FOR MORE WORK
         DROP  WEB
* ------------------------------------------------------------------- *
*       Write to log                                                  *
* ------------------------------------------------------------------- *
LOG0000  DS    0H
         L     R2,NET_LENGTH                  LENGTH
         SH    R2,=Y(NET_PREFIX_LENGTH)       LENGTH OF LOGBLOK ONLY
         ITRACE ID=LOG,                                                +
               RDATA1=R5,                                              +
               RDATA2=R2
         GETMAIN RU,                          GET SOME STORAGE         +
               LV=(R2),                                                +
               LOC=BELOW
         LR    R3,R1                          COPY STORAGE ADDRESS
         USING LOGBLOK,R3                     DEFINE BASE
         LR    R0,R1                          COPY STORAGE ADDRESS
         LR    R1,R2                          COPY LENGTH
         LA    R14,NET_DATA                   DATA ADDRESS IN I/O AREA
         LR    R15,R2                         COPY TO LENGTH 2
         MVCL  R0,R14                         COPY TO NEW STORAGE
LOG0010  DS    0H
         L     R2,COMM_LOG_QUEUE              FIRST NOW ON QUEUE
         ST    R2,LOG_NEXT                    CHAIN TO NEW BLOCK
         CS    R2,R3,COMM_LOG_QUEUE           ADD NEW BLOCK TO CHAIN
         BC    4,LOG0010                      TRY AGAIN
         POST  COMM_LOG_WORK_ECB              WAKE UP LOGGING SUBTASK
         LA    R1,NET_PREFIX_LENGTH
         ST    R1,NET_LENGTH                  SET LENGTH
         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE
         BAL   R8,WRITE000                    SEND RESPONSE
         ITRACE ID=LOGGED
         B     MAIN0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
WRITE000 DS    0H
         LA    R3,NETBLOK                     INITIALIZE I/O ADDRESS
         MVC   WORK_LENGTH,NET_LENGTH         INITIALIZE LENGTH
         MVC   SERVER_TCPIP_FUNCTION,=CL16'WRITE'
WRITE010 DS    0H
         ITRACE ID=WRITE,                                              +
               RDATA1=R3,                                              +
               DATA2=(WORK_LENGTH,4)
         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB
         EZASMI TYPE=WRITE,                                            +
               S=SERVER_SOCKET,                                        +
               TASK=WORK_TCPIP_TASK,                                   +
               NBYTE=WORK_LENGTH,                                      +
               BUF=(R3),                                               +
               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +
               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +
               ECB=SERVER_TCPIP_ECB
         WAIT  ECB=SERVER_TCPIP_ECB
         ITRACE ID=WRITE_RC,                                           +
               DATA1=(SERVER_TCPIP_RETURN_CODE,4),                     +
               DATA2=(SERVER_TCPIP_ERROR_NUMBER,4)
         ICM   R1,15,SERVER_TCPIP_RETURN_CODE
         BM    ERR0010
         AR    R3,R1                          UPDATE I/O ADDRESS
         L     R0,WORK_LENGTH                 LENGTH TO SEND
         SR    R0,R1                          MINUS LENGTH SENT
         ST    R0,WORK_LENGTH                 SAVE REMAINDER
         BNZ   WRITE010                       WRITE NEXT PIECE
         ITRACE ID=ALLWROTE
         BR    R8
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ERR0010  DS    0H
         ITRACE ID=TCP_ERR,                                            +
               DATA1=(SERVER_TCPIP_FUNCTION,4),                        +
               DATA2=(SERVER_TCPIP_ERROR_NUMBER,4)
         MVC   PRT_MESSAGE_ID(MSG03_L),MSG03
         MVC   PRT_MESSAGE_ID+(MSG03_FUNCTION-MSG03)(L'MSG03_FUNCTION),+
               SERVER_TCPIP_FUNCTION
         UNPK  PRT_MESSAGE_ID+(MSG03_RETURN_CODE-MSG03)(9),SERVER_TCPIP+R+
               _RETURN_CODE(5)
         TR    PRT_MESSAGE_ID+(MSG03_RETURN_CODE-MSG03)(8),HEXCHAR
         MVI   PRT_MESSAGE_ID+(MSG03_RETURN_CODE-MSG03)+8,C' '
         L     R1,SERVER_TCPIP_ERROR_NUMBER
         CVD   R1,WORK_DWORD
         ED    PRT_MESSAGE_ID+(MSG03_ERROR_NUMBER-MSG03)(L'MSG03_ERROR_+
               NUMBER),WORK_DWORD+5
         BAL   R9,PRT0000
         ITRACE ID=TERMAPI
         EZASMI TYPE=TERMAPI,                                          +
               TASK=WORK_TCPIP_TASK
         ITRACE ID=DEL_URLS
         XC    WEBURL(256),WEBURL
         MVI   WEBURL_STATUS,$URL_DELETE      DELETE ALL URLS
         ST    R10,WEBURL_SERVBLOK            OUR SERVBLOK ADDRESS
         LA    R2,WEBURL                      OUR WEBURL
ERR0020  DS    0H
         L     R1,COMM_URL_QUEUE              1ST ON QUEUE
         ST    R1,WEBURL_NEXT                 SET 'NEXT'
         CS    R1,R2,COMM_URL_QUEUE           ADD OURS TO QUEUE
         BC    4,ERR0020                      TRY AGAIN
         ITRACE ID=POST_URL
         POST  COMM_URL_WORK_ECB              WAKE UP URL SUBTASK
         ITRACE ID=WAIT_URL
         WAIT  ECB=WEBURL_ECB                 WAIT FOR URL SUBTASK
         B     EXIT0000
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PRT0000  DS    0H
         ITRACE ID=PRINT
         GETMAIN RU,                                                   +
               LV=PRTBLOKL,                                            +
               LOC=ANY
         MVC   0(PRTBLOKL,R1),PRTBLOK
         MVI   PRT_CC,C' '                    SINGLE SPACE
         MVC   PRT_MESSAGE_ID(PRT_LRECL),PRT_CC
PRT0010  DS    0H
         L     R15,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE
         ST    R15,PRT_NEXT-PRTBLOK(R1)
         CS    R15,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN
         BC    4,PRT0010                      TRY AGAIN
         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK
         BR    R9
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
TERM0000 DS    0H
         ITRACE ID=SHUTDOWN
         MVI   NET_RETURN_CODE,$NET_SHUTDOWN
         OI    WORK_FLAGS,$SHUTDOWN
         LA    R1,NET_PREFIX_LENGTH
         ST    R1,NET_LENGTH
         ITRACE ID=SENDSHUT
         BAL   R8,WRITE000
         ITRACE ID=CLOSE
         MVC   SERVER_TCPIP_FUNCTION,=CL16'CLOSE'
         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB
         EZASMI TYPE=CLOSE,                                            +
               S=SERVER_SOCKET,                                        +
               TASK=WORK_TCPIP_TASK,                                   +
               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +
               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +
               ECB=SERVER_TCPIP_ECB
         ITRACE ID=TERMAPI
         MVC   SERVER_TCPIP_FUNCTION,=CL16'TERMAPI'
         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB
         EZASMI TYPE=TERMAPI,                                          +
               TASK=WORK_TCPIP_TASK
* ------------------------------------------------------------------- *
*                                                                     *
*        Exit                                                         *
*                                                                     *
* ------------------------------------------------------------------- *
EXIT0000 DS    0H
         ITRACE ID=EXIT
         TM    WORK_FLAGS,$SHUTDOWN           EXITING DUE TO SHUTDOWN?
         BO    EXIT0050                       YES
* ------------------------------------------------------------------- *
*        Remove SERVBLOK from chain of active servers                 *
* ------------------------------------------------------------------- *
EXIT0010 DS    0H
         LA    R2,COMM_SERVERS                1ST SERVER
EXIT0020 DS    0H
         C     R10,0(R2)                      THIS ONE POINTING TO US?
         BE    EXIT0030                       YES
         ICM   R2,15,0(R2)                    NEXT ON CHAIN
         BNZ   EXIT0020                       LOOP
         DC    H'0'                           NOT FOUND.. VERY BAD NEWS
EXIT0030 DS    0H
         L     R1,SERVER_NEXT                 NEXT ON CHAIN
         CS    R10,R1,0(R2)                   REMOVE OURSELF FROM CHAIN
         BC    4,EXIT0010                     TRY AGAIN
* ------------------------------------------------------------------- *
*        Add SERVBLOK to chain of 'lost' servers                      *
* ------------------------------------------------------------------- *
EXIT0040 DS    0H
         L     R1,COMM_LOST_SERVERS           1ST ON CHAIN
         ST    R1,SERVER_NEXT                 CHAIN TO OUR SERVBLOK
         CS    R1,R10,COMM_LOST_SERVERS       ADD OURSELF TO CHAIN
         BC    4,EXIT0040                     TRY AGAIN
         POST  COMM_MAIN_WORK_ECB             WAKE UP MAIN TASK
* ------------------------------------------------------------------- *
*        FREEMAIN work area and exit                                  *
* ------------------------------------------------------------------- *
EXIT0050 DS    0H
         L     R1,SERVER_WORK_ADDRESS         WORK AREA ADDRESS
         L     R0,WORK_SIZE
         L     R13,4(R13)                     CALLER'S R13
         FREEMAIN RU,                         FREE WORK AREA           +
               A=(1),                                                  +
               LV=(0)
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         SR    R15,R15                        RETURN CODE
         BR    R14                            RETURN TO CALLER
* ------------------------------------------------------------------- *
*                                                                     *
*        CONSTANTS                                                    *
*                                                                     *
*-------------------------------------------------------------------- *
WORK_SIZE           CXD
WORK_START          DC    Q(DXDSERV)
IOSIZE              DC    A(URL_BUFFER_SIZE)

HEXCHAR             EQU   *-C'0'
                    DC    C'0123456789ABCDEF'

MSG01               DC    CL15'HTTPSERV01I'
                    DC    C'HTTPSERV subtask '
MSG01_SUBTASK       DC    CL8' '
                    DC    C' initializing'
MSG01L              EQU   *-MSG01

MSG02               DC    CL15'HTTPSERV02I'
                    DC    C'Creating SOCKET'
MSG02L              EQU   *-MSG02

MSG03               DS    0C
                    DC    CL15'HTTPSERV03I'
                    DC    C'TCP/IP function '
MSG03_FUNCTION      DC    CL16' '
                    DC    C'  Return code: '
MSG03_RETURN_CODE   DC    CL8' '
                    DC    C'  Error number:'
MSG03_ERROR_NUMBER  DC    X'402020202120'
MSG03_L             EQU   *-MSG03

SERVICE_TABLE  DS    0A
               DC    AL1($NET_IDENTIFY),AL4(IDENT000)
               DC    AL1($NET_DEFINE_PREFIX),AL4(DEF0000)
               DC    AL1($NET_DEFINE_SPECIFIC),AL4(DEF0000)
               DC    AL1($NET_GET_URL),AL4(GETURL00)
               DC    AL1($NET_LOG_INQUIRY),AL4(LOG0000)
               DC    AL1($NET_LOG),AL4(LOG0000)
               DC    X'FF'
         LTORG
* ------------------------------------------------------------------- *
*              WORK AREA                                              *
* ------------------------------------------------------------------- *
DXDSERV              DSECT
                     STDSAVE DSECT=NO
WORK_ID              DS   CL8

WORK_DWORD           DS   D

WORK_WAIT            DS   0F
WORK_ECB1            DS   A
WORK_ECB2            DS   A

WORK_URL_ADDRESS     DS   A

WORK_LENGTH          DS   F

WORK_RC              DS   H

WORK_TCPIP_TASK      EZASMI TYPE=TASK,STORAGE=CSECT

WORK_10              DS   CL10

WORK_FLAGS           DS   X
$SHUTDOWN            EQU  X'80'

                     PRTBLOK DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         COMMON  MAIN,TYPE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         SERVBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         NETBLOK  DSECT=YES
         WEBURL   DSECT=NO
         URL      DSECT=NO
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         LOGBLOK DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         EZASMI TYPE=GLOBAL,STORAGE=DSECT
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
         CLIENT PREFIX=DUMMY
CLIENTL  EQU    *-DUMMY_CLIENT
* ------------------------------------------------------------------- *
*              EQUATES                                                *
* ------------------------------------------------------------------- *
         COPY REGEQU
         END  HTTPSERV
