{"INMR01": {"INMLRECL": 80, "INMFNODE": "BVOMM", "INMFUID": "RLRICE", "INMTNODE": "BVOMM", "INMTUID": "RLRICE", "INMFTIME": "20081016153650000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1704794, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 4000, "INMRECFM": "FB", "INMDIR": 11, "INMDSNAM": "RLRICE.HTTP.SOURCE.CBT", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1704794, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1704794, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"RLRICE.HTTP.SOURCE.CBT": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 4000, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3339, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x05\\xf0\\x00\\x04\\x8a0@'", "extents": ["b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x05\\xf0\\x00\\x04\\x8a0@'", "b'X\\xf1\\xf5\\xe0\\x00\\x00\\x00\\xa5\\x00\\x00\\x00\\xa6\\x00\\x0c\\x00\\x1c'", "b'X\\xf1\\xf5\\xe0\\x00\\x00\\x00(\\x00\\n\\x00(\\x00\\x0b\\x00\\x02'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$APP": {"ttr": 17, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x007\\x01\\x073/\\x01\\x08\\x16\\x9f\\t\\x12\\x000\\x00*\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2007-11-28T00:00:00", "modifydate": "2008-06-17T09:12:37", "lines": 48, "newlines": 42, "modlines": 0, "user": "RLRICE"}, "text": "Assume I want to develop a new application.  How do I use this thing?\n\n1) Include the SUBPARM data area in your program's work area.\n\n2) Initialize HTTP_WORKAREA field to binary zero.\n\n3) In your application program's initalization steps,\n    Call HTTPSUB with function $HTTP_INIT\n    Call HTTPSUB with function $HTTP_CONNECT\n      - you will need the PORT number the HTTPTCP subtask\n        in the main server space is LISTENING on.\n        This is the number used on the SERVERPORT initialization\n        parameter in the main server's start up control statements\n\n4) Define your URLs\n   Call HTTPSUB with function $HTTP_DEFINE_PRFX or $HTTP_DEFINE_SPEC\n   Set HTTP_DATA to the address of the URL\n   Set HTTP_LENGTH to the length of the URL\n\n5) Request a URL to process\n   Call HTTPSUB with function $HTTP_GET_URL\n   Set HTTP_DATA to the area the URL will be returned into\n\n   Your program will WAIT at this point until a URL is received.\n   When a URL is received, HTTPSUB will return the URL, the URL's\n   length\n\n   If the main space is shut-down, the subroutine will set\n   HTTP_RETURN_CODE to $HTTP_MAIN_SHUTDOWN\n\n\n6) Test HTTP_RETURN_CODE\n   If the main server was shutdown, go to step 7\n   Otherwise, Examine the URL and send the response\n   Call HTTPSUB with function $HTTP_WRITE or $HTTP_WRITE_RAW to\n      send data back to the user's browser.  A bit of warning here...\n      if you do a $HTTP_WRITE, the data will be translated to ASCII\n      before sending it to the web user.  If you send headings or\n      other constants type data, copy it to a work area first!\n      Otherwise on the first $HTTP_WRITE it will get translated\n      to ASCII and will probably cause strange (and hard to find)\n      problems on subsequent $HTTP_WRITEs.\n   Either go back to step 5 for another URL or continue to step 7.\n\n\n7) Close the socket\n   Call HTTPSUB with function $HTTP_CLOSE\n   Call HTTPSUB with function $HTTP_CLEAN_UP\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$DOC": {"ttr": 19, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x000\\x01\\x05\\x14o\\x01\\x08\\x16\\x9f\\t\\x19\\x00F\\x00\\x87\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2005-05-26T00:00:00", "modifydate": "2008-06-17T09:19:30", "lines": 70, "newlines": 135, "modlines": 0, "user": "RLRICE"}, "text": "I'm an MVSer by background.\n\nThere is a lot of information on MVS|OS 390|z/OS systems in 'legacy'\napplications.\n\nHow would you like to make some of this data available via the web\nwithout putting the data into UNIX style file systems?\n\nThere is no hard-and-fast reason why a URL must be a \"server/pathname\".\nA URL is basically data used to access other data.  A URL could be\n\"server/DDname/Member\".  Or possibly \"server/DDname/key\" where \"key\"\nis the key for a record in a VSAM KSDS file.  The URL could be\n\"VIEWNAME/search_arg\" for a DB2 search.\n\nA few obsticles for accessing data on mainframes from the web are -\n  Most data on the web is ASCII.  Mainframe text is usually EBCDIC.\n\n  Most web servers run on a Unix system or on a PC.\n\n  MVS|OS 390|z/OS does have the \"open system\" environment with HFS\n  filesystems but yuck.\n\n\nThe purpose of this utility is to make data on mainframe systems\naccessible via the web without having to move the data into a Unix\nsystem, PC, or HFSs.  The utility does use TCP/IP and therefore some\nUNIX services, but the end application is insulated from this.\n\n\n\nThe utility is not intended to be a full function web server such\nas the APACHE server.  It is intended only to make simple\napplications (and therefore data) available from a mainframe\nwithout the need for learning about ASCII, TCP/IP, hierarchical\nfile systems, etc.\n\n\n\n\n\n\nThe utility consists of two parts.  One is the main address space.\nThe second is a subroutine that allows for the development of user\napplications.  The user application would run in a second (as many\nas you want/need) address space.  It has been a while since working\nwith COBOL, but I think the subroutine is written with the same\nlinkage as COBOL and most other high level languages.\n\n\n\n\n\nLet's assume you have an application developed and ready to go..\n\nFirst you would need to configure your main address space and then\nstart it up as an JOB or more likely as an STC.  The main address\nspace initializes the TCP/IP environment and connects to TCP/IP.\nThe main space BINDs to two ports given on the WEBPORT and SERVERPORT\ninitialization statements.\n\nNext you would bring up your application server(s).  You can have\nmultiple applications each running in their own address spaces either\nas JOBs or STCs.  When an application starts up, it uses the\nsubroutine to initialize its own TCP/IP environment and connect to\nthe main server space.  When a web client connects to the HTTP server,\nit is connecting to the HTTPWEB subtask in the main server.  Using\nTCP/IP GIVESOCKET/TAKESOCKET, the server main transfers ownership\nof the connection to the secondary space.  The secondary space now\nprocesses the URL and sends the requested info back to the web user.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$HTTPURL": {"ttr": 22, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x07$/\\x01\\x07$/\\x14\\x05\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-08-30T00:00:00", "modifydate": "2007-08-30T14:05:30", "lines": 27, "newlines": 27, "modlines": 0, "user": "RLRICE"}, "text": "What is the HTTPURL subtask for?\n\nWhen secondary server spaces start up, they \"register\" or\n\"define\" URLs that they \"know how to process\".\nThe HTTPURL subtask manages a data space of these \"registered\" URLs.\n\n\nSince secondary spaces and web clients can contact the HTTP server\nat any time, it is necessary to make sure the list of URLs is not\nbeing updated by two different \"things\" at the same time.  Also\nwe don't want to be \"looking up\" a URL while a new URL is being\nregistered.  Using a subtask to manage the list of URLs causes the\nregistration or lookups of URLs to be serialized or single-threaded.\nSince there is only one subtask that can update the list of\nregistered URLs, there is no need to ENQ or lock the list while\nit is being updated.\n\nIt may sound like a bit of a bottle neck, but the URL manager is\nonly updating/looking up in-core info.\n\n\nThe information stored for a URL includes the SERVBLOK address for\nthe HTTPSERV subtask that manages communication with a specific\nremote server, and the CLIENT ID used for the GIVESOCKET/TAKESOCKET.\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$INNARDS": {"ttr": 24, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x005\\x01\\x07$/\\x01\\x08\\x16\\x9f\\t(\\x00v\\x00J\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2007-08-30T00:00:00", "modifydate": "2008-06-17T09:28:35", "lines": 118, "newlines": 74, "modlines": 0, "user": "RLRICE"}, "text": "For those who like to know more about the \"innards\" of things...\n\nInside the main server space there are several subtasks.\nMAIN\nPRINTER\nCONSOLE\nHTTPLOG\nHTTPWEB\nHTTPTCP\nHTTPLOCL\nHTTPURL\nOptionally one or more HTTPSERV\n\n\nWhen the main space starts up it\n  .  Obtains work area\n  .  LOADs the common data module HTTPCOMM\n     R11 points to HTTPCOMM at all times\n  .  LOADs and links to HTTPINIT\n  .  HTTPINIT\n     . Obtains storage for the trace table\n     . initializes the trace table 1STX, LAST, and CURR\n     . Verify required DD's are present\n     . Calls the parameter reader (HTTPPARM)\n     . ATTACHes the console subtask (HTTPCONS)\n     . ATTACHes the logging subtask (HTTPLOG)\n     . ATTACHes the URL managing subtask (HTTPURL)\n     . ATTACHes the WEB listener subtask HTTPWEB\n     . ATTACHes the server space contact subtask (HTTPTCP)\n\nNow the main space WAITs for work\n\nBefore the HTTP server can do any real work, server spaces\nare needed.\n\n\n\nShort explantion of server space start up:\nWhen a server space starts up, it contacts the main space.\nIn the main space, a new subtask will be created to 'manage'\nthe communcation back to the server space.  There is a subtask\nin the main server space for every server space.  The server\nspace will then 'register' the URLs it will process.\nOnce the server has 'registered' all the URL(s), it 'asks'\nthe main space for URLs to process.\n\n\n\nLonger explanation of server space start up:\nThe application program can do any initialization required.\nIt then calls HTTPSUB to CONNECT to the main space.\nThe main space will ATTACH a new HTTPSERV subtask for this server.\nThe application program calls HTTPSUB to DEFINE a URL.\nThe application can DEFINE as many URLs as it needs/wants.\nOnce the application has defined the URLs, it calls HTTPSUB to get\na URL to process.  At this point the application will be in a WAIT\nstate.\n\n\nEven longer explation of server space start up:\nPrior to starting up a server space, the main space has be running.\nThe main space will have ATTACHed an HTTPTCP subtask that will have\ncreated a SOCKET, OPENed the SOCKET, BOUND the SOCKET to the\nSERVERPORT, issued a LISTEN, and have an ACCEPT pending.  When the\nserver space starts up, it will also (using the HTTPSUB) create a\nSOCKET, OPEN the SOCKET, BIND the SOCKET (it will use zero for the\nPORT number so TCP/IP will select an unused PORT), and issue a\nCONNECT referencing the SERVERPORT PORT number.  The CONNECT causes\nTCP/IP to POST the ECB the HTTPSUB task's ACCEPT is WAITing on.\nThe HTTPSUB subtask will build a new SERVBLOK and POST an ECB the\nmain task is WAITing on.  The main task will ATTACH a new HTTPSERV\nsubtask.  HTTPTCP will transfer the ownership of the connection to\nthe new HTTPSERV subtask... HTTPSERV issues a GIVESOCKET and the\nHTTPSERV subtask issues a TAKESOCKET.  The HTTPTCP subtask is\nnow \"out of the picture\" for this server.  HTTPTCP will issue\nanother ACCEPT and WAIT again.  Meanwhile (back at the ranch),\nthe HTTPSERV subtask will issue a READ.  The server space will\nissue a SEND to define a URL.  The HTTPSERV subtask will queue\nwork to the HTTPURL subtask to have the new URL added to the\nURL data space.  HTTPURL will signal the URL has been added to\nthe data space and HTTPSERV will issue a SEND to let the\nserver space know the URL has been accepted.  The server space\ncan repeat the process to define as many URLS as you want.\nOnce the server has defined all its URLs, it will SEND a request\nto \"get a URL\".  Now the main space and server space are in\nWAIT states.\n\n\nYou can start up as many server spaces as needed.\n\n\nWhat happens when a web user (using Internet Explorer, or other\nbrowser) sends a URL to the server?\n\nAt start up, the main space will have ATTACHed the HTTPWEB subtask.\nThe HTTPWEB subtask creates a SOCKET, OPENs the SOCKET, BINDs to\nthe WEBPORT PORT, issues a LISTEN, and has an ACCEPT pending.\nWhen the user's browser sends the URL, TCP/IP POSTs the ECB HTTPWEB\nis WAITing on.  HTTPWEB issues a READ to get the URL.  HTTPWEB\nbuilds a WEBURL block, transates the data into EBCDIC, and logs it.\nHTTPWEB then queues the URL to the HTTPURL subtask to \"look up\"\nwhich server space will process the URL.  HTTPWEB then issues a\nGIVESOCKET to give ownership of the connection not to the HTTPSERV\nsubtask, but the the server space... you may have to think about\nthat one for a minute... I do every time I look at the source code.\nHTTPWEB will then add the WEBURL block to the work queue for the\nHTTPSERV subtask that corresponds the server space that will process\nthe URL.  The HTTPWEB subtask will issue another ACCEPT and WAIT\nfor another URL from a browser.  The HTTPSERV subtask SENDs the\nURL and some SOCKET info to the server space.  The server space\nwill have had a READ pending (remember that from what happens when\na server space starts up\"?).  The server space will then issue a\nTAKESOCKET.  The server space now has the URL and ownership of\nconnection.  The server space can now send data back (directly\nfrom the server space to the user...  the main space is no longer\ninvolved) to the user's browser.  Once the server has completed\nsending the reponse, it CLOSEs the SOCKET and sends another\n\"get URL\" to the main space to ask for more work.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$WEBURL": {"ttr": 28, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x07$/\\x01\\x07$/\\x14\\x19\\x00\\x1b\\x00\\x1b\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2007-08-30T00:00:00", "modifydate": "2007-08-30T14:19:18", "lines": 27, "newlines": 27, "modlines": 0, "user": "RLRICE"}, "text": "Secondary server spaces \"register\" or \"define\" URLs with the main\nserver space.  A URL can be specific or a prefix.\n\nAn example of specific URLs are the URLs processed by HTTPAPP2.\nHTTPAPP2 registers \"ACT\", \"APF\", and \"LNK\".  If the main space\nreceives a URL like \"http://server/apf\", it \"knows\" to send the\nURL to HTTPAPP2.  If the URL was \"http://server/applist\", it\nwould not \"match\" any defined URL.\n\nAn example of a prefix type URLs are the URLs registerd by HTTPAPP1.\nHTTPAPP1 returns members of PDS(es).  It registers URLs that look\nlike \"http://ddname\" where ddname is a DD present in the HTTPAPP1\nJCL.  So if in the start up JCL for HTTPAPP1 there is a DD like\n\"//GIFS    DD   DSN=xxxx.GIFS,DISP=SHR\"\nHTTPAPP1 would register a URL \"http://server/GIFS\".  Then if the\nHTTP server receives a URL from a web client like\n\"http://server/GIFS/LOGO\", the main space would know to send the\nURL to HTTPAPP1.  HTTPAPP1 would send the web client the contents\nof member LOGO of the data set \"xxxxx.GIFS\".\n\nParameters (data following the question mark (?)) is not considered\nfor matching specific URLs.  So \"http://server/ITEM?abc123\" would\nmatch the specific URL \"http://server/ITEM\".  The question mark and\nthe \"abc123\" would be ignored for matching the URL.  This means\nthat the \"ITEM\" processing secondary space would receive the URL\nand it could use the \"abc123\" as the key to a VSAM KSDS, DB2 table\nquery, etc.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "APP2ACT": {"ttr": 30, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\n\\x00X\\x01\\x05\\x11\\x8f\\x01\\x07'\\x8f\\x13Q\\x02(\\x02\\x0e\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.10", "flags": 0, "createdate": "2005-04-28T00:00:00", "modifydate": "2007-10-05T13:51:58", "lines": 552, "newlines": 526, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*   This sample application returns a list of the MVS address spaces  *\n*   in HTML TABLE form.                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nAPP2ACT  CSECT\nAPP2ACT  AMODE 31\nAPP2ACT  RMODE ANY\n         STM   R14,R12,12(R13)           SAVE REGISTERS\n         LR    R12,R15                   SET BASE REGISTER\n         USING APP2ACT,R12               DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'APP2ACT'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R11,R1                    COPY PARM BLOCK ADDRESS\n         USING HTTP_PARMS,R11\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=ANY\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    HTTP_ALET,HTTP_ALET\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n\n         MVC   WORK_BUFFER(HTML_HEADERL),HTML_HEADER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,HTML_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         L     R1,CVTPTR\n         USING CVT,R1\n         MVC   WORK_BUFFER(SYSTEM_HEADERL),SYSTEM_HEADER\n         MVC   WORK_BUFFER+(SYSTEM_NAME-SYSTEM_HEADER)(8),CVTSNAME\n\n         TIME  DEC\n         ST    R0,WORK_TIME\n         ST    R1,WORK_DATE\n\n         UNPK  WORK_DWORD(7),WORK_TIME(4)\n        MVC   WORK_BUFFER+(SYSTEM_TIME-SYSTEM_HEADER)+0(2),WORK_DWORD+0\n         MVI   WORK_BUFFER+(SYSTEM_TIME-SYSTEM_HEADER)+2,C':'\n        MVC   WORK_BUFFER+(SYSTEM_TIME-SYSTEM_HEADER)+3(2),WORK_DWORD+2\n         MVI   WORK_BUFFER+(SYSTEM_TIME-SYSTEM_HEADER)+5,C':'\n        MVC   WORK_BUFFER+(SYSTEM_TIME-SYSTEM_HEADER)+6(2),WORK_DWORD+4\n         AP    WORK_DATE,P_1900000\n         MVC   WORK_BUFFER+(SYSTEM_DATE-SYSTEM_HEADER)(09),=X'F02020202+\n               04B202020'\n         ED    WORK_BUFFER+(SYSTEM_DATE-SYSTEM_HEADER)(9),WORK_DATE\n         MVI   WORK_BUFFER+(SYSTEM_DATE-SYSTEM_HEADER),C' '\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,SYSTEM_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         MVC   WORK_BUFFER(TABLE_HEADERL),TABLE_HEADER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,TABLE_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         MVC   DETAIL(DETAILL),DETAIL_INIT\n         MVC   DTLJOB,=C'JOB NAME'\n         MVC   DTLSTEP,=C'STEP    '\n         MVC   DTLPROC,=C'PROC    '\n         MVI   DTLTYPE,C'T'\n         MVC   DTLSTAT,=C'STA'\n         MVC   DTLUSER,=C'USER    '\n         MVC   DTLSWAP,=C'SWAP'\n         MVC   DTLSRVC,=C'SERVICE '\n         MVC   DTLIO,=C'   I/O''S'\n         MVC   DTLCPU,=C'   CPU TIME'\n\n         MVC   WORK_BUFFER(ROW_HEADERL),ROW_HEADER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,ROW_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         LA    R1,DETAIL\n         ST    R1,HTTP_DATA\n         LA    R1,DETAILL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         MVC   WORK_BUFFER(ROW_TRAILERL),ROW_TRAILER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,ROW_TRAILERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\nACT0010  DS    0H\n         USING PSA,R0                    DEFINE PSA BASE\n         L     R1,FLCCVT                 ADDRESS OF CVT FROM PSA\n         USING CVT,R1                    DEFINE CVT BASE\n         L     R1,CVTASVT                ASVT ADDRESS FROM CVT\n         USING ASVT,R1                   DEFINE ASVT BASE\n         L     R3,ASVTMAXU               MAXIMUM NUMBER OF ENTRIES\n         LA    R4,ASVTFRST               FIRST ENTRY\n*---------------------------------------------------------------------*\n*    R4 is the index into the address space vector table.  If the     *\n*    high bit is on, the address space is not active.                 *\n*---------------------------------------------------------------------*\nACT0030  DS    0H\n         LA    R4,4(,R4)                 BUMP BY FOUR.\n         ICM   R5,15,0(R4)               ASCB ADDRESS FROM ASVT\n         BM    ACT0280                   ADDRESS SPACE NOT IN USE\n         USING ASCB,R5                   DEFINE ASCB BASE\n         MVC   DETAIL(DETAILL),DETAIL_INIT\n*---------------------------------------------------------------------*\n*    TEST FOR SWAPPED IN/SWAPPED OUT                                  *\n*---------------------------------------------------------------------*\n         L     R6,ASCBOUCB               OUCB ADDRESS FROM ASCB\n         USING OUCB,R6                   DEFINE OUCB BASE\n         TM    OUCBQFL,OUCBLSW           LOGICAL SWAP?\n         BO    ACT0040                   LOGICAL SWAPS ARE 'IN'\n         TM    ASCBRCTF,ASCBOUT          SWAPPED OUT?\n         BNO   ACT0040                   NO\nACT0040  DS    0H\n         MVC   WORK_JOB,=CL8'STARTING'   INITIALIZE JOB NAME\n         ICM   R7,15,ASCBJBNI            JOB NAME ADDRESS\n         BZ    ACT0050                   NO JOB NAME\n         MVC   WORK_JOB,0(R7)            MOVE JOBNAME\n         S     R7,=A(CHKEY-CSCB)         CSCB\n         B     ACT0060\nACT0050  DS    0H\n         ICM   R7,15,ASCBJBNS            STC/MOUNT/LOGON NAME ADDRESS\n         BZ    ACT0060                   NO STC/MOUNT/LOGON NAME\n         MVC   WORK_JOB,0(R7)            MOVE STC/MOUNT/LOGON NAME\n         S     R7,=A(CHCLS-CSCB)         CSCB\n         CLI   WORK_JOB,C'*'             MASTER SCHEDULER?\n         BNE   ACT0060                   NO\n         SR    R7,R7                     MASTER\nACT0060  DS    0H\n         TM    OUCBYFL,OUCBLOG           TSO ADDRESS SPACE?\n         BNO   ACT0080                   NO\n         LA    R7,8(R7)                  READJUST CSCB POINTER\n         MVI   WORK_TYPE,C'T'            SET ADDRESS SPACE TYPE\n         B     ACT0110\n*---------------------------------------------------------------------*\n*    TEST FOR STC AND MOUNT ADDRESS SPACES                            *\n*---------------------------------------------------------------------*\nACT0080  DS    0H\n         LTR   R7,R7                     CSCB PRESENT?\n         BZ    ACT0090                   NO, ASSUME STC\n         USING CSCB,R7\n         CLI   CHTRKID,CHJOBID           INITIATED JOB?\n         BE    ACT0100                   YES\nACT0090  DS    0H\n         CLC   WORK_JOB,=CL8'INIT'       INITIATOR?\n         BE    ACT0280                   YES, DON'T SHOW INITIATORS\n         MVI   WORK_TYPE,C'S'            SET ADDRESS SPACE TYPE\n         B     ACT0110\n*---------------------------------------------------------------------*\n*    BATCH JOB - CHECK JOBNAME FOR SPECIAL PROCESSING                 *\n*---------------------------------------------------------------------*\nACT0100  DS    0H\n         CLI   CHVCD,X'04'               START, MOUNT, OR LOGON?\n         BE    ACT0090                   YES\n         CLI   CHVCD,X'0C'               START, MOUNT, OR LOGON?\n         BE    ACT0090                   YES\n         MVI   WORK_TYPE,C'B'            BATCH ADDRESS SPACE\n*---------------------------------------------------------------------*\n*    ADDRESS SPACE IS TO BE DISPLAYED, BUILD THE OUTPUT DETAIL.       *\n*---------------------------------------------------------------------*\nACT0110  DS    0H\n         MVC   DTLJOB,WORK_JOB           SET NAME\n         MVC   DTLTYPE,WORK_TYPE         SET ADDRESS SPACE TYPE\n         LTR   R7,R7                     CSCB PRESENT?\n         BZ    ACT0150                   NO\n         CLI   CHVCD,X'04'               STC, MOUNT, OR LOGON?\n         BE    ACT0120                   YES\n         CLI   CHVCD,X'0C'               STC, MOUNT, OR LOGON?\n         BE    ACT0120                   YES\n         CLI   CHSTEP,X'00'              STEP NAME PRESENT?\n         BE    ACT0130                   NO\n         MVC   DTLSTEP,CHSTEP            SET STEP NAME\n         B     ACT0130\nACT0120  DS    0H\n         CLI   CHKEY,X'40'               STEP NAME GIVEN?\n         BNH   ACT0150                   NO\n         MVC   DTLSTEP,CHKEY             SET STEP NAME\nACT0130  DS    0H\n         CLI   WORK_TYPE,C'T'            TSO USER?\n         BNE   ACT0140                   NO\n         MVC   DTLPROC,=CL8'TSO USER'\n         CLI   CHCLS,X'00'               STEP NAME PRESENT?\n         BE    ACT0150                   NO\n         MVC   DTLSTEP,CHCLS             SET STEP NAME\n         B     ACT0150\nACT0140  DS    0H\n         CLI   CHPROCSN,X'00'            PROC STEP PRESENT?\n         BE    ACT0150                   NO\n         CLI   WORK_TYPE,C'B'            BATCH\n         BNE   ACT0150                   NO\n         MVC   DTLPROC,CHPROCSN          SET PROC STEP\n         DROP  R7\n         EJECT\n*---------------------------------------------------------------------*\n*    SHOW IF JOB IS SWAPPED IN OR OUT, OR IS IN TRANSITION            *\n*---------------------------------------------------------------------*\nACT0150  DS    0H\n         TM    OUCBQFL,X'E0'             TRANSITIONING STATUS?\n         BZ    ACT0160                   NO\n         MVC   DTLSTAT,=CL3'<->'         INDICATE TRANSITIONING\n         B     ACT0200\nACT0160  DS    0H\n         TM    OUCBQFL,OUCBLSW           LOGICAL SWAP INDICATOR?\n         BZ    ACT0170                   NO\n         MVC   DTLSTAT,=CL3'LSW'         SET LOGICAL SWAP INDICATOR\n         B     ACT0200\nACT0170  DS    0H\n         TM    ASCBRCTF,ASCBOUT          SWAPPED OUT?\n         BO    ACT0190                   YES\n         CLC   OUCBNDS,=H'0'             NON-SWAPPABLE?\n         BNE   ACT0180                   NO\n         MVC   DTLSTAT,=CL3'N/S'         MOVE IN NON-SWAP INDICATION\n         B     ACT0200\nACT0180  DS    0H\n         MVC   DTLSTAT,=CL3'IN'          SET MEMORY POSITION TO IN\n         B     ACT0200\nACT0190  DS    0H\n         MVC   DTLSTAT,=CL3'OUT'         SET STATUS\n         B     ACT0210\nACT0200  DS    0H\n         MVC   DTLUSER,OUCBUSRD          SET USER\n         B     ACT0240\n*---------------------------------------------------------------------*\n*    JOB IS SWAPPED OUT - PUT SWAP REASON IN PLACE OF USER            *\n*---------------------------------------------------------------------*\nACT0210  DS    0H\n         LA    R1,SWAPTBL                SWAP REASON TABLE ADDRESS\nACT0220  DS    0H\n         CLC   OUCBSRC(1),0(R1)          REASON FOUND?\n         BE    ACT0230                   YES\n         LA    R1,6(R1)                  NEXT ENTRY\n         CLI   0(R1),X'FF'               END OF TABLE?\n         BNE   ACT0220                   NO\nACT0230  DS    0H\n         MVI   DTLSTAT+4,C'-'\n         MVC   DTLUSER(5),1(R1)          SET SWAP REASON\n*---------------------------------------------------------------------*\n*    GET SWAP COUNT                                                   *\n*---------------------------------------------------------------------*\nACT0240  DS    0H\n         LH    R7,OUCBSWC                NBR OF SWAPS\n         CVD   R7,WORK_DWORD             CONVERT TO DECIMAL\n         MVC   DTLSWAP,=X'40202120'      MOVE IN THE EDIT MASK\n         ED    DTLSWAP,WORK_DWORD+6      EDIT THE OUTPUT FIELD\n*---------------------------------------------------------------------*\n*    GET SERVICE UNITS                                                *\n*---------------------------------------------------------------------*\nACT0250  DS    0H\n         L     R7,OUCBWMS                LOAD SERVICE UNITS\n         CVD   R7,WORK_DWORD             CONVERT TO DECIMAL\n         MVC   DTLSRVC,=X'4020202020202120'   INITIALIZE EDIT MASK\n         ED    DTLSRVC,WORK_DWORD+4      EDIT THE RESULT\n*---------------------------------------------------------------------*\n*    GET NON-SPOOL I/O COUNT                                          *\n*---------------------------------------------------------------------*\n         L     R7,ASCBIOSC               NBR OF IO'S\n         CVD   R7,WORK_DWORD             CONVERT TO DECIMAL\n         MVC   DTLIO,=X'4020202020202120'     INITIALIZE EDIT MASK\n         ED    DTLIO,WORK_DWORD+4        EDIT I/O'S\n*---------------------------------------------------------------------*\n*    CALCULATE CPU TIME                                               *\n*---------------------------------------------------------------------*\nACT0260  DS    0H\n         LM    R0,R1,ASCBEJST            LOAD TASK TIME\n         SRDL  R0,12                     CONVERT TO MICRO SEC\n         D     R0,=F'10000'              CONVERT TO HUNDREDTHS\n         LM    R14,R15,ASCBSRBT          LOAD SRB TIME\n         SRDL  R14,12                    CONVERT TO MICRO SECONDS\n         D     R14,=F'10000'             CONVERT TO HUNDREDTHS\n         AR    R1,R15                    TASK + SRB TIME\n         MVC   DTLCPU(11),=C'  .  .  .  '\n         SR    R0,R0\n         D     R0,=F'100'                CONVERT TO WHOLE SECONDS\n         CVD   R0,WORK_DWORD             CONVERT TO DECIMAL\n         UNPK  DTLCPU+9(2),WORK_DWORD\n         OI    DTLCPU+10,X'F0'           MAKE IT PRINTABLE\n         SR    R0,R0\n         D     R0,=F'60'                 CONVERT TO MINUTES\n         CVD   R0,WORK_DWORD             CONVERT TO DECIMAL\n         UNPK  DTLCPU+6(2),WORK_DWORD\n         OI    DTLCPU+7,X'F0'            MAKE IT PRINTABLE\n         SR    R0,R0\n         D     R0,=F'60'                 MINUTES AND HOURS\n         CVD   R0,WORK_DWORD             CONVERT MINUTES TO DECIMAL\n         UNPK  DTLCPU+3(2),WORK_DWORD\n         OI    DTLCPU+4,X'F0'            MAKE IT PRINTABLE\n         CVD   R1,WORK_DWORD             CONVERT HOURS TO DECIMAL\n         UNPK  DTLCPU(2),WORK_DWORD\n         OI    DTLCPU+1,X'F0'            MAKE IT PRINTABLE\n*---------------------------------------------------------------------*\n*    Detail for this address space complete.                          *\n*---------------------------------------------------------------------*\n         TR    DETAIL(DETAILL),TRTAB\nACT0270  DS    0H\n         MVC   WORK_BUFFER(ROW_HEADERL),ROW_HEADER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,ROW_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         LA    R1,DETAIL\n         ST    R1,HTTP_DATA\n         LA    R1,DETAILL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         MVC   WORK_BUFFER(ROW_TRAILERL),ROW_TRAILER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,ROW_TRAILERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\nACT0280  DS    0H\n         BCT   R3,ACT0030                PROCESS NEXT ADDRESS SPACE\n\n         MVC   WORK_BUFFER(TABLE_TRAILERL),TABLE_TRAILER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,TABLE_TRAILERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         MVC   WORK_BUFFER(HTML_TRAILERL),HTML_TRAILER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,HTML_TRAILERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13                    COPY WORK AREA ADDRESS\n         L     R13,4(R13)                RESTORE CALLER'S R13\n         FREEMAIN RU,A=(1),LV=WORKL      FREE THE WORK AREA\n         L     R14,12(R13)               RESTORE R14\n         SR    R15,R15\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nP_1900000           DC  P'1900000'\nHTTP_HEADER         DS  0C\n                    DC  C'HTTP/1.0 200 OK'\n                    DC  AL1($LF)\n                    DC  C'Content-type: text/html'\n                    DC  AL1($LF)\n                    DC  AL1($LF)\nHTTP_HEADERL        EQU *-HTTP_HEADER\nHTML_HEADER         DS  0C\n                    DC  C'<HTML>'\n                    DC  C'<BODY>'\n                    DC  C'<CENTER>'\n                    DC  AL1($LF)\nHTML_HEADERL        EQU *-HTML_HEADER\nSYSTEM_HEADER       DS  0C\n                    DC  C'<H1>Active address spaces on '\nSYSTEM_NAME         DC  CL8' '\n                    DC  C'</H1>'\n                    DC  C'<H3>'\nSYSTEM_DATE         DC  CL8' '\n                    DC  CL2' '\nSYSTEM_TIME         DC  CL9' '\n                    DC  C'</H3>'\nSYSTEM_HEADERL      EQU *-SYSTEM_HEADER\nHTML_TRAILER        DS  0C\n                    DC  C'</CENTER>'\n                    DC  C'</BODY>'\n                    DC  C'</HTML>'\nHTML_TRAILERL       EQU *-HTML_TRAILER\nTABLE_HEADER        DS  0C\n                    DC  C'<TABLE BORDER>'\n                    DC  AL1($LF)\nTABLE_HEADERL       EQU *-TABLE_HEADER\nTABLE_TRAILER       DS  0C\n                    DC  C'</TABLE>'\n                    DC  AL1($LF)\nTABLE_TRAILERL      EQU *-TABLE_TRAILER\nROW_HEADER          DS  0C\n                    DC  C'<TR>'\n                    DC  AL1($LF)\nROW_HEADERL         EQU *-ROW_HEADER\nROW_TRAILER         DS  0C\n                    DC  C'</TR>'\n                    DC  AL1($LF)\nROW_TRAILERL        EQU *-ROW_TRAILER\n\nDETAIL_INIT         DS    0C\n                    DC    CL4'<TD>'\n                    DC    CL8' '\n                    DC    CL5'</TD>'\n                    DC    CL4'<TD>'\n                    DC    CL8' '\n                    DC    CL5'</TD>'\n                    DC    CL4'<TD>'\n                    DC    CL8' '\n                    DC    CL5'</TD>'\n                    DC    CL4'<TD>'\n                    DC    C' '\n                    DC    CL5'</TD>'\n                    DC    CL4'<TD>'\n                    DC    CL3' '\n                    DC    CL5'</TD>'\n                    DC    CL4'<TD>'\n                    DC    CL8' '\n                    DC    CL5'</TD>'\n                    DC    CL4'<TD>'\n                    DC    CL4' '\n                    DC    CL5'</TD>'\n                    DC    CL4'<TD>'\n                    DC    CL8' '\n                    DC    CL5'</TD>'\n                    DC    CL4'<TD>'\n                    DC    CL8' '\n                    DC    CL5'</TD>'\n                    DC    CL4'<TD>'\n                    DC    CL11' '\n                    DC    CL5'</TD>'\n\nSWAPTBL             DS  0C\n                    DC  X'01',CL5'TRMOT'\n                    DC  X'02',CL5'TRMIN'\n                    DC  X'03',CL5'LWAIT'\n                    DC  X'04',CL5'AUXST'\n                    DC  X'05',CL5'RSTOR'\n                    DC  X'06',CL5'DWAIT'\n                    DC  X'07',CL5'RQSWP'\n                    DC  X'08',CL5'ENQEX'\n                    DC  X'09',CL5'EXCHG'\n                    DC  X'0A',CL5'UNLAT'\n                    DC  X'FF',CL5'UNK  '\n\nTRTAB               DS    0CL256\n                    DC    C'                '     X'00' - X'0F'\n                    DC    C'                '     X'10' - X'1F'\n                    DC    C'                '     X'20' - X'2F'\n                    DC    C'                '     X'30' - X'3F'\n                    DC    C'          \u00a2.<(+|'     X'40' - X'4\n                    DC    C'&&         !$*);\u00ac'    X'50' - X'5F'\n                    DC    C'-/        \u00a6,%_>?'     X'60' - X'6F'\n                    DC    C'          :#@''=\"'    X'70' - X'7F'\n                    DC    C'{ABCDEFGHI      '     X'80' - X'8F'\n                    DC    C' JKLMNOPQR      '     X'90' - X'9F'\n                    DC    C'  STUVWXYZ      '     X'A0' - X'AF'\n                    DC    C'                '     X'B0' - X'BF'\n                    DC    C'}ABCDEFGHI      '     X'C0' - X'CF'\n                    DC    C' JKLMNOPQR      '     X'D0' - X'DF'\n                    DC    C'  STUVWXYZ      '     X'E0' - X'EF'\n                    DC    C'0123456789      '     X'F0' - X'FF'\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    DS    18F\nWORK_DWORD          DS    D\nWORK_TIME           DS    F\nWORK_DATE           DS    F\n\nWORK_JOB            DC    CL8' '\nWORK_TYPE           DC    C' '\n\nDETAIL              DS    0C\n                    DS    CL4\nDTLJOB              DS    CL8\n                    DS    CL5\n                    DS    CL4\nDTLSTEP             DS    CL8\n                    DS    CL5\n                    DS    CL4\nDTLPROC             DS    CL8\n                    DS    CL5\n                    DS    CL4\nDTLTYPE             DS    C\n                    DS    CL5\n                    DS    CL4\nDTLSTAT             DS    CL3\n                    DS    CL5\n                    DS    CL4\nDTLUSER             DS    CL8\n                    DS    CL5\n                    DS    CL4\nDTLSWAP             DS    CL4\n                    DS    CL5\n                    DS    CL4\nDTLSRVC             DS    CL8\n                    DS    CL5\n                    DS    CL4\nDTLIO               DS    CL8\n                    DS    CL5\n                    DS    CL4\nDTLCPU              DS    CL11\n                    DS    CL5\nDETAILL             EQU   *-DETAIL\n\nWORK_BUFFER         DS    256C\n\nWORKL               EQU   *-WORK\n                    SUBPARM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA     DSECT=YES,LIST=NO\n         IKJTCB     LIST=NO\n         IEFTIOT1\n         CVT   DSECT=YES\n         IHAASVT\n         IHAASCB\n         IRAOUCB\nCSCB     DSECT\n         IEECHAIN\n         COPY REGEQU\n$LF      EQU  X'0A'\n         END  APP2ACT\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "APP2APF": {"ttr": 269, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x17\\x01\\x05\\x12_\\x01\\x05\\x12_\\x16\\x00\\x00\\xc3\\x00\\xa6\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2005-05-05T00:00:00", "modifydate": "2005-05-05T16:00:17", "lines": 195, "newlines": 166, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*   This application returns a list libraries in the system's         *\n*   authorized libraries (APF) list.                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nAPP2APF  CSECT\nAPP2APF  AMODE 31\nAPP2APF  RMODE ANY\n         STM   R14,R12,12(R13)       SAVE REGISTERS\n         LR    R12,R15               SET BASE REGISTER\n         USING APP2APF,R12           DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'APP2APF'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R11,R1                COPY PARM BLOCK ADDRESS\n         USING HTTP_PARMS,R11\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=ANY\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_CSVAPF(CSVAPFL),CSVAPFI\n         LH    R0,H8000\nINIT0010 DS    0H\n         ST    R0,WORK_ANSLEN\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=ANY\n         ST    R1,WORK_ANSAREA\n         LR    R10,R1\n         USING APFHDR,R10\n         CSVAPF REQUEST=LIST,                                          +\n               ANSAREA=(R10),                                          +\n               ANSLEN=WORK_ANSLEN,                                     +\n               MF=(E,WORK_CSVAPF)\n         LTR   R15,R15\n         BZ    INIT0020\n         TM    WORK_FLAG,$WORK_CSVERROR\n         BO    ERR0010\n         L     R0,WORK_ANSLEN\n         MVC   WORK_ANSLEN,APFHTLEN\n         FREEMAIN RU,                                                  +\n               A=(10),                                                 +\n               LV=(0)\n         L     R0,WORK_ANSLEN\n         B     INIT0010\nINIT0020 DS    0H\n         XC    HTTP_ALET,HTTP_ALET\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n\n         MVC   WORK_BUFFER(HTML_HEADERL),HTML_HEADER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,HTML_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         L     R1,CVTPTR\n         USING CVT,R1\n         MVC   WORK_BUFFER(SYSTEM_HEADERL),SYSTEM_HEADER\n         MVC   WORK_BUFFER+(SYSTEM_NAME-SYSTEM_HEADER)(8),CVTSNAME\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,SYSTEM_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         LA    R1,APF_DETAILL\n         ST    R1,HTTP_LENGTH\n         L     R9,APFH#REC\n         LR    R8,R10\n         A     R8,APFHOFF\n         USING APFE,R8\nAPF0000  DS    0H\n         MVC   WORK_BUFFER(APF_DETAILL),APF_DETAIL\n         MVC   WORK_BUFFER+(APF_DSNAME-APF_DETAIL)(44),APFEDSNAME\n         MVC   WORK_BUFFER+(APF_VOLSER-APF_DETAIL)(6),APFEVOLUME\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         AH    R8,APFELEN\n         BCT   R9,APF0000\n\n         MVC   WORK_BUFFER(HTML_TRAILERL),HTML_TRAILER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,HTML_TRAILERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ST    R15,WORK_DWORD\n         MVC   WORK_BUFFER(MSG01L),MSG01\n         UNPK  WORK_BUFFER+(MSG01_RC-MSG01)(5),WORK_DWORD+2(3)\n         TR    WORK_BUFFER+(MSG01_RC-MSG01)(4),HEXCHAR\n         MVI   WORK_BUFFER+(MSG01_RC-MSG01)+4,C' '\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,MSG01L\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13                  COPY WORK AREA ADDRESS\n         L     R13,4(R13)              RESTORE CALLER'S R13\n         FREEMAIN RU,A=(1),LV=WORKL    FREE THE WORK AREA\n         L     R14,12(R13)             RESTORE R14\n         SR    R15,R15\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCSVAPFI  CSVAPF MF=(L,WORK_CSV_PARMS,0D)\nCSVAPFL  EQU    *-CSVAPFI\n\nH8000               DC  H'8000'\n\nHEXCHAR             EQU *-C'0'\n                    DC  C'0123456789ABCDEF'\n\nMSG01               DS  0C\n                    DC  C'Error from CSVAPF '\nMSG01_RC            DC  CL4' '\n                    DC  C' '\nMSG01L              EQU *-MSG01\n\nHTML_HEADER         DS  0C\n                    DC  C'<HTML>'\n                    DC  C'<BODY>'\n                    DC  C'<CENTER>'\n                    DC  AL1($LF)\nHTML_HEADERL        EQU *-HTML_HEADER\nSYSTEM_HEADER       DS  0C\n                    DC  C'<H1>Authorized library (APF) list for '\nSYSTEM_NAME         DC  CL8' '\n                    DC  C'</H1>'\n                    DC  C'<PRE>'\nSYSTEM_HEADERL      EQU *-SYSTEM_HEADER\n\nHTML_TRAILER        DS  0C\n                    DC  C'</CENTER>'\n                    DC  C'</BODY>'\n                    DC  C'</HTML>'\nHTML_TRAILERL       EQU *-HTML_TRAILER\nAPF_DETAIL          DS  0C\nAPF_DSNAME          DC  CL44' '\n                    DC  CL2' '\nAPF_VOLSER          DC  CL6' '\n                    DC  C'<P>'\nAPF_DETAILL         EQU *-APF_DETAIL\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    DS    18F\nWORK_DWORD          DS    D\nWORK_CSVAPF         DS    0F,(CSVAPFL)X\nWORK_ANSAREA        DS    F\nWORK_ANSLEN         DS    F\nWORK_FLAG           DS    X\n$WORK_CSVERROR      EQU   X'80'\nWORK_BUFFER         DS    CL256\nWORKL               EQU   *-WORK\n                    SUBPARM  TYPE=DSECT\n         CVT  DSECT=YES,LIST=NO\n         CSVAPFAA\n         COPY REGEQU\n$LF      EQU  X'0A'\n         END  APP2APF\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "APP2IPL": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x14\\x001\\x01\\x07'o\\x01\\x07'\\x8f\\x08Y\\x01\\xa6\\x00\\x9c\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.20", "flags": 0, "createdate": "2007-10-03T00:00:00", "modifydate": "2007-10-05T08:59:31", "lines": 422, "newlines": 156, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         PDE   &A\n         DC    AL2(IPA&A-IPA)        DISP TO PDE DATA\n         DC    CL8'&A'               DESCRIPTION\n         MEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   This application displays IPL info                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nAPP2IPL  CSECT\nAPP2IPL  AMODE 31\nAPP2IPL  RMODE ANY\n         STM   R14,R12,12(R13)       SAVE REGISTERS\n         LR    R12,R15               SET BASE REGISTER\n         USING APP2IPL,R12           DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'APP2IPL'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R11,R1                COPY PARM BLOCK ADDRESS\n         USING HTTP_PARMS,R11\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=ANY\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         XC    HTTP_ALET,HTTP_ALET\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         L     R10,CVTPTR                CVT ADDRESS\n         USING CVT,R10\n         L     R9,CVTECVT                ECVT ADDRESS\n         USING ECVT,R9\n         L     R8,ECVTIPA                IPA ADDRESS\n         USING IPA,R8\n\n         MVC   WORK_BUFFER(HTML_HEADERL),HTML_HEADER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,HTML_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         MVC   WORK_BUFFER(SYSTEM_HEADERL),SYSTEM_HEADER\n         MVC   WORK_BUFFER+(SYSTEM_NAME-SYSTEM_HEADER)(8),CVTSNAME\n         LA    R1,SYSTEM_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         LA    R1,MSG_01_L\n         ST    R1,HTTP_LENGTH\n         MVC   WORK_BUFFER(MSG_01_L),MSG_01\nBUFF     USING MSG_01,WORK_BUFFER\n\n         MVC   BUFF.MSG_01_NAME(L'C_HARDWARE_NAME),C_HARDWARE_NAME\n         MVC   BUFF.MSG_01_DATA(L'ECVTHDNM),ECVTHDNM\n         BAL   R5,SEND0000\n\n         CLC   ECVTLPNM,BLANKS\n         BE    IPL0010\n         MVC   BUFF.MSG_01_NAME(L'C_LPAR_NAME),C_LPAR_NAME\n         MVC   BUFF.MSG_01_DATA(L'ECVTLPNM),ECVTLPNM\n         BAL   R5,SEND0000\n\nIPL0010  DS    0H\n         CLC   ECVTVMNM,BLANKS\n         BE    IPL0020\n         MVC   BUFF.MSG_01_NAME(L'C_VM_NAME),C_VM_NAME\n         MVC   BUFF.MSG_01_DATA(L'ECVTVMNM),ECVTVMNM\n         BAL   R5,SEND0000\n\nIPL0020  DS    0H\n         MVC   BUFF.MSG_01_NAME(L'C_PRODUCT_OWNER),C_PRODUCT_OWNER\n         MVC   BUFF.MSG_01_DATA(L'ECVTPOWN),ECVTPOWN\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_PRODUCT_NAME),C_PRODUCT_NAME\n         MVC   BUFF.MSG_01_DATA(8),ECVTPNAM\n         MVC   BUFF.MSG_01_DATA+10(2),ECVTPVER\n         MVI   BUFF.MSG_01_DATA+12,C'.'\n         MVC   BUFF.MSG_01_DATA+13(2),ECVTPREL\n         MVI   BUFF.MSG_01_DATA+15,C'.'\n         MVC   BUFF.MSG_01_DATA+16(2),ECVTPMOD\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_IPLPARM),C_IPLPARM\n         MVC   BUFF.MSG_01_DATA(L'IPALPARM),IPALPARM\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_IODF_ADDRESS),C_IODF_ADDRESS\n         MVC   BUFF.MSG_01_DATA(L'IPAIODFU),IPAIODFU\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_NUCLEUS_ID),C_NUCLEUS_ID\n         MVC   BUFF.MSG_01_DATA(L'IPANUCID),IPANUCID\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_IPLPARM_DSN),C_IPLPARM_DSN\n         MVC   BUFF.MSG_01_DATA(L'IPALPDSN),IPALPDSN\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_IPLPARM_UNIT),C_IPLPARM_UNIT\n         MVC   BUFF.MSG_01_DATA(L'IPALPDDV),IPALPDDV\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_IODF_DSN_SUFFIX),C_IODF_DSN_SUFFIX\n         MVC   BUFF.MSG_01_DATA(L'IPAIOSUF),IPAIOSUF\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_IODF_DSN_HLQ),C_IODF_DSN_HLQ\n         MVC   BUFF.MSG_01_DATA(L'IPAIOHLQ),IPAIOHLQ\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_MASTER_DSN),C_MASTER_DSN\n         MVC   BUFF.MSG_01_DATA(L'IPASCDSN),IPASCDSN\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_MASTER_VOL),C_MASTER_VOL\n         MVC   BUFF.MSG_01_DATA(L'IPASCVOL),IPASCVOL\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_OS_CONFIG_ID),C_OS_CONFIG_ID\n         MVC   BUFF.MSG_01_DATA(L'IPAIOCFG),IPAIOCFG\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_EDT_ID),C_EDT_ID\n         MVC   BUFF.MSG_01_DATA(L'IPAIOEDT),IPAIOEDT\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_SYSPLEX),C_SYSPLEX\n         MVC   BUFF.MSG_01_DATA(L'IPASXNAM),IPASXNAM\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_PARMLIB_DSN),C_PARMLIB_DSN\n         MVC   BUFF.MSG_01_DATA(L'IPAPLDSN),IPAPLDSN\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_PARMLIB_VOLSER),C_PARMLIB_VOLSER\n         MVC   BUFF.MSG_01_DATA(L'IPAPLVOL),IPAPLVOL\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_MTLSHARE),C_MTLSHARE\n         MVC   BUFF.MSG_01_DATA(L'IPAMTLSH),IPAMTLSH\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_ARCH_LEVEL),C_ARCH_LEVEL\n         MVC   BUFF.MSG_01_DATA(L'IPAARCHL),IPAARCHL\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_NUC_LIST),C_NUC_LIST\n         MVC   BUFF.MSG_01_DATA(L'IPANUCL),IPANUCL\n         BAL   R5,SEND0000\n\n         MVC   BUFF.MSG_01_NAME(L'C_NUC_SUFFIX),C_NUC_SUFFIX\n         MVC   BUFF.MSG_01_DATA(L'IPANLID),IPANLID\n         BAL   R5,SEND0000\n\n* ------------------------------------------------------------------- *\n*        Process Parameter descriptors                                *\n* ------------------------------------------------------------------- *\n         LA    R7,PDE_TABLE\n         USING PDE_DSECT,R7\nPDE0010  DS    0H\n         SR    R6,R6\n         ICM   R6,3,PDE_DISP             DISP INTO IPA\n         AR    R6,R8                     PLUS BASE\n         USING IPAPDE,R6\n         MVC   BUFF.MSG_01_NAME(L'PDE_NAME),PDE_NAME\n         SR    R1,R1\n         ICM   R1,3,IPAPDESL             PARAMETER LENGTH\n         BZ    PDE0050                   ZERO..\n         CH    R1,=Y(L'MSG_01_DATA-10)\n         BNH   PDE0020\n         LH    R1,=Y(L'MSG_01_DATA-10)\nPDE0020  DS    0H\n         BCTR  R1,0\n         L     R2,IPAPDESA               PARAMETER ADDRESS\n         EX    R1,PDE_MVC                COPY DATA\n         CLI   IPAPDEDO+1,0              DEFAULT?\n         BE    PDE0030                   YES\n         CLI   IPAPDEDO+1,X'FF'          OPERATOR SUPPLIED?\n         BE    PDE0040                   YES\n         MVC   BUFF.MSG_01_DATA(2),IPAPDESS COPY IEASYS SUFFIX\n         B     PDE0050\nPDE0030  DS    0H\n         MVC   BUFF.MSG_01_DATA(L'C_DEFAULT),C_DEFAULT\n         B     PDE0050\nPDE0040  DS    0H\n         MVC   BUFF.MSG_01_DATA(L'C_OPERATOR),C_OPERATOR\nPDE0050  DS    0H\n         BAL   R5,SEND0000               SEND\n         LA    R7,PDE_L(,R7)             NEXT PDE\n         CLI   0(R7),X'FF'               END OF TABLE?\n         BNE   PDE0010                   NO\n         B     TRAIL000\nPDE_MVC  MVC   BUFF.MSG_01_DATA+10(0),0(R2)\n* ------------------------------------------------------------------- *\n*        Send trailer info                                            *\n* ------------------------------------------------------------------- *\nTRAIL000 DS    0H\n         MVC   WORK_BUFFER(HTML_TRAILERL),HTML_TRAILER\n         LA    R1,HTML_TRAILERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         B     EXIT0000\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSEND0000 DS    0H\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         MVC   WORK_BUFFER(MSG_01_L),MSG_01\n         BR    R5\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13                  COPY WORK AREA ADDRESS\n         L     R13,4(R13)              RESTORE CALLER'S R13\n         FREEMAIN RU,                  FREE THE WORK AREA              +\n               A=(R1),                                                 +\n               LV=WORKL\n         L     R14,12(R13)             RESTORE R14\n         SR    R15,R15\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nBLANKS              DC  CL80' '\nHEXCHAR             EQU *-C'0'\n                    DC  C'0123456789ABCDEF'\n\nHTML_HEADER         DS  0C\n                    DC  C'<HTML>'\n                    DC  AL1($LF)\n                    DC  C'<BODY>'\n                    DC  AL1($LF)\n                    DC  C'<CENTER>'\n                    DC  AL1($LF)\nHTML_HEADERL        EQU *-HTML_HEADER\nSYSTEM_HEADER       DS  0C\n                    DC  C'<H1>IPLINFO FOR '\nSYSTEM_NAME         DC  CL8' '\n                    DC  C'</H1>'\n                    DC  AL1($LF)\n                    DC  C'<PRE>'\n                    DC  AL1($LF)\nSYSTEM_HEADERL      EQU *-SYSTEM_HEADER\n\nHTML_TRAILER        DS  0C\n                    DC  C'</PRE>'\n                    DC  AL1($LF)\n                    DC  C'</CENTER>'\n                    DC  AL1($LF)\n                    DC  C'</BODY>'\n                    DC  AL1($LF)\n                    DC  C'</HTML>'\n                    DC  AL1($LF)\nHTML_TRAILERL       EQU *-HTML_TRAILER\n\nC_HARDWARE_NAME     DC  C'HARWARE NAME'\nC_LPAR_NAME         DC  C'LPAR NAME'\nC_VM_NAME           DC  C'VM user id'\nC_PRODUCT_OWNER     DC  C'Product owner'\nC_PRODUCT_NAME      DC  C'Product name'\nC_IPLPARM           DC  C'IPL PARM'\nC_IODF_ADDRESS      DC  C'IODF unit nbr'\nC_NUCLEUS_ID        DC  C'Nucleus ID'\nC_IPLPARM_DSN       DC  C'IPLPARM DSN'\nC_IPLPARM_UNIT      DC  C'IPLPARM unit nbr'\nC_IODF_DSN_SUFFIX   DC  C'IODF DSN suffix'\nC_IODF_DSN_HLQ      DC  C'IODF DSN HLQ'\nC_OS_CONFIG_ID      DC  C'OS config ID'\nC_MASTER_DSN        DC  C'Master catalog DSN'\nC_MASTER_VOL        DC  C'Master catalog VOL'\nC_EDT_ID            DC  C'EDT ID'\nC_SYSPLEX           DC  C'Sysplex name'\nC_PARMLIB_DSN       DC  C'PARMLIB DSN'\nC_PARMLIB_VOLSER    DC  C'PARMLIB VOLSER'\nC_MTLSHARE          DC  C'MTL share'\nC_ARCH_LEVEL        DC  C'Architecture level'\nC_NUC_LIST          DC  C'NUC LIST info'\nC_NUC_SUFFIX        DC  C'NUCLEUS suffix'\nC_DEFAULT           DC  C'Default'\nC_OPERATOR          DC  C'Operator'\n\nPDE_TABLE           DS  0C\n                    PDE ALLOC\n                    PDE APF\n                    PDE APG\n                    PDE BLDL\n                    PDE BLDLF\n                    PDE CLOCK\n                    PDE CLPA\n                    PDE CMB\n                    PDE CMD\n                    PDE CON\n                    PDE CONT\n                    PDE COUPL\n                    PDE CPQE\n                    PDE CSA\n                    PDE CSCBL\n                    PDE CVIO\n                    PDE DEVSU\n                    PDE DIAG\n                    PDE DUMP\n                    PDE DUPLE\n                    PDE EXIT\n                    PDE FIX\n                    PDE GRS\n                    PDE GRSCN\n                    PDE GRSRN\n                    PDE ICS\n                    PDE IOS\n                    PDE IPS\n                    PDE LNK\n                    PDE LNKAU\n                    PDE LOGCL\n                    PDE LOGLM\n                    PDE LOGRE\n                    PDE LPA\n                    PDE MAXCA\n                    PDE MAXUS\n                    PDE MLPA\n                    PDE MSTRJ\n                    PDE NONVI\n                    PDE NSYSL\n                    PDE NUCMA\n                    PDE OMVS\n                    PDE OPI\n                    PDE OPT\n                    PDE PAGEO\n                    PDE PAGEP\n                    PDE PAGNU\n                    PDE PAGTO\n                    PDE PAK\n                    PDE PLEXC\n                    PDE PRODP\n                    PDE PROG\n                    PDE PURGE\n                    PDE RDE\n                    PDE REAL\n                    PDE RER\n                    PDE RSU\n                    PDE RSVNO\n                    PDE RSVST\n                    PDE SCH\n                    PDE SMF\n                    PDE SMS\n                    PDE SQA\n                    PDE SSN\n                    PDE SVC\n                    PDE SWAP\n                    PDE SYSNA\n                    PDE SYSP\n                    PDE VAL\n                    PDE VIODS\n                    PDE VRREG\n                    PDE RTLSP\n                    PDE UNIP\n                    PDE ILML\n                    PDE ILMOD\n                    PDE TSO\n                    PDE LIC\n                    PDE HVSHARE\n                    PDE ILM\n                    PDE DRMOD\n                    PDE CEE\n                    PDE PRCPU\n                    DC  X'FF'\n\n                    LTORG\n\nMSG_01              DS  0C\nMSG_01_NAME         DC  CL20' '\n                    DC  CL3' '\nMSG_01_DATA         DC  CL54' '\n                    DC  AL1($LF)\nMSG_01_L            EQU *-MSG_01\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    DS    18F\nWORK_DWORD          DS    D\nWORK_BUFFER         DS    CL100\nWORKL               EQU   *-WORK\n                    SUBPARM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPDE_DSECT           DSECT\nPDE_DISP            DS    AL2\nPDE_NAME            DS    CL8\nPDE_L               EQU   *-PDE_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    CVT      DSECT=YES,LIST=NO\n                    IHAECVT  DSECT=YES,LIST=NO\n                    IHAIPA   DSECT=YES,LIST=NO,IPAPDE=YES\n         COPY REGEQU\n$LF      EQU  X'0A'\n         END  APP2IPL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "APP2LLA": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x007\\x01\\x05\\x11\\x8f\\x01\\x07(\\x1f\\x10C\\x00\\xa6\\x00\\xb5\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2005-04-28T00:00:00", "modifydate": "2007-10-08T10:43:37", "lines": 166, "newlines": 181, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*   This application returns the datasets in the systems link list    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nAPP2LLA  CSECT\nAPP2LLA  AMODE 31\nAPP2LLA  RMODE ANY\n         STM   R14,R12,12(R13)       SAVE REGISTERS\n         LR    R12,R15               SET BASE REGISTER\n         USING APP2LLA,R12           DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'APP2LLA'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R11,R1                COPY PARM BLOCK ADDRESS\n         USING HTTP_PARMS,R11\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=ANY\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         XC    HTTP_ALET,HTTP_ALET\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n\n         MVC   WORK_BUFFER(HTML_HEADERL),HTML_HEADER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,HTML_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         L     R1,CVTPTR\n         USING CVT,R1\n         L     R2,CVTLLTA               LLA TABLE ADDRESS\n         USING LLAT,R2                  DEFINE BASE\n         CLC   LLAT_EYE,C_LLT           EYECATCHER PRESENT?\n         BNE   ERR0010\n         L     R3,LLAT_NBR              NUMBER OF DATASETS IN LIST\n         LA    R4,LLAT_ENTRY\n         USING LLAT_ENTRY,R4\n\n         MVC   WORK_BUFFER(SYSTEM_HEADERL),SYSTEM_HEADER\n         MVC   WORK_BUFFER+(SYSTEM_NAME-SYSTEM_HEADER)(8),CVTSNAME\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,SYSTEM_HEADERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\nLLA0010  DS    0H\n         MVC   WORK_BUFFER,LLAT_ENTRY_DSN\n         SR    R1,R1\n         IC    R1,LLAT_ENTRY_LENGTH\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         MVI   WORK_BUFFER,$LF\n         LA    R1,1\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n\n         LA    R4,LLAT_ENTRYL(R4)\n         BCT   R3,LLA0010\n\n         MVC   WORK_BUFFER(HTML_TRAILERL),HTML_TRAILER\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,HTML_TRAILERL\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         MVC   WORK_BUFFER(MSG01L),MSG01\n         LA    R1,WORK_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,MSG01L\n         ST    R1,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13                  COPY WORK AREA ADDRESS\n         L     R13,4(R13)              RESTORE CALLER'S R13\n         FREEMAIN RU,A=(1),LV=WORKL    FREE THE WORK AREA\n         L     R14,12(R13)             RESTORE R14\n         SR    R15,R15\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nC_LLT               DC  CL4'LLT '\n\nMSG01               DS  0C\n                    DC  C'Internal error.  LLA table ID not found.'\nMSG01L              EQU *-MSG01\n\nHTML_HEADER         DS  0C\n                    DC  C'<HTML>'\n                    DC  C'<BODY>'\n                    DC  C'<CENTER>'\n                    DC  AL1($LF)\nHTML_HEADERL        EQU *-HTML_HEADER\nSYSTEM_HEADER       DS  0C\n                    DC  C'<H1>Link List for '\nSYSTEM_NAME         DC  CL8' '\n                    DC  C'</H1>'\n                    DC  C'<PRE>'\nSYSTEM_HEADERL      EQU *-SYSTEM_HEADER\nHTML_TRAILER        DS  0C\n                    DC  C'</PRE>'\n                    DC  C'</CENTER>'\n                    DC  C'</BODY>'\n                    DC  C'</HTML>'\nHTML_TRAILERL       EQU *-HTML_TRAILER\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    DS    18F\nWORK_BUFFER         DS    CL256\nWORKL               EQU   *-WORK\n                    SUBPARM  TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLLAT               DSECT\nLLAT_EYE           DS    CL4\nLLAT_NBR           DS    F\nLLAT_ENTRY         DS    0X\nLLAT_ENTRY_LENGTH  DS    X\nLLAT_ENTRY_DSN     DS    CL44\nLLAT_ENTRYL        EQU   *-LLAT_ENTRY\n* ------------------------------------------------------------------- *\n         IHAPSA    DSECT=YES,LIST=NO\n         CVT       DSECT=YES,LIST=YES\n         COPY REGEQU\n$LF      EQU  X'0A'\n         END  APP2LLA\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "APP3APP1": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01@\\x00H\\x01\\x05\\x11/\\x01\\x072_\\t\\x02\\x01\\xf4\\x00x\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.64", "flags": 0, "createdate": "2005-04-22T00:00:00", "modifydate": "2007-11-21T09:02:48", "lines": 500, "newlines": 120, "modlines": 0, "user": "RLRICE"}, "text": "APP3APP1 CSECT\nAPP3APP1 AMODE 31\nAPP3APP1 RMODE ANY\n         STM   R14,R12,12(R13)         SAVE REGISTERS\n         LR    R12,R15                 SET BASE REGISTER\n         USING APP3APP1,R12            DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'APP3APP1'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LR    R11,R1\n         USING HTTP_PARMS,R11\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n         ST    R13,WORK_ESTAE_WORK\n         LA    R1,ERR0080\n         ST    R1,WORK_ESTAE_RETRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nALLOC000 DS    0H\n         MVC   WORK_DSNAME,BLANKS\n         MVC   WORK_MEMBER,BLANKS\nALLOC010 DS    0H\n         ICM   R1,15,HTTP_PARM\n         ICM   R2,15,HTTP_PARM_LENGTH\n         CH    R2,H53                  TOO MUCH DATA?\n         BH    ERR0020\n         LA    R4,WORK_DSNAME\n         SR    R15,R15\nALLOC020 DS    0H\n         CLI   0(R1),C' '              END OF NAME\n         BE    ALLOC045\n         CLI   0(R1),C'/'              DSN/MEMBER NAME DELIMITER?\n         BE    ALLOC030\n         MVC   0(1,R4),0(R1)           COPY TO DSNAME\n         LA    R4,1(R4)\n         LA    R15,1(R15)\n         LA    R1,1(R1)\n         BCT   R2,ALLOC020\n         B     ALLOC045\nALLOC030 DS    0H\n         STH   R15,WORK_DSNAME_LENGTH  SAVE LENGTH\n         LA    R4,WORK_MEMBER\n         LA    R1,1(R1)\n         BCT   R2,ALLOC040\n         B     ALLOC050\nALLOC040 DS    0H\n         CLI   0(R1),C' '\n         BE    ALLOC050\n         MVC   0(1,R4),0(R1)\n         LA    R4,1(R4)\n         LA    R1,1(R1)\n         BCT   R2,ALLOC040\n         B     ALLOC050\nALLOC045 DS    0H\n         STH   R15,WORK_DSNAME_LENGTH  SAVE LENGTH\nALLOC050 DS    0H\n         MVC   WORK_SUB0001_DSNAME,WORK_DSNAME\n         LA    R1,WORK_SUB0001_PARMS\n         L     R15,VSUB0001\n         BALR  R14,R15\n         CLI   WORK_SUB0001_DSORG,C'S' SEQUENTIAL FILE?\n         BE    ALLOC070                YES\n         CLI   WORK_SUB0001_DSORG,C'P' PDS?\n         BNE   ERR0030                 NO\n         CLC   WORK_MEMBER,BLANKS      HAVE A MEMBER NAME?\n         BNE   ALLOC060                YES\n         OI    WORK_FLAG,$WORK_DIR     DOING A MEMBER LIST\n         MVC   WORK_DCB(DIRDCBL),DIRDCBI\n         B     ALLOC080\nALLOC060 DS    0H\n         MVC   WORK_DCB(NORMDCBL),NORMDCBI\n         B     ALLOC080\nALLOC070 DS    0H\n         CLC   WORK_MEMBER,BLANKS\n         BNE   ERR0040                 MEMBER NOT ALLOWED FOR PS\nALLOC080 DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_ALLOCATE\n         MVC   HTTP_DSN,WORK_DSNAME\n         MVC   HTTP_MEMBER,WORK_MEMBER\n         MVC   HTTP_DD,DDNAME\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15                 ALLOCATE\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0050\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHEAD0000 DS    0H\n         MVC   WORK_MESSAGE(HTML_HEADERL),HTML_HEADER\n         LA    R1,WORK_MESSAGE\n         STCM  R1,15,HTTP_DATA\n         LA    R1,HTML_HEADERL\n         STCM  R1,15,HTTP_LENGTH\n         XC    HTTP_ALET,HTTP_ALET\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0060\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOPEN0000 DS    0H\n         MVC   WORK_OPEN_CLOSE(OPENL),OPENI\n         MVC   WORK_ESTAE(ESTAEL),ESTAEI\n         LA    R2,ESTAE000\n         ESTAE (R2),                                                   +\n               PARAM=WORK_ESTAE_WORK,                                  +\n               MF=(E,WORK_ESTAE)\n         OPEN  (WORK_DCB,INPUT),                                       +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN_CLOSE)\n         ESTAE 0,                                                      +\n               MF=(E,WORK_ESTAE)\n         TM    WORK_FLAG,$WORK_DIR\n         BO    OPEN0010\n         LA    R9,WORK_DCB\n         USING IHADCB,R9\n         SR    R2,R2\n         ICM   R2,3,DCBLRECL\n         B     OPEN0020\nOPEN0010 DS    0H\n         LA    R2,256\nOPEN0020 DS    0H\n         ST    R2,WORK_IOAREA_SIZE\n         GETMAIN RU,                                                   +\n               LV=(R2),                                                +\n               LOC=BELOW\n         ST    R1,WORK_IOAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         LA    R9,WORK_DCB\n         L     R8,WORK_IOAREA\n         GET   WORK_DCB,0(R8)\n         TM    WORK_FLAG,$WORK_DIR\n         BO    READ0030\n         TM    DCBRECFM,DCBRECV\n         BO    READ0010\n         STCM  R8,15,HTTP_DATA\n         SR    R1,R1\n         ICM   R1,3,DCBLRECL\n         STCM  R1,15,HTTP_LENGTH\n         B     READ0020\nREAD0010 DS    0H\n         SR    R1,R1\n         ICM   R1,3,0(R8)\n         STCM  R1,15,HTTP_LENGTH\n         LA    R8,4(,R8)\n         STCM  R8,15,HTTP_DATA\nREAD0020 DS    0H\n         XC    HTTP_ALET,HTTP_ALET\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0060\n         MVC   WORK_MESSAGE(HTML_PL),HTML_P\n         LA    R1,WORK_MESSAGE\n         STCM  R1,15,HTTP_DATA\n         LA    R1,HTML_PL\n         STCM  R1,15,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         B     READ0000\nREAD0030 DS    0H\n         LH    R7,0(R8)\n         SH    R7,H2\n         LA    R8,2(R8)\n         USING DIR_DSECT,R8\n         LA    R6,WORK_MESSAGE\n         USING WORK_MEMBER_DETAIL,R6\n         STCM  R6,15,HTTP_DATA\n         SR    R5,R5\nREAD0040 DS    0H\n         CLI   0(R8),X'FF'\n         BE    READ0060\n         MVC   0(WORK_MEMBER_DETAILL,R6),HTML_MEMBER_I\n         MVC   WORK_MEMBER_APP,MODID\n         MVC   WORK_MEMBER_LINK(44),WORK_DSNAME\n         LH    R14,WORK_DSNAME_LENGTH\n         LA    R15,WORK_MEMBER_LINK(R14)\n         MVI   0(R15),C'/'\n         MVC   1(8,R15),DIR_NAME\n         MVC   WORK_MEMBER_NAME,DIR_NAME\n         LA    R6,WORK_MEMBER_DETAILL(R6)\n         LA    R5,WORK_MEMBER_DETAILL(R5)\n         NI    DIR_C,X'1F'\n         SR    R1,R1\n         IC    R1,DIR_C\n         AR    R1,R1\n         LA    R1,DIR_USER-DIR_DSECT(R1)\n         SR    R7,R1\n         BZ    READ0050\n         AR    R8,R1\n         B     READ0040\nREAD0050 DS    0H\n         STCM  R5,15,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         B     READ0000\nREAD0060 DS    0H\n         LTR   R5,R5\n         BZ    EOF0000\n         STCM  R5,15,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEOF0000  DS     0H\n         MVC   WORK_OPEN_CLOSE(CLOSEL),CLOSEI\n         CLOSE WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN_CLOSE)\n         ICM   R1,15,WORK_IOAREA\n         BZ    EXIT0000\n         L     R0,WORK_IOAREA_SIZE\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=(0)\n         XC    WORK_IOAREA,WORK_IOAREA\n         XC    WORK_IOAREA_SIZE,WORK_IOAREA_SIZE\n         MVI   HTTP_FUNCTION,$HTTP_FREE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15                 FREE THE DATA SET\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0070\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   WORK_MESSAGE(MSG01L),MSG01\n         LA    R0,MSG01L\n         B     ERR9900\nERR0020  DS    0H\n         MVC   WORK_MESSAGE(MSG02L),MSG02\n         LA    R0,MSG02L\n         B     ERR9900\nERR0030  DS    0H\n         MVC   WORK_MESSAGE(MSG03L),MSG03\n         LA    R0,MSG03L\n         B     ERR9900\nERR0040  DS    0H\n         MVC   WORK_MESSAGE(MSG04L),MSG04\n         LA    R0,MSG04L\n         B     ERR9900\nERR0050  DS    0H\n         MVC   WORK_MESSAGE(MSG05L),MSG05\n         MVC   WORK_MESSAGE+MSG05L(80),HTTP_MESSAGE_1\n         LA    R0,MSG05L+80\n         B     ERR9900\nERR0060  DS    0H\n         MVC   WORK_MESSAGE(MSG06L),MSG06\n         MVC   WORK_MESSAGE+MSG06L(80),HTTP_MESSAGE_1\n         LA    R0,MSG06L+80\n         B     ERR9900\nERR0070  DS    0H\n         MVC   WORK_MESSAGE(MSG07L),MSG07\n         MVC   WORK_MESSAGE+MSG07L(80),HTTP_MESSAGE_1\n         LA    R0,MSG07L+80\n         B     ERR9900\nERR0080  DS    0H\n         ESTAE 0\n         MVI   HTTP_FUNCTION,$HTTP_FREE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         MVC   WORK_MESSAGE(MSG08L),MSG08\n         UNPK  WORK_DWORD(7),WORK_ABEND_CODE(4)\n         TR    WORK_DWORD(6),HEXCHAR\n         MVC   WORK_MESSAGE+(MSG08_SYSTEM-MSG08)(3),WORK_DWORD\n         MVC   WORK_MESSAGE+(MSG08_USER-MSG08)(3),WORK_DWORD+3\n         LA    R0,MSG08L\nERR9900  DS    0H\n         LA    R1,WORK_MESSAGE\n         STCM  R1,15,HTTP_DATA\n         STCM  R0,15,HTTP_LENGTH\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n*-------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_CLOSE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         LR    R1,R13                  COPY WORK AREA ADDRESS\n         L     R13,4(R13)              RESTORE CALLER'S R13\n         FREEMAIN RU,A=(1),LV=WORKL    FREE THE WORK AREA\n         LM    R14,R12,12(R13)         RESTORE REGS\n         SR    R15,R15                 SET RETURN CODE\n         BR    R14\n         DROP  R12,R13\n*-------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESTAE000 DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         USING ESTAE000,R12\n         USING SDWA,R1\n         L     R2,SDWAPARM\n         L     R3,0(R2)\n         USING WORK,R3\n         MVC   WORK_ABEND_CODE,SDWACMPC\n         L     R4,WORK_ESTAE_RETRY\n         SETRP RETADDR=(R4),                                           +\n               RETREGS=YES,                                            +\n               REGS=(14,12),                                           +\n               FRESDWA=YES,                                            +\n               RC=4\n* ------------------------------------------------------------------- *\nVSUB0001       DC    V(SUB0001)\nH2             DC    H'2'\nH53            DC    H'53'\nBLANKS         DC    CL256' '\nDDNAME         DC    CL8'DD1'\n\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nESTAEI   ESTAE ESTAE000,                                               +\n               CT,                                                     +\n               MF=L\nESTAEL   EQU   *-ESTAEI\n\nNORMDCBI DCB   DSORG=PS,                                               +\n               DDNAME=DD1,                                             +\n               EODAD=EOF0000,                                          +\n               MACRF=GM\nNORMDCBL EQU   *-NORMDCBI\n\nDIRDCBI  DCB   DSORG=PS,                                               +\n               DDNAME=DD1,                                             +\n               RECFM=U,                                                +\n               LRECL=256,                                              +\n               EODAD=EOF0000,                                          +\n               MACRF=GM\nDIRDCBL  EQU   *-DIRDCBI\n\n\nOPENI    OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE *,                                                      +\n               MODE=31,                                                +\n               MF=L\nCLOSEL         EQU   *-CLOSEI\n\nMSG01          DS    0C\n               DC    C'ESTAE failed'\nMSG01L         EQU   *-MSG01\n\nMSG02          DS    0C\n               DC    C'Parameter info is too long (length > 53 bytes)'\nMSG02L         EQU   *-MSG02\n\nMSG03          DS    0C\n               DC    C'Dataset DSORG not PS or PDS'\nMSG03L         EQU   *-MSG03\n\nMSG04          DS    0C\n               DC    C'Member name not allowed for sequential datasets'\nMSG04L         EQU   *-MSG04\n\nMSG05          DS    0C\n               DC    C'Allocation failed. '\nMSG05L         EQU   *-MSG05\n\nMSG06          DS    0C\n               DC    C'TCP/IP write failed. '\nMSG06L         EQU   *-MSG06\n\nMSG07          DS    0C\n               DC    C'Dataset deallocate failed.'\nMSG07L         EQU   *-MSG07\n\nMSG08          DS    0C\n               DC    C'Error occurred during OPEN.  System code '\nMSG08_SYSTEM   DS    CL3\n               DC    C'     User code '\nMSG08_USER     DS    CL3\nMSG08L         EQU   *-MSG08\n\nHTTP_HEADER    DS    0C\n               DC    C'HTTP/1.1 200 OK'\n               DC    AL1($LF)\n               DC    C'Content-Type: text/html'\n               DC    AL1($LF)\n               DC    AL1($LF)\nHTTP_HEADERL   EQU   *-HTTP_HEADER\nHTML_HEADER    DS    0C\n               DC    C'<HTML>'\n               DC    C'<BODY>'\n               DC    C'<PRE>'\n               DC    AL1($LF)\nHTML_HEADERL   EQU   *-HTML_HEADER\nHTML_P         DC    C'<P>'\nHTML_PL        EQU   *-HTML_P\nHTML_TRAILER   DS    0C\n               DC    C'</BODY>'\n               DC    C'</HTML>'\nHTML_TRAILERL  EQU   *-HTML_TRAILER\n\nHTML_MEMBER_I  DS    0C\n               DC    C'<A HREF='\n               DC    CL8' '\n               DC    C'?'\n               DC    CL53' '\n               DC    C'>'\n               DC    CL8' '\n               DC    C'</A>'\n               DC    C'<P>'\nHTML_MEMBER_IL EQU   *-HTML_MEMBER_I\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    DS    18F\n\nWORK_DWORD          DS    D\n\nWORK_ESTAE_PARMS    DS    0A\nWORK_ESTAE_WORK     DS    A\nWORK_ESTAE_RETRY    DS    A\n\nWORK_DCB            DS    0F,(NORMDCBL)X\nWORK_OPEN_CLOSE     DS    0F,(OPENL)X\nWORK_ESTAE          DS    0F,(ESTAEL)X\n\nWORK_IOAREA         DS    A\nWORK_IOAREA_SIZE    DS    F\n\nWORK_ABEND_CODE     DS    XL3\n\nWORK_FLAG           DS    X\n$WORK_DIR           EQU   X'80'\n\nWORK_DSNAME_LENGTH  DS    H\nWORK_DSNAME         DS    CL44\nWORK_MEMBER         DS    CL8\n                    DS    CL50\n\nWORK_SUB0001_PARMS  DS    0C\nWORK_SUB0001_DSNAME DS    CL44\nWORK_SUB0001_DSORG  DS    X\n\nWORK_MESSAGE        DS    CL4096\nWORKL               EQU   *-WORK\n*---------------------------------------------------------------------*\nWORK_MEMBER_DETAIL  DSECT\n                    DS    CL8               '<A HREF='\nWORK_MEMBER_APP     DS    CL8               'APP3APP1'\n                    DS    C                 '?'\nWORK_MEMBER_LINK    DS    CL53              LINK INFO\n                    DS    C                 '>'\nWORK_MEMBER_NAME    DS    CL8\n                    DS    CL4               '</A>'\n                    DS    CL3               '<P>'\nWORK_MEMBER_DETAILL EQU   *-WORK_MEMBER_DETAIL\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDIR_DSECT           DSECT\nDIR_NAME            DS    CL8\nDIR_TTR             DS    CL3\nDIR_C               DS    X\nDIR_USER            DS    0C\n* ------------------------------------------------------------------- *\n         SUBPARM TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHASDWA\n         DCBD DSORG=PS\n         COPY REGEQU\n$LF      EQU  X'0A'\n         END  APP3APP1\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPAPP1": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x06\\x01\\x04)_\\x01\\x08\\x16\\x8f\\tP\\x05v\\x00\\xc7\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2004-10-21T00:00:00", "modifydate": "2008-06-16T09:50:06", "lines": 1398, "newlines": 199, "modlines": 0, "user": "RLRICE"}, "text": "          MACRO\n          ITRACE &ID=,                                                 +\n               &DATA1=,&RDATA1=,                                       +\n               &DATA2=,&RDATA2=,                                       +\n               &DATA3=,&RDATA3=\n          AIF    (T'&ID EQ 'O').SUBNOID\n          AIF    (T'&RDATA1 NE 'O' AND T'&DATA1 NE 'O').SUBDUP1\n          AIF    (T'&RDATA2 NE 'O' AND T'&DATA2 NE 'O').SUBDUP2\n          AIF    (T'&RDATA2 EQ 'O' AND T'&DATA2 EQ 'O').SUB001\n          AIF    (T'&RDATA1 NE 'O' AND T'&DATA1 NE 'O').SUBNO1\n.SUB001   ANOP\n          AIF    (T'&DATA1 EQ 'O').SUB002\n          MVC    WORK_TRACE_DATA1,&DATA1\n.SUB002   ANOP\n          AIF    (T'&RDATA1 EQ 'O').SUB003\n          ST     &RDATA1,WORK_TRACE_DATA1\n.SUB003   ANOP\n          AIF    (T'&DATA2 EQ 'O').SUB004\n          MVC    WORK_TRACE_DATA2,&DATA2\n.SUB004   ANOP\n          AIF    (T'&RDATA2 EQ 'O').SUB005\n          ST     &RDATA2,WORK_TRACE_DATA2\n.SUB005   ANOP\n          AIF    (T'&DATA3 EQ 'O').SUB006\n          MVC    WORK_TRACE_DATA3,&DATA3\n          AGO    .SUB007\n.SUB006   ANOP\n          AIF    (T'&RDATA3 EQ 'O').SUB007\n          ST     &RDATA3,WORK_TRACE_DATA3\n.SUB007   ANOP\n          BAL    R14,TRACE000\n          DC     CL8'&ID'\n          MEXIT\n.SUBDUP1  ANOP\n          MNOTE  12,'DO NOT USE BOTH DATA1 AND RDATA1'\n          MEXIT\n.SUBDUP2  ANOP\n          MNOTE  12,'DO NOT USE BOTH DATA2 AND RDATA2'\n          MEXIT\n.SUBNO1   ANOP\n          MNOTE  12,'(R)DATA2 NOT VALID WITHOUT (R)DATA1'\n          MEXIT\n.SUBNOID  ANOP\n          MNOTE  12,'ID IS REQUIRED'\n          MEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*    This HTTP application makes PDS members available for viewing    *\n*    via a web-browser such as Internet Explorer.                     *\n*                                                                     *\n*    PDSes that are to have their members made accessible must        *\n*    be defined via a DD, HTML, or RAW control statement.  PDSes      *\n*    are not dynamically allocated so there must be a JCL statement   *\n*    for each PDS defined.                                            *\n*                                                                     *\n*                                                                     *\n*    Control statements are:                                          *\n*       PORT       Specifies the PORT number for communicating        *\n*                  with the HTTP main address space.                  *\n*                                                                     *\n*       DD         Defines a PDS whose members will be viewable.      *\n*                                                                     *\n*       HTML       Defines a PDS whose members will be viewable and   *\n*                  are HTML statements.                               *\n*                                                                     *\n*       RAW        Defines a PDS whose members whose contents are     *\n*                  binary data and will be viewable.                  *\n*                                                                     *\n*       TRACE      If present in the start up statements, the data    *\n*                  written to the web users will also be written      *\n*                  to SYSPRINT.                                       *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*   The difference between PDSes defined via DD and HTML statements   *\n*   is that PDSes defined by \"DD\" statements contain EBCDIC data      *\n*   that is not HTML.  For example you may want to make members of    *\n*   a documentation data set viewable via the web.  Members of PDSes  *\n*   defined via \"DD\" will have some HTML appended before and after    *\n*   the contents of the file.  This HTML will instruct the web        *\n*   browser to present the data as \"preformatted\" data.  The data is  *\n*   translated from EBCDIC to ASCII.  PDSes defined by \"HTML\"         *\n*   statements are assumed to be HTML files in EBCDIC.  The data is   *\n*   translated from EBCDIC to ASCII but no HTML is added before or    *\n*   after the contents of the member(s).  PDSes defined by \"RAW\"      *\n*   statements are considered binary and sent completely as is.       *\n*   Examples of this type of PDSes would be GIF, JPEG, etc data.      *\n*   All PDSes may be in either fixed (F or FB) or variable (V or VB)  *\n*   record formats.  For variable length record files the length      *\n*   data is removed in all cases.                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*   This program does not do any sort of buffering other than what    *\n*   is automatic by MVS QSAM and BSAM access methods.  There is no    *\n*   provision for any dynamic data.  All files are considered static  *\n*   data.  If the PDSes are allocated with DISP=SHR on the JCL DD     *\n*   statements, the members can be updated while this utility is      *\n*   running.  This can cause the server to ABEND if the update        *\n*   causes the library to 'go into a new extent'.                     *\n*                                                                     *\n*                                                                     *\n*   As is there is no security checking.  Any member that is readable *\n*   by this utility will be viewable to any web user that has access  *\n*   to the URLs served by this utility.                               *\n*                                                                     *\n*                                                                     *\n*   The utility defines each DD defined (by DD, HTML, or RAW)         *\n*   statements as a URLs to the HTTP main address space.              *\n*   You may want to read more about how the HTTP main address         *\n*   space works.                                                      *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPAPP1 CSECT\nHTTPAPP1 AMODE 31\nHTTPAPP1 RMODE 24\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING HTTPAPP1,R12,R11               DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'HTTPAPP1'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LA    R11,2048(R12)                  SET\n         LA    R11,2048(R11)                    2ND BASE\n         GETMAIN RU,                          GETMAIN WORK AREA        +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13                       DEFINE BASE\n         MVI   WORK_FLAGS,0                   INITIALIZE FLAGS\n         MVI   WORK_RC,0                      INITIALIZE RETURN CODE\n         LOAD  EP=HTTPSUB                     LOAD HTTPSUB\n         ST    R0,HTTP_HTTPSUB                SAVE HTTPSUB ENTRY POINT\n         XC    HTTP_WORKAREA,HTTP_WORKAREA    INITIALIZE WORKAREA ADDR\n         MVC   WORK_SYSIN(SYSINL),SYSINI      INIITALIZE SYSIN DD\n         MVC   WORK_OCPL(OPENL),OPENI         INITIALIZE OPEN PARM LIST\n\n         MVC   WORK_ID,MODID\n         GETMAIN RU,                                                   +\n               LV=1002*TRACE_ENTRYL,                                   +\n               LOC=BELOW\n         ST    R1,WORK_TRACE_AREA\n         SRL   R1,5\n         SLL   R1,5\n         LA    R1,TRACE_ENTRYL(R1)\n         ST    R1,WORK_TRACE_1ST\n         MVC   WORK_TRACE_1ST-4(4),=C'1STX'\n         ST    R1,WORK_TRACE_CURR\n         MVC   WORK_TRACE_CURR-4(4),=C'CURR'\n         AH    R1,=Y(499*TRACE_ENTRYL)\n         ST    R1,WORK_TRACE_LAST\n         MVC   WORK_TRACE_LAST-4(4),=C'LAST'\n         ITRACE ID=INIT\n         OPEN  (WORK_SYSIN,INPUT),            OPEN SYSIN               +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         MVC   WORK_SYSPRINT(SYSPRINTL),SYSPRINTI\n         OPEN  (WORK_SYSPRINT,OUTPUT),        OPEN SYSPRINT            +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         MVI   PR_CC,C' '                     INITIALIZE\n         MVC   PR_LINE,PR_CC                    PRINT I/O AREA\n         ZAP   PAGE_NBR,P0                    INITIALIZE PAGE NBR\n         MVC   WORK_INDEX_NAME,BLANKS         INITIALIZE NAME\n         ST    R13,WORK_ESTAE_WORK            PASS R13 TO ESTAE EXIT\n         LA    R1,ERR0060                     RETRY POINT\n         ST    R1,WORK_ESTAE_RETRY            PASS TO ESTAE EXIT\n         BAL   R9,HEAD0000                    PRINT HEADING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         GET   WORK_SYSIN,WORKCARD            READ A CONTROL STATEMENT\n         MVC   PR_LINE(L'WORKCARD),WORKCARD\n         BAL   R9,PRT0000                     PRINT\n         CLI   WORKCARD,C'*'                  COMMENT?\n         BE    INIT0010                       YES\n         CLC   PORTSTMT,WORKCARD              PORT STATEMENT?\n         BE    INIT0020                       YES\n         CLC   INDXSTMT,WORKCARD              INDEX STATEMENT\n         BE    INIT0030                       YES\n         CLC   HTMLSTMT,WORKCARD              DD STATEMENT?\n         BE    INIT0100                       YES\n         CLC   DDSTMT,WORKCARD                DD STATEMENT?\n         BE    INIT0100                       YES\n         CLC   RAWSTMT,WORKCARD               RAW STATEMENT?\n         BE    INIT0100                       YES\n         CLC   TRACESTMT,WORKCARD             TRACE STATEMENT?\n         BE    INIT0200                       YES\n         OI    WORK_FLAGS,$ERROR              SET ERROR INDICATOR\n         MVC   PR_LINE(MSG01L),MSG01\n         BAL   R9,PRT0000\n         B     INIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         OI    WORK_FLAGS,$PORT               SET PORT NBR INDICATOR\n         PACK  WORK_DWORD,WORKCARD+9(5)       PACK PORT NBR\n         CVB   R1,WORK_DWORD                  CONVERT TO BINARY\n         STH   R1,HTTP_PORT                   SET PORT NBR\n         ITRACE ID=PORT,                                               +\n               DATA1=WORKCARD+9,                                       +\n               DATA2=HTTP_PORT\n         B     INIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0030 DS    0H\n         MVC   WORK_INDEX_NAME,WORKCARD+9     SET PDS INDEX MEMBER NAME\n         ITRACE ID=INDEX,                                              +\n               DATA1=WORKCARD+9\n         B     INIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Process RAW statements                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0100 DS    0H\n         ITRACE ID=DD,                                                 +\n               DATA1=WORKCARD+0,                                       +\n               DATA2=WORKCARD+9\n         CLI   WORKCARD+09,C' '               NAME START WITH A BLANK?\n         BE    INIT0150                       YES\n         LA    R2,WORKCARD+71                 END OF DATA\n         LA    R3,72-9                        MAX LENGTH\nINIT0120 DS    0H\n         CLI   0(R2),C' '                     BLANK?\n         BNE   INIT0130                       NO\n         BCTR  R2,0                           MINUS 1\n         BCT   R3,INIT0120                    LOOP\n         B     INIT0010\n* --------------- Verify DD name is not too long -------------------- *\nINIT0130 DS    0H\n         CH    R3,H8                          DD NAME TOO LONG?\n         BH    INIT0160                       YES\n* --------------- Obtain storage for the DD ------------------------- *\n         GETMAIN RU,                          GETMAIN A DD_BLOK        +\n               LV=DD_BLOKL,                                            +\n               LOC=BELOW\n         LR    R8,R1                          COPY ADDRESS\n         USING DD_BLOK,R8                     DEFINE BASE\n         MVC   DD_NEXT,WORK_DD_CHAIN\n         ST    R8,WORK_DD_CHAIN               ADD NEW BLOCK\n         ST    R3,DD_DDNAME_LENGTH            SET DDNAME'S LENGTH\n         XC    DD_DEPTH,DD_DEPTH              INITIALIZE DEPTH\n         MVC   DD_DDNAME,WORKCARD+9           COPY DD NAME\n         LA    R7,DD_DCB_INFO                 DCB INFO\n         USING DCB_DSECT,R7\n         LA    R6,$NEST_DEPTH\n         MVI   DD_TYPE,$DD_NORMAL\n         CLI   WORKCARD,C'D'                  NORMAL DD?\n         BE    INIT0140                       YES\n         MVI   DD_TYPE,$DD_HTML\n         CLI   WORKCARD,C'H'                  HTML DD?\n         BE    INIT0140                       YES\n         MVI   DD_TYPE,$DD_RAW                SET TYPE TO 'RAW'\nINIT0140 DS    0H\n         MVC   DCB_DCB(MEMDCBL),MEMDCBI       COPY DCB\n         USING IHADCB,DCB_DCB                 DEFINE BASE\n         MVC   DCBDDNAM,WORKCARD+9            COPY DD NAME\n         OPEN  (DCB_DCB,INPUT),               OPEN DCB                 +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n\n         LA    R7,DCB_DSECTL(,R7)             NEXT DCB\n         BCT   R6,INIT0140                    LOOP\n         B     INIT0010\n* ----------------- DD NAME BLANK ----------------------------------- *\nINIT0150 DS    0H\n         OI    WORK_FLAGS,$ERROR              SET ERROR INDICATOR\n         MVC   PR_LINE(MSG05L),MSG05\n         BAL   R9,PRT0000\n         MVI   WORK_RC,4\n         B     EXIT0000\n* ----------------- DD name too long--------------------------------- *\nINIT0160 DS    0H\n         OI    WORK_FLAGS,$ERROR              SET ERROR INDICATOR\n         MVC   PR_LINE(MSG10L),MSG10\n         BAL   R9,PRT0000\n         MVI   WORK_RC,4\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0200 DS    0H\n         ITRACE ID=TRACE\n         OI    TRACE_FLAGS,$TRACE             SET INDICATOR\n         MVC   WORK_TRACE(TRACEL),TRACEI      COPY DCB\n         OPEN  (WORK_TRACE,OUTPUT),           OPEN TRACE DCB           +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         LA    R1,WORK_TRACE                  ADDRESS OF DCB\n         ST    R1,HTTP_TRACE_DCB              PASS TO HTTPSUB\n         GETMAIN RU,                          GETMAIN TRACE I/O AREA   +\n               LV=32768,                                               +\n               LOC=BELOW\n         ST    R1,HTTP_TRACE_IOAREA           PASS ADDRESS TO HTTPSUB\n         B     INIT0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*     All control statements have been processed.                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         ITRACE ID=MAIN0000,                                           +\n               DATA1=WORK_FLAGS\n         TM    WORK_FLAGS,$PORT               PORT NUMBER GIVEN?\n         BNO   ERR0030                        NO\n* -------------------- Initialize environment ----------------------- *\n         ITRACE ID=HTTPINIT\n         OI    WORK_FLAGS,$INIT               SET FLAG\n         LA    R1,WORK_OUTPUT_BUFFER\n         ST    R1,HTTP_DATA\n         MVI   HTTP_FUNCTION,$HTTP_INIT       SET COMMAND\n         LA    R1,HTTP_PARMS                  HTTPSUB PARM LIST\n         L     R15,HTTP_HTTPSUB               HTTPSUB ENTRY POINT\n         BALR  R14,R15                        LINK TO HTTPSUB\n         ITRACE ID=INIT_RC,                                            +\n               DATA1=HTTP_RETURN_CODE\n         CLI   HTTP_RETURN_CODE,$HTTP_OK      SUCCESSFUL?\n         BNE   ERR0020                        NO\n* -------------------- Connect to MAIN ------------------------------ *\n         ITRACE ID=CONNECT\n         MVI   HTTP_FUNCTION,$HTTP_CONNECT    SET COMMAND\n         LA    R1,HTTP_PARMS                  HTTPSUB PARM LIST\n         L     R15,HTTP_HTTPSUB               HTTPSUB ENTRY POINT\n         BALR  R14,R15                        LINK TO HTTPSUB\n         ITRACE ID=CONN_RC,                                            +\n               DATA1=HTTP_RETURN_CODE\n         CLI   HTTP_RETURN_CODE,$HTTP_OK      SUCCESSFUL?\n         BNE   ERR0020                        NO\n\n* ------------------ Register URLs with MAIN ------------------------ *\n         ICM   R8,15,WORK_DD_CHAIN            1ST DD_BLOK\n         BZ    ERR0040                        NONE.. ERROR\nMAIN0010 DS    0H\n         ITRACE ID=REGISTER,                                           +\n               DATA1=DD_DDNAME,                                        +\n               DATA2=DD_DDNAME_LENGTH\n         MVI   HTTP_FUNCTION,$HTTP_DEFINE_PRFX   SET COMMAND\n         MVC   WORK_OUTPUT_BUFFER(L'DD_DDNAME),DD_DDNAME\n         LA    R1,WORK_OUTPUT_BUFFER\n         ST    R1,HTTP_DATA\n         MVC   HTTP_LENGTH,DD_DDNAME_LENGTH   SET LENGTH OF DDNAME\n         LA    R1,HTTP_PARMS                  HTTPSUB PARMS\n         L     R15,HTTP_HTTPSUB               HTTPSUB ENTRY POINT\n         BALR  R14,R15                        CALL HTTPSUB\n         ITRACE ID=REGDD_RC,                                           +\n               DATA1=HTTP_RETURN_CODE\n         CLI   HTTP_RETURN_CODE,$HTTP_OK      SUCCESSFUL?\n         BNE   ERR0020                        NO\n         ICM   R8,15,DD_NEXT                  NEXT DD_BLOK\n         BNZ   MAIN0010                       LOOP\n* ------------------------------------------------------------------- *\n         TM    WORK_FLAGS,$ERROR              ERRORS DETECTED?\n         BO    ERR0010                        YES..\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     No initialization errors detected.                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_NEST\n         GETMAIN RU,                                                   +\n               LV=$NEST_DEPTH*NESTL,                                   +\n               LOC=BELOW\n         ST    R1,WORK_NEST_TABLE             SAVE NEST TABLE ADDRESS\n         LR    R5,R1\n         ITRACE ID=NESTADDR,                                           +\n               RDATA1=R5\n         USING NEST_DSECT,R5\n         LA    R6,$NEST_DEPTH\nMAIN0020 DS    0H\n         MVC   NEST_DDNAME,BLANKS             INITIALIZE DD NAME\n         MVC   NEST_MEMBER,BLANKS             INITIALIZE MEMBER NAME\n         XC    NEST_DCB,NEST_DCB              INITIALIZE DCB BLOCK ADDR\n         A     R5,=A(NESTL)                   NEXT NEST INFO\n         BCT   R6,MAIN0020                    LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Wait for the main address space to get a reference to           *\n*     one of the URLs.                                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0030 DS    0H\n         ITRACE ID=GET_URL\n         MVI   HTTP_FUNCTION,$HTTP_GET_URL    SET COMMAND\n         LA    R1,WORK_OUTPUT_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,HTTP_PARMS                  HTTPSUB PARM LIST\n         L     R15,HTTP_HTTPSUB               HTTPSUB ENTRY POINT\n         BALR  R14,R15                        CALL HTTPSUB\n         ITRACE ID=GET_RC,                                             +\n               DATA1=HTTP_RETURN_CODE\n         CLI   HTTP_RETURN_CODE,$HTTP_CONSOLE COMMAND FROM CONSOLE?\n         BE    CONS0000                       YES\n         CLI   HTTP_RETURN_CODE,$HTTP_MAIN_SHUTDOWN\n         BE    SHUT0000                       YES\n         CLI   HTTP_RETURN_CODE,$HTTP_OK      ERROR?\n         BNE   ERR0050                        YES\n         ITRACE ID=HAVE_URL,                                           +\n               DATA1=HTTP_URL_ID,                                      +\n               DATA2=HTTP_LENGTH,                                      +\n               DATA3=HTTP_DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     We have a URL                                                   *\n*                                                                     *\n*     Log the URL                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NI    WORK_FLAGS,255-$HTML_HEADER    RESET INDICATOR\n         MVC   PR_LINE(MSG04L),MSG04\n         LH    R1,HTTP_SOCKET                 SOCKET FOR THIS URL\n         CVD   R1,WORK_DWORD\n         ED    PR_LINE+(MSG04_SOCKET-MSG04)(L'MSG04_SOCKET),WORK_DWORD++\n               5\n         L     R1,HTTP_URL_ID                 URL ID\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         ED    PR_LINE+(MSG04_URL_ID-MSG04)(L'MSG04_URL_ID),WORK_DWORD++\n               3\n         L     R2,HTTP_DATA                   URL'S ADDRESS\n         L     R3,HTTP_LENGTH\n         CH    R3,=Y(L'MSG04_URL)             TOO LONG?\n         BNH   MAIN0040                       NO\n         LH    R3,=Y(L'MSG04_URL)             LIMIT LENGTH\nMAIN0040 DS    0H\n         BCTR  R3,0\n         EX    R3,MVC_01                      COPY URL TEXT\n         BAL   R9,PRT0000                     PRINT\n         L     R5,WORK_NEST_TABLE\n         USING NEST_DSECT,R5\n         XC    WORK_NEST_DEPTH,WORK_NEST_DEPTH\n* ------------------------------------------------------------------- *\n*     Parse out the DD name and member name                           *\n* ------------------------------------------------------------------- *\n         L     R3,HTTP_LENGTH                 URL LENGTH\nMAIN0050 DS    0H\n         MVC   NEST_DDNAME,BLANKS\n         MVC   NEST_MEMBER,BLANKS\n         LA    R4,NEST_DDNAME                 OUTPUT DD NAME\n         NI    WORK_FLAGS,255-$PARSED_MEMBER\nMAIN0060 DS    0H\n         SR    R15,R15\nMAIN0070 DS    0H\n         CLI   0(R2),C'/'                     DELIMITER?\n         BE    MAIN0080\n         CLI   0(R2),X'00'                    END OF URL?\n         BE    MAIN0080\n         CLI   0(R2),C' '                     END OF URL?\n         BE    MAIN0080\n         CH    R15,H8                         TOO LONG?\n         BH    MAIN0300\n         MVC   0(1,R4),0(R2)                  COPY TO DD OR MEMBER NAME\n         LA    R2,1(,R2)                      NEXT SOURCE\n         LA    R4,1(,R4)                      NEXT OUTPUT\n         LA    R15,1(,R15)                    PLUS 1 TO LENGTH\n         BCT   R3,MAIN0070                    LOOP\n         B     MAIN0090                       END OF DATA\nMAIN0080 DS    0H\n         TM    WORK_FLAGS,$PARSED_MEMBER      HAVE MEMBER NAME?\n         BO    MAIN0090                       YES\n         OI    WORK_FLAGS,$PARSED_MEMBER      SET INDICATOR\n         LA    R2,1(R2)                       SKIP DELIMITER\n         LA    R4,NEST_MEMBER                 SET TO MEMBER NAME\n         B     MAIN0060\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Locate the DD_BLOK for this DD                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0090 DS    0H\n         ITRACE ID=LOC_DD,                                             +\n               DATA1=NEST_DDNAME\n         ICM   R8,15,WORK_DD_CHAIN            FIRST DD_BLOK\nMAIN0100 DS    0H\n         CLC   DD_DDNAME,NEST_DDNAME          FOUND THE DCB?\n         BE    MAIN0110                       YES\n         ICM   R8,15,DD_NEXT\n         BNZ   MAIN0100\n         B     MAIN0400\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     DD_BLOK has been located.                                       *\n*     Issue FIND for the member                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0110 DS    0H\n         ITRACE ID=DD_FOUND,                                           +\n               RDATA1=R8,                                              +\n               DATA2=DD_DEPTH\n         L     R7,DD_DEPTH                    DD NEST DEPTH\n         MH    R7,=Y(DCB_DSECTL)              MULTIPLY BY LENGTH EACH\n         LA    R7,DD_DCB_INFO(R7)             DCB INFO ADDRESS\n         ST    R7,NEST_DCB                    SET DCB INFO ADDRESS\n         L     R1,DD_DEPTH                    CURRENT DEPTH\n         LA    R1,1(,R1)                      ADD 1\n         ST    R1,DD_DEPTH                    UPDATE DEPTH\n         CLC   NEST_MEMBER,BLANKS             MEMBER NAME GIVEN?\n         BNE   MAIN0120                       YES\n         MVC   NEST_MEMBER,WORK_INDEX_NAME    SET TO INDEX MEMBER NAME\nMAIN0120 DS    0H\n         ITRACE ID=FIND_MEM,                                           +\n               DATA1=NEST_MEMBER\n         FIND  DCB_DCB,                       'FIND' THE MEMBER        +\n               NEST_MEMBER,                                            +\n               D\n         ITRACE ID=FIND_RC,                                            +\n               RDATA1=R15\n         LTR   R15,R15                        MEMBER FOUND?\n         BNZ   MAIN0410                       NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WRITE HTTP HEADER                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLC   NEST_MEMBER,WORK_INDEX_NAME    INDEX MEMBER?\n         BE    MAIN0130                       YES\n         CLI   DD_TYPE,$DD_HTML               HTML FILE?\n         BE    MAIN0140                       YES\n         CLI   DD_TYPE,$DD_RAW                RAW FILE?\n         BE    MAIN0140                       YES\nMAIN0130 DS    0H\n         ITRACE ID=MAIN0130\n         XC    HTTP_ALET,HTTP_ALET            DATA IN OUR ADDRESS SPACE\n         BAL   R9,HTTP0000                    SEND HTTP HEADING\n         BAL   R9,HTML0000                    SEND HTML HEADING\n* ------------------------------------------------------------------- *\n*      READ first block of the member                                 *\n* ------------------------------------------------------------------- *\nMAIN0140 DS    0H\n         ITRACE ID=READ_1ST\n         BAL   R10,READ0010\n         B     MAIN0160\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      READ/SEND the requested member                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         ITRACE ID=MAIN0150\n         BAL   R10,READ0000                    READ A BLOCK\nMAIN0160 DS    0H\n         OC    DCB_DATA_LENGTH,DCB_DATA_LENGTH EOF?\n         BNZ   MAIN0180                        NO\nMAIN0170 DS    0H\n         ITRACE ID=LOGICEOF,                                           +\n               DATA1=WORK_NEST_DEPTH,                                  +\n               DATA2=DD_DEPTH\n         MVC   NEST_DDNAME,BLANKS             RESET DD NAME\n         MVC   NEST_MEMBER,BLANKS             RESET MEMBER NAME\n         XC    NEST_DCB,NEST_DCB              RESET DCB BLOCK ADDRESS\n         L     R1,DD_DEPTH                    DEPTH ON THIS DD\n         BCTR  R1,0                           MINUS 1\n         ST    R1,DD_DEPTH                    UPDATE DEPTH\n         ICM   R1,15,WORK_NEST_DEPTH          NEST DEPTH\n         BZ    MAIN0320                       END OF ALL DATA\n         BCTR  R1,0                           MINUS 1\n         ST    R1,WORK_NEST_DEPTH\n         S     R5,=A(NESTL)                   BACK UP 1 IN NEST TABLE\n         L     R7,NEST_DCB                    RESET DCB INFO\n         B     MAIN0150                       PROCESS NEXT RECORD\nMAIN0180 DS    0H\n         ITRACE ID=MAIN0180\n         L     R2,DCB_DATA_ADDRESS\n         L     R0,DCB_DATA_ADDRESS            DATA ADDRESS\n         LH    R1,DCB_DATA_LENGTH             DATA LENGTH\n         LA    R14,WORK_OUTPUT_BUFFER\n         LR    R15,R1                         SET LENGTH\n         MVCL  R14,R0                         COPY TO BUFFER\n         LA    R1,WORK_OUTPUT_BUFFER\n         LH    R2,DCB_DATA_LENGTH             DATA LENGTH\n         CH    R2,=Y(L'INCLUDE_STATEMENT)     COULD IT BE AN INCLUDE?\n         BL    MAIN0190                       NO\n         CLC   INCLUDE_STATEMENT,WORK_OUTPUT_BUFFER\n         BNE   MAIN0190                       NOT AN INCLUDE\n         ITRACE ID=INCLUDE,                                            +\n               DATA1=WORK_NEST_DEPTH\n         L     R4,WORK_NEST_DEPTH             NEST DEPTH\n         CH    R4,=Y($NEST_DEPTH)             AT MAX DEPTH\n         BE    ERR0090                        YES\n         LA    R4,1(,R4)                      ADD 1\n         ST    R4,WORK_NEST_DEPTH             UPDATE NEST DEPTH\n         A     R5,=A(NESTL)                   NEXT IN NEST TABLE\n         LA    R2,WORK_OUTPUT_BUFFER+L'INCLUDE_STATEMENT\n         LH    R3,DCB_DATA_LENGTH             DATA LENGTH\n         SH    R3,=Y(L'INCLUDE_STATEMENT)     MINUS INCLUDE LENGTH\n         BH    MAIN0050                       PARSE DD AND MEMBER\n         B     MAIN0170                       TREAT SAME AS EOF\nMAIN0190 DS    0H\n         CLC   NEST_MEMBER,WORK_INDEX_NAME    INDEX MEMBER?\n         BE    MAIN0200                       YES\n         CLI   DD_TYPE,$DD_RAW                RAW DATA?\n         BE    MAIN0210                       YES\nMAIN0200 DS    0H\n         AR    R1,R2\n         MVI   0(R1),$LF\n         LA    R2,1(,R2)\n         ST    R2,HTTP_LENGTH\n         BAL   R10,WRITE000\n         B     MAIN0150\nMAIN0210 DS    0H\n         LA    R1,WORK_OUTPUT_BUFFER\n         ST    R1,HTTP_DATA\n         ST    R2,HTTP_LENGTH\n         ITRACE ID=WRT_RAW,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R2\n         MVI   HTTP_FUNCTION,$HTTP_WRITE_RAW\n         XC    HTTP_ALET,HTTP_ALET\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0020\n         B     MAIN0150\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      DDNAME in URL is too long                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0300 DS    0H\n         TM    WORK_FLAGS,$PARSED_MEMBER      PARSING MEMBER NAME?\n         BO    MAIN0310                       YES\n         ITRACE ID=DD_LONG\n         BAL   R9,HTTP0000\n         BAL   R9,HTML0000\n         MVC   WORK_OUTPUT_BUFFER(MSG06L),MSG06\n         LA    R1,MSG06L\n         ST    R1,HTTP_LENGTH\n         BAL   R10,WRITE000\n         B     MAIN0320\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Member in URL is too long                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0310 DS    0H\n         ITRACE ID=MEM_LONG\n         BAL   R9,HTTP0000\n         BAL   R9,HTML0000\n         MVC   WORK_OUTPUT_BUFFER(MSG07L),MSG07\n         LA    R1,HTML_HEADERL+MSG07L\n         ST    R1,HTTP_LENGTH\n         BAL   R10,WRITE000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Send HTML trailer data                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0320 DS    0H\n         TM    WORK_FLAGS,$HTML_HEADER\n         BNO   MAIN1000\n         ITRACE ID=TRAILER\n         LA    R1,HTML_TRAILERL\n         ST    R1,HTTP_LENGTH\n         BAL   R10,WRITE000\n         B     MAIN1000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      DD not found                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0400 DS    0H\n         ITRACE ID=BAD_DD,                                             +\n               DATA1=DD_DDNAME\n         BAL   R9,HTTP0000\n         BAL   R9,HTML0000\n         MVC   WORK_OUTPUT_BUFFER(MSG08L),MSG08\n         MVC   WORK_OUTPUT_BUFFER+(MSG08DD-MSG08)(L'MSG08DD),DD_DDNAME\n         LA    R1,MSG08L\n         ST    R1,HTTP_LENGTH\n         BAL   R10,WRITE000\n         B     MAIN1000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Member not found                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0410 DS    0H\n         ITRACE ID=BAD_MEM,                                            +\n               DATA1=NEST_MEMBER\n         BAL   R9,HTTP0000                    SEND HTTP HEADING\n         BAL   R9,HTML0000                    SEND HTML HEADING\n         MVC   WORK_OUTPUT_BUFFER(MSG09L),MSG09\n         LA    R1,MSG09L\n         ST    R1,HTTP_LENGTH                 SEND MESSAGE\n         BAL   R10,WRITE000\n         B     MAIN1000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0420 DS    0H\n         ITRACE ID=LOST\n         MVC   PR_LINE(MSG16L),MSG16\n         LH    R0,HTTP_SOCKET\n         CVD   R0,WORK_DWORD\n         ED    PR_LINE+(MSG16_SOCKET-MSG16)(L'MSG16_SOCKET),WORK_DWORD++\n               4\n         BAL   R9,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CLOSE this connection                                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=MAIN1000\n         BAL   R9,HTML0100                    SEND HTML TRAILER\n         ITRACE ID=CLOSE\n         MVI   HTTP_FUNCTION,$HTTP_CLOSE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         XC    WORK_NEST_DEPTH,WORK_NEST_DEPTH\n         LA    R6,$NEST_DEPTH\nMAIN1010 DS    0H\n         XC    DD_DEPTH,DD_DEPTH              RESET DEPTH\n         A     R5,=A(NESTL)                   NEXT NEST INFO\n         BCT   R6,MAIN1010                    LOOP\n         B     MAIN0030\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTP0000 DS    0H\n         TM    WORK_FLAGS,$HTTP_HEADER        HTTP HEADING SENT?\n         BOR   R9                             YES\n         ITRACE ID=HTTPHEAD\n         OI    WORK_FLAGS,$HTTP_HEADER        SET FLAG\n         MVC   WORK_OUTPUT_BUFFER(HTTP_HEADERL),HTTP_HEADER\n         LA    R1,HTTP_HEADERL\n         ST    R1,HTTP_LENGTH\n         BAL   R10,WRITE000                   WRITE HTTP HEADING\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTML0000 DS    0H\n         TM    WORK_FLAGS,$HTML_HEADER        HTML HEADING SENT?\n         BOR   R9                             YES\n         ITRACE ID=HTMLHEAD\n         OI    WORK_FLAGS,$HTML_HEADER        SET FLAG\n         MVC   WORK_OUTPUT_BUFFER(HTML_HEADERL),HTML_HEADER\n         LA    R1,HTML_HEADERL\n         ST    R1,HTTP_LENGTH\n         BAL   R10,WRITE000                   WRITE HTML HEADING\n         BR    R9\nHTML0100 DS    0H\n         TM    WORK_FLAGS,$HTML_HEADER        HTML HEADING SENT?\n         BNOR  R9                             NO\n         ITRACE ID=TRAIL2\n         NI    WORK_FLAGS,255-$HTML_HEADER    RESET FLAG\n         MVC   WORK_OUTPUT_BUFFER(HTML_TRAILERL),HTML_TRAILER\n         LA    R1,HTML_TRAILERL\n         ST    R1,HTTP_LENGTH\n         BAL   R10,WRITE000                   WRITE HTML TRAILER\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      READ member of one of the DDs                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         ITRACE ID=READ0000,                                           +\n               RDATA1=R5,                                              +\n               RDATA2=R8\n         LH    R1,DCB_LENGTH_LEFT             DATA LEFT IN BLOCK\n         SH    R1,DCB_RECORD_LENGTH           MINUS RECORD'S LENGTH\n         BZ    READ0010                       NONE LEFT...\n         STH   R1,DCB_LENGTH_LEFT             SAVE LENGTH LEFT NOW\n         L     R1,DCB_RECORD_ADDRESS          CURRENT RECORD'S ADDRESS\n         AH    R1,DCB_RECORD_LENGTH           NEXT RECORD'S ADDRESS\n         ST    R1,DCB_RECORD_ADDRESS          SET ADDRESS\n         ST    R1,DCB_DATA_ADDRESS            SET ADDRESS\n         TM    DCBRECFM,DCBRECF               FIXED LENGTH RECORDS?\n         BOR   R10                            YES..\n         LH    R0,0(R1)                       THIS RECORD'S LENGTH\n         STH   R0,DCB_RECORD_LENGTH           SAVE SIZE\n         LA    R1,4(R1)                       DATA'S ADDRESS\n         SH    R0,H4                          DATA'S LENGTH\n         ST    R1,DCB_DATA_ADDRESS            SET DATA ADDRESS\n         STH   R0,DCB_DATA_LENGTH             SET DATA LENGTH\n         BR    R10\nREAD0010 DS    0H\n         ITRACE ID=READ0010,                                           +\n               RDATA1=R5,                                              +\n               RDATA2=R8\n         XC    DCB_ECB,DCB_ECB                CLEAR THE DECB\n         READ  DCB_ECB,                       READ BLOCK OF MEMBER     +\n               SF,                            .. SEQUENTIALLY FORWARD  +\n               DCB_DCB,                       .. DCB                   +\n               NEST_IO_AREA,                  .. I/O AREA ADDRESS      +\n               ,                              .. NO SPECIFIED LENGTH   +\n               S,                             .. BLOCK SIZE FROM DCB   +\n               MF=(E,DCB_READ)                ..\n         CHECK DCB_ECB                        WAIT FOR I/O COMPLETION\n         LA    R1,NEST_IO_AREA                DATA ADDRESS\n         TM    DCBRECFM,DCBRECV               VARIABLE LENGTH RECORDS?\n         BO    READ0020                       YES\n         ST    R1,DCB_RECORD_ADDRESS          SET RECORD ADDRESS\n         ST    R1,DCB_DATA_ADDRESS            SET DATA ADDRESS\n         LH    R2,DCBBLKSI                    BLOCK SIZE FROM DCB\n         L     R15,DCBIOBA                    IOB ADDRESS FROM DCB\n         SH    R15,H8                         DCB POINTS AT IOB+8\n         USING IOB,R15                        DEFINE BASE\n         SH    R2,IOBSTDRD+14                 COMPUTE LENGTH READ\n         STH   R2,DCB_LENGTH_LEFT\n         MVC   DCB_DATA_LENGTH,DCBLRECL\n         MVC   DCB_RECORD_LENGTH,DCBLRECL\n         BR    R10\nREAD0020 DS    0H\n         LH    R0,0(R1)                       BLOCK LENGTH\n         SH    R0,H4                          MINUS LENGTH OF BDW\n         STH   R0,DCB_LENGTH_LEFT             SET LENGTH OF DATA LEFT\n         LA    R1,4(R1)                       SKIP BDW\n         ST    R1,DCB_RECORD_ADDRESS          SET RECORD ADDRESS\n         LH    R0,0(R1)                       RECORD LENGTH\n         STH   R0,DCB_RECORD_LENGTH           SET RECORD LENGTH\n         SH    R0,H4                          DATA LENGTH\n         STH   R0,DCB_DATA_LENGTH             SET DATA LENGTH\n         LA    R1,4(R1)                       DATA ADDRESS\n         ST    R1,DCB_DATA_ADDRESS            SET DATA ADDRESS\n         ITRACE ID=READ0020,                                           +\n               DATA1=DCB_RECORD_ADDRESS,                               +\n               DATA2=DCB_RECORD_LENGTH,                                +\n               DATA3=DCB_LENGTH_LEFT\n         BR    R10\n* ------------------------------------------------------------------- *\n*          EOF reached on current member                              *\n* ------------------------------------------------------------------- *\nREAD0030 DS    0H\n         SAM31\n         ITRACE ID=EOF\n         XC    DCB_DATA_ADDRESS,DCB_DATA_ADDRESS\n         XC    DCB_DATA_LENGTH,DCB_DATA_LENGTH\n         XC    DCB_RECORD_ADDRESS,DCB_RECORD_ADDRESS\n         XC    DCB_RECORD_LENGTH,DCB_RECORD_LENGTH\n         XC    DCB_LENGTH_LEFT,DCB_LENGTH_LEFT\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n*          Write to web user (EBCDIC data)                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWRITE000 DS    0H\n         ITRACE ID=WRT_WEB,                                            +\n               DATA1=HTTP_DATA,                                        +\n               DATA2=HTTP_LENGTH\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         LA    R1,WORK_OUTPUT_BUFFER\n         ST    R1,HTTP_DATA\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0020\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n*          Operator has entered a command at the console              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCONS0000 DS    0H\n         ITRACE ID=CONSOLE\n         MVC   PR_LINE(MSG12L),MSG12\n         MVC   PR_LINE+(MSG12_CMD-MSG12)(L'MSG12_CMD),HTTP_MESSAGE_1\n         BAL   R9,PRT0000\n         CLC   =C'STOP ',HTTP_MESSAGE_1\n         BE    EXIT0000\n         MVC   PR_LINE(MSG13L),MSG13\n         BAL   R9,PRT0000\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ERR0010\n         MVC   PR_LINE(MSG02L),MSG02\n         BAL   R9,PRT0000\n         MVI   WORK_RC,4\n         B     EXIT0000\nERR0020  DS    0H\n         ITRACE ID=ERR0020,                                            +\n               DATA1=HTTP_TCPIP_ERROR\n         MVC   PR_LINE(MSG03L),MSG03\n         BAL   R9,PRT0000\n         MVC   PR_LINE(L'HTTP_MESSAGE_1),HTTP_MESSAGE_1\n         BAL   R9,PRT0000\n         MVC   PR_LINE(L'HTTP_MESSAGE_2),HTTP_MESSAGE_2\n         BAL   R9,PRT0000\n         CLC   HTTP_TCPIP_ERROR,X_00000020    CONNECTION CLOSED?\n         BE    MAIN0420                       YES\n         MVI   WORK_RC,4\n         B     EXIT0000\nERR0030  DS    0H\n         ITRACE ID=ERR0030\n         MVC   PR_LINE(MSG11L),MSG11\n         BAL   R9,PRT0000\n         MVI   WORK_RC,4\n         B     EXIT0000\nERR0040  DS    0H\n         ITRACE ID=ERR0040\n         MVC   PR_LINE(MSG15L),MSG15\n         BAL   R9,PRT0000\n         MVI   WORK_RC,4\n         B     EXIT0000\nERR0050  DS    0H\n         ITRACE ID=ERR0050,                                            +\n               DATA1=HTTP_TCPIP_RC,                                    +\n               DATA2=HTTP_TCPIP_ERROR\n         DC    H'5'\nERR0060  DS    0H\n         ITRACE ID=ERR0060\n         ESTAE 0\n         MVI   HTTP_FUNCTION,$HTTP_FREE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         MVC   WORK_OUTPUT_BUFFER(MSG14L),MSG14\n         UNPK  WORK_DWORD(7),WORK_ABEND_CODE(4)\n         TR    WORK_DWORD(6),HEXCHAR\n         MVC   WORK_OUTPUT_BUFFER+(MSG14_SYSTEM-MSG14)(3),WORK_DWORD\n         MVC   WORK_OUTPUT_BUFFER+(MSG14_USER-MSG14)(3),WORK_DWORD+3\n         LA    R1,MSG14L\n         ST    R1,HTTP_LENGTH\n         BAL   R10,WRITE000\n         B     MAIN1000\nERR0090  DS    0H\n         DC    H'9'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRT0000\n         ST    R9,WORK_PRT_R9\n         CP    LINE_COUNT,MAX_LINE            TIME FOR HEADING?\n         BL    PRT0010                        NO\n         BAL   R9,HEAD0000                    PRINT HEADING\nPRT0010  DS    0H\n         PUT   WORK_SYSPRINT,PR_CC\n         MVI   PR_CC,C' '\n         MVC   PR_LINE,PR_CC\n         AP    LINE_COUNT,P1\n         L     R9,WORK_PRT_R9\n         BR    R9\nHEAD0000 DS    0H\n         ITRACE ID=HEAD0000\n         MVC   PR_SAVE,PR_CC\n         AP    PAGE_NBR,P1\n         MVC   PR_CC(HEADINGL),HEADING\n         ED    PR_CC+(HEADPAGE-HEADING)(L'HEADPAGE),PAGE_NBR\n         PUT   WORK_SYSPRINT,PR_CC\n         MVC   PR_CC(121),PR_SAVE\n         ZAP   LINE_COUNT,P1\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSHUT0000 DS    0H\n         ITRACE ID=SHUTDOWN\n         MVC   PR_LINE(MSG89L),MSG89\n         BAL   R9,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         OC    HTTP_WORKAREA,HTTP_WORKAREA\n         BZ    EXIT0010\n         MVI   HTTP_FUNCTION,$HTTP_CLEAN_UP\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BE    EXIT0010\n         MVC   PR_LINE(MSG90L),MSG90\n         MVC   PR_LINE+(MSG90_MSG-MSG90)(L'MSG90_MSG),HTTP_MESSAGE_1\n         BAL   R9,PRT0000\nEXIT0010 DS    0H\n         TM    TRACE_FLAGS,$TRACE\n         BNO   EXIT0015\n         CLOSE WORK_TRACE,                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         MVI   TRACE_FLAGS,0\nEXIT0015 DS    0H\n         ICM   R8,15,WORK_DD_CHAIN\n         BZ    EXIT0040\nEXIT0020 DS    0H\n         LA    R7,DD_DCB_INFO\n         LA    R6,$NEST_DEPTH\nEXIT0030 DS    0H\n         CLOSE DCB_DCB,                                                +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         LA    R7,DCB_DSECTL(,R7)\n         BCT   R6,EXIT0030\n         L     R2,DD_NEXT\n         FREEMAIN RU,                                                  +\n               A=(R8),                                                 +\n               LV=DD_BLOKL\n         LTR   R8,R2\n         BNZ   EXIT0020\nEXIT0040 DS    0H\n         ICM   R1,15,WORK_NEST_TABLE   NEST TABLE\n         BZ    EXIT0050                NOT GETMAIN'D\n         FREEMAIN RU,                                                  +\n               A=(R1),                                                 +\n               LV=$NEST_DEPTH*NESTL\nEXIT0050 DS    0H\n         MVC   PR_LINE(MSG91L),MSG91\n         BAL   R9,PRT0000\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE WORK_SYSIN,                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         CLOSE WORK_SYSPRINT,                                          +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         DELETE EP=HTTPSUB\n         SR    R2,R2                   CLEAR REGISTER\n         IC    R2,WORK_RC\n         LR    R1,R13                  COPY WORK AREA ADDRESS\n         L     R13,4(R13)              RESTORE CALLER'S R13\n         FREEMAIN RU,                  FREE THE WORK AREA              +\n               A=(1),                                                  +\n               LV=WORKL\n         L     R14,12(R13)             RESTORE R14\n         LR    R15,R2                  INSERT RETURN CODE\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTRACE000 DS    0H\n         ST    R15,WORK_TRACE_R15\n         L     R15,WORK_TRACE_CURR\n         C     R15,WORK_TRACE_LAST\n         BE    TRACE010\n         LA    R15,TRACE_ENTRYL(R15)\n         B     TRACE020\nTRACE010 DS    0H\n         L     R15,WORK_TRACE_1ST\nTRACE020 DS    0H\n         ST    R15,WORK_TRACE_CURR\n         USING TRACE_ENTRY,R15\n         MVC   TRACE_ID,0(R14)\n         MVC   TRACE_DATA1,WORK_TRACE_DATA1\n         MVC   TRACE_DATA2,WORK_TRACE_DATA2\n         MVC   TRACE_DATA3,WORK_TRACE_DATA3\n         XC    WORK_TRACE_DATA1,WORK_TRACE_DATA1\n         XC    WORK_TRACE_DATA2,WORK_TRACE_DATA2\n         XC    WORK_TRACE_DATA3,WORK_TRACE_DATA3\n         L     R15,WORK_TRACE_R15\n         B     8(R14)\n*-------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMVC_01   MVC   PR_LINE+(MSG04_URL-MSG04)(0),0(R2)\n*-------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nESTAE000 DS    0H\n         STM   R14,R12,12(R13)\n         LR    R12,R15\n         USING ESTAE000,R12\n         USING SDWA,R1\n         L     R2,SDWAPARM\n         L     R3,0(R2)\n         USING WORK,R3\n         MVC   WORK_ABEND_CODE,SDWACMPC\n         L     R4,WORK_ESTAE_RETRY\n         SETRP RETADDR=(R4),                                           +\n               RETREGS=YES,                                            +\n               REGS=(14,12),                                           +\n               FRESDWA=YES,                                            +\n               RC=4\n* ------------------------------------------------------------------- *\nSYSINI    DCB  DSORG=PS,                                               +\n               DDNAME=SYSIN,                                           +\n               LRECL=80,                                               +\n               RECFM=FB,                                               +\n               EODAD=MAIN0000,                                         +\n               MACRF=GM\nSYSINL    EQU  *-SYSINI\nSYSPRINTI DCB  DSORG=PS,                                               +\n               DDNAME=SYSPRINT,                                        +\n               LRECL=121,                                              +\n               RECFM=FBA,                                              +\n               MACRF=PM\nSYSPRINTL EQU  *-SYSPRINTI\nTRACEI    DCB  DSORG=PS,                                               +\n               DDNAME=TRACE,                                           +\n               RECFM=VB,                                               +\n               MACRF=PM\nTRACEL    EQU  *-TRACEI\nMEMDCBI   DCB  DSORG=PO,                                               +\n               DDNAME=XXXXXXXX,                                        +\n               EODAD=READ0030,                                         +\n               MACRF=R\nMEMDCBL   EQU  *-MEMDCBI\nREADI     READ READIECB,             READ BLOCK OF MEMBER              +\n               SF,                   .. SEQUENTIALLY FORWARD           +\n               ,                     .. DCB                            +\n               ,                     .. I/O AREA ADDRESS               +\n               ,                     .. NO SPECIFIED LENGTH            +\n               S,                    .. BLOCK SIZE FROM DCB            +\n               MF=L                  ..\nREADL     EQU  *-READI\nOPENI     OPEN (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPENL     EQU  *-OPENI\nCLOSEI    CLOSE (*),                                                   +\n               MODE=31,                                                +\n               MF=L\nCLOSEL    EQU  *-CLOSEI\nESTAEI   ESTAE ESTAE000,                                               +\n               CT,                                                     +\n               MF=L\nESTAEL   EQU   *-ESTAEI\n\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nH4             DC    H'4'\nH8             DC    H'8'\nH100           DC    H'100'\nP0             DC    P'0'\nP1             DC    P'1'\nMAX_LINE       DC    P'65'\nX_00000020     DC    X'00000020'          <-- CONNECTION CLOSED\nBLANKS         DC    CL8' '\nHEADING        DS    0C\n               DC    C'1'\n               DC    CL30' '\n               DC    C'HTTP SAMPLE APPLICATION'\n               DC    CL30' '\n               DC    C'PAGE'\nHEADPAGE       DC    X'402020202120'\nHEADINGL       EQU   *-HEADING\n\nPORTSTMT       DC    CL09'PORT'\nDDSTMT         DC    CL09'DD'\nHTMLSTMT       DC    CL09'HTML'\nINDXSTMT       DC    CL09'INDEX'\nRAWSTMT        DC    CL09'RAWDD'\nTRACESTMT      DC    CL09'TRACE'\n\nINCLUDE_STATEMENT DC C'<--INCLUDE-->'\n\nMSG01          DS    0C\n               DC    CL15'HTTPAPP101E'\n               DC    C'INVALID CONTROL STATEMENT'\nMSG01L         EQU   *-MSG01\nMSG02          DS    0C\n               DC    CL15'HTTPAPP102E'\n               DC    C'Error(s) detected, execution aborted'\nMSG02L         EQU   *-MSG02\nMSG03          DS    0C\n               DC    CL15'HTTPAPP103E'\n               DC    C'Error from HTTPSUB: '\nMSG03_MSG      DC    CL80' '\nMSG03L         EQU   *-MSG03\nMSG04          DS    0C\n               DC    CL15'HTTPAPP104I'\n               DC    C'Socket'\nMSG04_SOCKET   DC    X'402020202120'\n               DC    C'    URL '\nMSG04_URL_ID   DC    X'40202020202020202120'\n               DC    C'  '\nMSG04_URL      DC    CL80' '\nMSG04L         EQU   *-MSG04\nMSG05          DS    0C\n               DC    CL15'HTTPAPP105E'\n               DC    C'DDNAME may not start with a blank'\nMSG05L         EQU   *-MSG05\n\nMSG06          DS    0C\n               DC    C'HTTPAPP106E  DDNAME IN URL IS TOO LONG'\nMSG06L         EQU   *-MSG06\nMSG07          DS    0C\n               DC    C'HTTPAPP107E  MEMBER IN URL IS TOO LONG'\nMSG07L         EQU   *-MSG07\nMSG08          DS    0C\n               DC    C'HTTPAPP108E  DDNAME '\nMSG08DD        DC    CL8' '\n               DC    C' not found'\nMSG08L         EQU   *-MSG08\nMSG09          DS    0C\n               DC    C'HTTPAPP109E  Member '\nMSG09MEM       DC    CL8' '\n               DC    C' not found'\nMSG09L         EQU   *-MSG09\nMSG10          DS    0C\n               DC    CL15'HTTPAPP110E'\n               DC    C'DD NAME IS TOO LONG'\nMSG10L         EQU   *-MSG10\nMSG11          DS    0C\n               DC    CL15'HTTPAPP111E'\n               DC    C'PORT not specified'\nMSG11L         EQU   *-MSG11\nMSG12          DS    0C\n               DC    CL15'HTTPAPP112I'\n               DC    C'Command from console: '\nMSG12_CMD      DC    CL80' '\nMSG12L         EQU   *-MSG12\nMSG13          DS    0C\n               DC    CL15'HTTPAPP113E'\n               DC    C'Invalid console command'\nMSG13L         EQU   *-MSG13\nMSG14          DS    0C\n               DC    CL15'HTTPAPP114E'\n               DC    C'Error occurred during OPEN.  SYSTEM CODE '\nMSG14_SYSTEM   DS    CL3\n               DC    C'     USER CODE '\nMSG14_USER     DS    CL3\nMSG14L         EQU   *-MSG14\nMSG15          DS    0C\n               DC    CL15'HTTPAPP115E'\n               DC    C'No DD''s defined.'\nMSG15L         EQU   *-MSG15\nMSG16          DS    0C\n               DC    CL15'HTTPAPP116W'\n               DC    C'Connection lost.  Closing port'\nMSG16_SOCKET   DC    X'402020202120'\nMSG16L         EQU   *-MSG16\nMSG89          DS    0C\n               DC    CL15'HTTPAPP189I'\n               DC    C'Received shutdown from HTTPMAIN'\nMSG89L         EQU   *-MSG89\nMSG90          DS    0C\n               DC    CL15'HTTPAPP190E'\n               DC    C'Error from HTTPSUB in shutdown: '\nMSG90_MSG      DC    CL80' '\nMSG90L         EQU   *-MSG90\nMSG91          DS    0C\n               DC    CL15'HTTPAPP191I'\n               DC    C'Shutting down'\nMSG91L         EQU   *-MSG91\n\nHTTP_HEADER    DS    0C\n               DC    C'HTTP/1.1 200 OK'\n               DC    AL1($LF)\n               DC    C'Content-Type: text/html'\n               DC    AL1($LF)\n               DC    AL1($LF)\nHTTP_HEADERL   EQU   *-HTTP_HEADER\nHTML_HEADER    DS    0C\n               DC    C'<HTML>'\n               DC    C'<BODY>'\n               DC    C'<PRE>'\n               DC    AL1($LF)\nHTML_HEADERL   EQU   *-HTML_HEADER\nHTML_TRAILER   DS    0C\n               DC    C'</PRE>'\n               DC    C'</BODY>'\n               DC    C'</HTML>'\nHTML_TRAILERL  EQU   *-HTML_TRAILER\n\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    DS    18F\nWORK_DWORD          DS    D\n\nWORK_TRACE_R15      DS    F\nWORK_ID             DS    CL8\nWORK_TRACE_AREA     DS    F\n                    DS    CL4\nWORK_TRACE_1ST      DS    F\n                    DS    CL4\nWORK_TRACE_LAST     DS    F\n                    DS    CL4\nWORK_TRACE_CURR     DS    F\nWORK_TRACE_DATA1    DS    CL8\nWORK_TRACE_DATA2    DS    CL8\nWORK_TRACE_DATA3    DS    CL8\n\nWORK_NEST_TABLE     DS    A\nWORK_NEST_DEPTH     DS    F\nWORK_DD_CHAIN       DS    A\n\nWORK_SYSIN          DS    0F,(SYSINL)X\nWORK_SYSPRINT       DS    0F,(SYSPRINTL)X\nWORK_TRACE          DS    0F,(TRACEL)X\n\nWORK_OCPL           DS    0F,(OPENL)X\n\nWORK_ESTAE_PARMS    DS    0A\nWORK_ESTAE_WORK     DS    A\nWORK_ESTAE_RETRY    DS    A\n\nWORK_INDEX_NAME     DS    CL8\n\nWORK_FLAGS          DS    X\n$ERROR              EQU   X'80'\n$INIT               EQU   X'40'\n$PORT               EQU   X'20'\n$PARSED_MEMBER      EQU   X'10'\n$HTTP_HEADER        EQU   X'08'\n$HTML_HEADER        EQU   X'04'\n\nTRACE_FLAGS         DS    X\n$TRACE              EQU   X'80'\n\nWORK_RC             DS    X\n\nWORKCARD            DS    CL80\n\nPAGE_NBR            DS    PL3\nLINE_COUNT          DS    PL3\n\nPR_CC               DS    C\nPR_LINE             DS    CL120\n                    ORG   PR_LINE\nPR_LENGTH           DS    CL6\n                    DS    CL4\nPR_DATA             DS    CL100\n                    ORG\nPR_SAVE             DS    CL121\nWORK_PRT_R9         DS    F\n\nWORK_ABEND_CODE     DS    XL3\n\n                    SUBPARM TYPE=CSECT\n\nWORK_OUTPUT_BUFFER  DS    32768C\nWORKL               EQU   *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$NEST_DEPTH         EQU  10\nNEST_DSECT          DSECT\nNEST_DDNAME         DS   CL8                  DD NAME\nNEST_MEMBER         DS   CL8                  MEMBER NAME\nNEST_DCB            DS   A                    ADDRESS OF DCB INFO\nNEST_IO_AREA        DS   CL32768              I/O AREA\nNESTL               EQU  *-NEST_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDD_BLOK             DSECT\nDD_NEXT             DS   A                    NEXT DDBLOK\nDD_DDNAME_LENGTH    DS   F                    LENGTH OF DD NAME\nDD_DEPTH            DS   F                    DEPTH IN THIS DD/DCB\nDD_DDNAME           DS   CL8                  DDNAME\nDD_TYPE             DS   C                    DD TYPE\n$DD_HTML            EQU  C'H'                 .. HTML\n$DD_NORMAL          EQU  C'N'                 .. PLAIN FILE\n$DD_RAW             EQU  C'R'                 .. RAW DATA\n                    DS   0F                   FORCE ALIGNMENT\nDD_DCB_INFO         DS   ($NEST_DEPTH)XL(DCB_DSECTL)\nDD_BLOKL            EQU  *-DD_BLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDCB_DSECT           DSECT\nDCB_DCB             DS   0F,(MEMDCBL)X        DCB\nDCB_READ            DS   0F,(READL)X          READ (LIST FORM)\nDCB_ECB             DS   F                    ECB\nDCB_READS           DS   F                    NBR OF READS\nDCB_RECORD_ADDRESS  DS   A                    CURRENT RECORD ADDRESS\nDCB_DATA_ADDRESS    DS   A                    DATA IN CURRENT RECORD\nDCB_RECORD_LENGTH   DS   H                    CURRENT RECORD LENGTH\nDCB_DATA_LENGTH     DS   H                    LENGTH OF DATA\nDCB_LENGTH_LEFT     DS   H                    LENGTH LEFT IN BLOCK\n                    DS   0F                   FORCE FULLWORD ALIGNMENT\nDCB_DSECTL          EQU  *-DCB_DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nTRACE_ENTRY         DSECT\nTRACE_ID            DS   CL8\nTRACE_DATA1         DS   CL8\nTRACE_DATA2         DS   CL8\nTRACE_DATA3         DS   CL8\nTRACE_ENTRYL        EQU  *-TRACE_ENTRY\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                    IHASDWA\n                    IEZIOB\n                    IEZDEB LIST=YES\n                    DCBD DSORG=PO\n                    COPY REGEQU\n$LF                 EQU  X'0A'\n                    END  HTTPAPP1\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HTTPAPP2": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x016\\x00\\x16\\x01\\x042?\\x01\\x07(\\x1f\\x13)\\x01\\xb3\\x02\\x12\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.54", "flags": 0, "createdate": "2004-11-18T00:00:00", "modifydate": "2007-10-08T13:29:16", "lines": 435, "newlines": 530, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         DEFURL &URL,&ADDR\n         DC    AL2(B&SYSNDX-A&SYSNDX)\n         DC    VL4(&ADDR)\nA&SYSNDX DS    0C\n         DC    C'&URL'\nB&SYSNDX DS    0C\n         MEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   This sample application has these functions:                      *\n*                                                                     *\n*       ACT     Active system regions (JOBs, STC, TSO users)          *\n*       APF     Libraries in APF list                                 *\n*       IPL     System IPL info including \"IEASYSxx\" info             *\n*       LLA     Libraries in system link list                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPAPP2 CSECT\nHTTPAPP2 AMODE 31\nHTTPAPP2 RMODE 24\n         STM   R14,R12,12(R13)           SAVE REGISTERS\n         LR    R12,R15                   SET BASE REGISTER\n         USING HTTPAPP2,R12              DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'HTTPAPP2'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         GETMAIN RU,                     (DCB MUST BE BELOW 16M LINE)  +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n         LOAD  EP=HTTPSUB\n         ST    R0,HTTP_HTTPSUB\n         XC    WORK_TRACE(TRACEL),WORK_TRACE\n         XC    WORK_TRACE_IOAREA,WORK_TRACE_IOAREA\n         MVC   WORK_SYSIN(SYSINL),SYSINI\n         MVC   WORK_SYSPRINT(SYSPRINTL),SYSPRINTI\n         MVC   WORK_OPEN_CLOSE(OPENL),OPENI\n         OPEN  (WORK_SYSIN,INPUT),                                     +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN_CLOSE)\n         OPEN  (WORK_SYSPRINT,OUTPUT),                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN_CLOSE)\n         ZAP   WORK_LINE_COUNT,P0\n         ZAP   WORK_PAGE_COUNT,P0\n         MVI   WORK_PRINT_AREA-1,C' '\n         MVC   WORK_PRINT_AREA,WORK_PRINT_AREA-1\n         BAL   R11,HEAD0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Determine if TRACE DD is present                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         USING PSA,R0                    DEFINE BASE\n         L     R1,PSATNEW                OUR TCB ADDRESS FROM PSA\n         USING TCB,R1                    DEFINE TCB BASE\n         L     R2,TCBTIO                 TIOT ADDRESS FROM OUR TCB\n         USING TIOT1,R2                  DEFINE TIOT BASE\n         LA    R3,TIOENTRY               FIRST TIOT ENTRY\n         USING TIOENTRY,R3               DEFINE TIOT ENTRY BASE\nINIT0010 DS    0H\n         SR    R4,R4                     CLEAR FOR LENGTHS\n         ICM   R4,1,TIOELNGH             LENGTH OF THIS ENTRY\n         BZ    INIT0030                  END OF TABLE\n         CLC   TRACEDD,TIOEDDNM          TRACE DD?\n         BE    INIT0020                  YES\n         AR    R3,R4                     NEXT ENTRY\n         B     INIT0010                  LOOP\n* ------------------------------------------------------------------- *\n*     Trace DD is present.  Open TRACE file.                          *\n* ------------------------------------------------------------------- *\nINIT0020 DS    0H\n         MVC   WORK_TRACE(TRACEL),TRACEI\n         OPEN  (WORK_TRACE,OUTPUT),                                    +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN_CLOSE)\n         LA    R1,WORK_TRACE\n         ST    R1,HTTP_TRACE_DCB\n         GETMAIN RU,                                                   +\n               LV=32768,                                               +\n               LOC=BELOW\n         ST    R1,WORK_TRACE_IOAREA\n         ST    R1,HTTP_TRACE_IOAREA\n         BAL   R11,PRT0000\n         B     INIT0040\n* ------------------------------------------------------------------- *\n*     Trace DD is NOT present.                                        *\n* ------------------------------------------------------------------- *\nINIT0030 DS    0H\n         MVC   WORK_PRINT_AREA(MSG02L),MSG02\n         BAL   R11,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Read the control statements                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0040 DS    0H\n         GET   WORK_SYSIN,WORK_CONTROL\n         MVC   WORK_PRINT_AREA(WORK_CONTROLL),WORK_CONTROL\n         BAL   R11,PRT0000\n         CLI   WORK_CONTROL,C'*'\n         BE    INIT0040\n         CLC   HTTPMAIN_PORT,WORK_CONTROL\n         BE    INIT0050\n         MVC   WORK_PRINT_AREA(MSG03L),MSG03\n         BAL   R11,PRT0000\n         OI    WORK_FLAGS,$WORK_ERROR\n         B     INIT0040\nINIT0050 DS    0H\n         PACK  WORK_DWORD+5(3),WORK_CONTROL+L'HTTPMAIN_PORT(5)\n         CVB   R1,WORK_DWORD\n         STH   R1,WORK_HTTPMAIN_PORT\n         B     INIT0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Initialize the interface to the HTTP main server                *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINIT0070 DS    0H\n         TM    WORK_FLAGS,$WORK_ERROR\n         BO    EXIT0010\n         MVI   HTTP_FUNCTION,$HTTP_INIT\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Connect to the HTTP main server                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   HTTP_PORT,WORK_HTTPMAIN_PORT\n         MVI   HTTP_FUNCTION,$HTTP_CONNECT\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Send URLs to the HTTP main server                               *\n*                                                                     *\n*     This lets the HTTP main server \"know\" which URLs we want        *\n*     to process.  You can send multiple URLs (one at a time).        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEFURL00 DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_DEFINE_SPEC\n         LA    R2,URL_TABLE\n         USING URL_DSECT,R2\nDEFURL01 DS    0H\n         SR    R3,R3\n         ICM   R3,3,URL_LENGTH\n         ST    R3,HTTP_LENGTH\n         LA    R1,URL_TEXT\n         ST    R1,HTTP_DATA\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0010\n         LA    R2,URL_FIXEDL(R2,R3)\n         CLI   0(R2),X'FF'\n         BNE   DEFURL01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Wait for the main address space to get a reference to           *\n*     one of the URLs or command from the console.                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_GET_URL\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_CONSOLE\n         BE    CONS0000\n         CLI   HTTP_RETURN_CODE,$HTTP_MAIN_SHUTDOWN\n         BE    SHUT0000\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     We have a URL                                                   *\n*                                                                     *\n*     WORK_HTTP_URL_LENGTH will have been set to the URL's length     *\n*     HTTP_DATA will be set to the URL text's address                 *\n*                                                                     *\n*     Process the URL                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R1,HTTP_DATA\n         LA    R2,URL_TABLE\nMAIN0010 DS    0H\n         SR    R3,R3\n         ICM   R3,3,URL_LENGTH\n         BCTR  R3,0\n         EX    R3,URL_CLC\n         BE    MAIN0020\n         LA    R2,URL_FIXEDL+1(R2,R3)\n         CLI   0(R2),X'FF'\n         BE    ERR0010\n         B     MAIN0010\nMAIN0020 DS    0H\n         LA    R1,HTTP_PARMS\n         ICM   R15,15,URL_ADDR\n         BALR  R14,R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       The URL has been processed.                                   *\n*       CLOSE this SOCKET                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   HTTP_FUNCTION,$HTTP_CLOSE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0010\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   A command has arrived from the console                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCONS0000 DS    0H\n         CLC   =C'STOP ',HTTP_MESSAGE_1\n         BE    EXIT0000\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   The HTTPMAIN has shutdown                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSHUT0000 DS    0H\n         GETMAIN RU,                                                   +\n               LV=WTO01L,                                              +\n               LOC=BELOW\n         LR    R2,R1\n         MVC   0(WTO01L,R2),WTO01I\n         WTO   MF=(E,(R2))\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=WTO01L\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*       PRINT                                                         *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         PUT   WORK_SYSPRINT,WORK_PRINT_AREA\n         MVC   WORK_PRINT_AREA,WORK_PRINT_AREA-1\n         AP    WORK_LINE_COUNT,P1\n         CP    WORK_LINE_COUNT,P60\n         BLR   R11\nHEAD0000 DS    0H\n         MVC   WORK_PRINT_AREA(HEAD01L),HEAD01\n         AP    WORK_PAGE_COUNT,P1\n         ED    WORK_PRINT_AREA+(HEAD_PAGE-HEAD01)(6),WORK_PAGE_COUNT\n         PUT   WORK_SYSPRINT,WORK_PRINT_AREA\n         MVC   WORK_PRINT_AREA,WORK_PRINT_AREA-1\n         ZAP   WORK_LINE_COUNT,P0\n         BR    R11\n* ------------------------------------------------------------------- *\n*       Error from the INIT call                                      *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   WORK_PRINT_AREA(L'HTTP_MESSAGE_1),HTTP_MESSAGE_1\n         BAL   R11,PRT0000\n         MVC   WORK_PRINT_AREA(L'HTTP_MESSAGE_2),HTTP_MESSAGE_2\n         BAL   R11,PRT0000\n         MVC   WORK_PRINT_AREA(L'HTTP_MESSAGE_3),HTTP_MESSAGE_3\n         BAL   R11,PRT0000\n         MVC   WORK_PRINT_AREA(L'HTTP_MESSAGE_4),HTTP_MESSAGE_4\n         BAL   R11,PRT0000\n         MVC   WORK_PRINT_AREA(L'HTTP_MESSAGE_5),HTTP_MESSAGE_5\n         BAL   R11,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_CLEAN_UP\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0010\n         ICM   R1,15,WORK_TRACE_IOAREA\n         BZ    EXIT0010\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=32768\n         MVC   WORK_OPEN_CLOSE(CLOSEL),CLOSEI\n         CLOSE WORK_TRACE,                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN_CLOSE)\nEXIT0010 DS    0H\n         MVC   WORK_OPEN_CLOSE(CLOSEL),CLOSEI\n         CLOSE WORK_SYSIN,                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN_CLOSE)\n         CLOSE WORK_SYSPRINT,                                          +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN_CLOSE)\n         DELETE EP=HTTPSUB\n         LR    R1,R13                    COPY WORK AREA ADDRESS\n         L     R13,4(R13)                RESTORE CALLER'S R13\n         FREEMAIN RU,A=(1),LV=WORKL      FREE THE WORK AREA\n         L     R14,12(R13)               RESTORE R14\n         SR    R15,R15\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nURL_CLC  CLC   URL_TEXT(0),0(R1)\n* ------------------------------------------------------------------- *\nTRACEI   DCB   DSORG=PS,                                               +\n               DDNAME=TRACE,                                           +\n               RECFM=VB,                                               +\n               LRECL=32756,                                            +\n               BLKSIZE=32760,                                          +\n               MACRF=PM\nTRACEL   EQU   *-TRACEI\nSYSINI   DCB   DSORG=PS,                                               +\n               DDNAME=SYSIN,                                           +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               EODAD=INIT0070,                                         +\n               MACRF=GM\nSYSINL   EQU   *-SYSINI\nSYSPRINTI DCB  DSORG=PS,                                               +\n               DDNAME=SYSPRINT,                                        +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               MACRF=PM\nSYSPRINTL EQU  *-SYSPRINTI\nOPENI    OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE *,MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\n\nP0                  DC  P'0'\nP1                  DC  P'1'\nP60                 DC  P'60'\n\nTRACEDD             DC  CL8'TRACE'\nHTTPMAIN_PORT       DC  C'PORT='\n\nWTO01I              WTO 'Shutdown received from HTTPMAIN',MF=L\nWTO01L              EQU *-WTO01I\n\n\nHEAD01              DC  C'1'\n                    DC  C'HTTPAPP2'\n                    DC  CL70' '\n                    DC  C'PAGE '\nHEAD_PAGE           DC  X'402020202120'\nHEAD01L             EQU *-HEAD01\n\nMSG01               DC  C'TRACE activated.'\nMSG01L              EQU *-MSG01\n\nMSG02               DC  C'TRACE DD not present.  Trace not active.'\nMSG02L              EQU *-MSG02\n\nMSG03               DC  C'Invalid control statement'\nMSG03L              EQU *-MSG03\n* ------------------------------------------------------------------- *\n*\n*      Sample URLs\n*\n* ------------------------------------------------------------------- *\nURL_TABLE           DS    0C\n                    DEFURL AAA,APP2ACT\n                    DEFURL ACT,APP2ACT\n                    DEFURL APF,APP2APF\n                    DEFURL IPL,APP2IPL\n                    DEFURL LLA,APP2LLA\n                    DC    X'FF'\n\n                    LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nURL_DSECT           DSECT\nURL_LENGTH          DS    AL2\nURL_ADDR            DS    AL4\nURL_FIXEDL          EQU   *-URL_DSECT\nURL_TEXT            DS    0C\n\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    DS    18F\nWORK_DWORD          DS    D\nWORK_TRACE          DS    0F,(TRACEL)X\nWORK_SYSIN          DS    0F,(SYSINL)X\nWORK_SYSPRINT       DS    0F,(SYSPRINTL)X\nWORK_OPEN_CLOSE     DS    0F,(OPENL)X\nWORK_TRACE_IOAREA   DS    A\n\nWORK_HTTPMAIN_PORT  DS    H\n\nWORK_FLAGS          DS    X\n$WORK_ERROR         EQU   X'80'\n\nWORK_CONTROL        DS    CL80\nWORK_CONTROLL       EQU   *-WORK_CONTROL\n\n                    DS    X\nWORK_PRINT_AREA     DS    CL133\n\nWORK_LINE_COUNT     DS    PL3\nWORK_PAGE_COUNT     DS    PL3\n\n                    SUBPARM  TYPE=CSECT\nWORKL               EQU   *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IHAPSA     DSECT=YES,LIST=NO\n         IKJTCB     LIST=NO\n         IEFTIOT1\n         CVT        DSECT=YES\n         COPY       REGEQU\n         END        HTTPAPP2\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HTTPAPP3": {"ttr": 7179, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01%\\x001\\x01\\x08\\x16_\\x01\\x08\\x16\\x9f\\x13\\x06\\x02\\xfd\\x01\\xef\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.37", "flags": 0, "createdate": "2008-06-13T00:00:00", "modifydate": "2008-06-17T13:06:31", "lines": 765, "newlines": 495, "modlines": 0, "user": "RLRICE"}, "text": "          MACRO\n          LOG &T\n          LCLA &L\n&L        SETA K'&T-2\n          MVC  WORK_PRINT_BUFFER(&L),=C&T\n          BAL  R11,LOG0000\n          MEND\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*        Display VTOC                                                 *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPAPP3 CSECT\nHTTPAPP3 AMODE 31\nHTTPAPP3 RMODE 24\n         STM   R14,R12,12(R13)                SAVE REGISTERS\n         LR    R12,R15                        SET BASE REGISTER\n         USING HTTPAPP3,R12                   DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'HTTPAPP3'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n         USING S99RB,WORK_S99RB\n         USING JFCB,WORK_JFCB\n         LOAD  EP=HTTPSUB\n         ST    R0,WORK_HTTPSUB\n         ST    R0,HTTP_HTTPSUB\n         MVC   WORK_PRINTDCB(PRINTDCBL),PRINTDCBI\n         MVC   WORK_VTOCDCB(VTOCDCBL),VTOCDCBI\n         MVC   WORK_OPEN(OPENL),OPENI\n         MVC   WORK_CLOSE(CLOSEL),CLOSEI\n         MVC   WORK_EXLST(EXLSTL),EXLSTI\n         LA    R10,WORK_VTOCDCB\n         USING IHADCB,R10\n         OPEN  (WORK_PRINTDCB,OUTPUT),                                 +\n               MF=(E,WORK_OPEN)\n         MVI   WORK_PRINT_BUFFER-1,C' '\n         MVC   WORK_PRINT_BUFFER,WORK_PRINT_BUFFER-1\n         MVI   WORK_BUFFER-1,C' '\n         MVC   WORK_BUFFER,WORK_BUFFER-1\n         MVC   WORK_BUFFER(HEADL),HEADI\n         PUT   WORK_PRINTDCB,WORK_BUFFER\n         MVC   WORK_BUFFER,WORK_BUFFER-1\n         MVC   WORK_TEXT(TEXTL),TEXTI\n         LA    R1,WORK_S99RB\n         ST    R1,WORK_S99RBA\n         OI    WORK_S99RBA,X'80'             FLAG END-OF-LIST\n         LA    R1,WORK_DD_TEXT\n         ST    R1,WORK_TEXT_ADDR1\n         LA    R1,WORK_UNIT_TEXT\n         ST    R1,WORK_TEXT_ADDR2\n         LA    R1,WORK_VOLSER_TEXT\n         ST    R1,WORK_TEXT_ADDR3\n         LA    R1,WORK_DISP_TEXT\n         ST    R1,WORK_TEXT_ADDR4\n         OI    WORK_TEXT_ADDR4,X'80'         FLAG END-OF-LIST\n         MVI   S99RBLN,S99RBEND-S99RB\n         LA    R1,WORK_TEXT_ADDR1\n         ST    R1,S99TXTPP\n         MVC   WORK_CCW1(CCW1L),CCW1I\n         MVC   WORK_CCW2(CCW2L),CCW2I\n         MVC   WORK_CCW3(CCW3L),CCW3I\n         LA    R1,WORK_IOB\n         ST    R1,DCBIOBAD                   SET IOB ADDRESS\n         USING IOB,WORK_IOB\n         STCM  R10,7,IOBDCBPB                SET DCB ADDRESS IN IOB\n         LA    R1,WORK_ECB                   I/O ECB ADDRESS\n         STCM  R1,7,IOBECBPB                 SET ECB ADDRESS\n         MVI   IOBFLAG1,X'02'                SET FLAG BYTE 1\n         LA    R1,WORK_EXLST                 EXIT LIST\n         STCM  R1,7,DCBEXLSA                 RELOCATE EXIT LIST\n         LA    R1,WORK_JFCB                  JFCB\n         STCM  R1,7,WORK_EXLST+1             RELOCATE JFCB\n         LA    R1,IOBCC                      DISK ADDRESS\n         STCM  R1,7,WORK_CCW1+1              RELOCATE ADDRESS\n         LA    R1,WORK_CCW1                  SEARCH CCW ADDRESS\n         STCM  R1,7,WORK_CCW2+1              RELOCATE ADDRESS IN TIC\n         LA    R1,WORK_IO_AREA               I/O AREA ADDRESS\n         STCM  R1,7,WORK_CCW3+1              RELOCATE I/O AREA IN READ\n         LA    R1,WORK_CCW1\n         ST    R1,IOBSTART\n         LA    R1,WORK_ECB\n         STCM  R1,7,IOBECBPB\n         SR    R1,R1\n* ------------------------------------------------------------------- *\n*     Initialize TCP/IP environment                                   *\n* ------------------------------------------------------------------- *\n         MVI   HTTP_FUNCTION,$HTTP_INIT\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0010\n* ------------------------------------------------------------------- *\n*     Connect to MAIN                                                 *\n* ------------------------------------------------------------------- *\n         MVC   HTTP_PORT,OUR_PORT\n         MVI   HTTP_FUNCTION,$HTTP_CONNECT\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0020\n* ------------------------------------------------------------------- *\n*     Register the URL                                                *\n* ------------------------------------------------------------------- *\n         LA    R1,OUR_URL\n         ST    R1,HTTP_DATA\n         LA    R1,OUR_URLL\n         ST    R1,HTTP_LENGTH\n         MVI   HTTP_FUNCTION,$HTTP_DEFINE_PRFX\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0030\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Wait for the main address space to get a reference to our URL   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         LOG   'GET URL'\n         MVI   HTTP_FUNCTION,$HTTP_GET_URL    GET URL\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_CONSOLE\n         BE    EXIT0000\n         CLI   HTTP_RETURN_CODE,$HTTP_MAIN_SHUTDOWN\n         BE    EXIT0000                       YES\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     We have a URL                                                   *\n*                                                                     *\n*     The URL looks like \"HTTP://server/vtoc/volser\"                  *\n*                                                                     *\n*     Log the URL                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LOG   'HAVE A URL'\n         L     R1,HTTP_LENGTH                URL LENGTH\n         L     R2,HTTP_DATA                  DATA ADDRESS\n         CVD   R1,WORK_DWORD\n         MVC   WORK_BUFFER,WORK_BUFFER-1\n         MVC   WORK_BUFFER(MSG04L),MSG04     COPY MESSAGE\n         ED    WORK_BUFFER+(MSG04_LENGTH-MSG04)(L'MSG04_LENGTH),WORK_DW++\n               ORD+5\n         CH    R1,=Y(L'MSG04_TEXT)           TOO LONG?\n         BNH   MAIN0010                      NO\n         LH    R1,=Y(L'MSG04_TEXT)           LIMIT LENGTH\nMAIN0010 DS    0H\n         BCTR  R1,0\n         EX    R1,URL_MVC                    COPY THE URL\n         PUT   WORK_PRINTDCB,WORK_BUFFER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NI    WORK_FLAGS,255-$VOLSER        RESET FLAG\n         L     R1,HTTP_DATA                  URL'S ADDRESS\n         L     R2,HTTP_LENGTH                URL LENGTH\nMAIN0020 DS    0H\n         SR    R3,R3                         INITIALIZE FOR COUNTER\nMAIN0030 DS    0H\n         CLI   0(R1),C'/'                    DELIMITER?\n         BE    MAIN0040                      YES\n         CLI   0(R1),C' '                    END OF URL\n         BE    MAIN0050                      YES\n         CLI   0(R1),X'00'                   END OF URL?\n         BE    MAIN0050                      YES\n         LA    R1,1(,R1)                     NEXT\n         LA    R3,1(,R3)                     PLUS 1\n         BCT   R2,MAIN0030\n         B     ERR0050                       NO VOLSER\nMAIN0040 DS    0H\n         TM    WORK_FLAGS,$VOLSER            HAVE VOLSER?\n         BO    MAIN0060                      YES\n         OI    WORK_FLAGS,$VOLSER            SET FLAG\n         LA    R1,1(,R1)                     SKIP DELIMITER\n         MVC   WORK_VOLSER,0(R1)             COPY VOLSER\n         BCT   R2,MAIN0020                   UPDATE LENGTH REMAINING\n         B     ERR0050                       NO VOLSER\nMAIN0050 DS    0H\n         TM    WORK_FLAGS,$VOLSER            HAVE VOLSER?\n         BNO   ERR0050                       NO\nMAIN0060 DS    0H\n         CH    R3,H6                         CORRECT LENGTH?\n         BNE   ERR0060                       NO\n* ------------------------------------------------------------------- *\n*        Allocate the device                                          *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         LOG   'ALLOCATE DEVICE'\n         NI    WORK_TEXT_ADDR1,X'7F'         RESET END-OF-LIST\n         MVI   S99VERB,S99VRBAL              SET VERB\n         LA    R1,WORK_S99RBA                ADDRESS OF ADDRESS\n         SVC   99\n         LTR   R15,R15                       SUCCESSFUL?\n         BNZ   ERR0080                       NO\n* ------------------------------------------------------------------- *\n*        OPEN THE VTOC                                                *\n* ------------------------------------------------------------------- *\n         LOG   'RDJFCB'\n         RDJFCB ((R10)),                                               +\n               MF=(E,WORK_OPEN)\n         LTR   R15,R15                       SUCCESSFUL?\n         BNZ   ERR0090                       NO\n         MVI   JFCBDSNM,X'04'\n         MVC   JFCBDSNM+1(L'JFCBDSNM-1),JFCBDSNM\n         OI    JFCBTSDM,JFCNWRIT             NO WRITE-BACK\n         LOG   'OPEN VTOC'\n         OPEN  ((R10),INPUT),                OPEN THE VTOC             +\n               MF=(E,WORK_OPEN),                                       +\n               TYPE=J\n         ICM   R1,7,DCBDEBA\n         USING DEBBASIC,R1\n         LA    R1,DEBBASND\n         DROP  R1\n         USING DEBDASD,R1\n         MVC   WORK_DISK_ADDR,DEBSTRCC       COPY STARTING ADDRESS\n         MVI   WORK_RECORD,0                 FORCE RECORD 0\n* ------------------------------------------------------------------- *\n*        Send HTTP and HTML headers                                   *\n* ------------------------------------------------------------------- *\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER\n         LA    R0,WORK_BUFFER\n         ST    R0,HTTP_DATA\n         LA    R0,HTTP_HEADERL\n         ST    R0,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n\n         MVC   WORK_PRINT_BUFFER(HTTP_HEADERL),HTTP_HEADER\n         BAL   R11,LOG0000\n\n         MVC   WORK_BUFFER(HTML_HEADERL),HTML_HEADER\n         LA    R0,HTML_HEADERL\n         ST    R0,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n\n         MVC   WORK_PRINT_BUFFER(HTML_HEADERL),HTML_HEADER\n         BAL   R11,LOG0000\n\n         MVC   WORK_BUFFER(PRE_HEADERL),PRE_HEADER\n         LA    R0,PRE_HEADERL\n         ST    R0,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n\n         MVC   WORK_PRINT_BUFFER(PRE_HEADERL),PRE_HEADER\n         BAL   R11,LOG0000\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0080 DS    0H\n         LOG   'START I/O'\n         XC    WORK_ECB,WORK_ECB             CLEAR ECB\n         MVC   IOBCC(5),WORK_DISK_ADDR\n         EXCP  IOBSTDRD                      START THE I/O\n         WAIT  ECB=WORK_ECB                  WAIT FOR I/O\n         CLI   WORK_ECB,X'42'                END OF VTOC?\n         BE    MAIN0130                      YES\n         CLI   WORK_ECB,X'44'                RETRY?\n         BE    MAIN0080                      YES\n         CLI   WORK_ECB,X'7F'                SUCCESSFUL?\n         BNE   ERR0100                       NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0090 DS    0H\n         LOG   'PROCESS TRACK'\n         LA    R9,WORK_IO_AREA               I/O AREA\n         USING VTOC_RECORD,R9\n         LH    R8,WORK_DSCB_TRACK            DSCB'S PER TRACK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0100 DS    0H\n         LOG   'PROCESS DSCB'\n         CLI   DS1FMTID,C'1'                 FORMAT-1?\n         BE    FMT10000                      YES\n         CLI   DS1FMTID,C'4'                 FORMAT-4?\n         BE    FMT40000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0110 DS    0H\n         LOG   'NEXT DSCB'\n         LA    R9,VTOC_RECORDL(,R9)          NEXT DSCB\n         BCT   R8,MAIN0100                   LOOP\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LOG   'TRACK DONE'\n         CLC   WORK_DISK_ADDR,WORK_VTOC_HIGH END OF VTOC?\n         BNL   MAIN0130                      YES.. SEND TRAILER\n         SR    R1,R1                         CLEAR R1\n         ICM   R1,3,WORK_HEAD                CURRENT HEAD NUMBER\n         LA    R1,1(,R1)                     PLUS 1\n         CLM   R1,3,WORK_TRACKS_PER_CYL      AT MAX?\n         BE    MAIN0120                      YES\n         STCM  R1,3,WORK_HEAD                UPDATE HEAD\n         MVI   WORK_RECORD,0                 FORCE RECORD 0\n         LOG   'NEXT TRACK'\n         B     MAIN0080                      READ NEXT TRACK\nMAIN0120 DS    0H\n         ICM   R1,3,WORK_CYLINDER            CYLINDER NUMBER\n         LA    R1,1(,R1)                     PLUS 1\n         STCM  R1,3,WORK_CYLINDER            UPDATE CYLINDER\n         XC    WORK_HEAD,WORK_HEAD           RESET HEAD\n         MVI   WORK_RECORD,0                 FORCE RECORD 0\n         LOG   'NEXT CYLINDER'\n         B     MAIN0080                      READ 1ST TRACK ON NEXT CYL\n* ------------------------------------------------------------------- *\n*        Send trailer                                                 *\n* ------------------------------------------------------------------- *\nMAIN0130 DS    0H\n         LOG   'SEND TRAILER'\n         MVC   WORK_BUFFER(PRE_TRAILERL),PRE_TRAILER\n         LA    R0,PRE_TRAILERL\n         ST    R0,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15                       SEND TABLE TRAILER\n\n         MVC   WORK_PRINT_BUFFER(PRE_TRAILERL),PRE_TRAILER\n         BAL   R11,LOG0000\n\n         MVC   WORK_BUFFER(HTML_TRAILERL),HTML_TRAILER\n         LA    R0,HTML_TRAILERL\n         ST    R0,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15                       SEND HTML TRAILER\n\n         MVC   WORK_PRINT_BUFFER(HTML_TRAILERL),HTML_TRAILER\n         BAL   R11,LOG0000\n\n* ------------------------------------------------------------------- *\n*        Close connection                                             *\n* ------------------------------------------------------------------- *\n         LOG   'CLOSE CONNECTION'\n         MVI   HTTP_FUNCTION,$HTTP_CLOSE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15                       CLOSE THE CONNECTION\n* ------------------------------------------------------------------- *\n*        Close the VTOC DCB                                           *\n* ------------------------------------------------------------------- *\n         LOG   'CLOSE VTOC'\n         CLOSE ((R10))                       CLOSE DCB\n* ------------------------------------------------------------------- *\n*        Deallocate the device                                        *\n* ------------------------------------------------------------------- *\n         LOG   'DEALLOCATE DEVICE'\n         OI    WORK_TEXT_ADDR1,X'80'         FLAG END-OF-LIST\n         MVI   S99VERB,S99VRBUN              SET VERB\n         LA    R1,WORK_S99RBA\n         SVC   99                            DE-ALLOCATE\n         LTR   R15,R15                       SUCCESSFUL?\n         BNZ   ERR0080                       NO\n         B     MAIN0000                      WAIT FOR ANOTHER URL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMT10000 DS    0H\n         LOG   'FORMAT-1'\n         MVC   WORK_BUFFER(L'DS1DSNAM),DS1DSNAM\n         MVI   WORK_BUFFER+L'DS1DSNAM,$LF\n         LA    R0,WORK_BUFFER\n         ST    R0,HTTP_DATA\n         LA    R0,L'DS1DSNAM+1\n         ST    R0,HTTP_LENGTH\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15                       SEND DATA SET NAME\n\n         MVC   WORK_PRINT_BUFFER(L'DS1DSNAM),DS1DSNAM\n         BAL   R11,LOG0000\n\n         B     MAIN0110\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMT40000 DS    0H\n         LOG   'FORMAT-4'\n         MVC   WORK_DSCB_TRACK+0,0\n         MVC   WORK_DSCB_TRACK+1,DS4DEVDT    DSCB'S PER TRACK\n         MVC   WORK_TRACKS_PER_CYL,DS4DSTRK  TRACKS PER CYLINDER\n         LH    R8,WORK_DSCB_TRACK            DSCB'S PER TRACK\n         MVC   WORK_VTOC_LOW,DS4VTOCE+0      VTOC EXTENT LOW\n         MVC   WORK_VTOC_HIGH,DS4HPCHR       VTOC EXTENT HIGH\n         B     MAIN0110\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'1'\nERR0020  DS    0H\n         DC    H'2'\nERR0030  DS    0H\n         DC    H'3'\nERR0040  DS    0H\n         DC    H'4'\nERR0050  DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER\n         LA    R0,WORK_BUFFER\n         ST    R0,HTTP_DATA\n         LA    R0,HTTP_HEADERL\n         ST    R0,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         MVC   WORK_BUFFER(MSG01L),MSG01\n         LA    R0,MSG01L\n         ST    R0,HTTP_LENGTH\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         MVI   HTTP_FUNCTION,$HTTP_CLOSE\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         B     MAIN0000\nERR0060  DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER\n         LA    R0,WORK_BUFFER\n         ST    R0,HTTP_DATA\n         LA    R0,HTTP_HEADERL\n         ST    R0,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         MVC   WORK_BUFFER(MSG02L),MSG02\n         CVD   R3,WORK_DWORD\n         ED    WORK_BUFFER+(MSG02_LENGTH-MSG02)(L'MSG02_LENGTH),WORK_DW++\n               ORD+5\n         LA    R0,MSG02L\n         ST    R0,HTTP_LENGTH\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         MVI   HTTP_FUNCTION,$HTTP_CLOSE\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         B     MAIN0000\nERR0080  DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER\n         LA    R0,WORK_BUFFER\n         ST    R0,HTTP_DATA\n         LA    R0,HTTP_HEADERL\n         ST    R0,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         MVC   WORK_BUFFER(MSG05L),MSG05\n         MVC   WORK_BUFFER+(MSG05_VOLSER-MSG05)(L'MSG05_VOLSER),WORK_VO+\n               LSER\n         ST    R15,WORK_DWORD\n         UNPK  WORK_BUFFER+(MSG05_R15-MSG05)(5),WORK_DWORD+2(3)         +\n         TR    WORK_BUFFER+(MSG05_R15-MSG05)(4),HEXCHAR\n         MVI   WORK_BUFFER+(MSG05_R15-MSG05)+4,C' '\n         UNPK  WORK_BUFFER+(MSG05_ERROR-MSG05)(5),S99ERROR(3)           +\n         TR    WORK_BUFFER+(MSG05_ERROR-MSG05)(4),HEXCHAR\n         MVI   WORK_BUFFER+(MSG05_ERROR-MSG05)+4,C' '\n         UNPK  WORK_BUFFER+(MSG05_INFO-MSG05)(5),S99INFO(3)             +\n         TR    WORK_BUFFER+(MSG05_INFO-MSG05)(4),HEXCHAR\n         MVI   WORK_BUFFER+(MSG05_INFO-MSG05)+4,C' '\n         LA    R0,MSG05L\n         ST    R0,HTTP_LENGTH\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         MVI   HTTP_FUNCTION,$HTTP_CLOSE\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         B     MAIN0000\nERR0090  DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_WRITE\n         MVC   WORK_BUFFER(HTTP_HEADERL),HTTP_HEADER\n         LA    R0,WORK_BUFFER\n         ST    R0,HTTP_DATA\n         LA    R0,HTTP_HEADERL\n         ST    R0,HTTP_LENGTH\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         MVC   WORK_BUFFER(MSG03L),MSG03\n         ST    R15,WORK_DWORD\n         UNPK  WORK_BUFFER+(MSG03_R15-MSG03)(5),WORK_DWORD+2(3)         +\n         TR    WORK_BUFFER+(MSG03_R15-MSG03)(4),HEXCHAR\n         MVI   WORK_BUFFER+(MSG03_R15-MSG03)+4,C' '\n         LA    R0,MSG03L\n         ST    R0,HTTP_LENGTH\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         MVI   HTTP_FUNCTION,$HTTP_CLOSE\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         B     MAIN0000\nERR0100  DS    0H\n         DC    H'10'\nERR0110  DS    0H\n         DC    H'11'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        COMMENT OUT THE FIRST 'BR   R11' TO ACTIVATE LOGGING         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLOG0000  DS    0H\n         BR    R11\n         PUT   WORK_PRINTDCB,WORK_PRINT_BUFFER\n         MVC   WORK_PRINT_BUFFER,WORK_PRINT_BUFFER-1\n         BR    R11\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         MVI   HTTP_FUNCTION,$HTTP_CLEAN_UP\n         LA    R1,HTTP_PARMS\n         L     R15,HTTP_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0110\n         DELETE EP=HTTPSUB\n         CLOSE WORK_PRINTDCB,                                          +\n               MF=(E,WORK_OPEN)\n         LR    R1,R13                  COPY WORK AREA ADDRESS\n         L     R13,4(R13)              RESTORE CALLER'S R13\n         FREEMAIN RU,A=(1),LV=WORKL    FREE THE WORK AREA\n         LM    R14,R12,12(R13)         RESTORE REGS\n         SR    R15,R15                 SET RETURN CODE\n         BR    R14\n* ------------------------------------------------------------------- *\n\nURL_MVC      MVC  WORK_BUFFER+(MSG04_TEXT-MSG04)(0),0(R2)\n\n* ------------------------------------------------------------------- *\n\nPRINTDCBI DCB  DSORG=PS,                                               +\n               DDNAME=SYSPRINT,                                        +\n               RECFM=FB,                                               +\n               LRECL=132,                                              +\n               MACRF=PM\nPRINTDCBL EQU  *-PRINTDCBI\n\nVTOCDCBI  DCB  DSORG=PS,                                               +\n               DDNAME=APP3VTOC,                                        +\n               DEVD=DA,                                                +\n               EXLST=*,                                                +\n               MACRF=EXCP\nVTOCDCBL  EQU  *-VTOCDCBI\n\nOPENI    OPEN  (*,INPUT),                                              +\n               MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE *,                                                      +\n               MF=L\nCLOSEL   EQU   *-CLOSEI\nEXLSTI   DC    X'87',AL3(0)\nEXLSTL   EQU   *-EXLSTI\n\nCCW1I    CCW   $SEARCH,*,$CC,5\nCCW1L    EQU   *-CCW1I\nCCW2I    CCW   $TIC,CCW1I,0,8\nCCW2L    EQU   *-CCW2I\nCCW3I    CCW   $READ_MULTIPLE,*,$SILI,65535\nCCW3L    EQU   *-CCW3I\n\nOUR_PORT  DC   H'1001'\n\nOUR_URL   DC   C'VTOC'\nOUR_URLL  EQU  *-OUR_URL\n\nHEXCHAR   EQU  *-C'0'\n          DC   C'0123456789ABCDEF'\n\nH6        DC   H'6'\nLINE_FEED DC   AL1($LF)\n\nHEADI     DC   C'HTTPAPP3 '\nHEADL     EQU  *-HEADI\n\nTEXTI     DS   0C\n          DC   AL2(DALDDNAM),AL2(1),AL2(8)\n          DC   CL8'APP3VTOC'\n          DC   AL2(DALUNIT),AL2(1),AL2(8)\n          DC   CL8'SYSALLDA'\n          DC   AL2(DALVLSER),AL2(1),AL2(6)\n          DC   CL6'******'\n          DC   AL2(DALSTATS),AL2(1),AL2(1)\n          DC   X'08'\nTEXTL     EQU  *-TEXTI\n* ------------------------------------------------------------------- *\n\n\n* ------------------------------------------------------------------- *\nHTTP_HEADER    DS    0C\n               DC    C'HTTP/1.1 200 OK'\n               DC    AL1($LF)\n               DC    C'Content-Type: text/html'\n               DC    AL1($LF)\n               DC    AL1($LF)\nHTTP_HEADERL   EQU   *-HTTP_HEADER\nHTML_HEADER    DS    0C\n               DC    C'<HTML>'\n               DC    C'<BODY>'\n               DC    AL1($LF)\nHTML_HEADERL   EQU   *-HTML_HEADER\nPRE_HEADER     DS    0C\n               DC    C'<PRE><CENTER>'\nPRE_HEADERL    EQU   *-PRE_HEADER\nHTML_TRAILER   DS    0C\n               DC    C'</BODY>'\n               DC    C'</HTML>'\nHTML_TRAILERL  EQU   *-HTML_TRAILER\nPRE_TRAILER    DS    0C\n               DC    C'</CENTER></PRE>'\nPRE_TRAILERL EQU     *-PRE_TRAILER\n\nMSG01          DS    0C\n               DC    C'VOLSER is required'\nMSG01L         EQU   *-MSG01\n\nMSG02          DS    0C\n               DC    C'HTTPAPP302E VOLSER must be 6 characters, not '\nMSG02_LENGTH   DC    X'402020202120'\nMSG02L         EQU   *-MSG02\nMSG03          DS    0C\n               DC    C'VTOC OPEN failed, R15='\nMSG03_R15      DC    C'    '\n               DC    C' '\nMSG03L         EQU   *-MSG04\n\nMSG04          DC    C'URL length '\nMSG04_LENGTH   DC    X'402020202120'\n               DC    C'  Text-'\nMSG04_TEXT     DC    CL100' '\nMSG04L         EQU   *-MSG04\n\nMSG05          DC    C'HTTPAPP305I '\n               DC    C'Allocate failed.  VOLSER='\nMSG05_VOLSER   DC    CL6' '\n               DC    C'  R15='\nMSG05_R15      DC    CL4' '\n               DC    C'  ERROR='\nMSG05_ERROR    DC    CL4' '\n               DC    C'  INFO='\nMSG05_INFO     DC    CL4' '\n               DC    C' '\nMSG05L         EQU   *-MSG05\n\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    DS    18F\nWORK_DWORD          DS    D\n\nWORK_HTTPSUB        DS    A\n\nWORK_PRINTDCB       DS    0F,(PRINTDCBL)X\nWORK_VTOCDCB        DS    0F,(VTOCDCBL)X\nWORK_OPEN           DS    0F,(OPENL)X\nWORK_CLOSE          DS    0F,(CLOSEL)X\nWORK_EXLST          DS    0F,(EXLSTL)X\nWORK_JFCB           DS    0F,(JFCBL)X\nWORK_IOB            DS    0F,(IOBL)X\nWORK_ECB            DS    0F,XL4\nWORK_S99RBA         DS    A\nWORK_S99RB          DS    0F,(S99RBEND-S99RB)X\n\nWORK_TEXT_ADDR1     DS    A\nWORK_TEXT_ADDR2     DS    A\nWORK_TEXT_ADDR3     DS    A\nWORK_TEXT_ADDR4     DS    A\n\nWORK_CCW1           DS    0F,(CCW1L)X\nWORK_CCW2           DS    0F,(CCW2L)X\nWORK_CCW3           DS    0F,(CCW3L)X\n\nWORK_TRACKS_PER_CYL DS    XL2\nWORK_DSCB_TRACK     DS    XL2\nWORK_VTOC_LOW       DS    XL4\nWORK_VTOC_HIGH      DS    XL4\n\nWORK_DISK_ADDR      DS    0CL5\nWORK_CYLINDER       DS    XL2\nWORK_HEAD           DS    XL2\nWORK_RECORD         DS    X\n\nWORK_FLAGS          DS    X\n$VOLSER             EQU   X'80'\n\n                    DS    C\nWORK_BUFFER         DS    CL256\n\n                    DS    C\nWORK_PRINT_BUFFER   DS    CL256\n\nWORK_TEXT           DS    0C\nWORK_DD_TEXT        DS    AL2,AL2,AL2\n                    DS    CL8\nWORK_UNIT_TEXT      DS    AL2,AL2,AL2\n                    DS    CL8\nWORK_VOLSER_TEXT    DS    AL2,AL2,AL2\nWORK_VOLSER         DS    CL6\nWORK_DISP_TEXT      DS    AL2,AL2,AL2\n                    DS    X\n\n                    SUBPARM TYPE=CSECT\n\nWORK_IO_AREA        DS    65536X\nWORKL               EQU   *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nVTOC_RECORD         DSECT\nVTOC_COUNT          DS    CL8\n                    IECSDSL1 1\n                    ORG   DS1FMTID\n                    IECSDSL1 4\nVTOC_RECORDL        EQU   *-VTOC_RECORD\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                DCBD    DSORG=PS\n                IEZDEB\n                IEZIOB  DSECT=YES\nIOBL            EQU     *-IOB\nJFCB            DSECT\n                IEFJFCBN\nJFCBL           EQU     *-JFCB\n                IEFZB4D0\n                IEFZB4D2\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$SEARCH         EQU  X'31'\n$TIC            EQU  X'08'\n$READ_MULTIPLE  EQU  X'5E'\n$CC             EQU  X'40'\n$SILI           EQU  X'20'\n\n         COPY REGEQU\n$LF      EQU  X'0A'\n         END  HTTPAPP3\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HTTPCOMM": {"ttr": 2307, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00P\\x01\\x04$_\\x01\\x07\\x17\\x7f\\x08\\x08\\x00\\x05\\x00\\x01\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2007-06-26T08:08:50", "lines": 5, "newlines": 1, "modlines": 0, "user": "RLRICE"}, "text": "         USING   HTTPCOMM,R11\n         COMMON  MAIN,TYPE=CSECT\n         STDSAVE DSECT=YES\n         COPY    REGEQU\n         END     HTTPCOMM\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HTTPCONS": {"ttr": 2309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16\\x00\\x18\\x01\\x04$o\\x01\\x08\\x16?\\x10T\\x01i\\x01S\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.22", "flags": 0, "createdate": "2004-09-02T00:00:00", "modifydate": "2008-06-11T10:54:18", "lines": 361, "newlines": 339, "modlines": 0, "user": "RLRICE"}, "text": "         TITLE 'CONSOLE COMMUNICATION'\n         MACRO\n         CMD   &TEXT,&ADDR\n         LCLA  &LEN\n         AIF   (T'&TEXT EQ 'O').ERR0010\n         AIF   (T'&ADDR EQ 'O').ERR0020\n&LEN     SETA  K'&TEXT\nCMDS&SYSNDX DS  0C\n         DC    AL2(CMDE&SYSNDX-CMDS&SYSNDX)\n         DC    AL2(&LEN)\n         DC    &ADDR\n         DC    C'&TEXT'\nCMDE&SYSNDX DS  0C\n         MEXIT\n.ERR0010 ANOP\n         MNOTE 12,'COMMAND TEXT IS REQUIRED'\n         MEXIT\n.ERR0020 ANOP\n         MNOTE 12,'COMMAND PROCESSOR ADDRESS IS REQUIRED'\n         MEND\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPCONS                                              *\n*                                                                     *\n*  Console subtask                                                    *\n*                                                                     *\n*                                                                     *\n*  This module is ATTACHed as a subtask of the main task HTTPMAIN     *\n*  by HTTPINIT during initialization of the main address space.       *\n*                                                                     *\n*  As of now there are only two functions.                            *\n*                                                                     *\n*   1) allow for SNAP dumps                                           *\n*                                                                     *\n*   2) allow the main address space to be shutdown via a STOP (P)     *\n*      console command.                                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPCONS CSECT\nHTTPCONS AMODE 31\nHTTPCONS RMODE ANY\n         USING HTTPCONS,R12                   DEFINE BASE\n         USING HTTPCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPCONS'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R11,0(R1)                      COPY COMM AREA BASE\n         ST    R12,COMM_HTTPCONS_ADDRESS\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         ST    R13,COMM_CONSOLE_WORK_AREA\n         USING WORKAREA,R13                   DEFINE BASE\n         ITRACE ID=INIT\n         MVC   WORK_ID,MODID                  IDENTIFY WORK AREA OWNER\n         MVC   PRT_EYE,PRT_ID                 IDENTIFY CONTROL BLOCK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\n         GETMAIN RU,                          STORAGE FOR EXTRACT      +\n               LV=EXTRACTL+4,                 .. LENGTH                +\n               LOC=BELOW                      .. 24-BIT AREA\n         LR    R2,R1                          SAVE THE ADDRESS\n         LA    R3,EXTRACTL(R2)                RETURNED DATA ADDRESS\n         MVC   0(EXTRACTL,R2),EXTRACTI\n         EXTRACT (R3),                        ISSUE EXTRACT            +\n               FIELDS=COMM,                   .. RETURN COMLIST        +\n               MF=(E,(R2))                    ..\n         L     R9,0(R3)                       COMM LIST ADDRESS\n         FREEMAIN RU,                         FREE EXTRACT WORK AREA   +\n               A=(R2),                                                 +\n               LV=EXTRACTL+4\n         ITRACE ID=COMLIST,                   TRACE COMLIST ADDRESS    +\n               RDATA1=R9\n         ST    R9,WORK_COMM                   SAVE COMLIST ADDRESS\n         USING COMLIST,R9                     DEFINE COMLIST BASE\n         MVC   WORK_CECB,COMECBPT             SAVE ECB ADDRESS\n         ITRACE ID=SETCTR                     SETTING CIB LIMIT\n         QEDIT ORIGIN=COMCIBPT,               SET CIB LIMIT            +\n               CIBCTR=2                       .. ALLOW 2 CIBS\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0020                        NO\n         LA    R1,COMM_CONSOLE_WORK_ECB\n         ST    R1,WORK_WORK_ECB               SET ADDRESS IN ECB LIST\n         OI    WORK_WORK_ECB,X'80'            FLAG END-OF-LIST\n         MVC   WORK_WTO(WTOL),WTOI\n         LA    R4,WORK_WTO\n         USING WPL,R4                         DEFINE WTO PARM LIST BASE\nCONS0000 DS    0H\n         LA    R2,WORK_ECB_LIST               ECB LIST ADDRESS\n         ITRACE ID=WAIT,                                               +\n               RDATA1=(R2)                    .. WAIT LIST ADDRESS\n         TM    COMM_EOJ,$EOJ_PHASE_3          PHASE 3 OF SHUTDOWN?\n         BO    EXIT0000                       YES\n         WAIT  ECBLIST=(R2)                   WAIT\nCONS0010 DS    0H\n         ICM   R8,15,COMCIBPT                 FIRST CIB\n         BZ    CONS0000                       NO CIB'S\n         USING CIB,R8                         DEFINE CIB BASE\nCONS0020 DS    0H\n         ITRACE ID=CIB,                       TRACE EACH CIB           +\n               RDATA1=R8,                     .. CIB ADDRESS           +\n               DATA2=(CIBVERB,1)              .. VERB FROM CIB\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         SR    R5,R5                          MAXIMUM GISTER\n         ICM   R5,3,CIBDATLN                  DATA LENGTH\n         CH    R5,H50                         TOO LONG?\n         BNH   CONS0030                       NO\n         LH    R5,H50                         LIMIT LENGTH\nCONS0030 DS    0H\n         LR    R15,R5                         COPY LENGTH\n         BCTR  R15,0                          ADJUST FOR EXECUTE\n         EX    R15,MVC01                      MOVE TO I/O AREA\n         CLI   CIBVERB,CIBSTOP                STOP COMMAND?\n         BNE   CONS0040                       NO\n         MVC   PRT_MESSAGE_ID+(MSG07TXT-MSG07)(L'STOP),STOP\nCONS0040 DS    0H\n         BAL   R10,PRT0000                    PRINT THE MESSAGE\n         ITRACE ID=CIBDATA,                                            +\n               DATA1=(MSG07TXT,8)\n         CLI   CIBVERB,CIBSTART               START COMMAND?\n         BE    CONS0110                       YES\n         LH    R15,CIBXOFF\n         AR    R15,R8\n         USING CIBX,R15\n         MVC   WORK_CONSOLE,CIBXCNNM          COPY CONSOLE NAME\n         CLI   CIBVERB,CIBSTOP                STOP COMMAND?\n         BE    SHUT0000                       YES\n         CLI   CIBVERB,CIBMODFY               MODIFY?\n         BNE   CONS0110                       NO\n         LA    R1,CIBDATA                     COMMAND\n         SR    R2,R2                          LENGTH\nCONS0050 DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BE    CONS0060                       YES\n         CLI   0(R1),C','                     COMMA?\n         BE    CONS0060                       YES\n         LA    R1,1(,R1)                      PLUS 1\n         LA    R2,1(,R2)                      PLUS 1\n         BCT   R5,CONS0050                    LOOP\n         ICM   R2,3,CIBDATLN                  RESTORE TO FULL LENGTH\nCONS0060 DS    0H\n         LA    R6,COMMANDS_TABLE              OUR LIST OF COMMANDS\n         USING COMMAND_DSECT,R6               DEFINE BASE\n         SR    R1,R1                          CLEAR REGISTER\nCONS0070 DS    0H\n         CLI   0(R6),X'FF'                    END OF TABLE?\n         BE    CONS0090                       YES\n         ICM   R1,3,COMMAND_TEXT_LENGTH\n         CLR   R2,R1                          LENGTH CORRECT?\n         BNE   CONS0080                       NO\n         BCTR  R1,0                           MINUS 1 FOR EXECUTE\n         EX    R1,CMDCLC                      COMMAND FOUND?\n         BE    CONS0100                       YES\nCONS0080 DS    0H\n         ICM   R1,3,COMMAND_LENGTH            LENGTH OF THIS COMMAND\n         AR    R6,R1                          NEXT COMMAND\n         B     CONS0070                       LOOP\nCMDCLC   CLC   COMMAND_TEXT,CIBDATA           COMMAND LOCATED?\nCONS0090 DS    0H\n         MVC   WPLTXT(MSG01L),MSG01           MESSAGE TO WTO\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     CONS0110                       RELEASE THIS CIB\nCONS0100 DS    0H\n         LA    R1,CIBDATA                     DATA ADDRESS\n         SR    R2,R2                          CLEAR REGISTER\n         ICM   R2,3,CIBDATLN                  COMMAND LENGTH\n         ICM   R15,15,COMMAND_ADDRESS         COMMAND PROCESSOR ADDRESS\n         BALR  R14,R15                        PROCESS THE COMMAND\nCONS0110 DS    0H\n         L     R2,CIBNEXT                     NEXT CIB\n         QEDIT ORIGIN=COMCIBPT,               FREE THIS CIB            +\n               BLOCK=(R8)\n         LTR   R15,R15                        QEDIT SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         LTR   R8,R2                          NEXT CIB'S ADDRESS\n         BNZ   CONS0020                       LOOP\n         B     CONS0000                       WAIT FOR ANOTHER EVENT\n* ------------------------------------------------------------------- *\n*   PERFORM A SNAP DUMP                                               *\n* ------------------------------------------------------------------- *\nSNAP0000 DS    0H\n         ITRACE ID=SNAP\n         LOAD  EP=HTTPSNAP\n         LR    R15,R0\n         BALR  R14,R15                        LINK TO HTTPSNAP\n         DELETE EP=HTTPSNAP\n         ITRACE ID=SNAPDONE\n         B     CONS0110\n* ------------------------------------------------------------------- *\n*   Shutdown the STC                                                  *\n* ------------------------------------------------------------------- *\nSHUT0000 DS    0H\n         ITRACE ID=STOP\n         TM    COMM_EOJ,$EOJ_PHASE_1          EOJ ALREADY IN PROGRESS?\n         BO    SHUT0010                       YES\n         POST  COMM_TERMINATION_ECB           POST THE TERMINATION ECB\n         MVC   WPLTXT(MSG04L),MSG04           COPY WTO\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     CONS0110                       RELEASE THIS CIB\nSHUT0010 DS    0H\n         MVC   WPLTXT(MSG05L),MSG05           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     CONS0110                       RELEASE THIS CIB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORK_WTO),               ISSUE WTO                +\n               CONSNAME=WORK_CONSOLE          .. TO SAME CONSOLE\n         MVC   WORK_WTO(WTOL),WTOI\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRT_CC,C' '                    SINGLE SPACE\n         MVC   PRT_MESSAGE_ID(L'PRT_MESSAGE_ID+L'PRT_DATA),PRT_CC\nPRT0010  DS    0H\n         L     R2,COMM_PRINT_QUEUE            FIRST BLOCK ON QUEUE\n         ST    R2,PRT_NEXT-PRTBLOK(R1)                        '\n         CS    R2,R1,COMM_PRINT_QUEUE         ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Error routines                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=CIBDELF,                   DELETE CIB  FAILED       +\n               RDATA1=R15                     .. RETURN CODE\n         ABEND 1,DUMP,,USER\nERR0020  DS    0H\n         ITRACE ID=CIBCTRF,                   SET CIB LIMIT) FAILED    +\n               RDATA1=R15                     .. RETURN CODE\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKL\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n*\n* ------------------------------------------------------------------- *\n*\nMVC01    MVC   PRT_MESSAGE_ID+(MSG07TXT-MSG07)(0),CIBDATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXTRACTI EXTRACT *,                  EXTRACT LIST FORM                 +\n               FIELDS=COMM,          .. COMLIST ADDRESS PLEASE         +\n               MF=L\nEXTRACTL EQU   *-EXTRACTI\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\n* -------------------------------------------------------------------\nH50      DC    H'50'\nPRT_ID   DC    CL8'PRTBLOK'\nSTOP     DC    C'STOP'\nMSG01    DS    0C\n         DC    CL15'HTTPCONS01E'\n         DC    C'* Invalid command'\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    CL15'HTTPCONS02I'\n         DC    C'taking snap dump'\nMSG02L   EQU   *-MSG02\nMSG04    DS    0C\n         DC    CL15'HTTPCONS04I'\n         DC    C'HTTP main shutting down'\nMSG04L   EQU   *-MSG04\nMSG05    DS    0C\n         DC    CL15'HTTPCONS05E'\n         DC    C'* Shutdown already in progress'\nMSG05L   EQU   *-MSG05\nMSG07    DS    0C\n         DC    CL15'HTTPCONS07I'\n         DC    C'Command from console: '\nMSG07TXT DC    CL50' '\nMSG07L   EQU   *-MSG07\nHEXZERO  DC    XL8'0000000000000000'\nHEXCHAR  DC    C'0123456789ABCDEF'\n* ------------------------------------------------------------------- *\n*              COMMANDS TABLE                                         *\n* ------------------------------------------------------------------- *\nCOMMANDS_TABLE DS 0C\n         CMD   QUIT,AL4(SHUT0000)     STOP (SHUTDOWN THE HTTP MAIN)\n         CMD   SNAP,AL4(SNAP0000)     SNAP SHOT\n         CMD   STOP,AL4(SHUT0000)     STOP (SHUTDOWN THE HTTP MAIN)\n         DC    X'FF'\n* ------------------------------------------------------------------- *\n*              WORK AREA                                              *\n* ------------------------------------------------------------------- *\nWORKAREA        DSECT\n                STDSAVE  DSECT=NO\nWORK_ID         DS   CL8\nWORK_DWORD      DS   D\nWORK_COMM       DS   F                ADDRESS OF COMM LIST\nWORK_CONSOLE    DS   CL8              CONSOLE NAME\n*\nWORK_ECB_LIST   DS   0A\nWORK_CECB       DS   A                ADDRESS OF ECB POSTED BY MVS\nWORK_WORK_ECB   DS   A                ADDRESS IF ECB POSTED BY MAIN\n*\nWORK_WTO        DS   0F,(WTOL)X\nWORK_WORK       DS   CL10\n                PRTBLOK  DSECT=NO\nWORKL           EQU  *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCOMMAND_DSECT       DSECT\nCOMMAND_LENGTH      DS   AL2          LENGTH OF THIS ENTRY\nCOMMAND_TEXT_LENGTH DS   AL2          COMMAND TEXT LENGTH\nCOMMAND_ADDRESS     DS   AL4          COMMAND PROCESSOR ENTRY POINT\nCOMMAND_TEXT        DS   C            COMMAND TEXT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON  MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZCOM\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCIB      DSECT\n         IEZCIB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         IEZWPL DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  HTTPCONS\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPDAIR": {"ttr": 2318, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00I\\x01\\x043_\\x01\\x07%?\\x164\\x01$\\x01\"\\x00\\x8c\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2004-11-30T00:00:00", "modifydate": "2007-09-10T16:34:49", "lines": 292, "newlines": 290, "modlines": 140, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPDAIR                                              *\n*                                                                     *\n*   Interface with MVS's dynamic allocation interface routine (DAIR)  *\n*   to allocate or de-allocate data sets.                             *\n*                                                                     *\n*   The interface block is DAIRBLOK.                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPDAIR CSECT\nHTTPDAIR AMODE 31\nHTTPDAIR RMODE ANY\n         USING HTTPDAIR,R12                   DEFINE BASE\n         STM   R14,R12,12(R13)                CHAIN REGISTERS\n         LR    R12,R15                        COPY ENTRY POINT ADDRESS\n         B     DAIR0000\n         DC    CL8'HTTPDAIR'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nDAIR0000 DS    0H\n         LR    R10,R1                         COPY PARM BLOCK ADDRESS\n         USING DAIRBLOK,R10                   DEFINE BASE\n         GETMAIN RU,                          STORAGE FOR WORK AREA    +\n               LV=WKL,                        .. ACQUIRE WORK AREA     +\n               LOC=ANY                        .. FROM ANY AREA\n         ST    R13,4(R1)                      CHAIN CALLER'S AREA\n         ST    R1,8(R13)                      CHAIN OUR AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WK,R13                         DEFINE BASE\n         USING S99RB,R2                       DEFINE BASE\n         LA    R2,WKRB                        REQUEST BLOCK'S ADDRESS\n         ST    R2,WKRBA                       SET POINTER\n         OI    WKRBA,X'80'                    SET END OF LIST\n         MVC   WKDDP(DAIRPL),DAIRPI           INITIALIZE PARAMETERS\n         XC    WKRB(S99RBEND-S99RB),WKRB\n         CLI   DAIRCMD,$DAIRALE               EXISTING DATA SET?\n         BE    DAIR0010                       YES\n         CLI   DAIRCMD,$DAIRALN               NEW DATA SET?\n         BE    DAIR0010                       YES\n         CLI   DAIRCMD,$DAIRALS               SNAP (SPUN SYSOUT)\n         BE    DAIR0050                       YES\n         CLI   DAIRCMD,$DAIRREL               RELEASE?\n         BE    DAIR0060                       YES\n         CLI   DAIRCMD,$DAIRDEL               DELETE?\n         BE    DAIR0070                       YES\n         ABEND 1,DUMP,,USER                   SORRY\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Allocate DASD data sets                                         *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR0010 DS    0H\n         MVI   S99VERB,S99VRBAL               SET VERB\n         LA    R15,WKDDP                      DDNAME PARAMETER\n         ST    R15,WKTXTP1                    SET PARAMETER 1 ADDRESS\n         MVC   WKDD,DAIRDDN                   SET DD NAME\n         LA    R15,WKDSNP                     DATASET NAME PARAMETER\n         ST    R15,WKTXTP2                    SET PARAMETER 2 ADDRESS\n         MVC   WKDSN,DAIRDSN                  COPY DATA SET NAME\n         LA    R15,WKDSPIP                    INITIAL DISPOSITION\n         ST    R15,WKTXTP3                    SET PARAMETER 3 ADDRESS\n         MVI   WKDSPI,X'08'                   SET DISP TO 'SHR'\n         CLI   DAIRCMD,$DAIRALN               ALLOCATE NEW?\n         BE    DAIR0030                       YES\n         CLC   DAIRMEM,BLANKS                 MEMBER NAME?\n         BE    DAIR0020                       NO\n         LA    R15,WKMEMP                     MEMBER NAME PARAMETERS\n         ST    R15,WKTXTP4                    SET PARAMETER 4 ADDRESS\n         MVC   WKMEM,DAIRMEM                  COPY MEMBER NAME\n         OI    WKTXTP4,X'80'                  FLAG END-OF-LIST\n         B     DAIR0040\nDAIR0020 DS    0H\n         OI    WKTXTP3,X'80'                  FLAG END-OF-LIST\n         B     DAIR0040\nDAIR0030 DS    0H\n         MVI   WKDSPI,X'04'                   SET INITIAL DISP 'NEW'\n         LA    R15,WKDSPNP                    NORMAL DISPOSITION\n         ST    R15,WKTXTP4                    SET PARAMETER 4 ADDRESS\n         MVI   WKDSPN,X'02'                   SET NORMAL DISP 'CATLG'\n         LA    R15,WKUNITP                    UNIT PARAMETERS\n         ST    R15,WKTXTP5                    SET PARAMETER 5 ADDRESS\n         MVC   WKUNIT,DAIRUNIT                SET UNIT NAME\n         LA    R15,WKBLKNP                    BLOCK LENGTH PARAMETER\n         ST    R15,WKTXTP6                    SET PARAMETER 6 ADDRESS\n         MVC   WKBLKN,DAIRBLKN+1              SET BLOCK LENGTH\n         LA    R15,WKPRIP                     PRIMARY SPACE PARAMETER\n         ST    R15,WKTXTP7                    SET PARAMETER 7 ADDRESS\n         MVC   WKPRI,DAIRPRI+1                SET PRIMARY QUANTITY\n         LA    R15,WKSECP                     SECONDARY SPACE PARAMETER\n         ST    R15,WKTXTP8                    SET PARAMETER 8 ADDRESS\n         MVC   WKSEC,DAIRSEC+1                SET SECONDARY QUANTITY\n         LA    R15,WKRELP                     RELEASE UNUSED SPACE\n         ST    R15,WKTXTP9                    SET PARAMETER 9 ADDRESS\n         OI    WKTXTP9,X'80'                  FLAG END OF LIST\nDAIR0040 DS    0H\n         BAL   R8,DAIR0080                    GO ISSUE SVC 99\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Allocate SNAP (spun SYSOUT)                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR0050 DS    0H\n         MVI   S99VERB,S99VRBAL               SET VERB\n         MVC   WKDD,DAIRDDN                   SET DDNAME\n         MVI   WKPRTC,C'Z'                    SET SYSOUT CLASS\n         LA    R1,WKDDP                       DDNAME PARAMETERS\n         ST    R1,WKTXTP1                     SET PARAMETER 1 ADDRESS\n         LA    R1,WKPRTP                      SYSOUT PARAMETERS\n         ST    R1,WKTXTP2                     SET PARAMETER 2 ADDRESS\n         LA    R1,WKFREEP                     FREE ON CLOSE PARAMETERS\n         ST    R1,WKTXTP3                     SET PARAMETER 3 ADDRESS\n         OI    WKTXTP3,X'80'                  SET 'END-OF-LIST'\n         BAL   R8,DAIR0080                    ALLOCATE SNAP\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Release (un-allocate)                                           *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR0060 DS    0H\n         LA    R2,WKRB                        REQUEST BLOCK'S ADDRESS\n         MVC   WKDD,DAIRDDN                   SET DDNAME TO RELEASE\n         MVI   S99VERB,S99VRBUN               SET VERB\n         LA    R15,WKDDP                      DDNAME PARAMETER\n         ST    R15,WKTXTP1                    SET PARAMETER 1 ADDRESS\n         OI    WKTXTP1,X'80'                  FLAG END OF LIST\n         BAL   R8,DAIR0080                    GO ISSUE SVC 99\n         B     EXIT0000                       EXIT\n*---------------------------------------------------------------------*\n*                                                                     *\n*    Delete a dataset.  This is a two step process.                   *\n*    The dataset is allocated with 'DISP=(OLD,DELETE)'                *\n*    then unallocated.                                                *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR0070 DS    0H\n         MVC   WKDD,DAIRDDN                   SET DD DDNAME\n         MVC   WKDSN,DAIRDSN                  SET DATA SET NAME\n         MVI   WKDSPI,X'01'                   SET DISPOSITION 'OLD'\n         MVI   WKDSPN,X'04'                   SET DISPOSITION 'DELETE'\n         XC    WKRB(S99RBEND-S99RB),WKRB\n         MVI   S99VERB,S99VRBAL               SET VERB\n         LA    R15,WKDDP                      DDNAME PARAMETER\n         ST    R15,WKTXTP1                    SET PARAMETER 1 ADDRESS\n         LA    R15,WKDSNP                     DSN PARAMETER\n         ST    R15,WKTXTP2                    SET PARAMETER 2 ADDRESS\n         LA    R15,WKDSPIP                    INITIAL DISP PARAMETER\n         ST    R15,WKTXTP3                    SET PARAMETER 3 ADDRESS\n         LA    R15,WKDSPNP                    NORMAL DISP PARAMETER\n         ST    R15,WKTXTP4                    SET PARAMETER 4 ADDRESS\n         OI    WKTXTP4,X'80'                  FLAG END OF LIST\n         BAL   R8,DAIR0080                    GO ISSUE SVC 99\n         LTR   R15,R15                        ALLOCATE SUCCESSFUL?\n         BNZ   EXIT0000                       NO.  PROCESS NEXT REQUEST\n         MVI   S99VERB,S99VRBUN               SET VERB\n         LA    R15,WKDDP                      DDNAME PARAMETER\n         ST    R15,WKTXTP1                    SET PARAMETER 1 ADDRESS\n         OI    WKTXTP1,X'80'                  FLAG END OF LIST\n         BAL   R8,DAIR0080                    ISSUE SVC 99\n         B     EXIT0000                       PROCESS NEXT REQUEST\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Issue the SVC                                                   *\n*                                                                     *\n*---------------------------------------------------------------------*\nDAIR0080 DS    0H\n         MVI   S99RBLN,S99RBEND-S99RB\n         LA    R1,WKTXTP1                     FIRST TEXT UNIT POINTER\n         ST    R1,S99TXTPP                    SET TEXT ADDRESS\n         LA    R1,WKRBA                       REQUEST BLOCK POINTER\n         SVC   99                             ISSUE SVC\n         STCM  R15,3,DAIRR15                  PASS RETURN CODE\n         MVC   DAIRERR,S99ERROR               PASS ERROR CODE\n         MVC   DAIRINFO,S99INFO               PASS INFO CODE\n         BR    R8                             RETURN\n* ------------------------------------------------------------------- *\n*             EXIT                                                    *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WKL\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------ *\n*        CONSTANTS                                                   *\n* ------------------------------------------------------------------ *\nBLANKS   DC    CL8' '\nDAIRPI   DC    AL2(DALDDNAM)         DDNAME PARMS\n         DC    AL2(1)\n         DC    AL2(8)\n         DC    CL8' '                DDNAME\n         DC    AL2(DALDSNAM)         DATASET NAME PARMS\n         DC    AL2(1)\n         DC    AL2(44)\n         DC    CL44' '               DATASET NAME\n         DC    AL2(DALMEMBR)         MEMBER NAME PARMS\n         DC    AL2(1)\n         DC    AL2(8)\n         DC    CL8' '                DATASET NAME\n         DC    AL2(DALSTATS)         INITIAL DISPOSITION PARMS\n         DC    AL2(1)\n         DC    AL2(1)\n         DC    X'00'                 INITIAL DISPOSITION\n         DC    AL2(DALNDISP)         NORMAL DISPOSITION PARMS\n         DC    AL2(1)\n         DC    AL2(1)\n         DC    X'00'                 NORMAL DISPOSITION\n         DC    AL2(DALUNIT)          UNIT PARAMETERS\n         DC    AL2(1)\n         DC    AL2(8)\n         DC    CL8'        '         UNIT NAME\n         DC    AL2(DALBLKLN)         ALLOCATION AVERAGE BLOCK LENGTH\n         DC    AL2(1)\n         DC    AL2(3)\n         DC    XL3'00'               BLOCK LENGTH\n         DC    AL2(DALPRIME)         PRIMARY SPACE PARAMETERS\n         DC    AL2(1)\n         DC    AL2(3)\n         DC    XL3'0'                PRIMARY SPACE (IN TRACKS)\n         DC    AL2(DALSECND)         SECONDARY SPACE PARAMETERS\n         DC    AL2(1)\n         DC    AL2(3)\n         DC    XL3'0'                SECONDARY SPACE (IN TRACKS)\n         DC    AL2(DALRLSE)          RELEASE UNUSED SPACE\n         DC    AL2(0)\n         DC    AL2(DALSYSOU)         ALLOCATE SYSOUT\n         DC    AL2(1)\n         DC    AL2(1)\n         DC    C'O'                  SYSOUT CLASS\n         DC    AL2(DALCLOSE)         SAME AS FREE=CLOSE ON A DD STMT\n         DC    AL2(0)\nDAIRPL   EQU   *-DAIRPI\n         LTORG\n* ------------------------------------------------------------------ *\n*        WORK AREAS                                                  *\n* ------------------------------------------------------------------ *\nWK       DSECT\n         STDSAVE DSECT=NO\nWKDWORD  DS    D\nWKRBA    DS    A                     REQUEST BLOCK'S ADDRESS\nWKTXTP1  DS    A                     TEXT UNIT 1'S ADDRESS\nWKTXTP2  DS    A                     TEXT UNIT 2'S ADDRESS\nWKTXTP3  DS    A                     TEXT UNIT 3'S ADDRESS\nWKTXTP4  DS    A                     TEXT UNIT 4'S ADDRESS\nWKTXTP5  DS    A                     TEXT UNIT 5'S ADDRESS\nWKTXTP6  DS    A                     TEXT UNIT 6'S ADDRESS\nWKTXTP7  DS    A                     TEXT UNIT 7'S ADDRESS\nWKTXTP8  DS    A                     TEXT UNIT 8'S ADDRESS\nWKTXTP9  DS    A                     TEXT UNIT 9'S ADDRESS\nWKALIST  DS    A                     RETURNED UCB LIST ADDRESS\nWKRB     DS    (S99RBEND-S99RB)X     RESERVE SPACE FOR REQUEST BLOCK\nWKDDP    DS    AL2,AL2,AL2           DDNAME PARMS\nWKDD     DS    CL8                   DDNAME\nWKDSNP   DS    AL2,AL2,AL2           DATASET NAME PARMS\nWKDSN    DS    CL44                  DATASET NAME\nWKMEMP   DS    AL2,AL2,AL2           MEMBER NAME PARMS\nWKMEM    DS    CL8                   MEMBER NAME\nWKDSPIP  DS    AL2,AL2,AL2           INITIAL DISPOSITION PARMS\nWKDSPI   DS    X                     INITIAL DISPOSITION\nWKDSPNP  DS    AL2,AL2,AL2           NORMAL DISPOSITION PARMS\nWKDSPN   DS    X                     NORMAL DISPOSITION\nWKUNITP  DS    AL2,AL2,AL2           UNIT PARAMETERS\nWKUNIT   DS    CL8                   UNIT NAME\nWKBLKNP  DS    AL2,AL2,AL2           ALLOCATION UNITS (BLOCK LENGTH)\nWKBLKN   DS    XL3                   BLOCK LENGTH\nWKPRIP   DS    AL2,AL2,AL2           PRIMARY SPACE PARAMETERS\nWKPRI    DS    XL3                   PRIMARY SPACE (IN TRACKS)\nWKSECP   DS    AL2,AL2,AL2           SECONDARY SPACE PARAMETERS\nWKSEC    DS    XL3                   SECONDARY SPACE (IN TRACKS)\nWKRELP   DS    AL2,AL2               RELEASE UNUSED SPACE (RLSE)\nWKPRTP   DS    AL2,AL2,AL2           SYSOUT PARAMETERS\nWKPRTC   DS    C                     SYSOUT CLASS\nWKFREEP  DS    AL2,AL2               FREE AT DE-ALLOCATION\nWKPL     EQU   *-WKDDP\nWKL      EQU   *-WK\n* ------------------------------------------------------------------ *\n*              DAIR INTEFACE BLOCK                                   *\n* ------------------------------------------------------------------ *\n         DAIRBLOK DSECT=YES\n* ------------------------------------------------------------------ *\n*              EQUATES                                               *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n         IEFZB4D0\n         IEFZB4D2\n         END  HTTPDAIR\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPINDX": {"ttr": 2565, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x19\\x00\\x15\\x01\\x05\\x07?\\x01\\x07'\\x8f\\x14\\x00\\x01\\xe1\\x01\\x18\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@\"", "ispf": {"version": "01.25", "flags": 0, "createdate": "2005-03-14T00:00:00", "modifydate": "2007-10-05T14:00:15", "lines": 481, "newlines": 280, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*    This utility builds an HTML INDEX member for PDS's.              *\n*                                                                     *\n*---------------------------------------------------------------------*\nHTTPINDX CSECT\nHTTPINDX AMODE 24\nHTTPINDX RMODE 24\n         USING HTTPINDX,R12                   DECLARE ENTRY BASE\n         STM   R14,R12,12(R13)                STORE CALLERS REGISTERS\n         LR    R12,R15                        LOAD BASE REGISTER\n         B     INIT0000\n         DC    CL8'HTTPINDX'\n         DC    CL6'&SYSDATE'\n         DC    CL6'&SYSTIME'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nINIT0000 DS    0H\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORK,R13\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n         ZAP   WORK_LINE_NUMBER,P0\n         ZAP   WORK_PAGE_NUMBER,P0\n         ZAP   WORK_MEMBERS,P0\n         MVC   WORK_OCPL(OPENL),OPENI\n         MVC   WORK_DIR(DIRL),DIRI            INITIALIZE DCB(S)\n         MVC   WORK_SYSPRINT(SYSPRINTL),SYSPRINTI\n         MVC   WORK_SYSIN(SYSINL),SYSINI\n         MVC   WORK_INDEX(INDEXL),INDEXI\n         OPEN  (WORK_DIR,INPUT),              OPEN PDS DIRECTORY       +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         OPEN  (WORK_SYSPRINT,OUTPUT),                                 +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         OPEN  (WORK_SYSIN,INPUT),            OPEN CONTROL STATEMENTS  +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         MVI   WORK_PLINE-1,C' '\n         MVC   WORK_PLINE,WORK_PLINE-1\n         MVC   WORK_LINK,BLANKS               INITIALIZE LINK\n         BAL   R10,HEAD0000                   PRINT HEADING\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nINIT0100 DS    0H\n         GET   WORK_SYSIN,WORK_CONTROL_STATEMENT\n         MVC   WORK_PLINE+1(WORK_CONTROL_STATEMENTL),WORK_CONTROL_STATE+\n               MENT\n         BAL   R10,PRT0000                    PRINT IT\n         CLC   WORK_CONTROL_KEYWORD,=CL9'LINK'\n         BE    INIT0110                       YES\n         CLC   WORK_CONTROL_KEYWORD,=CL9'EXCLUDE'\n         BE    INIT0150                       YES\n         MVC   WORK_PLINE(ERROR_01L),ERROR_01\n         BAL   R10,PRT0000                    PRINT\n         MVI   WORK_RC,X'08'                  SET RC\n         B     INIT0100                       READ NEXT STATEMENT\nINIT0110 DS    0H\n         MVC   WORK_LINK,WORK_CONTROL_LINK\n         SR    R1,R1\n         LA    R2,WORK_LINK\nINIT0120 DS    0H\n         CLI   0(R2),C' '\n         BE    INIT0130\n         LA    R1,1(R1)\n         LA    R2,1(R2)\n         B     INIT0120\nINIT0130 DS    0H\n         ST    R1,WORK_LINK_LENGTH\n         B     INIT0100                       READ NEXT STATEMENT\nINIT0150 DS    0H\n         GETMAIN RU,                                                   +\n               LV=EXCLUDEL,                                            +\n               LOC=BELOW\n         LR    R6,R1                          COPY ADDRESS\n         USING EXCLUDE_DSECT,R6               DEFINE BASE\n         MVC   EXCLUDE_NEXT,WORK_EXCLUDE\n         ST    R6,WORK_EXCLUDE\n         MVC   EXCLUDE_MEMBER,WORK_CONTROL_MEMBER\n         B     INIT0100\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nPROC0000 DS    0H\n         CLI   WORK_RC,0                      BELOW ERRORS?\n         BNE   EXIT0000                       YES\nPROC0010 DS    0H\n         GET   WORK_DIR,WORK_DIR_IOAREA\n         LH    R8,WORK_DIR_IOAREA             BYTES OF DATA IN RECORD\n         SH    R8,H2                          MINUS 2 FOR LENGTH\n         LA    R7,WORK_DIR_IOAREA+2           FIRST ENTRY\n         USING DIRDSECT,R7                    DEFINE BASE\nPROC0020 DS    0H\n         CLI   0(R7),X'FF'                    END OF DIRECTORY?\n         BE    PROC0100                       YES\n         CLC   DIRNAME,=CL8'INDEX'            INDEX MEMBER ITSELF?\n         BE    PROC0040                       YES\n         ICM   R6,15,WORK_EXCLUDE             FIRST EXCLUDED MEMBER\n         BZ    PROC0040                       YES\nPROC0030 DS    0H\n         CLC   EXCLUDE_MEMBER,DIRNAME         EXCLUDE THIS MEMBER?\n         BE    PROC0070                       YES\n         ICM   R6,15,EXCLUDE_NEXT             NEXT EXCLUDED MEMBER\n         BNZ   PROC0030\nPROC0040 DS    0H\n         AP    WORK_MEMBERS,P1                ADD TO MEMBER COUNTER\n         GETMAIN RU,                                                   +\n               LV=MEMBERL,                                             +\n               LOC=BELOW\n         OC    WORK_MEMBER,WORK_MEMBER\n         BNZ   PROC0050\n         ST    R1,WORK_MEMBER\nPROC0050 DS    0H\n         LR    R5,R1\n         ICM   R1,15,WORK_LAST_MEMBER\n         BZ    PROC0060\n         ST    R5,MEMBER_NEXT-MEMBER_DSECT(R1)\nPROC0060 DS    0H\n         ST    R5,WORK_LAST_MEMBER\n         USING MEMBER_DSECT,R5\n         XC    MEMBER_NEXT,MEMBER_NEXT\n         MVC   MEMBER_MEMBER,DIRNAME\n         B     PROC0080\nPROC0070 DS    0H\n         OI    EXCLUDE_FLAGS,$EXCLUDE_FOUND\nPROC0080 DS    0H\n         NI    DIRC,X'1F'                     only LENGTH BITS\n         SR    R1,R1                          CLEAR REGISTER\n         IC    R1,DIRC                        HALFWORDS OF USER DATA\n         AR    R1,R1                          BYTES OF USER DATA\n         LA    R1,DIRUSER-DIRDSECT(R1)        TOTAL LENGTH\n         SR    R8,R1                          DIRECTORY DATA REMAINING\n         BZ    PROC0010                       READ NEXT DIRECTORY BLOCK\n         AR    R7,R1                          NEXT MEMBER\n         B     PROC0020                       PROCESS NEXT MEMBER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     PDS directory has been read.                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0100 DS    0H\n         OPEN  (WORK_INDEX,OUTPUT),                                    +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         LA    R11,WORK_INDEX\n         USING IHADCB,R11\n         LH    R0,DCBLRECL\n         CH    R0,INDEX_LINK_LL\n         BL    ERR0010\n         AH    R0,H8\n         GETMAIN RU,                                                   +\n               LV=(0),                                                 +\n               LOC=BELOW\n         ST    R1,WORK_OUTPUT_BUFFER\n         BAL   R10,CLEAR000\n         L     R2,WORK_OUTPUT_BUFFER\n         MVC   0(HTML_STARTL+4,R2),HTML_START_LL\n         TM    DCBRECFM,DCBRECV\n         BO    PROC0110\n         LA    R2,4(R2)\nPROC0110 DS    0H\n         BAL   R10,PUT0000\n         ICM   R5,15,WORK_MEMBER              FIRST MEMBER\n         BZ    PROC0140\nPROC0120 DS    0H\n         L     R2,WORK_OUTPUT_BUFFER\n         MVC   0(INDEX_LINKL+4,R2),INDEX_LINK_LL\n         MVC   INDEX_LINK_LINK-INDEX_LINK_LL(10,R2),WORK_LINK\n         L     R1,WORK_LINK_LENGTH\n         LA    R1,INDEX_LINK_LINK-INDEX_LINK_LL(R1,R2)\n         MVC   0(8,R1),MEMBER_MEMBER\n         MVC   INDEX_LINK_MEMBER-INDEX_LINK_LL(8,R2),MEMBER_MEMBER\n         TM    DCBRECFM,DCBRECV\n         BO    PROC0130\n         LA    R2,4(R2)\nPROC0130 DS    0H\n         BAL   R10,PUT0000\n         L     R4,MEMBER_NEXT\n         FREEMAIN RU,                                                  +\n               A=(R5),                                                 +\n               LV=MEMBERL\n         LTR   R5,R4\n         BNZ   PROC0120\n         B     PROC0160\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0140 DS    0H\n         L     R2,WORK_OUTPUT_BUFFER\n         MVC   0(NO_MEMBERSL+4,R2),NO_MEMBERS\n         TM    DCBRECFM,DCBRECV\n         BO    PROC0150\n         LA    R2,4(R2)\nPROC0150 DS    0H\n         BAL   R10,PUT0000\nPROC0160 DS    0H\n         L     R2,WORK_OUTPUT_BUFFER\n         MVC   0(HTML_ENDL+4,R2),HTML_END_LL\n         TM    DCBRECFM,DCBRECV\n         BO    PROC0170\n         LA    R2,4(R2)\nPROC0170 DS    0H\n         BAL   R10,PUT0000\n         ICM   R6,15,WORK_EXCLUDE\n         BZ    EXIT0000\nPROC0180 DS    0H\n         TM    EXCLUDE_FLAGS,$EXCLUDE_FOUND\n         BO    PROC0190\n         MVC   WORK_PLINE(ERROR_02L),ERROR_02\n         MVC   WORK_PLINE+(ERROR_02_MEMBER-ERROR_02)(8),EXCLUDE_MEMBER\n         BAL   R10,PRT0000\n         MVI   WORK_RC,4\nPROC0190 DS    0H\n         L     R4,EXCLUDE_NEXT\n         FREEMAIN RU,                                                  +\n               A=(R6),                                                 +\n               LV=EXCLUDEL\n         LTR   R6,R4\n         BNZ   PROC0180\n         MVC   WORK_PLINE(TOTAL_MSGL),TOTAL_MSG\n         ED    WORK_PLINE+(TOTAL_MEMBERS-TOTAL_MSG)(L'TOTAL_MEMBERS),WO+\n               RK_MEMBERS\n         BAL   R10,PRT0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPUT0000  DS    0H\n         PUT   WORK_INDEX,0(R2)\nCLEAR000 DS    0H\n         L     R0,WORK_OUTPUT_BUFFER\n         LH    R1,DCBLRECL\n         AH    R1,H8\n         SR    R14,R14\n         SR    R15,R15\n         ICM   R15,8,BLANKS\n         MVCL  R0,R14\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   WORK_PLINE(ERROR_03L),ERROR_03\n         BAL   R10,PRT0000\n         MVI   WORK_RC,12\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         CLOSE WORK_INDEX,                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\nEXIT0010 DS    0H\n         CLOSE WORK_SYSPRINT,                                          +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         CLOSE WORK_SYSIN,                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         SR    R2,R2\n         IC    R2,WORK_RC\n         LR    R1,R13\n         L     R13,4(R13)\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=WORKL\n         LR    R15,R2\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         BR    R14                                                      5)\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         PUT   WORK_SYSPRINT,WORK_PLINE\n         AP    WORK_LINE_NUMBER,P1            ADD 1 TO LINE COUNT\nPRT0010  DS    0H\n         MVC   WORK_PLINE,WORK_PLINE-1        CLEAR PRINT AREA\n         CP    WORK_LINE_NUMBER,P65           TIME FOR HEADING??\n         BLR   R10                            NO\nHEAD0000 DS    0H\n         AP    WORK_PAGE_NUMBER,P1            ADD 1 TO PAGE COUNT\n         MVC   WORK_PLINE(HEADINGL),HEADING\n         MVC   WORK_PLINE+(HEADPAGE-HEADING)(L'HEADPAGE),=X'40202020212+\n               0'\n         ED    WORK_PLINE+(HEADPAGE-HEADING)(L'HEADPAGE),WORK_PAGE_NUMB+\n               ER\n         PUT   WORK_SYSPRINT,WORK_PLINE\n         MVC   WORK_PLINE,WORK_PLINE-1\n         ZAP   WORK_LINE_NUMBER,P0\n         BR    R10                            RETURN\n*---------------------------------------------------------------------*\n*                      DATA AREAS                                     *\n*---------------------------------------------------------------------*\n                LTORG\nOPENI           OPEN (*,INPUT),MODE=31,MF=L\nOPENL           EQU  *-OPENI\nH2              DC   H'2'\nH8              DC   H'8'\nP0              DC   P'0'\nP1              DC   P'1'\nP65             DC   P'65'\nBLANKS          DC   CL10' '\nHEADING         DS   0C\n                DC   C'1'\n                DC   C'HTTPINDX   HTML  PDS   INDEX builder'\n                DC   CL20' '\n                DC   C'PAGE '\nHEADPAGE        DC   X'40202120212'\nHEADINGL        EQU  *-HEADING\n\nERROR_01        DS   0C\n                DC   C' Invalid control statement'\nERROR_01L       EQU  *-ERROR_01\n\nERROR_02        DS   0C\n                DC   C'0EXCLUDED MEMBER '\nERROR_02_MEMBER DC   CL8' '\n                DC   c' not found'\nERROR_02L       EQU  *-ERROR_02\n\nERROR_03        DS   0C\n                DC   C'-SYSUT1''s LRECL is too small for index records'\nERROR_03L       EQU  *-ERROR_03\n\nTOTAL_MSG       DS   0C\n                DC   C'-'\n                DC   C'NUMBER OF MEMBERS INDEXED WAS '\nTOTAL_MEMBERS   DC   X'40206B2020206B202120'\nTOTAL_MSGL      EQU  *-TOTAL_MSG\n\nHTML_START_LL   DC   Y(HTML_STARTL+4)\n                DC   AL2(0)\nHTML_START      DS   0C\n                DC   C'<HTML>'\n                DC   C'<BODY>'\n                DC   C'<PRE>'\n                DC   AL1($LF)\nHTML_STARTL     EQU  *-HTML_START\n\nHTML_END_LL     DC   Y(HTML_ENDL+4)\n                DC   AL2(0)\nHTML_END        DS   0C\n                DC   C'</PRE>'\n                DC   C'</BODY>'\n                DC   C'</HTML>'\n                DC   AL1($LF)\nHTML_ENDL       EQU  *-HTML_END\n\nINDEX_LINK_LL   DC   Y(INDEX_LINKL+4)\n                DC   AL2(0)\nINDEX_LINK      DS   0C\n                DC   C'<A HREF='\nINDEX_LINK_LINK DC   CL20' '\n                DC   C'>'\nINDEX_LINK_MEMBER DC CL8' '\n                DC   C'</A>'\n                DC   AL1($LF)\nINDEX_LINKL     EQU  *-INDEX_LINK\n\nNO_MEMBERS_LL   DC   Y(NO_MEMBERSL+4)\n                DC   AL2(0)\nNO_MEMBERS      DC   C'NO MEMBERS'\n                DC   AL1($LF)\nNO_MEMBERSL     EQU  *-NO_MEMBERS\n         SPACE 2\n*---------------------------------------------------------------------*\n*                      DCB'S                                          *\n*---------------------------------------------------------------------*\nDIRI     DCB   DSORG=PS,                                               +\n               DDNAME=SYSUT1,                                          +\n               RECFM=U,                                                +\n               LRECL=256,                                              +\n               EODAD=PROC0100,                                         +\n               MACRF=GM\nDIRL     EQU   *-DIRI\nSYSINI   DCB   DSORG=PS,                                               +\n               DDNAME=SYSIN,                                           +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               EODAD=PROC0000,                                         +\n               MACRF=GM\nSYSINL   EQU   *-SYSINI\nSYSPRINTI DCB  DSORG=PS,                                               +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               DDNAME=SYSPRINT,                                        +\n               MACRF=PM\nSYSPRINTL EQU  *-SYSPRINTI\nINDEXI   DCB   DSORG=PS,                                               +\n               DDNAME=INDEX,                                           +\n               MACRF=PM\nINDEXL    EQU  *-INDEXI\n\n*---------------------------------------------------------------------*\n*                      DATA AREAS                                     *\n*---------------------------------------------------------------------*\nWORK                 DSECT\nWORK_SAVE            DS   18F\nWORK_EXCLUDE         DS   A\nWORK_MEMBER          DS   A\nWORK_LAST_MEMBER     DS   A\n\nWORK_DIR             DS   0F,(DIRL)X\nWORK_SYSPRINT        DS   0F,(SYSPRINTL)X\nWORK_SYSIN           DS   0F,(SYSINL)X\nWORK_INDEX           DS   0F,(INDEXL)X\n\n\nWORK_OCPL            DS   0F,(OPENL)C\n\nWORK_LINK_LENGTH     DS   F\nWORK_LINK            DS   CL10\n\n                     DS   C\nWORK_PLINE           DS   CL133\nWORK_LINE_NUMBER     DS   PL3\nWORK_PAGE_NUMBER     DS   PL3\nWORK_MEMBERS         DS   PL4\n\nWORK_DIR_IOAREA      DS   256C\n\nWORK_OUTPUT_BUFFER   DS   A\n\nWORK_RC              DS   X\n\nWORK_CONTROL_STATEMENT   DS  0C\nWORK_CONTROL_KEYWORD     DS  CL9\nWORK_CONTROL_MEMBER      DS  CL8\n                         ORG WORK_CONTROL_MEMBER\nWORK_CONTROL_LINK        DS  CL10\n                         ORG\n                         DS  CL63\nWORK_CONTROL_STATEMENTL  EQU *-WORK_CONTROL_STATEMENT\n\nWORKL                EQU  *-WORK\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nDIRDSECT             DSECT\nDIRNAME              DS   CL8\nDIRTTR               DS   CL3\nDIRC                 DS   X\nDIRUSER              DS   0C\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nEXCLUDE_DSECT        DSECT\nEXCLUDE_NEXT         DS   A\nEXCLUDE_MEMBER       DS   CL8\nEXCLUDE_FLAGS        DS   X\n$EXCLUDE_FOUND       EQU  X'80'\nEXCLUDEL             EQU  *-EXCLUDE_DSECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nMEMBER_DSECT         DSECT\nMEMBER_NEXT          DS   A\nMEMBER_MEMBER        DS   CL8\nMEMBERL              EQU  *-MEMBER_DSECT\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\n                     IEZIOB\n                     DCBD   DSORG=PO\n*---------------------------------------------------------------------*\n*                      EQUATES                                        *\n*---------------------------------------------------------------------*\n                     COPY   REGEQU\n$LF                  EQU    X'0A'\n$OUTPUT_BLOCKSIZE    EQU    32760\n         END    HTTPINDX\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPINIT": {"ttr": 2819, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00T\\x01\\x045o\\x01\\x072?\\x17\\x03\\x020\\x02b\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "2004-12-21T00:00:00", "modifydate": "2007-11-19T17:03:54", "lines": 560, "newlines": 610, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: HTTPINIT                                                     *\n*                                                                     *\n*  PURPOSE: HTTP Initialization                                       *\n*                                                                     *\n*  This is LOADed and called by HTTPMAIN at start-up time.            *\n*  This is to reduce the amount of code that would be needed only     *\n*  at start-up.                                                       *\n*                                                                     *\n*     . Obtain the trace table storage                                *\n*     . Verify the required DD statements are present                 *\n*     . ATTACH the print subtask HTTPPRT                              *\n*     . LOAD and link to the parameter reader HTTPPARM                *\n*     . ATTACH the console subtask (HTTPCONS)                         *\n*     . ATTACH to logging subtask (HTTPLOG)                           *\n*     . Create a DATASPACE for the URLs                               *\n*     . ATTACH the web subtask                                        *\n*     . ATTACH the server space contact subtask (HTTPTCP)             *\n*     . ATTACH the local URL subtask (HTTPLOCL)                       *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPINIT CSECT\nHTTPINIT AMODE 31\nHTTPINIT RMODE ANY\n         USING HTTPINIT,R12                   DEFINE BASE\n         USING HTTPCOMM,R11\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPINIT'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         GETMAIN RU,                                                   +\n               LV=DXDL,                                                +\n               LOC=ANY\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING DXDINIT,R13\n* ------------------------------------------------------------------- *\n*        Process PARM if given                                        *\n*                                                                     *\n*        PARM address is passed from HTTPMAIN in R6.                  *\n*                                                                     *\n*        If specified, the PARM is the number of trace table entries. *\n*        The minimum is 500.                                          *\n* ------------------------------------------------------------------- *\n         LTR   R6,R6                          PARM GIVEN?\n         BZ    INIT0030                       NO PARM\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,0(R6)                     LENGTH OF PARM\n         BZ    INIT0030                       NO PARM\n         SH    R1,H3\n         DC    H'0'\n         CH    R1,H5                          TOO MANY DIGITS?\n         BH    INIT0010                       YES\n         MVC   DXD_PARM_WORK(5),=C'00000'\n         LA    R14,DXD_PARM_WORK+5\n         SR    R14,R1                         MINUS LENGTH OF PARM\n         BCTR  R1,0\n         EX    R1,PARMMVC                     MOVE PARM\n         PACK  DXD_DWORD,DXD_PARM_WORK\n         CVB   R1,DXD_DWORD                   CONVERT TO BINARY\n         MH    R1,=Y(TRACE_ENTRY_LENGTH)\n         C     R1,TRACE_TABLE_SIZE            MORE THAN MINIMUM?\n         BL    INIT0010                       NO\n         ST    R1,TRACE_TABLE_SIZE\n         B     INIT0030\nPARMMVC  MVC   DXD_PARM_WORK(0),2(R6)\nINIT0010 DS    0H\n         OI    COMM_FLAGS,$COMM_ABORT\n         GETMAIN RU,                                                   +\n               LV=WTO02L,                                              +\n               LOC=BELOW\n         LR    R2,R1\n         MVC   0(WTO02L,R2),WTO02\n         WTO   MF=(E,(R2))\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=WTO02L\n         B     EXIT0000\nINIT0020 DS    0H\n         GETMAIN RU,                                                   +\n               LV=WTO03L,                                              +\n               LOC=BELOW\n         LR    R2,R1\n         MVC   0(WTO03L,R2),WTO03\n         WTO   MF=(E,(R2))\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=WTO03L\n* ------------------------------------------------------------------- *\n*        Acquire storage for trace table                              *\n* ------------------------------------------------------------------- *\nINIT0030 DS    0H\n         L     R3,TRACE_TABLE_SIZE            TRACE TABLE SIZE\n         GETMAIN RU,                          ACQUIRE TRACE TABLE      +\n               LV=(R3),                       .. SIZE IS IN R3         +\n               LOC=ANY                        .. MAY BE ABOVE OR BELOW\n         ST    R1,TRACE_TABLE_ADDRESS         TRACE TABLE ADDRESS\n         SR    R0,R0                          ASSUME 32-BYTE BOUNDARY\n         TM    TRACE_TABLE_ADDRESS+3,X'07'    ON 32-BYTE BOUNDARY?\n         BNO   INIT0040                       YES\n         SRL   R1,5                           SHIFT OUT LOW BITS ..\n         SLL   R1,5                           .. TO ROUND\n         LA    R1,32(R1)                      PLUS 32\n         LA    R0,TRACE_ENTRY_LENGTH\nINIT0040 DS    0H\n         ST    R1,TRACE_FIRST                 FIRST TRACE ENTRY\n         ST    R1,TRACE_CURRENT               CURRENT TRACE ENTRY\n         A     R1,TRACE_TABLE_SIZE            LAST ENTRY IN TABLE\n         SH    R1,=Y(TRACE_ENTRY_LENGTH)      MINUS 1 ENTRY\n         SR    R1,R0                          MINUS 1 MORE IF NECESSARY\n         ST    R1,TRACE_LAST                  LAST TRACE ENTRY ADDRESS\n\n\n* ---- ITRACE is availble after this point\n\n\n* ------------------------------------------------------------------- *\n*        Determine DD's present                                       *\n* ------------------------------------------------------------------- *\n         USING PSA,R0                         DEFINE BASE\n         L     R1,PSATNEW                     OUR TCB ADDRESS FROM PSA\n         USING TCB,R1                         DEFINE TCB BASE\n         L     R2,TCBTIO                      TIOT ADDRESS FROM OUR TCB\n         USING TIOT1,R2                       DEFINE TIOT BASE\n         LA    R3,TIOENTRY                    FIRST TIOT ENTRY\n         USING TIOENTRY,R3                    DEFINE TIOT ENTRY BASE\n         SR    R4,R4                          CLEAR FOR LENGTHS\nINIT0050 DS    0H\n         ICM   R4,1,TIOELNGH                  LENGTH OF THIS ENTRY\n         BZ    INIT0090                       END OF TABLE\n         ITRACE ID=TIOTDDNM,                  TRACE EACH TIOT ENTRY    +\n               DATA1=(TIOEDDNM,8)\n         LA    R5,DD_TABLE                    REQUIRED DD NAME TABLE\n         USING DD_DSECT,R5                    DEFINE BASE\nINIT0060 DS    0H\n         CLI   0(R5),X'FF'                    END OF TABLE?\n         BE    INIT0080                       YES, NOT IN TABLE\n         CLC   TIOEDDNM,DD_NAME               DD NAME FOUND?\n         BE    INIT0070                       YES\n         LA    R5,DD_LENGTH(R5)               NEXT DD\n         B     INIT0060                       LOOP\nINIT0070 DS    0H\n         ITRACE ID=SETDD,                     SETTING DD ID            +\n               DATA1=(TIOEDDNM,8),            .. DDNAME                +\n               DATA2=(DD_ID,8)                .. FLAG VALUE\n         OC    DXD_DD,DD_ID                   TURN ON MATCHING ID\nINIT0080 DS    0H\n         AR    R3,R4                          NEXT ENTRY\n         B     INIT0050                       LOOP\nINIT0090 DS    0H\n         ITRACE ID=TIOTDONE,                  TIOT SCAN COMPLETE       +\n               DATA1=(DXD_DD,8)               .. INCLUDE FLAG BYTE\n         TM    DXD_DD,X'40'                   PRINT DD PRESENT?\n         BO    INIT0100                       YES\n         GETMAIN RU,                          ACQUIRE STORAGE FOR WTO  +\n               LV=WTO01L,                     .. STORAGE SIZE REQUIRED +\n               LOC=BELOW                      .. FROM BELOW THE LINE\n         LR    R2,R1                          COPY STORAGE ADDRESS\n         MVC   0(WTO01L,R2),WTO01             COPY WTO\n         WTO   MF=(E,(R2))                    ISSUE WTO\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=WTO01L\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*        ATTACH print sub-task                                        *\n* ------------------------------------------------------------------- *\nINIT0100 DS    0H\n         MVC   DXD_ATTACH(ATTCHL),ATTCHI\n         MVC   DXD_SUBTASK,HTTPPRT            TASK BEING ATTACHED\n         LA    R2,COMM_PRINT_TERM_ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         ITRACE ID=ATCHPRT                    ATTACHING PRINT SUBTASK\n         ATTACH EP=HTTPPRT,                   ATTACH PRINT SUBTASK     +\n               PARAM=((R11)),                 .. COMMON MODULE ADDR    +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         STH   R15,DXD_RC                     SAVE RETURN CODE\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_PRINT_TCB              TCB ADDRESS\n         ITRACE ID=PRTOK,                     PRINT SUBTASK ATTACHED   +\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_SUBTASKS,$PRINT_SUBTASK\n* ------------------------------------------------------------------- *\n*        Print start-up messages                                      *\n* ------------------------------------------------------------------- *\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\n         MVI   PRT_COMMAND,$PRT_HEAD\n         BAL   R8,PRT0000\n         MVI   PRT_COMMAND,$PRT_PRINT\n         MVC   PRT_MESSAGE_ID(MSG04L),MSG04\n         BAL   R8,PRT0000\n* ------------------------------------------------------------------- *\n*        Make sure all required DD's are present                      *\n* ------------------------------------------------------------------- *\n         LA    R5,DD_TABLE                    FIRST DDNAME\n         SR    R2,R2                          CLEAR REGISTER\nINIT0110 DS    0H\n         TM    DD_FLAG,$DD_REQUIRED           IS THIS A REQUIRED DD?\n         BNO   INIT0120                       NO\n         IC    R2,DD_ID                       INSERT DD ID\n         EX    R2,DDTM                        IS DD PRESENT?\n         BO    INIT0120                       YES\n         MVC   PRT_MESSAGE_ID(MSG05L),MSG05\n         MVC   PRT_MESSAGE_ID+(MSG05D-MSG05)(L'MSG05D),DD_NAME\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         OI    COMM_FLAGS,$COMM_ABORT\nINIT0120 DS    0H\n         LA    R5,DD_LENGTH(R5)               NEXT DD\n         CLI   0(R5),X'FF'                    END OF TABLE?\n         BNE   INIT0110                       NO\n         TM    COMM_FLAGS,$COMM_ABORT         ABORT FLAG SET?\n         BNO   INIT0130                       NO\n         MVC   PRT_MESSAGE_ID(MSG06L),MSG06\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         DC    H'0'\n         B     EXIT0000                       EXIT\nDDTM     TM    DXD_DD,X'00'                   TEST FOR PRESENCE OF DD\n* ------------------------------------------------------------------- *\n*        Call parameter interpreter                                   *\n* ------------------------------------------------------------------- *\nINIT0130 DS    0H\n         LOAD  EP=HTTPPARM                    LOAD PARM CONVERTER\n         LR    R15,R0                         PARAMETER READER\n         BALR  R14,R15                        LINK TO PARAMETER READER\n         DELETE EP=HTTPPARM                   DELETE PARAMETER READER\n         TM    COMM_FLAGS,$COMM_ABORT         ERRORS IN PARAMETERS?\n         BNO   INIT0140                       NO\n         MVC   PRT_MESSAGE_ID(MSG09L),MSG09\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*        ATTACH console subtask                                       *\n* ------------------------------------------------------------------- *\nINIT0140 DS    0H\n         LA    R2,COMM_CONSOLE_TERM_ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         MVC   DXD_SUBTASK,HTTPCONS           SUBTASK BEING ATTACHED\n         ITRACE ID=ATCHCONS                   ATTACHING CONSOLE SUBTASK\n         ATTACH EP=HTTPCONS,                  ATTACH CONSOLE SUBTASK   +\n               PARAM=((R11)),                 .. COMMON                +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_CONSOLE_TCB            TCB ADDRESS\n         ITRACE ID=CONSOK,                    CONSOLE SUBTASK ATTACHED +\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_SUBTASKS,$CONSOLE_SUBTASK\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         MVC   PRT_MESSAGE_ID+(MSG07TSK-MSG07)(L'MSG07TSK),HTTPCONS\n         MVC   PRT_MESSAGE_ID+(MSG07DSC-MSG07)(L'CSUB_DESC),CSUB_DESC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n* ------------------------------------------------------------------- *\n*        ATTACH logging subtask                                       *\n* ------------------------------------------------------------------- *\n         LA    R2,COMM_LOG_TERM_ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         MVC   DXD_SUBTASK,HTTPLOG            SUBTASK BEING ATTACHED\n         ITRACE ID=ATCHLOG                    ATTACHING LOG SUBTASK\n         ATTACH EP=HTTPLOG,                   ATTACH LOGGING SUBTASK   +\n               PARAM=((R11)),                 .. COMMON                +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_LOG_TCB                TCB ADDRESS\n         ITRACE ID=LOGOK,                     LOGGING SUBTASK ATTACHED +\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_SUBTASKS,$LOGGING_SUBTASK\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         MVC   PRT_MESSAGE_ID+(MSG07TSK-MSG07)(L'MSG07TSK),HTTPLOG\n         MVC   PRT_MESSAGE_ID+(MSG07DSC-MSG07)(L'CSUB_DESC),LOG_DESC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n* ------------------------------------------------------------------- *\n*        ATTACH URL manager subtask                                   *\n* ------------------------------------------------------------------- *\n         LA    R2,COMM_URL_TERM_ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         MVC   DXD_SUBTASK,HTTPURL            SUBTASK BEING ATTACHED\n         ITRACE ID=ATCHURL                    ATTACHING URL SUBTASK\n         ATTACH EP=HTTPURL,                   ATTACH URL SUBTASK       +\n               PARAM=((R11)),                 .. COMMON                +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_URL_TCB                TCB ADDRESS\n         ITRACE ID=URLOK,                     URL SUBTASK ATTACHED     +\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_SUBTASKS,$URL_SUBTASK\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         MVC   PRT_MESSAGE_ID+(MSG07TSK-MSG07)(L'MSG07TSK),HTTPURL\n         MVC   PRT_MESSAGE_ID+(MSG07DSC-MSG07)(L'CSUB_DESC),URL_DESC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n* ------------------------------------------------------------------- *\n*        ATTACH WEB subtask                                           *\n* ------------------------------------------------------------------- *\n         LA    R2,COMM_WEB_TERM_ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         MVC   DXD_SUBTASK,HTTPWEB            SUBTASK BEING ATTACHED\n         ITRACE ID=ATCHWEB                    ATTACHING WEB SUBTASK\n         ATTACH EP=HTTPWEB,                   ATTACH WEB SUBTASK       +\n               PARAM=((R11)),                 .. HTTPCOMM ADDRESS      +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_WEB_TCB                TCB ADDRESS IN HTTPCOMM\n         ITRACE ID=WEBOK,                     WEB SUBTASK ATTACHED     +\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_SUBTASKS,$WEB_SUBTASK\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         MVC   PRT_MESSAGE_ID+(MSG07TSK-MSG07)(L'MSG07TSK),HTTPWEB\n         MVC   PRT_MESSAGE_ID+(MSG07DSC-MSG07)(L'CSUB_DESC),WEB_DESC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         ITRACE ID=INITWAIT\n         WAIT  ECB=COMM_WEB_INITIALIZED       ALLOW TASK TO INITIALIZE\n* ------------------------------------------------------------------- *\n*        ATTACH SERVER space initial contact subtask                  *\n* ------------------------------------------------------------------- *\n         LA    R2,COMM_HTTPTCP_TERM_ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         MVC   DXD_SUBTASK,HTTPTCP            SUBTASK BEING ATTACHED\n         ITRACE ID=ATCHTCP                    ATTACHING SERVER CONTACT\n         ATTACH EP=HTTPTCP,                   ATTACH SERVER CONTACT    +\n               PARAM=((R11)),                 .. HTTPCOMM ADDRESS      +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_HTTPTCP_TCB            TCB ADDRESS IN HTTPCOMM\n         ITRACE ID=HTTPTCP_OK,                WEB SUBTASK ATTACHED     +\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_SUBTASKS,$TCP_SUBTASK\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         MVC   PRT_MESSAGE_ID+(MSG07TSK-MSG07)(L'MSG07TSK),HTTPTCP\n         MVC   PRT_MESSAGE_ID+(MSG07DSC-MSG07)(L'CSUB_DESC),TCP_DESC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         ITRACE ID=INITWAIT\n         WAIT  ECB=COMM_HTTPTCP_INITIALIZED   ALLOW TASK TO INITIALIZE\n* ------------------------------------------------------------------- *\n*        ATTACH local URL subtask                                     *\n* ------------------------------------------------------------------- *\n         LA    R2,COMM_LOCAL_TERM_ECB\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         MVC   DXD_SUBTASK,HTTPLOCL           SUBTASK BEING ATTACHED\n         ITRACE ID=ATCHLOCL                   ATTACH LOCAL URL SUBTASK\n         ATTACH EP=HTTPLOCL,                  ATTACH LOCAL URL SUBTASK +\n               PARAM=((R11)),                 .. COMMON                +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O S       +\n               MF=(E,(R3)),                   .. SUBTASK PARM LIST     +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,COMM_LOCAL_TCB              TCB ADDRESS\n         ITRACE ID=LOCLOK,                    URL SUBTASK ATTACHED     +\n               RDATA1=R1                      .. TCB ADDRESS\n         OI    COMM_SUBTASKS,$LOCAL_SUBTASK\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         MVC   PRT_MESSAGE_ID+(MSG07TSK-MSG07)(L'MSG07TSK),HTTPLOCL\n         MVC   PRT_MESSAGE_ID+(MSG07DSC-MSG07)(L'LOCAL_DESC),LOCAL_DESC\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         WAIT  ECB=COMM_LOCAL_INIT_ECB        WAIT FOR INITIALIZATION\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE\n         ST    R14,PRT_NEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R8                             COMPLETE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ATCHFAIL                   SUBTASK ATTACH FAILED\n         STH   R15,DXD_RC                     SAVE RETURN CODE\n         MVC   PRT_MESSAGE_ID(MSG12L),MSG12\n         MVC   PRT_MESSAGE_ID+(MSG12T-MSG12)(L'MSG12),DXD_SUBTASK\n         UNPK  PRT_MESSAGE_ID+(MSG12R-MSG12)(5),DXD_RC(3)\n         TR    PRT_MESSAGE_ID+(MSG12R-MSG12)(L'MSG12R),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG12R-MSG12)+4,C' '\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         ABEND 2,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LR    R2,R13\n         L     R13,4(R13)\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=DXDL\n         LM    R14,R12,12(R13)\n         SR    R15,R15\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH3          DC    H'3'\nH5          DC    H'5'\n\nHEXCHAR     EQU   *-C'0'\n            DC    C'0123456789ABCDEF'\n\nHTTPPRT     DC    CL8'HTTPPRT'\nHTTPLOG     DC    CL8'HTTPLOG'\nHTTPCONS    DC    CL8'HTTPCONS'\nHTTPLOCL    DC    CL8'HTTPLOCL'\nHTTPWEB     DC    CL8'HTTPWEB'\nHTTPTCP     DC    CL8'HTTPTCP'\nHTTPURL     DC    CL8'HTTPURL'\nPRT_ID      DC    CL8'PRTBLOK'\n\nDD_TABLE    DS    0C\n            DC    CL8'SYSIN',AL1($DD_REQUIRED),X'80'\n            DC    CL8'SYSPRINT',AL1($DD_REQUIRED),X'40'\n            DC    X'FF'\n\nCSUB_DESC   DC    CL35'console communication'\nLOCAL_DESC  DC    CL35'local URL'\nLOG_DESC    DC    CL35'Logging'\nTCP_DESC    DC    CL35'TCP (server contact)'\nURL_DESC    DC    CL35'URL (URL manager)'\nWEB_DESC    DC    CL35'Web (web user contact)'\n\nWTO01    WTO   'HTTPINIT01E * SYSPRINT  DD STATEMENT IS NOT PRESENT',  +L\n               MF=L\nWTO01L   EQU   *-WTO01\nWTO02    WTO   'HTTPINIT02E too many digits in parm (5 is max)',MF=L\nWTO02L   EQU   *-WTO02\nWTO03    WTO   'HTTPINIT03E trace size in PARM is less than 500',MF=L\nWTO03L   EQU   *-WTO03\nMSG04    DS    0C\n         DC    CL15'HTTPINIT04I'\n         DC    C'Initialization starting'\nMSG04L   EQU   *-MSG04\nMSG05    DS    0C\n         DC    CL15'HTTPINIT05E'\n         DC    C'Required DD '\nMSG05D   DC    CL8' '\n         DC    C' is not present'\nMSG05L   EQU   *-MSG05\nMSG06    DS    0C\n         DC    CL15'HTTPINIT06E'\n         DC    C'Add required DD(s) to your JCL and re-submit'\nMSG06L   EQU   *-MSG06\nMSG07    DC    CL15'HTTPINIT07I '\nMSG07TSK DC    CL8' '\n         DC    C' ('\nMSG07DSC DC    CL35' '\n         DC    C')'\n         DC    C' attached'\nMSG07L   EQU   *-MSG07\n\nWTO08    WTO   'HTTPINIT08I HTTP main initialized',MF=L\nWTO08L   EQU   *-WTO08\n\nMSG09    DS    0C\n         DC    CL15'HTTPINIT09I'\n         DC    C'Error(s) have been detected. Aborting.'\nMSG09L   EQU   *-MSG09\n\nMSG12    DS    0C\n         DC    CL15'HTTPINIT12E'\n         DC    C'ATTACH failed for '\nMSG12T   DC    CL8' '\n         DC    C'  RC='\nMSG12R   DC    CL5' '\n         DC    C' '\nMSG12L   EQU   *-MSG12\nATTCHI   ATTACH EP=HTTPCONS,        ATTACH LIST FORM                   +\n               ECB=*,               .. TERMINATION ECB'S ADDRESS       +\n               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +\n               SF=L                 .. LIST FORM\nATTCHL   EQU   *-ATTCHI\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDINIT          DSECT\n                 STDSAVE DSECT=NO\nDXD_ID           DS       CL8\nDXD_DWORD        DS       D\nDXD_ATTACH_PARM  DS       A                ATTACH PARM\nDXD_URLS         DS       F\nDXD_ATTACH       DS       (ATTCHL)X        ATTACH LIST FORM\n\nDXD_RC           DS       H\nDXD_DD           DS       X                DD'S PRESENT\nDXD_SUBTASK      DS       CL8              SUBTASK ATTACHED/DETACHED\nDXD_FLAGS        DS       X\n$SNAPPED         EQU      X'80'\nDXD_PARM_WORK    DS       CL5\n                 PRTBLOK  DSECT=NO\nDXDL             EQU      *-DXDINIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 COMMON   MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 WEBURL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 SERVBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDD_DSECT         DSECT\nDD_NAME          DS    CL8\nDD_FLAG          DS    X\n$DD_REQUIRED     EQU   X'80'\nDD_ID            DS    X\nDD_LENGTH        EQU   *-DD_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 IKJTCB   LIST=NO\n                 IEFTIOT1\nSERVER_IO_SIZE   EQU      32760\n                 COPY     REGEQU\n                 END   HTTPINIT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPLOCL": {"ttr": 3073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00E\\x01\\x04(\\x8f\\x01\\x072?\\x17\\x06\\x03\\xfe\\x00\\xa4\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2004-10-14T00:00:00", "modifydate": "2007-11-19T17:06:45", "lines": 1022, "newlines": 164, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         TASKINFO &NAME,&ID,&ECB,&WORK\n         DC    CL8'&NAME'\n         DC    AL1(&ID)\n         DC    AL2(&ECB-HTTPCOMM)\n         DC    AL2(&WORK-HTTPCOMM)\n         MEND\n         TITLE 'HTTPLOCL    Process local URLs'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPLOCL                                              *\n*                                                                     *\n*   This subtask processes local URLs                                 *\n*                                                                     *\n*   As of now there are two URLs                                      *\n*      status     returns a list of the URLs defined                  *\n*      trace      returns a formatted display of the trace table      *\n*                                                                     *\n*                                                                     *\n*   Note that this module processes URLs like remote servers but      *\n*   there is one major difference.  When a remote server space starts *\n*   up, it must define the URL(s) it wants to process.  Remote        *\n*   server spaces communicate with the main space via TCP/IP.         *\n*   This module runs as a subtask of the main task in the main        *\n*   space.  Communication is done by 'queueing' work using the        *\n*   compare-and-swap (CS) instruction and ECBs for serialization.     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPLOCL CSECT\nHTTPLOCL AMODE 31\nHTTPLOCL RMODE ANY\n         USING HTTPLOCL,R12,R10               DEFINE BASE\n         USING HTTPCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                CHAIN REGISTERS\n         LR    R12,R15                        COPY ENTRY POINT ADDRESS\n         B     INIT0000\n         DC    CL8'HTTPLOCL'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         L     R11,0(R1)                      LOAD HTTPCOMM'S ADDRESS\n         ST    R12,COMM_HTTPLOCL_ADDRESS\n         LA    R10,2048(R12)\n         LA    R10,2048(R10)\n         GETMAIN RU,                          STORAGE FOR WORK AREA    +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=ANY\n         ST    R13,4(R1)                      CHAIN PREVIOUS AREA\n         ST    R1,8(R13)                      CHAIN OUR AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         ST    R13,COMM_LOCAL_WORK_AREA\n         USING WORKAREA,R13\n         ITRACE ID=INIT\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\n         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK\n         XC    WORK_TCPIP_ECB(104),WORK_TCPIP_ECB\n         ITRACE ID=INITAPI\n         EZASMI TYPE=INITAPI,                                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               SUBTASK=C_HTTPLOCL,                                     +\n               ASYNC='ECB',                                            +\n               MAXSNO=WORK_MAX_SOCKET,                                 +\n               TASK=WORK_TCPIP_TASK\n         ITRACE ID=GETID\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=GETCLIENTID,                                      +\n               CLIENT=COMM_HTTPLOCL_CLIENT,                            +\n               ECB=WORK_TCPIP_ECB,                                     +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE\n         WAIT  ECB=WORK_TCPIP_ECB\n* ------------------------------------------------------------------- *\n*        Define \"local\" URLs                                          *\n* ------------------------------------------------------------------- *\n         GETMAIN RU,                                                   +\n               LV=WEBURLL+URL_PREFIX_L+100,                            +\n               LOC=ANY\n         LR    R9,R1\n         USING WEBURL,R9\n         USING URL,WEBURL_URL\n         XC    WEBURL(WEBURLL+URL_PREFIX_L),WEBURL\n         MVC   WEBURL_EYE,C_WEBURL\n         MVC   WEBURL_SERVBLOK,=F'-1'\n         MVI   WEBURL_STATUS,$URL_DEFINE_SPECIFIC\n         LA    R2,LOCAL_URLS\nINIT0010 DS    0H\n         SR    R3,R3\n         ICM   R3,3,0(R2)\n         STCM  R3,3,URL_LENGTH                SET LENGTH\n         BCTR  R3,0\n         EX    R3,INIT_MVC\n         XC    WEBURL_ECB,WEBURL_ECB          RESET ECB\n         ITRACE ID=DEF_URL,                   DEFINING URL             +\n               RDATA1=R9,                                              +\n               DATA2=(URL_TEXT,8)\nINIT0020 DS    0H\n         L     R1,COMM_URL_QUEUE              1ST ON QUEUE NOW\n         ST    R1,WEBURL_NEXT                 CHAIN TO OUR URL\n         CS    R1,R9,COMM_URL_QUEUE           ADD TO QUEUE\n         BC    4,INIT0020                     TRY AGAIN\n         ITRACE ID=POST_URL\n         POST  COMM_URL_WORK_ECB              WAKE UP URL TASK\n         LA    R1,WEBURL_ECB\n         ITRACE ID=WAIT_URL,                                           +\n               RDATA1=R1,                                              +\n               DATA2=(0(R1),8)\n         WAIT  ECB=WEBURL_ECB                 WAIT\n         XC    WEBURL_NEXT,WEBURL_NEXT\n         LA    R2,3(R3,R2)                    NEXT URL\n         CLI   0(R2),X'FF'                    END OF LOCAL URLS?\n         BNE   INIT0010                       NO\n         ITRACE ID=FREE_URL,                                           +\n               RDATA1=R9\n         FREEMAIN RU,                         FREE URL WORK AREA       +\n               A=(R9),                                                 +\n               LV=WEBURLL+URL_PREFIX_L+100\n         POST  COMM_LOCAL_INIT_ECB            POST ECB\n         B     LOCL0010\nINIT_MVC MVC   URL_TEXT(0),2(R2)              COPY TEXT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLOCL0010 DS    0H\n         TM    COMM_EOJ,$EOJ_PHASE_1          SHUTDOWN PHASE 1?\n         BO    EXIT0000                       YES.. IT'S MILLER TIME\n         TM    COMM_LOCAL_WORK_ECB,X'40'      ECB ALREADY POSTED?\n         BO    LOCL0020                       GET BUSY\n         ITRACE ID=WORKWAIT,                  WAITING FOR WORK         +\n               RDATA1=R1                      .. ECB'S ADDRESS\n         WAIT  ECB=COMM_LOCAL_WORK_ECB        WAIT FOR WORK TO DO ECB\n         ITRACE ID=WOKEUP\nLOCL0020 DS    0H\n         XC    COMM_LOCAL_WORK_ECB,COMM_LOCAL_WORK_ECB\nLOCL0030 DS    0H\n         SR    R1,R1\nLOCL0040 DS    0H\n         ICM   R2,15,COMM_LOCAL_URL_QUEUE\n         BZ    LOCL0010\n         CS    R2,R1,COMM_LOCAL_URL_QUEUE\n         BC    4,LOCL0040\n         ITRACE ID=HAVEQ,                     WE HAVE THE QUEUE        +\n               RDATA1=R2                      .. FIRST (LAST) BLOCK\n         LR    R3,R2                          COPY ADDRESS\n         LA    R1,4                           INITIALIZE GETMAIN LENGTH\nLOCL0050 DS    0H\n         ICM   R3,15,WEBURL_NEXT-WEBURL(R3)\n         BZ    LOCL0060                       NEXT BLOCK'S ADDRESS\n         ITRACE ID=VEC1,                                               +\n               RDATA1=R3,                                              +\n               RDATA2=R1\n         LA    R1,4(R1)                       ADD TO VECTOR LENGTH\n         B     LOCL0050                       LOOP\nLOCL0060 DS    0H\n         ITRACE ID=GETVEC,                                             +\n               RDATA1=R1                      .. SIZE OF VECTOR LIST\n         ST    R1,WORK_VECTOR_SIZE            SAVE VECTOR SIZE\n         GETMAIN RU,                          GETMAIN STORAGE          +\n               LV=(1),                                                 +\n               LOC=ANY\n         ST    R1,WORK_VECTOR_ADDRESS         SAVE VECTOR ADDRESS\n         ITRACE ID=VECADDR,                                            +\n               RDATA1=R1                      .. VECTOR ADDRESS\nLOCL0070 DS    0H\n         ITRACE ID=BLDVEC,                                             +\n               RDATA1=R1,                     .. CURRENT IN VECTOR     +\n               RDATA2=R2                      .. WEBURL'S ADDRESS\n         ST    R2,0(R1)                       SET ADDRESS\n         ST    R1,WORK_VECTOR_CURRENT\n         LA    R1,4(R1)                       NEXT\n         ICM   R2,15,WEBURL_NEXT-WEBURL(R2)\n         BNZ   LOCL0070\n*---------------------------------------------------------------------*\n*                                                                     *\n*        Process the URLs                                             *\n*                                                                     *\n*     1) TAKESOCKET                                                   *\n*     2) Determine which URL was entered                              *\n*     3) send output to user                                          *\n*     4) SHUTDOWN the SOCKET                                          *\n*     5) CLOSE the SOCKET                                             *\n*     6) Flag the URL complete                                        *\n*     7) Queue the completed URL back to HTTPWEB                      *\n*     8) Check for more work                                          *\n*                                                                     *\n*---------------------------------------------------------------------*\nLOCL0080 DS    0H\n         L     R1,WORK_VECTOR_CURRENT\n         L     R9,0(R1)                       WEBURL'S ADDRESS\n         USING WEBURL,R9                      DEFINE BASE\n         USING URL,WEBURL_URL\n         ITRACE ID=TAKESOCK,                                           +\n               DATA1=(WEBURL_SOCKET,8),                                +\n               DATA2=(WEBURL_ID,8)\n         MVC   WORK_TCPIP_FUNCTION,C_TAKESOCKET\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=TAKESOCKET,                                       +\n               SOCRECV=WEBURL_SOCKET,                                  +\n               CLIENT=WEBURL_FROM_CLIENT,                              +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK,                                   +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE\n         WAIT  ECB=WORK_TCPIP_ECB\n         ITRACE ID=TAKE_RC,                                            +\n               DATA1=(WORK_TCPIP_RETURN_CODE,8),                       +\n               DATA2=(WORK_TCPIP_ERROR_NUMBER,8)\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         MVC   WORK_SOCKET,WORK_TCPIP_RETURN_CODE+2\n         ITRACE ID=HAVESOCK,                                           +\n               DATA1=WORK_SOCKET\n         OI    WEBURL_STATUS,$URL_PROCESS\n         CLI   URL_TEXT,C'S'                  STATUS?\n         BE    LOCL0200\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*     Process \"TRACE\" requests.                                       *\n*                                                                     *\n*     Send the user the internal trace table                          *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nLOCL0110 DS    0H\n         ITRACE ID=TRACE\n         MVC   WORK_BUFFER(HTTP_200L),HTTP_200\n         MVC   WORK_BUFFER+HTTP_200L(HTML_STARTL),HTML_START\n         MVC   WORK_BUFFER+HTTP_200L+HTML_STARTL(HTML_CENTER_STARTL),HT+\n               ML_CENTER_START\n         MVC   WORK_BUFFER+HTTP_200L+HTML_STARTL+HTML_CENTER_STARTL(HTM+\n               L_TABLE_STARTL),HTML_TABLE_START\n         MVC   WORK_BUFFER+HTTP_200L+HTML_STARTL+HTML_CENTER_STARTL+HTM+\n               L_TABLE_STARTL(HTML_TRACE_HEADINGL),HTML_TRACE_HEADING\n         LA    R3,HTTP_200L+HTML_STARTL+HTML_CENTER_STARTL+HTML_TABLE_S+\n               TARTL+HTML_TRACE_HEADINGL\n         BAL   R8,WRITE000\n         L     R4,TRACE_FIRST                 FIRST TRACE ENTRY\n         USING TRACE_ENTRY,R4                 DEFINE BASE\n         USING WORK_TRACE,R2\nLOCL0120 DS    0H\n         C     R4,TRACE_LAST                  ALL ENTRIES PROCESSED?\n         BE    LOCL0130                       YES\n         OC    0(TRACE_ENTRY_LENGTH,R4),0(R4)\n         BZ    LOCL0130\n         MVI   WORK_TRACE,X'40'\n         MVC   WORK_TRACE+1(WORK_TRACEL-1),WORK_TRACE\n         MVC   WORK_TRACE_TR,HTML_TR\n         MVC   WORK_TRACE_TD_1,HTML_TD\n         MVC   WORK_TRACE_TD_2,HTML_TD\n         MVC   WORK_TRACE_TD_3,HTML_TD\n         MVC   WORK_TRACE_TD_4,HTML_TD\n         MVC   WORK_TRACE_TD_5,HTML_TD\n         MVC   WORK_TRACE_TD_6,HTML_TD\n         MVC   WORK_TRACE_TD_7,HTML_TD\n         MVC   WORK_TRACE_TD_END_1,HTML_TD_END\n         MVC   WORK_TRACE_TD_END_2,HTML_TD_END\n         MVC   WORK_TRACE_TD_END_3,HTML_TD_END\n         MVC   WORK_TRACE_TD_END_4,HTML_TD_END\n         MVC   WORK_TRACE_TD_END_5,HTML_TD_END\n         MVC   WORK_TRACE_TD_END_6,HTML_TD_END\n         MVC   WORK_TRACE_TD_END_7,HTML_TD_END\n         UNPK  WORK_UNPACK(7),TRACE_ENTRY_TCB(4)\n         TR    WORK_UNPACK(6),C_HEXCHAR\n         MVC   WORK_TRACE_TCB,WORK_UNPACK\n         MVC   WORK_TRACE_MODULE_NAME,TRACE_ENTRY_MODULE_NAME\n         MVC   WORK_TRACE_ID,TRACE_ENTRY_TRACE_ID\n         MVC   WORK_TRACE_DATA_1,TRACE_ENTRY_DATA_1\n         TR    WORK_TRACE_DATA_1,PRINTABLE\n         UNPK  WORK_UNPACK+0(9),TRACE_ENTRY_DATA_1+0(5)\n         UNPK  WORK_UNPACK+8(9),TRACE_ENTRY_DATA_1+4(5)\n         TR    WORK_UNPACK(16),C_HEXCHAR\n         MVC   WORK_TRACE_HEX_1,WORK_UNPACK\n         MVC   WORK_TRACE_DATA_2,TRACE_ENTRY_DATA_2\n         TR    WORK_TRACE_DATA_2,PRINTABLE\n         UNPK  WORK_UNPACK+0(9),TRACE_ENTRY_DATA_2+0(5)\n         UNPK  WORK_UNPACK+8(9),TRACE_ENTRY_DATA_2+4(5)\n         TR    WORK_UNPACK(16),C_HEXCHAR\n         MVC   WORK_TRACE_HEX_2,WORK_UNPACK\n         MVC   WORK_TRACE_TR_END,HTML_TR_END\n         LA    R3,WORK_TRACEL\n         BAL   R8,WRITE000\n         LA    R4,TRACE_ENTRY_LENGTH(R4)\n         B     LOCL0120\nLOCL0130 DS    0H\n         MVC   WORK_BUFFER(HTML_CENTER_ENDL),HTML_CENTER_END\n         MVC   WORK_BUFFER+HTML_CENTER_ENDL(HTML_ENDL),HTML_END\n         LA    R3,HTML_CENTER_ENDL+HTML_ENDL\n         BAL   R8,WRITE000\n         B     LOCL0400\n         DROP  R2,R4\n*---------------------------------------------------------------------*\n*                                                                     *\n*      Process \"STATUS\" requests.                                     *\n*                                                                     *\n*      Information returned is:                                       *\n*         Status of each server space                                 *\n*                                                                     *\n*---------------------------------------------------------------------*\nLOCL0200 DS    0H\n         ITRACE ID=STATUS\n         MVC   WORK_BUFFER(HTTP_200L),HTTP_200\n         MVC   WORK_BUFFER+HTTP_200L(HTML_STARTL),HTML_START\n         MVC   WORK_BUFFER+HTTP_200L+HTML_STARTL(HTML_CENTER_STARTL),HT+\n               ML_CENTER_START\n         LA    R3,HTTP_200L+HTML_STARTL+HTML_CENTER_STARTL\n         BAL   R8,WRITE000\n         MVC   WORK_BUFFER(HTML_SYSTEM_HEADINGL),HTML_SYSTEM_HEADING\n         L     R1,CVTPTR\n         USING CVT,R1\n         MVC   WORK_BUFFER+(HTML_SYSTEM_NAME-HTML_SYSTEM_HEADING)(8),CV+\n               TSNAME\n         LA    R3,HTML_SYSTEM_HEADINGL\n         BAL   R8,WRITE000\n\n         MVC   WORK_BUFFER(HTML_TABLE_STARTL),HTML_TABLE_START\n         LA    R3,HTML_TABLE_STARTL\n         BAL   R8,WRITE000\n\n         MVC   WORK_BUFFER(HTML_STATUS_2L),HTML_STATUS_2\n         MVC   WORK_BUFFER+(HTML_STATUS_2_ITEM_1-HTML_STATUS_2)(8),=C'W+\n               EB PORT'\n         MVC   WORK_BUFFER+(HTML_STATUS_2_VALUE_1-HTML_STATUS_2)(5),COM+\n               M_WEB_PORT_CHAR\n         MVC   WORK_BUFFER+(HTML_STATUS_2_ITEM_2-HTML_STATUS_2)(8),=C'T+\n               CP PORT'\n         MVC   WORK_BUFFER+(HTML_STATUS_2_VALUE_2-HTML_STATUS_2)(5),COM+\n               M_SERVER_PORT_CHAR\n         LA    R3,HTML_STATUS_2L\n         BAL   R8,WRITE000\n\n         LA    R6,TASK_TABLE\n         USING TASK_DSECT,R6\nLOCL0210 DS    0H\n         MVC   WORK_BUFFER(HTML_STATUS_3L),HTML_STATUS_3\n         MVC   WORK_BUFFER+(HTML_STATUS_3_ITEM_1-HTML_STATUS_3)(8),TASK+\n               _NAME\n         MVC   WORK_BUFFER+(HTML_STATUS_3_VALUE_1-HTML_STATUS_3)(8),=C'+\n               ........'\n         MVC   WORK_BUFFER+(HTML_STATUS_3_ITEM_2-HTML_STATUS_3)(8),=C'T+\n               erm ECB'\n         MVC   WORK_BUFFER+(HTML_STATUS_3_VALUE_2-HTML_STATUS_3)(8),=C'+\n               ........'\n         SR    R1,R1\n         IC    R1,TASK_ID\n         EX    R1,TASK_TM\n         BNO   LOCL0230\n         MVC   WORK_BUFFER+(HTML_STATUS_3_VALUE_1-HTML_STATUS_3)(8),=C'+\n               Attached'\n         SR    R1,R1\n         ICM   R1,3,TASK_ECB_OFFSET\n         AR    R1,R11\n         TM    0(R1),X'40'\n         BNO   LOCL0220\n         MVC   WORK_BUFFER+(HTML_STATUS_3_VALUE_1-HTML_STATUS_3)(10),=C+\n               'Terminated'\nLOCL0220 DS    0H\n         UNPK  WORK_UNPACK(9),0(5,R1)\n         TR    WORK_UNPACK,C_HEXCHAR\n         MVC   WORK_BUFFER+(HTML_STATUS_3_VALUE_2-HTML_STATUS_3)(8),WOR+\n               K_UNPACK\nLOCL0230 DS    0H\n         SR    R1,R1\n         ICM   R1,3,TASK_WORK_OFFSET\n         AR    R1,R11\n         L     R1,0(R1)\n         MVC   WORK_BUFFER+(HTML_STATUS_3_ITEM_3-HTML_STATUS_3)(13),=C'+\n               Last TRACE ID'\n         MVC   WORK_BUFFER+(HTML_STATUS_3_VALUE_3-HTML_STATUS_3)(8),TRA+\n               CE_ID-WORKAREA(R1)\n         LA    R3,HTML_STATUS_3L\n         BAL   R8,WRITE000\n\n         LA    R6,TASK_DSECTL(R6)\n         CLI   0(R6),X'FF'\n         BNE   LOCL0210\n\n         MVC   WORK_BUFFER(HTML_TABLE_ENDL),HTML_TABLE_END\n         LA    R3,HTML_TABLE_ENDL\n         BAL   R8,WRITE000\n\n         MVC   WORK_BUFFER(HTML_TRACE_STATUSL),HTML_TRACE_STATUS\n         MVC   WORK_BUFFER+(HTML_TRACE_STATUS_STATUS-HTML_TRACE_STATUS)+\n               (3),=C'Off'\n         TM    X_TRACE_FLAG,$X_TRACE_ON\n         BNO   LOCL0240\n         MVC   WORK_BUFFER+(HTML_TRACE_STATUS_STATUS-HTML_TRACE_STATUS)+\n               (3),=C'On '\nLOCL0240 DS    0H\n         LA    R3,HTML_TRACE_STATUSL\n         BAL   R8,WRITE000\n*---------------------------------------------------------------------*\n*     Process remote servers                                          *\n*---------------------------------------------------------------------*\n         ICM   R7,15,COMM_SERVERS\n         BZ    LOCL0330\n         USING SERVBLOK,R7\nLOCL0300 DS    0H\n         MVC   WORK_BUFFER(HTML_SERVER_HEADINGL),HTML_SERVER_HEADING\n         MVC   WORK_BUFFER+(HTML_SERVER_HEADING_NAME-HTML_SERVER_HEADIN+\n               G)(L'HTML_SERVER_HEADING_NAME),PARTNER_CLIENT_NAME\n         MVC   WORK_BUFFER+(HTML_SERVER_HEADING_TASK-HTML_SERVER_HEADIN+\n               G)(L'HTML_SERVER_HEADING_TASK),PARTNER_CLIENT_TASK\n         MVI   WORK_BUFFER+HTML_SERVER_HEADINGL,$LF\n         LA    R3,HTML_SERVER_HEADINGL+1\n         BAL   R8,WRITE000\n         MVC   WORK_BUFFER(HTML_TABLE_STARTL),HTML_TABLE_START\n         MVI   WORK_BUFFER+(HTML_TABLE_BORDER-HTML_TABLE_START),C'1'\n         LA    R3,HTML_TABLE_STARTL\n         BAL   R8,WRITE000\n\n         MVC   WORK_BUFFER(HTML_STATUS_2L),HTML_STATUS_2\n         MVC   WORK_BUFFER+(HTML_STATUS_2_ITEM_1-HTML_STATUS_2)(12),=C'+\n               Connect date'\n         MVC   WORK_DWORD(4),SERVER_CONNECT_DATE\n         AP    WORK_DWORD(4),P_1900000\n         MVC   WORK_BUFFER+(HTML_STATUS_2_VALUE_1-HTML_STATUS_2)(9),=X'+\n               40202020204B202020'\n         ED    WORK_BUFFER+(HTML_STATUS_2_VALUE_1-HTML_STATUS_2)(9),WOR+\n               k_DWORD\n         MVC   WORK_BUFFER+(HTML_STATUS_2_ITEM_2-HTML_STATUS_2)(12),=C'+\n               Connect time'\n         UNPK  WORK_UNPACK+0(3),SERVER_CONNECT_TIME+0(2)\n         UNPK  WORK_UNPACK+3(3),SERVER_CONNECT_TIME+1(2)\n         UNPK  WORK_UNPACK+6(3),SERVER_CONNECT_TIME+2(2)\n         TR    WORK_UNPACK+0(2),C_HEXCHAR\n         TR    WORK_UNPACK+3(2),C_HEXCHAR\n         TR    WORK_UNPACK+6(2),C_HEXCHAR\n         MVI   WORK_UNPACK+2,C':'\n         MVI   WORK_UNPACK+5,C':'\n         MVC   WORK_BUFFER+(HTML_STATUS_2_VALUE_2-HTML_STATUS_2)(8),WOR+\n               K_UNPACK\n         LA    R3,HTML_STATUS_2L\n         BAL   R8,WRITE000\n\n         MVC   WORK_BUFFER(HTML_STATUS_2L),HTML_STATUS_2\n         MVC   WORK_BUFFER+(HTML_STATUS_2_ITEM_1-HTML_STATUS_2)(12),=C'+\n               Last URL date'\n         MVC   WORK_DWORD(4),SERVER_LAST_DATE\n         AP    WORK_DWORD(4),P_1900000\n         MVC   WORK_BUFFER+(HTML_STATUS_2_VALUE_1-HTML_STATUS_2)(9),=X'+\n               40202020204B202020'\n         ED    WORK_BUFFER+(HTML_STATUS_2_VALUE_1-HTML_STATUS_2)(9),WOR+\n               k_DWORD\n         MVC   WORK_BUFFER+(HTML_STATUS_2_ITEM_2-HTML_STATUS_2)(12),=C'+\n               LAST URL time'\n         UNPK  WORK_UNPACK+0(3),SERVER_LAST_TIME+0(2)\n         UNPK  WORK_UNPACK+3(3),SERVER_LAST_TIME+1(2)\n         UNPK  WORK_UNPACK+6(3),SERVER_LAST_TIME+2(2)\n         TR    WORK_UNPACK+0(2),C_HEXCHAR\n         TR    WORK_UNPACK+3(2),C_HEXCHAR\n         TR    WORK_UNPACK+6(2),C_HEXCHAR\n         MVI   WORK_UNPACK+2,C':'\n         MVI   WORK_UNPACK+5,C':'\n         MVC   WORK_BUFFER+(HTML_STATUS_2_VALUE_2-HTML_STATUS_2)(8),WOR+\n               K_UNPACK\n         LA    R3,HTML_STATUS_2L\n         BAL   R8,WRITE000\n\n         MVC   WORK_BUFFER(HTML_STATUS_2L),HTML_STATUS_2\n         MVC   WORK_BUFFER+(HTML_STATUS_2_ITEM_1-HTML_STATUS_2)(14),=C'+\n               URLs processed'\n         ICM   R1,15,SERVER_URLS\n         BZ    LOCL0310\n         CVD   R1,WORK_DWORD\n         MVC   WORK_BUFFER+(HTML_STATUS_2_VALUE_1-HTML_STATUS_2)(12),=X+\n               '402020206B2020206B202020'\n         ED    WORK_BUFFER+(HTML_STATUS_2_VALUE_1-HTML_STATUS_2)(12),WO+\n               RK_DWORD+3\n         B     LOCL0320\nLOCL0310 DS    0H\n         MVC   WORK_BUFFER+(HTML_STATUS_2_VALUE_1-HTML_STATUS_2)(4),=C'+\n               NONE'\nLOCL0320 DS    0H\n         MVC   WORK_BUFFER+(HTML_STATUS_2_ITEM_2-HTML_STATUS_2)(8),=C'T+\n               ERM ECB'\n         UNPK  WORK_UNPACK(9),SERVER_TERM_ECB(5)\n         TR    WORK_UNPACK(8),C_HEXCHAR\n         MVC   WORK_BUFFER+(HTML_STATUS_2_VALUE_2-HTML_STATUS_2)(8),WOR+\n               K_UNPACK\n         LA    R3,HTML_STATUS_2L\n         BAL   R8,WRITE000\n\n         MVC   WORK_BUFFER(HTML_TABLE_ENDL),HTML_TABLE_END\n         LA    R3,HTML_TABLE_ENDL\n         BAL   R8,WRITE000\n\n         MVC   WORK_BUFFER(HTML_SPACEL),HTML_SPACE\n         LA    R3,HTML_SPACEL\n         BAL   R8,WRITE000\n\n         ICM   R7,15,SERVER_NEXT\n         BNZ   LOCL0300\n         B     LOCL0340\nLOCL0330 DS    0H\n         ITRACE ID=NOSERVER\n         MVC   WORK_BUFFER(MSG02L),MSG02\n         LA    R3,MSG02L\n         BAL   R8,WRITE000\n\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nLOCL0340 DS    0H\n         MVC   WORK_BUFFER(HTML_CENTER_ENDL),HTML_CENTER_END\n         MVC   WORK_BUFFER+HTML_CENTER_ENDL(HTML_ENDL),HTML_END\n         LA    R3,HTML_CENTER_ENDL+HTML_ENDL\n         BAL   R8,WRITE000\n         B     LOCL0400\n*---------------------------------------------------------------------*\n*                                                                     *\n*     Output has been sent                                            *\n*     SHUTDOWN the SOCKET                                             *\n*     CLOSE the socket                                                *\n*     Flag the URL's status (complete)                                *\n*     Put the WEBURL on the HTTPWEB's work queue for final clean-up   *\n*                                                                     *\n*---------------------------------------------------------------------*\nLOCL0400 DS    0H\n         MVC   WORK_TCPIP_FUNCTION,C_SHUTDOWN\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         ITRACE ID=SHUTDOWN,                                           +\n               RDATA1=R9,                                              +\n               DATA2=(WEBURL_ID,8)\n         EZASMI TYPE=SHUTDOWN,                                         +\n               S=WORK_SOCKET,                                          +\n               HOW=2,                                                  +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         MVC   WORK_TCPIP_FUNCTION,C_CLOSE\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         ITRACE ID=CLOSE\n         EZASMI TYPE=CLOSE,                                            +\n               S=WORK_SOCKET,                                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         OI    WEBURL_STATUS,$URL_COMPLETE\n         ITRACE ID=COMPLETE,                                           +\n               RDATA1=R9,                                              +\n               DATA2=(WEBURL_ID,8)\nLOCL0410 DS    0H\n         L     R1,COMM_WEB_COMPLETED\n         ST    R1,WEBURL_NEXT\n         CS    R1,R9,COMM_WEB_COMPLETED\n         BC    4,LOCL0410\n         ITRACE ID=POST_WEB                   WAKE UP HTTPWEB\n         POST  COMM_WEB_WORK_ECB\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      If there are more URLs..                                       *\n*         process the next URL                                        *\n*      If there are no more URLs..                                    *\n*         FREEMAIN this vector                                        *\n*         check for new work on the queue                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R1,WORK_VECTOR_CURRENT         CURRENT ADDRESS IN VECTOR\n         C     R1,WORK_VECTOR_ADDRESS         AT FIRST ENTRY?\n         BE    LOCL0510                       YES\n         SH    R1,C_H4                        BACK UP 1 ENTRY\n         ST    R1,WORK_VECTOR_CURRENT         SAVE CURRENT ADDRESS\n         B     LOCL0080                       PROCESS THIS URL\nLOCL0510 DS    0H\n         L     R0,WORK_VECTOR_SIZE            VECTOR SIZE\n         ITRACE ID=FREEVEC,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                         FREE THE VECTOR          +\n               A=(1),                                                  +\n               LV=(0)\n         B     LOCL0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  At entry                                                           *\n*     R3   Length of data to write                                    *\n*                                                                     *\n*  At exit                                                            *\n*     R2   Address of WORK_BUFFER                                     *\n*     R3   Zero                                                       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWRITE000 DS    0H\n*        ITRACE ID=WRITE,                     UNCOMMENTING THIS\n*              RDATA1=R3,                     WILL RESULT IN A LOT\n*              DATA2=WORK_BUFFER              OF TRACE ENTRIES\n         ST    R3,WORK_WRITE_LENGTH\nWRITE010 DS    0H\n         SR    R0,R0\n         LA    R1,EBCDIC_TO_ASCII\n         LA    R2,WORK_BUFFER\n         L     R3,WORK_WRITE_LENGTH\n         TRE   R2,R1                          TRANSLATE TO ASCII\n         BC    1,WRITE010\n\n         LA    R2,WORK_BUFFER\n         L     R3,WORK_WRITE_LENGTH\nWRITE020 DS    0H\n         MVC   WORK_TCPIP_FUNCTION,C_WRITE\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         ST    R3,WORK_WRITE_LENGTH\n         EZASMI TYPE=WRITE,                                            +\n               S=WORK_SOCKET,                                          +\n               NBYTE=WORK_WRITE_LENGTH,                                +\n               BUF=(R2),                                               +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         TM    WORK_TCPIP_RETURN_CODE,x'80'\n         BO    ERR0010\n         A     R2,WORK_TCPIP_RETURN_CODE\n         S     R3,WORK_TCPIP_RETURN_CODE\n         BH    WRITE020\n         LA    R2,WORK_BUFFER\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE\n         ST    R14,PRT_NEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP PRINT SUBTASK\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=TCP_ERR,                                            +\n               DATA1=(WORK_TCPIP_FUNCTION,8),                          +\n               DATA2=(WORK_TCPIP_ERROR_NUMBER,8)\n         MVC   PRT_MESSAGE_ID(MSG01_L),MSG01\n         MVC   PRT_MESSAGE_ID+(MSG01_FUNCTION-MSG01)(L'MSG01_FUNCTION),+\n               WORK_TCPIP_FUNCTION\n         UNPK  PRT_MESSAGE_ID+(MSG01_RETURN_CODE-MSG01)(9),WORK_TCPIP_R+\n               ETURN_CODE(5)\n         TR    PRT_MESSAGE_ID+(MSG01_RETURN_CODE-MSG01)(8),C_HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG01_RETURN_CODE-MSG01)+8,C' '\n         L     R1,WORK_TCPIP_ERROR_NUMBER\n         CVD   R1,WORK_DWORD\n         ED    PRT_MESSAGE_ID+(MSG01_ERROR_NUMBER-MSG01)(L'MSG01_ERROR_+\n               NUMBER),WORK_DWORD+5\n         BAL   R8,PRT0000\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*        EXIT                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=WORK_AREA_LENGTH\n         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\nTASK_TM  TM    COMM_SUBTASKS,X'00'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LTORG\n\nTASK_TABLE    DS    0C\n         TASKINFO PRINT,                                               +\n               $PRINT_SUBTASK,                                         +\n               COMM_PRINT_TERM_ECB,                                    +\n               COMM_PRINT_WORK_AREA\n         TASKINFO CONSOLE,                                             +\n               $CONSOLE_SUBTASK,                                       +\n               COMM_CONSOLE_TERM_ECB,                                  +\n               COMM_CONSOLE_WORK_AREA\n         TASKINFO LOGGING,                                             +\n               $LOGGING_SUBTASK,                                       +\n               COMM_LOG_TERM_ECB,                                      +\n               COMM_LOG_WORK_AREA\n         TASKINFO WEB,                                                 +\n               $WEB_SUBTASK,                                           +\n               COMM_WEB_TERM_ECB,                                      +\n               COMM_WEB_WORK_AREA\n         TASKINFO TCP,                                                 +\n               $TCP_SUBTASK,                                           +\n               COMM_HTTPTCP_TERM_ECB,                                  +\n               COMM_HTTPTCP_WORK_AREA\n         TASKINFO LOCAL,                                               +\n               $LOCAL_SUBTASK,                                         +\n               COMM_LOCAL_TERM_ECB,                                    +\n               COMM_LOCAL_WORK_AREA\n         DC    X'FF'\n\nC_H4                     DC    H'4'\nP_1900000                DC    P'1900000'\n\nC_HEXCHAR                EQU   *-C'0'\n                         DC    C'0123456789ABCDEF'\n\nC_CLOSE                  DC    CL16'CLOSE'\nC_HTTPLOCL               DC    C'HTTPLOCL'\nC_HTTPMAIN               DC    C'HTTPMAIN'\nC_SHUTDOWN               DC    CL16'SHUTDOWN'\nC_STATUS_URL             DC    C'STATUS'\nC_TAKESOCKET             DC    CL16'TAKESOCKET'\nC_TRACE_URL              DC    C'TRACE.HTML'\nC_WRITE                  DC    CL16'WRITE'\n\nC_WEBURL                 DC    CL8'WEBURL'\n\nLOCAL_URLS               DS    0H\n                         DC    AL2(5),C'TRACE'\n                         DC    AL2(6),C'STATUS'\n                         DC    X'FF'\n\nHTTP_200                 DS    0C\n                         DC    C'HTTP/1.0 200 OK'\n                         DC    AL1($LF)\n                         DC    C'Content-type: text/html'\n                         DC    AL1($LF)\n                         DC    AL1($LF)\n                         DC    AL1($LF)\nHTTP_200L                EQU   *-HTTP_200\nHTML_START               DS    0C\n\n                         DC    C'<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTM+\n                 3.2 Final//EN\">'\n                         DC    AL1($LF)\n                         DC    C'<HTML><BODY BACKGROUND=/GIF1/BACKGND>'\n                         DC    AL1($LF)\nHTML_STARTL              EQU   *-HTML_START\nHTML_SYSTEM_HEADING      DS    0C\n                         DC    C'<H1>'\n                         DC    C'This server is running on '\nHTML_SYSTEM_NAME         DC    CL8' '\n                         DC    C'</H1>'\nHTML_SYSTEM_HEADINGL     EQU   *-HTML_SYSTEM_HEADING\n\nHTML_STATUS_1            DS    0C\n                         DC    C'<TR>'\n                         DC    C'<TD>'\nHTML_STATUS_1_ITEM       DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'<TD>'\nHTML_STATUS_1_VALUE      DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'</TR>'\nHTML_STATUS_1L           EQU   *-HTML_STATUS_1\n\nHTML_STATUS_2            DS    0C\n                         DC    C'<TR>'\n                         DC    C'<TD>'\nHTML_STATUS_2_ITEM_1     DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'<TD>'\nHTML_STATUS_2_VALUE_1    DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'<TD>'\nHTML_STATUS_2_ITEM_2     DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'<TD>'\nHTML_STATUS_2_VALUE_2    DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'</TR>'\nHTML_STATUS_2L           EQU   *-HTML_STATUS_2\n\nHTML_STATUS_3            DS    0C\n                         DC    C'<TR>'\n                         DC    C'<TD>'\nHTML_STATUS_3_ITEM_1     DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'<TD>'\nHTML_STATUS_3_VALUE_1    DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'<TD>'\nHTML_STATUS_3_ITEM_2     DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'<TD>'\nHTML_STATUS_3_VALUE_2    DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'<TD>'\nHTML_STATUS_3_ITEM_3     DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'<TD>'\nHTML_STATUS_3_VALUE_3    DC    CL20' '\n                         DC    C'</TD>'\n                         DC    C'</TR>'\nHTML_STATUS_3L           EQU   *-HTML_STATUS_3\n\nHTML_TRACE_STATUS        DS    0C\n                         DC    C'<BR>'\n                         DC    C'<H3>External trace is '\nHTML_TRACE_STATUS_STATUS DC    CL3' '\n                         DC    C'</H3>'\n                         DC    C'<BR>'\n                         DC    C'<h3>External servers</h3>'\nHTML_TRACE_STATUSL       EQU   *-HTML_TRACE_STATUS\n\nHTML_CENTER_START        DS    0C\n                         DC    C'<CENTER>'\nHTML_CENTER_STARTL       EQU   *-HTML_CENTER_START\nHTML_CENTER_END          DS    0C\n                         DC    C'</CENTER>'\nHTML_CENTER_ENDL         EQU   *-HTML_CENTER_END\nHTML_END                 DS    0C\n                         DC    C'</BODY>'\n                         DC    AL1($LF)\n                         DC    C'</HTML>'\nHTML_ENDL                EQU   *-HTML_END\nHTML_TRACE_HEADING       DS    0C\n                         DC    C'<TH>'\n                         DC    C'<TR>'\n                         DC    C'<TD>TCB ADDR</TD>'\n                         DC    C'<TD>MODULE</TD>'\n                         DC    C'<TD>ID</TD>'\n                         DC    C'<TD>DATA1</TD>'\n                         DC    C'<TD>DATA2</TD>'\n                         DC    C'<TD>HEX1</TD>'\n                         DC    C'<TD>HEX2</TD>'\n                         DC    C'</TR>'\n                         DC    C'</TH>'\n                         DC    AL1($LF)\nHTML_TRACE_HEADINGL      EQU   *-HTML_TRACE_HEADING\n\nHTML_SERVER_HEADING      DS    0C\n                         DC    C'Server with partner name '\nHTML_SERVER_HEADING_NAME DC    CL8' '\n                         DC    C'  task '\nHTML_SERVER_HEADING_TASK DC    CL8' '\n                         DC    C'<BR>'\nHTML_SERVER_HEADINGL     EQU   *-HTML_SERVER_HEADING\n\nHTML_TABLE_START         DS    0C\n                         DC    C'<TABLE BORDER='\nHTML_TABLE_BORDER        DC    C'0'\n                         DC    C'>'\n                         DC    AL1($LF)\nHTML_TABLE_STARTL        EQU   *-HTML_TABLE_START\nHTML_TABLE_END           DS    0C\n                         DC    C'</TABLE>'\n                         DC    AL1($LF)\nHTML_TABLE_ENDL          EQU   *-HTML_TABLE_END\nHTML_TD                  DC    C'<TD>'\nHTML_TD_END              DC    C'</TD>'\nHTML_TR                  DC    C'<TR>'\nHTML_TR_END              DC    C'</TR>'\n\nHTML_SPACE               DS    0C\n                         DC    C'<BR>'\nHTML_SPACEL              EQU   *-HTML_SPACE\n\nMSG01                    DS    0C\n                         DC    CL15'HTTPTCP01I'\n                         DC    C'TCP/IP function '\nMSG01_FUNCTION           DC    CL16' '\n                         DC    C'  return code: '\nMSG01_RETURN_CODE        DC    CL8' '\n                         DC    C'  error number:'\nMSG01_ERROR_NUMBER       DC    X'402020202120'\nMSG01_L                  EQU   *-MSG01\nMSG02                    DC    C'No servers are active'\n                         DC    AL1($LF)\nMSG02L                   EQU   *-MSG02\n\nPRINTABLE                DS    0C   0 1 2 3 4 5 6 7 8 9 A B C D E F\n                         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 0\n                         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 1\n                         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 2\n                         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' 3\n                         DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F' 4\n                         DC    X'4B4B4B4B4B4B4B4B4B4B5A5B5C5D5E5F' 5\n                         DC    X'60614B4B4B4B4B4B4B4B4B6B6C6D6E6F' 6\n                         DC    X'4B4B4B4B4B4B4B4B4B797A7B7C7D7E7F' 7\n                         DC    X'4B8182838485868788894B4B4B4B4B4B' 8\n                         DC    X'4B9192939495969798994B4B4B4B4B4B' 9\n                         DC    X'4B4BA2A3A4A5A6A7A8A94B4B4B4B4B4B' A\n                         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B' B\n                         DC    X'4BC1C2C3C4C5C6C7C8C94B4B4B4B4B4B' C\n                         DC    X'4BD1D2D3D4D5D6D7D8D94B4B4B4B4B4B' D\n                         DC    X'4BE1E2E3E4E5E6E7E8E94B4B4B4B4B4B' E\n                         DC    X'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B' F\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WORK AREAS                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA                 DSECT\n                         STDSAVE DSECT=NO\nWORK_DWORD               DS   D\nWORK_WRITE_LENGTH        DS   F\nWORK_VECTOR_SIZE         DS   F       ADDRESS VECTOR SIZE\nWORK_VECTOR_ADDRESS      DS   A       ADDRESS OF ADDRESS VECTOR\nWORK_VECTOR_CURRENT      DS   A       CURRENT ADDRESS IN ADDRESS VECTOR\n\nWORK_MAX_SOCKET          DS   F\nWORK_TCPIP_RETURN_CODE   DS   F\nWORK_TCPIP_ERROR_NUMBER  DS   F\nWORK_TCPIP_ECB           DS   F\n                         DS   XL100\n\nWORK_SOCKET              DS   H\n\nWORK_RC                  DS   H\n\nWORK_TCPIP_FUNCTION      DS   CL16\n\nWORK_UNPACK              DS   CL16\n                         DS   X\n\n* ------------------------------------------------------------------- *\nWORK_TRACE            DS  0C\n\nWORK_TRACE_TR         DS  CL4\n\nWORK_TRACE_TD_1       DS  CL4\nWORK_TRACE_TCB        DS  CL6\nWORK_TRACE_TD_END_1   DS  CL5\n\nWORK_TRACE_TD_2       DS  CL4\nWORK_TRACE_MODULE_NAME DS CL5\nWORK_TRACE_TD_END_2   DS  CL5\n\nWORK_TRACE_TD_3       DS  CL4\nWORK_TRACE_ID         DS  CL8\nWORK_TRACE_TD_END_3   DS  CL5\n\nWORK_TRACE_TD_4       DS  CL4\nWORK_TRACE_DATA_1     DS  CL8\nWORK_TRACE_TD_END_4   DS  CL5\n\nWORK_TRACE_TD_5       DS  CL4\nWORK_TRACE_DATA_2     DS  CL8\nWORK_TRACE_TD_END_5   DS  CL5\n\nWORK_TRACE_TD_6       DS  CL4\nWORK_TRACE_HEX_1      DS  CL16\nWORK_TRACE_TD_END_6   DS  CL5\n\nWORK_TRACE_TD_7       DS  CL4\nWORK_TRACE_HEX_2      DS  CL16\nWORK_TRACE_TD_END_7   DS  CL5\n\nWORK_TRACE_TR_END     DS  CL5\nWORK_TRACEL           EQU *-WORK_TRACE\n* ------------------------------------------------------------------- *\n\n                      PRTBLOK DSECT=NO\nWORK_TCPIP_TASK       EZASMI TYPE=TASK,STORAGE=CSECT\n\n\nWORK_BUFFER           DS  (URL_BUFFER_SIZE)X\n\nWORK_AREA_LENGTH      EQU *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      COMMON MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      WEBURL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      URL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      SERVBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDETAIL           DSECT\nDETAIL_TR        DS    CL4\nDETAIL_TD_1      DS    CL4\nDETAIL_FIELD_1   DS    CL18\n                 DS    CL2\nDETAIL_VALUE_1   DS    CL18\nDETAIL_TD_1E     DS    CL5\nDETAIL_TD_2      DS    CL4\nDETAIL_FIELD_2   DS    CL18\n                 DS    CL2\nDETAIL_VALUE_2   DS    CL18\nDETAIL_TD_2E     DS    CL5\nDETAIL_TRE       DS    CL4\nDETAIL_BR        DS    CL4\nDETAILL          EQU   *-DETAIL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTASK_DSECT       DSECT\nTASK_NAME        DS    CL8\nTASK_ID          DS    X\nTASK_ECB_OFFSET  DS    AL2\nTASK_WORK_OFFSET DS    AL2\nTASK_DSECTL      EQU   *-TASK_DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                 CVT   DSECT=YES,LIST=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n$CR              EQU   X'0D'\n$LF              EQU   X'0A'\n                 COPY  REGEQU\n         END  HTTPLOCL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HTTPLOG": {"ttr": 3339, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x18\\x00S\\x01\\x04)?\\x01\\x07$\\x0f\\x16\\x04\\x00\\xb7\\x01\\x15\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.24", "flags": 0, "createdate": "2004-10-19T00:00:00", "modifydate": "2007-08-28T16:04:53", "lines": 183, "newlines": 277, "modlines": 0, "user": "RLRICE"}, "text": "         TITLE 'HTTPLOG    PRINT SUBTASK'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPLOG                                               *\n*                                                                     *\n*   This subtask performs logging for the HTTP main address space.    *\n*                                                                     *\n*   The HTTP server is designed to run as multiple address spaces.    *\n*   The server address spaces can request information to be written   *\n*   to the main address space's log.  This allows main address space  *\n*   and all the server spaces to have a common log of events.         *\n*                                                                     *\n*   A secondary use is that server spaces can use the log for         *\n*   debugging.                                                        *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPLOG  CSECT\nHTTPLOG  AMODE 31\nHTTPLOG  RMODE ANY\n         USING HTTPLOG,R12                    DEFINE BASE\n         USING HTTPCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                CHAIN REGISTERS\n         LR    R12,R15                        COPY ENTRY POINT ADDRESS\n         B     LOG0000\n         DC    CL8'HTTPLOG'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nLOG0000  DS    0H\n         L     R11,0(R1)                      LOAD HTTPCOMM'S ADDRESS\n         ST    R12,COMM_HTTPLOG_ADDRESS\n         GETMAIN RU,                          STORAGE FOR WORK AREA    +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=BELOW\n         ST    R13,4(R1)                      CHAIN PREVIOUS AREA\n         ST    R1,8(R13)                      CHAIN OUR AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORKAREA,R13\n         ST    R13,COMM_LOG_WORK_AREA\n         ITRACE ID=INIT\n         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE DCB\n         MVC   WORK_OC_PARMS(OPENL),OPENI\n         OPEN  (WORK_DCB,OUTPUT),                                      +\n               MF=(E,WORK_OC_PARMS),                                   +\n               MODE=31\n         B     LOG0030                        FORCE A CHECK OF QUEUE\nLOG0010  DS    0H\n         TM    COMM_EOJ,$EOJ_PHASE_3          SHUTDOWN PHASE 3?\n         BO    EXIT0000                       YES.. IT'S MILLER TIME\n         TM    COMM_LOG_WORK_ECB,X'40'        ECB ALREADY POSTED?\n         BO    LOG0020                        GET BUSY\n         ITRACE ID=WORKWAIT                   WAITING FOR WORK\n         WAIT  ECB=COMM_LOG_WORK_ECB          WAIT FOR WORK TO DO ECB\n         ITRACE ID=WOKEUP\nLOG0020  DS    0H\n         XC    COMM_LOG_WORK_ECB,COMM_LOG_WORK_ECB\nLOG0030  DS    0H\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R2,15,COMM_LOG_QUEUE\n         BZ    LOG0010\n         CS    R2,R1,COMM_LOG_QUEUE\n         BC    4,LOG0030\n         USING LOGBLOK,R10                    DEFINE BASE\n         ITRACE ID=HAVEQ,                     WE HAVE THE QUEUE        +\n               RDATA1=R2                      .. FIRST (LAST) BLOCK\n         LR    R3,R2                          COPY ADDRESS\n         LA    R1,4                           INITIALIZE GETMAIN LENGTH\nLOG0050  DS    0H\n         ICM   R3,15,LOG_NEXT-LOGBLOK(R3)\n         BZ    LOG0060                        NEXT BLOCK'S ADDRESS\n         ITRACE ID=VEC1,                                               +\n               RDATA1=R3,                                              +\n               RDATA2=R1\n         LA    R1,4(R1)                       ADD TO VECTOR LENGTH\n         B     LOG0050                        LOOP\nLOG0060  DS    0H\n         ITRACE ID=GETVEC,                                             +\n               RDATA1=R1                      .. SIZE OF VECTOR LIST\n         ST    R1,WORK_VECTOR_SIZE            SAVE VECTOR SIZE\n         GETMAIN RU,                          GETMAIN STORAGE          +\n               LV=(1),                                                 +\n               LOC=ANY\n         ST    R1,WORK_VECTOR_ADDRESS         SAVE VECTOR ADDRESS\n         ITRACE ID=VECADDR,                                            +\n               RDATA1=R1                      .. VECTOR ADDRESS\nLOG0070  DS    0H\n         ITRACE ID=BLDVEC,                                             +\n               RDATA1=R1,                     .. CURRENT IN VECTOR     +\n               RDATA2=R2                      .. LOGBLOK'S ADDRESS\n         ST    R2,0(R1)                       SET ADDRESS\n         ST    R1,WORK_VECTOR_CURRENT\n         LA    R1,4(R1)                       NEXT\n         ICM   R2,15,LOG_NEXT-LOGBLOK(R2)\n         BNZ   LOG0070\nLOG0080  DS    0H\n         L     R1,WORK_VECTOR_CURRENT\n         L     R10,0(R1)                      LOGBLOK'S ADDRESS\n         PUT   WORK_DCB,LOG_DATA_LENGTH\n         LH    R0,LOG_DATA_LENGTH\n         AH    R0,=Y(LOGBLOKL)\n         ITRACE ID=FREELOG,                                            +\n               RDATA1=R10,                                             +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(R10),                                                +\n               LV=(0)\n         L     R1,WORK_VECTOR_CURRENT         CURRENT ADDRESS IN VECTOR\n         C     R1,WORK_VECTOR_ADDRESS         AT FIRST ENTRY?\n         BE    LOG0210                        YES\n         SH    R1,H4                          BACK UP 1 ENTRY\n         ST    R1,WORK_VECTOR_CURRENT         SAVE CURRENT ADDRESS\n         B     LOG0080                        PROCESS THIS LOGBLOK\nLOG0210  DS    0H\n         L     R0,WORK_VECTOR_SIZE            VECTOR SIZE\n         ITRACE ID=FREEVEC,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                         FREE THE VECTOR          +\n               A=(1),                                                  +\n               LV=(0)\n         B     LOG0020\n* ------------------------------------------------------------------- *\n*        EXIT                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         MVC   WORK_OC_PARMS(CLOSEL),CLOSEI   COPY CLOSE LIST FORM\n         CLOSE WORK_DCB,                      CLOSE DCB                +\n               MF=(E,WORK_OC_PARMS),                                   +\n               MODE=31\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORK_AREA_LENGTH\n         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH4       DC    H'4'\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=LOG,                                             +\n               RECFM=VB,                                               +\n               LRECL=32000,                                            +\n               BLKSIZE=32004,                                          +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WORK AREAS                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA              DSECT\n                      STDSAVE DSECT=NO\nWORK_DCB              DS  0A,(DCBL)X RESERVE SPACE FOR DCB\nWORK_OC_PARMS         DS  (OPENL)X\nWORK_VECTOR_ADDRESS   DS  A\nWORK_VECTOR_SIZE      DS  A\nWORK_VECTOR_CURRENT   DS  A\nWORK_AREA_LENGTH      EQU *-WORKAREA\n* ------------------------------------------------------------------- *\n*              COMMON DATA MAP                                        *\n* ------------------------------------------------------------------- *\n                      COMMON MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*              LOG REQUEST BLOCK                                      *\n* ------------------------------------------------------------------- *\n               LOGBLOK\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  HTTPLOG\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPMAIN": {"ttr": 3587, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x02\\x01\\x04$_\\x01\\x072?\\x17\\x08\\x01\\xb4\\x04\\xbd\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2007-11-19T17:08:02", "lines": 436, "newlines": 1213, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: HTTPMAIN                                                     *\n*                                                                     *\n*  PURPOSE: HTTP MAINLINE                                             *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*   1) Obtain storage for work area(s)                                *\n*   2) LOAD the common area (HTTPCOMM)                                *\n*   3) Initialize fields in the common area                           *\n*   4) LOAD and link to HTTPINIT                                      *\n*   5) If errors were detected by HTTPINIT, clean up and exit         *\n*   6) WAIT for an event                                              *\n*        . connect or loss of a server space                          *\n*        . STOP command from the console                              *\n*                                                                     *\n*   Connect of a server..                                             *\n*     . HTTPTCP will have built a SERVBLOK                            *\n*       and added it to the chain anchored at COMM_NEW_SERVERS        *\n*     . ATTACH an HTTPSERV subtask                                    *\n*                                                                     *\n*   Loss of a server                                                  *\n*     . Remove any URLs in the URL dataspace for this server          *\n*     . Move any WEBURL blocks to HTTPLOCL's queue                    *\n*     . Remove the SERVBLOK from the chain anchored at COMM_SERVERS.  *\n*     . DETACH the HTTPSERV subtask                                   *\n*                                                                     *\n*                                                                     *\n*   STOP from the console                                             *\n*     . LOAD and link to HTTPTERM                                     *\n*     . FREEMAIN the trace table                                      *\n*     . DELETE the common data area (HTTPCOMM)                        *\n*     . FREEMAIN the work area                                        *\n*     . exit                                                          *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPMAIN CSECT\nHTTPMAIN AMODE 31\nHTTPMAIN RMODE ANY\n         USING HTTPMAIN,R12                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPMAIN'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R6,0(R1)                       ADDRESS OF PARM\n* ------------------------------------------------------------------- *\n*        ACQUIRE STORAGE FOR WORK AREAS                               *\n* ------------------------------------------------------------------- *\n         L     R3,DXD_SIZE                    WORK AREA SIZE\n         GETMAIN RU,                          ACQUIRE WORK AREA        +\n               LV=(R3),                       .. WORK AREA SIZE        +\n               LOC=ANY                        .. MAY BE ABOVE OR BELOW\n         LR    R4,R1                          COPY STORAGE ADDRESS\n         LR    R10,R1                         COPY STORAGE ADDRESS\n         LR    R2,R1                          COPY WORK AREA ADDRESS\n         SR    R1,R1                          CLEAR REGISTER\n         MVCL  R2,R0                          CLEAR WORK AREA\n         A     R10,DXD_ADDRESS                PLUS DISPLACEMENT\n         USING DXDMAIN,R10                    DEFINE WORK AREA BASE\n         MVC   DXD_ID,MODID                   IDENTIFY WORK AREA OWNER\n         LA    R2,REGISTER_SAVE_AREA          SAVE AREA ADDRESS\n         ST    R13,4(R2)                      CHAIN CALLER'S SAVE AREA\n         ST    R2,8(R13)                      OUR SAVE AREA TO CALLER'S\n         LR    R13,R2                         SET SAVE AREA ADDRESS\n         MVC   PRT_EYE,PRT_ID                 IDENTIFY CONTROL BLOCK\n* ------------------------------------------------------------------- *\n*        Load common data         (HTTPCOMM)                          *\n* ------------------------------------------------------------------- *\n         LOAD  EP=HTTPCOMM                    LOAD COMMON DATA MODULE\n         LR    R11,R0                         COPY TO PERMANENT BASE\n         USING HTTPCOMM,R11                   DEFINE COMMON AREA BASE\n         ST    R12,COMM_HTTPMAIN_ADDRESS\n         ST    R4,COMM_DXD_ADDRESS            SET WORK AREA ADDRESS\n         MVC   COMM_HTTPDAIR_ADDRESS,V_HTTPDAIR\n         MVI   PRT_COMMAND,$PRT_PRINT\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R0,COMM_TERMINATION_ECB\n         ST    R0,DXD_ECB_1\n         LA    R0,COMM_MAIN_WORK_ECB\n         ST    R0,DXD_ECB_2\n         OI    DXD_ECB_2,X'80'\n         XC    COMM_MAIN_WORK_ECB,COMM_MAIN_WORK_ECB\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LOAD  EP=HTTPINIT\n         LR    R15,R0\n         BALR  R14,R15\n         DELETE EP=HTTPINIT\n         TM    COMM_FLAGS,$COMM_ABORT\n         BO    TERM0000\n* ------------------------------------------------------------------- *\n*   At the present time there is no work to do.                       *\n*                                                                     *\n*   The number of ECBs we need to WAIT on varies.                     *\n*   The main task waits for:                                          *\n*                                                                     *\n*    Since the number of users can vary, the number of ECBs can also  *\n*    vary.  There are always the ECBs for the ATTENTION exit and the  *\n*    termination ECB (POSTed by HTTPCONS).                            *\n* ------------------------------------------------------------------- *\nPROC0000 DS    0H\n         ITRACE ID=WAIT\n         WAIT  1,ECBLIST=DXD_WAIT\n         TM    COMM_TERMINATION_ECB,X'40'\n         BO    TERM0000\n         XC    COMM_MAIN_WORK_ECB,COMM_MAIN_WORK_ECB\n* ------------------------------------------------------------------- *\n*        Attach HTTPSERV subtask for any new servers                  *\n* ------------------------------------------------------------------- *\n         ITRACE ID=NEW,                                                +\n               DATA1=(COMM_NEW_SERVERS,8)\n         ICM   R7,15,COMM_NEW_SERVERS\n         BZ    PROC0040\nPROC0010 DS    0H\n         SR    R1,R1\n         L     R7,COMM_NEW_SERVERS\n         CS    R7,R1,COMM_NEW_SERVERS\n         BC    4,PROC0010\n         USING SERVBLOK,R7\n         LTR   R7,R7                          SERVBLOK ADDRESS PRESENT?\n         BZ    PROC0040                       NO\nPROC0020 DS    0H\n         MVC   DXD_ATTACH(ATTACHL),ATTACHI\n         LA    R2,SERVER_TERM_ECB             TERMINATION ECB'S ADDRESS\n         LA    R3,DXD_ATTACH_PARM             PARM LIST ADDRESS\n         ITRACE ID=ATCHSERV                   ATTACHING HTTPSERV\n         ATTACH EP=HTTPSERV,                  ATTACH SERVER SUBTASK    +\n               PARAM=((R7)),                  .. PARAMETER IS SERVBLOK +\n               ECB=(R2),                      .. TERMINATION ECB       +\n               PURGE=QUIESCE,                 .. FINISH UP I/O         +\n               MF=(E,(R3)),                   .. PARM LIST             +\n               SF=(E,DXD_ATTACH)              ..\n         LTR   R15,R15                        ATTACH SUCCESSFUL?\n         BNZ   ERR0010                        NO\n         ST    R1,SERVER_TCB                  SET TCB'S ADDRESS\n         ITRACE ID=NEWSERV,                   NEW SUBTASK IS ACTIVE    +\n               RDATA1=R1                      .. TCB ADDRESS\n         MVC   PRT_MESSAGE_ID(MSG08L),MSG08\n         MVC   PRT_MESSAGE_ID+(MSG08TSK-MSG08)(L'MSG08TSK),SERVER_SUBTA+\n               SK\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n         LR    R2,R7                          COPY SERVBLOK ADDRESS\n         L     R7,SERVER_NEXT\nPROC0030 DS    0H\n         L     R1,COMM_SERVERS\n         ST    R1,SERVER_NEXT-SERVBLOK(,R2)\n         CS    R1,R2,COMM_SERVERS\n         BC    4,PROC0030\n         ITRACE ID=NEXT_NEW,                                           +\n               RDATA1=R7\n         LTR   R7,R7\n         BNZ   PROC0020                       PROCESS NEXT SERVER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPROC0040 DS    0H\n         ICM   R7,15,COMM_LOST_SERVERS        ANY LOST SERVERS?\n         BZ    PROC0000                       NO\nPROC0050 DS    0H\n         SR    R1,R1\n         L     R7,COMM_LOST_SERVERS\n         CS    R7,R1,COMM_LOST_SERVERS\n         BC    4,PROC0050\nPROC0060 DS    0H\n         ITRACE ID=LOST,                                               +\n               RDATA1=R7\n         WAIT  ECB=SERVER_TERM_ECB            WAIT FOR TERMINATION\n         MVC   PRT_MESSAGE_ID(MSG09L),MSG09\n         MVC   PRT_MESSAGE_ID+(MSG09TCB-MSG09)(L'MSG09TCB),SERVER_SUBTA+\n               SK\n         MVC   PRT_MESSAGE_ID+(MSG09NAME-MSG09)(L'MSG09NAME),PARTNER_CL+\n               IENT_NAME\n         MVC   PRT_MESSAGE_ID+(MSG09TASK-MSG09)(L'MSG09TASK),PARTNER_CL+\n               IENT_TASK\n         BAL   R8,PRT0000                     PRINT THE MESSAGE\n* ------------------------------------------------------------------- *\n*   DETACH the subtask                                                *\n* ------------------------------------------------------------------- *\n         WAIT   ECB=SERVER_TERM_ECB           WAIT FOR SUBTASK\n         ITRACE ID=DETACH,                                             +\n               RDATA1=R7,                                              +\n               DATA2=(SERVER_TCB,8)\n         DETACH SERVER_TCB                    DETACH SUBTASK\n* ------------------------------------------------------------------- *\n*   Free URLs queued to server                                        *\n* ------------------------------------------------------------------- *\n         ICM   R2,15,SERVER_URL               1ST URL\n         BZ    PROC0080                       NONE\nPROC0070 DS    0H\n         L     R3,WEBURL_NEXT-WEBURL(R2)\n         L     R0,WEBURL_LENGTH-WEBURL(R2)    LENGTH OF THIS URL\n         ITRACE ID=FREE_URL,                                           +\n               RDATA1=R2,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(R2),                                                 +\n               LV=(0)\n         LTR   R2,R3                          COPY NEXT URL ADDRESS\n         BNZ   PROC0070                       LOOP\n* ------------------------------------------------------------------- *\n*        FREEMAIN the SERVBLOK                                        *\n* ------------------------------------------------------------------- *\nPROC0080 DS    0H\n         LR    R1,R7\n         L     R7,SERVER_NEXT\n         ITRACE ID=FREESERV,                                           +\n               RDATA1=R1\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=SERVBLOKL\n         LTR   R7,R7                          NEXT BLOCK EXIST?\n         BNZ   PROC0060                       YES\n         B     PROC0000                       OTHERWISE WAIT FOR WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Error(s) detected in the start-up parameters or the                *\n*  termination ECB has been POSTed.                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ITRACE ID=EOJ\n         LOAD  EP=HTTPTERM\n         LR    R15,R0\n         BALR  R14,R15\n         DELETE EP=HTTPTERM\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=ATCHFAIL                   SUBTASK ATTACH FAILED\n         STH   R15,DXD_RC                     SAVE RETURN CODE\n         MVC   PRT_MESSAGE_ID(MSG15L),MSG15\n         MVC   PRT_MESSAGE_ID+(MSG15T-MSG15)(L'MSG15),DXD_SUBTASK\n         UNPK  PRT_MESSAGE_ID+(MSG15R-MSG15)(5),DXD_RC(3)\n         TR    PRT_MESSAGE_ID+(MSG15R-MSG15)(L'MSG15R),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG15R-MSG15)+4,C' '\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         ABEND 1,DUMP,,USER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE\n         ST    R14,PRT_NEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R8                             COMPLETE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ICM   R1,15,TRACE_TABLE_ADDRESS      TRACE TABLE ADDRESS\n         BZ    EXIT0010\n         L     R0,TRACE_TABLE_SIZE            TRACE TABLE SIZE\n         FREEMAIN RU,                         FREE TRACE TABLE STORAGE +\n               A=(1),                                                  +\n               LV=(0)\nEXIT0010 DS    0H\n         L     R2,COMM_DXD_ADDRESS            WORK AREA ADDRESS\n         DELETE EP=HTTPCOMM                   DELETE COMMON MODULE\n         L     R13,4(R13)                     RESTORE CALLER'S R13\n         LTR   R2,R2                          WORK AREA GETMAIN'D?\n         BZ    EXIT0020                       NO\n         L     R0,DXD_SIZE                    WORK AREA SIZE\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(R2),                                                 +\n               LV=(0)\nEXIT0020 DS    0H\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        CLEAR REGISTER\n         BR    R14                            EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXD_ADDRESS DC    Q(DXDMAIN)           DISPLACEMENT TO WORK AREA\nDXD_SIZE    CXD                        WORK AREA TOTAL SIZE\nV_HTTPDAIR  DC    V(HTTPDAIR)\nATTACHI  ATTACH EP=HTTPSERV,        ATTACH LIST FORM                   +\n               ECB=*,               .. TERMINATION ECB'S ADDRESS       +\n               PURGE=QUIESCE,       .. FINISH UP I/O IN PROGRESS       +\n               SF=L                 .. LIST FORM\nATTACHL     EQU   *-ATTACHI\n\nHEXCHAR     EQU   *-C'0'\n            DC    C'0123456789ABCDEF'\n\nPRT_ID      DC    CL8'PRTBLOK'\n\nMSG07    DS    0C\n         DC    CL15'HTTPMAIN07I'\n         DC    C'Error(s) have been detected. Aborting.'\nMSG07L   EQU   *-MSG07\n\nMSG08    DS    0C\n         DC    CL15'HTTPMAIN08I'\n         DC    C'HTTPSERV subtask '\nMSG08TSK DC    CL8' '\n         DC    C' ATTACHed'\nMSG08L   EQU   *-MSG08\n\nMSG09     DS    0C\n          DC    CL15'HTTPMAIN09I'\n          DC    C'HTTPSERV subtask '\nMSG09TCB  DC    CL8' '\n          DC    C' for '\nMSG09NAME DC    CL8' '\n          DC    C'/'\nMSG09TASK DC    CL8' '\n          DC    C' DETACHed'\nMSG09L    EQU   *-MSG09\n\nMSG15    DS    0C\n         DC    CL15'HTTPMAIN15E'\n         DC    C'ATTACH failed for '\nMSG15T   DC    CL8' '\n         DC    C'  RC='\nMSG15R   DC    CL5' '\n         DC    C' '\nMSG15L   EQU   *-MSG15\nMSG16    DS    0C\n         DC    CL15'HTTPMAIN16E'\n         DC    C'DETACH failed for '\nMSG16T   DC    CL8' '\n         DC    C'  RC='\nMSG16R   DC    CL5' '\n         DC    C' '\nMSG16L   EQU   *-MSG16\nMSG80    DS    0C\n         DC    CL15'HTTPMAIN80I'\n         DC    C'Termination phase 1 beginning.'\nMSG80L   EQU   *-MSG80\nMSG81    DS    0C\n         DC    CL15'HTTPMAIN81I'\n         DC    C'TCP/IP subtask terminated, ECB='\nMSG81ECB DC    CL8' '\n         DC    C' '\nMSG81L   EQU   *-MSG81\nMSG82    DS    0C\n         DC    CL15'HTTPMAIN82I'\n         DC    C'Termination phase 2 beginning.'\nMSG82L   EQU   *-MSG82\nMSG86    DS    0C\n         DC    CL15'HTTPMAIN86I'\n         DC    C'Termination phase 3 beginning.'\nMSG86L   EQU   *-MSG86\nMSG87    DS    0C\n         DC    CL15'HTTPMAIN87I'\n         DC    C'Local URL subtask terminated, ECB='\nMSG87ECB DC    CL8' '\n         DC    C' '\nMSG87L   EQU   *-MSG87\nMSG88    DS    0C\n         DC    CL15'HTTPMAIN88I'\n         DC    C'Console communcation subtask terminated, ECB='\nMSG88ECB DC    CL8' '\n         DC    C' '\nMSG88L   EQU   *-MSG88\nMSG89    DS    0C\n         DC    CL15'HTTPMAIN89I'\n         DC    C'Logging subtask terminated, ECB='\nMSG89ECB DC    CL8' '\n         DC    C' '\nMSG89L   EQU   *-MSG89\nMSG90    DS    0C\n         DC    CL15'HTTPMAIN90I'\n         DC    C'Local URL references='\nMSG90REF DC    x'402020206b2020206b202120'\n         DC    C' '\nMSG90URL DC    CL80' '\nMSG90L   EQU   *-MSG90\nMSG99    DS    0C\n         DC    CL15'HTTPMAIN99I'\n         DC    C'Termination complete.'\nMSG99L   EQU   *-MSG99\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WORK AREA                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDXDMAIN          DSECT\n                 STDSAVE DSECT=NO\nDXD_ID           DS       CL8\nDXD_DWORD        DS       D\nDXD_ATTACH_PARM  DS       A                ATTACH PARM\nDXD_URLS         DS       F\nDXD_ATTACH       DS       (ATTACHL)X       ATTACH LIST FORM\n\nDXD_WAIT         DS       0A\nDXD_ECB_1        DS       A\nDXD_ECB_2        DS       A\n\nDXD_RC           DS       H\nDXD_DD           DS       X                DD'S PRESENT\nDXD_SUBTASK      DS       CL8              SUBTASK ATTACHED/DETACHED\nDXD_PARM_WORK    DS       CL5\n                 PRTBLOK  DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON   MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         WEBURL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SERVBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  IKJTCB   LIST=NO\nSERVER_IO_SIZE    EQU      32760\n                  COPY     REGEQU\n         END   HTTPMAIN\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPPARM": {"ttr": 3597, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1b\\x00\\x08\\x01\\x04$o\\x01\\x072?\\x17\\x10\\x01\\xea\\x01N\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.27", "flags": 0, "createdate": "2004-09-02T00:00:00", "modifydate": "2007-11-19T17:10:08", "lines": 490, "newlines": 334, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPPARM                                              *\n*                                                                     *\n*   This module interprets the control statements entered via SYSIN.  *\n*   Since the control statements are only read once, this module is   *\n*   linked separately.  HTTPINIT issues a LOAD, then links to this,   *\n*   and then DELETEs it.  This frees up the storage that would        *\n*   otherwise be wasted by having code that is only used at start-up. *\n*                                                                     *\n*   All control statements start in column 1.                         *\n*                                                                     *\n*     ABEND           Requests and ABEND at exit if errors are        *\n*                     detected during initialization.                 *\n*     WEBPORT=        TCP/IP port number to be used for web users     *\n*     SERVERPORT=     TCP/IP port number to be used for communication *\n*                     with server spaces.                             *\n*     SNAPCLASS=      SYSOUT class for SNAP dumps                     *\n*     TRACE=                                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPPARM CSECT\nHTTPPARM AMODE 31\nHTTPPARM RMODE ANY\n         USING HTTPPARM,R12                   DEFINE BASE\n         USING HTTPCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE CALLER'S REGISTERS\n         LR    R12,R15                        SET BASE\n         B     PARM0000\n         DC    CL8'HTTPPARM'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nPARM0000 DS    0H\n         GETMAIN RU,                          GETMAIN WORK AREA        +\n               LV=WORKL,                                               +\n               LOC=BELOW                      .. DCB MUST BE BELOW\n         ST    R1,8(R13)                      CHAIN TO PREVIOUS AREA\n         ST    R13,4(R1)                      CHAIN PREVIOUS TO OURS\n         LR    R13,R1                         SET SAVE AREA ADDRESS\n         USING WORKAREA,R13\n         MVC   PRT_EYE,PRT_ID                 IDENTIFY CONTROL BLOCK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\n         MVC   WORK_OCPL(OPENL),OPENI         COPY LIST FORM\n         MVC   WORK_DCB(DCBL),DCBI            INITIAILZE\n         OPEN  (WORK_DCB,INPUT),                                       +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\nPARM0010 DS    0H\n         ITRACE ID=READCARD\n         GET   WORK_DCB,WORK_STMT             READ A CONTROL STATEMENT\n         MVC   PRT_MESSAGE_ID(MSG01L),MSG01\n         MVC   PRT_MESSAGE_ID+(MSG01D-MSG01)(L'MSG01D),WORK_STMT\n         MVI   PRT_COMMAND,$PRT_ASIS          PRINT 'AS IS'\n         BAL   R10,PRT0000                    PRINT\n         CLI   WORK_STMT,C'*'                 COMMENT?\n         BE    PARM0010                       YES\n         CLC   ABEND_STMT,WORK_STMT           ABEND STATEMENT?\n         BE    ABND0000                       YES\n         CLC   WEB_PORT_STMT,WORK_STMT        WEB PORT STATEMENT?\n         BE    WEB0000                        YES\n         CLC   SERVER_PORT_STMT,WORK_STMT     SERVER PORT STATEMENT?\n         BE    SERV0000                       YES\n         CLC   SNPCSTMT,WORK_STMT             SNAP CLASS STATEMENT?\n         BE    SNPC0000                       YES\n         CLC   TRACESTMT,WORK_STMT            TRACE STATEMENT\n         BE    TRACE100                       YES\n         ITRACE ID=INVALID                    INVALID STATEMENT\n         OI    COMM_FLAGS,$COMM_ABORT\n         MVC   PRT_MESSAGE_ID(MSG02L),MSG02\n         BAL   R10,PRT0000                    PRINT ERROR MESSAGE\n         B     PARM0010                       READ NEXT STATEMENT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM0100 DS    0H\n         ITRACE ID=EOF\n         MVC   WORK_OCPL(CLOSEL),CLOSEI\n         CLOSE WORK_DCB,                      CLOSE THE DCB            +\n               MODE=31,                                                +\n               MF=(E,WORK_OCPL)\n         TM    COMM_FLAGS,$COMM_ABORT         ABORT FLAG SET?\n         BO    EXIT0000                       YES.. EXIT NOW\n         OC    COMM_WEB_PORT,COMM_WEB_PORT    WEB PORT GIVEN?\n         BNZ   PARM0110                       YES\n         ITRACE ID=NO_WPORT\n         MVC   PRT_MESSAGE_ID(MSG10L),MSG10\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         OI    COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     EXIT0000                       AND EXIT\nPARM0110 DS    0H\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   EXIT0000\n         ITRACE ID=NO_SPORT\n         MVC   PRT_MESSAGE_ID(MSG11L),MSG11\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         OI    COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     EXIT0000                       AND EXIT\n*---------------------------------------------------------------------*\n*        Process ABEND statement                                      *\n*---------------------------------------------------------------------*\nABND0000 DS    0H\n         ITRACE ID=SETABEND\n         OI    COMM_FLAGS,$COMM_ABEND\n         B     PARM0010\n*---------------------------------------------------------------------*\n*        Process web port number statement                            *\n*---------------------------------------------------------------------*\nWEB0000  DS    0H\n         ITRACE ID=WEB_PORT\n         OC    COMM_WEB_PORT,COMM_WEB_PORT\n         BNZ   WEB0050\n         LA    R1,WORK_STMT+L'WEB_PORT_STMT   FIRST CHARACTER\n         ST    R1,PARSE_IN                    SET INPUT DATA ADDRESS\n         LA    R1,72-L'WEB_PORT_STMT          MAXIMUM INPUT LENGTH\n         STH   R1,PARSE_IN_LENGTH             SET INPUT LENGTH\n         LA    R1,5                           MAXIMUM CHARACTERS\n         STH   R1,PARSE_OUT_LENGTH            SET MAXIMUM OUTPUT LENGTH\n         BAL   R10,PARSE000                   LINK TO PARSE\n         OC    PARSE_OUT_LENGTH,PARSE_OUT_LENGTH  ZERO?                 ?\n         BZ    WEB0020                        YES\n         CLI   PARSE_DELMITER,C' '            STOPPED ON A BLANK?\n         BNE   WEB0030                        NO.. PORT IS TOO LONG\n         LH    R1,PARSE_OUT_LENGTH            LENGTH\n         LA    R2,PARSE_OUT\nWEB0010  DS    0H\n         CLI   0(R2),C'0'                     IS IT A DIGIT?\n         BL    WEB0040                        NO\n         CLI   0(R2),C'9'                     STILL A DIGIT?\n         BH    WEB0040                        NO\n         MVC   COMM_WEB_PORT_CHAR(4),COMM_WEB_PORT_CHAR+1\n         MVC   COMM_WEB_PORT_CHAR+4(1),0(R2)\n         LA    R2,1(R2)                       NEXT DIGIT\n         BCT   R1,WEB0010\n         PACK  WORK_DWORD,COMM_WEB_PORT_CHAR\n         CVB   R1,WORK_DWORD                  CONVERT TO BINARY\n         LTR   R1,R1                          CLEAR REGISTER\n         BZ    WEB0060                        ZERO..\n         STH   R1,COMM_WEB_PORT               SAVE PORT NUMBER\n         ITRACE ID=GOODWEB,                   PORT LENGTH IS OK        +\n               DATA1=(COMM_WEB_PORT,8)\n         B     PARM0010                       READ NEXT STATEMENT\nWEB0020  DS    0H\n         ITRACE ID=NOPORT\n         MVC   PRT_MESSAGE_ID(MSG05L),MSG05\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nWEB0030  ds    0H\n         ITRACE ID=PORTLONG\n         MVC   PRT_MESSAGE_ID(MSG06L),MSG06\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nWEB0040  ds    0H\n         ITRACE ID=BADPORT\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nWEB0050  ds    0H\n         ITRACE ID=DUPPORT\n         MVC   PRT_MESSAGE_ID(MSG08L),MSG08\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nWEB0060  ds    0H\n         ITRACE ID=ZEROPORT\n         MVC   PRT_MESSAGE_ID(MSG09L),MSG09\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\n*---------------------------------------------------------------------*\n*        Process server port number statement                         *\n*---------------------------------------------------------------------*\nSERV0000 DS    0H\n         ITRACE ID=SERVPORT\n         OC    COMM_SERVER_PORT,COMM_SERVER_PORT\n         BNZ   SERV0050\n         LA    R1,WORK_STMT+L'SERVER_PORT_STMT FIRST CHARACTER\n         ST    R1,PARSE_IN                    SET INPUT DATA ADDRESS\n         LA    R1,72-L'SERVER_PORT_STMT       MAXIMUM INPUT LENGTH\n         STH   R1,PARSE_IN_LENGTH             SET INPUT LENGTH\n         LA    R1,5                           MAXIMUM CHARACTERS\n         STH   R1,PARSE_OUT_LENGTH            SET MAXIMUM OUTPUT LENGTH\n         BAL   R10,PARSE000                   LINK TO PARSE\n         OC    PARSE_OUT_LENGTH,PARSE_OUT_LENGTH   LENGTH ZERO?         ?\n         BZ    SERV0020                       YES\n         CLI   PARSE_DELMITER,C' '            STOPPED ON A BLANK?\n         BNE   SERV0030                       NO.. PORT IS TOO LONG\n         LH    R1,PARSE_OUT_LENGTH            LENGTH\n         LA    R2,PARSE_OUT\nSERV0010 DS    0H\n         CLI   0(R2),C'0'                     IS IT A DIGIT?\n         BL    SERV0040                       NO\n         CLI   0(R2),C'9'                     STILL A DIGIT?\n         BH    SERV0040                       NO\n         MVC   COMM_SERVER_PORT_CHAR(4),COMM_SERVER_PORT_CHAR+1\n         MVC   COMM_SERVER_PORT_CHAR+4(1),0(R2)\n         LA    R2,1(R2)                       NEXT DIGIT\n         BCT   R1,SERV0010\n         PACK  WORK_DWORD,COMM_SERVER_PORT_CHAR\n         CVB   R1,WORK_DWORD                  CONVERT TO BINARY\n         LTR   R1,R1                          CLEAR REGISTER\n         BZ    SERV0060                       ZERO..\n         STH   R1,COMM_SERVER_PORT            SAVE PORT NUMBER\n         ITRACE ID=GOODSERV,                  PORT LENGTH IS OK        +\n               DATA1=(COMM_SERVER_PORT,8)\n         B     PARM0010                       READ NEXT STATEMENT\nSERV0020 DS    0H\n         ITRACE ID=NOPORT\n         MVC   PRT_MESSAGE_ID(MSG05L),MSG05\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nSERV0030 DS    0H\n         ITRACE ID=PORTLONG\n         MVC   PRT_MESSAGE_ID(MSG06L),MSG06\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nSERV0040 DS    0H\n         ITRACE ID=BADPORT\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nSERV0050 DS    0H\n         ITRACE ID=DUPPORT\n         MVC   PRT_MESSAGE_ID(MSG08L),MSG08\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nSERV0060 DS    0H\n         ITRACE ID=ZEROPORT\n         MVC   PRT_MESSAGE_ID(MSG09L),MSG09\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\n*---------------------------------------------------------------------*\n*        PROCESS SNAPCLASS STATEMENT                                  *\n*---------------------------------------------------------------------*\nSNPC0000 DS    0H\n         ITRACE ID=SNAPCLAS                   SNAPSHOT SYSOUT CLASS\n         CLI   WORK_STMT+L'SNPCSTMT,C' '      BLANK?\n         BE    SNPC0010                       YES.. INVALID\n         CLI   WORK_STMT+L'SNPCSTMT+1,C' '    BLANK?\n         BNE   SNPC0020                       NO.. INVALID\n         MVC   COMM_SNAP_CLASS,WORK_STMT+L'SNPCSTMT\n         B     PARM0010                       READ NEXT STATEMENT\nSNPC0010 DS    0H\n         ITRACE ID=SNAPBLNK\n         MVC   PRT_MESSAGE_ID(MSG03L),MSG03\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\nSNPC0020 DS    0H\n         ITRACE ID=SNAPLONG\n         MVC   PRT_MESSAGE_ID(MSG04L),MSG04\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\n* ------------------------------------------------------------------- *\n*        Process TRACE statements                                     *\n* ------------------------------------------------------------------- *\nTRACE100 DS    0H\n         ITRACE ID=TRACE\n         CLC   =C'URL ',WORK_STMT+L'TRACESTMT\n         BNE   TRACE200\n         OI    COMM_TRACE_FLAGS,$TRACE_URLS\n         B     PARM0010\nTRACE200 DS    0H\n         MVC   PRT_MESSAGE_ID(MSG14L),MSG14\n         BAL   R10,PRT0000                    PRINT MESSAGE\n         MVI   COMM_FLAGS,$COMM_ABORT         SET ABORT FLAG\n         B     PARM0010                       READ NEXT STATEMENT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*  Parsing                                                            *\n*                                                                     *\n*  At entry:                                                          *\n*     PARSE_IN           Address of source data                       *\n*     PARSE_IN_LENGTH    Length of source data                        *\n*     PARSE_OUT_LENGTH   Maximum output length                        *\n*                                                                     *\n*  At exit:                                                           *\n*     PARSE_IN           Address of byte following delimiter that     *\n*                        stopped the scan                             *\n*     PARSE_IN_LENGTH    Length of data following the delimiter       * e *\n*     PARSE_OUT          Data upto but not including the delimiter    *\n*     PARSE_OUT_LENGTH   Length of data in PARSE_OUT                  * T *\n*     PARSE_DELMITER     Delimiter that stopped the scan or null      * or *\n*                        if the scan stopped due to end of data       *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARSE000 DS    0H\n         STM   R1,R5,PARSE_SAVE               SAVE REGISTERS\n         ITRACE ID=PARSE,                     STARTING A PARSE         +\n               DATA1=(PARSE_IN,8),            .. STARTING ADDRESS      +\n               DATA2=(PARSE_IN_LENGTH,8)      .. INPUT/OUTPUT LENGTHS\n         MVC   PARSE_OUT,COMM_BLANKS          CLEAR OUTPUT DATA\n         LH    R1,PARSE_IN_LENGTH             INPUT DATA LENGTH\n         LH    R2,PARSE_OUT_LENGTH            MAXIMUM OUTPUT LENGTH\n         L     R3,PARSE_IN                    INPUT DATA ADDRESS\n         LA    R4,PARSE_OUT                   OUTPUT DATA ADDRESS\n         SR    R5,R5                          INITIALIZE OUTPUT LENGTH\n         MVI   PARSE_DELMITER,0               SET DELIMITER TO A NULL\n         LTR   R1,R1                          ANY DATA LEFT?\n         BZ    PARSE050                       NO\nPARSE010 DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BNE   PARSE020                       NO\n         LA    R3,1(R3)                       NEXT\n         BCT   R1,PARSE010                    LOOP\n         B     PARSE050\nPARSE020 DS    0H\n         CLI   0(R3),C' '                     BLANK?\n         BE    PARSE040                       YES\n         CLI   0(R3),C','                     COMMA?\n         BE    PARSE040                       YES\n         CLI   0(R3),C'='                     EQUALS SIGN?\n         BE    PARSE040                       YES\n         MVC   0(1,R4),0(R3)                  COPY TO OUTPUT\n         LA    R3,1(R3)                       NEXT\n         LA    R4,1(R4)                       NEXT\n         LA    R5,1(R5)                       PLUS 1 BYTE OF LENGTH\n         BCT   R1,PARSE030                    MINUS 1 BYTE OF INPUT\n         B     PARSE050                       FORCE EXIT\nPARSE030 DS    0H\n         BCT   R2,PARSE020                    LOOP\n         CLI   0(R3),C' '                     BLANK?\n         BE    PARSE040                       YES\n         CLI   0(R3),C','                     COMMA?\n         BNE   PARSE050                       NO\nPARSE040 DS    0H\n         MVC   PARSE_DELMITER,0(R3)           SAVE DELIMITER\n         LA    R3,1(R3)                       SKIP DELIMITER\n         BCTR  R1,0                           MINUS BYTE USED BY DELIM\nPARSE050 DS    0H\n         STH   R1,PARSE_IN_LENGTH             INPUT LENGTH LEFT\n         STH   R5,PARSE_OUT_LENGTH            OUTPUT LENGTH\n         ST    R3,PARSE_IN                    INPUT ENDING POINT\n         ITRACE ID=PARSE_OUT,                 PARSE ENDING             +\n               DATA1=(PARSE_OUT,8),           .. PART OF OUTPUT DATA   +\n               DATA2=(PARSE_OUT_LENGTH,8)     .. OUTPUT LENGTH\n         LM    R1,R5,PARSE_SAVE               RESTORE SAVED REGISTERS\n         BR    R10                            EXIT\n* ------------------------------------------------------------------- *\n*        PRINTING                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                          GETMAIN STORAGE          +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK         COPY DATA\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK QUEUE\n         ST    R14,PRT_NEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_QUEUE\n         BC    4,PRT0010\n         BR    R10                            RETURN\n* ------------------------------------------------------------------- *\n*        EXIT                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         POST  COMM_PRINT_WORK_ECB            WAKE UP PRINT SUBTASK\n         ITRACE ID=EXIT                       EXITING\n         LR    R1,R13                         SAVE SAVE AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                         FREEMAIN WORK AREA       +\n               A=(1),                                                  +\n               LV=WORKL\n         LM    R14,R12,12(R13)                RESTORE OTHER REGISTERS   ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=SYSIN,                                           +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               DCBE=DCBEI,                                             +\n               MACRF=GM\nDCBL     EQU   *-DCBI\nDCBEI    DCBE  EODAD=PARM0100\nDCBEL    EQU   *-DCBEI\nOPENI    OPEN  (*,INPUT),                                              +\n               MODE=31,                                                +\n               MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE *,                                                      +\n               MODE=31,                                                +\n               MF=L\nCLOSEL   EQU   *-CLOSEI\n\nPRT_ID           DC    CL8'PRTBLOK'\n\nABEND_STMT       DC  C'ABEND '          ABEND CONTROL STATEMENT\nWEB_PORT_STMT    DC  C'WEBPORT='        WEB PORT NUMBER STATEMENT\nSERVER_PORT_STMT DC  C'SERVERPORT='     SERVER PORT NUMBER STATEMENT\nSNPCSTMT         DC  C'SNAPCLASS='      SNAPSHOT SYSOUT CLASS STATEMENT\nTRACESTMT        DC  C'TRACE='          TRACE STATEMENT\n\nMSG01    DS    0C\n         DC    CL15'HTTPPARM01I'\n         DC    C'Control statement:'\n         DC    C' '\nMSG01D   DC    CL80' '\nMSG01L   EQU   *-MSG01\nMSG02    DS    0C\n         DC    CL15'HTTPPARM02E'\n         DC    C'Invalid control statement.'\nMSG02L   EQU   *-MSG02\nMSG03    DS    0C\n         DC    CL15'HTTPPARM07E'\n         DC    C'SNAPSHOT SYSOUT class cannot be blank.'\nMSG03L   EQU   *-MSG03\nMSG04    DS    0C\n         DC    CL15'HTTPPARM08E'\n         DC    C'SNAPSHOT SYSOUT class too long.'\nMSG04L   EQU   *-MSG04\nMSG05    DS    0C\n         DC    CL15'HTTPPARM09E'\n         DC    C'PORT number omitted'\nMSG05L   EQU   *-MSG05\nMSG06    DS    0C\n         DC    CL15'HTTPPARM10E'\n         DC    C'PORT number must be 5 digits or less'\nMSG06L   EQU   *-MSG06\nMSG07    DS    0C\n         DC    CL15'HTTPPARM11E'\n         DC    C'Non-numeric found in PORT number'\nMSG07L   EQU   *-MSG07\nMSG08    DS    0C\n         DC    CL15'HTTPPARM12E'\n         DC    C'PORT number already specified'\nMSG08L   EQU   *-MSG08\nMSG09    DS    0C\n         DC    CL15'HTTPPARM13E'\n         DC    C'Zero is not valid for a PORT number'\nMSG09L   EQU   *-MSG09\nMSG10    DS    0C\n         DC    CL15'HTTPPARM14E'\n         DC    C'Web port number is required'\nMSG10L   EQU   *-MSG10\nMSG11    DS    0C\n         DC    CL15'HTTPPARM11E'\n         DC    C'Server port number is required'\nMSG11L   EQU   *-MSG11\nMSG13    DS    0C\n         DC    CL15'HTTPPARM16E'\n         DC    C'Syntax error'\nMSG13L   EQU   *-MSG13\nMSG14    DS    0C\n         DC    CL15'HTTPPARM17E'\n         DC    C'Invalid TRACE type on TRACE statement'\nMSG14L   EQU   *-MSG14\n         LTORG\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nWORKAREA         DSECT\n                 STDSAVE DSECT=NO   REGISTER SAVE AREA\nWORK_DWORD       DS      D\n                 PRTBLOK DSECT=NO\nWORK_OCPL        DS      (OPENL)X\nWORK_DCB         DS      (DCBL)X\nPARSE_SAVE       DS      5F         REGISTER SAVE AREA FOR PARSE\nPARSE_IN         DS      A          PARSE DATA INPUT ADDRESS\nPARSE_IN_LENGTH  DS      H          LENGTH OF DATA AT PARSE IN\nPARSE_OUT_LENGTH DS      H          LENGTH OF DATA IN PARSE OUT\nPARSE_DELMITER   DS      C          DELIMITER THAT STOPPED PARSE\nPARSE_OUT        DS      CL80       OUTPUT FROM PARSE\nWORK_STMT        DS      CL80       CONTROL STATEMENT I/O AREA\nWORKL            EQU     *-WORKAREA\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         COMMON  MAIN,TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         COPY REGEQU\n         END  HTTPPARM\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPPRT": {"ttr": 3850, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x02\\x01\\x04$_\\x01\\x07\\x17\\x7f\\x142\\x01#\\x01\\x18\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "2004-09-01T00:00:00", "modifydate": "2007-06-26T14:32:02", "lines": 291, "newlines": 280, "modlines": 0, "user": "RLRICE"}, "text": "         TITLE 'HTTPPRT    PRINT SUBTASK'\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPPRT                                               *\n*                                                                     *\n*   This subtask performs printing for the HTTP main address space.   *\n*                                                                     *\n*   The HTTPMAIN address space runs as multiple subtasks.  This       *\n*   module allows any subtask in the main address space to send       *\n*   SYSPRINT to a common output dataset.                              *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPPRT  CSECT\nHTTPPRT  AMODE 31\nHTTPPRT  RMODE ANY\n         USING HTTPPRT,R12                    DEFINE BASE\n         USING PRTBLOK,R7                     DEFINE BASE\n         USING HTTPCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                CHAIN REGISTERS\n         LR    R12,R15                        COPY ENTRY POINT ADDRESS\n         B     PRT0000\n         DC    CL8'HTTPPRT'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nPRT0000  DS    0H\n         L     R11,0(R1)                      LOAD HTTPCOMM'S ADDRESS\n         GETMAIN RU,                          STORAGE FOR WORK AREA    +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=BELOW\n         ST    R13,4(R1)                      CHAIN PREVIOUS AREA\n         ST    R1,8(R13)                      CHAIN OUR AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORKAREA,R13\n         ITRACE ID=INIT\n         ST    R12,COMM_HTTPPRT_ADDRESS\n         ST    R13,COMM_PRINT_WORK_AREA\n         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE DCB\n         MVI   WORK_CC,C' '                   INITIALIZE CC\n         MVC   WORK_PRINT_DATE(WORK_PRINT_LRECL-1),WORK_CC\n         MVC   WORK_OC_PARMS(OPENL),OPENI                               T\n         ZAP   WORK_LINE,P_ZERO               INITIALIZE LINE COUNT\n         ZAP   WORK_PAGE,P_ZERO               INITIALIGE PAGE COUNT\n         OPEN  (WORK_DCB,OUTPUT),                                      +\n               MF=(E,WORK_OC_PARMS),                                   +\n               MODE=31\n         B     PRT0030                        CHECK THE QUEUE\nPRT0010  DS    0H\n         TM    COMM_EOJ,$EOJ_PHASE_4          SHUTDOWN PHASE 4?\n         BO    EXIT0000                       YES.. IT'S MILLER TIME\n         TM    COMM_PRINT_WORK_ECB,X'40'      ECB ALREADY POSTED?\n         BO    PRT0020                        GET BUSY\n         ITRACE ID=WORKWAIT,                  WAITING FOR WORK         +\n               RDATA1=R1                      .. ECB'S ADDRESS\n         WAIT  ECB=COMM_PRINT_WORK_ECB        WAIT FOR WORK TO DO ECB\n         ITRACE ID=WOKEUP\nPRT0020  DS    0H\n         XC    COMM_PRINT_WORK_ECB,COMM_PRINT_WORK_ECB\nPRT0030  DS    0H\n         SR    R1,R1                          CLEAR REGISTER\nPRT0040  DS    0H\n         ICM   R2,15,COMM_PRINT_QUEUE\n         BZ    PRT0010\n         CS    R2,R1,COMM_PRINT_QUEUE\n         BC    4,PRT0040\n         USING PRTBLOK,R10                    DEFINE BASE\n         ITRACE ID=HAVEQ,                     WE HAVE THE QUEUE        +\n               RDATA1=R2                      .. LAST QUEUE BLOCK\n         LR    R3,R2                          COPY ADDRESS\n         LA    R1,4                           INITIALIZE GETMAIN LENGTH\nPRT0050  DS    0H\n         ICM   R3,15,PRT_NEXT-PRTBLOK(R3)\n         BZ    PRT0060                        NEXT BLOCK'S ADDRESS\n         ITRACE ID=VEC1,RDATA1=R3,RDATA2=R1\n         LA    R1,4(R1)                       ADD TO VECTOR LENGTH\n         B     PRT0050                        LOOP\nPRT0060  DS    0H\n         ITRACE ID=GETVEC,                                             +\n               RDATA1=R1                      .. SIZE OF VECTOR LIST\n         ST    R1,WORK_VECTOR_SIZE            SAVE VECTOR SIZE\n         GETMAIN RU,                          GETMAIN STORAGE          +\n               LV=(1),                                                 +\n               LOC=ANY\n         ST    R1,WORK_VECTOR_ADDRESS         SAVE VECTOR ADDRESS\n         ITRACE ID=VECADDR,                                            +\n               RDATA1=R1                      .. VECTOR ADDRESS\nPRT0070  DS    0H\n         ITRACE ID=BLDVEC,                                             +\n               RDATA1=R1,                     .. CURRENT IN VECTOR     +\n               RDATA2=R2                      .. PRTBLOK'S ADDRESS\n         ST    R2,0(R1)                       SET ADDRESS\n         ST    R1,WORK_VECTOR_CURRENT\n         LA    R1,4(R1)                       NEXT\n         ICM   R2,15,PRT_NEXT-PRTBLOK(R2)\n         BNZ   PRT0070\nPRT0080  DS    0H\n         L     R1,WORK_VECTOR_CURRENT\n         L     R10,0(R1)                      PRTBLOK'S ADDRESS\n         ITRACE ID=PRT,                                                +\n               RDATA1=R1,                                              +\n               RDATA2=R10\n         CLI   PRT_COMMAND,$PRT_HEAD          FORCED HEADING?\n         BE    PRT0170                        YES\n         MVC   WORK_CC,PRT_CC                 COPY CARRIAGE CONTROL\n         TIME  DEC\n         STM   R0,R1,WORK_TIME_DATE\n         UNPK  WORK_UNPACK(9),WORK_TIME(5)\n         MVZ   WORK_UNPACK,HEXZERO\n         TR    WORK_UNPACK,HEXCHAR\n         MVC   WORK_PRINT_TIME+00(2),WORK_UNPACK+00\n         MVC   WORK_PRINT_TIME+03(2),WORK_UNPACK+02\n         MVC   WORK_PRINT_TIME+06(2),WORK_UNPACK+04\n         MVC   WORK_PRINT_TIME+09(2),WORK_UNPACK+06\n         MVI   WORK_PRINT_TIME+2,C':'\n         MVI   WORK_PRINT_TIME+5,C':'\n         MVI   WORK_PRINT_TIME+8,C'.'\n         MVC   WORK_PRINT_DATE,DATE_EDIT_WORD\n         AP    WORK_DATE,P_190000\n         ED    WORK_PRINT_DATE,WORK_DATE\n         MVC   WORK_MESSAGE_ID,PRT_MESSAGE_ID\n         LA    R1,WORK_MESSAGE_ID+(L'WORK_MESSAGE_ID-1)\nPRT0090  DS    0H\n         CLI   0(R1),C' '                     BLANK?\n         BNE   PRT0100                        NO\n         BCT   R1,PRT0090                     LOOP\nPRT0100  DS    0H\n         CLI   0(R1),C'E'                     'ERROR' MESSAGE\n         BNE   PRT0110\n         MVI   WORK_ERROR_FLAG,C'*'           FLAG ERROR MESSAGE\nPRT0110  DS    0H\n         CLI   PRT_COMMAND,$PRT_ASIS          PRINT AS IS?\n         BE    PRT0140                        YES\n         LA    R1,WORK_DATA                   FIRST PRINT AREA BYTE\n         LA    R2,PRT_DATA                    PRINT OUTPUT AREA BYTE\n         LA    R3,L'PRT_DATA                  MAXIMUM LOOPS\nPRT0120  DS    0H\n         CLC   COMM_BLANKS(2),0(R2)           2 BLANKS IN A ROW?\n         BE    PRT0130                        YES\n         CLC   =C' )',0(R2)                   BLANK AND AN OPEN PAREN?\n         BE    PRT0130                        YES\n         CLC   =C' ,',0(R2)                   BLANK AND A COMMA?\n         BE    PRT0130                        YES\n         MVC   0(1,R1),0(R2)                  COPY TO OUTPUT AREA\n         LA    R1,1(R1)                       NEXT OUTPUT BYTE\nPRT0130  DS    0H\n         LA    R2,1(R2)                       NEXT INPUT BYTE\n         BCT   R3,PRT0120                     LOOP\n         B     PRG0150\nPRT0140  DS    0H\n         MVC   WORK_DATA,PRT_DATA             COPY AS IS\nPRG0150  DS    0H\n         PUT   WORK_DCB,WORK_CC               PRINT\n         AP    WORK_LINE,P_ONE                ADD 1 TO LINE COUNT\n         CLI   WORK_CC,C' '                   SINGLE SPACE\n         BE    PRT0160                        YES\n         AP    WORK_LINE,P_ONE                ADD 1 TO LINE COUNT\n         CLI   WORK_CC,C'0'                   DOUBLE SPACE?\n         BE    PRT0160                        YES\n         AP    WORK_LINE,P_ONE                ADD 1 TO LINE COUNT\nPRT0160  DS    0H\n         MVI   WORK_CC,C' '                   INITIALIZE Cc\n         MVC   WORK_PRINT_DATE(WORK_PRINT_LRECL-1),WORK_CC\n         CP    WORK_LINE,COMM_MAX_LINES\n         BNH   PRT0200\nPRT0170  DS    0H\n         AP    WORK_PAGE,P_ONE\n         MVC   WORK_DATA(HEADINGL),HEADING\n        MVC   WORK_DATA+(HEAD_PAGE-HEADING)(L'HEAD_PAGE),PAGE_EDIT_WORD\n         ED    WORK_DATA+(HEAD_PAGE-HEADING)(L'HEAD_PAGE),WORK_PAGE\n         PUT   WORK_DCB,WORK_CC\n         ZAP   WORK_LINE,P_ONE\n         MVI   WORK_CC,C' '\n         MVC   WORK_PRINT_DATE(WORK_PRINT_LRECL-1),WORK_CC\nPRT0200  DS    0H\n         ITRACE ID=FREEPRT,                                            +\n               RDATA1=R10\n         FREEMAIN RU,                                                  +\n               A=(10),                                                 +\n               LV=PRTBLOKL\n         L     R1,WORK_VECTOR_CURRENT         CURRENT IN VECTOR\n         C     R1,WORK_VECTOR_ADDRESS         AT FIRST ENTRY?\n         BE    PRT0210                        YES\n         SH    R1,H4                          BACK UP 1 ENTRY\n         ST    R1,WORK_VECTOR_CURRENT         SAVE CURRENT ADDRESS\n         B     PRT0080                        PROCESS THIS PRTBLOK\nPRT0210  DS    0H\n         L     R0,WORK_VECTOR_SIZE            VECTOR SIZE\n         ITRACE ID=FREEVEC,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                         FREE THE VECTOR          +\n               A=(1),                                                  +\n               LV=(0)\n         B     PRT0020\n* ------------------------------------------------------------------- *\n*        EXIT                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         MVC   WORK_OC_PARMS(CLOSEL),CLOSEI   COPY CLOSE LIST FORM\n         CLOSE WORK_DCB,                      CLOSE DCB                +\n               MF=(E,WORK_OC_PARMS),                                   +\n               MODE=31\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORK_AREA_LENGTH\n         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\nPRTMVC   MVC   WORK_PRINT_DATE(0),PRT_DATA    COPY PRINT DATA\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nH4             DC    H'4'\nDATE_EDIT_WORD DC    X'40212020204B202020'\nPAGE_EDIT_WORD DC    X'402020202120'\nHEXZERO        DC    16X'00'\nHEXCHAR        DC    C'0123456789ABCDEF'\nP_ZERO         DC    P'0'\nP_ONE          DC    P'1'\nP_190000       DC    P'1900000'\nHEADING        DS    0C\n               DC    50C' '\n               DC    C'HTTP MAIN LOG'\n               DC    50C' '\n               DC    C'PAGE '\nHEAD_PAGE      DC    CL6' '\nHEADINGL       EQU   *-HEADING\nDCBI     DCB   DSORG=PS,                                               +\n               DDNAME=SYSPRINT,                                        +\n               RECFM=FBA,                                              +\n               LRECL=WORK_PRINT_LRECL,                                 +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MODE=31,MF=L\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MODE=31,MF=L\nCLOSEL   EQU   *-CLOSEI\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WORK AREAS                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA              DSECT\n                      STDSAVE DSECT=NO\nWORK_TIME_DATE        DS  0F\nWORK_TIME             DS  F          TIME/DATE\nWORK_DATE             DS  F\nWORK_VECTOR_SIZE      DS  F          ADDRESS VECTOR SIZE\nWORK_VECTOR_ADDRESS   DS  A          ADDRESS OF ADDRESS VECTOR\nWORK_VECTOR_CURRENT   DS  A          CURRENT ADDRESS IN ADDRESS VECTOR\nWORK_LINE             DS  PL3\nWORK_PAGE             DS  PL3\nWORK_UNPACK           DS  CL16\n\n\nWORK_CC               DS  C          CARRIAGE CONTROL\nWORK_PRINT_DATE       DS  CL9        DATE\n                      DS  C\nWORK_PRINT_TIME       DS  CL11       TIME\n                      DS  C\nWORK_MESSAGE_ID       DS  CL15       MESSAGE ID\n                      DS  C\nWORK_ERROR_FLAG       DS  C          ERROR MESSAGE FLAG\n                      DS  C\nWORK_DATA             DS  CL200      PRINT DATA\nWORK_PRINT_LRECL      EQU *-WORK_CC\n\n\nWORK_DCB              DS  0A,(DCBL)X RESERVE SPACE FOR DCB\nWORK_OC_PARMS         DS  (OPENL)X\nWORK_AREA_LENGTH      EQU *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      COMMON MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      PRTBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  HTTPPRT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPSERV": {"ttr": 4100, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00T\\x01\\x04&O\\x01\\x072O\\x08X\\x02\\xba\\x01\"\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2004-09-20T00:00:00", "modifydate": "2007-11-20T08:58:54", "lines": 698, "newlines": 290, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPSERV                                              *\n*                                                                     *\n*  Manage the communication between the HTTP main and a server        *\n*  address space.                                                     *\n*                                                                     *\n*                                                                     *\n*  The HTTP server is intended to be run as multiple address spaces,  *\n*  the main space (HTTPMAIN) and server space(s).  This has several   *\n*  advantages.  For one, if your processor has multiple CPUs, more    *\n*  than one task can be executing in parallel.  If one server abends  *\n*  it does not always affect the main space or other server spaces.   *\n*  Also server spaces may be stopped if the resources they are using  *\n*  are needed or are being updated without impacting the main space   *\n*  or other server spaces.  You may want to run new applications in   *\n*  \"test\" servers or isolate an application for tuning.               *\n*                                                                     *\n*                                                                     *\n*  At start-up, HTTMAIN will ATTACH HTTPTCP as a subtask.  HTTPTCP    *\n*  will BIND to the port given on the SERVPORT start up parameter     *\n*  and \"listen\".  When a server space \"connects\", HTTPTCP will        *\n*  build a new SERVBLOK and wake up the main task.  The main task     *\n*  will ATTACH a new HTTPSERV subtask.  HTTPTCP will then transfer    *\n*  the connection (socket) to the new HTTPSERV subtask via            *\n*  GIVESOCKET/TAKESOCKET.  From that point on, the HTTPSERV subtask   *\n*  will communicate directly to the server space (HTTPTCP is no       *\n*  longer involved for that particular server space).                 *\n*                                                                     *\n*  If/when the server space shuts down, the HTTPSERV subtask will     *\n*  put itself on the \"lost\" server chain and POST an ECB that will    *\n*  cause the main task to 'wake up'.  The main task will DETACH       *\n*  the HTTPSERV subtask and FREEMAIN the SERVBLOK.                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPSERV CSECT\nHTTPSERV AMODE 31\nHTTPSERV RMODE ANY\n         USING HTTPSERV,R12                   DEFINE BASE\n         USING HTTPCOMM,R11                   DEFINE BASE\n         USING SERVBLOK,R10                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPSERV'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         L     R10,0(R1)                      COPY OUR SERVBLOK ADDRESS\n         L     R11,SERVER_HTTP_COMMON\n         L     R3,WORK_SIZE                   WORK AREA SIZE\n         GETMAIN RU,                          WORK AREA STORAGE        +\n               LV=(R3),                                                +\n               LOC=ANY\n         ST    R1,SERVER_WORK_ADDRESS         SAVE WORK AREA ADDRESS\n         LR    R4,R1                          COPY STORAGE ADDRESS\n         LR    R2,R1                          COPY WORK AREA ADDRESS\n         SR    R0,R0                          CLEAR REGISTER\n         SR    R1,R1                          CLEAR REGISTER\n         MVCL  R2,R0                          CLEAR WORK AREA\n         A     R4,WORK_START                  PLUS DISPLACEMENT\n         ST    R13,4(R4)\n         ST    R4,8(R13)\n         LR    R13,R4                         COPY WORKAREA ADDRESS\n         USING DXDSERV,R13                    DEFINE BASE\n         MVC   WORK_ID,MODID                  IDENTIFY WORK AREA OWNER\n         ITRACE ID=INIT,                                               +\n               RDATA1=R10\n         LA    R5,SERVER_IO_AREA\n         USING NETBLOK,R5\n         XC    NETBLOK(256),NETBLOK           INITIALIZE HEADER PORTION\n         XC    SERVER_WORK_ECB,SERVER_WORK_ECB\n         MVI   PRT_CC,C' '                    SINGLE SPACING\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\n         LA    R1,SERVER_WORK_ECB\n         ST    R1,WORK_ECB1\n         LA    R1,SERVER_TCPIP_ECB\n         ST    R1,WORK_ECB2\n         OI    WORK_ECB2,X'80'                FLAG END-OF-LIST\n         XC    SERVER_WORK_ECB,SERVER_WORK_ECB\n         MVI   WORK_FLAGS,0                   RESET FLAGS\n* ------------------------------------------------------------------- *\n*     Make the INITAPI call                                           *\n* ------------------------------------------------------------------- *\n         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK\n         MVC   SERVER_TCPIP_FUNCTION,=CL16'INITAPI'\n         UNPK  WORK_10(9),SERVER_TCB(5)\n         TR    WORK_10(8),HEXCHAR\n         MVC   SERVER_SUBTASK,WORK_10\n         ITRACE ID=INITAPI,                                            +\n               DATA1=(SERVER_SUBTASK,8)\n         MVC   PRT_MESSAGE_ID(MSG01L),MSG01\n         MVC   PRT_MESSAGE_ID+(MSG01_SUBTASK-MSG01)(L'MSG01_SUBTASK),SE+\n               RVER_SUBTASK\n         BAL   R9,PRT0000\n         EZASMI TYPE=INITAPI,                                          +\n               MAXSNO=SERVER_MAX_SOCKET,                               +\n               SUBTASK=SERVER_SUBTASK,                                 +\n               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +\n               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +\n               ASYNC='ECB',                                            +\n               TASK=WORK_TCPIP_TASK\n         TM    SERVER_TCPIP_RETURN_CODE,X'80' SUCCESSFUL?\n         BO    ERR0010                        NO\n\n* ------------------------------------------------------------------- *\n*     Get our CLIENT NAME                                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GET_ID\n         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB\n         EZASMI TYPE=GETCLIENTID,                                      +\n               CLIENT=SERVER_CLIENT,                                   +\n               ECB=SERVER_TCPIP_ECB,                                   +\n               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +\n               RETCODE=SERVER_TCPIP_RETURN_CODE\n         WAIT  ECB=SERVER_TCPIP_ECB\n         ITRACE ID=MY_ID,                                              +\n               DATA1=(SERVER_CLIENT_NAME,8),                           +\n               DATA2=(SERVER_CLIENT_TASK,8)\n* ------------------------------------------------------------------- *\n*    Inform HTTPTCP our TCP/IP environment is initialized             *\n* ------------------------------------------------------------------- *\n         POST  SERVER_INITAPI_ECB             INITAPI COMPLETE\n* ------------------------------------------------------------------- *\n*    Wait for HTTPTCP to issue GIVESOCKET                             *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GIVEWAIT\n         WAIT  ECB=SERVER_GIVESOCKET_ECB      WAIT FOR GIVESOCKET\n         ITRACE ID=GIVEN,                                              +\n               DATA1=SERVER_GIVESOCKET_ECB\n* ------------------------------------------------------------------- *\n*    Issue TAKESOCKET                                                 *\n* ------------------------------------------------------------------- *\n         ITRACE ID=TAKESOCK,                                           +\n               DATA1=(SERVER_SOCKET,2)\n         MVC   SERVER_TCPIP_FUNCTION,=CL16'TAKESOCKET'\n         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB\n         EZASMI TYPE=TAKESOCKET,                                       +\n               SOCRECV=SERVER_SOCKET,                                  +\n               CLIENT=COMM_HTTPTCP_CLIENT,                             +\n               ECB=SERVER_TCPIP_ECB,                                   +\n               TASK=WORK_TCPIP_TASK,                                   +\n               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +\n               RETCODE=SERVER_TCPIP_RETURN_CODE\n         WAIT  ECB=SERVER_TCPIP_ECB\n         ITRACE ID=TAKE_RC,                                            +\n               DATA1=(SERVER_TCPIP_RETURN_CODE,4),                     +\n               DATA2=(SERVER_TCPIP_ERROR_NUMBER,4)\n         TM    SERVER_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         ITRACE ID=SOCKET,                                             +\n               DATA1=(serVER_SOCKET,2),                                +\n               DATA2=(SERVER_TCPIP_RETURN_CODE+2,2)\n         MVC   SERVER_SOCKET,SERVER_TCPIP_RETURN_CODE+2\n\n         ITRACE ID=POST_X,                                             +\n               DATA1=(sERVER_ECB_X,4)\n         POST  SERVER_ECB_X\n         ITRACE ID=POSTED_X,                                           +\n               DATA1=(SERVER_ECB_X,4)\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    We now have the connection to the server space                   *\n*                                                                     *\n*    Issue a TCP/IP READ                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         SR    R2,R2                          RESET BYTES READ\n         LA    R3,SERVER_IO_AREA              INITIALIZE I/O ADDRESS\n         MVC   WORK_LENGTH,=A(IOSIZE)         INITIALIZE AREA LEGNTH\nMAIN0010 DS    0H\n         ITRACE ID=TCP_READ,                                           +\n               DATA1=(SERVER_SOCKET,4),                                +\n               RDATA2=R3\n         MVC   SERVER_TCPIP_FUNCTION,=CL16'READ'\n         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB\n         EZASMI TYPE=READ,                                             +\n               S=SERVER_SOCKET,                                        +\n               TASK=WORK_TCPIP_TASK,                                   +\n               NBYTE=WORK_LENGTH,                                      +\n               BUF=(R3),                                               +\n               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +\n               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +\n               ECB=SERVER_TCPIP_ECB\n         ITRACE ID=WORKWAIT,                                           +\n               DATA1=(SERVER_WORK_ECB,4),                              +\n               DATA2=(SERVER_TCPIP_ECB,4)\n         WAIT  1,ECBLIST=WORK_WAIT\n         ITRACE ID=AWAKE,                                              +\n               DATA1=(SERVER_WORK_ECB,4),                              +\n               DATA2=(SERVER_TCPIP_ECB,4)\n         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB\n         TM    COMM_EOJ,$EOJ_PHASE_1          EOJ SIGNALLED?\n         BO    TERM0000                       YES\n         ICM   R1,15,SERVER_TCPIP_RETURN_CODE BYTES READ\n         BM    ERR0010                        IF NEGATIVE.. ERROR\n         BZ    ERR0010                        IF ZERO.. DEBUG\n         AR    R2,R1                          PLUS RECIEVED THIS TIME\n         ITRACE ID=READDONE,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R2\n         L     R0,SERVER_BYTES_RECEIVED       TOTAL RECEIVED\n         AR    R0,R1                          PLUS WHAT WE GOT\n         ST    R0,SERVER_BYTES_RECEIVED       SAVE TOTAL\n         L     R0,WORK_LENGTH                 I/O AREA LEFT\n         SR    R0,R1                          MINUS WHAT WAS USED\n         ST    R0,WORK_LENGTH\n         AR    R3,R1                          UPDATE BUFFER ADDRESS\n         ITRACE ID=MORE_BS,                                            +\n               RDATA1=R2,                                              +\n               DATA2=(NET_LENGTH,4)\n         C     R2,NET_LENGTH                  ALL RECEIVED?\n         BL    MAIN0010                       READ MORE DATA\n         ITRACE ID=ALL_READ,                                           +\n               RDATA1=R2                      TOTAL LENGTH\n         TIME  DEC\n         ST    R0,SERVER_LAST_TIME            TIME OF COMMUNICATION\n         ST    R1,SERVER_LAST_DATE            DATE OF COMMUNICATION\n* ------------------------------------------------------------------- *\n*     Perform the requested service.                                  *\n* ------------------------------------------------------------------- *\n         ITRACE ID=WORK,                                               +\n               DATA1=(NETBLOK,4)\n         LA    R1,SERVICE_TABLE\nMAIN0020 DS    0H\n         CLC   NET_FUNCTION,0(R1)             FUNCTION LOCATED?\n         BE    MAIN0030                       YES\n         LA    R1,5(R1)                       NEXT FUNCTION\n         CLI   0(R1),X'FF'                    END OF TABLE?\n         BNE   MAIN0020                       NO\n         MVC   PRT_MESSAGE_ID(MSG02L),MSG02\n         BAL   R9,PRT0000\n         DC    H'0'\nMAIN0030 DS    0H\n         ICM   R15,15,1(R1)\n         ITRACE ID=MAIN0030,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R15\n         BR    R15\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    Save the CLIENT ID of the partner server space and send the      *\n*    CLIENT ID of the HTTPWEB subtask.                                *\n*                                                                     *\n*    NOTE:  The CLIENT ID sent back is the HTTPWEB subtask's          *\n*           CLIENT ID *NOT* our own.  Web clients CONTACT             *\n*           (CONTACT is a TCP/IP function) the subtask LISTENing      *\n*           on the WEBPORT (which is HTTPWEB).  HTTPWEB issues        *\n*           the GIVESOCKET so the server space must reference         *\n*           the HTTPWEB subtask on the TAKESOCKET.                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nIDENT000 DS    0H\n         ITRACE ID=IDENT000,                                           +\n               DATA1=(NET_DATA+0,8),                                   +\n               DATA2=(NET_DATA+8,8)\n         MVC   PARTNER_CLIENT(CLIENTL),NET_DATA   SAVE PARTNER CLIENT\n         MVC   NET_DATA(CLIENTL),COMM_HTTPWEB_CLIENT\n         LA    R1,NET_PREFIX_LENGTH+CLIENTL       LENGTH TO SEND\n         ST    R1,NET_LENGTH                      SET LENGTH\n         MVI   NET_RETURN_CODE,$NET_OK            SET RC\n         BAL   R8,WRITE000                        SEND THE REPLY\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEF0000  DS    0H\n         ITRACE ID=DEF0000\n         ST    R10,WEBURL_SERVBLOK            SET OUR SERVBLOK\n         LA    R2,NET_DATA\n         XC    WEBURL_ECB,WEBURL_ECB          RESET ECB\nDEF0010  DS    0H\n         L     R3,COMM_URL_QUEUE              1ST URL ON QUEUE\n         ST    R3,WEBURL_NEXT                 CHAIN TO OUR URL\n         CS    R3,R2,COMM_URL_QUEUE           ADD TO QUEUE\n         BC    4,DEF0010                      TRY AGAIN\n         ITRACE ID=POSTURL\n         POST  COMM_URL_WORK_ECB              WAKE UP URL SUBTASK\n         ITRACE ID=DEF_WAIT                   WAIT\n         WAIT  ECB=WEBURL_ECB                 WAIT FOR URL SUBTASK\n         ITRACE ID=DEFINED\n         MVI   NET_RETURN_CODE,$NET_OK        SET RC\n         LA    R1,NET_PREFIX_LENGTH           LENGTH TO SEND\n         BAL   R8,WRITE000                    SEND THE REPLY\n         B     MAIN0000                       WAIT FOR MORE WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGETURL00 DS    0H\n         ICM   R7,15,WORK_URL_ADDRESS         ANY LEFT ON LOCAL QUEUE?\n         BNZ   GETURL20                       YES\n         ITRACE ID=GETURL00\n         WAIT  1,ECBLIST=WORK_WAIT            WAIT FOR WORK\n         ITRACE ID=AWAKE,                                              +\n               DATA1=(COMM_EOJ,1)\n         TM    COMM_EOJ,$EOJ_PHASE_1          EOJ SIGNALLED?\n         BO    TERM0000                       YES\n         XC    SERVER_WORK_ECB,SERVER_WORK_ECB\nGETURL10 DS    0H\n         SR    R1,R1\n         L     R7,SERVER_URL                  URL ADDRESS\n         CS    R7,R1,SERVER_URL               GRAB THE QUEUE\n         BC    4,GETURL10                     TRY AGAIN\n         ITRACE ID=HAVEQ,                                              +\n               RDATA1=R7\n         LTR   R7,R7\n         BZ    GETURL00                       NOTHING ON QUEUE\n         ST    R7,WORK_URL_ADDRESS            URL BEING PROCESSED\nGETURL20 DS    0H\nWEB      USING WEBURL,R7\n         ITRACE ID=SEND_URL,                                           +\n               DATA1=(wEB.WEBURL+0,8),                                 +\n               DATA2=(WEB.WEBURL+8,8)\n         LR    R0,R7                          COPY URL ADDRESS\n         L     R1,WEB.WEBURL_LENGTH           WEBURL LENGTH\n         LA    R1,WEBURLL+URL_PREFIX_L(,R1)   PLUS PREFIX LENGTH\n         LA    R14,NET_DATA                   DATA FOR NETWORK\n         LR    R15,R1                         COPY TO LENGTH 2\n         MVCL  R14,R0                         COPY URL INFO\n         L     R1,WEB.WEBURL_LENGTH           WEBURL LENGTH\n         LA    R1,NET_PREFIX_LENGTH+WEBURLL+URL_PREFIX_L(,R1)\n         ST    R1,NET_LENGTH                  LENGTH TO TRANSMIT\n         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R1,SERVER_URLS                 NBR OF URLS PROCESSED\n         LA    R1,1(,R1)                      PLUS 1\n         ST    R1,SERVER_URLS                 UPDATE STATISTICS\n* ------------------------------------------------------------------- *\n*        Send the URL to partner address space                        *\n* ------------------------------------------------------------------- *\n         ITRACE ID=SEND_URL\n         BAL   R8,WRITE000                    SEND URL TO SERVER SPACE\n* ------------------------------------------------------------------- *\n*        Wait for partner to issue TAKESOCKET                         *\n* ------------------------------------------------------------------- *\n         ITRACE ID=WAIT4OK\n         MVC   SERVER_TCPIP_FUNCTION,=CL16'READ'\n         SR    R2,R2                          INITIALIZE LENGTH READ\n         LA    R3,SERVER_IO_AREA              INITIALIZE I/O ADDRESS\n         MVC   WORK_LENGTH,=A(IOSIZE)\n         XC    SERVER_IO_AREA(4),SERVER_IO_AREA\nGETURL30 DS    0H\n         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB\n         EZASMI TYPE=READ,                                             +\n               S=SERVER_SOCKET,                                        +\n               TASK=WORK_TCPIP_TASK,                                   +\n               NBYTE=WORK_LENGTH,                                      +\n               BUF=(R3),                                               +\n               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +\n               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +\n               ECB=SERVER_TCPIP_ECB\n         WAIT  ECB=SERVER_TCPIP_ECB\n         ITRACE ID=READ_RC,                                            +\n               DATA1=(SERVER_TCPIP_RETURN_CODE,4),                     +\n               DATA2=(SERVER_TCPIP_ERROR_NUMBER,4)\n         TM    SERVER_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         A     R2,SERVER_TCPIP_RETURN_CODE    PLUS BYTES READ\n         A     R3,SERVER_TCPIP_RETURN_CODE    PLUS BYTES READ\n         L     R0,WORK_LENGTH\n         S     R0,SERVER_TCPIP_RETURN_CODE    MINUS LENGTH USED\n         ST    R0,WORK_LENGTH\n         C     R2,SERVER_IO_AREA              ALL DATA READ?\n         BL    GETURL30                       NO\n         ITRACE ID=ALLREAD\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        TAKESOCKET has completed in partner space                    *\n*        Send response..                                              *\n*          mostly this keeps the SENDs and WRITEs in 'pairs'.         *\n*          It also forces TCP/IP to \"flush\" the buffer.               *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LA    R1,NET_PREFIX_LENGTH           LENGTH FOR RESPONSE\n         ST    R1,NET_LENGTH                  SET LENGTH\n         BAL   R8,WRITE000                    SEND THE RESPONSE\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Processing for this URL for us is complete.                  *\n*        Queue the URL back to the HTTPWEB subtask so it              *\n*        can CLOSE the SOCKET given to the partner.                   *\n*        Once HTTPWEB has CLOSEd the SOCKET, the URL is FREEMAINed.   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=Q2_CMPLT,                                           +\n               RDATA1=R1\n         LR    R1,R7                          COPY WEBURL ADDRESS\n         MVC   WORK_URL_ADDRESS,WEBURL_NEXT   NEXT WEBURL\nGETURL40 DS    0H\n         L     R2,COMM_WEB_COMPLETED\n         ST    R2,WEB.WEBURL_NEXT-WEB.WEBURL(R1)\n         CS    R2,R1,COMM_WEB_COMPLETED       ADD WEBURL TO QUEUE\n         BC    4,GETURL40\n         ITRACE ID=POSTWEB\n         POST  COMM_WEB_WORK_ECB              WAKE UP HTTPWEB SUBTASK\n         ITRACE ID=NEXT_URL,                                           +\n               DATA1=(WORK_URL_ADDRESS,4)\n         B     MAIN0000                       WAIT FOR MORE WORK\n         DROP  WEB\n* ------------------------------------------------------------------- *\n*       Write to log                                                  *\n* ------------------------------------------------------------------- *\nLOG0000  DS    0H\n         L     R2,NET_LENGTH                  LENGTH\n         SH    R2,=Y(NET_PREFIX_LENGTH)       LENGTH OF LOGBLOK ONLY\n         ITRACE ID=LOG,                                                +\n               RDATA1=R5,                                              +\n               RDATA2=R2\n         GETMAIN RU,                          GET SOME STORAGE         +\n               LV=(R2),                                                +\n               LOC=BELOW\n         LR    R3,R1                          COPY STORAGE ADDRESS\n         USING LOGBLOK,R3                     DEFINE BASE\n         LR    R0,R1                          COPY STORAGE ADDRESS\n         LR    R1,R2                          COPY LENGTH\n         LA    R14,NET_DATA                   DATA ADDRESS IN I/O AREA\n         LR    R15,R2                         COPY TO LENGTH 2\n         MVCL  R0,R14                         COPY TO NEW STORAGE\nLOG0010  DS    0H\n         L     R2,COMM_LOG_QUEUE              FIRST NOW ON QUEUE\n         ST    R2,LOG_NEXT                    CHAIN TO NEW BLOCK\n         CS    R2,R3,COMM_LOG_QUEUE           ADD NEW BLOCK TO CHAIN\n         BC    4,LOG0010                      TRY AGAIN\n         POST  COMM_LOG_WORK_ECB              WAKE UP LOGGING SUBTASK\n         LA    R1,NET_PREFIX_LENGTH\n         ST    R1,NET_LENGTH                  SET LENGTH\n         MVI   NET_RETURN_CODE,$NET_OK        SET RETURN CODE\n         BAL   R8,WRITE000                    SEND RESPONSE\n         ITRACE ID=LOGGED\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWRITE000 DS    0H\n         LA    R3,NETBLOK                     INITIALIZE I/O ADDRESS\n         MVC   WORK_LENGTH,NET_LENGTH         INITIALIZE LENGTH\n         MVC   SERVER_TCPIP_FUNCTION,=CL16'WRITE'\nWRITE010 DS    0H\n         ITRACE ID=WRITE,                                              +\n               RDATA1=R3,                                              +\n               DATA2=(WORK_LENGTH,4)\n         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB\n         EZASMI TYPE=WRITE,                                            +\n               S=SERVER_SOCKET,                                        +\n               TASK=WORK_TCPIP_TASK,                                   +\n               NBYTE=WORK_LENGTH,                                      +\n               BUF=(R3),                                               +\n               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +\n               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +\n               ECB=SERVER_TCPIP_ECB\n         WAIT  ECB=SERVER_TCPIP_ECB\n         ITRACE ID=WRITE_RC,                                           +\n               DATA1=(SERVER_TCPIP_RETURN_CODE,4),                     +\n               DATA2=(SERVER_TCPIP_ERROR_NUMBER,4)\n         ICM   R1,15,SERVER_TCPIP_RETURN_CODE\n         BM    ERR0010\n         AR    R3,R1                          UPDATE I/O ADDRESS\n         L     R0,WORK_LENGTH                 LENGTH TO SEND\n         SR    R0,R1                          MINUS LENGTH SENT\n         ST    R0,WORK_LENGTH                 SAVE REMAINDER\n         BNZ   WRITE010                       WRITE NEXT PIECE\n         ITRACE ID=ALLWROTE\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=TCP_ERR,                                            +\n               DATA1=(SERVER_TCPIP_FUNCTION,4),                        +\n               DATA2=(SERVER_TCPIP_ERROR_NUMBER,4)\n         MVC   PRT_MESSAGE_ID(MSG03_L),MSG03\n         MVC   PRT_MESSAGE_ID+(MSG03_FUNCTION-MSG03)(L'MSG03_FUNCTION),+\n               SERVER_TCPIP_FUNCTION\n         UNPK  PRT_MESSAGE_ID+(MSG03_RETURN_CODE-MSG03)(9),SERVER_TCPIP+R+\n               _RETURN_CODE(5)\n         TR    PRT_MESSAGE_ID+(MSG03_RETURN_CODE-MSG03)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG03_RETURN_CODE-MSG03)+8,C' '\n         L     R1,SERVER_TCPIP_ERROR_NUMBER\n         CVD   R1,WORK_DWORD\n         ED    PRT_MESSAGE_ID+(MSG03_ERROR_NUMBER-MSG03)(L'MSG03_ERROR_+\n               NUMBER),WORK_DWORD+5\n         BAL   R9,PRT0000\n         ITRACE ID=TERMAPI\n         EZASMI TYPE=TERMAPI,                                          +\n               TASK=WORK_TCPIP_TASK\n         ITRACE ID=DEL_URLS\n         XC    WEBURL(256),WEBURL\n         MVI   WEBURL_STATUS,$URL_DELETE      DELETE ALL URLS\n         ST    R10,WEBURL_SERVBLOK            OUR SERVBLOK ADDRESS\n         LA    R2,WEBURL                      OUR WEBURL\nERR0020  DS    0H\n         L     R1,COMM_URL_QUEUE              1ST ON QUEUE\n         ST    R1,WEBURL_NEXT                 SET 'NEXT'\n         CS    R1,R2,COMM_URL_QUEUE           ADD OURS TO QUEUE\n         BC    4,ERR0020                      TRY AGAIN\n         ITRACE ID=POST_URL\n         POST  COMM_URL_WORK_ECB              WAKE UP URL SUBTASK\n         ITRACE ID=WAIT_URL\n         WAIT  ECB=WEBURL_ECB                 WAIT FOR URL SUBTASK\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVI   PRT_CC,C' '                    SINGLE SPACE\n         MVC   PRT_MESSAGE_ID(PRT_LRECL),PRT_CC\nPRT0010  DS    0H\n         L     R15,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE\n         ST    R15,PRT_NEXT-PRTBLOK(R1)\n         CS    R15,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ITRACE ID=SHUTDOWN\n         MVI   NET_RETURN_CODE,$NET_SHUTDOWN\n         OI    WORK_FLAGS,$SHUTDOWN\n         LA    R1,NET_PREFIX_LENGTH\n         ST    R1,NET_LENGTH\n         ITRACE ID=SENDSHUT\n         BAL   R8,WRITE000\n         ITRACE ID=CLOSE\n         MVC   SERVER_TCPIP_FUNCTION,=CL16'CLOSE'\n         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB\n         EZASMI TYPE=CLOSE,                                            +\n               S=SERVER_SOCKET,                                        +\n               TASK=WORK_TCPIP_TASK,                                   +\n               RETCODE=SERVER_TCPIP_RETURN_CODE,                       +\n               ERRNO=SERVER_TCPIP_ERROR_NUMBER,                        +\n               ECB=SERVER_TCPIP_ECB\n         ITRACE ID=TERMAPI\n         MVC   SERVER_TCPIP_FUNCTION,=CL16'TERMAPI'\n         XC    SERVER_TCPIP_ECB,SERVER_TCPIP_ECB\n         EZASMI TYPE=TERMAPI,                                          +\n               TASK=WORK_TCPIP_TASK\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Exit                                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         TM    WORK_FLAGS,$SHUTDOWN           EXITING DUE TO SHUTDOWN?\n         BO    EXIT0050                       YES\n* ------------------------------------------------------------------- *\n*        Remove SERVBLOK from chain of active servers                 *\n* ------------------------------------------------------------------- *\nEXIT0010 DS    0H\n         LA    R2,COMM_SERVERS                1ST SERVER\nEXIT0020 DS    0H\n         C     R10,0(R2)                      THIS ONE POINTING TO US?\n         BE    EXIT0030                       YES\n         ICM   R2,15,0(R2)                    NEXT ON CHAIN\n         BNZ   EXIT0020                       LOOP\n         DC    H'0'                           NOT FOUND.. VERY BAD NEWS\nEXIT0030 DS    0H\n         L     R1,SERVER_NEXT                 NEXT ON CHAIN\n         CS    R10,R1,0(R2)                   REMOVE OURSELF FROM CHAIN\n         BC    4,EXIT0010                     TRY AGAIN\n* ------------------------------------------------------------------- *\n*        Add SERVBLOK to chain of 'lost' servers                      *\n* ------------------------------------------------------------------- *\nEXIT0040 DS    0H\n         L     R1,COMM_LOST_SERVERS           1ST ON CHAIN\n         ST    R1,SERVER_NEXT                 CHAIN TO OUR SERVBLOK\n         CS    R1,R10,COMM_LOST_SERVERS       ADD OURSELF TO CHAIN\n         BC    4,EXIT0040                     TRY AGAIN\n         POST  COMM_MAIN_WORK_ECB             WAKE UP MAIN TASK\n* ------------------------------------------------------------------- *\n*        FREEMAIN work area and exit                                  *\n* ------------------------------------------------------------------- *\nEXIT0050 DS    0H\n         L     R1,SERVER_WORK_ADDRESS         WORK AREA ADDRESS\n         L     R0,WORK_SIZE\n         L     R13,4(R13)                     CALLER'S R13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=(0)\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n*-------------------------------------------------------------------- *\nWORK_SIZE           CXD\nWORK_START          DC    Q(DXDSERV)\nIOSIZE              DC    A(URL_BUFFER_SIZE)\n\nHEXCHAR             EQU   *-C'0'\n                    DC    C'0123456789ABCDEF'\n\nMSG01               DC    CL15'HTTPSERV01I'\n                    DC    C'HTTPSERV subtask '\nMSG01_SUBTASK       DC    CL8' '\n                    DC    C' initializing'\nMSG01L              EQU   *-MSG01\n\nMSG02               DC    CL15'HTTPSERV02I'\n                    DC    C'Creating SOCKET'\nMSG02L              EQU   *-MSG02\n\nMSG03               DS    0C\n                    DC    CL15'HTTPSERV03I'\n                    DC    C'TCP/IP function '\nMSG03_FUNCTION      DC    CL16' '\n                    DC    C'  Return code: '\nMSG03_RETURN_CODE   DC    CL8' '\n                    DC    C'  Error number:'\nMSG03_ERROR_NUMBER  DC    X'402020202120'\nMSG03_L             EQU   *-MSG03\n\nSERVICE_TABLE  DS    0A\n               DC    AL1($NET_IDENTIFY),AL4(IDENT000)\n               DC    AL1($NET_DEFINE_PREFIX),AL4(DEF0000)\n               DC    AL1($NET_DEFINE_SPECIFIC),AL4(DEF0000)\n               DC    AL1($NET_GET_URL),AL4(GETURL00)\n               DC    AL1($NET_LOG_INQUIRY),AL4(LOG0000)\n               DC    AL1($NET_LOG),AL4(LOG0000)\n               DC    X'FF'\n         LTORG\n* ------------------------------------------------------------------- *\n*              WORK AREA                                              *\n* ------------------------------------------------------------------- *\nDXDSERV              DSECT\n                     STDSAVE DSECT=NO\nWORK_ID              DS   CL8\n\nWORK_DWORD           DS   D\n\nWORK_WAIT            DS   0F\nWORK_ECB1            DS   A\nWORK_ECB2            DS   A\n\nWORK_URL_ADDRESS     DS   A\n\nWORK_LENGTH          DS   F\n\nWORK_RC              DS   H\n\nWORK_TCPIP_TASK      EZASMI TYPE=TASK,STORAGE=CSECT\n\nWORK_10              DS   CL10\n\nWORK_FLAGS           DS   X\n$SHUTDOWN            EQU  X'80'\n\n                     PRTBLOK DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON  MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SERVBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         NETBLOK  DSECT=YES\n         WEBURL   DSECT=NO\n         URL      DSECT=NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LOGBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         EZASMI TYPE=GLOBAL,STORAGE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         CLIENT PREFIX=DUMMY\nCLIENTL  EQU    *-DUMMY_CLIENT\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  HTTPSERV\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HTTPSKEL": {"ttr": 4358, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x04\\x01\\x042?\\x01\\x07$\\x0f\\x14\"\\x00\\xfb\\x01\\x01\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2004-11-18T00:00:00", "modifydate": "2007-08-28T14:22:04", "lines": 251, "newlines": 257, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*    Skeleton that can be used as basis for an application.           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPSKEL CSECT\nHTTPSKEL AMODE 31\nHTTPSKEL RMODE 24\n         STM   R14,R12,12(R13)       SAVE REGISTERS\n         LR    R12,R15               SET BASE REGISTER\n         USING HTTPSKEL,R12          DEFINE PROGRAM BASE\n         B     INIT0000\nMODID    DC    CL8'HTTPSKEL'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         GETMAIN RU,LV=WORKL,LOC=ANY\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n         MVI   WORK_FLAGS,0\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Initialize the interface to the HTTP main server                *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         LOAD  EP=HTTPSUB\n         MVI   WORK_HTTP_FUNCTION,$HTTP_INIT\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Connect to the HTTP main server                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   HTTP_FUNCTION,$HTTP_CONNECT\n         MVC   HTTP_MAIN_APPL,HTTPMAIN_APPLID\n         MVC   HTTP_OUR_APPL,OUR_APPLID\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Send URLs to the HTTP main server                               *\n*                                                                     *\n*     This lets the HTTP main server \"know\" which URLs we want        *\n*     to process.  You can send multiple URLs (one at a time).        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEFURL00 DS    0H\n         MVI   WORK_HTTP_FUNCTION,$HTTP_DEFINE_URL\n         LA    R2,URL_TABLE\n         USING URL_DSECT,R2\nDEFURL01 DS    0H\n         MVC   HTTP_LENGTH,URL_LENGTH\n         LA    R1,URL_TEXT\n         ST    R1,HTTP_DATA\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0030\n         ICM   R1,15,URL_LENGTH\n         LA    R2,4(R1,R2)\n         CLI   0(R2),X'FF'\n         BNE   DEFURL01\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Wait for the main address space to get a reference to           *\n*     one of the URLs or command from the console.                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         MVI   WORK_HTTP_FUNCTION,$HTTP_GET_URL\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_CONSOLE\n         BE    CONS0000\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0040\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     We have a URL                                                   *\n*                                                                     *\n*     HTTP_LENGTH will be set to the length of the URL string         *\n*     HTTP_DATA will be set to the address of the URL string          *\n*                                                                     *\n* ------------------------------------------------------------------- *\n          .\n          .\n          .\n          .\n          .\n          .\n        Add code to process this URL\n\n        This may need to be a loop.\n        You can issue as many \"writes\" as you need\n\n          .\n          .\n          .\n\n         Set HTTP_LENGTH to the length of the data to send\n         Set HTTP_DATA to the address of the data to send\n\n         MVI   WORK_HTTP_FUNCTION,$HTTP_WRITE Write to WEB user\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0050\n          .\n          .\n          .\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*       The URL has been processed.                                   *\n*       CLOSE this SOCKET                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVI   WORK_HTTP_FUNCTION,$HTTP_CLOSE\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0060\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   A command has arrived from the console                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCONS0000 DS    0H\n         CLC   =C'STOP ',HTTP_DATA\n         BE    EXIT0000\n         .\n         .\n      Process this command\n         .\n         .\n* ------------------------------------------------------------------- *\n*       Error from the INIT call                                      *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n* ------------------------------------------------------------------- *\n*       Error on the Connect call                                     *\n* ------------------------------------------------------------------- *\nERR0020  DS    0H\n* ------------------------------------------------------------------- *\n*       Error defining A URL                                          *\n* ------------------------------------------------------------------- *\nERR0030  DS    0H\n* ------------------------------------------------------------------- *\n*       Error getting a URL                                           *\n* ------------------------------------------------------------------- *\nERR0040  DS    0H\n* ------------------------------------------------------------------- *\n*       Error writing to web user                                     *\n* ------------------------------------------------------------------- *\nERR0050  DS    0H\n* ------------------------------------------------------------------- *\n*       Error during CLOSE SOCKET                                     *\n* ------------------------------------------------------------------- *\nERR0060  DS    0H\n* ------------------------------------------------------------------- *\n*       Error during clean up                                         *\n* ------------------------------------------------------------------- *\nERR0070  DS    0H\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         MVI   WORK_HTTP_FUNCTION,$HTTP_CLEAN_UP\n         LA    R1,HTTP_PARMS\n         L     R15,WORK_HTTPSUB\n         BALR  R14,R15\n         CLI   HTTP_RETURN_CODE,$HTTP_OK\n         BNE   ERR0070\n         DELETE EP=HTTPSUB\n         LR    R1,R13                  COPY WORK AREA ADDRESS\n         L     R13,4(R13)              RESTORE CALLER'S R13\n         SR    R2,R2                   CLEAR REGISTER 2\n         IC    R2,WORK_RC              GET RETURN CODE\n         FREEMAIN RU,A=(1),LV=WORKL    FREE THE WORK AREA\n         L     R14,12(R13)             RESTORE R14\n         LR    R15,R2                  INSERT RETURN CODE\n         LM    R0,R12,20(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOUR_APPLID          DC  CL8'ourappl'\nHTTPMAIN_APPLID     DC  CL8'httpappl'\n\n\n*\n*      Sample URLs\n*\nURL_TABLE           DS  0C\n                    DC  AL4(URL1E-URL1B)\nURL1B               EQU *\n                    DC  C'TEXT FOR URL1'\nURL1E               EQU *\n\n                    DC  AL4(URL2E-URL2B)\nURL2B               EQU *\n                    DC  C'URL 2 TEXT'\nURL2E               EQU *\n\n                    DC  X'FF'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nURL_DSECT           DSECT\nURL_LENGTH          DS  XL4\nURL_TEXT            DS  0C\n\n* ------------------------------------------------------------------- *\n*        WORK AREAS                                                   *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    DS    18F\nWORK_HTTPSUB        DS    A               HTTPSUB ENTRY POINT\n\n                    SUBPARM\n\nWORK_RC             DS    X\n\nWORK_HTTP_APPL_ID   DS    CL8\nWORK_APPL_ID        DS    CL8\n\nWORK_HTTP_FUNCTION  DS    C\n\nWORK_FLAGS          DS    X\n\nWORKL               EQU   *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  HTTPSKEL\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HTTPSNAP": {"ttr": 4365, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01+\\x00\"\\x01\\x04$o\\x01\\x07\\'\\x8f\\x07@\\x02\\xcf\\x02\\xe4\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.43", "flags": 0, "createdate": "2004-09-02T00:00:00", "modifydate": "2007-10-05T07:40:22", "lines": 719, "newlines": 740, "modlines": 0, "user": "RLRICE"}, "text": "         MACRO\n         FDEF  &NAME,&TYPE,&LEN,&BASE=\n         LCLC  &T\n         LCLA  &L\n         GBLC  &BASENAME\n         AIF   (T'&BASE EQ 'O').NOBASE\n.BASE    ANOP\n&BASENAME SETC  '&BASE'\n         DC    CL8'&BASE'            CONTROL BLOCK NAME\n         MEXIT\n.NOBASE  ANOP\n         AIF   (T'&TYPE EQ 'O').TYPE1\n&T       SETC  '&TYPE'\n         AGO   .TYPE2\n.TYPE1   ANOP\n&T       SETC  T'&NAME\n.TYPE2   ANOP\n         AIF   (T'&LEN EQ 'O').LEN1\n&L       SETA  &LEN\n         AGO   .LEN2\n.LEN1    ANOP\n&L       SETA  L'&NAME\n.LEN2    ANOP\n         DC    CL32'&NAME'           FIELD NAME\n         DC    AL2(&NAME-&BASENAME)  DISP WITHIN CONTROL BLOCK\n         DC    C'&T'                 FIELD TYPE\n         DC    AL2(&L)               SOURCE FIELD LENGTH\n         MEND\n* ------------------------------------------------------------------- *\n*              COMMON DATA MAP                                        *\n* ------------------------------------------------------------------- *\n         USING HTTPCOMM,R11                   DEFINE BASE\n         COMMON   MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SERVBLOK\n         URL\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPSNAP                                              *\n*                                                                     *\n*  PROCESS SNAP commands entered via the console.                     *\n*                                                                     *\n*  At entry:                                                          *\n*    R1 command address                                               *\n*    R2 command length                                                *\n*    R3 address of console id                                         *\n*                                                                     *\n*                                                                     *\n*  SNAP dumps can be requested via a \"F xxxxx,SNAP\" console command   *\n*  where xxxxx is the name of the HTTPMAIN STC or JOB address space.  *\n*                                                                     *\n*  When a SNAP command is entered, HTTPCONS 1) LOADs this module,     *\n*  2) links to this code via a BALR, 3) DELETEs this so the storage   *\n*  it would occupy can be used for other purposes.  The trade-off is  *\n*  the overhead of a LOAD and DELETE each time a SNAP dump is         *\n*  requested.                                                         *\n*                                                                     *\n*                                                                     *\n*  The SYSOUT class used for the SNAP dumps is specified on the       *\n*  SNAPCLASS control statement in HTTPMAIN control statements.        *\n*                                                                     *\n*  One possible improvement may be to allow a SYSOUT class to be      *\n*  specified on the SNAP command: \"F xxxxx,SNAP,c\" where c would      *\n*  an optional operand.  If \"c\" is specified it would over-ride       *\n*  the SNAPCLASS.                                                     *\n*                                                                     *\n*                                                                     *\n*  The HTTPSNAP SYSOUT files are dynamically allocated with           *\n*  FREE=CLOSE.  This \"spins off\" each SNAP dump so it can be          *\n*  printed or deleted from the queue without having to stop the       *\n*  HTTPMAIN address space.                                            *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPSNAP CSECT\nHTTPSNAP AMODE 31\nHTTPSNAP RMODE ANY\n         USING HTTPSNAP,R12                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPSNAP'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         GETMAIN RU,                          WORK AREA STORAGE        +\n               LV=WORKL,                      .. SIZE                  +\n               LOC=BELOW                      .. MUST BE BELOW\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORK_AREA,R13                  DEFINE BASE\n         ITRACE ID=INIT\n         MVC   WORK_CID,0(R3)                 COPY CONSOLE ID\n         MVC   WORK_WTO(WTOL),WTOI            INITIALIZE WTO\n         LA    R7,WORK_WTO\n         USING WPL,R7                         DEFINE BASE\n         MVI   WORK_HEADING,C' '\n         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING\n         MVI   WORK_PRINT_SPACE,C' '          INITIALIZE SPACE\n         MVC   WORK_PRINT,WORK_PRINT_SPACE\n         MVC   DAIRDDN,SNAPDDN                SET DDNAME\n         MVI   DAIRCMD,$DAIRALS               ALLOCATE SNAP SYSOUT\n         MVC   DAIRCLS,COMM_SNAP_CLASS\n         LA    R1,DAIRBLOK                    REQUEST BLOCK'S ADDRESS\n         L     R15,COMM_HTTPDAIR_ADDRESS\n         BALR  R14,R15                        LINK TO HTTPDAIR\n         OC    DAIRR15,DAIRR15                ALLOCATION SUCCESSFUL?\n         BNZ   ERR0010                        NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     The output DD has been allocated.                               *\n*                                                                     *\n*     Open the DCB.                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_DCB(DCBL),DCBI            INITIALIZE THE DCB\n         MVC   WORK_OPEN(OPENL),OPENI\n         OPEN  WORK_DCB,                                               +\n               MODE=31,                                                +\n               MF=(E,WORK_OPEN)\n         ZAP   WORK_PAGE,P0                   INITIALIZE PAGE NUMBER\n         ZAP   WORK_LINE,P0                   INITIALIZE LINE NUMBER\n         AP    COMM_SNAP_NUMBER,P1            ADD 1 TO NUMBER DUMPS\n         TIME  DEC                            GET DATE AND TIME\n         STM   R0,R1,WORK_TIME_DATE           SAVE TIME AND DATE\n         AP    WORK_DATE,P1900000             ADD CENTURY TO DATE\n         BAL   R10,HEAD0000                   PRINT HEADING\n* ------------------------------------------------------------------- *\n*     Format fields from the common area                              *\n* ------------------------------------------------------------------- *\n         ST    R11,WORK_FMT_BASE              SET BASE\n         MVC   WORK_FMT_FDEF,A_HTTPCOMM_FDEF\n         BAL   R8,FMT0000                     FORMAT THE SCOMM FIELDS\n* ------------------------------------------------------------------- *\n*      List the active URLs                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=URLS\n         XC    WEBURL(WEBURLL),WEBURL         INITIALIZE WEBURL BLOCK\n         MVC   WEBURL_EYE,C_WEBURL\n         LA    R0,WEBURLL\n         ST    R0,WEBURL_LENGTH               SET LENGTH\n         LA    R0,WORK_DCB                    DCB ADDRESS\n         ST    R0,WEBURL_SERVBLOK             PASS TO HTTPURL\n         MVI   WEBURL_STATUS,$URL_SNAP\n         LA    R1,WEBURL\nSNAP0010 DS    0H\n         L     R2,COMM_URL_QUEUE              1ST ON QUEUE\n         ST    R2,WEBURL_NEXT\n         CS    R2,R1,COMM_URL_QUEUE           ADD NEW BLOCK\n         POST  COMM_URL_WORK_ECB              WAKE UP URL SUBTASK\n         WAIT  ECB=WEBURL_ECB                 WAIT FOR URL SUBTASK\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Print the trace table                                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSNAP0100 DS    0H\n         ITRACE ID=TRACE\n         MVI   WORK_PRINT_CC,C'1'             FORCE TOP OF PAGE\n         MVC   WORK_PRINT_DATA(MSG05L),MSG05\n         BAL   R9,PRT0000\n         ICM   R2,15,TRACE_FIRST              FIRST TRACE TABLE ENTRY\n         BZ    CLOSE000                       NO TRACE TABLE\n         USING TRACE_ENTRY,R2                 DEFINE BASE\nSNAP0110 DS    0H\n         OC    TRACE_ENTRY(TRACE_ENTRY_LENGTH),TRACE_ENTRY\n         BZ    CLOSE000                       YES\n         MVC   WORK_PRINT_DATA(MSG06L),MSG06\n         C     R2,TRACE_CURRENT               CURRENT ENTRY?\n         BNE   SNAP0120                       NO\n         MVC   WORK_PRINT_DATA+(MSG06_CUR-MSG06)(L'MSG06_CUR),=C'CURREN+=>'\n               T -->'\nSNAP0120 DS    0H\n         UNPK  WORK_PRINT_DATA+(MSG06_TCB-MSG06)(7),TRACE_ENTRY_TCB(5)   ADDR\n         TR    WORK_PRINT_DATA+(MSG06_TCB-MSG06)(6),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG06_TCB-MSG06)+6,C' '\n         MVC   WORK_PRINT_DATA+(MSG06_MOD-MSG06)(L'MSG06_MOD),TRACE_ENT+\n               RY_MODULE_NAME\n         MVC   WORK_PRINT_DATA+(MSG06_ID-MSG06)(L'MSG06_ID),TRACE_ENTRY+\n               _TRACE_ID\n         MVC   WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),TRACE_ENTRY+\n               _DATA_1\n         TR    WORK_PRINT_DATA+(MSG06_D1-MSG06)(L'MSG06_D1),PRINTABLE\n         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)(9),TRACE_ENTRY_DATA_1(+\n               5)\n         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)(8),HEXCHAR\n         UNPK  WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(9),TRACE_ENTRY_DATA_+\n               1+4(5)\n         TR    WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8(8),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG06_D1X-MSG06)+8+8,C' '\n         MVC   WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),TRACE_ENTRY+\n               _DATA_2\n         TR    WORK_PRINT_DATA+(MSG06_D2-MSG06)(L'MSG06_D2),PRINTABLE\n         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)(9),TRACE_ENTRY_DATA_2(+\n               5)\n         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)(8),HEXCHAR\n         UNPK  WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(9),TRACE_ENTRY_DATA_+\n               2+4(5)\n         TR    WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8(8),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG06_D2X-MSG06)+8+8,C' '\n         BAL   R9,PRT0000\n         C     R2,TRACE_LAST                  END OF TABLE?\n         BE    CLOSE000                       YES\n         LA    R2,TRACE_ENTRY_LENGTH(R2)\n         B     SNAP0110\n         DROP  R2\n* ------------------------------------------------------------------- *\n*     Close the DCB, issue WTO and exit                               *\n* ------------------------------------------------------------------- *\nCLOSE000 DS    0H\n         MVC   WORK_CLOSE(CLOSEL),CLOSEI\n         CLOSE (WORK_DCB),                                             +\n               MODE=31,                                                +\n               MF=(E,WORK_CLOSE)\n         MVC   WPLTXT(MSG01L),MSG01           COPY MESSAGE\n         BAL   R10,WTO0000                    ISSUE WTO\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMT0000  DS    0H\n         STM   R0,R15,WORK_FMT_SAVE\n         L     R2,WORK_FMT_BASE\n         L     R3,WORK_FMT_FDEF\n         USING FDEF,R3\n         MVC   WORK_PRINT_DATA(MSG03L),MSG03\n         MVC   WORK_PRINT_DATA+(MSG03_BLOCK-MSG03)(L'MSG03_BLOCK),0(R3)\n         UNPK  WORK_UNPACK(9),WORK_FMT_BASE(5)\n         TR    WORK_UNPACK,HEXCHAR\n         MVC   WORK_PRINT_DATA+(MSG03_ADDR-MSG03)(L'MSG03_ADDR),WORK_UN+\n               PACK\n         BAL   R9,PRT0000                     PRINT\n         LA    R3,8(R3)                       FIRST FIELD DEFINITION\nFMT0010  DS    0H\n         MVC   WORK_PRINT_DATA(MSG04L),MSG04\n         LA    R4,WORK_PRINT_DATA+(MSG04_DATA-MSG04)\n         USING FLD,R4\n         LA    R5,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))\nFMT0020  DS    0H\n         MVC   FLD_LABEL,FDEF_NAME            COPY FIELD NAME\n         MVC   FLD_TYPE+1(1),FDEF_TYPE        FIELD TYPE\n         SR    R1,R1                          CLEAR REGISTER\n         ICM   R1,3,FDEF_LENGTH               LENGTH\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   FLD_LENGTH,=X'40202120'        INITIALIZE WITH EDIT WORD\n         ED    FLD_LENGTH,WORK_DWORD+6        EDIT LENGTH\n         UNPK  WORK_UNPACK(5),FDEF_DISP(3)    UNPACK DISPLACEMENT\n         TR    WORK_UNPACK(4),HEXCHAR         CONVERT TO PRINTABLE\n         MVC   FLD_DISP,WORK_UNPACK           COPY DISPLACEMENT\n         SR    R14,R14                        CLEAR REGISTER\n         ICM   R14,3,FDEF_LENGTH              FIELD LENGTH\n         SR    R15,R15                        CLEAR REGISTER\n         ICM   R15,3,FDEF_DISP                DISPLACEMENT\n         AR    R15,R2                         DATA ADDRESS\n         CLI   FDEF_TYPE,C'A'                 ADDRESS?\n         BE    FMT0050                        YES\n         CLI   FDEF_TYPE,C'C'                 CHARACTER?\n         BE    FMT0030                        YES\n         CLI   FDEF_TYPE,C'F'                 FULLWORD?\n         BE    FMT0060                        YES\n         CLI   FDEF_TYPE,C'H'                 HALFWORD?\n         BE    FMT0070                        YES\n         CLI   FDEF_TYPE,C'P'                 PACKED DECIMAL?\n         BE    FMT0080                        YES\n         CLI   FDEF_TYPE,C'X'                 HEX?\n         BE    FMT0050                        YES\n         B     FMT0090\n* ----------------------  CHARACTER FIELDS  ------------------------- *\nFMT0030  DS    0H\n         CH    R14,H8                         LONGER THAN 8 CHARACTERS?\n         BNH   FMT0040                        NO\n         LH    R14,H8                         LIMIT TO 8\nFMT0040  DS    0H\n         BCTR  R14,0\n         EX    R14,FMTMVC01                   COPY DATA\n         B     FMT0090\n* ----------------------  ADDRESS FIELDS  --------------------------- *\nFMT0050  DS    0H\n         UNPK  WORK_UNPACK(9),0(5,R15)        UNPACK THE DATA\n         TR    WORK_UNPACK,HEXCHAR            TRANSLATE TO PRINTABLE\n         SLL   R14,1                          MULTIPLY BY 2\n         BCTR  R14,0                          MINUS 1\n         LA    R1,FLD_VALUE+7\n         SR    R1,R14\n         EX    R14,FMTMVC02                   COPY TO PRINT AREA\n         B     FMT0090\n* ----------------------  FULLWORD FIELDS  -------------------------- *\nFMT0060  DS    0H\n         L     R1,0(R15)                      LOAD VALUE\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   FLD_VALUE,=X'4020202020202120'\n         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE\n         B     FMT0090\n* ----------------------  FULLWORD FIELDS  -------------------------- *\nFMT0070  DS    0H\n         LH    R1,0(R15)                      LOAD VALUE\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         MVC   FLD_VALUE,=X'4020202020202120'\n         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE\n         B     FMT0090\n* ----------------------  PACKED DECIMAL ---------------------------- *\nFMT0080  DS    0H\n         BCTR  R14,0\n         EX    R14,FMTZAP                     ZAP IT INTO DWORD\n         MVC   FLD_VALUE,=X'4020202020202120'\n         ED    FLD_VALUE,WORK_DWORD+4         EDIT VALUE\nFMT0090  DS    0H\n         LA    R4,FLDL+5(R4)                  NEXT IN OUTPUT\n         LA    R3,FDEFL(R3)                   NEXT FIELD DEFINITION\n         CLI   0(R3),X'FF'                    END OF FIELDS?\n         BE    FMT0100                        YES\n         BCT   R5,FMT0020                     FORMAT NEXT FIELD\n         BAL   R9,PRT0000                     PRINT\n         B     FMT0010\nFMT0100  DS    0H\n         BAL   R9,PRT0000                     PRINT LAST LINE\n         BAL   R9,PRT0000                     PRINT BLANK LINE\n         LM    R0,R15,WORK_FMT_SAVE           RESTORE REGISTERS\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFMTMVC01 MVC   FLD_VALUE(0),0(R15)            COPY DATA\nFMTMVC02 MVC   0(0,R1),WORK_UNPACK            COPY DATA\nFMTZAP   ZAP   WORK_DWORD,0(0,R15)            ZAP PACKED DECIMAL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         CP    WORK_LINE,MAXLINE\n         BL    PRT0010\n         BAL   R10,HEAD0000                   PRINT NEXT HEADING\nPRT0010  DS    0H\n         PUT   WORK_DCB,WORK_PRINT            PRINT\n         AP    WORK_LINE,P1                   ADD TO LINE COUNT\n         MVC   WORK_PRINT,WORK_PRINT_SPACE\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHEAD0000 DS    0H\n         MVC   WORK_HEADING(HEADINGL),HEADING\n         ED    WORK_HEADING+(HEAD_DATE-HEADING)(L'HEAD_DATE),WORK_DATE\n         UNPK  WORK_UNPACK(7),WORK_TIME(4)\n         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+0(2),WORK_UNPACK+0\n         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+3(2),WORK_UNPACK+2\n         MVC   WORK_HEADING+(HEAD_TIME-HEADING)+6(2),WORK_UNPACK+4\n         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+2,C':'\n         MVI   WORK_HEADING+(HEAD_TIME-HEADING)+5,C':'\n         ED    WORK_HEADING+(HEAD_DUMP-HEADING)(L'HEAD_DUMP),COMM_SNAP_+\n               NUMBER\n         AP    WORK_PAGE,P1\n         ED    WORK_HEADING+(HEAD_PAGE-HEADING)(L'HEAD_PAGE),WORK_PAGE\n         PUT   WORK_DCB,WORK_HEADING\n         MVI   WORK_HEADING,C' '\n         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING\n         LA    R1,((L'WORK_PRINT_DATA-MSG04L)/(FLDL+5))\n         LA    R15,WORK_HEADING+(MSG04_DATA-MSG04)+1\nHEAD0010 DS    0H\n         MVC   0(FLD_HEADL,R15),FLD_HEAD\n         LA    R15,FLD_HEADL+5(R15)\n         BCT   R1,HEAD0010\n         PUT   WORK_DCB,WORK_HEADING\n         MVI   WORK_HEADING,C' '\n         MVC   WORK_HEADING+1(L'WORK_HEADING-1),WORK_HEADING\n         ZAP   WORK_LINE,P1\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   WPLTXT(MSG02L),MSG02\n         UNPK  WPLTXT+(MSG02_R15-MSG02)(5),DAIRR15(3)\n         TR    WPLTXT+(MSG02_R15-MSG02)(4),HEXCHAR\n         MVI   WPLTXT+(MSG02_R15-MSG02)+4,C' '\n         UNPK  WPLTXT+(MSG02_ERR-MSG02)(5),DAIRERR(3)\n         TR    WPLTXT+(MSG02_ERR-MSG02)(4),HEXCHAR\n         MVI   WPLTXT+(MSG02_ERR-MSG02)+4,C' '\n         UNPK  WPLTXT+(MSG02_INFO-MSG02)(5),DAIRINFO(3)\n         TR    WPLTXT+(MSG02_INFO-MSG02)(4),HEXCHAR\n         MVI   WPLTXT+(MSG02_INFO-MSG02)+4,C' '\n         BAL   R10,WTO0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWTO0000  DS    0H\n         ITRACE ID=WTO\n         WTO   MF=(E,WORK_WTO),               ISSUE WTO                +\n               CONSID=WORK_CID                .. TO SAME CONSOLE\n         MVI   WPLTXT,C' '\n         MVC   WPLTXT+1(99),WPLTXT\n         BR    R10\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKL\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDCBI     DCB   DDNAME=HTTPSNAP,                                        +\n               DSORG=PS,                                               +\n               LRECL=133,                                              +\n               RECFM=FBA,                                              +\n               MACRF=PM\nDCBL     EQU   *-DCBI\nOPENI    OPEN  (*,OUTPUT),MF=L,MODE=31\nOPENL    EQU   *-OPENI\nCLOSEI   CLOSE (*),MF=L,MODE=31\nCLOSEL   EQU   *-CLOSEI\n\nA_HTTPCOMM_FDEF DC  A(HTTPCOMM_FDEF)\nA_SERVBLOK_FDEF DC  A(SERVBLOK_FDEF)\n\nWTOI     WTO   '                                                       +\n                                                                     ',+\n               CONSID=,                                                +\n               MF=L\nWTOL     EQU   *-WTOI\n\nF0          DC    F'0'\nH8          DC    H'8'\n\nP0          DC    P'0'\nP1          DC    P'1'\nP1900000    DC    P'1900000'\nMAXLINE     DC    P'65'\nSNAPDDN     DC    CL8'HTTPSNAP'\nC_WEBURL    DC    CL8'WEBURL  '\n\nHEXCHAR     EQU   *-C'0'\n            DC    C'0123456789ABCDEF'\n\nHEADING     DS    0C\n            DC    C'1'\nHEAD_DATE   DC    X'40212020204B202020'\n            DC    CL2' '\nHEAD_TIME   DS    CL8' '\n            DC    CL29' '\n            DC    C'HTTP MAIN SNAP DUMP'\nHEAD_DUMP   DC    X'40206B2020206B202120'\n            DC    CL40' '\nHEAD_PAGE   DC    X'402020202120'\nHEADINGL    EQU   *-HEADING\n\nFLD_HEAD    DC    CL32'LABEL'\n            DC    CL2' '\n            DC    CL4'TYPE'\n            DC    CL3' '\n            DC    CL3'LEN'\n            DC    CL2' '\n            DC    CL4'DISP'\n            DC    CL3' '\n            DC    CL7'VALUE'\nFLD_HEADL   EQU   *-FLD_HEAD\n\nMSG01       DS    0C\n            DC    C'HTTPSNAP01I'\n            DC    C'SNAP DUMP complete'\nMSG01L      EQU   *-MSG01\n\nMSG02       DS    0C\n            DC    C'HTTPSNAP02E '\n            DC    C'Allocation fro SNAP DUMP failed.  R15='\nMSG02_R15   DC    CL4' '\n            DC    C'  ERROR='\nMSG02_ERR   DC    CL4' '\n            DC    C' INFO='\nMSG02_INFO  DC    CL4' '\nMSG02L      EQU   *-MSG02\n\nMSG03       DC    C'HTTPSNAP03I'\n            DC    C' '\nMSG03_BLOCK DC    CL8' '\n            DC    C' AT '\nMSG03_ADDR  DC    CL8' '\nMSG03L      EQU   *-MSG03\n\nMSG04       DC    C'HTTPSNAP04I'\n            DC    C' '\nMSG04_DATA  DS    C\nMSG04L      EQU   *-MSG04\n\nMSG05       DC    C'HTTPSNAP05I'\n            DC    CL10' '\n            DC    C'-------------  TRACE TABLE ------------'\nMSG05L      EQU   *-MSG05\n\nMSG06       DS    0C\n            DC    C'          '\nMSG06_CUR   DC    CL11' '\n            DC    CL03' '\nMSG06_TCB   DC    CL06' '\n            DC    CL03' '\nMSG06_MOD   DC    CL05' '\n            DC    CL03' '\nMSG06_ID    DC    CL08' '\n            DC    CL03' '\nMSG06_D1    DC    CL08' '\n            DC    C' '\nMSG06_D1X   DC    CL16' '\n            DC    CL03' '\nMSG06_D2    DC    CL08' '\n            DC    C' '\nMSG06_D2X   DS    CL16' '\n            DC    C' '\nMSG06L      EQU   *-MSG06\n\n*-------------------  0 1 2 3 4 5 6 7 8 9 A B C D E F  --------------*\nPRINTABLE DS    0C\n          DC    XL16'40404040404040404040404040404040'   x'00' - X'0F'\n          DC    XL16'40404040404040404040404040404040'   X'10' - X'1F'\n          DC    XL16'40404040404040404040404040404040'   X'20' - X'2F'\n          DC    XL16'40404040404040404040404040404040'   X'30' - X'3F'\n          DC    XL16'404040404040404040404A4B4C4D4E4F'   X'40' - X'4F'\n          DC    XL16'504040404040404040405A5B5C5D5E5F'   X'50' - X'5F'\n          DC    XL16'60614040404040404040406B6C6D6E6F'   X'60' - X'6F'\n          DC    XL16'404040404040404040407A7B7C7D7E7F'   X'70' - X'7F'\n          DC    XL16'40404040404040404040408B8C8D8E8F'   X'80' - X'8F'\n          DC    XL16'40404040404040404040409B9C9D9E9F'   X'90' - X'9F'\n          DC    XL16'4040404040404040404040ABACADAEAF'   X'A0' - X'AF'\n          DC    XL16'4040404040404040404040BBBCBDBEBF'   X'B0' - X'BF'\n          DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'   X'C0' - X'CF'\n          DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'   X'D0' - X'DF'\n          DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'   X'E0' - X'EF'\n          DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'   X'F0' - X'FF'\n\n          LTORG\n\n* ------------------------------------------------------------------- *\n*              Common area FDEFs                                      *\n* ------------------------------------------------------------------- *\nHTTPCOMM_FDEF  DS    0C\n               FDEF  BASE=HTTPCOMM\n               FDEF  TRACE_FIRST\n               FDEF  TRACE_LAST\n               FDEF  TRACE_CURRENT\n               FDEF  TRACE_TABLE_ADDRESS\n               FDEF  TRACE_TABLE_SIZE\n               FDEF  X_TRACE_FLAG\n               FDEF  COMM_DXD_ADDRESS\n               FDEF  COMM_HTTPMAIN_ADDRESS\n               FDEF  COMM_HTTPCONS_ADDRESS\n               FDEF  COMM_HTTPDAIR_ADDRESS\n               FDEF  COMM_HTTPLOCL_ADDRESS\n               FDEF  COMM_HTTPLOG_ADDRESS\n               FDEF  COMM_HTTPPRT_ADDRESS\n               FDEF  COMM_HTTPSERV_ADDRESS\n               FDEF  COMM_HTTPTCP_ADDRESS\n               FDEF  COMM_HTTPURL_ADDRESS\n               FDEF  COMM_HTTPWEB_ADDRESS\n               FDEF  COMM_TERMINATION_ECB\n               FDEF  COMM_PRINT_TCB\n               FDEF  COMM_PRINT_QUEUE\n               FDEF  COMM_PRINT_TERM_ECB\n               FDEF  COMM_PRINT_WORK_ECB\n               FDEF  COMM_CONSOLE_TCB\n               FDEF  COMM_CONSOLE_TERM_ECB\n               FDEF  COMM_CONSOLE_WORK_ECB\n               FDEF  COMM_LOG_TCB\n               FDEF  COMM_LOG_TERM_ECB\n               FDEF  COMM_LOG_WORK_ECB\n               FDEF  COMM_LOG_QUEUE\n               FDEF  COMM_URL_TCB\n               FDEF  COMM_URL_TERM_ECB\n               FDEF  COMM_URL_WORK_ECB\n               FDEF  COMM_URL_QUEUE\n               FDEF  COMM_WEB_TCB\n               FDEF  COMM_WEB_TERM_ECB\n               FDEF  COMM_WEB_WORK_ECB\n               FDEF  COMM_WEB_COMPLETED\n               FDEF  COMM_HTTPTCP_TCB\n               FDEF  COMM_HTTPTCP_TERM_ECB\n               FDEF  COMM_HTTPTCP_WORK_ECB\n               FDEF  COMM_LOCAL_TCB\n               FDEF  COMM_LOCAL_TERM_ECB\n               FDEF  COMM_LOCAL_WORK_ECB\n               FDEF  COMM_LOCAL_URL_QUEUE\n               FDEF  COMM_SERVERS\n               FDEF  COMM_NEW_SERVERS\n               FDEF  COMM_LOST_SERVERS\n               FDEF  COMM_NBR_URLS\n               FDEF  COMM_URL_SPACE_TOKEN,X,4\n               FDEF  COMM_URLS_RECEIVED\n               FDEF  COMM_WEB_PORT\n               FDEF  COMM_WEB_PORT_CHAR\n               FDEF  COMM_SERVER_PORT\n               FDEF  COMM_SERVER_PORT_CHAR\n               FDEF  COMM_MAX_LINES\n               FDEF  COMM_SNAP_CLASS\n               FDEF  COMM_SNAP_NUMBER\n               FDEF  COMM_SUBTASKS\n               FDEF  COMM_FLAGS\n               FDEF  COMM_TRACE_FLAGS\n               FDEF  COMM_EOJ\n               FDEF  COMM_HTTPTCP_CLIENT_NAME\n               FDEF  COMM_HTTPTCP_CLIENT_TASK\n               FDEF  COMM_HTTPWEB_CLIENT_NAME\n               FDEF  COMM_HTTPWEB_CLIENT_TASK\n               FDEF  COMM_HTTPLOCL_CLIENT_NAME\n               FDEF  COMM_HTTPLOCL_CLIENT_TASK\n               DC    X'FF'\n* ------------------------------------------------------------------- *\n*              SERVBLOK FDEF's                                        *\n* ------------------------------------------------------------------- *\nSERVBLOK_FDEF  DS    0C\n               FDEF  BASE=SERVER_EYE\n               FDEF  SERVER_EYE\n               FDEF  SERVER_NEXT\n               FDEF  SERVER_TCB\n               FDEF  SERVER_HTTP_COMMON\n               FDEF  SERVER_WORK_ADDRESS\n               FDEF  SERVER_URL\n               FDEF  SERVER_TCPIP_RETURN_CODE\n               FDEF  SERVER_TCPIP_ERROR_NUMBER\n               FDEF  SERVER_GIVESOCKET_ECB\n               FDEF  SERVER_TERM_ECB\n               FDEF  SERVER_WORK_ECB\n               FDEF  SERVER_CONNECT_DATE\n               FDEF  SERVER_CONNECT_TIME\n               FDEF  SERVER_LAST_DATE\n               FDEF  SERVER_LAST_TIME\n               FDEF  SERVER_URLS\n               FDEF  SERVER_SENDS\n               FDEF  SERVER_RECEIVES\n               FDEF  SERVER_BYTES_RECEIVED\n               FDEF  SERVER_BYTES_SENT\n               FDEF  SERVER_SOCKET\n               FDEF  SERVER_MAX_SOCKET\n               FDEF  SERVER_SUBTASK\n               FDEF  SERVER_TCPIP_FUNCTION\n               DC    X'FF'\n* ------------------------------------------------------------------- *\n*              WORK AREA                                              *\n* ------------------------------------------------------------------- *\nWORK_AREA           DSECT\n                    STDSAVE  DSECT=NO\nWORK_DWORD          DS   D\nWORK_FMT_SAVE       DS   16F\nWORK_CID            DS   F\nWORK_WTO            DS   0A,(WTOL)X\nWORK_DCB            DS   0F,(DCBL)X\nWORK_OPEN           DS   0F,(OPENL)X\nWORK_CLOSE          DS   0F,(CLOSEL)X\n\nWORK_FMT_BASE       DS   F\nWORK_FMT_FDEF       DS   F\n\nWORK_TIME_DATE      DS   0F\nWORK_TIME           DS   XL4\nWORK_DATE           DS   PL4\n\nWORK_UNPACK         DS   CL10\n                    DS   X\n\nWORK_PAGE           DS   PL3\nWORK_LINE           DS   PL3\n\nWORK_PRINT_SPACE    DS   C\nWORK_PRINT          DS   0CL133\nWORK_PRINT_CC       DS   C\nWORK_PRINT_DATA     DS   CL132\n\nWORK_HEADING        DS   CL133\n                    DAIRBLOK DSECT=NO\n                    WEBURL   DSECT=NO\nWORKL               EQU  *-WORK_AREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFDEF        DSECT\nFDEF_NAME   DS    CL32                 FIELD NAME\nFDEF_DISP   DS    AL2                  DISPLACEMENT TO FIELD\nFDEF_TYPE   DS    C                    FIELD TYPE\nFDEF_LENGTH DS    AL2                  FIELD LENGTH\nFDEFL       EQU   *-FDEF\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nFLD        DSECT\nFLD_LABEL  DS    CL32'LABEL'\n           DS    CL2' '\nFLD_TYPE   DS    CL4'TYPE'\n           DS    CL2' '\nFLD_LENGTH DS    CL4'LEN'\n           DS    CL2' '\nFLD_DISP   DS    CL4' '\n           DS    CL2' '\nFLD_VALUE  DS    CL8'VALUE'\nFLDL       EQU   *-FLD\n* ------------------------------------------------------------------- *\n*              WTO PARM LIST                                          *\n* ------------------------------------------------------------------- *\n         IEZWPL DSECT=YES\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  HTTPSNAP\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HTTPSORT": {"ttr": 4867, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x007\\x01\\x043O\\x01\\x07\\x17\\x9f\\x10S\\x00\\x97\\x00\\x85\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2004-11-29T00:00:00", "modifydate": "2007-06-28T10:53:37", "lines": 151, "newlines": 133, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPSORT                                              *\n*                                                                     *\n*  Sort the URLs in the URL DATASPACE into descending EBCDIC sequence *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPSORT CSECT\nHTTPSORT AMODE 31\nHTTPSORT RMODE ANY\n         USING HTTPSORT,R12                   DEFINE BASE\n         USING HTTPCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPSORT'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LOC=ANY,                                                +\n               LV=WORKL\n         ST    R1,8(R13)\n         ST    R13,4(R1)\n         LR    R13,R1\n         USING WORK,R13\n         USING SERVURL,R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n*      Sort the SERVURL blocks into descending (EBCDIC) sequence.     *\n*                                                                     *\n*      All SERVURL blocks are the same length.                        *\n*      The SERVURL blocks are kept in a DATASPACE.                    *\n*      The DATASPACE has already been added to the access list.       *\n*      The DATASPACE ALET is in COMM_SORT_ALET.                       *\n*                                                                     *\n*      The program is in AR mode before, during, and after sorting.   *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSORT0000 DS    0H\n         L     R3,COMM_URLS\n         ITRACE ID=SORT,RDATA1=R3\n         XC    WORK_SORT_TOP,WORK_SORT_TOP\n         LAM   R9,R9,COMM_SORT_ALET\n         SAC   512\n         SR    R9,R9\n         LA    R14,WORK_JUNK\n         LA    R15,16\nSORT0005 DS    0H\n         MVC   0(256,R14),0(R9)\n         LA    R14,256(R14)\n         LA    R9,256(R9)\n         BCT   R15,SORT0005\nSORT0010 DS    0H\n         CH    R3,H1                          MORE THAN 1?\n         BNH   EXIT0000                       NO\n         L     R9,WORK_SORT_TOP               FIRST URL\n         ITRACE ID=SORTLOOP,                                           +\n               RDATA1=R9,                                              +\n               RDATA2=R3\n         MVC   WORK_URL_LENGTH,SERVURL_URL_LENGTH\n         MVC   WORK_URL,SERVURL_URL           INITIALIZE 'HIGH'\n         MVC   WORK_SERVER,SERVURL_SERVER\n         ST    R9,WORK_URL_ADDRESS\n         LR    R2,R3                          COPY NUMBER OF ENTRIES\nSORT0020 DS    0H\n         L     R1,SERVURL_URL_LENGTH\n         C     R1,WORK_URL_LENGTH             SHORTER URL?\n         BL    SORT0030                       NO\n         L     R1,WORK_URL_LENGTH             USE SHORTEST LENGTH\nSORT0030 DS    0H\n         BCTR  R1,0\n         EX    R1,SORTCLC\n         BNH   SORT0040                       NO\n         ITRACE ID=NEWHIGH,RDATA1=R9\n         MVC   WORK_URL_LENGTH,SERVURL_URL_LENGTH\n         MVC   WORK_URL,SERVURL_URL           SAVE 'HIGHEST'\n         MVC   WORK_SERVER,SERVURL_SERVER\n         ST    R9,WORK_URL_ADDRESS            SAVE ADDRESS\nSORT0040 DS    0H\n         AH    R9,=Y(SERVURLL)                NEXT URL\n         BCT   R2,SORT0020                    LOOP\n         L     R9,WORK_SORT_TOP               1ST URL\n         L     R1,WORK_URL_ADDRESS\n         LAM   R1,R1,COMM_SORT_ALET\n         ITRACE ID=SORTSWAP,                                           +\n               RDATA1=R1,                                              +\n               RDATA2=R9\nTEMP     USING SERVURL,R1\n         MVC   TEMP.SERVURL_URL_LENGTH,SERVURL_URL_LENGTH\n         MVC   TEMP.SERVURL_URL,SERVURL_URL\n         MVC   TEMP.SERVURL_SERVER,SERVURL_SERVER\n         MVC   SERVURL_URL_LENGTH,WORK_URL_LENGTH\n         MVC   SERVURL_URL,WORK_URL\n         MVC   SERVURL_SERVER,WORK_SERVER\n         LAM   R1,R1,F0\n         AH    R9,=Y(SERVURLL)\n         ST    R9,WORK_SORT_TOP\n         BCT   R3,SORT0010\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         LAM   R9,R9,F0\n         SAC   0\nEXIT0010 DS    0H\n         LR    R1,R13\n         L     R13,4(R13)                     CALLER'S SAVE AREA\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKL\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n* ------------------------------------------------------------------- *\nSORTCLC  CLC   SERVURL_URL(0),WORK_URL        HIGHER?\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n*-------------------------------------------------------------------- *\nF0       DC    F'0'\nH1       DC    H'1'\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK                DSECT\n                    STDSAVE DSECT=NO\nWORK_SERVER         DS      A\nWORK_SORT_TOP       DS      A\nWORK_URL_ADDRESS    DS      A\nWORK_URL_LENGTH     DS      A\nWORK_URL            DS      CL256\nWORK_JUNK           DS      XL4096\nWORKL               EQU     *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON  MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         WEBURL\n         SERVURL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  HTTPSORT\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPSTAE": {"ttr": 4872, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00!\\x01\\x04$o\\x01\\x07\\x17\\x9f\\x10V\\x00*\\x00&\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2004-09-02T00:00:00", "modifydate": "2007-06-28T10:56:21", "lines": 42, "newlines": 38, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Module name: HTTPSTAE                                              *\n*                                                                     *\n*   HTTP MAIN ADDRESS SPACE STAE EXIT                                 *\n*   Produce a formatted dump and continue the ABEND.                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPSTAE CSECT\nHTTPSTAE AMODE 31\nHTTPSTAE RMODE ANY\n         USING HTTPSTAE,R12                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE CALLER'S REGISTERS\n         LR    R12,R15                        SET BASE\n         B     ESTAE000\n         DC    CL8'HTTPSTAE'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nESTAE000 DS    0H\n         L     R11,0(R1)                      HTTPCOMM ADDRESS\n         GETMAIN RU,                                                   +\n               LV=72,                                                  +\n               LOC=ANY\n         ST    R1,8(R13)                      CHAIN PREVIOUS SAVE AREA\n         ST    R13,4(R1)                      CHAIN OURS\n         LR    R13,R1                         SET SAVE AREA ADDRESS\n         LOAD  EP=HTTPSNAP\n         LR    R15,R0\n         BALR  R14,R15\n         DELETE EP=HTTPSNAP\n         LR    R1,R13                         COPY STORAGE ADDRESS\n         L     R13,4(R13)\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=72\n         LM    R14,R12,12(R13)\n         BR    R14\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  HTTPSTAE\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPSUB": {"ttr": 4874, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00V\\x01\\x04)_\\x01\\x08\\x16O\\x16\\x00\\x03\\x94\\x01\\xf2\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2004-10-21T00:00:00", "modifydate": "2008-06-12T16:00:56", "lines": 916, "newlines": 498, "modlines": 0, "user": "RLRICE"}, "text": "          MACRO\n          SUBTRACE &ID=,                                               +\n               &DATA1=,&RDATA1=,                                       +\n               &DATA2=,&RDATA2=,                                       +\n               &DATA3=,&RDATA3=\n          AIF    (T'&ID EQ 'O').SUBNOID\n          AIF    (T'&RDATA1 NE 'O' AND T'&DATA1 NE 'O').SUBDUP1\n          AIF    (T'&RDATA2 NE 'O' AND T'&DATA2 NE 'O').SUBDUP2\n          AIF    (T'&RDATA2 EQ 'O' AND T'&DATA2 EQ 'O').SUB001\n          AIF    (T'&RDATA1 NE 'O' AND T'&DATA1 NE 'O').SUBNO1\n.SUB001   ANOP\n          AIF    (T'&DATA1 EQ 'O').SUB002\n          MVC    WORK_TRACE_DATA1,&DATA1\n.SUB002   ANOP\n          AIF    (T'&RDATA1 EQ 'O').SUB003\n          ST     &RDATA1,WORK_TRACE_DATA1\n.SUB003   ANOP\n          AIF    (T'&DATA2 EQ 'O').SUB004\n          MVC    WORK_TRACE_DATA2,&DATA2\n.SUB004   ANOP\n          AIF    (T'&RDATA2 EQ 'O').SUB005\n          ST     &RDATA2,WORK_TRACE_DATA2\n.SUB005   ANOP\n          AIF    (T'&DATA3 EQ 'O').SUB006\n          MVC    WORK_TRACE_DATA3,&DATA3\n          AGO    .SUB007\n.SUB006   ANOP\n          AIF    (T'&RDATA3 EQ 'O').SUB007\n          ST     &RDATA3,WORK_TRACE_DATA3\n.SUB007   ANOP\n          BAL    R14,TRACE000\n          DC     CL8'&ID'\n          MEXIT\n.SUBDUP1  ANOP\n          MNOTE  12,'DO NOT USE BOTH DATA1 AND RDATA1'\n          MEXIT\n.SUBDUP2  ANOP\n          MNOTE  12,'DO NOT USE BOTH DATA2 AND RDATA2'\n          MEXIT\n.SUBNO1   ANOP\n          MNOTE  12,'(R)DATA2 NOT VALID WITHOUT (R)DATA1'\n          MEXIT\n.SUBNOID  ANOP\n          MNOTE  12,'ID IS REQUIRED'\n          MEND\n*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPSUB                                               *\n*                                                                     *\n*                                                                     *\n*     PARMLIST:      Mapped by SUBPARM macro                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPSUB  CSECT\nHTTPSUB  AMODE 31\nHTTPSUB  RMODE ANY\n         USING HTTPSUB,R12,R11                DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE CALLER'S REGISTERS\n         LR    R12,R15                        SET BASE\n         B     INIT0000\nMODID    DC    CL8'HTTPSUB'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\nINIT0000 DS    0H\n         LA    R11,2048(R12)\n         LA    R11,2048(R11)\n         LR    R10,R1                         COPY PARM BLOCK ADDRESS\n         USING HTTP_PARMS,R10\n         MVI   HTTP_RETURN_CODE,$HTTP_OK\n         MVC   HTTP_MESSAGE_1,BLANKS\n         MVC   HTTP_MESSAGE_2,BLANKS\n         MVC   HTTP_MESSAGE_3,BLANKS\n         MVC   HTTP_MESSAGE_4,BLANKS\n         MVC   HTTP_MESSAGE_5,BLANKS\n         CLI   HTTP_FUNCTION,$HTTP_INIT       INITIALIZE?\n         BE    INIT0010                       YES\n         L     R1,HTTP_WORKAREA\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORKAREA,R13\n         SUBTRACE ID=FUNCTION,                                         +\n               DATA1=HTTP_FUNCTION,                                    +\n               RDATA2=R13,                                             +\n               Rdata3=R14\n         CLI   HTTP_FUNCTION,$HTTP_ALLOCATE   ALLOCATE?\n         BE    ALLOC000                       YES\n         CLI   HTTP_FUNCTION,$HTTP_CLEAN_UP   CLEAN-UP\n         BE    CLEAN000                       YES\n         CLI   HTTP_FUNCTION,$HTTP_CLOSE      CLOSE THE SOCKET?\n         BE    CLOSE000                       YES\n         CLI   HTTP_FUNCTION,$HTTP_CONNECT    CONNECT TO MAIN?\n         BE    CONN0000                       YES\n         CLI   HTTP_FUNCTION,$HTTP_FREE       FREE A DD?\n         BE    FREE0000                       YES\n         CLI   HTTP_FUNCTION,$HTTP_GET_URL    GET URL?\n         BE    GETURL00                       YES\n         CLI   HTTP_FUNCTION,$HTTP_LOG        SEND DATA TO LOG\n         BE    LOG0000                        YES\n         CLI   HTTP_FUNCTION,$HTTP_DEFINE_PRFX\n         BE    DEFURL00                       YES\n         CLI   HTTP_FUNCTION,$HTTP_DEFINE_SPEC\n         BE    DEFURL10                       YES\n         CLI   HTTP_FUNCTION,$HTTP_WRITE      WRITE?\n         BE    WRITE100                       YES\n         CLI   HTTP_FUNCTION,$HTTP_WRITE_RAW  WRITE 'RAW'?\n         BE    WRITE200                       YES\n         MVI   HTTP_RETURN_CODE,$HTTP_OTHER\n         MVC   HTTP_MESSAGE_1(MSG01_L),MSG01\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*        Initialize environment                                       *\n* ------------------------------------------------------------------- *\nINIT0010 DS    0H\n         GETMAIN RU,                          GETMAIN WORK AREA        +\n               LV=WORKAREAL,                                           +\n               LOC=BELOW\n         ST    R1,HTTP_WORKAREA               CHAIN PREVIOUS SAVE AREA\n         ST    R13,4(R1)                      CHAIN PREVIOUS TO OURS\n         ST    R1,8(R13)\n         LR    R13,R1                         SET SAVE AREA ADDRESS\n         MVI   WORK_FLAGS,0\n         GETMAIN RU,                                                   +\n               LV=502*TRACE_ENTRYL,                                    +\n               LOC=BELOW\n         ST    R1,WORK_TRACE_AREA\n         SRL   R1,5\n         SLL   R1,5\n         LA    R1,TRACE_ENTRYL(R1)\n         ST    R1,WORK_TRACE_1ST\n         MVC   WORK_TRACE_1ST-4(4),=C'1STX'\n         ST    R1,WORK_TRACE_CURR\n         MVC   WORK_TRACE_CURR-4(4),=C'CURR'\n         AH    R1,=Y(499*TRACE_ENTRYL)\n         ST    R1,WORK_TRACE_LAST\n         MVC   WORK_TRACE_LAST-4(4),=C'LAST'\n         SUBTRACE ID=INIT,                                             +\n               RDATA1=R13\n* ------------------------------------------------------------------- *\n*        Initialize TCP/IP environment                                *\n* ------------------------------------------------------------------- *\n         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK\n         MVC   WORK_FUNCTION,=CL16'INITAPI'\n         SUBTRACE ID=INITAPI\n         EZASMI TYPE=INITAPI,                                          +\n               MAXSNO=WORK_TCPIP_MAX_SOCKET,                           +\n               SUBTASK=C_HTTPSUB,                                      +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ASYNC='NO',                                             +\n               TASK=WORK_TCPIP_TASK\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=RC,                                               +\n               DATA1=WORK_TCPIP_RETURN_CODE,                           +\n               DATA2=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n* ------------------------------------------------------------------- *\n*        Create socket                                                *\n* ------------------------------------------------------------------- *\n         SUBTRACE ID=SOCKET\n         MVC   WORK_FUNCTION,=CL16'SOCKET'\n         EZASMI TYPE=SOCKET,                                           +\n               AF='INET',                                              +\n               SOCTYPE='STREAM',                                       +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               TASK=WORK_TCPIP_TASK\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=RC,                                               +\n               DATA1=WORK_TCPIP_RETURN_CODE,                           +\n               DATA2=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         MVC   WORK_SOCKET,WORK_TCPIP_RETURN_CODE+2\n* ------------------------------------------------------------------- *\n*        BIND to a port                                               *\n* ------------------------------------------------------------------- *\n         MVC   WORK_FUNCTION,=CL16'BIND'\n         XC    WORK_PORT,WORK_PORT\n         XC    WORK_PEER(WORK_PEER_L),WORK_PEER\n         MVC   WORK_PEER_AF,=X'0002'          SET ADDRESS FAMILY\n         SUBTRACE ID=BIND,                                             +\n               DATA1=WORK_PEER+0,                                      +\n               DATA2=WORK_PEER+8\n         EZASMI TYPE=BIND,                                             +\n               S=WORK_SOCKET,                                          +\n               NAME=WORK_PEER,                                         +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               TASK=WORK_TCPIP_TASK\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=RC,                                               +\n               DATA1=WORK_TCPIP_RETURN_CODE,                           +\n               DATA2=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n* ------------------------------------------------------------------- *\n*        Get our CLIENT ID                                            *\n* ------------------------------------------------------------------- *\n         SUBTRACE ID=GETID\n         MVC   WORK_FUNCTION,=CL16'GETCLIENTID'\n         EZASMI TYPE=GETCLIENTID,                                      +\n               CLIENT=WORK_OUR_CLIENT,                                 +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               TASK=WORK_TCPIP_TASK\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=CLIENTID,                                         +\n               DATA1=WORK_OUR_CLIENT+0,                                +\n               DATA2=WORK_OUR_CLIENT+8,                                +\n               DATA3=WORK_OUR_CLIENT+16\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         B     EXIT0000                       EXIT\n* ------------------------------------------------------------------- *\n*        CONNECT to HTTPWEB task in MAIN                              *\n* ------------------------------------------------------------------- *\nCONN0000 DS    0H\n         MVC   WORK_FUNCTION,=CL16'CONNECT'\n         XC    WORK_PEER(WORK_PEER_L),WORK_PEER\n         MVC   WORK_PEER_AF,=X'0002'          SET ADDRESS FAMILY\n         MVC   WORK_PEER_PORT,HTTP_PORT       SET PORT NUMBER\n         MVC   WORK_PEER_IP,LOCAL_HOST_IP     SET IP ADDRESS\n         SUBTRACE ID=CONNECT,                                          +\n               DATA1=WORK_SOCKET,                                      +\n               DATA2=WORK_PEER+0,                                      +\n               DATA3=WORK_PEER+8\n         EZASMI TYPE=CONNECT,                                          +\n               S=WORK_SOCKET,                                          +\n               NAME=WORK_PEER,                                         +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=RC,                                               +\n               DATA1=WORK_TCPIP_RETURN_CODE,                           +\n               DATA2=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'   SUCCESSFUL?\n         BO    ERR0010                        NO\n* ------------------------------------------------------------------- *\n*        Identify ourselves, get MAIN's client ID                     *\n* ------------------------------------------------------------------- *\n         SUBTRACE ID=IDENTIFY\n         MVI   NET_FUNCTION,$NET_IDENTIFY     IDENTIFYING OURSELVES\n         MVC   NET_DATA(CLIENTL),WORK_OUR_CLIENT\n         LA    R0,NET_PREFIX_LENGTH+CLIENTL\n         ST    R0,NET_LENGTH\n         BAL   R9,WRITE000                    SEND ID TO HTTPMAIN\n         BAL   R9,READ0000                    READ REPLY\n         CLI   NET_RETURN_CODE,$NET_OK        SUCCESSFUL?\n         BNE   ERR0020                        NO\n         MVC   WORK_HTTPWEB_CLIENT(CLIENTL),NET_DATA\n         MVI   HTTP_RETURN_CODE,$HTTP_OK      SET RETURN CODE\n         SUBTRACE ID=W_CLIENT,                                         +\n               DATA1=WORK_HTTPWEB_CLIENT+0,                            +\n               DATA2=WORK_HTTPWEB_CLIENT+8\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        \"Get a URL\".                                                 *\n*                                                                     *\n*        We should have previously defined URLs that we want to       *\n*        process by doing \"Send URLs\".                                *\n*                                                                     *\n*        This subroutine (and therefore the calling program)          *\n*        will be WAITed until the HTTP main address space             *\n*        sends us a URL.                                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGETURL00 DS    0H\n         SUBTRACE ID=GETURL\n         MVI   NET_FUNCTION,$NET_GET_URL      SET FUNCTION\n         LA    R1,NET_PREFIX_LENGTH           LENGTH TO WRITE\n         ST    R1,NET_LENGTH                  SET LENGTH\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         BAL   R9,WRITE000                    ASK FOR A URL\n         BAL   R9,READ0000                    RECEIVE THE URL\n         CLI   NET_RETURN_CODE,$NET_SHUTDOWN  MAIN SPACE SHUTTING DOWN?\n         BE    GETURL10                       YES\n         SUBTRACE ID=WEBURL,                                           +\n               DATA1=WEBURL,                                           +\n               DATA2=URL_TEXT+0,                                       +\n               DATA3=URL_TEXT+8\n         MVC   HTTP_LENGTH,WEBURL_LENGTH      PASS LENGTH TO CALLER\n         LA    R0,WEBURL+WEBURLL+URL_PREFIX_L URL ADDRESS\n         ST    R0,HTTP_DATA                   PASS LENGTH TO CALLER\n         MVC   HTTP_PARM_LENGTH,WEBURL_PARM_LENGTH\n         AH    R0,WEBURL_PARM_DISP\n         ST    R0,HTTP_PARM\n         MVC   HTTP_URL_ID,WEBURL_ID\n* ------------------------------------------------------------------- *\n*        Take the socket                                              *\n* ------------------------------------------------------------------- *\n         MVC   WORK_FUNCTION,=CL16'TAKESOCKET'\n         SUBTRACE ID=TAKESOCK,                                         +\n               DATA1=WEBURL_ID,                                        +\n               DATA2=WORK_HTTPWEB_CLIENT+4,                            +\n               DATA3=WORK_HTTPWEB_CLIENT+12\n         EZASMI TYPE=TAKESOCKET,              TAKE THE SOCKET          +\n               SOCRECV=WEBURL_SOCKET,         .. ID AND SOCKET NBR     +\n               CLIENT=WORK_HTTPWEB_CLIENT,                             +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               TASK=WORK_TCPIP_TASK\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=TAKE_RC,                 TRACE RETURN CODE        +\n               DATA1=WORK_TCPIP_RETURN_CODE,                           +\n               DATA2=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'   SUCCESSFUL?\n         BO    ERR0010                        NO\n         SUBTRACE ID=SOCKET,                                           +\n               DATA1=WORK_TCPIP_RETURN_CODE+2\n         MVC   HTTP_SOCKET,WORK_TCPIP_RETURN_CODE+2\n* ------------------------------------------------------------------- *\n*        Inform HTTPSERV the TAKESOCKET is complete                   *\n* ------------------------------------------------------------------- *\n         LA    R1,NET_PREFIX_LENGTH\n         ST    R1,NET_LENGTH\n         BAL   R9,WRITE000                    TAKESOCKET IS COMPLETE\n         BAL   R9,READ0000\n         MVI   HTTP_RETURN_CODE,$HTTP_OK      SET RETURN CODE\n         B     EXIT0000                       EXIT\nGETURL10 DS    0H\n         SUBTRACE ID=GETURL10\n         MVI   HTTP_RETURN_CODE,$HTTP_MAIN_SHUTDOWN\n         BE    EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Define a URL                                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDEFURL00 DS    0H\n         SUBTRACE ID=DEF_PRFX,                                         +\n               DATA1=HTTP_DATA,                                        +\n               DATA2=HTTP_LENGTH\n         XC    WEBURL(WEBURLL),WEBURL         INITIALIZE URL\n         MVI   NET_FUNCTION,$NET_DEFINE_PREFIX\n         MVI   WEBURL_STATUS,$URL_DEFINE_PREFIX\n         B     DEFURL20\nDEFURL10 DS    0H\n         SUBTRACE ID=DEF_SPEC,                                         +\n               DATA1=HTTP_DATA,                                        +\n               DATA2=HTTP_LENGTH\n         XC    WEBURL(WEBURLL),WEBURL         INITIALIZE URL\n         MVI   NET_FUNCTION,$NET_DEFINE_SPECIFIC\n         MVI   WEBURL_STATUS,$URL_DEFINE_SPECIFIC\nDEFURL20 DS    0H\n         MVC   WEBURL_EYE,C_WEBURL\n         MVC   URL_EYE,C_URL\n         L     R0,HTTP_DATA                   DATA ADDRESS\n         L     R1,HTTP_LENGTH                 DATA LENGTH\n         LA    R14,URL_TEXT                   I/O AREA DATA ADDRESS\n         LR    R15,R1                         SET LENGTH 2 = LENGTH 1\n         MVCL  R14,R0                         COPY TO I/O AREA\n         L     R1,HTTP_LENGTH                 DATA LENGTH\n         ST    R1,WEBURL_LENGTH               SET URL LENGTH\n         STH   R1,URL_LENGTH                  SET URL LENGTH\n         LA    R1,NET_PREFIX_LENGTH+WEBURLL+URL_PREFIX_L(R1)\n         ST    R1,NET_LENGTH                  SET TOTAL LENGTH\n         BAL   R9,WRITE000                    SEND TO MAIN\n         BAL   R9,READ0000                    RESPONSE FROM MAIN\n         CLI   NET_RETURN_CODE,$NET_OK        SUCCESSFUL?\n         BNE   ERR0020                        NO\n         B     EXIT0000                       AND EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Write data to LOG                                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\nLOG0000  DS    0H\n         BAL   R8,LOG1000\n         B     EXIT0000\nLOG1000  DS    0H\n         LH    R1,LOG_DATA_LENGTH\n         XC    LOG_DATA_LENGTH+2(2),LOG_DATA_LENGTH+2\n         LA    R1,NET_PREFIX_LENGTH+LOGBLOKL(R1)\n         ST    R1,NET_LENGTH\n         SUBTRACE ID=LOG,                                              +\n               DATA1=NET_LENGTH,                                       +\n               DATA2=NET_DATA,                                         +\n               DATA3=NET_DATA+8\n         MVI   NET_FUNCTION,$NET_LOG\n         BAL   R9,WRITE000\n         BAL   R9,READ0000\n         MVI   HTTP_RETURN_CODE,$HTTP_OK\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Close a socket.                                              *\n*                                                                     *\n*        A \"SHUTDOWN\" is issued prior to closing the socket to force  *\n*        TCP/IP to flush any data buffered before the socket is       *\n*        closed.                                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLOSE000 DS    0H\n         SUBTRACE ID=SHUTDOWN,                                         +\n               DATA1=HTTP_SOCKET\n         MVC   WORK_FUNCTION,=CL16'SHUTDOWN'\n         EZASMI TYPE=SHUTDOWN,                                         +\n               HOW=2,                                                  +\n               S=HTTP_SOCKET,                                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         CLC   H1027,WORK_TCPIP_ERROR_NUMBER+2\n         BE    EXIT0000                         YES.. ACCEPTABLE\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         SUBTRACE ID=CLOSE,                                            +\n               DATA1=HTTP_SOCKET\n         MVC   WORK_FUNCTION,=CL16'CLOSE SOCKET'\n         EZASMI TYPE=CLOSE,                                            +\n               S=HTTP_SOCKET,                                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0020\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        READ response from HTTPMAIN                                  *\n*                                                                     *\n*        Note that we never READ from the WEB user                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nREAD0000 DS    0H\n         SUBTRACE ID=READ0000,                                         +\n               DATA1=WORK_SOCKET\n         MVC   WORK_FUNCTION,=CL16'READ'\n         SR    R2,R2\n         LA    R3,NETBLOK\n         MVC   WORK_LENGTH,=A(URL_BUFFER_SIZE)\nREAD0010 DS    0H\n         SUBTRACE ID=READ0010,                                         +\n               RDATA1=R2,                                              +\n               RDATA2=R3\n         EZASMI TYPE=READ,                                             +\n               S=WORK_SOCKET,                                          +\n               BUF=(R3),                                               +\n               NBYTE=WORK_LENGTH,                                      +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=RC,                                               +\n               DATA1=WORK_TCPIP_RETURN_CODE,                           +\n               DATA2=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'   SUCCESSFUL?\n         BO    ERR0010                        NO\n         A     R3,WORK_TCPIP_RETURN_CODE      PLUS BYTES READ\n         L     R0,WORK_LENGTH                 LENGTH REMAINING\n         S     R0,WORK_TCPIP_RETURN_CODE      MINUS BYTES READ\n         ST    R0,WORK_LENGTH                 LENGTH REMAINING\n         A     R2,WORK_TCPIP_RETURN_CODE      TOTAL BYTES READ\n         CLM   R2,15,NET_LENGTH               ALL READ?\n         BNE   READ0010                       NO\n         BR    R9\n* ------------------------------------------------------------------- *\n*        Send data to HTTPMAIN                                        *\n* ------------------------------------------------------------------- *\nWRITE000 DS    0H\n         SUBTRACE ID=WRITE000,                                         +\n               DATA1=WORK_SOCKET,                                      +\n               DATA2=NET_LENGTH,                                       +\n               DATA3=NET_DATA\n         MVC   WORK_FUNCTION,=CL16'WRITE TO HTTPMAIN'\n         EZASMI TYPE=WRITE,                                            +\n               S=WORK_SOCKET,                                          +\n               NBYTE=NET_LENGTH,                                       +\n               BUF=NETBLOK,                                            +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=RC,                                               +\n               DATA1=WORK_TCPIP_RETURN_CODE,                           +\n               DATA2=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'   SUCCESSFUL?\n         BO    ERR0010                        NO\n         BR    R9\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Send data to the web user.                                   *\n*                                                                     *\n*        For some reason IBM and the rest of the computing world      *\n*        have to be different.  Text data on MVS is usually stored    *\n*        in EBCDIC.  Everyone else uses ASCII.  Still some data       *\n*        (like GIF or JPEG files) is just binary data and needs       *\n*        to be sent 'as is'.  Therefore there are two types of        *\n*        WRITE commands.  One for text, one for binary data.          *\n*        Text data will be translated to ASCII before being           *\n*        pass to TCP/IP.  The data is translated in the user's        *\n*        I/O area!                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWRITE100 DS    0H\n         SUBTRACE ID=WRITE100\n         CLI   HTTP_FUNCTION,$HTTP_WRITE_RAW  SEND RAW?\n         BE    WRITE110                       YES\n         MVC   WORK_FUNCTION,=CL16'WRITE TO WEBUSER'\n         L     R2,HTTP_DATA                   DATA'S ADDRESS\n         L     R3,HTTP_LENGTH                 DATA'S LENGTH\n         SUBTRACE ID=XLATE,                                            +\n               RDATA1=R2,                                              +\n               RDATA2=R3,                                              +\n               DATA3=HTTP_ALET\n         LAM   R2,R2,HTTP_ALET                DATA'S ALET\n         SAC   512\n         ICM   R0,15,XFF\n         LA    R1,EBCDIC_TO_ASCII             TRANSLATE TABLE\n         TRE   R2,R1                          TRANSLATE TO ASCII\n         LAM   R2,R2,F0                       RESET AR\n         SAC   0                              TURN OFF AR MODE\nWRITE110 DS    0H\n         OC    HTTP_TRACE_DCB,HTTP_TRACE_DCB  TRACE DCB PRESENT?\n         BZ    WRITE120                       NO\n         L     R2,HTTP_TRACE_IOAREA           TRACE I/O AREA\n         L     R3,HTTP_LENGTH                 DATA LENGTH\n         LA    R3,4(R3)                       PLUS 4\n         STCM  R3,3,0(R2)                     SET LENGTH\n         LA    R2,4(R2)                       SKIP LENGTH\n         L     R3,HTTP_LENGTH                 RESET LENGTH\n         L     R14,HTTP_DATA                  DATA ADDRESS\n         L     R15,HTTP_LENGTH                SET LENGTH 2\n         LAM   R14,R14,HTTP_ALET              SET AR\n         SAC   512                            TURN ON AR MODE\n         MVCL  R2,R14                         COPY DATA\n         SAC   0                              TURN OFF AR MODE\n         LAM   R14,R14,F0                     RESET AR\n         L     R2,HTTP_TRACE_DCB              DCB ADDRESS\n         L     R3,HTTP_TRACE_IOAREA           I/O AREA\n         PUT   (R2),(R3)                      WRITE TO TRACE\nWRITE120 DS    0H\n         L     R2,HTTP_DATA                   DATA'S ADDRESS\n         L     R3,HTTP_LENGTH                 LENGTH TO WRITE\nWRITE130 DS    0H\n         ST    R3,WORK_LENGTH\n         SUBTRACE ID=WRITE130,                                         +\n               DATA1=HTTP_SOCKET,                                      +\n               RDATA2=R2,                                              +\n               RDATA3=R3\n         EZASMI TYPE=WRITE,                   SEND DATA TO WEB USER    +\n               S=HTTP_SOCKET,                                          +\n               BUF=(R2),                                               +\n               NBYTE=WORK_LENGTH,                                      +\n               ALET=HTTP_ALET,                                         +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=WRITERC,                                          +\n               DATA1=WORK_TCPIP_RETURN_CODE,                           +\n               DATA2=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'   SUCCESSFUL?\n         BO    ERR0010                        NO\n         A     R2,WORK_TCPIP_RETURN_CODE      PLUS DATA SENT\n         S     R3,WORK_TCPIP_RETURN_CODE      MINUS DATA SENT\n         BH    WRITE130                       KEEP WRITING\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        Send data 'as is' to web user                                *\n* ------------------------------------------------------------------- *\nWRITE200 DS    0H\n         MVC   WORK_FUNCTION,=CL16'WRITE AS-IS'\n         L     R2,HTTP_DATA                   DATA ADDRESS\n         L     R3,HTTP_LENGTH                 DATA LENGTH\nWRITE210 DS    0H\n         ST    R3,WORK_LENGTH\n         SUBTRACE ID=WRITE200,                                         +\n               DATA1=HTTP_SOCKET,                                      +\n               DATA2=HTTP_DATA,                                        +\n               DATA3=HTTP_LENGTH\n         EZASMI TYPE=WRITE,                                            +\n               S=HTTP_SOCKET,                                          +\n               BUF=0(R2),                                              +\n               NBYTE=WORK_LENGTH,                                      +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         MVC   HTTP_TCPIP_RC,WORK_TCPIP_RETURN_CODE\n         MVC   HTTP_TCPIP_ERROR,WORK_TCPIP_ERROR_NUMBER\n         SUBTRACE ID=RC,                                               +\n               DATA1=WORK_TCPIP_RETURN_CODE,                           +\n               DATA2=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'   SUCCESSFUL?\n         BO    ERR0010                        NO\n         A     R2,WORK_TCPIP_RETURN_CODE      PLUS DATA SENT\n         S     R3,WORK_TCPIP_RETURN_CODE      MINUS DATA SENT\n         BH    WRITE210                       KEEP WRITING\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nCLEAN000 DS    0H\n         SUBTRACE ID=CLEANUP\n         MVC   WORK_FUNCTION,=CL16'TERMAPI'\n         EZASMI TYPE=TERMAPI,                                          +\n               TASK=WORK_TCPIP_TASK\n         LTR   R15,R15\n         BNZ   ERR0010\n         L     R1,WORK_TRACE_AREA\n         FREEMAIN RU,                                                  +\n               LV=102*TRACE_ENTRYL,                                    +\n               A=(1)\n         LR    R1,R13\n         L     R13,4(R13)\n         FREEMAIN RU,                                                  +\n               LV=WORKAREAL,                                           +\n               A=(1)\n         XC    HTTP_WORKAREA,HTTP_WORKAREA\n         MVI   HTTP_RETURN_CODE,$HTTP_OK\n         B     EXIT0010\n* ------------------------------------------------------------------- *\n*        Allocate a data set or PDS member  (must be cataloged)       *\n* ------------------------------------------------------------------- *\nALLOC000 DS    0H\n         SUBTRACE ID=ALLOC,                                            +\n               DATA1=HTTP_DD\n         LA    R5,WORK_RB\n         ST    R5,WORK_RBA\n         USING S99RB,R5\n         OI    WORK_RBA,X'80'\n         XC    WORK_RB(S99RBEND-S99RB),WORK_RB\n         MVI   S99VERB,S99VRBAL\n         LA    R1,WORK_DD_PARMS\n         ST    R1,WORK_TEXT_ADDRESS_1\n         LA    R1,WORK_DS_PARMS\n         ST    R1,WORK_TEXT_ADDRESS_2\n         LA    R1,WORK_DISP_PARMS\n         ST    R1,WORK_TEXT_ADDRESS_3\n         LA    R1,WORK_MEMBER_PARMS\n         ST    R1,WORK_TEXT_ADDRESS_4\n         OI    WORK_TEXT_ADDRESS_4,X'80'\n         MVC   WORK_DD_PARMS(DAIRPL),DAIRPI\n         MVC   WORK_DD_NAME,HTTP_DD\n         MVC   WORK_DS_NAME,HTTP_DSN\n         MVC   WORK_MEMBER_NAME,HTTP_MEMBER\n         CLC   WORK_MEMBER_NAME,BLANKS\n         BNE   SVC0000\n         OI    WORK_TEXT_ADDRESS_3,X'80'\n         B     SVC0000\n* ------------------------------------------------------------------- *\n*        FREE (deallocate) a DD                                       *\n* ------------------------------------------------------------------- *\nFREE0000 DS    0H\n         SUBTRACE ID=FREE,                                             +\n               DATA1=HTTP_DD\n         LA    R5,WORK_RB\n         ST    R5,WORK_RBA\n         OI    WORK_RBA,X'80'\n         XC    WORK_RB(S99RBEND-S99RB),WORK_RB\n         MVI   S99VERB,S99VRBUN\n         LA    R1,WORK_DD_PARMS\n         ST    R1,WORK_TEXT_ADDRESS_1\n         OI    WORK_TEXT_ADDRESS_1,X'80'\n         MVC   WORK_DD_NAME,HTTP_DD\n* ------------------------------------------------------------------- *\n*        Issue DYNALLOC SVC                                           *\n* ------------------------------------------------------------------- *\nSVC0000  DS    0H\n         MVI   S99RBLN,S99RBEND-S99RB\n         LA    R1,WORK_TEXT_ADDRESS_1\n         ST    R1,S99TXTPP\n         LA    R1,WORK_RBA\n         SUBTRACE ID=SVC99,                                            +\n               RDATA1=R1\n         SVC   99\n         SUBTRACE ID=SVC99RC,                                          +\n               RDATA1=R15\n         STCM  R15,3,WORK_DWORD\n         MVC   HTTP_MESSAGE_1(MSG02L),MSG02\n         UNPK  HTTP_MESSAGE_1+(MSG02_R15-MSG02)(5),WORK_DWORD+3(3)\n         TR    HTTP_MESSAGE_1+(MSG02_R15-MSG02)(4),HEXCHAR\n         MVI   HTTP_MESSAGE_1+(MSG02_R15-MSG02)+4,C' '\n         UNPK  HTTP_MESSAGE_1+(MSG02_ERR-MSG02)(5),S99ERROR(3)\n         TR    HTTP_MESSAGE_1+(MSG02_ERR-MSG02)(4),HEXCHAR\n         MVI   HTTP_MESSAGE_1+(MSG02_ERR-MSG02)+4,C' '\n         UNPK  HTTP_MESSAGE_1+(MSG02_INFO-MSG02)(5),S99INFO(3)\n         TR    HTTP_MESSAGE_1+(MSG02_INFO-MSG02)(4),HEXCHAR\n         MVI   HTTP_MESSAGE_1+(MSG02_INFO-MSG02)+4,C' '\n         LTR   R15,R15\n         BNZ   SVC0010\n         MVI   HTTP_RETURN_CODE,$HTTP_OK\n         B     EXIT0000\nSVC0010  DS    0H\n         MVI   HTTP_RETURN_CODE,$HTTP_OTHER\n* ------------------------------------------------------------------- *\n*        EXIT                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         L     R1,4(,R13)\n         L     R1,12(,R1)\n         SUBTRACE ID=EXIT0000,                                         +\n               RDATA1=R1\n         L     R13,4(,R13)\nEXIT0010 DS    0H\n         LM    R14,R12,12(R13)                RESTORE  REGISTERS        ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVC   HTTP_MESSAGE_1(MSG03_L),MSG03\n         MVC   HTTP_MESSAGE_1+(MSG03_FUNCTION-MSG03)(L'MSG03_FUNCTION),+\n               WORK_FUNCTION\n         L     R1,WORK_TCPIP_ERROR_NUMBER\n         CVD   R1,WORK_DWORD\n         ED    HTTP_MESSAGE_1+(MSG03_ERROR_NUMBER-MSG03)(L'MSG03_ERROR_+\n               NUMBER),WORK_DWORD+5\n         MVI   HTTP_RETURN_CODE,$HTTP_TCPIP_ERROR\n         B     EXIT0000\nERR0020  DS    0H\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTRACE000 DS    0H\n         ST    R15,WORK_TRACE_R15\n         L     R15,WORK_TRACE_CURR\n         C     R15,WORK_TRACE_LAST\n         BE    TRACE010\n         LA    R15,TRACE_ENTRYL(R15)\n         B     TRACE020\nTRACE010 DS    0H\n         L     R15,WORK_TRACE_1ST\nTRACE020 DS    0H\n         ST    R15,WORK_TRACE_CURR\n         USING TRACE_ENTRY,R15\n         MVC   TRACE_ID,0(R14)\n         MVC   TRACE_DATA1,WORK_TRACE_DATA1\n         MVC   TRACE_DATA2,WORK_TRACE_DATA2\n         MVC   TRACE_DATA3,WORK_TRACE_DATA3\n         XC    WORK_TRACE_DATA1,WORK_TRACE_DATA1\n         XC    WORK_TRACE_DATA2,WORK_TRACE_DATA2\n         XC    WORK_TRACE_DATA3,WORK_TRACE_DATA3\n         L     R15,WORK_TRACE_R15\n         B     8(R14)\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        CONSTANTS                                                   *\n*                                                                    *\n* ------------------------------------------------------------------ *\n         LTORG\nH1027    DC    H'1027'\nF0       DC    F'0'\nBLANKS   DC    CL80' '\n\nHEXCHAR  EQU   *-C'0'\n         DC    C'0123456789ABCDEF'\n\nXFF      DC    4X'FF'\n\nC_HTTPSUB      DC   CL8'HTTPSUB'\nC_URL          DC   CL8'URL    '\nC_WEBURL       DC   CL8'WEBURL '\nLOCAL_HOST_IP  DC   AL1(127),AL1(0),AL1(0),AL1(1)\n         ETOA\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nDAIRPI    DC   AL2(DALDDNAM)         DDNAME PARMS\n          DC   AL2(1)\n          DC   AL2(8)\n          DC   CL8' '                DDNAME\n          DC   AL2(DALDSNAM)         DATASET NAME PARMS\n          DC   AL2(1)\n          DC   AL2(44)\n          DC   CL44' '               DATASET NAME\n          DC   AL2(DALSTATS)         INITIAL DISPOSITION PARMS\n          DC   AL2(1)\n          DC   AL2(1)\n          DC   X'08'                 INITIAL DISPOSITION (SHR)\n          DC   AL2(DALMEMBR)         MEMBER NAME PARMS\n          DC   AL2(1)\n          DC   AL2(8)\n          DC   CL8' '                DATASET NAME\nDAIRPL    EQU  *-DAIRPI\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nMSG01              DS   0C\n                   DC   C'HTTPSUB01E '\n                   DC   C'Invalid function code'\nMSG01_L            EQU  *-MSG01\nMSG02              DS   0C\n                   DC   C'HTTPSUB02I  SVC 99  R15='\nMSG02_R15          DC   CL4' '\n                   DC   C'   ERR='\nMSG02_ERR          DC   CL4' '\n                   DC   C'   INFO='\nMSG02_INFO         DC   CL4' '\n                   DC   C' '\nMSG02L             EQU  *-MSG02\nMSG03              DS   0C\n                   DC   C'HTTPSUB03E '\n                   DC   C'TCPIP FUNCTION: '\nMSG03_FUNCTION     DC   CL16' '\n                   DC   C' failed. Error number'\nMSG03_ERROR_NUMBER DC   X'402020202120'\nMSG03_L            EQU  *-MSG03\n* ------------------------------------------------------------------ *\n*                                                                    *\n*        WORK AREAS                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\nWORKAREA                DSECT\n                        DS    18F\n\nWORK_DWORD              DS    D\n\nWORK_RBA                DS    A\nWORK_RB                 DS    0F,(S99RBEND-S99RB)X\n\nWORK_TEXT_ADDRESS_1     DS    A\nWORK_TEXT_ADDRESS_2     DS    A\nWORK_TEXT_ADDRESS_3     DS    A\nWORK_TEXT_ADDRESS_4     DS    A\nWORK_TEXT_ADDRESS_5     DS    A\n\nWORK_LENGTH             DS    F\n\nWORK_DD_PARMS           DS    AL2,AL2,AL2\nWORK_DD_NAME            DS    CL8\nWORK_DS_PARMS           DS    AL2,AL2,AL2\nWORK_DS_NAME            DS    CL44\nWORK_DISP_PARMS         DS    AL2,AL2,AL2\nWORK_DISP               DS    X\nWORK_MEMBER_PARMS       DS    AL2,AL2,AL2\nWORK_MEMBER_NAME        DS    CL8\n\nWORK_TRACE_R15          DS    F\nWORK_ID                 DS    CL8\nWORK_TRACE_AREA         DS    F\n                        DS    CL4\nWORK_TRACE_1ST          DS    F\n                        DS    CL4\nWORK_TRACE_LAST         DS    F\n                        DS    CL4\nWORK_TRACE_CURR         DS    F\nWORK_TRACE_DATA1        DS    CL8\nWORK_TRACE_DATA2        DS    CL8\nWORK_TRACE_DATA3        DS    CL8\n\nWORK_PEER               DS    0F\nWORK_PEER_AF            DS    XL2\nWORK_PEER_PORT          DS    XL2\nWORK_PEER_IP            DS    XL4\nWORK_PEER_RESERVED      DS    XL8\nWORK_PEER_L             EQU   *-WORK_PEER\n\nWORK_PORT               DS    XL2\nWORK_SOCKET             DS    XL2\n\n                        CLIENT PREFIX=WORK_OUR\nCLIENTL                 EQU   *-WORK_OUR_CLIENT\n\n                        CLIENT PREFIX=WORK_HTTPWEB\n\n                        CLIENT PREFIX=WORK_PEER\n\nWORK_TCPIP_RETURN_CODE  DS    F\nWORK_TCPIP_ERROR_NUMBER DS    F\nWORK_TCPIP_MAX_SOCKET   DS    F\nWORK_TCPIP_TASK         EZASMI TYPE=TASK,STORAGE=CSECT\n\nWORK_FUNCTION           DS    CL16\n\nWORK_FLAGS              DS    X\n$WORK_URL_LOGGING       EQU   X'80'\n\n                        NETBLOK DSECT=NO\n                        DS      CL32768\n                        ORG     NET_DATA\n                        WEBURL  DSECT=NO\n                        URL     DSECT=NO\n                        ORG     NET_DATA\n                        LOGBLOK DSECT=NO\n                        ORG\nWORKAREAL               EQU     *-WORKAREA\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\nTRACE_ENTRY     DSECT\nTRACE_ID        DS        CL8\nTRACE_DATA1     DS        CL8\nTRACE_DATA2     DS        CL8\nTRACE_DATA3     DS        CL8\nTRACE_ENTRYL    EQU       *-TRACE_ENTRY\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                SUBPARM   TYPE=DSECT\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                IEFZB4D0\n                IEFZB4D2\n* ------------------------------------------------------------------ *\n*                                                                    *\n* ------------------------------------------------------------------ *\n                COPY     REGEQU\n$LF             EQU      X'0A'\nURL_BUFFER_SIZE EQU      32000\n                END      HTTPSUB\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HTTPTCP": {"ttr": 5377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00S\\x01\\x04$o\\x01\\x072O\\x08\\x08\\x02\\x17\\x00t\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "2004-09-02T00:00:00", "modifydate": "2007-11-20T08:08:53", "lines": 535, "newlines": 116, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*    TCP/IP subtask (probably a bad name.. it is misleading)          *\n*                                                                     *\n*                                                                     *\n*   After HTTPINIT has called HTTPPARM, it verifies there were no     *\n*   errors.  It then ATTACHes several subtasks including this one.    *\n*   One of the parameters is the TCP/IP port number we are to use.    *\n*                                                                     *\n*   At start-up this subtask                                          *\n*      1) initializes the TCP/IP environment                          *\n*      2) obtains its own CLIENTID                                    *\n*      3) creates a socket                                            *\n*      4) BINDs to the port given for SERVERPORT                      *\n*      5) issues a LISTEN                                             *\n*                                                                     *\n*                                                                     *\n*   When a server space contacts us                                   *\n*      1) Issue an ACCEPT to get the socket for this connection       *\n*      2) ATTACH a subtask for managing communication to the          *\n*           server space                                              *\n*      3) WAIT for the subtask to initialize                          *\n*      4) Issue a GIVESOCKET to transer ownership of the socket       *\n*           to the subtask just ATTACHed                              *\n*      5) WAIT for the GIVESOCKET to complete                         *\n*                                                                     *\n*   When the connection to a server space is lost                     *\n*      1) DETACH the subtask                                          *\n*      2) FREEMAIN any work queued to the subtask                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*   By default TCP/IP allows a given program to have up to 50         *\n*   socket descriptors at one time.  In response to an ACCEPT,        *\n*   TCP/IP creates a socket descriptor.  When a web user contacts     *\n*   the main space, we get a socket descriptor for communication      *\n*   with that web user.  Call this descriptor A.  We issue a          *\n*   GIVESOCKET referencing descriptor A and notify the server space.  *\n*   The server space will issue a TAKESOCKET referencing desriptor A. *\n*   TCP/IP will create a second socket.  Call this descriptor B.      *\n*   After the GIVESOCKET/TAKESOCKET have completed, there are         *\n*   two socket descriptors.  That is descriptor A still exists        *\n*   and counts toward the 50 descriptors we are allowed to have.      *\n*   We need to issue a CLOSE referencing descriptor A.  TCP/IP        *\n*   will free any resources related to this descriptor and reduce     *\n*   the number of our active descriptors by 1.  Simple, right?        *\n*                                                                     *\n*                                                                     *\n*   When a server space successfully completes the TAKESOCKET, it     *\n*   will send back confirmation that it has the WEBURL and has        *\n*   the socket for communicating with the web client.                 *\n*   This subtask now                                                  *\n*      1) issues a WAIT to complete the GIVESOCKET                    *\n*      2) CLOSEs the SOCKET using the descriptor given to us          *\n*         in response to our ACCEPT call                              *\n*      2) FREEMAINs the WEBURL block                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPTCP  CSECT\nHTTPTCP  AMODE 31\nHTTPTCP  RMODE ANY\n         USING HTTPTCP,R12,R10                DEFINE BASE\n         USING SERVBLOK,R6\n         USING HTTPCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPTCP'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LA    R10,2048(R12)\n         LA    R10,2048(R10)\n         L     R11,0(R1)                      COPY COMM AREA BASE\n         ST    R12,COMM_HTTPTCP_ADDRESS       SAVE OUR BASE ADDRESS\n         GETMAIN RU,                          OBTAIN WORK AREA STORAGE +\n               LV=WORKL,                                               +\n               LOC=ANY\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ST    R13,COMM_HTTPTCP_WORK_AREA\n         ITRACE ID=INIT\n         MVC   PRT_EYE,C_PRT_ID               IDENTIFY CONTROL BLOCK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\n         MVI   PRT_COMMAND,$PRT_PRINT\n         LA    R1,COMM_HTTPTCP_WORK_ECB\n         ST    R1,WORK_WAIT_ECB_1\n         LA    R1,WORK_TCPIP_ECB\n         ST    R1,WORK_WAIT_ECB_2\n         OI    WORK_WAIT_ECB_2,X'80'\n         XC    COMM_HTTPTCP_WORK_ECB,COMM_HTTPTCP_WORK_ECB\n* ------------------------------------------------------------------- *\n*     Make the INITAPI call                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=INITAPI,                                            +\n               DATA1=(C_HTTPTCP,8)\n         MVC   PRT_MESSAGE_ID(MSG01_L),MSG01\n         BAL   R9,PRT0000\n         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK\n         MVC   WORK_TCPIP_FUNCTION,=CL16'INITAPI'\n         EZASMI TYPE=INITAPI,                                          +\n               MAXSNO=WORK_MAX_SOCKET,                                 +\n               SUBTASK=C_HTTPTCP,                                      +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ASYNC='ECB',                                            +\n               TASK=WORK_TCPIP_TASK\n         BAL   R8,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*     Get our CLIENTID                                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GETID\n         MVC   COMM_HTTPTCP_CLIENT_NAME,COMM_BLANKS\n         MVC   COMM_HTTPTCP_CLIENT_TASK,COMM_BLANKS\n         XC   COMM_HTTPTCP_CLIENT_TASK+8(20),COMM_HTTPTCP_CLIENT_TASK+8\n         MVC   WORK_TCPIP_FUNCTION,=CL16'GETCLIENTID'\n         EZASMI TYPE=GETCLIENTID,                                      +\n               CLIENT=COMM_HTTPTCP_CLIENT,                             +\n               ECB=WORK_TCPIP_ECB,                                     +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n         ITRACE ID=CLIENTID,                                           +\n               DATA1=(COMM_HTTPTCP_CLIENT_NAME,8),                     +\n               DATA2=(COMM_HTTPTCP_CLIENT_TASK,8)\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*     Create the socket                                               *\n* ------------------------------------------------------------------- *\n         MVC   PRT_MESSAGE_ID(MSG02_L),MSG02\n         BAL   R9,PRT0000\n         ITRACE ID=SOCKET\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'SOCKET'\n         EZASMI TYPE=SOCKET,                                           +\n               AF='INET',                                              +\n               SOCTYPE='STREAM',                                       +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R8,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n         MVC   WORK_SOCKET,WORK_TCPIP_RETURN_CODE+2\n* ------------------------------------------------------------------- *\n*     BIND the socket                                                 *\n* ------------------------------------------------------------------- *\n         MVC   PRT_MESSAGE_ID(MSG03_L),MSG03\n         MVC   PRT_MESSAGE_ID+(MSG03_PORT-MSG03)(L'MSG03_PORT),COMM_SER+\n               VER_PORT_CHAR\n         BAL   R9,PRT0000\n         XC    WORK_SOCKET_STRUCTURE,WORK_SOCKET_STRUCTURE\n         MVC   WORK_SOCKET_FAMILY,C_AF_INET\n         MVC   WORK_SOCKET_PORT,COMM_SERVER_PORT\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'BIND'\n         ITRACE ID=BIND,                                               +\n               DATA1=(WORK_SOCKET_PORT,2)\n         EZASMI TYPE=BIND,                                             +\n               S=WORK_SOCKET,                                          +\n               NAME=WORK_SOCKET_STRUCTURE,                             +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R8,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*     Start LISTENing                                                 *\n* ------------------------------------------------------------------- *\n         MVC   PRT_MESSAGE_ID(MSG04_L),MSG04\n         BAL   R9,PRT0000\n         ITRACE ID=LISTEN\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'LISTEN'\n         EZASMI TYPE=LISTEN,                                           +\n               BACKLOG=5,                                              +\n               S=WORK_SOCKET,                                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R8,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n         POST  COMM_HTTPTCP_INITIALIZED\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Print \"Accepting LOG ONs\" message                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   PRT_MESSAGE_ID(MSG05_L),MSG05\n         BAL   R9,PRT0000\n* ------------------------------------------------------------------- *\n*     Issue ACCEPT                                                    *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         TM    COMM_EOJ,$EOJ_PHASE_1\n         BO    TERM0000\n         ITRACE ID=ACCEPT\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'ACCEPT'\n         EZASMI TYPE=ACCEPT,                                           +\n               S=WORK_SOCKET,                                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               NAME=WORK_SOCKET_STRUCTURE,                             +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Wait for either a CONNECT or server shutdown                 *\n*        command (entered via the console).                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=WAIT\n         WAIT  ECBLIST=WORK_WAIT_LIST\n         ITRACE ID=AWAKE\nMAIN0020 DS    0H\n         TM    COMM_EOJ,$EOJ_PHASE_1\n         BO    TERM0000\n         TM    WORK_TCPIP_ECB,X'40'\n         BNO   MAIN0010\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        A new connection has arrived                                 *\n*                                                                     *\n*   GETMAIN a SERVBLOK                                                *\n*   Add the SERVBLOK to chain                                         *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         L     R1,COMM_HTTPTCP_CONTACTS\n         LA    R1,1(,R1)\n         ST    R1,COMM_HTTPTCP_CONTACTS\n         MVC   WORK_NEW_SOCKET,WORK_TCPIP_RETURN_CODE+2\n         ITRACE ID=NEW_SOCK,                                           +\n               DATA1=(WORK_NEW_SOCKET,2)\n         GETMAIN RU,                                                   +\n               LV=SERVBLOKL,                                           +\n               LOC=ANY\n         LR    R6,R1\n         ITRACE ID=SERVBLOK,                  TRACE SERVBLOK           +\n               RDATA1=R6\n         LR    R0,R6\n         L     R1,=A(SERVBLOKL)\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14                         INITIALIZE SERVBLOK\n         MVC   SERVER_EYE,C_SERVER_ID\n         ST    R11,SERVER_HTTP_COMMON         SET COMMON'S ADDRESS\n         TIME  DEC\n         ST    R0,SERVER_CONNECT_TIME         SET CONNECT TIME\n         ST    R1,SERVER_CONNECT_DATE         SET CONNECT DATE\n         ZAP   SERVER_LAST_DATE,C_P0          INITIALIZE LAST COMM DATE\nMAIN0030 DS    0H\n         L     R1,COMM_NEW_SERVERS            1ST ON CHAIN NOW\n         ST    R1,SERVER_NEXT                 SAVE ADDRESS\n         CS    R1,R6,COMM_NEW_SERVERS         SWAP IN NEW BLOCK\n         BC    4,MAIN0030                     BAD TIMING.. TRY AGAIN\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   It is much cleaner overall for the main task to be the parent     *\n*                                                                     *\n*   1)  The SERVBLOK is already on the new SERVBLOK chain             *\n*   2)  WAIT for the new HTTPSERV subtask to initialize               *\n*   3)  The POST (from step 2) will \"wake up\" the main task           *\n*   4)  The main task will ATTACH a new HTTPSERV subtask              *\n*   5)  The new HTTPSERV subtask will initialize its TCP/IP           *\n*         environment                                                 *\n*   6)  The HTTPSERV subtask will determine its CLIENTID              *\n*         (the ID will be placed in the SERVBLOK)                     *\n*   7)  The new HTTPSERV subtask will POST the ECB we are             *\n*         WAITing on (step 2).                                        *\n*   8)  The HTTPSERV task will issue a WAIT                           *\n*   9)  This subtask will \"wake up\" and issue a GIVESOCKET            *\n*         referencing the CLIENT ID for the new HTTPSERV task         *\n*  10)  This subtask will POST the ECB used in step 8                 *\n*  11)  This subtask will WAIT                                        *\n*  12)  The HTTPSERV subtask will \"wake up\" and issue a TAKESOCKET    *\n*  13)  TCP/IP will POST the ECB used in step 11                      *\n*  14)  This task CLOSEs the SOCKET given to the new HTTPSERV task    *\n*  15)  This task issues another ACCEPT                               *\n*                                                                     *\n*                                                                     *\n*   Now the new HTTPSERV task \"owns\" the socket used to communicate   *\n*   with the server space... this task is no longer involved with     *\n*   traffic related to the socket that started this whole process.    *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=POSTMAIN\n         POST  COMM_MAIN_WORK_ECB\n* ------------------------------------------------------------------- *\n*                                                                     *\n*   HTTPMAIN WILL HAVE ATTACHED A HTTPSERV SUBTASK                    *\n*   We want to give the socket to the new subtask.                    *\n*   We have to wait for the subtask to issue the INITAPI call         *\n*   to TCP/IP before issuing the GIVESOCKET.                          *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=INITWAIT\n         WAIT  ECB=SERVER_INITAPI_ECB\n         ITRACE ID=INITECB,                                            +\n               DATA1=(SERVER_INITAPI_ECB,4)\n* ------------------------------------------------------------------- *\n*        Issue GIVESOCKET                                             *\n* ------------------------------------------------------------------- *\n         MVC   WORK_TCPIP_FUNCTION,=CL16'GIVESOCKET'\n         MVC   SERVER_SOCKET,WORK_NEW_SOCKET\n         ITRACE ID=GIVESOCK,                                           +\n               DATA1=(WORK_NEW_SOCKET,2)\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=GIVESOCKET,                                       +\n               S=WORK_NEW_SOCKET,                                      +\n               CLIENT=SERVER_CLIENT,                                   +\n               ECB=WORK_TCPIP_ECB,                                     +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE\n         POST  SERVER_GIVESOCKET_ECB           GIVE SOCKET ISSUED\n         ITRACE ID=SOCKWAIT\n         WAIT  ECB=WORK_TCPIP_ECB\n         ITRACE ID=GIVE_RC,                                            +\n               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +\n               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)\n\n         ITRACE ID=WAITECBX\n         WAIT  ECB=SERVER_ECB_X\n         ITRACE ID=ECB_X,                                              +\n               DATA1=(SERVER_ECB_X,4)\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        The HTTPSERV subtask now has the connection to the server    *\n*                                                                     *\n*        CLOSE the SOCKET                                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=CLOSE,                                              +\n               DATA1=(WORK_NEW_SOCKET,4)\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=CLOSE,                                            +\n               S=WORK_NEW_SOCKET,                                      +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0020\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ITRACE ID=TERMAPI\n         MVC   WORK_TCPIP_FUNCTION,=CL16'TERMAPI'\n         EZASMI TYPE=TERMAPI,                                          +\n               TASK=WORK_TCPIP_TASK\n         BAL   R8,INFO0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINFO0000 DS    0H\n         MVC   PRT_MESSAGE_ID(MSG90_L),MSG90\n         MVC   PRT_MESSAGE_ID+(MSG90_FUNCTION-MSG90)(L'MSG90_FUNCTION),+\n               WORK_TCPIP_FUNCTION\n         UNPK  PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(9),WORK_TCPIP_R+\n               ETURN_CODE(5)\n         MVZ   PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXZERO\n         TR    PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)+8,C' '\n         L     R1,WORK_TCPIP_ERROR_NUMBER\n         CVD   R1,WORK_DWORD\n         ED    PRT_MESSAGE_ID+(MSG90_ERROR_NUMBER-MSG90)(L'MSG90_ERROR_+\n               NUMBER),WORK_DWORD+5\n         BAL   R9,PRT0000\n         BR    R8\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE\n         ST    R14,PRT_NEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R9\n* ------------------------------------------------------------------- *\n*        Error routines                                               *\n* ------------------------------------------------------------------- *\nERR0020  DS    0H\n         BAL   R8,INFO0000\n         ABEND 3,DUMP,,USER\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\nEXIT0010 DS    0H\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S R13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKL\n         LM    R14,R12,12(R13)\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nC_AF_INET                DC    X'0002'\nC_HEXCHAR                DC    C'0123456789ABCDEF'\nC_HEXZERO                DC    0F,XL8'0000000000000000'\nC_PRT_ID                 DC    CL8'PRTBLOK'\nC_P0                     DC    P'0'\nC_HTTPTCP                DC    CL8'HTTPTCP '\nC_SERVER_ID              DC    CL8'SERVBLOK'\n\nMSG01                    DS    0C\n                         DC    CL15'HTTPTCP01I'\n                         DC    C'Issuing INITAPI'\nMSG01_L                  EQU   *-MSG01\nMSG02                    DS    0C\n                         DC    CL15'HTTPTCP02I'\n                         DC    C'Creating socket'\nMSG02_L                  EQU   *-MSG02\nMSG03                    DS    0C\n                         DC    CL15'HTTPTCP03I'\n                         DC    C'BINDing to port '\nMSG03_PORT               DC    CL5' '\nMSG03_L                  EQU   *-MSG03\nMSG04                    DS    0C\n                         DC    CL15'HTTPTCP04I'\n                         DC    C'LISTENing'\nMSG04_L                  EQU   *-MSG04\nMSG05                    DS    0C\n                         DC    CL15'HTTPTCP05I'\n                         DC    C'ACCEPTing connections from server(s)'\nMSG05_L                  EQU   *-MSG05\nMSG90                    DS    0C\n                         DC    CL15'HTTPTCP90I'\n                         DC    C'TCP/IP function '\nMSG90_FUNCTION           DC    CL16' '\n                         DC    C'  Return code: '\nMSG90_RETURN_CODE        DC    CL8' '\n                         DC    C'  Error number:'\nMSG90_ERROR_NUMBER       DC    X'402020202120'\nMSG90_L                  EQU   *-MSG90\n\n                         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA                 DSECT\n                         STDSAVE  DSECT=NO\nWORK_ID                  DS   CL8\nWORK_DWORD               DS   D\nWORK_MAX_SOCKET          DS   F\nWORK_BUFFER_LENGTH       DS   F\n\nWORK_RC                  DS   H\n\nWORK_SOCKET              DS   H\nWORK_NEW_SOCKET          DS   H\n\n                         DS   0F\nWORK_SOCKET_STRUCTURE    DS   0XL16\nWORK_SOCKET_FAMILY       DS   AL2           FAMILY (ALWAYS = 2)\nWORK_SOCKET_PORT         DS   XL2           PORT NUMBER\nWORK_SOCKET_CLIENT_IP    DS   XL4           CLIENT'S IP ADDRESS\n                         DS   XL8           RESERVED\n\nWORK_TCPIP_ECB           DS   F\n                         DS   XL100         REQUIRED BY TCP/IP\n\n                         CLIENT PREFIX=WORK\nWORK_CLIENTL             EQU  *-WORK_CLIENT\n\nWORK_TCPIP_ERROR_NUMBER  DS   F\nWORK_TCPIP_RETURN_CODE   DS   F\nWORK_TCPIP_FUNCTION      DS   CL16\nWORK_TCPIP_TASK          EZASMI TYPE=TASK,STORAGE=CSECT\n\nWORK_WAIT_LIST           DS   0F            WAIT LIST\nWORK_WAIT_ECB_1          DS   F             COMM_TERMINATION_ECB\nWORK_WAIT_ECB_2          DS   F             TCPIP_ECB\n\n                         PRTBLOK  DSECT=NO\n\nWORK_BUFFER              DS   (BUFFER_SIZE)X\nWORKL                    EQU  *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON  MAIN,TYPE=DSECT\n         SERVBLOK\n         LOGBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         EZASMI TYPE=GLOBAL,STORAGE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY   REGEQU\nBUFFER_SIZE     EQU    1000\n$LINE_FEED      EQU    X'0A'\n         END    HTTPTCP\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HTTPTERM": {"ttr": 5389, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16\\x00\\x00\\x01\\x045o\\x01\\x072O\\x08\\x12\\x01{\\x01\\xf7\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.22", "flags": 0, "createdate": "2004-12-21T00:00:00", "modifydate": "2007-11-20T08:12:00", "lines": 379, "newlines": 503, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*  Name: HTTPTERM                                                     *\n*                                                                     *\n*  PURPOSE: HTTP Termination/clean-up                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPTERM CSECT\nHTTPTERM AMODE 31\nHTTPTERM RMODE ANY\n         USING HTTPTERM,R12                   DEFINE BASE\n         USING HTTPCOMM,R11\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPTERM'                  MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         GETMAIN RU,                                                   +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WORK,R13\n         MVI   PRT_COMMAND,$PRT_PRINT\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                       Phase 1                                       *\n*   Set the EOJ1 flag.                                                *\n*   No further server space connections or web requests accepted.     *\n*   The TCP/IP subtask will shutdown.                                 *\n*   The local URL subtask is shutdown.                                *\n*   THE WEB contact subtask is shutdown.                              *\n*   The URL manager subtask is shutdown.                              *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ITRACE ID=EOJ1\n         MVC   PRT_MESSAGE_ID(MSG02L),MSG02\n         BAL   R8,PRT0000\n         OI    COMM_EOJ,$EOJ_PHASE_1          SIGNAL SHUTDOWN..\n\n* ------------------------------------------------------------------- *\n*        Shutdown the main-to-server contact subtask                  *\n* ------------------------------------------------------------------- *\n         MVC   WORK_SUBTASK,HTTPTCP\n         POST  COMM_HTTPTCP_WORK_ECB          POST THE ECB\n         WAIT  ECB=COMM_HTTPTCP_TERM_ECB      WAIT FOR SUBTASK\n         ITRACE ID=TCP_ECB,                   SUBTASK HAS TERMINATED   + +\n               DATA1=(COMM_HTTPTCP_TERM_ECB,4) .. ECB'S STATUS\n         DETACH COMM_HTTPTCP_TCB\n         STH   R15,WORK_RC                    SAVE RETURN CODE\n         LTR   R15,R15\n         BNZ   ERR0010\n         MVC   PRT_MESSAGE_ID(MSG03L),MSG03\n         UNPK  PRT_MESSAGE_ID+(MSG03ECB-MSG03)(9),COMM_HTTPTCP_TERM_ECB+) 5)\n               (5)\n         TR    PRT_MESSAGE_ID+(MSG03ECB-MSG03)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG03ECB-MSG03)+8,C' '\n         BAL   R8,PRT0000\n\n* ------------------------------------------------------------------- *\n*        Shutdown the local URL processing subtask                    *\n* ------------------------------------------------------------------- *\n         MVC   WORK_SUBTASK,HTTPLOCL\n         POST  COMM_LOCAL_WORK_ECB\n         WAIT  ECB=COMM_LOCAL_TERM_ECB\n         ITRACE ID=LOCL_ECB,                  SUBTASK HAS TERMINATED   + +\n               DATA1=(COMM_LOCAL_TERM_ECB,4)  .. ECB'S STATUS\n         DETACH COMM_LOCAL_TCB\n         STH   R15,WORK_RC                    SAVE RETURN CODE\n         LTR   R15,R15\n         BNZ   ERR0010\n         MVC   PRT_MESSAGE_ID(MSG04L),MSG04\n        UNPK  PRT_MESSAGE_ID+(MSG04ECB-MSG04)(9),COMM_LOCAL_TERM_ECB(5) 5)\n         TR    PRT_MESSAGE_ID+(MSG04ECB-MSG04)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG04ECB-MSG04)+8,C' '\n         BAL   R8,PRT0000\n\n* ------------------------------------------------------------------- *\n*        Shutdown the web user contact subtask                        *\n* ------------------------------------------------------------------- *\n         MVC   WORK_SUBTASK,HTTPWEB\n         POST  COMM_WEB_WORK_ECB\n         WAIT  ECB=COMM_WEB_TERM_ECB\n         ITRACE ID=WEB_ECB,                   SUBTASK HAS TERMINATED   + +\n               DATA1=(COMM_WEB_TERM_ECB,4)    .. ECB'S STATUS\n         DETACH COMM_WEB_TCB\n         STH   R15,WORK_RC                    SAVE RETURN CODE\n         LTR   R15,R15\n         BNZ   ERR0010\n         MVC   PRT_MESSAGE_ID(MSG05L),MSG05\n         UNPK  PRT_MESSAGE_ID+(MSG05ECB-MSG05)(9),COMM_WEB_TERM_ECB(5)  5)\n         TR    PRT_MESSAGE_ID+(MSG05ECB-MSG05)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG05ECB-MSG05)+8,C' '\n         BAL   R8,PRT0000\n\n* ------------------------------------------------------------------- *\n*        Shutdown the URL subtask                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_SUBTASK,HTTPURL\n         POST  COMM_URL_WORK_ECB\n         WAIT  ECB=COMM_URL_TERM_ECB\n         ITRACE ID=URL_ECB,                   SUBTASK HAS TERMINATED   + +\n               DATA1=(COMM_URL_TERM_ECB,4)    .. ECB'S STATUS\n         DETACH COMM_URL_TCB\n         STH   R15,WORK_RC                    SAVE RETURN CODE\n         LTR   R15,R15\n         BNZ   ERR0010\n         MVC   PRT_MESSAGE_ID(MSG06L),MSG06\n         UNPK  PRT_MESSAGE_ID+(MSG06ECB-MSG06)(9),COMM_WEB_TERM_ECB(5)  5)\n         TR    PRT_MESSAGE_ID+(MSG06ECB-MSG06)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG06ECB-MSG06)+8,C' '\n         BAL   R8,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                START OF PHASE 2 OF SHUTDOWN                         *\n*   Set the EOJ2 flag.                                                *\n*   Terminate the server connections.                                 *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=EOJ2\n         OI    COMM_EOJ,$EOJ_PHASE_2          SIGNAL SHUTDOWN..\n         MVC   PRT_MESSAGE_ID(MSG07L),MSG07\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         MVC   WORK_SUBTASK,HTTPSERV\n         ICM   R7,15,COMM_SERVERS\n         USING SERVBLOK,R7\n         BZ    TERM0030\nTERM0010 DS    0H\n         TM    SERVER_FLAGS,$SERVER_LOST\n         BO    TERM0020\n         POST  SERVER_WORK_ECB\n         WAIT  ECB=SERVER_TERM_ECB\nTERM0020 DS    0H\n         ITRACE ID=DTCHSRV,                                            +\n               DATA1=(SERVER_TERM_ECB,4)\n         DETACH SERVER_TCB\n         LTR   R15,R15\n         BNZ   ERR0010\n         MVC   PRT_MESSAGE_ID(MSG08L),MSG08\n         MVC   PRT_MESSAGE_ID+(MSG08TASK-MSG08)(L'MSG08TASK),SERVER_SUB+\n               TASK\n         UNPK  PRT_MESSAGE_ID+(MSG08ECB-MSG08)(9),SERVER_TERM_ECB(5)    5)\n         TR    PRT_MESSAGE_ID+(MSG08ECB-MSG08)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG08ECB-MSG08)+8,C' '\n         BAL   R8,PRT0000\n         ITRACE ID=FREESERV,                                           +\n               RDATA1=R7\n         LR    R1,R7\n         ICM   R7,15,SERVER_NEXT\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=SERVBLOKL\n         LTR   R7,R7\n         BNZ   TERM0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n*                START OF PHASE 3 OF SHUTDOWN                         *\n*                                                                     *\n*     Terminate the CONSOLE subtask                                   *\n*     Terminate the LOGGING subtask                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0030 DS    0H\n         ITRACE ID=EOJ3\n         OI    COMM_EOJ,$EOJ_PHASE_3          SIGNAL PHASE 3\n         MVC   PRT_MESSAGE_ID(MSG10L),MSG10\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         OC    COMM_CONSOLE_TCB,COMM_CONSOLE_TCB                        ?\n         BZ    TERM0110\n         ITRACE ID=CONSTERM\n         POST  COMM_CONSOLE_WORK_ECB\n         WAIT  ECB=COMM_CONSOLE_TERM_ECB      WAIT FOR TERMINATION\n         DETACH COMM_CONSOLE_TCB              DETACH CONSOLE SUBTASK\n         ITRACE ID=COMM_CONSOLE_TERM_ECB,     SUBTASK HAS TERMINATED   + +\n               DATA1=(COMM_CONSOLE_TERM_ECB,4) .. ECB'S STATUS\n         MVC   PRT_MESSAGE_ID(MSG11L),MSG11\n         UNPK  PRT_MESSAGE_ID+(MSG11ECB-MSG11)(9),COMM_CONSOLE_TERM_ECB+5)\n               (5)\n         TR    PRT_MESSAGE_ID+(MSG11ECB-MSG11)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG11ECB-MSG11)+8,C' '\n         BAL   R8,PRT0000\nTERM0110 DS    0H\n         OC    COMM_LOG_TERM_ECB+1(3),COMM_LOG_TERM_ECB+1\n         BZ    TERM0120\nTERM0120 DS    0H\n         OC    COMM_LOG_TCB,COMM_LOG_TCB                                ?\n         BZ    TERM0130\n         ITRACE ID=LOGTERM\n         POST  COMM_LOG_WORK_ECB\n         WAIT  ECB=COMM_LOG_TERM_ECB          WAIT FOR TERMINATION\n         DETACH COMM_LOG_TCB                  DETACH LOGGING SUBTASK\n         ITRACE ID=COMM_LOG_TERM_ECB,         SUBTASK HAS TERMINATED   + +\n               DATA1=(COMM_LOG_TERM_ECB,4)    .. ECB'S STATUS\n         MVC   PRT_MESSAGE_ID(MSG13L),MSG13\n         UNPK  PRT_MESSAGE_ID+(MSG13ECB-MSG13)(9),COMM_LOG_TERM_ECB(5)  5)\n         TR    PRT_MESSAGE_ID+(MSG13ECB-MSG13)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG13ECB-MSG13)+8,C' '\n         BAL   R8,PRT0000\n* ------------------------------------------------------------------- *\n*                Start phase 4 of shutdown                            *\n* ------------------------------------------------------------------- *\nTERM0130 DS    0H\n         OI    COMM_EOJ,$EOJ_PHASE_4          SIGNAL PHASE 4\n         MVC   PRT_MESSAGE_ID(MSG15L),MSG15\n         BAL   R8,PRT0000\n         ITRACE ID=EOJ4\n         OI    COMM_EOJ,$EOJ_PHASE_4\n         POST  COMM_PRINT_WORK_ECB\n         WAIT  1,ECB=COMM_PRINT_TERM_ECB                                ION\n         DETACH COMM_PRINT_TCB\n         ITRACE ID=COMM_PRINT_TERM_ECB,                                +\n               DATA1=(COMM_PRINT_TERM_ECB,4)\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*        ERROR ROUTINES                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         ITRACE ID=DTCHFAIL                   SUBTASK DETACH FAILED\n         STH   R15,WORK_RC                    SAVE RETURN CODE\n         MVC   PRT_MESSAGE_ID(MSG20L),MSG20\n         MVC   PRT_MESSAGE_ID+(MSG20TSK-MSG20)(L'MSG20TSK),WORK_SUBTASK\n         UNPK  PRT_MESSAGE_ID+(MSG20R15-MSG20)(5),WORK_RC(3)\n         TR    PRT_MESSAGE_ID+(MSG20R15-MSG20)(L'MSG20R15),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG20R15-MSG20)+4,C' '\n         BAL   R8,PRT0000                     PRINT MESSAGE\n         DC    H'0'                           TIME TO FIX THIS THING\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE\n         ST    R14,PRT_NEXT-PRTBLOK(R1)\n         CS    R14,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         BR    R8                             COMPLETE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         LR    R2,R13\n         L     R13,4(R13)\n         FREEMAIN RU,                         FREEMAIN WORK AREA       +\n               A=(R2),                                                 +\n               LV=WORKL\n         LM    R14,R12,12(R13)                RESTORE REGISTERS\n         SR    R15,R15                        CLEAR REGISTER\n         BR    R14                            EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nHEXCHAR     EQU   *-C'0'\n            DC    C'0123456789ABCDEF'\n\nHTTPCONS    DC    CL8'HTTPCONS'\nHTTPLOG     DC    CL8'HTTPLOG'\nHTTPLOCL    DC    CL8'HTTPLOCL'\nHTTPPRT     DC    CL8'HTTPPRT'\nHTTPSERV    DC    CL8'HTTPSERV'\nHTTPTCP     DC    CL8'HTTPTCP'\nHTTPURL     DC    CL8'HTTPURL'\nHTTPWEB     DC    CL8'HTTPWEB'\nPRT_ID      DC    CL8'PRTBLOK'\n\nMSG02    DS    0C\n         DC    CL15'HTTPTERM02I'\n         DC    C'Termination phase 1 beginning.'\nMSG02L   EQU   *-MSG02\nMSG03    DS    0C\n         DC    CL15'HTTPTERM03I'\n         DC    C'TCP/IP subtask terminated, ECB='\nMSG03ECB DC    CL8' '\n         DC    C' '\nMSG03L   EQU   *-MSG03\nMSG04    DS    0C\n         DC    CL15'HTTPTERM04I'\n         DC    C'Local URL subtask terminated, ECB='\nMSG04ECB DC    CL8' '\n         DC    C' '\nMSG04L   EQU   *-MSG04\nMSG05    DS    0C\n         DC    CL15'HTTPTERM05I'\n         DC    C'WEB subtask terminated, ECB='\nMSG05ECB DC    CL8' '\n         DC    C' '\nMSG05L   EQU   *-MSG05\nMSG06    DS    0C\n         DC    CL15'HTTPTERM06I'\n         DC    C'URL subtask terminated, ECB='\nMSG06ECB DC    CL8' '\n         DC    C' '\nMSG06L   EQU   *-MSG06\nMSG07    DS    0C\n         DC    CL15'HTTPTERM07I'\n         DC    C'Termination phase 2 beginning.'\nMSG07L   EQU   *-MSG07\nMSG08    DS    0C\n         DC    CL15'HTTPTERM08I'\n         DC    C'SERVER subtask '\nMSG08TASK DC   CL8' '\n         DC    C' terminated, ECB='\nMSG08ECB DC    CL8' '\n         DC    C' '\nMSG08L   EQU   *-MSG08\nMSG10    DS    0C\n         DC    CL15'HTTPTERM10I'\n         DC    C'Termination phase 3 beginning.'\nMSG10L   EQU   *-MSG10\nMSG11    DS    0C\n         DC    CL15'HTTPTERM11I'\n         DC    C'Console communcation subtask terminated, ECB='\nMSG11ECB DC    CL8' '\n         DC    C' '\nMSG11L   EQU   *-MSG11\nMSG13    DS    0C\n         DC    CL15'HTTPTERM13I'\n         DC    C'Logging subtask terminated, ECB='\nMSG13ECB DC    CL8' '\n         DC    C' '\nMSG13L   EQU   *-MSG13\nMSG15    DS    0C\n         DC    CL15'HTTPTERM15I'\n         DC    C'Termination complete.'\nMSG15L   EQU   *-MSG15\nMSG20    DS    0C\n         DC    CL15'HTTPTERM20E'\n         DC    C'DETACH failed.  Subtask '\nMSG20TSK DC    CL8' '\n         DC    C', R15='\nMSG20R15 DC    CL4' '\n         DC    C' '\nMSG20L   EQU   *-MSG20\n         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WORK AREA                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORK             DSECT\n                 STDSAVE DSECT=NO\nWORK_ID          DS       CL8\nWORK_DWORD       DS       D\n\nWORK_RC          DS       H\nWORK_SUBTASK     DS       CL8              SUBTASK BEING DETACHED\n                 PRTBLOK  DSECT=NO\nWORKL            EQU      *-WORK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON   MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         SERVBLOK DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                  IKJTCB   LIST=NO\n                  IEFTIOT1\nSERVER_IO_SIZE    EQU      32760\n                  COPY     REGEQU\n         END   HTTPTERM\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPTEST": {"ttr": 5641, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x013\\x00\"\\x01\\x043\\x7f\\x01\\x05\\x11/\\x16\\x08\\x02G\\x01\\x03\\x02G\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.51", "flags": 0, "createdate": "2004-12-02T00:00:00", "modifydate": "2005-04-22T16:08:22", "lines": 583, "newlines": 259, "modlines": 583, "user": "RLRICE"}, "text": "         MACRO\n         MYWTO &SWITCH=,&T\n         GBLB  &WTOSW\n         AIF   (T'&SWITCH EQ 'O').SW00\n         AIF   ('&SWITCH' EQ 'ON').SW01\n         AIF   ('&SWITCH' EQ 'OFF').SW02\n         MNOTE 12,'BAD SWITCH'\n         MEXIT\n.SW00    WTO   &T\n         MEXIT\n.SW01    ANOP\n&WTOSW   SETB  1\n         MEXIT\n.SW02    ANOP\n&WTOSW   SETB  0\n         MEND\nHTTPTEST CSECT\nHTTPTEST AMODE 31\nHTTPTEST RMODE 24\n         USING HTTPTEST,R12,R10     DEFINE BASE\n         STM   R14,R12,12(R13)      SAVE ENTRY REGISTERS\n         LR    R12,R15              COPY BASE\n         B     INIT0000             BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPTEST'        MODULE NAME\n         DC    CL8'&SYSDATE'        DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'        TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LA    R10,2048(R12)\n         LA    R10,2048(R10)\n         L     R11,0(R1)             COPY COMM AREA BASE\n         GETMAIN RU,                 OBTAIN WORK AREA STORAGE          +\n               LV=WORKL,                                               +\n               LOC=BELOW\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13          DEFINE BASE\n         MVI   PR_CC,C' '\n         MVC   PR_LINE,PR_CC\n         GETMAIN RU,                                                   +\n               LV=GWALENTH,                                            +\n               LOC=ANY\n         ST    R1,WORK_TCPIP_GWA     TCP/IP GLOBAL WORK AREA\n* ------------------------------------------------------------------- *\n*     OPEN SYSIN and SYSPRINT                                         *\n* ------------------------------------------------------------------- *\n         MYWTO 'OPEN SYSIN AND SYSPRINT'\n         MVC   WORK_OCPL(OCPLL),OCPLI\n         MVC   WORK_SYSIN(SYSINL),SYSINI\n         OPEN  (WORK_SYSIN,INPUT),                                     +\n               MF=(E,WORK_OCPL),                                       +\n               MODE=31\n         MVC   WORK_SYSPRINT(SYSPRINTL),SYSPRINTI\n         OPEN  (WORK_SYSPRINT,OUTPUT),                                 +\n               MF=(E,WORK_OCPL),                                       +\n               MODE=31\n* ------------------------------------------------------------------- *\n*     Make the INITAPI call                                           *\n* ------------------------------------------------------------------- *\n         MYWTO 'INITAPI'\n         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK\n         MVC   WORK_TCPIP_FUNCTION,=CL16'INITAPI'\n         EZASMI TYPE=INITAPI,                                          +\n               APITYPE=2,                                              +\n               ASYNC='NO',                                             +\n               MAXSNO=WORK_MAX_SOCKET,                                 +\n               SUBTASK=C_HTTPTEST,                                     +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               TASK=WORK_TCPIP_TASK\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n* ------------------------------------------------------------------- *\n*     Read the first control statement (Port number)                  *\n* ------------------------------------------------------------------- *\n         MYWTO 'READ FIRST'\n         GET   WORK_SYSIN,WORK_CARD\n         MVC   PR_LINE(MSG01L),MSG01\n         MVC   PR_LINE+(MSG01_CARD-MSG01)(L'MSG01_CARD),WORK_CARD\n         BAL   R9,PRT0000\n         XC    WORK_DWORD,WORK_DWORD\n         PACK  WORK_DWORD+5(3),WORK_CARD(5)\n         CVB   R1,WORK_DWORD\n         STH   R1,WORK_OUR_PORT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Read a control statement (URL)                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         MYWTO 'MAIN0000'\n         GET   WORK_SYSIN,WORK_CARD\n         MVC   PR_LINE(MSG01L),MSG01\n         MVC   PR_LINE+(MSG01_CARD-MSG01)(L'MSG01_CARD),WORK_CARD\n         BAL   R9,PRT0000\n         MVC   WORK_PORT,H80\n         LA    R1,WORK_CARD\n         SR    R2,R2\nMAIN0010 DS    0H\n         CLI   0(R1),C':'\n         BE    MAIN0020\n         CLI   0(R1),C'/'\n         BE    MAIN0050\n         LA    R1,1(R1)\n         LA    R2,1(R2)\n         B     MAIN0010\nMAIN0020 DS    0H\n         LA    R1,1(R1)\n         MVC   WORK_PACK_IN,=C'00000'\nMAIN0030 DS    0H\n         CLI   0(R1),C'/'\n         BE    MAIN0050\n         MVC   WORK_PACK_IN(4),WORK_PACK_IN+1\n         MVC   WORK_PACK_IN+4(1),0(R1)\n         LA    R1,1(R1)\n         B     MAIN0030\nMAIN0040 DS    0H\n         XC    WORK_DWORD,WORK_DWORD\n         PACK  WORK_DWORD+5(3),WORK_PACK_IN(5)\n         CVB   R1,WORK_DWORD\n         STH   R1,WORK_PORT\nMAIN0050 DS    0H\n         ST    R1,WORK_URL_DATA_ADDRESS\n         ST    R2,WORK_HOSTNAME_LENGTH\n* ------------------------------------------------------------------- *\n*     Create the socket                                               *\n* ------------------------------------------------------------------- *\n         MYWTO 'CREATE SOCKET'\n         MVC   WORK_TCPIP_FUNCTION,=CL16'SOCKET'\n         EZASMI TYPE=SOCKET,                                           +\n               AF='INET',                                              +\n               SOCTYPE='STREAM',                                       +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               TASK=WORK_TCPIP_TASK\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         MVC   WORK_SOCKET_DESCRIPTOR,WORK_TCPIP_RETURN_CODE+2\n* ------------------------------------------------------------------- *\n*     BIND the socket                                                 *\n* ------------------------------------------------------------------- *\n         MYWTO 'BIND'\n         XC    WORK_SOCKET_STRUCTURE,WORK_SOCKET_STRUCTURE\n         MVC   WORK_SOCKET_FAMILY,C_AF_INET\n         MVC   WORK_SOCKET_PORT,WORK_OUR_PORT\n         MVC   WORK_TCPIP_FUNCTION,=CL16'BIND'\n         EZASMI TYPE=BIND,                                             +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               NAME=WORK_SOCKET_STRUCTURE,                             +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               TASK=WORK_TCPIP_TASK\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n* ------------------------------------------------------------------- *\n*     Determine peer's IP address                                     *\n* ------------------------------------------------------------------- *\n         MYWTO 'GETHOSTBYNAME'\n         MVC   WORK_TCPIP_FUNCTION,=CL16'GETHOSTBYNAME'\n         EZASMI TYPE=GETHOSTBYNAME,                                    +\n               NAMELEN=WORK_HOSTNAME_LENGTH,                           +\n               NAME=WORK_CARD,                                         +\n               HOSTENT=WORK_HOSTENT,                                   +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERROR=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n* ------------------------------------------------------------------- *\n*     Establish a connection to the peer                              *\n* ------------------------------------------------------------------- *\n         MYWTO 'CONNECT'\n         L     R1,WORK_HOSTENT\n         USING HOSTENT,R1\n         L     R2,HOSTENT_IP_LIST\n         L     R3,0(R2)\n         XC    WORK_PEER,WORK_PEER\n         MVC   WORK_PEER_AF,C_AF_INET\n         MVC   WORK_PEER_PORT,WORK_PORT\n         MVC   WORK_PEER_IP_ADDRESS,0(R3)\n         MVC   WORK_TCPIP_FUNCTION,=CL16'CONNECT'\n         EZASMI TYPE=CONNECT,                                          +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               NAME=WORK_PEER,                                         +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n* ------------------------------------------------------------------- *\n*     Send (write) the URL to the server                              *\n* ------------------------------------------------------------------- *\n         MVC   WORK_URL,BLANKS\n         MVC   WORK_URL_METHOD,=CL4'GET'\n         L     R1,WORK_URL_DATA_ADDRESS\n         MVC   WORK_URL_DATA,0(R1)\n         LA    R2,WORK_URL_DATA-WORK_URL\nMAIN0060 DS    0H\n         CLI   0(R1),C' '\n         BE    MAIN0070\n         LA    R2,1(R2)\n         LA    R1,1(R1)\n         B     MAIN0060\nMAIN0070 DS    0H\n         BAL   R9,PRT0000\n         MVC   PR_LINE(MSG02L),MSG02\n         MVC   PR_LINE+(MSG02_URL-MSG02)(L'MSG02_URL),WORK_URL\n         BAL   R9,PRT0000\n         ST    R2,WORK_URL_LENGTH\n         MVC   WORK_TCPIP_FUNCTION,=CL16'WRITE'\n         TR    WORK_URL,EBCDIC_TO_ASCII\n         ZAP   WORK_BUFFER_NUMBER,P0\n         MYWTO 'WRITE'\n         EZASMI TYPE=WRITE,                                            +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               BUF=WORK_URL,                                           +\n               NBYTE=WORK_URL_LENGTH,                                  +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         ICM   R1,15,WORK_TCPIP_RETURN_CODE\n         BNH   ERR0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_TCPIP_FUNCTION,=CL16'SHUTDOWN'\n         MYWTO 'SHUTDOWN'\n         EZASMI TYPE=SHUTDOWN,                                         +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               HOW=1,                                                  +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n* ------------------------------------------------------------------- *\n*     Receive the response(s)                                         *\n* ------------------------------------------------------------------- *\nMAIN0080 DS    0H\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MYWTO 'IOCTL'\n         AGO   .NOGEN\n         EZASMI TYPE=IOCTL,                                            +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               COMMAND='FIONREAD',                                     +\n               RETARG=WORK_RECV_BUFFER_SIZE,                           +\n               REQARG=WORK_DWORD,                                      +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n.NOGEN   ANOP\n         L     R6,WORK_RECV_BUFFER_SIZE\n         MVC   WORK_TCPIP_FUNCTION,=CL16'READ'\n         MVC   WORK_RECV_BUFFER_SIZE,RECV_BUFFER_SIZE\n         MYWTO 'READ'\n         EZASMI TYPE=READ,                                             +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               BUF=WORK_RECV_BUFFER,                                   +\n               NBYTE=WORK_RECV_BUFFER_SIZE,                            +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         AP    WORK_BUFFER_NUMBER,P1\n         MVC   PR_LINE(MSG03L),MSG03\n         ED    PR_LINE+(MSG03_BUFFER_NUMBER-MSG03)(L'MSG03_BUFFER_NUMBE+\n               R),WORK_BUFFER_NUMBER\n         ICM   R1,15,WORK_TCPIP_RETURN_CODE\n         CVD   R1,WORK_DWORD\n         ED    PR_LINE+(MSG03_BYTES_RECEIVED-MSG03)(L'MSG03_BYTES_RECEI+\n               VED),WORK_DWORD+5\n         UNPK  PR_LINE+(MSG03_BYTES_HEX-MSG03)(9),WORK_TCPIP_RETURN_COD+\n               E(5)\n         TR    PR_LINE+(MSG03_BYTES_HEX-MSG03)(8),HEXCHAR\n         MVI   PR_LINE+(MSG03_BYTES_HEX-MSG03)+8,C')'\n         BAL   R9,PRT0000\n         ICM   R1,15,WORK_TCPIP_RETURN_CODE\n         BZ    MAIN0000\n* ------------------------------------------------------------------- *\n*     Translate from ASCII to EBCDIC                                  *\n* ------------------------------------------------------------------- *\n         LA    R1,WORK_RECV_BUFFER\n         LA    R2,(32768/256)-1\nMAIN0090 DS    0H\n         TR    0(256,R1),ASCII_TO_EBCDIC\n         LA    R1,256(R1)\n         BCT   R2,MAIN0090\n* ------------------------------------------------------------------- *\n*     Print the received data                                         *\n* ------------------------------------------------------------------- *\n         SR    R2,R2\n         LA    R3,WORK_RECV_BUFFER\nMAIN0100 DS    0H\n         L     R4,WORK_TCPIP_RETURN_CODE\n         SR    R4,R2\n         CH    R4,H32\n         BNH   MAIN0110\n         LH    R4,H32\nMAIN0110 DS    0H\n         MVC   PR_LINE(MSG04L),MSG04\n         ST    R2,WORK_DWORD\n         UNPK  PR_LINE+(MSG04_DISPLACEMENT-MSG04)(9),WORK_DWORD(5)\n         TR    PR_LINE+(MSG04_DISPLACEMENT-MSG04)(8),HEXCHAR\n         MVI   PR_LINE+(MSG04_DISPLACEMENT-MSG04)+8,C' '\n         BCTR  R4,0\n         EX    R4,CHAR_MVC\n         EX    R4,CHAR_TR\n         LA    R4,1(R4)\n         SLL   R4,1\n         UNPK  WORK_UNPACK+00(9),00(5,R3)\n         UNPK  WORK_UNPACK+08(9),04(5,R3)\n         UNPK  WORK_UNPACK+16(9),08(5,R3)\n         UNPK  WORK_UNPACK+24(9),12(5,R3)\n         UNPK  WORK_UNPACK+32(9),16(5,R3)\n         UNPK  WORK_UNPACK+40(9),20(5,R3)\n         UNPK  WORK_UNPACK+48(9),24(5,R3)\n         UNPK  WORK_UNPACK+56(9),28(5,R3)\n         TR    WORK_UNPACK(64),HEXCHAR\n         BCTR  R4,0\n         EX    R4,HEX_MVC\n         BAL   R9,PRT0000\n         AH    R2,H32\n         AH    R3,H32\n         C     R2,WORK_TCPIP_RETURN_CODE\n         BL    MAIN0100\n         MYWTO 'PRINT'\n         BAL   R9,PRT0000\n         B     MAIN0080\nCHAR_MVC MVC   PR_LINE+(MSG04_CHAR-MSG04)(0),0(R3)\nCHAR_TR  TR    PR_LINE+(MSG04_CHAR-MSG04)(0),PRINTABLE\nHEX_MVC  MVC   PR_LINE+(MSG04_HEX-MSG04)(0),WORK_UNPACK\n* ------------------------------------------------------------------- *\n*     CLOSE the socket                                                *\n* ------------------------------------------------------------------- *\nMAIN0200 DS    0H\n         MYWTO 'CLOSE SOCKET'\n         MVC   WORK_TCPIP_FUNCTION,=CL16'CLOSE'\n         EZASMI TYPE=CLOSE,                                            +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         B     MAIN0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEOF0000  DS    0H\n         MYWTO 'TERMAPI'\n         MVC   WORK_TCPIP_FUNCTION,=CL16'TERMAPI'\n         EZASMI TYPE=TERMAPI,                                          +\n               TASK=WORK_TCPIP_TASK\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0010\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         BAL   R10,INFO0000\n         DC    H'0'\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINFO0000 DS    0H\n         MVC   PR_LINE(MSG90_L),MSG90\n         MVC   PR_LINE+(MSG90_FUNCTION-MSG90)(L'MSG90_FUNCTION),WORK_TC+\n               PIP_FUNCTION\n         UNPK  PR_LINE+(MSG90_RETURN_CODE-MSG90)(9),WORK_TCPIP_RETURN_C+\n               ODE(5)\n         TR    PR_LINE+(MSG90_RETURN_CODE-MSG90)(8),HEXCHAR\n         MVI   PR_LINE+(MSG90_RETURN_CODE-MSG90)+8,C' '\n         L     R1,WORK_TCPIP_ERROR_NUMBER\n         CVD   R1,WORK_DWORD\n         ED    PR_LINE+(MSG90_ERROR_NUMBER-MSG90)(L'MSG90_ERROR_NUMBER)+\n               ,WORK_DWORD+5\n         BAL   R9,PRT0000\n         BR    R10\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         PUT   WORK_SYSPRINT,PR_CC\n         MVI   PR_CC,C' '\n         MVC   PR_LINE,PR_CC\n         BR    R9\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ICM   R1,15,WORK_TCPIP_GWA\n         BZ    EXIT0010\n         FREEMAIN RU,A=(1),LV=GWALENTH\nEXIT0010 DS    0H\n         CLOSE WORK_SYSIN,                                             +\n               MF=(E,WORK_OCPL),                                       +\n               MODE=31\n         CLOSE WORK_SYSPRINT,                                          +\n               MF=(E,WORK_OCPL),                                       +\n               MODE=31\n         LR    R1,R13                COPY SAVE AREA ADDRESS\n         L     R13,4(R13)            CALLER'S SAVE AREA ADDRESS\n         FREEMAIN RU,A=(1),LV=WORKL  FREE WORK AREA\n         LM    R14,R12,12(R13)\n         SR    R15,R15               ALWAYS A GOOD RETURN CODE\n         BR    R14                   RETURN TO CALLER\n\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nOCPLI     OPEN (*,INPUT),MF=L,MODE=31\nOCPLL     EQU *-OCPLI\nSYSINI    DCB  DSORG=PS,                                               +\n               DDNAME=SYSIN,                                           +\n               RECFM=FB,                                               +\n               LRECL=80,                                               +\n               DCBE=SYSIN_DCBE,                                        +\n               MACRF=GM\nSYSINL    EQU  *-SYSINI\nSYSIN_DCBE DCBE EODAD=EOF0000\nSYSPRINTI DCB  DSORG=PS,                                               +\n               DDNAME=SYSPRINT,                                        +\n               RECFM=FBA,                                              +\n               LRECL=133,                                              +\n               MACRF=PM\nSYSPRINTL EQU  *-SYSPRINTI\n\nH32                      DC    H'32'\nH80                      DC    H'80'\nP0                       DC    P'0'\nP1                       DC    P'1'\nRECV_BUFFER_SIZE         DC    F'32768'\n\nHEXCHAR                  EQU   *-C'0'\n                         DC    C'0123456789ABCDEF'\n\nC_HTTPTEST               DC    CL8'HTTPTEST'\nC_AF_INET                DC    X'0002'\n\nMSG01                    DS    0C\n                         DC    CL15'HTTPTEST01I'\n                         DC    C'Control statement: '\nMSG01_CARD               DC    CL80' '\nMSG01L                   EQU   *-MSG01\nMSG02                    DS    0C\n                         DC    CL15'HTTPTEST02I'\n                         DC    C'URL sent: '\nMSG02_URL                DC    CL80' '\nMSG02L                   EQU   *-MSG02\nMSG03                    DS    0C\n                         DC    CL15'HTTPTEST03I'\n                         DC    C'Received buffer number '\nMSG03_BUFFER_NUMBER      DC    X'40202120'\n                         DC    C'  bytes received '\nMSG03_BYTES_RECEIVED     DC    X'4020206B202120'\n                         DC    C' (hex '\nMSG03_BYTES_HEX          DC    CL8' '\n                         DC    C')'\nMSG03L                   EQU   *-MSG03\nMSG04                    DS    0C\n                         DC    CL16' '\nMSG04_DISPLACEMENT       DC    CL8' '\n                         DC    CL3' '\nMSG04_CHAR               DC    CL32' '\n                         DC    CL3' '\nMSG04_HEX                DC    CL64' '\nMSG04L                   EQU   *-MSG04\nMSG90                    DS    0C\n                         DC    CL15'HTTPTEST90I'\n                         DC    C'TCP/IP function '\nMSG90_FUNCTION           DC    CL16' '\n                         DC    C'  Return code: '\nMSG90_RETURN_CODE        DC    CL8' '\n                         DC    C'  Error number:'\nMSG90_ERROR_NUMBER       DC    X'402020202120'\nMSG90_L                  EQU   *-MSG90\n\nBLANKS                   DC    CL256' '\nEBCDIC_TO_ASCII          ETOA\nASCII_TO_EBCDIC          ATOE\n\nPRINTABLE                DC    XL16'40404040404040404040404040404040'\n                         DC    XL16'40404040404040404040404040404040'\n                         DC    XL16'40404040404040404040404040404040'\n                         DC    XL16'40404040404040404040404040404040'\n                         DC    XL16'404040404040404040404A4B4C4D4E4F'\n                         DC    XL16'504040404040404040405A5B5C5D5E5F'\n                         DC    XL16'60614040404040404040406B6C6D6E6F'\n                         DC    XL16'404040404040404040407A7B7C7D7E7F'\n                         DC    XL16'40818283848586878889408B8C8D8E8F'\n                         DC    XL16'40919293949596979899409B9C9D9E9F'\n                         DC    XL16'4040A2A3A4A5A6A7A8A940ABACADAEAF'\n                         DC    XL16'4040404040404040404040BBBCBDBEBF'\n                         DC    XL16'40C1C2C3C4C5C6C7C8C9404040404040'\n                         DC    XL16'40D1D2D3D4D5D6D7D8D9404040404040'\n                         DC    XL16'4040E2E3E4E5E6E7E8E9404040404040'\n                         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'\n\n                         LTORG\n* ------------------------------------------------------------------- *\n*              WORK AREA                                              *\n* ------------------------------------------------------------------- *\nWORKAREA                 DSECT\n                         DS   18F\nWORK_DWORD               DS   D\nWORK_MAX_SOCKET          DS   F\nWORK_BUFFER_LENGTH       DS   F\nWORK_URL_LENGTH          DS   F\nWORK_URL_DATA_ADDRESS    DS   A\nWORK_RECV_BUFFER_SIZE    DS   F\n\nWORK_PORT                DS   H\nWORK_OUR_PORT            DS   H\nWORK_SOCKET_DESCRIPTOR   DS   H\n\nWORK_HOSTNAME_LENGTH     DS   F\n\nWORK_HOSTENT             DS   A\n\n                         DS   0F\nWORK_SOCKET_STRUCTURE    DS   0XL16\nWORK_SOCKET_FAMILY       DS   AL2           FAMILY (ALWAYS = 2)\nWORK_SOCKET_PORT         DS   XL2           PORT NUMBER\nWORK_SOCKET_CLIENT_IP    DS   XL4           CLIENT'S IP ADDRESS\n                         DS   XL8           RESERVED\n\n                         CLIENT PREFIX=WORK\nWORK_CLIENTL             EQU  *-WORK_CLIENT\n\nWORK_OCPL                DS   0F,(OCPLL)X\nWORK_SYSIN               DS   0F,(SYSINL)X\nWORK_SYSPRINT            DS   0F,(SYSPRINTL)X\n\nWORK_TCPIP_ERROR_NUMBER  DS   F\nWORK_TCPIP_FUNCTION      DS   CL16\nWORK_TCPIP_GWA           DS   F\nWORK_TCPIP_RETURN_CODE   DS   F\n\nWORK_PEER                DS   0F,0XL16\nWORK_PEER_AF             DS   XL2\nWORK_PEER_PORT           DS   XL2\nWORK_PEER_IP_ADDRESS     DS   F\nWORK_PEER_RESERVED       DS   XL8\n\nWORK_CARD                DS   CL80\n\nWORK_PACK_IN             DS   CL5\n\nWORK_URL                 DS   0CL84\nWORK_URL_METHOD          DS   CL4\n                         DS   C\nWORK_URL_DATA            DS   CL80\n\nWORK_BUFFER_NUMBER       DS   PL2\n\nWORK_UNPACK              DS   CL65\n\nPR_CC                    DS   C\nPR_LINE                  DS   CL132\n\nWORK_TCPIP_TASK          EZASMI TYPE=TASK,STORAGE=CSECT\n\nWORK_RECV_BUFFER         DS   32768X\n\nWORKL                    EQU  *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHOSTENT                  DSECT\nHOSTENT_HOSTNAME_ADDRESS DS  A\nHOSTENT_ALIAS_LIST       DS  A\nHOSTENT_FAMILY           DS  XL4\nHOSTENT_IP_LIST_LENGTH   DS  XL4\nHOSTENT_IP_LIST          DS  A\n* ------------------------------------------------------------------- *\n*              TCP/IP GLOBAL WORK AREA                                *\n* ------------------------------------------------------------------- *\n         EZASMI TYPE=GLOBAL,STORAGE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY   REGEQU\n         END    HTTPTEST\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPURL": {"ttr": 5897, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01@\\x00)\\x01\\x07!/\\x01\\x072O\\x08\\x15\\x02[\\x00\\xfb\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.64", "flags": 0, "createdate": "2007-07-31T00:00:00", "modifydate": "2007-11-20T08:15:29", "lines": 603, "newlines": 251, "modlines": 0, "user": "RLRICE"}, "text": "*---------------------------------------------------------------------*\n*                                                                     *\n*  Module name: HTTPURL                                               *\n*                                                                     *\n*   This subtask manages the URL data space                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPURL  CSECT\nHTTPURL  AMODE 31\nHTTPURL  RMODE ANY\n         USING HTTPURL,R12                    DEFINE BASE\n         USING HTTPCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                CHAIN REGISTERS\n         LR    R12,R15                        COPY ENTRY POINT ADDRESS\n         B     INIT0000\n         DC    CL8'HTTPURL'\n         DC    CL8'&SYSDATE'\n         DC    CL6'&SYSTIME'\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*            Initialization                                           *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nINIT0000 DS    0H\n         L     R11,0(R1)                      HTTPCOMM'S ADDRESS\n         GETMAIN RU,                          STORAGE FOR WORK AREA    +\n               LV=WORK_AREA_LENGTH,                                    +\n               LOC=ANY\n         ST    R13,4(R1)                      CHAIN PREVIOUS AREA\n         ST    R1,8(R13)                      CHAIN OUR AREA\n         LR    R13,R1                         COPY WORK AREA ADDRESS\n         USING WORKAREA,R13\n         ITRACE ID=INIT\n         ST    R12,COMM_HTTPURL_ADDRESS\n         ST    R13,COMM_URL_WORK_AREA\n*---------------------------------------------------------------------*\n*            Create the URL data space                                *\n*---------------------------------------------------------------------*\n         ITRACE ID=DSPSERV\n         MVC   WORK_DSPSERV(DSPSERV_L),DSPSERV_I\n         MVC   WORK_ALESERV(ALESERV_L),ALESERV_I\n         DSPSERV CREATE,                      CREATE A DATASPACE       +\n               NAME=URL_SPACE_NAME,           .. DATASPACE'S NAME      +\n               STOKEN=COMM_URL_SPACE_TOKEN,   .. RETURNED TOKEN        +\n               SCOPE=SINGLE,                  .. FOR OUR EYS ONLY      +\n               TYPE=BASIC,                    .. NOT HIPERSPACE        +\n               BLOCKS=0,                      .. SIZE IN 4K BLOCKS     +\n               MF=(E,WORK_DSPSERV)\n         STH   R15,WORK_RC                    SAVE RETURN CODE\n         OC    WORK_RC,WORK_RC                SUCESSFUL?\n         BNZ   ERR0010                        NO\n         ITRACE ID=ALESERV\n         ALESERV ADD,                         ADD TO ACCESS LIST       +\n               STOKEN=COMM_URL_SPACE_TOKEN,                            +\n               ALET=COMM_URL_SPACE_ALET,                               +\n               MF=(E,WORK_ALESERV)\n         STH   R15,WORK_RC                    SAVE RETURN CODE\n         OC    WORK_RC,WORK_RC                SUCESSFUL?\n         BNZ   ERR0020                        NO\n         ITRACE ID=ALEOK,                                              +\n               DATA1=(COMM_URL_SPACE_TOKEN,8),                         +\n               DATA2=(COMM_URL_SPACE_ALET,4)\n         MVI   PRT_COMMAND,$PRT_PRINT\n         XC    PRT_NEXT,PRT_NEXT\n         MVI   PRT_CC,C' '\n         MVC   PRT_MESSAGE_ID(L'PRT_MESSAGE_ID+L'PRT_DATA),PRT_CC\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*            Main processing                                          *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nURL0010  DS    0H\n         TM    COMM_EOJ,$EOJ_PHASE_1          SHUTDOWN PHASE 1?\n         BO    EXIT0000                       YES.. IT'S MILLER TIME\n         TM    COMM_URL_WORK_ECB,X'40'        ECB ALREADY POSTED?\n         BO    URL0020                        GET BUSY\n         ITRACE ID=WORKWAIT,                  WAITING FOR WORK         +\n               RDATA1=R1                      .. ECB'S ADDRESS\n         WAIT  ECB=COMM_URL_WORK_ECB          WAIT FOR WORK TO DO ECB\nURL0020  DS    0H\n         ITRACE ID=WOKEUP\n         XC    COMM_URL_WORK_ECB,COMM_URL_WORK_ECB\nURL0030  DS    0H\n         SR    R1,R1                          CLEAR REGISTER\n         L     R4,COMM_URL_QUEUE\n         CS    R4,R1,COMM_URL_QUEUE\n         BC    4,URL0030\n         USING WEBURL,R10                     DEFINE BASE\n         USING URL,WEBURL_URL                 DEFINE BASE\n         ITRACE ID=HAVEQ,                     WE HAVE THE QUEUE        +\n               RDATA1=R4                      .. LAST QUEUE BLOCK\n         LTR   R3,R4                          COPY ADDRESS\n         BZ    URL0010\n         LA    R1,4                           INITIALIZE GETMAIN LENGTH\nURL0050  DS    0H\n         ITRACE ID=VEC1,                                               +\n               RDATA1=R3,                                              +\n               RDATA2=R1\n         ICM   R3,15,WEBURL_NEXT-WEBURL(R3)\n         BZ    URL0060                        NEXT BLOCK'S ADDRESS\n         LA    R1,4(R1)                       ADD TO VECTOR LENGTH\n         B     URL0050                        LOOP\nURL0060  DS    0H\n         ITRACE ID=GETVEC,                                             +\n               RDATA1=R1,                     .. SIZE OF VECTOR LIST   +\n               RDATA2=R4                      .. 1ST TO GO ON CHAIN\n         ST    R1,WORK_VECTOR_SIZE            SAVE VECTOR SIZE\n         GETMAIN RU,                          GETMAIN STORAGE          +\n               LV=(1),                                                 +\n               LOC=ANY\n         ST    R1,WORK_VECTOR_ADDRESS         SAVE VECTOR ADDRESS\n         ITRACE ID=VECADDR,                                            +\n               RDATA1=R1,                     .. VECTOR ADDRESS        +\n               RDATA2=R4                      .. 1ST TO GO ON CHAIN\nURL0070  DS    0H\n         ITRACE ID=BLDVEC,                                             +\n               RDATA1=R1,                     .. CURRENT IN VECTOR     +\n               RDATA2=R4                      .. WEBURL'S ADDRESS\n         ST    R4,0(R1)                       SET ADDRESS\n         ST    R1,WORK_VECTOR_CURRENT\n         LA    R1,4(R1)                       NEXT\n         ICM   R4,15,WEBURL_NEXT-WEBURL(R4)\n         BNZ   URL0070\n*---------------------------------------------------------------------*\n*       Process work on queue                                         *\n*---------------------------------------------------------------------*\nURL0080  DS    0H\n         L     R1,WORK_VECTOR_CURRENT\n         L     R10,0(R1)                      WEBURL'S ADDRESS\n         ITRACE ID=URL,                                                +\n               RDATA1=R1,                                              +\n               RDATA2=R10\n         CLI   WEBURL_STATUS,$URL_DEFINE_SPECIFIC\n         BE    URL0100                        YES\n         CLI   WEBURL_STATUS,$URL_DEFINE_PREFIX\n         BE    URL0100                        YES\n         CLI   WEBURL_STATUS,$URL_DELETE      DELETE URL(S)?\n         BE    URL0300                        YES\n         CLI   WEBURL_STATUS,$URL_LOOKUP      LOOKUP URL?\n         BE    URL0200                        YES\n         CLI   WEBURL_STATUS,$URL_SNAP        SNAP DUMP?\n         BE    URL0500                        YES\n         DC    H'0'\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nURL0100  DS    0H\n         ITRACE ID=DEF_URL,                                            +\n               DATA1=(URL_LENGTH,4),                                   +\n               DATA2=(URL_TEXT,8)\n         SR    R7,R7                          START AT ZERO\n         LAM   R7,R7,COMM_URL_SPACE_ALET      ALET FOR DATA SPACE\n         SAC   512                            TURN ON AR MODE\n         SR    R1,R1\n         ICM   R6,15,COMM_NBR_URLS            NBR OF ACTIVE URLS\n         BZ    URL0120                        NO ACTIVE URLS\nURL0110  DS    0H\n         USING DATASPACE,R7\n         ICM   R1,3,DATASPACE_LENGTH          URL TEXT LENGTH\n         LA    R7,DATASPACE_L(R1,R7)          NEXT URL\n         BCT   R6,URL0110                     LOOP\nURL0120  DS    0H\n         MVC   DATASPACE_SERVBLOK,WEBURL_SERVBLOK\n         ICM   R1,3,URL_LENGTH                URL TEXT LENGTH\n         STCM  R1,3,DATASPACE_LENGTH          SET LENGTH\n         LA    R0,URL_TEXT                    TEXT IN REQ BLOCK\n         LA    R14,DATASPACE_TEXT             TEXT IN DATA SPACE\n         LR    R15,R1                         COPY LENGTH\n         LAM   R14,R14,COMM_URL_SPACE_ALET\n         MVCL  R14,R0                         COPY TO DATA SPACE\n         LAM   R14,R14,F0\n         CLI   WEBURL_STATUS,$URL_DEFINE_SPECIFIC\n         BE    URL0130\n         MVI   DATASPACE_URL_TYPE,$URL_PREFIX SET URL TYPE\n         B     URL0140\nURL0130  DS    0H\n         MVI   DATASPACE_URL_TYPE,$URL_SPECIFIC\nURL0140  DS    0H\n         LAM   R7,R7,F0\n         SAC   0\n         LA    R0,1\n         A     R0,COMM_NBR_URLS               PLUS NBR OF URLS\n         ST    R0,COMM_NBR_URLS               UPDATE\n         MVC   PRT_MESSAGE_ID(MSG03_L),MSG03\n         UNPK  PRT_MESSAGE_ID+(MSG03_SERVBLOK-MSG03)(9),WEBURL_SERVBLOK+\n               (5)\n         TR    PRT_MESSAGE_ID+(MSG03_SERVBLOK-MSG03)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG03_SERVBLOK-MSG03)+8,C' '\n         ICM   R15,15,WEBURL_SERVBLOK\n         USING SERVBLOK,R15\n         BM    URL0150\n         MVC   PRT_MESSAGE_ID+(MSG03_NAME-MSG03)(L'MSG03_NAME),PARTNER_+\n               CLIENT_NAME\n         MVC   PRT_MESSAGE_ID+(MSG03_TASK-MSG03)(L'MSG03_TASK),PARTNER_+\n               CLIENT_TASK\n         B     URL0160\nURL0150  DS    0H\n         MVC   PRT_MESSAGE_ID+(MSG03_NAME-MSG03)(L'MSG03_NAME),LOCAL\nURL0160  DS    0H\n         SR    R1,R1\n         ICM   R1,3,URL_LENGTH\n         CVD   R1,WORK_DWORD\n         ED    PRT_MESSAGE_ID+(MSG03_LENGTH-MSG03)(L'MSG03_LENGTH),WORK+\n               _DWORD+6\n         CH    R1,=Y(L'MSG03_TEXT)\n         BNH   URL0170\n         LH    R1,=Y(L'MSG03_TEXT)\nURL0170  DS    0H\n         BCTR  R1,0\n         EX    R1,MVC01\n         BAL   R9,PRT0000\n         B     URL1000\nMVC01    MVC   PRT_MESSAGE_ID+(MSG03_TEXT-MSG03)(0),URL_TEXT\n*---------------------------------------------------------------------*\n*        Look-up a URL (Determine server task)                        *\n*---------------------------------------------------------------------*\nURL0200  DS    0H\n         ITRACE ID=LOOKUP\n         SR    R6,R6\n         ICM   R6,15,COMM_NBR_URLS            NBR OF URLS\n         BZ    URL0250                        NO URLS\n         SR    R7,R7                          URLS START AT ZERO\n         LAM   R7,R7,COMM_URL_SPACE_ALET      SET AR\n         SAC   512                            TURN ON AR MODE\nURL0210  DS    0H\n         SR    R1,R1\n         ICM   R1,3,URL_LENGTH                URL TEXT LENGTH\n         CLI   DATASPACE_URL_TYPE,$URL_SPECIFIC\n         BE    URL0230                        LOCATE SPECIFIC URL\nURL0220  DS    0H\n         CLM   R1,3,DATASPACE_LENGTH          COMPARE LENGTHS\n         BL    URL0240                        SHORTER..\n         ICM   R1,3,DATASPACE_LENGTH          USE STASHED LENGTH\n         LA    R0,URL_TEXT                    TEXT FROM URL\n         LA    R14,DATASPACE_TEXT             TEXT IN DATA SPACE\n         LR    R15,R1                         COPY LENGTH\n         LAM   R14,R14,COMM_URL_SPACE_ALET    SET AR\n         CLCL  R0,R14                         COMPARE URLS\n         BE    URL0260\n         B     URL0240\nURL0230  DS    0H\n         CLM   R1,3,DATASPACE_LENGTH          COMPARE LENGTHS\n         BNE   URL0240                        NOT EQUAL\n         LA    R0,URL_TEXT                    TEXT IN URL\n         LA    R14,DATASPACE_TEXT             TEXT IN DATA SPACE\n         LR    R15,R1                         COPY TO LENGTH 2\n         LAM   R14,R14,COMM_URL_SPACE_ALET    SET AR\n         CLCL  R0,R14                         COMPARE URLS\n         BE    URL0260                        FOUND THE URL\nURL0240  DS    0H\n         LAM   R14,R14,F0                     RESET AR\n         ICM   R1,3,DATASPACE_LENGTH          URL TEXT LENGTH\n         LA    R7,DATASPACE_L(R1,R7)          NEXT URL\n         BCT   R6,URL0210                     LOOP\nURL0250  DS    0H\n         SAC   0\n         LAM   R7,R7,F0\n         ITRACE ID=NOT_FND\n         XC    WEBURL_SERVBLOK,WEBURL_SERVBLOK   URL NOT LOCATED\n         B     URL1000\nURL0260  DS    0H\n         MVC   WEBURL_SERVBLOK,DATASPACE_SERVBLOK\n         SAC   0\n         LAM   R7,R7,F0\n         LAM   R14,R14,F0\n         ITRACE ID=FND_SERV,                                           +\n               DATA1=(WEBURL_SERVBLOK,4)\n         B     URL1000\n*---------------------------------------------------------------------*\n*        Delete URLs for a server                                     *\n*---------------------------------------------------------------------*\nURL0300  DS    0H\n         ITRACE ID=DELETE,                                             +\n               DATA1=WEBURL_SERVBLOK\n         SR    R2,R2                          CLEAR R2\n         SR    R4,R4                          CLEAR R4\n         ICM   R6,15,COMM_NBR_URLS            NBR OF URLS NOW\n         BZ    URL0390\n         XC    COMM_NBR_URLS,COMM_NBR_URLS    RESET NBR OF URLS\n         LAM   R2,R2,COMM_URL_SPACE_ALET\n         LAM   R4,R4,COMM_URL_SPACE_ALET\n         SAC   512                            TURN ON AR MODE\nOLD      USING DATASPACE,R2\nNEW      USING DATASPACE,R4\nURL0310  DS    0H\n         SR    R3,R3\n         ICM   R3,3,OLD.DATASPACE_LENGTH      LENGTH OF THE URL TEXT\n         LA    R3,DATASPACE_L(,R3)            LENGTH OF URL BLOCK\n         CLC   OLD.DATASPACE_SERVBLOK,WEBURL_SERVBLOK\n         BE    URL0330                        YES.. DON'T COPY THIS URL\n         LA    R0,1\n         A     R0,COMM_NBR_URLS               PLUS NBR OF URLS\n         ST    R0,COMM_NBR_URLS               SAVE TOTAL\n         CR    R2,R4                          AT SAME ADDRESS?\n         BE    URL0320                        SKIP THE MVCL\n         LR    R5,R3                          COPY LENGTH\n         MVCL  R4,R2                          COPY URL\n         B     URL0370\nURL0320  DS    0H\n         AR    R4,R3                          NEXT URL\n         B     URL0370\nURL0330  DS    0H\n         MVC   PRT_MESSAGE_ID(MSG04_L),MSG04\n         UNPK  PRT_MESSAGE_ID+(MSG04_SERVBLOK-MSG04)(9),WEBURL_SERVBLOK+\n               (5)\n         TR    PRT_MESSAGE_ID+(MSG04_SERVBLOK-MSG04)(8),HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG04_SERVBLOK-MSG04)+8,C' '\n         ICM   R15,15,OLD.DATASPACE_SERVBLOK\n         BM    URL0340\n         MVC   PRT_MESSAGE_ID+(MSG04_NAME-MSG04)(L'MSG04_NAME),PARTNER_+\n               CLIENT_NAME\n         MVC   PRT_MESSAGE_ID+(MSG04_TASK-MSG04)(L'MSG04_TASK),PARTNER_+\n               CLIENT_TASK\n         B     URL0350\nURL0340  DS    0H\n         MVC   PRT_MESSAGE_ID+(MSG04_NAME-MSG04)(L'MSG04_NAME),LOCAL\nURL0350  DS    0H\n         SR    R14,R14\n         ICM   R14,3,OLD.DATASPACE_LENGTH\n         CVD   R14,WORK_DWORD\n         ED    PRT_MESSAGE_ID+(MSG04_LENGTH-MSG04)(L'MSG04_LENGTH),WORK+\n               _DWORD+6\n         CH    R14,=Y(L'MSG04_TEXT)\n         BNH   URL0360\n         LH    R14,=Y(L'MSG04_TEXT)\nURL0360  DS    0H\n         BCTR  R14,0\n         EX    R14,MVC02\n         LAM   R2,R2,F0\n         LAM   R4,R4,F0\n         SAC   0\n         BAL   R9,PRT0000\n         LAM   R2,R2,COMM_URL_SPACE_ALET\n         LAM   R4,R4,COMM_URL_SPACE_ALET\n         SAC   512\nURL0370  DS    0H\n         AR    R2,R3                          NEXT URL\nURL0380  DS    0H\n         BCT   R6,URL0310                     LOOP\n         SAC   0\n         LAM   R2,R2,F0\n         LAM   R4,R4,F0\nURL0390  DS    0H\n         ITRACE ID=ACTIVE,                                             +\n               DATA1=(COMM_NBR_URLS,4)\n         B     URL1000\nMVC02    MVC   PRT_MESSAGE_ID+(MSG04_TEXT-MSG04)(0),OLD.DATASPACE_TEXT\n*---------------------------------------------------------------------*\n*        The address of the DCB is passed in WEBURL_SERVBLOK          *\n*---------------------------------------------------------------------*\nURL0500  DS    0H\n         ITRACE ID=DUMP\n         L     R5,WEBURL_SERVBLOK             DCB ADDRESS\n         ICM   R6,15,COMM_NBR_URLS            NBR OF URLS\n         BZ    URL0550\n         SR    R7,R7\n         LAM   R7,R7,COMM_URL_SPACE_ALET\nURL0510  DS    0H\n         ITRACE ID=DUMP_URL,                                           +\n               RDATA1=R7,                                              +\n               RDATA2=R6\n         MVI   WORK_CC,C' '                   INITIALIZE CC\n         MVC   WORK_PRINT_DATA,WORK_CC        INITALIZE PRINT I/O\n         MVC   WORK_PRINT_DATA(MSG01_L),MSG01\n         SAC   512\n         UNPK  WORK_PRINT_DATA+(MSG01_SERVBLOK-MSG01)(9),DATASPACE_SERV+\n               BLOK(5)\n         TR    WORK_PRINT_DATA+(MSG01_SERVBLOK-MSG01)(8),HEXCHAR\n         MVI   WORK_PRINT_DATA+(MSG01_SERVBLOK-MSG01)+8,C' '\n         CLI   DATASPACE_URL_TYPE,$URL_SPECIFIC\n         BE    URL0520\n         MVI   WORK_PRINT_DATA+(MSG01_TYPE-MSG01),C'P'\n         B     URL0530\nURL0520  DS    0H\n         MVI   WORK_PRINT_DATA+(MSG01_TYPE-MSG01),C'S'\nURL0530  DS    0H\n         SR    R2,R2\n         ICM   R2,3,DATASPACE_LENGTH          URL LENGTH\n         CVD   R2,WORK_DWORD                  CONVERT TO DECIMAL\n         ED    WORK_PRINT_DATA+(MSG01_LENGTH-MSG01)(L'MSG01_LENGTH),WOR+\n               K_DWORD+6\n         CH    R2,=Y(L'WORK_PRINT_DATA)\n         BNH   URL0540\n         LH    R2,=Y(L'WORK_PRINT_DATA)\nURL0540  DS    0H\n         BCTR  R2,0\n         EX    R2,URL_MVC                     COPY TEXT\n         SAC   0\n         PUT   (R5),WORK_CC\n         LA    R7,DATASPACE_L+1(R2,R7)        NEXT URL\n         BCT   R6,URL0510                     LOOP\n         LAM   R7,R7,F0\n         B     URL1000\nURL_MVC  MVC   WORK_PRINT_DATA+(MSG01_TEXT-MSG01)(0),DATASPACE_TEXT\nURL0550  DS    0H\n         MVI   WORK_CC,C' '                   INITIALIZE CC\n         MVC   WORK_PRINT_DATA,WORK_CC        INITALIZE PRINT I/O\n         MVC   WORK_PRINT_DATA(MSG02_L),MSG02\n         PUT   (R5),WORK_CC\n*---------------------------------------------------------------------*\n*                                                                     *\n*---------------------------------------------------------------------*\nURL1000  DS    0H\n         LA    R2,WEBURL_ECB\n         ITRACE ID=POSTECB,                                            +\n               RDATA1=R2,                                              +\n               DATA2=(0(R2),8)\n         POST  WEBURL_ECB\n         L     R1,WORK_VECTOR_CURRENT         CURRENT IN VECTOR\n         C     R1,WORK_VECTOR_ADDRESS         AT FIRST ENTRY?\n         BE    URL1010                        YES\n         SH    R1,H4                          BACK UP 1 ENTRY\n         ST    R1,WORK_VECTOR_CURRENT         SAVE CURRENT ADDRESS\n         B     URL0080                        PROCESS THIS WEBURL\nURL1010  DS    0H\n         L     R0,WORK_VECTOR_SIZE            VECTOR SIZE\n         ITRACE ID=FREEVEC,                                            +\n               RDATA1=R1,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                         FREE THE VECTOR          +\n               A=(1),                                                  +\n               LV=(0)\n         B     URL0030\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         ITRACE ID=PRINT,RDATA1=R10\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE\n         ST    R14,PRT_NEXT-PRTBLOK(R1)                       '\n         CS    R14,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         ITRACE ID=POST_PRT\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         MVC   PRT_MESSAGE_ID(L'PRT_MESSAGE_ID+L'PRT_DATA),PRT_CC\n         BR    R9\n*---------------------------------------------------------------------*\n*                                                                     *\n*                                                                     *\n*            Termination/clean-up                                     *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\nEXIT0000 DS    0H\n         ITRACE ID=DEL_ALET,                                           +\n               DATA1=(COMM_URL_SPACE_ALET,4)\n         ALESERV DELETE, ,                                             +\n               ALET=COMM_URL_SPACE_ALET,                               +\n               MF=(E,WORK_ALESERV)\n         ITRACE ID=ALE_RC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0030                        NO\n         ITRACE ID=DEL_SPAC,                                           +\n               DATA1=(COMM_URL_SPACE_TOKEN,8)\n         DSPSERV DELETE,                                               +\n               STOKEN=COMM_URL_SPACE_TOKEN,                            +\n               MF=(E,WORK_DSPSERV)\n         ITRACE ID=DSP_RC,                                             +\n               RDATA1=R15\n         LTR   R15,R15                        SUCCESSFUL?\n         BNZ   ERR0040                        NO\n         LR    R1,R13                         COPY WORK AREA ADDRESS\n         L     R13,4(R13)                     RESTORE REGISTER 13       ASE01670\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORK_AREA_LENGTH\n         LM    R14,R12,12(R13)                RESTORE REGISTERS         ASE01680\n         SR    R15,R15                        RETURN CODE               ASE01690\n         BR    R14                            RETURN TO CALLER          ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'0'\nERR0020  DS    0H\n         DC    H'0'\nERR0030  DS    0H\n         DC    H'0'\nERR0040  DS    0H\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nF0             DC    F'0'\nH4             DC    H'4'\nDSPSERV_I      DSPSERV MF=(L,DSP)\nDSPSERV_L      EQU   *-DSPSERV_I\nALESERV_I      ALESERV MF=L\nALESERV_L      EQU   *-ALESERV_I\nURL_SPACE_NAME DC    CL8'HTTPURL'\nLOCAL          DC    CL8'LOCAL'\n\nHEXCHAR        EQU   *-C'0'\n               DC    C'0123456789ABCDEF'\n\nMSG01          DS    0C\n               DC    C'SERVBLOK: '\nMSG01_SERVBLOK DC    CL8' '\n               DC    CL3' '\n               DC    C'URL type: '\nMSG01_TYPE     DC    C' '\n               DC    C'   Length'\nMSG01_LENGTH   DC    X'40202120'\n               DC    C' '\nMSG01_TEXT     DC    CL100' '\nMSG01_L        EQU   *-MSG01\n\nMSG02          DC    C'NO URLS'\nMSG02_L        EQU   *-MSG02\n\nMSG03          DS    0C\n               DC    CL15'HTTPURL03I'\n               DC    C'URL registered for '\nMSG03_SERVBLOK DC    CL8' '\n               DC    C' '\nMSG03_NAME     DC    CL8' '\n               DC    C' '\nMSG03_TASK     DC    CL8' '\n               DC    C' '\nMSG03_LENGTH   DC    X'40202120'\n               DC    C' '\nMSG03_TEXT     DC    CL50' '\nMSG03_L        EQU   *-MSG03\n\nMSG04          DS    0C\n               DC    CL15'HTTPURL04I'\n               DC    C'URL deleted for '\nMSG04_SERVBLOK DC    CL8' '\n               DC    C' '\nMSG04_NAME     DC    CL8' '\n               DC    C' '\nMSG04_TASK     DC    CL8' '\n               DC    C' '\nMSG04_LENGTH   DC    X'40202120'\n               DC    C' '\nMSG04_TEXT     DC    CL50' '\nMSG04_L        EQU   *-MSG04\n\n               LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        WORK AREAS                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA              DSECT\n                      STDSAVE DSECT=NO\nWORK_DWORD            DS  D\nWORK_VECTOR_SIZE      DS  F          ADDRESS VECTOR SIZE\nWORK_VECTOR_ADDRESS   DS  A          ADDRESS OF ADDRESS VECTOR\nWORK_VECTOR_CURRENT   DS  A          CURRENT ADDRESS IN ADDRESS VECTOR\nWORK_DSPSERV          DS  0F,(DSPSERV_L)X\nWORK_ALESERV          DS  0F,(ALESERV_L)X\nWORK_RC               DS  H\n\nWORK_CC               DS  C\nWORK_PRINT_DATA       DS  CL132\n\n                      PRTBLOK        DSECT=NO\nWORK_AREA_LENGTH      EQU *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nDATASPACE             DSECT\nDATASPACE_SERVBLOK    DS   XL4\nDATASPACE_URL_TYPE    DS   X\n$URL_SPECIFIC         EQU  X'01'\n$URL_PREFIX           EQU  X'02'\nDATASPACE_LENGTH      DS   XL2\nDATASPACE_TEXT        DS   0C\nDATASPACE_L           EQU  *-DATASPACE\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      COMMON    MAIN,TYPE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      WEBURL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      URL\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                      SERVBLOK  DSECT=YES\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  HTTPURL\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "HTTPWEB": {"ttr": 6154, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01W\\x00R\\x01\\x07\\x17o\\x01\\x08\\x16?\\x10Y\\x04\\x17\\x04\\x1b\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.87", "flags": 0, "createdate": "2007-06-25T00:00:00", "modifydate": "2008-06-11T10:59:52", "lines": 1047, "newlines": 1051, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*    TCP/IP subtask                                                   *\n*                                                                     *\n*   This subtask performs the TCP/IP functions for the 'web' port.    *\n*                                                                     *\n*   After HTTPINIT has called HTTPPARM, it verifies there were no     *\n*   errors.  It then ATTACHes several subtasks including this one.    *\n*   One of the parameters is the TCP/IP port number we are to use.    *\n*                                                                     *\n*   At start-up this subtask                                          *\n*      1) initializes the TCP/IP environment                          *\n*      3) obtains its own CLIENTID                                    *\n*      4) creates a socket                                            *\n*      5) BINDs to the port given on the WEBPORT parameter statement  *\n*      6) issues a LISTEN                                             *\n*      7) Issue an ACCEPT to get the socket for this connection       *\n*                                                                     *\n*                                                                     *\n*   Whenever a web client contacts us                                 *\n*      1) Log this connection                                         *\n*      2) Issue a READ to get whatever the client has sent us.        *\n*           This should be a URL.                                     *\n*      3) Build a WEBURL block                                        *\n*      4) Translate the URL into EBCDIC                               *\n*      5) determine which server will process this URL                *\n*      6) Issue a GIVESOCKET                                          *\n*      7) Add the WEBURL block to the queue of work for the server    *\n*      8) POST the 'work to do' ECB for the server's subtask.         *\n*      9) Check for more work                                         *\n*                                                                     *\n*   When work for a URL has been completed, the server task will      *\n*   put the WEBURL block on the \"work completed\" queue.               *\n*      1) WAIT for the ECB specified on the GIVESOCKET.  This is      *\n*         to make sure the ECB has been POSTed (otherwise TCP/IP      *\n*         could POST the ECB after it is FREEMAINed).                 *\n*      2) CLOSE the SOCKET                                            *\n*      3) FREEMAIN the URL                                            *\n*      4) If there are more completed URLs, go to step 1              *\n*      5) if there are no more URLs, check for other work             *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  *\n*                                                                     *\n*                                                                     *\n*   This is the subtask that BINDs to the PORT specified on the       *\n*   WEBPORT initialization statement and has an ACCEPT pending.       *\n*   In response to our ACCEPT, TCP/IP will create a SOCKET and        *\n*   return the socket descriptor in the last two bytes of RETCODE.    *\n*   Call this descriptor A.  This subtask issues a READ on            *\n*   descriptor A.  This \"reads\" the data (the URL) from the user.     *\n*   A WEBURL block is created and queued to HTTPURL for 'look up'.    *\n*   HTTPURL will search the list of registered URLs to determine      *\n*   which server will process this URL.  When HTTPURL has located     *\n*   the server, it returns the server's SERVBLOK address.  This       *\n*   subtask will issue a GIVESOCKET to the server task and send       *\n*   the info                                                          *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*                                                                     *\n*   When a server space successfully completes the TAKESOCKET, it     *\n*   will send back confirmation that it has the WEBURL and has        *\n*   the socket for communicating with the web client.                 *\n*   This subtask now                                                  *\n*      1) issues a WAIT to complete the GIVESOCKET                    *\n*      2) CLOSEs the SOCKET using the descriptor given to us          *\n*         in response to our ACCEPT call                              *\n*      2) FREEMAINs the WEBURL block                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\nHTTPWEB  CSECT\nHTTPWEB  AMODE 31\nHTTPWEB  RMODE ANY\n         USING HTTPWEB,R12,R10                DEFINE BASE\n         USING HTTPCOMM,R11                   DEFINE BASE\n         STM   R14,R12,12(R13)                SAVE ENTRY REGISTERS\n         LR    R12,R15                        COPY BASE\n         B     INIT0000                       BRANCH AROUND EYECATCHER\nMODID    DC    CL8'HTTPWEB'                   MODULE NAME\n         DC    CL8'&SYSDATE'                  DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'                  TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LA    R10,2048(R12)\n         LA    R10,2048(R10)\n         L     R11,0(R1)                      COPY COMM AREA BASE\n         ST    R12,COMM_HTTPWEB_ADDRESS\n         GETMAIN RU,                          OBTAIN WORK AREA         +\n               LV=WORKL,                                               +\n               LOC=ANY\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1                         SAVE WORK AREA ADDRESS\n         USING WORKAREA,R13                   DEFINE BASE\n         ST    R13,COMM_WEB_WORK_AREA\n         ITRACE ID=INIT\n         MVC   PRT_EYE,C_PRT_ID               IDENTIFY CONTROL BLOCK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\n         MVI   PRT_COMMAND,$PRT_PRINT\n         GETMAIN RU,                                                   +\n               LV=GWALENTH,                                            +\n               LOC=ANY\n         ST    R1,WORK_TCPIP_GWA              TCP/IP GLOBAL WORK AREA\n         LA    R1,COMM_WEB_WORK_ECB\n         ST    R1,WORK_WAIT_ECB_1\n         LA    R1,WORK_TCPIP_ECB\n         ST    R1,WORK_WAIT_ECB_2\n         OI    WORK_WAIT_ECB_2,X'80'\n         LA    R1,WORK_LINK_SAVE              FIRST LINK SAVE AREA\n         ST    R1,WORK_LINK_CURRENT           SET CURRENT ADDRESS\n* ------------------------------------------------------------------- *\n*     Make the INITAPI call                                           *\n* ------------------------------------------------------------------- *\n         ITRACE ID=INITAPI,                                            +\n               DATA1=(C_HTTPWEB,8)\n         MVC   PRT_MESSAGE_ID(MSG01_L),MSG01\n         BAL   R15,PRT0000\n         XC    WORK_TCPIP_TASK(TIELENTH),WORK_TCPIP_TASK\n         MVC   WORK_TCPIP_FUNCTION,=CL16'INITAPI'\n         EZASMI TYPE=INITAPI,                                          +\n               MAXSNO=WORK_MAX_SOCKET,                                 +\n               SUBTASK=C_HTTPWEB,                                      +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ASYNC='ECB',                                            +\n               ERROR=ERR0010,                                          +\n               TASK=WORK_TCPIP_TASK\n         BAL   R15,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*     Get our CLIENTID                                                *\n* ------------------------------------------------------------------- *\n         ITRACE ID=GETID\n         MVC   COMM_HTTPWEB_CLIENT_NAME,COMM_BLANKS\n         MVC   COMM_HTTPWEB_CLIENT_TASK,COMM_BLANKS\n         XC   COMM_HTTPWEB_CLIENT_TASK+8(20),COMM_HTTPWEB_CLIENT_TASK+8\n         MVC   WORK_TCPIP_FUNCTION,=CL16'GETCLIENTID'\n         EZASMI TYPE=GETCLIENTID,                                      +\n               CLIENT=COMM_HTTPWEB_CLIENT,                             +\n               ECB=WORK_TCPIP_ECB,                                     +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n         ITRACE ID=CLIENTID,                                           +\n               DATA1=(COMM_HTTPWEB_CLIENT_NAME,8),                     +\n               DATA2=(COMM_HTTPWEB_CLIENT_TASK,8)\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*     Create the socket                                               *\n* ------------------------------------------------------------------- *\n         MVC   PRT_MESSAGE_ID(MSG02_L),MSG02\n         BAL   R15,PRT0000\n         ITRACE ID=SOCKET\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'SOCKET'\n         EZASMI TYPE=SOCKET,                                           +\n               AF='INET',                                              +\n               SOCTYPE='STREAM',                                       +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R15,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n         MVC   WORK_SOCKET_DESCRIPTOR,WORK_TCPIP_RETURN_CODE+2\n* ------------------------------------------------------------------- *\n*     BIND the socket                                                 *\n* ------------------------------------------------------------------- *\n         MVC   PRT_MESSAGE_ID(MSG03_L),MSG03\n         MVC   PRT_MESSAGE_ID+(MSG03_PORT-MSG03)(L'MSG03_PORT),COMM_WEB+\n               _PORT_CHAR\n         BAL   R15,PRT0000\n         ITRACE ID=BIND\n         XC    WORK_SOCKET_STRUCTURE,WORK_SOCKET_STRUCTURE\n         MVC   WORK_SOCKET_FAMILY,C_AF_INET\n         MVC   WORK_SOCKET_PORT,COMM_WEB_PORT\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'BIND'\n         EZASMI TYPE=BIND,                                             +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               NAME=WORK_SOCKET_STRUCTURE,                             +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R15,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n* ------------------------------------------------------------------- *\n*     Start LISTENing                                                 *\n* ------------------------------------------------------------------- *\n         MVC   PRT_MESSAGE_ID(MSG04_L),MSG04\n         BAL   R15,PRT0000\n         ITRACE ID=LISTEN\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'LISTEN'\n         EZASMI TYPE=LISTEN,                                           +\n               BACKLOG=5,                                              +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R15,INFO0000\n         OC    WORK_TCPIP_RETURN_CODE,WORK_TCPIP_RETURN_CODE\n         BNZ   ERR0020\n         POST  COMM_WEB_INITIALIZED\n* ------------------------------------------------------------------- *\n*                                                                     *\n*     Print \"Accepting LOG ONs\" message                               *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   PRT_MESSAGE_ID(MSG05_L),MSG05\n         BAL   R15,PRT0000\n* ------------------------------------------------------------------- *\n*     Issue ACCEPT                                                    *\n* ------------------------------------------------------------------- *\nMAIN0000 DS    0H\n         TM    COMM_EOJ,$EOJ_PHASE_1\n         BO    TERM0000\n         ITRACE ID=ACCEPT\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'ACCEPT'\n         EZASMI TYPE=ACCEPT,                                           +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               NAME=WORK_SOCKET_STRUCTURE,                             +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB,                                     +\n               TASK=WORK_TCPIP_TASK\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Wait for either a CONNECT or server shutdown                 *\n*        command (entered via the console).                           *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0010 DS    0H\n         ITRACE ID=WAIT\n         WAIT  ECBLIST=WORK_WAIT_LIST\n         ITRACE ID=AWAKE,                                              +\n               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +\n               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)\nMAIN0020 DS    0H\n         ITRACE ID=CHECKEOJ,                                           +\n               DATA1=(COMM_EOJ,1)\n         TM    COMM_EOJ,$EOJ_PHASE_1\n         BO    TERM0000\n         ITRACE ID=CHECKCMP,                                           +\n               DATA1=(COMM_WEB_WORK_ECB,4)\n         TM    COMM_WEB_WORK_ECB,X'40'\n         BO    MAIN2000\n         ITRACE ID=CHECKTCP,                                           +\n               DATA1=(WORK_TCPIP_ECB,4)\n         TM    WORK_TCPIP_ECB,X'40'\n         BNO   MAIN0010\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_NEW_SOCKET,WORK_TCPIP_RETURN_CODE+2\n         ITRACE ID=NEW_SOCK,                                           +\n               DATA1=(WORK_NEW_SOCKET,2)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*              Log the connection                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   PRT_MESSAGE_ID(MSG06_L),MSG06\n         L     R1,COMM_URLS_RECEIVED\n         LA    R1,1(,R1)\n         ST    R1,COMM_URLS_RECEIVED\n         CVD   R1,WORK_DWORD\n         ED    PRT_MESSAGE_ID+(MSG06_ID-MSG06)(L'MSG06_ID),WORK_DWORD+3\n\n         SR    R1,R1\n\n         IC    R1,WORK_SOCKET_CLIENT_IP+0\n         CVD   R1,WORK_DWORD\n         MVC   WORK_PACK_IN,=X'F0212020'\n         ED    WORK_PACK_IN,WORK_DWORD+6\n         MVC   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06+00)(3),WORK_PACK_+\n               IN+1\n\n         IC    R1,WORK_SOCKET_CLIENT_IP+1\n         CVD   R1,WORK_DWORD\n         MVC   WORK_PACK_IN,=X'F0212020'\n         ED    WORK_PACK_IN,WORK_DWORD+6\n         MVC   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06+04)(3),WORK_PACK_+\n               IN+1\n\n         IC    R1,WORK_SOCKET_CLIENT_IP+2\n         CVD   R1,WORK_DWORD\n         MVC   WORK_PACK_IN,=X'F0212020'\n         ED    WORK_PACK_IN,WORK_DWORD+6\n         MVC   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06+08)(3),WORK_PACK_+\n               IN+1\n\n         IC    R1,WORK_SOCKET_CLIENT_IP+3\n         CVD   R1,WORK_DWORD\n         MVC   WORK_PACK_IN,=X'F0212020'\n         ED    WORK_PACK_IN,WORK_DWORD+6\n         MVC   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06+12)(3),WORK_PACK_+\n               IN+1\n         MVI   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06)+03,C'.'\n         MVI   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06)+07,C'.'\n         MVI   PRT_MESSAGE_ID+(MSG06_IP_ADDRESS-MSG06)+11,C'.'\n         BAL   R15,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Issue a TCP/IP READ (get the URL)                            *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         MVC   WORK_TCPIP_FUNCTION,=CL16'READ'\n         ITRACE ID=READ,                                               +\n               DATA1=(WORK_NEW_SOCKET,2)\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=READ,                                             +\n               S=WORK_NEW_SOCKET,                                      +\n               NBYTE==A(URL_BUFFER_SIZE),                              +\n               BUF=WORK_BUFFER,                                        +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         ITRACE ID=READ_RC,                                            +\n               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +\n               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)\n         CLC   X_00000036,WORK_TCPIP_ERROR_NUMBER  CONNECTION RESET?\n         BE    MAIN1050                            YES\n         ICM   R5,15,WORK_TCPIP_RETURN_CODE        LENGTH RECEIVED\n         BM    ERR0020                             ERROR\n* ------------------------------------------------------------------- *\n*                                                                     *\n*              Build WEBURL block                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=NEWURL,                                             +\n               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +\n               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)\n         LA    R0,WEBURLL+URL_PREFIX_L(,R5)\n         GETMAIN RU,                                                   +\n               LV=(0),                              GETMAIN URL        +\n               LOC=ANY\n         LR    R8,R1\n         USING WEBURL,R8\n         USING URL,WEBURL_URL\n         ITRACE ID=NEWWEB,                                             +\n               RDATA1=R8,                                              +\n               RDATA2=R5\n         MVC   WEBURL_EYE,C_WEBURL_ID\n         XC    WEBURL_NEXT,WEBURL_NEXT\n         LA    R0,WEBURLL+URL_PREFIX_L(,R5)\n         ST    R0,WEBURL_LENGTH\n         MVC   WEBURL_SOCKET,WORK_NEW_SOCKET\n         XC    WEBURL_ECB,WEBURL_ECB\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         MVC   WEBURL_ID,COMM_URLS_RECEIVED\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Translate the URL into EBCDIC                                *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=EBCDIC\n         LA    R4,WORK_BUFFER\n         LR    R3,R5\nMAIN0030 DS    0H\n         LR    R2,R3\n         CH    R2,C_H256\n         BL    MAIN0040\n         LH    R2,C_H256\nMAIN0040 DS    0H\n         SR    R3,R2\n         BCTR  R2,0\n         EX    R2,TR_TO_EBCDIC\n         EX    R2,TR_TO_UPPER\n         LA    R4,1(R2,R4)\n         LTR   R3,R3\n         BH    MAIN0030\n         MVC   PRT_MESSAGE_ID(MSG07_L),MSG07\n         L     R1,WEBURL_ID                   URL ID\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         ED    PRT_MESSAGE_ID+(MSG07_URL_ID-MSG07)(L'MSG07_URL_ID),WORK+\n               _DWORD+3\n         L     R15,WEBURL_LENGTH              URL LENGTH\n         CH    R15,=Y(L'MSG07_URL)            TOO LONG?\n         BNH   MAIN0050                       NO\n         LH    R15,=Y(L'MSG07_URL)            LIMIT LENGTH\nMAIN0050 DS    0H\n         BCTR  R15,0\n         EX    R15,MVC_01\n         BAL   R15,PRT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Make sure the data we got starts with \"GET /\" or \"POST/\"     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0060 DS    0H\n         CLC   C_GET,WORK_BUFFER              GET METHOD?\n         BE    MAIN0070                       YES\n         CLC   C_POST,WORK_BUFFER             POST METHOD?\n         BNE   MAIN1010                       NO\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Copy the URL to the WEBURL block \"translating\" those         *\n*        pesky \"%XX\"S TO EBCDIC AS THE DATA IS BEING COPIED.          *\n*                                                                     *\n*        The copy starts immediately after the \"GET /\" or \"POST/\"     *\n*        and ends with the first EBCDIC blank.                        *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0070 DS    0H\n         ITRACE ID=COPYURL\n         XC    URL_LENGTH,URL_LENGTH\n         LA    R0,URL_TEXT                    CLEAR THE URL DATA\n         LR    R1,R5                          LENGTH (FROM READ)\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R0,R14\n         LA    R1,URL_TEXT                    OUTPUT URL ADDRESS\n         LA    R2,WORK_BUFFER+5               RAW BUFFER ADDRESS\n         SR    R3,R3                          START OUTPUT LENGTH\n         LA    R4,URL_LENGTH                  WERE LENGTH SHOULD GO\nMAIN0080 DS    0H\n         CLI   0(R2),C' '                     BLANK?\n         BE    MAIN0130                       YES\n         CLI   0(R2),C'%'                     HEX VALUE?\n         BE    MAIN0090                       YES\n         CLI   0(R2),C'?'                     START OF PARMS?\n         BE    MAIN0100                       YES\n         MVC   0(1,R1),0(R2)                  OTHERWISE COPY AS IS\n         LA    R0,1                           LENGTH OF INPUT\n         B     MAIN0110\nMAIN0090 DS    0H\n         MVC   WORK_PACK_IN(2),1(R2)          COPY THE HEX\n         NC    WORK_PACK_IN(2),C_HEX1F        PREPARE FOR TRANSLATE\n         TR    WORK_PACK_IN(2),C_CHAR_TO_HEX\n         PACK  WORK_DWORD(2),WORK_PACK_IN(3)  PACK THE HEX VALUE\n         TR    WORK_DWORD(1),ASCII_TO_EBCDIC  CONVERT TO EBCDIC\n         MVC   0(1,R1),WORK_DWORD             COPY TO OUTPUT\n         LA    R0,3                           LENGTH OF INPUT DATA\n         B     MAIN0110\nMAIN0100 DS    0H\n         STH   R3,0(R4)                       SET LENGTH\n         LA    R4,WEBURL_PARM_LENGTH          WERE LENGTH GOES NEXT\n         LA    R3,1(R3)                       DISP TO PARM INFO\n         STH   R3,WEBURL_PARM_DISP            SET DISPLACEMENT\n         SR    R3,R3                          RESET LENGTH\n         MVC   0(1,R1),0(R2)                  COPY THE '?'\n         LA    R0,1                           LENGTH OF INPUT DATA\n         B     MAIN0120                       BYPASS ADDING TO LENGTH\nMAIN0110 DS    0H\n         LA    R3,1(R3)                       UPDATE OUTPUT LENGTH\nMAIN0120 DS    0H\n         AR    R2,R0                          UPDATE INPUT ADDRESS\n         LA    R1,1(R1)                       UPDATE OUTPUT ADDRESS\n         SR    R5,R0                          COMPUTE LENGTH LEFT\n         BH    MAIN0080\nMAIN0130 DS    0H\n         STCM  R3,3,0(R4)                     SET LENGTH\n         ITRACE ID=URLINFO,                                            +\n               DATA1=(URL_LENGTH,4),                                   +\n               DATA2=(WEBURL_PARM_LENGTH,2)\n         ITRACE ID=URLINFO2,                                           +\n               DATA1=(URL_TEXT+00,8),                                  +\n               DATA2=(URL_TEXT+08,8)\n         ITRACE ID=URLINFO3,                                           +\n               DATA1=(URL_TEXT+16,8),                                  +\n               DATA2=(URL_TEXT+24,8)\n         TM    COMM_TRACE_FLAGS,$TRACE_URLS\n         BNO   MAIN0150\n         ITRACE ID=LOGURL\n         LH    R3,URL_LENGTH                  URL LENGTH\n         AH    R3,WEBURL_PARM_LENGTH          PLUS LENGTH OF PARMS\n         LA    R2,LOGBLOKL(R3)                PLUS LOGBLOK OVERHEAD\n         GETMAIN RU,                                                   +\n               LV=(R2),                                                +\n               LOC=BELOW\n         LR    R4,R1                          COPY STORAGE ADDRESS\n         ITRACE ID=LOGURL,                                             +\n               RDATA1=R4,                                              +\n               RDATA2=R2\n         USING LOGBLOK,R4                     DEFINE BASE\n         XC    LOGBLOK(LOGBLOKL),LOGBLOK      INITIALIZE THE STORAGE\n         MVC   LOG_EYE,=CL8'LOGBLOK'\n         LA    R0,5(R3)                       + RDW + LENGTH OF ID\n         STH   R0,LOG_DATA_LENGTH             SET DATA LENGTH\n         MVI   LOG_ID,$LOG_URL                SET RECORD TYPE\n         LA    R0,URL_TEXT                    URL DATA\n         LR    R1,R3                          URL DATA & PARM LENGTH\n         LA    R14,LOG_DATA                   ADDRESS OF DATA\n         LR    R15,R3                         URL DATA & PARM LENGTH\n         MVCL  R14,R0                         COPY DATA\nMAIN0140 DS    0H\n         L     R1,COMM_LOG_QUEUE              FIRST NOW ON CHAIN\n         ST    R1,LOG_NEXT\n         CS    R1,R4,COMM_LOG_QUEUE\n         BC    4,MAIN0140\n*        POST  COMM_LOG_WORK_ECB              WAKE UP THE LOGGING TASK\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Determine which server should process this URL               *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0150 DS    0H\n         ITRACE ID=FINDSERV,                                           +\n               RDATA1=R8\n         MVI   WEBURL_STATUS,$URL_LOOKUP\n         XC    WEBURL_ECB,WEBURL_ECB\nMAIN0160 DS    0H\n         L     R1,COMM_URL_QUEUE\n         ST    R1,WEBURL_NEXT\n         CS    R1,R8,COMM_URL_QUEUE\n         BC    4,MAIN0160\n         ITRACE ID=POSTURL\n         POST   COMM_URL_WORK_ECB\n         ITRACE ID=WAITURL,                                            +\n               RDATA1=R8\n         WAIT   ECB=WEBURL_ECB\n         ITRACE ID=SERVBLOK,                                           +\n               RDATA1=R8,                                              +\n               DATA2=(WEBURL_SERVBLOK,4)\n         ICM   R9,15,WEBURL_SERVBLOK          SERVBLOK ADDRESS\n         USING SERVBLOK,R9\n         BZ    MAIN1000                       NO SERVER FOUND\n         BM    MAIN0180                       LOCAL SERVER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Queue work to remote server                                  *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         ITRACE ID=REMOTE,                                             +\n               RDATA1=R8,                                              +\n               RDATA2=R9\n         MVC   WEBURL_FROM_CLIENT(36),COMM_HTTPWEB_CLIENT\n         MVC   WEBURL_TO_CLIENT(36),PARTNER_CLIENT\n         MVC   PRT_MESSAGE_ID(MSG08_L),MSG08\n         L     R1,WEBURL_ID                   URL ID\n         CVD   R1,WORK_DWORD                  CONVERT TO DECIMAL\n         ED    PRT_MESSAGE_ID+(MSG08_URL_ID-MSG08)(L'MSG08_URL_ID),WORK+\n               _DWORD+3\n         MVC   PRT_MESSAGE_ID+(MSG08_PARTNER_NAME-MSG08)(L'MSG08_PARTNE+\n               R_NAME),PARTNER_CLIENT_NAME\n         MVC   PRT_MESSAGE_ID+(MSG08_PARTNER_TASK-MSG08)(L'MSG08_PARTNE+\n               R_TASK),PARTNER_CLIENT_TASK\n         BAL   R15,PRT0000\n         BAL   R7,GIVE0000\nMAIN0170 DS    0H\n         L     R1,SERVER_URL                  1ST URL\n         ST    R1,WEBURL_NEXT\n         CS    R1,R8,SERVER_URL               ADD NEW TO QUEUE\n         BC    4,MAIN0170\n         ITRACE ID=POST_REM\n         POST  SERVER_WORK_ECB                WAKE UP SERVER SUBTASK\n         B     MAIN0000                       ISSUE ANOTHER ACCEPT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Queue work to local server                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN0180 DS    0H\n         MVC   WEBURL_FROM_CLIENT(36),COMM_HTTPWEB_CLIENT\n         MVC   WEBURL_TO_CLIENT(36),COMM_HTTPLOCL_CLIENT\n         ITRACE ID=LOCAL\n         BAL   R7,GIVE0000\nMAIN0190 DS    0H\n         L     R1,COMM_LOCAL_URL_QUEUE        1ST URL\n         ST    R1,WEBURL_NEXT\n         CS    R1,R8,COMM_LOCAL_URL_QUEUE\n         BC    4,MAIN0190\n         ITRACE ID=POSTLOCL\n         POST  COMM_LOCAL_WORK_ECB            WAKE UP LOCAL SUBTASK\n         B     MAIN0000                       ISSUE ANOTHER ACCEPT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        No server was found for this URL                             *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1000 DS    0H\n         ITRACE ID=NOSERVER\n         MVC   WORK_BUFFER(MSG_NO_SERVERL),MSG_NO_SERVER\n         TR    WORK_BUFFER(MSG_NO_SERVERL),EBCDIC_TO_ASCII\n         MVC   WORK_BUFFER_LENGTH,=A(MSG_NO_SERVERL)\n         B     MAIN1020\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        The buffer we receive from a web user should begin with      *\n*        the \"method\" ('GET /' or 'POST/').  Otherwise we don't       *\n*        know how to get the URL from the buffer.                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1010 DS    0H\n         ITRACE ID=BADMETH\n         MVC   WORK_BUFFER(MSG_400_L),MSG_400\n         TR    WORK_BUFFER(MSG_400_L),EBCDIC_TO_ASCII\n         MVC   WORK_BUFFER_LENGTH,=A(MSG_400_L)\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Send the response                                            *\n*        CLOSE the SOCKET                                             *\n*        FREEMAIN the WEBURL block                                    *\n*        Go issue another ACCEPT                                      *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1020 DS    0H\n         MVC   WORK_TCPIP_FUNCTION,=CL16'WRITE'\n         LA    R2,WORK_BUFFER\n         L     R3,WORK_BUFFER_LENGTH\n         ITRACE ID=WRITE_A,                                            +\n               RDATA1=R8,                                              +\n               DATA2=(WEBURL_SOCKET,2)\nMAIN1030 DS    0H\n         ITRACE ID=WRITE_B,                                            +\n               RDATA1=R2,                                              +\n               RDATA2=R3\n         ST    R3,WORK_LENGTH\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=WRITE,                                            +\n               S=WEBURL_SOCKET,                                        +\n               NBYTE=WORK_LENGTH,                                      +\n               BUF=(R2),                                               +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_RETURN_CODE,                           +\n               ECB=WORK_TCPIP_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         ITRACE ID=WRITE_RC,                                           +\n               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +\n               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0020\n         A     R2,WORK_TCPIP_RETURN_CODE\n         S     R3,WORK_TCPIP_RETURN_CODE\n         BNZ   MAIN1030\n         ITRACE ID=CLOSE,                                              +\n               DATA1=(WEBURL_SOCKET,2)\n         MVC   WORK_TCPIP_FUNCTION,=CL16'CLOSE'\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=CLOSE,                                            +\n               S=WEBURL_SOCKET,                                        +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         TM    WORK_TCPIP_RETURN_CODE,X'80'\n         BO    ERR0020\n         L     R0,WEBURL_LENGTH\n         ITRACE ID=FREE_URL,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(R8),                                                 +\n               LV=(0)\n         B     MAIN0000                       ISSUE ANOTHER ACCEPT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN1050 DS    0H\n         ITRACE ID=RESET\n         ITRACE ID=CLOSE,                                              +\n               DATA1=(WEBURL_SOCKET,2)\n         MVC   WORK_TCPIP_FUNCTION,=CL16'CLOSE'\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=CLOSE,                                            +\n               S=WEBURL_SOCKET,                                        +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         ITRACE ID=CLOSE_RC,                                           +\n               DATA1=(WORK_TCPIP_RETURN_CODE,4),                       +\n               DATA2=(WORK_TCPIP_ERROR_NUMBER,4)\n         B     MAIN0000                       ISSUE ANOTHER ACCEPT\n* ------------------------------------------------------------------- *\n*                                                                     *\n*    What's going on here...                                          *\n*      this subtask received a URL from a web user                    *\n*      this subtask GETMAIN'd a WEBURL block, translated the URL      *\n*         into EBCDIC, and translated the '%' characters.             *\n*      this subtask then determined which server should process       *\n*         the URL                                                     *\n*      the WEBURL block was placed on the work queue for that server's*\n*         subtask                                                     *\n*      The server's subtask will send the URL to the remote server.   *\n*      The server will process the request and send back a resopnse.  *\n*         Note that this response is only to notify us that it got    *\n*         the URL and has issued the TAKESOCKET.                      *\n*      This task then CLOSEs the SOCKET.                              *\n*                                                                     *\n*      Now this subtask needs to issue a WAIT to complete the         *\n*      GIVESOCKET, CLOSE the socket,  and FREEMAIN the WEBURL block.  *\n*                                                                     *\n*                                                                     *\n* ------------------------------------------------------------------- *\nMAIN2000 DS    0H\n         XC    COMM_WEB_WORK_ECB,COMM_WEB_WORK_ECB\n         ITRACE ID=CMPLT_Q,                                            +\n               DATA1=(COMM_WEB_COMPLETED,4)\nMAIN2020 DS    0H\n         SR    R1,R1\n         ICM   R8,15,COMM_WEB_COMPLETED\n         BZ    MAIN0020\n         CS    R8,R1,COMM_WEB_COMPLETED\n         BC    4,MAIN2020\nMAIN2030 DS    0H\n         ITRACE ID=GIVEWAIT,                                           +\n               RDATA1=R8,                                              +\n               DATA2=(WEBURL_ID,4)\n         WAIT  ECB=WEBURL_ECB\n         ITRACE ID=CLOSE,                                              +\n               DATA1=(WEBURL_ID,4)\n         XC    WEBURL_ECB,WEBURL_ECB\n         EZASMI TYPE=CLOSE,                                            +\n               S=WEBURL_SOCKET,                                        +\n               RETCODE=WEBURL_RETURN_CODE,                             +\n               ERRNO=WEBURL_RETURN_CODE,                               +\n               ECB=WEBURL_ECB\n         ITRACE ID=WAIT\n         WAIT  ECB=WEBURL_ECB\n         TM    WEBURL_RETURN_CODE,X'80'\n         BO    ERR0010\n         L     R2,WEBURL_NEXT\n         L     R0,WEBURL_LENGTH\n         ITRACE ID=FREE_URL,                                           +\n               RDATA1=R8,                                              +\n               RDATA2=R0\n         FREEMAIN RU,                                                  +\n               A=(R8),                                                 +\n               LV=(0)\n         LTR   R8,R2\n         BNZ   MAIN2030\n         B     MAIN0020\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nGIVE0000 DS    0H\n         ITRACE ID=GIVESOKT,                                           +\n               DATA1=(WEBURL_SOCKET,2),                                +\n               DATA2=(WEBURL_ID,4)\n         ITRACE ID=GIVEFROM,                                           +\n               DATA1=(WEBURL_FROM_CLIENT_NAME,8),                      +\n               DATA2=(WEBURL_FROM_CLIENT_TASK,8)\n         ITRACE ID=GIVETO,                                             +\n               DATA1=(WEBURL_TO_CLIENT_NAME,8),                        +\n               DATA2=(WEBURL_TO_CLIENT_TASK,8)\n         XC    WEBURL_ECB,WEBURL_ECB\n         MVC   WORK_TCPIP_FUNCTION,=CL16'GIVESOCKET'\n         EZASMI TYPE=GIVESOCKET,                                       +\n               S=WEBURL_SOCKET,                                        +\n               CLIENT=WEBURL_TO_CLIENT,                                +\n               ECB=WEBURL_ECB,                                         +\n               RETCODE=WEBURL_RETURN_CODE,                             +\n               ERRNO=WEBURL_ERROR_NUMBER\n         BR    R7\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nTERM0000 DS    0H\n         ITRACE ID=CLOSE\n         MVC   WORK_TCPIP_FUNCTION,=CL16'CLOSE'\n         XC    WORK_TCPIP_ECB,WORK_TCPIP_ECB\n         EZASMI TYPE=CLOSE,                                            +\n               S=WORK_SOCKET_DESCRIPTOR,                               +\n               RETCODE=WORK_TCPIP_RETURN_CODE,                         +\n               ERRNO=WORK_TCPIP_ERROR_NUMBER,                          +\n               ECB=WORK_TCPIP_ECB\n         WAIT  ECB=WORK_TCPIP_ECB\n         BAL   R15,INFO0000\n\n         ITRACE ID=TERMAPI\n         MVC   WORK_TCPIP_FUNCTION,=CL16'TERMAPI'\n         EZASMI TYPE=TERMAPI,                                          +\n               TASK=WORK_TCPIP_TASK\n         BAL   R15,INFO0000\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nINFO0000 DS    0H\n         L     R14,WORK_LINK_CURRENT\n         ST    R15,0(R14)\n         LA    R14,4(R14)\n         ST    R14,WORK_LINK_CURRENT\n         MVC   PRT_MESSAGE_ID(MSG90_L),MSG90\n         MVC   PRT_MESSAGE_ID+(MSG90_FUNCTION-MSG90)(L'MSG90_FUNCTION),+\n               WORK_TCPIP_FUNCTION\n         UNPK  PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(9),WORK_TCPIP_R+\n               ETURN_CODE(5)\n         MVZ   PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXZERO\n         TR    PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)(8),C_HEXCHAR\n         MVI   PRT_MESSAGE_ID+(MSG90_RETURN_CODE-MSG90)+8,C' '\n         L     R1,WORK_TCPIP_ERROR_NUMBER\n         CVD   R1,WORK_DWORD\n         ED    PRT_MESSAGE_ID+(MSG90_ERROR_NUMBER-MSG90)(L'MSG90_ERROR_+\n               NUMBER),WORK_DWORD+5\n         BAL   R15,PRT0000\n         L     R14,WORK_LINK_CURRENT\n         SH    R14,C_H4\n         ST    R14,WORK_LINK_CURRENT\n         L     R15,0(R14)\n         CLI   WORK_TCPIP_RETURN_CODE,X'FF'\n         BNER  R15\n         DC    H'0'\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPRT0000  DS    0H\n         L     R14,WORK_LINK_CURRENT\n         ST    R15,0(R14)\n         LA    R14,4(R14)\n         ST    R14,WORK_LINK_CURRENT\n         ITRACE ID=PRINT\n         GETMAIN RU,                                                   +\n               LV=PRTBLOKL,                                            +\n               LOC=ANY\n         MVC   0(PRTBLOKL,R1),PRTBLOK\n         MVC   PRT_CC(PRT_LRECL),COMM_BLANKS\nPRT0010  DS    0H\n         L     R14,COMM_PRINT_QUEUE           FIRST BLOCK ON QUEUE\n         ST    R14,PRT_NEXT-PRTBLOK(R1)                       '\n         CS    R14,R1,COMM_PRINT_QUEUE        ADD NEW BLOCK TO CHAIN\n         BC    4,PRT0010                      TRY AGAIN\n         POST  COMM_PRINT_WORK_ECB            WAKE UP THE PRINT SUBTASK\n         L     R14,WORK_LINK_CURRENT\n         SH    R14,C_H4\n         ST    R14,WORK_LINK_CURRENT\n         L     R15,0(R14)\n         BR    R15\n* ------------------------------------------------------------------- *\n*        Error routines                                               *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         DC    H'1'\nERR0020  DS    0H\n         BAL   R15,INFO0000\n         DC    H'2'\nERR0030  DS    0H\n         DC    H'3'\nERR0040  DS    0H\n         DC    H'4'\n* ------------------------------------------------------------------- *\n*        Exit                                                         *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         ITRACE ID=EXIT\n         ICM   R1,15,WORK_TCPIP_GWA\n         BZ    EXIT0010\n         FREEMAIN RU,                                                  +\n               A=(1),                                                  +\n               LV=GWALENTH\nEXIT0010 DS    0H\n         LR    R1,R13                         COPY SAVE AREA ADDRESS\n         L     R13,4(R13)                     CALLER'S R13\n         FREEMAIN RU,                         FREE WORK AREA           +\n               A=(1),                                                  +\n               LV=WORKL\n         LM    R14,R12,12(R13)\n         SR    R15,R15                        RETURN CODE\n         BR    R14                            RETURN TO CALLER\n\n* ------------------------------------------------------------------- *\nTR_TO_EBCDIC TR    0(0,R4),ASCII_TO_EBCDIC\nTR_TO_UPPER  OC    0(0,R4),COMM_BLANKS\nMVC_01       MVC   PRT_MESSAGE_ID+(MSG07_URL-MSG07)(0),WORK_BUFFER\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        CONSTANTS                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nC_F2                     DC    F'2'\nC_F4                     DC    F'4'\n\nC_H4                     DC    H'4'\nC_H256                   DC    H'256'\nC_AF_INET                DC    X'0002'\nC_GET                    DC    C'GET /'\nC_HEXCHAR                DC    C'0123456789ABCDEF'\nC_HEXZERO                DC    XL8'0000000000000000'\nC_POST                   DC    C'POST/'\nC_PRT_ID                 DC    CL8'PRTBLOK'\nC_WEBURL_ID              DC    CL8'WEBURL'\nC_HTTPWEB                DC    CL8'HTTPWEB '\nC_HEX1F                  DC    8X'1F'\nC_CHAR_TO_HEX            DC    X'000A0B0C0D0E0F000000000000000000'\n                         DC    X'00102003040506070809000000000000'\n\nX_00000036               DC    X'00000036'    CONNECTION RESET\n\nMSG01                    DS    0C\n                         DC    CL15'HTTPWEB01I'\n                         DC    C'Issuing INITAPI'\nMSG01_L                  EQU   *-MSG01\nMSG02                    DS    0C\n                         DC    CL15'HTTPWEB02I'\n                         DC    C'Creating socket'\nMSG02_L                  EQU   *-MSG02\nMSG03                    DS    0C\n                         DC    CL15'HTTPWEB03I'\n                         DC    C'BINDing to port '\nMSG03_PORT               DC    CL5' '\nMSG03_L                  EQU   *-MSG03\nMSG04                    DS    0C\n                         DC    CL15'HTTPWEB04I'\n                         DC    C'LISTENing'\nMSG04_L                  EQU   *-MSG04\nMSG05                    DS    0C\n                         DC    CL15'HTTPWEB05I'\n                         DC    C'ACCEPTing connections'\nMSG05_L                  EQU   *-MSG05\nMSG06                    DS    0C\n                         DC    CL15'HTTPWEB06I'\n                         DC    C'Connection'\nMSG06_ID                 DC    X'402020206b2020206b202120'\n                         DC    C' arrived from '\nMSG06_IP_ADDRESS         DC    CL15' '\nMSG06_L                  EQU   *-MSG06\nMSG07                    DS    0C\n                         DC    CL15'HTTPWEB07I'\n                         DC    C'URL ID '\nMSG07_URL_ID             DC    X'40202020202020202120'\n                         DC    C' assigned to:'\nMSG07_URL                DC    CL100' '\nMSG07_L                  EQU   *-MSG07\nMSG08                    DS    0C\n                         DC    CL15'HTTPWEB08I'\n                         DC    C'URL '\nMSG08_URL_ID             DC    X'40202020202020202120'\n                         DC    C' processed by '\nMSG08_PARTNER_NAME       DC    CL8' '\n                         DC    C' '\nMSG08_PARTNER_TASK       DC    CL8' '\nMSG08_L                  EQU   *-MSG08\nMSG90                    DS    0C\n                         DC    CL15'HTTPWEB90I'\n                         DC    C'TCP/IP function '\nMSG90_FUNCTION           DC    CL16' '\n                         DC    C'  Return code: '\nMSG90_RETURN_CODE        DC    CL8' '\n                         DC    C'  Error number:'\nMSG90_ERROR_NUMBER       DC    X'402020202120'\nMSG90_L                  EQU   *-MSG90\n\nMSG_400                  DS    0C\n                         DC    C'HTTP/1.0 400  '\n                         DC    AL1($LINE_FEED)\nMSG_400_METHOD           DC    CL4' '\n                         DC    C'  Unrecognized method'\n                         DC    AL1($LINE_FEED)\nMSG_400_L                EQU   *-MSG_400\n\nMSG_NO_SERVER            DS    0C\n                         DC    C'HTTP/1.0 200 OK'\n                         DC    AL1($LINE_FEED)\n                         DC    C'Content-type: text/html'\n                         DC    AL1($LINE_FEED)\n                         DC    AL1($LINE_FEED)\n                         DC    AL1($LINE_FEED)\n                         DC    C'<HTML>'\n                         DC    C'No server for this URL'\n                         DC    C'</HTML>'\nMSG_NO_SERVERL           EQU   *-MSG_NO_SERVER\n\n                         LTORG\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWORKAREA                 DSECT\n                         STDSAVE  DSECT=NO\nWORK_ID                  DS   CL8\nWORK_DWORD               DS   D\nWORK_MAX_SOCKET          DS   F\nWORK_BUFFER_LENGTH       DS   F\nWORK_URL_LENGTH          DS   F\nWORK_LENGTH              DS   F\n\nWORK_PACK_IN             DS   XL4\n\nWORK_RC                  DS   H\n\nWORK_SOCKET_DESCRIPTOR   DS   H\nWORK_NEW_SOCKET          DS   H\n\n                         DS   0F\nWORK_SOCKET_STRUCTURE    DS   0XL16\nWORK_SOCKET_FAMILY       DS   AL2           FAMILY (ALWAYS = 2)\nWORK_SOCKET_PORT         DS   XL2           PORT NUMBER\nWORK_SOCKET_CLIENT_IP    DS   XL4           CLIENT'S IP ADDRESS\n                         DS   XL8           RESERVED\n\nWORK_TCPIP_ECB           DS   F\n                         DS   XL100         REQUIRED BY TCP/IP\n\n                         CLIENT PREFIX=WORK\nWORK_CLIENTL             EQU  *-WORK_CLIENT\n\nWORK_TCPIP_ERROR_NUMBER  DS   F\nWORK_TCPIP_FUNCTION      DS   CL16\nWORK_TCPIP_GWA           DS   F\nWORK_TCPIP_RETURN_CODE   DS   F\nWORK_TCPIP_TASK          EZASMI TYPE=TASK,STORAGE=CSECT\n\nWORK_WAIT_LIST           DS   0F            WAIT LIST\nWORK_WAIT_ECB_1          DS   F             COMM_TERMINATION_ECB\nWORK_WAIT_ECB_2          DS   F             TCPIP_ECB\n\nWORK_LINK_CURRENT        DS   A\nWORK_LINK_SAVE           DS   16F\n\n                         PRTBLOK  DSECT=NO\n\nWORK_BUFFER              DS   0F,(BUFFER_SIZE)X\nWORKL                    EQU  *-WORKAREA\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         COMMON  MAIN,TYPE=DSECT\n         WEBURL\n         URL\n         LOGBLOK\n         SERVBLOK\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n         EZASMI TYPE=GLOBAL,STORAGE=DSECT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\n                COPY   REGEQU\nBUFFER_SIZE     EQU    1000\n$LINE_FEED      EQU    X'0A'\n         END    HTTPWEB\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SUB0001": {"ttr": 7173, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x05\\x11o\\x01\\x05\\x11o\\x08\\x16\\x00\\xcc\\x00\\xcc\\x00\\x00\\xd9\\xd3\\xd9\\xc9\\xc3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2005-04-26T00:00:00", "modifydate": "2005-04-26T08:16:28", "lines": 204, "newlines": 204, "modlines": 0, "user": "RLRICE"}, "text": "* ------------------------------------------------------------------- *\n*                                                                     *\n*     This subroutine determines the \"DSORG\" of a given data set.     *\n*                                                                     *\n*     The subroutine requires two parameters:                         *\n*       1)  the data set's name (44 characters)                       *\n*       2)  the returned data set organization (1 byte)               *\n*                                                                     *\n*     Returned values for the DSORG are:                              *\n*         'P'    ... Partitioned (PO)                                 *\n*         'S'    ... Physically sequential (PS)                       *\n*         'U'    ... Unknown (not PO, PS, or VSAM)                    *\n*         'V'    ... VSAM                                             *\n*         'X'    ... Not cataloged                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\nSUB0001  CSECT\nSUB0001  AMODE 31\nSUB0001  RMODE ANY\n         USING SUB0001,R12           DEFINE BASE\n         STM   R14,R12,12(R13)       SAVE ENTRY REGISTERS\n         LR    R12,R15               COPY BASE\n         B     INIT0000              BRANCH AROUND EYECATCHER\nMODID    DC    CL8'SUB0001'          MODULE NAME\n         DC    CL8'&SYSDATE'         DATE OF ASSEMBLY\n         DC    CL6'&SYSTIME'         TIME OF ASSEMBLY\nINIT0000 DS    0H\n         LR    R10,R1                COPY PARM LIST ADDRESS\n         USING PARM_LIST,R10         DEFINE BASE\n         GETMAIN RU,                                                   +\n               LOC=BELOW,                                              +\n               LV=WKL\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         USING WK,R13                DEFINE BASE\n         LA    R1,WKCSIRC            CATALOG SYSTEM RETURN CODE\n         ST    R1,WKCSIPL            SET ADDRESS IN PARMLIST\n         LA    R1,WKCSISP            CATALOG SYSTEM SEARCH PARMS\n         ST    R1,WKCSIPL+4          SET ADDRESS IN PARMLIST\n         MVC   WKCSISP(CSISPL),CSISPI\n         L     R2,CSISIZE            SIZE OF CATALOG SEARCH DATA AREA\n         GETMAIN RU,                                                   +\n               LV=(R2),              .. SIZE OF AREA                   +\n               LOC=ANY               ..\n         ST    R1,WKCSIPL+8          SET ADDRESS IN PARMIST\n         ST    R2,0(R1)              SET SIZE FOR CATALOG SEARCH\n         MVC   WKCSISP(44),PARM_LIST_DSN  DATASET NAME\n         LOAD  EP=IGGCSI00           LOAD THE CSI ENTERFACE\n         LR    R15,R0                COPY THE ENTRY POINT\n         LA    R1,WKCSIPL            CATALOG SEARCH PARM LIST\n         BALR  R14,R15               LINK TO CSI\n         DELETE EP=IGGCSI00          DELETE THE CSI INTERFACE\n         OC    WKCSIRC+2(2),WKCSIRC+2\n         BNZ   ERR0010               ERROR FROM CATALOG SEARCH\n         L     R2,WKCSIPL+8          RETURNED DATA ADDRESS\n         USING DATA,R2               DEFINE BASE\n         L     R3,DATAUL             LENGTH OF DATA RETURNED\n         LA    R2,DATADST            SKIP HEADER STUFF\n         USING DATADST,R2\n         SH    R3,=Y(DATADST-DATA)\nPROC0010 DS    0H\n         CLI   DATADST,$DATANVS      NONVSAM?\n         BE    PROC0020              YES\n         CLI   DATADST,$DATAVSC      VSAM CLUSTER?\n         BE    PROC0100              YES\n         CLI   DATADST,$DATAVSD      VSAM DATA COMPONENT?\n         BE    PROC0100              YES\n         CLI   DATADST,$DATAAIX      VSAM ALTERNATE INDEX?\n         BE    PROC0100              YES\n         CLI   DATADST,$DATAVSI      VSAM INDEX COMPONENT?\n         BNE   ERR0010               NO.. SKIP\nPROC0020 DS    0H\n         MVC   WKCAMLST(CAMLSTL),CAMLSTI\n         MVC   WKDSN,PARM_LIST_DSN\n         MVC   WKVOL,DATAVOL\n         LA    R0,WKDSN              DATASET NAME'S ADDRESS\n         ST    R0,WKCAMLST+4         SET ADDRESS IN PARM LIST\n         LA    R0,WKVOL              VOLSER'S ADDRESS\n         ST    R0,WKCAMLST+8         SET ADDRESS IN PARM LIST\n         LA    R0,DS1FMTID           VTOC DATA ADDRESS\n         ST    R0,WKCAMLST+12        SET ADDRESS IN PARM LIST\n         LA    R1,WKCAMLST           OBTAIN PARM LIST\n         OBTAIN (1)                  ISSUE OBTAIN\n         CLI   DS1DSORG,DS1DSGPS     SEQUENTIAL?\n         BE    PROC0030              YES\n         CLI   DS1DSORG,DS1DSGPO     PARTITIONED?\n         BE    PROC0040              YES\n         MVI   PARM_LIST_DSORG,C'U'  UNKNOWN\n         B     EXIT0000              EXIT\nPROC0030 DS    0H\n         MVI   PARM_LIST_DSORG,$PARM_LIST_DSORG_PS\n         B     EXIT0000              EXIT\nPROC0040 DS    0H\n         MVI   PARM_LIST_DSORG,$PARM_LIST_DSORG_PO\n         B     EXIT0000              EXIT\nPROC0100 DS    0H\n         MVI   PARM_LIST_DSORG,$PARM_LIST_DSORG_VS\n         B     EXIT0000              EXIT\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nERR0010  DS    0H\n         MVI   PARM_LIST_DSORG,C'X'  NOT CATALOGED\n         B     EXIT0000\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nEXIT0000 DS    0H\n         L     R1,WKCSIPL+8          CATALOG SEARCH DATA AREA\n         L     R2,CSISIZE            SIZE OF CATALOG SEARCH DATA AREA\n         FREEMAIN RU,A=(1),LV=(R2)   FREEMAIN THE WORK AREA\n         LR    R1,R13                COPY WORK AREA ADDRESS\n         L     R13,4(R13)            RESTORE R13\n         FREEMAIN RU,A=(1),LV=WKL    FREE THE WORK AREA\n         LM    R14,R12,12(R13)       RESTORE ALL OTHER REGISTERS        ASE01680\n         SR    R15,R15               GIVE GOOD RETURN CODE              ASE01690\n         BR    R14                   RETURN TO CALLER                   ASE01700\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Constants                                                    *\n*                                                                     *\n* ------------------------------------------------------------------- *\n\nCSISIZE  DC    F'2048'\n         LTORG\n\nCSISPI   DS    0F\n         DC    CL44'RLRICE.SUB0001' DATASET NAME\n         DC    CL44' '            CATALOG NAME (OR BLANK)\n         DC    CL44' '            RESUME NAME OR BLANKS\n         DC    CL16'ACGH'         ENTRY TYPES\n         DC    CL1'Y'             RETURN DATA AND INDEX INFO FOR VSAM\n         DS    0CL4               OPTIONS\n         DC    CL1' '             .. RESUME INDICATOR\n         DC    CL1' '             .. SEARCH MULTIPLE CATALOGS\n         DC    XL1'00'            RESERVED\n         DC    H'1'               NUMBER OF ENTRIES FOLLOWING\n         DC    CL8'VOLSER  '      FIELD NAME\nCSISPL   EQU   *-CSISPI\nCAMLSTI  CAMLST SEARCH,              READ VTOC BY DATASET NAME         +\n               *,                    .. DATASET NAME'S ADDRESS         +\n               *,                    .. VOLSER'S ADDRESS               +\n               *                     .. RETURNED DATA ADDRESS\nCAMLSTL  EQU   *-CAMLSTI\n* ------------------------------------------------------------------- *\n*                                                                     *\n*        Work areas                                                   *\n*                                                                     *\n* ------------------------------------------------------------------- *\nWK       DSECT\n         DS    18F\nWKCSIPL  DS       0A\n         DS    A               CSI RETURN CODE INFO ADDRESS\n         DS    A               CSI SEARCH ARGS ADDRESS\n         DS    A               CSI RETURNED DATA\n\nWKVOL    DS    CL6\nWKDSN    DS    CL44\n         ORG   WKDSN\nWKVTOC   IECSDSL1   1\n\nWKCSIRC  DS    0A\n         DS    CL2             .. MODULE SUFFIX\n         DS    X               .. RETURN CODE\n         DS    X               .. REASON CODE\nWKCSISP  DS    (CSISPL)X       SEARCH PARAMETERS\n\nWKCAMLST DS    0A,(CAMLSTL)X\n\nWKL      EQU   *-WK            BASIC WORK ARE SIZE\n*--------------------------------------------------------------------*\nDATA     DSECT\nDATAAL   DS    F                  AREA LENGTH\n         DS    F\nDATAUL   DS    F                  USED LENGTH\nDATACATI DS    XL4                CATALOG INDICATORS\nDATACATN DS    CL44               CATALOG NAME\n         DS    XL5\nDATADST  DS    C\n$DATANVS EQU   C'A'               NONVSAM\n$DATAVSC EQU   C'C'               VSAM CLUSTER\n$DATAVSD EQU   C'D'               VSAM DATA\n$DATAAIX EQU   C'G'               VSAM ALTERNATE INDEX\n$DATAVSI EQU   C'I'               VSAM INDEX\nDATADSN  DS    CL44\nDATAVDL  DS    XL2                VOLSER DATA LENGTH\n         DS    XL2\nDATAVEL  DS    XL2                VOLSER ENTRY LENGTH (TOTAL)\nDATAVOL  DS    CL6                FIRST (OR ONLY) VOLSER\n* ------------------------------------------------------------------- *\n*                                                                     *\n* ------------------------------------------------------------------- *\nPARM_LIST           DSECT\nPARM_LIST_DSN       DS  CL44\nPARM_LIST_DSORG     DS  C\n$PARM_LIST_DSORG_PS EQU C'S'      SEQUENTIAL\n$PARM_LIST_DSORG_PO EQU C'P'      PARTITIONED\n$PARM_LIST_DSORG_VS EQU C'V'      VSAM\n* ------------------------------------------------------------------- *\n*              EQUATES                                                *\n* ------------------------------------------------------------------- *\n         COPY REGEQU\n         END  SUB0001\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT795/CBT.V500.FILE795.PDS/SRCLIB.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT795/CBT.V500.FILE795.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}