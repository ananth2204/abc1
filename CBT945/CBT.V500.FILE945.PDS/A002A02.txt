IDCAMS dialogue on the VSE system console

This routine was born under pressure, after the VSAM master
catalog broke and no on-line system (eg ICCF or CMS) was
available to define a new catalog and necessary cluster.  It
should be placed in the VSE system library (BAM).

The input is entered on the system console and contains
IDCAMS commands.  The output messages, from the called
IDCAMS program, are displayed unchanged on the system
console.

AMSC           TITLE 'AMSCONS  -  IDCAMS INPUT FROM CONSOLE'
           PUNCH '   PHASE AMSCONS,* '
           SPACE 3
AMSCONS  CSECT
*  REGISTER-BENUTZUNG
R0      EQU   0       COUNTREG
R1      EQU   1       WORKREG
R2      EQU   2       WORKREG
R3      EQU   3       BASEREG
R4      EQU   4       .
R5      EQU   5       .
R6      EQU   6       .
R7      EQU   7       .
R8      EQU   8       .
R9      EQU   9       .
R10     EQU   10      WORKREG
R11     EQU   11      .
R12     EQU   12      .
R13     EQU   13      ADDRESS OF OWN SAVE AREA
R14     EQU   14      RETURN ADDR / BALREG
R15     EQU   15      ENTRY ADDR
          EJECT
          SAVE  (14,12)
          LR    R3,R15
          USING AMSCONS,R3
          B     BEGIN
          DC    CL8'AMSCONS'            PROGRAM NAME
          DC    C' V.1.0 '              VERSION
          DC    C'&UDATE '              DATE OF UPDATE
          DC    C'&UTIME '              TIME OF UPDATE
          DC    C'author: willi j. kuhn '
BEGIN     DS    0H
          ST    R13,SAVEAREA+4          SAVE PREVIOUS SAVEAREA ADDR
          LR    R2,R13                  SAVE REG 13
          LA    R13,SAVEAREA            LOAD OWN SAVEAREA ADDR
          ST    R13,8(R2)             CHAIN IT TO PREVIOUS AREA
          EJECT
*  PERFORM IDCAMS FOR PROCESSING                             *
IDCAMS    DS    0H
          SPACE
          CDLOAD IDCAMS
          SPACE
          LTR   R15,R15                    CDLOAD OK
          BZ    IDCAMS10             YES - LINK IDCAMS
          SPACE
          DC    H'0'               ABEND
          DC    C'ERROR CDLOAD IDCAMS'
          SPACE
IDCAMS10  DS    0H
          LA    R15,6(R1)      ENTRY TO IDCAMS
          LA    R1,ARGLIST
          SPACE
          BALR  R14,R15
          EJECT
*  PROGRAM-END      *
PROGEND   DS    0H
          L     R13,4(R13)
          L     R14,12(R13)
          SPACE
          RETURN (0,12)
          EJECT
*  IDCAMS INPUT ROUTINE       *
IOSYSIPT  DS    0H
          USING *,R15
          STM   R0,R15,SAVEIPT            SAVE ALL REGS
          L     R3,=A(AMSCONS)            LOAD BASE REG
          DROP  R15
          SPACE
          L     R2,4(R1)             GET IOFLAGS ADDR
          CLI   0(R2),X'08'        IS IT A GET REQUEST
          BE    GETIPT                    YES - BUILD INPUT
          SPACE
          LM    R0,R15,SAVEIPT            RELOAD ALL REGS
          LA    R15,0                     RETURN CODE NORMAL
          BR    R14                       RETURN TO IDCAMS
          SPACE
GETIPT    DS    0H
          L     R2,8(R1)                GET IOINFO ADDR
          MVC   0(4,R2),=A(IPTDATA)     SET IO AREA ADDR
          MVC   4(4,R2),=AL4(L'IPTDATA) SET IO AREA LENGTH
          SPACE
          LA    R2,L'MSGENTER
          PUT   SYSLOG,MSGENTER
          SPACE
          MVI   IPTDATA,C' '       CLEAR INPUT AREA
          MVC   IPTDATA+1(L'IPTDATA-1),IPTDATA
          SPACE
          GET   SYSLOG,IPTDATA+1
          SPACE
          LTR   R2,R2
          BZ    EOFIPT
          SPACE
          OC    IPTDATA,BLANK            TRANSLATE TO UPPERCASE
          SPACE
          CLC   =C'END',IPTDATA+1
          BE    EOFIPT
          SPACE
          LM    R0,R15,SAVEIPT            RELOAD ALL REGS
          LA    R15,0                     RETURN CODE NORMAL
          BR    R14                       RETURN TO IDCAMS
          SPACE
EOFIPT  DS    0H
          LM    R0,R15,SAVEIPT             RELOAD ALL REGS
          LA    R15,4                      END OF PROCESSING
          BR    R14                        RETURN TO IDCAMS
          EJECT
*  IDCAMS OUTPUT ROUTINE      *
IOSYSLST DS    0H
          USING *,R15
          STM   R0,R15,SAVELST            SAVE ALL REGS
          L     R3,=A(AMSCONS)          LOAD BASE REG
          DROP  R15
          SPACE
          L     R2,4(R1)                GET IOFLAGS ADDR
          CLI   0(R2),X'0C'             IS IT A PUT REQUEST
          BNE   ENDLST                  NO - RETURN TO IDCAMS
          SPACE
          MVI   IO1LST,C' '             CLEAR OUT AREA
          MVC   IO1LST+1(L'IO1LST-1),IO1LST
          SPACE
          L     R10,8(R1)               GET IOINFO ADDR
          L     R2,4(R10)               GET RECORD LENGTH
          L     R10,0(R10)              GET IO AREA ADDR
          SPACE
          BCTR  R2,0                      -1
          EX    R2,EXMVCLST             EXECUTE MOVE
          SPACE
          PUT   SYSLST
          SPACE
          CLC   =C'IDC',1(R10)     MSG PREFIX
          BNE   ENDLST                  NO - RETURN
          SPACE
          CLC   =C'AMS',4(R10)     MSG PREFIX
          BE    ENDLST                  NO - RETURN
          SPACE
          PUT   SYSLOG,IO1LST+1
          SPACE
ENDLST DS    0H
          LM    R0,R15,SAVELST          RELOAD ALL REGS
          LA    R15,0                   RETURN CODE NORMAL
          BR    R14                     RETURN TO IDCAMS
          SPACE 2
EXMVCLST MVC   IO1LST(0),0(R10)   MOVE DATA
          EJECT
*  CONSTANTS/AREAS/LITERALS                                           *
BLANK          DC    CL80' '
MSGENTER DC    C'Enter IDCAMS command or END/eob'
SAVEAREA DS    18F                      MAIN SAVE AREA
SAVEIPT  DS    18F                      SUB SAVE AREA
SAVELST  DS    18F                      SUB SAVE AREA
ARGLIST  DC    A(OPTIONS)               SEE IDCAMS RULES
         DC    A(DNAMES)
         DC    A(PAGENUM)
         DC    X'80'
         DC    AL3(IOLIST)
OPTIONS  DC    H'0'
DNAMES   DC    H'0'
PAGENUM  DC    H'0'
IOLIST   DC    F'2'                     NUMBER OF MANAGED FILES
         DC    A(DNAMEIPT)
         DC    A(IOSYSIPT)
         DC    A(IPTDATA)
         DC    A(DNAMELST)
         DC    A(IOSYSLST)
         DC    A(LSTDATA)
         SPACE
DNAMEIPT DC    CL10'DDSYSIPT'
IPTDATA  DC    CL80' '
         SPACE
DNAMELST DC    CL10'DDSYSLST'
LSTDATA  DS    10CL256
         SPACE 2
         LTORG
         EJECT
*  SYSLOG CONTROL BLOCK                                               *
SYSLOG    DTFCN DEVADDR=SYSLOG,                                        C
          IOAREA1=IO1LOG,                                              C
          BLKSIZE=256,                                                 C
          RECFORM=UNDEF,                                               C
          RECSIZE=(2),                                                 C
          TYPEFLE=INPUT,                                               C
          WORKA=YES
          SPACE 2
IO1LOG    DC    CL256' '
          EJECT
*          SYSLST CONTROL BLOCK                                       *
SYSLST    DTFPR DEVADDR=SYSLST,                                        C
          IOAREA1=IO1LST,                                              C
          BLKSIZE=133,                                                 C
          CTLCHR=ASA
IO1LST    DC    CL133' '
          EJECT
*  DUMMY SECTIONS                                                     *
         SPACE 3
         END   AMSCONS

Sample JCL.

* $$ JOB JNM=AMSCONS,CLASS=A,USER=KUHN
* $$ LST CLASS=J
// JOB AMSCONS SH24 KUHN     IDCAMS FROM SYSLOG
// EXEC AMSCONS,SIZE=AUTO
/*
/&
* $$ EOJ

The program can also be executed by entering the EXEC
statement on the system console or in an ICCF interactive
partition.

Willi Kuhn
Freelance Systems Programmer (Germany)             c Willi Kuhn 1991

