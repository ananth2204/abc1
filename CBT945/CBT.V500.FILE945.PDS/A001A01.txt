Analysing AIX record size

An alternate index (AIX) is, basically, nothing but a VSAM
KSDS file which enables you to access a base VSAM file using
a different key field.  The records in an alternate index are
variable length, based on the number of occurrences of the
alternate key field in the base file.  When defining the alternate
index the maximum record size must be provided as a
parameter.  Typically the programmer guesses at this value or,
even worse, picks some large number such as 32 000,
assuming that this number will never be reached.

When the alternate index is actually created you will receive
messages to indicate if the maximum record size you selected
was not large enough (IBM messages IDC1646I on VSE/SP
3.1).  For example, you may see something like this:

IDC1646I   1234 EXCESS PRIME KEY VALUES FOR AIX KEY F9F9F8F8F7F7F6F6

It is then possible to redefine the AIX with a larger maximum
record size to alleviate this problem.

However, the opposite of this problem can also occur, that is,
the specified maximum record size can be greater than the
value that is actually needed.  This means that the size of a
CICS program can be considerably larger than it should be in
order to hold the AIX work areas.  If the AIX work area is
under the CICS program COMMAREA it can needlessly
increase the size of the on-line workset and have an adverse
effect on performance.

The effect can be even worse if you are using a CICS version
prior to 1.7 because records spanning Control Intervals are not
supported.  When you consider the buffer and GETVIS
implications of having the large CIs to handle the excessive
record sizes, the results can be disastrous.

With this in mind I wrote a program to read an AIX as a KSDS
file and print a report showing the range of record sizes as well
as the minimum and maximum record sizes.

When a new AIX is to be built, I initially define the maximum
record size as 32 000, then run this program using the new AIX
as input.  I use the output of this program to adjust the
maximum record size for the AIX to something more
reasonable, delete and define the AIX, and rebuild the AIX.

A sample output report might look like Figure 1.

Knowing that the largest AIX record in the file is 1435
characters in length and only 2 out of 9451 records are in the
size range of 1001-1500 I could safely choose a maximum AIX
record size of less than 2000.  Periodic monitoring of this file
(using this program) will make sure that the AIX record size
remains reasonable.

Regarding the program itself, the user macros for REGIS,
BEGIN, and PRRTN are used to maintain program consistency
and to alleviate some of the redundancy for basic programming
tasks.  You can place the code 'in line' if you like.  In addition,
the record size ranges can be changed easily by modifying
TABLE.

The JCL to run this job is as follows:

// ASSGN SYS009,CUU     ASSIGN YOUR PRINTER
// DLBL IJUC001,'YOUR.VSAM.USER.CATALOG',,VSAM
// DLBL ZZWRKDI,'AIX.FILE.NAME',,VSAM,CAT=IJUC001
// EXEC PZZ0051,SIZE=PZZ0051
/*

Simply change the AIX file name and VSAM user catalog
name as appropriate, and assign the printer.

0051     TITLE 'JOB ZZ0051 ANALYZE VSAM AIX FOR MAX RECORD SIZE'
* MACRO DEFINITIONS
         MACRO
         REGIS
* MACRO        ==> REGIS
* PARAMETERS   ==> NONE
* PURPOSE      ==> ASSIGN TAGS TO REGISTERS
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND
         MACRO
&NAME    BEGIN &SUB
* MACRO        ==> BEGIN &SUB
* PARAMETERS   ==>  &SUB = NONE - NORMAL PHASE
*                   &SUB = SUB  - CALLED SUBROUTINE
* PURPOSE      ==> USED BY ASSEMBLER PHASES TO ESTABLISH REGISTER SAVE
*                  AREAS AND BY CALLED SUBROUTINES TO ESTABLISH RETURN
*                  LINKAGE AS WELL.
         DS    0H
&NAME    EQU   *
         AIF   ('&SUB' EQ 'SUB').ITSSUB
         BALR  R15,R0              IT'S A PHASE, LOAD R15
         USING *,R15               ADDRESSABILITY
         CNOP  0,4
         BAL   R13,*+4+(18*4)      NO CALLING PROG, FAKE IT
SAV$$RGP DC    18F'0'
         DROP  R15
         BALR  R15,R0              IT'S A PHASE, LOAD R15
.ITSSUB  ANOP
         USING *,R15               ADDRESSABILITY
         SAVE  (14,12)             STORE REG 14 THRU 12 IN CALLING PROG
         ST    R13,SAV$$REG+4      STORE R13 IN MY SAVE AREA
         MVC   8(4,R13),SAVADCON   PASS BACK ADDRESS OF MY SAVE AREA
         L     R13,SAVADCON        PUT ADDR OF MY SAVE AREA IN R13
         B     CONTIN$$
SAV$$REG DC    18F'0'
MAX$$RET DC    F'0'                USED TO STORE MAX RETURN CODE
SAVADCON DC    A(SAV$$REG)
         DS    0H
CONTIN$$ EQU   *
         DROP  R15
         MEND
         MACRO
         PRRTN &SKIP=12,&MARGIN=128
* MACRO      ==> PRRTN &SKIP=12,&MARGIN+128
* PARAMETERS ==>  &SKIP PAGE OVERFLOW ON CHANNEL 12 OR 9
*                 &MARGIN RIGHT MARGIN, DEFAULT = 128
* PURPOSE    ==> USED BY ASSEMBLER PROGRAMS TO SIMPLIFY PRINTING
* ****************************************************************
* THE PURPOSE OF THIS ROUTINE IS TO ENABLE AN ASSEMBLER PROGRAM TO
*  INCLUDE A STANDARD PRINT AND HEADING ROUTINE WITH A MINIMUM OF
*  CODING.
*   ROUTINE USES REGISTERS 10 AND 4 WITHOUT STORING CONTENTS
*   ROUTINE ASSUMES FOLLOWING FIELDS:
*      JOBNUMBR - THE JOB NUMBER OF THE REPORT
*      DATADATE - THE DATE OF THE DATA CONTAINED IN THE REPORT
*      HEAD1, HEAD2, HEAD3 - 3 132 POSITION PRINT LINE FOR HEADING
*        NOTE:     ROUTINE ASSUMES PRINT OVERFLOW ON CHANNEL 12. IF
*                  YOU WANT TO OVERFLOW ON ANOTHER CHANNEL # USE
*                  THE 'SKIP=' OPERAND
         DC    C'- '
PRNTR    DS    CL132
         DS    0H
WRITE    L     R13,=A(SAV$$REG)       ADDR OF MY REG SAVE AREA
         PUT   PRINT,PRNTR
         MVC   PRNTR,PRNTR-1
         PRTOV PRINT,&SKIP,OVFLOW
         BR    R10
OVFLOW   ST    R10,HOLD$10
         BAL   R4,HEADING
         L     R10,HOLD$10
         BR    R10
HOLD$10  DS    F
PRPAGE   DC    PL3'0'            PAGE #
PR$ONE   DC    P'1'
HEADING  EQU   *
         ST    R4,HOLD$R4
         CNTRL PRINT,SK,1
         L     R1,=A(HEAD1)
         MVC   PRNTR,0(R1)
         BAL   R10,WRITE
* RUN DATE / PAGE NUMBER
         MVC   PRNTR+4(9),=C'RUN DATE='
         COMRG
         MVC   PRNTR+13(8),0(R1)
         AP    PRPAGE,PR$ONE
         L     R1,=A(PRNTR)
         AH    R1,=H'&MARGIN'
         SH    R1,=H'19'
         MVC   0(12,R1),=C'PAGE NUMBER:'
         MVC   12(6,R1),=X'402020202021'
         ED    12(6,R1),PRPAGE
         BAL   R10,WRITE
* DATA DATE / REPORT ID
         L     R1,=A(DATADATE)
         CLI   0(R1),C'*'
         BE    *+20
         MVC   PRNTR+4(6),=C'AS OF='
         L     R1,=A(DATADATE)
         MVC   PRNTR+10(25),0(R1)
         L     R1,=A(PRNTR)
         AH    R1,=H'&MARGIN'
         SH    R1,=H'19'
         MVC   0(10,R1),=C'REPORT ID:'
         L     R4,=A(JOBNUMBR)
         MVC   11(8,R1),0(R4)
         BAL   R10,WRITE
         CNTRL PRINT,SP,2
         L     R1,=A(HEAD2)
         MVC   PRNTR,0(R1)
         BAL   R10,WRITE
         L     R1,=A(HEAD3)
         MVC   PRNTR,0(R1)
         BAL   R10,WRITE
         MVC   PRNTR,PRNTR-2
         BAL   R10,WRITE
         CNTRL PRINT,SP,2
         L     R4,HOLD$R4
         BR    R4
HOLD$R4  DS    F
* MACRO END PRRTN
         MEND
         EJECT
ZZ0051   START 0
* THE PURPOSE OF THIS PROGRAM IS TO READ A VSAM AIX FILE AND PRINT
* INFORMATION RELATING TO RECORD SIZE.
* REGISTER USAGE:
*     R3  = BASE
*     R4  = LINKAGE TO 'HEADING'
*     R7  = WORK
*     R10 = LINKAGE TO 'WRITE'
* RETURN CODES
*      0  = NORMAL EOJ
* CHANGE LOG:
* MM/DD/YY WHO    CHANGE
         PRINT NOGEN
         REGIS
         SPACE 2
* ACB TO ACCESS ALTERNATE INDEXES AS VARIABLE LENGTH KSDS FILE
ZZWRKDI  ACB   MACRF=(SEQ),EXLST=ZZEXLST
ZZEXLST  EXLST AM=VSAM,EODAD=ENDAIX
ZZAXRPL  RPL   ACB=ZZWRKDI,AREA=IWORK,AREALEN=32000,                   *
               OPTCD=(SEQ,KGE,MVE)
         SPACE 2
* PRINT DTF & PRMOD
PRINT    DTFPR DEVADDR=SYS009,IOAREA1=PRNTR,BLKSIZE=132,CONTROL=YES,   *
               DEVICE=PRT1,PRINTOV=YES,RECFORM=FIXUNB
         PRMOD DEVICE=PRT1,CONTROL=YES,PRINTOV=YES,RECFORM=FIXUNB
         SPACE 2
* REPORT HEADINGS
JOBNUMBR DC    CL8'ZZ0051'
DATADATE DC    CL25'*'
HEAD1    DC    CL132'             V S A M    A I X    A N A L Y S I S'
HEAD2    DC    CL132'   AIX          NUMBER OF '
HEAD3    DC    CL132'RECORD-SIZE    OCCURRENCES'
         SPACE 2
* 'RANGE' TABLE
*    1ST FIELD - FULLWORD WITH A VALUE 1 MORE THAN THE HIGHEST LENGTH
*                RECORD TO BE INCLUDED IN THIS RANGE.
*    2ND FIELD - 16 CHARACTER RANGE DESCRIPTION.
*    3RD FIELD - PACKED FIELD TO ACCUMULATE NUMBER OF OCCURRENCES.
         DS    0F     ALIGNMENT
TABLE    EQU   *
         DC    F'000101',CL16'    1 -   100',PL4'0'
         DC    F'000201',CL16'  101 -   200',PL4'0'
         DC    F'000301',CL16'  201 -   300',PL4'0'
         DC    F'000401',CL16'  301 -   400',PL4'0'
         DC    F'000501',CL16'  401 -   500',PL4'0'
         DC    F'001001',CL16'  501 -  1000',PL4'0'
         DC    F'001501',CL16' 1001 -  1500',PL4'0'
         DC    F'002001',CL16' 1501 -  2000',PL4'0'
         DC    F'002501',CL16' 2001 -  2500',PL4'0'
         DC    F'003001',CL16' 2501 -  3000',PL4'0'
         DC    F'003501',CL16' 3001 -  3500',PL4'0'
         DC    F'004001',CL16' 3501 -  4000',PL4'0'
         DC    F'004501',CL16' 4001 -  4500',PL4,0'
         DC    F'005001',CL16' 4501 -  5000',PL4'0'
         DC    F'010001',CL16' 5001 - 10000',PL4'0'
         DC    F'015001',CL16'10001 - 15000',PL4'0'
         DC    F'020001',CL16'15001 - 20000',PL4'0'
         DC    F'025001',CL16'20001 - 25000',PL4'0'
         DC    F'030001',CL16'25001 - 30000',PL4'0'
         DC    X'FFFFFFFF',CL16'       >30000',PL4'0'
         SPACE 2
* DSECT FOR ACCESSING 'TABLE'
DSECT1   DSECT
         USING *,R7
THIRANGE DS    F         USED TO CHECK RANGE
TRANGE   DS    CL16      RANGE DESCRIPTION
TCOUNT   DS    PL4       # OF OCCURRENCES IN THE RANGE
ZZ0051   CSECT
         EJECT
* HOUSEKEEPING
START    BEGIN
         BALR  R3,R0
         USING *,R3
         OPEN  PRINT,ZZWRKDI
         BAL   R4,HEADING          PRINT PAGE HEADING
* MAINLINE
GETAIX   L     R13,=A(SAV$$REG)
         GET   RPL=ZZAXRPL
         L     R1,=A(ZZAXRPL)
         L     R13,=A(SAV$$REG)
         SHOWCB RPL=(1),RECLEN=(0) GET LENGTH OF RECORD
         ST    R0,LENGTH           STORE LENGTH OF REC READ
         L     R7,=A(TABLE)        LOAD ADDRESS OF TABLE FOR DSECT
LOOP     CLC   LENGTH,THIRANGE     COMPARE RECORD LENGTH TO HI-RANGE
         BL    HIT                 FOUND IT
         LA    R7,24(R7)           INCREMENT TO NEXT TABLE ENTRY
         B     LOOP                GO CHECK RANGE
HIT      AP    TCOUNT,ONE          ADD OCCURRENCE
         L     R7,LENGTH           CONVERT  RECORD LENGTH
         CVD   R7,RECLENTH          ... TO PACKED DECIMAL
         CP    RECLENTH,LARGEREC   IS THIS RECORD THE LARGEST SO FAR?
         BNH   *+10                 ... NO
         ZAP   LARGEREC,RECLENTH    ... YES, THEN STORE IT
         CP    RECLENTH,SMALLREC   IS THIS RECORD THE SMALLEST SO FAR?
         BNL   *+10                 ... NO
         ZAP   SMALLREC,RECLENTH    ... YES, THEN STORE IT
         B     GETAIX              GO GET ANOTHER AIX RECORD
         SPACE 2
* END OF JOB PROCESSING
ENDAIX   EQU   *
         CLOSE ZZWRKDI
         L     R7,=A(TABLE-24)     LOAD ADDRESS FOR DSECT USE
LOOOPA   EQU   *
         LA    R7,24(R7)           INCREMENT TO NEXT TABLE ENTRY
         MVC   PRNTR(16),TRANGE
         MVC   PRNTR+18(L'EDIT),EDIT
         ED    PRNTR+18(L'EDIT),TCOUNT
         AP    TOTAL,20(4,R7)
         BAL   R10,WRITE
         CLI   THIRANGE,X'FF'      HAVE I GONE THRU ENTIRE TABLE?
         BNE   LOOPA               NO
         MVC   PRNTR+5(9),=C'TOTAL ==>'
         MVC   PRNTR+18(L'EDIT),EDIT
         ED    PRNTR+18(L'EDIT),TOTAL
         CNTRL PRINT,SP,2
         BAL   R10,WRITE
         MVC   PRNTR+3(13),=C'RECORD SIZES:'
         CNTRL PRINT,SP,2
         BAL   R10,WRITE
         MVC   PRNTR+5(12),=C'SMALLEST ==>'
         MVC   PRNTR+18(L'EDIT),EDIT
         ED    PRNTR+18(L'EDIT),SMALLREC    SMALLEST RECORD
         BAL   R10,WRITE
         MVC   PRNTR+5(12),=C'LARGEST  ==>'
         MVC   PRNTR+18(L'EDIT),EDIT
         ED    PRNTR+18(L'EDIT),LARGEREC    LARGEST RECORD
         BAL   R10,WRITE
         CLOSE PRINT
         EOJ   RC=0
         SPACE 2
* COMMON PRINT ROUTINE
         PRRTN MARGIN=50
         EJECT
* CONSTANTS AND WORK AREAS
         LTORG
RECLENTH DS    D                   RECORD LENGTH (PACKED DECIMAL)
LENGTH   DS    F
ONE      DC    P'1'
TOTAL    DC    PL4'0'
SMALLREC DC    PL4'9999999'        SMALLEST RECORD SIZE
LARGEREC DC    PL4'0'              LARGEST RECORD SIZE
EDIT     DC    X'4020202020202021'
IWORK    DS    0CL32000
         ORG   IWORK+32000
         END   START
*END PRINT        336 RECORDS


Angelo Sileo
Manager Technical Services
Patrick Media Group (USA)                        c Angelo Sileo 1991

