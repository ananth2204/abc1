Printing keys from a KSDS

This is an Assembler program that will process a KSDS and
report the physical CI and CA number for all keys processed.
This output may be useful in determining volatile key ranges.

By default, all the keys from the input object will be printed.
To print a range, an optional job step parameter must be
provided. The parameter specifies the start and stop record
numbers, expressed as 9-digit integers. The input object may
not contain spanned records because LOCATE mode
processing is performed.

VSAMKEYP TITLE 'PROGRAM FOR PRINTING RBA, CA #, CI # AND KEY'
         PRINT NOGEN
         SPACE 1
*        SUGGESTED JCL - TO PRINT ALL KEYS (BY DEFAULT)
         SPACE 1
*        //       EXEC PGM=VSAMKEYP
*        //SYSUDUMP DD SYSOUT=*
*        //SYSPRINT DD SYSOUT=*
*        //VSAM     DD DSN=CLUSTER.NAME,DISP=SHR
         SPACE 1
*        SUGGESTED JCL - TO PRINT A RANGE OF KEYS
         SPACE 1
*        //       EXEC PGM=VSAMKEYP,PARM='000000001000000010'
*        //SYSUDUMP DD SYSOUT=*
*        //SYSPRINT DD SYSOUT=*
*        //VSAM     DD DSN=CLUSTER.NAME,DISP=SHR
         SPACE 1
*        THIS WILL CAUSE THE FIRST 10 KEYS FROM THE NAMED CLUSTER TO
*        BE PRINTED.
         TITLE 'MACROS, DSECTS AND CONTROL BLOCKS USED'
*        ABEND                          ABEND THE PROGRAM
*        ACB                            ACCESS METHOD CONTROL BLOCK
*        CLOSE                          CLOSE FILE(S)
*        DCB                            DATA CONTROL BLOCK
*        DCBD (IHADCB)                  DCB DSECT MAPPING
*        EXLST                          EXIT LIST
*        FREEMAIN                       RELEASE STORAGE
*        FREEPOOL                       RELEASE BUFFER POOL
*        GET - VSAM                     ACCESS A RECORD
*        GETMAIN                        ACQUIRE STORAGE
*        IDAAMB                         AMB DSECT MAPPING
*        IDAAMBL                        AMBL DSECT MAPPING
*        IDAAMDSB                       AMDSB DSECT MAPPING
*        IEFJFCBN                       JFCB MAPPING
*        IFGACB                         ACB DSECT MAPPING
*        OPEN                           PREPARE FILE(S) FOR PROCESSING
*        PUT - QSAM                     WRITE A RECORD
*        RDJFCB                         READ SPECIFIC JFCB
*        RPL                            REQUEST PARAMETER LIST
*        SHOWCB                         OBTAIN DATA FOR VSAM OBJECT
*        TESTCB                         TEST A VSAM CONTROL BLOCK
*        WTO                            WRITE TO OPERATOR
         SPACE 2
*        REGISTER EQUATES
         SPACE 1

Editor's note: register equates go here.

         TITLE 'PROGRAM INITIALIZATION CODE'
*        1.    PROGRAM PROLOG
*        2.    PROCESS THE JOB STEP PARAMETER, IF PRESENT
*        3.    PROGRAM INITIALIZATION
*        4.    MAIN PROCESSING
*        5.    PROGRAM TERMINATION
*        6.    PROGRAM EPILOG
*
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        10                             . BRANCH AND SAVE
*        12                             . CSECT BASE REGISTER
*        13                             . -> SAVE AREA
*        14                             . -> RETURN
*        15                             . -> ENTRY POINT
         SPACE 2
VSAMKEYP CSECT
         STM   R14,R12,12(R13)          . SAVE CALLER'S REGISTERS
         LR    R12,R15                  . LOAD 12 AS PROGRAM BASE
         USING VSAMKEYP,R12             . ESTABLISH ADDRESSABILITY
         GETMAIN R,                     . GETMAIN FOR SAVE AREA        C
               LV=72
         ST    R13,4(,R1)               . BACKWARD SAVE AREA ->
         ST    R1,8(,R13)               . FORWARD SAVE AREA ->
         LR    R13,R1                   . 13 -> PROGRAM'S SAVE AREA
         BAS   R10,JOBPARM              . PROCESS JOB STEP PARAMETER
         BAS   R10,INITIAL              . PROGRAM INITIALIZATION
         BAS   R10,PROCESS              . MAIN PROCESSING
         BAS   R10,TERMIN               . TERMINATION PROCESSING
         LR    R2,R13                   . 2 -> SAVE AREA
         L     R13,4(,R13)              . 13 -> CALLER'S SAVE AREA
         FREEMAIN R,                    . FREEMAIN SAVE AREA           C
               A=(R2),                                                 C
               LV=72
         L     R14,12(,R13)             . 14 -> RETURN
         SLR   R15,R15                  . 15 - ZERO
         LM    R0,R12,20(R13)           . RESTORE 0 - 12
         BR    R14                      . RETURN
         TITLE 'CODE PROCESSING THE OPTIONAL JOB STEP PARAMETER'
*        1.    ACCESS CALLER'S SAVE AREA
*        2.    CHECK LENGTH OF JOB STEP PARAMETER
*        3.    IF NO JOB STEP PARAMETER - DEFAULT TO ALL
*        4.    IF JOB STEP PARAMETER PRESENT, EDIT FOR NUMERIC
*        5.    IF JOB STEP PARAMETER NOT NUMERIC - DEFAULT TO ALL
*        6.    SAVE RANGE OF LOGICAL RECORD NUMBERS TO PROCESS
*
*        REGISTER USAGE
*        1                              . WORK
*        10                             . BRANCH AND SAVE
         SPACE 2
JOBPARM  EQU   *
         MVI   PARM,OFF                 . SWITCH OFF PARAMETER SWITCH
         L     R1,4(,R13)               . 1 -> CALLER'S SAVE AREA
         L     R1,24(,R1)               . 1 -> ADDRESS OF PARAMETER
         L     R1,0(,R1)                . 1 -> JOB STEP PARAMETER
         OC    0(2,R1),0(R1)            . Q. PARAMETER PRESENT?
         BZR   R10                      . A. NO - EXIT
         MVC   TEST(18),ZEROS           . EDIT PARAMETER FOR NUMERIC
         MVZ   TEST(18),2(R1)
         CLC   TEST(18),ZEROS           . Q. ZONE BYTES ALL 'F'?
         BNE   B0001                    . A. NO - ABEND
         PACK  FROM#(5),2(9,R1)         . SAVE STARTING RECORD NUMBER
         PACK  TO#(5),11(9,R1)          . SAVE ENDING RECORD NUMBER
         MVI   PARM,ON                  . INDICATE VALID PARAMETER
         BR    R10                      . EXIT
B0001    EQU   *
*                                       . NON-NUMERIC PARAMETER
         WTO   'NON NUMERIC JOB STEP PARAMETER ENTERED',               C
               ROUTCDE=11
         ABEND 100,                                                    C
               DUMP
         TITLE 'CODE PROCESSING JFCB, FILE OPENS, ETC'
*        1.    ISSUE READ JFCB
*        2.    OPEN FILES AND CHECK OPENS
*        3.    CHECK FOR NON-SPANNED KSDS BEING INPUT
*        4.    ISSUE SHOWCB AND ACCESS VSAM CONTROL BLOCKS TO OBTAIN
*              CI SIZE, KEY LENGTH, RELATIVE KEY POSITION
*        5.    COMPUTE BYTES PER CA
*        6.    INITIALIZE DATA AREAS
*
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        2                              . -> ACB
*                                       . -> DCB
*                                       . -> AMBL
*                                       . -> AMB
*                                       . -> AMDSB
*                                       . COMPUTATION
*        3                              . COMPUTATION
*        4                              . KEY LENGTH
*        10                             . BRANCH AND SAVE
         SPACE 2
INITIAL  EQU   *
         RDJFCB DUMMY                   . ISSUE RDJFCB
         LTR   R15,R15                  . Q. RDJFCB SUCCESSFUL?
         BNZ   C0001                    . A. NO
         MVC   DSNTITLE,JFCBDSNM        . SAVE DSNAME
C0001    EQU   *
         OPEN  (VSAM,,SYSPRINT,OUTPUT)
         LTR   R15,R15                  . Q. OPENS OKAY?
         BZ    C0002                    . A. YES
         USING IFGACB,R2                . ACB DSECT ADDRESSABILITY
         LA    R2,VSAM                  . 2 -> VSAM ACB
         TM    ACBOFLGS,ACBOPEN         . Q. VSAM OPEN OKAY?
         BNO   C0003                    . A. NO
         DROP  R2                       . DSECT NOT REQUIRED
         USING IHADCB,R2                . DCB DSECT ADDRESSABILITY
         LA    R2,SYSPRINT              . 2 -> SYSPRINT DCB
         TM    DCBOFLGS,DCBOFOPN        . Q. SYSPRINT OPEN OKAY?
         BNO   C0004                    . A. NO - OPEN FAILED
         DROP  R2                       . DCB DSECT NOT REQUIRED
C0002    EQU   *
*                                       . CHECK FOR SPANNED RECORDS
*                                       . BEING PERMITTED ON OBJECT
*
         TESTCB ACB=VSAM,               . Q. SPANNED RECORDS ALLOWED?  C
               ATRB=SPAN
         BE    C0005                    . A. YES - TERMINATE PROCESSING
*                                       . DETERMINE TYPE OF OBJECT
         TESTCB ACB=VSAM,               . Q. INPUT A KSDS?             C
               ATRB=KSDS
         BNE   C0006                    . A. NO - TERMINATE PROCESSING
*                                       . DETERMINE KEY LENGTH,
*                                       .   RELATIVE KEY POSITION AND
*                                       .   CI SIZE FOR DATA COMPONENT
         SHOWCB ACB=VSAM,                                              C
               AREA=#KEY,                                              C
               FIELDS=(KEYLEN,RKP,CINV),                               C
               LENGTH=12
*                                       . COMPUTE BYTES PER CA
         LA    R2,VSAM                  . 2 -> ACB
         USING IFGACB,R2                . DSECT ADDRESSABILITY
         L     R2,ACBAMBL               . 2 -> AMBL
         DROP  R2
         USING IDAAMBL,R2               . DSECT ADDRESSABILITY
         L     R2,AMBLDTA               . 2 -> DATA COMPONENT AMB
         DROP  R2
         USING IDAAMB,R2                . DSECT ADDRESSABILITY
         L     R2,AMBDSB                . 2 -> AMDSB
         DROP  R2
         USING IDAAMDSB,R2              . DSECT ADDRESSABILITY
         LH    R3,AMDCIPCA              . 3 - CIS PER CA
         DROP  R2
         M     R2,CISZ                  . MULTIPLY BY CI SIZE
         ST    R3,CASZ                  . SAVE BYTES PER CA
*                                       . INITIALIZE DATA FIELDS
         MVI   OUTKEY,C' '              . OUTPUT KEY FIELD
         MVC   OUTKEY+1(L'OUTKEY-1),OUTKEY
         XC    OLDRBA,OLDRBA            . RBA SAVE AREA
         ZAP   #PAGE,=P'+1'
         ZAP   #LINE,=P'+60'
         ZAP   #READ,=P'+0'
         ZAP   #PRINT,=P'+0'
*                                       . MAX OF 101 BYTES OF KEY IS
*                                       .   PRINTED.  R4 USED FOR
*                                       .   EXECUTED MOVE OF KEY
         L     R4,#KEY                  . 4 - KEY LENGTH
         BCTR  R4,R0                    . DECREMENT BY ONE
         CH    R4,=H'+100'              . Q. KEY MORE THAN 101 BYTES?
         BNHR  R10                      . A. NO - EXIT
         LA    R4,100                   . MAXIMUM 101 BYTES ALLOWED
         BR    R10                      . EXIT
         TITLE 'INITIAL PROCESSING - ERRORS'
C0003    EQU   *
*                                       . OPEN FAILURE VSAM
         ST    R15,REG15                . SAVE 15
         WTO   'OPEN FAILURE FOR FILE VSAM',                           C
               ROUTCDE=11
*
         SHOWCB ACB=VSAM,               . OBTAIN ACB ERROR CODE        C
               AREA=OPENERR,                                           C
               FIELDS=ERROR,                                           C
               LENGTH=4
         LM    R2,R3,VSAMERR            . 2 - 3 VSAM ERROR CODES
         ABEND 101,                     . ABEND THE TASK               C
               DUMP
         SPACE 2
C0004    EQU   *
*                                       . OPEN FAILURE SYSPRINT
         WTO   'OPEN FAILURE FOR FILE SYSPRINT',                       C
               ROUTCDE=11
         LR    R2,R13                   . 2 -> SAVE AREA
         L     R13,4(,R13)              . 13 -> CALLER'S SAVE AREA
         FREEMAIN R,                    . FREEMAIN OF SAVE AREA        C
               A=(R2),                                                 C
               LV=72
         L     R14,12(,R13)             . 14 -> RETURN ADDRESS
         LA    R15,10                   . 15 - RETURN CODE
         LM    R0,R12,20(R13)           . RESTORE 0 - 12
         BR    R14                      . RETURN
         SPACE 2
C0005    EQU   *
*                                       . ACB PERMITS SPANNED RECORDS
         WTO   'OBJECT PERMITS SPANNED RECORDS',                       C
               ROUTCDE=11
         LR    R2,R13                   . 2 -> SAVE AREA
         L     R13,4(,R13)              . 13 -> CALLER'S SAVE AREA
         FREEMAIN R,                    . FREEMAIN OF SAVE AREA        C
               A=(R2),                                                 C
               LV=72
         L     R14,12(,R13)             . 14 -> RETURN ADDRESS
         LA    R15,20                   . 15 - RETURN CODE
         LM    R0,R12,20(R13)           . RESTORE 0 - 12
         BR    R14                      . RETURN
         SPACE 2
C0006    EQU   *
*                                       . ONLY KSDS PERMITTED
         WTO   'ONLY KSDS OBJECTS PERMITTED',  ,                       C
               ROUTCDE=11
         LR    R2,R13                   . 2 -> SAVE AREA
         L     R13,4(,R13)              . 13 -> CALLER'S SAVE AREA
         FREEMAIN R,                    . FREEMAIN OF SAVE AREA        C
               A=(R2),                                                 C
               LV=72
         L     R14,12(,R13)             . 14 -> RETURN ADDRESS
         LA    R15,30                   . 15 - RETURN CODE
         LM    R0,R12,20(R13)           . RESTORE 0 - 12
         BR    R14                      . RETURN
         TITLE 'MAIN PROCESSING LOGIC OF PROGRAM'
*        1.    GET THE NEXT LOGICAL RECORD
*        2.    IF JOB STEP PARAMETER SPECIFIED, DETERMINE IF IN
*              REQUIRED RANGE
*        3.    DETERMINE THE RBA OF THE RECORD READ
*        4.    CHECK FOR HEADING REQUIREMENTS
*        5.    FORMAT AND OUTPUT DETAIL LINE
*        6.    PROCESS NEXT RECORD
*
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        2                              . COMPUTATION
*        3                              . COMPUTATION
*        4                              . KEY LENGTH
*        10                             . BRANCH AND SAVE
         SPACE 2
PROCESS  EQU   *
         ST    R10,DSAVE                . SAVE 10
D0001    EQU   *
         GET   RPL=GETRPL               . GET THE NEXT RECORD
         LTR   R15,R15                  . Q. VSAM GET OKAY?
         BNZ   D0005                    . A. NO - GET FAILED
         AP    #READ,=P'+1'             . INCREMENT RECORDS READ
         CLI   PARM,ON                  . Q. VALID JOB STEP PARAMETER?
         BNE   D0002                    . A. NO - PRINT THE RECORD
         CP    #READ,FROM#              . Q. BEFORE START OF RANGE?
         BL    D0001                    . A. YES - READ NEXT RECORD
         CP    #READ,TO#                . Q. BEYOND END OF RANGE?
         BH    D0004                    . A. YES - TERMINATE PROCESSING
D0002    EQU   *
         SHOWCB RPL=GETRPL,             . DETERMINE RBA OF RECORD      C
               AREA=RECRBA,                                            C
               FIELDS=RBA,                                             C
               LENGTH=4
         CP    #LINE,=P'+57'            . Q. HEADINGS REQUIRED?
         BL    D0003                    . A. NO
         BAS   R10,HEADING              . OUTPUT HEADINGS
D0003    EQU   *
*                                       . FORMAT DETAIL LINE
         MVC   OUTRBA,MASK9             . OUTPUT RBA
         L     R3,RECRBA
         CVD   R3,WORKD
         ED    OUTRBA,WORKD+3
         SLR   R2,R2                    . COMPUTE CA NUMBER
         D     R2,CASZ
         LA    R3,1(,R3)
         MVC   OUTCA#,MASK5             . OUTPUT CA NUMBER
         CVD   R3,WORKD
         ED    OUTCA#,WORKD+5
         SRDA  R2,32(R0)                . COMPUTE CI NUMBER
         D     R2,CISZ
         LA    R3,1(,R3)
         MVC   OUTCI#,MASK5             . OUTPUT CI NUMBER
         CVD   R3,WORKD
         ED    OUTCI#,WORKD+5
*                                       . CHECK FOR ASCENDING RBA
         MVI   OUTSEQ,C' '              . INITIALIZE OUTPUT AREA
         CLC   RECRBA,OLDRBA            . Q. ASCENDING RBA SEQUENCE?
         BNL   *+8                      . A. YES
         MVI   OUTSEQ,C'*'              . A. NO - INDICATE
*                                       . FORMAT KEY VALUE
         L     R2,@REC                  . 2 -> RECORD
         L     R3,RKP                   . 3 - RELATIVE KEY POSITION
         LA    R2,0(R3,R2)              . 2 -> KEY VALUE
         EX    R4,MVC                   . MOVE KEY DATA
         TR    OUTKEY,PRTBL             . MAKE PRINTABLE
         PUT   SYSPRINT,                . OUTPUT DETAIL LINE           C
               OUTLINE
         AP    #LINE,=P'+1'             . INCREMENT LINE ACCUMULATOR
         AP    #PRINT,=P'+1'            . INCREMENT PRINT ACCUMULATOR
         B     D0001                    . PROCESS NEXT RECORD
D0004    EQU   *
         L     R10,DSAVE                . RESTORE 10
         BR    R10                      . EXIT
MVC      MVC   OUTKEY(0),0(R2)          . EXECUTED MOVE OF KEY VALUE
         TITLE 'MAIN PROCESSING - ACCESS ERROR'
D0005    EQU   *
*                                       . GET FAILURE VSAM
         ST    R15,REG15                . SAVE 15
         WTO   'GET FAILURE FOR FILE VSAM',                            C
               ROUTCDE=11
         SHOWCB RPL=GETRPL,             . OBTAIN RPL FEED BACK CODE    C
               AREA=RPLFDBK,                                           C
               FIELDS=FDBK,                                            C
               LENGTH=4
         LM    R2,R4,VSAMERR            . 2 - 4 VSAM ERROR CODES
         ABEND 102,                     . ABEND THE TASK               C
               DUMP
         TITLE 'END OF PROCESSING ROUTINE'
*        1.    OUTPUT TOTALS
*        2.    CLOSE FILES
*
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        10                             . BRANCH AND SAVE
         SPACE 2
TERMIN   EQU   *
         ST    R10,ESAVE                . SAVE 10
         BAS   R10,HEADING
         MVC   OUTPRNT,MASK9            . OUTPUT KEYS PRINTED
         ED    OUTPRNT,#PRINT
         PUT   SYSPRINT,                                               C
               TOTLINE
         CLOSE (VSAM,,SYSPRINT)         . CLOSE FILES
         FREEPOOL SYSPRINT              . FREE BUFFER POOL
         L     R10,ESAVE                . RESTORE 10
         BR    R10                      . EXIT
         TITLE 'REPORT PAGE HEADING ROUTINE'
HEADING  EQU   *
         SPACE 1
*        1.    OUTPUT PAGE NUMBER
*        2.    OUTPUT HEADING
*        3.    OUTPUT SUB-HEADING
*        4.    ADJUST ACCUMULATORS
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        10                             . BRANCH AND SAVE
         SPACE 2
         MVC   PAGEOUT,MASK5            . FORMAT PAGE NUMBER
         ED    PAGEOUT,#PAGE
         PUT   SYSPRINT,                . OUTPUT HEADINGS              C
               TITLE
         PUT   SYSPRINT,                                               C
               STITLE1
         AP    #PAGE,=P'+1'             . INCREMENT PAGE NUMBER
         ZAP   #LINE,=P'+3'             . RESET LINES ON PAGE
         BR    R10                      . EXIT
         TITLE 'DATA AREAS'
WORKD    DS    D                        . DOUBLE WORD FOR CVD
@REC     DS    F                        . ADDRESS OF RECORD READ
DSAVE    DS    F                        . REGISTER SAVE AREA
ESAVE    DS    F                        . REGISTER SAVE AREA
#KEY     DS    F                        . KEY LENGTH - SHOWCB
RKP      DS    F                        . RKP        - SHOWCB
CISZ     DS    F                        . CI SIZE    - SHOWCB
CASZ     DS    F                        . CA SIZE IN BYTES
OLDRBA   DS    F                        . PREVIOUS RECORD'S RBA
RECRBA   DS    F                        . RECORD'S RBA - SHOWCB
VSAMERR  DS    0F                       . VSAM ERROR FIELDS
REG15    DS    F                        . CONTENT OF R15
OPENERR  DS    F                        . ACB ERROR CODE
RPLFDBK  DS    F                        . RPL FEED BACK CODE
#READ    DS    PL5                      . RECORDS READ ACCUMULATOR
#PRINT   DS    PL5                      . RECORDS PRINTED ACCUMULATOR
FROM#    DS    PL5                      . RANGE START
TO#      DS    PL5                      . RANGE END
#LINE    DS    PL2                      . LINES PRINTED ACCUMULATOR
#PAGE    DS    PL3                      . PAGES PRINTED ACCUMULATOR
PARM     DS    CL1                      . STEP PARAMETER SWITCH
ON       EQU   X'01'                    . LOGICAL ON
OFF      EQU   X'00'                    . LOGICAL OFF
TEST     DS    CL18                     . NUMERIC TEST WORK AREA
ZEROS    DC    18C'0'                   . NUMERIC TEST SEED VALUE
MASK5    DC    XL6'402020202120'        . EDIT MASK
MASK9    DC    XL10'40202020202020202120'
TITLE    DC    CL23'1'
         DC    CL42'RBA AND KEY CONTENT LISTING OF DATASET: '
DSNTITLE DC    CL44' '
         DC    CL11' '
         DC    CL4'PAGE'
PAGEOUT  DS    CL6
         DC    CL3' '
STITLE1  DC    CL133'0        RBA        CA#   CI#   KEY'
OUTLINE  DC    CL2' '
OUTRBA   DS    CL10
         DC    CL2' '
OUTSEQ   DS    CL1
         DC    CL2' '
OUTCA#   DS    CL6
OUTCI#   DS    CL6
         DC    CL3' '
OUTKEY   DS    CL101
TOTLINE  DC    CL23'0   TOTAL KEYS PRINTED:'
OUTPRNT  DS    CL10
         DC    CL100' '
         TITLE 'TRANSLATE TABLES'
PRTBL    DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'404B4B4B4B4B4B4B4B4B4A4B4C4D4E4F'
         DC    X'504B4B4B4B4B4B4B4B4B5A5B5C5D5E5F'
         DC    X'60614B4B4B4B4B4B4B4B4B6B6C6D6E6F'
         DC    X'4B4B4B4B4B4B4B4B4B4B7A7B7C7D7E7F'
         DC    X'4B8182838485868788894B4B4B4B4B4B'
         DC    X'4B9192939495969798994B4B4B4B4B4B'
         DC    X'4B4BA2A3A4A5A6A7A8A94B4B4B4B4B4B'
         DC    X'4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B4B'
         DC    X'4BC1C2C3C4C5C6C7C8C94B4B4B4B4B4B'
         DC    X'4BD1D2D3D4D5D6D7D8D94B4B4B4B4B4B'
         DC    X'4B4BE2E3E4E5E6E7E8E94B4B4B4B4B4B'
         DC    X'F0F1F2F3F4F5F6F7F8F94B4B4B4B4B4B'
         TITLE 'CONTROL BLOCKS'
VSAM     ACB   AM=VSAM,                 . VSAM ACB                     C
               DDNAME=VSAM,                                            C
               EXLST=EXITLST,                                          C
               MACRF=(KEY,SEQ)
GETRPL   RPL   ACB=VSAM,                . RPL TO READ VSAM             C
               AM=VSAM,                                                C
               AREA=@REC,                                              C
               AREALEN=4,                                              C
               OPTCD=(KEY,SEQ,LOC)
EXITLST  EXLST EODAD=D0004              . EXIT LIST FOR VSAM
SYSPRINT DCB   BLKSIZE=15428,           . SYSPRINT DCB                 C
               DDNAME=SYSPRINT,                                        C
               DSORG=PS,                                               C
               LRECL=133,                                              C
               MACRF=PM,                                               C
               RECFM=ABFS
DUMMY    DCB   DDNAME=VSAM,             . DUMMY DCB FOR RDJFCB         C
               DSORG=PS,                                               C
               EXLST=DCBEXIT,                                          C
               MACRF=GM
         DS    0F                       . FULL WORD ALIGN DCB EXIT
DCBEXIT  DC    X'87'                    . READ JFCB
         DC    AL3(INFMJFCB)
         IEFJFCBN                       . JFCB MAPPING
         TITLE 'DUMMY SECTIONS'
         DCBD  DEVD=DA,                 . DCB MAPPING DSECT            C
               DSORG=PS
         IFGACB                         . ACB MAPPING DSECT
IDAAMBL  DSECT                          . AMBL MAPPING DSECT
         DS    XL52
AMBLDTA  DS    F
IDAAMB   DSECT                          . AMB MAPPING DSECT
         DS    XL20
AMBDSB   DS    F
IDAAMDSB DSECT                          . AMDSB MAPPING DSECT
         DS    XL12
AMDCIPCA DS    H
         TITLE 'LITERALS AND TERMINATION'
VSAMKEYP CSECT                          . RE-ESTABLISH CSECT
         LTORG
         END

Dave Loveluck
Instructor/Consultant (USA)                         c Dave Loveluck 1992

