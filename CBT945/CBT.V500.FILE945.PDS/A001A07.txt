Building a VSAM alternate index

Operating system and other pre-requisites for all the utilities:

o      MVS - DFP 2.3

o      CICS/VS - 1.7, 2.1

o      The VSAM programs are written for DFP 2.3, and some
      are release dependent.  The release dependency is due to
      the inclusion of the AMBL, the AMB, and the AMDSB
      macros.  The macros for defining these DSECTs are not
      usually available.


AIXBLD1.COB

This is a COBOL II program that will build a VSAM alternate
index from a KSDS.  The code illustrates the method for
building a UNIQUE alternate index.  The program uses the
standard COBOL internal sort verb.  This program replaces the
BLDINDEX command.

       IDENTIFICATION DIVISION.
       PROGRAM-ID. AIXBLD.
      *
      *            THIS PROGRAM WILL BUILD A UNIQUE ALTERNATE
      *            INDEX FROM A BASE KSDS
      *
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT VSAMKSDS ASSIGN      VSAMKSDS
                                  ORGANIZATION INDEXED
                                  ACCESS SEQUENTIAL
                                  RECORD VSAMKSDS-KEY
                                  FILE STATUS WS-VSAMKSDS
                                              WS-VSAMKSDS-EXT.
           SELECT VSAMAIX  ASSIGN      VSAMAIX
                                  ORGANIZATION INDEXED
                                  ACCESS SEQUENTIAL
                                  RECORD VSAMAIX-KEY.
           SELECT SORTFILE ASSIGN UT-S-SORTFILE.
      /            DATA DIVISION - FILE SECTION
       DATA DIVISION.
       FILE SECTION.
       FD  VSAMKSDS                 RECORD 120
                                    LABEL RECORDS STANDARD.
       01  VSAMKSDS-REC.
           03  VSAMKSDS-KEY         PIC  X(09).
           03  FILLER               PIC  X(11).
           03  VSAMKSDS-AKEY        PIC  X(08).
           03  FILLER               PIC  X(92).
           SKIP2
       FD  VSAMAIX                  RECORD 22
                                    LABEL RECORDS STANDARD.
       01  VSAMAIX-REC.
           03  FILLER               PIC  X(05).
           03  VSAMAIX-KEY          PIC  X(08).
           03  VSAMAIX-RELKEY       PIC  X(09).
           SKIP2
       SD  SORTFILE                 RECORD 22.
       01  SORTFILE-REC.
           03  SORTFILE-CONTROL.
               05  SORTFILE-KSDS    PIC  X(01).
               05  SORTFILE-PKL     PIC  X(01).
               05  SORTFILE-OCC     PIC S9(04)     COMP.
               05  SORTFILE-AKL     PIC  X(01).
           03  SORTFILE-KEY         PIC  X(08).
           03  SORTFILE-RELKEY      PIC  X(09).
      /            DATA DIVISION - WORKING-STORAGE SECTION
       WORKING-STORAGE SECTION.
           SKIP1
       01  WS-FILE-STATI.
           03  WS-VSAMKSDS          PIC  X(02).
       01  WS-FILE-STATI-EXT.
           03  WS-VSAMKSDS-EXT.
               05  WS-VSAMKSDS-RC   PIC S9(04)     COMP.
               05  WS-VSAMKSDS-FC   PIC S9(04)     COMP.
               05  WS-VSAMKSDS-FB   PIC S9(04)     COMP.
           SKIP1
       01  WS-FLAGS-ET-ALIA.
           03  WS-EOF               PIC  X(01).
               88  EOF-ERROR                                 VALUE '2'.
               88  EOF                                       VALUE '1'.
               88  NOT-EOF                                   VALUE '0'.
           03  WS-COMP-01           PIC S9(04)     COMP      VALUE +1.
           03  FILLER               REDEFINES WS-COMP-01.
               05  FILLER           PIC  X(01).
               05  WS-HEX-01        PIC  X(01).
           03  WS-COMP-2057         PIC S9(04)     COMP     VALUE 2057.
           03  FILLER               REDEFINES WS-COMP-2057.
               05  WS-HEX-08        PIC  X(01).
               05  WS-HEX-09        PIC  X(01).
      /            PROCEDURE DIVISION - MAIN CONTROL
           SKIP1
       PROCEDURE DIVISION.
           SKIP1
       A100-MAIN-CONTROL SECTION.
           SKIP1
           PERFORM B100-INITIALIZE.
           PERFORM B200-PROCESS.
           PERFORM B300-TERMINATE.
           STOP RUN.
      /               THIS SECTION PERFORMS
      *                   INITIALIZATION OF WORKING STORAGE
      *                   OPENING OF FILES, READ FIRST INPUT RECORD
           SKIP2
       B100-INITIALIZE SECTION.
           SKIP1
           SET NOT-EOF              TO TRUE.
           MOVE ALL '0'             TO WS-FILE-STATI.
           OPEN INPUT VSAMKSDS.
           IF  WS-FILE-STATI NOT     = ALL '0'
               DISPLAY 'OPEN ERROR OCCURRED - FILE'
               PERFORM Z100-FILE-ERROR
           END-IF.
           PERFORM R100-VSAMKSDS.
      /               THIS SECTION PERFORMS
      *                   PROGRAM MAIN PROCESSING
           SKIP2
       B200-PROCESS SECTION.
           SKIP1
           SORT SORTFILE
               ASCENDING SORTFILE-KEY
               INPUT  PROCEDURE C100-E15-INPUT
               GIVING VSAMAIX.
           IF  SORT-RETURN NOT       = +0
               SET EOF-ERROR        TO TRUE
           END-IF.
      /               THIS SECTION PERFORMS
      *                   PROGRAM TERMINATION PROCESSING
           SKIP2
       B300-TERMINATE SECTION.
           SKIP1
           CLOSE VSAMKSDS.
           IF  WS-FILE-STATI NOT     = ALL '0'
               DISPLAY 'CLOSE ERROR OCCURRED - FILE'
               PERFORM Z100-FILE-ERROR.
           IF  EOF
               MOVE +0              TO RETURN-CODE
           ELSE
               MOVE +16             TO RETURN-CODE
           END-IF.
      /               THIS SECTION PERFORMS
      *                   THE CONTROLLING OF THE E15 (INPUT) EXIT
      *                       FORMAT THE SORT RECORD
      *                       RELEASING THE RECORD TO THE SORT
      *                       READING THE NEXT KSDS RECORD
           SKIP2
       C100-E15-INPUT SECTION.
           SKIP1
           PERFORM UNTIL NOT NOT-EOF
               MOVE WS-HEX-01       TO SORTFILE-KSDS
               MOVE WS-HEX-09       TO SORTFILE-PKL
               MOVE WS-COMP-01      TO SORTFILE-OCC
               MOVE WS-HEX-08       TO SORTFILE-AKL
               MOVE VSAMKSDS-KEY    TO SORTFILE-RELKEY
               MOVE VSAMKSDS-AKEY   TO SORTFILE-KEY
               RELEASE SORTFILE-REC
               PERFORM R100-VSAMKSDS
           END-PERFORM.
      /               THIS SECTION PERFORMS
      *                   THE PROCESSING OF THE INPUT KSDS
           SKIP2
       R100-VSAMKSDS SECTION.
           SKIP1
           READ VSAMKSDS
               END
               SET EOF              TO TRUE
               MOVE '00'            TO WS-VSAMKSDS.
           IF  WS-VSAMKSDS NOT       = '00'
               DISPLAY 'READ ERROR OCCURRED - FILE'
               PERFORM Z100-FILE-ERROR
           END-IF.
      /               THIS SECTION PERFORMS
      *                   DISPLAYS FOR FILE STATUS ERRORS
           SKIP2
       Z100-FILE-ERROR SECTION.
           SKIP1
           SET EOF-ERROR            TO TRUE.
           IF  WS-VSAMKSDS NOT       = '00'
               DISPLAY 'INPUT VSAM KSDS     ' WS-VSAMKSDS
               DISPLAY 'VSAM RETURN CODE    ' WS-VSAMKSDS-RC
               DISPLAY 'VSAM FUNCTION CODE  ' WS-VSAMKSDS-FC
               DISPLAY 'VSAM FEED BACK CODE ' WS-VSAMKSDS-FB
               MOVE +16             TO SORT-RETURN
           END-IF.

Dave Loveluck
Instructor/Consultant (USA)            c Dave Loveluck 1991

