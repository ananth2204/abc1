VSAM volume dataset manipulation

The VSAM Volume Dataset (VVDS) is created to allow
VSAM datasets to be managed when ICF catalogs are utilized.
These datasets are named SYSl.VVDS.Vvvvvvv, where the
vvvvvv is the volume serial number of the DASD that they
reside upon. Even though these datasets are prefixed SYSl they
do not have to be catalogued in the MVS master catalog.
During a recent reorganization of our DASD system we found
that identifying the contents of the VVDS datasets and where
they are actually catalogued can be tricky. The suite of
IDCAMS jobs presented in this article will allow you to
identify and manipulate VVDSs.

The first job can be used to identify which catalogs contain an
entry for a VVDS. The job will produce a hexadecimal listing
of the VVDS and to the right of this listing will appear the
names of the catalogs where the VVDS has had entries for
VSAM datasets. The job should be amended to replace the
vvvvvv with the volume serial number of the DASD on which
the VVDS being manipulated resides.

You can then run the second job to identify which datasets are
associated with this particular VVDS. This job should be
amended to include separate IDCAMS DIAGNOSE statements
for each catalog identified from the output of the previous job.
A listing similar to the one in Figure 1 will be produced.

We recently had to delete several VVDSs from old volumes.
To ensure that all the relevant catalog entries were also deleted
we ran the third job. This job was run after we identified, by
using the first job, which catalogs contained VVDS entries.
Then, using the second job, we ensured that all of the VVDSs
were empty. The third job deletes the VVDS entries from
CATALOG.SYSA and CATALOG.SYSB in steps one and
two. Step three is then used to delete the remaining entry in
CATALOG.SYSC and the SCRATCH operand also deletes the
empty VVDS. This ensures that all catalogs contain the correct
entries. This job could be used to scratch only catalog entries if
the VVDS has already been deleted. This is achieved by using
the NOSCRATCH operand in all three steps.


IDENTIFYING VVDS CATALOG ENTRIES

//STSO1A    JOB    CLASS=A,MSGCLASS=H,MSGLEVEL=(1,1)
//STEP1     EXEC   PGM=IDCAMS
//SYSPRINT  DD     SYSOUT=*
//AMSDUMP   DD     SYSOUT=*
//DD1       DD     DSN=SYS1.VVDS.Vvvvvvv,DISP=SHR,AMP=AMORG,
//          UNIT=3380,VOL=SER=vvvvvv
//SYSIN DD *
  PRINT INFILE(DD1) COUNT(1)
/*


IDENTIFYING RELATED DATASET ENTRIES

//STSO1A    JOB   CLASS=A,MSGCLASS=H,MSGLEVEL=(1,1)
//STEP1     EXEC  PGM=IDCAMS
//SYSPRINT  DD    SYSOUT=*
//AMSDUMP   DD    SYSOUT=*
//DD1       DD    DSN=SYS1.VVDS.Vvvvvvv,DISP=SHR,AMP=AMORG
//          UNIT=3380,VOL=SER=vvvvvv
//SYSIN     DD    *
  DIAGNOSE =
  VVDS =
  INFILE(DD1) =
  INCLUDE =
  (CAT(CATALOG.SYSB)) =
  LIST
/*

Note: if more than one catalog was identified from the previous
job output the DIAGNOSE statement must be repeated and the
catalog name changed to reflect the name of the identified
catalog. Do this for each catalog.


DELETING VVDS ENTRIES AND VVDSS

//STS01A    JOB   CLASS=A,MSGCLASS=H,MSGLEVEL=(1,1)
//STEP1     EXEC  PGM=IDCAMS
//STEPCAT   DD    DSN=CATALOG.SYSA,DISP=SHR
//SYSPRINT  DD    SYSOUT=*
//AMSDUMP   DD    SYSOUT=*
//SYSIN     DD    *
  DELETE SYS1.VVDS.VDEV013 NOSCRATCH

/*
//STEP2     EXEC  PGM=IDCAMS
//STEPCAT   DD    DSN=CATALOG.SYSB,DISP=SHR
//SYSPRINT  DD    SYSOUT=*
//AMSDUMP   DD    SYSOUT=*
//SYSIN     DD    *
  DELETE SYS1.VVDS.VDEV013 NOSCRATCH

/*
//STEP3     EXEC  PGM=IDCAMS
//STEPCAT   DD    DSN=CATALOG.SYSC,DISP=SHR
//SYSPRINT  DD    SYSOUT=*
//AMSDUMP   DD    SYSOUT=*
//SYSIN     DD    *
  DELETE SYS1.VVDS.VDEV013 SCRATCH

/*

John Bradley
Senior Technical Support Engineer (UK)

