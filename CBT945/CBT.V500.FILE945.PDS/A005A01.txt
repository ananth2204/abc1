Catalog back-up process

Until recently we had no separate back-up process for our
catalogs. We used only standard full volume and incremental
back-up processes as security against the loss of a catalog.

We decided that this was an unsuitable practice and I wrote the
following processes to enable us to back up our catalogs at a
pre-defined time, to allow restoration of our catalogs, and to
track back-up information. Our current catalog subsystem
consists of an ICF master catalog and several ICF user catalogs
which are allocated across various DASD devices.
To perform back-ups in this environment I created the catalog
back-up process presented below. This process uses the
IDCAMS program to create a sequential back-up of all catalogs
using the EXPORT command. This sequential back-up is
created in the form of a multi-file tape volume, with each file
containing one catalog. Although we currently have 20 catalogs
in use at our installation, I have only presented the first part of
the JCL to provide an example.

The EXPORT command uses the TEMPORARY keyword to
ensure that the catalog remains intact on DASD. This keyword
flags the catalog to inform IDCAMS that a back-up exists. It is
also responsible for the writing of a TYPE 36 SMF record to a
SYS1.MANx dataset.

The other JCL presented below is used to produce a report on a
daily basis of the TYPE 36 SMF records. This JCL contains
the SAS program source code as instream data. The SMF data
is dumped from the SYS1.MANx dataset to a tape volume at
06:00 hours each day. We then run this process to produce the
report shown in Figure 1. This process was originally written in
Assembler, however, the SAS code simplifies the extraction of
these records. This report is vital if a restore has to be
performed. For any users who do not utilize the SAS product,
IBM provides the IFASMFI6 macro to map the fields in the
TYPE 36 record. I have presented the format of this record
below.

This process has been in production for several months and we
have already performed a catalog restore from the tape back-
up. I have purposely not covered the restore operation as this
can depend upon your individual environment. The following
manuals can be used to help automate catalog recovery and
also provide detailed information on the various facilities
covered in this article:

o      DFPXA Catalog Administration Guide      -      GC26-4138
o      DFPXA ICF Administration: AMS Reference      -      GC26-4135
o      MVSXA SPL: SMF      -      GC28-1153

Further procedures could be developed to automate recovery
using the following SMF records:

o      TYPE17 - Scratch dataset statistics
o      TYPE18 - Rename dataset statistics
o      TYPE60 - VVDS updated
o      TYPE61 - ICF define activity
o      TYPE63 - VSAM entry defined
o      TYPE65 - ICF delete activity
o      TYPE66 - ICF alter activity
o      TYPE67 - VSAM entry deleted
o      TYPE68 - VSAM entry renamed
o      TYPE69 - VSAM dataspace defined, extended, or deleted.


CATALOG BACK-UP PROCESS

//STS01A        JOB      CLASS=A,MSGCLASS=H,MSGLEVEL=(1,1)
//IDCAMS1       EXEC     PGM=IDCAMS,REGION=2M
//STEPCAT       DD       DSN=CATALOG.FDRABR,DISP=SHR
//BACKUP        DD       DSN=PROD.CATALOG.CAT1(+1),
//              DISP=(,CATLG,DELETE),
//              DCB=GDG,
//              UNIT=(TAPE,,DEFER),
//              LABEL=(1,SL,EXPDT=99000),
//              VOL=(,RETAIN)
//SYPSPRINT     DD       SYSOUT=*
//SYSIN         DD       *
  EXPORT -
  CATALOG.FDRABR -
  OUTFILE(BACKUP) -
  TEMPORARY
/*
//*
//IDCAMS2       EXEC     PGM=IDCAMS,REGION=2M
//STEPCAT       DD       DSN=CATALOG.MVSA,DISP=SHR
//BACKUP        DD       DSN=PROD.CATALOG.CAT2(+1),
//              DISP=(,CATLG,DELETE),
//              DCB=GDG,
//              UNIT=(TAPE,,DEFER),
//              LABEL=(2,SL,EXPDT=99000),
//              VOL=(,RETAIN,REF=*.IDCAMS1.BACKUP)
//SYSPRINT      DD       SYSOUT=*
//SYSIN         DD       *
  EXPORT -
  CATALOG.MVSA -
  OUTFILE(BACKUP) -
  TEMPORARY
/*
//*
//IDCAMS3       EXEC     PGM=IDCAMS,REGION=2M
//STEPCAT       DD       DSN=CATALOG.PROD,DISP=SHR
//BACKUP        DD       DSN=PROD.CATALOG.CAT3(+1),
//              DISP=(,CATLG,DELETE),
//              DCB=GDG,
//              UNIT=(TAPE,,DEFER),
//              LABEL=(3,SL,EXPDT=99000),
//              VOL=(,RETAIN,REF=*.IDCAMS1.BACKUP)
//SYSPRINT      DD       SYSOUT=*
//SYSIN         DD       *
  EXPORT -
  CATALOG.PROD -
  OUTFILE(BACKUP) -
  TEMPORARY
/*


SAS CODE AND JCL TO PRODUCE TYPE36 RECORD REPORT

//STS01A      JOB   (SDTS),'J.BRADLEY',CLASS=A,MSGCLASS=Q,NOTIFY=STS01
//*      * THIS PROCESS IS USED TO FORMAT TYPE 36 EXPORT SMF RECORDS  *
//*      * TO PRODUCE A REPORT OF ICF CATALOG EXPORTS.                *
//*      * STEP1 - THIS STEP OF THE PROCESS EXTRACTS TYPE 36 RECORDS  *
//*      *         FROM THE DAILY SMF BACK-UP DATASET AND WRITES      *
//*      *         THEM TO A TEMPORARY DATASET.                       *
//*      *         DD CARD SMF IS USED AS INPUT.                      *
//*      *         DD CARD PDB IS USED AS OUTPUT.                     *
//*
//STEP1       EXEC  PGM=SASXAL,
//            PARM='VERSIONLONG',
//            REGION=4M
//STEPLIB     DD    DISP=SHR,DSN=SAS.V6R06.LIBRARY
//CONFIG      DD    DISP=SHR,DSN=SAS.V6R06.CNTL(BATCHXA)
//            DD    DISP=SHR,DSN=MXG.V7R7.USER.SOURCE(BATCHCNF)
//SASAUTOS    DD    DISP=SHR,DSN=SAS.V6R06.AUTOLIB
//SASHELP     DD    DISP=SHR,DSN=SAS.V6R06.SASHELP
//SASMSG      DD    DISP=SHR,DSN=SAS.V6R06.SASMSG
//WORK        DD    UNIT=WORK,SPACE=(6144,(8000,500),,,ROUND),
//            DCB=(RECFM=FS,DSORG=PS,LRECL=6144,BLKSIZE=6144)
//SASLOG      DD    SYSOUT=*
//SASLIST     DD    SYSOUT=*
//SASPARM     DD    UNIT=WORK,SPACE=(400,(100,300)),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,BUFNO=1)
//SYSUDUMP    DD    SYSOUT=*
//SASLOG      DD    SYSOUT=Q
//SASLIST     DD    SYSOUT=*
//SYSPRINT    DD    SYSOUT=*
//SYSOUT      DD    SYSOUT=*
//PDB         DD    DSN=&&SASTEMP,
//            DISP=(NEW,PASS,DELETE),
//            UNIT=WORK,
//            SPACE=(CYL,(100,10),RLSE)
//SPIN        DD    UNIT=WORK,SPACE=(CYL,(2,5)),DSN=&&SASDUMM,
//            DISP=(NEW,DELETE,DELETE)
//LIBRARY     DD    DSN=MXG.V7R7.SAS.FORMATS,DISP=SHR
//SOURCLIB    DD    DSN=MXG.V7R7.USER.SOURCE,DISP=SHR
//            DD    DSN=MXG.V7R7.SOURCE,DISP=SHR
//            DD    DSN=STS01.BD.DATA,DISP=SHR
//SMF         DD    DSN=SPROD.BD.LW.SMFTAPA(0),DISP=SHR
//SYSIN       DD    *
%INCLUDE SOURCLIB(VMACSMF ,VMAC36,
                  IMACPDB ,EXPDBINC,EXPDBVAR,EXPDBCDE,IMACKEEP);
RUN;
OPTIONS SOURCE SOURCE2;
DATA
 ID (KEEP=ID SYSTEM)
 _VAR36
_SMF
 OUTPUT ID;
 _CDE36
RUN;
PAGE;
PROC CONTENTS DATA=TYPE36; RUN ; QUIT ;
PROC SORT NODUP DATA=TYPE36 OUT=PDB.TYPE36 _PROTECT;
  BY SYSTEM;
  RUN;
  QUIT;
/*
//*      * STEP2 - THIS STEP OF THE PROCESS USES A SIMPLE SAS PR0GRAM *
//*      *         TO PRODUCE A FORMATTED REPORT OF THE TYPE 36       *
//*      *         RECORDS.                                           *
//*
//STEP1       EXEC  PGM=SASXAL,
//            PARM='VERSIONLONG',
//            REGION=4M
//STEPLIB     DD    DISP=SHR,DSN=SAS.V6R06.LIBRARY
//CONFIG      DD    DISP=SHR,DSN=SAS.V6R06.CNTL(BATCHXA)
//            DD    DISP=SHR,DSN=MXG.V7R7.USER.SOURCE(BATCHCNF)
//SASAUTOS    DD    DISP=SHR,DSN=SAS.V6R06.AUTOLIB
//SASHELP     DD    DISP=SHR,DSN=SAS.V6R06.SASHELP
//SASMSG      DD    DISP=SHR,DSN=SAS.V6R06.SASMSG
//WORK        DD    UNIT=WORK,SPACE=(6144,(8000,500),,,ROUND),
//            DCB=(RECFM=FS,DSORG=PS,LRECL=6144,BLKSIZE=6144)
//SASLOG      DD    SYSOUT=*
//SASLIST     DD    SYSOUT=*
//SASPARM     DD    UNIT=WORK,SPACE=(400,(100,300)),
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=400,BUFNO=1)
//SYSUDUMP    DD    SYSOUT=*
//SASLOG      DD    SYSOUT=Q
//SASLIST     DD    SYSOUT=*
//SYSPRINT    DD    SYSOUT=*
//SYSOUT      DD    SYSOUT=*
//LIBRARY     DD    DSN=MXG.V7R7.SAS.FORMATS,DISP=SHR
//SOURCLIB    DD    DSN=MXG.V7R7.USER.SOURCE,DISP=SHR
//            DD    DSN=MXG.V7R7.SOURCE,DISP=SHR
//            DD    DSN=STS01.BD.DATA,DISP=SHR
//FT11F001    DD    SYSOUT=*
//FT12F001    DD    SYSOUT=*
//JXB         DD    DSN=&&SASTEMP,DISP=(OLD,DELETE)
//SASLIB      DD    DSN=MXG.V7R7.SASLIB,DISP=SHR
//SYSIN       DD    *
DATA TYPE36;
 SET JXB.TYPE36;
PROC SORT DATA=TYPE36;
 BY CATLNAME;
LABEL CATLNAME='CATALOG NAME'
      CATVOL='CATALOG VOLUME'
      SYSTEM='SYSTEM ID'
      EXPOTIME='EXPORT TIME AND DATE'
      PORTVOL='TAPE VOLUME'
      PORTNAME='TAPE DATASET NAME';
PROC PRINT DATA=TYPE36 LABEL NOOBS;
VAR CATLNAME CATVOL SYSTEM EXPOTIME PORTVOL PORTNAME;
TITLE1 'REPORT ON ICF CATALOG BACK-UP PROCEDURE';
TITLE2 '=======================================';
RUN;


FORMAT OF SMF TYPE 36 RECORD

OFFSET       LENGTH     FORMAT     DESCRIPTION

  0             2        Binary     Record Length.
  2             2        Binary     Segment Descriptor.
  4             1        Binary     Header Flag Byte.
  5             1        Binary     Record Type.
  6             4        Binary     Time record moved to SMF buffer.
  10            4        Packed     Date record mvoed to SMF buffer.
  14            4        EBCDIC     System identification.
  18            4        EBCDIC     Subsystem identification.
  22            2        EBCDIC     Record subtype.
  24            2        Binary     Number of triplets.
  26            2                   Reserved.
  28            4        Binary     Offset to product section.
  32            2        Binary     Length of product section.
  34            2        Binary     Number of product sections.
  36            4        Binary     Offset to data section.
  40            2        Binary     Length of data section.
  42            2        Binary     Number of data sections.

PRODUCT SECTION

  44            2        EBCDIC     Product version.
  46            8        EBCDIC     Product name.
  54            2        EBCDIC     Record type 36 level.

DATA SECTION

  56            8        EBCDIC     Jobname.
  64            4        Binary     Reader start time.
  68            4        Packed     Reader start date.
  72            8        EBCDIC     User identification.
  80            8        EBCDIC     Program name.
  88            44       EBCDIC     ICF catalog name.
  132           6        EBCDIC     Catalog volume serial number.
  138           4        Binary     UCB device type.
  142           8        EBCDIC     Date of export.
  150           8        EBCDIC     Time of export.
  158           44       EBCDIC     Portable dataset name.
  202           6        EBCDIC     Portable dataset volume serial.
  208           4        Binary     Portable dataset UCB device type.
  212           2        EBCDIC     Export indicator.

John Bradley
Technical Support Engineer (UK)

