Building a non-unique VSAM alternate index

This is a COBOL II program that will build a VSAM alternate
index from a KSDS.  The code illustrates the method for
building a NONUNIQUE alternate index.  This program is
similar to one published in issue 1 that built a UNIQUE
alternate index.  Both programs could quite easily be modified
to build multiple alternate indexes.

Operating system and other pre-requisites:

o      MVS - DFP 2.3
o      CICS/VS - 1.7, 2.1.


COBOL PROGRAM

       IDENTIFICATION DIVISION.
       PROGRAM-ID.    AIXBLD.
      *
      *               THIS PROGRAM WILL BUILD A NON-UNIQUE ALTERNATE
      *               INDEX FROM A BASE KSDS
      *
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
           SELECT VSAMKSDS ASSIGN        VSAMKSDS
                                    ORGANIZATION INDEXED
                                    ACCESS SEQUENTIAL
                                    RECORD VSAMKSDS-KEY
                                    FILE STATUS WS-VSAMKSDS
                                                WS-VSAMKSDS-EXT.
           SELECT VSAMAIX  ASSIGN        VSAMAIX
                                    ORGANIZATION INDEXED
                                    ACCESS SEQUENTIAL
                                    RECORD VSAMAIX-KEY
                                    FILE STATUS WS-VSAMAIX
                                                WS-VSAMAIX-EXT.
           SELECT SORTFILE ASSIGN   UT-S-SORTFILE.
      /            DATA DIVISION - FILE SECTION
       DATA DIVISION.
       FILE SECTION.
       FD  VSAMKSDS                 RECORD 120
                                    LABEL RECORDS STANDARD.
       01  VSAMKSDS-REC.
           03  VSAMKSDS-KEY         PIC  X(09).
           03  FILLER               PIC  X(11).
           03  VSAMKSDS-AKEY        PIC  X(08).
           03  FILLER               PIC  X(92).
           SKIP2
       FD  VSAMAIX                  RECORD 22 TO 32755
                                    LABEL RECORDS STANDARD.
       01  VSAMAIX-REC.
           03  VSAMAIX-CONTROL.
               05  VSAMAIX-KSDS     PIC  X(01).
               05  VSAMAIX-PKL      PIC  X(01).
               05  VSAMAIX-OCC      PIC S9(04)     COMP.
               05  VSAMAIX-AKL      PIC  X(01).
           03  VSAMAIX-KEY          PIC  X(08).
           03  VSAMAIX-RELKEY       OCCURS 1 TO 3638
                                    DEPENDING WS-VSAMAIX-OCC
                                    PIC  X(09).
           SKIP2
       SD  SORTFILE.
       01  SORTFILE-REC.
           03  SORTFILE-KEY         PIC  X(08).
           03  SORTFILE-RELKEY      PIC  X(09).
      /            DATA DIVISION - WORKING-STORAGE SECTION
       WORKING-STORAGE SECTION.
           SKIP2
       01  WS-FILE-STATI.
           03  WS-VSAMAIX           PIC  X(02).
           03  WS-VSAMKSDS          PIC  X(02).
       01  WS-FILE-STATI-EXT.
           03  WS-VSAMAIX-EXT.
               05  WS-VSAMAIX-RC    PIC S9(04)     COMP.
               05  WS-VSAMAIX-FC    PIC S9(04)     COMP.
               05  WS-VSAMAIX-FB    PIC S9(04)     COMP.
           03  WS-VSAMKSDS-EXT.
               05  WS-VSAMKSDS-RC   PIC S9(04)     COMP.
               05  WS-VSAMKSDS-FC   PIC S9(04)     COMP.
               05  WS-VSAMKSDS-FB   PIC S9(04)     COMP.
           SKIP1
       01  WS-FLAGS-ET-ALIA.
           03  WS-EOF               PIC  X(01).
               88  EOF-ERROR                                 VALUE '2'.
               88  EOF                                       VALUE '1'.
               88  NOT-EOF                                   VALUE '0'.
           03  WS-COMP-01           PIC S9(04)     COMP      VALUE +1.
           03  FILLER               REDEFINES WS-COMP-01.
               05  FILLER           PIC  X(01).
               05  WS-HEX-01        PIC  X(01).
           03  WS-COMP-2057         PIC S9(04)     COMP     VALUE 2057.
           03  FILLER               REDEFINES WS-COMP-2057.
               05  WS-HEX-08        PIC  X(01).
               05  WS-HEX-09        PIC  X(01).
           03  WS-PREV-SORT-KEY     PIC  X(08).
           SKIP1
       01  WS-VSAMAIX-REC.
           03  WS-VSAMAIX-CONTROL.
               05  WS-VSAMAIX-KSDS  PIC  X(01).
               05  WS-VSAMAIX-PKL   PIC  X(01).
               05  WS-VSAMAIX-OCC   PIC S9(04)     COMP.
               05  WS-VSAMAIX-AKL   PIC  X(01).
           03  WS-VSAMAIX-KEY       PIC  X(08).
           03  WS-VSAMAIX-RELKEY    OCCURS 1 TO 3638
                                    DEPENDING WS-VSAMAIX-OCC
                                    INDEXED WS-IND
                                    PIC  X(09).
      /            PROCEDURE DIVISION - MAIN CONTROL
           SKIP1
       PROCEDURE DIVISION.
           SKIP1
       A100-MAIN-CONTROL SECTION.
           SKIP1
           PERFORM B100-INITIALIZE.
           PERFORM B200-PROCESS.
           PERFORM B300-TERMINATE.
           STOP RUN.
      /               THIS SECTION PERFORMS
      *                   INITIALIZATION OF WORKING STORAGE
      *                   OPENING OF FILES, READ FIRST INPUT RECORD
           SKIP2
       B100-INITIALIZE SECTION.
           SKIP1
           SET NOT-EOF               TO TRUE.
           MOVE ALL '0'              TO WS-FILE-STATI.
           MOVE LOW-VALUES           TO WS-PREV-SORT-KEY.
           OPEN INPUT  VSAMKSDS
                OUTPUT VSAMAIX.
           IF  WS-FILE-STATI      NOT = ALL '0'
               DISPLAY 'OPEN ERROR OCCURRED - FILE'
               PERFORM Z100-FILE-ERROR
           END-IF.
           PERFORM R100-VSAMKSDS.
      /               THIS SECTION PERFORMS
      *                   PROGRAM MAIN PROCESSING
           SKIP2
       B200-PROCESS SECTION.
           SKIP1
           SORT SORTFILE
               ASCENDING SORTFILE-KEY
               INPUT  PROCEDURE C100-E15-INPUT
               OUTPUT PROCEDURE C200-E35-OUTPUT.
           IF  SORT-RETURN        NOT = +0
               SET EOF-ERROR         TO TRUE
           END-IF.
      /               THIS SECTION PERFORMS
      *                   PROGRAM TERMINATION PROCESSING
           SKIP2
       B300-TERMINATE SECTION.
           SKIP1
           CLOSE VSAMAIX
                 VSAMKSDS.
           IF  WS-FILE-STATI      NOT = ALL '0'
               DISPLAY 'CLOSE ERROR OCCURRED - FILE'
               PERFORM Z100-FILE-ERROR.
           IF  EOF
               MOVE +0               TO RETURN-CODE
           ELSE
               MOVE +16              TO RETURN-CODE
           END-IF.
      /               THIS SECTION PERFORMS
      *                   THE CONTROLLING OF E15 (INPUT) EXIT
      *                       FORMAT THE SORT RECORD
      *                       RELEASING THE RECORD TO THE SORT
      *                       READING THE NEXT KSDS RECORD
           SKIP2
       C100-E15-INPUT SECTION.
           SKIP1
           PERFORM UNTIL NOT NOT-EOF
               MOVE VSAMKSDS-KEY     TO SORTFILE-RELKEY
               MOVE VSAMKSDS-AKEY    TO SORTFILE-KEY
               RELEASE SORTFILE-REC
               PERFORM R100-VSAMKSDS
           END-PERFORM.
      /               THIS SECTION PERFORMS
      *                   THE CONTROLLING OF E35 (OUTPUT) EXIT
      *                       CHECK FOR CHANGE IN ALTERNATE KEY
      *                       IF CHANGE - WRITE PREVIOUS RECORD
      *                                 - FORMAT NEXT RECORD
      *                       IF NO CHANGE - ADD KEY TO BUCKET
      *                       RETURN THE NEXT SORTED RECORD
           SKIP2
       C200-E35-OUTPUT SECTION.
           SKIP1
           SET NOT-EOF               TO TRUE.
           PERFORM R200-SORTFILE.
           PERFORM UNTIL NOT NOT-EOF
               IF  SORTFILE-KEY   NOT = WS-PREV-SORT-KEY
               AND WS-PREV-SORT-KEY
                                  NOT = LOW-VALUES
                   PERFORM W100-VSAMAIX
               END-IF
               IF  SORTFILE-KEY   NOT = WS-PREV-SORT-KEY
           SKIP1
      *               OUTPUT AIX CONTROL INFORMATION
           SKIP1
                   MOVE WS-HEX-01    TO WS-VSAMAIX-KSDS
                   MOVE WS-HEX-09    TO WS-VSAMAIX-PKL
                   MOVE WS-COMP-01   TO WS-VSAMAIX-OCC
                   MOVE WS-HEX-08    TO WS-VSAMAIX-AKL
           SKIP1
      *               OUTPUT OTHER AIX DATA
           SKIP1
                   MOVE SORTFILE-KEY TO WS-VSAMAIX-KEY
                                        WS-PREV-SORT-KEY
                   MOVE SORTFILE-RELKEY
                                     TO WS-VSAMAIX-RELKEY (1)
                   SET WS-IND        TO +2
           SKIP1
      *               PROCESS NON-UNIQUE PRIME KEYS
           SKIP1
               ELSE
                   IF  WS-VSAMAIX-OCC < +3638
                       COMPUTE WS-VSAMAIX-OCC
                                      = WS-VSAMAIX-OCC
                                      + +1
                       MOVE SORTFILE-RELKEY
                                     TO WS-VSAMAIX-RELKEY (WS-IND)
                       SET WS-IND    UP BY +1
                   ELSE
                       DISPLAY 'EXCESSIVE NON-UNIQUE KEYS'
                       DISPLAY 'FOR KEY: ' WS-VSAMAIX-KEY
                       SET EOF-ERROR TO TRUE
                       MOVE +16      TO SORT-RETURN
                   END-IF
               END-IF
           SKIP1
               PERFORM R200-SORTFILE
           END-PERFORM.
           PERFORM W100-VSAMAIX.
      /               THIS SECTION PERFORMS
      *                   THE PROCESSING OF THE INPUT KSDS
           SKIP2
       R100-VSAMKSDS SECTION.
           SKIP1
           READ VSAMKSDS
               END
               SET EOF               TO TRUE
               MOVE '00'             TO WS-VSAMKSDS.
           IF  WS-VSAMKSDS        NOT = '00'
               DISPLAY 'READ ERROR OCCURRED - FILE'
               PERFORM Z100-FILE-ERROR
           END-IF.
           SKIP2
      *               THIS SECTION PERFORMS
      *                   THE RETURN OF DATA FROM THE LAST PHASE
      *                   OF THE SORT
           SKIP2
       R200-SORTFILE SECTION.
           SKIP1
           RETURN SORTFILE
               END
               SET EOF               TO TRUE.
      /               THIS SECTION PERFORMS
      *                   THE PROCESSING OF THE OUTPUT AIX
           SKIP2
       W100-VSAMAIX SECTION.
           SKIP1
           WRITE VSAMAIX-REC FROM WS-VSAMAIX-REC.
           IF  WS-VSAMAIX         NOT = '00'
               DISPLAY 'WRITE ERROR OCCURRED - FILE'
               PERFORM Z100-FILE-ERROR
           END-IF.
      /               THIS SECTION PERFORMS
      *                   DISPLAYS FOR FILE STATUS ERRORS
           SKIP2
       Z100-FILE-ERROR SECTION.
           SKIP1
           IF  WS-VSAMKSDS        NOT = '00'
               DISPLAY 'INPUT VSAM KSDS     ' WS-VSAMKSDS
               DISPLAY 'VSAM RETURN CODE    ' WS-VSAMKSDS-RC
               DISPLAY 'VSAM FUNCTION CODE  ' WS-VSAMKSDS-FC
               DISPLAY 'VSAM FEED BACK CODE ' WS-VSAMKSDS-FB
           END-IF.
           IF  WS-VSAMAIX         NOT = '00'
               DISPLAY 'OUTPUT VSAM AIX     ' WS-VSAMAIX
               DISPLAY 'VSAM RETURN CODE    ' WS-VSAMAIX-RC
               DISPLAY 'VSAM FUNCTION CODE  ' WS-VSAMAIX-FC
               DISPLAY 'VSAM FEED BACK CODE ' WS-VSAMAIX-FB
           END-IF.
           SET EOF-ERROR             TO TRUE.
           MOVE +16                  TO SORT-RETURN.


Dave Loveluck
Instructor/Consultant (USA)                        c Dave Loveluck 1991

