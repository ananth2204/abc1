CICS VSAM files - testing definitions


INTRODUCTION

The task of defining VSAM files is highly complex and very
difficult because of the number of parameters available. The
high number of parameters is necessary to give VSAM the
flexibility to adapt to the requirements of a large number of end
user sites. An additional complication is that files often have to
be able to satisfy the demands of both on-line and batch
environments.

The definition of a VSAM file is normally implemented using
specimens supplied by IBM, software suppliers, system
analysts, or VSAM experts, coupled with the experience of the
individual defining the VSAM file. Unfortunately, even then a
file can turn out to be poorly defined once it has been used for
a period of time, primarily because it is difficult to anticipate
the activity on the file after the initial loading.

This problem does not normally occur in batch environments
because it is possible to carry out a large number of test runs
and examine the impact of those tests on the file. The file can
then be redefined and the tests repeated allowing the definition
of the file to be fine-tuned to provide the optimum
performance.

Suppliers, such as Macro 4, with their VSAMTUNE product
allow the activity of files to be monitored over a long period of
time and they provide recommendations for the VSAM
definitions for both CICS and batch files. However, the cost of
these products is a major consideration for some organizations.

This article describes a very simple and cheap method of
emulating CICS file activity to allow files to be tuned for
optimum performance during the CICS on-line day.


REQUIREMENTS

All organizations that have CICS systems containing critical
VSAM files which are updated on-line should log update
activity to user journals. Furthermore, they should also have
disaster recovery plans that include the use of the user journals
to allow forward recovery to be carried out on files in the event
of the loss of a disk pack during the on-line day, or other such
catastrophes. Consequently there should be no changes
required to a CICS system to allow this procedure to be utilized
to emulate CICS file activity.

At many organizations, the disaster recovery plans are rarely
tested. However, if this technique is used to assist in
determining the preferred VSAM file definitions, any forward
recovery programs used will also be tested as an additional
bonus.

It has already been stated that no changes should be required to
a CICS system to use this technique. However some sites
might not journal to user journals or have any programs on-site
to allow forward recovery processing to take place. This might
be because the organization considers the data in the files to be
non-critical and therefore cannot justify the overhead of user
journalling and the cost of a forward recovery program. In this
case, the organization should reconsider its requirements
because several CICS experts consider user journalling and the
ability to carry out forward recovery essential.

The technique is basically very simple and only requires the
following steps to be carried out:

1      Produce a back-up of the file to be tuned.

2      Produce a LISTCAT, or the equivalent, of the file before
      the start of the on-line day.

3      Produce a LISTCAT of the file at the end of the on-line day.

4      Secure the user journals used during the on-line day.

5      Restore the file backed up in step 1 (with a new name for
      the cluster, data, and index components - to avoid accidents!).

6      Produce a LISTCAT of the loaded file.

7      Run the forward recovery program against the loaded file
      using the secured user journals in step 4.

8      Produce a LISTCAT of the recovered file. Steps 7 and 8
      will have generated a set of figures to allow future
      comparisons to be made.

9      Delete the recovered file.

10      Produce a new VSAM definition for the file.

11      Restore the file backed up in step 1 to the new definition.

12      Produce a LISTCAT of the loaded file.

13      Run the forward recovery program against the new VSAM
      definition using the secured user journals in step 4.

14      Produce a LISTCAT of the forward recovered file.

15      Compare the forward recovery jobs in steps 7 and 13 (for
      example note the amount of CPU used and the number of
      EXCPs performed).

16      Compare the LISTCATs produced in steps 8 and 14. (For
      example note the number of Control Interval and Control
      Area splits for both data and index, the number of EXCPs
      for both data and index, and the number of index levels.)

17      Repeat steps 9 through 16 until an optimized VSAM
      definition has been produced which minimizes the number
      of Control Interval and Control Area splits, the number of
      EXCPs performed, and the number of index levels. There
      might be other factors which other sites would prefer to optimize.


Additional Features of the Testing Procedures.

If necessary, the above procedure can be adapted to mimic the
on-line activity over a longer period, such as a week. This
might allow an organization to increase the time between
lengthy re-organizations of files with the confidence of
knowing that the file structures have been tested to last for that
extended time period.

Some organizations have products which journal batch activity
on VSAM files. In this case the technique described above can
also be used to optimize the structure of batch VSAM files
without having to re-run whole batch suites, and resetting
internal and external indicators within that batch suite to allow
repeated runs to be allowed.

In both cases, batch and on-line files can be tuned, either
individually or together, in logically related groups.

Other file access methods which support user journalling can
also be tested with the same technique with little change to the
methodology used.


INTERPRETING THE RESULTS

It is also necessary to issue a word of caution. This technique
cannot be used to represent on-line CICS activity. The only
valid conclusions which can be made relate to the structure of
the VSAM file. It is not possible to extrapolate a low CPU and
low EXCP count from the forward recovery job into the CICS
environment. This is because the forward recovery job will be
single threaded while CICS is a multitasking environment.
However, good performance during the forward recovery
processing might be indicative of better performance during on-
line processing.


CONCLUSION

The method described in this article can be used to fine tune
VSAM files to optimize their performance within the CICS
environment, and in some cases the batch environment as well.
The procedure described, if used correctly, can reduce the
number of on-line Control Interval and Control Area splits
which occur during the on-line day. The benefits can be
observed immediately because any reduction in the number of
Control Area and Control Interval splits is going to improve the
on-line response times simply because the CICS transactions
will not be waiting for those events to occur. A further benefit
will manifest itself in the reduction in the number of wait on
strings, because these can occur when CICS is waiting for a
Control Area or Control Interval split to occur. This will reduce
the chances of requests for files queuing up. A further benefit
is that the amount of CPU used will be reduced, because
Control Interval and Control Area splits are CPU intensive
operations. The final benefit is that gains can be made by
optimizing the Control Interval sizes, simply because it is the
Control Interval size which determines the size of the buffers
used. Selective tuning of the Control Interval size can
maximize the number of records in the Control Interval and
reduce contention in LSR buffer pools, so that the chances of a
successful lookaside increases. It should be stressed that these
benefits are the standard benefits which can be obtained by
monitoring and carefully tuning the files. The advantage of
using the technique described to define VSAM files is that it
allows VSAM files to be redefined with the confidence that the
new definition is suitable for the large and varied amount of
activity which will take place in the on-line environment.

D F Clark
CICS Systems Programmer
Norwich Union Insurance Group (UK)                        c D F Clark 1992
