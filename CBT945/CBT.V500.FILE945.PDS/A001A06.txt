VSAM DASD management with help from REXX

DASD management is an essential element of any size DP
shop.  There are several methods to accomplish this sometimes
mundane task.  One method that I found very helpful was with
the use of REXX.  Our particular shop is VM/SP with VSE and
MVS guests running underneath.  Therefore, REXX was easy
to come by.  One of my early assignments was to examine the
DASD situation on both the VSE and MVS machines,
implement dataset naming conventions, eliminate non-essential
datasets and continually monitor DASD utilization.  In order to
obtain the information required, I started with IDCAMS
LISTCATs.  However the output from the LISTCAT is hard to
decipher in that particular format.  Therefore, I wrote a REXX
EXEC to convert the LISTCAT output to the format that I
needed.  The real benefit of this comes from the fact that I can
query this data and obtain specific information depending on
the situation - for example, if I want to know which VSAM
datasets have split CIs and how many.

The three EXECs and their associated descriptions follow:

o      DASDMAN - converts LISTCAT output to 'DASDMAN' format

o      QMF - query facility; this simply puts you into full-screen CMS

o      SEL - SQL command processor that you can use under
      QMF or in CMS alone.

After running DASDMAN, I can start QMF and type the
following command to show me the number of VSAM datasets
with over 10 split CIs:

      EL * WHERE SPLITCI > 10

You can look at the SEL EXEC and determine all the keywords
(eg SPLITCI, SPLITCA, DSN, etc).


DASDMAN EXEC

/* REXX   DASD MAN  ***/
/* READS LISTCAT INFO FROM IDCAMS LISTCAT AND BUILDS A RECORD     */
/* FOR VSAM COMPONENTS                                            */
"VMFCLEAR"
"ERASE DASDMAN DATA A"
"EXECIO * DISKR LISTCAT DATA (STEM X. FINIS"
SAY;
DO I=1 TO X.0 /* DO */
   PARSE VAR X.I TYPE . DSN .
   SELECT     /* SELECT */
    WHEN TYPE = 'AIX' THEN DO          /* THATS ALL FOLKS */
         I = X.0
    END                                /* WHEN */
    WHEN TYPE = "CLUSTER" THEN
     DO
      DO UNTIL COL1 = "ASSOCIATIONS"
         I = I+1
         PARSE VAR X.I COL1
         X.I = TRANSLATE(X.I," ","-")
         FIND = POS("CREATION",X.I)
          IF FIND > 0 THEN
             DO
             PARSE VAR X.I "CREATION" CRTDT .
          END /* IF */
     END /*DO UNTIL*/
     DATA = ''
     DATA = OVERLAY(DSN,DATA,1)
     DATA = OVERLAY("** CLUSTER **",DATA,33)
     DATA = OVERLAY(CRTDT,DATA,46)
     SAY DATA
     "EXECIO 1 DISKW DASDMAN DATA A (FINIS VAR DATA"
    END /* WHEN */
   WHEN TYPE = "DATA" THEN
    DO
     STAR = ''
     DO UNTIL COL1 = "EXTENTS:"
        CALL FINDVALS
     END /*DO UNTIL*/
     DATA = ''
     DATA = OVERLAY(DSN,DATA,1)
     DATA = OVERLAY(CRTDT,DATA,46)
     DATA = OVERLAY(CISIZE,DATA,53)
     DATA = OVERLAY(SPLITCI,DATA,59)
     DATA = OVERLAY(SPLITCA,DATA,65)
     DATA = OVERLAY(TYPE,DATA,71)
     DATA = OVERLAY(PRI,DATA,80)
     DATA = OVERLAY(SEC,DATA,86)
     DATA = OVERLAY(VOLSER,DATA,92)
     DATA = OVERLAY(EXTENT,DATA,99)
     DATA = OVERLAY(STAR,DATA,102)
     SAY DATA
     "EXECIO 1 DISKW DASDMAN DATA A (FINIS VAR DATA"
    END  /*DO*/
   WHEN TYPE = "INDEX"
    THEN DO
     DO UNTIL COL1 = "EXTENTS:"
        CALL FINDVALS
     END /*DO UNTIL*/
     DATA = ''
     DATA = OVERLAY(DSN,DATA,1)
     DATA = OVERLAY(CRTDT,DATA,46)
     DATA = OVERLAY(CISIZE,DATA,53)
     DATA = OVERLAY(SPLITCI,DATA,59)
     DATA = OVERLAY(SPLITCA,DATA,65)
     DATA = OVERLAY(TYPE,DATA,71)
     DATA = OVERLAY(PRI,DATA,80)
     DATA = OVERLAY(SEC,DATA,86)
     DATA = OVERLAY(VOLSER,DATA,92)
     DATA = OVERLAY(EXTENT,DATA,99)
     SAY DATA
     "EXECIO 1 DISKW DASDMAN DATA A (FINIS VAR DATA"
    END  /*DO*/
Otherwise
END /* SELECT */
END /* DO */
EXIT 0
/* FINDVALS PROCDURE */
FINDVALS:
        I = I+1
        PARSE VAR X.I COL1
        X.I = TRANSLATE(X.I," ","-")
        FIND = POS("SAMDATASET",X.I)
           IF FIND > 0 THEN
              DO
              STAR = '*'
              END
        FIND = POS("CREATION",X.I)
           IF FIND > 0 THEN
              DO
              PARSE VAR X.I "CREATION" CRTDT .
           END /* IF */
        FIND = POS("CISIZE",X.I)
           IF FIND > 0 THEN
              DO
              PARSE VAR X.I "CISIZE" CISIZE .
           END /* IF */
        FIND = POS("SPLITS CI",X.I)
           IF FIND > 0 THEN
              DO
              PARSE VAR X.I "SPLITS" . SPLITCI .
           END /* IF */
        FIND = POS("SPLITS CA",X.I)
           IF FIND > 0 THEN
              DO
              PARSE VAR X.I "SPLITS" . SPLITCA .
           END /* IF */
        FIND = POS("SPACE TYPE",X.I)
           IF FIND > 0 THEN
              DO
              PARSE VAR X.I "SPACE " . TYPE .
           END /* IF */
        FIND = POS("SPACE PRI",X.I)
           IF FIND > 0 THEN
              DO
              PARSE VAR X.I "SPACE " . PRI .
           END /* IF */
        FIND = POS("SPACE SEC",X.I)
           IF FIND > 0 THEN
              DO
              PARSE VAR X.I "SPACE " . SEC .
           END /* IF */
        FIND = POS("VOLSER",X.I)
           IF FIND > 0 THEN
              DO
              PARSE VAR X.I "VOLSER" VOLSER .
           END /* IF */
        FIND = POS("EXTENT NUMBER",X.I)
           IF FIND > 0 THEN
              DO
              PARSE VAR X.I "EXTENT" . EXTENT .
           END /* IF */
RETURN


QMF EXEC

/* REXX */
/* TURN FULLSCREEN CMS ON TO SIMULATE QMF */
SET FULLSCREEN ON
"VMFCLEAR"


SEL EXEC

/* REXX   DASD MAN  SEL EXEC */
/* (SQL TYPE PROCESSOR)                                              */
/* READS DASDMAN DATA A FILE AND PROCESSES ACCORDINGLY               */
/* FORMAT OF THE ARGUMENTS ARE AS FOLLOWS:                           */
/* SELECT * WHERE OPERAND1 OPERATOR OPERAND2                         */
/* OP1  VALUES :DSN CRTDT CISIZE SPLITCI SPLITCA TYPE PRI SEC VOLSER */
/* OP   VALUES :< > =                                                */
/* OP2  VALUES :ANYTHING                                             */
/* (EG SELECT * WHERE CISIZE > 2048)                                 */
/*                                                                   */
"VMFCLEAR"
PARSE UPPER ARG AST  . OPERAND1 OPERATOR OPERAND2
DATA = ''
DATA = OVERLAY("DSN",DATA,1)
DATA = OVERLAY("CRTDT",DATA,46)
DATA = OVERLAY("CISZ",DATA,53)
DATA = OVERLAY("SPCI",DATA,59)
DATA = OVERLAY("SPCA",DATA,65)
DATA = OVERLAY("TYPE",DATA,71)
DATA = OVERLAY("PRI",DATA,80)
DATA = OVERLAY("SEC",DATA,86)
DATA = OVERLAY("VOLSER",DATA,92)
DATA = OVERLAY("EXTENTS",DATA,99)
SAY DATA
"EXECIO * DISKR DASDMAN DATA A (STEM X. FINIS"
DO I=1 TO X.0
 PARSE VAR X.I DSN CRTDT CISIZE SPLITCI SPLITCA TYPE PRI SEC VOLSER EX
 SELECT
  WHEN OPERATOR = '' THEN
       DO
       IF AST = "*" THEN
          DO
          SAY X.I
          END
       END
  WHEN OPERATOR = "=" THEN
   DO
    IF OPERAND1 = "DSN" THEN
       DO
       IF OPERAND2 = DSN THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "CRTDT" THEN
       DO
       IF OPERAND2 = CRTDT THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "CISIZE" THEN
       DO
       IF OPERAND2 = CISIZE THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "SPLITCI" THEN
       DO
       IF OPERAND2 = SPLITCI THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "SPLITCA" THEN
       DO
       IF OPERAND2 = SPLITCA THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "TYPE" THEN
       DO
       IF OPERAND2 = TYPE THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "PRI" THEN
       DO
       IF OPERAND2 = PRI THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "SEC" THEN
       DO
       IF OPERAND2 = SEC THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "VOLSER" THEN
       DO
       IF OPERAND2 = VOLSER THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "EXTENT" THEN
       DO
       IF OPERAND2 = EX THEN
          DO
          SAY X.I
          END
       END
    END /* WHEN DO*/
  WHEN OPERATOR = ">" THEN
   DO
    IF OPERAND1 = "DSN" THEN
       DO
       IF OPERAND2 < DSN THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "CRTDT" THEN
       DO
       IF OPERAND2 < CRTDT THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "CISIZE" THEN
       DO
       IF OPERAND2 < CISIZE THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "SPLITCI" THEN
       DO
       IF OPERAND2 < SPLITCI THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "SPLITCA" THEN
       DO
       IF OPERAND2 < SPLITCA THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "TYPE" THEN
       DO
       IF OPERAND2 < TYPE THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "PRI" THEN
       DO
       IF OPERAND2 < PRI THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "SEC" THEN
       DO
       IF OPERAND2 < SEC THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "VOLSER" THEN
       DO
       IF OPERAND2 < VOLSER THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "EXTENT" THEN
       DO
       IF OPERAND2 < EX THEN
          DO
          SAY X.I
          END
       END
    END /* WHEN DO*/
  WHEN OPERATOR = "<" THEN
   DO
    IF OPERAND1 = "DSN" THEN
       DO
       IF OPERAND2 > DSN THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "CRTDT" THEN
       DO
       IF OPERAND2 > CRTDT THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "CISIZE" THEN
       DO
       IF OPERAND2 > CISIZE THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "SPLITCI" THEN
       DO
       IF OPERAND2 > SPLITCI THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "SPLITCA" THEN
       DO
       IF OPERAND2 > SPLITCA THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "TYPE" THEN
       DO
       IF OPERAND2 > TYPE THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "PRI" THEN
       DO
       IF OPERAND2 > PRI THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "SEC" THEN
       DO
       IF OPERAND2 > SEC THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "VOLSER" THEN
       DO
       IF OPERAND2 > VOLSER THEN
          DO
          SAY X.I
          END
       END
    IF OPERAND1 = "EXTENT" THEN
       DO
       IF OPERAND2 > EX THEN
          DO
          SAY X.I
          END
       END
    END /* WHEN DO*/
 OTHERWISE
 END /* SELECT */
END /* DO     */
SAY;
EXIT 0

R Scott Ray
Software Engineer
GT Software Inc (USA)                  c GT Software Inc 1991

