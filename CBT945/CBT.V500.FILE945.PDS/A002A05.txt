Automating diagnose JCL creation

This program will create IDCAMS diagnose control cards for
every pack that contains a SYS1.VVDS pointed to by a
specific catalog.


JCL TO EXECUTE PROGRAM

//T#ENVRP2 JOB (0,845-TXTEC-----P1-DUMP-SMF-DATA-ASYS---),'H45  B23',
//             MSGLEVEL=(1,1),MSGCLASS=A,CLASS=V,NOTIFY=T1BK
//*    BUILDS DIAGNOSE CARDS
//BLDDIAG EXEC PGM=BLDDIAG
//STEPLIB  DD  DSN=T08M.TECH.LINKLIB,DISP=SHR
//AMSPRINT DD  SYSOUT=*
//SYSPNCH  DD  DSN=T08M.DIAG.JCL,DISP=OLD
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
  CATALOG.VMSCATP
  CATALOG.ICFBKUP
  CATALOG.ICFCADAM
  CATALOG.ICFCICS
  CATALOG.ICFDB2
  CATALOG.ICFHSM
  CATALOG.ICFMISC
  CATALOG.ICFTSO
  CATALOG.ICFVEND
//*********************************************************************
//DIAGNOS EXEC PGM=IEBGENER
//*  THIS STEP WILL GENERATE THE DIAGNOSE JCL
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  DUMMY,DCB=BLKSIZE=80
//SYSUT2   DD  SYSOUT=(A,INTRDR)
//SYSUT1   DD  DSN=T08M.DIAG.JCL,DISP=OLD


BLDDIAG

* BLDDIAG PROGRAM TO CREATE IDCAMS DIAGNOSE JCL AND CONTROL           *
* CARDS. THIS PROGRAM WILL PRODUCE DIAG VVDS AND DIAG ICFCAT          *
* CONTROL CARDS FOR EVERY VVDS FOUND IN AN ICF CATALOG.               *
* THE PROGRAM PRODUCES THE CARDS BY CALLING IDCAMS AND PERFORMING     *
* A 'LISTC LVL(SYS1.VVDS) CAT(XXX)' WHERE XXX IS A CATALOG NAME       *
* PASSED THRU A SYSIN INPUT STREAM.                                   *
* LOCAL MODIFICATIONS TO CODE WILL BE NEEDED.                         *
* MODIFICATIONS INCLUDE JOB CARD WHICH MAY BE FOUND BY                *
* DOING 'F JOBCARD 1' UNDER ISPF OR SIMILAR EDITOR.                   *
* THE CARDS PUNCHED BY THIS UTILITY FOLLOW THE JOBCARD.               *
* THESE MAY NEED TO BE MODIFIED TO SUIT LOCAL STANDARDS.              *
* A TABLE AT THE END OF THE PROGRAM MAY NEED TO BE INCREASED          *
* IN A SHOP WITH MANY ICF CATALOGS AND VOLUMES WITH VVDSS ON          *
* THEM. SIMPLY FIND 'HCARDS' IN COL 1 AND INCREASE THE NUMBER.        *
* THIS TABLE CONTAINS THE NAME OF THE VVDS AND THE CATALOG            *
* WHICH CONTAINS THE POINTER TO THAT VVDS.                            *
         MACRO
&NAME    SBMSAVE                                                       X
               &BASE=R15,                                              X
               &SVAREA=INTERNAL,                                       X
               &ROOT=NO,                                               X
               &SAMECC=NO,                                             X
               &RETURN=(RETURN,0),                                     X
               &PARMREG=R1,                                            X
               &PASSREG=
         GBLB  &SAVEB
         LCLA  &SAVEA,&SAVEAA,&SAVEAAA,&SAVEA1
         LCLA  &CNT,&CNT1,&CNT2
         LCLA  &RC,&RTNCTL,&RTCCTL
         LCLB  &SAVEBB,&RT
         LCLB  &B13,&LPCT
         LCLB  &B13S
         LCLC  &USLBL
         LCLC  &RETL
         LCLC  &SAVEC
         LCLC  &USBS(6)
&USLBL   SETC  '*'
&RT      SETB  ('&ROOT' EQ 'YES')
&RTNCTL  SETA  1
&RTCCTL  SETA  2
&B13     SETB  ('&BASE(1)' EQ '13' OR '&BASE(1)' EQ 'R13' AND '&SVAREA'X
                EQ 'INTERNAL')
&SAVEA1  SETA  &SYSNDX
         AIF   (&SAVEB).NOREGDF
&SAVEB   SETB  1
&NAME    CSECT
          SPACE
*              GENERAL REGISTER DEFINITION FOR XREF                  *
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         SPACE 2
         AGO   .USG
.NOREGDF ANOP
         ENTRY &NAME
&NAME    DS    0H                  ENTRY POINT
.USG     ANOP
         AIF   ('&NAME' NE '').SVCNT
&SAVEC   SETC  'GOGO'
         AGO   .NORE
.SVCNT   ANOP
&SAVEC   SETC  '&NAME'(1,4)
.NORE    ANOP
         USING *,R15
         AIF   (NOT &RT).C0
         LR    R15,R1              DOS ROOT PHASE COMPATIBILITY
.C0      ANOP
         B     *+28
         DC    AL1(24),CL8'&NAME',CL15'&SYSDATE.--&SYSTIME'
         AIF   (&RT).C1
         STM   R14,R12,12(R13)     SAVE REGISTERS
.C1      ANOP
&SAVEAA  SETA  1
&SAVEA   SETA  N'&BASE
         AIF   ('&SVAREA' EQ 'NO').NOTBSER
         AIF   ('&BASE' NE '15' AND '&BASE' NE 'R15').NOTBSER
         MNOTE 8,'*** POSSIBLE BASE PROBLEM, SVAREA REQ''D BASE=&BASE'
.NOTBSER ANOP
.REGLOP  AIF   (&SAVEAAA EQ &SAVEA).REGLOP1
&SAVEAAA SETA  &SAVEAAA+1
         AIF   ('&BASE(&SAVEAAA)' NE '&PARMREG').REGLOP
         MNOTE 12,'*** PARMREG AND BASE &BASE(&SAVEAAA) EQUAL CORRECT'
.REGLOP1 ANOP
         AIF   ('&BASE' EQ '15' OR '&BASE' EQ 'R15').NOMOBS
         AIF   (N'&BASE NE 1).REGLOP2
&USBS(1) SETC  '&BASE'
         AGO   .USEND
.REGLOP2 ANOP
&CNT     SETA  K'&BASE
&CNT1    SETA  2
&CNT2    SETA  1
.USLOP   AIF   (&CNT-&CNT1 LT 9).USLAST
&USBS(&CNT2) SETC '&BASE'(&CNT1,8)
&CNT1    SETA  &CNT1+8
&CNT2    SETA  &CNT2+1
         AGO   .USLOP
.USLAST  ANOP
         AIF   (&CNT-&CNT1-1 LE 0).USEND
&USBS(&CNT2) SETC '&BASE'(&CNT1,&CNT-&CNT1)
.USEND   ANOP
         AIF   (&B13).NOMOBS
         BALR  &BASE(1),R0         LOAD FIRST OR ONLY BASE
.B13USG  USING &USLBL,&USBS(1)&USBS(2)&USBS(3)&USBS(4)&USBS(5)&USBS(6)
.LOADBSS AIF   ('&SAVEA' EQ '1').NOMOBS
&SAVEA   SETA  &SAVEA-1
&SAVEAAA SETA  &SAVEAA
&SAVEAA  SETA  &SAVEAA+1
         LA    &BASE(&SAVEAA),2048(&BASE(&SAVEAAA)) LOAD BASE
         LA    &BASE(&SAVEAA),2048(&BASE(&SAVEAA)) LOAD BASE
         AGO   .LOADBSS
.NOMOBS  ANOP
         AIF   (&B13S).B13OUT
         AIF   ('&PARMREG' EQ 'R1' OR '&PARMREG' EQ '1').NOPRG
&SAVEBB  SETB  1
         LR    &PARMREG,R1         SAVE PARAMETER LIST ADDRESS
         AGO   .PRGLOD
.NOPRG   AIF   ('&SVAREA' EQ 'NO').NOSVE
         AIF   ('&BASE' NE '2' AND '&BASE' NE '2').OKPSVE
         MNOTE 8,'***  &BASE  EQUAL TO PARM SAVE DEFAULT REG R2 - CHANGX
               E BASE OR CODE THE PARMREG PARAMETER'
.OKPSVE  ANOP
         LR    R2,R1               SAVE PARAMETER LIST ADDRESS
.PRGLOD  AIF   ('&SVAREA' EQ 'NO').NOSVE
         AIF   ('&SVAREA' EQ 'EXTERNAL' OR '&SVAREA' EQ 'YES').GTMN
         LA    R1,&SAVEC&SYSNDX    GET ADDRESS OF INTERNAL SAVE AREA
         AGO   .SVELNK
.GTMN    GETMAIN R,LV=72           GET A NEW SAVEAREA
.SVELNK  ANOP
         ST    R13,4(R1)
         AIF   (&RT).C2
         ST    R1,8(R13)           SAVE NEW SAVEAREA ADDRESS
.C2      ANOP
         LR    R13,R1              SET NEW SAVEAREA ADDRESS IN R13
&B13S    SETB  1
&USLBL   SETC  '&SAVEC&SYSNDX'
         AIF   (&B13).B13USG
.B13OUT  ANOP
         AIF   ('&SVAREA' NE 'EXTERNAL' AND &SVAREA' NE 'YES').SVBR
         AIF   ('&SVAREA' NE 'EXTERNAL').SVBR
.NOSVE   AIF   ('&RETURN' EQ 'NO').NORET
.SVBR    B     &SAVEC&SAVEA1       GO TO EXECUTE
         AIF   ('&SVAREA' EQ 'EXTERNAL' OR '&SVAREA' EQ 'YES' OR '&SVARX
               EA' EQ 'NO').NOISVE
&SAVEC&SYSNDX DC 9D'0'             INTERNAL SAVEAREA
.NOISVE  ANOP
         AIF   (&RT OR '&RETURN' EQ 'NO').NORET
&RETL    SETC  'RETURN'
         AIF   ('&RETURN' EQ '').NORLB
&RETL    SETC  '&RETURN(&RTNCTL)'
.NORLB   ANOP
&RETL    DS    OH            RETURN TO CALLER
         AIF   ('&SVAREA' EQ 'NO').NOSVE2
         AIF   ('&SVAREA' NE 'EXTERNAL').SVL13
         LR    R1,R13              GET ADDRESS OF SAVAREA TO FREE
.SVL13   L     R13,4(R13)          RESTORE OLD SAVEAREA ADDRESS IN R13
         AIF   ('&SVAREA' NE 'EXTERNAL').NOSVE2
         FREEMAIN R,LV=72,A=(1)    FREE NEW SAVEAREA
.NOSVE2  ANOP
         AIF   ('&PASSREG' EQ '').SLM
         AIF   ('&PASSREG' EQ '15' OR '&PASSREG' EQ 'R15').LEAV15
         LR    R15,&PASSREG        SAVE VALUE IN PASSREG
         LM    R0,R12,20(R13)      RESTORE ALL REGS BUT R14-R15
         L     R14,12(R13)         RESTORE R16
         LR    &PASSREG,R15        RESTORE PASSREG VALUE
         AGO   .RC
.LEAV15  LM    R0,R12,20(R13)      RESTORE ALL REGS BUT R14-R15
         L     R14,12(R13)         RESTORE R16
         AGO   .RC
.TWO     ANOP
&RTNCTL  SETA  &RTNCTL+2
&RTCCTL  SETA  &RTCCTL+2
         AGO   .NOISVE
.SLM     ANOP
         LM    R14,R12,12(R13)     RESTORE REGISTERS
.RC      AIF   (N'&RETURN LT 2).NORCD
&RC      SETA  &RETURN(&RTCCTL)
.NORCD   ANOP
         AIF   ('&PASSREG' EQ '15' OR '&PASSREG' EQ 'R15').R15PSRG
         LA    R15,&RC             PLACE RETURN CODE IN R15
.R15PSRG AIF   ('&SAMECC' EQ 'NO').BR14
         SPM   R14                 RESTORE CONDITION CODE
.BR14    BR    R14                 RETURN TO CALLER
         AIF   (&RTCCTL LT N'&RETURN).TWO
.NORET   ANOP
&SAVEC&SAVEA1  EQU *               START OF MODULE
         AIF   (&SAVEBB).PRMREG
         AIF   ('&SVAREA' EQ 'NO').PRMREG
         LR    R1,R2               RESTORE PARAMETER REGISTER
.PRMREG  ANOP
         EJECT
         MEND
BLDG     TITLE 'BUILD DIAGNOSE CARDS FOR NIGHTLY RUNS'
         EJECT
*    THE FOLLOWING IS USED TO MAP THE IDCAMS INPUT RECORDS            *
IDCREC   DSECT
IDCCC     DS    CL1        PRINTER CONTROL FIELD
IDCDATA  DS    CL120      MAXIMUM IDCAMS RECORD
         SPACE 2
         ORG   IDCDATA             OVERLAY THE IDCDATA AREA
IDCNVTG  DS    CL7        'CLUSTER'   TAG OF RECORD
         DS    CL9        ' ------- '
IDCNAME  DS    CL44       MAXIMUM DATASET NAME
         SPACE 2
         ORG   IDCDATA             OVERLAY THE IDCDATA AREA
         DS    CL5        '     '
IDCVLTG  DS    CL6        'IN-CAT'   TAG OF RECORD
         DS    CL5        ' --- '
IDCAT    DS    CL44       CATALOG NAME
         ORG
IDCLENX  EQU   *-IDCCC             LENGTH OF ENTRY
         EJECT
IOPNTRS  DSECT
IOUSR    DS    A                   ADDRESS OF USER DATA
IOFLGS   DS    A                   ADDRESS OF FLAGS
*      BYTE 1 (OPERATION)
IOPEN    EQU   0                   OPEN FILE
IOCLOSE  EQU   4                   CLOSE FILE
IOGET    EQU   8                   GET RECORD
IOPUT    EQU   12                  PUT RECORD
*      BYTE 2
IOPENG   EQU   128                 OPEN FOR INPUT
IOPENP   EQU   64                  OPEN FOR OUTPUT
IOPENI   EQU   32        IOINFO CONTAINS ADDRESS OF DDNAME ON OPEN
IOPEND   EQU   16        IOINFO CONTAINS ADDRESS OF DATASET ON OPEN
*      BYTE 3,4 (RECORD TYPE FOR PUT ONLY
IOPUTN   EQU   0                   NORMAL DATA RECORD TO BE WRITTEN
*              N     MESSAGE SERIAL NUMBER IF IDC MESSAGE TO BE
*                    WRITTEN
IOINFO   DS    A                   ADDRESS OF I/O INFO
*   ON OPEN, IOINFO CONTAINS POINTER TO DDNAME OR DATASETNAME
*      DDNAME - 8 BYTE FIELD LEFT-JUSTIFIED CONTAINING DDNAME.
*      DATASETNAME - 44 BYTE FIELD CONTAINING THE DATASET NAME.
*   ON CLOSE, IOINFO CONTAINS POINTER TO DATASET NAME AS ABOVE.
*   FOR A GET OR PUT IOINFO POINTS TO AN 8 BYTE AREA.
*         (ON A GET THE USER I/O ROUTINE RETURNS THE INFO TO
*               THE PROCESSOR, FOR A PUT THE PROCESSOR GIVES
*               THIS INFORMATION TO THE USER'S I/O ROUTINE.)
*   RECORD(GET):    ADDRESS OF RETRIEVED RECORD
*   RECORD(LENGTH): FULL WORD LENGTH OF RETRIEVED RECORD.
*
*   RECORD(PUT):    ADDRESS OF RECORD TO BE WRITTEN
*   RECORD(LENGTH): FULL WORD LENGTH OF RECORD TO BE WRITTEN.
*
*     GET OR PUT   ADDRESS OF RECORD   A
*                  RECORD LENGTH       F
         EJECT
BLDDIAG  SBMSAVE BASE=(R12)
         EJECT
         L     R3,=V(HCARDS)
         ST    R3,SAVE3
         OPEN  (SYSIN,(INPUT))
         OPEN  (SYSPUNCH,(OUTPUT))
BLLOOP   DS    0H
         GET   SYSIN,CARDREC
         EJECT
         MVC   ADSN,CARDREC            MOVE TO USER AREA
         LINK EP=IDCAMS,PARAM=(IDOPTS,IDDNMS,IDPGNO,IDIOLST),VL=1
         LTR  R15,R15              CHECK RETURN
         B    BLLOOP
ENDIT    DS   0H
         CLOSE SYSIN
         L     R3,=V(HCARDS)
         ST    R3,SAVE3
         MVC   PRJCL,JOBCARD
*        PUT   SYSPRINT,PLINE
         PUT   SYSPUNCH,PRJCL
         MVC   PRJCL,JOBCARD1
*        PUT   SYSPRINT,PLINE
         PUT   SYSPUNCH,PRJCL
         MVC   PRJCL,ROUTCARD
*        PUT   SYSPRINT,PLINE
         PUT   SYSPUNCH,PRJCL
STEPLOOP DS    0H
         ZAP   DDNBRP,=P'0'
         MVC   HOLDCAT,45(R3)
         MVC   COMCAT,HOLDCAT
         MVC   PRJCL,COMCARD1
         PUT   SYSPUNCH,PRJCL
         MVC   PRJCL,COMCARD
         PUT   SYSPUNCH,PRJCL
         MVC   PRJCL,COMCARD1
         PUT   SYSPUNCH,PRJCL
         AP    STNBRP,=P'1'
         UNPK  STEPNBR,STNBRP
         OI    STEPNBR+2,X'F0'
         MVC   PRJCL,STEPCARD
*        PUT   SYSPRINT,PLINE
         PUT   SYSPUNCH,PRJCL
         MVC   PRJCL,PRNTCARD
*        PUT   SYSPRINT,PLINE
         PUT   SYSPUNCH,PRJCL
LOPDDCD  DS    0H
         AP    DDNBRP,=P'1'
         MVC   DDDSN,0(R3)
         MVC   DDVOLS,DDDSN+11
         MVC   DDCNBR,DDVOLS
         MVC   PRJCL,DDCARD1
         PUT   SYSPUNCH,PRJCL
         MVC   PRJCL,DDCARD2
         PUT   SYSPUNCH,PRJCL
         LA    R3,88(R3)
         CLC   HOLDCAT(20),45(R3)    IS IT SAME CATALOG
         BE    LOPDDCD
         ST    R3,SAVE3A
         L     R3,SAVE3
GETOUT   DS    0H
         MVC   PRJCL,SYSCARD
*        PUT   SYSPRINT,PLINE
         PUT   SYSPUNCH,PRJCL
         ZAP   DDNBRP,=P'0'
LOPDINP  DS    0H
         MVC   DIAV1NBR,11(R3)
         MVC   DIAV3NBR,DIAV1NBR
         MVC   DIAV2CAT,45(R3)
         MVC   DIAV4CAT,45(R3)
         MVC   PRJCL,DIAV1
         PUT   SYSPUNCH,PRJCL
         MVC   PRJCL,DIAV2
         PUT   SYSPUNCH,PRJCL
         MVC   PRJCL,DIAV3
*        PUT   SYSPRINT,PLINE
         PUT   SYSPUNCH,PRJCL
         MVC   PRJCL,DIAV4
*        PUT   SYSPRINT,PLINE
         PUT   SYSPUNCH,PRJCL
         LA    R3,88(R3)
         CLC   HOLDCAT(20),45(R3)    IS IT SAME CATALOG
         BE    LOPDINP
         CLC   0(8,R3),BLANKS
         BE    GETOUTX
         L     R3,SAVE3A
         ST    R3,SAVE3
         B     STEPLOOP
GETOUTX  DS    0H
         CLOSE SYSPRINT
         CLOSE SYSPUNCH
         B   RETURN
         EJECT
*     IDCAMS CALL OPTION LIST
IDOPTS   DC    H'0'                NO OPTIONS TO PASS
IDDNMS   DC    H'0'                NO ALTERNATE DDNAMES
IDPGNO   DC    H'0'                NO PAGE NUMBER
IDIOLST  DC    F'2'                NUMBER OF GROUPS WHICH FOLLOW
IDADN1   DC    A(ASYSIN)           ADDRESS OF SYSIN
IDAIO1   DC    A(BLDSIO)           ADDRESS OF I/O ROUTINE
IDAUS1   DC    A(ASYSUS)           ADDRESS OF USER AREA
IDADN2   DC    A(ASYSPRNT)         ADDRESS OF SYSIN
IDAIO2   DC    A(BLDSIP)           ADDRESS OF I/O ROUTINE
IDAUS2   DC    A(ASYSUS)           ADDRESS OF USER AREA
ASYSIN   DC    CL10'DDSYSIN'       USE THIS FOR SYSIN
ASYSUS   DC    CL80' '             I/O AREA
         ORG   ASYSUS
ADSN     DC    CL44' '
         ORG
ASYSPRNT DC    CL10'DDSYSPRINT'    USE THIS FOR SYSPRINT
         EJECT
         LTORG
CARDREC  DS    CL80
         EJECT
*   SYSIN   - DCB FOR INPUT SWAP CARDS                            *
SYSIN    DCB   DSORG=PS,MACRF=GM,RECFM=FB,,LRECL=80,                   X
               DDNAME=SYSIN,EODAD=ENDIT
         EJECT
BLDSIO   SBMSAVE ROOT=NO,RETURN=(A90,0,A94,4,A98,8,A9C,12),BASE=(R8)
         LR    R6,R1              LOAD PASSED PARMS
         USING IOPNTRS,R6
         L     R15,IOFLGS
         XR    R5,R5
         IC    R5,0(R15)          REG 3 CONTAINS TYPE OF OPERATION
         B     ASYSFUNC(R5)
ASYSFUNC DS    0H
         B     ASOPEN
         BE    ASCLOSE
         BE    ASGET
         BE    ASPUT
         DC    F'0'                THEN ABEND
ASOPEN   DS    0H
         L     R5,IOUSR            POINT TO USER AREA
         MVC   ASC1NM,0(R5)        MOVE NAME TO I/O AREA
         MVC   PDSCAT,BLANKS     CLEAR THE DATA SET NAME
         MVC   PDSCAT(L'ASC1NM),ASC1NM
         MVI   FIRST,C' '          RESET TO FIRST CARD
         B     A90
ASPUT    DS    0H
ASCLOSE  DS    0H
*      NO ACTUAL FILE SO JUST RETURN TO PROCESSOR
*      WITH 0 RETURN CODE
         B     A90
ASGET    DS    0H
         L     R5,IOINFO
         CLI   FIRST,C'1'
         BE    A94
         MVI   FIRST,C'1'      SHOW DONE WITH FUNCTION
         MVC   0(4,R5),=A(ASCARD1)
         MVC   4(4,R5),=F'80'
         B     A90
         EJECT
ASCARD1  DC    CL80' '
         ORG   ASCARD1+2
         DC    C'LISTC LVL(SYS1.VVDS) CAT('
ASC1NM   DC    CL30' '
         DC    C')'
         ORG
FIRST    DC    C' '
         TITLE 'IDCAMS PROCESSOR FOR PRINT LINES'
BLDSIP   SBMSAVE ROOT=NO,RETURN=(B90,0,B94,4,B98,8,B9C,12),           X
               BASE=(R10,R11)
         LR    R6,R1              LOAD PASSED PARMS
         USING IOPNTRS,R6
         L     R15,IOFLGS
         MVC   HOLDER,2(R15)      MOVE ERROR TO HOLD POSITION
         XR    R5,R5
         IC    R5,0(R15)          REG 3 CONTAINS TYPE OF OPERATION
         B     BSYSFUNC(R5)
BSYSFUNC DS    0H
         B     BSOPEN
         BE    BSCLOSE
         BE    BSGET
         BE    BSPUT
         DC    F'0'                THEN ABEND
BSOPEN   DS    0H
         OPEN  (SYSPRINT,(OUTPUT))
         B     B90
BSGET    DS    0H
*      NO ACTUAL FILE SO JUST RETURN TO PROCESSOR
*      WITH 0 RETURN CODE
         B     B90
BSPUT    DS    0H
         L     R5,IOINFO
         L     R9,0(R5)
         L     R7,4(R5)            LENGTH OF FIELD FOR VARIABLE MOVE
         USING IDCREC,R9
BLDTBL   DS    0H
         SPACE 2
         CLC   HOLDER,=H'0'        IS THERE AN ERROR
         BE    ARNDUM              NOT THIS TIME
         CLC   HOLDER,=X'FFFF'     NORMAL COMPLETION
         BE    B90                 NOT THIS TIME
         CLC   HOLDER,=X'FFFE'     NORMAL COMPLETION
         BE   B90                  NOT THIS TIME
         EX   R7,MVCDUM
         PT   SYSPRINT,IDCLINE
         MVC  IDCLINE,BLANKS
         LH   R5,HOLDER           PICK UP ERROR CODE
         CP   DWORD,=P'1'           NORMAL COMPLETION
         BE    B90                 NOT THIS TIME
         CLC  DWORD,=P'2'
         BE    B90                 NOT THIS TIME
         CVD  R5,DWORD            MAKE IT USEFUL
         DC   F'0'
         MVC  IDCLINE+2(6),ED5MSK
         ED   IDCLINE+2(6),DWORD+5
         PUT  SYSPRINT,IDCLINE
         MVC  IDCLINE,BLANKS
         B    ARNDUM
MVCDUM   MVC  IDCLINE(0),0(R9)
ARNDUM   DS    0H
         CLC   IDCNVTG,=C'CLUSTER'    IS THIS A DATASET NAME
         BE    BLDNAME             MOVE THE NAME
         CLC   IDCVLTG,=C'IN-CAT'    IS THIS A VOLSER RECORD?
         BNE   B90
         EJECT
GOTVOLS  DS    0H
         MVC   PDSCAT,BLANKS     CLEAR THE DATASET NAME
         LA    R4,17               LENGTH OF UNWANTED STUFF
         SR    R7,R4               FROM LENGTH OF WHOLE LINE
         BCTR  R7,0                MINUS 1 FOR EX LENGTH
         EX    R7,MOVCAT
         PUT   SYSPRINT,PLINE
         MVC   PLINE,BLANKS
         B     B90
         SPACE 3
MOVCAT   MVC  PDSCAT(0),IDCAT
         SPACE 3
BLDNAME  DS    0H
         MVC   PDSVVDS,BLANKS     CLEAR THE DATASET NAME
         LA    R4,17               LENGTH OF UNWANTED STUFF
         SR    R7,R4               FROM LENGTH OF WHOLE LINE
         BCTR  R7,0                MINUS 1 FOR EX LENGTH
         EX    R7,MOVVVDS
         ST   R3,SAVE3A
         L    R3,SAVE3
         MVC  0(44,R3),PDSVVDS
         MVC  45(44,R3),PDSCAT
         LA   R3,88(R3)
         ST   R3,SAVE3
         L    R3,SAVE3A
         B     B90
         SPACE 3
MOVVVDS  MVC  PDSVVDS(0),IDCNAME
         SPACE 3
         EJECT
ENDBLD   DS    0H
BSCLOSE  DS    0H
         B     B90
*  PRINTER/PUNCH WORK AREAS
IDCLINE  DC    CL133' '
         SPACE 2
PDSCAT   DC    CL44' '             DATASET ORGANIZATION
PDSVVDS  DC    CL44' '             RECORD FORMAT
PLINE    DC    CL133' '
         ORG   PLINE
         ORG   PLINE+10
PRJCL    DS    CL80
         ORG
         EJECT
DWORD    DC    D'0'                DOUBLEWORD WORK AREA
HOLDER   DC    H'0'                HOLD ERROR FROM IDCAMS
ED4MSK   DC    XL4'40202120'         EDIT MASK FOR EXTENTS
ED5MSK   DC    XL6'402020202120'     EDIT MASK FOR BLK AND LRECL
BLANKS   DC    CL200' '
SAVE3    DC   F'0'
SAVE3A   DC   F'0'
DDNBRP   DC   PL2'0'
STNBRP   DC   PL2'0'
HOLDCAT  DC   CL44' '
JOBCARD  DC   CL80'//T#TCDIAG JOB (0,845-T#T100TC--P1------),H45D7,'
JOBCARD1 DC   CL80'//  MSGCLASS=A,CLASS=5,NOTIFY=T#TC '
ROUTCORD DC   CL80'/*ROUTE PRINT U99'
COMCARD1 DC   CL80'//*'
COMCARD  DC   CL80' '
         ORG   COMCARD
         DC   C'//* CATALOG DIAGNOSE FOR '
COMCAT   DC   CL42' '
         ORG
STEPCARD DC   CL80' '
         ORG  STEPCARD
         DC   C'//STEP'
STEPNBR  DC   CL3'000'
         DC   C'   EXEC PGM=IDCAMS '
         ORG
PRNTCARD DC   CL80'//SYSPRINT DD  SYSOUT=A '
DDCARD1  DC   CL80' '
         ORG  DDCARD1
         DC   C'//'
DDCNBR   DC   CL6' '
         DC   C'   DD  AMP=AMORG,DISP=SHR,UNIT=DISK,'
         ORG
DDCARD2  DC   CL80' '
         ORG  DDCARD2
         DC   C'//    VOL=SER='
DDVOLS   DC   CL6' '
         DC   C',DSN='
DDDSN    DC   CL44' '
         ORG
SYSCARD  DC   CL80'//SYSIN  DD * '
DIAV1    DC   CL80' '
         ORG  DIAV1
         DC   C'  DIAG VVDS NOLIST IFILE('
DIAV1NBR DC   CL6' '
         DC   C') -'
         ORG
DIAV2    DC   CL80' '
         ORG  DIAV2
         DC   C'   CMPRDS('
DIAV2CAT DC   CL42' '
         DC   C')'
         ORG
DIAV3    DC   CL80' '
         ORG  DIAV3
         DC   C'  DIAG ICFCAT NOLIST CMPRDD('
DIAV3NBR DC   CL6' '
         DC   C') -'
         ORG
DIAV4    DC   CL80' '
         ORG  DIAV4
         DC   C'   IDS('
DIAV4CAT DC   CL42' '
         DC   C')'
         ORG
         EJECT
*   SYSPRINT- DCB FOR DSN LISTING                                 *
SYSPRINT DCB   DSORG=PS,MACRF=PM,RECFM=FBA,LRECL=133,BLKSIZE=133,      X
               DDNAME=AMSPRINT
SYSPUNCH DCB   DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80,                    X
               DDNAME=SYSPNCH
BUFFERS   CSECT
          ENTRY HCARDS
          DS    0F
HCARDS   DC    500CL88' '
         DC    CL60'FFF'
         END

Larry D House
Senior Systems Programmer
Illinois Power Company (USA)              c Illinois Power Company 1991

