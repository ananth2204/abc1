Catalog back-up process - revisited

The article Catalog back-up process in VSAM Update issue 5
(April 1992) inspired me to add the following precautionary
steps which are important when doing maintenance to a
catalog.

For integrity reason, concurrent (update) access to an integrated
user catalog must be avoided when doing maintenance to a
catalog. The catalog should be locked using the IDCAMS
ALTER LOCK function, and unlocked after maintenance is
done so that normal operations can resume. The following is a
sample JCL to lock and unlock a catalog,

//LOCK      EXEC PGM = IDCAMS
//SYSPRINT  DD SYSOUT= *
//SYSIN     DD *
   ALTER Catalog-Name LOCK CATALOG(Catalog-Name)

//UNLOCK    EXEC PGM = IDCAMS
//SYSPRINT  DD SYSOUT= *
//SYSIN     DD *
   ALTER Catalog-Name UNLOCK CATALOG(Catalog-Name)

Before we lock a catalog we need to be certain that at least one
user can access the catalog after it is locked, otherwise nobody
can access it. In our site we use RACF to control catalog
function. The following RACF command shows how to
accomplish the above task:

      RDEFINE FACILITY IGG.CATLOCK UACC(NONE) OWNER(Owner-id)
      PERMIT CLASS(FACILITY) IGG.CATLOCK ID(Cat-Admin) ACC(READ)
      SETROPTS CLASSACT(FACILITY)

The RDEFINE command defines a RACF source profile name
IGG.CATLOCK in class FACILITY with universal access
NONE and assign Owner-id as the owner of the profile. The
PERMIT command lets Cat-Admin access the catalog when the
catalog is locked, and the SETROPTS command activates the
FACILITY class in RACF.

I hope this will help other readers when doing catalog
maintenance in their shops.

Gunawan Lucas
Systems Programmer (Indonesia)        c Gunawan Lucas 1992

