Generation of diagnose cards for IDCAMS

This PL/I program creates IDCAMS cards ('DIAGNOSE
ICFCAT VS VVDS' and 'DIAGNOSE VVDS VS ICFCAT) for
ICF catalogs in an MVS system.

This is useful after a crash on several user catalogs or disks; it
greatly reduces the tedious work (searching and editing)
necessary to write these diagnose cards for all the volumes
involved in such a situation.

The program produces a list of all the volumes present in the
user catalog.

      IDCAMS:   LISTCAT LEVEL(SYS1.VVDS) NAME CAT(USERCAT)

Then scans this list and writes IDCAMS DIAGNOSE cards.

      IDCAMS:   DIAGNOSE ICFCAT INFILE(INCAT) -
                 COMPAREDS(SYS1.VVDS.VXXXXXX)

and

               DIAGNOSE VVDS IDS(SYS1.VVDS.VXXXXXX) -
                 COMPAREDD(INCAT)

Notes:

o      The program depends upon the layout of the SYSOUT in
      IDCAMS, so be careful if you are installing or running a
      new version.

o      It is very easy to rewrite this short program in Assembler
      or COBOL if you want.

o      You can execute the diagnoses in separate jobs if you want
      to (these functions take a lot of time to complete).

//STODODC1 JOB (,   ***---> PIERRE OUELLET <---***
//  '256136532',89OD0001),'OUELLET PIERRE',
//  NOTIFY=ROUP002,CLASS=O,MSGCLASS=A,TIME=(0004,30)
/*ROUTE PRINT ECRAN
/*JOBPARM ROOM=523
//*  DCATVVDS:  DIAGNOSE ICFCAT <---> VVDS
//DCATVVDS PROC
//*  LISTCAT:  ASSOCIATIONS CAT/VVDS
//LISTCAT  EXEC PGM=IDCAMS
//SYSPRINT DD DUMMY
//OUT1     DD DSN=&&LISTCV,DISP=(NEW,PASS),
//         UNIT=VIO,
//         SPACE=(TRK,(9,9)),DCB=(RECFM=VBA,LRECL=255,BLKSIZE=3600)
//*  PLIXCLG: START (GENERATION OF DIAGNOSE CARDS (IDCAMS))
//PLI      EXEC PGM=IEL0AA,PARM='OBJECT,NODECK,AG,MAP',REGION=1024K
//SYSPRINT DD  DUMMY
//SYSLIN   DD  DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,
//             SPACE=(80,(250,100))
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,
//             SPACE=(1024,(200,50),,CONTIG,ROUND),DCB=BLKSIZE=1024
//* ---> PL/I PROGRAM IN YOUR PDS BELOW (OR IN STREAM IF YOU PREFER)
//SYSIN    DD  DSN=TR40051,ROUP002.JCL(DCATVPLI),DISP=SHR
//LKED     EXEC PGM=IEWL,PARM='XREF,LIST',COND=(9,LT,PLI),REGION=1256K
//SYSLIB   DD  DSN=SYS2.PLILIB,DISP=SHR   <--- YOUR PL/I LIBRARY
//SYSLMOD  DD  DSN=&&GOSET(GO),DISP=(MOD,PASS),UNIT=SYSDA,
//             SPACE=(1024,(50,20,1))
//SYSUT1   DD  DSN=&&SYSUT1,UNIT=SYSDA,SPACE=(1024,(200,20)),
//             DCB=BLKSIZE=1024
//SYSPRINT DD  DUMMY
//SYSLIN   DD  DSN=&&LOADSET,DISP=(OLD,DELETE)
//         DD  DDNAME=SYSIN
//SYSIN    DD  DUMMY
//GO       EXEC PGM=*.LKED.SYSLMOD,COND=((9,LT,PLI),(9,LT,LKED)),
//             REGION=900K
//SYSPRINT DD  DUMMY
//PLIDUMP  DD SYSOUT=A
//SYSUDUMP DD SYSOUT=A
//SYS100   DD DSN=&&LISTCV,DISP=(OLD,DELETE)
//SYS201   DD DSN=&&TEMP1,DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),
//            UNIT=VIO,SPACE=(TRK,(9,9)),DISP=(NEW,PASS)
//SYS202   DD DSN=&&TEMP2,DCB=(RECFM=FB,LRECL=80,BLKSIZE=3200),
//            UNIT=VIO,SPACE=(TRK,(9,9)),DISP=(NEW,PASS)
//*  PLIXCLG: END
//*  DIAGCV:  DIAGNOSE CAT VS VVDS (IDCAMS)
//DIAGCV EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=A
//INCAT    DD DSN=&UCAT,DISP=SHR
//SYSIN    DD DSN=&&TEMP1,DISP=(OLD,DELETE)
//*  DIAGVC:  DIAGNOSE VVDS VS CAT (IDCAMS)
//DIAGVC EXEC PGM=IDCAMS
//SYSPRINT DD SYSOUT=A
//INCAT    DD DSN=&UCAT,DISP=SHR
//SYSIN    DD DSN=&&TEMP2,DISP=(OLD,DELETE)
//       PEND
//*  ---> THE CATALOG NAME IN 'UCAT=...' AND 'CAT(...)' BELOW
//RUN    EXEC DCATVVDS,UCAT='ICF.CATA.DEV1'
//LISTCAT.SYSIN DD *
  LISTCAT LEVEL(SYS1.VVDS) NAME CAT(ICF.CATA.DEV1) OUTFILE(OUT1)
//
  LISTCAT LEVEL(SYS1.VVDS) NAME CAT(ICF.CATA.PRO1) OUTFILE(OUT1)
  LISTCAT LEVEL(SYS1.VVDS) NAME CAT(ICF.CATA.DEV1) OUTFILE(OUT1)
  LISTCAT LEVEL(SYS1.VVDS) NAME CAT(ICF.VCATPROD)  OUTFILE(OUT1)
  LISTCAT LEVEL(SYS1.VVDS) NAME CAT(ICF.VCATEST)   OUTFILE(OUT1)
  LISTCAT LEVEL(SYS1.VVDS) NAME CAT(ICF.SYSV.REV237) OUTFILE(OUT1)
  LISTCAT LEVEL(SYS1.VVDS) NAME CAT(MCATSYS1) OUTFILE(OUT1)
  LISTCAT LEVEL(SYS1.VVDS) NAME CAT(CATALOG.SYS2RA) OUTFILE(OUT1)
-VFTEMP:PROC OPTIONS(MAIN);
0  DCL SYS100 FILE INPUT RECORD;
   DCL SYS201 FILE OUTPUT RECORD;
   DCL SYS202 FILE OUTPUT RECORD;
   DCL SW_SYS100 BIT(1) INIT('0'B);
0  DCL 1 IN,
         5 LIBRE1 CHAR(17),
         5 VVDS CHAR(17),
         5 LIBRE2 CHAR(221);
0  DCL 1 OUT1,
         5 STRING1 CHAR(42)
           INIT('  DIAGNOSE ICFCAT INFILE(INCAT) COMPAREDS('),
         5 VVDS CHAR(17),
         5 STRING2 CHAR(1) INIT(')'),
         5 STRING3 CHAR(20) INIT(' ');
0  DCL 1 OUT2,
         5 STRING1 CHAR(20)
           INIT('  DIAGNOSE VVDS IDS('),
         5 VVDS CHAR(17),
         5 STRING2 CHAR(1) INIT(')'),
         5 STRING3 CHAR(17) INIT(' COMPAREDD(INCAT)'),
         5 STRING4 CHAR(25) INIT(' ');
0  ON ENDFILE(SYS100) SW_SYS100='1'B;
0  ON ERROR BEGIN;
     DISPLAY('*** ERR. DCATVVDS ***');
     ON ERROR SYSTEM;
     CALL PLIDUMP('TFHCB');
     STOP;
   END;
-  OPEN FILE(SYS100); OPEN FILE(SYS201); OPEN FILE(SYS202);
   CALL LIRE_SYS100;
0  DO WHILE (SW_SYS100='0'B);
     IF SUBSTR(IN.VVDS,1,10)='SYS1.VVDS.' THEN
     DO;
0      OUT1.VVDS=IN.VVDS; OUT2.VVDS=IN.VVDS;
       WRITE FILE(SYS201) FROM(OUT1);
       WRITE FILE(SYS202) FROM(OUT2);
     END;
     CALL LIRE_SYS100;
   END;
   CLOSE FILE(SYS100);
   CLOSE FILE(SYS201); CLOSE FILE(SYS202);
-  LIRE_SYS100: PROC;
0    IF SW_SYS100 ='0'B THEN
     DO;
       IN=' '; READ FILE(SYS100) INTO(IN);
     END;
0  END LIRE_SYS100;
-  END VFTEMP;

Pierre Ouellet
Systems Programmer
Government of Quebec (Canada)                   c Government of Quebec 1991

