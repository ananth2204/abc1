Obtaining information about VSAM files

This CLIST can be invoked from a screen by entering:

      tso %vsaminfo

There are no keywords to submit - a panel will ask for the
necessary information.  You can skip this panel by adding the
keyword dsn(xxx), where xxx is your VSAM component
name.

It gives the most frequently used key information from the
LISTCAT on each important group of components, eg the base
cluster (see Figure 1) or an alternate index cluster (see Figure
2), in a formatted and easily readable screen.  It works as well
with KSDS, ESDS, RRDS, and LDS.

You can enter the CLIST starting from whatever component
you know, eg cluster, index, aix-data, path, (see Figures 3 and
4).  You will always obtain in the first screen the type, creation
date and catalog of the entered component, the information
about the associated base cluster (including the last update date
and time), and the names of the AIX clusters associated with
this base cluster.  Then you may ask for information about each
AIX dataset by entering its number.  Although the screen for
the base cluster shows only the names of four AIXs (sufficient
in most cases) all of them are accessible by number.  The
CLIST converts Julian dates and timestamps to normal date
information.

It is easy to use in conjunction with the ISPF/PDF panel 3.4 :

o      When first used, type before the name of the VSAM
      component:

      %vsaminfo dsn(/)

o      If immediately reused, type '=' before the name of a
      component.


CLIST

PROC 0 DSN() DEBUG
     /*            */
     /*  VSAMINFO  */
     /*            */
IF &DEBUG = DEBUG THEN CONTROL LIST SYMLIST CONLIST
CONTROL NOMSG NOFLUSH NOPROMPT END(ENDO)
     /*            */
     /* initialize */
     /*            */
SET VSN = &DSN
SET VSTYP1 = CLUSTER
SET VSTYP2 = AIX
SET VSTYP3 = PATH
SET VSTYP4 = DATA
SET VSTYP5 = INDEX
     /*                         */
     /* ask VSAM component name */
     /*                         */
IF &VSN ¬= &STR() THEN GOTO SKP1
LNAME: +
ISPEXEC DISPLAY PANEL(VSINNAM)
     /*                  */
     /* end of program ? */
     /*                  */
IF &VSN = EEEEEEEEE THEN END
     /*                   */
     /* dataset exists ?  */
     /*                   */
SKP1: +
IF &SYSDSN('&VSN') = OK +
  OR &SYSDSN('&VSN') = UNAVAILABLE DATASET +
  THEN GOTO OK1
     /*      */
     /*  no  */
     /*      */
CONTROL ASIS
SET &ZEDSMSG = &STR(Entry not catalogued)
SET &ZEDLMSG = &STR(&VSN is not found in the catalog)
ISPEXEC SETMSG MSG(ISRZ001)
CONTROL CAPS
GOTO LNAME
     /*                 */
     /* yes: initialize */
     /*                 */
OK1: +
SET BC = &STR( )
SET A = 0
SET N = 1
DO I = 1 TO 5
  SET AIX&I = &STR( )
ENDO
     /*              */
     /* trap listcat */
     /*              */
SET DATASET = &VSN
SET LABEL = RVSN
GOTO TRAPLCT
RVSN: SET NOP = NOP
     /*                    */
     /* inspect first line */
     /*                    */
SET LINE = &STR(&SYSOUTLINE1)
SET POS = &SYSINDEX(-,&LINE)
IF &POS = 0 +
  THEN +
    DO
      CONTROL ASIS
      SET &ZEDSMSG = &STR(Non-VSAM)
      SET &ZEDLMSG = &STR(First line of listcat is : &LINE)
      ISPEXEC SETMSG MSG(ISRZ001)
      CONTROL CAPS
      GOTO LNAME
    ENDO
     /*                        */
     /* find type of component */
     /*                        */
SET N = 1
SET STRING = &SUBSTR(1:&POS-2,&STR(&LINE))
DO WHILE &N < 6
  SET ARG = &&VSTYP&N
  SET POS = &SYSINDEX(&STR(&ARG),&STRING)
  IF &POS ¬= 0 +
    THEN +
      DO
        SET TYPN = &N
        SET N = 99
      ENDO
    ELSE +
      SET N = &N + 1
ENDO
     /*            */
IF &N ¬= 99 +
  THEN +
    DO
      CONTROL ASIS
      SET &ZEDSMSG = &STR(Non-VSAM)
      SET &ZEDLMSG = &STR(First line of listcat is : &LINE)
      ISPEXEC SETMSG MSG(ISRZ001)
      CONTROL CAPS
      GOTO LNAME
    ENDO
     /*                                  */
     /* fill in information known so far */
     /*                                  */
SELECT
  WHEN (&TYPN = 1) +
    DO
      SET TYP = BASE CLUSTER
      SET BC = &VSN
      GOTO LCAT
    ENDO
  WHEN (&TYPN = 2) +
    DO
      SET TYP = AIX CLUSTER
      SET LINE = &STR(&&SYSOUTLINE11)
      SET POS = &SYSINDEX(CLUSTER,&LINE)
      SET BC = &SUBSTR(&POS+9:&LENGTH(&STR(&LINE)),&STR(&LINE))
      GOTO LCAT
    ENDO
  WHEN (&TYPN = 3) +
    DO
      SET TYP = PATH
      SET LINE = &STR(&&SYSOUTLINE8)
      SET POS = &SYSINDEX(CLUSTER,&LINE)
      IF &POS = 0 THEN GOTO LAIX1
      SET BC = &SUBSTR(&POS+9:&LENGTH(&STR(&LINE)),&STR(&LINE))
      GOTO LCAT
    ENDO
  WHEN (&TYPN = 4 OR &TYPN = 5) +
    DO
      SET LINE = &STR(&&SYSOUTLINE8)
      SET POS1 = &SYSINDEX(CLUSTER,&LINE)
      SET POS2 = &SYSINDEX(AIX,&LINE)
      SELECT
        WHEN (&POS1 ¬= 0 AND &TYPN = 4) +
          DO
            SET TYP = BASE DATA
            SET BC = &SUBSTR(&POS1+9:&LENGTH(&STR(&LINE)),&STR(&LINE))
            GOTO LCAT
          ENDO
        WHEN (&POS1 ¬= 0 AND &TYPN = 5) +
          DO
            SET TYP = BASE INDEX
            SET BC = &SUBSTR(&POS1+9:&LENGTH(&STR(&LINE)),&STR(&LINE))
            GOTO LCAT
          ENDO
        WHEN (&POS2 ¬= 0 AND &TYPN = 4) +
          DO
            SET TYP = AIX DATA
            GOTO LAIX1
          ENDO
        WHEN (&POS2 ¬= 0 AND &TYPN = 5) +
          DO
           SET TYP = AIX INDEX
           GOTO LAIX1
          ENDO
      ENDO   /* INNER SELECT           */
    ENDO     /* LAST WHEN OUTER SELECT */
  OTHERWISE +
    DO
     /*                             */
     /* not a regular VSAM dataset  */
     /*                             */
      SET LINE = &STR(&LINE)
      CONTROL ASIS
      SET &ZEDSMSG = &STR(Non-Vsam)
      SET &ZEDLMSG = &STR(8-th line of listcat is : &LINE)
      ISPEXEC SETMSG MSG(ISRZ001)
      CONTROL CAPS
      GOTO LNAME
    ENDO
ENDO         /* OUTER SELECT */
     /*                             */
     /* not a regular VSAM dataset  */
     /*                             */
SET LINE = &STR(&LINE)
CONTROL ASIS
SET &ZEDSMSG = &STR(Non-VSAM)
SET &ZEDLMSG = &STR(8th line of listcat is : &LINE)
ISPEXEC SETMSG MSG(ISRZ001)
CONTROL CAPS
GOTO LNAME
     /*                                     */
     /* search AIX-cluster of aix component */
     /*                                     */
LAIX1: +
SET LINE = &STR(&&SYSOUTLINE8)
SET POS = &SYSINDEX(AIX,&LINE)
SET AIX1 = &SUBSTR(&POS+9:&LENGTH(&STR(&LINE)),&STR(&LINE))
     /*                     */
     /* catalog information */
     /*                     */
LCAT: +
SET LINE = &STR(&&SYSOUTLINE2)
SET POS = &SYSINDEX(---,&LINE)
SET CAT = &SUBSTR(&POS+4:&LENGTH(&STR(&LINE)),&STR(&LINE))
     /*               */
     /* creation date */
     /*               */
SET LINE = &STR(&&SYSOUTLINE4)
SET POS = &SYSINDEX(.,&LINE)
SET CREDAT = &SUBSTR(&POS-2:&POS+3,&STR(&LINE))
SET ND = &STR( )
SYSCALL CONVJD &CREDAT ND
IF &LASTCC = 12 THEN END
     /*                        */
     /* display component type */
     /*                        */
ISPEXEC CONTROL DISPLAY LOCK
ISPEXEC DISPLAY PANEL(VSINCMP)
     /*            */
IF &TYPN = 1 THEN GOTO INFOBC
     /*            */
IF &BC ¬= &STR( ) THEN GOTO LSTCBC
     /*                                    */
     /* search base cluster on AIX listcat */
     /*                                    */
SET DATASET = &AIX1
SET LABEL = RAIX1
GOTO TRAPLCT
RAIX1: SET NOP = NOP
SET LINE = &STR(&&SYSOUTLINE11)
SET POS = &SYSINDEX(CLUSTER,&LINE)
SET BC = &SUBSTR(&POS+9:&LENGTH(&STR(&LINE)),&STR(&LINE))
     /*                         */
     /* listcat of base cluster */
     /*                         */
LSTCBC: +
SET DATASET = &BC
SET LABEL = RBC
GOTO TRAPLCT
RBC: SET NOP = NOP
     /*                                                  */
     /* search additional info on base cluster  -  start */
     /*                                                  */
INFOBC: +
SET LINE = &STR(&&SYSOUTLINE8)
SET POS = &SYSINDEX(DATA,&LINE) + 9
SET BD = &SUBSTR(&POS:&LENGTH(&STR(&LINE)),&STR(&LINE))
SET A = 0
SET DLT = 9
SET LINE = &STR(&&SYSOUTLINE9)
IF &SYSINDEX(INDEX,&LINE) = 0 +
  THEN SET BI = &STR( )
  ELSE +
    DO
      SET BI = &SUBSTR(&POS:&LENGTH(&STR(&LINE)),&STR(&LINE))
      SET DLT = 10
    ENDO
     /*            */
STARTAIX: +
SET L = &A + &DLT
SET LINE = &STR(&&SYSOUTLINE&L)
IF &SYSINDEX(AIX,&LINE) = 0 THEN GOTO ENDAIX
SET A = &A + 1
SET AIX&A = &SUBSTR(&POS:&LENGTH(&STR(&LINE)),&STR(&LINE))
GOTO STARTAIX
     /*            */
ENDAIX: +
IF &A > 4 +
  THEN SET MORE = MORE
  ELSE SET MORE = &STR()
     /*            */
SET SEARCH = CREATION
SET LABEL = RBCRD
GOTO RETRV
RBCRD: +
SET BCRDJ = &SUBSTR(3:8,&STR(&RESULT))
SET BCRD = &STR( )
SYSCALL CONVJD &BCRDJ BCRD
     /*            */
SET SEARCH = KEYLEN
SET LABEL = RBK
GOTO RETRV
RBK: +
SET BK = &RESULT
     /*            */
SET SEARCH = AVGLRECL
SET LABEL = RBRA
GOTO RETRV
RBRA: +
SET BRA = &RESULT
     /*            */
SET SEARCH = CISIZE
SET LABEL = RBCI
GOTO RETRV
RBCI: +
SET BCI = &RESULT
     /*            */
SET L = &L + 1
SET SEARCH = RKP
SET LABEL = RBP
GOTO RETRV
RBP: +
SET BP = &RESULT
     /*            */
SET SEARCH = MAXLRECL
SET LABEL = RBRM
GOTO RETRV
RBRM: +
SET BRM = &RESULT
     /*            */
SET POS = 0
DO WHILE &POS = 0
  SET L = &L + 1
  SET LINE = &STR(&&SYSOUTLINE&L)
  SET POS = &SYSINDEX(SHROPT,&STR(&LINE))
ENDO
SET BSHROPT = &SUBSTR(&POS:&POS+12,&LINE)
SET DSTYP = &SUBSTR(66:75,&LINE)
SELECT
  WHEN (&DSTYP = &STR(NONINDEXED))  SET BT = ESDS
  WHEN (&DSTYP = &STR(INDEXED   ))  SET BT = KSDS
  WHEN (&DSTYP = &STR(NUMBERED  ))  SET BT = RRDS
  WHEN (&DSTYP = &STR(LINEAR    ))  SET BT = LDS
  OTHERWISE +
    DO
      WRITE *** ERROR IN CLIST ***
      END
    ENDO
ENDO
     /*            */
SET L = &L + 1
SET LINE = &STR(&&SYSOUTLINE&L)
SET POS = &SYSINDEX(REUSE,&LINE)
SET BREUS = &SUBSTR(&POS-2:&POS+4,&LINE)
     /*            */
SET SEARCH = &STR(REC-TOTAL)
SET LABEL = RBRN
GOTO RETRV
RBRN: +
SET BRN = &RESULT
     /*            */
SET SEARCH = &STR(SPLITS-CI)
SET LABEL = RBSI
GOTO RETRV
RBSI: +
SET BSI = &RESULT
     /*            */
SET L = &L + 1
SET SEARCH = &STR(SPLITS-CA)
SET LABEL = RBSA
GOTO RETRV
RBSA: +
SET BSA = &RESULT
     /*            */
SET SEARCH = EXTENTS
SET LABEL = RBRE
GOTO RETRV
RBRE: +
SET BRE = &RESULT
     /*            */
SET L = &L + 2
SET LINE = &STR(&&SYSOUTLINE&L)
SET POS = &SYSINDEX(&STR(X'),&LINE)
SET TMSTMP = &SUBSTR(&POS+2:&POS+14,&LINE)
IF &TMSTMP = &STR(0000000000000) +
  THEN SET BUPD = UNUSED
  ELSE +
    DO
      SET BUPD = &STR( )
      SYSCALL CONVTST &TMSTMP BUPD
    ENDO
     /*            */
SET SEARCH = VOLSER
SET LABEL = RBVD
GOTO RETRV
RBVD: +
SET BVD = &RESULT
     /*            */
IF &BT = KSDS +
  THEN +
    DO
      SET POS = 0
      DO WHILE &POS = 0
        SET L = &L + 1
        SET LINE = &STR(&&SYSOUTLINE&L)
        SET POS = &SYSINDEX(INDEX,&LINE)
      ENDO
      SET POS = 0
      DO WHILE &POS = 0
        SET L = &L + 1
        SET LINE = &STR(&&SYSOUTLINE&L)
        SET POS = &SYSINDEX(IMBED,&STR(&LINE))
      ENDO
      SET BIMB = &SUBSTR(&POS-2:&POS+4,&LINE)
      SET POS = &SYSINDEX(REPLICAT,&STR(&LINE))
      SET BREPL = &SUBSTR(&POS-2:&POS+7,&LINE)
     /*            */
      SET SEARCH = LEVELS
      SET LABEL = RBIL
      GOTO RETRV
      RBIL: +
      SET BIL = &RESULT
     /*            */
      SET SEARCH = VOLSER
      SET LABEL = RBVI
      GOTO RETRV
      RBVI: +
      SET BVI = &RESULT
    ENDO
  ELSE +
    DO
      SET BIMB = &STR( )
      SET BREPL = &STR( )
      SET BIL = &STR( )
      SET BVI = &STR( )
    ENDO
     /*                                                  */
     /* search additional info on base cluster  -  end   */
     /*                                                  */
IF &A > 0 +
  THEN SET N = 1
  ELSE SET N = 0
     /*                                               */
     /* display info on base cluster & associated AIX */
     /*                                               */
DISPASS: +
ISPEXEC DISPLAY PANEL(VSINASS)
IF &N = 0 THEN GOTO LNAME
     /*            */
IF &N > &A +
  THEN +
    DO
      CONTROL ASIS
      SET &ZEDSMSG = &STR(Invalid AIX number)
      SET &ZEDLMSG = &STR(There are only &A AIX associated to this VSAM)
      ISPEXEC SETMSG MSG(ISRZ001)
      CONTROL CAPS
      GOTO DISPASS
    ENDO
     /*                                                */
     /* search & display info on specified AIX - start */
     /*                                                */
SET AC = &STR(&&AIX&N)
SET AC = &AC
SET DATASET = &AC
SET LABEL = RAC
GOTO TRAPLCT
RAC: SET NOP = NOP
SET LINE = &STR(&&SYSOUTLINE4)
SET POS = &SYSINDEX(.,&LINE)
SET ACRDJ = &SUBSTR(&POS-2:&POS+3,&STR(&LINE))
SET ACRD = &STR( )
SYSCALL CONVJD &ACRDJ ACRD
SET LINE = &STR(&&SYSOUTLINE9)
SET POS = &SYSINDEX(DATA,&LINE) + 9
SET AD = &SUBSTR(&POS:&LENGTH(&STR(&LINE)),&STR(&LINE))
SET LINE = &STR(&&SYSOUTLINE10)
SET AI = &SUBSTR(&POS:&LENGTH(&STR(&LINE)),&STR(&LINE))
SET LINE = &STR(&&SYSOUTLINE12)
IF &SYSINDEX(PATH,&LINE) ¬= 0 +
  THEN SET APT = &SUBSTR(&POS:&LENGTH(&STR(&LINE)),&STR(&LINE))
  ELSE SET APT = &STR( )
     /*            */
SET L = 12
SET POS = 0
DO WHILE &POS = 0
  SET L = &L + 1
  SET LINE = &STR(&&SYSOUTLINE&L)
  SET POS = &SYSINDEX(UPGRADE,&STR(&LINE))
ENDO
SET AUPG = &SUBSTR(&POS-2:&POS+6,&LINE)
     /*            */
SET L = 20
SET SEARCH = KEYLEN
SET LABEL = RAK
GOTO RETRV
RAK: +
SET AK = &RESULT
     /*            */
SET SEARCH = AVGLRECL
SET LABEL = RARA
GOTO RETRV
RARA: +
SET ARA = &RESULT
     /*            */
SET SEARCH = CISIZE
SET LABEL = RACI
GOTO RETRV
RACI: +
SET ACI = &RESULT
     /*            */
SET L = &L + 1
SET SEARCH = MAXLRECL
SET LABEL = RARM
GOTO RETRV
RARM: +
SET ARM = &RESULT
     /*            */
SET SEARCH = AXRKP
SET LABEL = RAP
GOTO RETRV
RAP: +
SET AP = &RESULT
     /*            */
SET POS = 0
DO WHILE &POS = 0
  SET L = &L + 1
  SET LINE = &STR(&&SYSOUTLINE&L)
  SET POS = &SYSINDEX(SHROPT,&STR(&LINE))
ENDO
SET ASHROPT = &SUBSTR(&POS:&POS+12,&LINE)
SET L = &L + 1
SET LINE = &STR(&&SYSOUTLINE&L)
SET POS = &SYSINDEX(REUSE,&LINE)
SET AREUS = &SUBSTR(&POS-2:&POS+4,&LINE)
IF &SYSINDEX(NONUNIQ,&LINE) ¬= 0 +
  THEN SET AT = NONUNIQ
  ELSE SET AT = UNIQUE
     /*            */
SET SEARCH = &STR(REC-TOTAL)
SET LABEL = RARN
GOTO RETRV
RARN: +
SET ARN = &RESULT
     /*            */
SET SEARCH = &STR(SPLITS-CI)
SET LABEL = RASI
GOTO RETRV
RASI: +
SET ASI = &RESULT
     /*            */
SET L = &L + 1
SET SEARCH = &STR(SPLITS-CA)
SET LABEL = RASA
GOTO RETRV
RASA: +
SET ASA = &RESULT
     /*            */
SET SEARCH = EXTENTS
SET LABEL = RARE
GOTO RETRV
RARE: +
SET ARE = &RESULT
     /*            */
SET L = &L + 2
SET LINE = &STR(&&SYSOUTLINE&L)
SET POS = &SYSINDEX(&STR(X'),&LINE)
SET TMSTMP = &SUBSTR(&POS+2:&POS+14,&LINE)
IF &TMSTMP = &STR(0000000000000) +
  THEN SET AUPD = UNUSED
  ELSE +
    DO
      SET AUPD = &STR( )
      SYSCALL CONVTST &TMSTMP AUPD
    ENDO
     /*            */
SET SEARCH = VOLSER
SET LABEL = RAVD
GOTO RETRV
RAVD: +
SET AVD = &RESULT
     /*            */
SET POS = 0
DO WHILE &POS = 0
  SET L = &L + 1
  SET LINE = &STR(&&SYSOUTLINE&L)
  SET POS = &SYSINDEX(INDEX,&LINE)
ENDO
     /*            */
SET POS = 0
DO WHILE &POS = 0
  SET L = &L + 1
  SET LINE = &STR(&&SYSOUTLINE&L)
  SET POS = &SYSINDEX(IMBED,&STR(&LINE))
ENDO
SET AIMB = &SUBSTR(&POS-2:&POS+4,&LINE)
SET POS = &SYSINDEX(REPLICAT,&STR(&LINE))
SET AREPL = &SUBSTR(&POS-2:&POS+7,&LINE)
     /*            */
SET SEARCH = LEVELS
SET LABEL = RAIL
GOTO RETRV
RAIL: +
SET AIL = &RESULT
     /*            */
SET SEARCH = VOLSER
SET LABEL = RAVI
GOTO RETRV
RAVI: +
SET AVI = &RESULT
     /*            */
IF &APT = &STR( ) +
  THEN +
    DO
      SET PCRD = &STR( )
      SET PUPD = &STR( )
    ENDO
  ELSE +
    DO
      SET POS = 0
      DO WHILE &POS = 0
        SET L = &L + 1
        SET LINE = &STR(&&SYSOUTLINE&L)
        SET POS = &SYSINDEX(PATH,&LINE)
      ENDO
      SET SEARCH = CREATION
      SET LABEL = RDPT
      GOTO RETRV
      RDPT: +
      SET PCRDJ = &SUBSTR(3:8,&STR(&RESULT))
      SET PCRD = &STR( )
      SYSCALL CONVJD &PCRDJ PCRD
     /*            */
      SET POS = 0
      DO WHILE &POS = 0
        SET L = &L + 1
        SET LINE = &STR(&&SYSOUTLINE&L)
        SET POS = &SYSINDEX(UPDATE,&LINE)
      ENDO
      SET PUPD = &SUBSTR(&POS-2:&POS+5,&LINE)
    ENDO
     /*            */
ISPEXEC DISPLAY PANEL(VSINAIX)
     /*                                                 */
     /* search & display info on specified AIX - end    */
     /*                                                 */
     /* return to info on base cluster & associated AIX */
     /*                                                 */
IF &N = &A +
  THEN SET N = 1
  ELSE SET N = &N + 1
GOTO DISPASS
     /*            */
     /*******************************************************/
     /* procedure RETRV : retrieve value of keyword - start */
     /*******************************************************/
RETRV:+
SET LINE = &STR(&&SYSOUTLINE&L)
SET POS = &SYSINDEX(&STR(&SEARCH),&STR(&LINE))
DO WHILE &POS = 0
  SET L = &L + 1
  SET LINE = &STR(&&SYSOUTLINE&L)
  SET POS = &SYSINDEX(&STR(&SEARCH),&STR(&LINE))
ENDO
SET POS = &POS + 23
SET POSE = &POS
SET CHAR = &STR( )
DO WHILE &STR(&CHAR) ¬= &STR(-)
  SET POS = &POS - 1
  SET CHAR = &SUBSTR(&POS:&POS,&LINE)
ENDO
SET RESULT = &SUBSTR(&POS+1:&POSE,&LINE)
GOTO &LABEL
     /*******************************************************/
     /* procedure RETRV : retrieve value of keyword - end   */
     /*******************************************************/
     /*            */
     /********************************************/
     /* procedure TRAPLCT : trap listcat - start */
     /********************************************/
TRAPLCT: +
IF &DEBUG = DEBUG +
  THEN +
    DO
      CONTROL NOLIST NOSYMLIST NOCONLIST
      WRITE *** SYSOUTTRAP OF LISTCAT OF &DATASET *****
    ENDO
SET SYSOUTTRAP = 150
LISTCAT ENT('&DATASET') ALL
SET SYSOUTTRAP = 0
IF &DEBUG = DEBUG THEN CONTROL LIST SYMLIST CONLIST
GOTO &LABEL
     /********************************************/
     /* procedure TRAPLCT : trap listcat - end   */
     /********************************************/
     /*            */
     /*****************************************************/
     /* subprocedure CONVJD : convert julian date - start */
     /*****************************************************/
CONVJD: +
  PROC 2 PJD PND
     /*                                           */
SYSREF &PND
SET ID = FALSE   /* INVALID DATE */
SET SJ = FALSE   /* LEAP-YEAR    */
IF &LENGTH(&STR(&PJD)) ¬= 6 +
  THEN SET ID = TRUE
  ELSE IF &SUBSTR(3:3,&STR(&PJD)) ¬= . THEN SET ID = TRUE
IF &ID = TRUE THEN GOTO ERR
SET JJ = &SUBSTR(1:2,&STR(&PJD))
IF &DATATYPE(&JJ) ¬= NUM +
  THEN SET ID = TRUE
  ELSE IF &JJ//4 = 0 THEN SET SJ = TRUE
SET DDD = &SUBSTR(4:6,&STR(&PJD))
IF &DATATYPE(&DDD) ¬= NUM      THEN SET ID = TRUE
IF &DDD > 366                  THEN SET ID = TRUE
IF &DDD > 365 AND &SJ = FALSE  THEN SET ID = TRUE
ERR: +
IF &ID = TRUE +
  THEN +
    DO
      WRITE *** INVALID JULIAN DATE : &PJD ***
      RETURN CODE(12)
    ENDO
IF &SJ = FALSE +
  THEN SET MD = &STR(312831303130313130313031)
  ELSE SET MD = &STR(312931303130313130313031)
SET CUMUL = 0
SET TEL = 0
DO WHILE &CUMUL < &DDD
  SET TEL = &TEL + 1
  SET MDV = &EVAL(&SUBSTR((&TEL-1)*2+1:&TEL*2,&MD))
  SET CUMUL = &CUMUL + &MDV
ENDO
SET MM = &TEL
IF &LENGTH(&MM) = 1 THEN SET MM = &STR(0&MM)
SET DD = &DDD - (&CUMUL - &MDV)
IF &LENGTH(&DD) = 1 THEN SET DD = &STR(0&DD)
     /*               */
     /* BEGIAN FORMAT */
     /*               */
SET PND = &STR(&DD./&MM./&JJ)
     /*               */
ENDO
     /*****************************************************/
     /* subprocedure CONVJD : convert julian date - end   */
     /*****************************************************/
     /*               */
     /********************************************************/
     /* subprocedure CONVTST : convert hex timestamp - start */
     /********************************************************/
CONVTST: +
  PROC 2 TMSTMP PTIM
     /*                                           */
SYSREF &PTIM
/* no validity check of timestamp is done */
/* for performance reasons                */
SET HEX = &STR(0123456789ABCDEF)
DO WHILE &LENGTH(&TMSTMP) < 13
  SET TMSTMP = &STR(&TMSTMP.0)
ENDO
SET VT9 = 0
SET VT5 = 0
SET VT0 = 0
/*          */
DO &I = 1 TO 13
  SET HB = &SUBSTR(&I:&I,&TMSTMP)
  SET HBV = &SYSINDEX(&HB,&HEX) - 1
  SET VT9 = &VT9 * 16
  SET VT5 = &VT5 * 16
  SET VT0 = &VT0 * 16 + &HBV
  SET VT5 = &VT5 + &VT0 / 100000
  SET VT0 = &VT0 // 100000
  SET VT9 = &VT9 + &VT5 / 10000
  SET VT5 = &VT5 // 10000
ENDO
/*          */
SET Y = &VT9 / 31536
SET LPY = (&Y - 1) / 4
SET VT9 = &VT9 // 31536
SET VT8 = &VT9 * 10 + &VT5 / 1000
SET VT5 = &VT5 // 1000
SET D = &VT8 / 864
SET VT8 = &VT8 // 864
SET D = &D - &LPY + 1
IF &D <= 0 AND &Y > 0 +
  THEN +
    DO
      SET Y = &Y - 1
      SET D = &D + 365
    ENDO
SET U = &VT8 / 36
SET VT8 = &VT8 // 36
SET VT5 = &VT8 * 1000 + &VT5
SET M = &VT5 / 600
SET VT5 = &VT5 // 600
SET S = &VT5 / 10
/*          */
IF &LENGTH(&D) = 1 THEN SET D = &STR(00&D)
IF &LENGTH(&D) = 2 THEN SET D = &STR(0&D)
IF &Y > 99 THEN SET Y = &Y - 100
SET JD = &STR(&Y..&D)
IF &LENGTH(&U) = 1 THEN SET U = &STR(0&U)
IF &LENGTH(&M) = 1 THEN SET M = &STR(0&M)
IF &LENGTH(&S) = 1 THEN SET S = &STR(0&S)
SET DAT = &STR( )
SYSCALL CONVJD &JD DAT
SET PTIM = &STR(&DAT &U.:&M.:&S)
ENDO
     /********************************************************/
     /* subprocedure CONVTST : convert hex timestamp - end   */
     /********************************************************/


PANELS

)ATTR
/**********************************************/
/* panel VSINNAM by Etienne used in VSAMINFO  */
/**********************************************/
% TYPE(TEXT) INTENS(HIGH)
+ TYPE(TEXT) INTENS(LOW)
_ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(NULLS)
/*  */
)BODY EXPAND(//)
+-/-/-% VSAM INFORMATION+-/-/-
%COMMAND ===>_ZCMD    / /
+
+
+
+
+ Enter the name of the VSAM component :
+
    %===>_VSN      / /
+
+
+
+
+
+Press%ENTER+to continue
+
+Press%END+to terminate
+
)INIT
.CURSOR=VSN
)REINIT
.CURSOR=VSN
)PROC
IF (.RESP=ENTER)
  VER(&VSN,DSNAME)
  VER(&VSN,NONBLANK)
IF (.RESP=END) &VSN=EEEEEEEEE
)END

)ATTR
/**********************************************/
/* panel VSINCMP by Etienne used in VSAMINFO  */
/**********************************************/
% TYPE(TEXT) INTENS(HIGH)
+ TYPE(TEXT) INTENS(LOW)
Ý TYPE(OUTPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(NULLS)
@ TYPE(OUTPUT) INTENS(LOW) CAPS(ON) JUST(LEFT) PAD(NULLS)
/*  */
)BODY EXPAND(//)
+-/-/-% VSAM INFORMATION+-/-/-
%COMMAND ===>_ZCMD    / /
+
+ TheÝTYP         +VSAM datasetÝVSN                                           +
+ was created onÝCREDAT+(ÝND      +) in catalogÝCAT                           +
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
%Searching further information.+
)END

)ATTR
/**********************************************/
/* panel VSINASS by Etienne used in VSAMINFO  */
/**********************************************/
% TYPE(TEXT) INTENS(HIGH)
+ TYPE(TEXT) INTENS(LOW)
_ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(NULLS)
Ý TYPE(OUTPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(NULLS)
@ TYPE(OUTPUT) INTENS(LOW) CAPS(ON) JUST(LEFT) PAD(NULLS)
/*  */
)BODY EXPAND(//)
+-/-/-% VSAM INFORMATION+-/-/-
%COMMAND ===>_ZCMD    / /
+
+ TheÝTYP         +VSAM datasetÝVSN                                           +
+ was created onÝCREDAT+(ÝND      +) in catalogÝCAT                           +
+
+ Information on theÝBT  +base cluster ( last update onÝBUPD             +)
+
    + Cluster :ÝBC                                         +createdÝBCRD    +
    + Data    :ÝBD                                         +on vol.ÝBVD     +
    + Index   :ÝBI                                         +on vol.ÝBVI     +
+
+ Key: length   :ÝBK   +     +Lrecl: avg :ÝBRA  +     +# records   :ÝBRN   +
+      position :ÝBP   +             max :ÝBRM  +     +# extents   :ÝBRE+
+ Index levels  :ÝBIL  +     +CIsize     :ÝBCI  +     +Splits CI¨CA:ÝBSI+¨ÝBSA+
+ÝBSHROPT      +          ÝBREUS  +          ÝBIMB   +          ÝBREPL     +
+
+ Associated AIX :ÝA+
+1.ÝAIX1                              + +3.ÝAIX3                              +
+2.ÝAIX2                              + +4.ÝAIX4                              +
                                        +ÝMORE
+Enter number of AIX for more information about it :_N+
+Press%END+to terminate
)INIT
.CURSOR=N
)REINIT
.CURSOR=N
)PROC
IF (.RESP=END) &N=0
)END

)ATTR
/**********************************************/
/* panel VSINAIX by Etienne used in VSAMINFO  */
/**********************************************/
% TYPE(TEXT) INTENS(HIGH)
+ TYPE(TEXT) INTENS(LOW)
_ TYPE(INPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(NULLS)
Ý TYPE(OUTPUT) INTENS(HIGH) CAPS(ON) JUST(LEFT) PAD(NULLS)
@ TYPE(OUTPUT) INTENS(LOW) CAPS(ON) JUST(LEFT) PAD(NULLS)
/*  */
)BODY EXPAND(//)
+-/-/-% VSAM INFORMATION+-/-/-
%COMMAND ===>_ZCMD    / /
+
+ TheÝTYP         +VSAM datasetÝVSN                                           +
+ was created onÝCREDAT+(ÝND      +) in catalogÝCAT                           +
+
+ Information on associated AIX : ( last update onÝAUPD             +)
+
    + Cluster :ÝAC                                         +createdÝACRD    +
    + Data    :ÝAD                                         +on vol.ÝAVD     +
    + Index   :ÝAI                                         +on vol.ÝAVI     +
    + Path    :ÝAPT                                        +createdÝPCRD    +
+
+ Key: length   :ÝAK+        +Lrecl: avg :ÝARA  +     +# records   :ÝARN   +
+      position :ÝAP   +             max :ÝARM  +     +# extents   :ÝARE+
+      type     :ÝAT     +   +CIsize     :ÝACI  +     +Splits CI¨CA:ÝASI+¨ÝASA+
+ Index levels  :ÝAIL  +
+
+ Aix :ÝAUPG     +           +Path :ÝPUPD    +                                +
+ÝASHROPT      +          ÝAREUS  +          ÝAIMB   +          ÝAREPL     +
+
+Press%END+or%ENTER+to continue.
)END


Etienne de Samblanckx
System Engineer
Kamer Volksvertegen Woordigers (Belgium)      c Etienne de Samblanckx 1992

