Printing Control Intervals

This Assembler program will print all, or a range, of physically
adjacent Control Intervals, including the CIDF and any RDFs
that are present.  All CIs containing data will be printed in the
actual physical sequence.  The CI containing the VSAM SEOF
is not printed.  The program uses Control Interval access to
perform the reading of the input VSAM object.  As a result,
this program may be used to print the CIs from any form of
VSAM object: eg ESDS, KSDS, LDS, RRDS, VVDS, PATH,
or AIX.

VSAMCIP  TITLE 'PROGRAM FOR PRINTING VSAM CONTROL INTERVALS'
         PRINT NOGEN
         SPACE 1
*        SUGGESTED JCL - TO PRINT DATA COMPONENT CIS (BY DEFAULT)
         SPACE 1
*        //       EXEC PGM=VSAMCIP
*        //SYSUDUMP DD SYSOUT=*
*        //SYSPRINT DD SYSOUT=*
*        //VSAM     DD DSN=CLUSTER.NAME,DISP=SHR
         SPACE 1
*        OR - TO PRINT A SPECIFIC COMPONENT'S CIS
         SPACE 1
*        //VSAM     DD DSN=CLUSTER.NAME.INDEX,DISP=SHR
*        OR
*        //VSAM     DD DSN=CLUSTER.NAME.DATA,DISP=SHR
         TITLE 'MACROS, DSECTS AND CONTROL BLOCKS USED'
*        ABEND                          ABEND THE PROGRAM
*        ACB                            ACCESS METHOD CONTROL BLOCK
*        CLOSE                          CLOSE FILE(S)
*        DCB                            DATA CONTROL BLOCK
*        DCBD (IHADCB)                  DCB DSECT FOR MAPPING DCB
*        EXLST                          VSAM EXIT LIST
*        FREEMAIN                       RELEASE STORAGE
*        FREEPOOL                       RELEASE BUFFER POOL
*        GET - VSAM                     ACCESS A RECORD
*        GETMAIN                        ACQUIRE STORAGE
*        IEFJFCBN                       JFCB MAPPING
*        IFGACB                         ACB DSECT MAPPING
*        OPEN                           PREPARE FILE(S) FOR PROCESSING
*        PUT - QSAM                     WRITE A RECORD
*        RDJFCB                         READ SPECIFIC JFCB
*        RPL                            VSAM REQUEST PARAMETER LIST
*        SHOWCB                         OBTAIN DATA FOR VSAM OBJECT
*        WTO                            WRITE TO OPERATOR
         SPACE 2
*        REGISTER EQUATES
         SPACE 1
         TITLE 'PROGRAM CONTROL CODE'
*        1.    PROGRAM PROLOG
*        2.    PROCESS OPTIONAL JOB STEP PARAMETER
*        3.    PERFORM PROGRAM INITIALIZATION PROCESSING
*        4.    PERFORM PROGRAM MAIN PROCESSING
*        5.    PERFORM PROGRAM TERMINATION PROCESSING
*        6.    PROGRAM EPILOG
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        10                             . BRANCH AND SAVE
*        12                             . CSECT BASE REGISTER
*        13                             . -> SAVE AREA
*        14                             . -> RETURN
*        15                             . -> ENTRY POINT
         SPACE 2
VSAMCIP  CSECT
         STM   R14,R12,12(R13)          . SAVE CALLER'S REGISTERS
         LR    R12,R15                  . LOAD 12 AS PROGRAM BASE
         USING VSAMCIP,R12              . ESTABLISH ADDRESSABILITY
         GETMAIN R,                     . GETMAIN FOR SAVE AREA        C
               LV=72
         ST    R13,4(,R1)               . BACKWARD SAVE AREA ->
         ST    R1,8(,R13)               . FORWARD SAVE AREA ->
         LR    R13,R1                   . 13 -> PROGRAM'S SAVE AREA
         BAS   R10,JOBPARM              . PROCESS JOB STEP PARAMETER
         BAS   R10,INITIAL              . PROGRAM INITIALIZATION
         BAS   R10,PROCESS              . MAIN PROCESSING
         BAS   R10,TERMIN               . TERMINATION PROCESSING
         LR    R2,R13                   . 2 -> SAVE AREA
         L     R13,4(,R13)              . 13 -> CALLER'S SAVE AREA
         FREEMAIN R,                    . FREEMAIN SAVE AREA           C
               LV=72,                                                  C
               A=(R2)
         L     R14,12(,R13)             . 14 -> RETURN
         SLR   R15,R15                  . 15 - ZERO
         LM    R0,R12,20(R13)           . RESTORE 0 - 12
         BR    R14                      . RETURN
         TITLE 'CODE PROCESSING THE OPTIONAL JOB STEP PARAMETER'
*        1.    ACCESS CALLER'S SAVE AREA
*        2.    CHECK LENGTH OF PARAMETER
*        3.    IF NOT PRESENT, DEFAULT TO ALL FILE
*        4.    IF PRESENT, EDIT FOR NUMERIC
*        5.    IF NOT NUMERIC, DEFAULT TO ALL FILE
*        6.    SAVE RANGE OF CIS TO BE PROCESSED
*        REGISTER USAGE
*        1                              . WORK
*        10                             . BRANCH AND SAVE
         SPACE 2
JOBPARM  EQU   *
         MVI   PARM,OFF                 . SWITCH OFF PARAMETER SWITCH
         L     R1,4(,R13)               . 1 -> CALLER'S SAVE AREA
         L     R1,24(,R1)               . 1 -> ADDRESS OF PARAMETER
         L     R1,0(,R1)                . 1 -> PARAMETER
         OC    0(2,R1),0(R1)            . Q. PARAMETER PRESENT?
         BZR   R10                      . A. NO - EXIT
         MVC   TEST(18),ZEROS           . CHECK FOR NUMERIC DATA
         MVZ   TEST(18),2(R1)
         CLC   TEST(18),ZEROS           . Q. NUMERIC DATA ENTERED?
         BNE   B0001                    . A. NO - ABEND
         MVI   PARM,ON                  . INDICATE PARAMETER VALID
         PACK  FROM#(5),2(9,R1)         . SAVE START OF RANGE
         PACK  TO#(5),11(9,R1)          . SAVE END OF RANGE
         BR    R10                      . EXIT
B0001    EQU   *
*                                       . PARAMETER NOT NUMERIC
         WTO   'JOB STEP PARAMETER SPECIFIED NOT NUMERIC',             C
               ROUTCDE=11
         ABEND 101,                                                    C
               DUMP
         TITLE 'PROGRAM INITIALIZATION PROCESSING'
*        1.    ISSUE READ JFCB
*        2.    INITIALIZE DATA AREAS
*        3.    OPEN FILES AND CHECK OPENS
*        4.    DETERMINE CI SIZE
*        5.    COMPUTE NUMBER OF 'PASSES' REQUIRED TO PRINT CI
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        2                              . -> DCB
*                                       . -> ACB
*                                       . WORK
*        3                              . COMPUTATION
*        4                              . COMPUTATION
*        10                             . BRANCH AND SAVE
         SPACE 2
INITIAL  EQU   *
         RDJFCB DUMMY                   . GO GET JFCB
         LTR   R15,R15                  . Q. RDJFCB WORK?
         BNZ   C0001                    . A. NO
         MVC   DSNTITLE,JFCBDSNM        . MOVE OUT DSN
C0001    EQU   *
         ZAP   #READ,=P'+0'             . INITIALIZE DATA AREAS
         ZAP   #PRINT,=P'+0'
         ZAP   #LINE,=P'+60'
         ZAP   #PAGE,=P'+1'
         OPEN  (VSAM,,SYSPRINT,OUTPUT)  . OPEN FILES
         LTR   R15,R15                  . Q. OPEN OKAY?
         BZ    C0002                    . A. YES
         LA    R2,SYSPRINT              . 2 -> SYSPRINT DCB
         USING IHADCB,R2                . USE DSECT TO MAP DCB
         TM    DCBOFLGS,DCBOFOPN        . Q. OPEN OF SYSPRINT OK?
         BO    C0003                    . A. OPEN FAILED
         DROP  R2                       . DCB DSECT NOT REQUIRED
         LA    R2,VSAM                  . 2 -> VSAM ACB
         USING IFGACB,R2                . ACB DSECT ADDRESSABILITY
         TM    ACBOFLGS,ACBOPEN         . Q. VSAM OPEN OKAY?
         BNO   C0004                    . A. OPEN FAILED
         DROP  R2                       . ACB DSECT NOT REQUIRED
C0002    EQU   *
         SHOWCB ACB=VSAM,               . DETERMINE CI SIZE            C
               AREA=CISZ,                                              C
               FIELDS=CINV,                                            C
               LENGTH=4
         L     R2,CISZ                  . 2 - CONTROL INTERVAL SIZE
         CVD   R2,WORKD                 . CONVERT CI SIZE TO DECIMAL
         MVC   CISIZE,MASK5             . PUT EDIT MASK IN THE OUTPUT
         ED    CISIZE,WORKD+5
         SH    R2,=H'+4'                . SUBTRACT FOUR FROM CI SIZE
         ST    R2,CIDFDISP              . SAVE CIDF DISPLACEMENT
*                                       . COMPUTE NUMBER OF PASSES
         L     R3,CISZ                  . 3 - CONTROL INTERVAL SIZE
         LA    R4,1                     . 4 - ONE
         C     R3,=F'+16384'            . Q. CI SIZE > 16384?
         BNH   *+8                      . A. NO
         LA    R4,2                     . 4 - TWO
         SLR   R2,R2                    . 2 - ZERO
         D     R2,=F'+129'              . DIVIDE CI SIZE BY 129
         AR    R3,R4                    . INCREMENT QUOTIENT BY
*                                       .   CONTENT OF 4
         ST    R3,#PASSES               . STORE NUMBER OF PASSES
*                                       .   PER CONTROL INTERVAL
         BR    R10                      . EXIT
         TITLE 'PROGRAM INITIALIZATION - ERRORS'
C0003    EQU   *
*                                       . OPEN FAILURE SYSPRINT
         WTO   'OPEN FAILURE FOR FILE SYSPRINT',                       C
               ROUTCDE=11
         LR    R2,R13                   . 2 -> SAVE AREA
         L     R13,4(,R13)              . 13 -> CALLER'S SAVE AREA
         FREEMAIN R,                    . FREEMAIN OF SAVE AREA        C
               A=(R2),                                                 C
               LV=72
         L     R14,12(,R13)             . 14 -> RETURN ADDRESS
         LA    R15,10                   . 15 - RETURN CODE
         LM    R0,R12,20(R13)           . RESTORE 0 - 12
         BR    R14                      . RETURN
         SPACE 2
C0004    EQU   *
*                                       . OPEN FAILURE VSAM
         ST    R15,REG15                . SAVE 15
         WTO   'OPEN FAILURE FOR FILE VSAM',                           C
               ROUTCDE=11
*                                       . GET ACB ERROR CODE
         SHOWCB ACB=VSAM,                                              C
               AREA=OPENERR,                                           C
               FIELDS=ERROR,                                           C
               LENGTH=4
         LM    R2,R3,VSAMERR            . 2 - 3 VSAM ERROR CODES
         ABEND 102,                     . ABEND TASK                   C
               DUMP
         TITLE 'PROGRAM MAIN PROCESSING'
*        1.    GET NEXT PHYSICAL CI
*        2.    DETERMINE IF WITHIN REQUESTED RANGE
*        3.    IF PRIOR TO START OF RANGE, IGNORE
*        4.    IF AFTER END OF RANGE - EXIT
*        5.    FORMAT CI HEADING
*        6.    EXAMINE CIDF FREE SPACE OFFSET
*        7.    IF CI EMPTY, PRINT EMPTY, IGNORE FROM FURTHER
*              PROCESSING
*        8.    IF NOT EMPTY, PRINT THE CONTENT, 128 BYTES PER
*              LINE
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        2                              . CIDF DISPLACEMENT
*                                       . -> CIDF
*        3                              . NUMBER OF PASSES
*        5                              . -> CI
*        10                             . BRANCH AND SAVE
         SPACE 2
PROCESS  EQU   *
         ST    R10,DSAVE                . SAVE 10
D0001    EQU   *
         GET   RPL=GETRPL               . GET THE NEXT CI
         LTR   R15,R15                  . Q. GET ON VSAM OK?
         BNZ   D0009                    . A. NO - GET FAILED
         AP    #READ,=P'+1'             . NUMBER OF CIS PROCESSED
         CLI   PARM,ON                  . Q. RANGE PARAMETER SPECIFIED?
         BNE   D0002                    . A. NO
         CP    #READ,FROM#              . Q. BEFORE START POINT?
         BL    D0001                    . A. YES - READ NEXT CI
         CP    #READ,TO#                . Q. AFTER END POINT?
         BH    D0008                    . A. YES - END OF TASK
D0002    EQU   *
         MVC   CINUM,MASK9              . OUTPUT EDIT MASK
         ED    CINUM,#READ
         L     R5,@CI                   . 5 -> CI
         L     R2,CIDFDISP              . 2 - CIDF DISPLACEMENT
         LA    R2,0(R2,R5)              . 2 -> CIDF
         OC    0(2,R2),0(R2)            . Q. ANY DATA IN CI?
         BNZ   D0004                    . A. YES
         MVC   CONTIN,=C'EMPTY    '     . EMPTY CI
         CP    #LINE,=P'+57'            . Q. PAGE HEADINGS REQUIRED?
         BL    D0003                    . A. NO
         BAS   R10,HEADING              . OUTPUT REPORT HEADINGS
D0003    EQU   *
         PUT   SYSPRINT,                . OUTPUT CI NUMBER ...         C
               STITLE3
         MVC   CONTIN,=9C' '
         AP    #LINE,=P'+2'             . INCREMENT LINE NUMBER
         AP    #PRINT,=P'+1'            . INCREMENT PRINT COUNT
         B     D0001                    . GO GET NEXT PHYSICAL CI
D0004    EQU   *                        . GET SET TO PRINT CI
         MVC   CONTIN,=9C' '
         L     R3,#PASSES               . 3 - NUMBER OF PASSES
D0005    EQU   *
         CP    #LINE,=P'+57'            . Q. PAGE HEADINGS REQUIRED?
         BL    D0006                    . A. NO
         BAS   R10,HEADING              . OUTPUT HEADINGS
         PUT   SYSPRINT,                . OUTPUT CI NUMBER             C
               STITLE3
         MVC   CONTIN,=C'CONTINUED'     . INDICATE CONTINUATION
*                                       .   FOR NEXT TIME POSSIBLY
         AP    #LINE,=P'+2'             . INCREMENT LINES OUTPUT
D0006    EQU   *
         CLI   CONTIN,C'C'              . Q. CI NUMBER TO BE OUTPUT?
         BE    D0007                    . A. NO
         PUT   SYSPRINT,                . OUTPUT CI NUMBER             C
               STITLE3
         MVC   CONTIN,=C'CONTINUED'
         AP    #LINE,=P'+2'             . INCREMENT LINES OUTPUT
D0007    EQU   *
         MVI   OUTLINE,C'0'             . SET ASA CONTROL CHARACTER
         MVC   OUTLINED,0(R5)           . OUTPUT EBCDIC DATA
         TR    OUTLINED,PRTBL           . MAKE PRINTABLE
         PUT   SYSPRINT,                . OUTPUT CHARACTER DATA        C
               OUTLINE
         MVI   OUTLINE,C' '             . RESET ASA CONTROL CHARACTER
         MVC   OUTLINED,0(R5)           . PROCESS ZONE NIBBLES
         NC    OUTLINED,=128X'F0'
         TR    OUTLINED,ZONETBL
         PUT   SYSPRINT,                . OUTPUT ZONE NIBBLES          C
               OUTLINE
         MVC   OUTLINED,0(R5)           . PROCESS NUMERIC NIBBLES
         NC    OUTLINED,=128X'0F'
         TR    OUTLINED,NUMTBL
         PUT   SYSPRINT,                . OUTPUT NUMERIC NIBBLES       C
               OUTLINE
         AP    #LINE,=P'+4'             . INCREMENT LINES PRINTED
         LA    R5,128(,R5)              . INDEX ALONG INPUT CI
         BCT   R3,D0005                 . OUTPUT REST OF CI
         AP    #PRINT,=P'+1'            . INCREMENT CIS PRINTED
         B     D0001                    . GO GET NEXT CI
D0008    EQU   *
         L     R10,DSAVE                . RESTORE 10
         BR    R10                      . EXIT
         TITLE 'MAIN PROCESSING LOGIC - GET ERROR'
D0009    EQU   *
*                                       . GET FAILURE VSAM
         ST    R15,REG15                . SAVE 15
         WTO   'GET FAILURE FOR FILE VSAM',                            C
               ROUTCDE=11
*                                       . GET RPL FEED BACK CODE
         SHOWCB RPL=GETRPL,                                            C
               AREA=RPLFDBK,                                           C
               FIELDS=FDBK,                                            C
               LENGTH=4
         LM    R2,R4,VSAMERR            . 2 - 4 VSAM ERROR CODES
         LA    R3,VSAM                  . 3 -> ACB
         ABEND 103,                     . ABEND TASK                   C
               DUMP
         TITLE 'END OF PROCESSING ROUTINE'
*        1.    OUTPUT TOTALS
*        2.    CLOSE FILES
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        10                             . BRANCH AND SAVE
         SPACE 2
TERMIN   EQU   *
         ST    R10,ESAVE                . SAVE 10
         BAS   R10,HEADING              . FORCE PAGE CHANGE
         MVC   RECOUT,MASK9             . OUTPUT CIS PRINTED
         ED    RECOUT,#PRINT
         PUT   SYSPRINT,                                               C
               STITLE4
         CLOSE (VSAM,,SYSPRINT)         . CLOSE FILES
         FREEPOOL SYSPRINT              . RELEASE BUFFER POOL
         L     R10,ESAVE                . RESTORE 10
         BR    R10                      . EXIT
         TITLE 'REPORT PAGE HEADING ROUTINE'
*        1.    OUTPUT PAGE NUMBER
*        2.    OUTPUT HEADING LINES
*        3.    RESET ACCUMULATORS
*        REGISTER USAGE
*        0                              . MACROS
*        1                              . MACROS
*        10                             . BRANCH AND SAVE
         SPACE 2
HEADING  EQU   C
         MVC   PAGEOUT,MASK5            . OUTPUT PAGE NUMBER
         ED    PAGEOUT,#PAGE
         PUT   SYSPRINT,                . PRIMARY HEADING              C
               TITLE
         PUT   SYSPRINT,                . SECONDARY HEADING LINES      C
               STITLE1
         PUT   SYSPRINT,                                               C
               STITLE2
         AP    #PAGE,=P'+1'             . INCREMENT PAGE NUMBER
         ZAP   #LINE,=P'+4'             . RESET LINE NUMBER
         BR    R10                      . RETURN FROM WHENCE THOU CAME
         TITLE 'DATA AREAS'
WORKD    DS    D                        . USED IN CVD INSTRUCTIONS
@CI      DS    F                        . ADDRESS OF CI READ
#PASSES  DS    F                        . NUMBER OF PASSES TO PRINT CI
CISZ     DS    F                        . CI SIZE
CIDFDISP DS    F                        . CIDF DISPLACEMENT
DSAVE    DS    F                        . REGISTER SAVE AREA
ESAVE    DS    F                        . REGISTER SAVE AREA
VSAMERR  DS    0F                       . VSAM ERROR AREA
REG15    DS    F                        . CONTENT OF REGISTER 15
OPENERR  DS    F                        . ACB ERROR CODE
RPLFDBK  DS    F                        . RPL FEED BACK CODE
#READ    DS    PL5                      . NUMBER OF CIS READ
#PRINT   DS    PL5                      . NUMBER OF CIS PRINTED
FROM#    DS    PL5                      . RANGE START
TO#      DS    PL5                      . RANGE END
#LINE    DS    PL2                      . LINES ON PAGE
#PAGE    DS    PL3                      . PAGE NUMBER
PARM     DS    CL1                      . JOB STEP PARAMETER SWITCH
ON       EQU   X'01'                    . LOGICAL - ON
OFF      EQU   X'00'                    . LOGICAL - OFF
TEST     DS    CL18                     . NUMERIC TEST WORK AREA
ZEROS    DC    18C'0'                   . NUMERIC TEST DATA
MASK5    DC    X'402020202120'          . EDIT MASK
MASK9    DC    X'40202020202020202120'  . EDIT MASK
*                                       . PRINT LINES
TITLE    DC    CL21'1'
         DC    CL34'CONTROL INTERVAL PRINT OF OBJECT: '
DSNTITLE DC    CL44' '
         DC    CL19' '
         DC    CL4'PAGE'
PAGEOUT  DS    CL6
         DC    CL5' '
STITLE1  DC    CL5' '
         DC    CL48'               1               2               3'
         DC    CL48'               4               5               6'
         DC    CL32'               7               8'
STITLE2  DC    CL5' '
         DC    CL48'123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0'
         DC    CL48'123456789ABCDEF0123456789ABCDEF0123456789ABCDEF0'
         DC    CL32'123456789ABCDEF0123456789ABCDEF0'
STITLE3  DC    CL11'0CI NUMBER '
CINUM    DS    CL10
         DC    CL26'    CONTROL INTERVAL SIZE '
CISIZE   DS    CL6
         DC    CL6' '
CONTIN   DS    CL9
         DC    CL65' '
STITLE4  DC    CL13'-CIS PRINTED '
RECOUT   DS    CL10
         DC    CL110' '
OUTLINE  DC    CL5' '
OUTLINED DC    CL128' '
         TITLE 'TRANSLATE TABLES'
NUMTBL   DC    C'0123456789ABCDEF'
ZONETBL  DC    C'0',15C'*',C'1',15C'*',C'2',15C'*',C'3',15C'*'
         DC    C'4',15C'*',C'5',15C'*',C'6',15C'*',C'7',15C'*'
         DC    C'8',15C'*',C'9',15C'*',C'A',15C'*',C'B',15C'*'
         DC    C'C',15C'*',C'D',15C'*',C'E',15C'*',C'F',15C'*'
PRTBL    DC    256C'.'
         ORG   PRTBL+X'40'
         DC    X'40'
         ORG   PRTBL+X'4A'
         DC    X'4A4B4C4D4E4F50'
         ORG   PRTBL+X'5A'
         DC    X'5A5B5C5D5E5F6061'
         ORG   PRTBL+X'6B'
         DC    X'6B6C6D6E6F'
         ORG   PRTBL+X'7A'
         DC    X'7A7B7C7D7E7F'
         ORG   PRTBL+X'81'
         DC    X'818283848586878889'
         ORG   PRTBL+X'91'
         DC    X'919293949596979899'
         ORG   PRTBL+X'A2'
         DC    X'A2A3A4A5A6A7A8A9'
         ORG   PRTBL+X'C1'
         DC    X'C1C2C3C4C5C6C7C8C9'
         ORG   PRTBL+X'D1'
         DC    X'D1D2D3D4D5D6D7D8D9'
         ORG   PRTBL+X'E2'
         DC    X'E2E3E4E5E6E7E8E9'
         ORG   PRTBL+X'F0'
         DC    X'F0F1F2F3F4F5F6F7F8F9'
         ORG
         TITLE 'CONTROL BLOCKS'
VSAM     ACB   AM=VSAM,                                                C
               DDNAME=VSAM,                                            C
               EXLST=EXITLST,                                          C
               MACRF=(CNV,SEQ,IN)
EXITLST  EXLST EODAD=D0008
GETRPL   RPL   ACB=VSAM,                                               C
               AM=VSAM,                                                C
               AREA=@CI,                                               C
               AREALEN=4,                                              C
               OPTCD=(CNV,SEQ,LOC)
SYSPRINT DCB   BLKSIZE=15428,                                          C
               DDNAME=SYSPRINT,                                        C
               DSORG=PS,                                               C
               LRECL=133,                                              C
               MACRF=PM,                                               C
               RECFM=ABFS
DUMMY    DCB   DDNAME=VSAM,                                            C
               DSORG=PS,                                               C
               EXLST=DCBEXIT,                                          C
               MACRF=GM
         DS    0F                       . FULL WORD ALIGN DCB EXIT
DCBEXIT  EQU   *                        . DCB EXIT FOR JFCB
         DC    X'87'
         DC    AL3(INFMJFCB)
         IEFJFCBN                       . MAPPING FOR JFCB
         DCBD  DEVD=DA,                 . DSECT MAPPING DCB            C
               DSORG=PS
         IFGACB                         . DSECT MAPPING ACB
         TITLE 'LITERALS AND TERMINATION'
VSAMCIP  CSECT                          . RE-ESTABLISH CSECT
         LTORG
         END


Dave Loveluck
Instructor/Consultant (USA)                        c Dave Loveluck 1992

