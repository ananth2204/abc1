Improving KSDS performance using IAM


THE PROBLEM

In 1988 our company had an influx of business which needed
to be processed through one of our computer systems.  This
increase in throughput had a dramatic effect on the
performance of these systems.  For example, some programs
which would have normally run for 10 or 15 minutes were now
running for 7 or more hours.  This had an impact on the on-line
system and the operational day had to be extended to 24 hours
to accommodate all the work.

The problem was related to the fact that there was a significant
increase in the activity against VSAM files.  We began to tune
the system by adding and reviewing VSAM tuning parameters
following a review of the definitions of these files.  This did
improve the situation to a degree; however, the effect was still
negligible in relation to the needs of the business and the
operation of the systems.


THE SOLUTION

We began to review the tuning products which existed on the
market to see what we could use to assist us with automatic
tuning of VSAM files and, more importantly, to find a product
which could dramatically change the performance of the
application against the VSAM files.

We heard about Innovation Access Method (IAM) from
Innovation Data Processing, who claimed that the product
could change the performance of VSAM files with no change
to the application code, but with either a minor change to JCL
or by changing the name of a dataset.  The claims were:

o      Ease of switching between IAM and VSAM

o      Slashing disk I/O by between 50% and 90%

o      A CPU saving of 20% to 40%

o      Disk savings of 30% to 70%, although this would have a
      negative effect on some of the savings made above.

Our initial reaction was that it could not really be true; after all
we had tried most, if not all, of the parameter changes that are
possible and the effect was not as dramatic.  Because we were
desperate to find a solution to our problem, we took delivery of
the product for a trial.


THE TRIAL

The product was easy to install.  The trial was fairly
straightforward in that we already had the testing example; all
that was needed was for us to rebuild the files under IAM and
run the tests.  As we adopted the principle of changing the JCL
and not renaming files, it was extremely simple to change the
file between VSAM and IAM.

The first test was to run a back-up job against one of the rebuilt
files, which gave a saving of 20% in elapsed time, and 58% in
EXCP.  We therefore extended our testing to a processing job
which used the same files but randomly.  The first program that
we tested gave a saving of 79% in elapsed time, down from 41
minutes to just over 8 minutes, and an EXCP saving of 79%
also, with I/Os being reduced from 251 000 to just over 50 000.

We then ran our program which had taken seven hours.  The
results were more dramatic still, with savings of 89% in
elapsed time, down from just over seven hours to just over 50
minutes, and a reduction of I/O rates from over 1 300 000
EXCPs down to 358 000.

Within IAM there are various tuning parameters which can be
used to improve performance even further.  These parameters
are now being used to ensure that we are able to get the most
from the product.  We have not concerned ourselves with disk
space reduction because our main objective is to improve the
performance of applications.  However, we did trial that
feature and noticed a reduction in performance.


CONCLUSION

The end result is that the operational day has been reduced and
the business is processed within the reduced operational day.
As with every good story there are some drawbacks, and IAM
is no exception.  This product can be used against standard
KSDS files only; it does not currently permit conversion of
ESDS, RRDS, or any KSDS file that have an alternate index defined.

Philip Matta
Application Support Superintendent
Provident Mutual Life Assurance Association (UK)

