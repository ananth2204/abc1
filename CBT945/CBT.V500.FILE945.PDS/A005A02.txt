Estimating VSAM cluster parameters

The two programs, NEKX and NEKY, can be used to
estimate, on-line, the optimum size of an index Control
Interval and to obtain information about a data Control
Interval. The programs have been tested with VSE/SP 2.1, and
VSAM Release 3. The name of the transactions NEKX and
NEKY, programs NEKVP4 and NEKVP5, and maps
NEKVM4 and NEKVM5 must be put in the CICS tables PPT
and PCT.


NEKX

The program and mapset with NEKX give an on-line estimate
of VSAM KSDS index Control Interval size. This is a simple
method of getting the index Control Interval size using the
CICS command level interpreter. You need to know only the
number of Control Intervals in the Control Area. This
information can be obtained from a LISTCAT for the cluster.
This value is entered on the screen and the program says what
is the best Control Interval size to use for the index component.

The formula used is:

      CISZ = 24 + 7 + (Number of CI per CA x 9)

Where 24 is the number of bytes in the header, 7 is CIDF and
RDF size, and 9 is used as approximately the length of one
index entry. The CI per CA value cannot be greater then 906.

Figures 1, 2, and 3 show the initial screen, an example of the
entered parameters, and an estimate of CI size, respectively.


NEKY

The program and mapset with NEKY give an on-line estimate
of VSAM data Control Interval size. This is a simple method
of getting the data Control Interval size using the CICS
command level interpreter. However, it only works for fixed
length records. You have to enter the record length, Free
Space, and mode of the cluster (sequential for greater CI sizes,
and direct or mixed for smaller CI sizes).

As a result the program tells you how many records you have
in one Control Interval, and, for a KSDS, how many reserve
records, how many bytes are lost per Control Interval, and how
many are lost per record.

Figures 4, 5, and 6 show the initial screen, an example of the
entered parameters, and an estimate of CI size, respectively.

NEKVP4

         PRINT   NOGEN,ON
* ON-LINE ASSEMBLER PROGRAM NEKVP4
         MACRO
&LABEL   NEKV1 &P1,&P2
         CLC POM3C,=C'&P1'
         BNE &LABEL
         MVC POM2,=X&P2
         B L1
&LABEL   EQU *
         MEND
         MACRO
&LABEL   NEKV2 &P1,&P2
         CLC POM3A,=X'&P1'
         BNE &LABEL
         NC  POM2A,=X&P2
         B L3
&LABEL   EQU *
         MEND
         MACRO
&LABEL   NEKV4  &P1
         CP  POM3P,=P'&P1'   MACRO |
         BH &LABEL
         MVC CSZIO,=CL10'&P1'
         B SNDMAP
&LABEL   EQU *
         MEND
DFHEISTG DSECT
         COPY  NEKVM4
         COPY  DFHBMSCA
PROGRAM  CSECT
         EXEC CICS HANDLE AID    ENTER(LENTER) PF6(KRAJ) PF18(KRAJ)    C
                                               ANYKEY(LANY) NOEDF
         EXEC CICS HANDLE CONDITION ERROR(ERRORS) NOEDF
SNDMAP   MVC NUMBERL,=X'FFFF'   CURSOR HERE
         EXEC CICS SEND MAP('NEKVM4') CURSOR ERASE NOEDF
         EXEC CICS RECEIVE MAP('NEKVM4') NOEDF
LENTER   EQU *
         MVC POM3,NUMBERI
         MVI LINE10A,DFHBMASB
         MVI CSZIA,DFHBMASB
LX00     NEKV1  0,'000C'
LX01     NEKV1  1,'001C'
LX02     NEKV1  2,'002C'
LX03     NEKV1  3,'003C'
LX04     NEKV1  4,'004C'
LX05     NEKV1  5,'005C'
LX06     NEKV1  6,'006C'
LX07     NEKV1  7,'007C'
LX08     NEKV1  8,'008C'
LX09     NEKV1  9,'009C'
         B LBAD
L1       EQU *
         CLC POM3B,=X'F0'
         BE L2
         CLC POM3B,=X'F1'
         BE L2
         CLC POM3B,=X'F2'
         BE L2
         CLC POM3B,=X'F3'
         BE L2
         CLC POM3B,=X'F4'
         BE L2
         CLC POM3B,=X'F5'
         BE L2
         CLC POM3B,=X'F6'
         BE L2
         CLC POM3B,=X'F7'
         BE L2
         CLC POM3B,=X'F8'
         BE L2
         CLC POM3B,=X'F9'
         BE L2
         B LBAD
L2       MVC POM2(1),POM3B
LB00     NEKV2 F0,'0F'
LB01     NEKV2 F1,'1F'
LB02     NEKV2 F2,'2F'
LB03     NEKV2 F3,'3F'
LB04     NEKV2 F4,'4F'
LB05     NEKV2 F5,'5F'
LB06     NEKV2 F6,'6F'
LB07     NEKV2 F7,'7F'
LB08     NEKV2 F8,'8F'
LB09     NEKV2 F9,'9F'
         B LBAD
L3       EQU *
* POM2P HAS THE NUMBER
         CP POM2P,=P'906'
         BH LBIG
         ZAP POM3P,POM2P
         MP  POM3P,P9
         AP  POM3P,P31
* NOW ESTIMATE NEAREST VSAM CISIZE 512,1024 ...
LXB00    NEKV4    512
LXB01    NEKV4    1024
LXB02    NEKV4    1536
LXB03    NEKV4    2048
LXB04    NEKV4    2560
LXB05    NEKV4    3072
LXB06    NEKV4    3584
LXB07    NEKV4    4096
LXB08    NEKV4    4608
LXB09    NEKV4    5120
LXB10    NEKV4    5632
LXB11    NEKV4    6144
LXB12    NEKV4    6656
LXB13    NEKV4    7168
LXB14    NEKV4    7680
LXB15    NEKV4    8192
         MVC CSZIO,=CL10'ERROR XXXX'
         B SNDMAP
ERRORS   MVC ERRMSGO,=CL79' ERRORS     CALL SYSTEM PROGRAMMER'
         B SNDMAP
LANY     MVC ERRMSGO,=CL79'         WRONG KEY  '
         B SNDMAP
LBAD     MVC ERRMSGO,=CL79'  ENTERED NUMBER NOT CORRECTED |'
         B SNDMAP
LBIG     MVC ERRMSGO,=CL79'  ENTERED NUMBER TOO HIGH |'
         B SNDMAP
KRAJ     MVC PORUKA,=CL19'NORMAL END OF TASK '
         EXEC CICS SEND FROM(PORUKA) ERASE NOEDF
         EXEC CICS RETURN  NOEDF
P9       DC PL1'9'
P31      DC PL2'31'
POM3P    DS PL3
POM3     DS CL3
         ORG POM3
POM3A    DS CL1
POM3B    DS CL1
POM3C    DS CL1
         ORG ,
POM2     DS CL2
         ORG POM2
POM2A    DS CL1
POM2B    DS CL1
         ORG POM2
POM2P    DS PL2
         ORG ,
PORUKA   DS CL19
         END


NEKVM4

MAPSET   DFHMSD TYPE=&SYSPARM,MODE=INOUT,CTRL=(FREEKB,FRSET),          C
               TIOAPFX=YES,STORAGE=AUTO
NEKVM4   DFHMDI SIZE=(24,80)
IME      DFHMDF POS=(1,1),LENGTH=7,INITIAL='NEKVM4',ATTRB=(ASKIP,FSET)
         DFHMDF POS=(1,12),ATTRB=(ASKIP),                              C
               LENGTH=56,                                              C
               INITIAL='                                               C
                         '
LINE3    DFHMDF POS=(3,1),                                             C
               ATTRB=(PROT,ASKIP,BRT),                                 C
               LENGTH=73,                                              C
               INITIAL='E S T I M A T E   I N D E X   C O N T R O L  I C
               N T E R V A L   S I Z E'
LINE6    DFHMDF POS=(6,1),                                             C
               ATTRB=(PROT,ASKIP),                                     C
               LENGTH=69,                                              C
               INITIAL='ENTER NUMBER OF CONTROL INTERVAL  PER CONTROL AC
               REA(DATA COMPONENT) : '
NUMBER   DFHMDF POS=(6,71),                                            C
               ATTRB=(UNPROT,BRT,NUM),                                 C
               LENGTH=3
         DFHMDF POS=(6,75),LENGTH=4
LINE10   DFHMDF POS=(10,1),                                            C
               ATTRB=(PROT,ASKIP,DRK),                                 C
               LENGTH=52,                                              C
               INITIAL='FOR YOUR CONTROL INTERVAL SIZE(INDEX COMPONENT)C
               PUT : '
CSZI     DFHMDF POS=(10,55),LENGTH=10,                                 C
               ATTRB=(FSET,PROT,DRK)
LINE23   DFHMDF POS=(23,1),                                            C
               ATTRB=(PROT,ASKIP),                                     C
               LENGTH=79,                                              C
               INITIAL='                           PF6,PF18 - CICS'
ERRMSG   DFHMDF POS=(24,1),LENGTH=79,ATTRB=(BRT,PROT)
         DFHMSD TYPE=FINAL
         END


NEKVP5

         PRINT   NOGEN,ON
* ON-LINE ASSEMBLER PROGRAM NEKVP5
         MACRO
&LABEL   NEKVX &P1,&P2,&P3,&P4,&P5,&P6
         CLC &P3,=X'&P1'
         BNE &LABEL
         &P4 &P5,=X&P2
         B &P6
&LABEL   EQU *
         MEND
         MACRO
&LABEL   NEKVCS &P1,&P2
         MVC LINE1,=CL6' &P1  '
         MVC LINE+6(74),=CL74' '
         CP P&P1,POM3P              CISIZE > RECORD LENGTH ?
         BL &LABEL                  NO, GO FURTHER
         ZAP POM6P,P&P1
         DP POM6P,POM3P
         MVC POM16,EDIT3
         ED  POM16,POM6PA
         MVC LINE3,POMB      TOTAL
         MVC POM16,EDIT3
         ED  POM16,POM6PB
         MVC LINE9,POMB      LOST BYTES
         ZAP POMTOT,POM6PA   POMTOT HAS NOW TOTAL
         ZAP POMP6,POM6PB
         DP  POMP6,POMTOT    LOST BYTES/TOTAL RECORDS
         SRP POMP6A,1,0      FOR NEXT ADDING MULTIPLY 10
         SRP POMP6B,1,0      FOR NEXT DIVIDING MULTIPLY 10
         ZAP POM6P,POMP6B
         DP  POM6P,POMTOT    1. DECIMAL PLACE
         AP  POMP6A,POM6PA   POMP6A HAS NUMBER, 10 TIMES GREATHER
         MVC POM16,EDIT3A
         ED  POM16,POMP6A
         MVC LINE11,POMB
         ZAP POM6P,POMTOT
         MP  POM6P,POM2P     TOTAL RECORDS X PERCENT
         DP  POM6P,P100       DIVIDE 100
         MVC POM16,EDIT3
         ED  POM16,POM6PA
         MVC LINE7,POMB      RESERVE RECORDS ON THE SCREEN
         SP POMTOT,POM6PA    POMTOT HAS NOW RECORDS FOR USE
         MVC POM16,EDIT3
         ED  POM16,POMTOT
         MVC LINE5,POMB      RECORDS FOR USE ON THE SCREEN
&LABEL   EQU *
         MVC &P2,LINE
         MEND
DFHEISTG DSECT
         COPY  NEKVM5
         COPY  DFHBMSCA
PROGRAM  DFHEIENT CODEREG=(2,3)
         EXEC CICS HANDLE AID    ENTER(LENTER) PF6(KRAJ) PF18(KRAJ)    C
                                               ANYKEY(LANY) NOEDF
         EXEC CICS HANDLE CONDITION ERROR(ERRORS) NOEDF
* INITIAL VALUES
         MVC XPOM5,=CL5'00100'
         MVC IND,=CL1'S'
         MVC FREES,=CL2'00'
SNDMAP   MVC LENGTHL,=X'FFFF'   CURSOR HERE
         EXEC CICS SEND MAP('NEKVM5') CURSOR ERASE NOEDF
         EXEC CICS RECEIVE MAP('NEKVM5') NOEDF
LENTER   EQU *
         MVI LINE8A,DFHBMASB
         MVI LINE7A,DFHBMASB
         CLC LENGTHI,=X'0000000000'
         BE LX1         IF NO ENTRY OLD INPUT USE
         MVC XPOM5,LENGTHI
LX1      MVC POM5,XPOM5
         MVC LENGTHO,XPOM5
LX00     NEKVX F0,'00000C',POM5E,MVC,POM3,L1
LX01     NEKVX F1,'00001C',POM5E,MVC,POM3,L1
LX02     NEKVX F2,'00002C',POM5E,MVC,POM3,L1
LX03     NEKVX F3,'00003C',POM5E,MVC,POM3,L1
LX04     NEKVX F4,'00004C',POM5E,MVC,POM3,L1
LX05     NEKVX F5,'00005C',POM5E,MVC,POM3,L1
LX06     NEKVX F6,'00006C',POM5E,MVC,POM3,L1
LX07     NEKVX F7,'00007C',POM5E,MVC,POM3,L1
LX08     NEKVX F8,'00008C',POM5E,MVC,POM3,L1
LX09     NEKVX F9,'00009C',POM5E,MVC,POM3,L1
L1       EQU *
         MVC POM3+1(1),POM5D
LB00     NEKVX F0,'0F',POM5C,NC,POM3B,L3
LB01     NEKVX F1,'1F',POM5C,NC,POM3B,L3
LB02     NEKVX F2,'2F',POM5C,NC,POM3B,L3
LB03     NEKVX F3,'3F',POM5C,NC,POM3B,L3
LB04     NEKVX F4,'4F',POM5C,NC,POM3B,L3
LB05     NEKVX F5,'5F',POM5C,NC,POM3B,L3
LB06     NEKVX F6,'6F',POM5C,NC,POM3B,L3
LB07     NEKVX F7,'7F',POM5C,NC,POM3B,L3
LB08     NEKVX F8,'8F',POM5C,NC,POM3B,L3
LB09     NEKVX F9,'9F',POM5C,NC,POM3B,L3
L3       EQU *
         MVC POM3(1),POM5B
LZ00     NEKVX F0,'0F',POM5A,NC,POM3A,L5
LZ01     NEKVX F1,'1F',POM5A,NC,POM3A,L5
LZ02     NEKVX F2,'2F',POM5A,NC,POM3A,L5
LZ03     NEKVX F3,'3F',POM5A,NC,POM3A,L5
LZ04     NEKVX F4,'4F',POM5A,NC,POM3A,L5
LZ05     NEKVX F5,'5F',POM5A,NC,POM3A,L5
LZ06     NEKVX F6,'6F',POM5A,NC,POM3A,L5
LZ07     NEKVX F7,'7F',POM5A,NC,POM3A,L5
LZ08     NEKVX F8,'8F',POM5A,NC,POM3A,L5
LZ09     NEKVX F9,'9F',POM5A,NC,POM3A,L5
L5       EQU *
* POM3P HAS THE NUMBER OF RECORD LENGTH
         CP POM3P,=P'32758'
         BH LBIG
         CLC FREESI,=X'0000'
         BE LX2         IF NO ENTRY OLD INPUT USE
         MVC FREES,FREESI
LX2      MVC POM2,FREES
         MVC FREESO,FREES
L200     NEKVX  F0,'000C',POM2B,MVC,POM2X,L11
L201     NEKVX  F1,'001C',POM2B,MVC,POM2X,L11
L202     NEKVX  F2,'002C',POM2B,MVC,POM2X,L11
L203     NEKVX  F3,'003C',POM2B,MVC,POM2X,L11
L204     NEKVX  F4,'004C',POM2B,MVC,POM2X,L11
L205     NEKVX  F5,'005C',POM2B,MVC,POM2X,L11
L206     NEKVX  F6,'006C',POM2B,MVC,POM2X,L11
L207     NEKVX  F7,'007C',POM2B,MVC,POM2X,L11
L208     NEKVX  F8,'008C',POM2B,MVC,POM2X,L11
L209     NEKVX  F9,'009C',POM2B,MVC,POM2X,L11
L11      EQU *
L300     NEKVX  F0,'00',POM2A,MVC,POM2X(1),L12
L301     NEKVX  F1,'01',POM2A,MVC,POM2X(1),L12
L302     NEKVX  F2,'02',POM2A,MVC,POM2X(1),L12
L303     NEKVX  F3,'03',POM2A,MVC,POM2X(1),L12
L304     NEKVX  F4,'04',POM2A,MVC,POM2X(1),L12
L305     NEKVX  F5,'05',POM2A,MVC,POM2X(1),L12
L306     NEKVX  F6,'06',POM2A,MVC,POM2X(1),L12
L307     NEKVX  F7,'07',POM2A,MVC,POM2X(1),L12
L308     NEKVX  F8,'08',POM2A,MVC,POM2X(1),L12
L309     NEKVX  F9,'09',POM2A,MVC,POM2X(1),L12
L12      EQU *
* POM2P HAS % FREESPACE
         CLC INDI,=X'00'
         BE LX3         IF NO ENTRY OLD INPUT USE
         MVC IND,INDI
LX3      MVC INDO,IND
         CLC IND,=C'S'
         BE LSEQ
* FOR MIXED AND DIRECT PROCESSING :
LMIXS    EQU *
LLL09    NEKVCS  512,LINE09O
LLL10    NEKVCS 1024,LINE10O
LLL11    NEKVCS 1536,LINE11O
LLL12    NEKVCS 2048,LINE12O
LLL13    NEKVCS 2560,LINE13O
LLL14    NEKVCS 3072,LINE14O
LLL15    NEKVCS 3584,LINE15O
LLL16    NEKVCS 4096,LINE16O
LLL17    NEKVCS 4608,LINE17O
LLL18    NEKVCS 5120,LINE18O
LLL19    NEKVCS 5632,LINE19O
LLL20    NEKVCS 6144,LINE20O
LLL21    NEKVCS 6656,LINE21O
         B SNDMAP
LSEQ     EQU *
LXL09    NEKVCS   7168,LINE09O
LXL10    NEKVCS   7680,LINE10O
LXL11    NEKVCS   8192,LINE11O
LXL12    NEKVCS  10240,LINE12O
LXL13    NEKVCS  12288,LINE13O
LXL14    NEKVCS  14336,LINE14O
LXL15    NEKVCS  16384,LINE15O
LXL16    NEKVCS  18432,LINE16O
LXL17    NEKVCS  20480,LINE17O
LXL18    NEKVCS  22528,LINE18O
LXL19    NEKVCS  24576,LINE19O
LXL20    NEKVCS  26624,LINE20O
LXL21    NEKVCS  28672,LINE21O
LXL22    NEKVCS  30720,LINE22O
         B SNDMAP
ERRORS   MVC ERRMSGO,=CL79' ERRORS     CALL SYSTEM PROGRAMMER'
         B SNDMAP
LANY     MVC ERRMSGO,=CL79'         WRONG KEY  '
         B SNDMAP
LBIG     MVC ERRMSGO,=CL79'  ENTERED NUMBER TOO HIGH |'
         B SNDMAP
KRAJ     MVC PORUKA,=CL19'NORMAL END OF TASK '
         EXEC CICS SEND FROM(PORUKA) ERASE NOEDF
         EXEC CICS RETURN  NOEDF
FREES    DS CL2
IND      DS CL1
POM2     DS CL2
         ORG POM2
POM2A    DS CL1
POM2B    DS CL1
         ORG ,
POM2X    DS CL2
         ORG POM2X
POM2XA   DS CL1
POM2XB   DS CL1
         ORG POM2X
POM2P    DS PL2
         ORG ,
XPOM5    DS CL5
POM5     DS CL5
         ORG POM5
POM5A    DS CL1
POM5B    DS CL1
POM5C    DS CL1
POM5D    DS CL1
POM5E    DS CL1
         ORG ,
POM3     DS CL3
         ORG POM3
POM3A    DS CL1
POM3B    DS CL1
POM3C    DS CL1
         ORG POM3
POM3P    DS PL3
         ORG ,
POMTOT   DS PL3
POM16    DS 0CL16
POMA     DS CL6
POMB     DS CL10
PORUKA   DS CL19
LINE     DS CL79
         ORG LINE
LINE1    DS CL6
LINE2    DS CL9
LINE3    DS CL10
LINE5    DS CL10
LINE7    DS CL10
LINE8    DS CL4
LINE9    DS CL10
LINE10   DS CL4
LINE11   DS CL10
LINE12   DS CL2
         ORG ,
BLENK    DC CL79' '
EDIT2    DC XL16'40404040404040404040404040202120'
EDIT3    DC XL16'40404040404040404040402020202120'
EDIT3A   DC XL16'40404040404040404040202021204B20'
POM6P    DS PL6
         ORG POM6P
POM6PA   DS PL3
POM6PB   DS PL3
         ORG ,
POMP6    DS PL6
         ORG POMP6
POMP6A   DS PL3
POMP6B   DS PL3
         ORG ,
P100     DC PL3'100'
* IMMEDIATE SUBTRACT 10 BYTES    2 X RDF + CIDF =2X3+4=10
P512     DC PL3'502'
P1024    DC PL3'1014'
P1536    DC PL3'1526'
P2048    DC PL3'2038'
P2560    DC PL3'2550'
P3072    DC PL3'3062'
P3584    DC PL3'3574'
P4096    DC PL3'4086'
P4608    DC PL3'4598'
P5120    DC PL3'5110'
P5632    DC PL3'5622'
P6144    DC PL3'6134'
P6656    DC PL3'6646'
P7168    DC PL3'7158'
P7680    DC PL3'7670'
P8192    DC PL3'8182'
P10240   DC PL3'10230'
P12288   DC PL3'12278'
P14336   DC PL3'14326'
P16384   DC PL3'16374'
P18432   DC PL3'18422'
P20480   DC PL3'20470'
P22528   DC PL3'22518'
P24576   DC PL3'24566'
P26624   DC PL3'26614'
P28672   DC PL3'28662'
P30720   DC PL3'30710'
P32768   DC PL3'32758'
         END


NEKVM5

MAPSET   DFHMSD TYPE=&SYSPARM,MODE=INOUT,CTRL=(FREEKB,FRSET),          C
               TIOAPFX=YES,STORAGE=AUTO
NEKVM5   DFHMDI SIZE=(24,80)
IME      DFHMDF POS=(1,1),LENGTH=7,INITIAL='NEKVM5',ATTRB=(ASKIP,FSET)
         DFHMDF POS=(1,10),ATTRB=(ASKIP,BRT),                          C
               LENGTH=69,                                              C
               INITIAL='E S T I M A T E   D A T A   C O N T R O L  I N C
               T E R V A L   S I Z E'
         DFHMDF POS=(2,12),ATTRB=(ASKIP),                              C
               LENGTH=76,                                              C
               INITIAL='             FOR FIXED RECORD LENGTH ONLY'
LINE4    DFHMDF POS=(4,1),                                             C
               ATTRB=(PROT,ASKIP),                                     C
               LENGTH=21,                                              C
               INITIAL='ENTER RECORD LENGTH :'
LENGTH   DFHMDF POS=(4,23),                                            C
               ATTRB=(UNPROT,BRT,NUM),                                 C
               LENGTH=5
         DFHMDF POS=(4,29),LENGTH=50
LINE5    DFHMDF POS=(5,1),                                             C
               ATTRB=(PROT,ASKIP),                                     C
               LENGTH=62,                                              C
               INITIAL='% FREESPACE IN THE CI SIZE - KSDS ONLY    OTHERC
               WISE ENTER  0 :'
FREES    DFHMDF POS=(5,64),                                            C
               ATTRB=(UNPROT,BRT,NUM),                                 C
               LENGTH=2
         DFHMDF POS=(5,67),LENGTH=7
LINE6    DFHMDF POS=(6,1),                                             C
               ATTRB=(PROT,ASKIP),                                     C
               LENGTH=67,                                              C
               INITIAL='PUT  S(SEQUENTIAL PROCESSING) OR  M(DIRECT+SEQUC
               ENTIAL PROCESSING) :'
IND      DFHMDF POS=(6,69),                                            C
               ATTRB=(UNPROT,BRT),                                     C
               LENGTH=1
         DFHMDF POS=(6,71),LENGTH=8
LINE7    DFHMDF POS=(7,1),                                             C
               ATTRB=(PROT,ASKIP,DRK),                                 C
               LENGTH=79,                                              C
               INITIAL='                                               C
                    LOST BYTES     LOST BYTES/'
LINE8    DFHMDF POS=(8,1),                                             C
               ATTRB=(PROT,ASKIP,DRK),                                 C
               LENGTH=79,                                              C
               INITIAL='CISIZE       RECORDS: TOTAL    FOR USE   RESERVC
               E      PER CI      RECORDS TOTAL'
LINE09   DFHMDF POS=(09,1),ATTRB=PROT,LENGTH=79
LINE10   DFHMDF POS=(10,1),ATTRB=PROT,LENGTH=79
LINE11   DFHMDF POS=(11,1),ATTRB=PROT,LENGTH=79
LINE12   DFHMDF POS=(12,1),ATTRB=PROT,LENGTH=79
LINE13   DFHMDF POS=(13,1),ATTRB=PROT,LENGTH=79
LINE14   DFHMDF POS=(14,1),ATTRB=PROT,LENGTH=79
LINE15   DFHMDF POS=(15,1),ATTRB=PROT,LENGTH=79
LINE16   DFHMDF POS=(16,1),ATTRB=PROT,LENGTH=79
LINE17   DFHMDF POS=(17,1),ATTRB=PROT,LENGTH=79
LINE18   DFHMDF POS=(18,1),ATTRB=PROT,LENGTH=79
LINE19   DFHMDF POS=(19,1),ATTRB=PROT,LENGTH=79
LINE20   DFHMDF POS=(20,1),ATTRB=PROT,LENGTH=79
LINE21   DFHMDF POS=(21,1),ATTRB=PROT,LENGTH=79
LINE22   DFHMDF POS=(22,1),ATTRB=PROT,LENGTH=79
LINE23   DFHMDF POS=(23,1),                                            C
               ATTRB=(PROT,ASKIP,BRT),                                 C
               LENGTH=79,                                              C
               INITIAL='                           PF6,PF18 - CICS'
ERRMSG   DFHMDF POS=(24,1),LENGTH=79,ATTRB=(BRT,PROT)
         DFHMSD TYPE=FINAL
         END


Nenad Kuzmanovic
Arenaturist (Yugoslavia)                              c Nenad Kuzmanovic 1992


