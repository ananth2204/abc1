Allocating datasets using esoteric group names


PROBLEM

When I was a DASD Manager, I always felt that it would be nice to
allocate VSAM datasets in the same manner as I allocated other
datasets, ie via an esoteric group name in the JCL UNIT parameter.
Software on the market at the time seemed much too costly to provide
a service that should be readily available to MVS users.

After giving it some thought, I came up with a solution which was
simple, worked well, and required little additional overhead.


SOLUTION

To implement the method I devised, all that is required are a few
additions and changes to JCL in the IDCAMS procedures currently in
place, and the creation of an identically named VSAM parameter
library on each DASD volume on which VSAM datasets reside.  If
esoteric group names do not exist for required volumes or are not
compatible with your shop's standards (eg VSAM datasets may be
restricted to all but selected volumes within an esoteric group), you
will be required to develop new pool names for this purpose.

The additional JCL is in the form of a BR14 job step.

//BR14     EXEC PGM=IEFBR14
//BR14     DD DSN=USER.VSAM.ALLOC.DISP=(NEW,DELETE),SPACE=(CYL,1000),
//         UNIT=VSAM01
//IDCAMS   EXEC PGM=IDCAMS
//DASD     DD DISP=SHR,VOL=REF=*.BR14.BR14 (optional)
//SYSPRINT DD SYSOUT=*
//SYSIN    DD DSN=VSAM.PARM.LIB(VFILE1),DISP=SHR,VOL=REF=*.BR14.BR14

In the example JCL, a 'temporary' dataset is allocated within a VSAM
DASD pool using IEFBR14 and UNIT=VSAM01.  In the IDCAMS
step following it, SYSIN (and the VSAM.PARM.LIB) is allocated via
a backward reference to the 'temporary' dataset allocation.  In this case
all VSAM parameter libraries within the VSAM01 DASD pool must
be uncatalogued and named VSAM.PARM.LIB.  This is not a major
problem since as many as two hundred PARMLIB members can
reside in a one-cylinder PDS.  Any software product purchased will
probably require several times the DASD space.

Below is a sample portion of the IDCAMS parameters located in
VSAM.PARM.LIB (member VFILE1) which resides on volume
VSM001.

DEFINE CLUSTER (NAME(USER.VSAM.FILE1) -
VOLUMES(VSM001)  -
FILE(DASD) -      optional
CYLINDERS(800 100)
....
....
....
DATA(NAME(USER.VSAM.FILE1.DATA) -
CISZ(22528)) -
INDEX(NAME(USER.VSAM.FILE1.INDX) -
CISZ(1024))

Except for the VOLUMES parameter, member name VFILE1 would
be identical to all other VFILE1s on all other VSAM.PARM.LIBs.
On VSM002 the volume parameter would read
VOLUMES(VSM002); on VSM003 the volume parameter would read
VOLUMES(VSM003); and so on for every volume defined to the
VSAM01 DASD pool.  As a result of using this method your VSAM
cluster will be allocated as long as there is enough space on at least
one volume within a specified DASD pool.



