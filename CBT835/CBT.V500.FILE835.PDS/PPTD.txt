PPTD     TITLE 'PPTD - DISPLAY PROGRAM PROPERTIES TABLE.'
         SPACE 1
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*  DOCUMENTATION:   THIS PROGRAM IS MEANT TO BE RUN AS AN APF         *
*                   AUTHORIZED TSO COMMAND.  IT IS BEST RUN USING     *
*                   A MECHANISM TO CAPTURE THE OUTPUT AND DISPLAY     *
*                   IT ON THE FULL SCREEN, SUCH AS TSOV, TSOB,        *
*                   TSOE AND TSOR FROM MARK ZELDEN.                   *
*                                                                     *
*         SYNTAX:   PPTD                                              *
*                     OR                                              *
*                   TSOV PPTD, TSOE PPTD, TSOR PPTD, ETC.             *
*                                                                     *
*       FUNCTION:   TO LIST THE ENTRIES TO THE PROGRAM PROPERTIES     *
*                   TABLE OF THE Z/OS OPERATING SYSTEM.  THESE ARE    *
*                   SPECIAL PROGRAMS THAT RUN WITH SPECIAL PROPER-    *
*                   TIES, SUCH AS NON-CANCELABLE, NON-SWAPPABLE,      *
*                   OR IN A PARTICULAR STORAGE KEY, ETC.              *
*                                                                     *
*          AUTHOR:  SAM GOLOB           VERSION:   1.2.1              *
*                                                                     *
*            DATE:  FEB 02, 2011                                      *
*                                                                     *
*        FEATURES:  USES PUTLINE INTERFACE WITH MACRO APUT AND        *
*                   MODULE EPUTL INCLUDED.                            *
*                                                                     *
*         CHANGES:  MAR 20, 2019 - RETURN CODE CONTROL.....           *
*                   VERS. 1.2.1    RC=0 WHEN AUTHORIZED               *
*                                  RC=4 WHEN NOT AUTHORIZED           *
*                                  UNCOMMENT THE LINE AFTER LABEL     *
*                                  NOTAUTH, AND PUT IN ANY CODE YOU   *
*                                  WANT, FOR NOT AUTHORIZED ACTION.   *
*                                                                     *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* ------------------------------------------------------------------ *
         MACRO
&LABEL   APUT  &MSG,                    @MESSAGE TEXT                  &
               &LEN,                    @LENGTH OF MESSAGE             &
               &RSA=,                   OPTIONAL 2 WORD SAVE AREA      &
               &EPA=                    EPUTL EPA
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*  --> E@PUT
.*
.*  THIS MACRO SETS UP A PARAMETERS AND INVOKES THE EPUTL ROUTINE.
.*
.*
.*  ARGUMENTS: -----------------------------------------------------
.*
.*      &MSG : ADDRESS OF MESSAGE TEXT OR A LITERAL
.*
.*      &LEN : LENGTH OF MESSAGE TEXT (DEFAULT IS L'&MSG)
.*
.*      &RSA :(OPTIONAL) 1 WORD SAVE AREA TO PRESERVE R14 FOR TPUT
.*            COMPATIBILITY.
.*
.*      &EPA :(OPTIONAL) EPA FOR EPUTL ROUTINE
.*
.*
.*   EXAMPLES: -----------------------------------------------------
.*
.*      1) APUT  'LITERAL'
.*
.*      2) APUT  (R3),80
.*
.*      3) APUT  LABEL
.*
.*      4) APUT  LABEL,40
.*
.*
.* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
.*
.*
.*  LOCAL SET SYMBOLS
.*
         LCLC  &SMA                     MESSAGE ADDRESS (REG)
         LCLC  &SML                     MESSAGE LENGTH (REG)
         LCLC  &SEP                     EPA (REGISTER)
.*
         LCLC  &L1,&L2,&L3              LOCAL LABELS
.*
&L1      SETC  'EP'.'&SYSNDX'.'L1'      LOCAL LABELS
&L2      SETC  'EP'.'&SYSNDX'.'L2'      LOCAL LABELS
&L3      SETC  'EP'.'&SYSNDX'.'L3'      LOCAL LABELS
.*
.*
.*  MESSAGE ADDRESS
.*
         AIF   (T'&LABEL EQ 'O').A0500                      *HMD 11/86*
.*                                                          *HMD 11/86*
&LABEL   DS    0H                                           *HMD 11/86*
.*                                                          *HMD 11/86*
.A0500   ANOP                                               *HMD 11/86*
         AIF   ('&MSG' NE '').A2000
         MNOTE 8,'''&MSG='' MISSING / REQUIRED'
         MEXIT
.*
.A2000   ANOP
         AIF   ('&MSG'(1,1) NE '(').A2400
&SMA     SETC  '&MSG'(2,K'&MSG-2)
         LR    R1,&SMA                  @MESSAGE TEXT
         AGO   .A2600
.*
.A2400   ANOP
         AIF   ('&MSG'(1,1) NE '''').A2500
         B     &L3                      BRANCH AROUND MESSAGE
&L2      DC    C&MSG
&L3      DS    0H
         LA    R1,&L2                   @MESSAGE
         AGO   .A2600
.*
.A2500   ANOP
         LA    R1,&MSG                  @MESSAGE TEXT
.A2600   ANOP
.*
.*  MESSAGE LENGTH
.*
         AIF   ('&LEN' NE '').A3000
         AIF   ('&MSG'(1,1) NE '''').A2800
         LA    R0,L'&L2                 MESSAGE LENGTH
         AGO   .A3600
.*
.A2800   ANOP
         AIF   ('&MSG'(1,1) EQ '(').A2900
         LA    R0,L'&MSG                MESSAGE LENGTH
         AGO   .A3600
.*
.A2900   ANOP
         MNOTE 8,'''LEN'' MISSING / REQUIRED'
         MEXIT
.*
.A3000   ANOP
         AIF   ('&LEN'(1,1) NE '(').A3400
&SML     SETC  '&LEN'(2,K'&LEN-2)
         LR    R0,&SML                  MESSAGE LENGTH
         AGO   .A3600
.*
.A3400   ANOP
         LA    R0,&LEN                  MESSAGE LENGTH
.A3600   ANOP
.*
.*  RSA
.*
         AIF   ('&RSA' EQ '').A4900
         ST    R14,&RSA                 SAVE REGS 14
.A4900   ANOP
.*
.*  ENTRY POINT
.*
         AIF   ('&EPA' NE '').A5000
         L     R15,=V(EPUTL)            EPA
         AGO   .A5600
.*
.A5000   AIF   ('&EPA'(1,1) NE '(').A5400
&SEP     SETC  '&EPA'(2,K'&EPA-2)
         LR    R15,&SEP                 EPA
         AGO   .A5600
.*
.A5400   ANOP
         L     R15,&EPA                 EPA
.*
.A5600   ANOP
.*
.*  CALL LINKAGE
.*
.ACALL   BALR  R14,R15                  CALL PUTLINE ROUTINE
.*
         AIF   ('&RSA' EQ '').A6900
         L     R14,&RSA                 RESTORE R14
.A6900   ANOP
.*
.AMEND   MEND
* ------------------------------------------------------------------ *
         MACRO
&NAME    HEX   &TO,&LEN,&FROM
&NAME    STM   R15,R1,HEXSAVE
         LA    R1,&FROM
         LA    R0,&LEN
         LA    R15,&TO
         BAL   R9,HEX
         LM    R15,R1,HEXSAVE
         MEND
PPTD     AMODE 31
PPTD     RMODE 24
PPTD     CSECT
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS
         LR    R12,R15             LOAD ENTRY POINT INTO BASE REGISTER
         USING PPTD,R12,R11,R10    BASE REGISTERS
         LA    R11,2048(,R12)      LOAD EM UP.
         LA    R11,2048(,R11)
         LA    R10,2048(,R11)
         LA    R10,2048(,R10)
         LR    R15,R13             SAVE CALLER'S SAVE ADDRESS
         LA    R13,SAVE            GET OUR SAVEAREA ADDRESS
         ST    R15,SAVE+4          STORE HIS SAVEAREA INTO MINE + 4
         ST    R13,8(,R15)         STORE MINE INTO HIS SAVEAREA + 8
INITCON  DS    0H
         ZAP   IBMCOUNT,=P'0'
         ZAP   IBMCONOT,=P'0'
RUNCHAIN DS    0H
         L     R5,X'10'                  CVT
         L     R5,X'128'(,R5)            POINT TO JESCT
         L     R5,X'68'(,R5)             POINT TO PPT HEADER
         LR    R6,R5               R5 IS BEGINNING. R6 WILL MOVE.
         ST    R5,SAVER5A
         HEX   MSGLINE+44,4,SAVER5A
         APUT  MSGLINE,L'MSGLINE   TITLE
GETHEADR DS    0H                        GET PPT HEADER FIELDS
         STM   R15,R1,SAVE1401     Now save registers and test if APF
         XR    R15,R15                  authorized.
         TESTAUTH FCTN=1           Are we authorized?
         LTR   R15,R15             Test the return code.
         BNZ   NOTAUTH             Not zero, tell not authorized.
         LM    R15,R1,SAVE1401     Restore registers used by TESTAUTH.
         MODESET MODE=SUP,KEY=ZERO       SWITCH TO KEY=0
         MVC   CPTHDR(32),0(R5)          SAVE ENTIRE PPT HEADER
         MODESET MODE=PROB,KEY=NZERO     SWITCH BACK TO OWN KEY
         LH    R7,CPTUSED                HOW MANY USED ENTRIES?
         ST    R7,SAVER7A                SAFEKEEPING
         BAL   R9,FORMATH                FORMAT HEADER FIELDS
         LA    R6,32(,R6)                POINT TO FIRST PPT ENTRY
LOOP     DS    0H                        GET PPT ENTRIES
         ST    R7,SAVER7B
*        XC    ENTFLAGS(8),ENTFLAGS      CLEAR FLAGS
*        MVC   PGMNAME,PGMNAME-1         CLEAR NAME
         MODESET MODE=SUP,KEY=ZERO       SWITCH TO KEY=0
         MVC   MPTENTRY(16),0(R6)        MOVE PPT ENTRY OUT
         MODESET MODE=PROB,KEY=NZERO     SWITCH BACK TO OWN KEY
         MVC   MSGLINE2(8),PGMNAME
         HEX   MSGLINE2+10,4,ENTFLAGS
         HEX   MSGLINE2+20,4,ENTFLAGS+4
*        APUT  MSGLINE2,L'MSGLINE2       DISPLAY MESSAGE ON THE TUBE
         BAL   R9,FORMATE                FORMAT THE DATA IN FLAGS
         LA    R6,16(,R6)                BUMP TO NEXT PPT ENTRY
         HEX   MSGLINE3,4,SAVER7B
*        APUT  MSGLINE3,L'MSGLINE3
         BCT   R7,LOOP                   FOR AS MANY AS THERE ARE
         APUT  ENDMSG,L'ENDMSG
         BAL   R9,FINISHM
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
RETURN   DS    0H
         LA    R15,0               FORCE RC=0
         L     R13,SAVE+4          RELOAD CALLER'S SAVEAREA POINTER
         L     R14,12(,R13)        RELOAD R14
         MVC   16(4,R13),=A(0)     FORCE RC=0
         LM    R0,R12,20(R13)      RELOAD REST OF REGISTERS
         BR    R14                 RETURN TO CALLER
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*     S  U  B  R  O  U  T  I  N  E  S                             *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
NOTAUTH  DS    0H                  R15 HAS THE RC FROM TESTAUTH
*        LA    R15,8               PUT IN ANY CODE YOU WANT....
*                                  DEFAULT IS RC=4 FROM TESTAUTH
         STM   R14,R12,SAVERRS     SAVE REGS FOR APUT
         APUT  NOTAUTHM,L'NOTAUTHM
         LM    R14,R12,SAVERRS     RELOAD REGS
         L     R13,SAVE+4          RELOAD CALLER'S SAVEAREA POINTER
         L     R14,12(,R13)        RELOAD R14
         LM    R0,R12,20(R13)      RELOAD REST OF REGISTERS NOT 15
         BR    R14                 RETURN TO CALLER
NOTAUTHM DC    C'This program has to be run APF-Authorized.'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FORMATH  DS    0H
         ST    R9,SAVER9B
         ST    R4,SAVER4A
         LH    R4,CPTHDR+10
*        LH    R4,CPTUSED
         CVD   R4,CVDAREA
         MVC   MSGLINN+46(10),MASK10
         ED    MSGLINN+46(10),CVDAREA+4
         MVI   MSGLINN+54,C' '
         APUT  MSGLINN,L'MSGLINN
         APUT  FENTMS1,L'FENTMS1
         APUT  FENTMS2,L'FENTMS2
         APUT  FENTMS3,L'FENTMS3
         L     R4,SAVER4A
         L     R9,SAVER9B
         BR    R9
MASK10   DC    XL10'40202020202020202120'
MASK46   DC    XL6'402020202120'
IBMCOUNT DC    PL5'0'
IBMCONOT DC    PL5'0'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FORMATE  DS    0H
         ST    R9,SAVER9C
         ST    R7,SAVER7C
         MVC   GENPPT,GENPPT-1
         LA    R8,MPTENTRY
         USING PPT1,R8
*-->
         MVC   GPPTNAME,PPTNAME        PROGRAM NAME
         MVC   GPPTNCNC,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTNCNCL       NON CANCEL?
         BNO   SPECPKEY                NO-
         MVC   GPPTNCNC,=CL3'YES'      SET
SPECPKEY DS    0H
         MVC   GPPTSKEY,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTSKEY        SPECIAL STORAGE KEY?
         BNO   NONSWAP                 NO-
         MVC   GPPTSKEY,=CL3'YES'      SET
NONSWAP  DS    0H
         MVC   GPPTNSWP,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTNSWP        NON-SWAPPABLE?
         BNO   PRIV                    NO-
         MVC   GPPTNSWP,=CL3'YES'      SET
PRIV     DS    0H
         MVC   GPPTPRIV,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTPRIV        PRIVILEGED?
         BNO   SYSTASK                 NO-
         MVC   GPPTPRIV,=CL3'YES'      SET
SYSTASK  DS    0H
         MVC   GPPTSYST,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTSYSTK       SYSTEM TASK?
         BNO   NDSI                    NO-
         MVC   GPPTSYST,=CL3'YES'      SET
NDSI     DS    0H
         MVC   GPPTNDSI,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTNDSI        DATASET INTEGRITY?
         BO    NOPASS                  NO-
         MVC   GPPTNDSI,=CL3'YES'      SET
NOPASS   DS    0H
         MVC   GPPTNOPS,=CL3'NO '      DEFAULT
         TM    PPTBYTE1,PPTNOPAS       BYPASS PASSWORD PROTECTION?
         BNO   PROTKY                  NO-
         MVC   GPPTNOPS,=CL3'YES'      SET
PROTKY   DS    0H
         SR    R7,R7                   ZEROIZE
         IC    R7,PPTKEY               PICK UP THE PROTECT KEY
         SRL   R7,4(0)                 MOVE INTO LOW BYTE
         CVD   R7,DW                   CONVERT TO DECIMAL
         UNPK  UNPKKEY,PROTKEY         MAKE IT READABLE
         OI    UNPKKEY+L'UNPKKEY-1,X'F0'  FORCE SIGN TO F
         MVC   GPPTKEYS,UNPKKEY+1      MOVE TO REXX AREA
CPUAFF   DS    0H
         LA    R5,PPTCPUA              @ CPU AFFINITY
         LA    R3,L'PPTCPUA            LENGTH TO CONVERT
         LA    R7,GPPTCPUA             @ OUTPUT AREA
CPUAFFCN DS    0H
         SR    R4,R4                   ZEROIZE
         IC    R4,0(R5)                CHARACTER TO CONVERT
         SRL   R4,4(0)                 REMOVE LOW NIBBLE
         STC   R4,CHAR                 STORE
         BAL   R9,HEXCONV              DO THE HEX CONVERSION
         MVC   0(1,R7),CHAR            MOVE TO OUTPUT AREA
         LA    R7,1(,R7)               NEXT POSITION IN OUTPUT AREA
         MVC   CHAR,0(R5)              NEXT NIBBLE
         NI    CHAR,X'0F'              REMOVE LOW NIBBLE
         BAL   R9,HEXCONV              DO THE HEX CONVERSION
         MVC   0(1,R7),CHAR            MOVE TO OUTPUT AREA
         LA    R7,1(,R7)               NEXT POSITION IN OUTPUT AREA
         LA    R5,1(,R5)               NEXT BYTE TO CONVERT
         BCT   R3,CPUAFFCN             DO WHILE R3 > 0?
P2LPU    DS    0H
         MVC   GPPT2LPU,=CL3'NO '      DEFAULT
         TM    PPTPUBYT,PPT2LPU        2ND LEVEL PREFERED STORAGE
         BNO   P1LPU                   NO-
         MVC   GPPT2LPU,=CL3'YES'      SET
P1LPU    DS    0H
         MVC   GPPT1LPU,=CL3'NO '      DEFAULT
         TM    PPTPUBYT,PPT1LPU        1ST LEVEL PREFERED STORAGE   PG1
         BNO   PORIG                   NO-
         MVC   GPPT2LPU,=CL3'YES'      SET                          PG1
PORIG    DS    0H
         MVC   GPPTORIG,=CL3'YES'      DEFAULT
         TM    PPTORIG,PPTDEFLT        ORIGIN?
         BO    IBMYES
         MVC   GPPTORIG,=CL3'NO '      SET
         B     IBMNO
IBMYES   DS    0H
         AP    IBMCOUNT,=P'1'
         B     FORMEOUT
IBMNO    DS    0H
         AP    IBMCONOT,=P'1'
FORMEOUT DS    0H
         APUT  GENPPT,L'GENPPT
*-->
         L     R7,SAVER7C
         L     R9,SAVER9C
         DROP  R8
         BR    R9
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEXCONV  EQU   *                       PRINT HEX ROUTINE
         ST    R9,SAVER9D
         CLI   CHAR,X'09'              > 9?
         BH    HEX10                   YES-
         OI    CHAR,X'F0'              RANGE F0-F9
         BR    R2                      RETURN TO CALLER
HEX10    EQU   *
         XR    R4,R4                   ZEROIZE
         IC    R4,CHAR                 INSERT CHAR INTO REG
         SH    R4,=H'9'                GET CHAR NO
         STC   R4,CHAR                 STORE
         OI    CHAR,X'C0'              RANGE C0-C6
         L     R9,SAVER9D
         BR    R9                      RETURN TO CALLER
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FINISHM  DS    0H
         ST    R9,SAVER9E
         MVC   MSGIBM+43(6),MASK46
         ED    MSGIBM+43(6),IBMCOUNT+2
         APUT  MSGIBM,L'MSGIBM
         MVC   MSGIBMNO+43(6),MASK46
         ED    MSGIBMNO+43(6),IBMCONOT+2
         APUT  MSGIBMNO,L'MSGIBMNO
         L     R9,SAVER9E
         BR    R9                      RETURN TO CALLER
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*     D  A  T  A     A  R  E  A  S                                *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SAVE     DC    18F'0'              MY SAVE AREA
CVDAREA  DS    D
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         DC    CL2' '
MPTENTRY DC    0CL16
PGMNAME  DC    CL8' '
ENTFLAGS DC    8X'00'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
SAVER4A  DC    F'0'
SAVER5A  DC    F'0'
SAVER6A  DC    F'0'
SAVER7A  DC    F'0'
SAVER7B  DC    F'0'
SAVER7C  DC    F'0'
SAVER9A  DC    F'0'
SAVER9B  DC    F'0'
SAVER9C  DC    F'0'
SAVER9D  DC    F'0'
SAVER9E  DC    F'0'
SAVER15A DC    F'0'
SAVERRS  DS    16F
MSGLOOP  DC    CL16' '
MSGLINE  DC    C'PPT DISPLAY - V1.2.1      PPT ADDRESS IS:            '
MSGLINN  DC  C'--------------------      NUMBER OF ENTRIES:           '
MSGLINE2 DC    CL30' '                      LINE FOR MESSAGE
MSGLINE3 DC    CL30' '                      LINE FOR MESSAGE
MSGIBM   DC    C'Number of IBM Supplied  Default Entries:           '
MSGIBMNO DC    C'Number of Non-IBM added Parmlib Entries:           '
DW       DS    D                       WORK AREA
UNPKKEY  EQU   DW,3                    UNPACKED PROTECT KEY
UNPKSTEM EQU   DW,3                    UNPACKED STEM
PROTKEY  EQU   DW+6,2                  PROTECT KEY
STEMNO   EQU   DW+6,2                  STEM NO
CHAR     DS    C                       A LONE CHARACTER
         LTORG
         YREGS
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
TOTIBMM  DC    C' IBM  Supplied  Default  Entries = '
TOTNIBMM DC    C' Non IBM Supplied Default Entries= '
FENTMS1  DC    C' PROGRAM  NON  SPEC  NON  PRIV SYST DSI BYPS PROT CPU X
                2LPU 1LPU IBM '
FENTMS2  DC    C'  NAME    CNCL PR/KY SWAP SRM  TASK     PASS KEY  AFF X
                          DEF '
FENTMS3  DC    C'--------  ---- ----- ---- ---- ---- --- ---- ---- ----X
                ---- ---- --- '
ENDMSG   DC    C'--------------------'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         DC    CL1' '                  BLANK FOR CLEARING AREA
GENPPT   DS    0CL68                   GENERATED PPT TABLE ENTRY
GPPTNAME DC    CL8'X'                  PROGRAM NAME
         DC    CL2' '
GPPTNCNC DC    CL3'X'                  NON/CANCEL
         DC    CL2' '
GPPTSKEY DC    CL3'X'                  SPECIAL PROTECT KEY
         DC    CL3' '
GPPTNSWP DC    CL3'X'                  NON/SWAPPABLE
         DC    CL2' '
GPPTPRIV DC    CL3'X'                  PRIVILEGED
         DC    CL2' '
GPPTSYST DC    CL3'X'                  SYSTEM TASK
         DC    CL2' '
GPPTNDSI DC    CL3'X'                  DSI
         DC    CL1' '
GPPTNOPS DC    CL3'X'                  BYPASS PASSWORD PROTECTION
         DC    CL2' '
GPPTKEYS DC    CL2'X'                  PROTECT KEY
         DC    CL3' '
GPPTCPUA DC    CL4'X'                  CPU AFFINITY
         DC    CL1' '
GPPT2LPU DC    CL3'X'                  2ND LEVEL STORAGE
         DC    CL2' '
GPPT1LPU DC    CL3'X'                  1ST LEVEL STORAGE
         DC    CL2' '
GPPTORIG DC    CL3'X'                  ENTRY ORIGIN
GPPTLEN  EQU   *-GENPPT                ENTRY LENGTH
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
HEX      DS    0H
         ST    R9,SAVER9A
         MVC   1(1,R15),0(R1)      MOVE BYTE
         UNPK  0(3,R15),1(2,R15)   UNPACK
         TR    0(2,R15),HEXTAB-240
         LA    R15,2(,R15)         INCREMENT OUTPUT PTR
         LA    R1,1(,R1)           INCREMENT INPUT PTR
         BCT   R0,HEX              DECREMENT LENGTH, THEN LOOP
         MVI   0(R15),C' '         BLANK THE TRAILING BYTE
         L     R9,SAVER9A
         BR    R9                  RETURN TO CALLER
HEXTAB   DC    C'0123456789ABCDEF' TRANSLATE TABLE
HEXSAVE  DS    4F
SAVE1401 DS    4F
* HEADER FIELDS ---- PREFIX IS "CPT" RATHER THAN "PPT"
CPTHDR   DS    0CL32
CPTID    DS    CL4   IDENTIFIER 'PPT '
CPTVERS  DS    XL1   VERSION NUMBER
CPTCVERS EQU   X'01' CURRENT VERSION NUMBER
         DS    XL1   RESERVED
CPTHDRLN DS    H     LENGTH OF PPT HEADER
CPTENTLN DS    H     LENGTH OF A PPT ENTRY
CPTUSED  DS    H     NUMBER OF USED PPT ENTRIES
CPTENTS  DS    H     TOTAL NUMBER OF PPT ENTRIES
         DS    H     RESERVED
CPTMSGAD DS    XL4   ADDRESS OF MSGAREA USED IN IEFPPT
CPTIB650 DS    XL4   ADDRESS OF MESSAGE MODULE IEFIB650
CPTOLD   DS    A     ADDRESS OF NEXT LOGICALLY DELETED PPT
         DS    CL4   RESERVED
         SPACE
* PPT ENTRY FIELDS ---- PREFIX IS "CPT" RATHER THAN "PPT"
CPT1     DSECT
         SPACE
CPTENTRY DS    0CL16 MAPPING OF A PPT ENTRY
CPTNAME  DS    CL8   PROGRAM NAME
CPTBYTE1 DS    C     FIRST BYTE OF PROPERTIES
CPTNCNCL EQU   X'80' THIS PROGRAM IS NON-CANCELABLE
CPTSKEY  EQU   X'40' THIS PROGRAM REQUIRES THE SPECIAL PROTECT
*                    KEY IN PPTKEY
CPTNSWP  EQU   X'20' THIS PROGRAM IS TO BE AUTHORIZED TO BE
*                    NON-SWAPPABLE
CPTPRIV  EQU   X'10' THIS PROGRAM IS TO BE 'PRIVILEGED' (WITH
*                    RESPECT TO THE SYSTEM RESOURCES MANAGER)
CPTSYSTK EQU   X'08' THIS PROGRAM IS A SYSTEM TASK
CPTNDSI  EQU   X'04' THIS PROGRAM IS NOT TO BE GIVEN DATA SET
*                    INTEGRITY
CPTNOPAS EQU   X'02' BYPASS PASSWORD PROTECTION
CPTNHUSI EQU   X'01' Region and MEMLIMIT values and limits set
*                    or affected by the IEFUSI exit are not
*                    honored for the program. Set to on when PPT
*                    option NOHONORIEFUSIREGION is specified in
*                    SCHEDxx. This bit is also set explicitly
*                    for some program entries in the IBM default
*                    PPT table IEFSDPPT.
* THE REMAINING BIT IS RESERVED
         SPACE
CPTKEY   DS    C -   THIS KEY IS TO BE GIVEN TO THE PROGRAM
*                    BEING ATTACHED IF PPTSKEY IS ON
*        THE EQUATES FOR PROTECT KEYS FOLLOW, TO INSURE THAT
*        PROTECT KEYS ARE DEFINED AS THE HIGH ORDER 4 BITS OF
*        THE BYTE. KEYS 9-15 ARE FOR V=R PROGRAMS and Key 9
*        is only used when the Subpool Override is not enabled.
CPTKEY0  EQU   X'00'
CPTKEY1  EQU   X'10'
CPTKEY2  EQU   X'20'
CPTKEY3  EQU   X'30'
CPTKEY4  EQU   X'40'
CPTKEY5  EQU   X'50'
CPTKEY6  EQU   X'60'
CPTKEY7  EQU   X'70'
CPTKEY8  EQU   X'80'
CPTKEY9  EQU   X'90'
CPTKEYA  EQU   X'A0'
CPTKEYB  EQU   X'B0'
CPTKEYC  EQU   X'C0'
CPTKEYD  EQU   X'D0'
CPTKEYE  EQU   X'E0'
CPTKEYF  EQU   X'F0'
CPTCPUA  DS    BL2   BIT MASK OF CPU'S ON WHICH THIS PROGRAM CAN
*                    RUN (SHOULD BE X'FFFF' IF AFFINITY IS NOT
*                    REQUIRED)
CPTFLGS  DS    0F    FLAG BYTES
CPTPUBYT DS    CL1   Miscellaneous Flags
CPT2LPU  EQU   X'80' 2ND LEVEL PREFERRED USAGE
CPT1LPU  EQU   X'40' 1ST LEVEL PREFERRED USAGE
CPTN2LP  EQU   X'20' NOT 2ND LEVEL PREFERRED USAGE
CPTCRPG  EQU   X'01' CRITICALPAGING specified - program is
*                    critical to Hyperswap operation and should
*                    not allow any of its pages to be stolen
* THE REMAINING BITS ARE RESERVED
CPTORIG  DS    CL1   PPT ENTRY ORIGIN
CPTDEFLT EQU   X'80' FROM IBM SUPPLIED DEFAULT TABLE
* THE REMAINING BITS ARE RESERVED
         DS    CL2   RESERVED
CPTLEN   EQU   *-CPT1 LENGTH OF AN ENTRY
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         IEFZB610
         END
EPUTL    TITLE 'PUTLINE FOR FEWER THAN 83 ARGUMENTS IN THE KEY OF C MAJ&
               OR'
EPUTL    CSECT                                              *HMD 10/85*
         LCLB  &XA                                          *HMD 10/85*
&XA      SETB  1                  SET TO ZERO ON NON/XA     *HMD 10/85*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  MODULE NAME  . . . . EPUTL
*
*  ALIASES  . . . . . . NONE
*
*  DATE WRITTEN . . . . 06/85
*  UPDATED      . . . . 04/88                                  HD APR88
*
*  AUTHOR . . . . . . . JIM ELSWORTH
*  UPDATOR  . . . . . . HOWARD M. DEAN                         HD APR88
*
*  ENVIRONMENT  . . . . TSO COMMAND-PROCESSOR
*
*  PURPOSE:
*    ALLOW AN EASY INTERFACE TO PUTLINE ROUTINE
*
*
*  DESCRIPTION:
*    BUILDS PUTLINE PARAMETER LIST BASED ON INPUT ARGUMENTS.
*    ISSUES SINGLE LINE PUTLINE.
*
*
*  ATTRIBUTES:
*    REENTRANT
*
*  FEATURES:
*    WILL RUN UNDER BATCH TMP SINCE PUTLINE USED INSTEAD OF TPUT.
*
*  CALLED MODULES:
*    PUTLINE
*
*  ASSUMPTIONS:
*    CALLED BY A TSO-CP THAT IS OBSERVING STANDARD LINKAGE
*
*  ABENDS:
*    POSSIBLE 0CX IF BAD ARGUEMNTS
*
*  CAVEATS:
*    UNPREDICTABLE RESULTS IF FIRST PROGRAM RUNNING UNDER THIS TCB
*    DID NOT SAVE (14,12) BEFOR R1 WAS MODIFIED.
*
*
*  INPUT ARGUMENTS:
*    1)  R1 : ADDRESS OF MESSAGE TEXT
*    2)  R0 : LENGTH OF MESSAGE TEXT
*    3) R13 : STANDARD OS SAVE AREA
*    4) R14 : RETURN ADDRESS
*    5) R15 : ENTRY ADDRESS
*
*               ( CONTINUED ... )
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*
*  OUTPUT ARGUMENT: RETURN CODE FROM PUTLINE OR
*
RCBA     EQU   100                 BAD MESSAGE ADDRESS
RCBL     EQU   104                 MESSAGE LENGTH <1 OR >MAXMSG
*
MAXMSG   EQU   255                 MAXIMUM MESSAGE LENGTH
*
*
*  REGISTERS USED:
*
R0       EQU   0                   MESSAGE LENGTH AT ENTRY
R1       EQU   1                   MESSAGE ADDRESS AT ENTRY
R2       EQU   2                   WORK
RMA      EQU   4                   @MESSAGE TEXT
RML      EQU   5                   MESSAGE LENGTH
RUPT     EQU   6                   @UPT (USER PROFILE TABLE)
RECT     EQU   7                   @ECT
R12      EQU   12                  CSECT BASE
R13      EQU   13                  @SAVE AREA AND DYNAMIC WORK AREA
R14      EQU   14                  WORK/LINKAGE
R15      EQU   15                  WORK/LINKAGE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
         EJECT
         IKJCPPL
         EJECT
         IKJTCB   LIST=YES                                  *HMD 10/85*
         EJECT                                              *HMD 10/85*
         CVT      DSECT=YES,LIST=YES                        *HMD 10/85*
         EJECT
         IHAPSA   LIST=YES                                     HD APR88
         EJECT                                                 HD APR88
PUTLDS   DSECT
         DS    18F                      OS SAVE AREA
PUTAAA   EQU   *
PUTECB   DS    F                        ECB
PUTIOPL  DS    4F                       IOPLADS
PUTBLOK  PUTLINE MF=L
PUTLEN   DS    H                        LENGTH
PUTZZZ   DS    H                        RESERVED
PUTMSG   DS    (MAXMSG)C                MESSAGE TEXT AREA
PUTSIZE  EQU   *-PUTLDS                 SIZE OF PUTLINE PARMS
         EJECT
***********************************************************************
*  SET UP LINKAGE
***********************************************************************
         SPACE 1
EPUTL    CSECT
         AIF  (NOT &XA).X001                                *HMD 10/85*
EPUTL    AMODE 31
.X001    ANOP                                               *HMD 10/85*
         STM   14,12,12(13)       SAVE CALLERS REGS
         LR    R12,R15            COPY EPA
         USING EPUTL,R12          ADDRESSABILITY
         AIF   (NOT &XA).X002                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE,        STANDARD OS SA PLUS ANY EXTRA        &
               LOC=RES            RELATIVE TO 16MB LINE
         AGO   .X003                                        *HMD 10/85*
.X002    ANOP                                               *HMD 10/85*
         GETMAIN RU,              LV=LENGTH                            &
               LV=PUTSIZE         STANDARD OS SA PLUS ANY EXTRA
.X003    ANOP                                               *HMD 10/85*
         ST    1,8(13)            OUR SAVE AREA POINTER
         ST    13,4(1)            POINTER TO CALLERS SAVE AREA
         LR    13,1               @OUR SAVE AREA
         USING PUTLDS,R13         MAP SA AND WORK AREA
         L     R14,4(R13)         POINT TO CALLERS RSA
         LM    R0,R1,20(R14)      RESTORE REGS CHANGED BY GETMAIN
         SPACE 2
***********************************************************************
*  UNLOAD ARGUMENTS AND VALIDATE WHERE POSSIBLE
***********************************************************************
         SPACE 1
         LA    R15,RCBA                 ASSUME BAD ADDRESS
         LTR   RMA,R1                   MESSAGE ADDRESS
         BNP   RETURN                   GOOD ASSUMPTION
         LA    R15,RCBL                 ASSUME BAD LENGTH
         LTR   RML,R0                   POSITIVE?
         BNP   RETURN                   -NO
         C     RML,=A(MAXMSG)           MORE THAN MAX?
         BH    RETURN                   -YES
         SPACE 2
***********************************************************************
*  BUILD PARAMETER LIST
***********************************************************************
         SPACE 1
         LA    R15,4(RML)               MESSAGE LENGTH
         STH   R15,PUTLEN                 PLUS HEADER
         XC    PUTZZZ,PUTZZZ            CLEAR 2ND HWORD OF RDW
         BCTR  RML,0                    REDUCE FOR MOVE
         EX    RML,PUTMOVE
         EJECT
***********************************************************************
*  DIG UP ADDRESS OF UPT AND ECT
***********************************************************************
         SPACE 1
         L     R2,PSATOLD-PSA           @TCB                   HD APR88
         L     R2,TCBFSA-TCB(R2)        @1ST PROBLEM PGM SAVE AREA
         L     R2,24(R2)                REG1 THAT WAS PASSED TO CP
         USING CPPL,R2                  MAP CPPL
         L     RUPT,CPPLUPT             @UPT
         L     RECT,CPPLECT             @ECT
         SPACE 2
***********************************************************************
*  ISSUE PUTLINE CALL
***********************************************************************
         SPACE 1
         XC    PUTECB,PUTECB            CLEAR ECB
         XC    PUTBLOK(12),PUTBLOK      CLEAR PARM BLOCK       HD APR88
         PUTLINE PARM=PUTBLOK,          PARAMETER BLOCK                &
               UPT=(RUPT),              @UPT                           &
               ECT=(RECT),              @ECT                           &
               ECB=PUTECB,              @ECB                           &
               OUTPUT=(PUTLEN,TERM,SINGLE,DATA),                       &
               MF=(E,PUTIOPL)
         EJECT
***********************************************************************
*  RETURN TO CALLER
***********************************************************************
         SPACE 1
RETURN   EQU   *
         LR    2,R13                    @OUR SAVE AREA
         LR    3,R15                    SAVE RETURN CODE
         L     R13,4(R13)               @CALLERS SAVE AREA
         FREEMAIN RU,LV=PUTSIZE,A=(R2),SP=0
         LR    R15,3                    RESTORE RC
         RETURN (14,12),RC=(15)         RESTORE CALLERS REGS
         SPACE 5
***********************************************************************
*  CONSTANTS AND NON-REENTRANT WORK AREAS
***********************************************************************
         SPACE 1
PUTMOVE  MVC   PUTMSG(*-*),0(RMA)       MOVE MESSAGE TO BUFFER
         SPACE 2
         LTORG
         SPACE 2
         END   EPUTL
