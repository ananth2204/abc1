/**rexx**/
/*  Program-id           PPTSCANR                                  */
/*  Remarks              Display the PPT                           */
/*trace i*/
/* --------------------------------------------------------------- */
/* Change the next line to point to your panel dataset in ISPPLIB. */
/* --------------------------------------------------------------- */
address "ISPEXEC" "LIBDEF ISPPLIB DATASET ID('XXXXXX.PANELS')"
ppttable:
ADDRESS "ISPEXEC" "CONTROL DISPLAY LOCK" /* LOCK THE TERMINAL      */
if (rc > 8) then do                      /* error?                 */
   say 'Lock error    rc = 'rc''         /* yes- output message    */
   ADDRESS "ISPEXEC" "LIBDEF ISPPLIB"    /* remove allocation      */
   exit(rc)                              /* and quit               */
end
ADDRESS "ISPEXEC" "ADDPOP ROW(6) COLUMN(10)" /* pop up position    */
ADDRESS "ISPEXEC" "DISPLAY PANEL(PPTPAN02)"
if (rc > 8) then do                      /* error?                 */
   say 'Display error    rc = 'rc''      /* yes- output message    */
   ADDRESS "ISPEXEC" "LIBDEF ISPPLIB"    /* remove allocation      */
   exit(rc)                              /* and quit               */
end
PPTSCAN                                  /* scan the ppt           */
if (rc ¬= 0) then do                     /* error?                 */
   say 'PPTSCAN Error    rc = 'rc''      /* yes- output message    */
   ADDRESS "ISPEXEC" "LIBDEF ISPPLIB"    /* remove allocation      */
   exit(rc)                              /* and quit               */
end
call ppttable_build                      /* build the ppt table    */
ADDRESS "ISPEXEC" "REMPOP"               /* remove popup           */
ADDRESS "ISPEXEC" "ADDPOP ROW(3) COLUMN(1)"  /* pop up position    */
ADDRESS "ISPEXEC" "TBDISPL PPTTAB PANEL(PPTPAN01)"
if (rc > 8) then do                      /* error?                 */
   say 'tbdispl error    rc = 'rc''      /* yes- output message    */
   ADDRESS "ISPEXEC" "LIBDEF ISPPLIB"    /* remove allocation      */
   exit(rc)                              /* and quit               */
end
ADDRESS "ISPEXEC" "REMPOP"               /* remove menu popup      */
ADDRESS "ISPEXEC" "LIBDEF ISPPLIB"       /* remove allocation      */
exit(0)                                  /* quit                   */
ppttable_build:
ADDRESS "ISPEXEC" "TBCREATE PPTTAB NOWRITE REPLACE"
if (rc >  4) then do                     /* call okay?             */
   say 'tbcreate error    rc = 'rc''     /* no- inform the user    */
   ADDRESS "ISPEXEC" "LIBDEF ISPPLIB"    /* remove allocation      */
   exit(rc)                              /* lets quit              */
end
ztdmark=    '-------------------------------------------------------------------
--------'
ADDRESS  "ISPEXEC" "VPUT    (PPTENTRY,ZTDMARK) SHARED"
tabrows=  100                            /* max table rows         */
pptdibm=  0                              /* init                   */
pptndibm= 0                              /* init                   */
do i= 1 to pptent.0                      /* add the ppt ents to an */
                                         /* ispf table for display */
   pptentry= substr(pptent.i,1,8)        /* program name           */
                                         /* non-cancel             */
   pptentry= pptentry||'  '||substr(pptent.i,9,3)
                                         /* special protect key    */
   pptentry= pptentry||'   '||substr(pptent.i,12,3)
                                         /* non-swappable          */
   pptentry= pptentry||'     '||substr(pptent.i,15,3)
                                         /* privileged             */
   pptentry= pptentry||'   '||substr(pptent.i,18,3)
                                         /* system task            */
   pptentry= pptentry||'  '||substr(pptent.i,21,3)
                                         /* dsi                    */
   pptentry= pptentry||'   '||substr(pptent.i,24,3)
                                         /* bypass password prot   */
   pptentry= pptentry||'  '||substr(pptent.i,27,3)
                                         /* protection key         */
   pptentry= pptentry||'    '||substr(pptent.i,30,2)
                                         /* cpu affinity           */
   pptentry= pptentry||'  '||substr(pptent.i,32,4)
                                         /* 2LPU                   */
   pptentry= pptentry||'  '||substr(pptent.i,36,3)
                                         /* 1LPU                   */
   pptentry= pptentry||'  '||substr(pptent.i,39,3)
                                         /* default entry          */
   pptentry= pptentry||' '||substr(pptent.i,42,3)
   if substr(pptent.i,42,3) = 'YES' then /* IBM-supplied default?  */
      pptdibm= pptdibm + 1               /* yes                    */
   else
      pptndibm= pptndibm + 1             /* no                     */
   ADDRESS "ISPEXEC" "TBADD PPTTAB       /* add the entries        */
            SAVE(PPTENTRY)
            MULT("TABROWS")"
   if (rc ¬= 0) then do                  /* call okay?             */
      say 'tbadd error    rc = 'rc''     /* no- inform the user    */
      ADDRESS "ISPEXEC" "LIBDEF ISPPLIB" /* remove allocation      */
      exit(rc)                           /* let's quit             */
   end
end
ADDRESS "ISPEXEC" "TBTOP PPTTAB"         /* position to top of tab */
if (rc ¬= 0) then do                     /* call okay?             */
   say 'tbtop error    rc = 'rc''        /* no- inform the user    */
   ADDRESS "ISPEXEC" "LIBDEF ISPPLIB"    /* remove allocation      */
   exit(rc)                              /* let's quit             */
end
return
