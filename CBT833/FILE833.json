{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012918000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 235144, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE833.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE833.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x05\\x08'", "DS1TRBAL": "b'7\\xc8'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\xcb\\x00\\x02\\x05\\xcb\\x00\\x07\\x00\\x06'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x00\\x05\\x01\\x10\"O\\x01\\x10\"O\\t7\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T09:37:05", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-479"}, "text": "REGULAR CBT TAPE - VERSION 479    FILE:  833\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT479.FILE833\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 13 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,051 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   08/12/10    09:37:05    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00A\\x01\\x10\"O\\x01\\x10\"O\\t!\\x00,\\x00)\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T09:21:41", "lines": 44, "newlines": 41, "modlines": 0, "user": "SBGOLOB"}, "text": "Explanation of Labels system\n\nThe matter is that I often use a lot of labels during my\nexploration of COBOL texts. But I forget the meanings of my\nlabels all over the time. When I continue with the same text next\nday, I must give new labels  Oh, It is hard enough.\n\nSo I developed this utility. It is something like notepad for\nlabels.\n\nFirst of all, I can see all my labels. And (sic!) I can enter\ncomment for every label.\n\nThen I can save this table in special library and use it next\nday.\n\nI can move label on the another line and comment will be moved\ntoo.\n\nI have tested this for some days and it seems it works as I need.\n\nI d like to know your opinion about this facility. I ll be glad\nif you like it too.\n\nIn archive you may find:\n\nISRTSO     - it is screen to addition to ISRTSOA that\n             I ve sent previous (expanded TSO Command Shell).\nLAID000    - it is main screen (43 lines and more) of Label Aid.\nLAID00S    - the same for screens less than 43 lines.\nLIADTL0    - select table screen.\nLABELS     - macro.\nLABELS1    - variation of the macro.\nLAIDUG     - short User Guide.\n\nYou may remove  LUXOFT  from screen title if you like.\n\nWith best wishes,\nAlexander I. Vasilenko,\n\nWIRS Sustaining,\nProgrammer, Luxoft\nPhone: (495) 967-80-30 (ext. 3367)\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$NOTE2": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00(\\x01\\x10\"O\\x01\\x10\"O\\t&\\x00\\x16\\x00\\x16\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T09:26:28", "lines": 22, "newlines": 22, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: RE: Label Aid facility\nFrom:    \"EXI-Vasilenko, Alexander I\" <Alexander.I.Vasilenko@boeing.com>\nDate:    Fri, 16 Jul 2010 00:41:59 -0700\nTo:      \"Sam Golob\" <sbgolob@cbttape.org>\n\nSam!\n\nHere is a bit modified version of LABELS. (It is member LABELS1 here.)\n\nI thought that would be nice to use unclosed version of table,\nwhich still resides in virtual storage. After we leave EDIT we\nlose all labels but not this table. Next time we open EDIT, we\ncould reuse this table again. Now it works.\n\nWith best wishes,\n\nAlexander I. Vasilenko,\n\nWIRS Sustaining,\nProgrammer, Luxoft\nPhone: (495) 967-80-30 (ext. 3367)\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE3": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x10\"O\\x01\\x10\"O\\t1\\x00\\x12\\x00\\x12\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T09:31:03", "lines": 18, "newlines": 18, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: RE: Label Aid facility\nFrom:    \"EXI-Vasilenko, Alexander I\" <Alexander.I.Vasilenko@boeing.com>\nDate:    Fri, 16 Jul 2010 05:23:45 -0700\nTo:      \"Sam Golob\" <sbgolob@cbttape.org>\n\nOh, Sam, I'm very sorry.\nI've just understood.\nYou may be asked about LAID000 and LAID00S.\nI use terminal with 43 line. But some of our people use 32 or\nless line. For them I wrote LAID00S to avoid abend.\n\nWith best wishes,\nAlexander I. Vasilenko,\n\nWIRS Sustaining,\nProgrammer, Luxoft\nPhone: (495) 967-80-30 (ext. 3367)\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE833": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04O\\x00Q\\x01\\x10\"O\\x01\\x10\"O\\t6\\x00\\x0b\\x00\\x0b\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf7\\xf9@@@'", "ispf": {"version": "04.79", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T09:36:51", "lines": 11, "newlines": 11, "modlines": 0, "user": "CBT-479"}, "text": "//***FILE 833 is from Alexander I. Vasilenko and contains a         *   FILE 833\n//*           facility to save labels when you look at COBOL        *   FILE 833\n//*           programs under ISPF.  If you analyze COBOL programs   *   FILE 833\n//*           a lot, this is a very handy facility.                 *   FILE 833\n//*                                                                 *   FILE 833\n//*           email: Alexander.I.Vasilenko@boeing.com               *   FILE 833\n//*                  Ali_vas@mail.ru                                *   FILE 833\n//*                                                                 *   FILE 833\n//*           See the screen shot (member SCRSHOT1) by downloading  *   FILE 833\n//*           the .png image to a PC in BINARY.                     *   FILE 833\n//*                                                                 *   FILE 833\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ISRTSO": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x08\\x01\\x10\\x13\\x9f\\x01\\x10\"O\\t\\x13\\x01c\\x01<\\x00\\x00\\xc1\\xd3\\xc9\\xe5\\xc1\\xe2@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2010-05-19T00:00:00", "modifydate": "2010-08-12T09:13:08", "lines": 355, "newlines": 316, "modlines": 0, "user": "ALIVAS"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "LABELS": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x10\"O\\x01\\x10\"O\\t\\x00\\x01\\xb4\\x01\\xb4\\x00\\x00\\xc1\\xd3\\xc9\\xe5\\xc1\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T09:00:00", "lines": 436, "newlines": 436, "modlines": 0, "user": "ALIVAS"}, "text": "/* REXX                                                              */\n/*\n   This service is designed to help you remember meaning of\n   ISPF labels.\n   Read LAIDUG file to learn more about this service.\n\n   Call Format:\n\n   LABELS ( |RESTORE|QUIT|CLOSE|DELETE)\n\n   blank   - merging of labels will be performed.\n   RESTORE - if you like to restore labels from table.\n             Do not use this option when table is already opened.\n   QUIT    - to finish with table without saving.\n   CLOSE   - to save current table and finish with it.\n   DELETE  - to delete old version of table.\n\n   Author: Alexander I. Vasilenko,\n           LUXOFT, Moscow.\n           e-mail: ali_vas@mail.ru\n                   Alexander.I.Vasilenko@boeing.com\n*/\nAddress ISREDIT\n'MACRO (PARMS) NOPROCESS'\n/*Address ISPEXEC CONTROL ERRORS RETURN*/\nAddress ISPEXEC CONTROL ERRORS RETURN\n  CALL ON ERROR\n/*                                                                   */\nupper parms\nFparm = subword(parms,1,1)\nif Fparm = '?' then\n  call Show_help\n\n/*       Main line                                                   */\nCmdList   = 'RESTORE QUIT CLOSE DELETE'\nLabel     = ''\nBlank     = '.'\nLine      = 0\nPanel_end = 0\nlversion  = 'V 1.0'  /* current version of this tools */\nUserName  = UserID()\nDSTable   = UserName\".LAID.TABLES\"\nFileLabeled = 0 /* means that no one label was found in the file */\nPurgeNeeded = 0    /* does purge process is needed     */\n/*                 */\nif words(parms) > 0 then do\n  if pos(Fparm,CmdList) = 0 then\n    call Show_help\nend\nAddress ISREDIT\n\"(MYSTATE) = USER_STATE\"  /* remember user status */\n\"(STYPE) = SESSION\"     /* get know session type view or edit */\n\"(CMEM) = MEMBER\"       /* get know edited member name */\n\"(LASTLN) = LINENUM .ZLAST\" /* num of lines in file */\nAddress ISPEXEC\n\"VGET ZSCRMAXD\"\nif ZSCRMAXD > 40 then\n  Lscr = 'LAID000'\nelse\n  Lscr = 'LAID00S'\nCall CheckDSTable\n  /* check if at least one label exist in file */\nAddress ISREDIT \"LOCATE FIRST LABEL\"\nif RC = 0 then do\n  FileLabeled = 1\nend\nelse\n  FileLabeled = 0\nAddress ISREDIT \"USER_STATE = (MYSTATE)\"\n\nCall ParseParms\n\"TBSORT \"CMEM\" FIELDS(LINE,N,A)\"\n\"CONTROL DISPLAY LOCK\"\n\"ADDPOP ROW(05) COLUMN(8)\"\n\"TBTOP \"CMEM\nif PurgeNeeded then\n  call PurgeTable  /* delete all strings with DEL = D */\n\ndo while \u00acPanel_end\n  call DisplayPanel\nend\n\"REMPOP\"\n\nAddress ISPEXEC \"LIBDEF LAIDTBL\"\nif RC > 0 then call AllocError LIBDEF\nexit 0\n/*                    */\nShow_help:\neoh = 0\ndo line = 3 until eoh\n  if substr(sourceline(line + 1),1,2) = '*/' then\n    eoh = 1\n  say sourceline(line)\nend\nexit 0\n\nDisplayPanel:\n\"TBDISPL \"CMEM\" PANEL(\"Lscr\")\"\nif RC = 8 then\n  Panel_end = 1\nselect\n  when zcmd = 'QUIT' then do\n    call CloseTable 'END'\n  end\n  when zcmd = 'CLOSE' then do\n    call CloseTable 'CLOSE' 'LIBRARY(LAIDTBL)'\n  end\n  when cmd = 'E' then do\n    \"TBMOD \"CMEM\" SAVE(TLBL COMMENT)\"\n  end\n  when cmd = 'D' then do\n    \"TBSCAN \"CMEM\" ARGLIST(LINE) CONDLIST(EQ)\"\n    \"TBDELETE \"CMEM\n    Address ISREDIT \"RES LAB \"Tlbl Tlbl   /* remove label from file */\n  end\n  when cmd = 'L' then do\n    Label = Tlbl\n    Address ISREDIT 'LOCATE 'Label\n    Panel_end = 1\n  end\n  when pfkpresd = 'PF03' then do\n    Panel_end = 1\n  end\n  otherwise\nend\ncmd  = ''\nzcmd = ''\nRCode = 0\nreturn\n\nPrepareStat:\nTLpanel_end = 0\n\"CONTROL DISPLAY LOCK\"\n\"ADDPOP ROW(10) COLUMN(10)\"\ndo until TLpanel_end\n  call DisplayStat\nend\nreturn\n\nDisplayStat:\n\"DISPLAY PANEL(LAIDTL0)\"\nselect\n  when cmd = 'D' then do /* we want to delete old table */\n    cmd = ''\n    \"TBEND \"CMEM\n    \"TBERASE \"CMEM\" LIBRARY(LAIDTBL)\"\n    TLpanel_end = 1\n    exit\n  end\n  when cmd = 'S' then do /* applaing old table to edited file */\n    cmd = ''\n    TLpanel_end = 1\n    return\n  end\n  when pfkpresd = 'PF03' then do\n    cmd = ''\n    TLpanel_end = 1\n  end\n  otherwise\n    cmd = ''\nend\nreturn\n\nCheckDSTable:\n/* Check if user table data set exist */\nx = LISTDSI(\"'\"DSTable\"'\")\nif x > 4 then do\n  Address TSO \"ALLOCATE FI(DINAM) DA('\"DSTable\"') NEW DSORG(PO)\",\n              \"LRECL(80) BLKSIZE(8000) RECFM(F,B) DSNTYPE(LIBRARY)\",\n              \"SPACE(10,30) TRACKS\"\n  if RC = 0 then\n    Address TSO \"FREE FI(DINAM)\"\n  else\n    call AllocError ALLOC\nend\nAddress ISPEXEC \"LIBDEF LAIDTBL DATASET ID('\"DSTable\"') STACK\"\nif RC > 0 then call AllocError LIBDEF\ncall GetStat\nreturn\n\nGetStat:\n\"TBSTATS \"CMEM\" CDATE4D(CRDATE) UDATE4D(UPDATE) CTIME(CRTIME)\",\n              \"UTIME(UPTIME) STATUS1(ST1) STATUS2(ST2) STATUS3(ST3)\",\n              \"LIBRARY(LAIDTBL)\"\nif (ST2 = 1) then do                 /* table is not opend */\n  if (ST1 = 1) then do                   /* table exist in lib */\n    \"TBOPEN \"CMEM\" WRITE LIBRARY(LAIDTBL)\"\n  end\n  else do\n    \"TBCREATE \"CMEM\" WRITE KEYS(LINE TLBL) NAMES(DEL COMMENT) REPLACE\"\n    if RC > 4 then call Abend TBCREATE\n  end\nend\nreturn\n\nCloseTable:\narg op trg /* op may be END, CLOSE or ERASE */\nAddress ISPEXEC \"TB\"||op CMEM trg\nAddress ISPEXEC \"LIBDEF LAIDTBL\"\nif RC > 0 then call AllocError LIBDEF\ncall OperWarn\nexit 0\n\nRestoreLabels:\n/* Tlbl - label is got from table */\nif ST2 = 1 then do  /* table is not open in this logical screen */\n  call GetStat  /* to open table if it is not opend yet */\nend\ndo Line = 1 to LastLn\n  \"TBTOP \"CMEM\n  \"TBSCAN \"CMEM\" ARGLIST(LINE) CONDLIST(EQ)\"\n  if RC = 0 then\n    Address ISREDIT \"LABEL \"line\" = \"Tlbl 0 /* set label */\nend\nreturn\n\nMergeLabels:\ndo xLine = 1 to LastLn\n  Address ISREDIT '(XLAB,VAR2) = LABEL 'xLine /* ask label */\n  call FindLine xLine\n  if LineExist then do\n    if iLab \u00ac= xLab then do\n      if xLab \u00ac= '' then do\n/* We must change old label to new one. But before we must mark    */\n/* to discard new label from the table if it exist.                */\n/* We must also discard this line with old label.                  */\n        Del = 'D'\n        \"TBMOD \"CMEM            /*  mark line to delete */\n        PurgeNeeded = 1\n        call FindLabel xLab\n        if LabelExist then do\n          Del = 'D'\n          \"TBMOD \"CMEM            /*  mark line to delete */\n          iComment = aComment\n        end\n/* Add new label */\n        Del = ''\n        Tlbl = xLab\n        Line = iLine\n        Comment = iComment      /* use old comment */\n        \"TBADD \"CMEM\" SAVE(D COMMENT)\"\n      end\n      else do\n/* if we have deleted label from file, it must be deleted from table */\n/* it will occurs only if ST2 > 1                                    */\n        if ST2 > 1 then do\n          Del = 'D'\n          \"TBMOD \"CMEM             /* mark line to delete */\n          PurgeNeeded = 1\n        end\n      end\n    end\n  end\n  else do  /* new label is found in the file */\n    if xLab \u00ac= '' then do\n      Comment = ''      /* new label has not comment */\n      call FindLabel xLab\n      if LabelExist then do\n        Del = 'D'\n        \"TBMOD \"CMEM            /*  mark line to delete */\n        PurgeNeeded = 1\n        Comment = aComment\n      end\n      Del = ''\n      Tlbl = xLab\n      Line = xLine\n      \"TBADD \"CMEM\" SAVE(D COMMENT)\"\n    end\n  end\nend\nreturn\n\nFindLine:\narg Line\n\"TBTOP \"CMEM\n\"TBSCAN \"CMEM\" ARGLIST(LINE) CONDLIST(EQ)\"\nif RC = 8 then do /* this line does not exist in the table */\n  LineExist = 0\n  iComment = ''\n  iLab = ''\nend\nelse do /* if line in the table exist (so label exist too) */\n  LineExist = 1\n  iLine = Line\n  iLab = Tlbl\n  iComment = Comment\nend\nreturn\n\nFindLabel:\narg Tlbl\n\"TBTOP \"CMEM\n\"TBSCAN \"CMEM\" ARGLIST(TLBL) CONDLIST(EQ)\"\nif RC = 8 then do /* this label does not exist in the table */\n  LabelExist = 0\n  aComment = ''\n  aLab = ''\nend\nelse do\n  LabelExist = 1\n  aLine = Line\n  aComment = Comment /* save comment */\n  aLab = Tlbl\nend\nreturn\n\nParseParms:\nupper Parms\nselect\n  when parms = '' then do\n    if ST1 = 1 then do\n      if ST2 = 1 then do\n        call PrepareStat\n        Call MergeLabels\n        Call PurgeTable\n        Call RestoreLabels\n      end\n      else do\n        Call MergeLabels\n        if PurgeNeeded then do\n          Call PurgeTable\n          Call RestoreLabels\n        end\n      end\n    end\n    else do /* if a new table */\n      if FileLabeled then\n        Call MergeLabels\n      else\n        Call LabelError\n    end\n  end\n  when parms = 'RESTORE' then do\n    if ST1 = 1 then do\n      Call RestoreLabels\n    end\n    else\n      Call TableError\n  end\n  when Fparm = 'CLOSE' then do\n    if FileLabeled then\n      call CloseTable 'CLOSE' 'LIBRARY(LAIDTBL)'\n    else\n      Call Label2Error\n  end\n  when Fparm = 'DELETE' then do\n    if ST1 = 1 then do\n      Address ISPEXEC \"TBEND \"CMEM\n      call CloseTable 'ERASE' 'LIBRARY(LAIDTBL)'\n    end\n    else\n      Call TableError\n  end\n  when Fparm = 'QUIT'   then do\n    call CloseTable 'END'\n  end\n  otherwise  /* parm error */\n    call ParmError\nend\nreturn\n\nPurgeTable:\n\"TBTOP \"CMEM\nPurged = 0\nDel  = 'D'\ndo until Purged\n  \"TBSCAN \"CMEM\" ARGLIST(DEL) CONDLIST(EQ)\"\n  if RC = 8 then do\n    Purged = 1\n    iterate\n  end\n  \"TBDELETE \"CMEM\nend\nPurgeNeeded = 0\nreturn\n\nParmError:\nZEDSMSG = \"Parameters.\"\nZEDLMSG = \"Incorrect parameter strins was entered.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nLabelError:\nZEDSMSG = \"Labels not found.\"\nZEDLMSG = \"No one label was found in the file and table does not exist.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nLabel2Error:\nZEDSMSG = \"Labels not found.\"\nZEDLMSG = \"No one label was found in the file.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nTableError:\nZEDSMSG = \"Table not found.\"\nZEDLMSG = \"Table does not exist in \"DSTable\".\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nNoAvalError:\nZEDSMSG = \"Not available to WRITE.\"\nZEDLMSG = \"It is possible you perform RESTORE over restored table.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nOperWarn:\nZEDSMSG = op \"performed.\"\nZEDLMSG = \"Table \"CMEM\" in not accessible more.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nAllocError:\narg opt\nsay \"Error occurs during \"opt DSTable\" data set.\"\nexit\n\nAbend:\narg text\nsay 'ABEND occurs with 'text' service.'\nexit\n\nERROR:\ntrace o\nif RC < 9 then do\n  return RC\nend\n  say 'Error in string - 'SIGL', RC - 'RC\n  say sourceline(SIGL)\n  Address ISPEXEC \"LIBDEF LAIDTBL\"\nexit RC\nFAILURE:\ntrace o\nsay 'Failure occurs.'\n  Address ISPEXEC \"LIBDEF LAIDTBL\"\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LABELS1": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x10\"O\\x01\\x10\"O\\t\\x00\\x01\\xb6\\x01\\xb6\\x00\\x00\\xc1\\xd3\\xc9\\xe5\\xc1\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T09:00:00", "lines": 438, "newlines": 438, "modlines": 0, "user": "ALIVAS"}, "text": "/* REXX                                                              */\n/*\n   This service is designed to help you remember meaning of\n   ISPF labels.\n   Read LAIDUG file to learn more about this service.\n\n   Call Format:\n\n   LABELS ( |RESTORE|QUIT|CLOSE|DELETE)\n\n   blank   - merging of labels will be performed.\n   RESTORE - if you like to restore labels from table.\n             Do not use this option when table is already opened.\n   QUIT    - to finish with table without saving.\n   CLOSE   - to save current table and finish with it.\n   DELETE  - to delete old version of table.\n\n   Author: Alexander I. Vasilenko,\n           LUXOFT, Moscow.\n           e-mail: ali_vas@mail.ru\n                   Alexander.I.Vasilenko@boeing.com\n*/\n/* Change log.\n   07/16/2010 If we leave EDIT, table still remains in virtual storage.\n              So we can use it after EDIT is open again. It work now.\n*/\nAddress ISREDIT\n'MACRO (PARMS) NOPROCESS'\n/*Address ISPEXEC CONTROL ERRORS RETURN*/\nAddress ISPEXEC CONTROL ERRORS RETURN\n  CALL ON ERROR\n/*                                                                   */\nupper parms\nFparm = subword(parms,1,1)\nif Fparm = '?' then\n  call Show_help\n\n/*       Main line                                                   */\nCmdList   = 'RESTORE QUIT CLOSE DELETE'\nLabel     = ''\nBlank     = '.'\nLine      = 0\nPanel_end = 0\nlversion  = 'V 1.0'  /* current version of this tools */\nUserName  = UserID()\nDSTable   = UserName\".LAID.TABLES\"\nFileLabeled = 0 /* means that no one label was found in the file */\nPurgeNeeded = 0    /* does purge process is needed     */\n/*                 */\nif words(parms) > 0 then do\n  if pos(Fparm,CmdList) = 0 then\n    call Show_help\nend\nAddress ISREDIT\n\"(MYSTATE) = USER_STATE\"  /* remember user status */\n\"(STYPE) = SESSION\"     /* get know session type view or edit */\n\"(CMEM) = MEMBER\"       /* get know edited member name */\n\"(LASTLN) = LINENUM .ZLAST\" /* num of lines in file */\nAddress ISPEXEC\n\"VGET ZSCRMAXD\"\nif ZSCRMAXD > 40 then\n  Lscr = 'LAID000'\nelse\n  Lscr = 'LAID00S'\nCall CheckDSTable\n  /* check if at least one label exist in file */\nAddress ISREDIT \"LOCATE FIRST LABEL\"\nif RC = 0 then do\n  FileLabeled = 1\nend\nelse\n  FileLabeled = 0\nAddress ISREDIT \"USER_STATE = (MYSTATE)\"\n\nCall ParseParms\n\"TBSORT \"CMEM\" FIELDS(LINE,N,A)\"\n\"CONTROL DISPLAY LOCK\"\n\"ADDPOP ROW(05) COLUMN(8)\"\n\"TBTOP \"CMEM\nif PurgeNeeded then\n  call PurgeTable  /* delete all strings with DEL = D */\n\ndo while \u00acPanel_end\n  call DisplayPanel\nend\n\"REMPOP\"\n\nAddress ISPEXEC \"LIBDEF LAIDTBL\"\nif RC > 0 then call AllocError LIBDEF\nexit 0\n/*                    */\nShow_help:\neoh = 0\ndo line = 3 until eoh\n  if substr(sourceline(line + 1),1,2) = '*/' then\n    eoh = 1\n  say sourceline(line)\nend\nexit 0\n\nDisplayPanel:\n\"TBDISPL \"CMEM\" PANEL(\"Lscr\")\"\nif RC = 8 then\n  Panel_end = 1\nselect\n  when zcmd = 'QUIT' then do\n    call CloseTable 'END'\n  end\n  when zcmd = 'CLOSE' then do\n    call CloseTable 'CLOSE' 'LIBRARY(LAIDTBL)'\n  end\n  when cmd = 'E' then do\n    \"TBMOD \"CMEM\" SAVE(TLBL COMMENT)\"\n  end\n  when cmd = 'D' then do\n    \"TBSCAN \"CMEM\" ARGLIST(LINE) CONDLIST(EQ)\"\n    \"TBDELETE \"CMEM\n    Address ISREDIT \"RES LAB \"Tlbl Tlbl   /* remove label from file */\n  end\n  when cmd = 'L' then do\n    Label = Tlbl\n    Address ISREDIT 'LOCATE 'Label\n    Panel_end = 1\n  end\n  when pfkpresd = 'PF03' then do\n    Panel_end = 1\n  end\n  otherwise\nend\ncmd  = ''\nzcmd = ''\nRCode = 0\nreturn\n\nPrepareStat:\nTLpanel_end = 0\n\"CONTROL DISPLAY LOCK\"\n\"ADDPOP ROW(10) COLUMN(10)\"\ndo until TLpanel_end\n  call DisplayStat\nend\nreturn\n\nDisplayStat:\n\"DISPLAY PANEL(LAIDTL0)\"\nselect\n  when cmd = 'D' then do /* we want to delete old table */\n    cmd = ''\n    \"TBEND \"CMEM\n    \"TBERASE \"CMEM\" LIBRARY(LAIDTBL)\"\n    TLpanel_end = 1\n    exit\n  end\n  when cmd = 'S' then do /* applaing old table to edited file */\n    cmd = ''\n    TLpanel_end = 1\n    return\n  end\n  when pfkpresd = 'PF03' then do\n    cmd = ''\n    TLpanel_end = 1\n  end\n  otherwise\n    cmd = ''\nend\nreturn\n\nCheckDSTable:\n/* Check if user table data set exist */\nx = LISTDSI(\"'\"DSTable\"'\")\nif x > 4 then do\n  Address TSO \"ALLOCATE FI(DINAM) DA('\"DSTable\"') NEW DSORG(PO)\",\n              \"LRECL(80) BLKSIZE(8000) RECFM(F,B) DSNTYPE(LIBRARY)\",\n              \"SPACE(10,30) TRACKS\"\n  if RC = 0 then\n    Address TSO \"FREE FI(DINAM)\"\n  else\n    call AllocError ALLOC\nend\nAddress ISPEXEC \"LIBDEF LAIDTBL DATASET ID('\"DSTable\"') STACK\"\nif RC > 0 then call AllocError LIBDEF\ncall GetStat\nreturn\n\nGetStat:\n\"TBSTATS \"CMEM\" CDATE4D(CRDATE) UDATE4D(UPDATE) CTIME(CRTIME)\",\n              \"UTIME(UPTIME) STATUS1(ST1) STATUS2(ST2) STATUS3(ST3)\",\n              \"LIBRARY(LAIDTBL)\"\nif (ST2 = 1) then do                 /* table is not opend */\n  if (ST1 = 1) then do                   /* table exist in lib */\n    \"TBOPEN \"CMEM\" WRITE LIBRARY(LAIDTBL)\"\n  end\n  else do\n    \"TBCREATE \"CMEM\" WRITE KEYS(LINE TLBL) NAMES(DEL COMMENT) REPLACE\"\n    if RC > 4 then call Abend TBCREATE\n  end\nend\nreturn\n\nCloseTable:\narg op trg /* op may be END, CLOSE or ERASE */\nAddress ISPEXEC \"TB\"||op CMEM trg\nAddress ISPEXEC \"LIBDEF LAIDTBL\"\nif RC > 0 then call AllocError LIBDEF\ncall OperWarn\nexit 0\n\nRestoreLabels:\n/* Tlbl - label is got from table */\nif ST2 = 1 then do  /* table is not open in this logical screen */\n  call GetStat  /* to open table if it is not opend yet */\nend\ndo Line = 1 to LastLn\n  \"TBTOP \"CMEM\n  \"TBSCAN \"CMEM\" ARGLIST(LINE) CONDLIST(EQ)\"\n  if RC = 0 then\n    Address ISREDIT \"LABEL \"line\" = \"Tlbl 0 /* set label */\nend\nreturn\n\nMergeLabels:\ndo xLine = 1 to LastLn\n  Address ISREDIT '(XLAB,VAR2) = LABEL 'xLine /* ask label */\n  call FindLine xLine\n  if LineExist then do\n    if iLab \u00ac= xLab then do\n      if xLab \u00ac= '' then do\n/* We must change old label to new one. But before we must mark    */\n/* to discard new label from the table if it exist.                */\n/* We must also discard this line with old label.                  */\n        Del = 'D'\n        \"TBMOD \"CMEM            /*  mark line to delete */\n        PurgeNeeded = 1\n        call FindLabel xLab\n        if LabelExist then do\n          Del = 'D'\n          \"TBMOD \"CMEM            /*  mark line to delete */\n          iComment = aComment\n        end\n/* Add new label */\n        Del = ''\n        Tlbl = xLab\n        Line = iLine\n        Comment = iComment      /* use old comment */\n        \"TBADD \"CMEM\" SAVE(D COMMENT)\"\n      end\n      else do\n/* if we have deleted label from file, it must be deleted from table */\n/* it will occurs only if table is opend (ST2 > 1)                   */\n      end\n    end\n  end\n  else do  /* new label is found in the file */\n    if xLab \u00ac= '' then do\n      Comment = ''      /* new label has not comment */\n      call FindLabel xLab\n      if LabelExist then do\n        Del = 'D'\n        \"TBMOD \"CMEM            /*  mark line to delete */\n        PurgeNeeded = 1\n        Comment = aComment\n      end\n      Del = ''\n      Tlbl = xLab\n      Line = xLine\n      \"TBADD \"CMEM\" SAVE(D COMMENT)\"\n    end\n  end\nend\nreturn\n\nFindLine:\narg Line\n\"TBTOP \"CMEM\n\"TBSCAN \"CMEM\" ARGLIST(LINE) CONDLIST(EQ)\"\nif RC = 8 then do /* this line does not exist in the table */\n  LineExist = 0\n  iComment = ''\n  iLab = ''\nend\nelse do /* if line in the table exist (so label exist too) */\n  LineExist = 1\n  iLine = Line\n  iLab = Tlbl\n  iComment = Comment\nend\nreturn\n\nFindLabel:\narg Tlbl\n\"TBTOP \"CMEM\n\"TBSCAN \"CMEM\" ARGLIST(TLBL) CONDLIST(EQ)\"\nif RC = 8 then do /* this label does not exist in the table */\n  LabelExist = 0\n  aComment = ''\n  aLab = ''\nend\nelse do\n  LabelExist = 1\n  aLine = Line\n  aComment = Comment /* save comment */\n  aLab = Tlbl\nend\nreturn\n\nParseParms:\nupper Parms\nselect\n  when parms = '' then do\n    if ST1 = 1 then do /* table exist in library */\n      if ST2 = 1 then do\n        call PrepareStat\n        Call MergeLabels\n        Call PurgeTable\n        Call RestoreLabels\n      end\n      else do\n        Call MergeLabels\n        if PurgeNeeded then do\n          Call PurgeTable\n        end\n        Call RestoreLabels\n      end\n    end\n    else do /* table was not found in library */\n      if FileLabeled | (ST2 > 1) then do\n        Call MergeLabels\n        Call PurgeTable\n        Call RestoreLabels\n      end\n      else\n        Call LabelError\n    end\n  end\n  when parms = 'RESTORE' then do\n    if ST1 = 1 then do\n      Call RestoreLabels\n    end\n    else\n      Call TableError\n  end\n  when Fparm = 'CLOSE' then do\n    if FileLabeled then\n      call CloseTable 'CLOSE' 'LIBRARY(LAIDTBL)'\n    else\n      Call Label2Error\n  end\n  when Fparm = 'DELETE' then do\n    if ST1 = 1 then do\n      Address ISPEXEC \"TBEND \"CMEM\n      call CloseTable 'ERASE' 'LIBRARY(LAIDTBL)'\n    end\n    else\n      Call TableError\n  end\n  when Fparm = 'QUIT'   then do\n    call CloseTable 'END'\n  end\n  otherwise  /* parm error */\n    call ParmError\nend\nreturn\n\nPurgeTable:\n\"TBTOP \"CMEM\nPurged = 0\nDel  = 'D'\ndo until Purged\n  \"TBSCAN \"CMEM\" ARGLIST(DEL) CONDLIST(EQ)\"\n  if RC = 8 then do\n    Purged = 1\n    iterate\n  end\n  \"TBDELETE \"CMEM\nend\nPurgeNeeded = 0\nreturn\n\nParmError:\nZEDSMSG = \"Parameters.\"\nZEDLMSG = \"Incorrect parameter strins was entered.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nLabelError:\nZEDSMSG = \"Labels not found.\"\nZEDLMSG = \"No one label was found in the file and table does not exist.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nLabel2Error:\nZEDSMSG = \"Labels not found.\"\nZEDLMSG = \"No one label was found in the file.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nTableError:\nZEDSMSG = \"Table not found.\"\nZEDLMSG = \"Table does not exist in \"DSTable\".\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nNoAvalError:\nZEDSMSG = \"Not available to WRITE.\"\nZEDLMSG = \"It is possible you perform RESTORE over restored table.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nOperWarn:\nZEDSMSG = op \"performed.\"\nZEDLMSG = \"Table \"CMEM\" in not accessible more.\"\nAddress ISPEXEC \"SETMSG MSG(ISRZ001)\"\nexit\n\nAllocError:\narg opt\nsay \"Error occurs during \"opt DSTable\" data set.\"\nexit\n\nAbend:\narg text\nsay 'ABEND occurs with 'text' service.'\nexit\n\nERROR:\ntrace o\nif RC < 9 then do\n  return RC\nend\n  say 'Error in string - 'SIGL', RC - 'RC\n  say sourceline(SIGL)\n  Address ISPEXEC \"LIBDEF LAIDTBL\"\nexit RC\nFAILURE:\ntrace o\nsay 'Failure occurs.'\n  Address ISPEXEC \"LIBDEF LAIDTBL\"\nexit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LAIDTL0": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00)\\x01\\x10\\x15\\x9f\\x01\\x10\\x19O\\x064\\x00\\x16\\x00\\x16\\x00\\x00\\xc1\\xd3\\xc9\\xe5\\xc1\\xe2@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2010-06-08T00:00:00", "modifydate": "2010-07-13T06:34:29", "lines": 22, "newlines": 22, "modlines": 0, "user": "ALIVAS"}, "text": ")ATTR\n$ TYPE(INPUT)  INTENS(LOW)  HILITE(USCORE) CAPS(ON)\n{ TYPE(INPUT)  INTENS(LOW)  HILITE(USCORE) CAPS(OFF) COLOR(YELLOW)\n# TYPE(TEXT)   INTENS(LOW)  SKIP(ON)\n\u00ac TYPE(OUTPUT) INTENS(LOW)  COLOR(YELLOW)\n} TYPE(TEXT)   INTENS(LOW)  COLOR(GREEN)\n@ TYPE(OUTPUT) INTENS(HIGH)  COLOR(GREEN)\n* TYPE(OUTPUT) INTENS(LOW)  COLOR(TURQ)\n)BODY EXPAND(!!) CMD(zcmd) WINDOW(55,10)\n%--!-! All Tables List !-!\n} Use%D}to delete. Use%A}to accept.\n%Command ===>_zcmd                              #\n# %Name    %Created   %Time    %Updated   %Time\n$z@Z       *Z         *Z       *Z         *Z\n)INIT\n &zwinttl='LUXOFT Labels Aid. &lversion'\n .ZVARS = '(cmd Cmem CrDate CrTime UpDate UpTime)'\n)REINIT\n)PROC\n&pfkpresd = .PFKEY\n)HELP\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LAIDUG": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x10\"O\\x01\\x10\"O\\t\\x00\\x00C\\x00C\\x00\\x00\\xc1\\xd3\\xc9\\xe5\\xc1\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T09:00:00", "lines": 67, "newlines": 67, "modlines": 0, "user": "ALIVAS"}, "text": "  If you run LABELS macro at the first time, new table will be\n  created in library you_user_id.LAID.TABLES. This table will have\n  the same name as file you currently edit. All labels and comments\n  for every label will be stored in this table.\n  The table remains in virtual storage until you perform QUIT or\n  CLOSE against it in any way. So if the table was not closed or\n  ended, you will call it in any time by performing LABELS without\n  parameters. In this case the table will be fetched from virtual\n  storage.\n  After QUIT or CLOSE is performed, you may read the table from\n  library using RESTORE parameter or choosing it on panel\n  'All Tables List' with 'S' line command.\n\n  Note 1.\n  If you like another name for tables library, correct DSTable\n  variable within the macro.\n\n  Next time you run LABELS macro you'll get panel 'All Tables List'\n  (LAIDTL0) if the table is not opend yet, or 'All Labels List'\n  (LAID000) if you already work with the table.\n\n  In panel 'All Tables List' you may choose existen table (line\n  command 'S') to apply labels from this table to your file. Or you\n  may delete (line command 'D') the table. If you press PF03 key, no\n  action will be performed.\n\n  In panel 'All Labels List' you may fulfill the next:\n    1. use 'L' line command to locate appropriate label in the file.\n    2. use 'D' line command to delete line from the table and discard\n       label from the file.\n    3. use 'E' line command to edit comment. You may issue only one\n       comment at a time.\n    4. use 'QUIT' primary commant to delete the table from virtual\n       storage. All changes will be discarded. You may perform this\n       through 'Menu.2'. Table will not be saved.\n\n    5. use 'CLOSE' primary command to save currently opened table and\n       finish with it.\n    6. if press PF03 no action will be performed.\n\n  You may call macro LABELS with some parameters.\n    1. RESTORE. You will mainly use this parameter at the beginning of\n       edit session to restore all labels previously saved. If you\n       like to restore labels during edit session after they were\n       changed, issue LABELS QUIT before to end discard current table.\n       Then type LABELS RESTORE to retrieve labels.\n       If new label exist in the file, it will be overriden by\n       label from the table. If new label has no corresponding record\n       in the table, it remains as is.\n    2. QUIT. Use this parameter to finish with current table without\n       saving. This parameter makes the same as Menu.2 in panel\n       'All Labels List' (LAID000).\n    3. CLOSE. Use this parameter if you like to save current table\n       in you tables library. It is equivalent of Menu.1 in panel\n       'All Labels List' (LAID000).\n    4. DELETE. This parameter will delete current table from your\n       tables library. It performs the same as line command 'D' in\n       panel 'All Tables List' (LAIDTL0).\n  If you call LABELS without parameters, it checks your tables\n    library. If table exist, you will see 'All Tables List' (LAIDTL0)\n    panel. As you will choose 'S', then merge occurs. If the macro\n    finds new label in the same line, then this label will accept\n    comment of old label from table. All lines without labels will be\n    labeled according records in the table. If new label exist in\n    any line and there is no corresponding record in the table, then\n    this label remains as is.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LAID00S": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x01\\x10\\x19o\\x01\\x10\\x19o#\\x00\\x00(\\x00(\\x00\\x00\\xc1\\xd3\\xc9\\xe5\\xc1\\xe2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-07-15T00:00:00", "modifydate": "2010-07-15T23:00:29", "lines": 40, "newlines": 40, "modlines": 0, "user": "ALIVAS"}, "text": ")ATTR\n 0B TYPE(AB)\n $ TYPE(INPUT)  INTENS(LOW)  HILITE(USCORE) CAPS(ON)\n { TYPE(INPUT)  INTENS(LOW)  HILITE(USCORE) CAPS(OFF) COLOR(YELLOW)\n # TYPE(TEXT)   INTENS(LOW)  SKIP(ON)\n \u00ac TYPE(OUTPUT) INTENS(LOW)  COLOR(YELLOW)\n } TYPE(TEXT)   INTENS(LOW)  COLOR(GREEN)\n @ TYPE(OUTPUT) INTENS(HIGH)  COLOR(GREEN)\n * TYPE(OUTPUT) INTENS(LOW)  COLOR(TURQ)\n)ABC DESC('Menu')\nPDC DESC('Save&&Exit')\nPDC DESC('Exit')\n)ABCINIT\n.ZVARS=ExitMODE\n)ABCPROC\nIF (&ExitMODE = '1')\n  &XFUNC = 'CLOSE'\nIF (&ExitMODE = '2')\n  &XFUNC = 'QUIT'\n)BODY EXPAND(!!) WINDOW(70,15)\n%--!-! All Labels List !-!\n\u000b Menu                                                    #\n%--!-!-\n} Use%L}to locate. Use%E}to edit comment.\n%Command ===>_z\n# %Label %Line % Comments\n)MODEL\n$z@TLbl  *Line  {Comment\n)INIT\n &zwinttl='LUXOFT Labels Aid. &lversion'\n .ZVARS = '(zcmd cmd)'\n)REINIT\n)PROC\n&EXITMODE = ''\n&pfkpresd = .PFKEY\nIF (&XFUNC = 'CLOSE' | &XFUNC = 'QUIT')\n  &zcmd = &XFUNC\n  &XFUNC = ''\n)HELP\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LAID000": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x06\\x01\\x10\\x16/\\x01\\x10\\x17?\\x042\\x00(\\x00\\x17\\x00\\x00\\xc1\\xd3\\xc9\\xe5\\xc1\\xe2@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2010-06-11T00:00:00", "modifydate": "2010-06-22T04:32:06", "lines": 40, "newlines": 23, "modlines": 0, "user": "ALIVAS"}, "text": ")ATTR\n 0B TYPE(AB)\n $ TYPE(INPUT)  INTENS(LOW)  HILITE(USCORE) CAPS(ON)\n { TYPE(INPUT)  INTENS(LOW)  HILITE(USCORE) CAPS(OFF) COLOR(YELLOW)\n # TYPE(TEXT)   INTENS(LOW)  SKIP(ON)\n \u00ac TYPE(OUTPUT) INTENS(LOW)  COLOR(YELLOW)\n } TYPE(TEXT)   INTENS(LOW)  COLOR(GREEN)\n @ TYPE(OUTPUT) INTENS(HIGH)  COLOR(GREEN)\n * TYPE(OUTPUT) INTENS(LOW)  COLOR(TURQ)\n)ABC DESC('Menu')\nPDC DESC('Save&&Exit')\nPDC DESC('Exit')\n)ABCINIT\n.ZVARS=ExitMODE\n)ABCPROC\nIF (&ExitMODE = '1')\n  &XFUNC = 'CLOSE'\nIF (&ExitMODE = '2')\n  &XFUNC = 'QUIT'\n)BODY EXPAND(!!) WINDOW(70,35)\n%--!-! All Labels List !-!\n\u000b Menu                                                    #\n%--!-!-\n} Use%L}to locate. Use%E}to edit comment.\n%Command ===>_z\n# %Label %Line % Comments\n)MODEL\n$z@TLbl  *Line  {Comment\n)INIT\n &zwinttl='LUXOFT Labels Aid. &lversion'\n .ZVARS = '(zcmd cmd)'\n)REINIT\n)PROC\n&EXITMODE = ''\n&pfkpresd = .PFKEY\nIF (&XFUNC = 'CLOSE' | &XFUNC = 'QUIT')\n  &zcmd = &XFUNC\n  &XFUNC = ''\n)HELP\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SCRSHOT1": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x10\"O\\x01\\x10\"O\\t\\x19\\x02\"\\x02\"\\x00\\x00\\xd7\\xd5\\xc7@@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T09:19:00", "lines": 546, "newlines": 546, "modlines": 0, "user": "PNG"}, "mimetype": "image/png", "datatype": "binary", "extension": ".png"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT833/FILE833.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT833", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}