./ ADD NAME=BUFDSECT 0100-80001-80001-1917-00013-00013-00000-METZMAC 01
         MACRO
         BUFDSECT
*                                                                     C
*  DESCRIPTION OF BSAM/BPAM I/O BUFFERS USED BY IEBUPDTX              C
*                                                                     C
BUFDSECT DSECT                                                        C
BUFSTAT  DS    0X                 BUFFER STATUS (I/O ACTIVE)          C
BUFCHAIN DS    A                  POINTER TO NEXT BUFFER              C
         READ  BUFDECB,SF,MF=L    DECB                                C
BUFDATA  DS    0F                 START OF DATA AREA                  C
BUFLEN   EQU   *-BUFDSECT         SIZE OF BUFFER PREFIX               C
*                                                                     C
         MEND
./ ADD NAME=FLAG     0100-80001-80001-1917-00097-00097-00000-METZMAC 01
         MACRO
&NAME    FLAG  &LST,&COMMENT,&TYPE=DS,&VALUE=,&INDEX=,&PREFIX=,&L=
.* HERB WEINER, 243 LANGMUIR LAB, CORNELL UNIVERSITY, ITHACA, NY 14850
         GBLA  &N1,&N2,&N3
         LCLA  &AL(8),&I,&J,&K
         LCLC  &HL(8),&TY
&HL(1)   SETC  '80'
&HL(2)   SETC  '40'
&HL(3)   SETC  '20'
&HL(4)   SETC  '10'
&HL(5)   SETC  '08'
&HL(6)   SETC  '04'
&HL(7)   SETC  '02'
&HL(8)   SETC  '01'
         AIF   (&N1 NE 0).L1
&N1      SETA  1
.L1      AIF   (&N2 NE 0 OR '&TYPE' NE 'EQU').L2
.L3      ANOP
&N2      SETA  &N2+1
$#LEN&HL(&N2) DS 0XL(X'&HL(&N2)')
         AIF   (&N2 LT 8).L3
&N2      SETA  1
.L2      AIF   ('&COMMENT' EQ '').NOCOM
         MNOTE *,&COMMENT
.NOCOM   AIF   ('&NAME' EQ '').NONAME
         AIF   ('&TYPE' EQ 'EQU').EQU
         AIF   (&N1 EQ 8 OR '&TYPE' EQ 'GEN').GEN
&NAME    DS    0XL(X'&HL(&N1)')
&N1      SETA  &N1+1
         MEXIT
.GEN     ANOP
&NAME    DC    XL(X'01')'00'
&N1      SETA  1
         MEXIT
.EQU     AIF   ('&VALUE' EQ '').L4
&N3      SETA  &VALUE
.L4      AIF   ('&INDEX' EQ '').L5
&N2      SETA  &INDEX
.L5      AIF   (&N2 LE 8).L6
&N2      SETA  1
&N3      SETA  &N3+1
.L6      ANOP
&NAME    EQU   $#LEN&HL(&N2)-$#LEN&HL(&N2)+&N3
&N2      SETA  &N2+1
         MEXIT
.NONAME  AIF   ('&LST' EQ '').NOLIST
&TY      SETC  'DS'
         AIF   ('&TYPE' NE 'EQU').L7
&TY      SETC  'EQU'
.L7      AIF   (N'&LST GT 1 OR '&TYPE' EQ 'EQU').L8
&TY      SETC  'GEN'
.L8      ANOP
&LST(1)  FLAG  TYPE=&TY,VALUE=&VALUE,INDEX=&INDEX
&I       SETA  2
.LOOP    AIF   (&I LT N'&LST OR '&TYPE' EQ 'EQU').L9
&TY      SETC  'GEN'
.L9      AIF   (&I GT N'&LST).LEN
&LST(&I) FLAG  TYPE=&TY
&I       SETA  &I+1
         AGO   .LOOP
.LEN     ANOP
&K       SETA  1
         AIF   ('&L' EQ '').PRE
&J       SETA  &L-(N'&LST+7)/8
         AIF   (&J EQ 0).PRE
         AIF   (&J LT 0).LENE
         DC    XL&J'00'
.LENL    AIF   ('&PREFIX' EQ '').MEND
&K       SETA  &K*256
&J       SETA  &J-1
         AIF   (&J GT 0).LENL
         AGO   .PRE
.LENE    MNOTE 4,'WARNING - LENGTH OF FLAGS EXCEEDS &L BYTES'
.PRE     AIF   ('&PREFIX' EQ '').MEND
&AL(1)   SETA  128
&AL(2)   SETA  64
&AL(3)   SETA  32
&AL(4)   SETA  16
&AL(5)   SETA  8
&AL(6)   SETA  4
&AL(7)   SETA  2
&AL(8)   SETA  1
&I       SETA  N'&LST
&J       SETA  &AL(&I-(&I-1)/8*8)*&K
&TY      SETC  '&PREFIX&LST(&I)'
&TY      EQU   &K
.PREL    AIF   (&I LE 1).MEND
&J       SETA  &J*2
&I       SETA  &I-1
&TY      SETC  '&PREFIX&LST(&I)'
&TY      EQU   &J
         AGO   .PREL
.NOLIST  AIF   ('&TYPE' EQ 'GEN').L10
         MNOTE 4,'WARNING - NO FLAGS SPECIFIED'
         MEXIT
.L10     AIF   (&N1 GT 1).GEN
.MEND    MEND
./ ADD NAME=GENDC    0100-80001-80001-1917-00018-00018-00000-METZMAC 01
         MACRO
&N       GENDC &PARM,&TYPE,&DEF,&MF
         AIF   ('&PARM' EQ '').DEF     SUPPLY DEFAULT IF PARM OMITTED
         AIF   ('&PARM'(1,1) EQ '(').ZERO   SUPPLY ZEROS FOR REG SPEC
&N       DC    &TYPE.(&PARM)
         MEXIT
.ZERO    AIF   (T'&MF EQ 'O').GZ
         MNOTE 4,'REGISTER NOTATION USED WITH MF=L'
.GZ      ANOP
&N       DC    &TYPE.(0)
         MEXIT
.DEF     AIF   (T'&DEF EQ 'O').ER1
&N       DC    &TYPE.(&DEF)
         MEXIT
.ER1     AIF   ('&MF' EQ 'L').GZ
         MNOTE 4,'OPERAND OMITTED.  ZERO USED INSTEAD'
         AGO   .GZ
         MEND
./ ADD NAME=GENST    0100-80001-80001-1917-00049-00049-00000-METZMAC 01
         MACRO
&N       GENST &LOC,&OFFSET,&PARM,&TYPE,&MF
         GBLB  &XPRST
         LCLC  &ST                STORE INSTRUCTION: '', 'C', OR 'H'
         LCLC  &TR,&PR
         AIF   ('&PARM' EQ '').EXIT    NO STORE FOR OMITTED PARM
&XPRST   SETB  1                  ASSUME WILL STORE
.*  DETERMINE TYPE OF STORE INSTRUCTION TO USE FROM &TYPE.
         AIF   ('&TYPE' EQ '4').STOK   ALREADY SET FOR FULLWORDS
&ST      SETC  'C'
         AIF   ('&TYPE' EQ '1').STOK   USE STC FOR BYTES
&ST      SETC  'H'                USE STH FOR HALF-WORDS
.STOK    ANOP
.*
         AIF   ('&PARM'(1,1) EQ '(').REG    TEST IF PARM IN A REG
         AIF   (T'&MF EQ 'O').EXIT          STD FORM SYMBOL FOR PARM
         AIF   ('&LOC'(1,1) EQ '(').TR1     TEST IF LIST ADDRESSED BY R
.*  TARGET ADDRESS IS A SYMBOL AND PARAMETER IS A SYMBOL
         AIF   ('&TYPE' NE '1').F1
&N       MVI   &LOC+&OFFSET,&PARM
         MEXIT
.F1      ANOP
&N       LA    15,&PARM
         ST&ST 15,&LOC+&OFFSET
         MEXIT
.*  TARGET ADDRESS VIA REGISTER, VALUE TO STORE A SYMBOL.
.TR1     AIF   ('&TYPE' NE '1').F2
&N       MVI   &OFFSET&LOC,&PARM
         MEXIT
.F2      ANOP
&N       LA    15,&PARM
&TR      SETC  '&LOC'(2,K'&LOC-2)  STRIP PARENS FROM REGISTER
         ST&ST 15,&OFFSET.(,&TR)
         MEXIT
.*
.REG     ANOP
&PR      SETC  '&PARM'(2,K'&PARM-2)    STRIP AWAY PARENTHESES
         AIF   ('&LOC'(1,1) EQ '(').TR2
.*  TARGET ADDRESSED VIA SYMBOL, VALUE TO STORE IN A REGISTER.
&N       ST&ST &PR,&LOC+&OFFSET
         MEXIT
.*  VALUE AND TARGET ADDRESS BOTH IN REGISTERS.
.TR2     ANOP
&TR      SETC  '&LOC'(2,K'&LOC-2)  STRIP PARENS FROM REGISTER
&N       ST&ST &PR,&OFFSET.(,&TR)
         MEXIT
.EXIT    ANOP
&XPRST   SETB  0                  INDICATE NO STORES GENERATED
         MEND
./ ADD NAME=IF       0100-80001-80001-1917-00225-00225-00000-METZMAC 01
         MACRO
&LABEL   IF    &EXP,&GOTO,&R=,&PROCESS=IF
         GBLA  &I,&IMAX,&L,&COUNT
         GBLB  &RDEST,&NOTFLG
         GBLC  &LAB(255),&LIST(255),&REG(255),&DEST
         LCLA  &J,&K,&N,&L1
         LCLB  &NULL,&ANDOR,&LPAREN,&RPAREN,&NOT,&OP
         LCLC  &LA,&C,&NAME
         AIF   ('&PROCESS' EQ 'AND').AND
         AIF   ('&PROCESS' EQ 'OR').OR
         AIF   ('&PROCESS' EQ 'TERM').TERM
         AIF   ('&PROCESS' EQ 'BRANCH').BRANCH
&DEST    SETC  '&GOTO'
&RDEST   SETB  ('&GOTO'(1,1) EQ '(' AND '&GOTO'(K'&GOTO,1) EQ ')')
         AIF   (NOT &RDEST).LDEST
         AIF   (K'&GOTO GT 10 OR K'&GOTO LT 3).ERROR2
&DEST    SETC  '&GOTO'(2,K'&GOTO-2)
.LDEST   ANOP
&NOTFLG  SETB  0
.*       PARSE THE EXPRESSION AND CHECK SYNTAX
&I       SETA  1
&K       SETA  1
&N       SETA  1
&NULL    SETB  1
&ANDOR   SETB  1
&RPAREN  SETB  1
.LOOP    AIF   (&I GT K'&EXP).EOF
&C       SETC  '&EXP'(&I,1)
&J       SETA  1
 AIF ('&C' EQ '$' OR '&C' EQ '#' OR '&C' EQ '@' OR '&C' GE 'A').NAME
&LIST(&K) SETC '&C'
         AIF   ('&C' EQ '+' OR '&C' EQ '.').L1
         AIF   ('&C' EQ '(').L2
         AIF   ('&C' EQ ')').L3
         AIF   ('&C' NE 'Â¬').ERROR
         AIF   (&NOT).ERROR
&ANDOR   SETB  1
&NULL    SETB  1
&RPAREN  SETB  1
&NOT     SETB  0
&OP      SETB  0
&LPAREN  SETB  0
         AGO   .NEXT
.L3      AIF   (&RPAREN).ERROR
&NOT     SETB  1
&LPAREN  SETB  1
&OP      SETB  1
&RPAREN  SETB  0
&ANDOR   SETB  0
&NULL    SETB  0
         AGO   .NEXT
.L2      AIF   (&LPAREN).ERROR
         AGO   .LX
.L1      AIF   (&ANDOR).ERROR
.LX      ANOP
&RPAREN  SETB  1
&ANDOR   SETB  1
&NULL    SETB  1
&NOT     SETB  0
&LPAREN  SETB  0
&OP      SETB  0
.NEXT    ANOP
&I       SETA  &I+1
&K       SETA  &K+1
         AGO   .LOOP
.NAME    ANOP
         AIF   (&I+&J GT K'&EXP).LAST
&C       SETC  '&EXP'(&I+&J,1)
 AIF ('&C' NE '$' AND '&C' NE '#' AND '&C' NE '@' AND '&C' LT 'A').LAST
&J       SETA  &J+1
         AGO   .NAME
.LAST    ANOP
         AIF   (&J LE 8).NOTLONG
&LIST(&K) SETC '&EXP'(&I,8)
         MNOTE 4,'NAME LONGER THAN 8 CHARS - TRUNCATED TO &LIST(&K)'
         AGO   .LONG
.NOTLONG ANOP
&LIST(&K) SETC '&EXP'(&I,&J)
.LONG    ANOP
&REG(&K) SETC  '&R(&N)'
&N       SETA  &N+1
         AIF   (&OP).ERROR
&LPAREN  SETB  1
&NOT     SETB  1
&OP      SETB  0
&RPAREN  SETB  0
&ANDOR   SETB  0
&NULL    SETB  0
&I       SETA  &I+&J
&K       SETA  &K+1
         AGO   .LOOP
.EOF     AIF   (&NULL).ERROR
&IMAX    SETA  &K-1
.*       SYNTAX IS VALID; GENERATE THE CODE
&I       SETA  1
         AIF   (&IMAX EQ 1).ONEOP
&L       SETA  1
&LAB(1)  SETC  ''
&LABEL   IF    0,1,PROCESS=OR
         IF    O,0,PROCESS=BRANCH
         AIF   ('&LAB(1)' EQ '').MEND
&LAB(1)  DS    0H
         MEXIT
.ONEOP   ANOP
&LA      SETC  'L'''
         AIF   ('&R' NE '').EQU
&LABEL   TM    &LIST(1),&LA&LIST(1)
         AGO   .BRANCHG
.EQU     ANOP
&LABEL   TM    &LIST(1).(&R(1)),&LA&LIST(1)
.BRANCHG IF    O,0,PROCESS=BRANCH
         MEXIT
.ERROR   MNOTE 8,'INVALID SYNTAX FIRST ARGUMENT CHARACTER NUMBER &I'
         MEXIT
.ERROR2  MNOTE 8,'INVALID SECOND ARGUMENT SPECIFIED'
         MEXIT
.OR      ANOP
&NAME    SETC  '&LABEL'
.*       SEE IF AN OR OPERATION OCCURS AT THE SAME PARENTHESIS LEVEL
.LOOPOR  ANOP
&K       SETA  &I
&N       SETA  0
.AGAINOR AIF   (&K GT &IMAX).NOOR
         AIF   ('&LIST(&K)' NE '(').OK1OR
&N       SETA  &N+1
         AGO   .ENDOR
.OK1OR   AIF   ('&LIST(&K)' NE ')').OK2OR
&N       SETA  &N-1
         AIF   (&N LT 0).NOOR
.ENDOR   ANOP
&K       SETA  &K+1
         AGO   .AGAINOR
.OK2OR   AIF   (&N NE 0).ENDOR
         AIF   ('&LIST(&K)' NE '+').ENDOR
.*       IF SO:
&L       SETA  &L+1
&LAB(&L) SETC  ''
&L1      SETA  &L
&NAME    IF    &EXP,&L1,PROCESS=AND
&I       SETA  &I+1
         IF    O,&EXP,PROCESS=BRANCH
&NAME    SETC  '&LAB(&L1)'
         AGO   .LOOPOR
.*       IF NOT:
.NOOR    ANOP
&NAME    IF    &EXP,&GOTO,PROCESS=AND
         MEXIT
.AND     ANOP
&NAME    SETC  '&LABEL'
.*       SEE IF AN AND OPERATION OCCURS AT THE SAME PARENTHESIS LEVEL
.*             BEFORE AN OR OPERATION OCCURS
.LOOPAN  ANOP
&K       SETA  &I
&N       SETA  0
.AGAINAN AIF   (&K GT &IMAX).NOAN
         AIF   ('&LIST(&K)' NE '(').OK1AN
&N       SETA  &N+1
         AGO   .ENDAN
.OK1AN   AIF   ('&LIST(&K)' NE ')').OK2AN
&N       SETA  &N-1
         AIF   (&N LT 0).NOAN
.ENDAN   ANOP
&K       SETA  &K+1
         AGO   .AGAINAN
.OK2AN   AIF   (&N NE 0).ENDAN
         AIF   ('&LIST(&K)' EQ '+').NOAN
         AIF   ('&LIST(&K)' NE '.').ENDAN
.*       IF SO:
&L       SETA  &L+1
&LAB(&L) SETC  ''
&L1      SETA  &L
&NAME    IF    &L1,&GOTO,PROCESS=TERM
&I       SETA  &I+1
         IF    Z,&GOTO,PROCESS=BRANCH
&NAME    SETC  '&LAB(&L1)'
         AGO   .LOOPAN
.*       IF NOT:
.NOAN    ANOP
&NAME    IF    &EXP,&GOTO,PROCESS=TERM
         MEXIT
.TERM    ANOP
&LA      SETC  'L'''
         AIF   ('&LIST(&I)' EQ 'Â¬').LNOT
         AIF   ('&LIST(&I)' EQ '(').LPAR
         AIF   ('&REG(&I)' NE '').LREG
&LABEL   TM    &LIST(&I),&LA&LIST(&I)
&I       SETA  &I+1
         MEXIT
.LREG    ANOP
&LABEL   TM    &LIST(&I).(&REG(&I)),&LA&LIST(&I)
&I       SETA  &I+1
         MEXIT
.LPAR    ANOP
&I       SETA  &I+1
&LABEL   IF    &EXP,&GOTO,PROCESS=OR
&I       SETA  &I+1
         MEXIT
.LNOT    ANOP
&I       SETA  &I+1
&LABEL   IF    &GOTO,&EXP,PROCESS=TERM
&NOTFLG  SETB  (NOT &NOTFLG)
         MEXIT
.*       GENERATE ALL BC AND BCR STATEMENTS (ONE PER CALL)
.BRANCH  AIF   (&NOTFLG).INVERT
         AIF   (&GOTO EQ 0).LD
         AIF   ('&LAB(&GOTO)' NE '').OKBR
&COUNT   SETA  &COUNT+1
&LAB(&GOTO) SETC '$#L&COUNT'
.OKBR    B&EXP &LAB(&GOTO)                                       80301
         MEXIT
.LD      AIF   (&RDEST).BCR
         B&EXP &DEST                                             80301
         MEXIT
.BCR     AIF   ('&EXP' EQ 'O').BO
         BZR   &DEST                                             82042
         MEXIT
.BO      BOR   &DEST                                             80301
         MEXIT
.INVERT  ANOP
&NOTFLG  SETB  0
         AIF   ('&EXP' EQ 'Z').BZ
         IF    Z,&GOTO,PROCESS=BRANCH
         MEXIT
.BZ      IF    O,&GOTO,PROCESS=BRANCH
.MEND    MEND
./ ADD NAME=INVERT   0100-80001-80001-1917-00015-00015-00000-METZMAC 01
         MACRO
&LABEL   INVERT &FLAG,&R=
         LCLA  &N
         LCLC  &LA
&LA      SETC  'L'''
         AIF   ('&R(1)' NE '').SPECIAL
&LABEL   XI    &FLAG(1),&LA&FLAG(1)
         AGO   .LOOP
.SPECIAL ANOP
&LABEL   XI    &FLAG(1).(&R(1)),&LA&FLAG(1)
.LOOP    AIF   (&N+1 GE N'&FLAG).MEND
         INVERT &FLAG(&N+2),R=&R(&N+2)
&N       SETA  &N+1
         AGO   .LOOP
.MEND    MEND
./ ADD NAME=LOCAL    0100-80001-80001-1917-00119-00119-00000-METZMAC 01
         MACRO
         LOCAL &TYPE=
         AIF   ('&TYPE' EQ 'CODE').CODE
LOCAL    DSECT
         AGO   .BOTHTYP
.CODE    ANOP
LOCAL    DS    0D
.BOTHTYP ANOP
NEXTLEV  DC    A(0)               POINTER TO NEXT UPDATE LEVEL
BUFADR   DC    A(0)               ADDRESS OF BSAM BUFFER
CTLBPL   DC    A(0)               BUFFER POOL LENGTH AND SUBPOOL      C
CTLBPA   DC    A(0)               BUFFER POOL ADDRESS (FOR FREEMAIN)  C
CURREC   DC    A(0)               POINTER TO CURRENT RECORD IN BUFFER
MAXREC   DC    A(0)               ADDRESS OF FIRST INVALID BYTE
LEVNAME  DC    CL8' '             DDNAME FOR THIS LEVEL
*
*  DEFINE SPACE FOR THE CONTROL AND OLD-MASTER BUFFER AREAS.
*
CTLAREA  DS    0CL106                                           JRE0036
CTLWYL   DC    CL8' '                                           JRE0036
         DC    C'  '                                            JRE0036
CTLID    DC    CL6' '             LEVEL ID NO ('.01.  ')
CTLBUF   DS    0CL80              CURRENT CARD IMAGE
CTLDATA  DC    CL72' '                                                V
CTLSQ    DC    CL8' '             SEQUENCE FIELD
         DC    CL2' '
CTLPSQ   DC    CL8' '             PREVIOUS SEQUENCE NUMBER
CTLOSQ   DC    CL8' '             ORIGINAL SEQUENCE NUMBER
*
OMAREA   DS    0CL106                                           JRE0036
OMWYL    DC    CL8' '                                           JRE0036
         DC    C'  '                                            JRE0036
OMID     DC    CL6' '
OMBUF    DS    0CL80              CURRENT CARD IMAGE
OMDATA   DC    CL72' '
OMSQ     DC    CL8' '             SEQUENCE FIELD
         DC    CL2' '
OMPSQ    DC    CL8' '             PREVIOUS SEQUENCE NUMBER
OMOSQ    DC    CL8' '             ORIGINAL SEQUENCE NUMBER
*
KSCANPTR DC    A(0)               KEYWORD ROUTINE START POINTER
CMDNUM   DC    F'0'               COMMAND SEQUENCE NUMBER
*
BLDLIST  DS    0CL80              BLDL WORK AREA
         DC    H'1,76'
BLDLNAME DC    CL8' '
BLDLTTR  DC    XL3'0'
         DC    XL2'0'
BLDLC    DC    XL1'0'
BLDLUD   DC    XL62'0'
*
*  FLAGS USED WHEN ANALYZING KEYWORDS
*  THESE FLAGS ARE RESET EACH TIME A MAJOR OR DETAIL CONTROL CARD
*  IS SCANNED.
*  CHANGES HERE MUST BE REFLECTED IN WTABLE, KEYFLAG, KEYTABLE,
*  FVALID, AND POSSIBLY IN POSTAB AND WORKF.
*
FKEYFLGS DS    0XL4               KEYWORDS 'ON' FLAGS
         FLAG  (FNAME,FLIST,FSSI,FVERSION,FNEWNAME)
         FLAG  (FSEQ1,FSEQ2,FINCR,FNEW1,FINSERT)
         FLAG  (FCODE,FCOL,FGANG)
         FLAG  (FSEQID,FCOL1,FCOL2,FFROMSEQ,FTOSEQ,FDDNAME)
*
*  THESE FLAGS ARE RESET EACH TIME A MAJOR CONTROL CARD IS SCANNED.
*
CMDFLGS  DS    0XL3               COMMANDS IN PROGRESS FLAGS
         FLAG  (ADD,CHANGE,DELETE,INSERT,NUMBER,INSERTX,XSEQ1,XSEQ2)
         FLAG  (SEQALL,LISTALL,SSISPEC,CTLWAIT,OMWAIT,OMEOF,           X
               USER,UINSERT)
         FLAG  (NOINSERT,INSERT1,ALIAS,LOCATE,COPY,GANG,MACRO)        A
*
*  THESE FLAGS ARE NOT RESET AS A GROUP EVER.
*
CTLFLAGS DS    0XL2
         FLAG  (CTLEOF,REALEOF,CTLPS,BUFEMPTY,SYSUT1,SYSIN,POSING,HELD)
         FLAG  (SYSLIB,TEMPUPD,CHAINED,WYLFORMT)               WYLJE821
*
*
         AIF   ('&TYPE' EQ 'CODE').CODE2
LEVDCB   DCB   DSORG=PO,MACRF=R,DDNAME=SYSIN,                  WYLJE821X
               BUFCB=0
         AGO   .CONTD
.CODE2   ANOP
LEVDCB   DCB   DSORG=PO,MACRF=R,DDNAME=SYSIN,                  WYLJE821X
               EXLST=CTLEXIT,EODAD=CTLEOD,SYNAD=CTLSYNAD,             AX
               BUFCB=0                                                C
.CONTD  ANOP
*
*
*  CURRENT KEYWORD VALUES (EBCDIC OR PACKED)
*
NAME     DC    CL8' '
SSI      DC    XL8'0'
SSICOUNT DC    F'0'
INCR     DC    PL5'0'
NEW1     DC    PL5'0'
XINCR    DC    PL5'0'
XNEW1    DC    PL5'0'
INCRA    DC    PL5'0'             RENUMBERING COUNTERS FOR COMPLETE   #
NEW1A    DC    PL5'0'             * RESEQUENCING UNDER ./CHANGE       #
         DS    0D
USERCODE DC    CL8' '             PASSES CODE TO USER ROUTINE
USERWORK DC    XL8'0'             WORK AREA FOR USER ROUTINE
SEQ1     DC    CL8' '
SEQ2     DC    CL8' '
CODE     DC    CL8' '
GANGCOL  DC    F'0'
GANGLEN  DC    F'0'
UNAME    DC    CL8' '             NAME OF USER ROUTINE
*
OMSEQ    DC    CL8' '             PREVIOUS OM SEQ.
*
LCLFCBAD DC    A(0)               ADDRESS FIRST FIX CONTROL BLOCK
REALDCB  DC    A(1)               DCB POINTER FOR CHAINED UPDATES
*
LEVSAVE  DC    9F'0'
LOCALSZ  EQU   *-LOCAL
BACKLEV  EQU   LEVSAVE+28
         MEND
./ ADD NAME=NMDSECT  0100-80001-80001-1917-00028-00028-00000-METZMAC 01
         MACRO
         NMDSECT
*  DSECT DESCRIBING AN OUTPUT FILE FOR THE NM- ROUTINES
*  (DONE TO ALLOW SYSPUNCH TO USE THE SEQUENTIAL/PARTITIONED LOGIC
*  OF THE NM- ROUTINE, ORIGINALLY WRITTEN FOR SYSUT2 ALONE).
*
NMDSECT  DSECT
NMBUFADR DC    F'0'               BUFFER ADDRSES FOR NEW MASTER WRITE C
NMCURREC DC    F'0'               POINTER TO CURRENT RECORD IN BUFFER
NMBUFLIM DC    F'0'
NMBPL    DC    F'0'               BUFFER POOL SIZE AND SUBPOOL        C
NMBPA    DC    F'0'               BUFFER POOL ADDRESS                 C
FDAD     DC    XL8'0'
NM       DCB   DDNAME=SYSUT2,DSORG=PO,MACRF=W                         C
TRBAL    DC    H'0'                                                   C
NMBDW    DC    H'0'               = LENGTH OF BLOCK DESCRIPTOR U/V
NMRELAD  DC    XL3'0'             DCBRELAD SAVE WORD             82060
         FLAG  (NMPS,NMWYLFMT,NMWNOT1)                           82060
NMCOUNT  DC    F'0'          NUMBER OF RECORDS WRITTEN           82060
*                                                                82060
*        INFORMATION ADDED TO MAKE PRESS RE-USABLE               82060
*        (SYSUT2 AND SYSPUNCH BOTH COMPRESSED FILES).            82060
NMWYL#   DC    F'0'          WYLBUR LINE NUMBER                  82060
NMPREVNM DC    CL8' '        LAST MEMBER PROCESSED               82060
NMLEN    DC    H'0'          LENGTH OF WYLBUR BUFFER FILLED      82060
NMSECLEN EQU   *-NMDSECT     LENGTH OF DSECT                     82060
*
         MEND
./ ADD NAME=RDEF     0100-80001-80001-1917-00008-00008-00000-METZMAC 01
         MACRO
         RDEF
         LCLA  &R
.LOOP    ANOP
R&R      EQU   &R
&R       SETA  &R+1
         AIF   (&R LE 15).LOOP
         MEND
./ ADD NAME=REGEQU   0100-80001-80001-1917-00019-00019-00000-METZMAC 01
         MACRO ,
        REGEQU ,
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         MEND  ,
./ ADD NAME=RESET    0100-80001-80001-1917-00015-00015-00000-METZMAC 01
         MACRO
&LABEL   RESET &FLAG,&R=
         LCLA  &N
         LCLC  &LA
&LA      SETC  'L'''
         AIF   ('&R(1)' NE '').SPECIAL
&LABEL   NI    &FLAG(1),X'FF'-&LA&FLAG(1)
         AGO   .LOOP
.SPECIAL ANOP
&LABEL   NI    &FLAG(1).(&R(1)),X'FF'-&LA&FLAG(1)
.LOOP    AIF   (&N+1 GE N'&FLAG).MEND
         RESET &FLAG(&N+2),R=&R(&N+2)
&N       SETA  &N+1
         AGO   .LOOP
.MEND    MEND
./ ADD NAME=SET      0100-80001-80001-1917-00015-00015-00000-METZMAC 01
         MACRO
&LABEL   SET   &FLAG,&R=
         LCLA  &N
         LCLC  &LA
&LA      SETC  'L'''
         AIF   ('&R(1)' NE '').SPECIAL
&LABEL   OI    &FLAG(1),&LA&FLAG(1)
         AGO   .LOOP
.SPECIAL ANOP
&LABEL   OI    &FLAG(1).(&R(1)),&LA&FLAG(1)
.LOOP    AIF   (&N+1 GE N'&FLAG).MEND
         SET   &FLAG(&N+2),R=&R(&N+2)
&N       SETA  &N+1
         AGO   .LOOP
.MEND    MEND
./ ADD NAME=WYBLKSIZ 0100-80001-80001-1917-00006-00006-00000-METZMAC 02
         MACRO
         WYBLKSIZ
*
WYBLKSIZ EQU   13030     MAX BLKSIZE FOR EDIT FORMAT BLOCK (DTS/82045)
*
         MEND
./ ADD NAME=XPRCLOSE 0100-80001-80001-1917-00004-00004-00000-METZMAC 02
         MACRO
&SYMBOL  XPRCLOSE &WA
&SYMBOL  XPRINNRA &WA,68
         MEND
./ ADD NAME=XPRDCB   0100-80001-80001-1917-00038-00038-00000-METZMAC 02
         MACRO
&SYMBOL  XPRDCB  &DDNAME=SYSPRINT,&BLKSIZE=0
         LCLC  &TAG
.* MACRO TO GENERATE A WORK AREA FOR A PRINTER DATA SET, CONTAINING
.* A SAVE AREA, THE DCB, OPEN AND CLOSE PARAMETER LISTS, AND VARIOUS
.* CELLS AND SWITCHES.
&TAG     SETC  '&SYMBOL'
         AIF   (T'&SYMBOL NE 'O').TOK  TEST IF NAME SUPPLIED
&TAG     SETC  'XPRDCB01'              SUPPLY STANDARD PRDCB NAME
.TOK     ANOP
&TAG     DS    0D                      ALIGN ON DOUBLE-WORD BOUNDARY
         DS    18F                     STANDARD SAVE AREA
         SPACE
*        DCB   DDNAME=&DDNAME,DSORG=PS,RECFM=VBM,LRECL=137,           X
*              BLKSIZE=&BLKSIZE,MACRF=PL                            UOR
IHB&SYSNDX DCB DDNAME=&DDNAME,DSORG=PS,RECFM=VBM,LRECL=137,            X
               BLKSIZE=&BLKSIZE,MACRF=PL                            UOR
         SPACE
* PARAMETER LISTS FOR OPEN AND CLOSE:
         SPACE
         OPEN  (IHB&SYSNDX,(OUTPUT,LEAVE)),MF=L  PARM LIST FOR OPEN
         SPACE
         CLOSE (IHB&SYSNDX,LEAVE),MF=L PARM LIST FOR CLOSE
         SPACE
* WORK CELLS AND VARIABLE STORAGE:
         SPACE
         DS    1D                      WORK CELL
         DS    3F                      WORK CELLS
         DS    1A                      PAGE HEADING PARM LIST ADDRESS
         DS    1F                      MAXIMUM NUMBER OF OUTPUT LINES
         DS    1H                      PAGE WIDTH
         DS    1H                      PAGE LENGTH
         DS    1H                      PAGE NUMBER
         DS    1H                      PAGE BALANCE
         DS    1X                      SWITCHES
         DS    CL24                    DATE & TIME FOR PAGE HEADING
         SPACE 2
         MEND
./ ADD NAME=XPREJECT 0100-80001-80001-1917-00050-00050-00000-METZMAC 02
         MACRO
&SYMBOL  XPREJECT  &WA,&COND=
.* MACRO TO EXECUTE AN EJECT CALL TO 'XPRNTSUB'.
         LCLC  &TAG,&SYM,&OPT,&R
         LCLA  &K
&SYM     SETC  '&SYMBOL'
&TAG     SETC  'IHB&SYSNDX'
         CNOP  2,4
.TST1    AIF   ('&COND' NE '').TST2
&OPT     SETC  'F000'
         AGO   .SIMPLE
.TST2    AIF   ('&COND' NE 'ATHOF').TSTC
&OPT     SETC  'F100'
.SIMPLE  ANOP
&SYM     BAL   1,&TAG.L                LOAD PARM ADDRESS
         DC    XL2'&OPT'               OPTION BITS
         AGO   .VCON
.TSTC    AIF   ('&COND(1)' NE 'EQ').NE
&OPT     SETC  '80'
.NE      AIF   ('&COND(1)' NE 'NE').LT
&OPT     SETC  '70'
.LT      AIF   ('&COND(1)' NE 'LT').GT
&OPT     SETC  '40'
.GT      AIF   ('&COND(1)' NE 'GT').LE
&OPT     SETC  '20'
.LE      AIF   ('&COND(1)' NE 'LE').GE
&OPT     SETC  'C0'
.GE      AIF   ('&COND(1)' NE 'GE').NOT
&OPT     SETC  'A0'
.NOT     AIF   ('&OPT' NE '').COK
         MNOTE 4,'COND OPERAND &COND(1) ILLEGAL'
.COK     AIF   ('&COND(2)' NE '').C2OK
         MNOTE 4,'COND TEST QUANTITY MISSING'
         AGO   .NOTREG
.C2OK    AIF   ('&COND(2)'(1,1) NE '(').NOTREG
&K       SETA  K'&COND(2)-2
&R       SETC  '&COND(2)'(2,&K)
&SYM     STC   &R,&TAG.A               STORE INTO PARM LIST
&SYM     SETC  ''
.NOTREG  ANOP
&SYM     BAL   1,&TAG.L                LOAD PARM ADDRESS
         DC    XL1'&OPT'               CONDITION MASK
         AIF   ('&COND(2)' EQ '').NOTREG2
         AIF   ('&COND(2)'(1,1) NE '(').NOTREG2
&TAG.A   DC    AL1(0)                  TEST QUANTITY
         AGO   .VCON
.NOTREG2 DC    AL1(&COND(2))           TEST QUANTITY
.VCON    ANOP
&TAG.L   XPRINNRA  &WA,92
         MEND
./ ADD NAME=XPRHEAD  0100-80001-80001-1917-00004-00004-00000-METZMAC 02
         MACRO
&SYMBOL  XPRHEAD &WA,&LIST=,&MF=
&SYMBOL  XPRLIST &WA,LIST=&LIST,MF=&MF,IHBPARM=80
         MEND
./ ADD NAME=XPRINNRA 0100-80001-80001-1917-00013-00013-00000-METZMAC 02
         MACRO
&TAG     XPRINNRA &WA,&IHBPARM
&TAG     L     15,=V(XPRNTSUB)
         AIF   ('&WA' NE '').WOK
         MNOTE 8,'WORK AREA ADDRESS NOT SPECIFIED'
         MEXIT
.WOK     AIF   ('&WA' EQ '(0)').BAL
         AIF   ('&WA'(1,1) EQ '(').REG
         LA    0,&WA
         AGO   .BAL
.REG     LR    0,&WA(1)
.BAL     BAL   14,&IHBPARM.(,15)
         MEND
./ ADD NAME=XPRLDEF  0100-80001-80001-1917-00051-00051-00000-METZMAC 02
         MACRO
&SYMBOL  XPRLDEF  &TEXT=,&LENGTH=132,&OFFSET=0,&SPA=1,&SPB=0
.* MACRO TO DEFINE PRINT LINE DESCRIPTOR BLOCKS ("PLD" BLOCKS) FOR
.* THE PRINTING SUBROUTINE "XPRNTSUB".
         LCLA  &N
         LCLC  &B3,&B6,&B7
         ACTR  25                      JUST IN CASE
&B3      SETC  '0'
&B6      SETC  '0'
&B7      SETC  '0'
.* PROCESS OPTIONS IN SPA OPERAND:
.TSTA1   AIF   ('&SPA(2)' EQ '').TSTB1
         AIF   ('&SPA(2)' NE 'NOEJ').TSTA2
&B3      SETC  '1'
         AGO   .TSTB1
.TSTA2   MNOTE 4,'OPERAND &SPA(2) AFTER KEYWORD SPA IS ILLEGAL'
.* PROCESS OPTIONS IN SPB OPERAND:
.TSTB1   ANOP
&N       SETA  2
.TSTB5   AIF   ('&SPB(&N)' NE 'NOEJ').TSTB2
&B7      SETC  '1'
         AGO   .TSTB4
.TSTB2   AIF   ('&SPB(&N)' NE 'ATHOF').TSTB3
&B6      SETC  '1'
         AGO   .TSTB4
.TSTB3   AIF   ('&SPB(&N)' EQ '').TSTB4
         MNOTE 4,'OPERAND &SPB(&N) AFTER KEYWORD SPB IS ILLEGAL'
.TSTB4   ANOP
&N       SETA  &N+1
         AIF   (&N LE 3).TSTB5
.IFTEXT  AIF   ('&TEXT' NE '').TOK
         MNOTE 4,'TEXT ADDRESS MISSING'
.TOK     ANOP
&SYMBOL  DS    0F                      ALIGN ON FULL-WORD BOUNDARY
         DC    BL1'000&B3.00&B6&B7'    OPTION BITS
         DC    AL3(&TEXT)              TEXT ADDRESS
         DC    AL1(&LENGTH)            TEXT LENGTH
         DC    AL1(&OFFSET)            MARGIN OFFSET
.TESTB   AIF   ('&SPB(1)' EQ 'EJECT').BSKIP
         AIF   ('&SPB(1)' EQ 'SKIP').BSKIP
         DC    AL1(&SPB(1))            PRE-SPACING
         AGO   .TESTA
.BSKIP   ANOP
         DC    AL1(255)                EJECT BEFORE PRINTING
.TESTA   AIF   ('&SPA(1)' EQ 'EJECT').ASKIP
         AIF   ('&SPA(1)' EQ 'SKIP').ASKIP
         DC    AL1(&SPA(1))            POST-SPACING
         MEXIT
.ASKIP   ANOP
         DC    AL1(255)                EJECT AFTER PRINTING
         MEND
./ ADD NAME=XPRLIST  0100-80001-80001-1917-00069-00069-00000-METZMAC 02
         MACRO
&SYMBOL  XPRLIST &WA,&LIST=,&IHBPARM=32,&MF=
         GBLB  &XPRST             COMMUNICATION WITH GENST MACRO
         LCLA  &D,&N
         LCLC  &SYM,&LOC
         ACTR  100
&SYM     SETC  '&SYMBOL'          LABEL FOR FIRST THING GENERATED
&LOC     SETC  'IHB&SYSNDX'       LABEL FOR IN LINE LIST
         AIF   ('&MF(1)' NE 'E').LOC1  TEST FOR MF=E
&LOC     SETC  '&MF(2)'           LIST LOCATED BY MF OPERAND INSTEAD
.LOC1    ANOP
.*
         AIF   ('&LIST' NE '').LISTOK
         AIF   ('&MF(1)' EQ 'E').GENE
         MNOTE 8,'LIST OMITTED'
         MEXIT
.LISTOK  AIF   ('&MF' EQ 'L').DCLOOP  IF MF=L, GO GENERATE LIST
.*  GENERATE STORE INSTRUCTIONS TO MODIFY THE LIST.
.STLOOP  ANOP
&D       SETA  &N*4               LIST OFFSET
&N       SETA  &N+1
&SYM     GENST &LOC,&D,&LIST(&N),4,&MF(1)
         AIF   (NOT &XPRST).NST
&SYM     SETC  ''
.NST     ANOP
         AIF   (&N NE N'&LIST).STLOOP
         AIF   (NOT &XPRST).STDONE
         GENST &LOC,&D,X'80',1,E
.STDONE  ANOP
.*  GET PARAMETER LIST ADDRESS INTO R1 TO CALL XPRNTSUB
         AIF   (T'&MF EQ 'O').STD
         AIF   ('&MF(1)' EQ 'E').GENE
         MEXIT
.GENE    AIF   ('&LOC' EQ '(1)').VCONS
         AIF   ('&LOC'(1,1) EQ '(').RE
&SYM     LA    1,&MF(2)
         AGO   .VCON
.RE      ANOP
&LOC     SETC  '&MF(2)'(2,K'&MF(2)-2)  GET REGISTER WITHOUT PARENS
&SYM     LR    1,&LOC
         AGO   .VCON
.*
.STD     ANOP
         CNOP  0,4                FORCE ALIGNMENT OF LIST
&D       SETA  &D+4
&SYM     BAL   1,&LOC+&D
.*  GENERATE THE PARAMETER LIST
&N       SETA  0
&SYM     SETC  '&LOC'
.DCLOOP  ANOP
&N       SETA  &N+1
         AIF   (&N EQ N'&LIST).LAST
&SYM     GENDC &LIST(&N),A,,&MF
&SYM     SETC  ''
         AGO   .DCLOOP
.LAST    ANOP
&SYM     DC    0F'0',X'80'
         GENDC &LIST(&N),AL3,,&MF
         SPACE 1
         AIF   (T'&MF EQ 'O').VCON
         MEXIT
.*  GENERATE THE CALL
.VCON    XPRINNRA &WA,&IHBPARM
         SPACE 1
         MEXIT
.VCONS   ANOP
&SYM     XPRINNRA &WA,&IHBPARM
         SPACE 1
         MEND
./ ADD NAME=XPRMOD   0100-80001-80001-1917-00007-00007-00000-METZMAC 02
         MACRO
&SYMBOL  XPRMOD  &WA,&MAXLINE=0,&PAGENO=0,&PAGEWID=0,&PAGELEN=0,       X
               &TIME=0,&DATE=0
.* MACRO TO EXECUTE A MODIFY CALL TO 'XPRINTSUB'.
&SYMBOL  XPROPEN  &WA,MAXLINE=&MAXLINE,PAGENO=&PAGENO,PAGEWID=&PAGEWID,X
               PAGELEN=&PAGELEN,TIME=&TIME,DATE=&DATE,IHBPARM=104
         MEND
./ ADD NAME=XPRNTLIN 0100-80001-80001-1917-00093-00093-00000-METZMAC 02
         MACRO
&SYMBOL  XPRNTLIN &WA,&TEXT=,&LENGTH=,&OFFSET=,&SPB=,&SPA=,&MF=
         GBLB  &XPRST
         LCLA  &N,&B
         LCLC  &SB,&SA,&LOC,&R
         ACTR  25
.*  ANALYZE SPA AND SPB OPTIONS
         AIF   (T'&SPA(2) EQ 'O').TSTB1
         AIF   ('&SPA(2)' NE 'NOEJ').TSTA2
&B       SETA  16
         AGO   .TSTB1
.TSTA2   MNOTE 4,'OPERAND &SPA(2) OF SPA IGNORED'
.TSTB1   ANOP
&N       SETA  2                  SUBLIST POINTER FOR SPB
.TSTB5   AIF   (&N GT N'&SPB).TSTB6
         AIF   ('&SPB(&N)' NE 'NOEJ').TSTB2
&B       SETA  &B+1
         AGO   .TSTB4
.TSTB2   AIF   ('&SPB(&N)' NE 'ATHOF').TSTB3
&B       SETA  &B+2
         AGO   .TSTB4
.TSTB3   MNOTE 4,'OPERAND &SPB(&N) OF SPB IGNORED'
.TSTB4   ANOP
&N       SETA  &N+1
         AGO   .TSTB5
.TSTB6   ANOP
&SB      SETC  '&SPB(1)'
         AIF   ('&SPB(1)' EQ 'SKIP').SBEJ
         AIF   ('&SPB(1)' NE 'EJECT').SBNEJ
.SBEJ    ANOP
&SB      SETC  '255'
.SBNEJ   ANOP
&SA      SETC  '&SPA(1)'
         AIF   ('&SPA(1)' EQ 'SKIP').SAEJ
         AIF   ('&SPA(1)' NE 'EJECT').SANEJ
.SAEJ    ANOP
&SA      SETC  '255'
.SANEJ   ANOP
.*
&LOC     SETC  'IHB&SYSNDX'       NAME OF SF PARAMETER LIST
         AIF   (T'&MF EQ 'O').LOC1
&LOC     SETC  '&MF(2)'           CHANGE LOCATOR FOR MF=E
.LOC1    ANOP
.*
         AIF   ('&MF' EQ 'L').LIST
.*  GENERATE STORE INSTRUCTIONS NECESSARY TO MODIFY THE PLD
         AIF   (T'&SYMBOL EQ 'O').NOSYM
&SYMBOL  DS    0H
.NOSYM   GENST &LOC,4,&TEXT,4,&MF
         AIF   (&B EQ 0).NOFLAGS
         AIF   (NOT &XPRST AND T'&MF EQ 'O').NOFLAGS
         GENST &LOC,4,&B,1,E
.NOFLAGS ANOP
         GENST &LOC,8,&LENGTH,1,&MF
         GENST &LOC,9,&OFFSET,1,&MF
         GENST &LOC,10,&SB,1,&MF
         GENST &LOC,11,&SA,1,&MF
.*  GET PARAMETER LIST ADDRESS INTO R1 FOR THE CALL.
         AIF   (T'&MF EQ 'O').STD
         AIF   ('&LOC' EQ '(1)').VCONE
         AIF   ('&LOC'(1,1) EQ '(').RE
         LA    1,&MF(2)
         AGO   .VCONE
.RE      ANOP
&R       SETC  '&MF(2)'(2,K'&MF(2)-2)
         LR    1,&R
.VCONE   GENST (1),0,4(,1),4,E    STORE PLD ADDRESS
         GENST (1),0,X'80',1,E    SET END OF LIST BIT
         AIF   ('&MF(1)' EQ 'E').VCON
         MEXIT
.*
.STD     CNOP  0,4
         BAL   1,*+16             BRANCH AROUND LIST,PLD; LOAD R1
&LOC     DC    X'80',AL3(*+3)
         AGO   .DCS               GO GENERATE THE PLD
.*
.LIST    ANOP
&SYMBOL  DC    A(0)
.*  GENERATE THE PLD
.DCS     ANOP
         DC    AL1(&B)
         GENDC &TEXT,AL3,,&MF
         GENDC &LENGTH,AL1,132,&MF
         GENDC &OFFSET,AL1,0,&MF
         GENDC &SB,AL1,0,&MF
         GENDC &SA,AL1,1,&MF
         SPACE 1
         AIF   ('&MF(1)' NE 'L').VCON
         MEXIT
.*  GENERATE THE CALL
.VCON    XPRINNRA  &WA,32
         SPACE 1
         MEND
./ ADD NAME=XPROPEN  0100-80001-80001-1917-00057-00057-00000-METZMAC 02
         MACRO
&SYMBOL  XPROPEN  &WA,&MAXLINE=0,&PAGENO=0,&PAGEWID=0,&PAGELEN=0,      X
               &TIME=0,&DATE=0,&DDNAME=SYSPRINT,&IHBPARM=56
.* MACRO TO EXECUTE AN 'OPEN' OR 'MODIFY' CALL TO 'XPRNTSUB'.
         LCLC  &TAG
&TAG     SETC  'IHB&SYSNDX'
         AIF   ('&SYMBOL' EQ '').T1
&SYMBOL  DS    0H
.T1      AIF   ('&MAXLINE'(1,1) NE '(').T2
         ST    &MAXLINE(1),&TAG.A      STORE IN PARM LIST
.T2      AIF   ('&PAGENO'(1,1) NE '(').T3
         STH   &PAGENO(1),&TAG.A+4     STORE IN PARM LIST
.T3      AIF   ('&PAGEWID'(1,1) NE '(').T4
         STC   &PAGEWID(1),&TAG.A+6    STORE IN PARM LIST
.T4      AIF   ('&PAGELEN'(1,1) NE '(').T5
         STC   &PAGELEN(1),&TAG.A+7    STORE IN PARM LIST
.T5      AIF   ('&TIME'(1,1) NE '(').T6
         ST    &TIME(1),&TAG.A+8       STORE IN PARM LIST
.T6      AIF   ('&DATE'(1,1) NE '(').T7
         ST    &DATE(1),&TAG.A+12      STORE IN PARM LIST
.T7      AIF   ('&DDNAME'(1,1) NE '(').CNOP
         MVC   &TAG.A+16(8),0(&DDNAME(1))  STORE IN PARM LIST
.CNOP    CNOP  0,4
         BAL   1,&TAG.L        LOAD PARM LIST ADDRESS
.P1      AIF   ('&MAXLINE'(1,1) EQ '(').PR1
&TAG.A   DC    A(&MAXLINE)             PRINT OUTPUT LIMIT
         AGO   .P2
.PR1     ANOP
&TAG.A   DC    A(0)                    PRINT OUTPUT LIMIT
.P2      AIF   ('&PAGENO'(1,1) EQ '(').PR2
         DC    AL2(&PAGENO)            PAGE NUMBER
         AGO   .P3
.PR2     DC    AL2(0)                  PAGE NUMBER
.P3      AIF   ('&PAGEWID'(1,1) EQ '(').PR3
         DC    AL1(&PAGEWID)           PAGE WIDTH
         AGO   .P4
.PR3     DC    AL1(0)                  PAGE WIDTH
.P4      AIF   ('&PAGELEN'(1,1) EQ '(').PR4
         DC    AL1(&PAGELEN)           PAGE LENGTH
         AGO   .P5
.PR4     DC    AL1(0)                  PAGE LENGTH
.P5      AIF   ('&TIME'(1,1) EQ '(').PR5
         DC    A(&TIME)                ADDRESS OF TIME
         AGO   .P6
.PR5     DC    A(0)                    ADDRESS OF TIME
.P6      AIF   ('&DATE'(1,1) EQ '(').PR6
         DC    A(&DATE)                ADDRESS OF DATE
         AGO   .P7
.PR6     DC    A(0)                    ADDRESS OF DATE
.P7      AIF   ('&IHBPARM' NE '56').VCON
         AIF   ('&DDNAME'(1,1) EQ '(').PR7
         DC    CL8'&DDNAME'            DDNAME FOR DATA SET
         AGO   .VCON
.PR7     DC    CL8' '                  DDNAME FOR DATA SET
.VCON    ANOP
&TAG.L   XPRINNRA  &WA,&IHBPARM
         MEND
./ ADD NAME=XPRSPACE 0100-80001-80001-1917-00032-00032-00000-METZMAC 02
         MACRO
&SYMBOL  XPRSPACE  &WA,&LINES=1,&COND=
.* MACRO TO EXECUTE A SPACE CALL TO 'XPRNTSUB'.
         LCLA  &N,&B6,&B7
         LCLC  &TAG,&SYM
&SYM     SETC  '&SYMBOL'
&TAG     SETC  'IHB&SYSNDX'
.LOOP    ANOP
&N       SETA  &N+1
         AIF   (&N GT N'&COND).LDONE
.TST1    AIF   ('&COND(&N)' NE 'NOEJ').TST2
&B6      SETA  1
         AGO   .LOOP
.TST2    AIF   ('&COND(&N)' NE 'ATHOF').TST3
&B7      SETA  1
         AGO   .LOOP
.TST3    MNOTE 4,'OPERAND &COND(&N) AFTER KEYWORD COND IS ILLEGAL'
         AGO   .LOOP
.LDONE   CNOP  2,4
         AIF   ('&LINES'(1,1) NE '(').NOTREG1
&SYM     STC   &LINES(1),&TAG.A+1      STORE INTO PARM LIST
&SYM     SETC  ''
.NOTREG1 ANOP
&SYM     BAL   1,&TAG.L                LOAD PARM LIST ADDRESS
&TAG.A   DC    B'000000&B6&B7'         OPTION BITS
         AIF   ('&LINES'(1,1) NE '(').NOTREG2
         DC    X'00'                   SPACING AMOUNT
         AGO   .VCON
.NOTREG2 DC    AL1(&LINES)             SPACING AMOUNT
.VCON    ANOP
&TAG.L   XPRINNRA  &WA,44
         MEND
