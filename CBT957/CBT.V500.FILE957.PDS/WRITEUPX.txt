
 @J0 @R84 @L15    @H2INTRODUCTION@
        @HIEBUPDTX - USERS' GUIDE@
                @TI.  INTRODUCTION@
                         @G @K IEBUPDTX @K IS A UTILITY PROGRAM DESIGNED
 TO FACILITATE THE PROCESS OF   UPDATING SYMBOLIC SOURCE DATA REPRESENTI
NG 80 COLUMN CARD IMAGES.               @KTHE SOURCE DATA TO BE UPDATED
(THAT IS, CHANGED IN ANY WAY) IS CALLED THE     @K OLD MASTER. @K @KTHE
SET OF DATA CARDS DESCRIBING                            THE UPDATE TO BE
 MADE IS CALLED THE @K CONTROL FILE. @K @KTHE DATA FORMED AS    A RESULT
 OF THE ACTIONS SPECIFIED IN THE CONTROL FILE FORM  THE @K
NEW MASTER @K DATA SET.
 @K IEBUPDTX @K PERFORMS UPDATING BY COPYING DATA FROM OLD MASTER TO
NEW MASTER AS DIRECTED VIA THE CONTROL FILE(S).  @KSOURCE CARDS
MAY BE INSERTED, DELETED, OR EDITED.
        @S2 @G @KFOR THE PURPOSES OF THE FOLLOWING DISCUSSION, IT WILL B
E ASSUMED THAT THE CONTROL @I FILE IS PRESENTED TO THE UPDATE @I PROGRAM
 THROUGH THE FILE DESCRIBED BY THE @K SYSIN @K @I  @KDATA @KDEFINITION S
TATEMENT (@KO@KS @K JCL@K ).     @KNOTE THAT IN GENERAL THIS NEED NOT BE
 THE CASE.                              @KTHE OLD MASTER DATA SET, WHERE
VER REQUIRED, MUST BE PROVIDED                  UNDER THE @K DDNAME @I @
K OF @K SYSUT@K 1
                          @I AND THE NEW MASTER DATA SET, IF ONE IS TO B
E GENERATED, MUST BE DESCRIBED BY A @K DD @K STATEMENT WITH @K DDNAME
 @K OF @K SYSUT@K 2@I.
(@KUNLESS DATA SET ASSOCIATIONS ARE BEING DYNAMICALLY CONTROLLED
BY THE @K INDD@K  AND @K OUTDD PARM @K OPTIONS).
          @S2 @G @KTHE UPDATING CAPABILITIES OF @K IEBUPDTX@K   APPLY TO
 LOGICALLY       SEQUENTIAL OLD MASTER DATA SETS, AND THE PROGRAM WILL U
PDATE FROM @K SYSUT@K 1  TO @K SYSUT@K 2 IF THEY ARE SIMPLE SEQUENTIAL F
ILES.  @KFOR  CONVENIENCE HOWEVER, IT IS OFTEN DESIRABLE TO GROUP SEVERA
L SEQUENTIAL COLLECTIONS OF DATA TOGETHER AS MEMBERS OF A SINGLE PARTITI
ONED DATA SET (@K PDS@K ).                       @K IEBUPDTX@K  WILL OPE
RATE CORRECTLY IF EITHER OR BOTH OF @K
                                              SYSUT@K 1 AND @K SYSUT@K 2
 ARE @K PDS@K S  WITHOUT REQUIRING ANY CHANGE TO THE CONTROL STATEMENTS
 IN @K SYSIN @K (EXCEPT POSSIBLY TO SPECIFY THE MEMBER NAME).
        @S2 @G @KTO AID THE USER IN HANDLING @K PDS@K S, @K IEBUPDTX @K
PROVIDES THE ABILITY TO @K ADD,    LIST,  RENAME, @K
AND @K SCRATCH@K  MEMBERS OF A @K PDS.@K
 @S2 @G @K IEBUPDTX @K COMMANDS ARE WRITTEN IN A MANNER SIMILAR TO
ASSEMBLY LANGUAGE MACRO CALLS.  @KTHE GENERAL FORMAT IS:
@S2 @B5  ./NAMEFIELD @B1 OPERATION @B1 POSITIONAL_OPERANDS,KEYWORD_OPERA
NDS
@S2 WHERE THE './' MUST BE PRESENT IN COLUMNS 1-2.
@S1 @KTHE NAME FIELD IS NOT ALLOWED UNLESS THE @K NAMES @K  PARM OPTION
IS SELECTED.
 @KTHE
    @K NAMES @K OPTION IS PROVIDED FOR COMPATIBILITY WITH @K IEBUPDTE,
@K BUT IS NOT @U THE DEFAULT.  @KTHIS IMPLIES THAT THE NAME FIELD
IS GENERALLY NOT TO BE USED, AND ITS OMISSION NEED NOT BE INDICATED
BY LEAVING A BLANK BEFORE THE OPERATION FIELD (ALTHOUGH LEAVING
BLANKS IS ALLOWED).
@S2    @KTHE OPERAND FIELD MAY CONTAIN BOTH POSITIONAL AND KEYWORD
OPERANDS.  @KAS IN ASSEMBLY LANGUAGE, ANY POSITIONALLY SPECIFIED
OPERANDS MUST PRECEDE ANY AND ALL KEYWORDS.  @KNO EMBEDDED BLANKS
ARE ALLOWED (FIRST BLANK STARTS THE COMMENTS FIELD).
@KOPERANDS ARE SEPARATED BY COMMAS (ALTHOUGH POSITIONAL OPERANDS
MAY ALTERNATIVELY BE SEPARATED BY DASHES TO IMPROVE READABILITY).
          @S2    @KCONTINUATIONS ARE INDICATED BY FOLLOWING THE
LAST KEYWORD @U BY A COMMA.  @KNO CONTINUATION CHARACTER IS CHECKED
FOR IN COLUMN 72.  @KNOTE THAT YOU MAY NOT SPLIT AN OPERAND AT COLUMN
72 AS IN ASSEMBLY LANGUAGE (OR FOR @K IEBUPDTE@K ).
@KTHE SECOND CARD OF THE CONTINUATION MUST CONTAIN THE ./ IN COLUMNS
1-2, AND THE CONTINUED DATA BY COLUMN 16.
@S2
@G @KUNLIKE ASSEMBLY LANGUAGE, MANY OPERANDS MAY BE SPECIFIED
EITHER POSITIONALLY OR AS KEYWORDS.  @KFOR COMPATIBILITY WITH
@K IEBUPDTE@K , ALL @U OPERANDS MAY BE SPECIFIED AS KEYWORDS
(ALTHOUGH NOT ALL OPERANDS MAY BE SPECIFIED POSITIONALLY).
@S2 @G @K IEBUPDTX @K ALSO ACCEPTS CERTAIN ABBREVIATIONS:
@L24 @S1   @C20  1.  @KWHEREVER  A  DECIMAL NUMBER IS REQUIRED,
A TRAILING @KK  MAY BE USED TO SIGNIFY THREE ZEROS,
E.G. 1@KK INSTEAD OF 1000.
@S1 @C20  2.  @K END @K MAY BE USED INSTEAD OF A DECIMAL SEQUENCE
NUMBER TO SPECIFY THE UPPER LIMIT OF A RANGE, E.G. 150-@K END@K .
@L15
                             @H2UPDATING CAPABILITIES@  @TII.  UPDATING
CAPABILITIES@                   @G @KTO SIMPLIFY THE DISCUSSION BELOW, W
E ASSUME THAT BOTH THE NEW              AND OLD MASTER DATA RESIDE IN A
@K PDS. @K @KIF
                      EITHER IS A SEQUENTIAL DATA SET, THE UPDATE WILL O
PERATE ACCORDINGLY.                                             @S2 @G @
KBEFORE AN UPDATE CAN BE PERFORMED, THE  ORIGINAL SOURCE DATA
MUST BE PLACED IN THE OLD MASTER @K PDS @K AS A UNIQUE MEMBER (UNLESS IT
  IS    DESIRABLE TO INPUT THE ORIGINAL CARDS EVERY TIME). @KTHE @K ADD
@K CONTROL STATEMENT PROVIDES THIS FUNCTION. @KTHE SIMPLEST FORM OF THIS
 COMMAND IS @S2 @B10    ./ @K ADD@K  @I NAME @U @S2 WHERE NAME @U IS THE
 UNIQUE NAME TO BE GIVEN TO THE   SOURCE DATA WHEN IT IS @K ADD@K ED TO
@K SYSUT@K 2  AS A @K PDS@K  MEMBER. @KTHE DATA CARDS WHICH ARE TO COMPR
ISE THE NEW MEMBER SHOULD FOLLOW THE @K ADD @K COMMAND IN @K SYSIN. @K @
KIF @K    SYSUT@K 2 IS SEQUENTIAL, THE MEMBER NAME WILL  NOT BE USED. @K
HOWEVER, IT SHOULD STILL BE CODED TO IDENTIFY THE OLD MASTER DATA (THE U
SE OF NAME @U AS THE @K SYSUT@K 2 @K PDS @K MEMBER NAME IS NOT THE ONLY
 USE THAT @K IEBUPDTX @K CAN MAKE OF IT.)
         @S2 @G @KWHEN THE ORIGINAL
                                 OLD MASTER SOURCE DATA IS BEING ADDED T
O THE @K SYSUT@K 2 LIBRARY (@K PDS@K ), IT IS USUALLY DESIRABLE TO @K SE
QUENCE @K @I THE CARDS.  @KIF THE MEMBER IS TO BE UPDATED LATER, THE SEQ
UENCE NUMBERS MUST BE PRESENT ON THE OLD MASTER CARD IMAGES. @KSEQUENCE
NUMBERS ARE PLACED IN CARD COLUMNS       73-80.   @S1 @G
                                                @KSEQUENCING IS SPECIFIE
D IN EITHER OF TWO WAYS: DIRECTLY ON THE @K ADD @K CARD, AS @S2 @B10 ./
@K ADD @K NAME,@K INCR@K =INCR,@K NEW@K 1=NEW1
@O \\\\\\\\\\____\\\\\\____     @S2
  OR ON A SPECIAL @K SEQUENCE @K COMMAND CARD, WHICH IMMEDIATELY FOLLOWS
  THE @K ADD @K CARD (AND THUS PRECEDES THE ACTUAL DATA TO BE ADDED), AS
         @S2 @B10 ./ @K SEQUENCE INCR@K =INCR,@K NEW@K 1=NEW1 @O
                \\\\\____\\\\\\____     @S2 @KFOR ./@K ADD@K ,
AT LEAST ONE
   OF @K INCR @K AND @K  NEW@K 1 MUST BE CODED. @K INCR @K SPECIFIES THE
 NUMBERING INCREMENT            WHICH WILL BE USED TO SEQUENCE THE CARDS
 - IF CARD X HAS SEQUENCE NUMBER X @U THEN CARD X+1 WILL HAVE SEQUENCE N
UMBER X+@K INCR. @K @O _                        @KTHE @K NEW@K 1 PARAMET
ER SETS THE SEQUENCE NUMBER TO BE USED FOR THE FIRST    CARD.
@KTHE SEQUENCING MAY BE DYNAMICALLY MODIFIED BY PLACING OTHER ./
@K SEQUENCE@K  COMMANDS AMOUNG THE SOURCE CARDS.  @KOF COURSE,
SEQUENCE NUMBERS MUST BE ASSIGNED IN INCREASING ORDER (ERRONEOUS
@K NEW@K 1 VALUES WILL BE REJECTED).
                                                                 @S2 @G
@KIF @K INCR@K = IS OMITTED, IT DEFAULTS TO THE @K PARM INCR@K .
                                               @KIF @K NEW@K 1 IS  OMITT
ED, IT DEFAULTS
         TO THE VALUE  OF @K INCR, @K  OR TO @K INCR@K  +
THE PREVIOUS SEQUENCE NUMBER.  @S2 @G
@KFOR COMPATIBILITY WITH @K IEBUPDTE@K , YOU MAY ALSO USE THE
./ @K NUMBER@K  COMMAND TO INITIALLY SEQUENCE A DECK:
@S1 @B10 ./ @K NUMBER @B1 SEQ@K 1=@K ALL,INCR@K =INCR,@K NEW@K 1=NEW1
@S @B5 OR @B2 ./ @K NUMBER @B1 ALL@K ,,INCR,NEW1
@S1 WHERE INCR @U AND NEW1 @U ARE OPTIONAL AS ABOVE.
@S3 @G          @KTO OBTAIN A LISTING OF THE DATA READ BY THE @K ADD @K
FUNCTION, THE OPTION     "@K LIST@K =@K ALL@K " MAY BE APPENDED TO THE O
THER PARAMETERS ON THE @K       ADD @K STATEMENT (IF THERE ARE ANY OTHER
S).                                     @S2 @KNOTES- @L20 @S
                                                @KIT IS PERMISSIBLE TO C
ODE @K NAME@K =NAME @O \\\\\____
OR @K MEMBER@K =NAME @O \\\\\\\____
                                 ON THE @K ADD @K CARD.   @KOTHERWISE, N
AME @U MUST PRECEDE THE KEYWORD PARAMETERS. @S2 @KON THE @K SEQUENCE @K
COMMAND (BUT NOT THE @K ADD @K COMMAND) YOU MAY ABBREVIATE: @S2 @B10
 ./ @K SEQUENCE @K INCR,NEW1 @O ____\____
        @L15
         @T__ __ __ __ __@
                 @S2 @G @KTO MAKE CHANGES IN (OR UPDATE) THE OLD MASTER,
 THE @K CHANGE @K CARD IS USED, FOLLOWED BY DETAIL CONTROL   COMMANDS WH
ICH SPECIFY THE UPDATE TO BE MADE.
                                        @KIN THE ABSENCE OF ANY DETAIL S
TATEMENTS, THE OLD MASTER IS COPIED UNCHANGED INTO THE NEW MASTER FILE.
 @KIN ANY CASE, THE OLD MASTER MUST @U BE SEQUENCED
 (UNLESS IT IS BEING COMPLETELY RESEQUENCED).
                                                         @S2 @G @KTHE @K
 CHANGE @K @I COMMAND IS WRITTEN IN MUCH THE SAME WAY AS THE @K  ADD @K
COMMAND: THE MEMBER NAME @U (IF PROVIDED) IS USED TO LOCATE THE OLD MAST
ER DATA IN @K SYSUT@K 1 (IF A @K PDS@K )
        AS WELL AS TO STORE THE NEW MASTER DATA IN @K SYSUT@K 2 (IF A @K
 PDS@K ). @KTHE  @K INCR @K AND/OR @K NEW@K 1 PARAMETERS MAY BE USED,
                        EITHER ON THE @K CHANGE @K CARD, OR ON AN IMMEDI
ATELY FOLLOWING @K SEQUENCE     @K COMMAND, TO CAUSE COMPLETE RENUMBERIN
G @I (OR INITIAL NUMBERING) OF          THE DATA.
(@KIF THE DATA WAS NOT PROPERLY SEQUENCED ORIGINALLY, NO FURTHER
UPDATING SHOULD BE SPECIFIED).
                           @KTHE @K LIST@K =@K ALL @K OPTION IS USED TO
INVOKE A LISTING OF THE NEW MASTER SOURCE DATA AS IT IS WRITTEN  TO @K S
YSUT@K 2. @KIF @K LIST@K =@K ALL @K IS NOT SPECIFIED, ONLY
CARDS WHICH ARE CHANGED FROM OLD MASTER TO NEW ARE LISTED.
        @S2 @G @KIF @K SYSUT@K 1 AND @K SYSUT@K 2 BOTH POINT TO THE SAME
 @K PDS, IEBUPDTX @K WILL AUTOMATICALLY REPLACE THE OLD MASTER WITH THE
NEW MASTER IF THE UPDATE IS COMPLETED WITHOUT ERRORS.
                                @S2 @G @KAN EXAMPLE OF THE @K CHANGE @K
STATEMENT FOLLOWS:                      @S2 @B10 ./ @K CHANGE @K NAME,@K
 LIST@K =@K ALL @K @O ____                       @S2 @G @KTHE UPDATE OPE
RATION INITIATED BY THE @K CHANGE @K COMMAND IS FURTHER  DESCRIBED BY DE
TAIL STATEMENTS WHICH FOLLOW THE @K CHANGE @K COMMAND IN @K SYSIN. @K @K
THE DETAIL STATEMENTS (DESCRIBED FURTHER IN A LATER SECTION) ARE USED TO
 DELETE EXISTING RECORDS, INSERT NEW RECORDS, RENUMBER SELECTED OLD RECO
RDS,    OR MODIFY SUBFIELDS OF EXISTING RECORDS.
@S1 @G @KDETAIL STATEMENTS MUST BE ARRANGED IN ORDER OF INCREASING
SEQUENCE NUMBERS OF RECORDS BEING UPDATED.
                @T-- -- -- -- --@
    @G @KTHE @K RENAME @K COMMAND MAY BE USED TO CHANGE THE NAME
OF A MEMBER OF THE NEW MASTER @K PDS@K .
@KIT IS WRITTEN:
@S1 @B10 ./ @K RENAME @K NAME,NEWNAME @O____,_______
@S @B5 OR @B2 ./ @K RENAME NAME@K =NAME,@K NEWNAME@K =NEWNAME
@O\\\\\____\\\\\\\\\_______
@S3
                        @G @KOCCASIONALLY, IT MAY BECOME NECESSARY TO CO
MPLETELY REMOVE A MEMBER        FROM A LIBRARY (@K PDS@K ). @KTHIS OPERA
TION MAY BE DONE BY USING THE @K SCRATCH @K COMMAND, WHICH WILL DELETE T
HE NAMED @O ____ MEMBER FROM THE @K             SYSUT@K 2 DATA SET.  @KT
HIS COMMAND IS WRITTEN AS FOLLOWS:                      @S2 @B10 ./ @K S
CRATCH @K NAME @U                                               @S @G  O
R @B2         ./ @K SCRATCH @K @I @K NAME@K =NAME @O \\\\\____
@S @G OR @B2 ./ @K SCRATCH MEMBER@K =NAME  @O \\\\\\\____
 @S2 @G @KTHESE FUNCTIONS            MAY NOT BE USED WHEN @K SYSUT@K 2 I
S       SEQUENTIAL.
@S1                   @H2DETAIL CONTROL STATEMENTS@ @TIII.  DETAIL CONTR
OL STATEMENTS@          @G @KDETAIL STATEMENTS ARE USED TO MODIFY THE OP
ERATION INITIATED BY A @K CHANGE @K COMMAND, BY DEFINING THE NATURE OF T
HE UPDATE TO BE PERFORMED. @S2 @G       @KTHE @K DELETE @K @I DETAIL STA
TEMENT IS USED TO DELETE ONE OR MORE CARDS FROM  THE OLD MASTER. @KTHE C
ARDS DELETED ARE SIMPLY NOT TRANSCRIBED TO THE NEW MASTER - THEY REMAIN
INTACT IN THE OLD MASTER (UNLESS @K SYSUT@K 1=@K SYSUT@K 2).    @S2 @G
@KTHE CARD(S) TO BE DELETED ARE IDENTIFIED BY SEQUENCE NUMBER, E.G. @S2
  @B10 ./ @K DELETE @K 200-280  @S2
        WHICH CAUSES ALL OLD MASTER RECORDS WITH SEQUENCE NUMBERS BETWEE
N 200 AND 280 TO BE DELETED. @KIF RECORDS 200 AND 280 DO NOT ACTUALLY EX
IST IN THE OLD MASTER, A WARNING MESSAGE IS PRODUCED. @S2 @G
                                @KIF ONLY A SINGLE RECORD IS TO BE DELET
ED, THE SECOND SEQUENCE NUMBER ON THE @K DELETE @K COMMAND MAY EITHER BE
 OMITTED OR SPECIFIED AS THE SAME NUMBER AS THE    FIRST SEQUENCE NUMBER
. @KTHE DASH (-) MAY BE REPLACED BY A COMMA, AND THE KEYWORDS @K SEQ@K 1
 AND @K SEQ@K 2 MAY BE USED ON THE @K DELETE @K COMMAND
(ALTHOUGH YOU CAN NOT USE THE DASH BETWEEN KEYWORDS) E.G.
@S2 @B10 ./ @K DELETE SEQ@K 1=200,@K SEQ@K 2=280
        @S2 @KAS AN ADDITIONAL  CONVENIENCE, THE WORD @K DELETE @K MAY B
E ABBREVIATED AS SIMPLY @KD@I.
                        @S2 @G @KTO ADD NEW CARDS TO THE OLD MASTER, THE
 @K INSERT @K @I COMMAND        IS USED. (ABBREVIATED AS JUST @KI@I).

   @KTHE NEW CARDS BEING @K INSERT@K ED WILL BE   ASSIGNED NEW SEQUENCE
NUMBERS BY @K IEBUPDTX, @K AND MUST NOT CONTAIN         ANY PUNCHES IN C
OLUMNS 73-80. @KTHE CARDS ARE INSERTED AFTER @U SOME            EXISTING
 CARD IMAGE IN THE OLD MASTER, WHOSE SEQUENCE NUMBER YOU PROVIDE ON THE
  @K INSERT @K    COMMAND. @KTHE SIMPLEST FORM OF THE @K INSERT @K COMMA
ND      IS JUST @S2 @B10 ./ @K INSERT @K SEQ1 @U @S2 WHERE SEQ1 @U INDIC
ATES WHERE TO   INSERT THE NEW CARDS IN THE OLD MASTER. @KTHE @K INSERT
@K COMMAND MUST BE IMMEDIATELY FOLLOWED BY THE DATA CARDS TO BE INSERTED
. @KNOTE THAT THE INSERT COMMAND IS TERMINATED WHEN EITHER A NEW "./" CO
MMAND IS ENCOUNTERED
(EXCEPT @K COPY, GANG, MACRO, SEQUENCE@K )
                     OR WHEN A CARD WITH ANY NON-BLANK CHARACTERS IN COL
UMNS 73-80 IS ENCOUNTERED.                      @S2 @G @KIN ADDITION TO
@K SEQ@K 1, WHICH IS REQUIRED, YOU MAY                  MODIFY THE AUTOM
ATIC RENUMBERING PERFORMED BY THE    @K INSERT @K COMMAND       BY SPECI
FYING EITHER OR BOTH OF @K INCR @K AND @K NEW@K 1, E.G.
@S2 @B11 ./ @KI SEQ1,INCR,NEW1 @O ____\____\____     @G OR @B3
        ./ @KI @K SEQ@K 1=SEQ1,@K INCR@K =INCR,@K NEW@K 1=NEW1 @O
                \\\\\____\\\\\\____\\\\\\____ @S2 @G
                        @KWHEN YOU SPECIFY      @K NEW@K 1, YOU ARE TELL
ING THE UPDATE PROGRAM WHAT     NUMBER YOU WANT AS THE SEQUENCE NUMBER O
N THE FIRST INSERTED CARD. @KWHEN       YOU SEPECIFY @K INCR @K YOU ARE
SPECIFYING THE NUMBERING INCREMENT, AS ON THE    @K SEQUENCE @K COMMAND.
 @KWHEN       EITHER IS OMITTED, @K INCR @K DEFAULTS TO   1, AND @K NEW@
K 1 DEFAULTS TO @K SEQ@K 1+@K INCR@K .
(@KUNLESS THE @K PARM INCR @K WAS SPECIFIED, IN WHICH CASE @K INCR @K
WILL DEFAULT TO IT.)
@G @KTHE @K SEQUENCE@K  COMMAND MAY ALSO BE PLACED WITHIN THE RECORDS
BEING @K INSERT@K ED TO DYNAMICALLY MODIFY INCR @U AND NEW1@U.
@S2 @G @KCARDS MAY BE INSERTED BEFORE THE FIRST CARD IN THE OLD MASTER
BY USING @K SEQ@K 1=0, AS LONG AS THE FIRST SEQUENCE NUMBER IS
GREATER THAN OR EQUAL TO 1.
@S2 @G
@KSINGLE CARDS MAY BE INSERTED WITHOUT USING THE @K INSERT @K
COMMAND BY PUNCHING THE SEQUENCE NUMBERS THEY ARE TO HAVE DIRECTLY IN CO
LUMNS   73-80. @KFOR EXAMPLE, IF THE OLD MASTER CONTAINS CARDS NUMBERED
10,             20, 30, ETC., AND YOU PLACE A DATA CARD IN YOUR UPDATE D
ECK WITH 00000025       PUNCHED IN COLUMNS 73-80, IT WILL BE INSERTED BE
TWEEN CARDS 20 AND 30            AND, OF COURSE, BE NUMBERED 25. @KTO IN
SERT IN THIS MANNER, IT IS IMPERATIVE THAT YOU DO NOT PLACE A NUMBER IN
COLUMNS 73-80 WHICH ALREADY EXISTS IN THE OLD MASTER - IF YOU DO, THE OL
D MASTER CARD IS @K DELETE@K D BEFORE THE NEW CARD IS INSERTED!   @S2 @G
                                                                 @KALSO
NOTE THAT YOU MUST USE THE @K INSERT @K COMMAND WHENEVER THE NUMBER OF C
ARDS          INSERTED EXCEEDS THE "ROOM" LEFT FOR THEM IN THE OLD MASTE
R -     IF THE OLD MASTER IS SEQUENCED IN STEPS OF 1, IT IS IMPOSSIBLE T
O INSERT USING THE SECOND METHOD DESCRIBED ABOVE, BUT THE @K INSERT @K C
OMMAND MAY STILL BE USED, SINCE IT AUTOMATICALLY RENUMBERS AS MUCH OF TH
E OLD MASTER AS IS NECESSARY TO    FIT THE  INSERTION IN. (@KHENCE IT IS
 A GOOD IDEA TO INITIALLY USE A         RELATIVELY LARGE INCREMENT WHEN
CREATING      OLD MASTERS, TO MINIMIZE THE NUMBER OF CARDS WHICH NEED TO
 BE RENUMBERED BY SUBSEQUENT INSERTIONS.)               @S2 @G @KYOU HAV
E ALREADY SEEN            TWO POSSIBLE WAYS TO @K REPLACE       @K @I ON
E OR MORE CARDS     IN THE OLD MASTER WITH NEW DATA CARDS. @KONE IS
TO USE A COMBINATION @K DELETE @K AND @K INSERT @K PAIR OF COMMANDS
        (@K IEBUPDTX @K ALLOWS THEM TO COME IN EITHER ORDER). @KTHE OTHE
R IS TO PUNCH THE DATA ON A CARD IN COLUMNS 1-72 WITH THE SEQUENCE NUMBE
R OF THE CARD TO BE REPLACED  IN COLUMNS 73-80. @KTHE THIRD WAY IS TO
 USE            THE @K REPLACE @K COMMAND, FOR EXAMPLE @S2 @B11
                                                ./ @K REPLACE @K 200-280
     @G OR @B3 ./ @K REPLACE @K  @K SEQ@K 1=200,@K SEQ@K 2=280     @G OR
 @B3 ./ @KR @I 200,280 @B10 (@K REPLACE @K ABBREVIATED @KR)     @S2 WHIC
H FIRST DELETES FROM 200 TO 280 INCLUSIVE, AND THEN INSERTS YOUR NEW DAT
A WITH SEQUENCE NUMBERS BEGINNING AT 200. @KTHE DATA TO BE INSERTED MUST
          IMMEDIATELY FOLLOW THE @K REPLACE @K COMMAND IN @K SYSIN @K AN
D CONTAIN       BLANKS IN COLUMNS 73-80 (JUST LIKE FOR @K INSERT@K ).  @
S2 @G    @KTHE RENUMBERING OF THE REPLACEMENT CARDS MAY BE EXPLICITLY
           STATED AS FOR        @K INSERT @K BY USING @K INCR @K AND/OR
@K NEW@K 1, AND THE SECOND SEQUENCE NUMBER MAY BE OMITTED TO INDICATE TH
AT ONLY ONE CARD IS BEING REPLACED.  @KTHE      NUMBER OF CARDS INSERTED
 NEED NOT EQUAL THE NUMBER OF CARDS DELETED. @KEXAMPLE: @S2 @B11    ./ @
K REPLACE @K 200,@K INCR@K =5   @G OR                            @B3 ./
@K REPLACE @K 200,,5 @G OR @B3 ./ @K REPLACE @K 200,,5,200
@G OR @B3 ./ @K REPLACE @K @K SEQ@K 1=200,@K INCR@K =5,@K NEW@K 1=200
        @G OR @B3 ./ @K REPLACE @K 200,200,5,@K NEW@K 1=200
                @S2 @KNOTE THAT IF YOU ARE USING POSITIONAL OPERANDS FOR
 @K REPLACE @K          THE OMISSION OF @K SEQ@K 2 MUST BE EXPLICITLY IN
DICATED BY AN EXTRA COMMA. @KIF   @K INCR @K HAD NOT BEEN SPECIFIED AS 5
, IT WOULD HAVE DEFAULTED TO 1, AND WHERE @K NEW@K 1 WAS NOT SPECIFIED,
IT DEFAULTED TO 200.
               @S3 @G @KOF SPECIAL INTEREST IS THE ABILITY TO DEFINE THE
  DEFAULT @K INCR @K USED BY @K SEQUENCE@K , @K NUMBER@K , @K INSERT@K ,
 AND    @K REPLACE @K DETAIL CONTROL COMMANDS. @KTO DO THIS, SIMPLY CODE
 @K INCR@K =INCR  @O \\\\\____ AS ONE OF YOUR @K PARM @K OPTIONS, WHERE
INCR @U IS A DECIMAL     NUMBER GREATER THAN ZERO. @KTHIS WILL OVER-RIDE
 THE BUILT-IN DEFAULT INCREMENT   OF ONE.
@S1 @G @KTHIS AND OTHER @K PARM @K OPTIONS ARE DISCUSSED IN APPENDIX
@KI, NEAR THE END OF THIS WRITE-UP.
         @T__ __ __ __ __@
                     @S1 @G                      @KTHE USE OF THE @K NUM
BER @K @I COMMAND (SEE DOCUMENTATION OF @K IEBUPDTE@K )   IS NOT ENCOURA
GED.  @KIT MAY BE USED TO INSERT OR TO RENUMBER A RANGE OF THE OLD MASTE
R.
         @T__ __ __ __ __@
@S1 @G
@KOFTEN IT IS NECESSARY TO REPLACE AN ENTIRE CARD SIMPLY BECAUSE ONE WOR
D ON IT WAS MISSPELLED, FOR EXAMPLE, AN ASSEMBLY LANGUAGE OP-CODE. (@KMU
RPHY'S LAW REQUIRES THAT THE CARD WITH THE SMALLEST SUCH MISTAKE HAS THE
 LONGEST AND MOST       COMPLICATED OPERAND FIELD). @KRATHER THAN @K REP
LACE @K THE ENTIRE CARD, THE @K   FIX @K @I COMMAND (ABBREVIATED @KF@I)
MAY BE USED, FOR EXAMPLE: @S2 @B10      ./ @K FIX @K 2475          #@K L
PR@K #@K LCR@K #          @S2
               DIRECTS THE UPDATE PROGRAM TO SEARCH     COLUMNS 1-71 OF
THE OLD MASTER  CARD 2475 FOR THE FIRST OCCURRENCE OF THE STRING  "@K LP
R@K " AND REPLACE IT WITH THE STRING "@K LCR@K ". @KIT MAY BE NECESSARY
     TO SPECIFY MORE OF THE STRING YOU WANT TO REPLACE THAN JUST THE PAR
T YOU WANT REPLACED IF AN IDENTICAL STRING OCCURS BEFORE IT.
                @S2 @G @KTHE "BAD" AND "GOOD" STRINGS MAY BE DELIMITED B
Y ANY ARBITRARY NON-BLANK CHARACTER, AND MAY BE OF DIFFERENT LENGTHS (TH
E "GOOD" STRING MAY EVEN BE NULL). @KNOTE THAT AT LEAST ONE BLANK MUST F
OLLOW THE RANGE  SPECIFICATION (IN THE ABOVE EXAMPLE, THE RANGE CONSISTS
 OF A SINGLE CARD).                                @S2 @G @KTHE PARTIAL
SYNTAX OF THE @K FIX @K COMMAND IS @S2 @B10              ./ @K FIX @K SE
Q1,SEQ2 @O ____\____ #BAD#GOOD# @O \___\____ @S2                WHERE SE
Q1 AND SEQ2 SPECIFY THE RANGE, AS IN THE @K DELETE @K STATEMENT, # REPRE
SENTS ANY NON-BLANK CHARACTER NOT A MEMBER OF BAD @U OR GOOD, @O ____
        BAD @U REPRESENTS ANY STRING FROM 1 TO 32 CHARACTERS, AND GOOD @
U REPRESENTS ANY STRING FROM 0 TO 32 CHARACTERS. @KEACH CARD IN THE OLD
MASTER WHICH HAS SEQUENCE NUMBER WITHIN THE SPECIFIED @K FIX @K RANGE IS
 EXAMINED FOR ITS FIRST OCCURRENCE OF THE "BAD" STRING, AND THAT OCCURRE
NCE IS REPLACED BY THE "GOOD" STRING.   @S2 @G @KTHE @K FIX @K OPERATION
 OPERATES                                       FROM COLUMNS 1-71 BY DEF
AULT, SO THAT CONTINUATION CHARACTERS IN COLUMN 72
                        WILL                                   NOT BE AF
FECTED.     @KIF THE "GOOD" STRING IS SHORTER THAN THE "BAD" STRING, THE
 RIGHT END OF THE RESULTING RECORD IS PADDED WITH BLANKS.  @KIF THE "GOO
D" STRING IS LONGER THAN THE "BAD" STRING, INFORMATION TO THE RIGHT OF T
HE "BAD" STRING IS SHIFTED TO THE RIGHT. @KIF ANY INFORMATION IS LOST (B
ESIDES BLANKS) A WARNING INDICATION IS GIVEN.    @S2 @G
 @KTHE @K FIX @K COMMAND IS UNUSUAL IN THAT
  IT DOESN'T INTERFERE WITH OTHER UPDATE COMMANDS. @KTHAT IS, YOU MAY SP
ECIFY MORE THAN ONE @K FIX @K ACTIVE ON A GIVEN CARD, OR YOU MAY HAVE A
@K FIX @K ACTIVE ON A RANGE OF CARDS AND STILL           MAKE INSERTIONS
 AND DELETIONS WITHIN THE RANGE. (@KINSERTED CARDS WILL NOT BE @K FIX@K
ED,  THOUGH). @S2 @G
@KA SIMILAR COMMAND IS @K SCAN@K @I (ABBREVIATED @KS@I). @K SCAN @K DOES
 THE SAME THING WHICH @K FIX@K   DOES, EXCEPT MORE OF IT.  @KUNDER @K SC
AN,@K           EVERY @U OCCURRENCE OF THE "BAD" STRING IS REPLACED, NOT
 JUST THE FIRST.  @KTHUS IT SHOULD BE NOTED THAT @K SCAN @K IS SOMEWHAT
LESS EFFICIENT THAN @K FIX@K .
@S2 @G @KTO SPECIFY THE ENTIRE OLD MASTER AS THE RANGE FOR @K SCAN @K
OR @K FIX@K , YOU MAY USE @K SEQ@K 1=@K ALL@K .
@S2 @G @KNOTE THAT IF SEVERAL @K SCAN@K /@K FIX @K COMMANDS
APPLY TO THE SAME OLD MASTER RECORD, THEY ARE APPLIED SEQUENTIALLY
IN THE SAME ORDER THEY WERE READ.
                                @S2 @G  @KCOMMENTS MAY BE PLACED ON UPDA
TE COMMANDS BY PLACING AT LEAST ONE BLANK AFTER THE LAST OPERAND AND FOL
LOWING IT (THEM) WITH YOUR COMMENT. @KIF YOU REALLY HAVE A LOT TO SAY, T
HE @K NOTE @K @I DETAIL COMMAND MAY BE USED:            @S2 @B10 ./ @K N
OTE @K COMMENTS @S2 @G @KNOTE THAT @K NOTE @K MAY ONLY BE USED UNDER THE
 RANGE OF A @K CHANGE @K OR @K ADD @K COMMAND.
@H2ADDITIONAL DETAIL COMMANDS@ @TIV.  ADDITIONAL DETAIL STATEMENTS@
        @G  @KTHE DETAIL STATEMENTS DESCRIBED IN SECTION @K III @K WERE
ALL             EXPLICITLY CONCERNED WITH THE UPDATE PROCESS. @KTHE DETA
IL COMMANDS             PRESENTED HERE MAY BE USED WITH @K CHANGE @K OR
@K ADD @K TO PROVIDE SERVICES WHICH DO NOT AFFECT THE BASIC UPDATE IN PR
OGRESS, BUT MAY STILL BE USEFUL. @S2 @G  @KTHE @K ALIAS @K @I COMMAND MO
DIFIES THE @K CHANGE @K OR @K ADD @K COMMAND     WHICH IT FOLLOWS BY SPE
CIFYING AN ADDITIONAL NAME BY WHICH THE MEMBER BEING    STORED      IN @
K SYSUT@K 2 (@K PDS@K ) MAY BE REFERENCED.                      @KTHE @K
 ALIAS @K COMMAND IS WRITTEN AS @S2 @B11
./ @K ALIAS @K NAME @U @G OR @B3 ./ @K ALIAS NAME@K =NAME @O \\\\\____
        @G OR @B3 ./ @K ALIAS MEMBER@K =NAME @O \\\\\\\____ @S2 @G
@KAT MOST SIXTEEN @K ALIAS @K COMMANDS    MAY BE USED PER @K ADD@K /@K C
HANGE@K , AND MAY BE PLACED ANYWHERE BEHIND  THE @K ADD@K /@K CHANGE @K
WHICH IT MODIFIES, PREFERABLY AFTER THE LAST DETAIL CARD.  @S2 @G
                                        @KTHE @K GANG @K @I COMMAND SPEC
IFIES AN IDENTIFICATION CODE OF UP TO 8         ALPHANUMERICS WHICH ARE
TO BE PLACED (IN THE MANNER OF GANG-PUNCHING) IN EACH   DATA CARD INSERT
ED INTO THE NEW MASTER BY THE UPDATE DECK IN @K SYSIN@K ,       OR AS A
RESULT OF A @K SCAN@K /@K FIX @K OPERATION  EFFECTED BY @K SYSIN@K .
@S2 @G @KTHE @K GANG @K COMMAND IS WRITTEN AS: @S2 @B11
        ./ @K GANG @K CODE,COL @O ____\___ @G OR @B3 ./ @KG @I CODE @U
                @G OR @B3 ./ @KG @K CODE@K =CODE,@K COL@K =COL @O \\\\\_
___\\\\\___             @S2 WHERE CODE @U IS THE STRING TO BE GANG-PUNCH
ED, AND COL @U IS THE COLUMN IN   WHICH THE CODE @U IS TO BEGIN. @KIF CO
L @U IS OMITTED, THE CODE @U IS PLACED IN COLUMN 72-LENGTH(CODE) SO THAT
 THE GANGED STRING ENDS IN COLUMN 71.           @S2 @G @KIT IS ALSO POSS
IBLE TO CODE @K SSI @K @I FOR THE CODE @U               IN WHICH CASE TH
E @K SSI @K SPECIFIED ON THE @K ADD@K /@K CHANGE @K CARD IS USED  (LAST
4 DIGITS ONLY). @KSEE SECTION ON ADDITIONAL UPDATING FEATURES FOR A
DESCRIPTION OF @K SSI@K .   @S2 @G
        @KIF CODE @U IS OMITTED, THE PREVIOUS @K GANG @K OPERATION IS TE
RMINATED. @G @KNOTE THAT @K GANG @K IS ONE OF THE FEW "./" CONTROL CARDS
 WHICH DOES NOT TERMINATE AN @K INSERT @K OPERATION, PERMITTING YOU TO A
LTER THE @K GANG @K AT ANY TIME.   @S2 @G @KTHE @K COPY @K @I COMMAND PR
OVIDES THE ABILITY TO ENTER DATA FROM A  SEPARATE LIBRARY INTO @K SYSIN
@K (EXCEPT THAT @K COPY@K -ED DATA IS NOT @K GANG@K ED). @KTHE DATA FETC
HED AS A RESULT OF A @K COPY @K COMMAND IS FOUND IN THE  @K PDS @K DESCR
IBED BY THE @K DDNAME @K OF @K SYSLIB @K @I (UNLESS OVER-RIDDEN). @KIF S
UCH A "COPY LIBRARY" IS NOT PROVIDED, @K IEBUPDTX @K WILL TERMINATE WITH
 RETURN CODE 12. @S2 @G
        @K COPY @K IS VALID WITHOUT RESTRICTION UNDER @K ADD@K , BUT MUS
T BE IN RANGE OF AN ACTIVE @K INSERT @K WHEN USED UNDER @K CHANGE@K . (@
K COPY @K COMMANDS THEREFORE DO NOT TERMINATE ACTIVE @K INSERT@K S). @KT
HE @K COPY @K COMMAND IS MOST SIMPLY WRITTEN AS      @S2 @B11 ./ @K COPY
 @K NAME @U                             @G OR @B3 ./ @K COPY @K @K NAME@
K =NAME @O \\\\\____ @G OR @B3                  ./ @K COPY MEMBER@K =NAM
E @O \\\\\\\____ @S2                                    WHICH SPECIFIES
THAT ALL RECORDS OF THE NAMED MEMBER OF @K SYSLIB @K ARE TO     LOGICALL
Y REPLACE THE @K COPY @K COMMAND IN @K SYSIN @K (IF UNDER @K CHANGE, @K
  THE SEQUENCE FIELD 73-80 IS AUTOMATICALLY BLANKED). @S2 @G
        @KADDITIONAL FEATURES OF @K COPY @K (WHICH ARE NOT EFFICIENT TO
USE BUT ARE PROVIDED FOR EMERGENCIES) INCLUDE THE ABILITY TO SPECIFY THE
 @K DDNAME @K OF THE    COPY LIBRARY TO BE USED TO PERFORM THE CURRENT @
K COPY @K OPERATION             (DEFAULT IS @K SYSLIB@K ), AND THE ABILI
TY TO SPECIFY A RANGE OF SEQUENCE       NUMBERS TO BE COPIED. @S2 @B11
                                                  ./ @K COPY @K NAME,,FR
OMSEQ,TOSEQ,@K DDNAME@K =DDNAME                         @O ____\\_______
\_____\\\\\\\\______  @S   (OMITTED OPERAND)                      @S2 @K
IF FROMSEQ @I @U IS OMITTED, THE @K COPY @K BEGINS FROM THE FIRST CARD
IN THE MEMBER.
@KIF @K TOSEQ@K  IS OMITTED, IT DEFAULTS TO THE LAST CARD IN THE MEMBER,
 UNLESS FROMSEQ @U WAS SPECIFIED, IN WHICH CASE ONLY ONE CARD
IS COPIED.
                                    @K FROMSEQ@K =0 AND @K TOSEQ@K =@K E
ND @K MAY BE CODED TO EXPLICITLY REQUEST THE DEFAULTS. @KDDNAME @U MUST
BEGIN WITH THE THREE    LETTERS @K SYS. @K
                                @S4 @G @KTHE @K MACRO @K @I COMMAND IS S
IMILAR TO @K COPY @K EXCEPT THAT UNDER @K CHANGE @K IT NEED NOT FOLLOW A
N @K INSERT. @K @KTHE COPIED DATA WILL BE WRITTEN TO @K SYSUT@K 2 AT WHA
TEVER POINT THE UPDATE HAPPENS TO BE, AND WITH WHATEVER  SEQUENCE INFORM
ATION HAPPENS TO BE IN THE COPIED MEMBER. @S2 @G                @KTHE @K
 MACRO @K COMMAND IS RESTRICTED IN THAT YOU CAN NOT SPECIFY A RANGE
 OF CARDS TO BE COPIED (YOU ALWAYS GET 0-@K END@K ),  AND YOU CAN NOT OV
ER-RIDE  THE @K DDNAME @K OF THE LIBRARY. @S2 @G
                @KNOTE (FOR REFERENCE ONLY) - @K MACRO @K COMMANDS ARE I
GNORED IF NOT IN THE    PRIMARY CONTROL FILE (@K SYSIN@K ).
@KDATA INSERTED USING @K MACRO@K  IS NOT LISTED (UNLESS THE
@K LIST@K =@K ALL@K  OPTION WAS SELECTED ON THE @K CHANGE@K /@K ADD@K
COMMAND). @KIT IS ALSO NOT INCLUDED IN THE @K DECK@K  OPTION'S OUTPUT.
 @S2                            @KNOTE - @L20 @S1  "./" CONTROL STATEMEN
TS WHICH ARE COPIED ARE TREATED AS DATA. @K A CHANGE @K COMMAND MAY BE U
SED TO COPY FROM @K SYSUT@K 1 TO @K SYSUT@K 2   AND AN @K ADD @K - @K CO
PY @K COMBINATION MAY BE USED TO COPY FROM ANY @K SYS @K  DDNAME TO @K S
YSUT@K 2. @L15
 @S3 @G @KTHE @K LOCATE @K COMMAND,         @S2
@B11 ./ @K LOCATE SEQ@K 1=SEQ1 @O \\\\\____      @S
@B8 OR ./ @KL SEQ1 @U
@S2 MAY BE USED TO FORCE THE OLD MASTER FOWARDS TO CONTROL INTERACTION
BETWEEN @K SCAN @K OR @K FIX@K , AND @K GANG@K .
                                                           @S1  @H2ADDIT
IONAL PDS HANDLING COMMANDS@ @TV.  ADDITIONAL PDS HANDLING COMMANDS@
@S @G @KTHE FOLLOWING COMMANDS ARE USEFUL FOR @K PDS @K MAINTENANCE, ALO
NG      WITH THE @K SCRATCH @K
AND @K RENAME@K  COMMANDS DESCRIBED IN SECTION @K II.@K
                @S3 @G @KIT IS OFTEN DESIRABLE TO @K LIST @K @I THE SOUR
CE DATA IN A @K PDS @K  MEMBER. @KTHIS COULD BE DONE USING THE @K CHANGE
 @K COMMAND TO UPDATE THE DESIRED MEMBER, WITH @K SYSUT@K 2 DIRECTED TO
A PRINTER AND A NULL CHANGE-UPDATE DECK,  OR BY HAVING @K SYSUT@K 2 BE T
HE @K DUMMY @K @I DATA SET, AND SPECIFYING @K LIST@K =@K ALL.  @K @KUNFO
RTUNATELY, THIS LIMITS YOUR  LISTING  CAPACITY          TO @K SYSUT@K 1
(UNLESS YOU USE AN @K ADD @K - @K COPY @K COMBINATION),         AND REQU
IRES YOU TO RUN A SEPARATE STEP IF YOU ALSO WISH TO PERFORM UPDATES.
(@KOR TO USE THE @K INDD@K  AND @K OUTDD@K  PARM OPTIONS, WITH
ADDITIONAL @K DD@K  CARDS).
@S2 @G @KTHE @K LIST  @K         COMMAND PERMITS YOU TO LIST THE CONTENT
S OF A @K PDS @K  MEMBER IN A MORE NATURAL AND EFFICIENT MANNER, AND IS
WRITTEN AS FOLLOWS:  @S2 @B11 ./ @K LIST @K NAME @U @G OR @B3 ./ @K LIST
 NAME@K =NAME @O        \\\\\____ @G OR @B3 ./ @K LIST MEMBER@K =NAME @O
 \\\\\\\____ @S2                TO LIST A MEMBER FROM @K SYSLIB. @K @KTH
E @K DDNAME@K =DDNAME @O \\\\\\\______  PARAMETER MAY BE SPECIFIED TO SE
LECT ANOTHER LIBRARY TO LIST FROM.   @KIF YOU ARE LISTING MEMBERS FROM M
ORE THAN ONE LIBRARY, IT IS MOST EFFICIENT TO GROUP ALL   THE @K LIST @K
 CARDS FOR A PARTICULAR LIBRARY TOGETHER.
                                     @S4 @G
@KTHE @K LOAD @K @I COMMAND SIMPLIFIES THE PROBLEM OF CREATING A LIBRARY
 OF UPDATE (@K CHANGE @K AND @K ADD@K ) DECKS.  @KSIMPLY FOLLOW A "./ @K
 LOAD@K "       CARD (IN @K SYSIN@K ) WITH A SET OF UPDATE DECKS, AND TH
EY WILL BE STORED IN @K  SYSUT@K 2 UNDER THE NAMES GIVEN ON THEIR @K CHA
NGE @K AND @K ADD @K CARDS.     @S2 @G    @KTHE UPDATE DECKS BEING STORE
D MUST CONTAIN ONLY DETAIL UPDATING COMMANDS (AS A MAJOR COMMAND
WOULD BE EXECUTED, NOT LOADED),
                       AND ARE RESTRICTED IN THAT THEIR @K CHANGE@K /@K
ADD @K CARDS MAY NOT BE CONTINUED.
@S2 @G @KTHE @K LOAD@K  COMMAND WORKS SOMEWHAT DIFFERENTLY INTO A
CHAINED LIBRARY (@K VERSION@K =@K NEXT@K   IS IMPLIED; SEE BELOW).
@S3 @G
@KTHE @K GENALIAS @K COMMAND CREATES AN ALIAS ENTRY FOR AN EXISTING
MEMBER OF THE NEW MASTER @K PDS.@K   @KIT IS WRITTEN:
@S2 @B11  ./ @K GENALIAS NAME@K =NAME,@K NEWNAME@K =NEWNAME
@O \\\\\____\\\\\\\\\_______
@G OR @B3 ./ @K GENALIAS @K  NAME,NEWNAME @O ____\_______  @S2
@KNOTE THAT GENERATED ALIASES WILL CONTAIN NO USER DATA, AND THAT IF
NEWNAME @U ALREADY EXISTS, IT MUST BE @K SCRATCH@K ED BEFORE IT CAN
BECOME AN ALIAS.
                                                        @H2ADDITIONAL UP
DATING FEATURES@ @H3VERSION (CHAINED) LIBRARIES@                @TVI.  A
DDITIONAL UPDATING FEATURES@  @S @G @KTHE FEATURES DESCRIBED BELOW WERE
DELIBERATELY OMITTED FROM THE DISCUSSION IN SECTION @K II. @K @KKNOWLEDG
E OF THESE FEATURES IS NOT REQUIRED TO USE @K IEBUPDTX @K PROPERLY - BUT
 IS REQUIRED    TO USE @K IEBUPDTX @K ELEGANTLY. @T A. VERSION (CHAINED)
 LIBRARIES@             @S @G @KIN MANY CASES, IT IS NECESSARY TO UPDATE
 AN OLD MASTER MEMBER AND PLACE  THE RESULT IN @K SYSUT@K 2 TO TEST IT.
@KIF YOU USE THE SIMPLE @K CHANGE @K AND  @K ADD @K COMMANDS DESCRIBED I
N SECTION @K II, @K THE EFFECT OF AN UPDATE ON SOME MEMBER WILL AUTOMATI
CALLY DESTROY AN IDENTICALLY NAMED   MEMBER IN @K SYSUT@K 2.  @KTHE USE
OF @K VERSION @K @I ON YOUR @K CHANGE @K /@K ADD @K COMMANDS AVOIDS THIS
 POSSIBILITY BY AUTOMATICALLY ASSIGNING A UNIQUE NEW NAME TO THE
NEW MASTER AS IT IS STORED IN @K SYSUT@K 2. @S2 @G
        @KWHEN YOU USE @K CHAIN@K @IING, THE FIRST VERSION OF YOUR MEMBE
R IS STORED WITH  THE ACTUAL NAME @U FOUND ON YOUR @K CHANGE@K /@K ADD @
K CARD AS @K VERSION @K  0 (ZERO). @KIT LOOKS JUST LIKE A MEMBER STORED
IN ANY @K OS PDS @K - AND HENCE   ANY MEMBERS WHICH EXIST IN A LIBRARY B
EFORE YOU CONVERT TO @K CHAIN@K ING AUTOMATICALLY BEHAVE LIKE  VERSION 0
 MEMBERS. @KWHENEVER YOU STORE A NEW MEMBER INTO  @K SYSUT@K 2 WITH @K C
HAIN@K ING SPECIFIED, HOWEVER, YOU MUST DECLARE IT EXPLICITLY AS @K VERS
ION@K =0. @S2 @G                                                @KSO FAR
, NOTHING SPECIAL HAS HAPPENED. @KIT IS NOT UNTIL YOU STORE A
SECOND VERSION OF YOUR MEMBER IN @K SYSUT@K 2 THAT @K CHAIN@K ING IS ACT
UALLY IMPLEMENTED. @KWHEN @K CHAIN@K ING IS IMPLEMENTED FOR A    MEMBER,
 A SPECIAL MEMBER @K ID @K @I NUMBER IS OBTAINED FROM A SPECIAL DIRECTOR
Y ENTRY IN @K SYSUT@K 2 CALLED THE ALLOCATOR @I WRITTEN AS @@@K LLOCATR@
K @I AND ASSIGNED               TO THE  MEMBER. @KALL VERSIONS OF THIS M
EMBER WILL HAVE THIS MEMBER @K ID @K NUMBER IN COMMON.       @KTHE @K PD
S @K DIRECTORY ENTRY FOR VERSION ZERO OF THE  MEMBER IS EXPANDED TO INCL
UDE, AMONG OTHER THINGS, THIS @K ID @K NUMBER, AND      IS RE-WRITTEN (A
LONG WITH ANOTHER DIRECTORY ENTRY FOR VERSION ZERO'S SPECIAL "INTERNAL"
NAME) BACK TO @K SYSUT@K 2'S DIRECTORY. @S2 @G
@KNOW THERE ARE THREE DIRECTORY ENTRIES FOR THE TWO VERSIONS OF THE MEMB
ER - ONE HAS THE VERSION ZERO INTERNAL NAME AND POINTS TO (IE. CONTAINS
THE @K TTR @K @I OF) THE  ORIGINAL MEMBER, THE SECOND HAS THE INTERNAL N
AME REPRESENTING VERSION  ONE, AND POINTS TO THE  NEW MEMBER, AND THE TH
IRD HAS THE ACTUAL EXTERNAL MEMBER NAME OF THE MEMBER (WHICH YOU PUT ON
 THE @K CHANGE @K CARD TO REFER TO IT) AND STILL POINTS TO THE VERSION Z
ERO (ORIGINAL) MEMBER. @S2 @G                   @KSINCE THIS THIRD DIREC
TORY ENTRY (CALLED THE "PRODUCTION ALIAS" BECAUSE
                                                IT CONTAINS THE REAL "PR
ODUCTION" NAME OF THE MEMBER) STILL POINTS TO VERSION ZERO, ANY   REFERE
NCE MADE BY ANY @K OS   @K FUNCTION OR PROGRAM TO YOUR     @K CHAIN@K ED
   MEMBER NAME WILL CONTINUE TO PROVIDE THE SOURCE DATA IN VERSION ZERO.
 @KSIMILARLY,   REFERENCES            MADE BY @K IEBUPDTX @K AS DESCRIBE
D IN SECTION @K   II @K WILL ALSO PRODUCE ONLY VERSION ZERO. @KHENCE YOU
R VERSION IS STILL INVISIBLE TO THE OTHER USERS OF YOUR @K CHAIN@K ED LI
BRARY.                          @S2 @G @KNOTE, HOWEVER, THAT IF SOMEONE
(ESPECIALLY YOURSELF)                   RUNS AN UPDATE OF YOUR MEMBER SP
ECIFYING VERSION ONE AGAIN VERSION ONE          WILL BE REPLACED! @KIF Y
OU DON'T WANT THIS TO HAPPEN, PUT YOUR NEXT MEMBER IN AS  VERSION TWO (O
R AS @K VERSION@K =@K NEXT@K ). @S2 @G                          @KNOW TH
AT YOU HAVE SEVERAL VERSIONS OF YOUR MEMBER ALL STORED IN @K SYSUT@K 2
YOU MAY WONDER HOW YOU CAN TEST OR USE THEM, SINCE THE PRODUCTION ALIAS
STILL POINTS   TO VERSION ZERO. @KONE WAY IS TO @K COPY @K
 (OR @K MACRO@K )                                           OUT THE VERS
ION YOU WANT, PLACING IT WITHIN YOUR NEW MASTER (TEMPORARY) OUTPUT, AND
FEEDING THIS TO A COMPILER OR WHATEVER. @KAS SOON AS THE NEW VERSION IS
DEBUGGED, YOU MAY RE-WRITE THE PRODUCTION ALIAS TO POINT TO IT INSTEAD O
F VERSION ZERO BY USING THE @K CURRENT @K @I COMMAND: @S2 @B11 ./ @K CUR
RENT @K NAME-VERSION                            @O ____\_______ @G OR @B
3 ./ @K CURRENT @K NAME,@K VERSION@K =VERSION @O        ____\\\\\\\\\___
____ @S2 WHICH WILL SET THE PRODUCTION ALIAS TO POINT TO THE    VERSION
NUMBER WHICH YOU SPECIFIED ON THE @K CURRENT @K COMMAND.
@KNOTE THAT THIS DOES NOT CAUSE THE PREVIOUS "CURRENT" VERSION TO BE LOS
T, SINCE  IT IS STILL LOCATABLE BY ITS INTERNAL NAME. @KHENCE, YOU CAN A
LWAYS GET BACK TO THE PREVIOUS (WORKING) VERSION IN AN EMERGENCY BY USIN
G ANOTHER @K CURRENT @K  COMMAND.
@S2 @G @KVERSION NUMBERS ARE SPECIFIED ON @K ADD, CHANGE, SCRATCH,
CURRENT, LIST, COPY, @K AND @K MACRO@K  COMMANDS AS THE SECOND
POSITIONAL OPERAND, OR USING THE @K VERSION@K = OR @KV= KEYWORDS.
                                  @S2 @G @KIF YOU WISH TO @K SCRATCH @K
ANY PARTICULAR VERSION OF A MEMBER (AFTER WHICH YOU CAN NOT "GET BACK" T
O IT), SIMPLY USE THAT VERSION NUMBER ON THE @K SCRATCH @K COMMAND: @S2
@B11                                            ./ @K SCRATCH @K NAME,VE
RSION @O ____\_______  @S2 @KIT IS RECOMMENDED THAT YOU   @K SCRATCH @K
VERSIONS OF A MEMBER  IN DECREASING ORDER OF VERSION NUMBERS.  @S2 @G @K
NOTE - TO PREVENT ACCIDENTAL DELETION OF SOMEONE ELSE'S VERSION OF A MEM
BER, YOU MAY USE @K VERSION@K =@K NEXT @K ON AN @K CHANGE@K /@K ADD @K C
OMMAND. @KYOUR OUTPUT LISTING WILL TELL YOU WHICH VERSION NUMBER YOU SHO
ULD USE SUBSEQUENTLY TO REFERENCE THE VERSION CREATED (OR ATTEMPTED TO B
E CREATED) BY THAT      RUN. @S2 @G @KTHE FORMAT OF AN INTERNAL NAME  IS
 @S2                            @B12 @K |_______________________________
_______¬            @S @B12             @K |         TWO BYTE\\ | THREE
BYTE | THREE BYTE  | @S @B12                    | LIBRARY ID | MEMBER ID
\ | VERSION NO\| @S @B12 @K                             &_______________
_______________________/ @K  @S2 @KNOTE - @L20 YOU MAY USE (WITH  DUE CA
UTION) SUCH NAMES DIRECTLY IF YOU WISH, IN MOST CASES. @KDOING SO WILL
GENERALLY CAUSE @K VERSION@K =@K NEXT @K OPERATIONS TO WORK INCORRECTLY
        (POSSIBLY CAUSING AN OLD VERSION TO BE SCRATCHED).
@KTHIS ALTERNATIVE IS PROVIDED TO FACILITATE RECOVERY WHEN A
PRODUCTION ALIAS IS INADVERTANTLY SCRATCHED.  @L15
                @S2 @G @KALSO NOTE THAT WHEN YOU SPECIFY @K VERSION @K O
N A @K CHANGE @K CARD,  IT APPLIES ONLY TO THE NEW MASTER MEMBER NAME. @
KTHE PRODUCTION VERSION WILL BE UPDATED. (@KUSE OF @K ADD@K -@K COPY @K
AND RECURSIVE UPDATES MAY BE USED TO    UPDATE AN ARBITRARY VERSION.) @S
2 @G @KTO USE VERSION NUMBERS ON @K CHANGE@K /@K ADD @K COMMANDS, IT IS
NECESSARY THAT YOU INFORM @K IEBUPDTX @K THAT @K SYSUT@K 2 IS TO BE CONS
IDERED A @K CHAIN@K ED LIBRARY. @KTHIS IS DONE VIA THE @K EXEC PARMS @K
@I BY USING THE KEYWORD "@K CHAIN@K =@K ID@K " WHERE @K ID @K
WILL BE USED AS THE TWO BYTE LIBRARY ID FOR THE LIBRARY DEFINED BY
        @K SYSUT@K 2 IF IT DOESN'T ALREADY HAVE ONE. @KIT IS A GOOD IDEA
 TO GIVE EACH OF  YOUR LIBRARIES A UNIQUE @K ID @K SO THAT THERE WILL BE
 NO AMBIGUITY           POSSIBLE IF YOU CONCATENATE THEM LATER. @KIF THE
 LIBRARY YOU ARE USING          ALREADY HAS AN ID (HAS BEEN RUN ONCE BEF
ORE WITH @K CHAIN@K =@K ID @K SPECIFIED)  YOU MAY OMIT THE ID, CODING SI
MPLY "@K CHAIN@K ".                             @S2 @G @K VERSION @K NUM
BERS (BUT NEVER @K NEXT@K ) MAY BE USED AT ANY TIME ON @K SCRATCH@K , @K
 LIST@K , @K COPY@K , AND @K MACRO @K COMMANDS WHETHER OR NOT @K  CHAIN
@K WAS SPECIFIED ON THE @K EXEC @K CARD. @KWHEN @K CHAIN @K IS SPECIFIED
, ALL @K CHANGE @K AND @K ADD @K CARDS MUST STATE VERSION NUMBERS, AND @
K ALIAS, GENALIAS@K , AND @K RENAME
         @K MAY NOT BE USED.    @KWHEN @K CHAIN @K IS NOT SPECIFIED, VER
SION NUMBERS ON   @K  CHANGE@K /@K ADD @K CARDS ARE INVALID.
                        @H3RECURSIVE UPDATES@  @TB.  RECURSIVE UPDATES@
@G                              @KGIVEN AN ORIGINAL SOURCE MODULE AND TH
E UPDATE DECK NECESSARY TO GO           FROM LEVEL 0 TO LEVEL 1 OF THIS
MODULE, SUPPOSE THAT YOU WANT TO UPDATE AGAIN TO  LEVEL 2. @KIF THE LEVE
L 1 SOURCE MODULE IS AROUND, YOU HAVE NO                PROBLEMS, BUT FO
R     LARGE MODULES, IT MAY NOT BE PRACTICAL TO RETAIN COMPLETE   SOURCE
 AT EVERY LEVEL. @KGIVEN SUCH A SITUATION, YOU CAN EITHER 1) CREATE LEVE
L 1 (TEMPORARY) FROM LEVEL 0 AND UPDATE TO LEVEL 2, 2) UPDATE THE LEVEL
1       UPDATE DECK AND UPDATE DIRECTLY FROM LEVEL 0 TO LEVEL 2 (A VERY
RISKY PROCEDURE!), OR 3) USE TWO UPDATE DECKS RECURSIVELY. @S2 @G
                        @KWHEN YOU USE TWO OR MORE UPDATE DECKS AT THE S
AME TIME TO UPDATE A SINGLE MEMBER YOU ARE PERFORMING A "RECURSIVE UPDAT
E." @B1
    @KIT IS DEFINED BY (FOR EACH OLD MASTER CARD IMAGE)  @S2 @B12
                                                LEVEL 2 = UPDATE2(UPDATE
1(LEVEL 0)). @S2 @G                                     @KNOTE THAT THIS
 IS REALLY A "NESTED" UPDATE. @G @KTO PERFORM SUCH AN UPDATE, YOU  WOULD
 INPUT THE LEVEL 2 UPDATE DECK (WHICH UPDATES LEVEL 1 TO LEVEL 2) VIA TH
E @K CONTROL FILE@K , AND THE LEVEL 1 UPDATE DECK VIA AN @K INTERMEDIATE
 @I UPDATE FILE@K .
                  @S2 @G @KAN INTERMEDIATE      CONTROL FILE IS IDENTIFI
ED TO @K IEBUPDTX @K BY   ANY @K DDNAME @K WHICH DOES NOT BEGIN WITH THE
 LETTERS @K SYS. @K @KIF YOU USE  MORE THAN ONE    INTERMEDIATE UPDATE F
ILE, THEY ARE APPLIED IN THE ORDER OF   YOUR @K DD JCL @K STATEMENTS WHI
CH IDENTIFY AND DEFINE THEM. @K SYSIN @K IS     ALWAYS APPLIED LAST, IRR
ESPECTIVE OF THE PLACEMENT OF THE @K SYSIN DD @K        STATEMENT IN YOU
R @K JCL. @K @KIT MAY BE CONVENIENT   TO CONSIDER @K SYSUT@K 1 AS UPDATE
 LEVEL 0, WHICH OF COURSE ALWAYS COMES FIRST. @S2 @G
 @KWHEN YOU ARE USING INTERMEDIATE UPDATE FILES, THE MEMBER NAME FOUND O
N THE @K SYSIN CHANGE @K CARD IS USED TO LOCATE THE UPDATE DECKS WHICH C
ORRESPOND       TO THE SAME MEMBER IN THE INTERMEDIATE FILES. @KAN INTER
MEDIATE UPDATE FILE MAY BE SEQUENTIAL OR PARTITIONED. @KIF IT IS SEQUENT
IAL, THE ORDER OF UPDATES MUST FOLLOW THE ORDER OF @K CHANGE @K CARDS IN
 @K SYSIN@K ; IF IT IS PARTITIONED, THE   UPDATE PROGRAM CAN LOCATE INTE
RMEDIATE UPDATE DECKS AUTOMATICALLY FOR YOU.    @KIT IS HIGHLY RECOMMEND
ED THAT IF YOU ARE PERFORMING MORE THAN ONE UPDATE IN A   SINGLE JOB STE
P THAT YOU USE    PARTITIONED INTERMEDIATE UPDATE FILES.        (@KNOTE
THAT THE @K SEQID @K @I OPTION, DESCRIBED LATER, WILL NOT FUNCTION WELL
  WITH SOME SEQUENTIAL INTERMEDIATE SITUATIONS.
@KIF YOU ARE USING @K SEQID, INCR, @K OR @K NEW@K 1 ON AN
INTERMEDIATE @K CHANGE @K CARD, YOU SHOULD PROVIDE DUMMY
@K CHANGE @K CARDS AS PLACE HOLDERS FOR MEMBERS NOT BEING
UPDATED AT THIS LEVEL.) @B1
                                                 @KIT IS PERMISSIBLE TO
OMIT AN   UPDATE FOR ANY @K SYSIN @K NAMED UPDATE FROM AN INTERMEDIATE U
PDATE LIBRARY. @KIT IS ALSO PERMISSIBLE FOR AN INTERMEDIATE     UPDATE D
ECK TO SPECIFY THE @K ADD @K FUNCTION, IN WHICH CASE THE SOURCE DATA FRO
M THAT MEMBER WILL BE USED AS THE OLD MASTER.   @S2 @G  @KTHE RECURSIVE
UPDATING TECHNIQUE IS SOMETIMES CONVENIENT EVEN WHEN YOU ONLY WANT A SIN
GLE UPDATE PER MEMBER, SINCE YOU COULD PUT ALL YOUR UPDATE DECKS IN A SI
NGLE @K PDS @K (USING THE @K LOAD @K FUNCTION) AND SELECT THE UPDATES DE
SIRED WITH SIMPLE @K CHANGE @K CARDS IN @K SYSIN@K .            @KIT IS
ALSO USEFUL IF YOU WISH TO UPDATE SOMETHING FROM A LIBRARY OTHER THAN TH
E OLD MASTER FILE DEFINED BY @K SYSUT@K 1 (FOR INSTANCE, IF @K SYSUT@K 1
 HAS AN   IDENTICALLY NAMED MEMBER WHICH      YOU DON'T WANT TO UPDATE)
SINCE YOU CAN USE  AN @K ADD @K - @K COPY @K COMBINATION IN AN INTERMEDI
ATE FILE TO PROVIDE OLD  MASTER SOURCE. @S2 @G  @KALSO NOTE THAT ONLY UP
DATING COMMANDS ARE VALID IN INTERMEDIATE UPDATE DECKS. @KTHE @K LIST@K
, @K RENAME@K , @K GENALIAS@K ,
  @K SCRATCH@K , @K CURRENT@K , @K PARM@K , @K LOAD@K , @K ALIAS@K , AND
 @K MACRO @K COMMANDS ARE NOT FUNCTIONAL UNLESS  IN THE MAIN CONTROL FIL
E. @KIF @K SYSIN @K IS OMITTED (NOT RECOMMENDED), @K IEBUPDTX @K WILL US
E AN INTERMEDIATE FILE AS THE MAIN CONTROL FILE PROVIDED THAT THE LAST S
UCH FILE DEFINED IS SEQUENTIALLY ORGANIZED. @S2 @G
@KIT IS POSSIBLE TO HAVE @K IEBUPDTX @K PUNCH AN UPDATE DECK (TO THE FIL
E DESCRIBED BY @K DDNAME SYSPUNCH@K ) BY SPECIFYING THE @K DECK @K @I EX
EC PARM. @KAS LONG AS THE OLD MASTER COMES FROM @K SYSUT@K 1, AN @K IEBU
PDTE @K COMPATIBLE UPDATE DECK WILL BE PUNCHED WHICH IS EQUIVALENT TO TH
E UPDATE PERFORMED BY THE @K IEBUPDTX @K RUN. @KDECKS FOR SEVERAL MEMBER
S MAY BE PUNCHED IN ONE STEP            AND IF @K SYSPUNCH @K IS A @K
@I
      PDS @K WILL BE @K STOW@K ED BY NAME @U AUTOMATICALLY.
@H3CHAINED RECURSIVE UPDATES@
@TC.  CHAINED RECURSIVE UPDATES@
@S @G @KIF YOU HAVE SPECIFIED THE @K CHAINUPD @K PARM OPTION,
THEN @K IEBUPDTX @K WILL CHECK EACH INTERMEDIATE MEMBER UPDATE
FETCHED FROM A @K PDS @K TO SEE IF IT IS ACTUALLY THE PRODUCTION
ALIAS OF A CHAIN @U OF UPDATES.  @KIF THIS IS SO, EACH UPDATE IN
THE CHAIN FROM VERSION 0 THROUGH THE PRODUCTION ALIAS WILL AUTOMATICALLY
 BE APPLIED.  @KIF @K NOCHAINUPD @K HAD BEEN SPECIFIED (THE DEFAULT),
THEN ONLY THE PRODUCTION ALIAS UPDATE WOULD HAVE BEEN APPLIED.
                                                               @H3SEQUEN
CE FIELD IDENTIFICATION@ @TD.  SEQUENCE FIELD IDENTIFICATION@   @S @G @K
IN MANY CASES, YOU WILL FIND THAT YOUR OLD MASTER DOES NOT CONTAIN AN EI
GHT BYTE DECIMAL SEQUENCE MEMBER IN COLUMNS 73-80, BUT INSTEAD HAS SOME
ALPHABETIC STRING PRECEDING THE ACTUAL SEQUENCE NUMBER, WHICH THEN WILL
BEGIN IN COLUMN   73+LENGTH(SEQUENCE ID). @S2 @G @KTHESE LEADING ALPHABE
TICS ARE CALLED THE @K SEQID. @K @KTHIS FIELD IS HANDLED AUTOMATICALLY B
Y @K IEBUPDTX. @K @KTHAT IS, THE  FIRST OLD MASTER CARD IN @K SYSUT@K 1
(ONLY) IS EXAMINED FOR A @K SEQID. @K   @KIF ONE IS FOUND   THEN ALL OLD
 MASTER CARDS FROM @K SYSUT@K 1 HAVE ZEROS      AUTOMATICALLY PLACED OVE
R THE @K SEQID @K BEFORE THEY ARE USED BY THE PROGRAM. @KWHEN ANY CARD I
S SUBSEQUENTLY WRITTEN OUT TO @K SYSUT@K 2, THE @K SEQID @K IS  AUTOMATI
CALLY REPLACED STARTING
               IN COLUMN 73. @S2 @G   @KTHE @K SEQID @K KEYWORD MAY BE E
XPLICITLY CODED ON AN @K ADD @K (TO CREATE A SEQUENCE ID) OR A @K CHANGE
 @K (TO  CHANGE THE OLD SEQUENCE ID) CARD. @KSOME CAUTION  MUST BE USED
WHEN CODING @K SEQID @K ON A @K CHANGE @K CARD - THE LENGTH OF THE @K SE
QID @K MAY ONLY BE INCREASED, AND MUST NOT BE MADE LONG ENOUGH TO OVERLA
Y ANY NON-ZERO                  DIGIT OF THE SEQUENCE NUMBER. @KIT IS PO
SSIBLE TO CODE @K SEQID@K =0 TO INDICATE  THAT NO SEQUENCE ID IS DESIRED
 FOR THE NEW MASTER (THIS SPECIAL CASE STILL ALLOWS THE PROGRAM TO AUTOM
ATICALLY REMOVE THE @K SEQID @K FROM @K SYSUT@K 1 CARDS.)  @S2 @G @KNOTE
 THAT @K SEQID @K IS A GLOBAL OPTION, AND IS NOT HANDLED SEPARATELY FOR
EACH RECURSIVE UPDATE DECK. @KANY @K SEQID @K SPECIFIED BY A LOWER LEVEL
  UPDATE IS COMPLETELY OVERLAID BY SPECIFYING @K SEQID @K IN A HIGHER LE
VEL UPDATE'S @K CHANGE @K CARD.
@S2 @G @KIF YOU ARE USING A SEQUENTIAL INTERMEDIATE UPDATE DECK
WHOSE @K CHANGE @K CARD SPECIFIES ANY OF @K SEQID, INCR, @K OR
@K NEW@K 1, AND @U IF THE INTERMEDIATE UPDATE WILL NOT BE USED
IMMEDIATELY BECAUSE THE PREVIOUSLY PERFORMED UPDATE DIDN'T
UPDATE THE MEMBER NAME@UD ON ITS @K CHANGE @K CARD,
YOU MUST PROVIDE A DUMMY @K CHANGE @K COMMAND TO PRECEDE THE DELAYED
INTERMEDIATE UPDATE AS A PLACE-HOLDER.
(@KTHE NAME@U  ON THE PLACE-HOLDER'S @K CHANGE @K CARD
TO MATCH THE OMITTED INTERMEDIATE UPDATE).
                @H3SYSTEM STATUS INFORMATION@ @TE.  SYSTEM STATUS INFORM
ATION@ @S @G            @K A PDS @K DIRECTORY ENTRY MAY INCLUDE FOUR BYT
ES (EIGHT HEX DIGITS) OF @K SSI @K    DATA. @KTO SPECIFY THIS FEATURE, T
HE @K SSI @K KEYWORD IS CODED ON THE @K CHANGE@K /@K ADD @K CARD. @KIF @
K SYSUT@K 2 IS  NOT A @K PDS @K                 THE @K SSI @K IS IGNORED
, AND     IF @K SYSUT@K 1 IS A @K PDS @K WITH @K SSI @K IN ITS DIRECTORY
, IT IS RETAINED FOR USE IN THE @K SYSUT@K 2 DIRECTORY. @S2 @G  @KONCE @
K SSI @K IS SPECIFIED, IT CAN NOT BE REMOVED, BUT IT MAY BE MODIFIED. @K
THE DEFAULT @K SSI @K IS EITHER THE @K SSI @K PROVIDED BY THE PREVIOUS U
PDATE   LEVEL, OR @KX'@KF@KF200000' IF NECESSARY. @S2 @G @KYOU   CODE
                @K SSI@K =SSI @O \\\\___ ON THE @K CHANGE@K /@K ADD @K C
ARD AS UP TO EIGHT      HEX DIGITS, WHICH ARE ASSUMED BY @K IEBUPDTX @K
TO BE RIGHT JUSTIFIED IF NECESSARY. @KANY DIGITS SPECIFIED OVER-RIDE THE
 CORRESPONDING @K SSI @K DIGITS OF THE  PREVIOUS LEVEL'S @K SSI @K OR TH
E DEFAULT.                                        @H3SCAN-ING OR FIX-ING
 SPECIFIED SUBFIELDS@ @TF.  SCAN-ING OR FIX-ING SPECIFIED SUBFIELDS@  @G
 @KSOMETIMES IT IS DESIRABLE TO BE ABLE TO MODIFY ONLY A SUBFIELD OF AN
OLD MASTER RECORD USING @K SCAN@K /@K FIX @K AS WHEN YOU ARE CHANGING
  THE LENGTH OF THE OPERAND FIELD (@K BAL@K ) BUT STILL WANT THE COMMENT
S TO    BEGIN IN THE SAME COLUMN. @S2 @G @KTHE @K COL@K 1 @I AND @K COL@
K 2 @I KEYWORDS   MAY BE USED WITH @K SCAN @K AND @K FIX @K STATEMENTS T
O SPECIFY THE COLUMNS   OF THE OLD MASTER RECORDS TO BE MODIFIED. @KDEFA
ULTS ARE @K COL@K 1=1 AND @K COL@K 2=71. @KWHEN YOU SPECIFY THESE PARAME
TERS, YOU MUST HAVE @K COL@K 2 LESS THAN  OR EQUAL TO 72 AND @K COL@K 1
LESS THAN OR EQUAL TO THE VALUE OF @K COL@K 2.  @S2 @G @K COL@K 1 AND @K
 COL@K 2 MAY ALSO BE SPECIFIED POSITIONALLY, AS SHOWN IN THE EXAMPLE @K
FIX @K COMMAND BELOW, WHICH CHANGES AN ASSEMBLY LANGUAGE        OP-CODE
FROM       @KB TO @K BE@K .   @S2 @B11
./ @K FIX @K 42,,10-15 @B3 /@KB/@KB@KE/ @G OR @B3 ./ @K FIX @K
        42,@K COL@K 1=10,@K COL@K 2=15 @B2 /@KB/@KB@KE/ @S2 @KIT IS SLIG
HTLY MORE EFFICIENT TO SPECIFY COLUMNS WHEN THEY ARE KNOWN, AS THIS MINI
MIZES THE AMOUNT OF SEARCHING REQUIRED BY @K IEBUPDTX @K TO LOCATE THE "
BAD" STRING.                    @H3DIFFERENT MEMBER NAMES FOR OLD AND NE
W MASTERS@ @TG.  DIFFERENT MEMBER NAMES FOR OLD AND NEW MASTERS@ @G @KSO
METIMES IT IS DESIRABLE TO UPDATE A MEMBER OF A  @K PDS @K BUT TO @K STO
W @K IT IN @K SYSUT@K 2 WITH ANOTHER MEMBER NAME (PARTICULARLY WHEN @K S
YSUT@K 2 AND @K SYSUT@K 1 ARE THE SAME @K PDS@K ).              @KTHIS M
AY BE DONE MOST CONVENIENTLY BY SPECIFYING @K NEWNAME@K @I=NAME ON THE
  @K CHANGE @K COMMAND (ONLY ACCEPTED IN @K SYSIN@K ).
        @KWHEN THIS IS DONE, THE MEMBER SPECIFIED BY @K NAME@K = IS UPDA
TED AND THE RESULTING NEW MASTER IS @K STOW@K ED AS @K NEWNAME@K . @S2 @
G @KANOTHER WAY IS TO   SPECIFY @K NAME@K = THE NAME TO BE @K STOW@K ED
IN @K SYSUT@K 2 ON THE          @K CHANGE @K COMMAND, AND PROVIDE THE OL
D MASTER VIA AN INTERMEDIATE UPDATE FILE  WHICH @K ADD@K S USING THE @K
SYSUT@K 2 MEMBER NAME, AND @K COPIES @K FROM    @K SYSUT@K 1 USING THE N
AME OF THE DESIRED OLD MASTER MEMBER. @S2 @G @KAN       EXISTING @K SYSU
T@K 2 MEMBER MAY BE RENAMED WITHOUT COPYING USING THE @K        RENAME @
K @I COMMAND.
                                          @H3@ @H2 ./ USER UPDATING EXIT
S@  @TH.  WRITING "USER" UPDATING EXITS@
                                                        @G @KWITH @K IEB
UPDTX @K IT IS POSSIBLE TO DEFINE YOUR OWN UPDATE COMMANDS.     @KTO DO
THIS, IT IS NECESSARY TO WRITE A @K USER @K @I UPDATE EXIT ROUTINE IN AS
SEMBLY LANGUAGE AS DESCRIBED BELOW. @KTHIS PROGRAM IS LOADED FROM THE
          DEFAULT @K STEPLIB @K @I OR @K JOBLIB @K @I AND BRANCHED TO AS
 SPECIFIED       BY THE @K USER @K DETAIL COMMAND. @S2 @G @KTHIS COMMAND
 IS WRITTEN AS FOLLOWS:    @S2
                                  @B11 ./ @K USER NAME@K =NAME,@K SEQ@K
1=SEQ1,@K SEQ@K 2=SEQ2,@K CODE@K =CODE        @O  \\\\\____\\\\\\____\\\
\\\____\\\\\\____                                @G OR @B3 ./ @K USER @K
 NAME,SEQ1,SEQ2,CODE @O ____\____\____\____              @S2 WHERE @L25
@S @C20 NAME @U SPECIFIES THE ENTRY POINT NAME OF THE LOAD MODULE TO BE
USED AS THE @K USER @K EXIT ROUTINE, @S @C20 SEQ1 @U SPECIFIES THE SEQUE
NCE NUMBER OF THE FIRST OLD MASTER RECORD TO BE @K USER @K UPDATED, @S @
C20     SEQ2 @U SPECIFIES THE SEQUENCE NUMBER OF THE LAST OLD MASTER REC
ORD    TO BE    @K USER @K UPDATED (MAY BE OMITTED IF ONLY ONE RECORD IS
 TO BE UPDATED),        @S @C20 CODE @U IS ANY STRING OF FROM  ONE TO EI
GHT ALPHANUMERIC CHARACTERS     WHICH WILL BE MADE AVAILABLE TO THE @K U
SER @K EXIT ROUTINE, RIGHT JUSTIFIED    IN A DOUBLEWORD (IF OMITTED, COD
E @U DEFAULTS TO EIGHT BLANKS). @L15 @S2 @G     @KFOR EACH OLD MASTER CA
RD FOUND IN THE RANGE DEFINED BY SEQ1-SEQ2 @O           ____\____ @K IEB
UPDTX @K WILL BRANCH TO THE ENTRY POINT NAME @U OF THE EXIT     ROUTINE.
 @KTHE @K USER @K EXIT ROUTINE MAY DELETE, MODIFY, INSERT, OR LEAVE UNCH
ANGED AT OR BEFORE THE CURRENT OLD MASTER CARD. @KTHIS CHOICE MUST BE CO
MMUNICATED TO @K IEBUPDTX @K BY SETTING THE APPROPRIATE RETURN CODES IN
                REGISTER @KR15, AS FOLLOWS:   @L25 @S5 @C20
                        0 @C25 @KDO NOT MODIFY THE CURRENT OLD MASTER CA
RD.  @S2 @C20 4 @C25            @KDELETE THE CURRENT OLD MASTER CARD. @S
2 @C20 8 @C25 @KREPLACE THE OLD MASTER  CARD WITH THE SPECIFIED DATA (SE
E BELOW). @S2 @C20 12 @C25 @KINSERT SPECIFIED NEW DATA BEFORE THE CURREN
T OLD MASTER RECORD. @KBRANCH TO ME AGAIN WITH THE SAME  OLD MASTER RECO
RD. @S2 @C20 16 @C25 @KSTOP THIS MEMBER UPDATE (SEVERITY 8)     @L15 @S3
 @KTHE FOLLOWING REGISTERS ARE SET AT ENTRY TO THE EXIT ROUTINE:
    @S @L35 @C20 13-15 @C26 @KSTANDARD @KO@KS LINKAGE CONVENTIONS.
        @S2 @C20 1 @C26 POINTER TO 4 DOUBLEWORDS: @S2 @C30 0: @C35 @KTHE
 CODE @U VALUE  FROM THE @K USER @K COMMAND. @S2 @C30 8: @C35 @KWORK ARE
A: @KFIRST WORD SET TO ZERO FOR EACH NEW @K USER @K COMMAND (NOT @O \___
 FOR EACH NEW OLD MASTER CARD).  @KSECOND WORD INITIALLY ZERO (AT THE BE
GINNING OF EACH MEMBER UPDATE) BUT NOT CHANGED BY @K IEBUPDTX @K AFTER T
HAT. @S2 @C30 10: @C35 SEQ1 @U FROM THE @K USER  @K COMMAND
(@K EBCDIC@K  WITH LEADING ZEROS).
                                                             @S2 @C30 18
: @C35 SEQ2 @U FROM THE @K USER @K COMMAND. @S2 @C26    NOTES: CODE @U I
S RIGHT JUSTIFIED IN ITS EIGHT BYTE FIELD, BLANK IF OMITTED ON @K USER @
K COMMAND. @S2 @KTHE WORK AREA MUST BE USED TO
                                                       RETAIN INFORMATIO
N BETWEEN SUCCESSIVE INVOCATIONS OF THE EXIT ROUTINE, AS FOLLOWING AN IN
SERT. (@KTHIS IS  BECAUSE THE SAME ROUTINE MAY BE IN USE BY AN INTERMEDI
ATE UPDATE). @S2 @KIN GENERAL,   THE CONTENTS OF SEQ1 @U AND SEQ2 @U ARE
 UNIMPORTANT. @KSEQ2 @U MAY BE SET  EQUAL TO THE SEQ1 @U VALUE TO INHIBI
T ANY POSSIBLE FUTURE CALLS TO THE EXIT   ROUTINE  FOR THE CURRENT @K US
ER @K COMMAND, EXCEPT FOR THE CALL WHICH MUST FOLLOW AN INSERT REQUEST.
@KDO NOT SET SEQ1 AND SEQ2 IN ANY MANNER SO AS TO PREVENT THIS. (I.E., N
EVER SET SEQ2 @U LESS THAN THE SEQUENCE NUMBER OF THE CURRENT OLD MASTER
 CARD.)  @L26 @S2 @C20 2 @C26
@KTHE CONTENTS OF @KR2 + 6 POINT TO THE CURRENT OLD MASTER RECORD.
        (@KTHE FIRST 6 BYTES ARE THE IDENTIFICATION BYTES, AS SEEN IN TH
E LISTINGS -- EG. <01>, @K MAC @K , OR BLANKS). @KDO NOT @U MODIFY ANY O
F THE OLD MASTER DATA DIRECTLY.            @S2 @C20 3 @C26 @KREGISTER  @
KR3 POINTS TO 6 BELOW A 72 BYTE AREA  IN WHICH TO PLACE REPLACEMENT OR I
NSERTION DATA. (EG, @K MVC @K 6(72,@KR3),@K NEWREC@K \\\).
                                                @S2 @C20 4 @C26 @KREGIST
ER @KR4 POINTS TO @K PWA @K @I (THE @KPRINT @KWORK @KAREA)         OF @K
 IEBUPDTX,@K      AND MAY BE USEFUL IF MESSAGES ARE TO BE PRINTED FROM T
HE EXIT ROUTINE. @KNOTE THAT SUCH MESSAGES MUST BE PRINTED USING THE @K
  XPRNTLIN @K @I MACRO ONLY.  @L15 @S4 @G @KTHE @K USER @K EXIT ROUTINE
MUST BE   SERIALLY RE-USABLE, WITH NO MEMORY (OTHER THAN THE WORK AREA P
ROVIDED BY @K IEBUPDTX@K ) BETWEEN INVOCATIONS. @S2 @G @KTHE FOLLOWING D
ISCUSSION MAY BE HELPFUL IN USING THE @K USER @K FEATURE MOST EFFICIENTL
Y: @G @KWHENEVER A BRANCH TO A USER EXIT IS REQUIRED, @K IEBUPDTX @K COM
PARES THE ENTRY POINT NAME (SAVED FROM THE @K USER @K COMMAND) AGAINST A
 GLOBAL FIELD WHICH CONTAINS THE NAME OF THE ENTRY POINT LAST @K LOAD@K
ED. @KIF THE NAMES MATCH, @K IEBUPDTX @K                 BRANCHES DIRECT
LY TO THE EXIT ROUTINE. @KBUT IF THEY DON'T MATCH, @K IEBUPDTX    @K MUS
T FIRST ISSUE THE @K DELETE @K MACRO INSTRUCTION FOR THE PREVIOUS ROUTIN
E  (IF THERE WAS ONE) AND THEN THE @K LOAD @K MACRO INSTRUCTION FOR THE
NEW ENTRY POINT NAME. @KAFTER THE NEW EXIT ROUTINE IS LOADED, ITS NAME A
ND ADDRESS        ARE SAVED GLOBALLY. @G @KHENCE IT IS MOST EFFICIENT TO
 HAVE A SINGLE           @K USER @K EXIT ROUTINE PER UPDATE WHENEVER POS
SIBLE (ONE ROUTINE MAY PERFORM SEVERAL     FUNCTIONS BY TESTING THE CODE
 @U SPECIFIED ON THE @K USER @K COMMAND), AND LEAST EFFICIENT TO HAVE SE
VERAL SEPARATE       LOAD MODULES INVOKED IN A MIXED SEQUENCE.
                                  @S2 @G @KNOTE - IF @K SCAN @K OR @K FI
X @K IS ACTIVE ON THE SAME CARD IMAGE AS @K USER@K , THEN @K USER @K IS
APPLIED LAST (TO ALLOW THE EXIT ROUTINE TO DETECT, PERHAPS, IF THE IDENT
IFICATION FIELD OF THE OLD MASTER RECORD IS BLANK). @KOF COURSE, (UNLESS
 ONE USES INTERMEDIATE UPDATE FILES) ONLY ONE @K USER @K COMMAND CAN APP
LY TO AN OLD MASTER RECORD.
@S2 @G @KA 'GLOBAL' USER EXIT MAY BE SPECIFIED VIA THE PARM FIELD.
@KSUCH AN EXIT ROUTINE APPLIES TO EACH @U CARD ABOUT TO BE WRITTEN
INTO THE NEW MASTER, AND MAY ONLY IGNORE, MODIFY, OR DELETE.  @KIN
THIS CASE, MODIFICATIONS MAY BE APPLIED (BY THE EXIT ROUTINE)
DIRECTLY TO THE INPUT RECORD, WITHOUT MOVING IT.  @KFOR COMPATIBILITY,
THE GLOBAL EXIT IS CALLED WITH @KR2 = @KR3.
@KNOTE ALSO THAT ONLY  ONE GLOBAL EXIT MAY BE ACTIVE AT A TIME
AND THAT NO @K CODE @K MAY BE PASSED.
@KAN EXAMPLE OF A USER EXIT ROUTINE WHICH MAY BE EMPLOYED EITHER
LOCALLY OR GLOBALLY IS @K HERB, @K WHICH INSERTS A MINUS SIGN INTO
ASSEMBLY LANGUAGE MACRO STATEMENTS JUST AFTER THE OPERAND FIELD
(TO IMPROVE READABILITY OF ASSEMBLY LISTINGS).
@K HERB @K IS SUPPLIED WITH THE @K IEBUPDTX @K DISTRIBUTION TAPE.
                                                @H2APPENDIX I -- PARM OP
TIONS@ @P                                               @G @KTHE FOLLOWI
NG OPTIONS MAY BE INCLUDED IN THE @K PARM @K FIELD OF THE       @K EXEC
@K CARD OR IN A ./ @K PARM @K COMMAND.
@KWHEN SUPPLIED FROM THE @K EXEC PARM@K  FIELD, AT MOST 50 CHARACTERS
ARE ALLOWED.   ./@K  PARM@K  COMMANDS MAY SPECIFY SEVERAL OPTIONS
SEPARATED BY COMMAS, BUT MAY NOT BE CONTINUED.
                                            @S2 @KTHE PARM OPTIONS ARE G
IVEN BELOW WITH DEFAULTS     SHOWN FOR KEYWORD=VALUE TYPE PARAMETERS.
@KALL (@K NO@K )... TYPE PARMS EXCEPT @K LISTING @K DEFAULT TO
THE @K NO@K ... FORM.
                                      @L32 @S3 @C15 1. @K INCR@K =1 @C32
 @KRESET THE DEFAULT INCREMENT TO BE USED ON DETAIL CONTROL FUNCTIONS.
@S2 @C15 2. @K NOCHAIN @K @C32 .....
@S  @C19                                    @K CHAIN@K =ID @C32 @KSPECIF
IES THAT @K SYSUT@K 2 IS A @K CHAIN @K LIBRARY, AND THUS @K VERSION @K N
UMBERS BECOME REQUIRED ON @K CHANGE @K AND @K ADD @K CONTROL CARDS. @KTH
E "ID" IS A TWO LETTER LIBRARY IDENTIFICATION CODE, WHICH WILL BE USED T
O CREATE INTERNAL NAMES FOR NEW VERSIONS OF MEMBERS. @KONCE     THE ALLO
CATOR (@@@K LLOCATR@K ) HAS BEEN STOWED IN THE LIBRARY'S DIRECTORY, THE
 ID CAN NOT BE CHANGED. @KIF THE ID HAS BEEN SET PREVIOUSLY, YOU MAY COD
E @K CHAIN @K RATHER THAN @K CHAIN@K =ID.
                @S2 @C15 3. @K COND@K =8 @C32 @KRESET THE MAXIMUM ALLOWE
D SEVERITY ERROR MESSAGE. @KDEFAULT IS EIGHT, WHICH ALLOWS BOTH ERRORS F
ROM WHICH IMMEDIATE RECOVERY IS  POSSIBLE (SUCH AS AN INSERT OPERATION W
HICH DOESN'T PROVIDE ANY NEW DATA TO INSERT) AND ERRORS WHICH     REQUIR
E TERMINATION OF THE CURRENT MEMBER UPDATE, BUT ALLOW THE PROGRAM TO GO
ON TO THE NEXT UPDATE (IN @K SYSIN@K ). @K COND@K =4 PROHIBITS THESE
LATTER
   ERRORS FROM RECOVERY (MIGHT BE DESIRED WHEN @K SYSUT@K 2 IS SEQUENTIA
L), AND @K COND@K =0 FORCES TERMINATION FOLLOWING ANY
ERROR OR                                                     WARNING MES
SAGE (DESIRABLE WHEN YOU ARE TAKING @K SNAP @K @I DUMPS AFTER EACH ERROR
). @K COND@K =12 IS NOT RECOMMENDED. @KIT WILL ALLOW THE PROGRAM TO POSS
IBLY            RECOVER FROM SUCH THINGS AS SEQUENTIAL @K SYSLIB@K S, BU
T THEN AGAIN...         @S2 @C15 4.  (@K NO@K )@K LISTLEV @K   @C32
                                @KTELLS THE PROGRAM TO LIST INSERTIONS (
DELETIONS, IF APPLICABLE) CAUSED BY ALL  INTERMEDIATE UPDATE DECKS. @KDE
FAULT IS TO LIST ONLY CHANGES CAUSED BY @K SYSIN. @K  @S2 @C15 5. (@K NO
@K )@K LISTDEL @K @C32 @KCAUSES ALL DELETED RECORDS TO BE LISTED. @KDEFA
ULT IS NOT TO LIST ANY DELETED CARDS.  @KIF @K LISTLEV @K IS NOT  SPECIF
IED, ONLY CARDS DELETED FROM @K SYSIN @K CONTROLS WILL BE LISTED.
@KNOTE THAT OLD MASTER RECORDS ALTERED BY @K FIX @K OR @K SCAN @K ARE CO
NSIDERED  DELETED RECORDS.   @S2 @C15 6. (@K NO@K )@K LISTRN @K @C32
@KCAUSES ANY RENUMBERED STATEMENTS TO BE LISTED.
                              @S2 @C15 7.  (@K NO@K )@K GANG @K @C32
@KSPECIFIES THAT ALL CARDS INSERTED OR ADDED TO  @K SYSUT@K 2  (OR NEW M
ASTER) AS A RESULT OF COMMANDS INTERPRETED WITHIN AN UPDATE FILE ARE TO
HAVE THE LAST FOUR CHARACTERS OF THE @K SSI @K (WHICH IS THUS REQUIRED O
N ALL @K CHANGE @K AND @K ADD @K CARDS) PLACED IN COLUMNS  68-71.
      @KYOU MAY TEMPORARILY SPECIFY A DIFFERENT @K GANG @K OPERATION WIT
HIN A MEMBER    UPDATE VIA THE @K GANG @K DETAIL CONTROL CARD. @KFAILURE
 TO PROVIDE @K SSI @K FOR THE @K GANG @K OPERATION DOES NOT CAUSE THE UP
DATE TO FAIL UNLESS @K COND@K =0.
@S2 @C15 8. (@K NO@K )@K DECK@K  @C32
@KSPECIFIES WHETHER OR NOT AN @K IEBUPDTE@K  COMPATIBLE UPDATE
DECK EQUIVALENT (EXCEPT FOR SEQUENCING) TO THE FOLLOWING @K CHANGE@K
OPERATIONS IS TO BE PUNCHED OR WRITTEN TO @K SYSPUNCH@K  (WHICH MAY
BE PARTITIONED).
@KNOTE THAT IF THE NEW MASTER IS BASED IN ANY WAY ON DATA PROVIDED
BY AN @K ADD@K  COMMAND, NO @K DECK@K  WILL BE PRODUCED FOR THAT
MEMBER.       @S
@K DECK @K SHOULD NOT BE SPECIFIED IF ANY RESEQUENCING IS BEING
DONE, OR IF @K IMPLSEQ @K IS IN EFFECT.
                                @S2 @C15 9. (@K NO@K )@K NAMES
 @K @C32 @KSPECIFIES THAT CONTROL STATEMENTS HAVE NAME FIELDS
 (AND THUS        THE                                                BLA
NK(S) FOLLOWING THE "./" AND PRECEDING THE COMMAND WORD ARE REQUIRED).
  @KIF THE DEFAULT IS USED THE BLANKS MAY BE OMITTED, BUT IF THE NAME FI
ELD IS USED  @K NAMES @K MUST BE SPECIFIED.
                @S2 @C14 10. (@K NO@K )@K INSERT @K        @C32
                        @KWHEN @K INSERT @K IS SPECIFIED, COLUMNS 73-80
ON @K INSERT@K ED CARDS ARE TREATED AS BLANK NO MATTER WHAT THEY CONTAIN
, OTHERWISE THEY ARE CHECKED AND IF NON-BLANK, USED AS @K IEBUPDTE@K
CHANGE DATA RECORDS.                            @S2 @C14 11. (@K NO@K )@
K TIMES @K @C32                                          @K STOW @K A TI
ME STAMP IN THE @K SYSUT@K 2 DIRECTORY OF ALL @K CHANGED @K OR  @K ADDED
 @K MEMBERS IN THE FORM (4 BYTES = @K YYDDDHH@K +).
@S2 @C14 12. @K OUTDD@K =@K SYSUT@K 2    @C32   @KSPECIFIES THE @K DDNAM
E @K OF THE @KNEW @KMASTER DATA SET. @KIT MAY BE CHANGED ANY TIME BETWEE
N               MAJOR FUNCTION COMMANDS.
 @KANY @K DDNAME @K BEGINNING WITH @K SYS @K MAY BE USED.
 @S2 @C14 13. @K INDD@K =@K SYSUT@K 1  @C32 @KSAME AS ABOVE, BUT
RESPECIFIES THE OLD MASTER FILE NAME.
@S2 @C14 14. @K LIBDD@K =@K SYSLIB@K
    @C32  @KSAME AS ABOVE, BUT RESPECIFIES THE DEFAULT FOR
@K DDNAME@K = ON ./ @K COPY@K  OR ./ @K LIST@K  COMMANDS, AND THE
@K DDNAME@K  OF THE LIBRARY USED BY ./ @K MACRO@K  COMMANDS.
@S2 @C14 15. @K NOUSER@K  @C32  .....
@S  @C19 @K USER@K = @C32  @KSPECIFIES EXTERNAL NAME OF A GLOBAL
USER EXIT ROUTINE, OR CANCELS IT.
@S2 @C14 16.  (@K NO@K )@K CHAINUPD @K  @C32
@KSPECIFIES WHETHER OR NOT CHAINED MEMBERS FOUND AS INTERMEDIATE
UPDATES IN @K PDS@K S ARE TO BE APPLIED AS AN ORDERED SET OF
RECURSIVE UPDATES (OTHERWISE, ONLY THE PRODUCTION VERSION IS USED).
@S2 @C14 17.  (@K NO@K )@K LISTING @K  @C32
@KSPECIFIES IF LISTING OF UPDATE COMMANDS AND DATA IS TO BE
PROVIDED (@KDEFAULT IS @K LISTING@U@K ).
@K NOLISTING@K  WILL ALSO SUPRESS THE LISTING GENERATED BY
THE @K LOAD@K  COMMAND.
@S        @KNOTE - THIS OPTION OVERRIDES @K LIST@K =@K ALL@K .
@S2 @C14 18.  (@K NO@K )@K REWIND@K
                              @C32 @KSPECIFIES THAT A SEQUENTIAL
OLD MASTER BE REWOUND (BY TYPE @KT CLOSE) IF NECESSARY AT THE
START OF A NEW UPDATE.
@KTHIS PERMITS SUCCESSIVE UPDATING OF CERTAIN SEQUENTIAL FILES.
@S2 @C14 19.  (@K NO@K )@K SEQFIX @K   @C32
     @KSPECIFIES THAT LEADING DIGITS OF SEQ1 @U BE SUBSTITUTED FOR
LEADING ZEROS OF SEQ2@U,  AS IN ./ @KD 101-2.
@KTHIS WOULD OTHERWISE BE FLAGGED AS A SEQUENCE ERROR.
@S2 @C14  20.  (@K NO@K )@K IMPLSEQ@K  @C32
@KSPECIFIES THAT THE OLD MASTER (@K SYSUT@K 1) NEED NOT BE
SEQUENCED.  @KINSTEAD, AN IMPLICIT SEQUENCING IN STEPS OF ONE IS
ASSUMED.   @KIF THE OLD MASTER IS ACTUALLY SEQUENCED IN COLUMNS
73-80 WITH NO @K SEQID@K , THE @K DECK@K  OPTION WILL STILL WORK
PROPERLY.  @KTHE ORIGINAL CONTENTS OF COLUMNS 73-80 ARE SAVED WHEN
IMPLICIT SEQUENCING IS USED, AND RESTORED BEFORE THE NEW MASTER IS
WRITTEN.  @KDURING THE UPDATE, THE IMPLICIT SEQUENCE NUMBER IS
TEMPORARILY PLACED IN COLUMNS 73-80.
@S2 @C14  21.  (@K NO@K )@K LISTALL@K    @C32
@KSPECIFIES THAT @K LIST@K =@K ALL @K BE ASSUMED ON ALL
@K CHANGE@K /@K ADD @K COMMANDS.
@S2 @C14  22.  (@K NO@K )@K DECKQ  @K    @C32
@KALLOW @K DECK @K OUTPUT TO CONTAIN COMMANDS INCOMPATIBLE WITH
@K IEBUPDTE @K WHICH WILL CONTROL SEQUENCING.  @KTHIS OPTION SHOULD
NOT BE USED WHEN ANY RENUMBERING IS BEING DONE, OR WITH @K IMPLSEQ@K .
                                         @H2APPENDIX II  --  DD CARDS@ @
P                                               @L21       @C15 1. @C20
@K SYSPRINT @K @U - @KLISTING DATA SET, ALWAYS REQUIRED.   @KIF OMITTED
@K IEBUPDTX @K TERMINATES WITH RETURN CODE 16. @KTHIS FILE IS WRITTEN WI
TH @K DCB@K =(@K RECFM@K =@K VBM@K ).
@S2 @C15 2. @C20 @K SYSUT@K 2 @U - @KNEW @KMASTER DATA SET. @KTHIS FILE
IS GENERALLY REQUIRED. @K SYSUT@K 2 MAY BE SEQUENTIAL OR PARTITIONED, BU
T MUST HAVE FIXED LENGTH RECORDS OF LENGTH 80. @KIF @K BLKSIZE @K IS OMI
TTED PROGRAM DEFAULTS   IT TO 80.  @S2 @C15 3. @C20  @K SYSPUNCH @K @U -
 @K DECK @K DATA SET. @KREQUIRED                ONLY IF THE @K PARM DECK
 @K OPTION  IS SPECIFIED. @K SYSPUNCH @K    MAY HAVE ANY OF THE ATTRIBUT
ES VALID FOR @K SYSUT@K 2.                      @S2 @C15 4. @C20 @K SYSL
IB @K @U - @K COPY @K LIBRARY. @KREQUIRED ONLY IF @K LIST@K , @K COPY@K
, OR @K MACRO @K COMMANDS REFERENCE IT.        @KMUST BE A      @K PDS @
K WITH 80 BYTE FIXED LENGTH RECORDS, OPTIONALLY BLOCKED.
@S2 @C15 5. @C20 @K SYSUT@K 1 @U - @KOLD @KMASTER DATA SET. @KREQUIRED O
NLY IF @K CHANGE @K COMMANDS ACTUALLY REFER TO IT FOR ORIGINAL SOURCE RE
CORDS. @KMAY BE SEQUENTIAL OR PARTITIONED, WITH OPTIONALLY BLOCKED 80 BY
TE FIXED LENGTH RECORDS.  @S2 @C15 6. @C20 @K SYSIN @K @U - @KMASTER CON
TROL FILE. @KGENERALLY REQUIRED   TO PROVIDE THE MAIN SOURCE OF CONTROL
STATEMENTS TO THE PROGRAM, BUT MAY BE OMITTED IF AN INTERMEDIATE UPDATE
CONTROL FILE WHICH IS SEQUENTIALLY ORGANIZED WOULD HAVE BEEN IMMEDIATELY
 BELOW @K SYSIN @K IS PROVIDED (SEE BELOW). @KIN THAT CASE, THE INTERMED
IATE FILE IS USED AS @K SYSIN@K . @K SYSIN @K MUST BE SEQUENTIAL, WITH O
PTIONALLY BLOCKED FIXED LENGTH 80 BYTE RECORDS.  @S2 @C15 7. @C20
@K SYSUBEND @K @U - @K SNAP @K DATA SET. @KIF THIS @K DDNAME @K IS PRESE
NT, THE PROGRAM WILL PRODUCE A @K SNAP @K DUMP WITH EACH ERROR MESSAGE.
@S2 @C15 8.     @C20 @K INTERMEDIATE UPDATE FILES @K @S @KAN INTERMEDIAT
E UPDATE FILE IS PROVIDED TO @K IEBUPDTX @K BY USING ANY @K DDNAME @K TH
AT DOESN'T BEGIN WITH "@K SYS@K " TO DESCRIBE IT. @KTHESE FILES MAY BE S
EQUENTIAL OR PARTITIONED,               CONTAINING OPTIONALLY BLOCKED 80
 BYTE RECORDS. @KTHE INTERMEDIATE UPDATE DATA SETS SHOULD CONTAIN VALID
@K IEBUPDTX @K UPDATE DECKS WHICH WILL BE               CONSIDERED TO AP
PLY LOGICALLY BETWEEN @K SYSUT@K 1 AND @K SYSIN @K IN @K TIOT   @K ORDER
. @KIN SUCH CASES, @K SYSUT@K 1 IS  UPDATED BY THE INTERMEDIATE UPDATE,
  WHOSE OUTPUT BECOMES "OLD MASTER" TO THE NEXT UPDATE OR @K SYSIN@K .
        @S2 @C15 @K NOTES@K - @KANY NON-@K SYS @K FILES ARE CONSIDERED T
O BE INTERMEDIATE UPDATE FILES EXCEPT THE OBVIOUS ONES (@K STEPLIB@K , E
TC.).                   @KANY OTHER @K SYS @K @K DDNAME @K MAY BE USED
FOR THE @K DDNAME @K CONTROL ON @K COPY @K OPERATIONS OR THE @K OUTDD@K
 AND @K INDD @K    PARM OPTIONS.
@S  @KTO SAVE CORE OR TIME, @K BUFNO@K  MAY BE SPECIFIED FOR ANY
FILE VIA THE @K DCB@K  PARAMETER ON THE @K DD@K  CARD.  @KNOTE THAT
CHAINED SCHEDULING IS USED ON ALL NON-PRINT FILES WHEN NOT SINGLE
BUFFERED.
@K BUFNO@K =2 IS THE DEFAULT FOR ALL @K DCB@K S.
              @H1@ @H3 @
@L15 @J0      @H2@
@P                 @TCOMMANDS AND MAXIMAL POSITIONAL OPERANDS@
@S1 @K COMMAND @K @U  @C25
@K POSITIONAL @U AND @U KEYWORD @U OPERANDS @U
@C62 SYNONYMOUS @U COMMANDS @U @K
@S2
@S1 @K ADD @K @C25 NAME,VERSION,SSI,@K INCR@K =,@K NEW@K 1=,@K SEQID@K =
,@K LIST@K =@K ALL@K
@C75 @K A, REPL @K
@S1 @K ALIAS @K @C25 NAME
@S1 @K CHANGE @K @C25  NAME,VERSION,SSI,@K INCR@K =,@K NEW@K 1=,@K SEQID
@K =,@K LIST@K =@K ALL,@K
@C75 @K C, CHNGE@K
             @S @C25 @K NEWNAME@K =
    @C74 @K REPRO@K
@S1 @K COPY@K  @C25 NAME,VERSION,FROMSEQ,TOSEQ,@K DDNAME@K =
@S1 @K CURRENT@K  @C25 NAME,VERSION
@S1 @K DELETE@K  @C25  SEQ1,SEQ2   @C75 @K D, DELET@K
@S1 @K ENDUP@K
@S1 @K FIX@K  @C25 SEQ1,SEQ2,COL1,COL2 @B1 /BAD_STRING/GOOD_STRING/
@C74 @KF
@S1 @K GANG@K  @C25 CODE,COL   @C75 @KG
@S1 @K GENALIAS@K  @C25 NAME,NEWNAME
@S1 @K INSERT@K  @C25 SEQ1,INCR,NEW1   @C75 @KI
@S1 @K LIST@K  @C25  NAME,VERSION,@K DDNAME@K =
@S1 @K LOAD@K
@S1 @K LOCATE@K  @C25  SEQ1        @C75 @KL
@S1 @K MACRO@K  @C25 NAME,VERSION
@S1 @K NOTE@K
@S1 @K NUMBER@K  @C25 SEQ1,SEQ2,INCR,NEW1@K:,@K INSERT@K =@K YES;@K
 @C75 @K N, NUMBR@K
@S1 @K RENAME@K  @C25 NAME,NEWNAME
@S1 @K REPLACE@K  @C25  SEQ1,SEQ2,INCR,NEW1  @C75 @KR
@S1 @K SCAN@K  @C25 SEQ1,SEQ2,COL1,COL2 @B1 /BAD_STRING/GOOD_STRING/
@C74 @KS
@S1 @K SCRATCH@K  @C25  NAME,VERSION   @C75 @K DROP@K
@S1 @K SEQUENCE@K  @C25 INCR,NEW1
          @C75 @KQ
