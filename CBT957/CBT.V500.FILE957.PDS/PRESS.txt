PRESS    TITLE 'PRESS ROUTINE FOR IEBUPDTX'
* WHEN ENTERING PRESS:
*        R1 PTS TO A PARAMETER LIST CONSISTING OF A(INTEGER) IN THE
*           1ST FULLWORD (INTEGER FLAG IS ON IF THE INTEGER PARM
*           IS SPECIFIED), AND AN EOF FLAG IN THE 2ND FULLWORD (EOF
*           FLAG IS ON IF PROCESSING LAST LINE IN LAST BUFFER).
*        R6 PTS TO NMDATA  (FOR SYSUT2 OR SYSPUNCH)
*
*        REGISTERS IN PRESS ARE USED IN THE FOLLOWING WAY:
*
*        R4 - COUNT OF BYTES IN A LINE RECORD
*        R5 - COUNT OF BYTES IN INPUT BUFFER (80 FOR CARD FORMAT)
*        R7 - POINTS TO AREA WHERE PREST OUTPUT IS TO BE PLACED
*        R8 - KEEPS A RUNNING COUNT OF BYTES IN ENTIRE BLOCK
*        R9 - CONTAINS ADDRESS OF CURRENT BUFFER ADDR
*        R10- POINTS TO INPUT BUFFER OF CARD FORMAT
*        R1, R2, R3, R9 USED AS TEMPS
*
*
*        BEGIN CSECT=PRESS
*
PRESS    START 0
*
         REGEQU ,                                                82060
*
BSOFFSET EQU   62                  OFFSET OF DCBBLKSI IN DCB
SEQCOL   EQU   72                  OFFSET TO SEQ FIELD
DECCOL   EQU   76                  OFFSET TO DEC PT IN SEQ FIELD
         EXTRN PWA                 EXT. PRINTER WORK AREA
*
         USING PRESS,R15
         SAVE  (14,12),,PRESS-&SYSDATE
         LR    R12,R13             HOLD SAVE AREA ADDR
         ST    R13,PRESSAVE+4      SAVE BACK CHAIN
         CNOP  0,4
         BAL   R13,PRESSAVE+76
PRESSAVE DC    18F'0'              LOCAL SAVE AREA
*
         ST    R13,8(,R12)         STORE DOWNWARD CHAIN
         DROP  R15
         USING PRESSAVE,R13        LOCAL BASE
*
* INITIALIZATION
*
         USING NMDSECT,R6
         L     R9,NMBUFADR         ADDR OF CURRENT BUFFER
         USING BUFDSECT,R9
         L     R2,0(,R1)           GET A(INTEGER) PASSED FROM CALL
         IC    R2,0(,R2)           GET 1 BYTE INTEGER FLAG
         STC   R2,INTFLAG          STORE FOR LATER
         IF    NMPS,INIT2    SKIP INIT IF SEQUENTIAL             82060
         L     R2,8(,R1)            GET A(NAME)                03/36/76
         CLC   NMPREVNM,0(R2)      CHK IF UPDATING NEW MEMBER    82060
         BE    INIT2               NO, BR                      03/25/76
         MVC   NMPREVNM,0(R2)      ELSE, MOVE IN NEW NAME        82060
         XC    NMWYL#,NMWYL#        & RE-INIT WYL LINE #         82060
INIT2    IC    R1,7(,R1)            GET EOF FLAG
         STC   R1,EOFFLAG           SAVE FOR LATER
         TM    EOFFLAG,1            CHK IF EOF FLAG SET        03/25/76
         BO    BLKWRIT              YES, BR TO WRITE
         IF    NMWNOT1,BUFCONT     CHK IF VERY FIRST BUFFER      82060
*
* IF VERY FIRST BUFFER - ADJUST FOR WYLBUR FORMAT
*
         L     R1,NMBUFLIM         YES, SUBTRACT 6 FROM
         S     R1,=F'91'           NMBUFLIM FOR WYLBUR     JRE 10/17/80
         ST    R1,NMBUFLIM         FORMAT
         SET   NMWNOT1             SET FLAG                      82060
BUFCONT  LA    R1,BUFDATA          ADDR WHERE OUTPUT DATA GOES
         C     R1,NMCURREC         AT START OF BUFFER'S DATA AREA?
         BNE   BUFCONT1            NO, BR
         LR    R7,R1               R7 PTS TO OUTPUT AREA
         LA    R7,2(,R7)           INCR PTR PAST TOTAL LEN
         LA    R8,2                INITIALIZE TOTAL BYTE CNT
         LA    R1,2(,R1)           INCR NMCURREC TO PT AT LINE #
         ST    R1,NMCURREC
         B     LINE#
*
* INSERT SEQ. NO. IN WYLBUR LINE NO. FIELD IF APPROPRIATE
*
BUFCONT1 L     R7,NMCURREC         ADDR FOR OUTPUTTING
         LH    R8,NMLEN            TOTAL BYTE CNT SO FAR         82060
LINE#    TM    INTFLAG,1           CHK IF INTEGER SPECIFIED
         BO    NOLINE#       YES; USE GENERATED LINE NUMBER      82060
         CLI   DECCOL(R10),C'.'    CHK IF DEC PT IN COL 77
         BE    ERRMSG              YES, ERROR
         CLC   SEQCOL(8,R10),=CL8' '         CHK IF BLANK SEQ#
         BE    ERRMSG2             YES,ERROR
*
* LOOP THRU SEQ NO FIELD TO CHK IF SEQ # IS ALL NUMERIC
*
         LA    R1,8                INITIALIZE LOOP CNT
         AR    R10,R1              INCR PTR BY SEQ FIELD LENGTH
CHKSEQ   BCTR  R10,0               DECR INPUT PTR
         CLI   SEQCOL(R10),C'0'    COMPARE WITH 0
         BL    ERRMSG3             ERROR, NOT NUMERIC
         CLI   SEQCOL(R10),C'9'    COMPARE WITH 9
         BH    ERRMSG3             ERROR, NOT NUMERIC
         BCT   R1,CHKSEQ           CHK NEXT DIGIT
*
         PACK  CONVERT+3(5),SEQCOL(8,R10)    PACK SEQ #
         OI    CONVERT+7,X'0F'     MAKE SIGN POSITIVE
         CVB   R1,CONVERT          GET BINARY # INTO R1
         ST    R1,INUMBER          STORE FOR MVC
         MVC   0(4,R7),INUMBER     MOVE INTO LINE # FIELD
         MVC   SEQCOL(8,R10),=CL8' '  BLANK OUT SEQ #
         B     TEXT
*
* ELSE, INSERT WYLBUR LINE NUMBERS
*
NOLINE#  L     R1,NMWYL#           GET PREVIOUS WYLBUR LINENO    82060
         AH    R1,THOUSND          INCR BY 1000                03/25/76
         C     R1,MAXWYL#          CHK IF  > 99999999          03/25/76
         BH    ERRMSG4             YES, ERROR                  03/25/76
         ST    R1,NMWYL#           REPLACE OLD WYL LINENO        82060
         MVC   0(4,R7),NMWYL#      MOVE INTO LINE NO FIELD       82060
*
* PRESS A LINE OF TEXT (80 BYTES)
*
TEXT     XR    R4,R4               ZERO PREST OUTPUT CNT
         LA    R5,79               TOTAL INPUT CNT-1             82060
         LA    R0,15         MAKE A FAST(ER) CONSTANT            82060
         LA    R7,4+1(,R7)   SET POINTER PAST LINE # AND LENGTH  82060
OVER     XR    R1,R1               ZERO OUT FOR TRT
         EX    R5,BLTRT            TRT TO FIRST NON-BLANK
         BZ    ALLBL               IF ALL BLANKS-GO TO FINISH    82060
         SR    R1,R10              GET # OF BLANKS
         LR    R3,R1               SAVE IN R3
         AR    R10,R1              SET START ADDR FOR NEXT TRT
         SR    R5,R1               REDUCE NEXT TRT COUNT BY # OF BLANKS
         EX    R5,NBTRT            TRT TO FIRST BLANK
         BNZ   BCKA                DID WE RUN PAST END OF BUF    82060
         LA    R1,1(R10,R5)        YES-SET STOP-ADDR TO JUST PAST FIELD
BCKA     CR    R3,R0               ARE THERE OVER 15 BLANKS?     82060
         BNH   NXTA                NO
         MVI   0(R7),X'F0'         YES- PUT 15 INTO PREST CNTR BYTE
         LA    R7,1(,R7)           BUMP OUTPUT BUF POINTER
         LA    R4,1(,R4)           BUMP PREST BYTE COUNTER
         SR    R3,R0               REDUCE BLANK COUNT BY 15      82060
         B     BCKA                GO PROCESS NEXT BLANKS
NXTA     SLL   R3,4                MOVE BLANK COUNT TO LEFT HALF BYTE
         SR    R1,R10              GET # OF NON BLANKS
         SR    R5,R1               REDUCE TRT COUNT
BCKB     CR    R1,R0               ARE THERE MORE THAN 15 NON-BLANKS?
         BNH   NXTB                NO
         LA    R3,15(,R3)          YES-PUT 15 INTO PREST COUNT BYTE
         STC   R3,0(,R7)           STORE IT
         SR    R1,R0               REDUCE NON BLANK COUNT BY 15  82060
         XR    R3,R3               ZERO OUT R3
         MVC   1(15,R7),0(R10)     MOVE 15 NON BLANKS TO PREST BUF
         LA    R10,15(,R10)        MOVE INPUT BUF POINTER
         LA    R7,16(,R7)          BUMP OUTPUT BUF POINTER
         LA    R4,16(,R4)          BUMP PREST BYTE COUNTER
         B     BCKB                GO PROCESS NEXT NON-BLANKS
NXTB     OR    R3,R1               OR NON BLANK COUNT TO COUNTER BYTE
         STC   R3,0(,R7)           STORE COUNTER BYTE
         BCTR  R1,0                REDUCE NON BLANK CNT 1 FOR MVC EX
         EX    R1,PMOVEB           MOVE CHARACTERS TO OUT BUF
         LA    R10,1(R1,R10)       BUMP INPUT BUF POINTER
         LA    R7,2(R1,R7)         BUMP OUTPUT BUF POINTER
         LA    R4,2(R1,R4)         BUMP PREST BYTE COUNTER
         LTR   R5,R5               ARE THERE MORE CHARS TO BE PROCESSED
         BNM   OVER                YES
ALLBL    L     R3,NMCURREC         GET ADDR OF START OF LINE RECORD
         STC   R4,4(,R3)           STORE BYTE COUNT FOR THIS RECORD
         LA    R8,5(R4,R8)         INCR TOTAL CNT BY THIS REC+5
         STH   R8,NMLEN            TOTAL BYTE CNT IN BLOCK       82060
         ST    R7,NMCURREC         PTR TO CURRENT POS IN BUFFER
         C     R7,NMBUFLIM         SPACE FOR 1 MORE PREST LINE?
         BNH   EXIT                YES, RETURN
*
*        WRITE OUT A BLOCK
*
BLKWRIT  LA    R7,BUFDATA          GET BEGINNING OF OUTPUT DATA
         MVI   BUFSTAT,0     SET BUFFER UNUSED                   82060
         LH    R5,NMLEN      GET BUFFER LENGTH USED              82060
         CH    R5,=H'2'      ANYTHING IN IT ?                    82060
         BNH   BLKNORIT      NO; SKIP WRITE                      82060
         STH   R5,0(,R7)     ELSE SET LENGTH IN BDW              82060
         WRITE BUFDECB,SF,NM,BUFDATA,(5),MF=E
         MVI   BUFSTAT,1           INDICATE BUFFER I/O ACTIVE
BLKNORIT TM    EOFFLAG,1           CHK IF WRITING LAST BUFFER    82060
         BNO   BLKWRIT2            NO, BRANCH
*
*        EXIT IF LAST BUFFER JUST WRITTEN
*
         ST    R7,NMCURREC         RESET CURRENT REC PTR
         L     R3,NMBUFADR         LOAD R3 FOR RETURNING
         L     R13,4(,R13)         GET ADDR OF CALLER'S SAVE AREA
         LM    R14,R2,12(R13)      RESTORE ALL REGISTERS EXCEPT
         LM    R4,R12,36(R13)         R3 & R13
         BR    R14
*
*        FULL BUFFER WRITTEN - INITIALIZE NEXT BUFFER
*
BLKWRIT2 L     R4,BUFCHAIN         ADDR OF NEXT BUFFER
         DROP  R9
         USING BUFDSECT,R4
         ST    R4,NMBUFADR         STORE NEW CURRENT BUF F ADDR
         LA    R3,BUFDATA          START OF DATA AREA IN BUFFER
         ST    R3,NMCURREC         STORE NEW CURRENT REC PTR
         LR    R5,R3
         AH    R5,NM+BSOFFSET      ADD LENGTH OF DATA AREA
         SH    R5,=H'92'           MINUS 1 LINE RECORD LENGTH
         ST    R5,NMBUFLIM         SAVE
         CLI   BUFSTAT,0           TEST STATUS OF BUFFER
         BE    EXIT                NOT USED YET, EXIT
         MVI   BUFSTAT,0           RESET I/O ACTIVE FLAG
         CHECK BUFDECB             PREVIOUSLY WAIT FOR I/O
         DROP  R4
*
*  EXIT
*
EXIT     DS    0H
         L     R13,4(,R13)         RESTORE CALLER'S SAVE AREA ADDR
         RETURN  (14,12)           RETURN
*
*        PRINT ERROR MSG & ABEND
*
ERRMSG   LA    R2,MSG              LOAD R2 FOR PRINT SUB
         B     OUTMSG
ERRMSG2  LA    R2,MSG2             LOAD R2 FOR PRINT SUB
         B     OUTMSG
ERRMSG3  LA    R2,MSG3             LOAD R2 FOR PRINT SUB
         B     OUTMSG                                          03/25/76
ERRMSG4  LA    R2,MSG4             LOAD R2 FOR PRINT SUB       03/25/76
OUTMSG   L     R3,ADPWA            GET DCB ADDR
         XPRNTLIN  (3),TEXT=(2),LENGTH=80
         XPRCLOSE  (3)
         ABEND 2
*
         LTORG
*
*        THE FOLLOWING ARE INSTRUCTIONS EXECUTED
*         AS THEY ARE REQUIRED
*
PMOVEB   MVC   1(*-*,R7),0(R10)    TO MOVE CHAR STRINGS
BLTRT    TRT   0(*-*,10),BLTRTB    TO SCAN FOR NON-BLANK
NBTRT    TRT   0(*-*,10),NBTRTB    TO SCAN FOR BLANK
*
*        THE FOLLOWING TABLES ARE USED FOR TRT INSTRUCTIONS
*
BLTRTB   DC    256XL1'01'          BLANK SCAN TABLE
NBTRTB   DC    XL256'00'           NON BLANK SCAN TABLE          JWW312
         ORG   BLTRTB+C' '         SET BLANK ZERO
         DC    X'0'
         ORG   NBTRTB+C' '         SET BLANK NON ZERO
         DC    X'1'
         ORG   NBTRTB+256
*
CONVERT  DC    D'0'                AREA FOR PACKING SEQ #
INUMBER  DS    F                   TEMP AREA FOR SEQ #
PREVNAME DC    CL8' '              MEMBER NAME                 03/25/76
MAXWYL#  DC    F'99999999'         MAX ALLOWED WYLBUR LINE #   03/25/76
ADPWA    DC    A(PWA)              EXT DCB ADDR
THOUSND  DC    H'1000'             INCR FOR WYL LINE #         03/25/76
INTFLAG  DS    X                   FLAG FOR INTEGER PARM
EOFFLAG  DS    X                   FLAG IF LAST LINE & LAST BUF
MSG      DC    CL80'*** INVALID SEQUENCE NUMBER - DECIMAL FOUND IN SEQUX
               ENCE FIELD ***'
MSG2     DC    CL80'*** INTEGER PARM SHOULD NOT BE SPECIFIED - SEQUENCEX
                FIELD IS BLANK ***'
MSG3     DC    CL80'*** ERROR - SEQUENCE NUMBER IS NOT ALL NUMERIC ***'
MSG4     DC    CL80'*** WYLBUR LINE NUMBER EXCEEDED - MAX ALLOWED IS 99X
               999999'
*
         NMDSECT
         BUFDSECT
         END   PRESS
