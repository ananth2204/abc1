{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012327000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE549.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE549.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x15'", "DS1TRBAL": "b'(\\x1c'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\x10\\x00\\x07\\x04\\x10\\x00\\t\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x047\\x00\\x00\\x01\\x022O\\x01\\x022O\\x19B\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf5@@@'", "ispf": {"version": "04.55", "flags": 0, "createdate": "2002-11-20T00:00:00", "modifydate": "2002-11-20T19:42:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-455"}, "text": "REGULAR CBT TAPE - VERSION 455    FILE:  549\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT455.FILE549\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 7 MEMBERS COUNTED; CUMULATIVE SIZE IS 403 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/20/02    19:42:31    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$README": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\r\\x00\\x001\\x01\\x022O\\x01\\x022O\\x11#\\x00\\t\\x00\\t\\x00\\x00\\xd4\\xc2\\xc1\\xd9\\xd6\\xd5@@@@'", "ispf": {"version": "13.00", "flags": 0, "createdate": "2002-11-20T00:00:00", "modifydate": "2002-11-20T11:23:31", "lines": 9, "newlines": 9, "modlines": 0, "user": "MBARON"}, "text": "Contents of this folder -\n\n 1-UNITNAM$ - JCL to assemble and link the UNITNAME program\n 2-UNITNAME - Source Code for UNITNAME\n 3-UNITS    - REXX EXEC to drive the ISPF dialog\n 4-XUNITS   - Main panel for the dialog\n\nThe members were downloaded with FTP.  There may be a null record\nat the end of each member after the upload\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE549": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x047\\x00\\x00\\x01\\x022O\\x01\\x022O\\x19B\\x00\\x15\\x00\\x15\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf5@@@'", "ispf": {"version": "04.55", "flags": 0, "createdate": "2002-11-20T00:00:00", "modifydate": "2002-11-20T19:42:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "CBT-455"}, "text": "//***FILE 549 is from Mark Baron, and contains a program and an     *   FILE 549\n//*           ISPF dialog to display Unit Names.                    *   FILE 549\n//*                                                                 *   FILE 549\n//*        Contents of this file -                                  *   FILE 549\n//*                                                                 *   FILE 549\n//*         1-UNITNAM$ - JCL to assemble and link the UNITNAME      *   FILE 549\n//*                      program                                    *   FILE 549\n//*         2-UNITNAME - Source Code for UNITNAME                   *   FILE 549\n//*         3-UNITS    - REXX EXEC to drive the ISPF dialog         *   FILE 549\n//*         4-XUNITS   - Main panel for the dialog                  *   FILE 549\n//*                                                                 *   FILE 549\n//*        email: MSBaron@optonline.net                             *   FILE 549\n//*                                                                 *   FILE 549\n//*   The program has been tested on OS/390 V2R10 and z/OS V1R3.    *   FILE 549\n//*   But, as the unit verification service has been around since   *   FILE 549\n//*   ESA days and the EDTINFO since OS/390 V2R6 (or earlier) there *   FILE 549\n//*   is no reason why the program won't work on version 2.6 and    *   FILE 549\n//*   above.                                                        *   FILE 549\n//*                                                                 *   FILE 549\n//*   (It said I needed Windows 98 or better so I got z/OS)         *   FILE 549\n//*                                                                 *   FILE 549\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "UNITNAM$": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\r\\x00\\x00\\x07\\x01\\x022O\\x01\\x022O\\x11#\\x00\\x17\\x00\\x17\\x00\\x00\\xd4\\xc2\\xc1\\xd9\\xd6\\xd5@@@@'", "ispf": {"version": "13.00", "flags": 0, "createdate": "2002-11-20T00:00:00", "modifydate": "2002-11-20T11:23:07", "lines": 23, "newlines": 23, "modlines": 0, "user": "MBARON"}, "text": "//Z100J002 JOB (70N,3),'MARK BARON',CLASS=T,REGION=0M,\n//             NOTIFY=&SYSUID,MSGCLASS=Z,TIME=1439\n/*JOBPARM S=*,L=999999\n//OUTDEFLT OUTPUT DEFAULT=Y,JESDS=ALL,CLASS=*,COPIES=1,DEST=LOCAL\n//*********************************************************************\n//ASM     EXEC PGM=ASMA90,REGION=2048K,\n//            PARM=(NOTERM,LIST,NODECK,OBJECT,TEST)\n//SYSLIB    DD DSN=SYS1.MACLIB,DISP=SHR\n//          DD DSN=SYS1.MODGEN,DISP=SHR\n//          DD DSN=SYS1.AMODGEN,DISP=SHR\n//SYSPRINT  DD SYSOUT=(,)\n//SYSPUNCH  DD DUMMY\n//SYSUT1    DD UNIT=SYSDA,SPACE=(CYL,(2,2))\n//SYSLIN    DD UNIT=SYSDA,DSN=&&OBJ,DISP=(,PASS),SPACE=(CYL,3),\n//             DCB=BLKSIZE=3200\n//SYSIN     DD DSN=T21762.UNITS.SOURCE(UNITNAME),DISP=SHR\n//*\n//*********************************************************************\n//LINK     EXEC PGM=IEWL,PARM='LIST,LET,XREF,TEST',COND=(0,LT)\n//SYSPRINT DD SYSOUT=(,)\n//SYSUT1   DD UNIT=SYSDA,SPACE=(TRK,(5,5))\n//SYSLIN   DD DSN=&&OBJ,DISP=(OLD,DELETE)\n//SYSLMOD  DD DSN=IPL.PRODTEST(UNITNAME),DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UNITNAME": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\r\\x00\\x00\\x07\\x01\\x022O\\x01\\x022O\\x11#\\x01\\x1c\\x01\\x1c\\x00\\x00\\xd4\\xc2\\xc1\\xd9\\xd6\\xd5@@@@'", "ispf": {"version": "13.00", "flags": 0, "createdate": "2002-11-20T00:00:00", "modifydate": "2002-11-20T11:23:07", "lines": 284, "newlines": 284, "modlines": 0, "user": "MBARON"}, "text": "UNITS TITLE 'UNITNAME - EDT DISPLAY'\n***********************************************************************\n*                                                                     *\n*   PROGRAM NAME. UNITNAME.                                           *\n*   LOAD MODULE.  UNITNAME.                                           *\n*   AUTHOR.       MARK S. BARON                                       *\n*   DATE WRITTEN. DECEMBER 8, 1988.                                   *\n*   DATE REVISED. OCTOBER 29, 2002 TO USE EDTINFO IN ORDER TO         *\n*                 ACCOUNT FOR DYNAMIC UCB'S AND UCB'S ABOVE THE       *\n*                 16 MEG LINE.                                        *\n*                 ALSO, REMOVED THE DEVTYPE BYTES FROM THE DISPLAY    *\n*   COMMENTS.     THIS PROGRAM DETERMINES THE UNITNAMES CREATED IN    *\n*                 THE MVSCP GEN AND SET UP IN THE ELIGIBLE DEVICE     *\n*                 TABLE (EDT).  THE PROGRAM USES THE UNIT             *\n*                 VERIFICATION ROUTINE, IEFEB4UV, AND THE EDTINFO     *\n*                 SERVICE.                                            *\n*   INPUT.        PARM FIELD: NO PARM, OR PARM=NAMES.                 *\n*   OUTPUT.       OUTPUT IS WRITTEN TO DDNAME UNITSOUT.               *\n*                 IF NO PARM IS PASSED, THE UNITNAME AND ALL DEVICE   *\n*                 NUMBERS ASSOCIATED WITH THAT UNITNAME ARE           *\n*                 IF PARM=NAMES IS SPECIFIED, ONLY THE UNITNAMES      *\n*                 WILL BE RETURNED.                                   *\n*   DEPENDENCIES. OS/390 OR HIGHER                                    *\n*                                                                     *\n***********************************************************************\n TITLE 'UNITNAME - EDT DISPLAY - ENTRY, HOUSEKEEPING AND MAINLINE'\nUNITNAME CSECT ,\nUNITNAME AMODE 31\n         SPACE ,\n***********************************************************************\n*                                                                     *\n*   THIS IS THE MAINLINE PROCESSING FOR THE PROGRAM.  IN THE MAIN     *\n*   ROUTINE, UNIT VERIFICATION SERVICES IS INVOKED TO GET THE UNIT    *\n*   NAMES CORRESPONDING TO EACH DEVICE CLASS.  THE CORRESPONDING      *\n*   DEVICE ADDRESSES ARE OBTAINED FOR EACH UNIT NAME IN THE LIST.     *\n*                                                                     *\n***********************************************************************\n         SPACE ,\n         SAVE  (14,12),,UNITNAME.&SYSDATE-&SYSTIME\n         LR    R12,R15\n         USING UNITNAME,R12\n         LA    R15,SAVEAREA\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         LR    R3,R1            SAVE POINTER TO PARM FIELD.\n         BAS   R11,INIT         PERFORM INITIALIZATION.\n         LTR   R15,R15          INITIALIZATION SUCCESSFUL?\n         BNZ   RETURN           BRANCH IF NOT.\n         B     LOOPUNM\nLOOPUNM  DS    0H\n         BAS   R11,GETUNITN     GET UNIT NAMES FROM EDT FOR DEV. CLASS.\n         BNZ   RETURN           BRANCH IF NOT.\n         L     R3,UNMLIST       POINT TO UNITNAME LIST.\n         USING NAMELS12,R3\n         MVC   UNMNUMUN,LST12NUM SAVE NUMBER OF UNITNAMES.\n         LA    R3,LST12NAM      POINT TO FIRST UNITNAME IN LIST.\nLOOPUNIT DS    0H\n         ICM   R2,15,UNMNUMUN   LOAD NUMBER OF UNITNAMES.\n         BZ    FREEUNM          BRANCH IF UNITNAMES FINISHED.\n         BAS   R11,GETADDRS     GET ADDRESSES CORRESPONDING TO UNITNAME\n         LA    R3,L'LST12NAM(R3) POINT TO NEXT NAME IN UNITNAME LIST.\n         L     R2,UNMNUMUN      LOAD NUMBER OF UNITNAMES.\n         BCTR  R2,0             SUBTRACT 1 FROM NUMBER OF UNITNAMES.\n         ST    R2,UNMNUMUN\n         B     LOOPUNIT\nFREEUNM  DS    0H\n         L     R3,UNMLIST       POINT TO UNITNAME LIST.\n         L     R0,LST12HDR      LOAD SUBPOOL AND LENGTH OF UNITNM LIST\n         LR    R1,R3            LOAD ADDRESS OF UNITNAME LIST.\n         FREEMAIN R,LV=(0),A=(1) FREEMAIN UNITNAME LIST.\n         ICM   R2,1,UNMDEVCL    GET CURRENT DEVICE CLASS MASK.\n         BNZ   LOOPUNM          BRANCH IF NOT FINISHED.\n         BAS   R11,CLEANUP      PERFORM TERMINATION.\nRETURN   DS    0H\n         L     R13,4(,R13)\n         RETURN (14,12),RC=(15)\n         DROP  R3\n TITLE 'UNITNAME - EDT DISPLAY - INITIALIZATION'\n***********************************************************************\n*                                                                     *\n*   THIS SUBROUTINE PERFORMS INITIALIZATION.  FILES ARE OPENED HERE,  *\n*   AND THE PARM FIELD INFORMATION IS INTERPRETED.                    *\n*                                                                     *\n***********************************************************************\n         SPACE ,\nINIT     DS    0H\n         LOAD  EPLOC=UVSNM      LOAD UNIT VERIFICATION ROUTINE.\n         ST    R0,UVSENT        SAVE ENTRY POINT.\n         OPEN  (UNITSOUT,OUTPUT),MODE=31 OPEN OUTPUT FILE.\n         LR    R10,R15          TEST SUCCESSFUL OPEN.\n         LTR   R15,R10\n         BZ    CKPARM           BRANCH IF YES.\n         WTO   'UNITNAME: OPEN FOR UNITSOUT FILE FAILED',ROUTCDE=11\n         LA    R15,16\n         B     INITRET\nCKPARM   DS    0H\n         L     R3,0(R3)         LOAD POINTER TO PARM FIELD.\n         LH    R2,0(R3)         LOAD LENGTH OF PARM FIELD.\n         LTR   R2,R2            CHECK FOR NULL PARM.\n         BZ    INITOK           BRANCH IF NULL.\n         CH    R2,=H'5'         CHECK IF LENGTH OF PARM = 5.\n         BNE   BADPARM          BRANCH IF NOT.\n         CLC   2(5,R3),=C'NAMES' TEST FOR PARM=NAMES.\n         BNE   BADPARM          BRANCH IF NOT.\n         MVI   UNMOPTSW,1       SET SWITCH FOR PARM = NAMES.\n         B     INITOK\nBADPARM  DS    0H\n         LA    R15,8            SET BAD RETURN.\n         B     INITRET\nINITOK   DS    0H\n         L     R1,DEVLIST       STORAGE REQUEST FOR DEVICE LIST\n         GETMAIN R,LV=(1)       GET THE STORAGE\n         ST    R1,NAMELSTP      SAVE THE ADDRESS\n         MVC   0(4,R1),DEVLIST  MOVE THE DESCRIPTOR TO THE AREA\n         LA    R2,4095          SET UP NUMBER\n         LA    R2,1(,R2)          OF ENTRIES\n         SLL   R2,4                  IN LIST (4096*16)\n         ST    R2,4(,R1)        SAVE TO LIST\n         SR    R15,R15          SET GOOD RETURN.\nINITRET  DS    0H\n         BR    R11              RETURN.\n TITLE 'UNITNAME - EDT DISPLAY - UNIT VERIFICATION SERVICES INTERFACE'\n***********************************************************************\n*                                                                     *\n*   THIS ROUTINE OBTAINS ALL THE UNITNAMES FROM THE ELIGIBLE DEVICE   *\n*   TABLE (EDT) FOR THE SPECIFIED DEVICE CLASS.  FOR EACH CALL TO     *\n*   UNIT VERIFICATION SERVICES, EXACTLY ONE BIT IS TURNED ON IN THE   *\n*   DEVICE CLASS FIELD.  AFTER EACH CALL, THIS BIT IS SHIFTED ONE     *\n*   BIT TO THE LEFT, TO ENSURE THAT ALL UNIT NAMES ARE OBTAINED.      *\n*                                                                     *\n***********************************************************************\n         SPACE ,\nGETUNITN DS    0H\n         XC    UVSUNTTB,UVSUNTTB ZERO OUT UNIT VERIF. UNIT TABLE.\n         XC    UVSFLAGS,UVSFLAGS ZERO OUT UNIT VERIF. FLAGS FIELD.\n         LA    R3,UVSUNTTB      POINT TO UNIT TABLE.\n         USING UNITTAB,R3\n         MVC   UNDEVCL,UNMDEVCL SET DEVICE CLASS IN UNIT TABLE.\n         LA    R4,UVSFLAGS      POINT TO FLAGS FIELD.\n         USING FUNCFLGS,R4\n         OI    FUNCFLG2,RETNNAME SET FLAG - RETURN UNIT NAMES.\n         LA    R1,UVSPARM       POINT TO UNIT VERIF. PARAMETER LIST.\n         L     R15,UVSENT       LOAD UNIT VERIF. ENTRY POINT.\n         BASSM R14,R15          CALL UNIT VERIFICATION SERVICES.\n         LTR   R15,R15          TEST UNITNAMES OBTAINED SUCCESSFULLY.\n         BNZ   GETURET          BRANCH IF NOT.\n         MVC   UNMLIST,UNUCBL5P SAVE POINTER TO UNITNAMES LIST.\n         SR    R2,R2\n         IC    R2,UNMDEVCL      LOAD CURRENT DEVICE CLASS MASK.\n         BCTR  R2,R0            CREATE NEXT MASK.\n         STC   R2,UNMDEVCL      SAVE NEXT MASK.\n         SR    R15,R15          SET GOOD RETURN.\nGETURET  DS    0H\n         BR    R11              RETURN.\n         DROP  R3,R4\n TITLE 'UNITNAME - EDT DISPLAY - EDTINFO INTERFACE'\n***********************************************************************\n*                                                                     *\n*   THIS ROUTINE OBTAINS THE DEVICE ADDRESSES ASSOCIATED WITH EACH    *\n*   SYSTEM UNIT NAME.  ON ENTRY TO THIS ROUTINE, REG. 3 POINTS TO     *\n*   THE NEXT UNIT NAME TO BE PROCESSED.                               *\n*                                                                     *\n***********************************************************************\n         SPACE ,\nGETADDRS DS    0H\n         MVC   UNMUNAME,0(R3)   MOVE UNIT NAME TO OUTPUT LINE.\n         LA    R2,NAMELSTP      POINT TO ADDRESS OF ANSWER AREA\n         EDTINFO RTNDEVN,DYNAMIC=YES,LOC=ANY,RANGE=ALL,                +\n               UNITNAME=(3),                                           +\n               DEVNLIST=(2)\n         L     R6,NAMELSTP      POINT TO THE ANSWER AREA\n         LA    R7,8(,R6)        POINT TO FIRST UCB ADDRESS\n         L     R6,4(,R6)        LOAD NUMBER OF UCB ADDRESSES\n         LTR   R6,R6            DID WE GET ANY\n         BNP   DONEADDR         NOPE - DONE WITH THIS ONE\n         LA    R8,UNMUADDS      POINT TO FIRST ADDRESS ON OUTPUT LINE.\n         CLI   UNMOPTSW,1       ONLY NAMES WANTED?\n         BE    LASTLINE         BRANCH IF YES.\nLOOPUCBA DS    0H\n         MVC   0(4,R8),0(R7)    MOVE DEVICE ADDRESS TO OUTPUT LINE.\n         LA    R8,L'UNMUADDS(R8) POINT TO NEXT ADDRESS ON OUTPUT LINE.\n         C     R8,=A(UNMUADDE)  TEST FOR END OF LINE.\n         BL    NEXTUCB          BRANCH IF NOT.\n         BAS   R10,WRITLINE     WRITE OUTPUT LINE.\n         LA    R8,UNMUADDS      POINT TO FIRST ADDRESS ON OUTPUT LINE.\nNEXTUCB  DS    0H\n         LA    R7,4(,R7)        POINT TO NEXT DEVICE NUMBER\n         BCT   R6,LOOPUCBA      ONCE MORE WITH FEELING\nLASTLINE DS    0H\n         BAS   R10,WRITLINE     WRITE OUTPUT LINE.\n         C     R8,=A(UNMUADDS)  TEST IF WE NEED ANOTHER LINKE\n         BE    DONEADDR         NOPE\n         BAS   R10,WRITLINE     YUP - WRITE IT OUT\nDONEADDR DS    0H\n         SR    R15,R15          SET GOOD RETURN IN REG. 15.\n         BR    R11              RETURN.\n TITLE 'UNITNAME - EDT DISPLAY - OUTPUT SERVICE'\n***********************************************************************\n*                                                                     *\n*   THIS SUBROUTINE PRINTS AN OUTPUT LINE.  THE ROUTINE SWITCHES      *\n*   TO 24-BIT ADDRESSING MODE, SINCE NON-VSAM I/O REQUIRES 24-BIT     *\n*   CALLERS.                                                          *\n*                                                                     *\n***********************************************************************\n         SPACE ,\nWRITLINE DS    0H\n         LA    R15,PUT\n         SR    R2,R2\n         BSM   R2,R15           SWITCH TO 24-BIT MODE.\nPUT      DS    0H\n         PUT   UNITSOUT,UNMOUT  WRITE OUTPUT LINE.\n         LA    R15,BLNK\n         OR    R15,R2\n         BSM   0,R15            SWITCH TO ORIGINAL ADDRESSING MODE.\nBLNK     DS    0H\n         MVI   UNMOUT,C' '      BLANK OUT OUTPUT LINE.\n         MVC   UNMOUT+1(L'UNMOUT-1),UNMOUT\n         BR    R10\n TITLE 'UNITNAME - EDT DISPLAY - TERMINATION AND CLEANUP'\n***********************************************************************\n*                                                                     *\n*   THIS SUBROUTINE PERFORMS CLEANUP AT TERMINATION OF THE PROGRAM.   *\n*                                                                     *\n***********************************************************************\n         SPACE ,\nCLEANUP  DS    0H\n         CLOSE UNITSOUT         CLOSE OUTPUT FILE.\n         DELETE EPLOC=UVSNM     DELETE UNIT VERIFICATION ROUTINE.\n         L     R0,DEVLIST       GETMAIN REQUEST\n         L     R1,NAMELSTP      ADDRESS\n         FREEMAIN R,LV=(0),A=(1) FREE THE STORAGE\n         BR    R11              RETURN.\n TITLE 'UNITNAME - EDT DISPLAY - DATA AREAS - CONSTANTS'\n***********************************************************************\n*                                                                     *\n*        WORK VARIABLES.                                              *\n*                                                                     *\n***********************************************************************\n         SPACE ,\nSAVEAREA DC    18F'0'           SAVE AREA USED BY THIS PROGRAM.\nUNMLIST  DC    A(0)             POINTER TO RETURNED UNITNAME LIST.\nUNMNUMUN DC    F'0'             NUMBER OF UNITNAMES IN LIST.\nUNMDEVCL DC    X'FF'            DEVICE CLASS MASK.\nUNMOPTSW DC    X'0'             0=UNIT ADDRESSES, 1=NAMES ONLY.\n         DC    0F'0'\nUNOUTDEV DC    F'0'\nUNMOUT   DS    0CL80            OUTPUT LINE.\n         DC    C' '\nUNMUNAME DC    CL8' '           UNIT NAME.\n         DC    C' '\nUNMUADDS DC    14CL5' '\nUNMUADDE DC    C'    '\n         SPACE ,\nUVSNM    DC    CL8'IEFEB4UV'    NAME OF UNIT VERIFICATION ROUTINE.\nUVSENT   DC    A(0)             POINTER TO UNIT VERIFICATION ENTRY PT.\nUVSPARM  DS    0F               PARAMETER LIST FOR UNIT VERIF. ROUTINE.\n         DC    A(UVSUNTTB)      POINTER TO UNIT VERIF. UNIT TABLE.\n         DC    A(UVSFLAGS)      POINTER TO UNIT VERIF. FLAGS.\nUVSUNTTB DC    XL((UNDEVCL-UNITTAB)+6)'0' UNIT VERIF. - UNIT TABLE.\nUVSFLAGS DC    XL2'0'           UNIT VERIF. - FLAGS FIELD.\nNAMELSTP DC    A(DEVLIST)\nDEVLIST  DC    AL1(0),AL3(65536*4+8)\n         EJECT ,\nUNITSOUT DCB   DSORG=PS,DDNAME=UNITSOUT,MACRF=PM,RECFM=FB,LRECL=80,    *\n               BLKSIZE=7440\n TITLE 'UNITNAME - EDT DISPLAY - DATA AREAS - CONSTANTS - LITERAL POOL'\n         LTORG ,\n TITLE 'UNITNAME - EDT DISPLAY - DATA AREAS - CONSTANTS - EDTINFO WORK +\n               AREA'\n         DROP  R12\n TITLE 'UNITNAME - EDT DISPLAY - DATA AREAS - REGISTER EQUATES'\n         YREGS ,\n TITLE 'UNITNAME - EDT DISPLAY - DATA AREAS - DSECTS - CVT'\n         CVT   DSECT=YES,LIST=NO\n         PRINT NOGEN\n TITLE 'UNITNAME - EDT DISPLAY - DATA AREAS - DSECTS - PARMLIST FOR UNI+\n               VERIFICATION SERVICES (IEFEB4UV)'\n         IEFZB4UV ,             PARAMETER LIST FOR IEFEB4UV.\n TITLE 'UNITNAME - EDT DISPLAY - DATA AREAS - DSECTS - UCB'\nDSECUCB  DSECT ,\n         IEFUCBOB LIST=NO\n TITLE 'UNITNAME'\n         END   ,\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UNITS": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\r\\x00\\x00\\x07\\x01\\x022O\\x01\\x022O\\x11#\\x00\\x1d\\x00\\x1d\\x00\\x00\\xd4\\xc2\\xc1\\xd9\\xd6\\xd5@@@@'", "ispf": {"version": "13.00", "flags": 0, "createdate": "2002-11-20T00:00:00", "modifydate": "2002-11-20T11:23:07", "lines": 29, "newlines": 29, "modlines": 0, "user": "MBARON"}, "text": "/******************************* REXX ********************************/\nTRACE O\nADDRESS TSO\n\nPANELID = \"XUNITS\"\nUNITSOUT_DSN = \"'\"SYSVAR(SYSUID)\".EDT.LIST'\"\nMSGSTAT = MSG(OFF)\n\"DEL\" UNITSOUT_DSN\n\"ALLOC FI(UNITSOUT) DA(\"UNITSOUT_DSN\") UNIT(SYSALLDA),\n       SPACE(1 1) TRACKS\"\n\nADDRESS ISPEXEC\nDISPLAY:\n\"DISPLAY PANEL(\"PANELID\")\"\nIF RC = 8 THEN SIGNAL EXIT\n\nADDRESS ISPEXEC\n\"SELECT PGM(UNITNAME) PARM(\"NAMES\")\"\nIF RC \u00ac= 0 THEN SIGNAL EXIT\n\n\"BROWSE DATASET(\"UNITSOUT_DSN\")\"\nSIGNAL DISPLAY\n\nEXIT:\nADDRESS TSO\n\"FREE FI(UNITSOUT)\"\n\"DEL\" UNITSOUT_DSN\nMSGSTAT = MSG(MSGSTAT)\nEXIT(0)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XUNITS": {"ttr": 532, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\r\\x00\\x001\\x01\\x022O\\x01\\x022O\\x11#\\x00\\x19\\x00\\x19\\x00\\x00\\xd4\\xc2\\xc1\\xd9\\xd6\\xd5@@@@'", "ispf": {"version": "13.00", "flags": 0, "createdate": "2002-11-20T00:00:00", "modifydate": "2002-11-20T11:23:31", "lines": 25, "newlines": 25, "modlines": 0, "user": "MBARON"}, "text": ")ATTR\n _ TYPE(INPUT) INTENS(LOW) CAPS(ON)\n $ TYPE(INPUT) INTENS(HIGH) CAPS(ON)\n @ TYPE(OUTPUT) INTENS(HIGH)\n , TYPE(INPUT) INTENS(NON)  CAPS(ON)\n)BODY LMSG(LMSG)\n%-----------------------------  UNITNAME PANEL  -------------------------------\n%COMMAND ===>$ZCMD\n@LMSG\n+\n+  Unit names only ===>$NAMES+\n+\n+  Erase the word%NAMES+if you want the full display\n+\n+\n+\n+\n)INIT\n&NAMES = 'NAMES'\n&ZCMD = ' '\n.CURSOR = NAMES\n)PROC\nIF (&NAMES \u00ac= ' ')\n  VER (&NAMES,NONBLANK,LIST,NAMES)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT549/FILE549.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT549", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}