Subject:  Re: IDCAMS
From:     Robert Zenuk <Robzenuk@aol.com>
Date:     3/31/2006 1:45 AM

This was created for production control/job scheduling purposes.
When this is the first step of a job (or any step that would
create restart instructions requiring anything other than "rerun
from the top"), a FLUSH is just as effective as a non-zero return
code.

The logic behind using a step that confirms the file does exist
and provides a testable return code gives the production control
person proof the file was successfully created and removes the
possibility of an NFS mount problem from the mix.  We also put a
MNTCHECK step (another homegrown utility that confirms the
required mount is valid and/or mounts it if missing) before every
NFS file using job (and some HFS users when the mounts are not in
BPXPRMxx).  These steps help whittle down the list of potential
problems and allows the production control person to pass on to
the support personnel what did work as well as what failed during
the job to speed up the problem determination.  We also have some
JCL standards where we like to create everything needed for the
job up front and hang additional processing on a successful
predecessor step in our production jobs.

As far as eliminating the JCL ERROR, here is another version to
eliminate that if you prefer.  The difference here is the ALLOC
is put inside the EXEC and the FILE DD is removed from the
JCL/PROC.  This puts the error messages in the SYSTSPRT SYSOUT of
the step instead of the JOBLOG.  It does limit the flexibility of
using more PATH DD options.  The name BPXEXIST doesn't seem to be
accurate anymore, so call it what you want if you want to use it.

/**************************** REXX ***********************************/
/*  Accept  filename                                                 */
/*********************************************************************/
parse  arg file  access
if file = '' then exit  20
if access = ''  then
access =  'SIRWXU,SIRWXG,SIRWXO'
/*********************************************************************/
/*  Heading                                                          */
/*********************************************************************/
say  mvsvar('SYSNAME') mvsvar('SYMDEF','JOBNAME') date()  time()
say
/*********************************************************************/
/*  Attempt to ALLOC the  file                                       */
/*********************************************************************/
"ALLOC  F(FILE) PATH('"file"')  PATHOPTS(OWRONLY,OCREAT)",
"PATHMODE("access")  PATHDISP(KEEP,DELETE)"
if RC <> 0 then exit  1
/*********************************************************************/
/*  Confirm file is  there                                           */
/*********************************************************************/
 command = 'ls'  file
exit  BPXWUNIX(command,'DD:stdin','DD:stdout','DD:stderr','0')


Rob

