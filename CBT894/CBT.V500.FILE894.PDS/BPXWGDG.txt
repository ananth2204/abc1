Subject:  Re: BPXWDYN gdg(+1)
From:     Robert Zenuk <Robzenuk@aol.com>
Date:     4/19/2007 3:28 PM

If you can do this in a REXX EXEC (on the MVS side), here is a
routine that resolves a relative GDG to an absolute GDG...  If I
get some more time, I'll see if I can create a reasonable tool
for the USS side.

 arg dsn
say goovoo(dsn)
exit 0
goovoo: arg  dsn
if dsn = '' then  exit(99)
parse var dsn  gdgbase '(' relgdg ')'
if  relgdg = '' | relgdg > 0 then relgdg =  0
call outtrap  'lines.'
"LISTCAT ENT('"gdgbase"')  GDG ALL"
gdg =  0
do l=1 to  lines.0
line = translate(lines.l,'  ','-')
if  word(line,1) = 'NONVSAM'  then
do
gdg = gdg +  1
parse var line .  gds.gdg
end
end
absgdg = gdg +  relgdg
if abs(relgdg) >  gdg - 1  then
return 'INVALID'
else
return gds.absgdg


In a message dated 4/19/2007 10:06:12 AM US Mountain Standard Time,
Mark.Gibbons@nordstrom.com writes:

I'd like  to cp hfsfile //mvs.gdg(+1) from an mvs unix shell but cp
explicitly  doesn't support that syntax.

Can BPXWDYN be used to allocate a +1  generation of a GDG?  Then I might
be able to cp hfs //dd:gdgdd.   Doesn't look like it to me.  I've tried
but get obscure dynalloc  return codes.

todsn from dovetail looks like it has the same  restrictions as bpxwdyn.

Does anyone have any other method? I was  hoping for something already
existing.  I could write an assembler  routine to do the allocation, but
I'd rather  not.


thanks,
Mark

