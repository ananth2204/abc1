In a message dated 1/9/2007 6:49:18 PM US Mountain Standard Time,
kirk@dovetail.com writes:

What I can't do is call the TSO/E-address-space-only function LISTDSI.
LISTD with outtrap works under ADDRESS TSO in USS however, but I don't
think that I can distinguish a true PDSE.  Any other ideas and
techniques would be appreciated.

-----------------------------------------------------------------------

Subject:  Re: Checking for loadmodule PDSE from USS REXX shell script
From:     Robert Zenuk <Robzenuk@aol.com>
Date:     1/9/2007 11:45 PM

Here is a technique that has worked for me.  On the USS side, I
have a REXX EXEC that lets me use TSO services on the MVS side.

/*                              REXX                                 */
/* Purpose: Execute an MVS REXX EXEC from the USS  side              */
/*-------------------------------------------------------------------*/
/*  Syntax: mvsrexx dsn mem  parms                                   */
/*-------------------------------------------------------------------*/
/*  Parms: dsn        - REXX EXEC PDS to allocate  to SYSEXEC        */
/*         mem        - The REXX EXEC to  execute                    */
/*         parms      - Parms to pass to the  EXEC                   */
/*                                                                   */
/*********************************************************************/
/*                       Change  Log                                 */
/*                                                                   */
/*  Author        Date       Reason                                  */
/*  --------    ---------   -----------------------------------------*/
/*  R.  Zenuk    Oct 2002   Initial  Creation                        */
/*                                                                   */
/*********************************************************************/
/*  Accept DSN, MEM and  PARMS                                       */
/*********************************************************************/
parse  arg dsn mem  parms
dsn =  translate(dsn)
mem =  translate(mem)
/*********************************************************************/
/*  Display a startup  message                                       */
/*********************************************************************/
say  'EXEC:' mem 'executing from:' dsn 'using parms:'  parms
/*********************************************************************/
/*  Address the SHELL to ALLOC SYSEXEC and execute the TSO command   */
/*********************************************************************/
address  'SH'  'TSOALLOC=SYSEXEC',
'SYSEXEC="ALLOC  DSN('''dsn''') SHR REUSE  MSG(2)"',
'tso "%'mem  parms'"'
EXITRC =  RC
/*********************************************************************/
/*  Display a shutdown  message                                      */
/*********************************************************************/
shutdown:  say 'EXEC:' mem 'executed from:' dsn  'RC='EXITRC
            exit(EXITRC)

This allocates a REXX PDS on the MVS side and identifies an EXEC
to run and passes the required parms to the EXEC.  In this
example, I am executing an EXEC called LISTDSI that (you guessed
it) runs LISTDSI.  Here is the LISTDSI EXEC:

/* rexx  */
arg  dsn
dsn =  "'"dsn"'"
x =  listdsi(dsn)
say  sysdsname
say  sysvolume
say  syscreate
say sysdsorg  sysdssms
say dsn sysextents sysseconds sysunits sysalloc sysprimary

Here is the output from the Putty session where I ran it:


$ mvsrexx.rex my.exec listdsi my.pdse
EXEC: LISTDSI executing from:  MY.EXEC using parms: opsroz.pdse
IGD01008I DEFAULT STORAGE  CLASS

IGD01010I DEFAULT STORAGE GROUP  ASSIGNED

%LISTDSI my.pdse
MY.PDSE
TTS912
2007/009
PO LIBRARY
'MY.PDSE'  1 1 CYLINDER 1 1
EXEC: LISTDSI executed from: MY.EXEC RC=0
$

Hope  This Helps,
Rob

