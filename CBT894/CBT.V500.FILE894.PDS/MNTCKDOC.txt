Subject:  Re: NFS Mount
From:     Robert Zenuk <Robzenuk@aol.com>
Date:     10/12/2007 12:07 PM

We have what we consider to be a large number of NFS mounts (in
the hundreds with thousands of users).  We had a strategic project
to eliminate NDM and use NFS for all internal transfers.
Thousands of batch jobs were affected.  We found it much more
convenient to mount using a process outside of BPXPRMxx.  Since we
have so many users of NFS the change and IPL rate was going to be
way too high.  Additionally, the operational need to dynamically
mount, unmount/remount due to stale mounts, unanticipated network
issues and planned NAS maintenance pushed us into developing a
batch utility that we had all develolpers incorporate in every NFS
batch job.

The REXX utility is called MNTCHECK.  It has grown from an
original 200 line EXEC to almost 2000 lines.  Its original
purpose was simply to check to see if the requested mount was in
the mount table.  If so, simply return RC=0 and exit.  If the
mount was missing, it would use the input in the required MOUNT
DD to execute the supplied mount command and return RC=0 if it
worked and RC=???  if it didn't.  If it failed, there was an
attempt to explain in English what the problem was.

As expected very few mainframe folks are NFS aware.  The chore of
writing a successful and standardized MOUNT command was too much
for the average programmer (even with training and
documentation).  After seeing a gazillion different ways people
coded mount commands, we had to do something.  MNTCHECK evolved
to enforce our standards (regardless of what the user coded).
The utility also evovled to do extensive testing to determine if
the mount was capable of being successful (ping the server,
confirm the mount point directory existed, confirm the user had
the correct permission, confirm the target directory on the NAS
exists, confirm the correct permission are in place to access it,
confirm the /etc/exports contains the directory (or root),
confirm the /etc/netgroup contains the group (if used) and a few
others I am sure I am forgetting.

The bottom-line, is this approach has given us tremendous
flexibility in our mainframe NFS inplementation.  We can unmount
any NFS mount at anytime it is not in use and the next job
requiring the mount will remount it.  We have our weekly unmount
job that runs during a specific time when we tend to coordinate
mainframe and NAS maintenance so things are cleanly decoupled.

During the IPL, we also have a started task that runs that can
mount all NFS mounts required very early in the IPL process
(usually by other STC's).  This STC is another REXX EXEC that
simply reads a PDS full of mount commands and executes the same
MNTCHECK utility against each member.

Hope This Helps,

Rob

------------------------------------------------------------------

In a message dated 10/12/2007 6:20:09 AM US Mountain Standard Time,
rogerske@us.ibm.com writes:

A client wants to mount a shared disk of their Windows LAN to USS
in Read/Write mode.  I am pretty sure they can do this, but I was
wondering if it was better to put the mount in BPXPRMxx or a
operations automation process, after IPL?  Where is the best
place to learn NFS set up?  The Redbook links I tried today were
all broken.

