//* Rexx *//
/*

   RSQLEXEC Documentation.

   Rexx Exec to Read the Sql in a dataset, and execute it.

   Author: Alan Wynne

   Method of execution and parameters are:

   RSQLEXEC--------------------------------------------------------->A
                |                                       |
                |--Query--------------------------------|
                |       |--Rows--|                      |
                |                                       |
                |--Flat---------------------------------|
                |                                       |
                |--Txt----------------------------------|
                |                                       |
                |--CSV----------------------------------|
                |          |--TQ='?'-------------|      |
                |          |--TQ="?"-------------|      |
                |          |--TQ=""--------------|      |
                |          |--TQ='---------------|      |
                |          |--TQ=----------------|      |
                |                                       |
                |--CSVNoHeader--------------------------|
                |          |--TQ='?'-------------|      |
                |          |--TQ="?"-------------|      |
                |          |--TQ=""--------------|      |
                |          |--TQ='---------------|      |
                |          |--TQ=----------------|      |
                |                                       |
                |--HTML---------------------------------|
                          |--PT='Page Title'----|



    A>-------------------------------------------------------------->B
                |                        |
                |--SSID=ssid-------------|
                |                        |
                |--S=ssid----------------|

    B>-------------------------------------------------------------->C
                |                        |
                |--COMMIT=Yes------------|
                |                        |
                |--COMMIT=No-------------|


    C>----------------------------------------------------------| End
                |                        |
                |--Online----------------|
                |                        |
                |--Batch-----------------|


   Input Dataset:

   RSQLIN

   Input Dataset will be assigned to Filename RSQLIN. In this dataset
   the SQL to be executed should be found. Unlike QMF the dataset will
   accept SQL in free format and it's width is unrestricted. This means
   that the output of an SQL Statement can be used as the input to
   another SQL Statement.

   Parameters:

   Query or Q:

   Query or Q means output is to be normal output. Columns will be
   alligned and Column Headings will be supplied. Columns will be
   seperated by the nuber specified as the default Column Gap Size.
   Rows is the number of Rows that will be displayed before each column
   heading.

   Flat:

   Flat means that columns will be alligned but no space will seperate
   the columns. No Headings will be displayed either.

   CSV:

   CSV means that a Comma seperated variable file will be created.
   Comma seperated variables files will not be alligned by columns.
   Character type Columns will be enclosed in Double Quotes, Numeric
   type columns will not be enclosed in quotes. Commas will be used to
   seperate variables. The first row in the output dataset will contain
   column Headings.

   CSVNoHeader:

   CSVNoHeader is the same as CSV except that the first record in the
   file will not contain column headings.

   TQ:

   TQ is to define the Text Qualifier character to be used, and is only
   relevant for CSV and CSV No header file types. The Text qualifier is
   the character to be used to enclose text fields. The default text
   Qualifier will be set up in the RSQLDFLT Rexx. The parameter can be
   to overwite the default Text qualifier character. No text qualifier
   can also be specified by using the parameter TQ="" or TQ='' or TQ=

   HTML:

   HTML means that an HTML page will be generated with the data in a
   HTML Table. The Page Title part of the HTML parameters causes The
   text of Page Title to be the HTML Page Title.

   SSID= or S=:

   SSID=ssid or S=ssid stipulates which DB2 sub system to connect to.

   COMMIT:

   COMMIT parameter determines whether to commit at the end of execution
   or to Rollback. The default can be setup in RSQLDFLT. I suggest that
   the defualt be set up as COMMIT=No and that when a COMMIT is required
   it should be specifically requested.

   Online or Batch:

   Online or Batch are mutualy exclusive  and indicate whether the
   SQL is being executed in a batch mode or online mode. This is used
   to detemine the Output dataset. In online mode the Output datasets
   are detemined by the REXX Program in Batch mode the Output dataset
   is not determined by the program but by the JCL. When the program is
   executed by REXX in a Batch Job it may still operate in online mode.
   The program will default to operate in Online mode unless Batch mode
   is specifically stipulated.

   Output Dataset:

   There are two types of output dataset. The first type is a dataset
   that displays the operating results. It is equivalent to the SYSOUT
   dataset used by other utilities. This dataset is always required and
   allocated to DD Name RSQLOUT. The second type is only relevant to
   SQL that produces a result set. A Single execution of RSQLEXEC may
   desire the execution of more that one SQL Statement. When this occurs
   then all the processing information of each SQL Statement is shown in
   the RSQLOUT Dataset, but each possible result set will be output to a
   DD Name of RSnnnnnn, where nnnnnn is the relative number of the
   result set; i.e. the first result set will be output to DD name
   RS000001. SQL Update statments do not result in a result set and so
   the RSnnnnnn DD name is not required for these types of stements.

   Example JCL:

     //* =================================================================
     //* Run SQL in Batch
     //*
     //IKJ01#01 EXEC PGM=IKJEFT01,COND=(0,LT)
     //SYSEXEC  DD DISP=SHR,DSN=TRISDXX.REXX
     //SYSTSPRT DD SYSOUT=*
     //SYSTSIN  DD *
       RSQLEXEC CSV SSID=DB2A BATCH COMMIT=YES
     /*
     //RSQLIN   DD *
       select * from TABLEA  where COLUMNA = 'litereal-a' ;
       update TABLEA set COLUMNA = 'litereal-b'
         where COLUMNA = 'litereal-a' ;
       select * from TABLEA  where COLUMNA = 'litereal-a' ;
       select * from TABLEA  where COLUMNA = 'litereal-b' ;
     /*
     //RSQLOUT  DD SYSOUT=*
     //*
     //RS000001 DD DSN=&SYSUID..RSQLOUT.RS000001.CSV,
     //            DISP=(NEW,CATLG,CATLG),
     //            UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),
     //            DCB=(RECFM=FB,LRECL=nnn,BLKSIZE=nnnnn)
     //RS000002 DD DSN=&SYSUID..RSQLOUT.RS000002.CSV,
     //            DISP=(NEW,CATLG,CATLG),
     //            UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),
     //            DCB=(RECFM=FB,LRECL=nnn,BLKSIZE=nnnnn)
     //*
     //RS000003 DD DSN=&SYSUID..RSQLOUT.RS000003.CSV,
     //            DISP=(NEW,CATLG,CATLG),
     //            UNIT=SYSDA,SPACE=(TRK,(1,1),RLSE),
     //            DCB=(RECFM=FB,LRECL=nnn,BLKSIZE=nnnnn)
     //*
     //* =================================================================

   In the above JCL 4 SQL statements are to be executed, 3 select
   and 1 update statement. The result sets of the select statements are
   to be output to a CSV (Comma Seperated Variable) files. Since an
   update is also being performed the COMMIT=YES parameter is required.
   The DB2 System to be executed in is DB2A.


*/
