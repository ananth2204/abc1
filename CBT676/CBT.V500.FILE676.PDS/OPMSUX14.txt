OPMSUX14 TITLE 'VPS USER EXIT-14:  DATASET ADD'                   JM00
*---------------------------------------------------------------------*
*                                                                     *
*                            JIM MARSHALL, SOFTWARE "JANITOR"     JM00*
*                            US OFFICE OF PERSONNEL MANAGEMENT    JM00*
*                            CENTER FOR INFORMATION SERVICES/     JM00*
*                                DATA CENTER GROUP                JM00*
*                            1900 E STREET NW - ROOM BH04         JM00*
*                            WASHINGTON DC  20415                 JM00*
*                            (W) 202-606-1261 (0700-1530ET)       JM00*
*                            JIM.MARSHALL@OPM.GOV                 JM00*
*                                                                     *
*                                                                     *
*        VTAM PRINTER SUPPORT SYSTEM - VERSION 1, RELEASE 8.0         *
*                                                                     *
*        (C) COPYRIGHT - 1999, 2000                                   *
*                        LEVI, RAY & SHOUP, INC.                      *
*                        2401 WEST MONROE STREET                      *
*                        SPRINGFIELD, IL 62704                        *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*   MODULE NAME:    OPMSUX14                                      JM00*
*                                                                     *
*                                                                     *
*   EXIT NAME:      DATASET ADD                                       *
*                                                                     *
*                                                                     *
*   EXIT TYPE:      PRINTER                                           *
*                                                                     *
*                                                                     *
*   EXIT TCB:       PRINTER                                           *
*                                                                     *
*                                                                     *
*   RECOVERY:       EXITNN= KEYWORD DETERMINES RECOVERY ON/OFF        *
*                                                                     *
*                   RECOVERY ON:  EXIT WILL BE DISABLED               *
*                                                                     *
*                   RECOVERY OFF: PRINTER WILL BE 'EDRAINED'          *
*                                                                     *
*                                                                     *
*   ATTRIBUTES:     REENTRANT, REUSEABLE, REFRESHABLE                 *
*                                                                     *
*                   PROBLEM STATE, KEY 8                              *
*                                                                     *
*                   AUTHORIZED                                        *
*                                                                     *
*                   AMODE=31 RMODE=31                                 *
*                                                                     *
*                                                                     *
*   FUNCTION:       THIS EXIT ALLOWS INSERTION OF DATA (PRINT OR      *
*                   CONTROL) BOTH BEFORE AND AFTER EACH DATASET       *
*                   AND SEPARATOR PROCESSED BY VPS.                   *
*                                                                     *
*                                                                     *
*                                                                     *
*=====================================================================*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   FUNCTION:                                                         *
*                                                                     *
*     THIS SAMPLE EXIT, PROVIDED BY LRS, PERFORMS FUNCTIONS FOR THE   *
*     FOLLOWING SPECIAL PRINTER TYPES:                                *
*                                                                     *
*     TYPE                            SEPINFO                         *
*     -------------------             ---------                       *
*     HP PCL PRINTERS                 HPL......                       *
*     POSTSCRIPT PRINTERS             PS.......                       *
*     FAX SERVERS                     FAX......                       *
*                                                                     *
*                                                                     *
*     FOR A PRINTER THAT HAS 'HPL' AS THE FIRST THREE CHARACTERS OF   *
*     SEPINFO, THIS SAMPLE EXIT IS USED FOR SENDING PCL COMMANDS      *
*     TO THE PRINTER.  THIS CODE REQUIRES THAT THE HP LASER PRINTER   *
*     USE AN LU-1 (SCS) BIND OR AN LU-6 BIND OR THAT IT BE A TCP/IP   *
*     PRINTER.  LU-0 AND LU-3 (DSC) PRINTERS ARE NOT SUPPORTED.       *
*                                                                     *
*     FOR A PRINTER THAT HAS 'PS' AS THE FIRST TWO CHARACTERS OF      *
*     SEPINFO, THIS SAMPLE EXIT IS USED FOR SENDING POSTSCRIPT        *
*     FORMATTING CONTROLS TO THE PRINTER.  THIS CODE REQUIRES THAT    *
*     THE POSTSCRIPT PRINTER USE AN LU-1 (SCS) BIND OR AN LU-6 BIND   *
*     OR THAT IT BE A TCP/IP PRINTER.  LU-0 AND LU-3 (DSC) PRINTERS   *
*     ARE NOT SUPPORTED.                                              *
*                                                                     *
*     FOR A PRINTER THAT HAS 'FAX' AS THE FIRST THREE CHARACTERS OF   *
*     SEPINFO, THIS SAMPLE EXIT IS USED ALONG WITH EXIT22 TO SEND     *
*     FAX COMMAND LANGUAGE TO A FAX SERVER.  EXIT22 WILL REMOVE THE   *
*     FCL FROM THE INPUT AND SAVE IT IN WORKAREAS WHICH ARE ANCHORED  *
*     FROM THE FIRST PRINTER USER WORD. THE INPUT DATASET IS THEN     *
*     PASSED TO VPS/PCL FOR CONVERSION TO PCL.  EXIT14 THEN RESTORES  *
*     THE FCL BY READING THE WORKAREAS AND SENDING THE FCL BEFORE     *
*     AND/OR AFTER THE DATASET.                                       *
*                                                                     *
*     "USING VPS EXITS TO SEND PRINTER COMMANDS" IN THE "SPECIAL      *
*     TOPICS" SECTION OF THE VPS MANUAL DESCRIBES THESE FUNCTIONS.    *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   PROCESSING NOTES:                                                 *
*                                                                     *
*     THIS EXIT IS CALLED BEFORE AND AFTER SEPARATORS AND STANDARD    *
*     PRINT LINE DATASETS.                                            *
*                                                                     *
*     WHEN THIS EXIT IS CALLED FOR THE START-JOB SEPARATOR, THE       *
*     INFORMATION IN THE DATASET ATTRIBUTE LIST IS FOR THE FIRST OR   *
*     ONLY DATASET OF THE JOB.                                        *
*                                                                     *
*     WHEN THIS EXIT IS CALLED FOR THE END-JOB SEPARATOR, THE         *
*     INFORMATION IN THE DATASET ATTRIBUTE LIST IS FOR THE LAST OR    *
*     ONLY DATASET OF THE JOB.                                        *
*                                                                     *
*     THIS EXIT IS NOT CALLED IF VPS USER EXIT 02 GAVE A NON-ZERO     *
*     RETURN CODE FOR THE DATASET.                                    *
*                                                                     *
*     THIS EXIT CAN GIVE AN RC=04 ON THE FIRST CALL TO IT TO INDICATE *
*     NO DATA IS TO BE ADDED FOR THIS DATASET AT THIS TIME.           *
*                                                                     *
*************************** CAUTION ***********************************
*************************** CAUTION ***********************************
*************************** CAUTION ***********************************
*                                                                     *
*     THE FAX SERVER CODE OF THIS EXIT USES BOTH WORDS IN THE USER    *
*     WORK AREA PASSED TO THIS EXIT.  IF ANY OTHER PRINTER-RELATED    *
*     EXIT OVERLAYS THESE WORDS, RESULTS OF THIS EXIT MAY BE          *
*     INCORRECT.                                                      *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*   REGISTER USAGE:                                                   *
*                                                                     *
*      ON ENTRY:                                                      *
*         R0 ==>  REQUEST CODE.                                       *
*         R1 ==>  ADDRESS OF PARAMETER LIST.                          *
*        R13 ==>  ADDRESS OF CALLERS SAVEAREA.                        *
*        R14 ==>  RETURN ADDRESS.                                     *
*        R15 ==>  ENTRY  ADDRESS.                                     *
*                                                                     *
*      DURING EXECUTION:                                              *
*      R0-R1 ==>  VOLATILE.                                           *
*         R2 ==>  SYSTEM  ATTRIBUTE BASE REGISTER                     *
*         R3 ==>  TWO WORD WORKAREA.                                  *
*         R4 ==>  PRINTER ATTRIBUTE BASE REGISTER                     *
*         R5 ==>  DATASET ATTRIBUTE BASE REGISTER                     *
*         R6 ==>  LINE WORKAREA     BASE REGISTER                     *
*         R7 ==>  PRINTER COMMAND WORKAREA (VPSSPCMD) (HP OR PS)      * VPS80
*                 OR FAX  COMMAND WORKAREA (VPSSFAXC) (FAX)           * VPS80
*         R8 ==>  MODULE REQUEST CODE.                                * VPS80
*         R9 ==>  USED IN HP OR PS AS BASE FOR XMAT               JM01* VPS80
*                 OR FAX RECORD WORKAREA   (VPSSFAXR) (FAX)           * VPS80
*        R10 ==>  VOLATILE.                                           *
*        R11 ==>  EXIT WORKAREA BASE REGISTER.                        *
*        R12 ==>  PROGRAM BASE REGISTER.                              *
*        R13 ==>  ADDRESS OF CALLERS SAVEAREA.                        *
*    R14-R15 ==>  VOLATILE.                                           *
*                                                                     *
*      ON EXIT:                                                       *
*         ALL REGISTERS WILL BE RESTORED TO ENTRY CONDITIONS, EXCEPT  *
*      R15, WHICH WILL CONTAIN A RETURN CODE.                         *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*      REQUEST CODES:                                                 *
*         00 - ADD DATA BEFORE A DATASET                              *
*         04 - ADD DATA AFTER  A DATASET                              *
*         08 - CLEANUP EXIT RESOURCES, SEVERE ERROR DETECTED          *
*                                                                     *
*      PARAMETER LIST FORMAT:                                         *
*         +0  ADDRESS OF SYSTEM ATTRIBUTES (VPSSSYAT)                 *
*         +4  ADDRESS OF TWO WORD WORKAREA FOR THE USER               *
*         +8  ADDRESS OF PRINTER ATTRIBUTES (VPSSPRAT)                *
*        +12  ADDRESS OF DATASET ATTRIBUTES (VPSSDSAT)                *
*        +16  ADDRESS OF LINE AREA DSECT                              *
*        +20  ADDRESS OF XMEMORY ATTRIBUTES (VPSSXMAT)                *
*        +24  ADDRESS OF PRINTER COMMAND WORKAREA (VPSSPCMD)          * VPS80
*                                                                     *
*      RETURN CODES:                                                  *
*         00 - PROCESS THE DATA IN THE LINE WORKAREA                  *
*         04 - NO DATA TO PROCESS AND NO MORE CALLS ARE REQUIRED      *
*         08 - NO DATA TO PROCESS; DON'T PROCESS PCMD KEYWORDS        * VPS80
*         12 - UNDEFINED; TREATED AS RETURN CODE = 04                 *
*         16 - EDRAIN THE PRINTER (EXIT ENCOUNTERED SEVERE ERROR)     *
*                                                                     *
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
* CHANGE ACTIVITY:                                                    *
*                                                                     *
* 11/28/95 RWR CHANGED COMPARE FOR WRITER = BLANKS TO WRITER > BLANKS *
* 04/11/96 BJW CHANGED TO CHECK PRADEVF4 FOR TCPIP DEVICES            *
* 08/28/96 BJW CHANGED TO ADD CODE FOR FAX SERVERS                    *
* 09/20/99 GET CHANGED POSTSCRIPT END-SEQUENCE TO <CR>%%EOF<CR><EOT>  *
* 01/04/00 BJW CHANGED TO USE PCMDXXXX KEYWORD VALUES                 * VPS80
*                                                                     *
* 11/29/02 PRESENTLY THERE ARE TWO PRINTING SUBSYSTEMS ACTIVE AT  JM00*
*          OPM. INFOPRINT IS RUNNING ALONG WITH VPS. SEAMLESS     JM00*
*          CODE MUST BE PLACED TO MAKE THE COMPLETE TRANSITION TO JM00*
*          AN ALL VPS SYSTEM AND ALSO IMPLEMENT "FORM" NAME AS    JM00*
*          THE DRIVER FOR HOW PRINT STYLES WILL BE SPECIFIFED.    JM00*
*          TODAY, INFORPRINT USES THE "PROPTNS" OPTION OF THE     JM00*
*          OUTPUT STATEMENT AND VPS USES THE "WRITER" FIELD. THE  JM00*
*          CODE BELOW WILL MAKE A TRANSPARENT TRANSITION TO AN    JM00*
*          FORM NAME SYSTEM. HOPEFULLY IN THE FUTURE SOME CODE    JM00*
*          BE REMOVED. THE MOD'S WILL BE DONE IN TWO PARTS.       JM00*
*                                                                 JM00*
*          OVERALL STRATEGIES:                                    JM00*
*                                                                 JM00*
*          1. KEEP ALL FORM NAMES FOUR (4) CHARS OR LESS. IT      JM00*
*          ENABLES ALL CODING VARIATIONS OF THE PARAMETER TO BE   JM00*
*          CONSISTENT EVERYWHERE. TRUE, SOME PLACES CAN CODE 8,   JM00*
*          BUT OPM MODULES WILL ALWAYS BE LENGTH FOUR AS A        JM00*
*                                                                 JM00*
*          2. PRESENTLY, ALL PRINTERS ARE EITHER PCL CAPABLE, PCL JM00*
*          AND POSTSCRIPT CAPABLE, OR DOT MATRIX. IN THE FUTURE,  JM00*
*          IF POSTSCRIPT ONLY CAPABLE PRINTERS EMERGE, THEN MORE  JM00*
*          CODE WILL HAVE TO BE ADDED.                            JM00*
*                                                                 JM00*
* 11/29/02 INFOPRINT USES THE "PRTOPTNS" FIELD OF THE OUTPUT      JM00*
*          STATEMENT. CHECK FOR THE FOUR PUBLISHED OPTIONS &      JM00*
*          REPLACE WITH THE VPS EQUIVALENTS.                      JM00*
*                                                                 JM00*
*          IF "HPLAND", THEN SUBSTITUTE "SLXL"                JM00JM01*
*          IF "HPPORT", THEN SUBSTITUTE "SPXX"                JM00JM01*
*          IF "DUPLEXLAND", THEN SUBSTITUE "DSTD"             JM00JM01*
*          IF "DUPLEXPORT", THEN SUBSTITUE "DPXX"             JM00JM01*
*                                                                 JM00*
* 11/29/02 VPS WAS ORIGINALLY IMPLEMENTED USING THE "WRITER"      JM00*
*          FIELD AS THE DETERMINING FIELD FOR ANY PCL MODULE      JM00*
*          LOADING. THIS CHANGE WILL LOOK AT THE FIELD AND USE    JM00*
*          USE IT, OTHERWISE THE CODE PRESSES ON AND CHECKS       JM00*
*          THE FORM FIELD. IF THE FORM FIELD TAKES THE DEFAULT    JM00*
*          OF "STD", THEN USE WHATEVER IS CODED IN THE PCMDSTRT   JM00*
*          AND PCMDEND FIELDS.                                    JM00*
*                                                                 JM00*
*          NOTES:                                                 JM00*
*          1) WILL NOT BE USING "POSTSCRIPT" OR "FAX" PART OF     JM00*
*             THE CODE FOR NOW.                                   JM00*
*          2) INTENT IS TO KEEP CODED PARAMETERS:                 JM00*
*             PCMDEND=(SSTD,SSTD)                                 JM00*
*             PCMDSTRT=(SSTD,SSTD,WRITER)                         JM00*
*                                                                 JM01*
* 03/20/03 FOLD INTO CODE INFOPRINT PRINT MODULES NAMES FOR       JM01*
*          TRANSPARENT TRANSITION OFF OF INFOPRINT.               JM01*
*                                                                 JM01*
*          IF "HPLANDPL66",  THEN SUBSTITUTE "SLX6"               JM01*
*          IF "HPPORTPL66"   THEN SUBSTITUTE "SPX6"               JM01*
*          IF "CLASSA",      THEN SUBSTITUTE "SPXA"               JM01*
*          IF "BINARY",      THEN SUBSTITUTE "SPXB"               JM01*
*          IF "CLASSD",      THEN SUBSTITUTE "SPXD"               JM01*
*                                                                 JM01*
*                                                                 JM02*
* 05/05/03 CHECK THE PRINT MODULE REQUESTED TO SEE IF IT ACTUALLY JM02*
*          EXISTS. THE CHECK WILL BE DONE BY ISSUING A BLDL MACRO.JM02*
*                                                                 JM02*
*---------------------------------------------------------------------*
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        V P S S U E 1 4   E N T R Y                                  *
*                                                                     *
*---------------------------------------------------------------------*
OPMSUX14 CSECT                                                     JM00
OPMSUX14 AMODE ANY                                                 JM00
OPMSUX14 RMODE ANY                                                 JM00
         B     32(,R15)                BRANCH AROUND CONSTANTS.    JM00
         DC    CL8'OPMSUX14',CL8'&SYSDATE',CL8'&SYSTIME',C'V1R1'   JM00
         BAKR  R14,R0                  SAVE REGISTERS.
         LR    R12,R15                 LOAD PROGRAM BASE REGISTER.
         USING OPMSUX14,R12            EST PROGRAM BASE REGISTER   JM00
         SPACE
         LR    R8,R0                   SAVE REQUEST CODE.               VPS80
         LM    R2,R6,0(R1)             LOAD PARAMETER REGISTERS.        VPS80
         L     R7,24(,R1)              LOAD VPSSPCMD  BASE REGISTER.    VPS80
         LA    R7,0(,R7)               RESET HI-ORDER FLAG.             VPS80
         SPACE
         USING SYADSECT,R2             BASE REG: SYSTEM  ATTRIBUTES.
         USING PRADSECT,R4             BASE REG: PRINTER ATTRIBUTES.
         USING DSADSECT,R5             BASE REG: DATASET ATTRIBUTES.
         USING LINEDSCT,R6             BASE REG: LINE WORKAREA.
         USING PCMDDSCT,R7             BASE REG: PCMD WORKAREA.         VPS80
         L     R9,20(,R1)              CROSS MEMORY ATTR ADDR     JM01
         USING XMADSECT,R9             ADDRESSABILITY TO XMAT     JM01
         EJECT
*=====================================================================*
*        INSERT DATA ONLY IF PROCESSING A POSTSCRIPT OR               *
*        HEWLETT-PACKARD PCL PRINTER                                  *
*=====================================================================*
*                                                                     *
*        PRASEPI(2)='PS'  - DESIGNATES A POSTSCRIPT PRINTER           *
*                                                                     *
*        PRASEPI(3)='HPL' - DESIGNATES A HP PRINTER                   *
*                                                                     *
*        PRASEPI(3)='FAX' - DESIGNATES A FAX SERVER                   *
*                                                                     *
*---------------------------------------------------------------------*
         CLC   =CL2'PS',PRASEPI        IS THIS A POSTSCRIPT PRINTER?
         BE    PSPRTR                  YES, CONTINUE.
         CLC   =CL3'HPL',PRASEPI       IS THIS AN HP LASER PRINTER?
         BE    HPPRTR                  YES, CONTINUE.
         CLC   =CL3'FAX',PRASEPI       IS THIS A FAX SERVER?
         BE    FAXPRTR                 YES, CONTINUE.
         B     UXITRC04                RETURN W/ RC=04.
         EJECT
*=====================================================================* VPS80
*        POSTSCRIPT PRINTER (1ST 2 BYTES OF PRASEPI = 'PS')           * VPS80
*=====================================================================* VPS80
*                                                                     * VPS80
*        THE FUNCTIONS PROVIDED BY THIS EXIT IN PREVIOUS RELEASES     * VPS80
*        ARE NOW SUPPLIED BY THE FOLLOWING VPS PRINTER KEYWORDS:      * VPS80
*                                                                     * VPS80
*          PCMDACTN=(TRN,DEF)                     (VTAM)              * VPS80
*            OR...  (NOTRN,DEF)                   (TCPIP LPD/SOK)     * VPS80
*          PCMDDSNE=                              (NOT USED)          * VPS80
*          PCMDDSNS=                              (NOT USED)          * VPS80
*          PCMDEND=(FPS13266,FPS13266)                                * VPS80
*          PCMDOPTS=00000000                      (DEFAULT)           * VPS80
*          PCMDSEPE=                              (NOT USED)          * VPS80
*          PCMDSEPS=                              (NOT USED)          * VPS80
*          PCMDSTRT=(FPS13266,FPS13266,WRITER)                        * VPS80
*                                                                     * VPS80
*       TO SPECIFY THE TRANSPARENCY CHARACTER FOR VTAM DEVICES, SET   * VPS80
*       THE 3RD SUBFIELD OF THE TRNCLASS KEYWORD.                     * VPS80
*          TRNCLASS=(,C,35)                       (VTAM)              * VPS80
*                                                                     * VPS80
*---------------------------------------------------------------------* VPS80
*                                                                     * VPS80
*        START DATASET REQUEST:                                       * VPS80
*                                                                     * VPS80
*        THIS EXIT SETS RC=08 IF THE WRITER NAME = 'ZZZZZZZZZ' TO     * VPS80
*        INDICATE THAT NO PRINTER COMMANDS SHOULD BE SENT BY VPS.     * VPS80
*                                                                     * VPS80
*        OTHERWISE, THIS EXIT SETS RC=04 TO INDICATE THAT THE EXIT    * VPS80
*        HAS NO MORE DATA TO SEND AND THAT VPS SHOULD SEND THE        * VPS80
*        COMMANDS AS SPECIFIED IN THE ABOVE KEYWORDS.                 * VPS80
*                                                                     * VPS80
*---------------------------------------------------------------------* VPS80
*                                                                     * VPS80
*        END DATASET REQUEST:                                         * VPS80
*                                                                     * VPS80
*        THIS EXIT SETS RC=08 IF THE WRITER NAME = 'ZZZZZZZZZ' TO     * VPS80
*        INDICATE THAT NO PRINTER COMMANDS SHOULD BE SENT BY VPS.     * VPS80
*                                                                     * VPS80
*        OTHERWISE, THIS EXIT SETS RC=04 TO INDICATE THAT THE EXIT    * VPS80
*        HAS NO MORE DATA TO SEND AND THAT VPS SHOULD SEND THE        * VPS80
*        COMMANDS AS SPECIFIED IN THE ABOVE KEYWORDS.                 * VPS80
*                                                                     * VPS80
*---------------------------------------------------------------------* VPS80
PSPRTR   DS    0H                      ********************************
         CLI   PRALUTYP,$PRALU1        LU-1 DEVICE?                     VPS61087
         BE    PS005                   YES, CONTINUE.                   VPS61087
         CLI   PRALUTYP,$PRALU6        LU-6 DEVICE?                     VPS61087
         BE    PS005                   YES, CONTINUE.                   VPS61087
         CLI   PRALUTYP,$PRALUT        TCPIP DEVICE?                    VPS61087
         BE    PS005                   YES, CONTINUE.                   VPS61087
         B     UXITRC04                RETURN W/ RC=04.                 VPS61087
         SPACE
*---------------------------------------------------------------------* VPS61087
*        ROUTE CONTROL BASED ON REQUEST CODE                          * VPS61087
*---------------------------------------------------------------------* VPS61087
PS005    DS    0H                      ********************************
         B     PS010(R8)               TAKE APPROPRIATE ACTION.         VPS61087
PS010    DS    0H                      ********************************
         B     PSSTART                 0 - ADD DATA BEFORE DATASET.     VPS61087
         B     PSEND                   4 - ADD DATA AFTER  DATASET.     VPS61087
         B     CLEANUP                 8 - SEVERE ERROR DETECTED.       VPS61087
         EJECT
*---------------------------------------------------------------------* VPS80
*                                                                     * VPS80
*        START DATASET REQUEST                                        * VPS80
*                                                                     * VPS80
*---------------------------------------------------------------------* VPS80
*        EXAMINE WRITER NAME FOR 'ZZZZZZZZ'                           * VPS80
*---------------------------------------------------------------------* VPS80
PSSTART  DS    0H                      ******************************** VPS80
         CLC   DSAWTR,=CL8'ZZZZZZZZ'   WRITER = ZZZZZZZZ?               VPS80
         BE    UXITRC08                YES, RETURN W/ RC=08.            VPS80
         B     UXITRC04                RETURN W/ RC=04.                 VPS80
         SPACE                                                          VPS80
*---------------------------------------------------------------------* VPS80
*                                                                     * VPS80
*        END DATASET REQUEST                                          * VPS80
*                                                                     * VPS80
*---------------------------------------------------------------------* VPS80
*        EXAMINE WRITER NAME FOR 'ZZZZZZZZ'                           * VPS80
*---------------------------------------------------------------------* VPS80
PSEND    DS    0H                      ******************************** VPS80
         CLC   DSAWTR,=CL8'ZZZZZZZZ'   WRITER = ZZZZZZZZ?               VPS80
         BE    UXITRC08                YES, RETURN W/ RC=08.            VPS80
         B     UXITRC04                EXIT W/ RC=00.                   VPS80
         EJECT
*=====================================================================*
*        HP PRINTER (1ST 3 BYTES OF PRASEPI = 'HPL')                  *
*=====================================================================*
*                                                                     * VPS80
*        THE FUNCTIONS PROVIDED BY THIS EXIT IN PREVIOUS RELEASES     * VPS80
*        ARE NOW SUPPLIED BY THE FOLLOWING VPS PRINTER KEYWORDS:      * VPS80
*                                                                     * VPS80
*          PCMDACTN=(TRN,DEF)                     (VTAM)              * VPS80
*            OR...  (NOTRN,DEF)                   (TCPIP LPD OR SOK)  * VPS80
*          PCMDEND=(SSTD,SSTD)                                        * VPS80
*          PCMDDSNE=                              (NOT USED)          * VPS80
*          PCMDDSNS=                              (NOT USED)          * VPS80
*          PCMDOPTS=00000000                      (DEFAULT)           * VPS80
*          PCMDSEPE=                              (NOT USED)          * VPS80
*          PCMDSEPS=                              (NOT USED)          * VPS80
*          PCMDSTRT=(SSTD,SSTD,WRITER)                                * VPS80
*                                                                     * VPS80
*       TO SPECIFY THE TRANSPARENCY CHARACTER FOR VTAM DEVICES, SET   * VPS80
*       THE 3RD SUBFIELD OF THE TRNCLASS KEYWORD.                     * VPS80
*          TRNCLASS=(,C,35)                       (VTAM)              * VPS80
*                                                                     * VPS80
*---------------------------------------------------------------------* VPS80
*                                                                     * VPS80
*        START DATASET REQUEST:                                       * VPS80
*                                                                     * VPS80
*        THIS EXIT SETS RC=08 IF THE WRITER NAME = 'ZZZZZZZZZ' TO     * VPS80
*        INDICATE THAT NO PRINTER COMMANDS SHOULD BE SENT BY VPS.     * VPS80
*                                                                     * VPS80
*        IF THE WRITER NAME = BLANKS, THE NAME OF THE DEFAULT         * VPS80
*        MODULE TO BE LOADED AND USED IS SET TO 'DSTD' FOR SYSOUT     * VPS80
*        CLASS = 'D' AND LEFT AS THE DEFAULT FOR ALL OTHER SYSOUT     * VPS80
*        CLASSES.  THE EXIT RETURNS WITH RC=04.                       * VPS80
*                                                                     * VPS80
*        OTHERWISE, THIS EXIT SETS RC=04 TO INDICATE THAT THE EXIT    * VPS80
*        HAS NO MORE DATA TO SEND AND THAT VPS SHOULD SEND THE        * VPS80
*        COMMANDS AS SPECIFIED IN THE ABOVE KEYWORDS.                 * VPS80
*                                                                     * VPS80
*---------------------------------------------------------------------* VPS80
*                                                                     * VPS80
*        END DATASET REQUEST:                                         * VPS80
*                                                                     * VPS80
*        THIS EXIT SETS RC=08 IF THE WRITER NAME = 'ZZZZZZZZZ' TO     * VPS80
*        INDICATE THAT NO PRINTER COMMANDS SHOULD BE SENT BY VPS.     * VPS80
*                                                                     * VPS80
*        OTHERWISE, THIS EXIT SETS RC=04 TO INDICATE THAT THE EXIT    * VPS80
*        HAS NO MORE DATA TO SEND AND THAT VPS SHOULD SEND THE        * VPS80
*        COMMANDS AS SPECIFIED IN THE ABOVE KEYWORDS.                 * VPS80
*                                                                     *
*---------------------------------------------------------------------*
HPPRTR   DS    0H                      ********************************
         CLI   PRALUTYP,$PRALU1        LU-1 DEVICE?
         BE    HP005                   YES, CONTINUE.
         CLI   PRALUTYP,$PRALU6        LU-6 DEVICE?
         BE    HP005                   YES, CONTINUE.
         CLI   PRALUTYP,$PRALUT        TCPIP DEVICE?
         BE    HP005                   YES, CONTINUE.
         B     UXITRC04                RETURN W/ RC=04.
         SPACE
*---------------------------------------------------------------------*
*        ROUTE CONTROL BASED ON REQUEST CODE                          *
*---------------------------------------------------------------------*
HP005    DS    0H                      ********************************
         B     HP010(R8)               TAKE APPROPRIATE ACTION.
HP010    DS    0H                      ********************************
         B     HPSTART                 0 - ADD DATA BEFORE DATASET.
         B     HPEND                   4 - ADD DATA AFTER  DATASET.
         B     CLEANUP                 8 - SEVERE ERROR DETECTED.
         EJECT
*---------------------------------------------------------------------* VPS80
*                                                                     * VPS80
*        START DATASET REQUEST                                        * VPS80
*                                                                     * VPS80
*---------------------------------------------------------------------* VPS80
HPSTART  DS    0H                      ******************************** VPS80
         CLI   DSATYPE,$DSASTDP        NORMAL DATASET? (NON-SEPARATOR)  VPS80
         BNE   UXITRC04                IF SEPARATOR, EXIT W/ RC=04.     VPS80
         SPACE                                                          VPS80
*---------------------------------------------------------------------* VPS80
*        NORMAL DATASET                                               * VPS80
*---------------------------------------------------------------------* VPS80
         TM    DSASDTYP,$DAFPDS        AFPDS CONVERSION ACTIVE?         VPS80
         BO    UXITRC04                YES, EXIT W/ RC=04.              VPS80
         SPACE 1                                                  JM00
*---------------------------------------------------------------- JM00*
*        KEEP CHECK FOR "WRITER=ZZZZZZZZ" TO BYPASS ALL PCMDS.    JM00*
*---------------------------------------------------------------- JM00*
         SPACE 1                                                  JM00
         CLC   DSAWTR,=CL8'ZZZZZZZZ'   WRITER = ZZZZZZZZ?               VPS80
         BE    UXITRC08                YES, EXIT W/ RC=08; BYPASS PCMDS VPS80
*---------------------------------------------------------------- JM00*
*        IF THERE WAS A MODULE FAILED TO LOAD FROM THE ONE        JM00*
*        SPECIFIED IN THE &WRITER FIELD, THEN JUST RETURN.        JM00*
*---------------------------------------------------------------- JM00*
         TM    PCMDFLG1,$PCMSLER       ERROR LOADING FORMAT MOD?  JM00  VPS80
         BO    UXITRC04                YES, EXIT W/RC=04;         JM00  VPS80
         SPACE 1                                                  JM00
*---------------------------------------------------------------- JM00*
*        CHECK THE "PRTOPTNS" FIELD FOR INFOPRINT DOCUMENTED      JM00*
*        PARAMETERS AND CONVERT THEM INTO EQUIVALENT FORMNAME     JM00*
*                                                                 JM00*
*        IF "HPLAND" THEN FORM=SLXL   (132X66 LAND, SIMPLEX)  JM00JM01*
*        IF "HPPORT" THEN FORM=SPXP   (85X60 PORT, SIMPLEX)   JM00JM01*
*        IF "DUPLEXLAND" THEN FORM=DLXL (132X66 LAND, DUPLEX) JM00JM01*
*        IF "DUPLEXPORT" THEN FORM=DPXP (132X66 PORT, DUPLEX) JM00JM01*
*        IF "HPLANDPL66" THEN FORM=SLX6                       JM00JM01*
*        IF "HPPORTPL66" THEN FORM=SPX6                       JM00JM01*
*        IF "BINARY"     THEN FORM=SPXB                       JM00JM01*
*        IF "CLASSA"     THEN FORM=SPXA                       JM00JM01*
*        IF "CLASSD"     THEN FORM=SPXD                       JM00JM01*
*---------------------------------------------------------------- JM01*
         SPACE 1                                                  JM01
         L     R15,XMAORAT             GET ADDRESS OF XMAT        JM01
         USING ORADSECT,R15            ESTABLISH ADDRESSABILITY   JM01
         TM    ORAKEY07,$ORAPTOP       IS PRTOPTNS SPECIFIED      JM01
         BNO   JMCONT2                 IF SO, SKIP CHECKS.        JM01
         CLI   ORAPTOP,C' '            IS IT BLANK OR LESS        JM01
         BNH   JMCONT2                 IF SO, SKIP CHECKS.        JM01
         SPACE 1                                                  JM01
         LA    R1,OPMTAB               POINT TO THE TABLE         JM01
JMLOOP   EQU   *                                                  JM01
         CLI   0(R1),X'FF'             END OF TABLE?              JM01
         BE    JMCONT2                 CONTINUE ON                JM01
         CLC   ORAPTOP(16),8(R1)       COMPARE AGAINST TABLE      JM01
         BE    JMCONT1                 MATCH                      JM01
         LA    R1,24(,R1)              BUMP ALONG TABLE           JM01
         B     JMLOOP                                             JM01
         DROP  R15                     DROP ADDRESSABILITY        JM01
         SPACE 1                                                  JM01
* --------------------------------------------------------------- JM01*
*        SINCE WE ARE CONVERTING FROM INFOPRINT TO VPS, THERE     JM01*
*        NO 'BLDL' TO CHECK IF THE MODULE EXISTS.                 JM01*
* --------------------------------------------------------------- JM01*
         SPACE 1                                                  JM00
JMCONT1  EQU   *                                                  JM00
         MVC   PCMDSYNM(8),0(R1)       MOVE IN MODULE NAME        JM00
         MVC   PCMDEYNM,=CL8'ZZZRESET' SET DYNAMIC END NAME       JM00
         OI    PCMDFLG4,$PCMSDYN+$PCMEDYN  TURN ON DYN MOD FLAGS  JM00
         NI    PCMDFLG4,255-($PCMSMOD+$PCMSSTG+$PCMEMOD+$PCMESTG) JM00
         B     UXITRC04                EXIT W/ RC=04; SEND PMCDS  JM00
         SPACE 1                                                  JM00
* --------------------------------------------------------------- JM02*
*        NEED TO CHECK THE WRITER FIELD FOR LEGACY CODING. IF IT  JM02*
*        INDEED IS CODED, THEN WILL USE IT. IF FORM IS CODED, IT  JM02*
*        WILL BE IGNORED.                                         JM02*
*                                                                 JM02*
*        BUT SINCE WE ARE CODING &WRITER IN THE PARAMETERS, THEN  JM02*
*        THIS WOULD LOOK LIKE A NORMAL DATASET, WRITER=NON-BLANK  JM02*
*        AND HAVE HAD A LOAD ERROR FOR WRITER NAME. SO FOR THE    JM02*
*        DYNAMIC MODULE LOAD ERROR, JUST SEND RESET AT START.     JM02*
*-----------------------------------------------------------------JM02*
         SPACE 1                                                  JM02
JMCONT2  EQU   *                                                  JM02
         CLI   DSAWTR,C' '             ANY WRITER SPECIFIED       JM02
         BNH   JMCONT3                 NO, SO LOOK AT FORM NAME   JM02
         SPACE 1                                                  JM02
         MVC   XMAUSER(8),DSAWTR       SAVE WRITER NAME USED      JM02
         B     JMCONT3C                DO GETMAIN/BLDL/FREEMAIN   JM02
         SPACE 1                                                  JM02
* ----------------------------------------------------------------JM02*
*        NOW WE GO LOOK AT FORM FIELD                             JM02*
* ----------------------------------------------------------------JM02*
         SPACE 1                                                  JM02
JMCONT3  EQU   *                                                  JM02
         CLI   DSAFORM,C' '            ANY FORM SPECIFIED         JM02
         BNH   JMCONT9                 NO, SO LOOK AT FORM NAME   JM02
         CLC   DSAFORM(8),=CL8'STD '   ASKING FOR DEFAULT         JM02
         BE    JMCONT9                                            JM02
         MVC   XMAUSER(8),DSAFORM      GET THE FORM NAME USED     JM02
         SPACE 1                                                  JM02
* --------------------------------------------------------------- JM02*
*        NEED TO DO GETMAIN AND IT MUST BE BELOW THE 16M LINE     JM02*
*        FOR BLDL. ALSO GET SOME STORAGE FOR A POSSIBLE WTO.      JM02*
* --------------------------------------------------------------- JM02*
         SPACE 1                                                  JM02
JMCONT3C EQU   *                                                  JM02
         $$VPSERV REQUEST=GETMAIN,                                JM02 X
               LV=UE14DSLN,            LENGTH TO GET              JM02 X
               SYAT=YES,               SYAT IS AVAILABLE          JM02 X
               LOC=BELOW,              BELOW 16M                  JM02 X
               MF=S                                               JM02
         LR    R11,R1                  SAVE ADDRESS               JM02
         USING UE14DSCT,R11            ESTAB WORKAREA ADDRESSABILITY.
         SPACE
         MVC   UE14ID,=CL20'OPMSUX14 WORKAREA' SET EYE-CATCHERJM02JM00
         SPACE 1                                                  JM02
* --------------------------------------------------------------- JM02*
*        USER IS ASKING FOR SOME FORMAT MODULE. CHECK TO SEE IF   JM02*
*        IT ACTUALLY EXISTS. IF IT DOES, GIVE IT TO HIM/HER. IF   JM02*
*        NOT THEN SUBSTITUE "SSTD" (UNTIL WE CAN WIRE IN A WTO).  JM02*
*                                                                 JM02*
*        *--*--*--------*---*-*-*-*-------- .......--*--- ... --  JM02*
*        *FF*LL* NAME1  *TTR*K*Z*C*  USER DATA       * NAME2      JM02*
*        *--*--*--------*---*-*-*-*-------- .......--*--- ... --  JM02*
*                                                                 JM02*
*        WHERE:    FF        BINARY VALUE, TOTAL ENTRIES IN LIST  JM02*
*                  LL        BINARY VALUE OF LENGTH, IN BYTES, OF JM02*
*                            EACH ENTRY IN THE LIST (EVEN NUMBER).JM02*
*                            MINIMUM LENGTH IS 12.                JM02*
*                  NAME1     MEMBER NAME OR ALIAS. 8 BYTES WITH   JM02*
*                            PADDED BLANKS.                       JM02*
*                  TT        RELATIVE TRK NUMBER FOR BEGINNING OF JM02*
*                            THE DATA SET MEMBER.                 JM02*
*                  R         RELATIVE RECORD NUMBER ON "TT" TRACK JM02*
*                  K         CONCATENATION NUMBER OF DATA SET.    JM02*
*                  Z         WHERE SYSTEM FOUND DIRECTORY ENTRY   JM02*
*                            0     - PRIVATE LIBRARY              JM02*
*                            1     - LINK LIBRARY                 JM02*
*                            2     - JOB, TASK, OR STEPLIB        JM02*
*                            3-255 - JOB, TASK, OR STEPLIB OF PAR-JM02*
*                                    ENT TASK "N", WHERE N = Z-2  JM02*
*                  C         INDICATES TYPE OF MEMBER OR ALIAS    JM02*
*                            (SEE MANUAL)                         JM02*
*                                                                 JM02*
*                  USERDATA  USER DATA FROM DIRECTORY ENTRY.      JM02*
*                                                                 JM02*
*                                                                 JM02*
*        RESULTS:  R15  EQ   0    IMPLIES FOUND                   JM02*
*                  R15  NE   0    NOT FOUND                       JM02*
* --------------------------------------------------------------- JM02*
         SPACE 1                                                  JM02
         XC    JMBLDL(18),JMBLDL       CLEAR OUT FIELD            JM02
         MVI   JMNUM+1,1               INDICATE ONE TO FIND       JM02
         MVI   JMLEN+1,14              RETURN 14 BYTES OF DATA    JM02
         MVC   JMNAME(8),XMAUSER       RETURN 14 BYTES OF DATA    JM02
         LA    R0,JMBLDL               POINT TO LIST BELOW 16M    JM02
         BLDL  0,(0)                   IND STEPLIB OR LINKLIB     JM02
         LTR   R15,R15                 SUCCESSFUL?                JM02
         BZ    JMCONT3O                GOOD NEWS                  JM02
         SPACE 1                                                  JM02
* --------------------------------------------------------------- JM02*
*        MODULE NAME IS INVALID AND NEEDS TO BE REPORTED.         JM02*
* --------------------------------------------------------------- JM02*
         SPACE 1                                                  JM02
         LA    R14,UE14WTAT            ADDR OF WTAT WORKAREA      JM02
         USING WTADSECT,R14            EST WTAT ADDRESSABILITY    JM02
         OI    WTATYPE,WTATNOR         SET NORMAL MSG TYPE        JM02
         MVC   WTAMSGID,=AL2(9999)     SET MESSAGE TO 9999        JM02
         MVI   WTATEXT,C' '            MOVE IN BLANK              JM02
         MVC   WTATEXT+1(L'WTATEXT-1),WTATEXT  CLEAR MSG AREA     JM02
         SPACE 1                                                  JM02
         LA    R1,L'WTOTEXT1           LOAD LENGTH OF MSG TEXT    JM02
         STCM  R1,B'0011',WTALGTH      SET LENGTH OF MSG TEXT     JM02
         MVC   WTATEXT(L'WTOTEXT1),WTOTEXT1 INITIALIZE MSG TEXT   JM02
         SPACE 1                                                  JM02
         MVC   WTATEXT+09(8),SYASTCNM  SET STC NAME               JM02
         MVC   WTATEXT+18(8),PRAMNAME  SET VPSLIB NAME            JM02
         MVC   WTATEXT+27(8),DSAJOBNM  SET JOBNAME                JM02
         MVC   WTATEXT+36(8),DSAJOBID  SET JOBID                  JM02
         MVC   WTATEXT+45(8),DSADEST   SET DESTINATION            JM02
         MVC   WTATEXT+74(8),XMAUSER   SET MODULE NAME            JM02
         DROP  R14                     DROP WTAT ADDRESSABILITY   JM02
         SPACE 1                                                  JM02
         $$VPSERV REQUEST=WTO,                                    JM02 X
               WTOAREA=UE14WTAT,                                  JM02 X
               SYAT=YES,                                          JM02 X
               MF=(E,UE14SERV)                                    JM02
         SPACE 1                                                  JM02
         MVC   XMAUSER(8),=CL8'SLGA'   LOAD A GOOD NAME           JM02
         SPACE 1                                                  JM02
* --------------------------------------------------------------- JM02*
*        GOOD NEWS, THE MODULE IS VALID AND ALL WE NEED TO DO     JM02*
*        IS SPECIFY THE NAME, DO A FREEMAIN, AND RETURN WITH THE  JM02*
*        PROPER FLAGS SET.                                        JM02*
* --------------------------------------------------------------- JM02*
JMCONT3O EQU   *                                                  JM02
         $$VPSERV REQUEST=FREEMAIN,                               JM02 X
               A=(R11),                                           JM02 X
               LV=UE14DSLN,                                       JM02 X
               SYAT=YES,               SYAT IS AVAILABLE          JM02 X
               MF=S                                               JM02
         DROP  R11                                                JM02
         SPACE 1                                                  JM02
         MVC   PCMDSYNM(8),XMAUSER     SET START MODULE NAME      JM00
         MVC   PCMDEYNM(8),=CL8'ZZZRESET' SET DYN END NAME.       JM00
         OI    PCMDFLG4,$PCMSDYN+$PCMEDYN ON DYN MODULE FLAGS     JM00
         NI    PCMDFLG4,255-($PCMSMOD+$PCMSSTG+$PCMEMOD+$PCMESTG) JM00
         SPACE 1                                                  JM00
*-----------------------------------------------------------------JM00*
*        IN THIS CASE, THERE ARE NO OVERRIDES CHANGING PRTOPTNS   JM00
*        OR VALUE CODED IN "WRITER". THUS WITH NO OVERRIDE USING  JM00
*        FORM NAME, THEN WE WILL TAKE THE VALUES CODED IN         JM00
*        PCMDSTRT AND PCMDEND.                                    JM00
*-----------------------------------------------------------------JM00*
         SPACE 1                                                  JM00
JMCONT9  EQU   *                                                  JM00
         XC    XMAUSER(08),XMAUSER     CLEAR LIST                 JM02
         DROP  R9                                                 JM00
         B     UXITRC04                EXIT W/ RC=04; SEND PCMD   JM00
         SPACE 1                                                  JM00
*-----------------------------------------------------------------JM00*
*        SOME DEAD CODE FOLLOWS.                                  JM00
*-----------------------------------------------------------------JM00*
         SPACE 1                                                  JM00
         CLI   DSAWTR,C' '             ANY WRITER NAME SPECIFIED?       VPS80
         BH    HPS005                  YES, CHECK FOR LOAD ERROR.       VPS80
         CLI   DSACLS,C'D'             SYSOUT CLASS = D?                VPS80
         BE    HPS010                  YES, SET MODULE NAME.            VPS80
         B     UXITRC04                EXIT W/ RC=04; SEND PMCDS.       VPS80
         SPACE                                                          VPS80
*---------------------------------------------------------------------* VPS80
*        NORMAL DATASET, WRITER=NON-BLANK, LOAD ERROR FOR WRITER NAME * VPS80
*        IF DYNAMIC MODULE LOAD ERROR, JUST SEND RESET AT START       * VPS80
*---------------------------------------------------------------------* VPS80
HPS005   DS    0H                      ******************************** VPS80
         TM    PCMDFLG1,$PCMSLER       ERROR LOADING FORMAT MODULE?     VPS80
         BZ    UXITRC04                NO, EXIT W/ RC=04; SEND DEFAULT. VPS80
         MVC   PCMDSYNM,=CL8'ZZZRESET' SET DYNAMIC START NAME ZZZRESET. VPS80
         OI    PCMDFLG4,$PCMSDYN       TURN ON DYNAMIC START MODULE FLG VPS80
         NI    PCMDFLG4,255-($PCMSMOD+$PCMSSTG)  RESET OTHER START FLGS VPS80
         NI    PCMDFLG4,255-($PCMEMOD+$PCMESTG+$PCMEDYN) RESET END FLGS VPS80
         B     UXITRC04                EXIT W/ RC=04; SEND PMCDS.       VPS80
         SPACE                                                          VPS80
*---------------------------------------------------------------------* VPS80
*        NORMAL DATASET, WRITER=BLANKS, CLASS=D                       * VPS80
*        SET BEGIN COMMAND MODULE NAME TO DSTD                        * VPS80
*        SET END   COMMAND MODULE NAME TO ZZZRESET                    * VPS80
*        SET FLAGS TO SEND DYNAMIC MODULE AT BEGIN & END              * VPS80
*        RESET FLAGS FOR DEFAULT MODULE OR STRING AT BEGIN OR END     * VPS80
*---------------------------------------------------------------------* VPS80
HPS010   DS    0H                      ******************************** VPS80
         MVC   PCMDSYNM,=CL8'DSTD'     SET DYNAMIC START NAME OF DSTD.  VPS80
         MVC   PCMDEYNM,=CL8'ZZZRESET' SET DYNAMIC END NAME OF ZZZRESET VPS80
         OI    PCMDFLG4,$PCMSDYN+$PCMEDYN  TURN ON DYNAMIC MODULE FLAGS VPS80
         NI    PCMDFLG4,255-($PCMSMOD+$PCMSSTG+$PCMEMOD+$PCMESTG)       VPS80
         B     UXITRC04                AND EXIT W/ RC=04; SEND PMCDS.   VPS80
         EJECT                                                          VPS80
*---------------------------------------------------------------------* VPS80
*                                                                     * VPS80
*        END DATASET REQUEST                                          * VPS80
*                                                                     * VPS80
*---------------------------------------------------------------------* VPS80
HPEND    DS    0H                      ******************************** VPS80
         CLI   DSATYPE,$DSASTDP        NORMAL DATASET? (NON-SEPARATOR)  VPS80
         BNE   UXITRC04                IF SEPARATOR, EXIT W/ RC=04.     VPS80
         TM    DSASDTYP,$DAFPDS        AFPDS CONVERSION ACTIVE?         VPS80
         BO    UXITRC04                YES, EXIT W/RC = 04.             VPS80
         CLC   DSAWTR,=CL8'ZZZZZZZZ'   WRITER = ZZZZZZZZ?               VPS80
         BE    UXITRC08                YES, RETURN W/ RC=08.            VPS80
         B     UXITRC04                EXIT WITH RC=04.                 VPS80
         EJECT
*=====================================================================*
*                                                                     *
*        FAX SERVER (1ST 3 BYTES OF PRASEPI = 'FAX')                  *
*                                                                     *
*=====================================================================*
*                                                                     *
*      REGISTER USE IN THIS SECTION:                                  *
*                                                                     *
*      DURING EXECUTION:                                              *
*      R0-R1 ==>  VOLATILE.                                           *
*         R2 ==>  SYSTEM  ATTRIBUTE BASE REGISTER.                    *
*         R3 ==>  TWO WORD WORKAREA.                                  *
*         R4 ==>  PRINTER ATTRIBUTE BASE REGISTER.                    *
*         R5 ==>  DATASET ATTRIBUTE BASE REGISTER.                    *
*         R6 ==>  LINE WORKAREA     BASE REGISTER.                    *
*         R7 ==>  FAXC WORKAREA     BASE REGISTER.                    * VPS80
*         R8 ==>  REQUEST CODE.                                       *
*         R9 ==>  FAXR WORKAREA IN FAX CODE                           *
*        R10 ==>  END OF DATA IN FCL WORK AREA ADDRESS.               *
*        R11 ==>  FAX WORKAREA BASE REGISTER.                         *
*        R12 ==>  PROGRAM BASE REGISTER.                              *
*        R13 ==>  ADDRESS OF CALLERS SAVEAREA.                        *
*    R14-R15 ==>  VOLATILE.                                           *
*                                                                     *
*=====================================================================*
*        IF WE'RE DONE ADDING DATA, THE 2ND 4 BYTES OF THE 2 WORD     *
*        USER AREA WILL HAVE BEEN SET TO A(-1).  IF IT IS SET, THEN   *
*        WE'LL CLEAR IT AND EXIT WITH RC=04.                          *
*---------------------------------------------------------------------*
FAXPRTR  DS    0H                      ********************************
         DROP  R7                      KILL PCMD ADDRESSABILITY.
         MVI   LINELNF,X'00'           RESET LINE FLAG 1.
         MVI   LINELNF2,X'00'          RESET LINE FLAG 2.
         XC    LINELNL,LINELNL         RESET LINE LENGTH.
         SPACE
         LA    R0,LINELNC              LOAD ADDRESS OF LINE AREA.
         XR    R1,R1                   CLEAR REGISTER TO INSERT...
         ICM   R1,B'0011',LINELNLM        MAXIMUM LINE AREA LENGTH.
         XR    R14,R14                 SETUP REGS...
         XR    R15,R15                    FOR MVCL INSTRUCTION.
         MVCL  R0,R14                  INITIALIZE LINE WORKAREA.
         SPACE
*---------------------------------------------------------------------*
*        ROUTE CONTROL BASED ON REQUEST CODE                          *
*---------------------------------------------------------------------*
         B     FAX005(R8)              TAKE APPROPRIATE ACTION.
FAX005   DS    0H                      ********************************
         B     FAX010                  0 - ADD DATA BEFORE DATASET.
         B     FAX010                  4 - ADD DATA AFTER  DATASET.
         B     CLEANUP                 8 - SEVERE ERROR DETECTED.
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        INSERT DATA AT BEGINNING OF DATASET                          *
*                                                                     *
*---------------------------------------------------------------------*
*        THIS DATA WILL BE PASSED TO VPS/PCL.  VPS/PCL WILL NOT       *
*        PROCESS CARRIAGE CONTROL AND WILL NOT DO ANY TRANSLATION OR  *
*        TRUNCATION.                                                  *
*---------------------------------------------------------------------*
FAX010   DS    0H                      ********************************
         CLI   DSATYPE,$DSASTDP        NORMAL DATASET? (NON-SEPARATOR)
         BNE   UXITRC04                NO, EXIT W/ RC=04.
         TM    DSASCLS,$DSASTG         CLASS PROCESSED BY EXIT 22?
         BZ    UXITRC04                NO, EXIT W/ RC=04.
         SPACE
*---------------------------------------------------------------------*
*        LOCATE NEXT AVAILABLE FCL COMMAND                            *
*---------------------------------------------------------------------*
         ICM   R7,B'1111',0(R3)        LOAD FAXC BASE REGISTER.
         BZ    FAX800                  FAXC UNAVAILABLE - EXIT W/ RC=16
         USING FAXCDSCT,R7             ESTABLISH FAXC ADDRESSABILITY.
FAX015   DS    0H                      ********************************
         CLC   FAXCID,=CL4'FAXC'       FAXC VALID?
         BNE   FAX805                  NO, INFORM USER & EXIT W/ RC=16.
         LA    R9,FAXCDATA             LOAD FAXR BASE REGISTER.
         USING FAXRDSCT,R9             ESTABLISH FAXR ADDRESSABILITY.
         L     R10,FAXCTOT             ESTABLISH LOOP COUNTER.
FAX020   DS    0H                      ********************************
         TM    FAXRLNF1,$FX1PROC       ALREADY PROCESSED THIS LINE?
         BO    FAX035                  YES, LOCATE NEXT LINE.
         SPACE
         LTR   R8,R8                   ADD DATA BEFORE THE DATASET?
         BNZ   FAX025                  NO, CONTINUE.
         TM    FAXRLNF1,$FX1BEG        INSERT RECORD AT START OF D/S?
         BO    FAX030                  YES, CONTINUE.
         B     UXITRC04                EXIT W/ RC=04.
         SPACE
FAX025   DS    0H                      ********************************
         TM    FAXRLNF1,$FX1END        INSERT RECORD AT END OF D/S?
         BZ    UXITRC04                NO, LOGIC ERROR - EXIT W/ RC=04.
         EJECT
*---------------------------------------------------------------------*
*        RETURN FCL COMMAND TO VPS                                    *
*---------------------------------------------------------------------*
FAX030   DS    0H                      ********************************
         OI    LINELNF,$LINECCP           BYPASS CCTL PROCESSING.
         OI    LINELNF2,$LINEBXL+$LINEBTB BYPASS XLATE AND TRUNCATE.
         LH    R15,FAXRLNL                INCREMENT...
         LA    R15,1(R15)                    RECORD LENGTH...
         STH   R15,LINELNL                      TO ALLOW FOR CC.
         SPACE
         LA    R0,LINELND              ADDRESS OF LINE AREA.
         XR    R1,R1                   RESET R1.
         ICM   R1,B'0011',FAXRLNL      LENGTH OF  FCL COMMAND.
         LA    R14,FAXRLINE            ADDRESS OF FCL COMMAND.
         LR    R15,R1                  LENGTH  OF FCL COMMAND.
         MVCL  R0,R14                  COPY FCL TO LINE AREA.
         OI    FAXRLNF1,$FX1PROC       SET THIS LINE BEEN PROCESSED.
         B     UXITRC00                RETURN W/ RC=00.
         SPACE
FAX035   DS    0H                      ********************************
         XR    R1,R1                   RESET R1.
         ICM   R1,B'0011',FAXRLNL      LENGTH OF LINE.
         LA    R9,FAXRPFXL(R1,R9)      BUMP TO NEXT FCL COMMAND.
         BCT   R10,FAX020              CONTINUE SEARCHING.
         SPACE
         ICM   R7,B'1111',FAXCNEXT     ADDRESS OF NEXT FAXC BUFFER.
         BNZ   FAX015                  CONTINUE SEARCHING.
         SPACE
         B     UXITRC04                EXIT W/ RC=04.
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        ISSUE ERROR MESSAGE VIA WTO AND EXIT W/ RC=16                *
*                                                                     *
*---------------------------------------------------------------------*
FAX800   DS    0H                      ********************************
         LA    R10,FAXEMSG1            ADDRESS OF ERROR MESSAGE INFO.
         B     FAX810                  CONTINUE.
FAX805   DS    0H                      ********************************
         LA    R10,FAXEMSG2            ADDRESS OF ERROR MESSAGE INFO.
         B     FAX810                  CONTINUE.
         SPACE
*---------------------------------------------------------------------*
*        OBTAIN WORKAREA                                              *
*---------------------------------------------------------------------*
FAX810   DS    0H                      ********************************
         $$VPSERV REQUEST=GETMAIN,                                     X
               LV=UE14DSLN,                                            X
               SYAT=YES,                                               X
               MF=S
         SPACE
         LR    R11,R1                  LOAD WORKAREA BASE REGISTER.
         USING UE14DSCT,R11            ESTAB WORKAREA ADDRESSABILITY.
         SPACE
         MVC   UE14ID,=CL20'OPMSUX14 WORKAREA' SET EYE-CATCHER.    JM00
         EJECT
*---------------------------------------------------------------------*
*        ISSUE WTO FOR ERROR MESSAGE                                  *
*---------------------------------------------------------------------*
         LA    R14,UE14WTAT            GET ADDRESS OF WTAT WORKAREA.
         USING WTADSECT,R14            ESTABLISH WTAT ADDRESSABILITY.
         OI    WTATYPE,WTATNOR         SET NORMAL MESSAGE TYPE.
         MVC   WTAMSGID,=AL2(2014)     SET MESSAGE ID TO 2014.
         MVI   WTATEXT,C' '            SET MESSAGE TEXT AREA...
         MVC   WTATEXT+1(L'WTATEXT-1),WTATEXT   TO BLANKS.
         SPACE
         LA    R1,L'WTOTEXT2           LOAD LENGTH OF MESSAGE TEXT.
         STCM  R1,B'0011',WTALGTH      SET LENGTH OF MESSAGE TEXT.
         MVC   WTATEXT(L'WTOTEXT2),WTOTEXT2 INITIALIZE MESSAGE TEXT.
         SPACE
         MVC   WTATEXT+09(8),SYASTCNM  SET STC NAME.
         MVC   WTATEXT+18(8),PRATNAME  SET LU  NAME.
         XR    R1,R1                   RESET R1.
         ICM   R1,B'0011',0(R10)       ERROR MESSAGE LENGTH.
         BCTR  R1,R0                   DECREMENT FOR 'EX' INSTRUCTION.
         EX    R1,MVCFAXER             MVC   WTATEXT+27(0),2(R10)
         DROP  R14                     DROP WTAT ADDRESSABILITY.
         SPACE
         $$VPSERV REQUEST=WTO,                                         X
               WTOAREA=UE14WTAT,                                       X
               SYAT=YES,                                               X
               MF=(E,UE14SERV)
         SPACE
*---------------------------------------------------------------------*
*        FREE EXIT WORKAREA                                           *
*---------------------------------------------------------------------*
         $$VPSERV REQUEST=FREEMAIN,                                    X
               A=(R11),                                                X
               LV=UE14DSLN,                                            X
               SYAT=YES,                                               X
               MF=S
         SPACE
         DROP  R11                     KILL WORKAREA ADDRESSABILITY.
         B     UXITRC16                EXIT W/ RC=16.
         SPACE
         DROP  R7                      KILL FAXC ADDRESSABILITY.
         DROP  R9                      KILL FAXR ADDRESSABILITY.
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        SEVERE ERROR DETECTED                                        *
*                                                                     *
*---------------------------------------------------------------------*
*        CLEANUP AND EXIT W/ RC=04                                    *
*---------------------------------------------------------------------*
CLEANUP  DS    0H                      ********************************
         CLC   =A(-1),0(R3)            'DATA ADDED' INDICATOR?
         BE    CLUP999                 YES, EXIT.
         CLC   =CL2'PS',PRASEPI        IS THIS A POSTSCRIPT PRINTER?
         BE    CLUP005                 YES, CONTINUE.
         CLC   =CL3'HPL',PRASEPI       IS THIS AN HP LASER PRINTER?
         BE    CLUP005                 YES, CONTINUE.
         B     CLUP999                 BYPASS DELETE AND FREEMAIN.
         SPACE
CLUP005  DS    0H                      ********************************
         ICM   R11,B'1111',0(R3)       WORKAREA AVAILABLE?
         BZ    CLUP999                 NO, EXIT.
         SPACE
*---------------------------------------------------------------------*
*        FREE WORKAREA                                                *
*---------------------------------------------------------------------*
         $$VPSERV REQUEST=FREEMAIN,                                    X
               A=(R11),                                                X
               LV=UE14DSLN,                                            X
               SYAT=YES,                                               X
               MF=S
         SPACE
CLUP999  DS    0H                      ********************************
         XC    0(4,R3),0(R3)           RESET USER WORDS.   ======>
         B     UXITRC04                RETURN W/ RC=04.
         EJECT
*---------------------------------------------------------------------*
*                                                                     *
*        MODULE EXIT                                                  *
*                                                                     *
*---------------------------------------------------------------------*
*        EXIT WITH RC=00               SEND LINE DATA; RETURN TO EXIT *
*---------------------------------------------------------------------*
UXITRC00 DS    0H                      ********************************
         LA    R15,RC00                SET RETURN CODE = 00.
         B     UXIT999                 RETURN W/ RC=00.
         SPACE
*---------------------------------------------------------------------*
*        EXIT WITH RC=04               NO MORE DATA; DO NOT RETURN    *
*---------------------------------------------------------------------*
UXITRC04 DS    0H                      ********************************
         LA    R15,RC04                SET RETURN CODE = 04.
         B     UXIT999                 RETURN W/ RC=04.
         SPACE
*---------------------------------------------------------------------*
*        EXIT WITH RC=08               IGNORE PCMDS; DO NOT RETURN    *
*---------------------------------------------------------------------*
UXITRC08 DS    0H                      ********************************
         LA    R15,RC08                SET RETURN CODE = 08.
         B     UXIT999                 RETURN W/ RC=04.
         SPACE
*---------------------------------------------------------------------*
*        EXIT WITH RC=16               SEVERE ERROR; DO NOT RETURN    *
*---------------------------------------------------------------------*
UXITRC16 DS    0H                      ********************************
         LA    R15,RC16                SET RETURN CODE = 16.
         B     UXIT999                 RETURN W/ RC=16.
         SPACE
*---------------------------------------------------------------------*
*        RESTORE REGISTERS AND RETURN TO VPS                          *
*---------------------------------------------------------------------*
UXIT999  DS    0H                      ********************************
         EREG  R0,R1                   RESTORE R0 AND R1.
         PR    ,                       RESTORE STATUS AND RETURN.
         TITLE 'EXECUTED INSTRUCTIONS'
*---------------------------------------------------------------------*
*        EXECUTED INSTRUCTIONS                                        *
*---------------------------------------------------------------------*
         USING WTADSECT,R14            ESTABLISH WTAT ADDRESSABILITY.
MVCFAXER MVC   WTATEXT+27(0),2(R10)    INSERT ERROR MESSAGE TEXT.
         DROP  R14                     KILL WTAT ADDRESSABILITY.
MVCTLINE MVC   0(0,R14),0(R10)         COPY FORMAT CONTROLS TO PRT LINE
TR2ASCII TR    0(0,R14),0(R9)          XLATE EBCDIC TO ASCII.
         TITLE 'REGISTER EQUATES'
*---------------------------------------------------------------------*
*        REGISTER EQUATES                                             *
*---------------------------------------------------------------------*
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         TITLE 'LITERALS && CONSTANTS'
*---------------------------------------------------------------------*
*        LITERALS & CONSTANTS                                         *
*---------------------------------------------------------------------*
         LTORG
RC00     EQU   00
RC04     EQU   04
RC08     EQU   08
RC16     EQU   16
         EJECT
*---------------------------------------------------------------------*
*        ERROR MESSAGES RELATED TO FAX SERVERS                        *
*---------------------------------------------------------------------*
FAXEMSG1 DS    0F
         DC    AL2(FAXEMS1L)
         DC    C'FAXC CONTROL BLOCK UNAVAILABLE'
FAXEMS1L EQU   *-FAXEMSG1-2
         SPACE
FAXEMSG2 DS    0F
         DC    AL2(FAXEMS2L)
         DC    C'INVALID FAXC CONTROL BLOCK'
FAXEMS2L EQU   *-FAXEMSG2-2
         EJECT
*---------------------------------------------------------------------*
*        LOAD MACRO FOR LOADING FORMATS                               *
*---------------------------------------------------------------------*
HP2LL    LOAD  EPLOC=*,SF=L
HP2LLL   EQU   *-HP2LL
         SPACE
*---------------------------------------------------------------------*
*        WTO TEXT FOR LOAD FAILURE                                    *
*---------------------------------------------------------------------*
WTOTEXT1 DS    0CL124
         DC    CL09'VPSX2014 '         USER EXIT MSG ID.
         DC    CL09'         '         VPS STC NAME.
         DC    CL09'         '         VPSLIB MEMBER NAME         JM02
         DC    CL09'         '         JOBNAME.
         DC    CL09'         '         JOBID.
         DC    CL09'         '         CURRENT DESTINATION        JM02
         DC    CL20' - LOAD FAILED FOR '
         DC    CL09'         '         MODULE NAME.
         DC    CL41' '                 RESERVE REMAINDER.
         SPACE
*---------------------------------------------------------------------*
*        WTO TEXT FOR FAX SERVERS                                     *
*---------------------------------------------------------------------*
WTOTEXT2 DS    0CL124
         DC    CL09'VPSX2014 '         USER EXIT MSG ID.
         DC    CL09'         '         VPS STC NAME.
         DC    CL09'         '         PRINTER NAME.
         DC    CL106' '                FOR VARIABLE FAX ERROR TEXT.
         EJECT
*---------------------------------------------------------------------*
*        EBCDIC TO ASCII TRANSLATE TABLE                              *
*---------------------------------------------------------------------*
HPCASCII DS    0F
*                 0 1 2 3 4 5 6 7 8 9 A B C D E F
         DC    X'200102030405060708090A0B0C0D0E0F'    00-0F
         DC    X'101112131415161718191A1B1C1D1E1F'    10-1F
         DC    X'202122232425261B28292A2B2C2D2E2F'    20-2F
         DC    X'303132333435363738393A3B3C3D3E3F'    30-3F
*                                      . < ( + 3
         DC    X'20202020202020202020BF2E3C282B7C'    40-4F
*                 &                   ! $ * ) ; *
         DC    X'2620202020202020202021242A293B5E'    50-5F
*                 - /                 ¦ , % _ > ?
         DC    X'2D2F20202020202020207C2C255F3E3F'    60-6F
*                                   ` : # @ ' =
         DC    X'202020202020202020603A2340273D22'    70-7F
*                   A B C D E F G H I   {     +       LOWER CASE
         DC    X'20616263646566676869207B20202B20'    80-8F
*                   J K L M N O P Q R   }             LOWER CASE
         DC    X'206A6B6C6D6E6F707172207D20202020'    90-9F
*                   ~ S T U V W X Y Z       X X       LOWER CASE
         DC    X'207E737475767778797A2020205BFE20'    A0-AF
*                                           X
         DC    X'202020202020202020202020205D2020'    B0-BF
*                 { A B C D E F G H I                 UPPER CASE
         DC    X'7B414243444546474849202020202020'    C0-CF
*                 } J K L M N O P Q R                 UPPER CASE
         DC    X'7D4A4B4C4D4E4F505152202020202020'    D0-DF
*                 \   S T U V W X Y Z                 UPPER CASE
         DC    X'5C20535455565758595A202020202020'    E0-EF
*                 0 1 2 3 4 5 6 7 8 9 3
         DC    X'303132333435363738397C2020202020'    F0-FF
         SPACE 1                                                  JM00
* ----------------------------------------------------------------JM00*
*        TABLE OF INFOPRINT PSEUDO NAMES AND EQUIVALENT VPS NAMES.JM00*
* ----------------------------------------------------------------JM00*
         DS    0F                                                 JM00
OPMTAB   EQU   *                                                  JM00
         DC    CL8'SLXL    ',CL16'HPLAND          '               JM00
         DC    CL8'SPXP    ',CL16'HPPORT          '               JM00
         DC    CL8'DLXL    ',CL16'DUPLEXLAND      '               JM00
         DC    CL8'DPXP    ',CL16'DUPLEXPORT      '               JM00
         DC    CL8'SLX6    ',CL16'HPLANDPL66      '               JM00
         DC    CL8'SPX6    ',CL16'HPPORTPL66      '               JM00
         DC    CL8'SPXB    ',CL16'BINARY          '               JM00
         DC    CL8'SPXA    ',CL16'CLASSA          '               JM00
         DC    CL8'SPXD    ',CL16'CLASSD          '               JM00
         DC    24X'FF'                                            JM00
         TITLE 'WORKAREA DSECT'
*---------------------------------------------------------------------*
*                                                                     *
*        V P S S U E 1 4   W O R K A R E A   D S E C T                *
*                                                                     *
*---------------------------------------------------------------------*
UE14DSCT DSECT
UE14ID   DC    CL20'OPMSUX14 WORKAREA' EYE-CATCHER.                JM00
         SPACE
         DS    0D                      ALIGN ON A DOUBLEWORD BOUNDARY.
UE14WTAT DC    XL(WTADLGTH)'00'        VPSSWTAT - WTO WORKAREA.
         SPACE
UE14SERV $$VPSERV REQUEST=WTO,                                         X
               WTOAREA=UE14WTAT,                                       X
               SYAT=YES,                                               X
               MF=L
         DS    0H                                                 JM02
JMBLDL   DS    0XL18                   LENGTH IS 18               JM02
JMNUM    DS    H                       NUMBER OF ENTRIES          JM02
JMLEN    DS    H                       LENGTH TO RETURN           JM02
JMNAME   DS    CL8                     NAME OF MODULE             JM02
JMTTR    DS    XL3                     TTR OF MODULE              JM02
JMR      DS    XL1                     RELATIVE RECORD NUMBER     JM02
JMK      DS    XL1                     CONCATENATION NUMBER       JM02
JMZ      DS    XL1                     WHERE FOUND FLAG           JM02
         DC    XL32'00'                RESERVED FOR FUTURE USE.
         DS    0D                      ALIGN ON A DOUBLEWORD BOUNDARY.
UE14DSLN EQU   *-UE14DSCT              LENGTH OF DSECT.
         SPACE
         VPSSDSAT                      DATASET ATTRIBUTE    DSECT.
         VPSSFAXC                      FAX COMMAND LANGUAGE DSECT.
         VPSSFAXR                      FAX RECORD WORKAREA  DSECT.
         VPSSLINE                      LINE WORKAREA        DSECT
         VPSSPCMD                      PRINTER CMD WORKAREA DSECT       VPS80
         VPSSPRAT                      PRINTER ATTRIBUTE    DSECT.
         VPSSSYAT                      SYSTEM  ATTRIBUTE    DSECT.
         VPSSWTAT                      WTO     ATTRIBUTE    DSECT.
         VPSSORAT                      OUTPUT STATEMENT     DSECT. JM00
         VPSSXMAT                      CROSS MEMORY         DSECT. JM00
         END   OPMSUX14                                            JM00
