¬êMISSING END CARD ON ASSEMBLY LANGUAGE OBJECT DECK
                                                    √üENTRY-POINT OR CSECT NAME _
 IN AN OBJECT DECK WAS PREVIOUSLY DEFINED.FIRST DEFINITION USED
                        ¬öEXECUTABLE STATEMENTS ARE ILLEGAL IN BLOCK DATA SUBPROG
RAMS                                                                        IMP
ROPER BLOCK DATA STATEMENT. %
                                                ;COLUMNS 1-5 OF CONTINUATION CAR
D NOT BLANK.PROBABLE CAUSE:STATEMENT PUNCHED TO LEFT OF COLUMN 7
                    
LIMIT OF 5 CONTINUATION CARDS EXCEEDED
                                                                        (INVALID
 CHARACTER IN FORTRAN STATEMENT.A'$' WAS INSERTED IN THE SOURCE LISTING
                                            √ÇFIRST CARD OF A PROGRAM IS A CONTIN
UATION CARD.PROBABLE CAUSE:STATEMENT PUNCHED TO LEFT OF COLUMN 7
                STATEMENT TOO LONG TO COMPILE (SCAN-STACK OVERFLOW)
                                                                    ¬ÖBLANK CARD
ENCOUNTERED
                                        ¬òKEYPUNCH USED DIFFERS FROM KEYPUNCH SPE
CIFIED ON JOB CARD
            FIRST CHARACTER OF THE STATEMENT WAS NOT ALPHABETIC
                                                                 INVALID CHARACT
ER(S) ARE CONCATENATED WITH THE FORTRAN KEYWORD. %
                                    ,INVALID CHARACTERS IN COL 1-5. STATEMENT NU
MBER IGNORED.PROBABLE CAUSE:STATEMENT PUNCHED TO LEFT OF COLUMN 7
        VARIABLE _ IS ALREADY IN COMMON
                                                            √áOTHER COMPILERS MAY
 NOT ALLOW COMMONED VARIABLE _ TO BE INITIALIZED IN OTHER THAN A BLOCK DATA SUBP
ROGRAM                          ¬ëILLEGAL USE OF THE COMMON BLOCK OR NAMELIST NAM
E _
    ¬ûMIXED REAL*4,REAL*8 IN COMPLEX CONSTANT;REAL*8 ASSUMED FOR BOTH
                                                        √¢AN INTEGER CONSTANT MAY
 NOT BE GREATER THAN 2,147,483,647 (2**31-1)
                            ¬ïEXPONENT _ ON A REAL CONSTANT IS GREATER THAN 2 DIG
ITS
¬ïREAL CONSTANT HAS MORE THAN 16 DIGITS. TRUNCATED TO 16
                                                    INVALID HEXADECIMAL CONSTAN
T.%
                        ILLEGAL USE OF DECIMAL POINT.%
                                                                            √ßCON
STANT WITH MORE THAN 7 DIGITS BUT E-TYPE EXPONENT,ASSUMED TO BE REAL*4
                                                ¬ëCONSTANT OR STATEMENT NUMBER GR
EATER THAN 99999. |
                    (EXPONENT OVERFLOW OR UNDERFLOW WHILE CONVERTING A CONSTANT
IN SOURCE STATEMENT                                                     ¬èCOMPILE
R ERROR - LANDR/ARITH
                                            ¬ñCOMPILER ERROR-LIKELY CAUSE:MORE TH
AN 255 DO STATEMENTS
                ¬ÅFORMAT STATEMENT _ IS UNREFERENCED
                                                                    ¬õOTHER COMPI
LERS MAY NOT ALLOW MULTIPLE ASSIGNMENT STATEMENTS
                                        ¬öCOMPILER ERROR - INTERRUPT AT COMPILE T
IME,RETURN TO SYSTEM
            ¬ñA CHARACTER VARIABLE IS USED WITH A RELATIONAL OPERATOR
                                                                $LENGTH OF CHARA
CTER VALUE ON RIGHT OF EQUAL SIGN EXCEEDS THAT ON LEFT. TRUNCATION WILL OCCUR
                                    .REPLICATION FACTOR _ IS ZERO OR GREATER THA
N 32767.IT IS ASSUMED TO BE 32767
        MORE VARIABLES THAN CONSTANTS _
                                                            √§ATTEMPT TO INITIALI
ZE THE SUBPROGRAM PARAMETER _ IN A DATA STATEMENT
                                √•OTHER COMPILERS MAY NOT ALLOW NON-CONSTANT SUBS
CRIPTS IN DATA STATEMENTS
    +TYPE OF VARIABLE AND CONSTANT DO NOT AGREE _.(MESSAGE ISSUED ONCE FOR AN AR
RAY)                                                    MORE CONSTANTS THAN VAR
IABLES _
                            ¬¶A VARIABLE _ WAS PREVIOUSLY INITIALIZED. THE LATEST
 VALUE IS USED.CHECK COMMONED AND EQUIVALENCED VARIABLES
¬õOTHER COMPILERS MAY NOT ALLOW INITIALIZATION OF BLANK COMMON
                                                    ¬ÑLITERAL CONSTANT _ HAS BEEN
 TRUNCATED
                         OTHER COMPILERS MAY NOT ALLOW IMPLIED DO-LOOPS IN DATA
STATEMENTS                                                                  ¬èTHE
 UNIT NUMBER IS MISSING.%
                                                THE FORMAT |

                    ¬ïASSOCIATED VARIABLE _ IS NOT A SIMPLE INTEGER VARIABLE
                                                                        ¬äNO DIME
NSIONS WERE SPECIFIED FOR VARIABLE _
                                            VARIABLE _ HAS ALREADY BEEN DIMENSI
ONED
                ¬ëCALL-BY-LOCATION PARAMETER _ CANNOT BE DIMENSIONED
                                                                    √¢DECLARED SI
ZE OF ARRAY _ EXCEEDS SPACE PROVIDED BY CALLING ARGUMENT
                                        THIS STATEMENT CANNOT BE THE OBJECT OF
A DO-LOOP
            ILLEGAL TRANSFER INTO THE RANGE OF A DO-LOOP FROM LINE _
                                                                ¬ïTHE OBJECT OF T
HIS DO,STATEMENT _,HAS ALREADY APPEARED
                                    IMPROPERLY NESTED DO-LOOPS

        √•ATTEMPT TO REDEFINE THE DO-LOOP PARAMETER _ WITHIN THE RANGE OF THE LOO
P                                                           DO-LOOP PARAMETER |

                                <ILLEGAL TRANSFER TO STATEMENT NUMBER _ WHICH IS
 INSIDE THE RANGE OF A DO-LOOP
    ¬ëA DO-LOOP PARAMETER IS UNDEFINED OR OUT OF RANGE._
                                                        +BECAUSE OF PARAMETER _,
THIS DO-LOOP WILL TERMINATE AFTER THE FIRST TIME THROUGH
                            ¬òA DO-LOOP PARAMETER MAY NOT BE REDEFINED IN AN INPU
T LIST
OTHER COMPILERS MAY NOT ALLOW THIS STATEMENT TO END A DO-LOOP
                                                    _ HAS BEEN EQUIVALENCED TO
A VARIABLE IN COMMON
                        √ÄCOMMON BLOCK _ HAS A DIFFERENT LENGTH THAN WAS SPECIFIE
D IN A PREVIOUS SUBPROGRAM;GREATER LENGTH USED                              ?COM
MON AND/OR EQUIVALENCE CAUSES INVALID ALIGNMENT;EXECUTION SLOWED. REMEDY:ORDER V
ARIABLES BY DECREASING LENGTH                   ¬ÉEQUIVALENCE EXTENDS COMMON DOWN
WARDS
                    √¢SUBPROGRAM PARAMETER _ APPEARS IN A COMMON OR EQUIVALENCE S
TATEMENT                                                                √ÄVARIABL
E _ WAS USED WITH SUBSCRIPTS IN AN EQUIVALENCE STATEMENT BUT HAS NOT BEEN PROPER
LY DIMENSIONED                              ¬åMISSING END STATEMENT;END STATEMENT
 GENERATED
                AN END STATEMENT WAS USED TO TERMINATE EXECUTION
                                                                    END STATEME
NT NOT PRECEDED BY A TRANSFER
                                        ILLEGAL QUANTITY ON LEFT OF EQUALS SIGN

            ¬íILLEGAL USE OF EQUAL SIGN.%
                                                                MULTIPLE ASSIGN
MENT IS NOT IMPLEMENTED FOR CHARACTER VARIABLES
                                    ¬äATTEMPT TO EQUIVALENCE VARIABLE _ TO ITSELF

        √ÖMULTI-SUBSCRIPTED EQUIVALENCED VARIABLE _ HAS BEEN INCORRECTLY RE-EQUIV
ALENCED.REMEDY:DIMENSION IT FIRST                           ILLEGAL COMPLEX EXP
ONENTIATION
                                I**J WHERE I=J=0

    ¬áI**J WHERE I=0, J .LT. 0
                                                        0.0**Y WHERE Y .LE. 0.0

                            0.0**J WHERE J=0

¬ù0.0**J WHERE J .LT. 0
                                                    X**Y WHERE X .LT. 0.0, Y IS
 NOT TYPE INTEGER OR .NE. 0.0
                        ¬àENTRY-POINT NAME _ WAS PREVIOUSLY DEFINED
                                                                            PRE
VIOUS DEFINITION OF FUNCTION NAME IN AN ENTRY IS INCORRECT
                                                ¬¢USAGE OF SUBPROGRAM PARAMETER _
 IS INCONSISTENT WITH A PREVIOUS ENTRY-POINT
                    √≠PARAMETER _ HAS APPEARED IN AN EXECUTABLE STATEMENT BUT WAS
 NOT A SUBPROGRAM PARAMETER                                             ENTRY S
TATEMENTS INVALID IN MAIN PROGRAM
                                            ENTRY STATEMENTS INVALID WITHIN RAN
GE OF DO-LOOP
                IMPROPER CHARACTER SEQUENCE OR INVALID CHARACTER IN INPUT DATA
                                                                    NO STATEMEN
T NUMBER ON FORMAT STATEMENT
                                        
FORMAT CODE AND DATA TYPE DO NOT MATCH

            √¢A REAL NUMBER IN INPUT DATA IS OUT OF MACHINE RANGE (1.E-78,1.E+75)
                                                                √¢FORMAT PROVIDES
 NO CONVERSION SPECIFICATION FOR A VALUE IN I/O LIST
                                    .AN INTEGER IN THE INPUT DATA IS TOO LARGE(M
AXIMUM = 2,147,483,647 = 2**31-1)
        FIRST CHARACTER OF VARIABLE FORMAT NOT A LEFT PARENTHESIS.  |
                                                            INVALID CHARACTER E
NCOUNTERED IN FORMAT NEAR _
                                INVALID FORM FOLLOWING A FORMAT CODE ->|

    ¬ÇINVALID FIELD OR GROUP COUNT NEAR _
                                                        ¬äA FIELD OR GROUP COUNT
GREATER THAN 255.  |
                            ¬àNO CLOSING PARENTHESIS ON VARIABLE FORMAT

¬ÑNO CLOSING QUOTE IN A HOLLERITH FIELD
                                                    ¬áINVALID USE OF COMMA.  |

                        ¬ôFORMAT STATEMENT TOO LONG TO COMPILE (SCAN STACK OVERFL
OW)                                                                         ¬ÅINV
ALID USE OF P FORMAT CODE.    |
                                                INVALID USE OF PERIOD(.) |

                    ¬ÑMORE THAN THREE LEVELS OF PARENTHESES
                                                                        INVALID
 CHARACTER BEFORE A RIGHT PARENTHESIS. |
                                            ¬ãMISSING OR ZERO-LENGTH HOLLERITH EN
COUNTERED
                ¬èNO CLOSING RIGHT PARENTHESIS
                                                                    ¬äCHARACTERS
FOLLOW CLOSING RIGHT PARENTHESIS
                                        WRONG QUOTE USED FOR KEY-PUNCH SPECIFIE
D
            LENGTH OF HOLLERITH EXCEEDS 255
                                                                √≠PARAMETER _ APP
EARS MORE THAN ONCE IN THIS SUBPROGRAM OR STATEMENT FUNCTION DEFINITION
                                    √ÖSUBSCRIPTS ON RIGHT-HAND SIDE OF STATEMENT
FUNCTION.PROBABLE CAUSE:VARIABLE TO LEFT OF = NOT DIMENSIONED
        ¬äEXPECTING COMMA BETWEEN FORMAT ITEMS NEAR _
                                                            ILLEGAL LENGTH MODI
FIER.|
                                INVALID PARAMETER. %

    PARAMETER _ HAS THE SAME NAME AS THE SUBPROGRAM
                                                        THIS STATEMENT COULD TR
ANSFER TO ITSELF
                            ¬îTHIS STATEMENT TRANSFERS TO _,WHICH IS NON-EXECUTAB
LE
¬†ATTEMPT TO DEFINE ASSIGNED GOTO INDEX _ IN AN ARITHMETIC STATEMENT
                                                    <ASSIGNED GOTO INDEX _ MAY B
E USED ONLY IN ASSIGNED GOTO AND ASSIGN STATEMENTS
                        √ÄINDEX OF AN ASSIGNED GOTO IS UNDEFINED OR OUT OF RANGE,
OR INDEX OF COMPUTED GOTO OR CASE IS UNDEFINED                              ¬ïASS
IGNED GOTO INDEX _ MAY NOT BE AN INTEGER*2 VARIABLE
                                                ¬âZERO LENGTH SPECIFIED FOR H-TYP
E HOLLERITH
                    ZERO LENGTH QUOTE-TYPE HOLLERITH
                                                                        NO CLOS
ING QUOTE OR NEXT CARD NOT CONTINUATION CARD
                                            ¬êUNEXPECTED HOLLERITH OR STATEMENT N
UMBER CONSTANT
                ¬äAN INVALID STATEMENT FOLLOWS THE LOGICAL IF
                                                                    ¬ñARITHMETIC
OR INVALID EXPRESSION IN LOGICAL IF OR WHILE
                                        LOGICAL, COMPLEX, OR INVALID EXPRESSION
 IN ARITHMETIC IF
            THE DATA TYPE |
                                                                ¬ùTHE OPTIONAL LE
NGTH |
                                    ¬ÅCONTROL CARDS MAY NOT BE CONTINUED

        ¬êIMPROPER ALPHABETIC SEQUENCE IN CHARACTER RANGE.|
                                                            |. FIRST CHARACTER
USED
                                ¬†IMPLICIT STATEMENT DOES NOT PRECEDE OTHER SPECI
FICATION STATEMENTS
    ¬òATTEMPT TO DECLARE THE TYPE OF A CHARACTER MORE THAN ONCE
                                                        √•ONLY ONE IMPLICIT STATE
MENT PER PROGRAM SEGMENT ALLOWED;THIS ONE IGNORED
                            -I/O STATEMENT REFERENCES NON-FORMAT STATEMENT _ . P
ROBABLE CAUSE: STATEMENT DEFINED AS NON-FORMAT
VARIABLE FORMAT MUST BE AN ARRAY NAME. |
                                                    ¬âINVALID ELEMENT IN INPUT LI
ST OR DATA LIST
                        ¬òOTHER COMPILERS MAY NOT ALLOW EXPRESSIONS IN OUTPUT LIS
TS                                                                          
ILL
EGAL USE OF END= OR ERR= PARAMETERS
                                                ¬í_ IS AN INVALID UNIT NUMBER

                    _ IS NOT A VALID FORMAT
                                                                        √®ONLY CO
NSTANTS,SIMPLE INTEGER*4 VARIABLES AND CHARACTER VARIABLES ARE ALLOWED AS UNIT
                                            +CONTROL CARD ENCOUNTERED DURING COM
PILATION;PROBABLE CAUSE:MISSING C$ENTRY CARD
                MIS-PUNCHED JOB OPTION. |
                                                                    .EXPECTING S
TATEMENT _ TO BE A FORMAT. PREVIOUSLY REFERENCED IN I/O STATEMENT
                                        ¬ïSOURCE ERROR ENCOUNTERED WHILE EXECUTIN
G WITH RUN=FREE
            LIMIT EXCEEDED FOR FIXED-POINT DIVISION BY ZERO
                                                                ¬ëLIMIT EXCEEDED
FOR FLOATING-POINT DIVISION BY ZERO
                                    EXPONENT OVERFLOW LIMIT EXCEEDED

        ¬ÄEXPONENT UNDERFLOW LIMIT EXCEEDED
                                                            ¬ÇFIXED-POINT OVERFLO
W LIMIT EXCEEDED
                                JOB-TIME EXCEEDED

    COMPILER ERROR - EXECUTION TIME;RETURN TO SYSTEM
                                                        ¬ÉTRACEBACK ERROR.TRACEBA
CK TERMINATED
                            .NOT. USED AS A BINARY OPERATOR

√•ARGUMENT OF DGAMMA OR GAMMA OUT OF THE RANGE 1.382E-76 .LT. X .LT. 57.57
                                                    ¬îABS(X) .GE. 175.366 FOR SIN
H,COSH,DSINH,OR DCOSH OF X
                        SENSE LIGHT OTHER THAN 0,1,2,3,4 FOR SLITE OR 1,2,3,4 F
OR SLITET                                                                   ¬äREA
L(Z) .GT. 174.673 FOR CEXP OR CDEXP OF Z
                                                ABS(AIMAG(Z)) .GT. 174.673 FOR
CSIN, CCOS, CDSIN OR CDCOS OF Z
                    ABS(REAL(Z)) .GE. 3.537E15 FOR CSIN, CCOS, CDSIN OR CDCOS O
F Z                                                                     ¬ëABS(AIM
AG(Z)) .GE. 3.537E15 FOR CEXP OR CDEXP OF Z
                                            ¬ÇX .GT. 174.673 FOR EXP OR DEXP OF X

                ¬ÄARGUMENT OF CLOG OR CDLOG IS ZERO
                                                                    ¬ôARGUMENT OF
 ALOG,ALOG10,DLOG OR DLOG10 IS NEGATIVE OR ZERO
                                        ¬ìABS(X) .GE. 3.537E15 FOR SIN, COS, DSIN
 OR DCOS OF X
            ABS(X) .GT. 1 FOR ARSIN,ARCOS,DARSIN OR DARCOS OF X
                                                                X .LT. 0. FOR S
QRT OR DSQRT OF X
                                    ¬âBOTH ARGUMENTS OF DATAN2 OR ATAN2 ARE ZERO

        ¬ûARGUMENT TOO CLOSE TO A SINGULARITY OF TAN,COTAN,DTAN OR DCOTAN
                                                            √†ARGUMENT OF DLGAMA
OR ALGAMA OUT OF THE RANGE 0.0 .LT. X .LT. 4.29E73
                                ABS(X) .GE. 3.537E15 FOR TAN,COTAN,DTAN,DCOTAN
OF X
    ¬àCONTROL CARDS MUST BE IN PROGRAM SEGMENTS
                                                        RELATIONAL OPERATOR HAS
 LOGICAL OPERAND
                            RELATIONAL OPERATOR HAS COMPLEX OPERAND

¬êMIXED MODE - LOGICAL OR CHARACTER WITH ARITHMETIC
                                                    <OTHER COMPILERS MAY NOT ALL
OW SUBSCRIPTS OF TYPE COMPLEX,LOGICAL OR CHARACTER
                        &INSUFFICIENT MEMORY TO COMPILE THIS PROGRAM. REMAINDER
WILL BE ERROR CHECKED ONLY                                                  ¬ôINS
UFFICIENT MEMORY TO ASSIGN ARRAY STORAGE. JOB ABANDONED
                                                SYMBOL TABLE EXCEEDS AVAILABLE
SPACE. JOB ABANDONED
                    ¬ïDATA AREA OF SUBPROGRAM EXCEEDS 24K;SEGMENT SUBPROGRAM
                                                                        √¢INSUFFI
CIENT MEMORY TO ALLOCATE COMPILER WORK AREA OR WATLIB BUFFER
                                            ¬†NAMELIST ENTRY _ MUST BE A VARIABLE
,BUT NOT A SUBPROGRAM PARAMETER
                ¬ÅNAMELIST NAME _ PREVIOUSLY DEFINED
                                                                    ¬áVARIABLE NA
ME _ TOO LONG
                                        ¬ÑVARIABLE NAME _ NOT FOUND IN NAMELIST

            ¬ÅINVALID SYNTAX IN NAMELIST INPUT.%
                                                                √¢STATEMENT NUMBE
R MUST END WITH COLON - STATEMENT NUMBER WAS IGNORED
                                    ¬ÅVARIABLE _ INCORRECTLY SUBSCRIPTED

        ¬íSUBSCRIPT OF _ OUT OF RANGE
                                                            ¬ùUNMATCHED PARENTHES
IS
                                INVALID PARENTHESIS NESTING IN I/O LIST

    √®OPERATOR MESSAGES NOT ALLOWED;SIMPLE STOP ASSUMED FOR STOP,CONTINUE ASSUMED
 FOR PAUSE                                              ¬äNESTED BLANKS ARE ILLEG
AL IN NAMELIST INPUT
                            ¬òRETURN I, WHERE I IS OUT OF RANGE OR UNDEFINED;VALU
E IS _
MULTIPLE RETURN NOT VALID IN FUNCTION SUBPROGRAM
                                                    ¬Å_ IS NOT A SIMPLE INTEGER V
ARIABLE
                        ¬àMULTIPLE RETURN NOT VALID IN MAIN PROGRAM
                                                                            √™PRE
VIOUSLY REFERENCED STATEMENT NUMBER _ APPEARS ON A STATEMENT FUNCTION DEFINITION
                                                ¬ôSTATEMENT FUNCTION IS THE OBJEC
T OF A LOGICAL IF STATEMENT
                    √çRECURSIVE STATEMENT FUNCTION DEFINITION:NAME APPEARS ON BOT
H SIDES OF EQUAL SIGN.LIKELY CAUSE:VARIABLE NOT DIMENSIONED             .A STATE
MENT FUNCTION DEFINITION APPEARS AFTER THE FIRST EXECUTABLE STATEMENT
                                            ILLEGAL USE OF FUNCTION NAME _

                SUBPROGRAM _ IS MISSING
                                                                    √ÖSUBPROGRAM
_ REDEFINES A CONSTANT, EXPRESSION, DO-PARAMETER OR ASSIGNED GOTO INDEX (ARGUMEN
T NUMBER XXX)                           √£SUBPROGRAM _ WAS ASSIGNED DIFFERENT TYP
ES IN DIFFERENT PROGRAM SEGMENTS
            ATTEMPT TO USE SUBPROGRAM _ RECURSIVELY
                                                                 INVALID TYPE FO
R ARGUMENT NUMBER XXX IN REFERENCE TO SUBPROGRAM _
                                    ¬ïWRONG NUMBER OF ARGUMENTS IN REFERENCE TO S
UBPROGRAM _
        SUBPROGRAM _ WAS PREVIOUSLY DEFINED. FIRST DEFINITION IS USED
                                                            NO MAIN PROGRAM

                                ¬ÅILLEGAL OR MISSING SUBPROGRAM NAME

    ¬ïLIBRARY SUBPROGRAM _ WAS NOT ASSIGNED THE CORRECT TYPE
                                                        √®METHOD OF ENTERING SUBP
ROGRAM PRODUCES UNDEFINED VALUE FOR CALL-BY-LOCATION PARAMETER
                            ZERO SUBSCRIPT OR DIMENSION NOT ALLOWED

SUBSCRIPT NUMBER _
                                                    ¬ÖINVALID SUBSCRIPT FORM

                        
A SUBSCRIPT OF _ WHICH IS OUT OF RANGE
                                                                            MIS
SING STATEMENT NUMBER _
                                                ¬ÑSTATEMENT NUMBER GREATER THAN 9
9999.|
                    ¬äSTATEMENT NUMBER _ HAS ALREADY BEEN DEFINED
                                                                        ¬ÖUNDECOD
EABLE STATEMENT
                                            ¬ëUNNUMBERED EXECUTABLE STATEMENT FOL
LOWS A TRANSFER
                STATEMENT NUMBER _ IN A TRANSFER IS A NON-EXECUTABLE STATEMENT
                                                                    ¬äUNREFERENCE
D STATEMENT _ FOLLOWS A TRANSFER
                                        √¢STATEMENT SPECIFIED IN A TRANSFER STATE
MENT _ IS A FORMAT STATEMENT
            MISSING FORMAT STATEMENT _
                                                                ¬¨SPECIFICATION S
TATEMENT DOES NOT PRECEDE STATEMENT FUNCTION DEFINITIONS OR EXECUTABLE STATEMENT
S                                   WRONG NUMBER OF SUBSCRIPTS SPECIFIED FOR VA
RIABLE _
        ARRAY OR SUBPROGRAM NAME _ IS USED INCORRECTLY WITHOUT A LIST
                                                            ¬ÑMORE THAN 7 DIMENSI
ONS NOT ALLOWED. |
                                DIMENSION OR SUBSCRIPT IS TOO LARGE (MAXIMUM 10
**8-1). |
    √°VARIABLE _,USED WITH VARIABLE DIMENSIONS,IS NOT A SUBPROGRAM PARAMETER
                                                        √¨VARIABLE DIMENSION _ IS
 NOT ONE OF SIMPLE INTEGER VARIABLE,SUBPROGRAM PARAMETER,IN COMMON
                            MISSING OPERATOR.%

¬ÅEXPECTING OPERATOR BUT _ WAS FOUND
                                                    EXPECTING SYMBOL,BUT _ WAS
FOUND
                        ¬ãEXPECTING SYMBOL OR OPERATOR,BUT _ WAS FOUND
                                                                            ¬ÅEXP
ECTING CONSTANT,BUT _ WAS FOUND
                                                ¬ãEXPECTING SYMBOL OR CONSTANT,BU
T _ WAS FOUND
                    ¬âEXPECTING STATEMENT NUMBER,BUT _ WAS FOUND
                                                                        ¬êEXPECTI
NG SIMPLE INTEGER VARIABLE,BUT _ WAS FOUND
                                            EXPECTING SIMPLE INTEGER VARIABLE O
R CONSTANT,BUT _ WAS FOUND
                ¬äILLEGAL SEQUENCE OF OPERATORS IN EXPRESSION
                                                                    ¬âEXPECTING E
ND-OF-STATEMENT,BUT _ WAS FOUND
                                        ¬ãVARIABLE _ HAS ALREADY BEEN EXPLICITLY
TYPED
            √ÉLENGTH OF EQUIVALENCED VARIABLE _ MAY NOT BE CHANGED.REMEDY:INTERCH
ANGE TYPE AND EQUIVALENCE STATEMENTS                            √ØCONTROL CARD EN
COUNTERED " AT EXECUTION. PROBABLE CAUSE:MISSING DATA OR INCORRECT FORMAT
                                    ¬äEND OF FILE ENCOUNTERED " (IBM CODE IHC217)

        I/O ERROR " (IBM CODE IHC218)
                                                            
NO DD CARD FOR I/O
" (IBM CODE IHC219)
                                REWIND,ENDFILE,BACKSPACE " REFERENCES READER,PR
INTER,OR PUNCH
    ATTEMPT TO READ " AFTER IT HAS HAD END-OF-FILE
                                                        _ IS NOT A VALID UNIT N
UMBER (IBM CODE IHC220)
                            PAGE-LIMIT EXCEEDED

#ATTEMPT TO DO DIRECT ACCESS I/O ON SEQUENTIAL FILE _,OR VICE VERSA. POSSIBLE MI
SSING DEFINE FILE STATEMENT (IBM CODE IHC231)       √†FOR I/O ",WRITE REFERENCES
READER,OR READ REFERENCES PRINTER OR PUNCH
                        √©DEFINE FILE REFERENCES UNIT _ PREVIOUSLY USED FOR SEQUE
NTIAL I/O (IBM CODE IHC235)                                                 √ëREC
ORD SIZE FOR UNIT _ EXCEEDS 32767, OR DIFFERS FROM DD STATEMENT SPECIFICATION (I
BM CODES IHC233,IHC237)                         ¬ê" IS NEGATIVE,ZERO,OR TOO LARGE
 (IBM CODE IHC232)
                    +ATTEMPT TO READ MORE INFORMATION THAN LOGICAL RECORD CONTAI
NS (IBM CODE IHC213)                                                    ¬ïFORMATT
ED LINE EXCEEDS BUFFER LENGTH (IBM CODE IHC212)
                                            I/O ERROR - SEARCHING LIBRARY DIREC
TORY
                ¬íI/O ERROR - READING LIBRARY
                                                                    .ATTEMPT TO
DEFINE THE OBJECT ERROR UNIT _ AS DIRECT ACCESS (IBM CODE IHC234)
                                        √†RECFM IS NOT V(B)S FOR I/O WITHOUT FORM
AT CONTROL " (IBM CODE IHC214)
            ¬åMISSING DD CARD FOR WATLIB;NO LIBRARY ASSUMED
                                                                ATTEMPT TO READ
 OR WRITE PAST END OF CHARACTER VARIABLE BUFFER
                                    VALUE OF _ IS UNDEFINED

        SUBSCRIPT NUMBER _ IS UNDEFINED
                                                            SUBPROGRAM _ IS UND
EFINED
                                AN ARGUMENT OF _ IS UNDEFINED

    ¬àUNDECODABLE CHARACTERS IN VARIABLE FORMAT
                                                        NAME _ IS TOO LONG;TRUN
CATED TO SIX CHARACTERS
                            /ATTEMPT TO USE THE ASSIGNED OR INITIALIZED VARIABLE
 OR DO-PARAMETER _ IN A SPECIFICATION STATEMENT
ILLEGAL USE OF SUBROUTINE NAME _
                                                    ILLEGAL USE OF VARIABLE NAM
E _
                        ¬†ATTEMPT TO USE PREVIOUSLY DEFINED NAME _ AS A FUNCTION
OR AN ARRAY                                                                 ATT
EMPT TO USE PREVIOUSLY DEFINED NAME _ AS A SUBROUTINE
                                                ATTEMPT TO USE PREVIOUSLY DEFIN
ED NAME _ AS A SUBPROGRAM
                    ¬ôATTEMPT TO USE PREVIOUSLY DEFINED NAME _ AS A COMMON BLOCK
                                                                        ¬ãATTEMPT
 TO USE FUNCTION NAME _ AS A VARIABLE
                                            ¬ïATTEMPT TO USE PREVIOUSLY DEFINED N
AME _ AS A VARIABLE
                ILLEGAL USE OF PREVIOUSLY DEFINED NAME _
                                                                    ¬ÄARRAY BOUND
S EXCEEDED FOR ARRAY _
                                        ¬ãUNFORMATTED CORE TO CORE I/O NOT IMPLEM
ENTED
            ¬¢ATTEMPT TO PERFORM I/O IN A FUNCTION WHICH IS CALLED IN AN OUTPUT S
TATEMENT                                                        √±AN END STATEMEN
T CANNOT HAVE A STATEMENT NUMBER. STATEMENT NUMBER IGNORED.
                                    √¢ATTEMPT TO READ ON UNCREATED DIRECT ACCESS
FILE _ (IBM CODE IHC236)
        ¬ãUNFORMATTED WRITE STATEMENT MUST HAVE A LIST
                                                            ¬ÄNUMBER OF RECORDS O
R RECORD SIZE|
                                ¬äCANNOT OPEN WATFIV.ERRTEXTS. RUN TERMINATED

    ¬èI/O ERROR ON ERROR TEXT FILE
                                                        SYNTAX ERROR:  _ WAS FO
UND
                            ILLEGAL QUANTITY ON RIGHT OF EQUALS SIGN

¬ôUNABLE TO OPEN WATLIB DUE TO I/O ERROR; NO LIBRARY ASSUMED
                                                    ¬àDIRECT ACCESS SPACE EXCEEDE
D (IBM CODE S_
                        PSEUDO VARIABLE DIMENSIONING ASSUMED FOR ARRAY _
                                                                            ¬íCOM
PILER ERROR (IBM CODE S_
                                                MAINLINE PROGRAM NOT IN LIBRARY

                    ¬ÉATTEMPT TO WRITE ON A READ ONLY FILE
                                                                        ¬îAT END
STATEMENT MUST FOLLOW IMMEDIATELY AFTER A READ
                                            √§AT END FOLLOWS CORE TO CORE, DIRECT
 ACCESS OR INVALID READ STATEMENT
                ¬õAT END NOT VALID WHEN 'END=' SPECIFIED IN THE READ STATEMENT
                                                                    MISSING OR
INVALID DO CASE, WHILE, AT END, OR  IF-THEN STATEMENT
                                        ¬êIMPROPER NESTING OF BLOCK OR CONSTRUCT
STARTING _
            
IMPROPER NESTING OF DO-LOOP STARTING _
                                                                IMPROPER NESTIN
G WITH DO-LOOP - BLOCK STARTS _
                                    &MISSING END CASE, END WHILE, END AT END, OR
 END IF STATEMENT FOR BLOCK STARTING _
        √ÅOTHER COMPILERS MAY NOT ALLOW IF-THEN-ELSE, DO CASE, WHILE, EXECUTE, RE
MOTE BLOCK OR AT END STATEMENTS                             ¬öIF NONE BLOCK ALREA
DY DEFINED FOR CURRENT DO CASE CONSTRUCT
                                ¬àIF NONE BLOCK MUST FOLLOW ALL CASE BLOCKS

    ¬õATTEMPT TO TRANSFER CONTROL ACROSS REMOTE BLOCK BOUNDARIES _
                                                        REMOTE BLOCK NOT PRECED
ED BY A TRANSFER
                            REMOTE BLOCK PREVIOUSLY DEFINED

¬àREMOTE BLOCK STATEMENT MISSING OR INVALID
                                                    ¬âLAST REMOTE BLOCK NOT COMPL
ETED - STARTS _
                        REMOTE BLOCK _ IS NOT DEFINED
                                                                            REM
OTE BLOCK _ IS NOT REFERENCED
                                                ATTEMPT TO NEST REMOTE BLOCK DE
FINITIONS
                    ¬ÉMISSING OR INVALID REMOTE BLOCK NAME
                                                                        ¬åATTEMPT
 TO EXECUTE A REMOTE BLOCK RECURSIVELY
                                            ¬ÇNUMBER OF REMOTE BLOCKS EXCEEDS 255

                DIRECT ACCESS UNAVAILABLE IN DEBUG MODE

