{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20180208185738000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "INMCOPY", "INMSIZE": 47520, "INMDSORG": "PS", "INMLRECL": 132, "INMBLKSZ": 132, "INMRECFM": "F", "INMDSNAM": "SBGOLOB.WATFIV.ERRTEXTS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 47520, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"SBGOLOB.WATFIV.ERRTEXTS": {"text": "\u0090MISSING END CARD ON ASSEMBLY LANGUAGE OBJECT DECK\n                                                    \u00dfENTRY-POINT OR CSECT NAME _\n IN AN OBJECT DECK WAS PREVIOUSLY DEFINED.FIRST DEFINITION USED\n                        \u009aEXECUTABLE STATEMENTS ARE ILLEGAL IN BLOCK DATA SUBPROG\nRAMS                                                                        \u001fIMP\nROPER BLOCK DATA STATEMENT. %\n                                                ;COLUMNS 1-5 OF CONTINUATION CAR\nD NOT BLANK.PROBABLE CAUSE:STATEMENT PUNCHED TO LEFT OF COLUMN 7\n                    \nLIMIT OF 5 CONTINUATION CARDS EXCEEDED\n                                                                        (INVALID\n CHARACTER IN FORTRAN STATEMENT.A'$' WAS INSERTED IN THE SOURCE LISTING\n                                            \u00c2FIRST CARD OF A PROGRAM IS A CONTIN\nUATION CARD.PROBABLE CAUSE:STATEMENT PUNCHED TO LEFT OF COLUMN 7\n                \u0016STATEMENT TOO LONG TO COMPILE (SCAN-STACK OVERFLOW)\n                                                                    \u0085BLANK CARD\nENCOUNTERED\n                                        \u0098KEYPUNCH USED DIFFERS FROM KEYPUNCH SPE\nCIFIED ON JOB CARD\n            \u0016FIRST CHARACTER OF THE STATEMENT WAS NOT ALPHABETIC\n                                                                 INVALID CHARACT\nER(S) ARE CONCATENATED WITH THE FORTRAN KEYWORD. %\n                                    ,INVALID CHARACTERS IN COL 1-5. STATEMENT NU\nMBER IGNORED.PROBABLE CAUSE:STATEMENT PUNCHED TO LEFT OF COLUMN 7\n        \u001eVARIABLE _ IS ALREADY IN COMMON\n                                                            \u00c7OTHER COMPILERS MAY\n NOT ALLOW COMMONED VARIABLE _ TO BE INITIALIZED IN OTHER THAN A BLOCK DATA SUBP\nROGRAM                          \u0091ILLEGAL USE OF THE COMMON BLOCK OR NAMELIST NAM\nE _\n    \u009eMIXED REAL*4,REAL*8 IN COMPLEX CONSTANT;REAL*8 ASSUMED FOR BOTH\n                                                        \u00e2AN INTEGER CONSTANT MAY\n NOT BE GREATER THAN 2,147,483,647 (2**31-1)\n                            \u0095EXPONENT _ ON A REAL CONSTANT IS GREATER THAN 2 DIG\nITS\n\u0095REAL CONSTANT HAS MORE THAN 16 DIGITS. TRUNCATED TO 16\n                                                    \u001dINVALID HEXADECIMAL CONSTAN\nT.%\n                        \u001dILLEGAL USE OF DECIMAL POINT.%\n                                                                            \u00e7CON\nSTANT WITH MORE THAN 7 DIGITS BUT E-TYPE EXPONENT,ASSUMED TO BE REAL*4\n                                                \u0091CONSTANT OR STATEMENT NUMBER GR\nEATER THAN 99999. |\n                    (EXPONENT OVERFLOW OR UNDERFLOW WHILE CONVERTING A CONSTANT\nIN SOURCE STATEMENT                                                     \u008fCOMPILE\nR ERROR - LANDR/ARITH\n                                            \u0096COMPILER ERROR-LIKELY CAUSE:MORE TH\nAN 255 DO STATEMENTS\n                \u0081FORMAT STATEMENT _ IS UNREFERENCED\n                                                                    \u009bOTHER COMPI\nLERS MAY NOT ALLOW MULTIPLE ASSIGNMENT STATEMENTS\n                                        \u009aCOMPILER ERROR - INTERRUPT AT COMPILE T\nIME,RETURN TO SYSTEM\n            \u0096A CHARACTER VARIABLE IS USED WITH A RELATIONAL OPERATOR\n                                                                $LENGTH OF CHARA\nCTER VALUE ON RIGHT OF EQUAL SIGN EXCEEDS THAT ON LEFT. TRUNCATION WILL OCCUR\n                                    .REPLICATION FACTOR _ IS ZERO OR GREATER THA\nN 32767.IT IS ASSUMED TO BE 32767\n        \u001eMORE VARIABLES THAN CONSTANTS _\n                                                            \u00e4ATTEMPT TO INITIALI\nZE THE SUBPROGRAM PARAMETER _ IN A DATA STATEMENT\n                                \u00e5OTHER COMPILERS MAY NOT ALLOW NON-CONSTANT SUBS\nCRIPTS IN DATA STATEMENTS\n    +TYPE OF VARIABLE AND CONSTANT DO NOT AGREE _.(MESSAGE ISSUED ONCE FOR AN AR\nRAY)                                                    \u001eMORE CONSTANTS THAN VAR\nIABLES _\n                            \u00a6A VARIABLE _ WAS PREVIOUSLY INITIALIZED. THE LATEST\n VALUE IS USED.CHECK COMMONED AND EQUIVALENCED VARIABLES\n\u009bOTHER COMPILERS MAY NOT ALLOW INITIALIZATION OF BLANK COMMON\n                                                    \u0084LITERAL CONSTANT _ HAS BEEN\n TRUNCATED\n                         OTHER COMPILERS MAY NOT ALLOW IMPLIED DO-LOOPS IN DATA\nSTATEMENTS                                                                  \u008fTHE\n UNIT NUMBER IS MISSING.%\n                                                \u000bTHE FORMAT |\n\n                    \u0095ASSOCIATED VARIABLE _ IS NOT A SIMPLE INTEGER VARIABLE\n                                                                        \u008aNO DIME\nNSIONS WERE SPECIFIED FOR VARIABLE _\n                                            \u0017VARIABLE _ HAS ALREADY BEEN DIMENSI\nONED\n                \u0091CALL-BY-LOCATION PARAMETER _ CANNOT BE DIMENSIONED\n                                                                    \u00e2DECLARED SI\nZE OF ARRAY _ EXCEEDS SPACE PROVIDED BY CALLING ARGUMENT\n                                        \u0007THIS STATEMENT CANNOT BE THE OBJECT OF\nA DO-LOOP\n            \u0004ILLEGAL TRANSFER INTO THE RANGE OF A DO-LOOP FROM LINE _\n                                                                \u0095THE OBJECT OF T\nHIS DO,STATEMENT _,HAS ALREADY APPEARED\n                                    \u0019IMPROPERLY NESTED DO-LOOPS\n\n        \u00e5ATTEMPT TO REDEFINE THE DO-LOOP PARAMETER _ WITHIN THE RANGE OF THE LOO\nP                                                           \u0012DO-LOOP PARAMETER |\n\n                                <ILLEGAL TRANSFER TO STATEMENT NUMBER _ WHICH IS\n INSIDE THE RANGE OF A DO-LOOP\n    \u0091A DO-LOOP PARAMETER IS UNDEFINED OR OUT OF RANGE._\n                                                        +BECAUSE OF PARAMETER _,\nTHIS DO-LOOP WILL TERMINATE AFTER THE FIRST TIME THROUGH\n                            \u0098A DO-LOOP PARAMETER MAY NOT BE REDEFINED IN AN INPU\nT LIST\n\u0014OTHER COMPILERS MAY NOT ALLOW THIS STATEMENT TO END A DO-LOOP\n                                                    \u0006_ HAS BEEN EQUIVALENCED TO\nA VARIABLE IN COMMON\n                        \u00c0COMMON BLOCK _ HAS A DIFFERENT LENGTH THAN WAS SPECIFIE\nD IN A PREVIOUS SUBPROGRAM;GREATER LENGTH USED                              ?COM\nMON AND/OR EQUIVALENCE CAUSES INVALID ALIGNMENT;EXECUTION SLOWED. REMEDY:ORDER V\nARIABLES BY DECREASING LENGTH                   \u0083EQUIVALENCE EXTENDS COMMON DOWN\nWARDS\n                    \u00e2SUBPROGRAM PARAMETER _ APPEARS IN A COMMON OR EQUIVALENCE S\nTATEMENT                                                                \u00c0VARIABL\nE _ WAS USED WITH SUBSCRIPTS IN AN EQUIVALENCE STATEMENT BUT HAS NOT BEEN PROPER\nLY DIMENSIONED                              \u008cMISSING END STATEMENT;END STATEMENT\n GENERATED\n                \u0007AN END STATEMENT WAS USED TO TERMINATE EXECUTION\n                                                                    \u001bEND STATEME\nNT NOT PRECEDED BY A TRANSFER\n                                        \u0017ILLEGAL QUANTITY ON LEFT OF EQUALS SIGN\n\n            \u0092ILLEGAL USE OF EQUAL SIGN.%\n                                                                \u0015MULTIPLE ASSIGN\nMENT IS NOT IMPLEMENTED FOR CHARACTER VARIABLES\n                                    \u008aATTEMPT TO EQUIVALENCE VARIABLE _ TO ITSELF\n\n        \u00c5MULTI-SUBSCRIPTED EQUIVALENCED VARIABLE _ HAS BEEN INCORRECTLY RE-EQUIV\nALENCED.REMEDY:DIMENSION IT FIRST                           \u001dILLEGAL COMPLEX EXP\nONENTIATION\n                                \u000fI**J WHERE I=J=0\n\n    \u0087I**J WHERE I=0, J .LT. 0\n                                                        \b0.0**Y WHERE Y .LE. 0.0\n\n                            \u000f0.0**J WHERE J=0\n\n\u009d0.0**J WHERE J .LT. 0\n                                                    \u0004X**Y WHERE X .LT. 0.0, Y IS\n NOT TYPE INTEGER OR .NE. 0.0\n                        \u0088ENTRY-POINT NAME _ WAS PREVIOUSLY DEFINED\n                                                                            \u0014PRE\nVIOUS DEFINITION OF FUNCTION NAME IN AN ENTRY IS INCORRECT\n                                                \u00a2USAGE OF SUBPROGRAM PARAMETER _\n IS INCONSISTENT WITH A PREVIOUS ENTRY-POINT\n                    \u00edPARAMETER _ HAS APPEARED IN AN EXECUTABLE STATEMENT BUT WAS\n NOT A SUBPROGRAM PARAMETER                                             \u001bENTRY S\nTATEMENTS INVALID IN MAIN PROGRAM\n                                            \u0007ENTRY STATEMENTS INVALID WITHIN RAN\nGE OF DO-LOOP\n                \u0015IMPROPER CHARACTER SEQUENCE OR INVALID CHARACTER IN INPUT DATA\n                                                                    \u0017NO STATEMEN\nT NUMBER ON FORMAT STATEMENT\n                                        \nFORMAT CODE AND DATA TYPE DO NOT MATCH\n\n            \u00e2A REAL NUMBER IN INPUT DATA IS OUT OF MACHINE RANGE (1.E-78,1.E+75)\n                                                                \u00e2FORMAT PROVIDES\n NO CONVERSION SPECIFICATION FOR A VALUE IN I/O LIST\n                                    .AN INTEGER IN THE INPUT DATA IS TOO LARGE(M\nAXIMUM = 2,147,483,647 = 2**31-1)\n        \u0014FIRST CHARACTER OF VARIABLE FORMAT NOT A LEFT PARENTHESIS.  |\n                                                            \u0005INVALID CHARACTER E\nNCOUNTERED IN FORMAT NEAR _\n                                \u001bINVALID FORM FOLLOWING A FORMAT CODE ->|\n\n    \u0082INVALID FIELD OR GROUP COUNT NEAR _\n                                                        \u008aA FIELD OR GROUP COUNT\nGREATER THAN 255.  |\n                            \u0088NO CLOSING PARENTHESIS ON VARIABLE FORMAT\n\n\u0084NO CLOSING QUOTE IN A HOLLERITH FIELD\n                                                    \u0087INVALID USE OF COMMA.  |\n\n                        \u0099FORMAT STATEMENT TOO LONG TO COMPILE (SCAN STACK OVERFL\nOW)                                                                         \u0081INV\nALID USE OF P FORMAT CODE.    |\n                                                \u0019INVALID USE OF PERIOD(.) |\n\n                    \u0084MORE THAN THREE LEVELS OF PARENTHESES\n                                                                        \u0006INVALID\n CHARACTER BEFORE A RIGHT PARENTHESIS. |\n                                            \u008bMISSING OR ZERO-LENGTH HOLLERITH EN\nCOUNTERED\n                \u008fNO CLOSING RIGHT PARENTHESIS\n                                                                    \u008aCHARACTERS\nFOLLOW CLOSING RIGHT PARENTHESIS\n                                        \u001bWRONG QUOTE USED FOR KEY-PUNCH SPECIFIE\nD\n            \u001eLENGTH OF HOLLERITH EXCEEDS 255\n                                                                \u00edPARAMETER _ APP\nEARS MORE THAN ONCE IN THIS SUBPROGRAM OR STATEMENT FUNCTION DEFINITION\n                                    \u00c5SUBSCRIPTS ON RIGHT-HAND SIDE OF STATEMENT\nFUNCTION.PROBABLE CAUSE:VARIABLE TO LEFT OF = NOT DIMENSIONED\n        \u008aEXPECTING COMMA BETWEEN FORMAT ITEMS NEAR _\n                                                            \u0018ILLEGAL LENGTH MODI\nFIER.|\n                                \u0013INVALID PARAMETER. %\n\n    \u0006PARAMETER _ HAS THE SAME NAME AS THE SUBPROGRAM\n                                                        \u0017THIS STATEMENT COULD TR\nANSFER TO ITSELF\n                            \u0094THIS STATEMENT TRANSFERS TO _,WHICH IS NON-EXECUTAB\nLE\n\u00a0ATTEMPT TO DEFINE ASSIGNED GOTO INDEX _ IN AN ARITHMETIC STATEMENT\n                                                    <ASSIGNED GOTO INDEX _ MAY B\nE USED ONLY IN ASSIGNED GOTO AND ASSIGN STATEMENTS\n                        \u00c0INDEX OF AN ASSIGNED GOTO IS UNDEFINED OR OUT OF RANGE,\nOR INDEX OF COMPUTED GOTO OR CASE IS UNDEFINED                              \u0095ASS\nIGNED GOTO INDEX _ MAY NOT BE AN INTEGER*2 VARIABLE\n                                                \u0089ZERO LENGTH SPECIFIED FOR H-TYP\nE HOLLERITH\n                    \u001fZERO LENGTH QUOTE-TYPE HOLLERITH\n                                                                        \u0016NO CLOS\nING QUOTE OR NEXT CARD NOT CONTINUATION CARD\n                                            \u0090UNEXPECTED HOLLERITH OR STATEMENT N\nUMBER CONSTANT\n                \u008aAN INVALID STATEMENT FOLLOWS THE LOGICAL IF\n                                                                    \u0096ARITHMETIC\nOR INVALID EXPRESSION IN LOGICAL IF OR WHILE\n                                        \u0004LOGICAL, COMPLEX, OR INVALID EXPRESSION\n IN ARITHMETIC IF\n            \u000eTHE DATA TYPE |\n                                                                \u009dTHE OPTIONAL LE\nNGTH |\n                                    \u0081CONTROL CARDS MAY NOT BE CONTINUED\n\n        \u0090IMPROPER ALPHABETIC SEQUENCE IN CHARACTER RANGE.|\n                                                            \b|. FIRST CHARACTER\nUSED\n                                \u00a0IMPLICIT STATEMENT DOES NOT PRECEDE OTHER SPECI\nFICATION STATEMENTS\n    \u0098ATTEMPT TO DECLARE THE TYPE OF A CHARACTER MORE THAN ONCE\n                                                        \u00e5ONLY ONE IMPLICIT STATE\nMENT PER PROGRAM SEGMENT ALLOWED;THIS ONE IGNORED\n                            -I/O STATEMENT REFERENCES NON-FORMAT STATEMENT _ . P\nROBABLE CAUSE: STATEMENT DEFINED AS NON-FORMAT\n\u001bVARIABLE FORMAT MUST BE AN ARRAY NAME. |\n                                                    \u0089INVALID ELEMENT IN INPUT LI\nST OR DATA LIST\n                        \u0098OTHER COMPILERS MAY NOT ALLOW EXPRESSIONS IN OUTPUT LIS\nTS                                                                          \nILL\nEGAL USE OF END= OR ERR= PARAMETERS\n                                                \u0092_ IS AN INVALID UNIT NUMBER\n\n                    \b_ IS NOT A VALID FORMAT\n                                                                        \u00e8ONLY CO\nNSTANTS,SIMPLE INTEGER*4 VARIABLES AND CHARACTER VARIABLES ARE ALLOWED AS UNIT\n                                            +CONTROL CARD ENCOUNTERED DURING COM\nPILATION;PROBABLE CAUSE:MISSING C$ENTRY CARD\n                \u0018MIS-PUNCHED JOB OPTION. |\n                                                                    .EXPECTING S\nTATEMENT _ TO BE A FORMAT. PREVIOUSLY REFERENCED IN I/O STATEMENT\n                                        \u0095SOURCE ERROR ENCOUNTERED WHILE EXECUTIN\nG WITH RUN=FREE\n            \u0006LIMIT EXCEEDED FOR FIXED-POINT DIVISION BY ZERO\n                                                                \u0091LIMIT EXCEEDED\nFOR FLOATING-POINT DIVISION BY ZERO\n                                    \u001fEXPONENT OVERFLOW LIMIT EXCEEDED\n\n        \u0080EXPONENT UNDERFLOW LIMIT EXCEEDED\n                                                            \u0082FIXED-POINT OVERFLO\nW LIMIT EXCEEDED\n                                \u0010JOB-TIME EXCEEDED\n\n    \u0007COMPILER ERROR - EXECUTION TIME;RETURN TO SYSTEM\n                                                        \u0083TRACEBACK ERROR.TRACEBA\nCK TERMINATED\n                            \u001e.NOT. USED AS A BINARY OPERATOR\n\n\u00e5ARGUMENT OF DGAMMA OR GAMMA OUT OF THE RANGE 1.382E-76 .LT. X .LT. 57.57\n                                                    \u0094ABS(X) .GE. 175.366 FOR SIN\nH,COSH,DSINH,OR DCOSH OF X\n                        \u001aSENSE LIGHT OTHER THAN 0,1,2,3,4 FOR SLITE OR 1,2,3,4 F\nOR SLITET                                                                   \u008aREA\nL(Z) .GT. 174.673 FOR CEXP OR CDEXP OF Z\n                                                \u0015ABS(AIMAG(Z)) .GT. 174.673 FOR\nCSIN, CCOS, CDSIN OR CDCOS OF Z\n                    \u0015ABS(REAL(Z)) .GE. 3.537E15 FOR CSIN, CCOS, CDSIN OR CDCOS O\nF Z                                                                     \u0091ABS(AIM\nAG(Z)) .GE. 3.537E15 FOR CEXP OR CDEXP OF Z\n                                            \u0082X .GT. 174.673 FOR EXP OR DEXP OF X\n\n                \u0080ARGUMENT OF CLOG OR CDLOG IS ZERO\n                                                                    \u0099ARGUMENT OF\n ALOG,ALOG10,DLOG OR DLOG10 IS NEGATIVE OR ZERO\n                                        \u0093ABS(X) .GE. 3.537E15 FOR SIN, COS, DSIN\n OR DCOS OF X\n            \u0016ABS(X) .GT. 1 FOR ARSIN,ARCOS,DARSIN OR DARCOS OF X\n                                                                \u001fX .LT. 0. FOR S\nQRT OR DSQRT OF X\n                                    \u0089BOTH ARGUMENTS OF DATAN2 OR ATAN2 ARE ZERO\n\n        \u009eARGUMENT TOO CLOSE TO A SINGULARITY OF TAN,COTAN,DTAN OR DCOTAN\n                                                            \u00e0ARGUMENT OF DLGAMA\nOR ALGAMA OUT OF THE RANGE 0.0 .LT. X .LT. 4.29E73\n                                \u0016ABS(X) .GE. 3.537E15 FOR TAN,COTAN,DTAN,DCOTAN\nOF X\n    \u0088CONTROL CARDS MUST BE IN PROGRAM SEGMENTS\n                                                        \u0017RELATIONAL OPERATOR HAS\n LOGICAL OPERAND\n                            \u0017RELATIONAL OPERATOR HAS COMPLEX OPERAND\n\n\u0090MIXED MODE - LOGICAL OR CHARACTER WITH ARITHMETIC\n                                                    <OTHER COMPILERS MAY NOT ALL\nOW SUBSCRIPTS OF TYPE COMPLEX,LOGICAL OR CHARACTER\n                        &INSUFFICIENT MEMORY TO COMPILE THIS PROGRAM. REMAINDER\nWILL BE ERROR CHECKED ONLY                                                  \u0099INS\nUFFICIENT MEMORY TO ASSIGN ARRAY STORAGE. JOB ABANDONED\n                                                \u0016SYMBOL TABLE EXCEEDS AVAILABLE\nSPACE. JOB ABANDONED\n                    \u0095DATA AREA OF SUBPROGRAM EXCEEDS 24K;SEGMENT SUBPROGRAM\n                                                                        \u00e2INSUFFI\nCIENT MEMORY TO ALLOCATE COMPILER WORK AREA OR WATLIB BUFFER\n                                            \u00a0NAMELIST ENTRY _ MUST BE A VARIABLE\n,BUT NOT A SUBPROGRAM PARAMETER\n                \u0081NAMELIST NAME _ PREVIOUSLY DEFINED\n                                                                    \u0087VARIABLE NA\nME _ TOO LONG\n                                        \u0084VARIABLE NAME _ NOT FOUND IN NAMELIST\n\n            \u0081INVALID SYNTAX IN NAMELIST INPUT.%\n                                                                \u00e2STATEMENT NUMBE\nR MUST END WITH COLON - STATEMENT NUMBER WAS IGNORED\n                                    \u0081VARIABLE _ INCORRECTLY SUBSCRIPTED\n\n        \u0092SUBSCRIPT OF _ OUT OF RANGE\n                                                            \u009dUNMATCHED PARENTHES\nIS\n                                \u0017INVALID PARENTHESIS NESTING IN I/O LIST\n\n    \u00e8OPERATOR MESSAGES NOT ALLOWED;SIMPLE STOP ASSUMED FOR STOP,CONTINUE ASSUMED\n FOR PAUSE                                              \u008aNESTED BLANKS ARE ILLEG\nAL IN NAMELIST INPUT\n                            \u0098RETURN I, WHERE I IS OUT OF RANGE OR UNDEFINED;VALU\nE IS _\n\u0007MULTIPLE RETURN NOT VALID IN FUNCTION SUBPROGRAM\n                                                    \u0081_ IS NOT A SIMPLE INTEGER V\nARIABLE\n                        \u0088MULTIPLE RETURN NOT VALID IN MAIN PROGRAM\n                                                                            \u00eaPRE\nVIOUSLY REFERENCED STATEMENT NUMBER _ APPEARS ON A STATEMENT FUNCTION DEFINITION\n                                                \u0099STATEMENT FUNCTION IS THE OBJEC\nT OF A LOGICAL IF STATEMENT\n                    \u00cdRECURSIVE STATEMENT FUNCTION DEFINITION:NAME APPEARS ON BOT\nH SIDES OF EQUAL SIGN.LIKELY CAUSE:VARIABLE NOT DIMENSIONED             .A STATE\nMENT FUNCTION DEFINITION APPEARS AFTER THE FIRST EXECUTABLE STATEMENT\n                                            \u001dILLEGAL USE OF FUNCTION NAME _\n\n                \bSUBPROGRAM _ IS MISSING\n                                                                    \u00c5SUBPROGRAM\n_ REDEFINES A CONSTANT, EXPRESSION, DO-PARAMETER OR ASSIGNED GOTO INDEX (ARGUMEN\nT NUMBER XXX)                           \u00e3SUBPROGRAM _ WAS ASSIGNED DIFFERENT TYP\nES IN DIFFERENT PROGRAM SEGMENTS\n            \u0017ATTEMPT TO USE SUBPROGRAM _ RECURSIVELY\n                                                                 INVALID TYPE FO\nR ARGUMENT NUMBER XXX IN REFERENCE TO SUBPROGRAM _\n                                    \u0095WRONG NUMBER OF ARGUMENTS IN REFERENCE TO S\nUBPROGRAM _\n        \u0014SUBPROGRAM _ WAS PREVIOUSLY DEFINED. FIRST DEFINITION IS USED\n                                                            \u000eNO MAIN PROGRAM\n\n                                \u0081ILLEGAL OR MISSING SUBPROGRAM NAME\n\n    \u0095LIBRARY SUBPROGRAM _ WAS NOT ASSIGNED THE CORRECT TYPE\n                                                        \u00e8METHOD OF ENTERING SUBP\nROGRAM PRODUCES UNDEFINED VALUE FOR CALL-BY-LOCATION PARAMETER\n                            \u0017ZERO SUBSCRIPT OR DIMENSION NOT ALLOWED\n\n\u0011SUBSCRIPT NUMBER _\n                                                    \u0085INVALID SUBSCRIPT FORM\n\n                        \nA SUBSCRIPT OF _ WHICH IS OUT OF RANGE\n                                                                            \u0019MIS\nSING STATEMENT NUMBER _\n                                                \u0084STATEMENT NUMBER GREATER THAN 9\n9999.|\n                    \u008aSTATEMENT NUMBER _ HAS ALREADY BEEN DEFINED\n                                                                        \u0085UNDECOD\nEABLE STATEMENT\n                                            \u0091UNNUMBERED EXECUTABLE STATEMENT FOL\nLOWS A TRANSFER\n                \u0015STATEMENT NUMBER _ IN A TRANSFER IS A NON-EXECUTABLE STATEMENT\n                                                                    \u008aUNREFERENCE\nD STATEMENT _ FOLLOWS A TRANSFER\n                                        \u00e2STATEMENT SPECIFIED IN A TRANSFER STATE\nMENT _ IS A FORMAT STATEMENT\n            \u0019MISSING FORMAT STATEMENT _\n                                                                \u00acSPECIFICATION S\nTATEMENT DOES NOT PRECEDE STATEMENT FUNCTION DEFINITIONS OR EXECUTABLE STATEMENT\nS                                   \u0016WRONG NUMBER OF SUBSCRIPTS SPECIFIED FOR VA\nRIABLE _\n        \u0014ARRAY OR SUBPROGRAM NAME _ IS USED INCORRECTLY WITHOUT A LIST\n                                                            \u0084MORE THAN 7 DIMENSI\nONS NOT ALLOWED. |\n                                \u0004DIMENSION OR SUBSCRIPT IS TOO LARGE (MAXIMUM 10\n**8-1). |\n    \u00e1VARIABLE _,USED WITH VARIABLE DIMENSIONS,IS NOT A SUBPROGRAM PARAMETER\n                                                        \u00ecVARIABLE DIMENSION _ IS\n NOT ONE OF SIMPLE INTEGER VARIABLE,SUBPROGRAM PARAMETER,IN COMMON\n                            \u0011MISSING OPERATOR.%\n\n\u0081EXPECTING OPERATOR BUT _ WAS FOUND\n                                                    \u001fEXPECTING SYMBOL,BUT _ WAS\nFOUND\n                        \u008bEXPECTING SYMBOL OR OPERATOR,BUT _ WAS FOUND\n                                                                            \u0081EXP\nECTING CONSTANT,BUT _ WAS FOUND\n                                                \u008bEXPECTING SYMBOL OR CONSTANT,BU\nT _ WAS FOUND\n                    \u0089EXPECTING STATEMENT NUMBER,BUT _ WAS FOUND\n                                                                        \u0090EXPECTI\nNG SIMPLE INTEGER VARIABLE,BUT _ WAS FOUND\n                                            \u0014EXPECTING SIMPLE INTEGER VARIABLE O\nR CONSTANT,BUT _ WAS FOUND\n                \u008aILLEGAL SEQUENCE OF OPERATORS IN EXPRESSION\n                                                                    \u0089EXPECTING E\nND-OF-STATEMENT,BUT _ WAS FOUND\n                                        \u008bVARIABLE _ HAS ALREADY BEEN EXPLICITLY\nTYPED\n            \u00c3LENGTH OF EQUIVALENCED VARIABLE _ MAY NOT BE CHANGED.REMEDY:INTERCH\nANGE TYPE AND EQUIVALENCE STATEMENTS                            \u00efCONTROL CARD EN\nCOUNTERED \" AT EXECUTION. PROBABLE CAUSE:MISSING DATA OR INCORRECT FORMAT\n                                    \u008aEND OF FILE ENCOUNTERED \" (IBM CODE IHC217)\n\n        \u001cI/O ERROR \" (IBM CODE IHC218)\n                                                            \nNO DD CARD FOR I/O\n\" (IBM CODE IHC219)\n                                \u0014REWIND,ENDFILE,BACKSPACE \" REFERENCES READER,PR\nINTER,OR PUNCH\n    \u0005ATTEMPT TO READ \" AFTER IT HAS HAD END-OF-FILE\n                                                        \u0005_ IS NOT A VALID UNIT N\nUMBER (IBM CODE IHC220)\n                            \u0012PAGE-LIMIT EXCEEDED\n\n#ATTEMPT TO DO DIRECT ACCESS I/O ON SEQUENTIAL FILE _,OR VICE VERSA. POSSIBLE MI\nSSING DEFINE FILE STATEMENT (IBM CODE IHC231)       \u00e0FOR I/O \",WRITE REFERENCES\nREADER,OR READ REFERENCES PRINTER OR PUNCH\n                        \u00e9DEFINE FILE REFERENCES UNIT _ PREVIOUSLY USED FOR SEQUE\nNTIAL I/O (IBM CODE IHC235)                                                 \u00d1REC\nORD SIZE FOR UNIT _ EXCEEDS 32767, OR DIFFERS FROM DD STATEMENT SPECIFICATION (I\nBM CODES IHC233,IHC237)                         \u0090\" IS NEGATIVE,ZERO,OR TOO LARGE\n (IBM CODE IHC232)\n                    +ATTEMPT TO READ MORE INFORMATION THAN LOGICAL RECORD CONTAI\nNS (IBM CODE IHC213)                                                    \u0095FORMATT\nED LINE EXCEEDS BUFFER LENGTH (IBM CODE IHC212)\n                                            \u0017I/O ERROR - SEARCHING LIBRARY DIREC\nTORY\n                \u0092I/O ERROR - READING LIBRARY\n                                                                    .ATTEMPT TO\nDEFINE THE OBJECT ERROR UNIT _ AS DIRECT ACCESS (IBM CODE IHC234)\n                                        \u00e0RECFM IS NOT V(B)S FOR I/O WITHOUT FORM\nAT CONTROL \" (IBM CODE IHC214)\n            \u008cMISSING DD CARD FOR WATLIB;NO LIBRARY ASSUMED\n                                                                \u0015ATTEMPT TO READ\n OR WRITE PAST END OF CHARACTER VARIABLE BUFFER\n                                    \bVALUE OF _ IS UNDEFINED\n\n        \u001eSUBSCRIPT NUMBER _ IS UNDEFINED\n                                                            \u0018SUBPROGRAM _ IS UND\nEFINED\n                                \u001cAN ARGUMENT OF _ IS UNDEFINED\n\n    \u0088UNDECODABLE CHARACTERS IN VARIABLE FORMAT\n                                                        \u0005NAME _ IS TOO LONG;TRUN\nCATED TO SIX CHARACTERS\n                            /ATTEMPT TO USE THE ASSIGNED OR INITIALIZED VARIABLE\n OR DO-PARAMETER _ IN A SPECIFICATION STATEMENT\n\u001fILLEGAL USE OF SUBROUTINE NAME _\n                                                    \u001dILLEGAL USE OF VARIABLE NAM\nE _\n                        \u00a0ATTEMPT TO USE PREVIOUSLY DEFINED NAME _ AS A FUNCTION\nOR AN ARRAY                                                                 \u0004ATT\nEMPT TO USE PREVIOUSLY DEFINED NAME _ AS A SUBROUTINE\n                                                \u0004ATTEMPT TO USE PREVIOUSLY DEFIN\nED NAME _ AS A SUBPROGRAM\n                    \u0099ATTEMPT TO USE PREVIOUSLY DEFINED NAME _ AS A COMMON BLOCK\n                                                                        \u008bATTEMPT\n TO USE FUNCTION NAME _ AS A VARIABLE\n                                            \u0095ATTEMPT TO USE PREVIOUSLY DEFINED N\nAME _ AS A VARIABLE\n                \u001bILLEGAL USE OF PREVIOUSLY DEFINED NAME _\n                                                                    \u0080ARRAY BOUND\nS EXCEEDED FOR ARRAY _\n                                        \u008bUNFORMATTED CORE TO CORE I/O NOT IMPLEM\nENTED\n            \u00a2ATTEMPT TO PERFORM I/O IN A FUNCTION WHICH IS CALLED IN AN OUTPUT S\nTATEMENT                                                        \u00f1AN END STATEMEN\nT CANNOT HAVE A STATEMENT NUMBER. STATEMENT NUMBER IGNORED.\n                                    \u00e2ATTEMPT TO READ ON UNCREATED DIRECT ACCESS\nFILE _ (IBM CODE IHC236)\n        \u008bUNFORMATTED WRITE STATEMENT MUST HAVE A LIST\n                                                            \u0080NUMBER OF RECORDS O\nR RECORD SIZE|\n                                \u008aCANNOT OPEN WATFIV.ERRTEXTS. RUN TERMINATED\n\n    \u008fI/O ERROR ON ERROR TEXT FILE\n                                                        \u0019SYNTAX ERROR:  _ WAS FO\nUND\n                            \u001bILLEGAL QUANTITY ON RIGHT OF EQUALS SIGN\n\n\u0099UNABLE TO OPEN WATLIB DUE TO I/O ERROR; NO LIBRARY ASSUMED\n                                                    \u0088DIRECT ACCESS SPACE EXCEEDE\nD (IBM CODE S_\n                        \u0007PSEUDO VARIABLE DIMENSIONING ASSUMED FOR ARRAY _\n                                                                            \u0092COM\nPILER ERROR (IBM CODE S_\n                                                \u001eMAINLINE PROGRAM NOT IN LIBRARY\n\n                    \u0083ATTEMPT TO WRITE ON A READ ONLY FILE\n                                                                        \u0094AT END\nSTATEMENT MUST FOLLOW IMMEDIATELY AFTER A READ\n                                            \u00e4AT END FOLLOWS CORE TO CORE, DIRECT\n ACCESS OR INVALID READ STATEMENT\n                \u009bAT END NOT VALID WHEN 'END=' SPECIFIED IN THE READ STATEMENT\n                                                                    \u001aMISSING OR\nINVALID DO CASE, WHILE, AT END, OR  IF-THEN STATEMENT\n                                        \u0090IMPROPER NESTING OF BLOCK OR CONSTRUCT\nSTARTING _\n            \nIMPROPER NESTING OF DO-LOOP STARTING _\n                                                                \u0005IMPROPER NESTIN\nG WITH DO-LOOP - BLOCK STARTS _\n                                    &MISSING END CASE, END WHILE, END AT END, OR\n END IF STATEMENT FOR BLOCK STARTING _\n        \u00c1OTHER COMPILERS MAY NOT ALLOW IF-THEN-ELSE, DO CASE, WHILE, EXECUTE, RE\nMOTE BLOCK OR AT END STATEMENTS                             \u009aIF NONE BLOCK ALREA\nDY DEFINED FOR CURRENT DO CASE CONSTRUCT\n                                \u0088IF NONE BLOCK MUST FOLLOW ALL CASE BLOCKS\n\n    \u009bATTEMPT TO TRANSFER CONTROL ACROSS REMOTE BLOCK BOUNDARIES _\n                                                        \u0017REMOTE BLOCK NOT PRECED\nED BY A TRANSFER\n                            \u001eREMOTE BLOCK PREVIOUSLY DEFINED\n\n\u0088REMOTE BLOCK STATEMENT MISSING OR INVALID\n                                                    \u0089LAST REMOTE BLOCK NOT COMPL\nETED - STARTS _\n                        \u001cREMOTE BLOCK _ IS NOT DEFINED\n                                                                            \u001fREM\nOTE BLOCK _ IS NOT REFERENCED\n                                                \u001bATTEMPT TO NEST REMOTE BLOCK DE\nFINITIONS\n                    \u0083MISSING OR INVALID REMOTE BLOCK NAME\n                                                                        \u008cATTEMPT\n TO EXECUTE A REMOTE BLOCK RECURSIVELY\n                                            \u0082NUMBER OF REMOTE BLOCKS EXCEEDS 255\n\n                \u0017DIRECT ACCESS UNAVAILABLE IN DEBUG MODE\n\n"}}, "SCRIPTOPTIONS": {"filename": "./CBT973/CBT.V500.FILE973.PDS/ERRTEXTS.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT973/CBT.V500.FILE973.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}