{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011157000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 411502, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE075.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE075.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\n'", "DS1TRBAL": "b'\\x11\\xcc'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00{\\x00\\n\\x00|\\x00\\x02\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$PANXSEC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0c\\x00\\x00\\x00\\x89#O\\x00\\x90\\x15\\x7f\\x15'\\x01j\\x01\\x84\\x00\\x00\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@\"", "ispf": {"version": "01.12", "flags": 0, "createdate": "1989-08-22T00:00:00", "modifydate": "1990-06-06T15:27:00", "lines": 362, "newlines": 388, "modlines": 0, "user": "CN03MQK"}, "text": "         TITLE '*** SECEXIT - PANEXEC SECURITY EVENT'                   00001\n         PRINT NOGEN\n***********************************************************************\n*  MODULE  -  PANEXEC SECURITY EXIT. ELEMENT AND COMMAND\n*             LEVEL VALIDATION VIA INTERFACE TO TOP SECRET\n* METHODS  -  USE PSEUDO-DATASET RESOURCE & USE RACHECK TO INVOKE TS *\n*   INPUT  -  REGISTER 1 -> PARAMETER LIST                           *\n*  OUTPUT  -  RETURN CODE R15=MUST ALWAYS BE 0\n*             STATUS RETURNED IN EVENTBLK                               00026\n* LKED     -  RENT                                                      00038\n* DETAILS  -  BUILD PSEUDO-DSNAME & USE RACHECK                 *\n*             MAX LOAD LIBRARY DSN LENGTH IS 20!!!!!!!!!!!      *\n* PSEUDO-DSNAME FORMAT:      $PANX.DSNAME.GROUP.ELEMENT               *\n***********************************************************************\nR0       EQU   0                                                        00158\nR1       EQU   1 THE ADDR OF THE PAN PARAMETER LIST\nR2       EQU   2    BASE FOR THE EVENT BLOCK\nR3       EQU   3    BASE FOR THE EVIRON BLOCK\nR4       EQU   4    BASE FOR THE DATA  BLOCK\nR5       EQU   5    BASE REGISTER FOR ALL DATA LIST ENTRIES             00163\nR6       EQU   6                                                        00164\nR7       EQU   7     BASE FOR GETMAINED WORKAREA\nR8       EQU   8     ADDR OF DATA-ID NAME\nR9       EQU   9     ADDR OF DATA-ITEM VALUE\nR10      EQU   10    BAL REG FROM MAIN EVENT\nR11      EQU   11    BAL REG TO GETDATA\nR12      EQU   12    PROGRAM BASE\nR13      EQU   13                                                       00171\nR14      EQU   14                                                       00172\nR15      EQU   15                                                       00173\n*        EXIT PARAMETER LIST                                            00045\nEXITPLST DSECT                                                          00047\nEXEVENT  DS    A             EVENT -- THE ADDRESS OF THE EVENT BLOCK    00048\nEXENVIR  DS    A             ENVIRONMENT -- THE ADDRESS OF THE ENVIRN   00049\nEXDATA   DS    A             DATA LIST -- THE ADDRESS OF THE DATA       00051\n*                            LIST BLOCK (THE HIGH ORDER BIT IS SET      00052\n*                       TO INDICATE THE END OF THE PARAMETER ADDR LIST) 00053\n*        EVENT BLOCK                                                    00056\nEVENTBLK DSECT                                                          00058\nEVEVENT  DS    CL8           EVENT-ID -- THE NAME OF THE EVENT          00059\n*                            (E.G. INIT,$OPEN000,$EXEC000,TERM ETC...)  00060\nEVEXTYPE DS    CL8           EXIT TYPE -- ANY USER EXIT IDENTIFIER      00061\n*                            (GIVEN ON THE EXIT TYPE= MACRO OR BLANKS)  00062\nEVRESPON DS    CL1        RESPONSE CODE- INITIALLY 'C', SET BY EXIT TO: 00063\nCONTINUE EQU   C'C'          'C' - CONTINUE NORMAL PROCESSING           00065\nABORT    EQU   C'A'          'A' - ABORT PANEXEC PROCESSING             00066\nTERMINAT EQU   C'T'          'T' - TERMINATE THIS EXIT                  00067\n*                      SEE MANUAL CHAPTER 12 'EXITS' FOR DETAILS        00068\nVERIFY   EQU   C'V'          'V' - ACTIVATE VERIFICATION                00082\n*                                  (VALID ONLY FROM THE INIT EVENT;     00083\n*                                  SEE THE INIT EVENT FOR DETAILS)      00084\n         DS    CL3           RESERVED                                   00085\nEVUSER   DS    F             USER FULLWORD -- INITIALLY ZEROES; TO BE   00086\n*                            USED BY USER AS DESIRED (E.G. ADDRESS OF   00087\n*                            A WORK AREA ETC...); THIS FIELD IS UNIQUE  00088\n*                            TO EACH EXIT DEFINED BY A EXIT MACRO       00089\n*        ENVIRONMENT BLOCK                                              00091\nENVIRBLK DSECT                                                          00093\nENPRODID DS    CL10          PRODUCT NAME -- VALUE IS ALWAYS \"PANEXEC\"  00094\nENPRODOP DS    CL10          PRODUCT OPTION -- VALUE IS ALWAYS BLANK    00095\nENPRODVR DS    CL4           PRODUCT VERSION -- THE RELEASE OF THE      00096\n*                            PRODUCT (I.E. PANEXEC 5.0 = \"0500\")        00097\nENOPSYS  DS    CL10          OPERATING SYSTEM -- THE OPERATING SYSTEM   00098\n*  UNDER WHICH PRODUCT IS RUNNING (\"OS/MVS\" OR \"OS/VS1\" OR \"OS/MVS/XA\") 00100\nENDCMON  DS    CL10          DC MONITOR -- VALUE IS BLANK OR \"CICS\"     00101\nENDBMGR  DS    CL10          DB MANAGER -- VALUE IS ALWAYS BLANK        00102\n         DS    XL2           RESERVED                                   00103\nENDCPARM DS    A             ADDRESS OF CICS ENVIRONMENT BLOCK OR ZERO  00104\nENDBPARM DS    A             ALWAYS ZEROES                              00105\n*                                                                       00106\n*        DATA LIST BLOCK                                                00107\nDATALIST DSECT                                                          00109\nDLCOUNT  DS    F             DATA LIST COUNT -- THE NUMBER OF DATA      00110\n*                            LIST ENTRIES (0 TO N) FOLLOWING:           00111\nDLFIRST  DS    0X            FIRST DATA LIST ENTRY                      00112\n*        DATA LIST ENTRY                                                00114\nDLENTRY  DSECT               DATA LIST ENTRY:                           00116\nDLEID    DS    CL8           DATA ID -- THE NAME OF THE DATA ITEM       00117\n*                            (E.G. ELEMFILE, JOBNAME ETC...)            00118\nDLESTAT  DS    CL1           DATA ITEM STATUS -- VALUES ARE:            00119\nACTIVE   EQU   C'A'          'A' - ACTIVE                               00120\nINACTIVE EQU   C'I'          'I' - INACTIVE                             00121\n         DS    CL3           RESERVED                                   00122\nDLEITEM  DS    A             DATA ITEM ADDRESS -- THE ADDR OF THE ITEM  00123\nDLENEXT  DS    0X            BEGINNING OF NEXT ENTRY                    00125\n*                                                                       00126\n*        PANEXEC ELEMENT NAME                                           00127\nDATA0000 DSECT                                                          00129\nELEMNAME DS    CL8                                                      00130\n*        PANEXEC ELEMENT MODE                                           00132\nDATA0001 DSECT                                                          00134\nELEMMODE DS    CL8                                                      00135\n*        LIBRARY VOLUME SERIAL                                          00137\nDATA0002 DSECT                                                          00139\nLIBVOL   DS    CL6                                                      00140\n*        PANEXEC FUNCTION                                               00142\nDATA0003 DSECT                                                          00144\nFUNCTION DS    CL8                                                      00145\n*        PANVALET ELEMENT MODE                                          00147\nDATA0004 DSECT                                                          00149\nPVMODE   DS    CL2                                                      00150\nDISABLED EQU   C'D'    PANVALET ELEMENT STATUS EQUATE                   00152\n*                                                                       00155\n         TITLE '*** SECEXIT <==> PROCESSING ***'                        00174\nSECEXIT  CSECT                                                          00175\n         SAVE  (14,12),T,*                                              00179\n         LR    R12,R15        BASE REG=R12                              00183\n         USING SECEXIT,R12    SET UP ADDRESSABILITY                     00184\n         USING EXITPLST,R1                                              00188\n         L     R2,EXEVENT                                               00189\n         USING EVENTBLK,R2                                              00190\n         L     R3,EXENVIR                                               00191\n         USING ENVIRBLK,R3                                              00192\n         L     R4,EXDATA                                                00193\n         USING DATALIST,R4                                              00194\n         USING DLENTRY,R5                                               00198\n* IF EVENT = 'INIT'                                                     00200\n         CLC   EVEVENT,=CL8'INIT'                                       00202\n         BNE   GETWKADR                                                 00203\n         GETMAIN R,LV=LWORK   YES - GETMAIN A WORK AREA  <========      00207\n         LR    R6,R1    STORE THE SAVE AREA ADDRESS IN THE EVENT BLOCK  00211\n         ST    R6,EVUSER                                                00212\n         B     LINKSAVE                                                 00213\n*     GET ADDRESS OF EXIT SAVE AREA STORED IN THE EVENT BLOCK           00219\nGETWKADR L     R6,EVUSER                                                00221\n*                                                                       00223\n* LINK EXIT SAVE AREA TO SAVE AREA CHAIN                                00227\nLINKSAVE ST    R6,8(R13)                                                00229\n         ST    R13,4(R6)                                                00230\n* SET NEW SAVE AREA AS THE CURRENT SAVE AREA                            00232\n         LR    R13,R6                                                   00234\n         LR    R7,R6        SET UP R7 AS BASE OF THE GETMAINED WORKAREA 00234\n         USING WORKAREA,R7                                              00234\n* IF EVENT = '$EXEC000'                                                 00236\n         CLC   EVEVENT,=CL8'$EXEC000'                                   00238\n         BNE   CHKELEM0                                                 00239\n         BAL   R11,$EXEC000                                             00243\n*        FETCH DOES NOT WORK FOR PSEUOD-DATASETS                        00243\n*        MVI   TSSACC,$AFETCH   MOVE IN FETCH ACCESS CODE\n*        BAL   R11,TSSCHECK     CHECK FOR TOP SECRET ACCESS             00243\n         B     RSETSAVE                                                 00244\n*                                                                       00269\nCHKELEM0 CLC   EVEVENT,=CL8'$ELEM000'                                   00274\n         BNE   CHKELEM1                                                 00275\n         BAL   R11,$ELEM000                                             00279\n         LA    R8,=CL8'PENDACT'   GET PENDING ACTION\n         BAL   R10,GETDATA\n         MVI   TSSACC,$AREAD    SET READ ACCESS AS DEFAULT\n         CLI   0(R9),C'W'       IS ACCESS WRITE\n         BNE   DOTSSCHK             NO\n         MVI   TSSACC,$AUPDATE  YES-UPDATE\nDOTSSCHK BAL   R11,TSSCHECK     CHECK FOR TOP SECRET ACCESS             00243\n         B     RSETSAVE                                                 00280\n*                                                                       00281\nCHKELEM1 CLC   EVEVENT,=CL8'$ELEM001'                                   00286\n         BNE   CHKCMND0                                                 00287\n         BAL   R11,$ELEM001                                             00243\n         MVI   TSSACC,$AREAD    MOVE IN READ ACCESS CODE\n         BAL   R11,TSSPANCK     CHECK FOR TOP SECRET ACCESS             00243\n         B     RSETSAVE                                                 00292\n*                                                                       00293\nCHKCMND0 CLC   EVEVENT,=CL8'$CMND000'                                   00298\n         BNE   RSETSAVE                                                 00299\n         BAL   R11,$CMND000                                             00303\n         B     RSETSAVE                                                 00304\n* RESET CALLER'S SAVE AREA AS THE CURRENT SAVE AREA                     00310\nRSETSAVE LR    R6,R13                                                   00312\n         L     R13,4(R6)                                                00313\n* REMOVE EXIT SAVE AREA FROM THE SAVE AREA CHAIN                        00315\n         XC    8(4,R13),8(R13)                                          00317\n         XC    4(4,R6),8(R6)                                            00318\n         CLC   EVEVENT,=CL8'TERM'                                       00322\n         BNE   RETURN                                                   00323\n         FREEMAIN R,LV=LWORK,A=(R7)    FREE GETMAINED WORKAREA          00327\n         XR    R7,R7                                                    00328\n         ST    R7,EVUSER                                                00329\nRETURN   RETURN (14,12),T,RC=0                                          00338\n         TITLE '*** SECEXIT <==> INTERNAL SUBROUTINES ***'              00339\n* SUBROUTINE DISALLOWS EXECUTION OF INACTIVE OR DISABLED ELEMENTS       00345\n* GET MODE OF ELEMENT TO BE EXECUTED                                    00349\n$EXEC000 LA    R8,=CL8'ELEMMODE'                                        00351\n         BAL   R10,GETDATA                                              00352\n         USING ELEMMODE,R9                                              00353\n* IF ELEMENT MODE IS INACTIVE OR DISABLED                               00355\n         CLI   ELEMMODE,INACTIVE                                        00357\n         BE    INACXELM                                                 00358\n         CLI   ELEMMODE,DISABLED                                        00359\n         BNER  R11                                                      00360\n*     INACTIVATE ELEMENT MODE TO DISALLOW EXECUTION                     00364\nINACXELM MVI   DLESTAT,INACTIVE                                         00366\n         BR    R11                                                      00374\n*                                                                       00376\n* SUBROUTINE ALLOWS ACCESS TO ANY ELEMENT THRU DIRSTAT COMMAND          00376\n* SUBROUTINE DISALLOWS REMOVAL OF ACTIVE ELEMENTS FROM A PANEXEC LIB    00447\n* GET CURRENT COMMAND BEING EXECUTED                                    00452\n$ELEM000 LA    R8,=CL8'FUNCTION'                                        00454\n         BAL   R10,GETDATA                                              00455\n         USING FUNCTION,R9                                              00456\n* IF CURRENT COMMAND IS REMOVE                                          00458\n         CLC   FUNCTION,=CL8'DIRSTAT'   IF COMMAND IS DIRSTAT           00460\n         BE    RSETSAVE                 ACCESS IS OK - EXIT             00461\n         CLC   FUNCTION,=CL8'REMOVE'                                    00460\n         BNER  R11                                                      00461\n*     GET MODE OF ELEMENT BEING REMOVED                                 00463\n         LA    R8,=CL8'ELEMMODE'                                        00465\n         BAL   R10,GETDATA                                              00466\n         USING ELEMMODE,R9                                              00467\n*     IF ELEMENT MODE IS ACTIVE                                         00469\n         CLI   ELEMMODE,ACTIVE                                          00471\n         BNER  R11                                                      00472\n*   INACTIVATE ELEMENT MODE TO DISALLOW REMOVE OF ACTIVE ELEMENT        00474\n         MVI   DLESTAT,INACTIVE                                         00476\n         BR    R11                                                      00486\n*                                                                       00488\n* SUBROUTINE DISALLOWS WRITING OF INACTIVE OR DISABLED ELEMENTS FROM    00493\n* A PANVALET LIBRARY                                                    00494\n* GET CURRENT COMMAND BEING EXECUTED                                    00498\n$ELEM001 LA    R8,=CL8'FUNCTION'                                        00500\n         BAL   R10,GETDATA                                              00501\n         USING FUNCTION,R9                                              00502\n* IF CURRENT COMMAND IS WRITE                                           00504\n         CLC   FUNCTION,=CL8'WRITE'                                     00506\n         BNER  R11                                                      00507\n*     GET MODE OF ELEMENT BEING REMOVED                                 00509\n         LA    R8,=CL8'PVMODE'                                          00511\n         BAL   R10,GETDATA                                              00512\n         USING PVMODE,R9                                                00513\n*     IF ELEMENT MODE IS INACTIVE OR DISABLED                           00515\n         CLI   PVMODE,INACTIVE                                          00517\n         BE    INACPELM                                                 00518\n         CLI   PVMODE+1,DISABLED                                        00519\n         BNER  R11                                                      00520\n*    INACTIVATE ELEMENT MODE TO DISALLOW REMOVE OF ACTIVE ELEMENT       00524\nINACPELM MVI   DLESTAT,INACTIVE                                         00526\n         BR    R11                                                      00536\n*                                                                       00538\n* SUBROUTINE DISALLOWS USE OF THE FILEOPT, CREATE AND STATUS COMMAND    00543\n* AND THE ACCESS, ALTER AND OVERRIDE SECURITY COMMANDS                  00543\n* FOR THOSE WHO DO NOT HAVE UPDATE ACCESS TO THE PANESRL LIBRARY.\n* GET CURRENT COMMAND BEING EXECUTED                                    00548\n$CMND000 LA    R8,=CL8'ELEMNAME'                                        00550\n         BAL   R10,GETDATA                                              00551\n         USING ELEMNAME,R9                                              00552\n         CLC   ELEMNAME,=CL8'FILEOPT'  IS CMD = FILEOPT                 00556\n         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557\n         CLC   ELEMNAME,=CL8'STATUS'  IS CMD = STATUS                   00556\n         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557\n         CLC   ELEMNAME,=CL8'CREATE'   IS CMD = CREATE                  00556\n         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557\n         CLC   ELEMNAME,=CL8'ACCESS'   IS CMD = ACCESS                  00556\n         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557\n         CLC   ELEMNAME,=CL8'ALTER'    IS CMD = ALTER                   00556\n         BE    CMNDCHK                 YES - CHECK IF ALLOWED           00557\n         CLC   ELEMNAME,=CL8'OVERRIDE' IS CMD = OVERRIDE                00556\n         BNER  R11                     NO - OK                          00557\nCMNDCHK  MVI   TSSACC,$AUPDATE         MOVE IN UPDATE ACC CODE\n         BAL   R10,TSSCHECK            YES - CHECK IF ALLOWED\n         BR    R11                                                      00569\n*                                                                       00571\nGETDATA  DS    0H  GET DATA ITEM FROM THE DATA LIST                     00583\n* INVOCATION SEQUENCE: R8 --> DATA LIST IDENTIFIER (CL8)                00574\n*                      BAL   R10,GETDATA                                00575\n*                      R5 --> DATA LIST ENTRY                           00576\n*                      R9 --> DATA VALUE                                00577\n* IF THE DATA ID IS NOT FOUND (INDICATING AN INTERNAL ERROR IN THE      00579\n* EXIT), THIS SUBROUTINE WILL SET THE RESPONSE CODE AS \"ABORT\" AND      00580\n* RETURN DIRECTLY TO THE MAINLINE ROUTINE VIA R11                       00581\n*                                                                       00582\n* GET FIRST ENTRY IN THE DATA LIST                                      00585\n         L     R6,DLCOUNT                                               00587\n         LA    R5,DLFIRST                                               00588\n* DO WHILE ENTRIES TO BE SEARCHED AND DATA ID NOT FOUND                 00592\nCHKNEXT  LTR   R6,R6                                                    00594\n         BZ    CHKSRCH                                                  00595\n         CLC   DLEID,0(R8)                                              00596\n         BE    CHKSRCH                                                  00597\n*     GET NEXT ENTRY IN THE DATA LIST                                   00599\n         LA    R5,DLENEXT                                               00601\n         BCTR  R6,R0                                                    00602\n         B     CHKNEXT                                                  00603\n*                                                                       00606\n* IF DATA ID FOUND                                                      00609\nCHKSRCH  LTR   R6,R6                                                    00611\n         BZ    NOTFOUND                                                 00612\n*     POINT R9 AT THE DATA ITEM VALUE                                   00614\n         L     R9,DLEITEM                                               00616\n         BR    R10                                                      00620\n         SPACE 3\nTSSCHECK MVC   PSEUDONM,$PANX      ---------> SET $PANX. IN PSEUDONM\n         LA    R8,=CL8'LIBNAME'   GET LIBRARY DSN\n         BAL   R10,GETDATA\n         MVC   PSEUDONM+6(44-6),0(R9)  -----> $PANX.DSNAME\n         LA    R8,=CL8'ELEMGRP'          GET ELEMNT GRP NAME\n         BAL   R10,GETDATA\n         TRT   PSEUDONM(44-9),FINDEND    FIND END OF DSNAME\n         BZ    TOOLONG     IF DSN WAS TOO LARGE- CHK HIGH QUALIF ONLY\n         MVI   0(R1),C'.'          -------------> $PANX.DSN.\n         MVC   1(8,R1),0(R9)       -------------> $PANX.DSN.GRPNAME\n         LA    R8,=CL8'ELEMNAME'         GET ELEMNT NAME\nRACHK1   BAL   R10,GETDATA\n         TRT   PSEUDONM(44-9),FINDEND    FIND END OF GRPNAME(DSN)\n         BZ    TOOLONG IF $PANX.DSN.GRPNM TOO LARGE-CHK HIGH QUALIF ONY\n         MVI   0(R1),C'.'    --> $PANX.DSN.GRPNAME.($PAN.DSN.)\n         MVC   1(8,R1),0(R9) --> $PANX.DSN.GRPNAME.ELEMNAME($PAN..MEMB)\nTOOLONG  EQU   *\n         MVC   DATASETX(9),XDATASET X'09',C'DATASETX' FOLLOWD BY ACCESS\n         MVC   FEEDBACK,XFEEDB     INIT 16-BYTE FEEDBACK AREA\n         MVC   RACHECK,RACKLIST    MOVE RACHECK SKELETON\n         MVC   TSSVOL,=C'PANEXE'     FILL IN PHONY VOLSER 'PANEXE'\n         RACHECK CLASS=DATASETX,ENTITY=PSEUDONM,VOLSER=TSSVOL,         .\n               INSTLN=FEEDBACK,MF=(E,RACHECK)\n*              CODE LOG=NOSTAT ON THE RACHECK FOR NO TSS VIOLAT LOGGING\n         LTR   R15,R15             RETURN CODE FROM TOP SECRET\n         BZR   R11                 BR IF ZERO\n         MVI   DLESTAT,INACTIVE  NO- SET MEMBER STATUS TO I(INACTIVE)\n*        RESPONSE CODE IS ALREADY SET TO C TO CONTINUE BUT CURRENT\n*        FUNCTION (MEMBER ACCESS) TERMINATES WITH A SECURITY VIOLATION\n         BR    R11\n*                                                                       00623\nTSSPANCK MVC   PSEUDONM,$PAN       ---------> SET $PAN. IN PSEUDONM\n         LA    R8,=CL8'LIBNAME'   GET LIBRARY DSN\n         BAL   R10,GETDATA\n         MVC   PSEUDONM+5(44-9-5),0(R9)  -----> $PAN.DSN\n         LA    R8,=CL8'SUPERSET'         GET MEMBER NAME\n         B     RACHK1                    AND USE TSSCHECK RTN\n*                                                                       00623\n*     SET RESPONSE CODE AS ABORT                                        00626\nNOTFOUND MVI   EVRESPON,ABORT                                           00628\n         BR    R11                                                      00632\n         SPACE 2\nRACKLIST RACHECK  MF=L\nXFEEDB   DC    C'TSSF',X'10',XL11'00'\nXDATASET DC    X'09',C'DATASETX'  THIS MOVED TO 1ST 9 BYTES OF DATASETX\n$PAN     DC    CL44'$PAN.'       FIXED $PAN. PREFIX\n$PANX    DC    CL44'$PANX.'       FIXED $PANX. PREFIX\nFINDEND  DC    256X'00'            TRANSLATE TABLE\n         ORG   FINDEND+C' '        TO LOCATE\n         DC    X'FF'               END OF DSNAME\n         ORG   FINDEND+256         (FIRST BLANK)\n         LTORG                                                          00637\n         SPACE 4\nWORKAREA DSECT\nSAVEAREA DS    18F     REGISTER SAVE AREA-MUST BE FIRST ITEM IN DSECT\nPSEUDONM DS    CL44             PSEUDO DSNAME\n         DS    CL8      SLACK IN CASE PSEUDO-NAME IS TOO LONG\nTSSVOL   DS    CL6              VOLUME SERIAL\nDATASETX DS    CL9  -XDATASET   CLASSNAME-THIS FIELD & TSSACC CONTIG\nTSSACC   DS    X                ACCESS LEVEL: UPDATE=X'60' READ=X'40'\n*\nRACHECK  DS    CL32             RACHECK AREA\nFEEDBACK DS    XL16           FEEDBACK:\nLWORK    EQU   *-WORKAREA\n         SPACE 4\n$AFETCH  EQU   X'80'              FETCH-ONLY\n$AREAD   EQU   X'40'              READ\n$AWRITE  EQU   X'20'              WRITE-ONLY\n$AUPDATE EQU   $AREAD+$AWRITE     I-O (UPDATE)\n$ACREATE EQU   X'10'              CREATE\n$ASCRTCH EQU   X'08'              SCRATCH\n$ANONE   EQU   X'00'              NO ACCESS\n$AALL    EQU   X'FF'              EVERYTHING\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMHCL": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01a\\x00\\x00\\x00\\x89(_\\x00\\x90!\\x1f\\x174\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@'", "ispf": {"version": "01.97", "flags": 0, "createdate": "1989-10-12T00:00:00", "modifydate": "1990-07-30T17:34:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "CN03MQK"}, "text": "//CN03MQKG JOB (CN03,SYSP,OD69),'KARLIN ',MSGLEVEL=(2,0),CLASS=M,\n//   MSGCLASS=A,NOTIFY=CN03MQK\n/*JOBPARM ROOM=259\n//ASMHCL EXEC  ASMHCL,\n//       PARM.LKED='XREF,LET,LIST,NCAL'\n//ASM.SYSLIB   DD\n//         DD\n//         DD\n//         DD DISP=SHR,DSN=CN03MQK.NASPA.MACLIB\n//ASM.SYSIN  DD  DSN=CN03MQK.PANX.ISPALIB(PXP0100),DISP=SHR\n//LKED.SYSLMOD  DD  DSN=HRA.NASPA.ISPLLIB(PXP0100),DISP=SHR\n//LKED.SYSLIB DD DSN=ISP.V2R3M0.ISPLOAD,DISP=SHR\n//LKED.SYSIN DD  *\n  INCLUDE SYSLIB(ISPLINK)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NEW0010": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x00\\x00\\x90\\x03\\x9f\\x00\\x90\\x05\\x8f\\x145\\x00\\xf2\\x00\\xda\\x00\\x00\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "1990-02-08T00:00:00", "modifydate": "1990-02-27T14:35:00", "lines": 242, "newlines": 218, "modlines": 0, "user": "CN03MQK"}, "text": "*----------------------------------------------------------------------\n*        GLOBAL FACILITIES FOR SYSTEMS PROGRAMMERS USE\n*----------------------------------------------------------------------\n         PRINT NOGEN\nPXP0010  #SLC R12,R11\n*----------------------------------------------------------------------\n*        DEFINE VARIABLES\n*----------------------------------------------------------------------\n         SPFVDEF 1,(ZCMD,SPLOADER,SPSOURCE,SPBLDL,SPTABTYP,SPPDSC,     +\n               SPSECURE)\n         SPFVDEF 2,(SPRELEAS)\n         SPFVDEF 5,(SPENTRES)\n         SPFVDEF 8,(TARGET1,TARGET2,TARGET3,EXIT1,EXIT2,EXIT3)\n         SPFVDEF 82,(SPPARM)\n         SPFVDEF 71,(SPJOBC1,SPJOBC2,SPJOBC3)\n         SPFVCOPY (MSG,8),DC=NO\n         SPFVCOPY (ZUSER,8,ZTEMPF,44)\n         SPFVGET (SPJOBC1,SPJOBC2,SPJOBC3),PROFILE\n*        DISPLAY SYSTEMS PROGRAMMER PANEL\nENTRY010 SPFSPLAY 'PXP0010',MSG,,,EOJ\n         MVC   SPPARM,BLANKS    CLEAR\n         MVC   MSG,=CL8'PXP000'   CLEAR\n         OI    ZCMD,C' '        UPPER CASE\n         CLI   ZCMD,C'A'        ACTIVATE ALL?\n         BNE   AAA010           NO\n         MVC   SPPARM(5),ACTALL    YES\n         B     EXECCMD\nAAA010   CLI   ZCMD,C'D'        DEACTIV?\n         BNE   BBB010           NO\n         MVC   SPPARM(5),DEACTALL  YES\n         B     EXECCMD\nBBB010   CLI   ZCMD,C'R'        REPORT?\n         BNE   ENTRY100         NO\n         MVC   SPPARM(5),REPRTALL  YES\n         B     EXECCMD\nENTRY100 EQU   *\n         LA    R5,SPPARM        USE R5 AS BASE FOR PARM\n         SR    R1,R1               CLEAR\n         MVC   SECEXITD,=CL2';Y'      RESET\n         CLI   SPLOADER,C' '    PANEXEC LOADER?\n         BE    ENTRY110         NO\n         MVC   0(2,R5),=C'1;'  YES - CODE FOR PANEXEC LOADER\n         MVC   2(1,R5),SPLOADER A/D (ACTIVATE/DEACTIVATE)\n         LA    R5,3(R5)\n         CLI   SPLOADER,C'A'    ACTIVATE?\n         BNE   EXIT100          NO\n         MVI   0(R5),C';'\n         MVC   1(1,R5),SPSOURCE YES- SOURCE\n         MVI   2(R5),C';'\n         LA    R5,3(R5)\n         MVC   0(2,R5),SPRELEAS      RELEASE\n         TRT   0(3,R5),BLNKTAB  POINT BEYOND RELEASE FIELD ENTERED\n         LR    R5,R1\nEXIT100  MVC   0(3,R5),=C';X;'  EXECUTE\n         LA    R5,3(R5)\nENTRY110 EQU   *\n         CLI   SPBLDL,C' '    DYNAMIC BLDL?\n         BE    ENTRY120         NO\n         MVC   0(2,R5),=C'2;'  YES - CODE FOR DYNAMIC BLDL\n         MVC   2(1,R5),SPBLDL   A/F/D (ACTIVATE/REFRESH/DEACTIVATE)\n         LA    R5,3(R5)\n         CLI   SPBLDL,C'A'    ACTIVATE?\n         BNE   EXIT110          NO\n         MVI   0(R5),C';'       YES\n         MVC   1(1,R5),SPTABTYP  BLDL TABLE TYPE\n         LA    R5,2(R5)\n         CLI   SPTABTYP,C'D'         DYNAMIC\n         BE    AAA110                YES\n         CLI   SPTABTYP,C'P'         NO - PANEOPT DEFAULT\n         BNE   EXIT110                    NO\nAAA110   MVI   0(R5),C';'                 YES\n         LA    R5,1(R5)\n         MVC   0(5,R5),SPENTRES     NUMBER OF ENTRIES FOR DYNAMIC\n         TRT   0(6,R5),BLNKTAB    GET LENGTH OF RELEASE FIELD ENTERED\n         CR    R1,R5\n         BE    ZZZ110             0 LENGTH ENTERED\n         LR    R5,R1\n         B     EXIT110\nZZZ110   BCTR  R5,0               OVERLAY LAST ;\nEXIT110  MVC   0(3,R5),=C';X;'  EXECUTE\n         LA    R5,3(R5)\nENTRY120 EQU   *\n         CLI   SPPDSC,C' '      PDS COMPAT?\n         BE    ENTRY130         NO\n         MVC   0(2,R5),=C'3;'  YES - CODE FOR PDS COMPAT\n         MVC   2(1,R5),SPPDSC   A/D (ACTIVATE/DEACTIVATE)\n         MVI   3(R5),C';'\n         LA    R5,4(R5)\n         CLC   TARGET1(2),=C'A '   ALL TARGETS ENTERED\n         BNE   AAA120           NO\n         MVI   0(R5),C'A'       YES\n         LA    R5,1(R5)\n         B     EXIT120\nAAA120   MVC   0(8,R5),TARGET1  TARGET1\n         TRT   0(9,R5),BLNKTAB  POINT BEYOND TARGET FIELD ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\n         CLI   TARGET2,C' '     TARGET2 ENTERED?\n         BE    ZZZ120           NO\n         MVC   0(8,R5),TARGET2\n         TRT   0(9,R5),BLNKTAB    POINT BEYOND TARGET FIELD ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\n         CLI   TARGET3,C' '     TARGET3 ENTERED?\n         BE    ZZZ120           NO\n         MVC   0(8,R5),TARGET3\n         TRT   0(9,R5),BLNKTAB    POINT BEYOND TARGET FIELD ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\nZZZ120   MVI   0(R5),C'E'\n         LA    R5,1(R5)\nEXIT120  MVC   0(3,R5),=C';X;'  EXECUTE\n         LA    R5,3(R5)\nENTRY130 EQU   *\n         CLI   SPSECURE,C' '    SECURITY EXITS\n         BE    ENTRY140         NO\n         MVC   0(2,R5),=C'4;'  YES - CODE FOR SECURITY EXITS\n         MVC   2(1,R5),SPSECURE A/D (ACTIVATE/DEACTIVATE)\n         MVI   3(R5),C';'\n         LA    R5,4(R5)\n         LA    R4,2             SET R4 FOR LENGTH OF ;Y RESPONSE\n         CLI   SPSECURE,C'A'    IS THIS ACTIVATION\n         BNE   AAA130           NO\n         MVC   SECEXITD,BLANKS  YES- NO NEED FOR DEACT VERIF\n         LA    R4,0             SET R4=0: NO ;Y RESPONSE NEEDED\nAAA130   CLC   EXIT1(2),=C'A '  ALL EXITS ENTERED\n         BNE   BBB130           NO\n         MVI   0(R5),C'A'       YES\n         MVC   1(2,R5),SECEXITD\n         LA    R5,1(R4,R5)\n         B     EXIT130\nBBB130   MVC   0(8,R5),EXIT1    NO - EXIT1\n         TRT   0(9,R5),BLNKTAB    POINT BEYOND EXIT NAME ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\n         CLI   EXIT2,C' '       EXIT2 ENTERED?\n         BE    ZZZ130           NO\n         MVC   0(8,R5),EXIT2\n         TRT   0(9,R5),BLNKTAB    POINT BEYOND EXIT NAME ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\n         CLI   EXIT3,C' '       EXIT3 ENTERED?\n         BE    ZZZ130           NO\n         MVC   0(8,R5),EXIT3\n         TRT   0(9,R5),BLNKTAB   POINT BEYOND EXIT NAME ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\nZZZ130   MVI   0(R5),C'E'\n         MVC   1(2,R5),SECEXITD    ';Y' SECURITY EXIT DEACT VERIFICATN\n         LA    R5,1(R4,R5)\nEXIT130  MVC   0(3,R5),=C';X;'  EXECUTE\n         LA    R5,3(R5)\nENTRY140 EQU   *\n         MVI   0(R5),C'Q'       QUIT\nEXECCMD  EQU   *          USE IKJEFTSR  TO EXEC PGM=COMMAND\n         TRT   SPPARM(82),BLNKTAB  GET LENGTH OF DATA IN SPPARM\n         BZ    TOOLONG\n         MVC   0(2,R1),=C''''''     PUT 2 END QUOTES ON PARM\n         LA    R2,SPPARM\n         SR    R1,R2\n         LA    R1,1(R1)    ADD 1 FOR MOVE OF SPPARM\n         EX    R1,MOVEPARM\n         LA    R1,17(R1) ADD 17 TO PARM LEN (FOR S XLLARS,FUNC=''...'')\n         STH   R1,PGMPARM\n*        INVOKE THE TSO SERVICE FACILITY -- EXECUTE COMMAND PGM\n         L     R15,16\n         USING CVT,R15\n         L     R15,CVTTVT  GET ADDR OF TSO VECTOR TABLE\n         DROP  R15\n         USING TSVT,R15\n         L     R15,TSVTASF GET ADDR OF AUTHORIZED SERVICE FACILITY RTN\n         DROP  R15\n         PRINT GEN\n         CALL  (15),(FLAGS,PGM,PGMLEN,RETCODE,RSNCODE,ABND,PARMLIST),VL\n*        C     R15,=F'20'\n         B     TPUT1\n         B     ENTRY010\nMOVEPARM MVC   PARMDATA(*-*),SPPARM\nEOJ      EQU   *\n         SPFVDEL  (ZCMD)\n         LA    R15,0\n         #RTN\nTOOLONG  MVC   MSG,=CL8'PXP027'\n         B     ENTRY010\nTPUT1    UNPK  HEXWRK,RSNCODE(5)\n         MVC   DISPLY,HEXWRK\n         TR    DISPLY,HEXTAB\n         TPUT  DISPLY,8\n         UNPK  HEXWRK,RETCODE(5)\n         MVC   DISPLY,HEXWRK\n         TR    DISPLY,HEXTAB\n         TPUT  DISPLY,8\n         UNPK  HEXWRK,ABND(5)\n         MVC   DISPLY,HEXWRK\n         TR    DISPLY,HEXTAB\n         TPUT  DISPLY,8\n         B     ENTRY010\n*----------------------------------------------------------------------\n*        STORAGE AREAS\n*----------------------------------------------------------------------\nSKELETON DC    CL8'PXP0010S'\nACTALL   DC    CL5'A;X;Q'        ACTIVATE ALL\nDEACTALL DC    CL5'D;X;Q'      DEACTIVATE ALL\nREPRTALL DC    CL5'R;X;Q'        REPORT ALL\nSECEXITD DC    CL2';Y'       SECURITY EXIT DEACTIVATION VERIFICATION\nBLNKTAB  DC    X'FF',255X'00'         X'00' AND SPACES\n         ORG   BLNKTAB+C' '\n         DC    C' '\n         ORG   BLNKTAB+256\n         SPACE 1\nFLAGS    DS    0F\n         DC    X'00'\n         DC    X'01'   IKJEFTSR INVOKED FROM UNAUTH PROGAM - VALID ONLY\n*                      FOR TSO/E V2.1 AND ABOVE\n         DC    X'00'   NO DUMP IF INVOKED FUNCTION FAILS\n         DC    X'02'   PGM IS BEING INVOKED\nPGM      DC    C'COMMAND'  NAME OF PROGRAM BEING INVOKED\nPGMLEN   DC    F'7'      LENGTH OF COMMAND BUFFER\nRETCODE  DS    F\nRSNCODE  DS    F\nABND     DS    F\nPGMPARM  DS    0F      PARM LIST ADDR USED TO PASS PARMS TO INVOKED PGM\n         DS    H       ONLY ONE PARM NEEDED\n         DC    C'S XLLARS,FUNC='''''   FIELD ENDS IN 2 QUOTES\nPARMDATA DS    CL82             MOVE SPPARM HERE (WITH 2 END QUOTES)\nPARMLIST CALL  ,(PGMPARM),VL,MF=L  SET UP THE PARM LIST TO 'COMMAND'\n         PRINT NOGEN\nDISPLY   DS    CL8\nHEXWRK   DS    CL9\nHEXTAB   DC    240X'00',C'0123456789ABCDEF'\nPXP0010  CSECT\nSPFMACS  SPFCMDS FILES=YES\n*\n         CVT   DSECT=YES\n         IKJTSVT\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PXP0000": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x00\\x00\\x00\\x00\\x90!\\x1f\\x00\\x90!\\x1f\\x176\\x04V\\x04V\\x00\\x00\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@'", "ispf": {"version": "02.00", "flags": 0, "createdate": "1990-07-30T00:00:00", "modifydate": "1990-07-30T17:36:00", "lines": 1110, "newlines": 1110, "modlines": 0, "user": "CN03MQK"}, "text": "*        PANEXEC MASTER DIALOG MANAGER\n         PRINT  NOGEN\nPXP0000  SPFINIT  R12,R11,R10,R9,R8,R7,USER=Y,TIME=Y,TERM=Y,TABLES=Y\n*----------------------------------------------------------------------\n*        DEFINE VARIABLES\n*----------------------------------------------------------------------\nENTRY010 DS    0H\n         SPFVDEF 2,(YZA),DC=NO\n         SPFVDEF 2,(YZB),DC=NO\n         SPFVDEF 2,(YZC),DC=NO\n         SPFVDEF 2,(YZCH),DC=NO\n         SPFVDEF 2,(YZCL),DC=NO\n         SPFVDEF 2,(YZD),DC=NO\n         SPFVDEF 2,(YZE),DC=NO\n         SPFVDEF 2,(YZF),DC=NO\n         SPFVDEF 2,(YZG),DC=NO\n         SPFVDEF 2,(YZI),DC=NO\n         SPFVDEF 2,(YZIN),DC=NO\n         SPFVDEF 2,(YZL),DC=NO\n         SPFVDEF 2,(YZM),DC=NO\n         SPFVDEF 2,(YZP),DC=NO\n         SPFVDEF 2,(YZPM),DC=NO\n         SPFVDEF 2,(YZR),DC=NO\n         SPFVDEF 2,(YZS),DC=NO\n         SPFVDEF 2,(YZT),DC=NO\n         SPFVDEF 2,(YZX),DC=NO\n         SPFVDEF 2,(YZZ),DC=NO\n         SPFVDEF 8,(MSG),DC=NO\n*\n         SPFVDEF 1,(PXPSTAT,PXPMODE,PXPNEWMD,PXPSSOUT,PXPREPL,PXPEXPND,+\n               PXPSTAT2,PXPMODE2,PXPLOG,PXPDIAG,PXPSVIEW,PXPCONF)\n         SPFVDEF 3,(DISP)\n         SPFVDEF 4,(PXPTYPE)\n         SPFVDEF 6,(PXPVOL,VOL2)\n         SPFVDEF 8,(PXPGRP,PXPELT,PXPNEWNM,PXPNEWGP,MEMB,              +\n               PXPGRP2,PXPELT2,SCRHORZ)\n         SPFVDEF 10,(PXPFUNC)\n         SPFVDEF 44,(PXPDSN,PXPDSN2,DSN2)\n         SPFVDEF 100,(PXPARMS)\n         SPFVGET (PXPDSN,PXPGRP,PXPELT,PXPSTAT,PXPMODE,PXPSSOUT,PXPLOG,+\n               DSN2,PXPREPL,PXPEXPND,ZUSD,PXPDIAG,PXPTYPE,             +\n               PXPCONF),PROFILE\n         MVC   SCRHORZ,BLANKS\n         BAL   R14,ENTRY910\n         SPFSPLAY 'PXPLOGO',,,,GOBACK    DISPLAY LOGO\n         MVC   MSG,=CL8'PXP000'  INIT BLANK MESSAGE\n         MVC   PANEL,=CL8'PXP0000'    INIT PANEL\n*----------------------------------------------------------------------\n*        DISPLAY PRIMARY PANEL\n*----------------------------------------------------------------------\nENTRY060 EQU   *\n         CLC   MSG+4(2),=C'00'   IS THERE A MSG TO BE PUT OUT?\n         BNE   AAA060            YES\n         MVC   MSG,=CL8'PXP000'      NO-INIT BLANK MESSAGE\n         MVC   PXPFUNC,BLANKS        NO-INIT BLANK FUNC\nAAA060   MVC   PANXPARM+2(100),BLANKS\n         MVC   PANEL,=CL8'PXP0000'    INIT PANEL\n         CLI   MOREFLAG,C'1'    MORE CMDS FROM PXP0100?\n         BNE   DISP060          NO\n         CLI   ERRFLAG,C'1' YES-WAS THERE AN ERROR ON 'S' OPT SELECTN\n         BE    FFF190     YES- DONT SETMSG (ALLOWS NEXT MSG TO DISPL)\n         CALL  ISPLINK,(SETMSG,MSG),VL   NO- FORCE MSG DISPLAY\n         B     FFF190           RETURN TO 190 RTN TO GET NEXT CMD\nDISP060  SPFSPLAY PANEL,MSG,'ZCMD',,GOBACK\n         MVC   WORKDSN,PXPDSN\n         BAL   R14,ENTRY928            PROCESS DSN\n*----------------------------------------------------------------------\n*        CHECK PRIMARY COMMAND - ZCMD\n*----------------------------------------------------------------------\nBBB060   MVC   PANEL,=CL8'PXP0000'      REINIT TO INIT PANEL\n         MVC   MSG,=CL8'PXP000'        BLANK MESSAGE\n         MVC   PXPFUNC,BLANKS          INIT BLANK FUNC\n         USING SELDSECT,R1\n         OC    ZCMD,BLANKS           UPPER CASE\n         MVC   SAVSEL,ZCMD             SAVE SELECTION OPTION\n         LA    R1,SELTABLE             TABLE OF SELECT OPTIONS\nLOOP070  CLC   SAVSEL,SELOPT           FIND OPTION\n         BE    CCC070                  FOUND IT\n         LA    R1,SELLL(R1)            BUMP\n         CLI   0(R1),X'FF'             END OF TABLE ?\n         BNE   LOOP070                 NO - OK\nENTRYERR MVC   ZCMD,BLANKS           YES - CLEAR SEL OPTION\n         MVC   PANEL,BLANKS       NO- REDISPLAY PANEL WITH ERROR MSG\n         MVC   MSG,=CL8'PXP001'      INVALID SELECTION CODE\n         B     ENTRY060                DISPLAY\nCCC070   ICM   R14,15,SELADDR          PROCESSING ROUTINE ADDRESS\n         BR    R14                     GO TO PROCESSING ROUTINE FOR\n*----------------------------------------------------------------------\n*        BROWSE/EDIT REQUEST\n*----------------------------------------------------------------------\nENTRY100 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\nA100     BAL   R14,ENTRY920       ALLOC FILES\n         CLI   SAVSEL,C'E'        EDIT?\n         BNE   AA100              NO\n         BAL   R14,ENTRY960       YES-ENQ THE ELEMENT\n         MVC   LRECL,=H'80'       SET PANPRINT LRECL=80\nAA100    MVC   DDNAME,=CL8'PANPRINT'\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR PANPRINT)\n         MVC   LRECL,=H'0'        RESET LRECL\n         MVC   PANXPARM+2(9),=CL9'%PRINT,D '\n         CLI   TYPE,C'C'     IS TYPE=CNTL  (PXPTYPE WAS MOVED TO TYPE)\n         BNE   AAA100             NO\n         MVC   PANXPARM+8(2),=C'  ' YS-BLANK OUT ,D\nAAA100   MVC   PANXPARM+11(34),PANECC2\n         BAL   R14,ENTRY929       LINK TO PANEXEC USING PARM\n         LTR   R15,R15            WAS PRINT CMD SUCCESSFUL?\n         BNZ   KKK100             NO\n         CLI   SAVSEL,C'E'    YES-WAS EDIT REQUESTED\n         BE    FFF100               YES\n         MVC   IMAC,=CL8'PXPIMACB'  NO-INVOKE THE EDIT INIT MACRO & END\n         BAL   R14,ENTRY924       EDIT THE TEMP DS  FOR BROWSING\n         BAL   R14,ENTRY930       BROWSE TEMP DS USING CUSTOMIZE PANEL\n         LTR   R15,R15                 DID WE BROWSE IT ?\n         BZ    EEE100                  YES - OK\nBBB100   MVC   MSG,=CL8'PXP002'    NO-BROWSE/EDIT FAILED\n         MVC   PANEL,BLANKS\nEEE100   EQU   *\n         BAL   R14,ENTRY970       DEQ THE ELEMENT\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060                DISPLAY\nFFF100   EQU   *             EDIT RTN\n         MVC   PANEL,=CL8'PXPEDDE'   USE CUSTOMIZED EDIT PANEL\n         MVC   IMAC,=CL8'PXPIMACE'     INVOKE THE EDIT INITIAL MACRO\n         BAL   R14,ENTRY924       EDIT THE TEMP DS\n         C     R15,=F'4'    TEMP DS EDITED ?  (0=SAVED OR 4=CANCELLED)\n         BE    EEE100       CANCELLED - DONT SAVE, JUST GET OUT\n         BH    BBB100                      NO\n         BAL   R14,ENTRY920    RE-ALLOC PANELIB & UNALLOC PANPRINT\n         MVC   PANXPARM+2(8),=C'%ADD,R  '  ADD IT BACK TO PANX LIB\n         MVC   PANXPARM+45(7),=C',SEQIN*'\n         MVC   DSN2DD,=CL8'SEQIN'         ALLOC SEQU FILE\n         MVC   DDNAME,DSN2DD              (FOR LATER DELETION)\n         MVC   SAVDSN2,SAVDSN     SAVE THE DSN FOR 'S' OPT\n         MVC   SAVDSN,TEMPOUT\n         MVC   DISP,=CL3'OLD'             SET DS DISP\n         MVC   FREE,=CL5'END'  DONT FREE UNTIL UNALLOC/DEL IN EEE100\n         BAL   R14,ENTRY923\n         MVC   SAVDSN,SAVDSN2   RESET THE DSN IF EDIT/BROWSE, COPY/XFER\n*                         INPUT, FETCH AND ADD REINVOKED ON 'S' OPTION\n         BAL   R14,ENTRY922               REALLOCATE PANPRINT\n         MVC   PXPFUNC,=CL10'SAVED'   ELT SAVED\n         BAL   R14,ENTRY929               INVOKE PANEXEC\n         B     EEE100             DELETE AND UNALLOC TEMP DS\n*        CREATE NEW ELEMENT FOR EDIT\nKKK100   EQU   *                  %PRINT FAILED - ELEMENT NOT FOUND\n         CLI   SAVSEL,C'E'        IS IT EDIT\n         BNE   BBB100             NO -ERROR\n         BAL   R14,ENTRY970       YES-DEQ THE ELEMENT\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS  -PANPRINT\n         MVC   DDNAME,=CL8'PANEIN'   CREATE BLANK ELEMENT\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR PANEIN)\n         OPEN  (PANEIN,(OUTPUT))\n         MVC   PANECCE1+7(34),PANECC2\n         PUT   PANEIN,PANECCE1          %ADD,D ELTNAME\n         PUT   PANEIN,BLANKS            BLANKS\n         BAL   R14,ENTRY926        CLOSE AND FREEPOOL\n         MVC   PANXPARM+2(80),INPUTCC   %INPUT,S PANEIN*\n         BAL   R14,ENTRY920    RE-ALLOC PANELIB & UNALLOC PANPRINT\n         BAL   R14,ENTRY922    RE-ALLOC PANPRINT TO TERMINAL\n         BAL   R14,ENTRY929             CALL PANEXEC\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS- PANEIN\n         B     A100\n*----------------------------------------------------------------------\n*        DELETE ELEMENT\n*----------------------------------------------------------------------\nENTRY110 DS    0H\n         BAL   R14,ENTRY950       CONTROL SAVE\n         CLC   SAVDSN,FPANESRL    TRYING TO DELETE FROM PANESRL\n         BNE   AAA110              NO-OK\n         MVC   MSG,=CL8'PXP003'   YES-ERROR\n         B     ZZZ110\n*----------------------------------------------------------------------\n*        DELETE - DISPLAY CONFIRMATION PANEL\n*----------------------------------------------------------------------\nAAA110   CLI   PXPCONF,C'Y'       SHOW CONFIRM DELETE?\n         BNE   AAA111             NO\n         SPFSPLAY 'PXP0002',,,,ZZZ110    YES- RC=0 ENTER; RC=8 END\nAAA111   BAL   R14,ENTRY960       ENQ THE ELT\n         BAL   R14,ENTRY920       ALLOC STANDARD FILES\n         BAL   R14,ENTRY922       ALLOC PRINT FILE\n         MVC   DDNAME,=CL8'PANEIN'\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR PANEIN)\n         SPFALLOC A,RETDD=PRTECTDD,DSN=SAVDSN,DISP='(NEW,DELETE)',     +\n               SPACE='(TRK,1)',UNIT='SYSDA',VOL='HRWKA1',FREE='CLOSE'\n         OPEN  (PANEIN,(OUTPUT))\n         PUT   PANEIN,PANECC1           %REMOVE,FL PANELIB*,PROTECT*\n         PUT   PANEIN,PANECC2+9         ELEMENT G.E/T;SM\n         BAL   R14,ENTRY926        CLOSE AND FREEPOOL\n         MVC   PANXPARM+2(80),INPUTCC   %INPUT,S PANEIN*\n         MVC   PXPFUNC,=CL10'DELETED' ELT DELETED\n         BAL   R14,ENTRY929             CALL PANEXEC\n         ST    R15,SPFRC                SAVE THE RC\n         BAL   R14,ENTRY970       DEQ THE ELT\n         ICM   R15,15,SPFRC       RETRIEVE THE PANEXEC RC\n         BNZ   EXIT110            NOT SUCCESSFUL DELETE\n         CLI   MOREFLAG,C'1'  YES-DELETE FROM ELEMENT LIST?\n         BNE   EXIT110            NO\n         CALL  ISPLINK,(TBDELETE,PXPTABLE),VL  DELETE SUCCESS -TBL UPDT\nEXIT110  BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060                DISPLAY\n*----------------------------------------------------------------------\n*        USER CHANGED THEIR MIND\n*----------------------------------------------------------------------\nZZZ110   BAL   R14,ENTRY951       CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        TRANSFER ELEMENT\n*----------------------------------------------------------------------\nENTRY130 DS    0H\n         BAL   R14,ENTRY950       CONTROL SAVE\n         BAL   R14,ENTRY920       ALLOC STANDARD FILES\n         BAL   R14,ENTRY922       ALLOC PRINT FILE\n         MVC   PXPFUNC,=CL10'TRANSFERED'  ELEMENT TRANSFERED\n         B     AAA140          GET ELT1 AND ELT2 NAMES FROM COPY RTN\n         SPACE 1\nAAA130   MVC   DDNAME,=CL8'PANEIN'\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR PANEIN)\n         OPEN  (PANEIN,(OUTPUT))\n         CLI   PXPREPL,C'Y'             REPLACE CURRENT ELEMENT\n         BNE   BBB130\n         MVI   PANECCT1+12,C'R'\nBBB130   PUT   PANEIN,PANECCT1         %TRANSFER,FL  PANELIB*,PANELIBO*\n         MVC   PANECCT2(69),PANXPARM+10 <===ELT1,ELT2\n         PUT   PANEIN,PANECCT2\n         BAL   R14,ENTRY926        CLOSE AND FREEPOOL\n         MVC   PANXPARM+2(80),INPUTCC   %INPUT,S PANEIN*\n         BAL   R14,ENTRY929             CALL PANEXEC\n         BAL   R14,ENTRY970       DEQ THE ELT\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060                DISPLAY\n*----------------------------------------------------------------------\n*        COPY ELEMENT\n*----------------------------------------------------------------------\nENTRY140 DS    0H\n         BAL   R14,ENTRY950       CONTROL SAVE\n         BAL   R14,ENTRY920       ALLOC FILES AND SETUP PANX QUAL ELTNM\n         BAL   R14,ENTRY922       ALLOC PRINT FILE\n         MVC   PXPFUNC,=CL10'COPIED'  ELEMENT COPIED\nAAA140   MVC   PANEL,=CL8'PXP0001'      FETCH/ADD/INPUT/COPY/XFER PANEL\n         MVC   CURSOR,=CL8'PXPDSN2'\n         BAL   R14,ENTRY927             DISPLAY PANEL\n         BAL   R14,ENTRY960       ENQ THE ELT\n         MVC   COPYDSN,SAVDSN      SAVE THE 'FROM' DSN\n         MVC   WORKDSN,PXPDSN2     PROCESS PANEXEC DSN\n         BAL   R14,ENTRY928             CHECK DSN\n         MVC   PANXPARM+2(5),=C'%COPY'\n         CLI   PXPREPL,C'Y'             REPLACE CURRENT ELEMENT\n         BNE   BBB140\n         MVC   PANXPARM+7(3),=C',R '\nBBB140   MVC   PANXPARM+10(34),PANECC2\n         MVI   PANXPARM+44,C','\n         MVC   GRP,PXPGRP2         SET UP QNAM\n         MVC   ELT,PXPELT2\n         MVC   STAT,PXPSTAT2\n         MVC   MODE,PXPMODE2\n         MVI   COPYSAMF,C'1'    SET FLAG -INDICATE COPY TO SAME FILE\n*IF THE SECOND DSN IS NOT THE SAME AS THE FIRST DSN ALLOC 2ND PANX FILE\n         CLC   COPYDSN,SAVDSN\n         BE    CCC140           COPY DEFAULTS TO INPUT F*\n         MVC   DSN2DD,=CL8'PANELIBO'\n         MVC   PANXPARM+45(9),=C'PANELIBO*'\n         BAL   R14,ENTRY923       ALLOC PANELIBO FILE\n         MVI   COPYSAMF,C'2'    INDICATE COPY TO DIFFERENT FILE\n         MVC   SAVDSN,COPYDSN   RESET THE DSN IF EDIT/BROWSE, COPY/XFER\n*                         INPUT, FETCH AND ADD REINVOKED ON 'S' OPTION\nCCC140   MVC   PANXPARM+54(25),PANECC2+9\n         CLI   SAVSEL,C'T'        RETURN TO TRANSFER RTN\n         BE    AAA130\n         BAL   R14,ENTRY929       LINK TO PANEXEC USING PARM\n         BAL   R14,ENTRY980       DEQ THE ELT;UPDATE TBL FOR DIRECTORY\n         BAL   R14,ENTRY951       CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        MODIFY MODE\n*----------------------------------------------------------------------\nENTRY150 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         CLI   MOREFLAG,C'1'      MODIFY MODE FROM DIRECTORY LIST?\n         BNE   AAA150                  NO\n         MVC   PANEL,=CL8'PXP0000'    INIT PANEL\n         MVC   CURSOR,=CL8'PXPNEWMD'  SET CURSOR\n         BAL   R14,ENTRY927        YES-DISPALY PRIMARY MENU\nAAA150   BAL   R14,ENTRY960       ENQ THE ELT\n         BAL   R14,ENTRY920            ALLOC FILES\n         BAL   R14,ENTRY922            ALLOC PRINT FILE\n         MVC   PANXPARM+2(6),=C'%MODE,'\n         MVC   PANXPARM+8(1),PXPNEWMD\n         MVI   PANXPARM+9,C' '\n         MVC   PANXPARM+10(34),PANECC2\n         MVC   PXPFUNC,=CL10'MODE MODIF' ELT MODE MODIFIED\n         BAL   R14,ENTRY929       LINK TO PANEXEC USING PARM\n         MVC   MODE,PXPNEWMD      FOR OPT='S', TO ADD NEW TABLE ENTRY\n         BAL   R14,ENTRY980       DELETE OLD TBL ENTRY AND ADD NEW ONE\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        PROMOTE TO PRODUCTION STATUS\n*----------------------------------------------------------------------\nENTRY160 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         BAL   R14,ENTRY960       ENQ THE ELT\n         BAL   R14,ENTRY920            ALLOC FILES\n         BAL   R14,ENTRY922            ALLOC PRINT FILE\n         MVC   PANXPARM+2(8),=C'%STATUS '\n         MVC   PANXPARM+10(34),PANECC2\n         MVC   PXPFUNC,=CL10'PROMOTED' ELT PROMOTED\n         BAL   R14,ENTRY929       LINK TO PANEXEC USING PARM\n         MVI   STAT,C'P'          FOR OPT='S', TO ADD NEW TABLE ENTRY\n         BAL   R14,ENTRY980       DELETE OLD TBL ENTRY AND ADD NEW ONE\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        INPUT A PANEXEC PROCEDURE\n*----------------------------------------------------------------------\nENTRY170 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         BAL   R14,ENTRY920            ALLOC FILES\n         MVC   SAVDSN2,SAVDSN    SAVE SAVDSN\n         MVC   PANEL,=CL8'PXP0001'      FETCH/ADD/INPUT PANEL\n         MVC   CURSOR,=CL8'PXPDSN2'\n         BAL   R14,ENTRY927             DISPLAY PANEL\n         MVC   SAVDIAG,PXPDIAG         SAVE DIAGNOSE INDICATOR\n         MVI   PXPDIAG,C'Y'            TURN ON DIAG FLAG\n         BAL   R14,ENTRY922            ALLOC PRINT FILE\n         MVC   PANXPARM+2(7),=C'%INPUT '\n         CLI   PXPELT2,C' '            IS PROC FROM PANEXEC LIB\n         BE    CCC170                  NO- GET IT FROM SEQ/PDS FILE\n         MVC   WORKDSN,PXPDSN2     PROCESS PANEXEC DSN\n         BAL   R14,ENTRY928             CHECK DSN\n         CLC   SAVDSN,FPANESRL\n         BE    AAA170      USE PANESRL DEFAULT\n         MVC   DSN2DD,=CL8'PANELIBI'\n         MVC   PANXPARM+11(9),=C'PANELIBI*'\n         BAL   R14,ENTRY923       ALLOC PANELIBI FILE TO GET INPUT PROC\nAAA170   MVC   GRP,PXPGRP2\n         MVC   ELT,PXPELT2\n         MVC   STAT,PXPSTAT2\n         MVC   MODE,PXPMODE2\n         MVC   TYPE,=CL4'CNTL'      TYPE MUST BE CNTL\n         MVC   PANXPARM+20(25),PANECC2+9      INPUT PROC NAME\n         CLC   ELT,=CL8'REPORTS'             IS PROC='REPORTS'\n         BNE   ZZZ170                              NO\n         MVC   DDNAME,=CL8'FILEA'\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR FILEA)\n         MVC   TEMPQUAL,=CL5'TEMP2'\n         MVC   DDNAME,=CL8'EZTIN'                  YES\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR EZTIN)\n         MVC   TEMPQUAL,=CL5'TEMP1'\n         B     ZZZ170\nCCC170   MVC   WORKDSN,DSN2             PROCESS SEQ/PDS FILE NAME\n         BAL   R14,ENTRY928             CHECK DSN\n         MVC   DSN2DD,=CL8'SEQIN'\n         MVC   PANXPARM+8(3),=C',S '  INDICATE SEQUENTIAL INPUT\n         MVC   PANXPARM+11(6),=C'SEQIN*'\n         CLI   MEMB,C' '\n         BE    DDD170\n         MVC   DSN2DD,=CL8'PDSIN'\n         MVC   PANXPARM+8(3),=C',P '  PDS INPUT\n         MVC   PANXPARM+11(7),=C'PDSIN*.'\n         MVC   PANXPARM+18(8),MEMB\nDDD170   BAL   R14,ENTRY923       ALLOC PDSIN/SEQIN FILE\nZZZ170   MVI   PANXPARM+45,C','\n         MVC   PANXPARM+46(54),PXPARMS\n         MVC   SAVDSN,SAVDSN2   RESET THE DSN IF EDIT/BROWSE, COPY/XFER\n*                         INPUT, FETCH AND ADD REINVOKED ON 'S' OPTION\n         BAL   R14,ENTRY929       LINK TO PANEXEC USING PARM\n         MVC   DDNAME,=CL8'EZTIN'\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS- EZTIN\n         MVC   DDNAME,=CL8'FILEA'\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS- FILEA\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         MVC   PXPDIAG,SAVDIAG     RESTORE DIAGNOSE INDICATOR\n         B     ENTRY060\n         SPACE 1\n*----------------------------------------------------------------------\n*        CHANGE DIRECTORY INFO (FALL THRU TO ENTRY190)\n*----------------------------------------------------------------------\nENTRY180 DS    0H\n         MVC   FREE,=CL5'END'     DONT FREE PANELIB IMMEDIATELY\n*----------------------------------------------------------------------\n*        DISPLAY AN PANEXEC ELEMENT LIST FOR PROCESSING\n*----------------------------------------------------------------------\nENTRY190 DS    0H\n         BAL   R14,ENTRY950       CONTROL SAVE\n         BAL   R14,ENTRY920       ALLOC STANDARD FILES\n         MVC   DDNAME,=CL8'PANEIN'\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR PANEIN)\n         CLI   SAVSEL,C'S'             IS THIS I OR CH OPTION\n         BNE   AAA190                        YES\n         CALL  ISPLINK,(CONTROL,DISPLAY,LOCK),VL    NO\n         SPFSPLAY ,'PXP030'            DISPLAY 'BUILDING DIRECTORY'\n         MVC   SPACE,SPCFILEA          GET LOTS OF SPACE FOR FILEA\n         CLI   PXPSVIEW,C'L'      LONG VIEW (PANVALET SOURCE STATS)?\n         BNE   AAA190                     NO\n         MVI   PANECCD1+10,C'X'     YES-EXTRACT XIR RECORDS\nAAA190   BAL   R14,ENTRY922       ALLOC PRINT FILE\n         MVC   DDNAME,=CL8'FILEA'\n         MVC   BLKSIZE,=H'23476'\n         MVI   BUFNO,X'1E'            BUFNO=30\n         MVC   TEMPQUAL,=CL5'TEMP2'\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR FILEA)\n         MVC   SPACE,SPACETMP       RESET SPACE, BLKSIZE, BUFNO\n         MVC   BLKSIZE,=H'21280'\n         MVI   BUFNO,X'05'\n         MVC   TEMPQUAL,=CL5'TEMP1'\n         OPEN  (PANEIN,(OUTPUT))\n         PUT   PANEIN,PANECCD1          %DIRSTAT,F  PANELIB*,FILEA*\n         MVI   PANECCD1+10,C' '         RESET\n         MVC   SAVELT,BLANKS            CLEAR SAVELT\n         XC    SPFTRT,SPFTRT            CLEAR TRT TABLE\n         MVI   SPFTRT+C'*',X'FF'\n         TRT   ELT,SPFTRT               GENERIC ELT REQUESTED\n         BZ    CCC190               NO- DO DIRSTAT FOR THIS ELTNM ONLY\n         MVC   SAVELT,ELT           YES-SAVE FOR GENERIC ELT SELECTION\n         MVC   ELT,BLANKS               BLANK OUT ELT FOR WHOLE GRP\nCCC190   MVC   SPFTRT,BLANKS   CAUSE ANY NON-BLANK/NON-DELIMIT TO STOP\n         MVI   SPFTRT+C' ',X'00'        BLANK\n         MVI   SPFTRT+C'.',X'00'        PERIOD\n         MVI   SPFTRT+C'/',X'00'        SLASH\n         MVI   SPFTRT+C';',X'00'        SEMI-COLON\n         TRT   PANECC2+9(71),SPFTRT   ANY RESTRICTIVE CRITERIA ENTERED\n         BNZ   DDD190                   YES - OK\n         MVI   PANECC2+9,C'*'             NO- DO GLOBAL DIRSTAT\n         MVC   PANECC2+10(70),BLANKS     BLANK OUT REST OF CARD\nDDD190   PUT   PANEIN,PANECC2+9         ELEMENT G.E/T;SM  OR *\n         CLI   PANECC2+9,C'*'           WAS IT A GLOBAL DIRSTAT\n         BNE   DDD191                   NO\n         MVC   QNAM-1(24),NAMESKEL YES-RESTORE DELIMITERS\nDDD191   CLI   SAVSEL,C'I'             IS THIS I OPTION\n         BE    KKK190                        YES\nEEE190   BAL   R14,ENTRY926        CLOSE AND FREEPOOL\n         MVC   PANXPARM+2(80),INPUTCC   %INPUT,S PANEIN*\n         BAL   R14,ENTRY929             CALL PANEXEC\n         CLI   SAVSEL,C'C'             IS THIS CH OPTION\n         BE    QQQ190                        YES\n         MVC   DDNAME,=CL8'PANEIN'\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS- PANEIN\n         MVC   DDNAME,=CL8'EZTIN'\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS- EZTIN\n         CLI   SAVSEL,C'I'             IS THIS I OPTION\n         BNE   FFF190                        NO\n         MVC   DDNAME,=CL8'FILEA'            YES\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS- FILEA\n         MVC   IMAC,=CL8'PXPIMACB'  NO-INVOKE THE EDIT INIT MACRO & END\n         BAL   R14,ENTRY924       EDIT THE TEMP DS  FOR BROWSING\n         BAL   R14,ENTRY930       BROWSE TEMP DS USING CUSTOMIZE PANEL\n         MVC   DDNAME,=CL8'PANPRINT'\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS- PANPRINT\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060                      RETURN\nFFF190   MVC   SCRHORZ,=CL8'PASSTHRU'  NO- TURN ON HORZ SCROLLING\n         BAL   R14,ENTRY910\n         SPFVREPL (MSG,8)      UPDATE MSG IN FUNCTION POOL FOR PXP0100\n         LA    R1,SAVELT       NO-  PASS GENERIC ELT NAME\n         LA    R2,EPA0100           ELT PROCESSOR\n         LA    R3,EPA0100+4\n         BAL   R14,ENTRY900\n         ST    R15,ST900       SAVE R15 TILL AFTER RESET SCROLLING\n         MVC   SCRHORZ,BLANKS\n         BAL   R14,ENTRY910\n         MVI   MOREFLAG,C'0'      TURN OFF MORE CMDS FLAG\n         L     R15,ST900       RC FROM ELT PROCESSOR (PXP0100)\n         C     R15,=F'8'       CHECK PXP0100 RC:0=LAST (ONLY) LINE CMD\n*                                 4=ADDITIONAL LINE CMDS,8=END\n         BL    GGG190          GO TURN ON MORE FLAG, DO FUNCTION\n*        SPFVCOPY (ZTDSELS,4)   (TO PROCESS LINES AFTER END KEY)\n*        CLC   ZTDSELS,=F'0'\n*        BH    GGG190              MUST STILL PROCESS SOME LINE CMDS\n***      MVC   MSG,=CL8'PXP000'        BLANK MESSAGE\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060                  RETURN\n         SPACE 1\nGGG190   MVI   MOREFLAG,C'1'   TURN ON MORE CMDS FLAG\n         MVC   PANXPARM+2(100),BLANKS\n         SPFVCOPY (PXPSEL,2,PXPTABLE,8,PXPQNAM,25)\n         CLI   PXPSEL,C'S'\n         BE    ENTRYERR           DISALLOW NESTED TABLE DISPLAYS\n         MVC   ZCMD(2),PXPSEL      PLACE SEL CODE IN ZMD\n         MVC   QNAM(25),PXPQNAM   PLACE QUALIF NAME IN PANECC2\n         MVC   PXPGRP,GRP       PLACE GRP IN DIALOG VARIABLE\n         MVC   PXPELT,ELT       PLACE ELT IN DIALOG VARIABLE\n         MVC   PXPTYPE,TYPE     PLACE TYPE IN DIALOG VARIABLE\n         MVC   PXPSTAT,STAT     PLACE STAT IN DIALOG VARIABLE\n         MVC   PXPMODE,MODE     PLACE MODE IN DIALOG VARIABLE\n         CALL  ISPLINK,(CONTROL,NONDISPL,ENTER),VL\n         BAL   R14,ENTRY950     SAVE DIRECTORY ENVIRONMENT\n*        MVC   PANEL,=CL8'PXP0000'    MAIN PANEL ID\n         MVC   CURSOR,BLANKS           BLANK CURSOR\n         MVC   MSG,=CL8'PXP000'        BLANK OUT MSG\n         MVI   ERRFLAG,C'1'       PRESET ERR FLAG\n         BAL   R14,ENTRY927 SIMULATE DISPLAY OF MAIN PANEL FOR ERR PROC\n         MVI   ERRFLAG,C'0'  IF RETURNS HERE THEN NO ERROR.\n         BAL   R14,ENTRY951 RESTORE DIRECTORY ENVIRONMENT\n         B     BBB060               GO PROCESS\n*----------------------------------------------------------------------\n*        LIBRARY INFORMATION\n*----------------------------------------------------------------------\nKKK190   EQU   *\n         MVC   TEMPQUAL,=CL5'TEMP3'\n         MVC   DDNAME,=CL8'EZTIN'\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR EZTIN)\n         MVC   DDNAME,=CL8'PANPRINT'\n         MVC   TEMPQUAL,=CL5'TEMP4'\n         MVC   SPFDISP(4),=CL4'(MOD'  MUST MOD ON TO PANPRINT\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR PANPRINT)\n         MVC   SPFDISP(4),=CL4'(NEW'   RESET\n         MVC   TEMPQUAL,=CL5'TEMP1'    RESET\n         PUT   PANEIN,PANECCI3    PUT PGM PE112T IN  EZTIN (LIB INFO)\n         PUT   PANEIN,PANECCI4    EXEC EASYTRIEVE PGM PANETREV\n         B     EEE190\n*----------------------------------------------------------------------\n*        CHANGE DIRECTORY INFO\n*----------------------------------------------------------------------\nQQQ190   EQU   *\n         MVC   PXPFUNC,=CL10'CHANGED'\n         LA    R1,PANECC2      PASS FULLY QUALIFIED NAME AS PARM\n         LA    R2,EPA0004      CHANGE PROCESSOR\n         LA    R3,EPA0004+4\n         BAL   R14,ENTRY900\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        RENAME AN ELEMENT\n*----------------------------------------------------------------------\nENTRY200 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         CLI   MOREFLAG,C'1'           RENAME FROM DIRECTORY LIST?\n         BNE   AAA200                  NO\n         MVC   PANEL,=CL8'PXP0000'    INIT PANEL\n         MVC   CURSOR,=CL8'PXPNEWNM'  SET CURSOR\n         BAL   R14,ENTRY927            DISPALY PRIMARY MENU\nAAA200   BAL   R14,ENTRY960       ENQ THE ELT\n         BAL   R14,ENTRY920            ALLOC FILES\n         BAL   R14,ENTRY922            ALLOC PRINT FILE\n         MVC   PANXPARM+2(8),=C'%RENAME '\n         MVC   PANXPARM+10(34),PANECC2\n         MVI   PANXPARM+44,C','\n         MVC   PANXPARM+45(8),PXPNEWGP\n         MVI   PANXPARM+53,C'.'\n         MVC   PANXPARM+54(8),PXPNEWNM\n         MVC   PXPFUNC,=CL10'RENAMED' ELT RENAME\n         BAL   R14,ENTRY929       LINK TO PANEXEC USING PARM\n         CLC   PXPNEWGP,BLANKS         WAS A NEW GRP SPECIFIED?\n         BE    WWW200                             NO\n         MVC   GRP,PXPNEWGP                      YES\nWWW200   CLC   PXPNEWNM,BLANKS         WAS A NEW NAME SPECIFIED?\n         BE    XXX200                             NO\n         MVC   ELT,PXPNEWNM                      YES\nXXX200   BAL   R14,ENTRY980   DELETE OLD TBL ENTRY & ADD NEW ONE\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        FETCH AN ELEMENT\n*----------------------------------------------------------------------\nENTRY210 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         BAL   R14,ENTRY920            ALLOC FILES - MOVE IN PANX DSN\n         BAL   R14,ENTRY922            ALLOC PRINT FILE\n         MVC   PXPFUNC,=CL10'FETCHED'   ELT FETCHED\n         MVC   SAVDSN2,SAVDSN       SAVE SAVDSN\n         MVC   PANEL,=CL8'PXP0001'      FETCH/ADD/INPUT PANEL\n         MVC   CURSOR,=CL8'DSN2'\n         BAL   R14,ENTRY927             DISPLAY PANEL\n         BAL   R14,ENTRY960             ENQ THE ELT\n         MVC   WORKDSN,DSN2             PROCESS SEQ/PDS FILE NAME\n         BAL   R14,ENTRY928             CHECK DSN\n         MVC   PANXPARM+2(6),=C'%FETCH'\n         CLI   PXPEXPND,C'Y'             EXPAND EMBEDDED INCLUDES\n         BNE   AAA210\n         MVC   PANXPARM+8(3),=C',E '\nAAA210   MVC   PANXPARM+11(34),PANECC2\n         MVI   PANXPARM+45,C','\n         MVC   DSN2DD,=CL8'SEQOUT'\n         MVC   PANXPARM+46(7),=C'SEQOUT*'\n         CLI   MEMB,C' '                NO MEMBER NAME - SEQOUT DD\n         BE    BBB210\n         MVC   DSN2DD,=CL8'PDSOUT'\n         MVC   PANXPARM+46(8),=C'PDSOUT*.'\n         MVC   PANXPARM+54(8),MEMB\nBBB210   BAL   R14,ENTRY923       ALLOC PDSOUT/SEQOUT FILE\n         MVC   SAVDSN,SAVDSN2   RESET THE DSN IF EDIT/BROWSE, COPY/XFER\n*                         INPUT, FETCH AND ADD REINVOKED ON 'S' OPTION\n         BAL   R14,ENTRY929       LINK TO PANEXEC USING PARM\n         BAL   R14,ENTRY970             DEQ THE ELT\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        ADD ELEMENT\n*----------------------------------------------------------------------\nENTRY220 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         BAL   R14,ENTRY920            ALLOC FILES - MOVE IN PANX DSN\n         BAL   R14,ENTRY922            ALLOC PRINT FILE\n         MVC   PXPFUNC,=CL10'ADDED'   ELT ADDED\n         MVC   PANEL,=CL8'PXP0001'      FETCH/ADD/INPUT PANEL\n         MVC   CURSOR,=CL8'DSN2'\n         BAL   R14,ENTRY927             DISPLAY PANEL\n         MVC   WORKDSN,DSN2             PROCESS SEQ/PDS FILE NAME\n         BAL   R14,ENTRY928             CHECK DSN\n         MVC   PANXPARM+2(4),=C'%ADD'\n         CLI   PXPREPL,C'Y'             REPLACE CURRENT ELEMENT\n         BNE   AAA220\n         MVC   PANXPARM+6(3),=C',R '\nAAA220   MVC   PANXPARM+9(34),PANECC2\n         MVI   PANXPARM+43,C','\n         MVC   DSN2DD,=CL8'SEQIN'\n         MVC   PANXPARM+44(6),=C'SEQIN*'\n         CLI   MEMB,C' '                NO MEMBER NAME - SEQIN DD\n         BE    BBB220\n         MVC   DSN2DD,=CL8'PDSIN'\n         MVC   PANXPARM+44(7),=C'PDSIN*.'\n         MVC   PANXPARM+51(8),MEMB\nBBB220   BAL   R14,ENTRY923       ALLOC PDSIN/SEQIN FILE\n         BAL   R14,ENTRY929       LINK TO PANEXEC USING PARM\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        PRINT\n*----------------------------------------------------------------------\nENTRY270 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         BAL   R14,ENTRY920            ALLOC FILES\n         SPFALLOC A,DD=PANPRINT,SYSOUT=PXPSSOUT,FREE='CLOSE'\n         MVC   PANXPARM+2(9),=C'%PRINT,D '\n         CLI   TYPE,C'C'     IS TYPE=CNTL  (PXPTYPE WAS MOVED TO TYPE)\n         BNE   AAA270             NO\n         MVC   PANXPARM+8(2),=C'  ' YS-BLANK OUT ,D\nAAA270   MVC   PANXPARM+11(34),PANECC2\n         MVC   PXPFUNC,=CL10'PRINTED' ELT PRINTED\n         BAL   R14,ENTRY929       LINK TO PANEXEC USING PARM\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        COMPILE/LINK PROCEDURE\n*----------------------------------------------------------------------\nENTRY290 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         LA    R2,EPA0005           CHANGE ELT\n         LA    R3,EPA0005+4\n         BAL   R14,ENTRY900\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        LIBRARY MAINTENANCE\n*----------------------------------------------------------------------\nENTRY300 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         BAL   R14,ENTRY920        ALLOC FILES - FOR CREATE & FILEOPT\n         BAL   R14,ENTRY922        ALLOC PRINT FILE\n         CLI   ZUSER,C'C'          IS THIS TECH SERV OR OPERATIONS\n         BNE   ZZZ300              NO\n         LA    R2,EPA0007       YES-LIBRARY MAINTENANCE\n         LA    R3,EPA0007+4\n         BAL   R14,ENTRY900\nEXIT300  BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\nZZZ300   MVC   MSG,=CL8'PXP007'        UNAUTHORIZED USER\n         B     EXIT300\n*----------------------------------------------------------------------\n*        ZAP\n*----------------------------------------------------------------------\nENTRY310 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         BAL   R14,ENTRY920            ALLOC FILES - MOVE IN PANX DSN\n         BAL   R14,ENTRY922            ALLOC PRINT FILE\n         MVC   DDNAME,=CL8'PANEIN'\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR PANEIN)\n         MVC   DDNAME,=CL8'PANPRINT'\n         MVC   TEMPQUAL,=CL5'TEMP3' (DONT USE TEMP2-IN USE BY DIRECTRY)\n         BAL   R14,ENTRY921       ALLOC A TEMPORARY FILE (FOR PANPRINT)\n         LA    R1,PANECC2      PASS FULLY QUALIFIED NAME AS PARM\n         LA    R2,EPA0009           ZAP PROCESSING\n         LA    R3,EPA0009+4\n         BAL   R14,ENTRY900\n         BAL   R14,ENTRY930       BROWSE TEMP DS USING CUSTOMIZE PANEL\n         MVC   DDNAME,=CL8'PANPRINT'\n         BAL   R14,ENTRY925       DELETE AND UNALLOC TEMP DS- PANPRINT\n         MVC   TEMPQUAL,=CL5'TEMP1'\n         BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        CLEAR PANEL FIELDS - 'X' OPTION\n*----------------------------------------------------------------------\nENTRY320 DS    0H\n         MVC   PXPGRP,BLANKS\n         MVC   PXPELT,BLANKS\n         MVC   PXPTYPE,BLANKS\n         MVC   PXPSTAT,BLANKS\n         MVC   PXPMODE,BLANKS\n         MVI   ZCMD,C'S'          MOVE IN 'S' OPTION\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        GLOBAL FACILITIES\n*----------------------------------------------------------------------\nENTRY330 DS    0H\n         BAL   R14,ENTRY950            CONTROL SAVE\n         CLI   ZUSER,C'C'          IS THIS TECH SERV OR OPERATIONS\n         BNE   ZZZ330              NO\n         LA    R2,EPA0010       YES-LIBRARY MAINTENANCE\n         LA    R3,EPA0010+4\n         BAL   R14,ENTRY900\nEXIT330  BAL   R14,ENTRY951            CONTROL RESTORE\n         B     ENTRY060\nZZZ330   MVC   MSG,=CL8'PXP007'        UNAUTHORIZED USER\n         B     EXIT330\n*----------------------------------------------------------------------\n*        END OF JOB\n*----------------------------------------------------------------------\nGOBACK   LA    R3,LOADLIST             SUB-ROUTINE LIST\nDELLOOP  ICM   R15,15,0(R3)            DID WE LOAD THIS ONE ?\n         BZ    GOAAA                   NO - OK\n         LA    R1,4(R3)                YES - POINT TO NAME\n         DELETE  EPLOC=(R1)            DELETE IT\nGOAAA    EQU   *\n         LA    R3,12(R3)               BUMP TO NEXT SUB-ROUTINE\n         CLI   0(R3),X'FF'             END OF SUBS ?\n         BNE   DELLOOP                 NO - CHECK ALL\n         LA    R15,0                   SET ZERO\n         SPFEXIT ,                     SO LONG\n*----------------------------------------------------------------------\n*        INVOKE PROCESSING PROGRAM\n*----------------------------------------------------------------------\nENTRY900 DS    0H\n         ST    R14,ST900               SAVE R14\n         ST    R1,ST1                  SAVE R1\n         ICM   R15,15,0(R2)            PICK UP EPA FOR THIS SUB-ROUTINE\n         BNZ   AAA900                  WE GOT IT\n         LOAD  EPLOC=(R3)              LOAD IT, FIRST TIME WE USED IT\n         LR    R15,R0                  COPY EPA TO R15\n         ST    R15,0(R2)               SAVE EPA FOR NEXT TIME\nAAA900   EQU   *\n         L     R1,ST1                  PICK UP R1\n         BALR  R14,R15                 BRANCH TO SUB-ROUTINE\n         L     R14,ST900               PICK UP R14\n         BR    R14                     RETURN TO WHERE WE CAME FROM\nST900    DC    F'-1'\nST1      DC    F'0'\n*----------------------------------------------------------------------\n*        SET PF KEYS FOR SCROLLING\n*----------------------------------------------------------------------\nENTRY910 DS    0H\n         ST    R14,ST910          SAVE R14\n         SPFVPUT (SCRHORZ),SHARED\n         L     R14,ST910               PICK UP R14\n         BR    R14                     RETURN TO WHERE WE CAME FROM\nST910    DC    F'-1'\n*----------------------------------------------------------------------\n*        ALLOC COMMON FILES - PANESRL, PANELIB AND PANPRINT AND\n*                MOVE IN PANEXEC ELEMENT NAME\n*----------------------------------------------------------------------\nENTRY920 DS    0H\n         ST    R14,ST920          SAVE R14\n         SPFALLOC A,DD='PANESRL',DSN=FPANESRL,DISP='SHR'\n         MVC   PANELIB,=CL8'PANELIB'  INIT\n         MVC   PANELIB0,PANELIB       SET DDNAMES FOR DEFAULT PANX LIB\n         MVC   PANELIB1,PANELIB       SET DDNAMES FOR DELETE\n         MVC   PANELIB2,PANELIB                       TRANSFER\n         MVC   PANELIB3,PANELIB                       DIRSTAT\n         CLC   SAVDSN,FPANESRL    IS INPUT PANEXEC LIB=HRA.PANESRL\n         BNE   AAA920                 NO\n         MVC   PANELIB,=CL8'PANESRL'  YES\n         MVC   PANELIB0,PANELIB       SET DDNAMES FOR DEFAULT PANX LIB\n         MVC   PANELIB1,PANELIB       SET DDNAMES FOR DELETE\n         MVC   PANELIB2,PANELIB                       TRANSFER\n         MVC   PANELIB3,PANELIB                       DIRSTAT\n         B     BBB920                 SKIP THE ALLOCATION\nAAA920   SPFALLOC U,DD=PANELIB\n         SPFALLOC A,DD=PANELIB,DSN=SAVDSN,DISP='SHR',VOL=PXPVOL,       +\n               FREE=FREE\n         MVC   FREE,=CL5'CLOSE'\nBBB920   SPFALLOC U,DD=PANPRINT          UNALLOC PANPRINT -SEE ENTRY922\n         CLI   MOREFLAG,C'1'     ARE WE IN MIDST OF ELT SEL;OPT='S'\n         BE    EXIT920           YES- WE'LL GET NAME FROM PXPQNAM\n         MVC   GRP,PXPGRP\n         MVC   ELT,PXPELT\n         MVC   TYPE,PXPTYPE\n         MVC   STAT,PXPSTAT\n         MVC   MODE,PXPMODE\nEXIT920  L     R14,ST920          RESTORE\n         BR    R14\nST920    DC    F'-1'\n*----------------------------------------------------------------------\n*        ALLOC A TEMP FILE\n*----------------------------------------------------------------------\nENTRY921 DS    0H\n         ST    R14,ST920          SAVE R14\n         SPFTEMP   ,TEMPOUT,TEMPQUAL\n         SPFALLOC U,DD=DDNAME\n         SPFALLOC A,DD=DDNAME,DSN=TEMPOUT,DISP=SPFDISP,UNIT='3380',    +\n               SPACE=SPACE,LRECL=LRECL,BLKSIZE=BLKSIZE,BUFNO=BUFNO  <==\n         L     R14,ST920          RESTORE\n         BR    R14\n*----------------------------------------------------------------------\n*        ALLOC A PRINT FILE\n*----------------------------------------------------------------------\nENTRY922 DS    0H\n         ST    R14,ST920          SAVE R14\n         MVC   DUMMY,YES\n         MVC   TERM,NO         DONT DISPLAY PANEXEC MSGS-ONLY SPF MSGS\n         CLI   PXPDIAG,C'Y'       ARE DIAGNOSTICS REQUESTED\n         BNE   AAA922                    NO\n         MVC   DUMMY,NO                  YES\n         MVC   TERM,=CL2'TS'      DISPLAY PANEXEC MSGS\nAAA922   SPFALLOC A,DD=PANPRINT,TERM=TERM,FREE='CLOSE',DUMMY=DUMMY\n         L     R14,ST920          RESTORE\n         BR    R14\nDUMMY    DC    CL3'NO'     TURN OFF DUMMY  ('YES' TO TURN ON DUMMY)\nTERM     DC    CL2'TS'     TERM=TS         ('NO' TO TURN OFF TERM=TS)\n*----------------------------------------------------------------------\n*        ALLOC SEQIN/SEQOUT/PDSIN/PDSOUT FILES FOR FETCH/ADD/INPUT\n*        ALLOC PANELIBO FILE FOR COPY/TRANSFER AND FORM 'TO' PANX NAME\n*----------------------------------------------------------------------\nENTRY923 DS    0H\n         ST    R14,ST920          SAVE R14\n        SPFALLOC A,DD=DSN2DD,DSN=SAVDSN,DISP=DISP,VOL=VOL2,FREE=FREE\n         MVC   FREE,=CL5'CLOSE'\n         L     R14,ST920          RESTORE\n         BR    R14\nFREE     DC    CL5'CLOSE'\n*----------------------------------------------------------------------\n*        EDIT THE TEMP DS\n*----------------------------------------------------------------------\nENTRY924 DS    0H\n         ST    R14,ST920          SAVE R14\n         SPFEDIT TEMPOUT,,,PANEL,IMAC\n         L     R14,ST920          RESTORE\n         BR    R14\n*----------------------------------------------------------------------\n*        DELETE AND UNALLOC DS\n*----------------------------------------------------------------------\nENTRY925 DS    0H\n         ST    R14,ST920          SAVE R14\n         SPFALLOC U,DD=DDNAME,DISP='DELETE'  DEL & UNALLOC TEMP DS\n         L     R14,ST920          RESTORE\n         BR    R14\n*----------------------------------------------------------------------\n*        CLOSE  AND FREEPOOL PANEIN\n*----------------------------------------------------------------------\nENTRY926 DS    0H\n         ST    R14,ST920          SAVE R14\n         CLOSE (PANEIN)\n         FREEPOOL PANEIN\n         L     R14,ST920          RESTORE\n         BR    R14\n*----------------------------------------------------------------------\n*        DISPLAY PANEL\n*----------------------------------------------------------------------\nENTRY927 DS    0H\n         ST    R14,ST920          SAVE R14\n         SPFSPLAY PANEL,MSG,CURSOR           ,,ENTRY060\n         LTR   R15,R15                       .\n         BZ    AAA927                        .\n         BAL   R14,ENTRY951         RESTORE ENVIRON .\n         B     ENTRY060                      .\nAAA927   MVC   CURSOR,BLANKS\n         L     R14,ST920          RESTORE\n         BR    R14\n*----------------------------------------------------------------------\n*        PROCESS DSN\n*----------------------------------------------------------------------\nENTRY928 DS    0H\n         ST    R14,ST920          SAVE R14\n         CLI   WORKDSN,X'7D'           NAME IN QUOTES ?\n         BE    AAA928                  YES - REMOVE QUOTES\n         MVC   SAVDSN,BLANKS         NO-CLEAR WORK FIELD\n         MVC   SAVDSN(8),ZPREFIX       MOVE USER PROFIX\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT+C' ',X'FF'       SET TO BLANK\n         TRT   SAVDSN,SPFTRT           FIND END OF PREFIX\n         MVI   0(R1),C'.'              ADD A DOT\n         MVC   1(35,R1),WORKDSN        MOVE REST OF DSN\n         B     BBB928\nAAA928   MVC   SAVDSN(43),WORKDSN+1    SKIP QUOTE\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT+C' ',X'FF'       SET FOR BLANK\n         MVI   SPFTRT+X'7D',X'FF'      SET FOR QUOTE\n         TRT   SAVDSN,SPFTRT           FIND END OF DSN\n         BZ    BBB928                  FULL 44 BYTE NAME\n         MVI   0(R1),C' '              REMOVE QUOTE\nBBB928   L     R14,ST920          RESTORE\n         BR    R14\n*----------------------------------------------------------------------\n*        LINK TO PANEXEC\n*----------------------------------------------------------------------\nENTRY929 DS    0H\n         ST    R14,ST929          SAVE R14\n         LA    R1,PARMPTR      ADDR OF PANEXEC PARM\n         LA    R2,EPA0999           PANEXEC PROCESSOR\n         LA    R3,EPA0999+4\n         BAL   R14,ENTRY900\n*        LINK  EP=PANEXEC,PARAM=(PANXPARM),VL=1  EXEC PANEXEC WITH PARM\n         CLI   PXPFUNC,C' '       IS THERE A MSG TO WRITE\n         BE    EXIT929            NO\n         LTR   R15,R15            RC FROM PANEXEC\n         BNZ   ZZZ929            NG\n         MVC   MSG,=CL8'PXP008'   FUNCTION SUCCESSFUL\n         CLI   PXPLOG,C'Y'        LOGGING REQUESTED\n         BNE   EXIT929            NO\n         CALL  ISPLINK,(LOG,MSG),VL  YES\nEXIT929  L     R14,ST929          RESTORE\n         BR    R14\nZZZ929   MVC   MSG,=CL8'PXP009' FUNCTION NOT SUCCESSFUL\n         B     EXIT929\nST929    DC    F'-1'\nPARMPTR  DC    X'80',AL3(PANXPARM)\n*----------------------------------------------------------------------\n*      BROWSE THE TEMP DS\n*----------------------------------------------------------------------\nENTRY930 DS    0H\n         ST    R14,ST920          SAVE R14\n         MVC   PANEL,=CL8'PXPBROBF'   USE CUSTOMIZED BROWSE PANEL\n         SPFBRWSE  TEMPOUT,,,PANEL     BROWSE TEMP DS USING CUST PANEL\n         L     R14,ST920          RESTORE\n         BR    R14\n*----------------------------------------------------------------------\n*        SELECT CONTROL SAVE\n*----------------------------------------------------------------------\nENTRY950 DS    0H\n         ST    R14,ST950               SAVE R14\n         CALL  ISPLINK,(CONTROL,DISPLAY,SAVE),VL\n         L     R14,ST950\n         BR    R14\nST950    DC    F'-1'\n*----------------------------------------------------------------------\n*        SELECT CONTROL RESTORE\n*----------------------------------------------------------------------\nENTRY951 DS    0H\n         ST    R14,ST951               SAVE R14\n         CALL  ISPLINK,(CONTROL,DISPLAY,RESTORE),VL\n         L     R14,ST951\n         BR    R14\nST951    DC    F'-1'\n*----------------------------------------------------------------------\n*        ENQ ON THE ELEMENT\n*----------------------------------------------------------------------\nENTRY960 DS    0H\n         ST    R14,ST960\n         MVC   ENQDSN,SAVDSN\n         MVC   ENQQNAM,QNAM\n         SPFENQ SPFPANX,,ENQDSN,ENQQNAM  (DSN,MBR)\n         LTR   R15,R15\n         BZ    EXIT960\n         MVC   MSG,=CL8'PXP006'      ELEMENT IN USE\n         MVC   PANEL,BLANKS\n         B     ENTRY060    (TO DISPLAY MSG)\nEXIT960  L     R14,ST960\n         BR    R14\nST960    DC    F'-1'\n*----------------------------------------------------------------------\n*        DEQ ON THE ELEMENT\n*----------------------------------------------------------------------\nENTRY970 DS    0H\n         ST    R14,ST970\n         SPFDEQ SPFPANX,,ENQDSN,ENQQNAM     DSN MBR\n         L     R14,ST970\n         BR    R14\nST970    DC    F'-1'\n*----------------------------------------------------------------------\n*        DELETE OLD TBL ENTRY & ADD NEW ONE (FOR MODE, PROMOTE, RENAME)\n*----------------------------------------------------------------------\nENTRY980 DS    0H\n         ST    R14,ST980\n         ST    R15,SPFRC                SAVE THE RC\n         BAL   R14,ENTRY970       DEQ THE ELT\n         ICM   R15,15,SPFRC       RETRIEVE THE PANEXEC RC\n         BNZ   EXIT980            NOT SUCCESSFUL (MODE,RENAME,PROMOTE)\n         CLI   MOREFLAG,C'1'  YES-DELETE FROM ELEMENT LIST?\n         BNE   EXIT980            NO\n         CLI   COPYSAMF,C'1'  YES-COPY FUNCTION TO SAME FILE?\n         BE    ZZZ980             YES - SKIP DELETE\n         BH    EXIT980            COPY TO DIFFERENT FILE (FLAG=2)\n         CALL  ISPLINK,(TBDELETE,PXPTABLE),VL  YES-CH SUCCES-DELETE ELT\nZZZ980   MVC   PXPQNAM,QNAM            YES - INSERT NEW TBL ENTRY\n         MVC   PXPSEL,BLANKS\n         SPFVREPL (PXPQNAM,25,PXPSEL,2)\n         CALL  ISPLINK,(TBADD,PXPTABLE,,ORDER),VL\nEXIT980  MVI   COPYSAMF,C'0'           RESET FLAG\n         L     R14,ST980\n         BR    R14\nST980    DC    F'-1'\n*----------------------------------------------------------------------\n*        STORAGE AREAS\n*----------------------------------------------------------------------\nRC       DC    F'0'\nMINUS1   DC    F'-1'\nSAVDIAG  DS    CL1\nMOREFLAG DC    C'0'        MORE COMMANDS FLAG- SET BY RC OF PXP0100\nCOPYSAMF DC    C'0'  FLAG TO UPDATE TBL ON COPY FUNCTION\n*  0=NOT COPY FUNCTION, 1=COPY TO SAME FILE, 2=COPY TO DIFFERENT FILE\nOLDDSN   DC    CL44' '\nTEMPOUT  DC    CL44' '          TEMPORARY DSN\nPANECC1  DS    0CL80\n         DC    CL13'%REMOVE,FL   '  FIRST REMOVE CONTROL STAT\nPANELIB1 DS    CL8         PANELIB DDNAME (OR PANESRL FOR HRA.PANESRL)\n         DC    CL2'*,'\nPRTECTDD DS    CL8              PROTECT DDNAME FOR REMOVE\n         DC    CL49'* '\n         SPACE 1\nNAMESKEL DC    C'*',CL8' ',C'.',CL8' ',C'/',CL4' ',C';'\nPANECC2  DS    0CL80              SUBCOMMAND CONTROL CARD\nPANELIB0 DC    CL8' '       DEFAULT PANELIB\n         DC    C'*'\nQNAM     DS   0CL25\nGRP      DC    CL8' '\n         DC    C'.'\nELT      DC    CL8' '\n         DC    C'/'\nTYPE     DC    CL4' '\n         DC    C';'\nSTAT     DC    CL1' '\nMODE     DC    CL1' '\n         DC    CL55' '    EXTRA 9 BLANKS FOR   PUT PANEIN,PANECC2+9\n         SPACE 1\nPANECCT1 DC    CL14'%TRANSFER,FL  '\nPANELIB2 DS    CL8         PANELIB DDNAME (OR PANESRL FOR HRA.PANESRL)\n         DC    CL58'*,PANELIBO*'\n         SPACE 1\nPANECCT2 DC    CL80' '\nPANECCD1 DC    CL13'%DIRSTAT,F   '\nPANELIB3 DS    CL8         PANELIB DDNAME (OR PANESRL FOR HRA.PANESRL)\n         DC    CL59'*,FILEA*'\n         SPACE 1\nINPUTCC  DC    CL80'%INPUT,S PANEIN*'\n         SPACE 1\nPANXPARM DC    H'100'               PANEIN PARM\n         DC    CL100' '\n         SPACE 1\nPANECCI3 DC    CL80'%FETCH PANESRL*$EZTLIB.PE112T/CNTL;PA,EZTIN*'\nPANECCI4 DC    CL80'%EXEC  PANESRL*$OS.PANETREV/;P'\n         SPACE 1\nPANECCE1 DC    CL80'%ADD,D '\n         SPACE 1\nPANEIN   DCB   DDNAME=PANEIN,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80\n*              BLKSIZE=800\nDDNAME   DS    CL8        USED TO ALLOC TEMP FILES (PANEIN,PANPRINT)\nDSN2DD   DS    CL8          PDSOUT/SEQOUT/PDSIN/SEQIN/PANELIBO DNAME\nPANELIB  DC    CL8'PANELIB'    INPUT PANEXEC LIBRARY\nPANPRINT DC    CL8'PANPRINT'\nIMAC     DC    CL8' '            EDIT INITIAL MACRO\nTEMPQUAL DC    CL5'TEMP1'\nSAVSEL   DC    CL2' '\nSAVELT   DS    CL8\nSPFDISP  DC    CL20'(NEW,CATLG,DELETE)'\nSPACE    DC    CL20'(TRK,(02,03),RLSE)'\nSPACETMP DC    CL20'(TRK,(02,03),RLSE)'\nSPCFILEA DC    CL20'(CYL,(5,15),RLSE)'\nLRECL    DC    H'0'         LRECL SET TO 80 FOR EDIT\nBLKSIZE  DC    H'21280'\nBUFNO    DC    FL1'5'\nFPANESRL DC    CL44'HRA.PANESRL'\nSAVDSN   DC    CL44' '\nSAVDSN2  DC    CL44' '   SAVDSN FOR REINVOKING EDIT/BROWSE\nWORKDSN  DC    CL44' '\nCOPYDSN  DS    CL44     FOR %COPY, IF FROM AND TO PANX LIB ARE DIFFER\nENQDSN   DS    CL44     FOR DEQ (TO USE SAME DSN AS ENQ)\nENQQNAM  DS    CL25     FOR DEQ (TO USE SAME QNAM AS ENQ)\nSPFPANX  DC    CL8'SPFPANX'  QNAME FOR ENQ/DEQ\nERRFLAG  DC    CL1'0'   ERROR FLAG-CHKED WHEN MULTIPLE CMDS ON 'S' OPT\n*              0=NO ERRORS ON NONDISPL PRIMARY MENU,1=ERRORS\n*OREAD   DC    CL8'NOREAD'   FOR TBBOTTOM AND TBSKIP SERVICES\n         DC    X'FF'\n*----------------------------------------------------------------------\nLOADLIST DS    0F\nEPA0004  DC    F'0',CL8'PXP0004'       CHANGE\nEPA0005  DC    F'0',CL8'PXP0005'       COMPILE/LINK\nEPA0007  DC    F'0',CL8'PXP0007'       LIBRARY MAINTENANCE\nEPA0009  DC    F'0',CL8'PXP0009'       ZAP\nEPA0010  DC    F'0',CL8'PXP0010'       GLOBAL FACILITIES\nEPA0100  DC    F'0',CL8'PXP0100'       ELT PROCESSOR\nEPA0999  DC    F'0',CL8'PANEXEC'       PANEXEC PROCESSOR\n         DC    F'-1'                   END FLG\n*----------------------------------------------------------------------\n*        SELECT TABLE CODE\nSELTABLE DS    0F\nYZA      DC    C'  ',H'0',A(ENTRY220) ADD\nYZB      DC    C'  ',H'0',A(ENTRY100) BROWSE\nYZC      DC    C'  ',H'0',A(ENTRY140) COPY\nYZCH     DC    C'  ',H'0',A(ENTRY180) CHANGE\nYZCL     DC    C'  ',H'0',A(ENTRY290) COMPILE/LINK\nYZD      DC    C'  ',H'0',A(ENTRY110) DELETE\nYZE      DC    C'  ',H'0',A(ENTRY100) EDIT\nYZF      DC    C'  ',H'0',A(ENTRY210) FETCH\nYZG      DC    C'  ',H'0',A(ENTRY330) PANEXEC GLOBAL FACILITIES\nYZI      DC    C'  ',H'0',A(ENTRY190) LIBRARY INFO\nYZIN     DC    C'  ',H'0',A(ENTRY170) INPUT PROC\nYZL      DC    C'  ',H'0',A(ENTRY300) LIBRARY MAINTENAC\nYZM      DC    C'  ',H'0',A(ENTRY150) MODIFY MODE\nYZP      DC    C'  ',H'0',A(ENTRY270) PRINT\nYZPM     DC    C'  ',H'0',A(ENTRY160) PROMOTE\nYZR      DC    C'  ',H'0',A(ENTRY200) RENAME\nYZS      DC    C'  ',H'0',A(ENTRY190) DISPLAY DIRECTORY\nYZT      DC    C'  ',H'0',A(ENTRY130) TRANSFER\nYZX      DC    C'  ',H'0',A(ENTRY320) CLEAR PANEL FIELDS\nYZZ      DC    C'  ',H'0',A(ENTRY310) ZAP\n         DC    F'-1'\n*----------------------------------------------------------------------\nSELDSECT DSECT\nSELOPT   DS    CL2\n         DS    H\nSELADDR  DS    F\nSELEND   EQU   *\n*----------------------------------------------------------------------\nPXP0000  CSECT\nSELLL    EQU   SELEND-SELOPT\nSPFMACS  SPFCMDS TABLES=YES,DSCB1=NO\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PXP0004": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1b\\x00\\x00\\x00\\x890o\\x00\\x90\\x00O\\tA\\x00\\xa3\\x00\\x8d\\x00\\x00\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@'", "ispf": {"version": "01.27", "flags": 0, "createdate": "1989-11-02T00:00:00", "modifydate": "1990-01-04T09:41:00", "lines": 163, "newlines": 141, "modlines": 0, "user": "CN03MQK"}, "text": "*----------------------------------------------------------------------\n*        DISPLAY AND CHANGE THE DIRECTORY OF AN ELEMENT\n*----------------------------------------------------------------------\n         PRINT NOGEN\nPXP0004  #SLC R12,R11\n         LR   R3,R1      SAVE PARM -FULLY QUALIFIED PANX NAME\n*----------------------------------------------------------------------\n*        DEFINE VARIABLES\n*----------------------------------------------------------------------\n         SPFVDEF 2,(PXPSRCCH)\n         SPFVDEF 3,(PXPVLTCH,PXPSRLCH)\n         SPFVDEF 4,(PXPUSECH,PXPCORCH,PXPCOPCH)\n         SPFVDEF 8,(PXPACTCH,PXPDSTCH,PXPSYSCH,PXPSRDCH,PXPSSICH,      +\n               PXPALSCH)\n         SPFVDEF 10,(PXPSRNCH)\n         SPFVDEF 20,(PXPOWNCH)\n         SPFVDEF 44,(PXPDSCCH)\n         SPFVCOPY (PXPLOG,1)\n         SPFVCOPY (MSG,8),DC=NO\n         USING DIRENTRY,R5     SET UP R5 AS BASE FOR DIRECTORY RECORD\n         OPEN  (FILEA)              OPEN FILEA  (ALLOCATED BY PXP0000)\n*----------------------------------------------------------------------\n*        READ FILEA FOR CHANGE STATS\n*----------------------------------------------------------------------\n*NTRY040 GET   FILEA,DIRENTRY GET A DIRECTORY REC\nENTRY040 GET   FILEA          GET A DIRECTORY REC USING DIRENTRY DSECT\n         LR    R5,R1\n         CLI   CIRTYPE,C'E'       IS THIS AN EIR RECORD\n         BNE   ENTRY040\n         MVC   PXPSRCCH,SOURCECL\n         MVC   PXPVLTCH,EDIT4\n         ED    PXPVLTCH,VIOLATED\n         OI    PXPVLTCH+2,X'F0'\n         MVC   PXPSRLCH,EDIT4\n         ED    PXPSRLCH,SOURCELV\n         OI    PXPSRLCH+2,X'F0'\n         MVC   PXPUSECH,USER\n         MVC   PXPCORCH,CORE\n         MVC   PXPCOPCH,EDIT4\n         ED    PXPCOPCH,COPIES+1\n         OI    PXPCOPCH+3,X'F0'\n         MVC   PXPACTCH,ACCOUNT\n         MVC   PXPDSTCH,DESTID\n         MVC   PXPSYSCH,SYSTEM\n         MVC   PXPSRDCH,SOURCEDT\n         UNPK  HEXWRK,SSI(5)      CONVERT BINARY FIELD-ADD PAD BYTE\n         MVC   PXPSSICH,HEXWRK\n         TR    PXPSSICH,HEXTAB\n         MVC   PXPALSCH,ALIAS\n         MVC   PXPSRNCH,SOURCENM\n         MVC   PXPOWNCH,OWNER\n         MVC   PXPDSCCH,DESCRIPT\nZZZ040   EQU   *\n         CLOSE  (FILEA)          CLOSE FILES\n         FREEPOOL FILEA           FREE THE BUFFERS\n         SPFALLOC U,DD='FILEA',DISP='DELETE' UNALLOC & DELETE FILEA\n*        DISPLAY CHANGE PANEL\n         SPFSPLAY 'PXP0004',MSG,,,EOJ\n         OPEN  (PANEIN,(OUTPUT))       ALOCATED BY PXP0000\n         MVC   PANEINCC(8),=C'%CHANGE '\n         MVC   PANEINCC+8(34),0(R3)    FULLY QUALIFIED PANX NAME\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(44),BLANKS\n         MVC   PANEINCC(11),CHCARD10\n         MVC   PANEINCC+11(2),PXPSRCCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD1\n         MVC   PANEINCC+11(3),PXPVLTCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD11\n         MVC   PANEINCC+11(3),PXPSRLCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD3\n         MVC   PANEINCC+11(4),PXPUSECH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD7\n         MVC   PANEINCC+11(4),PXPCORCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD13\n         MVC   PANEINCC+11(4),PXPCOPCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD4\n         MVC   PANEINCC+11(8),PXPACTCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD6\n         MVC   PANEINCC+11(8),PXPDSTCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD8\n         MVC   PANEINCC+11(8),PXPSYSCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD9\n         MVC   PANEINCC+11(10),PXPSRNCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD12\n         MVC   PANEINCC+11(8),PXPSRDCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD14\n         MVC   PANEINCC+11(8),PXPSSICH\n         BAL   R4,ENTRY020\n         CLC   PXPALSCH,BLANKS\n         BE    SKPALIAS\n         MVC   PANEINCC(11),CHCARD15\n         MVC   PANEINCC+11(8),PXPALSCH\n         BAL   R4,ENTRY020\nSKPALIAS MVC   PANEINCC(11),CHCARD2\n         MVC   PANEINCC+11(20),PXPOWNCH\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(11),CHCARD5\n         MVC   PANEINCC+11(44),PXPDSCCH\n         BAL   R4,ENTRY020\n         CLOSE  (PANEIN)         CLOSE FILES\n         FREEPOOL PANEIN          FREE THE BUFFERS\n         LINK  EP=PANEXEC,PARAM=(CHPXPARM),VL=1\n         LTR   R15,R15            SUCCESSFUL\n         BNZ   CHNGFAIL\n         MVC   MSG,=CL8'PXP008'\n         CLI   PXPLOG,C'Y'        LOGGING REQUESTED\n         BNE   EOJ                NO\n         CALL  ISPLINK,(LOG,MSG),VL   YES-LOG THE CHANGE\n         B     EOJ\nCHNGFAIL MVC   MSG,=CL8'PXP009'\nEOJ      EQU   *\n         SPFVREPL (MSG,8)\n         SPFALLOC U,DD='PANEIN',DISP='DELETE' UNALLOC & DELETE\n         #RTN\n*----------------------------------------------------------------------\n*        PUT THE PANEIN REC\n*----------------------------------------------------------------------\nENTRY020 PUT   PANEIN,PANEINCC\n         BR    R4\n*----------------------------------------------------------------------\n*        STORAGE AREAS\n*----------------------------------------------------------------------\nPANEINCC DC    CL80' '\nCHCARD1  DC    CL11'VIOLATED,'\nCHCARD2  DC    CL11'OWNER,'\nCHCARD3  DC    CL11'USER,'\nCHCARD4  DC    CL11'ACCOUNT,'\nCHCARD5  DC    CL11'DESCRIPTIO,'\nCHCARD6  DC    CL11'DESTID,'\nCHCARD7  DC    CL11'CORE,'\nCHCARD8  DC    CL11'SYSTEM,'\nCHCARD9  DC    CL11'SOURCENAME,'\nCHCARD10 DC    CL11'SOURCECLSS,'\nCHCARD11 DC    CL11'SOURCELVL,'\nCHCARD12 DC    CL11'SOURCEDATE,'\nCHCARD13 DC    CL11'COPIES,'\nCHCARD14 DC    CL11'SETSSI,'\nCHCARD15 DC    CL11'ALIAS,'\nCHPXPARM DC    H'20'\n         DC    CL20'%INPUT,S PANEIN*'\nEDIT4    DC    X'40202021'\nHEXTAB   DC    240X'00',C'0123456789ABCDEF'\nHEXWRK   DS    CL9\nSMSG     DS    CL24\nLMSG     DS    CL72\n*----------------------------------------------------------------------\nFILEA    DCB   DDNAME=FILEA,DSORG=PS,MACRF=GL,EODAD=ZZZ040,RECFM=VB\nPANEIN   DCB   DDNAME=PANEIN,DSORG=PS,MACRF=PM\nSPFMACS  SPFCMDS DSCB1=NO,ENQDEQ=NO,TABLES=NO\n         DSECT\n         PXPIRFLD                , DIRSTAT DIRECTORY RECORD\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PXP0005": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x90\\x03\\x8f\\x00\\x90\\x19/\\x19\\x19\\x00\\xd2\\x00\\xb4\\x00\\x00\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1990-02-07T00:00:00", "modifydate": "1990-07-11T19:19:00", "lines": 210, "newlines": 180, "modlines": 0, "user": "CN03MQK"}, "text": "*        COMPILE AND LINKEDIT\n*----------------------------------------------------------------------\n*        DEFINE/COPY VARIABLES\n*----------------------------------------------------------------------\n         PRINT NOGEN\nPXP0005  #SLC  R12,R11,R10        STANDARD LINKAGE\n         SPFVDEF 1,(SRCIND,NOLK,LKCTL,PXPMACRO,PXPPANV)\n         SPFVDEF 2,(PXPSEL,PXPPVCLS,DSORG)\n         SPFVDEF 4,(PXPLANG)\n         SPFVDEF 6,(NOPVOL,PXPNOLK,LKVOL)\n         SPFVDEF 7,(PXPLKCTL)\n         SPFVDEF 8,(NOPVMBR,PXPLKMBR)\n         SPFVDEF 10,(PVMBR)\n         SPFVDEF 30,(ERRMSG)\n         SPFVDEF 44,(PVDSN,NOPVDSN,SPVDSN,SNOPVDSN,SPXPDSN,            +\n               PXPMACL1,PXPMACL2,PXPMACL3,PXPMACL4,PXPMACL5,           +\n               SPXPMAC1,SPXPMAC2,SPXPMAC3,SPXPMAC4,SPXPMAC5,           +\n               PXPLKDSN,SPXPLKDS,CHKDSN)\n         SPFVDEF 71,(PXPOPT,PXPLKOPT,PXPJOBC1,PXPJOBC2,PXPJOBC3,       +\n               PXPLKC1,PXPLKC2,PXPLKC3,PXPLKC4,PXPLKC5,PXPLKC6,PXPLKC7,+\n               PXPLKC8,PXPLKC9,PXPLKC10)\n         SPFVCOPY (PXPDSN,44,ZTEMPF,44,PXPGRP,8,PXPELT,8,ZUSER,8,      +\n               ZPREFIX,8,PXPVOL,6)\n         SPFVCOPY (MSG,8),DC=NO\n         SPFVGET (PXPOPT,PXPLKOPT,PXPJOBC1,PXPJOBC2,PXPJOBC3,          +\n               PXPMACL1,PXPMACL2,PXPMACL3,PXPMACL4,PXPMACL5,PXPMACRO,  +\n               NOLK,LKCTL,PVDSN,NOPVDSN,PXPLANG,PXPPANV),PROFILE\n         MVC   CURSOR,BLANKS             CLEAR\n*----------------------------------------------------------------------\n*        DISPLAY COMPILE/LKED PANEL\n*----------------------------------------------------------------------\nENTRY010 SPFSPLAY 'PXP0005',MSG,CURSOR,,EOJ\n         MVC   MSG,=CL8'PXP000'          CLEAR\n         MVC   CURSOR,BLANKS             CLEAR\n         MVC   WORKDSN,PXPDSN            CONVERT DSN FOR SKELETON USE\n         BAL   R14,ENTRY928\n         MVC   SPXPDSN,WORKDSN2\n         MVC   WORKDSN,PVDSN\n         BAL   R14,ENTRY928\n         MVC   SPVDSN,WORKDSN2\n         MVC   WORKDSN,NOPVDSN\n         BAL   R14,ENTRY928\n         MVC   SNOPVDSN,WORKDSN2\n         CLI   PVMBR,C' '             PANVALET MEMBER SPECIFIED?\n         BNE   BBB010                 YES\n         MVC   CHKDSN,SNOPVDSN        NO-VALIDATE DSN/MBR FOR DSORG\n         MVC   CHKMBR,NOPVMBR\n         MVC   INVOLSER,=C'ABSENT'\n         CLI   NOPVOL,C' '            VOLSER SPECIFIED\n         BE    AAA010                 NO\n         MVC   INVOLSER,NOPVOL\nAAA010   BAL   R14,ENTRY930\n         MVC   CURSOR,=CL8'NOPVMBR'   POSITION CURSOR TO FLD IN ERROR\n         ICM   R15,15,SPFRC           DSN/MBR OK?\n         BNZ   ENTRY010                  NO\n         MVC   CURSOR,BLANKS       YES-CLEAR\nBBB010   CLI   PXPMACRO,C'Y'          ADDITIONAL MACRO LIBS REQUIRED\n         BNE   CCC010                            NO\n         BAL   R14,ENTRY950                      YES\n         MVC   PANEL,=CL8'PXP0008'    MACRO/COPY LIB PANEL\n         BAL   R14,ENTRY920           DISPLAY PANEL\n         MVC   WORKDSN,PXPMACL1          CONVERT DSN FOR SKELETON USE\n         BAL   R14,ENTRY928\n         MVC   SPXPMAC1,WORKDSN2\n         MVC   WORKDSN,PXPMACL2\n         BAL   R14,ENTRY928\n         MVC   SPXPMAC2,WORKDSN2\n         MVC   WORKDSN,PXPMACL3\n         BAL   R14,ENTRY928\n         MVC   SPXPMAC3,WORKDSN2\n         MVC   WORKDSN,PXPMACL4\n         BAL   R14,ENTRY928\n         MVC   SPXPMAC4,WORKDSN2\n         MVC   WORKDSN,PXPMACL5\n         BAL   R14,ENTRY928\n         MVC   SPXPMAC5,WORKDSN2\n         BAL   R14,ENTRY951\nCCC010   CLC   PXPNOLK,=CL6'NOLKED'\n         BE    DDD010\n         CLC   PXPLKCTL,=CL7'PANELIN'\n         BNE   DDD010\n         BAL   R14,ENTRY950\n         MVC   PANEL,=CL8'PXP0006'    LKED CNTL STATEMENTS PANEL\n         BAL   R14,ENTRY920           DISPLAY PANEL\n         MVC   WORKDSN,PXPLKDSN          CONVERT DSN FOR SKELETON USE\n         BAL   R14,ENTRY928\n         MVC   SPXPLKDS,WORKDSN2\n         CLI   PXPLKDSN,C' '          LKED DSN SPECIFIED?\n         BE    CCCEXIT                NO\n         MVC   CHKDSN,SPXPLKDS    YES-VALIDATE DSN/MBR FOR DSORG\n         MVC   CHKMBR,PXPLKMBR\n         MVC   INVOLSER,=C'ABSENT'\n         CLI   LKVOL,C' '            VOLSER SPECIFIED\n         BE    CCC011                 NO\n         MVC   INVOLSER,LKVOL\nCCC011   BAL   R14,ENTRY930           CHK DSN/MBR RTN\n         ICM   R15,15,SPFRC           DSN/MBR OK\n         BNZ   CCC010                  NO\nCCCEXIT  BAL   R14,ENTRY951\nDDD010   CALL  ISPLINK,(FTOPEN,TEMP),VL\n         CALL  ISPLINK,(FTINCL,SKELETON),VL\n         CALL  ISPLINK,(FTCLOSE),VL\n         SPFSUB  ZTEMPF\n         SPFJOBNM PXPJOBC1\n         B     ENTRY010\n*----------------------------------------------------------------------\n*        END OF JOB\n*----------------------------------------------------------------------\nEOJ      LA    R15,0\n         #RTN\n*----------------------------------------------------------------------\n*        DISPLAY PANEL\n*----------------------------------------------------------------------\nENTRY920 DS    0H\n         ST    R14,ST920               SAVE R14\n         SPFSPLAY PANEL,MSG,CURSOR    ,,ENTRY010\n         LTR   R15,R15                .\n         BZ    EXIT920                .\n         MVC   MSG,=CL8'PXP000'          CLEAR\n         BAL   R14,ENTRY951           RESTORE ENVIRONMENT\n         B     ENTRY010               RETURN TO PRIOR SCREEN\nEXIT920  L     R14,ST920\n         BR    R14\nST920    DC    F'-1'\n*----------------------------------------------------------------------\n*        FIX DSN\n*----------------------------------------------------------------------\nENTRY928 DS    0H\n         ST    R14,ST928          SAVE R14\n         CLI   WORKDSN,X'7D'           NAME IN QUOTES ?\n         BE    AAA928                  YES - REMOVE QUOTES\n         MVC   WORKDSN2,BLANKS       NO-CLEAR WORK FIELD\n         MVC   WORKDSN2(8),ZPREFIX     MOVE USER PROFIX\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT+C' ',X'FF'       SET TO BLANK\n         TRT   WORKDSN2,SPFTRT         FIND END OF PREFIX\n         MVI   0(R1),C'.'              ADD A DOT\n         MVC   1(35,R1),WORKDSN        MOVE REST OF DSN\n         B     BBB928\nAAA928   MVC   WORKDSN2(43),WORKDSN+1  SKIP QUOTE\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT+C' ',X'FF'       SET FOR BLANK\n         MVI   SPFTRT+X'7D',X'FF'      SET FOR QUOTE\n         TRT   WORKDSN2,SPFTRT         FIND END OF DSN\n         BZ    BBB928                  FULL 44 BYTE NAME\n         MVI   0(R1),C' '              REMOVE QUOTE\nBBB928   L     R14,ST928          RESTORE\n         BR    R14\nST928    DC    F'-1'\n*----------------------------------------------------------------------\n*        CHECK DSORG\n*----------------------------------------------------------------------\nENTRY930 DS    0H\n         ST    R14,ST930               SAVE R14\n         MVC   SPFRC,=F'0'\n         LINK  EP=FILEATTR,PARAM=(CHKDSN,VALSWTCH,ERRMSG,OVOL,LRECL,   +\n               BLKSIZE,DSORG,RECFM,DEVC,INVOLSER),VL=1\n         CLI   VALSWTCH,C'Y'     VALID RETURN?\n         BNE   ZZZ930            NO - PUT OUT ERROR MSG\n         CLC   DSORG,=C'PO'      YES- IS DATASET A PDS?\n         BNE   XXX930            NO\n         CLI   CHKMBR,C' '       YES- MAKE SURE MEMBER NOT BLANK\n         BNE   EXIT930                OK\n         B     YYY930                 NG\nXXX930   CLI   CHKMBR,C' '       DSORG=PS, MAKE SURE NO MBR\n         BE    EXIT930           OK\nYYY930   MVC   MSG,=CL8'PXP004'       NG\n         MVC   SPFRC,=F'4'\n         B     EXIT930\nZZZ930   MVC   MSG,=CL8'PXP029'\n         MVC   SPFRC,=F'4'\nEXIT930  L     R14,ST930\n         BR    R14\nST930    DC    F'-1'\n*----------------------------------------------------------------------\n*        SELECT CONTROL SAVE\n*----------------------------------------------------------------------\nENTRY950 DS    0H\n         ST    R14,ST950               SAVE R14\n         CALL  ISPLINK,(CONTROL,DISPLAY,SAVE),VL\n         L     R14,ST950\n         BR    R14\nST950    DC    F'-1'\n*----------------------------------------------------------------------\n*        SELECT CONTROL RESTORE\n*----------------------------------------------------------------------\nENTRY951 DS    0H\n         ST    R14,ST951               SAVE R14\n         CALL  ISPLINK,(CONTROL,DISPLAY,RESTORE),VL\n         L     R14,ST951\n         BR    R14\nST951    DC    F'-1'\n*----------------------------------------------------------------------\n*        STORAGE AREAS\n*----------------------------------------------------------------------\nWORKDSN  DC    CL44' '\nWORKDSN2 DC    CL44' '\nSKELETON DC    CL8'PXP0005S'\n         SPACE\nCHKMBR   DS    CL8\nVALSWTCH DS    CL3\nOVOL     DS    CL6\nLRECL    DS    CL5\nBLKSIZE  DS    CL5\nRECFM    DS    CL1\nDEVC     DS    CL1\nINVOLSER DS    CL6\nPXP0005  CSECT\nSPFMACS  SPFCMDS FILES=YES\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PXP0007": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x15\\x00\\x00\\x00\\x892\\x0f\\x00\\x91\\x01o\\x12\\x18\\x00e\\x00b\\x00e\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@'", "ispf": {"version": "01.21", "flags": 0, "createdate": "1989-11-16T00:00:00", "modifydate": "1991-01-16T12:18:00", "lines": 101, "newlines": 98, "modlines": 101, "user": "CN03MQK"}, "text": "*        LIBRARY MAINTENANCE\n*----------------------------------------------------------------------\n*        DEFINE/COPY VARIABLES\n*----------------------------------------------------------------------\n         PRINT NOGEN\nPXP0007  #SLC  R12,R11,R10        STANDARD LINKAGE\n         SPFVDEF 1,(LIBRREP,ZCMD)\n         SPFVDEF 2,(REPL)\n         SPFVDEF 4,(LIBRETPD,LIBFUPDT,LIBGDG,LIBGDGAB)\n         SPFVDEF 6,(PDSVOL,LIBCVL,LIBCYL,VOLSER)\n         SPFVDEF 7,(LIBMXELT)\n         SPFVDEF 8,(LIBGRP,LIBELT)\n         SPFVDEF 44,(LIBPDS,SLIBPDS,SPXPDSN)\n         SPFVDEF 71,(LIBJOBC1,LIBJOBC2,LIBJOBC3)\n         SPFVCOPY (PXPDSN,44,ZTEMPF,44,PXPGRP,8,PXPELT,8,ZUSER,8,      +\n               ZPREFIX,8,PXPVOL,6,PXPTYPE,4,PXPSTAT,1,PXPMODE,1)\n         SPFVCOPY (MSG,8),DC=NO\n         SPFVGET (LIBJOBC1,LIBJOBC2,LIBJOBC3,LIBGDG),PROFILE\n*----------------------------------------------------------------------\n*        DISPLAY LIBRARY MAINTENANCE PANEL\n*----------------------------------------------------------------------\nENTRY010 SPFSPLAY 'PXP0007',MSG,,,EOJ\n         MVC   WORKDSN,PXPDSN            CONVERT DSN FOR SKELETON USE\n         BAL   R14,ENTRY928\n         MVC   SPXPDSN,WORKDSN2\n         MVC   WORKDSN,LIBPDS           CONVERT DSN FOR SKELETON USE\n         BAL   R14,ENTRY928\n         MVC   SLIBPDS,WORKDSN2\n         OI    ZCMD,C' '   UPPER CASE\n*--------------------\n*        FILEOPT\n*--------------------\n         CLI   ZCMD,C'M'   IS THIS MODIFY ATTR (FILEOPT) OPT\n         BNE   ENTRY020                 NO\n         MVC   PANXPARM+11(4),LIBFUPDT\n         MVC   PANXPARM+24(8),PXPGRP\n         LINK  EP=PANEXEC,PARAM=(PANXPARM),VL=1  EXEC PANEXEC WITH PARM\n         B     ENTRY010\n*--------------------\n*        SKELETONS FOR ALL OTHER OPTIONS\n*--------------------\nENTRY020 SPFVPUT (SPXPDSN,LIBGDG,LIBGDGAB),SHARED SHARED POOL FOR CLIST\n         CLI   ZCMD,C'D'         IS THIS THE DELETE OPTION\n         BNE   AAA020            NO\n         MVC   CLIST,=C'PXPVOLD '  USE CLIST FOR DELETE DSN FOR /*SETUP\n         B     BBB020\nAAA020   CLI   ZCMD,C'R'         RESTORE?\n         BNE   CCC020\n         MVC   CLIST,=C'PXPVOLR '  USE CLIST FOR RESTORE DSN FOR /*SETP\nBBB020   CALL  ISPLINK,(SELECT,CMDLEN,CMD),VL\n         SPFVGET (VOLSER),SHARED\nCCC020   CALL  ISPLINK,(FTOPEN,TEMP),VL\n         CALL  ISPLINK,(FTINCL,SKELETON),VL\n         CALL  ISPLINK,(FTCLOSE),VL\n         SPFSUB  ZTEMPF\n         SPFJOBNM LIBJOBC1\n         B     ENTRY010\nEOJ      SPFVDEL (ZCMD)\n         LA    R15,0\n         #RTN\n*----------------------------------------------------------------------\n*        FIX DSN\n*----------------------------------------------------------------------\nENTRY928 DS    0H\n         ST    R14,ST928          SAVE R14\n         CLI   WORKDSN,X'7D'           NAME IN QUOTES ?\n         BE    AAA928                  YES - REMOVE QUOTES\n         MVC   WORKDSN2,BLANKS       NO-CLEAR WORK FIELD\n         MVC   WORKDSN2(8),ZPREFIX     MOVE USER PROFIX\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT+C' ',X'FF'       SET TO BLANK\n         TRT   WORKDSN2,SPFTRT         FIND END OF PREFIX\n         MVI   0(R1),C'.'              ADD A DOT\n         MVC   1(35,R1),WORKDSN        MOVE REST OF DSN\n         B     BBB928\nAAA928   MVC   WORKDSN2(43),WORKDSN+1  SKIP QUOTE\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT+C' ',X'FF'       SET FOR BLANK\n         MVI   SPFTRT+X'7D',X'FF'      SET FOR QUOTE\n         TRT   WORKDSN2,SPFTRT         FIND END OF DSN\n         BZ    BBB928                  FULL 44 BYTE NAME\n         MVI   0(R1),C' '              REMOVE QUOTE\nBBB928   L     R14,ST928          RESTORE\n         BR    R14\nST928    DC    F'-1'\n*----------------------------------------------------------------------\n*        STORAGE AREAS\n*----------------------------------------------------------------------\nPANXPARM DC    H'100'\n         DC    CL100'%FILEOPT,     PANELIB*        .;TA' SUPPLY OPTS,GP\nWORKDSN  DC    CL44' '\nWORKDSN2 DC    CL44' '\nSKELETON DC    CL8'PXP0007S'\n         SPACE 1\nCMDLEN   DC    F'13'           LENGTH OF THE FOLLOWING CMD\nCMD      DC    C'CMD('\nCLIST    DS    CL8             CLIST NAME TO EXECUTE\n         DC    C')'\nPXP0007  CSECT\nSPFMACS  SPFCMDS FILES=YES\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PXP0009": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x893\\x8f\\x00\\x90\\x00?\\x19\\x17\\x00X\\x00W\\x00\\x00\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1989-12-04T00:00:00", "modifydate": "1990-01-03T19:17:00", "lines": 88, "newlines": 87, "modlines": 0, "user": "CN03MQK"}, "text": "*----------------------------------------------------------------------\n*        ZAP THE MODULE, DISPLAY LOAD MODULE XREF, MAP AND STATISTICS\n*----------------------------------------------------------------------\n         PRINT NOGEN\nPXP0009  #SLC R12,R11\n         LR   R3,R1      SAVE PARM -FULLY QUALIFIED PANX NAME\n*----------------------------------------------------------------------\n*        DEFINE VARIABLES\n*----------------------------------------------------------------------\n         SPFVDEF 1,(PXPZPST,PXPZPMOD)\n         SPFVDEF 6,(PXPZPOPT)\n         SPFVDEF 8,(PXPZPGRP,PXPZPELT)\n         SPFVDEF 72,(PXPZAP1,PXPZAP2,PXPZAP3,PXPZAP4,PXPZAP5,PXPZAP6,  +\n               PXPZAP7,PXPZAP8,PXPZAP9,PXPZAP10,PXPZAP11,PXPZAP12,     +\n               PXPZAP13)\n         SPFVCOPY (MSG,8),DC=NO\n         SPFVGET (PXPZPGRP,PXPZPST,PXPZPMOD,PXPZPOPT),PROFILE\n*        DISPLAY ZAP PANEL\n         SPFSPLAY 'PXP0009',MSG,,,EOJ\n         OPEN  (PANEIN,(OUTPUT))       ALOCATED BY PXP0000\n         MVC   PANEINCC(12),=C'%ZAP        '\n         CLI   PXPZPOPT,C' '           ARE OPTIONS SPECIFIED\n         BE    NOOPTS                  NO\n         MVI   PANEINCC+4,C','         YES\n         MVC   PANEINCC+5(6),PXPZPOPT  ZAP OPTIONS\nNOOPTS   MVC   PANEINCC+12(34),0(R3)    FULLY QUALIFIED PANX NAME\n         CLI   PXPZPELT,C' '           IS OUTPUT ELT SPECFIED\n         BE    SAMEELT                 NO\n         MVI   PANEINCC+46,C','        YES\n         MVC   PANEINCC+47(8),PXPZPGRP   OUTPUT ZAPPED MODULE\n         MVI   PANEINCC+55,C'.'\n         MVC   PANEINCC+56(8),PXPZPELT\n         MVI   PANEINCC+64,C';'\n         MVC   PANEINCC+65(1),PXPZPST\n         MVC   PANEINCC+66(1),PXPZPMOD\nSAMEELT  BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP1\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP2\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP3\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP4\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP5\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP6\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP7\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP8\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP9\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP10\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP11\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP12\n         BAL   R4,ENTRY020\n         MVC   PANEINCC(72),PXPZAP13\n         BAL   R4,ENTRY020\n         CLOSE  (PANEIN)         CLOSE FILES\n         FREEPOOL PANEIN          FREE THE BUFFERS\n         LINK  EP=PANEXEC,PARAM=(CHPXPARM),VL=1\nEOJ      EQU   *\n         SPFALLOC U,DD='PANEIN',DISP='DELETE' UNALLOC & DELETE\n         LA    R15,0\n         #RTN\n*----------------------------------------------------------------------\n*        PUT THE PANEIN REC\n*----------------------------------------------------------------------\nENTRY020 CLI   PANEINCC,C' '     ANYTHING ON CONTROL CARD\n         BER   R4                    NO\n         PUT   PANEIN,PANEINCC       YES - WRITE IT\n         BR    R4\n*----------------------------------------------------------------------\n*        STORAGE AREAS\n*----------------------------------------------------------------------\nPANEINCC DC    CL80' '\nCHPXPARM DC    H'20'\n         DC    CL20'%INPUT,S PANEIN*'\nSMSG     DS    CL24\nLMSG     DS    CL72\n*----------------------------------------------------------------------\nPANEIN   DCB   DDNAME=PANEIN,DSORG=PS,MACRF=PM,BLKSIZE=80\nSPFMACS  SPFCMDS DSCB1=NO,ENQDEQ=NO,TABLES=NO\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PXP0010": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01 \\x00\\x00\\x00\\x90\\x02?\\x00\\x90\\x02\\x9f\\x18V\\x00\\xca\\x00;\\x00\\x00\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@'", "ispf": {"version": "01.32", "flags": 0, "createdate": "1990-01-23T00:00:00", "modifydate": "1990-01-29T18:56:00", "lines": 202, "newlines": 59, "modlines": 0, "user": "CN03MQK"}, "text": "*----------------------------------------------------------------------\n*        GLOBAL FACILITIES FOR SYSTEMS PROGRAMMERS USE\n*----------------------------------------------------------------------\n         PRINT NOGEN\nPXP0010  #SLC R12,R11\n*----------------------------------------------------------------------\n*        DEFINE VARIABLES\n*----------------------------------------------------------------------\n         SPFVDEF 1,(ZCMD,SPLOADER,SPSOURCE,SPBLDL,SPTABTYP,SPPDSC,     +\n               SPSECURE)\n         SPFVDEF 2,(SPRELEAS)\n         SPFVDEF 5,(SPENTRES)\n         SPFVDEF 8,(TARGET1,TARGET2,TARGET3,EXIT1,EXIT2,EXIT3)\n         SPFVDEF 56,(SPPARM)\n         SPFVDEF 71,(SPJOBC1,SPJOBC2,SPJOBC3)\n         SPFVCOPY (MSG,8),DC=NO\n         SPFVCOPY (ZUSER,8,ZTEMPF,44)\n         SPFVGET (SPJOBC1,SPJOBC2,SPJOBC3),PROFILE\n         LA    R1,SPPARM+48   CALCULATE ENDPARM ADDR TO PREVENT OVFLOW\n         ST    R1,ENDPARM\n*        DISPLAY SYSTEMS PROGRAMMER PANEL\nENTRY010 SPFSPLAY 'PXP0010',MSG,,,EOJ\n         MVC   SPPARM,BLANKS    CLEAR\n         MVC   MSG,=CL8'PXP000'   CLEAR\n         OI    ZCMD,C' '        UPPER CASE\n         CLI   ZCMD,C'A'        ACTIVATE ALL?\n         BNE   AAA010           NO\n         MVC   SPPARM(5),ACTALL    YES\n         B     FTSKEL\nAAA010   CLI   ZCMD,C'D'        DEACTIV?\n         BNE   BBB010           NO\n         MVC   SPPARM(5),DEACTALL  YES\n         B     FTSKEL\nBBB010   CLI   ZCMD,C'R'        REPORT?\n         BNE   ENTRY100         NO\n         MVC   SPPARM(5),REPRTALL  YES\n         B     FTSKEL\nENTRY100 EQU   *\n         LA    R5,SPPARM        USE R5 AS BASE FOR PARM\n         SR    R1,R1               CLEAR\n         MVC   SECEXITD,=CL2';Y'      RESET\n         CLI   SPLOADER,C' '    PANEXEC LOADER?\n         BE    ENTRY110         NO\n         MVC   0(2,R5),=C'1;'  YES - CODE FOR PANEXEC LOADER\n         MVC   2(1,R5),SPLOADER A/D (ACTIVATE/DEACTIVATE)\n         LA    R5,3(R5)\n         CLI   SPLOADER,C'A'    ACTIVATE?\n         BNE   EXIT100          NO\n         MVI   0(R5),C';'\n         MVC   1(1,R5),SPSOURCE YES- SOURCE\n         MVI   2(R5),C';'\n         LA    R5,3(R5)\n         MVC   0(2,R5),SPRELEAS      RELEASE\n         TRT   0(3,R5),BLNKTAB  POINT BEYOND RELEASE FIELD ENTERED\n         LR    R5,R1\nEXIT100  MVC   0(3,R5),=C';X;'  EXECUTE\n         LA    R5,3(R5)\nENTRY110 EQU   *\n         CLI   SPBLDL,C' '    DYNAMIC BLDL?\n         BE    ENTRY120         NO\n         MVC   0(2,R5),=C'2;'  YES - CODE FOR DYNAMIC BLDL\n         MVC   2(1,R5),SPBLDL   A/F/D (ACTIVATE/REFRESH/DEACTIVATE)\n         LA    R5,3(R5)\n         CLI   SPBLDL,C'A'    ACTIVATE?\n         BNE   EXIT110          NO\n         MVI   0(R5),C';'       YES\n         MVC   1(1,R5),SPTABTYP  BLDL TABLE TYPE\n         LA    R5,2(R5)\n         CLI   SPTABTYP,C'D'         DYNAMIC\n         BE    AAA110                YES\n         CLI   SPTABTYP,C'P'         NO - PANEOPT DEFAULT\n         BNE   EXIT110                    NO\nAAA110   MVI   0(R5),C';'                 YES\n         LA    R5,1(R5)\n         MVC   0(5,R5),SPENTRES     NUMBER OF ENTRIES FOR DYNAMIC\n         TRT   0(6,R5),BLNKTAB    GET LENGTH OF RELEASE FIELD ENTERED\n         CR    R1,R5\n         BE    ZZZ110             0 LENGTH ENTERED\n         LR    R5,R1\n         B     EXIT110\nZZZ110   BCTR  R5,0               OVERLAY LAST ;\nEXIT110  MVC   0(3,R5),=C';X;'  EXECUTE\n         LA    R5,3(R5)\nENTRY120 EQU   *\n         CLI   SPPDSC,C' '      PDS COMPAT?\n         BE    ENTRY130         NO\n         MVC   0(2,R5),=C'3;'  YES - CODE FOR PDS COMPAT\n         MVC   2(1,R5),SPPDSC   A/D (ACTIVATE/DEACTIVATE)\n         MVI   3(R5),C';'\n         LA    R5,4(R5)\n         CLC   TARGET1(2),=C'A '   ALL TARGETS ENTERED\n         BNE   AAA120           NO\n         MVI   0(R5),C'A'       YES\n         LA    R5,1(R5)\n         B     EXIT120\nAAA120   MVC   0(8,R5),TARGET1  TARGET1\n         TRT   0(9,R5),BLNKTAB  POINT BEYOND TARGET FIELD ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\n         CLI   TARGET2,C' '     TARGET2 ENTERED?\n         BE    ZZZ120           NO\n         MVC   0(8,R5),TARGET2\n         TRT   0(9,R5),BLNKTAB    POINT BEYOND TARGET FIELD ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\n         CLI   TARGET3,C' '     TARGET3 ENTERED?\n         BE    ZZZ120           NO\n         MVC   0(8,R5),TARGET3\n         TRT   0(9,R5),BLNKTAB    POINT BEYOND TARGET FIELD ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\nZZZ120   MVI   0(R5),C'E'\n         LA    R5,1(R5)\nEXIT120  MVC   0(3,R5),=C';X;'  EXECUTE\n         LA    R5,3(R5)\nENTRY130 EQU   *\n         CLI   SPSECURE,C' '    SECURITY EXITS\n         BE    ENTRY140         NO\n         MVC   0(2,R5),=C'4;'  YES - CODE FOR SECURITY EXITS\n         MVC   2(1,R5),SPSECURE A/D (ACTIVATE/DEACTIVATE)\n         MVI   3(R5),C';'\n         LA    R5,4(R5)\n         C     R5,ENDPARM       BEYOND THE ALLOWABLE PARM?\n         BH    TOOLONG          YES\n         LA    R4,2             SET R4 FOR LENGTH OF ;Y RESPONSE\n         CLI   SPSECURE,C'A'    IS THIS ACTIVATION\n         BNE   AAA130           NO\n         MVC   SECEXITD,BLANKS  YES- NO NEED FOR DEACT VERIF\n         LA    R4,0             SET R4=0: NO ;Y RESPONSE NEEDED\nAAA130   CLC   EXIT1(2),=C'A '  ALL EXITS ENTERED\n         BNE   BBB130           NO\n         MVI   0(R5),C'A'       YES\n         MVC   1(2,R5),SECEXITD\n         LA    R5,1(R4,R5)\n         C     R5,ENDPARM       BEYOND THE ALLOWABLE PARM?\n         BH    TOOLONG          YES\n         B     EXIT130\nBBB130   MVC   0(8,R5),EXIT1    NO - EXIT1\n         TRT   0(9,R5),BLNKTAB    POINT BEYOND EXIT NAME ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\n         CLI   EXIT2,C' '       EXIT2 ENTERED?\n         BE    ZZZ130           NO\n         C     R5,ENDPARM   YES-BEYOND THE ALLOWABLE PARM?\n         BH    TOOLONG          YES\n         MVC   0(8,R5),EXIT2    NO\n         TRT   0(9,R5),BLNKTAB    POINT BEYOND EXIT NAME ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\n         CLI   EXIT3,C' '       EXIT3 ENTERED?\n         BE    ZZZ130           NO\n         C     R5,ENDPARM   YES-BEYOND THE ALLOWABLE PARM?\n         BH    TOOLONG          YES\n         MVC   0(8,R5),EXIT3\n         TRT   0(9,R5),BLNKTAB   POINT BEYOND EXIT NAME ENTERED\n         LR    R5,R1\n         MVI   0(R5),C';'\n         LA    R5,1(R5)\nZZZ130   C     R5,ENDPARM   YES-BEYOND THE ALLOWABLE PARM?\n         BH    TOOLONG          YES\n         MVI   0(R5),C'E'\n         MVC   1(2,R5),SECEXITD    ';Y' SECURITY EXIT DEACT VERIFICATN\n         LA    R5,1(R4,R5)\nEXIT130  MVC   0(3,R5),=C';X;'  EXECUTE\n         LA    R5,3(R5)\nENTRY140 EQU   *\n         MVI   0(R5),C'Q'       QUIT\n*        TPUT  SPPARM,71\nFTSKEL   CALL  ISPLINK,(FTOPEN,TEMP),VL\n         CALL  ISPLINK,(FTINCL,SKELETON),VL\n         CALL  ISPLINK,(FTCLOSE),VL\n         SPFSUB  ZTEMPF\n         SPFJOBNM SPJOBC1\n         B     ENTRY010\nEOJ      EQU   *\n         SPFVDEL  (ZCMD)\n         LA    R15,0\n         #RTN\nTOOLONG  MVC   MSG,=CL8'PXP027'\n         B     ENTRY010\n*----------------------------------------------------------------------\n*        STORAGE AREAS\n*----------------------------------------------------------------------\nENDPARM  DS    A                 ADDR OF THE END OF THE PARM\nSKELETON DC    CL8'PXP0010S'\nACTALL   DC    CL5'A;X;Q'        ACTIVATE ALL\nDEACTALL DC    CL5'D;X;Q'      DEACTIVATE ALL\nREPRTALL DC    CL5'R;X;Q'        REPORT ALL\nSECEXITD DC    CL2';Y'       SECURITY EXIT DEACTIVATION VERIFICATION\nBLNKTAB  DC    X'FF',255X'00'         X'00' AND SPACES\n         ORG   BLNKTAB+C' '\n         DC    C' '\n         ORG   BLNKTAB+256\n         SPACE 1\nPXP0010  CSECT\nSPFMACS  SPFCMDS FILES=YES\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PXP0100": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01,\\x00\\x00\\x00\\x90\\x00/\\x00\\x90!?\\x16T\\x03\\xe6\\x03\\x15\\x01\\x1d\\xc3\\xd5\\xf0\\xf3\\xd4\\xd8\\xd2@@@'", "ispf": {"version": "01.44", "flags": 0, "createdate": "1990-01-02T00:00:00", "modifydate": "1990-08-01T16:54:00", "lines": 998, "newlines": 789, "modlines": 285, "user": "CN03MQK"}, "text": "*----------------------------------------------------------------------\n*        ELEMENT PROCESSOR\n* REGISTERS: R6 - PARM GENERIC ELT NAME\n*            R5 - LENG GENERIC ELT NAME\n*            R7 - NUMBER OF ELTS TO ADD TO TABLE\n*----------------------------------------------------------------------\n*        DEFINE/COPY VARIABLES\n*----------------------------------------------------------------------\n         PRINT NOGEN\nPXP0100  #SLC  R12,R11,R10,R9     STANDARD LINKAGE\n         LR    R6,R1              SAVE PARM (GENERIC ELT NAME ADDR)\n         SPFVCOPY (PXPDSN,44,PXPGRP,8,PXPELT,8,PXPTYPE,4,PXPSTAT,1,    +\n               PXPMODE,1,ZUSER,8,PXPDIAG,1,PXPCONF,1)\n         SPFVCOPY (MSG,8),DC=NO\n         SPFVDEF 1,(PXPAC,PXPZAPS)\n         SPFVDEF 2,(PXPSEL,PXPPVCLS)\n         SPFVDEF 3,(PXPACTN,PXPPVLVL,PXPPVTYP,ZTDADD)\n         SPFVDEF 4,(PXPSCRL,ZSCROLLA,PXPUSER)\n         SPFVDEF 5,(PXPACMOD,PXPACTOT,PXPEXECS,PXPELTPR)\n         SPFVDEF 7,(PXPCORE)\n         SPFVDEF 8,(PXPLKDAT,PXPALIAS,PXPACCDT,PXPACCTM,PXPMNTDT,      +\n               PXPMNTTM,PXPEXCDT,PXPJOBNM,PXPSTPNM,PXPPRODT,PXPADDAT,  +\n               PXPBKPDT,PXPRSTDT,PXPRMVDT,PXPACCT,PXPSYST,             +\n               PXPPVDAT,ZTDRET,PXPTABLE)\n         SPFVDEF 10,(PXPATTR,PXPPVSRC)\n         SPFVDEF 20,(PXPOWNER)\n         SPFVDEF 25,(PXPQNAM)\n         SPFVDEF 44,(PXPPVDSN,PXPDESCR)\n*        SPFVDEF 256,(PXPLISTV)  <=== 256 NOT BIG ENOUGH, USE CALL ISPL\n         CALL ISPLINK,(VDEFINE,LISTVAR,PXPLISTV,CHAR,LENLISTV),VL (384)\n         SPFVDEF 4,(ZTDSCRP,ZTDAMT,ZTDSIZE,ZTDLROWS,BOTTOM,ZTDSELS),   +\n               TYPE=FIXED\n*        CALL  ISPLINK,(TBQUERY,PXPTABLE),VL\n*        LTR   R15,R15       IS TABLE OPEN (I.E. DOES IT EXIST)?\n*        BZ    ENTRY050      YES - SKIP BUILDING TABLE\n         CLI   REINVK,C'1'   IS THIS A REINVOCATION\n         BE    ENTRY050      YES- SKIP BUILDING TABLE\n         MVI   REINVK,C'1'   NO - INITIAL ENTRY - SET FLAG FOR NXT TIME\n         MVI   EOFFLAG,C'0'  SET FLAG-FILEA NOT AT EOF (TABLE NOT FULL)\n         MVC   ZTDRET,=CL8'DOWN'  FLAG TO ADD MORE ROWS WHEN SCROLL DWN\n         MVC   ELTPR,=F'0'    INIT- NUMBER OF ELTS PROCESSED\n         MVC   SAVGRP,PXPGRP  SAVE GRP  SPECIFIED ON 'S' OPTION\n         MVC   SAVELT,PXPELT  SAVE ELT  SPECIFIED ON 'S' OPTION\n         MVC   SAVTYPE,PXPTYPE SAV TYPE SPECIFIED ON 'S' OPTION\n         MVC   SAVSTAT,PXPSTAT SAV STAT SPECIFIED ON 'S' OPTION\n         MVC   SAVMODE,PXPMODE SAV MODE SPECIFIED ON 'S' OPTION\n*----------------------------------------------------------------------\n*        DO INITIAL TABLE LOAD\n*----------------------------------------------------------------------\n         OI    FLAG2,SORTNAM      SET FLAG, IN NAME SEQUENCE\n         SPFTBL# PREF=PXP         GENERATE A TABLE NUMBER\n         MVC   PXPTABLE(3),ZUSER  PREFIX WITH USER ID\n         MVC   PXPTABLE+3(5),PXPTBL#  SUFFIX WITH A NEW NUMBER\n*        SPFTBCR PXPTABLE,(PXPQNAM,PXPACCDT,PXPACCTM),(PXPSEL,PXPCORE,\n*              PXPLKDAT,PXPALIAS,PXPATTR,PXPAC,PXPPVSRC,PXPMNTDT,\n*              PXPMNTTM,PXPEXCDT,PXPACTN,PXPACMOD,PXPACTOT,PXPEXECS,\n*              PXPPRODT,PXPADDAT,PXPPVDAT,PXPPVCLS,PXPPVLVL,PXPZAPS,\n*              PXPPVDSN,PXPDESCR,PXPBKPDT,PXPRSTDT,PXPRMVDT,\n*              PXPJOBNM,PXPSTPNM,PXPPVTYP,PXPOWNER),NOWRITE\n********  PXPACCT,PXPSYST,PXPUSER  REMOVED <==TOO MANY CHARS IN MACRO\n         CALL  ISPLINK,(TBCREATE,PXPTABLE,TBCRKEY,TBCRFLD,NOWRITE),VL\n         MVC   SORTLIST,=CL40'(PXPQNAM,C,A,PXPACCDT,C,D,PXPACCTM,C,D)'\n         CALL  ISPLINK,(TBSORT,PXPTABLE,SORTLIST),VL\n         OPEN  (FILEA)              OPEN FILEA\n         XC    SPFTRT,SPFTRT        IS A GENERIC MATCH REQUESTED\n         MVI   SPFTRT+C'*',X'FF'    IN DICATED BY * IN ELT NAME PASSED\n         TRT   0(8,R6),SPFTRT       R6=A(SAVELT)\n         BZ    ENTRY040             NO\n         SR    R1,R6                GET LENGTH OF GENERIC NAME\n         BCTR  R1,0                 ADJUST FOR EXEC\n         LR    R5,R1                PLACE LENGTH IN R5\n         MVI   BBB900+1,X'00'       FALL THRU TO GENERIC COMPARE\n         USING DIRENTRY,R4\nENTRY040 L     R7,ADDNUM      USE R7 AS BCT COUNTER\n         BAL   R14,ENTRY900   GET DIRECTORY RECORDS   (FIRST BATCH)\n*----------------------------------------------------------------------\n*        START AT TOP OF TABLE AND DISPLAY IT\n*----------------------------------------------------------------------\n         CALL  ISPLINK,(TBTOP,PXPTABLE),VL\n         MVC   PANEL,=CL8'PXP0003' SET PANEL NAME\n         MVC   MSG,=CL8'PXP000'  INIT MSG ID\nENTRY050 CLC   RC,=F'0'          ANYMORE ROWS TO PROCESS\n         BH    ENTRY060          PERHAPS-GO CHECK (4=YES,8=END)\n         BAL   R14,ENTRY940   NO-RESET CRP\n*  SET COMMAND DELIMITER CHAR\n*        MVC   SAVZDEL,ZDEL      SAV CMD DEL\n*        CLI   ZDEL,C';'          IS CMD DEL = ';'\n*        BNE   ENTRY060           NO - NO CHG NECESSARY\n*        MVI   ZDEL,C'\u00a2'          YES - CHG TO \u00a2\n*        SPFVREPL (ZDEL,1)\nENTRY060 DS    0H\n         CLI   MOREFLAG,C'1'      MULTIPLE LINE ENTRY OR SCROLL?\n         BE    AAA060             YES - PROCESS NEXT ONE OR SCROLL\n         MVC   PXPSEL,BLANKS      CLEAR\n         MVC   PXPGRP,SAVGRP       GRP  SPECIFIED ON 'S' OPTION\n         MVC   PXPELT,SAVELT       ELT  SPECIFIED ON 'S' OPTION\n         MVC   PXPTYPE,SAVTYPE     TYPE SPECIFIED ON 'S' OPTION\n         MVC   PXPSTAT,SAVSTAT     STAT SPECIFIED ON 'S' OPTION\n         MVC   PXPMODE,SAVMODE     MODE SPECIFIED ON 'S' OPTION\n         SPFVREPL (PXPGRP,8,PXPELT,8,PXPTYPE,4,PXPSTAT,1,PXPMODE,1)\n         CALL  ISPLINK,(TBDISPL,PXPTABLE,PANEL,MSG),VL\n         MVC   MSG,=CL8'PXP000'   REINIT MSG ID\n         B     BBB060\nAAA060   CALL  ISPLINK,(TBDISPL,PXPTABLE),VL\nBBB060   ST    R15,RC             SAVE THE RC\n         C     R15,=F'4'          END KEY HIT\n         BH    ENTRY800           YES\n         SPFVCOPY (ZCMD,48)    NO-GET ZCMD\n         OC    ZCMD,BLANKS        UPPER CASE\n         OC    PXPSEL,BLANKS      UPPER CASE\n         MVI   MOREFLAG,C'1'      ASSUME MULTIPLE LINES ENTRY OR SCROLL\n*----------------------------------------------------------------------\n*        CHECK INPUT COMMAND LINE\n*----------------------------------------------------------------------\nENTRY070 CLI   ZCMD,C' '          COMMAND ENTERED ?\n         BE    EXIT070            NO - OK\n         MVI   MOREFLAG,C'0'      RESET IF PRIMARY LINE CMD ENTERED\n         CLC   ZCMD(2),=C'RI'          SCROLL RIGHT ?\n         BE    GGG070                  YES - DO IT\n         CLC   ZCMD(2),=C'LE'          SCROLL LEFT ?\n         BE    HHH070                  YES - DO IT\n         CLC   ZCMD(2),=C'L '    LOCATE ?\n         BNE   CCC070             NO\n         MVC   ZSCROLLA,=CL3'MAX'\n         BAL   R14,ENTRY960  SIMULATE A SCROLL MAX TO CREATE ENTIRE TBL\n         BAL   R14,ENTRY950       FORM QNAME\n         MVC   SAVQNAM,QNAM  MOVE SELECTED QUALIF NAME\n*        MVC   PXPQNAM,QNAM  MOVE SELECTED QUALIF NAME FOR TBSCAN\n         TM    FLAG2,SORTNAM      ARE WE IN NAME SEQUENCE ?\n         BO    AAA070             YES - OK\n         MVC   SORTLIST,=CL40'(PXPQNAM,C,A)'\n         CALL  ISPLINK,(TBSORT,PXPTABLE,SORTLIST),VL\n         OI    FLAG2,SORTNAM      SET FLAG\nAAA070   EQU   *\n         CALL  ISPLINK,(TBBOTTOM,PXPTABLE),VL\n*        CALL  ISPLINK,(TBTOP,PXPTABLE),VL\n*        CALL  ISPLINK,(TBSCAN,PXPTABLE,ARGUMENT,,ROW,NEXT,,,GE),VL\n*        CALL  ISPLINK,(TBSKIP,PXPTABLE,ROW),VL\n*        B     ENTRY060\nBBB070   EQU   *\n         CALL  ISPLINK,(TBSKIP,PXPTABLE,MINUS1),VL\n         LTR   R15,R15            ZERO?\n         BNZ   ENTRY060           NO - TOP OF TABLE\n         CLC   PXPQNAM,SAVQNAM    YES - COMPARE NAMES\n         BH    BBB070             TRY AGAIN\n         B     ENTRY060           LOCATE IS POSITIONED\nCCC070   EQU   *\n         CLC   ZCMD(2),=C'S '     SELECT ?\n         BNE   DDD070             NO\n         MVC   PXPSEL,=C'B '      YES - SET TO BROWSE\n         BAL   R14,ENTRY950       SET UP QNAM\n         B     EXIT070\nDDD070   EQU   *\n         CLC   ZCMD(5),=C'SORT '  SORT ?\n         BE    ENTRY090           YES\n         CLC   ZCMD(5),=C'SAVE '  SAVE DIRECTORY LIST?\n         BNE   KKK070             NO\n         MVC   PXPLISTV+256(128),BLANKS     YES-INIT 3RD HEADING LINE\n         MVC   ZSCROLLA,=CL3'MAX'\n         BAL   R14,ENTRY960  SIMULATE A SCROLL MAX TO CREATE ENTIRE TBL\n         XC    SPFTRT,SPFTRT       CLEAR\n         MVI   SPFTRT,X'FF'       SET FOR\n         MVC   SPFTRT+1(255),SPFTRT  ALL BUT\n         MVI   SPFTRT+C' ',X'00'     A BLANK\n         TRT   ZCMD+4(30),SPFTRT  FIND NEXT NONBLANK BEYOND SAVE CMD\n         BZ    DDD075        NONE-USE DEFAULT:SAVE 2\n         CLI   0(R1),C'1'         IS SAVE 1 REQUESTED\n         BNE   DDD071          NO- USE LINELEN=128 FOR MULTIPLE LNES\n         MVC   LINELEN,=F'256' YES-SET LINELEN=256 FOR TRUNCAT TO OCCUR\nDDD071   CLI   0(R1),C'3'         IS SAVE 3 REQUESTED\n         BNE   DDD075             NO - DEFAULT SAVE 2 REQUESTED\n         MVI   LISTFLAG,C'3'      YES\n         MVC  PXPLISTV+256(46),=C'BKUPDATE RSTRDATE REMVDATE USER ACCOU+\n               NT SYSTEM'\nDDD075   MVC   PXPLISTV(256),HEADING\n         CALL  ISPLINK,(LIST,LISTVAR,LINELEN,PAGE),VL\n         MVC   PXPLISTV(256),BLANKS\n         MVC   PXPLISTV+256(128),BLANKS\n         CALL  ISPLINK,(LIST,LISTVAR,LINELEN),VL\n         CALL  ISPLINK,(TBTOP,PXPTABLE),VL\nEEE070   CALL  ISPLINK,(TBSKIP,PXPTABLE),VL\n         LTR   R15,R15          FINISHED\n         BNZ   FFF070           YES\n         MVC   PXPLISTV(25),PXPQNAM\n         MVC   PXPLISTV+26(07),PXPCORE\n         MVC   PXPLISTV+34(08),PXPLKDAT\n         MVC   PXPLISTV+43(08),PXPALIAS\n         MVC   PXPLISTV+52(10),PXPATTR\n         MVC   PXPLISTV+63(01),PXPAC\n         MVC   PXPLISTV+65(08),PXPPRODT\n         MVC   PXPLISTV+74(08),PXPACCDT\n         MVC   PXPLISTV+83(08),PXPACCTM\n         MVC   PXPLISTV+92(08),PXPMNTDT\n         MVC   PXPLISTV+101(08),PXPMNTTM\n         MVC   PXPLISTV+110(08),PXPEXCDT\n         MVC   PXPLISTV+119(03),PXPACTN\n         MVC   PXPLISTV+123(05),PXPACMOD   LINE WILL BREAK HERE: LL=128\n         MVC   PXPLISTV+129(05),PXPACTOT\n         MVC   PXPLISTV+135(05),PXPEXECS\n         MVC   PXPLISTV+141(08),PXPJOBNM\n         MVC   PXPLISTV+150(08),PXPSTPNM\n         MVC   PXPLISTV+159(08),PXPADDAT\n         MVC   PXPLISTV+168(01),PXPZAPS\n         MVC   PXPLISTV+170(10),PXPPVSRC\n         MVC   PXPLISTV+181(02),PXPPVCLS\n         MVC   PXPLISTV+184(03),PXPPVLVL\n         MVC   PXPLISTV+188(08),PXPPVDAT\n         MVC   PXPLISTV+197(03),PXPPVTYP\n         MVC   PXPLISTV+201(15),PXPPVDSN   TRUNCATED\n         MVC   PXPLISTV+216(20),PXPOWNER\n         MVC   PXPLISTV+237(19),PXPDESCR   MUST TRUNCATE, MAX VDEF=256\n         CLI   LISTFLAG,C'3'        WAS SAVE 3 REQUESTED\n         BNE   EEE075                       NO\n         MVC   PXPLISTV+257(08),PXPBKPDT    3RD LINE DATA\n         MVC   PXPLISTV+266(08),PXPRSTDT\n         MVC   PXPLISTV+275(08),PXPRMVDT\n         MVC   PXPLISTV+284(04),PXPUSER\n         MVC   PXPLISTV+289(08),PXPACCT\n         MVC   PXPLISTV+298(08),PXPSYST\nEEE075   CALL  ISPLINK,(LIST,LISTVAR,LINELEN),VL\n         B     EEE070\nFFF070   MVC   MSG,=CL8'PXP012'\n         CALL  ISPLINK,(LOG,MSG),VL       LOG THE MSG\n         MVC   LINELEN,=F'128'  RESET DEFAULT LINELEN\n         MVI   LISTFLAG,C'0'    RESET LIST FLAG\n         BAL   R14,ENTRY940     RESET CRP\n         B     ENTRY060\nGGG070   EQU   *\n         CLI   PANEL+4,C'5'            MAX RIGHT ALREADY ?\n         BE    III070                  YES - OK\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT,X'FF'            SET FOR\n         MVC   SPFTRT+1(255),SPFTRT      ALL BUT\n         MVI   SPFTRT+C' ',X'00'           A BLANK\n         TRT   ZCMD+5(30),SPFTRT  FIND NEXT NONBLANK BEYOND 'RIGHT' CMD\n         BZ    GGG071        NONE-USE DEFAULT SCROLL OF 1 PANEL\n         CLI   0(R1),C'M'              IS MAX REQUESTED\n         BNE   GGG072             NO - USE WHATEVER SPECIFIED\nGGG070A  MVI   PANEL+4,C'5'       YES- SET TO MAX RIGHT\n         B     III070\nGGG071   XR    R1,R1                   CLEAR R1\n         ICM   R1,1,PANEL+4            GET CURRENT PANEL ID\n         LA    R1,1(R1)                ADD 1\n         STCM  R1,1,PANEL+4            STORE NEW PANEL ID\n         B     III070                  POSITION TABLE\nGGG072   XR    R2,R2                   CLEAR R2\n         NI    0(R1),X'0F'             GET RID OF SIGN\n         ICM   R2,1,0(R1)              GET SCROLL AMT\n         XR    R1,R1                   CLEAR R1\n         NI    PANEL+4,X'0F'         GET RID OF SIGN\n         ICM   R1,1,PANEL+4            GET CURRENT PANEL ID\n         AR    R1,R2                   ADD\n         C     R1,=F'5'\n         BH    GGG070A\n         STCM  R1,1,PANEL+4            STORE NEW PANEL ID\n         OI    PANEL+4,X'F0'           RESTORE SIGN\n         B     III070                  POSITION TABLE\nHHH070   EQU   *\n         CLI   PANEL+4,C'0'            MAX LEFT ALREADY ?\n         BE    III070                  YES - OK\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT,X'FF'            SET FOR\n         MVC   SPFTRT+1(255),SPFTRT      ALL BUT\n         MVI   SPFTRT+C' ',X'00'           A BLANK\n         TRT   ZCMD+5(30),SPFTRT  FIND NEXT NONBLANK BEYOND 'LEFT ' CMD\n         BZ    HHH071        NONE-USE DEFAULT SCROLL OF 1 PANEL\n         CLI   0(R1),C'M'              IS MAX REQUESTED\n         BNE   HHH072             NO - USE WHATEVER SPECIFIED\nHHH070A  MVI   PANEL+4,C'0'       YES- SET TO MAX LEFT\n         B     III070\nHHH071   XR    R1,R1                   NO - CLEAR R1\n         ICM   R1,1,PANEL+4            GET CURRENT PANEL ID\n         BCTR  R1,0                    SUBTRACT 1\n         STCM  R1,1,PANEL+4            STORE NEW PANEL ID\n         B     III070\nHHH072   XR    R2,R2                   CLEAR R2\n         NI    0(R1),X'0F'             GET RID OF SIGN\n         ICM   R2,1,0(R1)              GET SCROLL AMT\n         XR    R1,R1                   CLEAR R1\n         NI    PANEL+4,X'0F'         GET RID OF SIGN\n         ICM   R1,1,PANEL+4            GET CURRENT PANEL ID\n         SR    R1,R2                   SUBTRACT\n         BM    HHH070A                 USE PANEL 0 IF NEGATIVE\n         STCM  R1,1,PANEL+4            STORE NEW PANEL ID\n         OI    PANEL+4,X'F0'           RESTORE SIGN\nIII070   EQU   *                       POSITION TABLE\n         BAL   R14,ENTRY940\n         B     ENTRY060                DISPLAY\nKKK070   CLC   ZCMD(5),=C'RESET'\n         BNE   LLL070                  NO\n         BAL   R14,ENTRY940       KEEP CRP\n         B     ENTRY060\nLLL070   CLC   ZCMD(8),=C'DIAGNOSE' CHNGE DIAGNOSE SETTING?\n         BNE   MMM070             NO\n         MVI   PXPDIAG,C'Y'       YES- SET 'Y' AS DEFAULT\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT,X'FF'            SET FOR\n         MVC   SPFTRT+1(255),SPFTRT      ALL BUT\n         MVI   SPFTRT+C' ',X'00'           A BLANK\n         TRT   ZCMD+9(30),SPFTRT  FIND NEXT NONBLANK BEYOND 'DIAGNOSE'\n         BZ    LLL071        NONE-USE DEFAULT OF DIAGNOSE ON\n         CLC   0(3,R1),=C'OFF'           IS DIAGNOSE OFF REQU\n         BNE   LLL071                  NO\n         MVI   PXPDIAG,C'N'            YES\nLLL071   SPFVREPL (PXPDIAG,1)          SET PXPDIAG VALUE\n         MVC   MSG,=CL8'PXP031'        DIAGNOSE MSG\n         BAL   R14,ENTRY940     RESET CRP\n         B     ENTRY060\nMMM070   CLC   ZCMD(7),=C'CONFIRM' CHNGE CONFIRM DELETE SETTING?\n         BNE   ZZZ070             NO\n         MVI   PXPCONF,C'Y'       YES- SET 'Y' AS DEFAULT\n         XC    SPFTRT,SPFTRT           CLEAR\n         MVI   SPFTRT,X'FF'            SET FOR\n         MVC   SPFTRT+1(255),SPFTRT      ALL BUT\n         MVI   SPFTRT+C' ',X'00'           A BLANK\n         TRT   ZCMD+8(30),SPFTRT  FIND NEXT NONBLANK BEYOND 'CONFIRM'\n         BZ    MMM071        NONE-USE DEFAULT OF CONFIRM ON\n         CLC   0(3,R1),=C'OFF'           IS CONFIRM OFF REQU\n         BNE   MMM071                  NO\n         MVI   PXPCONF,C'N'            YES\nMMM071   SPFVREPL (PXPCONF,1)          SET PXPCONF VALUE\n         MVC   MSG,=CL8'PXP032'        CONFIRM MSG\n         BAL   R14,ENTRY940     RESET CRP\n         B     ENTRY060\nZZZ070   MVC   MSG,=CL8'PXP010'        INVALID COMMAND\n         BAL   R14,ENTRY940       KEEP CRP\n         B     ENTRY060\nEXIT070  EQU   *                  RETURN TO PXP0000 TO PROCESS SEL CODE\n         CLC   ZTDADD,YES         NEED TO ADD ROWS?\n         BNE   AAAEOJ  NO- RETURN TO PXP0000-REQUIRES PXPSEL & PXPQNAM\n         BAL   R14,ENTRY960  YES- ADD TO TABLE WHEN SCROLLING RTN\n         B     ENTRY060           RETURN\n*----------------------------------------------------------------------\n*        SORT COMMAND\n*----------------------------------------------------------------------\nENTRY090 DS    0H\n         XC    SPFTRT,SPFTRT      CLEAR\n         MVI   SPFTRT+C' ',X'FF'  SET FOR A BLANK\n         TRT   ZCMD,SPFTRT        FIND FIRST BLANK\n         LR    R3,R1              COPY ADDR OF BLANK\n         MVI   SPFTRT,X'FF'       SET FOR\n         MVC   SPFTRT+1(255),SPFTRT  ALL BUT\n         MVI   SPFTRT+C' ',X'00'     A BLANK\n         TRT   0(30,R3),SPFTRT    FIND NEXT NONBLANK\n         BNZ   AAA090             OK\n         MVI   FLAG2,SORTNAM DIDNT FIND A NONBLANK-DEFAULT TO NAME SORT\n         MVC   SORTLIST,=CL40'(PXPQNAM,C,A,PXPACCDT,C,D,PXPACCTM,C,D)'\n         B     ZZZ090\nAAA090   MVC   SAVFLAG2,FLAG2     SAVE CURRENT SORT ORDER FLAG\n*\n         MVI   FLAG2,SORTNAM\n         MVC   SORTLIST,=CL40'(PXPQNAM,C,A,PXPACCDT,C,D,PXPACCTM,C,D)'\n         CLC   0(4,R1),=C'NAME'\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTCOR\n         MVC   SORTLIST,=CL40'(PXPCORE,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'CORE'\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTLDT\n         MVC   SORTLIST,=CL40'(PXPLKDAT,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'LINK'\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTALIS\n         MVC   SORTLIST,=CL40'(PXPALIAS,C,A,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'ALIA'\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTAC\n         MVC   SORTLIST,=CL40'(PXPAC,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'AC  '\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTSRC\n         MVC   SORTLIST,=CL40'(PXPPVDSN,C,A,PXPPVSRC,C,A,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'PVNM'\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTACCD\n         MVC   SORTLIST,=CL40'(PXPACCDT,C,D,PXPACCTM,C,D)'\n         CLC   0(4,R1),=C'ACCD'\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTMNT\n         MVC   SORTLIST,=CL40'(PXPMNTDT,C,D,PXPMNTTM,C,D)'\n         CLC   0(4,R1),=C'MAIN'\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTEXC\n         MVC   SORTLIST,=CL40'(PXPEXCDT,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'EXEC'\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTJOB\n         MVC   SORTLIST,=CL40'(PXPJOBNM,C,A,PXPSTPNM,C,A,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'JOB '\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTACM\n         MVC   SORTLIST,=CL40'(PXPACMOD,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'ACCM'  ACCESSES MODIF\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTACT\n         MVC   SORTLIST,=CL40'(PXPACTOT,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'ACCT'  ACCESSES TOT\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTEXCN\n         MVC   SORTLIST,=CL40'(PXPEXECS,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'EXEM'  EXECS MODIF\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTACTN\n         MVC   SORTLIST,=CL40'(PXPACTN,C,A,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'ACTN'\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTPROD\n         MVC   SORTLIST,=CL40'(PXPPRODT,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'PROD'  PROD DATE\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTADDT\n         MVC   SORTLIST,=CL40'(PXPADDAT,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'ADD '  ADD DATE\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTZAPS\n         MVC   SORTLIST,=CL40'(PXPZAPS,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'ZAPS'  ZAPS\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTOWN\n         MVC   SORTLIST,=CL40'(PXPOWNER,C,A,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'OWN '  OWNER\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTREST\n         MVC   SORTLIST,=CL40'(PXPRSTDT,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'REST'  RESTORE DATE\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTREMV\n         MVC   SORTLIST,=CL40'(PXPRMVDT,C,D,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'REMV'  REMOVE DATE\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTUSER\n         MVC   SORTLIST,=CL40'(PXPUSER,C,A,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'USER'  USER\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTACC\n         MVC   SORTLIST,=CL40'(PXPACCT,C,A,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'ACC '  ACCOUNT\n         BE    ZZZ090\n*\n         MVI   FLAG2,SORTSYST\n         MVC   SORTLIST,=CL40'(PXPSYST,C,A,PXPQNAM,C,A)'\n         CLC   0(4,R1),=C'SYST'  SYSTEM\n         BE    ZZZ090\n*\n         MVC   FLAG2,SAVFLAG2\nYYY090   MVC   MSG,=CL8'PXP011'   INVALID SORT FIELD\n         BAL   R14,ENTRY940       RESET CRP\n         B     ENTRY060\nZZZ090   MVC   ZSCROLLA,=CL3'MAX'\n         BAL   R14,ENTRY960  SIMULATE A SCROLL MAX TO CREATE ENTIRE TBL\n         CALL  ISPLINK,(TBSORT,PXPTABLE,SORTLIST),VL\n         MVC   MSG,=CL8'PXP026'           DIRECTORY SORTED\n         CALL  ISPLINK,(LOG,MSG),VL       LOG THE MSG\n         B     ENTRY060\n*----------------------------------------------------------------------\n*        CLOSE TABLE\n*----------------------------------------------------------------------\n*NTRY800 CLC   ZTDSELS,=F'0'   HAVE WE FINISHED ALL LINE CMDS YET\n*        BE    EXIT800         YES\n*        MVI   MOREFLAG,C'1'\n*        B     AAAEOJ\nENTRY800 CALL  ISPLINK,(TBEND,PXPTABLE),VL\n         SPFVDEL (PXPQNAM,PXPCORE,PXPLKDAT,PXPATTR,PXPAC,PXPTABLE,     +\n               PXPPVSRC,PXPALIAS,PXPZAPS,PXPPVCLS,PXPACTN,PXPPVLVL,    +\n               PXPACMOD,PXPACTOT,PXPEXECS,PXPOWNER,PXPACCTM,PXPMNTDT,  +\n               PXPMNTTM,PXPEXCDT,PXPJOBNM,PXPSTPNM,PXPPRODT,PXPADDAT,  +\n               PXPPVDAT,PXPACCDT,PXPPVTYP,PXPPVDSN,PXPDESCR)\n         SPFVDEL (PXPBKPDT,PXPRSTDT,PXPRMVDT,PXPUSER,PXPACCT,PXPSYST)\n         MVI   REINVK,C'0'    RESET FLAG\n         MVI   MOREFLAG,C'0'  RESET FLAG\n         MVI   FLAG2,X'00'    RESET FLAG\n         MVC   ADDNUM,=F'100' RESET\n         CLI   EOFFLAG,C'1'   WAS FILEA FINISHED\n         BE    AAAEOJ                YES\n         BAL   R14,ENTRY970   NO- CLOSE/FREEPOOL/UNALLOC\n*        MVC   ZDEL,SAVZDEL   RESET THE COMMAND DELIMITER\n*        SPFVREPL (ZDEL,1)\n*----------------------------------------------------------------------\n*        END OF JOB\n*----------------------------------------------------------------------\nAAAEOJ   SPFVPUT  (PXPSCRL),PROFILE\n         L     R15,RC\n         C     R15,=F'4'\n         BH    BBBEOJ      END ENTERED\n         L     R1,ELTPR    ADD 1 TO ELEMENTS PROCESSED\n         LA    R1,1(R1)\n         ST    R1,ELTPR\nEOJ      EQU   *\n         #RTN              RETURN TO PXP0000\n         SPACE 1\nBBBEOJ   L     R1,ELTPR    GET TOTAL NUMBER OF ELEMENTS PROCESSED\n         CVD   R1,DBWRD\n         MVC   EDITWRK,EDIT5\n         ED    EDITWRK,DBWRD+5\n         MVC   PXPELTPR,EDITWRK+1\n         OI    PXPELTPR+4,X'F0'       SET SIGN\n         MVC   MSG,=CL8'PXP005'\n         SPFVREPL (MSG,8)\n         L     R15,RC\n         B     EOJ\n*----------------------------------------------------------------------\n*        READ FILEA FOR DIRECTORY STATS\n*----------------------------------------------------------------------\nENTRY900 DS    0H\n         ST    R14,ST900          SAVE ADDR\nLOOP900  GET   FILEA          GET A DIRECTORY REC USING DIRENTRY DSECT\n         LR    R4,R1\n         CLI   CIRTYPE,C'F'       IS THIS AN FIR RECORD\n         BNE   NOTFIR           NO\n         XC    ZTDLROWS,ZTDLROWS    CLEAR\n         MVC   ZTDLROWS+2(2),EIRUSED YES-GET NUMBER OF ELEMENTS IN LIB\n         B     LOOP900         GET ANOTHER RECORD\nNOTFIR   CLI   CIRTYPE,C'E'       IS THIS AN EIR RECORD\n         BE    AAA900           YES\n         CLI   CIRTYPE,C'X'       IS THIS AN XIR RECORD\n         BNE   LOOP900            NO - GET NEXT REC\n         CLI   XFLAG,C' '      YES-IS THERE PAN SOURCE INFO\n         BE    LOOP900            NO -(XFLAG=M OR I FOR SOURCE INFO)\n         CLI   XIRHIT,C'1'    YES-IS HIT XIR FLAG ALREADY SET\n         BE    LOOP900       YES- DONT NEED ANY MORE XIR INFO\n         CLI   RECWAIT,C'1'  NO-IS REC WAITING TO BE ADDED TO TABLE\n         BNE   LOOP900          NO - THE CORRESPONDING EIR NOT PICKED\n         BAL   R14,ENTRY920       YES- PICK UP SOURCE FROM FIRST XIR\n         MVI   XIRHIT,C'1'        SET HIT XIR FLAG\n         B     LOOP900            LOOK FOR NEXT EIR\n         SPACE 1\nAAA900   CLI   RECWAIT,C'1'   IS A REC WAITING TO BE ADDED TO TABLE\n         BNE   BBB900         NO\n         BAL   R14,ENTRY930   YES-ADD PREVIOUS ELEMENT TO TABLE\n         MVI   RECWAIT,C'0'       RESET FLAG\n         MVI   XIRHIT,C'0'       RESET FLAG\nBBB900   B     CCC900             BYPASS GENERIC TEST\n         EX    R5,COMPELT         IS GENERIC ELT NAME = EIR ELT NAME\n         BNE   LOOP900            NO\nCCC900   MVI   RECWAIT,C'1'  YES- SET REC FLAG WAITING TO ADD TO TABLE\n         BAL   R14,ENTRY910       PICK UP EIR INFO\n         BCT   R7,LOOP900         GET NEXT REC - DEPENDING ON ADDNUM\n         B     EXIT900            THIS BATCH FINISHED\n         SPACE 1\nCOMPELT  CLC   0(0,R6),CELEMENT\n         SPACE 1\nZZZ900   EQU   *\n         CLI   RECWAIT,C'1'  IS LAST REC WAITING TO BE ADDED TO TBL\n         BNE   ZZZ901         NO\n         BAL   R14,ENTRY930   YES-ADD LAST ELEMENT TO TABLE\nZZZ901   MVI   RECWAIT,C'0'      RESET\n         MVI   XIRHIT,C'0'      RESET\n         MVI   BBB900+1,X'F0'       RESET\n         BAL   R14,ENTRY970      CLOSE/FREEPOOL/UNALLOC\n         MVI   EOFFLAG,C'1'\n         MVC   ZTDLROWS,=F'0'    LET ISPF CALCULATE TRUE Y VALUE\nEXIT900  L     R14,ST900\n         BR    R14\n*----------------------------------------------------------------------\n*        FORMAT THE STATS\n*----------------------------------------------------------------------\nENTRY910 DS    0H\n         ST    R14,ST91X          SAVE ADDR\n         MVC   SAVAREA(SAVAREAL),BLANKS  MASS BLANK OUT OF SAVXXX FLDS\n         MVC   SAVAREA2(SAVAREL2),BLANKS MASS BLANK OUT OF SAVXXX FLDS\n*\n         MVC   WRKQNAM1,CGROUP\n         MVC   WRKQNAM2,CELEMENT\n         MVC   WRKQNAM3,=C'EXEC'\n         CLI   CTYPE,C'E'\n         BE    AAA910\n         MVC   WRKQNAM3,=C'CNTL'\n         CLI   CTYPE,C'P'\n         BE    AAA910\n         MVC   WRKQNAM3,=C'OBJ '\nAAA910   MVC   WRKQNAM4,CCLASS\n         MVC   SAVQNAM,WRKQNAM\n         CLI   CTYPE,C'E'         FOR NON-EXECUTABLE ELTS SKIP REST\n         BNE   KKK910\n         MVC   SAVLKDAT,LINKDATE  COPY DATE\n         MVC   SAVALIAS,ALIAS     COPY ALIAS\n         ICM   R1,15,CORESIZ      LOAD CORE SIZE\n         CVD   R1,DBWRD\n         UNPK  SAVCORE(7),DBWRD+4(4)\n         OI    SAVCORE+6,X'F0'      SET SIGN\n         MVC   SAVAC,AUTHORIZ+1    GET BINARY AC CODE\n         OI    SAVAC,X'F0'            PUT IN SIGN\n         MVC   SAVATTR(6),ATTRIBUT    MOVE IN RN,RU,OV,TS,OL,SC\n         MVC   SAVATTR+8(1),REFR              RF\n         MVC   SAVATTR+9(1),NEDIT          NON-EDITABLE\n         MVI   SAVATTR+6,C'N'\n         CLI   EXEC,C'Y'             IS MODULE EXECUTABLE\n         BE    BBB910       YES-MODUL IS EXEC, HENCE IT NOT NX\n         MVI   SAVATTR+6,C'Y'  NO- IT IS NX\nBBB910   MVI   SAVATTR+7,C'N'\n         CLI   COMP1,C'Y'      IS MODULE DOWNWARD COMPATIBLE TO E-LKED\n         BE    CCC910         YES - DONT MARK IT\n         MVI   SAVATTR+7,C'Y'  NO- IT IS FO (F-LKED ONLY)\nCCC910   XC    SPFTRT,SPFTRT\n         MVI   SPFTRT+C'N',C' '\n         MVI   SPFTRT+C'Y',C'Y'\n         TR    SAVATTR,SPFTRT        BLANK OUT 'NO' ATTR FIELDS\n         CLC   EXECDATE,=C'00/00/00'\n         BE    NOEXECDT\n         MVC   SAVEXCDT,EXECDATE\nNOEXECDT MVC   EDITWRK,EDIT5\n         ED    EDITWRK,EXECS\n         MVC   SAVEXECS,EDITWRK+1\n         OI    SAVEXECS+4,X'F0'      SET SIGN\n         MVC   SAVZAPS,ZAPS\n         TR    SAVZAPS,SPFTRT        BLANK OUT 'NO' ZAP\nKKK910   EQU   *\n         MVC   SAVACCDT,ACCSDATE\n         MVC   SAVACCTM,ACCSTIME\n         MVC   SAVMNTDT,MAINDATE\n         MVC   SAVMNTTM,MAINTIME\n         MVC   SAVJOBNM,JOBNAME\n         MVC   SAVSTPNM,STEPNAME\n         MVC   SAVOWNER,OWNER\n         MVC   SAVDESCR,DESCRIPT\n         MVC   SAVACTN,ACTION\n         CLC   BKUPDATE,=C'00/00/00'\n         BE    NOBKUPDT\n         MVC   SAVBKPDT,BKUPDATE\nNOBKUPDT CLC   RESTRDAT,=C'00/00/00'\n         BE    NORSTRDT\n         MVC   SAVRSTDT,RESTRDAT\nNORSTRDT CLC   REMVDATE,=C'00/00/00'\n         BE    NOREMVDT\n         MVC   SAVRMVDT,REMVDATE\nNOREMVDT MVC   SAVUSER,USER\n         MVC   SAVACCT,ACCOUNT\n         MVC   SAVSYST,SYSTEM\n         CLC   PRODDATE,=C'00/00/00'\n         BE    NOPROD\n         MVC   SAVPRODT,PRODDATE\nNOPROD   MVC   SAVADDAT,DATEADD\n         MVC   EDITWRK,EDIT5\n         ED    EDITWRK,ACCESSES\n         MVC   SAVACMOD,EDITWRK+1\n         OI    SAVACMOD+4,X'F0'      SET SIGN\n         MVC   EDITWRK,EDIT5\n         ED    EDITWRK,TACCESS\n         MVC   SAVACTOT,EDITWRK+1\n         OI    SAVACTOT+4,X'F0'      SET SIGN\n         L     R14,ST91X\n         BR    R14\n*----------------------------------------------------------------------\n*        FORMAT SOURCE STATS FROM XIR RECORD\n*----------------------------------------------------------------------\nENTRY920 DS    0H\n         ST    R14,ST920          SAVE ADDR\n         MVC   SAVPVSRC,SELEMENT  COPY PANV SOURCE MODULE NAME\n         MVC   SAVPVCLS,SCLASS    COPY PANV SOURCE MODULE CLASS\n         MVC   EDITWRK,EDIT5\n         ED    EDITWRK(4),SLEVEL\n         MVC   SAVPVLVL,EDITWRK+1\n         OI    SAVPVLVL+2,X'F0'      SET SIGN\n         MVC   SAVPVDAT,SDATEMNT  COPY PANV SOURCE MODULE MAINT DATE\n         MVC   SAVPVTYP,STYPE     COPY FIRST 3 CHARS OF PV TYPE\n         MVC   SAVPVDSN,SDSN      GET PANV DSN\n         L     R14,ST920\n         BR    R14\n*----------------------------------------------------------------------\n*        POSITION THE CRP &  ADD A ROW TO THE TABLE\n*----------------------------------------------------------------------\nENTRY930 DS    0H\n         ST    R14,ST930          SAVE ADDR\n         CALL  ISPLINK,(TBVCLEAR,PXPTABLE),VL\n         CALL  ISPLINK,(TBBOTTOM,PXPTABLE),VL\n         MVC   PXPSEL,BLANKS      CLEAR\n         MVC   PXPQNAM,SAVQNAM\n         MVC   PXPCORE,SAVCORE\n         MVC   PXPLKDAT,SAVLKDAT\n         MVC   PXPALIAS,SAVALIAS\n         MVC   PXPATTR,SAVATTR\n         MVC   PXPAC,SAVAC\n         MVC   PXPPVSRC,SAVPVSRC\n         MVC   PXPPVCLS,SAVPVCLS\n         MVC   PXPPVLVL,SAVPVLVL\n         MVC   PXPPVDAT,SAVPVDAT\n         MVC   PXPPVTYP,SAVPVTYP\n         MVC   PXPPVDSN,SAVPVDSN\n         MVC   PXPDESCR,SAVDESCR\n         MVC   PXPACTN,SAVACTN\n         MVC   PXPACMOD,SAVACMOD\n         MVC   PXPACTOT,SAVACTOT\n         MVC   PXPEXECS,SAVEXECS\n         MVC   PXPACCDT,SAVACCDT\n         MVC   PXPACCTM,SAVACCTM\n         MVC   PXPMNTDT,SAVMNTDT\n         MVC   PXPMNTTM,SAVMNTTM\n         MVC   PXPEXCDT,SAVEXCDT\n         MVC   PXPJOBNM,SAVJOBNM\n         MVC   PXPSTPNM,SAVSTPNM\n         MVC   PXPOWNER,SAVOWNER\n         MVC   PXPPRODT,SAVPRODT\n         MVC   PXPADDAT,SAVADDAT\n         MVC   PXPZAPS,SAVZAPS\n         MVC   PXPBKPDT,SAVBKPDT\n         MVC   PXPRSTDT,SAVRSTDT\n         MVC   PXPRMVDT,SAVRMVDT\n         MVC   PXPUSER,SAVUSER\n         MVC   PXPACCT,SAVACCT\n         MVC   PXPSYST,SAVSYST\n         CALL  ISPLINK,(TBADD,PXPTABLE,,ORDER,MULT),VL  MULT FOR EFFIC.\n*        LTR   R15,R15               NO MORE DUPS\n*        BZ    EXIT930\n*        TPUT  PXPQNAM,25      DUPLICATE KEY WITH MODE=I OR D, RC=8\nEXIT930  L     R14,ST930\n         BR    R14\n*----------------------------------------------------------------------\n*        RESET THE CRP\n*----------------------------------------------------------------------\nENTRY940 DS    0H\n         ST    R14,ST940               SAVE R14\n         SPFTBLRS PXPTABLE\n         L     R14,ST940\n         BR    R14\nST940    DC    F'-1'\n*----------------------------------------------------------------------\n*        SET UP FULLY QUALIFIED NAME FOR S & L CMDS\n*----------------------------------------------------------------------\nENTRY950 DS    0H\n         ST    R14,ST950               SAVE R14\n         MVC   QNAM,PXPQNAM       INITIAL NAME WITH TOP OF TABLE\n         XC    SPFTRT,SPFTRT      CLEAR\n         MVI   SPFTRT,X'FF'       SET FOR\n         MVC   SPFTRT+1(255),SPFTRT  ALL BUT\n         MVI   SPFTRT+C' ',X'00'     A BLANK\n         TRT   ZCMD+1(30),SPFTRT  FIND NEXT NONBLANK BEYOND S/L CMD\n         BZ    ZZZ070             DIDN'T FIND A NONBLANK\n         MVC   WRKQNAMH,0(R1) YES-SAVE NAME ON S/L CMD\n         ST    R1,SAVADDR         SAVE THE BEGINNING POSITION\n         LR    R3,R1              SAVE THIS POSITION\n         XC    SPFTRT,SPFTRT      CLEAR\n         MVI   SPFTRT+C'.',X'FF'  FIND PERIOD TO GET GRP NAME\n         MVI   SPFTRT+C' ',X'FF'  FIND ' ' TO GET GRP NAME\n         TRT   0(9,R3),SPFTRT     FIND '.' OR ' '\n         BZ    ZZZ070             DIDN'T FIND A '.', ' '\n         MVC   0(17,R1),BLANKS  BLANK OUT EVERYTHING AFTER (& INCL) '.'\n         MVC   GRP,0(R3)          MOVE SELECTED GRP NAME\n         CLM   R2,1,=C' '         WAS BLANK FOUND\n         BE    EXIT950            YES - NO MORE QUALIFIERS\n         MVC   0(25,R3),WRKQNAMH  RESET TO LOOK FOR ELT\n         LA    R3,1(R1)           POINT PAST '.'\n         XC    SPFTRT,SPFTRT      CLEAR\n         MVI   SPFTRT+C'/',X'FF'  FIND / TO GET ELT NAME OR\n         MVI   SPFTRT+C' ',X'FF'  FIND ' ' TO GET ELT NAME\n         TRT   0(9,R3),SPFTRT     FIND '/' OR ' '\n         BZ    ZZZ070             DIDN'T FIND A '/' OR ' '\n         MVC   0(8,R1),BLANKS  BLANK OUT EVERYTHING AFTER (& INCL) '/'\n         MVC   ELT,0(R3)          MOVE SELECTED ELT NAME\n         CLM   R2,1,=C' '         WAS BLANK FOUND\n         BE    EXIT950            YES - NO MORE QUALIFIERS\n         L     R3,SAVADDR\n         MVC   0(25,R3),WRKQNAMH  RESET TO LOOK FOR TYPE\n         LA    R3,1(R1)           POINT PAST '/'\n         XC    SPFTRT,SPFTRT      CLEAR\n         MVI   SPFTRT+C',',X'FF'  FIND , TO GET TYPE (CANT USE ;)\n         MVI   SPFTRT+C' ',X'FF'  FIND ' ' TO GET TYP NAME\n         TRT   0(5,R3),SPFTRT     FIND ','\n         BZ    ZZZ070             DIDN'T FIND A ',' OR ' '\n         MVC   0(3,R1),BLANKS  BLANK OUT EVERYTHING AFTER (& INCL) ','\n         MVC   TYPE,0(R3)         MOVE SELECTED TYPE NAME\n         CLM   R2,1,=C' '         WAS BLANK FOUND\n         BE    EXIT950            YES - NO MORE QUALIFIERS\n         L     R3,SAVADDR         MORE QUALIFIERS\n         MVC   0(25,R3),WRKQNAMH  RESET TO GET CLASS (STAT & MODE)\n         LA    R3,1(R1)           POINT PAST ','\n         MVC   STAT(2),0(R3)      MOVE SELECTED STAT & MODE\nEXIT950  MVC   PXPQNAM,QNAM       MOVE SELECTED ELT NAME\n         L     R14,ST950\n         BR    R14\nST950    DC    F'-1'\n*----------------------------------------------------------------------\n*        ADD TO TABLE WHEN SCROLLING\n*----------------------------------------------------------------------\nENTRY960 DS    0H\n         ST    R14,ST960               SAVE R14\n         SPFVGET (ZSCROLLA),SHARED   NO\n         CLC   ZSCROLLA,=CL3'MAX'    WAS IT A SCROLL MAX?\n         BNE   AAA960                NO\n         MVC   ZTDAMT,=F'999999'     YES - ADD ALL REMAINING ROWS\nAAA960   CALL  ISPLINK,(TBBOTTOM,PXPTABLE,,,,BOTTOMPT),VL\n         CLI   EOFFLAG,C'1'    TABLE ALREADY FULL?\n         BE    DDD960            YES - DONT NEED TO ADD ANYMORE ENTRIES\n         ICM   R1,15,ZTDLROWS\n         ICM   R15,15,BOTTOM\n         SR    R1,R15      TAKE LESSER OF NUMB OF RECS TO EOF OR ZTDAMT\n         CLM   R1,15,ZTDAMT\n         BL    BBB960\n         MVC   ADDNUM,ZTDAMT\n         B     CCC960\nBBB960   ST    R1,ADDNUM\nCCC960   L     R7,ADDNUM      ADD ADDNUM RECS TO TABLE\n         BAL   R14,ENTRY900          (READ FILE RTN)\nDDD960   CLC   ZSCROLLA,=CL3'MAX'    WAS IT A SCROLL MAX?\n         BE    EXIT960     YES-NOT NECESSARY TO SET ZTDSCRP,ISPF WILL\n         CLC   ZTDSCRP,=F'0'  IS ZTDSCRP = 0\n         BNE   EXIT960        NO\n         ICM   R1,15,BOTTOM   YES\n         A     R1,ADDNUM\n         ST    R1,NEWBOTTM  NEWBOTTM=BOTTOM+ADDNUM\n         ICM   R1,15,ZTDAMT\n         ICM   R15,15,BOTTOM\n         AR    R1,R15\n         ICM   R15,15,ZTDSIZE\n         SR    R1,R15\n         LA    R1,1(R1)\n         ST    R1,REQTOP    REQTOP=BOTTOM+ZTDAMT-ZTDSIZE+1\n         C     R1,NEWBOTTM  IS REQTOP > NEWBOTTOM\n         BH    EEE960              YES\n         STCM  R1,15,ZTDSCRP       NO\n         B     EXIT960\nEEE960   L     R1,NEWBOTTM\n         LA    R1,1(R1)\n         STCM  R1,15,ZTDSCRP   SET ZTDSCRP = NEWBOTTM+1\nEXIT960  L     R14,ST960\n         BR    R14\nST960    DC    F'-1'\n*----------------------------------------------------------------------\n*        CLOSE/FREEPOOL/UNALLOC\n*----------------------------------------------------------------------\nENTRY970 DS    0H\n         ST    R14,ST970               SAVE R14\n         CLOSE   (FILEA)         CLOSE FILES\n         FREEPOOL FILEA           FREE THE BUFFERS\n         SPFALLOC U,DD='FILEA',DISP='DELETE' UNALLOC & DELETE FILEA\n         L     R14,ST970\n         BR    R14\nST970    DC    F'-1'\n*----------------------------------------------------------------------\n*        STORAGE AREAS\n*----------------------------------------------------------------------\nTBCRKEY  DC    CL27'(PXPQNAM PXPACCDT PXPACCTM)'\nTBCRFLD  DC    CL49'(PXPSEL PXPCORE PXPACCT PXPSYST PXPUSER PXPLKDAT '\n         DC    CL50'PXPALIAS PXPATTR PXPAC PXPPVSRC PXPMNTDT PXPMNTTM '\n         DC    CL44'PXPEXCDT PXPACTN PXPACMOD PXPACTOT PXPEXECS '\n         DC    CL45'PXPPRODT PXPADDAT PXPPVDAT PXPPVCLS PXPPVLVL '\n         DC    CL44'PXPZAPS PXPPVDSN PXPDESCR PXPBKPDT PXPRSTDT '\n         DC    CL45'PXPRMVDT PXPJOBNM PXPSTPNM PXPPVTYP PXPOWNER)'\nHEADING  DC    CL42'FULLY QUALIFIED NAME     CORESIZE LINKDATE'\n      DC CL56' ALIAS-OF ATTRIBUTES AC PRODDATE ACCESSDT ACCESSTM MAINT'\n      DC CL56'DT  MAINTTM EXECDT  ACT ACCMOD ACCTOT EXECS JOBNAME STEP'\n      DC CL56'NAME  ADDDATE ZAPS PANNAME CL LVL MNT DATE TYPE LIBRARY '\n      DC CL46'DSN    OWNER               DESCRIPTION        '\nST900    DC    F'-1'\nST91X    DC    F'-1'\nST920    DC    F'-1'\nST930    DC    F'-1'\nMULT     DC    F'100'     NUMBER OF ELEMENTS TO ADD TO TABLE\nRC       DC    F'0'\nNEWBOTTM DS    F     CRP OF NEW BOTTOM ROW\nADDNUM   DC    F'100'  NUMB OF ROWS TO ADD-INITIALLY GET 100\nREQTOP   DS    F     TOP ROW REQUESTED BY END USER SCROLL\nBOTTOMPT DC    CL8'BOTTOM' STORAGE CONTAINING THE BOTTOM VARIABLE\nLISTVAR  DC    CL8'PXPLISTV'\nPXPLISTV DS    CL384      ALLOC 3 LINES OF 128 BYTES FOR SAVE LIST\nLENLISTV DC    A(L'PXPLISTV) LENGTH OF PXPLISTV FOR VDEFINE\nLISTFLAG DC    C'0'     3=SAVE 3 REQUESTED\nPAGE     DC    CL8'PAGE'\nLINELEN  DC    F'128'       2 LINES/DIRECTORY ENTRY\nELTPR    DC    F'0'   NUMBER OF ELEMENTS PROCESSED\nSAVADDR  DC    F'0'   THE BEGINNING POSITION OF THE NAME ON TH S &L CMD\n*NEXT     DC    CL8'NEXT'       FORWARD SCAN\n*GE       DC    CL4'(GE)'       CONDITION LIST FOR TBSCAN\n*ARGUMENT DC    CL9'(PXPQNAM)'  ARGUMENT LIST FOR TBSCAN\nXIRHIT   DC    C'0'       FLAG TO INDICATE IF XIR INFO PICKED UP\nRECWAIT  DC    C'0'       FLAG TO INDICATE IF REC IS TO BE ADDED TO TBL\nEOFFLAG  DC    C'0'       FLAG TO INDICATE WHEN EOF ON FILEA (TBL FULL)\nSAVFLAG2 DC    X'00'\nSAVSEL   DC    CL2' '\nSORTLIST DC    CL40' '\nMINUS1   DC    F'-1'\nQNAM     DS   0CL25     USE THIS AREA TO BUILD ELT NAME FOR S & L CMDS\nGRP      DC    CL8' '\n         DC    C'.'\nELT      DC    CL8' '\n         DC    C'/'\nTYPE     DC    CL4' '\n         DC    C';'\nSTAT     DC    CL1' '\nMODE     DC    CL1' '\n*----------------------------------------------------------------------\nREINVK   DC    C'0'       REINVOKE FLAG-INDICATES IF PXP0100 IS\n*    BEING ENTERED INITIALLY (0) OR BEING REINVOKED BY PXP0000 (1)\nMOREFLAG DC    C'0'\nFLAG2    DC    X'00'\nSORTNAM  EQU   X'80'\nSORTCOR  EQU   X'40'\nSORTLDT  EQU   X'20'  LINK DATE\nSORTALIS EQU   X'10'  ALIAS\nSORTACCD EQU   X'08'  ACCESS DATE/TIME\nSORTAC   EQU   X'04'  AUTH CODE\nSORTSRC  EQU   X'02'  SOURCE PGM\nSORTMNT  EQU   X'01'  MAINTENACE DATE/TIME\nSORTEXC  EQU   X'11'  EXECUTE DATE/TIME\nSORTJOB  EQU   X'12'  JOBNAME\nSORTOWN  EQU   X'14'  OWNER\nSORTACM  EQU   X'18'  NUMBER OF TIMES ACCESSED SINCE MODIF\nSORTACT  EQU   X'21'  TOTAL NO OF TIMES ACCESSED\nSORTEXCN EQU   X'22'  NO OF TIMES EXECUTED\nSORTACTN EQU   X'24'  ACTION\nSORTPROD EQU   X'28'  PROD DATE\nSORTADDT EQU   X'31'  ADD DATE\nSORTZAPS EQU   X'32'  ZAPS\nSORTREST EQU   X'34'  RESTORE DATE\nSORTREMV EQU   X'38'  REMOVE DATE\nSORTUSER EQU   X'41'  USER\nSORTACC  EQU   X'42'  ACCOUNT\nSORTSYST EQU   X'44'  SYSTEM\n*----------------------------------------------------------------------\nSAVGRP   DS    CL8\nSAVELT   DS    CL8\nSAVTYPE  DS    CL4\nSAVSTAT  DS    CL1\nSAVMODE  DS    CL1\n         SPACE 1\nSAVQNAM  DC    CL25' '\n         SPACE 1\nSAVAREA  DS   0C          GROUP ALL SAV FIELDS TO BE BLANKED\nSAVCORE  DC    CL7' '\nSAVLKDAT DC    CL8' '\nSAVALIAS DC    CL8' '\nSAVATTR  DC    CL10' '\nSAVAC    DC    CL1' '\nSAVPVSRC DC    CL10' '\nSAVPVCLS DC    CL2' '\nSAVPVLVL DC    CL3' '\nSAVPVDAT DC    CL8' '\nSAVPVTYP DC    CL3' '\nSAVACTN  DC    CL3' '\nSAVACMOD DC    CL5' '\nSAVACTOT DC    CL5' '\nSAVEXECS DC    CL5' '\nSAVACCDT DC    CL8' '\nSAVACCTM DC    CL8' '\nSAVMNTDT DC    CL8' '\nSAVMNTTM DC    CL8' '\nSAVEXCDT DC    CL8' '\nSAVJOBNM DC    CL8' '\nSAVSTPNM DC    CL8' '\nSAVOWNER DC    CL20' '\nSAVPRODT DC    CL8' '\nSAVADDAT DC    CL8' '\nSAVZAPS  DC    CL1' '\nSAVPVDSN DC    CL44' '\nSAVAREAL EQU   *-SAVAREA       LENGTH OF SAVAREA\n         SPACE 1\nSAVAREA2 DS   0C\nSAVBKPDT DC    CL8' '\nSAVRSTDT DC    CL8' '\nSAVRMVDT DC    CL8' '\nSAVUSER  DC    CL4' '\nSAVACCT  DC    CL8' '\nSAVSYST  DC    CL8' '\nSAVDESCR DC    CL44' '\nSAVAREL2 EQU   *-SAVAREA2      LENGTH OF SAVAREA\nDBWRD    DC    D'0'\nEDIT5    DC    X'402020202120'    EDIT MASK\nEDITWRK  DS    XL6\nWRKQNAMH DC    CL25' '    HOLD AREA FOR QNAM IN S &L CMD PROCESSING\nWRKQNAM  DS   0CL25\nWRKQNAM1 DC    CL8' '     GRP\n         DC    C'.'\nWRKQNAM2 DC    CL8' '     ELT\n         DC    C'/'\nWRKQNAM3 DC    CL4' '     TYPE\n         DC    C';'\nWRKQNAM4 DC    CL2' '     CLASS\nSMSG     DS    CL24\nLMSG     DS    CL72\n*----------------------------------------------------------------------\nFILEA    DCB   DDNAME=FILEA,DSORG=PS,MACRF=GL,EODAD=ZZZ900,RECFM=VB,   +\n               BUFNO=30   <===== FOR I/O EFFICIENCY\n*----------------------------------------------------------------------\nPXP0100  CSECT\nSPFMACS  SPFCMDS TABLES=YES\n         DSECT\n         PXPIRFLD                , DIRSTAT DIRECTORY RECORD\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT075/FILE075.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT075", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}