------------------------------------------------------------------------
-- 'Display info about the current server'
------------------------------------------------------------------------
CONNECT;
------------------------------------------------------------------------
-- 'LOCK displays table space statuses before and after'
------------------------------------------------------------------------
LOCK TABLE DSN8810.EMP IN SHARE MODE;

COMMIT;

LOCK TABLE DSN8810.EMP IN EXCLUSIVE MODE;

------------------------------------------------------------------------
-- 'Show a select report, use LRECL=nnnn in DD:SYSPRINT if you need'
------------------------------------------------------------------------
SELECT * FROM DSN8810.EMP
FETCH FIRST 2 ROWS ONLY;

------------------------------------------------------------------------
-- 'Show an EXPLAIN report'
------------------------------------------------------------------------
WHENEVER SQLERROR CONTINUE;      -- if you do not have PLAN_TABLE

EXPLAIN
 SELECT DISTINCT A.* FROM DSN8810.EMP A
 UNION ALL
 SELECT A.* FROM DSN8810.EMP A
;
WHENEVER SQLERROR ROLLBACK;

------------------------------------------------------------------------
-- 'Unload a select report to files in different formans'
-- 'and load a session table'
-- 'SESSION tables look like programs arrays'
------------------------------------------------------------------------
DECLARE GLOBAL TEMPORARY TABLE SESSION.W1 LIKE DSN8810.EMP;

-------------------------------
-- 'a blank as a delimeter'  --
-------------------------------
WRITE FILE DD:SYSUT1
 SELECT * FROM DSN8810.EMP
 FETCH FIRST 2 ROWS ONLY;
ECHO
....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
 ...+....9....+....0....+....1....+....2....+....3....+....4....+....5....+....;
SYS OCOPY INDD(SYSUT1) OUTDD(SYSPRINT);
READ FILE DD:SYSUT1 INSERT INTO SESSION.W1 VALUES(*);

-------------------------------
-- 'TAB(\t) as a delimeter'  --
-------------------------------
WRITE TAB FILE DD:SYSUT1
 SELECT * FROM DSN8810.EMP
 FETCH FIRST 2 ROWS ONLY;
ECHO
....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
 ...+....9....+....0....+....1....+....2....+....3....+....4....+....5....+....;
SYS OCOPY INDD(SYSUT1) OUTDD(SYSPRINT);
READ TAB FILE DD:SYSUT1 INSERT INTO SESSION.W1 VALUES(*);

-------------------------------
-- 'a comma as a delimeter'  --
-------------------------------
WRITE COMMA FILE DD:SYSUT1
 SELECT * FROM DSN8810.EMP
 FETCH FIRST 2 ROWS ONLY;
ECHO
....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
 ...+....9....+....0....+....1....+....2....+....3....+....4....+....5....+....;
SYS OCOPY INDD(SYSUT1) OUTDD(SYSPRINT);
READ COMMA FILE DD:SYSUT1 INSERT INTO SESSION.W1 VALUES(*);

-------------------------------
-- '"|"     as a delimeter'  --
-------------------------------
WRITE BAR FILE DD:SYSUT1
 SELECT * FROM DSN8810.EMP
 FETCH FIRST 2 ROWS ONLY;
ECHO
....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
 ...+....9....+....0....+....1....+....2....+....3....+....4....+....5....+....;
SYS OCOPY INDD(SYSUT1) OUTDD(SYSPRINT);
READ BAR FILE DD:SYSUT1 INSERT INTO SESSION.W1 VALUES(*);

-------------------------------
-- 'Select report to a file' --
-------------------------------
WRITE RPT FILE DD:SYSUT1
 SELECT * FROM DSN8810.EMP
 FETCH FIRST 2 ROWS ONLY;
ECHO
....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
 ...+....9....+....0....+....1....+....2....+....3....+....4....+....5....+....;
SYS OCOPY INDD(SYSUT1) OUTDD(SYSPRINT);

-------------------------------
-- 'Without any delimeter'   --
-------------------------------
WRITE NODLM FILE DD:SYSUT1
 SELECT * FROM DSN8810.EMP
 FETCH FIRST 2 ROWS ONLY;
ECHO
....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
 ...+....9....+....0....+....1....+....2....+....3....+....4....+....5....+....;
SYS OCOPY INDD(SYSUT1) OUTDD(SYSPRINT);
READ NODLM FILE DD:SYSUT1 INSERT INTO SESSION.W1
 VALUES(1.6,7:18,19.1,20:34,35:37,38:41,42:51,52:60,
        61:65,66.1,67:76,77:86,87:97,98:108);

-------------------------------
-- 'ASIS -- binary format'   --
-------------------------------
WRITE ASIS FILE DD:SYSUT1
 SELECT * FROM DSN8810.EMP A
 FETCH FIRST 2 ROWS ONLY;
ECHO
....+....1....+....2....+....3....+....4....+....5....+....6....+....7....+....8
 ...+....9....+....0....+....1....+....2....+....3....+....4....+....5....+....;
SYS OCOPY INDD(SYSUT1) OUTDD(SYSPRINT);
READ ASIS FILE DD:SYSUT1 INSERT INTO SESSION.W1 VALUES(*);

SELECT * FROM SESSION.W1;
DELETE FROM SESSION.W1;

-------------------------------
-- 'CSV file, fixed format'  --
-------------------------------
WRITE CSV FILE DD:SYSUT1     -- CSV
 SELECT * FROM DSN8810.EMP
 FETCH FIRST 2 ROWS ONLY;
SYS OCOPY INDD(SYSUT1) OUTDD(SYSPRINT);
READ CSV FILE DD:SYSUT1 INSERT INTO SESSION.W1 VALUES(*);
SELECT * FROM SESSION.W1;

------------------------------------------------------------------------
-- 'CREATE INDEX helps to improve CPU timings for complex SQLs'
------------------------------------------------------------------------
CREATE UNIQUE INDEX SESSION.I1 ON SESSION.W1 (EMPNO);

-- 'Reject records w/ SQL errors'
READ CSV FILE DD:SYSUT1
 DISCARD TEMP.EMP.DISCARD.CSV   -- DD:NAME or DSN for rejected records
  INSERT INTO SESSION.W1 VALUES(*);

RC1=RC;   -- save the current RC for late use

------------------------------------------------------------------------
-- 'Run DB2 commands twice from a file'
------------------------------------------------------------------------
DECLARE GLOBAL TEMPORARY TABLE SESSION.TS_USE (L CHAR(80));

INCLUDE FILE DD:INCLUDE;

COMMIT;                     -- free some resources

INCLUDE FILE DD:INCLUDE;

------------------------------------------------------------------------
-- 'Runstats w/o db and ts names, it needs PROCEDURE SYSPROC.DSNUTILS'
------------------------------------------------------------------------
WHENEVER SQLERROR CONTINUE;

RUNSTATS TABLE DSN8810.EMP INDEX(ALL);

------------------------------------------------------------------------
-- 'Conditional executions IF-DO;-ENDIF;'
------------------------------------------------------------------------
IF RC=8 DO;
 SYSTEM SEND 'RUNSTATS FAILED, THIS MESSAGE FROM' USER(*); -- TSO cmd
 ROLLBACK;
 CONNECT;
 DB2 -DISPLAY PROCEDURE (SYSPROC.DSNUTILS);
ENDIF;

------------------------------------------------------------------------
-- 'Generate and execute SQL'
------------------------------------------------------------------------
                           -- LIFO: run generated SQL at once
STACK LIFO                 -- FIFO: run generated SQL at the input end
 SELECT CHAR(L,100) FROM
 (
  SELECT
   'SELECT '''
        ||STRIP(CREATOR)||'.'||STRIP(NAME)||''' AS TABLE_NAME,'
        ||'COUNT(*) TOTAL_ROWS FROM '
        || STRIP(CREATOR)||'.'||STRIP(NAME)||' UNION ALL' AS L
    FROM SYSIBM.SYSTABLES
   WHERE CREATOR='DSN8810'
     AND NAME LIKE 'P%'
     AND TYPE='T'
 UNION ALL
  SELECT
   'SELECT ''END-OF-REPORT'' AS TABLE_NAME,'
        ||'0 AS TOTAL_ROWS FROM SYSIBM.SYSDUMMY1;'        AS L
   FROM SYSIBM.SYSDUMMY1
 ) A
--#SET PRINT OFF
;
--#SET PRINT ON

WHENEVER SQLERROR ROLLBACK;

------------------------------------------------------------------------
-- 'DDL helps to understand what fields DB2 generates ...'
-- 'Here it generates VARCHAR(300) vs CHAR(100) when UNION is used...'
------------------------------------------------------------------------
DDL
   SELECT CHAR(
    'SELECT '''
         ||STRIP(CREATOR)||'.'||STRIP(NAME)||''' AS TABLE_NAME,'
         ||'COUNT(*) TOTAL_ROWS FROM '
         || STRIP(CREATOR)||'.'||STRIP(NAME)||' UNION ALL',100) L
    FROM SYSIBM.SYSTABLES
  UNION ALL
   SELECT CHAR(
    'SELECT ''END-OF-REPORT'' AS TABLE_NAME,'
         ||'0 AS TOTAL_ROWS FROM SYSIBM.SYSDUMMY1;',100) L
    FROM SYSIBM.SYSDUMMY1
;
------------------------------------------------------------------------
-- 'Generate and execute DDL for a session table'
------------------------------------------------------------------------
STACK LIFO
 DDL TABLE SESSION.W2
  SELECT * FROM DSN8810.EMP;

INSERT INTO SESSION.W2
 SELECT * FROM DSN8810.EMP;

------------------------------------------------------------------------
-- 'SAVE DATA implicitly declare a session table and populate it'
------------------------------------------------------------------------
SAVE DATA AS SESSION.W3
 SELECT * FROM SESSION.W2;

SELECT * FROM SESSION.W3;
------------------------------------------------------------------------
-- 'Run TSO DELETE command if discard file not empty'
------------------------------------------------------------------------
IF RC1=4
 SYS DELETE TEMP.EMP.DISCARD.CSV;            -- TSO command
-- try again, set max allowed RC to 8
--#SET SYSRC 8
 SYS DELETE TEMP.EMP.DISCARD.CSV;
 IF RC=0 EXIT 8;                   -- EXIT abends the program
 RC=0;
------------------------------------------------------------------------
--'--#SET SIGNPOS ON|OFF|NO (default ON)                               '
--'   OFF does not add a sign position for character numbers           '
------------------------------------------------------------------------
WRITE CSV STACK DATA
 SELECT * FROM DSN8810.EMP FETCH FIRST 1 ROW ONLY;

--#SET SIGNPOS OFF

WRITE CSV STACK DATA
 SELECT * FROM DSN8810.EMP FETCH FIRST 1 ROW ONLY;

DECLARE GLOBAL TEMPORARY TABLE OUT (L VARCHAR(150));

READ NODLM STACK DATA
 INSERT INTO SESSION.OUT VALUES(1.150);

SELECT * FROM SESSION.OUT;

WRITE NODLM STACK DATA
 SELECT * FROM SESSION.OUT;

DELETE FROM SESSION.W3;

--#SET TRACE ON

READ CSV STACK DATA
 INSERT INTO SESSION.W3 VALUES(*);

--#SET TRACE OFF

SELECT * FROM SESSION.W3;

--#SET PRINT OFF
-- This comment is supressed by PRINT OFF
--! This comment is always printed out, no supression
--#SET PRINT ON

END;   -- optional, can be in the middle of the input
