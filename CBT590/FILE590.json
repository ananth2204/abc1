{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012422000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 4702880, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 17, "INMDSNAM": "CBT.V500.FILE590.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 4702880, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 4702880, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE590.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00J\\t'", "DS1TRBAL": "b'G\\x96'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04U\\x00\\x01\\x04Z\\x00\\x00\\x00K'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02%\\x8f\\x01\\x02%\\x8f\\x00\\x19\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-15T00:00:00", "modifydate": "2002-09-15T00:19:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 452    FILE:  590\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT452.FILE590\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 66 MEMBERS COUNTED; CUMULATIVE SIZE IS 44,126 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   09/15/02    00:19:54    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$ASMDOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x03\\xcd\\x03\\xcd\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 973, "newlines": 973, "modlines": 0, "user": "EGHF3PY"}, "text": "*---------------------------------------------------------------------*\n* ASM00001 KNUTH GENERATE PRIMES USING DECIMAL ARITHMETIC             *\n*---------------------------------------------------------------------*\n\n         18 JAN 1980 - CHARLES HOTTEL\n         THIS PROGRAM CALULATES AND PRINTS ALL OF THE PRIME NUMBERS\n         LESS THAN NMAX, BASED ON ALOGORITHM P IN DONALD KNUTH'S\n         THE ART OF COMPUTER PROGRAMMING, FUNDAMENTAL ALGORITHMS,\n         2ND EDITION. PAGES 143-144. USES PACKED DECIMAL ARITHMETIC.\n\n*---------------------------------------------------------------------*\n* ASM00002 KNUTH GENERATE PRINES USING BINARY ARITHMETIC              *\n*---------------------------------------------------------------------*\n\n         18 JAN 1980 - CHARLES HOTTEL\n         THIS PROGRAM CALULATES AND PRINTS ALL OF THE PRIME NUMBERS\n         LESS THAN NMAX, BASED ON ALOGORITHM P IN DONALD KNUTH'S\n         THE ART OF COMPUTER PROGRAMMING, FUNDAMENTAL ALGORITHMS,\n         2ND EDITION. PAGES 143-144. USES BINARY ARITHMETIC.\n\n*---------------------------------------------------------------------*\n* ASM00003 KNUTH COROUTINE                                            *\n*---------------------------------------------------------------------*\n\n         17 JUL 1980 - CHARLES HOTTEL\n         KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 191-194\n         COROUTINE EXAMPLE\n\n  TRANSLATE ONE CODE INTO ANOTHER.  INPUT CODE TO BE TRANSLATED IS A\n  SEQUENCE OF ALPHAMERIC CHARACTERS TERMINATED BY A PERIOD, E.G.,\n\n  A2B5E3426FG0ZYW3210PQ89R.\n\n  BLANK COLUMNS ARE TO BE IGNORED.  FROM LEFT TO RIGHT, IF THE NEXT\n  CHARACTER IS A DIGIT, SAY N, IT INDICATES (N+1) REPETITIONS OF THE\n  FOLLOWING CHARACTER, WHETHER THE FOLLOWING DIGIT IS A DIGIT OR NOT.\n  A NONDIGIT SIMPLY DENOTES ITSELF.\n\n  OUTPUT CONSISTS OF THE SEQUENCE INDICATED AND SEPARATED INTO GROUPS\n  OF THREE CHARACTERS:\n\n  ABB BEE EEE E44 446 66F GZY W22 220  0PQ 999 999 999 R.\n\n  TWO COROUTINES AND A SUBROUTINE. SUBROUTINE 'NEXTCHAR' FINDS THE\n  NONBLANK CHARACTER. COROUTINE 'IN' FINDS THE CHARACTERS OF THE\n  INOUT CODE WITH THE PROPER REPLICATION. COROUTINE 'OUT' PUT THE CODE\n  INTO THREE-DIGIT GROUPS.\n\n*---------------------------------------------------------------------*\n* ASM00004 KNUTH COROUTINE USING BALR R7,R8                           *\n*---------------------------------------------------------------------*\n\n         17 JUL 1980 - CHARLES HOTTEL\n         KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 191-194\n         COROUTINE EXAMPLE\n\n  TRANSLATE ONE CODE INTO ANOTHER.  INPUT CODE TO BE TRANSLATED IS A\n  SEQUENCE OF ALPHAMERIC CHARACTERS TERMINATED BY A PERIOD, E.G.,\n\n  A2B5E3426FG0ZYW3210PQ89R.\n\n  BLANK COLUMNS ARE TO BE IGNORED.  FROM LEFT TO RIGHT, IF THE NEXT\n  CHARACTER IS A DIGIT, SAY N, IT INDICATES (N+1) REPETITIONS OF THE\n  FOLLOWING CHARACTER, WHETHER THE FOLLOWING DIGIT IS A DIGIT OR NOT.\n  A NONDIGIT SIMPLY DENOTES ITSELF.\n\n  OUTPUT CONSISTS OF THE SEQUENCE INDICATED AND SEPARATED INTO GROUPS\n  OF THREE CHARACTERS:\n\n  ABB BEE EEE E44 446 66F GZY W22 220  0PQ 999 999 999 R.\n\n  TWO COROUTINES AND A SUBROUTINE. SUBROUTINE 'NEXTCHAR' FINDS THE\n  NONBLANK CHARACTER. COROUTINE 'IN' FINDS THE CHARACTERS OF THE\n  INOUT CODE WITH THE PROPER REPLICATION. COROUTINE 'OUT' PUT THE CODE\n  INTO THREE-DIGIT GROUPS.\n\n  'IN' ------BALR R7,R8 -----> 'OUT'\n  'IN' <-----BALR R8,R7 ------ 'OUT'\n\n*---------------------------------------------------------------------*\n* ASM00005 KNUTH COROUTINE USING BAL R7,0(R7)                         *\n*---------------------------------------------------------------------*\n\n         17 JUL 1980 - CHARLES HOTTEL\n         KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 191-194\n         COROUTINE EXAMPLE\n\n  TRANSLATE ONE CODE INTO ANOTHER.  INPUT CODE TO BE TRANSLATED IS A\n  SEQUENCE OF ALPHAMERIC CHARACTERS TERMINATED BY A PERIOD, E.G.,\n\n  A2B5E3426FG0ZYW3210PQ89R.\n\n  BLANK COLUMNS ARE TO BE IGNORED.  FROM LEFT TO RIGHT, IF THE NEXT\n  CHARACTER IS A DIGIT, SAY N, IT INDICATES (N+1) REPETITIONS OF THE\n  FOLLOWING CHARACTER, WHETHER THE FOLLOWING DIGIT IS A DIGIT OR NOT.\n  A NONDIGIT SIMPLY DENOTES ITSELF.\n\n  OUTPUT CONSISTS OF THE SEQUENCE INDICATED AND SEPARATED INTO GROUPS\n  OF THREE CHARACTERS:\n\n  ABB BEE EEE E44 446 66F GZY W22 220  0PQ 999 999 999 R.\n\n  TWO COROUTINES AND A SUBROUTINE. SUBROUTINE 'NEXTCHAR' FINDS THE\n  NONBLANK CHARACTER. COROUTINE 'IN' FINDS THE CHARACTERS OF THE\n  INOUT CODE WITH THE PROPER REPLICATION. COROUTINE 'OUT' PUT THE CODE\n  INTO THREE-DIGIT GROUPS.\n\n  'IN' <---BAL R7,0(R7)---> 'OUT'\n\n*---------------------------------------------------------------------*\n* ASM00006 KNUTH COROUTINE USING BALR R7,R7                           *\n*---------------------------------------------------------------------*\n\n         17 JUL 1980 - CHARLES HOTTEL\n         KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 191-194\n         COROUTINE EXAMPLE\n\n  TRANSLATE ONE CODE INTO ANOTHER.  INPUT CODE TO BE TRANSLATED IS A\n  SEQUENCE OF ALPHAMERIC CHARACTERS TERMINATED BY A PERIOD, E.G.,\n\n  A2B5E3426FG0ZYW3210PQ89R.\n\n  BLANK COLUMNS ARE TO BE IGNORED.  FROM LEFT TO RIGHT, IF THE NEXT\n  CHARACTER IS A DIGIT, SAY N, IT INDICATES (N+1) REPETITIONS OF THE\n  FOLLOWING CHARACTER, WHETHER THE FOLLOWING DIGIT IS A DIGIT OR NOT.\n  A NONDIGIT SIMPLY DENOTES ITSELF.\n\n  OUTPUT CONSISTS OF THE SEQUENCE INDICATED AND SEPARATED INTO GROUPS\n  OF THREE CHARACTERS:\n\n  ABB BEE EEE E44 446 66F GZY W22 220  0PQ 999 999 999 R.\n\n  TWO COROUTINES AND A SUBROUTINE. SUBROUTINE 'NEXTCHAR' FINDS THE\n  NONBLANK CHARACTER. COROUTINE 'IN' FINDS THE CHARACTERS OF THE\n  INOUT CODE WITH THE PROPER REPLICATION. COROUTINE 'OUT' PUT THE CODE\n  INTO THREE-DIGIT GROUPS.\n\n  'IN' <---BALR R7,R7---> 'OUT'\n\n*---------------------------------------------------------------------*\n* ASM00007 KNUTH ELEVATOR SIMULATION                                  *\n*---------------------------------------------------------------------*\n\n         18 MAY 1981 - CHARLES HOTTEL\n         KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 279-293\n         ELEVATOR SIMULATION\n\n*---------------------------------------------------------------------*\n* ASM00008 KNUTH ELEVATOR SIMULATION 2.2.5 EXERCISE 5                 *\n*---------------------------------------------------------------------*\n\n         18 MAY 1981 - CHARLES HOTTEL\n         KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 279-293\n         ELEVATOR SIMULATION\n\n         SECTION 2.2.5 EXERCISE 5: MAN NUMBER 10, IN=2, OUT=4\n\n*---------------------------------------------------------------------*\n* ASM00009 KNUTH TOPOLOGICAL SORT                                     *\n*---------------------------------------------------------------------*\n\n         29 APR 1981 - CHARLES HOTTEL\n         KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 250-265\n         TOPOLOGICAL SORT (DOES NOT PRINT OUT LOOPS)\n\n*---------------------------------------------------------------------*\n* ASM00010 KNUTH TOPOLOGICAL SORT WITH LOOP DETECTION                 *\n*---------------------------------------------------------------------*\n\n         30 APR 1981 - CHARLES HOTTEL\n         KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 250-265\n         TOPOLOGICAL SORT (DOES PRINT OUT LOOPS)\n         SEE EXERCISES 23 AND 24 PAGE 268.\n\n*---------------------------------------------------------------------*\n* ASM00011 KNUTH GENERATE 1000 SORT KEYS                              *\n*---------------------------------------------------------------------*\n\n         18 FEB 1983 - CHARLES HOTTEL\n         KNUTH, SORTING AND SEARCHING,  2ND EDITION, PP 382\n\n         K(1001) = ZERO\n         K(N-1)  = (3141592621 * K(N) + 2113148651) MOD 10**10\n                 = (         M * K(N) +          A) MOD 10**10\n\n*---------------------------------------------------------------------*\n* ASM00012 KNUTH DEFINE CONSTANT 1000 SORT KEYS                       *\n*---------------------------------------------------------------------*\n\n*---------------------------------------------------------------------*\n* ASM00013 COBSYS PROGRAM SHOWS SYSTEM INFORMATION INCLUDING CPU      *\n*---------------------------------------------------------------------*\n\n*---------------------------------------------------------------------*\n* ASM00014 KNUTH COMPARISON COUNT SORT 16 RECORDS                     *\n*---------------------------------------------------------------------*\n\n         18 FEB 1983 - CHARLES HOTTEL\n         COMPARISON COUNTING SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 76-78.\n\n         SORTS R(1), ... ,R(N) ON KEYS K(1), ... ,K(N) BY MAINTAINING\n         AN AUXILLARY TABLE COUNT(1), ... ,COUNT(N) TO COUNT THE\n         NUMBER OF KEYS LESS THAN A GIVEN KEY.  AT THE CONCLUSION\n         COUNT(J) + 1 SPECIFIES THE FINAL POSITION OF R(J).\n\n         NO MOVEMENT OF RECORDS, STABLE, NOT EFFICIENT WHEN LARGE\n         NUMBER OF RECORDS.\n\n*---------------------------------------------------------------------*\n* ASM00015 KNUTH COMPARISON COUNT SORT 1000 RECORDS                   *\n*---------------------------------------------------------------------*\n\n         28 MAR 1983 - CHARLES HOTTEL\n         COMPARISON COUNTING SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 76-78.\n\n         SORTS R(1), ... ,R(N) ON KEYS K(1), ... ,K(N) BY MAINTAINING\n         AN AUXILLARY TABLE COUNT(1), ... ,COUNT(N) TO COUNT THE\n         NUMBER OF KEYS LESS THAN A GIVEN KEY.  AT THE CONCLUSION\n         COUNT(J) + 1 SPECIFIES THE FINAL POSITION OF R(J).\n\n         NO MOVEMENT OF RECORDS, STABLE, NOT EFFICIENT WHEN LARGE\n         NUMBER OF RECORDS.\n\n*---------------------------------------------------------------------*\n* ASM00016 KNUTH DISTRIBUTION COUNT SORT 16 RECORDS                   *\n*---------------------------------------------------------------------*\n\n         30 MAR 1983 - CHARLES HOTTEL\n         DISTRIBUTION COUNTING SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 78-79.\n\n         ASSUMING ALL KEYS ARE INTEGERS IN RANGE U =< K(J) =< V.\n         SORTS R(1), ... ,R(N) ON KEYS K(1), ... ,K(N) BY MAINTAINING\n         AN AUXILLARY TABLE COUNT(U), ... ,COUNT(V) TO COUNT THE\n         NUMBER OF KEYS LESS THAN A GIVEN KEY.\n\n         FIRST ACCUMULATE COUNT(I) = NUMBER OF KEYS EQUAL TO I.\n         CALCULATE COUNT(I) = NUMBER OF KEYS =< I.\n         OUTPUT RECORDS TO S(1), ... ,S(N).\n\n         EFFICIENT, STABLE, PRIMARILY APPLICABLE TO CASE OF MANY\n         EQUAL KEYS IN SMALL KEY RANGE.\n\n*---------------------------------------------------------------------*\n* ASM00017 KNUTH DISTRIBUTION COUNT SORT 1000 RECORDS                 *\n*---------------------------------------------------------------------*\n\n         30 MAR 1983 - CHARLES HOTTEL\n         DISTRIBUTION COUNTING SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 78-79.\n\n         ASSUMING ALL KEYS ARE INTEGERS IN RANGE U =< K(J) =< V.\n         SORTS R(1), ... ,R(N) ON KEYS K(1), ... ,K(N) BY MAINTAINING\n         AN AUXILLARY TABLE COUNT(U), ... ,COUNT(V) TO COUNT THE\n         NUMBER OF KEYS LESS THAN A GIVEN KEY.\n\n         FIRST ACCUMULATE COUNT(I) = NUMBER OF KEYS EQUAL TO I.\n         CALCULATE COUNT(I) = NUMBER OF KEYS =< I.\n         OUTPUT RECORDS TO S(1), ... ,S(N).\n\n         THIS PROGRAM SORTS THE TEN DIGITS ON THE LEFTMOST THREE\n         DIGITS.\n\n         EFFICIENT, STABLE, PRIMARILY APPLICABLE TO CASE OF MANY\n         EQUAL KEYS IN SMALL KEY RANGE.\n\n*---------------------------------------------------------------------*\n* ASM00018 KNUTH STRAIGHT INSERTION SORT 16 RECORDS                   *\n*---------------------------------------------------------------------*\n\n         30 MAR 1983 - CHARLES HOTTEL\n         STRAIGHT INSERTION SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 80-82.\n\n         RECORDS R(1), ... ,R(N) REARRANGED IN PLACE.\n\n         BEFORE EXAMINING RECORD R(J), WE ASSUME THAT THE PRECEEDING\n         RECORDS R(1), ... ,R(J-1) HAVE ALREADY BEEN SORTED; THEN\n         INSERT R(J) INTO ITS PROPER PLACE AMONG PREVIOUSLY SORTED\n         RECORDS. CONVIENIENT TO COMBINE COMPARISON AND INTERLEAVING\n         OPERATIONS.\n\n         SHORT, STABLE, EFFICIENT FOR 25 RECORDS OR LESS.\n\n*---------------------------------------------------------------------*\n* ASM00019 KNUTH STRAIGHT INSERTION SORT 1000 RECORDS                 *\n*---------------------------------------------------------------------*\n\n         30 MAR 1983 - CHARLES HOTTEL\n         STRAIGHT INSERTION SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 80-82.\n\n         RECORDS R(1), ... ,R(N) REARRANGED IN PLACE.\n\n         BEFORE EXAMINING RECORD R(J), WE ASSUME THAT THE PRECEEDING\n         RECORDS R(1), ... ,R(J-1) HAVE ALREADY BEEN SORTED; THEN\n         INSERT R(J) INTO ITS PROPER PLACE AMONG PREVIOUSLY SORTED\n         RECORDS. CONVIENIENT TO COMBINE COMPARISON AND INTERLEAVING\n         OPERATIONS.\n\n         SHORT, STABLE, EFFICIENT FOR 25 RECORDS OR LESS.\n\n*---------------------------------------------------------------------*\n* ASM00020 KNUTH SHELL SORT 16 RECORDS                                *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         SHELL SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 84-95.\n\n         RECORDS R(1), ... ,R(N) REARRANGED IN PLACE.           ).\n\n         SEQUENCE OF INCREMENTS H(T),H(T-1), ... ,H(1) USED TO CONTROL\n         THE SORTING PROCESS WHERE H(1) = 1. PROPER CHOICE OF THESE\n         INCREMENTS CAN SIGNIFICANTLY DECREASE THE SORTING TIME.\n         THE BEST POSSIBLE SEQUENCE HAS NOT YET BEEN DETERMINED.\n\n         DESIRABLE TO SORT WITH RELATIVELY PRIME INCREMENTS.\n         UNWISE TO START WITH H(T) > N/3.\n         SINCE THE INCREMENTS (3**K - 1) / 2 DO NOT TAKE\n         SUBSTANTIALLY MORE MOVES, AND SINCE THEY REQUIRE ONLY\n         ABOUT 5/8 AS MANY PASSES AS THE INCREMENTS OF OTHER FORMS,\n         THE EVIDENCE INDICATES THAT IT IS REASONABLE TO CHOOSE THE\n         INCREMENTS IN THE FOLLOWING WAY:\n\n             LET H(1) = 1\n             LET H(S+1) = 3*H(S) + 1\n             STOP WITH H(T) WHEN H(T+2) GE N\n\n         NOT STABLE, REASONABLY EFFICIENT FOR 1000 RECORDS OR LESS.\n\n*---------------------------------------------------------------------*\n* ASM00021 KNUTH SHELL SORT 1000 RECORDS                              *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         SHELL SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 84-95.\n\n         RECORDS R(1), ... ,R(N) REARRANGED IN PLACE.           ).\n\n         SEQUENCE OF INCREMENTS H(T),H(T-1), ... ,H(1) USED TO CONTROL\n         THE SORTING PROCESS WHERE H(1) = 1. PROPER CHOICE OF THESE\n         INCREMENTS CAN SIGNIFICANTLY DECREASE THE SORTING TIME.\n         THE BEST POSSIBLE SEQUENCE HAS NOT YET BEEN DETERMINED.\n\n         DESIRABLE TO SORT WITH RELATIVELY PRIME INCREMENTS.\n         UNWISE TO START WITH H(T) > N/3.\n         SINCE THE INCREMENTS (3**K - 1) / 2 DO NOT TAKE\n         SUBSTANTIALLY MORE MOVES, AND SINCE THEY REQUIRE ONLY\n         ABOUT 5/8 AS MANY PASSES AS THE INCREMENTS OF OTHER FORMS,\n         THE EVIDENCE INDICATES THAT IT IS REASONABLE TO CHOOSE THE\n         INCREMENTS IN THE FOLLOWING WAY:\n\n             LET H(1) = 1\n             LET H(S+1) = 3*H(S) + 1\n             STOP WITH H(T) WHEN H(T+2) GE N\n\n         NOT STABLE, REASONABLY EFFICIENT FOR 1000 RECORDS OR LESS.\n\n*---------------------------------------------------------------------*\n* ASM00022 KNUTH LIST INSERTION SORT 16 RECORDS                       *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         LIST INSERTION SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 96-97.\n\n         RECORDS R(1), ... ,R(N) WITH LINK FIELDS L(1), ... ,L(N).\n         ANOTHER LINK FIELD L(0) IN ARTIFICIAL RECORD R(0) AT\n         BEGINNING OF FILE.  STARTING WITH RECORDS AT THE END\n         OF THE FILE EACH RECORD IS INSERTED ON THE LIST IN ITS\n         PROPER POSITION.  AT THE END THEY ARE LINKED TOGETHER IN\n         ASCENDING ORDER.\n\n         PARTICULARLY ADVANTAGES FOR VARIABLE LENGTH RECORDS OR\n         RECORDS THAT ARE PART OF OTHER DATA STRUCTURES.\n\n         STABLE, BEST FOR SMALLL N ONLY.\n\n*---------------------------------------------------------------------*\n* ASM00023 KNUTH LIST INSERTION SORT 1000 RECORDS                     *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         LIST INSERTION SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 96-97.\n\n         RECORDS R(1), ... ,R(N) WITH LINK FIELDS L(1), ... ,L(N).\n         ANOTHER LINK FIELD L(0) IN ARTIFICIAL RECORD R(0) AT\n         BEGINNING OF FILE.  STARTING WITH RECORDS AT THE END\n         OF THE FILE EACH RECORD IS INSERTED ON THE LIST IN ITS\n         PROPER POSITION.  AT THE END THEY ARE LINKED TOGETHER IN\n         ASCENDING ORDER.\n\n         PARTICULARLY ADVANTAGES FOR VARIABLE LENGTH RECORDS OR\n         RECORDS THAT ARE PART OF OTHER DATA STRUCTURES.\n\n         STABLE, BEST FOR SMALL N ONLY.\n\n*---------------------------------------------------------------------*\n* ASM00024 KNUTH OPTIMZED LIST INSERTION SORT 16 RECORDS              *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         OPTIMIZED LIST INSERTION SORT SEE P104 EX 33\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 96-97.\n\n         RECORDS R(1), ... ,R(N) WITH LINK FIELDS L(1), ... ,L(N).\n         ANOTHER LINK FIELD L(0) IN ARTIFICIAL RECORD R(0) AT\n         BEGINNING OF FILE.  STARTING WITH RECORDS AT THE END\n         OF THE FILE EACH RECORD IS INSERTED ON THE LIST IN ITS\n         PROPER POSITION.  AT THE END THEY ARE LINKED TOGETHER IN\n         ASCENDING ORDER.\n\n         PARTICULARLY ADVANTAGES FOR VARIABLE LENGTH RECORDS OR\n         RECORDS THAT ARE PART OF OTHER DATA STRUCTURES.\n\n         STABLE, BEST FOR SMALL N ONLY.\n\n*---------------------------------------------------------------------*\n* ASM00025 KNUTH OPTIMZED LIST INSERTION SORT 1000 RECORDS            *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         OPTIMIZED LIST INSERTION SORT SEE P104 EX 33\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 96-97.\n\n         RECORDS R(1), ... ,R(N) WITH LINK FIELDS L(1), ... ,L(N).\n         ANOTHER LINK FIELD L(0) IN ARTIFICIAL RECORD R(0) AT\n         BEGINNING OF FILE.  STARTING WITH RECORDS AT THE END\n         OF THE FILE EACH RECORD IS INSERTED ON THE LIST IN ITS\n         PROPER POSITION.  AT THE END THEY ARE LINKED TOGETHER IN\n         ASCENDING ORDER.\n\n         PARTICULARLY ADVANTAGES FOR VARIABLE LENGTH RECORDS OR\n         RECORDS THAT ARE PART OF OTHER DATA STRUCTURES.\n\n         STABLE, BEST FOR SMALLL N ONLY.\n\n*---------------------------------------------------------------------*\n* ASM00026 KNUTH MULTIPLE LIST INSERTION SORT 16 RECORDS              *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         MULTIPLE LIST INSERTION SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 99-100.\n\n         NEEDS KEYS TO BE EQUALLY DISTRIBUTED ACROSS RANGE\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00027 KNUTH MULTIPLE LIST INSERTION SORT 1000 RECORDS            *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         MULTIPLE LIST INSERTION SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 99-100.\n\n         NEEDS KEYS TO BE EQUALLY DISTRIBUTED ACROSS RANGE\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00028 KNUTH SHORT SLOW SORT 16 RECORDS                           *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         A VERY SHORT AND VERY SLOW SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 102 EX. 5.2.1-3\n\n*---------------------------------------------------------------------*\n* ASM00029 KNUTH SHORT SLOW SORT 1000 RECORDS                         *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         A VERY SHORT AND VERY SLOW SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 102 EX. 5.2.1 NUMBER 3\n\n*---------------------------------------------------------------------*\n* ASM00030 KNUTH BUBBLE SORT 16 RECORDS                               *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         BUBBLE SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 106-110\n\n         SLOW\n\n*---------------------------------------------------------------------*\n* ASM00031 KNUTH BUBBLE SORT 1000 RECORDS                             *\n*---------------------------------------------------------------------*\n\n         04 APR 1983 - CHARLES HOTTEL\n         BUBBLE SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 106-110\n\n         SLOW\n\n*---------------------------------------------------------------------*\n* ASM00032 KNUTH BATCHER'S MERGE EXCHANGE SORT 16 RECORDS             *\n*---------------------------------------------------------------------*\n\n         09 APR 1983 - CHARLES HOTTEL\n         BATCHER'S MERGE EXCHANGE SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 111-114\n\n         ESSENTIALLY SORT R1,R3,R5, ...\n                      AND R2,R4,R6, ... INDEPENDENTLY\n         AND THEN MERGE.\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00033 KNUTH BATCHER'S MERGE EXCHANGE SORT 1000 RECORDS           *\n*---------------------------------------------------------------------*\n\n         09 APR 1983 - CHARLES HOTTEL\n         BATCHER'S MERGE EXCHANGE SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 111-114\n\n         ESSENTIALLY SORT R1,R3,R5, ...\n                      AND R2,R4,R6, ... INDEPENDENTLY\n         AND THEN MERGE.\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00034 KNUTH QUICKSORT 16 RECORDS                                 *\n*---------------------------------------------------------------------*\n\n         13 APR 1983 - CHARLES HOTTEL\n         QUICKSORT (PARTITION EXCHANGE)\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 114-123\n\n         TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE\n         DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO\n         NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND\n         NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS\n         PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO\n         SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND\n         (INDEPENDENTLY) R(S+1), ... ,R(N).\n\n         M=9 SEEMS SLIGHTLY FASTER THAN M=8.\n\n         VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00035 KNUTH QUICKSORT 1000 RECORDS                               *\n*---------------------------------------------------------------------*\n\n         13 APR 1983 - CHARLES HOTTEL\n         QUICKSORT (PARTITION EXCHANGE)\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 114-123\n\n         TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE\n         DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO\n         NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND\n         NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS\n         PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO\n         SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND\n         (INDEPENDENTLY) R(S+1), ... ,R(N).\n\n         M=9 SEEMS SLIGHTLY FASTER THAN M=8.\n\n         VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00036 KNUTH QUICKSORT 16 RECORDS ALREADY IN ORDER                *\n*---------------------------------------------------------------------*\n\n         13 APR 1983 - CHARLES HOTTEL\n         QUICKSORT (PARTITION EXCHANGE)\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 114-123\n\n         TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE\n         DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO\n         NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND\n         NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS\n         PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO\n         SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND\n         (INDEPENDENTLY) R(S+1), ... ,R(N).\n\n         M=9 SEEMS SLIGHTLY FASTER THAN M=8.\n\n         VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.\n         NOT STABLE\n\n         TESTING WORST CASE: ALL RECORDS ALREADY IN ORDER\n\n*---------------------------------------------------------------------*\n* ASM00037 KNUTH QUICKSORT 1000 RECORDS ALREADY IN ORDER              *\n*---------------------------------------------------------------------*\n\n         13 APR 1983 - CHARLES HOTTEL\n         QUICKSORT (PARTITION EXCHANGE)\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 114-123\n\n         TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE\n         DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO\n         NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND\n         NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS\n         PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO\n         SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND\n         (INDEPENDENTLY) R(S+1), ... ,R(N).\n\n         M=9 SEEMS SLIGHTLY FASTER THAN M=8.\n\n         VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.\n         NOT STABLE\n\n         TESTING WORST CASE: ALL RECS ALREDY IN ORDER\n\n*---------------------------------------------------------------------*\n* ASM00038 KNUTH MEDIAN OF THREE QUICKSORT 16 RECORDS                 *\n*---------------------------------------------------------------------*\n\n         13 APR 1983 - CHARLES HOTTEL\n         QUICKSORT (PARTITION EXCHANGE)\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 114-123\n\n         TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE\n         DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO\n         NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND\n         NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS\n         PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO\n         SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND\n         (INDEPENDENTLY) R(S+1), ... ,R(N).\n\n         M=9 SEEMS SLIGHTLY FASTER THAN M=8.\n\n         VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00039 KNUTH MEDIAN OF THREE QUICKSORT 1000 RECORDS               *\n*---------------------------------------------------------------------*\n\n         13 APR 1983 - CHARLES HOTTEL\n         QUICKSORT (PARTITION EXCHANGE)\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 114-123\n\n         TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE\n         DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO\n         NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND\n         NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS\n         PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO\n         SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND\n         (INDEPENDENTLY) R(S+1), ... ,R(N).\n\n         M=9 SEEMS SLIGHTLY FASTER THAN M=8.\n\n         VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00040 KNUTH MEDIAN OF 3 QUICKSORT 16 RECORDS ALREADY IN ORDER    *\n*---------------------------------------------------------------------*\n\n         13 APR 1983 - CHARLES HOTTEL\n         QUICKSORT (PARTITION EXCHANGE)\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 114-123\n\n         TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE\n         DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO\n         NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND\n         NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS\n         PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO\n         SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND\n         (INDEPENDENTLY) R(S+1), ... ,R(N).\n\n         M=9 SEEMS SLIGHTLY FASTER THAN M=8.\n\n         VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.\n         NOT STABLE\n\n         TESTING WORST CASE: ALL RECORDS ALREADY IN ORDER\n\n*---------------------------------------------------------------------*\n* ASM00041 KNUTH MEDIAN OF 3 QUICKSORT 1000 RECORDS ALREADY IN ORDER  *\n*---------------------------------------------------------------------*\n\n         13 APR 1983 - CHARLES HOTTEL\n         QUICKSORT (PARTITION EXCHANGE)\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 114-123\n\n         TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE\n         DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO\n         NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND\n         NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS\n         PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO\n         SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND\n         (INDEPENDENTLY) R(S+1), ... ,R(N).\n\n         M=9 SEEMS SLIGHTLY FASTER THAN M=8.\n\n         VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.\n         NOT STABLE\n\n         TESTING WORST CASE: ALL RECORDS ALREADY IN ORDER\n\n*---------------------------------------------------------------------*\n* ASM00042 KNUTH RADIX EXCHANGE SORT 16 RECORDS                       *\n*---------------------------------------------------------------------*\n\n         22 APR 1983 - CHARLES HOTTEL\n         RADIX EXCHANGE SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 123-129\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00043 KNUTH RADIX EXCHANGE SORT 1000 RECORDS                     *\n*---------------------------------------------------------------------*\n\n         22 APR 1983 - CHARLES HOTTEL\n         RADIX EXCHANGE SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 123-129\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00044 KNUTH RADIX EXCHANGE SORT WITH BINARY KEY 1000 RECORDS     *\n*---------------------------------------------------------------------*\n\n         22 APR 1983 - CHARLES HOTTEL\n         RADIX EXCHANGE SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 123-129\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00045 KNUTH STRAIGHT SELECTION SORT 16 RECORDS                   *\n*---------------------------------------------------------------------*\n\n         22 APR 1983 - CHARLES HOTTEL\n         STRAIGHT SELECTION SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 139-141\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00046 KNUTH STRAIGHT SELECTION SORT 1000 RECORDS                 *\n*---------------------------------------------------------------------*\n\n         22 APR 1983 - CHARLES HOTTEL\n         STRAIGHT SELECTION SORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 139-141\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00047 KNUTH HEAPSORT 16 RECORDS                                  *\n*---------------------------------------------------------------------*\n\n         22 APR 1983 - CHARLES HOTTEL\n         HEAPSORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 145-149\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00048 KNUTH HEAPSORT 1000 RECORDS                                *\n*---------------------------------------------------------------------*\n\n         22 APR 1983 - CHARLES HOTTEL\n         HEAPSORT\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 145-149\n\n         NOT STABLE\n\n*---------------------------------------------------------------------*\n* ASM00049 KNUTH SUMMARY TABLE OF SORT TIMINGS                        *\n*---------------------------------------------------------------------*\n\n*---------------------------------------------------------------------*\n* ASM00050 KNUTH SEQUENTIAL SEARCH 16 RECORDS                         *\n*---------------------------------------------------------------------*\n\n         17 OCT 1983 - CHARLES HOTTEL\n         SEQUENTIAL SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 393-394\n\n*---------------------------------------------------------------------*\n* ASM00051 KNUTH SEQUENTIAL SEARCH 1000 RECORDS                       *\n*---------------------------------------------------------------------*\n\n         17 OCT 1983 - CHARLES HOTTEL\n         SEQUENTIAL SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 393-394\n\n*---------------------------------------------------------------------*\n* ASM00052 KNUTH QUICK SEQUENTIAL SEARCH 16 RECORDS                   *\n*---------------------------------------------------------------------*\n\n         17 OCT 1983 - CHARLES HOTTEL\n         QUICK SEQUENTIAL SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGE 395\n\n*---------------------------------------------------------------------*\n* ASM00053 KNUTH QUICK SEQUENTIAL SEARCH 1000 RECORDS                 *\n*---------------------------------------------------------------------*\n\n         17 OCT 1983 - CHARLES HOTTEL\n         QUICK SEQUENTIAL SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGE 395\n\n*---------------------------------------------------------------------*\n* ASM00054 KNUTH QUICKER SEQUENTIAL SEARCH 16 RECORDS                 *\n*---------------------------------------------------------------------*\n\n         17 OCT 1983 - CHARLES HOTTEL\n         QUICKER SEQUENTIAL SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGE 395\n\n*---------------------------------------------------------------------*\n* ASM00055 KNUTH QUICKER SEQUENTIAL SEARCH 1000 RECORDS               *\n*---------------------------------------------------------------------*\n\n         17 OCT 1983 - CHARLES HOTTEL\n         QUICKER SEQUENTIAL SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGE 395\n\n*---------------------------------------------------------------------*\n* ASM00056 KNUTH BINARY SERACH 16 RECORDS                             *\n*---------------------------------------------------------------------*\n\n         19 OCT 1983 - CHARLES HOTTEL\n         BINARY SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 406 - 408.\n\n*---------------------------------------------------------------------*\n* ASM00057 KNUTH BINARY SERACH 1000 RECORDS                           *\n*---------------------------------------------------------------------*\n\n         19 OCT 1983 - CHARLES HOTTEL\n         BINARY SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 406 - 408.\n\n*---------------------------------------------------------------------*\n* ASM00058 UNIFORM BINARY SEARCH 16 RECORDS                           *\n*---------------------------------------------------------------------*\n\n         19 OCT 1983 - CHARLES HOTTEL\n         UNIFORM BINARY SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 411 - 412.\n\n*---------------------------------------------------------------------*\n* ASM00059 KNUTH UNIFORM BINARY SEARCH 1000 RECORDS                   *\n*---------------------------------------------------------------------*\n\n         19 OCT 1983 - CHARLES HOTTEL\n         UNIFORM BINARY SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 411 - 412.\n\n*---------------------------------------------------------------------*\n* ASM00060 KNUTH FIBONACCIAN SERACH 16 RECORDS                        *\n*---------------------------------------------------------------------*\n\n         19 OCT 1983 - CHARLES HOTTEL\n         FIBONACCIAN SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 414 - 416.\n\n*---------------------------------------------------------------------*\n* ASM00061 KNUTH FIBONACCIAN SEARCH 1000 RECORDS                      *\n*---------------------------------------------------------------------*\n\n         19 OCT 1983 - CHARLES HOTTEL\n         FIBONACCIAN SEARCH\n\n         THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,\n         2ND EDITION. PAGES 414 - 416.\n\n*---------------------------------------------------------------------*\n* ASM00062 KNUTH SUMMARY TABLE OF SEARCH TIMINGS                      *\n*---------------------------------------------------------------------*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x02%\\x8f\\x01\\x02%\\x8f\\x00\\x13\\x00\\x1f\\x00\\x1f\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-15T00:00:00", "modifydate": "2002-09-15T00:13:44", "lines": 31, "newlines": 31, "modlines": 0, "user": "SBGOLOB"}, "text": "Subj: New CBT Contibution\nDate: 09/12/2002 7:57:20 PM Eastern Daylight Time\nFrom:    chottel@cpcug.org (Charles Hottel)\nReply-to:    chottel@cpcug.org\nTo:    sbgolob@aol.com\n\nFile: Cbtknuth.zip (382692 bytes) DL Time (TCP/IP): < 1 minute\n\n\nSam,\n\nAttached to this email is a file named 'cbtknuth.zip' and its\nsize is 374KB or 382,692 bytes.  When you unzip it you should get\nfile 'cbtknuth.xmi'.  The first file, $$ASMDOC contains the\ndocumentation.  The other files are named ASM00001 to ASM00062.\nExcept for a few data files, these are assembler language\nprograms of selected algorithms from Donald Knuth's books. ( The\nArt of Computer Programming, Volume 1 Fundamental Algorithms and\nVolume 3 Sorting and Searching) They consist mainly of\ncoroutines, sorts, and searches.  ASM00049 is a table that\nsummarizes the various sort timimgs and ASM00062 is a table that\nsummarizes the search timings.\n\n\nPlease feel free to contact me if you have any questions.  Thanks.\n\n--\nCharlie Hottel\nchottel@cpcug.org\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE590": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00!\\x01\\x01\\x02_\\x01\\x02%\\x8f\\x00\\x15\\x00\\x12\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2002-09-15T00:15:21", "lines": 18, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 590 is from Charles Hottel and contains some interesting  *   FILE 590\n//*           programs in Assembler Language that were created in   *   FILE 590\n//*           order to do some of the programming exercises in      *   FILE 590\n//*           Donald Knuth's first and third books:  Fundamental    *   FILE 590\n//*           Algorithms, and Sorting and Searching.  As any reader *   FILE 590\n//*           of Knuth's books knows, Knuth's programming examples  *   FILE 590\n//*           are in a special language he made up, called MIX.     *   FILE 590\n//*           These programming illustrations have been done in     *   FILE 590\n//*           BAL Assembler Language, so they will run on S/390     *   FILE 590\n//*           computers under MVS.                                  *   FILE 590\n//*                                                                 *   FILE 590\n//*           These programs, besides being useful in their own     *   FILE 590\n//*           right, will make it easier for an Assembler Language  *   FILE 590\n//*           oriented person to understand and make practical,     *   FILE 590\n//*           the principles that Knuth is trying to teach us.      *   FILE 590\n//*                                                                 *   FILE 590\n//*           email:  chottel@cpcug.org                             *   FILE 590\n//*                                                                 *   FILE 590\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASM00001": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00\\xd7\\x00\\xd7\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 215, "newlines": 215, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL PRIMES',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00001'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'PRIMES'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        18 JAN 1980 - CHARLES HOTTEL                                 *\n*        THIS PROGRAM CALULATES AND PRINTS ALL OF THE PRIME NUMBERS   *\n*        LESS THAN NMAX, BASED ON ALOGORITHM P IN DONALD KNUTH'S      *\n*        THE ART OF COMPUTER PROGRAMMING, FUNDAMENTAL ALGORITHMS,     *\n*        2ND EDITION. PAGES 143-144. USES PACKED DECIMAL ARITHMETIC.  *\n*---------------------------------------------------------------------*\nPRIMES   START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         LA    R3,PRIMETBL+4     R3 PTR TO NEXT SLOT TO STORE PRIME\n         ZAP   N,=P'3'\nNPRIME   ZAP   0(4,R3),N         PUT PRIME IN TABLE\n         LA    R3,4(R3)          POINT TO NEXT SLOT IN TABLE\n         CL    R3,=A(TBLEND)     TABLE CAPACITY EXCEEDED?\n         BL    NEXTN             NO\n         ABEND 001,DUMP          YES\nNEXTN    AP    N,=P'2'\n         CP    N,NMAX            MAXIMUM N?\n         BH    PRINTRTN          YES\n         LA    R4,PRIMETBL+4     NO, R4 PTR TO PRIME DIVISORS\nPRIMETST ZAP   WORKAREA,N\n         DP    WORKAREA,0(4,R4)  DIVIDE N BY PREVIOUS PRIME\n         CP    R,=PL4'0'         REMAINDER ZERO?\n         BE    NEXTN             YES, N NOT PRIME\n         CP    0(4,R4),Q         QUOTIENT LESS THAN OR EQUAL PREV PRIME\n         BC    10,NPRIME         YES, N IS PRIME\n         LA    R4,4(R4)          NEXT PRIME DIVISOR\n         B     PRIMETST\nPRINTRTN EQU   *\n         OPEN  (PRINTER,OUTPUT)\n         LA    R5,=A(SLOT1)      PTR TO FIRST SLOT IN PRINT LINE\n         LA    R4,PRIMETBL       PTR TO 1ST PRIME IN TABLE\nTBLENDCK CR    R3,R4             ANY PRIMES LEFT IN TABLE?\n         BNH   LASTLINE          NONE LEFT\nPGBREAK  CP    LINECNT,=P'53'    END OF PAGE?\n         BL    LINEFILL          NO\n         AP    PAGECNT,=P'1'     YES\n         MVC   PAGENBR,PGMASK\n         ED    PAGENBR,PAGECNT\n         PUT   PRINTER,TITLE\n         PUT   PRINTER,BLANKS\n         ZAP   LINECNT,=P'2'\nLINEFILL CL    R5,=A(SLOT10)     READY TO PRINT LINE?\n         BNH   SLOTFILL          NO\n         PUT   PRINTER,DETAIL    YES\n         AP    LINECNT,=P'1'\n         LA    R5,SLOT1\n         B     PGBREAK\nSLOTFILL MVC   0(8,R5),PRTMASK\n         ED    0(8,R5),0(R4)\n         LA    R5,12(R5)         POINT TO NEXT SLOT\n         LA    R4,4(R4)          POINT TO NEXT SLOT IN PRIME TABLE\n         B     TBLENDCK\nLASTLINE CL    R5,=A(SLOT1)      PRINT PARTIAL LINE?\n         BNH   CLOSERTN          NO\nLASTSLOT MVC   0(8,R5),=8C' '    YES, BLANK OUT SLOT\n         CL    R5,=A(SLOT10)     LAST SLOT?\n         LA    R5,12(R5)         POINT TO NEXT SLOT TO BE BLANKED OUT\n         BL    LASTSLOT          NO\n         PUT   PRINTER,DETAIL    YES\nCLOSERTN CLOSE (PRINTER)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'MAIN ROUTINE DATA'\nN        DC    PL4'0'            CANDIDATES FOR PRIME\nNMAX     DC    PL6'+99999'       MAXIMUM N\n*\nWORKAREA DS    0PL8\nQ        DS    PL4               QUOTIENT\nR        DS    PL4               REMAINDER\n*\nPAGECNT  DC    PL2'0'\nLINECNT  DC    PL2'53'\n*\n         EJECT\nTITLE    DS    0CL133\n         DC    CL1'1'\n         DC    CL60' '\n         DC    CL12' P R I M E S '\n         DC    CL52' '\n         DC    CL4'PAGE'\nPAGENBR  DC    CL4'0'\n*\nPGMASK   DC    XL4'40202120'\n*\nBLANKS   DC    CL133' '\n*\nPRTMASK  DC    XL8'4020202020202120'\n*\nDETAIL   DS    0CL133\n         DC    CL1'1'\n         DC    CL8' '\nSLOT1    DS    CL8\n         DC    CL4' '\nSLOT2    DS    CL8\n         DC    CL4' '\nSLOT3    DS    CL8\n         DC    CL4' '\nSLOT4    DS    CL8\n         DC    CL4' '\nSLOT5    DS    CL8\n         DC    CL4' '\nSLOT6    DS    CL8\n         DC    CL4' '\nSLOT7    DS    CL8\n         DC    CL4' '\nSLOT8    DS    CL8\n         DC    CL4' '\nSLOT9    DS    CL8\n         DC    CL4' '\nSLOT10   DS    CL9\n         DC    CL8' '\n*\n         EJECT\nPRINTER  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRINTER\n         EJECT\n         LTORG\n         EJECT\nPRIMETBL EQU   *\n         DC    PL4'2'\n         DS    16000PL4\n         DS    16000PL4\n         DS    16000PL4\nTBLEND   DS    CL1\nPRIMES1  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         END\n//G.PRINTER  DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00002": {"ttr": 1028, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00\\xd8\\x00\\xd8\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 216, "newlines": 216, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL PRIMES',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00002'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'PRIMES'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        18 JAN 1980 - CHARLES HOTTEL                                 *\n*        THIS PROGRAM CALULATES AND PRINTS ALL OF THE PRIME NUMBERS   *\n*        LESS THAN NMAX, BASED ON ALOGORITHM P IN DONALD KNUTH'S      *\n*        THE ART OF COMPUTER PROGRAMMING, FUNDAMENTAL ALGORITHMS,     *\n*        2ND EDITION. PAGES 143-144. USES BINARY ARITHMETIC.          *\n*---------------------------------------------------------------------*\nPRIMES   START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         LA    R3,PRIMETBL+4     R3 PTR TO NEXT SLOT TO STORE PRIME\n         SR    R2,R2             ZERO OUT N\n         LA    R2,3              INITIALIZE N\nNPRIME   ST    R2,0(R3)          PUT PRIME IN TABLE\n         LA    R3,4(R3)          POINT TO NEXT SLOT IN TABLE\n         CL    R3,=A(TBLEND)     TABLE CAPACITY EXCEEDED?\n         BL    NEXTN             NO\n         ABEND 001,DUMP          YES\nNEXTN    A     R2,=F'2'\n         CL    R2,NMAX           MAXIMUM N?\n         BH    PRINTRTN          YES\n         LA    R4,PRIMETBL+4     NO, R4 PTR TO PRIME DIVISORS\nPRIMETST SR    R6,R6\n         LR    R7,R2             N IN R7\n         D     R6,0(R4)          DIVIDE N BY PREVIOUS PRIME\n         CL    R6,=F'0'          REMAINDER ZERO?\n         BE    NEXTN             YES, N NOT PRIME\n         CL    R7,0(R4)          QUOTIENT LESS THAN OR EQUAL PREV PRIME\n         BNH   NPRIME            YES, N IS PRIME\n         LA    R4,4(R4)          NEXT PRIME DIVISOR\n         B     PRIMETST\nPRINTRTN EQU   *\n         OPEN  (PRINTER,OUTPUT)\n         LA    R5,=A(SLOT1)      PTR TO FIRST SLOT IN PRINT LINE\n         LA    R4,PRIMETBL       PTR TO 1ST PRIME IN TABLE\nTBLENDCK CR    R3,R4             ANY PRIMES LEFT IN TABLE?\n         BNH   LASTLINE          NONE LEFT\nPGBREAK  CP    LINECNT,=P'53'    END OF PAGE?\n         BL    LINEFILL          NO\n         AP    PAGECNT,=P'1'     YES\n         MVC   PAGENBR,PGMASK\n         ED    PAGENBR,PAGECNT\n         PUT   PRINTER,TITLE\n         PUT   PRINTER,BLANKS\n         ZAP   LINECNT,=P'2'\nLINEFILL CL    R5,=A(SLOT10)     READY TO PRINT LINE?\n         BNH   SLOTFILL          NO\n         PUT   PRINTER,DETAIL    YES\n         AP    LINECNT,=P'1'\n         LA    R5,SLOT1\n         B     PGBREAK\nSLOTFILL MVC   0(8,R5),PRTMASK\n         L     R7,0(R4)          PUT PRIME IN R7\n         CVD   R7,DBLWORD        CONVERT PRIME TO PACKED DECIMAL\n         ED    0(8,R5),DBLWORD+4\n         LA    R5,12(R5)         POINT TO NEXT SLOT\n         LA    R4,4(R4)          POINT TO NEXT SLOT IN PRIME TABLE\n         B     TBLENDCK\nLASTLINE CL    R5,=A(SLOT1)      PRINT PARTIAL LINE?\n         BNH   CLOSERTN          NO\nLASTSLOT MVC   0(8,R5),=8C' '    YES, BLANK OUT SLOT\n         CL    R5,=A(SLOT10)     LAST SLOT?\n         LA    R5,12(R5)         POINT TO NEXT SLOT TO BE BLANKED OUT\n         BL    LASTSLOT          NO\n         PUT   PRINTER,DETAIL    YES\nCLOSERTN CLOSE (PRINTER)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'MAIN ROUTINE DATA'\nNMAX     DC    F'+99999'         MAXIMUM N\n*\nDBLWORD  DS    D\n*\nPAGECNT  DC    PL2'0'\nLINECNT  DC    PL2'53'\n*\n         EJECT\nTITLE    DS    0CL133\n         DC    CL1'1'\n         DC    CL60' '\n         DC    CL12' P R I M E S '\n         DC    CL52' '\n         DC    CL4'PAGE'\nPAGENBR  DC    CL4'0'\n*\nPGMASK   DC    XL4'40202120'\n*\nBLANKS   DC    CL133' '\n*\nPRTMASK  DC    XL8'4020202020202120'\n*\nDETAIL   DS    0CL133\n         DC    CL1'1'\n         DC    CL8' '\nSLOT1    DS    CL8\n         DC    CL4' '\nSLOT2    DS    CL8\n         DC    CL4' '\nSLOT3    DS    CL8\n         DC    CL4' '\nSLOT4    DS    CL8\n         DC    CL4' '\nSLOT5    DS    CL8\n         DC    CL4' '\nSLOT6    DS    CL8\n         DC    CL4' '\nSLOT7    DS    CL8\n         DC    CL4' '\nSLOT8    DS    CL8\n         DC    CL4' '\nSLOT9    DS    CL8\n         DC    CL4' '\nSLOT10   DS    CL9\n         DC    CL8' '\n*\n         EJECT\nPRINTER  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRINTER\n         EJECT\n         LTORG\n         EJECT\nPRIMETBL EQU   *\n         DC    PL4'2'\n         DS    16000F\n         DS    16000F\n         DS    16000F\nTBLEND   DS    CL1\nPRIMES1  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         END\n//G.PRINTER  DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00003": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00\\xc4\\x00\\xc4\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 196, "newlines": 196, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL COROUTINE',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00003'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'COROUTINES'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 JUL 1980 - CHARLES HOTTEL                                 *\n*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 191-194       *\n*        COROUTINE EXAMPLE                                            *\n*---------------------------------------------------------------------*\n* TRANSLATE ONE CODE INTO ANOTHER.  INPUT CODE TO BE TRANSLATED IS A  *\n* SEQUENCE OF ALPHAMERIC CHARACTERS TERMINATED BY A PERIOD, E.G.,     *\n*                                                                     *\n* A2B5E3426FG0ZYW3210PQ89R.                                           *\n*                                                                     *\n* BLANK COLUMNS ARE TO BE IGNORED.  FROM LEFT TO RIGHT, IF THE NEXT   *\n* CHARACTER IS A DIGIT, SAY N, IT INDICATES (N+1) REPETITIONS OF THE  *\n* FOLLOWING CHARACTER, WHETHER THE FOLLOWING DIGIT IS A DIGIT OR NOT. *\n* A NONDIGIT SIMPLY DENOTES ITSELF.                                   *\n*                                                                     *\n* OUTPUT CONSISTS OF THE SEQUENCE INDICATED AND SEPARATED INTO GROUPS *\n* OF THREE CHARACTERS:                                                *\n*                                                                     *\n* ABB BEE EEE E44 446 66F GZY W22 220  0PQ 999 999 999 R.             *\n*                                                                     *\n* TWO COROUTINES AND A SUBROUTINE. SUBROUTINE 'NEXTCHAR' FINDS THE    *\n* NONBLANK CHARACTER. COROUTINE 'IN' FINDS THE CHARACTERS OF THE      *\n* INOUT CODE WITH THE PROPER REPLICATION. COROUTINE 'OUT' PUT THE CODE*\n* INTO THREE-DIGIT GROUPS.                                            *\n*---------------------------------------------------------------------*\nCOROUTS  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE: INITIALIZATION AND LINKAGE FOR COROUTINES         *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (READER,INPUT,PUNCH,OUTPUT)\n         LA    R6,CARDIN+79      R6 FOR NEXTCHAR\n         SR    R5,R5             R5 FOR FIRST COROUTINE 'IN'\n         B     OUT1              START WITH COROUTINE 'OUT'\n*\nOUT      ST    R14,INX           SAVE RETURN POINT TO 'IN'\n         L     R14,OUTX          LOAD RETURN POINT OF 'OUT'\n         BR    R14\n*\nIN       ST    R14,OUTX          SAVE RETURN POINT TO 'OUT'\n         L     R14,INX           LOAD RETURN POINT OF 'IN'\n         BR    R14\n*\n         DS    0F\nOUTX     DC    A(OUT1)\nINX      DC    A(IN1)\n         TITLE 'SUBROUTINE FOR CHARACTER INPUT'\nNEXTCHAR EQU   *\n         ST    R9,R9HOLD         SAVE LINK REGISTER\nNEXT1    LA    R6,1(R6)          ADVANCE POINTER\n         CL    R6,=A(CARDIN+80)  NEED TO READ?\n         BNE   BLANKCK           NO, CHECK FOR BLANK\n         GET   READER,CARDIN     YES, READ NEXT CARD\n         LA    R6,CARDIN         POINT TO 1ST CHARACTER\nBLANKCK  CLI   0(R6),X'40'       BLANK?\n         BE    NEXT1             YES, IGNORE BLANKS\n         L     R9,R9HOLD         NO, RETURN\n         BR    R9\n*\nREADER   DCB   DSORG=PS,RECFM=F,BLKSIZE=80,LRECL=80,MACRF=GM,          X\n               DDNAME=READER,EODAD=ERROR\nERROR    ABEND 0001\nR9HOLD   DS    F\nCARDIN   DS    CL80\n         DS    0F\n         TITLE 'FIRST COROUTINE: IN'\nSENDIT   BAL   R14,OUT           SEND CHAR TO OUT COROUTINE\nIN1      BAL   R9,NEXTCHAR       GET CHARACTER\n         CLI   0(R6),X'F0'       LESS THAN ZERO?\n         BL    SENDIT\n         CLI   0(R6),X'F9'       GREATER THAN NINE?\n         BH    SENDIT            YES\n         NI    0(R6),X'0F'       DIGIT FOUND, CLEAR ZONE\n         IC    R5,0(R6)          PUT DIGIT IN R5\n         LA    R5,1(R5)          DIGIT + 1 IN R5\n         BAL   R9,NEXTCHAR       GET NEXT CHAR\nREPEAT   BAL   R14,OUT           SEND TO OUT COROUTINE\n         BCT   R5,REPEAT         REPEAT IF NECESSARY\n         B     IN1\n         TITLE 'SECOND COROUTINE: OUT '\nOUT1     LA    R4,PUNCHOUT+1     START NEW OUTPUT RECORD\n         MVC   PUNCHOUT+1(132),PUNCHOUT\nNEXTIN   BAL   R14,IN            GET NEXT TRANSLATED CHARACTER\n         MVC   0(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         BAL   R14,IN            NO, GET ANOTHER CHARACTER\n         MVC   1(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         BAL   R14,IN            NO, GET ANOTHER CHARACTER\n         MVC   2(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         LA    R4,4(R4)          ADVANCE OUTPUT POINTER\n         CL    R4,=A(PUNCHOUT+133)      END OF LINE?\n         BNE   NEXTIN\nPERIOD   PUT   PUNCH,PUNCHOUT    YES, PRINT A LINE\n         CLI   0(R6),X'4B'       LAST CHAR A PERIOD?\n         BNE   OUT1              NO\n         CLOSE (READER,,PUNCH)   YES, EXIT LINKAGE\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'DATA'\nPUNCHOUT DS    0CL133\n         DC    C' '\n         DS    CL132\nPUNCH    DCB   DSORG=PS,RECFM=FBA,BLKSIZE=27930,LRECL=133,             X\n               DDNAME=PUNCH,MACRF=PM\n         DS    0F\nCOROUTS1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         END   COROUTS\n//G.READER   DD *\nA2B5E3426FG0ZYW3210PQ89R.\n/*\n//G.PUNCH    DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00004": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00\\xbc\\x00\\xbc\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 188, "newlines": 188, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL COROUTINE',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00004'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'COROUTINES'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 JUL 1980 - CHARLES HOTTEL                                 *\n*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 191-194       *\n*        COROUTINE EXAMPLE                                            *\n*---------------------------------------------------------------------*\n* TRANSLATE ONE CODE INTO ANOTHER.  INPUT CODE TO BE TRANSLATED IS A  *\n* SEQUENCE OF ALPHAMERIC CHARACTERS TERMINATED BY A PERIOD, E.G.,     *\n*                                                                     *\n* A2B5E3426FG0ZYW3210PQ89R.                                           *\n*                                                                     *\n* BLANK COLUMNS ARE TO BE IGNORED.  FROM LEFT TO RIGHT, IF THE NEXT   *\n* CHARACTER IS A DIGIT, SAY N, IT INDICATES (N+1) REPETITIONS OF THE  *\n* FOLLOWING CHARACTER, WHETHER THE FOLLOWING DIGIT IS A DIGIT OR NOT. *\n* A NONDIGIT SIMPLY DENOTES ITSELF.                                   *\n*                                                                     *\n* OUTPUT CONSISTS OF THE SEQUENCE INDICATED AND SEPARATED INTO GROUPS *\n* OF THREE CHARACTERS:                                                *\n*                                                                     *\n* ABB BEE EEE E44 446 66F GZY W22 220  0PQ 999 999 999 R.             *\n*                                                                     *\n* TWO COROUTINES AND A SUBROUTINE. SUBROUTINE 'NEXTCHAR' FINDS THE    *\n* NONBLANK CHARACTER. COROUTINE 'IN' FINDS THE CHARACTERS OF THE      *\n* INOUT CODE WITH THE PROPER REPLICATION. COROUTINE 'OUT' PUT THE CODE*\n* INTO THREE-DIGIT GROUPS.                                            *\n*                                                                     *\n* 'IN' ------BALR R7,R8 -----> 'OUT'                                  *\n* 'IN' <-----BALR R8,R7 ------ 'OUT'                                  *\n*---------------------------------------------------------------------*\nCOROUTS  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE: INITIALIZATION AND LINKAGE FOR COROUTINES         *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (READER,INPUT,PUNCH,OUTPUT)\n         LA    R6,CARDIN+79      R6 FOR NEXTCHAR\n         SR    R5,R5             R5 FOR FIRST COROUTINE 'IN'\n         L     R7,=A(IN)         INITIALIZE COROUTINE LINKAGE REGISTER\n         B     OUT               START WITH COROUTINE 'OUT'\n         TITLE 'SUBROUTINE FOR CHARACTER INPUT'\nNEXTCHAR EQU   *\n         ST    R9,R9HOLD         SAVE LINK REGISTER\nNEXT1    LA    R6,1(R6)          ADVANCE POINTER\n         CL    R6,=A(CARDIN+80)  NEED TO READ?\n         BNE   BLANKCK           NO, CHECK FOR BLANK\n         GET   READER,CARDIN     YES, READ NEXT CARD\n         LA    R6,CARDIN         POINT TO 1ST CHARACTER\nBLANKCK  CLI   0(R6),X'40'       BLANK?\n         BE    NEXT1             YES, IGNORE BLANKS\n         L     R9,R9HOLD         NO, RETURN\n         BR    R9\n*\nREADER   DCB   DSORG=PS,RECFM=F,BLKSIZE=80,LRECL=80,MACRF=GM,          X\n               DDNAME=READER,EODAD=ERROR\nERROR    ABEND 0001\nR9HOLD   DS    F\nCARDIN   DS    CL80\n         DS    0F\n         TITLE 'FIRST COROUTINE: IN'\nSENDIT   BALR  R7,R8             SEND CHAR TO OUT COROUTINE\nIN       BAL   R9,NEXTCHAR       GET CHARACTER\n         CLI   0(R6),X'F0'       LESS THAN ZERO?\n         BL    SENDIT\n         CLI   0(R6),X'F9'       GREATER THAN NINE?\n         BH    SENDIT            YES\n         NI    0(R6),X'0F'       DIGIT FOUNT, CLEAR ZONE\n         IC    R5,0(R6)          PUT DIGIT IN R5\n         LA    R5,1(R5)          DIGIT + 1 IN R5\n         BAL   R9,NEXTCHAR       GET NEXT CHAR\nREPEAT   BALR  R7,R8             SEND TO OUT COROUTINE\n         BCT   R5,REPEAT         REPEAT IF NECESSARY\n         B     IN\n         TITLE 'SECOND COROUTINE: OUT '\nOUT      LA    R4,PUNCHOUT+1     START NEW OUTPUT RECORD\n         MVC   PUNCHOUT+1(132),PUNCHOUT\nNEXTIN   BALR  R8,R7             GET NEXT TRANSLATED CHARACTER\n         MVC   0(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         BALR  R8,R7             NO, GET ANOTHER CHARACTER\n         MVC   1(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         BALR  R8,R7             NO, GET ANOTHER CHARACTER\n         MVC   2(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         LA    R4,4(R4)          ADVANCE OUTPUT POINTER\n         CL    R4,=A(PUNCHOUT+133)      END OF LINE?\n         BNE   NEXTIN\nPERIOD   PUT   PUNCH,PUNCHOUT    YES, PRINT A LINE\n         CLI   0(R6),X'4B'       LAST CHAR A PERIOD?\n         BNE   OUT               NO\n         CLOSE (READER,,PUNCH)   YES, EXIT LINKAGE\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'DATA'\nPUNCHOUT DS    0CL133\n         DC    C' '\n         DS    CL132\nPUNCH    DCB   DSORG=PS,RECFM=FBA,BLKSIZE=27930,LRECL=133,             X\n               DDNAME=PUNCH,MACRF=PM\n         DS    0F\nCOROUTS1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         END   COROUTS\n//G.READER   DD *\nA2B5E3426FG0ZYW3210PQ89R.\n/*\n//G.PUNCH    DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00005": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00\\xbb\\x00\\xbb\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 187, "newlines": 187, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL COROUTINE',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00005'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'COROUTINES'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 JUL 1980 - CHARLES HOTTEL                                 *\n*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 191-194       *\n*        COROUTINE EXAMPLE                                            *\n*---------------------------------------------------------------------*\n* TRANSLATE ONE CODE INTO ANOTHER.  INPUT CODE TO BE TRANSLATED IS A  *\n* SEQUENCE OF ALPHAMERIC CHARACTERS TERMINATED BY A PERIOD, E.G.,     *\n*                                                                     *\n* A2B5E3426FG0ZYW3210PQ89R.                                           *\n*                                                                     *\n* BLANK COLUMNS ARE TO BE IGNORED.  FROM LEFT TO RIGHT, IF THE NEXT   *\n* CHARACTER IS A DIGIT, SAY N, IT INDICATES (N+1) REPETITIONS OF THE  *\n* FOLLOWING CHARACTER, WHETHER THE FOLLOWING DIGIT IS A DIGIT OR NOT. *\n* A NONDIGIT SIMPLY DENOTES ITSELF.                                   *\n*                                                                     *\n* OUTPUT CONSISTS OF THE SEQUENCE INDICATED AND SEPARATED INTO GROUPS *\n* OF THREE CHARACTERS:                                                *\n*                                                                     *\n* ABB BEE EEE E44 446 66F GZY W22 220  0PQ 999 999 999 R.             *\n*                                                                     *\n* TWO COROUTINES AND A SUBROUTINE. SUBROUTINE 'NEXTCHAR' FINDS THE    *\n* NONBLANK CHARACTER. COROUTINE 'IN' FINDS THE CHARACTERS OF THE      *\n* INOUT CODE WITH THE PROPER REPLICATION. COROUTINE 'OUT' PUT THE CODE*\n* INTO THREE-DIGIT GROUPS.                                            *\n*                                                                     *\n* 'IN' <---BAL R7,0(R7)---> 'OUT'                                     *\n*---------------------------------------------------------------------*\nCOROUTS  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE: INITIALIZATION AND LINKAGE FOR COROUTINES         *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (READER,INPUT,PUNCH,OUTPUT)\n         LA    R6,CARDIN+79      R6 FOR NEXTCHAR\n         SR    R5,R5             R5 FOR FIRST COROUTINE 'IN'\n         L     R7,=A(IN)         INITIALIZE COROUTINE LINKAGE REGISTER\n         B     OUT               START WITH COROUTINE 'OUT'\n         TITLE 'SUBROUTINE FOR CHARACTER INPUT'\nNEXTCHAR EQU   *\n         ST    R9,R9HOLD         SAVE LINK REGISTER\nNEXT1    LA    R6,1(R6)          ADVANCE POINTER\n         CL    R6,=A(CARDIN+80)  NEED TO READ?\n         BNE   BLANKCK           NO, CHECK FOR BLANK\n         GET   READER,CARDIN     YES, READ NEXT CARD\n         LA    R6,CARDIN         POINT TO 1ST CHARACTER\nBLANKCK  CLI   0(R6),X'40'       BLANK?\n         BE    NEXT1             YES, IGNORE BLANKS\n         L     R9,R9HOLD         NO, RETURN\n         BR    R9\n*\nREADER   DCB   DSORG=PS,RECFM=F,BLKSIZE=80,LRECL=80,MACRF=GM,          X\n               DDNAME=READER,EODAD=ERROR\nERROR    ABEND 0001\nR9HOLD   DS    F\nCARDIN   DS    CL80\n         DS    0F\n         TITLE 'FIRST COROUTINE: IN'\nSENDIT   BAL   R7,0(R7)          SEND CHAR TO OUT COROUTINE\nIN       BAL   R9,NEXTCHAR       GET CHARACTER\n         CLI   0(R6),X'F0'       LESS THAN ZERO?\n         BL    SENDIT\n         CLI   0(R6),X'F9'       GREATER THAN NINE?\n         BH    SENDIT            YES\n         NI    0(R6),X'0F'       DIGIT FOUNT, CLEAR ZONE\n         IC    R5,0(R6)          PUT DIGIT IN R5\n         LA    R5,1(R5)          DIGIT + 1 IN R5\n         BAL   R9,NEXTCHAR       GET NEXT CHAR\nREPEAT   BAL   R7,0(R7)          SEND TO OUT COROUTINE\n         BCT   R5,REPEAT         REPEAT IF NECESSARY\n         B     IN\n         TITLE 'SECOND COROUTINE: OUT '\nOUT      LA    R4,PUNCHOUT+1     START NEW OUTPUT RECORD\n         MVC   PUNCHOUT+1(132),PUNCHOUT\nNEXTIN   BAL   R7,0(R7)          GET NEXT TRANSLATED CHARACTER\n         MVC   0(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         BAL   R7,0(R7)          NO, GET ANOTHER CHARACTER\n         MVC   1(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         BAL   R7,0(R7)          NO, GET ANOTHER CHARACTER\n         MVC   2(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         LA    R4,4(R4)          ADVANCE OUTPUT POINTER\n         CL    R4,=A(PUNCHOUT+133)      END OF LINE?\n         BNE   NEXTIN\nPERIOD   PUT   PUNCH,PUNCHOUT    YES, PRINT A LINE\n         CLI   0(R6),X'4B'       LAST CHAR A PERIOD?\n         BNE   OUT               NO\n         CLOSE (READER,,PUNCH)   YES, EXIT LINKAGE\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'DATA'\nPUNCHOUT DS    0CL133\n         DC    C' '\n         DS    CL132\nPUNCH    DCB   DSORG=PS,RECFM=FBA,BLKSIZE=27930,LRECL=133,             X\n               DDNAME=PUNCH,MACRF=PM\n         DS    0F\nCOROUTS1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         END   COROUTS\n//G.READER   DD *\nA2B5E3426FG0ZYW3210PQ89R.\n/*\n//G.PUNCH    DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00006": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00\\xbb\\x00\\xbb\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 187, "newlines": 187, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL COROUTINE',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00006'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'COROUTINES'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 JUL 1980 - CHARLES HOTTEL                                 *\n*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 191-194       *\n*        COROUTINE EXAMPLE                                            *\n*---------------------------------------------------------------------*\n* TRANSLATE ONE CODE INTO ANOTHER.  INPUT CODE TO BE TRANSLATED IS A  *\n* SEQUENCE OF ALPHAMERIC CHARACTERS TERMINATED BY A PERIOD, E.G.,     *\n*                                                                     *\n* A2B5E3426FG0ZYW3210PQ89R.                                           *\n*                                                                     *\n* BLANK COLUMNS ARE TO BE IGNORED.  FROM LEFT TO RIGHT, IF THE NEXT   *\n* CHARACTER IS A DIGIT, SAY N, IT INDICATES (N+1) REPETITIONS OF THE  *\n* FOLLOWING CHARACTER, WHETHER THE FOLLOWING DIGIT IS A DIGIT OR NOT. *\n* A NONDIGIT SIMPLY DENOTES ITSELF.                                   *\n*                                                                     *\n* OUTPUT CONSISTS OF THE SEQUENCE INDICATED AND SEPARATED INTO GROUPS *\n* OF THREE CHARACTERS:                                                *\n*                                                                     *\n* ABB BEE EEE E44 446 66F GZY W22 220  0PQ 999 999 999 R.             *\n*                                                                     *\n* TWO COROUTINES AND A SUBROUTINE. SUBROUTINE 'NEXTCHAR' FINDS THE    *\n* NONBLANK CHARACTER. COROUTINE 'IN' FINDS THE CHARACTERS OF THE      *\n* INOUT CODE WITH THE PROPER REPLICATION. COROUTINE 'OUT' PUT THE CODE*\n* INTO THREE-DIGIT GROUPS.                                            *\n*                                                                     *\n* 'IN' <---BALR R7,R7---> 'OUT'                                       *\n*---------------------------------------------------------------------*\nCOROUTS  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE: INITIALIZATION AND LINKAGE FOR COROUTINES         *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (READER,INPUT,PUNCH,OUTPUT)\n         LA    R6,CARDIN+79      R6 FOR NEXTCHAR\n         SR    R5,R5             R5 FOR FIRST COROUTINE 'IN'\n         L     R7,=A(IN)         INITIALIZE COROUTINE LINKAGE REGISTER\n         B     OUT               START WITH COROUTINE 'OUT'\n         TITLE 'SUBROUTINE FOR CHARACTER INPUT'\nNEXTCHAR EQU   *\n         ST    R9,R9HOLD         SAVE LINK REGISTER\nNEXT1    LA    R6,1(R6)          ADVANCE POINTER\n         CL    R6,=A(CARDIN+80)  NEED TO READ?\n         BNE   BLANKCK           NO, CHECK FOR BLANK\n         GET   READER,CARDIN     YES, READ NEXT CARD\n         LA    R6,CARDIN         POINT TO 1ST CHARACTER\nBLANKCK  CLI   0(R6),X'40'       BLANK?\n         BE    NEXT1             YES, IGNORE BLANKS\n         L     R9,R9HOLD         NO, RETURN\n         BR    R9\n*\nREADER   DCB   DSORG=PS,RECFM=F,BLKSIZE=80,LRECL=80,MACRF=GM,          X\n               DDNAME=READER,EODAD=ERROR\nERROR    ABEND 0001\nR9HOLD   DS    F\nCARDIN   DS    CL80\n         DS    0F\n         TITLE 'FIRST COROUTINE: IN'\nSENDIT   BALR  R7,R7             SEND CHAR TO OUT COROUTINE\nIN       BAL   R9,NEXTCHAR       GET CHARACTER\n         CLI   0(R6),X'F0'       LESS THAN ZERO?\n         BL    SENDIT\n         CLI   0(R6),X'F9'       GREATER THAN NINE?\n         BH    SENDIT            YES\n         NI    0(R6),X'0F'       DIGIT FOUNT, CLEAR ZONE\n         IC    R5,0(R6)          PUT DIGIT IN R5\n         LA    R5,1(R5)          DIGIT + 1 IN R5\n         BAL   R9,NEXTCHAR       GET NEXT CHAR\nREPEAT   BALR  R7,R7             SEND TO OUT COROUTINE\n         BCT   R5,REPEAT         REPEAT IF NECESSARY\n         B     IN\n         TITLE 'SECOND COROUTINE: OUT '\nOUT      LA    R4,PUNCHOUT+1     START NEW OUTPUT RECORD\n         MVC   PUNCHOUT+1(132),PUNCHOUT\nNEXTIN   BALR  R7,R7             GET NEXT TRANSLATED CHARACTER\n         MVC   0(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         BALR  R7,R7             NO, GET ANOTHER CHARACTER\n         MVC   1(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         BALR  R7,R7             NO, GET ANOTHER CHARACTER\n         MVC   2(1,R4),0(R6)     STORE IN OUTPUT\n         CLI   0(R6),X'4B'       IS IT A PERIOD?\n         BE    PERIOD            YES\n         LA    R4,4(R4)          ADVANCE OUTPUT POINTER\n         CL    R4,=A(PUNCHOUT+133)      END OF LINE?\n         BNE   NEXTIN\nPERIOD   PUT   PUNCH,PUNCHOUT    YES, PRINT A LINE\n         CLI   0(R6),X'4B'       LAST CHAR A PERIOD?\n         BNE   OUT               NO\n         CLOSE (READER,,PUNCH)   YES, EXIT LINKAGE\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'DATA'\nPUNCHOUT DS    0CL133\n         DC    C' '\n         DS    CL132\nPUNCH    DCB   DSORG=PS,RECFM=FBA,BLKSIZE=27930,LRECL=133,             X\n               DDNAME=PUNCH,MACRF=PM\n         DS    0F\nCOROUTS1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         END   COROUTS\n//G.READER   DD *\nA2B5E3426FG0ZYW3210PQ89R.\n/*\n//G.PUNCH    DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00007": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x044\\x044\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1076, "newlines": 1076, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL ELEVATOR',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00007'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'ELEVATOR SIMULATION'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        18 MAY 1981 - CHARLES HOTTEL                                 *\n*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 279-293       *\n*        ELEVATOR SIMULATION                                          *\n*---------------------------------------------------------------------*\n* R6 = CURRENT NODE                                                   *\n* R4 = FLOOR                                                          *\n* R5 = STATE                                                          *\n*       + =  GOINGUP                                                  *\n*       - =  GOINGDOWN                                                *\n*       0 =  NEUTRAL                                                  *\n*---------------------------------------------------------------------*\nELEV     START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R11,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (PRINTER,OUTPUT)\n         LA    R4,2                FLOOR = 2\n         SR    R5,R5               STATE = NEUTRAL\n         B     CYCLE\nXIT      EQU   *\n         CLOSE (PRINTER)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'CYCLE'\n*---------------------------------------------------------------------*\n* CYCLE IS THE HEART OF SIMULATION CONTROL. IT DECIDES WHICH ACTIVITY *\n* IS TO ACT NEXT (NAMELY THE FIRST ELEMENT OF THE WAIT LIST, WHICH WE *\n* KNOW IS NOT EMPTY) AND BRANCHES TO IT.                              *\n*                                                                     *\n* CYCLE1: SETS NEXTINST IN CURRENT NODE THEN BRANCHES TO CYCLE        *\n*                                                                     *\n* HOLDC: SETS NEXTINST IN CURRENT NODE, BRANCHES TO HOLD, THEN CYCLE  *\n*---------------------------------------------------------------------*\nCYCLE1   EQU   *\n         USING NODE,R6\n         ST    R14,NEXTINST\n         B     CYCLE\nHOLDC    EQU   *\n         USING NODE,R6\n         ST    R14,NEXTINST\n         BAL   R14,HOLD           PUT ON WAITLIST WITH UPDATED NEXTTIME\nCYCLE    EQU   *\n         L     R6,WAIT+4           PTR TO FIRST NODE ON WAIT LIST\n         USING NODE,R6\n         L     R0,NEXTTIME\n         ST    R0,TIME\n         BAL   R14,DELETEW\n         L     R15,NEXTINST\n         BALR  R14,R15\n         TITLE 'INSERT'\n*---------------------------------------------------------------------*\n* INSERT CURRENT NODE, NODE(R6), BEFORE/TO LEFT OF NODE(R1)           *\n* IN QUEUE LIST OR ELEVATOR LIST                                      *\n*---------------------------------------------------------------------*\nINSERT   EQU   *\n         DROP  R6\n         USING NODE,R1\n         L     R2,LLINK2           R2 <- LLINK2(R1)\n         DROP  R1\n         USING NODE,R6\n         ST    R2,LLINK2           LLINK2(R6) <- R2\n         DROP  R6\n         USING NODE,R1\n         ST    R6,LLINK2           LLINK2(R1) <- R6\n         DROP  R1\n         USING NODE,R2\n         ST    R6,RLINK2           RLINK2(R2) <- R6\n         DROP  R2\n         USING NODE,R6\n         ST    R1,RLINK2           RLINK2(R6) <- R1\n         DROP  R6\n         BR    R14                 RETURN\n         TITLE 'DELETE'\n*---------------------------------------------------------------------*\n* DELETE CURRENT NODE, NODE(R6), FROM ITS LIST                        *\n* IN QUEUE LIST OR ELEVATOR LIST                                      *\n*---------------------------------------------------------------------*\nDELETE   EQU   *\n         USING NODE,R6\n         LM    R1,R2,LLINK2        P <- LLINK2(R6) , Q <- RLINK2(R6)\n         DROP  R6\n         USING NODE,R2\n         ST    R1,LLINK2           LLINK2 <- P\n         DROP  R2\n         USING NODE,R1\n         ST    R2,RLINK2           RLINK2(P) <- Q\n         DROP  R1\n         BR    R14\n         TITLE 'IMMED'\n*---------------------------------------------------------------------*\n* IMMED: INSERT CURRENT NODE, NODE(R6), ON WAIT LIST                  *\n*                                                                     *\n* HOLD: PUTS CURRENT NODE, NODE(R6), ON WAIT LIST WITH                *\n*       NEXTTIME = CURRENT TIME + AMOUNT IN R0                        *\n*       IN NEXTTIME ORDER                                             *\n*                                                                     *\n* SORTIN: ADD CURRENT NODE, NODE(R6), TO WAIT LIST SORTING IT         *\n*         INTO RIGHT PLACE BASED ON NEXTTIME FIELD                    *\n*---------------------------------------------------------------------*\nIMMED    EQU   *\n         L     R0,TIME             GET TIME\n         USING NODE,R6\n         ST    R0,NEXTTIME         NEXTTIME(R6) <- TIME\n         LA    R1,WAIT             P <- A(WAIT)\n         DROP  R6\n         USING NODE,R1\n         B     INSRT1              INSERT NODE(R6) TO RIGHT OF NODE(P)\nHOLD     A     R0,TIME             R0 <- R0 + TIME\nSORTIN   EQU   *                   SORT NODE(R6) INTO WAIT LIST\n         DROP  R1\n         USING NODE,R6\n         ST    R0,NEXTTIME         NEXTTIME <- R0\n         LA    R1,WAIT             P <- A(WAIT)\n         DROP  R6\n         USING NODE,R1\nNEXT1    L     R1,LLINK1           P <- LLINK1(WAIT)\n         CL    R0,NEXTTIME    COMPARE NEXTTIME FIELDS RIGHT TO LEFT\n         BL    NEXT1          REPEAT UNTIL NEXTTIME(R6) GE NEXTTIME (P)\nINSRT1   L     R2,RLINK1           Q <- RLINK1(P)\n         DROP  R1\n         USING NODE,R6\n         ST    R2,RLINK1           RLINK1(R6) <- Q\n         ST    R1,LLINK1           LLINK1(R6) <- Q\n         DROP  R6\n         USING NODE,R1\n         ST    R6,RLINK1           RLINK1(P) <- R6\n         DROP  R1\n         USING NODE,R2\n         ST    R6,LLINK1           LLINK1(Q) <- R6\n         DROP  R2\n         BR    R14\n         TITLE 'DELETEW'\n*---------------------------------------------------------------------*\n* DELETEW: DELETE CURRENT NODE, NODE(R6), FROM WAIT LIST              *\n*---------------------------------------------------------------------*\nDELETEW  EQU   *\n         USING NODE,R6\n         LM    R1,R2,LLINK1        P <- LLINK1(R6) , Q <- RLINK1(R6)\n         DROP  R6\n         USING NODE,R2\n         ST    R1,LLINK1           LLINK1(Q) <- P\n         DROP  R2\n         USING NODE,R1\n         ST    R2,RLINK1           RLINK1(P) <- Q\n         BR    R14\n         DROP  R1\n         TITLE 'CALLPTR'\n*---------------------------------------------------------------------*\n* CALLPTR: CALCULATE PTR TO CALL TABLE FOR CURRENT FLOOR              *\n*---------------------------------------------------------------------*\nCALLPTR  EQU   *\n         LR    R7,R4               COPY CURRENT FLOOR\n         LTR   R7,R7\n         BZ    CALL1\n         LR    R8,R7\n         SR    R7,R7\nCALL2    LA    R7,3(R7)\n         BCT   R8,CALL2\nCALL1    LA    R7,CALL(R7)         R7 <- PTR CALL TABLE\n         BR    R14\n         TITLE 'COROUTINE M'\nM1       EQU   *                   ENTER, PREPARE FOR SUCCESSOR\n         L     R15,=A(VALUES)      COMPUTE INFLOOR, OUTFLOOR, INTERTME\n         BAL   R14,SENTER                  GIVEIPTM, CNTR\n         L     R0,INTERTME\n         BAL   R14,HOLD            PUT NODE(R6) IN WAIT, DELAY INTERTME\n*                                  SCHEDULE NEXT MAN\n         L     R6,AVAIL            R6 <- AVAIL\n         LTR   R6,R6               AVAIL STACK EMPTY?\n         BNZ   H1                  NO\n         L     R6,POOLMAX          YES, GET POOLMAX\n         LA    R6,NODESIZE(R6)     R6 <- POOLMAX + NODESIZE\n         ST    R6,POOLMAX          POOLMAX <- R6\n         B     H2                  SET VALUES IN NODE\n         USING NODE,R6\nH1       L     R0,RLINK1           AVAIL STACK SINGLY LINKED VIA RLINK1\n         ST    R0,AVAIL            AVAIL <- RLINK1(AVAIL)\nH2       SR    R1,R1\n         IC    R1,INFLOOR          R1 <- INFLOOR\n         STC   R1,IN               SET IN\n         SR    R2,R2\n         IC    R2,OUTFLOOR         R2 <- OUTFLOOR\n         STC   R2,OUT              SET OUT\n         MVC   NEXTINST,=XL4'00'   CLEAR NEXTINST\n         MVC   MANBR,CNTR+3        SET MAN NUMBER\n         LA    R12,0\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\nM2       EQU   *                   SIGNAL AND WAIT\n         LR    R0,R4               R0 <- FLOOR\n         SR    R0,R1               R0 <- FLOOR - IN\n         ST    R6,TEMP             SAVE R6\n         LTR   R0,R0               FLOOR = IN?\n         BNZ   H3                  NO\n         LA    R6,ELEV1\n         L     R0,NEXTINST         IF NXT STEP E6 DOORS NOW CLOSING\n         ICM   R0,B'1000',=F'0'\n         S     R0,=A(E6)           ELEVATOR AT E6?\n         BNZ   H4                  NO\n         LA    R0,E3               YES, OPEN DOORS\n         ST    R0,NEXTINST         SET NEXTINST TO E3\n         BAL   R14,DELETEW         REMOVE FROM WAIT\n         B     H5                  REINSERT AT FRONT OF WAIT\nH4       SR    R0,R0\n         IC    R0,D3               GET D3\n         LTR   R0,R0               D3 = ZERO?\n         BZ    H3                  YES\n         MVI   D1,X'01'            SET D1\n         MVI   D3,X'00'            SET D3\nH5       BAL   R14,IMMED           INSERT ELEV1 AT FRONT OF WAIT\n         B     M3                  R1 & R2 HAVE CHANGED\nH3       SR    R2,R1               R2 <- OUT - IN\n         LA    R0,1\n         LTR   R2,R2               OUT = IN ?\n         BP    H6                  BRANCH IF GOINGUP\n         LR    R9,R1               R9 <- IN\n         M     R8,=F'3'            R9 <- 3*IN\n         LA    R1,CALL(R9)         R1 <- PTR CALL TABLE\n         STC   R0,2(R1)            CALLDOWN(IN) <- 1\n         B     H7\nH6       LR    R9,R1\n         M     R8,=F'3'\n         LA    R1,CALL(R9)\n         STC   R0,0(R1)            CALLUP(IN) <- 1\nH7       SR    R0,R0\n         IC    R0,D2\n         LTR   R0,R0\n         BNZ   H8                  IF D2 = ZERO, CALL DECISION\n         BAL   R14,DECISION\nH8       L     R0,ELEV1+16\n         ICM   R0,B'1000',=F'0'\n         S     R0,=A(E1)\n         BNZ   M3                  IF ELEVATOR AT E1, CALL DECISION\n         BAL   R14,DECISION\nM3       EQU   *                   ENTER QUEUE\n         L     R6,TEMP\n         SR    R1,R1\n         IC    R1,IN\n         LTR   R1,R1\n         BZ    H9\n         LR    R8,R1\n         SR    R1,R1\nH10      LA    R1,NODESIZE(R1)\n         BCT   R8,H10\nH9       LA    R1,QUEUE0(R1)       R1 <- A(QUEUE(IN))\n         BAL   R14,INSERT          INSERT NODE(R6) AT RIGHT QUEUE(IN)\nM4A      L     R0,GIVEUPTM\n         BAL   R14,HOLDC           WAIT GIVEUPTM UNITS\nM4       EQU   *                   GIVE UP\n         L     R0,IN\n         S     R0,R4               IN(R6) - FLOOR\n         BNZ   M6A\n         SR    R0,R0\n         IC    R0,D1               FLOOR = IN(R6)\n         LTR   R0,R0\n         BNZ   M4A\nM6A      LA    R12,4\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\nM6       EQU   *                   GET OUT\n         LA    R12,12\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         BAL   R14,DELETE          DELETE NODE(R6)\n         L     R0,AVAIL            FROM QUEUE OR ELEVATOR\n         ST    R0,RLINK1\n         ST    R6,AVAIL\n         B     CYCLE\nM5       EQU   *                   GET IN\n         LA    R12,8\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         BAL   R14,DELETE          NODE(R6) DELETED FROM QUEUE\n         LA    R1,ELEVATOR\n         BAL   R14,INSERT          INSERT AT RIGHT OF ELEVATOR\n         LA    R0,1\n         SR    R2,R2\n         IC    R2,OUT\n         LR    R9,R2               R9 <- OUT\n         M     R8,=F'3'            R9 <- 3*OUT\n         LA    R9,CALL(R9)         R9 <- PTR TO CALL TABLE\n         STC   R0,1(R9)            CALLCAR(OUT(R6)) <- 1\n         LTR   R5,R5\n         BNZ   CYCLE               STATE NOT NEUTRAL\n         SR    R2,R4               OUT - FLOOR\n         LR    R5,R2               SET STATE TO PROPER DIRECTION\n         LA    R6,ELEV2            R6 <- A(ELEV2)\n         BAL   R14,DELETEW         REMOVE E5 ACTION FROM WAIT\n         LA    R0,25\n         B     E5A                 RESTART E5 ACTION IN 25 UNITS\n         TITLE 'COROUTINE E'\nE1A      BAL   R14,CYCLE1          SET NEXTINST TO E1, GOTO CYCLE\nE1       EQU   *                   WAIT FOR CALL (NO ACTION)\nE2A      BAL   R14,HOLDC\nE2       EQU   *                   CHANGE STATE\n         LA    R12,16\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         LTR   R5,R5               TEST STATE\n         BM    I1                  BRANCH IF STATE GOINGUP\n         XC    ORWORK,ORWORK       STATE IS GOINGUP\n         SR    R0,R0\n         BAL   R14,CALLPTR         R7 <- PTR CALL TBL CURRENT FLOOR\n         OC    ORWORK,3(R7)\n         OC    ORWORK,6(R7)\n         OC    ORWORK,9(R7)\n         OC    ORWORK,12(R7)\n         OC    ORWORK,ORWORK\n         BNZ   E3                  BRANCH IF CALLS FOR HIGHER FLOORS\n         LR    R8,R7               R8 <- PTR TO CALL TBL CURRENT FLOOR\n         S     R8,=F'2'            HAVE PASS CALLED LOWER FLOORS?\n         OC    ORWORK(1),0(R8)\n         S     R8,=F'3'\n         OC    ORWORK(1),0(R8)\n         S     R8,=F'3'\n         OC    ORWORK(1),0(R8)\n         S     R8,=F'3'\n         OC    ORWORK(1),0(R8)\n         B     I4\nI1       EQU   *                   STATE IS GOIN DOWN\n         XC    ORWORK,ORWORK\n         BAL   R14,CALLPTR\n         LR    R8,R7               R8 <- PTR CALL TBL CURR FLOOR\n         S     R8,=F'3'\n         OC    ORWORK,0(R8)\n         S     R8,=F'3'\n         OC    ORWORK,0(R8)\n         S     R8,=F'3'\n         OC    ORWORK,0(R8)\n         S     R8,=F'3'\n         OC    ORWORK,0(R8)\n         OC    ORWORK,ORWORK\n         BNZ   E3                  BRANCH IF CALL FOR LOWER FLOORS\n         OC    ORWORK(1),4(R7)\n         OC    ORWORK(1),7(R7)\n         OC    ORWORK(1),10(R7)\n         OC    ORWORK(1),13(R7)\nI4       LCR   R5,R5               REVERSE DIRECTION OF STATE\nI5       XC    0(3,R7),0(R7)       SET CALL VARIABLE TO ZERO\n         OC    ORWORK,ORWORK       SHOULD STATE BE NEUTRAL?\n         BNZ   E3                  NO\n         SR    R5,R5               STATE TO NEUTRAL\nE3       EQU   *                   OPEN DOOR\n         LA    R12,20\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         LA    R6,ELEV3\n         L     R0,LLINK1           IS LLINK1 ZERO?\n         LTR   R0,R0               E9 ALREADY SCHEDULED?\n         BZ    I3                  NO\n         BAL   R14,DELETEW         YES, DELETE FROM WAIT LIST\nI3       LA    R0,300\n         BAL   R14,HOLD            SCHEDULE E9 AFTER 300 UNITS\n         LA    R6,ELEV2\n         LA    R0,76\n         BAL   R14,HOLD            SCHEDULE E5 AFTER 76 UNITS\n         MVI   D2,X'01'\n         MVI   D1,X'01'\n         LA    R0,20\nE4A      LA    R6,ELEV1\n         BAL   R14,HOLDC\nE4       EQU   *                   LET PEOPLE IN OR OUT\n         LR    R0,R4               R0 <- FLOOR\n         LA    R6,ELEVATOR         R6 <- A(ELEVATOR)\nI6       L     R6,LLINK2           R6 <- LLINK2(R6)\n         CL    R6,=A(ELEVATOR)     SEARCH ELEVATOR LIST RIGHT TO LEFT\n         BE    I7                  BRANCH IF SEARCH COMPLETE\n         CLM   R0,B'0001',OUT      COMPARE OUT(R6) WITH FLOOR\n         BNE   I6                  IF NOT EQUAL, CONTINUE SEARCH\n         LA    R0,M6               PREPARE SEN MAN TO M6\n         B     I8\nI7       LR    R7,R4               FLOOR\n         LTR   R7,R7\n         BZ    I9\n         LR    R8,R7\n         SR    R7,R7\nI10      LA    R7,NODESIZE(R7)     DISPL TO TABLE ENTRY\n         BCT   R8,I10\nI9       LA    R6,QUEUE0(R7)       R6 <- A(QUEUE(FLOOR))\n         L     R6,RLINK2           R6 <- RLINK2(LOC(QUEUE(FLOOR)))\n         CL    R6,RLINK2           R6 <- RLINK2(R6)\n         BE    I11                 YES QUEUE EMPTY\n         BAL   R14,DELETEW         NO CANCEL ACTION M4 FOR THIS MAN\n         LA    R0,M5               PREPARE TO SEND MAN TO M5\nI8       ST    R0,NEXTINST         NEXTINST = M5 OR M6\n         BAL   R14,IMMED\n         LA    R0,25               WAIT 25 UNITS\n         MVI   PRINTSW,X'00'\n         B     E4A                 REPEAT E4\nI11      MVI   D1,X'00'\n         MVI   D3,X'01'\n         CLI   PRINTSW,X'01'\n         MVI   PRINTSW,X'01'\n         BNE   I2\n         LA    R12,24\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\nI2       B     CYCLE\nE5A      BAL   R14,HOLDC\nE5       EQU   *\n         LA    R12,28\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         SR    R0,R0\n         IC    R0,D1\n         LTR   R0,R0               D1 = ZERO ?\n         BZ    I12\n         LA    R0,40               NO, PEOPLE STILL GETTING IN/OUT\n         B     E5A\nI12      MVI   D3,X'00'            IF D1 = ZERO, SET D3 TO ZERO\n         LA    R0,20\n         LA    R6,ELEV1\nE6A      BAL   R14,HOLDC\nE6       EQU   *                   PREPARE TO MOVE\n         LTR   R5,R5\n         BM    I13                 IF STATE NE GOINGDOWN\n*                                  RESET CALLUP & CALLCAR THIS FLOOR\n         BAL   R14,CALLPTR\n         MVI   0(R7),X'00'         CALLUP(FLOOR) <- ZERO\n         MVI   1(R7),X'00'         CALLCAR(FLOOR) <- ZERO\nI13      LTR   R5,R5\n         BP    I16                 IF STATE NE GOINGUP\n         BAL   R14,CALLPTR\n         MVI   1(R7),X'00'         CALLCAR(FLOOR) <- ZERO\n         MVI   2(R7),X'00'         CALLDOWN(FLOOR) <- ZERO\nI16      LTR   R5,R5               ZERO -> NEUTRAL\n         BNZ   E6B\n         BAL   R14,DECISION\nE6B      LTR   R5,R5\n         BNZ   I19\n         B     E1A                 IF STATE = NEUTRAL, GOTO E1 WAIT\nI19      SR    R0,R0\n         IC    R0,D2\n         LTR   R0,R0\n         BZ    I20\n         LA    R6,ELEV3            ELSE, IF D2 = ZERO\n         BAL   R14,DELETEW         CANCEL ACTIVITY E9\n         XC    IN,IN\n         XC    LLINK1,LLINK1\n         XC    RLINK1,RLINK1\nI20      LA    R0,15\n         LA    R6,ELEV1\n         LTR   R5,R5\n         BM    E8A                 IF STATE = GOINGDOWN, GOTO E8\nE7A      BAL   R14,HOLDC\nE7       EQU   *                   GO UP A FLOOR\n         LA    R12,32\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         LA    R4,1(R4)\n         LA    R0,51\n         BAL   R14,HOLDC\n         BAL   R14,CALLPTR\n         SR    R0,R0\n         ICM   R0,B'0011',0(R7)    CALLUP(FLOOR) OR CALLCAR(FLOOR) ZERO\n         BP    I23\n         CL    R4,=F'2'            FLOOR = 2?\n         BE    I24\n         SR    R0,R0\n         IC    R0,2(R7)            CALLDOWN(FLOOR) NE ZERO?\n         LTR   R0,R0\n         BZ    E7                  NO, REPEAT STEP E7\nI24      XC    ORWORK,ORWORK\n         OC    ORWORK,3(R7)\n         OC    ORWORK,6(R7)\n         OC    ORWORK,9(R7)\n         OC    ORWORK,12(R7)\n         OC    ORWORK,ORWORK\n         BNZ   E7                  CALLS FOR HIGHER FLOORS\nI23      LA    R0,14\n         B     E2A                 WAIT 14 UNITS GOTO E2\nE8A      BAL   R14,HOLDC\nE8       EQU   *                   GO DOWN A FLOOR\n         LA    R12,36\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         S     R4,=F'1'\n         LA    R0,61\n         BAL   R14,HOLDC\n         BAL   R14,CALLPTR\n         SR    R0,R0\n         ICM   R0,B'0011',1(R7)    CALLCAR(FLOOR) CALLDOWN(FLOOR) NE 0\n         BP    I27\n         CL    R4,=F'2'            FLOOR = 2?\n         BE    I28\n         SR    R0,R0\n         IC    R0,0(R7)            CALLUP(FLOOR) NE ZERO?\n         LTR   R0,R0\n         BZ    E8                  NO, REPEAT E8\nI28      XC    ORWORK,ORWORK\n         S     R7,=F'3'\n         OC    ORWORK,0(R7)\n         S     R7,=F'3'\n         OC    ORWORK,0(R7)\n         S     R7,=F'3'\n         OC    ORWORK,0(R7)\n         S     R7,=F'3'\n         OC    ORWORK,0(R7)\n         OC    ORWORK,ORWORK\n         BNZ   E8                  CALLS FOR LOWER FLOORS\nI27      LA    R0,23\n         B     E2A\nE9       EQU   *                   SET INACTION INDICATOR\n         LA    R12,40\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         XC    IN,IN\n         XC    LLINK1,LLINK1\n         XC    RLINK1,RLINK1\n         MVI   D2,X'00'\n         BAL   R14,DECISION\n         B     CYCLE\n         TITLE 'DECISION'\nDECISION EQU   *\n         LTR   R5,R5               STATE = NEUTRAL ?\n         BZ    Z1\n         BR    R14                 YES RETURN\nZ1       L     R9,ELEV1+16\n         ICM   R9,B'1000',=F'0'\n         S     R9,=A(E1)\n         BNZ   Z2                  BRANCH IF NOT AT E1\n         SR    R0,R0\n         ICM   R0,B'0111',CALL+6   GET CALL VAR FLOOR 2\n         LA    R3,E3               PREPARE TO SCHEDULE E3\n         BNZ   Z3\nZ2       SR    R1,R1\n         LA    R5,CALL\nZ5       ICM   R0,B'0111',0(R5)\n         BNZ   Z4\nZ8       LA    R5,3(R5)            NEXT CALL TABLE ENTRY\n         LA    R1,1(R1)            R1 <- J\n         CL    R1,=F'4'\n         BNH   Z5\n         LR    R0,R14              ALL CALL(J), J NE FLOOR, ARE ZERO\n         ICM   R0,B'1000',=F'0'\n         S     R0,=A(E6B)\n         BZ    Z6\n         SR    R5,R5\n         BR    R14\nZ6       LA    R1,2                R1 <- J\nZ4       LR    R5,R1               R5 <- J\n         SR    R5,R4               STATE <- J - FLOOR\n         BNZ   Z7\n         LTR   R0,R0\n         BNZ   Z8                  J = FLOOR NOT ALLOWED\nZ7       LTR   R9,R9\n         BZ    Z9                  BRANCH IF E1\n         BR    R14\nZ9       LTR   R5,R5\n         BNZ   Z10                 BRANCH IF J=2\n         BR    R14\nZ10      LA    R3,E6               SCHEDULE E6\nZ3       LA    R0,20               WAIT 20 UNITS\n         LR    R6,R12              SAVE R6\n         LA    R6,ELEV1\n         ST    R3,NEXTINST\n         ST    R14,SAVER14         SAVE R14\n         BAL   R14,HOLD\n         LR    R6,R12              RESTORE R6\n         L     R14,SAVER14         RESTORE R14\n         BR    R14\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'DATA DEFINITIONS'\n         DS    0D\nDBLWORD  DS    D\nSAVER14  DS    F\nLINECTR  DC    F'60'\nAVAIL    DC    F'0'                LINK TO AVAILABLE NODES\nTIME     DC    F'0'                CURRENT SIMULATED TIME\nINTERTME DC    F'0'                TIME BEFORE NEXT MAN ENTERS SYSTEM\nGIVEUPTM DC    F'0'                WAIT TIME BEFORE GIVEUP\nTEMP     DC    F'0'\nCNTR     DC    F'0'\n         DC    4XL4'00'            PADDING FOR CALL TABLE\nCALL     EQU   *\n         DC    X'00'               CALLUP0, BUTTON FLOOR ZERO\n         DC    X'00'               CALLCAR0, ELEV BUTTON, DEST FLOOR\n         DC    X'00'               CALLDOWN0, DOWN BUTTON, FLOOR ZERO\n*\n         DC    3X'00'              CALLUP1, CALLCAR1, CALLDOWN1\n         DC    3X'00'              CALLUP2, CALLCAR2, CALLDOWN2\n         DC    3X'00'              CALLUP3, CALLCAR3, CALLDOWN3\n         DC    3X'00'              CALLUP4, CALLCAR4, CALLDOWN4\n*\n         DC    4XL4'00'            PADDING FOR CALL TABLE\nORWORK   DC    XL3'00'\nD1       DC    X'00'               1 -> DOOR OPEN,ACTIVE, PEOPLE IN/OUT\nD2       DC    X'00'               0 -> SAT ON FLOOR 30 SEC OR MORE\nD3       DC    X'00'               1 -> DOOR OPEN, INACTIVE\nINFLOOR  DC    X'00'\nOUTFLOOR DC    X'00'\nPRINTSW  DC    X'01'\n         EJECT\nPAGEHEAD EQU   *\n         DC    C'1'                SKIP TO NEW PAGE\n         DC    C'TIME '\n         DC    C'STATE '\n         DC    C'FLOOR '\n         DC    C'D1 '\n         DC    C'D2 '\n         DC    C'D3 '\n         DC    C'STEP '\n         DC    C'ACTION'\n         DC    45C' '\nHEADSZ   EQU   *-PAGEHEAD\n*\nDETAIL   EQU   *\n         DC    C' '                PRINT SPACE1\nPTIME    DS    CL4\n         DC    CL3' '\nPSTATE   DS    CL1\n         DC    CL5' '\nPFLOOR   DS    CL1\n         DC    CL4' '\nPD1      DS    CL1\n         DC    CL2' '\nPD2      DS    CL1\n         DC    CL2' '\nPD3      DS    CL1\n         DC    CL2' '\nPSTEP    DS    CL2\n         DC    CL3' '\nPMSG     DS    CL50\nDETSZ    EQU   *-DETAIL\n*\nBLANKS   DC    83C' '\n*\nM1MSG    DC    CL50' '\n         ORG   M1MSG\n         DC    C'MAN NO. '\nM1MAN    DS    CL2\n         DC    C' ARRIVES AT FLOOR '\nM1IN     DS    CL1\n         DC    C', DESTINATION IS '\nM1OUT    DS    CL1\n         DC    C'.'\n         ORG\nM4MSG    DC    CL50' '\n         ORG   M4MSG\n         DC    C'MAN NO. '\nM4MAN    DS    CL2\n         DC    C' DECIDES TO GIVE UP AND HE LEAVES.'\n         ORG\nM5MSG    DC    CL50' '\n         ORG   M5MSG\n         DC    C'MAN NO. '\nM5MAN    DS    CL2\n         DC    C' GETS IN.'\n         ORG\nM6MSG    DC    CL50' '\n         ORG   M6MSG\n         DC    C'MAN NO. '\nM6MAN    DS    CL2\n         DC    C' GETS OUT, LEAVES THE SYSTEM.'\n         ORG\nE2MSG    DC    C'ELEVATOR STOPS'\n*\nE3MSG    DC    C'ELEVATOR DOORS START TO OPEN'\n*\nE4MSG    DC    C'DOORS OPEN, NOBODY IS THERE'\n*\nE5MSG2   DC    C'DOORS FLUTTER'\n*\nE5MSG1   DC    C'ELEVATOR DOORS START TO CLOSE'\n*\nE7MSG    DC    C'ELEVATOR MOVING UP'\n*\nE8MSG    DC    C'ELEVATOR MOVING DOWN'\n*\nE1MSG    DC    C'ELEVATOR DORMANT'\n*\n         TITLE 'LIST HEADS'\n         DS    0F\nWAIT     EQU   *                   LIST HEAD FOR WAIT LIST\n         DC    A(MAN1)             LLINK1\n         DC    A(MAN1)             RLINK1\n         DC    3F'0'               NOT USED\n         DC    F'0'                NEXTTIME = ZERO ALWAYS\n         DC    F'0'                IN,OUT\n*\nQUEUE0   EQU   *                   LIST HEAD FOR QUEUE(0)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE0)           LLINK2\n         DC    A(QUEUE0)           RLINK2\n         DC    2F'0'               NOT USED\n         DC    F'0'                IN,OUT\n*\nQUEUE1   EQU   *                   LIST HEAD FOR QUEUE(1)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE1)           LLINK2\n         DC    A(QUEUE1)           RLINK2\n         DC    3F'0'\n*\nQUEUE2   EQU   *                   LIST HEAD FOR QUEUE(2)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE2)           LLINK2\n         DC    A(QUEUE2)           RLINK2\n         DC    3F'0'\n*\nQUEUE3   EQU   *                   LIST HEAD FOR QUEUE(3)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE3)           LLINK2\n         DC    A(QUEUE3)           RLINK2\n         DC    3F'0'\n*\nQUEUE4   EQU   *                   LIST HEAD FOR QUEUE(4)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE4)           LLINK2\n         DC    A(QUEUE4)           RLINK2\n         DC    3F'0'\n*\nELEVATOR EQU   *                   LIST HEAD FOR ELEVATOR\n         DC    2F'0'               NOT USED\n         DC    A(ELEVATOR)         LLINK2\n         DC    A(ELEVATOR)         RLINK2\n         DC    2F'0'               NOT USED\n         DC    F'0'                IN,OUT\n         TITLE 'FOUR PERMANENT NODES, ALWAYS PRESENT IN SYSTEM'\n*---------------------------------------------------------------------*\n* MAN1: INITIALLY THE SOLE ENTRY ON THE WAIT LIST                     *\n*       ALWAYS POSITIONED AT STEP M1 READY TO ENTER A NEW MAN INTO THE*\n*       SYSTEM                                                        *\n*---------------------------------------------------------------------*\nMAN1     EQU   *\n         DC    A(WAIT)             LLINK1\n         DC    A(WAIT)             RLINK1\n         DC    2F'0'               LLINK2, RLINK2\n         DC    A(M1)               NEXTINST = M1\n         DC    F'0'                NEXTTIME\n         DC    F'0'                IN,OUT\n*---------------------------------------------------------------------*\n* ELEV1: GOVERNS MAIN ACTIONS OF ELEVATOR AT STEPS E1,E2,E3,E4,E6,E7, *\n*                                                  E8                 *\n*        I.E. ALL ELEVATOR ACTIONS EXCEPT E5,E9                       *\n*---------------------------------------------------------------------*\nELEV1    EQU   *\n         DC    4F'0'\n         DC    A(E1)               NEXTINST = E1\n         DC    2F'0'\n*---------------------------------------------------------------------*\n* ELEV2: REPRESENTS INDEPENDENT ELEVATOR ACTION E5 (CLOSE DOOR)       *\n*        TAKE PLACE INDEPENDENTLY OF OTHER ELEVATOR ACTIONS WITH      *\n*        RESPECT TO SIMULATED TIME                                    *\n*---------------------------------------------------------------------*\nELEV2    EQU   *\n         DC    4F'0'\n         DC    A(E5)               NEXTINST = E5\n         DC    2F'0'\n*---------------------------------------------------------------------*\n* ELEV3: REPRESENTS INDEPENDENT ELEVATOR ACTION E9 (SET INACTION      *\n*        INDICATOR). TAKES PLACE INDEPENDENTLY OF OTHER ELEVATOR      *\n*        ACTIONS WITH RESPECT TO SIMULATED TIME                       *\n*---------------------------------------------------------------------*\nELEV3    EQU   *\n         DC    4F'0'\n         DC    A(E9)               NEXTINST = E9\n         DC    2F'0'\n*\nPRINTER  DCB   DSORG=PS,RECFM=FB,BLKSIZE=27971,LRECL=83,               X\n               DDNAME=PRINTER,MACRF=PM\nPOOLMAX  DC    A(POOLMAX+4)\n         DC    2000XL4'00'         STORAGE POOL\n         DS    0F\n         TITLE 'DSECTS'\nNODE     DSECT\nLLINK1   DS    F                   WAIT LIST LINK\nRLINK1   DS    F                   WAIT LIST LINK\nLLINK2   DS    F                   QUEUE OR ELEVATOR LIST LINK\nRLINK2   DS    F                   QUEUE OR ELEVATOR LIST LINK\nNEXTINST DS    F                   BRANCH INST TO PROPER ACTION\nNEXTTIME DS    F\nIN       DS    CL1\nOUT      DS    CL1\nMANBR    DS    CL1\n         DS    CL1\nNODESIZE EQU   *-NODE\nELEVA    CSECT\n         TITLE 'REMOTE AREAS'\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'VALUES'\nVALUES   B     14(0,R9)\n         USING VALUES,R9\n         DC    AL1(8),CL9'VALUES'\n         L     R1,CNTR\n         LA    R1,1(R1)\n         ST    R1,CNTR\n         CL    R1,=F'1'\n         BNE   VAL2\n         MVI   INFLOOR,X'00'\n         MVI   OUTFLOOR,X'02'\n         MVC   INTERTME,=F'0038'\n         MVC   GIVEUPTM,=F'0152'\n         B     SEXIT\nVAL2     CL    R1,=F'2'\n         BNE   VAL3\n         MVI   INFLOOR,X'04'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0098'\n         MVC   GIVEUPTM,=F'0500'\n         B     SEXIT\nVAL3     CL    R1,=F'3'\n         BNE   VAL4\n         MVI   INFLOOR,X'02'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0005'\n         MVC   GIVEUPTM,=F'0800'\n         B     SEXIT\nVAL4     CL    R1,=F'4'\n         BNE   VAL5\n         MVI   INFLOOR,X'02'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0150'\n         MVC   GIVEUPTM,=F'0800'\n         B     SEXIT\nVAL5     CL    R1,=F'5'\n         BNE   VAL6\n         MVI   INFLOOR,X'03'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0073'\n         MVC   GIVEUPTM,=F'0450'\n         B     SEXIT\nVAL6     CL    R1,=F'6'\n         BNE   VAL7\n         MVI   INFLOOR,X'02'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0238'\n         MVC   GIVEUPTM,=F'0176'\n         B     SEXIT\nVAL7     CL    R1,=F'7'\n         BNE   VAL8\n         MVI   INFLOOR,X'01'\n         MVI   OUTFLOOR,X'02'\n         MVC   INTERTME,=F'0225'\n         MVC   GIVEUPTM,=F'0600'\n         B     SEXIT\nVAL8     CL    R1,=F'8'\n         BNE   VAL9\n         MVI   INFLOOR,X'01'\n         MVI   OUTFLOOR,X'00'\n         MVC   INTERTME,=F'0049'\n         MVC   GIVEUPTM,=F'0400'\n         B     SEXIT\nVAL9     CL    R1,=F'9'\n         BNE   VAL10\n         MVI   INFLOOR,X'01'\n         MVI   OUTFLOOR,X'03'\n         MVC   INTERTME,=F'0172'\n         MVC   GIVEUPTM,=F'0400'\n         B     SEXIT\nVAL10    CL    R1,=F'10'\n         BNE   VAL11\n         MVI   INFLOOR,X'00'\n         MVI   OUTFLOOR,X'04'\n         MVC   INTERTME,=F'3336'\n         MVC   GIVEUPTM,=F'0400'\n         B     SEXIT\nVAL11    CL    R1,=F'11'\n         BNE   VALEND\n         MVI   INFLOOR,X'02'\n         MVI   OUTFLOOR,X'03'\n         MVC   INTERTME,=F'0456'\n         MVC   GIVEUPTM,=F'0050'\n         B     SEXIT\nVALEND   L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         B     XIT                 END SIMULATION\n*\n         LTORG\n         DROP  R9\n         TITLE 'PRINT'\nPRINT    B     14(0,R9)\n         USING PRINT,R9\n         DC    AL1(8),CL9'PRINT'\n         MVI   PMSG,X'40'\n         MVC   PMSG+1(49),PMSG     CLEAR PMSG\n         L     R1,LINECTR\n         LA    R1,1(R1)\n         ST    R1,LINECTR\n         CL    R1,=F'52'           PAGE BREAK?\n         BL    PRINT1              NO\n         LA    R1,3\n         ST    R1,LINECTR          RESET LINE COUNT\n         PUT   PRINTER,PAGEHEAD    PRINT HEADING\n         PUT   PRINTER,BLANKS\nPRINT1   L     R2,TIME\n         CVD   R2,DBLWORD\n         OI    DBLWORD+7,X'0F'\n         UNPK  PTIME,DBLWORD+5(3)\n         LTR   R5,R5\n         BZ    PRINT2              NEUTRAL\n         BL    PRINT3              GOINGDOWN\n         MVI   PSTATE,C'U'         GOINGUP\n         B     PRINT4\nPRINT2   MVI   PSTATE,C'N'\n         B     PRINT4\nPRINT3   MVI   PSTATE,C'D'\nPRINT4   MVI   PD1,X'F0'\n         MVI   PD2,X'F0'\n         MVI   PD3,X'F0'\n         CLI   D1,X'00'\n         BE    PRINT5\n         MVI   PD1,C'X'\nPRINT5   CLI   D2,X'00'\n         BE    PRINT6\n         MVI   PD2,C'X'\nPRINT6   CLI   D3,X'00'\n         BE    PRINT7\n         MVI   PD3,C'X'\nPRINT7   STC   R4,PFLOOR\n         OI    PFLOOR,X'F0'\n         LR    R15,R12\n         B     *+4(R15)\n         B     PM1\n         B     PM4\n         B     PM5\n         B     PM6\n         B     PE2\n         B     PE3\n         B     PE4\n         B     PE5\n         B     PE7\n         B     PE8\n         B     PE1\n*\nPM1      L     R15,=A(CVMAN)\n         BAL   R14,SENTER\n         UNPK  M1MAN,DBLWORD+6(2)\n         MVC   M1IN,IN\n         OI    M1IN,X'F0'\n         MVC   M1OUT,OUT\n         OI    M1OUT,X'F0'\n         MVC   PSTEP,=C'M1'\n         MVC   PMSG,M1MSG\n         B     PRINT8\nPM4      L     R15,=A(CVMAN)\n         BAL   R14,SENTER\n         UNPK  M4MAN,DBLWORD+6(2)\n         MVC   PSTEP,=C'M4'\n         MVC   PMSG,M4MSG\n         B     PRINT8\nPM5      L     R15,=A(CVMAN)\n         BAL   R14,SENTER\n         UNPK  M5MAN,DBLWORD+6(2)\n         MVC   PSTEP,=C'M5'\n         MVC   PMSG,M5MSG\n         B     PRINT8\nPM6      L     R15,=A(CVMAN)\n         BAL   R14,SENTER\n         UNPK  M6MAN,DBLWORD+6(2)\n         MVC   PSTEP,=C'M6'\n         MVC   PMSG,M6MSG\n         B     PRINT8\nPE2      MVC   PMSG(L'E2MSG),E2MSG\n         MVC   PSTEP,=C'E2'\n         B     PRINT8\nPE3      MVC   PMSG(L'E3MSG),E3MSG\n         MVC   PSTEP,=C'E3'\n         B     PRINT8\nPE4      MVC   PMSG(L'E4MSG),E4MSG\n         MVC   PSTEP,=C'E4'\n         B     PRINT8\nPE5      MVC   PMSG(L'E5MSG1),E5MSG1\n         MVC   PSTEP,=C'E5'\n         CLI   D1,X'01'\n         BNE   PRINT8\n         MVI   PMSG,X'40'\n         MVC   PMSG+1(49),PMSG\n         MVC   PMSG(L'E5MSG2),E5MSG2\n         B     PRINT8\nPE7      MVC   PMSG(L'E7MSG),E7MSG\n         MVC   PSTEP,=C'E7'\n         B     PRINT8\nPE8      MVC   PMSG(L'E8MSG),E8MSG\n         MVC   PSTEP,=C'E8'\n         B     PRINT8\nPE1      MVC   PMSG(L'E1MSG),E1MSG\n         MVC   PSTEP,=C'E1'\n         B     PRINT8\nPRINT8   EQU   *\n         PUT   PRINTER,DETAIL\n         B     SEXIT\n         DROP  R9\n         TITLE 'CVMAN'\nCVMAN    B     14(0,R9)\n         USING CVMAN,R9\n         DC    AL1(8),CL9'CVMAN'\n         SR    R2,R2\n         IC    R2,MANBR\n         CVD   R2,DBLWORD\n         OI    DBLWORD+7,X'0F'\n         B     SEXIT\n         LTORG\n         DROP  R9\n         END   ELEV\n//G.PRINTER  DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00008": {"ttr": 1800, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x046\\x046\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1078, "newlines": 1078, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL ELEVATOR',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00008'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'ELEVATOR SIMULATION'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        18 MAY 1981 - CHARLES HOTTEL                                 *\n*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 279-293       *\n*        ELEVATOR SIMULATION                                          *\n*                                                                     *\n*        SECTION 2.2.5 EXERCISE 5: MAN NUMBER 10, IN=2, OUT=4         *\n*---------------------------------------------------------------------*\n* R6 = CURRENT NODE                                                   *\n* R4 = FLOOR                                                          *\n* R5 = STATE                                                          *\n*       + =  GOINGUP                                                  *\n*       - =  GOINGDOWN                                                *\n*       0 =  NEUTRAL                                                  *\n*---------------------------------------------------------------------*\nELEV     START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R11,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (PRINTER,OUTPUT)\n         LA    R4,2                FLOOR = 2\n         SR    R5,R5               STATE = NEUTRAL\n         B     CYCLE\nXIT      EQU   *\n         CLOSE (PRINTER)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'CYCLE'\n*---------------------------------------------------------------------*\n* CYCLE IS THE HEART OF SIMULATION CONTROL. IT DECIDES WHICH ACTIVITY *\n* IS TO ACT NEXT (NAMELY THE FIRST ELEMENT OF THE WAIT LIST, WHICH WE *\n* KNOW IS NOT EMPTY) AND BRANCHES TO IT.                              *\n*                                                                     *\n* CYCLE1: SETS NEXTINST IN CURRENT NODE THEN BRANCHES TO CYCLE        *\n*                                                                     *\n* HOLDC: SETS NEXTINST IN CURRENT NODE, BRANCHES TO HOLD, THEN CYCLE  *\n*---------------------------------------------------------------------*\nCYCLE1   EQU   *\n         USING NODE,R6\n         ST    R14,NEXTINST\n         B     CYCLE\nHOLDC    EQU   *\n         USING NODE,R6\n         ST    R14,NEXTINST\n         BAL   R14,HOLD           PUT ON WAITLIST WITH UPDATED NEXTTIME\nCYCLE    EQU   *\n         L     R6,WAIT+4           PTR TO FIRST NODE ON WAIT LIST\n         USING NODE,R6\n         L     R0,NEXTTIME\n         ST    R0,TIME\n         BAL   R14,DELETEW\n         L     R15,NEXTINST\n         BALR  R14,R15\n         TITLE 'INSERT'\n*---------------------------------------------------------------------*\n* INSERT CURRENT NODE, NODE(R6), BEFORE/TO LEFT OF NODE(R1)           *\n* IN QUEUE LIST OR ELEVATOR LIST                                      *\n*---------------------------------------------------------------------*\nINSERT   EQU   *\n         DROP  R6\n         USING NODE,R1\n         L     R2,LLINK2           R2 <- LLINK2(R1)\n         DROP  R1\n         USING NODE,R6\n         ST    R2,LLINK2           LLINK2(R6) <- R2\n         DROP  R6\n         USING NODE,R1\n         ST    R6,LLINK2           LLINK2(R1) <- R6\n         DROP  R1\n         USING NODE,R2\n         ST    R6,RLINK2           RLINK2(R2) <- R6\n         DROP  R2\n         USING NODE,R6\n         ST    R1,RLINK2           RLINK2(R6) <- R1\n         DROP  R6\n         BR    R14                 RETURN\n         TITLE 'DELETE'\n*---------------------------------------------------------------------*\n* DELETE CURRENT NODE, NODE(R6), FROM ITS LIST                        *\n* IN QUEUE LIST OR ELEVATOR LIST                                      *\n*---------------------------------------------------------------------*\nDELETE   EQU   *\n         USING NODE,R6\n         LM    R1,R2,LLINK2        P <- LLINK2(R6) , Q <- RLINK2(R6)\n         DROP  R6\n         USING NODE,R2\n         ST    R1,LLINK2           LLINK2 <- P\n         DROP  R2\n         USING NODE,R1\n         ST    R2,RLINK2           RLINK2(P) <- Q\n         DROP  R1\n         BR    R14\n         TITLE 'IMMED'\n*---------------------------------------------------------------------*\n* IMMED: INSERT CURRENT NODE, NODE(R6), ON WAIT LIST                  *\n*                                                                     *\n* HOLD: PUTS CURRENT NODE, NODE(R6), ON WAIT LIST WITH                *\n*       NEXTTIME = CURRENT TIME + AMOUNT IN R0                        *\n*       IN NEXTTIME ORDER                                             *\n*                                                                     *\n* SORTIN: ADD CURRENT NODE, NODE(R6), TO WAIT LIST SORTING IT         *\n*         INTO RIGHT PLACE BASED ON NEXTTIME FIELD                    *\n*---------------------------------------------------------------------*\nIMMED    EQU   *\n         L     R0,TIME             GET TIME\n         USING NODE,R6\n         ST    R0,NEXTTIME         NEXTTIME(R6) <- TIME\n         LA    R1,WAIT             P <- A(WAIT)\n         DROP  R6\n         USING NODE,R1\n         B     INSRT1              INSERT NODE(R6) TO RIGHT OF NODE(P)\nHOLD     A     R0,TIME             R0 <- R0 + TIME\nSORTIN   EQU   *                   SORT NODE(R6) INTO WAIT LIST\n         DROP  R1\n         USING NODE,R6\n         ST    R0,NEXTTIME         NEXTTIME <- R0\n         LA    R1,WAIT             P <- A(WAIT)\n         DROP  R6\n         USING NODE,R1\nNEXT1    L     R1,LLINK1           P <- LLINK1(WAIT)\n         CL    R0,NEXTTIME    COMPARE NEXTTIME FIELDS RIGHT TO LEFT\n         BL    NEXT1          REPEAT UNTIL NEXTTIME(R6) GE NEXTTIME (P)\nINSRT1   L     R2,RLINK1           Q <- RLINK1(P)\n         DROP  R1\n         USING NODE,R6\n         ST    R2,RLINK1           RLINK1(R6) <- Q\n         ST    R1,LLINK1           LLINK1(R6) <- Q\n         DROP  R6\n         USING NODE,R1\n         ST    R6,RLINK1           RLINK1(P) <- R6\n         DROP  R1\n         USING NODE,R2\n         ST    R6,LLINK1           LLINK1(Q) <- R6\n         DROP  R2\n         BR    R14\n         TITLE 'DELETEW'\n*---------------------------------------------------------------------*\n* DELETEW: DELETE CURRENT NODE, NODE(R6), FROM WAIT LIST              *\n*---------------------------------------------------------------------*\nDELETEW  EQU   *\n         USING NODE,R6\n         LM    R1,R2,LLINK1        P <- LLINK1(R6) , Q <- RLINK1(R6)\n         DROP  R6\n         USING NODE,R2\n         ST    R1,LLINK1           LLINK1(Q) <- P\n         DROP  R2\n         USING NODE,R1\n         ST    R2,RLINK1           RLINK1(P) <- Q\n         BR    R14\n         DROP  R1\n         TITLE 'CALLPTR'\n*---------------------------------------------------------------------*\n* CALLPTR: CALCULATE PTR TO CALL TABLE FOR CURRENT FLOOR              *\n*---------------------------------------------------------------------*\nCALLPTR  EQU   *\n         LR    R7,R4               COPY CURRENT FLOOR\n         LTR   R7,R7\n         BZ    CALL1\n         LR    R8,R7\n         SR    R7,R7\nCALL2    LA    R7,3(R7)\n         BCT   R8,CALL2\nCALL1    LA    R7,CALL(R7)         R7 <- PTR CALL TABLE\n         BR    R14\n         TITLE 'COROUTINE M'\nM1       EQU   *                   ENTER, PREPARE FOR SUCCESSOR\n         L     R15,=A(VALUES)      COMPUTE INFLOOR, OUTFLOOR, INTERTME\n         BAL   R14,SENTER                  GIVEIPTM, CNTR\n         L     R0,INTERTME\n         BAL   R14,HOLD            PUT NODE(R6) IN WAIT, DELAY INTERTME\n*                                  SCHEDULE NEXT MAN\n         L     R6,AVAIL            R6 <- AVAIL\n         LTR   R6,R6               AVAIL STACK EMPTY?\n         BNZ   H1                  NO\n         L     R6,POOLMAX          YES, GET POOLMAX\n         LA    R6,NODESIZE(R6)     R6 <- POOLMAX + NODESIZE\n         ST    R6,POOLMAX          POOLMAX <- R6\n         B     H2                  SET VALUES IN NODE\n         USING NODE,R6\nH1       L     R0,RLINK1           AVAIL STACK SINGLY LINKED VIA RLINK1\n         ST    R0,AVAIL            AVAIL <- RLINK1(AVAIL)\nH2       SR    R1,R1\n         IC    R1,INFLOOR          R1 <- INFLOOR\n         STC   R1,IN               SET IN\n         SR    R2,R2\n         IC    R2,OUTFLOOR         R2 <- OUTFLOOR\n         STC   R2,OUT              SET OUT\n         MVC   NEXTINST,=XL4'00'   CLEAR NEXTINST\n         MVC   MANBR,CNTR+3        SET MAN NUMBER\n         LA    R12,0\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\nM2       EQU   *                   SIGNAL AND WAIT\n         LR    R0,R4               R0 <- FLOOR\n         SR    R0,R1               R0 <- FLOOR - IN\n         ST    R6,TEMP             SAVE R6\n         LTR   R0,R0               FLOOR = IN?\n         BNZ   H3                  NO\n         LA    R6,ELEV1\n         L     R0,NEXTINST         IF NXT STEP E6 DOORS NOW CLOSING\n         ICM   R0,B'1000',=F'0'\n         S     R0,=A(E6)           ELEVATOR AT E6?\n         BNZ   H4                  NO\n         LA    R0,E3               YES, OPEN DOORS\n         ST    R0,NEXTINST         SET NEXTINST TO E3\n         BAL   R14,DELETEW         REMOVE FROM WAIT\n         B     H5                  REINSERT AT FRONT OF WAIT\nH4       SR    R0,R0\n         IC    R0,D3               GET D3\n         LTR   R0,R0               D3 = ZERO?\n         BZ    H3                  YES\n         MVI   D1,X'01'            SET D1\n         MVI   D3,X'00'            SET D3\nH5       BAL   R14,IMMED           INSERT ELEV1 AT FRONT OF WAIT\n         B     M3                  R1 & R2 HAVE CHANGED\nH3       SR    R2,R1               R2 <- OUT - IN\n         LA    R0,1\n         LTR   R2,R2               OUT = IN ?\n         BP    H6                  BRANCH IF GOINGUP\n         LR    R9,R1               R9 <- IN\n         M     R8,=F'3'            R9 <- 3*IN\n         LA    R1,CALL(R9)         R1 <- PTR CALL TABLE\n         STC   R0,2(R1)            CALLDOWN(IN) <- 1\n         B     H7\nH6       LR    R9,R1\n         M     R8,=F'3'\n         LA    R1,CALL(R9)\n         STC   R0,0(R1)            CALLUP(IN) <- 1\nH7       SR    R0,R0\n         IC    R0,D2\n         LTR   R0,R0\n         BNZ   H8                  IF D2 = ZERO, CALL DECISION\n         BAL   R14,DECISION\nH8       L     R0,ELEV1+16\n         ICM   R0,B'1000',=F'0'\n         S     R0,=A(E1)\n         BNZ   M3                  IF ELEVATOR AT E1, CALL DECISION\n         BAL   R14,DECISION\nM3       EQU   *                   ENTER QUEUE\n         L     R6,TEMP\n         SR    R1,R1\n         IC    R1,IN\n         LTR   R1,R1\n         BZ    H9\n         LR    R8,R1\n         SR    R1,R1\nH10      LA    R1,NODESIZE(R1)\n         BCT   R8,H10\nH9       LA    R1,QUEUE0(R1)       R1 <- A(QUEUE(IN))\n         BAL   R14,INSERT          INSERT NODE(R6) AT RIGHT QUEUE(IN)\nM4A      L     R0,GIVEUPTM\n         BAL   R14,HOLDC           WAIT GIVEUPTM UNITS\nM4       EQU   *                   GIVE UP\n         L     R0,IN\n         S     R0,R4               IN(R6) - FLOOR\n         BNZ   M6A\n         SR    R0,R0\n         IC    R0,D1               FLOOR = IN(R6)\n         LTR   R0,R0\n         BNZ   M4A\nM6A      LA    R12,4\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\nM6       EQU   *                   GET OUT\n         LA    R12,12\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         BAL   R14,DELETE          DELETE NODE(R6)\n         L     R0,AVAIL            FROM QUEUE OR ELEVATOR\n         ST    R0,RLINK1\n         ST    R6,AVAIL\n         B     CYCLE\nM5       EQU   *                   GET IN\n         LA    R12,8\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         BAL   R14,DELETE          NODE(R6) DELETED FROM QUEUE\n         LA    R1,ELEVATOR\n         BAL   R14,INSERT          INSERT AT RIGHT OF ELEVATOR\n         LA    R0,1\n         SR    R2,R2\n         IC    R2,OUT\n         LR    R9,R2               R9 <- OUT\n         M     R8,=F'3'            R9 <- 3*OUT\n         LA    R9,CALL(R9)         R9 <- PTR TO CALL TABLE\n         STC   R0,1(R9)            CALLCAR(OUT(R6)) <- 1\n         LTR   R5,R5\n         BNZ   CYCLE               STATE NOT NEUTRAL\n         SR    R2,R4               OUT - FLOOR\n         LR    R5,R2               SET STATE TO PROPER DIRECTION\n         LA    R6,ELEV2            R6 <- A(ELEV2)\n         BAL   R14,DELETEW         REMOVE E5 ACTION FROM WAIT\n         LA    R0,25\n         B     E5A                 RESTART E5 ACTION IN 25 UNITS\n         TITLE 'COROUTINE E'\nE1A      BAL   R14,CYCLE1          SET NEXTINST TO E1, GOTO CYCLE\nE1       EQU   *                   WAIT FOR CALL (NO ACTION)\nE2A      BAL   R14,HOLDC\nE2       EQU   *                   CHANGE STATE\n         LA    R12,16\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         LTR   R5,R5               TEST STATE\n         BM    I1                  BRANCH IF STATE GOINGUP\n         XC    ORWORK,ORWORK       STATE IS GOINGUP\n         SR    R0,R0\n         BAL   R14,CALLPTR         R7 <- PTR CALL TBL CURRENT FLOOR\n         OC    ORWORK,3(R7)\n         OC    ORWORK,6(R7)\n         OC    ORWORK,9(R7)\n         OC    ORWORK,12(R7)\n         OC    ORWORK,ORWORK\n         BNZ   E3                  BRANCH IF CALLS FOR HIGHER FLOORS\n         LR    R8,R7               R8 <- PTR TO CALL TBL CURRENT FLOOR\n         S     R8,=F'2'            HAVE PASS CALLED LOWER FLOORS?\n         OC    ORWORK(1),0(R8)\n         S     R8,=F'3'\n         OC    ORWORK(1),0(R8)\n         S     R8,=F'3'\n         OC    ORWORK(1),0(R8)\n         S     R8,=F'3'\n         OC    ORWORK(1),0(R8)\n         B     I4\nI1       EQU   *                   STATE IS GOIN DOWN\n         XC    ORWORK,ORWORK\n         BAL   R14,CALLPTR\n         LR    R8,R7               R8 <- PTR CALL TBL CURR FLOOR\n         S     R8,=F'3'\n         OC    ORWORK,0(R8)\n         S     R8,=F'3'\n         OC    ORWORK,0(R8)\n         S     R8,=F'3'\n         OC    ORWORK,0(R8)\n         S     R8,=F'3'\n         OC    ORWORK,0(R8)\n         OC    ORWORK,ORWORK\n         BNZ   E3                  BRANCH IF CALL FOR LOWER FLOORS\n         OC    ORWORK(1),4(R7)\n         OC    ORWORK(1),7(R7)\n         OC    ORWORK(1),10(R7)\n         OC    ORWORK(1),13(R7)\nI4       LCR   R5,R5               REVERSE DIRECTION OF STATE\nI5       XC    0(3,R7),0(R7)       SET CALL VARIABLE TO ZERO\n         OC    ORWORK,ORWORK       SHOULD STATE BE NEUTRAL?\n         BNZ   E3                  NO\n         SR    R5,R5               STATE TO NEUTRAL\nE3       EQU   *                   OPEN DOOR\n         LA    R12,20\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         LA    R6,ELEV3\n         L     R0,LLINK1           IS LLINK1 ZERO?\n         LTR   R0,R0               E9 ALREADY SCHEDULED?\n         BZ    I3                  NO\n         BAL   R14,DELETEW         YES, DELETE FROM WAIT LIST\nI3       LA    R0,300\n         BAL   R14,HOLD            SCHEDULE E9 AFTER 300 UNITS\n         LA    R6,ELEV2\n         LA    R0,76\n         BAL   R14,HOLD            SCHEDULE E5 AFTER 76 UNITS\n         MVI   D2,X'01'\n         MVI   D1,X'01'\n         LA    R0,20\nE4A      LA    R6,ELEV1\n         BAL   R14,HOLDC\nE4       EQU   *                   LET PEOPLE IN OR OUT\n         LR    R0,R4               R0 <- FLOOR\n         LA    R6,ELEVATOR         R6 <- A(ELEVATOR)\nI6       L     R6,LLINK2           R6 <- LLINK2(R6)\n         CL    R6,=A(ELEVATOR)     SEARCH ELEVATOR LIST RIGHT TO LEFT\n         BE    I7                  BRANCH IF SEARCH COMPLETE\n         CLM   R0,B'0001',OUT      COMPARE OUT(R6) WITH FLOOR\n         BNE   I6                  IF NOT EQUAL, CONTINUE SEARCH\n         LA    R0,M6               PREPARE SEN MAN TO M6\n         B     I8\nI7       LR    R7,R4               FLOOR\n         LTR   R7,R7\n         BZ    I9\n         LR    R8,R7\n         SR    R7,R7\nI10      LA    R7,NODESIZE(R7)     DISPL TO TABLE ENTRY\n         BCT   R8,I10\nI9       LA    R6,QUEUE0(R7)       R6 <- A(QUEUE(FLOOR))\n         L     R6,RLINK2           R6 <- RLINK2(LOC(QUEUE(FLOOR)))\n         CL    R6,RLINK2           R6 <- RLINK2(R6)\n         BE    I11                 YES QUEUE EMPTY\n         BAL   R14,DELETEW         NO CANCEL ACTION M4 FOR THIS MAN\n         LA    R0,M5               PREPARE TO SEND MAN TO M5\nI8       ST    R0,NEXTINST         NEXTINST = M5 OR M6\n         BAL   R14,IMMED\n         LA    R0,25               WAIT 25 UNITS\n         MVI   PRINTSW,X'00'\n         B     E4A                 REPEAT E4\nI11      MVI   D1,X'00'\n         MVI   D3,X'01'\n         CLI   PRINTSW,X'01'\n         MVI   PRINTSW,X'01'\n         BNE   I2\n         LA    R12,24\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\nI2       B     CYCLE\nE5A      BAL   R14,HOLDC\nE5       EQU   *\n         LA    R12,28\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         SR    R0,R0\n         IC    R0,D1\n         LTR   R0,R0               D1 = ZERO ?\n         BZ    I12\n         LA    R0,40               NO, PEOPLE STILL GETTING IN/OUT\n         B     E5A\nI12      MVI   D3,X'00'            IF D1 = ZERO, SET D3 TO ZERO\n         LA    R0,20\n         LA    R6,ELEV1\nE6A      BAL   R14,HOLDC\nE6       EQU   *                   PREPARE TO MOVE\n         LTR   R5,R5\n         BM    I13                 IF STATE NE GOINGDOWN\n*                                  RESET CALLUP & CALLCAR THIS FLOOR\n         BAL   R14,CALLPTR\n         MVI   0(R7),X'00'         CALLUP(FLOOR) <- ZERO\n         MVI   1(R7),X'00'         CALLCAR(FLOOR) <- ZERO\nI13      LTR   R5,R5\n         BP    I16                 IF STATE NE GOINGUP\n         BAL   R14,CALLPTR\n         MVI   1(R7),X'00'         CALLCAR(FLOOR) <- ZERO\n         MVI   2(R7),X'00'         CALLDOWN(FLOOR) <- ZERO\nI16      LTR   R5,R5               ZERO -> NEUTRAL\n         BNZ   E6B\n         BAL   R14,DECISION\nE6B      LTR   R5,R5\n         BNZ   I19\n         B     E1A                 IF STATE = NEUTRAL, GOTO E1 WAIT\nI19      SR    R0,R0\n         IC    R0,D2\n         LTR   R0,R0\n         BZ    I20\n         LA    R6,ELEV3            ELSE, IF D2 = ZERO\n         BAL   R14,DELETEW         CANCEL ACTIVITY E9\n         XC    IN,IN\n         XC    LLINK1,LLINK1\n         XC    RLINK1,RLINK1\nI20      LA    R0,15\n         LA    R6,ELEV1\n         LTR   R5,R5\n         BM    E8A                 IF STATE = GOINGDOWN, GOTO E8\nE7A      BAL   R14,HOLDC\nE7       EQU   *                   GO UP A FLOOR\n         LA    R12,32\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         LA    R4,1(R4)\n         LA    R0,51\n         BAL   R14,HOLDC\n         BAL   R14,CALLPTR\n         SR    R0,R0\n         ICM   R0,B'0011',0(R7)    CALLUP(FLOOR) OR CALLCAR(FLOOR) ZERO\n         BP    I23\n         CL    R4,=F'2'            FLOOR = 2?\n         BE    I24\n         SR    R0,R0\n         IC    R0,2(R7)            CALLDOWN(FLOOR) NE ZERO?\n         LTR   R0,R0\n         BZ    E7                  NO, REPEAT STEP E7\nI24      XC    ORWORK,ORWORK\n         OC    ORWORK,3(R7)\n         OC    ORWORK,6(R7)\n         OC    ORWORK,9(R7)\n         OC    ORWORK,12(R7)\n         OC    ORWORK,ORWORK\n         BNZ   E7                  CALLS FOR HIGHER FLOORS\nI23      LA    R0,14\n         B     E2A                 WAIT 14 UNITS GOTO E2\nE8A      BAL   R14,HOLDC\nE8       EQU   *                   GO DOWN A FLOOR\n         LA    R12,36\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         S     R4,=F'1'\n         LA    R0,61\n         BAL   R14,HOLDC\n         BAL   R14,CALLPTR\n         SR    R0,R0\n         ICM   R0,B'0011',1(R7)    CALLCAR(FLOOR) CALLDOWN(FLOOR) NE 0\n         BP    I27\n         CL    R4,=F'2'            FLOOR = 2?\n         BE    I28\n         SR    R0,R0\n         IC    R0,0(R7)            CALLUP(FLOOR) NE ZERO?\n         LTR   R0,R0\n         BZ    E8                  NO, REPEAT E8\nI28      XC    ORWORK,ORWORK\n         S     R7,=F'3'\n         OC    ORWORK,0(R7)\n         S     R7,=F'3'\n         OC    ORWORK,0(R7)\n         S     R7,=F'3'\n         OC    ORWORK,0(R7)\n         S     R7,=F'3'\n         OC    ORWORK,0(R7)\n         OC    ORWORK,ORWORK\n         BNZ   E8                  CALLS FOR LOWER FLOORS\nI27      LA    R0,23\n         B     E2A\nE9       EQU   *                   SET INACTION INDICATOR\n         LA    R12,40\n         L     R15,=A(PRINT)\n         BAL   R14,SENTER\n         XC    IN,IN\n         XC    LLINK1,LLINK1\n         XC    RLINK1,RLINK1\n         MVI   D2,X'00'\n         BAL   R14,DECISION\n         B     CYCLE\n         TITLE 'DECISION'\nDECISION EQU   *\n         LTR   R5,R5               STATE = NEUTRAL ?\n         BZ    Z1\n         BR    R14                 YES RETURN\nZ1       L     R9,ELEV1+16\n         ICM   R9,B'1000',=F'0'\n         S     R9,=A(E1)\n         BNZ   Z2                  BRANCH IF NOT AT E1\n         SR    R0,R0\n         ICM   R0,B'0111',CALL+6   GET CALL VAR FLOOR 2\n         LA    R3,E3               PREPARE TO SCHEDULE E3\n         BNZ   Z3\nZ2       SR    R1,R1\n         LA    R5,CALL\nZ5       ICM   R0,B'0111',0(R5)\n         BNZ   Z4\nZ8       LA    R5,3(R5)            NEXT CALL TABLE ENTRY\n         LA    R1,1(R1)            R1 <- J\n         CL    R1,=F'4'\n         BNH   Z5\n         LR    R0,R14              ALL CALL(J), J NE FLOOR, ARE ZERO\n         ICM   R0,B'1000',=F'0'\n         S     R0,=A(E6B)\n         BZ    Z6\n         SR    R5,R5\n         BR    R14\nZ6       LA    R1,2                R1 <- J\nZ4       LR    R5,R1               R5 <- J\n         SR    R5,R4               STATE <- J - FLOOR\n         BNZ   Z7\n         LTR   R0,R0\n         BNZ   Z8                  J = FLOOR NOT ALLOWED\nZ7       LTR   R9,R9\n         BZ    Z9                  BRANCH IF E1\n         BR    R14\nZ9       LTR   R5,R5\n         BNZ   Z10                 BRANCH IF J=2\n         BR    R14\nZ10      LA    R3,E6               SCHEDULE E6\nZ3       LA    R0,20               WAIT 20 UNITS\n         LR    R6,R12              SAVE R6\n         LA    R6,ELEV1\n         ST    R3,NEXTINST\n         ST    R14,SAVER14         SAVE R14\n         BAL   R14,HOLD\n         LR    R6,R12              RESTORE R6\n         L     R14,SAVER14         RESTORE R14\n         BR    R14\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'DATA DEFINITIONS'\n         DS    0D\nDBLWORD  DS    D\nSAVER14  DS    F\nLINECTR  DC    F'60'\nAVAIL    DC    F'0'                LINK TO AVAILABLE NODES\nTIME     DC    F'0'                CURRENT SIMULATED TIME\nINTERTME DC    F'0'                TIME BEFORE NEXT MAN ENTERS SYSTEM\nGIVEUPTM DC    F'0'                WAIT TIME BEFORE GIVEUP\nTEMP     DC    F'0'\nCNTR     DC    F'0'\n         DC    4XL4'00'            PADDING FOR CALL TABLE\nCALL     EQU   *\n         DC    X'00'               CALLUP0, BUTTON FLOOR ZERO\n         DC    X'00'               CALLCAR0, ELEV BUTTON, DEST FLOOR\n         DC    X'00'               CALLDOWN0, DOWN BUTTON, FLOOR ZERO\n*\n         DC    3X'00'              CALLUP1, CALLCAR1, CALLDOWN1\n         DC    3X'00'              CALLUP2, CALLCAR2, CALLDOWN2\n         DC    3X'00'              CALLUP3, CALLCAR3, CALLDOWN3\n         DC    3X'00'              CALLUP4, CALLCAR4, CALLDOWN4\n*\n         DC    4XL4'00'            PADDING FOR CALL TABLE\nORWORK   DC    XL3'00'\nD1       DC    X'00'               1 -> DOOR OPEN,ACTIVE, PEOPLE IN/OUT\nD2       DC    X'00'               0 -> SAT ON FLOOR 30 SEC OR MORE\nD3       DC    X'00'               1 -> DOOR OPEN, INACTIVE\nINFLOOR  DC    X'00'\nOUTFLOOR DC    X'00'\nPRINTSW  DC    X'01'\n         EJECT\nPAGEHEAD EQU   *\n         DC    C'1'                SKIP TO NEW PAGE\n         DC    C'TIME '\n         DC    C'STATE '\n         DC    C'FLOOR '\n         DC    C'D1 '\n         DC    C'D2 '\n         DC    C'D3 '\n         DC    C'STEP '\n         DC    C'ACTION'\n         DC    45C' '\nHEADSZ   EQU   *-PAGEHEAD\n*\nDETAIL   EQU   *\n         DC    C' '                PRINT SPACE1\nPTIME    DS    CL4\n         DC    CL3' '\nPSTATE   DS    CL1\n         DC    CL5' '\nPFLOOR   DS    CL1\n         DC    CL4' '\nPD1      DS    CL1\n         DC    CL2' '\nPD2      DS    CL1\n         DC    CL2' '\nPD3      DS    CL1\n         DC    CL2' '\nPSTEP    DS    CL2\n         DC    CL3' '\nPMSG     DS    CL50\nDETSZ    EQU   *-DETAIL\n*\nBLANKS   DC    83C' '\n*\nM1MSG    DC    CL50' '\n         ORG   M1MSG\n         DC    C'MAN NO. '\nM1MAN    DS    CL2\n         DC    C' ARRIVES AT FLOOR '\nM1IN     DS    CL1\n         DC    C', DESTINATION IS '\nM1OUT    DS    CL1\n         DC    C'.'\n         ORG\nM4MSG    DC    CL50' '\n         ORG   M4MSG\n         DC    C'MAN NO. '\nM4MAN    DS    CL2\n         DC    C' DECIDES TO GIVE UP AND HE LEAVES.'\n         ORG\nM5MSG    DC    CL50' '\n         ORG   M5MSG\n         DC    C'MAN NO. '\nM5MAN    DS    CL2\n         DC    C' GETS IN.'\n         ORG\nM6MSG    DC    CL50' '\n         ORG   M6MSG\n         DC    C'MAN NO. '\nM6MAN    DS    CL2\n         DC    C' GETS OUT, LEAVES THE SYSTEM.'\n         ORG\nE2MSG    DC    C'ELEVATOR STOPS'\n*\nE3MSG    DC    C'ELEVATOR DOORS START TO OPEN'\n*\nE4MSG    DC    C'DOORS OPEN, NOBODY IS THERE'\n*\nE5MSG2   DC    C'DOORS FLUTTER'\n*\nE5MSG1   DC    C'ELEVATOR DOORS START TO CLOSE'\n*\nE7MSG    DC    C'ELEVATOR MOVING UP'\n*\nE8MSG    DC    C'ELEVATOR MOVING DOWN'\n*\nE1MSG    DC    C'ELEVATOR DORMANT'\n*\n         TITLE 'LIST HEADS'\n         DS    0F\nWAIT     EQU   *                   LIST HEAD FOR WAIT LIST\n         DC    A(MAN1)             LLINK1\n         DC    A(MAN1)             RLINK1\n         DC    3F'0'               NOT USED\n         DC    F'0'                NEXTTIME = ZERO ALWAYS\n         DC    F'0'                IN,OUT\n*\nQUEUE0   EQU   *                   LIST HEAD FOR QUEUE(0)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE0)           LLINK2\n         DC    A(QUEUE0)           RLINK2\n         DC    2F'0'               NOT USED\n         DC    F'0'                IN,OUT\n*\nQUEUE1   EQU   *                   LIST HEAD FOR QUEUE(1)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE1)           LLINK2\n         DC    A(QUEUE1)           RLINK2\n         DC    3F'0'\n*\nQUEUE2   EQU   *                   LIST HEAD FOR QUEUE(2)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE2)           LLINK2\n         DC    A(QUEUE2)           RLINK2\n         DC    3F'0'\n*\nQUEUE3   EQU   *                   LIST HEAD FOR QUEUE(3)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE3)           LLINK2\n         DC    A(QUEUE3)           RLINK2\n         DC    3F'0'\n*\nQUEUE4   EQU   *                   LIST HEAD FOR QUEUE(4)\n         DC    2F'0'               NOT USED\n         DC    A(QUEUE4)           LLINK2\n         DC    A(QUEUE4)           RLINK2\n         DC    3F'0'\n*\nELEVATOR EQU   *                   LIST HEAD FOR ELEVATOR\n         DC    2F'0'               NOT USED\n         DC    A(ELEVATOR)         LLINK2\n         DC    A(ELEVATOR)         RLINK2\n         DC    2F'0'               NOT USED\n         DC    F'0'                IN,OUT\n         TITLE 'FOUR PERMANENT NODES, ALWAYS PRESENT IN SYSTEM'\n*---------------------------------------------------------------------*\n* MAN1: INITIALLY THE SOLE ENTRY ON THE WAIT LIST                     *\n*       ALWAYS POSITIONED AT STEP M1 READY TO ENTER A NEW MAN INTO THE*\n*       SYSTEM                                                        *\n*---------------------------------------------------------------------*\nMAN1     EQU   *\n         DC    A(WAIT)             LLINK1\n         DC    A(WAIT)             RLINK1\n         DC    2F'0'               LLINK2, RLINK2\n         DC    A(M1)               NEXTINST = M1\n         DC    F'0'                NEXTTIME\n         DC    F'0'                IN,OUT\n*---------------------------------------------------------------------*\n* ELEV1: GOVERNS MAIN ACTIONS OF ELEVATOR AT STEPS E1,E2,E3,E4,E6,E7, *\n*                                                  E8                 *\n*        I.E. ALL ELEVATOR ACTIONS EXCEPT E5,E9                       *\n*---------------------------------------------------------------------*\nELEV1    EQU   *\n         DC    4F'0'\n         DC    A(E1)               NEXTINST = E1\n         DC    2F'0'\n*---------------------------------------------------------------------*\n* ELEV2: REPRESENTS INDEPENDENT ELEVATOR ACTION E5 (CLOSE DOOR)       *\n*        TAKE PLACE INDEPENDENTLY OF OTHER ELEVATOR ACTIONS WITH      *\n*        RESPECT TO SIMULATED TIME                                    *\n*---------------------------------------------------------------------*\nELEV2    EQU   *\n         DC    4F'0'\n         DC    A(E5)               NEXTINST = E5\n         DC    2F'0'\n*---------------------------------------------------------------------*\n* ELEV3: REPRESENTS INDEPENDENT ELEVATOR ACTION E9 (SET INACTION      *\n*        INDICATOR). TAKES PLACE INDEPENDENTLY OF OTHER ELEVATOR      *\n*        ACTIONS WITH RESPECT TO SIMULATED TIME                       *\n*---------------------------------------------------------------------*\nELEV3    EQU   *\n         DC    4F'0'\n         DC    A(E9)               NEXTINST = E9\n         DC    2F'0'\n*\nPRINTER  DCB   DSORG=PS,RECFM=FB,BLKSIZE=27971,LRECL=83,               X\n               DDNAME=PRINTER,MACRF=PM\nPOOLMAX  DC    A(POOLMAX+4)\n         DC    2000XL4'00'         STORAGE POOL\n         DS    0F\n         TITLE 'DSECTS'\nNODE     DSECT\nLLINK1   DS    F                   WAIT LIST LINK\nRLINK1   DS    F                   WAIT LIST LINK\nLLINK2   DS    F                   QUEUE OR ELEVATOR LIST LINK\nRLINK2   DS    F                   QUEUE OR ELEVATOR LIST LINK\nNEXTINST DS    F                   BRANCH INST TO PROPER ACTION\nNEXTTIME DS    F\nIN       DS    CL1\nOUT      DS    CL1\nMANBR    DS    CL1\n         DS    CL1\nNODESIZE EQU   *-NODE\nELEVA    CSECT\n         TITLE 'REMOTE AREAS'\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'VALUES'\nVALUES   B     14(0,R9)\n         USING VALUES,R9\n         DC    AL1(8),CL9'VALUES'\n         L     R1,CNTR\n         LA    R1,1(R1)\n         ST    R1,CNTR\n         CL    R1,=F'1'\n         BNE   VAL2\n         MVI   INFLOOR,X'00'\n         MVI   OUTFLOOR,X'02'\n         MVC   INTERTME,=F'0038'\n         MVC   GIVEUPTM,=F'0152'\n         B     SEXIT\nVAL2     CL    R1,=F'2'\n         BNE   VAL3\n         MVI   INFLOOR,X'04'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0098'\n         MVC   GIVEUPTM,=F'0500'\n         B     SEXIT\nVAL3     CL    R1,=F'3'\n         BNE   VAL4\n         MVI   INFLOOR,X'02'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0005'\n         MVC   GIVEUPTM,=F'0800'\n         B     SEXIT\nVAL4     CL    R1,=F'4'\n         BNE   VAL5\n         MVI   INFLOOR,X'02'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0150'\n         MVC   GIVEUPTM,=F'0800'\n         B     SEXIT\nVAL5     CL    R1,=F'5'\n         BNE   VAL6\n         MVI   INFLOOR,X'03'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0073'\n         MVC   GIVEUPTM,=F'0450'\n         B     SEXIT\nVAL6     CL    R1,=F'6'\n         BNE   VAL7\n         MVI   INFLOOR,X'02'\n         MVI   OUTFLOOR,X'01'\n         MVC   INTERTME,=F'0238'\n         MVC   GIVEUPTM,=F'0176'\n         B     SEXIT\nVAL7     CL    R1,=F'7'\n         BNE   VAL8\n         MVI   INFLOOR,X'01'\n         MVI   OUTFLOOR,X'02'\n         MVC   INTERTME,=F'0225'\n         MVC   GIVEUPTM,=F'0600'\n         B     SEXIT\nVAL8     CL    R1,=F'8'\n         BNE   VAL9\n         MVI   INFLOOR,X'01'\n         MVI   OUTFLOOR,X'00'\n         MVC   INTERTME,=F'0049'\n         MVC   GIVEUPTM,=F'0400'\n         B     SEXIT\nVAL9     CL    R1,=F'9'\n         BNE   VAL10\n         MVI   INFLOOR,X'01'\n         MVI   OUTFLOOR,X'03'\n         MVC   INTERTME,=F'0172'\n         MVC   GIVEUPTM,=F'0400'\n         B     SEXIT\nVAL10    CL    R1,=F'10'\n         BNE   VAL11\n         MVI   INFLOOR,X'02'\n         MVI   OUTFLOOR,X'04'\n         MVC   INTERTME,=F'3336'\n         MVC   GIVEUPTM,=F'0400'\n         B     SEXIT\nVAL11    CL    R1,=F'11'\n         BNE   VALEND\n         MVI   INFLOOR,X'02'\n         MVI   OUTFLOOR,X'03'\n         MVC   INTERTME,=F'0456'\n         MVC   GIVEUPTM,=F'0050'\n         B     SEXIT\nVALEND   L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         B     XIT                 END SIMULATION\n*\n         LTORG\n         DROP  R9\n         TITLE 'PRINT'\nPRINT    B     14(0,R9)\n         USING PRINT,R9\n         DC    AL1(8),CL9'PRINT'\n         MVI   PMSG,X'40'\n         MVC   PMSG+1(49),PMSG     CLEAR PMSG\n         L     R1,LINECTR\n         LA    R1,1(R1)\n         ST    R1,LINECTR\n         CL    R1,=F'52'           PAGE BREAK?\n         BL    PRINT1              NO\n         LA    R1,3\n         ST    R1,LINECTR          RESET LINE COUNT\n         PUT   PRINTER,PAGEHEAD    PRINT HEADING\n         PUT   PRINTER,BLANKS\nPRINT1   L     R2,TIME\n         CVD   R2,DBLWORD\n         OI    DBLWORD+7,X'0F'\n         UNPK  PTIME,DBLWORD+5(3)\n         LTR   R5,R5\n         BZ    PRINT2              NEUTRAL\n         BL    PRINT3              GOINGDOWN\n         MVI   PSTATE,C'U'         GOINGUP\n         B     PRINT4\nPRINT2   MVI   PSTATE,C'N'\n         B     PRINT4\nPRINT3   MVI   PSTATE,C'D'\nPRINT4   MVI   PD1,X'F0'\n         MVI   PD2,X'F0'\n         MVI   PD3,X'F0'\n         CLI   D1,X'00'\n         BE    PRINT5\n         MVI   PD1,C'X'\nPRINT5   CLI   D2,X'00'\n         BE    PRINT6\n         MVI   PD2,C'X'\nPRINT6   CLI   D3,X'00'\n         BE    PRINT7\n         MVI   PD3,C'X'\nPRINT7   STC   R4,PFLOOR\n         OI    PFLOOR,X'F0'\n         LR    R15,R12\n         B     *+4(R15)\n         B     PM1\n         B     PM4\n         B     PM5\n         B     PM6\n         B     PE2\n         B     PE3\n         B     PE4\n         B     PE5\n         B     PE7\n         B     PE8\n         B     PE1\n*\nPM1      L     R15,=A(CVMAN)\n         BAL   R14,SENTER\n         UNPK  M1MAN,DBLWORD+6(2)\n         MVC   M1IN,IN\n         OI    M1IN,X'F0'\n         MVC   M1OUT,OUT\n         OI    M1OUT,X'F0'\n         MVC   PSTEP,=C'M1'\n         MVC   PMSG,M1MSG\n         B     PRINT8\nPM4      L     R15,=A(CVMAN)\n         BAL   R14,SENTER\n         UNPK  M4MAN,DBLWORD+6(2)\n         MVC   PSTEP,=C'M4'\n         MVC   PMSG,M4MSG\n         B     PRINT8\nPM5      L     R15,=A(CVMAN)\n         BAL   R14,SENTER\n         UNPK  M5MAN,DBLWORD+6(2)\n         MVC   PSTEP,=C'M5'\n         MVC   PMSG,M5MSG\n         B     PRINT8\nPM6      L     R15,=A(CVMAN)\n         BAL   R14,SENTER\n         UNPK  M6MAN,DBLWORD+6(2)\n         MVC   PSTEP,=C'M6'\n         MVC   PMSG,M6MSG\n         B     PRINT8\nPE2      MVC   PMSG(L'E2MSG),E2MSG\n         MVC   PSTEP,=C'E2'\n         B     PRINT8\nPE3      MVC   PMSG(L'E3MSG),E3MSG\n         MVC   PSTEP,=C'E3'\n         B     PRINT8\nPE4      MVC   PMSG(L'E4MSG),E4MSG\n         MVC   PSTEP,=C'E4'\n         B     PRINT8\nPE5      MVC   PMSG(L'E5MSG1),E5MSG1\n         MVC   PSTEP,=C'E5'\n         CLI   D1,X'01'\n         BNE   PRINT8\n         MVI   PMSG,X'40'\n         MVC   PMSG+1(49),PMSG\n         MVC   PMSG(L'E5MSG2),E5MSG2\n         B     PRINT8\nPE7      MVC   PMSG(L'E7MSG),E7MSG\n         MVC   PSTEP,=C'E7'\n         B     PRINT8\nPE8      MVC   PMSG(L'E8MSG),E8MSG\n         MVC   PSTEP,=C'E8'\n         B     PRINT8\nPE1      MVC   PMSG(L'E1MSG),E1MSG\n         MVC   PSTEP,=C'E1'\n         B     PRINT8\nPRINT8   EQU   *\n         PUT   PRINTER,DETAIL\n         B     SEXIT\n         DROP  R9\n         TITLE 'CVMAN'\nCVMAN    B     14(0,R9)\n         USING CVMAN,R9\n         DC    AL1(8),CL9'CVMAN'\n         SR    R2,R2\n         IC    R2,MANBR\n         CVD   R2,DBLWORD\n         OI    DBLWORD+7,X'0F'\n         B     SEXIT\n         LTORG\n         DROP  R9\n         END   ELEV\n//G.PRINTER  DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00009": {"ttr": 2310, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00\\xf9\\x00\\xf9\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 249, "newlines": 249, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL TOPSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00009'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'TOPOLOGICAL SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        29 APR 1981 - CHARLES HOTTEL                                 *\n*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 250-265       *\n*        TOPOLOGICAL SORT (DOES NOT PRINT OUT LOOPS)                  *\n*---------------------------------------------------------------------*\n* R6 = N                                                              *\n* R5 = F                                                              *\n* R4 = K                                                              *\n* R3 = J AND R                                                        *\n* R2 = AVAIL AND P                                                    *\n* R12 = PTR TO STORAGE                                                *\n*---------------------------------------------------------------------*\nTOPSORT  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R11,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE: INPUT PHASE                                       *\n*   T1. INITIALIZE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (READER,INPUT,PRINTER,OUTPUT)\n         GET   READER,INBUF        YES, READ NEXT CARD\n         PACK  DBLWORD,INBUF(4)    PACK N\n         CVB   R6,DBLWORD          BINARY N\n         LR    R4,R6               K <- N\n         LA    R4,1(R4)\n         LA    R8,STORAGE\n         USING X,R8\nZEROHEAD XC    HEADER,HEADER       ZERO O-N ENTRIES\n         LA    R8,8(R8)\n         BCT   R4,ZEROHEAD\n         LR    R2,R8               SET AVAIL\n         USING DIRSUCC,R2\n         LA    R12,STORAGE\n*---------------------------------------------------------------------*\n* T2. NEXT RELATION                                                   *\n*---------------------------------------------------------------------*\nREADREL  GET   READER,INBUF        READ NEXT CARD\n*---------------------------------------------------------------------*\n* T3. RECORD THE RELATION                                             *\n*---------------------------------------------------------------------*\n         PACK  DBLWORD,INBUF(4)    PACK J\n         CVB   R3,DBLWORD          BINARY J\n         PACK  DBLWORD,INBUF+5(4)  PACK K\n         CVB   R4,DBLWORD          BINARY K\n         LR    R8,R4               K\n         SLL   R8,3                8*K DISP TO ENTRY\n         L     R9,COUNT(R12)       COUNT(K)\n         LA    R9,1(R9)            COUNT(K) + 1\n         ST    R9,COUNT(R12)\n         LR    R8,R3               J\n         SLL   R8,3                8*J DISP TO ENTRY\n         L     R9,TOP(R12)         GET TOP(J)\n         ST    R9,NEXT             NEXT(P) <- TOP(J)\n         ST    R4,SUC              SUC(P) <- K\n         ST    R2,TOP(R12)         TOP(J) <- P\n         LA    R2,8(R2)            AVAIL <- AVAIL + 8\n         B     READREL             NEXT RELATION\n*---------------------------------------------------------------------*\n* T4. SCAN FOR ZEROS                                                  *\n*---------------------------------------------------------------------*\nEOF      LR    R4,R6               K <- N\n         SR    R3,R3               R <- ZERO\nLOOP1    LR    R8,R4               K\n         SLL   R8,3                8*K DISP TO ENTRY\n         L     R9,COUNT(R12)       GET COUNT\n         LTR   R9,R9               COUNT ZERO?\n         BNZ   DECK                NO\n         ST    R8,0(R12,R3)        YES, PUT INTO QUEUE QLINK(R) <- K\n         LR    R3,R8               R <- K\nDECK     BCT   R4,LOOP1            K <- K - 1\n*---------------------------------------------------------------------*\n* SORTING PHASE                                                       *\n* T5. OUTPUT FROM FRONT OF QUEUE                                      *\n*---------------------------------------------------------------------*\n         L     R5,QLINK0           F <- QLINK(0)\nOUTPUTIT LR    R9,R5               GET DISPL\n         SRL   R9,3                CONVERT TO DIGIT\n         CVD   R9,DBLWORD          PACKED DIGIT\n         OI    DBLWORD+7,X'0F'     SET SIGN\n         UNPK  PRTDATA(4),DBLWORD+5(3)    UNPACK SUCCESSOR\n         PUT   PRINTER,OUTBUF\n         LTR   R5,R5               IS F ZERO?\n         BZ    ENDIT               YES\n         S     R6,=F'1'            NO, N <- N - 1\n         LR    R8,R5               DISPL TO ENTRY\n         L     R2,TOP(R12)         P <- TOP(F)\n         LTR   R2,R2               ZERO?\n         BZ    DEQUE               YES\n*---------------------------------------------------------------------*\n* T6. ERASE RELATIONS                                                 *\n*---------------------------------------------------------------------*\nNEXT1    L     R4,SUC              NO, GET SUC(P)\n         LR    R8,R4\n         SLL   R8,3                DISPL TO COUNT (SUC(P))\n         L     R9,COUNT(R12)       GET COUNT(SUC(P))\n         S     R9,=F'1'            COUNT <- COUNT - 1\n         ST    R9,COUNT(R12)       SAVE NEW COUNT\n         LTR   R9,R9               ZERO?\n         BNZ   NEXT2               NO, NEXT ENTRY PTR\n         ST    R8,0(R12,R3)        YES, PUT ON QUEUE\n         LR    R3,R8\nNEXT2    L     R2,NEXT             P <- NEXT(P)\n         LTR   R2,R2               ZERO?\n         BNZ   NEXT1\n*---------------------------------------------------------------------*\n* T7. REMOVE FROM QUEUE                                               *\n*---------------------------------------------------------------------*\nDEQUE    LR    R8,R5               COPY F\n         L     R5,QLINK(R12)       F <- QLINK(F)\n         B     OUTPUTIT\n*---------------------------------------------------------------------*\n* T8. END OF PROCESS                                                  *\n*---------------------------------------------------------------------*\nENDIT    CVD   R6,DBLWORD          PACKED N\n         OI    DBLWORD+7,X'0F'     SET SIGN\n         UNPK  NPRT(4),DBLWORD+5(3)    UNPACK N\n         MVI   PRTDATA,X'40'\n         MVC   PRTDATA+1(78),PRTDATA\n         MVC   PRTDATA(8),NDATA\n         PUT   PRINTER,OUTBUF\n         CLOSE (READER,,PRINTER)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'DATA'\n         DS    0D\nDBLWORD  DS    D\nINBUF    DS    CL80\nOUTBUF   DS    0CL80\nCC       DC    C' '\nPRTDATA  DS    CL79\nNDATA    DC    C'N = '\nNPRT     DS    XL4\nREADER   DCB   DSORG=PS,RECFM=FB,BLKSIZE=27920,LRECL=80,MACRF=GM,      X\n               DDNAME=READER,EODAD=EOF\nPRINTER  DCB   DSORG=PS,RECFM=FBA,BLKSIZE=27920,LRECL=80,              X\n               DDNAME=PRINTER,MACRF=PM\n         DS    0F\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'DATA AREAS'\nSTORAGE  EQU   *\nQLINK0   DS    2F'0'\n         DC    1000XL8'00'\n         TITLE 'DSECTS'\nX        DSECT\nHEADER   DS    0CL8\nQLINK    DS    0F\nCOUNT    DS    F\nTOP      DS    F\n*\nDIRSUCC  DSECT\nSUC      DS    F\nNEXT     DS    F\n*\nTOPSORT1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         END   TOPSORT\n//G.READER   DD *\n0009      NUMBER OF OBJECTS IS NINE\n0009 0002 NINE PRECEDES TWO\n0003 0007\n0007 0005\n0005 0008\n0008 0006\n0004 0006\n0001 0003\n0007 0004\n0009 0005\n0002 0008\n/*\n//G.PRINTER  DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00010": {"ttr": 2315, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01W\\x01W\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 343, "newlines": 343, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL TOPSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00010'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'TOPOLOGICAL SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        30 APR 1981 - CHARLES HOTTEL                                 *\n*        KNUTH, FUNDAMENTAL ALGORITHMS, 2ND EDITION, PP 250-265       *\n*        TOPOLOGICAL SORT (DOES PRINT OUT LOOPS)                      *\n*        SEE EXERCISES 23 AND 24 PAGE 268.                            *\n*---------------------------------------------------------------------*\n* R6 = N                                                              *\n* R5 = F                                                              *\n* R4 = K                                                              *\n* R3 = J AND R                                                        *\n* R2 = AVAIL AND P                                                    *\n* R12 = PTR TO STORAGE                                                *\n*---------------------------------------------------------------------*\nTOPSORT  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R11,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE: INPUT PHASE                                       *\n*   T1. INITIALIZE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (READER,INPUT,PRINTER,OUTPUT)\n         GET   READER,INBUF        YES, READ NEXT CARD\n         PACK  DBLWORD,INBUF(4)    PACK N\n         CVB   R6,DBLWORD          BINARY N\n         ST    R6,N                SAVE BINARY N\n         LR    R4,R6               K <- N\n         LA    R4,1(R4)\n         LA    R8,STORAGE\n         USING X,R8\nZEROHEAD XC    HEADER,HEADER       ZERO O-N ENTRIES\n         LA    R8,8(R8)\n         BCT   R4,ZEROHEAD\n         LR    R2,R8               SET AVAIL\n         USING DIRSUCC,R2\n         LA    R12,STORAGE\n*---------------------------------------------------------------------*\n* T2. NEXT RELATION                                                   *\n*---------------------------------------------------------------------*\nREADREL  GET   READER,INBUF        READ NEXT CARD\n*---------------------------------------------------------------------*\n* T3. RECORD THE RELATION                                             *\n*---------------------------------------------------------------------*\n         PACK  DBLWORD,INBUF(4)    PACK J\n         CVB   R3,DBLWORD          BINARY J\n         PACK  DBLWORD,INBUF+5(4)  PACK K\n         CVB   R4,DBLWORD          BINARY K\n         LR    R8,R4               K\n         SLL   R8,3                8*K DISP TO ENTRY\n         L     R9,COUNT(R12)       COUNT(K)\n         LA    R9,1(R9)            COUNT(K) + 1\n         ST    R9,COUNT(R12)\n         LR    R8,R3               J\n         SLL   R8,3                8*J DISP TO ENTRY\n         L     R9,TOP(R12)         GET TOP(J)\n         ST    R9,NEXT             NEXT(P) <- TOP(J)\n         ST    R4,SUC              SUC(P) <- K\n         ST    R2,TOP(R12)         TOP(J) <- P\n         LA    R2,8(R2)            AVAIL <- AVAIL + 8\n         B     READREL             NEXT RELATION\n*---------------------------------------------------------------------*\n* T4. SCAN FOR ZEROS                                                  *\n*---------------------------------------------------------------------*\nEOF      LR    R4,R6               K <- N\n         SR    R3,R3               R <- ZERO\nLOOP1    LR    R8,R4               K\n         SLL   R8,3                8*K DISP TO ENTRY\n         L     R9,COUNT(R12)       GET COUNT\n         LTR   R9,R9               COUNT ZERO?\n         BNZ   DECK                NO\n         ST    R8,0(R12,R3)        YES, PUT INTO QUEUE QLINK(R) <- K\n         LR    R3,R8               R <- K\nDECK     BCT   R4,LOOP1            K <- K - 1\n*---------------------------------------------------------------------*\n* SORTING PHASE                                                       *\n* T5. OUTPUT FROM FRONT OF QUEUE                                      *\n*---------------------------------------------------------------------*\n         L     R5,QLINK0           F <- QLINK(0)\nOUTPUTIT LR    R9,R5               GET DISPL\n         SRL   R9,3                CONVERT TO DIGIT\n         CVD   R9,DBLWORD          PACKED DIGIT\n         OI    DBLWORD+7,X'0F'     SET SIGN\n         UNPK  PRTDATA(4),DBLWORD+5(3)    UNPACK SUCCESSOR\n         PUT   PRINTER,OUTBUF\n         LTR   R5,R5               IS F ZERO?\n         BZ    ENDIT               YES\n         S     R6,=F'1'            NO, N <- N - 1\n         LR    R8,R5               DISPL TO ENTRY\n         L     R2,TOP(R12)         P <- TOP(F)\n         SR    R15,R15\n         ST    R15,TOP(R12)        TOP(F) <- ZERO\n*---------------------------------------------------------------------*\n* TOP(1), ... ,TOP(N) POINT TO ALL RELATIONS NOT YET CANCELLED        *\n*---------------------------------------------------------------------*\n         LTR   R2,R2               ZERO?\n         BZ    DEQUE               YES\n*---------------------------------------------------------------------*\n* T6. ERASE RELATIONS                                                 *\n*---------------------------------------------------------------------*\nNEXT1    L     R4,SUC              NO, GET SUC(P)\n         LR    R8,R4\n         SLL   R8,3                DISPL TO COUNT (SUC(P))\n         L     R9,COUNT(R12)       GET COUNT(SUC(P))\n         S     R9,=F'1'            COUNT <- COUNT - 1\n         ST    R9,COUNT(R12)       SAVE NEW COUNT\n         LTR   R9,R9               ZERO?\n         BNZ   NEXT2               NO, NEXT ENTRY PTR\n         ST    R8,0(R12,R3)        YES, PUT ON QUEUE\n         LR    R3,R8\nNEXT2    L     R2,NEXT             P <- NEXT(P)\n         LTR   R2,R2               ZERO?\n         BNZ   NEXT1\n*---------------------------------------------------------------------*\n* T7. REMOVE FROM QUEUE                                               *\n*---------------------------------------------------------------------*\nDEQUE    LR    R8,R5               COPY F\n         L     R5,QLINK(R12)       F <- QLINK(F)\n         B     OUTPUTIT\n*---------------------------------------------------------------------*\n* T8. END OF PROCESS                                                  *\n*---------------------------------------------------------------------*\nENDIT    CVD   R6,DBLWORD          PACKED N\n         OI    DBLWORD+7,X'0F'     SET SIGN\n         UNPK  NPRT(4),DBLWORD+5(3)    UNPACK N\n         MVI   PRTDATA,X'40'\n         MVC   PRTDATA+1(78),PRTDATA\n         MVC   PRTDATA(8),NDATA\n         PUT   PRINTER,OUTBUF\n         LTR   R6,R6               N ZERO?\n         BZ    CLOSEIT             YES, NO LOOP\n         MVC   PRTDATA(23),=C'LOOP DETECTED IN INPUT:'\n         PUT   PRINTER,OUTBUF\n         MVI   PRTDATA,X'40'\n         MVC   PRTDATA+1(78),PRTDATA\n         L     R6,N                GET BINARY N\n         SR    R15,R15\nLOOP2    LR    R8,R6               K\n         SLL   R8,3                8*K\n         ST    R15,QLINK(R12)      QLINK(K) <- ZERO\n         BCT   R6,LOOP2\n         L     R6,N                GET BINARY N\n*---------------------------------------------------------------------*\n* FOR K =1, ... N SET QLINK(K) <- ZERO                                *\n*---------------------------------------------------------------------*\nT9       EQU   *\n         LR    R8,R6               K\n         SLL   R8,3                8*K\n         L     R2,TOP(R12)         P <- TOP(K)\n         SR    R15,R15\n         ST    R15,TOP(R12)        TOP(K) <- ZERO\n         LTR   R2,R2               P ZERO?\n         BZ    T9A                 YES\n*---------------------------------------------------------------------*\n* SET QLINK(J) TO ONE OF PREDECESSORS OF OBJECT J                     *\n* FOR EACH J NOT YET OUTPUT                                           *\n*---------------------------------------------------------------------*\nT10      EQU   *\n         L     R5,SUC              R5 <- SUC(P)\n         LR    R8,R5               SUC\n         SLL   R8,3                8*SUC\n         L     R9,QLINK(R12)       QLINK(SUC(P))\n         LTR   R9,R9               ZERO?\n         BNZ   LOAD2               NO\n         ST    R6,QLINK(R12)       YES, QLINK(SUC(P)) <- K\nLOAD2    L     R2,NEXT             P <- NEXT(P)\n         LTR   R2,R2               END OF CHAIN?\n         BNZ   T10                 NO\nT9A      EQU   *\n         BCT   R6,T9\n*---------------------------------------------------------------------*\n* FIND K WITH QLINK(K) NE ZERO                                        *\n*---------------------------------------------------------------------*\nT11      EQU   *\n         LA    R6,1(R6)            K\n         LR    R8,R6               COPY K\n         SLL   R8,3                8*K\n         L     R9,QLINK(R12)       QLINK(K)\n         LTR   R9,R9               ZERO?\n         BZ    T11\n*---------------------------------------------------------------------*\n* WHILE TOP(K) = ZERO, SET TOP(K) = K                                 *\n*---------------------------------------------------------------------*\nT12      EQU   *\n         LR    R8,R6               K\n         SLL   R8,3                8*K\n         ST    R8,TOP(R12)         TOP(K) <- K\n         L     R6,QLINK(R12)       K <- QLINK(K)\n         LR    R8,R6               COPY K\n         SLL   R8,3                8*K\n         L     R5,TOP(R12)         TOP(K)\n         LTR   R5,R5               ZERO?\n         BZ    T12                 YES\n*---------------------------------------------------------------------*\n* PRINT LOOP                                                          *\n*---------------------------------------------------------------------*\nT13      EQU   *\n         CVD   R6,DBLWORD          PACKED K\n         OI    DBLWORD+7,X'0F'     SET SIGN\n         UNPK  PRTDATA(4),DBLWORD+5(3)    UNPACK K\n         PUT   PRINTER,OUTBUF\n         LTR   R5,R5               TOP(K) ZERO?\n         BZ    CLOSEIT             YES\n         LR    R8,R6               COPY K\n         SLL   R8,3                8*K\n         SR    R15,R15\n         ST    R15,TOP(R12)        TOP(K) <- ZERO\n         L     R6,QLINK(R12)       K <- QLINK(K)\n         LR    R8,R6               COPY K\n         SLL   R8,3                8*K\n         L     R5,TOP(R12)         TOP(K)\n         B     T13\nCLOSEIT  CLOSE (READER,,PRINTER)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'DATA'\n         DS    0D\nDBLWORD  DS    D\nN        DS    F\nINBUF    DS    CL80\nOUTBUF   DS    0CL80\nCC       DC    C' '\nPRTDATA  DS    CL79\nNDATA    DC    C'N = '\nNPRT     DS    XL4\nREADER   DCB   DSORG=PS,RECFM=FB,BLKSIZE=27920,LRECL=80,MACRF=GM,      X\n               DDNAME=READER,EODAD=EOF\nPRINTER  DCB   DSORG=PS,RECFM=FBA,BLKSIZE=27920,LRECL=80,              X\n               DDNAME=PRINTER,MACRF=PM\n         DS    0F\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'DATA AREAS'\nSTORAGE  EQU   *\nQLINK0   DS    2F'0'\n         DC    1000XL8'00'\n         TITLE 'DSECTS'\nX        DSECT\nHEADER   DS    0CL8\nQLINK    DS    0F\nCOUNT    DS    F\nTOP      DS    F\n*\nDIRSUCC  DSECT\nSUC      DS    F\nNEXT     DS    F\n*\nTOPSORT1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         END   TOPSORT\n//G.READER   DD *\n0010      NUMBER OF OBJECTS IS TEN\n0010 0001\n0006 0010\n0001 0009\n0009 0002 NINE PRECEDES TWO\n0003 0007\n0007 0005\n0005 0008\n0008 0006\n0004 0006\n0001 0003\n0007 0004\n0009 0005\n0002 0008\n/*\n//G.PRINTER  DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00011": {"ttr": 2566, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00\\x85\\x00\\x85\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 133, "newlines": 133, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL SORTKEYS',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00011'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'GENERATE 1000 10 DIGIT SORT KEYS'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        18 FEB 1983 - CHARLES HOTTEL                                 *\n*        KNUTH, SORTING AND SEARCHING,  2ND EDITION, PP 382           *\n*                                                                     *\n*        K(1001) = ZERO                                               *\n*        K(N-1)  = (3141592621 * K(N) + 2113148651) MOD 10**10        *\n*                = (         M * K(N) +          A) MOD 10**10        *\n*---------------------------------------------------------------------*\nSORTKEYS START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R11,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (PRINTER,OUTPUT)\n         L     R2,=A(K1001)        POINT TO K(N)\n         LR    R3,R2\n         S     R3,=F'6'            POINT TO K(N-1)\n         LA    R4,1000             NUMBER OF K TO GENERATE\nLOOP     EQU   *\n         XC    WORK,WORK           CLEAR WORK AREA\n         MVC   WORK+6(6),0(R2)     K(N)\n         MP    WORK,M              M * K(N)\n         AP    WORK,A              M * K(N) + A\n         MVC   0(6,R3),WORK+6\n         NI    0(R3),X'0F'         MOD 10**10\n         UNPK  KEY,0(6,R3)\n         OI    KEY+9,X'F0'         FIX SIGN\n         PUT   PRINTER,OUTREC\n         S     R2,=F'6'\n         S     R3,=F'6'\n         BCT   R4,LOOP             BRANCH IF NOT 1000 YET\n         CLOSE (PRINTER)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'DATA'\n         DS    0D\nOUTREC   DS    0CL80\nKEY      DS    CL10\n         DC    70CL1' '\nPRINTER  DCB   DSORG=PS,RECFM=FB,BLKSIZE=27920,LRECL=80,               X\n               DDNAME=PRINTER,MACRF=PM\n         DS    0F\n         TITLE 'DATA AREAS'\nWORK     DS PL12\nA        DC    PL6'2113148651'\nM        DC    PL6'3141592621'\nK        DS    1000PL6\nK1001    DC    PL6'0'\nSORTKEY1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         END   SORTKEYS\n//G.PRINTER  DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00012": {"ttr": 2569, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x03\\xe9\\x03\\xe9\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1001, "newlines": 1001, "modlines": 0, "user": "EGHF3PY"}, "text": "UNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00013": {"ttr": 3077, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00]\\x00]\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 93, "newlines": 93, "modlines": 0, "user": "EGHF3PY"}, "text": "       IDENTIFICATION DIVISION.\n         PROGRAM-ID. COB2SYS.\n         AUTHOR. GILBERT SAINT-FLOUR <GSF@IBM.NET>.\n      *----------------------------------------------------------------\n      *\n      *    THIS PROGRAM RETRIEVES SPECIFIC SYSTEM-RELATED DATA FROM\n      *    MVS CONTROL BLOCKS AND MOVES IT TO WORKING-STORAGE.\n      *\n      *    THE NAME OF THE CONTROL-BLOCK IS INDICATED IN POS 1-6 OF\n      *    THE PROCEDURE DIVISION LINES.\n      *    THE LAYOUT OF THE MVS CONTROL BLOCKS IS DESCRIBED IN THE\n      *    MVS DATA AREAS MANUALS, WHICH CAN BE FOUND ON ANY MVS OR\n      *    OS/390 CD COLLECTION OR VIEWED ON-LINE BY GOING TO:\n      *        HTTP://WWW.S390.IBM.COM/BOOKMGR-CGI/BOOKMGR.CMD/LIBRARY\n      *    AND SEARCHING FOR:\n      *        MVS DATA AREAS\n      *\n      *----------------------------------------------------------------\n      /\n       DATA DIVISION.\n        WORKING-STORAGE SECTION.\n         01 RESULTS.\n           05 SYS-NAME                      PIC X(8).\n           05 REAL-STORAGE-M                PIC S9(6) COMP.\n           05 PRODI                         PIC X(8).\n           05 PRODN                         PIC X(8).\n           05 MDL                           PIC 9999.\n           05 SMF-NAME                      PIC X(4).\n           05 IPL-JDATE                     PIC 9(7) COMP-3.\n           05 SU-SEC                        PIC S9(6) COMP.\n           05 CPU-TYPE                      PIC X(6).\n           05 CPU-MODEL                     PIC X(3).\n           05 SYSPLEX-NAME                  PIC X(8).\n           05 OS390-RELEASE                 PIC 9(6).\n           05 HARDWARE-NAME                 PIC X(8).\n           05 LPAR-NAME                     PIC X(8).\n           05 VM-USERID                     PIC X(8).\n         01 FOUR-BYTES.\n           05 FULL-WORD                     PIC S9(8) COMP.\n           05 PTR4      REDEFINES FULL-WORD POINTER.\n           05 PL4       REDEFINES FULL-WORD PIC 9(7) COMP-3.\n      /\n        LINKAGE SECTION.\n         01 CB1.\n            05 PTR1     POINTER OCCURS 512.\n         01 CVT.\n            05 CVT1     POINTER OCCURS 512.\n      /\n       PROCEDURE DIVISION.\n PSA       SET ADDRESS OF CB1 TO NULL\n CVT       SET ADDRESS OF CVT TO PTR1(5)\n           MOVE CVT(341:8) TO SYS-NAME\n           MOVE CVT(857:4) TO FOUR-BYTES\n           COMPUTE REAL-STORAGE-M = (FULL-WORD + 1023) / 1024\n           DISPLAY ' SYSNAME='  SYS-NAME\n           DISPLAY ' STOR='     REAL-STORAGE-M 'M'\nCVTFIX     SET PTR4 TO ADDRESS OF CVT\n           SUBTRACT 256 FROM FULL-WORD\n           SET ADDRESS OF CB1 TO PTR4\n           MOVE CB1(217:8) TO PRODI\n           MOVE CB1(225:8) TO PRODN\n           MOVE ZERO TO PL4\n           MOVE CB1(251:2) TO FOUR-BYTES(1:2)\n           COMPUTE MDL = PL4 / 1000\n           DISPLAY ' PRODI=' PRODI\n           DISPLAY ' PRODN=' PRODN\n           DISPLAY ' MODEL=' MDL\n SMCA      SET ADDRESS OF CB1 TO CVT1(50)\n           MOVE CB1(17:4) TO SMF-NAME\n           MOVE CB1(341:4) TO FOUR-BYTES\n           COMPUTE IPL-JDATE = PL4 + 1900000\n           DISPLAY ' SMFSID='   SMF-NAME\n           DISPLAY ' IPL='      IPL-JDATE\n RMCT      SET ADDRESS OF CB1 TO CVT1(152)\n           MOVE CB1(65:4) TO FOUR-BYTES\n           COMPUTE SU-SEC = 16000000 / FULL-WORD\n           DISPLAY ' SPEED='   SU-SEC ' SU/S'\n HID       SET ADDRESS OF CB1 TO CVT1(268)\n           MOVE CB1(27:6) TO CPU-TYPE\n           MOVE CB1(33:3) TO CPU-MODEL\n           DISPLAY ' CPU='     CPU-TYPE '-' CPU-MODEL\n ECVT      SET ADDRESS OF CB1 TO CVT1(36)\n           MOVE CB1(9:8) TO SYSPLEX-NAME\n           MOVE CB1(337:8) TO HARDWARE-NAME\n           MOVE CB1(345:8) TO LPAR-NAME\n           MOVE CB1(353:8) TO VM-USERID\n           MOVE CB1(513:6) TO OS390-RELEASE\n           DISPLAY ' SYSPLEX=' SYSPLEX-NAME\n           DISPLAY ' HWNAME='  HARDWARE-NAME\n           DISPLAY ' LPAR='    LPAR-NAME\n           DISPLAY ' VM='      VM-USERID\n           DISPLAY ' OS/390='  OS390-RELEASE\n           GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00014": {"ttr": 3080, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01/\\x01/\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 303, "newlines": 303, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL COMPSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00014'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'COMPARISON COUNTING SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        18 FEB 1983 - CHARLES HOTTEL                                 *\n*        COMPARISON COUNTING SORT                                     *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 76-78.                                    *\n*                                                                     *\n*        SORTS R(1), ... ,R(N) ON KEYS K(1), ... ,K(N) BY MAINTAINING *\n*        AN AUXILLARY TABLE COUNT(1), ... ,COUNT(N) TO COUNT THE      *\n*        NUMBER OF KEYS LESS THAN A GIVEN KEY.  AT THE CONCLUSION     *\n*        COUNT(J) + 1 SPECIFIES THE FINAL POSITION OF R(J).           *\n*                                                                     *\n*        NO MOVEMENT OF RECORDS, STABLE, NOT EFFICIENT WHEN LARGE     *\n*        NUMBER OF RECORDS.                                           *\n*---------------------------------------------------------------------*\n*        22 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nCOMPSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nCOUNTS   DC    16F'0'\nLASTCNT  EQU   *-4\nSW       DC    X'00'\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *\n*\nSORTED   DS    16CL3\nCOMPSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'COMPARISON COUNTING SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n* FOR I = 1, ... ,N                                                   *\n*   COUNT(I) <- ZERO                                                  *\n* ENDFOR                                                              *\n* FOR I = 2, ... ,N                                                   *\n*   COUNT(I) <- I-1                                                   *\n*   FOR J = 1, ... , I-1                                              *\n*     IF K(I) < K(J)                                                  *\n*       COUNT(J) <- COUNT(J) + 1                                      *\n*       COUNT(I) <- COUNT(I) - 1                                      *\n*     ENDIF                                                           *\n*   ENDFOR                                                            *\n* ENDFOR                                                              *\n*---------------------------------------------------------------------*\n         LA    R1,1                I-1\n         LA    R2,COUNTS+4         COUNT(I)\n         LA    R3,UNSORTED+3       K(I)\nLOOPI    LA    R4,COUNTS           COUNT(J)\n         LA    R5,UNSORTED         K(J)\n         LR    R6,R1               COUNT(I) <- I-1\nLOOPJ    CLC   0(3,R3),0(R5)       K(I) < K(J) ?\n         BNL   NEXTJ               NO\n         L     R7,0(R4)            YES, GET COUNT(J)\n         LA    R7,1(R7)            COUNT(J) <- COUNT(J) + 1\n         ST    R7,0(R4)            SAVE NEW COUNT(J)\n         BCTR  R6,0                COUNT(I) <- COUNT(I) - 1\nNEXTJ    LA    R4,4(R4)            NEXT COUNT(J)\n         LA    R5,3(R5)            NEXT K(J)\n         CR    R5,R3               DONE?\n         BL    LOOPJ               BRANCH IF NOT DONE\n         ST    R6,0(R2)            SAVE NEW COUNT(I)\n         LA    R1,1(R1)            NEXT I-1\n         LA    R2,4(R2)            NEXT COUNT(I)\n         LA    R3,3(R3)            NEXT K(I)\n         CL    R2,=A(LASTCNT)      DONE?\n         BNH   LOOPI               BRANCH IF NOT DONE\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R1,UNSORTED\n         LA    R2,COUNTS\n         LA    R3,16               NUMBER OF RECORDS\nPRTLOOP1 L     R5,0(R2)            GET COUNT(J)\n         M     R4,=F'3'            CALC DISP INTO SORTED\n         A     R5,=A(SORTED)\n         MVC   0(3,R5),0(R1)       PLACE REC IN SORTED SLOT\n         LA    R1,3(R1)            NEXT REC\n         LA    R2,4(R2)            NEXT COUNT\n         BCT   R3,PRTLOOP1         BRANCH IF MORE RECS\n         LA    R2,16               NUMBER OF RECORDS\n         LA    R3,SORTED\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2         BRANCH IF MORE RECS\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00015": {"ttr": 3329, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\n\\x05\\n\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1290, "newlines": 1290, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL COMPSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00015'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'COMPARISON COUNTING SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        28 MAR 1983 - CHARLES HOTTEL                                 *\n*        COMPARISON COUNTING SORT                                     *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 76-78.                                    *\n*                                                                     *\n*        SORTS R(1), ... ,R(N) ON KEYS K(1), ... ,K(N) BY MAINTAINING *\n*        AN AUXILLARY TABLE COUNT(1), ... ,COUNT(N) TO COUNT THE      *\n*        NUMBER OF KEYS LESS THAN A GIVEN KEY.  AT THE CONCLUSION     *\n*        COUNT(J) + 1 SPECIFIES THE FINAL POSITION OF R(J).           *\n*                                                                     *\n*        NO MOVEMENT OF RECORDS, STABLE, NOT EFFICIENT WHEN LARGE     *\n*        NUMBER OF RECORDS.                                           *\n*---------------------------------------------------------------------*\n*        22 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nCOMPSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nCOUNTS   DC    1000F'0'\nLASTCNT  EQU   *-4\nSW       DC    X'00'\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n*\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *\n*\nSORTED   DS    1000CL10\n         EJECT\n         EJECT\nCOMPSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'COMPARISON COUNTING SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n* FOR I = 1, ... ,N                                                   *\n*   COUNT(I) <- ZERO                                                  *\n* ENDFOR                                                              *\n* FOR I = 2, ... ,N                                                   *\n*   COUNT(I) <- I-1                                                   *\n*   FOR J = 1, ... , I-1                                              *\n*     IF K(I) < K(J)                                                  *\n*       COUNT(J) <- COUNT(J) + 1                                      *\n*       COUNT(I) <- COUNT(I) - 1                                      *\n*     ENDIF                                                           *\n*   ENDFOR                                                            *\n* ENDFOR                                                              *\n*---------------------------------------------------------------------*\n         LA    R1,1                I-1\n         LA    R2,COUNTS+4         COUNT(I)\n         L     R3,=A(UNSORTED+10)  K(I)\nLOOPI    LA    R4,COUNTS           COUNT(J)\n         L     R5,=A(UNSORTED)     K(J)\n         LR    R6,R1               COUNT(I) <- I-1\nLOOPJ    CLC   0(10,R3),0(R5)      K(I) < K(J) ?\n         BNL   NEXTJ               NO\n         L     R7,0(R4)            YES, GET COUNT(J)\n         LA    R7,1(R7)            COUNT(J) <- COUNT(J) + 1\n         ST    R7,0(R4)            SAVE NEW COUNT(J)\n         BCTR  R6,0                COUNT(I) <- COUNT(I) - 1\nNEXTJ    LA    R4,4(R4)            NEXT COUNT(J)\n         LA    R5,10(R5)           NEXT K(J)\n         CR    R5,R3               DONE?\n         BL    LOOPJ               BRANCH IF NOT DONE\n         ST    R6,0(R2)            SAVE NEW COUNT(I)\n         LA    R1,1(R1)            NEXT I-1\n         LA    R2,4(R2)            NEXT COUNT(I)\n         LA    R3,10(R3)           NEXT K(I)\n         CL    R2,=A(LASTCNT)      DONE?\n         BNH   LOOPI               BRANCH IF NOT DONE\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         L     R1,=A(UNSORTED)\n         LA    R2,COUNTS\n         LA    R3,1000             NUMBER OF RECORDS\nPRTLOOP1 L     R5,0(R2)            GET COUNT(J)\n         M     R4,=F'10'           CALC DISP INTO SORTED\n         A     R5,=A(SORTED)\n         MVC   0(10,R5),0(R1)      PLACE REC IN SORTED SLOT\n         LA    R1,10(R1)           NEXT REC\n         LA    R2,4(R2)            NEXT COUNT\n         BCT   R3,PRTLOOP1         BRANCH IF MORE RECS\n         LA    R2,1000             NUMBER OF RECORDS\n         L     R3,=A(SORTED)\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2         BRANCH IF MORE RECS\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00016": {"ttr": 3843, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x015\\x015\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 309, "newlines": 309, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL DISTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00016'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'DISTRIBUTION COUNTING SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        30 MAR 1983 - CHARLES HOTTEL                                 *\n*        DISTRIBUTION COUNTING SORT                                   *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 78-79.                                    *\n*                                                                     *\n*        ASSUMING ALL KEYS ARE INTEGERS IN RANGE U =< K(J) =< V.      *\n*        SORTS R(1), ... ,R(N) ON KEYS K(1), ... ,K(N) BY MAINTAINING *\n*        AN AUXILLARY TABLE COUNT(U), ... ,COUNT(V) TO COUNT THE      *\n*        NUMBER OF KEYS LESS THAN A GIVEN KEY.                        *\n*                                                                     *\n*        FIRST ACCUMULATE COUNT(I) = NUMBER OF KEYS EQUAL TO I.       *\n*        CALCULATE COUNT(I) = NUMBER OF KEYS =< I.                    *\n*        OUTPUT RECORDS TO S(1), ... ,S(N).                           *\n*                                                                     *\n*        EFFICIENT, STABLE, PRIMARILY APPLICABLE TO CASE OF MANY      *\n*        EQUAL KEYS IN SMALL KEY RANGE.                               *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nDISTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nCOUNTS   DC    1000F'0'\nLASTCNT  EQU   *-4\nSW       DC    X'00'\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n*\nSORTED   DS    16CL3\nDISTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'DISTRIBUTION COUNTING SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n* FOR I = U,U+1, ... ,V-1,V                                           *\n*   COUNT(I) <- ZERO.                                                 *\n* FOR J = 1, ... ,N                                                   *\n*   COUNT(K(J)) <- COUNT(K(J)) + 1.                                   *\n* FOR I = U, U+1, ... ,V-1,V                                          *\n*   COUNT(I) <- COUNT(I) + COUNT(I-1)                                 *\n* FOR J = N, N-1, ... ,2,1                                            *\n*   I <- COUNT(K(J))                                                  *\n*   S(I) <- R(J)                                                      *\n*   COUNT(K(J)) <- I-1.                                               *\n*                                                                     *\n* IF J VARIES FROM 1 TO N INSTEAD OF FROM N TO 1 IN THE LAST 'FOR'    *\n* LOOP, THEN THIS SORT WILL NO LONGER BE STABLE.                      *\n*---------------------------------------------------------------------*\n         XC    DBLWORD,DBLWORD\n         LA    R1,16               NUMBER OF REC TO BE SORTED\n         L     R2,=A(UNSORTED)     K(J)\nLOOP1    PACK  DBLWORD+6(2),0(3,R2)  PACKED K(J)\n         CVB   R5,DBLWORD          BINARY K(J)\n         M     R4,=F'4'\n         A     R5,=A(COUNTS)       COUNT(K(J))\n         L     R6,0(R5)\n         LA    R6,1(R6)            COUNT K(J)) <- COUNT(K(J) + 1\n         ST    R6,0(R5)\n         LA    R2,3(R2)            NEXT K(J)\n         BCT   R1,LOOP1\n         LA    R1,999\n         L     R2,=A(COUNTS)       I - 1\nLOOP2    L     R3,4(R2)            COUNT(I)\n         A     R3,0(R2)            COUNT(I) <- COUNT(I) + COUNT(I-1)\n         ST    R3,4(R2)\n         LA    R2,4(R2)            NEXT I-1\n         BCT   R1,LOOP2\n         LA    R1,16\n         L     R2,=A(LASTUN)       K(J)\nLOOP3    PACK  DBLWORD+6(2),0(3,R2) PACKED K(J)\n         CVB   R5,DBLWORD          BINARY K(J)\n         M     R4,=F'4'\n         A     R5,=A(COUNTS)       COUNT(K(J))\n         L     R7,0(R5)            I <- COUNT(K(J))\n         BCTR  R7,0\n         ST    R7,0(R5)            COUNT(K(J)) <- I-1\n         M     R6,=F'3'\n         A     R7,=A(SORTED)       S(I)\n         MVC   0(3,R7),0(R2)       S(I) <- R(J)\n         S     R2,=F'3'            NEXT K(J)\n         BCT   R1,LOOP3\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16               NUMBER OF RECORDS\n         L     R3,=A(SORTED)\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2         BRANCH IF MORE RECS\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00017": {"ttr": 3849, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\x10\\x05\\x10\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1296, "newlines": 1296, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL DISTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00017'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'DISTRIBUTION COUNTING SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        30 MAR 1983 - CHARLES HOTTEL                                 *\n*        DISTRIBUTION COUNTING SORT                                   *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 78-79.                                    *\n*                                                                     *\n*        ASSUMING ALL KEYS ARE INTEGERS IN RANGE U =< K(J) =< V.      *\n*        SORTS R(1), ... ,R(N) ON KEYS K(1), ... ,K(N) BY MAINTAINING *\n*        AN AUXILLARY TABLE COUNT(U), ... ,COUNT(V) TO COUNT THE      *\n*        NUMBER OF KEYS LESS THAN A GIVEN KEY.                        *\n*                                                                     *\n*        FIRST ACCUMULATE COUNT(I) = NUMBER OF KEYS EQUAL TO I.       *\n*        CALCULATE COUNT(I) = NUMBER OF KEYS =< I.                    *\n*        OUTPUT RECORDS TO S(1), ... ,S(N).                           *\n*                                                                     *\n*        THIS PROGRAM SORTS THE TEN DIGITS ON THE LEFTMOST THREE      *\n*        DIGITS.                                                      *\n*                                                                     *\n*        EFFICIENT, STABLE, PRIMARILY APPLICABLE TO CASE OF MANY      *\n*        EQUAL KEYS IN SMALL KEY RANGE.                               *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nDISTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nCOUNTS   DC    1000F'0'\nLASTCNT  EQU   *-4\nSW       DC    X'00'\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n*\nSORTED   DS    1000CL10\nDISTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'DISTRIBUTION COUNTING SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n* FOR I = U,U+1, ... ,V-1,V                                           *\n*   COUNT(I) <- ZERO.                                                 *\n* FOR J = 1, ... ,N                                                   *\n*   COUNT(K(J)) <- COUNT(K(J)) + 1.                                   *\n* FOR I = U, U+1, ... ,V-1,V                                          *\n*   COUNT(I) <- COUNT(I) + COUNT(I-1)                                 *\n* FOR J = N, N-1, ... ,2,1                                            *\n*   I <- COUNT(K(J))                                                  *\n*   S(I) <- R(J)                                                      *\n*   COUNT(K(J)) <- I-1.                                               *\n*                                                                     *\n* IF J VARIES FROM 1 TO N INSTEAD OF FROM N TO 1 IN THE LAST 'FOR'    *\n* LOOP, THEN THIS SORT WILL NO LONGER BE STABLE.                      *\n*---------------------------------------------------------------------*\n         XC    DBLWORD,DBLWORD\n         LA    R1,1000             NUMBER OF REC TO BE SORTED\n         L     R2,=A(UNSORTED)     K(J)\nLOOP1    PACK  DBLWORD+6(2),0(3,R2)  PACKED K(J)\n         CVB   R5,DBLWORD          BINARY K(J)\n         M     R4,=F'4'\n         A     R5,=A(COUNTS)       COUNT(K(J))\n         L     R6,0(R5)\n         LA    R6,1(R6)            COUNT K(J)) <- COUNT(K(J) + 1\n         ST    R6,0(R5)\n         LA    R2,10(R2)           NEXT K(J)\n         BCT   R1,LOOP1\n         LA    R1,999\n         L     R2,=A(COUNTS)       I - 1\nLOOP2    L     R3,4(R2)            COUNT(I)\n         A     R3,0(R2)            COUNT(I) <- COUNT(I) + COUNT(I-1)\n         ST    R3,4(R2)\n         LA    R2,4(R2)            NEXT I-1\n         BCT   R1,LOOP2\n         LA    R1,1000\n         L     R2,=A(LASTUN)       K(J)\nLOOP3    PACK  DBLWORD+6(2),0(3,R2) PACKED K(J)\n         CVB   R5,DBLWORD          BINARY K(J)\n         M     R4,=F'4'\n         A     R5,=A(COUNTS)       COUNT(K(J))\n         L     R7,0(R5)            I <- COUNT(K(J))\n         BCTR  R7,0\n         ST    R7,0(R5)            COUNT(K(J)) <- I-1\n         M     R6,=F'10'\n         A     R7,=A(SORTED)       S(I)\n         MVC   0(10,R7),0(R2)      S(I) <- R(J)\n         S     R2,=F'10'          NEXT K(J)\n         BCT   R1,LOOP3\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000             NUMBER OF RECORDS\n         L     R3,=A(SORTED)\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2         BRANCH IF MORE RECS\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00018": {"ttr": 4361, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01 \\x01 \\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 288, "newlines": 288, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL INSTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00018'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'STRAIGHT INSERTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        30 MAR 1983 - CHARLES HOTTEL                                 *\n*        STRAIGHT INSERTION SORT                                      *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 80-82.                                    *\n*                                                                     *\n*        RECORDS R(1), ... ,R(N) REARRANGED IN PLACE.                 *\n*                                                                     *\n*        BEFORE EXAMINING RECORD R(J), WE ASSUME THAT THE PRECEEDING  *\n*        RECORDS R(1), ... ,R(J-1) HAVE ALREADY BEEN SORTED; THEN     *\n*        INSERT R(J) INTO ITS PROPER PLACE AMONG PREVIOUSLY SORTED    *\n*        RECORDS. CONVIENIENT TO COMBINE COMPARISON AND INTERLEAVING  *\n*        OPERATIONS.                                                  *\n*                                                                     *\n*        SHORT, STABLE, EFFICIENT FOR 25 RECORDS OR LESS.             *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nINSTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nCOUNTS   DC    1000F'0'\nLASTCNT  EQU   *-4\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n*\nSORTED   DS    16CL3\nINSTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'STRAIGHT INSERTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n*     FOR J = 2,3, ... ,N                                             *\n* S2.     I <- J-1                                                   *\n*         K <- K(J)                                                   *\n*         R <- R(J)                                                   *\n* S3.     IF K => K(I)                                                *\n*            GOTO S5                                                  *\n* S4.     R(I+1) <- R(I)                                              *\n*         I <- I-1                                                    *\n*         IF I > ZERO                                                 *\n*            GOTO S3                                                  *\n* S5.     R(I+1) <- R                                                 *\n*     ENDFOR                                                          *\n*---------------------------------------------------------------------*\n         LA    R1,15\n         LA    R2,UNSORTED+3       J\nS2       LR    R3,R2\n         S     R3,=F'3'            I <- J-1\n         MVC   TEMP,0(R2)          K <- K(J)\nS3       CLC   TEMP,0(R3)          K GE K(I)?\n         BNL   S5                  YES\n         MVC   3(3,R3),0(R3)       R(I+1) <- R(I)\n         S     R3,=F'3'            I <- I-1\n         CL    R3,=A(UNSORTED)     I > ZERO?\n         BNL   S3                  YES\nS5       MVC   3(3,R3),TEMP        R(I+1) <- R\n         LA    R2,3(R2)            NEXT J\n         BCT   R1,S2\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16               NUMBER OF RECORDS\n         L     R3,=A(UNSORTED)\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2         BRANCH IF MORE RECS\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00019": {"ttr": 4613, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x04\\xf8\\x04\\xf8\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1272, "newlines": 1272, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL INSTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00019'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'STRAIGHT INSERTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        30 MAR 1983 - CHARLES HOTTEL                                 *\n*        STRAIGHT INSERTION SORT                                      *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 80-82.                                    *\n*                                                                     *\n*        RECORDS R(1), ... ,R(N) REARRANGED IN PLACE.                 *\n*                                                                     *\n*        BEFORE EXAMINING RECORD R(J), WE ASSUME THAT THE PRECEEDING  *\n*        RECORDS R(1), ... ,R(J-1) HAVE ALREADY BEEN SORTED; THEN     *\n*        INSERT R(J) INTO ITS PROPER PLACE AMONG PREVIOUSLY SORTED    *\n*        RECORDS. CONVIENIENT TO COMBINE COMPARISON AND INTERLEAVING  *\n*        OPERATIONS.                                                  *\n*                                                                     *\n*        SHORT, STABLE, EFFICIENT FOR 25 RECORDS OR LESS.             *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nINSTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nCOUNTS   DC    1000F'0'\nLASTCNT  EQU   *-4\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n*\nSORTED   DS    16CL3\nINSTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'STRAIGHT INSERTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n*     FOR J = 2,3, ... ,N                                             *\n* S2.     I <- J-1                                                   *\n*         K <- K(J)                                                   *\n*         R <- R(J)                                                   *\n* S3.     IF K => K(I)                                                *\n*            GOTO S5                                                  *\n* S4.     R(I+1) <- R(I)                                              *\n*         I <- I-1                                                    *\n*         IF I > ZERO                                                 *\n*            GOTO S3                                                  *\n* S5.     R(I+1) <- R                                                 *\n*     ENDFOR                                                          *\n*---------------------------------------------------------------------*\n         LA    R1,999\n         LA    R2,UNSORTED+10      J\nS2       LR    R3,R2\n         S     R3,=F'10'           I <- J-1\n         MVC   TEMP,0(R2)          K <- K(J)\nS3       CLC   TEMP,0(R3)          K GE K(I)?\n         BNL   S5                  YES\n         MVC   10(10,R3),0(R3)     R(I+1) <- R(I)\n         S     R3,=F'10'           I <- I-1\n         CL    R3,=A(UNSORTED)     I > ZERO?\n         BNL   S3                  YES\nS5       MVC   10(10,R3),TEMP      R(I+1) <- R\n         LA    R2,10(R2)           NEXT J\n         BCT   R1,S2\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000             NUMBER OF RECORDS\n         L     R3,=A(UNSORTED)\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2         BRANCH IF MORE RECS\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00020": {"ttr": 5126, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01H\\x01H\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 328, "newlines": 328, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL SHELSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00020'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'SHELL SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        SHELL SORT                                                   *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 84-95.                                    *\n*                                                                     *\n*        RECORDS R(1), ... ,R(N) REARRANGED IN PLACE.           ).    *\n*                                                                     *\n*        SEQUENCE OF INCREMENTS H(T),H(T-1), ... ,H(1) USED TO CONTROL*\n*        THE SORTING PROCESS WHERE H(1) = 1. PROPER CHOICE OF THESE   *\n*        INCREMENTS CAN SIGNIFICANTLY DECREASE THE SORTING TIME.      *\n*        THE BEST POSSIBLE SEQUENCE HAS NOT YET BEEN DETERMINED.      *\n*                                                                     *\n*        DESIRABLE TO SORT WITH RELATIVELY PRIME INCREMENTS.          *\n*        UNWISE TO START WITH H(T) > N/3.                             *\n*        SINCE THE INCREMENTS (3**K - 1) / 2 DO NOT TAKE              *\n*        SUBSTANTIALLY MORE MOVES, AND SINCE THEY REQUIRE ONLY        *\n*        ABOUT 5/8 AS MANY PASSES AS THE INCREMENTS OF OTHER FORMS,   *\n*        THE EVIDENCE INDICATES THAT IT IS REASONABLE TO CHOOSE THE   *\n*        INCREMENTS IN THE FOLLOWING WAY:                             *\n*                                                                     *\n*            LET H(1) = 1                                             *\n*            LET H(S+1) = 3*H(S) + 1                                  *\n*            STOP WITH H(T) WHEN H(T+2) GE N                          *\n*                                                                     *\n*        NOT STABLE, REASONABLY EFFICIENT FOR 1000 RECORDS OR LESS.   *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nSHELSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DS    0F\nH        DC    10F'0'              INCREMENTS\n*\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n*\nSHELSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'SHELL SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n*        FOR T=1,2,03,04, ...                                         *\n*            S=1,4,13,40, ... ,(3**K)-1)/2 WHILE S < N                *\n*                H(T) <- S                                            *\n*        ENDFOR                                                       *\n*        FOR S=T,T-1, ... ,1                                          *\n*            H <- H(S)                                                *\n*            FOR J=H+1,H+2, ... ,N                                    *\n*                I <- J-H                                             *\n*                IF K GE K(J-H)                                       *\n*                    GOTO NEXTJ.                                      *\n*                K <- K(J)                                            *\n* SWAP1          R(I+H) <- R(I)                                       *\n*                I <- I-H                                             *\n*                IF I LE ZERO                                         *\n*                    GOTO SWAP2.                                      *\n*                IF K < K(I)                                          *\n*                    GOTO SWAP1.                                      *\n* SWAP2.         R(I+H) <- R.                                         *\n* NEXTJ      ENDFOR                                                   *\n*        ENDFOR                                                       *\n*---------------------------------------------------------------------*\n         LA    R1,16               N\n         L     R3,=A(H-8)          T\n         LA    R5,1                S\nLOOPH    ST    R5,8(R3)            H(T) <- S\n         M     R4,=F'3'            S <- (3*S)+1\n         LA    R5,1(R5)\n         LA    R3,4(R3)            NEXT T\n         CR    R5,R1               S GE N ?\n         BL    LOOPH               NO\n         LR    R1,R3               S <- T\n         L     R2,=A(UNSORTED)     BASE FOR RECS\nLOOPS    L     R5,0(R1)            H <- H(S)\n         M     R4,=F'3'            DISPL H IN R5\n         LCR   R4,R5               NEG DISPL IN R4\n         LA    R3,0(R5,R2)         J <- H+1\nLOOPJ    LA    R6,0(R4,R3)         I <- J-H\n         CLC   0(3,R3),0(R6)       IS K GE K(I) ?\n         BNL   NEXTJ               YES\n         MVC   TEMP,0(R3)          NO, K <- K(J), R <- R(J)\nSWAP1    LA    R7,0(R5,R6)         I+H\n         MVC   0(3,R7),0(R6)       R(I+H) <- R(I)\n         LA    R6,0(R4,R6)         I <- I-H\n         CR    R6,R2               I LE ZERO ?\n         BL    SWAP2               YES\n         CLC   TEMP,0(R6)          K < K(I)\n         BL    SWAP1               YES\nSWAP2    LA    R7,0(R5,R6)         I+H\n         MVC   0(3,R7),TEMP        R(I+H) <- R\nNEXTJ    LA    R3,3(R3)            J <- J+1\n         CL    R3,=A(LASTUN)       J > N ?\n         BNH   LOOPJ               NO\n         S     R1,=F'4'            NEXTS\n         CL    R1,=A(H)            S < ZERO ?\n         BNL   LOOPS               NO\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2         BRANCH IF MORE RECS?\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00021": {"ttr": 5377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05 \\x05 \\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1312, "newlines": 1312, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL SHELSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00021'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'SHELL SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        SHELL SORT                                                   *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 84-95.                                    *\n*                                                                     *\n*        RECORDS R(1), ... ,R(N) REARRANGED IN PLACE.           ).    *\n*                                                                     *\n*        SEQUENCE OF INCREMENTS H(T),H(T-1), ... ,H(1) USED TO CONTROL*\n*        THE SORTING PROCESS WHERE H(1) = 1. PROPER CHOICE OF THESE   *\n*        INCREMENTS CAN SIGNIFICANTLY DECREASE THE SORTING TIME.      *\n*        THE BEST POSSIBLE SEQUENCE HAS NOT YET BEEN DETERMINED.      *\n*                                                                     *\n*        DESIRABLE TO SORT WITH RELATIVELY PRIME INCREMENTS.          *\n*        UNWISE TO START WITH H(T) > N/3.                             *\n*        SINCE THE INCREMENTS (3**K - 1) / 2 DO NOT TAKE              *\n*        SUBSTANTIALLY MORE MOVES, AND SINCE THEY REQUIRE ONLY        *\n*        ABOUT 5/8 AS MANY PASSES AS THE INCREMENTS OF OTHER FORMS,   *\n*        THE EVIDENCE INDICATES THAT IT IS REASONABLE TO CHOOSE THE   *\n*        INCREMENTS IN THE FOLLOWING WAY:                             *\n*                                                                     *\n*            LET H(1) = 1                                             *\n*            LET H(S+1) = 3*H(S) + 1                                  *\n*            STOP WITH H(T) WHEN H(T+2) GE N                          *\n*                                                                     *\n*        NOT STABLE, REASONABLY EFFICIENT FOR 1000 RECORDS OR LESS.   *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nSHELSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DS    0F\nH        DC    10F'0'              INCREMENTS\n*\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n*\nSHELSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'SHELL SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n*        FOR T=1,2,03,04, ...                                         *\n*            S=1,4,13,40, ... ,(3**K)-1)/2 WHILE S < N                *\n*                H(T) <- S                                            *\n*        ENDFOR                                                       *\n*        FOR S=T,T-1, ... ,1                                          *\n*            H <- H(S)                                                *\n*            FOR J=H+1,H+2, ... ,N                                    *\n*                I <- J-H                                             *\n*                IF K GE K(J-H)                                       *\n*                    GOTO NEXTJ.                                      *\n*                K <- K(J)                                            *\n* SWAP1          R(I+H) <- R(I)                                       *\n*                I <- I-H                                             *\n*                IF I LE ZERO                                         *\n*                    GOTO SWAP2.                                      *\n*                IF K < K(I)                                          *\n*                    GOTO SWAP1.                                      *\n* SWAP2.         R(I+H) <- R.                                         *\n* NEXTJ      ENDFOR                                                   *\n*        ENDFOR                                                       *\n*---------------------------------------------------------------------*\n         LA    R1,1000             N\n         L     R3,=A(H-8)          T\n         LA    R5,1                S\nLOOPH    ST    R5,8(R3)            H(T) <- S\n         M     R4,=F'3'            S <- (3*S)+1\n         LA    R5,1(R5)\n         LA    R3,4(R3)            NEXT T\n         CR    R5,R1               S GE N ?\n         BL    LOOPH               NO\n         LR    R1,R3               S <- T\n         L     R2,=A(UNSORTED)     BASE FOR RECS\nLOOPS    L     R5,0(R1)            H <- H(S)\n         M     R4,=F'10'           DISPL H IN R5\n         LCR   R4,R5               NEG DISPL IN R4\n         LA    R3,0(R5,R2)         J <- H+1\nLOOPJ    LA    R6,0(R4,R3)         I <- J-H\n         CLC   0(10,R3),0(R6)      IS K GE K(I) ?\n         BNL   NEXTJ               YES\n         MVC   TEMP,0(R3)          NO, K <- K(J), R <- R(J)\nSWAP1    LA    R7,0(R5,R6)         I+H\n         MVC   0(10,R7),0(R6)      R(I+H) <- R(I)\n         LA    R6,0(R4,R6)         I <- I-H\n         CR    R6,R2               I LE ZERO ?\n         BL    SWAP2               YES\n         CLC   TEMP,0(R6)          K < K(I)\n         BL    SWAP1               YES\nSWAP2    LA    R7,0(R5,R6)         I+H\n         MVC   0(10,R7),TEMP       R(I+H) <- R\nNEXTJ    LA    R3,10(R3)           J <- J+1\n         CL    R3,=A(LASTUN)       J > N ?\n         BNH   LOOPJ               NO\n         S     R1,=F'4'            NEXTS\n         CL    R1,=A(H)            S < ZERO ?\n         BNL   LOOPS               NO\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2         BRANCH IF MORE RECS?\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00022": {"ttr": 5891, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01*\\x01*\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 298, "newlines": 298, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL LISTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00022'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'LIST INSERTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        LIST INSERTION SORT                                          *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 96-97.                                    *\n*                                                                     *\n*        RECORDS R(1), ... ,R(N) WITH LINK FIELDS L(1), ... ,L(N).    *\n*        ANOTHER LINK FIELD L(0) IN ARTIFICIAL RECORD R(0) AT         *\n*        BEGINNING OF FILE.  STARTING WITH RECORDS AT THE END         *\n*        OF THE FILE EACH RECORD IS INSERTED ON THE LIST IN ITS       *\n*        PROPER POSITION.  AT THE END THEY ARE LINKED TOGETHER IN     *\n*        ASCENDING ORDER.                                             *\n*                                                                     *\n*        PARTICULARLY ADVANTAGES FOR VARIABLE LENGTH RECORDS OR       *\n*        RECORDS THAT ARE PART OF OTHER DATA STRUCTURES.              *\n*                                                                     *\n*        STABLE, BEST FOR SMALLL N ONLY.                              *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nLISTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DS    0F\nL0       DC    F'0',X'00',XL3'000000'\n*\nUNSORTED EQU   *\n         DC    F'0',X'00',CL3'503'\n         DC    F'0',X'00',CL3'087'\n         DC    F'0',X'00',CL3'512'\n         DC    F'0',X'00',CL3'061'\n         DC    F'0',X'00',CL3'908'\n         DC    F'0',X'00',CL3'170'\n         DC    F'0',X'00',CL3'897'\n         DC    F'0',X'00',CL3'275'\n         DC    F'0',X'00',CL3'653'\n         DC    F'0',X'00',CL3'426'\n         DC    F'0',X'00',CL3'154'\n         DC    F'0',X'00',CL3'509'\n         DC    F'0',X'00',CL3'612'\n         DC    F'0',X'00',CL3'677'\n         DC    F'0',X'00',CL3'765'\n         DC    F'0',X'00',CL3'703'\nLASTUN   EQU   *-8\n*\nLISTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'LIST INSERTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n* L1.  L(0) <- N                                                      *\n*      L(N) <- ZERO                                                   *\n*      DO J=N-1,N-2, ... ,1                                           *\n* L2.     P <- L(0)                                                   *\n*         Q <- ZERO                                                   *\n*         K <- K(J)                                                   *\n* L3.     IF K LE K(P)                                                *\n*            GOTO L5.                                                 *\n* L4.     Q <- P                                                      *\n*         P <- L(Q)                                                   *\n*         IF P > ZERO                                                 *\n*            GOTO L3.                                                 *\n* L5.     L(Q) <- J                                                   *\n*         L(J) <- P                                                   *\n*      ENDDO                                                          *\n*---------------------------------------------------------------------*\n         L     R1,=A(LASTUN)\n         ST    R1,L0               L0 <- N\n         MVC   0(4,R1),=A(L0)      L(N) <- ZERO\n         B     NEXTJ\nLOOPJ    L     R2,L0               P <- L0\n         L     R3,=A(L0)           Q <- ZERO\n         MVC   TEMP,5(R1)          K <- K(J)\nCOMPARE  CLC   TEMP,5(R2)\n         BNH   INSERT              LOW OR EQUAL\n         LR    R3,R2               Q <- P\n         L     R2,0(R3)            P <- L(Q)\n         CL    R2,=A(L0)           P > ZERO?\n         BH    COMPARE\nINSERT   ST    R1,0(R3)            L(Q) <- J\n         ST    R2,0(R1)            L(J) <- P\nNEXTJ    S     R1,=F'8'            J <- J-1\n         CL    R1,=A(L0)           J GE 1 ?\n         BH    LOOPJ\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         L     R3,L0\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,5(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    L     R3,0(R3)            NEXT SORTED REC\n         CL    R3,=A(L0)           END OF LIST?\n         BNE   PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00023": {"ttr": 5897, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\x02\\x05\\x02\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1282, "newlines": 1282, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL LISTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00023'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'LIST INSERTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        LIST INSERTION SORT                                          *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 96-97.                                    *\n*                                                                     *\n*        RECORDS R(1), ... ,R(N) WITH LINK FIELDS L(1), ... ,L(N).    *\n*        ANOTHER LINK FIELD L(0) IN ARTIFICIAL RECORD R(0) AT         *\n*        BEGINNING OF FILE.  STARTING WITH RECORDS AT THE END         *\n*        OF THE FILE EACH RECORD IS INSERTED ON THE LIST IN ITS       *\n*        PROPER POSITION.  AT THE END THEY ARE LINKED TOGETHER IN     *\n*        ASCENDING ORDER.                                             *\n*                                                                     *\n*        PARTICULARLY ADVANTAGES FOR VARIABLE LENGTH RECORDS OR       *\n*        RECORDS THAT ARE PART OF OTHER DATA STRUCTURES.              *\n*                                                                     *\n*        STABLE, BEST FOR SMALLL N ONLY.                              *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nLISTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DS    0F\nL0       DC    F'0',X'0000',XL10'00000000000000000000'\n*\nUNSORTED  EQU  *\n          DC   F'0',X'0000',CL10'2113148651'\n          DC   F'0',X'0000',CL10'1170852922'\n          DC   F'0',X'0000',CL10'2144637213'\n          DC   F'0',X'0000',CL10'5195953924'\n          DC   F'0',X'0000',CL10'8807543455'\n          DC   F'0',X'0000',CL10'9477994206'\n          DC   F'0',X'0000',CL10'1563502577'\n          DC   F'0',X'0000',CL10'0930832968'\n          DC   F'0',X'0000',CL10'5765477779'\n          DC   F'0',X'0000',CL10'9159017410'\n          DC   F'0',X'0000',CL10'2979680261'\n          DC   F'0',X'0000',CL10'3010102732'\n          DC   F'0',X'0000',CL10'3416289223'\n          DC   F'0',X'0000',CL10'6291772134'\n          DC   F'0',X'0000',CL10'1300971865'\n          DC   F'0',X'0000',CL10'3325756816'\n          DC   F'0',X'0000',CL10'4499203387'\n          DC   F'0',X'0000',CL10'3090555978'\n          DC   F'0',X'0000',CL10'7385386989'\n          DC   F'0',X'0000',CL10'9984956820'\n          DC   F'0',X'0000',CL10'8828773871'\n          DC   F'0',X'0000',CL10'7724354542'\n          DC   F'0',X'0000',CL10'3248183233'\n          DC   F'0',X'0000',CL10'8561872344'\n          DC   F'0',X'0000',CL10'9967522275'\n          DC   F'0',X'0000',CL10'0906281426'\n          DC   F'0',X'0000',CL10'2584106197'\n          DC   F'0',X'0000',CL10'2488720988'\n          DC   F'0',X'0000',CL10'3741778199'\n          DC   F'0',X'0000',CL10'1510218230'\n          DC   F'0',X'0000',CL10'9580829481'\n          DC   F'0',X'0000',CL10'2682008352'\n          DC   F'0',X'0000',CL10'0216719243'\n          DC   F'0',X'0000',CL10'6750654554'\n          DC   F'0',X'0000',CL10'5879594685'\n          DC   F'0',X'0000',CL10'8979968036'\n          DC   F'0',X'0000',CL10'0826611007'\n          DC   F'0',X'0000',CL10'2141727998'\n          DC   F'0',X'0000',CL10'6819051409'\n          DC   F'0',X'0000',CL10'0847201640'\n          DC   F'0',X'0000',CL10'2836247091'\n          DC   F'0',X'0000',CL10'4531464162'\n          DC   F'0',X'0000',CL10'5778297253'\n          DC   F'0',X'0000',CL10'4082518764'\n          DC   F'0',X'0000',CL10'6189589095'\n          DC   F'0',X'0000',CL10'9987216646'\n          DC   F'0',X'0000',CL10'1515117817'\n          DC   F'0',X'0000',CL10'5945977008'\n          DC   F'0',X'0000',CL10'5081606619'\n          DC   F'0',X'0000',CL10'9188307050'\n          DC   F'0',X'0000',CL10'9875426701'\n          DC   F'0',X'0000',CL10'5201121972'\n          DC   F'0',X'0000',CL10'0269317263'\n          DC   F'0',X'0000',CL10'8261864974'\n          DC   F'0',X'0000',CL10'0129905505'\n          DC   F'0',X'0000',CL10'8048427256'\n          DC   F'0',X'0000',CL10'0218026627'\n          DC   F'0',X'0000',CL10'4677868018'\n          DC   F'0',X'0000',CL10'9473843829'\n          DC   F'0',X'0000',CL10'7805934460'\n          DC   F'0',X'0000',CL10'1658768311'\n          DC   F'0',X'0000',CL10'7899381782'\n          DC   F'0',X'0000',CL10'8906179273'\n          DC   F'0',X'0000',CL10'7473093184'\n          DC   F'0',X'0000',CL10'5012943915'\n          DC   F'0',X'0000',CL10'4963999866'\n          DC   F'0',X'0000',CL10'1783737437'\n          DC   F'0',X'0000',CL10'1993801028'\n          DC   F'0',X'0000',CL10'9420163039'\n          DC   F'0',X'0000',CL10'4052483870'\n          DC   F'0',X'0000',CL10'4826671921'\n          DC   F'0',X'0000',CL10'3114643592'\n          DC   F'0',X'0000',CL10'7785283283'\n          DC   F'0',X'0000',CL10'6380603394'\n          DC   F'0',X'0000',CL10'2231104325'\n          DC   F'0',X'0000',CL10'6214334476'\n          DC   F'0',X'0000',CL10'6340650247'\n          DC   F'0',X'0000',CL10'0430176038'\n          DC   F'0',X'0000',CL10'8824964249'\n          DC   F'0',X'0000',CL10'7360355280'\n          DC   F'0',X'0000',CL10'7699537531'\n          DC   F'0',X'0000',CL10'4615307402'\n          DC   F'0',X'0000',CL10'9883029293'\n          DC   F'0',X'0000',CL10'2128795604'\n          DC   F'0',X'0000',CL10'3256786735'\n          DC   F'0',X'0000',CL10'6959831086'\n          DC   F'0',X'0000',CL10'5297165057'\n          DC   F'0',X'0000',CL10'7403393048'\n          DC   F'0',X'0000',CL10'2072647459'\n          DC   F'0',X'0000',CL10'5241948690'\n          DC   F'0',X'0000',CL10'6277765141'\n          DC   F'0',X'0000',CL10'5449773212'\n          DC   F'0',X'0000',CL10'1055817303'\n          DC   F'0',X'0000',CL10'0342069814'\n          DC   F'0',X'0000',CL10'5642391145'\n          DC   F'0',X'0000',CL10'8040889696'\n          DC   F'0',X'0000',CL10'7341681867'\n          DC   F'0',X'0000',CL10'1209852058'\n          DC   F'0',X'0000',CL10'0027612669'\n          DC   F'0',X'0000',CL10'9289664100'\n          DC   F'0',X'0000',CL10'0241754751'\n          DC   F'0',X'0000',CL10'3946441022'\n          DC   F'0',X'0000',CL10'6040047313'\n          DC   F'0',X'0000',CL10'1124826024'\n          DC   F'0',X'0000',CL10'9020317555'\n          DC   F'0',X'0000',CL10'1977910306'\n          DC   F'0',X'0000',CL10'4442600677'\n          DC   F'0',X'0000',CL10'7025953068'\n          DC   F'0',X'0000',CL10'6034259879'\n          DC   F'0',X'0000',CL10'1175901510'\n          DC   F'0',X'0000',CL10'8951906361'\n          DC   F'0',X'0000',CL10'9713710832'\n          DC   F'0',X'0000',CL10'4452119323'\n          DC   F'0',X'0000',CL10'5061464234'\n          DC   F'0',X'0000',CL10'1102965965'\n          DC   F'0',X'0000',CL10'8971292916'\n          DC   F'0',X'0000',CL10'7848321487'\n          DC   F'0',X'0000',CL10'2908096078'\n          DC   F'0',X'0000',CL10'1916989089'\n          DC   F'0',X'0000',CL10'8653060920'\n          DC   F'0',X'0000',CL10'7448619971'\n          DC   F'0',X'0000',CL10'9639982642'\n          DC   F'0',X'0000',CL10'6788433333'\n          DC   F'0',X'0000',CL10'9216384444'\n          DC   F'0',X'0000',CL10'3682736375'\n          DC   F'0',X'0000',CL10'2901437526'\n          DC   F'0',X'0000',CL10'4087244297'\n          DC   F'0',X'0000',CL10'5792681088'\n          DC   F'0',X'0000',CL10'3980200299'\n          DC   F'0',X'0000',CL10'1553542330'\n          DC   F'0',X'0000',CL10'2452295581'\n          DC   F'0',X'0000',CL10'3893656452'\n          DC   F'0',X'0000',CL10'0425389343'\n          DC   F'0',X'0000',CL10'3133986654'\n          DC   F'0',X'0000',CL10'8632028785'\n          DC   F'0',X'0000',CL10'7328744136'\n          DC   F'0',X'0000',CL10'0967769107'\n          DC   F'0',X'0000',CL10'7496108098'\n          DC   F'0',X'0000',CL10'9008293509'\n          DC   F'0',X'0000',CL10'7789745740'\n          DC   F'0',X'0000',CL10'8363333191'\n          DC   F'0',X'0000',CL10'1923132262'\n          DC   F'0',X'0000',CL10'5619387353'\n          DC   F'0',X'0000',CL10'4838670864'\n          DC   F'0',X'0000',CL10'3903243195'\n          DC   F'0',X'0000',CL10'1493612746'\n          DC   F'0',X'0000',CL10'3578295917'\n          DC   F'0',X'0000',CL10'0714777108'\n          DC   F'0',X'0000',CL10'0265668719'\n          DC   F'0',X'0000',CL10'9354071150'\n          DC   F'0',X'0000',CL10'3262132801'\n          DC   F'0',X'0000',CL10'8456810072'\n          DC   F'0',X'0000',CL10'1506827363'\n          DC   F'0',X'0000',CL10'6834837074'\n          DC   F'0',X'0000',CL10'9528779605'\n          DC   F'0',X'0000',CL10'6316443356'\n          DC   F'0',X'0000',CL10'0287224727'\n          DC   F'0',X'0000',CL10'5025088118'\n          DC   F'0',X'0000',CL10'3496725929'\n          DC   F'0',X'0000',CL10'8318918560'\n          DC   F'0',X'0000',CL10'4909094411'\n          DC   F'0',X'0000',CL10'9503089882'\n          DC   F'0',X'0000',CL10'2104109373'\n          DC   F'0',X'0000',CL10'2106885284'\n          DC   F'0',X'0000',CL10'3621038015'\n          DC   F'0',X'0000',CL10'0397635966'\n          DC   F'0',X'0000',CL10'8742955537'\n          DC   F'0',X'0000',CL10'2883441128'\n          DC   F'0',X'0000',CL10'2925865139'\n          DC   F'0',X'0000',CL10'2836687970'\n          DC   F'0',X'0000',CL10'6744618021'\n          DC   F'0',X'0000',CL10'8350371692'\n          DC   F'0',X'0000',CL10'2307633383'\n          DC   F'0',X'0000',CL10'0119215494'\n          DC   F'0',X'0000',CL10'8372418425'\n          DC   F'0',X'0000',CL10'6017590576'\n          DC   F'0',X'0000',CL10'1873888347'\n          DC   F'0',X'0000',CL10'5626236138'\n          DC   F'0',X'0000',CL10'7257486349'\n          DC   F'0',X'0000',CL10'3139779380'\n          DC   F'0',X'0000',CL10'3889103631'\n          DC   F'0',X'0000',CL10'1567055502'\n          DC   F'0',X'0000',CL10'3893799393'\n          DC   F'0',X'0000',CL10'2816227704'\n          DC   F'0',X'0000',CL10'6055320835'\n          DC   F'0',X'0000',CL10'5136707186'\n          DC   F'0',X'0000',CL10'3888423157'\n          DC   F'0',X'0000',CL10'9469873148'\n          DC   F'0',X'0000',CL10'5675989559'\n          DC   F'0',X'0000',CL10'7540592790'\n          DC   F'0',X'0000',CL10'9142951241'\n          DC   F'0',X'0000',CL10'5001541312'\n          DC   F'0',X'0000',CL10'1519007403'\n          DC   F'0',X'0000',CL10'0622321914'\n          DC   F'0',X'0000',CL10'5022145245'\n          DC   F'0',X'0000',CL10'5395385796'\n          DC   F'0',X'0000',CL10'6274959967'\n          DC   F'0',X'0000',CL10'1510752158'\n          DC   F'0',X'0000',CL10'3845774769'\n          DC   F'0',X'0000',CL10'8431528200'\n          DC   F'0',X'0000',CL10'8986560851'\n          DC   F'0',X'0000',CL10'9782229122'\n          DC   F'0',X'0000',CL10'8719657413'\n          DC   F'0',X'0000',CL10'8441898124'\n          DC   F'0',X'0000',CL10'5705291655'\n          DC   F'0',X'0000',CL10'6114026406'\n          DC   F'0',X'0000',CL10'3801898777'\n          DC   F'0',X'0000',CL10'5725273168'\n          DC   F'0',X'0000',CL10'9911241979'\n          DC   F'0',X'0000',CL10'8284985610'\n          DC   F'0',X'0000',CL10'9580332461'\n          DC   F'0',X'0000',CL10'8317518932'\n          DC   F'0',X'0000',CL10'3912149423'\n          DC   F'0',X'0000',CL10'1659356334'\n          DC   F'0',X'0000',CL10'6617160065'\n          DC   F'0',X'0000',CL10'4293029016'\n          DC   F'0',X'0000',CL10'0517639587'\n          DC   F'0',X'0000',CL10'8969836178'\n          DC   F'0',X'0000',CL10'0496791189'\n          DC   F'0',X'0000',CL10'5653365020'\n          DC   F'0',X'0000',CL10'2764666071'\n          DC   F'0',X'0000',CL10'0295810742'\n          DC   F'0',X'0000',CL10'6392883433'\n          DC   F'0',X'0000',CL10'2139096544'\n          DC   F'0',X'0000',CL10'0350150475'\n          DC   F'0',X'0000',CL10'0612793626'\n          DC   F'0',X'0000',CL10'5750582397'\n          DC   F'0',X'0000',CL10'6980841188'\n          DC   F'0',X'0000',CL10'6706822399'\n          DC   F'0',X'0000',CL10'1169066430'\n          DC   F'0',X'0000',CL10'2059961681'\n          DC   F'0',X'0000',CL10'8685504552'\n          DC   F'0',X'0000',CL10'2338259443'\n          DC   F'0',X'0000',CL10'4225518754'\n          DC   F'0',X'0000',CL10'9576662885'\n          DC   F'0',X'0000',CL10'5433720236'\n          DC   F'0',X'0000',CL10'0109127207'\n          DC   F'0',X'0000',CL10'0374688198'\n          DC   F'0',X'0000',CL10'0125735609'\n          DC   F'0',X'0000',CL10'3544489840'\n          DC   F'0',X'0000',CL10'8666619291'\n          DC   F'0',X'0000',CL10'5735000362'\n          DC   F'0',X'0000',CL10'0804677453'\n          DC   F'0',X'0000',CL10'0743022964'\n          DC   F'0',X'0000',CL10'3049097295'\n          DC   F'0',X'0000',CL10'4796208846'\n          DC   F'0',X'0000',CL10'1481674017'\n          DC   F'0',X'0000',CL10'0647777208'\n          DC   F'0',X'0000',CL10'8817930819'\n          DC   F'0',X'0000',CL10'5572035250'\n          DC   F'0',X'0000',CL10'7465038901'\n          DC   F'0',X'0000',CL10'8972698172'\n          DC   F'0',X'0000',CL10'9728537463'\n          DC   F'0',X'0000',CL10'8996009174'\n          DC   F'0',X'0000',CL10'1599853705'\n          DC   F'0',X'0000',CL10'6420659456'\n          DC   F'0',X'0000',CL10'1036622827'\n          DC   F'0',X'0000',CL10'6176508218'\n          DC   F'0',X'0000',CL10'3327808029'\n          DC   F'0',X'0000',CL10'0124102660'\n          DC   F'0',X'0000',CL10'3015620511'\n          DC   F'0',X'0000',CL10'7206997982'\n          DC   F'0',X'0000',CL10'1926239473'\n          DC   F'0',X'0000',CL10'6768877384'\n          DC   F'0',X'0000',CL10'4141332115'\n          DC   F'0',X'0000',CL10'5707472066'\n          DC   F'0',X'0000',CL10'9222373637'\n          DC   F'0',X'0000',CL10'8217281228'\n          DC   F'0',X'0000',CL10'2679767239'\n          DC   F'0',X'0000',CL10'6153092070'\n          DC   F'0',X'0000',CL10'5558764121'\n          DC   F'0',X'0000',CL10'6526299792'\n          DC   F'0',X'0000',CL10'1094183483'\n          DC   F'0',X'0000',CL10'8326027594'\n          DC   F'0',X'0000',CL10'3665932525'\n          DC   F'0',X'0000',CL10'1737046676'\n          DC   F'0',X'0000',CL10'1767326447'\n          DC   F'0',X'0000',CL10'6906496238'\n          DC   F'0',X'0000',CL10'0378208449'\n          DC   F'0',X'0000',CL10'4691403480'\n          DC   F'0',X'0000',CL10'7014869731'\n          DC   F'0',X'0000',CL10'6299003602'\n          DC   F'0',X'0000',CL10'7808769493'\n          DC   F'0',X'0000',CL10'0411859804'\n          DC   F'0',X'0000',CL10'3246054935'\n          DC   F'0',X'0000',CL10'3269783286'\n          DC   F'0',X'0000',CL10'5679881257'\n          DC   F'0',X'0000',CL10'7260553248'\n          DC   F'0',X'0000',CL10'0407531659'\n          DC   F'0',X'0000',CL10'4851436890'\n          DC   F'0',X'0000',CL10'6984337341'\n          DC   F'0',X'0000',CL10'5173509412'\n          DC   F'0',X'0000',CL10'5526397503'\n          DC   F'0',X'0000',CL10'8250774014'\n          DC   F'0',X'0000',CL10'2034099345'\n          DC   F'0',X'0000',CL10'4746081896'\n          DC   F'0',X'0000',CL10'5248438067'\n          DC   F'0',X'0000',CL10'5175852258'\n          DC   F'0',X'0000',CL10'3232136869'\n          DC   F'0',X'0000',CL10'9825592300'\n          DC   F'0',X'0000',CL10'8747566951'\n          DC   F'0',X'0000',CL10'7078217222'\n          DC   F'0',X'0000',CL10'6583467513'\n          DC   F'0',X'0000',CL10'1547170224'\n          DC   F'0',X'0000',CL10'1262465755'\n          DC   F'0',X'0000',CL10'2286342506'\n          DC   F'0',X'0000',CL10'8041396877'\n          DC   F'0',X'0000',CL10'3428793268'\n          DC   F'0',X'0000',CL10'1796424079'\n          DC   F'0',X'0000',CL10'2886269710'\n          DC   F'0',X'0000',CL10'5264958561'\n          DC   F'0',X'0000',CL10'7221527032'\n          DC   F'0',X'0000',CL10'8196379523'\n          DC   F'0',X'0000',CL10'0485448434'\n          DC   F'0',X'0000',CL10'0243554165'\n          DC   F'0',X'0000',CL10'9690965116'\n          DC   F'0',X'0000',CL10'0907157687'\n          DC   F'0',X'0000',CL10'7675776278'\n          DC   F'0',X'0000',CL10'7524793289'\n          DC   F'0',X'0000',CL10'3385869120'\n          DC   F'0',X'0000',CL10'5176912171'\n          DC   F'0',X'0000',CL10'8091838842'\n          DC   F'0',X'0000',CL10'8461533533'\n          DC   F'0',X'0000',CL10'1730008644'\n          DC   F'0',X'0000',CL10'2369764575'\n          DC   F'0',X'0000',CL10'4440349726'\n          DC   F'0',X'0000',CL10'5974120497'\n          DC   F'0',X'0000',CL10'2453201288'\n          DC   F'0',X'0000',CL10'6321644499'\n          DC   F'0',X'0000',CL10'2756790530'\n          DC   F'0',X'0000',CL10'8803827781'\n          DC   F'0',X'0000',CL10'5457552652'\n          DC   F'0',X'0000',CL10'2355329543'\n          DC   F'0',X'0000',CL10'4425250854'\n          DC   F'0',X'0000',CL10'1113496985'\n          DC   F'0',X'0000',CL10'3694896336'\n          DC   F'0',X'0000',CL10'6650685307'\n          DC   F'0',X'0000',CL10'7177468298'\n          DC   F'0',X'0000',CL10'4571377709'\n          DC   F'0',X'0000',CL10'0511433940'\n          DC   F'0',X'0000',CL10'4146105391'\n          DC   F'0',X'0000',CL10'4367068462'\n          DC   F'0',X'0000',CL10'7734167553'\n          DC   F'0',X'0000',CL10'6195575064'\n          DC   F'0',X'0000',CL10'6027151395'\n          DC   F'0',X'0000',CL10'0295004946'\n          DC   F'0',X'0000',CL10'3625252117'\n          DC   F'0',X'0000',CL10'2144977308'\n          DC   F'0',X'0000',CL10'5138392919'\n          DC   F'0',X'0000',CL10'0242199350'\n          DC   F'0',X'0000',CL10'2884145001'\n          DC   F'0',X'0000',CL10'5148786272'\n          DC   F'0',X'0000',CL10'1334447563'\n          DC   F'0',X'0000',CL10'9145381274'\n          DC   F'0',X'0000',CL10'8743127805'\n          DC   F'0',X'0000',CL10'8761075556'\n          DC   F'0',X'0000',CL10'0866220927'\n          DC   F'0',X'0000',CL10'4532128318'\n          DC   F'0',X'0000',CL10'3367090129'\n          DC   F'0',X'0000',CL10'5621486760'\n          DC   F'0',X'0000',CL10'6378346611'\n          DC   F'0',X'0000',CL10'9411106082'\n          DC   F'0',X'0000',CL10'4772569573'\n          DC   F'0',X'0000',CL10'5859069484'\n          DC   F'0',X'0000',CL10'8973826215'\n          DC   F'0',X'0000',CL10'1293508166'\n          DC   F'0',X'0000',CL10'1621991737'\n          DC   F'0',X'0000',CL10'4395321328'\n          DC   F'0',X'0000',CL10'3081869339'\n          DC   F'0',X'0000',CL10'6401696170'\n          DC   F'0',X'0000',CL10'1669110221'\n          DC   F'0',X'0000',CL10'6042427892'\n          DC   F'0',X'0000',CL10'0544933583'\n          DC   F'0',X'0000',CL10'5401039694'\n          DC   F'0',X'0000',CL10'0511646625'\n          DC   F'0',X'0000',CL10'3772702776'\n          DC   F'0',X'0000',CL10'4420964547'\n          DC   F'0',X'0000',CL10'0670956338'\n          DC   F'0',X'0000',CL10'2587130549'\n          DC   F'0',X'0000',CL10'4415227580'\n          DC   F'0',X'0000',CL10'7476835831'\n          DC   F'0',X'0000',CL10'7211151702'\n          DC   F'0',X'0000',CL10'8027939593'\n          DC   F'0',X'0000',CL10'9315691904'\n          DC   F'0',X'0000',CL10'7228989035'\n          DC   F'0',X'0000',CL10'1759059386'\n          DC   F'0',X'0000',CL10'9071539357'\n          DC   F'0',X'0000',CL10'7175433348'\n          DC   F'0',X'0000',CL10'0667273759'\n          DC   F'0',X'0000',CL10'9574480990'\n          DC   F'0',X'0000',CL10'0201923441'\n          DC   F'0',X'0000',CL10'4365677512'\n          DC   F'0',X'0000',CL10'9477987603'\n          DC   F'0',X'0000',CL10'7627426114'\n          DC   F'0',X'0000',CL10'9078253445'\n          DC   F'0',X'0000',CL10'6492977996'\n          DC   F'0',X'0000',CL10'2662116167'\n          DC   F'0',X'0000',CL10'8605152358'\n          DC   F'0',X'0000',CL10'2586698969'\n          DC   F'0',X'0000',CL10'5871856400'\n          DC   F'0',X'0000',CL10'9924773051'\n          DC   F'0',X'0000',CL10'4234405322'\n          DC   F'0',X'0000',CL10'6031477613'\n          DC   F'0',X'0000',CL10'4840642324'\n          DC   F'0',X'0000',CL10'8091839855'\n          DC   F'0',X'0000',CL10'0894858606'\n          DC   F'0',X'0000',CL10'5561094977'\n          DC   F'0',X'0000',CL10'6536513368'\n          DC   F'0',X'0000',CL10'6089806179'\n          DC   F'0',X'0000',CL10'7379753810'\n          DC   F'0',X'0000',CL10'6405784661'\n          DC   F'0',X'0000',CL10'4825735132'\n          DC   F'0',X'0000',CL10'3704809623'\n          DC   F'0',X'0000',CL10'5939740534'\n          DC   F'0',X'0000',CL10'4382148265'\n          DC   F'0',X'0000',CL10'5565101216'\n          DC   F'0',X'0000',CL10'7416875787'\n          DC   F'0',X'0000',CL10'5425916378'\n          DC   F'0',X'0000',CL10'7400995389'\n          DC   F'0',X'0000',CL10'4250573220'\n          DC   F'0',X'0000',CL10'5085358271'\n          DC   F'0',X'0000',CL10'1428066942'\n          DC   F'0',X'0000',CL10'9394383633'\n          DC   F'0',X'0000',CL10'2389120744'\n          DC   F'0',X'0000',CL10'2141578675'\n          DC   F'0',X'0000',CL10'4784105826'\n          DC   F'0',X'0000',CL10'3157858597'\n          DC   F'0',X'0000',CL10'8609761388'\n          DC   F'0',X'0000',CL10'7224666599'\n          DC   F'0',X'0000',CL10'8716714630'\n          DC   F'0',X'0000',CL10'3083893881'\n          DC   F'0',X'0000',CL10'2609800752'\n          DC   F'0',X'0000',CL10'6876599643'\n          DC   F'0',X'0000',CL10'8133182954'\n          DC   F'0',X'0000',CL10'5642531085'\n          DC   F'0',X'0000',CL10'2512272436'\n          DC   F'0',X'0000',CL10'8992443407'\n          DC   F'0',X'0000',CL10'4304448398'\n          DC   F'0',X'0000',CL10'6745219809'\n          DC   F'0',X'0000',CL10'1090578040'\n          DC   F'0',X'0000',CL10'5201791491'\n          DC   F'0',X'0000',CL10'6219336562'\n          DC   F'0',X'0000',CL10'2807857653'\n          DC   F'0',X'0000',CL10'5596327164'\n          DC   F'0',X'0000',CL10'5237405495'\n          DC   F'0',X'0000',CL10'8390001046'\n          DC   F'0',X'0000',CL10'8409030217'\n          DC   F'0',X'0000',CL10'1606377408'\n          DC   F'0',X'0000',CL10'3627055019'\n          DC   F'0',X'0000',CL10'5764563450'\n          DC   F'0',X'0000',CL10'9919451101'\n          DC   F'0',X'0000',CL10'5385074372'\n          DC   F'0',X'0000',CL10'2724557663'\n          DC   F'0',X'0000',CL10'1682953374'\n          DC   F'0',X'0000',CL10'3358601905'\n          DC   F'0',X'0000',CL10'3737691656'\n          DC   F'0',X'0000',CL10'8176019027'\n          DC   F'0',X'0000',CL10'6491948418'\n          DC   F'0',X'0000',CL10'8014572229'\n          DC   F'0',X'0000',CL10'7211070860'\n          DC   F'0',X'0000',CL10'5397272711'\n          DC   F'0',X'0000',CL10'4515414182'\n          DC   F'0',X'0000',CL10'7043099673'\n          DC   F'0',X'0000',CL10'3777461584'\n          DC   F'0',X'0000',CL10'0518520315'\n          DC   F'0',X'0000',CL10'7555744266'\n          DC   F'0',X'0000',CL10'4341809837'\n          DC   F'0',X'0000',CL10'7817561428'\n          DC   F'0',X'0000',CL10'8532171439'\n          DC   F'0',X'0000',CL10'5982500270'\n          DC   F'0',X'0000',CL10'5475656321'\n          DC   F'0',X'0000',CL10'5298755992'\n          DC   F'0',X'0000',CL10'7059883683'\n          DC   F'0',X'0000',CL10'5744251794'\n          DC   F'0',X'0000',CL10'1309560725'\n          DC   F'0',X'0000',CL10'2524558876'\n          DC   F'0',X'0000',CL10'8234802647'\n          DC   F'0',X'0000',CL10'3319616438'\n          DC   F'0',X'0000',CL10'8284252649'\n          DC   F'0',X'0000',CL10'4711251680'\n          DC   F'0',X'0000',CL10'5675001931'\n          DC   F'0',X'0000',CL10'2703499802'\n          DC   F'0',X'0000',CL10'0951309693'\n          DC   F'0',X'0000',CL10'3927724004'\n          DC   F'0',X'0000',CL10'0404123135'\n          DC   F'0',X'0000',CL10'1004535486'\n          DC   F'0',X'0000',CL10'2463397457'\n          DC   F'0',X'0000',CL10'5614513448'\n          DC   F'0',X'0000',CL10'0855215859'\n          DC   F'0',X'0000',CL10'4109725090'\n          DC   F'0',X'0000',CL10'9195709541'\n          DC   F'0',X'0000',CL10'0978045612'\n          DC   F'0',X'0000',CL10'9773777703'\n          DC   F'0',X'0000',CL10'3152278214'\n          DC   F'0',X'0000',CL10'8554607545'\n          DC   F'0',X'0000',CL10'1036074096'\n          DC   F'0',X'0000',CL10'6915994267'\n          DC   F'0',X'0000',CL10'8198652458'\n          DC   F'0',X'0000',CL10'6309461069'\n          DC   F'0',X'0000',CL10'8970320500'\n          DC   F'0',X'0000',CL10'2918179151'\n          DC   F'0',X'0000',CL10'9650793422'\n          DC   F'0',X'0000',CL10'3463687713'\n          DC   F'0',X'0000',CL10'2722314424'\n          DC   F'0',X'0000',CL10'8593413955'\n          DC   F'0',X'0000',CL10'2339574706'\n          DC   F'0',X'0000',CL10'4760993077'\n          DC   F'0',X'0000',CL10'1448433468'\n          DC   F'0',X'0000',CL10'7191388279'\n          DC   F'0',X'0000',CL10'4165437910'\n          DC   F'0',X'0000',CL10'3402810761'\n          DC   F'0',X'0000',CL10'9530143232'\n          DC   F'0',X'0000',CL10'6837439723'\n          DC   F'0',X'0000',CL10'2422232634'\n          DC   F'0',X'0000',CL10'1432942365'\n          DC   F'0',X'0000',CL10'2315437316'\n          DC   F'0',X'0000',CL10'8446793887'\n          DC   F'0',X'0000',CL10'8620256478'\n          DC   F'0',X'0000',CL10'4525397489'\n          DC   F'0',X'0000',CL10'0647477320'\n          DC   F'0',X'0000',CL10'2890004371'\n          DC   F'0',X'0000',CL10'8704495042'\n          DC   F'0',X'0000',CL10'5591433733'\n          DC   F'0',X'0000',CL10'8516432844'\n          DC   F'0',X'0000',CL10'2065592775'\n          DC   F'0',X'0000',CL10'2044061926'\n          DC   F'0',X'0000',CL10'5701796697'\n          DC   F'0',X'0000',CL10'1850521488'\n          DC   F'0',X'0000',CL10'3815888699'\n          DC   F'0',X'0000',CL10'1448838730'\n          DC   F'0',X'0000',CL10'5300159981'\n          DC   F'0',X'0000',CL10'8542248852'\n          DC   F'0',X'0000',CL10'2302069743'\n          DC   F'0',X'0000',CL10'9749315054'\n          DC   F'0',X'0000',CL10'5563765185'\n          DC   F'0',X'0000',CL10'2285848536'\n          DC   F'0',X'0000',CL10'5534401507'\n          DC   F'0',X'0000',CL10'8155628498'\n          DC   F'0',X'0000',CL10'1047261909'\n          DC   F'0',X'0000',CL10'7681922140'\n          DC   F'0',X'0000',CL10'2233677591'\n          DC   F'0',X'0000',CL10'9691804662'\n          DC   F'0',X'0000',CL10'2425747753'\n          DC   F'0',X'0000',CL10'3345279264'\n          DC   F'0',X'0000',CL10'3079859595'\n          DC   F'0',X'0000',CL10'9481197146'\n          DC   F'0',X'0000',CL10'4233008317'\n          DC   F'0',X'0000',CL10'5431977508'\n          DC   F'0',X'0000',CL10'8683917119'\n          DC   F'0',X'0000',CL10'4539127550'\n          DC   F'0',X'0000',CL10'8970957201'\n          DC   F'0',X'0000',CL10'8081562472'\n          DC   F'0',X'0000',CL10'0298867763'\n          DC   F'0',X'0000',CL10'1008725474'\n          DC   F'0',X'0000',CL10'7846276005'\n          DC   F'0',X'0000',CL10'1750507756'\n          DC   F'0',X'0000',CL10'1366017127'\n          DC   F'0',X'0000',CL10'8455968518'\n          DC   F'0',X'0000',CL10'1670254329'\n          DC   F'0',X'0000',CL10'7292854960'\n          DC   F'0',X'0000',CL10'0472398811'\n          DC   F'0',X'0000',CL10'0919922282'\n          DC   F'0',X'0000',CL10'5137829773'\n          DC   F'0',X'0000',CL10'4924053684'\n          DC   F'0',X'0000',CL10'1175414415'\n          DC   F'0',X'0000',CL10'4894180366'\n          DC   F'0',X'0000',CL10'5781827937'\n          DC   F'0',X'0000',CL10'4884001528'\n          DC   F'0',X'0000',CL10'3430673539'\n          DC   F'0',X'0000',CL10'7295504370'\n          DC   F'0',X'0000',CL10'7378402421'\n          DC   F'0',X'0000',CL10'2695284092'\n          DC   F'0',X'0000',CL10'7039033783'\n          DC   F'0',X'0000',CL10'3755663894'\n          DC   F'0',X'0000',CL10'8459674825'\n          DC   F'0',X'0000',CL10'8392614976'\n          DC   F'0',X'0000',CL10'1608840747'\n          DC   F'0',X'0000',CL10'1252476538'\n          DC   F'0',X'0000',CL10'1869574749'\n          DC   F'0',X'0000',CL10'7979475780'\n          DC   F'0',X'0000',CL10'2009368031'\n          DC   F'0',X'0000',CL10'1176047902'\n          DC   F'0',X'0000',CL10'2978879793'\n          DC   F'0',X'0000',CL10'8647956104'\n          DC   F'0',X'0000',CL10'5171457235'\n          DC   F'0',X'0000',CL10'1406211586'\n          DC   F'0',X'0000',CL10'4255455557'\n          DC   F'0',X'0000',CL10'8977793548'\n          DC   F'0',X'0000',CL10'5371357959'\n          DC   F'0',X'0000',CL10'0857169190'\n          DC   F'0',X'0000',CL10'4365695641'\n          DC   F'0',X'0000',CL10'3410613712'\n          DC   F'0',X'0000',CL10'2813767803'\n          DC   F'0',X'0000',CL10'9225330314'\n          DC   F'0',X'0000',CL10'2863161645'\n          DC   F'0',X'0000',CL10'8775370196'\n          DC   F'0',X'0000',CL10'6410072367'\n          DC   F'0',X'0000',CL10'0356352558'\n          DC   F'0',X'0000',CL10'8800423169'\n          DC   F'0',X'0000',CL10'1520984600'\n          DC   F'0',X'0000',CL10'8127785251'\n          DC   F'0',X'0000',CL10'1727381522'\n          DC   F'0',X'0000',CL10'5280097813'\n          DC   F'0',X'0000',CL10'9592186524'\n          DC   F'0',X'0000',CL10'5167188055'\n          DC   F'0',X'0000',CL10'7020490806'\n          DC   F'0',X'0000',CL10'4041091177'\n          DC   F'0',X'0000',CL10'4564553568'\n          DC   F'0',X'0000',CL10'9501170379'\n          DC   F'0',X'0000',CL10'5643322010'\n          DC   F'0',X'0000',CL10'6656036861'\n          DC   F'0',X'0000',CL10'9734751332'\n          DC   F'0',X'0000',CL10'3994269823'\n          DC   F'0',X'0000',CL10'4332924734'\n          DC   F'0',X'0000',CL10'3795936465'\n          DC   F'0',X'0000',CL10'0341973416'\n          DC   F'0',X'0000',CL10'2396911987'\n          DC   F'0',X'0000',CL10'3658796578'\n          DC   F'0',X'0000',CL10'3297999589'\n          DC   F'0',X'0000',CL10'4976581420'\n          DC   F'0',X'0000',CL10'8990850471'\n          DC   F'0',X'0000',CL10'8321123142'\n          DC   F'0',X'0000',CL10'3452683833'\n          DC   F'0',X'0000',CL10'4511944944'\n          DC   F'0',X'0000',CL10'4541806875'\n          DC   F'0',X'0000',CL10'6620218026'\n          DC   F'0',X'0000',CL10'2005934797'\n          DC   F'0',X'0000',CL10'8575481588'\n          DC   F'0',X'0000',CL10'0495310799'\n          DC   F'0',X'0000',CL10'3353162830'\n          DC   F'0',X'0000',CL10'5852626081'\n          DC   F'0',X'0000',CL10'1654896952'\n          DC   F'0',X'0000',CL10'5031739843'\n          DC   F'0',X'0000',CL10'3673647154'\n          DC   F'0',X'0000',CL10'3277199285'\n          DC   F'0',X'0000',CL10'3415624636'\n          DC   F'0',X'0000',CL10'4676559607'\n          DC   F'0',X'0000',CL10'5131008598'\n          DC   F'0',X'0000',CL10'1877504009'\n          DC   F'0',X'0000',CL10'2685466240'\n          DC   F'0',X'0000',CL10'5641763691'\n          DC   F'0',X'0000',CL10'3184472762'\n          DC   F'0',X'0000',CL10'2987837853'\n          DC   F'0',X'0000',CL10'3842431364'\n          DC   F'0',X'0000',CL10'1954513695'\n          DC   F'0',X'0000',CL10'3968593246'\n          DC   F'0',X'0000',CL10'9497186417'\n          DC   F'0',X'0000',CL10'0021777608'\n          DC   F'0',X'0000',CL10'4708979219'\n          DC   F'0',X'0000',CL10'8965891650'\n          DC   F'0',X'0000',CL10'0438663301'\n          DC   F'0',X'0000',CL10'1638250572'\n          DC   F'0',X'0000',CL10'0457377863'\n          DC   F'0',X'0000',CL10'1522697574'\n          DC   F'0',X'0000',CL10'4606150105'\n          DC   F'0',X'0000',CL10'3199523856'\n          DC   F'0',X'0000',CL10'8836215227'\n          DC   F'0',X'0000',CL10'6824188618'\n          DC   F'0',X'0000',CL10'8734136429'\n          DC   F'0',X'0000',CL10'8266839060'\n          DC   F'0',X'0000',CL10'2003724911'\n          DC   F'0',X'0000',CL10'7024630382'\n          DC   F'0',X'0000',CL10'5456759873'\n          DC   F'0',X'0000',CL10'3698845784'\n          DC   F'0',X'0000',CL10'3344508515'\n          DC   F'0',X'0000',CL10'3708816466'\n          DC   F'0',X'0000',CL10'4342046037'\n          DC   F'0',X'0000',CL10'1994641628'\n          DC   F'0',X'0000',CL10'2177375639'\n          DC   F'0',X'0000',CL10'2740708470'\n          DC   F'0',X'0000',CL10'7777348521'\n          DC   F'0',X'0000',CL10'6632012192'\n          DC   F'0',X'0000',CL10'6882383883'\n          DC   F'0',X'0000',CL10'3835275994'\n          DC   F'0',X'0000',CL10'4361988925'\n          DC   F'0',X'0000',CL10'1776871076'\n          DC   F'0',X'0000',CL10'2943078847'\n          DC   F'0',X'0000',CL10'0869536638'\n          DC   F'0',X'0000',CL10'7743096849'\n          DC   F'0',X'0000',CL10'6619899880'\n          DC   F'0',X'0000',CL10'6879934131'\n          DC   F'0',X'0000',CL10'1028796002'\n          DC   F'0',X'0000',CL10'0510649893'\n          DC   F'0',X'0000',CL10'7876388204'\n          DC   F'0',X'0000',CL10'3930991335'\n          DC   F'0',X'0000',CL10'3364087686'\n          DC   F'0',X'0000',CL10'2847713657'\n          DC   F'0',X'0000',CL10'3665273648'\n          DC   F'0',X'0000',CL10'8615700059'\n          DC   F'0',X'0000',CL10'2216813290'\n          DC   F'0',X'0000',CL10'6111881741'\n          DC   F'0',X'0000',CL10'0063381812'\n          DC   F'0',X'0000',CL10'4997957903'\n          DC   F'0',X'0000',CL10'0246582414'\n          DC   F'0',X'0000',CL10'4403915745'\n          DC   F'0',X'0000',CL10'0110866296'\n          DC   F'0',X'0000',CL10'9544350467'\n          DC   F'0',X'0000',CL10'1478252658'\n          DC   F'0',X'0000',CL10'4459585269'\n          DC   F'0',X'0000',CL10'5923848700'\n          DC   F'0',X'0000',CL10'5953591351'\n          DC   F'0',X'0000',CL10'8864169622'\n          DC   F'0',X'0000',CL10'7880707913'\n          DC   F'0',X'0000',CL10'9850258624'\n          DC   F'0',X'0000',CL10'0213162155'\n          DC   F'0',X'0000',CL10'5337606906'\n          DC   F'0',X'0000',CL10'1801389277'\n          DC   F'0',X'0000',CL10'2284873668'\n          DC   F'0',X'0000',CL10'7419152479'\n          DC   F'0',X'0000',CL10'4213406110'\n          DC   F'0',X'0000',CL10'6565462961'\n          DC   F'0',X'0000',CL10'3839559432'\n          DC   F'0',X'0000',CL10'1575299923'\n          DC   F'0',X'0000',CL10'6071816834'\n          DC   F'0',X'0000',CL10'3871130565'\n          DC   F'0',X'0000',CL10'0044709516'\n          DC   F'0',X'0000',CL10'7667230087'\n          DC   F'0',X'0000',CL10'6941536678'\n          DC   F'0',X'0000',CL10'8118801689'\n          DC   F'0',X'0000',CL10'9637885520'\n          DC   F'0',X'0000',CL10'3787896571'\n          DC   F'0',X'0000',CL10'8677951242'\n          DC   F'0',X'0000',CL10'9378133933'\n          DC   F'0',X'0000',CL10'4775657044'\n          DC   F'0',X'0000',CL10'1970220975'\n          DC   F'0',X'0000',CL10'8912574126'\n          DC   F'0',X'0000',CL10'0470272897'\n          DC   F'0',X'0000',CL10'5184641688'\n          DC   F'0',X'0000',CL10'1662932899'\n          DC   F'0',X'0000',CL10'6829686930'\n          DC   F'0',X'0000',CL10'5141292181'\n          DC   F'0',X'0000',CL10'0347745052'\n          DC   F'0',X'0000',CL10'1465609943'\n          DC   F'0',X'0000',CL10'4306179254'\n          DC   F'0',X'0000',CL10'1182833385'\n          DC   F'0',X'0000',CL10'6301600736'\n          DC   F'0',X'0000',CL10'4818917707'\n          DC   F'0',X'0000',CL10'1630588698'\n          DC   F'0',X'0000',CL10'3635946109'\n          DC   F'0',X'0000',CL10'8501210340'\n          DC   F'0',X'0000',CL10'5826049791'\n          DC   F'0',X'0000',CL10'5097340862'\n          DC   F'0',X'0000',CL10'0894127953'\n          DC   F'0',X'0000',CL10'1487783464'\n          DC   F'0',X'0000',CL10'4261367795'\n          DC   F'0',X'0000',CL10'2252189346'\n          DC   F'0',X'0000',CL10'2601564517'\n          DC   F'0',X'0000',CL10'1775777708'\n          DC   F'0',X'0000',CL10'6102241319'\n          DC   F'0',X'0000',CL10'1444855750'\n          DC   F'0',X'0000',CL10'4722569401'\n          DC   F'0',X'0000',CL10'4455138672'\n          DC   F'0',X'0000',CL10'9600087963'\n          DC   F'0',X'0000',CL10'7624869674'\n          DC   F'0',X'0000',CL10'6038224205'\n          DC   F'0',X'0000',CL10'8484739956'\n          DC   F'0',X'0000',CL10'8986613327'\n          DC   F'0',X'0000',CL10'7996608718'\n          DC   F'0',X'0000',CL10'3606218529'\n          DC   F'0',X'0000',CL10'2533023160'\n          DC   F'0',X'0000',CL10'0391251011'\n          DC   F'0',X'0000',CL10'1229538482'\n          DC   F'0',X'0000',CL10'4399889973'\n          DC   F'0',X'0000',CL10'4501837884'\n          DC   F'0',X'0000',CL10'9425802615'\n          DC   F'0',X'0000',CL10'4399652566'\n          DC   F'0',X'0000',CL10'8422464137'\n          DC   F'0',X'0000',CL10'5549481728'\n          DC   F'0',X'0000',CL10'9172277739'\n          DC   F'0',X'0000',CL10'4718112570'\n          DC   F'0',X'0000',CL10'7072494621'\n          DC   F'0',X'0000',CL10'5508940292'\n          DC   F'0',X'0000',CL10'2989933983'\n          DC   F'0',X'0000',CL10'0383088094'\n          DC   F'0',X'0000',CL10'1416503025'\n          DC   F'0',X'0000',CL10'3077327176'\n          DC   F'0',X'0000',CL10'0637516947'\n          DC   F'0',X'0000',CL10'8570796738'\n          DC   F'0',X'0000',CL10'0304818949'\n          DC   F'0',X'0000',CL10'3032523980'\n          DC   F'0',X'0000',CL10'0686700231'\n          DC   F'0',X'0000',CL10'0661744102'\n          DC   F'0',X'0000',CL10'9946619993'\n          DC   F'0',X'0000',CL10'6013020304'\n          DC   F'0',X'0000',CL10'9082725435'\n          DC   F'0',X'0000',CL10'7278163786'\n          DC   F'0',X'0000',CL10'6640171757'\n          DC   F'0',X'0000',CL10'6076953748'\n          DC   F'0',X'0000',CL10'4988242159'\n          DC   F'0',X'0000',CL10'0588657390'\n          DC   F'0',X'0000',CL10'4834267841'\n          DC   F'0',X'0000',CL10'9336349912'\n          DC   F'0',X'0000',CL10'2726348003'\n          DC   F'0',X'0000',CL10'0616034514'\n          DC   F'0',X'0000',CL10'5576869845'\n          DC   F'0',X'0000',CL10'5442562396'\n          DC   F'0',X'0000',CL10'4718828567'\n          DC   F'0',X'0000',CL10'7964352758'\n          DC   F'0',X'0000',CL10'7686947369'\n          DC   F'0',X'0000',CL10'4578912800'\n          DC   F'0',X'0000',CL10'6795597451'\n          DC   F'0',X'0000',CL10'9461157722'\n          DC   F'0',X'0000',CL10'7665518013'\n          DC   F'0',X'0000',CL10'7896530724'\n          DC   F'0',X'0000',CL10'6131336255'\n          DC   F'0',X'0000',CL10'7690923006'\n          DC   F'0',X'0000',CL10'6441887377'\n          DC   F'0',X'0000',CL10'1009393768'\n          DC   F'0',X'0000',CL10'5345334579'\n          DC   F'0',X'0000',CL10'2275690210'\n          DC   F'0',X'0000',CL10'3531089061'\n          DC   F'0',X'0000',CL10'0244567532'\n          DC   F'0',X'0000',CL10'5980530023'\n          DC   F'0',X'0000',CL10'2038908934'\n          DC   F'0',X'0000',CL10'4058524665'\n          DC   F'0',X'0000',CL10'1823645616'\n          DC   F'0',X'0000',CL10'2657748187'\n          DC   F'0',X'0000',CL10'4868476778'\n          DC   F'0',X'0000',CL10'3387803789'\n          DC   F'0',X'0000',CL10'7031389620'\n          DC   F'0',X'0000',CL10'7681142671'\n          DC   F'0',X'0000',CL10'8174979342'\n          DC   F'0',X'0000',CL10'9767784033'\n          DC   F'0',X'0000',CL10'3707569144'\n          DC   F'0',X'0000',CL10'6750835075'\n          DC   F'0',X'0000',CL10'9321130226'\n          DC   F'0',X'0000',CL10'9494810997'\n          DC   F'0',X'0000',CL10'8078001788'\n          DC   F'0',X'0000',CL10'1718754999'\n          DC   F'0',X'0000',CL10'4278411030'\n          DC   F'0',X'0000',CL10'3566158281'\n          DC   F'0',X'0000',CL10'3020793152'\n          DC   F'0',X'0000',CL10'8003680043'\n          DC   F'0',X'0000',CL10'6046911354'\n          DC   F'0',X'0000',CL10'1680667485'\n          DC   F'0',X'0000',CL10'1343776836'\n          DC   F'0',X'0000',CL10'4361475807'\n          DC   F'0',X'0000',CL10'4054368798'\n          DC   F'0',X'0000',CL10'0722588209'\n          DC   F'0',X'0000',CL10'7529154440'\n          DC   F'0',X'0000',CL10'3186535891'\n          DC   F'0',X'0000',CL10'3830408962'\n          DC   F'0',X'0000',CL10'2544618053'\n          DC   F'0',X'0000',CL10'0681335564'\n          DC   F'0',X'0000',CL10'2400421895'\n          DC   F'0',X'0000',CL10'4731985446'\n          DC   F'0',X'0000',CL10'1946142617'\n          DC   F'0',X'0000',CL10'7093977808'\n          DC   F'0',X'0000',CL10'7263703419'\n          DC   F'0',X'0000',CL10'4376019850'\n          DC   F'0',X'0000',CL10'2222675501'\n          DC   F'0',X'0000',CL10'4932226772'\n          DC   F'0',X'0000',CL10'4126998063'\n          DC   F'0',X'0000',CL10'3715241774'\n          DC   F'0',X'0000',CL10'4542498305'\n          DC   F'0',X'0000',CL10'8006156056'\n          DC   F'0',X'0000',CL10'0217211427'\n          DC   F'0',X'0000',CL10'8373228818'\n          DC   F'0',X'0000',CL10'0686500629'\n          DC   F'0',X'0000',CL10'2491407260'\n          DC   F'0',X'0000',CL10'6034977111'\n          DC   F'0',X'0000',CL10'1934646582'\n          DC   F'0',X'0000',CL10'8367220073'\n          DC   F'0',X'0000',CL10'1733029984'\n          DC   F'0',X'0000',CL10'1819296715'\n          DC   F'0',X'0000',CL10'7366688666'\n          DC   F'0',X'0000',CL10'6423082237'\n          DC   F'0',X'0000',CL10'1948521828'\n          DC   F'0',X'0000',CL10'8815379839'\n          DC   F'0',X'0000',CL10'5627716670'\n          DC   F'0',X'0000',CL10'5663840721'\n          DC   F'0',X'0000',CL10'7726068392'\n          DC   F'0',X'0000',CL10'1761684083'\n          DC   F'0',X'0000',CL10'7799100194'\n          DC   F'0',X'0000',CL10'2023217125'\n          DC   F'0',X'0000',CL10'2693983276'\n          DC   F'0',X'0000',CL10'3092155047'\n          DC   F'0',X'0000',CL10'0756256838'\n          DC   F'0',X'0000',CL10'3954741049'\n          DC   F'0',X'0000',CL10'9617348080'\n          DC   F'0',X'0000',CL10'3829666331'\n          DC   F'0',X'0000',CL10'8474892202'\n          DC   F'0',X'0000',CL10'7686790093'\n          DC   F'0',X'0000',CL10'7457852404'\n          DC   F'0',X'0000',CL10'3026659535'\n          DC   F'0',X'0000',CL10'3548439886'\n          DC   F'0',X'0000',CL10'4032829857'\n          DC   F'0',X'0000',CL10'2612833848'\n          DC   F'0',X'0000',CL10'8888984259'\n          DC   F'0',X'0000',CL10'8372701490'\n          DC   F'0',X'0000',CL10'0932853941'\n          DC   F'0',X'0000',CL10'9629518012'\n          DC   F'0',X'0000',CL10'2398938103'\n          DC   F'0',X'0000',CL10'4733686614'\n          DC   F'0',X'0000',CL10'8782023945'\n          DC   F'0',X'0000',CL10'5170458496'\n          DC   F'0',X'0000',CL10'0333506667'\n          DC   F'0',X'0000',CL10'6214652858'\n          DC   F'0',X'0000',CL10'2882509469'\n          DC   F'0',X'0000',CL10'9886176900'\n          DC   F'0',X'0000',CL10'1053803551'\n          DC   F'0',X'0000',CL10'1918345822'\n          DC   F'0',X'0000',CL10'1034528113'\n          DC   F'0',X'0000',CL10'8131002824'\n          DC   F'0',X'0000',CL10'5321710355'\n          DC   F'0',X'0000',CL10'4480439106'\n          DC   F'0',X'0000',CL10'6362585477'\n          DC   F'0',X'0000',CL10'7138113868'\n          DC   F'0',X'0000',CL10'7679716679'\n          DC   F'0',X'0000',CL10'2230174310'\n          DC   F'0',X'0000',CL10'7952915161'\n          DC   F'0',X'0000',CL10'7349775632'\n          DC   F'0',X'0000',CL10'3609960123'\n          DC   F'0',X'0000',CL10'6634201034'\n          DC   F'0',X'0000',CL10'6758118765'\n          DC   F'0',X'0000',CL10'6078781716'\n          DC   F'0',X'0000',CL10'5768466287'\n          DC   F'0',X'0000',CL10'3839616878'\n          DC   F'0',X'0000',CL10'3505005889'\n          DC   F'0',X'0000',CL10'9557093720'\n          DC   F'0',X'0000',CL10'1070588771'\n          DC   F'0',X'0000',CL10'5212207442'\n          DC   F'0',X'0000',CL10'1021634133'\n          DC   F'0',X'0000',CL10'5707681244'\n          DC   F'0',X'0000',CL10'1283649175'\n          DC   F'0',X'0000',CL10'8245886326'\n          DC   F'0',X'0000',CL10'7479549097'\n          DC   F'0',X'0000',CL10'3655561888'\n          DC   F'0',X'0000',CL10'5062777099'\n          DC   F'0',X'0000',CL10'8099335130'\n          DC   F'0',X'0000',CL10'1527224381'\n          DC   F'0',X'0000',CL10'8074041252'\n          DC   F'0',X'0000',CL10'1045950143'\n          DC   F'0',X'0000',CL10'3295843454'\n          DC   F'0',X'0000',CL10'7170701585'\n          DC   F'0',X'0000',CL10'8942152936'\n          DC   F'0',X'0000',CL10'1704233907'\n          DC   F'0',X'0000',CL10'8802348898'\n          DC   F'0',X'0000',CL10'7537430309'\n          DC   F'0',X'0000',CL10'2169298540'\n          DC   F'0',X'0000',CL10'8123221991'\n          DC   F'0',X'0000',CL10'7783677062'\n          DC   F'0',X'0000',CL10'4339308153'\n          DC   F'0',X'0000',CL10'5823087664'\n          DC   F'0',X'0000',CL10'8771675995'\n          DC   F'0',X'0000',CL10'1807981546'\n          DC   F'0',X'0000',CL10'5930920717'\n          DC   F'0',X'0000',CL10'2376377908'\n          DC   F'0',X'0000',CL10'2593365519'\n          DC   F'0',X'0000',CL10'0159383950'\n          DC   F'0',X'0000',CL10'3338981601'\n          DC   F'0',X'0000',CL10'1469514872'\n          DC   F'0',X'0000',CL10'0438108163'\n          DC   F'0',X'0000',CL10'4193813874'\n          DC   F'0',X'0000',CL10'2518972405'\n          DC   F'0',X'0000',CL10'2163772156'\n          DC   F'0',X'0000',CL10'0928009527'\n          DC   F'0',X'0000',CL10'4354048918'\n          DC   F'0',X'0000',CL10'4374982729'\n          DC   F'0',X'0000',CL10'0541991360'\n          DC   F'0',X'0000',CL10'9334903211'\n          DC   F'0',X'0000',CL10'7539954682'\n          DC   F'0',X'0000',CL10'3758750173'\n          DC   F'0',X'0000',CL10'9792422084'\n          DC   F'0',X'0000',CL10'2924990815'\n          DC   F'0',X'0000',CL10'3009924766'\n          DC   F'0',X'0000',CL10'6743900337'\n          DC   F'0',X'0000',CL10'7591761928'\n          DC   F'0',X'0000',CL10'5506681939'\n          DC   F'0',X'0000',CL10'7869520770'\n          DC   F'0',X'0000',CL10'3951386821'\n          DC   F'0',X'0000',CL10'1683396492'\n          DC   F'0',X'0000',CL10'9597634183'\n          DC   F'0',X'0000',CL10'0483312294'\n          DC   F'0',X'0000',CL10'8582131225'\n          DC   F'0',X'0000',CL10'1026839376'\n          DC   F'0',X'0000',CL10'8706993147'\n          DC   F'0',X'0000',CL10'3825916938'\n          DC   F'0',X'0000',CL10'3092863149'\n          DC   F'0',X'0000',CL10'8774372180'\n          DC   F'0',X'0000',CL10'6708832431'\n          DC   F'0',X'0000',CL10'2868240302'\n          DC   F'0',X'0000',CL10'0131160193'\n          DC   F'0',X'0000',CL10'6610884504'\n          DC   F'0',X'0000',CL10'8162793635'\n          DC   F'0',X'0000',CL10'2574915986'\n          DC   F'0',X'0000',CL10'3425687957'\n          DC   F'0',X'0000',CL10'9672913948'\n          DC   F'0',X'0000',CL10'4717926359'\n          DC   F'0',X'0000',CL10'7968945590'\n          DC   F'0',X'0000',CL10'4807640041'\n          DC   F'0',X'0000',CL10'9342886112'\n          DC   F'0',X'0000',CL10'0415728203'\n          DC   F'0',X'0000',CL10'6999538714'\n          DC   F'0',X'0000',CL10'6419378045'\n          DC   F'0',X'0000',CL10'9694554596'\n          DC   F'0',X'0000',CL10'4788384767'\n          DC   F'0',X'0000',CL10'2629152958'\n          DC   F'0',X'0000',CL10'4446271569'\n          DC   F'0',X'0000',CL10'4245641000'\nLASTUN   EQU   *-16\n*\nLISTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'LIST INSERTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n* L1.  L(0) <- N                                                      *\n*      L(N) <- ZERO                                                   *\n*      DO J=N-1,N-2, ... ,1                                           *\n* L2.     P <- L(0)                                                   *\n*         Q <- ZERO                                                   *\n*         K <- K(J)                                                   *\n* L3.     IF K LE K(P)                                                *\n*            GOTO L5.                                                 *\n* L4.     Q <- P                                                      *\n*         P <- L(Q)                                                   *\n*         IF P > ZERO                                                 *\n*            GOTO L3.                                                 *\n* L5.     L(Q) <- J                                                   *\n*         L(J) <- P                                                   *\n*      ENDDO                                                          *\n*---------------------------------------------------------------------*\n         L     R1,=A(LASTUN)\n         ST    R1,L0               L0 <- N\n         MVC   0(4,R1),=A(L0)      L(N) <- ZERO\n         B     NEXTJ\nLOOPJ    L     R2,L0               P <- L0\n         L     R3,=A(L0)           Q <- ZERO\n         MVC   TEMP,6(R1)          K <- K(J)\nCOMPARE  CLC   TEMP,6(R2)\n         BNH   INSERT              LOW OR EQUAL\n         LR    R3,R2               Q <- P\n         L     R2,0(R3)            P <- L(Q)\n         CL    R2,=A(L0)           P > ZERO?\n         BH    COMPARE\nINSERT   ST    R1,0(R3)            L(Q) <- J\n         ST    R2,0(R1)            L(J) <- P\nNEXTJ    S     R1,=F'16'           J <- J-1\n         CL    R1,=A(L0)           J GE 1 ?\n         BH    LOOPJ\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         L     R3,L0\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,6(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    L     R3,0(R3)            NEXT SORTED REC\n         CL    R3,=A(L0)           END OF LIST?\n         BNE   PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00024": {"ttr": 6409, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01,\\x01,\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 300, "newlines": 300, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL LISTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00024'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'OPTIMIZED LIST INSERTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        OPTIMIZED LIST INSERTION SORT SEE P104 EX 33                 *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 96-97.                                    *\n*                                                                     *\n*        RECORDS R(1), ... ,R(N) WITH LINK FIELDS L(1), ... ,L(N).    *\n*        ANOTHER LINK FIELD L(0) IN ARTIFICIAL RECORD R(0) AT         *\n*        BEGINNING OF FILE.  STARTING WITH RECORDS AT THE END         *\n*        OF THE FILE EACH RECORD IS INSERTED ON THE LIST IN ITS       *\n*        PROPER POSITION.  AT THE END THEY ARE LINKED TOGETHER IN     *\n*        ASCENDING ORDER.                                             *\n*                                                                     *\n*        PARTICULARLY ADVANTAGES FOR VARIABLE LENGTH RECORDS OR       *\n*        RECORDS THAT ARE PART OF OTHER DATA STRUCTURES.              *\n*                                                                     *\n*        STABLE, BEST FOR SMALLL N ONLY.                              *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nLISTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DS    0F\nL0       DC    F'0',X'00',XL3'FFFFFF'\n*\nUNSORTED EQU   *\n         DC    F'0',X'00',CL3'503'\n         DC    F'0',X'00',CL3'087'\n         DC    F'0',X'00',CL3'512'\n         DC    F'0',X'00',CL3'061'\n         DC    F'0',X'00',CL3'908'\n         DC    F'0',X'00',CL3'170'\n         DC    F'0',X'00',CL3'897'\n         DC    F'0',X'00',CL3'275'\n         DC    F'0',X'00',CL3'653'\n         DC    F'0',X'00',CL3'426'\n         DC    F'0',X'00',CL3'154'\n         DC    F'0',X'00',CL3'509'\n         DC    F'0',X'00',CL3'612'\n         DC    F'0',X'00',CL3'677'\n         DC    F'0',X'00',CL3'765'\n         DC    F'0',X'00',CL3'703'\nLASTUN   EQU   *-8\n*\nLISTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'OPTIMIZED LIST INSERTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n* L1.  L(0) <- N                                                      *\n*      L(N) <- ZERO                                                   *\n*      DO J=N-1,N-2, ... ,1                                           *\n* L2.     P <- L(0)                                                   *\n*         Q <- ZERO                                                   *\n*         K <- K(J)                                                   *\n* L3.     IF K LE K(P)                                                *\n*            GOTO L5.                                                 *\n* L4.     Q <- P                                                      *\n*         P <- L(Q)                                                   *\n*         IF P > ZERO                                                 *\n*            GOTO L3.                                                 *\n* L5.     L(Q) <- J                                                   *\n*         L(J) <- P                                                   *\n*      ENDDO                                                          *\n*---------------------------------------------------------------------*\n         L     R1,=A(LASTUN)\n         ST    R1,L0               L0 <- N\n         MVC   0(4,R1),=A(L0)      L(N) <- ZERO\n         B     NEXTJ\nOUTLOOP  L     R3,0(R2)            P <- LINK(Q)\n         CLC   TEMP,5(R3)          K > K(P) ?\n         BH    INLOOP              YES\n         ST    R1,0(R2)            LINK(Q) <- J\n         ST    R3,0(R1)            LINK(J) <- P\n         B     NEXTJ\nINLOOP   L     R2,0(R3)            P <- LINK(Q)\n         CLC   TEMP,5(R2)          K > K(P) ?\n         BH    OUTLOOP             YES\n         ST    R1,0(R3)            LINK(Q) <- J\n         ST    R2,0(R1)            LINK(J) <- P\nNEXTJ    S     R1,=F'8'            J <- J-1\n         L     R3,=A(L0)           Q <- ZERO\n         MVC   TEMP,5(R1)          K <- K(J)\n         CL    R1,=A(L0)           J GE 1 ?\n         BH    INLOOP\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         L     R3,L0\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,5(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    L     R3,0(R3)            NEXT SORTED REC\n         CL    R3,=A(L0)           END OF LIST?\n         BNE   PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00025": {"ttr": 6661, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\x04\\x05\\x04\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1284, "newlines": 1284, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL LISTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00025'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'OPTIMIZED LIST INSERTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        OPTIMIZED LIST INSERTION SORT SEE P104 EX 33                 *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 96-97.                                    *\n*                                                                     *\n*        RECORDS R(1), ... ,R(N) WITH LINK FIELDS L(1), ... ,L(N).    *\n*        ANOTHER LINK FIELD L(0) IN ARTIFICIAL RECORD R(0) AT         *\n*        BEGINNING OF FILE.  STARTING WITH RECORDS AT THE END         *\n*        OF THE FILE EACH RECORD IS INSERTED ON THE LIST IN ITS       *\n*        PROPER POSITION.  AT THE END THEY ARE LINKED TOGETHER IN     *\n*        ASCENDING ORDER.                                             *\n*                                                                     *\n*        PARTICULARLY ADVANTAGES FOR VARIABLE LENGTH RECORDS OR       *\n*        RECORDS THAT ARE PART OF OTHER DATA STRUCTURES.              *\n*                                                                     *\n*        STABLE, BEST FOR SMALLL N ONLY.                              *\n*---------------------------------------------------------------------*\n*        27 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nLISTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DS    0F\nL0       DC    F'0',X'0000',XL10'FFFFFFFFFFFFFFFFFFFF'\n*\nUNSORTED  EQU  *\n          DC   F'0',X'0000',CL10'2113148651'\n          DC   F'0',X'0000',CL10'1170852922'\n          DC   F'0',X'0000',CL10'2144637213'\n          DC   F'0',X'0000',CL10'5195953924'\n          DC   F'0',X'0000',CL10'8807543455'\n          DC   F'0',X'0000',CL10'9477994206'\n          DC   F'0',X'0000',CL10'1563502577'\n          DC   F'0',X'0000',CL10'0930832968'\n          DC   F'0',X'0000',CL10'5765477779'\n          DC   F'0',X'0000',CL10'9159017410'\n          DC   F'0',X'0000',CL10'2979680261'\n          DC   F'0',X'0000',CL10'3010102732'\n          DC   F'0',X'0000',CL10'3416289223'\n          DC   F'0',X'0000',CL10'6291772134'\n          DC   F'0',X'0000',CL10'1300971865'\n          DC   F'0',X'0000',CL10'3325756816'\n          DC   F'0',X'0000',CL10'4499203387'\n          DC   F'0',X'0000',CL10'3090555978'\n          DC   F'0',X'0000',CL10'7385386989'\n          DC   F'0',X'0000',CL10'9984956820'\n          DC   F'0',X'0000',CL10'8828773871'\n          DC   F'0',X'0000',CL10'7724354542'\n          DC   F'0',X'0000',CL10'3248183233'\n          DC   F'0',X'0000',CL10'8561872344'\n          DC   F'0',X'0000',CL10'9967522275'\n          DC   F'0',X'0000',CL10'0906281426'\n          DC   F'0',X'0000',CL10'2584106197'\n          DC   F'0',X'0000',CL10'2488720988'\n          DC   F'0',X'0000',CL10'3741778199'\n          DC   F'0',X'0000',CL10'1510218230'\n          DC   F'0',X'0000',CL10'9580829481'\n          DC   F'0',X'0000',CL10'2682008352'\n          DC   F'0',X'0000',CL10'0216719243'\n          DC   F'0',X'0000',CL10'6750654554'\n          DC   F'0',X'0000',CL10'5879594685'\n          DC   F'0',X'0000',CL10'8979968036'\n          DC   F'0',X'0000',CL10'0826611007'\n          DC   F'0',X'0000',CL10'2141727998'\n          DC   F'0',X'0000',CL10'6819051409'\n          DC   F'0',X'0000',CL10'0847201640'\n          DC   F'0',X'0000',CL10'2836247091'\n          DC   F'0',X'0000',CL10'4531464162'\n          DC   F'0',X'0000',CL10'5778297253'\n          DC   F'0',X'0000',CL10'4082518764'\n          DC   F'0',X'0000',CL10'6189589095'\n          DC   F'0',X'0000',CL10'9987216646'\n          DC   F'0',X'0000',CL10'1515117817'\n          DC   F'0',X'0000',CL10'5945977008'\n          DC   F'0',X'0000',CL10'5081606619'\n          DC   F'0',X'0000',CL10'9188307050'\n          DC   F'0',X'0000',CL10'9875426701'\n          DC   F'0',X'0000',CL10'5201121972'\n          DC   F'0',X'0000',CL10'0269317263'\n          DC   F'0',X'0000',CL10'8261864974'\n          DC   F'0',X'0000',CL10'0129905505'\n          DC   F'0',X'0000',CL10'8048427256'\n          DC   F'0',X'0000',CL10'0218026627'\n          DC   F'0',X'0000',CL10'4677868018'\n          DC   F'0',X'0000',CL10'9473843829'\n          DC   F'0',X'0000',CL10'7805934460'\n          DC   F'0',X'0000',CL10'1658768311'\n          DC   F'0',X'0000',CL10'7899381782'\n          DC   F'0',X'0000',CL10'8906179273'\n          DC   F'0',X'0000',CL10'7473093184'\n          DC   F'0',X'0000',CL10'5012943915'\n          DC   F'0',X'0000',CL10'4963999866'\n          DC   F'0',X'0000',CL10'1783737437'\n          DC   F'0',X'0000',CL10'1993801028'\n          DC   F'0',X'0000',CL10'9420163039'\n          DC   F'0',X'0000',CL10'4052483870'\n          DC   F'0',X'0000',CL10'4826671921'\n          DC   F'0',X'0000',CL10'3114643592'\n          DC   F'0',X'0000',CL10'7785283283'\n          DC   F'0',X'0000',CL10'6380603394'\n          DC   F'0',X'0000',CL10'2231104325'\n          DC   F'0',X'0000',CL10'6214334476'\n          DC   F'0',X'0000',CL10'6340650247'\n          DC   F'0',X'0000',CL10'0430176038'\n          DC   F'0',X'0000',CL10'8824964249'\n          DC   F'0',X'0000',CL10'7360355280'\n          DC   F'0',X'0000',CL10'7699537531'\n          DC   F'0',X'0000',CL10'4615307402'\n          DC   F'0',X'0000',CL10'9883029293'\n          DC   F'0',X'0000',CL10'2128795604'\n          DC   F'0',X'0000',CL10'3256786735'\n          DC   F'0',X'0000',CL10'6959831086'\n          DC   F'0',X'0000',CL10'5297165057'\n          DC   F'0',X'0000',CL10'7403393048'\n          DC   F'0',X'0000',CL10'2072647459'\n          DC   F'0',X'0000',CL10'5241948690'\n          DC   F'0',X'0000',CL10'6277765141'\n          DC   F'0',X'0000',CL10'5449773212'\n          DC   F'0',X'0000',CL10'1055817303'\n          DC   F'0',X'0000',CL10'0342069814'\n          DC   F'0',X'0000',CL10'5642391145'\n          DC   F'0',X'0000',CL10'8040889696'\n          DC   F'0',X'0000',CL10'7341681867'\n          DC   F'0',X'0000',CL10'1209852058'\n          DC   F'0',X'0000',CL10'0027612669'\n          DC   F'0',X'0000',CL10'9289664100'\n          DC   F'0',X'0000',CL10'0241754751'\n          DC   F'0',X'0000',CL10'3946441022'\n          DC   F'0',X'0000',CL10'6040047313'\n          DC   F'0',X'0000',CL10'1124826024'\n          DC   F'0',X'0000',CL10'9020317555'\n          DC   F'0',X'0000',CL10'1977910306'\n          DC   F'0',X'0000',CL10'4442600677'\n          DC   F'0',X'0000',CL10'7025953068'\n          DC   F'0',X'0000',CL10'6034259879'\n          DC   F'0',X'0000',CL10'1175901510'\n          DC   F'0',X'0000',CL10'8951906361'\n          DC   F'0',X'0000',CL10'9713710832'\n          DC   F'0',X'0000',CL10'4452119323'\n          DC   F'0',X'0000',CL10'5061464234'\n          DC   F'0',X'0000',CL10'1102965965'\n          DC   F'0',X'0000',CL10'8971292916'\n          DC   F'0',X'0000',CL10'7848321487'\n          DC   F'0',X'0000',CL10'2908096078'\n          DC   F'0',X'0000',CL10'1916989089'\n          DC   F'0',X'0000',CL10'8653060920'\n          DC   F'0',X'0000',CL10'7448619971'\n          DC   F'0',X'0000',CL10'9639982642'\n          DC   F'0',X'0000',CL10'6788433333'\n          DC   F'0',X'0000',CL10'9216384444'\n          DC   F'0',X'0000',CL10'3682736375'\n          DC   F'0',X'0000',CL10'2901437526'\n          DC   F'0',X'0000',CL10'4087244297'\n          DC   F'0',X'0000',CL10'5792681088'\n          DC   F'0',X'0000',CL10'3980200299'\n          DC   F'0',X'0000',CL10'1553542330'\n          DC   F'0',X'0000',CL10'2452295581'\n          DC   F'0',X'0000',CL10'3893656452'\n          DC   F'0',X'0000',CL10'0425389343'\n          DC   F'0',X'0000',CL10'3133986654'\n          DC   F'0',X'0000',CL10'8632028785'\n          DC   F'0',X'0000',CL10'7328744136'\n          DC   F'0',X'0000',CL10'0967769107'\n          DC   F'0',X'0000',CL10'7496108098'\n          DC   F'0',X'0000',CL10'9008293509'\n          DC   F'0',X'0000',CL10'7789745740'\n          DC   F'0',X'0000',CL10'8363333191'\n          DC   F'0',X'0000',CL10'1923132262'\n          DC   F'0',X'0000',CL10'5619387353'\n          DC   F'0',X'0000',CL10'4838670864'\n          DC   F'0',X'0000',CL10'3903243195'\n          DC   F'0',X'0000',CL10'1493612746'\n          DC   F'0',X'0000',CL10'3578295917'\n          DC   F'0',X'0000',CL10'0714777108'\n          DC   F'0',X'0000',CL10'0265668719'\n          DC   F'0',X'0000',CL10'9354071150'\n          DC   F'0',X'0000',CL10'3262132801'\n          DC   F'0',X'0000',CL10'8456810072'\n          DC   F'0',X'0000',CL10'1506827363'\n          DC   F'0',X'0000',CL10'6834837074'\n          DC   F'0',X'0000',CL10'9528779605'\n          DC   F'0',X'0000',CL10'6316443356'\n          DC   F'0',X'0000',CL10'0287224727'\n          DC   F'0',X'0000',CL10'5025088118'\n          DC   F'0',X'0000',CL10'3496725929'\n          DC   F'0',X'0000',CL10'8318918560'\n          DC   F'0',X'0000',CL10'4909094411'\n          DC   F'0',X'0000',CL10'9503089882'\n          DC   F'0',X'0000',CL10'2104109373'\n          DC   F'0',X'0000',CL10'2106885284'\n          DC   F'0',X'0000',CL10'3621038015'\n          DC   F'0',X'0000',CL10'0397635966'\n          DC   F'0',X'0000',CL10'8742955537'\n          DC   F'0',X'0000',CL10'2883441128'\n          DC   F'0',X'0000',CL10'2925865139'\n          DC   F'0',X'0000',CL10'2836687970'\n          DC   F'0',X'0000',CL10'6744618021'\n          DC   F'0',X'0000',CL10'8350371692'\n          DC   F'0',X'0000',CL10'2307633383'\n          DC   F'0',X'0000',CL10'0119215494'\n          DC   F'0',X'0000',CL10'8372418425'\n          DC   F'0',X'0000',CL10'6017590576'\n          DC   F'0',X'0000',CL10'1873888347'\n          DC   F'0',X'0000',CL10'5626236138'\n          DC   F'0',X'0000',CL10'7257486349'\n          DC   F'0',X'0000',CL10'3139779380'\n          DC   F'0',X'0000',CL10'3889103631'\n          DC   F'0',X'0000',CL10'1567055502'\n          DC   F'0',X'0000',CL10'3893799393'\n          DC   F'0',X'0000',CL10'2816227704'\n          DC   F'0',X'0000',CL10'6055320835'\n          DC   F'0',X'0000',CL10'5136707186'\n          DC   F'0',X'0000',CL10'3888423157'\n          DC   F'0',X'0000',CL10'9469873148'\n          DC   F'0',X'0000',CL10'5675989559'\n          DC   F'0',X'0000',CL10'7540592790'\n          DC   F'0',X'0000',CL10'9142951241'\n          DC   F'0',X'0000',CL10'5001541312'\n          DC   F'0',X'0000',CL10'1519007403'\n          DC   F'0',X'0000',CL10'0622321914'\n          DC   F'0',X'0000',CL10'5022145245'\n          DC   F'0',X'0000',CL10'5395385796'\n          DC   F'0',X'0000',CL10'6274959967'\n          DC   F'0',X'0000',CL10'1510752158'\n          DC   F'0',X'0000',CL10'3845774769'\n          DC   F'0',X'0000',CL10'8431528200'\n          DC   F'0',X'0000',CL10'8986560851'\n          DC   F'0',X'0000',CL10'9782229122'\n          DC   F'0',X'0000',CL10'8719657413'\n          DC   F'0',X'0000',CL10'8441898124'\n          DC   F'0',X'0000',CL10'5705291655'\n          DC   F'0',X'0000',CL10'6114026406'\n          DC   F'0',X'0000',CL10'3801898777'\n          DC   F'0',X'0000',CL10'5725273168'\n          DC   F'0',X'0000',CL10'9911241979'\n          DC   F'0',X'0000',CL10'8284985610'\n          DC   F'0',X'0000',CL10'9580332461'\n          DC   F'0',X'0000',CL10'8317518932'\n          DC   F'0',X'0000',CL10'3912149423'\n          DC   F'0',X'0000',CL10'1659356334'\n          DC   F'0',X'0000',CL10'6617160065'\n          DC   F'0',X'0000',CL10'4293029016'\n          DC   F'0',X'0000',CL10'0517639587'\n          DC   F'0',X'0000',CL10'8969836178'\n          DC   F'0',X'0000',CL10'0496791189'\n          DC   F'0',X'0000',CL10'5653365020'\n          DC   F'0',X'0000',CL10'2764666071'\n          DC   F'0',X'0000',CL10'0295810742'\n          DC   F'0',X'0000',CL10'6392883433'\n          DC   F'0',X'0000',CL10'2139096544'\n          DC   F'0',X'0000',CL10'0350150475'\n          DC   F'0',X'0000',CL10'0612793626'\n          DC   F'0',X'0000',CL10'5750582397'\n          DC   F'0',X'0000',CL10'6980841188'\n          DC   F'0',X'0000',CL10'6706822399'\n          DC   F'0',X'0000',CL10'1169066430'\n          DC   F'0',X'0000',CL10'2059961681'\n          DC   F'0',X'0000',CL10'8685504552'\n          DC   F'0',X'0000',CL10'2338259443'\n          DC   F'0',X'0000',CL10'4225518754'\n          DC   F'0',X'0000',CL10'9576662885'\n          DC   F'0',X'0000',CL10'5433720236'\n          DC   F'0',X'0000',CL10'0109127207'\n          DC   F'0',X'0000',CL10'0374688198'\n          DC   F'0',X'0000',CL10'0125735609'\n          DC   F'0',X'0000',CL10'3544489840'\n          DC   F'0',X'0000',CL10'8666619291'\n          DC   F'0',X'0000',CL10'5735000362'\n          DC   F'0',X'0000',CL10'0804677453'\n          DC   F'0',X'0000',CL10'0743022964'\n          DC   F'0',X'0000',CL10'3049097295'\n          DC   F'0',X'0000',CL10'4796208846'\n          DC   F'0',X'0000',CL10'1481674017'\n          DC   F'0',X'0000',CL10'0647777208'\n          DC   F'0',X'0000',CL10'8817930819'\n          DC   F'0',X'0000',CL10'5572035250'\n          DC   F'0',X'0000',CL10'7465038901'\n          DC   F'0',X'0000',CL10'8972698172'\n          DC   F'0',X'0000',CL10'9728537463'\n          DC   F'0',X'0000',CL10'8996009174'\n          DC   F'0',X'0000',CL10'1599853705'\n          DC   F'0',X'0000',CL10'6420659456'\n          DC   F'0',X'0000',CL10'1036622827'\n          DC   F'0',X'0000',CL10'6176508218'\n          DC   F'0',X'0000',CL10'3327808029'\n          DC   F'0',X'0000',CL10'0124102660'\n          DC   F'0',X'0000',CL10'3015620511'\n          DC   F'0',X'0000',CL10'7206997982'\n          DC   F'0',X'0000',CL10'1926239473'\n          DC   F'0',X'0000',CL10'6768877384'\n          DC   F'0',X'0000',CL10'4141332115'\n          DC   F'0',X'0000',CL10'5707472066'\n          DC   F'0',X'0000',CL10'9222373637'\n          DC   F'0',X'0000',CL10'8217281228'\n          DC   F'0',X'0000',CL10'2679767239'\n          DC   F'0',X'0000',CL10'6153092070'\n          DC   F'0',X'0000',CL10'5558764121'\n          DC   F'0',X'0000',CL10'6526299792'\n          DC   F'0',X'0000',CL10'1094183483'\n          DC   F'0',X'0000',CL10'8326027594'\n          DC   F'0',X'0000',CL10'3665932525'\n          DC   F'0',X'0000',CL10'1737046676'\n          DC   F'0',X'0000',CL10'1767326447'\n          DC   F'0',X'0000',CL10'6906496238'\n          DC   F'0',X'0000',CL10'0378208449'\n          DC   F'0',X'0000',CL10'4691403480'\n          DC   F'0',X'0000',CL10'7014869731'\n          DC   F'0',X'0000',CL10'6299003602'\n          DC   F'0',X'0000',CL10'7808769493'\n          DC   F'0',X'0000',CL10'0411859804'\n          DC   F'0',X'0000',CL10'3246054935'\n          DC   F'0',X'0000',CL10'3269783286'\n          DC   F'0',X'0000',CL10'5679881257'\n          DC   F'0',X'0000',CL10'7260553248'\n          DC   F'0',X'0000',CL10'0407531659'\n          DC   F'0',X'0000',CL10'4851436890'\n          DC   F'0',X'0000',CL10'6984337341'\n          DC   F'0',X'0000',CL10'5173509412'\n          DC   F'0',X'0000',CL10'5526397503'\n          DC   F'0',X'0000',CL10'8250774014'\n          DC   F'0',X'0000',CL10'2034099345'\n          DC   F'0',X'0000',CL10'4746081896'\n          DC   F'0',X'0000',CL10'5248438067'\n          DC   F'0',X'0000',CL10'5175852258'\n          DC   F'0',X'0000',CL10'3232136869'\n          DC   F'0',X'0000',CL10'9825592300'\n          DC   F'0',X'0000',CL10'8747566951'\n          DC   F'0',X'0000',CL10'7078217222'\n          DC   F'0',X'0000',CL10'6583467513'\n          DC   F'0',X'0000',CL10'1547170224'\n          DC   F'0',X'0000',CL10'1262465755'\n          DC   F'0',X'0000',CL10'2286342506'\n          DC   F'0',X'0000',CL10'8041396877'\n          DC   F'0',X'0000',CL10'3428793268'\n          DC   F'0',X'0000',CL10'1796424079'\n          DC   F'0',X'0000',CL10'2886269710'\n          DC   F'0',X'0000',CL10'5264958561'\n          DC   F'0',X'0000',CL10'7221527032'\n          DC   F'0',X'0000',CL10'8196379523'\n          DC   F'0',X'0000',CL10'0485448434'\n          DC   F'0',X'0000',CL10'0243554165'\n          DC   F'0',X'0000',CL10'9690965116'\n          DC   F'0',X'0000',CL10'0907157687'\n          DC   F'0',X'0000',CL10'7675776278'\n          DC   F'0',X'0000',CL10'7524793289'\n          DC   F'0',X'0000',CL10'3385869120'\n          DC   F'0',X'0000',CL10'5176912171'\n          DC   F'0',X'0000',CL10'8091838842'\n          DC   F'0',X'0000',CL10'8461533533'\n          DC   F'0',X'0000',CL10'1730008644'\n          DC   F'0',X'0000',CL10'2369764575'\n          DC   F'0',X'0000',CL10'4440349726'\n          DC   F'0',X'0000',CL10'5974120497'\n          DC   F'0',X'0000',CL10'2453201288'\n          DC   F'0',X'0000',CL10'6321644499'\n          DC   F'0',X'0000',CL10'2756790530'\n          DC   F'0',X'0000',CL10'8803827781'\n          DC   F'0',X'0000',CL10'5457552652'\n          DC   F'0',X'0000',CL10'2355329543'\n          DC   F'0',X'0000',CL10'4425250854'\n          DC   F'0',X'0000',CL10'1113496985'\n          DC   F'0',X'0000',CL10'3694896336'\n          DC   F'0',X'0000',CL10'6650685307'\n          DC   F'0',X'0000',CL10'7177468298'\n          DC   F'0',X'0000',CL10'4571377709'\n          DC   F'0',X'0000',CL10'0511433940'\n          DC   F'0',X'0000',CL10'4146105391'\n          DC   F'0',X'0000',CL10'4367068462'\n          DC   F'0',X'0000',CL10'7734167553'\n          DC   F'0',X'0000',CL10'6195575064'\n          DC   F'0',X'0000',CL10'6027151395'\n          DC   F'0',X'0000',CL10'0295004946'\n          DC   F'0',X'0000',CL10'3625252117'\n          DC   F'0',X'0000',CL10'2144977308'\n          DC   F'0',X'0000',CL10'5138392919'\n          DC   F'0',X'0000',CL10'0242199350'\n          DC   F'0',X'0000',CL10'2884145001'\n          DC   F'0',X'0000',CL10'5148786272'\n          DC   F'0',X'0000',CL10'1334447563'\n          DC   F'0',X'0000',CL10'9145381274'\n          DC   F'0',X'0000',CL10'8743127805'\n          DC   F'0',X'0000',CL10'8761075556'\n          DC   F'0',X'0000',CL10'0866220927'\n          DC   F'0',X'0000',CL10'4532128318'\n          DC   F'0',X'0000',CL10'3367090129'\n          DC   F'0',X'0000',CL10'5621486760'\n          DC   F'0',X'0000',CL10'6378346611'\n          DC   F'0',X'0000',CL10'9411106082'\n          DC   F'0',X'0000',CL10'4772569573'\n          DC   F'0',X'0000',CL10'5859069484'\n          DC   F'0',X'0000',CL10'8973826215'\n          DC   F'0',X'0000',CL10'1293508166'\n          DC   F'0',X'0000',CL10'1621991737'\n          DC   F'0',X'0000',CL10'4395321328'\n          DC   F'0',X'0000',CL10'3081869339'\n          DC   F'0',X'0000',CL10'6401696170'\n          DC   F'0',X'0000',CL10'1669110221'\n          DC   F'0',X'0000',CL10'6042427892'\n          DC   F'0',X'0000',CL10'0544933583'\n          DC   F'0',X'0000',CL10'5401039694'\n          DC   F'0',X'0000',CL10'0511646625'\n          DC   F'0',X'0000',CL10'3772702776'\n          DC   F'0',X'0000',CL10'4420964547'\n          DC   F'0',X'0000',CL10'0670956338'\n          DC   F'0',X'0000',CL10'2587130549'\n          DC   F'0',X'0000',CL10'4415227580'\n          DC   F'0',X'0000',CL10'7476835831'\n          DC   F'0',X'0000',CL10'7211151702'\n          DC   F'0',X'0000',CL10'8027939593'\n          DC   F'0',X'0000',CL10'9315691904'\n          DC   F'0',X'0000',CL10'7228989035'\n          DC   F'0',X'0000',CL10'1759059386'\n          DC   F'0',X'0000',CL10'9071539357'\n          DC   F'0',X'0000',CL10'7175433348'\n          DC   F'0',X'0000',CL10'0667273759'\n          DC   F'0',X'0000',CL10'9574480990'\n          DC   F'0',X'0000',CL10'0201923441'\n          DC   F'0',X'0000',CL10'4365677512'\n          DC   F'0',X'0000',CL10'9477987603'\n          DC   F'0',X'0000',CL10'7627426114'\n          DC   F'0',X'0000',CL10'9078253445'\n          DC   F'0',X'0000',CL10'6492977996'\n          DC   F'0',X'0000',CL10'2662116167'\n          DC   F'0',X'0000',CL10'8605152358'\n          DC   F'0',X'0000',CL10'2586698969'\n          DC   F'0',X'0000',CL10'5871856400'\n          DC   F'0',X'0000',CL10'9924773051'\n          DC   F'0',X'0000',CL10'4234405322'\n          DC   F'0',X'0000',CL10'6031477613'\n          DC   F'0',X'0000',CL10'4840642324'\n          DC   F'0',X'0000',CL10'8091839855'\n          DC   F'0',X'0000',CL10'0894858606'\n          DC   F'0',X'0000',CL10'5561094977'\n          DC   F'0',X'0000',CL10'6536513368'\n          DC   F'0',X'0000',CL10'6089806179'\n          DC   F'0',X'0000',CL10'7379753810'\n          DC   F'0',X'0000',CL10'6405784661'\n          DC   F'0',X'0000',CL10'4825735132'\n          DC   F'0',X'0000',CL10'3704809623'\n          DC   F'0',X'0000',CL10'5939740534'\n          DC   F'0',X'0000',CL10'4382148265'\n          DC   F'0',X'0000',CL10'5565101216'\n          DC   F'0',X'0000',CL10'7416875787'\n          DC   F'0',X'0000',CL10'5425916378'\n          DC   F'0',X'0000',CL10'7400995389'\n          DC   F'0',X'0000',CL10'4250573220'\n          DC   F'0',X'0000',CL10'5085358271'\n          DC   F'0',X'0000',CL10'1428066942'\n          DC   F'0',X'0000',CL10'9394383633'\n          DC   F'0',X'0000',CL10'2389120744'\n          DC   F'0',X'0000',CL10'2141578675'\n          DC   F'0',X'0000',CL10'4784105826'\n          DC   F'0',X'0000',CL10'3157858597'\n          DC   F'0',X'0000',CL10'8609761388'\n          DC   F'0',X'0000',CL10'7224666599'\n          DC   F'0',X'0000',CL10'8716714630'\n          DC   F'0',X'0000',CL10'3083893881'\n          DC   F'0',X'0000',CL10'2609800752'\n          DC   F'0',X'0000',CL10'6876599643'\n          DC   F'0',X'0000',CL10'8133182954'\n          DC   F'0',X'0000',CL10'5642531085'\n          DC   F'0',X'0000',CL10'2512272436'\n          DC   F'0',X'0000',CL10'8992443407'\n          DC   F'0',X'0000',CL10'4304448398'\n          DC   F'0',X'0000',CL10'6745219809'\n          DC   F'0',X'0000',CL10'1090578040'\n          DC   F'0',X'0000',CL10'5201791491'\n          DC   F'0',X'0000',CL10'6219336562'\n          DC   F'0',X'0000',CL10'2807857653'\n          DC   F'0',X'0000',CL10'5596327164'\n          DC   F'0',X'0000',CL10'5237405495'\n          DC   F'0',X'0000',CL10'8390001046'\n          DC   F'0',X'0000',CL10'8409030217'\n          DC   F'0',X'0000',CL10'1606377408'\n          DC   F'0',X'0000',CL10'3627055019'\n          DC   F'0',X'0000',CL10'5764563450'\n          DC   F'0',X'0000',CL10'9919451101'\n          DC   F'0',X'0000',CL10'5385074372'\n          DC   F'0',X'0000',CL10'2724557663'\n          DC   F'0',X'0000',CL10'1682953374'\n          DC   F'0',X'0000',CL10'3358601905'\n          DC   F'0',X'0000',CL10'3737691656'\n          DC   F'0',X'0000',CL10'8176019027'\n          DC   F'0',X'0000',CL10'6491948418'\n          DC   F'0',X'0000',CL10'8014572229'\n          DC   F'0',X'0000',CL10'7211070860'\n          DC   F'0',X'0000',CL10'5397272711'\n          DC   F'0',X'0000',CL10'4515414182'\n          DC   F'0',X'0000',CL10'7043099673'\n          DC   F'0',X'0000',CL10'3777461584'\n          DC   F'0',X'0000',CL10'0518520315'\n          DC   F'0',X'0000',CL10'7555744266'\n          DC   F'0',X'0000',CL10'4341809837'\n          DC   F'0',X'0000',CL10'7817561428'\n          DC   F'0',X'0000',CL10'8532171439'\n          DC   F'0',X'0000',CL10'5982500270'\n          DC   F'0',X'0000',CL10'5475656321'\n          DC   F'0',X'0000',CL10'5298755992'\n          DC   F'0',X'0000',CL10'7059883683'\n          DC   F'0',X'0000',CL10'5744251794'\n          DC   F'0',X'0000',CL10'1309560725'\n          DC   F'0',X'0000',CL10'2524558876'\n          DC   F'0',X'0000',CL10'8234802647'\n          DC   F'0',X'0000',CL10'3319616438'\n          DC   F'0',X'0000',CL10'8284252649'\n          DC   F'0',X'0000',CL10'4711251680'\n          DC   F'0',X'0000',CL10'5675001931'\n          DC   F'0',X'0000',CL10'2703499802'\n          DC   F'0',X'0000',CL10'0951309693'\n          DC   F'0',X'0000',CL10'3927724004'\n          DC   F'0',X'0000',CL10'0404123135'\n          DC   F'0',X'0000',CL10'1004535486'\n          DC   F'0',X'0000',CL10'2463397457'\n          DC   F'0',X'0000',CL10'5614513448'\n          DC   F'0',X'0000',CL10'0855215859'\n          DC   F'0',X'0000',CL10'4109725090'\n          DC   F'0',X'0000',CL10'9195709541'\n          DC   F'0',X'0000',CL10'0978045612'\n          DC   F'0',X'0000',CL10'9773777703'\n          DC   F'0',X'0000',CL10'3152278214'\n          DC   F'0',X'0000',CL10'8554607545'\n          DC   F'0',X'0000',CL10'1036074096'\n          DC   F'0',X'0000',CL10'6915994267'\n          DC   F'0',X'0000',CL10'8198652458'\n          DC   F'0',X'0000',CL10'6309461069'\n          DC   F'0',X'0000',CL10'8970320500'\n          DC   F'0',X'0000',CL10'2918179151'\n          DC   F'0',X'0000',CL10'9650793422'\n          DC   F'0',X'0000',CL10'3463687713'\n          DC   F'0',X'0000',CL10'2722314424'\n          DC   F'0',X'0000',CL10'8593413955'\n          DC   F'0',X'0000',CL10'2339574706'\n          DC   F'0',X'0000',CL10'4760993077'\n          DC   F'0',X'0000',CL10'1448433468'\n          DC   F'0',X'0000',CL10'7191388279'\n          DC   F'0',X'0000',CL10'4165437910'\n          DC   F'0',X'0000',CL10'3402810761'\n          DC   F'0',X'0000',CL10'9530143232'\n          DC   F'0',X'0000',CL10'6837439723'\n          DC   F'0',X'0000',CL10'2422232634'\n          DC   F'0',X'0000',CL10'1432942365'\n          DC   F'0',X'0000',CL10'2315437316'\n          DC   F'0',X'0000',CL10'8446793887'\n          DC   F'0',X'0000',CL10'8620256478'\n          DC   F'0',X'0000',CL10'4525397489'\n          DC   F'0',X'0000',CL10'0647477320'\n          DC   F'0',X'0000',CL10'2890004371'\n          DC   F'0',X'0000',CL10'8704495042'\n          DC   F'0',X'0000',CL10'5591433733'\n          DC   F'0',X'0000',CL10'8516432844'\n          DC   F'0',X'0000',CL10'2065592775'\n          DC   F'0',X'0000',CL10'2044061926'\n          DC   F'0',X'0000',CL10'5701796697'\n          DC   F'0',X'0000',CL10'1850521488'\n          DC   F'0',X'0000',CL10'3815888699'\n          DC   F'0',X'0000',CL10'1448838730'\n          DC   F'0',X'0000',CL10'5300159981'\n          DC   F'0',X'0000',CL10'8542248852'\n          DC   F'0',X'0000',CL10'2302069743'\n          DC   F'0',X'0000',CL10'9749315054'\n          DC   F'0',X'0000',CL10'5563765185'\n          DC   F'0',X'0000',CL10'2285848536'\n          DC   F'0',X'0000',CL10'5534401507'\n          DC   F'0',X'0000',CL10'8155628498'\n          DC   F'0',X'0000',CL10'1047261909'\n          DC   F'0',X'0000',CL10'7681922140'\n          DC   F'0',X'0000',CL10'2233677591'\n          DC   F'0',X'0000',CL10'9691804662'\n          DC   F'0',X'0000',CL10'2425747753'\n          DC   F'0',X'0000',CL10'3345279264'\n          DC   F'0',X'0000',CL10'3079859595'\n          DC   F'0',X'0000',CL10'9481197146'\n          DC   F'0',X'0000',CL10'4233008317'\n          DC   F'0',X'0000',CL10'5431977508'\n          DC   F'0',X'0000',CL10'8683917119'\n          DC   F'0',X'0000',CL10'4539127550'\n          DC   F'0',X'0000',CL10'8970957201'\n          DC   F'0',X'0000',CL10'8081562472'\n          DC   F'0',X'0000',CL10'0298867763'\n          DC   F'0',X'0000',CL10'1008725474'\n          DC   F'0',X'0000',CL10'7846276005'\n          DC   F'0',X'0000',CL10'1750507756'\n          DC   F'0',X'0000',CL10'1366017127'\n          DC   F'0',X'0000',CL10'8455968518'\n          DC   F'0',X'0000',CL10'1670254329'\n          DC   F'0',X'0000',CL10'7292854960'\n          DC   F'0',X'0000',CL10'0472398811'\n          DC   F'0',X'0000',CL10'0919922282'\n          DC   F'0',X'0000',CL10'5137829773'\n          DC   F'0',X'0000',CL10'4924053684'\n          DC   F'0',X'0000',CL10'1175414415'\n          DC   F'0',X'0000',CL10'4894180366'\n          DC   F'0',X'0000',CL10'5781827937'\n          DC   F'0',X'0000',CL10'4884001528'\n          DC   F'0',X'0000',CL10'3430673539'\n          DC   F'0',X'0000',CL10'7295504370'\n          DC   F'0',X'0000',CL10'7378402421'\n          DC   F'0',X'0000',CL10'2695284092'\n          DC   F'0',X'0000',CL10'7039033783'\n          DC   F'0',X'0000',CL10'3755663894'\n          DC   F'0',X'0000',CL10'8459674825'\n          DC   F'0',X'0000',CL10'8392614976'\n          DC   F'0',X'0000',CL10'1608840747'\n          DC   F'0',X'0000',CL10'1252476538'\n          DC   F'0',X'0000',CL10'1869574749'\n          DC   F'0',X'0000',CL10'7979475780'\n          DC   F'0',X'0000',CL10'2009368031'\n          DC   F'0',X'0000',CL10'1176047902'\n          DC   F'0',X'0000',CL10'2978879793'\n          DC   F'0',X'0000',CL10'8647956104'\n          DC   F'0',X'0000',CL10'5171457235'\n          DC   F'0',X'0000',CL10'1406211586'\n          DC   F'0',X'0000',CL10'4255455557'\n          DC   F'0',X'0000',CL10'8977793548'\n          DC   F'0',X'0000',CL10'5371357959'\n          DC   F'0',X'0000',CL10'0857169190'\n          DC   F'0',X'0000',CL10'4365695641'\n          DC   F'0',X'0000',CL10'3410613712'\n          DC   F'0',X'0000',CL10'2813767803'\n          DC   F'0',X'0000',CL10'9225330314'\n          DC   F'0',X'0000',CL10'2863161645'\n          DC   F'0',X'0000',CL10'8775370196'\n          DC   F'0',X'0000',CL10'6410072367'\n          DC   F'0',X'0000',CL10'0356352558'\n          DC   F'0',X'0000',CL10'8800423169'\n          DC   F'0',X'0000',CL10'1520984600'\n          DC   F'0',X'0000',CL10'8127785251'\n          DC   F'0',X'0000',CL10'1727381522'\n          DC   F'0',X'0000',CL10'5280097813'\n          DC   F'0',X'0000',CL10'9592186524'\n          DC   F'0',X'0000',CL10'5167188055'\n          DC   F'0',X'0000',CL10'7020490806'\n          DC   F'0',X'0000',CL10'4041091177'\n          DC   F'0',X'0000',CL10'4564553568'\n          DC   F'0',X'0000',CL10'9501170379'\n          DC   F'0',X'0000',CL10'5643322010'\n          DC   F'0',X'0000',CL10'6656036861'\n          DC   F'0',X'0000',CL10'9734751332'\n          DC   F'0',X'0000',CL10'3994269823'\n          DC   F'0',X'0000',CL10'4332924734'\n          DC   F'0',X'0000',CL10'3795936465'\n          DC   F'0',X'0000',CL10'0341973416'\n          DC   F'0',X'0000',CL10'2396911987'\n          DC   F'0',X'0000',CL10'3658796578'\n          DC   F'0',X'0000',CL10'3297999589'\n          DC   F'0',X'0000',CL10'4976581420'\n          DC   F'0',X'0000',CL10'8990850471'\n          DC   F'0',X'0000',CL10'8321123142'\n          DC   F'0',X'0000',CL10'3452683833'\n          DC   F'0',X'0000',CL10'4511944944'\n          DC   F'0',X'0000',CL10'4541806875'\n          DC   F'0',X'0000',CL10'6620218026'\n          DC   F'0',X'0000',CL10'2005934797'\n          DC   F'0',X'0000',CL10'8575481588'\n          DC   F'0',X'0000',CL10'0495310799'\n          DC   F'0',X'0000',CL10'3353162830'\n          DC   F'0',X'0000',CL10'5852626081'\n          DC   F'0',X'0000',CL10'1654896952'\n          DC   F'0',X'0000',CL10'5031739843'\n          DC   F'0',X'0000',CL10'3673647154'\n          DC   F'0',X'0000',CL10'3277199285'\n          DC   F'0',X'0000',CL10'3415624636'\n          DC   F'0',X'0000',CL10'4676559607'\n          DC   F'0',X'0000',CL10'5131008598'\n          DC   F'0',X'0000',CL10'1877504009'\n          DC   F'0',X'0000',CL10'2685466240'\n          DC   F'0',X'0000',CL10'5641763691'\n          DC   F'0',X'0000',CL10'3184472762'\n          DC   F'0',X'0000',CL10'2987837853'\n          DC   F'0',X'0000',CL10'3842431364'\n          DC   F'0',X'0000',CL10'1954513695'\n          DC   F'0',X'0000',CL10'3968593246'\n          DC   F'0',X'0000',CL10'9497186417'\n          DC   F'0',X'0000',CL10'0021777608'\n          DC   F'0',X'0000',CL10'4708979219'\n          DC   F'0',X'0000',CL10'8965891650'\n          DC   F'0',X'0000',CL10'0438663301'\n          DC   F'0',X'0000',CL10'1638250572'\n          DC   F'0',X'0000',CL10'0457377863'\n          DC   F'0',X'0000',CL10'1522697574'\n          DC   F'0',X'0000',CL10'4606150105'\n          DC   F'0',X'0000',CL10'3199523856'\n          DC   F'0',X'0000',CL10'8836215227'\n          DC   F'0',X'0000',CL10'6824188618'\n          DC   F'0',X'0000',CL10'8734136429'\n          DC   F'0',X'0000',CL10'8266839060'\n          DC   F'0',X'0000',CL10'2003724911'\n          DC   F'0',X'0000',CL10'7024630382'\n          DC   F'0',X'0000',CL10'5456759873'\n          DC   F'0',X'0000',CL10'3698845784'\n          DC   F'0',X'0000',CL10'3344508515'\n          DC   F'0',X'0000',CL10'3708816466'\n          DC   F'0',X'0000',CL10'4342046037'\n          DC   F'0',X'0000',CL10'1994641628'\n          DC   F'0',X'0000',CL10'2177375639'\n          DC   F'0',X'0000',CL10'2740708470'\n          DC   F'0',X'0000',CL10'7777348521'\n          DC   F'0',X'0000',CL10'6632012192'\n          DC   F'0',X'0000',CL10'6882383883'\n          DC   F'0',X'0000',CL10'3835275994'\n          DC   F'0',X'0000',CL10'4361988925'\n          DC   F'0',X'0000',CL10'1776871076'\n          DC   F'0',X'0000',CL10'2943078847'\n          DC   F'0',X'0000',CL10'0869536638'\n          DC   F'0',X'0000',CL10'7743096849'\n          DC   F'0',X'0000',CL10'6619899880'\n          DC   F'0',X'0000',CL10'6879934131'\n          DC   F'0',X'0000',CL10'1028796002'\n          DC   F'0',X'0000',CL10'0510649893'\n          DC   F'0',X'0000',CL10'7876388204'\n          DC   F'0',X'0000',CL10'3930991335'\n          DC   F'0',X'0000',CL10'3364087686'\n          DC   F'0',X'0000',CL10'2847713657'\n          DC   F'0',X'0000',CL10'3665273648'\n          DC   F'0',X'0000',CL10'8615700059'\n          DC   F'0',X'0000',CL10'2216813290'\n          DC   F'0',X'0000',CL10'6111881741'\n          DC   F'0',X'0000',CL10'0063381812'\n          DC   F'0',X'0000',CL10'4997957903'\n          DC   F'0',X'0000',CL10'0246582414'\n          DC   F'0',X'0000',CL10'4403915745'\n          DC   F'0',X'0000',CL10'0110866296'\n          DC   F'0',X'0000',CL10'9544350467'\n          DC   F'0',X'0000',CL10'1478252658'\n          DC   F'0',X'0000',CL10'4459585269'\n          DC   F'0',X'0000',CL10'5923848700'\n          DC   F'0',X'0000',CL10'5953591351'\n          DC   F'0',X'0000',CL10'8864169622'\n          DC   F'0',X'0000',CL10'7880707913'\n          DC   F'0',X'0000',CL10'9850258624'\n          DC   F'0',X'0000',CL10'0213162155'\n          DC   F'0',X'0000',CL10'5337606906'\n          DC   F'0',X'0000',CL10'1801389277'\n          DC   F'0',X'0000',CL10'2284873668'\n          DC   F'0',X'0000',CL10'7419152479'\n          DC   F'0',X'0000',CL10'4213406110'\n          DC   F'0',X'0000',CL10'6565462961'\n          DC   F'0',X'0000',CL10'3839559432'\n          DC   F'0',X'0000',CL10'1575299923'\n          DC   F'0',X'0000',CL10'6071816834'\n          DC   F'0',X'0000',CL10'3871130565'\n          DC   F'0',X'0000',CL10'0044709516'\n          DC   F'0',X'0000',CL10'7667230087'\n          DC   F'0',X'0000',CL10'6941536678'\n          DC   F'0',X'0000',CL10'8118801689'\n          DC   F'0',X'0000',CL10'9637885520'\n          DC   F'0',X'0000',CL10'3787896571'\n          DC   F'0',X'0000',CL10'8677951242'\n          DC   F'0',X'0000',CL10'9378133933'\n          DC   F'0',X'0000',CL10'4775657044'\n          DC   F'0',X'0000',CL10'1970220975'\n          DC   F'0',X'0000',CL10'8912574126'\n          DC   F'0',X'0000',CL10'0470272897'\n          DC   F'0',X'0000',CL10'5184641688'\n          DC   F'0',X'0000',CL10'1662932899'\n          DC   F'0',X'0000',CL10'6829686930'\n          DC   F'0',X'0000',CL10'5141292181'\n          DC   F'0',X'0000',CL10'0347745052'\n          DC   F'0',X'0000',CL10'1465609943'\n          DC   F'0',X'0000',CL10'4306179254'\n          DC   F'0',X'0000',CL10'1182833385'\n          DC   F'0',X'0000',CL10'6301600736'\n          DC   F'0',X'0000',CL10'4818917707'\n          DC   F'0',X'0000',CL10'1630588698'\n          DC   F'0',X'0000',CL10'3635946109'\n          DC   F'0',X'0000',CL10'8501210340'\n          DC   F'0',X'0000',CL10'5826049791'\n          DC   F'0',X'0000',CL10'5097340862'\n          DC   F'0',X'0000',CL10'0894127953'\n          DC   F'0',X'0000',CL10'1487783464'\n          DC   F'0',X'0000',CL10'4261367795'\n          DC   F'0',X'0000',CL10'2252189346'\n          DC   F'0',X'0000',CL10'2601564517'\n          DC   F'0',X'0000',CL10'1775777708'\n          DC   F'0',X'0000',CL10'6102241319'\n          DC   F'0',X'0000',CL10'1444855750'\n          DC   F'0',X'0000',CL10'4722569401'\n          DC   F'0',X'0000',CL10'4455138672'\n          DC   F'0',X'0000',CL10'9600087963'\n          DC   F'0',X'0000',CL10'7624869674'\n          DC   F'0',X'0000',CL10'6038224205'\n          DC   F'0',X'0000',CL10'8484739956'\n          DC   F'0',X'0000',CL10'8986613327'\n          DC   F'0',X'0000',CL10'7996608718'\n          DC   F'0',X'0000',CL10'3606218529'\n          DC   F'0',X'0000',CL10'2533023160'\n          DC   F'0',X'0000',CL10'0391251011'\n          DC   F'0',X'0000',CL10'1229538482'\n          DC   F'0',X'0000',CL10'4399889973'\n          DC   F'0',X'0000',CL10'4501837884'\n          DC   F'0',X'0000',CL10'9425802615'\n          DC   F'0',X'0000',CL10'4399652566'\n          DC   F'0',X'0000',CL10'8422464137'\n          DC   F'0',X'0000',CL10'5549481728'\n          DC   F'0',X'0000',CL10'9172277739'\n          DC   F'0',X'0000',CL10'4718112570'\n          DC   F'0',X'0000',CL10'7072494621'\n          DC   F'0',X'0000',CL10'5508940292'\n          DC   F'0',X'0000',CL10'2989933983'\n          DC   F'0',X'0000',CL10'0383088094'\n          DC   F'0',X'0000',CL10'1416503025'\n          DC   F'0',X'0000',CL10'3077327176'\n          DC   F'0',X'0000',CL10'0637516947'\n          DC   F'0',X'0000',CL10'8570796738'\n          DC   F'0',X'0000',CL10'0304818949'\n          DC   F'0',X'0000',CL10'3032523980'\n          DC   F'0',X'0000',CL10'0686700231'\n          DC   F'0',X'0000',CL10'0661744102'\n          DC   F'0',X'0000',CL10'9946619993'\n          DC   F'0',X'0000',CL10'6013020304'\n          DC   F'0',X'0000',CL10'9082725435'\n          DC   F'0',X'0000',CL10'7278163786'\n          DC   F'0',X'0000',CL10'6640171757'\n          DC   F'0',X'0000',CL10'6076953748'\n          DC   F'0',X'0000',CL10'4988242159'\n          DC   F'0',X'0000',CL10'0588657390'\n          DC   F'0',X'0000',CL10'4834267841'\n          DC   F'0',X'0000',CL10'9336349912'\n          DC   F'0',X'0000',CL10'2726348003'\n          DC   F'0',X'0000',CL10'0616034514'\n          DC   F'0',X'0000',CL10'5576869845'\n          DC   F'0',X'0000',CL10'5442562396'\n          DC   F'0',X'0000',CL10'4718828567'\n          DC   F'0',X'0000',CL10'7964352758'\n          DC   F'0',X'0000',CL10'7686947369'\n          DC   F'0',X'0000',CL10'4578912800'\n          DC   F'0',X'0000',CL10'6795597451'\n          DC   F'0',X'0000',CL10'9461157722'\n          DC   F'0',X'0000',CL10'7665518013'\n          DC   F'0',X'0000',CL10'7896530724'\n          DC   F'0',X'0000',CL10'6131336255'\n          DC   F'0',X'0000',CL10'7690923006'\n          DC   F'0',X'0000',CL10'6441887377'\n          DC   F'0',X'0000',CL10'1009393768'\n          DC   F'0',X'0000',CL10'5345334579'\n          DC   F'0',X'0000',CL10'2275690210'\n          DC   F'0',X'0000',CL10'3531089061'\n          DC   F'0',X'0000',CL10'0244567532'\n          DC   F'0',X'0000',CL10'5980530023'\n          DC   F'0',X'0000',CL10'2038908934'\n          DC   F'0',X'0000',CL10'4058524665'\n          DC   F'0',X'0000',CL10'1823645616'\n          DC   F'0',X'0000',CL10'2657748187'\n          DC   F'0',X'0000',CL10'4868476778'\n          DC   F'0',X'0000',CL10'3387803789'\n          DC   F'0',X'0000',CL10'7031389620'\n          DC   F'0',X'0000',CL10'7681142671'\n          DC   F'0',X'0000',CL10'8174979342'\n          DC   F'0',X'0000',CL10'9767784033'\n          DC   F'0',X'0000',CL10'3707569144'\n          DC   F'0',X'0000',CL10'6750835075'\n          DC   F'0',X'0000',CL10'9321130226'\n          DC   F'0',X'0000',CL10'9494810997'\n          DC   F'0',X'0000',CL10'8078001788'\n          DC   F'0',X'0000',CL10'1718754999'\n          DC   F'0',X'0000',CL10'4278411030'\n          DC   F'0',X'0000',CL10'3566158281'\n          DC   F'0',X'0000',CL10'3020793152'\n          DC   F'0',X'0000',CL10'8003680043'\n          DC   F'0',X'0000',CL10'6046911354'\n          DC   F'0',X'0000',CL10'1680667485'\n          DC   F'0',X'0000',CL10'1343776836'\n          DC   F'0',X'0000',CL10'4361475807'\n          DC   F'0',X'0000',CL10'4054368798'\n          DC   F'0',X'0000',CL10'0722588209'\n          DC   F'0',X'0000',CL10'7529154440'\n          DC   F'0',X'0000',CL10'3186535891'\n          DC   F'0',X'0000',CL10'3830408962'\n          DC   F'0',X'0000',CL10'2544618053'\n          DC   F'0',X'0000',CL10'0681335564'\n          DC   F'0',X'0000',CL10'2400421895'\n          DC   F'0',X'0000',CL10'4731985446'\n          DC   F'0',X'0000',CL10'1946142617'\n          DC   F'0',X'0000',CL10'7093977808'\n          DC   F'0',X'0000',CL10'7263703419'\n          DC   F'0',X'0000',CL10'4376019850'\n          DC   F'0',X'0000',CL10'2222675501'\n          DC   F'0',X'0000',CL10'4932226772'\n          DC   F'0',X'0000',CL10'4126998063'\n          DC   F'0',X'0000',CL10'3715241774'\n          DC   F'0',X'0000',CL10'4542498305'\n          DC   F'0',X'0000',CL10'8006156056'\n          DC   F'0',X'0000',CL10'0217211427'\n          DC   F'0',X'0000',CL10'8373228818'\n          DC   F'0',X'0000',CL10'0686500629'\n          DC   F'0',X'0000',CL10'2491407260'\n          DC   F'0',X'0000',CL10'6034977111'\n          DC   F'0',X'0000',CL10'1934646582'\n          DC   F'0',X'0000',CL10'8367220073'\n          DC   F'0',X'0000',CL10'1733029984'\n          DC   F'0',X'0000',CL10'1819296715'\n          DC   F'0',X'0000',CL10'7366688666'\n          DC   F'0',X'0000',CL10'6423082237'\n          DC   F'0',X'0000',CL10'1948521828'\n          DC   F'0',X'0000',CL10'8815379839'\n          DC   F'0',X'0000',CL10'5627716670'\n          DC   F'0',X'0000',CL10'5663840721'\n          DC   F'0',X'0000',CL10'7726068392'\n          DC   F'0',X'0000',CL10'1761684083'\n          DC   F'0',X'0000',CL10'7799100194'\n          DC   F'0',X'0000',CL10'2023217125'\n          DC   F'0',X'0000',CL10'2693983276'\n          DC   F'0',X'0000',CL10'3092155047'\n          DC   F'0',X'0000',CL10'0756256838'\n          DC   F'0',X'0000',CL10'3954741049'\n          DC   F'0',X'0000',CL10'9617348080'\n          DC   F'0',X'0000',CL10'3829666331'\n          DC   F'0',X'0000',CL10'8474892202'\n          DC   F'0',X'0000',CL10'7686790093'\n          DC   F'0',X'0000',CL10'7457852404'\n          DC   F'0',X'0000',CL10'3026659535'\n          DC   F'0',X'0000',CL10'3548439886'\n          DC   F'0',X'0000',CL10'4032829857'\n          DC   F'0',X'0000',CL10'2612833848'\n          DC   F'0',X'0000',CL10'8888984259'\n          DC   F'0',X'0000',CL10'8372701490'\n          DC   F'0',X'0000',CL10'0932853941'\n          DC   F'0',X'0000',CL10'9629518012'\n          DC   F'0',X'0000',CL10'2398938103'\n          DC   F'0',X'0000',CL10'4733686614'\n          DC   F'0',X'0000',CL10'8782023945'\n          DC   F'0',X'0000',CL10'5170458496'\n          DC   F'0',X'0000',CL10'0333506667'\n          DC   F'0',X'0000',CL10'6214652858'\n          DC   F'0',X'0000',CL10'2882509469'\n          DC   F'0',X'0000',CL10'9886176900'\n          DC   F'0',X'0000',CL10'1053803551'\n          DC   F'0',X'0000',CL10'1918345822'\n          DC   F'0',X'0000',CL10'1034528113'\n          DC   F'0',X'0000',CL10'8131002824'\n          DC   F'0',X'0000',CL10'5321710355'\n          DC   F'0',X'0000',CL10'4480439106'\n          DC   F'0',X'0000',CL10'6362585477'\n          DC   F'0',X'0000',CL10'7138113868'\n          DC   F'0',X'0000',CL10'7679716679'\n          DC   F'0',X'0000',CL10'2230174310'\n          DC   F'0',X'0000',CL10'7952915161'\n          DC   F'0',X'0000',CL10'7349775632'\n          DC   F'0',X'0000',CL10'3609960123'\n          DC   F'0',X'0000',CL10'6634201034'\n          DC   F'0',X'0000',CL10'6758118765'\n          DC   F'0',X'0000',CL10'6078781716'\n          DC   F'0',X'0000',CL10'5768466287'\n          DC   F'0',X'0000',CL10'3839616878'\n          DC   F'0',X'0000',CL10'3505005889'\n          DC   F'0',X'0000',CL10'9557093720'\n          DC   F'0',X'0000',CL10'1070588771'\n          DC   F'0',X'0000',CL10'5212207442'\n          DC   F'0',X'0000',CL10'1021634133'\n          DC   F'0',X'0000',CL10'5707681244'\n          DC   F'0',X'0000',CL10'1283649175'\n          DC   F'0',X'0000',CL10'8245886326'\n          DC   F'0',X'0000',CL10'7479549097'\n          DC   F'0',X'0000',CL10'3655561888'\n          DC   F'0',X'0000',CL10'5062777099'\n          DC   F'0',X'0000',CL10'8099335130'\n          DC   F'0',X'0000',CL10'1527224381'\n          DC   F'0',X'0000',CL10'8074041252'\n          DC   F'0',X'0000',CL10'1045950143'\n          DC   F'0',X'0000',CL10'3295843454'\n          DC   F'0',X'0000',CL10'7170701585'\n          DC   F'0',X'0000',CL10'8942152936'\n          DC   F'0',X'0000',CL10'1704233907'\n          DC   F'0',X'0000',CL10'8802348898'\n          DC   F'0',X'0000',CL10'7537430309'\n          DC   F'0',X'0000',CL10'2169298540'\n          DC   F'0',X'0000',CL10'8123221991'\n          DC   F'0',X'0000',CL10'7783677062'\n          DC   F'0',X'0000',CL10'4339308153'\n          DC   F'0',X'0000',CL10'5823087664'\n          DC   F'0',X'0000',CL10'8771675995'\n          DC   F'0',X'0000',CL10'1807981546'\n          DC   F'0',X'0000',CL10'5930920717'\n          DC   F'0',X'0000',CL10'2376377908'\n          DC   F'0',X'0000',CL10'2593365519'\n          DC   F'0',X'0000',CL10'0159383950'\n          DC   F'0',X'0000',CL10'3338981601'\n          DC   F'0',X'0000',CL10'1469514872'\n          DC   F'0',X'0000',CL10'0438108163'\n          DC   F'0',X'0000',CL10'4193813874'\n          DC   F'0',X'0000',CL10'2518972405'\n          DC   F'0',X'0000',CL10'2163772156'\n          DC   F'0',X'0000',CL10'0928009527'\n          DC   F'0',X'0000',CL10'4354048918'\n          DC   F'0',X'0000',CL10'4374982729'\n          DC   F'0',X'0000',CL10'0541991360'\n          DC   F'0',X'0000',CL10'9334903211'\n          DC   F'0',X'0000',CL10'7539954682'\n          DC   F'0',X'0000',CL10'3758750173'\n          DC   F'0',X'0000',CL10'9792422084'\n          DC   F'0',X'0000',CL10'2924990815'\n          DC   F'0',X'0000',CL10'3009924766'\n          DC   F'0',X'0000',CL10'6743900337'\n          DC   F'0',X'0000',CL10'7591761928'\n          DC   F'0',X'0000',CL10'5506681939'\n          DC   F'0',X'0000',CL10'7869520770'\n          DC   F'0',X'0000',CL10'3951386821'\n          DC   F'0',X'0000',CL10'1683396492'\n          DC   F'0',X'0000',CL10'9597634183'\n          DC   F'0',X'0000',CL10'0483312294'\n          DC   F'0',X'0000',CL10'8582131225'\n          DC   F'0',X'0000',CL10'1026839376'\n          DC   F'0',X'0000',CL10'8706993147'\n          DC   F'0',X'0000',CL10'3825916938'\n          DC   F'0',X'0000',CL10'3092863149'\n          DC   F'0',X'0000',CL10'8774372180'\n          DC   F'0',X'0000',CL10'6708832431'\n          DC   F'0',X'0000',CL10'2868240302'\n          DC   F'0',X'0000',CL10'0131160193'\n          DC   F'0',X'0000',CL10'6610884504'\n          DC   F'0',X'0000',CL10'8162793635'\n          DC   F'0',X'0000',CL10'2574915986'\n          DC   F'0',X'0000',CL10'3425687957'\n          DC   F'0',X'0000',CL10'9672913948'\n          DC   F'0',X'0000',CL10'4717926359'\n          DC   F'0',X'0000',CL10'7968945590'\n          DC   F'0',X'0000',CL10'4807640041'\n          DC   F'0',X'0000',CL10'9342886112'\n          DC   F'0',X'0000',CL10'0415728203'\n          DC   F'0',X'0000',CL10'6999538714'\n          DC   F'0',X'0000',CL10'6419378045'\n          DC   F'0',X'0000',CL10'9694554596'\n          DC   F'0',X'0000',CL10'4788384767'\n          DC   F'0',X'0000',CL10'2629152958'\n          DC   F'0',X'0000',CL10'4446271569'\n          DC   F'0',X'0000',CL10'4245641000'\nLASTUN   EQU   *-16\n*\nLISTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'OPTIMIZED LIST INSERTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n* L1.  L(0) <- N                                                      *\n*      L(N) <- ZERO                                                   *\n*      DO J=N-1,N-2, ... ,1                                           *\n* L2.     P <- L(0)                                                   *\n*         Q <- ZERO                                                   *\n*         K <- K(J)                                                   *\n* L3.     IF K LE K(P)                                                *\n*            GOTO L5.                                                 *\n* L4.     Q <- P                                                      *\n*         P <- L(Q)                                                   *\n*         IF P > ZERO                                                 *\n*            GOTO L3.                                                 *\n* L5.     L(Q) <- J                                                   *\n*         L(J) <- P                                                   *\n*      ENDDO                                                          *\n*---------------------------------------------------------------------*\n         L     R1,=A(LASTUN)\n         ST    R1,L0               L0 <- N\n         MVC   0(4,R1),=A(L0)      L(N) <- ZERO\n         B     NEXTJ\nOUTLOOP  L     R3,0(R2)            P <- LINK(Q)\n         CLC   TEMP,6(R3)          K > K(P) ?\n         BH    INLOOP              YES\n         ST    R1,0(R2)            LINK(Q) <- J\n         ST    R3,0(R1)            LINK(J) <- P\n         B     NEXTJ\nINLOOP   L     R2,0(R3)            P <- LINK(Q)\n         CLC   TEMP,6(R2)          K > K(P) ?\n         BH    OUTLOOP             YES\n         ST    R1,0(R3)            LINK(Q) <- J\n         ST    R2,0(R1)            LINK(J) <- P\nNEXTJ    S     R1,=F'16'           J <- J-1\n         L     R3,=A(L0)           Q <- ZERO\n         MVC   TEMP,6(R1)          K <- K(J)\n         CL    R1,=A(L0)           J GE 1 ?\n         BH    INLOOP\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         L     R3,L0\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,6(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    L     R3,0(R3)            NEXT SORTED REC\n         CL    R3,=A(L0)           END OF LIST?\n         BNE   PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00026": {"ttr": 7174, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01+\\x01+\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 299, "newlines": 299, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL LISTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00026'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'MULTIPLE LIST INSERTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        MULTIPLE LIST INSERTION SORT                                 *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 99-100.                                   *\n*                                                                     *\n*        NEEDS KEYS TO BE EQUALLY DISTRIBUTED ACROSS RANGE            *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nLISTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DS    0F\nHEAD     DC    16F'0'\n*\nUNSORTED EQU   *\n         DC    F'0',X'00',CL3'503'\n         DC    F'0',X'00',CL3'087'\n         DC    F'0',X'00',CL3'512'\n         DC    F'0',X'00',CL3'061'\n         DC    F'0',X'00',CL3'908'\n         DC    F'0',X'00',CL3'170'\n         DC    F'0',X'00',CL3'897'\n         DC    F'0',X'00',CL3'275'\n         DC    F'0',X'00',CL3'653'\n         DC    F'0',X'00',CL3'426'\n         DC    F'0',X'00',CL3'154'\n         DC    F'0',X'00',CL3'509'\n         DC    F'0',X'00',CL3'612'\n         DC    F'0',X'00',CL3'677'\n         DC    F'0',X'00',CL3'765'\n         DC    F'0',X'00',CL3'703'\nLASTUN   EQU   *-8\n*\nLISTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'MULTIPLE LIST INSERTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n*      FOR P=1,2, ... ,M                                              *\n*          HEAD(P) <- ZERO                                            *\n*      ENDFOR                                                         *\n*      FOR J = N,N-1, ... ,1                                          *\n*          Q <- (M*K(J))/MAX      ZER0 =< KEY < MAX                   *\n*          Q <- LOC(HEAD(Q))                                          *\n*          K <- K(J)                                                  *\n*          GOTO H4                                                    *\n* H3.      IF K LE K(P)                                               *\n*             GOTO INSERT.                                            *\n*          Q <- P                                                     *\n* H4.      P <- LINK(Q)                                               *\n*          IF P NOT = ZERO                                            *\n*             GOTO H3.                                                *\n* INSERT   LINK(Q) <- LOC(R(J)                                        *\n*          LINK(LOC(R(J)) <- P                                        *\n*      ENDFOR                                                         *\n*---------------------------------------------------------------------*\n         L     R1,=A(HEAD)         BASE FOR LIST HEADS\n         XC    DBLWORD,DBLWORD\n         L     R2,=A(LASTUN)       J <- N\nINDEX    PACK  DBLWORD+7(1),5(1,R2) CALC INDEX TO LIST HEAD\n         CVB   R3,DBLWORD          LEFT FOUR BITS (1ST DIGIT)\n*                                  INDEX TO ONE OF 16 LISTS\n         SLL   R3,2                TIMES FOUR IS DISPLACEMENT\n         LA    R3,0(R3,R1)         Q <- PTR HEAD(Q)\n         B     TSTLINK\nCOMPARE  CLC   5(3,R2),5(R4)       K(J) LE K(P)\n         BNH   INSERT              YES\n         LR    R3,R4               NO, Q <- P\nTSTLINK  L     R4,0(R3)            P <- LINK(Q)\n         LTR   R4,R4               END OF LIST?\n         BP    COMPARE             NO\nINSERT   ST    R2,0(R3)            LINK(Q) <- R(J)\n         ST    R4,0(R2)            LINK R(J) <- P\n         S     R2,=F'8'            NEXT J\n         CL    R2,=A(UNSORTED)     J GE 1 ?\n         BNL   INDEX\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R6,=A(HEAD)         HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nNEXTLIST L     R3,0(R6)\n         B     ENDTST              EMPTY?\nPRTLOOP2 MVC   OUTKEY,5(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    L     R3,0(R3)            NEXT SORTED REC\nENDTST   LTR   R3,R3               END OF LIST ?\n         BNZ   PRTLOOP2            BRANCH IF MORE RECS\n         LA    R6,4(R6)            NEXT LIST HEAD\n         BCT   R2,NEXTLIST\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00027": {"ttr": 7180, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\x02\\x05\\x02\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1282, "newlines": 1282, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL LISTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00027'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'MULTIPLE LIST INSERTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        MULTIPLE LIST INSERTION SORT                                 *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 99-100.                                   *\n*                                                                     *\n*        NEEDS KEYS TO BE EQUALLY DISTRIBUTED ACROSS RANGE            *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nLISTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DS    0F\nHEAD     DC    1024F'0'            LIST HEADS\n*\nUNSORTED  EQU  *\n          DC   F'0',X'0000',CL10'2113148651'\n          DC   F'0',X'0000',CL10'1170852922'\n          DC   F'0',X'0000',CL10'2144637213'\n          DC   F'0',X'0000',CL10'5195953924'\n          DC   F'0',X'0000',CL10'8807543455'\n          DC   F'0',X'0000',CL10'9477994206'\n          DC   F'0',X'0000',CL10'1563502577'\n          DC   F'0',X'0000',CL10'0930832968'\n          DC   F'0',X'0000',CL10'5765477779'\n          DC   F'0',X'0000',CL10'9159017410'\n          DC   F'0',X'0000',CL10'2979680261'\n          DC   F'0',X'0000',CL10'3010102732'\n          DC   F'0',X'0000',CL10'3416289223'\n          DC   F'0',X'0000',CL10'6291772134'\n          DC   F'0',X'0000',CL10'1300971865'\n          DC   F'0',X'0000',CL10'3325756816'\n          DC   F'0',X'0000',CL10'4499203387'\n          DC   F'0',X'0000',CL10'3090555978'\n          DC   F'0',X'0000',CL10'7385386989'\n          DC   F'0',X'0000',CL10'9984956820'\n          DC   F'0',X'0000',CL10'8828773871'\n          DC   F'0',X'0000',CL10'7724354542'\n          DC   F'0',X'0000',CL10'3248183233'\n          DC   F'0',X'0000',CL10'8561872344'\n          DC   F'0',X'0000',CL10'9967522275'\n          DC   F'0',X'0000',CL10'0906281426'\n          DC   F'0',X'0000',CL10'2584106197'\n          DC   F'0',X'0000',CL10'2488720988'\n          DC   F'0',X'0000',CL10'3741778199'\n          DC   F'0',X'0000',CL10'1510218230'\n          DC   F'0',X'0000',CL10'9580829481'\n          DC   F'0',X'0000',CL10'2682008352'\n          DC   F'0',X'0000',CL10'0216719243'\n          DC   F'0',X'0000',CL10'6750654554'\n          DC   F'0',X'0000',CL10'5879594685'\n          DC   F'0',X'0000',CL10'8979968036'\n          DC   F'0',X'0000',CL10'0826611007'\n          DC   F'0',X'0000',CL10'2141727998'\n          DC   F'0',X'0000',CL10'6819051409'\n          DC   F'0',X'0000',CL10'0847201640'\n          DC   F'0',X'0000',CL10'2836247091'\n          DC   F'0',X'0000',CL10'4531464162'\n          DC   F'0',X'0000',CL10'5778297253'\n          DC   F'0',X'0000',CL10'4082518764'\n          DC   F'0',X'0000',CL10'6189589095'\n          DC   F'0',X'0000',CL10'9987216646'\n          DC   F'0',X'0000',CL10'1515117817'\n          DC   F'0',X'0000',CL10'5945977008'\n          DC   F'0',X'0000',CL10'5081606619'\n          DC   F'0',X'0000',CL10'9188307050'\n          DC   F'0',X'0000',CL10'9875426701'\n          DC   F'0',X'0000',CL10'5201121972'\n          DC   F'0',X'0000',CL10'0269317263'\n          DC   F'0',X'0000',CL10'8261864974'\n          DC   F'0',X'0000',CL10'0129905505'\n          DC   F'0',X'0000',CL10'8048427256'\n          DC   F'0',X'0000',CL10'0218026627'\n          DC   F'0',X'0000',CL10'4677868018'\n          DC   F'0',X'0000',CL10'9473843829'\n          DC   F'0',X'0000',CL10'7805934460'\n          DC   F'0',X'0000',CL10'1658768311'\n          DC   F'0',X'0000',CL10'7899381782'\n          DC   F'0',X'0000',CL10'8906179273'\n          DC   F'0',X'0000',CL10'7473093184'\n          DC   F'0',X'0000',CL10'5012943915'\n          DC   F'0',X'0000',CL10'4963999866'\n          DC   F'0',X'0000',CL10'1783737437'\n          DC   F'0',X'0000',CL10'1993801028'\n          DC   F'0',X'0000',CL10'9420163039'\n          DC   F'0',X'0000',CL10'4052483870'\n          DC   F'0',X'0000',CL10'4826671921'\n          DC   F'0',X'0000',CL10'3114643592'\n          DC   F'0',X'0000',CL10'7785283283'\n          DC   F'0',X'0000',CL10'6380603394'\n          DC   F'0',X'0000',CL10'2231104325'\n          DC   F'0',X'0000',CL10'6214334476'\n          DC   F'0',X'0000',CL10'6340650247'\n          DC   F'0',X'0000',CL10'0430176038'\n          DC   F'0',X'0000',CL10'8824964249'\n          DC   F'0',X'0000',CL10'7360355280'\n          DC   F'0',X'0000',CL10'7699537531'\n          DC   F'0',X'0000',CL10'4615307402'\n          DC   F'0',X'0000',CL10'9883029293'\n          DC   F'0',X'0000',CL10'2128795604'\n          DC   F'0',X'0000',CL10'3256786735'\n          DC   F'0',X'0000',CL10'6959831086'\n          DC   F'0',X'0000',CL10'5297165057'\n          DC   F'0',X'0000',CL10'7403393048'\n          DC   F'0',X'0000',CL10'2072647459'\n          DC   F'0',X'0000',CL10'5241948690'\n          DC   F'0',X'0000',CL10'6277765141'\n          DC   F'0',X'0000',CL10'5449773212'\n          DC   F'0',X'0000',CL10'1055817303'\n          DC   F'0',X'0000',CL10'0342069814'\n          DC   F'0',X'0000',CL10'5642391145'\n          DC   F'0',X'0000',CL10'8040889696'\n          DC   F'0',X'0000',CL10'7341681867'\n          DC   F'0',X'0000',CL10'1209852058'\n          DC   F'0',X'0000',CL10'0027612669'\n          DC   F'0',X'0000',CL10'9289664100'\n          DC   F'0',X'0000',CL10'0241754751'\n          DC   F'0',X'0000',CL10'3946441022'\n          DC   F'0',X'0000',CL10'6040047313'\n          DC   F'0',X'0000',CL10'1124826024'\n          DC   F'0',X'0000',CL10'9020317555'\n          DC   F'0',X'0000',CL10'1977910306'\n          DC   F'0',X'0000',CL10'4442600677'\n          DC   F'0',X'0000',CL10'7025953068'\n          DC   F'0',X'0000',CL10'6034259879'\n          DC   F'0',X'0000',CL10'1175901510'\n          DC   F'0',X'0000',CL10'8951906361'\n          DC   F'0',X'0000',CL10'9713710832'\n          DC   F'0',X'0000',CL10'4452119323'\n          DC   F'0',X'0000',CL10'5061464234'\n          DC   F'0',X'0000',CL10'1102965965'\n          DC   F'0',X'0000',CL10'8971292916'\n          DC   F'0',X'0000',CL10'7848321487'\n          DC   F'0',X'0000',CL10'2908096078'\n          DC   F'0',X'0000',CL10'1916989089'\n          DC   F'0',X'0000',CL10'8653060920'\n          DC   F'0',X'0000',CL10'7448619971'\n          DC   F'0',X'0000',CL10'9639982642'\n          DC   F'0',X'0000',CL10'6788433333'\n          DC   F'0',X'0000',CL10'9216384444'\n          DC   F'0',X'0000',CL10'3682736375'\n          DC   F'0',X'0000',CL10'2901437526'\n          DC   F'0',X'0000',CL10'4087244297'\n          DC   F'0',X'0000',CL10'5792681088'\n          DC   F'0',X'0000',CL10'3980200299'\n          DC   F'0',X'0000',CL10'1553542330'\n          DC   F'0',X'0000',CL10'2452295581'\n          DC   F'0',X'0000',CL10'3893656452'\n          DC   F'0',X'0000',CL10'0425389343'\n          DC   F'0',X'0000',CL10'3133986654'\n          DC   F'0',X'0000',CL10'8632028785'\n          DC   F'0',X'0000',CL10'7328744136'\n          DC   F'0',X'0000',CL10'0967769107'\n          DC   F'0',X'0000',CL10'7496108098'\n          DC   F'0',X'0000',CL10'9008293509'\n          DC   F'0',X'0000',CL10'7789745740'\n          DC   F'0',X'0000',CL10'8363333191'\n          DC   F'0',X'0000',CL10'1923132262'\n          DC   F'0',X'0000',CL10'5619387353'\n          DC   F'0',X'0000',CL10'4838670864'\n          DC   F'0',X'0000',CL10'3903243195'\n          DC   F'0',X'0000',CL10'1493612746'\n          DC   F'0',X'0000',CL10'3578295917'\n          DC   F'0',X'0000',CL10'0714777108'\n          DC   F'0',X'0000',CL10'0265668719'\n          DC   F'0',X'0000',CL10'9354071150'\n          DC   F'0',X'0000',CL10'3262132801'\n          DC   F'0',X'0000',CL10'8456810072'\n          DC   F'0',X'0000',CL10'1506827363'\n          DC   F'0',X'0000',CL10'6834837074'\n          DC   F'0',X'0000',CL10'9528779605'\n          DC   F'0',X'0000',CL10'6316443356'\n          DC   F'0',X'0000',CL10'0287224727'\n          DC   F'0',X'0000',CL10'5025088118'\n          DC   F'0',X'0000',CL10'3496725929'\n          DC   F'0',X'0000',CL10'8318918560'\n          DC   F'0',X'0000',CL10'4909094411'\n          DC   F'0',X'0000',CL10'9503089882'\n          DC   F'0',X'0000',CL10'2104109373'\n          DC   F'0',X'0000',CL10'2106885284'\n          DC   F'0',X'0000',CL10'3621038015'\n          DC   F'0',X'0000',CL10'0397635966'\n          DC   F'0',X'0000',CL10'8742955537'\n          DC   F'0',X'0000',CL10'2883441128'\n          DC   F'0',X'0000',CL10'2925865139'\n          DC   F'0',X'0000',CL10'2836687970'\n          DC   F'0',X'0000',CL10'6744618021'\n          DC   F'0',X'0000',CL10'8350371692'\n          DC   F'0',X'0000',CL10'2307633383'\n          DC   F'0',X'0000',CL10'0119215494'\n          DC   F'0',X'0000',CL10'8372418425'\n          DC   F'0',X'0000',CL10'6017590576'\n          DC   F'0',X'0000',CL10'1873888347'\n          DC   F'0',X'0000',CL10'5626236138'\n          DC   F'0',X'0000',CL10'7257486349'\n          DC   F'0',X'0000',CL10'3139779380'\n          DC   F'0',X'0000',CL10'3889103631'\n          DC   F'0',X'0000',CL10'1567055502'\n          DC   F'0',X'0000',CL10'3893799393'\n          DC   F'0',X'0000',CL10'2816227704'\n          DC   F'0',X'0000',CL10'6055320835'\n          DC   F'0',X'0000',CL10'5136707186'\n          DC   F'0',X'0000',CL10'3888423157'\n          DC   F'0',X'0000',CL10'9469873148'\n          DC   F'0',X'0000',CL10'5675989559'\n          DC   F'0',X'0000',CL10'7540592790'\n          DC   F'0',X'0000',CL10'9142951241'\n          DC   F'0',X'0000',CL10'5001541312'\n          DC   F'0',X'0000',CL10'1519007403'\n          DC   F'0',X'0000',CL10'0622321914'\n          DC   F'0',X'0000',CL10'5022145245'\n          DC   F'0',X'0000',CL10'5395385796'\n          DC   F'0',X'0000',CL10'6274959967'\n          DC   F'0',X'0000',CL10'1510752158'\n          DC   F'0',X'0000',CL10'3845774769'\n          DC   F'0',X'0000',CL10'8431528200'\n          DC   F'0',X'0000',CL10'8986560851'\n          DC   F'0',X'0000',CL10'9782229122'\n          DC   F'0',X'0000',CL10'8719657413'\n          DC   F'0',X'0000',CL10'8441898124'\n          DC   F'0',X'0000',CL10'5705291655'\n          DC   F'0',X'0000',CL10'6114026406'\n          DC   F'0',X'0000',CL10'3801898777'\n          DC   F'0',X'0000',CL10'5725273168'\n          DC   F'0',X'0000',CL10'9911241979'\n          DC   F'0',X'0000',CL10'8284985610'\n          DC   F'0',X'0000',CL10'9580332461'\n          DC   F'0',X'0000',CL10'8317518932'\n          DC   F'0',X'0000',CL10'3912149423'\n          DC   F'0',X'0000',CL10'1659356334'\n          DC   F'0',X'0000',CL10'6617160065'\n          DC   F'0',X'0000',CL10'4293029016'\n          DC   F'0',X'0000',CL10'0517639587'\n          DC   F'0',X'0000',CL10'8969836178'\n          DC   F'0',X'0000',CL10'0496791189'\n          DC   F'0',X'0000',CL10'5653365020'\n          DC   F'0',X'0000',CL10'2764666071'\n          DC   F'0',X'0000',CL10'0295810742'\n          DC   F'0',X'0000',CL10'6392883433'\n          DC   F'0',X'0000',CL10'2139096544'\n          DC   F'0',X'0000',CL10'0350150475'\n          DC   F'0',X'0000',CL10'0612793626'\n          DC   F'0',X'0000',CL10'5750582397'\n          DC   F'0',X'0000',CL10'6980841188'\n          DC   F'0',X'0000',CL10'6706822399'\n          DC   F'0',X'0000',CL10'1169066430'\n          DC   F'0',X'0000',CL10'2059961681'\n          DC   F'0',X'0000',CL10'8685504552'\n          DC   F'0',X'0000',CL10'2338259443'\n          DC   F'0',X'0000',CL10'4225518754'\n          DC   F'0',X'0000',CL10'9576662885'\n          DC   F'0',X'0000',CL10'5433720236'\n          DC   F'0',X'0000',CL10'0109127207'\n          DC   F'0',X'0000',CL10'0374688198'\n          DC   F'0',X'0000',CL10'0125735609'\n          DC   F'0',X'0000',CL10'3544489840'\n          DC   F'0',X'0000',CL10'8666619291'\n          DC   F'0',X'0000',CL10'5735000362'\n          DC   F'0',X'0000',CL10'0804677453'\n          DC   F'0',X'0000',CL10'0743022964'\n          DC   F'0',X'0000',CL10'3049097295'\n          DC   F'0',X'0000',CL10'4796208846'\n          DC   F'0',X'0000',CL10'1481674017'\n          DC   F'0',X'0000',CL10'0647777208'\n          DC   F'0',X'0000',CL10'8817930819'\n          DC   F'0',X'0000',CL10'5572035250'\n          DC   F'0',X'0000',CL10'7465038901'\n          DC   F'0',X'0000',CL10'8972698172'\n          DC   F'0',X'0000',CL10'9728537463'\n          DC   F'0',X'0000',CL10'8996009174'\n          DC   F'0',X'0000',CL10'1599853705'\n          DC   F'0',X'0000',CL10'6420659456'\n          DC   F'0',X'0000',CL10'1036622827'\n          DC   F'0',X'0000',CL10'6176508218'\n          DC   F'0',X'0000',CL10'3327808029'\n          DC   F'0',X'0000',CL10'0124102660'\n          DC   F'0',X'0000',CL10'3015620511'\n          DC   F'0',X'0000',CL10'7206997982'\n          DC   F'0',X'0000',CL10'1926239473'\n          DC   F'0',X'0000',CL10'6768877384'\n          DC   F'0',X'0000',CL10'4141332115'\n          DC   F'0',X'0000',CL10'5707472066'\n          DC   F'0',X'0000',CL10'9222373637'\n          DC   F'0',X'0000',CL10'8217281228'\n          DC   F'0',X'0000',CL10'2679767239'\n          DC   F'0',X'0000',CL10'6153092070'\n          DC   F'0',X'0000',CL10'5558764121'\n          DC   F'0',X'0000',CL10'6526299792'\n          DC   F'0',X'0000',CL10'1094183483'\n          DC   F'0',X'0000',CL10'8326027594'\n          DC   F'0',X'0000',CL10'3665932525'\n          DC   F'0',X'0000',CL10'1737046676'\n          DC   F'0',X'0000',CL10'1767326447'\n          DC   F'0',X'0000',CL10'6906496238'\n          DC   F'0',X'0000',CL10'0378208449'\n          DC   F'0',X'0000',CL10'4691403480'\n          DC   F'0',X'0000',CL10'7014869731'\n          DC   F'0',X'0000',CL10'6299003602'\n          DC   F'0',X'0000',CL10'7808769493'\n          DC   F'0',X'0000',CL10'0411859804'\n          DC   F'0',X'0000',CL10'3246054935'\n          DC   F'0',X'0000',CL10'3269783286'\n          DC   F'0',X'0000',CL10'5679881257'\n          DC   F'0',X'0000',CL10'7260553248'\n          DC   F'0',X'0000',CL10'0407531659'\n          DC   F'0',X'0000',CL10'4851436890'\n          DC   F'0',X'0000',CL10'6984337341'\n          DC   F'0',X'0000',CL10'5173509412'\n          DC   F'0',X'0000',CL10'5526397503'\n          DC   F'0',X'0000',CL10'8250774014'\n          DC   F'0',X'0000',CL10'2034099345'\n          DC   F'0',X'0000',CL10'4746081896'\n          DC   F'0',X'0000',CL10'5248438067'\n          DC   F'0',X'0000',CL10'5175852258'\n          DC   F'0',X'0000',CL10'3232136869'\n          DC   F'0',X'0000',CL10'9825592300'\n          DC   F'0',X'0000',CL10'8747566951'\n          DC   F'0',X'0000',CL10'7078217222'\n          DC   F'0',X'0000',CL10'6583467513'\n          DC   F'0',X'0000',CL10'1547170224'\n          DC   F'0',X'0000',CL10'1262465755'\n          DC   F'0',X'0000',CL10'2286342506'\n          DC   F'0',X'0000',CL10'8041396877'\n          DC   F'0',X'0000',CL10'3428793268'\n          DC   F'0',X'0000',CL10'1796424079'\n          DC   F'0',X'0000',CL10'2886269710'\n          DC   F'0',X'0000',CL10'5264958561'\n          DC   F'0',X'0000',CL10'7221527032'\n          DC   F'0',X'0000',CL10'8196379523'\n          DC   F'0',X'0000',CL10'0485448434'\n          DC   F'0',X'0000',CL10'0243554165'\n          DC   F'0',X'0000',CL10'9690965116'\n          DC   F'0',X'0000',CL10'0907157687'\n          DC   F'0',X'0000',CL10'7675776278'\n          DC   F'0',X'0000',CL10'7524793289'\n          DC   F'0',X'0000',CL10'3385869120'\n          DC   F'0',X'0000',CL10'5176912171'\n          DC   F'0',X'0000',CL10'8091838842'\n          DC   F'0',X'0000',CL10'8461533533'\n          DC   F'0',X'0000',CL10'1730008644'\n          DC   F'0',X'0000',CL10'2369764575'\n          DC   F'0',X'0000',CL10'4440349726'\n          DC   F'0',X'0000',CL10'5974120497'\n          DC   F'0',X'0000',CL10'2453201288'\n          DC   F'0',X'0000',CL10'6321644499'\n          DC   F'0',X'0000',CL10'2756790530'\n          DC   F'0',X'0000',CL10'8803827781'\n          DC   F'0',X'0000',CL10'5457552652'\n          DC   F'0',X'0000',CL10'2355329543'\n          DC   F'0',X'0000',CL10'4425250854'\n          DC   F'0',X'0000',CL10'1113496985'\n          DC   F'0',X'0000',CL10'3694896336'\n          DC   F'0',X'0000',CL10'6650685307'\n          DC   F'0',X'0000',CL10'7177468298'\n          DC   F'0',X'0000',CL10'4571377709'\n          DC   F'0',X'0000',CL10'0511433940'\n          DC   F'0',X'0000',CL10'4146105391'\n          DC   F'0',X'0000',CL10'4367068462'\n          DC   F'0',X'0000',CL10'7734167553'\n          DC   F'0',X'0000',CL10'6195575064'\n          DC   F'0',X'0000',CL10'6027151395'\n          DC   F'0',X'0000',CL10'0295004946'\n          DC   F'0',X'0000',CL10'3625252117'\n          DC   F'0',X'0000',CL10'2144977308'\n          DC   F'0',X'0000',CL10'5138392919'\n          DC   F'0',X'0000',CL10'0242199350'\n          DC   F'0',X'0000',CL10'2884145001'\n          DC   F'0',X'0000',CL10'5148786272'\n          DC   F'0',X'0000',CL10'1334447563'\n          DC   F'0',X'0000',CL10'9145381274'\n          DC   F'0',X'0000',CL10'8743127805'\n          DC   F'0',X'0000',CL10'8761075556'\n          DC   F'0',X'0000',CL10'0866220927'\n          DC   F'0',X'0000',CL10'4532128318'\n          DC   F'0',X'0000',CL10'3367090129'\n          DC   F'0',X'0000',CL10'5621486760'\n          DC   F'0',X'0000',CL10'6378346611'\n          DC   F'0',X'0000',CL10'9411106082'\n          DC   F'0',X'0000',CL10'4772569573'\n          DC   F'0',X'0000',CL10'5859069484'\n          DC   F'0',X'0000',CL10'8973826215'\n          DC   F'0',X'0000',CL10'1293508166'\n          DC   F'0',X'0000',CL10'1621991737'\n          DC   F'0',X'0000',CL10'4395321328'\n          DC   F'0',X'0000',CL10'3081869339'\n          DC   F'0',X'0000',CL10'6401696170'\n          DC   F'0',X'0000',CL10'1669110221'\n          DC   F'0',X'0000',CL10'6042427892'\n          DC   F'0',X'0000',CL10'0544933583'\n          DC   F'0',X'0000',CL10'5401039694'\n          DC   F'0',X'0000',CL10'0511646625'\n          DC   F'0',X'0000',CL10'3772702776'\n          DC   F'0',X'0000',CL10'4420964547'\n          DC   F'0',X'0000',CL10'0670956338'\n          DC   F'0',X'0000',CL10'2587130549'\n          DC   F'0',X'0000',CL10'4415227580'\n          DC   F'0',X'0000',CL10'7476835831'\n          DC   F'0',X'0000',CL10'7211151702'\n          DC   F'0',X'0000',CL10'8027939593'\n          DC   F'0',X'0000',CL10'9315691904'\n          DC   F'0',X'0000',CL10'7228989035'\n          DC   F'0',X'0000',CL10'1759059386'\n          DC   F'0',X'0000',CL10'9071539357'\n          DC   F'0',X'0000',CL10'7175433348'\n          DC   F'0',X'0000',CL10'0667273759'\n          DC   F'0',X'0000',CL10'9574480990'\n          DC   F'0',X'0000',CL10'0201923441'\n          DC   F'0',X'0000',CL10'4365677512'\n          DC   F'0',X'0000',CL10'9477987603'\n          DC   F'0',X'0000',CL10'7627426114'\n          DC   F'0',X'0000',CL10'9078253445'\n          DC   F'0',X'0000',CL10'6492977996'\n          DC   F'0',X'0000',CL10'2662116167'\n          DC   F'0',X'0000',CL10'8605152358'\n          DC   F'0',X'0000',CL10'2586698969'\n          DC   F'0',X'0000',CL10'5871856400'\n          DC   F'0',X'0000',CL10'9924773051'\n          DC   F'0',X'0000',CL10'4234405322'\n          DC   F'0',X'0000',CL10'6031477613'\n          DC   F'0',X'0000',CL10'4840642324'\n          DC   F'0',X'0000',CL10'8091839855'\n          DC   F'0',X'0000',CL10'0894858606'\n          DC   F'0',X'0000',CL10'5561094977'\n          DC   F'0',X'0000',CL10'6536513368'\n          DC   F'0',X'0000',CL10'6089806179'\n          DC   F'0',X'0000',CL10'7379753810'\n          DC   F'0',X'0000',CL10'6405784661'\n          DC   F'0',X'0000',CL10'4825735132'\n          DC   F'0',X'0000',CL10'3704809623'\n          DC   F'0',X'0000',CL10'5939740534'\n          DC   F'0',X'0000',CL10'4382148265'\n          DC   F'0',X'0000',CL10'5565101216'\n          DC   F'0',X'0000',CL10'7416875787'\n          DC   F'0',X'0000',CL10'5425916378'\n          DC   F'0',X'0000',CL10'7400995389'\n          DC   F'0',X'0000',CL10'4250573220'\n          DC   F'0',X'0000',CL10'5085358271'\n          DC   F'0',X'0000',CL10'1428066942'\n          DC   F'0',X'0000',CL10'9394383633'\n          DC   F'0',X'0000',CL10'2389120744'\n          DC   F'0',X'0000',CL10'2141578675'\n          DC   F'0',X'0000',CL10'4784105826'\n          DC   F'0',X'0000',CL10'3157858597'\n          DC   F'0',X'0000',CL10'8609761388'\n          DC   F'0',X'0000',CL10'7224666599'\n          DC   F'0',X'0000',CL10'8716714630'\n          DC   F'0',X'0000',CL10'3083893881'\n          DC   F'0',X'0000',CL10'2609800752'\n          DC   F'0',X'0000',CL10'6876599643'\n          DC   F'0',X'0000',CL10'8133182954'\n          DC   F'0',X'0000',CL10'5642531085'\n          DC   F'0',X'0000',CL10'2512272436'\n          DC   F'0',X'0000',CL10'8992443407'\n          DC   F'0',X'0000',CL10'4304448398'\n          DC   F'0',X'0000',CL10'6745219809'\n          DC   F'0',X'0000',CL10'1090578040'\n          DC   F'0',X'0000',CL10'5201791491'\n          DC   F'0',X'0000',CL10'6219336562'\n          DC   F'0',X'0000',CL10'2807857653'\n          DC   F'0',X'0000',CL10'5596327164'\n          DC   F'0',X'0000',CL10'5237405495'\n          DC   F'0',X'0000',CL10'8390001046'\n          DC   F'0',X'0000',CL10'8409030217'\n          DC   F'0',X'0000',CL10'1606377408'\n          DC   F'0',X'0000',CL10'3627055019'\n          DC   F'0',X'0000',CL10'5764563450'\n          DC   F'0',X'0000',CL10'9919451101'\n          DC   F'0',X'0000',CL10'5385074372'\n          DC   F'0',X'0000',CL10'2724557663'\n          DC   F'0',X'0000',CL10'1682953374'\n          DC   F'0',X'0000',CL10'3358601905'\n          DC   F'0',X'0000',CL10'3737691656'\n          DC   F'0',X'0000',CL10'8176019027'\n          DC   F'0',X'0000',CL10'6491948418'\n          DC   F'0',X'0000',CL10'8014572229'\n          DC   F'0',X'0000',CL10'7211070860'\n          DC   F'0',X'0000',CL10'5397272711'\n          DC   F'0',X'0000',CL10'4515414182'\n          DC   F'0',X'0000',CL10'7043099673'\n          DC   F'0',X'0000',CL10'3777461584'\n          DC   F'0',X'0000',CL10'0518520315'\n          DC   F'0',X'0000',CL10'7555744266'\n          DC   F'0',X'0000',CL10'4341809837'\n          DC   F'0',X'0000',CL10'7817561428'\n          DC   F'0',X'0000',CL10'8532171439'\n          DC   F'0',X'0000',CL10'5982500270'\n          DC   F'0',X'0000',CL10'5475656321'\n          DC   F'0',X'0000',CL10'5298755992'\n          DC   F'0',X'0000',CL10'7059883683'\n          DC   F'0',X'0000',CL10'5744251794'\n          DC   F'0',X'0000',CL10'1309560725'\n          DC   F'0',X'0000',CL10'2524558876'\n          DC   F'0',X'0000',CL10'8234802647'\n          DC   F'0',X'0000',CL10'3319616438'\n          DC   F'0',X'0000',CL10'8284252649'\n          DC   F'0',X'0000',CL10'4711251680'\n          DC   F'0',X'0000',CL10'5675001931'\n          DC   F'0',X'0000',CL10'2703499802'\n          DC   F'0',X'0000',CL10'0951309693'\n          DC   F'0',X'0000',CL10'3927724004'\n          DC   F'0',X'0000',CL10'0404123135'\n          DC   F'0',X'0000',CL10'1004535486'\n          DC   F'0',X'0000',CL10'2463397457'\n          DC   F'0',X'0000',CL10'5614513448'\n          DC   F'0',X'0000',CL10'0855215859'\n          DC   F'0',X'0000',CL10'4109725090'\n          DC   F'0',X'0000',CL10'9195709541'\n          DC   F'0',X'0000',CL10'0978045612'\n          DC   F'0',X'0000',CL10'9773777703'\n          DC   F'0',X'0000',CL10'3152278214'\n          DC   F'0',X'0000',CL10'8554607545'\n          DC   F'0',X'0000',CL10'1036074096'\n          DC   F'0',X'0000',CL10'6915994267'\n          DC   F'0',X'0000',CL10'8198652458'\n          DC   F'0',X'0000',CL10'6309461069'\n          DC   F'0',X'0000',CL10'8970320500'\n          DC   F'0',X'0000',CL10'2918179151'\n          DC   F'0',X'0000',CL10'9650793422'\n          DC   F'0',X'0000',CL10'3463687713'\n          DC   F'0',X'0000',CL10'2722314424'\n          DC   F'0',X'0000',CL10'8593413955'\n          DC   F'0',X'0000',CL10'2339574706'\n          DC   F'0',X'0000',CL10'4760993077'\n          DC   F'0',X'0000',CL10'1448433468'\n          DC   F'0',X'0000',CL10'7191388279'\n          DC   F'0',X'0000',CL10'4165437910'\n          DC   F'0',X'0000',CL10'3402810761'\n          DC   F'0',X'0000',CL10'9530143232'\n          DC   F'0',X'0000',CL10'6837439723'\n          DC   F'0',X'0000',CL10'2422232634'\n          DC   F'0',X'0000',CL10'1432942365'\n          DC   F'0',X'0000',CL10'2315437316'\n          DC   F'0',X'0000',CL10'8446793887'\n          DC   F'0',X'0000',CL10'8620256478'\n          DC   F'0',X'0000',CL10'4525397489'\n          DC   F'0',X'0000',CL10'0647477320'\n          DC   F'0',X'0000',CL10'2890004371'\n          DC   F'0',X'0000',CL10'8704495042'\n          DC   F'0',X'0000',CL10'5591433733'\n          DC   F'0',X'0000',CL10'8516432844'\n          DC   F'0',X'0000',CL10'2065592775'\n          DC   F'0',X'0000',CL10'2044061926'\n          DC   F'0',X'0000',CL10'5701796697'\n          DC   F'0',X'0000',CL10'1850521488'\n          DC   F'0',X'0000',CL10'3815888699'\n          DC   F'0',X'0000',CL10'1448838730'\n          DC   F'0',X'0000',CL10'5300159981'\n          DC   F'0',X'0000',CL10'8542248852'\n          DC   F'0',X'0000',CL10'2302069743'\n          DC   F'0',X'0000',CL10'9749315054'\n          DC   F'0',X'0000',CL10'5563765185'\n          DC   F'0',X'0000',CL10'2285848536'\n          DC   F'0',X'0000',CL10'5534401507'\n          DC   F'0',X'0000',CL10'8155628498'\n          DC   F'0',X'0000',CL10'1047261909'\n          DC   F'0',X'0000',CL10'7681922140'\n          DC   F'0',X'0000',CL10'2233677591'\n          DC   F'0',X'0000',CL10'9691804662'\n          DC   F'0',X'0000',CL10'2425747753'\n          DC   F'0',X'0000',CL10'3345279264'\n          DC   F'0',X'0000',CL10'3079859595'\n          DC   F'0',X'0000',CL10'9481197146'\n          DC   F'0',X'0000',CL10'4233008317'\n          DC   F'0',X'0000',CL10'5431977508'\n          DC   F'0',X'0000',CL10'8683917119'\n          DC   F'0',X'0000',CL10'4539127550'\n          DC   F'0',X'0000',CL10'8970957201'\n          DC   F'0',X'0000',CL10'8081562472'\n          DC   F'0',X'0000',CL10'0298867763'\n          DC   F'0',X'0000',CL10'1008725474'\n          DC   F'0',X'0000',CL10'7846276005'\n          DC   F'0',X'0000',CL10'1750507756'\n          DC   F'0',X'0000',CL10'1366017127'\n          DC   F'0',X'0000',CL10'8455968518'\n          DC   F'0',X'0000',CL10'1670254329'\n          DC   F'0',X'0000',CL10'7292854960'\n          DC   F'0',X'0000',CL10'0472398811'\n          DC   F'0',X'0000',CL10'0919922282'\n          DC   F'0',X'0000',CL10'5137829773'\n          DC   F'0',X'0000',CL10'4924053684'\n          DC   F'0',X'0000',CL10'1175414415'\n          DC   F'0',X'0000',CL10'4894180366'\n          DC   F'0',X'0000',CL10'5781827937'\n          DC   F'0',X'0000',CL10'4884001528'\n          DC   F'0',X'0000',CL10'3430673539'\n          DC   F'0',X'0000',CL10'7295504370'\n          DC   F'0',X'0000',CL10'7378402421'\n          DC   F'0',X'0000',CL10'2695284092'\n          DC   F'0',X'0000',CL10'7039033783'\n          DC   F'0',X'0000',CL10'3755663894'\n          DC   F'0',X'0000',CL10'8459674825'\n          DC   F'0',X'0000',CL10'8392614976'\n          DC   F'0',X'0000',CL10'1608840747'\n          DC   F'0',X'0000',CL10'1252476538'\n          DC   F'0',X'0000',CL10'1869574749'\n          DC   F'0',X'0000',CL10'7979475780'\n          DC   F'0',X'0000',CL10'2009368031'\n          DC   F'0',X'0000',CL10'1176047902'\n          DC   F'0',X'0000',CL10'2978879793'\n          DC   F'0',X'0000',CL10'8647956104'\n          DC   F'0',X'0000',CL10'5171457235'\n          DC   F'0',X'0000',CL10'1406211586'\n          DC   F'0',X'0000',CL10'4255455557'\n          DC   F'0',X'0000',CL10'8977793548'\n          DC   F'0',X'0000',CL10'5371357959'\n          DC   F'0',X'0000',CL10'0857169190'\n          DC   F'0',X'0000',CL10'4365695641'\n          DC   F'0',X'0000',CL10'3410613712'\n          DC   F'0',X'0000',CL10'2813767803'\n          DC   F'0',X'0000',CL10'9225330314'\n          DC   F'0',X'0000',CL10'2863161645'\n          DC   F'0',X'0000',CL10'8775370196'\n          DC   F'0',X'0000',CL10'6410072367'\n          DC   F'0',X'0000',CL10'0356352558'\n          DC   F'0',X'0000',CL10'8800423169'\n          DC   F'0',X'0000',CL10'1520984600'\n          DC   F'0',X'0000',CL10'8127785251'\n          DC   F'0',X'0000',CL10'1727381522'\n          DC   F'0',X'0000',CL10'5280097813'\n          DC   F'0',X'0000',CL10'9592186524'\n          DC   F'0',X'0000',CL10'5167188055'\n          DC   F'0',X'0000',CL10'7020490806'\n          DC   F'0',X'0000',CL10'4041091177'\n          DC   F'0',X'0000',CL10'4564553568'\n          DC   F'0',X'0000',CL10'9501170379'\n          DC   F'0',X'0000',CL10'5643322010'\n          DC   F'0',X'0000',CL10'6656036861'\n          DC   F'0',X'0000',CL10'9734751332'\n          DC   F'0',X'0000',CL10'3994269823'\n          DC   F'0',X'0000',CL10'4332924734'\n          DC   F'0',X'0000',CL10'3795936465'\n          DC   F'0',X'0000',CL10'0341973416'\n          DC   F'0',X'0000',CL10'2396911987'\n          DC   F'0',X'0000',CL10'3658796578'\n          DC   F'0',X'0000',CL10'3297999589'\n          DC   F'0',X'0000',CL10'4976581420'\n          DC   F'0',X'0000',CL10'8990850471'\n          DC   F'0',X'0000',CL10'8321123142'\n          DC   F'0',X'0000',CL10'3452683833'\n          DC   F'0',X'0000',CL10'4511944944'\n          DC   F'0',X'0000',CL10'4541806875'\n          DC   F'0',X'0000',CL10'6620218026'\n          DC   F'0',X'0000',CL10'2005934797'\n          DC   F'0',X'0000',CL10'8575481588'\n          DC   F'0',X'0000',CL10'0495310799'\n          DC   F'0',X'0000',CL10'3353162830'\n          DC   F'0',X'0000',CL10'5852626081'\n          DC   F'0',X'0000',CL10'1654896952'\n          DC   F'0',X'0000',CL10'5031739843'\n          DC   F'0',X'0000',CL10'3673647154'\n          DC   F'0',X'0000',CL10'3277199285'\n          DC   F'0',X'0000',CL10'3415624636'\n          DC   F'0',X'0000',CL10'4676559607'\n          DC   F'0',X'0000',CL10'5131008598'\n          DC   F'0',X'0000',CL10'1877504009'\n          DC   F'0',X'0000',CL10'2685466240'\n          DC   F'0',X'0000',CL10'5641763691'\n          DC   F'0',X'0000',CL10'3184472762'\n          DC   F'0',X'0000',CL10'2987837853'\n          DC   F'0',X'0000',CL10'3842431364'\n          DC   F'0',X'0000',CL10'1954513695'\n          DC   F'0',X'0000',CL10'3968593246'\n          DC   F'0',X'0000',CL10'9497186417'\n          DC   F'0',X'0000',CL10'0021777608'\n          DC   F'0',X'0000',CL10'4708979219'\n          DC   F'0',X'0000',CL10'8965891650'\n          DC   F'0',X'0000',CL10'0438663301'\n          DC   F'0',X'0000',CL10'1638250572'\n          DC   F'0',X'0000',CL10'0457377863'\n          DC   F'0',X'0000',CL10'1522697574'\n          DC   F'0',X'0000',CL10'4606150105'\n          DC   F'0',X'0000',CL10'3199523856'\n          DC   F'0',X'0000',CL10'8836215227'\n          DC   F'0',X'0000',CL10'6824188618'\n          DC   F'0',X'0000',CL10'8734136429'\n          DC   F'0',X'0000',CL10'8266839060'\n          DC   F'0',X'0000',CL10'2003724911'\n          DC   F'0',X'0000',CL10'7024630382'\n          DC   F'0',X'0000',CL10'5456759873'\n          DC   F'0',X'0000',CL10'3698845784'\n          DC   F'0',X'0000',CL10'3344508515'\n          DC   F'0',X'0000',CL10'3708816466'\n          DC   F'0',X'0000',CL10'4342046037'\n          DC   F'0',X'0000',CL10'1994641628'\n          DC   F'0',X'0000',CL10'2177375639'\n          DC   F'0',X'0000',CL10'2740708470'\n          DC   F'0',X'0000',CL10'7777348521'\n          DC   F'0',X'0000',CL10'6632012192'\n          DC   F'0',X'0000',CL10'6882383883'\n          DC   F'0',X'0000',CL10'3835275994'\n          DC   F'0',X'0000',CL10'4361988925'\n          DC   F'0',X'0000',CL10'1776871076'\n          DC   F'0',X'0000',CL10'2943078847'\n          DC   F'0',X'0000',CL10'0869536638'\n          DC   F'0',X'0000',CL10'7743096849'\n          DC   F'0',X'0000',CL10'6619899880'\n          DC   F'0',X'0000',CL10'6879934131'\n          DC   F'0',X'0000',CL10'1028796002'\n          DC   F'0',X'0000',CL10'0510649893'\n          DC   F'0',X'0000',CL10'7876388204'\n          DC   F'0',X'0000',CL10'3930991335'\n          DC   F'0',X'0000',CL10'3364087686'\n          DC   F'0',X'0000',CL10'2847713657'\n          DC   F'0',X'0000',CL10'3665273648'\n          DC   F'0',X'0000',CL10'8615700059'\n          DC   F'0',X'0000',CL10'2216813290'\n          DC   F'0',X'0000',CL10'6111881741'\n          DC   F'0',X'0000',CL10'0063381812'\n          DC   F'0',X'0000',CL10'4997957903'\n          DC   F'0',X'0000',CL10'0246582414'\n          DC   F'0',X'0000',CL10'4403915745'\n          DC   F'0',X'0000',CL10'0110866296'\n          DC   F'0',X'0000',CL10'9544350467'\n          DC   F'0',X'0000',CL10'1478252658'\n          DC   F'0',X'0000',CL10'4459585269'\n          DC   F'0',X'0000',CL10'5923848700'\n          DC   F'0',X'0000',CL10'5953591351'\n          DC   F'0',X'0000',CL10'8864169622'\n          DC   F'0',X'0000',CL10'7880707913'\n          DC   F'0',X'0000',CL10'9850258624'\n          DC   F'0',X'0000',CL10'0213162155'\n          DC   F'0',X'0000',CL10'5337606906'\n          DC   F'0',X'0000',CL10'1801389277'\n          DC   F'0',X'0000',CL10'2284873668'\n          DC   F'0',X'0000',CL10'7419152479'\n          DC   F'0',X'0000',CL10'4213406110'\n          DC   F'0',X'0000',CL10'6565462961'\n          DC   F'0',X'0000',CL10'3839559432'\n          DC   F'0',X'0000',CL10'1575299923'\n          DC   F'0',X'0000',CL10'6071816834'\n          DC   F'0',X'0000',CL10'3871130565'\n          DC   F'0',X'0000',CL10'0044709516'\n          DC   F'0',X'0000',CL10'7667230087'\n          DC   F'0',X'0000',CL10'6941536678'\n          DC   F'0',X'0000',CL10'8118801689'\n          DC   F'0',X'0000',CL10'9637885520'\n          DC   F'0',X'0000',CL10'3787896571'\n          DC   F'0',X'0000',CL10'8677951242'\n          DC   F'0',X'0000',CL10'9378133933'\n          DC   F'0',X'0000',CL10'4775657044'\n          DC   F'0',X'0000',CL10'1970220975'\n          DC   F'0',X'0000',CL10'8912574126'\n          DC   F'0',X'0000',CL10'0470272897'\n          DC   F'0',X'0000',CL10'5184641688'\n          DC   F'0',X'0000',CL10'1662932899'\n          DC   F'0',X'0000',CL10'6829686930'\n          DC   F'0',X'0000',CL10'5141292181'\n          DC   F'0',X'0000',CL10'0347745052'\n          DC   F'0',X'0000',CL10'1465609943'\n          DC   F'0',X'0000',CL10'4306179254'\n          DC   F'0',X'0000',CL10'1182833385'\n          DC   F'0',X'0000',CL10'6301600736'\n          DC   F'0',X'0000',CL10'4818917707'\n          DC   F'0',X'0000',CL10'1630588698'\n          DC   F'0',X'0000',CL10'3635946109'\n          DC   F'0',X'0000',CL10'8501210340'\n          DC   F'0',X'0000',CL10'5826049791'\n          DC   F'0',X'0000',CL10'5097340862'\n          DC   F'0',X'0000',CL10'0894127953'\n          DC   F'0',X'0000',CL10'1487783464'\n          DC   F'0',X'0000',CL10'4261367795'\n          DC   F'0',X'0000',CL10'2252189346'\n          DC   F'0',X'0000',CL10'2601564517'\n          DC   F'0',X'0000',CL10'1775777708'\n          DC   F'0',X'0000',CL10'6102241319'\n          DC   F'0',X'0000',CL10'1444855750'\n          DC   F'0',X'0000',CL10'4722569401'\n          DC   F'0',X'0000',CL10'4455138672'\n          DC   F'0',X'0000',CL10'9600087963'\n          DC   F'0',X'0000',CL10'7624869674'\n          DC   F'0',X'0000',CL10'6038224205'\n          DC   F'0',X'0000',CL10'8484739956'\n          DC   F'0',X'0000',CL10'8986613327'\n          DC   F'0',X'0000',CL10'7996608718'\n          DC   F'0',X'0000',CL10'3606218529'\n          DC   F'0',X'0000',CL10'2533023160'\n          DC   F'0',X'0000',CL10'0391251011'\n          DC   F'0',X'0000',CL10'1229538482'\n          DC   F'0',X'0000',CL10'4399889973'\n          DC   F'0',X'0000',CL10'4501837884'\n          DC   F'0',X'0000',CL10'9425802615'\n          DC   F'0',X'0000',CL10'4399652566'\n          DC   F'0',X'0000',CL10'8422464137'\n          DC   F'0',X'0000',CL10'5549481728'\n          DC   F'0',X'0000',CL10'9172277739'\n          DC   F'0',X'0000',CL10'4718112570'\n          DC   F'0',X'0000',CL10'7072494621'\n          DC   F'0',X'0000',CL10'5508940292'\n          DC   F'0',X'0000',CL10'2989933983'\n          DC   F'0',X'0000',CL10'0383088094'\n          DC   F'0',X'0000',CL10'1416503025'\n          DC   F'0',X'0000',CL10'3077327176'\n          DC   F'0',X'0000',CL10'0637516947'\n          DC   F'0',X'0000',CL10'8570796738'\n          DC   F'0',X'0000',CL10'0304818949'\n          DC   F'0',X'0000',CL10'3032523980'\n          DC   F'0',X'0000',CL10'0686700231'\n          DC   F'0',X'0000',CL10'0661744102'\n          DC   F'0',X'0000',CL10'9946619993'\n          DC   F'0',X'0000',CL10'6013020304'\n          DC   F'0',X'0000',CL10'9082725435'\n          DC   F'0',X'0000',CL10'7278163786'\n          DC   F'0',X'0000',CL10'6640171757'\n          DC   F'0',X'0000',CL10'6076953748'\n          DC   F'0',X'0000',CL10'4988242159'\n          DC   F'0',X'0000',CL10'0588657390'\n          DC   F'0',X'0000',CL10'4834267841'\n          DC   F'0',X'0000',CL10'9336349912'\n          DC   F'0',X'0000',CL10'2726348003'\n          DC   F'0',X'0000',CL10'0616034514'\n          DC   F'0',X'0000',CL10'5576869845'\n          DC   F'0',X'0000',CL10'5442562396'\n          DC   F'0',X'0000',CL10'4718828567'\n          DC   F'0',X'0000',CL10'7964352758'\n          DC   F'0',X'0000',CL10'7686947369'\n          DC   F'0',X'0000',CL10'4578912800'\n          DC   F'0',X'0000',CL10'6795597451'\n          DC   F'0',X'0000',CL10'9461157722'\n          DC   F'0',X'0000',CL10'7665518013'\n          DC   F'0',X'0000',CL10'7896530724'\n          DC   F'0',X'0000',CL10'6131336255'\n          DC   F'0',X'0000',CL10'7690923006'\n          DC   F'0',X'0000',CL10'6441887377'\n          DC   F'0',X'0000',CL10'1009393768'\n          DC   F'0',X'0000',CL10'5345334579'\n          DC   F'0',X'0000',CL10'2275690210'\n          DC   F'0',X'0000',CL10'3531089061'\n          DC   F'0',X'0000',CL10'0244567532'\n          DC   F'0',X'0000',CL10'5980530023'\n          DC   F'0',X'0000',CL10'2038908934'\n          DC   F'0',X'0000',CL10'4058524665'\n          DC   F'0',X'0000',CL10'1823645616'\n          DC   F'0',X'0000',CL10'2657748187'\n          DC   F'0',X'0000',CL10'4868476778'\n          DC   F'0',X'0000',CL10'3387803789'\n          DC   F'0',X'0000',CL10'7031389620'\n          DC   F'0',X'0000',CL10'7681142671'\n          DC   F'0',X'0000',CL10'8174979342'\n          DC   F'0',X'0000',CL10'9767784033'\n          DC   F'0',X'0000',CL10'3707569144'\n          DC   F'0',X'0000',CL10'6750835075'\n          DC   F'0',X'0000',CL10'9321130226'\n          DC   F'0',X'0000',CL10'9494810997'\n          DC   F'0',X'0000',CL10'8078001788'\n          DC   F'0',X'0000',CL10'1718754999'\n          DC   F'0',X'0000',CL10'4278411030'\n          DC   F'0',X'0000',CL10'3566158281'\n          DC   F'0',X'0000',CL10'3020793152'\n          DC   F'0',X'0000',CL10'8003680043'\n          DC   F'0',X'0000',CL10'6046911354'\n          DC   F'0',X'0000',CL10'1680667485'\n          DC   F'0',X'0000',CL10'1343776836'\n          DC   F'0',X'0000',CL10'4361475807'\n          DC   F'0',X'0000',CL10'4054368798'\n          DC   F'0',X'0000',CL10'0722588209'\n          DC   F'0',X'0000',CL10'7529154440'\n          DC   F'0',X'0000',CL10'3186535891'\n          DC   F'0',X'0000',CL10'3830408962'\n          DC   F'0',X'0000',CL10'2544618053'\n          DC   F'0',X'0000',CL10'0681335564'\n          DC   F'0',X'0000',CL10'2400421895'\n          DC   F'0',X'0000',CL10'4731985446'\n          DC   F'0',X'0000',CL10'1946142617'\n          DC   F'0',X'0000',CL10'7093977808'\n          DC   F'0',X'0000',CL10'7263703419'\n          DC   F'0',X'0000',CL10'4376019850'\n          DC   F'0',X'0000',CL10'2222675501'\n          DC   F'0',X'0000',CL10'4932226772'\n          DC   F'0',X'0000',CL10'4126998063'\n          DC   F'0',X'0000',CL10'3715241774'\n          DC   F'0',X'0000',CL10'4542498305'\n          DC   F'0',X'0000',CL10'8006156056'\n          DC   F'0',X'0000',CL10'0217211427'\n          DC   F'0',X'0000',CL10'8373228818'\n          DC   F'0',X'0000',CL10'0686500629'\n          DC   F'0',X'0000',CL10'2491407260'\n          DC   F'0',X'0000',CL10'6034977111'\n          DC   F'0',X'0000',CL10'1934646582'\n          DC   F'0',X'0000',CL10'8367220073'\n          DC   F'0',X'0000',CL10'1733029984'\n          DC   F'0',X'0000',CL10'1819296715'\n          DC   F'0',X'0000',CL10'7366688666'\n          DC   F'0',X'0000',CL10'6423082237'\n          DC   F'0',X'0000',CL10'1948521828'\n          DC   F'0',X'0000',CL10'8815379839'\n          DC   F'0',X'0000',CL10'5627716670'\n          DC   F'0',X'0000',CL10'5663840721'\n          DC   F'0',X'0000',CL10'7726068392'\n          DC   F'0',X'0000',CL10'1761684083'\n          DC   F'0',X'0000',CL10'7799100194'\n          DC   F'0',X'0000',CL10'2023217125'\n          DC   F'0',X'0000',CL10'2693983276'\n          DC   F'0',X'0000',CL10'3092155047'\n          DC   F'0',X'0000',CL10'0756256838'\n          DC   F'0',X'0000',CL10'3954741049'\n          DC   F'0',X'0000',CL10'9617348080'\n          DC   F'0',X'0000',CL10'3829666331'\n          DC   F'0',X'0000',CL10'8474892202'\n          DC   F'0',X'0000',CL10'7686790093'\n          DC   F'0',X'0000',CL10'7457852404'\n          DC   F'0',X'0000',CL10'3026659535'\n          DC   F'0',X'0000',CL10'3548439886'\n          DC   F'0',X'0000',CL10'4032829857'\n          DC   F'0',X'0000',CL10'2612833848'\n          DC   F'0',X'0000',CL10'8888984259'\n          DC   F'0',X'0000',CL10'8372701490'\n          DC   F'0',X'0000',CL10'0932853941'\n          DC   F'0',X'0000',CL10'9629518012'\n          DC   F'0',X'0000',CL10'2398938103'\n          DC   F'0',X'0000',CL10'4733686614'\n          DC   F'0',X'0000',CL10'8782023945'\n          DC   F'0',X'0000',CL10'5170458496'\n          DC   F'0',X'0000',CL10'0333506667'\n          DC   F'0',X'0000',CL10'6214652858'\n          DC   F'0',X'0000',CL10'2882509469'\n          DC   F'0',X'0000',CL10'9886176900'\n          DC   F'0',X'0000',CL10'1053803551'\n          DC   F'0',X'0000',CL10'1918345822'\n          DC   F'0',X'0000',CL10'1034528113'\n          DC   F'0',X'0000',CL10'8131002824'\n          DC   F'0',X'0000',CL10'5321710355'\n          DC   F'0',X'0000',CL10'4480439106'\n          DC   F'0',X'0000',CL10'6362585477'\n          DC   F'0',X'0000',CL10'7138113868'\n          DC   F'0',X'0000',CL10'7679716679'\n          DC   F'0',X'0000',CL10'2230174310'\n          DC   F'0',X'0000',CL10'7952915161'\n          DC   F'0',X'0000',CL10'7349775632'\n          DC   F'0',X'0000',CL10'3609960123'\n          DC   F'0',X'0000',CL10'6634201034'\n          DC   F'0',X'0000',CL10'6758118765'\n          DC   F'0',X'0000',CL10'6078781716'\n          DC   F'0',X'0000',CL10'5768466287'\n          DC   F'0',X'0000',CL10'3839616878'\n          DC   F'0',X'0000',CL10'3505005889'\n          DC   F'0',X'0000',CL10'9557093720'\n          DC   F'0',X'0000',CL10'1070588771'\n          DC   F'0',X'0000',CL10'5212207442'\n          DC   F'0',X'0000',CL10'1021634133'\n          DC   F'0',X'0000',CL10'5707681244'\n          DC   F'0',X'0000',CL10'1283649175'\n          DC   F'0',X'0000',CL10'8245886326'\n          DC   F'0',X'0000',CL10'7479549097'\n          DC   F'0',X'0000',CL10'3655561888'\n          DC   F'0',X'0000',CL10'5062777099'\n          DC   F'0',X'0000',CL10'8099335130'\n          DC   F'0',X'0000',CL10'1527224381'\n          DC   F'0',X'0000',CL10'8074041252'\n          DC   F'0',X'0000',CL10'1045950143'\n          DC   F'0',X'0000',CL10'3295843454'\n          DC   F'0',X'0000',CL10'7170701585'\n          DC   F'0',X'0000',CL10'8942152936'\n          DC   F'0',X'0000',CL10'1704233907'\n          DC   F'0',X'0000',CL10'8802348898'\n          DC   F'0',X'0000',CL10'7537430309'\n          DC   F'0',X'0000',CL10'2169298540'\n          DC   F'0',X'0000',CL10'8123221991'\n          DC   F'0',X'0000',CL10'7783677062'\n          DC   F'0',X'0000',CL10'4339308153'\n          DC   F'0',X'0000',CL10'5823087664'\n          DC   F'0',X'0000',CL10'8771675995'\n          DC   F'0',X'0000',CL10'1807981546'\n          DC   F'0',X'0000',CL10'5930920717'\n          DC   F'0',X'0000',CL10'2376377908'\n          DC   F'0',X'0000',CL10'2593365519'\n          DC   F'0',X'0000',CL10'0159383950'\n          DC   F'0',X'0000',CL10'3338981601'\n          DC   F'0',X'0000',CL10'1469514872'\n          DC   F'0',X'0000',CL10'0438108163'\n          DC   F'0',X'0000',CL10'4193813874'\n          DC   F'0',X'0000',CL10'2518972405'\n          DC   F'0',X'0000',CL10'2163772156'\n          DC   F'0',X'0000',CL10'0928009527'\n          DC   F'0',X'0000',CL10'4354048918'\n          DC   F'0',X'0000',CL10'4374982729'\n          DC   F'0',X'0000',CL10'0541991360'\n          DC   F'0',X'0000',CL10'9334903211'\n          DC   F'0',X'0000',CL10'7539954682'\n          DC   F'0',X'0000',CL10'3758750173'\n          DC   F'0',X'0000',CL10'9792422084'\n          DC   F'0',X'0000',CL10'2924990815'\n          DC   F'0',X'0000',CL10'3009924766'\n          DC   F'0',X'0000',CL10'6743900337'\n          DC   F'0',X'0000',CL10'7591761928'\n          DC   F'0',X'0000',CL10'5506681939'\n          DC   F'0',X'0000',CL10'7869520770'\n          DC   F'0',X'0000',CL10'3951386821'\n          DC   F'0',X'0000',CL10'1683396492'\n          DC   F'0',X'0000',CL10'9597634183'\n          DC   F'0',X'0000',CL10'0483312294'\n          DC   F'0',X'0000',CL10'8582131225'\n          DC   F'0',X'0000',CL10'1026839376'\n          DC   F'0',X'0000',CL10'8706993147'\n          DC   F'0',X'0000',CL10'3825916938'\n          DC   F'0',X'0000',CL10'3092863149'\n          DC   F'0',X'0000',CL10'8774372180'\n          DC   F'0',X'0000',CL10'6708832431'\n          DC   F'0',X'0000',CL10'2868240302'\n          DC   F'0',X'0000',CL10'0131160193'\n          DC   F'0',X'0000',CL10'6610884504'\n          DC   F'0',X'0000',CL10'8162793635'\n          DC   F'0',X'0000',CL10'2574915986'\n          DC   F'0',X'0000',CL10'3425687957'\n          DC   F'0',X'0000',CL10'9672913948'\n          DC   F'0',X'0000',CL10'4717926359'\n          DC   F'0',X'0000',CL10'7968945590'\n          DC   F'0',X'0000',CL10'4807640041'\n          DC   F'0',X'0000',CL10'9342886112'\n          DC   F'0',X'0000',CL10'0415728203'\n          DC   F'0',X'0000',CL10'6999538714'\n          DC   F'0',X'0000',CL10'6419378045'\n          DC   F'0',X'0000',CL10'9694554596'\n          DC   F'0',X'0000',CL10'4788384767'\n          DC   F'0',X'0000',CL10'2629152958'\n          DC   F'0',X'0000',CL10'4446271569'\n          DC   F'0',X'0000',CL10'4245641000'\nLASTUN   EQU   *-16\n*\nLISTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'MULTIPLE LIST INSERTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n*---------------------------------------------------------------------*\n*      FOR P=1,2, ... ,M                                              *\n*          HEAD(P) <- ZERO                                            *\n*      ENDFOR                                                         *\n*      FOR J = N,N-1, ... ,1                                          *\n*          Q <- (M*K(J))/MAX      ZER0 =< KEY < MAX                   *\n*          Q <- LOC(HEAD(Q))                                          *\n*          K <- K(J)                                                  *\n*          GOTO H4                                                    *\n* H3.      IF K LE K(P)                                               *\n*             GOTO INSERT.                                            *\n*          Q <- P                                                     *\n* H4.      P <- LINK(Q)                                               *\n*          IF P NOT = ZERO                                            *\n*             GOTO H3.                                                *\n* INSERT   LINK(Q) <- LOC(R(J)                                        *\n*          LINK(LOC(R(J)) <- P                                        *\n*      ENDFOR                                                         *\n*---------------------------------------------------------------------*\n         L     R1,=A(HEAD)         BASE FOR LIST HEADS\n         XC    DBLWORD,DBLWORD\n         L     R2,=A(LASTUN)       J <- N\nINDEX    PACK  DBLWORD+6(2),6(3,R2) CALC INDEX TO LIST HEAD\n         CVB   R3,DBLWORD          LEFT 12 BITS (3 DIGIT)\n*                                  INDEX TO ONE OF 1024 LISTS\n         SLL   R3,2                TIMES FOUR IS DISPLACEMENT\n         LA    R3,0(R3,R1)         Q <- PTR HEAD(Q)\n         B     TSTLINK\nCOMPARE  CLC   6(10,R2),6(R4)      K(J) LE K(P)\n         BNH   INSERT              YES\n         LR    R3,R4               NO, Q <- P\nTSTLINK  L     R4,0(R3)            P <- LINK(Q)\n         LTR   R4,R4               END OF LIST?\n         BP    COMPARE             NO\nINSERT   ST    R2,0(R3)            LINK(Q) <- R(J)\n         ST    R4,0(R2)            LINK R(J) <- P\n         S     R2,=F'16'           NEXT J\n         CL    R2,=A(UNSORTED)     J GE 1 ?\n         BNL   INDEX\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1024\n         L     R6,=A(HEAD)         HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nNEXTLIST L     R3,0(R6)\n         B     ENDTST              EMPTY?\nPRTLOOP2 MVC   OUTKEY,6(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    L     R3,0(R3)            NEXT SORTED REC\nENDTST   LTR   R3,R3               END OF LIST ?\n         BNZ   PRTLOOP2            BRANCH IF MORE RECS\n         LA    R6,4(R6)            NEXT LIST HEAD\n         BCT   R2,NEXTLIST\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00028": {"ttr": 7937, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\x03\\x01\\x03\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 259, "newlines": 259, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL SLOWSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00028'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'SHORT SLOW SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        A VERY SHORT AND VERY SLOW SORT                              *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 102 EX. 5.2.1-3                           *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nSLOWSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n*\nSLOWSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'SHORT SLOW SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         B     SORTN\nH2       MVC   TEMP,0(R2)\n         CLC   TEMP,3(R2)\n         BNH   H1\n         MVC   0(3,R2),3(R2)\n         MVC   3(3,R2),TEMP\nSORTN    EQU   *\n         L     R2,=A(LASTUN)\nH1       S     R2,=F'3'\n         CL    R2,=A(UNSORTED)\n         BNL   H2\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00029": {"ttr": 7942, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x04\\xdb\\x04\\xdb\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1243, "newlines": 1243, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL SLOWSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00029'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'SHORT SLOW SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        A VERY SHORT AND VERY SLOW SORT                              *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 102 EX. 5.2.1 NUMBER 3                    *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nSLOWSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n*\nSLOWSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'SHORT SLOW SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         B     SORTN\nH2       MVC   TEMP,0(R2)\n         CLC   TEMP,10(R2)\n         BNH   H1\n         MVC   0(10,R2),10(R2)\n         MVC   10(10,R2),TEMP\nSORTN    EQU   *\n         L     R2,=A(LASTUN)\nH1       S     R2,=F'10'\n         CL    R2,=A(UNSORTED)\n         BNL   H2\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00030": {"ttr": 8454, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\n\\x01\\n\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 266, "newlines": 266, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL BUBLSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00030'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'BUBBLE SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        BUBBLE SORT                                                  *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 106-110                                   *\n*                                                                     *\n*        SLOW                                                         *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nBUBLSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n*\nBUBLSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'BUBBLE SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         L     R1,=A(LASTUN)       BOUND <- N\nZEROT    SR    R2,R2               T <- ZERO\n         L     R3,=A(UNSORTED)     J <- 1\n         B     TESTJ\nCOMPARE  CLC   0(3,R3),3(R3)       K(J) > K(J+1) ?\n         BNH   NEXTJ\n         XC    0(3,R3),3(R3)       INTERCHANGE R(J) AND (R(J+1)\n         XC    3(3,R3),0(R3)\n         XC    0(3,R3),3(R3)\n         LR    R2,R3               T <- J\nNEXTJ    LA    R3,3(R3)            J <- J+1\nTESTJ    CR    R3,R1               J LE BOUND-1 ?\n         BL    COMPARE             YES\n         LTR   R2,R2               ANY EXCHANGES?\n         BZ    SEXIT               NO DONE\n         LR    R1,R2               BOUND <- T\n         B     ZEROT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00031": {"ttr": 8459, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x04\\xe2\\x04\\xe2\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1250, "newlines": 1250, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL BUBLSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00031'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'BUBBLE SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        04 APR 1983 - CHARLES HOTTEL                                 *\n*        BUBBLE SORT                                                  *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 106-110                                   *\n*                                                                     *\n*        SLOW                                                         *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nBUBLSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL129' '\n*\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n*\nBUBLSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'BUBBLE SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         L     R1,=A(LASTUN)       BOUND <- N\nZEROT    SR    R2,R2               T <- ZERO\n         L     R3,=A(UNSORTED)     J <- 1\n         B     TESTJ\nCOMPARE  CLC   0(10,R3),10(R3)     K(J) > K(J+1) ?\n         BNH   NEXTJ\n         XC    0(10,R3),10(R3)     INTERCHANGE R(J) AND (R(J+1)\n         XC    10(10,R3),0(R3)\n         XC    0(10,R3),10(R3)\n         LR    R2,R3               T <- J\nNEXTJ    LA    R3,10(R3)           J <- J+1\nTESTJ    CR    R3,R1               J LE BOUND-1 ?\n         BL    COMPARE             YES\n         LTR   R2,R2               ANY EXCHANGES?\n         BZ    SEXIT               NO DONE\n         LR    R1,R2               BOUND <- T\n         B     ZEROT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00032": {"ttr": 8970, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01*\\x01*\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 298, "newlines": 298, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL BATRSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00032'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'BATCHERS MERGE EXCHANGE SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        09 APR 1983 - CHARLES HOTTEL                                 *\n*        BATCHER'S MERGE EXCHANGE SORT                                *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 111-114                                   *\n*                                                                     *\n*        ESSENTIALLY SORT R1,R3,R5, ...                               *\n*                     AND R2,R4,R6, ... INDEPENDENLT                  *\n*        AND THEN MERGE.                                              *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nBATRSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n*\nBATRSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'BATCHERS MERGE EXCHANGE SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LR    R15,R9\n         DROP  R9\n         USING SORTRTN,R15\n         L     R12,=A(UNSORTED)    BASE FOR RECS\n         LA    R1,8                P <- 2**(T-1)\nLOOPP    LA    R5,8                Q <- 2**(T-1)\n         SR    R2,R2               R <- ZERO\n         LR    R14,R1              D <- P\n         LR    R4,R1               R4 <- D\nLOOPI    S     R4,=F'16'           R4 <- D-N\n         SR    R3,R3               I <- ZERO\nTESTIPR  LR    R6,R3               R6 <- I\n         NR    R6,R1               R6 <- (I AND P)\n         CR    R6,R2               (I AND P) = R ?\n         BE    COMPARE             YES\n         AR    R3,R1               I <- I + P\n         AR    R4,R1               R4 <- R4 + P\n         BC    10,NEXTQ            >=ZERO\nCOMPARE  LR    R7,R3               CALC PTR K(I+1)\n         M     R6,=F'3'\n         LA    R7,0(R7,R12)        R7 <- PTR K(I+1)\n         LR    R9,R3               CALC PTR K(I+D+1)\n         AR    R9,R14\n         M     R8,=F'3'\n         LA    R9,0(R9,R12)        R9 <- PTR K(I+D+1)\n         CLC   0(3,R7),0(R9)       K(I+1) . K(I+D+1) ?\n         BNH   NEXTI               NO, LOW OR EQUAL\n         XC    0(3,R7),0(R9)       INTERCHANGE\n         XC    0(3,R9),0(R7)\n         XC    0(3,R7),0(R9)\nNEXTI    LA    R3,1(R3)            I <- I + 1\n         A     R4,=F'1'            I+D < N ?\n         BM    TESTIPR             YES\nNEXTQ    LR    R2,R1               R ,- P\n         LR    R4,R5               R4 <- Q\n         SR    R4,R1\n         LR    R14,R4\n         SRL   R5,1                Q <- Q/2\n         LTR   R4,R4\n         BP    LOOPI\nNEXTP    SRL   R1,1                P <- P/2\n         LTR   R1,R1\n         BNZ   LOOPP\n         B     SEXIT\n         LTORG\n         DROP  R15\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00033": {"ttr": 9222, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\x02\\x05\\x02\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1282, "newlines": 1282, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL BATRSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00033'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'BATCHERS MERGE EXCHANGE SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        09 APR 1983 - CHARLES HOTTEL                                 *\n*        BATCHER'S MERGE EXCHANGE SORT                                *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 111-114                                   *\n*                                                                     *\n*        ESSENTIALLY SORT R1,R3,R5, ...                               *\n*                     AND R2,R4,R6, ... INDEPENDENLT                  *\n*        AND THEN MERGE.                                              *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nBATRSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n*\nBATRSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'BATCHERS MERGE EXCHANGE SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LR    R15,R9\n         DROP  R9\n         USING SORTRTN,R15\n         L     R12,=A(UNSORTED)    BASE FOR RECS\n         LA    R1,512              P <- 2**(T-1)\nLOOPP    LA    R5,512              Q <- 2**(T-1)\n         SR    R2,R2               R <- ZERO\n         LR    R14,R1              D <- P\n         LR    R4,R1               R4 <- D\nLOOPI    S     R4,=F'1000'         R4 <- D-N\n         SR    R3,R3               I <- ZERO\nTESTIPR  LR    R6,R3               R6 <- I\n         NR    R6,R1               R6 <- (I AND P)\n         CR    R6,R2               (I AND P) = R ?\n         BE    COMPARE             YES\n         AR    R3,R1               I <- I + P\n         AR    R4,R1               R4 <- R4 + P\n         BC    10,NEXTQ            >=ZERO\nCOMPARE  LR    R7,R3               CALC PTR K(I+1)\n         M     R6,=F'10'\n         LA    R7,0(R7,R12)        R7 <- PTR K(I+1)\n         LR    R9,R3               CALC PTR K(I+D+1)\n         AR    R9,R14\n         M     R8,=F'10'\n         LA    R9,0(R9,R12)        R9 <- PTR K(I+D+1)\n         CLC   0(10,R7),0(R9)      K(I+1) . K(I+D+1) ?\n         BNH   NEXTI               NO, LOW OR EQUAL\n         XC    0(10,R7),0(R9)      INTERCHANGE\n         XC    0(10,R9),0(R7)\n         XC    0(10,R7),0(R9)\nNEXTI    LA    R3,1(R3)            I <- I + 1\n         A     R4,=F'1'            I+D < N ?\n         BM    TESTIPR             YES\nNEXTQ    LR    R2,R1               R ,- P\n         LR    R4,R5               R4 <- Q\n         SR    R4,R1\n         LR    R14,R4\n         SRL   R5,1                Q <- Q/2\n         LTR   R4,R4\n         BP    LOOPI\nNEXTP    SRL   R1,1                P <- P/2\n         LTR   R1,R1\n         BNZ   LOOPP\n         B     SEXIT\n         LTORG\n         DROP  R15\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00034": {"ttr": 9735, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01Q\\x01Q\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 337, "newlines": 337, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QUIKSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00034'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'QUICKSORT (PARTITION EXCHANGE)'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        13 APR 1983 - CHARLES HOTTEL                                 *\n*        QUICKSORT (PARTITION EXCHANGE)                               *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 114-123                                   *\n*                                                                     *\n*        TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE   *\n*        DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO     *\n*        NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND    *\n*        NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS    *\n*        PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO   *\n*        SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND       *\n*        (INDEPENDENTLY) R(S+1), ... ,R(N).                           *\n*                                                                     *\n*        M=9 SEEMS SLIGHTLY FASTER THAN M=8.                          *\n*                                                                     *\n*        VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.                 *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQUIKSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DC    XL3'000000'\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n         DC    XL3'FFFFFF'\n*\n         DS    0F\nSTACK    EQU   *\n         DC    20F'0'              2*LN(N) FULLWORDS\n*\nQUIKSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'QUICKSORT (PARTITION EXCHANGE)'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R2,=A(UNSORTED)     L <- 1\n         L     R3,=A(LASTUN)       R <- N\nNEWSTAGE LA    R5,3(R3)            J <- R+1\n         MVC   TEMP,0(R2)          K <- K(L)\n         LA    R4,3(R2)            I <- L+1\n         B     COMPARE1\nEXCHANGE XC    0(3,R4),0(R5)       INTERCHANGE\n         XC    0(3,R5),0(R4)         K(I) AND K(J)\n         XC    0(3,R4),0(R5)\nNEXTI    LA    R4,3(R4)            I <- I+1\nCOMPARE1 CLC   TEMP,0(R4)          K > K(I) ?\n         BH    NEXTI               YES\nNEXTJ    S     R5,=F'3'            J <- J-1\n         CLC   TEMP,0(R5)          K < K(J) ?\n         BL    NEXTJ               YES\nTESTIJ   CR    R5,R4               J > I?\n         BH    EXCHANGE            YES\n         MVC   0(3,R2),0(R5)       K(L) <- K(J)\n         MVC   0(3,R5),TEMP        K(J) <- K\nSTACKIT  LR    R12,R3              R12 <- R\n         SR    R12,R5              R12 <- (R-J)*3\n         S     R12,=F'27'          R12 <- R-J-M  (M=9)\n         LR    R15,R5              R15 <- J\n         SR    R15,R2              R15 <- (J-L)*3\n         S     R15,=F'27'          R15 <- J-L-M\n         LR    R8,R12\n         SR    R8,R15\n         BC    10,NEXTEST          JUMP IF R-J GE J-L\n         LTR   R15,R15\n         BNP   UNSTACK             JUMP IF M GE J-L > R-J\n         LTR   R12,R12\n         BNP   NEXTR               J-L > M GE R-J\n         LA    R6,8(R6)            NOW J-L > R-J > M\n         ST    R2,0(R6)            STACK <- L\n         LR    R14,R5              R14 <- J\n         S     R14,=F'3'           R14 <- J-1\n         ST    R14,4(R6)           STACK <- J-1\nNEXTL    LA    R2,3(R5)            L <- J+1\n         B     NEWSTAGE\nNEXTEST  LTR   R12,R12\n         BNP   UNSTACK             M GE R-J GE J-L\n         LTR   R15,R15\n         BNP   NEXTL               R-J > M GE J-L\n         LA    R6,8(R6)\n         ST    R3,4(R6)            STACK <- R\n         LA    R14,3(R5)           R14 <- J+1\n         ST    R14,0(R6)           STACK <- J+1\nNEXTR    LR    R3,R5\n         S     R3,=F'3'            R <- J-1\n         B     NEWSTAGE\nUNSTACK  L     R2,0(R6)            L <- STACK\n         L     R3,4(R6)            R <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   NEWSTAGE            NO\n         LA    R1,15               STRAIGHT INSERTION SORT\n         L     R2,=A(UNSORTED+3)   J\nSAVEKEY  MVC   TEMP,0(R2)          K <- K(J)\n         LR    R3,R2\n         S     R3,=F'3'            I <- J-1\n         CLC   TEMP,0(R3)          K GE K(J-1)\n         BNL   JNEXT               NO\nMOVEKEY  MVC   3(3,R3),0(R3)       K(I+1) <- K(I)\n         S     R3,=F'3'            I <- I-1\n         CLC   TEMP,0(R3)          K GE K(I)\n         BL    MOVEKEY             NO\n         MVC   3(3,R3),TEMP        YES, K(I+1) <- K\nJNEXT    LA    R2,3(R2)            J <- J+1\n         BCT   R1,SAVEKEY\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00035": {"ttr": 9987, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05)\\x05)\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1321, "newlines": 1321, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QUIKSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00035'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'QUICKSORT (PARTITION EXCHANGE)'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        13 APR 1983 - CHARLES HOTTEL                                 *\n*        QUICKSORT (PARTITION EXCHANGE)                               *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 114-123                                   *\n*                                                                     *\n*        TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE   *\n*        DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO     *\n*        NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND    *\n*        NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS    *\n*        PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO   *\n*        SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND       *\n*        (INDEPENDENTLY) R(S+1), ... ,R(N).                           *\n*                                                                     *\n*        M=9 SEEMS SLIGHTLY FASTER THAN M=8.                          *\n*                                                                     *\n*        VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.                 *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQUIKSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DC    XL10'00000000000000000000'\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n         DC    XL10'FFFFFFFFFFFFFFFFFFFF'\n*\n         DS    0F\nSTACK    EQU   *\n         DC    22F'0'              2*LN(N) FULLWORDS+2\n*\nQUIKSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'QUICKSORT (PARTITION EXCHANGE)'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R2,=A(UNSORTED)     L <- 1\n         L     R3,=A(LASTUN)       R <- N\nNEWSTAGE LA    R5,10(R3)           J <- R+1\n         MVC   TEMP,0(R2)          K <- K(L)\n         LA    R4,10(R2)           I <- L+1\n         B     COMPARE1\nEXCHANGE XC    0(10,R4),0(R5)      INTERCHANGE\n         XC    0(10,R5),0(R4)        K(I) AND K(J)\n         XC    0(10,R4),0(R5)\nNEXTI    LA    R4,10(R4)           I <- I+1\nCOMPARE1 CLC   TEMP,0(R4)          K > K(I) ?\n         BH    NEXTI               YES\nNEXTJ    S     R5,=F'10'           J <- J-1\n         CLC   TEMP,0(R5)          K < K(J) ?\n         BL    NEXTJ               YES\nTESTIJ   CR    R5,R4               J > I?\n         BH    EXCHANGE            YES\n         MVC   0(10,R2),0(R5)      K(L) <- K(J)\n         MVC   0(10,R5),TEMP       K(J) <- K\nSTACKIT  LR    R12,R3              R12 <- R\n         SR    R12,R5              R12 <- (R-J)*3\n         S     R12,=F'90'          R12 <- R-J-M  (M=9)\n         LR    R15,R5              R15 <- J\n         SR    R15,R2              R15 <- (J-L)*3\n         S     R15,=F'90'          R15 <- J-L-M\n         LR    R8,R12\n         SR    R8,R15\n         BC    10,NEXTEST          JUMP IF R-J GE J-L\n         LTR   R15,R15\n         BNP   UNSTACK             JUMP IF M GE J-L > R-J\n         LTR   R12,R12\n         BNP   NEXTR               J-L > M GE R-J\n         LA    R6,8(R6)            NOW J-L > R-J > M\n         ST    R2,0(R6)            STACK <- L\n         LR    R14,R5              R14 <- J\n         S     R14,=F'10'          R14 <- J-1\n         ST    R14,4(R6)           STACK <- J-1\nNEXTL    LA    R2,10(R5)           L <- J+1\n         B     NEWSTAGE\nNEXTEST  LTR   R12,R12\n         BNP   UNSTACK             M GE R-J GE J-L\n         LTR   R15,R15\n         BNP   NEXTL               R-J > M GE J-L\n         LA    R6,8(R6)\n         ST    R3,4(R6)            STACK <- R\n         LA    R14,10(R5)          R14 <- J+1\n         ST    R14,0(R6)           STACK <- J+1\nNEXTR    LR    R3,R5\n         S     R3,=F'10'           R <- J-1\n         B     NEWSTAGE\nUNSTACK  L     R2,0(R6)            L <- STACK\n         L     R3,4(R6)            R <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   NEWSTAGE            NO\n         LA    R1,999              STRAIGHT INSERTION SORT\n         L     R2,=A(UNSORTED+10)  J\nSAVEKEY  MVC   TEMP,0(R2)          K <- K(J)\n         LR    R3,R2\n         S     R3,=F'10'           I <- J-1\n         CLC   TEMP,0(R3)          K GE K(J-1)\n         BNL   JNEXT               NO\nMOVEKEY  MVC   10(10,R3),0(R3)     K(I+1) <- K(I)\n         S     R3,=F'10'           I <- I-1\n         CLC   TEMP,0(R3)          K GE K(I)\n         BL    MOVEKEY             NO\n         MVC   10(10,R3),TEMP      YES, K(I+1) <- K\nJNEXT    LA    R2,10(R2)           J <- J+1\n         BCT   R1,SAVEKEY\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00036": {"ttr": 10500, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01S\\x01S\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 339, "newlines": 339, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QUIKSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00036'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'QUICKSORT (PARTITION EXCHANGE)'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        13 APR 1983 - CHARLES HOTTEL                                 *\n*        QUICKSORT (PARTITION EXCHANGE)                               *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 114-123                                   *\n*                                                                     *\n*        TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE   *\n*        DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO     *\n*        NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND    *\n*        NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS    *\n*        PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO   *\n*        SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND       *\n*        (INDEPENDENTLY) R(S+1), ... ,R(N).                           *\n*                                                                     *\n*        M=9 SEEMS SLIGHTLY FASTER THAN M=8.                          *\n*                                                                     *\n*        VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.                 *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        TESTING WORST CASE: ALL RECORDS ALREADY IN ORDER             *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQUIKSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DC    XL3'000000'\nUNSORTED EQU   *\n         DC    CL3'061'\n         DC    CL3'087'\n         DC    CL3'154'\n         DC    CL3'170'\n         DC    CL3'275'\n         DC    CL3'426'\n         DC    CL3'503'\n         DC    CL3'509'\n         DC    CL3'512'\n         DC    CL3'612'\n         DC    CL3'653'\n         DC    CL3'677'\n         DC    CL3'703'\n         DC    CL3'765'\n         DC    CL3'897'\n         DC    CL3'908'\nLASTUN   EQU   *-3\n         DC    XL3'FFFFFF'\n*\n         DS    0F\nSTACK    EQU   *\n         DC    20F'0'              2*LN(N) FULLWORDS\n*\nQUIKSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'QUICKSORT (PARTITION EXCHANGE)'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R2,=A(UNSORTED)     L <- 1\n         L     R3,=A(LASTUN)       R <- N\nNEWSTAGE LA    R5,3(R3)            J <- R+1\n         MVC   TEMP,0(R2)          K <- K(L)\n         LA    R4,3(R2)            I <- L+1\n         B     COMPARE1\nEXCHANGE XC    0(3,R4),0(R5)       INTERCHANGE\n         XC    0(3,R5),0(R4)         K(I) AND K(J)\n         XC    0(3,R4),0(R5)\nNEXTI    LA    R4,3(R4)            I <- I+1\nCOMPARE1 CLC   TEMP,0(R4)          K > K(I) ?\n         BH    NEXTI               YES\nNEXTJ    S     R5,=F'3'            J <- J-1\n         CLC   TEMP,0(R5)          K < K(J) ?\n         BL    NEXTJ               YES\nTESTIJ   CR    R5,R4               J > I?\n         BH    EXCHANGE            YES\n         MVC   0(3,R2),0(R5)       K(L) <- K(J)\n         MVC   0(3,R5),TEMP        K(J) <- K\nSTACKIT  LR    R12,R3              R12 <- R\n         SR    R12,R5              R12 <- (R-J)*3\n         S     R12,=F'27'          R12 <- R-J-M  (M=9)\n         LR    R15,R5              R15 <- J\n         SR    R15,R2              R15 <- (J-L)*3\n         S     R15,=F'27'          R15 <- J-L-M\n         LR    R8,R12\n         SR    R8,R15\n         BC    10,NEXTEST          JUMP IF R-J GE J-L\n         LTR   R15,R15\n         BNP   UNSTACK             JUMP IF M GE J-L > R-J\n         LTR   R12,R12\n         BNP   NEXTR               J-L > M GE R-J\n         LA    R6,8(R6)            NOW J-L > R-J > M\n         ST    R2,0(R6)            STACK <- L\n         LR    R14,R5              R14 <- J\n         S     R14,=F'3'           R14 <- J-1\n         ST    R14,4(R6)           STACK <- J-1\nNEXTL    LA    R2,3(R5)            L <- J+1\n         B     NEWSTAGE\nNEXTEST  LTR   R12,R12\n         BNP   UNSTACK             M GE R-J GE J-L\n         LTR   R15,R15\n         BNP   NEXTL               R-J > M GE J-L\n         LA    R6,8(R6)\n         ST    R3,4(R6)            STACK <- R\n         LA    R14,3(R5)           R14 <- J+1\n         ST    R14,0(R6)           STACK <- J+1\nNEXTR    LR    R3,R5\n         S     R3,=F'3'            R <- J-1\n         B     NEWSTAGE\nUNSTACK  L     R2,0(R6)            L <- STACK\n         L     R3,4(R6)            R <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   NEWSTAGE            NO\n         LA    R1,15               STRAIGHT INSERTION SORT\n         L     R2,=A(UNSORTED+3)   J\nSAVEKEY  MVC   TEMP,0(R2)          K <- K(J)\n         LR    R3,R2\n         S     R3,=F'3'            I <- J-1\n         CLC   TEMP,0(R3)          K GE K(J-1)\n         BNL   JNEXT               NO\nMOVEKEY  MVC   3(3,R3),0(R3)       K(I+1) <- K(I)\n         S     R3,=F'3'            I <- I-1\n         CLC   TEMP,0(R3)          K GE K(I)\n         BL    MOVEKEY             NO\n         MVC   3(3,R3),TEMP        YES, K(I+1) <- K\nJNEXT    LA    R2,3(R2)            J <- J+1\n         BCT   R1,SAVEKEY\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00037": {"ttr": 10506, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05+\\x05+\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1323, "newlines": 1323, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QUIKSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00037'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'QUICKSORT (PARTITION EXCHANGE)'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        13 APR 1983 - CHARLES HOTTEL                                 *\n*        QUICKSORT (PARTITION EXCHANGE)                               *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 114-123                                   *\n*                                                                     *\n*        TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE   *\n*        DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO     *\n*        NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND    *\n*        NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS    *\n*        PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO   *\n*        SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND       *\n*        (INDEPENDENTLY) R(S+1), ... ,R(N).                           *\n*                                                                     *\n*        M=9 SEEMS SLIGHTLY FASTER THAN M=8.                          *\n*                                                                     *\n*        VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.                 *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        TESTING WORST CASE: ALL RECS ALREDY IN ORDER                 *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQUIKSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DC    XL10'00000000000000000000'\nUNSORTED  EQU  *\n          DC   CL10'0021777608'\n          DC   CL10'0027612669'\n          DC   CL10'0044709516'\n          DC   CL10'0063381812'\n          DC   CL10'0109127207'\n          DC   CL10'0110866296'\n          DC   CL10'0119215494'\n          DC   CL10'0124102660'\n          DC   CL10'0125735609'\n          DC   CL10'0129905505'\n          DC   CL10'0131160193'\n          DC   CL10'0159383950'\n          DC   CL10'0201923441'\n          DC   CL10'0213162155'\n          DC   CL10'0216719243'\n          DC   CL10'0217211427'\n          DC   CL10'0218026627'\n          DC   CL10'0241754751'\n          DC   CL10'0242199350'\n          DC   CL10'0243554165'\n          DC   CL10'0244567532'\n          DC   CL10'0246582414'\n          DC   CL10'0265668719'\n          DC   CL10'0269317263'\n          DC   CL10'0287224727'\n          DC   CL10'0295004946'\n          DC   CL10'0295810742'\n          DC   CL10'0298867763'\n          DC   CL10'0304818949'\n          DC   CL10'0333506667'\n          DC   CL10'0341973416'\n          DC   CL10'0342069814'\n          DC   CL10'0347745052'\n          DC   CL10'0350150475'\n          DC   CL10'0356352558'\n          DC   CL10'0374688198'\n          DC   CL10'0378208449'\n          DC   CL10'0383088094'\n          DC   CL10'0391251011'\n          DC   CL10'0397635966'\n          DC   CL10'0404123135'\n          DC   CL10'0407531659'\n          DC   CL10'0411859804'\n          DC   CL10'0415728203'\n          DC   CL10'0425389343'\n          DC   CL10'0430176038'\n          DC   CL10'0438108163'\n          DC   CL10'0438663301'\n          DC   CL10'0457377863'\n          DC   CL10'0470272897'\n          DC   CL10'0472398811'\n          DC   CL10'0483312294'\n          DC   CL10'0485448434'\n          DC   CL10'0495310799'\n          DC   CL10'0496791189'\n          DC   CL10'0510649893'\n          DC   CL10'0511433940'\n          DC   CL10'0511646625'\n          DC   CL10'0517639587'\n          DC   CL10'0518520315'\n          DC   CL10'0541991360'\n          DC   CL10'0544933583'\n          DC   CL10'0588657390'\n          DC   CL10'0612793626'\n          DC   CL10'0616034514'\n          DC   CL10'0622321914'\n          DC   CL10'0637516947'\n          DC   CL10'0647477320'\n          DC   CL10'0647777208'\n          DC   CL10'0661744102'\n          DC   CL10'0667273759'\n          DC   CL10'0670956338'\n          DC   CL10'0681335564'\n          DC   CL10'0686500629'\n          DC   CL10'0686700231'\n          DC   CL10'0714777108'\n          DC   CL10'0722588209'\n          DC   CL10'0743022964'\n          DC   CL10'0756256838'\n          DC   CL10'0804677453'\n          DC   CL10'0826611007'\n          DC   CL10'0847201640'\n          DC   CL10'0855215859'\n          DC   CL10'0857169190'\n          DC   CL10'0866220927'\n          DC   CL10'0869536638'\n          DC   CL10'0894127953'\n          DC   CL10'0894858606'\n          DC   CL10'0906281426'\n          DC   CL10'0907157687'\n          DC   CL10'0919922282'\n          DC   CL10'0928009527'\n          DC   CL10'0930832968'\n          DC   CL10'0932853941'\n          DC   CL10'0951309693'\n          DC   CL10'0967769107'\n          DC   CL10'0978045612'\n          DC   CL10'1004535486'\n          DC   CL10'1008725474'\n          DC   CL10'1009393768'\n          DC   CL10'1021634133'\n          DC   CL10'1026839376'\n          DC   CL10'1028796002'\n          DC   CL10'1034528113'\n          DC   CL10'1036074096'\n          DC   CL10'1036622827'\n          DC   CL10'1045950143'\n          DC   CL10'1047261909'\n          DC   CL10'1053803551'\n          DC   CL10'1055817303'\n          DC   CL10'1070588771'\n          DC   CL10'1090578040'\n          DC   CL10'1094183483'\n          DC   CL10'1102965965'\n          DC   CL10'1113496985'\n          DC   CL10'1124826024'\n          DC   CL10'1169066430'\n          DC   CL10'1170852922'\n          DC   CL10'1175414415'\n          DC   CL10'1175901510'\n          DC   CL10'1176047902'\n          DC   CL10'1182833385'\n          DC   CL10'1209852058'\n          DC   CL10'1229538482'\n          DC   CL10'1252476538'\n          DC   CL10'1262465755'\n          DC   CL10'1283649175'\n          DC   CL10'1293508166'\n          DC   CL10'1300971865'\n          DC   CL10'1309560725'\n          DC   CL10'1334447563'\n          DC   CL10'1343776836'\n          DC   CL10'1366017127'\n          DC   CL10'1406211586'\n          DC   CL10'1416503025'\n          DC   CL10'1428066942'\n          DC   CL10'1432942365'\n          DC   CL10'1444855750'\n          DC   CL10'1448433468'\n          DC   CL10'1448838730'\n          DC   CL10'1465609943'\n          DC   CL10'1469514872'\n          DC   CL10'1478252658'\n          DC   CL10'1481674017'\n          DC   CL10'1487783464'\n          DC   CL10'1493612746'\n          DC   CL10'1506827363'\n          DC   CL10'1510218230'\n          DC   CL10'1510752158'\n          DC   CL10'1515117817'\n          DC   CL10'1519007403'\n          DC   CL10'1520984600'\n          DC   CL10'1522697574'\n          DC   CL10'1527224381'\n          DC   CL10'1547170224'\n          DC   CL10'1553542330'\n          DC   CL10'1563502577'\n          DC   CL10'1567055502'\n          DC   CL10'1575299923'\n          DC   CL10'1599853705'\n          DC   CL10'1606377408'\n          DC   CL10'1608840747'\n          DC   CL10'1621991737'\n          DC   CL10'1630588698'\n          DC   CL10'1638250572'\n          DC   CL10'1654896952'\n          DC   CL10'1658768311'\n          DC   CL10'1659356334'\n          DC   CL10'1662932899'\n          DC   CL10'1669110221'\n          DC   CL10'1670254329'\n          DC   CL10'1680667485'\n          DC   CL10'1682953374'\n          DC   CL10'1683396492'\n          DC   CL10'1704233907'\n          DC   CL10'1718754999'\n          DC   CL10'1727381522'\n          DC   CL10'1730008644'\n          DC   CL10'1733029984'\n          DC   CL10'1737046676'\n          DC   CL10'1750507756'\n          DC   CL10'1759059386'\n          DC   CL10'1761684083'\n          DC   CL10'1767326447'\n          DC   CL10'1775777708'\n          DC   CL10'1776871076'\n          DC   CL10'1783737437'\n          DC   CL10'1796424079'\n          DC   CL10'1801389277'\n          DC   CL10'1807981546'\n          DC   CL10'1819296715'\n          DC   CL10'1823645616'\n          DC   CL10'1850521488'\n          DC   CL10'1869574749'\n          DC   CL10'1873888347'\n          DC   CL10'1877504009'\n          DC   CL10'1916989089'\n          DC   CL10'1918345822'\n          DC   CL10'1923132262'\n          DC   CL10'1926239473'\n          DC   CL10'1934646582'\n          DC   CL10'1946142617'\n          DC   CL10'1948521828'\n          DC   CL10'1954513695'\n          DC   CL10'1970220975'\n          DC   CL10'1977910306'\n          DC   CL10'1993801028'\n          DC   CL10'1994641628'\n          DC   CL10'2003724911'\n          DC   CL10'2005934797'\n          DC   CL10'2009368031'\n          DC   CL10'2023217125'\n          DC   CL10'2034099345'\n          DC   CL10'2038908934'\n          DC   CL10'2044061926'\n          DC   CL10'2059961681'\n          DC   CL10'2065592775'\n          DC   CL10'2072647459'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'2113148651'\n          DC   CL10'2128795604'\n          DC   CL10'2139096544'\n          DC   CL10'2141578675'\n          DC   CL10'2141727998'\n          DC   CL10'2144637213'\n          DC   CL10'2144977308'\n          DC   CL10'2163772156'\n          DC   CL10'2169298540'\n          DC   CL10'2177375639'\n          DC   CL10'2216813290'\n          DC   CL10'2222675501'\n          DC   CL10'2230174310'\n          DC   CL10'2231104325'\n          DC   CL10'2233677591'\n          DC   CL10'2252189346'\n          DC   CL10'2275690210'\n          DC   CL10'2284873668'\n          DC   CL10'2285848536'\n          DC   CL10'2286342506'\n          DC   CL10'2302069743'\n          DC   CL10'2307633383'\n          DC   CL10'2315437316'\n          DC   CL10'2338259443'\n          DC   CL10'2339574706'\n          DC   CL10'2355329543'\n          DC   CL10'2369764575'\n          DC   CL10'2376377908'\n          DC   CL10'2389120744'\n          DC   CL10'2396911987'\n          DC   CL10'2398938103'\n          DC   CL10'2400421895'\n          DC   CL10'2422232634'\n          DC   CL10'2425747753'\n          DC   CL10'2452295581'\n          DC   CL10'2453201288'\n          DC   CL10'2463397457'\n          DC   CL10'2488720988'\n          DC   CL10'2491407260'\n          DC   CL10'2512272436'\n          DC   CL10'2518972405'\n          DC   CL10'2524558876'\n          DC   CL10'2533023160'\n          DC   CL10'2544618053'\n          DC   CL10'2574915986'\n          DC   CL10'2584106197'\n          DC   CL10'2586698969'\n          DC   CL10'2587130549'\n          DC   CL10'2593365519'\n          DC   CL10'2601564517'\n          DC   CL10'2609800752'\n          DC   CL10'2612833848'\n          DC   CL10'2629152958'\n          DC   CL10'2657748187'\n          DC   CL10'2662116167'\n          DC   CL10'2679767239'\n          DC   CL10'2682008352'\n          DC   CL10'2685466240'\n          DC   CL10'2693983276'\n          DC   CL10'2695284092'\n          DC   CL10'2703499802'\n          DC   CL10'2722314424'\n          DC   CL10'2724557663'\n          DC   CL10'2726348003'\n          DC   CL10'2740708470'\n          DC   CL10'2756790530'\n          DC   CL10'2764666071'\n          DC   CL10'2807857653'\n          DC   CL10'2813767803'\n          DC   CL10'2816227704'\n          DC   CL10'2836247091'\n          DC   CL10'2836687970'\n          DC   CL10'2847713657'\n          DC   CL10'2863161645'\n          DC   CL10'2868240302'\n          DC   CL10'2882509469'\n          DC   CL10'2883441128'\n          DC   CL10'2884145001'\n          DC   CL10'2886269710'\n          DC   CL10'2890004371'\n          DC   CL10'2901437526'\n          DC   CL10'2908096078'\n          DC   CL10'2918179151'\n          DC   CL10'2924990815'\n          DC   CL10'2925865139'\n          DC   CL10'2943078847'\n          DC   CL10'2978879793'\n          DC   CL10'2979680261'\n          DC   CL10'2987837853'\n          DC   CL10'2989933983'\n          DC   CL10'3009924766'\n          DC   CL10'3010102732'\n          DC   CL10'3015620511'\n          DC   CL10'3020793152'\n          DC   CL10'3026659535'\n          DC   CL10'3032523980'\n          DC   CL10'3049097295'\n          DC   CL10'3077327176'\n          DC   CL10'3079859595'\n          DC   CL10'3081869339'\n          DC   CL10'3083893881'\n          DC   CL10'3090555978'\n          DC   CL10'3092155047'\n          DC   CL10'3092863149'\n          DC   CL10'3114643592'\n          DC   CL10'3133986654'\n          DC   CL10'3139779380'\n          DC   CL10'3152278214'\n          DC   CL10'3157858597'\n          DC   CL10'3184472762'\n          DC   CL10'3186535891'\n          DC   CL10'3199523856'\n          DC   CL10'3232136869'\n          DC   CL10'3246054935'\n          DC   CL10'3248183233'\n          DC   CL10'3256786735'\n          DC   CL10'3262132801'\n          DC   CL10'3269783286'\n          DC   CL10'3277199285'\n          DC   CL10'3295843454'\n          DC   CL10'3297999589'\n          DC   CL10'3319616438'\n          DC   CL10'3325756816'\n          DC   CL10'3327808029'\n          DC   CL10'3338981601'\n          DC   CL10'3344508515'\n          DC   CL10'3345279264'\n          DC   CL10'3353162830'\n          DC   CL10'3358601905'\n          DC   CL10'3364087686'\n          DC   CL10'3367090129'\n          DC   CL10'3385869120'\n          DC   CL10'3387803789'\n          DC   CL10'3402810761'\n          DC   CL10'3410613712'\n          DC   CL10'3415624636'\n          DC   CL10'3416289223'\n          DC   CL10'3425687957'\n          DC   CL10'3428793268'\n          DC   CL10'3430673539'\n          DC   CL10'3452683833'\n          DC   CL10'3463687713'\n          DC   CL10'3496725929'\n          DC   CL10'3505005889'\n          DC   CL10'3531089061'\n          DC   CL10'3544489840'\n          DC   CL10'3548439886'\n          DC   CL10'3566158281'\n          DC   CL10'3578295917'\n          DC   CL10'3606218529'\n          DC   CL10'3609960123'\n          DC   CL10'3621038015'\n          DC   CL10'3625252117'\n          DC   CL10'3627055019'\n          DC   CL10'3635946109'\n          DC   CL10'3655561888'\n          DC   CL10'3658796578'\n          DC   CL10'3665273648'\n          DC   CL10'3665932525'\n          DC   CL10'3673647154'\n          DC   CL10'3682736375'\n          DC   CL10'3694896336'\n          DC   CL10'3698845784'\n          DC   CL10'3704809623'\n          DC   CL10'3707569144'\n          DC   CL10'3708816466'\n          DC   CL10'3715241774'\n          DC   CL10'3737691656'\n          DC   CL10'3741778199'\n          DC   CL10'3755663894'\n          DC   CL10'3758750173'\n          DC   CL10'3772702776'\n          DC   CL10'3777461584'\n          DC   CL10'3787896571'\n          DC   CL10'3795936465'\n          DC   CL10'3801898777'\n          DC   CL10'3815888699'\n          DC   CL10'3825916938'\n          DC   CL10'3829666331'\n          DC   CL10'3830408962'\n          DC   CL10'3835275994'\n          DC   CL10'3839559432'\n          DC   CL10'3839616878'\n          DC   CL10'3842431364'\n          DC   CL10'3845774769'\n          DC   CL10'3871130565'\n          DC   CL10'3888423157'\n          DC   CL10'3889103631'\n          DC   CL10'3893656452'\n          DC   CL10'3893799393'\n          DC   CL10'3903243195'\n          DC   CL10'3912149423'\n          DC   CL10'3927724004'\n          DC   CL10'3930991335'\n          DC   CL10'3946441022'\n          DC   CL10'3951386821'\n          DC   CL10'3954741049'\n          DC   CL10'3968593246'\n          DC   CL10'3980200299'\n          DC   CL10'3994269823'\n          DC   CL10'4032829857'\n          DC   CL10'4041091177'\n          DC   CL10'4052483870'\n          DC   CL10'4054368798'\n          DC   CL10'4058524665'\n          DC   CL10'4082518764'\n          DC   CL10'4087244297'\n          DC   CL10'4109725090'\n          DC   CL10'4126998063'\n          DC   CL10'4141332115'\n          DC   CL10'4146105391'\n          DC   CL10'4165437910'\n          DC   CL10'4193813874'\n          DC   CL10'4213406110'\n          DC   CL10'4225518754'\n          DC   CL10'4233008317'\n          DC   CL10'4234405322'\n          DC   CL10'4245641000'\n          DC   CL10'4250573220'\n          DC   CL10'4255455557'\n          DC   CL10'4261367795'\n          DC   CL10'4278411030'\n          DC   CL10'4293029016'\n          DC   CL10'4304448398'\n          DC   CL10'4306179254'\n          DC   CL10'4332924734'\n          DC   CL10'4339308153'\n          DC   CL10'4341809837'\n          DC   CL10'4342046037'\n          DC   CL10'4354048918'\n          DC   CL10'4361475807'\n          DC   CL10'4361988925'\n          DC   CL10'4365677512'\n          DC   CL10'4365695641'\n          DC   CL10'4367068462'\n          DC   CL10'4374982729'\n          DC   CL10'4376019850'\n          DC   CL10'4382148265'\n          DC   CL10'4395321328'\n          DC   CL10'4399652566'\n          DC   CL10'4399889973'\n          DC   CL10'4403915745'\n          DC   CL10'4415227580'\n          DC   CL10'4420964547'\n          DC   CL10'4425250854'\n          DC   CL10'4440349726'\n          DC   CL10'4442600677'\n          DC   CL10'4446271569'\n          DC   CL10'4452119323'\n          DC   CL10'4455138672'\n          DC   CL10'4459585269'\n          DC   CL10'4480439106'\n          DC   CL10'4499203387'\n          DC   CL10'4501837884'\n          DC   CL10'4511944944'\n          DC   CL10'4515414182'\n          DC   CL10'4525397489'\n          DC   CL10'4531464162'\n          DC   CL10'4532128318'\n          DC   CL10'4539127550'\n          DC   CL10'4541806875'\n          DC   CL10'4542498305'\n          DC   CL10'4564553568'\n          DC   CL10'4571377709'\n          DC   CL10'4578912800'\n          DC   CL10'4606150105'\n          DC   CL10'4615307402'\n          DC   CL10'4676559607'\n          DC   CL10'4677868018'\n          DC   CL10'4691403480'\n          DC   CL10'4708979219'\n          DC   CL10'4711251680'\n          DC   CL10'4717926359'\n          DC   CL10'4718112570'\n          DC   CL10'4718828567'\n          DC   CL10'4722569401'\n          DC   CL10'4731985446'\n          DC   CL10'4733686614'\n          DC   CL10'4746081896'\n          DC   CL10'4760993077'\n          DC   CL10'4772569573'\n          DC   CL10'4775657044'\n          DC   CL10'4784105826'\n          DC   CL10'4788384767'\n          DC   CL10'4796208846'\n          DC   CL10'4807640041'\n          DC   CL10'4818917707'\n          DC   CL10'4825735132'\n          DC   CL10'4826671921'\n          DC   CL10'4834267841'\n          DC   CL10'4838670864'\n          DC   CL10'4840642324'\n          DC   CL10'4851436890'\n          DC   CL10'4868476778'\n          DC   CL10'4884001528'\n          DC   CL10'4894180366'\n          DC   CL10'4909094411'\n          DC   CL10'4924053684'\n          DC   CL10'4932226772'\n          DC   CL10'4963999866'\n          DC   CL10'4976581420'\n          DC   CL10'4988242159'\n          DC   CL10'4997957903'\n          DC   CL10'5001541312'\n          DC   CL10'5012943915'\n          DC   CL10'5022145245'\n          DC   CL10'5025088118'\n          DC   CL10'5031739843'\n          DC   CL10'5061464234'\n          DC   CL10'5062777099'\n          DC   CL10'5081606619'\n          DC   CL10'5085358271'\n          DC   CL10'5097340862'\n          DC   CL10'5131008598'\n          DC   CL10'5136707186'\n          DC   CL10'5137829773'\n          DC   CL10'5138392919'\n          DC   CL10'5141292181'\n          DC   CL10'5148786272'\n          DC   CL10'5167188055'\n          DC   CL10'5170458496'\n          DC   CL10'5171457235'\n          DC   CL10'5173509412'\n          DC   CL10'5175852258'\n          DC   CL10'5176912171'\n          DC   CL10'5184641688'\n          DC   CL10'5195953924'\n          DC   CL10'5201121972'\n          DC   CL10'5201791491'\n          DC   CL10'5212207442'\n          DC   CL10'5237405495'\n          DC   CL10'5241948690'\n          DC   CL10'5248438067'\n          DC   CL10'5264958561'\n          DC   CL10'5280097813'\n          DC   CL10'5297165057'\n          DC   CL10'5298755992'\n          DC   CL10'5300159981'\n          DC   CL10'5321710355'\n          DC   CL10'5337606906'\n          DC   CL10'5345334579'\n          DC   CL10'5371357959'\n          DC   CL10'5385074372'\n          DC   CL10'5395385796'\n          DC   CL10'5397272711'\n          DC   CL10'5401039694'\n          DC   CL10'5425916378'\n          DC   CL10'5431977508'\n          DC   CL10'5433720236'\n          DC   CL10'5442562396'\n          DC   CL10'5449773212'\n          DC   CL10'5456759873'\n          DC   CL10'5457552652'\n          DC   CL10'5475656321'\n          DC   CL10'5506681939'\n          DC   CL10'5508940292'\n          DC   CL10'5526397503'\n          DC   CL10'5534401507'\n          DC   CL10'5549481728'\n          DC   CL10'5558764121'\n          DC   CL10'5561094977'\n          DC   CL10'5563765185'\n          DC   CL10'5565101216'\n          DC   CL10'5572035250'\n          DC   CL10'5576869845'\n          DC   CL10'5591433733'\n          DC   CL10'5596327164'\n          DC   CL10'5614513448'\n          DC   CL10'5619387353'\n          DC   CL10'5621486760'\n          DC   CL10'5626236138'\n          DC   CL10'5627716670'\n          DC   CL10'5641763691'\n          DC   CL10'5642391145'\n          DC   CL10'5642531085'\n          DC   CL10'5643322010'\n          DC   CL10'5653365020'\n          DC   CL10'5663840721'\n          DC   CL10'5675001931'\n          DC   CL10'5675989559'\n          DC   CL10'5679881257'\n          DC   CL10'5701796697'\n          DC   CL10'5705291655'\n          DC   CL10'5707472066'\n          DC   CL10'5707681244'\n          DC   CL10'5725273168'\n          DC   CL10'5735000362'\n          DC   CL10'5744251794'\n          DC   CL10'5750582397'\n          DC   CL10'5764563450'\n          DC   CL10'5765477779'\n          DC   CL10'5768466287'\n          DC   CL10'5778297253'\n          DC   CL10'5781827937'\n          DC   CL10'5792681088'\n          DC   CL10'5823087664'\n          DC   CL10'5826049791'\n          DC   CL10'5852626081'\n          DC   CL10'5859069484'\n          DC   CL10'5871856400'\n          DC   CL10'5879594685'\n          DC   CL10'5923848700'\n          DC   CL10'5930920717'\n          DC   CL10'5939740534'\n          DC   CL10'5945977008'\n          DC   CL10'5953591351'\n          DC   CL10'5974120497'\n          DC   CL10'5980530023'\n          DC   CL10'5982500270'\n          DC   CL10'6013020304'\n          DC   CL10'6017590576'\n          DC   CL10'6027151395'\n          DC   CL10'6031477613'\n          DC   CL10'6034259879'\n          DC   CL10'6034977111'\n          DC   CL10'6038224205'\n          DC   CL10'6040047313'\n          DC   CL10'6042427892'\n          DC   CL10'6046911354'\n          DC   CL10'6055320835'\n          DC   CL10'6071816834'\n          DC   CL10'6076953748'\n          DC   CL10'6078781716'\n          DC   CL10'6089806179'\n          DC   CL10'6102241319'\n          DC   CL10'6111881741'\n          DC   CL10'6114026406'\n          DC   CL10'6131336255'\n          DC   CL10'6153092070'\n          DC   CL10'6176508218'\n          DC   CL10'6189589095'\n          DC   CL10'6195575064'\n          DC   CL10'6214334476'\n          DC   CL10'6214652858'\n          DC   CL10'6219336562'\n          DC   CL10'6274959967'\n          DC   CL10'6277765141'\n          DC   CL10'6291772134'\n          DC   CL10'6299003602'\n          DC   CL10'6301600736'\n          DC   CL10'6309461069'\n          DC   CL10'6316443356'\n          DC   CL10'6321644499'\n          DC   CL10'6340650247'\n          DC   CL10'6362585477'\n          DC   CL10'6378346611'\n          DC   CL10'6380603394'\n          DC   CL10'6392883433'\n          DC   CL10'6401696170'\n          DC   CL10'6405784661'\n          DC   CL10'6410072367'\n          DC   CL10'6419378045'\n          DC   CL10'6420659456'\n          DC   CL10'6423082237'\n          DC   CL10'6441887377'\n          DC   CL10'6491948418'\n          DC   CL10'6492977996'\n          DC   CL10'6526299792'\n          DC   CL10'6536513368'\n          DC   CL10'6565462961'\n          DC   CL10'6583467513'\n          DC   CL10'6610884504'\n          DC   CL10'6617160065'\n          DC   CL10'6619899880'\n          DC   CL10'6620218026'\n          DC   CL10'6632012192'\n          DC   CL10'6634201034'\n          DC   CL10'6640171757'\n          DC   CL10'6650685307'\n          DC   CL10'6656036861'\n          DC   CL10'6706822399'\n          DC   CL10'6708832431'\n          DC   CL10'6743900337'\n          DC   CL10'6744618021'\n          DC   CL10'6745219809'\n          DC   CL10'6750654554'\n          DC   CL10'6750835075'\n          DC   CL10'6758118765'\n          DC   CL10'6768877384'\n          DC   CL10'6788433333'\n          DC   CL10'6795597451'\n          DC   CL10'6819051409'\n          DC   CL10'6824188618'\n          DC   CL10'6829686930'\n          DC   CL10'6834837074'\n          DC   CL10'6837439723'\n          DC   CL10'6876599643'\n          DC   CL10'6879934131'\n          DC   CL10'6882383883'\n          DC   CL10'6906496238'\n          DC   CL10'6915994267'\n          DC   CL10'6941536678'\n          DC   CL10'6959831086'\n          DC   CL10'6980841188'\n          DC   CL10'6984337341'\n          DC   CL10'6999538714'\n          DC   CL10'7014869731'\n          DC   CL10'7020490806'\n          DC   CL10'7024630382'\n          DC   CL10'7025953068'\n          DC   CL10'7031389620'\n          DC   CL10'7039033783'\n          DC   CL10'7043099673'\n          DC   CL10'7059883683'\n          DC   CL10'7072494621'\n          DC   CL10'7078217222'\n          DC   CL10'7093977808'\n          DC   CL10'7138113868'\n          DC   CL10'7170701585'\n          DC   CL10'7175433348'\n          DC   CL10'7177468298'\n          DC   CL10'7191388279'\n          DC   CL10'7206997982'\n          DC   CL10'7211070860'\n          DC   CL10'7211151702'\n          DC   CL10'7221527032'\n          DC   CL10'7224666599'\n          DC   CL10'7228989035'\n          DC   CL10'7257486349'\n          DC   CL10'7260553248'\n          DC   CL10'7263703419'\n          DC   CL10'7278163786'\n          DC   CL10'7292854960'\n          DC   CL10'7295504370'\n          DC   CL10'7328744136'\n          DC   CL10'7341681867'\n          DC   CL10'7349775632'\n          DC   CL10'7360355280'\n          DC   CL10'7366688666'\n          DC   CL10'7378402421'\n          DC   CL10'7379753810'\n          DC   CL10'7385386989'\n          DC   CL10'7400995389'\n          DC   CL10'7403393048'\n          DC   CL10'7416875787'\n          DC   CL10'7419152479'\n          DC   CL10'7448619971'\n          DC   CL10'7457852404'\n          DC   CL10'7465038901'\n          DC   CL10'7473093184'\n          DC   CL10'7476835831'\n          DC   CL10'7479549097'\n          DC   CL10'7496108098'\n          DC   CL10'7524793289'\n          DC   CL10'7529154440'\n          DC   CL10'7537430309'\n          DC   CL10'7539954682'\n          DC   CL10'7540592790'\n          DC   CL10'7555744266'\n          DC   CL10'7591761928'\n          DC   CL10'7624869674'\n          DC   CL10'7627426114'\n          DC   CL10'7665518013'\n          DC   CL10'7667230087'\n          DC   CL10'7675776278'\n          DC   CL10'7679716679'\n          DC   CL10'7681142671'\n          DC   CL10'7681922140'\n          DC   CL10'7686790093'\n          DC   CL10'7686947369'\n          DC   CL10'7690923006'\n          DC   CL10'7699537531'\n          DC   CL10'7724354542'\n          DC   CL10'7726068392'\n          DC   CL10'7734167553'\n          DC   CL10'7743096849'\n          DC   CL10'7777348521'\n          DC   CL10'7783677062'\n          DC   CL10'7785283283'\n          DC   CL10'7789745740'\n          DC   CL10'7799100194'\n          DC   CL10'7805934460'\n          DC   CL10'7808769493'\n          DC   CL10'7817561428'\n          DC   CL10'7846276005'\n          DC   CL10'7848321487'\n          DC   CL10'7869520770'\n          DC   CL10'7876388204'\n          DC   CL10'7880707913'\n          DC   CL10'7896530724'\n          DC   CL10'7899381782'\n          DC   CL10'7952915161'\n          DC   CL10'7964352758'\n          DC   CL10'7968945590'\n          DC   CL10'7979475780'\n          DC   CL10'7996608718'\n          DC   CL10'8003680043'\n          DC   CL10'8006156056'\n          DC   CL10'8014572229'\n          DC   CL10'8027939593'\n          DC   CL10'8040889696'\n          DC   CL10'8041396877'\n          DC   CL10'8048427256'\n          DC   CL10'8074041252'\n          DC   CL10'8078001788'\n          DC   CL10'8081562472'\n          DC   CL10'8091838842'\n          DC   CL10'8091839855'\n          DC   CL10'8099335130'\n          DC   CL10'8118801689'\n          DC   CL10'8123221991'\n          DC   CL10'8127785251'\n          DC   CL10'8131002824'\n          DC   CL10'8133182954'\n          DC   CL10'8155628498'\n          DC   CL10'8162793635'\n          DC   CL10'8174979342'\n          DC   CL10'8176019027'\n          DC   CL10'8196379523'\n          DC   CL10'8198652458'\n          DC   CL10'8217281228'\n          DC   CL10'8234802647'\n          DC   CL10'8245886326'\n          DC   CL10'8250774014'\n          DC   CL10'8261864974'\n          DC   CL10'8266839060'\n          DC   CL10'8284252649'\n          DC   CL10'8284985610'\n          DC   CL10'8317518932'\n          DC   CL10'8318918560'\n          DC   CL10'8321123142'\n          DC   CL10'8326027594'\n          DC   CL10'8350371692'\n          DC   CL10'8363333191'\n          DC   CL10'8367220073'\n          DC   CL10'8372418425'\n          DC   CL10'8372701490'\n          DC   CL10'8373228818'\n          DC   CL10'8390001046'\n          DC   CL10'8392614976'\n          DC   CL10'8409030217'\n          DC   CL10'8422464137'\n          DC   CL10'8431528200'\n          DC   CL10'8441898124'\n          DC   CL10'8446793887'\n          DC   CL10'8455968518'\n          DC   CL10'8456810072'\n          DC   CL10'8459674825'\n          DC   CL10'8461533533'\n          DC   CL10'8474892202'\n          DC   CL10'8484739956'\n          DC   CL10'8501210340'\n          DC   CL10'8516432844'\n          DC   CL10'8532171439'\n          DC   CL10'8542248852'\n          DC   CL10'8554607545'\n          DC   CL10'8561872344'\n          DC   CL10'8570796738'\n          DC   CL10'8575481588'\n          DC   CL10'8582131225'\n          DC   CL10'8593413955'\n          DC   CL10'8605152358'\n          DC   CL10'8609761388'\n          DC   CL10'8615700059'\n          DC   CL10'8620256478'\n          DC   CL10'8632028785'\n          DC   CL10'8647956104'\n          DC   CL10'8653060920'\n          DC   CL10'8666619291'\n          DC   CL10'8677951242'\n          DC   CL10'8683917119'\n          DC   CL10'8685504552'\n          DC   CL10'8704495042'\n          DC   CL10'8706993147'\n          DC   CL10'8716714630'\n          DC   CL10'8719657413'\n          DC   CL10'8734136429'\n          DC   CL10'8742955537'\n          DC   CL10'8743127805'\n          DC   CL10'8747566951'\n          DC   CL10'8761075556'\n          DC   CL10'8771675995'\n          DC   CL10'8774372180'\n          DC   CL10'8775370196'\n          DC   CL10'8782023945'\n          DC   CL10'8800423169'\n          DC   CL10'8802348898'\n          DC   CL10'8803827781'\n          DC   CL10'8807543455'\n          DC   CL10'8815379839'\n          DC   CL10'8817930819'\n          DC   CL10'8824964249'\n          DC   CL10'8828773871'\n          DC   CL10'8836215227'\n          DC   CL10'8864169622'\n          DC   CL10'8888984259'\n          DC   CL10'8906179273'\n          DC   CL10'8912574126'\n          DC   CL10'8942152936'\n          DC   CL10'8951906361'\n          DC   CL10'8965891650'\n          DC   CL10'8969836178'\n          DC   CL10'8970320500'\n          DC   CL10'8970957201'\n          DC   CL10'8971292916'\n          DC   CL10'8972698172'\n          DC   CL10'8973826215'\n          DC   CL10'8977793548'\n          DC   CL10'8979968036'\n          DC   CL10'8986560851'\n          DC   CL10'8986613327'\n          DC   CL10'8990850471'\n          DC   CL10'8992443407'\n          DC   CL10'8996009174'\n          DC   CL10'9008293509'\n          DC   CL10'9020317555'\n          DC   CL10'9071539357'\n          DC   CL10'9078253445'\n          DC   CL10'9082725435'\n          DC   CL10'9142951241'\n          DC   CL10'9145381274'\n          DC   CL10'9159017410'\n          DC   CL10'9172277739'\n          DC   CL10'9188307050'\n          DC   CL10'9195709541'\n          DC   CL10'9216384444'\n          DC   CL10'9222373637'\n          DC   CL10'9225330314'\n          DC   CL10'9289664100'\n          DC   CL10'9315691904'\n          DC   CL10'9321130226'\n          DC   CL10'9334903211'\n          DC   CL10'9336349912'\n          DC   CL10'9342886112'\n          DC   CL10'9354071150'\n          DC   CL10'9378133933'\n          DC   CL10'9394383633'\n          DC   CL10'9411106082'\n          DC   CL10'9420163039'\n          DC   CL10'9425802615'\n          DC   CL10'9461157722'\n          DC   CL10'9469873148'\n          DC   CL10'9473843829'\n          DC   CL10'9477987603'\n          DC   CL10'9477994206'\n          DC   CL10'9481197146'\n          DC   CL10'9494810997'\n          DC   CL10'9497186417'\n          DC   CL10'9501170379'\n          DC   CL10'9503089882'\n          DC   CL10'9528779605'\n          DC   CL10'9530143232'\n          DC   CL10'9544350467'\n          DC   CL10'9557093720'\n          DC   CL10'9574480990'\n          DC   CL10'9576662885'\n          DC   CL10'9580332461'\n          DC   CL10'9580829481'\n          DC   CL10'9592186524'\n          DC   CL10'9597634183'\n          DC   CL10'9600087963'\n          DC   CL10'9617348080'\n          DC   CL10'9629518012'\n          DC   CL10'9637885520'\n          DC   CL10'9639982642'\n          DC   CL10'9650793422'\n          DC   CL10'9672913948'\n          DC   CL10'9690965116'\n          DC   CL10'9691804662'\n          DC   CL10'9694554596'\n          DC   CL10'9713710832'\n          DC   CL10'9728537463'\n          DC   CL10'9734751332'\n          DC   CL10'9749315054'\n          DC   CL10'9767784033'\n          DC   CL10'9773777703'\n          DC   CL10'9782229122'\n          DC   CL10'9792422084'\n          DC   CL10'9825592300'\n          DC   CL10'9850258624'\n          DC   CL10'9875426701'\n          DC   CL10'9883029293'\n          DC   CL10'9886176900'\n          DC   CL10'9911241979'\n          DC   CL10'9919451101'\n          DC   CL10'9924773051'\n          DC   CL10'9946619993'\n          DC   CL10'9967522275'\n          DC   CL10'9984956820'\n          DC   CL10'9987216646'\nLASTUN   EQU   *-10\n         DC    XL10'FFFFFFFFFFFFFFFFFFFF'\n*\n         DS    0F\nSTACK    EQU   *\n         DC    22F'0'              2*LN(N) FULLWORDS+2\n*\nQUIKSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'QUICKSORT (PARTITION EXCHANGE)'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R2,=A(UNSORTED)     L <- 1\n         L     R3,=A(LASTUN)       R <- N\nNEWSTAGE LA    R5,10(R3)           J <- R+1\n         MVC   TEMP,0(R2)          K <- K(L)\n         LA    R4,10(R2)           I <- L+1\n         B     COMPARE1\nEXCHANGE XC    0(10,R4),0(R5)      INTERCHANGE\n         XC    0(10,R5),0(R4)        K(I) AND K(J)\n         XC    0(10,R4),0(R5)\nNEXTI    LA    R4,10(R4)           I <- I+1\nCOMPARE1 CLC   TEMP,0(R4)          K > K(I) ?\n         BH    NEXTI               YES\nNEXTJ    S     R5,=F'10'           J <- J-1\n         CLC   TEMP,0(R5)          K < K(J) ?\n         BL    NEXTJ               YES\nTESTIJ   CR    R5,R4               J > I?\n         BH    EXCHANGE            YES\n         MVC   0(10,R2),0(R5)      K(L) <- K(J)\n         MVC   0(10,R5),TEMP       K(J) <- K\nSTACKIT  LR    R12,R3              R12 <- R\n         SR    R12,R5              R12 <- (R-J)*3\n         S     R12,=F'90'          R12 <- R-J-M  (M=9)\n         LR    R15,R5              R15 <- J\n         SR    R15,R2              R15 <- (J-L)*3\n         S     R15,=F'90'          R15 <- J-L-M\n         LR    R8,R12\n         SR    R8,R15\n         BC    10,NEXTEST          JUMP IF R-J GE J-L\n         LTR   R15,R15\n         BNP   UNSTACK             JUMP IF M GE J-L > R-J\n         LTR   R12,R12\n         BNP   NEXTR               J-L > M GE R-J\n         LA    R6,8(R6)            NOW J-L > R-J > M\n         ST    R2,0(R6)            STACK <- L\n         LR    R14,R5              R14 <- J\n         S     R14,=F'10'          R14 <- J-1\n         ST    R14,4(R6)           STACK <- J-1\nNEXTL    LA    R2,10(R5)           L <- J+1\n         B     NEWSTAGE\nNEXTEST  LTR   R12,R12\n         BNP   UNSTACK             M GE R-J GE J-L\n         LTR   R15,R15\n         BNP   NEXTL               R-J > M GE J-L\n         LA    R6,8(R6)\n         ST    R3,4(R6)            STACK <- R\n         LA    R14,10(R5)          R14 <- J+1\n         ST    R14,0(R6)           STACK <- J+1\nNEXTR    LR    R3,R5\n         S     R3,=F'10'           R <- J-1\n         B     NEWSTAGE\nUNSTACK  L     R2,0(R6)            L <- STACK\n         L     R3,4(R6)            R <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   NEWSTAGE            NO\n         LA    R1,999              STRAIGHT INSERTION SORT\n         L     R2,=A(UNSORTED+10)  J\nSAVEKEY  MVC   TEMP,0(R2)          K <- K(J)\n         LR    R3,R2\n         S     R3,=F'10'           I <- J-1\n         CLC   TEMP,0(R3)          K GE K(J-1)\n         BNL   JNEXT               NO\nMOVEKEY  MVC   10(10,R3),0(R3)     K(I+1) <- K(I)\n         S     R3,=F'10'           I <- I-1\n         CLC   TEMP,0(R3)          K GE K(I)\n         BL    MOVEKEY             NO\n         MVC   10(10,R3),TEMP      YES, K(I+1) <- K\nJNEXT    LA    R2,10(R2)           J <- J+1\n         BCT   R1,SAVEKEY\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00038": {"ttr": 11018, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\x85\\x01\\x85\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 389, "newlines": 389, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QUIKSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00038'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'MEDIAN OF THREE QUICKSORT (PARTITION EXCHANGE)'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        13 APR 1983 - CHARLES HOTTEL                                 *\n*        QUICKSORT (PARTITION EXCHANGE)                               *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 114-123                                   *\n*                                                                     *\n*        TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE   *\n*        DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO     *\n*        NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND    *\n*        NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS    *\n*        PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO   *\n*        SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND       *\n*        (INDEPENDENTLY) R(S+1), ... ,R(N).                           *\n*                                                                     *\n*        M=9 SEEMS SLIGHTLY FASTER THAN M=8.                          *\n*                                                                     *\n*        VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.                 *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQUIKSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DC    XL3'000000'\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n         DC    XL3'FFFFFF'\n*\n         DS    0F\nSTACK    EQU   *\n         DC    20F'0'              2*LN(N) FULLWORDS\n*\nQUIKSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'MEDIAN OF THREE QUICKSORT (PARTITION EXCHANGE)'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LR    R12,R9\n         DROP  R9\n         USING SORTRTN,R12\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R2,=A(UNSORTED)     L <- 1\n         L     R3,=A(LASTUN)       R <- N\nNEWSTAGE LR    R9,R3               R9 <- R*3\n         SR    R9,R2               R9 <- (R-L)*3\n         SR    R8,R8\n         D     R8,=F'6'            R9 <- ((R-L)*3) / 3*2\n         M     R8,=F'3'            R9 <- DISP Q\n         LA    R4,0(R9,R2)         R4 <- PTR K(Q)\n         CLC   0(3,R2),0(R3)       K(L) < K(R)\n         BL    H1                  YES\n         CLC   0(3,R2),0(R4)       K(L) LE K(Q)\n         BNH   H3                  YES\n         CLC   0(3,R3),0(R4)       K(R) > K(Q)\n         BH    H4                  YES\n**********                         K(R) LE K(Q) < K(L)\n         XC    0(3,R2),0(R3)       INTERCHANGE K(L) AND K(R)\n         XC    0(3,R3),0(R2)\n         XC    0(3,R2),0(R3)\nH0       MVC   TEMP,0(R4)          TEMP <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\n         B     H6\n**********                         K(Q) < K(R) LE K(L)\nH4       MVC   TEMP,0(R3)          TEMP <- K(R)\n         MVC   0(3,R3),0(R2)       K(R) <- K(L)\n         MVC   0(3,R2),0(R4)       K(L) <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\n         B     H6\n**********                         K(R) LE K(L) LE K(Q)\nH3       MVC   TEMP,0(R2)          TEMP <- K(L)\n         MVC   0(3,R2),0(R3)       K(L) <- K(R)\n         MVC   0(3,R3),0(R4)       K(R) <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\n         B     H6\nH1       CLC   0(3,R2),0(R4)       K(L) GE K(Q)\n         BNL   H5                  YES\n         CLC   0(3,R3),0(R4)       K(R) > K(Q)\n         BH    H0                  YES K(L) < K(Q) < K(R)\n**********                         K(L) < K(R) LE K(Q)\n         MVC   TEMP,0(R3)          TEMP <- K(R)\n         MVC   0(3,R3),0(R4)       K(R) <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\n         B     H6\n**********                         K(Q) LE K(L) < K(R)\nH5       MVC   TEMP,0(R2)          TEMP <- K(L)\n         MVC   0(3,R2),0(R4)       K(L) <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\nH6       LA    R4,6(R2)            I <- L+2\n         LR    R5,R3               L <- R\n         B     COMPARE1\nEXCHANGE XC    0(3,R4),0(R5)       INTERCHANGE\n         XC    0(3,R5),0(R4)         K(I) AND K(J)\n         XC    0(3,R4),0(R5)\nNEXTI    LA    R4,3(R4)            I <- I+1\nCOMPARE1 CLC   TEMP,0(R4)          K > K(I) ?\n         BH    NEXTI               YES\nNEXTJ    S     R5,=F'3'            J <- J-1\n         CLC   TEMP,0(R5)          K < K(J) ?\n         BL    NEXTJ               YES\nTESTIJ   CR    R5,R4               J > I?\n         BH    EXCHANGE            YES\n         MVC   3(3,R2),0(R5)       K(L+1) <- K(J)\n         MVC   0(3,R5),TEMP        K(J) <- K\nSTACKIT  LR    R9,R3               R9 <- R\n         SR    R9,R5               R9 <- (R-J)*3\n         S     R9,=F'27'           R9 <- R-J-M  (M=9)\n         LR    R15,R5              R15 <- J\n         SR    R15,R2              R15 <- (J-L)*3\n         S     R15,=F'27'          R15 <- J-L-M\n         LR    R8,R9\n         SR    R8,R15\n         BC    10,NEXTEST          JUMP IF R-J GE J-L\n         LTR   R15,R15\n         BNP   UNSTACK             JUMP IF M GE J-L > R-J\n         LTR   R9,R9\n         BNP   NEXTR               J-L > M GE R-J\n         LA    R6,8(R6)            NOW J-L > R-J > M\n         ST    R2,0(R6)            STACK <- L\n         LR    R14,R5              R14 <- J\n         S     R14,=F'3'           R14 <- J-1\n         ST    R14,4(R6)           STACK <- J-1\nNEXTL    LA    R2,3(R5)            L <- J+1\n         B     NEWSTAGE\nNEXTEST  LTR   R9,R9\n         BNP   UNSTACK             M GE R-J GE J-L\n         LTR   R15,R15\n         BNP   NEXTL               R-J > M GE J-L\n         LA    R6,8(R6)\n         ST    R3,4(R6)            STACK <- R\n         LA    R14,3(R5)           R14 <- J+1\n         ST    R14,0(R6)           STACK <- J+1\nNEXTR    LR    R3,R5\n         S     R3,=F'3'            R <- J-1\n         B     NEWSTAGE\nUNSTACK  L     R2,0(R6)            L <- STACK\n         L     R3,4(R6)            R <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   NEWSTAGE            NO\n         LA    R1,15               STRAIGHT INSERTION SORT\n         L     R2,=A(UNSORTED+3)   J\nSAVEKEY  MVC   TEMP,0(R2)          K <- K(J)\n         LR    R3,R2\n         S     R3,=F'3'            I <- J-1\n         CLC   TEMP,0(R3)          K GE K(J-1)\n         BNL   JNEXT               NO\nMOVEKEY  MVC   3(3,R3),0(R3)       K(I+1) <- K(I)\n         S     R3,=F'3'            I <- I-1\n         CLC   TEMP,0(R3)          K GE K(I)\n         BL    MOVEKEY             NO\n         MVC   3(3,R3),TEMP        YES, K(I+1) <- K\nJNEXT    LA    R2,3(R2)            J <- J+1\n         BCT   R1,SAVEKEY\n         B     SEXIT\n         LTORG\n         DROP  R12\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00039": {"ttr": 11271, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05]\\x05]\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1373, "newlines": 1373, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QUIKSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00039'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'MEDIAN OF THREE QUICKSORT (PARTITION EXCHANGE)'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        13 APR 1983 - CHARLES HOTTEL                                 *\n*        QUICKSORT (PARTITION EXCHANGE)                               *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 114-123                                   *\n*                                                                     *\n*        TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE   *\n*        DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO     *\n*        NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND    *\n*        NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS    *\n*        PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO   *\n*        SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND       *\n*        (INDEPENDENTLY) R(S+1), ... ,R(N).                           *\n*                                                                     *\n*        M=9 SEEMS SLIGHTLY FASTER THAN M=8.                          *\n*                                                                     *\n*        VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.                 *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQUIKSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DC    XL10'00000000000000000000'\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n         DC    XL10'FFFFFFFFFFFFFFFFFFFF'\n*\n         DS    0F\nSTACK    EQU   *\n         DC    22F'0'              2*LN(N) FULLWORDS + 2\n*\nQUIKSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'MEDIAN OF THREE QUICKSORT (PARTITION EXCHANGE)'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LR    R12,R9\n         DROP  R9\n         USING SORTRTN,R12\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R2,=A(UNSORTED)     L <- 1\n         L     R3,=A(LASTUN)       R <- N\nNEWSTAGE LR    R9,R3               R9 <- R*10\n         SR    R9,R2               R9 <- (R-L)*10\n         SR    R8,R8\n         D     R8,=F'20'           R9 <- ((R-L)*10) / 10*2\n         M     R8,=F'10'           R9 <- DISP Q\n         LA    R4,0(R9,R2)         R4 <- PTR K(Q)\n         CLC   0(10,R2),0(R3)      K(L) < K(R)\n         BL    H1                  YES\n         CLC   0(10,R2),0(R4)      K(L) LE K(Q)\n         BNH   H3                  YES\n         CLC   0(10,R3),0(R4)      K(R) > K(Q)\n         BH    H4                  YES\n**********                         K(R) LE K(Q) < K(L)\n         XC    0(10,R2),0(R3)      INTERCHANGE K(L) AND K(R)\n         XC    0(10,R3),0(R2)\n         XC    0(10,R2),0(R3)\nH0       MVC   TEMP,0(R4)          TEMP <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\n         B     H6\n**********                         K(Q) < K(R) LE K(L)\nH4       MVC   TEMP,0(R3)          TEMP <- K(R)\n         MVC   0(10,R3),0(R2)      K(R) <- K(L)\n         MVC   0(10,R2),0(R4)      K(L) <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\n         B     H6\n**********                         K(R) LE K(L) LE K(Q)\nH3       MVC   TEMP,0(R2)          TEMP <- K(L)\n         MVC   0(10,R2),0(R3)      K(L) <- K(R)\n         MVC   0(10,R3),0(R4)      K(R) <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\n         B     H6\nH1       CLC   0(10,R2),0(R4)      K(L) GE K(Q)\n         BNL   H5                  YES\n         CLC   0(10,R3),0(R4)      K(R) > K(Q)\n         BH    H0                  YES K(L) < K(Q) < K(R)\n**********                         K(L) < K(R) LE K(Q)\n         MVC   TEMP,0(R3)          TEMP <- K(R)\n         MVC   0(10,R3),0(R4)      K(R) <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\n         B     H6\n**********                         K(Q) LE K(L) < K(R)\nH5       MVC   TEMP,0(R2)          TEMP <- K(L)\n         MVC   0(10,R2),0(R4)      K(L) <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\nH6       LA    R4,20(R2)           I <- L+2\n         LR    R5,R3               L <- R\n         B     COMPARE1\nEXCHANGE XC    0(10,R4),0(R5)      INTERCHANGE\n         XC    0(10,R5),0(R4)        K(I) AND K(J)\n         XC    0(10,R4),0(R5)\nNEXTI    LA    R4,10(R4)           I <- I+1\nCOMPARE1 CLC   TEMP,0(R4)          K > K(I) ?\n         BH    NEXTI               YES\nNEXTJ    S     R5,=F'10'           J <- J-1\n         CLC   TEMP,0(R5)          K < K(J) ?\n         BL    NEXTJ               YES\nTESTIJ   CR    R5,R4               J > I?\n         BH    EXCHANGE            YES\n         MVC   10(10,R2),0(R5)     K(L+1) <- K(J)\n         MVC   0(10,R5),TEMP       K(J) <- K\nSTACKIT  LR    R9,R3               R9 <- R\n         SR    R9,R5               R9 <- (R-J)*3\n         S     R9,=F'90'           R9 <- R-J-M  (M=9)\n         LR    R15,R5              R15 <- J\n         SR    R15,R2              R15 <- (J-L)*3\n         S     R15,=F'90'          R15 <- J-L-M\n         LR    R8,R9\n         SR    R8,R15\n         BC    10,NEXTEST          JUMP IF R-J GE J-L\n         LTR   R15,R15\n         BNP   UNSTACK             JUMP IF M GE J-L > R-J\n         LTR   R9,R9\n         BNP   NEXTR               J-L > M GE R-J\n         LA    R6,8(R6)            NOW J-L > R-J > M\n         ST    R2,0(R6)            STACK <- L\n         LR    R14,R5              R14 <- J\n         S     R14,=F'10'          R14 <- J-1\n         ST    R14,4(R6)           STACK <- J-1\nNEXTL    LA    R2,10(R5)           L <- J+1\n         B     NEWSTAGE\nNEXTEST  LTR   R9,R9\n         BNP   UNSTACK             M GE R-J GE J-L\n         LTR   R15,R15\n         BNP   NEXTL               R-J > M GE J-L\n         LA    R6,8(R6)\n         ST    R3,4(R6)            STACK <- R\n         LA    R14,10(R5)          R14 <- J+1\n         ST    R14,0(R6)           STACK <- J+1\nNEXTR    LR    R3,R5\n         S     R3,=F'10'           R <- J-1\n         B     NEWSTAGE\nUNSTACK  L     R2,0(R6)            L <- STACK\n         L     R3,4(R6)            R <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   NEWSTAGE            NO\n         LA    R1,999              STRAIGHT INSERTION SORT\n         L     R2,=A(UNSORTED+10)  J\nSAVEKEY  MVC   TEMP,0(R2)          K <- K(J)\n         LR    R3,R2\n         S     R3,=F'10'           I <- J-1\n         CLC   TEMP,0(R3)          K GE K(J-1)\n         BNL   JNEXT               NO\nMOVEKEY  MVC   10(10,R3),0(R3)     K(I+1) <- K(I)\n         S     R3,=F'10'           I <- I-1\n         CLC   TEMP,0(R3)          K GE K(I)\n         BL    MOVEKEY             NO\n         MVC   10(10,R3),TEMP      YES, K(I+1) <- K\nJNEXT    LA    R2,10(R2)           J <- J+1\n         BCT   R1,SAVEKEY\n         B     SEXIT\n         LTORG\n         DROP  R12\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00040": {"ttr": 11785, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\x87\\x01\\x87\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 391, "newlines": 391, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QUIKSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00040'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'MEDIAN OF THREE QUICKSORT (PARTITION EXCHANGE)'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        13 APR 1983 - CHARLES HOTTEL                                 *\n*        QUICKSORT (PARTITION EXCHANGE)                               *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 114-123                                   *\n*                                                                     *\n*        TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE   *\n*        DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO     *\n*        NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND    *\n*        NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS    *\n*        PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO   *\n*        SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND       *\n*        (INDEPENDENTLY) R(S+1), ... ,R(N).                           *\n*                                                                     *\n*        M=9 SEEMS SLIGHTLY FASTER THAN M=8.                          *\n*                                                                     *\n*        VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.                 *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        TESTING WORST CASE: ALL RECORDS ALREADY IN ORDER             *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQUIKSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DC    XL3'000000'\nUNSORTED EQU   *\n         DC    CL3'061'\n         DC    CL3'087'\n         DC    CL3'154'\n         DC    CL3'170'\n         DC    CL3'275'\n         DC    CL3'426'\n         DC    CL3'503'\n         DC    CL3'509'\n         DC    CL3'512'\n         DC    CL3'612'\n         DC    CL3'653'\n         DC    CL3'677'\n         DC    CL3'703'\n         DC    CL3'765'\n         DC    CL3'897'\n         DC    CL3'908'\nLASTUN   EQU   *-3\n         DC    XL3'FFFFFF'\n*\n         DS    0F\nSTACK    EQU   *\n         DC    20F'0'              2*LN(N) FULLWORDS\n*\nQUIKSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'MEDIAN OF THREE QUICKSORT (PARTITION EXCHANGE)'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LR    R12,R9\n         DROP  R9\n         USING SORTRTN,R12\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R2,=A(UNSORTED)     L <- 1\n         L     R3,=A(LASTUN)       R <- N\nNEWSTAGE LR    R9,R3               R9 <- R*3\n         SR    R9,R2               R9 <- (R-L)*3\n         SR    R8,R8\n         D     R8,=F'6'            R9 <- ((R-L)*3) / 3*2\n         M     R8,=F'3'            R9 <- DISP Q\n         LA    R4,0(R9,R2)         R4 <- PTR K(Q)\n         CLC   0(3,R2),0(R3)       K(L) < K(R)\n         BL    H1                  YES\n         CLC   0(3,R2),0(R4)       K(L) LE K(Q)\n         BNH   H3                  YES\n         CLC   0(3,R3),0(R4)       K(R) > K(Q)\n         BH    H4                  YES\n**********                         K(R) LE K(Q) < K(L)\n         XC    0(3,R2),0(R3)       INTERCHANGE K(L) AND K(R)\n         XC    0(3,R3),0(R2)\n         XC    0(3,R2),0(R3)\nH0       MVC   TEMP,0(R4)          TEMP <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\n         B     H6\n**********                         K(Q) < K(R) LE K(L)\nH4       MVC   TEMP,0(R3)          TEMP <- K(R)\n         MVC   0(3,R3),0(R2)       K(R) <- K(L)\n         MVC   0(3,R2),0(R4)       K(L) <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\n         B     H6\n**********                         K(R) LE K(L) LE K(Q)\nH3       MVC   TEMP,0(R2)          TEMP <- K(L)\n         MVC   0(3,R2),0(R3)       K(L) <- K(R)\n         MVC   0(3,R3),0(R4)       K(R) <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\n         B     H6\nH1       CLC   0(3,R2),0(R4)       K(L) GE K(Q)\n         BNL   H5                  YES\n         CLC   0(3,R3),0(R4)       K(R) > K(Q)\n         BH    H0                  YES K(L) < K(Q) < K(R)\n**********                         K(L) < K(R) LE K(Q)\n         MVC   TEMP,0(R3)          TEMP <- K(R)\n         MVC   0(3,R3),0(R4)       K(R) <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\n         B     H6\n**********                         K(Q) LE K(L) < K(R)\nH5       MVC   TEMP,0(R2)          TEMP <- K(L)\n         MVC   0(3,R2),0(R4)       K(L) <- K(Q)\n         MVC   0(3,R4),3(R2)       K(Q) <- K(L+1)\n         MVC   3(3,R2),TEMP        K(L+1) <- TEMP\nH6       LA    R4,6(R2)            I <- L+2\n         LR    R5,R3               L <- R\n         B     COMPARE1\nEXCHANGE XC    0(3,R4),0(R5)       INTERCHANGE\n         XC    0(3,R5),0(R4)         K(I) AND K(J)\n         XC    0(3,R4),0(R5)\nNEXTI    LA    R4,3(R4)            I <- I+1\nCOMPARE1 CLC   TEMP,0(R4)          K > K(I) ?\n         BH    NEXTI               YES\nNEXTJ    S     R5,=F'3'            J <- J-1\n         CLC   TEMP,0(R5)          K < K(J) ?\n         BL    NEXTJ               YES\nTESTIJ   CR    R5,R4               J > I?\n         BH    EXCHANGE            YES\n         MVC   3(3,R2),0(R5)       K(L+1) <- K(J)\n         MVC   0(3,R5),TEMP        K(J) <- K\nSTACKIT  LR    R9,R3               R9 <- R\n         SR    R9,R5               R9 <- (R-J)*3\n         S     R9,=F'27'           R9 <- R-J-M  (M=9)\n         LR    R15,R5              R15 <- J\n         SR    R15,R2              R15 <- (J-L)*3\n         S     R15,=F'27'          R15 <- J-L-M\n         LR    R8,R9\n         SR    R8,R15\n         BC    10,NEXTEST          JUMP IF R-J GE J-L\n         LTR   R15,R15\n         BNP   UNSTACK             JUMP IF M GE J-L > R-J\n         LTR   R9,R9\n         BNP   NEXTR               J-L > M GE R-J\n         LA    R6,8(R6)            NOW J-L > R-J > M\n         ST    R2,0(R6)            STACK <- L\n         LR    R14,R5              R14 <- J\n         S     R14,=F'3'           R14 <- J-1\n         ST    R14,4(R6)           STACK <- J-1\nNEXTL    LA    R2,3(R5)            L <- J+1\n         B     NEWSTAGE\nNEXTEST  LTR   R9,R9\n         BNP   UNSTACK             M GE R-J GE J-L\n         LTR   R15,R15\n         BNP   NEXTL               R-J > M GE J-L\n         LA    R6,8(R6)\n         ST    R3,4(R6)            STACK <- R\n         LA    R14,3(R5)           R14 <- J+1\n         ST    R14,0(R6)           STACK <- J+1\nNEXTR    LR    R3,R5\n         S     R3,=F'3'            R <- J-1\n         B     NEWSTAGE\nUNSTACK  L     R2,0(R6)            L <- STACK\n         L     R3,4(R6)            R <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   NEWSTAGE            NO\n         LA    R1,15               STRAIGHT INSERTION SORT\n         L     R2,=A(UNSORTED+3)   J\nSAVEKEY  MVC   TEMP,0(R2)          K <- K(J)\n         LR    R3,R2\n         S     R3,=F'3'            I <- J-1\n         CLC   TEMP,0(R3)          K GE K(J-1)\n         BNL   JNEXT               NO\nMOVEKEY  MVC   3(3,R3),0(R3)       K(I+1) <- K(I)\n         S     R3,=F'3'            I <- I-1\n         CLC   TEMP,0(R3)          K GE K(I)\n         BL    MOVEKEY             NO\n         MVC   3(3,R3),TEMP        YES, K(I+1) <- K\nJNEXT    LA    R2,3(R2)            J <- J+1\n         BCT   R1,SAVEKEY\n         B     SEXIT\n         LTORG\n         DROP  R12\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00041": {"ttr": 12038, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05_\\x05_\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1375, "newlines": 1375, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QUIKSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00041'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'MEDIAN OF THREE QUICKSORT (PARTITION EXCHANGE)'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        13 APR 1983 - CHARLES HOTTEL                                 *\n*        QUICKSORT (PARTITION EXCHANGE)                               *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 114-123                                   *\n*                                                                     *\n*        TAKE ONE RECORD AND MOVE IT TO ITS FINAL POSITION S. WHILE   *\n*        DETERMINING THIS FINAL POSITION REARRANGE THE RECORDS SO     *\n*        NONE WITH GREATER KEYS ARE TO THE LEFT OF POSITION S, AND    *\n*        NONE WITH SMALLER KEYS ARE TO THE RIGHT. THE FILE IS THUS    *\n*        PARTITIONED SO THAT THE ORIGINAL PROBLEM IS REDUCED TO TWO   *\n*        SIMPLER PROBLEMS, NAMELY TO SORT R(1), ... .R(S-1) AND       *\n*        (INDEPENDENTLY) R(S+1), ... ,R(N).                           *\n*                                                                     *\n*        M=9 SEEMS SLIGHTLY FASTER THAN M=8.                          *\n*                                                                     *\n*        VERY SLOW IF ORIGINAL FILE ALREADY IN ORDER.                 *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        TESTING WORST CASE: ALL RECORDS ALREADY IN ORDER             *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQUIKSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-12\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-8\n         DROP  R15\n         USING MAIN,R10,R11\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DC    XL10'00000000000000000000'\nUNSORTED  EQU  *\n          DC   CL10'0021777608'\n          DC   CL10'0027612669'\n          DC   CL10'0044709516'\n          DC   CL10'0063381812'\n          DC   CL10'0109127207'\n          DC   CL10'0110866296'\n          DC   CL10'0119215494'\n          DC   CL10'0124102660'\n          DC   CL10'0125735609'\n          DC   CL10'0129905505'\n          DC   CL10'0131160193'\n          DC   CL10'0159383950'\n          DC   CL10'0201923441'\n          DC   CL10'0213162155'\n          DC   CL10'0216719243'\n          DC   CL10'0217211427'\n          DC   CL10'0218026627'\n          DC   CL10'0241754751'\n          DC   CL10'0242199350'\n          DC   CL10'0243554165'\n          DC   CL10'0244567532'\n          DC   CL10'0246582414'\n          DC   CL10'0265668719'\n          DC   CL10'0269317263'\n          DC   CL10'0287224727'\n          DC   CL10'0295004946'\n          DC   CL10'0295810742'\n          DC   CL10'0298867763'\n          DC   CL10'0304818949'\n          DC   CL10'0333506667'\n          DC   CL10'0341973416'\n          DC   CL10'0342069814'\n          DC   CL10'0347745052'\n          DC   CL10'0350150475'\n          DC   CL10'0356352558'\n          DC   CL10'0374688198'\n          DC   CL10'0378208449'\n          DC   CL10'0383088094'\n          DC   CL10'0391251011'\n          DC   CL10'0397635966'\n          DC   CL10'0404123135'\n          DC   CL10'0407531659'\n          DC   CL10'0411859804'\n          DC   CL10'0415728203'\n          DC   CL10'0425389343'\n          DC   CL10'0430176038'\n          DC   CL10'0438108163'\n          DC   CL10'0438663301'\n          DC   CL10'0457377863'\n          DC   CL10'0470272897'\n          DC   CL10'0472398811'\n          DC   CL10'0483312294'\n          DC   CL10'0485448434'\n          DC   CL10'0495310799'\n          DC   CL10'0496791189'\n          DC   CL10'0510649893'\n          DC   CL10'0511433940'\n          DC   CL10'0511646625'\n          DC   CL10'0517639587'\n          DC   CL10'0518520315'\n          DC   CL10'0541991360'\n          DC   CL10'0544933583'\n          DC   CL10'0588657390'\n          DC   CL10'0612793626'\n          DC   CL10'0616034514'\n          DC   CL10'0622321914'\n          DC   CL10'0637516947'\n          DC   CL10'0647477320'\n          DC   CL10'0647777208'\n          DC   CL10'0661744102'\n          DC   CL10'0667273759'\n          DC   CL10'0670956338'\n          DC   CL10'0681335564'\n          DC   CL10'0686500629'\n          DC   CL10'0686700231'\n          DC   CL10'0714777108'\n          DC   CL10'0722588209'\n          DC   CL10'0743022964'\n          DC   CL10'0756256838'\n          DC   CL10'0804677453'\n          DC   CL10'0826611007'\n          DC   CL10'0847201640'\n          DC   CL10'0855215859'\n          DC   CL10'0857169190'\n          DC   CL10'0866220927'\n          DC   CL10'0869536638'\n          DC   CL10'0894127953'\n          DC   CL10'0894858606'\n          DC   CL10'0906281426'\n          DC   CL10'0907157687'\n          DC   CL10'0919922282'\n          DC   CL10'0928009527'\n          DC   CL10'0930832968'\n          DC   CL10'0932853941'\n          DC   CL10'0951309693'\n          DC   CL10'0967769107'\n          DC   CL10'0978045612'\n          DC   CL10'1004535486'\n          DC   CL10'1008725474'\n          DC   CL10'1009393768'\n          DC   CL10'1021634133'\n          DC   CL10'1026839376'\n          DC   CL10'1028796002'\n          DC   CL10'1034528113'\n          DC   CL10'1036074096'\n          DC   CL10'1036622827'\n          DC   CL10'1045950143'\n          DC   CL10'1047261909'\n          DC   CL10'1053803551'\n          DC   CL10'1055817303'\n          DC   CL10'1070588771'\n          DC   CL10'1090578040'\n          DC   CL10'1094183483'\n          DC   CL10'1102965965'\n          DC   CL10'1113496985'\n          DC   CL10'1124826024'\n          DC   CL10'1169066430'\n          DC   CL10'1170852922'\n          DC   CL10'1175414415'\n          DC   CL10'1175901510'\n          DC   CL10'1176047902'\n          DC   CL10'1182833385'\n          DC   CL10'1209852058'\n          DC   CL10'1229538482'\n          DC   CL10'1252476538'\n          DC   CL10'1262465755'\n          DC   CL10'1283649175'\n          DC   CL10'1293508166'\n          DC   CL10'1300971865'\n          DC   CL10'1309560725'\n          DC   CL10'1334447563'\n          DC   CL10'1343776836'\n          DC   CL10'1366017127'\n          DC   CL10'1406211586'\n          DC   CL10'1416503025'\n          DC   CL10'1428066942'\n          DC   CL10'1432942365'\n          DC   CL10'1444855750'\n          DC   CL10'1448433468'\n          DC   CL10'1448838730'\n          DC   CL10'1465609943'\n          DC   CL10'1469514872'\n          DC   CL10'1478252658'\n          DC   CL10'1481674017'\n          DC   CL10'1487783464'\n          DC   CL10'1493612746'\n          DC   CL10'1506827363'\n          DC   CL10'1510218230'\n          DC   CL10'1510752158'\n          DC   CL10'1515117817'\n          DC   CL10'1519007403'\n          DC   CL10'1520984600'\n          DC   CL10'1522697574'\n          DC   CL10'1527224381'\n          DC   CL10'1547170224'\n          DC   CL10'1553542330'\n          DC   CL10'1563502577'\n          DC   CL10'1567055502'\n          DC   CL10'1575299923'\n          DC   CL10'1599853705'\n          DC   CL10'1606377408'\n          DC   CL10'1608840747'\n          DC   CL10'1621991737'\n          DC   CL10'1630588698'\n          DC   CL10'1638250572'\n          DC   CL10'1654896952'\n          DC   CL10'1658768311'\n          DC   CL10'1659356334'\n          DC   CL10'1662932899'\n          DC   CL10'1669110221'\n          DC   CL10'1670254329'\n          DC   CL10'1680667485'\n          DC   CL10'1682953374'\n          DC   CL10'1683396492'\n          DC   CL10'1704233907'\n          DC   CL10'1718754999'\n          DC   CL10'1727381522'\n          DC   CL10'1730008644'\n          DC   CL10'1733029984'\n          DC   CL10'1737046676'\n          DC   CL10'1750507756'\n          DC   CL10'1759059386'\n          DC   CL10'1761684083'\n          DC   CL10'1767326447'\n          DC   CL10'1775777708'\n          DC   CL10'1776871076'\n          DC   CL10'1783737437'\n          DC   CL10'1796424079'\n          DC   CL10'1801389277'\n          DC   CL10'1807981546'\n          DC   CL10'1819296715'\n          DC   CL10'1823645616'\n          DC   CL10'1850521488'\n          DC   CL10'1869574749'\n          DC   CL10'1873888347'\n          DC   CL10'1877504009'\n          DC   CL10'1916989089'\n          DC   CL10'1918345822'\n          DC   CL10'1923132262'\n          DC   CL10'1926239473'\n          DC   CL10'1934646582'\n          DC   CL10'1946142617'\n          DC   CL10'1948521828'\n          DC   CL10'1954513695'\n          DC   CL10'1970220975'\n          DC   CL10'1977910306'\n          DC   CL10'1993801028'\n          DC   CL10'1994641628'\n          DC   CL10'2003724911'\n          DC   CL10'2005934797'\n          DC   CL10'2009368031'\n          DC   CL10'2023217125'\n          DC   CL10'2034099345'\n          DC   CL10'2038908934'\n          DC   CL10'2044061926'\n          DC   CL10'2059961681'\n          DC   CL10'2065592775'\n          DC   CL10'2072647459'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'2113148651'\n          DC   CL10'2128795604'\n          DC   CL10'2139096544'\n          DC   CL10'2141578675'\n          DC   CL10'2141727998'\n          DC   CL10'2144637213'\n          DC   CL10'2144977308'\n          DC   CL10'2163772156'\n          DC   CL10'2169298540'\n          DC   CL10'2177375639'\n          DC   CL10'2216813290'\n          DC   CL10'2222675501'\n          DC   CL10'2230174310'\n          DC   CL10'2231104325'\n          DC   CL10'2233677591'\n          DC   CL10'2252189346'\n          DC   CL10'2275690210'\n          DC   CL10'2284873668'\n          DC   CL10'2285848536'\n          DC   CL10'2286342506'\n          DC   CL10'2302069743'\n          DC   CL10'2307633383'\n          DC   CL10'2315437316'\n          DC   CL10'2338259443'\n          DC   CL10'2339574706'\n          DC   CL10'2355329543'\n          DC   CL10'2369764575'\n          DC   CL10'2376377908'\n          DC   CL10'2389120744'\n          DC   CL10'2396911987'\n          DC   CL10'2398938103'\n          DC   CL10'2400421895'\n          DC   CL10'2422232634'\n          DC   CL10'2425747753'\n          DC   CL10'2452295581'\n          DC   CL10'2453201288'\n          DC   CL10'2463397457'\n          DC   CL10'2488720988'\n          DC   CL10'2491407260'\n          DC   CL10'2512272436'\n          DC   CL10'2518972405'\n          DC   CL10'2524558876'\n          DC   CL10'2533023160'\n          DC   CL10'2544618053'\n          DC   CL10'2574915986'\n          DC   CL10'2584106197'\n          DC   CL10'2586698969'\n          DC   CL10'2587130549'\n          DC   CL10'2593365519'\n          DC   CL10'2601564517'\n          DC   CL10'2609800752'\n          DC   CL10'2612833848'\n          DC   CL10'2629152958'\n          DC   CL10'2657748187'\n          DC   CL10'2662116167'\n          DC   CL10'2679767239'\n          DC   CL10'2682008352'\n          DC   CL10'2685466240'\n          DC   CL10'2693983276'\n          DC   CL10'2695284092'\n          DC   CL10'2703499802'\n          DC   CL10'2722314424'\n          DC   CL10'2724557663'\n          DC   CL10'2726348003'\n          DC   CL10'2740708470'\n          DC   CL10'2756790530'\n          DC   CL10'2764666071'\n          DC   CL10'2807857653'\n          DC   CL10'2813767803'\n          DC   CL10'2816227704'\n          DC   CL10'2836247091'\n          DC   CL10'2836687970'\n          DC   CL10'2847713657'\n          DC   CL10'2863161645'\n          DC   CL10'2868240302'\n          DC   CL10'2882509469'\n          DC   CL10'2883441128'\n          DC   CL10'2884145001'\n          DC   CL10'2886269710'\n          DC   CL10'2890004371'\n          DC   CL10'2901437526'\n          DC   CL10'2908096078'\n          DC   CL10'2918179151'\n          DC   CL10'2924990815'\n          DC   CL10'2925865139'\n          DC   CL10'2943078847'\n          DC   CL10'2978879793'\n          DC   CL10'2979680261'\n          DC   CL10'2987837853'\n          DC   CL10'2989933983'\n          DC   CL10'3009924766'\n          DC   CL10'3010102732'\n          DC   CL10'3015620511'\n          DC   CL10'3020793152'\n          DC   CL10'3026659535'\n          DC   CL10'3032523980'\n          DC   CL10'3049097295'\n          DC   CL10'3077327176'\n          DC   CL10'3079859595'\n          DC   CL10'3081869339'\n          DC   CL10'3083893881'\n          DC   CL10'3090555978'\n          DC   CL10'3092155047'\n          DC   CL10'3092863149'\n          DC   CL10'3114643592'\n          DC   CL10'3133986654'\n          DC   CL10'3139779380'\n          DC   CL10'3152278214'\n          DC   CL10'3157858597'\n          DC   CL10'3184472762'\n          DC   CL10'3186535891'\n          DC   CL10'3199523856'\n          DC   CL10'3232136869'\n          DC   CL10'3246054935'\n          DC   CL10'3248183233'\n          DC   CL10'3256786735'\n          DC   CL10'3262132801'\n          DC   CL10'3269783286'\n          DC   CL10'3277199285'\n          DC   CL10'3295843454'\n          DC   CL10'3297999589'\n          DC   CL10'3319616438'\n          DC   CL10'3325756816'\n          DC   CL10'3327808029'\n          DC   CL10'3338981601'\n          DC   CL10'3344508515'\n          DC   CL10'3345279264'\n          DC   CL10'3353162830'\n          DC   CL10'3358601905'\n          DC   CL10'3364087686'\n          DC   CL10'3367090129'\n          DC   CL10'3385869120'\n          DC   CL10'3387803789'\n          DC   CL10'3402810761'\n          DC   CL10'3410613712'\n          DC   CL10'3415624636'\n          DC   CL10'3416289223'\n          DC   CL10'3425687957'\n          DC   CL10'3428793268'\n          DC   CL10'3430673539'\n          DC   CL10'3452683833'\n          DC   CL10'3463687713'\n          DC   CL10'3496725929'\n          DC   CL10'3505005889'\n          DC   CL10'3531089061'\n          DC   CL10'3544489840'\n          DC   CL10'3548439886'\n          DC   CL10'3566158281'\n          DC   CL10'3578295917'\n          DC   CL10'3606218529'\n          DC   CL10'3609960123'\n          DC   CL10'3621038015'\n          DC   CL10'3625252117'\n          DC   CL10'3627055019'\n          DC   CL10'3635946109'\n          DC   CL10'3655561888'\n          DC   CL10'3658796578'\n          DC   CL10'3665273648'\n          DC   CL10'3665932525'\n          DC   CL10'3673647154'\n          DC   CL10'3682736375'\n          DC   CL10'3694896336'\n          DC   CL10'3698845784'\n          DC   CL10'3704809623'\n          DC   CL10'3707569144'\n          DC   CL10'3708816466'\n          DC   CL10'3715241774'\n          DC   CL10'3737691656'\n          DC   CL10'3741778199'\n          DC   CL10'3755663894'\n          DC   CL10'3758750173'\n          DC   CL10'3772702776'\n          DC   CL10'3777461584'\n          DC   CL10'3787896571'\n          DC   CL10'3795936465'\n          DC   CL10'3801898777'\n          DC   CL10'3815888699'\n          DC   CL10'3825916938'\n          DC   CL10'3829666331'\n          DC   CL10'3830408962'\n          DC   CL10'3835275994'\n          DC   CL10'3839559432'\n          DC   CL10'3839616878'\n          DC   CL10'3842431364'\n          DC   CL10'3845774769'\n          DC   CL10'3871130565'\n          DC   CL10'3888423157'\n          DC   CL10'3889103631'\n          DC   CL10'3893656452'\n          DC   CL10'3893799393'\n          DC   CL10'3903243195'\n          DC   CL10'3912149423'\n          DC   CL10'3927724004'\n          DC   CL10'3930991335'\n          DC   CL10'3946441022'\n          DC   CL10'3951386821'\n          DC   CL10'3954741049'\n          DC   CL10'3968593246'\n          DC   CL10'3980200299'\n          DC   CL10'3994269823'\n          DC   CL10'4032829857'\n          DC   CL10'4041091177'\n          DC   CL10'4052483870'\n          DC   CL10'4054368798'\n          DC   CL10'4058524665'\n          DC   CL10'4082518764'\n          DC   CL10'4087244297'\n          DC   CL10'4109725090'\n          DC   CL10'4126998063'\n          DC   CL10'4141332115'\n          DC   CL10'4146105391'\n          DC   CL10'4165437910'\n          DC   CL10'4193813874'\n          DC   CL10'4213406110'\n          DC   CL10'4225518754'\n          DC   CL10'4233008317'\n          DC   CL10'4234405322'\n          DC   CL10'4245641000'\n          DC   CL10'4250573220'\n          DC   CL10'4255455557'\n          DC   CL10'4261367795'\n          DC   CL10'4278411030'\n          DC   CL10'4293029016'\n          DC   CL10'4304448398'\n          DC   CL10'4306179254'\n          DC   CL10'4332924734'\n          DC   CL10'4339308153'\n          DC   CL10'4341809837'\n          DC   CL10'4342046037'\n          DC   CL10'4354048918'\n          DC   CL10'4361475807'\n          DC   CL10'4361988925'\n          DC   CL10'4365677512'\n          DC   CL10'4365695641'\n          DC   CL10'4367068462'\n          DC   CL10'4374982729'\n          DC   CL10'4376019850'\n          DC   CL10'4382148265'\n          DC   CL10'4395321328'\n          DC   CL10'4399652566'\n          DC   CL10'4399889973'\n          DC   CL10'4403915745'\n          DC   CL10'4415227580'\n          DC   CL10'4420964547'\n          DC   CL10'4425250854'\n          DC   CL10'4440349726'\n          DC   CL10'4442600677'\n          DC   CL10'4446271569'\n          DC   CL10'4452119323'\n          DC   CL10'4455138672'\n          DC   CL10'4459585269'\n          DC   CL10'4480439106'\n          DC   CL10'4499203387'\n          DC   CL10'4501837884'\n          DC   CL10'4511944944'\n          DC   CL10'4515414182'\n          DC   CL10'4525397489'\n          DC   CL10'4531464162'\n          DC   CL10'4532128318'\n          DC   CL10'4539127550'\n          DC   CL10'4541806875'\n          DC   CL10'4542498305'\n          DC   CL10'4564553568'\n          DC   CL10'4571377709'\n          DC   CL10'4578912800'\n          DC   CL10'4606150105'\n          DC   CL10'4615307402'\n          DC   CL10'4676559607'\n          DC   CL10'4677868018'\n          DC   CL10'4691403480'\n          DC   CL10'4708979219'\n          DC   CL10'4711251680'\n          DC   CL10'4717926359'\n          DC   CL10'4718112570'\n          DC   CL10'4718828567'\n          DC   CL10'4722569401'\n          DC   CL10'4731985446'\n          DC   CL10'4733686614'\n          DC   CL10'4746081896'\n          DC   CL10'4760993077'\n          DC   CL10'4772569573'\n          DC   CL10'4775657044'\n          DC   CL10'4784105826'\n          DC   CL10'4788384767'\n          DC   CL10'4796208846'\n          DC   CL10'4807640041'\n          DC   CL10'4818917707'\n          DC   CL10'4825735132'\n          DC   CL10'4826671921'\n          DC   CL10'4834267841'\n          DC   CL10'4838670864'\n          DC   CL10'4840642324'\n          DC   CL10'4851436890'\n          DC   CL10'4868476778'\n          DC   CL10'4884001528'\n          DC   CL10'4894180366'\n          DC   CL10'4909094411'\n          DC   CL10'4924053684'\n          DC   CL10'4932226772'\n          DC   CL10'4963999866'\n          DC   CL10'4976581420'\n          DC   CL10'4988242159'\n          DC   CL10'4997957903'\n          DC   CL10'5001541312'\n          DC   CL10'5012943915'\n          DC   CL10'5022145245'\n          DC   CL10'5025088118'\n          DC   CL10'5031739843'\n          DC   CL10'5061464234'\n          DC   CL10'5062777099'\n          DC   CL10'5081606619'\n          DC   CL10'5085358271'\n          DC   CL10'5097340862'\n          DC   CL10'5131008598'\n          DC   CL10'5136707186'\n          DC   CL10'5137829773'\n          DC   CL10'5138392919'\n          DC   CL10'5141292181'\n          DC   CL10'5148786272'\n          DC   CL10'5167188055'\n          DC   CL10'5170458496'\n          DC   CL10'5171457235'\n          DC   CL10'5173509412'\n          DC   CL10'5175852258'\n          DC   CL10'5176912171'\n          DC   CL10'5184641688'\n          DC   CL10'5195953924'\n          DC   CL10'5201121972'\n          DC   CL10'5201791491'\n          DC   CL10'5212207442'\n          DC   CL10'5237405495'\n          DC   CL10'5241948690'\n          DC   CL10'5248438067'\n          DC   CL10'5264958561'\n          DC   CL10'5280097813'\n          DC   CL10'5297165057'\n          DC   CL10'5298755992'\n          DC   CL10'5300159981'\n          DC   CL10'5321710355'\n          DC   CL10'5337606906'\n          DC   CL10'5345334579'\n          DC   CL10'5371357959'\n          DC   CL10'5385074372'\n          DC   CL10'5395385796'\n          DC   CL10'5397272711'\n          DC   CL10'5401039694'\n          DC   CL10'5425916378'\n          DC   CL10'5431977508'\n          DC   CL10'5433720236'\n          DC   CL10'5442562396'\n          DC   CL10'5449773212'\n          DC   CL10'5456759873'\n          DC   CL10'5457552652'\n          DC   CL10'5475656321'\n          DC   CL10'5506681939'\n          DC   CL10'5508940292'\n          DC   CL10'5526397503'\n          DC   CL10'5534401507'\n          DC   CL10'5549481728'\n          DC   CL10'5558764121'\n          DC   CL10'5561094977'\n          DC   CL10'5563765185'\n          DC   CL10'5565101216'\n          DC   CL10'5572035250'\n          DC   CL10'5576869845'\n          DC   CL10'5591433733'\n          DC   CL10'5596327164'\n          DC   CL10'5614513448'\n          DC   CL10'5619387353'\n          DC   CL10'5621486760'\n          DC   CL10'5626236138'\n          DC   CL10'5627716670'\n          DC   CL10'5641763691'\n          DC   CL10'5642391145'\n          DC   CL10'5642531085'\n          DC   CL10'5643322010'\n          DC   CL10'5653365020'\n          DC   CL10'5663840721'\n          DC   CL10'5675001931'\n          DC   CL10'5675989559'\n          DC   CL10'5679881257'\n          DC   CL10'5701796697'\n          DC   CL10'5705291655'\n          DC   CL10'5707472066'\n          DC   CL10'5707681244'\n          DC   CL10'5725273168'\n          DC   CL10'5735000362'\n          DC   CL10'5744251794'\n          DC   CL10'5750582397'\n          DC   CL10'5764563450'\n          DC   CL10'5765477779'\n          DC   CL10'5768466287'\n          DC   CL10'5778297253'\n          DC   CL10'5781827937'\n          DC   CL10'5792681088'\n          DC   CL10'5823087664'\n          DC   CL10'5826049791'\n          DC   CL10'5852626081'\n          DC   CL10'5859069484'\n          DC   CL10'5871856400'\n          DC   CL10'5879594685'\n          DC   CL10'5923848700'\n          DC   CL10'5930920717'\n          DC   CL10'5939740534'\n          DC   CL10'5945977008'\n          DC   CL10'5953591351'\n          DC   CL10'5974120497'\n          DC   CL10'5980530023'\n          DC   CL10'5982500270'\n          DC   CL10'6013020304'\n          DC   CL10'6017590576'\n          DC   CL10'6027151395'\n          DC   CL10'6031477613'\n          DC   CL10'6034259879'\n          DC   CL10'6034977111'\n          DC   CL10'6038224205'\n          DC   CL10'6040047313'\n          DC   CL10'6042427892'\n          DC   CL10'6046911354'\n          DC   CL10'6055320835'\n          DC   CL10'6071816834'\n          DC   CL10'6076953748'\n          DC   CL10'6078781716'\n          DC   CL10'6089806179'\n          DC   CL10'6102241319'\n          DC   CL10'6111881741'\n          DC   CL10'6114026406'\n          DC   CL10'6131336255'\n          DC   CL10'6153092070'\n          DC   CL10'6176508218'\n          DC   CL10'6189589095'\n          DC   CL10'6195575064'\n          DC   CL10'6214334476'\n          DC   CL10'6214652858'\n          DC   CL10'6219336562'\n          DC   CL10'6274959967'\n          DC   CL10'6277765141'\n          DC   CL10'6291772134'\n          DC   CL10'6299003602'\n          DC   CL10'6301600736'\n          DC   CL10'6309461069'\n          DC   CL10'6316443356'\n          DC   CL10'6321644499'\n          DC   CL10'6340650247'\n          DC   CL10'6362585477'\n          DC   CL10'6378346611'\n          DC   CL10'6380603394'\n          DC   CL10'6392883433'\n          DC   CL10'6401696170'\n          DC   CL10'6405784661'\n          DC   CL10'6410072367'\n          DC   CL10'6419378045'\n          DC   CL10'6420659456'\n          DC   CL10'6423082237'\n          DC   CL10'6441887377'\n          DC   CL10'6491948418'\n          DC   CL10'6492977996'\n          DC   CL10'6526299792'\n          DC   CL10'6536513368'\n          DC   CL10'6565462961'\n          DC   CL10'6583467513'\n          DC   CL10'6610884504'\n          DC   CL10'6617160065'\n          DC   CL10'6619899880'\n          DC   CL10'6620218026'\n          DC   CL10'6632012192'\n          DC   CL10'6634201034'\n          DC   CL10'6640171757'\n          DC   CL10'6650685307'\n          DC   CL10'6656036861'\n          DC   CL10'6706822399'\n          DC   CL10'6708832431'\n          DC   CL10'6743900337'\n          DC   CL10'6744618021'\n          DC   CL10'6745219809'\n          DC   CL10'6750654554'\n          DC   CL10'6750835075'\n          DC   CL10'6758118765'\n          DC   CL10'6768877384'\n          DC   CL10'6788433333'\n          DC   CL10'6795597451'\n          DC   CL10'6819051409'\n          DC   CL10'6824188618'\n          DC   CL10'6829686930'\n          DC   CL10'6834837074'\n          DC   CL10'6837439723'\n          DC   CL10'6876599643'\n          DC   CL10'6879934131'\n          DC   CL10'6882383883'\n          DC   CL10'6906496238'\n          DC   CL10'6915994267'\n          DC   CL10'6941536678'\n          DC   CL10'6959831086'\n          DC   CL10'6980841188'\n          DC   CL10'6984337341'\n          DC   CL10'6999538714'\n          DC   CL10'7014869731'\n          DC   CL10'7020490806'\n          DC   CL10'7024630382'\n          DC   CL10'7025953068'\n          DC   CL10'7031389620'\n          DC   CL10'7039033783'\n          DC   CL10'7043099673'\n          DC   CL10'7059883683'\n          DC   CL10'7072494621'\n          DC   CL10'7078217222'\n          DC   CL10'7093977808'\n          DC   CL10'7138113868'\n          DC   CL10'7170701585'\n          DC   CL10'7175433348'\n          DC   CL10'7177468298'\n          DC   CL10'7191388279'\n          DC   CL10'7206997982'\n          DC   CL10'7211070860'\n          DC   CL10'7211151702'\n          DC   CL10'7221527032'\n          DC   CL10'7224666599'\n          DC   CL10'7228989035'\n          DC   CL10'7257486349'\n          DC   CL10'7260553248'\n          DC   CL10'7263703419'\n          DC   CL10'7278163786'\n          DC   CL10'7292854960'\n          DC   CL10'7295504370'\n          DC   CL10'7328744136'\n          DC   CL10'7341681867'\n          DC   CL10'7349775632'\n          DC   CL10'7360355280'\n          DC   CL10'7366688666'\n          DC   CL10'7378402421'\n          DC   CL10'7379753810'\n          DC   CL10'7385386989'\n          DC   CL10'7400995389'\n          DC   CL10'7403393048'\n          DC   CL10'7416875787'\n          DC   CL10'7419152479'\n          DC   CL10'7448619971'\n          DC   CL10'7457852404'\n          DC   CL10'7465038901'\n          DC   CL10'7473093184'\n          DC   CL10'7476835831'\n          DC   CL10'7479549097'\n          DC   CL10'7496108098'\n          DC   CL10'7524793289'\n          DC   CL10'7529154440'\n          DC   CL10'7537430309'\n          DC   CL10'7539954682'\n          DC   CL10'7540592790'\n          DC   CL10'7555744266'\n          DC   CL10'7591761928'\n          DC   CL10'7624869674'\n          DC   CL10'7627426114'\n          DC   CL10'7665518013'\n          DC   CL10'7667230087'\n          DC   CL10'7675776278'\n          DC   CL10'7679716679'\n          DC   CL10'7681142671'\n          DC   CL10'7681922140'\n          DC   CL10'7686790093'\n          DC   CL10'7686947369'\n          DC   CL10'7690923006'\n          DC   CL10'7699537531'\n          DC   CL10'7724354542'\n          DC   CL10'7726068392'\n          DC   CL10'7734167553'\n          DC   CL10'7743096849'\n          DC   CL10'7777348521'\n          DC   CL10'7783677062'\n          DC   CL10'7785283283'\n          DC   CL10'7789745740'\n          DC   CL10'7799100194'\n          DC   CL10'7805934460'\n          DC   CL10'7808769493'\n          DC   CL10'7817561428'\n          DC   CL10'7846276005'\n          DC   CL10'7848321487'\n          DC   CL10'7869520770'\n          DC   CL10'7876388204'\n          DC   CL10'7880707913'\n          DC   CL10'7896530724'\n          DC   CL10'7899381782'\n          DC   CL10'7952915161'\n          DC   CL10'7964352758'\n          DC   CL10'7968945590'\n          DC   CL10'7979475780'\n          DC   CL10'7996608718'\n          DC   CL10'8003680043'\n          DC   CL10'8006156056'\n          DC   CL10'8014572229'\n          DC   CL10'8027939593'\n          DC   CL10'8040889696'\n          DC   CL10'8041396877'\n          DC   CL10'8048427256'\n          DC   CL10'8074041252'\n          DC   CL10'8078001788'\n          DC   CL10'8081562472'\n          DC   CL10'8091838842'\n          DC   CL10'8091839855'\n          DC   CL10'8099335130'\n          DC   CL10'8118801689'\n          DC   CL10'8123221991'\n          DC   CL10'8127785251'\n          DC   CL10'8131002824'\n          DC   CL10'8133182954'\n          DC   CL10'8155628498'\n          DC   CL10'8162793635'\n          DC   CL10'8174979342'\n          DC   CL10'8176019027'\n          DC   CL10'8196379523'\n          DC   CL10'8198652458'\n          DC   CL10'8217281228'\n          DC   CL10'8234802647'\n          DC   CL10'8245886326'\n          DC   CL10'8250774014'\n          DC   CL10'8261864974'\n          DC   CL10'8266839060'\n          DC   CL10'8284252649'\n          DC   CL10'8284985610'\n          DC   CL10'8317518932'\n          DC   CL10'8318918560'\n          DC   CL10'8321123142'\n          DC   CL10'8326027594'\n          DC   CL10'8350371692'\n          DC   CL10'8363333191'\n          DC   CL10'8367220073'\n          DC   CL10'8372418425'\n          DC   CL10'8372701490'\n          DC   CL10'8373228818'\n          DC   CL10'8390001046'\n          DC   CL10'8392614976'\n          DC   CL10'8409030217'\n          DC   CL10'8422464137'\n          DC   CL10'8431528200'\n          DC   CL10'8441898124'\n          DC   CL10'8446793887'\n          DC   CL10'8455968518'\n          DC   CL10'8456810072'\n          DC   CL10'8459674825'\n          DC   CL10'8461533533'\n          DC   CL10'8474892202'\n          DC   CL10'8484739956'\n          DC   CL10'8501210340'\n          DC   CL10'8516432844'\n          DC   CL10'8532171439'\n          DC   CL10'8542248852'\n          DC   CL10'8554607545'\n          DC   CL10'8561872344'\n          DC   CL10'8570796738'\n          DC   CL10'8575481588'\n          DC   CL10'8582131225'\n          DC   CL10'8593413955'\n          DC   CL10'8605152358'\n          DC   CL10'8609761388'\n          DC   CL10'8615700059'\n          DC   CL10'8620256478'\n          DC   CL10'8632028785'\n          DC   CL10'8647956104'\n          DC   CL10'8653060920'\n          DC   CL10'8666619291'\n          DC   CL10'8677951242'\n          DC   CL10'8683917119'\n          DC   CL10'8685504552'\n          DC   CL10'8704495042'\n          DC   CL10'8706993147'\n          DC   CL10'8716714630'\n          DC   CL10'8719657413'\n          DC   CL10'8734136429'\n          DC   CL10'8742955537'\n          DC   CL10'8743127805'\n          DC   CL10'8747566951'\n          DC   CL10'8761075556'\n          DC   CL10'8771675995'\n          DC   CL10'8774372180'\n          DC   CL10'8775370196'\n          DC   CL10'8782023945'\n          DC   CL10'8800423169'\n          DC   CL10'8802348898'\n          DC   CL10'8803827781'\n          DC   CL10'8807543455'\n          DC   CL10'8815379839'\n          DC   CL10'8817930819'\n          DC   CL10'8824964249'\n          DC   CL10'8828773871'\n          DC   CL10'8836215227'\n          DC   CL10'8864169622'\n          DC   CL10'8888984259'\n          DC   CL10'8906179273'\n          DC   CL10'8912574126'\n          DC   CL10'8942152936'\n          DC   CL10'8951906361'\n          DC   CL10'8965891650'\n          DC   CL10'8969836178'\n          DC   CL10'8970320500'\n          DC   CL10'8970957201'\n          DC   CL10'8971292916'\n          DC   CL10'8972698172'\n          DC   CL10'8973826215'\n          DC   CL10'8977793548'\n          DC   CL10'8979968036'\n          DC   CL10'8986560851'\n          DC   CL10'8986613327'\n          DC   CL10'8990850471'\n          DC   CL10'8992443407'\n          DC   CL10'8996009174'\n          DC   CL10'9008293509'\n          DC   CL10'9020317555'\n          DC   CL10'9071539357'\n          DC   CL10'9078253445'\n          DC   CL10'9082725435'\n          DC   CL10'9142951241'\n          DC   CL10'9145381274'\n          DC   CL10'9159017410'\n          DC   CL10'9172277739'\n          DC   CL10'9188307050'\n          DC   CL10'9195709541'\n          DC   CL10'9216384444'\n          DC   CL10'9222373637'\n          DC   CL10'9225330314'\n          DC   CL10'9289664100'\n          DC   CL10'9315691904'\n          DC   CL10'9321130226'\n          DC   CL10'9334903211'\n          DC   CL10'9336349912'\n          DC   CL10'9342886112'\n          DC   CL10'9354071150'\n          DC   CL10'9378133933'\n          DC   CL10'9394383633'\n          DC   CL10'9411106082'\n          DC   CL10'9420163039'\n          DC   CL10'9425802615'\n          DC   CL10'9461157722'\n          DC   CL10'9469873148'\n          DC   CL10'9473843829'\n          DC   CL10'9477987603'\n          DC   CL10'9477994206'\n          DC   CL10'9481197146'\n          DC   CL10'9494810997'\n          DC   CL10'9497186417'\n          DC   CL10'9501170379'\n          DC   CL10'9503089882'\n          DC   CL10'9528779605'\n          DC   CL10'9530143232'\n          DC   CL10'9544350467'\n          DC   CL10'9557093720'\n          DC   CL10'9574480990'\n          DC   CL10'9576662885'\n          DC   CL10'9580332461'\n          DC   CL10'9580829481'\n          DC   CL10'9592186524'\n          DC   CL10'9597634183'\n          DC   CL10'9600087963'\n          DC   CL10'9617348080'\n          DC   CL10'9629518012'\n          DC   CL10'9637885520'\n          DC   CL10'9639982642'\n          DC   CL10'9650793422'\n          DC   CL10'9672913948'\n          DC   CL10'9690965116'\n          DC   CL10'9691804662'\n          DC   CL10'9694554596'\n          DC   CL10'9713710832'\n          DC   CL10'9728537463'\n          DC   CL10'9734751332'\n          DC   CL10'9749315054'\n          DC   CL10'9767784033'\n          DC   CL10'9773777703'\n          DC   CL10'9782229122'\n          DC   CL10'9792422084'\n          DC   CL10'9825592300'\n          DC   CL10'9850258624'\n          DC   CL10'9875426701'\n          DC   CL10'9883029293'\n          DC   CL10'9886176900'\n          DC   CL10'9911241979'\n          DC   CL10'9919451101'\n          DC   CL10'9924773051'\n          DC   CL10'9946619993'\n          DC   CL10'9967522275'\n          DC   CL10'9984956820'\n          DC   CL10'9987216646'\nLASTUN   EQU   *-10\n         DC    XL10'FFFFFFFFFFFFFFFFFFFF'\n*\n         DS    0F\nSTACK    EQU   *\n         DC    22F'0'              2*LN(N) FULLWORDS + 2\n*\nQUIKSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'MEDIAN OF THREE QUICKSORT (PARTITION EXCHANGE)'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LR    R12,R9\n         DROP  R9\n         USING SORTRTN,R12\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R2,=A(UNSORTED)     L <- 1\n         L     R3,=A(LASTUN)       R <- N\nNEWSTAGE LR    R9,R3               R9 <- R*10\n         SR    R9,R2               R9 <- (R-L)*10\n         SR    R8,R8\n         D     R8,=F'20'           R9 <- ((R-L)*10) / 10*2\n         M     R8,=F'10'           R9 <- DISP Q\n         LA    R4,0(R9,R2)         R4 <- PTR K(Q)\n         CLC   0(10,R2),0(R3)      K(L) < K(R)\n         BL    H1                  YES\n         CLC   0(10,R2),0(R4)      K(L) LE K(Q)\n         BNH   H3                  YES\n         CLC   0(10,R3),0(R4)      K(R) > K(Q)\n         BH    H4                  YES\n**********                         K(R) LE K(Q) < K(L)\n         XC    0(10,R2),0(R3)      INTERCHANGE K(L) AND K(R)\n         XC    0(10,R3),0(R2)\n         XC    0(10,R2),0(R3)\nH0       MVC   TEMP,0(R4)          TEMP <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\n         B     H6\n**********                         K(Q) < K(R) LE K(L)\nH4       MVC   TEMP,0(R3)          TEMP <- K(R)\n         MVC   0(10,R3),0(R2)      K(R) <- K(L)\n         MVC   0(10,R2),0(R4)      K(L) <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\n         B     H6\n**********                         K(R) LE K(L) LE K(Q)\nH3       MVC   TEMP,0(R2)          TEMP <- K(L)\n         MVC   0(10,R2),0(R3)      K(L) <- K(R)\n         MVC   0(10,R3),0(R4)      K(R) <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\n         B     H6\nH1       CLC   0(10,R2),0(R4)      K(L) GE K(Q)\n         BNL   H5                  YES\n         CLC   0(10,R3),0(R4)      K(R) > K(Q)\n         BH    H0                  YES K(L) < K(Q) < K(R)\n**********                         K(L) < K(R) LE K(Q)\n         MVC   TEMP,0(R3)          TEMP <- K(R)\n         MVC   0(10,R3),0(R4)      K(R) <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\n         B     H6\n**********                         K(Q) LE K(L) < K(R)\nH5       MVC   TEMP,0(R2)          TEMP <- K(L)\n         MVC   0(10,R2),0(R4)      K(L) <- K(Q)\n         MVC   0(10,R4),10(R2)     K(Q) <- K(L+1)\n         MVC   10(10,R2),TEMP      K(L+1) <- TEMP\nH6       LA    R4,20(R2)           I <- L+2\n         LR    R5,R3               L <- R\n         B     COMPARE1\nEXCHANGE XC    0(10,R4),0(R5)      INTERCHANGE\n         XC    0(10,R5),0(R4)        K(I) AND K(J)\n         XC    0(10,R4),0(R5)\nNEXTI    LA    R4,10(R4)           I <- I+1\nCOMPARE1 CLC   TEMP,0(R4)          K > K(I) ?\n         BH    NEXTI               YES\nNEXTJ    S     R5,=F'10'           J <- J-1\n         CLC   TEMP,0(R5)          K < K(J) ?\n         BL    NEXTJ               YES\nTESTIJ   CR    R5,R4               J > I?\n         BH    EXCHANGE            YES\n         MVC   10(10,R2),0(R5)     K(L+1) <- K(J)\n         MVC   0(10,R5),TEMP       K(J) <- K\nSTACKIT  LR    R9,R3               R9 <- R\n         SR    R9,R5               R9 <- (R-J)*3\n         S     R9,=F'90'           R9 <- R-J-M  (M=9)\n         LR    R15,R5              R15 <- J\n         SR    R15,R2              R15 <- (J-L)*3\n         S     R15,=F'90'          R15 <- J-L-M\n         LR    R8,R9\n         SR    R8,R15\n         BC    10,NEXTEST          JUMP IF R-J GE J-L\n         LTR   R15,R15\n         BNP   UNSTACK             JUMP IF M GE J-L > R-J\n         LTR   R9,R9\n         BNP   NEXTR               J-L > M GE R-J\n         LA    R6,8(R6)            NOW J-L > R-J > M\n         ST    R2,0(R6)            STACK <- L\n         LR    R14,R5              R14 <- J\n         S     R14,=F'10'          R14 <- J-1\n         ST    R14,4(R6)           STACK <- J-1\nNEXTL    LA    R2,10(R5)           L <- J+1\n         B     NEWSTAGE\nNEXTEST  LTR   R9,R9\n         BNP   UNSTACK             M GE R-J GE J-L\n         LTR   R15,R15\n         BNP   NEXTL               R-J > M GE J-L\n         LA    R6,8(R6)\n         ST    R3,4(R6)            STACK <- R\n         LA    R14,10(R5)          R14 <- J+1\n         ST    R14,0(R6)           STACK <- J+1\nNEXTR    LR    R3,R5\n         S     R3,=F'10'           R <- J-1\n         B     NEWSTAGE\nUNSTACK  L     R2,0(R6)            L <- STACK\n         L     R3,4(R6)            R <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   NEWSTAGE            NO\n         LA    R1,999              STRAIGHT INSERTION SORT\n         L     R2,=A(UNSORTED+10)  J\nSAVEKEY  MVC   TEMP,0(R2)          K <- K(J)\n         LR    R3,R2\n         S     R3,=F'10'           I <- J-1\n         CLC   TEMP,0(R3)          K GE K(J-1)\n         BNL   JNEXT               NO\nMOVEKEY  MVC   10(10,R3),0(R3)     K(I+1) <- K(I)\n         S     R3,=F'10'           I <- I-1\n         CLC   TEMP,0(R3)          K GE K(I)\n         BL    MOVEKEY             NO\n         MVC   10(10,R3),TEMP      YES, K(I+1) <- K\nJNEXT    LA    R2,10(R2)           J <- J+1\n         BCT   R1,SAVEKEY\n         B     SEXIT\n         LTORG\n         DROP  R12\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00042": {"ttr": 12552, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x011\\x011\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 305, "newlines": 305, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL RADXSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00042'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'RADIX EXCHANGE SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        22 APR 1983 - CHARLES HOTTEL                                 *\n*        RADIX EXCHANGE SORT                                          *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 123-129                                   *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nRADXSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTESTBIT  DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n         DC    XL3'FFFFFF'\n*\nSTACK    EQU   *\n         DC    20F'0'              2*(M-1) FULLWORDS+2\n*\nRADXSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'RADIX EXCHANGE SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         XC    DBLWORD,DBLWORD\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R1,=A(UNSORTED)     L <- 1\n         L     R2,=A(LASTUN)       R <- N\n         LA    R5,9                B <- 1  (M-1)\n         B     NEWSTAGE\nSTACKIT  LA    R6,8(R6)\n         ST    R2,0(R6)            STACK <- R\n         ST    R5,4(R6)            STACK <- B\n         LR    R2,R4               R <- J\nNEWSTAGE LR    R3,R1               I <- L\n         LR    R4,R2               J <- R\nTESTKI   PACK  DBLWORD+6(2),0(3,R3)  PACK K(I)\n         CVB   R7,DBLWORD          BINARY K(I)\n         SRL   R7,0(R5)            UNIT BIT <- BIT B K(I)\n         STC   R7,TESTBIT\n         TM    TESTBIT,X'01'       TEST UNIT BIT K(I)\n         BZ    NEXTI\nNEXTJ    S     R4,=F'3'            J <- J-1\n         CR    R4,R3               J < I?\n         BL    TESTSPEC            YES\nTESTKJ1  PACK  DBLWORD+6(2),3(3,R4)  PACK K(J+1)\n         CVB   R7,DBLWORD          BINARY K(J+1)\n         SRL   R7,0(R5)            UNIT BIT <- BIT B K(J+1)\n         STC   R7,TESTBIT\n         TM    TESTBIT,X'01'       TEST UNIT BIT K(J+1)\n         BO    NEXTJ\nEXCHANGE MVC   TEMP,0(R3)          INTERCHANGE K(I) AND K(J+1)\n         MVC   0(3,R3),3(R4)\n         MVC   3(3,R4),TEMP\nNEXTI    LA    R3,3(R3)            I <- I+1\n         CR    R3,R4               I LE J ?\n         BNH   TESTKI\nTESTSPEC LTR   R5,R5               B = ZERO?\n         BZ    UNSTACK             YES\n         S     R5,=F'1'            B <- B-1\n         CR    R4,R2               J = R ?\n         BE    NEWSTAGE            YES\n         CR    R4,R1               J < L\n         BL    NEWSTAGE            YES\n         BNE   STACKIT             JUMP IF NOT = L\n         LA    R1,3(R1)            L <- L+1\nTESTLR   CR    R1,R2               L = R ?\n         BNE   NEWSTAGE            YES\nUNSTACK  LA    R1,3(R2)            L <- R+1\n         L     R2,0(R6)            R <- STACK\n         L     R5,4(R6)            B <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   TESTLR              NO\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00043": {"ttr": 12804, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\t\\x05\\t\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1289, "newlines": 1289, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL RADXSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00043'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'RADIX EXCHANGE SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        22 APR 1983 - CHARLES HOTTEL                                 *\n*        RADIX EXCHANGE SORT                                          *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 123-129                                   *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nRADXSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTESTBIT  DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n         DC    XL10'FFFFFFFFFFFFFFFFFFFF'\n*\nSTACK    EQU   *\n         DC    70F'0'              2*(M-1) FULLWORDS+2\n*\nRADXSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'RADIX EXCHANGE SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         XC    DBLWORD,DBLWORD\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R1,=A(UNSORTED)     L <- 1\n         L     R2,=A(LASTUN)       R <- N\n         LA    R5,30               B <- 1  (M-1)\n         B     NEWSTAGE\nSTACKIT  LA    R6,8(R6)\n         ST    R2,0(R6)            STACK <- R\n         ST    R5,4(R6)            STACK <- B\n         LR    R2,R4               R <- J\nNEWSTAGE LR    R3,R1               I <- L\n         LR    R4,R2               J <- R\nTESTKI   PACK  DBLWORD+3(5),0(9,R3)  PACK K(I)\n         CVB   R7,DBLWORD          BINARY K(I)\n         SRL   R7,0(R5)            UNIT BIT <- BIT B K(I)\n         STC   R7,TESTBIT\n         TM    TESTBIT,X'01'       TEST UNIT BIT K(I)\n         BZ    NEXTI\nNEXTJ    S     R4,=F'10'           J <- J-1\n         CR    R4,R3               J < I?\n         BL    TESTSPEC            YES\nTESTKJ1  PACK  DBLWORD+3(5),10(9,R4)  PACK K(J+1)\n         CVB   R7,DBLWORD          BINARY K(J+1)\n         SRL   R7,0(R5)            UNIT BIT <- BIT B K(J+1)\n         STC   R7,TESTBIT\n         TM    TESTBIT,X'01'       TEST UNIT BIT K(J+1)\n         BO    NEXTJ\nEXCHANGE MVC   TEMP,0(R3)          INTERCHANGE K(I) AND K(J+1)\n         MVC   0(10,R3),10(R4)\n         MVC   10(10,R4),TEMP\nNEXTI    LA    R3,10(R3)           I <- I+1\n         CR    R3,R4               I LE J ?\n         BNH   TESTKI\nTESTSPEC LTR   R5,R5               B = ZERO?\n         BZ    UNSTACK             YES\n         S     R5,=F'1'            B <- B-1\n         CR    R4,R2               J = R ?\n         BE    NEWSTAGE            YES\n         CR    R4,R1               J < L\n         BL    NEWSTAGE            YES\n         BNE   STACKIT             JUMP IF NOT = L\n         LA    R1,10(R1)           L <- L+1\nTESTLR   CR    R1,R2               L = R ?\n         BNE   NEWSTAGE            YES\nUNSTACK  LA    R1,10(R2)           L <- R+1\n         L     R2,0(R6)            R <- STACK\n         L     R5,4(R6)            B <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   TESTLR              NO\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00044": {"ttr": 13317, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\x18\\x05\\x18\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1304, "newlines": 1304, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL RADXSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00044'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'RADIX EXCHANGE SORT, BINARY KEYS'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        22 APR 1983 - CHARLES HOTTEL                                 *\n*        RADIX EXCHANGE SORT                                          *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 123-129                                   *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        28 AUG 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nRADXSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nDBLWORD1 DS    D\nDBLWORD2 DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTESTBIT  DC    X'00'\nTEMP     DS    CL8\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\nUNSORTED  EQU  *\n          DC   FL8'2113148651'\n          DC   FL8'1170852922'\n          DC   FL8'2144637213'\n          DC   FL8'5195953924'\n          DC   FL8'8807543455'\n          DC   FL8'9477994206'\n          DC   FL8'1563502577'\n          DC   FL8'0930832968'\n          DC   FL8'5765477779'\n          DC   FL8'9159017410'\n          DC   FL8'2979680261'\n          DC   FL8'3010102732'\n          DC   FL8'3416289223'\n          DC   FL8'6291772134'\n          DC   FL8'1300971865'\n          DC   FL8'3325756816'\n          DC   FL8'4499203387'\n          DC   FL8'3090555978'\n          DC   FL8'7385386989'\n          DC   FL8'9984956820'\n          DC   FL8'8828773871'\n          DC   FL8'7724354542'\n          DC   FL8'3248183233'\n          DC   FL8'8561872344'\n          DC   FL8'9967522275'\n          DC   FL8'0906281426'\n          DC   FL8'2584106197'\n          DC   FL8'2488720988'\n          DC   FL8'3741778199'\n          DC   FL8'1510218230'\n          DC   FL8'9580829481'\n          DC   FL8'2682008352'\n          DC   FL8'0216719243'\n          DC   FL8'6750654554'\n          DC   FL8'5879594685'\n          DC   FL8'8979968036'\n          DC   FL8'0826611007'\n          DC   FL8'2141727998'\n          DC   FL8'6819051409'\n          DC   FL8'0847201640'\n          DC   FL8'2836247091'\n          DC   FL8'4531464162'\n          DC   FL8'5778297253'\n          DC   FL8'4082518764'\n          DC   FL8'6189589095'\n          DC   FL8'9987216646'\n          DC   FL8'1515117817'\n          DC   FL8'5945977008'\n          DC   FL8'5081606619'\n          DC   FL8'9188307050'\n          DC   FL8'9875426701'\n          DC   FL8'5201121972'\n          DC   FL8'0269317263'\n          DC   FL8'8261864974'\n          DC   FL8'0129905505'\n          DC   FL8'8048427256'\n          DC   FL8'0218026627'\n          DC   FL8'4677868018'\n          DC   FL8'9473843829'\n          DC   FL8'7805934460'\n          DC   FL8'1658768311'\n          DC   FL8'7899381782'\n          DC   FL8'8906179273'\n          DC   FL8'7473093184'\n          DC   FL8'5012943915'\n          DC   FL8'4963999866'\n          DC   FL8'1783737437'\n          DC   FL8'1993801028'\n          DC   FL8'9420163039'\n          DC   FL8'4052483870'\n          DC   FL8'4826671921'\n          DC   FL8'3114643592'\n          DC   FL8'7785283283'\n          DC   FL8'6380603394'\n          DC   FL8'2231104325'\n          DC   FL8'6214334476'\n          DC   FL8'6340650247'\n          DC   FL8'0430176038'\n          DC   FL8'8824964249'\n          DC   FL8'7360355280'\n          DC   FL8'7699537531'\n          DC   FL8'4615307402'\n          DC   FL8'9883029293'\n          DC   FL8'2128795604'\n          DC   FL8'3256786735'\n          DC   FL8'6959831086'\n          DC   FL8'5297165057'\n          DC   FL8'7403393048'\n          DC   FL8'2072647459'\n          DC   FL8'5241948690'\n          DC   FL8'6277765141'\n          DC   FL8'5449773212'\n          DC   FL8'1055817303'\n          DC   FL8'0342069814'\n          DC   FL8'5642391145'\n          DC   FL8'8040889696'\n          DC   FL8'7341681867'\n          DC   FL8'1209852058'\n          DC   FL8'0027612669'\n          DC   FL8'9289664100'\n          DC   FL8'0241754751'\n          DC   FL8'3946441022'\n          DC   FL8'6040047313'\n          DC   FL8'1124826024'\n          DC   FL8'9020317555'\n          DC   FL8'1977910306'\n          DC   FL8'4442600677'\n          DC   FL8'7025953068'\n          DC   FL8'6034259879'\n          DC   FL8'1175901510'\n          DC   FL8'8951906361'\n          DC   FL8'9713710832'\n          DC   FL8'4452119323'\n          DC   FL8'5061464234'\n          DC   FL8'1102965965'\n          DC   FL8'8971292916'\n          DC   FL8'7848321487'\n          DC   FL8'2908096078'\n          DC   FL8'1916989089'\n          DC   FL8'8653060920'\n          DC   FL8'7448619971'\n          DC   FL8'9639982642'\n          DC   FL8'6788433333'\n          DC   FL8'9216384444'\n          DC   FL8'3682736375'\n          DC   FL8'2901437526'\n          DC   FL8'4087244297'\n          DC   FL8'5792681088'\n          DC   FL8'3980200299'\n          DC   FL8'1553542330'\n          DC   FL8'2452295581'\n          DC   FL8'3893656452'\n          DC   FL8'0425389343'\n          DC   FL8'3133986654'\n          DC   FL8'8632028785'\n          DC   FL8'7328744136'\n          DC   FL8'0967769107'\n          DC   FL8'7496108098'\n          DC   FL8'9008293509'\n          DC   FL8'7789745740'\n          DC   FL8'8363333191'\n          DC   FL8'1923132262'\n          DC   FL8'5619387353'\n          DC   FL8'4838670864'\n          DC   FL8'3903243195'\n          DC   FL8'1493612746'\n          DC   FL8'3578295917'\n          DC   FL8'0714777108'\n          DC   FL8'0265668719'\n          DC   FL8'9354071150'\n          DC   FL8'3262132801'\n          DC   FL8'8456810072'\n          DC   FL8'1506827363'\n          DC   FL8'6834837074'\n          DC   FL8'9528779605'\n          DC   FL8'6316443356'\n          DC   FL8'0287224727'\n          DC   FL8'5025088118'\n          DC   FL8'3496725929'\n          DC   FL8'8318918560'\n          DC   FL8'4909094411'\n          DC   FL8'9503089882'\n          DC   FL8'2104109373'\n          DC   FL8'2106885284'\n          DC   FL8'3621038015'\n          DC   FL8'0397635966'\n          DC   FL8'8742955537'\n          DC   FL8'2883441128'\n          DC   FL8'2925865139'\n          DC   FL8'2836687970'\n          DC   FL8'6744618021'\n          DC   FL8'8350371692'\n          DC   FL8'2307633383'\n          DC   FL8'0119215494'\n          DC   FL8'8372418425'\n          DC   FL8'6017590576'\n          DC   FL8'1873888347'\n          DC   FL8'5626236138'\n          DC   FL8'7257486349'\n          DC   FL8'3139779380'\n          DC   FL8'3889103631'\n          DC   FL8'1567055502'\n          DC   FL8'3893799393'\n          DC   FL8'2816227704'\n          DC   FL8'6055320835'\n          DC   FL8'5136707186'\n          DC   FL8'3888423157'\n          DC   FL8'9469873148'\n          DC   FL8'5675989559'\n          DC   FL8'7540592790'\n          DC   FL8'9142951241'\n          DC   FL8'5001541312'\n          DC   FL8'1519007403'\n          DC   FL8'0622321914'\n          DC   FL8'5022145245'\n          DC   FL8'5395385796'\n          DC   FL8'6274959967'\n          DC   FL8'1510752158'\n          DC   FL8'3845774769'\n          DC   FL8'8431528200'\n          DC   FL8'8986560851'\n          DC   FL8'9782229122'\n          DC   FL8'8719657413'\n          DC   FL8'8441898124'\n          DC   FL8'5705291655'\n          DC   FL8'6114026406'\n          DC   FL8'3801898777'\n          DC   FL8'5725273168'\n          DC   FL8'9911241979'\n          DC   FL8'8284985610'\n          DC   FL8'9580332461'\n          DC   FL8'8317518932'\n          DC   FL8'3912149423'\n          DC   FL8'1659356334'\n          DC   FL8'6617160065'\n          DC   FL8'4293029016'\n          DC   FL8'0517639587'\n          DC   FL8'8969836178'\n          DC   FL8'0496791189'\n          DC   FL8'5653365020'\n          DC   FL8'2764666071'\n          DC   FL8'0295810742'\n          DC   FL8'6392883433'\n          DC   FL8'2139096544'\n          DC   FL8'0350150475'\n          DC   FL8'0612793626'\n          DC   FL8'5750582397'\n          DC   FL8'6980841188'\n          DC   FL8'6706822399'\n          DC   FL8'1169066430'\n          DC   FL8'2059961681'\n          DC   FL8'8685504552'\n          DC   FL8'2338259443'\n          DC   FL8'4225518754'\n          DC   FL8'9576662885'\n          DC   FL8'5433720236'\n          DC   FL8'0109127207'\n          DC   FL8'0374688198'\n          DC   FL8'0125735609'\n          DC   FL8'3544489840'\n          DC   FL8'8666619291'\n          DC   FL8'5735000362'\n          DC   FL8'0804677453'\n          DC   FL8'0743022964'\n          DC   FL8'3049097295'\n          DC   FL8'4796208846'\n          DC   FL8'1481674017'\n          DC   FL8'0647777208'\n          DC   FL8'8817930819'\n          DC   FL8'5572035250'\n          DC   FL8'7465038901'\n          DC   FL8'8972698172'\n          DC   FL8'9728537463'\n          DC   FL8'8996009174'\n          DC   FL8'1599853705'\n          DC   FL8'6420659456'\n          DC   FL8'1036622827'\n          DC   FL8'6176508218'\n          DC   FL8'3327808029'\n          DC   FL8'0124102660'\n          DC   FL8'3015620511'\n          DC   FL8'7206997982'\n          DC   FL8'1926239473'\n          DC   FL8'6768877384'\n          DC   FL8'4141332115'\n          DC   FL8'5707472066'\n          DC   FL8'9222373637'\n          DC   FL8'8217281228'\n          DC   FL8'2679767239'\n          DC   FL8'6153092070'\n          DC   FL8'5558764121'\n          DC   FL8'6526299792'\n          DC   FL8'1094183483'\n          DC   FL8'8326027594'\n          DC   FL8'3665932525'\n          DC   FL8'1737046676'\n          DC   FL8'1767326447'\n          DC   FL8'6906496238'\n          DC   FL8'0378208449'\n          DC   FL8'4691403480'\n          DC   FL8'7014869731'\n          DC   FL8'6299003602'\n          DC   FL8'7808769493'\n          DC   FL8'0411859804'\n          DC   FL8'3246054935'\n          DC   FL8'3269783286'\n          DC   FL8'5679881257'\n          DC   FL8'7260553248'\n          DC   FL8'0407531659'\n          DC   FL8'4851436890'\n          DC   FL8'6984337341'\n          DC   FL8'5173509412'\n          DC   FL8'5526397503'\n          DC   FL8'8250774014'\n          DC   FL8'2034099345'\n          DC   FL8'4746081896'\n          DC   FL8'5248438067'\n          DC   FL8'5175852258'\n          DC   FL8'3232136869'\n          DC   FL8'9825592300'\n          DC   FL8'8747566951'\n          DC   FL8'7078217222'\n          DC   FL8'6583467513'\n          DC   FL8'1547170224'\n          DC   FL8'1262465755'\n          DC   FL8'2286342506'\n          DC   FL8'8041396877'\n          DC   FL8'3428793268'\n          DC   FL8'1796424079'\n          DC   FL8'2886269710'\n          DC   FL8'5264958561'\n          DC   FL8'7221527032'\n          DC   FL8'8196379523'\n          DC   FL8'0485448434'\n          DC   FL8'0243554165'\n          DC   FL8'9690965116'\n          DC   FL8'0907157687'\n          DC   FL8'7675776278'\n          DC   FL8'7524793289'\n          DC   FL8'3385869120'\n          DC   FL8'5176912171'\n          DC   FL8'8091838842'\n          DC   FL8'8461533533'\n          DC   FL8'1730008644'\n          DC   FL8'2369764575'\n          DC   FL8'4440349726'\n          DC   FL8'5974120497'\n          DC   FL8'2453201288'\n          DC   FL8'6321644499'\n          DC   FL8'2756790530'\n          DC   FL8'8803827781'\n          DC   FL8'5457552652'\n          DC   FL8'2355329543'\n          DC   FL8'4425250854'\n          DC   FL8'1113496985'\n          DC   FL8'3694896336'\n          DC   FL8'6650685307'\n          DC   FL8'7177468298'\n          DC   FL8'4571377709'\n          DC   FL8'0511433940'\n          DC   FL8'4146105391'\n          DC   FL8'4367068462'\n          DC   FL8'7734167553'\n          DC   FL8'6195575064'\n          DC   FL8'6027151395'\n          DC   FL8'0295004946'\n          DC   FL8'3625252117'\n          DC   FL8'2144977308'\n          DC   FL8'5138392919'\n          DC   FL8'0242199350'\n          DC   FL8'2884145001'\n          DC   FL8'5148786272'\n          DC   FL8'1334447563'\n          DC   FL8'9145381274'\n          DC   FL8'8743127805'\n          DC   FL8'8761075556'\n          DC   FL8'0866220927'\n          DC   FL8'4532128318'\n          DC   FL8'3367090129'\n          DC   FL8'5621486760'\n          DC   FL8'6378346611'\n          DC   FL8'9411106082'\n          DC   FL8'4772569573'\n          DC   FL8'5859069484'\n          DC   FL8'8973826215'\n          DC   FL8'1293508166'\n          DC   FL8'1621991737'\n          DC   FL8'4395321328'\n          DC   FL8'3081869339'\n          DC   FL8'6401696170'\n          DC   FL8'1669110221'\n          DC   FL8'6042427892'\n          DC   FL8'0544933583'\n          DC   FL8'5401039694'\n          DC   FL8'0511646625'\n          DC   FL8'3772702776'\n          DC   FL8'4420964547'\n          DC   FL8'0670956338'\n          DC   FL8'2587130549'\n          DC   FL8'4415227580'\n          DC   FL8'7476835831'\n          DC   FL8'7211151702'\n          DC   FL8'8027939593'\n          DC   FL8'9315691904'\n          DC   FL8'7228989035'\n          DC   FL8'1759059386'\n          DC   FL8'9071539357'\n          DC   FL8'7175433348'\n          DC   FL8'0667273759'\n          DC   FL8'9574480990'\n          DC   FL8'0201923441'\n          DC   FL8'4365677512'\n          DC   FL8'9477987603'\n          DC   FL8'7627426114'\n          DC   FL8'9078253445'\n          DC   FL8'6492977996'\n          DC   FL8'2662116167'\n          DC   FL8'8605152358'\n          DC   FL8'2586698969'\n          DC   FL8'5871856400'\n          DC   FL8'9924773051'\n          DC   FL8'4234405322'\n          DC   FL8'6031477613'\n          DC   FL8'4840642324'\n          DC   FL8'8091839855'\n          DC   FL8'0894858606'\n          DC   FL8'5561094977'\n          DC   FL8'6536513368'\n          DC   FL8'6089806179'\n          DC   FL8'7379753810'\n          DC   FL8'6405784661'\n          DC   FL8'4825735132'\n          DC   FL8'3704809623'\n          DC   FL8'5939740534'\n          DC   FL8'4382148265'\n          DC   FL8'5565101216'\n          DC   FL8'7416875787'\n          DC   FL8'5425916378'\n          DC   FL8'7400995389'\n          DC   FL8'4250573220'\n          DC   FL8'5085358271'\n          DC   FL8'1428066942'\n          DC   FL8'9394383633'\n          DC   FL8'2389120744'\n          DC   FL8'2141578675'\n          DC   FL8'4784105826'\n          DC   FL8'3157858597'\n          DC   FL8'8609761388'\n          DC   FL8'7224666599'\n          DC   FL8'8716714630'\n          DC   FL8'3083893881'\n          DC   FL8'2609800752'\n          DC   FL8'6876599643'\n          DC   FL8'8133182954'\n          DC   FL8'5642531085'\n          DC   FL8'2512272436'\n          DC   FL8'8992443407'\n          DC   FL8'4304448398'\n          DC   FL8'6745219809'\n          DC   FL8'1090578040'\n          DC   FL8'5201791491'\n          DC   FL8'6219336562'\n          DC   FL8'2807857653'\n          DC   FL8'5596327164'\n          DC   FL8'5237405495'\n          DC   FL8'8390001046'\n          DC   FL8'8409030217'\n          DC   FL8'1606377408'\n          DC   FL8'3627055019'\n          DC   FL8'5764563450'\n          DC   FL8'9919451101'\n          DC   FL8'5385074372'\n          DC   FL8'2724557663'\n          DC   FL8'1682953374'\n          DC   FL8'3358601905'\n          DC   FL8'3737691656'\n          DC   FL8'8176019027'\n          DC   FL8'6491948418'\n          DC   FL8'8014572229'\n          DC   FL8'7211070860'\n          DC   FL8'5397272711'\n          DC   FL8'4515414182'\n          DC   FL8'7043099673'\n          DC   FL8'3777461584'\n          DC   FL8'0518520315'\n          DC   FL8'7555744266'\n          DC   FL8'4341809837'\n          DC   FL8'7817561428'\n          DC   FL8'8532171439'\n          DC   FL8'5982500270'\n          DC   FL8'5475656321'\n          DC   FL8'5298755992'\n          DC   FL8'7059883683'\n          DC   FL8'5744251794'\n          DC   FL8'1309560725'\n          DC   FL8'2524558876'\n          DC   FL8'8234802647'\n          DC   FL8'3319616438'\n          DC   FL8'8284252649'\n          DC   FL8'4711251680'\n          DC   FL8'5675001931'\n          DC   FL8'2703499802'\n          DC   FL8'0951309693'\n          DC   FL8'3927724004'\n          DC   FL8'0404123135'\n          DC   FL8'1004535486'\n          DC   FL8'2463397457'\n          DC   FL8'5614513448'\n          DC   FL8'0855215859'\n          DC   FL8'4109725090'\n          DC   FL8'9195709541'\n          DC   FL8'0978045612'\n          DC   FL8'9773777703'\n          DC   FL8'3152278214'\n          DC   FL8'8554607545'\n          DC   FL8'1036074096'\n          DC   FL8'6915994267'\n          DC   FL8'8198652458'\n          DC   FL8'6309461069'\n          DC   FL8'8970320500'\n          DC   FL8'2918179151'\n          DC   FL8'9650793422'\n          DC   FL8'3463687713'\n          DC   FL8'2722314424'\n          DC   FL8'8593413955'\n          DC   FL8'2339574706'\n          DC   FL8'4760993077'\n          DC   FL8'1448433468'\n          DC   FL8'7191388279'\n          DC   FL8'4165437910'\n          DC   FL8'3402810761'\n          DC   FL8'9530143232'\n          DC   FL8'6837439723'\n          DC   FL8'2422232634'\n          DC   FL8'1432942365'\n          DC   FL8'2315437316'\n          DC   FL8'8446793887'\n          DC   FL8'8620256478'\n          DC   FL8'4525397489'\n          DC   FL8'0647477320'\n          DC   FL8'2890004371'\n          DC   FL8'8704495042'\n          DC   FL8'5591433733'\n          DC   FL8'8516432844'\n          DC   FL8'2065592775'\n          DC   FL8'2044061926'\n          DC   FL8'5701796697'\n          DC   FL8'1850521488'\n          DC   FL8'3815888699'\n          DC   FL8'1448838730'\n          DC   FL8'5300159981'\n          DC   FL8'8542248852'\n          DC   FL8'2302069743'\n          DC   FL8'9749315054'\n          DC   FL8'5563765185'\n          DC   FL8'2285848536'\n          DC   FL8'5534401507'\n          DC   FL8'8155628498'\n          DC   FL8'1047261909'\n          DC   FL8'7681922140'\n          DC   FL8'2233677591'\n          DC   FL8'9691804662'\n          DC   FL8'2425747753'\n          DC   FL8'3345279264'\n          DC   FL8'3079859595'\n          DC   FL8'9481197146'\n          DC   FL8'4233008317'\n          DC   FL8'5431977508'\n          DC   FL8'8683917119'\n          DC   FL8'4539127550'\n          DC   FL8'8970957201'\n          DC   FL8'8081562472'\n          DC   FL8'0298867763'\n          DC   FL8'1008725474'\n          DC   FL8'7846276005'\n          DC   FL8'1750507756'\n          DC   FL8'1366017127'\n          DC   FL8'8455968518'\n          DC   FL8'1670254329'\n          DC   FL8'7292854960'\n          DC   FL8'0472398811'\n          DC   FL8'0919922282'\n          DC   FL8'5137829773'\n          DC   FL8'4924053684'\n          DC   FL8'1175414415'\n          DC   FL8'4894180366'\n          DC   FL8'5781827937'\n          DC   FL8'4884001528'\n          DC   FL8'3430673539'\n          DC   FL8'7295504370'\n          DC   FL8'7378402421'\n          DC   FL8'2695284092'\n          DC   FL8'7039033783'\n          DC   FL8'3755663894'\n          DC   FL8'8459674825'\n          DC   FL8'8392614976'\n          DC   FL8'1608840747'\n          DC   FL8'1252476538'\n          DC   FL8'1869574749'\n          DC   FL8'7979475780'\n          DC   FL8'2009368031'\n          DC   FL8'1176047902'\n          DC   FL8'2978879793'\n          DC   FL8'8647956104'\n          DC   FL8'5171457235'\n          DC   FL8'1406211586'\n          DC   FL8'4255455557'\n          DC   FL8'8977793548'\n          DC   FL8'5371357959'\n          DC   FL8'0857169190'\n          DC   FL8'4365695641'\n          DC   FL8'3410613712'\n          DC   FL8'2813767803'\n          DC   FL8'9225330314'\n          DC   FL8'2863161645'\n          DC   FL8'8775370196'\n          DC   FL8'6410072367'\n          DC   FL8'0356352558'\n          DC   FL8'8800423169'\n          DC   FL8'1520984600'\n          DC   FL8'8127785251'\n          DC   FL8'1727381522'\n          DC   FL8'5280097813'\n          DC   FL8'9592186524'\n          DC   FL8'5167188055'\n          DC   FL8'7020490806'\n          DC   FL8'4041091177'\n          DC   FL8'4564553568'\n          DC   FL8'9501170379'\n          DC   FL8'5643322010'\n          DC   FL8'6656036861'\n          DC   FL8'9734751332'\n          DC   FL8'3994269823'\n          DC   FL8'4332924734'\n          DC   FL8'3795936465'\n          DC   FL8'0341973416'\n          DC   FL8'2396911987'\n          DC   FL8'3658796578'\n          DC   FL8'3297999589'\n          DC   FL8'4976581420'\n          DC   FL8'8990850471'\n          DC   FL8'8321123142'\n          DC   FL8'3452683833'\n          DC   FL8'4511944944'\n          DC   FL8'4541806875'\n          DC   FL8'6620218026'\n          DC   FL8'2005934797'\n          DC   FL8'8575481588'\n          DC   FL8'0495310799'\n          DC   FL8'3353162830'\n          DC   FL8'5852626081'\n          DC   FL8'1654896952'\n          DC   FL8'5031739843'\n          DC   FL8'3673647154'\n          DC   FL8'3277199285'\n          DC   FL8'3415624636'\n          DC   FL8'4676559607'\n          DC   FL8'5131008598'\n          DC   FL8'1877504009'\n          DC   FL8'2685466240'\n          DC   FL8'5641763691'\n          DC   FL8'3184472762'\n          DC   FL8'2987837853'\n          DC   FL8'3842431364'\n          DC   FL8'1954513695'\n          DC   FL8'3968593246'\n          DC   FL8'9497186417'\n          DC   FL8'0021777608'\n          DC   FL8'4708979219'\n          DC   FL8'8965891650'\n          DC   FL8'0438663301'\n          DC   FL8'1638250572'\n          DC   FL8'0457377863'\n          DC   FL8'1522697574'\n          DC   FL8'4606150105'\n          DC   FL8'3199523856'\n          DC   FL8'8836215227'\n          DC   FL8'6824188618'\n          DC   FL8'8734136429'\n          DC   FL8'8266839060'\n          DC   FL8'2003724911'\n          DC   FL8'7024630382'\n          DC   FL8'5456759873'\n          DC   FL8'3698845784'\n          DC   FL8'3344508515'\n          DC   FL8'3708816466'\n          DC   FL8'4342046037'\n          DC   FL8'1994641628'\n          DC   FL8'2177375639'\n          DC   FL8'2740708470'\n          DC   FL8'7777348521'\n          DC   FL8'6632012192'\n          DC   FL8'6882383883'\n          DC   FL8'3835275994'\n          DC   FL8'4361988925'\n          DC   FL8'1776871076'\n          DC   FL8'2943078847'\n          DC   FL8'0869536638'\n          DC   FL8'7743096849'\n          DC   FL8'6619899880'\n          DC   FL8'6879934131'\n          DC   FL8'1028796002'\n          DC   FL8'0510649893'\n          DC   FL8'7876388204'\n          DC   FL8'3930991335'\n          DC   FL8'3364087686'\n          DC   FL8'2847713657'\n          DC   FL8'3665273648'\n          DC   FL8'8615700059'\n          DC   FL8'2216813290'\n          DC   FL8'6111881741'\n          DC   FL8'0063381812'\n          DC   FL8'4997957903'\n          DC   FL8'0246582414'\n          DC   FL8'4403915745'\n          DC   FL8'0110866296'\n          DC   FL8'9544350467'\n          DC   FL8'1478252658'\n          DC   FL8'4459585269'\n          DC   FL8'5923848700'\n          DC   FL8'5953591351'\n          DC   FL8'8864169622'\n          DC   FL8'7880707913'\n          DC   FL8'9850258624'\n          DC   FL8'0213162155'\n          DC   FL8'5337606906'\n          DC   FL8'1801389277'\n          DC   FL8'2284873668'\n          DC   FL8'7419152479'\n          DC   FL8'4213406110'\n          DC   FL8'6565462961'\n          DC   FL8'3839559432'\n          DC   FL8'1575299923'\n          DC   FL8'6071816834'\n          DC   FL8'3871130565'\n          DC   FL8'0044709516'\n          DC   FL8'7667230087'\n          DC   FL8'6941536678'\n          DC   FL8'8118801689'\n          DC   FL8'9637885520'\n          DC   FL8'3787896571'\n          DC   FL8'8677951242'\n          DC   FL8'9378133933'\n          DC   FL8'4775657044'\n          DC   FL8'1970220975'\n          DC   FL8'8912574126'\n          DC   FL8'0470272897'\n          DC   FL8'5184641688'\n          DC   FL8'1662932899'\n          DC   FL8'6829686930'\n          DC   FL8'5141292181'\n          DC   FL8'0347745052'\n          DC   FL8'1465609943'\n          DC   FL8'4306179254'\n          DC   FL8'1182833385'\n          DC   FL8'6301600736'\n          DC   FL8'4818917707'\n          DC   FL8'1630588698'\n          DC   FL8'3635946109'\n          DC   FL8'8501210340'\n          DC   FL8'5826049791'\n          DC   FL8'5097340862'\n          DC   FL8'0894127953'\n          DC   FL8'1487783464'\n          DC   FL8'4261367795'\n          DC   FL8'2252189346'\n          DC   FL8'2601564517'\n          DC   FL8'1775777708'\n          DC   FL8'6102241319'\n          DC   FL8'1444855750'\n          DC   FL8'4722569401'\n          DC   FL8'4455138672'\n          DC   FL8'9600087963'\n          DC   FL8'7624869674'\n          DC   FL8'6038224205'\n          DC   FL8'8484739956'\n          DC   FL8'8986613327'\n          DC   FL8'7996608718'\n          DC   FL8'3606218529'\n          DC   FL8'2533023160'\n          DC   FL8'0391251011'\n          DC   FL8'1229538482'\n          DC   FL8'4399889973'\n          DC   FL8'4501837884'\n          DC   FL8'9425802615'\n          DC   FL8'4399652566'\n          DC   FL8'8422464137'\n          DC   FL8'5549481728'\n          DC   FL8'9172277739'\n          DC   FL8'4718112570'\n          DC   FL8'7072494621'\n          DC   FL8'5508940292'\n          DC   FL8'2989933983'\n          DC   FL8'0383088094'\n          DC   FL8'1416503025'\n          DC   FL8'3077327176'\n          DC   FL8'0637516947'\n          DC   FL8'8570796738'\n          DC   FL8'0304818949'\n          DC   FL8'3032523980'\n          DC   FL8'0686700231'\n          DC   FL8'0661744102'\n          DC   FL8'9946619993'\n          DC   FL8'6013020304'\n          DC   FL8'9082725435'\n          DC   FL8'7278163786'\n          DC   FL8'6640171757'\n          DC   FL8'6076953748'\n          DC   FL8'4988242159'\n          DC   FL8'0588657390'\n          DC   FL8'4834267841'\n          DC   FL8'9336349912'\n          DC   FL8'2726348003'\n          DC   FL8'0616034514'\n          DC   FL8'5576869845'\n          DC   FL8'5442562396'\n          DC   FL8'4718828567'\n          DC   FL8'7964352758'\n          DC   FL8'7686947369'\n          DC   FL8'4578912800'\n          DC   FL8'6795597451'\n          DC   FL8'9461157722'\n          DC   FL8'7665518013'\n          DC   FL8'7896530724'\n          DC   FL8'6131336255'\n          DC   FL8'7690923006'\n          DC   FL8'6441887377'\n          DC   FL8'1009393768'\n          DC   FL8'5345334579'\n          DC   FL8'2275690210'\n          DC   FL8'3531089061'\n          DC   FL8'0244567532'\n          DC   FL8'5980530023'\n          DC   FL8'2038908934'\n          DC   FL8'4058524665'\n          DC   FL8'1823645616'\n          DC   FL8'2657748187'\n          DC   FL8'4868476778'\n          DC   FL8'3387803789'\n          DC   FL8'7031389620'\n          DC   FL8'7681142671'\n          DC   FL8'8174979342'\n          DC   FL8'9767784033'\n          DC   FL8'3707569144'\n          DC   FL8'6750835075'\n          DC   FL8'9321130226'\n          DC   FL8'9494810997'\n          DC   FL8'8078001788'\n          DC   FL8'1718754999'\n          DC   FL8'4278411030'\n          DC   FL8'3566158281'\n          DC   FL8'3020793152'\n          DC   FL8'8003680043'\n          DC   FL8'6046911354'\n          DC   FL8'1680667485'\n          DC   FL8'1343776836'\n          DC   FL8'4361475807'\n          DC   FL8'4054368798'\n          DC   FL8'0722588209'\n          DC   FL8'7529154440'\n          DC   FL8'3186535891'\n          DC   FL8'3830408962'\n          DC   FL8'2544618053'\n          DC   FL8'0681335564'\n          DC   FL8'2400421895'\n          DC   FL8'4731985446'\n          DC   FL8'1946142617'\n          DC   FL8'7093977808'\n          DC   FL8'7263703419'\n          DC   FL8'4376019850'\n          DC   FL8'2222675501'\n          DC   FL8'4932226772'\n          DC   FL8'4126998063'\n          DC   FL8'3715241774'\n          DC   FL8'4542498305'\n          DC   FL8'8006156056'\n          DC   FL8'0217211427'\n          DC   FL8'8373228818'\n          DC   FL8'0686500629'\n          DC   FL8'2491407260'\n          DC   FL8'6034977111'\n          DC   FL8'1934646582'\n          DC   FL8'8367220073'\n          DC   FL8'1733029984'\n          DC   FL8'1819296715'\n          DC   FL8'7366688666'\n          DC   FL8'6423082237'\n          DC   FL8'1948521828'\n          DC   FL8'8815379839'\n          DC   FL8'5627716670'\n          DC   FL8'5663840721'\n          DC   FL8'7726068392'\n          DC   FL8'1761684083'\n          DC   FL8'7799100194'\n          DC   FL8'2023217125'\n          DC   FL8'2693983276'\n          DC   FL8'3092155047'\n          DC   FL8'0756256838'\n          DC   FL8'3954741049'\n          DC   FL8'9617348080'\n          DC   FL8'3829666331'\n          DC   FL8'8474892202'\n          DC   FL8'7686790093'\n          DC   FL8'7457852404'\n          DC   FL8'3026659535'\n          DC   FL8'3548439886'\n          DC   FL8'4032829857'\n          DC   FL8'2612833848'\n          DC   FL8'8888984259'\n          DC   FL8'8372701490'\n          DC   FL8'0932853941'\n          DC   FL8'9629518012'\n          DC   FL8'2398938103'\n          DC   FL8'4733686614'\n          DC   FL8'8782023945'\n          DC   FL8'5170458496'\n          DC   FL8'0333506667'\n          DC   FL8'6214652858'\n          DC   FL8'2882509469'\n          DC   FL8'9886176900'\n          DC   FL8'1053803551'\n          DC   FL8'1918345822'\n          DC   FL8'1034528113'\n          DC   FL8'8131002824'\n          DC   FL8'5321710355'\n          DC   FL8'4480439106'\n          DC   FL8'6362585477'\n          DC   FL8'7138113868'\n          DC   FL8'7679716679'\n          DC   FL8'2230174310'\n          DC   FL8'7952915161'\n          DC   FL8'7349775632'\n          DC   FL8'3609960123'\n          DC   FL8'6634201034'\n          DC   FL8'6758118765'\n          DC   FL8'6078781716'\n          DC   FL8'5768466287'\n          DC   FL8'3839616878'\n          DC   FL8'3505005889'\n          DC   FL8'9557093720'\n          DC   FL8'1070588771'\n          DC   FL8'5212207442'\n          DC   FL8'1021634133'\n          DC   FL8'5707681244'\n          DC   FL8'1283649175'\n          DC   FL8'8245886326'\n          DC   FL8'7479549097'\n          DC   FL8'3655561888'\n          DC   FL8'5062777099'\n          DC   FL8'8099335130'\n          DC   FL8'1527224381'\n          DC   FL8'8074041252'\n          DC   FL8'1045950143'\n          DC   FL8'3295843454'\n          DC   FL8'7170701585'\n          DC   FL8'8942152936'\n          DC   FL8'1704233907'\n          DC   FL8'8802348898'\n          DC   FL8'7537430309'\n          DC   FL8'2169298540'\n          DC   FL8'8123221991'\n          DC   FL8'7783677062'\n          DC   FL8'4339308153'\n          DC   FL8'5823087664'\n          DC   FL8'8771675995'\n          DC   FL8'1807981546'\n          DC   FL8'5930920717'\n          DC   FL8'2376377908'\n          DC   FL8'2593365519'\n          DC   FL8'0159383950'\n          DC   FL8'3338981601'\n          DC   FL8'1469514872'\n          DC   FL8'0438108163'\n          DC   FL8'4193813874'\n          DC   FL8'2518972405'\n          DC   FL8'2163772156'\n          DC   FL8'0928009527'\n          DC   FL8'4354048918'\n          DC   FL8'4374982729'\n          DC   FL8'0541991360'\n          DC   FL8'9334903211'\n          DC   FL8'7539954682'\n          DC   FL8'3758750173'\n          DC   FL8'9792422084'\n          DC   FL8'2924990815'\n          DC   FL8'3009924766'\n          DC   FL8'6743900337'\n          DC   FL8'7591761928'\n          DC   FL8'5506681939'\n          DC   FL8'7869520770'\n          DC   FL8'3951386821'\n          DC   FL8'1683396492'\n          DC   FL8'9597634183'\n          DC   FL8'0483312294'\n          DC   FL8'8582131225'\n          DC   FL8'1026839376'\n          DC   FL8'8706993147'\n          DC   FL8'3825916938'\n          DC   FL8'3092863149'\n          DC   FL8'8774372180'\n          DC   FL8'6708832431'\n          DC   FL8'2868240302'\n          DC   FL8'0131160193'\n          DC   FL8'6610884504'\n          DC   FL8'8162793635'\n          DC   FL8'2574915986'\n          DC   FL8'3425687957'\n          DC   FL8'9672913948'\n          DC   FL8'4717926359'\n          DC   FL8'7968945590'\n          DC   FL8'4807640041'\n          DC   FL8'9342886112'\n          DC   FL8'0415728203'\n          DC   FL8'6999538714'\n          DC   FL8'6419378045'\n          DC   FL8'9694554596'\n          DC   FL8'4788384767'\n          DC   FL8'2629152958'\n          DC   FL8'4446271569'\n          DC   FL8'4245641000'\nLASTUN   EQU   *-8\n         DC    XL8'FFFFFFFFFFFFFFFF'\n*\nSTACK    EQU   *\n         DC    70F'0'              2*(M-1) FULLWORDS+2\n*\nRADXSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'RADIX EXCHANGE SORT, BINARY KEYS'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LR    R15,R9\n         DROP  R9\n         USING SORTRTN,R15\n         XC    DBLWORD,DBLWORD\n         L     R6,=A(STACK)        SET STACK EMPTY\n         L     R1,=A(UNSORTED)     L <- 1\n         L     R2,=A(LASTUN)       R <- N\n         LA    R5,33               B <- 1  (M-1)\n         B     NEWSTAGE\nSTACKIT  LA    R6,8(R6)\n         ST    R2,0(R6)            STACK <- R\n         ST    R5,4(R6)            STACK <- B\n         LR    R2,R4               R <- J\nNEWSTAGE LR    R3,R1               I <- L\n         LR    R4,R2               J <- R\nTESTKI   L     R8,0(R3)            K(I)\n         L     R9,4(R3)\n         SRDL  R8,0(R5)            UNIT BIT <- BIT B K(I)\n         STC   R9,TESTBIT\n         TM    TESTBIT,X'01'       TEST UNIT BIT K(I)\n         BZ    NEXTI\nNEXTJ    S     R4,=F'8'            J <- J-1\n         CR    R4,R3               J < I?\n         BL    TESTSPEC            YES\nTESTKJ1  L     R8,8(R4)            K(J+1)\n         L     R9,12(R4)\n         SRDL  R8,0(R5)            UNIT BIT <- BIT B K(J+1)\n         STC   R9,TESTBIT\n         TM    TESTBIT,X'01'       TEST UNIT BIT K(J+1)\n         BO    NEXTJ\nEXCHANGE MVC   TEMP,0(R3)          INTERCHANGE K(I) AND K(J+1)\n         MVC   0(8,R3),8(R4)\n         MVC   8(8,R4),TEMP\nNEXTI    LA    R3,8(R3)            I <- I+1\n         CR    R3,R4               I LE J ?\n         BNH   TESTKI\nTESTSPEC LTR   R5,R5               B = ZERO?\n         BZ    UNSTACK             YES\n         S     R5,=F'1'            B <- B-1\n         CR    R4,R2               J = R ?\n         BE    NEWSTAGE            YES\n         CR    R4,R1               J < L\n         BL    NEWSTAGE            YES\n         BNE   STACKIT             JUMP IF NOT = L\n         LA    R1,8(R1)            L <- L+1\nTESTLR   CR    R1,R2               L = R ?\n         BNE   NEWSTAGE            YES\nUNSTACK  LA    R1,8(R2)            L <- R+1\n         L     R2,0(R6)            R <- STACK\n         L     R5,4(R6)            B <- STACK\n         S     R6,=F'8'\n         CL    R6,=A(STACK)        WAS STACK EMPTY?\n         BNL   TESTLR              NO\n         B     SEXIT\n         LTORG\n         DROP  R15\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 LM    R6,R7,0(R3)\n         SLDL  R6,1\n         SRL   R7,1\n         CVD   R7,DBLWORD\n         XC    DBLWORD1,DBLWORD1\n         CVD   R6,DBLWORD2\n         MP    DBLWORD1(16),=P'+2147483648'\n         AP    DBLWORD1(16),DBLWORD\n         OI    DBLWORD2+7,X'0F'\n         UNPK  OUTKEY,DBLWORD2+2(6)\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,8(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00045": {"ttr": 13830, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\x0c\\x01\\x0c\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 268, "newlines": 268, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL SLCTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00045'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'STRAIGHT SELECTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        22 APR 1983 - CHARLES HOTTEL                                 *\n*        STRAIGHT SELECTION SORT                                      *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 139-141                                   *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nSLCTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTESTBIT  DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DC    XL3'000000'\nUNSORTED EQU   *\n         DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n         DC    XL3'FFFFFF'\n*\nSLCTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'STRAIGHT SELECTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LA    R1,15               N-1\n         L     R2,=A(UNSORTED)     J\nLOOP1    LA    R3,3(R2)            K <- J+1\n         LR    R4,R2               I <- J\nLOOP2    CLC   0(3,R4),0(R3)       K(I) LE K(K) ?\n         BNH   NEXTK               YES\n         LR    R4,R3               I <- K\nNEXTK    LA    R3,3(R3)            K <- K+1\n         CL    R3,=A(LASTUN)       END OF RECS?\n         BNH   LOOP2               NO\n         MVC   TEMP,0(R2)          INTERCHANGE K(I) AND K(J)\n         MVC   0(3,R2),0(R4)\n         MVC   0(3,R4),TEMP\n         LA    R2,3(R2)            J <- J+1\n         BCT   R1,LOOP1\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)            NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00046": {"ttr": 13835, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x04\\xe4\\x04\\xe4\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1252, "newlines": 1252, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL SLCTSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00046'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'STRAIGHT SELECTION SORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        22 APR 1983 - CHARLES HOTTEL                                 *\n*        STRAIGHT SELECTION SORT                                      *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 139-141                                   *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nSLCTSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTESTBIT  DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DC    XL10'00000000000000000000'\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n         DC    XL10'FFFFFFFFFFFFFFFFFFFF'\n*\nSLCTSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'STRAIGHT SELECTION SORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LA    R1,999              N-1\n         L     R2,=A(UNSORTED)     J\nLOOP1    LA    R3,10(R2)           K <- J+1\n         LR    R4,R2               I <- J\nLOOP2    CLC   0(10,R4),0(R3)      K(I) LE K(K) ?\n         BNH   NEXTK               YES\n         LR    R4,R3               I <- K\nNEXTK    LA    R3,10(R3)           K <- K+1\n         CL    R3,=A(LASTUN)       END OF RECS?\n         BNH   LOOP2               NO\n         MVC   TEMP,0(R2)          INTERCHANGE K(I) AND K(J)\n         MVC   0(10,R2),0(R4)\n         MVC   0(10,R4),TEMP\n         LA    R2,10(R2)           J <- J+1\n         BCT   R1,LOOP1\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)           NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00047": {"ttr": 14346, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01@\\x01@\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 320, "newlines": 320, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL HEAPSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00047'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'HEAPSORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        22 APR 1983 - CHARLES HOTTEL                                 *\n*        HEAPSORT\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 145-149                                   *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nHEAPSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTESTBIT  DC    X'00'\nTEMP     DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL3\n         DC    CL129' '\n*\n         DC    XL3'000000'\nUNSORTED DC    CL3'503'\n         DC    CL3'087'\n         DC    CL3'512'\n         DC    CL3'061'\n         DC    CL3'908'\n         DC    CL3'170'\n         DC    CL3'897'\n         DC    CL3'275'\n         DC    CL3'653'\n         DC    CL3'426'\n         DC    CL3'154'\n         DC    CL3'509'\n         DC    CL3'612'\n         DC    CL3'677'\n         DC    CL3'765'\n         DC    CL3'703'\nLASTUN   EQU   *-3\n         DC    XL3'FFFFFF'\n*\nHEAPSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'HEAPSORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LR    R15,R9\n         DROP  R9\n         USING SORTRTN,R15\n         LA    R1,8                L <- FLOOR(N/2)\n         LA    R2,15               R <- N-1\nDECL     BCTR  R1,0                L <- L-1\n         LR    R9,R1               R9 <- L\n         M     R8,=F'3'            R9 <- L*3\n         A     R9,=A(UNSORTED)     R9 <- PTR K(L)\n         MVC   TEMP,0(R9)          K <- K(L)\nSIFTUP   LA    R4,1(R1)            J <- L\n         LR    R5,R2               R5 <- R\n         SR    R5,R1               R5 <- R-J\n         B     ADVDOWN\nCOMPARE  LR    R7,R4               R7 <- J\n         BCTR  R7,0\n         M     R6,=F'3'            R7 <- J*3\n         A     R7,=A(UNSORTED)     R7 <- PTR K(J)\n         CLC   0(3,R7),3(R7)       K(J) GE K(J+1) ?\n         BH    MOVEUP              YES\n         LA    R4,1(R4)            J <- J + 1\n         BCTR  R5,0                R5 <- R5-1\nMOVEUP   LR    R9,R3               R9 <- I\n         BCTR  R9,0\n         M     R8,=F'3'            R9 <- I*3\n         A     R9,=A(UNSORTED)     R9 <- PTR K(I)\n         LR    R7,R4               R7 <- J\n         BCTR  R7,0\n         M     R6,=F'3'            R7 <- J*3\n         A     R7,=A(UNSORTED)     R7 <- PTR K(J)\n         MVC   0(3,R9),0(R7)       R(I) <- R(J)\nADVDOWN  LR    R3,R4\n         SR    R5,R4               R5 <- R5 - J\n         SLL   R4,1                J <- J+J\n         LTR   R5,R5\n         BP    COMPARE             J < R\n         BZ    MOVEUP              J=R\nNEWIJ    LR    R4,R3               J <- I\n         LR    R7,R4               R7 <- J\n         BCTR  R7,0\n         M     R6,=F'3'            R7 <- J*3\n         A     R7,=A(UNSORTED)     R7 <- PTR K(J)\n         SRL   R3,1                I <- FLOOR(J/2)\n         LR    R9,R3               R9 <- I\n         BCTR  R9,0\n         M     R8,=F'3'            R9 <- I*3\n         A     R9,=A(UNSORTED)     R9 <- PTR K(I)\nSTORETST CLC   TEMP,0(R9)          K LE K(I) ?\n         BNH   MOVEKJ              YES\n         LA    R14,1(R1)           R14 <- L\n         CR    R4,R14              J NE L ?\n         BNE   MOVEIJ              YES\nMOVEKJ   MVC   0(3,R7),TEMP        K(J) <- K\n         B     DECLR\nMOVEIJ   MVC   0(3,R7),0(R9)       K(J) <- K(I)\n         B     NEWIJ\nDECLR    LTR   R1,R1\n         BP    DECL\n         LR    R7,R2               R7 <- R\n         BCTR  R7,0\n         M     R6,=F'3'            R*3\n         A     R7,=A(UNSORTED+3)   PTR K(R)\n         MVC   TEMP,0(R7)          K <- K(R)\n         MVC   0(3,R7),UNSORTED    K(R) <- K(1)\n         S     R2,=F'1'            R <- R-1\n         BP    SIFTUP\n         MVC   UNSORTED(3),TEMP    K(1) <- K\n         B     SEXIT\n         LTORG\n         DROP  R15\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,16\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,3(R3)          NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00048": {"ttr": 14598, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\x19\\x05\\x19\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1305, "newlines": 1305, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL HEAPSORT',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00048'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'HEAPSORT'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        22 APR 1983 - CHARLES HOTTEL                                 *\n*        HEAPSORT                                                     *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 145-149                                   *\n*                                                                     *\n*        NOT STABLE                                                   *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nHEAPSORT START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SORTRTN)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT SORTED VALUES\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nSW       DC    X'00'\nTESTBIT  DC    X'00'\nTEMP     DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\n         DC    CL15'ELAPSED TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nOUTREC   DS    0CL133\n         DC    C' '\nOUTKEY   DS    CL10\n         DC    CL122' '\n*\n         DC    XL10'00000000000000000000'\nUNSORTED  EQU  *\n          DC   CL10'2113148651'\n          DC   CL10'1170852922'\n          DC   CL10'2144637213'\n          DC   CL10'5195953924'\n          DC   CL10'8807543455'\n          DC   CL10'9477994206'\n          DC   CL10'1563502577'\n          DC   CL10'0930832968'\n          DC   CL10'5765477779'\n          DC   CL10'9159017410'\n          DC   CL10'2979680261'\n          DC   CL10'3010102732'\n          DC   CL10'3416289223'\n          DC   CL10'6291772134'\n          DC   CL10'1300971865'\n          DC   CL10'3325756816'\n          DC   CL10'4499203387'\n          DC   CL10'3090555978'\n          DC   CL10'7385386989'\n          DC   CL10'9984956820'\n          DC   CL10'8828773871'\n          DC   CL10'7724354542'\n          DC   CL10'3248183233'\n          DC   CL10'8561872344'\n          DC   CL10'9967522275'\n          DC   CL10'0906281426'\n          DC   CL10'2584106197'\n          DC   CL10'2488720988'\n          DC   CL10'3741778199'\n          DC   CL10'1510218230'\n          DC   CL10'9580829481'\n          DC   CL10'2682008352'\n          DC   CL10'0216719243'\n          DC   CL10'6750654554'\n          DC   CL10'5879594685'\n          DC   CL10'8979968036'\n          DC   CL10'0826611007'\n          DC   CL10'2141727998'\n          DC   CL10'6819051409'\n          DC   CL10'0847201640'\n          DC   CL10'2836247091'\n          DC   CL10'4531464162'\n          DC   CL10'5778297253'\n          DC   CL10'4082518764'\n          DC   CL10'6189589095'\n          DC   CL10'9987216646'\n          DC   CL10'1515117817'\n          DC   CL10'5945977008'\n          DC   CL10'5081606619'\n          DC   CL10'9188307050'\n          DC   CL10'9875426701'\n          DC   CL10'5201121972'\n          DC   CL10'0269317263'\n          DC   CL10'8261864974'\n          DC   CL10'0129905505'\n          DC   CL10'8048427256'\n          DC   CL10'0218026627'\n          DC   CL10'4677868018'\n          DC   CL10'9473843829'\n          DC   CL10'7805934460'\n          DC   CL10'1658768311'\n          DC   CL10'7899381782'\n          DC   CL10'8906179273'\n          DC   CL10'7473093184'\n          DC   CL10'5012943915'\n          DC   CL10'4963999866'\n          DC   CL10'1783737437'\n          DC   CL10'1993801028'\n          DC   CL10'9420163039'\n          DC   CL10'4052483870'\n          DC   CL10'4826671921'\n          DC   CL10'3114643592'\n          DC   CL10'7785283283'\n          DC   CL10'6380603394'\n          DC   CL10'2231104325'\n          DC   CL10'6214334476'\n          DC   CL10'6340650247'\n          DC   CL10'0430176038'\n          DC   CL10'8824964249'\n          DC   CL10'7360355280'\n          DC   CL10'7699537531'\n          DC   CL10'4615307402'\n          DC   CL10'9883029293'\n          DC   CL10'2128795604'\n          DC   CL10'3256786735'\n          DC   CL10'6959831086'\n          DC   CL10'5297165057'\n          DC   CL10'7403393048'\n          DC   CL10'2072647459'\n          DC   CL10'5241948690'\n          DC   CL10'6277765141'\n          DC   CL10'5449773212'\n          DC   CL10'1055817303'\n          DC   CL10'0342069814'\n          DC   CL10'5642391145'\n          DC   CL10'8040889696'\n          DC   CL10'7341681867'\n          DC   CL10'1209852058'\n          DC   CL10'0027612669'\n          DC   CL10'9289664100'\n          DC   CL10'0241754751'\n          DC   CL10'3946441022'\n          DC   CL10'6040047313'\n          DC   CL10'1124826024'\n          DC   CL10'9020317555'\n          DC   CL10'1977910306'\n          DC   CL10'4442600677'\n          DC   CL10'7025953068'\n          DC   CL10'6034259879'\n          DC   CL10'1175901510'\n          DC   CL10'8951906361'\n          DC   CL10'9713710832'\n          DC   CL10'4452119323'\n          DC   CL10'5061464234'\n          DC   CL10'1102965965'\n          DC   CL10'8971292916'\n          DC   CL10'7848321487'\n          DC   CL10'2908096078'\n          DC   CL10'1916989089'\n          DC   CL10'8653060920'\n          DC   CL10'7448619971'\n          DC   CL10'9639982642'\n          DC   CL10'6788433333'\n          DC   CL10'9216384444'\n          DC   CL10'3682736375'\n          DC   CL10'2901437526'\n          DC   CL10'4087244297'\n          DC   CL10'5792681088'\n          DC   CL10'3980200299'\n          DC   CL10'1553542330'\n          DC   CL10'2452295581'\n          DC   CL10'3893656452'\n          DC   CL10'0425389343'\n          DC   CL10'3133986654'\n          DC   CL10'8632028785'\n          DC   CL10'7328744136'\n          DC   CL10'0967769107'\n          DC   CL10'7496108098'\n          DC   CL10'9008293509'\n          DC   CL10'7789745740'\n          DC   CL10'8363333191'\n          DC   CL10'1923132262'\n          DC   CL10'5619387353'\n          DC   CL10'4838670864'\n          DC   CL10'3903243195'\n          DC   CL10'1493612746'\n          DC   CL10'3578295917'\n          DC   CL10'0714777108'\n          DC   CL10'0265668719'\n          DC   CL10'9354071150'\n          DC   CL10'3262132801'\n          DC   CL10'8456810072'\n          DC   CL10'1506827363'\n          DC   CL10'6834837074'\n          DC   CL10'9528779605'\n          DC   CL10'6316443356'\n          DC   CL10'0287224727'\n          DC   CL10'5025088118'\n          DC   CL10'3496725929'\n          DC   CL10'8318918560'\n          DC   CL10'4909094411'\n          DC   CL10'9503089882'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'3621038015'\n          DC   CL10'0397635966'\n          DC   CL10'8742955537'\n          DC   CL10'2883441128'\n          DC   CL10'2925865139'\n          DC   CL10'2836687970'\n          DC   CL10'6744618021'\n          DC   CL10'8350371692'\n          DC   CL10'2307633383'\n          DC   CL10'0119215494'\n          DC   CL10'8372418425'\n          DC   CL10'6017590576'\n          DC   CL10'1873888347'\n          DC   CL10'5626236138'\n          DC   CL10'7257486349'\n          DC   CL10'3139779380'\n          DC   CL10'3889103631'\n          DC   CL10'1567055502'\n          DC   CL10'3893799393'\n          DC   CL10'2816227704'\n          DC   CL10'6055320835'\n          DC   CL10'5136707186'\n          DC   CL10'3888423157'\n          DC   CL10'9469873148'\n          DC   CL10'5675989559'\n          DC   CL10'7540592790'\n          DC   CL10'9142951241'\n          DC   CL10'5001541312'\n          DC   CL10'1519007403'\n          DC   CL10'0622321914'\n          DC   CL10'5022145245'\n          DC   CL10'5395385796'\n          DC   CL10'6274959967'\n          DC   CL10'1510752158'\n          DC   CL10'3845774769'\n          DC   CL10'8431528200'\n          DC   CL10'8986560851'\n          DC   CL10'9782229122'\n          DC   CL10'8719657413'\n          DC   CL10'8441898124'\n          DC   CL10'5705291655'\n          DC   CL10'6114026406'\n          DC   CL10'3801898777'\n          DC   CL10'5725273168'\n          DC   CL10'9911241979'\n          DC   CL10'8284985610'\n          DC   CL10'9580332461'\n          DC   CL10'8317518932'\n          DC   CL10'3912149423'\n          DC   CL10'1659356334'\n          DC   CL10'6617160065'\n          DC   CL10'4293029016'\n          DC   CL10'0517639587'\n          DC   CL10'8969836178'\n          DC   CL10'0496791189'\n          DC   CL10'5653365020'\n          DC   CL10'2764666071'\n          DC   CL10'0295810742'\n          DC   CL10'6392883433'\n          DC   CL10'2139096544'\n          DC   CL10'0350150475'\n          DC   CL10'0612793626'\n          DC   CL10'5750582397'\n          DC   CL10'6980841188'\n          DC   CL10'6706822399'\n          DC   CL10'1169066430'\n          DC   CL10'2059961681'\n          DC   CL10'8685504552'\n          DC   CL10'2338259443'\n          DC   CL10'4225518754'\n          DC   CL10'9576662885'\n          DC   CL10'5433720236'\n          DC   CL10'0109127207'\n          DC   CL10'0374688198'\n          DC   CL10'0125735609'\n          DC   CL10'3544489840'\n          DC   CL10'8666619291'\n          DC   CL10'5735000362'\n          DC   CL10'0804677453'\n          DC   CL10'0743022964'\n          DC   CL10'3049097295'\n          DC   CL10'4796208846'\n          DC   CL10'1481674017'\n          DC   CL10'0647777208'\n          DC   CL10'8817930819'\n          DC   CL10'5572035250'\n          DC   CL10'7465038901'\n          DC   CL10'8972698172'\n          DC   CL10'9728537463'\n          DC   CL10'8996009174'\n          DC   CL10'1599853705'\n          DC   CL10'6420659456'\n          DC   CL10'1036622827'\n          DC   CL10'6176508218'\n          DC   CL10'3327808029'\n          DC   CL10'0124102660'\n          DC   CL10'3015620511'\n          DC   CL10'7206997982'\n          DC   CL10'1926239473'\n          DC   CL10'6768877384'\n          DC   CL10'4141332115'\n          DC   CL10'5707472066'\n          DC   CL10'9222373637'\n          DC   CL10'8217281228'\n          DC   CL10'2679767239'\n          DC   CL10'6153092070'\n          DC   CL10'5558764121'\n          DC   CL10'6526299792'\n          DC   CL10'1094183483'\n          DC   CL10'8326027594'\n          DC   CL10'3665932525'\n          DC   CL10'1737046676'\n          DC   CL10'1767326447'\n          DC   CL10'6906496238'\n          DC   CL10'0378208449'\n          DC   CL10'4691403480'\n          DC   CL10'7014869731'\n          DC   CL10'6299003602'\n          DC   CL10'7808769493'\n          DC   CL10'0411859804'\n          DC   CL10'3246054935'\n          DC   CL10'3269783286'\n          DC   CL10'5679881257'\n          DC   CL10'7260553248'\n          DC   CL10'0407531659'\n          DC   CL10'4851436890'\n          DC   CL10'6984337341'\n          DC   CL10'5173509412'\n          DC   CL10'5526397503'\n          DC   CL10'8250774014'\n          DC   CL10'2034099345'\n          DC   CL10'4746081896'\n          DC   CL10'5248438067'\n          DC   CL10'5175852258'\n          DC   CL10'3232136869'\n          DC   CL10'9825592300'\n          DC   CL10'8747566951'\n          DC   CL10'7078217222'\n          DC   CL10'6583467513'\n          DC   CL10'1547170224'\n          DC   CL10'1262465755'\n          DC   CL10'2286342506'\n          DC   CL10'8041396877'\n          DC   CL10'3428793268'\n          DC   CL10'1796424079'\n          DC   CL10'2886269710'\n          DC   CL10'5264958561'\n          DC   CL10'7221527032'\n          DC   CL10'8196379523'\n          DC   CL10'0485448434'\n          DC   CL10'0243554165'\n          DC   CL10'9690965116'\n          DC   CL10'0907157687'\n          DC   CL10'7675776278'\n          DC   CL10'7524793289'\n          DC   CL10'3385869120'\n          DC   CL10'5176912171'\n          DC   CL10'8091838842'\n          DC   CL10'8461533533'\n          DC   CL10'1730008644'\n          DC   CL10'2369764575'\n          DC   CL10'4440349726'\n          DC   CL10'5974120497'\n          DC   CL10'2453201288'\n          DC   CL10'6321644499'\n          DC   CL10'2756790530'\n          DC   CL10'8803827781'\n          DC   CL10'5457552652'\n          DC   CL10'2355329543'\n          DC   CL10'4425250854'\n          DC   CL10'1113496985'\n          DC   CL10'3694896336'\n          DC   CL10'6650685307'\n          DC   CL10'7177468298'\n          DC   CL10'4571377709'\n          DC   CL10'0511433940'\n          DC   CL10'4146105391'\n          DC   CL10'4367068462'\n          DC   CL10'7734167553'\n          DC   CL10'6195575064'\n          DC   CL10'6027151395'\n          DC   CL10'0295004946'\n          DC   CL10'3625252117'\n          DC   CL10'2144977308'\n          DC   CL10'5138392919'\n          DC   CL10'0242199350'\n          DC   CL10'2884145001'\n          DC   CL10'5148786272'\n          DC   CL10'1334447563'\n          DC   CL10'9145381274'\n          DC   CL10'8743127805'\n          DC   CL10'8761075556'\n          DC   CL10'0866220927'\n          DC   CL10'4532128318'\n          DC   CL10'3367090129'\n          DC   CL10'5621486760'\n          DC   CL10'6378346611'\n          DC   CL10'9411106082'\n          DC   CL10'4772569573'\n          DC   CL10'5859069484'\n          DC   CL10'8973826215'\n          DC   CL10'1293508166'\n          DC   CL10'1621991737'\n          DC   CL10'4395321328'\n          DC   CL10'3081869339'\n          DC   CL10'6401696170'\n          DC   CL10'1669110221'\n          DC   CL10'6042427892'\n          DC   CL10'0544933583'\n          DC   CL10'5401039694'\n          DC   CL10'0511646625'\n          DC   CL10'3772702776'\n          DC   CL10'4420964547'\n          DC   CL10'0670956338'\n          DC   CL10'2587130549'\n          DC   CL10'4415227580'\n          DC   CL10'7476835831'\n          DC   CL10'7211151702'\n          DC   CL10'8027939593'\n          DC   CL10'9315691904'\n          DC   CL10'7228989035'\n          DC   CL10'1759059386'\n          DC   CL10'9071539357'\n          DC   CL10'7175433348'\n          DC   CL10'0667273759'\n          DC   CL10'9574480990'\n          DC   CL10'0201923441'\n          DC   CL10'4365677512'\n          DC   CL10'9477987603'\n          DC   CL10'7627426114'\n          DC   CL10'9078253445'\n          DC   CL10'6492977996'\n          DC   CL10'2662116167'\n          DC   CL10'8605152358'\n          DC   CL10'2586698969'\n          DC   CL10'5871856400'\n          DC   CL10'9924773051'\n          DC   CL10'4234405322'\n          DC   CL10'6031477613'\n          DC   CL10'4840642324'\n          DC   CL10'8091839855'\n          DC   CL10'0894858606'\n          DC   CL10'5561094977'\n          DC   CL10'6536513368'\n          DC   CL10'6089806179'\n          DC   CL10'7379753810'\n          DC   CL10'6405784661'\n          DC   CL10'4825735132'\n          DC   CL10'3704809623'\n          DC   CL10'5939740534'\n          DC   CL10'4382148265'\n          DC   CL10'5565101216'\n          DC   CL10'7416875787'\n          DC   CL10'5425916378'\n          DC   CL10'7400995389'\n          DC   CL10'4250573220'\n          DC   CL10'5085358271'\n          DC   CL10'1428066942'\n          DC   CL10'9394383633'\n          DC   CL10'2389120744'\n          DC   CL10'2141578675'\n          DC   CL10'4784105826'\n          DC   CL10'3157858597'\n          DC   CL10'8609761388'\n          DC   CL10'7224666599'\n          DC   CL10'8716714630'\n          DC   CL10'3083893881'\n          DC   CL10'2609800752'\n          DC   CL10'6876599643'\n          DC   CL10'8133182954'\n          DC   CL10'5642531085'\n          DC   CL10'2512272436'\n          DC   CL10'8992443407'\n          DC   CL10'4304448398'\n          DC   CL10'6745219809'\n          DC   CL10'1090578040'\n          DC   CL10'5201791491'\n          DC   CL10'6219336562'\n          DC   CL10'2807857653'\n          DC   CL10'5596327164'\n          DC   CL10'5237405495'\n          DC   CL10'8390001046'\n          DC   CL10'8409030217'\n          DC   CL10'1606377408'\n          DC   CL10'3627055019'\n          DC   CL10'5764563450'\n          DC   CL10'9919451101'\n          DC   CL10'5385074372'\n          DC   CL10'2724557663'\n          DC   CL10'1682953374'\n          DC   CL10'3358601905'\n          DC   CL10'3737691656'\n          DC   CL10'8176019027'\n          DC   CL10'6491948418'\n          DC   CL10'8014572229'\n          DC   CL10'7211070860'\n          DC   CL10'5397272711'\n          DC   CL10'4515414182'\n          DC   CL10'7043099673'\n          DC   CL10'3777461584'\n          DC   CL10'0518520315'\n          DC   CL10'7555744266'\n          DC   CL10'4341809837'\n          DC   CL10'7817561428'\n          DC   CL10'8532171439'\n          DC   CL10'5982500270'\n          DC   CL10'5475656321'\n          DC   CL10'5298755992'\n          DC   CL10'7059883683'\n          DC   CL10'5744251794'\n          DC   CL10'1309560725'\n          DC   CL10'2524558876'\n          DC   CL10'8234802647'\n          DC   CL10'3319616438'\n          DC   CL10'8284252649'\n          DC   CL10'4711251680'\n          DC   CL10'5675001931'\n          DC   CL10'2703499802'\n          DC   CL10'0951309693'\n          DC   CL10'3927724004'\n          DC   CL10'0404123135'\n          DC   CL10'1004535486'\n          DC   CL10'2463397457'\n          DC   CL10'5614513448'\n          DC   CL10'0855215859'\n          DC   CL10'4109725090'\n          DC   CL10'9195709541'\n          DC   CL10'0978045612'\n          DC   CL10'9773777703'\n          DC   CL10'3152278214'\n          DC   CL10'8554607545'\n          DC   CL10'1036074096'\n          DC   CL10'6915994267'\n          DC   CL10'8198652458'\n          DC   CL10'6309461069'\n          DC   CL10'8970320500'\n          DC   CL10'2918179151'\n          DC   CL10'9650793422'\n          DC   CL10'3463687713'\n          DC   CL10'2722314424'\n          DC   CL10'8593413955'\n          DC   CL10'2339574706'\n          DC   CL10'4760993077'\n          DC   CL10'1448433468'\n          DC   CL10'7191388279'\n          DC   CL10'4165437910'\n          DC   CL10'3402810761'\n          DC   CL10'9530143232'\n          DC   CL10'6837439723'\n          DC   CL10'2422232634'\n          DC   CL10'1432942365'\n          DC   CL10'2315437316'\n          DC   CL10'8446793887'\n          DC   CL10'8620256478'\n          DC   CL10'4525397489'\n          DC   CL10'0647477320'\n          DC   CL10'2890004371'\n          DC   CL10'8704495042'\n          DC   CL10'5591433733'\n          DC   CL10'8516432844'\n          DC   CL10'2065592775'\n          DC   CL10'2044061926'\n          DC   CL10'5701796697'\n          DC   CL10'1850521488'\n          DC   CL10'3815888699'\n          DC   CL10'1448838730'\n          DC   CL10'5300159981'\n          DC   CL10'8542248852'\n          DC   CL10'2302069743'\n          DC   CL10'9749315054'\n          DC   CL10'5563765185'\n          DC   CL10'2285848536'\n          DC   CL10'5534401507'\n          DC   CL10'8155628498'\n          DC   CL10'1047261909'\n          DC   CL10'7681922140'\n          DC   CL10'2233677591'\n          DC   CL10'9691804662'\n          DC   CL10'2425747753'\n          DC   CL10'3345279264'\n          DC   CL10'3079859595'\n          DC   CL10'9481197146'\n          DC   CL10'4233008317'\n          DC   CL10'5431977508'\n          DC   CL10'8683917119'\n          DC   CL10'4539127550'\n          DC   CL10'8970957201'\n          DC   CL10'8081562472'\n          DC   CL10'0298867763'\n          DC   CL10'1008725474'\n          DC   CL10'7846276005'\n          DC   CL10'1750507756'\n          DC   CL10'1366017127'\n          DC   CL10'8455968518'\n          DC   CL10'1670254329'\n          DC   CL10'7292854960'\n          DC   CL10'0472398811'\n          DC   CL10'0919922282'\n          DC   CL10'5137829773'\n          DC   CL10'4924053684'\n          DC   CL10'1175414415'\n          DC   CL10'4894180366'\n          DC   CL10'5781827937'\n          DC   CL10'4884001528'\n          DC   CL10'3430673539'\n          DC   CL10'7295504370'\n          DC   CL10'7378402421'\n          DC   CL10'2695284092'\n          DC   CL10'7039033783'\n          DC   CL10'3755663894'\n          DC   CL10'8459674825'\n          DC   CL10'8392614976'\n          DC   CL10'1608840747'\n          DC   CL10'1252476538'\n          DC   CL10'1869574749'\n          DC   CL10'7979475780'\n          DC   CL10'2009368031'\n          DC   CL10'1176047902'\n          DC   CL10'2978879793'\n          DC   CL10'8647956104'\n          DC   CL10'5171457235'\n          DC   CL10'1406211586'\n          DC   CL10'4255455557'\n          DC   CL10'8977793548'\n          DC   CL10'5371357959'\n          DC   CL10'0857169190'\n          DC   CL10'4365695641'\n          DC   CL10'3410613712'\n          DC   CL10'2813767803'\n          DC   CL10'9225330314'\n          DC   CL10'2863161645'\n          DC   CL10'8775370196'\n          DC   CL10'6410072367'\n          DC   CL10'0356352558'\n          DC   CL10'8800423169'\n          DC   CL10'1520984600'\n          DC   CL10'8127785251'\n          DC   CL10'1727381522'\n          DC   CL10'5280097813'\n          DC   CL10'9592186524'\n          DC   CL10'5167188055'\n          DC   CL10'7020490806'\n          DC   CL10'4041091177'\n          DC   CL10'4564553568'\n          DC   CL10'9501170379'\n          DC   CL10'5643322010'\n          DC   CL10'6656036861'\n          DC   CL10'9734751332'\n          DC   CL10'3994269823'\n          DC   CL10'4332924734'\n          DC   CL10'3795936465'\n          DC   CL10'0341973416'\n          DC   CL10'2396911987'\n          DC   CL10'3658796578'\n          DC   CL10'3297999589'\n          DC   CL10'4976581420'\n          DC   CL10'8990850471'\n          DC   CL10'8321123142'\n          DC   CL10'3452683833'\n          DC   CL10'4511944944'\n          DC   CL10'4541806875'\n          DC   CL10'6620218026'\n          DC   CL10'2005934797'\n          DC   CL10'8575481588'\n          DC   CL10'0495310799'\n          DC   CL10'3353162830'\n          DC   CL10'5852626081'\n          DC   CL10'1654896952'\n          DC   CL10'5031739843'\n          DC   CL10'3673647154'\n          DC   CL10'3277199285'\n          DC   CL10'3415624636'\n          DC   CL10'4676559607'\n          DC   CL10'5131008598'\n          DC   CL10'1877504009'\n          DC   CL10'2685466240'\n          DC   CL10'5641763691'\n          DC   CL10'3184472762'\n          DC   CL10'2987837853'\n          DC   CL10'3842431364'\n          DC   CL10'1954513695'\n          DC   CL10'3968593246'\n          DC   CL10'9497186417'\n          DC   CL10'0021777608'\n          DC   CL10'4708979219'\n          DC   CL10'8965891650'\n          DC   CL10'0438663301'\n          DC   CL10'1638250572'\n          DC   CL10'0457377863'\n          DC   CL10'1522697574'\n          DC   CL10'4606150105'\n          DC   CL10'3199523856'\n          DC   CL10'8836215227'\n          DC   CL10'6824188618'\n          DC   CL10'8734136429'\n          DC   CL10'8266839060'\n          DC   CL10'2003724911'\n          DC   CL10'7024630382'\n          DC   CL10'5456759873'\n          DC   CL10'3698845784'\n          DC   CL10'3344508515'\n          DC   CL10'3708816466'\n          DC   CL10'4342046037'\n          DC   CL10'1994641628'\n          DC   CL10'2177375639'\n          DC   CL10'2740708470'\n          DC   CL10'7777348521'\n          DC   CL10'6632012192'\n          DC   CL10'6882383883'\n          DC   CL10'3835275994'\n          DC   CL10'4361988925'\n          DC   CL10'1776871076'\n          DC   CL10'2943078847'\n          DC   CL10'0869536638'\n          DC   CL10'7743096849'\n          DC   CL10'6619899880'\n          DC   CL10'6879934131'\n          DC   CL10'1028796002'\n          DC   CL10'0510649893'\n          DC   CL10'7876388204'\n          DC   CL10'3930991335'\n          DC   CL10'3364087686'\n          DC   CL10'2847713657'\n          DC   CL10'3665273648'\n          DC   CL10'8615700059'\n          DC   CL10'2216813290'\n          DC   CL10'6111881741'\n          DC   CL10'0063381812'\n          DC   CL10'4997957903'\n          DC   CL10'0246582414'\n          DC   CL10'4403915745'\n          DC   CL10'0110866296'\n          DC   CL10'9544350467'\n          DC   CL10'1478252658'\n          DC   CL10'4459585269'\n          DC   CL10'5923848700'\n          DC   CL10'5953591351'\n          DC   CL10'8864169622'\n          DC   CL10'7880707913'\n          DC   CL10'9850258624'\n          DC   CL10'0213162155'\n          DC   CL10'5337606906'\n          DC   CL10'1801389277'\n          DC   CL10'2284873668'\n          DC   CL10'7419152479'\n          DC   CL10'4213406110'\n          DC   CL10'6565462961'\n          DC   CL10'3839559432'\n          DC   CL10'1575299923'\n          DC   CL10'6071816834'\n          DC   CL10'3871130565'\n          DC   CL10'0044709516'\n          DC   CL10'7667230087'\n          DC   CL10'6941536678'\n          DC   CL10'8118801689'\n          DC   CL10'9637885520'\n          DC   CL10'3787896571'\n          DC   CL10'8677951242'\n          DC   CL10'9378133933'\n          DC   CL10'4775657044'\n          DC   CL10'1970220975'\n          DC   CL10'8912574126'\n          DC   CL10'0470272897'\n          DC   CL10'5184641688'\n          DC   CL10'1662932899'\n          DC   CL10'6829686930'\n          DC   CL10'5141292181'\n          DC   CL10'0347745052'\n          DC   CL10'1465609943'\n          DC   CL10'4306179254'\n          DC   CL10'1182833385'\n          DC   CL10'6301600736'\n          DC   CL10'4818917707'\n          DC   CL10'1630588698'\n          DC   CL10'3635946109'\n          DC   CL10'8501210340'\n          DC   CL10'5826049791'\n          DC   CL10'5097340862'\n          DC   CL10'0894127953'\n          DC   CL10'1487783464'\n          DC   CL10'4261367795'\n          DC   CL10'2252189346'\n          DC   CL10'2601564517'\n          DC   CL10'1775777708'\n          DC   CL10'6102241319'\n          DC   CL10'1444855750'\n          DC   CL10'4722569401'\n          DC   CL10'4455138672'\n          DC   CL10'9600087963'\n          DC   CL10'7624869674'\n          DC   CL10'6038224205'\n          DC   CL10'8484739956'\n          DC   CL10'8986613327'\n          DC   CL10'7996608718'\n          DC   CL10'3606218529'\n          DC   CL10'2533023160'\n          DC   CL10'0391251011'\n          DC   CL10'1229538482'\n          DC   CL10'4399889973'\n          DC   CL10'4501837884'\n          DC   CL10'9425802615'\n          DC   CL10'4399652566'\n          DC   CL10'8422464137'\n          DC   CL10'5549481728'\n          DC   CL10'9172277739'\n          DC   CL10'4718112570'\n          DC   CL10'7072494621'\n          DC   CL10'5508940292'\n          DC   CL10'2989933983'\n          DC   CL10'0383088094'\n          DC   CL10'1416503025'\n          DC   CL10'3077327176'\n          DC   CL10'0637516947'\n          DC   CL10'8570796738'\n          DC   CL10'0304818949'\n          DC   CL10'3032523980'\n          DC   CL10'0686700231'\n          DC   CL10'0661744102'\n          DC   CL10'9946619993'\n          DC   CL10'6013020304'\n          DC   CL10'9082725435'\n          DC   CL10'7278163786'\n          DC   CL10'6640171757'\n          DC   CL10'6076953748'\n          DC   CL10'4988242159'\n          DC   CL10'0588657390'\n          DC   CL10'4834267841'\n          DC   CL10'9336349912'\n          DC   CL10'2726348003'\n          DC   CL10'0616034514'\n          DC   CL10'5576869845'\n          DC   CL10'5442562396'\n          DC   CL10'4718828567'\n          DC   CL10'7964352758'\n          DC   CL10'7686947369'\n          DC   CL10'4578912800'\n          DC   CL10'6795597451'\n          DC   CL10'9461157722'\n          DC   CL10'7665518013'\n          DC   CL10'7896530724'\n          DC   CL10'6131336255'\n          DC   CL10'7690923006'\n          DC   CL10'6441887377'\n          DC   CL10'1009393768'\n          DC   CL10'5345334579'\n          DC   CL10'2275690210'\n          DC   CL10'3531089061'\n          DC   CL10'0244567532'\n          DC   CL10'5980530023'\n          DC   CL10'2038908934'\n          DC   CL10'4058524665'\n          DC   CL10'1823645616'\n          DC   CL10'2657748187'\n          DC   CL10'4868476778'\n          DC   CL10'3387803789'\n          DC   CL10'7031389620'\n          DC   CL10'7681142671'\n          DC   CL10'8174979342'\n          DC   CL10'9767784033'\n          DC   CL10'3707569144'\n          DC   CL10'6750835075'\n          DC   CL10'9321130226'\n          DC   CL10'9494810997'\n          DC   CL10'8078001788'\n          DC   CL10'1718754999'\n          DC   CL10'4278411030'\n          DC   CL10'3566158281'\n          DC   CL10'3020793152'\n          DC   CL10'8003680043'\n          DC   CL10'6046911354'\n          DC   CL10'1680667485'\n          DC   CL10'1343776836'\n          DC   CL10'4361475807'\n          DC   CL10'4054368798'\n          DC   CL10'0722588209'\n          DC   CL10'7529154440'\n          DC   CL10'3186535891'\n          DC   CL10'3830408962'\n          DC   CL10'2544618053'\n          DC   CL10'0681335564'\n          DC   CL10'2400421895'\n          DC   CL10'4731985446'\n          DC   CL10'1946142617'\n          DC   CL10'7093977808'\n          DC   CL10'7263703419'\n          DC   CL10'4376019850'\n          DC   CL10'2222675501'\n          DC   CL10'4932226772'\n          DC   CL10'4126998063'\n          DC   CL10'3715241774'\n          DC   CL10'4542498305'\n          DC   CL10'8006156056'\n          DC   CL10'0217211427'\n          DC   CL10'8373228818'\n          DC   CL10'0686500629'\n          DC   CL10'2491407260'\n          DC   CL10'6034977111'\n          DC   CL10'1934646582'\n          DC   CL10'8367220073'\n          DC   CL10'1733029984'\n          DC   CL10'1819296715'\n          DC   CL10'7366688666'\n          DC   CL10'6423082237'\n          DC   CL10'1948521828'\n          DC   CL10'8815379839'\n          DC   CL10'5627716670'\n          DC   CL10'5663840721'\n          DC   CL10'7726068392'\n          DC   CL10'1761684083'\n          DC   CL10'7799100194'\n          DC   CL10'2023217125'\n          DC   CL10'2693983276'\n          DC   CL10'3092155047'\n          DC   CL10'0756256838'\n          DC   CL10'3954741049'\n          DC   CL10'9617348080'\n          DC   CL10'3829666331'\n          DC   CL10'8474892202'\n          DC   CL10'7686790093'\n          DC   CL10'7457852404'\n          DC   CL10'3026659535'\n          DC   CL10'3548439886'\n          DC   CL10'4032829857'\n          DC   CL10'2612833848'\n          DC   CL10'8888984259'\n          DC   CL10'8372701490'\n          DC   CL10'0932853941'\n          DC   CL10'9629518012'\n          DC   CL10'2398938103'\n          DC   CL10'4733686614'\n          DC   CL10'8782023945'\n          DC   CL10'5170458496'\n          DC   CL10'0333506667'\n          DC   CL10'6214652858'\n          DC   CL10'2882509469'\n          DC   CL10'9886176900'\n          DC   CL10'1053803551'\n          DC   CL10'1918345822'\n          DC   CL10'1034528113'\n          DC   CL10'8131002824'\n          DC   CL10'5321710355'\n          DC   CL10'4480439106'\n          DC   CL10'6362585477'\n          DC   CL10'7138113868'\n          DC   CL10'7679716679'\n          DC   CL10'2230174310'\n          DC   CL10'7952915161'\n          DC   CL10'7349775632'\n          DC   CL10'3609960123'\n          DC   CL10'6634201034'\n          DC   CL10'6758118765'\n          DC   CL10'6078781716'\n          DC   CL10'5768466287'\n          DC   CL10'3839616878'\n          DC   CL10'3505005889'\n          DC   CL10'9557093720'\n          DC   CL10'1070588771'\n          DC   CL10'5212207442'\n          DC   CL10'1021634133'\n          DC   CL10'5707681244'\n          DC   CL10'1283649175'\n          DC   CL10'8245886326'\n          DC   CL10'7479549097'\n          DC   CL10'3655561888'\n          DC   CL10'5062777099'\n          DC   CL10'8099335130'\n          DC   CL10'1527224381'\n          DC   CL10'8074041252'\n          DC   CL10'1045950143'\n          DC   CL10'3295843454'\n          DC   CL10'7170701585'\n          DC   CL10'8942152936'\n          DC   CL10'1704233907'\n          DC   CL10'8802348898'\n          DC   CL10'7537430309'\n          DC   CL10'2169298540'\n          DC   CL10'8123221991'\n          DC   CL10'7783677062'\n          DC   CL10'4339308153'\n          DC   CL10'5823087664'\n          DC   CL10'8771675995'\n          DC   CL10'1807981546'\n          DC   CL10'5930920717'\n          DC   CL10'2376377908'\n          DC   CL10'2593365519'\n          DC   CL10'0159383950'\n          DC   CL10'3338981601'\n          DC   CL10'1469514872'\n          DC   CL10'0438108163'\n          DC   CL10'4193813874'\n          DC   CL10'2518972405'\n          DC   CL10'2163772156'\n          DC   CL10'0928009527'\n          DC   CL10'4354048918'\n          DC   CL10'4374982729'\n          DC   CL10'0541991360'\n          DC   CL10'9334903211'\n          DC   CL10'7539954682'\n          DC   CL10'3758750173'\n          DC   CL10'9792422084'\n          DC   CL10'2924990815'\n          DC   CL10'3009924766'\n          DC   CL10'6743900337'\n          DC   CL10'7591761928'\n          DC   CL10'5506681939'\n          DC   CL10'7869520770'\n          DC   CL10'3951386821'\n          DC   CL10'1683396492'\n          DC   CL10'9597634183'\n          DC   CL10'0483312294'\n          DC   CL10'8582131225'\n          DC   CL10'1026839376'\n          DC   CL10'8706993147'\n          DC   CL10'3825916938'\n          DC   CL10'3092863149'\n          DC   CL10'8774372180'\n          DC   CL10'6708832431'\n          DC   CL10'2868240302'\n          DC   CL10'0131160193'\n          DC   CL10'6610884504'\n          DC   CL10'8162793635'\n          DC   CL10'2574915986'\n          DC   CL10'3425687957'\n          DC   CL10'9672913948'\n          DC   CL10'4717926359'\n          DC   CL10'7968945590'\n          DC   CL10'4807640041'\n          DC   CL10'9342886112'\n          DC   CL10'0415728203'\n          DC   CL10'6999538714'\n          DC   CL10'6419378045'\n          DC   CL10'9694554596'\n          DC   CL10'4788384767'\n          DC   CL10'2629152958'\n          DC   CL10'4446271569'\n          DC   CL10'4245641000'\nLASTUN   EQU   *-10\n         DC    XL10'FFFFFFFFFFFFFFFFFFFF'\n*\nHEAPSRT  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'HEAPSORT'\nSORTRTN  B     14(0,R9)\n         USING SORTRTN,R9\n         DC    AL1(8),CL9'SORTRTN'\n         LR    R15,R9\n         DROP  R9\n         USING SORTRTN,R15\n         LA    R1,500              L <- FLOOR(N/2)\n         LA    R2,999              R <- N-1\nDECL     BCTR  R1,0                L <- L-1\n         LR    R9,R1               R9 <- L\n         M     R8,=F'10'           R9 <- L*10\n         A     R9,=A(UNSORTED)     R9 <- PTR K(L)\n         MVC   TEMP,0(R9)          K <- K(L)\nSIFTUP   LA    R4,1(R1)            J <- L\n         LR    R5,R2               R5 <- R\n         SR    R5,R1               R5 <- R-J\n         B     ADVDOWN\nCOMPARE  LR    R7,R4               R7 <- J\n         BCTR  R7,0\n         M     R6,=F'10'           R7 <- J*10\n         A     R7,=A(UNSORTED)     R7 <- PTR K(J)\n         CLC   0(10,R7),10(R7)     K(J) GE K(J+1) ?\n         BH    MOVEUP              YES\n         LA    R4,1(R4)            J <- J + 1\n         BCTR  R5,0                R5 <- R5-1\nMOVEUP   LR    R9,R3               R9 <- I\n         BCTR  R9,0\n         M     R8,=F'10'           R9 <- I*10\n         A     R9,=A(UNSORTED)     R9 <- PTR K(I)\n         LR    R7,R4               R7 <- J\n         BCTR  R7,0\n         M     R6,=F'10'           R7 <- J*10\n         A     R7,=A(UNSORTED)     R7 <- PTR K(J)\n         MVC   0(10,R9),0(R7)      R(I) <- R(J)\nADVDOWN  LR    R3,R4\n         SR    R5,R4               R5 <- R5 - J\n         SLL   R4,1                J <- J+J\n         LTR   R5,R5\n         BP    COMPARE             J < R\n         BZ    MOVEUP              J=R\nNEWIJ    LR    R4,R3               J <- I\n         LR    R7,R4               R7 <- J\n         BCTR  R7,0\n         M     R6,=F'10'           R7 <- J*10\n         A     R7,=A(UNSORTED)     R7 <- PTR K(J)\n         SRL   R3,1                I <- FLOOR(J/2)\n         LR    R9,R3               R9 <- I\n         BCTR  R9,0\n         M     R8,=F'10'           R9 <- I*10\n         A     R9,=A(UNSORTED)     R9 <- PTR K(I)\nSTORETST CLC   TEMP,0(R9)          K LE K(I) ?\n         BNH   MOVEKJ              YES\n         LA    R14,1(R1)           R14 <- L\n         CR    R4,R14              J NE L ?\n         BNE   MOVEIJ              YES\nMOVEKJ   MVC   0(10,R7),TEMP       K(J) <- K\n         B     DECLR\nMOVEIJ   MVC   0(10,R7),0(R9)      K(J) <- K(I)\n         B     NEWIJ\nDECLR    LTR   R1,R1\n         BP    DECL\n         LR    R7,R2               R7 <- R\n         BCTR  R7,0\n         M     R6,=F'10'           R*10\n         A     R7,=A(UNSORTED+10)  PTR K(R)\n         MVC   TEMP,0(R7)          K <- K(R)\n         MVC   0(10,R7),UNSORTED   K(R) <- K(1)\n         S     R2,=F'1'            R <- R-1\n         BP    SIFTUP\n         MVC   UNSORTED(10),TEMP   K(1) <- K\n         B     SEXIT\n         LTORG\n         DROP  R15\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n*---------------------------------------------------------------------*\n* DISPLAY RESULTS                                                     *\n*---------------------------------------------------------------------*\n         CVD   R3,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         LA    R2,1000\n         L     R3,=A(UNSORTED)     HEAD OF LIST\n         LA    R4,56               NUMBER OF RECS PER PAGE\n         LA    R5,57               COUNT RECS OUTPUT\nPRTLOOP2 MVC   OUTKEY,0(R3)        PLACE IN OUTPUT REC\n         LA    R5,1(R5)            COUNT REC\n         CR    R5,R4\n         BH    NEWPAGE             MORE THAN 56\n         PUT   OUTFILE,OUTREC      LESS THAN 56\n         B     PRTST\nNEWPAGE  MVI   OUTREC,C'1'         NEW PAGE\n         PUT   OUTFILE,OUTREC\n         MVI   OUTREC,C' '         SINGLE SPACE\n         SR    R5,R5\nPRTST    LA    R3,10(R3)          NEXT SORTED REC\n         BCT   R2,PRTLOOP2\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00049": {"ttr": 15111, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00L\\x00L\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 76, "newlines": 76, "modlines": 0, "user": "EGHF3PY"}, "text": "SYSTEM INFORMATION\n\n    SYSNAME=XXXX\n    STOR=004896M\n    PRODI=SP7.0.2\n    PRODN=HBB7705\n    MODEL=2064\n    SMFSID=XXXX\n    IPL=2002232\n    SPEED=010081 SU/S\n    CPU=002064-107\n    SYSPLEX=CSPLEXT1\n    HWNAME=YELLOW\n    LPAR=XXXX\n    VM=\n    OS/390=010200\n\n                              CPU=002064-107\nTIMING INFORMATION FOR SORTS (TIME IS IN MICROSECONDS)\n\n                      16 RECORDS         1000 RECORDS\n\nCOMPARISON COUNTING            7               10,300  ASM00014 ASM00015\nDISTRIBUTION COUNTING         10                  142  ASM00016 ASM00017\nSTRAIGHT INSERTION             5                4,713  ASM00018 ASM00019\nSHELL SORT (DIMINISHING INCR)  5                  340  ASM00020 ASM00021\nLIST INSERTION                 5                5,167  ASM00022 ASM00023\nOPTIMIZED LIST INSERTION       5                2,039  ASM00024 ASM00025\nMULTIPLE LIST INSERTION        4                   80  ASM00026 ASM00027\nSHORT SLOW SORT               11            2,645,306  ASM00028 ASM00029\nBUBBLE SORT                    6               15,038  ASM00030 ASM00031\nBATCHER'S MERGE EXCHANGE       8                1,424  ASM00032 ASM00033\nQUICKSORT (PARTITTION XCHG)(M=9)\n   (RECS NOT IN ORDER)         5                  282  ASM00034 ASM00035\n   (RECS IN ORDER)             5                6,939  ASM00036 ASM00037\nQUICKSORT (MEDIAN OF 3)(M=9)\n   (RECS NOT IN ORDER)         6                  262  ASM00038 ASM00039\n   (RECS IN ORDER)             4                  127  ASM00040 ASM00041\nQUICKSORT (PARTITTION XCHG)(M=8)\n   (RECS NOT IN ORDER)         5                  277  ASM00034 ASM00035\n   (RECS IN ORDER)             6                6,841  ASM00036 ASM00037\nQUICKSORT (MEDIAN OF 3)(M=8)\n   (RECS NOT IN ORDER)         5                  267  ASM00038 ASM00039\n   (RECS IN ORDER)             5                  127  ASM00040 ASM00041\nRADIX EXCHANGE                 8                  784  ASM00042 ASM00043\nRADIX EXCHANGE (BINARY KEYS)   -                  417           ASM00044\nSTRAIGHT SELECTION             6               10,458  ASM00045 ASM00046\nHEAPSORT                       7                  754  ASM00047 ASM00048\n\n\n\n                              CPU=370/158\nTIMING INFORMATION FOR SORTS (TIME IS IN MICROSECONDS)\n\n                                  16 RECORDS         1000 RECORDS\n\nCOMPARISON COUNTING                    1,118            2,608,554\nDISTRIBUTION COUNTING                  5,070               36,010\nSTRAIGHT INSERTION                       962            2,654,042\nSHELL SORT (DIMINISHING INCR)            962               44,122\nLIST INSERTION                           754              917,878\nOPTIMIZED LIST INSERTION                 754              862,238\nMULTIPLE LIST INSERTION                  754               14,586\nSHORT SLOW SORT                        2,574            ---------\nBUBBLE SORT                            1,274            6,743,178\nBATCHER'S MERGE EXCHANGE               1,586              366,418\nQUICKSORT (PARTITTION XCHG)(M=9)\n   (RECS NOT IN ORDER)                   806               95,862\n   (RECS IN ORDER)                     1,170            1,549,470\nQUICKSORT (MEDIAN OF 3)(M=9)\n   (RECS NOT IN ORDER)                   910               83,746\n   (RECS IN ORDER)                       702               38,298\nRADIX EXCHANGE                         1,482              172,406\nRADIX EXCHANGE (BINARY KEYS)           -----              140,582\nSTRAIGHT SELECTION                     1,118            1,875,354\nHEAPSORT                               1,898              224,614\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASM00050": {"ttr": 15114, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\x02\\x01\\x02\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 258, "newlines": 258, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL SEQSRCH ',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00050'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'SEQUENTIAL SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 OCT 1983 - CHARLES HOTTEL                                 *\n*        SEQUENTIAL SEARCH                                            *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 393-394                                   *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nSEQSRCH  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         LA    R7,TIMETBL          POINT TO TIME TABLE\n         LA    R6,16\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,3(R8)            NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nTIMETBL  DC    16F'0'              SEARCH TIMES\nKEY      DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nSRCHTBL  DC    CL3'061'\n         DC    CL3'087'\n         DC    CL3'154'\n         DC    CL3'170'\n         DC    CL3'275'\n         DC    CL3'426'\n         DC    CL3'503'\n         DC    CL3'509'\n         DC    CL3'512'\n         DC    CL3'612'\n         DC    CL3'653'\n         DC    CL3'677'\n         DC    CL3'703'\n         DC    CL3'765'\n         DC    CL3'897'\n         DC    CL3'908'\nLASTUN   EQU   *-3\n*\nSEQSRCH1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'SEQUENTIAL SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R2,SRCHTBL\n         LA    R3,16\nLOOP1    CLC   KEY,0(R2)\n         BE    SUCCESS\n         LA    R2,3(R2)\n         BCT   R3,LOOP1\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         LA    R3,TIMETBL\n         LA    R2,16\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'16'           AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00051": {"ttr": 15363, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x04\\xdc\\x04\\xdc\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1244, "newlines": 1244, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL SEQSRCH ',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00051'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'SEQUENTIAL SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 OCT 1983 - CHARLES HOTTEL                                 *\n*        SEQUENTIAL SEARCH                                            *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 393-394                                   *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nSEQSRCH  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         L     R7,=A(TIMETBL)      POINT TO TIME TABLE\n         LA    R6,1000\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,10(R8)           NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nKEY      DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nSRCHTBL   EQU  *\n          DC   CL10'0021777608'\n          DC   CL10'0027612669'\n          DC   CL10'0044709516'\n          DC   CL10'0063381812'\n          DC   CL10'0109127207'\n          DC   CL10'0110866296'\n          DC   CL10'0119215494'\n          DC   CL10'0124102660'\n          DC   CL10'0125735609'\n          DC   CL10'0129905505'\n          DC   CL10'0131160193'\n          DC   CL10'0159383950'\n          DC   CL10'0201923441'\n          DC   CL10'0213162155'\n          DC   CL10'0216719243'\n          DC   CL10'0217211427'\n          DC   CL10'0218026627'\n          DC   CL10'0241754751'\n          DC   CL10'0242199350'\n          DC   CL10'0243554165'\n          DC   CL10'0244567532'\n          DC   CL10'0246582414'\n          DC   CL10'0265668719'\n          DC   CL10'0269317263'\n          DC   CL10'0287224727'\n          DC   CL10'0295004946'\n          DC   CL10'0295810742'\n          DC   CL10'0298867763'\n          DC   CL10'0304818949'\n          DC   CL10'0333506667'\n          DC   CL10'0341973416'\n          DC   CL10'0342069814'\n          DC   CL10'0347745052'\n          DC   CL10'0350150475'\n          DC   CL10'0356352558'\n          DC   CL10'0374688198'\n          DC   CL10'0378208449'\n          DC   CL10'0383088094'\n          DC   CL10'0391251011'\n          DC   CL10'0397635966'\n          DC   CL10'0404123135'\n          DC   CL10'0407531659'\n          DC   CL10'0411859804'\n          DC   CL10'0415728203'\n          DC   CL10'0425389343'\n          DC   CL10'0430176038'\n          DC   CL10'0438108163'\n          DC   CL10'0438663301'\n          DC   CL10'0457377863'\n          DC   CL10'0470272897'\n          DC   CL10'0472398811'\n          DC   CL10'0483312294'\n          DC   CL10'0485448434'\n          DC   CL10'0495310799'\n          DC   CL10'0496791189'\n          DC   CL10'0510649893'\n          DC   CL10'0511433940'\n          DC   CL10'0511646625'\n          DC   CL10'0517639587'\n          DC   CL10'0518520315'\n          DC   CL10'0541991360'\n          DC   CL10'0544933583'\n          DC   CL10'0588657390'\n          DC   CL10'0612793626'\n          DC   CL10'0616034514'\n          DC   CL10'0622321914'\n          DC   CL10'0637516947'\n          DC   CL10'0647477320'\n          DC   CL10'0647777208'\n          DC   CL10'0661744102'\n          DC   CL10'0667273759'\n          DC   CL10'0670956338'\n          DC   CL10'0681335564'\n          DC   CL10'0686500629'\n          DC   CL10'0686700231'\n          DC   CL10'0714777108'\n          DC   CL10'0722588209'\n          DC   CL10'0743022964'\n          DC   CL10'0756256838'\n          DC   CL10'0804677453'\n          DC   CL10'0826611007'\n          DC   CL10'0847201640'\n          DC   CL10'0855215859'\n          DC   CL10'0857169190'\n          DC   CL10'0866220927'\n          DC   CL10'0869536638'\n          DC   CL10'0894127953'\n          DC   CL10'0894858606'\n          DC   CL10'0906281426'\n          DC   CL10'0907157687'\n          DC   CL10'0919922282'\n          DC   CL10'0928009527'\n          DC   CL10'0930832968'\n          DC   CL10'0932853941'\n          DC   CL10'0951309693'\n          DC   CL10'0967769107'\n          DC   CL10'0978045612'\n          DC   CL10'1004535486'\n          DC   CL10'1008725474'\n          DC   CL10'1009393768'\n          DC   CL10'1021634133'\n          DC   CL10'1026839376'\n          DC   CL10'1028796002'\n          DC   CL10'1034528113'\n          DC   CL10'1036074096'\n          DC   CL10'1036622827'\n          DC   CL10'1045950143'\n          DC   CL10'1047261909'\n          DC   CL10'1053803551'\n          DC   CL10'1055817303'\n          DC   CL10'1070588771'\n          DC   CL10'1090578040'\n          DC   CL10'1094183483'\n          DC   CL10'1102965965'\n          DC   CL10'1113496985'\n          DC   CL10'1124826024'\n          DC   CL10'1169066430'\n          DC   CL10'1170852922'\n          DC   CL10'1175414415'\n          DC   CL10'1175901510'\n          DC   CL10'1176047902'\n          DC   CL10'1182833385'\n          DC   CL10'1209852058'\n          DC   CL10'1229538482'\n          DC   CL10'1252476538'\n          DC   CL10'1262465755'\n          DC   CL10'1283649175'\n          DC   CL10'1293508166'\n          DC   CL10'1300971865'\n          DC   CL10'1309560725'\n          DC   CL10'1334447563'\n          DC   CL10'1343776836'\n          DC   CL10'1366017127'\n          DC   CL10'1406211586'\n          DC   CL10'1416503025'\n          DC   CL10'1428066942'\n          DC   CL10'1432942365'\n          DC   CL10'1444855750'\n          DC   CL10'1448433468'\n          DC   CL10'1448838730'\n          DC   CL10'1465609943'\n          DC   CL10'1469514872'\n          DC   CL10'1478252658'\n          DC   CL10'1481674017'\n          DC   CL10'1487783464'\n          DC   CL10'1493612746'\n          DC   CL10'1506827363'\n          DC   CL10'1510218230'\n          DC   CL10'1510752158'\n          DC   CL10'1515117817'\n          DC   CL10'1519007403'\n          DC   CL10'1520984600'\n          DC   CL10'1522697574'\n          DC   CL10'1527224381'\n          DC   CL10'1547170224'\n          DC   CL10'1553542330'\n          DC   CL10'1563502577'\n          DC   CL10'1567055502'\n          DC   CL10'1575299923'\n          DC   CL10'1599853705'\n          DC   CL10'1606377408'\n          DC   CL10'1608840747'\n          DC   CL10'1621991737'\n          DC   CL10'1630588698'\n          DC   CL10'1638250572'\n          DC   CL10'1654896952'\n          DC   CL10'1658768311'\n          DC   CL10'1659356334'\n          DC   CL10'1662932899'\n          DC   CL10'1669110221'\n          DC   CL10'1670254329'\n          DC   CL10'1680667485'\n          DC   CL10'1682953374'\n          DC   CL10'1683396492'\n          DC   CL10'1704233907'\n          DC   CL10'1718754999'\n          DC   CL10'1727381522'\n          DC   CL10'1730008644'\n          DC   CL10'1733029984'\n          DC   CL10'1737046676'\n          DC   CL10'1750507756'\n          DC   CL10'1759059386'\n          DC   CL10'1761684083'\n          DC   CL10'1767326447'\n          DC   CL10'1775777708'\n          DC   CL10'1776871076'\n          DC   CL10'1783737437'\n          DC   CL10'1796424079'\n          DC   CL10'1801389277'\n          DC   CL10'1807981546'\n          DC   CL10'1819296715'\n          DC   CL10'1823645616'\n          DC   CL10'1850521488'\n          DC   CL10'1869574749'\n          DC   CL10'1873888347'\n          DC   CL10'1877504009'\n          DC   CL10'1916989089'\n          DC   CL10'1918345822'\n          DC   CL10'1923132262'\n          DC   CL10'1926239473'\n          DC   CL10'1934646582'\n          DC   CL10'1946142617'\n          DC   CL10'1948521828'\n          DC   CL10'1954513695'\n          DC   CL10'1970220975'\n          DC   CL10'1977910306'\n          DC   CL10'1993801028'\n          DC   CL10'1994641628'\n          DC   CL10'2003724911'\n          DC   CL10'2005934797'\n          DC   CL10'2009368031'\n          DC   CL10'2023217125'\n          DC   CL10'2034099345'\n          DC   CL10'2038908934'\n          DC   CL10'2044061926'\n          DC   CL10'2059961681'\n          DC   CL10'2065592775'\n          DC   CL10'2072647459'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'2113148651'\n          DC   CL10'2128795604'\n          DC   CL10'2139096544'\n          DC   CL10'2141578675'\n          DC   CL10'2141727998'\n          DC   CL10'2144637213'\n          DC   CL10'2144977308'\n          DC   CL10'2163772156'\n          DC   CL10'2169298540'\n          DC   CL10'2177375639'\n          DC   CL10'2216813290'\n          DC   CL10'2222675501'\n          DC   CL10'2230174310'\n          DC   CL10'2231104325'\n          DC   CL10'2233677591'\n          DC   CL10'2252189346'\n          DC   CL10'2275690210'\n          DC   CL10'2284873668'\n          DC   CL10'2285848536'\n          DC   CL10'2286342506'\n          DC   CL10'2302069743'\n          DC   CL10'2307633383'\n          DC   CL10'2315437316'\n          DC   CL10'2338259443'\n          DC   CL10'2339574706'\n          DC   CL10'2355329543'\n          DC   CL10'2369764575'\n          DC   CL10'2376377908'\n          DC   CL10'2389120744'\n          DC   CL10'2396911987'\n          DC   CL10'2398938103'\n          DC   CL10'2400421895'\n          DC   CL10'2422232634'\n          DC   CL10'2425747753'\n          DC   CL10'2452295581'\n          DC   CL10'2453201288'\n          DC   CL10'2463397457'\n          DC   CL10'2488720988'\n          DC   CL10'2491407260'\n          DC   CL10'2512272436'\n          DC   CL10'2518972405'\n          DC   CL10'2524558876'\n          DC   CL10'2533023160'\n          DC   CL10'2544618053'\n          DC   CL10'2574915986'\n          DC   CL10'2584106197'\n          DC   CL10'2586698969'\n          DC   CL10'2587130549'\n          DC   CL10'2593365519'\n          DC   CL10'2601564517'\n          DC   CL10'2609800752'\n          DC   CL10'2612833848'\n          DC   CL10'2629152958'\n          DC   CL10'2657748187'\n          DC   CL10'2662116167'\n          DC   CL10'2679767239'\n          DC   CL10'2682008352'\n          DC   CL10'2685466240'\n          DC   CL10'2693983276'\n          DC   CL10'2695284092'\n          DC   CL10'2703499802'\n          DC   CL10'2722314424'\n          DC   CL10'2724557663'\n          DC   CL10'2726348003'\n          DC   CL10'2740708470'\n          DC   CL10'2756790530'\n          DC   CL10'2764666071'\n          DC   CL10'2807857653'\n          DC   CL10'2813767803'\n          DC   CL10'2816227704'\n          DC   CL10'2836247091'\n          DC   CL10'2836687970'\n          DC   CL10'2847713657'\n          DC   CL10'2863161645'\n          DC   CL10'2868240302'\n          DC   CL10'2882509469'\n          DC   CL10'2883441128'\n          DC   CL10'2884145001'\n          DC   CL10'2886269710'\n          DC   CL10'2890004371'\n          DC   CL10'2901437526'\n          DC   CL10'2908096078'\n          DC   CL10'2918179151'\n          DC   CL10'2924990815'\n          DC   CL10'2925865139'\n          DC   CL10'2943078847'\n          DC   CL10'2978879793'\n          DC   CL10'2979680261'\n          DC   CL10'2987837853'\n          DC   CL10'2989933983'\n          DC   CL10'3009924766'\n          DC   CL10'3010102732'\n          DC   CL10'3015620511'\n          DC   CL10'3020793152'\n          DC   CL10'3026659535'\n          DC   CL10'3032523980'\n          DC   CL10'3049097295'\n          DC   CL10'3077327176'\n          DC   CL10'3079859595'\n          DC   CL10'3081869339'\n          DC   CL10'3083893881'\n          DC   CL10'3090555978'\n          DC   CL10'3092155047'\n          DC   CL10'3092863149'\n          DC   CL10'3114643592'\n          DC   CL10'3133986654'\n          DC   CL10'3139779380'\n          DC   CL10'3152278214'\n          DC   CL10'3157858597'\n          DC   CL10'3184472762'\n          DC   CL10'3186535891'\n          DC   CL10'3199523856'\n          DC   CL10'3232136869'\n          DC   CL10'3246054935'\n          DC   CL10'3248183233'\n          DC   CL10'3256786735'\n          DC   CL10'3262132801'\n          DC   CL10'3269783286'\n          DC   CL10'3277199285'\n          DC   CL10'3295843454'\n          DC   CL10'3297999589'\n          DC   CL10'3319616438'\n          DC   CL10'3325756816'\n          DC   CL10'3327808029'\n          DC   CL10'3338981601'\n          DC   CL10'3344508515'\n          DC   CL10'3345279264'\n          DC   CL10'3353162830'\n          DC   CL10'3358601905'\n          DC   CL10'3364087686'\n          DC   CL10'3367090129'\n          DC   CL10'3385869120'\n          DC   CL10'3387803789'\n          DC   CL10'3402810761'\n          DC   CL10'3410613712'\n          DC   CL10'3415624636'\n          DC   CL10'3416289223'\n          DC   CL10'3425687957'\n          DC   CL10'3428793268'\n          DC   CL10'3430673539'\n          DC   CL10'3452683833'\n          DC   CL10'3463687713'\n          DC   CL10'3496725929'\n          DC   CL10'3505005889'\n          DC   CL10'3531089061'\n          DC   CL10'3544489840'\n          DC   CL10'3548439886'\n          DC   CL10'3566158281'\n          DC   CL10'3578295917'\n          DC   CL10'3606218529'\n          DC   CL10'3609960123'\n          DC   CL10'3621038015'\n          DC   CL10'3625252117'\n          DC   CL10'3627055019'\n          DC   CL10'3635946109'\n          DC   CL10'3655561888'\n          DC   CL10'3658796578'\n          DC   CL10'3665273648'\n          DC   CL10'3665932525'\n          DC   CL10'3673647154'\n          DC   CL10'3682736375'\n          DC   CL10'3694896336'\n          DC   CL10'3698845784'\n          DC   CL10'3704809623'\n          DC   CL10'3707569144'\n          DC   CL10'3708816466'\n          DC   CL10'3715241774'\n          DC   CL10'3737691656'\n          DC   CL10'3741778199'\n          DC   CL10'3755663894'\n          DC   CL10'3758750173'\n          DC   CL10'3772702776'\n          DC   CL10'3777461584'\n          DC   CL10'3787896571'\n          DC   CL10'3795936465'\n          DC   CL10'3801898777'\n          DC   CL10'3815888699'\n          DC   CL10'3825916938'\n          DC   CL10'3829666331'\n          DC   CL10'3830408962'\n          DC   CL10'3835275994'\n          DC   CL10'3839559432'\n          DC   CL10'3839616878'\n          DC   CL10'3842431364'\n          DC   CL10'3845774769'\n          DC   CL10'3871130565'\n          DC   CL10'3888423157'\n          DC   CL10'3889103631'\n          DC   CL10'3893656452'\n          DC   CL10'3893799393'\n          DC   CL10'3903243195'\n          DC   CL10'3912149423'\n          DC   CL10'3927724004'\n          DC   CL10'3930991335'\n          DC   CL10'3946441022'\n          DC   CL10'3951386821'\n          DC   CL10'3954741049'\n          DC   CL10'3968593246'\n          DC   CL10'3980200299'\n          DC   CL10'3994269823'\n          DC   CL10'4032829857'\n          DC   CL10'4041091177'\n          DC   CL10'4052483870'\n          DC   CL10'4054368798'\n          DC   CL10'4058524665'\n          DC   CL10'4082518764'\n          DC   CL10'4087244297'\n          DC   CL10'4109725090'\n          DC   CL10'4126998063'\n          DC   CL10'4141332115'\n          DC   CL10'4146105391'\n          DC   CL10'4165437910'\n          DC   CL10'4193813874'\n          DC   CL10'4213406110'\n          DC   CL10'4225518754'\n          DC   CL10'4233008317'\n          DC   CL10'4234405322'\n          DC   CL10'4245641000'\n          DC   CL10'4250573220'\n          DC   CL10'4255455557'\n          DC   CL10'4261367795'\n          DC   CL10'4278411030'\n          DC   CL10'4293029016'\n          DC   CL10'4304448398'\n          DC   CL10'4306179254'\n          DC   CL10'4332924734'\n          DC   CL10'4339308153'\n          DC   CL10'4341809837'\n          DC   CL10'4342046037'\n          DC   CL10'4354048918'\n          DC   CL10'4361475807'\n          DC   CL10'4361988925'\n          DC   CL10'4365677512'\n          DC   CL10'4365695641'\n          DC   CL10'4367068462'\n          DC   CL10'4374982729'\n          DC   CL10'4376019850'\n          DC   CL10'4382148265'\n          DC   CL10'4395321328'\n          DC   CL10'4399652566'\n          DC   CL10'4399889973'\n          DC   CL10'4403915745'\n          DC   CL10'4415227580'\n          DC   CL10'4420964547'\n          DC   CL10'4425250854'\n          DC   CL10'4440349726'\n          DC   CL10'4442600677'\n          DC   CL10'4446271569'\n          DC   CL10'4452119323'\n          DC   CL10'4455138672'\n          DC   CL10'4459585269'\n          DC   CL10'4480439106'\n          DC   CL10'4499203387'\n          DC   CL10'4501837884'\n          DC   CL10'4511944944'\n          DC   CL10'4515414182'\n          DC   CL10'4525397489'\n          DC   CL10'4531464162'\n          DC   CL10'4532128318'\n          DC   CL10'4539127550'\n          DC   CL10'4541806875'\n          DC   CL10'4542498305'\n          DC   CL10'4564553568'\n          DC   CL10'4571377709'\n          DC   CL10'4578912800'\n          DC   CL10'4606150105'\n          DC   CL10'4615307402'\n          DC   CL10'4676559607'\n          DC   CL10'4677868018'\n          DC   CL10'4691403480'\n          DC   CL10'4708979219'\n          DC   CL10'4711251680'\n          DC   CL10'4717926359'\n          DC   CL10'4718112570'\n          DC   CL10'4718828567'\n          DC   CL10'4722569401'\n          DC   CL10'4731985446'\n          DC   CL10'4733686614'\n          DC   CL10'4746081896'\n          DC   CL10'4760993077'\n          DC   CL10'4772569573'\n          DC   CL10'4775657044'\n          DC   CL10'4784105826'\n          DC   CL10'4788384767'\n          DC   CL10'4796208846'\n          DC   CL10'4807640041'\n          DC   CL10'4818917707'\n          DC   CL10'4825735132'\n          DC   CL10'4826671921'\n          DC   CL10'4834267841'\n          DC   CL10'4838670864'\n          DC   CL10'4840642324'\n          DC   CL10'4851436890'\n          DC   CL10'4868476778'\n          DC   CL10'4884001528'\n          DC   CL10'4894180366'\n          DC   CL10'4909094411'\n          DC   CL10'4924053684'\n          DC   CL10'4932226772'\n          DC   CL10'4963999866'\n          DC   CL10'4976581420'\n          DC   CL10'4988242159'\n          DC   CL10'4997957903'\n          DC   CL10'5001541312'\n          DC   CL10'5012943915'\n          DC   CL10'5022145245'\n          DC   CL10'5025088118'\n          DC   CL10'5031739843'\n          DC   CL10'5061464234'\n          DC   CL10'5062777099'\n          DC   CL10'5081606619'\n          DC   CL10'5085358271'\n          DC   CL10'5097340862'\n          DC   CL10'5131008598'\n          DC   CL10'5136707186'\n          DC   CL10'5137829773'\n          DC   CL10'5138392919'\n          DC   CL10'5141292181'\n          DC   CL10'5148786272'\n          DC   CL10'5167188055'\n          DC   CL10'5170458496'\n          DC   CL10'5171457235'\n          DC   CL10'5173509412'\n          DC   CL10'5175852258'\n          DC   CL10'5176912171'\n          DC   CL10'5184641688'\n          DC   CL10'5195953924'\n          DC   CL10'5201121972'\n          DC   CL10'5201791491'\n          DC   CL10'5212207442'\n          DC   CL10'5237405495'\n          DC   CL10'5241948690'\n          DC   CL10'5248438067'\n          DC   CL10'5264958561'\n          DC   CL10'5280097813'\n          DC   CL10'5297165057'\n          DC   CL10'5298755992'\n          DC   CL10'5300159981'\n          DC   CL10'5321710355'\n          DC   CL10'5337606906'\n          DC   CL10'5345334579'\n          DC   CL10'5371357959'\n          DC   CL10'5385074372'\n          DC   CL10'5395385796'\n          DC   CL10'5397272711'\n          DC   CL10'5401039694'\n          DC   CL10'5425916378'\n          DC   CL10'5431977508'\n          DC   CL10'5433720236'\n          DC   CL10'5442562396'\n          DC   CL10'5449773212'\n          DC   CL10'5456759873'\n          DC   CL10'5457552652'\n          DC   CL10'5475656321'\n          DC   CL10'5506681939'\n          DC   CL10'5508940292'\n          DC   CL10'5526397503'\n          DC   CL10'5534401507'\n          DC   CL10'5549481728'\n          DC   CL10'5558764121'\n          DC   CL10'5561094977'\n          DC   CL10'5563765185'\n          DC   CL10'5565101216'\n          DC   CL10'5572035250'\n          DC   CL10'5576869845'\n          DC   CL10'5591433733'\n          DC   CL10'5596327164'\n          DC   CL10'5614513448'\n          DC   CL10'5619387353'\n          DC   CL10'5621486760'\n          DC   CL10'5626236138'\n          DC   CL10'5627716670'\n          DC   CL10'5641763691'\n          DC   CL10'5642391145'\n          DC   CL10'5642531085'\n          DC   CL10'5643322010'\n          DC   CL10'5653365020'\n          DC   CL10'5663840721'\n          DC   CL10'5675001931'\n          DC   CL10'5675989559'\n          DC   CL10'5679881257'\n          DC   CL10'5701796697'\n          DC   CL10'5705291655'\n          DC   CL10'5707472066'\n          DC   CL10'5707681244'\n          DC   CL10'5725273168'\n          DC   CL10'5735000362'\n          DC   CL10'5744251794'\n          DC   CL10'5750582397'\n          DC   CL10'5764563450'\n          DC   CL10'5765477779'\n          DC   CL10'5768466287'\n          DC   CL10'5778297253'\n          DC   CL10'5781827937'\n          DC   CL10'5792681088'\n          DC   CL10'5823087664'\n          DC   CL10'5826049791'\n          DC   CL10'5852626081'\n          DC   CL10'5859069484'\n          DC   CL10'5871856400'\n          DC   CL10'5879594685'\n          DC   CL10'5923848700'\n          DC   CL10'5930920717'\n          DC   CL10'5939740534'\n          DC   CL10'5945977008'\n          DC   CL10'5953591351'\n          DC   CL10'5974120497'\n          DC   CL10'5980530023'\n          DC   CL10'5982500270'\n          DC   CL10'6013020304'\n          DC   CL10'6017590576'\n          DC   CL10'6027151395'\n          DC   CL10'6031477613'\n          DC   CL10'6034259879'\n          DC   CL10'6034977111'\n          DC   CL10'6038224205'\n          DC   CL10'6040047313'\n          DC   CL10'6042427892'\n          DC   CL10'6046911354'\n          DC   CL10'6055320835'\n          DC   CL10'6071816834'\n          DC   CL10'6076953748'\n          DC   CL10'6078781716'\n          DC   CL10'6089806179'\n          DC   CL10'6102241319'\n          DC   CL10'6111881741'\n          DC   CL10'6114026406'\n          DC   CL10'6131336255'\n          DC   CL10'6153092070'\n          DC   CL10'6176508218'\n          DC   CL10'6189589095'\n          DC   CL10'6195575064'\n          DC   CL10'6214334476'\n          DC   CL10'6214652858'\n          DC   CL10'6219336562'\n          DC   CL10'6274959967'\n          DC   CL10'6277765141'\n          DC   CL10'6291772134'\n          DC   CL10'6299003602'\n          DC   CL10'6301600736'\n          DC   CL10'6309461069'\n          DC   CL10'6316443356'\n          DC   CL10'6321644499'\n          DC   CL10'6340650247'\n          DC   CL10'6362585477'\n          DC   CL10'6378346611'\n          DC   CL10'6380603394'\n          DC   CL10'6392883433'\n          DC   CL10'6401696170'\n          DC   CL10'6405784661'\n          DC   CL10'6410072367'\n          DC   CL10'6419378045'\n          DC   CL10'6420659456'\n          DC   CL10'6423082237'\n          DC   CL10'6441887377'\n          DC   CL10'6491948418'\n          DC   CL10'6492977996'\n          DC   CL10'6526299792'\n          DC   CL10'6536513368'\n          DC   CL10'6565462961'\n          DC   CL10'6583467513'\n          DC   CL10'6610884504'\n          DC   CL10'6617160065'\n          DC   CL10'6619899880'\n          DC   CL10'6620218026'\n          DC   CL10'6632012192'\n          DC   CL10'6634201034'\n          DC   CL10'6640171757'\n          DC   CL10'6650685307'\n          DC   CL10'6656036861'\n          DC   CL10'6706822399'\n          DC   CL10'6708832431'\n          DC   CL10'6743900337'\n          DC   CL10'6744618021'\n          DC   CL10'6745219809'\n          DC   CL10'6750654554'\n          DC   CL10'6750835075'\n          DC   CL10'6758118765'\n          DC   CL10'6768877384'\n          DC   CL10'6788433333'\n          DC   CL10'6795597451'\n          DC   CL10'6819051409'\n          DC   CL10'6824188618'\n          DC   CL10'6829686930'\n          DC   CL10'6834837074'\n          DC   CL10'6837439723'\n          DC   CL10'6876599643'\n          DC   CL10'6879934131'\n          DC   CL10'6882383883'\n          DC   CL10'6906496238'\n          DC   CL10'6915994267'\n          DC   CL10'6941536678'\n          DC   CL10'6959831086'\n          DC   CL10'6980841188'\n          DC   CL10'6984337341'\n          DC   CL10'6999538714'\n          DC   CL10'7014869731'\n          DC   CL10'7020490806'\n          DC   CL10'7024630382'\n          DC   CL10'7025953068'\n          DC   CL10'7031389620'\n          DC   CL10'7039033783'\n          DC   CL10'7043099673'\n          DC   CL10'7059883683'\n          DC   CL10'7072494621'\n          DC   CL10'7078217222'\n          DC   CL10'7093977808'\n          DC   CL10'7138113868'\n          DC   CL10'7170701585'\n          DC   CL10'7175433348'\n          DC   CL10'7177468298'\n          DC   CL10'7191388279'\n          DC   CL10'7206997982'\n          DC   CL10'7211070860'\n          DC   CL10'7211151702'\n          DC   CL10'7221527032'\n          DC   CL10'7224666599'\n          DC   CL10'7228989035'\n          DC   CL10'7257486349'\n          DC   CL10'7260553248'\n          DC   CL10'7263703419'\n          DC   CL10'7278163786'\n          DC   CL10'7292854960'\n          DC   CL10'7295504370'\n          DC   CL10'7328744136'\n          DC   CL10'7341681867'\n          DC   CL10'7349775632'\n          DC   CL10'7360355280'\n          DC   CL10'7366688666'\n          DC   CL10'7378402421'\n          DC   CL10'7379753810'\n          DC   CL10'7385386989'\n          DC   CL10'7400995389'\n          DC   CL10'7403393048'\n          DC   CL10'7416875787'\n          DC   CL10'7419152479'\n          DC   CL10'7448619971'\n          DC   CL10'7457852404'\n          DC   CL10'7465038901'\n          DC   CL10'7473093184'\n          DC   CL10'7476835831'\n          DC   CL10'7479549097'\n          DC   CL10'7496108098'\n          DC   CL10'7524793289'\n          DC   CL10'7529154440'\n          DC   CL10'7537430309'\n          DC   CL10'7539954682'\n          DC   CL10'7540592790'\n          DC   CL10'7555744266'\n          DC   CL10'7591761928'\n          DC   CL10'7624869674'\n          DC   CL10'7627426114'\n          DC   CL10'7665518013'\n          DC   CL10'7667230087'\n          DC   CL10'7675776278'\n          DC   CL10'7679716679'\n          DC   CL10'7681142671'\n          DC   CL10'7681922140'\n          DC   CL10'7686790093'\n          DC   CL10'7686947369'\n          DC   CL10'7690923006'\n          DC   CL10'7699537531'\n          DC   CL10'7724354542'\n          DC   CL10'7726068392'\n          DC   CL10'7734167553'\n          DC   CL10'7743096849'\n          DC   CL10'7777348521'\n          DC   CL10'7783677062'\n          DC   CL10'7785283283'\n          DC   CL10'7789745740'\n          DC   CL10'7799100194'\n          DC   CL10'7805934460'\n          DC   CL10'7808769493'\n          DC   CL10'7817561428'\n          DC   CL10'7846276005'\n          DC   CL10'7848321487'\n          DC   CL10'7869520770'\n          DC   CL10'7876388204'\n          DC   CL10'7880707913'\n          DC   CL10'7896530724'\n          DC   CL10'7899381782'\n          DC   CL10'7952915161'\n          DC   CL10'7964352758'\n          DC   CL10'7968945590'\n          DC   CL10'7979475780'\n          DC   CL10'7996608718'\n          DC   CL10'8003680043'\n          DC   CL10'8006156056'\n          DC   CL10'8014572229'\n          DC   CL10'8027939593'\n          DC   CL10'8040889696'\n          DC   CL10'8041396877'\n          DC   CL10'8048427256'\n          DC   CL10'8074041252'\n          DC   CL10'8078001788'\n          DC   CL10'8081562472'\n          DC   CL10'8091838842'\n          DC   CL10'8091839855'\n          DC   CL10'8099335130'\n          DC   CL10'8118801689'\n          DC   CL10'8123221991'\n          DC   CL10'8127785251'\n          DC   CL10'8131002824'\n          DC   CL10'8133182954'\n          DC   CL10'8155628498'\n          DC   CL10'8162793635'\n          DC   CL10'8174979342'\n          DC   CL10'8176019027'\n          DC   CL10'8196379523'\n          DC   CL10'8198652458'\n          DC   CL10'8217281228'\n          DC   CL10'8234802647'\n          DC   CL10'8245886326'\n          DC   CL10'8250774014'\n          DC   CL10'8261864974'\n          DC   CL10'8266839060'\n          DC   CL10'8284252649'\n          DC   CL10'8284985610'\n          DC   CL10'8317518932'\n          DC   CL10'8318918560'\n          DC   CL10'8321123142'\n          DC   CL10'8326027594'\n          DC   CL10'8350371692'\n          DC   CL10'8363333191'\n          DC   CL10'8367220073'\n          DC   CL10'8372418425'\n          DC   CL10'8372701490'\n          DC   CL10'8373228818'\n          DC   CL10'8390001046'\n          DC   CL10'8392614976'\n          DC   CL10'8409030217'\n          DC   CL10'8422464137'\n          DC   CL10'8431528200'\n          DC   CL10'8441898124'\n          DC   CL10'8446793887'\n          DC   CL10'8455968518'\n          DC   CL10'8456810072'\n          DC   CL10'8459674825'\n          DC   CL10'8461533533'\n          DC   CL10'8474892202'\n          DC   CL10'8484739956'\n          DC   CL10'8501210340'\n          DC   CL10'8516432844'\n          DC   CL10'8532171439'\n          DC   CL10'8542248852'\n          DC   CL10'8554607545'\n          DC   CL10'8561872344'\n          DC   CL10'8570796738'\n          DC   CL10'8575481588'\n          DC   CL10'8582131225'\n          DC   CL10'8593413955'\n          DC   CL10'8605152358'\n          DC   CL10'8609761388'\n          DC   CL10'8615700059'\n          DC   CL10'8620256478'\n          DC   CL10'8632028785'\n          DC   CL10'8647956104'\n          DC   CL10'8653060920'\n          DC   CL10'8666619291'\n          DC   CL10'8677951242'\n          DC   CL10'8683917119'\n          DC   CL10'8685504552'\n          DC   CL10'8704495042'\n          DC   CL10'8706993147'\n          DC   CL10'8716714630'\n          DC   CL10'8719657413'\n          DC   CL10'8734136429'\n          DC   CL10'8742955537'\n          DC   CL10'8743127805'\n          DC   CL10'8747566951'\n          DC   CL10'8761075556'\n          DC   CL10'8771675995'\n          DC   CL10'8774372180'\n          DC   CL10'8775370196'\n          DC   CL10'8782023945'\n          DC   CL10'8800423169'\n          DC   CL10'8802348898'\n          DC   CL10'8803827781'\n          DC   CL10'8807543455'\n          DC   CL10'8815379839'\n          DC   CL10'8817930819'\n          DC   CL10'8824964249'\n          DC   CL10'8828773871'\n          DC   CL10'8836215227'\n          DC   CL10'8864169622'\n          DC   CL10'8888984259'\n          DC   CL10'8906179273'\n          DC   CL10'8912574126'\n          DC   CL10'8942152936'\n          DC   CL10'8951906361'\n          DC   CL10'8965891650'\n          DC   CL10'8969836178'\n          DC   CL10'8970320500'\n          DC   CL10'8970957201'\n          DC   CL10'8971292916'\n          DC   CL10'8972698172'\n          DC   CL10'8973826215'\n          DC   CL10'8977793548'\n          DC   CL10'8979968036'\n          DC   CL10'8986560851'\n          DC   CL10'8986613327'\n          DC   CL10'8990850471'\n          DC   CL10'8992443407'\n          DC   CL10'8996009174'\n          DC   CL10'9008293509'\n          DC   CL10'9020317555'\n          DC   CL10'9071539357'\n          DC   CL10'9078253445'\n          DC   CL10'9082725435'\n          DC   CL10'9142951241'\n          DC   CL10'9145381274'\n          DC   CL10'9159017410'\n          DC   CL10'9172277739'\n          DC   CL10'9188307050'\n          DC   CL10'9195709541'\n          DC   CL10'9216384444'\n          DC   CL10'9222373637'\n          DC   CL10'9225330314'\n          DC   CL10'9289664100'\n          DC   CL10'9315691904'\n          DC   CL10'9321130226'\n          DC   CL10'9334903211'\n          DC   CL10'9336349912'\n          DC   CL10'9342886112'\n          DC   CL10'9354071150'\n          DC   CL10'9378133933'\n          DC   CL10'9394383633'\n          DC   CL10'9411106082'\n          DC   CL10'9420163039'\n          DC   CL10'9425802615'\n          DC   CL10'9461157722'\n          DC   CL10'9469873148'\n          DC   CL10'9473843829'\n          DC   CL10'9477987603'\n          DC   CL10'9477994206'\n          DC   CL10'9481197146'\n          DC   CL10'9494810997'\n          DC   CL10'9497186417'\n          DC   CL10'9501170379'\n          DC   CL10'9503089882'\n          DC   CL10'9528779605'\n          DC   CL10'9530143232'\n          DC   CL10'9544350467'\n          DC   CL10'9557093720'\n          DC   CL10'9574480990'\n          DC   CL10'9576662885'\n          DC   CL10'9580332461'\n          DC   CL10'9580829481'\n          DC   CL10'9592186524'\n          DC   CL10'9597634183'\n          DC   CL10'9600087963'\n          DC   CL10'9617348080'\n          DC   CL10'9629518012'\n          DC   CL10'9637885520'\n          DC   CL10'9639982642'\n          DC   CL10'9650793422'\n          DC   CL10'9672913948'\n          DC   CL10'9690965116'\n          DC   CL10'9691804662'\n          DC   CL10'9694554596'\n          DC   CL10'9713710832'\n          DC   CL10'9728537463'\n          DC   CL10'9734751332'\n          DC   CL10'9749315054'\n          DC   CL10'9767784033'\n          DC   CL10'9773777703'\n          DC   CL10'9782229122'\n          DC   CL10'9792422084'\n          DC   CL10'9825592300'\n          DC   CL10'9850258624'\n          DC   CL10'9875426701'\n          DC   CL10'9883029293'\n          DC   CL10'9886176900'\n          DC   CL10'9911241979'\n          DC   CL10'9919451101'\n          DC   CL10'9924773051'\n          DC   CL10'9946619993'\n          DC   CL10'9967522275'\n          DC   CL10'9984956820'\n          DC   CL10'9987216646'\nLASTUN   EQU   *-10\n*\nTIMETBL  DC    1000F'0'            SEARCH TIMES\n*\nSEQSRCH1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'SEQUENTIAL SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R2,SRCHTBL\n         LA    R3,1000\nLOOP1    CLC   KEY,0(R2)\n         BE    SUCCESS\n         LA    R2,10(R2)\n         BCT   R3,LOOP1\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         L     R3,=A(TIMETBL)\n         LA    R2,1000\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'1000'         AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00052": {"ttr": 15875, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\x04\\x01\\x04\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 260, "newlines": 260, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QSEQSRCH ',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00052'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'QUICK SEQUENTIAL SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 OCT 1983 - CHARLES HOTTEL                                 *\n*        QUICK SEQUENTIAL SEARCH                                      *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGE 395                                        *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQSEQSRCH START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         LA    R7,TIMETBL          POINT TO TIME TABLE\n         LA    R6,16\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,3(R8)            NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nTIMETBL  DC    16F'0'              SEARCH TIMES\nKEY      DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nSRCHTBL  DC    CL3'061'\n         DC    CL3'087'\n         DC    CL3'154'\n         DC    CL3'170'\n         DC    CL3'275'\n         DC    CL3'426'\n         DC    CL3'503'\n         DC    CL3'509'\n         DC    CL3'512'\n         DC    CL3'612'\n         DC    CL3'653'\n         DC    CL3'677'\n         DC    CL3'703'\n         DC    CL3'765'\n         DC    CL3'897'\n         DC    CL3'908'\nLASTUN   EQU   *-3\nDUMMY    DC    X'FFFFFF'\n*\nSEQSRCH1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'QUICK SEQUENTIAL SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         MVC   DUMMY,KEY\n         LA    R2,SRCHTBL-3\nLOOP1    LA    R2,3(R2)\n         CLC   KEY,0(R2)\n         BNE   LOOP1\n         CL    R2,=A(DUMMY)\n         BNE   SUCCESS\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         LA    R3,TIMETBL\n         LA    R2,16\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'16'           AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00053": {"ttr": 15880, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x04\\xdf\\x04\\xdf\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1247, "newlines": 1247, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QSEQSRCH ',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00053'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'QUICK SEQUENTIAL SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 OCT 1983 - CHARLES HOTTEL                                 *\n*        QUICK SEQUENTIAL SEARCH                                      *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGE 395                                        *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQSEQSRCH START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         L     R7,=A(TIMETBL)      POINT TO TIME TABLE\n         LA    R6,1000\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,10(R8)           NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nKEY      DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nSRCHTBL   EQU  *\n          DC   CL10'0021777608'\n          DC   CL10'0027612669'\n          DC   CL10'0044709516'\n          DC   CL10'0063381812'\n          DC   CL10'0109127207'\n          DC   CL10'0110866296'\n          DC   CL10'0119215494'\n          DC   CL10'0124102660'\n          DC   CL10'0125735609'\n          DC   CL10'0129905505'\n          DC   CL10'0131160193'\n          DC   CL10'0159383950'\n          DC   CL10'0201923441'\n          DC   CL10'0213162155'\n          DC   CL10'0216719243'\n          DC   CL10'0217211427'\n          DC   CL10'0218026627'\n          DC   CL10'0241754751'\n          DC   CL10'0242199350'\n          DC   CL10'0243554165'\n          DC   CL10'0244567532'\n          DC   CL10'0246582414'\n          DC   CL10'0265668719'\n          DC   CL10'0269317263'\n          DC   CL10'0287224727'\n          DC   CL10'0295004946'\n          DC   CL10'0295810742'\n          DC   CL10'0298867763'\n          DC   CL10'0304818949'\n          DC   CL10'0333506667'\n          DC   CL10'0341973416'\n          DC   CL10'0342069814'\n          DC   CL10'0347745052'\n          DC   CL10'0350150475'\n          DC   CL10'0356352558'\n          DC   CL10'0374688198'\n          DC   CL10'0378208449'\n          DC   CL10'0383088094'\n          DC   CL10'0391251011'\n          DC   CL10'0397635966'\n          DC   CL10'0404123135'\n          DC   CL10'0407531659'\n          DC   CL10'0411859804'\n          DC   CL10'0415728203'\n          DC   CL10'0425389343'\n          DC   CL10'0430176038'\n          DC   CL10'0438108163'\n          DC   CL10'0438663301'\n          DC   CL10'0457377863'\n          DC   CL10'0470272897'\n          DC   CL10'0472398811'\n          DC   CL10'0483312294'\n          DC   CL10'0485448434'\n          DC   CL10'0495310799'\n          DC   CL10'0496791189'\n          DC   CL10'0510649893'\n          DC   CL10'0511433940'\n          DC   CL10'0511646625'\n          DC   CL10'0517639587'\n          DC   CL10'0518520315'\n          DC   CL10'0541991360'\n          DC   CL10'0544933583'\n          DC   CL10'0588657390'\n          DC   CL10'0612793626'\n          DC   CL10'0616034514'\n          DC   CL10'0622321914'\n          DC   CL10'0637516947'\n          DC   CL10'0647477320'\n          DC   CL10'0647777208'\n          DC   CL10'0661744102'\n          DC   CL10'0667273759'\n          DC   CL10'0670956338'\n          DC   CL10'0681335564'\n          DC   CL10'0686500629'\n          DC   CL10'0686700231'\n          DC   CL10'0714777108'\n          DC   CL10'0722588209'\n          DC   CL10'0743022964'\n          DC   CL10'0756256838'\n          DC   CL10'0804677453'\n          DC   CL10'0826611007'\n          DC   CL10'0847201640'\n          DC   CL10'0855215859'\n          DC   CL10'0857169190'\n          DC   CL10'0866220927'\n          DC   CL10'0869536638'\n          DC   CL10'0894127953'\n          DC   CL10'0894858606'\n          DC   CL10'0906281426'\n          DC   CL10'0907157687'\n          DC   CL10'0919922282'\n          DC   CL10'0928009527'\n          DC   CL10'0930832968'\n          DC   CL10'0932853941'\n          DC   CL10'0951309693'\n          DC   CL10'0967769107'\n          DC   CL10'0978045612'\n          DC   CL10'1004535486'\n          DC   CL10'1008725474'\n          DC   CL10'1009393768'\n          DC   CL10'1021634133'\n          DC   CL10'1026839376'\n          DC   CL10'1028796002'\n          DC   CL10'1034528113'\n          DC   CL10'1036074096'\n          DC   CL10'1036622827'\n          DC   CL10'1045950143'\n          DC   CL10'1047261909'\n          DC   CL10'1053803551'\n          DC   CL10'1055817303'\n          DC   CL10'1070588771'\n          DC   CL10'1090578040'\n          DC   CL10'1094183483'\n          DC   CL10'1102965965'\n          DC   CL10'1113496985'\n          DC   CL10'1124826024'\n          DC   CL10'1169066430'\n          DC   CL10'1170852922'\n          DC   CL10'1175414415'\n          DC   CL10'1175901510'\n          DC   CL10'1176047902'\n          DC   CL10'1182833385'\n          DC   CL10'1209852058'\n          DC   CL10'1229538482'\n          DC   CL10'1252476538'\n          DC   CL10'1262465755'\n          DC   CL10'1283649175'\n          DC   CL10'1293508166'\n          DC   CL10'1300971865'\n          DC   CL10'1309560725'\n          DC   CL10'1334447563'\n          DC   CL10'1343776836'\n          DC   CL10'1366017127'\n          DC   CL10'1406211586'\n          DC   CL10'1416503025'\n          DC   CL10'1428066942'\n          DC   CL10'1432942365'\n          DC   CL10'1444855750'\n          DC   CL10'1448433468'\n          DC   CL10'1448838730'\n          DC   CL10'1465609943'\n          DC   CL10'1469514872'\n          DC   CL10'1478252658'\n          DC   CL10'1481674017'\n          DC   CL10'1487783464'\n          DC   CL10'1493612746'\n          DC   CL10'1506827363'\n          DC   CL10'1510218230'\n          DC   CL10'1510752158'\n          DC   CL10'1515117817'\n          DC   CL10'1519007403'\n          DC   CL10'1520984600'\n          DC   CL10'1522697574'\n          DC   CL10'1527224381'\n          DC   CL10'1547170224'\n          DC   CL10'1553542330'\n          DC   CL10'1563502577'\n          DC   CL10'1567055502'\n          DC   CL10'1575299923'\n          DC   CL10'1599853705'\n          DC   CL10'1606377408'\n          DC   CL10'1608840747'\n          DC   CL10'1621991737'\n          DC   CL10'1630588698'\n          DC   CL10'1638250572'\n          DC   CL10'1654896952'\n          DC   CL10'1658768311'\n          DC   CL10'1659356334'\n          DC   CL10'1662932899'\n          DC   CL10'1669110221'\n          DC   CL10'1670254329'\n          DC   CL10'1680667485'\n          DC   CL10'1682953374'\n          DC   CL10'1683396492'\n          DC   CL10'1704233907'\n          DC   CL10'1718754999'\n          DC   CL10'1727381522'\n          DC   CL10'1730008644'\n          DC   CL10'1733029984'\n          DC   CL10'1737046676'\n          DC   CL10'1750507756'\n          DC   CL10'1759059386'\n          DC   CL10'1761684083'\n          DC   CL10'1767326447'\n          DC   CL10'1775777708'\n          DC   CL10'1776871076'\n          DC   CL10'1783737437'\n          DC   CL10'1796424079'\n          DC   CL10'1801389277'\n          DC   CL10'1807981546'\n          DC   CL10'1819296715'\n          DC   CL10'1823645616'\n          DC   CL10'1850521488'\n          DC   CL10'1869574749'\n          DC   CL10'1873888347'\n          DC   CL10'1877504009'\n          DC   CL10'1916989089'\n          DC   CL10'1918345822'\n          DC   CL10'1923132262'\n          DC   CL10'1926239473'\n          DC   CL10'1934646582'\n          DC   CL10'1946142617'\n          DC   CL10'1948521828'\n          DC   CL10'1954513695'\n          DC   CL10'1970220975'\n          DC   CL10'1977910306'\n          DC   CL10'1993801028'\n          DC   CL10'1994641628'\n          DC   CL10'2003724911'\n          DC   CL10'2005934797'\n          DC   CL10'2009368031'\n          DC   CL10'2023217125'\n          DC   CL10'2034099345'\n          DC   CL10'2038908934'\n          DC   CL10'2044061926'\n          DC   CL10'2059961681'\n          DC   CL10'2065592775'\n          DC   CL10'2072647459'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'2113148651'\n          DC   CL10'2128795604'\n          DC   CL10'2139096544'\n          DC   CL10'2141578675'\n          DC   CL10'2141727998'\n          DC   CL10'2144637213'\n          DC   CL10'2144977308'\n          DC   CL10'2163772156'\n          DC   CL10'2169298540'\n          DC   CL10'2177375639'\n          DC   CL10'2216813290'\n          DC   CL10'2222675501'\n          DC   CL10'2230174310'\n          DC   CL10'2231104325'\n          DC   CL10'2233677591'\n          DC   CL10'2252189346'\n          DC   CL10'2275690210'\n          DC   CL10'2284873668'\n          DC   CL10'2285848536'\n          DC   CL10'2286342506'\n          DC   CL10'2302069743'\n          DC   CL10'2307633383'\n          DC   CL10'2315437316'\n          DC   CL10'2338259443'\n          DC   CL10'2339574706'\n          DC   CL10'2355329543'\n          DC   CL10'2369764575'\n          DC   CL10'2376377908'\n          DC   CL10'2389120744'\n          DC   CL10'2396911987'\n          DC   CL10'2398938103'\n          DC   CL10'2400421895'\n          DC   CL10'2422232634'\n          DC   CL10'2425747753'\n          DC   CL10'2452295581'\n          DC   CL10'2453201288'\n          DC   CL10'2463397457'\n          DC   CL10'2488720988'\n          DC   CL10'2491407260'\n          DC   CL10'2512272436'\n          DC   CL10'2518972405'\n          DC   CL10'2524558876'\n          DC   CL10'2533023160'\n          DC   CL10'2544618053'\n          DC   CL10'2574915986'\n          DC   CL10'2584106197'\n          DC   CL10'2586698969'\n          DC   CL10'2587130549'\n          DC   CL10'2593365519'\n          DC   CL10'2601564517'\n          DC   CL10'2609800752'\n          DC   CL10'2612833848'\n          DC   CL10'2629152958'\n          DC   CL10'2657748187'\n          DC   CL10'2662116167'\n          DC   CL10'2679767239'\n          DC   CL10'2682008352'\n          DC   CL10'2685466240'\n          DC   CL10'2693983276'\n          DC   CL10'2695284092'\n          DC   CL10'2703499802'\n          DC   CL10'2722314424'\n          DC   CL10'2724557663'\n          DC   CL10'2726348003'\n          DC   CL10'2740708470'\n          DC   CL10'2756790530'\n          DC   CL10'2764666071'\n          DC   CL10'2807857653'\n          DC   CL10'2813767803'\n          DC   CL10'2816227704'\n          DC   CL10'2836247091'\n          DC   CL10'2836687970'\n          DC   CL10'2847713657'\n          DC   CL10'2863161645'\n          DC   CL10'2868240302'\n          DC   CL10'2882509469'\n          DC   CL10'2883441128'\n          DC   CL10'2884145001'\n          DC   CL10'2886269710'\n          DC   CL10'2890004371'\n          DC   CL10'2901437526'\n          DC   CL10'2908096078'\n          DC   CL10'2918179151'\n          DC   CL10'2924990815'\n          DC   CL10'2925865139'\n          DC   CL10'2943078847'\n          DC   CL10'2978879793'\n          DC   CL10'2979680261'\n          DC   CL10'2987837853'\n          DC   CL10'2989933983'\n          DC   CL10'3009924766'\n          DC   CL10'3010102732'\n          DC   CL10'3015620511'\n          DC   CL10'3020793152'\n          DC   CL10'3026659535'\n          DC   CL10'3032523980'\n          DC   CL10'3049097295'\n          DC   CL10'3077327176'\n          DC   CL10'3079859595'\n          DC   CL10'3081869339'\n          DC   CL10'3083893881'\n          DC   CL10'3090555978'\n          DC   CL10'3092155047'\n          DC   CL10'3092863149'\n          DC   CL10'3114643592'\n          DC   CL10'3133986654'\n          DC   CL10'3139779380'\n          DC   CL10'3152278214'\n          DC   CL10'3157858597'\n          DC   CL10'3184472762'\n          DC   CL10'3186535891'\n          DC   CL10'3199523856'\n          DC   CL10'3232136869'\n          DC   CL10'3246054935'\n          DC   CL10'3248183233'\n          DC   CL10'3256786735'\n          DC   CL10'3262132801'\n          DC   CL10'3269783286'\n          DC   CL10'3277199285'\n          DC   CL10'3295843454'\n          DC   CL10'3297999589'\n          DC   CL10'3319616438'\n          DC   CL10'3325756816'\n          DC   CL10'3327808029'\n          DC   CL10'3338981601'\n          DC   CL10'3344508515'\n          DC   CL10'3345279264'\n          DC   CL10'3353162830'\n          DC   CL10'3358601905'\n          DC   CL10'3364087686'\n          DC   CL10'3367090129'\n          DC   CL10'3385869120'\n          DC   CL10'3387803789'\n          DC   CL10'3402810761'\n          DC   CL10'3410613712'\n          DC   CL10'3415624636'\n          DC   CL10'3416289223'\n          DC   CL10'3425687957'\n          DC   CL10'3428793268'\n          DC   CL10'3430673539'\n          DC   CL10'3452683833'\n          DC   CL10'3463687713'\n          DC   CL10'3496725929'\n          DC   CL10'3505005889'\n          DC   CL10'3531089061'\n          DC   CL10'3544489840'\n          DC   CL10'3548439886'\n          DC   CL10'3566158281'\n          DC   CL10'3578295917'\n          DC   CL10'3606218529'\n          DC   CL10'3609960123'\n          DC   CL10'3621038015'\n          DC   CL10'3625252117'\n          DC   CL10'3627055019'\n          DC   CL10'3635946109'\n          DC   CL10'3655561888'\n          DC   CL10'3658796578'\n          DC   CL10'3665273648'\n          DC   CL10'3665932525'\n          DC   CL10'3673647154'\n          DC   CL10'3682736375'\n          DC   CL10'3694896336'\n          DC   CL10'3698845784'\n          DC   CL10'3704809623'\n          DC   CL10'3707569144'\n          DC   CL10'3708816466'\n          DC   CL10'3715241774'\n          DC   CL10'3737691656'\n          DC   CL10'3741778199'\n          DC   CL10'3755663894'\n          DC   CL10'3758750173'\n          DC   CL10'3772702776'\n          DC   CL10'3777461584'\n          DC   CL10'3787896571'\n          DC   CL10'3795936465'\n          DC   CL10'3801898777'\n          DC   CL10'3815888699'\n          DC   CL10'3825916938'\n          DC   CL10'3829666331'\n          DC   CL10'3830408962'\n          DC   CL10'3835275994'\n          DC   CL10'3839559432'\n          DC   CL10'3839616878'\n          DC   CL10'3842431364'\n          DC   CL10'3845774769'\n          DC   CL10'3871130565'\n          DC   CL10'3888423157'\n          DC   CL10'3889103631'\n          DC   CL10'3893656452'\n          DC   CL10'3893799393'\n          DC   CL10'3903243195'\n          DC   CL10'3912149423'\n          DC   CL10'3927724004'\n          DC   CL10'3930991335'\n          DC   CL10'3946441022'\n          DC   CL10'3951386821'\n          DC   CL10'3954741049'\n          DC   CL10'3968593246'\n          DC   CL10'3980200299'\n          DC   CL10'3994269823'\n          DC   CL10'4032829857'\n          DC   CL10'4041091177'\n          DC   CL10'4052483870'\n          DC   CL10'4054368798'\n          DC   CL10'4058524665'\n          DC   CL10'4082518764'\n          DC   CL10'4087244297'\n          DC   CL10'4109725090'\n          DC   CL10'4126998063'\n          DC   CL10'4141332115'\n          DC   CL10'4146105391'\n          DC   CL10'4165437910'\n          DC   CL10'4193813874'\n          DC   CL10'4213406110'\n          DC   CL10'4225518754'\n          DC   CL10'4233008317'\n          DC   CL10'4234405322'\n          DC   CL10'4245641000'\n          DC   CL10'4250573220'\n          DC   CL10'4255455557'\n          DC   CL10'4261367795'\n          DC   CL10'4278411030'\n          DC   CL10'4293029016'\n          DC   CL10'4304448398'\n          DC   CL10'4306179254'\n          DC   CL10'4332924734'\n          DC   CL10'4339308153'\n          DC   CL10'4341809837'\n          DC   CL10'4342046037'\n          DC   CL10'4354048918'\n          DC   CL10'4361475807'\n          DC   CL10'4361988925'\n          DC   CL10'4365677512'\n          DC   CL10'4365695641'\n          DC   CL10'4367068462'\n          DC   CL10'4374982729'\n          DC   CL10'4376019850'\n          DC   CL10'4382148265'\n          DC   CL10'4395321328'\n          DC   CL10'4399652566'\n          DC   CL10'4399889973'\n          DC   CL10'4403915745'\n          DC   CL10'4415227580'\n          DC   CL10'4420964547'\n          DC   CL10'4425250854'\n          DC   CL10'4440349726'\n          DC   CL10'4442600677'\n          DC   CL10'4446271569'\n          DC   CL10'4452119323'\n          DC   CL10'4455138672'\n          DC   CL10'4459585269'\n          DC   CL10'4480439106'\n          DC   CL10'4499203387'\n          DC   CL10'4501837884'\n          DC   CL10'4511944944'\n          DC   CL10'4515414182'\n          DC   CL10'4525397489'\n          DC   CL10'4531464162'\n          DC   CL10'4532128318'\n          DC   CL10'4539127550'\n          DC   CL10'4541806875'\n          DC   CL10'4542498305'\n          DC   CL10'4564553568'\n          DC   CL10'4571377709'\n          DC   CL10'4578912800'\n          DC   CL10'4606150105'\n          DC   CL10'4615307402'\n          DC   CL10'4676559607'\n          DC   CL10'4677868018'\n          DC   CL10'4691403480'\n          DC   CL10'4708979219'\n          DC   CL10'4711251680'\n          DC   CL10'4717926359'\n          DC   CL10'4718112570'\n          DC   CL10'4718828567'\n          DC   CL10'4722569401'\n          DC   CL10'4731985446'\n          DC   CL10'4733686614'\n          DC   CL10'4746081896'\n          DC   CL10'4760993077'\n          DC   CL10'4772569573'\n          DC   CL10'4775657044'\n          DC   CL10'4784105826'\n          DC   CL10'4788384767'\n          DC   CL10'4796208846'\n          DC   CL10'4807640041'\n          DC   CL10'4818917707'\n          DC   CL10'4825735132'\n          DC   CL10'4826671921'\n          DC   CL10'4834267841'\n          DC   CL10'4838670864'\n          DC   CL10'4840642324'\n          DC   CL10'4851436890'\n          DC   CL10'4868476778'\n          DC   CL10'4884001528'\n          DC   CL10'4894180366'\n          DC   CL10'4909094411'\n          DC   CL10'4924053684'\n          DC   CL10'4932226772'\n          DC   CL10'4963999866'\n          DC   CL10'4976581420'\n          DC   CL10'4988242159'\n          DC   CL10'4997957903'\n          DC   CL10'5001541312'\n          DC   CL10'5012943915'\n          DC   CL10'5022145245'\n          DC   CL10'5025088118'\n          DC   CL10'5031739843'\n          DC   CL10'5061464234'\n          DC   CL10'5062777099'\n          DC   CL10'5081606619'\n          DC   CL10'5085358271'\n          DC   CL10'5097340862'\n          DC   CL10'5131008598'\n          DC   CL10'5136707186'\n          DC   CL10'5137829773'\n          DC   CL10'5138392919'\n          DC   CL10'5141292181'\n          DC   CL10'5148786272'\n          DC   CL10'5167188055'\n          DC   CL10'5170458496'\n          DC   CL10'5171457235'\n          DC   CL10'5173509412'\n          DC   CL10'5175852258'\n          DC   CL10'5176912171'\n          DC   CL10'5184641688'\n          DC   CL10'5195953924'\n          DC   CL10'5201121972'\n          DC   CL10'5201791491'\n          DC   CL10'5212207442'\n          DC   CL10'5237405495'\n          DC   CL10'5241948690'\n          DC   CL10'5248438067'\n          DC   CL10'5264958561'\n          DC   CL10'5280097813'\n          DC   CL10'5297165057'\n          DC   CL10'5298755992'\n          DC   CL10'5300159981'\n          DC   CL10'5321710355'\n          DC   CL10'5337606906'\n          DC   CL10'5345334579'\n          DC   CL10'5371357959'\n          DC   CL10'5385074372'\n          DC   CL10'5395385796'\n          DC   CL10'5397272711'\n          DC   CL10'5401039694'\n          DC   CL10'5425916378'\n          DC   CL10'5431977508'\n          DC   CL10'5433720236'\n          DC   CL10'5442562396'\n          DC   CL10'5449773212'\n          DC   CL10'5456759873'\n          DC   CL10'5457552652'\n          DC   CL10'5475656321'\n          DC   CL10'5506681939'\n          DC   CL10'5508940292'\n          DC   CL10'5526397503'\n          DC   CL10'5534401507'\n          DC   CL10'5549481728'\n          DC   CL10'5558764121'\n          DC   CL10'5561094977'\n          DC   CL10'5563765185'\n          DC   CL10'5565101216'\n          DC   CL10'5572035250'\n          DC   CL10'5576869845'\n          DC   CL10'5591433733'\n          DC   CL10'5596327164'\n          DC   CL10'5614513448'\n          DC   CL10'5619387353'\n          DC   CL10'5621486760'\n          DC   CL10'5626236138'\n          DC   CL10'5627716670'\n          DC   CL10'5641763691'\n          DC   CL10'5642391145'\n          DC   CL10'5642531085'\n          DC   CL10'5643322010'\n          DC   CL10'5653365020'\n          DC   CL10'5663840721'\n          DC   CL10'5675001931'\n          DC   CL10'5675989559'\n          DC   CL10'5679881257'\n          DC   CL10'5701796697'\n          DC   CL10'5705291655'\n          DC   CL10'5707472066'\n          DC   CL10'5707681244'\n          DC   CL10'5725273168'\n          DC   CL10'5735000362'\n          DC   CL10'5744251794'\n          DC   CL10'5750582397'\n          DC   CL10'5764563450'\n          DC   CL10'5765477779'\n          DC   CL10'5768466287'\n          DC   CL10'5778297253'\n          DC   CL10'5781827937'\n          DC   CL10'5792681088'\n          DC   CL10'5823087664'\n          DC   CL10'5826049791'\n          DC   CL10'5852626081'\n          DC   CL10'5859069484'\n          DC   CL10'5871856400'\n          DC   CL10'5879594685'\n          DC   CL10'5923848700'\n          DC   CL10'5930920717'\n          DC   CL10'5939740534'\n          DC   CL10'5945977008'\n          DC   CL10'5953591351'\n          DC   CL10'5974120497'\n          DC   CL10'5980530023'\n          DC   CL10'5982500270'\n          DC   CL10'6013020304'\n          DC   CL10'6017590576'\n          DC   CL10'6027151395'\n          DC   CL10'6031477613'\n          DC   CL10'6034259879'\n          DC   CL10'6034977111'\n          DC   CL10'6038224205'\n          DC   CL10'6040047313'\n          DC   CL10'6042427892'\n          DC   CL10'6046911354'\n          DC   CL10'6055320835'\n          DC   CL10'6071816834'\n          DC   CL10'6076953748'\n          DC   CL10'6078781716'\n          DC   CL10'6089806179'\n          DC   CL10'6102241319'\n          DC   CL10'6111881741'\n          DC   CL10'6114026406'\n          DC   CL10'6131336255'\n          DC   CL10'6153092070'\n          DC   CL10'6176508218'\n          DC   CL10'6189589095'\n          DC   CL10'6195575064'\n          DC   CL10'6214334476'\n          DC   CL10'6214652858'\n          DC   CL10'6219336562'\n          DC   CL10'6274959967'\n          DC   CL10'6277765141'\n          DC   CL10'6291772134'\n          DC   CL10'6299003602'\n          DC   CL10'6301600736'\n          DC   CL10'6309461069'\n          DC   CL10'6316443356'\n          DC   CL10'6321644499'\n          DC   CL10'6340650247'\n          DC   CL10'6362585477'\n          DC   CL10'6378346611'\n          DC   CL10'6380603394'\n          DC   CL10'6392883433'\n          DC   CL10'6401696170'\n          DC   CL10'6405784661'\n          DC   CL10'6410072367'\n          DC   CL10'6419378045'\n          DC   CL10'6420659456'\n          DC   CL10'6423082237'\n          DC   CL10'6441887377'\n          DC   CL10'6491948418'\n          DC   CL10'6492977996'\n          DC   CL10'6526299792'\n          DC   CL10'6536513368'\n          DC   CL10'6565462961'\n          DC   CL10'6583467513'\n          DC   CL10'6610884504'\n          DC   CL10'6617160065'\n          DC   CL10'6619899880'\n          DC   CL10'6620218026'\n          DC   CL10'6632012192'\n          DC   CL10'6634201034'\n          DC   CL10'6640171757'\n          DC   CL10'6650685307'\n          DC   CL10'6656036861'\n          DC   CL10'6706822399'\n          DC   CL10'6708832431'\n          DC   CL10'6743900337'\n          DC   CL10'6744618021'\n          DC   CL10'6745219809'\n          DC   CL10'6750654554'\n          DC   CL10'6750835075'\n          DC   CL10'6758118765'\n          DC   CL10'6768877384'\n          DC   CL10'6788433333'\n          DC   CL10'6795597451'\n          DC   CL10'6819051409'\n          DC   CL10'6824188618'\n          DC   CL10'6829686930'\n          DC   CL10'6834837074'\n          DC   CL10'6837439723'\n          DC   CL10'6876599643'\n          DC   CL10'6879934131'\n          DC   CL10'6882383883'\n          DC   CL10'6906496238'\n          DC   CL10'6915994267'\n          DC   CL10'6941536678'\n          DC   CL10'6959831086'\n          DC   CL10'6980841188'\n          DC   CL10'6984337341'\n          DC   CL10'6999538714'\n          DC   CL10'7014869731'\n          DC   CL10'7020490806'\n          DC   CL10'7024630382'\n          DC   CL10'7025953068'\n          DC   CL10'7031389620'\n          DC   CL10'7039033783'\n          DC   CL10'7043099673'\n          DC   CL10'7059883683'\n          DC   CL10'7072494621'\n          DC   CL10'7078217222'\n          DC   CL10'7093977808'\n          DC   CL10'7138113868'\n          DC   CL10'7170701585'\n          DC   CL10'7175433348'\n          DC   CL10'7177468298'\n          DC   CL10'7191388279'\n          DC   CL10'7206997982'\n          DC   CL10'7211070860'\n          DC   CL10'7211151702'\n          DC   CL10'7221527032'\n          DC   CL10'7224666599'\n          DC   CL10'7228989035'\n          DC   CL10'7257486349'\n          DC   CL10'7260553248'\n          DC   CL10'7263703419'\n          DC   CL10'7278163786'\n          DC   CL10'7292854960'\n          DC   CL10'7295504370'\n          DC   CL10'7328744136'\n          DC   CL10'7341681867'\n          DC   CL10'7349775632'\n          DC   CL10'7360355280'\n          DC   CL10'7366688666'\n          DC   CL10'7378402421'\n          DC   CL10'7379753810'\n          DC   CL10'7385386989'\n          DC   CL10'7400995389'\n          DC   CL10'7403393048'\n          DC   CL10'7416875787'\n          DC   CL10'7419152479'\n          DC   CL10'7448619971'\n          DC   CL10'7457852404'\n          DC   CL10'7465038901'\n          DC   CL10'7473093184'\n          DC   CL10'7476835831'\n          DC   CL10'7479549097'\n          DC   CL10'7496108098'\n          DC   CL10'7524793289'\n          DC   CL10'7529154440'\n          DC   CL10'7537430309'\n          DC   CL10'7539954682'\n          DC   CL10'7540592790'\n          DC   CL10'7555744266'\n          DC   CL10'7591761928'\n          DC   CL10'7624869674'\n          DC   CL10'7627426114'\n          DC   CL10'7665518013'\n          DC   CL10'7667230087'\n          DC   CL10'7675776278'\n          DC   CL10'7679716679'\n          DC   CL10'7681142671'\n          DC   CL10'7681922140'\n          DC   CL10'7686790093'\n          DC   CL10'7686947369'\n          DC   CL10'7690923006'\n          DC   CL10'7699537531'\n          DC   CL10'7724354542'\n          DC   CL10'7726068392'\n          DC   CL10'7734167553'\n          DC   CL10'7743096849'\n          DC   CL10'7777348521'\n          DC   CL10'7783677062'\n          DC   CL10'7785283283'\n          DC   CL10'7789745740'\n          DC   CL10'7799100194'\n          DC   CL10'7805934460'\n          DC   CL10'7808769493'\n          DC   CL10'7817561428'\n          DC   CL10'7846276005'\n          DC   CL10'7848321487'\n          DC   CL10'7869520770'\n          DC   CL10'7876388204'\n          DC   CL10'7880707913'\n          DC   CL10'7896530724'\n          DC   CL10'7899381782'\n          DC   CL10'7952915161'\n          DC   CL10'7964352758'\n          DC   CL10'7968945590'\n          DC   CL10'7979475780'\n          DC   CL10'7996608718'\n          DC   CL10'8003680043'\n          DC   CL10'8006156056'\n          DC   CL10'8014572229'\n          DC   CL10'8027939593'\n          DC   CL10'8040889696'\n          DC   CL10'8041396877'\n          DC   CL10'8048427256'\n          DC   CL10'8074041252'\n          DC   CL10'8078001788'\n          DC   CL10'8081562472'\n          DC   CL10'8091838842'\n          DC   CL10'8091839855'\n          DC   CL10'8099335130'\n          DC   CL10'8118801689'\n          DC   CL10'8123221991'\n          DC   CL10'8127785251'\n          DC   CL10'8131002824'\n          DC   CL10'8133182954'\n          DC   CL10'8155628498'\n          DC   CL10'8162793635'\n          DC   CL10'8174979342'\n          DC   CL10'8176019027'\n          DC   CL10'8196379523'\n          DC   CL10'8198652458'\n          DC   CL10'8217281228'\n          DC   CL10'8234802647'\n          DC   CL10'8245886326'\n          DC   CL10'8250774014'\n          DC   CL10'8261864974'\n          DC   CL10'8266839060'\n          DC   CL10'8284252649'\n          DC   CL10'8284985610'\n          DC   CL10'8317518932'\n          DC   CL10'8318918560'\n          DC   CL10'8321123142'\n          DC   CL10'8326027594'\n          DC   CL10'8350371692'\n          DC   CL10'8363333191'\n          DC   CL10'8367220073'\n          DC   CL10'8372418425'\n          DC   CL10'8372701490'\n          DC   CL10'8373228818'\n          DC   CL10'8390001046'\n          DC   CL10'8392614976'\n          DC   CL10'8409030217'\n          DC   CL10'8422464137'\n          DC   CL10'8431528200'\n          DC   CL10'8441898124'\n          DC   CL10'8446793887'\n          DC   CL10'8455968518'\n          DC   CL10'8456810072'\n          DC   CL10'8459674825'\n          DC   CL10'8461533533'\n          DC   CL10'8474892202'\n          DC   CL10'8484739956'\n          DC   CL10'8501210340'\n          DC   CL10'8516432844'\n          DC   CL10'8532171439'\n          DC   CL10'8542248852'\n          DC   CL10'8554607545'\n          DC   CL10'8561872344'\n          DC   CL10'8570796738'\n          DC   CL10'8575481588'\n          DC   CL10'8582131225'\n          DC   CL10'8593413955'\n          DC   CL10'8605152358'\n          DC   CL10'8609761388'\n          DC   CL10'8615700059'\n          DC   CL10'8620256478'\n          DC   CL10'8632028785'\n          DC   CL10'8647956104'\n          DC   CL10'8653060920'\n          DC   CL10'8666619291'\n          DC   CL10'8677951242'\n          DC   CL10'8683917119'\n          DC   CL10'8685504552'\n          DC   CL10'8704495042'\n          DC   CL10'8706993147'\n          DC   CL10'8716714630'\n          DC   CL10'8719657413'\n          DC   CL10'8734136429'\n          DC   CL10'8742955537'\n          DC   CL10'8743127805'\n          DC   CL10'8747566951'\n          DC   CL10'8761075556'\n          DC   CL10'8771675995'\n          DC   CL10'8774372180'\n          DC   CL10'8775370196'\n          DC   CL10'8782023945'\n          DC   CL10'8800423169'\n          DC   CL10'8802348898'\n          DC   CL10'8803827781'\n          DC   CL10'8807543455'\n          DC   CL10'8815379839'\n          DC   CL10'8817930819'\n          DC   CL10'8824964249'\n          DC   CL10'8828773871'\n          DC   CL10'8836215227'\n          DC   CL10'8864169622'\n          DC   CL10'8888984259'\n          DC   CL10'8906179273'\n          DC   CL10'8912574126'\n          DC   CL10'8942152936'\n          DC   CL10'8951906361'\n          DC   CL10'8965891650'\n          DC   CL10'8969836178'\n          DC   CL10'8970320500'\n          DC   CL10'8970957201'\n          DC   CL10'8971292916'\n          DC   CL10'8972698172'\n          DC   CL10'8973826215'\n          DC   CL10'8977793548'\n          DC   CL10'8979968036'\n          DC   CL10'8986560851'\n          DC   CL10'8986613327'\n          DC   CL10'8990850471'\n          DC   CL10'8992443407'\n          DC   CL10'8996009174'\n          DC   CL10'9008293509'\n          DC   CL10'9020317555'\n          DC   CL10'9071539357'\n          DC   CL10'9078253445'\n          DC   CL10'9082725435'\n          DC   CL10'9142951241'\n          DC   CL10'9145381274'\n          DC   CL10'9159017410'\n          DC   CL10'9172277739'\n          DC   CL10'9188307050'\n          DC   CL10'9195709541'\n          DC   CL10'9216384444'\n          DC   CL10'9222373637'\n          DC   CL10'9225330314'\n          DC   CL10'9289664100'\n          DC   CL10'9315691904'\n          DC   CL10'9321130226'\n          DC   CL10'9334903211'\n          DC   CL10'9336349912'\n          DC   CL10'9342886112'\n          DC   CL10'9354071150'\n          DC   CL10'9378133933'\n          DC   CL10'9394383633'\n          DC   CL10'9411106082'\n          DC   CL10'9420163039'\n          DC   CL10'9425802615'\n          DC   CL10'9461157722'\n          DC   CL10'9469873148'\n          DC   CL10'9473843829'\n          DC   CL10'9477987603'\n          DC   CL10'9477994206'\n          DC   CL10'9481197146'\n          DC   CL10'9494810997'\n          DC   CL10'9497186417'\n          DC   CL10'9501170379'\n          DC   CL10'9503089882'\n          DC   CL10'9528779605'\n          DC   CL10'9530143232'\n          DC   CL10'9544350467'\n          DC   CL10'9557093720'\n          DC   CL10'9574480990'\n          DC   CL10'9576662885'\n          DC   CL10'9580332461'\n          DC   CL10'9580829481'\n          DC   CL10'9592186524'\n          DC   CL10'9597634183'\n          DC   CL10'9600087963'\n          DC   CL10'9617348080'\n          DC   CL10'9629518012'\n          DC   CL10'9637885520'\n          DC   CL10'9639982642'\n          DC   CL10'9650793422'\n          DC   CL10'9672913948'\n          DC   CL10'9690965116'\n          DC   CL10'9691804662'\n          DC   CL10'9694554596'\n          DC   CL10'9713710832'\n          DC   CL10'9728537463'\n          DC   CL10'9734751332'\n          DC   CL10'9749315054'\n          DC   CL10'9767784033'\n          DC   CL10'9773777703'\n          DC   CL10'9782229122'\n          DC   CL10'9792422084'\n          DC   CL10'9825592300'\n          DC   CL10'9850258624'\n          DC   CL10'9875426701'\n          DC   CL10'9883029293'\n          DC   CL10'9886176900'\n          DC   CL10'9911241979'\n          DC   CL10'9919451101'\n          DC   CL10'9924773051'\n          DC   CL10'9946619993'\n          DC   CL10'9967522275'\n          DC   CL10'9984956820'\n          DC   CL10'9987216646'\nLASTUN   EQU   *-10\nDUMMY     DC   XL10'FFFFFFFFFFFFFFFFFFFF'\n*\nTIMETBL  DC    1000F'0'            SEARCH TIMES\n*\nSEQSRCH1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'QUICK SEQUENTIAL SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         L     R1,=A(DUMMY)\n         MVC   0(10,R1),KEY\n         LA    R2,SRCHTBL-10\nLOOP1    LA    R2,10(R2)\n         CLC   KEY,0(R2)\n         BNE   LOOP1\n         CL    R2,=A(DUMMY)\n         BNE   SUCCESS\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         L     R3,=A(TIMETBL)\n         LA    R2,1000\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'1000'         AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00054": {"ttr": 16391, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\x02\\x01\\x02\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 258, "newlines": 258, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QSEQSRCH ',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00054'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'QUICKER SEQUENTIAL SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 OCT 1983 - CHARLES HOTTEL                                 *\n*        QUICKER SEQUENTIAL SEARCH                                    *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGE 395                                        *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQSEQSRCH START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         LA    R7,TIMETBL          POINT TO TIME TABLE\n         LA    R6,16\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,3(R8)            NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nTIMETBL  DC    16F'0'              SEARCH TIMES\nKEY      DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nSRCHTBL  DC    CL3'061'\n         DC    CL3'087'\n         DC    CL3'154'\n         DC    CL3'170'\n         DC    CL3'275'\n         DC    CL3'426'\n         DC    CL3'503'\n         DC    CL3'509'\n         DC    CL3'512'\n         DC    CL3'612'\n         DC    CL3'653'\n         DC    CL3'677'\n         DC    CL3'703'\n         DC    CL3'765'\n         DC    CL3'897'\n         DC    CL3'908'\nLASTUN   EQU   *-3\nDUMMY    DC    X'FFFFFF'\n*\nSEQSRCH1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'QUICKER SEQUENTIAL SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R2,SRCHTBL\nLOOP1    CLC   KEY,0(R2)\n         BE    SUCCESS\n         BNH   FAIL\n         LA    R2,3(R2)\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         LA    R3,TIMETBL\n         LA    R2,16\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'16'           AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00055": {"ttr": 16641, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x04\\xdd\\x04\\xdd\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1245, "newlines": 1245, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL QSEQSRCH ',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00055'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'QUICKER SEQUENTIAL SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        17 OCT 1983 - CHARLES HOTTEL                                 *\n*        QUICKER SEQUENTIAL SEARCH                                    *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGE 395                                        *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nQSEQSRCH START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         L     R7,=A(TIMETBL)      POINT TO TIME TABLE\n         LA    R6,1000\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,10(R8)           NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nKEY      DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nSRCHTBL   EQU  *\n          DC   CL10'0021777608'\n          DC   CL10'0027612669'\n          DC   CL10'0044709516'\n          DC   CL10'0063381812'\n          DC   CL10'0109127207'\n          DC   CL10'0110866296'\n          DC   CL10'0119215494'\n          DC   CL10'0124102660'\n          DC   CL10'0125735609'\n          DC   CL10'0129905505'\n          DC   CL10'0131160193'\n          DC   CL10'0159383950'\n          DC   CL10'0201923441'\n          DC   CL10'0213162155'\n          DC   CL10'0216719243'\n          DC   CL10'0217211427'\n          DC   CL10'0218026627'\n          DC   CL10'0241754751'\n          DC   CL10'0242199350'\n          DC   CL10'0243554165'\n          DC   CL10'0244567532'\n          DC   CL10'0246582414'\n          DC   CL10'0265668719'\n          DC   CL10'0269317263'\n          DC   CL10'0287224727'\n          DC   CL10'0295004946'\n          DC   CL10'0295810742'\n          DC   CL10'0298867763'\n          DC   CL10'0304818949'\n          DC   CL10'0333506667'\n          DC   CL10'0341973416'\n          DC   CL10'0342069814'\n          DC   CL10'0347745052'\n          DC   CL10'0350150475'\n          DC   CL10'0356352558'\n          DC   CL10'0374688198'\n          DC   CL10'0378208449'\n          DC   CL10'0383088094'\n          DC   CL10'0391251011'\n          DC   CL10'0397635966'\n          DC   CL10'0404123135'\n          DC   CL10'0407531659'\n          DC   CL10'0411859804'\n          DC   CL10'0415728203'\n          DC   CL10'0425389343'\n          DC   CL10'0430176038'\n          DC   CL10'0438108163'\n          DC   CL10'0438663301'\n          DC   CL10'0457377863'\n          DC   CL10'0470272897'\n          DC   CL10'0472398811'\n          DC   CL10'0483312294'\n          DC   CL10'0485448434'\n          DC   CL10'0495310799'\n          DC   CL10'0496791189'\n          DC   CL10'0510649893'\n          DC   CL10'0511433940'\n          DC   CL10'0511646625'\n          DC   CL10'0517639587'\n          DC   CL10'0518520315'\n          DC   CL10'0541991360'\n          DC   CL10'0544933583'\n          DC   CL10'0588657390'\n          DC   CL10'0612793626'\n          DC   CL10'0616034514'\n          DC   CL10'0622321914'\n          DC   CL10'0637516947'\n          DC   CL10'0647477320'\n          DC   CL10'0647777208'\n          DC   CL10'0661744102'\n          DC   CL10'0667273759'\n          DC   CL10'0670956338'\n          DC   CL10'0681335564'\n          DC   CL10'0686500629'\n          DC   CL10'0686700231'\n          DC   CL10'0714777108'\n          DC   CL10'0722588209'\n          DC   CL10'0743022964'\n          DC   CL10'0756256838'\n          DC   CL10'0804677453'\n          DC   CL10'0826611007'\n          DC   CL10'0847201640'\n          DC   CL10'0855215859'\n          DC   CL10'0857169190'\n          DC   CL10'0866220927'\n          DC   CL10'0869536638'\n          DC   CL10'0894127953'\n          DC   CL10'0894858606'\n          DC   CL10'0906281426'\n          DC   CL10'0907157687'\n          DC   CL10'0919922282'\n          DC   CL10'0928009527'\n          DC   CL10'0930832968'\n          DC   CL10'0932853941'\n          DC   CL10'0951309693'\n          DC   CL10'0967769107'\n          DC   CL10'0978045612'\n          DC   CL10'1004535486'\n          DC   CL10'1008725474'\n          DC   CL10'1009393768'\n          DC   CL10'1021634133'\n          DC   CL10'1026839376'\n          DC   CL10'1028796002'\n          DC   CL10'1034528113'\n          DC   CL10'1036074096'\n          DC   CL10'1036622827'\n          DC   CL10'1045950143'\n          DC   CL10'1047261909'\n          DC   CL10'1053803551'\n          DC   CL10'1055817303'\n          DC   CL10'1070588771'\n          DC   CL10'1090578040'\n          DC   CL10'1094183483'\n          DC   CL10'1102965965'\n          DC   CL10'1113496985'\n          DC   CL10'1124826024'\n          DC   CL10'1169066430'\n          DC   CL10'1170852922'\n          DC   CL10'1175414415'\n          DC   CL10'1175901510'\n          DC   CL10'1176047902'\n          DC   CL10'1182833385'\n          DC   CL10'1209852058'\n          DC   CL10'1229538482'\n          DC   CL10'1252476538'\n          DC   CL10'1262465755'\n          DC   CL10'1283649175'\n          DC   CL10'1293508166'\n          DC   CL10'1300971865'\n          DC   CL10'1309560725'\n          DC   CL10'1334447563'\n          DC   CL10'1343776836'\n          DC   CL10'1366017127'\n          DC   CL10'1406211586'\n          DC   CL10'1416503025'\n          DC   CL10'1428066942'\n          DC   CL10'1432942365'\n          DC   CL10'1444855750'\n          DC   CL10'1448433468'\n          DC   CL10'1448838730'\n          DC   CL10'1465609943'\n          DC   CL10'1469514872'\n          DC   CL10'1478252658'\n          DC   CL10'1481674017'\n          DC   CL10'1487783464'\n          DC   CL10'1493612746'\n          DC   CL10'1506827363'\n          DC   CL10'1510218230'\n          DC   CL10'1510752158'\n          DC   CL10'1515117817'\n          DC   CL10'1519007403'\n          DC   CL10'1520984600'\n          DC   CL10'1522697574'\n          DC   CL10'1527224381'\n          DC   CL10'1547170224'\n          DC   CL10'1553542330'\n          DC   CL10'1563502577'\n          DC   CL10'1567055502'\n          DC   CL10'1575299923'\n          DC   CL10'1599853705'\n          DC   CL10'1606377408'\n          DC   CL10'1608840747'\n          DC   CL10'1621991737'\n          DC   CL10'1630588698'\n          DC   CL10'1638250572'\n          DC   CL10'1654896952'\n          DC   CL10'1658768311'\n          DC   CL10'1659356334'\n          DC   CL10'1662932899'\n          DC   CL10'1669110221'\n          DC   CL10'1670254329'\n          DC   CL10'1680667485'\n          DC   CL10'1682953374'\n          DC   CL10'1683396492'\n          DC   CL10'1704233907'\n          DC   CL10'1718754999'\n          DC   CL10'1727381522'\n          DC   CL10'1730008644'\n          DC   CL10'1733029984'\n          DC   CL10'1737046676'\n          DC   CL10'1750507756'\n          DC   CL10'1759059386'\n          DC   CL10'1761684083'\n          DC   CL10'1767326447'\n          DC   CL10'1775777708'\n          DC   CL10'1776871076'\n          DC   CL10'1783737437'\n          DC   CL10'1796424079'\n          DC   CL10'1801389277'\n          DC   CL10'1807981546'\n          DC   CL10'1819296715'\n          DC   CL10'1823645616'\n          DC   CL10'1850521488'\n          DC   CL10'1869574749'\n          DC   CL10'1873888347'\n          DC   CL10'1877504009'\n          DC   CL10'1916989089'\n          DC   CL10'1918345822'\n          DC   CL10'1923132262'\n          DC   CL10'1926239473'\n          DC   CL10'1934646582'\n          DC   CL10'1946142617'\n          DC   CL10'1948521828'\n          DC   CL10'1954513695'\n          DC   CL10'1970220975'\n          DC   CL10'1977910306'\n          DC   CL10'1993801028'\n          DC   CL10'1994641628'\n          DC   CL10'2003724911'\n          DC   CL10'2005934797'\n          DC   CL10'2009368031'\n          DC   CL10'2023217125'\n          DC   CL10'2034099345'\n          DC   CL10'2038908934'\n          DC   CL10'2044061926'\n          DC   CL10'2059961681'\n          DC   CL10'2065592775'\n          DC   CL10'2072647459'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'2113148651'\n          DC   CL10'2128795604'\n          DC   CL10'2139096544'\n          DC   CL10'2141578675'\n          DC   CL10'2141727998'\n          DC   CL10'2144637213'\n          DC   CL10'2144977308'\n          DC   CL10'2163772156'\n          DC   CL10'2169298540'\n          DC   CL10'2177375639'\n          DC   CL10'2216813290'\n          DC   CL10'2222675501'\n          DC   CL10'2230174310'\n          DC   CL10'2231104325'\n          DC   CL10'2233677591'\n          DC   CL10'2252189346'\n          DC   CL10'2275690210'\n          DC   CL10'2284873668'\n          DC   CL10'2285848536'\n          DC   CL10'2286342506'\n          DC   CL10'2302069743'\n          DC   CL10'2307633383'\n          DC   CL10'2315437316'\n          DC   CL10'2338259443'\n          DC   CL10'2339574706'\n          DC   CL10'2355329543'\n          DC   CL10'2369764575'\n          DC   CL10'2376377908'\n          DC   CL10'2389120744'\n          DC   CL10'2396911987'\n          DC   CL10'2398938103'\n          DC   CL10'2400421895'\n          DC   CL10'2422232634'\n          DC   CL10'2425747753'\n          DC   CL10'2452295581'\n          DC   CL10'2453201288'\n          DC   CL10'2463397457'\n          DC   CL10'2488720988'\n          DC   CL10'2491407260'\n          DC   CL10'2512272436'\n          DC   CL10'2518972405'\n          DC   CL10'2524558876'\n          DC   CL10'2533023160'\n          DC   CL10'2544618053'\n          DC   CL10'2574915986'\n          DC   CL10'2584106197'\n          DC   CL10'2586698969'\n          DC   CL10'2587130549'\n          DC   CL10'2593365519'\n          DC   CL10'2601564517'\n          DC   CL10'2609800752'\n          DC   CL10'2612833848'\n          DC   CL10'2629152958'\n          DC   CL10'2657748187'\n          DC   CL10'2662116167'\n          DC   CL10'2679767239'\n          DC   CL10'2682008352'\n          DC   CL10'2685466240'\n          DC   CL10'2693983276'\n          DC   CL10'2695284092'\n          DC   CL10'2703499802'\n          DC   CL10'2722314424'\n          DC   CL10'2724557663'\n          DC   CL10'2726348003'\n          DC   CL10'2740708470'\n          DC   CL10'2756790530'\n          DC   CL10'2764666071'\n          DC   CL10'2807857653'\n          DC   CL10'2813767803'\n          DC   CL10'2816227704'\n          DC   CL10'2836247091'\n          DC   CL10'2836687970'\n          DC   CL10'2847713657'\n          DC   CL10'2863161645'\n          DC   CL10'2868240302'\n          DC   CL10'2882509469'\n          DC   CL10'2883441128'\n          DC   CL10'2884145001'\n          DC   CL10'2886269710'\n          DC   CL10'2890004371'\n          DC   CL10'2901437526'\n          DC   CL10'2908096078'\n          DC   CL10'2918179151'\n          DC   CL10'2924990815'\n          DC   CL10'2925865139'\n          DC   CL10'2943078847'\n          DC   CL10'2978879793'\n          DC   CL10'2979680261'\n          DC   CL10'2987837853'\n          DC   CL10'2989933983'\n          DC   CL10'3009924766'\n          DC   CL10'3010102732'\n          DC   CL10'3015620511'\n          DC   CL10'3020793152'\n          DC   CL10'3026659535'\n          DC   CL10'3032523980'\n          DC   CL10'3049097295'\n          DC   CL10'3077327176'\n          DC   CL10'3079859595'\n          DC   CL10'3081869339'\n          DC   CL10'3083893881'\n          DC   CL10'3090555978'\n          DC   CL10'3092155047'\n          DC   CL10'3092863149'\n          DC   CL10'3114643592'\n          DC   CL10'3133986654'\n          DC   CL10'3139779380'\n          DC   CL10'3152278214'\n          DC   CL10'3157858597'\n          DC   CL10'3184472762'\n          DC   CL10'3186535891'\n          DC   CL10'3199523856'\n          DC   CL10'3232136869'\n          DC   CL10'3246054935'\n          DC   CL10'3248183233'\n          DC   CL10'3256786735'\n          DC   CL10'3262132801'\n          DC   CL10'3269783286'\n          DC   CL10'3277199285'\n          DC   CL10'3295843454'\n          DC   CL10'3297999589'\n          DC   CL10'3319616438'\n          DC   CL10'3325756816'\n          DC   CL10'3327808029'\n          DC   CL10'3338981601'\n          DC   CL10'3344508515'\n          DC   CL10'3345279264'\n          DC   CL10'3353162830'\n          DC   CL10'3358601905'\n          DC   CL10'3364087686'\n          DC   CL10'3367090129'\n          DC   CL10'3385869120'\n          DC   CL10'3387803789'\n          DC   CL10'3402810761'\n          DC   CL10'3410613712'\n          DC   CL10'3415624636'\n          DC   CL10'3416289223'\n          DC   CL10'3425687957'\n          DC   CL10'3428793268'\n          DC   CL10'3430673539'\n          DC   CL10'3452683833'\n          DC   CL10'3463687713'\n          DC   CL10'3496725929'\n          DC   CL10'3505005889'\n          DC   CL10'3531089061'\n          DC   CL10'3544489840'\n          DC   CL10'3548439886'\n          DC   CL10'3566158281'\n          DC   CL10'3578295917'\n          DC   CL10'3606218529'\n          DC   CL10'3609960123'\n          DC   CL10'3621038015'\n          DC   CL10'3625252117'\n          DC   CL10'3627055019'\n          DC   CL10'3635946109'\n          DC   CL10'3655561888'\n          DC   CL10'3658796578'\n          DC   CL10'3665273648'\n          DC   CL10'3665932525'\n          DC   CL10'3673647154'\n          DC   CL10'3682736375'\n          DC   CL10'3694896336'\n          DC   CL10'3698845784'\n          DC   CL10'3704809623'\n          DC   CL10'3707569144'\n          DC   CL10'3708816466'\n          DC   CL10'3715241774'\n          DC   CL10'3737691656'\n          DC   CL10'3741778199'\n          DC   CL10'3755663894'\n          DC   CL10'3758750173'\n          DC   CL10'3772702776'\n          DC   CL10'3777461584'\n          DC   CL10'3787896571'\n          DC   CL10'3795936465'\n          DC   CL10'3801898777'\n          DC   CL10'3815888699'\n          DC   CL10'3825916938'\n          DC   CL10'3829666331'\n          DC   CL10'3830408962'\n          DC   CL10'3835275994'\n          DC   CL10'3839559432'\n          DC   CL10'3839616878'\n          DC   CL10'3842431364'\n          DC   CL10'3845774769'\n          DC   CL10'3871130565'\n          DC   CL10'3888423157'\n          DC   CL10'3889103631'\n          DC   CL10'3893656452'\n          DC   CL10'3893799393'\n          DC   CL10'3903243195'\n          DC   CL10'3912149423'\n          DC   CL10'3927724004'\n          DC   CL10'3930991335'\n          DC   CL10'3946441022'\n          DC   CL10'3951386821'\n          DC   CL10'3954741049'\n          DC   CL10'3968593246'\n          DC   CL10'3980200299'\n          DC   CL10'3994269823'\n          DC   CL10'4032829857'\n          DC   CL10'4041091177'\n          DC   CL10'4052483870'\n          DC   CL10'4054368798'\n          DC   CL10'4058524665'\n          DC   CL10'4082518764'\n          DC   CL10'4087244297'\n          DC   CL10'4109725090'\n          DC   CL10'4126998063'\n          DC   CL10'4141332115'\n          DC   CL10'4146105391'\n          DC   CL10'4165437910'\n          DC   CL10'4193813874'\n          DC   CL10'4213406110'\n          DC   CL10'4225518754'\n          DC   CL10'4233008317'\n          DC   CL10'4234405322'\n          DC   CL10'4245641000'\n          DC   CL10'4250573220'\n          DC   CL10'4255455557'\n          DC   CL10'4261367795'\n          DC   CL10'4278411030'\n          DC   CL10'4293029016'\n          DC   CL10'4304448398'\n          DC   CL10'4306179254'\n          DC   CL10'4332924734'\n          DC   CL10'4339308153'\n          DC   CL10'4341809837'\n          DC   CL10'4342046037'\n          DC   CL10'4354048918'\n          DC   CL10'4361475807'\n          DC   CL10'4361988925'\n          DC   CL10'4365677512'\n          DC   CL10'4365695641'\n          DC   CL10'4367068462'\n          DC   CL10'4374982729'\n          DC   CL10'4376019850'\n          DC   CL10'4382148265'\n          DC   CL10'4395321328'\n          DC   CL10'4399652566'\n          DC   CL10'4399889973'\n          DC   CL10'4403915745'\n          DC   CL10'4415227580'\n          DC   CL10'4420964547'\n          DC   CL10'4425250854'\n          DC   CL10'4440349726'\n          DC   CL10'4442600677'\n          DC   CL10'4446271569'\n          DC   CL10'4452119323'\n          DC   CL10'4455138672'\n          DC   CL10'4459585269'\n          DC   CL10'4480439106'\n          DC   CL10'4499203387'\n          DC   CL10'4501837884'\n          DC   CL10'4511944944'\n          DC   CL10'4515414182'\n          DC   CL10'4525397489'\n          DC   CL10'4531464162'\n          DC   CL10'4532128318'\n          DC   CL10'4539127550'\n          DC   CL10'4541806875'\n          DC   CL10'4542498305'\n          DC   CL10'4564553568'\n          DC   CL10'4571377709'\n          DC   CL10'4578912800'\n          DC   CL10'4606150105'\n          DC   CL10'4615307402'\n          DC   CL10'4676559607'\n          DC   CL10'4677868018'\n          DC   CL10'4691403480'\n          DC   CL10'4708979219'\n          DC   CL10'4711251680'\n          DC   CL10'4717926359'\n          DC   CL10'4718112570'\n          DC   CL10'4718828567'\n          DC   CL10'4722569401'\n          DC   CL10'4731985446'\n          DC   CL10'4733686614'\n          DC   CL10'4746081896'\n          DC   CL10'4760993077'\n          DC   CL10'4772569573'\n          DC   CL10'4775657044'\n          DC   CL10'4784105826'\n          DC   CL10'4788384767'\n          DC   CL10'4796208846'\n          DC   CL10'4807640041'\n          DC   CL10'4818917707'\n          DC   CL10'4825735132'\n          DC   CL10'4826671921'\n          DC   CL10'4834267841'\n          DC   CL10'4838670864'\n          DC   CL10'4840642324'\n          DC   CL10'4851436890'\n          DC   CL10'4868476778'\n          DC   CL10'4884001528'\n          DC   CL10'4894180366'\n          DC   CL10'4909094411'\n          DC   CL10'4924053684'\n          DC   CL10'4932226772'\n          DC   CL10'4963999866'\n          DC   CL10'4976581420'\n          DC   CL10'4988242159'\n          DC   CL10'4997957903'\n          DC   CL10'5001541312'\n          DC   CL10'5012943915'\n          DC   CL10'5022145245'\n          DC   CL10'5025088118'\n          DC   CL10'5031739843'\n          DC   CL10'5061464234'\n          DC   CL10'5062777099'\n          DC   CL10'5081606619'\n          DC   CL10'5085358271'\n          DC   CL10'5097340862'\n          DC   CL10'5131008598'\n          DC   CL10'5136707186'\n          DC   CL10'5137829773'\n          DC   CL10'5138392919'\n          DC   CL10'5141292181'\n          DC   CL10'5148786272'\n          DC   CL10'5167188055'\n          DC   CL10'5170458496'\n          DC   CL10'5171457235'\n          DC   CL10'5173509412'\n          DC   CL10'5175852258'\n          DC   CL10'5176912171'\n          DC   CL10'5184641688'\n          DC   CL10'5195953924'\n          DC   CL10'5201121972'\n          DC   CL10'5201791491'\n          DC   CL10'5212207442'\n          DC   CL10'5237405495'\n          DC   CL10'5241948690'\n          DC   CL10'5248438067'\n          DC   CL10'5264958561'\n          DC   CL10'5280097813'\n          DC   CL10'5297165057'\n          DC   CL10'5298755992'\n          DC   CL10'5300159981'\n          DC   CL10'5321710355'\n          DC   CL10'5337606906'\n          DC   CL10'5345334579'\n          DC   CL10'5371357959'\n          DC   CL10'5385074372'\n          DC   CL10'5395385796'\n          DC   CL10'5397272711'\n          DC   CL10'5401039694'\n          DC   CL10'5425916378'\n          DC   CL10'5431977508'\n          DC   CL10'5433720236'\n          DC   CL10'5442562396'\n          DC   CL10'5449773212'\n          DC   CL10'5456759873'\n          DC   CL10'5457552652'\n          DC   CL10'5475656321'\n          DC   CL10'5506681939'\n          DC   CL10'5508940292'\n          DC   CL10'5526397503'\n          DC   CL10'5534401507'\n          DC   CL10'5549481728'\n          DC   CL10'5558764121'\n          DC   CL10'5561094977'\n          DC   CL10'5563765185'\n          DC   CL10'5565101216'\n          DC   CL10'5572035250'\n          DC   CL10'5576869845'\n          DC   CL10'5591433733'\n          DC   CL10'5596327164'\n          DC   CL10'5614513448'\n          DC   CL10'5619387353'\n          DC   CL10'5621486760'\n          DC   CL10'5626236138'\n          DC   CL10'5627716670'\n          DC   CL10'5641763691'\n          DC   CL10'5642391145'\n          DC   CL10'5642531085'\n          DC   CL10'5643322010'\n          DC   CL10'5653365020'\n          DC   CL10'5663840721'\n          DC   CL10'5675001931'\n          DC   CL10'5675989559'\n          DC   CL10'5679881257'\n          DC   CL10'5701796697'\n          DC   CL10'5705291655'\n          DC   CL10'5707472066'\n          DC   CL10'5707681244'\n          DC   CL10'5725273168'\n          DC   CL10'5735000362'\n          DC   CL10'5744251794'\n          DC   CL10'5750582397'\n          DC   CL10'5764563450'\n          DC   CL10'5765477779'\n          DC   CL10'5768466287'\n          DC   CL10'5778297253'\n          DC   CL10'5781827937'\n          DC   CL10'5792681088'\n          DC   CL10'5823087664'\n          DC   CL10'5826049791'\n          DC   CL10'5852626081'\n          DC   CL10'5859069484'\n          DC   CL10'5871856400'\n          DC   CL10'5879594685'\n          DC   CL10'5923848700'\n          DC   CL10'5930920717'\n          DC   CL10'5939740534'\n          DC   CL10'5945977008'\n          DC   CL10'5953591351'\n          DC   CL10'5974120497'\n          DC   CL10'5980530023'\n          DC   CL10'5982500270'\n          DC   CL10'6013020304'\n          DC   CL10'6017590576'\n          DC   CL10'6027151395'\n          DC   CL10'6031477613'\n          DC   CL10'6034259879'\n          DC   CL10'6034977111'\n          DC   CL10'6038224205'\n          DC   CL10'6040047313'\n          DC   CL10'6042427892'\n          DC   CL10'6046911354'\n          DC   CL10'6055320835'\n          DC   CL10'6071816834'\n          DC   CL10'6076953748'\n          DC   CL10'6078781716'\n          DC   CL10'6089806179'\n          DC   CL10'6102241319'\n          DC   CL10'6111881741'\n          DC   CL10'6114026406'\n          DC   CL10'6131336255'\n          DC   CL10'6153092070'\n          DC   CL10'6176508218'\n          DC   CL10'6189589095'\n          DC   CL10'6195575064'\n          DC   CL10'6214334476'\n          DC   CL10'6214652858'\n          DC   CL10'6219336562'\n          DC   CL10'6274959967'\n          DC   CL10'6277765141'\n          DC   CL10'6291772134'\n          DC   CL10'6299003602'\n          DC   CL10'6301600736'\n          DC   CL10'6309461069'\n          DC   CL10'6316443356'\n          DC   CL10'6321644499'\n          DC   CL10'6340650247'\n          DC   CL10'6362585477'\n          DC   CL10'6378346611'\n          DC   CL10'6380603394'\n          DC   CL10'6392883433'\n          DC   CL10'6401696170'\n          DC   CL10'6405784661'\n          DC   CL10'6410072367'\n          DC   CL10'6419378045'\n          DC   CL10'6420659456'\n          DC   CL10'6423082237'\n          DC   CL10'6441887377'\n          DC   CL10'6491948418'\n          DC   CL10'6492977996'\n          DC   CL10'6526299792'\n          DC   CL10'6536513368'\n          DC   CL10'6565462961'\n          DC   CL10'6583467513'\n          DC   CL10'6610884504'\n          DC   CL10'6617160065'\n          DC   CL10'6619899880'\n          DC   CL10'6620218026'\n          DC   CL10'6632012192'\n          DC   CL10'6634201034'\n          DC   CL10'6640171757'\n          DC   CL10'6650685307'\n          DC   CL10'6656036861'\n          DC   CL10'6706822399'\n          DC   CL10'6708832431'\n          DC   CL10'6743900337'\n          DC   CL10'6744618021'\n          DC   CL10'6745219809'\n          DC   CL10'6750654554'\n          DC   CL10'6750835075'\n          DC   CL10'6758118765'\n          DC   CL10'6768877384'\n          DC   CL10'6788433333'\n          DC   CL10'6795597451'\n          DC   CL10'6819051409'\n          DC   CL10'6824188618'\n          DC   CL10'6829686930'\n          DC   CL10'6834837074'\n          DC   CL10'6837439723'\n          DC   CL10'6876599643'\n          DC   CL10'6879934131'\n          DC   CL10'6882383883'\n          DC   CL10'6906496238'\n          DC   CL10'6915994267'\n          DC   CL10'6941536678'\n          DC   CL10'6959831086'\n          DC   CL10'6980841188'\n          DC   CL10'6984337341'\n          DC   CL10'6999538714'\n          DC   CL10'7014869731'\n          DC   CL10'7020490806'\n          DC   CL10'7024630382'\n          DC   CL10'7025953068'\n          DC   CL10'7031389620'\n          DC   CL10'7039033783'\n          DC   CL10'7043099673'\n          DC   CL10'7059883683'\n          DC   CL10'7072494621'\n          DC   CL10'7078217222'\n          DC   CL10'7093977808'\n          DC   CL10'7138113868'\n          DC   CL10'7170701585'\n          DC   CL10'7175433348'\n          DC   CL10'7177468298'\n          DC   CL10'7191388279'\n          DC   CL10'7206997982'\n          DC   CL10'7211070860'\n          DC   CL10'7211151702'\n          DC   CL10'7221527032'\n          DC   CL10'7224666599'\n          DC   CL10'7228989035'\n          DC   CL10'7257486349'\n          DC   CL10'7260553248'\n          DC   CL10'7263703419'\n          DC   CL10'7278163786'\n          DC   CL10'7292854960'\n          DC   CL10'7295504370'\n          DC   CL10'7328744136'\n          DC   CL10'7341681867'\n          DC   CL10'7349775632'\n          DC   CL10'7360355280'\n          DC   CL10'7366688666'\n          DC   CL10'7378402421'\n          DC   CL10'7379753810'\n          DC   CL10'7385386989'\n          DC   CL10'7400995389'\n          DC   CL10'7403393048'\n          DC   CL10'7416875787'\n          DC   CL10'7419152479'\n          DC   CL10'7448619971'\n          DC   CL10'7457852404'\n          DC   CL10'7465038901'\n          DC   CL10'7473093184'\n          DC   CL10'7476835831'\n          DC   CL10'7479549097'\n          DC   CL10'7496108098'\n          DC   CL10'7524793289'\n          DC   CL10'7529154440'\n          DC   CL10'7537430309'\n          DC   CL10'7539954682'\n          DC   CL10'7540592790'\n          DC   CL10'7555744266'\n          DC   CL10'7591761928'\n          DC   CL10'7624869674'\n          DC   CL10'7627426114'\n          DC   CL10'7665518013'\n          DC   CL10'7667230087'\n          DC   CL10'7675776278'\n          DC   CL10'7679716679'\n          DC   CL10'7681142671'\n          DC   CL10'7681922140'\n          DC   CL10'7686790093'\n          DC   CL10'7686947369'\n          DC   CL10'7690923006'\n          DC   CL10'7699537531'\n          DC   CL10'7724354542'\n          DC   CL10'7726068392'\n          DC   CL10'7734167553'\n          DC   CL10'7743096849'\n          DC   CL10'7777348521'\n          DC   CL10'7783677062'\n          DC   CL10'7785283283'\n          DC   CL10'7789745740'\n          DC   CL10'7799100194'\n          DC   CL10'7805934460'\n          DC   CL10'7808769493'\n          DC   CL10'7817561428'\n          DC   CL10'7846276005'\n          DC   CL10'7848321487'\n          DC   CL10'7869520770'\n          DC   CL10'7876388204'\n          DC   CL10'7880707913'\n          DC   CL10'7896530724'\n          DC   CL10'7899381782'\n          DC   CL10'7952915161'\n          DC   CL10'7964352758'\n          DC   CL10'7968945590'\n          DC   CL10'7979475780'\n          DC   CL10'7996608718'\n          DC   CL10'8003680043'\n          DC   CL10'8006156056'\n          DC   CL10'8014572229'\n          DC   CL10'8027939593'\n          DC   CL10'8040889696'\n          DC   CL10'8041396877'\n          DC   CL10'8048427256'\n          DC   CL10'8074041252'\n          DC   CL10'8078001788'\n          DC   CL10'8081562472'\n          DC   CL10'8091838842'\n          DC   CL10'8091839855'\n          DC   CL10'8099335130'\n          DC   CL10'8118801689'\n          DC   CL10'8123221991'\n          DC   CL10'8127785251'\n          DC   CL10'8131002824'\n          DC   CL10'8133182954'\n          DC   CL10'8155628498'\n          DC   CL10'8162793635'\n          DC   CL10'8174979342'\n          DC   CL10'8176019027'\n          DC   CL10'8196379523'\n          DC   CL10'8198652458'\n          DC   CL10'8217281228'\n          DC   CL10'8234802647'\n          DC   CL10'8245886326'\n          DC   CL10'8250774014'\n          DC   CL10'8261864974'\n          DC   CL10'8266839060'\n          DC   CL10'8284252649'\n          DC   CL10'8284985610'\n          DC   CL10'8317518932'\n          DC   CL10'8318918560'\n          DC   CL10'8321123142'\n          DC   CL10'8326027594'\n          DC   CL10'8350371692'\n          DC   CL10'8363333191'\n          DC   CL10'8367220073'\n          DC   CL10'8372418425'\n          DC   CL10'8372701490'\n          DC   CL10'8373228818'\n          DC   CL10'8390001046'\n          DC   CL10'8392614976'\n          DC   CL10'8409030217'\n          DC   CL10'8422464137'\n          DC   CL10'8431528200'\n          DC   CL10'8441898124'\n          DC   CL10'8446793887'\n          DC   CL10'8455968518'\n          DC   CL10'8456810072'\n          DC   CL10'8459674825'\n          DC   CL10'8461533533'\n          DC   CL10'8474892202'\n          DC   CL10'8484739956'\n          DC   CL10'8501210340'\n          DC   CL10'8516432844'\n          DC   CL10'8532171439'\n          DC   CL10'8542248852'\n          DC   CL10'8554607545'\n          DC   CL10'8561872344'\n          DC   CL10'8570796738'\n          DC   CL10'8575481588'\n          DC   CL10'8582131225'\n          DC   CL10'8593413955'\n          DC   CL10'8605152358'\n          DC   CL10'8609761388'\n          DC   CL10'8615700059'\n          DC   CL10'8620256478'\n          DC   CL10'8632028785'\n          DC   CL10'8647956104'\n          DC   CL10'8653060920'\n          DC   CL10'8666619291'\n          DC   CL10'8677951242'\n          DC   CL10'8683917119'\n          DC   CL10'8685504552'\n          DC   CL10'8704495042'\n          DC   CL10'8706993147'\n          DC   CL10'8716714630'\n          DC   CL10'8719657413'\n          DC   CL10'8734136429'\n          DC   CL10'8742955537'\n          DC   CL10'8743127805'\n          DC   CL10'8747566951'\n          DC   CL10'8761075556'\n          DC   CL10'8771675995'\n          DC   CL10'8774372180'\n          DC   CL10'8775370196'\n          DC   CL10'8782023945'\n          DC   CL10'8800423169'\n          DC   CL10'8802348898'\n          DC   CL10'8803827781'\n          DC   CL10'8807543455'\n          DC   CL10'8815379839'\n          DC   CL10'8817930819'\n          DC   CL10'8824964249'\n          DC   CL10'8828773871'\n          DC   CL10'8836215227'\n          DC   CL10'8864169622'\n          DC   CL10'8888984259'\n          DC   CL10'8906179273'\n          DC   CL10'8912574126'\n          DC   CL10'8942152936'\n          DC   CL10'8951906361'\n          DC   CL10'8965891650'\n          DC   CL10'8969836178'\n          DC   CL10'8970320500'\n          DC   CL10'8970957201'\n          DC   CL10'8971292916'\n          DC   CL10'8972698172'\n          DC   CL10'8973826215'\n          DC   CL10'8977793548'\n          DC   CL10'8979968036'\n          DC   CL10'8986560851'\n          DC   CL10'8986613327'\n          DC   CL10'8990850471'\n          DC   CL10'8992443407'\n          DC   CL10'8996009174'\n          DC   CL10'9008293509'\n          DC   CL10'9020317555'\n          DC   CL10'9071539357'\n          DC   CL10'9078253445'\n          DC   CL10'9082725435'\n          DC   CL10'9142951241'\n          DC   CL10'9145381274'\n          DC   CL10'9159017410'\n          DC   CL10'9172277739'\n          DC   CL10'9188307050'\n          DC   CL10'9195709541'\n          DC   CL10'9216384444'\n          DC   CL10'9222373637'\n          DC   CL10'9225330314'\n          DC   CL10'9289664100'\n          DC   CL10'9315691904'\n          DC   CL10'9321130226'\n          DC   CL10'9334903211'\n          DC   CL10'9336349912'\n          DC   CL10'9342886112'\n          DC   CL10'9354071150'\n          DC   CL10'9378133933'\n          DC   CL10'9394383633'\n          DC   CL10'9411106082'\n          DC   CL10'9420163039'\n          DC   CL10'9425802615'\n          DC   CL10'9461157722'\n          DC   CL10'9469873148'\n          DC   CL10'9473843829'\n          DC   CL10'9477987603'\n          DC   CL10'9477994206'\n          DC   CL10'9481197146'\n          DC   CL10'9494810997'\n          DC   CL10'9497186417'\n          DC   CL10'9501170379'\n          DC   CL10'9503089882'\n          DC   CL10'9528779605'\n          DC   CL10'9530143232'\n          DC   CL10'9544350467'\n          DC   CL10'9557093720'\n          DC   CL10'9574480990'\n          DC   CL10'9576662885'\n          DC   CL10'9580332461'\n          DC   CL10'9580829481'\n          DC   CL10'9592186524'\n          DC   CL10'9597634183'\n          DC   CL10'9600087963'\n          DC   CL10'9617348080'\n          DC   CL10'9629518012'\n          DC   CL10'9637885520'\n          DC   CL10'9639982642'\n          DC   CL10'9650793422'\n          DC   CL10'9672913948'\n          DC   CL10'9690965116'\n          DC   CL10'9691804662'\n          DC   CL10'9694554596'\n          DC   CL10'9713710832'\n          DC   CL10'9728537463'\n          DC   CL10'9734751332'\n          DC   CL10'9749315054'\n          DC   CL10'9767784033'\n          DC   CL10'9773777703'\n          DC   CL10'9782229122'\n          DC   CL10'9792422084'\n          DC   CL10'9825592300'\n          DC   CL10'9850258624'\n          DC   CL10'9875426701'\n          DC   CL10'9883029293'\n          DC   CL10'9886176900'\n          DC   CL10'9911241979'\n          DC   CL10'9919451101'\n          DC   CL10'9924773051'\n          DC   CL10'9946619993'\n          DC   CL10'9967522275'\n          DC   CL10'9984956820'\n          DC   CL10'9987216646'\nLASTUN   EQU   *-10\nDUMMY     DC   XL10'FFFFFFFFFFFFFFFFFFFF'\n*\nTIMETBL  DC    1000F'0'            SEARCH TIMES\n*\nSEQSRCH1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'QUICKER SEQUENTIAL SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R2,SRCHTBL\nLOOP1    CLC   KEY,0(R2)\n         BE    SUCCESS\n         BNH   FAIL\n         LA    R2,10(R2)\n         B     LOOP1\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         L     R3,=A(TIMETBL)\n         LA    R2,1000\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'1000'         AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00056": {"ttr": 17153, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\x10\\x01\\x10\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 272, "newlines": 272, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL BINSRCH ',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00056'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'BINARY SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        19 OCT 1983 - CHARLES HOTTEL                                 *\n*        BINARY SEARCH                                                *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 406 - 408.                                *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nBINSRCH  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         LA    R7,TIMETBL          POINT TO TIME TABLE\n         LA    R6,16\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,3(R8)            NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nTIMETBL  DC    16F'0'              SEARCH TIMES\nKEY      DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nSRCHTBL  DC    CL3'061'\n         DC    CL3'087'\n         DC    CL3'154'\n         DC    CL3'170'\n         DC    CL3'275'\n         DC    CL3'426'\n         DC    CL3'503'\n         DC    CL3'509'\n         DC    CL3'512'\n         DC    CL3'612'\n         DC    CL3'653'\n         DC    CL3'677'\n         DC    CL3'703'\n         DC    CL3'765'\n         DC    CL3'897'\n         DC    CL3'908'\nLASTUN   EQU   *-3\nDUMMY    DC    X'FFFFFF'\n*\nBSRCH1   CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'BINARY SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R1,1                L <- 1\n         LA    R2,16               U <- N\n         B     MIDPT\nADJHIGH  BE SUCCESS\n         LA    R1,1(R3)            L <- I+1\nMIDPT    LR    R3,R1               I <- L\n         AR    R3,R2               I <- L+U\n         SRL   R3,1\n         CR    R1,R3\n         BH    FAIL\nCOMPARE  LR    R5,R3\n         BCTR  R5,0\n         M     R4,=F'3'\n         A     R5,=A(SRCHTBL)\n         CLC   KEY,0(R5)           KEY GE TABLE(I) ?\n         BNL   ADJHIGH             YES\nADJLOW   LR    R2,R3\n         BCTR  R2,0                U <- I-1\n         B     MIDPT\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         LA    R3,TIMETBL\n         LA    R2,16\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'16'           AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00057": {"ttr": 17158, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x04\\xe9\\x04\\xe9\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1257, "newlines": 1257, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL BINSRCH ',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00057'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'BINARY SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        19 OCT 1983 - CHARLES HOTTEL                                 *\n*        BINARY SEARCH                                                *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 406 - 408.                                *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nBINSRCH  START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         L     R7,=A(TIMETBL)      POINT TO TIME TABLE\n         LA    R6,1000\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,3(R8)            NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nKEY      DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nSRCHTBL   EQU  *\n          DC   CL10'0021777608'\n          DC   CL10'0027612669'\n          DC   CL10'0044709516'\n          DC   CL10'0063381812'\n          DC   CL10'0109127207'\n          DC   CL10'0110866296'\n          DC   CL10'0119215494'\n          DC   CL10'0124102660'\n          DC   CL10'0125735609'\n          DC   CL10'0129905505'\n          DC   CL10'0131160193'\n          DC   CL10'0159383950'\n          DC   CL10'0201923441'\n          DC   CL10'0213162155'\n          DC   CL10'0216719243'\n          DC   CL10'0217211427'\n          DC   CL10'0218026627'\n          DC   CL10'0241754751'\n          DC   CL10'0242199350'\n          DC   CL10'0243554165'\n          DC   CL10'0244567532'\n          DC   CL10'0246582414'\n          DC   CL10'0265668719'\n          DC   CL10'0269317263'\n          DC   CL10'0287224727'\n          DC   CL10'0295004946'\n          DC   CL10'0295810742'\n          DC   CL10'0298867763'\n          DC   CL10'0304818949'\n          DC   CL10'0333506667'\n          DC   CL10'0341973416'\n          DC   CL10'0342069814'\n          DC   CL10'0347745052'\n          DC   CL10'0350150475'\n          DC   CL10'0356352558'\n          DC   CL10'0374688198'\n          DC   CL10'0378208449'\n          DC   CL10'0383088094'\n          DC   CL10'0391251011'\n          DC   CL10'0397635966'\n          DC   CL10'0404123135'\n          DC   CL10'0407531659'\n          DC   CL10'0411859804'\n          DC   CL10'0415728203'\n          DC   CL10'0425389343'\n          DC   CL10'0430176038'\n          DC   CL10'0438108163'\n          DC   CL10'0438663301'\n          DC   CL10'0457377863'\n          DC   CL10'0470272897'\n          DC   CL10'0472398811'\n          DC   CL10'0483312294'\n          DC   CL10'0485448434'\n          DC   CL10'0495310799'\n          DC   CL10'0496791189'\n          DC   CL10'0510649893'\n          DC   CL10'0511433940'\n          DC   CL10'0511646625'\n          DC   CL10'0517639587'\n          DC   CL10'0518520315'\n          DC   CL10'0541991360'\n          DC   CL10'0544933583'\n          DC   CL10'0588657390'\n          DC   CL10'0612793626'\n          DC   CL10'0616034514'\n          DC   CL10'0622321914'\n          DC   CL10'0637516947'\n          DC   CL10'0647477320'\n          DC   CL10'0647777208'\n          DC   CL10'0661744102'\n          DC   CL10'0667273759'\n          DC   CL10'0670956338'\n          DC   CL10'0681335564'\n          DC   CL10'0686500629'\n          DC   CL10'0686700231'\n          DC   CL10'0714777108'\n          DC   CL10'0722588209'\n          DC   CL10'0743022964'\n          DC   CL10'0756256838'\n          DC   CL10'0804677453'\n          DC   CL10'0826611007'\n          DC   CL10'0847201640'\n          DC   CL10'0855215859'\n          DC   CL10'0857169190'\n          DC   CL10'0866220927'\n          DC   CL10'0869536638'\n          DC   CL10'0894127953'\n          DC   CL10'0894858606'\n          DC   CL10'0906281426'\n          DC   CL10'0907157687'\n          DC   CL10'0919922282'\n          DC   CL10'0928009527'\n          DC   CL10'0930832968'\n          DC   CL10'0932853941'\n          DC   CL10'0951309693'\n          DC   CL10'0967769107'\n          DC   CL10'0978045612'\n          DC   CL10'1004535486'\n          DC   CL10'1008725474'\n          DC   CL10'1009393768'\n          DC   CL10'1021634133'\n          DC   CL10'1026839376'\n          DC   CL10'1028796002'\n          DC   CL10'1034528113'\n          DC   CL10'1036074096'\n          DC   CL10'1036622827'\n          DC   CL10'1045950143'\n          DC   CL10'1047261909'\n          DC   CL10'1053803551'\n          DC   CL10'1055817303'\n          DC   CL10'1070588771'\n          DC   CL10'1090578040'\n          DC   CL10'1094183483'\n          DC   CL10'1102965965'\n          DC   CL10'1113496985'\n          DC   CL10'1124826024'\n          DC   CL10'1169066430'\n          DC   CL10'1170852922'\n          DC   CL10'1175414415'\n          DC   CL10'1175901510'\n          DC   CL10'1176047902'\n          DC   CL10'1182833385'\n          DC   CL10'1209852058'\n          DC   CL10'1229538482'\n          DC   CL10'1252476538'\n          DC   CL10'1262465755'\n          DC   CL10'1283649175'\n          DC   CL10'1293508166'\n          DC   CL10'1300971865'\n          DC   CL10'1309560725'\n          DC   CL10'1334447563'\n          DC   CL10'1343776836'\n          DC   CL10'1366017127'\n          DC   CL10'1406211586'\n          DC   CL10'1416503025'\n          DC   CL10'1428066942'\n          DC   CL10'1432942365'\n          DC   CL10'1444855750'\n          DC   CL10'1448433468'\n          DC   CL10'1448838730'\n          DC   CL10'1465609943'\n          DC   CL10'1469514872'\n          DC   CL10'1478252658'\n          DC   CL10'1481674017'\n          DC   CL10'1487783464'\n          DC   CL10'1493612746'\n          DC   CL10'1506827363'\n          DC   CL10'1510218230'\n          DC   CL10'1510752158'\n          DC   CL10'1515117817'\n          DC   CL10'1519007403'\n          DC   CL10'1520984600'\n          DC   CL10'1522697574'\n          DC   CL10'1527224381'\n          DC   CL10'1547170224'\n          DC   CL10'1553542330'\n          DC   CL10'1563502577'\n          DC   CL10'1567055502'\n          DC   CL10'1575299923'\n          DC   CL10'1599853705'\n          DC   CL10'1606377408'\n          DC   CL10'1608840747'\n          DC   CL10'1621991737'\n          DC   CL10'1630588698'\n          DC   CL10'1638250572'\n          DC   CL10'1654896952'\n          DC   CL10'1658768311'\n          DC   CL10'1659356334'\n          DC   CL10'1662932899'\n          DC   CL10'1669110221'\n          DC   CL10'1670254329'\n          DC   CL10'1680667485'\n          DC   CL10'1682953374'\n          DC   CL10'1683396492'\n          DC   CL10'1704233907'\n          DC   CL10'1718754999'\n          DC   CL10'1727381522'\n          DC   CL10'1730008644'\n          DC   CL10'1733029984'\n          DC   CL10'1737046676'\n          DC   CL10'1750507756'\n          DC   CL10'1759059386'\n          DC   CL10'1761684083'\n          DC   CL10'1767326447'\n          DC   CL10'1775777708'\n          DC   CL10'1776871076'\n          DC   CL10'1783737437'\n          DC   CL10'1796424079'\n          DC   CL10'1801389277'\n          DC   CL10'1807981546'\n          DC   CL10'1819296715'\n          DC   CL10'1823645616'\n          DC   CL10'1850521488'\n          DC   CL10'1869574749'\n          DC   CL10'1873888347'\n          DC   CL10'1877504009'\n          DC   CL10'1916989089'\n          DC   CL10'1918345822'\n          DC   CL10'1923132262'\n          DC   CL10'1926239473'\n          DC   CL10'1934646582'\n          DC   CL10'1946142617'\n          DC   CL10'1948521828'\n          DC   CL10'1954513695'\n          DC   CL10'1970220975'\n          DC   CL10'1977910306'\n          DC   CL10'1993801028'\n          DC   CL10'1994641628'\n          DC   CL10'2003724911'\n          DC   CL10'2005934797'\n          DC   CL10'2009368031'\n          DC   CL10'2023217125'\n          DC   CL10'2034099345'\n          DC   CL10'2038908934'\n          DC   CL10'2044061926'\n          DC   CL10'2059961681'\n          DC   CL10'2065592775'\n          DC   CL10'2072647459'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'2113148651'\n          DC   CL10'2128795604'\n          DC   CL10'2139096544'\n          DC   CL10'2141578675'\n          DC   CL10'2141727998'\n          DC   CL10'2144637213'\n          DC   CL10'2144977308'\n          DC   CL10'2163772156'\n          DC   CL10'2169298540'\n          DC   CL10'2177375639'\n          DC   CL10'2216813290'\n          DC   CL10'2222675501'\n          DC   CL10'2230174310'\n          DC   CL10'2231104325'\n          DC   CL10'2233677591'\n          DC   CL10'2252189346'\n          DC   CL10'2275690210'\n          DC   CL10'2284873668'\n          DC   CL10'2285848536'\n          DC   CL10'2286342506'\n          DC   CL10'2302069743'\n          DC   CL10'2307633383'\n          DC   CL10'2315437316'\n          DC   CL10'2338259443'\n          DC   CL10'2339574706'\n          DC   CL10'2355329543'\n          DC   CL10'2369764575'\n          DC   CL10'2376377908'\n          DC   CL10'2389120744'\n          DC   CL10'2396911987'\n          DC   CL10'2398938103'\n          DC   CL10'2400421895'\n          DC   CL10'2422232634'\n          DC   CL10'2425747753'\n          DC   CL10'2452295581'\n          DC   CL10'2453201288'\n          DC   CL10'2463397457'\n          DC   CL10'2488720988'\n          DC   CL10'2491407260'\n          DC   CL10'2512272436'\n          DC   CL10'2518972405'\n          DC   CL10'2524558876'\n          DC   CL10'2533023160'\n          DC   CL10'2544618053'\n          DC   CL10'2574915986'\n          DC   CL10'2584106197'\n          DC   CL10'2586698969'\n          DC   CL10'2587130549'\n          DC   CL10'2593365519'\n          DC   CL10'2601564517'\n          DC   CL10'2609800752'\n          DC   CL10'2612833848'\n          DC   CL10'2629152958'\n          DC   CL10'2657748187'\n          DC   CL10'2662116167'\n          DC   CL10'2679767239'\n          DC   CL10'2682008352'\n          DC   CL10'2685466240'\n          DC   CL10'2693983276'\n          DC   CL10'2695284092'\n          DC   CL10'2703499802'\n          DC   CL10'2722314424'\n          DC   CL10'2724557663'\n          DC   CL10'2726348003'\n          DC   CL10'2740708470'\n          DC   CL10'2756790530'\n          DC   CL10'2764666071'\n          DC   CL10'2807857653'\n          DC   CL10'2813767803'\n          DC   CL10'2816227704'\n          DC   CL10'2836247091'\n          DC   CL10'2836687970'\n          DC   CL10'2847713657'\n          DC   CL10'2863161645'\n          DC   CL10'2868240302'\n          DC   CL10'2882509469'\n          DC   CL10'2883441128'\n          DC   CL10'2884145001'\n          DC   CL10'2886269710'\n          DC   CL10'2890004371'\n          DC   CL10'2901437526'\n          DC   CL10'2908096078'\n          DC   CL10'2918179151'\n          DC   CL10'2924990815'\n          DC   CL10'2925865139'\n          DC   CL10'2943078847'\n          DC   CL10'2978879793'\n          DC   CL10'2979680261'\n          DC   CL10'2987837853'\n          DC   CL10'2989933983'\n          DC   CL10'3009924766'\n          DC   CL10'3010102732'\n          DC   CL10'3015620511'\n          DC   CL10'3020793152'\n          DC   CL10'3026659535'\n          DC   CL10'3032523980'\n          DC   CL10'3049097295'\n          DC   CL10'3077327176'\n          DC   CL10'3079859595'\n          DC   CL10'3081869339'\n          DC   CL10'3083893881'\n          DC   CL10'3090555978'\n          DC   CL10'3092155047'\n          DC   CL10'3092863149'\n          DC   CL10'3114643592'\n          DC   CL10'3133986654'\n          DC   CL10'3139779380'\n          DC   CL10'3152278214'\n          DC   CL10'3157858597'\n          DC   CL10'3184472762'\n          DC   CL10'3186535891'\n          DC   CL10'3199523856'\n          DC   CL10'3232136869'\n          DC   CL10'3246054935'\n          DC   CL10'3248183233'\n          DC   CL10'3256786735'\n          DC   CL10'3262132801'\n          DC   CL10'3269783286'\n          DC   CL10'3277199285'\n          DC   CL10'3295843454'\n          DC   CL10'3297999589'\n          DC   CL10'3319616438'\n          DC   CL10'3325756816'\n          DC   CL10'3327808029'\n          DC   CL10'3338981601'\n          DC   CL10'3344508515'\n          DC   CL10'3345279264'\n          DC   CL10'3353162830'\n          DC   CL10'3358601905'\n          DC   CL10'3364087686'\n          DC   CL10'3367090129'\n          DC   CL10'3385869120'\n          DC   CL10'3387803789'\n          DC   CL10'3402810761'\n          DC   CL10'3410613712'\n          DC   CL10'3415624636'\n          DC   CL10'3416289223'\n          DC   CL10'3425687957'\n          DC   CL10'3428793268'\n          DC   CL10'3430673539'\n          DC   CL10'3452683833'\n          DC   CL10'3463687713'\n          DC   CL10'3496725929'\n          DC   CL10'3505005889'\n          DC   CL10'3531089061'\n          DC   CL10'3544489840'\n          DC   CL10'3548439886'\n          DC   CL10'3566158281'\n          DC   CL10'3578295917'\n          DC   CL10'3606218529'\n          DC   CL10'3609960123'\n          DC   CL10'3621038015'\n          DC   CL10'3625252117'\n          DC   CL10'3627055019'\n          DC   CL10'3635946109'\n          DC   CL10'3655561888'\n          DC   CL10'3658796578'\n          DC   CL10'3665273648'\n          DC   CL10'3665932525'\n          DC   CL10'3673647154'\n          DC   CL10'3682736375'\n          DC   CL10'3694896336'\n          DC   CL10'3698845784'\n          DC   CL10'3704809623'\n          DC   CL10'3707569144'\n          DC   CL10'3708816466'\n          DC   CL10'3715241774'\n          DC   CL10'3737691656'\n          DC   CL10'3741778199'\n          DC   CL10'3755663894'\n          DC   CL10'3758750173'\n          DC   CL10'3772702776'\n          DC   CL10'3777461584'\n          DC   CL10'3787896571'\n          DC   CL10'3795936465'\n          DC   CL10'3801898777'\n          DC   CL10'3815888699'\n          DC   CL10'3825916938'\n          DC   CL10'3829666331'\n          DC   CL10'3830408962'\n          DC   CL10'3835275994'\n          DC   CL10'3839559432'\n          DC   CL10'3839616878'\n          DC   CL10'3842431364'\n          DC   CL10'3845774769'\n          DC   CL10'3871130565'\n          DC   CL10'3888423157'\n          DC   CL10'3889103631'\n          DC   CL10'3893656452'\n          DC   CL10'3893799393'\n          DC   CL10'3903243195'\n          DC   CL10'3912149423'\n          DC   CL10'3927724004'\n          DC   CL10'3930991335'\n          DC   CL10'3946441022'\n          DC   CL10'3951386821'\n          DC   CL10'3954741049'\n          DC   CL10'3968593246'\n          DC   CL10'3980200299'\n          DC   CL10'3994269823'\n          DC   CL10'4032829857'\n          DC   CL10'4041091177'\n          DC   CL10'4052483870'\n          DC   CL10'4054368798'\n          DC   CL10'4058524665'\n          DC   CL10'4082518764'\n          DC   CL10'4087244297'\n          DC   CL10'4109725090'\n          DC   CL10'4126998063'\n          DC   CL10'4141332115'\n          DC   CL10'4146105391'\n          DC   CL10'4165437910'\n          DC   CL10'4193813874'\n          DC   CL10'4213406110'\n          DC   CL10'4225518754'\n          DC   CL10'4233008317'\n          DC   CL10'4234405322'\n          DC   CL10'4245641000'\n          DC   CL10'4250573220'\n          DC   CL10'4255455557'\n          DC   CL10'4261367795'\n          DC   CL10'4278411030'\n          DC   CL10'4293029016'\n          DC   CL10'4304448398'\n          DC   CL10'4306179254'\n          DC   CL10'4332924734'\n          DC   CL10'4339308153'\n          DC   CL10'4341809837'\n          DC   CL10'4342046037'\n          DC   CL10'4354048918'\n          DC   CL10'4361475807'\n          DC   CL10'4361988925'\n          DC   CL10'4365677512'\n          DC   CL10'4365695641'\n          DC   CL10'4367068462'\n          DC   CL10'4374982729'\n          DC   CL10'4376019850'\n          DC   CL10'4382148265'\n          DC   CL10'4395321328'\n          DC   CL10'4399652566'\n          DC   CL10'4399889973'\n          DC   CL10'4403915745'\n          DC   CL10'4415227580'\n          DC   CL10'4420964547'\n          DC   CL10'4425250854'\n          DC   CL10'4440349726'\n          DC   CL10'4442600677'\n          DC   CL10'4446271569'\n          DC   CL10'4452119323'\n          DC   CL10'4455138672'\n          DC   CL10'4459585269'\n          DC   CL10'4480439106'\n          DC   CL10'4499203387'\n          DC   CL10'4501837884'\n          DC   CL10'4511944944'\n          DC   CL10'4515414182'\n          DC   CL10'4525397489'\n          DC   CL10'4531464162'\n          DC   CL10'4532128318'\n          DC   CL10'4539127550'\n          DC   CL10'4541806875'\n          DC   CL10'4542498305'\n          DC   CL10'4564553568'\n          DC   CL10'4571377709'\n          DC   CL10'4578912800'\n          DC   CL10'4606150105'\n          DC   CL10'4615307402'\n          DC   CL10'4676559607'\n          DC   CL10'4677868018'\n          DC   CL10'4691403480'\n          DC   CL10'4708979219'\n          DC   CL10'4711251680'\n          DC   CL10'4717926359'\n          DC   CL10'4718112570'\n          DC   CL10'4718828567'\n          DC   CL10'4722569401'\n          DC   CL10'4731985446'\n          DC   CL10'4733686614'\n          DC   CL10'4746081896'\n          DC   CL10'4760993077'\n          DC   CL10'4772569573'\n          DC   CL10'4775657044'\n          DC   CL10'4784105826'\n          DC   CL10'4788384767'\n          DC   CL10'4796208846'\n          DC   CL10'4807640041'\n          DC   CL10'4818917707'\n          DC   CL10'4825735132'\n          DC   CL10'4826671921'\n          DC   CL10'4834267841'\n          DC   CL10'4838670864'\n          DC   CL10'4840642324'\n          DC   CL10'4851436890'\n          DC   CL10'4868476778'\n          DC   CL10'4884001528'\n          DC   CL10'4894180366'\n          DC   CL10'4909094411'\n          DC   CL10'4924053684'\n          DC   CL10'4932226772'\n          DC   CL10'4963999866'\n          DC   CL10'4976581420'\n          DC   CL10'4988242159'\n          DC   CL10'4997957903'\n          DC   CL10'5001541312'\n          DC   CL10'5012943915'\n          DC   CL10'5022145245'\n          DC   CL10'5025088118'\n          DC   CL10'5031739843'\n          DC   CL10'5061464234'\n          DC   CL10'5062777099'\n          DC   CL10'5081606619'\n          DC   CL10'5085358271'\n          DC   CL10'5097340862'\n          DC   CL10'5131008598'\n          DC   CL10'5136707186'\n          DC   CL10'5137829773'\n          DC   CL10'5138392919'\n          DC   CL10'5141292181'\n          DC   CL10'5148786272'\n          DC   CL10'5167188055'\n          DC   CL10'5170458496'\n          DC   CL10'5171457235'\n          DC   CL10'5173509412'\n          DC   CL10'5175852258'\n          DC   CL10'5176912171'\n          DC   CL10'5184641688'\n          DC   CL10'5195953924'\n          DC   CL10'5201121972'\n          DC   CL10'5201791491'\n          DC   CL10'5212207442'\n          DC   CL10'5237405495'\n          DC   CL10'5241948690'\n          DC   CL10'5248438067'\n          DC   CL10'5264958561'\n          DC   CL10'5280097813'\n          DC   CL10'5297165057'\n          DC   CL10'5298755992'\n          DC   CL10'5300159981'\n          DC   CL10'5321710355'\n          DC   CL10'5337606906'\n          DC   CL10'5345334579'\n          DC   CL10'5371357959'\n          DC   CL10'5385074372'\n          DC   CL10'5395385796'\n          DC   CL10'5397272711'\n          DC   CL10'5401039694'\n          DC   CL10'5425916378'\n          DC   CL10'5431977508'\n          DC   CL10'5433720236'\n          DC   CL10'5442562396'\n          DC   CL10'5449773212'\n          DC   CL10'5456759873'\n          DC   CL10'5457552652'\n          DC   CL10'5475656321'\n          DC   CL10'5506681939'\n          DC   CL10'5508940292'\n          DC   CL10'5526397503'\n          DC   CL10'5534401507'\n          DC   CL10'5549481728'\n          DC   CL10'5558764121'\n          DC   CL10'5561094977'\n          DC   CL10'5563765185'\n          DC   CL10'5565101216'\n          DC   CL10'5572035250'\n          DC   CL10'5576869845'\n          DC   CL10'5591433733'\n          DC   CL10'5596327164'\n          DC   CL10'5614513448'\n          DC   CL10'5619387353'\n          DC   CL10'5621486760'\n          DC   CL10'5626236138'\n          DC   CL10'5627716670'\n          DC   CL10'5641763691'\n          DC   CL10'5642391145'\n          DC   CL10'5642531085'\n          DC   CL10'5643322010'\n          DC   CL10'5653365020'\n          DC   CL10'5663840721'\n          DC   CL10'5675001931'\n          DC   CL10'5675989559'\n          DC   CL10'5679881257'\n          DC   CL10'5701796697'\n          DC   CL10'5705291655'\n          DC   CL10'5707472066'\n          DC   CL10'5707681244'\n          DC   CL10'5725273168'\n          DC   CL10'5735000362'\n          DC   CL10'5744251794'\n          DC   CL10'5750582397'\n          DC   CL10'5764563450'\n          DC   CL10'5765477779'\n          DC   CL10'5768466287'\n          DC   CL10'5778297253'\n          DC   CL10'5781827937'\n          DC   CL10'5792681088'\n          DC   CL10'5823087664'\n          DC   CL10'5826049791'\n          DC   CL10'5852626081'\n          DC   CL10'5859069484'\n          DC   CL10'5871856400'\n          DC   CL10'5879594685'\n          DC   CL10'5923848700'\n          DC   CL10'5930920717'\n          DC   CL10'5939740534'\n          DC   CL10'5945977008'\n          DC   CL10'5953591351'\n          DC   CL10'5974120497'\n          DC   CL10'5980530023'\n          DC   CL10'5982500270'\n          DC   CL10'6013020304'\n          DC   CL10'6017590576'\n          DC   CL10'6027151395'\n          DC   CL10'6031477613'\n          DC   CL10'6034259879'\n          DC   CL10'6034977111'\n          DC   CL10'6038224205'\n          DC   CL10'6040047313'\n          DC   CL10'6042427892'\n          DC   CL10'6046911354'\n          DC   CL10'6055320835'\n          DC   CL10'6071816834'\n          DC   CL10'6076953748'\n          DC   CL10'6078781716'\n          DC   CL10'6089806179'\n          DC   CL10'6102241319'\n          DC   CL10'6111881741'\n          DC   CL10'6114026406'\n          DC   CL10'6131336255'\n          DC   CL10'6153092070'\n          DC   CL10'6176508218'\n          DC   CL10'6189589095'\n          DC   CL10'6195575064'\n          DC   CL10'6214334476'\n          DC   CL10'6214652858'\n          DC   CL10'6219336562'\n          DC   CL10'6274959967'\n          DC   CL10'6277765141'\n          DC   CL10'6291772134'\n          DC   CL10'6299003602'\n          DC   CL10'6301600736'\n          DC   CL10'6309461069'\n          DC   CL10'6316443356'\n          DC   CL10'6321644499'\n          DC   CL10'6340650247'\n          DC   CL10'6362585477'\n          DC   CL10'6378346611'\n          DC   CL10'6380603394'\n          DC   CL10'6392883433'\n          DC   CL10'6401696170'\n          DC   CL10'6405784661'\n          DC   CL10'6410072367'\n          DC   CL10'6419378045'\n          DC   CL10'6420659456'\n          DC   CL10'6423082237'\n          DC   CL10'6441887377'\n          DC   CL10'6491948418'\n          DC   CL10'6492977996'\n          DC   CL10'6526299792'\n          DC   CL10'6536513368'\n          DC   CL10'6565462961'\n          DC   CL10'6583467513'\n          DC   CL10'6610884504'\n          DC   CL10'6617160065'\n          DC   CL10'6619899880'\n          DC   CL10'6620218026'\n          DC   CL10'6632012192'\n          DC   CL10'6634201034'\n          DC   CL10'6640171757'\n          DC   CL10'6650685307'\n          DC   CL10'6656036861'\n          DC   CL10'6706822399'\n          DC   CL10'6708832431'\n          DC   CL10'6743900337'\n          DC   CL10'6744618021'\n          DC   CL10'6745219809'\n          DC   CL10'6750654554'\n          DC   CL10'6750835075'\n          DC   CL10'6758118765'\n          DC   CL10'6768877384'\n          DC   CL10'6788433333'\n          DC   CL10'6795597451'\n          DC   CL10'6819051409'\n          DC   CL10'6824188618'\n          DC   CL10'6829686930'\n          DC   CL10'6834837074'\n          DC   CL10'6837439723'\n          DC   CL10'6876599643'\n          DC   CL10'6879934131'\n          DC   CL10'6882383883'\n          DC   CL10'6906496238'\n          DC   CL10'6915994267'\n          DC   CL10'6941536678'\n          DC   CL10'6959831086'\n          DC   CL10'6980841188'\n          DC   CL10'6984337341'\n          DC   CL10'6999538714'\n          DC   CL10'7014869731'\n          DC   CL10'7020490806'\n          DC   CL10'7024630382'\n          DC   CL10'7025953068'\n          DC   CL10'7031389620'\n          DC   CL10'7039033783'\n          DC   CL10'7043099673'\n          DC   CL10'7059883683'\n          DC   CL10'7072494621'\n          DC   CL10'7078217222'\n          DC   CL10'7093977808'\n          DC   CL10'7138113868'\n          DC   CL10'7170701585'\n          DC   CL10'7175433348'\n          DC   CL10'7177468298'\n          DC   CL10'7191388279'\n          DC   CL10'7206997982'\n          DC   CL10'7211070860'\n          DC   CL10'7211151702'\n          DC   CL10'7221527032'\n          DC   CL10'7224666599'\n          DC   CL10'7228989035'\n          DC   CL10'7257486349'\n          DC   CL10'7260553248'\n          DC   CL10'7263703419'\n          DC   CL10'7278163786'\n          DC   CL10'7292854960'\n          DC   CL10'7295504370'\n          DC   CL10'7328744136'\n          DC   CL10'7341681867'\n          DC   CL10'7349775632'\n          DC   CL10'7360355280'\n          DC   CL10'7366688666'\n          DC   CL10'7378402421'\n          DC   CL10'7379753810'\n          DC   CL10'7385386989'\n          DC   CL10'7400995389'\n          DC   CL10'7403393048'\n          DC   CL10'7416875787'\n          DC   CL10'7419152479'\n          DC   CL10'7448619971'\n          DC   CL10'7457852404'\n          DC   CL10'7465038901'\n          DC   CL10'7473093184'\n          DC   CL10'7476835831'\n          DC   CL10'7479549097'\n          DC   CL10'7496108098'\n          DC   CL10'7524793289'\n          DC   CL10'7529154440'\n          DC   CL10'7537430309'\n          DC   CL10'7539954682'\n          DC   CL10'7540592790'\n          DC   CL10'7555744266'\n          DC   CL10'7591761928'\n          DC   CL10'7624869674'\n          DC   CL10'7627426114'\n          DC   CL10'7665518013'\n          DC   CL10'7667230087'\n          DC   CL10'7675776278'\n          DC   CL10'7679716679'\n          DC   CL10'7681142671'\n          DC   CL10'7681922140'\n          DC   CL10'7686790093'\n          DC   CL10'7686947369'\n          DC   CL10'7690923006'\n          DC   CL10'7699537531'\n          DC   CL10'7724354542'\n          DC   CL10'7726068392'\n          DC   CL10'7734167553'\n          DC   CL10'7743096849'\n          DC   CL10'7777348521'\n          DC   CL10'7783677062'\n          DC   CL10'7785283283'\n          DC   CL10'7789745740'\n          DC   CL10'7799100194'\n          DC   CL10'7805934460'\n          DC   CL10'7808769493'\n          DC   CL10'7817561428'\n          DC   CL10'7846276005'\n          DC   CL10'7848321487'\n          DC   CL10'7869520770'\n          DC   CL10'7876388204'\n          DC   CL10'7880707913'\n          DC   CL10'7896530724'\n          DC   CL10'7899381782'\n          DC   CL10'7952915161'\n          DC   CL10'7964352758'\n          DC   CL10'7968945590'\n          DC   CL10'7979475780'\n          DC   CL10'7996608718'\n          DC   CL10'8003680043'\n          DC   CL10'8006156056'\n          DC   CL10'8014572229'\n          DC   CL10'8027939593'\n          DC   CL10'8040889696'\n          DC   CL10'8041396877'\n          DC   CL10'8048427256'\n          DC   CL10'8074041252'\n          DC   CL10'8078001788'\n          DC   CL10'8081562472'\n          DC   CL10'8091838842'\n          DC   CL10'8091839855'\n          DC   CL10'8099335130'\n          DC   CL10'8118801689'\n          DC   CL10'8123221991'\n          DC   CL10'8127785251'\n          DC   CL10'8131002824'\n          DC   CL10'8133182954'\n          DC   CL10'8155628498'\n          DC   CL10'8162793635'\n          DC   CL10'8174979342'\n          DC   CL10'8176019027'\n          DC   CL10'8196379523'\n          DC   CL10'8198652458'\n          DC   CL10'8217281228'\n          DC   CL10'8234802647'\n          DC   CL10'8245886326'\n          DC   CL10'8250774014'\n          DC   CL10'8261864974'\n          DC   CL10'8266839060'\n          DC   CL10'8284252649'\n          DC   CL10'8284985610'\n          DC   CL10'8317518932'\n          DC   CL10'8318918560'\n          DC   CL10'8321123142'\n          DC   CL10'8326027594'\n          DC   CL10'8350371692'\n          DC   CL10'8363333191'\n          DC   CL10'8367220073'\n          DC   CL10'8372418425'\n          DC   CL10'8372701490'\n          DC   CL10'8373228818'\n          DC   CL10'8390001046'\n          DC   CL10'8392614976'\n          DC   CL10'8409030217'\n          DC   CL10'8422464137'\n          DC   CL10'8431528200'\n          DC   CL10'8441898124'\n          DC   CL10'8446793887'\n          DC   CL10'8455968518'\n          DC   CL10'8456810072'\n          DC   CL10'8459674825'\n          DC   CL10'8461533533'\n          DC   CL10'8474892202'\n          DC   CL10'8484739956'\n          DC   CL10'8501210340'\n          DC   CL10'8516432844'\n          DC   CL10'8532171439'\n          DC   CL10'8542248852'\n          DC   CL10'8554607545'\n          DC   CL10'8561872344'\n          DC   CL10'8570796738'\n          DC   CL10'8575481588'\n          DC   CL10'8582131225'\n          DC   CL10'8593413955'\n          DC   CL10'8605152358'\n          DC   CL10'8609761388'\n          DC   CL10'8615700059'\n          DC   CL10'8620256478'\n          DC   CL10'8632028785'\n          DC   CL10'8647956104'\n          DC   CL10'8653060920'\n          DC   CL10'8666619291'\n          DC   CL10'8677951242'\n          DC   CL10'8683917119'\n          DC   CL10'8685504552'\n          DC   CL10'8704495042'\n          DC   CL10'8706993147'\n          DC   CL10'8716714630'\n          DC   CL10'8719657413'\n          DC   CL10'8734136429'\n          DC   CL10'8742955537'\n          DC   CL10'8743127805'\n          DC   CL10'8747566951'\n          DC   CL10'8761075556'\n          DC   CL10'8771675995'\n          DC   CL10'8774372180'\n          DC   CL10'8775370196'\n          DC   CL10'8782023945'\n          DC   CL10'8800423169'\n          DC   CL10'8802348898'\n          DC   CL10'8803827781'\n          DC   CL10'8807543455'\n          DC   CL10'8815379839'\n          DC   CL10'8817930819'\n          DC   CL10'8824964249'\n          DC   CL10'8828773871'\n          DC   CL10'8836215227'\n          DC   CL10'8864169622'\n          DC   CL10'8888984259'\n          DC   CL10'8906179273'\n          DC   CL10'8912574126'\n          DC   CL10'8942152936'\n          DC   CL10'8951906361'\n          DC   CL10'8965891650'\n          DC   CL10'8969836178'\n          DC   CL10'8970320500'\n          DC   CL10'8970957201'\n          DC   CL10'8971292916'\n          DC   CL10'8972698172'\n          DC   CL10'8973826215'\n          DC   CL10'8977793548'\n          DC   CL10'8979968036'\n          DC   CL10'8986560851'\n          DC   CL10'8986613327'\n          DC   CL10'8990850471'\n          DC   CL10'8992443407'\n          DC   CL10'8996009174'\n          DC   CL10'9008293509'\n          DC   CL10'9020317555'\n          DC   CL10'9071539357'\n          DC   CL10'9078253445'\n          DC   CL10'9082725435'\n          DC   CL10'9142951241'\n          DC   CL10'9145381274'\n          DC   CL10'9159017410'\n          DC   CL10'9172277739'\n          DC   CL10'9188307050'\n          DC   CL10'9195709541'\n          DC   CL10'9216384444'\n          DC   CL10'9222373637'\n          DC   CL10'9225330314'\n          DC   CL10'9289664100'\n          DC   CL10'9315691904'\n          DC   CL10'9321130226'\n          DC   CL10'9334903211'\n          DC   CL10'9336349912'\n          DC   CL10'9342886112'\n          DC   CL10'9354071150'\n          DC   CL10'9378133933'\n          DC   CL10'9394383633'\n          DC   CL10'9411106082'\n          DC   CL10'9420163039'\n          DC   CL10'9425802615'\n          DC   CL10'9461157722'\n          DC   CL10'9469873148'\n          DC   CL10'9473843829'\n          DC   CL10'9477987603'\n          DC   CL10'9477994206'\n          DC   CL10'9481197146'\n          DC   CL10'9494810997'\n          DC   CL10'9497186417'\n          DC   CL10'9501170379'\n          DC   CL10'9503089882'\n          DC   CL10'9528779605'\n          DC   CL10'9530143232'\n          DC   CL10'9544350467'\n          DC   CL10'9557093720'\n          DC   CL10'9574480990'\n          DC   CL10'9576662885'\n          DC   CL10'9580332461'\n          DC   CL10'9580829481'\n          DC   CL10'9592186524'\n          DC   CL10'9597634183'\n          DC   CL10'9600087963'\n          DC   CL10'9617348080'\n          DC   CL10'9629518012'\n          DC   CL10'9637885520'\n          DC   CL10'9639982642'\n          DC   CL10'9650793422'\n          DC   CL10'9672913948'\n          DC   CL10'9690965116'\n          DC   CL10'9691804662'\n          DC   CL10'9694554596'\n          DC   CL10'9713710832'\n          DC   CL10'9728537463'\n          DC   CL10'9734751332'\n          DC   CL10'9749315054'\n          DC   CL10'9767784033'\n          DC   CL10'9773777703'\n          DC   CL10'9782229122'\n          DC   CL10'9792422084'\n          DC   CL10'9825592300'\n          DC   CL10'9850258624'\n          DC   CL10'9875426701'\n          DC   CL10'9883029293'\n          DC   CL10'9886176900'\n          DC   CL10'9911241979'\n          DC   CL10'9919451101'\n          DC   CL10'9924773051'\n          DC   CL10'9946619993'\n          DC   CL10'9967522275'\n          DC   CL10'9984956820'\n          DC   CL10'9987216646'\nLASTUN   EQU   *-10\nDUMMY    DC    XL10'FFFFFFFFFFFFFFFFFFFF'\n*\nTIMETBL  DC    1000F'0'           SEARCH TIMES\nBSRCH1   CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'BINARY SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R1,1                L <- 1\n         LA    R2,1000             U <- N\n         B     MIDPT\nADJHIGH  BE SUCCESS\n         LA    R1,1(R3)            L <- I+1\nMIDPT    LR    R3,R1               I <- L\n         AR    R3,R2               I <- L+U\n         SRL   R3,1\n         CR    R1,R3\n         BH    FAIL\nCOMPARE  LR    R5,R3\n         BCTR  R5,0\n         M     R4,=F'10'\n         A     R5,=A(SRCHTBL)\n         CLC   KEY,0(R5)           KEY GE TABLE(I) ?\n         BNL   ADJHIGH             YES\nADJLOW   LR    R2,R3\n         BCTR  R2,0                U <- I-1\n         B     MIDPT\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         LA    R3,TIMETBL\n         LA    R2,16\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'16'           AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00058": {"ttr": 17670, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01\\x18\\x01\\x18\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 280, "newlines": 280, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL UBINSRCH',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00058'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'UNIFORM BINARY SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        19 OCT 1983 - CHARLES HOTTEL                                 *\n*        UNIFORM BINARY SEARCH                                        *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 411 - 412.                                *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nUBINSRCH START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         LA    R7,TIMETBL          POINT TO TIME TABLE\n         LA    R6,16\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,3(R8)            NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nTIMETBL  DC    16F'0'              SEARCH TIMES\nKEY      DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nDUMMY    DC    X'000000'\nSRCHTBL  DC    CL3'061'\n         DC    CL3'087'\n         DC    CL3'154'\n         DC    CL3'170'\n         DC    CL3'275'\n         DC    CL3'426'\n         DC    CL3'503'\n         DC    CL3'509'\n         DC    CL3'512'\n         DC    CL3'612'\n         DC    CL3'653'\n         DC    CL3'677'\n         DC    CL3'703'\n         DC    CL3'765'\n         DC    CL3'897'\n         DC    CL3'908'\nLASTUN   EQU   *-3\n*\n         DS    0F\nDELTA    EQU   *\n         DC    F'8'\n         DC    F'4'\n         DC    F'2'\n         DC    F'1'\n         DC    F'1'\n         DC    F'0'\n*\nUBSRCH1  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'UNIFORM BINARY SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R1,8                I <- (N+1) / 2\n         LA    R2,DELTA+4          J <- A(DELTA(2))\n         B     H2\nH3       BE    SUCCESS             K = K(I) ?\n         LTR   R3,R3               DELTA(J) = ZERO?\n         BZ    FAIL\n         SR    R1,R3               I <- I-DELTA(J)\nH5       LA    R2,4(R2)            BUMP J\nH2       L     R3,0(R2)            GET DELTA(J)\n         LR    R5,R1\n         BCTR  R5,0\n         M     R4,=F'3'\n         A     R5,=A(SRCHTBL)\n         CLC   KEY,0(R5)           KEY LE TABLE(I)?\n         BNH   H3                  YES\n         AR    R1,R3               I <- I + DELTA(J)\n         LTR   R3,R3               DELTA(J) = ZERO?\n         BNZ   H5\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         LA    R3,TIMETBL\n         LA    R2,16\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'16'           AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00059": {"ttr": 17921, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x04\\xf7\\x04\\xf7\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1271, "newlines": 1271, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL UBINSRCH',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00059'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'UNIFORM BINARY SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        19 OCT 1983 - CHARLES HOTTEL                                 *\n*        UNIFORM BINARY SEARCH                                        *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 411 - 412.                                *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nUBINSRCH START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         LA    R7,TIMETBL          POINT TO TIME TABLE\n         LA    R6,1000\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,10(R8)           NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nKEY      DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nDUMMY    DC    XL10'00000000000000000000'\nSRCHTBL   EQU  *\n          DC   CL10'0021777608'\n          DC   CL10'0027612669'\n          DC   CL10'0044709516'\n          DC   CL10'0063381812'\n          DC   CL10'0109127207'\n          DC   CL10'0110866296'\n          DC   CL10'0119215494'\n          DC   CL10'0124102660'\n          DC   CL10'0125735609'\n          DC   CL10'0129905505'\n          DC   CL10'0131160193'\n          DC   CL10'0159383950'\n          DC   CL10'0201923441'\n          DC   CL10'0213162155'\n          DC   CL10'0216719243'\n          DC   CL10'0217211427'\n          DC   CL10'0218026627'\n          DC   CL10'0241754751'\n          DC   CL10'0242199350'\n          DC   CL10'0243554165'\n          DC   CL10'0244567532'\n          DC   CL10'0246582414'\n          DC   CL10'0265668719'\n          DC   CL10'0269317263'\n          DC   CL10'0287224727'\n          DC   CL10'0295004946'\n          DC   CL10'0295810742'\n          DC   CL10'0298867763'\n          DC   CL10'0304818949'\n          DC   CL10'0333506667'\n          DC   CL10'0341973416'\n          DC   CL10'0342069814'\n          DC   CL10'0347745052'\n          DC   CL10'0350150475'\n          DC   CL10'0356352558'\n          DC   CL10'0374688198'\n          DC   CL10'0378208449'\n          DC   CL10'0383088094'\n          DC   CL10'0391251011'\n          DC   CL10'0397635966'\n          DC   CL10'0404123135'\n          DC   CL10'0407531659'\n          DC   CL10'0411859804'\n          DC   CL10'0415728203'\n          DC   CL10'0425389343'\n          DC   CL10'0430176038'\n          DC   CL10'0438108163'\n          DC   CL10'0438663301'\n          DC   CL10'0457377863'\n          DC   CL10'0470272897'\n          DC   CL10'0472398811'\n          DC   CL10'0483312294'\n          DC   CL10'0485448434'\n          DC   CL10'0495310799'\n          DC   CL10'0496791189'\n          DC   CL10'0510649893'\n          DC   CL10'0511433940'\n          DC   CL10'0511646625'\n          DC   CL10'0517639587'\n          DC   CL10'0518520315'\n          DC   CL10'0541991360'\n          DC   CL10'0544933583'\n          DC   CL10'0588657390'\n          DC   CL10'0612793626'\n          DC   CL10'0616034514'\n          DC   CL10'0622321914'\n          DC   CL10'0637516947'\n          DC   CL10'0647477320'\n          DC   CL10'0647777208'\n          DC   CL10'0661744102'\n          DC   CL10'0667273759'\n          DC   CL10'0670956338'\n          DC   CL10'0681335564'\n          DC   CL10'0686500629'\n          DC   CL10'0686700231'\n          DC   CL10'0714777108'\n          DC   CL10'0722588209'\n          DC   CL10'0743022964'\n          DC   CL10'0756256838'\n          DC   CL10'0804677453'\n          DC   CL10'0826611007'\n          DC   CL10'0847201640'\n          DC   CL10'0855215859'\n          DC   CL10'0857169190'\n          DC   CL10'0866220927'\n          DC   CL10'0869536638'\n          DC   CL10'0894127953'\n          DC   CL10'0894858606'\n          DC   CL10'0906281426'\n          DC   CL10'0907157687'\n          DC   CL10'0919922282'\n          DC   CL10'0928009527'\n          DC   CL10'0930832968'\n          DC   CL10'0932853941'\n          DC   CL10'0951309693'\n          DC   CL10'0967769107'\n          DC   CL10'0978045612'\n          DC   CL10'1004535486'\n          DC   CL10'1008725474'\n          DC   CL10'1009393768'\n          DC   CL10'1021634133'\n          DC   CL10'1026839376'\n          DC   CL10'1028796002'\n          DC   CL10'1034528113'\n          DC   CL10'1036074096'\n          DC   CL10'1036622827'\n          DC   CL10'1045950143'\n          DC   CL10'1047261909'\n          DC   CL10'1053803551'\n          DC   CL10'1055817303'\n          DC   CL10'1070588771'\n          DC   CL10'1090578040'\n          DC   CL10'1094183483'\n          DC   CL10'1102965965'\n          DC   CL10'1113496985'\n          DC   CL10'1124826024'\n          DC   CL10'1169066430'\n          DC   CL10'1170852922'\n          DC   CL10'1175414415'\n          DC   CL10'1175901510'\n          DC   CL10'1176047902'\n          DC   CL10'1182833385'\n          DC   CL10'1209852058'\n          DC   CL10'1229538482'\n          DC   CL10'1252476538'\n          DC   CL10'1262465755'\n          DC   CL10'1283649175'\n          DC   CL10'1293508166'\n          DC   CL10'1300971865'\n          DC   CL10'1309560725'\n          DC   CL10'1334447563'\n          DC   CL10'1343776836'\n          DC   CL10'1366017127'\n          DC   CL10'1406211586'\n          DC   CL10'1416503025'\n          DC   CL10'1428066942'\n          DC   CL10'1432942365'\n          DC   CL10'1444855750'\n          DC   CL10'1448433468'\n          DC   CL10'1448838730'\n          DC   CL10'1465609943'\n          DC   CL10'1469514872'\n          DC   CL10'1478252658'\n          DC   CL10'1481674017'\n          DC   CL10'1487783464'\n          DC   CL10'1493612746'\n          DC   CL10'1506827363'\n          DC   CL10'1510218230'\n          DC   CL10'1510752158'\n          DC   CL10'1515117817'\n          DC   CL10'1519007403'\n          DC   CL10'1520984600'\n          DC   CL10'1522697574'\n          DC   CL10'1527224381'\n          DC   CL10'1547170224'\n          DC   CL10'1553542330'\n          DC   CL10'1563502577'\n          DC   CL10'1567055502'\n          DC   CL10'1575299923'\n          DC   CL10'1599853705'\n          DC   CL10'1606377408'\n          DC   CL10'1608840747'\n          DC   CL10'1621991737'\n          DC   CL10'1630588698'\n          DC   CL10'1638250572'\n          DC   CL10'1654896952'\n          DC   CL10'1658768311'\n          DC   CL10'1659356334'\n          DC   CL10'1662932899'\n          DC   CL10'1669110221'\n          DC   CL10'1670254329'\n          DC   CL10'1680667485'\n          DC   CL10'1682953374'\n          DC   CL10'1683396492'\n          DC   CL10'1704233907'\n          DC   CL10'1718754999'\n          DC   CL10'1727381522'\n          DC   CL10'1730008644'\n          DC   CL10'1733029984'\n          DC   CL10'1737046676'\n          DC   CL10'1750507756'\n          DC   CL10'1759059386'\n          DC   CL10'1761684083'\n          DC   CL10'1767326447'\n          DC   CL10'1775777708'\n          DC   CL10'1776871076'\n          DC   CL10'1783737437'\n          DC   CL10'1796424079'\n          DC   CL10'1801389277'\n          DC   CL10'1807981546'\n          DC   CL10'1819296715'\n          DC   CL10'1823645616'\n          DC   CL10'1850521488'\n          DC   CL10'1869574749'\n          DC   CL10'1873888347'\n          DC   CL10'1877504009'\n          DC   CL10'1916989089'\n          DC   CL10'1918345822'\n          DC   CL10'1923132262'\n          DC   CL10'1926239473'\n          DC   CL10'1934646582'\n          DC   CL10'1946142617'\n          DC   CL10'1948521828'\n          DC   CL10'1954513695'\n          DC   CL10'1970220975'\n          DC   CL10'1977910306'\n          DC   CL10'1993801028'\n          DC   CL10'1994641628'\n          DC   CL10'2003724911'\n          DC   CL10'2005934797'\n          DC   CL10'2009368031'\n          DC   CL10'2023217125'\n          DC   CL10'2034099345'\n          DC   CL10'2038908934'\n          DC   CL10'2044061926'\n          DC   CL10'2059961681'\n          DC   CL10'2065592775'\n          DC   CL10'2072647459'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'2113148651'\n          DC   CL10'2128795604'\n          DC   CL10'2139096544'\n          DC   CL10'2141578675'\n          DC   CL10'2141727998'\n          DC   CL10'2144637213'\n          DC   CL10'2144977308'\n          DC   CL10'2163772156'\n          DC   CL10'2169298540'\n          DC   CL10'2177375639'\n          DC   CL10'2216813290'\n          DC   CL10'2222675501'\n          DC   CL10'2230174310'\n          DC   CL10'2231104325'\n          DC   CL10'2233677591'\n          DC   CL10'2252189346'\n          DC   CL10'2275690210'\n          DC   CL10'2284873668'\n          DC   CL10'2285848536'\n          DC   CL10'2286342506'\n          DC   CL10'2302069743'\n          DC   CL10'2307633383'\n          DC   CL10'2315437316'\n          DC   CL10'2338259443'\n          DC   CL10'2339574706'\n          DC   CL10'2355329543'\n          DC   CL10'2369764575'\n          DC   CL10'2376377908'\n          DC   CL10'2389120744'\n          DC   CL10'2396911987'\n          DC   CL10'2398938103'\n          DC   CL10'2400421895'\n          DC   CL10'2422232634'\n          DC   CL10'2425747753'\n          DC   CL10'2452295581'\n          DC   CL10'2453201288'\n          DC   CL10'2463397457'\n          DC   CL10'2488720988'\n          DC   CL10'2491407260'\n          DC   CL10'2512272436'\n          DC   CL10'2518972405'\n          DC   CL10'2524558876'\n          DC   CL10'2533023160'\n          DC   CL10'2544618053'\n          DC   CL10'2574915986'\n          DC   CL10'2584106197'\n          DC   CL10'2586698969'\n          DC   CL10'2587130549'\n          DC   CL10'2593365519'\n          DC   CL10'2601564517'\n          DC   CL10'2609800752'\n          DC   CL10'2612833848'\n          DC   CL10'2629152958'\n          DC   CL10'2657748187'\n          DC   CL10'2662116167'\n          DC   CL10'2679767239'\n          DC   CL10'2682008352'\n          DC   CL10'2685466240'\n          DC   CL10'2693983276'\n          DC   CL10'2695284092'\n          DC   CL10'2703499802'\n          DC   CL10'2722314424'\n          DC   CL10'2724557663'\n          DC   CL10'2726348003'\n          DC   CL10'2740708470'\n          DC   CL10'2756790530'\n          DC   CL10'2764666071'\n          DC   CL10'2807857653'\n          DC   CL10'2813767803'\n          DC   CL10'2816227704'\n          DC   CL10'2836247091'\n          DC   CL10'2836687970'\n          DC   CL10'2847713657'\n          DC   CL10'2863161645'\n          DC   CL10'2868240302'\n          DC   CL10'2882509469'\n          DC   CL10'2883441128'\n          DC   CL10'2884145001'\n          DC   CL10'2886269710'\n          DC   CL10'2890004371'\n          DC   CL10'2901437526'\n          DC   CL10'2908096078'\n          DC   CL10'2918179151'\n          DC   CL10'2924990815'\n          DC   CL10'2925865139'\n          DC   CL10'2943078847'\n          DC   CL10'2978879793'\n          DC   CL10'2979680261'\n          DC   CL10'2987837853'\n          DC   CL10'2989933983'\n          DC   CL10'3009924766'\n          DC   CL10'3010102732'\n          DC   CL10'3015620511'\n          DC   CL10'3020793152'\n          DC   CL10'3026659535'\n          DC   CL10'3032523980'\n          DC   CL10'3049097295'\n          DC   CL10'3077327176'\n          DC   CL10'3079859595'\n          DC   CL10'3081869339'\n          DC   CL10'3083893881'\n          DC   CL10'3090555978'\n          DC   CL10'3092155047'\n          DC   CL10'3092863149'\n          DC   CL10'3114643592'\n          DC   CL10'3133986654'\n          DC   CL10'3139779380'\n          DC   CL10'3152278214'\n          DC   CL10'3157858597'\n          DC   CL10'3184472762'\n          DC   CL10'3186535891'\n          DC   CL10'3199523856'\n          DC   CL10'3232136869'\n          DC   CL10'3246054935'\n          DC   CL10'3248183233'\n          DC   CL10'3256786735'\n          DC   CL10'3262132801'\n          DC   CL10'3269783286'\n          DC   CL10'3277199285'\n          DC   CL10'3295843454'\n          DC   CL10'3297999589'\n          DC   CL10'3319616438'\n          DC   CL10'3325756816'\n          DC   CL10'3327808029'\n          DC   CL10'3338981601'\n          DC   CL10'3344508515'\n          DC   CL10'3345279264'\n          DC   CL10'3353162830'\n          DC   CL10'3358601905'\n          DC   CL10'3364087686'\n          DC   CL10'3367090129'\n          DC   CL10'3385869120'\n          DC   CL10'3387803789'\n          DC   CL10'3402810761'\n          DC   CL10'3410613712'\n          DC   CL10'3415624636'\n          DC   CL10'3416289223'\n          DC   CL10'3425687957'\n          DC   CL10'3428793268'\n          DC   CL10'3430673539'\n          DC   CL10'3452683833'\n          DC   CL10'3463687713'\n          DC   CL10'3496725929'\n          DC   CL10'3505005889'\n          DC   CL10'3531089061'\n          DC   CL10'3544489840'\n          DC   CL10'3548439886'\n          DC   CL10'3566158281'\n          DC   CL10'3578295917'\n          DC   CL10'3606218529'\n          DC   CL10'3609960123'\n          DC   CL10'3621038015'\n          DC   CL10'3625252117'\n          DC   CL10'3627055019'\n          DC   CL10'3635946109'\n          DC   CL10'3655561888'\n          DC   CL10'3658796578'\n          DC   CL10'3665273648'\n          DC   CL10'3665932525'\n          DC   CL10'3673647154'\n          DC   CL10'3682736375'\n          DC   CL10'3694896336'\n          DC   CL10'3698845784'\n          DC   CL10'3704809623'\n          DC   CL10'3707569144'\n          DC   CL10'3708816466'\n          DC   CL10'3715241774'\n          DC   CL10'3737691656'\n          DC   CL10'3741778199'\n          DC   CL10'3755663894'\n          DC   CL10'3758750173'\n          DC   CL10'3772702776'\n          DC   CL10'3777461584'\n          DC   CL10'3787896571'\n          DC   CL10'3795936465'\n          DC   CL10'3801898777'\n          DC   CL10'3815888699'\n          DC   CL10'3825916938'\n          DC   CL10'3829666331'\n          DC   CL10'3830408962'\n          DC   CL10'3835275994'\n          DC   CL10'3839559432'\n          DC   CL10'3839616878'\n          DC   CL10'3842431364'\n          DC   CL10'3845774769'\n          DC   CL10'3871130565'\n          DC   CL10'3888423157'\n          DC   CL10'3889103631'\n          DC   CL10'3893656452'\n          DC   CL10'3893799393'\n          DC   CL10'3903243195'\n          DC   CL10'3912149423'\n          DC   CL10'3927724004'\n          DC   CL10'3930991335'\n          DC   CL10'3946441022'\n          DC   CL10'3951386821'\n          DC   CL10'3954741049'\n          DC   CL10'3968593246'\n          DC   CL10'3980200299'\n          DC   CL10'3994269823'\n          DC   CL10'4032829857'\n          DC   CL10'4041091177'\n          DC   CL10'4052483870'\n          DC   CL10'4054368798'\n          DC   CL10'4058524665'\n          DC   CL10'4082518764'\n          DC   CL10'4087244297'\n          DC   CL10'4109725090'\n          DC   CL10'4126998063'\n          DC   CL10'4141332115'\n          DC   CL10'4146105391'\n          DC   CL10'4165437910'\n          DC   CL10'4193813874'\n          DC   CL10'4213406110'\n          DC   CL10'4225518754'\n          DC   CL10'4233008317'\n          DC   CL10'4234405322'\n          DC   CL10'4245641000'\n          DC   CL10'4250573220'\n          DC   CL10'4255455557'\n          DC   CL10'4261367795'\n          DC   CL10'4278411030'\n          DC   CL10'4293029016'\n          DC   CL10'4304448398'\n          DC   CL10'4306179254'\n          DC   CL10'4332924734'\n          DC   CL10'4339308153'\n          DC   CL10'4341809837'\n          DC   CL10'4342046037'\n          DC   CL10'4354048918'\n          DC   CL10'4361475807'\n          DC   CL10'4361988925'\n          DC   CL10'4365677512'\n          DC   CL10'4365695641'\n          DC   CL10'4367068462'\n          DC   CL10'4374982729'\n          DC   CL10'4376019850'\n          DC   CL10'4382148265'\n          DC   CL10'4395321328'\n          DC   CL10'4399652566'\n          DC   CL10'4399889973'\n          DC   CL10'4403915745'\n          DC   CL10'4415227580'\n          DC   CL10'4420964547'\n          DC   CL10'4425250854'\n          DC   CL10'4440349726'\n          DC   CL10'4442600677'\n          DC   CL10'4446271569'\n          DC   CL10'4452119323'\n          DC   CL10'4455138672'\n          DC   CL10'4459585269'\n          DC   CL10'4480439106'\n          DC   CL10'4499203387'\n          DC   CL10'4501837884'\n          DC   CL10'4511944944'\n          DC   CL10'4515414182'\n          DC   CL10'4525397489'\n          DC   CL10'4531464162'\n          DC   CL10'4532128318'\n          DC   CL10'4539127550'\n          DC   CL10'4541806875'\n          DC   CL10'4542498305'\n          DC   CL10'4564553568'\n          DC   CL10'4571377709'\n          DC   CL10'4578912800'\n          DC   CL10'4606150105'\n          DC   CL10'4615307402'\n          DC   CL10'4676559607'\n          DC   CL10'4677868018'\n          DC   CL10'4691403480'\n          DC   CL10'4708979219'\n          DC   CL10'4711251680'\n          DC   CL10'4717926359'\n          DC   CL10'4718112570'\n          DC   CL10'4718828567'\n          DC   CL10'4722569401'\n          DC   CL10'4731985446'\n          DC   CL10'4733686614'\n          DC   CL10'4746081896'\n          DC   CL10'4760993077'\n          DC   CL10'4772569573'\n          DC   CL10'4775657044'\n          DC   CL10'4784105826'\n          DC   CL10'4788384767'\n          DC   CL10'4796208846'\n          DC   CL10'4807640041'\n          DC   CL10'4818917707'\n          DC   CL10'4825735132'\n          DC   CL10'4826671921'\n          DC   CL10'4834267841'\n          DC   CL10'4838670864'\n          DC   CL10'4840642324'\n          DC   CL10'4851436890'\n          DC   CL10'4868476778'\n          DC   CL10'4884001528'\n          DC   CL10'4894180366'\n          DC   CL10'4909094411'\n          DC   CL10'4924053684'\n          DC   CL10'4932226772'\n          DC   CL10'4963999866'\n          DC   CL10'4976581420'\n          DC   CL10'4988242159'\n          DC   CL10'4997957903'\n          DC   CL10'5001541312'\n          DC   CL10'5012943915'\n          DC   CL10'5022145245'\n          DC   CL10'5025088118'\n          DC   CL10'5031739843'\n          DC   CL10'5061464234'\n          DC   CL10'5062777099'\n          DC   CL10'5081606619'\n          DC   CL10'5085358271'\n          DC   CL10'5097340862'\n          DC   CL10'5131008598'\n          DC   CL10'5136707186'\n          DC   CL10'5137829773'\n          DC   CL10'5138392919'\n          DC   CL10'5141292181'\n          DC   CL10'5148786272'\n          DC   CL10'5167188055'\n          DC   CL10'5170458496'\n          DC   CL10'5171457235'\n          DC   CL10'5173509412'\n          DC   CL10'5175852258'\n          DC   CL10'5176912171'\n          DC   CL10'5184641688'\n          DC   CL10'5195953924'\n          DC   CL10'5201121972'\n          DC   CL10'5201791491'\n          DC   CL10'5212207442'\n          DC   CL10'5237405495'\n          DC   CL10'5241948690'\n          DC   CL10'5248438067'\n          DC   CL10'5264958561'\n          DC   CL10'5280097813'\n          DC   CL10'5297165057'\n          DC   CL10'5298755992'\n          DC   CL10'5300159981'\n          DC   CL10'5321710355'\n          DC   CL10'5337606906'\n          DC   CL10'5345334579'\n          DC   CL10'5371357959'\n          DC   CL10'5385074372'\n          DC   CL10'5395385796'\n          DC   CL10'5397272711'\n          DC   CL10'5401039694'\n          DC   CL10'5425916378'\n          DC   CL10'5431977508'\n          DC   CL10'5433720236'\n          DC   CL10'5442562396'\n          DC   CL10'5449773212'\n          DC   CL10'5456759873'\n          DC   CL10'5457552652'\n          DC   CL10'5475656321'\n          DC   CL10'5506681939'\n          DC   CL10'5508940292'\n          DC   CL10'5526397503'\n          DC   CL10'5534401507'\n          DC   CL10'5549481728'\n          DC   CL10'5558764121'\n          DC   CL10'5561094977'\n          DC   CL10'5563765185'\n          DC   CL10'5565101216'\n          DC   CL10'5572035250'\n          DC   CL10'5576869845'\n          DC   CL10'5591433733'\n          DC   CL10'5596327164'\n          DC   CL10'5614513448'\n          DC   CL10'5619387353'\n          DC   CL10'5621486760'\n          DC   CL10'5626236138'\n          DC   CL10'5627716670'\n          DC   CL10'5641763691'\n          DC   CL10'5642391145'\n          DC   CL10'5642531085'\n          DC   CL10'5643322010'\n          DC   CL10'5653365020'\n          DC   CL10'5663840721'\n          DC   CL10'5675001931'\n          DC   CL10'5675989559'\n          DC   CL10'5679881257'\n          DC   CL10'5701796697'\n          DC   CL10'5705291655'\n          DC   CL10'5707472066'\n          DC   CL10'5707681244'\n          DC   CL10'5725273168'\n          DC   CL10'5735000362'\n          DC   CL10'5744251794'\n          DC   CL10'5750582397'\n          DC   CL10'5764563450'\n          DC   CL10'5765477779'\n          DC   CL10'5768466287'\n          DC   CL10'5778297253'\n          DC   CL10'5781827937'\n          DC   CL10'5792681088'\n          DC   CL10'5823087664'\n          DC   CL10'5826049791'\n          DC   CL10'5852626081'\n          DC   CL10'5859069484'\n          DC   CL10'5871856400'\n          DC   CL10'5879594685'\n          DC   CL10'5923848700'\n          DC   CL10'5930920717'\n          DC   CL10'5939740534'\n          DC   CL10'5945977008'\n          DC   CL10'5953591351'\n          DC   CL10'5974120497'\n          DC   CL10'5980530023'\n          DC   CL10'5982500270'\n          DC   CL10'6013020304'\n          DC   CL10'6017590576'\n          DC   CL10'6027151395'\n          DC   CL10'6031477613'\n          DC   CL10'6034259879'\n          DC   CL10'6034977111'\n          DC   CL10'6038224205'\n          DC   CL10'6040047313'\n          DC   CL10'6042427892'\n          DC   CL10'6046911354'\n          DC   CL10'6055320835'\n          DC   CL10'6071816834'\n          DC   CL10'6076953748'\n          DC   CL10'6078781716'\n          DC   CL10'6089806179'\n          DC   CL10'6102241319'\n          DC   CL10'6111881741'\n          DC   CL10'6114026406'\n          DC   CL10'6131336255'\n          DC   CL10'6153092070'\n          DC   CL10'6176508218'\n          DC   CL10'6189589095'\n          DC   CL10'6195575064'\n          DC   CL10'6214334476'\n          DC   CL10'6214652858'\n          DC   CL10'6219336562'\n          DC   CL10'6274959967'\n          DC   CL10'6277765141'\n          DC   CL10'6291772134'\n          DC   CL10'6299003602'\n          DC   CL10'6301600736'\n          DC   CL10'6309461069'\n          DC   CL10'6316443356'\n          DC   CL10'6321644499'\n          DC   CL10'6340650247'\n          DC   CL10'6362585477'\n          DC   CL10'6378346611'\n          DC   CL10'6380603394'\n          DC   CL10'6392883433'\n          DC   CL10'6401696170'\n          DC   CL10'6405784661'\n          DC   CL10'6410072367'\n          DC   CL10'6419378045'\n          DC   CL10'6420659456'\n          DC   CL10'6423082237'\n          DC   CL10'6441887377'\n          DC   CL10'6491948418'\n          DC   CL10'6492977996'\n          DC   CL10'6526299792'\n          DC   CL10'6536513368'\n          DC   CL10'6565462961'\n          DC   CL10'6583467513'\n          DC   CL10'6610884504'\n          DC   CL10'6617160065'\n          DC   CL10'6619899880'\n          DC   CL10'6620218026'\n          DC   CL10'6632012192'\n          DC   CL10'6634201034'\n          DC   CL10'6640171757'\n          DC   CL10'6650685307'\n          DC   CL10'6656036861'\n          DC   CL10'6706822399'\n          DC   CL10'6708832431'\n          DC   CL10'6743900337'\n          DC   CL10'6744618021'\n          DC   CL10'6745219809'\n          DC   CL10'6750654554'\n          DC   CL10'6750835075'\n          DC   CL10'6758118765'\n          DC   CL10'6768877384'\n          DC   CL10'6788433333'\n          DC   CL10'6795597451'\n          DC   CL10'6819051409'\n          DC   CL10'6824188618'\n          DC   CL10'6829686930'\n          DC   CL10'6834837074'\n          DC   CL10'6837439723'\n          DC   CL10'6876599643'\n          DC   CL10'6879934131'\n          DC   CL10'6882383883'\n          DC   CL10'6906496238'\n          DC   CL10'6915994267'\n          DC   CL10'6941536678'\n          DC   CL10'6959831086'\n          DC   CL10'6980841188'\n          DC   CL10'6984337341'\n          DC   CL10'6999538714'\n          DC   CL10'7014869731'\n          DC   CL10'7020490806'\n          DC   CL10'7024630382'\n          DC   CL10'7025953068'\n          DC   CL10'7031389620'\n          DC   CL10'7039033783'\n          DC   CL10'7043099673'\n          DC   CL10'7059883683'\n          DC   CL10'7072494621'\n          DC   CL10'7078217222'\n          DC   CL10'7093977808'\n          DC   CL10'7138113868'\n          DC   CL10'7170701585'\n          DC   CL10'7175433348'\n          DC   CL10'7177468298'\n          DC   CL10'7191388279'\n          DC   CL10'7206997982'\n          DC   CL10'7211070860'\n          DC   CL10'7211151702'\n          DC   CL10'7221527032'\n          DC   CL10'7224666599'\n          DC   CL10'7228989035'\n          DC   CL10'7257486349'\n          DC   CL10'7260553248'\n          DC   CL10'7263703419'\n          DC   CL10'7278163786'\n          DC   CL10'7292854960'\n          DC   CL10'7295504370'\n          DC   CL10'7328744136'\n          DC   CL10'7341681867'\n          DC   CL10'7349775632'\n          DC   CL10'7360355280'\n          DC   CL10'7366688666'\n          DC   CL10'7378402421'\n          DC   CL10'7379753810'\n          DC   CL10'7385386989'\n          DC   CL10'7400995389'\n          DC   CL10'7403393048'\n          DC   CL10'7416875787'\n          DC   CL10'7419152479'\n          DC   CL10'7448619971'\n          DC   CL10'7457852404'\n          DC   CL10'7465038901'\n          DC   CL10'7473093184'\n          DC   CL10'7476835831'\n          DC   CL10'7479549097'\n          DC   CL10'7496108098'\n          DC   CL10'7524793289'\n          DC   CL10'7529154440'\n          DC   CL10'7537430309'\n          DC   CL10'7539954682'\n          DC   CL10'7540592790'\n          DC   CL10'7555744266'\n          DC   CL10'7591761928'\n          DC   CL10'7624869674'\n          DC   CL10'7627426114'\n          DC   CL10'7665518013'\n          DC   CL10'7667230087'\n          DC   CL10'7675776278'\n          DC   CL10'7679716679'\n          DC   CL10'7681142671'\n          DC   CL10'7681922140'\n          DC   CL10'7686790093'\n          DC   CL10'7686947369'\n          DC   CL10'7690923006'\n          DC   CL10'7699537531'\n          DC   CL10'7724354542'\n          DC   CL10'7726068392'\n          DC   CL10'7734167553'\n          DC   CL10'7743096849'\n          DC   CL10'7777348521'\n          DC   CL10'7783677062'\n          DC   CL10'7785283283'\n          DC   CL10'7789745740'\n          DC   CL10'7799100194'\n          DC   CL10'7805934460'\n          DC   CL10'7808769493'\n          DC   CL10'7817561428'\n          DC   CL10'7846276005'\n          DC   CL10'7848321487'\n          DC   CL10'7869520770'\n          DC   CL10'7876388204'\n          DC   CL10'7880707913'\n          DC   CL10'7896530724'\n          DC   CL10'7899381782'\n          DC   CL10'7952915161'\n          DC   CL10'7964352758'\n          DC   CL10'7968945590'\n          DC   CL10'7979475780'\n          DC   CL10'7996608718'\n          DC   CL10'8003680043'\n          DC   CL10'8006156056'\n          DC   CL10'8014572229'\n          DC   CL10'8027939593'\n          DC   CL10'8040889696'\n          DC   CL10'8041396877'\n          DC   CL10'8048427256'\n          DC   CL10'8074041252'\n          DC   CL10'8078001788'\n          DC   CL10'8081562472'\n          DC   CL10'8091838842'\n          DC   CL10'8091839855'\n          DC   CL10'8099335130'\n          DC   CL10'8118801689'\n          DC   CL10'8123221991'\n          DC   CL10'8127785251'\n          DC   CL10'8131002824'\n          DC   CL10'8133182954'\n          DC   CL10'8155628498'\n          DC   CL10'8162793635'\n          DC   CL10'8174979342'\n          DC   CL10'8176019027'\n          DC   CL10'8196379523'\n          DC   CL10'8198652458'\n          DC   CL10'8217281228'\n          DC   CL10'8234802647'\n          DC   CL10'8245886326'\n          DC   CL10'8250774014'\n          DC   CL10'8261864974'\n          DC   CL10'8266839060'\n          DC   CL10'8284252649'\n          DC   CL10'8284985610'\n          DC   CL10'8317518932'\n          DC   CL10'8318918560'\n          DC   CL10'8321123142'\n          DC   CL10'8326027594'\n          DC   CL10'8350371692'\n          DC   CL10'8363333191'\n          DC   CL10'8367220073'\n          DC   CL10'8372418425'\n          DC   CL10'8372701490'\n          DC   CL10'8373228818'\n          DC   CL10'8390001046'\n          DC   CL10'8392614976'\n          DC   CL10'8409030217'\n          DC   CL10'8422464137'\n          DC   CL10'8431528200'\n          DC   CL10'8441898124'\n          DC   CL10'8446793887'\n          DC   CL10'8455968518'\n          DC   CL10'8456810072'\n          DC   CL10'8459674825'\n          DC   CL10'8461533533'\n          DC   CL10'8474892202'\n          DC   CL10'8484739956'\n          DC   CL10'8501210340'\n          DC   CL10'8516432844'\n          DC   CL10'8532171439'\n          DC   CL10'8542248852'\n          DC   CL10'8554607545'\n          DC   CL10'8561872344'\n          DC   CL10'8570796738'\n          DC   CL10'8575481588'\n          DC   CL10'8582131225'\n          DC   CL10'8593413955'\n          DC   CL10'8605152358'\n          DC   CL10'8609761388'\n          DC   CL10'8615700059'\n          DC   CL10'8620256478'\n          DC   CL10'8632028785'\n          DC   CL10'8647956104'\n          DC   CL10'8653060920'\n          DC   CL10'8666619291'\n          DC   CL10'8677951242'\n          DC   CL10'8683917119'\n          DC   CL10'8685504552'\n          DC   CL10'8704495042'\n          DC   CL10'8706993147'\n          DC   CL10'8716714630'\n          DC   CL10'8719657413'\n          DC   CL10'8734136429'\n          DC   CL10'8742955537'\n          DC   CL10'8743127805'\n          DC   CL10'8747566951'\n          DC   CL10'8761075556'\n          DC   CL10'8771675995'\n          DC   CL10'8774372180'\n          DC   CL10'8775370196'\n          DC   CL10'8782023945'\n          DC   CL10'8800423169'\n          DC   CL10'8802348898'\n          DC   CL10'8803827781'\n          DC   CL10'8807543455'\n          DC   CL10'8815379839'\n          DC   CL10'8817930819'\n          DC   CL10'8824964249'\n          DC   CL10'8828773871'\n          DC   CL10'8836215227'\n          DC   CL10'8864169622'\n          DC   CL10'8888984259'\n          DC   CL10'8906179273'\n          DC   CL10'8912574126'\n          DC   CL10'8942152936'\n          DC   CL10'8951906361'\n          DC   CL10'8965891650'\n          DC   CL10'8969836178'\n          DC   CL10'8970320500'\n          DC   CL10'8970957201'\n          DC   CL10'8971292916'\n          DC   CL10'8972698172'\n          DC   CL10'8973826215'\n          DC   CL10'8977793548'\n          DC   CL10'8979968036'\n          DC   CL10'8986560851'\n          DC   CL10'8986613327'\n          DC   CL10'8990850471'\n          DC   CL10'8992443407'\n          DC   CL10'8996009174'\n          DC   CL10'9008293509'\n          DC   CL10'9020317555'\n          DC   CL10'9071539357'\n          DC   CL10'9078253445'\n          DC   CL10'9082725435'\n          DC   CL10'9142951241'\n          DC   CL10'9145381274'\n          DC   CL10'9159017410'\n          DC   CL10'9172277739'\n          DC   CL10'9188307050'\n          DC   CL10'9195709541'\n          DC   CL10'9216384444'\n          DC   CL10'9222373637'\n          DC   CL10'9225330314'\n          DC   CL10'9289664100'\n          DC   CL10'9315691904'\n          DC   CL10'9321130226'\n          DC   CL10'9334903211'\n          DC   CL10'9336349912'\n          DC   CL10'9342886112'\n          DC   CL10'9354071150'\n          DC   CL10'9378133933'\n          DC   CL10'9394383633'\n          DC   CL10'9411106082'\n          DC   CL10'9420163039'\n          DC   CL10'9425802615'\n          DC   CL10'9461157722'\n          DC   CL10'9469873148'\n          DC   CL10'9473843829'\n          DC   CL10'9477987603'\n          DC   CL10'9477994206'\n          DC   CL10'9481197146'\n          DC   CL10'9494810997'\n          DC   CL10'9497186417'\n          DC   CL10'9501170379'\n          DC   CL10'9503089882'\n          DC   CL10'9528779605'\n          DC   CL10'9530143232'\n          DC   CL10'9544350467'\n          DC   CL10'9557093720'\n          DC   CL10'9574480990'\n          DC   CL10'9576662885'\n          DC   CL10'9580332461'\n          DC   CL10'9580829481'\n          DC   CL10'9592186524'\n          DC   CL10'9597634183'\n          DC   CL10'9600087963'\n          DC   CL10'9617348080'\n          DC   CL10'9629518012'\n          DC   CL10'9637885520'\n          DC   CL10'9639982642'\n          DC   CL10'9650793422'\n          DC   CL10'9672913948'\n          DC   CL10'9690965116'\n          DC   CL10'9691804662'\n          DC   CL10'9694554596'\n          DC   CL10'9713710832'\n          DC   CL10'9728537463'\n          DC   CL10'9734751332'\n          DC   CL10'9749315054'\n          DC   CL10'9767784033'\n          DC   CL10'9773777703'\n          DC   CL10'9782229122'\n          DC   CL10'9792422084'\n          DC   CL10'9825592300'\n          DC   CL10'9850258624'\n          DC   CL10'9875426701'\n          DC   CL10'9883029293'\n          DC   CL10'9886176900'\n          DC   CL10'9911241979'\n          DC   CL10'9919451101'\n          DC   CL10'9924773051'\n          DC   CL10'9946619993'\n          DC   CL10'9967522275'\n          DC   CL10'9984956820'\n          DC   CL10'9987216646'\nLASTUN   EQU   *-10\n*\n         DS    0F\nTIMETBL  DC    1000F'0'            SEARCH TIMES\n*\nDELTA    EQU   *\n         DC    F'500'\n         DC    F'250'\n         DC    F'125'\n         DC    F'63'\n         DC    F'31'\n         DC    F'16'\n         DC    F'8'\n         DC    F'2'\n         DC    F'1'\n         DC    F'0'\n         DC    F'0'\n*\nUBSRCH1  CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'UNIFORM BINARY SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R1,500              I <- (N+1) / 2\n         L     R2,=A(DELTA+4)      J <- A(DELTA(2))\n         B     H2\nH3       BE    SUCCESS             K = K(I) ?\n         LTR   R3,R3               DELTA(J) = ZERO?\n         BZ    FAIL\n         SR    R1,R3               I <- I-DELTA(J)\nH5       LA    R2,4(R2)            BUMP J\nH2       L     R3,0(R2)            GET DELTA(J)\n         LR    R5,R1\n         BCTR  R5,0\n         M     R4,=F'10'\n         A     R5,=A(SRCHTBL)\n         CLC   KEY,0(R5)           KEY LE TABLE(I)?\n         BNH   H3                  YES\n         AR    R1,R3               I <- I + DELTA(J)\n         LTR   R3,R3               DELTA(J) = ZERO?\n         BNZ   H5\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         LA    R3,TIMETBL\n         LA    R2,16\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'16'           AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00060": {"ttr": 18435, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x01-\\x01-\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 301, "newlines": 301, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL FIBOSRCH',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00060'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'FIBINACCIAN SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        19 OCT 1983 - CHARLES HOTTEL                                 *\n*        FIBONACCIAN SEARCH                                           *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 414 - 416.                                *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nFIBOSRCH START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         LA    R7,TIMETBL          POINT TO TIME TABLE\n         LA    R6,16\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,3(R8)            NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nTIMETBL  DC    16F'0'              SEARCH TIMES\nKEY      DS    CL3\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nDUMMY    DC    X'000000'\nSRCHTBL  DC    CL3'061'\n         DC    CL3'087'\n         DC    CL3'154'\n         DC    CL3'170'\n         DC    CL3'275'\n         DC    CL3'426'\n         DC    CL3'503'\n         DC    CL3'509'\n         DC    CL3'512'\n         DC    CL3'612'\n         DC    CL3'653'\n         DC    CL3'677'\n         DC    CL3'703'\n         DC    CL3'765'\n         DC    CL3'897'\n         DC    CL3'908'\nLASTUN   EQU   *-3\n*\nFIBSRCH1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'FIBINACCIAN SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R1,13               I <- F(K)\n         LA    R2,7                P <- F(K-1) - 1\n         LA    R3,4                Q <- F(K-2) - 1\n         B     F2A\nF4A      LA    R1,1(R3,R1)         I <- I+Q\n         SR    R2,R3\n         BCTR  R2,0                P <- P-Q\n         SR    R3,R2               Q <- Q-P\n         BCTR  R3,0\nF2A      LR    R5,R1\n         BCTR  R5,0\n         M     R4,=F'3'\n         A     R5,=A(SRCHTBL)\n         CLC   KEY,0(R5)           KEY < TABLE(I)\n         BL    F3A\n         BE    SUCCESS\n         LTR   R2,R2\n         BNZ   F4A\n         B     FAIL\nF3A      SR    R1,R3               I <- I-Q\n         BCTR  R1,0\n         SR    R2,R3               P <- P-Q\n         BCTR  R2,0\n         LTR   R3,R3\n         BNM   F2B\n         B     FAIL\nF4B      LA    R1,1(R2,R1)\n         SR    R3,R2\n         BCTR  R3,0\n         SR    R2,R3\n         BCTR  R2,0\nF2B      LR    R5,R1\n         BCTR  R5,0\n         M     R4,=F'3'\n         A     R5,=A(SRCHTBL)\n         CLC   KEY,0(R5)\n         BL    F3B\n         BE    SUCCESS\n         LTR   R3,R3\n         BNZ   F4B\n         B     FAIL\nF3B      SR    R1,R2\n         BCTR  R1,0\n         SR    R3,R2\n         BCTR  R3,0\n         LTR   R2,R2\n         BNM   F2A\n         B     FAIL\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         LA    R3,TIMETBL\n         LA    R2,16\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'16'           AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00061": {"ttr": 18441, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x05\\x06\\x05\\x06\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 1286, "newlines": 1286, "modlines": 0, "user": "EGHF3PY"}, "text": "//JOBNAME JOB (ACCT,'ROOM-NBR'),'HOTTEL FIBOSRCH',MSGCLASS=S,CLASS=K,\n//  TIME=(,30)\n//PROCLIB JCLLIB ORDER=USERID.DVL.PROC\n//        SET TITLE1='XXX.ASM00061'\n//OUTPUT INCLUDE MEMBER=DESTCH\n//*-------------------------------------------------------------------*\n//*        DISPLAY SYSTEM INFO                                        *\n//*-------------------------------------------------------------------*\n//STEP1    EXEC PGM=COBSYS\n//STEPLIB  DD  DSN=PREFIX.DVL.BATLOAD,DISP=SHR\n//SYSOUT   DD  SYSOUT=*\n//*-------------------------------------------------------------------*\n//*        ASSEMBLY                                                   *\n//*-------------------------------------------------------------------*\n//STEP02   EXEC HLASMCLG\n//C.SYSLIB DD DSN=USERID.MACLIB,DISP=SHR\n//         DD DSN=SYS1.MACLIB,DISP=SHR\n//C.SYSUT2 DD DSN=&&SYSUT2,UNIT=SYSDA,\n//           SPACE=(1700,(600,100))\n//C.SYSPUNCH DD DUMMY\n//C.SYSIN DD *\n         TITLE 'FIBINACCIAN SEARCH'\n         PRINT NOGEN\n*---------------------------------------------------------------------*\n*        19 OCT 1983 - CHARLES HOTTEL                                 *\n*        FIBONACCIAN SEARCH                                           *\n*                                                                     *\n*        THE ART OF COMPUTER PROGRAMMING, SORTING AND SEARCHING,      *\n*        2ND EDITION. PAGES 414 - 416.                                *\n*---------------------------------------------------------------------*\n*        05 SEP 2002 - CHARLES HOTTEL                                 *\n*                                                                     *\n*        UPDATED JCL TO RUN COBSYS COBOL PROGRAM WHICH DISPLAYS       *\n*        SYSTEM INFORMATION. COBSYS WAS WRITTEN BY GILBERT ST. FLOUR. *\n*                                                                     *\n*        CHANGED TIMING ROUTINES TO DISPLAY TIMES IN MICROSECONDS     *\n*        TIMING ROUTINE IS FROM RICK HEVENER'S ARTCILE \"LARGE SYSTEM  *\n*        INSTRUCTION TIMINGS\", TECHNICAL SUPPORT AUGUST 1997.         *\n*---------------------------------------------------------------------*\nFIBOSRCH START\n         STM   R14,R12,12(R13)\n         BALR  R15,0\n         USING *,R15\n         L     R1,MAIN-16\n         ST    R13,4(R1)\n         ST    R1,8(R13)\n         LR    R13,R1\n         LM    R10,R12,MAIN-12\n         DROP  R15\n         USING MAIN,R10,R11,R12\n         B     MAIN\n         DC    A(SAVE,MAIN,MAIN+4096,MAIN+8192)\n*---------------------------------------------------------------------*\n*   MAIN LINE CODE                                                    *\n*---------------------------------------------------------------------*\nMAIN     EQU   *\n         OPEN  (OUTFILE,OUTPUT)\n         STIMER TASK,BINTVL=LONGTIME\n         LA    R8,SRCHTBL          POINT TO SEARCH TABLE\n         L     R7,=A(TIMETBL)      POINT TO TIME TABLE\n         LA    R6,1000\nMAINLOOP MVC   KEY,0(R8)           GET KEY FOR SEARCH\n         CPUTIMER MIC,BGNTIME\n         L     R15,=A(SEARCH)\n         BAL   R14,SENTER          SORT\n         CPUTIMER MIC,ENDTIME\n         L     R15,=A(CALCTIME)\n         BAL   R14,SENTER          CALCULATE MICROSECONDS\n         CLC   0(4,R7),MAXTIME     TIME > MAXTIME?\n         BNH   MAIN03              NO\n         MVC   MAXTIME,0(R7)       SAVE MAXTIME\nMAIN03   LA    R8,10(R8)           NEXT KEY FOR SEARCH\n         LA    R7,4(R7)            POINT NEXT SLOT IN TIME TABLE\n         BCT   R6,MAINLOOP\n         L     R15,=A(PRTRTN)\n         BAL   R14,SENTER          PRINT RESULTS\n         CLOSE (OUTFILE)\nMAIN99   SR    R15,R15\n         B     SEXIT\n         TITLE 'COMMON SUBROUTINE ENTRY/EXIT'\n*\n*   COMMON SUBROUTINE ENTRY\n*\nSENTER   STM   R14,R12,12(R13)\n         C     R13,=A(SAVEND)\n         BL    SENTER1\n         DC    H'0'\n         DC    C'SAVE AREA OVERFLOW'\nSENTER1  LR    R9,R15\n         LA    R15,72(R13)\n         ST    R15,8(R13)\n         ST    R13,4(R15)\n         LR    R13,R15\n         BR    R9\n*\n*   COMMON SUBROUTINE EXIT\n*\nSEXIT    L     R13,4(R13)\n         L     R14,12(R13)\n         LM    R0,R12,20(R13)\n         OI    15(R13),X'01'\n         BR    R14\n         TITLE 'REGISTER EQUATES AND USAGE'\n*\n*   REGISTER EQUATES\n*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9   SENTER BRANCH TO SUBROUTINE, SUBROUTINE USES AS BASE\nR10      EQU   10  BASE REGISTER FOR MAIN\nR11      EQU   11  BASE REGISTER FOR MAIN\nR12      EQU   12  BASE REGISTER FOR MAIN\nR13      EQU   13  SAVE AREA ADDRESS\nR14      EQU   14  SEXIT RETURN ADDRESS\nR15      EQU   15  BRANCH TO ADDRESS, SENTER COPIES TO R9\n*                  RETURN CODE FROM SUBROUTINE\n         TITLE 'LITERALS'\n         LTORG\n         TITLE 'MAIN ROUTINE DATA'\n         EJECT\nOUTFILE  DCB   DSORG=PS,                                               X\n               RECFM=FBA,                                              X\n               MACRF=PM,                                               X\n               BLKSIZE=27930,                                          X\n               LRECL=133,                                              X\n               DDNAME=PRTOUT\n         DS    0D\nDBLWORD  DS    D\nBGNTIME  DS    D                   BEGIN TIME\nENDTIME  DS    D                   END TIME\nLONGTIME DC    F'2E9'\nMAXTIME  DC    F'0'\nKEY      DS    CL10\n*\nTIMEREC  DS    0CL133\n         DC    C'1'\nMSGLABEL DC    CL15'AVERAGE TIME = '\nMSGHOLD  DS    CL15\n         DC    CL14' MICROSECONDS.'\n         DC    CL88' '\n*\nDUMMY    DC    10X'00'\nSRCHTBL   EQU  *\n          DC   CL10'0021777608'\n          DC   CL10'0027612669'\n          DC   CL10'0044709516'\n          DC   CL10'0063381812'\n          DC   CL10'0109127207'\n          DC   CL10'0110866296'\n          DC   CL10'0119215494'\n          DC   CL10'0124102660'\n          DC   CL10'0125735609'\n          DC   CL10'0129905505'\n          DC   CL10'0131160193'\n          DC   CL10'0159383950'\n          DC   CL10'0201923441'\n          DC   CL10'0213162155'\n          DC   CL10'0216719243'\n          DC   CL10'0217211427'\n          DC   CL10'0218026627'\n          DC   CL10'0241754751'\n          DC   CL10'0242199350'\n          DC   CL10'0243554165'\n          DC   CL10'0244567532'\n          DC   CL10'0246582414'\n          DC   CL10'0265668719'\n          DC   CL10'0269317263'\n          DC   CL10'0287224727'\n          DC   CL10'0295004946'\n          DC   CL10'0295810742'\n          DC   CL10'0298867763'\n          DC   CL10'0304818949'\n          DC   CL10'0333506667'\n          DC   CL10'0341973416'\n          DC   CL10'0342069814'\n          DC   CL10'0347745052'\n          DC   CL10'0350150475'\n          DC   CL10'0356352558'\n          DC   CL10'0374688198'\n          DC   CL10'0378208449'\n          DC   CL10'0383088094'\n          DC   CL10'0391251011'\n          DC   CL10'0397635966'\n          DC   CL10'0404123135'\n          DC   CL10'0407531659'\n          DC   CL10'0411859804'\n          DC   CL10'0415728203'\n          DC   CL10'0425389343'\n          DC   CL10'0430176038'\n          DC   CL10'0438108163'\n          DC   CL10'0438663301'\n          DC   CL10'0457377863'\n          DC   CL10'0470272897'\n          DC   CL10'0472398811'\n          DC   CL10'0483312294'\n          DC   CL10'0485448434'\n          DC   CL10'0495310799'\n          DC   CL10'0496791189'\n          DC   CL10'0510649893'\n          DC   CL10'0511433940'\n          DC   CL10'0511646625'\n          DC   CL10'0517639587'\n          DC   CL10'0518520315'\n          DC   CL10'0541991360'\n          DC   CL10'0544933583'\n          DC   CL10'0588657390'\n          DC   CL10'0612793626'\n          DC   CL10'0616034514'\n          DC   CL10'0622321914'\n          DC   CL10'0637516947'\n          DC   CL10'0647477320'\n          DC   CL10'0647777208'\n          DC   CL10'0661744102'\n          DC   CL10'0667273759'\n          DC   CL10'0670956338'\n          DC   CL10'0681335564'\n          DC   CL10'0686500629'\n          DC   CL10'0686700231'\n          DC   CL10'0714777108'\n          DC   CL10'0722588209'\n          DC   CL10'0743022964'\n          DC   CL10'0756256838'\n          DC   CL10'0804677453'\n          DC   CL10'0826611007'\n          DC   CL10'0847201640'\n          DC   CL10'0855215859'\n          DC   CL10'0857169190'\n          DC   CL10'0866220927'\n          DC   CL10'0869536638'\n          DC   CL10'0894127953'\n          DC   CL10'0894858606'\n          DC   CL10'0906281426'\n          DC   CL10'0907157687'\n          DC   CL10'0919922282'\n          DC   CL10'0928009527'\n          DC   CL10'0930832968'\n          DC   CL10'0932853941'\n          DC   CL10'0951309693'\n          DC   CL10'0967769107'\n          DC   CL10'0978045612'\n          DC   CL10'1004535486'\n          DC   CL10'1008725474'\n          DC   CL10'1009393768'\n          DC   CL10'1021634133'\n          DC   CL10'1026839376'\n          DC   CL10'1028796002'\n          DC   CL10'1034528113'\n          DC   CL10'1036074096'\n          DC   CL10'1036622827'\n          DC   CL10'1045950143'\n          DC   CL10'1047261909'\n          DC   CL10'1053803551'\n          DC   CL10'1055817303'\n          DC   CL10'1070588771'\n          DC   CL10'1090578040'\n          DC   CL10'1094183483'\n          DC   CL10'1102965965'\n          DC   CL10'1113496985'\n          DC   CL10'1124826024'\n          DC   CL10'1169066430'\n          DC   CL10'1170852922'\n          DC   CL10'1175414415'\n          DC   CL10'1175901510'\n          DC   CL10'1176047902'\n          DC   CL10'1182833385'\n          DC   CL10'1209852058'\n          DC   CL10'1229538482'\n          DC   CL10'1252476538'\n          DC   CL10'1262465755'\n          DC   CL10'1283649175'\n          DC   CL10'1293508166'\n          DC   CL10'1300971865'\n          DC   CL10'1309560725'\n          DC   CL10'1334447563'\n          DC   CL10'1343776836'\n          DC   CL10'1366017127'\n          DC   CL10'1406211586'\n          DC   CL10'1416503025'\n          DC   CL10'1428066942'\n          DC   CL10'1432942365'\n          DC   CL10'1444855750'\n          DC   CL10'1448433468'\n          DC   CL10'1448838730'\n          DC   CL10'1465609943'\n          DC   CL10'1469514872'\n          DC   CL10'1478252658'\n          DC   CL10'1481674017'\n          DC   CL10'1487783464'\n          DC   CL10'1493612746'\n          DC   CL10'1506827363'\n          DC   CL10'1510218230'\n          DC   CL10'1510752158'\n          DC   CL10'1515117817'\n          DC   CL10'1519007403'\n          DC   CL10'1520984600'\n          DC   CL10'1522697574'\n          DC   CL10'1527224381'\n          DC   CL10'1547170224'\n          DC   CL10'1553542330'\n          DC   CL10'1563502577'\n          DC   CL10'1567055502'\n          DC   CL10'1575299923'\n          DC   CL10'1599853705'\n          DC   CL10'1606377408'\n          DC   CL10'1608840747'\n          DC   CL10'1621991737'\n          DC   CL10'1630588698'\n          DC   CL10'1638250572'\n          DC   CL10'1654896952'\n          DC   CL10'1658768311'\n          DC   CL10'1659356334'\n          DC   CL10'1662932899'\n          DC   CL10'1669110221'\n          DC   CL10'1670254329'\n          DC   CL10'1680667485'\n          DC   CL10'1682953374'\n          DC   CL10'1683396492'\n          DC   CL10'1704233907'\n          DC   CL10'1718754999'\n          DC   CL10'1727381522'\n          DC   CL10'1730008644'\n          DC   CL10'1733029984'\n          DC   CL10'1737046676'\n          DC   CL10'1750507756'\n          DC   CL10'1759059386'\n          DC   CL10'1761684083'\n          DC   CL10'1767326447'\n          DC   CL10'1775777708'\n          DC   CL10'1776871076'\n          DC   CL10'1783737437'\n          DC   CL10'1796424079'\n          DC   CL10'1801389277'\n          DC   CL10'1807981546'\n          DC   CL10'1819296715'\n          DC   CL10'1823645616'\n          DC   CL10'1850521488'\n          DC   CL10'1869574749'\n          DC   CL10'1873888347'\n          DC   CL10'1877504009'\n          DC   CL10'1916989089'\n          DC   CL10'1918345822'\n          DC   CL10'1923132262'\n          DC   CL10'1926239473'\n          DC   CL10'1934646582'\n          DC   CL10'1946142617'\n          DC   CL10'1948521828'\n          DC   CL10'1954513695'\n          DC   CL10'1970220975'\n          DC   CL10'1977910306'\n          DC   CL10'1993801028'\n          DC   CL10'1994641628'\n          DC   CL10'2003724911'\n          DC   CL10'2005934797'\n          DC   CL10'2009368031'\n          DC   CL10'2023217125'\n          DC   CL10'2034099345'\n          DC   CL10'2038908934'\n          DC   CL10'2044061926'\n          DC   CL10'2059961681'\n          DC   CL10'2065592775'\n          DC   CL10'2072647459'\n          DC   CL10'2104109373'\n          DC   CL10'2106885284'\n          DC   CL10'2113148651'\n          DC   CL10'2128795604'\n          DC   CL10'2139096544'\n          DC   CL10'2141578675'\n          DC   CL10'2141727998'\n          DC   CL10'2144637213'\n          DC   CL10'2144977308'\n          DC   CL10'2163772156'\n          DC   CL10'2169298540'\n          DC   CL10'2177375639'\n          DC   CL10'2216813290'\n          DC   CL10'2222675501'\n          DC   CL10'2230174310'\n          DC   CL10'2231104325'\n          DC   CL10'2233677591'\n          DC   CL10'2252189346'\n          DC   CL10'2275690210'\n          DC   CL10'2284873668'\n          DC   CL10'2285848536'\n          DC   CL10'2286342506'\n          DC   CL10'2302069743'\n          DC   CL10'2307633383'\n          DC   CL10'2315437316'\n          DC   CL10'2338259443'\n          DC   CL10'2339574706'\n          DC   CL10'2355329543'\n          DC   CL10'2369764575'\n          DC   CL10'2376377908'\n          DC   CL10'2389120744'\n          DC   CL10'2396911987'\n          DC   CL10'2398938103'\n          DC   CL10'2400421895'\n          DC   CL10'2422232634'\n          DC   CL10'2425747753'\n          DC   CL10'2452295581'\n          DC   CL10'2453201288'\n          DC   CL10'2463397457'\n          DC   CL10'2488720988'\n          DC   CL10'2491407260'\n          DC   CL10'2512272436'\n          DC   CL10'2518972405'\n          DC   CL10'2524558876'\n          DC   CL10'2533023160'\n          DC   CL10'2544618053'\n          DC   CL10'2574915986'\n          DC   CL10'2584106197'\n          DC   CL10'2586698969'\n          DC   CL10'2587130549'\n          DC   CL10'2593365519'\n          DC   CL10'2601564517'\n          DC   CL10'2609800752'\n          DC   CL10'2612833848'\n          DC   CL10'2629152958'\n          DC   CL10'2657748187'\n          DC   CL10'2662116167'\n          DC   CL10'2679767239'\n          DC   CL10'2682008352'\n          DC   CL10'2685466240'\n          DC   CL10'2693983276'\n          DC   CL10'2695284092'\n          DC   CL10'2703499802'\n          DC   CL10'2722314424'\n          DC   CL10'2724557663'\n          DC   CL10'2726348003'\n          DC   CL10'2740708470'\n          DC   CL10'2756790530'\n          DC   CL10'2764666071'\n          DC   CL10'2807857653'\n          DC   CL10'2813767803'\n          DC   CL10'2816227704'\n          DC   CL10'2836247091'\n          DC   CL10'2836687970'\n          DC   CL10'2847713657'\n          DC   CL10'2863161645'\n          DC   CL10'2868240302'\n          DC   CL10'2882509469'\n          DC   CL10'2883441128'\n          DC   CL10'2884145001'\n          DC   CL10'2886269710'\n          DC   CL10'2890004371'\n          DC   CL10'2901437526'\n          DC   CL10'2908096078'\n          DC   CL10'2918179151'\n          DC   CL10'2924990815'\n          DC   CL10'2925865139'\n          DC   CL10'2943078847'\n          DC   CL10'2978879793'\n          DC   CL10'2979680261'\n          DC   CL10'2987837853'\n          DC   CL10'2989933983'\n          DC   CL10'3009924766'\n          DC   CL10'3010102732'\n          DC   CL10'3015620511'\n          DC   CL10'3020793152'\n          DC   CL10'3026659535'\n          DC   CL10'3032523980'\n          DC   CL10'3049097295'\n          DC   CL10'3077327176'\n          DC   CL10'3079859595'\n          DC   CL10'3081869339'\n          DC   CL10'3083893881'\n          DC   CL10'3090555978'\n          DC   CL10'3092155047'\n          DC   CL10'3092863149'\n          DC   CL10'3114643592'\n          DC   CL10'3133986654'\n          DC   CL10'3139779380'\n          DC   CL10'3152278214'\n          DC   CL10'3157858597'\n          DC   CL10'3184472762'\n          DC   CL10'3186535891'\n          DC   CL10'3199523856'\n          DC   CL10'3232136869'\n          DC   CL10'3246054935'\n          DC   CL10'3248183233'\n          DC   CL10'3256786735'\n          DC   CL10'3262132801'\n          DC   CL10'3269783286'\n          DC   CL10'3277199285'\n          DC   CL10'3295843454'\n          DC   CL10'3297999589'\n          DC   CL10'3319616438'\n          DC   CL10'3325756816'\n          DC   CL10'3327808029'\n          DC   CL10'3338981601'\n          DC   CL10'3344508515'\n          DC   CL10'3345279264'\n          DC   CL10'3353162830'\n          DC   CL10'3358601905'\n          DC   CL10'3364087686'\n          DC   CL10'3367090129'\n          DC   CL10'3385869120'\n          DC   CL10'3387803789'\n          DC   CL10'3402810761'\n          DC   CL10'3410613712'\n          DC   CL10'3415624636'\n          DC   CL10'3416289223'\n          DC   CL10'3425687957'\n          DC   CL10'3428793268'\n          DC   CL10'3430673539'\n          DC   CL10'3452683833'\n          DC   CL10'3463687713'\n          DC   CL10'3496725929'\n          DC   CL10'3505005889'\n          DC   CL10'3531089061'\n          DC   CL10'3544489840'\n          DC   CL10'3548439886'\n          DC   CL10'3566158281'\n          DC   CL10'3578295917'\n          DC   CL10'3606218529'\n          DC   CL10'3609960123'\n          DC   CL10'3621038015'\n          DC   CL10'3625252117'\n          DC   CL10'3627055019'\n          DC   CL10'3635946109'\n          DC   CL10'3655561888'\n          DC   CL10'3658796578'\n          DC   CL10'3665273648'\n          DC   CL10'3665932525'\n          DC   CL10'3673647154'\n          DC   CL10'3682736375'\n          DC   CL10'3694896336'\n          DC   CL10'3698845784'\n          DC   CL10'3704809623'\n          DC   CL10'3707569144'\n          DC   CL10'3708816466'\n          DC   CL10'3715241774'\n          DC   CL10'3737691656'\n          DC   CL10'3741778199'\n          DC   CL10'3755663894'\n          DC   CL10'3758750173'\n          DC   CL10'3772702776'\n          DC   CL10'3777461584'\n          DC   CL10'3787896571'\n          DC   CL10'3795936465'\n          DC   CL10'3801898777'\n          DC   CL10'3815888699'\n          DC   CL10'3825916938'\n          DC   CL10'3829666331'\n          DC   CL10'3830408962'\n          DC   CL10'3835275994'\n          DC   CL10'3839559432'\n          DC   CL10'3839616878'\n          DC   CL10'3842431364'\n          DC   CL10'3845774769'\n          DC   CL10'3871130565'\n          DC   CL10'3888423157'\n          DC   CL10'3889103631'\n          DC   CL10'3893656452'\n          DC   CL10'3893799393'\n          DC   CL10'3903243195'\n          DC   CL10'3912149423'\n          DC   CL10'3927724004'\n          DC   CL10'3930991335'\n          DC   CL10'3946441022'\n          DC   CL10'3951386821'\n          DC   CL10'3954741049'\n          DC   CL10'3968593246'\n          DC   CL10'3980200299'\n          DC   CL10'3994269823'\n          DC   CL10'4032829857'\n          DC   CL10'4041091177'\n          DC   CL10'4052483870'\n          DC   CL10'4054368798'\n          DC   CL10'4058524665'\n          DC   CL10'4082518764'\n          DC   CL10'4087244297'\n          DC   CL10'4109725090'\n          DC   CL10'4126998063'\n          DC   CL10'4141332115'\n          DC   CL10'4146105391'\n          DC   CL10'4165437910'\n          DC   CL10'4193813874'\n          DC   CL10'4213406110'\n          DC   CL10'4225518754'\n          DC   CL10'4233008317'\n          DC   CL10'4234405322'\n          DC   CL10'4245641000'\n          DC   CL10'4250573220'\n          DC   CL10'4255455557'\n          DC   CL10'4261367795'\n          DC   CL10'4278411030'\n          DC   CL10'4293029016'\n          DC   CL10'4304448398'\n          DC   CL10'4306179254'\n          DC   CL10'4332924734'\n          DC   CL10'4339308153'\n          DC   CL10'4341809837'\n          DC   CL10'4342046037'\n          DC   CL10'4354048918'\n          DC   CL10'4361475807'\n          DC   CL10'4361988925'\n          DC   CL10'4365677512'\n          DC   CL10'4365695641'\n          DC   CL10'4367068462'\n          DC   CL10'4374982729'\n          DC   CL10'4376019850'\n          DC   CL10'4382148265'\n          DC   CL10'4395321328'\n          DC   CL10'4399652566'\n          DC   CL10'4399889973'\n          DC   CL10'4403915745'\n          DC   CL10'4415227580'\n          DC   CL10'4420964547'\n          DC   CL10'4425250854'\n          DC   CL10'4440349726'\n          DC   CL10'4442600677'\n          DC   CL10'4446271569'\n          DC   CL10'4452119323'\n          DC   CL10'4455138672'\n          DC   CL10'4459585269'\n          DC   CL10'4480439106'\n          DC   CL10'4499203387'\n          DC   CL10'4501837884'\n          DC   CL10'4511944944'\n          DC   CL10'4515414182'\n          DC   CL10'4525397489'\n          DC   CL10'4531464162'\n          DC   CL10'4532128318'\n          DC   CL10'4539127550'\n          DC   CL10'4541806875'\n          DC   CL10'4542498305'\n          DC   CL10'4564553568'\n          DC   CL10'4571377709'\n          DC   CL10'4578912800'\n          DC   CL10'4606150105'\n          DC   CL10'4615307402'\n          DC   CL10'4676559607'\n          DC   CL10'4677868018'\n          DC   CL10'4691403480'\n          DC   CL10'4708979219'\n          DC   CL10'4711251680'\n          DC   CL10'4717926359'\n          DC   CL10'4718112570'\n          DC   CL10'4718828567'\n          DC   CL10'4722569401'\n          DC   CL10'4731985446'\n          DC   CL10'4733686614'\n          DC   CL10'4746081896'\n          DC   CL10'4760993077'\n          DC   CL10'4772569573'\n          DC   CL10'4775657044'\n          DC   CL10'4784105826'\n          DC   CL10'4788384767'\n          DC   CL10'4796208846'\n          DC   CL10'4807640041'\n          DC   CL10'4818917707'\n          DC   CL10'4825735132'\n          DC   CL10'4826671921'\n          DC   CL10'4834267841'\n          DC   CL10'4838670864'\n          DC   CL10'4840642324'\n          DC   CL10'4851436890'\n          DC   CL10'4868476778'\n          DC   CL10'4884001528'\n          DC   CL10'4894180366'\n          DC   CL10'4909094411'\n          DC   CL10'4924053684'\n          DC   CL10'4932226772'\n          DC   CL10'4963999866'\n          DC   CL10'4976581420'\n          DC   CL10'4988242159'\n          DC   CL10'4997957903'\n          DC   CL10'5001541312'\n          DC   CL10'5012943915'\n          DC   CL10'5022145245'\n          DC   CL10'5025088118'\n          DC   CL10'5031739843'\n          DC   CL10'5061464234'\n          DC   CL10'5062777099'\n          DC   CL10'5081606619'\n          DC   CL10'5085358271'\n          DC   CL10'5097340862'\n          DC   CL10'5131008598'\n          DC   CL10'5136707186'\n          DC   CL10'5137829773'\n          DC   CL10'5138392919'\n          DC   CL10'5141292181'\n          DC   CL10'5148786272'\n          DC   CL10'5167188055'\n          DC   CL10'5170458496'\n          DC   CL10'5171457235'\n          DC   CL10'5173509412'\n          DC   CL10'5175852258'\n          DC   CL10'5176912171'\n          DC   CL10'5184641688'\n          DC   CL10'5195953924'\n          DC   CL10'5201121972'\n          DC   CL10'5201791491'\n          DC   CL10'5212207442'\n          DC   CL10'5237405495'\n          DC   CL10'5241948690'\n          DC   CL10'5248438067'\n          DC   CL10'5264958561'\n          DC   CL10'5280097813'\n          DC   CL10'5297165057'\n          DC   CL10'5298755992'\n          DC   CL10'5300159981'\n          DC   CL10'5321710355'\n          DC   CL10'5337606906'\n          DC   CL10'5345334579'\n          DC   CL10'5371357959'\n          DC   CL10'5385074372'\n          DC   CL10'5395385796'\n          DC   CL10'5397272711'\n          DC   CL10'5401039694'\n          DC   CL10'5425916378'\n          DC   CL10'5431977508'\n          DC   CL10'5433720236'\n          DC   CL10'5442562396'\n          DC   CL10'5449773212'\n          DC   CL10'5456759873'\n          DC   CL10'5457552652'\n          DC   CL10'5475656321'\n          DC   CL10'5506681939'\n          DC   CL10'5508940292'\n          DC   CL10'5526397503'\n          DC   CL10'5534401507'\n          DC   CL10'5549481728'\n          DC   CL10'5558764121'\n          DC   CL10'5561094977'\n          DC   CL10'5563765185'\n          DC   CL10'5565101216'\n          DC   CL10'5572035250'\n          DC   CL10'5576869845'\n          DC   CL10'5591433733'\n          DC   CL10'5596327164'\n          DC   CL10'5614513448'\n          DC   CL10'5619387353'\n          DC   CL10'5621486760'\n          DC   CL10'5626236138'\n          DC   CL10'5627716670'\n          DC   CL10'5641763691'\n          DC   CL10'5642391145'\n          DC   CL10'5642531085'\n          DC   CL10'5643322010'\n          DC   CL10'5653365020'\n          DC   CL10'5663840721'\n          DC   CL10'5675001931'\n          DC   CL10'5675989559'\n          DC   CL10'5679881257'\n          DC   CL10'5701796697'\n          DC   CL10'5705291655'\n          DC   CL10'5707472066'\n          DC   CL10'5707681244'\n          DC   CL10'5725273168'\n          DC   CL10'5735000362'\n          DC   CL10'5744251794'\n          DC   CL10'5750582397'\n          DC   CL10'5764563450'\n          DC   CL10'5765477779'\n          DC   CL10'5768466287'\n          DC   CL10'5778297253'\n          DC   CL10'5781827937'\n          DC   CL10'5792681088'\n          DC   CL10'5823087664'\n          DC   CL10'5826049791'\n          DC   CL10'5852626081'\n          DC   CL10'5859069484'\n          DC   CL10'5871856400'\n          DC   CL10'5879594685'\n          DC   CL10'5923848700'\n          DC   CL10'5930920717'\n          DC   CL10'5939740534'\n          DC   CL10'5945977008'\n          DC   CL10'5953591351'\n          DC   CL10'5974120497'\n          DC   CL10'5980530023'\n          DC   CL10'5982500270'\n          DC   CL10'6013020304'\n          DC   CL10'6017590576'\n          DC   CL10'6027151395'\n          DC   CL10'6031477613'\n          DC   CL10'6034259879'\n          DC   CL10'6034977111'\n          DC   CL10'6038224205'\n          DC   CL10'6040047313'\n          DC   CL10'6042427892'\n          DC   CL10'6046911354'\n          DC   CL10'6055320835'\n          DC   CL10'6071816834'\n          DC   CL10'6076953748'\n          DC   CL10'6078781716'\n          DC   CL10'6089806179'\n          DC   CL10'6102241319'\n          DC   CL10'6111881741'\n          DC   CL10'6114026406'\n          DC   CL10'6131336255'\n          DC   CL10'6153092070'\n          DC   CL10'6176508218'\n          DC   CL10'6189589095'\n          DC   CL10'6195575064'\n          DC   CL10'6214334476'\n          DC   CL10'6214652858'\n          DC   CL10'6219336562'\n          DC   CL10'6274959967'\n          DC   CL10'6277765141'\n          DC   CL10'6291772134'\n          DC   CL10'6299003602'\n          DC   CL10'6301600736'\n          DC   CL10'6309461069'\n          DC   CL10'6316443356'\n          DC   CL10'6321644499'\n          DC   CL10'6340650247'\n          DC   CL10'6362585477'\n          DC   CL10'6378346611'\n          DC   CL10'6380603394'\n          DC   CL10'6392883433'\n          DC   CL10'6401696170'\n          DC   CL10'6405784661'\n          DC   CL10'6410072367'\n          DC   CL10'6419378045'\n          DC   CL10'6420659456'\n          DC   CL10'6423082237'\n          DC   CL10'6441887377'\n          DC   CL10'6491948418'\n          DC   CL10'6492977996'\n          DC   CL10'6526299792'\n          DC   CL10'6536513368'\n          DC   CL10'6565462961'\n          DC   CL10'6583467513'\n          DC   CL10'6610884504'\n          DC   CL10'6617160065'\n          DC   CL10'6619899880'\n          DC   CL10'6620218026'\n          DC   CL10'6632012192'\n          DC   CL10'6634201034'\n          DC   CL10'6640171757'\n          DC   CL10'6650685307'\n          DC   CL10'6656036861'\n          DC   CL10'6706822399'\n          DC   CL10'6708832431'\n          DC   CL10'6743900337'\n          DC   CL10'6744618021'\n          DC   CL10'6745219809'\n          DC   CL10'6750654554'\n          DC   CL10'6750835075'\n          DC   CL10'6758118765'\n          DC   CL10'6768877384'\n          DC   CL10'6788433333'\n          DC   CL10'6795597451'\n          DC   CL10'6819051409'\n          DC   CL10'6824188618'\n          DC   CL10'6829686930'\n          DC   CL10'6834837074'\n          DC   CL10'6837439723'\n          DC   CL10'6876599643'\n          DC   CL10'6879934131'\n          DC   CL10'6882383883'\n          DC   CL10'6906496238'\n          DC   CL10'6915994267'\n          DC   CL10'6941536678'\n          DC   CL10'6959831086'\n          DC   CL10'6980841188'\n          DC   CL10'6984337341'\n          DC   CL10'6999538714'\n          DC   CL10'7014869731'\n          DC   CL10'7020490806'\n          DC   CL10'7024630382'\n          DC   CL10'7025953068'\n          DC   CL10'7031389620'\n          DC   CL10'7039033783'\n          DC   CL10'7043099673'\n          DC   CL10'7059883683'\n          DC   CL10'7072494621'\n          DC   CL10'7078217222'\n          DC   CL10'7093977808'\n          DC   CL10'7138113868'\n          DC   CL10'7170701585'\n          DC   CL10'7175433348'\n          DC   CL10'7177468298'\n          DC   CL10'7191388279'\n          DC   CL10'7206997982'\n          DC   CL10'7211070860'\n          DC   CL10'7211151702'\n          DC   CL10'7221527032'\n          DC   CL10'7224666599'\n          DC   CL10'7228989035'\n          DC   CL10'7257486349'\n          DC   CL10'7260553248'\n          DC   CL10'7263703419'\n          DC   CL10'7278163786'\n          DC   CL10'7292854960'\n          DC   CL10'7295504370'\n          DC   CL10'7328744136'\n          DC   CL10'7341681867'\n          DC   CL10'7349775632'\n          DC   CL10'7360355280'\n          DC   CL10'7366688666'\n          DC   CL10'7378402421'\n          DC   CL10'7379753810'\n          DC   CL10'7385386989'\n          DC   CL10'7400995389'\n          DC   CL10'7403393048'\n          DC   CL10'7416875787'\n          DC   CL10'7419152479'\n          DC   CL10'7448619971'\n          DC   CL10'7457852404'\n          DC   CL10'7465038901'\n          DC   CL10'7473093184'\n          DC   CL10'7476835831'\n          DC   CL10'7479549097'\n          DC   CL10'7496108098'\n          DC   CL10'7524793289'\n          DC   CL10'7529154440'\n          DC   CL10'7537430309'\n          DC   CL10'7539954682'\n          DC   CL10'7540592790'\n          DC   CL10'7555744266'\n          DC   CL10'7591761928'\n          DC   CL10'7624869674'\n          DC   CL10'7627426114'\n          DC   CL10'7665518013'\n          DC   CL10'7667230087'\n          DC   CL10'7675776278'\n          DC   CL10'7679716679'\n          DC   CL10'7681142671'\n          DC   CL10'7681922140'\n          DC   CL10'7686790093'\n          DC   CL10'7686947369'\n          DC   CL10'7690923006'\n          DC   CL10'7699537531'\n          DC   CL10'7724354542'\n          DC   CL10'7726068392'\n          DC   CL10'7734167553'\n          DC   CL10'7743096849'\n          DC   CL10'7777348521'\n          DC   CL10'7783677062'\n          DC   CL10'7785283283'\n          DC   CL10'7789745740'\n          DC   CL10'7799100194'\n          DC   CL10'7805934460'\n          DC   CL10'7808769493'\n          DC   CL10'7817561428'\n          DC   CL10'7846276005'\n          DC   CL10'7848321487'\n          DC   CL10'7869520770'\n          DC   CL10'7876388204'\n          DC   CL10'7880707913'\n          DC   CL10'7896530724'\n          DC   CL10'7899381782'\n          DC   CL10'7952915161'\n          DC   CL10'7964352758'\n          DC   CL10'7968945590'\n          DC   CL10'7979475780'\n          DC   CL10'7996608718'\n          DC   CL10'8003680043'\n          DC   CL10'8006156056'\n          DC   CL10'8014572229'\n          DC   CL10'8027939593'\n          DC   CL10'8040889696'\n          DC   CL10'8041396877'\n          DC   CL10'8048427256'\n          DC   CL10'8074041252'\n          DC   CL10'8078001788'\n          DC   CL10'8081562472'\n          DC   CL10'8091838842'\n          DC   CL10'8091839855'\n          DC   CL10'8099335130'\n          DC   CL10'8118801689'\n          DC   CL10'8123221991'\n          DC   CL10'8127785251'\n          DC   CL10'8131002824'\n          DC   CL10'8133182954'\n          DC   CL10'8155628498'\n          DC   CL10'8162793635'\n          DC   CL10'8174979342'\n          DC   CL10'8176019027'\n          DC   CL10'8196379523'\n          DC   CL10'8198652458'\n          DC   CL10'8217281228'\n          DC   CL10'8234802647'\n          DC   CL10'8245886326'\n          DC   CL10'8250774014'\n          DC   CL10'8261864974'\n          DC   CL10'8266839060'\n          DC   CL10'8284252649'\n          DC   CL10'8284985610'\n          DC   CL10'8317518932'\n          DC   CL10'8318918560'\n          DC   CL10'8321123142'\n          DC   CL10'8326027594'\n          DC   CL10'8350371692'\n          DC   CL10'8363333191'\n          DC   CL10'8367220073'\n          DC   CL10'8372418425'\n          DC   CL10'8372701490'\n          DC   CL10'8373228818'\n          DC   CL10'8390001046'\n          DC   CL10'8392614976'\n          DC   CL10'8409030217'\n          DC   CL10'8422464137'\n          DC   CL10'8431528200'\n          DC   CL10'8441898124'\n          DC   CL10'8446793887'\n          DC   CL10'8455968518'\n          DC   CL10'8456810072'\n          DC   CL10'8459674825'\n          DC   CL10'8461533533'\n          DC   CL10'8474892202'\n          DC   CL10'8484739956'\n          DC   CL10'8501210340'\n          DC   CL10'8516432844'\n          DC   CL10'8532171439'\n          DC   CL10'8542248852'\n          DC   CL10'8554607545'\n          DC   CL10'8561872344'\n          DC   CL10'8570796738'\n          DC   CL10'8575481588'\n          DC   CL10'8582131225'\n          DC   CL10'8593413955'\n          DC   CL10'8605152358'\n          DC   CL10'8609761388'\n          DC   CL10'8615700059'\n          DC   CL10'8620256478'\n          DC   CL10'8632028785'\n          DC   CL10'8647956104'\n          DC   CL10'8653060920'\n          DC   CL10'8666619291'\n          DC   CL10'8677951242'\n          DC   CL10'8683917119'\n          DC   CL10'8685504552'\n          DC   CL10'8704495042'\n          DC   CL10'8706993147'\n          DC   CL10'8716714630'\n          DC   CL10'8719657413'\n          DC   CL10'8734136429'\n          DC   CL10'8742955537'\n          DC   CL10'8743127805'\n          DC   CL10'8747566951'\n          DC   CL10'8761075556'\n          DC   CL10'8771675995'\n          DC   CL10'8774372180'\n          DC   CL10'8775370196'\n          DC   CL10'8782023945'\n          DC   CL10'8800423169'\n          DC   CL10'8802348898'\n          DC   CL10'8803827781'\n          DC   CL10'8807543455'\n          DC   CL10'8815379839'\n          DC   CL10'8817930819'\n          DC   CL10'8824964249'\n          DC   CL10'8828773871'\n          DC   CL10'8836215227'\n          DC   CL10'8864169622'\n          DC   CL10'8888984259'\n          DC   CL10'8906179273'\n          DC   CL10'8912574126'\n          DC   CL10'8942152936'\n          DC   CL10'8951906361'\n          DC   CL10'8965891650'\n          DC   CL10'8969836178'\n          DC   CL10'8970320500'\n          DC   CL10'8970957201'\n          DC   CL10'8971292916'\n          DC   CL10'8972698172'\n          DC   CL10'8973826215'\n          DC   CL10'8977793548'\n          DC   CL10'8979968036'\n          DC   CL10'8986560851'\n          DC   CL10'8986613327'\n          DC   CL10'8990850471'\n          DC   CL10'8992443407'\n          DC   CL10'8996009174'\n          DC   CL10'9008293509'\n          DC   CL10'9020317555'\n          DC   CL10'9071539357'\n          DC   CL10'9078253445'\n          DC   CL10'9082725435'\n          DC   CL10'9142951241'\n          DC   CL10'9145381274'\n          DC   CL10'9159017410'\n          DC   CL10'9172277739'\n          DC   CL10'9188307050'\n          DC   CL10'9195709541'\n          DC   CL10'9216384444'\n          DC   CL10'9222373637'\n          DC   CL10'9225330314'\n          DC   CL10'9289664100'\n          DC   CL10'9315691904'\n          DC   CL10'9321130226'\n          DC   CL10'9334903211'\n          DC   CL10'9336349912'\n          DC   CL10'9342886112'\n          DC   CL10'9354071150'\n          DC   CL10'9378133933'\n          DC   CL10'9394383633'\n          DC   CL10'9411106082'\n          DC   CL10'9420163039'\n          DC   CL10'9425802615'\n          DC   CL10'9461157722'\n          DC   CL10'9469873148'\n          DC   CL10'9473843829'\n          DC   CL10'9477987603'\n          DC   CL10'9477994206'\n          DC   CL10'9481197146'\n          DC   CL10'9494810997'\n          DC   CL10'9497186417'\n          DC   CL10'9501170379'\n          DC   CL10'9503089882'\n          DC   CL10'9528779605'\n          DC   CL10'9530143232'\n          DC   CL10'9544350467'\n          DC   CL10'9557093720'\n          DC   CL10'9574480990'\n          DC   CL10'9576662885'\n          DC   CL10'9580332461'\n          DC   CL10'9580829481'\n          DC   CL10'9592186524'\n          DC   CL10'9597634183'\n          DC   CL10'9600087963'\n          DC   CL10'9617348080'\n          DC   CL10'9629518012'\n          DC   CL10'9637885520'\n          DC   CL10'9639982642'\n          DC   CL10'9650793422'\n          DC   CL10'9672913948'\n          DC   CL10'9690965116'\n          DC   CL10'9691804662'\n          DC   CL10'9694554596'\n          DC   CL10'9713710832'\n          DC   CL10'9728537463'\n          DC   CL10'9734751332'\n          DC   CL10'9749315054'\n          DC   CL10'9767784033'\n          DC   CL10'9773777703'\n          DC   CL10'9782229122'\n          DC   CL10'9792422084'\n          DC   CL10'9825592300'\n          DC   CL10'9850258624'\n          DC   CL10'9875426701'\n          DC   CL10'9883029293'\n          DC   CL10'9886176900'\n          DC   CL10'9911241979'\n          DC   CL10'9919451101'\n          DC   CL10'9924773051'\n          DC   CL10'9946619993'\n          DC   CL10'9967522275'\n          DC   CL10'9984956820'\n          DC   CL10'9987216646'\nLASTUN   EQU   *-10\n*\nTIMETBL  DC    1000F'0'            SEARCH TIMES\nFIBSRCH1 CSECT\n*\n*   REMOTE AREAS\n*\nSAVE     DS    90D\nSAVEND   EQU   *\n         TITLE 'FIBINACCIAN SEARCH'\nSEARCH   B     14(0,R9)\n         USING SEARCH,R9\n         DC    AL1(8),CL9'SEARCH'\n         LA    R1,987              I <- F(K)\n         LA    R2,609              P <- F(K-1) - 1\n         LA    R3,376              Q <- F(K-2) - 1\n         B     F2A\nF4A      LA    R1,1(R3,R1)         I <- I+Q\n         SR    R2,R3\n         BCTR  R2,0                P <- P-Q\n         SR    R3,R2               Q <- Q-P\n         BCTR  R3,0\nF2A      LR    R5,R1\n         BCTR  R5,0\n         M     R4,=F'10'\n         A     R5,=A(SRCHTBL)\n         CLC   KEY,0(R5)           KEY < TABLE(I)\n         BL    F3A\n         BE    SUCCESS\n         LTR   R2,R2\n         BNZ   F4A\n         B     FAIL\nF3A      SR    R1,R3               I <- I-Q\n         BCTR  R1,0\n         SR    R2,R3               P <- P-Q\n         BCTR  R2,0\n         LTR   R3,R3\n         BNM   F2B\n         B     FAIL\nF4B      LA    R1,1(R2,R1)\n         SR    R3,R2\n         BCTR  R3,0\n         SR    R2,R3\n         BCTR  R2,0\nF2B      LR    R5,R1\n         BCTR  R5,0\n         M     R4,=F'10'\n         A     R5,=A(SRCHTBL)\n         CLC   KEY,0(R5)\n         BL    F3B\n         BE    SUCCESS\n         LTR   R3,R3\n         BNZ   F4B\n         B     FAIL\nF3B      SR    R1,R2\n         BCTR  R1,0\n         SR    R3,R2\n         BCTR  R3,0\n         LTR   R2,R2\n         BNM   F2A\n         B     FAIL\nFAIL     EQU   *\nSUCCESS  EQU   *\n         B     SEXIT\n         LTORG\n         TITLE 'CALCTIME'\nCALCTIME B     14(0,R9)\n         USING CALCTIME,R9\n         DC    AL1(8),CL9'CALCTIME'\n*---------------------------------------------------------------------*\n* COMPUTE ELAPSED TIME                                                *\n*---------------------------------------------------------------------*\n         LM    R2,R3,BGNTIME       GET BEGIN TIME\n         SL    R3,ENDTIME+4\n         BC    3,CALC1\n         BCTR  R2,0                BORROW\nCALC1    SL    R2,ENDTIME          R2 <- ELAPSED TIME\n*---------------------------------------------------------------------*\n* MAKE R4 & R3 LESS THAN 2**31                                        *\n* GOING INTO CALC2 THERE ARE TWO CASES:                               *\n*  1. R2 IS ALREADY ZERO AND THE SLDL R2,2 BEFORE THE LOOP IS REVERSED*\n*     BY THE SRDL R2,1 WITHIN THE LOOP AND BY THE SRDL R2,1           *\n*     FOLLOWING THE LOOP.                                             *\n*  2. R2 IS GREATER THAN ZERO. THE LOOP KEEPS SHIFTING RIGHT UNTIL R2 *\n*     IS ZERO. THE SRDL R2,1 AFTER THE LOOP MAKES SURE THAT THE       *\n*     LEFTMOST BIT OF R3 IS ZERO. THE VALUE IN R3 IS OVERSHIFTED TO   *\n*     THE RIGHT.  SOME BITS MAY HAVE DROPPED OFF THE RIGHT END OF R3  *\n*     BUT THEY ARE VERY SMALL FRACTIONS OF A MICROSECOND. THE         *\n*     MULTIPLY GIVES MICROSECONDS OVERSHIFTED TO THE RIGHT. THE       *\n*     SLDL R2,0(R5) EVENS OUT THE SHIFTING, GIVING MICROSECONDS.      *\n*---------------------------------------------------------------------*\n         LA    R6,1\n         LNR   R5,R6               NBR OF SHIFTS = -1 (SET UP LOOP)\n         SLDL  R2,2                RECOVER ONE IN LOOP, ONE AFTER\nCALC2    AR    R5,R6               # = # + 1\n         SRDL  R2,1                RECOVER 1\n         LTR   R2,R2\n         BNZ   CALC2\n         SRDL  R2,1                NOW R2 & R3 LESS THAN 2**31\n*********M     R2,=F'1E6'          CONVERT MICROSEC TO PICOSEC\n*********SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 PICOSEC\n*********SRDL  R2,12               BIT 63 = 1 PICOSEC\n         SLDL  R2,0(R5)            RESTORE SHIFTS, BIT 51 = 1 MICROSEC\n         SRDL  R2,12               BIT 63 = 1 MICROSEC\n         ST    R3,0(R7)            SAVE TIME IN TABLE\n         B     SEXIT\n         LTORG\n         TITLE 'PRTRTN'\nPRTRTN   B     14(0,R9)\n         USING PRTRTN,R9\n         DC    AL1(8),CL9'PRTRTN'\n         SR    R4,R4\n         SR    R5,R5\n         LA    R3,TIMETBL\n         LA    R2,16\nLOOPB    A     R5,0(R3)            ADD TIME\n         LA    R3,4(R3)\n         BCT   R2,LOOPB\n         D     R4,=F'16'           AVG TIME IN R5\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT   OUTFILE,TIMEREC\n         MVI   TIMEREC,C'0'\n         MVC   MSGLABEL,=C'MAXIMUM TIME ='\n         L     R5,MAXTIME\n         CVD   R5,DBLWORD\n         UNPK  MSGHOLD,DBLWORD\n         OI    MSGHOLD+14,X'F0'\n         PUT OUTFILE,TIMEREC\n         B     SEXIT\n         LTORG\n         END\n//G.PRTOUT   DD SYSOUT=*\n//G.SYSOUT   DD SYSOUT=*\n//G.SYSUDUMP DD SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASM00062": {"ttr": 18952, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x02%_\\x01\\x02%_\\x15'\\x00+\\x00+\\x00\\x00\\xc5\\xc7\\xc8\\xc6\\xf3\\xd7\\xe8@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-09-12T00:00:00", "modifydate": "2002-09-12T15:27:00", "lines": 43, "newlines": 43, "modlines": 0, "user": "EGHF3PY"}, "text": "SYSTEM INFORMATION\n\n    SYSNAME=XXXX\n    STOR=004896M\n    PRODI=SP7.0.2\n    PRODN=HBB7705\n    MODEL=2064\n    SMFSID=XXXX\n    IPL=2002232\n    SPEED=010081 SU/S\n    CPU=002064-107\n    SYSPLEX=CSPLEXT1\n    HWNAME=YELLOW\n    LPAR=XXXX\n    VM=\n    OS/390=010200\n\n                              CPU=002064-107\nTIMING INFORMATION FOR SEARCHS  (TIME IS IN MICROSECONDS)\n\n                             16 RECORDS   1000 RECORDS\n                             AVG    MAX     AVG    MAX\n\nSEQUENTIAL SEARCH              3      4       8     17 ASM00050 ASM00051\nQUICK SEQUENTIAL SEARCH        3      4       6     16 ASM00052 ASM00053\nQUICKER SEQUENTIAL SEARCH      3      4      10     22 ASM00054 ASM00055\nBINARY SEARCH                  3      3       3      6 ASM00056 ASM00057\nUNIFORM BINARY SEARCH          3      4       3      7 ASM00058 ASM00059\nFIBONACCIAN SEARCH             3      4       3     12 ASM00060 ASM00061\n\n\n                              CPU=370/158\nTIMING INFORMATION FOR SEARCHS  (TIME IS IN MICROSECONDS)\n\n                             16 RECORDS   1000 RECORDS\n                             AVG    MAX     AVG    MAX\n\nSEQUENTIAL SEARCH            572    806   2,283  5,486 ASM00050 ASM00051\nQUICK SEQUENTIAL SEARCH      451    546   2,174  6,214 ASM00052 ASM00053\nQUICKER SEQUENTIAL SEARCH    461    598   1,895  6,110 ASM00054 ASM00055\nBINARY SEARCH                442    494     532  1,378 ASM00056 ASM00057\nUNIFORM BINARY SEARCH        429    494     442    702 ASM00058 ASM00059\nFIBONACCIAN SEARCH           419    494     475    858 ASM00060 ASM00061\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT590/FILE590.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT590", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}