* In order to use this program, it must be assembled and linked into
* a load library that is allocated to CDMSLIB for a CV. Program
* should be 31-bit, reentrant. Also, you will need to SYSGEN a
* program and a task to invoke the program.
*
* Here's the "Dynamic" DCMTs to get it going:
*
* DCMT V DYN PRO *.SHOWSTOR ASSEM REENT .
* DCMT V DYN TAS SHOWSTOR INV PRO *.SHOWSTOR LOC ANY .
*
* Then, just type SHOWSTOR at ENTER NEXT TASK CODE.
*
*RETRIEVAL                             . -----------------------------
*NODMLIST                              . This program is for use under
*                                      . CA-IDMS DC and OS/390 z/OS.
*                                      . -----------------------------
*                                      . By Jim Moore - ConLogCo
*                                      .
*                                      . This program gets control w/
*                                      . DC register conventions. R10
*                                      . points to IDMS CSA, R9 to TCE.
*                                      .
*                                      . Its sole purpose is to look
*                                      . into the IBM control block
*                                      . named the Local Data Area
*                                      . (IHALDA Dsect) to determine:
*                                      .
*                                      . Current 24-bit stg Max & use
*                                      . Current 31-bit stg Max & use
*                                      . Current REGION= value
*                                      . How close to defined max?
*                                      . Display them on the screen
SHOWSTOR RSECT                         . ------------------------------
SHOWSTOR AMODE 31                      . 31-bit, Fully Reentrant
SHOWSTOR RMODE ANY                     . 31-bit - MUST RUN 31-BIT!!!
         PRINT NOGEN                   . No macro expand in SYSPRINT
         LR    R12,R15                 . Get R15 into R12 for base
         USING SHOWSTOR,R12            . Base the RSECT using R12
         USING STORAGE,R11             . Base for GETSTG storage
         USING CSA,R10                 . Base the CSA (R10 auto-set)
         USING ASCB,R9                 . Base the ASCB (TCE not needed)
         USING LDA,R8                  . Base the LDA (IBM, IHALDA)
         USING PSA,R0                  . Base the PSA (IBM, IHAPSA)
         SR  R0,R0                     . Clear R0
         #GETSTG TYPE=(USER,SHORT),PLIST=*,LEN=STORLEN,STGID='ISTG',   X
               COND=(ALL),ADDR=(R11),INIT=X'40'
         L   R9,PSAAOLD                . Current ASCB address X'224'
         CLC ASCBASCB,=C'ASCB'         . Pointing to ASCB?
         BE  LDABASE                   . Yes, Get LDA
         MVC SCRNLINE(14),=C'ASCB NOT FOUND'
         #LINEOUT OUTLEN=LINELEN,LRB=SYSPLIST,OUTAREA=SCRNLINE
         B   EOJ                       . No, Who knows? Not MVS?
LDABASE  DS  0H                        .-------------------------------
         L   R8,ASCBLDA                . Current LDA Addr into R8
         CLC LDAID,=C'LDA '            . Pointing to LDA?
         BE  MAINLINE                  . Yes, Get Storage fields
         MVC SCRNLINE(13),=C'LDA NOT FOUND'
         #LINEOUT OUTLEN=LINELEN,LRB=SYSPLIST,OUTAREA=SCRNLINE
         B   EOJ                       . No, Who knows? Not 31-bit?
         @MODE MODE=IDMSDC             .-------------------------------
         DC  C' SHOWSTOR BY JIM MOORE' . Author
         DC  C' &SYSASM '              . Names of Assembler
         DC  C' &SYSDATC '             . Full date w/4-digit year
         DC  C' &SYSTIME '             . Time
         DC  C'COPYRIGHT - CONCENTRATED LOGIC INC - 2000,2005'
MAINLINE DS  0H                        . CV number stored in CSA
*--------------------------------------.----------------------------
         LH  R6,CSADCVID               . Load CV Number into R6
         CVD R6,DWORD                  . Convert to packed
         UNPK CHARVALU,DWORD           . Unpack it
         OI  CHARVALU+15,X'F0'         . Force "F" sign
         MVC HDR,HEAD1                 . Move heading lit to GETSTG
         MVC HDR+22(3),CHARVALU+13     . Move unpacked CV number
         #LINEOUT OUTLEN=LINELEN,LRB=SYSPLIST,OUTAREA=HDR
         MVC SCRNLINE+1(18),=C'24 Bit Max For CV '
         MVC SCRNLINE+19(3),HDR+22     . Move in CV number
         MVC REGMASK1,WSMASK           . Move MASK to acquired stg
         L   R6,LDALIMIT               . Load 24-bit limit into R6
         CVD R6,DWORD                  . Convert R6 to packed
         MVC S24MAX,DWORD              . Save 24-bit max amount
         ED  REGMASK1,DWORD            . Edit the amount
         MVC SCRNLINE+23(20),REGMASK1  . Move the amount
         #LINEOUT OUTLEN=LINELEN,LRB=SYSPLIST,OUTAREA=SCRNLINE,        X
               OPTNS=(NOWAIT),COND=CANC,CANCXIT=RETURN
         MVC SCRNLINE,SPACES           . Clear screen line
         MVC SCRNLINE+1(18),=C'24 Bit Used By CV '
         MVC SCRNLINE+19(3),HDR+22     . Move in CV number
         MVC REGMASK1,WSMASK           . Move MASK to acquired stg
         MVC REGMASK2,WSMASK           . Move MASK to acquired stg
         L   R6,LDALOAL                . Load 24-bit inuse into R6
         CVD R6,DWORD                  . Convert to packed
         MVC S24USE,DWORD              . Save 24-bit used amount
         ZAP TOTALU,S24USE             . Zap TOTALU with 24bit used
         ED  REGMASK1,DWORD            . Edit the amount
         MVC SCRNLINE+23(20),REGMASK1  . Move the amount
         SP  S24MAX,S24USE             . Determine available
         ED  REGMASK2,S24MAX           . Edit the amount available
         MVC SCRNLINE+44(20),REGMASK2  . Move the amount available
         MVC SCRNLINE+65(9),AVLIT      . Move Lit 'Available'
         #LINEOUT OUTLEN=LINELEN,LRB=SYSPLIST,OUTAREA=SCRNLINE,        X
               OPTNS=(NOWAIT),COND=CANC,CANCXIT=RETURN
         MVC SCRNLINE,SPACES           . Clear screen line
         MVC SCRNLINE+1(18),=C'31 Bit Max For CV '
         MVC SCRNLINE+19(3),HDR+22     . Move in CV number
         MVC REGMASK1,WSMASK           . Move MASK to acquired stg
         L   R6,LDAELIM                . Load 31-bit limit into R6
         CVD R6,DWORD                  . Convert to packed
         MVC S31MAX,DWORD              . Save 31-bit max amount
         ED  REGMASK1,DWORD            . Edit the amount
         MVC SCRNLINE+23(20),REGMASK1  . Move the amount
         #LINEOUT OUTLEN=LINELEN,LRB=SYSPLIST,OUTAREA=SCRNLINE,        X
               OPTNS=(NOWAIT),COND=CANC,CANCXIT=RETURN
         MVC SCRNLINE,SPACES           . Clear screen line
         MVC SCRNLINE+1(18),=C'31 Bit Used By CV '
         MVC SCRNLINE+19(3),HDR+22     . Move in CV number
         MVC REGMASK1,WSMASK           . Move MASK to acquired stg
         MVC REGMASK2,WSMASK           . Move MASK to acquired stg
         L   R6,LDAELOAL               . Load 31-bit inuse into R6
         CVD R6,DWORD                  . Convert to packed
         MVC S31USE,DWORD              . Save 31-bit used amount
         AP  TOTALU,S31USE             . Add 31bit to 24bit used
         ED  REGMASK1,DWORD            . Edit the amount
         MVC SCRNLINE+23(20),REGMASK1  . Move the amount
         SP  S31MAX,S31USE             . Determine available
         ED  REGMASK2,S31MAX           . Edit the amount available
         MVC SCRNLINE+44(20),REGMASK2  . Move the amount available
         MVC SCRNLINE+65(9),AVLIT      . Move Lit 'Available'
         #LINEOUT OUTLEN=LINELEN,LRB=SYSPLIST,OUTAREA=SCRNLINE,        X
               OPTNS=(NOWAIT),COND=CANC,CANCXIT=RETURN
         MVC SCRNLINE,SPACES           . Clear screen line
         MVC SCRNLINE+1(17),=C'REGION= From JCL '
         MVC REGMASK1,WSMASK           . Move MASK to acquired stg
         L   R6,LDAREGRQ               . Load 31-bit inuse into R6
         CVD R6,DWORD                  . Convert to packed
         ED  REGMASK1,DWORD            . Edit the amount
         MVC SCRNLINE+23(20),REGMASK1  . Move the amount
         #LINEOUT OUTLEN=LINELEN,LRB=SYSPLIST,OUTAREA=SCRNLINE,        X
               OPTNS=(NOWAIT),COND=CANC,CANCXIT=RETURN
         MVC SCRNLINE,SPACES           . Clear screen line
         MVC SCRNLINE+1(19),=C'Total Storage Used '
         MVC REGMASK1,WSMASK           . Move MASK to acquired stg
         ED  REGMASK1,TOTALU           . Edit the amount
         MVC SCRNLINE+23(20),REGMASK1  . Move the amount
         MVC SCRNLINE+52(22),=C'(Used 24 Bit + 31 Bit)'
         #LINEOUT OUTLEN=LINELEN,LRB=SYSPLIST,OUTAREA=SCRNLINE,        X
               OPTNS=(NOWAIT),COND=CANC,CANCXIT=RETURN
RETURN   DS 0H                         .-------------------------------
         #FREESTG STGID='ISTG'         . Free acquired storage
EOJ      #RETURN                       . Adios, muchachos
HEAD1    DS  0CL80                     . Heading line
         DC  C'=Storage From LDA===CV============== Bytes ============'
         DC  C'=========================' . Screen Header
AVLIT    DC  C'Available'              . 'Available' literal
SPACES   DC  CL80' '                   . 80 blanks
WSMASK   DC  X'402020206B2020206B2020206B2020206B202021'
*              /\      /\              .             /\
*            PadChar  Comma            . Significance Character
         YREGS ,                       . IBM Register macro
         LTORG ,                       . Force LIT-POOL here
STORAGE  DSECT ,                       .-------------------------------
SCRNLINE DS 0CL80                      . The Screen Line
SNAME    DS CL32                       .    Type of Storage
SAMT     DS CL10                       .    Limit/In-Use
SEXTRA   DS CL38                       .    Extra data
LINELEN  EQU *-SCRNLINE                .
HDR      DS CL80                       . The screen header
         DS 0F                         .-------------------------------
REGMASK1 DS XL20                       . Move WSMASK here
REGMASK2 DS XL20                       . Here too - preserve reentrancy
S24MAX   DS PL8                        . 24 bit storage max
S24USE   DS PL8                        . 24 bit storage in use
S31MAX   DS PL8                        . 31 bit storage max
S31USE   DS PL8                        . 31 bit storage in use
SYSPLIST DS 6F                         . CA-IDMS "ParmList" area
DWORD    DS D                          . Convert to Decimal Work Area
CHARVALU DS CL16                       . Unpack Work Area
         DS CL1                        . Slack
TOTALU   DS PL8                        . Total 24bit + 31bit used
STORLEN  EQU *-STORAGE                 .------DBMS and OS Dsects-------
         DS 0F                         .
         COPY #CSADS                   . Common Storage Area (CA-IDMS)
         IHALDA                        . LocalDataArea       (IBM VSM)
         IHAASCB DSECT=YES,LIST=NO     . AddressSpaceCntlBlk (IBM DFP)
         IHAPSA  DSECT=YES,LIST=NO     . PrefixedSaveArea    (IBM DFP)
         END ,                         . ------------------------------
