{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "MA133", "INMTNODE": "MA133", "INMTUID": "N1", "INMFTIME": "20040510134321000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 27920, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "MA133.TSO.SAMPLIB", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"MA133.TSO.SAMPLIB": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27920, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 160, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "040129", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\x04'", "DS1LSTAR": "b'\\x00\\x01\\x0c'", "DS1TRBAL": "b'o\\x90'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03@\\x00\\x04\\x9b\\x80\\xb8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03@\\x00\\x04\\x9b\\x80\\xb8'", "b'X\\xf2\\xd5`\\x00\\x00\\x01~\\x00\\n\\x01~\\x00\\r\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 257, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00$\\x01\\x04\\x08\\x7f\\x01\\x04\\x11\\x1f\\x12\\x18\\x00\\x06\\x00\\x04\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2004-03-27T00:00:00", "modifydate": "2004-04-20T12:18:24", "lines": 6, "newlines": 4, "modlines": 0, "user": "MA133"}, "text": "THESE UTILITIES ARE PROVIDED AS IS WITH NO WARRANTIES OR GUARANTEES OF\nANY KIND WHATSOEVER. USE AT YOUR OWN RISK!\n\nyou may contact me at: mvs@robinandmariette.com\n\nyou may recieve udpates at: http://www.robinandmariette.com/mvs/rexx/\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$INSTALL": {"ttr": 261, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00!\\x01\\x04\\x04\\x8f\\x01\\x04\\x12\\x9f\\x12\\x14\\x00)\\x00\\t\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "2004-02-17T00:00:00", "modifydate": "2004-05-08T12:14:21", "lines": 41, "newlines": 9, "modlines": 0, "user": "MA133"}, "text": "//$INSTALL JOB (1005303),'$INSTALL',CLASS=P,\n//  MSGCLASS=X,REGION=8M,NOTIFY=&SYSUID\n//********************************************************************\n//* THIS WILL RUN AN EDIT MACRO ON ALL APPROPRIATE LIBRARIES TO      *\n//* CHANGE THE HIGH LEVEL QUALIFIERS FROM MA133.TSO TO WHATEVER YOUR *\n//* QUALIFIERS ARE. ENSURE THAT YOU INCLUDE ALL QUALIFIERS UP TO THE *\n//* VERY LAST LOW LEVEL QUALIFIER (SAMPLIB, SYSEXEC, ETC.).          *\n//* IF YOUR QUALIFIERS ARE VERY LONG, THERE IS A CHANCE THAT SOME    *\n//* INSTANCES WILL NOT BE CHANGED DUE TO BEING TOO LONG TO FIT ON    *\n//* A LINE. THIS SHOULD ONLY AFFECT DOCUMENTATION THOUGH, NOT ANY    *\n//* LOGIC IN THE REXX PROGRAMS THEMSELVES.                           *\n//*                                                                  *\n//* TO INSTALL:                                                      *\n//*   1) REVIEW AND UPDATE THE JOB CARD ABOVE.                       *\n//*   2) CHECK THE ISPF HLQ IN THE PROC ISPBATCH IN THIS LIB.        *\n//*   3) DO A GLOBAL CHANGE 'C NEWHLQ YOUR-HLQ'.                     *\n//*   4) DO !*NOT*! CHANGE MA133.TSO REFERENCES IN THE SYSTSIN DD    *\n//*   5) RUN THE JOB.                                                *\n//*                                                                  *\n//* WHEN THIS JOB COMPLETES SUCCESSFULLY, PROCEED TO THE $IVP MEMBER *\n//********************************************************************\n//HLQ      SET HLQ=NEWHLQ\n//********************************************************************\n//JCLLIB  JCLLIB ORDER=&HLQ..SAMPLIB\n//ISPF     EXEC ISPBATCH,HLQ=&HLQ\n//SYSTSIN   DD  *\n  PROFILE NOPREFIX\n  ISPSTART CMD(%EACHMEM NEWHLQ.LOGON   -\n     \"#INREXX MA133.TSO NEWHLQ\" 999)\n  ISPSTART CMD(%EACHMEM NEWHLQ.LOGON.PARMLIB   -\n     \"#INREXX MA133.TSO NEWHLQ\" 999)\n  ISPSTART CMD(%EACHMEM NEWHLQ.PARMLIB -\n     \"#INREXX MA133.TSO NEWHLQ\" 999)\n  ISPSTART CMD(%EACHMEM NEWHLQ.SAMPLIB -\n     \"#INREXX MA133.TSO NEWHLQ\" 999)\n  ISPSTART CMD(%EACHMEM NEWHLQ.SYSEXEC -\n     \"#INREXX MA133.TSO NEWHLQ\" 999)\n  ISPSTART CMD(%EACHMEM NEWHLQ.SVCDUMPS.SYSEXEC -\n     \"#INREXX MA133.TSO NEWHLQ\" 999)\n/*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$INSTAL2": {"ttr": 28, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00#\\x01\\x04\\x07O\\x01\\x04\\x08o\\x143\\x00*\\x00\\x1a\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2004-03-14T00:00:00", "modifydate": "2004-03-26T14:33:23", "lines": 42, "newlines": 26, "modlines": 0, "user": "MA133"}, "text": "/*********************************************************************/\n/* Installation Steps                                                */\n/*********************************************************************/\nOnce you have run the $INSTALL job and completed the steps in the\n$IVP member, you may follow these procedures to finish the install\nof the libraries.\n\n* Review the members in MA133.TSO.PARMLIB and customize accordingly.\n\n* Merge in the ISRCMDS command table in MA133.TSO.ISPTLIB with your\n  ISPF site command table. You can view the entries in this table\n  by following the $IVP member to logon using the CATLIBS exec. Once\n  in ISPF, go to the Commands Utility, usually option 3.9. View the\n  ISR command table to see what's in there.\n\n* If you plan to use CATLIBS to allocate your TSO libraries at logon\n  time, review the members in MA133.TSO.LOGON.PARMLIB:\n  > Add in any product libraries necessary. Use member MA133 as a\n    model. Ensure that MA133 is included in the @BASIC driver.\n  > Update the @BASIC member to add in any of the product members you\n    created in the previous step that you want allocated to all users.\n  > Create any necessary unique driver members you need (for regular\n    users, operators, developers, system programmers etc). Copy the\n    @SPECIAL member as a model.\n  > Review the #BASIC start command members to make any necessary\n    changes. Create new members as needed and refer to them in the\n    driver members created in the previous step.\n  > Review member $PRC2DRV to create a tso proc name to driver mapping.\n  > Edit MA133.TSO.LOGON(CATLIBS) and search for 'global'. There is a\n    small section of global variables to review here.\n  > Update your TSO logon procs to model the after\n    MA133.TSO.SAMPLIB(TSOBASIC).\n\n* If you do not intend to use CATLIBS, make sure the following\n  libraries are allocated to the DDs indicated:\n    | ISPMLIB MA133.TSO.ISPMLIB\n    | ISPPLIB MA133.TSO.ISPPLIB\n    | ISPTLIB MA133.TSO.ISPTLIB\n    | SYSEXEC MA133.TSO.SYSEXEC\n\n* Email me at mailto:mvs@robinandmariette.com if you run into any\n  difficulties.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$IVP": {"ttr": 36, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00C\\x01\\x04\\x07O\\x01\\x04\\x10?\\x15\\x05\\x003\\x002\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2004-03-14T00:00:00", "modifydate": "2004-04-12T15:05:43", "lines": 51, "newlines": 50, "modlines": 0, "user": "MA133"}, "text": "/*********************************************************************/\n/* Install Verification Steps                                        */\n/*********************************************************************/\nGo through the following procedures to test drive these libraries and\ndecide which pieces you want to use in your shop. Before proceeding you\nshould have run the $INSTALL job to change the HLQ used in the various\nlibraries. You should perform these steps before proceeding to the steps\nin the $INSTAL2 member.\n\n* Review member ISPF in MA133.TSO.LOGON.PARMLIB to make sure the ISPF\n  libs refered to are correct.\n\n* Return to the READY prompt in TSO, and enter \"EX\n  'MA133.TSO.LOGON(CATLIBS)'\" This should start up a new ISPF session\n  with these libraries allocated.\n\n* Enter \"FJ SAMPJOB\" to find the sample job from SAMPLIB. This will\n  test the find job command.\n\n* While you are viewing SAMPJOB, enter \">FP\" on the command line, and\n  place your cursor on the SAMPPROC proclib. This should find the sample\n  proc from SAMPLIB. Notice how it resolved the JCLLIB proc library.\n\n* While you are viewing SAMPPROC, enter \">FD\" on the command line, and\n  place your cursor on the \"DSN=&HLQ..SAMPLIB\" statement. This should\n  find the dataset MA133.TSO.SAMPLIB. Notice how it performed symbolic\n  substitution on the dataset name.\n\n* Enter \"FR FR\" to see if the find rexx program can find itself.\n\n* End from the various nested views. If you have CA-JCLCHECK installed,\n  edit MA133.TSO.SYSEXEC(NJCHECK) and review the CA-JCLCHECK parms to\n  ensure they reflect your environment. Once satisfied, enter \"NJ\n  SAMPJOB\".  If everything works, you will get a series of ISPF panels\n  which break the job down into various views. Hit PF1 to get an\n  explanation of the tables.\n\n* Go to the Search-For application in ISPF (usually 3.14). On the\n  lower right hand corner, ensure that 'Output Mode' is set to 'View'.\n  Search a library for a string you know exists. On the search results\n  list, enter 'KEYS' and set an available PFKEY to 'SRCHGO'. Enter\n  this PFKEY on any of the search results lines. This should view\n  the dataset on the correct line. See the SRCHGO exec for more.\n\n* Enter 'SS DSL' to get a dataset list screen using the STARTUP exec.\n  Enter 'SS PROC1' to edit 'SYS1.PROCLIB'. Enter 'SS' by itself to\n  see your ISPF sessions. Exit that screen and enter 'SS DSL' to\n  return to the dataset list screen. Enter 'SS /' to view your\n  shortcut table. See the end of the STARTUP exec for more details.\n\n* Proceed to the $INSTAL2 member to complete the install.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#INMACRO": {"ttr": 22, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x04\\x04\\x8f\\x01\\x04\\x07O\\x16U\\x00\\r\\x00\\x08\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2004-02-17T00:00:00", "modifydate": "2004-03-14T16:55:00", "lines": 13, "newlines": 8, "modlines": 0, "user": "MA133"}, "text": "/* rexx */\n/* this exec is strictly used to install the libraries. */\nAddress ISPEXEC\n\"VGET (OLDHLQ NEWHLQ) SHARED\"\nAddress ISREDIT\n\"MACRO\"\n\"CHANGE\" OLDHLQ NEWHLQ \"ALL\"\n\"(CHG) = DATA_CHANGED\"\nIf CHG = 'YES' Then Do\n  \"BUILTIN SAVE\"\n  \"BUILTIN END\"\nEnd\nElse \"BUILTIN CANCEL\"\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#INREXX": {"ttr": 20, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00@\\x01\\x04\\x04\\x8f\\x01\\x04\\x07O\\x16T\\x00\\x11\\x00\\x08\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2004-02-17T00:00:00", "modifydate": "2004-03-14T16:54:40", "lines": 17, "newlines": 8, "modlines": 0, "user": "MA133"}, "text": "/* rexx */\n/* this exec is strictly used to install the libraries. */\nArg OldHlq NewHlq Dsn .\n\nDsn = PrefDsn(Dsn)\nAddress ISPEXEC\n\"VPUT (OLDHLQ NEWHLQ) SHARED\"\n\"CONTROL ERRORS RETURN\"\n\"EDIT DATASET('\"Dsn\"') MACRO(#INMACRO)\"\nIf RC > 4 Then Do\n  Say \"RC=\"RC \"from edit of dataset '\"Dsn\"'\"\n  If RC = 14 Then Say 'Dataset is in use.'\n  ZISPFRC = 4\n  \"VPUT ZISPFRC SHARED\"\nEnd\n\nReturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FTPPDSJ": {"ttr": 30, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x009\\x01\\x04\\x08_\\x01\\x04\\x08\\x7f#1\\x00\\x10\\x00\\x06\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2004-03-25T00:00:00", "modifydate": "2004-03-27T23:31:39", "lines": 16, "newlines": 6, "modlines": 0, "user": "MA133"}, "text": "//FTPPDS JOB (1005303),'FTP A PDS',CLASS=T,                             JOB00498\n//  MSGCLASS=X,REGION=8M,NOTIFY=&SYSUID\n//********************************************************************\n//* SAMPLE JOB TO RUN FTPPDS IN BATCH. SEE SAMPLIB(FTPPDSS) FOR MORE.\n//********************************************************************\n//HLQ      SET HLQ=MA133.TSO\n//********************************************************************\n//JCLLIB  JCLLIB ORDER=&HLQ..SAMPLIB\n//TSO      EXEC TSOBATCH\n//* UNCOMMENT THE FOLLOWING FOR DNS LOOKUP, IF NECESSARY, OR ADD THIS\n//* DD TO THE TSOBATCH PROC.\n//*SYSTCPD  DD DISP=SHR,DSN=TCPIP.PROD.PARMLIB(CONFIG00)\n//SYSTSIN  DD *                                                         RM.PERM.\nFTPPDS 'MA133.TSO.SAMPLIB(FTPPDSS)'                                     RM.PERM.\n/*\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FTPPDSR": {"ttr": 32, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x01\\x04\\x07O\\x01\\x04\\x08\\x7f#3\\x007\\x00+\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2004-03-14T00:00:00", "modifydate": "2004-03-27T23:33:00", "lines": 55, "newlines": 43, "modlines": 0, "user": "MA133"}, "text": "* sample ftppds profile\n* this is an alternate method of downloading my product libs directly\n* without having to use the xmit dataset. see ftppds in sysexec.\n* to execute enter \"tso ftppds 'ma133.tso.samplib(ftppdsr)'\"\n* the only trouble is i don't have an anonymous ftp account, so this\n* won't work. to test this out tho, you could send the datasets to\n* an ftp site using the ftppdss member, then receive it with this.\n\nFlow = \"RECEIVE\"                          * the direction\nHost = \"ftp.robinandmariette.com\"         * host name\nUser = \"anonymous\"                        * user name\nMail = \"myuser@email.com\"                 * mail for anon user\nRoot = \"/Rexx/Pds/\"                       * root directory\nType = \"A\"                                * default type\nExit = \"FTPPDSR1\"                         * receive exit exec\nAlc1 = \"TRACKS(5 5) DIR(10)\"              * space to alloc\n\nRDir = \"ISPMLIB\"\nLPds = \"TSO.ISPMLIB\"\nRun\n\nRDir = \"ISPPLIB\"\nLPds = \"TSO.ISPPLIB\"\nRun\n\nRDir = \"ISPPLIB/DTLSOURC\"\nLPds = \"TSO.ISPPLIB.DTLSOURC\"\nRun\n\nType = \"I\"\nRDir = \"ISPTLIB\"\nLPds = \"TSO.ISPTLIB\"\nRun\n\nType = \"A\"\nRDir = \"LOGON\"\nLPds = \"TSO.LOGON\"\nRun\n\nRDir = \"LOGON/PARMLIB\"\nLPds = \"TSO.LOGON.PARMLIB\"\nRun\n\nRDir = \"PARMLIB\"\nLPds = \"TSO.PARMLIB\"\nRun\n\nRDir = \"SAMPLIB\"\nLPds = \"TSO.SAMPLIB\"\nRun\n\nRDir = \"SYSEXEC\"\nLPds = \"TSO.SYSEXEC\"\nAlc1 = \"TRACKS(20 20) DIR(25)\"\nRun\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FTPPDSR1": {"ttr": 26, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x10\\x01\\x04\\x08_\\x01\\x04\\x08o\\x14!\\x00#\\x00#\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-03-25T00:00:00", "modifydate": "2004-03-26T14:21:10", "lines": 35, "newlines": 35, "modlines": 0, "user": "MA133"}, "text": "/* rexx */\n/* this will take a file name such as LO12345.txt and parse it to */\n/* a valid pds member name LO12345 and set the xfer mode to text  */\n/* or binary (for .BIN files). used with exec ftppds.             */\nParse Arg FileName .\nIf FileName = '.' | FileName = '..' Then Return\nIf FileName = 'ZPDSLIST.txt' Then Return\n\n/* save file name to upper case var */\nUpperFileName = FileName\nUpper UpperFileName\n\n/* make sure we can get it down to 8 chars or less */\nParse Var UpperFileName Member '.'\nIf Length(Member) > 8 Then Do\n  Say 'Unable to parse' FileName 'down to 8 chars. Skipping.'\n  Return\nEnd\n\n/* decide what type of xfer to make it. you can code whatever filters*/\n/* you like here to process out particular files you don't want      */\n/* to transfer or set modes based on different file extentions.      */\nSelect\n  When Pos('.TXT',UpperFileName) > 0 Then Type = 'A'\n  When Pos('.BIN',UpperFileName) > 0 Then Type = 'I'\n  Otherwise Do\n    Say 'Defaulting' FileName 'to binary type transfer'.\n    Type = 'I'\n  End\nEnd\n\nQueue 'TYPE' Type\nQueue 'GET' FileName Member '(REPLACE'\n\nReturn\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "FTPPDSS": {"ttr": 267, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x003\\x01\\x04\\x08_\\x01\\x04\\x12\\x9f\\x12C\\x00E\\x001\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2004-03-25T00:00:00", "modifydate": "2004-05-08T12:43:33", "lines": 69, "newlines": 49, "modlines": 0, "user": "MA133"}, "text": "* sample ftppds profile\n* i use this to send my libs to the ftp site. compare this to the\n* ftppdsr dataset. you won't be able to execute this using anonymous\n* since i don't have anonymous ftp enabled at my web site.\n\nFlow = \"SEND\"                             * the direction\nHost = \"ftp.robinandmariette.com\"         * host name\nRoot = \"/Rexx/Pds/\"                       * root directory\nExit = \"FTPPDSS1\"                         * send exit exec\nType = \"A\"                                * default type\n\nRDir = \"ISPMLIB\"\nLPds = \"TSO.ISPMLIB\"\nRun\n\nRDir = \"ISPPLIB\"\nLPds = \"TSO.ISPPLIB\"\nRun\n\nRDir = \"ISPPLIB/DTLSOURC\"\nLPds = \"TSO.ISPPLIB.DTLSOURC\"\nRun\n\nType = \"I\"\nRDir = \"ISPTLIB\"\nLPds = \"TSO.ISPTLIB\"\nRun\n\nType = \"A\"\nRDir = \"LOGON\"\nLPds = \"TSO.LOGON\"\nRun\n\nRDir = \"LOGON/PARMLIB\"\nLPds = \"TSO.LOGON.PARMLIB.X\"\nRun\n\nRDir = \"PARMLIB\"\nLPds = \"TSO.PARMLIB\"\nRun\n\nRDir = \"SAMPLIB\"\nLPds = \"TSO.SAMPLIB\"\nRun\n\nRDir = \"SYSEXEC\"\nLPds = \"TSO.SYSEXEC\"\nRun\n\nRDir = \"SVCDUMPS/ISPMLIB\"\nLPds = \"TSO.SVCDUMPS.ISPMLIB\"\nRun\n\nRDir = \"SVCDUMPS/ISPPLIB\"\nLPds = \"TSO.SVCDUMPS.ISPPLIB\"\nRun\n\nRDir = \"SVCDUMPS/ISPPLIB/DTLSOURC\"\nLPds = \"TSO.SVCDUMPS.ISPPLIB.DTLSOURC\"\nRun\n\nRDir = \"SVCDUMPS/ISPSLIB\"\nLPds = \"TSO.SVCDUMPS.ISPSLIB\"\nRun\n\nRDir = \"SVCDUMPS/SYSEXEC\"\nLPds = \"TSO.SVCDUMPS.SYSEXEC\"\nRun\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FTPPDSS1": {"ttr": 24, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x04\\x08_\\x01\\x04\\x08_\\x13\\x02\\x00\\x11\\x00\\x11\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-03-25T00:00:00", "modifydate": "2004-03-25T13:02:12", "lines": 17, "newlines": 17, "modlines": 0, "user": "MA133"}, "text": "/* rexx */\n/* this will take a member name and return a file name. used with */\n/* the ftppds rexx. you can skip files here or change from text   */\n/* or binary based on the member name.                            */\nParse Arg Member . . Type .\nIf Member = \"\" Then Return\n\nIf Member = \"ZPDSLIST\" Then Do\n  Queue \"TYPE A\"\n  Queue \"PUT ZPDSLIST ZPDSLIST.txt\"\n  Return\nEnd\n\nIf Type = 'I' Then Queue \"PUT\" Member Member\".bin\"\nElse Queue \"PUT\" Member Member\".txt\"\n\nReturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ISPBATCH": {"ttr": 34, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00S\\x01\\x04\\x04\\x8f\\x01\\x04\\x10\\x0f\\x11\\x18\\x00+\\x00&\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2004-02-17T00:00:00", "modifydate": "2004-04-09T11:18:53", "lines": 43, "newlines": 38, "modlines": 0, "user": "MA133"}, "text": "//ISPBATCH PROC PRM=,HLQ=MA133.TSO,ILQ=ISP\n//*\n//* THIS IS A PROC TO RUN ISPF IN BATCH. CHECK THE ILQ SYMBOLIC ABOVE\n//* TO ENSURE THAT IT REFLECTS YOUR SUPPLIED IBM ISPF LIBRARIES\n//*\n//ISPBATCH EXEC PGM=IKJEFT1A,DYNAMNBR=256,PARM=&PRM\n//ISPLLIB   DD  DSN=&ILQ..SISPLOAD,DISP=SHR\n//ISPMLIB   DD  DSN=&HLQ..ISPMLIB,DISP=SHR\n//          DD  DSN=&ILQ..SISPMENU,DISP=SHR\n//ISPPLIB   DD  DSN=&HLQ..ISPPLIB,DISP=SHR\n//          DD  DSN=&ILQ..SISPPENU,DISP=SHR\n//ISPSLIB   DD  DSN=&ILQ..SISPSENU,DISP=SHR\n//ISPTLIB   DD  DISP=(,DELETE),UNIT=3390,SPACE=(TRK,(5,2,10),RLSE),\n//          LRECL=80,RECFM=FB,BLKSIZE=0\n//          DD  DSN=&HLQ..ISPTLIB,DISP=SHR\n//          DD  DSN=&ILQ..SISPTENU,DISP=SHR\n//ISPPROF   DD  DISP=(,DELETE),UNIT=3390,SPACE=(TRK,(5,2,10),RLSE),\n//          LRECL=80,RECFM=FB,BLKSIZE=0\n//ISPLOG    DD  SYSOUT=*,DCB=(LRECL=125,BLKSIZE=129,RECFM=VA)\n//ISPCTL0   DD  DISP=(,DELETE),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//          DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//ISPCTL1   DD  DISP=(,DELETE),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//          DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//ISPCTL2   DD  DISP=(,DELETE),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//          DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//ISPCTL3   DD  DISP=(,DELETE),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//          DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//ISPCTL4   DD  DISP=(,DELETE),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//          DCB=(LRECL=80,BLKSIZE=800,RECFM=FB)\n//ISPWRK1   DD  DISP=(,DELETE),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//          DCB=(LRECL=256,BLKSIZE=2560,RECFM=FB)\n//ISPWRK2   DD  DISP=(,DELETE),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//          DCB=(LRECL=256,BLKSIZE=2560,RECFM=FB)\n//ISPWRK3   DD  DISP=(,DELETE),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//          DCB=(LRECL=256,BLKSIZE=2560,RECFM=FB)\n//ISPWRK4   DD  DISP=(,DELETE),UNIT=SYSDA,SPACE=(CYL,(1,1)),\n//          DCB=(LRECL=256,BLKSIZE=2560,RECFM=FB)\n//SYSEXEC   DD  DISP=SHR,DSN=&HLQ..SYSEXEC\n//          DD  DISP=SHR,DSN=&HLQ..SAMPLIB\n//SYSPRINT  DD  SYSOUT=*\n//SYSTSPRT  DD  SYSOUT=*\n//SYSTERM   DD  SYSOUT=*\n//SYSTSIN   DD  DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPJOB": {"ttr": 12, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x01\\x04\\x05_\\x01\\x04\\x05_\\x123\\x00\\t\\x00\\t\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2004-02-24T00:00:00", "modifydate": "2004-02-24T12:33:14", "lines": 9, "newlines": 9, "modlines": 0, "user": "MA133"}, "text": "//SAMPJOB  JOB (1005303),'MCTS SAMPLES',\n//  CLASS=P,MSGCLASS=X,REGION=8M,NOTIFY=&SYSUID\n//********************************************************************\n//* THIS JOB CAN BE USED TO TEST OUT THE FJ AND NJ COMMANDS          *\n//********************************************************************\n//HLQ     SET  HLQ=MA133.TSO\n//JCLLIB  JCLLIB ORDER=(MA133.TSO.SAMPLIB)\n//STEP1   EXEC SAMPPROC\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPPROC": {"ttr": 14, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00 \\x01\\x04\\x05_\\x01\\x04\\x05_\\x13G\\x00\\x07\\x00\\x03\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2004-02-24T00:00:00", "modifydate": "2004-02-24T13:47:20", "lines": 7, "newlines": 3, "modlines": 0, "user": "MA133"}, "text": "//SAMPPROC PROC HLQ=MA133.TSO\n//STEP1    EXEC PGM=IEFBR14\n//DD1       DD  DSN=&HLQ..SAMPLIB,DISP=SHR\n//REPORT1   DD  SYSOUT=(C,WTR1)\n//REPORT2   DD  SYSOUT=(D,WTR2),DEST=R1\n//STEP2    EXEC PGM=IEFBR14\n//DD2       DD  DSN=BAD.DATA.SET,DISP=SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOBASIC": {"ttr": 18, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x07\\x01\\x04\\x07O\\x01\\x04\\x07O\\x16P\\x00\\x0b\\x00\\x07\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2004-03-14T00:00:00", "modifydate": "2004-03-14T16:50:07", "lines": 11, "newlines": 7, "modlines": 0, "user": "MA133"}, "text": "//TSOBASIC PROC\n//*\n//* A SAMPE TSO LOGON PROC FOR USE WITH CATLIBS. SEE THE CATLIBS EXEC\n//* BELOW FOR MORE DETAILS.\n//*\n//TSOBASIC EXEC PGM=IKJEFT01,DYNAMNBR=256,\n//         PARM='EX ''MA133.TSO.LOGON(CATLIBS)'''\n//SYSLBC   DD DISP=SHR,DSN=SYS1.BRODCAST\n//SYSPRINT DD TERM=TS,SYSOUT=*\n//SYSTERM  DD TERM=TS,SYSOUT=*\n//SYSIN    DD TERM=TS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSOBATCH": {"ttr": 16, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x11\\x01\\x04\\x04\\x8f\\x01\\x04\\x07O\\x15\\x04\\x00\\x08\\x00\\x07\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2004-02-17T00:00:00", "modifydate": "2004-03-14T15:04:11", "lines": 8, "newlines": 7, "modlines": 0, "user": "MA133"}, "text": "//TSOBATCH PROC PRM='',HLQ=MA133.TSO\n//TSOBATCH EXEC PGM=IKJEFT1A,DYNAMNBR=256,PARM=&PRM\n//SYSEXEC   DD  DISP=SHR,DSN=&HLQ..SYSEXEC\n//          DD  DISP=SHR,DSN=&HLQ..SAMPLIB\n//SYSPRINT  DD  SYSOUT=*\n//SYSTSPRT  DD  SYSOUT=*\n//SYSTERM   DD  SYSOUT=*\n//SYSTSIN   DD  DUMMY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ZPDSLIST": {"ttr": 263, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x004\\x01\\x04\\x05\\x0f\\x01\\x04\\x12\\x9f\\x12\\x14\\x00\\x10\\x00\\x03\\x00\\x00\\xd4\\xc1\\xf1\\xf3\\xf3@@@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2004-02-19T00:00:00", "modifydate": "2004-05-08T12:14:34", "lines": 16, "newlines": 3, "modlines": 0, "user": "MA133"}, "text": "$DOC                      6  2004/03/27  2004/04/20 12:18:24  MA133\n$INSTALL                 41  2004/02/17  2004/05/08 12:14:21  MA133\n$INSTAL2                 42  2004/03/14  2004/03/26 14:33:23  MA133\n$IVP                     51  2004/03/14  2004/04/12 15:05:43  MA133\n#INMACRO                 13  2004/02/17  2004/03/14 16:55:00  MA133\n#INREXX                  17  2004/02/17  2004/03/14 16:54:40  MA133\nFTPPDSJ                  16  2004/03/25  2004/03/27 23:31:39  MA133\nFTPPDSR                  55  2004/03/14  2004/03/27 23:33:00  MA133\nFTPPDSR1                 35  2004/03/25  2004/03/26 14:21:10  MA133\nFTPPDSS                  69  2004/03/25  2004/05/08 10:42:34  MA133\nFTPPDSS1                 17  2004/03/25  2004/03/25 13:02:12  MA133\nISPBATCH                 43  2004/02/17  2004/04/09 11:18:53  MA133\nSAMPJOB                   9  2004/02/24  2004/02/24 12:33:14  MA133\nSAMPPROC                  7  2004/02/24  2004/02/24 13:47:20  MA133\nTSOBASIC                 11  2004/03/14  2004/03/14 16:50:07  MA133\nTSOBATCH                  8  2004/02/17  2004/03/14 15:04:11  MA133\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT674/CBT.V500.FILE674.PDS/SAMPLIB.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT674/CBT.V500.FILE674.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}