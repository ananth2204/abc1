{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012456000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 529074, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 8, "INMDSNAM": "CBT.V500.FILE616.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 529074, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE616.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\t\\x08'", "DS1TRBAL": "b'5\\x86'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\x87\\x00\\x07\\x04\\x88\\x00\\x01\\x00\\n'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04:\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\t\\x15\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf8@@@'", "ispf": {"version": "04.58", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T09:15:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-458"}, "text": "REGULAR CBT TAPE - VERSION 458    FILE:  616\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT458.FILE616\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 12 MEMBERS COUNTED; CUMULATIVE SIZE IS 4,673 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/07/03    09:15:25    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$DOC": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\t\\x01\\x03\\x06o\\x01\\x03\\x06o\\t\\x05\\x00H\\x00L\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T09:05:09", "lines": 72, "newlines": 76, "modlines": 0, "user": "SBGOLOB"}, "text": "   S/390 Corner\n\n   ----------------------------------------------------------\n   I currently make my living supporting, among other\n   things, IBM S/390 computer systems. This page contains\n   some items that might be of use to others in this\n   field, if only of historic interest.\n   ----------------------------------------------------------\n\n   DHCP on the Mainframe\n\n   I have recently moved our DHCP server from Windows NT to\n   the mainframe. My experiences, good and bad can be found\n   here.\n              (member $DHCP)\n   ----------------------------------------------------------\n\n   IBM/Cisco Router Interoperability - An Example\n\n   I have recently had to integrate Cisco routers into an\n   all IBM network including IBM 2212 routers. This document\n   describes the Cisco configuration file used to provide IP\n   and SNA connectivity between a Cisco 2610 and an IBM\n   2212.\n              (member $IBCISCO)\n   ----------------------------------------------------------\n\n   Software\n\n   OS/390     IEFUSI is an SMF exit used to override the\n              region size for a job step. This version\n              while specific to a particular sites needs,\n              may be useful as a starting point for\n              writing your own.\n\n              Get zipped source code\n              RACFXREF is a program to produce a cross\n              reference of rules used by userids and\n              groups. A list of rules for which there is\n              no matching group or user is also\n              displayed. This program was knocked up in a\n              hurry, and it shows ! My current shop uses\n              ACF2 so I have not tested it recently. If\n              nothing else, it is an example of how to\n              use the ICHEINTY macro.\n\n              ROPMONT\n\n              This program alerts the system operator\n              when one or more address spaces are not\n              running. While it may not be useful in your\n              environment, it serves as a good example of\n              how a program can respond to Modify and\n              Stop commands using the QEDIT macro.\n\n              GENOAT\n\n              Genoat is a Rexx program that is used to\n              generate an OAT (OSA Address Table)\n              required to configure an Open Systems\n              Adapter. Along with the Rexx source is\n              sample input and output.\n\n   CICS Stuff ISSIGN is a CICS signon program. This\n              program was originally written to replace\n              the then, very limited IBM supplied\n              program. It was last tested under CICS\n              Version 4.1\n\n\n-----------------------------------------------------------\n              Contact me at: nigelt@bigfoot.com\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$DHCP": {"ttr": 521, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\x12\\x00\\x00\\xdf\\x00\\xdf\\x00\\x00\\xd5\\xe3\\xc8\\xd6\\xd4\\xc1\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T12:00:00", "lines": 223, "newlines": 223, "modlines": 0, "user": "NTHOMAS"}, "text": "    DHCP on the Mainframe\n\n    ---------------------------------------------------------\n\n    I have been running DHCP server on a Windows NT server\n    for a year or so. However, despite being generally\n    reliable, the server required  re-booting too often for\n    my liking. With the installation of OS/390 2.9 on our\n    mainframe, I decided to migrate to the DHCP server that\n    came along with Communications Server.\n\n    My purpose was twofold. First, of all the servers in our\n    shop, the mainframe remains the most reliable. Second,\n    it was an opportunity to start consolidating the many NT\n    servers to one platform - OS/390.\n\n    The installation was done in two phases. In phase one,\n    DHCP was configured to support the local subnet. In\n    phase two it would be expanded to provide backup for all\n    the remote subnets. A possible third phase would be to\n    implement dynamic DNS.\n\n    Although the documentation is somewhat sparse, I managed\n    to come up with an initial configuration file for phase\n    one:\n\n         numLogFiles 4\n         logFileSize 400\n         logFileName /tmp/dhcpsd.log\n         logItem SYSERR\n         logItem OBJERR\n         logItem PROTERR\n         logItem WARNING\n         logItem EVENT\n         logItem ACTION\n         logItem INFO\n         leaseTimeDefault 3 days\n         leaseExpireInterval 10 minutes\n         supportBOOTP No\n         SupportUnlistedClients Yes\n\n         #\n         # Subnet 10.1 - Main Data Centre\n         #\n\n         subnet 10.1.0.0 255.255.0.0\n         10.1.0.100-10.1.0.255\n         {\n         option 1 255.255.0.0        # Mask\n         option 3 10.1.0.30          # Router\n         option 6 10.1.0.20          # DNS\n         option 15 mycentre.org.om   # Domain Name\n         }\n\n    The configuration file was saved as /etc/dhcpsd.cfg and\n    the DHCP server was executed as a started task using the\n    sample JCL (DHCP in TCPIP.SEZAINST).\n\n    After running the server for a few days, I had made a\n    number of observations about the product:\n\n       * Considering the size of our local LAN, about 100\n         devices, the DHCPSD address space appeared to\n         consume excessive resources, both EXCPs and CPU\n         time\n       * The log file contained many cryptic and\n         undocumented messages\n       * Windows users were unable to renew a lease with\n         ipconfig /renew. A reboot was required\n       * ipconfig /release launched an unexpected address\n         space.\n\n    Excessive EXCPS\n\n    With such a small LAN, an EXCP count of about 100,000 a\n    day seemed somewhat excessive. When I reported this to\n    IBM they came up with the following suggestion:\n\n       * Use Smart Caching. This is an undocumented feature\n         which when enabled will cause DHCP to only write\n         its files during garbage collection which is run\n         every \"leaseExpireInterval\". Smart Caching is\n         enabled by creating a file /etc/dhcp_sc The\n         contents of the file do not matter.\n\n    In addition to this change, I also increased\n    LeaseExpireInterval to 60 minutes and set\n    StatisticSnapshot to 8. This creates statistics every 8\n    hours (LeaseExpireInterval x 8).\n\n    Excessive CPU\n\n    I felt that for such a small network, DHCP was consuming\n    too much CPU. In my case, more than NetView. The main\n    reason for this is that the DHCP address space seems to\n    consume CPU at a steady rate even if no requests are\n    coming in. In my case a constant half to one percent.\n    Although I reported this to IBM, I never got an\n    explanation of why it worked this way.\n\n    Cryptic Messages\n\n    Depending on what LogItem commands are contained in the\n    configuration file, the server can log many messages.\n    Most are simply documenting the flow of requests and\n    responses and can be ignored. Some of the messages I was\n    getting however seemed to indicate a problem.\n\n    Unfortunately, the messages don't have message numbers,\n    not unusual in Unix perhaps, but an anathema to MVS\n    sysprogs.\n\n    I won't detail all the messages here, but despite a long\n    and sometimes painful correspondence with IBM support, I\n    never got a satisfactory explanation of what the\n    messages meant and why I was getting them.\n\n    For example, what does the following message indicate. I\n    suspect it may be security related (we run ACF2):\n\n         PROTERR: addArpEntry, SIOCSARP ioctl failed\n         (117)\n\n    IPCONFIG /RENEW Problem\n\n    This problem occurred spasmodically  on workstations\n    running Windows. If the command ipconfig /renew was\n    issued the following error message appeared:\n\n         IP Configuration Error DHCP Server\n         Unavailable: Renewing adapter\n\n    Despite sending console logs and traces of this problem\n    to IBM, it was never resolved. The only suggestion was\n    that it should be followed up with Microsoft.\n\n    IPCONFIG /RELEASE Problem\n\n    When the command ipconfig /release was issued from a\n    Windows PC a new address space was created running the\n    command 'nsupdate -b'.  This address space entered a\n    wait state and the following message was logged by the\n    DHCP server:\n\n    WARNING:  do_nsupdate_packet: something went wrong in\n    starting nsupdate\n\n    This too was reported to IBM. Their response 'nsupdate\n    -b is only used internally by DHCP therefore it is not\n    documented' - well, thanks, very helpful.\n\n    Phase Two\n\n    Despite these problems, I pressed on with phase two.\n    This meant adding a separate subnet for each remote\n    network and configuring the routers to forward bootp\n    packets to OS/390. The final configuration file now\n    looked like this:\n\n    numLogFiles 4\n    logFileSize 400\n    logFileName /tmp/dhcpsd.log\n    logItem SYSERR\n    logItem OBJERR\n    logItem PROTERR\n    logItem WARNING\n    logItem EVENT\n    logItem ACTION\n    logItem INFO\n    leaseTimeDefault 3 days\n    leaseExpireInterval 60 minutes\n    StatisticSnapshot 8\n    supportBOOTP No\n    SupportUnlistedClients Yes\n\n    #\n    # Subnet 10.1 - Main Data Centre\n    #\n\n    subnet 10.1.0.0 255.255.0.0 10.1.0.100-10.1.0.255\n    {\n    option 1 255.255.0.0        # Mask\n    option 3 10.1.0.30          # Router\n    option 6 10.1.0.20          # DNS\n    option 15 mycentre.org.om   # Domain Name\n    }\n    #\n    # Subnet 10.3.0 - Remote location 1\n    #\n\n    subnet 10.3.0.0 255.255.255.0 10.3.0.100-10.3.0.150\n    {\n    option 1 255.255.255.0   # Mask\n    option 3 10.3.0.30       # Router\n    }\n\n    #\n    # Subnet 10.4.0 - Remote Location 2\n    #\n\n    subnet 10.4.0.0 255.255.255.0 10.4.0.100-10.4.0.150\n    {\n    option 1 255.255.255.0   # Mask\n    option 3 10.4.0.30       # Router\n    }\n\n    # More subnets left out for brevity\n\n    Final Thoughts\n\n    Despite the many unexplained and continuing problems\n    with DHCP on the mainframe, I have  stuck with it and at\n    the time of writing we are running in production mode.\n\n     However it is likely that as soon as we have migrated\n    our NT servers to Windows 2000, we will move the DHCP\n    server back to Windows. There have just been to many\n    problems and below par support from IBM to continue\n    running the server on the mainframe.\n\n\n  ------------------------------------------------------------------------\n    Contact me at: nigelt@bigfoot.com\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$IBCISCO": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\x12\\x00\\x01B\\x01B\\x00\\x00\\xd5\\xe3\\xc8\\xd6\\xd4\\xc1\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T12:00:00", "lines": 322, "newlines": 322, "modlines": 0, "user": "NTHOMAS"}, "text": "\n   IBM/Cisco Interoperability\n\n\n\n   We have successfully been using IBM 2212 routers for a couple\n   of years. The routers are used to connect branch offices to\n   the headquarters providing both IP and SNA connectivity using\n   DLSw.\n\n   DLSw is used to connect remote Ethernet attached Microsoft SNA\n   servers and SDLC attached 3174 communications controllers.\n\n   With the withdrawal from marketing of the IBM routers, Cisco\n   routers are now the order of the day.\n\n   While there is now an excellent IBM Redbook (SG24-5865 IBM\n   Router Interoperability and Migration Examples) on the\n   subject, the examples given, especially for DLSw were too\n   complex for our needs.\n\n   In this document, a Cisco router configuration that provides\n   for both IP and DLSw connectivity to a central 2212 router is\n   described. It is assumed that the reader is conversant with\n   the IBM 2212 series configuration.\n\n   Note: This was my first exposure to a Cisco router and I had\n   two days to get it working.\n\n\n   dlsw local-peer peer-id 10.20.255.1\n   dlsw remote-peer 0 tcp 10.1.0.29\n   dlsw bridge-group 1\n   bridge 1 protocol ieee\n\n   These global statements are used to define the local and\n   remote DLSw peers and to enable bridging, giving a bridge\n   group number.\n\n   The local-peer statement defines the IP address that is to be\n   used as the local DLSw peer. For 2212 routers this would be\n   the internal IP address. Cisco routers do not have an Internal\n   IP address, so we must use another IP address. The address\n   used can be any IP address that has been defined on an\n   interface. So, for example, we could use the IP address\n   defined for the Ethernet interface. However, this would mean\n   that DLSw would only work when the Ethernet interface was\n   active - This may not always be true. A solution is to define\n   a loopback interface and use its IP address for the local-peer\n   id. A loopback interface is always active. The only\n   complication is that the IP address for the loopback interface\n   must be in a unique subnet - that is we can't use the same\n   subnet as the Ethernet interface (like we can for the internal\n   2212 IP address). The convention we used is to take the\n   Ethernet network, in this case 10.20.0 and make the last\n   number 255 and use a host address of 1. This makes the\n   loopback address 10.20.255.1. Another option is to use the IP\n   address of the serial connection, in our case 10.240.11.2.\n\n   The remote-peer statement defines the id of the remote peer\n   (the 2212) and what protocol should be used to transfer the\n   DLSw packets. For connection to a non Cisco box, we can only\n   use TCP. The IP address given is the internal IP address of\n   the central 2212 in this example 10.1.0.29\n\n   Finally, to activate DLSw on a LAN interface (Ethernet or\n   Token Ring), we must enable bridging (on the 2212 we do this\n   by enabling ASRT). We give the bridge group a number, which we\n   will use later.  Note that if we only wanted to provide DLSw\n   to serial attached devices, such as a 3174, we would not need\n   to activate bridging.\n\n   Warning When you turn on bridging, the IOS makes the\n   assumption that you don't want routing and turns it off (with\n   a no ip routing statement), you need to turn it back on (ip\n   routing).\n\n   If you want to restrict traffic to SNA and not send Netbios\n   packets there are various ways to do this. One way is to\n   filter by SAP. First create an access list:\n\n   access-list 200 permit 0x0000 0x0d0d\n\n   Then reference the list from the dlsw remote-peer statement:\n\n   dlsw remote-peer 0 tcp 10.1.0.29 lsap-output-list 200\n\n   interface Loopback0\n   ip address 10.20.255.1 255.255.255.255\n\n   These statements enable a loopback interface and assign an IP\n   address for use as the DLSw local peer - note the mask of\n   255.255.255.255\n\n   Interface Ethernet0/0\n   ip address 10.20.0.30 255.255.255.0\n   ip helper-address 10.1.0.5\n   no ip mroute-cache\n   bridge-group 1\n\n   These statements define the Ethernet interface. The 'no ip\n   mroute-cache' was added by IOS. The bridge-group statement\n   defines the bridge group that this interface belongs to. This\n   should match the group defined above for DLSw. If you are not\n   using DLSw on the Ethernet interface, you will not need this.\n\n   The ip helper-address statement defines the address of a\n   server where broadcast packets are to be forwarded. The global\n   forward-protocol statement is used to define what packets are\n   forwarded. In our case we want to forward bootp packets to the\n   backup dhcp server running on the mainframe at the central\n   site.\n\n   Note:the default is to forward a number of UDP packets,\n   including netbios, dns and bootp. To only forward bootp\n   packets, we have to specify the port numbers we don't want\n   forwarded by using 'no forward-protocol statements'. See the\n   full configuration for details.\n\n   interface serial0/0\n   mtu 2048\n   ip address 10.240.11.2 255.255.255.0\n   encapsulation ppp\n   ip tcp header-compression\n   no ip mroute-cache\n\n   These statements define the serial interface that connects to\n   the central 2212 router. Note that this router has a two port\n   serial module with serial interfaces serial0/0 and serial0/1.\n\n   The MTU statement is required to make the MTU (Maximum\n   Transmission Unit) match that of the 2212. The Cisco default\n   is 1500, while the 2212 defaults to 2048. (Note: When I\n   displayed the PPP MTU in use from the 2212 it was 1500 - go\n   figure).\n\n   By default, Cisco routers use the HDLC protocol, with some\n   Cisco specific protocol changes. To talk to a non Cisco\n   router, such as a 2212, we must use PPP and not HDLC. The\n   encapsulation statement changes the protocol to PPP.\n\n   To improve performance, we have requested that the IP header\n   be compressed. On slow connections, we could also use packet\n   compression (compress stac).\n\n   interface serial0/1\n   mtu 4400\n   no ip address\n   encapsulation sdlc\n   no ip mroute-cache\n   no keepalive\n   nrzi-encoding\n   clockrate 19200\n   sdlc role primary\n   sdlc vmac 4000.3174.2000\n   sdlc address C1\n   sdlc sdlc-largest-frame C1 521\n   sdlc xid c1 05d20010\n   sdlc partner 0800.5a8b.0761 c1\n   sdlc dlsw c1\n\n   These statements define the serial interface that is used to\n   connect a 3174 using SDLC. The MTU statement is used to set\n   the MTU size required (this was taken from the IBM red book).\n\n   nrzi-encoding is used to change from the default of nrz\n   encoding. This should match the option used when the 3174 was\n   customized.\n\n   The clockrate statement is used to specify the speed that we\n   will connect to the 3174 with. This value depends on the cable\n   used to connect the 3174. For RS-232, 19200 is the maximum.\n   For V35, 64000 could be used. Note that for the Cisco, we\n   don't have to define the cable type as we do for the 2212,\n   this is discovered automatically by the smart serial module.\n\n   The various SDLC statements are used to define SDLC specific\n   information, and DLSw related details. Most are self\n   explanatory and have a direct relation to the set link\n   commands used on the 2212.\n\n   The sdlc vmac statement (sdlc vmac 4000.3174.2000) defines the\n   virtual mac address that will be used by DLSw to connect to\n   the central site. We have used a naming convention of 3174\n   followed by the IP subnet number 20. The final 00 will be\n   changed by the IOS software to match the SDLC address of the\n   connecting 3174. This will result in a mac address of\n   4000317420C1. Just be sure to pick an address that is not used\n   anywhere else on the network.\n\n   The sdlc xid statement (sdlc xid C1 05D20010) defines the XID\n   idnum and idblk to be used by the specified SDLC address\n   (C1).These values must match those specified in the VTAM\n   switched network major node.\n\n   The sdlc partner statement defines the target mac address. In\n   this case, the address of the OSA (Open Systems Adapter) port\n   on the mainframe.\n\n\n\n   ip route 0.0.0.0 0.0.0.0 10.240.11.1\n\n   Because we are not using a dynamic routing protocol (such as\n   OSPF) we must define a default route. This sets the default\n   route to the matching 2212 serial port.\n\n\n\n   IBM 2212 Configuration Differences\n\n   When the remote end of a connection is a Cisco router, rather\n   than another 2212, we must make a few changes to the way we\n   define the connection.\n\n        We must define two static routes. One for the Cisco\n        Ethernet subnet (in this example 10.20.0/24) and one for\n        the Cisco loopback address for DLSw (in this example\n        10.20.255/24):\n\n        add route 10.20.0.0 255.255.255.0 1\n        add route 10.20.255.0 255.255.255.0 1\n\n        We should not enable OSPF on the serial port. For 2212 to\n        2212 DLSw sessions, OSPF is required to support dynamic\n        peers.\n\n\n\n   Putting it All Together\n\n   Finally, putting all of the above considerations together, we\n   come up with a complete configuration.\n\n   Below is the complete listing of the configuration for the\n   Cisco 2610 router. While it should not be considered the\n   definitive solution, it has been successfully implemented on\n   our network.\n\n   !\n   version 12.1\n   service timestamps debug uptime\n   service timestamps log uptime\n   service password-encryption\n   !\n   hostname my2610\n   !\n   enable secret 5 xxx\n   enable password 7 xxx\n   !\n   !\n   ip subnet-zero\n   no ip finger\n   !\n   !\n   dlsw local-peer peer-id 10.20.255.1\n   dlsw remote-peer 0 tcp 10.1.0.29 lsap-output-list 200\n   dlsw bridge-group 1\n   !\n   !\n   interface Loopback0\n    ip address 10.20.255.1 255.255.255.255\n   !\n   interface Ethernet0/0\n    ip address 10.20.0.30 255.255.255.0\n    ip helper-address 10.1.0.5\n    no ip mroute-cache\n    bridge-group 1\n   !\n   interface Serial0/0\n    mtu 2048\n    ip address 10.240.11.2 255.255.255.0\n    encapsulation ppp\n    ip tcp header-compression\n    no ip mroute-cache\n    no fair-queue\n   !\n   interface Serial0/1\n    mtu 4400\n    no ip address\n    encapsulation sdlc\n    no ip mroute-cache\n    no keepalive\n    nrzi-encoding\n    clockrate 19200\n    sdlc role primary\n    sdlc vmac 4000.3174.2000\n    sdlc address C1\n    sdlc sdlc-largest-frame C1 521\n    sdlc xid C1 05D20010\n    sdlc partner 0800.5a8b.0761 C1\n    sdlc dlsw C1\n   !\n   ip classless\n   no ip forward-protocol udp tftp\n   no ip forward-protocol udp domain\n   no ip forward-protocol udp netbios-ns\n   no ip forward-protocol udp netbios-dgm\n   ip route 0.0.0.0 0.0.0.0 10.240.11.1\n   ip http server\n   !\n   snmp-server community public RO\n   snmp-server community netman RO\n   snmp-server host 10.1.0.50 netman\n   bridge 1 protocol ieee\n   access-list 200 permit 0x0000 0x0d0d\n   !\n   line con 0\n    transport input none\n   line aux 0\n   line vty 0 4\n    password 7 xxx\n    login\n   !\n   end\n\n\n\n\n                     Contact me at: nigelt@bigfoot.com\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE616": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04:\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\t\\x15\\x00K\\x00K\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf8@@@'", "ispf": {"version": "04.58", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T09:15:00", "lines": 75, "newlines": 75, "modlines": 0, "user": "CBT-458"}, "text": "//***FILE 616 is from Nigel Thomas, and contains S/390 software     *   FILE 616\n//*           and documentation gotten from his web site:           *   FILE 616\n//*                                                                 *   FILE 616\n//*           http://www.ngthomas.co.uk/s390.htm                    *   FILE 616\n//*                                                                 *   FILE 616\n//*           Documentation of the programs and techniques          *   FILE 616\n//*           found in this file is in member $$$DOC.               *   FILE 616\n//*                                                                 *   FILE 616\n//*           email:  nigelt@bigfoot.com                            *   FILE 616\n//*                                                                 *   FILE 616\n//*     S/390 Corner                                                *   FILE 616\n//*                                                                 *   FILE 616\n//*     I currently make my living supporting, among other          *   FILE 616\n//*     things, IBM S/390 computer systems. This file contains      *   FILE 616\n//*     some items that might be of use to others in this           *   FILE 616\n//*     field, if only of historic interest.                        *   FILE 616\n//*                                                                 *   FILE 616\n//*     DHCP on the Mainframe                                       *   FILE 616\n//*                                                                 *   FILE 616\n//*     I have recently moved our DHCP server from Windows NT       *   FILE 616\n//*     to the mainframe. My experiences, good and bad can be       *   FILE 616\n//*     found here.                                                 *   FILE 616\n//*                (member $DHCP)                                   *   FILE 616\n//*                                                                 *   FILE 616\n//*     IBM/Cisco Router Interoperability - An Example              *   FILE 616\n//*                                                                 *   FILE 616\n//*     I have recently had to integrate Cisco routers into an      *   FILE 616\n//*     all IBM network including IBM 2212 routers. This            *   FILE 616\n//*     document describes the Cisco configuration file used to     *   FILE 616\n//*     provide IP and SNA connectivity between a Cisco 2610        *   FILE 616\n//*     and an IBM 2212.                                            *   FILE 616\n//*                (member $IBCISCO)                                *   FILE 616\n//*                                                                 *   FILE 616\n//*     Software                                                    *   FILE 616\n//*                                                                 *   FILE 616\n//*     OS/390     IEFUSI is an SMF exit used to override the       *   FILE 616\n//*                region size for a job step. This version         *   FILE 616\n//*                while specific to a particular sites needs,      *   FILE 616\n//*                may be useful as a starting point for            *   FILE 616\n//*                writing your own.                                *   FILE 616\n//*                                                                 *   FILE 616\n//*                RACFXREF is a program to produce a cross         *   FILE 616\n//*                reference of rules used by userids and           *   FILE 616\n//*                groups. A list of rules for which there is       *   FILE 616\n//*                no matching group or user is also                *   FILE 616\n//*                displayed. This program was knocked up in a      *   FILE 616\n//*                hurry, and it shows ! My current shop uses       *   FILE 616\n//*                ACF2 so I have not tested it recently. If        *   FILE 616\n//*                nothing else, it is an example of how to         *   FILE 616\n//*                use the ICHEINTY macro.                          *   FILE 616\n//*                                                                 *   FILE 616\n//*                ROPMONT                                          *   FILE 616\n//*                                                                 *   FILE 616\n//*                This program alerts the system operator          *   FILE 616\n//*                when one or more address spaces are not          *   FILE 616\n//*                running. While it may not be useful in your      *   FILE 616\n//*                environment, it serves as a good example of      *   FILE 616\n//*                how a program can respond to Modify and          *   FILE 616\n//*                Stop commands using the QEDIT macro.             *   FILE 616\n//*                                                                 *   FILE 616\n//*                GENOAT                                           *   FILE 616\n//*                                                                 *   FILE 616\n//*                Genoat is a Rexx program that is used to         *   FILE 616\n//*                generate an OAT (OSA Address Table)              *   FILE 616\n//*                required to configure an Open Systems            *   FILE 616\n//*                Adapter. Along with the Rexx source is           *   FILE 616\n//*                sample input and output.                         *   FILE 616\n//*                                                                 *   FILE 616\n//*     CICS Stuff                                                  *   FILE 616\n//*                ISSIGN is a CICS signon program. This            *   FILE 616\n//*                program was originally written to replace        *   FILE 616\n//*                the then, very limited IBM supplied              *   FILE 616\n//*                program. It was last tested under CICS           *   FILE 616\n//*                Version 4.1                                      *   FILE 616\n//*                                                                 *   FILE 616\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GENOAT": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\x12\\x00\\x03}\\x03}\\x00\\x00\\xd5\\xe3\\xc8\\xd6\\xd4\\xc1\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T12:00:00", "lines": 893, "newlines": 893, "modlines": 0, "user": "NTHOMAS"}, "text": "/* REXX */\n/*********************************************************************/\n/*                                                                   */\n/* This exec reads in a series of records defining the configuration */\n/* requirements for an OSA and writes out a formatted OAT (OSA       */\n/* Address Table) ready for loading with OSA/SF. The OAT is written  */\n/* in the extended (old) format, summary format is not supported as  */\n/* we don't have the PTF on yet - ho hum !                           */\n/*                                                                   */\n/* Note: This exec only supports OSA-1 with SNA and TCP/IP. Other    */\n/*       protocols (ATM etc) are not supported. This exec also       */\n/*       does not support multiple IP home addresses.                */\n/*                                                                   */\n/*  Input:  DDName Input  = OSA configuration deck                   */\n/*                                                                   */\n/*  Output: DDName Output = Formatted OAT ready for loading into the */\n/*                          OSA                                      */\n/*                                                                   */\n/*  If an error is detected, a message describing the condition is   */\n/*  displayed and processing is terminated.                          */\n/*                                                                   */\n/*********************************************************************/\n\nsignal on novalue\n\nTrace 'o'\n\nCall Initialise                       /* Initialise globals etc */\n\nCall LoadInput                        /* Read and parse input   */\n\nCall ValidateInput                    /* Check input validity   */\n\nCall GenerateOat                      /* Generate the OAT       */\n\nCall UnloadOat                        /* Write out OAT          */\n\nexit\n\n/*********************************************************************/\n/* Initialise: Set up any global variables                           */\n/*********************************************************************/\nInitialise:\n  SeenOsa = 0\n  SeenPart = 0\n  do p = 1 to 15\n    parts.p = ''\n  end\n  parts.0 = 0\n\n  MaxPort = 4    /* Maximum port - not counting special FF port */\n\n  DecString = '0123456789'\n  HexString = '0123456789ABCDEF'\n  BoxStart = '/'||copies('*',69)||'/'\n\n  Oats.0 = 0\n\n   /* Define some constant values */\n\n  OatType = 1\n  OatPort = 2\n  OatDevNum = 3\n  OatUnitAddr = 4\n  OatPart = 5\n  OatDef = 6\n  OatIP = 7\n  OatID = 8\n\n  OatSna = 1\n  OatTcp = 2\n\n  OatTable.0 = 0\n\n  Return\n\n/*********************************************************************/\n/* GenerateOat: Generate the OAT table                               */\n/*********************************************************************/\nGenerateOat:\n  if Oats.0 = 0 then\n    FatalError('Nothing to generate - no port definitions','')\n\n    /* Calcalate how many entries are required */\n\n  Entries = 0\n  do i = 1 to Oats.0\n    if Oats.i.OatType = OatSna then\n      Entries = Entries + Oats.i.OatParts.0\n    else if Oats.i.OatType = OatTcp then\n      Entries = Entries + (Oats.i.OatParts.0 * 2)\n  end\n\n  Call BoxCentre('OAT generated by GENOAT on' Date('E') 'by' Userid())\n  Call BoxCentre('Start of OSA Address Table')\n\n  Str = 'All entries below that are preceeded by ''s-'' indicate that'\n  str = str 'the field is settable during Put_OAT processing'\n  Call BoxOut(str)\n\n\n     /*******************************/\n     /* Generate the Base Oat entry */\n     /*******************************/\n\n  Call BoxOut('Start of Base OAT entry')\n\n  str = 'oathdr.1 = IOA_OAT_HDR'\n  Call OatOut str,'Eyecatcher-Do not change'\n\n  str = 'oathdr.2 =' OsaChannel\n  call OatOut str,'s-Chpid'\n\n  str = 'oathdr.3 =' Entries\n  call OatOut str,'s-number of entries'\n\n     /**********************************************/\n     /* Loop through the Oat table generating OAT  */\n     /* entries as required                        */\n     /**********************************************/\n\n  OatCount = 0\n\n  do o = 1 to Oats.0                     /* for each entry */\n    do p = 1 to Oats.o.OatParts.0        /* for each LPAR  */\n      call OutputOat o,p,1               /* output an OAT  */\n      if Oats.o.OatType = OatTcp then    /* For TCP ports  */\n        call OutputOat o,p,2             /* Gen 2nd entry  */\n    end\n  end\n\n    /* Sanity Check */\n\n  if OatCount <> Entries then\n    do\n      Str = 'Expected:' Entries 'Actual:' OatCount\n      FatalError('Logic error - OAT count mismatch',Str)\n    end\n\n  Return\n\n/*********************************************************************/\n/* OutputOat: Generates a single OAT entry                           */\n/*********************************************************************/\nOutputOat:\n  parse arg on,pn,gn\n\n  OatCount = OatCount + 1\n\n  Call BoxOut('Start of OAT entry' OatCount)\n\n  OatStr = 'oat.'||OatCount||'.'\n\n  Str = OatStr||'1 = IOA_OATENTRY'\n  call OatOut Str,'Eyecatcher- do not delete'\n\n  Str = OatStr||'2 = All data is valid'\n  call OatOut Str,'Valid data indicator'\n\n  parn = Oats.on.OatParts.pn\n  Str = OatStr||'3 =' Parts.parn\n  Call OatOut Str,'Partition name'\n\n  Str = OatStr||'4 =' parn\n  call OatOut Str,'s-Partition number'\n\n  OatUnit = Oats.on.OatUnitAddr\n  if gn = 2 then\n    OatUnit = right(d2x(x2d(OatUnit)+1) ,2,'0')\n\n  Str = OatStr||'5 =' OatUnit\n  call OatOut Str,'s-unit address'\n\n  OatDev = Oats.on.OatDevNum\n  if gn = 2 then\n    OatDev = right(d2x(x2d(OatDev)+1) ,4,'0')\n\n  Str = OatStr||'6 =' OatDev\n  call OatOut Str,'device number'\n\n  Str = OatStr||'7 =' OsaChannel\n  call OatOut Str,'Chpid'\n\n  Str = OatStr||'8 =' OsaCU\n  call OatOut Str,'control unit number'\n\n  Str = OatStr||'9 = configured'\n  call OatOut Str,'channel state'\n\n  Str = OatStr||'10 = yes'\n  call OatOut Str,'device accessible'\n\n  if Oats.on.OatType = OatSna then\n    gs = '01'\n  else\n    gs = '02'\n\n  Str = OatStr||'11 =' gs\n  call OatOut Str,'s-group size'\n\n  if Oats.on.OatType = OatSna then\n    et = 'SNA'\n  else\n    et = 'passthru'\n\n  Str = OatStr||'12 =' et\n  call OatOut Str,'s-entry type'\n\n  Str = OatStr||'13 = started'\n  call OatOut Str,'entry descriptor'\n\n     /* finally, generate the extended OAT entry */\n\n  call BoxOut('Start of Extended OAT entry')\n\n  if Oats.on.OatType = OatSna then\n    do\n      OatStr = 'sna.'||OatCount\n\n      Str = OatStr||'.1 =' Oats.on.OatPort\n      call OatOut Str,'s-Port number'\n\n      if Oats.on.OatPort = 'FF' then\n        do\n          Str = OatStr||'.2 =' Oats.on.OatID\n          call OatOut Str,'s-VTAM ID number'\n        end\n    end\n  else\n    do\n      OatStr = 'passthru.'||OatCount\n\n      Str = OatStr||'.1 =' Oats.on.OatPort\n      call OatOut Str,'s-Port number'\n\n      if Oats.On.OatDef = pn then\n        Str = OatStr||'.2 = yes'\n      else\n        Str = OatStr||'.2 = no'\n      Call OatOut Str,'s-Default LP (yes/no)'\n\n      Str = OatStr||'.3 =' Oats.on.OatIP.pn\n      Call OatOut Str,'s-home IP address'\n\n    end\n\n  Return\n/*********************************************************************/\n/* LoadInput: Reads the OSA definition data and parses it            */\n/*********************************************************************/\nLoadInput:\n\n  'EXECIO * DISKR INPUT (FINIS STEM OSADEF.'\n\n  do i = 1 to osadef.0\n    if substr(osadef.i,1,1) <> '*' then\n      do\n        params = strip(substr(osadef.i,1,72),'B')\n\n        Call Tokenise(params)\n\n        if tokens.0 > 0 then\n          do\n            Select\n              When tokens.1 = 'OSA' then\n                Call ProcessOSA\n              When tokens.1 = 'PART' then\n                Call ProcessPart\n              When tokens.1 = 'SNA' then\n                Call ProcessSNA\n              When tokens.1 = 'TCP' then\n                Call ProcessTCP\n              Otherwise\n                FatalError('Unreconized Input',Tokens.1)\n            end\n          end\n      end\n  end\n\n  Return\n\n/*********************************************************************/\n/* ValidateInput: Validate the cross statement consistancy           */\n/*********************************************************************/\nValidateInput:\n\n   /*********************************************************/\n   /* Check that a port is not used twice for the same type */\n   /* of definition (SNA or TCP)                            */\n   /*********************************************************/\n\n  if Oats.0 > 1 then\n    do\n      do o1 = 1 to Oats.0\n        do o2 = 1 to Oats.0\n          if o1 <> o2 then\n            if Oats.o1.OatType = Oats.o2.OatType then\n              if Oats.o1.OatPort = Oats.o2.OatPort then\n                do\n                  m = 'Port defined twice for same type (SNA/TCP)'\n                  d = 'Port =' Oats.o1.OatPort\n                  FatalError(m,d)\n                end\n        end\n      end\n    end\n\n   /*********************************************************/\n   /* Check that a device addr is not used more than once   */\n   /*********************************************************/\n\n  if Oats.0 > 1 then\n    do\n      do o1 = 1 to Oats.0\n        do o2 = 1 to Oats.0\n          if o1 <> o2 then\n            do\n              if Oats.o1.OatType = Oats.o2.OatType then\n                do\n                  if Oats.o1.OatDevNum = Oats.o2.OatDevNum then\n                    do\n                      m = 'device number defined more than once'\n                      d = 'Device =' Oats.o1.OatDevNum\n                      FatalError(m,d)\n                    end\n                end\n              else\n                do\n                  if Oats.o1.OatType = OatTcp then\n                    do\n                      n1 = x2d(Oats.o2.OatDevNum)\n                      n2 = x2d(Oats.o1.OatDevNum)\n                      n3 = n2+1\n                    end\n                  else\n                    do\n                      n1 = x2d(Oats.o1.OatDevNum)\n                      n2 = x2d(Oats.o2.OatDevNum)\n                      n3 = n2+1\n                    end\n                  if (n1 = n2) | (n1 = n3) then\n                    do\n                      m = 'device number defined more than once'\n                      d = 'Device =' Oats.o1.OatDevNum\n                      FatalError(m,d)\n                    end\n                end\n            end\n        end\n      end\n    end\n\n  Return\n\n/*********************************************************************/\n/* UnloadOat - Write out generated OAT to DD name 'OUTPUT'           */\n/*********************************************************************/\nUnloadOat:\n\n  'EXECIO * DISKW OUTPUT (STEM OATTABLE.'\n\n  Return\n\n/*********************************************************************/\n/* ProcessOSA - Process the OSA statement                            */\n/*********************************************************************/\nProcessOSA:\n  if SeenOSA = 1 then\n    FatalError('More than one OSA statement provided','')\n  else\n    do\n      SeenOSA = 1\n      if tokens.0 = 3 then\n        do\n          if (Length(tokens.2) = 2) & ,\n             (Verify(tokens.2,HexString) = 0) then\n            do\n              if (Length(tokens.3) = 4) & ,\n                 (Verify(tokens.3,DecString) = 0) then\n                do\n                  OsaChannel = tokens.2\n                  OsaCU = tokens.3\n                end\n              else\n                FatalError('OSA CU number is invalid',tokens.3)\n            end\n          else\n            FatalError('OSA channel number is invalid',tokens.2)\n        end\n      else\n        FatalError('Incorrect number of OSA parameters','')\n    end\n  return\n\n/*********************************************************************/\n/* ProcessPart - Process the PART statement                          */\n/*********************************************************************/\nProcessPart:\n\n  if tokens.0 = 2 then\n    do\n      p = parts.0 + 1\n      if p > 15 then\n        FatalError('Too many PART statements','')\n      else\n        do\n          if parts.p = '' then\n            parts.p = tokens.2\n          else\n            FatalError('Duplicate PART definition',tokens.2)\n        end\n    end\n  else if tokens.0 = 3 then\n    do\n      if verify(tokens.3,DecString) = 0 then\n        do\n          p = tokens.3\n          if (p > 0) & (P < 16) then\n            do\n              if parts.p = '' then\n                parts.p = tokens.2\n              else\n                FatalError('Duplicate PART number',tokens.2)\n            end\n          else\n            FatalError('Partition number not 1 to 15',p)\n        end\n      else\n        FatalError('Partition number invalid',tokens.3)\n\n      do p1 = 1 to 15\n        do p2 = 1 to 15\n          if p1 <> p2 then\n            if parts.p1 <> '' then\n              if parts.p1 = parts.p2 then\n                FatalError('Duplicate PART name',tokens.2)\n        end\n      end\n\n      p = 0\n      do p1 = 1 to 15\n        if parts.p1 <> '' then\n          p = p + 1\n      end\n      parts.0 = p\n    end\n  else\n    FatalError('Incorrect number of PART params','')\n\n  SeenPart = 1\n  Return\n\n/*********************************************************************/\n/* ProcessSna: Process the SNA statement                             */\n/*********************************************************************/\nProcessSna:\n  if SeenOsa = 0 then\n    FatalError('Missing or misplaced OSA Statement','')\n  else if SeenPart = 0 then\n    FatalError('Missing or misplaced PART statement','')\n  else if tokens.0 > 3 then\n    do\n        /* Verify Port */\n\n      SnaPort = tokens.2\n      if verify(SnaPort,HexString) = 0 then\n        do\n          if (SnaPort <> 'FF') & (SnaPort > MaxPort) then\n            FatalError('Port number is too high',UnTok())\n        end\n      else\n        FatalError('Port number is invalid',UnTok())\n\n        /* Verify device number and unit address */\n\n      if length(tokens.3) = 4 then\n        do\n          SnaDevice = tokens.3\n          if verify(SnaDevice,HexString) = 0 then\n            SnaUnit = Substr(SnaDevice,3,2)\n          else\n            FatalError('Device number is invalid',UnTok())\n        end\n      else if (length(tokens.3) = 6) & ,\n              (Substr(tokens.3,5,1) = '-') then\n        do\n          SnaDevice = Substr(tokens.3,1,4)\n          SnaUnit = Substr(tokens.3,6,2)\n          if verify(SnaDevice,HexString) > 0 then\n            FatalError('Device number is invalid',UnTok())\n          if verify(SnaUnit,HexString) > 0 then\n            FatalError('Unit Address is invalid',UnTok())\n        end\n      else\n        FatalError('Device number is invalid',UnTok())\n\n        /* Verify partitions */\n\n      SnaParts.0 = Words(Tokens.4)\n      do p = 1 to SnaParts.0\n        SnaPart = Word(Tokens.4,p)\n        if verify(SnaPart,DecString) = 0 then\n          do\n            if (SnaPart < 1) | (SnaPart > parts.0) | ,\n               (parts.SnaPart = '') then\n              FatalError('Undefined partition selected',UnTok())\n          end\n        else\n          do\n            do p1 = 1 to parts.0\n              if parts.p1 = SnaPart then\n                SnaPart = p1\n            end\n\n            if verify(SnaPart,DecString) > 0 then\n              FatalError('Undefined partition selected',UnTok())\n          end\n        SnaParts.p = SnaPart\n      end\n\n      SnaID = 0\n\n      if SnaPort = 'FF' then\n        do\n          if SnaParts.0 > 1 then\n            FatalError('Netview port cannot be shared',UnTok())\n          if tokens.0 <> 5 then\n            FatalError('VTAM ID is required for port FF',UnTok())\n          if (length(tokens.5) <> 5) | ,\n             (Verify(tokens.5,HexString) <> 0) then\n            FatalError('VTAM ID is invalid',UnTok())\n          if substr(Tokens.5,1,1) = '0' then\n            FatalError('VTAM ID should not begin with a zero',UnTok())\n            SnaID = tokens.5\n        end\n      else if tokens.0 > 4 then\n        FatalError('Too many SNA parameters',UnTok())\n\n         /* Add this definition to the Oat list */\n\n      Oat = Oats.0 + 1\n      Oats.Oat.OatType = OatSna\n      Oats.Oat.OatPort = SnaPort\n      Oats.Oat.OatDevNum = SnaDevice\n      Oats.Oat.OatUnitAddr = SnaUnit\n      Oats.Oat.OatParts.0 = SnaParts.0\n      do p1 = 1 to SnaParts.0\n        Oats.Oat.OatParts.p1 = SnaParts.p1\n      end\n      Oats.Oat.OatID = SnaID\n      Oats.0 = Oat\n    end\n  else\n    FatalError('Incorrect no. of SNA parameters',UnTok())\nReturn\n\n/*********************************************************************/\n/* ProcessTcp: Process the TCP statement                             */\n/*********************************************************************/\nProcessTcp:\n  if SeenOsa = 0 then\n    FatalError('Missing or misplaced OSA Statement','')\n  else if SeenPart = 0 then\n    FatalError('Missing or misplaced PART statement','')\n  else if (tokens.0 > 3) & (tokens.0 < 7) then\n    do\n        /* Verify Port */\n\n      TcpPort = tokens.2\n      if verify(TcpPort,HexString) = 0 then\n        do\n          if TcpPort > MaxPort then\n            FatalError('Port number is too high',UnTok())\n        end\n      else\n        FatalError('Port number is invalid',UnTok())\n\n        /* Verify device number and unit address */\n\n      if length(tokens.3) = 4 then\n        do\n          TcpDevice = tokens.3\n          if verify(TcpDevice,HexString) = 0 then\n            TcpUnit = Substr(TcpDevice,3,2)\n          else\n            FatalError('Device number is invalid',UnTok())\n        end\n      else if (length(tokens.3) = 6) & ,\n              (Substr(tokens.3,5,1) = '-') then\n        do\n          TcpDevice = Substr(tokens.3,1,4)\n          TcpUnit = Substr(tokens.3,6,2)\n          if verify(TcpDevice,HexString) > 0 then\n            FatalError('Device number is invalid',UnTok())\n          if verify(TcpUnit,HexString) > 0 then\n            FatalError('Unit Address is invalid',UnTok())\n        end\n      else\n        FatalError('Device number is invalid',UnTok())\n\n      if X2d(TcpDevice) // 2 = 1 then\n        FatalError('Device number must be even for TCP/IP',UnTok())\n\n        /* Verify partitions */\n\n      TcpParts.0 = Words(Tokens.4)\n      do p = 1 to TcpParts.0\n        TcpPart = Word(Tokens.4,p)\n        if verify(TcpPart,DecString) = 0 then\n          do\n            if (TcpPart < 1) | (TcpPart > parts.0) | ,\n               (parts.TcpPart = '') then\n              FatalError('Undefined partition selected',UnTok())\n          end\n        else\n          do\n            do p1 = 1 to parts.0\n              if parts.p1 = TcpPart then\n                TcpPart = p1\n            end\n\n            if verify(TcpPart,DecString) > 0 then\n              FatalError('Undefined partition selected',UnTok())\n          end\n        TcpParts.p = TcpPart\n      end\n\n         /* Verify the IP addresses (if given) */\n\n      if TcpParts.0 > 1 then\n        if tokens.0 < 5 then\n          FatalError('IP addresses missing for shared PORT',UnTok())\n\n      if tokens.0 > 4 then\n        do\n          if words(tokens.5) <> TcpParts.0 then\n            FatalError('IP count <> Partition count',UnTok())\n\n          TcpIP.0 = words(tokens.5)\n          do ipc = 1 to words(tokens.5)\n            TcpIP.ipc = VerifyIP(word(tokens.5,ipc))\n          end\n        end\n      else\n        do\n          TcpIP.0 = 1\n          TcpIP.1 = '0.0.0.0'\n        end\n\n         /* Verify the default LP is valid */\n\n      if TcpParts.0 > 1 then\n        if tokens.0 < 6 then\n          FatalError('Default LPAR missing for shared PORT',UnTok())\n      if Tokens.0 = 6 then\n        do\n          if verify(tokens.6,DecString) = 0 then\n            do\n              TcpDef = Tokens.6\n              if (TcpDef < 1) | (TcpDef > Parts.0) then\n                FatalError('Invalid default LPAR number',UnTok())\n              else if Parts.TcpDef = '' then\n                FatalError('default LPAR not defined',UnTok())\n            end\n          else\n            do\n              TcpDef = 0\n              do pn = 1 to parts.0\n                if parts.pn = tokens.6 then\n                  TcpDef = pn\n              end\n              if TcpDef = 0 then\n                FatalError('default LPAR not defined',UnTok())\n            end\n        end\n      else\n        TcpDef = 0\n\n         /* Add this definition to the Oat list */\n\n      Oat = Oats.0 + 1\n      Oats.Oat.OatType = OatTcp\n      Oats.Oat.OatPort = TcpPort\n      Oats.Oat.OatDevNum = TcpDevice\n      Oats.Oat.OatUnitAddr = TcpUnit\n      Oats.Oat.OatParts.0 = TcpParts.0\n      do p1 = 1 to TcpParts.0\n        Oats.Oat.OatParts.p1 = TcpParts.p1\n      end\n      Oats.Oat.OatIP.0 = TcpIP.0\n      do p1 = 1 to TcpIP.0\n        Oats.Oat.OatIP.p1 = TcpIP.p1\n      end\n      Oats.Oat.OatDef = TcpDef\n      Oats.0 = Oat\n    end\n  else\n    FatalError('Incorrect no. of TCP parameters',UnTok())\nReturn\n\n/*********************************************************************/\n/* VerifyIP: Verify a dotted IP address is validish                  */\n/*********************************************************************/\nVerifyIP:\n  parse arg IP\n\n  parse var IP ip.1 '.' ip.2 '.' ip.3 '.' ip.4\n\n  ipt = 0\n  do ipn = 1 to 4\n    if ip.ipn = '' then\n      FatalError('Invalid IP address',UnTok())\n    if verify(ip.ipn,DecString) > 0 then\n      FatalError('Invalid IP address',UnTok())\n    if ip.ipn > 255 then\n      FatalError('Invalid IP address',UnTok())\n    ipt = ipt + ip.ipn\n  end\n\n  if ipt = 0 then\n    FatalError('IP address 0.0.0.0 not allowed',UnTok())\n\n  return IP\n\n/*********************************************************************/\n/* UnTok: Strings the tokens back together for diagnostic display    */\n/*********************************************************************/\nUnTok:\n  String = ''\n  do t = 1 to tokens.0\n    if Pos(' ',tokens.t) = 0 then\n      do\n        if string = '' then\n          string = tokens.t\n        else\n          string = string||','||tokens.t\n      end\n    else\n      do\n        parm = '('||translate(tokens.t,',',' ')||')'\n        if string = '' then\n          string = parm\n        else\n          string = string||','||parm\n      end\n  end\n  return string\n\n/*********************************************************************/\n/* Tokenise: Converts a comma separated string into separate tokens  */\n/*********************************************************************/\nTokenise:\n  arg source\n  line = source\n\n  NumTok = 0\n  do while (length(source) > 0)\n    if substr(source,1,1) = '(' then\n      do\n        ClosParen = pos(')',source)\n        if ClosParen > 0 then\n          do\n            token = Strip(substr(source,2,ClosParen-2),'B')\n            source = Strip(substr(source,ClosParen+1,100),'B')\n            token = Translate(token,' ',',')\n            if length(source) > 0 then\n              do\n                if substr(source,1,1) = ',' then\n                  source = strip(substr(source,2,100),'B')\n                else\n                  FatalError('syntax error (missing comma)',line)\n              end\n          end\n        else\n          FatalError('Unbalanced parenthesis',line)\n      end\n    else\n      do\n        sep = pos(',',source)\n        if sep > 0 then\n          do\n            Token = Strip(substr(source,1,sep-1),'B')\n            source = strip(substr(source,sep+1,100),'B')\n          end\n        else\n          do\n            Token = Strip(Source,'B')\n            source = ''\n          end\n      end\n    NumTok = NumTok + 1\n    Tokens.NumTok = Token\n  end\n\n  Tokens.0 = NumTok\n  Return\n\nFatalError:\n  parse arg Reason,Data\n  say 'Fatal error:' Reason\n  if Data <> '' then\n    say '  Data:     ' Data\n  exit\n\nnovalue:\n  Say 'NoValue raised on line' Sigl 'Variable' condition('D')\n  exit\n\nBoxCentre:\n  Parse arg data\n\n  call out(BoxStart)\n\n  string = ''\n  do w = 1 to words(data)\n    wrd = word(data,w)\n    if length(string wrd) > 65 then\n      do\n        if length(string) < 65 then\n          do\n            m = (65 - length(string)) % 2\n            string = copies(' ',m)||string||copies(' ',m)\n            string = left(string,65,' ')\n            line = '/*' string '*/'\n            call out(line)\n          end\n        else\n          line = '/*' string '*/'\n        call out(string)\n        string = wrd\n      end\n    else\n      string = string wrd\n  end\n\n  m = (65 - length(string)) % 2\n  string = copies(' ',m)||string||copies(' ',m)\n  string = left(string,65,' ')\n  line = '/*' string '*/'\n  call out(line)\n\n  call out(BoxStart)\n  return\n\nBoxOut:\n  Parse arg data\n\n  call out(BoxStart)\n\n  string = ''\n  do w = 1 to words(data)\n    wrd = word(data,w)\n    if length(string wrd) > 65 then\n      do\n        line = '/*' left(string,65,' ') '*/'\n        call out(line)\n        string = wrd\n      end\n    else\n      do\n       if length(string) = 0 then\n         string = wrd\n       else\n         string = string wrd\n      end\n  end\n\n  string = left(string,65,' ')\n  line = '/*' string '*/'\n  call out(line)\n\n  call out(BoxStart)\n  return\n\nOatOut:\n  Parse arg data,comment\n\n  if substr(comment,1,2) <> 's-' then\n    comment = '  '||comment\n\n  comment = left(comment,27,' ')\n\n  str = left(data,39,' ')||'/* '||comment||'*/'\n  call out(str)\n  return\n\nout:\n  parse arg string\n  ol = OatTable.0\n  ol = ol + 1\n  OatTable.ol = string\n  OatTable.0 = ol\n  return\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "IEFUSI": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\x12\\x00\\x00\\xd2\\x00\\xd2\\x00\\x00\\xd5\\xe3\\xc8\\xd6\\xd4\\xc1\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T12:00:00", "lines": 210, "newlines": 210, "modlines": 0, "user": "NTHOMAS"}, "text": "IEFUSI   CSECT\nIEFUSI   AMODE 31\nIEFUSI   RMODE ANY\n*---------------------------------------------------------------------*\n* IEFUSI                                                              *\n* ------                                                              *\n*                                                                     *\n*   This exit is used to control the region size above and below the  *\n*   16M line.                                                         *\n*                                                                     *\n*   IEFUSI is called at job-step initiation prior to allocation       *\n*                                                                     *\n*   Input:  R1  - Address of parameter list                           *\n*           R13 - Register save area                                  *\n*           R14 - Return address                                      *\n*           R15 - Entry point of IEFUSI                               *\n*                                                                     *\n*   Output: R15 - Return code (0 or 4)                                *\n*                 Sizes set in VSM parameter list                     *\n*                                                                     *\n*   Function: As delivered, OS/390 limits region sizes above and      *\n*             below the line based on the JCL REGION parameter,       *\n*             and the default IEALIMIT exit.                          *\n*                                                                     *\n*             This exit will in certain cases, overide the REGION     *\n*             size requested both above and below the line            *\n*                                                                     *\n*             In particular it allows CICS regions to use more than   *\n*             32M above the line.                                     *\n*                                                                     *\n*             Detailed Function:                                      *\n*                                                                     *\n*               * If the step is V=R or requested a region of 0K,     *\n*                 no action is taken by this exit                     *\n*                                                                     *\n*               * If the requested region is less than a minimum      *\n*                 amount it is increased to the minimum.              *\n*                                                                     *\n*               * If the requested below-line region is too large     *\n*                 it is reduced to the maximum.                       *\n*                                                                     *\n*               * The below line limit and region are adjusted so     *\n*                 that a variable getmain cannot grab the entire      *\n*                 region.                                             *\n*                                                                     *\n*               * If the requested region does not explictly specify  *\n*                 the size of the above line region (IE it is < 16M)  *\n*                 and the program being run is CICS, the above line   *\n*                 region is increased above the default of 32M        *\n*                                                                     *\n*               * If an above the line region is requested, it is     *\n*                 limited to a maximum.                               *\n*                                                                     *\n*                                                                     *\n* Author: Nigel Thomas - March 1998                                   *\n*---------------------------------------------------------------------*\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\n         USING IEFUSI,R15\n         B     AROUND\n         DC    CL8'IEFUSI'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\nAROUND   DS    0H\n         SAVE  (14,12)\n         LR    R12,R15                 Get Entry into base reg\n         DROP  R15\n         USING IEFUSI,R12\n         LM    R5,R8,8(R1)             Load input addresses\n         USING VSMPARML,R7\n         SPACE\n         USING FLAGWORD,R8\n         SPACE\n         TM    VRFLAG,X'80'            Is this step V=R ?\n         BO    GOBACK                  Yes, then leave well alone\n         SPACE\n*--------------------------------------------------------------------*\n* Get the maximum below the line region size from the LDA            *\n*--------------------------------------------------------------------*\n         SPACE\n         L     R3,16                   -> CVT\n         L     R3,0(R3)                -> TCB/ASCB words\n         L     R3,12(R3)               -> current ASCB\n         USING ASCB,R3\n         L     R3,ASCBLDA              -> LDA\n         DROP  R3\n         USING LDA,R3\n         L     R2,LDASIZA              Get Maximum < 16M Region\n         DROP  R3\n         SPACE\n         S     R2,F512K                Reduce max limit by 512K\n         LR    R3,R2                   Get maximum region limit\n         S     R3,F256K                Reduce max size by 256K\n         SPACE\n         L     R4,VSMREQST             Get requested region size\n         LTR   R4,R4                   Zero - IE No limit ?\n         BZ    GOBACK                  Yes, his funeral\n         SPACE\n         OI    VSMFLAGS,B'10100000'    Tell VSM to use IEFUSI values\n*                                      and to check availability\n*                                      above and below the line\n         SPACE\n*--------------------------------------------------------------------*\n* Set the size and limit below the 16m line                          *\n*--------------------------------------------------------------------*\n         SPACE\n         C     R4,MINBELOW             Is requested region too small ?\n         BNL   CHECK16                 No, leave it be\n         L     R4,MINBELOW             Yes, increase to minimum\n         SPACE\nCHECK16  DS    0H\n         CR    R4,R3                   Is requested region > Max ?\n         BH    LIMIT16                 Yes, so limit it\n         SPACE\n         ST    R4,VSMSZEBL             No, Set size below\n         A     R4,F256K                Bump by 256K\n         ST    R4,VSMLIMBL             Set below limit\n         B     CHECK31                 Go check above limit\n         SPACE\nLIMIT16  DS    0H\n         ST    R3,VSMSZEBL             Set the size below\n         ST    R2,VSMLIMBL             Set the limit below\n         SPACE\nCHECK31  DS    0H\n*--------------------------------------------------------------------*\n* Set the size and limit above the 16m line                          *\n*--------------------------------------------------------------------*\n         SPACE\n         L     R2,VSMREQST             Get requested region size\n         LR    R3,R2                   set as limit also\n         C     R2,F16M                 Region requested > 16M ?\n         BH    CHECKVAL                Yes, check specified value\n         SPACE\n         L     R2,F32M                 Set default limit to 32M\n         LR    R3,R2                   Set default size to 32M\n         SPACE\n         CLC   0(8,R5),CICS            Is this CICS ?\n         BNE   SET31                   No, use defaults as is\n         SPACE\n         L     R2,CICSLIM              Use CICS limit\n         L     R3,CICSSIZ              Use CICS size\n         B     SET31                   go set region values\n         SPACE\nCHECKVAL DS    0H\n         C     R3,MAXABOVE             Too much above the line ?\n         BNH   CHECKLOW                no, Allow region\n         L     R2,MAXABOVE             Limit to maximum\n         LR    R3,R2                   ditto size\n         B     SET31                   go set\nCHECKLOW DS    0H\n         C     R3,F32M                 Too low ?\n         BH    SET31                   no\n         L     R2,F32M                 Use default of 32M\n         LR    R3,R2                   Ya Ya\n         SPACE\nSET31    DS    0H\n         ST    R3,VSMSZEAB             Set above line size\n         ST    R2,VSMLIMAB             Set above line limit\nGOBACK   DS    0H\n         LM    R14,R12,12(R13)         Restore regs\n         SR    R15,R15                 Zero return code\n         BR    R14                     Exit to caller\n         SPACE\n         EJECT\nCICS     DC    CL8'DFHSIP'             CICS program name\n         DS    0F\nF256K    DC    AL4(256*1024)           256K\nF512K    DC    AL4(512*1024)           512K\nF16M     DC    AL4(16*1024*1024)       16M\nF32M     DC    AL4(32*1024*1024)       32M\n         SPACE\nCICSLIM  DC    AL4(64*1024*1024)       64M\nCICSSIZ  DC    AL4(58*1024*1024)       58M\n         SPACE\nMINBELOW DC    AL4(1*1024*1024)        Min size below (1M)\nMAXABOVE DC    AL4(64*1024*1024)       Max size above (64M)\n         LTORG\nFLAGWORD DSECT\nVRFLAG   DS    F                       V=R Flag\nVSMPARML DSECT\nVSMFLAGS DS    F                       Flag Word\n*              0... ....               IEALIMIT is suplying values\n*              1... ....               IEFUSI is suplying values\n*              .0.. ....               Check to see request fits below\n*              .1.. ....               Skip below size check\n*              ..0. ....               Skip above size check\n*              ..1. ....               Check above size fits\nVSMREQST DS    F                       Region size requested on JCL\nVSMLIMBL DS    F                       Region limit below 16M\nVSMSZEBL DS    F                       Region size below 16m\nVSMLIMAB DS    F                       Region limit above 16M\nVSMSZEAB DS    F                       Region size above 16m\n         IHAASCB\n         IHALDA\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ISSIGN": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\x12\\x00\\x02R\\x02R\\x00\\x00\\xd5\\xe3\\xc8\\xd6\\xd4\\xc1\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T12:00:00", "lines": 594, "newlines": 594, "modlines": 0, "user": "NTHOMAS"}, "text": "***********************************************************************\n* ISSIGN - PRODUCTION CICS SIGNON PROGRAM                             *\n* ======                                                              *\n*                                                                     *\n*    This program is a user friendly CICS/RACF signon program for     *\n*    production CICS.                                                 *\n*                                                                     *\n*    It presents the user with a signon panel giving two choices :    *\n*                                                                     *\n*      1 - The user may enter his user id and password (and also      *\n*          a new password if required). If the userid and password    *\n*          are valid, he is logged onto CICS.                         *\n*                                                                     *\n*      2 - The user may just press PF3 or CLEAR to logoff.            *\n*                                                                     *\n***********************************************************************\n* Author : N.G.Thomas.                                                *\n***********************************************************************\n*                 M A I N T E N A N C E    L O G                      *\n*---------------------------------------------------------------------*\n*                                                                     *\n*    DATE    WHO  DESCRIPTION OF CHANGE                               *\n*  ==/==/==  ===  ==================================================  *\n*                                                                     *\n*  14/10/88  NGT  If the SIT message starts with 'xxxx:', then that   *\n*                 portion of the message is not displayed.            *\n*                                                                     *\n*  31/05/89  NGT  Leading blanks will be removed from input fields.   *\n*                 (this was causing a RACF internal error message).   *\n*                                                                     *\n*  19/02/91  NGT  New version created for the new employer            *\n*                                                                     *\n*  08/05/91  NGT  Modified to be able to run amode/rmode 31.          *\n*                                                                     *\n*  19/10/97  NGT  Modified to run under CICS 4.1 using CICS security  *\n*                 API rather than the undocumented RACF interface     *\n*                                                                     *\n*  25/03/98  NGT  If a transaction name is prefixed to the good       *\n*                 morning message (eg xxx:message text), it is used   *\n*                 as the initial transaction. This allows a CICS      *\n*                 application menu to be displayed.                   *\n*                                                                     *\n***********************************************************************\n         SPACE\nDFHEISTG DSECT\n         COPY ISSIGNMD\n         SPACE\nCOMMAR   DS   CL8                     Comms area\n         SPACE\nABSTIME  DS   D                       Absolute Time\n         SPACE\nTRANSID  DS   CL4                     Transaction to run first\n         SPACE\nSONID    DS   CL8                     Signed on ID\nDEFID    DS   CL8                     Default ID\n         SPACE\nUSERID   DS   CL8                     Userid to logon to RACF with\n         SPACE\nUSER     DS   CL8                     Userid\nPASSWD   DS   CL8                     Password\nNPASSWD  DS   CL8                     New Password\n         SPACE\nRESP     DS   F\nRESP2    DS   F\n         SPACE\nGMMLEN   DS   H                       Good Morning Message length\nGMMTEXT  DS   CL246                   Good Morning Message\n         SPACE\nERRMSG   DS   CL70                    Area to build error message\n         EJECT\nISSIGN   CSECT\n         DFHREGS\nTCTTEAR  EQU    R5\n         COPY   DFHAID\n         SPACE\n***********************************************************************\n*  INITIAL ENTRY CHECK                                                *\n*  ===================                                                *\n*                                                                     *\n*    If we have been entered with a transaction ID of LOGO then       *\n*    logoff.                                                          *\n*                                                                     *\n*    Check to see if a commarea exists. If it does, then we have      *\n*    been entered for a second time, and should process any entered   *\n*    data.                                                            *\n*                                                                     *\n*    If there is no commarea, then we shall build the signon screen   *\n*    and send it to the terminal.                                     *\n*                                                                     *\n***********************************************************************\n         SPACE\n         CLC   EIBTRNID,LOGO           Entered for LOGOFF ?\n         BE    LOGOFF                  Yes, then do so\n         SPACE\n         OC    EIBCALEN,EIBCALEN       IS THERE A COMMAREA ?\n         BNZ   DORECV                  YES, GO RECEIVE ANY INPUT\n         SPACE\n***********************************************************************\n* First time in processing                                            *\n***********************************************************************\n         SPACE\n         BAL   R9,SIGNOFF              SIGN OFF RACF (IF REQUIRED)\n         SPACE\n         MVC   SPUSERL,PUTCURS         PUT CURSOR IN USER FIELD\n         SPACE\n***********************************************************************\n* Build the signon map                                                *\n***********************************************************************\n         SPACE\n         EXEC  CICS ASSIGN                                             X\n               APPLID(SPSYSO)\n         SPACE\n         EXEC  CICS ASKTIME                                            X\n               ABSTIME(ABSTIME)\n         SPACE\n         EXEC  CICS FORMATTIME                                         X\n               ABSTIME(ABSTIME)                                        X\n               DATESEP('/')                                            X\n               DDMMYY(SPDATEO)                                         X\n               TIMESEP                                                 X\n               TIME(SPTIMEO)\n         SPACE\n         MVC   SPTERMO,EIBTRMID        MOVE TERMINAL NAME TO MAP\n         SPACE\n***********************************************************************\n* Move the good morning message to the map (from the SIT)             *\n*                                                                     *\n*  Note : If the message starts 'xxxx:', then the assumption is made  *\n*         that 'xxxx' is the first transaction to be run.             *\n*                                                                     *\n***********************************************************************\n         SPACE\n         EXEC CICS INQUIRE SYSTEM                                      X\n               GMMLENGTH(GMMLEN)                                       x\n               GMMTEXT(GMMTEXT)\n         LH    R5,GMMLEN               GET LENGTH OF MESSAGE\n         LTR   R5,R5                   IS THERE REALLY ONE ?\n         BZ    NOGMM                   NO\n         SPACE\n         LA    R4,GMMTEXT              -> Text of message\n         CH    R5,H5                   IS IT LONG ENOUGH FOR A PREFIX ?\n         BNH   NOSITPRE                NO, SKIP THE CHECK THEN\n         SPACE\n         CLI   4(R4),C':'              DOES IT HAVE A PREFIX ?\n         BNE   NOSITPRE                NO, GO CENTRE IT\n         SH    R5,H5                   REDUCE LENGTH BY 5\n         MVC   SPNXTO(4),0(R4)         move first transaction to map\n         LA    R4,5(,R4)               SKIP THE PREFIX\n         SPACE\nNOSITPRE DS    0H\n         CH    R5,MAXGMM               TOO LONG ?\n         BNH   CENGMM                  NO, GO CENTER IT\n         LH    R5,MAXGMM               YES, TRUNCATE\n         LA    R6,SPGMMTO              -> PLACE TO MOVE TO\n         B     MVGMM                   GO MOVE IT\n         SPACE\nCENGMM   DS    0H\n         LH    R7,MAXGMM               GET MAX LENGTH\n         SR    R7,R5                   CALC NO. OF SLACK BYTES\n         SRL   R7,1                    DIVIDE BY TWO\n         MVI   SPGMMTO,C' '\n         MVC   SPGMMTO+1(L'SPGMMTO-1),SPGMMTO\n         LA    R6,SPGMMTO              -> OUTPUT AREA\n         LA    R6,0(R7,R6)             CENTRE IT\nMVGMM    DS    0H\n         BCTR  R5,0                    -1 FOR EXECUTE\n         EX    R5,MVGMMT               MOVE TO MAP\nMVGMMT   MVC   0(0,R6),0(R4)\n         SPACE\nNOGMM    DS    0H\n         SPACE\n***********************************************************************\n* WRITE THE SIGNON SCREEN TO THE TERMINAL                             *\n***********************************************************************\n         SPACE\n         EXEC  CICS SEND                                               X\n               MAP('ISSIGN')                                           X\n               MAPSET('ISSIGNM')                                       X\n               ERASE                                                   X\n               CURSOR\n         SPACE\nRETURN   DS    0H\n         SPACE\n***********************************************************************\n* RETURN TO CICS AND WAIT FOR THE USERS ACTION                        *\n***********************************************************************\n         SPACE\n         EXEC  CICS RETURN                                             X\n               COMMAREA(COMMAR)                                        X\n               TRANSID(EIBTRNID)\n         EJECT\nDORECV   DS    0H\n         SPACE\n***********************************************************************\n* PROCESS THE USERS INPUT                                             *\n* -----------------------                                             *\n*                                                                     *\n*  This routine is called after the user has responded to the         *\n*  signon screen.                                                     *\n*                                                                     *\n***********************************************************************\n         SPACE\n         L     R4,DFHEICAP             -> COMMAREA\n         MVC   COMMAR,0(R4)            MOVE TO DYNAMIC STORAGE\n         SPACE\n***********************************************************************\n* SET UP TO HANDLE A MAPFAIL CONDITION                                *\n***********************************************************************\n         SPACE\n         EXEC  CICS HANDLE CONDITION                                   X\n               MAPFAIL(LOGOFF)\n         SPACE\n         EXEC  CICS RECEIVE                                            X\n               MAP('ISSIGN')                                           X\n               MAPSET('ISSIGNM')\n         SPACE\n***********************************************************************\n* PROCESS THE USERS INPUT                                             *\n***********************************************************************\n         SPACE\n         CLI   EIBAID,DFHPF3           PF3 - LOGOFF ?\n         BE    LOGOFF                  YES, DO SO\n         SPACE\n         CLI   EIBAID,DFHPF15          PF15 - LOGOFF ?\n         BE    LOGOFF                  YES, GO TO VTAM\n         SPACE\n         CLC   SPUSERI,BLANKS          WAS A USERID ENTERED ?\n         BE    NOUSER                  NO\n         SPACE\n         CLC   SPUSERI,NULLS           USERID FIELD ERASED ?\n         BE    NOUSER                  YES, TREAT AS MISSING\n         SPACE\n         MVC   USERID,SPUSERI          SIGN ON WITH THIS ID\n         SPACE\n         CLC   SPPASSWI,BLANKS         WAS PASSWORD GIVEN ?\n         BNE   CHECKNP                 YES, GO CHECK NEW PASSWORD\n         SPACE\n         LA    R5,ERRM1                -> ERROR MESSAGE 1\n         MVC   SPPASSWL,PUTCURS        POSITION CURSOR\n         B     PUTERR                  PUT OUT AN ERROR MESSAGE\n         SPACE\nCHECKNP  DS    0H\n         CLC   SPNPASSI,BLANKS         A NEW PASSWORD REQUIRED ?\n         BE    NONEWP                  NO\n         CLC   SPNPASSI,SPVPASSI       NEW = VERIFY ?\n         BE    DOSIGN                  YES, GO SIGNON\n         SPACE\nNPASSER  DS    0H\n         LA    R5,ERRM2                -> ERROR MESSAGE\n         MVC   SPNPASSL,PUTCURS        POSITION CURSOR\n         MVC   SPNPASSO,BLANKS         BLANK OUT THE NEW PASSWORD\n         MVC   SPVPASSO,BLANKS         BLANK OUT THE VER PASSWORD\n         B     PUTERR                  GO THROW IT OUT\n         SPACE\nNONEWP   DS    0H\n         CLC   SPVPASSI,BLANKS         VERIFY PASSWORD ALSO BLANK ?\n         BNE   NPASSER                 NO, TELL THE USER\n         SPACE\n         B     DOSIGN                  GO DO RACF SIGNON\n         SPACE\nNOUSER   DS    0H\n         LA    R5,ERRM4                -> ERROR MESSAGE 6\n         MVC   SPUSERL,PUTCURS         POSITION CURSOR\n         B     PUTERR                  PUT OUT AN ERROR MESSAGE\n         SPACE\nDOSIGN   DS    0H\n         SPACE\n***********************************************************************\n* PERFORM A CICS SIGNON                                               *\n***********************************************************************\n         SPACE\n         BAL   R9,SIGNON               GO PERFORM THE RACF SIGNON\n         SPACE\n***********************************************************************\n* If the signon failed for any reason, we will blank out the new      *\n* password fields. We want the changing of a password to be a         *\n* deliberate act, and not a mistake.                                  *\n***********************************************************************\n         SPACE\n         MVC   SPNPASSO,BLANKS         BLANK OUT THE NEW PASSWORD\n         MVC   SPVPASSO,BLANKS         BLANK OUT THE VER PASSWORD\n         SPACE\n         LTR   R15,R15                 SIGNON COMPLETE ?\n         BNZ   PUTERR                  NO, GO ISSUE AN ERROR MESSAGE\n         SPACE\n***********************************************************************\n* THE SIGNON TO RACF IS COMPLETE.                                     *\n* ------------------------------                                      *\n*                                                                     *\n*    * If the user specified an initial transaction then              *\n*      initiate it.                                                   *\n*                                                                     *\n*    * Otherwise run the standard CICS good morning transaction       *\n*                                                                     *\n***********************************************************************\n         SPACE\n         MVC   TRANSID,GMTRAN          Assume standard Hello\n         SPACE\n         CLC   SPNXTI,BLANKS           Did the punter specify TRANID ?\n         BE    GOTRAN                  No, go to standard\n         MVC   TRANSID,SPNXTI          Yes, go to it\n         SPACE\nGOTRAN   DS    0H\n         EXEC  CICS IGNORE CONDITION                                   x\n               TRANSIDERR\n         SPACE\n         EXEC  CICS START                                              X\n               TERMID(EIBTRMID)                                        X\n               TRANSID(TRANSID)\n         SPACE\n         EXEC  CICS RETURN\n         EJECT\nLOGOFF   DS    0H\n         SPACE\n***********************************************************************\n* This routine is branched to if a mapfail condition occurs while     *\n* reading a map. This condition can be cause by the use of a short-   *\n* read key (CLEAR,PA1 or PA2), or if there is no input (the user hit  *\n* erase-input). In all cases, we will disconnect to VTAM.             *\n* we also come here if the user hits PF3 or PF15.                     *\n***********************************************************************\n         SPACE\n         EXEC  CICS ISSUE                                              X\n               DISCONNECT\n         SPACE\n         EXEC  CICS RETURN\n         EJECT\nPUTERR   DS    0H\n         SPACE\n***********************************************************************\n* PUT OUT AN ERROR MESSAGE                                            *\n*                                                                     *\n*    R5 -> ERROR MESSAGE TEXT                                         *\n*                                                                     *\n***********************************************************************\n         SPACE\n         MVC   SPERRMO,0(R5)\n         SPACE\n         EXEC  CICS SEND                                               X\n               MAPSET('ISSIGNM')                                       X\n               MAP('ISSIGN')                                           X\n               DATAONLY                                                X\n               CURSOR                                                  X\n               FREEKB                                                  X\n               ALARM\n         SPACE\n         B     RETURN\n         EJECT\nSIGNOFF  DS    0H\n         SPACE\n***********************************************************************\n* This routine is called to check if a user is already signed on at   *\n* the users terminal. If one is, it is signed off with a call to      *\n* CICS security.                                                      *\n*                                                                     *\n* The manual states that ASSIGN UNATTEND returns an indication of     *\n* if a user is signed on. This is total hog-poo. The test always      *\n* returns X'00'. So we test here to see if the default id is logged   *\n* on.                                                                 *\n***********************************************************************\n         SPACE\n         EXEC  CICS ASSIGN                                             X\n               USERID(SONID)\n         SPACE\n         EXEC  CICS INQUIRE SYSTEM                                     X\n               DFLTUSER(DEFID)\n         SPACE\n         CLC   SONID,DEFID             Default ID logged on ?\n         BE    SKIPSOF                 Yes, so skip signoff\n         SPACE\n         EXEC  CICS SIGNOFF\n         SPACE\nSKIPSOF  DS    0H\n         BR    R9\n         EJECT\nSIGNON   DS    0H\n         SPACE\n***********************************************************************\n* This routine is called to sign on to CICS using EXEC CICS SIGNON    *\n***********************************************************************\n         SPACE\n         MVC   USER,USERID             MOVE USERID TO RACF AREA\n         OC    USER,BLANKS             MAKE IT UPPER CASE\n         SPACE\n         MVC   PASSWD,SPPASSWI         MOVE PASSWORD TO RACF AREA\n         OC    PASSWD,BLANKS           ENSURE UPPER CASE\n         SPACE\n         MVC   NPASSWD,SPNPASSI        MOVE NEW PASSWORD TO RACF AREA\n         OC    NPASSWD,BLANKS          MAKE UPPER CASE\n         SPACE\n         EXEC CICS SIGNON                                              X\n               USERID(USER)                                            X\n               PASSWORD(PASSWD)                                        X\n               NEWPASSWORD(NPASSWD)                                    X\n               RESP(RESP)                                              X\n               RESP2(RESP2)\n         SPACE\n         CLC   RESP,DFHRESP(NORMAL)   All ok ?\n         BNE   SONERR                 No, process error return\n***********************************************************************\n* Signon completed successfully - clear R15 and return                *\n***********************************************************************\n         SPACE\n         SR    R15,R15                 SIGNED ON OK ?\n         BR    R9                      EXIT TO CALLER\n         SPACE\n***********************************************************************\n* Signon failed - analyse reason and tell the user                    *\n***********************************************************************\nSONERR   DS    0H\n         L     R15,RESP2               Get extended response code\n         SPACE\n***********************************************************************\n* Look up error message matching response code                        *\n***********************************************************************\n         SPACE\n         LA    R5,ERRTAB               -> Error Table\nERRLKUP  DS    0H\n         CLI   0(R5),X'FF'             End of table ?\n         BE    ERRRET                  Yes, return with last message\n         SPACE\n         C     R15,0(R5)               Match on this one ?\n         BE    ERRRET                  Yes\n         SPACE\n         LA    R5,12(R5)               -> Next message\n         B     ERRLKUP                 Keep on looking\n         SPACE\nERRRET   DS    0H\n         L     R4,8(R5)                -> Cursor position code\n         L     R5,4(R5)                -> Message text\n         BR    R4                      Go posn cursor and exit\n         SPACE\nEXPIRED  DS    0H\n         SPACE\nCURSPW   DS    0h\n         MVC   SPPASSWL,PUTCURS        PUT CURSOR IN PASSWORD\n         BR    R9                      RETURN TO CALLER\n         SPACE\nCURSNPW  DS    0h\n         MVC   SPNPASSL,PUTCURS        PUT CURSOR IN NEW PASSWORD\n         BR    R9                      RETURN TO CALLER\n         SPACE\nCURSUS   DS    0h\n         MVC   SPUSERL,PUTCURS         PUT CURSOR IN USERID\n         BR    R9                      RETURN TO CALLER\n         EJECT\nPUTCURS  DC    H'-1'\nMAXGMM   DC    H'80'\nH4       DC    H'4'\nH5       DC    H'5'\nH8       DC    H'8'\nH16      DC    H'16'\n         SPACE\nGMTRAN   DC    C'CSGM'           Standard CICS Hello Message\nLOGO     DC    C'LOGO'           LOGOFF transaction ID\n         SPACE\nBLANKS   DC    CL9' '\nNULLS    DC    XL9'000000000000000000'\n         SPACE\n**********************************************************************\n* Error message table                                                *\n*====================================================================*\n*  Cursor posn routine addr ------+                                  *\n*                                 |                                  *\n*  Error Msg Addr ------+         |                                  *\n*                       |         |                                  *\n*  RESP2 code ---+      |         |                                  *\n*                |      |         |                                  *\n*                v      v         v                                  *\n**********************************************************************\n         SPACE\nERRTAB   DS    0F\n         DC    A(01),A(ERRM5),A(CURSPW)\n         DC    A(02),A(ERRM6),A(CURSPW)\n         DC    A(03),A(ERRM3),A(CURSPW)\n         DC    A(04),A(ERRM7),A(CURSNPW)\n         DC    A(08),A(ERRM13),A(CURSUS)\n         DC    A(16),A(ERRM8),A(CURSUS)\n         DC    A(17),A(ERRM9),A(CURSPW)\n         DC    A(19),A(ERRM10),A(CURSUS)\n         DC    A(20),A(ERRM11),A(CURSUS)\n         DC    A(29),A(ERRM12),A(CURSUS)\n         DC    X'FFFFFFFF'\n         DC    A(ERRM14),A(CURSUS)\n         SPACE\nERRM1    DC    CL70'Please enter your password'\nERRM2    DC    CL70'New password does not equal the verify password, plX\n               ease reenter'\nERRM3    DC    CL70'Your password has expired - Please enter new passwoX\n               rd (TWICE)'\nERRM4    DC    CL70'Please enter Your Userid and Password'\nERRM5    DC    CL70'Please enter your password'\nERRM6    DC    CL70'The password you entered is incorrect'\nERRM7    DC    CL70'The new password is not acceptable'\nERRM8    DC    CL70'You are not authorised to use this terminal'\nERRM9    DC    CL70'You are not authorised to use this system'\nERRM10   DC    CL70'Your userid is currently revoked'\nERRM11   DC    CL70'Your userid is revoked from this group'\nERRM12   DC    CL70'Your userid is already signed on'\nERRM13   DC    CL70'Userid entered is not defined to security system'\nERRM14   DC    CL70'Undetermined security error occured'\n         LTORG\n         PRINT ON,NOGEN\n         COPY  DFHCSADS\n         DFHSIT TYPE=DSECT\n         COPY  DFHTCADS\n         DFHTCA CICSYST=YES\n         COPY  DFHTCTTE\n         END\nMEMBER NAME  ISSIGNM\nISSIGNM  DFHMSD TYPE=&SYSPARM,MODE=INOUT,STORAGE=AUTO\n         TITLE 'CICS SIGNON PANEL               '\nISSIGN   DFHMDI SIZE=(24,80),CTRL=(FREEKB),MAPATTS=(COLOR),            *\n               COLUMN=1,LINE=1,DATA=FIELD,TIOAPFX=YES,                 *\n               OBFMT=NO\n* SPDATE\nSPDATE   DFHMDF POS=(1,1),LENGTH=8,INITIAL='        ',                 *\n               ATTRB=(PROT,BRT),COLOR=TURQUOISE\n         DFHMDF POS=(1,10),LENGTH=1,ATTRB=(PROT,NORM)\n         DFHMDF POS=(1,22),LENGTH=39,INITIAL=' ** Your Company Name ** *\n               CICS Signon ',ATTRB=(PROT,BRT)\n* SPTIME\nSPTIME   DFHMDF POS=(1,72),LENGTH=8,INITIAL='        ',                *\n               ATTRB=(PROT,BRT),COLOR=TURQUOISE\n         DFHMDF POS=(2,1),LENGTH=1,ATTRB=(PROT,NORM)\n* SPGMMT\nSPGMMT   DFHMDF POS=(2,80),LENGTH=80,INITIAL='                         *\n                                                                      '*\n               ,ATTRB=(PROT,BRT),COLOR=YELLOW\n         DFHMDF POS=(4,1),LENGTH=1,ATTRB=(PROT,NORM)\n         DFHMDF POS=(4,80),LENGTH=39,INITIAL='Enter your userid and pas*\n               sword below :-',ATTRB=(PROT,NORM)\n         DFHMDF POS=(5,80),LENGTH=15,INITIAL='Otherwise press',        *\n               ATTRB=(PROT,NORM)\n         DFHMDF POS=(6,16),LENGTH=3,INITIAL='PF3',ATTRB=(PROT,         *\n               BRT)\n         DFHMDF POS=(6,20),LENGTH=19,INITIAL='to logoff from CICS',    *\n               ATTRB=(PROT,NORM)\n         DFHMDF POS=(8,2),LENGTH=7,INITIAL=' Userid',                  *\n               ATTRB=(PROT,BRT),COLOR=TURQUOISE\n         DFHMDF POS=(8,10),LENGTH=1,ATTRB=(PROT,NORM)\n         DFHMDF POS=(8,16),LENGTH=1,INITIAL=':',ATTRB=(PROT,           *\n               NORM)\n* SPUSER\nSPUSER   DFHMDF POS=(8,18),LENGTH=8,INITIAL='        ',                *\n               ATTRB=(UNPROT,NORM,IC,FSET)\n         DFHMDF POS=(8,27),LENGTH=1,ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(10,2),LENGTH=9,INITIAL=' Password',               *\n               ATTRB=(PROT,BRT),COLOR=TURQUOISE\n         DFHMDF POS=(10,12),LENGTH=5,INITIAL='    :',                  *\n               ATTRB=(PROT,NORM)\n* SPPASSW\nSPPASSW  DFHMDF POS=(10,18),LENGTH=8,INITIAL='        ',               *\n               ATTRB=(UNPROT,DRK,FSET)\n         DFHMDF POS=(10,27),LENGTH=1,ATTRB=(PROT,NORM)\n         DFHMDF POS=(12,80),LENGTH=62,INITIAL='To change your password *\n               enter your new password below twice :-',                *\n               ATTRB=(PROT,NORM)\n         DFHMDF POS=(15,2),LENGTH=13,INITIAL=' New Password',          *\n               ATTRB=(PROT,BRT),COLOR=TURQUOISE\n         DFHMDF POS=(15,16),LENGTH=1,INITIAL=':',ATTRB=(PROT,          *\n               NORM)\n* SPNPASS\nSPNPASS  DFHMDF POS=(15,18),LENGTH=8,INITIAL='        ',               *\n               ATTRB=(UNPROT,DRK,FSET)\n         DFHMDF POS=(15,27),LENGTH=1,ATTRB=(ASKIP,NORM)\n         DFHMDF POS=(17,16),LENGTH=1,INITIAL=':',ATTRB=(PROT,          *\n               NORM)\n* SPVPASS\nSPVPASS  DFHMDF POS=(17,18),LENGTH=8,INITIAL='        ',               *\n               ATTRB=(UNPROT,DRK,FSET)\n         DFHMDF POS=(17,27),LENGTH=1,ATTRB=(ASKIP,NORM)\n* SPERRM\nSPERRM   DFHMDF POS=(22,5),LENGTH=70,INITIAL='                         *\n                                                            ',         *\n               ATTRB=(PROT,BRT),COLOR=RED\n         DFHMDF POS=(22,76),LENGTH=7,INITIAL='    Nxt',                *\n               ATTRB=(PROT,NORM)\n* SPNXT\nSPNXT    DFHMDF POS=(23,4),LENGTH=4,INITIAL='    ',                    *\n               ATTRB=(UNPROT,NORM,IC,FSET)\n* SPTERM\nSPTERM   DFHMDF POS=(24,1),LENGTH=4,INITIAL='    ',ATTRB=(ASKIP,       *\n               BRT),COLOR=TURQUOISE\n         DFHMDF POS=(24,6),LENGTH=1,ATTRB=(PROT,NORM)\n         DFHMDF POS=(24,19),LENGTH=9,INITIAL='Clear/PF3',              *\n               ATTRB=(PROT,BRT)\n         DFHMDF POS=(24,29),LENGTH=30,INITIAL='- Disconnect from CICS s*\n               ervice',ATTRB=(PROT,NORM)\n* SPSYS\nSPSYS    DFHMDF POS=(24,72),LENGTH=8,INITIAL='        ',               *\n               ATTRB=(PROT,BRT),COLOR=TURQUOISE\n         DFHMSD TYPE=FINAL\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OAT": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\x12\\x00\\x00B\\x00B\\x00\\x00\\xd5\\xe3\\xc8\\xd6\\xd4\\xc1\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T12:00:00", "lines": 66, "newlines": 66, "modlines": 0, "user": "NTHOMAS"}, "text": "*----------------------------------------------------------------\n*\n* Deck to generate OSA Address Table\n* ==================================\n*\n* This deck defines the OSA address Table (OAT). This should be\n* processed through GENOAT to produce an OAT table in the format\n* required by OSA/SF\n*\n*----------------------------------------------------------------\n*\n* Define the OSA Channel and CU number\n*\n*   Format: OSA,cc,nnnn\n*\n*          cc   - Channel number (in hex)\n*          nnnn - Control Unit number\n*----------------------------------------------------------------\nOSA,2F,0020\n*----------------------------------------------------------------\n* Define the partition names and Numbers\n*\n*   Format: PART,name,number\n*\n*            name   - Partition Name (1-15)\n*            number -Optional Partition Number (defaults to relative\n*                                               position 1,2..15)\n*----------------------------------------------------------------\nPART,MVSPROD,1\nPART,MVSTEST,2\n*----------------------------------------------------------------\n* Define the Port/Address pairs for SNA and TCP/IP\n*\n*   SNA Format: SNA,port,addr,part,idnum\n*\n*                Port  - OSA Port no. in hex (FF is Box Manager)\n*                Addr  - Device number (nnuu) (uu is Unit Addr)\n*                        nnnn-uu Device number nnnn and unit 'uu'\n*                Part  - Partition name or number. If more than one\n*                        include in parenthesis.\n*                IDNUM - VTAM 5 digit hex ID for Box Manager PU\n*                        Required when port = FF\n*\n* TCP Format: TCP,port,addr,part,ip-addr,def-lpar\n*\n*                Port - OSA Port no. in hex (FF is Box Manager)\n*                Addr - Device number (nnuu) (uu is Unit Addr)\n*                       nnnn-uu Device number nnnn and unit 'uu'\n*                Part - Partition name or number. If more than one\n*                       include in parenthesis.\n*                IP-Addr - IP address for each partition (only\n*                          required when sharing port)\n*                Def-lpar - Default LPAR name or number when sharing\n*                           a port\n*--------------------------------------------------------------------\nSNA,00,0200,(MVSPROD,MVSTEST)\nSNA,01,0201,(MVSPROD,MVSTEST)\nSNA,02,0202,(MVSPROD,MVSTEST)\nSNA,03,0203,(MVSPROD,MVSTEST)\nSNA,04,0204,(MVSPROD,MVSTEST)\nSNA,FF,023A,MVSPROD,3A001\nTCP,00,0210,(MVSPROD,MVSTEST),(10.1.0.2,10.1.0.8),MVSPROD\nTCP,01,0212,(MVSPROD,MVSTEST),(10.1.0.3,10.1.0.9),MVSPROD\nTCP,02,0214,(MVSPROD,MVSTEST),(10.1.0.4,10.1.0.10),MVSPROD\nTCP,03,0216,(MVSPROD,MVSTEST),(10.1.0.5,10.1.0.11),MVSPROD\nTCP,04,0218,(MVSPROD,MVSTEST),(10.1.0.6,10.1.0.12),MVSPROD\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "OATOUT": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\x12\\x00\\x02\\xa5\\x02\\xa5\\x00\\x00\\xd5\\xe3\\xc8\\xd6\\xd4\\xc1\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T12:00:00", "lines": 677, "newlines": 677, "modlines": 0, "user": "NTHOMAS"}, "text": "/*********************************************************************/\n/*           OAT generated by GENOAT on 12/03/00 by P313272          */\n/*********************************************************************/\n/*********************************************************************/\n/*                     Start of OSA Address Table                    */\n/*********************************************************************/\n/*********************************************************************/\n/* All entries below that are preceeded by 's-' indicate that the    */\n/* field is settable during Put_OAT processing                       */\n/*********************************************************************/\n/*********************************************************************/\n/* Start of Base OAT entry                                           */\n/*********************************************************************/\noathdr.1 = IOA_OAT_HDR                 /*   Eyecatcher-Do not change */\noathdr.2 = 2F                          /* s-Chpid                    */\noathdr.3 = 31                          /* s-number of entries        */\n/*********************************************************************/\n/* Start of OAT entry 1                                              */\n/*********************************************************************/\noat.1.1 = IOA_OATENTRY                 /*   Eyecatcher- do not delete*/\noat.1.2 = All data is valid            /*   Valid data indicator     */\noat.1.3 = MVSPROD                      /*   Partition name           */\noat.1.4 = 1                            /* s-Partition number         */\noat.1.5 = 00                           /* s-unit address             */\noat.1.6 = 0200                         /*   device number            */\noat.1.7 = 2F                           /*   Chpid                    */\noat.1.8 = 0020                         /*   control unit number      */\noat.1.9 = configured                   /*   channel state            */\noat.1.10 = yes                         /*   device accessible        */\noat.1.11 = 01                          /* s-group size               */\noat.1.12 = SNA                         /* s-entry type               */\noat.1.13 = started                     /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.1.1 = 00                           /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 2                                              */\n/*********************************************************************/\noat.2.1 = IOA_OATENTRY                 /*   Eyecatcher- do not delete*/\noat.2.2 = All data is valid            /*   Valid data indicator     */\noat.2.3 = MVSTEST                      /*   Partition name           */\noat.2.4 = 2                            /* s-Partition number         */\noat.2.5 = 00                           /* s-unit address             */\noat.2.6 = 0200                         /*   device number            */\noat.2.7 = 2F                           /*   Chpid                    */\noat.2.8 = 0020                         /*   control unit number      */\noat.2.9 = configured                   /*   channel state            */\noat.2.10 = yes                         /*   device accessible        */\noat.2.11 = 01                          /* s-group size               */\noat.2.12 = SNA                         /* s-entry type               */\noat.2.13 = started                     /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.2.1 = 00                           /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 3                                              */\n/*********************************************************************/\noat.3.1 = IOA_OATENTRY                 /*   Eyecatcher- do not delete*/\noat.3.2 = All data is valid            /*   Valid data indicator     */\noat.3.3 = MVSPROD                      /*   Partition name           */\noat.3.4 = 1                            /* s-Partition number         */\noat.3.5 = 01                           /* s-unit address             */\noat.3.6 = 0201                         /*   device number            */\noat.3.7 = 2F                           /*   Chpid                    */\noat.3.8 = 0020                         /*   control unit number      */\noat.3.9 = configured                   /*   channel state            */\noat.3.10 = yes                         /*   device accessible        */\noat.3.11 = 01                          /* s-group size               */\noat.3.12 = SNA                         /* s-entry type               */\noat.3.13 = started                     /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.3.1 = 01                           /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 4                                              */\n/*********************************************************************/\noat.4.1 = IOA_OATENTRY                 /*   Eyecatcher- do not delete*/\noat.4.2 = All data is valid            /*   Valid data indicator     */\noat.4.3 = MVSTEST                      /*   Partition name           */\noat.4.4 = 2                            /* s-Partition number         */\noat.4.5 = 01                           /* s-unit address             */\noat.4.6 = 0201                         /*   device number            */\noat.4.7 = 2F                           /*   Chpid                    */\noat.4.8 = 0020                         /*   control unit number      */\noat.4.9 = configured                   /*   channel state            */\noat.4.10 = yes                         /*   device accessible        */\noat.4.11 = 01                          /* s-group size               */\noat.4.12 = SNA                         /* s-entry type               */\noat.4.13 = started                     /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.4.1 = 01                           /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 5                                              */\n/*********************************************************************/\noat.5.1 = IOA_OATENTRY                 /*   Eyecatcher- do not delete*/\noat.5.2 = All data is valid            /*   Valid data indicator     */\noat.5.3 = MVSPROD                      /*   Partition name           */\noat.5.4 = 1                            /* s-Partition number         */\noat.5.5 = 02                           /* s-unit address             */\noat.5.6 = 0202                         /*   device number            */\noat.5.7 = 2F                           /*   Chpid                    */\noat.5.8 = 0020                         /*   control unit number      */\noat.5.9 = configured                   /*   channel state            */\noat.5.10 = yes                         /*   device accessible        */\noat.5.11 = 01                          /* s-group size               */\noat.5.12 = SNA                         /* s-entry type               */\noat.5.13 = started                     /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.5.1 = 02                           /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 6                                              */\n/*********************************************************************/\noat.6.1 = IOA_OATENTRY                 /*   Eyecatcher- do not delete*/\noat.6.2 = All data is valid            /*   Valid data indicator     */\noat.6.3 = MVSTEST                      /*   Partition name           */\noat.6.4 = 2                            /* s-Partition number         */\noat.6.5 = 02                           /* s-unit address             */\noat.6.6 = 0202                         /*   device number            */\noat.6.7 = 2F                           /*   Chpid                    */\noat.6.8 = 0020                         /*   control unit number      */\noat.6.9 = configured                   /*   channel state            */\noat.6.10 = yes                         /*   device accessible        */\noat.6.11 = 01                          /* s-group size               */\noat.6.12 = SNA                         /* s-entry type               */\noat.6.13 = started                     /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.6.1 = 02                           /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 7                                              */\n/*********************************************************************/\noat.7.1 = IOA_OATENTRY                 /*   Eyecatcher- do not delete*/\noat.7.2 = All data is valid            /*   Valid data indicator     */\noat.7.3 = MVSPROD                      /*   Partition name           */\noat.7.4 = 1                            /* s-Partition number         */\noat.7.5 = 03                           /* s-unit address             */\noat.7.6 = 0203                         /*   device number            */\noat.7.7 = 2F                           /*   Chpid                    */\noat.7.8 = 0020                         /*   control unit number      */\noat.7.9 = configured                   /*   channel state            */\noat.7.10 = yes                         /*   device accessible        */\noat.7.11 = 01                          /* s-group size               */\noat.7.12 = SNA                         /* s-entry type               */\noat.7.13 = started                     /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.7.1 = 03                           /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 8                                              */\n/*********************************************************************/\noat.8.1 = IOA_OATENTRY                 /*   Eyecatcher- do not delete*/\noat.8.2 = All data is valid            /*   Valid data indicator     */\noat.8.3 = MVSTEST                      /*   Partition name           */\noat.8.4 = 2                            /* s-Partition number         */\noat.8.5 = 03                           /* s-unit address             */\noat.8.6 = 0203                         /*   device number            */\noat.8.7 = 2F                           /*   Chpid                    */\noat.8.8 = 0020                         /*   control unit number      */\noat.8.9 = configured                   /*   channel state            */\noat.8.10 = yes                         /*   device accessible        */\noat.8.11 = 01                          /* s-group size               */\noat.8.12 = SNA                         /* s-entry type               */\noat.8.13 = started                     /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.8.1 = 03                           /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 9                                              */\n/*********************************************************************/\noat.9.1 = IOA_OATENTRY                 /*   Eyecatcher- do not delete*/\noat.9.2 = All data is valid            /*   Valid data indicator     */\noat.9.3 = MVSPROD                      /*   Partition name           */\noat.9.4 = 1                            /* s-Partition number         */\noat.9.5 = 04                           /* s-unit address             */\noat.9.6 = 0204                         /*   device number            */\noat.9.7 = 2F                           /*   Chpid                    */\noat.9.8 = 0020                         /*   control unit number      */\noat.9.9 = configured                   /*   channel state            */\noat.9.10 = yes                         /*   device accessible        */\noat.9.11 = 01                          /* s-group size               */\noat.9.12 = SNA                         /* s-entry type               */\noat.9.13 = started                     /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.9.1 = 04                           /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 10                                             */\n/*********************************************************************/\noat.10.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.10.2 = All data is valid           /*   Valid data indicator     */\noat.10.3 = MVSTEST                     /*   Partition name           */\noat.10.4 = 2                           /* s-Partition number         */\noat.10.5 = 04                          /* s-unit address             */\noat.10.6 = 0204                        /*   device number            */\noat.10.7 = 2F                          /*   Chpid                    */\noat.10.8 = 0020                        /*   control unit number      */\noat.10.9 = configured                  /*   channel state            */\noat.10.10 = yes                        /*   device accessible        */\noat.10.11 = 01                         /* s-group size               */\noat.10.12 = SNA                        /* s-entry type               */\noat.10.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.10.1 = 04                          /* s-Port number              */\n/*********************************************************************/\n/* Start of OAT entry 11                                             */\n/*********************************************************************/\noat.11.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.11.2 = All data is valid           /*   Valid data indicator     */\noat.11.3 = MVSPROD                     /*   Partition name           */\noat.11.4 = 1                           /* s-Partition number         */\noat.11.5 = 3A                          /* s-unit address             */\noat.11.6 = 023A                        /*   device number            */\noat.11.7 = 2F                          /*   Chpid                    */\noat.11.8 = 0020                        /*   control unit number      */\noat.11.9 = configured                  /*   channel state            */\noat.11.10 = yes                        /*   device accessible        */\noat.11.11 = 01                         /* s-group size               */\noat.11.12 = SNA                        /* s-entry type               */\noat.11.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\nsna.11.1 = FF                          /* s-Port number              */\nsna.11.2 = 3A001                       /* s-VTAM ID number           */\n/*********************************************************************/\n/* Start of OAT entry 12                                             */\n/*********************************************************************/\noat.12.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.12.2 = All data is valid           /*   Valid data indicator     */\noat.12.3 = MVSPROD                     /*   Partition name           */\noat.12.4 = 1                           /* s-Partition number         */\noat.12.5 = 10                          /* s-unit address             */\noat.12.6 = 0210                        /*   device number            */\noat.12.7 = 2F                          /*   Chpid                    */\noat.12.8 = 0020                        /*   control unit number      */\noat.12.9 = configured                  /*   channel state            */\noat.12.10 = yes                        /*   device accessible        */\noat.12.11 = 02                         /* s-group size               */\noat.12.12 = passthru                   /* s-entry type               */\noat.12.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.12.1 = 00                     /* s-Port number              */\npassthru.12.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.12.3 = 10.1.0.2               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 13                                             */\n/*********************************************************************/\noat.13.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.13.2 = All data is valid           /*   Valid data indicator     */\noat.13.3 = MVSPROD                     /*   Partition name           */\noat.13.4 = 1                           /* s-Partition number         */\noat.13.5 = 11                          /* s-unit address             */\noat.13.6 = 0211                        /*   device number            */\noat.13.7 = 2F                          /*   Chpid                    */\noat.13.8 = 0020                        /*   control unit number      */\noat.13.9 = configured                  /*   channel state            */\noat.13.10 = yes                        /*   device accessible        */\noat.13.11 = 02                         /* s-group size               */\noat.13.12 = passthru                   /* s-entry type               */\noat.13.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.13.1 = 00                     /* s-Port number              */\npassthru.13.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.13.3 = 10.1.0.2               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 14                                             */\n/*********************************************************************/\noat.14.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.14.2 = All data is valid           /*   Valid data indicator     */\noat.14.3 = MVSTEST                     /*   Partition name           */\noat.14.4 = 2                           /* s-Partition number         */\noat.14.5 = 10                          /* s-unit address             */\noat.14.6 = 0210                        /*   device number            */\noat.14.7 = 2F                          /*   Chpid                    */\noat.14.8 = 0020                        /*   control unit number      */\noat.14.9 = configured                  /*   channel state            */\noat.14.10 = yes                        /*   device accessible        */\noat.14.11 = 02                         /* s-group size               */\noat.14.12 = passthru                   /* s-entry type               */\noat.14.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.14.1 = 00                     /* s-Port number              */\npassthru.14.2 = no                     /* s-Default LP (yes/no)      */\npassthru.14.3 = 10.1.0.8               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 15                                             */\n/*********************************************************************/\noat.15.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.15.2 = All data is valid           /*   Valid data indicator     */\noat.15.3 = MVSTEST                     /*   Partition name           */\noat.15.4 = 2                           /* s-Partition number         */\noat.15.5 = 11                          /* s-unit address             */\noat.15.6 = 0211                        /*   device number            */\noat.15.7 = 2F                          /*   Chpid                    */\noat.15.8 = 0020                        /*   control unit number      */\noat.15.9 = configured                  /*   channel state            */\noat.15.10 = yes                        /*   device accessible        */\noat.15.11 = 02                         /* s-group size               */\noat.15.12 = passthru                   /* s-entry type               */\noat.15.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.15.1 = 00                     /* s-Port number              */\npassthru.15.2 = no                     /* s-Default LP (yes/no)      */\npassthru.15.3 = 10.1.0.8               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 16                                             */\n/*********************************************************************/\noat.16.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.16.2 = All data is valid           /*   Valid data indicator     */\noat.16.3 = MVSPROD                     /*   Partition name           */\noat.16.4 = 1                           /* s-Partition number         */\noat.16.5 = 12                          /* s-unit address             */\noat.16.6 = 0212                        /*   device number            */\noat.16.7 = 2F                          /*   Chpid                    */\noat.16.8 = 0020                        /*   control unit number      */\noat.16.9 = configured                  /*   channel state            */\noat.16.10 = yes                        /*   device accessible        */\noat.16.11 = 02                         /* s-group size               */\noat.16.12 = passthru                   /* s-entry type               */\noat.16.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.16.1 = 01                     /* s-Port number              */\npassthru.16.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.16.3 = 10.1.0.3               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 17                                             */\n/*********************************************************************/\noat.17.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.17.2 = All data is valid           /*   Valid data indicator     */\noat.17.3 = MVSPROD                     /*   Partition name           */\noat.17.4 = 1                           /* s-Partition number         */\noat.17.5 = 13                          /* s-unit address             */\noat.17.6 = 0213                        /*   device number            */\noat.17.7 = 2F                          /*   Chpid                    */\noat.17.8 = 0020                        /*   control unit number      */\noat.17.9 = configured                  /*   channel state            */\noat.17.10 = yes                        /*   device accessible        */\noat.17.11 = 02                         /* s-group size               */\noat.17.12 = passthru                   /* s-entry type               */\noat.17.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.17.1 = 01                     /* s-Port number              */\npassthru.17.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.17.3 = 10.1.0.3               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 18                                             */\n/*********************************************************************/\noat.18.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.18.2 = All data is valid           /*   Valid data indicator     */\noat.18.3 = MVSTEST                     /*   Partition name           */\noat.18.4 = 2                           /* s-Partition number         */\noat.18.5 = 12                          /* s-unit address             */\noat.18.6 = 0212                        /*   device number            */\noat.18.7 = 2F                          /*   Chpid                    */\noat.18.8 = 0020                        /*   control unit number      */\noat.18.9 = configured                  /*   channel state            */\noat.18.10 = yes                        /*   device accessible        */\noat.18.11 = 02                         /* s-group size               */\noat.18.12 = passthru                   /* s-entry type               */\noat.18.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.18.1 = 01                     /* s-Port number              */\npassthru.18.2 = no                     /* s-Default LP (yes/no)      */\npassthru.18.3 = 10.1.0.9               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 19                                             */\n/*********************************************************************/\noat.19.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.19.2 = All data is valid           /*   Valid data indicator     */\noat.19.3 = MVSTEST                     /*   Partition name           */\noat.19.4 = 2                           /* s-Partition number         */\noat.19.5 = 13                          /* s-unit address             */\noat.19.6 = 0213                        /*   device number            */\noat.19.7 = 2F                          /*   Chpid                    */\noat.19.8 = 0020                        /*   control unit number      */\noat.19.9 = configured                  /*   channel state            */\noat.19.10 = yes                        /*   device accessible        */\noat.19.11 = 02                         /* s-group size               */\noat.19.12 = passthru                   /* s-entry type               */\noat.19.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.19.1 = 01                     /* s-Port number              */\npassthru.19.2 = no                     /* s-Default LP (yes/no)      */\npassthru.19.3 = 10.1.0.9               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 20                                             */\n/*********************************************************************/\noat.20.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.20.2 = All data is valid           /*   Valid data indicator     */\noat.20.3 = MVSPROD                     /*   Partition name           */\noat.20.4 = 1                           /* s-Partition number         */\noat.20.5 = 14                          /* s-unit address             */\noat.20.6 = 0214                        /*   device number            */\noat.20.7 = 2F                          /*   Chpid                    */\noat.20.8 = 0020                        /*   control unit number      */\noat.20.9 = configured                  /*   channel state            */\noat.20.10 = yes                        /*   device accessible        */\noat.20.11 = 02                         /* s-group size               */\noat.20.12 = passthru                   /* s-entry type               */\noat.20.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.20.1 = 02                     /* s-Port number              */\npassthru.20.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.20.3 = 10.1.0.4               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 21                                             */\n/*********************************************************************/\noat.21.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.21.2 = All data is valid           /*   Valid data indicator     */\noat.21.3 = MVSPROD                     /*   Partition name           */\noat.21.4 = 1                           /* s-Partition number         */\noat.21.5 = 15                          /* s-unit address             */\noat.21.6 = 0215                        /*   device number            */\noat.21.7 = 2F                          /*   Chpid                    */\noat.21.8 = 0020                        /*   control unit number      */\noat.21.9 = configured                  /*   channel state            */\noat.21.10 = yes                        /*   device accessible        */\noat.21.11 = 02                         /* s-group size               */\noat.21.12 = passthru                   /* s-entry type               */\noat.21.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.21.1 = 02                     /* s-Port number              */\npassthru.21.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.21.3 = 10.1.0.4               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 22                                             */\n/*********************************************************************/\noat.22.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.22.2 = All data is valid           /*   Valid data indicator     */\noat.22.3 = MVSTEST                     /*   Partition name           */\noat.22.4 = 2                           /* s-Partition number         */\noat.22.5 = 14                          /* s-unit address             */\noat.22.6 = 0214                        /*   device number            */\noat.22.7 = 2F                          /*   Chpid                    */\noat.22.8 = 0020                        /*   control unit number      */\noat.22.9 = configured                  /*   channel state            */\noat.22.10 = yes                        /*   device accessible        */\noat.22.11 = 02                         /* s-group size               */\noat.22.12 = passthru                   /* s-entry type               */\noat.22.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.22.1 = 02                     /* s-Port number              */\npassthru.22.2 = no                     /* s-Default LP (yes/no)      */\npassthru.22.3 = 10.1.0.10              /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 23                                             */\n/*********************************************************************/\noat.23.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.23.2 = All data is valid           /*   Valid data indicator     */\noat.23.3 = MVSTEST                     /*   Partition name           */\noat.23.4 = 2                           /* s-Partition number         */\noat.23.5 = 15                          /* s-unit address             */\noat.23.6 = 0215                        /*   device number            */\noat.23.7 = 2F                          /*   Chpid                    */\noat.23.8 = 0020                        /*   control unit number      */\noat.23.9 = configured                  /*   channel state            */\noat.23.10 = yes                        /*   device accessible        */\noat.23.11 = 02                         /* s-group size               */\noat.23.12 = passthru                   /* s-entry type               */\noat.23.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.23.1 = 02                     /* s-Port number              */\npassthru.23.2 = no                     /* s-Default LP (yes/no)      */\npassthru.23.3 = 10.1.0.10              /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 24                                             */\n/*********************************************************************/\noat.24.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.24.2 = All data is valid           /*   Valid data indicator     */\noat.24.3 = MVSPROD                     /*   Partition name           */\noat.24.4 = 1                           /* s-Partition number         */\noat.24.5 = 16                          /* s-unit address             */\noat.24.6 = 0216                        /*   device number            */\noat.24.7 = 2F                          /*   Chpid                    */\noat.24.8 = 0020                        /*   control unit number      */\noat.24.9 = configured                  /*   channel state            */\noat.24.10 = yes                        /*   device accessible        */\noat.24.11 = 02                         /* s-group size               */\noat.24.12 = passthru                   /* s-entry type               */\noat.24.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.24.1 = 03                     /* s-Port number              */\npassthru.24.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.24.3 = 10.1.0.5               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 25                                             */\n/*********************************************************************/\noat.25.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.25.2 = All data is valid           /*   Valid data indicator     */\noat.25.3 = MVSPROD                     /*   Partition name           */\noat.25.4 = 1                           /* s-Partition number         */\noat.25.5 = 17                          /* s-unit address             */\noat.25.6 = 0217                        /*   device number            */\noat.25.7 = 2F                          /*   Chpid                    */\noat.25.8 = 0020                        /*   control unit number      */\noat.25.9 = configured                  /*   channel state            */\noat.25.10 = yes                        /*   device accessible        */\noat.25.11 = 02                         /* s-group size               */\noat.25.12 = passthru                   /* s-entry type               */\noat.25.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.25.1 = 03                     /* s-Port number              */\npassthru.25.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.25.3 = 10.1.0.5               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 26                                             */\n/*********************************************************************/\noat.26.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.26.2 = All data is valid           /*   Valid data indicator     */\noat.26.3 = MVSTEST                     /*   Partition name           */\noat.26.4 = 2                           /* s-Partition number         */\noat.26.5 = 16                          /* s-unit address             */\noat.26.6 = 0216                        /*   device number            */\noat.26.7 = 2F                          /*   Chpid                    */\noat.26.8 = 0020                        /*   control unit number      */\noat.26.9 = configured                  /*   channel state            */\noat.26.10 = yes                        /*   device accessible        */\noat.26.11 = 02                         /* s-group size               */\noat.26.12 = passthru                   /* s-entry type               */\noat.26.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.26.1 = 03                     /* s-Port number              */\npassthru.26.2 = no                     /* s-Default LP (yes/no)      */\npassthru.26.3 = 10.1.0.11              /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 27                                             */\n/*********************************************************************/\noat.27.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.27.2 = All data is valid           /*   Valid data indicator     */\noat.27.3 = MVSTEST                     /*   Partition name           */\noat.27.4 = 2                           /* s-Partition number         */\noat.27.5 = 17                          /* s-unit address             */\noat.27.6 = 0217                        /*   device number            */\noat.27.7 = 2F                          /*   Chpid                    */\noat.27.8 = 0020                        /*   control unit number      */\noat.27.9 = configured                  /*   channel state            */\noat.27.10 = yes                        /*   device accessible        */\noat.27.11 = 02                         /* s-group size               */\noat.27.12 = passthru                   /* s-entry type               */\noat.27.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.27.1 = 03                     /* s-Port number              */\npassthru.27.2 = no                     /* s-Default LP (yes/no)      */\npassthru.27.3 = 10.1.0.11              /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 28                                             */\n/*********************************************************************/\noat.28.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.28.2 = All data is valid           /*   Valid data indicator     */\noat.28.3 = MVSPROD                     /*   Partition name           */\noat.28.4 = 1                           /* s-Partition number         */\noat.28.5 = 18                          /* s-unit address             */\noat.28.6 = 0218                        /*   device number            */\noat.28.7 = 2F                          /*   Chpid                    */\noat.28.8 = 0020                        /*   control unit number      */\noat.28.9 = configured                  /*   channel state            */\noat.28.10 = yes                        /*   device accessible        */\noat.28.11 = 02                         /* s-group size               */\noat.28.12 = passthru                   /* s-entry type               */\noat.28.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.28.1 = 04                     /* s-Port number              */\npassthru.28.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.28.3 = 10.1.0.6               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 29                                             */\n/*********************************************************************/\noat.29.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.29.2 = All data is valid           /*   Valid data indicator     */\noat.29.3 = MVSPROD                     /*   Partition name           */\noat.29.4 = 1                           /* s-Partition number         */\noat.29.5 = 19                          /* s-unit address             */\noat.29.6 = 0219                        /*   device number            */\noat.29.7 = 2F                          /*   Chpid                    */\noat.29.8 = 0020                        /*   control unit number      */\noat.29.9 = configured                  /*   channel state            */\noat.29.10 = yes                        /*   device accessible        */\noat.29.11 = 02                         /* s-group size               */\noat.29.12 = passthru                   /* s-entry type               */\noat.29.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.29.1 = 04                     /* s-Port number              */\npassthru.29.2 = yes                    /* s-Default LP (yes/no)      */\npassthru.29.3 = 10.1.0.6               /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 30                                             */\n/*********************************************************************/\noat.30.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.30.2 = All data is valid           /*   Valid data indicator     */\noat.30.3 = MVSTEST                     /*   Partition name           */\noat.30.4 = 2                           /* s-Partition number         */\noat.30.5 = 18                          /* s-unit address             */\noat.30.6 = 0218                        /*   device number            */\noat.30.7 = 2F                          /*   Chpid                    */\noat.30.8 = 0020                        /*   control unit number      */\noat.30.9 = configured                  /*   channel state            */\noat.30.10 = yes                        /*   device accessible        */\noat.30.11 = 02                         /* s-group size               */\noat.30.12 = passthru                   /* s-entry type               */\noat.30.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.30.1 = 04                     /* s-Port number              */\npassthru.30.2 = no                     /* s-Default LP (yes/no)      */\npassthru.30.3 = 10.1.0.12              /* s-home IP address          */\n/*********************************************************************/\n/* Start of OAT entry 31                                             */\n/*********************************************************************/\noat.31.1 = IOA_OATENTRY                /*   Eyecatcher- do not delete*/\noat.31.2 = All data is valid           /*   Valid data indicator     */\noat.31.3 = MVSTEST                     /*   Partition name           */\noat.31.4 = 2                           /* s-Partition number         */\noat.31.5 = 19                          /* s-unit address             */\noat.31.6 = 0219                        /*   device number            */\noat.31.7 = 2F                          /*   Chpid                    */\noat.31.8 = 0020                        /*   control unit number      */\noat.31.9 = configured                  /*   channel state            */\noat.31.10 = yes                        /*   device accessible        */\noat.31.11 = 02                         /* s-group size               */\noat.31.12 = passthru                   /* s-entry type               */\noat.31.13 = started                    /*   entry descriptor         */\n/*********************************************************************/\n/* Start of Extended OAT entry                                       */\n/*********************************************************************/\npassthru.31.1 = 04                     /* s-Port number              */\npassthru.31.2 = no                     /* s-Default LP (yes/no)      */\npassthru.31.3 = 10.1.0.12              /* s-home IP address          */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "RACFXREF": {"ttr": 1797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x03\\x06o\\x01\\x03\\x06o\\x12\\x00\\x03D\\x03D\\x00\\x00\\xd5\\xe3\\xc8\\xd6\\xd4\\xc1\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T12:00:00", "lines": 836, "newlines": 836, "modlines": 0, "user": "NTHOMAS"}, "text": "***********************************************************************\n*                                                                     *\n* RACFXREF                                                            *\n* --------    RACF RULE CHECKER AND CROSS-REFERENCE PROGRAM           *\n*                                                                     *\n*       THIS PROGRAM PRODUCES A CROSS REFERENCE OF WHAT RULES         *\n*       EACH USER AND GROUP IS PERMITTED TO ACCESS.                   *\n*                                                                     *\n*       IT ALSO CHECKS TO SEE IF ANY MEMBER OF AN ACCESS LIST         *\n*       IS NOT DEFINED TO RACF AS A USER OR GROUP.                    *\n*                                                                     *\n*       AN OPTIONAL PARM CAN BE SPECIFIED GIVING THE PREFIX OF        *\n*       THE USERS AND GROUPS THAT ARE TO BE LISTED.                   *\n*                                                                     *\n*           EG PARM=C301                                              *\n*                                                                     *\n*       LISTS ONLY USERS AND GROUPS STARTING 'C301'                   *\n*                                                                     *\n*                                                                     *\n* NOTE : THIS PROGRAM MUST BE LINKED AC=1 AND EXECUTED FROM AN        *\n*        AUTHORISED LIBRARY WITH A LARGE REGION (>2048K)              *\n*                                                                     *\n*        AMODE=31 AND RMODE=24                                        *\n*                                                                     *\n*        TABLE 'GENTAB' WITHIN THIS PROGRAM CONTAINS THE NAMES OF     *\n*        ALL GENERAL RULES THAT THIS PROGRAM WILL CROSS-REFERENCE.    *\n*        IF YOU WISH, YOU MAY ADD SOME MORE.                          *\n*                                                                     *\n*                                                                     *\n*  USER ABENDS                                                        *\n*  ===========                                                        *\n*                                                                     *\n*             1 - LOGIC ERROR (DUPLICATE USER/GROUP ON RACF)          *\n*             2 - TREE STORAGE FULL (TOO MANY USER/GROUP THINGIES)    *\n*                                                                     *\n*                                                                     *\n*  HEALTH WARNING                                                     *\n*  ==============                                                     *\n*                                                                     *\n*     THIS PROGRAM USES A NUMBER OF TABLES TO PERFORM ITS PROCESSING  *\n*     THESE TABLES ARE ACQUIRED BOTH ABOVE AND BELOW THE LINE. THE    *\n*     AMOUNT OF STORAGE USED IN EACH TABLE DEPENDS UPON THE NUMBER    *\n*     OF USERS, RULES AND THE LENGTH OF ACCESS LISTS. THIS PROGRAM    *\n*     (SORRY), DOES NOT CHECK TO SEE IF A TABLE FILLS UP, THIS CAN    *\n*     CAUSE VARIOUS ABENDS - YOU HAVE BEEN WARNED.                    *\n*                                                                     *\n***********************************************************************\n* AUTHOR : N.G. THOMAS (C) 1989 NUGGET SOFTWARE LTD                   *\n***********************************************************************\n         MACRO\n&NAME    PERFORM &PROC,&NODE\n&NAME    LA     R9,PER&SYSNDX\n         STM    R8,R9,0(R2)\n         LA     R2,8(R2)\n         LR     R8,&NODE\n         B      &PROC\nPER&SYSNDX DS 0H\n         MEND\n         MACRO\n&NAME    EXIT\n         SH    R2,=H'8'\n         LM    R8,R9,0(R2)\n         BR    R9\n         MEND\n         MACRO\n&NAME    SMODE &AM\n         LCLC  &LAB\n&LAB     SETC  'A'.'&SYSNDX'\n         AIF   ('&NAME' EQ '').NOLAB\n&NAME    DS    0H\n.NOLAB   AIF   ('&AM' NE '24').S31\n         L     R1,=A(&LAB)\n         AGO   .BSM\n.S31     L     R1,=A(X'80000000'+&LAB)\n.BSM     ANOP\n         BSM   R0,R1\n&LAB     DS    0H\n         MEND\n         PRINT ON,NOGEN\nRACFXREF AMODE 31\nRACFXREF RMODE 24\nRACFXREF CSECT\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE\nTREELEN  EQU   UGELEN*4000             TREE STORAGE LENGTH\nWKALEN   EQU   30*1024                 WORK AREA LENGTH\nRULARL   EQU   RULETL*20000            40,000 RULES ALLOWED (31 BIT)\nRPLEN    EQU   12*32000                RULE POINTER STORAGE\nSTACKL   EQU   32000                   STACK LENGTH\n         USING RACFXREF,R15            TEMP BASE\n         STM   R14,R12,12(R13)         SAVE THE CALLERS REGS\n         LA    R2,SAVEA                LOAD OUR SAVE AREA ADDRESS\n         B     AROUND                  SKIP SAVE AREA ETC\nSAVEA    DS    18F\n         DC    CL8'RACFXREF'\nAROUND   DS    0H\n         ST    R13,4(R2)               CHAIN CALLERS SAVE AREA\n         ST    R2,8(R13)               CHAIN OUR SAVE AREA\n         LR    R13,R2                  MAKE SAVEAREA FEEL AT HOME\n         LR    R10,R15                 PUT BASE ADDRESS IN R10\n         DROP  R15\n         USING RACFXREF,R10            R10 IS BASE REG NO. 1\n         SPACE\n***********************************************************************\n* ISOLATE ANY PARM                                                    *\n***********************************************************************\n         SPACE\n         L     R1,0(R1)                -> PARM STRING\n         LH    R2,0(R1)                GET LENGTH\n         STH   R2,PARML                SAVE FOR LATER\n         LTR   R2,R2                   ANY PARM ?\n         BZ    NOPARM                  NO\n         BCTR  R2,0\n         EX    R2,MVPARM\nMVPARM   MVC   PARM(0),2(R1)           ISOLATE THE PARM STRING\n         SPACE\nNOPARM   DS    0H\n         SPACE\n***********************************************************************\n* GET SOME STORAGE FOR THE USER/GROUP TREE                            *\n***********************************************************************\n         SPACE\n         GETMAIN R,LV=TREELEN\n         ST    R1,TREEADDR             SAVE ADDRESS OF STORAGE\n         ST    R1,NEXTFREE             SET NEXT SLOT ADDRESS\n         A     R1,=AL4(TREELEN)        CALC END ADDR\n         ST    R1,TREEFIN              SAVE END ADDRESS\n         SPACE\n***********************************************************************\n* GET SOME STORAGE FOR THE ICHEINTY WORK AREA                         *\n***********************************************************************\n         SPACE\n         GETMAIN R,LV=WKALEN\n         ST    R1,WKAREA\n         L     R2,=AL4(WKALEN)\n         ST    R2,0(R1)\n         SPACE\n***********************************************************************\n* GET SOME STORAGE FOR THE RULE STORAGE (ABOVE THE LINE)              *\n***********************************************************************\n         SPACE\n         GETMAIN R,LV=RULARL,LOC=ABOVE\n         ST    R1,RULENEXT\n         ST    R1,RULEFRST\n         SPACE\n***********************************************************************\n* GET SOME STORAGE FOR THE RULE POINTERS (ABOVE THE LINE)             *\n*                                                                     *\n*    RULE POINTERS ARE 12 BYTES LONG AND ARE USED TO CHAIN RULES      *\n*    OFF A USER/GROUP ENTRY.                                          *\n*                                                                     *\n*        0 - 3  : -> RULE ENTRY                                       *\n*        4 - 7  : -> NEXT RULE POINTER (0 = END)                      *\n*            8  : ACCESS TYPE                                         *\n*        9 - 11 : SPARE                                               *\n*                                                                     *\n***********************************************************************\n         SPACE\n         GETMAIN R,LV=RPLEN,LOC=ABOVE\n         ST    R1,RPNEXT\n***********************************************************************\n* GET SOME STORAGE FOR THE RECURSION STACK                            *\n***********************************************************************\n         SPACE\n         GETMAIN R,LV=STACKL\n         ST    R1,STACK\n         SPACE\n         SMODE 24\n         OPEN  (SYSPRINT,(OUTPUT))\n         SPACE\n         BAL   R9,PUTHEAD\n         SPACE\n         SMODE 31\n         SPACE\n***********************************************************************\n* BUILD A TREE OF ALL RACF USERS AND GROUPS                           *\n***********************************************************************\n         SPACE\n         BAL   R9,BLDTREE              GO BUILD THE TREE\n         EJECT\n         SPACE\n***********************************************************************\n* PROCESS ALL THE GENERAL RESOURCE RULES                              *\n***********************************************************************\n         SPACE\n         LA    R2,GENTAB               -> GENERAL RESOURCE TABLE\n         SPACE\nPROCGEN  DS    0H\n         CLI   0(R2),X'FF'             END OF TABLE ?\n         BE    GENEND                  YES\n         SPACE\n         XC    UGAREA,UGAREA           START AT FIRST ENTRY\n         MVI   UGAREA,X'01'\n         L     R3,WKAREA\nPROCGEN1 DS    0H\n         SPACE\n         TM    10(R3),X'80'            WAS LAST ENTRY GENERIC ?\n         BNO   PROCGEN2                NO\n         XC    4(30,R3),4(R3)          CLEAR THE WORK AREA\n         ICHEINTY NEXT,                                                C\n               TYPE='GEN',                                             C\n               ENTRY=UGAREA,                                           C\n               CLASS=(R2),                                             C\n               GENERIC=UNCOND,                                         C\n               WKAREA=(R3),                                            C\n               ACTIONS=(ACTGEN1,ACTGEN2)\n         SPACE\n         B     PROCGEN3\n         SPACE\nPROCGEN2 DS    0H\n         XC    4(30,R3),4(R3)          CLEAR THE WORK AREA\n         ICHEINTY NEXT,                                                C\n               TYPE='GEN',                                             C\n               ENTRY=UGAREA,                                           C\n               CLASS=(R2),                                             C\n               WKAREA=(R3),                                            C\n               GENERIC=NO,                                             C\n               ACTIONS=(ACTGEN1,ACTGEN2)\n         SPACE\nPROCGEN3 DS    0H\n         LTR   R15,R15\n         BNZ   NEXTGEN\n         SPACE\n         L     R7,RULENEXT             -> STORAGE TO BUILD RULE IN\n         ST    R7,RULEPTR              SAVE AS CURRENT RULE\n         LA    R8,RULETL(,R7)          -> NEXT SLOT\n         ST    R8,RULENEXT             STORE FOR NEXT TIME\n         SPACE\n         USING RULET,R7\n         MVC   RULECL,0(R2)            MOVE IN CLASS NAME\n         MVC   RULENM,UGAREA                   RULE NAME\n         MVI   RULETYP,C' '            INDICATE NOT GENERIC\n         TM    10(R3),X'80'            IS IT GENERIC ?\n         BNO   NOTGGEN                 NO\n         MVI   RULETYP,C'G'            YES, INDICATE SO\n         SPACE\nNOTGGEN  DS    0H\n         SPACE\n         DROP  R7\n         SPACE\n***********************************************************************\n* CHECK THAT ALL THE USERS AND GROUPS IN THE ACCESS LIST EXIST.       *\n***********************************************************************\n         SPACE\n         LH    R4,28(R3)               GET LENGTH OF USER/GROUP LIST\n         LTR   R4,R4                   NULL LIST ?\n         BZ    PROCGEN1                YES, GET THE NEXT RESOURCE NAME\n         LA    R5,30(R3)               -> FIRST ACTION RETURN AREA\n         AR    R5,R4                   -> LENGTH OF SECOND AREA\n         LA    R5,2(R5)                -> FIRST ACCESS BYTE\n         ST    R5,ACCPTR               SAVE FOR LATER\n         SRL   R4,3                    CALC NO. OF USER/GROUPS\n         LA    R5,30(R3)               -> FIRST USER/GROUP\n         SPACE\nCHKACC   DS    0H\n         BAL   R9,LOOKUP               LOOKUP THE USER/GROUP\n         LTR   R15,R15                 FOUND ?\n         BNZ   GENERR1                 NO, WRITE OUT THE ERROR MESSAGE\n         BAL   R9,ADDRULE              YES, GO ADD RULE TO USER/GROUP\n         B     NEXTACC                 FIND THE NEXT ACCESS ENTRY\n         SPACE\nGENERR1  DS    0H\n         BAL   R9,ERROR1               PRINT THE ERROR\n         SPACE\nNEXTACC  DS    0H\n         L     R12,ACCPTR\n         LA    R12,1(R12)\n         ST    R12,ACCPTR              -> NEXT ACCESS FLAG\n         LA    R5,8(R5)                -> NEXT ACCESS NAME\n         BCT   R4,CHKACC               GO CHECK IT\n         SPACE\n         B     PROCGEN1                CARRY ON FOR THIS CLASS\n         SPACE\nNEXTGEN  DS    0H\n         LA    R2,8(R2)                -> NEXT CLASS NAME\n         B     PROCGEN                 GO PROCESS IT\nGENEND   DS    0H\n         SPACE\n***********************************************************************\n* PROCESS ALL THE DATASET RESOURCE RULES                              *\n***********************************************************************\n         SPACE\n         XC    UGAREA,UGAREA           START AT FIRST ENTRY\n         MVI   UGAREA,X'01'\n         L     R3,WKAREA\n         LA    R2,=C'DATASET '         FAKE THE CLASS NAME\nPROCDS   DS    0H\n         TM    10(R3),X'80'            LAST ENTRY GENERIC ?\n         BNO   PROCDSNG                NO, USE GENERIC=NO\n         SPACE\n         XC    4(30,R3),4(R3)          CLEAR THE WORK AREA\n         ICHEINTY NEXTC,                                               C\n               TYPE='DS',                                              C\n               ENTRY=UGAREA,                                           C\n               WKAREA=(R3),                                            C\n               GENERIC=UNCOND,                                         C\n               ACTIONS=(ACTGEN1,ACTGEN2)\n         SPACE\n         B     CHKPDS\n         SPACE\nPROCDSNG EQU   *\n         XC    4(30,R3),4(R3)          CLEAR THE WORK AREA\n         ICHEINTY NEXTC,                                               C\n               TYPE='DS',                                              C\n               ENTRY=UGAREA,                                           C\n               WKAREA=(R3),                                            C\n               GENERIC=NO,                                             C\n               ACTIONS=(ACTGEN1,ACTGEN2)\n         SPACE\nCHKPDS   DS    0H\n         LTR   R15,R15                 END OF DS RULES ?\n         BNZ   REPOUT                  YES, GO PRODUCE THE REPORT\n         SPACE\n         L     R7,RULENEXT             -> STORAGE TO BUILD RULE IN\n         ST    R7,RULEPTR              SAVE AS CURRENT RULE\n         LA    R8,RULETL(,R7)          -> NEXT SLOT\n         ST    R8,RULENEXT             STORE FOR NEXT TIME\n         SPACE\n         USING RULET,R7\n         MVC   RULECL,0(R2)            MOVE IN CLASS NAME\n         MVC   RULENM,UGAREA                   RULE NAME\n         MVI   RULETYP,C' '            INDICATE NOT GENERIC\n         TM    10(R3),X'80'            IS IT GENERIC ?\n         BNO   NOTGDSN                 NO\n         MVI   RULETYP,C'G'            YES, INDICATE SO\n         SPACE\nNOTGDSN  DS    0H\n         SPACE\n         DROP  R7\n         SPACE\n***********************************************************************\n* CHECK THAT ALL THE USERS AND GROUPS IN THE ACCESS LIST EXIST.       *\n***********************************************************************\n         SPACE\n         LH    R4,28(R3)               GET LENGTH OF USER/GROUP LIST\n         LTR   R4,R4                   ANY ENTRIES ?\n         BZ    PROCDS                  NO, SKIP THIS ONE\n         LA    R5,30(R3)               -> FIRST ACTION RETURN AREA\n         AR    R5,R4                   -> LENGTH OF SECOND AREA\n         LA    R5,2(R5)                -> FIRST ACCESS BYTE\n         ST    R5,ACCPTR               SAVE FOR LATER\n         SRL   R4,3                    CALC NO. OF USER/GROUPS\n         LA    R5,30(R3)               -> FIRST USER/GROUP\n         SPACE\nCHKDACC  DS    0H\n         BAL   R9,LOOKUP               LOOKUP THE USER/GROUP\n         LTR   R15,R15                 FOUND ?\n         BNZ   DAERR1                  NO, ISSUE ERROR MESSAGE\n         SPACE\n         BAL   R9,ADDRULE              ADD RULE TO USER/GROUP NODE\n         B     NEXTDACC                CHECK THE NEXT ONE\n         SPACE\nDAERR1   DS    0H\n         BAL   R9,ERROR1               PRINT THE ERROR\n         SPACE\nNEXTDACC DS    0H\n         L     R12,ACCPTR              GET THE CURRENT ACCESS POINTER\n         LA    R12,1(R12)              BUMP TO THE NEXT ONE\n         ST    R12,ACCPTR              TUCK IT AWAY FOR LATER\n         LA    R5,8(R5)                -> NEXT ACCESS NAME\n         BCT   R4,CHKDACC              GO CHECK IT\n         B     PROCDS                  GET NEXT DATSET ENTRY\n         SPACE\nREPOUT   DS     0H\n         SPACE\n***********************************************************************\n* PRINT OUT THE CROSS REFERENCE REPORT                                *\n***********************************************************************\n         SPACE\n         L     R2,STACK                -> RECURSION STACK\n         L     R8,TREEADDR             -> TOP LEVEL NODE\n         SPACE\n         PERFORM TPRINT,R8             START PRINTING\n         SPACE\n         CLOSE (SYSPRINT)\n         L     R13,4(R13)\n         RETURN (14,12),RC=0\n         EJECT\nBLDTREE  DS    0H\n         SPACE\n***********************************************************************\n* BUILD THE USER/GROUP TREE                                           *\n***********************************************************************\n         SPACE\n         L     R3,WKAREA               -> EINTY WORK AREA\n         XC    UGAREA,UGAREA           CLEAR UGAREA\n         MVI   UGAREA,X'01'            GIVE IT A LENGTH (AVOID S730)\n         MVI   BLDTYPE,C'U'            WE ARE BUILDING USERS\nBLDUSER  DS    0H\n         SPACE\n***********************************************************************\n* BUILD USER TREE                                                     *\n***********************************************************************\n         SPACE\n         ICHEINTY NEXT,                                                C\n               TYPE='USR',                                             C\n               ENTRY=UGAREA,                                           C\n               WKAREA=(R3)\n         LTR   R15,R15                 AN ENTRY RETURNED ?\n         BNZ   BLDGROUP                NO, GO BUILD GROUPS\n         SPACE\n         BAL   R8,TREEADD              GO ADD TO TREE\n         SPACE\n         B     BLDUSER                 CARRY ON BUILDING\n         SPACE\nBLDGROUP DS    0H\n         L     R3,WKAREA               -> EINTY WORK AREA\n         XC    UGAREA,UGAREA           CLEAR UGAREA\n         MVI   UGAREA,X'01'\n         MVI   BLDTYPE,C'G'            WE ARE BUILDING GROUPS\n         SPACE\nBLDGRP   DS    0H\n***********************************************************************\n* ADD GROUP ENTRIES                                                   *\n***********************************************************************\n         SPACE\n         ICHEINTY NEXT,                                                C\n               TYPE='GRP',                                             C\n               ENTRY=UGAREA,                                           C\n               WKAREA=(R3)\n         LTR   R15,R15                 AN ENTRY RETURNED ?\n         BNZR  R9                      NO, ALL DONE\n         SPACE\n         BAL   R8,TREEADD              GO ADD TO TREE\n         SPACE\n         B     BLDGRP                  CARRY ON BUILDING\n         EJECT\n         SPACE\n***********************************************************************\n*                                                                     *\n*  LOOKUP : CHECK IF A USER/GROUP IS IN THE TREE                      *\n*                                                                     *\n*           R5 -> EIGHT BYTE NAME                                     *\n*                                                                     *\n*           ON EXIT R15 = 0 IF FOUND                                  *\n*                         4 IF NOT FOUND                              *\n*                                                                     *\n***********************************************************************\n         SPACE\nLOOKUP   DS    0H\n         LA    R15,4                   ASSUME NOT FOUND\n         L     R6,FIRSTNDE             -> THE FIRST NODE\nLOOKUP1  DS    0H\n         LTR   R6,R6                   END OF NODE SEARCH ?\n         BZR   R9                      YES, NOT FOUND\n         SPACE\n         USING UGENTRY,R6\n         CLC   0(8,R5),UGNAME          FOUND IT ?\n         BE    LOOKUP9                 YES, RETURN WITH GOOD NEWS\n         SPACE\n         BL    LOOKUP2                 < GO LEFT\n         SPACE\n         L     R6,UGRIGHT              > GO RIGHT\n         B     LOOKUP1                 KEEP ON TRUCKING\n         SPACE\nLOOKUP2  DS    0H\n         L     R6,UGLEFT               -> LEFT NODE\n         B     LOOKUP1                 CHECK IT OUT (AT TESCO'S)\n         SPACE\nLOOKUP9  DS    0H\n         SR    R15,R15                 INDICATE FOUND\n         BR    R9                      RETURN TO CALLER\n         SPACE\n         DROP  R6\n         EJECT\n***********************************************************************\n* ADD A RESOURCE RULE TO A USER OR GROUP NODE ENTRY                   *\n*                                                                     *\n*        R6      -> USER/GROUP NODE                                   *\n*        RULEPTR -> THE RULE ENTRY                                    *\n*                                                                     *\n***********************************************************************\n         SPACE\nADDRULE  DS    0H\n         L     R7,RULEPTR              -> CURRENT RULE\n         USING UGENTRY,R6\n         L     R8,UGRULE               GET ADDRESS OF FIRST RULE\n         LTR   R8,R8                   IS THERE ONE ?\n         BNZ   ADDRULE1                YES, SCAN ON\n         L     R1,RPNEXT               -> NEXT RULE PTR ENTRY\n         ST    R1,UGRULE               NO, THERE IS NOW !\n         MVC   0(4,R1),RULEPTR         MOVE IN RULE ADDRESS\n         L     R12,ACCPTR              -> ACCESS BYTE\n         MVC   8(1,R1),0(R12)          MOVE INTO THE RULE PTR\n         XC    4(4,R1),4(R1)           CLEAR FORWARD CHAIN\n         LA    R1,12(,R1)              -> NEXT PTR SLOT\n         ST    R1,RPNEXT               SAVE IT\n         BR    R9                      RETURN TO CALLER\nADDRULE1 DS    0H\n         CLC   4(4,R8),=F'0'           END OF RULE CHAIN ?\n         BNE   ADDRULE2                NO, SCAN ON\n         L     R1,RPNEXT               -> NEXT RULE PTR ENTRY\n         ST    R1,4(R8)                CHAIN IT TO CURRENT\n         MVC   0(4,R1),RULEPTR         MOVE IN RULE ADDRESS\n         L     R12,ACCPTR              -> ACCESS BYTE\n         MVC   8(1,R1),0(R12)          MOVE INTO THE RULE PTR\n         XC    4(4,R1),4(R1)           CLEAR FORWARD CHAIN\n         LA    R1,12(,R1)              -> NEXT PTR SLOT\n         ST    R1,RPNEXT               SAVE IT\n         BR    R9                      EXIT TO CALLER\n         SPACE\nADDRULE2 DS    0H\n         L     R8,4(R8)                -> NEXT RULE POINTER\n         B     ADDRULE1                AND CHECK IT OUT\n         SPACE\n         DROP  R6\n         EJECT\nERROR1   DS    0H\n         CLC   PARML,=H'0'            A PARM SPECIFIED ?\n         BNER  R9                     YES, NO ERROR MESSAGE THEN\n         SPACE\n         ST    R9,ESAVE9\n         MVI   LINE,C' '\n         MVC   LINE+1(132),LINE\n         SPACE\n         MVC   LINE+1(8),0(R5)\n         MVC   LINE+10(L'EMSG1),EMSG1\n         MVC   LINE+10+L'EMSG1(8),0(R2) MOVE IN CLASS NAME\n         MVC   LINE+10+L'EMSG1+8(6),=C',RULE='\n         SR    R6,R6\n         IC    R6,UGAREA\n         BCTR  R6,0\n         EX    R6,ERROR1M\nERROR1M  MVC   LINE+10+L'EMSG1+8+6(0),UGAREA+1\n         BAL   R9,PRINT\n         L     R9,ESAVE9\n         BR    R9\n         SPACE\nESAVE9   DS    F\n         SPACE\n***********************************************************************\n* TREEADD - ADD AN ENTRY TO THE TREE                                  *\n***********************************************************************\n         SPACE\nTREEADD  DS    0H\n         SPACE\n***********************************************************************\n* IF A PARM WAS PASSED TO THIS PROGRAM, CHECK IF WE HAVE A MATCH      *\n***********************************************************************\n         SPACE\n         LH    R4,PARML                GET THE PARAMETER LEN\n         LTR   R4,R4                   IS THERE ONE ?\n         BZ    TREEADD0                NO, SKIP TEST\n         BCTR  R4,0                    -1 FOR EXECUTE\n         EX    R4,PARMCHK              COMPARE PARM WITH USER/GROUP\n         BNER  R8                      EXIT IF NO MATCH\n         SPACE\nTREEADD0 DS    0H\n         L     R4,NEXTFREE             ADDR NEXT FREE NODE\n         C     R4,TREEFIN              TABLE FULL ?\n         BNL   TREEFULL                YES, GO ABEND\n         SPACE\n         LA    R5,UGELEN(,R4)          SET THE NEXT FREE ADDR\n         ST    R5,NEXTFREE             AND SAVE\n         SPACE\n         USING UGENTRY,R4\n         MVI   UGTYPE,UGUSER           ASSUME A USER ENTRY\n         CLI   BLDTYPE,C'U'            IS IT ?\n         BE    TREEADD1                YES\n         MVI   UGTYPE,UGGROUP          NO, A GROUP\nTREEADD1 DS    0H\n         MVC   UGNAME,=CL8' '          BLANK OUT THE NAME\n         SR    R6,R6\n         IC    R6,UGAREA               GET LENGTH OF NAME\n         BCTR  R6,0\n         EX    R6,MVNAME\nMVNAME   MVC   UGNAME(0),UGAREA+1\n         XC    UGLEFT(12),UGLEFT       CLEAR THE NODE POINTERS\n         SPACE\n         L     R5,FIRSTNDE             GET ADDRESS OF FIRST NODE\n         LTR   R5,R5                   ONE BUILT YET ?\n         BNZ   TREEADD2                YES\n         ST    R4,FIRSTNDE             NO, BUILD IT\n         BR    R8                      AND EXIT\n         SPACE\n         DROP  R4\n         USING UGENTRY,R5\nTREEADD2 DS    0H\n         CLC   4(8,R4),UGNAME          COMPARE WITH CURRENT NODE\n         BL    TREEADD3                < GO LEFT\n         BH    TREEADD4                > GO RIGHT\n         ABEND 1,DUMP                  = (SHOULD NOT OCCURR)\n         SPACE\nTREEADD3 EQU   *\n         L     R6,UGLEFT               -> LEFT NODE\n         LTR   R6,R6                   IS THERE ONE ?\n         BNZ   TREEADD5                YES, SCAN IT\n         ST    R4,UGLEFT               NO, ADD THE NEW ONE\n         BR    R8                      EXIT\nTREEADD4 EQU   *\n         L     R6,UGRIGHT              -> RIGHT NODE\n         LTR   R6,R6                   IS THERE ONE ?\n         BNZ   TREEADD5                YES, SCAN IT\n         ST    R4,UGRIGHT              NO, ADD THE NEW ONE\n         BR    R8                      EXIT\n         SPACE\nTREEADD5 DS    0H\n         LR    R5,R6\n         B     TREEADD2                COMPARE AT THIS LEVEL\n         SPACE\n         DROP  R5\n         SPACE\nTREEFULL DS    0H\n         WTO   'RACFXREF - TREE STORAGE OVERFLOW'\n         ABEND 2,DUMP\n         SPACE\nPARMCHK  CLC   PARM(0),UGAREA+1\n         EJECT\n         SPACE\n***********************************************************************\n* TPRINT - RECURSIVE TREE PRINT ROUTINE                               *\n***********************************************************************\n         SPACE\nTPRINT   DS    0H\n         USING UGENTRY,R8\n         L     R7,UGLEFT               -> LEFT NODE\n         LTR   R7,R7                   IS THERE ONE ?\n         BZ    TPRINT2                 NO\n         SPACE\n         PERFORM TPRINT,R7             YES, PROCESS IT\n         SPACE\nTPRINT2  DS    0H\n         SPACE\n***********************************************************************\n* PRINT THE INFORMATION FOR THIS NODE IF IT HAS EXPLICIT RULES        *\n***********************************************************************\n         SPACE\n         CLC   UGRULE,=F'0'            HAS THIS USER/GROUP ANY RULES ?\n         BE    TPRINT3                 NO, SKIP THE PRINT OF IT\n         SPACE\n         BAL   R9,NPRINT               YES, GO PRINT THE BIZ\n         SPACE\nTPRINT3  DS    0H\n         L     R7,UGRIGHT              -> RIGHT NODE\n         LTR   R7,R7                   IS THERE ONE ?\n         BZ    TPRINT9                 NO, SKIP IT\n         SPACE\n         PERFORM TPRINT,R7             YES, RECURSE TO THIS LEVEL\n         SPACE\nTPRINT9  DS   0H\n         EXIT                          EXIT TO CALLER\n         EJECT\n         SPACE\n***********************************************************************\n* NPRINT - PRINT INFORMATION ABOUT A USER/GROUP NODE                  *\n***********************************************************************\n         SPACE\nNPRINT   DS    0H\n         USING UGENTRY,R8\n         ST    R9,NSAVE9\n         SPACE\n         MVI   LINE,C'0'               SKIP TWO LINES\n         TM    UGTYPE,UGGROUP          IS THIS A GROUP NODE ?\n         BNO   NPRINT2                 NO, TIS A PUNTER\n         MVC   LINE+1(7),=C'GROUP :'\n         MVC   LINE+9(8),UGNAME\n         B     NPRINT3\nNPRINT2  DS    0H\n         MVC   LINE+1(6),=C'USER :'\n         MVC   LINE+8(8),UGNAME\n         SPACE\nNPRINT3  DS    0H\n         BAL   R9,PRINT\n         SPACE\n***********************************************************************\n* PRINT ALL THE RULES THIS USER/GROUP IS ACCESSED TO                  *\n***********************************************************************\n         SPACE\n         L     R7,UGRULE               -> FIRST RULE PTR BLOCK\n         MVI   LINE,C'0'               SPACE THE FIRST ONE OUT\nNPRINT4  DS    0H\n         L     R5,0(R7)                 -> RULE ENTRY\n         USING RULET,R5\n         MVC   LINE+11(6),=C'CLASS='\n         MVC   LINE+17(8),RULECL\n         MVC   LINE+26(7),=C'ACCESS='\n         LA    R4,ACCTAB\nNPRINT4A CLI   0(R4),X'FF'\n         BE    NPRINT4B\n         CLC   0(1,R4),8(R7)            ACCESS MATCH ?\n         BE    NPRINT4B                 YES\n         LA    R4,9(R4)                 -> NEXT TABLE ENTRY\n         B     NPRINT4A\nNPRINT4B DS    0H\n         MVC   LINE+33(8),1(R4)\n         MVC   LINE+41(5),=C'RULE='\n         SR    R4,R4\n         IC    R4,RULENM\n         BCTR  R4,0\n         EX    R4,NPRINT5\nNPRINT5  MVC   LINE+46(0),RULENM+1\n         SPACE\n         CLI   RULETYP,C'G'             IS IT A GENERIC RULE ?\n         BNE   NPRINT6                  NO\n         SPACE\n         LA    R9,LINE+46\n         LA    R9,2(R4,R9)\n         MVC   0(3,R9),=C'(G)'          YES, INDICATE SO\n         SPACE\nNPRINT6  DS    0H\n         BAL   R9,PRINT\n         SPACE\n         L     R7,4(R7)\n         LTR   R7,R7\n         BNZ   NPRINT4\n         SPACE\n         L     R9,NSAVE9\n         BR    R9\n         SPACE\nNSAVE9   DS    F\n         EJECT\nPRINT    DS    0H\n         SMODE 24\n         ST    R9,PRINTS9\n         LH    R9,LINEC\n         LA    R9,1(R9)\n         CLI   LINE,C'0'\n         BNE   NOSKIP2\n         LA    R9,1(,R9)\nNOSKIP2  DS    0H\n         STH   R9,LINEC\n         CH    R9,=H'60'\n         BNH   NOHEAD\n         BAL   R9,PUTHEAD\nNOHEAD   DS    0H\n         PUT   SYSPRINT,LINE\n         MVI   LINE,C' '\n         MVC   LINE+1(132),LINE\n         SMODE 31\n         L     R9,PRINTS9\n         BR    R9\n         SPACE\nPRINTS9  DS    F\n         SPACE\nPUTHEAD  DS    0H\n         MVC   LINEC,=H'4'\n         PUT   SYSPRINT,HEAD1\n         MVI   LINE,C'0'\n         BR    R9\n         EJECT\nACTGEN1  ICHEACTN FIELD=USERID,MF=L\nACTGEN2  ICHEACTN FIELD=USERACS,MF=L\n         SPACE\nGENTAB   DS    0H\n         SPACE\n***********************************************************************\n* THIS TABLE CONTAINS THE NAMES OF ALL RACF GENERAL RESOURCE CLASSES  *\n* THAT ARE TO BE INCLUDED IN THE CROSS-REFERENCE REPORT.              *\n***********************************************************************\n         SPACE\n         DC    C'JESSPOOL'             JES\n         DC    C'TCICSTRN'             CICS TRANSACTION ENTRIES\n         DC    C'GCICSTRN'             CICS TRANSACTION GROUPS\n         DC    C'PCICSPSB'             CICS PSB ENTRIES\n         DC    C'QCICSPSB'             CICS PSB GROUPS\n         DC    C'PROGRAM '             PROGRAM PROTECTION\n         DC    C'APPL    '             APPLICATIONS\n         DC    C'FACILITY'             FACILITY CLASS\n         DC    C'SDSF    '             SDSF\n         DC    C'OPERCMDS'             OPERATOR COMMANDS\n         DC    C'SURROGAT'             SURROGAT USER\n         DC    X'FF'                   <-- END OF TABLE\n         SPACE\nSYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=(PM),LRECL=133,          X\n               BLKSIZE=133,RECFM=FA\n         SPACE\nACCTAB   DS    0H\n         DC    X'01',CL8'NONE'\n         DC    X'02',CL8'N/A'\n         DC    X'04',CL8'N/A'\n         DC    X'08',CL8'N/A'\n         DC    X'10',CL8'READ'\n         DC    X'20',CL8'UPDATE'\n         DC    X'40',CL8'CONTROL'\n         DC    X'80',CL8'ALTER'\n         DC    X'FF',CL8'OOPS'\n         SPACE\nHEAD1    DC    CL133'1RACFXREF - RACF RULE XREF AND CHECKER PROGRAM V1 X\n               (C) 1989 NUGGET SOFTWARE LIMITED'\nEMSG1    DC    C'IN ACCESS LIST, BUT DOES NOT EXIST,CLASS='\nLINE     DS    CL133\n         SPACE\nTREEADDR DS    F                       TREE STORAGE ADDRESS\nNEXTFREE DS    F                       ADDR OF NEXT SLOT\nTREEFIN  DS    F                       TREE STORAGE END ADDRESS\nRULENEXT DS    F                       RULE STORAGE (NEXT)\nRULEFRST DS    F                       RULE STORAGE (FIRST)\nRULEPTR  DS    F                       RULE STORAGE (CURRENT)\nRPNEXT   DS    F                       RULE POINTER (NEXT)\nWKAREA   DS    F                       ADDR OF WORK AREA STORAGE\nSTACK    DS    F                       ADDRESS OF RECURSION STACK\nACCPTR   DS    F                       ACCESS FLAG POINTER\nFIRSTNDE DC    F'0'\n         SPACE\nPARML    DS    H\nPARM     DS    CL8                     PARM STRING\n         SPACE\nBLDTYPE  DS    X                       TREE BUILD TYPE\n         SPACE\nLINEC    DS    H                       LINE COUNTER\n         SPACE\nUGAREA   DS    CL256\n         LTORG\n         SPACE\nUGENTRY  DSECT                         USER/GROUP TREE ENTRY\nUGTYPE   DS    X                       TYPE OF ENTRY\nUGUSER   EQU   X'80'                     '80' - USER\nUGGROUP  EQU   X'40'                     '40' - GROUP\nUGSPR1   DS    CL3                     SPARE\nUGNAME   DS    CL8                     USER/GROUP NAME\nUGLEFT   DS    A                       ADDR OF LEFT NODE\nUGRIGHT  DS    A                       ADDR OF RIGHT NODE\nUGRULE   DS    A                       ADDR OF USER RULES\nUGELEN   EQU   *-UGENTRY\n         SPACE\nRULET    DSECT\nRULECL   DS    CL8                     CLASS NAME\nRULETYP  DS    CL1                     RULE TYPE 'G' = GENERIC\nRULENM   DS    CL45                    RULE NAME\nRULETL   EQU   *-RULET\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ROPMONT": {"ttr": 2056, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00P\\x01\\x03\\x06o\\x01\\x03\\x06o\\x12\\x00\\x02\\xb5\\x02\\xb5\\x00\\x00\\xd5\\xe3\\xc8\\xd6\\xd4\\xc1\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-03-07T00:00:00", "modifydate": "2003-03-07T12:00:50", "lines": 693, "newlines": 693, "modlines": 0, "user": "NTHOMAS"}, "text": "         PRINT ON,NOGEN\nROPMONT  CSECT\n*---------------------------------------------------------------------*\n* ROPMONT                                                             *\n* -------    This program runs as a started task and monitors the     *\n*            status of selected tasks in the system. Alerts are       *\n*            generated when a task is not in the expected state.      *\n*                                                                     *\n*     Input: A list of tasks that are to be monitored is read from    *\n*            sysin. The first eight bytes of each 80 record contain   *\n*            the task name (the JOB or STC name). This list can be    *\n*            refreshed at any time by issuing a command. To avoid ENQ *\n*            problems, SYSIN should point to a member of a PDS.       *\n*                                                                     *\n*            A number of commands may be issued using modify to alter *\n*            the behaviour of this program.                           *\n*                                                                     *\n*    Output: Messages are written to the system console (both WTO     *\n*            and WTOR).                                               *\n*                                                                     *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE 1\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         SPACE 1\nMAXTASKS EQU   100                          Maximum number of tasks\n         EJECT\n*---------------------------------------------------------------------*\n*      Chain Save areas and set up base register                      *\n*---------------------------------------------------------------------*\n         SPACE 1\n         USING ROPMONT,R12\n         SAVE  (14,12)                      SAVE REGISTERS\n         LR    R12,R15                      LOAD BASE REGISTER\n         ST    R13,SAVEAREA+4               SET BACKWARD POINTER\n         LA    R2,SAVEAREA                  NEW SAVEAREA\n         ST    R2,8(,R13)                   FORWARD CHAIN\n         LR    R13,R2                       -> MY SAVE AREA\n         ST    R12,SAVEBASE                 Save base address\n         SPACE 1\n*---------------------------------------------------------------------*\n*      Read program parameters                                        *\n*---------------------------------------------------------------------*\n         SPACE 1\n         BAL   R9,RDPARMS                   Read and verify params\n         LTR   R15,R15                      Any Errors ?\n         BNZ   EXIT                         Yes, exit now\n         SPACE\n*---------------------------------------------------------------------*\n* Setup environment to allow us to process Stop and Modify commands   *\n*---------------------------------------------------------------------*\n         SPACE 1\n         EXTRACT COMAREA,FIELDS=(COMM)      Get address of Comm Area\n         SPACE\n         L     R4,COMAREA                   -> comm address list\n         L     R5,0(R4)                     Get Stop/Modify ECB address\n         ST    R5,ECBLIST                   Put in ECBLIST\n         SPACE\n         LA    R6,4(,R4)                    -> Address of CIB\n         L     R5,0(,R6)                    Get CIB address\n         LTR   R5,R5                        Is there a Start CIB ?\n         BZ    NOCIB                        no, skip delete\n         SPACE\n         QEDIT ORIGIN=(R6),BLOCK=(R5)       Delete the start CIB\n         SPACE 1\nNOCIB    DS    0H\n*---------------------------------------------------------------------*\n* Issue QEDIT to allow modify to be issued against this job. The      *\n* CIBCTR value specifies how many modifies can be outstanding before  *\n* the message 'modify rejected, task busy' is issued. If this program *\n* is to be driven by automation, the value of 1 should perhaps be     *\n* increased a tad                                                     *\n*---------------------------------------------------------------------*\n         SPACE\n         QEDIT ORIGIN=(R6),CIBCTR=1         Allow Modify to be issued\n         SPACE 1\n*---------------------------------------------------------------------*\n* Issue Stimer to request notification after the monitoring interval  *\n*---------------------------------------------------------------------*\n         SPACE 1\n         STIMER REAL,TIMEXIT,BINTVL=MONINT  Call TIMEXIT when time up\n         SPACE 1\n*---------------------------------------------------------------------*\n* Main line code - wait for an event                                  *\n*                                                                     *\n*   The event can be: 1 - A time interval has expired                 *\n*                     2 - A mofify or stop command has been issued    *\n*                     3 - The operator replied to our WTOR            *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE 1\nMAIN     DS    0H\n         WAIT  ECBLIST=ECBLIST,LONG=YES     Wait until an event occurs\n         SPACE\n         TM    TIMECB,X'40'                 Has Stimer fired ?\n         BO    INTERVAL                     Yes, go process\n         SPACE\n         TM    WTORECB,X'40'                Has WTOR been replied to ?\n         BO    WTORREP                      Yes, go process\n         SPACE\n*---------------------------------------------------------------------*\n* Stop or Modify has been issued                                      *\n*---------------------------------------------------------------------*\n         SPACE\n         L     R4,COMAREA                   -> Comm Area\n         LA    R6,4(,R4)                    -> CIB Address\n         L     R5,0(,R6)                    -> CIB\n         LTR   R5,R5                        Is CIB address present ?\n         BNZ   CHECKCIB                     Yes, go check it\n         ABEND 1,DUMP                       No Cib, Scream and shout !\n         SPACE\nCHECKCIB DS    0H\n         USING CIB,R5\n         CLI   CIBVERB,CIBMODFY             Is this a modify command ?\n         BE    MODIFY                       Yes, Go Process\n         SPACE 1\n*---------------------------------------------------------------------*\n*  Stop command issued - acknowledge and exit                         *\n*---------------------------------------------------------------------*\n         SPACE 1\n         LA    R1,1                         Message to display\n         BAL   R9,MSGOUT                    Display Ackowledgement\n         B     FINISH                       Go and terminate\n         SPACE 1\n*---------------------------------------------------------------------*\n*  Modify Command Issued - Process and delete CIB                     *\n*---------------------------------------------------------------------*\n         SPACE 1\nMODIFY   DS    0H\n         SPACE 1\n*---------------------------------------------------------------------*\n* Check the modify operand and process if valid:                      *\n*                                                                     *\n*     REFRESH           - reload the task table from SYSIN            *\n*     IGNORE,taskname   - Ignore the specified task until restarted   *\n*     IGNORE,ALL        - Ignore all tasks until restarted            *\n*     MONITOR,taskname  - Start monitoring a task again               *\n*     MONITOR,ALL       - Start monitoring all tasks                  *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE 1\n         LH    R7,CIBDATLN                  Get length of data\n         BCTR  R7,0                         -1 for execute\n         MVC   COMMAND,BLANKS               Clear from last time\n         EX    R7,ISOCMD                    Isolate Command\n         OC    COMMAND,BLANKS               Make it upper case\n         SPACE\n         CLC   COMMAND(8),=C'REFRESH '      Refresh required ?\n         BNE   TRYIGN                       No, try Ignore\n         SPACE\n         BAL   R9,RDPARMS                   Read in the new parms\n         LTR   R15,R15                      An error ?\n         BZ    REFOK                        No, carry on\n         BAL   R1,6                         Yes, tell operator\n         BAL   R9,MSGOUT\n         LA    R15,8                        Set RC=08\n         B     EXIT                         exit\n         SPACE\nREFOK    DS    0H\n         LA    R1,7\n         BAL   R9,MSGOUT                    Indicate refresh complete\n         B     MODEND                       End of modify\n         SPACE\nTRYIGN   DS    0H\n         CLC   COMMAND(7),=C'IGNORE,'       Is command Ignore\n         BNE   TRYMON                       No, try monitor\n*---------------------------------------------------------------------*\n* Set the ignore status for the specified task (or ALL)               *\n*---------------------------------------------------------------------*\n         SPACE\n         L     R2,TASKNUM                   Get number of tasks\n         L     R3,TASKTAB                   -> Task table\n         USING TASKENT,R3\nIGNORE   DS    0H\n         CLC   COMMAND+7(4),=C'ALL '        Ignore all specified ?\n         BNE   IGNORE2                      No, check task name\n         MVI   TASKSTAT,TASKIGN             Mark as ignore\n         B     IGNORE3\nIGNORE2  DS    0H\n         CLC   TASKNAME,COMMAND+7           Match on task name ?\n         BNE   IGNORE3                      No, Skip this one\n         MVI   TASKSTAT,TASKIGN             Yes, set ignore status\n         B     IGNORE4                      All done\nIGNORE3  DS    0H\n         LA    R3,TASKELEN(,R3)             -> Next entry\n         BCT   R2,IGNORE                    Try next task\n         SPACE\n         CLC   COMMAND+7(4),=C'ALL '        Was this ignore all ?\n         BE    IGNORE4                      yes, skip error\n         LA    R1,8                         No, task not found\n         BAL   R9,MSGOUT                    Tell operator\n         B     MODEND                       and finish modify routine\nIGNORE4  DS    0H\n         LA    R1,9\n         BAL   R9,MSGOUT                    Tell operator ignore done\n         B     MODEND                       End of modify processing\n         SPACE\nTRYMON   DS    0H\n         CLC   COMMAND(8),=C'MONITOR,'      Is command Monitor\n         BNE   MODERR                       No, error\n*---------------------------------------------------------------------*\n* Set the initial status for the specified task (or ALL)              *\n*---------------------------------------------------------------------*\n         SPACE\n         L     R2,TASKNUM                   Get number of tasks\n         L     R3,TASKTAB                   -> Task table\nMONIT    DS    0H\n         CLC   COMMAND+8(4),=C'ALL '        monitor all specified ?\n         BNE   MONIT2\n         MVI   TASKSTAT,TASKINIT            Mark as status INIT\n         B     MONIT3\nMONIT2   DS    0H\n         CLC   TASKNAME,COMMAND+8           Match on task name ?\n         BNE   MONIT3                       No, Skip this one\n         MVI   TASKSTAT,TASKINIT            Yes, set INIT status\n         B     MONIT4                       All done\nMONIT3   DS    0H\n         LA    R3,TASKELEN(,R3)             -> Next entry\n         BCT   R2,MONIT                     Try next task\n         SPACE\n         CLC   COMMAND+8(4),=C'ALL '        Was this monitor all ?\n         BE    MONIT4                       yes, skip error\n         LA    R1,10                        No, task not found then\n         BAL   R9,MSGOUT                    Tell the operator\n         B     MODEND                       End modify processing\nMONIT4   DS    0H\n         LA    R1,11                        Message No.\n         BAL   R9,MSGOUT                    Tell operator cmd complete\n         B     MODEND                       End modify processing\n         SPACE\n*---------------------------------------------------------------------*\n* Command not recognized - tell operator and ignore it                *\n*---------------------------------------------------------------------*\n         SPACE\nMODERR   DS    0H\n         LA    R1,12                        Select message no. 12\n         BAL   R9,MSGOUT                    Tell operator the bad news\n         SPACE\n*---------------------------------------------------------------------*\n* Delete the CIB (note this clears the ECB if it is the last CIB)     *\n*                (which it is because we set CIBCTR=1           )     *\n*---------------------------------------------------------------------*\nMODEND   DS    0H\n         QEDIT ORIGIN=(R6),BLOCK=(R5)       Delete the modify CIB\n         SPACE\n         B     MAIN                         Go wait for another event\n         SPACE 1\nISOCMD   MVC   COMMAND(0),CIBDATA           ** Executed Instruction **\n         EJECT\n*---------------------------------------------------------------------*\n* WTOR reply processing routine                                       *\n*                                                                     *\n*    The operator has replied to our WTOR (So at least someone is out *\n*    there). We will clear the status counts of all tasks so that the *\n*    WTOR will not be re-issued until the long delay is exceeded      *\n*    again.                                                           *\n*                                                                     *\n*---------------------------------------------------------------------*\nWTORREP  DS    0H\n         OI    ECBA2,X'80'                  Remove WTOR ECB from list\n         XC    ECBA3,ECBA3                  Zero the ECB address\n         XC    WTORECB,WTORECB              Zero the WTOR ECB\n         SPACE\n         L     R2,TASKNUM                   Get task entry count\n         L     R3,TASKTAB                   -> first table entry\n         USING TASKENT,R3\nCLRCOUNT DS    0H\n         XC    TASKCNT,TASKCNT              Clear the task count\n         LA    R3,TASKELEN(,R3)             -> Next task entry\n         BCT   R2,CLRCOUNT                  loop through all entries\n         B     MAIN                         Go wait for more work\n         DROP  R3\n         EJECT\n*---------------------------------------------------------------------*\n* Interval processing routine                                         *\n*---------------------------------------------------------------------*\nINTERVAL DS    0H\n*---------------------------------------------------------------------*\n* Step 1 - go through our task list and mark any active task as       *\n*          pending confirmation                                       *\n*---------------------------------------------------------------------*\n         SPACE\n         L     R2,TASKNUM                   Get task entry count\n         L     R3,TASKTAB                   -> first table entry\n         USING TASKENT,R3\nSETPEND  DS    0H\n         CLI   TASKSTAT,TASKACT             Is this task active ?\n         BNE   NEXTPEND                     No, skip it\n         MVI   TASKSTAT,TASKPEND            Yes, mark as pending\nNEXTPEND DS    0H\n         LA    R3,TASKELEN(,R3)             -> Next task entry\n         BCT   R2,SETPEND                   loop through all entries\n         SPACE 1\n*---------------------------------------------------------------------*\n* Step 2 - Go through the ASCB list and mark the status of each       *\n*          task in the task table                                     *\n*---------------------------------------------------------------------*\n         SPACE\n         L     R5,16                        -> CVT\n         USING CVT,R5\n         L     R6,CVTASVT                   -> ASCB Vector Table\n         USING ASVT,R6\n         L     R7,ASVTMAXU                  Get maximum ASCB count\n         LA    R6,ASVTENTY                  -> First entry\n         USING ASCB,R8\n         DROP  R5,R6\nASVTLOOP DS    0H\n         TM    0(R6),ASVTAVAL               Is this entry available ?\n         BO    ASVTNEXT                     Yes, skip it\n         L     R8,0(,R6)                    -> ASCB\n         L     R5,ASCBJBNS                  -> Job name\n*---------------------------------------------------------------------*\n* See if this task is in our task table                               *\n*---------------------------------------------------------------------*\n         L     R2,TASKNUM                   Get task entry count\n         L     R3,TASKTAB                   -> first table entry\nLOOKUP1  DS    0H\n*---------------------------------------------------------------------*\n* The following Ignore check is commented out. This causes the Ignore *\n* status of a task to be cleared when the task is restarted. If       *\n* this behaviour is not required, uncomment the next two lines.       *\n*---------------------------------------------------------------------*\n*        CLI   TASKSTAT,TASKIGN             In ignore status ?\n*        BE    LOOKUP2                      Yes, Do so\n         CLC   TASKNAME,0(R5)               Match on task name ?\n         BNE   LOOKUP2                      no, skip\n*---------------------------------------------------------------------*\n* Match found on task - mark as active                                *\n*---------------------------------------------------------------------*\n         MVI   TASKSTAT,TASKACT             Mark as active\n         XC    TASKCNT,TASKCNT              Zero State count\n         B     ASVTNEXT                     Go process next ASCB\nLOOKUP2  DS    0H\n         LA    R3,TASKELEN(,R3)             -> Next entry\n         BCT   R2,LOOKUP1                   Try the next entry\nASVTNEXT DS    0H\n         LA    R6,4(,R6)                    -> Next entry\n         BCT   R7,ASVTLOOP                  Process this one\n         SPACE 1\n         DROP  R8\n*---------------------------------------------------------------------*\n* Step 3 - Go through the task table looking for inactive tasks and   *\n*          process any that are found                                 *\n*---------------------------------------------------------------------*\n         SPACE 1\n         L     R2,TASKNUM                   Get task entry count\n         L     R3,TASKTAB                   -> first table entry\n         MVI   LONGDLY,C'N'                 Indicate no long delays\nTASKCHK  DS    0H\n         CLI   TASKSTAT,TASKIGN             Is task in Ignore Status ?\n         BE    TASKNEXT                     Yes, skip it\n         CLI   TASKSTAT,TASKACT             Is this task active ?\n         BE    TASKNEXT                     Yes, skip it\n         SPACE\n         CLI   TASKSTAT,TASKINIT            Is task in initial state ?\n         BNE   TASKCHK2                     No, must be down or pend\n         SPACE\n         L     R5,TASKCNT                   Get state count\n         LA    R5,1(,R5)                    Up by one\n         ST    R5,TASKCNT                   And tuck away\n         C     R5,MAXDELAY                  Waiting too long ?\n         BL    TASKCHK1                     No, Skip long delay set\n         MVI   LONGDLY,C'Y'                 Yes, indicate long delay\nTASKCHK1 DS    0H\n         SR    R4,R4                        Clear for Divide\n         D     R4,MAXINIT                   Divide to get remainder\n         LTR   R4,R4                        Waiting too long\n         BNZ   TASKNEXT                     No, skip this one\n         SPACE\n         LA    R1,2                         Message No.\n         BAL   R9,MSGOUT                    Write message out\n         B     TASKNEXT\n         SPACE\nTASKCHK2 DS    0H\n         CLI   TASKSTAT,TASKPEND            Is task pending ?\n         BNE   TASKCHK3                     No, it must be down\n         SPACE 1\n         LA    R1,3                         Message No.\n         BAL   R9,MSGOUT                    Write message out\n         XC    TASKCNT,TASKCNT              Clear State count\n         MVI   TASKSTAT,TASKDOWN            Set down status\n         B     TASKNEXT                     go process next entry\n         SPACE\nTASKCHK3 DS   0H\n         L     R5,TASKCNT                   Get state count\n         LA    R5,1(,R5)                    Up by one\n         ST    R5,TASKCNT                   And tuck away\n         C     R5,MAXDELAY                  Waiting too long ?\n         BL    TASKCHK4                     No, Skip long delay set\n         MVI   LONGDLY,C'Y'                 Yes, indicate long delay\nTASKCHK4 DS    0H\n         SR    R4,R4\n         D     R4,MAXINIT                   Get remainder\n         LTR   R4,R4                        Been inactive too long ?\n         BNZ   TASKNEXT                     No, skip this one\n         SPACE\n         LA    R1,4                         Message No.\n         BAL   R9,MSGOUT                    Write message out\n         SPACE\nTASKNEXT DS    0H\n         LA    R3,TASKELEN(,R3)             -> next task entry\n         BCT   R2,TASKCHK                   Go check it out\n         SPACE\n*---------------------------------------------------------------------*\n* If the long delay flag is set - issue a WTOR if not already done    *\n*---------------------------------------------------------------------*\n         SPACE\n         CLI   LONGDLY,C'Y'                 Is long delay flag set ?\n         BNE   CHECKDOM                     No, see if DOM required\n         SPACE\n         CLC   ECBA3,=F'0'                  Is WTOR already issued ?\n         BNE   RESTIM                       Yes, then skip it\n         SPACE\n         XC    WTORECB,WTORECB              Clear WTOR ECB\n         WTOR  'ROPM020A Required task(s) inactive for excessive time. X\n               Reply OK when resolved',REPLY,2,WTORECB\n         SPACE\n*---------------------------------------------------------------------*\n* Add the WTOR ECB to the wait list and save the message ID for DOM   *\n*---------------------------------------------------------------------*\n         ST    R1,WTORID                    Save message ID\n         LA    R1,WTORECB                   -> WTOR ECB\n         ST    R1,ECBA3                     Save in ECB list\n         OI    ECBA3,X'80'                  Set end of list\n         NI    ECBA2,X'7F'                  Turn off old end of list\n         B     RESTIM                       Go wait for an event\n         SPACE\nCHECKDOM DS    0H\n*---------------------------------------------------------------------*\n* If a WTOR has been issued - delete it and remove from ECB list      *\n*---------------------------------------------------------------------*\n         SPACE\n         CLC   ECBA3,=F'0'                  Is WTOR out there ?\n         BE    RESTIM                       No, then skip DOM\n         SPACE\n         L     R1,WTORID                    Get message ID\n         DOM   MSG=(R1)                     Delete it\n         XC    ECBA3,ECBA3                  Clear the ECB address\n         OI    ECBA2,X'80'                  Set new end-of-list\n         SPACE\n*---------------------------------------------------------------------*\n* Reissue the Stimer to get control in a tad                          *\n*---------------------------------------------------------------------*\nRESTIM   DS    0H\n         XC    TIMECB,TIMECB                Clear the Stimer ECB\n         STIMER REAL,TIMEXIT,BINTVL=MONINT  Reissue Stimer\n         B     MAIN                         Go wait for next event\n         SPACE 1\n*---------------------------------------------------------------------*\n*      TERMINATION ROUTINE                                            *\n*---------------------------------------------------------------------*\n         SPACE 1\nFINISH   DS    0H\n         SR    R15,R15\nEXIT     DS    0H\n         L     R13,4(,R13)                  RESTORE SAVE AREA  ADDRESS\n         L     R14,12(R13)                  RESTORE R14\n         LM    R0,R12,20(R13)               RESTORE R0 to R12\n         BR    R14                          RETURN BACK\n         EJECT\n*---------------------------------------------------------------------*\n*  Read Parameters and build task table                               *\n*---------------------------------------------------------------------*\n         SPACE 1\nRDPARMS  DS    0H\n         ST    R9,SAVER9                    Save our return address\n         OPEN  (SYSIN,(INPUT))              Open input file\n         LA    R8,SYSIN                     -> DCB\n         USING IHADCB,R8\n         TM    DCBOFLGS,DCBOFOPN            Did it open ?\n         BO    OPENOK                       Yes, continue\n         LA    R15,4                        No, set return code\n         BR    R9                           and exit\n         DROP  R8\n         SPACE\nOPENOK   DS    0H\n         ICM   R1,15,TASKTAB                Get table address\n         BNZ   STOROK                       Already got one\n         SPACE 1\n         STORAGE OBTAIN,                    Get Task Table Storage     x\n               LENGTH=TASKELEN*MAXTASKS,    Room for MAXTASKS tasks    x\n               COND=YES                     Don't abend if error\n         SPACE 1\n         LTR   R15,R15                      Storage obtain error ?\n         BZ    STOROK                       No, go fill table\n         LA    R1,4                         Message No.\n         BAL   R9,MSGOUT                    Tell operator the bad news\n         L     R9,SAVER9                    Restore return addr\n         BR    R9                           Return to caller\n         SPACE 1\nSTOROK   DS    0H\n         ST    R1,TASKTAB                   Save table address\n         LR    R3,R1                        Table address in R3\n         USING TASKENT,R3\n         SR    R2,R2                        Clear Task Count\n         SPACE 1\nRDLOOP   DS    0H\n         GET   SYSIN,CARD                   Read the next record\n         CLI   CARD,C'*'                    Is this a comment ?\n         BE    RDLOOP                       Yes, ignore it\n         C     R2,=AL4(MAXTASKS)            Table already full ?\n         BNL   TABFULL                      Yes, error\n         SPACE 1\n         MVC   TASKNAME,CARD                Move in the task name\n         MVI   TASKSTAT,X'00'               Clear the task status\n         XC    TASKCNT,TASKCNT              Clear task count value\n         LA    R3,TASKELEN(,R3)             -> Next entry\n         LA    R2,1(,R2)                    Up count of entries\n         B     RDLOOP                       Keep on trucking\n         SPACE\nEOD      DS    0H\n         CLOSE (SYSIN)                      Close input data set\n         SPACE 1\n         ST    R2,TASKNUM                   Save task count\n         BR    R9                           return to caller\n         DROP  R3\n         SPACE 1\nTABFULL  DS    0H\n         LA    R1,5                         Message No.\n         BAL   R9,MSGOUT                    Write message out\n         LA    R15,8                        Set RC=08\n         L     R9,SAVER9                    Restore return addr\n         BR    R9                           Return from whence we came\n         EJECT\n*---------------------------------------------------------------------*\n*  MSGOUT - Display a message to the operators                        *\n*           R1 = Message Number  R3 = Address of task entry (maybe)   *\n*---------------------------------------------------------------------*\n         SPACE 1\nMSGOUT   DS    0H\n         STM   R2,R9,MSGREGS                Save register R2 thru R9\n*\n* Message number to display is in R1\n*\n         LA    R2,MSGTAB                    -> Message table\n         BCTR  R1,0                         Subtract 1 to get offset\n         MH    R1,=AL2(MSGLEN)              Get byte offset\n         LA    R2,0(R1,R2)                  -> Message text\n         LA    R1,MSGLEN                    Get length of a message\n         BCTR  R1,0                         -1 for execute\n         EX    R1,MVMSG                     Isolate message text\n*---------------------------------------------------------------------*\n*  Scan the message for insertion points                              *\n*---------------------------------------------------------------------*\n         SPACE\n         USING TASKENT,R3\n         LA    R4,MSGTEXT                   -> Message text\n         LA    R5,MSGLEN                    Length of message\nILOOP    DS    0H\n         CLC   0(8,R4),=C'TTTTTTTT'         Task insertion point ?\n         BNE   ILOOP2                       No\n         MVC   0(8,R4),TASKNAME             Yes, move in task name\nILOOP2   DS    0H\n         LA    R4,1(,R4)                    -> Next position\n         BCT   R5,ILOOP                     Scan on\n*---------------------------------------------------------------------*\n*  Squeeze any multiple blanks out of the message text                *\n*---------------------------------------------------------------------*\n         SPACE\n         LA    R4,MSGTEXT                   -> Message to squeeze\n         LA    R5,MSGLEN                    Length to squeeze\nSQUEEZE  DS    0H\n         CLC   0(2,R4),=C'  '               Two blanks ?\n         BNE   SQUEEZE2                     Nope\n         MVC   0(MSGLEN,R4),1(R4)           Yes, remove one\n         BCTR  R5,0                         One less to scan now\n         LTR   R5,R5                        All done ?\n         BZ    SQUEEZE3                     Yes, go display\nSQUEEZE2 DS    0H\n         LA    R4,1(,R4)                    -> Next character\n         BCT   R5,SQUEEZE                   Squeeze some more\nSQUEEZE3 DS    0H\n         LA    R5,MSGLEN                    Max length of message\n         LA    R4,MSGTEXT+MSGLEN            -> Last byte + 1\n         BCTR  R4,0\nSQUEEZE4 DS    0H\n         CLI   0(R4),C' '                   End of message found ?\n         BNE   DOWTO                        Yes, Go issue\n         BCTR  R4,0                         Back up one byte\n         BCT   R5,SQUEEZE4                  Keep looking for the end\n         SPACE\nDOWTO    DS    0H\n         STH   R5,MSGLL                     Store message length\n         LA    R5,MSGLL                     -> Message len+text\n         WTO   TEXT=(R5)                    Write message to operator\n         LM    R2,R9,MSGREGS                Restore registers\n         BR    R9                           Return to caller\n         DROP  R3\n         SPACE\nMVMSG    MVC   MSGTEXT(0),0(R2)             ** Executed Instruction **\nMSGREGS  DS    8F\nMSGLL    DS    H\nMSGTEXT  DS    CL50\n         DC    CL50' '                      Must follow MSGTEXT !\n         EJECT\n         DROP  R12\n*---------------------------------------------------------------------*\n*  Stimer exit - post mainline                                        *\n*---------------------------------------------------------------------*\nTIMEXIT  DS    0H\n         USING TIMEXIT,R15\n         STM   R14,R2,12(R13)               Save the registers\n         L     R12,SAVEBASE                 Reload our Base address\n         DROP  R15\n         USING ROPMONT,R12\n         SPACE\n         POST  TIMECB                       Post mainline\n         SPACE\n         LM    R14,R12,12(R13)              Restore registers\n         BR    R14                          Get out of this place\n         DROP  R12\n         EJECT\n         LTORG\nMSGLEN   EQU   50\nMSGTAB   DS    0H\n         DC    CL50'ROPM001I Stop command acknowledged'\n         DC    CL50'ROPM002I Task TTTTTTTT is not yet active'\n         DC    CL50'ROPM003I Task TTTTTTTT is no longer avtive'\n         DC    CL50'ROPM004I Task TTTTTTTT is still inactive'\n         DC    CL50'ROPM005E Task table overflow'\n         DC    CL50'ROPM006E Refresh failed - terminating'\n         DC    CL50'ROPM007I Refresh complete'\n         DC    CL50'ROPM008E Ignore failed - task name not found'\n         DC    CL50'ROPM009I Ignore operation completed'\n         DC    CL50'ROPM010E Monitor failed - task name not found'\n         DC    CL50'ROPM011I Monitor operation completed'\n         DC    CL50'ROPM012E Modify command not recognized'\n         DC    CL50'ROPM013T Unable to obtain storage - terminating'\nSAVER9   DS    F                            R9 save area\nSAVEBASE DS    F                            Base address\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),LRECL=80,              X\n               RECFM=FB,EODAD=EOD\nCARD     DS    CL80\nCOMMAND  DS    CL60                         Modify command area\nBLANKS   DC    CL60' '\nSAVEAREA DC    18F'0'\n         SPACE 1\nMONINT   DC    F'6000'                      Monitor Interval - One Min\nMAXINIT  DC    F'5'                         Init status limit\nMAXDELAY DC    F'15'                        WTOR Delay value\n         SPACE 1\nECBLIST  DS    0F\nECBA1    DS    F                            Stop/Modify ECB Address\nECBA2    DC    X'80',AL3(TIMECB)            Stimer ECB address\nECBA3    DC    F'0'                         WTOR ecb address\n         SPACE 1\nWTORECB  DC    F'0'                         WTOR ECB\nTIMECB   DC    F'0'                         Stimer ECB\n         SPACE 1\nWTORID   DS    F                            WTOR Message ID\n         SPACE 1\nCOMAREA  DS    F                            Address of Comm Area\n         SPACE 1\nTASKTAB  DC    F'0'                         Task table address\nTASKNUM  DC    F'0'                         No. of task entries\n         SPACE\nLONGDLY  DC    C'N'                         Long Delay Flag (Y/N)\nREPLY    DS    CL2                          WTOR Reply area\n         SPACE\nTASKENT  DSECT\nTASKNAME DS    CL8                          Task Name\nTASKSTAT DS    XL1                          Task Status\nTASKINIT EQU   X'00'                        .. Task initial status\nTASKACT  EQU   X'01'                        .. Task is active\nTASKDOWN EQU   X'02'                        .. Task is inactive\nTASKPEND EQU   X'03'                        .. Task is Act/Pending\nTASKIGN  EQU   X'04'                        .. Task is in ignore state\nTASKSPAR DS    CL3\nTASKCNT  DS    F                            Task Count\nTASKELEN EQU   *-TASKNAME\n         DCBD  DSORG=(PS)\n         SPACE\nCIB      DSECT\n         IEZCIB\n         CVT   DSECT=YES\n         IHAASCB\n         IHAASVT\n         END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT616/FILE616.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT616", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}