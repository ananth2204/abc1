{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012311000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE539.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE539.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x03\\x08'", "DS1TRBAL": "b'X\\x96'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03\\xfb\\x00\\x06\\x03\\xfb\\x00\\t\\x00\\x04'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x014O\\x01\\x014O\\x102\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-12-10T00:00:00", "modifydate": "2001-12-10T10:32:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 440    FILE:  539\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT440.FILE539\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 8 MEMBERS COUNTED; CUMULATIVE SIZE IS 853 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   12/10/01    10:32:08    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$INFO": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x014?\\x01\\x014?#P\\x00\\x1b\\x00\\x1b\\x00\\x00\\xc8\\xe6\\xc8\\xc9\\xe3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-12-09T00:00:00", "modifydate": "2001-12-09T23:50:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "HWHITE"}, "text": "Subject: SAS-Based DSN Usage\nDate: Tue, 27 Nov 2001 12:22:03 -0500\nFrom: \"White, Hersch\" <WHITEH@citifinancial.com>\nTo: \"'sbgolob@attglobal.net'\" <sbgolob@attglobal.net>\n\nSam,\n\nThis is a mini-app for data center folk which I call \"DSNUSAGE:\nor Who Did What to This Data Set?\"  It reads raw SMF with SAS and\nlooks for all uses of a fully or partially qualified dsname.\nThen it lists all jobs/userids/system tasks that opened, renamed,\ndeleted, altered, cataloged or uncataloged that data set or sets.\n\nThat's just the program part.  The mini-app is to roll it out to\ncolleagues so they can do their own searches.  Two additional\nfiles accomplish this, a REXX exec and a Word document.\n\nAll three files are attached below, and I'll be happy to take\nquestions.\n\nHersch White\nwhiteh@citifinancial.com\n972-652-5071\n\n <<DSNUSAGE.SAS>>  <<DSNUSAGE.REX>>\n <<Who did What to this Data Set.doc>>\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$WHODUN": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x06\\x01\\x014?\\x01\\x014?#7\\x007\\x007\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-12-09T00:00:00", "modifydate": "2001-12-09T23:37:06", "lines": 55, "newlines": 55, "modlines": 0, "user": "SBGOLOB"}, "text": "Who did What to this Data Set?\n\nDSNUSAGE - a TSO command to help you find out.\n\nFunction:  \"DSNUSAGE dsname\" creates a job named useridDS in your\n      userid.JCL.CNTL library and puts you in EDIT for the job.\n      You then  type SUBMIT to start the job, after which you can\n      PF3 or type CANCEL to return from EDIT to whatever you were\n      doing before you entered the DSNUSAGE command.\n\nSpecifically, the job looks in SMF detail for the past seven days\nand as much of today as has been dumped so far.  It reports on\nanything that happened to the data set and gives the jobname or\nuser name that did it.  If you need to go back more than 7 days\nor have other questions, please see Hersch White for assistance.\n\nThe search is fairly fast, because it is all on disk, but if\nyou're the first one to use DSNUSAGE today, you may have a short\ndelay while back GDG's are being recalled.  I have never seen it\ntake more than 15 minutes.\n\nWhen the job finishes, you will have just the report (no JCL) in\nyour SDSF held output queue.  Here is a sample:\n\n ----   Sample is member $WHODUN1 in TSO XMIT format   ----\n\nThis sample shows the oldest generation being deleted as the\nnewest is added.  In the case of a GDG, the associations in the\nGDG base have to be updated also.   ALTER goes against the\ncatalog.  SCRATCH actually removes the data set from the disk\nvolume(s).\n\nExamples:  3 ways to invoke.  Full or partial dsname.  Syntax\nsimilar to ISPF/PDF 3.4, but the final \"*\" or \".*\" may be\nomitted.  Simplified search yields every data set whose name\nmatches up to the first asterisk or percent sign.  This can\ninclude more data sets than you are interested in if you use a\npartial dsname.\n\n    I.         Option 6:   DSNUSAGE D38HVW.C%%1.CLIST\n                           DSNUSAGE D38BP.SMF.*.G21%%V00\n                           DSNUSAGE CICP\n\n   II.     Command line:     TSO DSNUSAGE D38HVW.C*.*.*V00\n                             TSO DSNUSAGE D38AP.PDC.JCLLIB\n                             TSO DSNUSAGE D38AP.PDC.*LIB\n\n  III.  3.4 Line Command:     DSNUSAGE /\n- on line with desired dsname)\n- if the data set is no longer cataloged, 3.4 won't display\n\nThe command is a REXX EXEC and resides at\nSYS4.USER.PPCLIB(DSNUSAGE).\n\nCreated on 02/18/99 08:09 AM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$WHODUN@": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x01\\x014?\\x01\\x014?#E\\x01:\\x01:\\x00\\x00\\xe6\\xd6\\xd9\\xc4\\xf9\\xf7@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-12-09T00:00:00", "modifydate": "2001-12-09T23:45:12", "lines": 314, "newlines": 314, "modlines": 0, "user": "WORD97"}, "mimetype": "application/msword", "datatype": "binary", "extension": ".doc"}, "$WHODUN1": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00\\x00\\x01\\x014?\\x01\\x014?#A\\x00'\\x00'\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-12-09T00:00:00", "modifydate": "2001-12-09T23:41:00", "lines": 39, "newlines": 39, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "@FILE539": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x16\\x01\\x01\\x02_\\x01\\x014O\\x101\\x00 \\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2001-12-10T10:31:16", "lines": 32, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 539 is from Hersch White and contains a REXX exec and     *   FILE 539\n//*           a SAS procedure to directly read your SMF data, and   *   FILE 539\n//*           determine the recent history of datasets.             *   FILE 539\n//*                                                                 *   FILE 539\n//*           Hersch White                                          *   FILE 539\n//*           whiteh@citifinancial.com                              *   FILE 539\n//*           972-652-5071                                          *   FILE 539\n//*                                                                 *   FILE 539\n//*      This is a mini-app for data center folk which I call       *   FILE 539\n//*      \"DSNUSAGE:  or Who Did What to This Data Set?\"  It         *   FILE 539\n//*      reads raw SMF with SAS and looks for all uses of a         *   FILE 539\n//*      fully or partially qualified dsname.  Then it lists all    *   FILE 539\n//*      jobs/userids/system tasks that opened, renamed,            *   FILE 539\n//*      deleted, altered, cataloged or uncataloged that data       *   FILE 539\n//*      set or sets.                                               *   FILE 539\n//*                                                                 *   FILE 539\n//*      That's just the program part.  The mini-app is to roll     *   FILE 539\n//*      it out to colleagues so they can do their own searches.    *   FILE 539\n//*      Two additional files accomplish this, a REXX exec and a    *   FILE 539\n//*      Word document.                                             *   FILE 539\n//*                                                                 *   FILE 539\n//*      DSNUSAGE  -  REXX exec to invoke SAS program               *   FILE 539\n//*                                                                 *   FILE 539\n//*      DSNUSAGS  -  SAS program to read the SMF data              *   FILE 539\n//*                                                                 *   FILE 539\n//*      $WHODUN@  -  Word Document which is a manual               *   FILE 539\n//*                                                                 *   FILE 539\n//*      $WHODUN   -  Text (FB-80) equivalent of the Word           *   FILE 539\n//*                   document                                      *   FILE 539\n//*                                                                 *   FILE 539\n//*      $WHODUN1  -  Sample output, in XMIT format                 *   FILE 539\n//*                                                                 *   FILE 539\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNUSAGE": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00%\\x01\\x014?\\x01\\x014O\\x10$\\x00q\\x00q\\x00\\t\\xc8\\xe6\\xc8\\xc9\\xe3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-12-09T00:00:00", "modifydate": "2001-12-10T10:24:25", "lines": 113, "newlines": 113, "modlines": 9, "user": "HWHITE"}, "text": "/****REXX****/\n/*--------------------------------------------------------------------*/\n/* D38HVW.CCC1.SYSEXEC(DSNUSAGE)                                      */\n/*--------------------------------------------------------------------*/\n/* Examples:  3 ways to invoke.  Syntax similar to ISPF/PDF 3.4.      */\n/*                                                                    */\n/*    I.          Option 6:  DSNUSAGE D38HVW.C%%1.CLIST               */\n/*                           DSNUSAGE D38BP.SMF.*.G21%%V00            */\n/*                           DSNUSAGE CICP                            */\n/*                                                                    */\n/*   II.      Command line:  TSO DSNUSAGE D38HVW.C*.*.*V00            */\n/*                           TSO DSNUSAGE D38AP.PDC.JCLLIB            */\n/*                           TSO DSNUSAGE D38AP.PDC.*LIB              */\n/*                                                                    */\n/*  III.  3.4 Line Command:  DSNUSAGE /                               */\n/*                           (on line with desired dsname)            */\n/*                           - If not cataloged, 3.4 won't display    */\n/*                                                                    */\n/* NOTE:  Simplified search yields everything up to first asterisk or */\n/*        percent sign.  ISPF/PDF 3.4 is much more precise.           */\n/*                                                                    */\n/*                                                                    */\n/*--------------------------------------------------------------------*/\n/* ACCEPT ONE PARM - dsname                                           */\n/*                 - full or partial, like ISPF/PDF 3.4               */\n/*                 - with or without quotes (use / in 3.4)            */\n/* GENERATE JCL    - userid.JCL.CNTL(DSUS1111)                        */\n/*                 - one-step job useridDS, e.g. D38HVWDS             */\n/*                 - search DALYSRCH plus SMF.MAIN.HOUR to get all    */\n/*                   available data for the past week (3-15 minutes)  */\n/* SUBMIT JCL      - from PDF EDIT where this EXEC puts you           */\n/*                                                                    */\n/* If other time periods are desired, edit JCL or ask Hersch          */\n/* for help.                                                          */\n/*--------------------------------------------------------------------*/\n/* C0001774 - embrace n1, n2                               hw20010126 */\n/*--------------------------------------------------------------------*/\n/* TRACE ALL */\nuser = SYSVAR(SYSUID)\n\"ALLOC FI(JOBJCL) SHR REUSE DA('\"user\".JCL.CNTL(DSUS1111)'\"\nParse Upper arg dsname\nIf Substr(dsname,1,1)=\"'\" Then Do\n   lld=Length(dsname)\n   dsname=Substr(dsname,2,lld-2);\n   End\nusr=substr(user,1,6)\njclout.  = ''\nj=1\njclout.j=\"//\"usr\"DS JOB 38ZUTI,'LIST DSNAME USAGE',CLASS=S,REGION=0M,\"\nj=j+1\njclout.j=\"//      NOTIFY=\"user\",MSGCLASS=Z  SUPPRESS JCL AND MESSAGES\"\nj=j+1\njclout.j=\"//SAS001 EXEC SAS,WORK='500,20',TIME.SAS=1439,\"\nj=j+1\njclout.j=\"//*----------------------------------------------------------\"\nj=j+1\n jclout.j=\"//* INSERT DSN AS IN ISPF 3.4 BETWEEN THE QUOTES\"\nj=j+1\njclout.j=\"//*----------------------------------------------------------\"\nj=j+1\njclout.j=\"//* C0001774 - EMBRACE N1, N2                      HW20010126\"\nj=j+1\njclout.j=\"//*----------------------------------------------------------\"\n /*----------------------------------------------------------*/\n /* Dsname longer than 37 characters won't fit on first line */\n /*----------------------------------------------------------*/\nj=j+1\nIf Length(dsname) <= 37 Then Do\n    jclout.j=\"// OPTIONS='SYSPARM=''''\"dsname\"'''' ' \"\n   End\n   Else Do\n     jclout.j=\"//             OPTIONS='SYSPARM=''''\"\n     jclout.j=jclout.j||Substr(dsname,1,35)\"+\"\n   j=j+1\n     part2=Substr(dsname,36,Length(dsname)-35)\"'''' '\"\n     jclout.j=\"//             \"part2\n   End\nj=j+1\n jclout.j=\"//SASLOG  DD SYSOUT=*                   SUPPRESS PGM LISTING\"\nj=j+1\n jclout.j=\"//SASLIST DD SYSOUT=T   REPORT TO SDSF HELD QUEUE\"\nj=j+1\n jclout.j=\"//SMF     DD DISP=SHR,\"\nj=j+1\n jclout.j=\"//        DSN=D38BP.SMF.MAIN.DALYEXTR        LAST SEVEN DAYS\"\nj=j+1\n jclout.j=\"//        DD DISP=SHR,\"\nj=j+1\n jclout.j=\"//        DSN=D38BP.SMF.B1.HOUR                 TODAY SO FAR\"\nj=j+1\n jclout.j=\"//        DD DISP=SHR,\"\nj=j+1\n jclout.j=\"//        DSN=D38BP.SMF.B2.HOUR                 TODAY SO FAR\"\nj=j+1\n jclout.j=\"//        DD DISP=SHR,\"\nj=j+1\n jclout.j=\"//        DSN=D38BP.SMF.C1.HOUR                 TODAY SO FAR\"\nj=j+1\n jclout.j=\"//        DD DISP=SHR,\"\nj=j+1\n jclout.j=\"//        DSN=D38BP.SMF.N1.HOUR                 TODAY SO FAR\"\nj=j+1\n jclout.j=\"//        DD DISP=SHR,\"\nj=j+1\n jclout.j=\"//        DSN=D38BP.SMF.N2.HOUR                 TODAY SO FAR\"\nj=j+1\n jclout.j=\"//SYSIN   DD DISP=SHR,DSN=D38AP.PDC.SAMPLIB(DSNUSAGS)\"\nj=j+1\njclout.j=\"//*----------------------------------------------------------\"\n\"EXECIO * DISKW jobjcl   (STEM jclout.   FINIS\"\n\"ISPEXEC EDIT DATASET('\"user\".JCL.CNTL(DSUS1111)'\"\n EXIT\n/*-------------------------------------------------------------------*/\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DSNUSAGS": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x014?\\x01\\x014?#P\\x01\\x05\\x01\\x05\\x00\\x00\\xc8\\xe6\\xc8\\xc9\\xe3\\xc5@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-12-09T00:00:00", "modifydate": "2001-12-09T23:50:00", "lines": 261, "newlines": 261, "modlines": 0, "user": "HWHITE"}, "text": "*---------------------------------------------------------------------*;\n* SAS PROCEDURE TO PRINT DATA SET ACTIVITY                 HW19990216 *;\n*---------------------------------------------------------------------*;\n* ADD TYPE 18 - RENAME  (FROM-TO FOR EACH VOL OF MULTIVOL) HW20010827 *;\n*---------------------------------------------------------------------*;\nDATA F1   ;\nFORMAT DSNAME  DSNAME2  $44. DATE WEEKDATE19. TIME TIME8.\n       CATNAME MCATNAME $35. ACTION $18. JOBNAME $8. VOLSER $6. ;\nPREFIX   = SYSPARM();\nPREFIXL = LENGTH(PREFIX);\nISPLAT   = INDEX(PREFIX,'*');\nIPERCENT = INDEX(PREFIX,'%');\nIF (ISPLAT+IPERCENT) GT 0 THEN DO;\n        IF SUM(ISPLAT,IPERCENT) EQ MAX(ISPLAT,IPERCENT) THEN\n           PREFIX=SUBSTR(PREFIX,1,MAX(ISPLAT,IPERCENT)-1);\n   ELSE    PREFIX=SUBSTR(PREFIX,1,MIN(ISPLAT,IPERCENT)-1);\n   END;\n*---------------------------------------------------------------------*;\nINFILE SMF END=LAST;\nINPUT @02  ID            PIB1.\n      @03  SMFTIME  SMFSTAMP8. @;\nIF ID NOT IN( 14 /* OPEN FOR INPUT  X'0E' */\n              15 /* OPEN FOR OUTPUT X'0F' */\n              17 /* DASD SCRATCH    X'11' */\n              18 /* DASD RENAME     X'12' */\n              61 /* CATALOG         X'3D' */\n              62 /* VSAM OPEN       X'3E' */\n              64 /* VSAM CLOSE/EOV  X'40' */\n              65 /* UNCATALOG       X'41' */\n              66 /* ALTER           X'42' */\n              )\n   THEN DELETE;\nSELECT (ID);\n   WHEN (14) DO;\n      ACTION='INPUT';\n      INPUT @065 DSNAME $44. @ ;\n      LINK DSNCHEK;\n      INPUT @183 VOLSER  $6.   ;\n      END;\n   WHEN (15) DO;\n      ACTION='OUTPUT';\n      INPUT @65  DSNAME $44. @ ;\n      LINK DSNCHEK;\n      INPUT @183 VOLSER  $6.   ;\n      END;\n   WHEN (17) DO;\n      ACTION='SCRATCH';\n      INPUT @41  DSNAME $44. @ ;\n      LINK DSNCHEK;\n      INPUT @091 VOLSER  $6.   ;\n      END;\n   WHEN (18) DO;\n      ACTION='RENAME(FROM)';\n      INPUT @41  DSNAME $44. @85 DSNAME2 $44. @ ;\n      LINK DSNCHEK;\n      INPUT @135 VOLSER  $6.   ;\n      END;\n   WHEN (61) DO;\n      ACTION='CATALOG';\n      INPUT @117 DSNAME     $44.\n            @209 SMF61TYP    $1.  @ ;\n      LINK DSNCHEK;\n      INPUT @047 JOBNAME $8. @ ;     /* (MOST JOBNAMES ARE IN COL 15) */\n      SELECT (SMF61TYP);                    /* SMF61TYP - ENTRY TYPE  */\n         WHEN ('A') DO;                     /* C'A' NONVSAM DATA SET  */\n          ACTION='CATALOG NONVSAM   ';\n          INPUT @265 STORCLAS  $1. @ ;\n          IF STORCLAS='S' THEN INPUT @309 VOLSER $6.;  /*LOCAL: SC----*/\n                          ELSE INPUT @283 VOLSER $6.;  /* TAPE        */\n          END;\n         WHEN ('B') DO;                     /* C'B' GDG BASE          */\n          ACTION='CATALOG GDG BASE  '; VOLSER=' '; END;\n         WHEN ('C') DO;                     /* C'C' CLUSTER           */\n          ACTION='CATALOG VSAM      '; INPUT @362 VOLSER $6.; END;\n          /* IGNORING THE CASE WHERE THE INDEX IS ON A DIFFERENT VOL  */\n                                            /* C'D' DATA SET          */\n         WHEN ('G') DO;                     /* C'G' ALTERNATE INDEX   */\n          ACTION='CATALOG AIX       '; INPUT @376 VOLSER $6.; END;\n         /* COVERED IN TYPE A ABOVE */      /* C'H' ACTIVE GDS ENTRY  */\n         /* COVERED IN TYPE C ABOVE */      /* C'I' INDEX             */\n         WHEN ('M') DO;                     /* C'M' MASTER CATALOG    */\n          ACTION='CATALOG MAST CATLG'; VOLSER=' '; END;\n         WHEN ('P') DO;                     /* C'P' PAGE SPACE        */\n          ACTION='CATALOG PAGE SPACE'; VOLSER=' '; END;\n         WHEN ('R') DO;                     /* C'R' PATH              */\n          ACTION='CATALOG PATH      '; VOLSER=' '; END;\n                                            /* C'U' USER CATALOG      */\n         /* VVDS CREATION - INFREQUENT */   /* C'V' VOLUME            */\n         WHEN ('X') DO;                     /* C'X' ALIAS NAME        */\n          ACTION='CATALOG ALIAS NAME';\n          INPUT @266 CATNAME $ @072 MCATNAME $35.;\n          DSNAME=TRIM(DSNAME)||'-'||TRIM(MCATNAME)||'-'||TRIM(CATNAME);\n          VOLSER=' '; END;\n                                            /* C'Y' UPGRADE           */\n         OTHERWISE DELETE;\n         END;\n      END;\n   WHEN (62) DO;\n      ACTION='VSAMOPN';\n      INPUT @93  DSNAME $44. @ ;\n      LINK DSNCHEK;\n      INPUT @139 VOLSER  $6.   ;\n      END;\n   WHEN (64) DO;\n      ACTION='VSAMCLO';\n      INPUT @85  DSNAME $44. @ ;\n      LINK DSNCHEK;\n      INPUT @145 VOLSER          $6.\n            @039 SMF64RIN      PIB1.     /* FLAG BYTE */\n                                   /*  BIT  MEANING WHEN SET          */\n                                   /*                                 */\n                                   /*  0    COMPONENT CLOSED          */\n                                   /*  1    VOLUME SWITCHED           */\n                                   /*  2    NO SPACE AVAILABLE        */\n                                   /*  3    RECORD IS A CATALOG OR    */\n                                   /*       CRA RECORD                */\n                                   /*  4    COMPONENT CLOSED, TYPE=T  */\n                                   /*  5    RECORD WRITTEN DURING     */\n                                   /*       ABEND PROCESSING          */\n                                   /*  6    RECORD IS FOR A VVDS OR   */\n                                   /*       ICF CATALOG BEING OPENED  */\n                                   /*       OR CLOSED AS A DATA       */\n                                   /*       SET.(1)                   */\n                                   /*  7    RESERVED.                 */\n            ;\n         IF SMF64RIN='1.......'B THEN ACTION='VSAMCLO';\n         IF SMF64RIN='.1......'B THEN ACTION='VOLSWIT';\n         IF SMF64RIN='..1.....'B THEN ACTION='ENDXTNT';\n         IF SMF64RIN='...1....'B THEN ACTION='CATRECD';\n         IF SMF64RIN='....1...'B THEN ACTION='TCLOSED';\n         IF SMF64RIN='.....1..'B THEN ACTION='ABEND  ';\n         IF SMF64RIN='......1.'B THEN ACTION='CATDATA';\n         IF SMF64RIN='.......1'B THEN ACTION='62RESVD';  /* RESERVED */\n      END;\n   WHEN (65) DO;\n      ACTION='UNCATLG';\n      INPUT @117 DSNAME $44. @ ;\n      LINK DSNCHEK;\n      INPUT @047 JOBNAME $8.   ;     /* (MOST JOBNAMES ARE IN COL 15) */\n      VOLSER=' ';\n      END;\n   WHEN (66) DO;\n      ACTION='ALTER' ;\n      INPUT @117 DSNAME     $44.\n            @209 SMF66TYP    $1.  @ ;\n      LINK DSNCHEK;\n      INPUT @047 JOBNAME $8.   ;     /* (MOST JOBNAMES ARE IN COL 15) */\n      IF SMF66TYP='C' THEN ACTION='ALTER VSAM';\n ELSE IF SMF66TYP='A' THEN ACTION='ALTER NONVSAM';\n ELSE IF SMF66TYP='B' THEN ACTION='ALTER GDG BASE';\n      INPUT;                         * RELEASE TRAILING AT SIGN ( @ ) *;\n      VOLSER = ' ';\n      END;\n   OTHERWISE;\nEND;\n_ERROR_ = 0 ;\nOUTPUT;\nRETURN;\n*-------------- SUBROUTINES ------------------------------------------*;\nDSNCHEK:                                * FILTER UP TO FIRST WILDCARD *;\n   IF DSNAME NE: TRIM(PREFIX) THEN DELETE;\n   INPUT @15  JOBNAME         $8.\n         @11  SYSID           $4. @;\n   DATE=DATEPART(SMFTIME); TIME=TIMEPART(SMFTIME);\n   DOW=UPCASE(PUT(DATE,WEEKDATE3.));     * UPPER CASE DAY OF THE WEEK *;\n   RETURN;\n*=====================================================================*;\nRUN;\n*---------------------------------------------------------------------*;\nPROC SORT DATA=F1;\nBY DATE TIME;\n*---------------------------------------------------------------------*;\nOPTIONS NOCENTER ;\n*---------------------------------------------------------------------*;\nDATA _NULL_;\nSET F1;\nFILE SASLIST NOTITLE HEADER=PRTHEAD;           * WE DO OUR OWN TITLES *;\nRETAIN OLDDOW 'XXX' LINELEN 0 ;\nIF _N_ EQ 1 THEN DO;\n   OLDDOW=DOW;\n   LINELEN=1+3+1+10+1+11+1+8+1+18+1+6+1+44;   * 1 FOR ASA, EACH BLANK *;\n   END;\nIF OLDDOW NE DOW THEN DO;\n   PUT @001 ' '; OLDDOW=DOW; END;\nPUT @001 DOW          $3.       +01\n         DATE   YYMMDD10.       +01\n         TIME     TIME11.2      +01\n         JOBNAME      $8.       +01\n         ACTION      $18.       +01\n         VOLSER       $6.       +01\n         DSNAME      $44.       +01\n         ;\nIF ACTION EQ: 'RENAME' THEN DO;\n   ACTION='RENAME(TO)';\n   PUT @001 DOW          $3.       +01\n            DATE   YYMMDD10.       +01\n            TIME     TIME11.2      +01\n            JOBNAME      $8.       +01\n            ACTION      $18.       +01\n            VOLSER       $6.       +01\n            DSNAME2     $44.       +01\n            ;\n   END;\nRETURN;\n*---------------------------------------------------------------------*;\nPRTHEAD: PAGENO+1;\nPUT   @001 \"SMF SEARCH RESULTS FOR: &SYSPARM. \" +01\n      @(LINELEN-6-9-10-9-7) \"&SYSTIME.\"\n      @(LINELEN-6-9-10-9 ) \"&SYSDATE.\"\n      @(LINELEN-6-9-10 ) \"&SYSJOBID.\"\n      @(LINELEN-6-9   ) 'PAGE' +01 PAGENO Z4.\n   // @001 'DAY'                +01\n           '  DATE    '         +01\n           '   TIME    '        +01\n           'JOB/USER'           +01\n           '      ACTION      ' +01\n           'VOLSER'             +01\n           'DATA SET NAME'\n    / @001  3*'-'  +01\n           10*'-'  +01\n           11*'-'  +01\n            8*'-'  +01\n           18*'-'  +01\n            6*'-'  +01\n           44*'-' ;\n  RETURN;\n*---------------------------------------------------------------------*;\n* IF DATA SET F1 IS EMPTY, PUT OUT HEADERS AND A MESSAGE              *;\n*---------------------------------------------------------------------*;\nDATA _NULL_;\nIF 0 THEN SET F1 NOBS=COUNT;\nFILE SASLIST NOTITLE;\nIF COUNT=0 THEN DO;\n   PAGENO+1;\n   LINELEN=1+3+1+10+1+11+1+8+1+18+1+6+1+44;   * 1 FOR ASA, EACH BLANK *;\n   PUT   @001 \"SMF SEARCH RESULTS FOR: &SYSPARM. \" +01\n         @(LINELEN-6-9-10-9-7) \"&SYSTIME.\"\n         @(LINELEN-6-9-10-9 ) \"&SYSDATE.\"\n         @(LINELEN-6-9-10 ) \"&SYSJOBID.\"\n         @(LINELEN-6-9   ) 'PAGE' +01 PAGENO Z4. ;\n  PUT // @001 'DAY'                +01\n              '  DATE    '         +01\n              '   TIME    '        +01\n              'JOB/USER'           +01\n              '      ACTION      ' +01\n              'VOLSER'             +01\n              'DATA SET NAME'\n       / @001  3*'-'  +01\n              10*'-'  +01\n              11*'-'  +01\n               8*'-'  +01\n              18*'-'  +01\n               6*'-'  +01\n              44*'-' ;\n   PUT '***';\n   PUT \"*** NO ACCESSES FOUND FOR &SYSPARM. \";\n   PUT \"***    (CHECK SPELLING??)\";\n   PUT '***';\n   END;\n*---------------------------------------------------------------------*;\nRUN;\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT539/FILE539.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT539", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}