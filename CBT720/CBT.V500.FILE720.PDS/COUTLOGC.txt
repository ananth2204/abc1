********************************************************************
* AUTHOR - BILL SWEENEY                                            *
*     SSC, INC.                                                    *
*     WHSWEENEY@SSCMAINFRAME.COM                                   *
*     WWW.SSCMAINFRAME.COM                                         *
* DATE - (C) COPYRIGHT 2004                                        *
*                                                                  *
* DISCLAIMER - IT IS THE RESPONSIBILITY OF THE INIDIVIDUAL         *
*         TO VALIDATE THAT THIS SOFTWARE WILL NOT HARM YOUR        *
*         SYSTEM. INSTALL THIS SOFTWARE AT YOUR OWN RISK.          *
*         SSC, INC. IS NOT RESPONSIBLE FOR ANY PROBLEMS            *
*         CAUSED WHILE USING THIS SOFTWARE. GOOD LUCK.             *
*                                                                  *
* LINKAGE INFORMATION - AMODE 31                                   *
*                  RMODE 24                                        *
*                  NON-REENTRANT                                   *
*                  NOT APF AUTHORIZED                              *
*                                                                  *
* PROGRAM - PROGRAM TO CREATE TAPE MULTI-FILE GDGS                 *
* DESCRIPTION - THIS PROGRAM WILL READ THE GDG NAME OF THE LOGFILE *
*          DD STATEMENT, LOCATE THE PREVIOUS GDG, GET THE TAPE     *
*          VOLSER AND FILESEQ # OF THE PREVIOUS GDG AND UPDATE THE *
*          THE LOGFILE JFCB TO USE THE SAME TAPE AND NEXT FILESEQ# *
*          PROGRAM IS BEING USED TO OFFLOAD WEEKLY SYSLOG DATA AND *
*          CREATE MONTHLY GDGS FOR SMF.                            *
********************************************************************
COUTLOGC CSECT
         PRINT ON,NOGEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RC16     EQU   16
         B     72(R15)             BRANCH AROUND SAVE AREA
         DS    17F                 SAVE AREA
         STM   R14,R12,12(R13)     SAVE REGS
         ST    R13,4(R15)          CHAIN SAVE AREAS
         ST    R15,8(R13)          BACK CHAIN SAVE AREAS
         LR    R13,R15             LOAD BASE
         USING COUTLOGC,R13
         SPACE 1
         L     R3,0(R1)            GET ADDR OF PARMS
         LH    R5,0(R3)            GET LENGTH OF PARMS
         LTR   R5,R5               ARE THERE ANY PARMS
         BZ    OPENOKS             NO, THEN GO AROUND
         CH    R5,=H'3'            MAKE SURE NOT BIGGER THAN 3 DIGITS
         BNH   DECRR5              NO, THEN JUST GO AROUND
         WTO   'PARM FILE COUNT CANNOT EXCEED THREE DIGITS'
         MVI   RTCODE+3,X'10'      MOVE IN RC 16
         B     RETURN              AND QUIT
DECRR5   BCTR  R5,0                DECREMENT FOR EXECUTE FOR PACK L2
         LA    R4,1                GET LEGNTH OF 2 FOR PACK L1
         SLL   R5,28               SHIFT UP TO HALF BYTE POSITION
         SLDL  R4,4                THEN SHIFT INTO R4
         EX    R4,PACKIT           PACK DOUBLE+6(0),2(R3)
         CVB   R6,DOUBLE           CONVERT IT ALL TO BINARY
         STH   R6,FILECNT          AND SAVE FOR LATER COMPARE
OPENOKS  EQU   *
         SLR   R9,R9               CLEAR R9 FOR FILECOUNT
*******************************************************************
*  WE ARE GOING TO GET A BLOCK OF STORAGE BIG ENUF FOR OUR I/O,   *
* AND THEN WE ARE GOING TO GET THE FILESEQ # AND VOLSER OF THE    *
* GDG FILE TO BE USED.                                            *
*******************************************************************
         GETMAIN EC,LV=32760,A=STRADDR1
         LTR   R15,R15             HOPEFULLY WE GOT THE STORAGE
         BNZ   NOLOD15             NO, THEN QUIT AND USE THAT AS RC
SAVESTR  L     R11,STRADDR1        LOAD R11 WITH GETMAINED STORGE ADDR
         RDJFCB MF=(E,OPENLIST)
         LTR  R15,R15              CHECK IF GOOD READ
         BZ   GOODRDJF             IF, NOT THEN DEFAULT TO SCR FILE1
         ABEND 001,DUMP            JUST QUIT
GOODRDJF MVC  WORKDSN(44),JFCBAREA     MOVE IN THE DSNAME FOR LOCATE
         LA   R15,WORKDSN+43        POINT TO END OF DSNAME
         LA   R14,44                MAX LENGTH OF DSNAME
LOOP_WORKDSN  CLI 0(R15),C' '       LOOK FOR LAST CHARACTER
         BNE  GOT_DSNEND            IF NOT BLANK THEN FOUND IT
         BCTR R15,0                    DECR COUNT
         BCT  R14,LOOP_WORKDSN         LOOP THRU NAME
         B    BADDSN                   GO ABEND
GOT_DSNEND    SH  R15,=H'8'            SUBTRACT TO LOCATE GDG
         CLC  0(2,R15),=C'.G'          IS IT A VALID GDG
         BE   PACKDSN                  LOOKS GOOD THEN CONTINUE
BADDSN   ABEND 002,DUMP                JUST ABEND
PACKDSN  PACK DOUBLE(8),2(4,R15)       PACK THE GDG VALUE
         SP   DOUBLE(8),PACK1(1)       SUBTRACT ONE
         UNPK GDGVALUE(5),DOUBLE+5(3)  UNPACK IT
         OI   GDGVALUE+4,X'F0'         TURN ON SIGN BITS
         MVC  2(4,R15),GDGVALUE+1      MOVE IN THE DECRMENTED VALUE
         LOCATE BIGCAM
         LTR  R15,R15                  DOES THIS GDG EXIST
         BNZ  SCRATCH                  NO, THEN THE +1 IS FIRST GDG
         LH   R9,WORKFILE              STORE THE CURRENT FILE SEQ#
         CH   R9,FILECNT           COMPARE TO FILE COUNT LIMIT
         BNL  SCRATCH              IF GT OR EQ TO THEN JUST USE A SCR
         CLI  VOLCOUNT+1,X'01'       IS VOLUME COUNT GT 1
         BH   SCRATCH                  THEN USE A NEW SCRATCH
         MVC  VOLSER(6),WORKVOL        MOVE IN THE VOLSER
SCRATCH  EQU  *
         OPEN DISKFILE
         TM   DISKFILE+48,X'10'     WAS IT A GOOD OPEN
         BO   OKOPEN                YES, THEN KEEP GOING
         WTO  'UNABLE TO OPEN DISKFILE DDNAME'
         MVI  RTCODE+3,RC16         MOVE IN RETURN CODE 16
         B    RETURN                FORGET IT AND QUIT
OKOPEN   EQU  *
* SET THE OUTPUT DCB ATTRIBUTES FROM INPUT DISK FILE
         MVC  LOGFILE+62(2),DISKFILE+62           SET THE BLOCKSIZE
         MVC  LOGFILE+82(2),DISKFILE+82           AND THE LRECL
         MVC  LOGFILE+36(1),DISKFILE+36           AND THE RECFM
         CLI  VOLSER,C' '              DO WE WANT A SCRATCH FILE
         BE   OPENOUT                  YES, THEN DO NOT RESET JFCB
         CLI  DEVTYPE+2,X'20'          IS THIS A DASD DATASET
         BE   OPENOUT                  YES, THEN DO NOT RESET JFCB
**************************************************************
*  OPEN TYPE J WILL USE THE MODIFIED JFCB TO OPEN THE OUTPUT *
* FILE WITH THE TAPE VOLSER AND THE INCREMENTED FILE SEQUENCE*
* NUMBER.                                                    *
**************************************************************
GOODRDJ2 LA   R9,1(R9)             INCR TO NEXT FILESEQ #
         STH  R9,JFCBAREA+68           STORE THE CURRENT FILE SEQ#
         MVC  JFCBAREA+118(6),VOLSER        MOVE IN VOLSER
         OI   JFCBAREA+76,X'80'        FLAG FOR RE-WRITE OF JFCB
         OPEN TYPE=J,MF=(E,OPENLIST)
         B    CHKOUT              BR AROUND AND CHECK OPEN
OPENOUT  OPEN (LOGFILE,(OUTPUT))
CHKOUT   TM   LOGFILE+48,X'10'        GOOD OPEN ?
         BO   READNXT               HURRAY FOR OUR SIDE
         ABEND 003,DUMP
*******************************************************************
*  NEXT SECTION READS A BLOCK FROM THE DISK FILE, GETS THE PROPER *
* LENGTH AND WRITES IT TO TAPE FILE.                              *
*******************************************************************
READNXT  EQU  *
         READ DISKDECB,SF,DISKFILE,(11)
         CHECK DISKDECB
         LH   R4,DISKFILE+62            GET BLKSIZE
         L    R5,DISKDECB+16            IOB ADDR
         SH   R4,14(R5)                 LENGTH OF BLOCK READ
         LH   R3,LOGFILE+62         GET BLKSIZE IN CASE OF SHORT BLK
         STH  R4,LOGFILE+62          BLKSIZE OF BLK JUST READ
         OI    FLAG,X'01'            FLAG TO SAY AT LEAST READ 1 BLK
         WRITE OUTDECB,SF,LOGFILE,(11)
         CHECK OUTDECB
         STH   R3,LOGFILE+62         PUT BACK THE OLD BLKSIZE
         B    READNXT                LOOP TIL END OF FILE
EOFILE   CLOSE DISKFILE
         CLOSE (LOGFILE)
         FREEMAIN EC,LV=32760,A=STRADDR1
         TM    FLAG,X'01'            DID WE AT LEAST READ ONE BLK
         BZ    RETURN                NO, THEN JUST QUIT
****************************************************************
*  THE FOLLOWING TWO MACROS WILL OPEN THE FILE FOR OUTPUT, THUS*
*  RESETTING THE EOF MARKER TO THE BEGINNING OF THE FILE , OR  *
*  CLEARING IT. THE CLOSE JUST CLEANS IT ALL UP SO WE CAN GO   *
*  HOME.                                                       *
****************************************************************
         OPEN  (DISKFIL2,(OUTPUT))
         CLOSE DISKFIL2
RETURN   L     R15,RTCODE
NOLOD15  L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
        EJECT
DISKFILE DCB   DDNAME=DISKFILE,DSORG=PS,MACRF=R,                       X
               EODAD=EOFILE
DISKFIL2 DCB   DDNAME=DISKFILE,DSORG=PS,MACRF=W
LOGFILE  DCB   DDNAME=LOGFILE,DSORG=PS,MACRF=W,                        X
               EXLST=JFCBLIST
OPENLIST OPEN  (LOGFILE,(OUTPUT)),MF=L
JFCBLIST DS    0F
         DC    X'07'
         DC    AL3(JFCBAREA)
         DC    X'FF'
JFCBAREA DS    0F,176C
DOUBLE   DC    D'0'
STRADDR1 DC    F'0'
RTCODE   DC    F'0'
FILECNT  DC    H'52'
PACKIT   PACK  DOUBLE+6(0),2(0,R3)
BIGCAM   CAMLST NAME,WORKDSN,,WORKAREA
GDGVALUE DC    CL5' '
PACK1    DC    PL1'1'
VOLSER   DC    CL6' '
FLAG     DC    X'00'
         LTORG
WORKDSN  DC   CL44' '
         DS   0F
WORKAREA DC   256X'00'
         ORG  WORKAREA
VOLCOUNT DS   H
DEVTYPE  DS   4X
WORKVOL  DS   CL6
WORKFILE DS   H
         ORG
         END
