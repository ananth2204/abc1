********************************************************************    00003
* AUTHOR - BILL SWEENEY                                            *
*     SSC, INC.                                                    *
*     WHSWEENEY@SSCMAINFRAME.COM                                   *
*     WWW.SSCMAINFRAME.COM                                         *
* DATE - (C) COPYRIGHT 2004                                        *
*                                                                  *
* DISCLAIMER - IT IS THE RESPONSIBILITY OF THE INIDIVIDUAL         *
*         TO VALIDATE THAT THIS SOFTWARE WILL NOT HARM YOUR        *
*         SYSTEM. INSTALL THIS SOFTWARE AT YOUR OWN RISK.          *
*         SSC, INC. IS NOT RESPONSIBLE FOR ANY PROBLEMS            *
*         CAUSED WHILE USING THIS SOFTWARE. GOOD LUCK.             *
*                                                                  *
* LINKAGE INFORMATION - AMODE 24                                   *
*                  RMODE 24                                        *
*                  NON-REENTRANT                                   *
*                  NOT APF AUTHORIZED                              *
*                                                                  *
*   FUNCTION - STACK AS MANY TAPE FILES AS WILL FIT ON ONE TAPE    *    00007
*              FOR THE PURPOSE OF CONSOLIDATION AND SAVING ON TAPES*    00008
*                                                                  *    00009
*              PROGRAM EXPECTS THE INPUT FILES TO BEGIN AT DDNAME  *    00010
*              TPEIN001 AND TO INCREASE BY ONE (E.G. 002, 003)     *    00011
*              UNTIL A DDNAME IS NOT FOUND. THE OUTPUT FILE IS A   *    00012
*              SINGLE DD STATEMENT THAT SHOULD SPECIFY THE PROPER  *    00013
*              LABEL INFORMATION (E.G. LABEL=(1,SL,EXPDT=XXXXX)    *    00014
*              WHICH WILL BE USED FOR ALL FILES. PROGRAM WILL USE  *    00015
*              A MODIFIED JFCB TO SUPPLY THE RELATIVE OUTPUT       *    00016
*              DATASET NAME AND THE CORRECT FILE SEQUENCE NUMBER.  *    00017
*              PROGRAM USES A WAIT ON THE OUTPUT WRITE RATHER THAN *    00018
*              A CHECK MACRO SO IT CAN DETERMINE WHEN THE END OF   *    00019
*              VOLUME OCCURS. COPIED FILES WILL NEVER SPAN A VOLUME*    00020
*              BUT WILL BE STARTED ON A NEW VOLUME BY CLOSING      *    00021
*              EVERYTHING AND REQUESTING A SCRATCH.                *    00021
*                                                                  *    00022
*   FLAGS    - AT PRESENT THERE IS ONE FLAG BYTE THAT IS SET.      *    00023
*      FLAG  - X'80' -   SET WHEN AN END OF VOLUME OCCURS          *    00026
*      FLAG  - X'40' -   OUTPUT DATA SET NAMES SUPPLIED            *    00026
*                                                                  *    00042
*      REGISTERS -  R13 SAVEAREA AND FIRST BASE REG                *    00043
*                   R11 ADDRESS GETMAINED STORAGE FOR I/O          *    00045
*                   R10 USED FOR MAINTAINING BLOCK COUNTS          *    00045
*                   R9  USED FOR OUTPUT FILE SEQUENCING            *    00045
*                   R8  USED FOR DDNAME SEQUENCING                 *    00045
*                   R2-R7 WORK REGISTERS                           *    00045
********************************************************************    00046
TAPESTCK CSECT
         PRINT ON,GEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
FILE1IN  EQU    1
FILE1OUT EQU    2
EOV      EQU   X'80'
RC12     EQU   12
RC16     EQU   16
ECBNORM  EQU   X'7F'
ECBPERR  EQU   X'41'
******************************************************************
* NON-REENTRANT PROGRAM USING REG13 AS BOTH THE SAVEAREA POINTER *
* AND THE ONLY BASE REGISTER.                                    *
******************************************************************
         B     72(R15)             BRANCH AROUND SAVE AREA
         DS    17F                 SAVE AREA
         STM   R14,R12,12(R13)     SAVE REGS
         ST    R13,4(R15)          CHAIN SAVE AREAS
         ST    R15,8(R13)          BACK CHAIN SAVE AREAS
         LR    R13,R15             LOAD BASE
         USING TAPESTCK,R13
         LA   R9,1                     START OUT WITH 1,SL
         L    R3,0(R1)                 GET THE PARM ADDRESS
         LH   R5,0(R3)                 SEE IF ANYTHING THERE
         LTR  R5,R5
         BZ   GETSTOR                  NO, THEN DEFAULT TO FILE 1
         LA   R4,7                     PACK INTO 8 BYTE FIELD
         BCTR R5,0                     DECRMENT FOR EXECUTE
         SLL  R5,28                    SHIFT INTO HI-ORDER
         SLDL R4,4                     MOVE TOGETHER INTO LO-ORDER
         EX   R4,PACKIT                PACK  DOUBLE(0),2(R3)
         CVB  R9,DOUBLE                AND SET THE FILESEQ #
         SPACE 1
******************************************************
* ACQUIRE ENOUGH STORAGE TO READ ONE BLOCK OF DATA   *
* AND TO STORE OUTPUT DATA SETS IF SUPPLIED.         *
******************************************************
GETSTOR  EQU   *
         GETMAIN EC,LV=472760,A=STRADDR1
         LTR   R15,R15
         BZ    CHKOUTDS
         WTO   'UNABLE TO ACQUIRE STORAGE'
         MVI   RETCODE+3,RC16
         B     RETURN
******************************************************
* CHECK TO SEE IF OUTPUT DATA SET NAMES SUPPLIED     *
******************************************************
CHKOUTDS EQU   *
         OPEN  (OUTDSNS,,SYSPRINT,(OUTPUT))
         TM    SYSPRINT+48,X'10'
         BO    OPENOK1
         WTO   'UNABLE TO OPEN SYSPRINT DDNAME'
         MVI   RETCODE+3,RC16
         B     FREE_STORAGE
OPENOK1  TM    OUTDSNS+48,X'10'
         BZ    GETDATE                   IF OPEN FAILED THEN CONT.
         SLR   R6,R6                     CLEAR TO MAINTAIN COUNT
         L     R7,STRADDR1               GET STORAGE POINTER
         AH    R7,HW32760                INCREMENT PAST BLOCK READ
GETOUTDS GET   OUTDSNS
         MVC   0(44,R7),0(R1)            MOVE IN DSNAME
         LA    R6,1(R6)                  INCR COUNT
         LA    R7,44(R7)                 INCR STORAGE LOCATION
         B     GETOUTDS
EODOUTD  EQU   *
         CLOSE OUTDSNS
         LTR   R6,R6
         BZ    GETDATE
         OI    FLAG,X'40'                   SET FLAG FOR NAMES
         L     R7,STRADDR1               GET STORAGE POINTER
         AH    R7,HW32760                INCREMENT PAST BLOCK READ
*        B     OPENOKS                      AND GO AROUND CODE
******************************************************
* GET TODAYS JULIAN DATE FOR CA1 UPDATE CNTL CARDS.  *
******************************************************
GETDATE  EQU   *
         TIME  DEC
         ST    R1,DOUBLE+4
         ED    YEAR(3),DOUBLE+5
         ED    DAY(4),DOUBLE+6
         MVC   TMCEXPYR(2),YEAR+1
         MVC   TMCEXPDY(3),DAY+1
******************************************************************
* OPEN FILES REDEFINE (FOR BUILDING IDCAMS DELETE/DEFINE),       *
* UPDEXPDT (FOR BUILDING TMC UPDATE CONTROL CARDS) AND SYSPRINT  *
* (FOR INFORMATIONAL OUTPUT).                                    *
******************************************************************
OPENIDCM EQU   *
         OPEN  (REDEFINE,(OUTPUT),UPDEXPDT,(OUTPUT))
         TM    REDEFINE+48,X'10'         CHECK FOR GOOD OPEN
         BO    OPENOK2                   YES, THEN CONTINUE
         WTO   'UNABLE TO OPEN REDEFINE DDNAME'
         MVI   RETCODE+3,RC16
         B     FREE_STORAGE
OPENOK2  TM    UPDEXPDT+48,X'10'
         BO    OPENOKS
         WTO   'UNABLE TO OPEN UPDEXPDT DDNAME'
         MVI   RETCODE+3,RC16
         B     FREE_STORAGE
******************************************************************
* R11 ADDRESSES STORAGE FOR I/O. R9 AND R8 ARE SET TO FILE 1     *
* AND DDNAME TPEIN001 (1). DCB AND JFCB ARE RESET FOR SECOND AND *
* SUBSEQUENT FILES SO THAT THEY CAN BE REUSED.                   *
******************************************************************
OPENOKS  L     R11,STRADDR1        LOAD R11 WITH GETMAINED STORGE ADDR
         LA   R8,1                     AND DDNAME=TPEIN001
         B    OPENTAPE                 FIRST TIME THRU LEAVE ALONE
LOOPFIND EQU  *
NEXTFILE MVI  TAPEIN+48,X'02'          RESET OPEN FLAG
         XC   TAPEIN+62(2),TAPEIN+62        RESET BLKSIZE
         XC   TAPEIN+82(2),TAPEIN+82        RESET LRECL
         MVI  TAPEIN+36,X'00'               RESET RECFM
         CVD  R8,DOUBLE                PACK THE CURRENT FILESEQ #
         MVC  NEXTDDN+1(3),NEXTDDN_MASK
         UNPK NEXTDDN(4),DOUBLE+6(2)
         OI   NEXTDDN+3,X'F0'
         MVC  TAPEIN+45(3),NEXTDDN+1
OPENTAPE OPEN TAPEIN
OPENED   TM   TAPEIN+48,X'10'          GOOD OPEN ?
         BZ   FINISH_UP                NO, THEN WE ARE FINISHED
* GET THE CURRENT DSNAME, MOVE IT IN TO RELATIVE FIELDS
         RDJFCB (TAPEIN)
         MVC  DSNAME(44),JFCBAREA
         MVC  DEFDSN(44),JFCBAREA
         MVC  OUTRDSN(44),JFCBAREA
         MVC  OUTR_TAPEIN(6),JFCBAREA+118  MOVE IN THE VSN
         MVC  OUTFILE+62(2),TAPEIN+62             SET THE BLOCKSIZE
         MVC  OUTFILE+82(2),TAPEIN+82             AND THE LRECL
         MVC  OUTFILE+36(1),TAPEIN+36             AND THE RECFM
         CVD  R9,DOUBLE                PACK THE CURRENT FILESEQ #
         MVC  FILESEQ(4),FILESEQ_MASK
         ED   FILESEQ(4),DOUBLE+6
         MVC  OUTR_FILESEQ(3),FILESEQ+1
NEXTOUT  MVI  OUTFILE+48,X'02'        RESET OPEN FLAG
         RDJFCB MF=(E,OPENLST2)
         LTR  R15,R15
         BZ   GOODRDJ2
         ABEND 004,DUMP
GOODRDJ2 STH  R9,JFCBARE2+68           STORE THE CURRENT FILE SEQ#
         TM   FLAG,EOV                 WAS THERE AN END OF VOLUME
         BZ   NOT_PRIVAT
         MVC  JFCBARE2+118(6),PRIVAT   ACTUALLY BLANKS
         NI   FLAG,255-EOV
NOT_PRIVAT    EQU    *
         XC   JFCBARE2+102(2),JFCBARE2+102
         XC   JFCBARE2+104(2),JFCBARE2+104
         MVI  JFCBARE2+100,X'00'
         TM   FLAG,X'40'                 DID THEY SUPPLY OUTDSN
         BZ   MOVEFROM_JFCB
         LTR  R6,R6                      ARE THERE ANY MORE NAMES
         BZ   MOVEFROM_JFCB              IF EXHAUSTED USE FROM INPUT
         MVC  JFCBARE2(44),0(R7)         MOVE IN INPUT DSNAME
         MVC  DEFDSN(44),0(R7)           AND HERE FOR CATALOG
         LA   R7,44(R7)
         BCTR R6,0                       DECREMENT BY ONE
         LTR  R6,R6                      ARE THERE ANY MORE NAMES
         BNZ  SETJFCB_FLAG
         NI   FLAG,255-64                RESET FLAG
         B    SETJFCB_FLAG
MOVEFROM_JFCB EQU  *
         MVC  JFCBARE2(44),JFCBAREA      MOVE IN INPUT DSNAME
SETJFCB_FLAG  EQU  *
         OI   JFCBARE2+76,X'80'        FLAG FOR RE-WRITE OF JFCB
* THE TYPE=J AND MODE=31 KEYWORDS ARE MUTUALLY EXCLUSIVE SO THIS
* PROGRAM CANNOT BE CHANGED TO 31BIT
         OPEN TYPE=J,MF=(E,OPENLST2)
CHKOUT   TM   OUTFILE+48,X'10'        GOOD OPEN ?
         BO   GETOVSN
         ABEND 003,DUMP
GETOVSN  EQU  *
         RDJFCB (OUTFILE)                GET THE CURRENT INFORMATION
         MVC  DEFVSN(6),JFCBARE2+118     MOVE IN THE VOLUME SERIAL #
         MVC  OUTR_TAPEOUT(6),JFCBARE2+118  MOVE IN THE VSN
         SLR  R10,R10                    CLEAR R10 FOR BLOCK COUNT
READNXT  EQU  *
         LA   R12,TAPEDECB
*  LOOK TO PROCESS 64K BLOCKS OF DATA
         TM   TAPEIN+36,X'C0'          IS IT RECFM U
         BNO  PROCESS_LT32K            NO, THEN PROCESS SUPPLIED
         L    R4,FW65535               LOAD UP LENGTH OF 64K
         READ (12),SF,,(11),(4),MF=E
         CHECK TAPEDECB
         LH   R3,OUTFILE+62         GET BLKSIZE TO SAVE
         L    R5,TAPEDECB+16            IOB ADDR
         SLR  R2,R2
         ICM  R2,3,14(R5)              GET THE VALUE FROM IOBCSW
         SR   R4,R2
         LA   R12,OUTDECB
         WRITE (12),SF,,(11),(4),MF=E
         WAIT  ECB=OUTDECB
         B    CHECK_ECB
PROCESS_LT32K EQU  *
         READ (12),SF,,(11),MF=E
         CHECK TAPEDECB
         LH   R4,TAPEIN+62              GET BLKSIZE
         L    R5,TAPEDECB+16            IOB ADDR
         SH   R4,14(R5)
         LH   R3,OUTFILE+62         GET BLKSIZE IN CASE OF SHORT BLK
         STH  R4,OUTFILE+62          BLKSIZE OF BLK JUST READ
         LA   R12,OUTDECB
         WRITE (12),SF,,(11),MF=E
         WAIT  ECB=OUTDECB
CHECK_ECB      EQU  *
         CLI   OUTDECB,ECBNORM       NORMAL COMPLETION CODE
         BE    GOODWRIT              YES, THEN CONTINUE
         CLI   OUTDECB,ECBPERR       SEE IF PERMANENT ERROR
         BNE   IOERROR               NO, THEN JUST BLOW UP
         L     R2,OUTDECB+16         GET THE IOB ADDR
         USING IOBSTDRD,R2
         TM    IOBUSTAT,IOBUSB7      CHECK IT
         BO    VOLUME_DONE           YES, THEN GO CLEAN UP
         DROP  R2
IOERROR  WTO   'I/O ERROR OCCURRED WHILE WRITING BLOCK'
         DC    H'00'
GOODWRIT LA    R10,1(R10)            INCREMENT BLOCK COUNT
         STH   R3,OUTFILE+62         PUT BACK THE OLD BLKSIZE
         B    READNXT
EOFILE   CLOSE TAPEIN
         CLOSE (OUTFILE,LEAVE)
         TM    FLAG,X'40'            DID THEY SUPPLY DATA SET NAMES
         BO    WRITE_NO_DELETE       YES, THEN GO CATALOG
* WANT TO SEE HERE IF THE TAPE DATASET IS EVEN CATALOGED
DO_LOCATE EQU  *
         LOCATE BIGCAM
         LTR  R15,R15
         BNZ  EXPIREIT             NOT CATALOGED, THEN GO AROUND
CHCKVOLS CLC  OUTR_TAPEIN(6),WORKAREA+6        CATALOGED TO SAME VOL
         BE   WRITEIT                          YES, THEN USE IDCAMS
         MVC  NOTCAT_DSN(44),DSNAME            NO, THEN BUILD MSG
         MVC  NOTCAT_VSN(6),OUTR_TAPEIN
         MVC  CAT_VSN(6),WORKAREA+6            AND TELL USER
         PUT  SYSPRINT,NOTCATLG
         B    EXPIREIT
WRITEIT  EQU  *
         PUT  REDEFINE,IDCAMS_DELETE
WRITE_NO_DELETE  EQU  *
         PUT  REDEFINE,IDCAMS_DEFINE1
         PUT  REDEFINE,IDCAMS_DEFINE2
         TM    FLAG,X'40'            DID THEY SUPPLY DATA SET NAMES
         BO   INCRREG9                     YES, THEN DO NOT EXPIRE
EXPIREIT CLC  TMCVSN(6),OUTR_TAPEIN        SEE IF WE HAVE ALREADY DONE
         BE   INCRREG9                     YES, THEN DO NOT REDO
         MVC  TMCVSN(6),OUTR_TAPEIN        MOVE IN VOLSER TO EXPIRE
         PUT  UPDEXPDT,TMC_UPDATE1
         PUT  UPDEXPDT,TMC_UPDATE2
INCRREG9 LA   R9,1(R9)
         LA   R8,1(R8)
         MVC  OUTR_BLKCNT(8),BLKCNT_MASK
         CVD  R10,DOUBLE
         ED   OUTR_BLKCNT(8),DOUBLE+4
         PUT  SYSPRINT,OUTRECD
         B    LOOPFIND
VOLUME_DONE   EQU    *
         BCTR R10,0                         DECREMENT THE BLOCK COUNT
         STCM R10,3,BKSPC+6
BKSPC    CNTRL OUTFILE,BSR,0
         CLOSE (TAPEIN,,OUTFILE)
         PUT  SYSPRINT,EOVRECD
         LA   R9,1                          RESET THE FILESEQ TO 1
         OI   FLAG,EOV
         B    LOOPFIND
FINISH_UP     EQU    *
         CLOSE (REDEFINE,,UPDEXPDT,,SYSPRINT)
FREE_STORAGE  EQU  *
         FREEMAIN EC,LV=472760,A=STRADDR1
RETURN   L     R15,RETCODE
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
************************************************************
* NEXT IS THE BLOCK COUNT EXIT THAT SAYS IGNORE IF BAD     *
************************************************************
IGNBLK   LA    R15,4          IGNORE ERROR BLOCK COUNT
         BR    R14
        EJECT
TAPEIN   DCB   DDNAME=TPEIN001,DSORG=PS,MACRF=R,                       X
               EODAD=EOFILE,EXLST=JFCBLIST
OUTFILE  DCB   DDNAME=OUTFILE,DSORG=PS,MACRF=WC,                       X
               RECFM=FB,EXLST=EXITLIST
OUTDSNS  DCB   DDNAME=OUTDSNS,DSORG=PS,MACRF=GL,EODAD=EODOUTD
REDEFINE DCB   DDNAME=REDEFINE,DSORG=PS,MACRF=PM,LRECL=80
UPDEXPDT DCB   DDNAME=UPDEXPDT,DSORG=PS,MACRF=PM,LRECL=80
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=PM,LRECL=133
OPENLST2 OPEN  (OUTFILE,(OUTPUT,LEAVE)),MF=L
         READ  TAPEDECB,SF,TAPEIN,MF=L
         WRITE OUTDECB,SF,OUTFILE,MF=L
RETCODE  DC    F'0'
JFCBLIST DS    0F
         DC    X'87'
         DC    AL3(JFCBAREA)
EXITLIST DS    0F
         DC    X'07'
         DC    AL3(JFCBARE2)
         DC    X'8B'
         DC    AL3(IGNBLK)
DOUBLE   DC    D'00'
PACKIT   PACK  DOUBLE(0),2(0,R3)
YEAR     DC    X'F02120'
DAY      DC    X'F0212020'
JFCBAREA DS    0F,176C
JFCBARE2 DS    0F,176C
STRADDR1 DC    F'0'
FW65535  DC    F'65535'
BIGCAM   CAMLST NAME,DSNAME,,WORKAREA
PRIVAT   DC    CL6' '         MAKE IT BLANKS
HW32760  DC    H'32760'
FLAG     DC    X'00'
NEXTDDN_MASK   DC   X'212020'
FILESEQ_MASK   DC   X'40202120'
BLKCNT_MASK    DC   X'4020202020202120'
NEXTDDN        DC   CL4'0000'
IDCAMS_DELETE  DS   0CL80
         DC    CL8' DELETE '
DSNAME   DC    CL44' '
         DC    CL28' NSCR'
IDCAMS_DEFINE1 DS   0CL80
         DC    CL19' DEFINE NVSAM(NAME('
DEFDSN   DC    CL44' '
         DC    CL17') -'
IDCAMS_DEFINE2 DS   0CL80
         DC    CL8' VOLUME('
DEFVSN   DC    CL6' '
         DC    CL22')  DEVT(3590-1) FSEQN('
FILESEQ  DC    CL4' '
         DC    CL40')) '
TMC_UPDATE1    DS   0CL80
         DC    CL4'VOL '
TMCVSN   DC    CL6' '
         DC    CL70',NODSN '
TMC_UPDATE2    DS   0CL80
         DC    CL4'REP '
         DC    CL8'EXPDT=20'
TMCEXPYR DC    CL2' '
         DC    C'/'
TMCEXPDY DC    CL65' '
OUTRECD  DS    0CL133
               DC    CL8'0 DSN - '
OUTRDSN        DC    CL45' '
               DC    CL9'TAPEIN - '
OUTR_TAPEIN    DC    CL7' '
               DC    CL10'TAPEOUT - '
OUTR_TAPEOUT   DC    CL7' '
               DC    CL12'FILESEQ # - '
OUTR_FILESEQ   DC    CL4' '
               DC    CL13'BLOCK COUNT -'
OUTR_BLKCNT    DC    CL18' '
EOVRECD        DC    CL133'0 END OF VOLUME CAUSED DURING THE FOLLOWING +
               DATASET. NEW VOLUME WAS MOUNTED.'
NOTCATLG       DS    0CL133
               DC    CL8'0 DSN - '
NOTCAT_DSN     DC    CL45' '
               DC    CL24'NOT CATALOGED ON VOLUME-'
NOTCAT_VSN     DC    CL6' '
               DC    CL22'; CATALOGED ON VOLUME-'
CAT_VSN        DC    CL28' '
         LTORG
WORKAREA DC    265X'00'
         IEZIOB DSECT=YES
         END
