    TITLE 'CATCLEAN - ICF CATALOG AND DASD CLEANUP PROGRAM'
*********************************************************************
* AUTHOR - BILL SWEENEY                                             *
*     SSC, INC.                                                     *
*     WHSWEENEY@SSCMAINFRAME.COM                                    *
*     WWW.SSCMAINFRAME.COM                                          *
* DATE - (C) COPYRIGHT 2004                                         *
*                                                                   *
*                                                                   *
* DISCLAIMER - IT IS THE RESPONSIBILITY OF THE INIDIVIDUAL          *
*         TO VALIDATE THAT THIS SOFTWARE WILL NOT HARM YOUR         *
*         SYSTEM. INSTALL THIS SOFTWARE AT YOUR OWN RISK.           *
*         SSC, INC. IS NOT RESPONSIBLE FOR ANY PROBLEMS             *
*         CAUSED WHILE USING THIS SOFTWARE. GOOD LUCK.              *
*                                                                   *
* LINKAGE INFORMATION - AMODE 24                                    *
*                  RMODE 24                                         *
*                  NON-REENTRANT                                    *
*                  *** APF AUTHORIZED ***                           *
*                                                                   *
*  The best reason for the way this program was written this way    *
*  is that my boss let me do it. It was an excellent learning       *
*  experience and he was a great boss. Thanks Rocky.                *
*                                                                   *
*  Description - This program is included only as an example of     *
*                the following system functions, to include:        *
*                access an ICF Catalog as a VSAM KSDS, perform      *
*                Catalog functions using SVC 26, and reading DASD   *
*                VTOCs using EXCP (up to 3380 DASD).                *
*                Program was written in late 1980s on MVS/SP        *
*                *** If anyone is interested in actually getting  ***
*                *** this to work on OS/390 I do still have the   ***
*                *** binary search routines and I will assist with***
*                *** the EXCP for 3390 device architecture.       ***
*                *** Better off using Catalog Search Interface    ***
*                                                                   *
*********************************************************************
******************************************************************
*  HELLO KIDS. THIS IS A LENGTHY AND VERY BORING DESCRIPTION OF  *
* WHAT THIS VERY SIMPLE PROGRAM DOES. THE BASIC THEME IS FINDING *
* DATASETS THAT ARE CATALOGED, BUT DO NOT EXIST ON THE VOLUME    *
* SPECIFIED. AN ADDED ATTRACTION IS LISTING OF DATASETS THAT ARE *
* ON THE VOLUMES, BUT ARE NOT CATALOGED. THIRD, ALIAS ENTRIES    *
* FOR OTHER NONVSAM DATASETS ARE VERIFIED. FOR HIGH LEVEL INDEXES*
* IN THE MASTER CATALOG, WE WILL COMPARE THEM TO OUR USERLIST    *
* DATASET, AND IF NOT THERE ARE DELETED.                         *
*  LET'S DISCUSS METHOD NOW. BINARY SEARCH ROUTINES WILL BE USED *
* TO CREATE TABLES FOR THE USERLIST, NONVSAM CATALOG RECORDS,    *
* ALIAS CATALOG RECORDS FOR OTHER NONVSAM RECORDS, AND INDIVIDUAL*
* VTOC TABLES. SYNCHRONIZED COMPARISON WILL BE DONE WITH THE LAST*
* VTOC AND NONVSAM TABLES, AND WHEN APPROPRIATE, CATALOG ENTRIES *
* WILL BE UNCATALOGED. INPUT TO TABLES WILL BE GOTTEN BY READING *
* THE MASTER CATALOG, AND ALL THE USER CATALOGS WITH ALIAS       *
* POINTERS. ***** STEPCAT ******* MUST BE USED FOR EVERY CATALOG *
* WE HAVE ON THE SYSTEM OR ELSE OPEN PROCESSING WILL FAIL.       *
* DD STATEMENTS ARE NOT REQUIRED BECAUSE CATALOGS WILL BE        *
* DYNAMICALLY ALLOCATED WHEN THEY ARE NEEDED. WHEN READING THE   *
* CATALOGS, ENTRIES THAT PASS CHECKING WILL BE STORED IN THE     *
* APPROPRIATE BINARY SEARCH TABLE. WHEN ALL THE CATALOGS HAVE    *
* BEEN READ WE WILL READ ALL THE VTOCS THAT ARE REFERENCED USING *
* EXCP.                                                          *
*  DO BE AWARE PLEASE THAT ALL DYNAMIC ALLOCATIONS OCCUR WITH    *
* FREE=CLOSE, SO DO NOT ATTEMPT TO REOPEN A FILE WITHOUT RE-     *
* ALLOCATING.                                                    *
******************************************************************
CATCLEAN CSECT
         PRINT ON,NOGEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         B     72(R15)             BRANCH AROUND SAVE AREA
         DS    17F                 SAVE AREA
         STM   R14,R12,12(R13)     SAVE REGS
         ST    R13,4(R15)          CHAIN SAVE AREAS
         ST    R15,8(R13)          BACK CHAIN SAVE AREAS
         LR    R13,R15             LOAD BASE
         LA    R12,2048(R13)       LOAD SECOND BASE
         LA    R12,2048(R12)       GET 1 PAGE PAST FIRST
         USING CATCLEAN,R13,R12
         SPACE 1
         L     R4,0(R1)            GET ADDR OF PARMS
         ST    R4,PARMADDR         SAVE THE ADDRESS FOR EASY AVAILABL.
         LH    R3,0(R4)            GET LENGTH OF PARMS
         LTR   R3,R3               SEE IF ANY PARMS AVAILABLE
         BZ    PARMDONE            NO, THEN WE WILL NOT UNCATALOG
         L     R10,ADOPARMS        ADDR TO PROCESS PARM SECTION
         BALR  R14,R10             GO PROCESS
         SPACE 2
PARMDONE OPEN  (SYSPRIN1,(OUTPUT),SYSPRIN2,(OUTPUT))
OPENOKU  TM    SYSPRIN1+48,X'10'    ANOTHER GOOD OPEN
         BO    OPENOKS              WE SURE HOPE SO BOYS AND GIRLS
         ABEND 001,DUMP
OPENOKS  TM    SYSPRIN2+48,X'10'      HOW ABOUT THIS ONE
         BO    READUSER             HOORAY FOR OUR SIDE
         ABEND 001,DUMP
READUSER L     R10,ADOUSERL
         BALR  R14,R10
         EJECT
******************************************************************
*  IN THIS LITTLE SECTION WE'RE ACCESSING THE CVT FOR THE SYSRES *
*  VOLSER, THE ADDRESS OF THE JSCB FOR AUTHORIZATION SETTING FOR *
*  READING AN ICF CATALOG, AND LASTLY THE NAME OF THE MASTER CAT *
*  IN THE CAXWA CHAIN. THE MODESET IS TO SET THE AUTHORIZATION   *
*  BIT IN THE JSCB, BECAUSE WITHOUT YOU CANNOT READ A CATALOG AS *
*  A VSAM DATASET.                                               *
******************************************************************
SETJSCB  EQU   *
         L     R11,16                  ADDR OF CVT
         UNPK  TEMPDSN+3(5),57(3,R11)  GET DATE FOR TEMPORARY DSNS
         OI    TEMPDSN+7,X'F0'         FOR A DSN OF SYSYYDDD
         L     R10,48(R11)             ADDR OF SYSRES UCB
         MVC   SYSRES(6),28(R10)       MOVE IN SYSRES VOLSER
         L     R10,0(R11)              ADDR OF TCB
         L     R10,4(R10)              ADDR OF ACTIVE TCB
         L     R10,180(R10)             ADDR OF JSCB
         MODESET KEY=ZERO,MODE=SUP
         OI    243(R10),X'80'        SECURITY BIT FOR READING ICFS
         MODESET KEY=NZERO,MODE=PROB
         L     R11,256(R11)            AMCB IN CVT
         L     R11,20(R11)             CAXWA CHAIN
LOOPCAX  TM    8(R11),X'04'            IS IT THE MASTER CATALOG
         BO    GOTMSTRC                YES, THEN CONTINUE
         L     R11,4(R11)              GET NEXT CAT ADDRESS
         LTR   R11,R11                 END OF TABLE
         BNZ   LOOPCAX                 CHECK NEXT
         ABEND 004,DUMP
GOTMSTRC MVC   CATDSN(44),52(R11)      MOVE IN MSTR CAT NAME SVC 99
         MVC   MSTRCAT(44),52(R11)     MOVE IN MSTR CAT TO SAVE
         EJECT
*******************************************************************
*  THIS GETMAIN IS FOR 53 DSCBS PER TRK ON A 3380 AT A LENGTH OF  *
*  140 BYTES APIECE, FOR 40 USERCATALOG ENTRIES AT 45 BYTES, AND  *
*  A 10240 BYTE BUFFERSPACE FOR READING ICF CATALOGS.             *
*******************************************************************
         GETMAIN EU,LV=19460,A=STRADDR1
         L     R11,STRADDR1        LOAD R11 WITH GETMAINED STORGE ADDR
         L     R1,=F'7420'         LENGTH OF 53 DSCBS
         LA    R10,0(R1,R11)       INCREMENT PAST THAT STORAGE
         ST    R10,UCATADDR        POINTER FOR UCAT STORAGE AREA
         ST    R10,UCATPNTR        POINTER FOR UCAT THAT WON'T CHANGE
         LA    R1,1800             LENGTH OF 40 USERCATS
         LA    R10,0(R1,R10)       INCREMENT PAST THAT STORAGE
         ST    R10,RECADDR         POINTER FOR VSAM BUFFER STORAGE
         ST    R10,GETRPL+32       CHANGE ADDRESS IN RPL MACRO AS WELL
*******************************************************************
*  INITIALIZE THE CCWS WITH THE STORAGE LOCATIONS FROM THE        *
*  BEGINNING OF GETMAINED STORAGE                                 *
*******************************************************************
         LA    R10,READCCW         POINT TO BEGIN OF CCWS TO INITIAL.
         LA    R8,8                SIZE OF CCW
         LA    R9,ENDCCWS          END OF READ CCWS
LOOPINIT STCM  R11,7,1(R10)        STORE THE VIRTUAL ADDRESS
         LA    R11,140(R11)        INCR BY DSCB SIZE
         BXLE  R10,R8,LOOPINIT     LOOP THRU INITIALIZATION
         LA    R1,CATENT           (50,0,51)
         L     R15,VOPENSCH        OPEN FOR LIST OF NVSAM CAT RECS
         BALR  R14,R15             GO AND OPEN IT
         LTR  R1,R1                ADDR ENTRY POINT RETURNED
         BNZ   GOODCOP             YES, THEN KEEP ON TRUCKIN
         ABEND 005,DUMP
**********************************************************************
* OPEN THE BINARY SEARCH TABLES FOR NONVSAM AND ALIAS (BOTH HIGH     *
* LEVEL ALIASES AND ALIASES FOR OTHER NONVSAM DATASETS) CATALOG      *
* RECORDS.                                                           *
**********************************************************************
GOODCOP  ST    R1,CATRECD          (0,VTVOLSER)  FOR BINARY LOCATE
         ST    R1,CATFIND          (0,1)         FOR BINARY FIND
         LA    R1,ALIASENT         (89,0,44)
         L     R15,VOPENSCH        OPEN FOR LIST OF ALIAS CAT RECS
         BALR  R14,R15             GO AND OPEN IT
         LTR  R1,R1                ADDR ENTRY POINT RETURNED
         BNZ   GOODCOP2            YES, THEN KEEP ON TRUCKIN
         ABEND 006,DUMP
GOODCOP2 ST    R1,ALIASREC         (0,ALISDSNS)  FOR BINARY INSERT
         ST    R1,ALISFIND         (0,1)         FOR BINARY FIND
         LA    R1,HILENT           (9,0,8)
         L     R15,VOPENSCH        OPEN FOR LIST OF HI LEVEL INDEXES
         BALR  R14,R15             GO AND OPEN IT
         LTR  R1,R1                ADDR ENTRY POINT RETURNED
         BNZ   GOODCOP3            YES, THEN KEEP ON TRUCKIN
         ABEND 006,DUMP
GOODCOP3 ST    R1,HILRECD          (0,HILEVEL)  FOR BINARY INSERT
         LA    R1,NVSENT           (53,0,44)
         L     R15,VOPENSCH       OPEN FOR LIST OF NVSAM DSNS FOR DUPS
         BALR  R14,R15             GO AND OPEN IT
         LTR  R1,R1                ADDR ENTRY POINT RETURNED
         BNZ   GOODCOP4            YES, THEN KEEP ON TRUCKIN
         ABEND 006,DUMP
GOODCOP4 ST    R1,NVSRECD          (0,NONVSAM)  FOR BINARY INSERT
***********************************************************
* HERE IS WHERE WE DYNAMICALLY ALLOCATE THE CATALOGS      *
***********************************************************
ALLOCMST EQU   *
        USING  S99RB,R11
         LA    R11,S99AREA         SET UP SVC 99 PARM AREA BASE REG
         MVI   S99VERB,S99VRBAL    INDICATE ALLOCATION TO BE PERFORMED
         LA    R1,CATUPTR          ADDR OF ALLOCATION TEXT UNIT PTRS
         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK
         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA
         SPACE 1
         DYNALLOC                  PERFORM DYNAMIC ALLOCATION
         DROP  R11
         LTR   R15,R15             GOOD ALLOCATION ?
         BZ    OPENACB             YES, THEN GO OPEN THAT THAR CATLG
         ABEND 007,DUMP
OPENACB  EQU   *
         AP    TOTCAT1(3),PACK1(1)
* I AM RESETTING THESE ACB FIELDS TO WHAT THEY ARE BEFORE ANY OPENS
* BECAUSE I WILL BE REUSING THEM
         MVI   GETACB+48,X'02'         RESET OPEN FLAG
         XC    GETACB+49(23),GETACB+49  ZERO OUT THESE FIELDS
         OPEN  GETACB                   OPEN THE CATALOG
CHKOPEN  LTR   R15,R15              SEE IF VALID OPEN
         BZ    GETLOOP               GO AND READ SOME RECORDS
         MVC   CATOPERR+73(40),CATDSN
         WTO   MF=(E,CATOPERR)
         ABEND 008,DUMP
         EJECT
*******************************************************************
*  WE WILL LOOP THROUGH READING EVERY RECORD FROM EVERY CATALOG   *
*  WITH A VALID POINTER, SAVING THE ALIAS RECORDS AND NONVSAM     *
*  DATASETS EXCLUDING THOSE BEGINNING WITH # AND FDRABR.          *
*******************************************************************
GETLOOP  EQU   *
         XC    CATFLAG1(2),CATFLAG1 RESET FLAGS TO ZERO
         XC    NVSCATA1(4),NVSCATA1    BLANK OUT THIS ADDRESS
         GET   RPL=GETRPL               READ A CATALOG RECORD
         LTR   R15,R15                  GOOD READ ?
         BZ    NOTHIS                   THEN PROCESS THE LITTLE THING
         SHOWCB RPL=GETRPL,AREA=FEEDBCK,LENGTH=4,FIELDS=FDBK
         L     R2,FEEDBCK               PUT IT R2 FOR EASIER DUMP READ
         ABEND 009,DUMP
NOTHIS   L     R7,RECADDR               GET RECORD ADDRESS
         CLI   4(R7),C'X'               IS THIS AN ALIAS RECORD
         BNE   TRYNVSM                  NO, THEN CHECK FOR NVSAM
         CLI   7(R7),C'U'               ALIAS TO A CATLG
         BNE   ADDFORAL                 NO, THEN ALIAS TO A DSN ?
         TM    FLAG,X'80'               I WANT ONLY FROM MASTER CAT
         BO    CHECK#                   NO, THEN DON'T COUNT IT
         AP    TOTHIL1(3),PACK1(1)      ADD 1 FOR TOTAL
         B     CHECK#
ADDFORAL AP    TOTALIS1(3),PACK1(1)     ADD 1 FOR TOTAL
CHECK#   CLI   9(R7),C'#'               WILL NOT PROCESS THIS
         BE    GETLOOP                  YES, THEN READ NEXT RECORD
         CLC   9(6,R7),=C'FDRABR'       ANOTHER VALID ALIAS
         BE    GETLOOP                  YES, THEN NO CHECKING
         CLI   7(R7),C'U'               IS THIS AN ALIAS TO A CATLG
         BE    CHKMSTR                  YES, THEN CHECK FOR MASTER
         CLI   7(R7),C'A'               ALIAS FOR A NONVSAM RECORD ?
         BNE   GETLOOP                  YES, THEN GOOD RECORD
         MVC   ALISDSNS(44),9(R7)       MOVE IN THE ALIAS NAME
         MVI   ALISDSN2,C' '            MOVE IN A BLANK
         MVC   ALISDSN2+1(43),ALISDSN2  BLANK IT OUT
         SLR   R6,R6
         IC    R6,60(R7)
         SH    R6,HW02
         LTR   R6,R6
         BNM   NAMEAL2
         ABEND 011,DUMP
NAMEAL2  EX    R6,MVEADSN2
         MVC   CATFLAG3(1),CATLGNUM+1      MOVE IN RELATIVE CAT NUMBER
         LA    R1,ALIASREC              STORE THE ALIAS RECORD
         L     R15,VINSRCH              VCON OF INSERT
         BALR  R14,R15                  GO DO IT
         LTR   R15,R15                  GOOD INSERT ?
         BZ    GETLOOP                  YES, THEN KEEP GOING
         OI    89(R1),X'80'             TURN ON HI-ORDER TO SAY DUP
         MVC   DUPADSN(44),9(R7)            MOVE IN DUPLICATE NAME
         MVC   DUPACAT1(44),CATDSN
         LA    R1,DUPAREC               PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     GETLOOP
CHKMSTR  TM    FLAG,X'80'               ARE WE DOING THE MASTER CAT
         BZ    GOODALIS                 YES, THEN IT IS OKAY
         MVC   BADOWCAT(44),CATDSN      MOVE IN CATALOG NAME
         MVC   HILEVELM(8),9(R7)         MOVE IN ALIAS
         MVI   BADHICAT,C' '            CLEAR FIRST BYTE
         MVC   BADHICAT+1(43),BADHICAT  BLANK OUT FIELD BEFORE MOVE
         SLR   R4,R4                    CLEAR FOR INSERT
         IC    R4,60(R7)                GET LENGTH OF USERCATALOG
         SH    R4,HW02                  DECREMENT 2 FOR EXECUTE
         EX    R4,MVEHICAT              MVC BADHICAT(0),61(R7)
         LA    R1,BADALIAS              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     GETLOOP
GOODALIS CLC   9(3,R7),TEMPDSN         'SYS' WILL NOT BE IN USERLIST
         BE    GOODUSER                 SO JUST CONTINUE
         LA    R4,9(R7)                 POINT TO HI LEVEL INDEX
         TRT   0(9,R4),PERTBLE          LOOK FOR FIRST BLANK
         SR    R1,R4                    SUBTRACT FOR LENGTH
         LR    R4,R1                    CALL ME FICKLE FOR THIS ONE
         CH    R4,HW05                  MAKE SURE IT IS A USERID
         BL    GOODUSER                 NO, THEN GO AROUND
         CLI   9(R7),C'U'               PREFIXED WITH U
         BE    SHORTID                  YES, THEN SHORTEN IT
         CLI   9(R7),C'P'               OR PREFIXED WITH P
         BE    SHORTID                  YES, THEN THE SAME THING
         CLI   9(R7),C'F'               LAST BUT NOT LEAST F
         BNE   MOVEAID                  IF NONE THEN STORE IT
SHORTID  CH    R4,HW06                  LETS MAKE SURE IT'S A USERID
         BNE   GOODUSER                 IF NOT 6 BYTES THEN NO
         MVC   USERID(5),10(R7)         MOVE LAST 5 OF USERID
         B     FINDUSER                 AND BRANCH AROUND
MOVEAID  CH    R4,HW05                  LETS MAKE SURE IT'S A USERID
         BNE   GOODUSER                 IF NOT 5 BYTES THEN NO
         MVC   USERID(5),9(R7)          STORE USERID
FINDUSER LA    R1,USERRECD              (0,USERID) LOC USER
         L     R15,VLOCSRCH             GET ENTRY OF LOCATE ROUTINE
         BALR  R14,R15                  GO LOCATE USERID
         LTR   R15,R15                  DID WE FIND IT  ?
         BZ    GOODUSER                 YES, THEN GET CAT NAME
*******************************************************************
*  HERE WE WILL LOAD UP AN ICF PARAMETER LIST REQUEST FOR SVC 26  *
*  TO DELETE ALIAS ENTRIES THAT NO LONGER EXIST IN THE USERLIST   *
*******************************************************************
         OI    FLAG2,X'02'          FLAG SO NOT ADDED TO HILEVEL TBLE
         MVC   DELADSN(8),9(R7)         MOVE IN THE HI LEVEL QUAL
         SLR   R6,R6                    CLEAR FOR INSERT
         IC    R6,60(R7)                GET LENGTH OF REL USERCAT
         SH    R6,HW02                  DECREMENT 2 FOR MOVE
******** MOVE TO PRINTLINE THE NAME OF USER CATALOG IT RELATES TO
         EX    R6,MVEDELAL              MVC DELAREL(0),61(R7)
         TM    FLAG2,X'10'              IS THIS A TEST RUN
         BZ    PRTDELAL                 YES, THEN DON'T DELETE
         MVC   ALISDSNS(8),9(R7)     MOVE ALIAS INTO 44 BYTE FIELD
         LA    R15,ALISDSNS             GET ADDRESS FOR CAT PARM LIST
         ST    R15,CTGENT               SAVE IT FOR SVC 26
         MVI   CTGTYPE,C'X'             TELL HIM ALIAS RECORD TYPE
         LA    R1,CTGPL                 LOAD UP ADDR OF CAT PARM LST
         SVC   26                       ISSUE THE BAD BOY
         LTR   R15,R15                  VERIFY THAT REQUEST WORKED
         BZ    GOODALDL                 YES, THEN KEEP ON
         CVD   R15,DOUBLE
         UNPK  ERRCODED(3),DOUBLE+6(2)
         OI    ERRCODED+2,X'F0'
         MVC   ERRDDSN(5),USERID    STORE THE NAME FOR ERROR
         OI    FLAG,X'40'               FLAG TO SAY PRINT TWICE
         CLI   RTCODE+3,X'08'
         BH    NORCDELA
         MVI   RTCODE+3,X'08'           SET OVERALL RCC TO 8
NORCDELA LA    R1,ERRDELAL              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     GOODUSER
GOODALDL AP    TOTHIL2(3),PACK1(1)      MAINTAIN CNTR OF DELETES ALSO
PRTDELAL LA    R1,DELALDSN
         L     R15,ADOOUT1
         BALR  R14,R15
         SPACE 2
GOODUSER SLR   R6,R6                    CLEAR FOR INSERT
         IC    R6,60(R7)                LENGTH OF USERCAT
         L     R3,UCATADDR              BEGINNING OF TABLE ENTRY
         SLR   R4,R4                    CLEAR FOR INSERT
         SLR   R5,R5                    CLEAR FOR INSERT
         LA    R8,45                    INCREMENT VALUE OF CAT+LEN
         LA    R9,1755(R3)               END OF TABLE
LOOPUCAT LA    R5,1(R5)                 GET LOCATION PNTR
         ICM   R4,1,0(R3)               GET LENGTH
         BZ    MOVEUCAT                 IF ZERO END OF TABLE
         CR    R4,R6                    ARE LENGTHS EQUAL
         BNE   INCRUCAT                 NO, THEN CATS ARE NOT EQUAL
         BCTR  R4,0                     DECREMENT FOR COMPARE
         EX    R4,COMPUCAT                 CLC  0(0,R3),60(R7)
         BE    STORHIL                  IF EQUAL THEN STORE HI LEVEL
INCRUCAT BXLE  R3,R8,LOOPUCAT           LOOP THRU TABLE
         ABEND 011,DUMP
MOVEUCAT BCTR  R6,0                     DECR FOR EXECUTE INSTR
         EX    R6,MVEUCAT                  MVC  0(0,R3),60(R7)
         STH   R5,CATLGNUM               SAVE LOCATION POINTER OF CAT
         ST    R3,ENDUCAT               SAVE ENDING ADDRESS FOR LATER
STORHIL  TM    FLAG2,X'02'              WAS THIS HILEVEL DELETED ?
         BZ    STHILCT5
         NI    FLAG2,X'FD'
         B     GETLOOP                  READ NEXT REACORD
STHILCT5 STC   R5,HILCAT                MOVE IN RELATIVE CATALOG NMBER
         MVC   HILEVEL(8),9(R7)         MOVE IN HI LEVEL QUALIFIER
         LA    R1,HILRECD               STORE THE ALIAS RECORD
         L     R15,VINSRCH              VCON OF INSERT
         BALR  R14,R15                  GO DO IT
         B     GETLOOP                  READ NEXT REACORD
         SPACE 3
*******************************************************************
*  HERE IS WHERE COME TO PROCESS NONVSAM RECORDS AND OR MAINTAIN  *
*  A COUNTER OF ALL OTHER TYPES OF CATALOG RECORDS. TOTALS ARE    *
*  PRINTED AT END OF PGM.                                         *
*******************************************************************
TRYNVSM  CLI   4(R7),C'A'               IS IT A NONVSAM RECORD
         BE    DONVSAM                  YES, THEN GO AROUND TOTALS
         CLI   4(R7),C'B'               IS IT A GDG BASE
         BNE   TRYCLSTR
         AP    TOTGDG1(3),PACK1(1)     ADD 1 TO TOTAL
         B     GETLOOP
TRYCLSTR CLI   4(R7),C'C'               IS IT A CLUSTER
         BNE   TRYCATLG
         AP    TOTVSM1(3),PACK1(1)     ADD 1 TO TOTAL
         B     GETLOOP
TRYCATLG CLI   4(R7),C'U'               IS IT A USER CATALOG
         BNE   GETLOOP
         AP    TOTUCAT1(3),PACK1(1)     ADD 1 TO TOTAL
         B     GETLOOP
DONVSAM  AP    TOTNVS1(3),PACK1(1)     ADD 1 FOR TOTALS
         CLI   9(R7),C'#'               WILL NOT PROCESS THIS
         BE    GETLOOP                  YES, THEN READ NEXT RECORD
         CLC   9(6,R7),=C'FDRABR'       ANOTHER VALID DSNAME
         BE    GETLOOP                  YES, THEN NO CHECKING
         TM    FLAG,X'80'              IS THIS THE MASTER CAT
         BO    SETVLR4                  NO, THEN CONTINUE ONWARD
         XC    HILCAT(1),HILCAT         CLEAR TO SAY MSTR CAT PNTR
         MVC   HILEVEL(8),BLANKS     BLANK IT OUT
         LA    R4,9(R7)              POINT TO DSNAME
         TRT   0(9,R4),PERTBLE       LOOK FOR PERIOD
         SLR   R1,R4                 GET LENGTH OF HI LEVEL
         BCTR  R1,0                  DECREMENT FOR EXECUTE
         EX    R1,MOVEHIL            MVC HILEVEL(0),0(R4)
         LA    R1,HILRECD              LOAD UP THE QUALIFIER ADDRESS
         L     R15,VINSRCH              VCON OF INSERT
         BALR  R14,R15                  GO DO IT
         SPACE 2
*******************************************************************
*  HERE IS ANOTHER LITTLE SECTION THAT CAN BE CONSIDERED A LITTLE *
* CONFUSING. THIS DEALS WITH THE RECORD LAYOUT OF A NONVSAM ICF   *
* CATALOG RECORD. IT IS VARIABLE LENGTH, AND WE ARE INTERESTED IN *
* THE VOLUME NUMBER AFTER WE'VE GOTTEN THE DSNAME (WHICH IS IN A  *
* FIXED LOCATION). BOTTOM LINE, IT SEEMS TO WORK SO BEAR WITH THE *
* LOOP.                                                           *
*******************************************************************
SETVLR4  LA    R4,72(R7)                 POINT TO END OF SECTION
         LA    R6,74(R7)                POINT TO DESCRIPTOR
         LH    R5,0(R7)                 OVERALL LENGTH OF RECORD
         LA    R5,0(R5,R7)              POINT TO END OF RECORD
         SLR   R3,R3                    CLEAR FOR INSERT
LOOPVARN CLI   0(R6),X'04'              IS FIRST SECTION VOLUME LIST
         BE    DOVOLUME                 IF HERE THEN GOOD, SO STORE
INCRNVSM ICM   R3,3,0(R4)              GET NEXT LENGTH FIELD
         BNZ   VARLNGOK                 SHOULD NEVER BE A ZERO LENGTH
         ABEND 012,DUMP
VARLNGOK LA    R4,0(R3,R4)              POINT TO END OF IT
         LA    R6,2(R4)                  SAVE POINTER FOR COMPARE
         CR    R4,R5                     ARE WE AT THE END OF THE REC
         BL    LOOPVARN                  NO, THEN CHECK AGAIN
         ABEND 013,DUMP           SHOULDN'T BE HERE, BUT ...
DOVOLUME CLC   2(6,R6),ASTRKWD          IS IT ON THE SYSRES VOL
         BNE   NOTASTER                    NO, THEN CONTINUE
         OI    CATFLAG1,X'01'        SET FLAG TO SAY WAS ASTERISKS
         MVC   VTVOLSER(6),SYSRES       MOVE IN NAME BECAUSE OF SORT
         B     MOVVTDSN                    GO MOVE IN THE DSN
NOTASTER CLI   10(R6),X'20'            SEE IF DASD FOR FLAG
         BE    REGVOLM                  YES, THEN GO AROUND
         CLI   10(R6),X'80'            SEE IF TAPE
         BNE   GETLOOP                  NO, THEN GET NEXT
         TM    FLAG,X'80'               IF IN THE MASTERCAT NO CHECK
         BZ    GETLOOP                  YES, THEN NO FURTHER CHECK
******************************************************************
*  HERE IS WHERE WE WILL UNCATALOG TAPE DSNS THAT NO LONGER HAVE *
* A VALID POINTER FROM THE MASTER CATALOG.                       *
******************************************************************
         MVC   HILEVEL(8),BLANKS     BLANK IT OUT
         LA    R4,9(R7)              POINT TO DSNAME
         TRT   0(9,R4),PERTBLE       LOOK FOR PERIOD
         SLR   R1,R4                 SUBTRACT FOR LENGTH OF QUALIFIER
         BCTR  R1,0                  DECREMENT FOR MOVE
         EX    R1,MOVEHIL            MVC HILEVEL(0),0(R4)
         LA    R1,HILRECD               (0,HILEVEL) LOC USER
         L     R15,VLOCSRCH             GET ENTRY OF LOCATE ROUTINE
         BALR  R14,R15                  GO LOCATE HI LEVEL QUALIFIER
         LTR   R15,R15                  DID WE FIND IT  ?
         BZ    GETLOOP                  YES, THEN GOOD POINTER
         MVC   NOPNTDSN(44),0(R4)       MOVE IN DSNAME
         MVC   NOPNTCAT(44),CATDSN      MOVE IN NAME OF CATALOG
         LA    R1,NOTPNTED              POINT TO OUTPUT RECORD
         L     R15,ADOOUT1              AND SUBROUTINE TO PRINT
         BALR  R14,R15                  GO PRINT IT YAHOO
         MVC   UCATDSN(44),0(R4)        MOVE IN NAME OF DATASET
         MVC   UCATVSN(6),2(R6)        MOVE IN NAME OF DATASET
         TM    FLAG2,X'10'              IS THIS A TEST RUN
         BZ    PRTDELNV                 YES, THEN DON'T DELETE
         MVC   VTDSNAME(44),9(R7)        MOVE IN THE DSNAME
         LA    R15,VTDSNAME              SAVE FOR CAT PARM LIST
         ST    R15,CTGENT                SAVE THE ADDR
         MVI   CTGTYPE,C'A'              TELL HIM NVSAM CAT RECORD
         LA    R1,CTGPL                  POINT TO CAT PARM LIST
         SVC   26                        ISSUE SVC FOR DELETE
         LTR   R15,R15                   GOOD UPDATE
         BZ    GOODSVCD
         CVD   R15,DOUBLE
         UNPK  ERRCODE(3),DOUBLE+6(2)
         OI    ERRCODE+2,X'F0'
         MVC   ERRUDSN(44),0(R4)     STORE THE NAME FOR ERROR
         OI    FLAG,X'40'               FLAG TO SAY PRINT TWICE
         CLI   RTCODE+3,X'08'
         BH    NORCDELN
         MVI   RTCODE+3,X'08'           SET OVERALL RCC TO 8
NORCDELN LA    R1,ERRUNCAT              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     GETLOOP
GOODSVCD AP    TOTNVS2(3),PACK1(1)   KEEP COUNT OF THOSE UNCATLGED
PRTDELNV LA    R1,UNCATDSN              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     GETLOOP
REGVOLM  MVC   VTVOLSER(6),2(R6)           MOVE IN VOLSER FROM RECORD
MOVVTDSN MVC   VTDSNAME(44),9(R7)        MOVE IN THE DSNAME
         TM    FLAG,X'80'                  IS THIS THE MASTER CATALOG
         BZ    NOCATFG2                    YES, THEN LEAVE AT 0
         MVC   CATFLAG2(1),CATLGNUM+1      MOVE IN RELATIVE CAT NUMBER
NOCATFG2 LA    R1,CATRECD                  GET ADDRESS OF THE RECORD
         L     R15,VINSRCH                 ADDR OF INSERT ROUTINE
         BALR  R14,R15                     GO PUT AWAY
INSNVSM  MVC   NONVSAM(44),9(R7)
         MVC   NVSCATA1(4),UCATADDR        MOVE IN CURRENT CAT ADDRESS
         CLI   7(R7),X'01'                 CATALOGED TO MULTIVOLUMES ?
         BNH   ADDRINSM                    NOT GT 1 NO FLAG
         OI    NVSFLAG1,X'80'              FLAG RECORD AS MULTIVOLUME
ADDRINSM LA    R1,NVSRECD                  GET ADDRESS OF THE RECORD
         L     R15,VINSRCH                 ADDR OF INSERT ROUTINE
         BALR  R14,R15                     GO PUT AWAY
         NI    NVSFLAG1,X'7F'              RESET FLAG IF SET
         LTR   R15,R15                     GOOD INSERT WE HOPE
         BZ    GETLOOP                     YES, THEN READ NEXT
         MVC   48(4,R1),UCATADDR           MOVE IN CURRENT CAT ADDRESS
         OI    52(R1),X'01'                FLAG TO SAY DUPLICATE
         B     GETLOOP
CLOSEACB EQU   *
         CLOSE GETACB                   CLOSE CATALOG
         LTR   R15,R15                     GOT TO HAVE A GOOD CLOSE
         BZ    GOODCLOS                    YES, THEN CONTINUE
         ABEND 015,DUMP
         SPACE 1
GOODCLOS TM    FLAG,X'80'                  IS THIS THE MASTER CATLG
         BO    NOTMSTR                    ON, THEN ALREADY DONE
NOSYSIN  XC    CATLGNUM(2),CATLGNUM       RESET CATLG NUMBER
         OI    FLAG,X'80'               SET FLAG FOR MSTR CAT DONE
         L     R3,UCATADDR                POINT TO USERCAT TABLE
         ICM   R1,15,ENDUCAT          WE HAD TO STORE AT LEAST 1 UCAT
         BNZ   GOTVALUE                    NO ZEROES, RIGHT ?
         ABEND 016,DUMP
NOTMSTR  L     R3,UCATADDR                RELOAD BEGINNING NOT MSTR
         L     R1,ENDUCAT                 AND GET THE ENDING ADDRESS
GOTVALUE CR    R3,R1                      ARE WE AT THE END
         BH    CATDONE                    YES, THEN WE'RE DONE HERE
         LA    R4,45(R3)                  NO, THEN POINT TO NEXT CAT
         ST    R4,UCATADDR                SAVE ADDR FOR LATER
         SLR   R4,R4                      CLEAR R4 FOR INSERT CHAR
         IC    R4,0(R3)                   GET LENGTH OF CAT + 1
         SH    R4,HW02                    DECREMENT 2 FOR EXECUTE
         MVI   CATDSN,C' '                LET'S BLANK OUT FIELD
         MVC   CATDSN+1(43),CATDSN        ENTIRELY
         EX    R4,MVECATAL                MVC  CATDSN(0),1(R3)
         LH    R4,CATLGNUM                GET CATALOG LOCATION
         LA    R4,1(R4)                   INCREMENT LOCATION
         STH   R4,CATLGNUM                AND SAVE THE NUMBER
         B     ALLOCMST                   GO AND ALLOCATE IT
CATDONE  EQU   *
         LA    R1,CATFIND          MAINTAIN POINTER FOR BINARY FIND
         L     R15,VFNDSRCH               GO FIND FIRST RECORD
         BALR  R14,R15                    IN CATALOG RECORD TABLE
         LTR   R15,R15                    DID WE FIND IT
         BZ    GOTCRECD           YES, THEN ONWARD CHRISTIAN SOLDIERS
         ABEND 017,DUMP
         SPACE 1
GOTCRECD ST    R1,FINDADDR          SAVE THIS ADDRESS FOR LATER
         LR    R10,R1               STORE IF FOR LATER
         MVC   ALVOLSER(6),0(R1)    MOVE IN FOR FIRST VTOC ALLOCATE
*******************************************************************
*  HERE WE ARE INTERESTED IN SEARCHING THE UCB'S AND BUILDING A   *
* BINARY SEARCH TABLE OF ALL ACTIVE DASD VOLSERS. WE WILL USE THE *
* UCB LOOKUP TABLE TO REFERENCE ALL UCB'S ( YOU'RE SAYING WHAT    *
* ELSE WOULD THIS MORON USE , RIGHT ? ).                          *
*******************************************************************
DOUCBLKP LA    R1,UCBENT            (6,0,6)
         L     R15,VOPENSCH         ADDRESS OF OPEN SEARCH
         BALR  R14,R15              GO DO IT
         LTR   R1,R1                GOOD OPEN
         BNZ   GOODUCOP             YES, AN ADDRESS THERE
         ABEND 018,DUMP
GOODUCOP ST    R1,UCBRECD           SAVE AT  (0,VTVOLSER)
         L     R7,16                  CVT ADDRESS
         L     R7,40(R7)              UCB LOOKUP ADDRESS
         SLR   R8,R8                  CLEAR R8 FOR INSERT
         USING UCBOB,R8
LOOPUCB  ICM   R8,3,0(R7)             GET UCB ADDRESS
         BZ    INCRUCB                IF 0 GO TO NEXT ENTRY
         TM    UCBTBYT3,X'20'         IS THIS A DASD DEVICE
         BZ    INCRUCB                NO, THEN GO TO NEXT ENTRY
         TM    UCBSTAT,X'80'          IS THIS DEVICE ONLINE
         BZ    INCRUCB                NO, THEN GO TO NEXT ENTRY
         CLI   UCBVOLI,X'00'          IS A VOLSER ADDRESS PRESENT
         BE    INCRUCB                NO, THEN GO TO NEXT ENTRY
         MVC   VTVOLSER(6),UCBVOLI    MOVE IN THE VOLSER
         LA    R1,UCBRECD             LOAD POINTER INTO R1
         L     R15,VINSRCH            GET INSERT ADDR IN R15
         BALR  R14,R15                GO INSERT INTO TABLE
******************************************************************
*  WE ADDED OPTCHAN WITH NEW HARDWARE CONFIG. WHICH ADDED NEW    *
*  CHANNELS. SO WE DO NOT CARE IF INSERT RETURNS A DUPLICATE     *
*  SO IT WAS COMMENTED OUT.                                      *
******************************************************************
*        LTR   R15,R15                GOOD INSERT, NO DUPS, ETC...
*        BZ    INCRUCB                YES, THEN GET NEXT
*        ABEND 019,DUMP
INCRUCB  LA    R7,2(R7)               INCREMENT TO NEXT ENTRY
         CLC   0(2,R7),=X'FFFF'       IS IT THE END OF TABLE
         BNE   LOOPUCB                NO, THEN VERIFY NEXT ENTRY
         DROP  R8
         SPACE 2
ALLOCVTC NI    FLAG,X'C0'         RESET FLAG FOR SUBSEQUENT LOOPS
         MVC   VTVOLSER(6),ALVOLSER     STORE THE VOLSER
         LA    R1,UCBRECD              (0,VTVOLSER) LOC VOLSER
         L     R15,VLOCSRCH             GET ENTRY OF LOCATE ROUTINE
         BALR  R14,R15                  GO LOCATE USERID
         LTR   R15,R15                  DID WE FIND IT  ?
         BZ    GOODVSN                  YES, THEN ALLOCATE VOLUME
         OI    FLAG,X'10'           FLAG TO SAY NOT FOUND AND EOFVTOC
         B     UNCATLG                  AND GO UNCATLG VOLUMES
***********************************************************
* HERE IS WHERE WE DYNAMICALLY ALLOCATE THE VTOC          *
***********************************************************
GOODVSN  EQU   *
         USING S99RB,R5
         LA    R5,S99AREA         SET UP SVC 99 PARM AREA BASE REG
         MVI   S99VERB,S99VRBAL    INDICATE ALLOCATION TO BE PERFORMED
         LA    R1,VTTUPTR          ADDR OF ALLOCATION TEXT UNIT PTRS
         ST    R1,S99TXTPP         STORE IN SVC 99 REQUEST BLOCK
         LA    R1,S99PARM          LOAD ADDRESS OF SVC 99 PARM AREA
         SPACE 1
         DYNALLOC                  PERFORM DYNAMIC ALLOCATION
         DROP  R5
         LTR   R15,R15             DID WE GET WHAT WE WANTED
         BZ    OPENFILE         YES, THEN DON'T STAND HERE, GO TO IT
         ABEND 020,DUMP            OH, SO SORRY COMRADE
*******************************************************************
*  NEXT WE ARE INTERESTED IN OPENING THE VTOC OF ANY VOLUME BY    *
*  MOVING THE VTOC NAME INTO THE JFCBAREA, AND USING THAT DURING  *
*  OPEN PROCESSING.                                               *
*******************************************************************
OPENFILE EQU   *
         AP    TOTVOL1(3),PACK1(1)
         RDJFCB MF=(E,OPENLIST)
         MVI   JFCBAREA,X'04'           MOVE VTOC NAME INTO JFCB
         MVC   JFCBAREA+1(43),JFCBAREA  REPLICATE FOR ALL 04'S
         OI    JFCBAREA+52,X'08'        SET FLAG TO SAY NO REWRITE
         MVI   VTOCDCB+48,X'02'         RESET OPEN FLAG
         OPEN  TYPE=J,MF=(E,OPENLIST)
         TM    VTOCDCB+48,X'10'         DID WE OPEN IT ?
         BO    OPENOK                   YES, HURRAY
         ABEND 021,DUMP
OPENOK   EQU   *
         L     R5,VTOCDCB+44      ADDR. OF DEB  DCBDEBA-1
         L     R10,32(R5)         ADDR. OF UCB
         LA    R7,5                SUPPORT 5 DEVICES
         LA    R8,DEV3380                START WITH 3380'S IN TABLE
LOOPDEV  CLC   0(1,R8),19(R10)        COMPARE DEVTYPES
         BE    GOTUDEV                IF EQUAL, WE FOUND OUR GAL
         LA    R8,5(R8)               NOT EQ THEN GO TO NEXT ENTRY
         BCT   R7,LOOPDEV                LOOP THRU TABLE
         ABEND 022,DUMP                  UNSUPPORTED DEVICE
GOTUDEV  MVC   CURRTRKS(4),1(R8)   MOVE IN NUMBER OF TRKS AND DSCBS
         MVC   VOLDEVT(4),16(R10)  MOVE IN THE DEVICE TYPE FOR SCRATCH
         MVC   VOLVSN(6),28(R10)   AND THE VOLSER IF THERE IS A SCR
         LA    R7,IOB              POINT TO THE I/O BLOCK
         USING IOBSTDRD,R7
         LA    R5,32(R5)          DEBDASD    PTR TO DASD SECTION
         USING DEBDASD,R5
         CLI   CURRTRKS+1,X'0F'      IS IT A 3380 ?
         BE    SETSEEK            YES, THEN WE ARE SET TO READ
*********************************************************************
* THIS NEXT GAME RESETS THE SET SECTOR CCW AND BREAKS THE CCW CHAIN *
* TO THE LENGTH OF DSCBS PER TRACK FOR WHATEVER THE DEVICE IS. THE  *
* LOCATION IS SAVED AND RELOADED AT COMPLETION OR IF A SHORT TRACK  *
* IS READ. THE BIG REASON FOR ALL THIS SHIFTING AND SAVING OF       *
* POINTERS FOR THE SET SECTOR IS SO THAT WE CAN PROCESS MULTIPLE    *
* VOLUMES WITH DIFFERENT DEVICE TYPES OR WE NEED TO READ A SHORT    *
* TRACK.                                                            *
*********************************************************************
         LA    R1,READCCW          POINT TO BEGIN OF CHAIN
         LH    R15,CURRTRKS+2      GET DSCBS/TRK
         SLA   R15,3              MULITPLY BY 8 P/ CCW
         LA    R15,0(R1,R15)      POINT TO SET SECTOR RECORD
         ST    R15,CCWSVAD        SAVE THE ADDRESS OF THE CCW
         MVC   CCWSAVE(8),0(R15)  AND SAVE THE CCW
         MVC   0(8,R15),SETSECT   MOVE IN SET SECTOR FOR END CCW CHAIN
SETSEEK  MVC   IOBCC(2),DEBSTRCC  SET CYLINDER NUMBER IN IOB
         MVC   IOBHH(2),DEBSTRHH  SET TRACK NUMBER IN IOB
         DROP  R5
LOCSET   MVI   SECTOR,X'01'         SET INITIAL SECTOR TO 1
         MVI   IOBR,X'01'           AND THE SAME FOR RECORD NUMBER
         EXCP  IOB                  HERE IT IS - HI/HO HI/HO
         WAIT  ECB=ECB              TRY NOT TO BE IMPATIENT
READLOOP CLI   ECB,ECBNORM          WAS IT A GOOD READ
         BE    GOODREAD             IT WAS SO LETS GO DO MORE KIDDIES
CKMORE   CLI   ECB,ECBPERR          PERMANENT ERROR SET FOR EOF
         BNE   CHKEOE               NO, THEN WE'LL VERIFY END OF EXTENT
**********************************************************************
*** FOR ALL INTENTS AND PURPOSES I DON'T THINK THERE REALLY IS AN END
*** OF FILE FOR A VTOC. IF WE WERE TO CALCULATE INCORRECTLY AND READ
*** PAST THE HIGH FORMAT 1 DSCB WE WOULD HIT THE END OF EXTENT.
***   IT SHOULD BE IN ONE CONTIGUOUS EXTENT SO I WILL NOT PROCESS
*** MULTIPLE EXTENT VTOCS
**********************************************************************
         TM    IOBUSTAT,IOBUSB7   WAS IT AN END OF FILE
         BNO   ERRCODE1           NO, THEN TREAT AS PERM ERROR
         OI    FLAG,X'02'         SET FLAG TO SAY EOF
         B     GOODREAD           CONSIDER IT A GOOD READ
ERRCODE1 ABEND 023,DUMP
CHKEOE   CLI   ECB,ECBDAEA       WAS IT END OF EXTENT
         BE    DONEVTOC          YES, THEN WE'RE DONE FOR NOW
         ABEND 024,DUMP
GOODREAD LH    R9,CURRTRKS+2            GET # DSCBS TO LOOP/TRK
         LH    R8,DSCBLEFT              GET # DSCBS LEFT TO PROCESS
         L     R11,STRADDR1             LOAD UP R11 WITH BEGIN OF READ
         TM    FLAG,X'01'               HAVE WE PROCESSED FORMAT 4
         BO    READF4                   YES, THEN CONTINUE ON
         OI    FLAG,X'01'               NO, THEN SET FLAG
         LA    R1,VTOCENT               POINT TO VTOC ENTRY
         L     R15,VOPENSCH          AND OPEN ANOTHER BINSEARCH TABLE
         BALR  R14,R15                  GO OPEN IT
         LTR   R1,R1                    DID HE RETURN AN ADDRESS ?
         BNZ   GOODVTBO                 GOOD, THEN KEEP ON
         ABEND 025,DUMP
GOODVTBO ST    R1,VTOCRECD              SAVE THE ADDR FOR INSERT
         ST    R1,VTOCFIND              SAVE THE ADDR FOR FIND
********************************************************************
* THE FUNNY LOOKING CALCULATION HERE GETS THE HIGH FORMAT 1 DSCB,  *
* AND THE VTOC DESCRIPTION, AND MULTIPLIES AND ADDS ALL THIS JIB-  *
* BERISH TOGETHER TO COME UP WITH THE NUMBER OF DSCBS WE WILL READ.*
********************************************************************
SYSPOPEN LA    R10,44(R11)              LET R10 POINT PAST DSN OF F4
         USING DS4,R10
         SLR   R2,R2                    CLEAR THE FOLLOWING FOR CALCS
         SLR   R3,R3                    AND 3
         SLR   R4,R4                    AND 4
         SLR   R5,R5                    AND HIM
         ICM   R2,3,DS4HPCHR            HI ADDR OF FORMAT 1 DSCB
         MH    R2,CURRTRKS              # TRKS PER CYL
         ICM   R3,3,DS4HPCHR+2          PART OF SAME 5 BYTE ADDR
         AR    R2,R3                    ADD THE 2
         MH    R2,CURRTRKS+2            # DSCBS PER TRACK
         IC    R4,DS4HPCHR+4            LAST BYTE OF HIGH ADDR
         AR    R2,R4                    ADD THEM
         ICM   R4,3,DS4VTOCE+2          VTOC EXTENT DESCRIPTION
         MH    R4,CURRTRKS              # TRKS PER CYL
         ICM   R5,3,DS4VTOCE+4          NEXT 2 OF SAME
         AR    R4,R5                    ADD THEM
         MH    R4,CURRTRKS+2            # DSCBS PER TRACK
         SR    R2,R4                    SUBTRACT THE 2
         LTR   R2,R2                    VERIFY SOME FORMAT 1'S EXIST
         BNZ   LOADUPR8                 YES, THEN GO PROCESS
         MVC   NOF1VSN(6),ALVOLSER     SAVE THE VOLSER
         LA    R1,NOF1DSCB              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     DONEVTOC                 AND WE'RE FINISHED WITH HIM
LOADUPR8 LR    R8,R2                    SAVE THE # OF DSCBS
         BCTR  R9,0                     DECR FOR FORMAT 4
         LA    R11,140(R11)             POINT TO FIRST FORMAT 1
         DROP  R10
         USING DS1,R11
READF4   CR    R9,R8                  COMPARE #DSCBS/TRK TO # LEFT
         BNH   CONTDSNS               IF LESS THEN STILL MORE TO READ
         LR    R9,R8                  LESS, THEN RESET THE LOOP
CONTDSNS CLI   DS1FMTID,C'1'            IS IT A FORMAT 1 DSCB
         BNE   LOOPDSNS               IF NOT FORMAT 1 THEN GET NEXT
         TM    DS1DSORG+1,DS1ORGAM        IS IT VSAM
         BO    LOOPDSNS                 IF IT IS THEN NEXT ONE
         CLC   DS1DSNAM(6),=C'FDRABR'  IF PREFIXED WITH FDRABR
         BE    LOOPDSNS                 THEN DO NOT WORRY ABOUT STORING
         CLC   DS1DSNAM(8),TEMPDSN     IS THIS A TEMPORARY DATASET
         BE    LOOPDSNS                 THEN DO NOT WORRY ABOUT STORING
         MVC   VTDSNAME(44),DS1DSNAM    STORE THE NAME
         DROP  R11
         OI    FLAG2,X'01'            FLAG TO SAY WE DID ONE
         LA    R1,VTOCRECD            LOAD UP R1 FOR INSERT OF RECORD
         L     R15,VINSRCH              ADDR OF INSERT ROUTINE
         BALR  R14,R15                  GO DO IT
         LTR   R15,R15                  GOOD INSERT ?
         BZ    LOOPDSNS                 YES, THEN DO NEXT
         ABEND 026,DUMP
LOOPDSNS LA    R11,140(R11)             POINT TO NEXT FORMAT 1
         BCT   R9,READF4                LOOP THRU DSCBS
         TM    FLAG,X'02'           NO EOF BUT EO EXTENT IS POSSIBLE
         BO    DONEVTOC                 IF SO WE'RE FINISHED
         SH    R8,CURRTRKS+2            SUBTR # OF DSCBS PER TRK
         STH   R8,DSCBLEFT              STORE THE REMAINDER
         LTR   R8,R8                    SEE IF WE'RE DONE
         BNP   DONEVTOC                 IF MINUS OR  WE'RE DONE
         CH    R8,CURRTRKS+2            SEE IF ENOUGH DSCBS LEFT/TRK
         BNL   RESETTRK                 IF NOT LESS THEN LEAVE CCW'S
         L     R15,CCWSVAD              GET OUR MODIFIED ADDR
         LTR   R15,R15                  HAVE WE SAVE ONE YET
         BZ    SECTADOK                 NO, THEN NO RELOAD
         MVC   0(8,R15),CCWSAVE    MOVE BACK IN THE SAVED CCW
SECTADOK LA    R1,READCCW          POINT TO BEGIN OF CHAIN
         LR    R15,R8              GET DSCBS/TRK
         SLA   R15,3              MULITPLY BY 8 P/ CCW
         LA    R15,0(R1,R15)       POINT TO SET SECTOR RECORD
         ST    R15,CCWSVAD        SAVE THE ADDRESS OF THE CCW
         MVC   CCWSAVE(8),0(R15)  AND SAVE THE CCW
         MVC   0(8,R15),SETSECT   MOVE IN SET SECTOR FOR END CCW CHAIN
RESETTRK SLR   R3,R3                    CLEAR FOR ISERT
         ICM   R3,3,IOBHH               RELOAD TRK LOCATION
         LA    R3,1(R3)                 INCREMENT TRACK COUNT
         STCM  R3,3,IOBHH               SAVE NEW TRACK ADDRESS
         CH    R3,CURRTRKS              MAKE SURE NOT END OF CYL
         BL    LOCSET                   IF LESS THEN STILL GOOD
         MVC   IOBHH(2),HW00            RESET TRK TO 0
         ICM   R3,3,IOBCC               RELOAD CYLINDER ADDR
         LA    R3,1(R3)                 INCREMENT TO NEXT CYLINDER
         STCM  R3,3,IOBCC               SAVE IT
         B     LOCSET                   AND GO READ SOMRE MORE
DONEVTOC ICM   R15,15,CCWSVAD           LET'S SEE IF WE SWITCHED
         BZ    CLOSVTOC                 NO, THEN GO AND CLOSE
         MVC   0(8,R15),CCWSAVE    MOVE BACK IN THE SAVED CCW
         XC    CCWSVAD(4),CCWSVAD       CLEAR FOR NEXT CCW READ VTOCS
CLOSVTOC CLOSE (VTOCDCB)
         DROP  R7
         NI    FLAG,X'FE'               RESET FORMAT 4 FLAG
         SPACE 3
         TM    FLAG2,X'01'          WAS AT LEAST ONE RECORD PROCESSED
         BO    VTCRECS              YES, THEN CONTINUE
         OI    FLAG,X'10'           TELL HIM EOF OF VTOC NO DSNS
         B     LOADR10F
VTCRECS  NI    FLAG2,X'FE'          RESET FLAG FOR OTHER PASSES
         LA    R1,VTOCFIND          POINT TO FIND SEARCH FOR VTOC
         L     R15,VFNDSRCH         AND GO FIND FIRST RECORD
         BALR  R14,R15              GO DO IT
         LTR   R15,R15              GOOD FIND
         BZ    GOODVFND             YES, THEN CONTINUE
         ABEND 027,DUMP
GOODVFND LR    R11,R1               SAVE ADDRESS INTO R11
LOADR10F L     R10,FINDADDR         GET SAVED ADDRESS FROM EARLIER
         TM    FLAG,X'10'           EOF OF VTOC
         BO    UNCATLG              YES, THEN GO UNCATLG ALL
FCATSET  CLC   ALVOLSER(6),0(R10)          ARE THE VSNS THE SAME
         BE    CHECKDSN                    YES, THEN GO CHECK DSNS
         ST    R10,FINDADDR          SAVE THIS ADDRESS
         TM    FLAG,X'10'            ARE WE AT END OF VTOC
         BO    ALLOCVTC              YES, THEN DO NEXT ONE
         OI    FLAG,X'04'           FLAG TO SAY VSNS NO LONGER EQ
         B     LOOPNODS               GO SAY DSNS NOT CATLGED
CHECKDSN CLC   0(44,R11),6(R10)       COMP THE VTOC DSN TO CAT DSNAME
         BH    UNCATLG                IF VTOC DSN GT UNCATLG
         BL    LOOPNODS               IF LESS THEN NOT CATLGED
         OI    FLAG,X'20'            FLAG TO SAY EQUAL AND INCREMENT
         B     INCRVTOC      IF EQ INCR TO NEXT VTOC REC AND COMP ALIAS
LOOPNODS MVC   NOCATDSN(44),0(R11)         MOVE IN DSNAME
         MVC   NOCATVSN(6),ALVOLSER       MOVE IN CURRENT VOLUME
         AP    TOTNVS3(3),PACK1(1)      KEEP COUNT OF THIS AS WELL
         MVC   USERID(8),BLANKS     BLANK IT OUT
         LR    R4,R11
         CLI   0(R4),C'U'              PREFIXED WITH U
         BE    SHRTSCRC                 YES, THEN SHORTEN IT
         CLI   0(R4),C'P'              PREFIXED WITH P
         BE    SHRTSCRC                 YES, THEN SHORTEN IT
         CLI   0(R4),C'F'               LAST BUT NOT LEAST F
         BNE   TRTSCRHI                 IF NONE THEN TRANSL FOR HILEV
SHRTSCRC LA    R4,1(R4)              POINT TO NEXT BYTE FOR COMPARE
TRTSCRHI TRT   0(9,R4),PERTBLE       LOOK FOR PERIOD OR BLANK
         SLR   R1,R4                 GET LENGTH OF HI LEVEL
         CH    R1,HW05               SAME LENGTH AS OUR USERID
         BNE   NCATOUT               NO, THEN DON'T SEARCH FURTHER
         BCTR  R1,0                  DECREMENT FOR EXECUTE
         EX    R1,MOVEUSR            MVC USERID(0),0(R4)
         LA    R1,USERRECD              (0,USERID) LOC USER
         L     R15,VLOCSRCH             GET ENTRY OF LOCATE ROUTINE
         BALR  R14,R15                  GO LOCATE USERID
         LTR   R15,R15                  DID WE FIND IT  ?
         BNZ   NCATOUT                  NO, THEN DO NOT SCRATCH
****************************************************************
*  NEXT SEARCH MIGHT BE AN OVERKILL, BUT I NEED TO KNOW IF IT  *
* WAS CATALOGED AS A MULTIVOLUME DATASET. IF YES, NO SCRATCH.  *
****************************************************************
         MVC   NONVSAM(44),0(R11)      MOVE IN THE DSNAME FOR SCR
         LA    R1,NVSRECD               (0,USERID) LOC USER
         L     R15,VLOCSRCH             GET ENTRY OF LOCATE ROUTINE
         BALR  R14,R15                  GO LOCATE THE DATASET
         LTR   R15,R15                  DID WE FIND IT  ?
         BNZ   SCRATCHD                 NO, THEN SCRATCH IT
         TM    52(R1),X'80'             WAS IT A MULTIVOLUME DATASET
         BO    NCATOUT                  YES, THEN LEAVE ALONE
SCRATCHD EQU   *
         TM    FLAG2,X'04'               IS THIS A SCRATCH RUN
         BO    DOSCRTCH                  NO, THEN JUST PRINT IT
         MVC   NOCATSCR(21),CANDSCR       MOVE IN STATUS
         B     NCATOUT                  AND DON'T SCRATCH IT
DOSCRTCH EQU   *
         SCRATCH CAMSCR
         LTR   R15,R15                  WAS IT A GOOD SCRATCH
         BZ    GOODSCR                  YES, THEN CONTINUE BRETHREN
         CVD   R15,DOUBLE               MAKE RC PRINTABLE
         UNPK  ERRCODE2(3),DOUBLE+6(2)   TAKE A GUESS WHAT THIS DOES ?
         OI    ERRCODE2+2,X'F0'          MAKE SURE SIGN IS OKAY
         MVC   ERRSDSN(44),0(R11)    STORE THE NAME FOR ERROR
         OI    FLAG,X'40'               FLAG TO SAY PRINT TWICE
         CLI   RTCODE+3,X'08'           IS OUT OVERALL RC GT 8
         BH    NORCSCR                  YES, THEN DO NOT LOWER IT
         MVI   RTCODE+3,X'08'           SET OVERALL RC  TO 8
NORCSCR  LA    R1,ERRSCR                PRINT THIS RECORD
         L     R15,ADOOUT1              GET ADDRESS OF PRINT SECTION
         BALR  R14,R15                  GO AND PRINT IT
         B     INCRCATF                 INCREASE CATALOG RECORD
GOODSCR  MVC   NOCATSCR(9),SCRKWD        MOVE IN SCRATCH STATUS
         AP    TOTNVS4(3),PACK1(1)      KEEP COUNT OF THIS AS WELL
NCATOUT  LA    R1,NOTCAT                PRINT THIS RECORD
         L     R15,ADOOUT2              GET ADDR OF VOLUME PRINT SECT
         BALR  R14,R15                  GO AND PRINT IT
         MVC   NOCATSCR(21),BLANKS    BLANK OUT FIELD
INCRVTOC L     R1,VTOCFIND+4          GET FIND LOCATION NUMBER
         LA    R1,1(R1)               INCREMENT TO NEXT RECORD
         ST    R1,VTOCFIND+4          SAVE IT FOR NEXT PASS
         LA    R1,VTOCFIND          POINT TO FIND SEARCH FOR VTOC
         L     R15,VFNDSRCH         AND GO FIND RECORD
         BALR  R14,R15              GO DO IT
         LTR   R15,R15              GOOD FIND
         BNZ   EOFVTOC              NO, THEN NO MORE RECORDS
         LR    R11,R1               GET RECORD POINTER INTO R11
         TM    FLAG,X'04'           DID WE RUN OUT OF VOLUME
         BO    LOOPNODS             YES, THEN KEEP ISSUING MESSAGE
         TM    FLAG,X'20'           WERE THEY EQUAL THEN
         BO    INCRCATF             YES, THEN GO INCREMENT CATALOG
         B     CHECKDSN             NO, THEN KEEP PROCESSING
EOFVTOC  LA    R1,1                 RESET VALUE TO 1
         ST    R1,VTOCFIND+4        AND STORE IT
         L     R1,VTOCRECD          LOAD UP POINTER OF VTOCS FOR CLOSE
         L     R15,VCLOSESC            GET ADDR OF CLOSE ROUTINE
         BALR  R14,R15              GO AND CLOSE IT
         OI    FLAG,X'10'     FLAG DONE AND LOOP THE UNCATALOGS
         ST    R10,FINDADDR           IF NEW VOLSER, ELSE REDUNDANT
         MVC   ALVOLSER,0(R10)        IF NEW VOLSER FOR EOFVTOC
         TM    FLAG,X'04'             HAVE THE VOLSERS CHANGED ?
         BO    ALLOCVTC               YES, THEN GO READ NEXT VTOC
         TM    FLAG,X'20'             WERE THESE FOUND EQUAL  ?
         BO    INCRCATF               YES, THEN GO READ NEXT VTOC
UNCATLG  CLI   51(R10),X'00'         WAS THIS THE MASTER CATALOG
         BE    GOTCATNM              YES, THEN NO HI LEVEL POINTER
         MVC   HILEVEL(8),BLANKS     BLANK IT OUT
         LA    R4,6(R10)             POINT TO DSNAME
         TRT   0(9,R4),PERTBLE       LOOK FOR PERIOD
         SLR   R1,R4                 SUBTRACT FOR LENGTH OF QUALIFIER
         BCTR  R1,0                  DECREMENT FOR MOVE
         EX    R1,MOVEHIL            MVC HILEVEL(0),0(R4)
         LA    R1,HILRECD               (0,HILEVEL) LOC USER
         L     R15,VLOCSRCH             GET ENTRY OF LOCATE ROUTINE
         BALR  R14,R15                  GO LOCATE HI LEVEL QUALIFIER
         LTR   R15,R15                  DID WE FIND IT  ?
         BNZ   NOPNTMSG                 YES, THEN COMPARE CAT NUMS
         CLC   8(1,R1),51(R10)          MAKE SURE SAME CATALOG
         BE    GOTCATNM                 YES, THEN GO UNCATALOG
NOPNTMSG MVC   NOPNTDSN(44),0(R4)       MOVE IN DSNAME
         L     R4,UCATPNTR              GET STORAGE LOCATION OF CAT
         SLR   R3,R3                    CLEAR R3
         SLR   R5,R5                    CLEAR R3
         ICM   R3,1,51(R10)               GET LOCATION NUMBER
         BZ    GOTCATNM      SHOULD NOT BE 0, BUT IF IT IS THEN MSTR
         BCTR  R3,0                     DECR 1 BECAUSE BEGINS AT 1
         MH    R3,HW45                  MULTIPLY BY LENGTH OF ENTRY
         LA    R4,0(R3,R4)              POINT TO CAT ENTRY
         IC    R5,0(R4)                 GET LENGTH OF USERCAT
         SH    R5,HW02                  DECREMENT FOR EXECUTE
         EX    R5,MVENOPNT              MVC  NOPNTCAT(0),1(R4)
         LA    R1,NOTPNTED              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
GOTCATNM MVC   NONVSAM(44),6(R10)        MOVE IN DSNAME FOR LOCATE
         LA    R1,NVSRECD               (0,NONVSAM) LOC USER
         L     R15,VLOCSRCH             GET ENTRY OF LOCATE ROUTINE
         BALR  R14,R15                  GO LOCATE HI LEVEL QUALIFIER
         LTR   R15,R15                  DID WE FIND IT  ?
         BZ    GOODNVSL
         ABEND 028,DUMP
GOODNVSL TM    52(R1),X'01'            DID WE FLAG THIS AS A DUPLICATE
         BZ    SAYUNCAT
         MVC   DUPCDSN(44),6(R10)    MOVE IN DSNAME
         ICM   R3,15,44(R1)          GET 1ST CATALOG NAME
         MVC   DUPCCAT1(27),0(R3)    MOVE IN CATALOG NAME
         ICM   R3,15,48(R1)          GET 2ND CATALOG NAME
         MVC   DUPCCAT2(28),0(R3)    MOVE IN CATALOG NAME
         LA    R1,DUPCREC               PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     INCRCATF
SAYUNCAT OI    50(R10),X'02'         FLAG TO SAY WE UNCATLGED IT
         MVC   UCATVSN(6),ALVOLSER   MOVE IN THE VOLSER
         MVC   UCATDSN(44),6(R10)    STORE THE NAME FOR UNCATLG
         TM    FLAG2,X'10'           IS THIS A TEST RUN
         BZ    PRNTUCAT              YES, THAT DON'T UNCATALOG
         TM    50(R10),X'01'         WAS THIS CATALOGED TO ******
         BZ    DOTHEUCT              NO, THEN UNCATALOG THE DSN
         MVC   SYSRVSN(6),ALVOLSER   MOVE IN THE VOLSER
         MVC   SYSRDSN(44),6(R10)    STORE THE NAME FOR PRINT
         LA    R1,SYSRFILE              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     INCRCATF              AND GO AROUND
DOTHEUCT MVC   VTDSNAME(44),6(R10)   STORE THE NAME FOR UNCATLG
         LA    R15,VTDSNAME             GET ADDRESS FOR CAT PARM LIST
         ST    R15,CTGENT               SAVE IT FOR SVC 26
         L     R4,UCATPNTR              GET STORAGE LOCATION OF CAT
         MVI   CATDSN,C' '              BLANK OUT
         MVC   CATDSN+1(43),CATDSN       ENTIRE FIELD
         SLR   R3,R3                    CLEAR R3
         SLR   R5,R5                    CLEAR R3
         ICM   R3,1,51(R10)             GET LOCATION NUMBER
         BNZ   DECR3NM                  MAKE SURE NOT THE MSTR CAT
         OI    CTGOPTN3,CTGSRH          TELL HIM USE THE MSTR CATALOG
         B     SETNVST                  BR AROUND CODE FOR CATALOG
DECR3NM  BCTR  R3,0                     DECR 1 BECAUSE BEGINS AT 1
         MH    R3,HW45                  MULTIPLY BY LENGTH OF ENTRY
         LA    R4,0(R3,R4)              POINT TO CAT ENTRY
         IC    R5,0(R4)                 GET LENGTH OF USERCAT
         SH    R5,HW02                  DECREMENT FOR EXECUTE
         EX    R5,MVEUCATD              MVC  CATDSN(0),1(R4)
SETNVST  MVI   CTGTYPE,C'A'             TELL HIM NVSAM RECORD TYPE
         LA    R1,CTGPL                 LOAD UP ADDR OF CAT PARM LST
         SVC   26                       ISSUE THE BAD BOY
         NI    CTGOPTN3,X'FB'           TURN OFF MSTR CAT DEF
         LTR   R15,R15
         BZ    GOODCAM1
         CVD   R15,DOUBLE
         UNPK  ERRCODE(3),DOUBLE+6(2)
         OI    ERRCODE+2,X'F0'
         MVC   ERRUDSN(44),6(R10)    STORE THE NAME FOR ERROR
         OI    FLAG,X'40'               FLAG TO SAY PRINT TWICE
         CLI   RTCODE+3,X'08'
         BH    NORCUNCT
         MVI   RTCODE+3,X'08'           SET OVERALL RCC TO 8
NORCUNCT LA    R1,ERRUNCAT              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     INCRCATF
GOODCAM1 AP    TOTNVS2(3),PACK1(1)   KEEP COUNT OF THOSE UNCATLGED
PRNTUCAT LA    R1,UNCATDSN              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
INCRCATF NI    FLAG,X'DF'            RESET IF EQUAL FLAG
         L     R1,CATFIND+4          INCREMENT THROUGH CAT TABLE
         LA    R1,1(R1)              BY INCREASING TO NEXT REC NUM
         ST    R1,CATFIND+4          SAVE THE COUNTER FOR NEXT RECORD
         LA    R1,CATFIND            GET DATA FOR FIND ROUTINE
         L     R15,VFNDSRCH          GET ADDRESS OF FIND ROUTINE
         BALR  R14,R15               GO AND FIND THE NASTY RECORD
         LR    R10,R1                LOAD LOCATION INTO R10
         LTR   R15,R15               EOF FOR CAT DSNS
         BNZ   EOFCAT                YES, THEN GO SET AND DECIDE
         TM    FLAG,X'10'             DO WE HAVE END OF VTOC
         BZ    FCATSET               NO, THEN GO COMPARE NEXT
         CLC   ALVOLSER(6),0(R10)    HAVE THE VOLSERS CHANGED
         BE    UNCATLG              NO, THEN KEEP UNCATALOGING
         MVC   ALVOLSER(6),0(R10)    MOVE IN THE NEW VOLSER
         ST    R10,FINDADDR          SAVE THIS ADDRESS
         B     ALLOCVTC              AND GO READ ANOTHER VTOC
*********************************************************************
*  WE ARE NOW GOING TO BE POLITE AND CLOSE OUR BINARY SEARCH TABLES *
*  THAT WE'RE FINISHED WITH.                                        *
*********************************************************************
EOFCAT   L     R1,CATRECD
         L     R15,VCLOSESC
         BALR  R14,R15
         L     R1,UCBRECD
         L     R15,VCLOSESC
         BALR  R14,R15
         L     R1,USERRECD                CLOSE UP THE USERLIST TABLE
         L     R15,VCLOSESC               ADDR OF CLOSE ROUTINE
         BALR  R14,R15                    GO DO IT BEULA
         LA    R1,VTDSNAME            LOAD UP ADDRESS OF ALIAS
         ST    R1,CTGENT              SAVE ADDRESS FOR DELETE REQ
*********************************************************************
*  NEXT TO BE PROCESSED ARE ALIAS ENTRIES FOR OTHER NONVSAM DSNAMES *
*  NO  LONGER EXIST. IF ANY ARE FOUND THEY WILL BE UNCATALOGED.     *
*********************************************************************
GOTALISS NI    FLAG2,X'7F'            PLEASE RESET FLAG FOR LOOPING
         L     R1,ALISFIND+4         GET LOCATION # NEXT ALIAS
         LA    R1,1(R1)              INCREMENT TO POINT TO IT
         ST    R1,ALISFIND+4         SAVE FOR NEXT RECORD
         LA    R1,ALISFIND         MAINTAIN POINTER FOR BINARY FIND
         L     R15,VFNDSRCH               GO FIND FIRST RECORD
         BALR  R14,R15                    IN CATALOG RECORD TABLE
         LTR   R15,R15                    DID WE FIND IT
         BNZ   EOFALIAS           YES, THEN ONWARD CHRISTIAN SOLDIERS
         LR    R9,R1               STORE IF FOR LATER
         L     R4,UCATPNTR              GET STORAGE LOCATION OF CAT
         SLR   R3,R3                    CLEAR R3
         SLR   R5,R5                    CLEAR R3
         IC    R3,88(R9)                GET LOCATION NUMBER
         BCTR  R3,0                     DECR 1 BECAUSE BEGINS AT 1
         MH    R3,HW45                  MULTIPLY BY LENGTH OF ENTRY
         LA    R4,0(R3,R4)              POINT TO CAT ENTRY
         IC    R5,0(R4)                 GET LENGTH OF USERCAT
         SH    R5,HW02                  DECREMENT FOR EXECUTE
         MVI   CATDSN,C' '              BLANK OUT
         MVC   CATDSN+1(43),CATDSN       ENTIRE FIELD
         EX    R5,MVEUCATD              MVC  CATDSN(0),1(R4)
UNCATAL  MVC   HILEVEL(8),BLANKS     BLANK IT OUT
         LR    R4,R9                 POINT TO DSNAME
         TRT   0(9,R4),PERTBLE       LOOK FOR PERIOD
         SLR   R1,R4
         BCTR  R1,0
         EX    R1,MOVEHIL            MVC HILEVEL(0),0(R4)
         LA    R1,HILRECD               (0,HILEVEL) LOC USER
         L     R15,VLOCSRCH             GET ENTRY OF LOCATE ROUTINE
         BALR  R14,R15                  GO LOCATE HI LEVEL QUALIFIER
         LTR   R15,R15                  DID WE FIND IT  ?
         BNZ   NOPNTMGA                 YES, THEN COMPARE CAT NUMS
         TM    89(R9),X'80'             DID WE FLAG AS A DUPLICATE
         BO    DONTUCTA                 YES, THEN DONT UNCATLG
         CLC   8(1,R1),88(R9)           MAKE SURE SAME CATALOG
         BE    VERALEXT              YES, THEN GO VERIFY ENTRY EXISTS
DONTUCTA OI    FLAG2,X'80'           DO NOT UNCATLG
NOPNTMGA MVC   NOPNTDSN(44),0(R4)       MOVE IN DSNAME
         EX    R5,MVENOPNT              MVC  NOPNTCAT(0),1(R4)
         LA    R1,NOTPNTED              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     ALIASUNC
VERALEXT MVC   NONVSAM(44),44(R9)        MOVE IN DSNAME FOR LOCATE
         LA    R1,NVSRECD               (0,NONVSAM) LOC USER
         L     R15,VLOCSRCH             GET ENTRY OF LOCATE ROUTINE
         BALR  R14,R15                  GO LOCATE HI LEVEL QUALIFIER
         LTR   R15,R15                  DID WE FIND IT  ?
         BZ    GOTALISS
         MVC   NOMTCHAL(44),0(R9)
         LA    R1,NOMATCH               PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
ALIASUNC TM    FLAG2,X'80'           DO WE REALLY WANT TO UNCATLG IT
         BO    GOTALISS              NO, THEN DO NEXT
         MVC   DELADSN(44),0(R9)         MOVE IN THE ALIAS NAME
         MVC   DELAREL(44),44(R9)        MOVE IN RELATED ENTRY NAME
         TM    FLAG2,X'10'           IS THIS A TEST RUN
         BZ    PRTALREC              YES, THAT JUST PRINT RECORD
         MVC   VTDSNAME(44),0(R9)    STORE THE NAME FOR UNCATLG
         LA    R1,CTGPL                 LOAD UP ADDR OF CAT PARM LST
         SVC   26                       ISSUE THE BAD BOY
         LTR   R15,R15                  VERIFY THAT REQUEST WORKED
         BZ    GOODCAM2                 YES, THEN KEEP ON
         CVD   R15,DOUBLE
         UNPK  ERRCODED(3),DOUBLE+6(2)
         OI    ERRCODED+2,X'F0'
         MVC   ERRDDSN(44),0(R9)     STORE THE NAME FOR ERROR
         OI    FLAG,X'40'               FLAG TO SAY PRINT TWICE
         CLI   RTCODE+3,X'08'
         BH    NORCDEL2
         MVI   RTCODE+3,X'08'           SET OVERALL RCC TO 8
NORCDEL2 LA    R1,ERRDELAL              PRINT THIS RECORD
         L     R15,ADOOUT1
         BALR  R14,R15
         B     GOTALISS
GOODCAM2 AP    TOTALIS2(3),PACK1(1)   KEEP COUNT OF THOSE UNCATLGED
PRTALREC LA    R1,DELALDSN
         L     R15,ADOOUT1
         BALR  R14,R15
         B     GOTALISS
EOFALIAS L     R1,ALIASREC           LOAD UP ADDRESS FOR CLOSE
         L     R15,VCLOSESC          LOAD ADDRESS OF CLOSE ROUTINE
         BALR  R14,R15               GO AND CLOSE THIS TABLE
         L     R1,HILRECD
         L     R15,VCLOSESC
         BALR  R14,R15
        FREEMAIN EC,LV=19460,A=STRADDR1
        L     R15,ATOTALS
        BALR  R14,R15
        CLOSE (SYSPRIN1,,SYSPRIN2)
LOADRTCD L     R15,RTCODE
RETURN   L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
        EJECT
VTOCDCB  DCB   DDNAME=VTOCDCB,DSORG=PS,MACRF=E,EXLST=JFCBLIST
         DC    5F'0'
SYSPRIN1 DCB   DDNAME=SYSPRIN1,DSORG=PS,MACRF=PM,LRECL=121,RECFM=FBA,  X
               BLKSIZE=12100
SYSPRIN2 DCB   DDNAME=SYSPRIN2,DSORG=PS,MACRF=PM,LRECL=121,RECFM=FBA,  X
               BLKSIZE=12100
GETACB   ACB   AM=VSAM,CATALOG=NO,DDNAME=SYS00099,EXLST=ERROR,         X
               MACRF=(KEY,NFX,NDF,SEQ,NCI,IN,NIS,NRM,NRS,NUB),         X
               BUFSP=10240
ERROR    EXLST AM=VSAM,EODAD=CLOSEACB
OPENLIST OPEN  (VTOCDCB,(INPUT)),MF=L
JFCBLIST DS    0F
         DC    X'07'
         DC    AL3(JFCBAREA)
         DC    X'FF'
**********************************************************************
* RECADDR IS NOT WHERE THE RECORD WILL BE STORED. I WILL DO A GETMAIN
* AND STORE THE ADDRESS AT 32 PAST RPL OVERRIDING THE SPECIFICATION
* IN THE MACRO. I WILL STORE THE ADDRESS OF THE STORAGE AT RECADDR AS
* WELL AND USE THAT LOCATION TO PROCESS RECORDS. GET LOCATE WOULDN'T
* WORK BECAUSE A RECORD SPANS A CONTROL INTERVAL (4400+BYTES), SO I
* CHANGED IT TO A GET MOVE AND DID NOT WANT A WORK AREA OF 10000+BYTES
* INSIDE MY MODULE.
GETRPL   RPL   ACB=GETACB,AM=VSAM,AREA=RECADDR,AREALEN=10240,          X
               OPTCD=(KEY,SEQ,ARD,FWD,SYN,NUP,MVE)
CCW      CCW   X'23',SECTOR,X'40',1    SET SECTOR
         CCW   X'31',IOB+35,X'40',5    SEARCH ID EQUAL
         CCW   X'08',*-8,0,0           TIC
READCCW  CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
         CCW   X'0E',0,X'60',140       READ KEY AND DATA
ENDCCWS  CCW   X'0E',0,X'60',140       READ KEY AND DATA
SETSECT  CCW   X'22',SECTOR,0,1        READ SECTOR OF LAST RECORD READ
*                                      AND SAVE FOR NEXT READ
IOB     DC    10F'0'
         ORG   IOB+0           IOBFLAG1
         DC    B'01000010'     CMD CHAIN,RELATED REQ
         ORG   IOB+5
         DC    AL3(ECB)
         ORG   IOB+17
         DC    AL3(CCW)
         ORG   IOB+21
         DC    AL3(VTOCDCB)
         ORG
ECB     DC    F'0'
SECTOR   DC    X'00'
CAMSCR   CAMLST SCRATCH,NONVSAM,,VOLLIST,,OVRD
CTGPL    DS    0D
*
CTGOPTN1 DC    X'06'    CTGNAME CTGCNAME
CTGOPTN2 DC    X'00'
CTGOPTN3 DC    X'83'    CTGNUM CTGAM0 CTGCMS
CTGSRH   EQU   X'04'    MASTER CATALOG ONLY
CTGOPTN4 DC    X'01'    CTGICFOR
*** NEXT FIELD WILL BE RESET IF OTHER THEN USERIDS ARE TO BE DELETED
CTGENT   DC    A(ALISDSNS)  ADDRESS OF ALIAS NAME FOR DELETE
CTGCAT   DC    A(CATDSN)  ADDRESS OF CATALOG NAME
CTGWKA   DC    A(0)     ADDRESS OF CALLER'S WORK AREA
CTGOPTNS DC    X'18'    DELETE FUNCTION
         DC    X'00'          RESERVED
*
*** NEXT FIELD WILL BE RESET IF OTHER THEN ALIASES ARE TO BE DELETED
CTGTYPE  DC    C'X'     ALIAS CATALOG RECORD DEFAULT
CTGNOFLD DC    X'00'          NUMBER OF ENTRIES IN CTGFIELD
CTGFDBK  DC    XL2'00'        FEEDBACK AREA
CTGFBFLG DC    X'00'          FLAGS (SUPERLOCATE)
         DC    X'00'          RESERVED
CTGJSCB  DC    A(0)           ADDRESS OF JSCB
******** END OF CATALOG PARAMETER LIST FOR SVC 26
VOLLIST  DC    H'1'
VOLDEVT  DC    X'00000000'          UPDATE WITH DEVICE TYPE
VOLVSN   DC    CL6' '               VOLUME SERIAL # WHERE DSN LIVES
         DC    H'0'                 SCRATCH STATUS CODE
         DS    0H
COMPUCAT CLC   0(0,R3),60(R7)
MOVEHIL  MVC   HILEVEL(0),0(R4)
MOVEUSR  MVC   USERID(0),0(R4)
MVEADSN2 MVC   ALISDSN2(0),61(R7)
MVEUCAT  MVC   0(0,R3),60(R7)
MVEDELAL MVC   DELAREL(0),61(R7)
MVECATAL MVC   CATDSN(0),1(R3)
MVEHICAT MVC   BADHICAT(0),61(R7)
MVENOPNT MVC   NOPNTCAT(0),1(R4)
MVEUCATD MVC   CATDSN(0),1(R4)
HW00     DC    H'00'
HW01     DC    H'01'
HW02     DC    H'02'
HW03     DC    H'03'
HW04     DC    H'04'
HW05     DC    H'05'
HW06     DC    H'06'
HW08     DC    H'08'
HW45     DC    H'45'
* TYPE        UCBTYP  #TRKS   #DSCBS/TRK
DEV3380  DC    X'0E',X'000F',X'0035'
DEV3375  DC    X'0C',X'000C',X'0033'
DEV3350  DC    X'0B',X'001E',X'002F'
DEV33301 DC    X'0D',X'0013',X'0027'
DEV3330  DC    X'09',X'0013',X'0027'
JFCBAREA DS    0F,176C
S99PARM  DC    X'80',AL3(S99AREA)  ADDRESS OF SVC 99 REQUEST BLOCK
S99AREA  DC    AL1(S99RBEND-S99RB) LENGTH OF REQUEST BLOCK
         DC    X'01'               VERB CODE
         DC    XL6'00'
         DC    A(VTTUPTR)          POINTER TO LIST OF TEXT UNIT PTRS
         DC    XL8'00'
         SPACE 1
VTTUPTR  DC    A(ALDDTU)           ADDR OF DDNAME TEXT UNIT
         DC    A(ALVLTU)           ADDR OF VOLSER TEXT UNIT
         DC    A(ALUNTU)           ADDR OF UNIT TEXT UNIT
         DC    A(ALFCTU)           ADDR OF FREE CLOSE TEXT UNIT
         DC    X'80',AL3(ALDDSP)   ADDR OF DISP TEXT UNIT
         SPACE 1
CATUPTR  DC    A(ALDSNTU)          ADDR OF DDNAME TEXT UNIT
         DC    A(ALDDTU2)          ADDR OF VOLSER TEXT UNIT
         DC    A(ALFCTU)           ADDR OF FREE CLOSE TEXT UNIT
         DC    X'80',AL3(ALDDSP)   ADDR OF DISP TEXT UNIT
         SPACE 1
ALDDTU   DC    X'0001'             DDNAME
         DC    X'0001'             ONE PARAMETER
         DC    X'0008'             LENGTH OF PARAMETER
ALDDNAM  DC    CL8'VTOCDCB '       AREA FOR DDNAME
         DS    0H
ALDDTU2  DC    X'0001'             DDNAME
         DC    X'0001'             ONE PARAMETER
         DC    X'0008'             LENGTH OF PARAMETER
         DC    CL8'SYS00099'       AREA FOR DDNAME
         DS    0H
ALDSNTU  DC    X'0002'             DSNAME
         DC    X'0001'             ONE PARAMETER
         DC    X'002C'             LENGTH OF PARAMETER
CATDSN   DC    CL44' '             AREA FOR DSNAME
         DS    0H
ALVLTU   DC    X'0010'             VOLSER
         DC    X'0001'             ONE PARAMETER
         DC    X'0006'             LENGTH OF PARAMETER
ALVOLSER DC    CL6'      '         AREA FOR VOLUME SERIAL NUMBER
         DS    0H
ALUNTU   DC    X'0015'             VOLSER
         DC    X'0001'             ONE PARAMETER
         DC    X'0008'             LENGTH OF PARAMETER
ALUNIT   DC    CL8'SYSALLDA'       AREA FOR DASD UNITNAME
         DS    0H
ALFCTU   DC    X'001C'             FREE = CLOSE
         DC    X'0000'             0 PARAMETER
         DS    0H
ALDDSP   DC    X'0004'             OVERRIDE DISPOSITION
         DC    X'0001'             ONE PARAMETER
         DC    X'0001'             LENGTH OF PARAMETER
         DC    X'08'               DISPOSITION OF SHR
         SPACE 1
DOUBLE   DC    D'0'             DOUBLE WORD OF 0
RECADDR  DS    F                ADDR OF RECORD WITHIN BUFFER
FEEDBCK  DS    F                FEEDBACK AREA FROM GET REQUEST
STRADDR1 DC    F'0'
PARMADDR DC    F'0'
UCATADDR DC    F'0'
UCATPNTR DC    F'0'
RTCODE   DC    F'0'
ENDUCAT  DC    F'0'
FINDADDR DC    F'0'
CURRTRKS DC    F'0'
CCWSVAD  DC    F'0'
ATOTALS  DC    A(TOTALS)
ADOOUT1  DC    A(DOOUT1)
ADOOUT2  DC    A(DOOUT2)
ADOPARMS DC    A(DOPARMS)
ADOUSERL DC    A(DOUSERL)
DSCBLEFT DC    H'0'
CATLGNUM DC    H'00'
MLINECNT DC    H'80'
CCWSAVE  DC    CL8' '
**********************************************************************
*  DO NOT MOVE OR INSERT ANY RECORDS FROM HERE DOWN TO NEXT LINE OF  *
*  ASTERISKS                                                         *
ALIASENT DC    A(90,0,44)                                            *
ALIASREC DC    A(0,ALISDSNS)                                         *
HILENT   DC    A(9,0,8)                                              *
HILRECD  DC    A(0,HILEVEL)                                          *
CATENT   DC    A(52,0,50)                                            *
CATRECD  DC    A(0,VTVOLSER)                                         *
NVSENT   DC    A(53,0,44)                                            *
NVSRECD  DC    A(0,NONVSAM)                                          *
VTOCENT  DC    A(44,0,44)                                            *
VTOCRECD DC    A(0,VTDSNAME)                                         *
USERENT  DC    A(5,0,5)                                              *
USERRECD DC    A(0,USERID)                                           *
UCBENT   DC    A(6,0,6)                                              *
UCBRECD  DC    A(0,VTVOLSER)                                         *
CATFIND  DC    A(0,1)                                                *
VTOCFIND DC    A(0,1)                                                *
ALISFIND DC    A(0,0)                FIRST PASS WILL SET TO 1        *
VOPENSCH DC    V(OPENSRCH)                                           *
VINSRCH  DC    V(INSRCH)                                             *
VLOCSRCH DC    V(LOCSRCH)                                            *
VFNDSRCH DC    V(FNDSRCH)                                            *
VCLOSESC DC    V(CLOSESCH)                                           *
FLAG     DC    X'00'                                                 *
FLAG2    DC    X'00'                                                 *
TEMPDSN  DC    CL8'SYS '                                             *
USERID   DC    CL5' '                                                *
VTVOLSER DC    CL6' '                                                *
VTDSNAME DC    CL44' '                                               *
CATFLAG1 DC    X'00'                                                 *
CATFLAG2 DC    X'00'                                                 *
NONVSAM  DC    CL44' '                                               *
NVSCATA1 DC    4X'00'                                                *
NVSCATA2 DC    4X'00'                                                *
NVSFLAG1 DC    X'00'                                                 *
HILEVEL  DC    CL8' '                                                *
HILCAT   DC    X'00'                                                 *
ALISDSNS DC    CL44' '                                               *
ALISDSN2 DC    CL44' '                                               *
CATFLAG3 DC    X'00'                                                 *
CATFLAG4 DC    X'00'                                                 *
SRCHVSN  DC    CL6' '                                                *
SYSRES   DC    CL6' '                                                *
PACK1    DC    PL1'1'                                                *
TOTCAT1  DC    PL3'0'                                                *
TOTVOL1  DC    PL3'0'                                                *
TOTUCAT1 DC    PL3'0'                                                *
TOTVSM1  DC    PL3'0'                                                *
TOTGDG1  DC    PL3'0'                                                *
TOTNVS1  DC    PL3'0'                                                *
TOTNVS2  DC    PL3'0'                                                *
TOTNVS3  DC    PL3'0'                                                *
TOTNVS4  DC    PL3'0'                                                *
TOTALIS1 DC    PL3'0'                                                *
TOTALIS2 DC    PL3'0'                                                *
TOTHIL1  DC    PL3'0'                                                *
TOTHIL2  DC    PL3'0'                                                *
TOTNCAT1 DC    PL3'0'                                                *
TOTUSER1 DC    PL3'0'                                                *
TOTUSER2 DC    PL3'0'                                                *
*        OR ELSE YOUR RESULTS WOULD BE EXTREMELY AMUSING.            *
**********************************************************************
MSTRCAT  DC    CL44' '
CANDSCR  DC    CL23'CANDIDATE FOR SCRATCHED'
SCRKWD   EQU   CANDSCR+14
BLANKS   DC    CL40' '
CATOPERR WTO   'CATALOG OPEN ERROR; VERIFY THAT A STEPCAT IS PRESENT FO+
               R CATALOG                                            ', +
               MF=L
NOTCAT   DS    0CL121
         DC    C' '
NOCATDSN DC    CL44' '
         DC    CL29' IS NOT CATALOGUED ON VOLUME '
NOCATVSN DC    CL6' '
         DC    CL10'. '
NOCATSCR DC    CL31' '
ERRUNCAT DS    0CL121
         DC    CL20' ERROR UNCATALOGING '
UNCATKW  EQU   ERRUNCAT+7
ERRUDSN  DC    CL44' '
         DC    CL5'; RC='
ERRCODE  DC    CL52' '
ERRDELAL DS    0CL121
         DC    CL22' ERROR DELETING ALIAS '
ERRDDSN  DC    CL44' '
         DC    CL5'; RC='
ERRCODED DC    CL50' '
ERRSCR   DS    0CL121
         DC    CL18' ERROR SCRATCHING '
ERRSDSN  DC    CL44' '
         DC    CL5'; RC='
ERRCODE2 DC    CL54' '
DELALDSN DS    0CL121
         DC    CL7' ALIAS '
DELADSN  DC    CL44' '
         DC    CL12' RELATED TO '
DELAREL  DC    CL44' '
         DC    CL14', WAS DELETED '
UNCATDSN DS    0CL121
         DC    CL5' DSN '
UCATDSN  DC    CL44' '
         DC    CL21' CATALOGED TO VOLUME '
UCATVSN  DC    CL6' '
         DC    CL45', DID NOT EXIST, AND WAS UNCATALOGED'
SYSRFILE DS    0CL121
         DC    CL5' DSN '
SYSRDSN  DC    CL45' '
         DC    CL10'ON VOLUME '
SYSRVSN  DC    CL7' '
         DC    CL34'NOT ON SYSRES VOLUME DEFINED WITH '
ASTRKWD  DC    CL20'******. NO UNCAT.'
BADALIAS DS    0CL121
         DC    CL7' ALIAS '
HILEVELM DC    CL9' '
         DC    CL7'IN CAT '
BADOWCAT DC    CL45' '
         DC    CL8'FOR CAT '
BADHICAT DC    CL45' '
NOTPNTED DS    0CL121
         DC    CL15' NO POINTER TO '
NOPNTDSN DC    CL45' '
         DC    CL7'IN CAT '
NOPNTCAT DC    CL34' '
NOPNTSTT DC    CL20' '
NOMATCH  DS    0CL121
         DC    CL45' NO MATCHING NONVSAM DATASET ENTRY FOR ALIAS '
NOMTCHAL DC    CL44' '
         DC    CL32'; ALIAS WILL BE UNCATALOGED.'
NOF1DSCB DS    0CL121
         DC    CL8' VOLUME '
NOF1VSN  DC    CL7' '
         DC    CL106'HAS NO FOMRAT 1 DSCBS ON IT. PLEASE VERIFY.'
DUPCREC  DS    0CL121
         DC    CL15' DUPLICATE DSN '
DUPCDSN  DC    CL44' '
         DC    CL7'IN CAT '
DUPCCAT1 DC    CL27' '
         DC    CL5' AND '
DUPCCAT2 DC    CL28' '
DUPAREC  DS    0CL121
         DC    CL7' ALIAS '
DUPADSN  DC    CL44' '
         DC    CL7'IN CAT '
DUPACAT1 DC    CL44' '
         DC    CL15'IS A DUPLICATE.'
         LTORG
         DS    0F
PERTBLE  DC    256X'00'
         ORG   PERTBLE+C' '
         DC    X'FF'
         ORG   PERTBLE+C'.'
         DC    X'FF'
         ORG
         EJECT
******************************************************************
*  THIS SECTION WILL BE CONCERNED WITH PROCESSING OUR PARM       *
* VALUES.                                                        *
******************************************************************
         USING DOPARMS,R10
DOPARMS  ST    R14,PARMR14
         LA    R4,2(R4)            POINT TO PARMS
LOOPTHRU TM    FLAG2,X'40'         HAVE WE DONE UNCAT
         BO    TRYSCR
         CLC   0(5,R4),UNCATKW     IS IT UNCAT
         BNE   TRYSCR              NO, THEN TRY SCR PARM
         OI    FLAG2,X'10'         FLAG TO SAY UNCAT RUN
         LA    R4,6(R4)            INCREMENT PAST UNCAT AND COMMA
         SH    R3,HW06             DECREMENT COUNTER
         LTR   R3,R3               IF PLUS CONTINUE
         BNP   PARMRET             IF 0 OR - THEN FINISHED
TRYSCR   TM    FLAG2,X'08'         HAVE WE DONE SCR PARM YET
         BO    TRYLNEC
         CLC   0(3,R4),SCRKWD      IS IT SCRATCH
         BNE   TRYLNEC             NO, THEN TRY TRY LINE COUNT
         OI    FLAG2,X'04'         FLAG TO SAY SCRATCH RUN
         LA    R4,4(R4)            INCREMENT PAST SCRTH AND COMMA
         SH    R3,HW04             DECREMENT COUNTER
         LTR   R3,R3               IF PLUS CONTINUE
         BNP   PARMRET             IF 0 OR - THEN FINISHED
         B     LOOPTHRU            NO, THEN LOOP THRU
TRYLNEC  TM    FLAG2,X'20'         HAVE WE PROCESSED LINECNT YET
         BO    INVALPRM            YES, THEN WE ARE CONFUSED, BYE
         CLC   0(8,R4),=C'LINECNT='    IS THIS OUR LINE COUNT
         BNE   INVALPRM             NO, THEN SOME INVALID PARM
         OI    FLAG2,X'20'          FLAG TO SAY WE GOT IT
         SH    R3,HW08              DECREMENT 8 FOR WHAT WE HAVE
         LTR   R3,R3                ANYTHING LEFT IN R3
         BNP   INVALPRM             THEY ARE WRONG THEN
         LA    R4,8(R4)             POINT PAST = SIGN
         CLI   1(R4),C'0'           IS SECOND DIGIT 0 OR GT
         BNL   TWODIGIT             YES, THEN WE HAVE 2 DIGITS
         CLI   0(R4),C'0'           MUST BE 0 OR HIGHER
         BL    INVALPRM             NO, THEN INVALID PARM
         PACK  DOUBLE(8),0(1,R4)   YES, THEN JUST PACK THE ONE
         SH    R3,HW02              DECRMENT 2, 1 FOR COMMA
         LA    R4,2(R4)             POINT PAST
         B     STORLNE              STORE THE NUMBER
TWODIGIT CLI   0(R4),C'0'           MUST BE 0 OR HIGHER
         BL    INVALPRM             NO, THEN INVALID PARM
         PACK  DOUBLE(8),0(2,R4)    GO AHEAD AND MAKE PACKED
         LA    R4,3(R4)             POINT PAST FIELD
         SH    R3,HW03              DECR 3, 1 FOR COMMA
STORLNE  CVB   R15,DOUBLE           CONVERT IT TO BINARY
         CH    R15,HW08             HAS TO BE GREATER THAN 8
         BNH   INVALPRM             NO, THEN GIVE YO-YO MSG
         STH   R15,MLINECNT         STORE IN LINE COUNT FIELD
         LTR   R3,R3                DO WE HAVE ANY PARMS LEFT
         BNP   PARMDONE             NO, THEN QUIT
         B     LOOPTHRU             GO LOOK FOR UNCAT THEN
INVALPRM EQU   *
         WTO   'INVALID PARAMETER; PARMS ARE UNCAT, SCR, AND OR LINECNT+
               =9 THROUGH 99'
         MVI   RTCODE+3,X'10'            MOVE IN RETURN CODE OF 16
         B     RETURN                    JUST QUIT IF PARMS BAD
PARMRET  L     R14,PARMR14
         BR    R14
PARMR14  DS    F
         LTORG
         DROP  R10
******************************************************************
*  THIS SECTION WILL PREPARE A BINARY SEARCH TABLE FOR THE       *
* USERLIST, AND THEN FILL IT WITH VALID USERLIST ID'S            *
******************************************************************
         USING DOUSERL,R10
DOUSERL  ST    R14,RETDUSER
         LA    R1,USERENT           (5,0,5)
         L     R15,VOPENSCH         ADDRESS OF OPEN SEARCH
         BALR  R14,R15              GO DO IT
         LTR   R1,R1                GOOD OPEN
         BNZ   GOODUOP              YES, AN ADDRESS THERE
         ABEND 002,DUMP
GOODUOP  ST    R1,USERRECD          SAVE AT  (0,USERID)
         OPEN  USERLIST
         TM    USERLIST+48,X'10'    GOOD OPEN
         BO    LOOPUSER                   THEN CONTINUE TO NEXT
         ABEND 001,DUMP
LOOPUSER GET   USERLIST
         CLI   79(R1),C'1'            IS THIS A VALID USER
         BNE   LOOPUSER               NO, THEN NO TABLE ENTRY
         AP    TOTUSER1(3),PACK1(1)   MAINTAIN COUNTER
         MVC   USERID(5),40(R1)       MOVE USERID INTO RECORD ENTRY
         LA    R1,USERRECD            LOAD POINTER INTO R1
         L     R15,VINSRCH            GET INSERT ADDR IN R15
         BALR  R14,R15                GO INSERT INTO TABLE
         LTR   R15,R15                GOOD INSERT, NO DUPS, ETC...
         BZ    LOOPUSER               YES, THEN GET NEXT
         ABEND 003,DUMP
EODUSER  CLOSE USERLIST
         L     R14,RETDUSER
         BR    R14
USERLIST DCB   DDNAME=USERLIST,DSORG=PS,MACRF=GL,EODAD=EODUSER
RETDUSER DC    F'0'
         LTORG
         DROP  R10
         EJECT
******************************************************************
*  THIS IS OUR HANDSOMELY PRODUCED OUTPUT SECTION. REGISTERS ARE *
* SAVED ON ENTRY AND THEN RESTORED AT DEPARTURE.                 *
******************************************************************
         USING DOOUT1,R15
DOOUT1   STM   R2,R14,OUTSAVE1    SAVE THE REGS
         LR    R10,R15
         LA    R11,2048(R10)
         LA    R11,2048(R11)
         LR    R9,R1              SAVE THE PRINT LINE ADDRESS
         DROP  R15
         USING DOOUT1,R10,R11
         TM    OUTFLAG,X'01'      IS THIS THE FIRST PASS THRU
         BO    GETLNCT            NO, THEN GO AROUND
         OI    OUTFLAG,X'01'      SET IT
******************************************************************
*  THIS NEXT SECTION WILL BE USED TO PRINT A SUMMARY OF THIS PRO-*
*  GRAM TO INCLUDE PARM VALUES, AND A DESCRIPTION.               *
******************************************************************
         L     R2,PARMADDR
         LH    R3,0(R2)
         LTR   R3,R3
         BZ    NOPARMV
         BCTR  R3,0
         EX    R3,MVEPARM
NOPARMV  EQU   *
         LA    R2,HDRLNE1
         LA    R5,ENDLIST
         LA    R4,121
PRTPRM   EQU   *
         PUT   SYSPRIN1,(2)
         BXLE  R2,R4,PRTPRM
DATEMOVE MVC   DATE+7(2),TEMPDSN+3  MOVE IN JULIAN DATE
         MVC   DATE+10(3),TEMPDSN+5 AND THE REST OF IT
         TM    FLAG2,X'10'        IS THIS AN UNCATALOG RUN
         BZ    GETLNCT            NO, THE LEAVE MESSAGE LINE ALONE
         MVC   TESTRUN(40),BLANKS BLANK OUT STATEMENT
GETLNCT  LH    R2,LINECNT1        RELOAD LINE COUNT
         LTR   R2,R2              ARE WE AT TOP OF PAGE
         BNZ   OMVEOUT            NO, THEN DON'T PRINT HEADERS
         LA    R2,6(R2)           INCREMENT COUNTER
         PUT   SYSPRIN1,HEADER1A
         PUT   SYSPRIN1,HEADER1B
         MVI   0(R9),C'-'         DO A TRIPLE SPACE
OMVEOUT  EQU   *
         PUT   SYSPRIN1,(9)
         TM    FLAG,X'40'         ARE WE PRINTING AN ERROR MSG
         BZ    SETTOONE           NO, THEN JUST CONTINUE
         MVI   0(R9),C'+'         SUPPRESS SKIPPING
         PUT   SYSPRIN1,(9)
         NI    FLAG,X'BF'         RESET FLAG
SETTOONE MVI   0(R9),C' '         RESET TO SINGLE SPACE
INCROUT  LA    R2,1(R2)           EITHER WAY INCREMENT COUNTER
         CH    R2,MLINECNT        ARE WE AT THE MAX LINECNT
         BL    GOBACK             NO, THEN SAVE R2 COUNTER AS IS
         SLR   R2,R2              YES, RESET TO 0
GOBACK   STH   R2,LINECNT1        STORE EITHER 0 OR COUNT
         LM    R2,R14,OUTSAVE1    RESTORE REGS
         BR    R14                RETURN TO NIMH
OUTSAVE1 DS    13F
MVEPARM  MVC   PARMSIN(0),2(R2)
LINECNT1 DC    H'00'
OUTFLAG  DC    H'00'
HEADER1A DC    CL121'1       PGM-CATCLEAN          DCEC CATALOG AND VOL+
               UME MAINTENANCE PROGRAM '
         ORG   HEADER1A+90
DATE     DC    CL13'DATE - XX.XXX'
         ORG
HEADER1B DC    CL121'0       ICF CATALOG NONVSAM AND ALIAS ENTRY SECTIO'
               N '
         ORG   HEADER1B+75
TESTRUN  DC    CL40'** TEST RUN, NO PHYSICAL ACTION TAKEN **'
         ORG
HDRLNE1  DC    CL121'1   ICF CATALOG AND DASD VOLUME MAINTENANCE PROGRA+
               M '
HDRLNE2  DC    CL46'-   PARAMETER VALUES IN EFFECT FOR THIS RUN - '
PARMSIN  DC    CL75' '
BEGLIST  EQU   *
 DC CL121'-**********  EXECUTION  PARM  VALUES  **********************'
 DC CL121' *                                                         *'
 DC CL121' *  UNCAT... UNCATALOG INVALID NONVSAM AND ALIAS ENTRIES   *'
 DC CL121' *  SCR..... SCRATCH NON-CATALOGED NONVSAM DATASETS        *'
 DC CL121' *  LINECNT= KEYWORD PARAMETER TO SPECIFY LINES PER PAGE   *'
 DC CL121' *           (DEFAULT 80, MAXIMUM 99, MINIMUM 9)           *'
 DC CL121' *                                                         *'
 DC CL121' **********  PROGRAM DESCRIPTION      **********************'
 DC CL121' *                                                         *'
 DC CL121' *    THIS PROGRAM WILL READ THE MASTER CATALOG AND BUILD  *'
 DC CL121' *  A TABLE OF NONVSAM DATASETS, ALIASES, AND USERCATALOGS *'
 DC CL121' *  WITH VALID POINTERS TO EACH. USERCATALOGS WITH POINTERS*'
 DC CL121' *  WILL BE READ AND THEIR NONVSAM AND ALIAS ENTRIES WILL  *'
 DC CL121' *  ALSO BE STORED IN TABLES. AFTER ALL CATALOGS ARE READ  *'
 DC CL121' *  THE NONVSAM TABLES WILL BE INCREMENTED THROUGH AND THE *'
 DC CL121' *  VOLUMES THEY RESIDE ON WILL HAVE THE VTOCS READ. IF A  *'
 DC CL121' *  DATASET IS CATALOGED BUT NOT ON A VOLUME, IT WILL BE   *'
 DC CL121' *  UNCATALOGED (IF THE PARM WAS REQUESTED), OR LISTED FOR *'
 DC CL121' *  INFORMATION PURPOSES. IF A DATASET IS CATALOGED TO TAPE*'
 DC CL121' *  WITH NO VALID POINTER IT WILL BE UNCATALOGED (IF RE-   *'
 DC CL121' *  QUESTED) OR LISTED. IF THE DATASET EXISTS ON A DASD    *'
 DC CL121' *  VOLUME BUT IS NOT CATALOGED THEN IT WILL BE SCRATCHED  *'
 DC CL121' *  (IF PARM WAS REQUESTED AND HIGH LEVEL QUALIFIER IS IN  *'
 DC CL121' *  USERLIST), AND OR LISTED FOR INFORMATION. HIGH LEVEL   *'
 DC CL121' *  ALIAS ENTRIES THAT ARE IN THE MASTER CATALOG BUT ARE   *'
 DC CL121' *  NO LONGER VALID IN THE USERLIST WILL BE DELETED .      *'
 DC CL121' *  ALIAS ENTRIES FOR OTHER NONVSAM DATASETS WILL BE       *'
 DC CL121' *  VERIFIED AND UNCATALOGED IF NO VALID POINTER EXISTS   .*'
ENDLIST  EQU   *
 DC CL121' ***********************************************************'
         LTORG
         DROP  R10,R11
         EJECT
******************************************************************
*  NEXT SECTION IS HERE TO PRINT THE RECORDS PRODUCED FOR DSNAMES*
*  THAT ARE NOT CATALOGED AND MAY OR MAY NOT BE ELIGIBLE FOR     *
*  SCRATCHING.                                                   *
******************************************************************
         USING DOOUT2,R15
DOOUT2   STM   R2,R14,OUTSAVE2    SAVE THE REGS
         LR    R10,R15            WILL USE AS ADDR. REG
         LR    R9,R1              SAVE THE PRINT LINE ADDRESS
         DROP  R15
         USING DOOUT2,R10
GETLNCT2 LH    R2,LINECNT2        RELOAD LINE COUNT
         LTR   R2,R2              ARE WE AT TOP OF PAGE
         BNZ   OMVEOUT2           NO, THEN DON'T PRINT HEADERS
         LA    R2,3(R2)           INCREMENT COUNTER
         PUT   SYSPRIN2,HEADER2A
         MVI   0(R9),C'-'         DO A TRIPLE SPACE
OMVEOUT2 EQU   *
         PUT   SYSPRIN2,(9)
         MVI   0(R9),C' '         RESET TO SINGLE SPACE
INCROUT2 LA    R2,1(R2)           EITHER WAY INCREMENT COUNTER
         CH    R2,MLINECNT        ARE WE AT THE MAX LINECNT
         BL    GOBACK2            NO, THEN SAVE R2 COUNTER AS IS
         SLR   R2,R2              YES, RESET TO 0
GOBACK2  STH   R2,LINECNT2        STORE EITHER 0 OR COUNT
         LM    R2,R14,OUTSAVE2    RESTORE REGS
         BR    R14                RETURN TO NIMH
OUTSAVE2 DS    13F
LINECNT2 DC    H'00'
HEADER2A DC    CL121'1       PGM-CATCLEAN          DCEC CATALOG AND VOL+
               UME MAINTENANCE PROGRAM - VOLUME ERROR LISTING SECTION'
         LTORG
         DROP  R10
******************************************************************
*  HERE IS WHERE OUR HANDSOME TOTALS ARE CALCULATED AND PRINTED  *
*  AS IF THIS WERE SOME SILLY ASS APPLICATION PROGRAM ALL NEAT   *
*  AND IN ORDER. IT'S ALL FOR SHOW, BUT HEY, I LIKED IT.         *
******************************************************************
         USING TOTALS,R15
TOTALS   STM   R2,R14,TOTSAVE     SAVE THE REGS
         LR    R10,R15
         DROP  R15
         USING TOTALS,R10
         PUT   SYSPRIN2,TOTHDR
         LA    R9,TOTCAT1          POINT TO FIRST ENTRY IN TABLE
         LA    R8,5                LOOP COUNT
         LA    R7,TOTLCAT          POINT TO FIRST ENTRY IN OUTPUT
LOOPTOTS MVC   30(6,R7),MASK       MOVE MASK TO PRINT LINE
         ED    30(6,R7),0(R9)      EDIT IN THE PACKED TOTAL FOR PRINT
         PUT   SYSPRIN2,(7)
         LA    R9,3(R9)            INCREMENT TO NEXT TOTAL
         LA    R7,121(R7)          INCREMENT TO NEXT PRINT LINE
         BCT   R8,LOOPTOTS         LOOP TIL ALL DONE
*  NEXT IS A HANDSOME LITTLE HEADER
         PUT   SYSPRIN2,BEFAFT
         PUT   SYSPRIN2,UNDSCRE
         ED    NUMNVSB(6),TOTNVS1    EDIT # NVSAM BEFORE PROCESSING
         SP    TOTNVS1(3),TOTNVS2    SUBTRACT # UNCATALOGED
         ED    NUMNVSA(6),TOTNVS1    EDIT # NVSAM AFTER PROC. THEN PRT
         PUT   SYSPRIN2,TOTLNVSM
         ED    NUMHILB(6),TOTHIL1    EDIT # HILEVEL INDX BEF PROC
         TM    FLAG2,X'10'                  IS THIS AN UNCATLG RUN
         BZ    NOSUBHI               YES, THEN DON"T SUBTRACT
         SP    TOTHIL1(3),TOTHIL2    SUBTRACT # DELETED
NOSUBHI  ED    NUMHILA(6),TOTHIL1    EDIT IN AFTER NUMBER AND PRINT
         PUT   SYSPRIN2,TOTLHIL
         ED    NUMALISB(6),TOTALIS1     EDIT # ALIASES BEFORE PROC
         SP    TOTALIS1(3),TOTALIS2     SUBTRACT # UNCATALOGED
         ED    NUMALISA(6),TOTALIS1     EDIT IN AFTER PROC # AND PRT
         PUT   SYSPRIN2,TOTLALIS
         ED    NUMNCTB(6),TOTNVS3      EDIT # DSNS NOT CAT
         SP    TOTNVS3(3),TOTNVS4      SUBTRACT # SCRATCHED
         ED    NUMNCTA(6),TOTNVS3      EDIT # AFTER PROCESSING AND PRT
         PUT   SYSPRIN2,TOTLNCAT
         LM    R2,R14,TOTSAVE         GO BACK TO KANSAS
         BR    R14
TOTSAVE  DS    13F
MASK     DC    X'402020202021'
TOTHDR   DC    CL121'1            TOTALS FOR CATCLEAN PROGRAM '
TOTLCAT  DC    CL121'-   # OF CATALOGS PROCESSED - '
TOTLVOL  DC    CL121'    # OF VOLUMES PROCESSED  - '
TOTLUCAT DC    CL121'    # OF USER CATALOGS      - '
TOTLCLST DC    CL121'    # OF VSAM CLUSTERS      - '
TOTLGDG  DC    CL121'    # OF GDG BASES          - '
BEFAFT   DC    CL121'-                              BEFORE PROCESSING  +
                   AFTER PROCESSING '
UNDSCRE  DC    CL121'+                              ______ __________  +
                   _____ __________ '
TOTLNVSM DC    CL121'0   # OF NON VSAM DATASETS  - '
         ORG   TOTLNVSM+36
NUMNVSB  DC    X'402020202120'
         ORG   TOTLNVSM+58
NUMNVSA  DC    X'402020202120'
         ORG
TOTLHIL  DC    CL121'    # OF HI-LEVEL INDEXES   - '
         ORG   TOTLHIL+36
NUMHILB  DC    X'402020202120'
         ORG   TOTLHIL+58
NUMHILA  DC    X'402020202120'
         ORG
TOTLALIS DC    CL121'    # OF DATASET ALIASES    - '
         ORG   TOTLALIS+36
NUMALISB DC    X'402020202120'
         ORG   TOTLALIS+58
NUMALISA DC    X'402020202120'
         ORG
TOTLNCAT DC    CL121'    # OF DSNS NOT CATALOGED - '
         ORG   TOTLNCAT+36
NUMNCTB  DC    X'402020202120'
         ORG   TOTLNCAT+58
NUMNCTA  DC    X'402020202120'
         ORG
         EJECT
***************************************************************
*  DEB  DSECT                                                 *
***************************************************************
*        IEZDEB
DEBBASIC DSECT
         ORG   DEBBASIC+16
DEBNMEXT DS    X
         ORG   DEBBASIC+32
DEBDASD  DS    0D
         ORG   DEBDASD+6
DEBSTRCC DS    H
DEBSTRHH DS    H
*  IOB  DSECT                                                 *
***************************************************************
*        IEZIOB
IOBSTDRD DSECT
IOBFLAG1 DS    X
         ORG   IOBSTDRD+3
IOBSENS1 DS    X
IOBS1B4  EQU   X'08',1
         ORG   IOBSTDRD+5
IOBECBPB DS    AL3
         ORG   IOBSTDRD+12
IOBUSTAT DS    X
IOBUSB7  EQU   X'01',1
IOBCSTAT DS    X
IOBCSB1  EQU   X'40',1
         ORG   IOBSTDRD+17
IOBSTRTB DS    AL3
         ORG   IOBSTDRD+21
IOBDCBPB DS    AL3
         ORG   IOBSTDRD+32
IOBSEEK  DS    0D
         ORG   IOBSEEK
IOBM     DS    X
IOBBB    DS    XL2
IOBCC    DS    XL2
IOBHH    DS    XL2
IOBR     DS    X
*        DCBD
IHADCB   DSECT
         ORG   IHADCB+5
DCBFDAD  DS    CL8
         ORG   IHADCB+18
DCBTRBAL DS    H
         ORG   IHADCB+45
DCBDEBA  DS    AL3
*        IHAECB
IHAECB   DSECT
ECBCC    DS    X
         DS    XL3
ECBNORM  EQU   X'7F',1
ECBPERR  EQU   X'41',1
ECBDAEA  EQU   X'42',1
         IEFZB4D0
         IEFZB4D2
DS1      DSECT
         IECSDSL1 (1)
DS4      DSECT
         IECSDSL1 (4)
         IEFUCBOB
         END
