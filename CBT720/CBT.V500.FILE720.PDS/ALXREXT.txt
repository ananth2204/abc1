/* REXX                                                      */
/* TRACE R */
/*************************************************************/
/* AUTHOR - BILL SWEENEY                                     */
/*                                                           */
/* YOU MUST SPECIFY THE DATASET NAME WHERE THE TABLE SOURCE  */
/* RESIDES AND WHERE THE LINK EDIT MSGTABLE TABLE AND        */
/* IEAVMXIT MODULE RESIDE.                                   */

 /* THE FOLLOWING SOURCE DATASET IS WHERE THE MSGTABLE IS STORED  */
 /* THE MEMBER COULD BE ANYTHING, BUT MSGTABLE IS RECOMMENDED     */
 /* BECAUSE THE IEAVMXIT LINKS TO THE NAME MSGTABLE. WHY CHANGE IT*/

 TABLE_SOURCE_DSN = 'SYSX.OPSAUTO.SOURCE'
 TABLE_MEMBER = 'MSGTABLE'
 OLD_MEMBER = 'ZSGTABLE'

/* "ISPEXEC LIBDEF ISPMLIB DATASET ID('SYSX.ISPF.ISPMLIB')" */

 /* THIS DATASET CONTAINS THE JCL TO ASSEMBLE THE MSGTABLE MEMBER */
 /* AND RELINK IEAVMXIT TO REPLACE THE MSGTABLE.                  */

 ASMHCL_TABLE_DSN = 'SYSX.OPSAUTO.SOURCE(ASMLTABL)'

  SOURCE_DSN = TABLE_SOURCE_DSN'('TABLE_MEMBER')'
  OLDSRCE_DSN = TABLE_SOURCE_DSN'('OLD_MEMBER')'
  STAT = MSG("OFF")

  "FREE F(MSGTABLE)"
  "ALLOCATE F(MSGTABLE) DA('"SOURCE_DSN"') SHR"
  "EXECIO * DISKR MSGTABLE (STEM MESSAGE. FINIS"
  "FREE F(MSGTABLE,ZSGTABLE)"
  "ALLOCATE F(ZSGTABLE) DA('"OLDSRCE_DSN"') SHR"
  "EXECIO " MESSAGE.0 " DISKW ZSGTABLE (STEM MESSAGE. FINIS"
  "FREE F(ZSGTABLE)"

  /*  LOOP  THROUGH THE TABLE AND FIND THE RANGE OF MESSAGES    */
  /*  WHICH ARE DELIMITED BETWEEN LABEL START AND LABEL LENGTH  */
  DO I = 1 TO MESSAGE.0
   PARSE VAR MESSAGE.I LABEL REMAINDER
   IF LABEL = 'START' THEN START_MESSAGE = I + 1
   IF LABEL = 'LENGTH' THEN
    DO
      LAST_MESSAGE = I - 1
      LENGTH_MESSAGE = MESSAGE.I
    END
  END

  /*  WITH OUR RANGE ESTABLISHED WE WILL LOOP THRU THE MESSAGES */
  /*  AND EXTRACT THE MSGID FOR COMPARISON ON DUPLICATES        */
  MSG = 0

  DO SUFFIX = START_MESSAGE TO LAST_MESSAGE
   POS_MESSAGE = POS(' MESSAGE ',MESSAGE.SUFFIX,1)
   POS_MSGID = POS('MSGID=',MESSAGE.SUFFIX,1)
   IF POS_MESSAGE ¬= 0 & POS_MSGID ¬= 0 THEN
    DO
     POS_COMMA = POS(',',MESSAGE.SUFFIX,POS_MSGID)
     QUOTE = SUBSTR(MESSAGE.SUFFIX,POS_MSGID+6,1)
     IF POS_COMMA = 0 THEN
      DO
       SAY 'ERROR WITH MSGTABLE MESSAGES'
       "FREE F(MSGTABLE)"
       EXIT 16
      END
     /* SEE IF MSGID HAS SINGLE QUOTE DELIMITERS */
     IF QUOTE = "'" THEN
      DO
       POS_ENDQUOTE = POS("'",MESSAGE.SUFFIX,POS_MSGID+7)
       MSGID_LENGTH = (POS_ENDQUOTE - POS_MSGID) - 7
       EMSGID = SUBSTR(MESSAGE.SUFFIX,POS_MSGID+7,MSGID_LENGTH)
      END
     ELSE
      DO
       MSGID_LENGTH = (POS_COMMA - POS_MSGID) - 6
       EMSGID = SUBSTR(MESSAGE.SUFFIX,POS_MSGID+6,MSGID_LENGTH)
      END

     MSG = MSG + 1
     EMSGID.MSG = STRIP(EMSGID,'B',"'")
    END
  END

  FIRST_MESSAGE = 'NO'         /* SET THIS AS INITIAL FLAG  */

  /* WE WILL NOW DISPLAY THE PANEL AND ADD OUR NEW MESSAGES TO */
  /* THE TABLE. WE WILL PICK AT THE LABEL LENGTH RECORD NUMBER */
  NSFX = LAST_MESSAGE

  DO 100            /* GIVE THEM AN OPPORTUNITY TO DEFINE A 100  */
     MSGID = ' '
     FUNCTION   = ' '
     REPLY = ' '
     COMMAND = ' '
     SEARCH = ' '
     S = ' '
     J = ' '
     M = ' '
     R = ' '
     "ISPEXEC DISPLAY PANEL(ALXPEXT)"
     IF RC ¬= 0 THEN LEAVE
     MATCH = 'NO'        /* SET THE FLAG BEFORE STARTING LOOP */

     MSGID = STRIP(MSGID,'B',"'")    /* REMOVE SINGLE QUOTES IF THERE*/

     IF MSG ¬= 0 THEN
       DO I = 1 TO MSG
        IF MSGID = EMSGID.I THEN MATCH = 'YES'
       END

     IF MATCH = 'YES' THEN
      SAY 'MSGID ' MSGID 'MATCHES AN EXISTING ENTRY IN THE TABLE'

        MSG = MSG + 1            /* INCREMENT THE COUNT SAVED   */
        EMSGID.MSG = MSGID       /* SAVE THIS FOR FUTURE CHECKS */
        MSGID = "'"MSGID"'"      /* PUT BACK THE QUOTES         */
        FIRST_MESSAGE = 'YES'    /* SET THIS TO YES */
        IF FUNCTION = 'REPLY' THEN COMMAND = REPLY
        IF FUNCTION = 'EXEC' THEN COMMAND = 'S OPSAUTO'
        IF FUNCTION = 'EVENT' THEN COMMAND = 'S OPSAUTO'
        IF FUNCTION = 'HIGHLITE' | FUNCTION = 'SUPPRESS' THEN
          COMMAND = 'NULL'
        NSFX = NSFX + 1
        MESSAGE.NSFX = '         MESSAGE MSGID='MSGID',FUNCTION='FUNCTION', '
        MESSAGE.NSFX = LEFT(MESSAGE.NSFX,80)
        MESSAGE.NSFX = OVERLAY('+',MESSAGE.NSFX,72,1)
        NSFX = NSFX + 1
        MESSAGE.NSFX = "               COMMAND='"COMMAND"'"
        IF SEARCH ¬= '' | SEARCH ¬= ' ' THEN
         DO
          SEARCH = STRIP(SEARCH,'B',"'")
          LENGTH_PREVIOUS = LENGTH(MESSAGE.NSFX)
          MESSAGE.NSFX = OVERLAY(',',MESSAGE.NSFX,LENGTH_PREVIOUS+1,1)
          MESSAGE.NSFX = OVERLAY('+',MESSAGE.NSFX,72,1)
          IF J = 'Y' THEN          /* CHECK FOR SELECT EXCLUDE OPTION*/
           DO
            SELECT = 'JOBNAME'
            UPPER SEARCH
           END
          ELSE
           SELECT = 'SELECT'
          NSFX = NSFX + 1
          MESSAGE.NSFX = "               SEARCH='"SEARCH"',"
          MESSAGE.NSFX = OVERLAY('+',MESSAGE.NSFX,72,1)
          NSFX = NSFX + 1
          MESSAGE.NSFX = "               SELECT="SELECT
         END
        IF M = 'Y' THEN            /* CHECK FOR MULTI-LINE  */
         DO
          LENGTH_PREVIOUS = LENGTH(MESSAGE.NSFX)
          MESSAGE.NSFX = OVERLAY(',',MESSAGE.NSFX,LENGTH_PREVIOUS+1,1)
          MESSAGE.NSFX = OVERLAY('+',MESSAGE.NSFX,72,1)
          NSFX = NSFX + 1
          MESSAGE.NSFX = "               MULTLINE=YES"
         END

        IF M = 'A' THEN            /* CHECK FOR MULTI-LINE ALL*/
         DO
          LENGTH_PREVIOUS = LENGTH(MESSAGE.NSFX)
          MESSAGE.NSFX = OVERLAY(',',MESSAGE.NSFX,LENGTH_PREVIOUS+1,1)
          MESSAGE.NSFX = OVERLAY('+',MESSAGE.NSFX,72,1)
          NSFX = NSFX + 1
          MESSAGE.NSFX = "               MULTLINE=ALL"
         END

        IF R = 'Y' & FUNCTION = 'HIGHLITE' THEN  /* CHECK FOR COLOR  */
         DO
          LENGTH_PREVIOUS = LENGTH(MESSAGE.NSFX)
          MESSAGE.NSFX = OVERLAY(',',MESSAGE.NSFX,LENGTH_PREVIOUS+1,1)
          MESSAGE.NSFX = OVERLAY('+',MESSAGE.NSFX,72,1)
          NSFX = NSFX + 1
          MESSAGE.NSFX = "               COLOR=RED"
         END
      END

   /* VERIFY THAT AT LEAST 1 MESSAGE ADDED BEFORE SUBMITTING JOB  */
   /* TO REASSEMBLE AND LINK THE TABLE WITH IEAVMXIT              */

   IF CPFKEY = 'PF12' | CPFKEY = 'PF04' THEN
    DO
     SAY 'PANEL INPUT CANCELLED; MSGTABLE NOT PROCESSED'
     EXIT 4
    END

   IF FIRST_MESSAGE = 'YES' THEN
    DO
     NSFX = NSFX + 1
     MESSAGE.NSFX = LENGTH_MESSAGE
     NSFX = NSFX + 1
     MESSAGE.NSFX = '          END'
     "ALLOCATE F(MSGTABLE) DA('"SOURCE_DSN"') SHR"
     "EXECIO " NSFX " DISKW MSGTABLE (STEM MESSAGE. FINIS"

     "SUBMIT '"ASMHCL_TABLE_DSN"'"
    END

/* "ISPEXEC LIBDEF ISPMLIB" */
EXIT
