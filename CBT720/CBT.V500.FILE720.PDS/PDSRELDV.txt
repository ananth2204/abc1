    TITLE 'PDSRELDV - Program to reload a PDS Unloaded with PDSUNLDV'
*********************************************************************
* AUTHOR - BILL SWEENEY                                             *
*     SSC, INC.                                                     *
*     WHSWEENEY@SSCMAINFRAME.COM                                    *
*     WWW.SSCMAINFRAME.COM                                          *
* DATE - (C) COPYRIGHT 2004                                         *
*                                                                   *
* DISCLAIMER - IT IS THE RESPONSIBILITY OF THE INIDIVIDUAL          *
*         TO VALIDATE THAT THIS SOFTWARE WILL NOT HARM YOUR         *
*         SYSTEM. INSTALL THIS SOFTWARE AT YOUR OWN RISK.           *
*         SSC, INC. IS NOT RESPONSIBLE FOR ANY PROBLEMS             *
*         CAUSED WHILE USING THIS SOFTWARE. GOOD LUCK.              *
*                                                                   *
* LINKAGE INFORMATION - AMODE 24                                    *
*                  RMODE 24                                         *
*                  NON-REENTRANT                                    *
*                  NOT APF AUTHORIZED                               *
*                                                                   *
*  Function  - Will take a file in PDSUNLDV or IEBUPDTE unloaded    *
*              format and reload into a PDS.                        *
*                                                                   *
*  JCL       -                                                      *
*        //JOBNAME JOB (ACCT),'PROGRAMMER   ',MSGCLASS=X,CLASS=X,   *
*        //      NOTIFY=&SYSUID                                     *
*        //STEP1  EXEC  PGM=PDSRELDV                                *
*        //STEPLIB  DD  DSN=PREFIX.ISPF.LOADLIB,DISP=SHR            *
*        //SEQINFIL DD  DSN=PREFIX.UNLDFILE.UNLOAD,DISP=SHR         *
*        //OUTFILE  DD  DSN=PREFIX.FILE.PDS,DISP=(,CATLG),          *
*        //     SPACE=(TRK,(9,9,40))                                *
*        //SYSUDUMP DD  SYSOUT=*                                    *
*                                                                   *
*********************************************************************
PDSRELDV CSECT
         PRINT ON,GEN
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
RC4      EQU   4
RC8      EQU   8
RC16     EQU   16
               EJECT
****************************************************************
*  SAVE LOGIC TO CONSERVE ON REGISTERS. R13 IS USED AS BOTH    *
*  THE BASE REGISTER AND THE POINTER TO THE 18 WORD SAVE AREA. *
****************************************************************
         B     72(R15)             BRANCH AROUND THE SAVE AREA
         DS    17F                 THIS AND THE PRIOR BR ARE 18F SAVE
         STM   R14,R12,12(R13)     SAVE IN CALLERS SAVEAREA
         ST    R13,4(R15)          SAVE IN OUR SAVE AREA
         ST    R15,8(R13)          STORE OUR SAVE AREA ADDR IN THEIRS
         LR    R13,R15             SET UP AS SAVE AND BASE REG
         USING PDSRELDV,R13
**************************************
*  LETS GO AHEAD AND ACQUIRE STORAGE *
**************************************
         LH   R0,HW32760
         ST   R0,GETMAIN_LENGTH  SAVE THIS LENGTH FOR LATER
         GETMAIN R,LV=(0)
         ST   R1,STRADDR1
*******************************************************************
***********************************************
*   OPEN THE PDS AND PROCESS THE MEMBER LIST  *
***********************************************
         OPEN  (SEQINFIL)
         TM    SEQINFIL+48,X'10'  GOOD OPEN ??
         BO    OPENOK2            YES, THEN CONTINUE EUROK
         WTO   'UNABLE TO OPEN SEQINFIL FILE FOR INPUT'
         MVI   RETCODE+3,RC16
         B     FREE_STORAGE
OPENOK2  EQU   *
         MVC   OUTFILE+62(2),SEQINFIL+62
         MVC   OUTFILE+82(2),SEQINFIL+82
         MVC   OUTFILE+36(1),SEQINFIL+36
         OPEN  (OUTFILE,(OUTPUT))
         TM    OUTFILE+48,X'10'  GOOD OPEN ??
         BO    SETUP_REGS         YES, THEN CONTINUE EUROK
         WTO   'UNABLE TO OPEN OUTFILE FILE FOR OUTPUT'
         MVI   RETCODE+3,RC16
         CLOSE SEQINFIL
         B     FREE_STORAGE
SETUP_REGS     EQU   *
         L     R12,STRADDR1
         LH    R4,SEQINFIL+82             GET THE LRECL IN R4
LOOPGET  EQU   *
         GET   SEQINFIL
         LR    R3,R1
         LR    R9,R3
         TM    SEQINFIL+36,X'40'          WAS IT VARIABLE LENGTH
         BZ    CHKFIRST                   NO, THEN CONTINUE
         LA    R9,4(R9)                   GET PAST RDW UP FRONT
CHKFIRST CLI   ADDNAME,C' '               HAVE WE DONE THE FIRST ENTRY
         BNE   NOTFRST                    NO, THEN CONTINUE
         SLR   R11,R11                    TO MAINTAIN THE COUNT
         TM    SEQINFIL+36,X'40'          WAS IT VARIABLE LENGTH
         BZ    MOVEADD                    NO, THEN CONTINUE
         LA    R12,4(R12)                 MOVE PAST THE BDW
         LA    R11,4(R11)                 INCREMENT FOR THE BDW
* MOVE IN THE NAME USING EXECUTE INSTRUCTION
         SLR   R15,R15                    CLEAR FOR INSERT
         ICM   R15,3,0(R3)                GET THE RDW LENGTH
         SH    R15,HW17
         CH    R15,HW7                    JUST VERIFY NOT TOO BIG
         BNH   MOVEITIN
         LH    R15,HW7                    RESET TO DEFAULT MOVE OF 8
MOVEITIN EX    R15,MOVENAME               MVC   ADDNAME(0),12(R9)
         B     LOOPGET
*  THIS IS THE MOVE FOR FB OR F FILES
MOVEADD  MVC   ADDNAME(8),12(R9)
         B     LOOPGET
NOTFRST  CLC   0(12,R9),ADDRECD
         BE    WRITBLOK
         CLC   0(10,R9),ENDRECD
         BE    WRITBLOK
         TM    SEQINFIL+36,X'40'          WAS IT VARIABLE LENGTH
         BZ    NOTVB                      NO, THEN CONTINUE
         ICM   R4,3,0(R3)                   GET THE RDW LENGTH
NOTVB    LR    R15,R4                     LOAD THE RECORD LENGTH IN R15
         BCTR  R15,0                      DECR 1 FOR EXECUTE
         EX    R15,MOVERECD               MVC   0(0,R12),0(R3)
         LA    R11,0(R4,R11)              ADD TO THE TOTAL
         LA    R12,0(R4,R12)              AND INCREMENT THE POINTER
         TM    SEQINFIL+36,X'40'          WAS IT VARIABLE LENGTH
         BZ    NOTVB2                     NO, THEN CONTINUE
         LH    R15,SEQINFIL+82            GET THE LRECL IN R15
         LA    R15,0(R15,R11)             WILL THIS EXCEED THE BLKSIZE
         CH    R15,SEQINFIL+62            COMPARE AGAINST THE BLKSIZE
         BL    LOOPGET                    LT GO AHEAD AND READ ANOTHER
         L     R14,STRADDR1               GET BEGINNING OF STORAGE
         STH   R11,0(R14)                 STORE THE BDW
         BH    WRITBLOK                   GT GO AHEAD AND WRITE THE BLK
NOTVB2   CH    R11,SEQINFIL+62            COMPARE THE BLKSIZE
         BL    LOOPGET
WRITBLOK L     R12,STRADDR1
         LTR   R11,R11                    IS THIS ZERO
         BZ    STOWIT                     YES, THEN LAST RECORD
         MVC   SAVBLKSZ(2),OUTFILE+62     SAVE THE BLOCKSIZE
         STH   R11,OUTFILE+62             SAVE IN DCB
         TM    SEQINFIL+36,X'40'          WAS IT VARIABLE LENGTH
         BZ    WRITEIT                    NO, THEN CONTINUE
         STH   R11,0(R12)                 SAVE THE BDW
WRITEIT  EQU   *
         WRITE OUTDECB,SF,OUTFILE,(12),(11)
         CHECK OUTDECB
         SLR   R11,R11                    CLEAR R11
         MVC   OUTFILE+62(2),SAVBLKSZ     SAVE THE BLOCKSIZE
         TM    SEQINFIL+36,X'40'          WAS IT VARIABLE LENGTH
         BZ    DONTINCR                   NO, THEN CONTINUE
         LA    R11,4(R11)                 INCR THIS FOR LATER
         LA    R12,4(R12)                 SAME HERE
DONTINCR CLC   0(12,R9),ADDRECD
         BE    STOWIT
         CLC   0(10,R9),ENDRECD
         BE    STOWIT
         TM    FLAG,X'01'
         BZ    LOOPGET
STOWIT   STOW  OUTFILE,ADDNAME,A  BLKSIZE
         LTR   R15,R15            SEE IF OK ADD
         BZ    CONTINUE
         MVC   BADADD+4(8),ADDNAME
         WTO   MF=(E,BADADD)      TELL THEM IT WAS A BAD ADD
CONTINUE TM    FLAG,X'01'         DID WE HIT EODAD
         BO    CLOSEUP            YES, THEN GO CLOSEUP
         CLC   0(10,R9),ENDRECD   IS IT THE LAST RECORD
         BE    CLOSEUP            ADDRESS PAST BDW
         SLR   R11,R11            CLEAR COUNTER HERE
         TM    SEQINFIL+36,X'40'   WAS IT VARIABLE LENGTH
         BZ    MOVEADD2           NO, THEN CONTINUE
* MOVE IN THE NAME USING EXECUTE INSTRUCTION
         MVC   ADDNAME(8),BLANKS          CLEAR THE FIELD
         SLR   R15,R15                    CLEAR FOR INSERT
         ICM   R15,3,0(R3)                GET THE RDW LENGTH
         SH    R15,HW17
         CH    R15,HW7                    JUST VERIFY NOT TOO BIG
         BNH   MOVEITI2
         LH    R15,HW7                    RESET TO DEFAULT MOVE OF 8
MOVEITI2 EX    R15,MOVENAME               MVC   ADDNAME(0),12(R9)
         B     LOOPGET                    MOVE IN THE NAME
MOVEADD2 MVC   ADDNAME(8),12(R9)  MOVE IN THE MEMBER NAME
         B     LOOPGET                    MOVE IN THE NAME
EODAD    OI    FLAG,X'01'         FLAG IT, SHOULD NEVER GET HERE
         LTR   R11,R11            CHECK TO SEE IF ANYTHING TO WRITE
         BNZ   WRITBLOK           YES, THEN WRITE IT
         B     STOWIT             LOOP BACK, STOW AND GET OUT
CLOSEUP  CLOSE (SEQINFIL,,OUTFILE)
FREE_STORAGE  EQU   *
         L    R0,GETMAIN_LENGTH   GET THE LEGNTH
         L    R1,STRADDR1         GET  THE LOCATION
         FREEMAIN R,LV=(0),A=(1)
EXIT     L     R15,RETCODE
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
SEQINFIL DCB   DDNAME=SEQINFIL,MACRF=GL,DSORG=PS,EODAD=EODAD
OUTFILE  DCB   DDNAME=OUTFILE,MACRF=W,DSORG=PO
DOUBLE_WORD  DC D'0'
STRADDR1 DC     F'0'
GETMAIN_LENGTH  DC F'0'
RETCODE  DC    F'0'
MOVERECD MVC   0(0,R12),0(R3)
MOVENAME MVC   ADDNAME(0),12(R9)
SAVBLKSZ DC    H'0'
HW1      DC    H'1'
HW4      DC    H'4'
HW17     DC    H'17'
HW7      DC    H'7'
HW32760  DC    H'32760'
BLANKS   DC    CL8' '
ADDRECD  DC    CL12'./ ADD NAME='
ADDNAME  DS    0F
         DC    CL8' ',F'00'
ENDRECD  DC    CL10'./ ENDUP '
ENDNAME  DC    CL8' '
FLAG     DC    X'00'
BADADD   WTO   '         WAS NOT ADDED BECAUSE IT ALREADY EXISTED.',   X
               MF=L
         END
