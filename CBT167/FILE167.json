{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011402000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 352716, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 10, "INMDSNAM": "CBT.V500.FILE167.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE167.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x06\\x0c'", "DS1TRBAL": "b'(\\xc6'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01$\\x00\\x00\\x01$\\x00\\x06\\x00\\x07'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$INDEX": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x91\\x13o\\x00\\x91\\x13o\\x12B\\x00\\x17\\x00\\x0c\\x00\\x00\\xe3\\xe2\\xd6\\xc3\\xc7\\xd3\\xc1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1991-05-16T00:00:00", "modifydate": "1991-05-16T12:42:00", "lines": 23, "newlines": 12, "modlines": 0, "user": "TSOCGLA"}, "text": "                       UTILITIES PACKAGE\n\nTHE FOLLOWING UTILITES ARE INCLUDED IN THIS COLLECTION.  THEY ARE\nEITHER RUN AS CLISTS, PROGRAMS, OR ISPF PANELS.  DOCUMENTATION\nFOR EACH UTILITY IS IN THE MEMBER INDICATED BELOW.  IF YOU USE\nTHE PDSLOAD PROGRAM TO RELOAD THIS FILE INSTEAD OF IEBUPDTE, YOU\nWILL GET ISPF STATISTICS WHICH WILL INDICATE THE NATURE OF EACH\nMEMBER (PANELS, SOURCE, MESSAGE, DOC, CLIST).\n\n    UTILITY       DOC            FAST\n    NAME          MEMBER         DESCRIPTION\n    --------      --------       -----------------------------\n    DAYTIMER  -   DAYTIMR#   -   APPOINTMENTS DISPLAY\n    DASDDAC   -   DASDDAC#   -   DASD SPACE CALULATOR\n    DASDROOM  -   DASDROO#   -   DASD SPACE REPORT\n    GDGUTIL   -   GDGUTIL#   -   GDG UTILITY\n    WHOHAS    -   WHOHAS#    -   DATASET ENQUE NOTIFIER\n\n\nSOME OF THE UTILITIES ARE EXECUTED AS CLISTS ONLY.  OTHERS ARE\nPROGRAMS, OR ISPF DIALOGUES.  THERE SHOULD BE ENOUGH MATERIALS\nIN THIS DATASET TO EXECUTE ALL OF THE UTILITIES.\n     (THIS MEMBER WRITTEN BY SAM GOLOB - 05/16/91).\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "C#DAYTMR": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1f\\x00\\x00\\x00\\x90\\x10\\x7f\\x00\\x91\\x13o\\x16&\\x02\\t\\x01\\xc0\\x00\\x00\\xe3\\xe2\\xd6\\xc3\\xc7\\xd3\\xc1@@@'", "ispf": {"version": "01.31", "flags": 0, "createdate": "1990-04-17T00:00:00", "modifydate": "1991-05-16T16:26:00", "lines": 521, "newlines": 448, "modlines": 0, "user": "TSOCGLA"}, "text": "PROC 0 ADD TRACE\n/*                                                                    *\n/*                                                                    *\n/*            * * *  DAYTIMER APPOINTMENT CALENDAR * * *              *\n/*                                                                    *\n/*                                                                    *\n/*                                                                    *\n/*REVISED:  FEBRUARY 20, 1991                                         *\n/*                                                                    *\n/*          GEORGE RAMAS                                              *\n/*          SYSTEMS ANALYST                                           *\n/*          CATELLUS DEVELOPMENT CORPORATION                          *\n/*          MIS DEPARTMENT 3RD FLOOR                                  *\n/*          SAN FRANCISCO, CALIFORNIA 94105                           *\n/*          (415) 974-4597                                            *\n/*                                                                    *\n/*          DISPLAYS & DOCU. BY:  GEORGE RAMAS                        *\n/*          TECHNICAL REWRITE BY: JAY RHODES (415) 351-5411           *\n/*                                                                    *\n/*                                                                    *\n/* THE PURPOSE OF THIS CLIST IS TO NOTIFY YOU OF CALENDER             *\n/* APPOINTMENTS. YOU CAN ADD TO YOUR CALENDAR OR UPDATE AN APPOINTMENT*\n/* ALREADY LOADED.  IT WILL NOTIFY YOU WHEN YOU LOG ONTO TSO AND      *\n/* DISPLAY ALL APPOINTMENTS FOR THAT DAY ON YOUR FILE.  YOU CAN       *\n/* ALL SEE ALL YOUR LOGGED APPOINTMENTS BY CALLING PFK6 'DAYTIMER'    *\n/*                                                                    *\n/*                                                                    *\n/*  REQUIREMENTS:  YOUR MUST HAVE A AN 80 BYTE DATA SET CALLED:       *\n/*                 LOGONID.DATE.DATA (PS FORMAT) AND A DSN CALLED     *\n/*                 LOGONID.DAYTIMER.ISPTLIB (PO FORMAT) 80 BYTE       *\n/*                 RECFM.                                             *\n/*                                                                    *\n/*                 THESE PANELS ARE SETUP FOR COLOR MONITORS, BUT IT'S*\n/*                 NOT NECESSARY TO HAVE ONE.                         *\n/*                                                                    *\n/*                 YOU NEED TO COPY 'THIS' CLIST MEMBER INTO YOUR     *\n/*                 CLIST LIBRARY.                                     *\n/*                                                                    *\n/*                 DAYTIMEA    IN YOUR PLIB                           *\n/*                 DAYTIMER    IN YOUR PLIB (CAREFUL NOT TO MIX UP    *\n/*                                           YOU PLIB & CLIST MEMBER) *\n/*                 DTMM00      IN YOUR MLIB                           *\n/*                 DTMM01      IN YOUR MLIB                           *\n/*                                                                    *\n/*                 IN ORDER TO HAVE YOUR APPOINTMENTS DISPLAY         *\n/*                 WHEN YOU LOGON YOU MUST HAVE A 'SIGNON' MEMBER     *\n/*                 IN YOUR CLIST WHICH CONTAIN 'DAYTIMER'             *\n/*                                                                    *\n/*            COLUMN 1                                                *\n/*                   WRITE  **  EXECUTE SIGNON                        *\n/*                   DAYTIMER                                         *\n/*                   SDATE                                            *\n/*                                                                    *\n/*                   OR HAVE 'DAYTIMER' CANCATENATED IN YOUR TSO      *\n/*                   LOGON PROC.                                      *\n/*                                                                    *\n/*                 CHECK YOU TSO LOGON PROC, YOUR LIBRARIES MAY AL-   *\n/*                 READY BE CANCATENATED.  VERIFY YOUR CANCATENATION  *\n/*                 WITH YOUR TECHNICAL SERVICES DEPARTMENT.           *\n/*                                                                    *\n/*                 ALLOCATE A PDS LIBRARY 80/9440 CALLED LOGID.PLIB   *\n/*                 AND COPY THE SUPPLIED PLIB MEMBERS INTO THIS.      *\n/*                                                                    *\n/*                 ALLOCATE A PDS LIBRARY 80/9440 CALLED LOGID.MLIB   *\n/*                 AND COPY THE SUPPLIED MLIB MEMBERS INTO THIS.      *\n/*                                                                    *\n/*                 YOU ALSO NEED THE SUPPLIED LOAD PROGRAM 'CLEAR' IN *\n/*                 YOUR LOAD LIBRARY.  CHANGE &UTIL BELOW FOR YOUR    *\n/*                 LOAD LIBRARY.                                      *\n/*                                                                    *\n/*          >>>>>> BE CAREFUL WHEN SETTING THIS UP, IF YOU MESS UP    *\n/*                 YOUR SIGNON CLIST YOU WILL HAVE TO HAVE IT RESTORED*\n/*                 TO BE ABLE TO LOGON AND FIX IT OR RENAME IT        *\n/*                 THROUGH YOUR TSO READY COMMAND.                    *\n/*                                                                    *\n/*                                                                    *\n/*            TO PERFORM A 'DISPLAY' KEY IN 'DAYTIMER' ON YOUR        *\n/*            TSO (PF6) SCREEN AND THIS WILL DISPLAY ALL APPOINTMENTS *\n/*            YOU HAVE ENTERED.  YOU CAN PERFORM EDITS AT THIS DISPLAY*\n/*            BY USING THE AN 'A' FOR ADD AT THE COMMAND LINE, 'D'    *\n/*            FOR DELETION AND 'U' FOR UPDATING NEXT TO THE DESIRED   *\n/*            COMMENT.                                                *\n/*                                                                    *\n/*            ITEMS WILL AUTOMATICALLY DELETE WHEN APPOINTMENT DATE   *\n/*            IS LESS THAN YOUR LOGON DATE.  IF NO ITEMS RESIDE IN    *\n/*            YOUR DATA SET, IT WILL DISPLAY 'APPOINTMENT FILE        *\n/*            CLEARED' WHEN YOU LOGON TO TSO.                         *\n/*                                                                    *\n/*            WHEN YOU DISPLAY YOUR APPOINTMENTS AT A COMMAND CLIST   *\n/*            LEVEL, SOME APPOINTMENTS MAY NOT BE IN SORTED ORDER     *\n/*            BECAUSE SOME APPOINTMENTS WERE INSERTED BETWEEN DATES.  *\n/*            SIMPLY PERFORM A COMMAND LEVEL SORT ON THE 'AUTOMATED   *\n/*            APPOINTMENT CALENDAR' PANEL DISPLAY.                    *\n/*                                                                    *\n/*            **NOTE** YOU CANNOT USE '&' IN YOUR TEXT.  IF YOU DO,   *\n/*                     IT WILL DISPLAY AN ERROR MESSAGE WHEN YOU LOGON*\n/*                     AND DELETE THAT PARTICULAR APPOINTMENT MESSAGE.*\n/*                                                                    *\n/*            IF YOU HAVE SEVERAL APPOINTMENTS TO ENTER YOU CAN       *\n/*            EDIT YOUR FILE 'LOGONID.DATE.DATA' AND MANUALLY ADD     *\n/*            ALL YOUR APPOINTMENTS AS LONG AS IT IS IN THE CORRECT   *\n/*            FORMAT.  WHEN ADDING AN APPOINTMENT WITH THE 'ADD/UPDATE'\n/*            FEATURE OR EDIT TO 'LOGONID.DATE.DATA, YOUR MAXIMUM     *\n/*            TEXT LENGTH IS 53 BYTES.                                *\n/*                                                                    *\n/*                                                                    *\n/*            ***IMPORTANT ***                                        *\n/*                                                                    *\n/*            BE SURE TO RENAME YOUR PANEL MEMBER 'P#PAYTMR' TO       *\n/*            'DAYTIMER' AND YOUR CLIST MEMBER 'C#DAYTMR' ALSO        *\n/*            TO 'DAYTIMER' IN THEIR RESPECTIVE LIBRARIES IF YOU      *\n/*            RECEIVE THEM IN THIS RENAME FORMAT.                     *\n/*                                                                    *\n/*                                                                    *\n/*                                                                    *\n/*--------------------------------------------------------------------*\n/*\nIF &TRACE = THEN -\n   CONTROL NOMSG ASIS\nELSE -\n   CONTROL MSG CONLIST LIST ASIS\n/*\n/*--------------------------------------------------------------------*\n/* INITIALIZE VARIABLES FOR COMMAND PROCESSOR                         *\n/*--------------------------------------------------------------------*\n/*\nSET  &DISP     = 0                /* LOOP CONTROL 4 DISPLAY\nSET  &GET      = 0                /* LOOP CONTROL 4 RECORD RETRIEVE\nSET  &N        = 1                /* LOOP CONTROL 4 RECORD UPDATE\nSET  &M        = 1                /* LOOP CONTROL 4 RECORD DELETE/UPDATE\nSET  &A        = 1                /* CONTROL FOR FILE OPEN DURING UPDATE\nSET  &F        = 0                /* LOOP CONTROL FOR 5 DAY FORECAST\nSET  &YN       = Y                /* LOOP CONTROL FOR CONTIUEOUS UPDATE\nSET  &ACTIVITY = 0                /* RECORD ACTIVITY CONTROLLER\nSET  &KEEP     = 0                /* DISPLAY CONTROLLER\nSET  &DAYTIMER = &SYSUID.W        /* DAYTIMER TABLE FILE\nSET  &FUTURE   = 0                /* SET FUTURE BIT\nSET  &UTIL     = DEV.GLR.LOADLIB  /* LOAD LIBRARY FOR 'CLEAR' PROGRAM\nSET  &PGM      = CLEAR\nSET  &PAN1     = DAYTIMER\nSET  &PAN2     = DAYTIMEA\nSET  &LIB      = DAYTLIB\nSET  &JULN     = &SUBSTR(1:2,&SYSJDATE)+\n                 &SUBSTR(4:6,&SYSJDATE)\nSET  &SDATE    = &SUBSTR(7:8,&SYSDATE)+\n                 &SUBSTR(1:2,&SYSDATE)+\n                 &SUBSTR(4:5,&SYSDATE)\n/*\n/*--------------------------------------------------------------------*\n/*  ALLOCATE USER APPOINTMENT FILE: DSORG(PS)                         *\n/*--------------------------------------------------------------------*\n/*\nIF &SYSISPF = &STR(NOT ACTIVE) THEN -\n   DO\n     FREE F(DATE)\n     ALLOC F(DATE) DA('&SYSUID..DATE.DATA')   SHR\n     OPENFILE DATE\n/*\n/*--------------------------------------------------------------------*\n/*  EXECUTE THE FOLLOWING WHEN A GETFILE ERROR OCCURRS                *\n/*--------------------------------------------------------------------*\n/*\n     CALL  '&UTIL(&PGM)'\n     ERROR -\n     DO\n       ERROR OFF\n       CLOSFILE DATE\n       IF &N = 1 THEN -\n          DO\n            WRITE\n            WRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\n            WRITE YOUR APPOINTMENT CALENDAR IS CLEAR\n            WRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\n            OPENFILE DATE OUTPUT\n            SET &A = 2\n          END\n       ELSE -\n          DO\n            WRITE\n            OPENFILE DATE OUTPUT\n          END\n/*\n/*--------------------------------------------------------------------*\n/*  IF DATA EXIST IN APPT FILE, KEEP ONLY UNEXPIRED RECORDS USING     *\n/*  DOUBLE SUBSTITUTION.                                              *\n/*--------------------------------------------------------------------*\n/*\n       IF &N > 1 THEN -\n       DO WHILE &M \u00ac= &N\n          SET XXXX = &&D&M\n          SET &DATE = &STR(&XXXX)\n          PUTFILE DATE\n          SET &M = &M + 1\n          SET &A = 2\n       END\n/*\n/*--------------------------------------------------------------------*\n/*  THE FOLLOWING ROUTINE IS EXECUTED IF THE USER REQUESTED TO ADD    *\n/*  TEXT TO APPOINTMENT FILE.                                         *\n/*--------------------------------------------------------------------*\n/*\n       IF &ADD \u00ac= THEN -\n          DO WHILE &YN = Y\n             WRITENR PRESS (ENTER) TO EXIT OR ENTER DATE IN FORM MM/DD/Y\n             READ &D\n             IF &NRSTR(&D) \u00ac= THEN -\n                DO\n                  WRITENR ENTER TEXT:\n                  READ\n                  SET &DATE = &NRSTR(&D &SYSDVAL)\n                  PUTFILE DATE\n                  SET &A = 2\n                END\n             ELSE -\n               DO\n                 SET &YN = N\n                 CLOSFILE DATE\n                 FREE F(DATE)\n               END\n          END\n     END\n/*\n/*--------------------------------------------------------------------*\n/*  RETRIEVE RECORD FROM USER APPOINTMENT FILE                        *\n/*--------------------------------------------------------------------*\n/*\n     IF &A = 1 THEN -\n        DO WHILE &GET = 0\n           CONTROL NOMSG\n           GETFILE DATE\n           SET &GET = &LASTCC\n           SET &F   = 0\n           IF &GET = 0 THEN -\n              DO\n                SET &DDATE = &SUBSTR(7:8,&NRSTR(&DATE))+\n                             &SUBSTR(1:2,&NRSTR(&DATE))+\n                             &SUBSTR(4:5,&NRSTR(&DATE))\n/*\n/*--------------------------------------------------------------------*\n/*  IF APPOINTMENT DATE IS LESS THAN CURRENT DATE, MARK ITEM FOR      *\n/*  DELETION.                                                         *\n/*--------------------------------------------------------------------*\n/*\n                IF &NRSTR(&DDATE) < &SDATE THEN -\n                   DO\nWRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\nWRITE OLD APPOINTMENT DELETED:\nWRITE &DATE\nWRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\n                     SET &PROCESS = 0\n                     SET &FUTURE  = 1\n                   END\n/*\n/*--------------------------------------------------------------------*\n/*  OTHERWISE, DISPLAY                                                *\n/*--------------------------------------------------------------------*\n/*\n                IF &SDATE EQ &DDATE THEN  -\n                   DO\nWRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\nWRITE APPOINTMENTS FOR TODAY:\nWRITE &DATE\nWRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\n                     SET &PROCESS = 1\n                   END\n/*\n                DO WHILE &F < 1\n                   SET &F = &F + 1\n                   IF &SDATE+&F = &DDATE THEN -\n                   DO\nWRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\nWRITE APPOINTMENTS COMING UP TOMORROW\nWRITE &DATE\nWRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\n                     SET &PROCESS = 1\n                   END\n                END\n/*\n/*--------------------------------------------------------------------*\n/*  PERFORM 5 DAY FORECAST.                                           *\n/*--------------------------------------------------------------------*\n/*\n                DO WHILE &F < 7\n                   SET &F = &F + 1\n                   IF &SDATE+&F = &DDATE THEN -\n                   DO\nWRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\nWRITE APPOINTMENTS COMING UP WITHIN THE NEXT 7 DAYS\nWRITE &DATE\nWRITE *+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*+*\n                     SET &PROCESS = 1\n                   END\n                END\n/*\n/*--------------------------------------------------------------------*\n/*  OTHERWISE, THIS IS FOR THE FAR FUTURE (GEORGE)                    *\n/*--------------------------------------------------------------------*\n/*\n                IF &FUTURE = 0 THEN -\n                   SET &PROCESS = 1\n/*\n/*--------------------------------------------------------------------*\n/*  IF ITEM WAS DISPLAYED TO USER IS >= TO CURRENT DATE, KEEP         *\n/*--------------------------------------------------------------------*\n/*\n                IF  &PROCESS  > 0 THEN -\n                    DO\n                      SET D&N = &DATE\n                      SET &N  = &N + 1\n                    END\n                SET &FUTURE = 0\n              END\n        END\n     EXIT\n   END\n/*\n/*--------------------------------------------------------------------*\n/*  OTHERWISE, AN ISPF ENVIRONMENT EXIST SO INVOKE PANEL FOR PROCESS  *\n/*--------------------------------------------------------------------*\n/*\nELSE -\n   DO\n     FREE F(DATE)\n     ALLOC F(DATE) DA('&SYSUID..DATE.DATA')   SHR\n     OPENFILE DATE\n     SET &ALLOC = &LASTCC\n     ISPEXEC CONTROL ERRORS RETURN\n     ISPEXEC LIBDEF ISPPLIB DATASET ID('&SYSUID..PLIB')\n     ISPEXEC LIBDEF ISPMLIB DATASET ID('&SYSUID..MLIB')\n     ISPEXEC LIBDEF &LIB DATASET ID('&SYSUID..DAYTIMER.ISPTLIB')\n     ISPEXEC TBCLOSE &DAYTIMER LIBRARY(&LIB)\n     ISPEXEC TBERASE &DAYTIMER LIBRARY(&LIB)\n     ISPEXEC TBCREATE &DAYTIMER KEYS(RCNT) NAMES(DIMM DIDD DIYY DTXT) +\n             LIBRARY(&LIB)\n     SET &RC = &LASTCC\n     IF &RC = 16 THEN -\n        DO\n          ISPEXEC SETMSG MSG(DTMM013)\n          EXIT\n        END\n     ISPEXEC TBSORT   &DAYTIMER FIELDS(RCNT,N,A)\n   END\n/*\n/*--------------------------------------------------------------------*\n/*  PERFORM THE FOLLOWING IF ERROR OCCURS WHILE RETREIVING RECORDS    *\n/*--------------------------------------------------------------------*\n/*\n     ERROR DO\n             ERROR OFF\n             CLOSFILE DATE\n             FREE F(DATE)\n             ISPEXEC TBTOP &DAYTIMER\n/*\n/*--------------------------------------------------------------------*\n/*  DISPLAY WORK TABLE FOR USER VIEW, ADD OR DELETE                   *\n/*--------------------------------------------------------------------*\n/*\n             DO WHILE &DISP <= 4\n                ISPEXEC TBDISPL &DAYTIMER PANEL(&PAN1)\n                SET &DISP  = &LASTCC\n                SET &DISP1 = &DISP\n                SET &KEEP  = 0\n                SET &CTR   = 0\n/*\n/*--------------------------------------------------------------------*\n/*  USER REQUESTED TO SORT TABLE. SORT ONLY OCCURS IN DATE ASCENDING  *\n/*  ORDER.                                                            *\n/*--------------------------------------------------------------------*\n/*\n                IF &DCMD = SORT THEN -\n                   DO\n                     ISPEXEC TBSORT &DAYTIMER  +\n                             FIELDS(DIMM,N,A,DIDD,N,A,DIYY,N,A)\n                     IF &LASTCC = 0 THEN -\n                        SET &CHNG = 1\n                   END\n/*\n/*--------------------------------------------------------------------*\n/*  USER REQUESTED TO UPDATE ENTRY                                    *\n/*--------------------------------------------------------------------*\n/*\n                IF &DSEL = U THEN -\n                   DO WHILE &ZTDSELS > 0\n                      ISPEXEC CONTROL DISPLAY SAVE\n                      ISPEXEC TBPUT    &DAYTIMER\n                      SET &KEEP = 1\n                      ISPEXEC DISPLAY PANEL(&PAN2)\n                      IF &LASTCC = 0 THEN -\n                         DO\n                           SET &CTR  = &CTR + 1\n                           SET &CHNG = 1\n                           ISPEXEC TBMOD &DAYTIMER ORDER\n                         END\n                      ISPEXEC CONTROL DISPLAY RESTORE\n                      IF &ZTDSELS > 1 THEN -\n                         ISPEXEC TBDISPL &DAYTIMER\n                      ELSE -\n                         SET &ZTDSELS = 0\n                      ISPEXEC SETMSG MSG(DTMM012)\n                   END\n/*\n/*--------------------------------------------------------------------*\n/*  USER REQUESTED TO DELETE ENTRY                                    *\n/*--------------------------------------------------------------------*\n/*\n                IF &DSEL = D THEN -\n                   DO WHILE &ZTDSELS > 0\n                      ISPEXEC CONTROL DISPLAY SAVE\n                      ISPEXEC TBPUT    &DAYTIMER\n                      ISPEXEC TBDELETE &DAYTIMER\n                      IF &LASTCC = 0 THEN -\n                         DO\n                           SET &CTR  = &CTR + 1\n                           SET &CHNG = 1\n                         END\n                      ISPEXEC CONTROL DISPLAY RESTORE\n                      IF &ZTDSELS > 1 THEN -\n                         DO\n                           ISPEXEC TBDISPL &DAYTIMER\n                         END\n                      ELSE -\n                         DO\n                           SET &ZTDSELS = 0\n                           ISPEXEC TBTOP &DAYTIMER\n                         END\n                      ISPEXEC SETMSG MSG(DTMM010)\n                   END\n/*\n/*--------------------------------------------------------------------*\n/*  USER REQUESTED TO ADD NEW ENTRY                                   *\n/*--------------------------------------------------------------------*\n/*\n                IF &DSEL = A   OR   +\n                   &DCMD = A   THEN -\n                   DO WHILE &DISP1 = 0\n                      ISPEXEC DISPLAY PANEL(&PAN2)\n                      SET &DISP1 = &LASTCC\n                      IF &DISP1  = 0 THEN -\n                         DO\n                           ISPEXEC TBSORT &DAYTIMER FIELDS(RCNT,N,A)\n                           ISPEXEC TBBOTTOM &DAYTIMER\n                           SET &RCNT = &RCNT + 1\n                           ISPEXEC VGET (DIMM DIDD DIYY DTXT)\n                           ISPEXEC TBADD &DAYTIMER ORDER\n                           SET &ADD = &LASTCC\n/*\n/*--------------------------------------------------------------------*\n/*  IF ADD WAS SUCCESSFUL, DISPLAY MESSAGE AND SET CHNG FLAG          *\n/*--------------------------------------------------------------------*\n/*\n                           IF  &ADD = 0 THEN -\n                               DO\n                                 ISPEXEC TBTOP &DAYTIMER\n                                 ISPEXEC SETMSG MSG(DTMM000)\n                                 SET &CHNG = 1\n                               END\n                           ELSE -\n                               DO\n                                 ISPEXEC TBTOP &DAYTIMER\n                                 ISPEXEC SETMSG MSG(DTMM001)\n                                 SET &CHNG = 0\n                               END\n                         END\n                   END\n             END\n/*\n/*--------------------------------------------------------------------*\n/*  IF USER ADDED/DELETED APPOINTMENTS, UPDATE DATE FILE              *\n/*--------------------------------------------------------------------*\n/*\n             IF &CHNG = 1 THEN -\n                DO\n                  SET &SKIP = 0\n                  ISPEXEC TBTOP &DAYTIMER\n                  ALLOC F(DATE) DA('&SYSUID..DATE.DATA') SHR REUSE\n                  OPENFILE DATE OUTPUT\n                  DO WHILE &SKIP = 0\n                     ISPEXEC TBSKIP &DAYTIMER\n                     SET &SKIP = &LASTCC\n                     IF &SKIP = 0 THEN -\n                        DO\n                          SET &DATE = &NRSTR(&DIMM/&DIDD/&DIYY +\n                                             &DTXT)\n                          PUTFILE DATE\n                        END\n                  END\n                  CLOSFILE DATE\n                  FREE F(DATE)\n                  ISPEXEC SETMSG MSG(DTMM009)\n                END\n/*\n/*--------------------------------------------------------------------*\n/*  DELETE USER WORK TABLE AND EXIT                                   *\n/*--------------------------------------------------------------------*\n/*\n             ISPEXEC TBEND &DAYTIMER\n             EXIT\n           END\n/*\n/*--------------------------------------------------------------------*\n/*  RETRIEVE RECORDS FROM USER LOGONID.DATE.DATA FILE                 *\n/*--------------------------------------------------------------------*\n/*\n     DO WHILE &GET = 0\n        GETFILE DATE\n        SET &GET = &LASTCC\n        IF  &GET = 0 THEN -\n            DO\n              SET &RCNT = &RCNT + 1\n              SET &L    = &LENGTH(&NRSTR(&DATE))\n              SET &DIMM = &SUBSTR(1:2,&NRSTR(&DATE))\n              SET &DIDD = &SUBSTR(4:5,&NRSTR(&DATE))\n              SET &DIYY = &SUBSTR(7:8,&NRSTR(&DATE))\n              SET &DTXT = &SUBSTR(10:&L,&NRSTR(&DATE))\n              ISPEXEC TBADD &DAYTIMER ORDER\n              SET &ADD = &LASTCC\n              IF  &ADD = 0 THEN -\n                  SET &UPD = 1\n            END\n     END\n   END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CLEAR": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x91\\x13o\\x00\\x91\\x13o\\x11T\\x00,\\x00(\\x00\\x00\\xe2\\xd6\\xe4\\xd9\\xc3\\xc5@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-05-16T00:00:00", "modifydate": "1991-05-16T11:54:00", "lines": 44, "newlines": 40, "modlines": 0, "user": "SOURCE"}, "text": "*  This is a disassembly of the CLEAR tso command which was\n*   included in CATELLUS's submission.  I didn't want to include\n*   an unnecessary load library on the tape.   Sam Golob (5/16/91).\n*  Disassembly done by PDS/E Sysprog Utilities.  (a vendor product)\nK        CSECT                                                     0000  000000\n         B     6(,R15)                 47F0 F006        *.00.*     0000  000000\n         DC    X'01D2'                 01D2             *.K*       0004  000004\n         STM   R14,R12,12(R13)         90EC D00C        *..}.*     0006  000006\n         LR    R12,R15                 18CF             *..*       000A  00000A\n         LA    R11,48(,R12)            41B0 C030        *..{.*     000C  00000C\n         ST    R13,4(R11)              50DB 0004        *&...*     0010  000010\n         ST    R11,8(R13)              50BD 0008        *&...*     0014  000014\n         LR    R13,R11                 18DB             *..*       0018  000018\n         LM    R0,R1,136(R12)          9801 C088        *q.{h*     001A  00001A\n         SVC   93      TPUT/TGET       0A5D             *.)*       001E  00001E\n         L     R13,4(R13)              58DD 0004        *....*     0020  000020\n         L     R14,12(R13)             58ED 000C        *....*     0024  000024\n         LM    R0,R12,20(R13)          980C D014        *q.}.*     0028  000028\n         BR    R14                     07FE             *..*       002C  00002C\n         DC    X'0000000000000000'     0000000000000000 *........* 002E  00002E\n         DC    X'0000000000000000'     0000000000000000 *........* 0036  000036\n         DC    X'0000000000000000'     0000000000000000 *........* 003E  00003E\n         DC    X'0000000000000000'     0000000000000000 *........* 0046  000046\n         DC    X'0000000000000000'     0000000000000000 *........* 004E  00004E\n         DC    X'0000000000000000'     0000000000000000 *........* 0056  000056\n         DC    X'0000000000000000'     0000000000000000 *........* 005E  00005E\n         DC    X'0000000000000000'     0000000000000000 *........* 0066  000066\n         DC    X'0000000000000000'     0000000000000000 *........* 006E  00006E\n         DC    X'0000'                 0000             *..*       0076  000076\nA000078  DC    C'A',X'11'              C111             *A.*       0078  000078\n         DC    C')='                   5D7E             *)=*       007A  00007A\n         LNR   R4,R0                   1140             *. *       007C  00007C\n         STH   R3,64(R12,R4)           403C 4040        * .  *     007E  00007E\n         DC    X'001D'                 001D             *..*       0082  000082\n         DC    C'H',X'13'              C813             *H.*       0084  000084\n         DC    X'00000000000E23'       00000000000E23   *.......*  0086  000086\n         DC    AL3(A000078)            000078           *...*      008D  00008D\n         REGEQU\n         END\n//LKED.SYSLIN  DD *\n INCLUDE OBJECT\n ORDER   K\n ENTRY   K\n NAME    CLEAR(R)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DASDDAC#": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x91\\x03\\x9f\\x00\\x91\\x05\\x0f\\x11@\\x00)\\x00+\\x00\\x00\\xc4\\xd6\\xc3@@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1991-02-08T00:00:00", "modifydate": "1991-02-19T11:40:00", "lines": 41, "newlines": 43, "modlines": 0, "user": "DOC"}, "text": "\n             *** D A S D   S P A C E   C A L C U L A T O R  ***\n\n            FEBRUARY 20, 1991\n\n            GEORGE RAMAS\n            SYSTEMS ANALYST\n            CATELLUS DEVELOPMENT CORPORATION\n            MIS DEPARTMENT 3RD FLOOR\n            SAN FRANCISCO, CALIFORNIA 94105\n            (415) 974-4597\n\n\n   THIS IS A TSO ISPF PANEL DRIVEN DASD SPACE CALCULATOR FOR 3380 OR\n   3330 DISK DRIVES.  IT WILL ALSO GIVE YOU BLOCKING FOR TAPES.\n   THIS PANEL SHOULD BE AVAILABLE TO BOTH OPERATIONS AND PROGRAMMING\n   STAFF TO USE IN DECIDING CORRECT BLOCK FACTORS AND SPACE ALLOCATIONS\n   FOR THEIR APPLICATIONS.\n\n   IT'LL ALSO TELL YOU HAVE RECORDS YOU GET ON A TRACK AND HOW MANY\n   RECORDS YOU WILL GET IN YOUR BLOCKING BASED ON YOUR LRECL.\n\n\n   1).  IN YOUR CANCATENATED CLIST OR CMDPROC, THE FOLLOWING MEMBER\n        MUST RESIDE:\n\n        DASDDACA\n\n\n   2).  IN YOUR CANCATENATED PLIB OR PANELS LIBRARY, THE FOLLOWING\n        MEMBERS MUST RESIDE:\n\n        DASDDAC1 (IF YOUR DISKS ARE OTHER THAN 3380(E) CHANGE HERE\n                  THE REQUIRED NUMBERS FOR CORRECT CALCULATIONS)\n        DASDDAC2\n\n        THESE PANELS ARE SET FOR COLOR MONITORS, BUT IT NOT NECESSARY\n        TO HAVE ONE. TO MAKE ACCESS EASY, YOU CAN ADD THIS CMD TO YOUR\n        TSO/ISPF MENU.  YOU COMMAND CALL WILL BE 'PANEL(DASDDAC1)'\n\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DASDDACA": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x87\"O\\x00\\x91\\x04o\\t\\x14\\x00\\x12\\x00\\x10\\x00\\x00\\xc3\\xd3\\xc9\\xe2\\xe3@@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1987-08-12T00:00:00", "modifydate": "1991-02-15T09:14:00", "lines": 18, "newlines": 16, "modlines": 0, "user": "CLIST"}, "text": "CONTROL MAIN\nISPEXEC CONTROL ERRORS RETURN\n ISPEXEC VGET (LRECL MAXBLS NOBPT NOTPC ENOF RF)\n SET &BLKF    = &MAXBLS / &LRECL\n SET &BLKSIZE = &LRECL  * &BLKF\n IF  &RF      = VB                 THEN +\n SET &BLKSIZE = &MAXBLS\n SET &NORPT   = &NOBPT  * &BLKF\n SET &NORPC   = &NORPT  * &NOTPC\n SET &NOT     = &ENOF   / &NORPT  + 1\n SET &CNOC    = &NOT    / &NOTPC\n SET &CNOT    = &CNOC   * &NOTPC\n IF  &CNOT    < &NOT               THEN +\n SET &NOC     = &CNOC   + 1\n ELSE +\n SET &NOC     = &CNOC\n ISPEXEC DISPLAY PANEL(DASDDAC2)\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DASDDAC1": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01c\\x00\\x00\\x00\\x865\\x8f\\x00\\x91\\x04/\\x11\\x14\\x00^\\x00F\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3\\xe2@@@@'", "ispf": {"version": "01.99", "flags": 0, "createdate": "1986-12-24T00:00:00", "modifydate": "1991-02-11T11:14:00", "lines": 94, "newlines": 70, "modlines": 0, "user": "PANELS"}, "text": ")ATTR\n | TYPE(INPUT)  INTENS(HIGH) PAD(' ')\n \u00a2 TYPE(TEXT) SKIP(ON)  COLOR(YELLOW)\n ! TYPE(TEXT) SKIP(ON)  COLOR(GREEN)\n { TYPE(TEXT) SKIP(ON)  COLOR(RED)\n @ TYPE(TEXT) SKIP(ON)  COLOR(PINK)\n)BODY\n+---------------------!DASD Dataset Allocation Calculator+----------------------\n%COMMAND ====>_ZCMD\n+\n+ {NOTE: \u00a2Default values will automatically be included for:\n+ \u00a2       RECFM = FB  DEVICE TYPE = 3380  BLOCKING FACTOR = HALF TRACK\n+        @ENTER LRECL INFORMATION THEN HIT ENTER\n+          \u00a2IF ADDTIONAL PARAMETERS CHANGES ARE NEED, MAKE CHANGE\n+          \u00a2THEN HIT ENTER\n+\n+    \u00a2Record Length :!_LRECL+     @( Maximum Value : 32,767)\n+\n+    \u00a2Record Format :!|RF+        @(\u00a2FB(a)+or VB)\n+\n+      \u00a2Device Type :!|DEV  +     @(\u00a23380e,+3330, TAPE)\n+\n+ \u00a2Blocking Options :!|MOPT +     @(@Full,\u00a2Half,@QTR, MAX (For tapes) *\n+\n+ \u00a2Number of Record :!|ENOF     + @( Defaults Value :%1,000)\n+\n+\n+\n+ {* For 3380 volumes using@full-track{blocking option, this clist\n+ {  calculates@one block per track.{Calculations for@half-track\n+ @  blocking{are equivalent to@two blocks per track. {This is due\n+ {  to@IBM{systems having a maximum block size of @32,767 bytes.\n+\n+ \u00a2  TAPES should normally follow half-track blocking unless it is\n+ \u00a2  being used for high volume storage, then use MAX parameter.\n+\n)INIT\n)PROC\n IF (&DEV  = ' ')\n     &DEV  = '3380'\n IF (&MOPT = ' ')\n     &MOPT = HALF\n IF (&ENOF = ' ')\n     &ENOF = 1000\n IF (&RF   = ' ')\n     &RF   = FB\n VER(&RF,NB,LIST,FB,VB)\n VER(&LRECL,NB,RANGE,1,32767)\n VER(&DEV,NB,LIST,3380,3330,TAPE)\n VER(&MOPT,NB,LIST,FULL,HALF,QTR,MAX)\n VER(&ENOF,NB,RANGE,1,999999999999)\nIF (&DEV = 3380)\n   IF (&MOPT = FULL)\n      &MAXBLS = 46952\n      &NOBPT  = 1\n   IF (&MOPT = HALF)\n      &MAXBLS = 23476\n      &NOBPT  = 2\n   IF (&MOPT = QTR)\n      &MAXBLS = 11738\n      &NOBPT  = 4\n   IF (&MOPT = MAX)\n      &MAXBLS = 46952\n      &NOBPT  = 1\nIF (&DEV = 3330)\n   IF (&MOPT = FULL)\n      &MAXBLS = 13030\n      &NOBPT  = 1\n   IF (&MOPT = HALF)\n      &MAXBLS = 6515\n      &NOBPT  = 2\n   IF (&MOPT = QTR)\n      &MAXBLS = 3257\n      &NOBPT  = 2\nIF (&DEV = 3380)\n      &NOTPC  = 15\n      &NOCPP  = 1770\n      &NTRACK = 26565\nIF (&DEV = 3330)\n      &NOCPP  = 808\n      &NOTPC  = 19\n      &NTRACK = 13290\nIF (&DEV = TAPE)\n      &MAXBLS = 32767\n      &NOBPT  = 1\n      &NOCPP  = 0\n      &NOTPC  = 1\nIF (&DEV = TAPE)\n   IF (&MOPT = HALF)\n      &MAXBLS = 23476\n      &NOBPT  = 1\n      &NOCPP  = 0\n&SEL = 'CMD(%DASDDACA)'\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DASDDAC2": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01:\\x00\\x00\\x00\\x865\\x9f\\x00\\x91\\x04/\\x10H\\x00 \\x00!\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3\\xe2@@@@'", "ispf": {"version": "01.58", "flags": 0, "createdate": "1986-12-25T00:00:00", "modifydate": "1991-02-11T10:48:00", "lines": 32, "newlines": 33, "modlines": 0, "user": "PANELS"}, "text": ")ATTR\n @ TYPE(OUTPUT) INTENS(HIGH)\n \u00a2 TYPE(TEXT) COLOR (YELLOW)\n ! TYPE(TEXT) COLOR (GREEN)\n { TYPE(TEXT) COLOR (RED)\n # TYPE(TEXT) COLOR (PINK)\n)BODY\n+---------------------\u00a2DASD!Dataset\u00a2Allocation!Calculator+----------------------\n+COMMAND{====>_ZCMD\n+\n+            !Device Type   :@DEV   \u00a2 Cylinders Per Pack :@NOCPP\n+\n+         !BLOCKING OPTIONS :@MOPT\u00a2Track   Record Format :@RF\n+\n+            !Record Length :@LRECL \u00a2 Optimum Block Size :@BLKSIZE\n+\n+               \u00a2NOTE>>>> {Maximum Allowable#IBM{BLKSIZE : 32767\n+\n+         !Blocks Per Track :@NOBPT \u00a2  Records Per Block :@BLKF\n+\n+        !Records Per Track :@NORPT\u00a2Records Per Cylinder :@NORPC\n+\n!Estimated Space Needed For  @ENOF     \u00a2Records\n+\n! Maximum Bytes Per Track   :#47476 {(For 3380e only)\n+\n!         Tracks Per Pack   :@NTRACK\n+\n+     Allocation Required   :@NOT  \u00a2Tracks   Or  :@NOC \u00a2Cylinders\n)INIT\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DASDROO#": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x91\\x03\\x9f\\x00\\x91\\x05\\x1f\\x08\\x06\\x00D\\x00$\\x00\\x00\\xc4\\xd6\\xc3@@@@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1991-02-08T00:00:00", "modifydate": "1991-02-20T08:06:00", "lines": 68, "newlines": 36, "modlines": 0, "user": "DOC"}, "text": "\n             *** D A S D   S P A C E   R E P O R T  ***\n\n            FEBRUARY 20, 1991\n\n            GEORGE RAMAS\n            SYSTEMS ANALYST\n            CATELLUS DEVELOPMENT CORPORATION\n            MIS DEPARTMENT 3RD FLOOR\n            SAN FRANCISCO, CALIFORNIA 94105\n            (415) 974-4597\n\n\n            PROGRAM WRITTEN BY ROB WUNDERLICH\n            SYSTEMS PROGRAMMER\n            TECHNICAL SERVICES\n            (415) 974-4675\n            CATELLUS DEVELOPMENT CORPORATION\n\n\n   THIS IS VERY USEFUL FOR THE DASD MANAGERS.\n\n   THE PURPOSE OF THIS PROGRAM IS TO GENERATE A DASD REPORT OF ALL\n   SELECTED DISK DRIVES.  IT WILL DISPLAY TOTAL SPACE AVAILABLE IN\n   CYLINDERS AND THE LARGARET EXTENT AVAILABLE, NUMBER OF FREE EXTENTS\n   AND PERCENT OF SPACE ALLOCATED FOR EACH PACK.  WITH A FINAL TOTAL FOR\n   TRACKS AVAILABLE AND TOTAL TRACKS ALLOCATED.\n\n   YOU NEED SIMPLY CREATE AN 80 CHARACTER CONTROL CARD SPECIFYING WHICH\n   PACKS YOU WANT TO REPORT ON.  IF YOU USE 'PARM=MISSMSG' ON YOUR\n   EXECUTE LINE IT WILL GIVE YOU A MESSAGE THAT A VOLUME SPECIFIED IS\n   MISSING OR OFFLINE AND WILL RETURN A CONDITION CODE OF '4'.\n   AN '+' CAN BE USED IN CARD COLUMN ONE FOR COMMENTS DISPLAYED ON YOUR\n   REPORT. AN '*' CAN BE IN CARD COLUMN ONE AS AN UNDISPLAYED COMMENT.\n\n           SAMPLE JCL\n\n   CARD COLUMS\n   ----+----1----+----2\n\n    //JOBCARD\n    //*\n   //DASDRPT  EXEC PGM=DASDROOM,PARM=MISSMSG\n   //*\n   //SYSIN    DD DSN=YOUR.CONTROL.CARD(VOLLIST),\n   //            DISP=SHR   ** OR BELOW IN STREAM **\n   *\n   +   *** PRODUCTION PACKS ***\n   *\n   PROD01\n   PROD02\n   PROD03\n   *\n   +   *** TEST PACKS ***\n   *\n   TEST01\n   TEST02\n   TEST03\n   *\n   +   *** TSO PACKS ***\n   *\n   TSO001\n   TSO002\n   TSO003\n   /*\n   //*\n   //*\n   //SYSPRINT DD SYSOUT=A\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DASDROOM": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x91\\x02?\\x00\\x91\\x05\\x1f\\x08\\t\\x01\\x01\\x00\\xf5\\x00\\x00\\xe2\\xd6\\xe4\\xd9\\xc3\\xc5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-01-23T00:00:00", "modifydate": "1991-02-20T08:09:00", "lines": 257, "newlines": 245, "modlines": 0, "user": "SOURCE"}, "text": "//SYSRBWD JOB 'ACCT#','DASDROOM ASSEMBLE',REGION=4096K,\n//    CLASS=S,MSGCLASS=H,NOTIFY=SYSRBW\n//*    SYS.MVS.CNTL(DASDROOM)\n//STEP1 EXEC ASMHCL <<<<<< ANY ASM PROC\n//C.SYSIN DD *\n*\n*\n* LIST THE VOLSERS, ONE PER LINE, TO BE INCLUDED IN\n* THE REPORT. ANY VOLUMES LISTED HERE BUT NOT ONLINE WILL RESULT IN A\n* RETURN CODE OF 4. ADDITIONALY, 'PARM =MISSMSG' WILL CAUSE A MESSAGE\n* TO BE WRITTEN FOR MISSING VOLUMES.\n*\n* FOR SYSIN DD STATEMENT, SPECIFY VOLUME SERIAL NUMBERS STARTING IN\n* CARD COLUMN 1.\n*\n* ALSO, '+' CAN BE USED IN YOUR CONTROL CARD COLUMN '1' FOR COMMENTS\n* IN YOUR CONTROL CARDS\n*\n* --------------------------------------------------------------------\n*\nLSPACE   CSECT\n         BASER R12              .REG EQUS, SAVE, AND USING\n         LA    R11,SAVEAREA     .LOADUP SAVEAREA ADDRESS\n         ST    R13,4(,R11)      .CHAIN TCB SAVEAREA\n         ST    R11,8(,R13)      .....WITH LSPACE SAVEAREA\n         LR    R13,R11          .PRIME R13 WITH LSPACE SAVEAREA\n         L     R1,0(,R1)        LOAD PARM PTR\n         CLC   =H'0',0(R1)      DID WE GET A PARM?\n         BE    NOPARM           NO - BRANCH\n         CLC   =C'MISSMSG',2(R1)  MESSAGE FOR MISSING VOLUMES?\n         BNE   NOPARM           DON'T KNOW THIS PARM\n         MVI   MISSMSG,C'Y'     INDICATE MESSAGE FOR MISSING VOLS\n*\nNOPARM   OPEN  (SYSPRINT,(OUTPUT),SYSIN,(INPUT))\n         TIME\n         ST    R1,PACKAREA+4         STORE THE '0CYYDDDF' FROM TIME\n         UNPK  DATE(5),PACKAREA+5(3) UNPACK THE DATE FOR PRINTING\n         LR    R1,R0                 CAPTURE THE TIME PART\n         SRL   R1,16                 SHIFT OUT THE 'SSTH' PART\n         SLL   R1,4                  SHIFT BACK FOR THE SIGN CHARACTER\n         LA    R1,15(R1)             GET READY FOR UNPACKING\n         ST    R1,PACKAREA+4         STORE THE 'HHMMF' FROM TIME\n         UNPK  PACKAREA(4),PACKAREA+5(3)\n         MVC   HOURS(2),PACKAREA     MOVE IN HOUR OF DAY\n         MVC   MINUTES(2),PACKAREA+2 MOVE IN MINUTES\n         PUT   SYSPRINT,TITLE0\n         PUT   SYSPRINT,BLANKS\n         PUT   SYSPRINT,TITLE1\n         PUT   SYSPRINT,TITLE2\n         PUT   SYSPRINT,TITLE3\n         PUT   SYSPRINT,LINE\n         PUT   SYSPRINT,BLANKS\n*\n         XR    R11,R11            CLEAR GRAND TOTAL\n*\n*\nNEXTVOL  GET   SYSIN              READ SYSIN RECORD\n         CLI   0(R1),C'*'         COMMENT CARD?\n         BE    NEXTVOL            YES - IGNORE\n         CLI   0(R1),C'+'         MESSAGE CARD?\n         BNE   ISVOL              NO - MUST BE A VOLUME CARD\n         MVC   MSG(79),1(R1)      MOVE MESSAGE\n         PUT   SYSPRINT,MSG       WRITE MESSAGE\n         B     NEXTVOL            GET NEXT CARD\n*\nISVOL    MVC   VOLID(6),0(R1)     MOVE VOLID TO OUTPUT LINE\n         XC    USWORK,USWORK CLEAR UCBSCAN WORK AREA\nUCBSCAN  EQU   *\n         L     R2,CVTPTR          CVT ADDRESS\n         USING CVTMAP,R2\n         LA    R1,USPLIST         POINT TO PARMLIST\n         L     R15,CVTUCBSC       LOAD UCB SCAN ROUTINE ADDRESS\n         DROP  R2\n         BALR  R14,R15            SCAN\n         LTR   R15,R15            FOUND ONE?\n         BNZ   VOLNFND            NO - END OF UCBS - VOLUME NOT FOUND\n         L     R2,USUCBPTR        LOAD PTR TO RETURNED UCB\n         USING UCBOB,R2\n         TM    UCBSTAT,UCBONLI    IS DEVICE ONLINE?\n         BNO   UCBSCAN            NO - TRY THE NEXT ONE\n         CLC   VOLID,UCBVOLI      OUR VOLUME?\n         BNE   UCBSCAN            NO - TRY THE NEXT ONE\n         MVC   ADDRESS(3),UCBNAME    MOVE ADDRESS TO OUTPUT LINE\n         DROP  R2\n         B     GOTUCB             FOUND IT - GO PROCESS\n*\nVOLNFND  EQU   *\n         MVC   RETCODE,=H'4'      SET RETURN CODE\n         CLI   MISSMSG,C'Y'       MSG FOR MISSING VOLUMES?\n         BNE   NEXTVOL            NO - SKIP MSG\n         MVC   VOLBAD(6),VOLID    MOVE VOLSER TO MESSAGE\n         PUT   SYSPRINT,VOLBAD    WRITE ERROR MESSAGE\n         PUT   SYSPRINT,BLANKS\n         B     NEXTVOL            TRY NEXT VOLUME\n*\nGOTUCB   DS    0H\n         LR    R0,R2            .PUT UCB ADDR IN R0\n         LA    R1,LEN30         .PUT MSG AREA IN R1\n         SVC   78               .CALL UP LSPACE SVC\n         LSPACE UCB=(R2),MSG=LEN30,F4DSCB=F4DSCB\n         LTR   R15,R15          .DID IT GO OK ?\n         BZ    FORMAT\n         PUT   SYSPRINT,SVCBAD\n         B     RETURN\nFORMAT   DS    0H\n*        LA    R8,LEN30\n*        USING SPACED,R8\n         MVC   CYLSFREE(4),FREECYL   MOVE IN NUMBER OF FREE CYLS\n         MVC   TRKSFREE(4),FREETRK   MOVE IN NUMBER OF FREE TRKS\n         MVC   FREEXTNT(4),FREEEXT   MOVE IN NUMBER OF FREE EXTENTS\n         MVC   MAXCYLS(4),EXTCYL     MOVE IN LARGEST FREE CYL\n         MVC   MAXTRKS(4),EXTTRK     MOVE IN LARGEST FREE TRACK\n         SR    R10,R10               CLEAR REG FOR CALCULATIONS\n         XC    PACKAREA(8),PACKAREA  CLEAR AREA TO 0\n         PACK  PACKAREA+4(4),FREECYL(4) PACK FOR % ALLOC CALCULATION\n         CVB   R7,PACKAREA           GET BINARY VALUE\n*\n         LA    R1,F4DSCB             POINT TO FORMAT 4 DSCB\n         USING IECSDSL4,R1           ADDRESS DSECT\n         MH    R7,DS4DEVSZ+2         CYLS TIMES TRACKS PER CYL\n*\n         LR    R10,R7                TRACK COUNT TO R10\n         PACK  PACKAREA+4(4),FREETRK(4) PACK FOR % ALLOC CALCULATION\n         CVB   R7,PACKAREA           GET BINARY VALUE\n         AR    R10,R7                ADD TRACK COUNT TO TOTAL\n*\n         LH    R7,DS4DEVSZ           LOAD DEVICE CAP IN CYLS\n         MH    R7,DS4DEVSZ+2         TIME DEVICE TRACKS PER CYL\n         DROP  R1\n         L     R1,ALLDASD            GET RUNNING CAPACITY COUNTER\n         AR    R1,R7                 UPDATE WITH CAP THIS DEVICE\n         ST    R1,ALLDASD            STORE IT BACK\n         LR    R15,R7                PREPARE FOR DIVIDE\n         XR    R14,R14\n         D     R14,=F'100'           DIV CAP BY 100 FOR PCT CALCULATION\n*\n         SR    R7,R10                FIND NUMBER OF TRACKS ALLOCATED\n         AR    R11,R7                GET GRAND TOTAL OF ALLOC TRACKS\n         XR    R6,R6                 ZERO FOR DIVIDE\n         DR    R6,R15                CALCULATE % ALLOCATED\n         CVD   R7,PACKAREA           CONVERT TO DECIMAL FOR PRINTING\n         OI    PACKAREA+7,X'0F'      CHANGE SIGN FOR PRINTING\n         UNPK  PCTALLOC(3),PACKAREA+6(2)\n         CLI   PCTALLOC,X'F0'        IS LEADING DIGIT A ZERO\n         BNE   NOTZERO               BRANCH IF IT'S NOT A ZERO\n         NI    PCTALLOC,X'40'        CHANGE IT TO A BLANK\nNOTZERO  PUT   SYSPRINT,STATS\n         PUT   SYSPRINT,BLANKS\n         B     NEXTVOL               GET NEXT VOLSER\n*\nDOTOTAL  PUT   SYSPRINT,BLANKS\n         CVD   R11,PACKAREA          CONVERT GRAND TOTAL FOR PRINTING\n         OI    PACKAREA+7,X'0F'      CHANGE SIGN FOR PRINTING\n         UNPK  TOTALLOC(6),PACKAREA+4(4)\n         L     R1,ALLDASD            LOAD TOTAL CAPACITY\n         CVD   R1,PACKAREA           CONVERT TOTAL CAP FOR PRINTING\n         OI    PACKAREA+7,X'0F'      CHANGE SIGN FOR PRINTING\n         UNPK  TOTALCAP(6),PACKAREA+4(4)\n*\n         L     R15,ALLDASD           GET TOTAL CAPACITY\n         LTR   R15,R15               DID WE FIND ANY VOLUMES?\n         BZ    RETURN                NO - EXIT\n         XR    R14,R14               PREPARE FOR DIVIDE\n         D     R14,=F'100'           DIVIDE BY 100 FOR PCT CALC\n         SR    R10,R10               CLEAR REG FOR DIVIDE\n         DR    R10,R15               DIVDE TO GET PERCENT ALLOCATED\n*\n         CVD   R11,PACKAREA          CONVERT PERCENT ALLOC FOR PRINTING\n         OI    PACKAREA+7,X'0F'      CHANGE SIGN OFR PRINTING\n         UNPK  PERCENT(2),PACKAREA+6(2)\n         PUT   SYSPRINT,TOTALINE\n         PUT   SYSPRINT,LASTLINE\nRETURN   CLOSE SYSPRINT\n         LH    R15,RETCODE\n         L     R13,4(,R13)\n         RETURN (14,12),RC=(15)\n*\n*\nMOVVOL   MVC   0(*-*,R5),0(R3) .GENERIC MOVER\nPACKAREA DS    D'0'\nSAVEAREA DS    18F\n*   PARM LIST AND ARGUMENTS FOR IOSVUCB\nUSPLIST  DC    A(USWORK),A(USDEVT),X'80',AL3(USUCBPTR)\nUSWORK   DC    XL100'00'          WORK AREA FOR IOSSVUCB\nUSDEVT   DC    AL1(UCB3DACC)      DASD DEVICES ONLY\nUSUCBPTR DS    F\n*\nALLDASD  DC    F'0'                RUNNING COUNT OF TRACK CAP /100\nRETCODE  DC    H'0'               RETURN CODE\nMISSMSG  DC    C'N' PRINT MSG FOR MISSING VOLS - Y OR N\nF4DSCB   DS    CL96                RETURN AREA FOR F4 DSCB\nVOLBAD   DC    CL133'XXXXXX   *** VOLUME NOT FOUND'\nSVCBAD   DC    CL133'*** ERROR RETURN FROM SVC 78'\nBLANKS   DC    CL133' '\nMSG      DC    CL133' '\nLINE     DC    133C'-'\nTITLE0   DC    C'DASD UTILIZATION REPORT: '\nDATE     EQU   *\n         DC    CL8' '\nHOURS    EQU   *\n         DC    CL3'  :'\nMINUTES  EQU   *\n         DC    CL(133-(*-TITLE0))' '\nTITLE1   DC    C'VOLUME   ADDRESS   TOTAL FREE   LARGEST FREE'\n         DC    C'   NUMBER    PERCENT'\n         DC    CL(133-(*-TITLE1))' '\nTITLE2   DC    C'                     SPACE         EXTENT   '\n         DC    C'   OF FREE   ALLOCATED'\n         DC    CL(150-(*-TITLE2))' '\nTITLE3   DC    C'                   CYLS  TRKS    CYLS + TRKS'\n         DC    C'   EXTENTS            '\n         DC    CL(133-(*-TITLE3))' '\nSTATS    DC    CL62' '\n         DC    CL1'%'\n         DC    CL87' '\nTOTALINE DC    C'** TOTAL TRACKS ON LISTED PACKS : '\nTOTALCAP DC    CL6' '\n         DC    CL(133-(*-TOTALINE))'        *****'\nLASTLINE DC    C'******** TOTAL TRACKS ALLOCATED : '\nTOTALLOC DC    CL6' '                GRAND TOTAL GOES HERE\n         DC    C'  ('\nPERCENT  DC    CL2' '                PERCENT ALLOCATED GOES HERE\n         DC    C'%)'\n         DC    CL(133-(*-LASTLINE))' *****'\nVOLID    EQU   STATS,6\nADDRESS  EQU   STATS+11,3\nCYLSFREE EQU   STATS+19\nTRKSFREE EQU   STATS+25\nMAXCYLS  EQU   STATS+33\nMAXTRKS  EQU   STATS+40\nFREEXTNT EQU   STATS+48\nPCTALLOC EQU   STATS+59\nLEN30    DS    0CL30           .LSPACE WILL PUT GOODIES HERE\nLITERAL  DS    CL6             .TEST FOR 'SPACE='\nFREECYL  DS    CL4             .TOTAL NUMBER OF FREE CYLINDERS\n         DS    CL1             .COMMA\nFREETRK  DS    CL4             .TOTAL NUMBER OF FREE TRACKS\n         DS    CL1             .COMMA\nFREEEXT  DS    CL4             .TOTAL NUMBER OF FREE EXTENTS\n         DS    CL1             .COMMA\nEXTCYL   DS    CL4             .NUMBER OF CYLS IN LARGEST FREE EXTENT\n         DS    CL1             .COMMA\nEXTTRK   DS    CL4             .NUMBER OF TRKS IN LARGEST FREE EXTENT\nSYSPRINT DCB   DDNAME=SYSPRINT,RECFM=F,LRECL=133,MACRF=PM,DSORG=PS\nSYSIN    DCB   DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,EODAD=DOTOTAL,  X\n               MACRF=GL\n         LTORG\n         CVT   DSECT=YES\n         DSECT\n         IEFUCBOB\n         IECSDSL1 4\n         END\n/*\n//L.SYSLMOD DD DISP=SHR,DSN=SYS3.TEMP.LINKLIB\n//L.SYSIN DD *\n  SETCODE AC(1)\n  NAME DASDROOM(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DAYTIMEA": {"ttr": 1025, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0e\\x00\\x00\\x00\\x90\\x15/\\x00\\x91\\x05/\\x10\\x00\\x009\\x001\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3\\xe2@@@@'", "ispf": {"version": "01.14", "flags": 0, "createdate": "1990-06-01T00:00:00", "modifydate": "1991-02-21T10:00:00", "lines": 57, "newlines": 49, "modlines": 0, "user": "PANELS"}, "text": ")ATTR\n+ TYPE(TEXT)   INTENS(LOW)  SKIP(ON)\n_ TYPE(INPUT)  INTENS(LOW)  CAPS(ON)\n# TYPE(INPUT)  INTENS(HIGH) CAPS(ON)\n\u00a2 TYPE(TEXT)  INTENS(HIGH) COLOR(YELLOW)\n{ TYPE(TEXT)  INTENS(HIGH) COLOR(RED)\n)BODY\n%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*\n+                      DAILY REMINDER%ADD/UPDATE+MENU\n+\n+\n%COMMAND ===>#Z\n+\n\u00a2APPOINTMENT DATE :+#Z +/#Z +/#Z +                                        +\n+\n+                                                 %MAXIMUM LENGTH OF TEXT>\n+\n\u00a2APPOINTMENT TEXT :+_Z                                                    +\n+\n%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*%*+*\n)INIT\n/*\n/*--------------------------------------------------------------------*/\n/* DEFINE DIALOG 'Z' VARIABLES                                        */\n/*--------------------------------------------------------------------*/\n/*\n.ZVARS  = 'DCMD DIMM DIDD DIYY DTXT'\n.CURSOR =  DIMM\n/*\n/*--------------------------------------------------------------------*/\n/* SET INITIAL VALUES FOR VARIBLES PRIOR TO PANEL DISPLAY             */\n/*--------------------------------------------------------------------*/\n/*\n&DSEL  = ' '\n&DCMD  = ' '\nIF (&KEEP = 0)\n  &DIMM  = ' '\n  &DIDD  = ' '\n  &DIYY  = ' '\n  &DTXT  = ' '\n)PROC\n/*\n/*--------------------------------------------------------------------*/\n/* IF USER REQUEST TO ADD MORE DATA, SET INPUT FLAG ON                */\n/*--------------------------------------------------------------------*/\n/*\nVER (&DIMM,NB,PICT,NN,MSG=DTMM004)\nVER (&DIMM,NB,RANGE,01,12,MSG=DTMM005)\nVER (&DIDD,NB,PICT,NN,MSG=DTMM004)\nVER (&DIDD,NB,RANGE,01,31,MSG=DTMM006)\nVER (&DIYY,NB,PICT,NN,MSG=DTMM004)\nVER (&DIYY,NB,RANGE,90,99,MSG=DTMM007)\nIF  (&DIMM \u00ac= ' ')\n  VER (&DTXT,NB,MSG=DTMM008)\n  VER (&DCMD,NB,LIST,SAVE,MSG=DTMM003)\n  VPUT (DIMM DIDD DIYY DTXT)\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DAYTIMR#": {"ttr": 1027, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x91\\x04O\\x00\\x91\\x06o\\x13V\\x00p\\x00J\\x00\\x00\\xc4\\xd6\\xc3@@@@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1991-02-13T00:00:00", "modifydate": "1991-03-07T13:56:00", "lines": 112, "newlines": 74, "modlines": 0, "user": "DOC"}, "text": "\n              * * *  DAYTIMER APPOINTMENT CALENDAR * * *\n\n\n\n  REVISED:  FEBRUARY 20, 1991\n\n            GEORGE RAMAS\n            SYSTEMS ANALYST\n            CATELLUS DEVELOPMENT CORPORATION\n            MIS DEPARTMENT 3RD FLOOR\n            SAN FRANCISCO, CALIFORNIA 94105\n            (415) 974-4597\n\n            DISPLAYS & DOCU. BY:  GEORGE RAMAS\n            TECHNICAL REWRITE BY: JAY RHODES (415) 351-5411\n\n\n/* THE PURPOSE OF THIS CLIST IS TO NOTIFY YOU OF CALENDER             *\n/* APPOINTMENTS. YOU CAN ADD TO YOUR CALENDAR OR UPDATE AN APPOINTMENT*\n/* ALREADY LOADED.  IT WILL NOTIFY YOU WHEN YOU LOG ONTO TSO AND      *\n/* DISPLAY ALL APPOINTMENTS FOR THAT DAY ON YOUR FILE.  YOU CAN       *\n/* ALL SEE ALL YOUR LOGGED APPOINTMENTS BY CALLING PFK6 'DAYTIMER'    *\n/*                                                                    *\n/*                                                                    *\n/*  REQUIREMENTS:  YOUR MUST HAVE A AN 80 BYTE DATA SET CALLED:       *\n/*                 LOGONID.DATE.DATA (PS FORMAT) AND A DSN CALLED     *\n/*                 LOGONID.DAYTIMER.ISPTLIB (PO FORMAT) 80 BYTE       *\n/*                 RECFM.                                             *\n/*                                                                    *\n/*                 THESE PANELS ARE SETUP FOR COLOR MONITORS, BUT IT'S*\n/*                 NOT NECESSARY TO HAVE ONE.                         *\n/*                                                                    *\n/*                 YOU NEED TO COPY 'THIS' CLIST MEMBER INTO YOUR     *\n/*                 CLIST LIBRARY.                                     *\n/*                                                                    *\n/*                 DAYTIMEA    IN YOUR PLIB                           *\n/*                 DAYTIMER    IN YOUR PLIB (CAREFUL NOT TO MIX UP    *\n/*                                           YOU PLIB & CLIST MEMBER) *\n/*                 DTMM00      IN YOUR MLIB                           *\n/*                 DTMM01      IN YOUR MLIB                           *\n/*                                                                    *\n/*                 IN ORDER TO HAVE YOUR APPOINTMENTS DISPLAY         *\n/*                 WHEN YOU LOGON YOU MUST HAVE A 'SIGNON' MEMBER     *\n/*                 IN YOUR CLIST WHICH CONTAIN 'DAYTIMER'             *\n/*                                                                    *\n/*            COLUMN 1                                                *\n/*                   WRITE  **  EXECUTE SIGNON                        *\n/*                   DAYTIMER                                         *\n/*                   SDATE                                            *\n/*                                                                    *\n/*                   OR HAVE 'DAYTIMER' CANCATENATED IN YOUR TSO      *\n/*                   LOGON PROC.                                      *\n/*                                                                    *\n/*                 CHECK YOU TSO LOGON PROC, YOUR LIBRARIES MAY AL-   *\n/*                 READY BE CANCATENATED.  VERIFY YOUR CANCATENATION  *\n/*                 WITH YOUR TECHNICAL SERVICES DEPARTMENT.           *\n/*                                                                    *\n/*                 ALLOCATE A PDS LIBRARY 80/9440 CALLED LOGID.PLIB   *\n/*                 AND COPY THE SUPPLIED PLIB MEMBERS INTO THIS.      *\n/*                                                                    *\n/*                 ALLOCATE A PDS LIBRARY 80/9440 CALLED LOGID.MLIB   *\n/*                 AND COPY THE SUPPLIED MLIB MEMBERS INTO THIS.      *\n/*                                                                    *\n/*                 YOU ALSO NEED THE SUPPLIED LOAD PROGRAM 'CLEAR' IN *\n/*                 YOUR LOAD LIBRARY.  CHANGE &UTIL BELOW FOR YOUR    *\n/*                 LOAD LIBRARY.                                      *\n/*                                                                    *\n/*          >>>>>> BE CAREFUL WHEN SETTING THIS UP, IF YOU MESS UP    *\n/*                 YOUR SIGNON CLIST YOU WILL HAVE TO HAVE IT RESTORED*\n/*                 TO BE ABLE TO LOGON AND FIX IT OR RENAME IT        *\n/*                 THROUGH YOUR TSO READY COMMAND.                    *\n/*                                                                    *\n/*                                                                    *\n/*            TO PERFORM A 'DISPLAY' KEY IN 'DAYTIMER' ON YOUR        *\n/*            TSO (PF6) SCREEN AND THIS WILL DISPLAY ALL APPOINTMENTS *\n/*            YOU HAVE ENTERED.  YOU CAN PERFORM EDITS AT THIS DISPLAY*\n/*            BY USING THE AN 'A' FOR ADD AT THE COMMAND LINE, 'D'    *\n/*            FOR DELETION AND 'U' FOR UPDATING NEXT TO THE DESIRED   *\n/*            COMMENT.                                                *\n/*                                                                    *\n/*            ITEMS WILL AUTOMATICALLY DELETE WHEN APPOINTMENT DATE   *\n/*            IS LESS THAN YOUR LOGON DATE.  IF NO ITEMS RESIDE IN    *\n/*            YOUR DATA SET, IT WILL DISPLAY 'APPOINTMENT FILE        *\n/*            CLEARED' WHEN YOU LOGON TO TSO.                         *\n/*                                                                    *\n/*            WHEN YOU DISPLAY YOUR APPOINTMENTS AT A COMMAND CLIST   *\n/*            LEVEL, SOME APPOINTMENTS MAY NOT BE IN SORTED ORDER     *\n/*            BECAUSE SOME APPOINTMENTS WERE INSERTED BETWEEN DATES.  *\n/*            SIMPLY SORT AT THE COMMAND LEVEL OF YOUR 'APPOINTMENT   *\n/*            CALENDAR' PANEL.  THEY WILL THOUGH, ALWAYS DISPLAY IN   *\n/*            SORTED ORDER WHEN YOU LOGON ON TO TSO.                  *\n/*                                                                    *\n/*            **NOTE** YOU CANNOT USE '&' IN YOUR TEXT.  IF YOU DO,   *\n/*                     IT WILL DISPLAY AN ERROR MESSAGE WHEN YOU LOGON*\n/*                     AND DELETE THAT PARTICULAR APPOINTMENT MESSAGE.*\n/*                                                                    *\n/*            IF YOU HAVE SEVERAL APPOINTMENTS TO ENTER YOU CAN       *\n/*            EDIT YOUR FILE 'LOGONID.DATE.DATA' AND MANUALLY ADD     *\n/*            ALL YOUR APPOINTMENTS AS LONG AS IT IS IN THE CORRECT   *\n/*            FORMAT.  WHEN ADDING AN APPOINTMENT WITH THE 'ADD/UPDATE'\n/*            FEATURE OR EDIT TO 'LOGONID.DATE.DATA, YOUR MAXIMUM     *\n/*            TEXT LENGTH IS 53 BYTES.                                *\n/*                                                                    *\n/*                                                                    *\n/*            ***IMPORTANT ***                                        *\n/*                                                                    *\n/*            BE SURE TO RENAME YOUR PANEL MEMBER 'P#PAYTMR' TO       *\n/*            'DAYTIMER' AND YOUR CLIST MEMBER 'C#DAYTMR' ALSO        *\n/*            TO 'DAYTIMER' IN THEIR RESPECTIVE LIBRARIES.            *\n/*                                                                    *\n/*                                                                    *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DTMM00": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x90\\x15/\\x00\\x91\\x04O\\x15\\x16\\x00\\x1e\\x00\\x1e\\x00\\x00\\xd4\\xc5\\xe2\\xe2\\xc1\\xc7\\xc5@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1990-06-01T00:00:00", "modifydate": "1991-02-13T15:16:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "MESSAGE"}, "text": "DTMM000             .ALARM = YES\n'DTMM000I Appointment for <&dimm/&didd/&diyy> added successfully'\n\nDTMM001             .ALARM = YES\n'DTMM001E Appointment for <&dimm/&didd/&diyy> not added. Reason code = &add'\n\nDTMM002             .ALARM = YES\n'DTMM002A Appointment for <&dimm/&didd/&diyy> not added. Reason code = &add'\n\nDTMM003             .ALARM = YES\n'DTMM003A Enter <SAVE> to process additions or PF3/15 to terminate'\n\nDTMM004             .ALARM = YES\n'DTMM004A Enter schedule date MM/DD/YY format'\n\nDTMM005             .ALARM = YES\n'DTMM005A Month format invalid or out of range <01-12>. Please re-enter'\n\nDTMM006             .ALARM = YES\n'DTMM006A Day format invalid or out of range <01-31>. Please re-enter'\n\nDTMM007             .ALARM = YES\n'DTMM007A Year format invalid or out of range <90-99>. Please re-enter'\n\nDTMM008             .ALARM = YES\n'DTMM008A Enter schedule information below. <1-50> characters'\n\nDTMM009             .ALARM = YES\n'DTMM009I Appointment file updated'\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "DTMM01": {"ttr": 1032, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90\\x15/\\x00\\x90\\x15/\\x10U\\x00\\x0c\\x00\\x0c\\x00\\x00\\xd4\\xc5\\xe2\\xe2\\xc1\\xc7\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-06-01T00:00:00", "modifydate": "1990-06-01T10:55:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "MESSAGE"}, "text": "DTMM010             .ALARM = YES\n'DTMM010I &ctr entries deleted'\n\nDTMM011             .ALARM = YES\n'DTMM011I Valid subcommands are A<dd>, D<elete>, U<pdate>'\n\nDTMM012             .ALARM = YES\n'DTMM012I &ctr eNtries updated'\n\nDTMM013             .ALARM = YES\n'DTMM013E &zuser..DAYTIMER.ISPTLIB must be pre-allocated. DSORG(PO)'\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GDGBLD": {"ttr": 1034, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x90\\x15/\\x00\\x90\\x15/\\x10Q\\x002\\x002\\x00\\x00\\xc3\\xd3\\xc9\\xe2\\xe3@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1990-06-01T00:00:00", "modifydate": "1990-06-01T10:51:00", "lines": 50, "newlines": 50, "modlines": 0, "user": "CLIST"}, "text": "PROC 4 SUF GDGPREF GNM ACTION TRACE\n/*\n/*--------------------------------------------------------------------*\n/*                                                                    *\n/* FUNCTION - GENERATION DATA-GROUP UTILITY                           *\n/*                                                                    *\n/* PURPOSE  - BUILDS NEW GDG ENTRY                                    *\n/*                                                                    *\n/* AUTHOR   - ____________________________                            *\n/*                                                                    *\n/* DATE     - ___________ 1990                                        *\n/*                                                                    *\n/*--------------------------------------------------------------------*\n/*\n/*--------------------------------------------------------------------*\n/* ENABLE DEBUG MODE IF REQUESTED BY USER OR FUNCTION AS NORMAL       *\n/*--------------------------------------------------------------------*\n/*\nIF &TRACE = THEN -\n   CONTROL NOFLUSH NOMSG\nELSE -\n   CONTROL NOFLUSH MSG CONLIST LIST SYMLIST\n/*\n/*---------------------------------------------,----------------------*\n/* DISABLE ISPF DIALOG DIAGNOSTICS AND HANDLE ALL ERRORS WITH COMMAND *\n/* LIST ..                                                            *\n/*--------------------------------------------------------------------*\n/*\nISPEXEC CONTROL ERRORS RETURN\nCONTROL MSG\nDEFINE GDG(NAME(&GDGPR_________                            *\n/*                                                                    *\n/* DATE     - ___________ 1990                                        *\n/*                                                                    *\n/*--------------------------------------------------------------------*\n/*\n/*--------------------------------------------------------------------*\n/* ENABLE DEBUG MODE IF REQUESTED BY USER OR FUNCTION AS NORMAL       *\n/*----------------------------F) &ALL OUTFILE(D&SUF.1)\n     SET HCHARCNL = &ZCHARCNL\n     SET ZCHARCNL = NOCC\n     ISPEXEC VPUT (ZCHARCNL)\n     ISPEXEC BROWSE DATASET('&SYSUID..GDGPRT.LIST')\n     SET ZCHARCNL = &HCHARCNL\n     ISPEXEC VPUT (ZCHARCNL)\n     SET &ZEDSMSG = &STR(GDG WAS &ACTION)\n     SET &ZEDLMSG = &STR(THE GDGINDEX &GDGPREF WAS &ACTION RC=&CCND)\n     ISPEXEC SETMSG MSG(ISRZ000)\n   END\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GDGDEL": {"ttr": 1036, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x90\\x15/\\x00\\x90\"\\x0f\\x14\\x03\\x00w\\x00w\\x00\\x00\\xc3\\xd3\\xc9\\xe2\\xe3@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-06-01T00:00:00", "modifydate": "1990-08-08T14:03:00", "lines": 119, "newlines": 119, "modlines": 0, "user": "CLIST"}, "text": "PROC 5 GDGPREF GDGENTS GDGNAME SUF ACTION TRACE\n/*\n/*--------------------------------------------------------------------*\n/*                                                                    *\n/* FUNCTION - GENERATION DATA-GROUP UTILITY                           *\n/*                                                                    *\n/* PURPOSE  - DELETE GDG ENTRY (INVOKED BY GDGUTL)                    *\n/*                                                                    *\n/* AUTHOR   - ____________________________                            *\n/*                                                                    *\n/* DATE     - ___________ 1990                                        *\n/*                                                                    *\n/*--------------------------------------------------------------------*\n/*\n/*--------------------------------------------------------------------*\n/* ENABLE DEBUG MODE IF REQUESTED BY USER OR FUNCTION AS NORMAL       *\n/*--------------------------------------------------------------------*\n/*\nIF &TRACE = THEN -\n   CONTROL NOFLUSH NOMSG\nELSE -\n   CONTROL NOFLUSH MSG CONLIST LIST SYMLIST\n/*\n/*--------------------------------------------------------------------*\n/* SET COMMAND LIST INITIAL VALUES                                    *\n/*--------------------------------------------------------------------*\n/*\n/*\n/*--------------------------------------------------------------------*\n/* DISABLE ISPF DIALOG DIAGNOSTICS AND HANDLE ALL ERRORS WITH COMMAND *\n/* LIST ..                                                            *\n/*--------------------------------------------------------------------*\n/*\nISPEXEC CONTROL ERRORS RETURN\n/*\n/*--------------------------------------------------------------------*\n/* INVOKE LISTCAT COMMAND TO GATHER INFORMATION ON GDG                *\n/*--------------------------------------------------------------------*\n/*\nLISTC ENT(&GDGPREF) &ALL OUTFILE(D&SUF.1)\nSET &CCND = &LASTCC\n/*\n/*--------------------------------------------------------------------*\n/* IF GDG DOES NOT EXIST, DISPLAY ERROR MESSAGE                       *\n/*--------------------------------------------------------------------*\n/*\nIF &CCND > 0 THEN -\n   DO\n     SET &ZEDSMSG = &STR(GDG NOT FOUND)\n     SET &ZEDLMSG = &STR(THE GDGINDEX &GDGPREF WAS NOT FOUND RC=&CCND)\n     ISPEXEC SETMSG MSG(ISRZ000)\n   END\n/*\n/*--------------------------------------------------------------------*\n/* OTHERWISE, PROCEED WITH MODIFY                                     *\n/*--------------------------------------------------------------------*\n/*\nELSE -\n   DO\n     SET BLANKS = +\n         &STR(                                                  )\n     SET GDGWRK = +\n         &STR(&SUBSTR(1:45,&STR(&GDGNAME.&BLANKS))&STR(&GDGENTS))\n     SET HCHARCNL = &ZCHARCNL\n     SET ZCHARCNL = NOCC\n     ISPEXEC VPUT (ZCHARCNL)\n     FREE DD(D&SUF.1) DELETE\n     ATTR $G$R$O             +\n     LRECL(133)              +\n     BLKSIZE(9044)           +\n     RECFM(F B M)\n     ATTR $G$R$I             +\n     LRECL(80)               +\n     BLKSIZE(80)             +\n     RECFM(F B)\n     ALLOC DD(GDGOUT)                  +\n           DS('&SYSUID..GDGPRT1.LIST') +\n           REUSE US($G$R$O)            +\n           MOD                         +\n           CAT                         +\n           SPACE(2,1)                  +\n           TRACK\n     ALLOC DD(GDGIN)                   +\n           DS('&SYSUID..GDGIN.DATA')   +\n           REUSE                       +\n           US($G$R$I)                  +\n           NEW                         +\n           DEL                         +\n           SPACE(1)                    +\n           TRACK\n     ALLOC DD(SYSPRINT)                +\n           DS('&SYSUID..GDGPRT2.LIST') +\n           REUSE                       +\n           US($L$C$P)                  +\n           MOD                         +\n           CAT                         +\n           SPACE(2,1)                  +\n           TRACK\n     OPENFILE  GDGIN OUTPUT\n     SET GDGIN = &STR(&GDGWRK)\n     PUTFILE GDGIN\n     CLOSFILE GDGIN\n     CALL 'DEV.GLR.LOADLIB(GDGRESET)'\n     ISPEXEC BROWSE DATASET('&SYSUID..GDGPRT1.LIST')\n     ISPEXEC BROWSE DATASET('&SYSUID..GDGPRT2.LIST')\n     SET ZCHARCNL = &HCHARCNL\n     ISPEXEC VPUT (ZCHARCNL)\n     FREE DD(D&SUF.3) DELETE\n     SET &ZEDSMSG = &STR(GDG WAS &ACTION)\n     SET &ZEDLMSG = &STR(THE GDGINDEX &GDGPREF WAS &ACTION RC=&CCND)\n     ISPEXEC SETMSG MSG(ISRZ000)\n   END\nFREE DD(GDGIN) DELETE\nIF &K = D THEN -\n   FREE DD(GDGOUT SYSPRINT) DELETE\nELSE -\n   FREE DD(GDGOUT SYSPRINT)\nALLOC DD(SYSPRINT) DS(*) REUSE\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GDGMOD": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x90\\x15/\\x00\\x90\"\\x0f\\x14\\x02\\x00w\\x00w\\x00\\x00\\xc3\\xd3\\xc9\\xe2\\xe3@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-06-01T00:00:00", "modifydate": "1990-08-08T14:02:00", "lines": 119, "newlines": 119, "modlines": 0, "user": "CLIST"}, "text": "PROC 6 GDGENTL GDGENTS ACTION GDGPREF GDGNAME SUF TRACE\n/*\n/*--------------------------------------------------------------------*\n/*                                                                    *\n/* FUNCTION - GENERATION DATA-GROUP UTILITY                           *\n/*                                                                    *\n/* PURPOSE  - MODIFY CURRENT LIMITS OF A GDG (INVOKED BY GDGUTL)      *\n/*                                                                    *\n/* AUTHOR   - ____________________________                            *\n/*                                                                    *\n/* DATE     - ___________ 1990                                        *\n/*                                                                    *\n/*--------------------------------------------------------------------*\n/*\n/*--------------------------------------------------------------------*\n/* ENABLE DEBUG MODE IF REQUESTED BY USER OR FUNCTION AS NORMAL       *\n/*--------------------------------------------------------------------*\n/*\nIF &TRACE = THEN -\n   CONTROL NOFLUSH NOMSG\nELSE -\n   CONTROL NOFLUSH MSG CONLIST LIST SYMLIST\n/*\n/*--------------------------------------------------------------------*\n/* SET COMMAND LIST INITIAL VALUES                                    *\n/*--------------------------------------------------------------------*\n/*\n/*\n/*--------------------------------------------------------------------*\n/* DISABLE ISPF DIALOG DIAGNOSTICS AND HANDLE ALL ERRORS WITH COMMAND *\n/* LIST ..                                                            *\n/*--------------------------------------------------------------------*\n/*\nISPEXEC CONTROL ERRORS RETURN\n/*\n/*--------------------------------------------------------------------*\n/* INVOKE LISTCAT COMMAND TO GATHER INFORMATION ON GDG                *\n/*--------------------------------------------------------------------*\n/*\nLISTC ENT(&GDGPREF) &ALL OUTFILE(D&SUF.1)\nSET &CCND = &LASTCC\n/*\n/*--------------------------------------------------------------------*\n/* IF GDG DOES NOT EXIST, DISPLAY ERROR MESSAGE                       *\n/*--------------------------------------------------------------------*\n/*\nIF &CCND > 0 THEN -\n   DO\n     SET &ZEDSMSG = &STR(GDG NOT FOUND)\n     SET &ZEDLMSG = &STR(THE GDGINDEX &GDGPREF WAS NOT FOUND RC=&CCND)\n     ISPEXEC SETMSG MSG(ISRZ000)\n   END\n/*\n/*--------------------------------------------------------------------*\n/* OTHERWISE, PROCEED WITH MODIFY                                     *\n/*--------------------------------------------------------------------*\n/*\nELSE -\n   DO\n     SET BLANKS = +\n         &STR(                                                  )\n     SET GDGWRK = +\n         &STR(&SUBSTR(1:45,&STR(&GDGNAME.&BLANKS))&STR(&GDGENTS))\n     SET HCHARCNL = &ZCHARCNL\n     SET ZCHARCNL = NOCC\n     ISPEXEC VPUT (ZCHARCNL)\n     FREE DD(D&SUF.1) DELETE\n     ATTR $G$R$O             +\n     LRECL(133)              +\n     BLKSIZE(9044)           +\n     RECFM(F B M)\n     ATTR $G$R$I             +\n     LRECL(80)               +\n     BLKSIZE(80)             +\n     RECFM(F B)\n     ALLOC DD(GDGOUT)                  +\n           DS('&SYSUID..GDGPRT1.LIST') +\n           REUSE US($G$R$O)            +\n           MOD                         +\n           CAT                         +\n           SPACE(2,1)                  +\n           TRACK\n     ALLOC DD(GDGIN)                   +\n           DS('&SYSUID..GDGIN.DATA')   +\n           REUSE                       +\n           US($G$R$I)                  +\n           NEW                         +\n           DEL                         +\n           SPACE(1)                    +\n           TRACK\n     ALLOC DD(SYSPRINT)                +\n           DS('&SYSUID..GDGPRT2.LIST') +\n           REUSE                       +\n           US($L$C$P)                  +\n           MOD                         +\n           CAT                         +\n           SPACE(2,1)                  +\n           TRACK\n     OPENFILE  GDGIN OUTPUT\n     SET GDGIN = &STR(&GDGWRK)\n     PUTFILE GDGIN\n     CLOSFILE GDGIN\n     CALL 'DEV.GLR.LOADLIB(GDGRESET)'\n     ISPEXEC BROWSE DATASET('&SYSUID..GDGPRT1.LIST')\n     ISPEXEC BROWSE DATASET('&SYSUID..GDGPRT2.LIST')\n     SET ZCHARCNL = &HCHARCNL\n     ISPEXEC VPUT (ZCHARCNL)\n     FREE DD(D&SUF.3) DELETE\n     SET &ZEDSMSG = &STR(GDG WAS &ACTION)\n     SET &ZEDLMSG = &STR(THE GDGINDEX &GDGPREF WAS &ACTION RC=&CCND)\n     ISPEXEC SETMSG MSG(ISRZ000)\n   END\nFREE DD(GDGIN) DELETE\nIF &K = D THEN -\n   FREE DD(GDGOUT SYSPRINT) DELETE\nELSE -\n   FREE DD(GDGOUT SYSPRINT)\nALLOC DD(SYSPRINT) DS(*) REUSE\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GDGUTIL#": {"ttr": 1042, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x91\\x03\\x9f\\x00\\x91\\x05\\x0f\\x11@\\x005\\x00(\\x00\\x00\\xc4\\xd6\\xc3@@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1991-02-08T00:00:00", "modifydate": "1991-02-19T11:40:00", "lines": 53, "newlines": 40, "modlines": 0, "user": "DOC"}, "text": "\n                     ****  G D G U T I L  ****\n\n\n  REVISED:  FEBRUARY 20, 1991\n\n            GEORGE RAMAS\n            SYSTEM ANALYST\n            CATELLUS DEVELOPMENT CORPORATION\n            MIS DEPARTMENT 3RD FLOOR\n            SAN FRANCISCO, CALIFORNIA 94105\n            (415) 974-4597\n\n\n  THIS TSO ISPF PANEL DRIVEN UTILITY HAS BEEN IMPROVED FROM PREVIOUS\n  VERSIONS ON THE PAST UTILITY TAPES.  THIS UTILITY ALLOWS YOU TO\n  CREATE, DELETE OR MODIFY GDG INDEXES.  AS AN EXAMPLE, SAY YOU HAVE AN\n  INDEX BUILT WITH 3 ENTRY LIMITS AND YOU WANT TO CHANGE IT TO 10 ENTRY\n  LIMITS.  THIS PANEL WILL AUTOMATICALLY CHANGE ANY EXISTING ENTRIES\n  WHETHER THEY HAVE CATALOGED ENTRIES OR NOT.  YOU CAN ALSO LIST GDG\n  INFORMATION (SHORT OR MORE DETAILED) ABOUT YOU BLDGS DATA SETS.\n  YOU CAN DELETE BLDG INDEXES BUT ALL GENERATIONS MUST BE DELETED BEFORE\n  ENTRY IS DELETED.\n\n  THIS PANEL IS SET FOR COLOR MONITORS, BUT IS NOT NECESSARY IF YOU DO\n  NOT HAVE ONE.\n\n\n  1).  IN YOUR CANCATENATED CLIST OR CMDPROC THE FOLLOWING MEMBERS\n       ARE TO RESIDE:\n\n       GDGBLD\n       GDGDEL (CHANGE 'CALL 'DEV.GLR.LOADLIB(GDGRESET)' TO YOUR LOADLIB\n       GDGMOD (CHANGE 'CALL 'DEV.GLR.LOADLIB(GDGRESET)' TO YOUR LOADLIB\n       GDGUTIL\n       GDGUTL\n\n\n  2).  IN YOUR CANCATENATED PLIB OR PANELS LIBRARY, THE FOLLOWING\n       MEMBER IS TO RESIDE:\n\n       GDGUTILP\n\n\n       TO MAKE ACCESS EASY, YOU CAN ADD THIS COMMAND TO YOU TSO/ISPF\n       MENU.  YOUR COMMAND CALL WILL BE 'CMD(GDGUTIL)'\n\n  3).  ASSEMBLE THIS PROGRAM INTO YOUR LOAD LIBARY REFLECTED ABOVE\n\n       GDGRESET\n\n\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GDGUTILP": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x91\\x00\\x9f\\x00\\x91\\x00\\x9f\\x12\\x12\\x00:\\x00=\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3\\xe2@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1991-01-09T00:00:00", "modifydate": "1991-01-09T12:12:00", "lines": 58, "newlines": 61, "modlines": 0, "user": "PANELS"}, "text": ")ATTR\n\u00a2 TYPE(TEXT) SKIP(ON) COLOR(YELLOW)\n! TYPE(TEXT) SKIP(ON) COLOR(GREEN)\n{ TYPE(TEXT) SKIP(ON) COLOR(RED)\n@ TYPE(TEXT) SKIP(ON) COLOR(PINK)\n)BODY\n\u00a2----------------------- Generation Data Group Utility -------------------------\n% Command ===>_ZCMD\n+\n% GDG DSNAME  ===>_GDGPREF                              \u00a2(35 CHARS MAXIMUM)\n\u00a2 IN QUOTES\n+\n%  SELECTION ===>_G+\n+\n+   %I@-@LIST THE GDG INDEX ENTRY     %L\u00a2-\u00a2LIST THE GDG INDEX WITH\n+       @INFORMATION (SHORT VERSION)      \u00a2VOLSER INFORMATION AND\n+       @WITH IDCAMS LIMIT DISPLAY        \u00a2IDCAMS LIMIT DISPLAY (LONG VERSION)\n+\n+\n+   %C{-CREATE A GDG INDEX.           %M -!MODIFY THE NUMBER OF GDG DATASET\n+     { SPECIFY THE # OF ENTRIES          !ENTRIES TO BE CHANGED:  GDG ENTRIES\n+     { TO BE CREATED\u00a2ON NEXT LINE        !TO BE CHANGED/EXPANDED/REDUCED TO\n+                                         !    @(1-255) ===>_GNM+\n+\n+   %D@-@DELETE THE GDG INDEX.  {ALL DATA SETS WILL BE UNCTLGD\n+       {BUT NOT 'DELETED' IF THERE ARE EXISTING DATA ENTRIES.\n+       {BE SURE TO DELETE ALL GNNNVXX@BEFORE DELETING INDEX.\n+\n% LIST Data Set Disposition  ===>_K+ (K-KEEP|D-DELETE|M-MOD) +\n+      \u00a2&ZUSER..GDGPRT.LIST'\n+\n+Press the %ENTER KEY+to proceede or the%END KEY+to terminate this panel+_DEBUG\n\n)INIT\n .CURSOR = GDGPREF\n &G = I\n &GNM = &Z\n IF (&K = &Z)\n   &K = D\n)PROC\n  VER (&GDGPREF,NONBLANK)\n  VER (&GDGPREF,DSNAME)\n  VER (&K,NONBLANK)\n  VER (&K,LIST,K,D,M)\n  VER (&G,NONBLANK)\n  VER (&G,LIST,C,D,I,L,M)\n  IF (&G = 'M')\n     VER (&GNM,NONBLANK)\n     VER (&GNM,NUM)\n     VER (&GNM,RANGE,1,255)\n  IF (&G = 'C')\n     VER (&GNM,NONBLANK)\n     VER (&GNM,NUM)\n     VER (&GNM,RANGE,1,255)\n  IF (&G = 'D')\n     &GNM = 'DLX'\n VPUT (GDGPREF G K GNM DEBUG) SHARED\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "GDGUTL": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x90\\x15/\\x00\\x90\"\\x1f\\x10\\'\\x00\\x90\\x00\\x90\\x00\\x00\\xc3\\xd3\\xc9\\xe2\\xe3@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1990-06-01T00:00:00", "modifydate": "1990-08-09T10:27:00", "lines": 144, "newlines": 144, "modlines": 0, "user": "CLIST"}, "text": "PROC 0 TRACE\n/*\n/*--------------------------------------------------------------------*\n/*                                                                    *\n/* FUNCTION - GENERATION DATA-GROUP UTILITY                           *\n/*                                                                    *\n/* PURPOSE  - PERFORMS IDCAMS GDG FUNCTIONS, SUCH AS REBUILD, DEFINE, *\n/*            OR DELETE GDG INDEXES                                   *\n/*                                                                    *\n/* AUTHOR   - ____________________________                            *\n/*                                                                    *\n/* DATE     - ___________ 1990                                        *\n/*                                                                    *\n/*--------------------------------------------------------------------*\n/*\n/*--------------------------------------------------------------------*\n/* ENABLE DEBUG MODE IF REQUESTED BY USER OR FUNCTION AS NORMAL       *\n/*--------------------------------------------------------------------*\n/*\nIF &TRACE = THEN -\n   CONTROL NOFLUSH NOMSG\nELSE -\n   CONTROL NOFLUSH MSG CONLIST LIST\n/*\n/*--------------------------------------------------------------------*\n/* SET COMMAND LIST INITIAL VALUES                                    *\n/*--------------------------------------------------------------------*\n/*\nSET &DISP = 0                                  /* PANEL DISPLAY LOOP\nSET &PAN1 = GDGUTILP                           /* PANEL DISPLAY\n/*\n/*--------------------------------------------------------------------*\n/* DISABLE ISPF DIALOG DIAGNOSTICS AND HANDLE ALL ERRORS WITH COMMAND *\n/* LIST ..                                                            *\n/*--------------------------------------------------------------------*\n/*\nISPEXEC CONTROL ERRORS RETURN\n/*\n/*--------------------------------------------------------------------*\n/* DISPLAY GDG UTILITY PANEL UNTIL PF3/15 IS DEPRESSED                *\n/*--------------------------------------------------------------------*\n/*\nDO WHILE &DISP = 0\n   ISPEXEC  CONTROL DISPLAY REFRESH\n   ISPEXEC DISPLAY PANEL(&PAN1)\n   SET &DISP = &LASTCC\n/*\n/*--------------------------------------------------------------------*\n/* DELETE PREVIOUS FILE IF USER DOES NOT WISH TO APPEND               *\n/*--------------------------------------------------------------------*\n/*\n   IF  &DISP = 0 THEN -\n       DO\n         ISPEXEC VGET (GDGPREF,K,G,DEBUG,ZCHARCNL,GNM)\n         IF &K \u00ac= &STR(M) THEN -\n            DELETE '&SYSUID..GDGPRT.LIST'\n/*\n/*--------------------------------------------------------------------*\n/* CHECK TO SEE IF QUOTES(') ARE PRESENT                              *\n/*--------------------------------------------------------------------*\n/*\n         IF &SUBSTR(1:1,&NRSTR(&GDGPREF)) = &STR(') THEN -\n            DO\n              SET &GDGLENG = &EVAL(&LENGTH(&STR(&GDGPREF))-1)\n              SET &GDGNAME = &SUBSTR(2:&GDGLENG,&GDGPREF )\n            END\n         ELSE -\n            DO\n              SET &GDGNAME = &SYSUID..&GDGPREF\n            END\n/*\n/*--------------------------------------------------------------------*\n/* CHECK TO SEE IF QUOTES(') ARE PRESENT                              *\n/*--------------------------------------------------------------------*\n/*\n         SET &GDGPREF = &STR('&GDGNAME')\n         FREE ATTR($L$C$P $G$R$O $G$R$I)\n         SET &SUF = &STR(&SUBSTR(1:2,&SYSJDATE)+\n                         &SUBSTR(4:6,&SYSJDATE))\n         ATTR $L$C$P                +\n         LRECL(125)                 +\n         BLKSIZE(9076)              +\n         RECFM(V B A)\n         ALLOC DD(D&SUF.1)          +\n         DS('&SYSUID..GDGPRT.LIST') +\n         REUSE                      +\n         US($L$C$P)                 +\n         MOD                        +\n         CAT                        +\n         SPACE(2,1)                 +\n         TRACK\n         SET ALL = &STR(GDG)\n/*\n/*--------------------------------------------------------------------*\n/* LIST GDG INFORMATION                                               *\n/*--------------------------------------------------------------------*\n/*\n         IF &G = I THEN -\n            %GDGLST &GDGPREF &SUF &K &G\n/*\n/*--------------------------------------------------------------------*\n/* LIST GDG WITH VOLSER INFORMATION                                   *\n/*--------------------------------------------------------------------*\n/*\n         IF &G = L THEN -\n            %GDGLST &GDGPREF &SUF &K &G\n/*\n/*--------------------------------------------------------------------*\n/* MODIFY THE LIMITS OF A GDG ENTRY                                   *\n/*--------------------------------------------------------------------*\n/*\n         IF &G = M THEN -\n            DO\n              SET &GDGENTL = &LENGTH(&STR(00&GNM))\n              SET &GDGENTS = &STR(&SUBSTR(+\n                  &EVAL(&GDGENTL-2):&GDGENTL,&STR(00&GNM)))\n              SET &ACTION  = &STR(MODIFIED)\n              %GDGMOD &GDGENTL &GDGENTS &ACTION &GDGPREF &GDGNAME &SUF\n            END\n/*\n/*--------------------------------------------------------------------*\n/* MODIFY THE LIMITS OF A GDG ENTVY                                   *\n/*--------------------------------------------------------------------*\n/*\n         IF &G = C THEN -\n            DO\n              SET &GDGENTS = &STR(&GNM)\n              SET &ACTION  = &STR(CREATED)\n              SET &ALL = &STR(GDG ALL)\n              %GDGBLD &SUF &GDGP      %GDGLST &GDGPREF &SUF &K &G\n/*\n/*--------------------------------------------------------------------*\n/* MODIFY THE LIMITS OF A GDG ENTRY                                   *\n/*--------------------------------------------------------------------*\n/*\n         IF &G = M THEN -\n            DO\n              SET &GDGENTL = &LENGTH(&STR(00&GNM))\n              SET &GDGENTS = &STR(&SUBSTR(+\n                  &EVAL(&GDGENTL-2):&GDGENTL,&STR(00&GNM)))\n              SET &ACTION  = &STR(MODIFIED)\n    END\nFREE ATTR($L$C$P $G$R$O $G$R$I)\nISPEXEC VPUT (GDGPREF,K,G,DEBUG,ZCHARCNL,GNM)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "P#DAYTMR": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01%\\x00\\x00\\x00\\x90\\x15/\\x00\\x91\\x05\\x7f\\x12A\\x00/\\x00$\\x00\\x00\\xd7\\xc1\\xd5\\xc5\\xd3\\xe2@@@@'", "ispf": {"version": "01.37", "flags": 0, "createdate": "1990-06-01T00:00:00", "modifydate": "1991-02-26T12:41:00", "lines": 47, "newlines": 36, "modlines": 0, "user": "PANELS"}, "text": ")ATTR\n+ TYPE(TEXT)   INTENS(LOW)  SKIP(ON)\n@ TYPE(OUTPUT) INTENS(HIGH) CAPS(ON)\n_ TYPE(INPUT)  INTENS(HIGH) CAPS(ON)\n{ TYPE(TEXT)   INTENS(HIGH) COLOR(YELLOW)\n# TYPE(TEXT)   INTENS(HIGH) COLOR(GREEN)\n! TYPE(TEXT)   INTENS(HIGH) COLOR(RED)\n$ TYPE(TEXT)   INTENS(HIGH) COLOR(PINK)\n)BODY\n%*+*%*+*%*+*%*+*%*+*{AUTOMATED APPOINTMENT CALENDAR%*+*%*+*%*+*%*+*%*+*\n+\n%COMMAND ===>_Z                                              +%SCROLL ===>_Z   +\n+\n$      IF YOU NEED THIS FILE TO DISPLAY IN DATE ORDER BELOW, PERFORM A\n$      COMMAND LEVEL SORT HERE ABOVE.\n+\n% A=<DD> ON COMMAND LINE!OR%D<ELETE>, U<PDATE> NEXT TO SELECTED MEMBER\n+\n%*+*%*+*%*+*%*+*%*+*%*+*%*{A P P O I N T M E N T S+*%*+*%*+*%*+*%*+*%*+*+*%*+*%\n+\n)MODEL\n+_Z +@Z +/@Z +/@Z + @Z                                                    +\n)INIT\n/*\n/*--------------------------------------------------------------------*/\n/* DEFINE DIALOG 'Z' VARIABLES                                        */\n/*--------------------------------------------------------------------*/\n/*\n.ZVARS = 'DCMD DAMT DSEL DIMM DIDD DIYY DTXT'\n/*\n/*--------------------------------------------------------------------*/\n/* SET INITIAL VALUES FOR VARIBLES PRIOR TO PANEL DISPLAY             */\n/*--------------------------------------------------------------------*/\n/*\n&DCMD  = ' '\n&DSEL  = ' '\nIF (&DAMT = ' ')\n  &DAMT = HALF\n)PROC\n/*\n/*--------------------------------------------------------------------*/\n/* IF USER REQUEST TO ADD MORE DATA, SET INPUT FLAG ON                */\n/*--------------------------------------------------------------------*/\n/*\nIF (&DSEL \u00ac= ' ')\n  VER (&DSEL,NB,LIST,A,D,U,MSG=DTMM011)\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WHOHAS": {"ttr": 1289, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16\\x00\\x00\\x00\\x88\\x03O\\x00\\x91\\x03\\x9f\\x10\\t\\x007\\x00K\\x00\\x00\\xe2\\xd6\\xe4\\xd9\\xc3\\xc5@@@@'", "ispf": {"version": "01.22", "flags": 0, "createdate": "1988-02-03T00:00:00", "modifydate": "1991-02-08T10:09:00", "lines": 55, "newlines": 75, "modlines": 0, "user": "SOURCE"}, "text": "//DEVGLRS JOB 'ACCT#','GLRAMAS/MIS',CLASS=S,REGION=4096K,\n//        MSGCLASS=H,NOTIFY=DEVGLR\n//*\n//*    DEV.GLR.UTILSRCE(WHOAS)\n//*\n//*    ** IMPORTANT NOTE **\n//*\n//*    YOU MUST UPDATE PROGRAM WHOHAS2 'VOLTAB' TABLE WITH YOUR\n//*    VOLUME SERIAL OF ALL PACKS.\n//*\n//*    ASMHC IS ANY ASSEMBLE PROC/JCL WITH YOUR REQUIRED CANCATENATED\n//*    SYSTEM LIBRARIES\n//*\n//*+*+*+*+*+*+*\n// EXEC ASMHC\n//*+*+*+*+*+*+*\n//*\n//C.SYSLIN DD DISP=(,PASS),DSN=&&HAS1,UNIT=SYSDA,\n//  SPACE=(400,(200,100)),DCB=(LRECL=80,BLKSIZE=400,RECFM=FB)\n//C.SYSIN  DD DISP=SHR,DSN=DEV.GLR.UTILSRCE(WHOHAS1)\n//*\n//*+*+*+*+*+*+*\n// EXEC ASMHC\n//*+*+*+*+*+*+*\n//*\n//C.SYSLIN DD DISP=(,PASS),DSN=&&HAS2,UNIT=SYSDA,\n//  SPACE=(400,(200,100)),DCB=(LRECL=80,BLKSIZE=400,RECFM=FB)\n//C.SYSIN  DD DISP=SHR,DSN=DEV.GLR.UTILSRCE(WHOHAS2)\n//*\n//*+*+*+*+*+*+*\n// EXEC ASMHC\n//*+*+*+*+*+*+*\n//*\n//C.SYSLIN DD DISP=(,PASS),DSN=&&HAS3,UNIT=SYSDA,\n//  SPACE=(400,(200,100)),DCB=(LRECL=80,BLKSIZE=400,RECFM=FB)\n//C.SYSIN  DD DISP=SHR,DSN=DEV.GLR.UTILSRCE(WHOHAS3)\n//*\n//*+*+*+*+*+*+*\n//LKED    EXEC  PGM=IEWL,PARM='LIST,MAP,XREF'\n//*+*+*+*+*+*+*\n//*\n//SYSLMOD  DD  DISP=SHR,DSN=DEV.GLR.LOADLIB  <<<<OUTPUT SYSTEM LIBRARY\n//SYSLIB   DD  DISP=SHR,DSN=SYS1.LINKLIB\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSPRINT DD  SYSOUT=*\n//HAS1     DD  DISP=(OLD,DELETE),DSN=&&HAS1\n//HAS2     DD  DISP=(OLD,DELETE),DSN=&&HAS2\n//HAS3     DD  DISP=(OLD,DELETE),DSN=&&HAS3\n//SYSLIN   DD  *\n    INCLUDE HAS1\n    INCLUDE HAS2\n    INCLUDE HAS3\n    SETCODE AC(1)\n    ENTRY   WHOHAS1\n    NAME    WHOHAS(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WHOHAS#": {"ttr": 1291, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x91\\x03\\x9f\\x00\\x91\\x05\\x0f\\x11@\\x00_\\x00$\\x00\\x00\\xc4\\xd6\\xc3@@@@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1991-02-08T00:00:00", "modifydate": "1991-02-19T11:40:00", "lines": 95, "newlines": 36, "modlines": 0, "user": "DOC"}, "text": "\n             *** E N Q U E  D A T A  S E T  N O T I F E R  ***\n\n            FEBRUARY 20, 1991\n\n            GEORGE RAMAS\n            SYSTEM ANALYST\n            CATELLUS DEVELOPMENT CORPORATION\n            MIS DEPARTMENT 3RD FLOOR\n            SAN FRANCISCO, CALIFORNIA 94105\n            (415) 974-4597\n\n            CREATED BY A LONG AGO PROGRAMMER.\n\n\n   THIS IS A TSO (PFK6) COMMAND 'WHOHAS' THAT YOU CAN USE TO FIND\n   OUT WHO HAS A DATA SET OR DISK VOLUME ENQUED.\n\n\n\n   1).  YOU MUST ASSEMBLE THE ACCOMPANIED MEMBERS INTO A SYSTEM\n        CANCATENATED LOAD LIBRARY THAT IS EXECUTABLE THROUGH YOUR\n        PF6 TSO SCREEN.  BE SURE TO UPDATE THE DISK VOLUME TABLE\n        'VOLTAB' IN PROGRAM WHOHAS2 BEFORE YOU ASSEMBLE ANY PROGRAM.\n        USE TSO PFK6 TO CALL 'WHOHAS' ANSWER THE PROMPT AS TO WHAT\n        KIND OF LIBRARY OR VOLUME YOU ARE INQUIRYING ABOUT THEN THE\n        NAME OF THE VOLUME OR DATA SET YOU'RE INQUIRYING ABOUT, IT\n        WILL IMMEDIATELY GIVE YOU THE ENQUED ANSWER.\n\n\n\n\n   //DEVGLRS JOB 'ACCT#','GLRAMAS/MIS',CLASS=S,REGION=4096K,\n   //        MSGCLASS=H,NOTIFY=DEVGLR\n   //*\n   //*    DEV.GLR.UTILSRCE(WHOAS)\n   //*\n   //*    ** IMPORTANT NOTE **\n   //*\n   //*    YOU MUST UPDATE PROGRAM WHOHAS2 'VOLTAB' TABLE WITH YOUR\n   //*    VOLUME SERIAL OF ALL PACKS.\n   //*\n   //*    ASMHC IS ANY ASSEMBLE PROC/JCL WITH YOUR REQUIRED CANCATENATED\n   //*    SYSTEM LIBRARIES\n   //*\n   //*+*+*+*+*+*+*\n   // EXEC ASMHC\n   //*+*+*+*+*+*+*\n   //*\n   //C.SYSIN  DD DISP=SHR,DSN=DEV.GLR.UTILSRCE(WHOHAS1)\n   //*\n   //C.SYSLIN DD DISP=(,PASS),DSN=&&HAS1,UNIT=SYSDA,\n   //  SPACE=(400,(200,100)),DCB=(LRECL=80,BLKSIZE=400,RECFM=FB)\n   //*\n   //*+*+*+*+*+*+*\n   // EXEC ASMHC\n   //*+*+*+*+*+*+*\n   //*\n   //C.SYSIN  DD DISP=SHR,DSN=DEV.GLR.UTILSRCE(WHOHAS2)\n   //*\n   //C.SYSLIN DD DISP=(,PASS),DSN=&&HAS2,UNIT=SYSDA,\n   //  SPACE=(400,(200,100)),DCB=(LRECL=80,BLKSIZE=400,RECFM=FB)\n   //*\n   //*+*+*+*+*+*+*\n   // EXEC ASMHC\n   //*+*+*+*+*+*+*\n   //*\n   //C.SYSIN  DD DISP=SHR,DSN=DEV.GLR.UTILSRCE(WHOHAS3)\n   //*\n   //C.SYSLIN DD DISP=(,PASS),DSN=&&HAS3,UNIT=SYSDA,\n   //  SPACE=(400,(200,100)),DCB=(LRECL=80,BLKSIZE=400,RECFM=FB)\n   //*\n   //*+*+*+*+*+*+*\n   //LKED    EXEC  PGM=IEWL,PARM='LIST,MAP,XREF'\n   //*+*+*+*+*+*+*\n   //*\n   //SYSLMOD  DD  DISP=SHR,DSN=DEV.GLR.LOADLIB  <<<<OUTPUT SYSTEM LIBRARY\n   //*\n   //SYSLIB   DD  DISP=SHR,DSN=SYS1.LINKLIB\n   //*\n   //SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(1,1))\n   //*\n   //SYSPRINT DD  SYSOUT=*\n   //*\n   //HAS1     DD  DISP=(OLD,DELETE),DSN=&&HAS1\n   //HAS2     DD  DISP=(OLD,DELETE),DSN=&&HAS2\n   //HAS3     DD  DISP=(OLD,DELETE),DSN=&&HAS3\n   //SYSLIN   DD  *\n       INCLUDE HAS1\n       INCLUDE HAS2\n       INCLUDE HAS3\n       SETCODE AC(1)\n       ENTRY   WHOHAS1\n       NAME    WHOHAS(R)\n   /*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WHOHAS1": {"ttr": 1294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00\\x00\\x00\\x88\\x03\\x9f\\x00\\x91\\x03\\x9f\\x10\\x05\\x00\\xd8\\x01^\\x00\\xd8\\xe2\\xd6\\xe4\\xd9\\xc3\\xc5@@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "1988-02-08T00:00:00", "modifydate": "1991-02-08T10:05:00", "lines": 216, "newlines": 350, "modlines": 216, "user": "SOURCE"}, "text": "*/*\n*/*****************************************************************/*\n*/** WHOHAS1:                                                    **/*\n*/** FUNCTION: FIRST MODULE CALLED BY 'WHOHAS'                   **/*\n*/**                                                             **/*\n*/**           THE PURPOSE OF THIS UTILITY IS TO DISPLAY UNDER   **/*\n*/**           TSO (PFK6) WHO HAS A DATA SET 'ENQUED'            **/*\n*/**                                                             **/*\n*/**           WILL PROMPT FOR 'GRS' FUNCTION AND PASS THE       **/*\n*/**           REQUEST ON TO WHOHAS2 FOR VERIFICATION            **/*\n*/*****************************************************************/*\n*/*\nWHOHAS1  CSECT\n         BASER R12                    .SET BASE REG + GET EQUATES\n         LA    R11,SAVEHAS1           .R11 POINTS TO SAVEAREA\n         ST    R13,4(,R11)            .NOW CHAIN\n         ST    R11,8(,R13)            .......... THE SAVEAREAS\n         LR    R13,R11                .R13 POINTS TO OUR SAVEAREA\n         B     BEGIN                  .AND BRANCH TO CODE\n*/*\nSAVEHAS1 DS    18F                    .OUR SAVEAREA\nBEGIN    EQU   *\nBALREG   EQU   2                      .ASSIGN R2 AS BALREG\nINPUTLEN EQU   3                      LENGTH OF INPUT FROM TGET\n*/*\n         STFSMODE ON                  .GO TO FULL SCREEN MODE\n*/*\nSELECT   MVC   FUNCTION(3),=CL3' '    .CLEAR FUNCTION\n         XC    INLEN,INLEN            .ZERO INLEN\n         MVC   RNAME(44),=CL44' '\n         XC    TGETBUFF,TGETBUFF      .INPUT BUFFER = ALL 0'S\n         LA    R1,FIRSTMSG            .POINT R1 TO FIRSTMSG\n         L     R0,FIRSTL              .R0 HAS1 FIRSTMSG LENGTH\n         BAL   BALREG,TPUT            .WRITE TO TERMINAL\nAFTRHELP BAL   BALREG,TGET            .GET TERMINAL INPUT\n         LA    R3,TGETBUFF\n         CLC   0(2,R3),=C'DA'         .DA UPPER CASE   ?\n         BE    DAINQ\n         CLC   0(3,R3),=C'CAT'        .CAT UPPER CASE  ?\n         BE    CATINQ\n         CLC   0(2,R3),=C'LL'         .LL UPPER CASE   ?\n         BE    LLINQ\n         CLC   0(3,R3),=C'VOL'        .VOL UPPER CASE ?\n         BE    VOLINQ\n         CLC   0(2,R3),=C'VT'         .VT UPPER CASE ?\n         BE    VTINQ\n         CLC   0(4,R3),=C'HELP'       .NEED HELP     ?\n         BE    HELP\n         CLC   0(3,R3),=C'END'        .NEED HELP     ?\n         BE    RETURN\nBADINPUT LA    R1,INPUTBAD            .ELSE ISSUE ERROR\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         B     AFTRHELP\n*/*\nDAINQ    EQU   *\n         LA    R1,DAMSG               .PRIME R1 WITH MSG\n         L     R0,EIGHTY              .LENGTH OF MSGF\n         BAL   BALREG,TPUT            .DO A TPUT\n         BAL   BALREG,TGET            .GET TERMINAL INPUT\n         MVC   FUNCTION(3),=C'DA '    .INDICATE 'DA' FUNCTION\n         BAL   BALREG,MOVER           .MOVE DATASET NAME\n         B     PASSTO2\n*/*\nLLINQ    EQU   *\n         LA    R1,LLMSG               ....LIKE DAINQ\n         L     R0,EIGHTY              ... DITTO\n         BAL   BALREG,TPUT            .DITTO\n         BAL   BALREG,TGET            .GET TERMINAL INPUT\n         MVC   FUNCTION(3),=C'LL '    .INDICATE 'LL' FUNCTION\n         BAL   BALREG,MOVER\n         B     PASSTO2\n*/*\nVTINQ    EQU   *\n         LA    R1,VMSG\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         BAL   BALREG,TGET            .GET TERMINAL INPUT\n         MVC   FUNCTION(3),=C'VT '    .INDICATE 'VT' FUNCTION\n         BAL   BALREG,MOVER\n         B     PASSTO2\n*/*\nVOLINQ   EQU   *\n         LA    R1,VMSG\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         BAL   BALREG,TGET            .GET TERMINAL INPUT\n         MVC   FUNCTION(3),=C'VOL'    .INDICATE 'VOL' FUNCTION\n         BAL   BALREG,MOVER\n         B     PASSTO2\n*/*\nCATINQ   EQU   *\n         LA    R1,CATMSG\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         BAL   BALREG,TGET            .GET TERMINAL INPUT\n         MVC   FUNCTION(3),=C'CAT'    .INDICATE 'CAT' FUNCTION\n         BAL   BALREG,MOVER\n         B     PASSTO2\n*/*\nHELP     EQU   *\n         LA    R1,HELPMSG\n         L     R0,HELPLEN\n         BAL   BALREG,TPUT\n         B     AFTRHELP\n*/*\nTPUT     EQU   *\n         TPUT  (1),(0)\n         BR    BALREG\n*/*\nTGET     EQU   *\n         LA    R1,TGETBUFF            .POINT R1 TO INPUT BUFFER\n         L     R0,EIGHTY              .R0 HAS1 INPUT BUFF LENGTH\n         TGET  (1),(0)                .GET THE INPUT FROM TERMINAL\n         LTR   INPUTLEN,R1\n         BZ    BADINPUT\n         ST    INPUTLEN,INLEN               .KEEP INPUT LENGTH\n         LA    R4,TRTAB               .ADDRESS THE TRANS TABLE\n         LA    R3,TGETBUFF            .ADDRESS THE INPUT BUFFER\n         BCTR  R1,R0                  .REDUCE LENGTH BY 1 FOR EX\n         EX    R1,TRANS               .TRANSLATE IT\n         BR    BALREG\n*/*\nPASSTO2  EQU   *\n         LA    R1,WHO2LIST            .PASS PARM LIST\n         L     R15,=V(WHOHAS2)        .TO WHOHAS2\n         BALR  R14,R15                .NOW\n         B     SELECT                 .GO TO SELECT UPON RETURN\n*/*\nRETURN   L     R13,4(,R13)\n         RETURN (14,12),,RC=00\n*/*\nMOVER    EQU   *\n         LA    R4,TGETBUFF\n         LA    R3,RNAME\n         MVI   0(R3),X'40'\n         MVC   1(43,R3),0(R3)\n         L     R1,INLEN\n         BCTR  R1,R0\n         EX    R1,MOVE\n         BR    BALREG\n*/*\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n*++          PROGRAM STORAGE / ETC.        COUNTRY                ++*\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n*/*\nTRANS    TR    0(*-*,R3),0(R4)\nMOVE     MVC   0(*-*,R3),0(R4)\n*/*\n*/*\nTGETBUFF DS    CL80\nEIGHTY   DC    F'80'\n*/*\nWHO2LIST DS    0F\nFUNCTION DS    CL3                 .GRSCAN FUNCTION\n         DS    CL1                 ....KEEP WORD BOUNDRY\nINLEN    DS    F                   .TGET LENGTH\nRNAME    DS    CL44                .TGET DATA\n*/*\nFIRSTMSG DS    0F\n         DC    79C'#'\n         DC    80C' '\n         DC    CL80'               YOU ARE INQUIRING ABOUT?'\n         DC    80C' '\n         DC    CL80'               A DATASET: <ENTER>  DA'\n         DC    CL80'                 CATALOG: <ENTER> CAT'\n         DC    CL80'                 LOADLIB: <ENTER>  LL'\n         DC    CL80'                 VOLUME : <ENTER> VOL'\n         DC    CL80'                 VTOC   : <ENTER>  VT'\n         DC    80C' '\n         DC    CL80'                 HELP   : <ENTER> HELP'\n         DC    CL80'                 TO QUIT: <ENTER>  END'\n         DC    80C' '\n         DC    79C'#'\nFIRSTL   DC    A(*-FIRSTMSG)\n*/*\nHELPMSG  DS    0F\n         DC    CL80'       ALL I KNOW ABOUT <WHOHAS> IS THIS:'\n         DC    CL80' '\n         DC    CL80' DA  - PROVIDE ENQ INFO ON ORDINARY DATASETS'\n         DC    CL80' CAT -   \"      \"   \"   ON USERCATALOGS'\n         DC    CL80' LL  -   \"      \"   \"   ON SYSLMOD DSN DURING LINK'\n         DC    CL80' VOL -   \"      \"   \"   ON VOLUME  RESERVES'\n         DC    CL80' VT  -   \"      \"   \"   ON VTOC FOR THIS VOLUME'\n         DC    CL80' '\n         DC    CL80' END - EXIT WHOHAS'\nHELPLEN  DC    A(*-HELPMSG)\n*/*\nTRTAB    DC    256C' '\n         ORG   TRTAB+X'4B'\n         DC    C'.'\n         ORG   TRTAB+X'81'\n         DC    C'ABCDEFGHI'\n         ORG   TRTAB+X'91'\n         DC    C'JKLMNOPQR'\n         ORG   TRTAB+X'A2'\n         DC    C'STUVWXYZ'\n         ORG   TRTAB+X'C1'\n         DC    C'ABCDEFGHI'\n         ORG   TRTAB+X'D1'\n         DC    C'JKLMNOPQR'\n         ORG   TRTAB+X'E2'\n         DC    C'STUVWXYZ'\n         ORG   TRTAB+X'F0'\n         DC    C'0123456789'\n         ORG   ,\n*/*\nDAMSG    DC    CL80'<ENTER> DATASET NAME - NO QUOTES'\nCATMSG   DC    CL80'<ENTER> CATALOG NAME - NO QUOTES'\nLLMSG    DC    CL80'<ENTER> LOADLIB NAME - NO QUOTES'\nVMSG     DC    CL80'<ENTER> VOLSER - NO QUOTES'\nINPUTBAD DC    CL80'UNIDENTIFIED FUNCTION REQUEST, TRY AGAIN'\n*/*\n         LTORG\n*/*\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "WHOHAS2": {"ttr": 1540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x11\\x00\\x00\\x00\\x88\\x04\\x1f\\x00\\x91\\x02\\x8f\\x11\\x14\\x00\\x99\\x01\\x9c\\x00\\x99\\xe2\\xd6\\xe4\\xd9\\xc3\\xc5@@@@'", "ispf": {"version": "01.17", "flags": 0, "createdate": "1988-02-10T00:00:00", "modifydate": "1991-01-28T11:14:00", "lines": 153, "newlines": 412, "modlines": 153, "user": "SOURCE"}, "text": "*/*\n*/*****************************************************************/*\n*/** WHOHAS2:                                                    **/*\n*/** FUNCTION: 2ND   MODULE CALLED BY 'WHOHAS'                   **/*\n*/**           WILL VALIDATE THE INPUT RECEIVED FROM WHOHAS1     **/*\n*/**           AND PASS THE DATA ON TO WHOHAS3                   **/*\n*/*****************************************************************/*\n*/*\nWHOHAS2  CSECT\n         BASER R12                    .SET BASE REG + GET EQUATES\n         LA    R11,SAVEHAS2           .R11 POINTS TO SAVEAREA\n         ST    R13,4(,R11)            .NOW CHAIN\n         ST    R11,8(,R13)            .......... THE SAVEAREAS\n         LR    R13,R11                .R13 POINTS TO OUR SAVEAREA\n         B     BEGIN                  .AND BRANCH TO CODE\n*/*\nSAVEHAS2 DS    18F                    .OUR SAVEAREA\nBEGIN    EQU   *\nBALREG   EQU   2                      .ASSIGN R2 AS BALREG\n         LR    R10,R1                 .SECURE PARMLIST ADDR\n         USING WHO3LIST,R10           .ESTABLISH ADDRESSABILITY\n         MVC   ADSN(44),RNAME         .MOVE RNAME FOR CAMLST\n         CLC   0(2,R10),=C'DA'        .DA FUNCTION     ?\n         BE    DAINQ\n         CLC   0(3,R10),=C'CAT'       .CAT FUNCTION    ?\n         BE    CATINQ\n         CLC   0(2,R10),=C'LL'        .LL FUNCTION     ?\n         BE    LLINQ\n         CLC   0(3,R10),=C'VOL'       .VOL FUNCTION    ?\n         BE    VTINQ\n         CLC   0(2,R10),=C'VT'        .VT FUNCTION     ?\n         BE    VTINQ\n*/*\nDAINQ    EQU   *\n         BAL   BALREG,TEST44\n         BAL   BALREG,LOCATE\n         B     PASSTO3\n*/*\nLLINQ    EQU   *\n         BAL   BALREG,TEST44\n         BAL   BALREG,LOCATE\n         B     PASSTO3\n*/*\nVTINQ    EQU   *\n         BAL   BALREG,TEST6\n         BAL   BALREG,TESTVOL\n         B     PASSTO3\n*/*\nCATINQ   EQU   *\n         BAL   BALREG,TEST44\n         BAL   BALREG,LOCATE\n         B     PASSTO3\n*/*\nTPUT     EQU   *\n         TPUT  (1),(0)\n         BR    BALREG\n*/*\nPASSTO3  EQU   *\n         LR    R1,R10                 .PARM LIST ADDR IN WHOHAS1\n         L     R15,=V(WHOHAS3)\n         BALR  R14,R15\n*/*\nRETURN   L     R13,4(,R13)\n         RETURN (14,12),,RC=00\n*/*\nTEST44   EQU   *\n         LA    R3,44\n         L     R1,INLEN\n         CR    R1,R3\n         BH    ERROR44\n         LA    R3,3                   .I.E.,  T.P FOR DSNAME\n         CR    R1,R3\n         BL    ERROR44\n         BR    BALREG\n*/*\nTEST6    EQU   *\n         LA    R3,6\n         L     R1,INLEN\n         CR    R1,R3\n         BNE   ERROR6                 .MUST BE (6) CHARACTERS\n         BR    BALREG\n*/*\nERROR44  EQU   *\n         LA    R1,MSG44\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         B     RETURN\n*/*\nERROR6   EQU   *\n         LA    R1,MSG6\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         B     RETURN\n*/*\nTESTVOL  EQU   *\n         LA    R3,RNAME\n         LA    R4,VOLTAB\n         L     R5,VTLEN\nMORVOL   CLC   0(6,R3),0(R4)\n         BE    ENDVOL\n         LA    R4,6(,R4)\n         BCT   R5,MORVOL\n         LA    R1,BADVOL\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         B     RETURN\nENDVOL   BR    BALREG\n*/*\nLOCATE   EQU   *\n         LOCATE CAMLOC8\n         LTR   R15,R15\n         BZ    ENDLOC8\n         LA    R1,BADLOC\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         B     RETURN\nENDLOC8  BR    BALREG\n*/*\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n*++          PROGRAM STORAGE / ETC.        COUNTRY                ++*\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n*/*\nCAMLOC8  CAMLST NAME,ADSN,,CAMWORK\n*/*\nADSN     DS    CL44\n*/*\nEIGHTY   DC    F'80'\n*/*\nMSG6     DC    CL80'NO INPUT OR INPUT GREATER THAN (6) CHARACTERS'\nMSG44    DC    CL80'NO INPUT OR INPUT GREATER THAN (44) CHARACTERS'\nBADVOL   DC    CL80'UNIDENTIFIED VOLUME SERIAL NUMBER, REINITIATE'\nBADLOC   DC    CL80'DATASET IS NOT CATALOGED, REINITIATE'\n*/*\nVOLTAB   DS    0F\n         DC    C'PROD01PROD02PROD03PROD04PROD05PROD05'\n         DC    C'PROD06PROD07PROD08TEST01TEST02TEST03'\n         DC    C'TEST04TEST05TSO001TSO002SPOOL1PLPA01'\n         DC    C'DLIB01LOCAL1LOCAL2LOCAL3XARESAXARESB'\n         DC    C'XASMPESYS001SYS002'\nVTLEN    DC    A((*-VOLTAB)/6) .NUMBER OF (6) BYTE ENTRIES\n*/*\n         LTORG\n*/*\nCAMWORK  DS    0D,265C\n*/*\nWHO3LIST DSECT\nFUNCTION DS    CL3\n         DS    CL1\nINLEN    DS    F\nRNAME    DS    CL44\n*/*\n         END\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WHOHAS3": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00\\x00\\x00\\x88\\x04\\x1f\\x00\\x906\\x0f\\x15\\x07\\x01\\x05\\x01\\x9d\\x00\\x1b\\xe2\\xd6\\xe4\\xd9\\xc3\\xc5@@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "1988-02-10T00:00:00", "modifydate": "1990-12-26T15:07:00", "lines": 261, "newlines": 413, "modlines": 27, "user": "SOURCE"}, "text": "*/*\n*/*****************************************************************/*\n*/** WHOHAS3:                                                    **/*\n*/** FUNCTION: 3RD   MODULE CALLED BY 'WHOHAS'                   **/*\n*/**           WILL ISSUE GQSCAN AND FORMAT THE INFORMATION      **/*\n*/**           FOR SUBSEQUENT TPUT THEN RETURN TO WHOHAS2,&1     **/*\n*/*****************************************************************/*\n*/*\nWHOHAS3  CSECT\n         BASER R12                    .SET BASE REG + GET EQUATES\n         LA    R11,SAVEHAS3           .R11 POINTS TO SAVEAREA\n         ST    R13,4(,R11)            .NOW CHAIN\n         ST    R11,8(,R13)            .......... THE SAVEAREAS\n         LR    R13,R11                .R13 POINTS TO OUR SAVEAREA\n         B     BEGIN                  .AND BRANCH TO CODE\n*/*\nSAVEHAS3 DS    18F                    .OUR SAVEAREA\nBEGIN    EQU   *\nBALREG   EQU   2                      .ASSIGN R2 AS BALREG\n         LR    R6,R1                  .SECURE PARMLIST ADDR\n         MVC   WHO3LIST(52),0(R6)     .ACTUALLY MOVE THE DATA 4NOW\n         LA    R1,X'10'               .ADDR OF CVT\n         L     R1,X'22C'(,R1)         .ADDR OF ASVT\n         LA    R1,X'210'(,R1)         .START OF ASVTENTY IN ASVT\n         ST    R1,ENTYADDR            .KEEP IT FOR LATER\n         MVC   QNAME,=XL8'40'         .CLEAR QNAME\n         CLC   0(2,R6),=C'DA'         .DA FUNCTION     ?\n         BE    DAINQ\n         CLC   0(3,R6),=C'CAT'        .CAT FUNCTION    ?\n         BE    CATINQ\n         CLC   0(2,R6),=C'LL'         .LL FUNCTION     ?\n         BE    LLINQ\n         CLC   0(3,R6),=C'VOL'        .VOL FUNCTION    ?\n         BE    VOLINQ\n         CLC   0(2,R6),=C'VT'         .VT FUNCTION     ?\n         BE    VTINQ\n*/*\nDAINQ    EQU   *\n         MVC   QNAME,=C'SYSDSN  '\n         MVC   QNLEN,=X'06'\n         BAL   BALREG,GQSCAN\n         B     FORMAT\n*/*\nLLINQ    EQU   *\n         MVC   QNAME,=C'SYSIEWLP'\n         MVC   QNLEN,=X'08'\n         BAL   BALREG,GQSCAN\n         B     FORMAT\n*/*\nVTINQ    EQU   *\n         MVC   QNAME,=C'SYSVTOC '\n         MVC   QNLEN,=X'07'\n         BAL   BALREG,GQSCAN\n         B     FORMAT\n*/*\nVOLINQ   EQU   *\n         MVC   QNAME,=C'SYSZVOLS'\n         MVC   QNLEN,=X'08'\n         BAL   BALREG,GQSCAN\n         B     FORMAT\n*/*\nCATINQ   EQU   *\n         MVC   QNAME,=C'SYSIGGV2'\n         MVC   QNLEN,=X'08'\n         BAL   BALREG,GQSCAN\n         B     FORMAT\n*/*\nTPUT     EQU   *\n         TPUT  (1),(0)\n         BR    BALREG\n*/*\nFREEMAIN FREEMAIN R,LV=FOR096,A=(R10)\nRETURN   L     R13,4(,R13)\n         RETURN (14,12),,RC=00\n*/*\n*/*\nGQSCAN   EQU   *\n         GETMAIN R,LV=FOR096\n         LTR   R15,R15\n         BZ    GOSCAN\n         LA    R1,BADGET\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         B     RETURN\nGOSCAN   LR    R10,R1\n         L     R11,FOR096\n         LA    R13,GQSAVE\n         LA    R7,QNAME\n         LA    R8,RNAME\n         L     R9,INLEN\n*/*\n         GQSCAN AREA=((R10),(R11)),                                    +\n               REQLIM=20,                                              +\n               SCOPE=SYSTEM,                                           +\n               RESNAME=((R7),(R8),(R9),SPECIFIC),                      +\n               REQCNT=1\n*/*\n         C     R15,=F'0'\n         BE    GQRC00\n         C     R15,=F'4'\n         BE    GQRC04\n         BH    GQGT04\n*/*\nGQRC00   EQU   *\n         STH   R0,RIBELEN\n         SRL   R0,16\n         STH   R0,RIBLEN\n         ST    R1,RIBNUM\n         LA    R13,SAVEHAS3\n         BR    BALREG\n*/*\nGQRC04   EQU   *\n         LA    R13,SAVEHAS3\n         LA    R1,GQZIPP\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         B     FREEMAIN\n*/*\nGQGT04   EQU   *\n         LA    R13,SAVEHAS3\n         LA    R1,GQFAIL\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         B     FREEMAIN\n*/*\nFORMAT   EQU   *\n         GETMAIN R,LV=L1760\n         LTR   R15,R15\n         BZ    GO4MAT\n         LA    R1,BADGET\n         L     R0,EIGHTY\n         BAL   BALREG,TPUT\n         B     FREEMAIN\nGO4MAT   LR    R9,R10\n         LR    R8,R1\n         ST    R8,TPADDR\n         USING RIB,R9\n         MVI   RESOURCE+0,X'40'\n         MVC   RESOURCE+1(43),RESOURCE+0\n         MVC   RESOURCE(44),RNAME\n         L     R3,RIBNTO            .#TASKS OWNING THE RESOURCE\n         CVD   R3,DWORK\n         UNPK  CWORK+0(3),DWORK+6(2)\n         OI    CWORK+2,X'F0'\n         MVC   TOWN(2),CWORK+1\n         L     R3,RIBNTWE           .#TASKS WAITING EXCLUSIVE\n         CVD   R3,DWORK\n         UNPK  CWORK+0(3),DWORK+6(2)\n         OI    CWORK+2,X'F0'\n         MVC   TEXC(2),CWORK+1\n         L     R3,RIBNTWS           .#TASKS WAITING EXCLUSIVE\n         CVD   R3,DWORK\n         UNPK  CWORK+0(3),DWORK+6(2)\n         OI    CWORK+2,X'F0'\n         MVC   TSHR(2),CWORK+1\n         MVC   0(80,R8),TITLE1\n         LA    R8,80(,R8)\n         MVC   0(80,R8),TITLE2\n*/*\n         LA    R11,X'28'(,R10)      .R11 = ADDR FOR END OF RIB\n         AH    R11,RIBVLEN          .ADD RIB VARIABLE PORTION\n         USING RIBE,R11             .BASE RIBE WITH R11\n         LA    R8,80(,R8)           .BEGINING OF OUTPUT TABLE\n         L     R3,RIBNRIBE          .RIBES RETURNED TO US\n         C     R3,=F'20'            .? LESS THAN 20 RIBES\n         BL    USER3VAL             .IF < 20 USE R3 CONTENTS\n         LA    R7,20                ....ELSE DO MAX 20 OUTPUTS\n         B     MORRIBE              .......USING R7 FOR BCT\nUSER3VAL LR    R7,R3                .PRIME R7 WITH R3 CONTENTS\nMORRIBE  MVI   0(R8),X'40'          .CLEAR STORAGE 80 BYTES\n         MVC   1(79,R8),0(R8)       ......FOR OUTPUT\n         LH    R4,RIBEASID          .ASID ASSOC WITH THIS RIBE\n         MVC   0(8,R8),RIBEJBNM     .GET THE JOBNAME\n         TM    RIBERFLG,RIBETYPE    .? SHR OR EXC\n         BNO   SHARED\n         MVC   10(3,R8),=C'EXC'\n         B     MUST\nSHARED   MVC   10(3,R8),=C'SHR'\nMUST     TM    RIBERFLG,RIBEMC      .? MC OR NOMC\n         BNO   NOMC\n         MVC   15(4,R8),=C'  MC'\n         B     RESRV\nNOMC     MVC   15(4,R8),=C'NOMC'\nRESRV    TM    RIBERFLG,RIBERESV    .? RESERVE OR NORESERVE\n         BNO   NORES\n         MVC   25(6,R8),=C'  RESV'\n         B     OWN\nNORES    MVC   25(6,R8),=C'NORESV'\nOWN      TM    RIBESFLG,RIBESTAT    .? OWNER OR WAITER\n         BNO   NOOWN\n         MVC   35(6,R8),=C' OWNER'\n         B     MATDONE\nNOOWN    MVC   35(6,R8),=C'WAITER'\n*/*\nMATDONE  LA    R8,80(,R8)           .NEXT OUTPUT ENTRY\n         LA    R11,36(,R11)         .NEXT RIBE\n         BCT   R7,MORRIBE           .PROCESS NEXT RIBE\n         L     R1,TPADDR            .POINT TO STORAGE\n         LR    R0,R8                .POINT TO END OF USED STORAGE\n         SR    R0,R1                .R0 = LEN USED\n         BAL   BALREG,TPUT\n         L     R8,TPADDR\n         FREEMAIN R,LV=L1760,A=(R8)\n         B     FREEMAIN\n*/*\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n*++          PROGRAM STORAGE / ETC.        COUNTRY                ++*\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n*/*\n*/*\nEIGHTY   DC    F'80'\nFOR096   DC    F'4096'\nL1760    DC    F'1760'\nDWORK    DS    D\nTPADDR   DS    F\nENTYADDR DS    F\nRIBNUM   DS    F\nRIBLEN   DS    H\nRIBELEN  DS    H\nCWORK    DS    CL3\n*/*\nGQSAVE   DS    18F\nRRNAME   DS    CL44\nQNAME    DS    CL8\nQNLEN    DS    XL1\n*/*\n*/*\nBADGET   DC    CL80'GETMAIN FAILURE, NOTIFY SYSTEM PROGRAMMER'\nGQZIPP   DC    CL80'GQSCAN COMPLETE, NO DATA FOR THIS REQUEST'\nGQFAIL   DC    CL80'GQSCAN RC > 04, NOTIFY SYSTEM PROGRAMMER'\n*/*\n         DS    0F\nTITLE1   DC    80C' '\n         ORG   TITLE1+10\n         DC    C'RESOURCE IS '\n         ORG   TITLE1+24\nRESOURCE DS    CL44\n         ORG   ,\nTITLE2   DC    80C' '\n         ORG   TITLE2+16\n         DC    C'# TASKS OWNING '\nTOWN     DS    CL2\n         ORG   TITLE2+34\n         DC    C',WAITING EXC '\nTEXC     DS    CL2\n         ORG   TITLE2+50\n         DC    C',WAITING SHR '\nTSHR     DS    CL2\n         ORG   ,\n*/*\nWHO3LIST DS    0F\nFUNCTION DS    CL3\n         DS    CL1\nINLEN    DS    F\nRNAME    DS    CL44\n*/*\n         LTORG\n*/*\n         ISGRIB\n*/*\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT167/FILE167.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT167", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}