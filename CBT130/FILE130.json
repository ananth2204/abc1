{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011304000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE130.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE130.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x18'", "DS1TRBAL": "b'$d'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00\\xce\\x00\\x03\\x00\\xce\\x00\\x07\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DSCLAIM": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x16\\x00\\x16\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "FILE130"}, "text": ">>>>>>>>>>>>>>>>>>>>>>S P S   D I S C L A I M E R<<<<<<<<<<<<<<<<<<<<<<<\n\n     The information or material being provided by Southwestern Public\nService Company (SPS), whether in hard copy or machine readable form,\nhas been developed by SPS for its own purpose and for use on its own\nequipment and within its own data processing system.  SPS makes no\nrepresentations or warranties whatsoever with respect to the information\nor material furnished hereunder, expressed or implied, including but not\nlimited to any representation or warranty of merchantability or fitness\nfor any particular use or purpose or that the use of the information or\nmaterial will not infringe any patent, copyright, trademark, or other\nproprietary interest.  You are, therefore, accepting this information or\nmaterial on an \"AS IS\" basis and will be using it at your own risk.\nNeither SPS nor any of its affiliates shall be liable with respect to\nany claim, action, or demand by any user or other party (including any\nclaim, action, or demand for consequential damages even if SPS has been\nadvised of the possibility of such damages) arising from the use of the\ninformation of the materials and concepts related thereto.  Furthermore,\nSPS makes no claim that it will maintain, correct, or update this\ninformation or material in the future.\n\n>>>>>>>>>>>>>>>>>>>>>>S P S   D I S C L A I M E R<<<<<<<<<<<<<<<<<<<<<<<\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$INDEX": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00:\\x00:\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 58, "newlines": 58, "modlines": 0, "user": "FILE130"}, "text": "Member    Description\n\n$DSCLAIM  General purpose disclaimer\n\n$INDEX    An index to all the members.  You're reading it now.\n\nBLGS11    Creates version 2 INFO/SYS session parameter with the CBTMODS\n          INFO/MVS database as file 1 (se =1).\n\nCBT$      Instructions for installing the version 2 CBTMODS INFO/MVS\n          database.\n\nCBTAMS    IDCAMS delete and define of the version 2 CBTMODS INFO/MVS\n          SDDS and SDIDS files and initialization by the BLGUT2 utility.\n\nCBTBLD    Uses the BLGOZUD utility to build the version 2 CBTMODS\n          INFO/MVS database.\n\nCBTOZD    PL/I program that reads file 001 of the CBT Modifications tape\n          and creates an input file for the BLGOZUD utility.\n\nCDF       Console Display Facility - lifted from file 353. This version\n          worked unchanged under MVS/SP 1.3.4 at an 8409 level and\n          MVS/XA 2.1.3 at an 8509 level.\n\nCDF$      Installation instructions for the Console Display Facility\n\nCDFDATAB  Panel for the Console Display Facility\n\nCDFHELP   Help panel for the Console Display Facility\n\nCDF00     Messages for the Console Display Factilty\n\nIGC0023E  ISPF authorization svc.  You can't call ISPF services from\n          an authorized program (believe me - I tried it).\n\nINFOMGT   TSO clist driver for Information/System dialog\n\nINFOMGTP  Panel for Infomation/System dialog\n\nIN00      Messages for Information/System dialog\n\nISR@PRIM  Example primary options menu\n\nPSCANZAP  This is a zap to the MVS/XA version of AMDPSCAN found in file\n          329 of the CBT Modification tape to prevent a SCAN098 message\n          at the JBB2133 level.\n\n\n\nThis material was submitted by:  David W Meyer, CDP, CCP\n                                 Southwestern Public Service Company\n                                 4701 Parkside Drive\n                                 Amarillo, Tx 79109\n                                 806-354-6444\n\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BLGS11": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00,\\x00,\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "FILE130"}, "text": "//JOBCARD  JOB  (ACCOUNT),NAME\n//*\n//*  THIS JOB CREATES SOME SESSION PARAMETERS WHICH INCLUDE THE\n//*  CBTMODS INFO/MVS FILE\n//*\n//*  UPDATE ALL DATA SET NAMES AS APPROPRIATE FOR YOUR INSTALLATION\n//*\n//STEP1    EXEC ASMHCL\n//C.SYSIN   DD *\nBLGVDSN  CSECT\n         BLGPARMS RPANLDS=RPANELS,                                     X\n               DICTDS=DICTDS,                                          X\n               RFTDS=RFTS,                                             X\n               WPANLDS=WPANELS,                                        X\n               LINECNT=100\nSYSTEM   BLGCLUST NAME=5,          INFO/MGMT CLUSTER                   X\n               PRODUCT=MGMT,       NAME THE PRODUCT                    X\n               SDDS=MGTSDDS,       NAME THE SDDS                       X\n               SDIDS=MGTSDIDS,     NAME THE SDIDS                      X\n               SDLDS=MGTSDLDS      NAME THE SDLDS\nMVS      BLGCLUST NAME=0,          INFO/MVS CLUSTER                    X\n               PRODUCT=MVS,        NAME THE PRODUCT                    X\n               SDDS=OZSDDS,        NAME THE SDDS                       X\n               SDIDS=OZSDIDS       NAME THE SDIDS\nCBT      BLGCLUST NAME=1,          INFO/MVS CBTMODS CLUSTER            X\n               PRODUCT=MVS,        NAME THE PRODUCT                    X\n               SDDS=CBTSDDS,       NAME THE SDDS                       X\n               SDIDS=CBTSDIDS      NAME THE SDIDS\nMGTSDDS  BLGCLDSN DSN=DISKV.SDDS5\nMGTSDIDS BLGCLDSN DSN=DISKV.SDIDS5\nMGTSDLDS BLGCLDSN DSN=DISKV.SDLDS5\nOZSDDS   BLGCLDSN DSN=DISKV.OZ.SDDS\nOZSDIDS  BLGCLDSN DSN=DISKV.OZ.SDIDS\nCBTSDDS  BLGCLDSN DSN=DISKV.CBTMODS.SDDS\nCBTSDIDS BLGCLDSN DSN=DISKV.CBTMODS.SDIDS\nRPANELS  BLGCLDSN DSN=DISKV.READ.PANELS\nDICTDS   BLGCLDSN DSN=DISKV.DICT\nRFTS     BLGCLDSN DSN=DISK.REPORT.FORMATS,FILE=RFTDD\nWPANELS  BLGCLDSN DSN=DISKV.WRITE.PANELS\n         BLGGEN\n         END\n/*\n//L.SYSLMOD DD DISP=SHR,DSN=SYS1.LINKLIB(BLGSES11)\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBT$": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x1d\\x00\\x1d\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "FILE130"}, "text": "\n  VERSION 2 CBTMODS INFO/MVS DATABASE INSTALLATION\n\n  1. EDIT BLGS11 FOR INSTALLATION DEPENDENT DATA SET NAMES TO CREATE\n     SESSION PARAMETER MODULE BLGSES11.  THIS CAN BE IN A TSO STEPLIB\n     OR LINKLIST LIBRARY.\n\n  2. RUN CBTOZD MEMBER TO READ FILE ONE OF CBT MODIFICATION TAPE\n     AND CREATE INPUT FILE FOR BLGOZUD UTILITY.\n\n  3. RUN CBTAMS TO DELETE, DEFINE, AND INITIALIZE THE CBTMODS INFO/MVS\n     DATABASE FILES.\n\n  4. RUN CBTBLD TO LOAD THE CBTMODS INFO/MVS DATABASE FILES.\n\n  5. COPY INFOMGT CLIST TO APPROPRIATE CLIST LIBRARY.\n\n  6. COPY INFOMGTP PANEL TO APPROPRIATE ISPPLIB LIBRARY.\n     (IF YOU HAVE NEVER USED VERSION 2 BEFORE, ALSO COPY BLG#PRIM\n      FROM SYS1.BLGMAC2 TO THE APPROPRIATE ISPPLIB LIBRARY.)\n\n  7. ADD THE INFORMATION/SYSTEM DIALOG TO A PANELS AS SHOWN IN THE\n     EXAMPLE PANEL, ISR@PRIM.\n\n  8. INVOKE THE INFOMATION/SYSTEM DIALOG SPECIFYING A SESSION PARAMETER\n     OF 11.  DO YOUR SEARCHES ON FILE 1 (SE =1 KEYWORD).\n\n  I BELIEVE THIS SHOULD ALSO WORK FOR VERSION 3, BUT I HAVE NO WAY OF\n  KNOWING FOR SURE UNTIL WE INSTALL THAT VERSION.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBTAMS": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00>\\x00>\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 62, "newlines": 62, "modlines": 0, "user": "FILE130"}, "text": "//JOBCARD  JOB  (ACCOUNT),NAME\n//*\n//*  THIS JOB DELETES AND DEFINES THE CBTMODS INFO/MVS SDDS AND SDIDS\n//*  FILES AND THEN INITIALIZES THE DATA SETS FOR THE BLGOZUD UTILITY.\n//*\n//*  BE SURE TO CHANGE THE DATA SET NAMES AND VOLSERS TO APPROPRIATE\n//*  VALUES FOR YOUR INSTALLATION\n//*\n//IDCAMS   EXEC PGM=IDCAMS\n//SYSPRINT DD   SYSOUT=*\n//SYSUDUMP DD   SYSOUT=*\n//SYSIN    DD   *\n  DELETE DISKV.CBTMODS.SDDS CLUSTER\n  DEFINE                             +\n    CLUSTER(                         +\n      NAME(DISKV.CBTMODS.SDDS)       +\n      VOLUMES(VVVVVV)                +\n      INDEXED                        +\n      KEYS(8 0)                      +\n      SHAREOPTIONS(1)                +\n      UNIQUE)                        +\n    DATA(                            +\n      NAME(DISKV.CBTMODS.SDDS.DATA)  +\n      CONTROLINTERVALSIZE(8192)      +\n      RECORDSIZE(586 1020)           +\n      CYLINDERS(4 1)                 +\n      FREESPACE(0 0)                 +\n      SPEED)                         +\n    INDEX(                           +\n      NAME(DISKV.CBTMODS.SDDS.INDEX) +\n      CONTROLINTERVALSIZE(512)       +\n      IMBED                          +\n      REPLICATE)\n  DELETE DISKV.CBTMODS.SDIDS CLUSTER\n  DEFINE                             +\n    CLUSTER(                         +\n      NAME(DISKV.CBTMODS.SDIDS)      +\n      VOLUMES(VVVVVV)                +\n      INDEXED                        +\n      KEYS(16 0)                     +\n      SHAREOPTIONS(1)                +\n      UNIQUE)                        +\n    DATA(                            +\n      NAME(DISKV.CBTMODS.SDIDS.DATA) +\n      CONTROLINTERVALSIZE(12288)     +\n      RECORDSIZE(35 10343)           +\n      CYLINDERS(1 1)                 +\n      FREESPACE(0 0)                 +\n      SPEED)                         +\n    INDEX(                           +\n      NAME(DISKV.CBTMODS.SDIDS.INDEX) +\n      CONTROLINTERVALSIZE(2048)      +\n      IMBED                          +\n      REPLICATE)\n/*\n//STEP2    EXEC PGM=BLGUT2\n//SYSPRINT DD   SYSOUT=*\n//BLGSD    DD   DSN=DISKV.CBTMODS.SDDS,DISP=OLD\n//STEP3    EXEC PGM=BLGUT2\n//SYSPRINT DD   SYSOUT=*\n//BLGSD    DD   DSN=DISKV.CBTMODS.SDIDS,DISP=OLD\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBTBLD": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "FILE130"}, "text": "//JOBCARD  JOB  (ACCOUNT),NAME\n//*\n//*  THIS JOB BUILDS THE CBTMODS INFO/MVS DATA BASE\n//*\n//*  THIS JOB NEEDS A LARGE REGION AND A LOT OF CPU TIME\n//*\n//UDATA    EXEC PGM=BLGOZUD,PARM='SESS=11,NAME=1',REGION=1024K,\n//         TIME=5\n//SYSPRINT DD   SYSOUT=*\n//SYSUDUMP DD   SYSOUT=*\n//SYSIN    DD   DSN=DISK.BLGOZUD.INPUT,DISP=SHR\n//\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBTOZD": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\xf7\\x00\\xf7\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 247, "newlines": 247, "modlines": 0, "user": "FILE130"}, "text": "//JOBCARD  JOB  (ACCOUNT),NAME\n//*\n//*  THIS JOB READS FILE ONE OF THE CBT MODIFICATION TAPE AND\n//*  CREATES AN INPUT FILE TO THE BLGOZUD UTILITY\n//*\n//COMPILE  EXEC PLIXCLG,OUTC=R\n//PLI.SYSIN DD *\n CBTTOOZ: PROC OPTIONS(MAIN) REORDER;\n   DCL YES BIT(1) INIT('1'B) STATIC;\n   DCL NO  BIT(1) INIT('0'B) STATIC;\n   DCL EOFD1 BIT(1) INIT('0'B);\n   DCL INREC CHAR(80);\n   DCL 1 INRECA DEFINED(INREC),\n         2 JUNK1 CHAR(3),\n         2 INDATA CHAR(69),\n         2 JUNK2 CHAR(8);\n   DCL OUTREC CHAR(80);\n   DCL DATA1 FILE RECORD INPUT;\n   DCL BLGOZUD FILE RECORD OUTPUT;\n   DCL TRANSLATE BUILTIN;\n   DCL SUBSTR BUILTIN;\n   DCL STRING BUILTIN;\n   DCL VERIFY BUILTIN;\n   DCL LENGTH BUILTIN;\n   DCL INDEX  BUILTIN;\n   DCL BREC CHAR(80) INIT(' ');\n   DCL 1 HREC,\n         2 HCON1 CHAR(3) INIT('H U'),\n         2 HNUM  PIC'999999' INIT('000000'),\n         2 HCON3 CHAR(71) INIT(' ');\n   DCL 1 TREC,\n         2 TCON1 CHAR(2) INIT('T '),\n         2 TDATA CHAR(67) INIT(' '),\n         2 TCON2 CHAR(11) INIT(' ');\n   DCL 1 KREC,\n         2 KCON1 CHAR(2) INIT('K '),\n         2 KDATA CHAR(78) INIT(' ');\n   DCL 1 DREC,\n         2 DDATA CHAR(69) INIT(' '),\n         2 DCON1 CHAR(11) INIT(' ');\n   DCL EREC CHAR(80) INIT('$EOM');\n   DCL KPTR FIXED BIN(31) INIT(0);\n   DCL (I,J,K) FIXED BIN(31) INIT(0);\n   DCL NULL BUILTIN;\n   DCL (P,Q,R) POINTER INIT(NULL);\n   DCL (CURRENT_TEXT, CURRENT_KEYWORD) POINTER INIT(NULL);\n   DCL 1 TEXTS BASED(CURRENT_TEXT),\n         2 TEXT CHAR(69),\n         2 NEXT_TEXT POINTER;\n   DCL TEXT_START POINTER INIT(NULL);\n   DCL 1 KEYWORDS BASED(CURRENT_KEYWORD),\n         2 KEYWORD CHAR(69) VARYING,\n         2 LEFT_KEYWORD POINTER,\n         2 RIGHT_KEYWORD POINTER;\n   DCL KEYWORD_START POINTER INIT(NULL);\n   DCL (KEYWORK1, KEYWORK2) CHAR(80) VARYING INIT(' ');\n   DCL ASTER CHAR(1) INIT('*');\n   DCL BLANK CHAR(1) INIT(' ');\n   DCL SPECIAL CHAR(29) INIT('|@#$%\u00ac&*()_+!:\"}>?-=\u00a2\\;''{<,./');\n   DCL TRBLANK CHAR(29) INIT('                             ');\n   DCL PLIRETC BUILTIN;\n   DCL PLIDUMP BUILTIN;\n1/* BEGIN CBTTOOZ */;\n   ON ERROR BEGIN;\n     CALL PLIRETC(16);\n     CALL PLIDUMP('T F C H B A');\n   END;\n   ON ENDFILE(DATA1)\n     EOFD1 = YES;\n   EOFD1 = NO;\n   OPEN FILE(DATA1), FILE(BLGOZUD);\n   READ FILE(DATA1) INTO(INREC);\n   DO WHILE(\u00acEOFD1 &\n     (SUBSTR(INREC,1,13) \u00ac= '//***SECTION ' &\n      SUBSTR(INREC,1,10) \u00ac= '//***FILE '));\n     READ FILE(DATA1) INTO(INREC);  /* SKIP BEGINNING RECORDS */\n   END;\n   DO WHILE(\u00acEOFD1);\n     /* SETUP FIRST TEXT LINE */\n     ALLOCATE TEXTS;\n     TEXT_START = CURRENT_TEXT;\n     P = CURRENT_TEXT;\n     NEXT_TEXT = NULL;\n     TEXT = TRANSLATE(INDATA,BLANK,ASTER);\n     /* SET THE REST OF THE TEXT LINES FOR THIS ENTRY */\n     READ FILE(DATA1) INTO(INREC);\n     DO WHILE(\u00acEOFD1 &\n       (SUBSTR(INREC,1,13) \u00ac= '//***SECTION ' &\n        SUBSTR(INREC,1,10) \u00ac= '//***FILE '));\n       /* SETUP NEXT TEXT LINE */\n       ALLOCATE TEXTS;\n       P -> NEXT_TEXT = CURRENT_TEXT;\n       NEXT_TEXT = NULL;\n       P = CURRENT_TEXT;\n       TEXT = TRANSLATE(INDATA,BLANK,ASTER);\n       READ FILE(DATA1) INTO(INREC);\n     END;\n     /* HAVE GOTTEN ALL TEXT LINES FOR THIS ENTRY */\n     /* WRITE HEADER LINE */\n     HNUM = HNUM + 1;\n     OUTREC = STRING(HREC);\n     WRITE FILE(BLGOZUD) FROM(OUTREC);\n     /* BUILD AND WRITE TITLE LINE */\n     TDATA = SUBSTR(TEXT_START -> TEXT,3);\n     OUTREC = STRING(TREC);\n     WRITE FILE(BLGOZUD) FROM(OUTREC);\n     /* BUILD KEYWORDS */\n     CURRENT_TEXT = TEXT_START;\n     DO WHILE(CURRENT_TEXT \u00ac= NULL);\n       KEYWORK1 = TRANSLATE(TEXT,TRBLANK,SPECIAL);\n       I = VERIFY(KEYWORK1,BLANK);\n       DO WHILE(I \u00ac= 0);\n         KEYWORK1 = SUBSTR(KEYWORK1,I);\n         J = INDEX(KEYWORK1,BLANK);\n         IF J = 0\n         THEN DO;\n           KEYWORK2 = KEYWORK1;\n           KEYWORK1 = ' ';\n         END;\n         ELSE DO;\n           KEYWORK2 = SUBSTR(KEYWORK1,1,J-1);\n           KEYWORK1 = SUBSTR(KEYWORK1,J);\n         END;\n         ALLOC KEYWORDS;\n         KEYWORD = KEYWORK2;\n         LEFT_KEYWORD = NULL;\n         RIGHT_KEYWORD = NULL;\n         IF KEYWORD_START = NULL\n         THEN KEYWORD_START = CURRENT_KEYWORD;\n         ELSE DO;\n           P = KEYWORD_START;\n           DO WHILE(P \u00ac= NULL);\n             IF KEYWORD < P -> KEYWORD\n             THEN DO;\n               IF P -> LEFT_KEYWORD = NULL\n               THEN DO;\n                 P -> LEFT_KEYWORD = CURRENT_KEYWORD;\n                 P = NULL;\n               END;\n               ELSE P = P -> LEFT_KEYWORD;\n             END;\n             ELSE DO;\n               IF KEYWORD > P -> KEYWORD\n               THEN DO;\n                 IF P -> RIGHT_KEYWORD = NULL\n                 THEN DO;\n                   P -> RIGHT_KEYWORD = CURRENT_KEYWORD;\n                   P = NULL;\n                 END;\n                 ELSE P = P -> RIGHT_KEYWORD;\n               END;\n               ELSE DO;\n                 /* KEYWORD IS DUPLICATE */\n                 FREE KEYWORDS;\n                 P = NULL;\n               END;\n             END;\n           END;\n         END;\n         I = VERIFY(KEYWORK1,BLANK);\n       END;\n       CURRENT_TEXT = NEXT_TEXT;\n     END;\n     /* WRITE KEYWORDS */\n     KPTR = 1;\n     KDATA = ' ';\n     CALL WRITEKEY(KEYWORD_START);\n     IF KPTR \u00ac= 1\n     THEN DO;\n       OUTREC = STRING(KREC);\n       WRITE FILE(BLGOZUD) FROM(OUTREC);\n     END;\n     /* WRITE BLANK LINE */\n     OUTREC = BREC;\n     WRITE FILE(BLGOZUD) FROM(OUTREC);\n     /* WRITE TEXT LINES */\n     CURRENT_TEXT = TEXT_START;\n     DO WHILE(CURRENT_TEXT \u00ac= NULL);\n       DDATA = TEXT;\n       OUTREC = STRING(DREC);\n       WRITE FILE(BLGOZUD) FROM(OUTREC);\n       CURRENT_TEXT = NEXT_TEXT;\n     END;\n     /* WRITE END LINE */\n     OUTREC = EREC;\n     WRITE FILE(BLGOZUD) FROM(OUTREC);\n     /* FREE TEXT LINE STORAGE */\n     CURRENT_TEXT = TEXT_START;\n     DO WHILE(CURRENT_TEXT \u00ac= NULL);\n       P = NEXT_TEXT;\n       FREE TEXTS;\n       CURRENT_TEXT = P;\n     END;\n     TEXT_START = NULL;\n     /* FREE KEYWORDS STORAGE */\n     CALL TREEFREE(KEYWORD_START);\n     KEYWORD_START = NULL;\n     /* GO PROCESS NEXT SECTION */\n   END;\n   CLOSE FILE(DATA1), FILE(BLGOZUD);\n1/* RECURSIVE WRITE KEY PROCEDURE */\n WRITEKEY: PROCEDURE(Q) REORDER RECURSIVE;\n   DCL Q POINTER;\n   IF Q \u00ac= NULL\n   THEN DO;\n     CALL WRITEKEY(Q -> LEFT_KEYWORD);\n     I = LENGTH(Q -> KEYWORD);\n     IF I > 1 & I < 16\n     THEN DO;\n       IF KPTR + I > 78\n       THEN DO;\n         OUTREC = STRING(KREC);\n         WRITE FILE(BLGOZUD) FROM(OUTREC);\n         KPTR = 1;\n         KDATA = ' ';\n       END;\n       SUBSTR(KDATA,KPTR,I) = Q -> KEYWORD;\n       KPTR = KPTR + I + 1;\n     END;\n     CALL WRITEKEY(Q -> RIGHT_KEYWORD);\n   END;\n END WRITEKEY;\n1/* RECURSIVE TREE FREE PROCEDURE */\n TREEFREE: PROCEDURE(Q) REORDER RECURSIVE;\n   DCL Q POINTER;\n   IF Q \u00ac= NULL\n   THEN DO;\n       CALL TREEFREE(Q -> LEFT_KEYWORD);\n       CALL TREEFREE(Q -> RIGHT_KEYWORD);\n       FREE Q -> KEYWORDS;\n   END;\n END TREEFREE;\n-END CBTTOOZ;\n/*\n//GO.SYSUDUMP DD SYSOUT=*\n//GO.PLIDUMP  DD SYSOUT=*\n//*\n//*  THE FOLLOWING FILE IS FILE 001 OF THE CBT MODIFICATIONS TAPE\n//*\n//GO.DATA1 DD DSN=MVSMODS3.FILE001.DATA,DISP=SHR\n//*\n//*  THIS IS THE OUTPUT FILE WHICH BECOMES INPUT TO BLGOZUD\n//*\n//GO.BLGOZUD DD DSN=DISK.BLGOZUD.INPUT,DISP=(,CATLG,DELETE),\n//         UNIT=SYSDA,SPACE=(6160,(450,100),,,ROUND),\n//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160)\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CDF": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x03H\\x03H\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 840, "newlines": 840, "modlines": 0, "user": "FILE130"}, "text": "//JOBCARD  JOB (ACCOUNT),NAME\n//ASM1    EXEC PGM=IEV90,REGION=2048K,\n//        PARM='OBJECT,NODECK,TERM,XREF(SHORT),RENT'\n//SYSLIB   DD  DSN=SYS1.SMPMTS,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  SPACE=(CYL,(5,5)),\n//             UNIT=SYSDA\n//SYSUT2   DD  SPACE=(CYL,(5,5)),\n//             UNIT=SYSDA\n//SYSUT3   DD  SPACE=(CYL,(5,5)),\n//             UNIT=SYSDA\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSPUNCH DD  DUMMY\n//SYSLIN   DD   DSN=&&OBJSET,UNIT=SYSDA,SPACE=(CYL,(5,5)),\n//             DISP=(MOD,PASS)\n//SYSIN    DD  *\n         TITLE 'CONSOLE DISPLAY FACILITY (CDF)'\n***********************************************************************\n*                                                                     *\n*                                                                     *\n*                 CONSOLE DISPLAY FACILITY (CDF)                      *\n*                                                                     *\n*                                                                     *\n* ABSTRACT: DISPLAY MVS MASTER CONSOLE ACTIVITY AND PROCESS MVS       *\n*           AND JES COMMANDS.                                         *\n*                                                                     *\n*                                                                     *\n* FUNCTION: CDF IS DESIGNED TO OPERATE UNDER ISPF USING DISPLAY       *\n*           MANAGEMENT SERVICES. IT PROVIDES A CONSOLE DISPLAY        *\n*           SIMILAR TO JESOPER, DIDOCS,ETC.,        BUT SINCE IT      *\n*           RUNS UNDER ISPF, IT CAN BE INVOKED WITH SPLIT-SCREEN.     *\n*                                                                     *\n*           CDF LOOKS AT VARIOUS MVS XA 2.1.3 CONTROL BLOCKS.      DWM*\n*                                                                     *\n*                                                                     *\n* EXTERNAL REFERENCE: ISPLINK                                         *\n*                                                                     *\n*                                                                     *\n* MACROS USED:                                                     DWM*\n*              ABEND                                               DWM*\n*              FREEMAIN                                            DWM*\n*              GETMAIN                                             DWM*\n*              LOAD                                                DWM*\n*              DELETE                                              DWM*\n*              SAVE                                                DWM*\n*              RETURN                                              DWM*\n*                                                                  DWM*\n* DATA AREA                                                        DWM*\n* MACROS USED:                                                     DWM*\n*              CVT                                                 DWM*\n*              IEECDCM                                             DWM*\n*              IEECRDCM                                            DWM*\n*              IEECUCM                                             DWM*\n*              IEFUCBOB                                            DWM*\n*              IHAASVT                                             DWM*\n*              IHAASCB                                             DWM*\n*                                                                     *\n* ATTRIBUTES:                                                         *\n*              RENT,REUS                                           DWM*\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n* CHANGE LOG:                                                         *\n*                                                                     *\n*  4/11/86 DAVID W.MEYER                                           DWM*\n*    MADE PROGRAM REENTRANT                                        DWM*\n*    LOAD ISPLINK AT EXECUTION TIME TO GET MOST CURRENT VERSION    DWM*\n*    SEARCH FOR \"CONSOLE\" ASID AND DETERMINE ASID NUMBER           DWM*\n*      (USED BY CROSS MEMORY SERVICES)                             DWM*\n*    CODE SKIPPED LAST UCME - CORRECTED                            DWM*\n*    CHANGED MASTER CONSOLE SEARCH TO USE MORE DIRECT APPROACH     DWM*\n*    ADDED INACTIVE CONSOLE CHECK - IF SO, SKIP BUFFER MOVE AND    DWM*\n*      TABLE BUILD                                                 DWM*\n*    ADDED BUFFER LENGTH CHECK                                     DWM*\n*    USED CONTROL BLOCK FIELDS TO CALCULATE LINE OFFSETS AND       DWM*\n*      BUFFER LENGTH                                               DWM*\n*    ADDED \"CON\" COMMAND TO SELECT OTHER CONSOLES                  DWM*\n*                                                                     *\n***********************************************************************\n         EJECT\nCDF      CSECT\n         SAVE  (14,12),,CDF_&SYSDATE_&SYSTIME                      DWM\n         LR    R12,R15        SET UP BASE REGISTER                 DWM\n         USING CDF,R12                                             DWM\n         GETMAIN R,LV=WORKLEN GET STORAGE FOR CDFWORK              DWM\n         LR    R11,R1         SETUP CDFWORK REGISTER               DWM\n         USING CDFWORK,R11                                         DWM\n         LR    R0,R1          AREA TO BE CLEARED                   DWM\n         LA    R1,WORKLEN     GET LENGTH TO BE CLEARED             DWM\n         XR    R15,R15        ZERO PAD AND FROM LENGTH             DWM\n         MVCL  R0,R14         ZERO CDFWORK                         DWM\n         MVC   CDFWT,CDFWORKT MOVE IN CDFWORK EYECATCHER           DWM\n         MVC   BUFS,BUFST     MOVE IN BUFFER START EYECATCHER      DWM\n         MVC   BUFE,BUFET     MOVE IN BUFFER END EYECATCHER        DWM\n         ST    R13,SAVEAREA+4 SAVE PREVIOUS SAVEAREA @             DWM\n         LA    R15,SAVEAREA   GET @ OF MY SAVEAREA                 DWM\n         ST    R15,8(R13)     LINK SAVE AREAS                      DWM\n         LR    R13,R15        SETUP SAVEAREA REGISTER              DWM\n*\n*\n*---------------------------------------------------------------------*\n*                                                                     *\n*                       PROGRAM INITIALIZATION                        *\n*                                                                     *\n*---------------------------------------------------------------------*\n*\nSHOWINIT DS    0H\n*\n         MVC   CMDLINE,BLANKS   CLEAR CMDLINES                     DWM\n         LOAD  EP=ISPLINK       LOAD CURRENT ISPLINK MODULE        DWM\n         ST    R0,ISPLINK       SAVE ISPLINK ADDRESS               DWM\n*\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (VCOPY,ZUSER,F8,USERID,SPFMOVE),                    DWM X\n               VL,MF=(E,ISPARMS)\n         LA    R2,ATABNUM                                          DWM\n         LA    R3,ATABLE                                           DWM\nALOOP    DS    0H                         QUICK                    DWM\n         MVC   AWORK,0(R3)                AND                      DWM\n         XC    AWORK,AKEY                 DIRTY                    DWM\n         CLC   USERID,AWORK               SECURITY                 DWM\n         BE    ADOIT                                               DWM\n         LA    R3,8(0,R3)                                          DWM\n         BCT   R2,ALOOP                                            DWM\n         L     R15,ISPLINK                                         DWM\n         CALL  (15),                                               DWM X\n               (SETMSG,                                            DWM X\n               CDF001),                                            DWM X\n               VL,MF=(E,ISPARMS)                                   DWM\n         B     SHOWRTRN                                            DWM\n*                                                                  DWM\n*  LOCATE ASID NUMBER FOR 'CONSOLE' ADDRESS SPACE                  DWM\n*                                                                  DWM\nADOIT    DS    0H                                                  DWM\n         L     R3,CVTPTR        GET CVT ADDRESS                    DWM\n         USING CVTMAP,R3                                           DWM\n         L     R3,CVTASVT       GET ASVT ADDRESS                   DWM\n         DROP  R3                                                  DWM\n         USING ASVT,R3                                             DWM\n         L     R9,ASVTMAXU      GET MAX NUMBER OF ADDRESS SPACES   DWM\n         SLL   R9,2             * 4 TO GET IN ADDRESS FORM         DWM\n         LA    R8,4             LOAD INCREMENT                     DWM\n         LA    R6,4             START INDEX                        DWM\nASCBLP   DS    0H                                                  DWM\n         LA    R7,ASVTFRST(R6)  GET ASCB POINTER                   DWM\n         TM    0(R7),ASVTAVAL   IS ASCB AVAILABLE?                 DWM\n         BO    ASCBNXT          YES..DO NEXT ASCB                  DWM\n         L     R4,0(R7)         GET ASCB ADDRESS                   DWM\n         USING ASCB,R4                                             DWM\n         L     R5,ASCBJBNS      GET JOBNAME POINTER                DWM\n         LTR   R5,R5            IS THE POINTER ZERO?               DWM\n         BZ    ASCBNXT          YES..DO NEXT ASCB                  DWM\n         CLC   CONSNAME,0(R5)   IS IT 'CONSOLE' ?                  DWM\n         BE    CONSFND          FINALLY FOUND IT                   DWM\n         DROP  R4                                                  DWM\nASCBNXT  DS    0H                                                  DWM\n         BXLE  R6,R8,ASCBLP     KEEP SEARCHING                     DWM\n         DROP  R3                                                  DWM\n         L     R15,ISPLINK                                         DWM\n         CALL  (15),                                               DWM X\n               (SETMSG,                                            DWM X\n               CDF002),                                            DWM X\n               VL,MF=(E,ISPARMS)                                   DWM\n         B     SHOWRTRN         NEVER FOUND 'CONSOLE'.. QUIT NOW   DWM\nCONSFND  DS    0H                                                  DWM\n         SRL   R6,2             DIVIDE INDEX BY 4 TO GET ASID NUMBERWM\n         ST    R6,CONSASID      SAVE 'CONSOLE' ASID NUMBER         DWM\n*\n*  NOW THAT WE HAVE FOUND 'CONSOLE', WE MAY BEGIN\n*\n         MVI   ATABFL,C'0'        NO ACTIVE TABLE\n*\n         B     SHOWCONS       DISPLAY THE MASTER CONSOLE\n*\nSHOWDONE DS    0H\n         CLI   ATABFL,C'0'        NO ACTIVE TABLE\n         BE    SHOWRTRN\n*                                  DELETE THE TABLE VARIABLES\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (VDELETE,                                               X\n               JCMD),                                                  X\n               VL,MF=(E,ISPARMS)\n*\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (VDELETE,                                               X\n               CONLINEP),                                              X\n               VL,MF=(E,ISPARMS)\n*\n*                                  DELETE THE TABLE ITSELF\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (TBEND,                                                 X\n               CDFTABLE),                                              X\n               VL,MF=(E,ISPARMS)\n*\nSHOWRTRN DS    0H\n         DELETE EP=ISPLINK    DELETE ISPLINK MODULE                DWM\n         LR    R1,R11         SETUP FOR FREEMAIN                   DWM\n         L     R13,4(R13)     RESTORE THE CALLER'S R13             DWM\n         FREEMAIN R,A=(1),LV=WORKLEN   FREE CDFWORK STORAGE        DWM\n         RETURN (14,12),RC=0  RETURN TO OUR CALLER                 DWM\n*\n*\n         TITLE 'CDF   START OF SHOW CONSOLE LOOP'\nSHOWCONS DS    0H\n*        ST    R7,CDF7HOLD SAVE THE RETURN ADDRESS                 DWM\n*\n         MVC   SELCODE(3),SPACES  SET SELECTION CODE TO SPACES\n*\n         CLI   ATABFL,C'0'        DO I HAVE AN ACTIVE TABLE?\n         BE    ANOTAB             NOPE\n*\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (VDELETE,                                               X\n               JCMD),                                                  X\n               VL,MF=(E,ISPARMS)\n*\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (VDELETE,                                               X\n               CONLINEP),                                              X\n               VL,MF=(E,ISPARMS)\n*\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (TBEND,                                                 X\n               CDFTABLE),                                              X\n               VL,MF=(E,ISPARMS)\n         MVI   ATABFL,C'0'        NO ACTIVE TABLE\n         TITLE 'CDF   DEFINE THE CONSOLE TABLE  '\nANOTAB   DS    0H\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (VDEFINE,                                               X\n               CONLINEP,TABAREA,CHAR,L79),                             X\n               VL,MF=(E,ISPARMS)\n*\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (VDEFINE,                                               X\n               JCMD,CMDLINE,CHAR,L51),                             DWM X\n               VL,MF=(E,ISPARMS)\n*\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (TBCREATE,                                              X\n               CDFTABLE,                                               X\n               NULLENT,                                                X\n               DANAMLST,                                               X\n               NOWRITE),                                               X\n               VL,MF=(E,ISPARMS)\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (TBVCLEAR,                                              X\n               CDFTABLE),                                              X\n               VL,MF=(E,ISPARMS)\n         MVI   ATABFL,C'1'        AN ACTIVE TABLE\n*\n*\n         TITLE 'CDF   BUILD UCM TABLE           '\nTAB1LOOP DS    0H\n*\n*---------------------------------------------------------------------*\n*                                                                     *\n*          BUILD A TABLE OF UCM ADDRESSES (ONE PER CONSOLE)           *\n*                                                                     *\n*---------------------------------------------------------------------*\nBLDUCMS  L     R4,16              R4 = ADDR OF CVT\n         USING CVT,R4\n         L     R4,CVTCUCB         R4 = ADDR OF 'CUCB' (UCM BASE)\n         DROP  R4\n         USING UCM,R4\n         L     R5,UCMVEA          R5 = ADDR OF FIRST UCM ENTRY\n         L     R6,UCMVEZ          R6 = LENGTH OF EACH UCM ENTRY\n         L     R7,UCMVEL          R7 = ADDR OF LAST UCM ENTRY\n         LA    R8,UCMTAB+4        R8 = ADDR OF UCMTAB\n         LA    R9,UCMTABE         R9 = ADDR OF END OF UCMTAB\n         XR    R2,R2              R2  = 0 (NUMBER OF VALID UCMS)\nUCMLOOP  ST    R5,0(0,R8)         SAVE UCM ADDRESS IN UCMTAB\n         LA    R2,1(0,R2)         R2  = R2  + 1  (ONE MORE UCM)\n         LA    R8,4(0,R8)         R8 = ADDR OF NEXT UCMTAB ENTRY\n         CR    R8,R9              DOES R8 POINT PAST END OF UCMTAB?\n         BNL   UCMDONE            YES; LEAVE LOOP\n         AR    R5,R6              R5 = ADDR OF NEXT UCM ENTRY\n         CR    R5,R7              DOES R5 POINT PAST UCM ENTRIES?\n         BNH   UCMLOOP            NOPE; KEEP GOING                 DWM\nUCMDONE  STH   R2,NUMUCMS         SAVE NUMBER OF UCMS FOUND\n*---------------------------------------------------------------------*\n*        SCAN THE UCM FOR THE MASTER CONSOLE AS THE DEFAULT        GMM*\n*        CONSOLE WHEN ENTERING THE CONSOLE DISPLAY FACILITY        DWM*\n*---------------------------------------------------------------------*\n         L     R10,CONSOLE        GET CURRENT CONSOLE              DWM\n         LTR   R10,R10            IS IT ZERO (FIRST TIME THROUGH) ?DWM\n         BNZ   NEXTPAGE           NO...DONT NEED THIS              DWM\n         LR    R10,R4             SETUP UCM POINTER                DWM\n         S     R10,=F'4'          BACKUP POINTER TO MCS PREFIX POINTER\n         L     R10,0(R10)         GET MCS PREFIX ADDRESS           DWM\n         USING UCMPRFX,R10                                         DWM\n         L     R9,UCMMCENT        GET ADDRESS OF MASTER CONSOLE UCMDWM\n         S     R9,UCMVEA          FIND OFFSET FROM BEGINNING       DWM\n         DROP  R4,R10             DONT NEED UCM ADDRESSABILITY NOW DWM\n         M     R8,=F'1'           SETUP SIGN FOR DIVIDE            DWM\n         DR    R8,R6              DIVIDE BY UCM ENTRY LENGTH       DWM\n         LA    R9,1(0,R9)         POSITIVE INTEGERS ONLY           DWM\n         ST    R9,CONSOLE         SET VALID CONSOLE NUMBER (MASTER)DWM\n         TITLE 'CDF   PICK A CONSOLE            '\n*---------------------------------------------------------------------*\n*                                                                     *\n*                            TOP OF LOOP                              *\n*                                                                     *\n*---------------------------------------------------------------------*\nNEXTPAGE DS    0H\n         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\n         L     R4,CONSOLE         R4 = CONSOLE TO BE DISPLAYED     DWM\n         ST    R4,OLDCONS         R4 = LAST CONSOLE DISPLAYED      DWM\n         BZ    WRTERR4            WE HAVE NO CONSOLE ZERO (MASTER) GMM\n         CH    R4,NUMUCMS         IS NUMBER TOO HIGH?\n         BNH   GETUCM             NO, CONTINUE\n*        MVI   CLEAR,X'C5'        TURN ON BELL BIT IN WCC          DWM\nRESETCN  L     R4,OLDCONS         RESET TO OLD CONSOLE\n         ST    R4,CONSOLE         AND SAVE IT\nGETUCM   SLL   R4,2               MULTIPLY BY 4\n         LA    R5,0(R5,R4)        R5 = ADDR OF ADDR OF UCM\n         L     R5,0(0,R5)         R5 = ADDR OF UCM\n         USING UCMLIST,R5\n         L     R6,UCMXB           R6 = ADDR OF RDCM\n         USING IEERDCM,R6                                          GMM\n         LTR   R6,R6              IS THIS A GRAPHICS CONSOLE?\n         BP    GRAPHICS           YES\n         LA    R5,UCMTAB          R5 = ADDR OF UCMTAB\nWRTERR4  DS    0H\n*        MVI   CLEAR,X'C5'        TURN ON BELL BIT IN WCC          DWM\n         B     RESETCN            RESET THE CONSOLE NUMBER\n         SPACE\nGRAPHICS EQU   *\n         MVC   TITLE(TITLEL),BLANKS BLANK OUT CONSOLE TITLE        DWM\n         MVC   TITLEC1,=C' CONSOLE='                               DWM\n         MVC   TITLEC2,=C' AUTH='                                  DWM\n         MVC   TITLEC3,=C' ADDR='                                  DWM\n         TM    UCMDISP1,UCMDISPA  IS THIS A MASTER CONSOLE?\n         BNO   AUTH0              NO\n         MVC   MASTER,=CL6'MASTER' YES                             DWM\nAUTH0    TM    UCMAUTHA,UCMAUTH1  IS THIS CONSOLE SYSTEM AUTHORIZED?\n         BNO   AUTH1              NO\n         MVC   SYS,=CL3'SYS'   YES                                 DWM\nAUTH1    TM    UCMAUTHA,UCMAUTH2  IS IT I/O AUTHOZRIZED?\n         BNO   AUTH2              NO\n         MVC   IO,=CL3'I/O'    YES                                 DWM\nAUTH2    TM    UCMAUTHA,UCMAUTH3  IS IT CONS AUTHORIZED?\n         BNO   AUTHDONE           NO\n         MVC   CONS,=CL4'CONS' YES                                 DWM\nAUTHDONE EQU   *\n         L     R7,UCMUCB          R7 = ADDR OF UCB\n         USING UCBCMSEG,R7                                         DWM\n         MVC   UNIT(3),UCBNAME    MOVE UNIT ADDR INTO LINE         DWM\n         DROP  R7                                                  DWM\n         L     R3,CONSOLE         LOAD THE CONSOLE NUMBER\n         CVD   R3,WORK            CONVERT TO DECIMAL IN WORK\n         MVC   SCRATCH(4),PATTERN MOVE IN EDIT PATTERN\n         ED    SCRATCH(4),WORK+6  EDIT IN CONSOLE NUMBER\n         MVC   CONNUM(2),SCRATCH+2 MOVE CONSOLE NUMBER INTO PLACE\n         NI    FLAG1,255-CONOTACT TURN OFF NOT ACTIVE FLAG         DWM\n         TM    UCMATR,UCMUF       IS CONSOLE ACTIVE?               DWM\n         BO    ACTIVE1            YES..IS ACTIVE                   DWM\n         OI    FLAG1,CONOTACT     INDICATE CONSOLE NOT ACTIVE      DWM\n         B     TITLE1             SKIP BUFFER MOVE                 DWM\nACTIVE1  DS    0H                                                  DWM\n         NI    FLAG1,255-BUFSHORT TURN OFF BUFFER TOO SHORT FLAG   DWM\n         LA    R10,BUFLEN         LOAD BUFFER LENGTH FOR COMPARE   DWM\n         L     R7,DCMADTRN        GET ADDRESS OF TDCM              GMM\n         USING STRTDCM,7\n         SPACE 2\n         TITLE 'CDF   CROSS MEMORY SERVICES     '\n*---------------------------------------------------------------------*\n*                                                                     *\n*                 FILLIN TRAILER AT BOTTOM OF SCREEN                  *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE 2\n         LA    R0,1                    REQUEST AUTHORIZATION ON    JL1\n         SVC   235                     SET AUTHORIZATION ON        JL1\n         MODESET MF=(E,SUPRMOD)   GET INTO SUPV STATE AND KEY ZERO JPB\n*\n*                                      SET UP FOR CROSS MEMORY MOVE\n*\n         AXRES AXLIST=AXLIST           RESERVE AN AX               JPB\n         SPACE 2\n         L     R1,CONSASID             'CONSOLE' ASID              DWM\n         AXEXT ASID=(1)                EXTRACT AX OF 'CONSOLE'IN R0JPB\n         SPACE 2\n         AXSET AX=(0)                  SET OUT AX TO THAT OF CONSOLEPB\n         SPACE 2\n         L     R1,CONSASID             'CONSOLE' ASID              DWM\n         SSAR  R1                      SET 'CONSOLE' AS SECONDARY  JPB\n         SPACE 2\n         PRINT ON,GEN\n*\n*                                      PICK UP LAST LINE\n*\n         SLR   R0,R0                   SECONDARY KEY\n         LA    R1,L'LASTLINE           TRUE LENGTH\n         MVCP  LASTLINE(R1),DCMINPUT-STRTDCM(R7),R0\n*\n*                                      PICK UP START ADDRESS\n*\n         LA    R1,4               SET TRUE LENGTH                  JPB\n         SLR   R0,R0              SET STORAGE KEY                  JPB\n         MVCP  SIBPTR(R1),DCMASCRN-STRTDCM(R7),R0 PT TO SCRN ADRJPB\n         LA    R1,2               SET UP FOR HALF WORD MOVES       DWM\n         MVCP  OUTLEN(R1),DCMLGNTH-STRTDCM(R7),R0                  DWM\n         MVCP  OUTCLEN(R1),DCMCORLN-STRTDCM(R7),R0                 DWM\n         MVCP  OUTNUM(R1),DCMMSGAL-STRTDCM(R7),R0                  DWM\n*\n*                                      SET UP FOR XMEM MOVE LOOP\n*\n         L     R8,SIBPTR          R8 = ADDR OF SCREEN IMAGE\n         LA    R4,BUF             R4 = ADDR OF OUTPUT BUFFER\n         LH    R5,OUTCLEN         GET INCORE LINE LENGTH           DWM\n         MH    R5,OUTNUM          * NUMBER OF LINES = BUFFER LENGTHDWM\n         CR    R5,R10             IS OUR BUFFER LONG ENOUGH        DWM\n         BNH   MOVEBUFF           YES..GO DO IT                    DWM\n         OI    FLAG1,BUFSHORT     INDICATE BUFFER TOO SHORT        DWM\n         B     RESETSAR           DONT MOVE BUFFER                 DWM\nMOVEBUFF DS    0H\n         LH    R2,OUTCLEN         R2 = INCORE LINE LENGTH          DWM\n         SH    R2,OUTLEN        - DATA LENGTH = # OF CONTROL CHARS DWM\n         SR    R8,R2           BACKUP POINTER TO BEGINNING OF DATA DWM\n         SLR   R0,R0              RESET THE KEY\n*\nMVCPLOOP DS    0H\n         MVCP  0(R5,R4),0(R8),R0  LOOP THRU THE CONSOLE BUFFER\n*\n         BZ    RESETSAR\n         AL    R8,=F'256'         MAX LEN ALLOWED\n         AL    R4,=F'256'         MAX LEN ALLOWED\n         SL    R5,=F'256'         MAX LEN ALLOWED\n         B     MVCPLOOP\n*\nRESETSAR DS    0H\n*---------------------------------------------------------------------*\n*                                                                     *\n*        IN ORDER TO ISSUE SVCS THE PRIMARY AND                       *\n*        SECONDARY ADDRSPC MUST BE THE SAME                           *\n*                                                                     *\n*---------------------------------------------------------------------*\n*\n         EPAR  R1                 EXTRACT PRIMARY ASN\n         SSAR  R1\n         MODESET MF=(E,PROBMOD)   RETURN TO PROBLEM STATE          DWM\n         SR    R0,R0                   REQUEST AUTHORIZATION OFF   JL1\n         SVC   235                     SET AUTHORIZATION OFF       JL1\n*\n         DROP  R5,R6,R7                                            GMM\n*\n         TITLE 'CDF   BUILD ISPF TABLE'                            DWM\n*                                                                  DWM\n*  INSERT TITLE LINE                                               DWM\n*                                                                  DWM\nTITLE1   DS   0H                                                   DWM\n         MVI  TABAREA,C'*'        PUT IN STARRED LINE              DWM\n         MVC  TABAREA+1(L'TABAREA),TABAREA                         DWM\n         MVC  TABAREA+TITLEB(TITLEL),TITLE  MOVE IN TITLE          DWM\n         L     R15,ISPLINK                                         DWM\n         CALL  (15),                                               DWM X\n               (VPUT,                                              DWM X\n               DANAMLST),                                          DWM X\n               VL,MF=(E,ISPARMS)                                   DWM\n         L     R15,ISPLINK                                         DWM\n         CALL  (15),                                               DWM X\n               (TBADD,                                             DWM X\n               CDFTABLE),                                          DWM X\n               VL,MF=(E,ISPARMS)                                   DWM\n         MVI   TABAREA,C' '                                        DWM\n         MVC   TABAREA+1(L'TABAREA-1),TABAREA                      DWM\n*                                                                  DWM\n*  CHECK FOR ERROR CONDITIONS AND ISSUE MESSAGES IF APPROPRIATE    DWM\n*                                                                  DWM\n         TM    FLAG1,CONOTACT     IS CONSOLE NOT ACTIVE?           DWM\n         BZ    CHKSHORT         NO...BUILD LINES FOR ACTIVE CONSOLEDWM\n         L     R15,ISPLINK        YES..GIVE THEM THE BAD NEWS      DWM\n         CALL  (15),                                               DWM X\n               (SETMSG,                                            DWM X\n               CDF003),                                            DWM X\n               VL,MF=(E,ISPARMS)                                   DWM\n         B     SHOWSCRN                                            DWM\nCHKSHORT DS    0H                                                  DWM\n         TM    FLAG1,BUFSHORT     WAS THE BUFFER TOO SHORT         DWM\n         BZ    BUILD1             NO...BUILD LINES FOR CONSOLE     DWM\n         L     R15,ISPLINK        YES..GIVE THEM THE BAD NEWS      DWM\n         CALL  (15),                                               DWM X\n               (SETMSG,                                            DWM X\n               CDF004),                                            DWM X\n               VL,MF=(E,ISPARMS)                                   DWM\n         B     SHOWSCRN                                            DWM\n*                                                                  DWM\n*  BUILD CONSOLE LINES                                             DWM\n*                                                                  DWM\nBUILD1   DS    0H                                                  DWM\n         LH    R8,OUTNUM          GET NUMBER OF LINES              DWM\n         LA    R3,BUF             SET POINTER TO FIRST LINE        DWM\n         LH    R5,OUTCLEN         GET INCORE LINE LENGTH           DWM\n         LH    R6,OUTLEN          GET DATA LINE LENGTH             DWM\n         LR    R7,R5              SET UP FOR OFFSET CALCULATION    DWM\n         SR    R7,R6              CALCULATE OFFSET TO DATA         DWM\n         LA    R9,L'TABAREA       GET TABAREA LENGTH               DWM\n         CR    R6,R9              DATA LENGTH > TABAREA LENGTH ?   DWM\n         BNH   DOLINE             NO...USE DATA LENGTH             DWM\n         LR    R6,R9              YES..USE TABAREA LENGTH          DWM\nDOLINE   DS    0H                                                  DWM\n         BCTR  R6,0               LENGTH - 1 FOR EXECUTE           DWM\n*                                                                  DWM\nNEXTL    DS    0H                                                  DWM\n         LA    R4,0(R7,R3)        SET UP POINTER TO DATA           DWM\n         EX    R6,MOVELINE        MOVE IT TO SPF AREA              DWM\n*******************************************************************DWM*\n*                                                                  DWM*\n*   ADD A LINE TO THE TABLE                                        DWM*\n*                                                                  DWM*\n*******************************************************************DWM*\n*                                                                  DWM\nADDL     DS    0H                                                  DWM\n         L     R15,ISPLINK                                         DWM\n         CALL  (15),                                               DWM X\n               (VPUT,                                              DWM X\n               DANAMLST),                                          DWM X\n               VL,MF=(E,ISPARMS)                                   DWM\n         L     R15,ISPLINK                                         DWM\n         CALL  (15),                                               DWM X\n               (TBADD,                                             DWM X\n               CDFTABLE),                                          DWM X\n               VL,MF=(E,ISPARMS)                                   DWM\n         MVI   TABAREA,C' '                                        DWM\n         MVC   TABAREA+1(L'TABAREA-1),TABAREA                      DWM\n*                                                                  DWM\n         LA    R3,0(R5,R3)        POINT TO NEXT LINE               DWM\n*                                                                  DWM\n         BCT   R8,NEXTL           PRINT NEXT LINE                  DWM\n*                                                                  DWM\n         TITLE 'CDF  DISPLAY SPF TABLE          '\n*\n***********************************************************************\n*\n*   NOW SHOW THE ISPPLIB FORMAT AND THE TABLE ON THE SCREEN\n*\n***********************************************************************\n*\nSHOWSCRN DS    0H\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (TBTOP,                                                 X\n               CDFTABLE),                                              X\n               VL,MF=(E,ISPARMS)\n         L     R15,ISPLINK\n         CALL  (15),                                                   X\n               (TBDISPL,                                               X\n               CDFTABLE,                                               X\n               CDFDATAB),                                              X\n               VL,MF=(E,ISPARMS)\n*\n***********************************************************************\n*\n*   DETERMINE WHETHER ANYTHING WAS ENTERED ON THE SCREEN\n*\n***********************************************************************\n*\n         C     R15,F8         END KEY\n         BE    SHOWDONE       WE ARE FINISHED RETURN               DWM\n         C     R15,FZEROS     COMMAND ENTERED/LINE MODIFIED??\n         BNE   SHOWDONE       NOPE..ANY OTHER CODE TERMINATES      DWM\nGOTSTUFF DS    0H\n         TR    CMDLINE,CAPSONLY  UPPER-CASE ALL INPUT\n*\n*  NOTE THE TR TABLE IS SET UP TO DELETE SEMI-COLONS, IN ORDER TO\n*       PREVENT COMMAND CONCATENATION.\n*\n         CLI   CMDLINE,C' '   IF COMMAND AREA IS SPACES\n         BE    SHOWCONS       THEN A COMMAND WAS NOT ENTERED       DWM\n*                                                                  DWM\n         CLC   CMDLINE(L'CONCMD),CONCMD    NEW CONSOLE REQUEST ?   DWM\n         BNE   GOTCMD            NO...MUST BE CONSOLE COMMAND      DWM\n         XC    WORK,WORK         CLEAR DOUBLEWORD                  DWM\n         PACK  WORK+7(1),CMDLINE+L'CONCMD(1) PACK NEW CONSOLE NUMBERWM\n         CVB   R1,WORK           CONVERT TO BINARY                 DWM\n         ST    R1,CONSOLE        STORE NEW CONSOLE NUMBER          DWM\n*                                                                  DWM\n         B     CMDFINSH                                            DWM\n*                                                                  DWM\n*                                                                  DWM\nGOTCMD   DS    0H                                                  DWM\n*                                                                  DWM\n         LA    R1,CMDLEN        LENGTH OF REPLY COMMAND            DWM\n         STH   R1,CMDPARM       STICK IT IN THERE                  DWM\n         SR    R0,R0            CLEAR REGISTER                     DWM\n         STH   R0,CMDRESV       CLEAR RESERVED HALFWORD            DWM\n*                                                                  DWM\n         LA    R0,1                    REQUEST AUTHORIZATION ON    DWM\n         SVC   235                     SET AUTHORIZATION ON        DWM\n         MODESET MF=(E,SUPRMOD)   GET INTO SUPV STATE AND KEY ZERO DWM\n*                                                                  DWM\n         L     R0,CONSOLE              INSERT CONSOLE NUMBER       DWM\n         MGCR  CMDPARM                 ISSUE COMMAND VIA SVC 34    DWM\n*                                                                  DWM\n         MODESET MF=(E,PROBMOD)        RETURN TO PROBLEM STATE     DWM\n         SR    R0,R0                   REQUEST AUTHORIZATION OFF   DWM\n         SVC   235                     SET AUTHORIZATION OFF       DWM\n*                                                                  DWM\nCMDFINSH DS    0H                                                  DWM\n         MVI   CMDLINE,C' '                                        DWM\n         MVC   CMDLINE+1(L'CMDLINE-1),CMDLINE                      DWM\n*                                                                  DWM\n         B     SHOWCONS                                            DWM\n*                                                                  DWM\n         SPACE 5\n         EJECT\n*\n         TITLE 'MISCELLANEOUS CONSTANTS'\n         LTORG\n*\n         DS    0F\n*\n*\n*\nFZEROS   DC    F'0'\nF8       DC    F'8'\nL79      DC    F'79'\nL51      DC    F'51'                                               DWM\n*                                                                  DWM\nMOVELINE MVC   TABAREA(0),0(R4)      MOVE IT TO SPF AREA           DWM\n*                                                                  DWM\nTBADD    DC    C'TBADD    '\nTBCREATE DC    C'TBCREATE '\nTBDISPL  DC    C'TBDISPL  '\nTBEND    DC    C'TBEND    '\nTBTOP    DC    C'TBTOP    '\nTBVCLEAR DC    C'TBVCLEAR '\nVDEFINE  DC    C'VDEFINE  '\nVDELETE  DC    C'VDELETE  '\nVPUT     DC    C'VPUT     '\nAKEY     DC    X'9459277829C12B52'                                 DWM\n*\nNOWRITE  DC    C'NOWRITE  '\n*\nNULLENT  DC    C'()'\n*\nDANAMLST DC    C'('             CDF NAME LIST\n         DC    C'CONLINE )'     JOB INFO\nCONLINEP DC    C'(CONLINE )'    JOB INFO\nJCMD     DC    C'(JCMD    )'    SELECTION CODE\n*\nSPACES   DC    C'        '\n*\nCHAR     DC    C'CHAR    '\n*\nCDFDATAB DC    C'CDFDATAB'\nCDFTABLE DC    C'CDFTABLE'\nCDFWORKT DC    CL4'CDFW'                                           DWM\nBUFST    DC    CL4'BUFS'                                           DWM\nBUFET    DC    CL4'BUFE'                                           DWM\n*\n*\n*---------------------------------------------------------------------*\n*                                                                     *\n*                         C O N S T A N T S                           *\n*                                                                     *\n*---------------------------------------------------------------------*\nPATTERN  DC    X'40202020'         EDIT PATTERN FIELD\nBLANKS   DC    CL80' '\n*---------------------------------------------------------------------*\n*                                                                     *\n*        FOLLOWING IS IN SUPPORT OF C M S                             *\n*                                                                     *\n*---------------------------------------------------------------------*\n         SPACE 2\nAXLIST   DC    H'1',H'0'           AXRES PARMLIST\n         SPACE 2\n         SPACE 5\n         TITLE 'EQUATES'\n***********************************************************************\n*                                                                     *\n*        REGISTER EQUATES                                             *\n*                                                                     *\n***********************************************************************\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         DS    0F\nSUPRMOD  MODESET KEY=ZERO,MODE=SUP,MF=L                            GMM\nPROBMOD  MODESET KEY=NZERO,MODE=PROB,MF=L                          GMM\n*                |...|...|...|...|...|...|...|...|...|...|...\nCAPSONLY DC    CL64' '\n         DC    CL10' '\n         DC    C'\u00a2.<(+|&&'\n         DC    CL9' '\n         DC    C'!$*)'\n         DC    C' '             NOTE SEMICOLON CHANGED TO BLANK\n         DC    C'\u00ac-/'\n         DC    CL9' ',C',%_>?',CL10' ',C':#@''=\"'\n         DC    CL16' ABCDEFGHI      '\n         DC    CL16' JKLMNOPQR      '\n         DC    CL16'  STUVWXYZ      '\n         DC    CL16'                '\n         DC    CL16' ABCDEFGHI      '\n         DC    CL16' JKLMNOPQR      '\n         DC    CL16'  STUVWXYZ      '\n         DC    CL16'0123456789      '\n         SPACE 2\n*\nATABLE   DC    X'70BBE2A1E0056B12'                                 DWM\nATABLEN  EQU   *-ATABLE                                            DWM\nATABNUM  EQU   ATABLEN/8                                           DWM\n*                                                                  DWM\nCDF001   DC    CL8'CDF001 '                                        DWM\nCDF002   DC    CL8'CDF002 '                                        DWM\nCDF003   DC    CL8'CDF003 '                                        DWM\nCDF004   DC    CL8'CDF004 '                                        DWM\n*                                                                  DWM\nSETMSG   DC    CL8'SETMSG  '                                       DWM\n*                                                                  DWM\n*\nVCOPY    DC    CL8'VCOPY '\nZUSER    DC    CL8'ZUSER '\nSPFMOVE  DC    CL8'MOVE   '\nCONSNAME DC    CL8'CONSOLE'                                        DWM\nCONCMD   DC    C'CON '                                             DWM\n         TITLE 'WORKING STORAGE AREAS'\n*                                                                  DWM\n*   WORKING STORAGE DSECT                                          DWM\n*                                                                  DWM\nCDFWORK  DSECT                                                     DWM\nCDFWT    DS    CL4                                                 DWM\nSAVEAREA DS    18F                                                 DWM\n*                                                                  DWM\nWORK     DS    D                                                   DWM\nSCRATCH  DS    D                   SCRATCH AREA FOR CHAR. MANIP    DWM\nISPARMS  DS    10F            PARM LIST FOR ISPLINK                DWM\nISPLINK  DS    F              ISPLINK ADDRESS                      DWM\nUCMTAB   DS    36F            UCM TABLE                            DWM\nUCMTABE  EQU   *              UCM TABLE END                        DWM\nOLDCONS  DS    F                   PREVIOUS CONSOLE NUMBER         DWM\nCONSOLE  DS    F                   CONSOLE TO BE LOOKED AT         DWM\nSIBPTR   DS    F                   PRT TO SCREEN IMAGE BUFFER      DWM\nCONSASID DS    F                   'CONSOLE' ASID FOR CMS          DWM\nNUMUCMS  DS    H              NUMBER OF UCMS                       DWM\nOUTLEN   DS    H                  CONSOLE LINE IMAGE LENGTH        DWM\nOUTCLEN  DS    H                  INCORE LINE LENGTH               DWM\nOUTNUM   DS    H                  NUMBER OF LINES FOR CONSOLE      DWM\nLASTLINE DS    CL79               OPERATORS COMMAND INPUT LINE     DWM\nTITLE    DS    0CL1               CONSOLE TITLE                    DWM\nTITLEC1  DS    CL9                ' CONSOLE='                      DWM\nCONNUM   DS    CL2                CONSOLE NUMBER                   DWM\nTITLEC2  DS    CL6                ' AUTH='                         DWM\nSYS      DS    CL3                SYS  AUTHORIZATION               DWM\n         DS    CL1                                                 DWM\nIO       DS    CL3                I/O  AUTHORIZATION               DWM\n         DS    CL1                                                 DWM\nCONS     DS    CL4                CONS AUTHORIZATION               DWM\n         DS    CL1                                                 DWM\nMASTER   DS    CL6                MASTER CONSOLE                   DWM\nTITLEC3  DS    CL6                ' ADDR='                         DWM\nUNIT     DS    CL3                UNIT ADDR OF CONSOLE             DWM\n         DS    CL1                                                 DWM\nTITLEL   EQU   *-TITLE                                             DWM\nTITLEB   EQU   (L'TABAREA-TITLEL)/2                                DWM\n*                                                                  DWM\n*     THE ISP TABLE FLAGS INDICATE NO ACTIVE TABLE (0), OR ONE EXISTSM\nATABFL   DS    XL1     DO I HAVE A CURRENT \"DISPLAY ACTIVE\" TABLE  DWM\nFLAG1    DS    XL1     GENERAL PURPOSE FLAG                        DWM\nCONOTACT EQU   X'80'   CONSOLE NOT ACTIVE FLAG                     DWM\nBUFSHORT EQU   X'40'   BUFFER TOO SHORT CONDITION                  DWM\n*                                                                  DWM\nTABAREA  DS    CL79' '                                             DWM\n*                                                                  DWM\nSELCODE  DS    CL3            LINE SELECTION CODE                  DWM\nCMDPARM  DS    H                                                   DWM\nCMDRESV  DS    H                                                   DWM\nCMDLINE  DS    CL51        COMMAND SVC 34 INPUT                    DWM\nCMDLEN   EQU   *-CMDPARM                                           DWM\nUSERID   DS    CL8                                                 DWM\nAWORK    DS    CL8                                                 DWM\n*---------------------------------------------------------------------*\n*                                                                  DWM*\n*               DISPLAY SCREEN - IMAGE BUFFER SECTION              DWM*\n*                                                                  DWM*\n*---------------------------------------------------------------------*\nBUFS     DS    CL4                                                 DWM\nBUF      DS    35CL80             OPERATORS SCREEN BUFFER          DWM\nBUFLEN   EQU   *-BUF              SCREEN BUFFER LENGTH             DWM\nBUFE     DS    CL4                                                 DWM\n*                                                                  DWM\n*                                                                  DWM\n*                                                                  DWM\nWORKLEN  EQU   *-CDFWORK                                           DWM\n         EJECT\n         PRINT NOGEN\n         TITLE '*** COMMUNICATION VECTOR TABLE ***'                GMM\n         CVT   DSECT=YES                                           GMM\n         TITLE '*** ADDRESS SPACE VECTOR TABLE ***'                DWM\n         IHAASVT DSECT=YES                                         DWM\n         TITLE '*** ADDRESS SPACE CONTROL BLOCK ***'               JL1\n         IHAASCB DSECT=YES                                         JL1\n         TITLE '*** RDCM DSECT ***'                                GMM\nIEERDCM  DSECT ,                                                   GMM\n         IEECRDCM                                                  GMM\n         TITLE '*** TDCM DSECT ***'                                GMM\nIEETDCM  DSECT ,                                                   GMM\n         IEECDCM                                                   GMM\n         TITLE '*** MULTIPLE CONSOLE SUPPORT (MCS) UCM PREFIX ***' GMM\n         IEECUCM FORMAT=NEW\n         TITLE '*** UNIT CONTROL BLOCK ***'                        DWM\n         IEFUCBOB                                                  DWM\n         END\n/*\n//LKED1    EXEC PGM=HEWLF064,PARM=(XREF,LET,LIST,TERM),\n//            COND=(4,LT,ASM1),REGION=1024K\n//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)\n//SYSLMOD  DD   DISP=SHR,DSN=SYS1.TEST.LOAD(CDF)\n//SYSUT1   DD   DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))\n//SYSTERM  DD   SYSOUT=*\n//SYSPRINT DD   SYSOUT=*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CDF$": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\r\\x00\\r\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "FILE130"}, "text": "        CONSOLE DISPLAY FACILITY (CDF) INSTALLATION (MVS SP 1.3)\n\n 1. COPY CDFDATAB AND CDFHELP INTO YOUR ISPPLIB.\n\n 2. SUBMIT AN ASSEMBLY OF CDF. IT DOES NOT NEED TO GO INTO ANY SPECIAL\n    LIBRARY.\n\n 3. MODIFY AN EXISTING SPF SCREEN TO INVOKE THE CDF PROGRAM. A SAMPLE\n    ISR@PRIM IS INCLUDED.\n\n 4. YOU NEED TO HAVE THE ISPF SVC 235 AS DOCUMENTED IN THE SPF MANUAL.\n    (A COPY IS INCLUDED HERE AS IGC0023E.)\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CDFDATAB": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x0f\\x00\\x0f\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "FILE130"}, "text": ")ATTR\n  @  TYPE(OUTPUT) INTENS(LOW)\n)BODY\n%-----------------  CONSOLE DISPLAY FACILITY (CDF) -----------------------------\n COMMAND ==>_JCMD                                               %SCROLL =>_AMT %\n)MODEL\n@Z\n)INIT\n .CURSOR=JCMD\n  &AMT=PAGE\n  &JCMD=&Z\n  &VARS='(CONLINE)'\n  .HELP=CDFHELP\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CDFHELP": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x07\\x00\\x07\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "FILE130"}, "text": "%------------------- CONSOLE DISPLAY FACILITY  (CDF)  --------------------------\n+\n+  CDF IS AN IN-HOUSE WRITTEN SYSTEM THAT PROVIDES A CONSOLE DISPLAY.\n\n   YOU CAN ENTER CONSOLE COMMANDS JUST AS THOUGH YOU WERE THE MASTER\n   CONSOLE OPERATOR, SO WATCH IT.\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CDF00": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x0b\\x00\\x0b\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 11, "newlines": 11, "modlines": 0, "user": "FILE130"}, "text": "CDF001   'AUTHORIZATION FAILED'              .ALARM=YES\n'You are not authorizied to use the Console Display Facility'\n\nCDF002   '\"CONSOLE\" not found'               .ALARM=YES\n'The console communications task, \"CONSOLE\", could not be found'\n\nCDF003   'Console not active'                .ALARM=YES\n'The requested console is not active'\n\nCDF004   'Buffer shortage'                   .ALARM=YES\n'The internal program buffer could not hold the requested console image'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IGC0023E": {"ttr": 1037, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\"\\x00\"\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 34, "newlines": 34, "modlines": 0, "user": "FILE130"}, "text": "//JOBCARD  JOB  (ACCOUNT),NAME\n//ASM     EXEC PGM=IEV90,REGION=2048K,\n//        PARM='OBJ,NODECK,TERM,RENT'\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//SYSUT1   DD  SPACE=(CYL,(5,5)),\n//             UNIT=SYSDA\n//SYSUT2   DD  SPACE=(CYL,(5,5)),\n//             UNIT=SYSDA\n//SYSUT3   DD  SPACE=(CYL,(5,5)),\n//             UNIT=SYSDA\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=A\n//SYSPUNCH DD  DUMMY\n//SYSLIN   DD   DSN=&&OBJSET,UNIT=SYSDA,SPACE=(80,(200,50)),\n//             DISP=(MOD,PASS)\n//SYSIN    DD  *\nIGC0023E CSECT\n         USING *,15\n         L     2,180(,4)  PICK UP CALLER'S JSCB\nAUTHOFF  NI    236(2),X'FE'  SET AUTH OFF\n         LTR   0,0           R0 EQ 0 REQUESTS AUTH OFF\n         BZR   14\nAUTHON   OI    236(2),X'01'  SET AUTH ON\n         BR    14\n         END\n/*\n//LKED     EXEC PGM=IEWL,PARM=(XREF,LET,LIST,NCAL,RENT,REFR),\n//             COND=(8,LT,ASM),REGION=1024K\n//SYSLIN   DD   DSN=&&OBJSET,DISP=(OLD,DELETE)\n//SYSLMOD  DD   DSN=SYS1.LPALIB(IGC0023E),DISP=SHR\n//SYSUT1   DD   DSN=&&SYSUT1,UNIT=VIO,SPACE=(1024,(50,20))\n//SYSTERM  DD   SYSOUT=*\n//SYSPRINT DD   SYSOUT=*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INFOMGT": {"ttr": 1039, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x15\\x00\\x15\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "FILE130"}, "text": "PROC 0\nCONTROL MAIN\nIF &DEBUG EQ DEBUG THEN CONTROL CON SYM MSG NOPROMPT LIST\n                   ELSE CONTROL NOCON NOSYM NOMSG NOPROMPT NOLIST\nISPEXEC VGET (YSRC YSESS YCLASS) PROFILE\nSET STATE = 1\nISPEXEC DISPLAY PANEL(INFOMGTP)\nIF &LASTCC GE 8 THEN SET STATE = 0\nDO WHILE(&STATE = 1)\n  IF &YSRC NE THEN SET DS = SRC(&YSRC)\n  ELSE SET DS =\n  IF &YCLASS NE THEN SET EC = CLASS(&YCLASS)\n  ELSE SET EC =\n  IF &YSESS NE THEN SET SS = SESS(&YSESS)\n  ELSE SET SS =\n  ISPEXEC SELECT PGM(BLGINIT) PARM(&DS &EC &SS)\n  ISPEXEC DISPLAY PANEL(YINFOMGT)\n  IF &LASTCC GE 8 THEN SET STATE = 0\nEND\nISPEXEC VPUT (YSRC YSESS YCLASS) PROFILE\nEXIT CODE(0)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INFOMGTP": {"ttr": 1041, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x11\\x00\\x11\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "FILE130"}, "text": "%-------------------------  INFORMATION/MANAGEMENT  ----------------------------\n%COMMAND ===>_ZCMD                                                             +\n+\n+   SRC EXECUTION NAME  %===>_YSRC    +\n+\n+   PRIVILEGE CLASS NAME%===>_YCLASS  +\n+\n+   SESSION PARAMETERS  %===>_Z +\n+\n)INIT\n  .CURSOR = YSRC\n  .ZVARS = '(YSESS)'\n)PROC\n  VER (&YSRC,NAME,MSG=IN000)\n  VER (&YCLASS,NAME,MSG=IN001)\n  VER (&YSESS,NUM)\n)END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IN00": {"ttr": 1043, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x05\\x00\\x05\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 5, "newlines": 5, "modlines": 0, "user": "FILE130"}, "text": "IN000     'INVALID SRC NAME        ' .HELP=ZINFMGT4 .ALARM=YES\n'SRC NAMES MUST FOLLOW THE RULES OF MEMBER NAMES'\n\nIN001     'INVALID PRIVILEGE CLASS ' .HELP=ZINFMGT5 .ALARM=YES\n'PRIVILEGE CLASS NAMES MUST FOLLOW THE RULES OF MEMBER NAMES'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ISR@PRIM": {"ttr": 1045, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00.\\x00.\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 46, "newlines": 46, "modlines": 0, "user": "FILE130"}, "text": "%-----------------------  ISPF/PDF PRIMARY OPTION MENU  ------------------------\n%OPTION  ===>_ZCMD                                                             +\n%                                                           +USERID   - &ZUSER\n%   0 +ISPF PARMS  - Specify terminal and user parameters   +TIME     - &ZTIME\n%   1 +BROWSE      - Display source data or output listings +TERMINAL - &ZTERM\n%   2 +EDIT        - Create or change source data           +PF KEYS  - &ZKEYS\n%   3 +UTILITIES   - Perform utility functions\n%   4 +FOREGROUND  - Invoke language processors in foreground\n%   5 +BATCH       - Submit job for language processing\n%   6 +COMMAND     - Enter TSO command or CLIST\n%   7 +DIALOG TEST - Perform dialog testing\n%   8 +LM UTILITIES- Perform library management utility functions\n%   C +CHANGES     - Display summary of changes for this release\n%   I +INFO/MGT    - Information/Management and Information/MVS systems\n%   O +OPER CON    - Operator Console Display Facility\n%   T +TUTORIAL    - Display information about ISPF/PDF\n%   X +EXIT        - Terminate ISPF using log and list defaults\n%\n+Enter%END+command to terminate ISPF.\n%\n)INIT\n  .HELP = ISR00003\n  &ZPRIM = YES        /* ALWAYS A PRIMARY OPTION MENU      */\n  &ZHTOP = ISR00003   /* TUTORIAL TABLE OF CONTENTS        */\n  &ZHINDEX = ISR91000 /* TUTORIAL INDEX - 1ST PAGE         */\n  VPUT (ZHTOP,ZHINDEX) PROFILE\n)PROC\n  &ZSEL = TRANS( TRUNC (&ZCMD,'.')\n                0,'PANEL(ISPOPTA)'\n                1,'PGM(ISRBRO) PARM(ISRBRO01)'\n                2,'PGM(ISREDIT) PARM(P,ISREDM01)'\n                3,'PANEL(ISRUTIL)'\n                4,'PANEL(ISRFPA)'\n                5,'PGM(ISRJB1) PARM(ISRJPA) NOCHECK'\n                6,'PGM(ISRPTC)'\n                7,'PGM(ISRYXDR) NOCHECK'\n                8,'PANEL(ISRLPRIM)'\n                C,'PGM(ISPTUTOR) PARM(ISR00005)'\n                I,'CMD(%INFOMGT)'\n                O,'PGM(CDF)'\n                T,'PGM(ISPTUTOR) PARM(ISR00000)'\n              ' ',' '\n                X,'EXIT'\n                *,'?' )\n  &ZTRAIL = .TRAIL\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PSCANZAP": {"ttr": 1047, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x86\\x17_\\x00\\x86\\x17_\\x12\\x00\\x00\\x1a\\x00\\x1a\\x00\\x00\\xc6\\xc9\\xd3\\xc5\\xf1\\xf3\\xf0@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1986-06-24T00:00:00", "modifydate": "1986-06-24T12:00:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "FILE130"}, "text": "//JOBCARD  JOB  (ACCOUNT),NAME\n//*\n//*  THIS ZAP ELIMINATES A SCAN098 MESSAGE FROM AMDPSCAN WHEN RUNNING\n//*  AT THE JBB2133 LEVEL.  IT SEEMS THAT AMDPSCAN WAS SEARCHING FOR\n//*  THE \"PRINTER\" DEB CONTROL BLOCK BY FOLLOWING THE DEB CHAIN FOR\n//*  THE TCB ABOVE THE CURRENT TCB.  THIS ZAP ALTERS THE SEARCH TO\n//*  FOLLOW THE DCB CHAIN OF THE CURRENT TCB TO FIND THE \"PRINTER\"\n//*  DEB CONTROL BLOCK.\n//*\n//ZAP1     EXEC PGM=AMASPZAP,PARM=IGNIDRFULL\n//SYSPRINT DD   SYSOUT=*\n//SYSLIB   DD   DISP=SHR,DSN=SYS1.LPALIB    <-- AMDPSCAN LIBRARY\n//SYSIN    DD   *\nNAME AMDPSCAN AMDPSCAN\nVER 000498 5820,2084\n/*\n//*\n//ZAP2     EXEC PGM=AMASPZAP,PARM=IGNIDRFULL,COND=(4,LT)\n//SYSPRINT DD   SYSOUT=*\n//SYSLIB   DD   DISP=SHR,DSN=SYS1.LPALIB    <-- AMDPSCAN LIBRARY\n//SYSIN    DD   *\nNAME AMDPSCAN AMDPSCAN\nIDRDATA MXA2130\nREP 000498 4700,0000\n/*\n//\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT130/FILE130.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT130", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}