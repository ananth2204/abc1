{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012651000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 411502, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE722.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 411502, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE722.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x08\\x06'", "DS1TRBAL": "b'\\x93\\x06'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04\\xf9\\x00\\x0b\\x04\\xfa\\x00\\x04\\x00\\t'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04E\\x00\\x00\\x01\\x05\\x19\\x1f\\x01\\x05\\x19\\x1f\\tD\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf9@@@'", "ispf": {"version": "04.69", "flags": 0, "createdate": "2005-07-10T00:00:00", "modifydate": "2005-07-10T09:44:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-469"}, "text": "REGULAR CBT TAPE - VERSION 469    FILE:  722\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT469.FILE722\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 11 MEMBERS COUNTED; CUMULATIVE SIZE IS 3,789 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   07/10/05    09:44:57    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$$COSHU": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x004\\x01\\x05\\x19\\x1f\\x01\\x05\\x19\\x1f\\tD\\x00#\\x00!\\x00\\x00\\xe9\\xe8\\xf0\\xf6@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2005-07-10T00:00:00", "modifydate": "2005-07-10T09:44:34", "lines": 35, "newlines": 33, "modlines": 0, "user": "ZY06"}, "text": "  Copyright (c) 2005 by Shirley Huhtanen\n\n  FileWiz    (c) 2005\n\n  Renaissance Data Systems Inc.\n  Shirley Huhtanen\n  3325 Lorna Rd 2-325\n  Birmingham, AL  35216\n  (205) 999-9012\n  email: shirleywho@aol.com\n\nThis material is provided as-is.  It works on the z/OS system it\nwas developed on, but may not work on all systems.  No warranty\nis made to the accuracy of the programs or related material and\nno responsibility is assumed for any modifications made to these\napplications by a third party.  The documentation included is\nintended to aid in setting up the systems.  Validating the\nresults is the responsibility of the party using this material.\n\nThese programs are distributed on the CBT Tape with the proviso\nthat they may be freely distributed to any other party on\ncondition that no inducement beyond reasonable handling costs is\noffered or accepted by either side for such distribution or your\nnormal consulting costs for installation and support.\n\nThe use of any part of these programs or copybooks in another\nprogram or application does not make that program or application\nfall under this license.\n\nModified versions of these programs and systems should *NOT*\nbe distributed by a third party.  It will be chaos if\nmultiple versions of these programs start floating around.\nPlease report suggestions for changes to the author.\n\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$$FILEW": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x002\\x01\\x05\\x12\\x0f\\x01\\x05\\x17\\x9f\\x13I\\x00z\\x00\\x01\\x00\\x00\\xe9\\xe8\\xf0\\xf6@@@@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2005-04-30T00:00:00", "modifydate": "2005-06-28T13:49:32", "lines": 122, "newlines": 1, "modlines": 0, "user": "ZY06"}, "text": " FILEWIZ COMPARE\n\n (C) 2005 RENAISSANCE DATA SYSTEMS INC.\n          3325 LORNA ROAD 2-325\n          BIRMINGHAM, AL  35216\n          (205) 999-9012\n          SHIRLEY HUHTANEN\n          SHIRLEYWHO@AOL.COM\n\n\n  THIS LIBRARY IS A SELF-CONTAINED UNIT AND CONTAINS ALL OF THE\n  ELEMENTS NEEDED TO SET-UP THE FILE COMPARE PROGRAM AND JOBS.\n\n DESCRIPTION\n\n   FILEWIZ IS A PROGRAM (JXCU001) THAT COMPARES 2 FILES.\n\n   BOTH FILES ARE COPIED TO VB 12154 DATASETS SO THE COMPARE PROGRAM\n   DOES NOT DO ANY SPECIAL ALLOCATIONS.  IF DATASETS WITH RECORDS\n   LONGER THAN 12154 NEED TO BE COPIED, THE COMPARE PROGRAM AND JCL\n   SHOULD BE MODIFIED ACCORDINGLY.\n\n   DIFFERENCES ARE SHOWN IN A DIFFERENCE REPORT.\n   DIFFERENCES ARE ALSO WRITTEN TO OUTPUT FILES THAT CAN BE\n   USED FOR FURTHER ANALYSIS.\n\n   THIS FILE COMPARE CAN'T COMPARE TEXT FILES LIKE PROGRAM SOURCE,\n   SO IT IS BETTER TO USE SUPERC (IBM) OR ANOTHER COMPARE UTILITY\n   TO COMPARE TEXT FILES.\n\n   PROC JXPRU001 HAS STEPS TO COPY BOTH DATASETS TO THE VB 12154 FORMAT\n   AND HAS SORTS FOR BOTH FILES.  THE FILE COMPARE REQUIRES THAT THE\n   2 FILES BE SORTED ON A COMMON KEY, SO THE SORTS ARE INCLUDED IN THE\n   PROC.  THIS MAY SEEM LIKE UNNECESSARY PROCESSING IF THE FILES TO BE\n   COMPARED ARE ALREADY SORTED (LIKE VSAM KSDS FILES) BUT THIS ENDS UP\n   SIMPLIFYING THE PROCESS WHEN COMPARING MANY DIFFERENT FILES.\n\n   THE RECORDS THAT DO NOT MATCH ARE WRITTEN TO OUTPUT FILES.  THESE\n   CAN BE USED AS INPUT FILES TO THIS JOB USING DIFFERENT SORTS AND\n   MASKS THAN THE FIRST RUN.  IN THIS WAY, A COMPLEX COMPARE CAN BE\n   BROKEN DOWN.  THE FIRST PASS WOULD BE THE MOST STRICT AND\n   WOULD NOT USE ANY MASKS.  THE SECOND PASS MIGHT USE A COUPLE MASKS.\n\n   TRAILING SPACES AND LOW-VALUES ARE NOT CONSIDERED IN THE COMPARE.\n   IF THESE NEED TO BE COMPARED, CHANGE THE SORTS TO PUT AN 'X' OR\n   OTHER NON-BLANK CHARACTER AT THE END OF THE FILE OR 1 POSITION\n   AFTER THE FILE.    OUTREC FIELDS=(1:1:4,5:5,200,205:C'X')\n\n   THE SORTS CAN BE USED TO BREAK DOWN A COMPLEX COMPARE.  IF A DATASET\n   HAS MULTIPLE RECORD TYPES WITH DIFFERENT RECORD LAYOUTS, EACH\n   RECORD TYPE CAN BE COMPARED SEPARATELY USING INCLUDE OR OMIT.\n   THE SORTS CAN ALSO BE USED TO REFORMAT ONE OR BOTH FILES TO A COMMON\n   RECORD LAYOUT.\n\n   THERE ARE 3 KINDS OF MASKS THAT CAN BE USED.\n     MASK      COMPLETELY MASKS THE DATA FOR THE OFFSET AND LENGTH\n                  SPECIFIED\n     SIGNMASK  ALLOWS UNSIGNED NUMERIC DATA TO MATCH POSITIVE SIGNED\n                  DATA FOR PACKED DECIMAL AND ZONED DECIMAL FIELDS\n     NULLMASK  ALLOWS SPACES TO MATCH TO LOW-VALUES FOR FILLER AREAS\n\n   A REALLY NICE FEATURE IS THE COMPARE SUMMARY AT THE END OF THE\n   DIFFERENCE REPORT.  YOU CAN TELL AT A GLANCE WHICH FIELDS DID\n   NOT MATCH.  THIS SAVES YOU FROM HAVING TO BROWSE THROUGH EVERY\n   DIFFERENCE IN THE REPORT TO SEE IF THE SAME FIELD WAS\n   RESPONSIBLE FOR ALL THE DIFFERENCES.\n\n\n INVENTORY\n\n   $$$DOC     DOC       INDEX MEMBER\n   $$$FILEW   DOC       INSTALL INSTRUCTIONS\n   CMFILE     JCL       JCL TO EXECUTE FILE COMPARE\n   COB3CMP    JCL       COMPILE JCL FOR PROGRAM JXCU001\n   HEXFL1     FILE      TEST FILE FOR COMPARE\n   HEXFL2     FILE      TEST FILE FOR COMPARE\n   JXCU001    PROGRAM   THE FILE COMPARE PROGRAM\n   JXPRU001   PROC      THE PROC EXECUTED BY JCL MEMBER CMFILE\n   JXREPRO1   CARD MBR  A CARD MEMBER FOR THE IDCAMS STEPS\n\n\n INSTALL PROCEDURE\n\n 1.  MOVE JXCU001 TO PROGRAM SOURCE LIBRARY\n     FIND WORK FIELDS THAT START WITH INST- AND SET THE VALUES.\n       1. MAXIMUM LINES PER PAGE\n            05  INST-LINES-PER-PAGE     PIC S9(3) COMP-3 VALUE +59.\n\n       2. SET TO 'Y' IF RUNNING LE LANGUAGE ENVIRONMENT\n            05  INST-CEE-SW                PIC X(01) VALUE 'Y'.\n                88  INST-CEE                         VALUE 'Y'.\n       3. SET TO 'Y' IF RUNNING IN MICROFOCUS COBOL\n            05  INST-MF-COBOL-SW           PIC X(01) VALUE 'N'.\n                88  INST-MF-COBOL                    VALUE 'Y'.\n       4. SET TO 'E' IF EBCDIC CHARACTERS\n          SET TO 'A' IF ASCII  CHARACTERS\n            05  INST-CODE-TABLE            PIC X(01) VALUE 'E'.\n                88  INST-EBCDIC                      VALUE 'E'.\n                88  INST-ASCII                       VALUE 'A'.\n\n 2.  COMPILE PROGRAM JXCU001\n       USE MEMBER COB3CMP OR COMPILE INTO SOURCE MANAGEMENT SYSTEM USING\n           A COBOL 370 COMPILER.  CALLED PROGRAMS ARE DYNAMIC.\n\n\n 3.  MOVE JXPRU001 TO PROC LIBRARY\n       CHANGE SYMBOLIC DEFAULTS\n              CNTRL=  TO POINT TO CARD LIBRARY FOR IDCAMS REPRO\n              RPT=    FOR OUTPUT REPORT CLASS\n              SOUT=   FOR SYSOUT CLASS\n              SDUMP=  FOR DUMP CLASS\n       ADD STEPLIB IF NECESSARY TO STEP080 FOR PROGRAM JXCU001\n\n 4.  MOVE JXREPRO1 TO CARD LIBRARY\n\n 5.  SET UP COMPARE JCL MEMBER CMFILE\n       CHANGE JOBCARD AND ADD A JOBLIB IF NECESSARY\n       FOLLOW SETUP INSTRUCTIONS IN THE JCL\n       MEMBERS HEXFL1 AND HEXFL2 CAN BE USED TO TEST THE JOB.\n\n\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE722": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04E\\x00\\x00\\x01\\x05\\x19\\x1f\\x01\\x05\\x19\\x1f\\tD\\x00o\\x00o\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf6\\xf9@@@'", "ispf": {"version": "04.69", "flags": 0, "createdate": "2005-07-10T00:00:00", "modifydate": "2005-07-10T09:44:00", "lines": 111, "newlines": 111, "modlines": 0, "user": "CBT-469"}, "text": "//***FILE 722 is from Shirley Huhtanen and contains the FileWiz     *   FILE 722\n//*           package which is a sophisticated program that         *   FILE 722\n//*           compares 2 files.  More detailed description of       *   FILE 722\n//*           the FileWiz package may be found below.               *   FILE 722\n//*                                                                 *   FILE 722\n//*  FileWiz    (c) 2005                                            *   FILE 722\n//*                                                                 *   FILE 722\n//*  Renaissance Data Systems Inc.                                  *   FILE 722\n//*  Shirley Huhtanen                                               *   FILE 722\n//*  3325 Lorna Rd 2-325                                            *   FILE 722\n//*  Birmingham, AL  35216                                          *   FILE 722\n//*  (205) 999-9012                                                 *   FILE 722\n//*  email: shirleywho@aol.com                                      *   FILE 722\n//*                                                                 *   FILE 722\n//*  This library is a self-contained unit and should contain all   *   FILE 722\n//*  of the elements needed to set up the File Compare program.     *   FILE 722\n//*                                                                 *   FILE 722\n//*  Description                                                    *   FILE 722\n//*                                                                 *   FILE 722\n//*   FileWiz is a program (JXCU001) that compares 2 files.         *   FILE 722\n//*                                                                 *   FILE 722\n//*   What's special about it?                                      *   FILE 722\n//*     1.  It's free.                                              *   FILE 722\n//*     2.  The source is provided.                                 *   FILE 722\n//*     3.  It has some unique Masking features.                    *   FILE 722\n//*     4.  The positional summary of differences at the end        *   FILE 722\n//*         saves a LOT of time.                                    *   FILE 722\n//*     5.  All non-matching records are written out for further    *   FILE 722\n//*         analysis.                                               *   FILE 722\n//*                                                                 *   FILE 722\n//*   A key must be identified that will match up the records       *   FILE 722\n//*   in both files.  The key does not have to be contiguous        *   FILE 722\n//*   but it does have to be ascending.                             *   FILE 722\n//*                                                                 *   FILE 722\n//*   Differences are shown in a difference report.                 *   FILE 722\n//*   Differences are also written to output files that can be      *   FILE 722\n//*   used for further analysis.                                    *   FILE 722\n//*                                                                 *   FILE 722\n//*   This file compare can't compare text files like program       *   FILE 722\n//*   source, so it is better to use Superc (IBM) or another        *   FILE 722\n//*   compare utility to compare text files.                        *   FILE 722\n//*                                                                 *   FILE 722\n//*   This file compare is written in Cobol.  It isn't as fast      *   FILE 722\n//*   as file compares written in assembler, but the Cobol          *   FILE 722\n//*   optimizer does a pretty good job of creating a fast product.  *   FILE 722\n//*                                                                 *   FILE 722\n//*   There are 3 kinds of masks that can be used.                  *   FILE 722\n//*                                                                 *   FILE 722\n//*     MASK      Completely masks the data for the offset          *   FILE 722\n//*               and length specified                              *   FILE 722\n//*     Signmask  Allows unsigned numeric data to                   *   FILE 722\n//*               match positive signed data for packed decimal     *   FILE 722\n//*               and zoned decimal fields                          *   FILE 722\n//*     Nullmask  Allows spaces to match to low-values              *   FILE 722\n//*               for filler areas                                  *   FILE 722\n//*                                                                 *   FILE 722\n//*   A really nice feature is the compare summary at the end of    *   FILE 722\n//*   the difference report.  You can tell at a glance which fields *   FILE 722\n//*   did not match.  This saves you from having to browse through  *   FILE 722\n//*   every difference in the report to see if the same field was   *   FILE 722\n//*   responsible for all the differences.                          *   FILE 722\n//*                                                                 *   FILE 722\n//* History of this Compare Program.                                *   FILE 722\n//*                                                                 *   FILE 722\n//*   During my consulting years, I worked at several companies     *   FILE 722\n//*   that had not purchased a compare product.  After writing a    *   FILE 722\n//*   different compare at each company for my own projects, I      *   FILE 722\n//*   realized that I couldn't count on having a compare product    *   FILE 722\n//*   available, so I wrote this FileWiz program and have used it   *   FILE 722\n//*   and modified it to fit my needs.                              *   FILE 722\n//*                                                                 *   FILE 722\n//*   Since this is not intended to be a \"commercial\" product,      *   FILE 722\n//*   (make money) there are a few cosmetic glitches here and       *   FILE 722\n//*   there, where page breaking isn't completely clean.  The       *   FILE 722\n//*   compares themselves are completely accurate.  My coding       *   FILE 722\n//*   standards have changed over the years and I don't consider    *   FILE 722\n//*   this program up to my current standards.  If I ever get       *   FILE 722\n//*   the time (yeah right), I'll clean it up.                      *   FILE 722\n//*                                                                 *   FILE 722\n//*   Disclaimers                                                   *   FILE 722\n//*                                                                 *   FILE 722\n//*   This material is provided as-is.  It works on the z/OS        *   FILE 722\n//*   system it was developed on, but may not work on all systems.  *   FILE 722\n//*   No warranty is made to the accuracy of the programs or        *   FILE 722\n//*   related material and no responsibility is assumed for any     *   FILE 722\n//*   modifications made to these applications by a third party.    *   FILE 722\n//*   The documentation included is intended to aid in setting up   *   FILE 722\n//*   the systems.  Validating the results is the responsibility    *   FILE 722\n//*   of the party using this material.                             *   FILE 722\n//*                                                                 *   FILE 722\n//*   These programs are distributed on the CBT Tape with the       *   FILE 722\n//*   proviso that they may be freely distributed to any other      *   FILE 722\n//*   party on condition that no inducement beyond reasonable       *   FILE 722\n//*   handling costs is offered or accepted by either side for      *   FILE 722\n//*   such distribution or your normal consulting costs for         *   FILE 722\n//*   installation and support.                                     *   FILE 722\n//*                                                                 *   FILE 722\n//*   The use of any part of these programs or copybooks in         *   FILE 722\n//*   another program or application does not make that program     *   FILE 722\n//*   or application fall under this license.                       *   FILE 722\n//*                                                                 *   FILE 722\n//*   Modified versions of these programs and systems should *NOT*  *   FILE 722\n//*   be distributed by a third party.  It will be chaos if         *   FILE 722\n//*   multiple versions of this program starts floating around.     *   FILE 722\n//*   If you have ideas for revision, please communicate them       *   FILE 722\n//*   to the author.                                                *   FILE 722\n//*                                                                 *   FILE 722\n//*   This documentation has not had a work-out by being used to    *   FILE 722\n//*   install the system on another machine.  Please contact me if  *   FILE 722\n//*   you have any questions regarding any part of this product.    *   FILE 722\n//*                                                                 *   FILE 722\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CMFILE": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x1c\\x007\\x01\\x00\\x00\\x7f\\x01\\x05\\x17\\x9f\\x13I\\x00\\x83\\x00D\\x00\\x00\\xe9\\xe8\\xf0\\xf6@@@@@@'", "ispf": {"version": "01.28", "flags": 0, "createdate": "2000-01-07T00:00:00", "modifydate": "2005-06-28T13:49:37", "lines": 131, "newlines": 68, "modlines": 0, "user": "ZY06"}, "text": "//ZYXXCMPR JOB 0,'COMPARE FILES',CLASS=U,MSGCLASS=X,\n//         REGION=2M,NOTIFY=&SYSUID\n/*JOBPARM  S=SYSB\n//*\n//PROCS    JCLLIB ORDER=(ZY06.FILEWIZ,ZY06.REFWIZ.JCL)\n//JOBLIB   DD DSN=ZY06.REFWIZ.LOADLIB,DISP=SHR\n//**********************************************************************\n//*    FILEWIZ COMPARE    REL 6.0 VER 01\n//*    DISTRIBUTED BY RENAISSANCE DATA SYSTEMS INC\n//*\n//*   COMPARE 2 FILES\n//*\n//**********************************************************************\n//* THIS IS WHAT IS DONE IN THE PROC\n//*   STEP 1 COPY BOTH FILES TO VB 12154\n//*   STEP 2 SORT EACH FILE ON KEY LENGTH TO BE MATCHED\n//*   STEP 3 COMPARE FILES USING KEY TO MATCH RECORDS.\n//*   STEP 4 DELETE FILES FROM STEP 1 AND 2\n//*\n//**********************************************************************\n//*  SET UP THE JOB\n//*\n//*  1.  CHANGE SYMBOLIC FNODE - FILE PREFIX FOR OUTPUT FILES\n//*  2.  CHANGE SYMBOLIC LNODE - FILE QUALIFIER FOR OUTPUT FILES\n//*  3.  CHANGE SYMBOLIC FILE1 - ONE OF THE FILES TO COMPARE\n//*  4.  CHANGE SYMBOLIC FILE2 - THE OTHER FILE TO COMPARE\n//*  5.  CHANGE THE SORTS.  ADD 4 TO OFFSETS BECAUSE THE FILES\n//*        ARE VB AT THIS POINT.\n//*  6.  CHANGE THE CONTROL CARDS FOR THE COMPARE\n//*        THE KEY FIELDS MUST MATCH THE SORT FIELDS (LESS 4)\n//*\n//**********************************************************************\n//*  4 OUTPUT FILES ARE CREATED.\n//*     DIFF1 HAS RECORDS FROM FILE 1 THAT MATCH ON KEY FROM FILE 2,\n//*              BUT ENTIRE RECORD DOES NOT MATCH THE FILE 2 RECORD.\n//*     DIFF2 HAS RECORDS FROM FILE 2 THAT MATCH ON KEY FROM FILE 1,\n//*              BUT ENTIRE RECORD DOES NOT MATCH THE FILE 1 RECORD.\n//*     INS1  HAS RECORDS IN FILE 1 THAT DO NOT MATCH KEY FROM FILE 2.\n//*     INS2  HAS RECORDS IN FILE 2 THAT DO NOT MATCH KEY FROM FILE 1.\n//**********************************************************************\n//CMPRFILE EXEC JXPRU001,\n//         FNODE='ZYXX.CMPR',           <== FIRST NODE OF OUTPUT FILES\n//         LNODE='XRCOPY',              <== MIDDLE NODE OF OUTPUT FILES\n//         FILE1='ZY06.FILEWIZ(HEXFL1)',\n//         FILE2='ZY06.FILEWIZ(HEXFL2)',\n//         RPT='X'\n//*\n//*  IF FILES ARE LARGE, CHANGE THE SYMBOLICS BELOW\n//*        SORTSP='(CYL,(50,25))',\n//*        UNIT=SYSDA,\n//*        UNITA='SYSDA,SPACE=(CYL,(50,25),RLSE)',  TEMP FILE ALLOC\n//*        UNITD='SYSDA,SPACE=(CYL,(50,25),RLSE)',  DIFF FILE ALLOC\n//*        UNITI='SYSDA,SPACE=(CYL,(50,25),RLSE)'   INS  FILE ALLOC\n//*\n//*  IF YOU USE THE FOLLOWING OVERRIDE, THE TEMPORARY FILES WILL NOT\n//*  BE DELETED SO YOU CAN RESTART THE JOB IN THE MIDDLE.  THIS IS\n//*  HANDY IF YOU HAVE YOUR SORTS CORRECT, BUT YOU ARE FINE-TUNING THE\n//*  MASKS AND THE FILES ARE VERY LARGE.\n//*    COND.STEP090=(99,NE)\n//*\n//**********************************************************************\n//* THE SORT KEYS SHOULD BE THE SAME IN STEP050 AND STEP060\n//* THE SORTED FILES ARE VARIABLE LENGTH\n//*    BE SURE TO ADD 4 TO THE OFFSETS - THESE ARE NOW VB FILES\n//* YOU CAN FILTER THE RECORDS BY INCLUDING OR OMITTING RECORDS\n//**********************************************************************\n//STEP050.SYSIN DD *\n  SORT FIELDS=(5,8,CH,A,57,8,CH,A)\n* OMIT COND=(158,8,CH,EQ,C'JOBLIB  ',OR,185,8,CH,EQ,C'CEEDUMP')\n//**********************************************************************\n//STEP060.SYSIN DD *\n  SORT FIELDS=(5,8,CH,A,57,8,CH,A)\n* OMIT COND=(158,8,CH,EQ,C'JOBLIB  ',OR,185,8,CH,EQ,C'CEEDUMP')\n//**********************************************************************\n//STEP080.CARDIN  DD *\n*  COMPARE  RECORDS USING THESE PARAMETERS\n*  '*' IN FIRST POS INDICATES A COMMENT\n*  IT IS RECOMMENDED THAT YOU PUT COMMENTS ON YOUR KEYS AND MASKS.\n*     THIS MAKES IT EASIER TO REMEMBER WHAT YOU DID AND YOU CAN\n*     SET UP COMPARE JCL FOR EACH MASTER FILE YOU WORK WITH.\n*\n*  ANYTHING AFTER THE FIRST SPACE ON A LINE IS CONSIDERED A COMMENT\n*\n*  FILE CARDS WILL BE PRINTED IN THE SUMMARY REPORT\nFILE1=XXXX.FILEWIZ(HEXFL1)      PROD FILE\nFILE2=XXXX.FILEWIZ(HEXFL2)      TEST FILE\n*\n*  KEY CARDS MUST BE IN THE SAME ORDER AS THE SORTS\nKEY=1,8                     RECORD ID\nKEY=53,8                    ACCOUNT NBR\n*\n*  THE DIFFERENCES WILL BE PRINTED IN HEX OR CHARACTER FORMAT\n*RPT=CHAR                   SHOW DIFFERENCE REPORT IN CHARACTER FORMAT\nRPT=HEX                     SHOW DIFFERENCE REPORT IN HEX (3 LINES)\n*\nMAXDIFF=500                 MAX # DIFFERENCES TO PRINT\nMAXREAD=9999999             MAX INPUT RECS TO READ\n*MAXREAD=500                    EX:  STOP COMPARING AFTER 500 RECORDS\n*\n*  MASKS FOR COMPARING HEXFL1 AND HEXFL2\nMASK=23,5            LOCATION CODE\nSIGNMASK=21          ADJ CNT\nSIGNMASK=33          BALANCE\nSIGNMASK=39          DEPOSIT\nNULLMASK=65          FILLER\nNULLMASK=66          FILLER\nNULLMASK=67          FILLER\nNULLMASK=68          FILLER\nNULLMASK=69          FILLER\nNULLMASK=70          FILLER\n*\n*\n*\n*  THERE ARE 3 KINDS OF MASKS: MASK, SIGNMASK AND NULLMASK\nMASK=23,5                   MASK 5 BYTES STARTING IN POS 23\nSIGNMASK=21                 MASK SIGN - UNSIGNED VALUE = POSITIVE VALUE\n*                               EX:  X'7C' = X'7F'  ONLY IN POS 42\n*                               EX:  X'C1' = X'F1'\nNULLMASK=65                 MASK DEFAULT VALUES - SPACE = LOW-VALUES\nNULLMASK=66                 MASK DEFAULT VALUES - SPACE = LOW-VALUES\nNULLMASK=67                 MASK DEFAULT VALUES - SPACE = LOW-VALUES\nNULLMASK=68                 MASK DEFAULT VALUES - SPACE = LOW-VALUES\nNULLMASK=69                 MASK DEFAULT VALUES - SPACE = LOW-VALUES\nNULLMASK=70                 MASK DEFAULT VALUES - SPACE = LOW-VALUES\n*                               EX:  X'40' = X'00' ONLY IN POS 65 - 70\n*\n*  MASKS CAN BE COMMENTED OUT FOR REUSE IN FUTURE COMPARES\n*MASK=214,1                 EMP-IND\n*MASK=220,14                NAME\n*MASK=311,8                 BIRTH-DATE\n*MASK=1028,8                START-DATE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB3CMP": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00C\\x01\\x044\\x9f\\x01\\x05\\x17\\x9f\\x13I\\x00E\\x00M\\x00\\x00\\xe9\\xe8\\xf0\\xf6@@@@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2004-12-14T00:00:00", "modifydate": "2005-06-28T13:49:43", "lines": 69, "newlines": 77, "modlines": 0, "user": "ZY06"}, "text": "//ZY06CMPL JOB 0,'COMPILE',CLASS=C,MSGCLASS=X,NOTIFY=&SYSUID,\n//           REGION=2M\n/*JOBPARM S=SYSB\n//*\n//*********************************************************************\n//*    COMPILE PROGRAM JXCU001                                        *\n//*\n//*   MAKE THE FOLLOWING CHANGES\n//*    CHANGE JOBCARD\n//*    STEP0005   CHANGE STEPLIB FOR COMPILE STEP\n//*               SYSLIB CAN BE DUMMY. THERE ARE NO COPYBOOKS\n//*               CHANGE SYSIN TO POINT TO SOURCE LIBRARY\n//*    STEP0010   CHANGE STEPLIB FOR LINK STEP\n//*               CHANGE SYSLIB TO CEE LINK LIBRARY\n//*               CHANGE SYSLMOD TO OUTPUT LOAD LIBRARY\n//*********************************************************************\n//*    COMPILE\n//*    THE ONLY IMPORTANT COMPILE PARAMETER IS NOADV.  OTHERS CAN\n//*    BE CHANGED TO SITE STANDARDS\n//*********************************************************************\n//STEP0005 EXEC PGM=IGYCRCTL,\n//         PARM=(NOADV,APOST,BUF(31K),FSRT,F(W,W),LIB,MAP,\n//         NUMPROC(MIG),OBJ,OFF,OPT,RENT,NOSEQ,SZ(MAX),XREF(FULL))\n//STEPLIB  DD DSN=IGY.SIGYCOMP,DISP=SHR\n//*\n//SYSOUT   DD SYSOUT=*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT2   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT3   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT4   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT5   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT6   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSUT7   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//* COPYBOOK LIBRARIES\n//*YSLIB   DD DUMMY,BLKSIZE=80,DISP=SHR\n//SYSLIB   DD DSN=ZY06.REFWIZ.CPYBK,DISP=SHR\n//*\n//* OBJECT\n//SYSLIN   DD DSN=&&SYSLIN,\n//            DISP=(NEW,PASS,DELETE),\n//            UNIT=SYSDA,SPACE=(CYL,(2,1,),RLSE),\n//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=0)\n//* COMPILE LISTING\n//SYSPRINT DD SYSOUT=*\n//* COBOL SOURCE MEMBER\n//SYSIN    DD DSN=ZY06.FILEWIZ(JXCU001),\n//            DISP=SHR\n//*\n//*****************************************************************\n//*   LINK\n//*****************************************************************\n//STEP0010 EXEC PGM=HEWL,\n//         COND=(4,LT),\n//         PARM=('LIST,XREF,AMODE(31),RMODE(ANY),MAP')\n//*\n//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(1,1))\n//SYSPRINT DD SYSOUT=*\n//SYSOUT   DD SYSOUT=*\n//* LINKLIBS FOR CALLED MODULES\n//SYSLIB   DD DSN=CEE.SCEELKED,\n//            DISP=SHR\n//*  NEW LOAD\n//SYSLMOD  DD DSN=ZY06.REFWIZ.LOADLIB(JXCU001),\n//            DISP=SHR\n//SYSLIN   DD DSN=&&SYSLIN,\n//            DISP=(OLD,DELETE)\n//         DD *\n  NAME JXCU001(R)\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HEXFL1": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00P\\x01\\x044?\\x01\\x05\\x17\\x9f\\x13I\\x00\\x06\\x00\\x01\\x00\\x00\\xe9\\xe8\\xf0\\xf6@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2004-12-08T00:00:00", "modifydate": "2005-06-28T13:49:50", "lines": 6, "newlines": 1, "modlines": 0, "user": "ZY06"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "HEXFL2": {"ttr": 533, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00U\\x01\\x044?\\x01\\x05\\x17\\x9f\\x13I\\x00\\x06\\x00\\x04\\x00\\x00\\xe9\\xe8\\xf0\\xf6@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2004-12-08T00:00:00", "modifydate": "2005-06-28T13:49:55", "lines": 6, "newlines": 4, "modlines": 0, "user": "ZY06"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "JXCU001": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0f\\x007\\x01\\x03\\x15?\\x01\\x05\\x19\\x1f\\tA\\x0c\\x11\\x00\\x00\\x00\\x00\\xe9\\xe8\\xf0\\xf6@@@@@@'", "ispf": {"version": "01.15", "flags": 0, "createdate": "2003-06-02T00:00:00", "modifydate": "2005-07-10T09:41:37", "lines": 3089, "newlines": 0, "modlines": 0, "user": "ZY06"}, "text": "       PROCESS NOADV\n       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    JXCU001.\n      *AUTHOR.        RENAISSANCE DATA SYSTEMS INC\n      *DATE-WRITTEN.  12/12/96.\n      *****************************************************************\n      *                                                               *\n      *  (C) 2005 RENAISSANCE DATA SYSTEMS INC.                       *\n      *      ALL RIGHTS RESERVED.                                     *\n      *              FILEWIZ COMPARE VER 6.0                          *\n      *                                                               *\n      *****************************************************************\n      *\n      *JX* THIS PROGRAM COMPARES 2 FILES.\n      *JX* IT PRINTS A REPORT OF DIFFERENCES FOUND AND WRITES OUT THE\n      *JX* RECORDS THAT WERE DIFFERENT OR INSERTED INTO FILES.\n      *\n      *    THE INPUT FILES COMPARED MUST FIRST BE COPIED TO\n      *    FILES WITH A DCB OF VB LRECL=12154.  THIS ALLOWS\n      *    THE PROGRAM TO COMPARE ANY FILE WITH A LENGTH UP\n      *    TO 12154. IDCAMS CAN BE USED TO DO THIS.\n      *\n      *    THE PROGRAM WILL MATCH UP RECORDS BY A KEY THAT IS\n      *    SPECIFIED IN PARAMETER CARDS.  THE MATCH KEYS MUST\n      *    CORRESPOND TO THE SORT FIELDS.  MULTIPLE KEY FIELDS\n      *    ARE POSSIBLE AND WILL BE USED TOGETHER TO MATCH\n      *    RECORDS.\n      *\n      *    RECORDS ON FILE 1 WHICH DO NOT MATCH BY KEY TO A\n      *    RECORD IN FILE 2 WILL BE PRINTED AS INSERTS AND\n      *    WRITTEN TO THE INSERT FILE 1.  FILE 2 INSERTS ARE\n      *    WRITTEN TO THE INSERT FILE 2 AND PRINTED.\n      *\n      *    RECORDS WHICH MATCH ON KEY, BUT DO NOT MATCH\n      *    EXACTLY WILL BE PRINTED AS DIFFERENCES AND THE\n      *    FILE 1 RECORD WRITTEN TO THE DIFF FILE 1 AND THE\n      *    FILE 2 RECORD WRITTEN TO THE DIFF FILE 2.\n      *\n      *    THE OUTPUT FILES ENABLE ONE TO FURTHER ANALYZE THE\n      *    DIFFERENCES BY LOOKING AT THE ENTIRE RECORDS.\n      *\n      *    IF THERE ARE EXPECTED OR ACCEPTABLE DIFFERENCES,\n      *    THESE MAY BE MASKED OUT OF THE COMPARE PROCESS BY\n      *    ADDING MASK CARDS TO THE INPUT PARAMETER FILE\n      *    OR OMITTED FROM THE COMPARE BY OMITTING THEM IN\n      *    THE SORT.\n      *\n      *    FOR MORE INFORMATION ABOUT THE PARAMETER CARD\n      *    OPTIONS, SEE PARAGRAPH A2200-PRINT-CARD-HELP.\n      *\n      *\n      * A1000-  INITIALIZATION ROUTINES\n      * A2000-  EDIT INPUT CARDS\n      * A9000-  TERMINATION ROUTINES\n      * C0000-  MAIN PROCESSING\n      * D0000-  DIFFERENCE PROCESSING\n      * E0000-  INSERT PROCESSING\n      * X0000-  PROGRAM READ, WRITE AND OTHER I-O ROUTINES\n      * Y0000-  DEBUG ROUTINES\n      * Z0000-  ABEND ROUTINES\n      *\n      *\n      *****************************************************************\n      *    INPUT FILES:   FILE 1\n      *                   FILE 2\n      *                   COMPARE OPTIONS CARDS\n      *\n      *    OUTPUT FILES:  DIFFERENCE REPORT\n      *                   DIFF FILE 1\n      *                   DIFF FILE 2\n      *                   INSERT FILE 1\n      *                   INSERT FILE 2\n      *****************************************************************\n      *  MODIFICATION LOG\n      *  12/15/2000  SHH ADD SPLIT KEY FIELDS\n      *  02/09/2001  SHH FIX OUTPUT RECORD LENGTH\n      *  06/18/2001  SHH ADD HEX DUMP OPTION\n      *  03/12/2003  SHH INITIALIZE REPORT FIELDS\n      *  11/16/2003  SHH ADD OPTION TO MASK SIGN BYTE, REMOVE COPYBOOKS\n      *  12/08/2004  SHH ADD OPTION TO MASK NULLS TO BLANKS\n      *  12/13/2004  SHH MAKE RECORDS 10 BYTE MINIMUM RECORD LENGTH\n      *                    IF ALL SPACES OR LOW-VALUES\n      *  05/12/2005  SHH ADD INPUT DSN NAMES TO SUMMARY REPORT\n      *\n      *****************************************************************\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n\n           SELECT FILE-1\n               STATUS IS FILE-1-STATUS\n               ASSIGN    FILE1.\n           SELECT FILE-2\n               STATUS IS FILE-2-STATUS\n               ASSIGN    FILE2.\n\n           SELECT FILE-1-DIFF\n               STATUS IS FILE-1D-STATUS\n               ASSIGN    DIFF1.\n           SELECT FILE-2-DIFF\n               STATUS IS FILE-2D-STATUS\n               ASSIGN    DIFF2.\n           SELECT FILE-1-INS\n               STATUS IS FILE-1E-STATUS\n               ASSIGN    INS1.\n           SELECT FILE-2-INS\n               STATUS IS FILE-2E-STATUS\n               ASSIGN    INS2.\n\n           SELECT CONTROL-CARDS\n               STATUS IS CARD-FILE-STATUS\n               ASSIGN    CARDIN.\n\n           SELECT DIFF-REPORT-FILE\n               ASSIGN    DIFFRPT.\n\n\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  FILE-1\n           LABEL RECORDS ARE STANDARD\n           BLOCK CONTAINS 0 RECORDS\n           RECORDING MODE IS V.\n       01  FILE-1-REC-C.\n           05  FILE-1-BYTE OCCURS 10 TO 12150 TIMES\n                     DEPENDING ON WS-F1-REC-LENGTH.\n               10  FILLER              PIC X.\n       01  FILE-1-REC-MIN              PIC X(10).\n       01  FILE-1-REC                  PIC X(12150).\n       01  FILE-1-REC-B                PIC X(2000).\n\n       FD  FILE-2\n           LABEL RECORDS ARE STANDARD\n           BLOCK CONTAINS 0 RECORDS\n           RECORDING MODE IS V.\n       01  FILE-2-REC-C.\n           05  FILE-2-BYTE OCCURS 10 TO 12150 TIMES\n                     DEPENDING ON WS-F2-REC-LENGTH.\n               10  FILLER              PIC X.\n       01  FILE-2-REC-MIN              PIC X(10).\n       01  FILE-2-REC                  PIC X(12150).\n       01  FILE-2-REC-B                PIC X(2000).\n\n       FD  FILE-1-DIFF\n           LABEL RECORDS ARE STANDARD\n           BLOCK CONTAINS 0 RECORDS\n           RECORDING MODE IS V.\n       01  FILE-1-DIFF-CD.\n           05  FILE-1D-BYTE OCCURS 10 TO 12150 TIMES\n                     DEPENDING ON WS-F1-REC-LENGTH.\n               10  FILLER              PIC X.\n       01  FILE-1-DIFF-MIN             PIC X(10).\n       01  FILE-1-DIFF-REC             PIC X(12150).\n\n       FD  FILE-2-DIFF\n           LABEL RECORDS ARE STANDARD\n           BLOCK CONTAINS 0 RECORDS\n           RECORDING MODE IS V.\n       01  FILE-2-DIFF-CD.\n           05  FILE-2D-BYTE OCCURS 10 TO 12150 TIMES\n                     DEPENDING ON WS-F2-REC-LENGTH.\n               10  FILLER              PIC X.\n       01  FILE-2-DIFF-MIN             PIC X(10).\n       01  FILE-2-DIFF-REC             PIC X(12150).\n\n       FD  FILE-1-INS\n           LABEL RECORDS ARE STANDARD\n           BLOCK CONTAINS 0 RECORDS\n           RECORDING MODE IS V.\n       01  FILE-1-INS-CD.\n           05  FILE-1E-BYTE OCCURS 10 TO 12150 TIMES\n                     DEPENDING ON WS-F1-REC-LENGTH.\n               10  FILLER              PIC X.\n       01  FILE-1-INS-MIN              PIC X(10).\n       01  FILE-1-INS-REC              PIC X(12150).\n\n       FD  FILE-2-INS\n           LABEL RECORDS ARE STANDARD\n           BLOCK CONTAINS 0 RECORDS\n           RECORDING MODE IS V.\n       01  FILE-2-INS-CD.\n           05  FILE-2E-BYTE OCCURS 10 TO 12150 TIMES\n                     DEPENDING ON WS-F2-REC-LENGTH.\n               10  FILLER              PIC X.\n       01  FILE-2-INS-MIN              PIC X(10).\n       01  FILE-2-INS-REC              PIC X(12150).\n\n       FD  CONTROL-CARDS\n           LABEL RECORDS ARE STANDARD\n           BLOCK CONTAINS 0 RECORDS\n           RECORDING MODE IS F.\n       01  CC-REC.\n           05  CC-TYPE                 PIC X(4).\n               88  CC-TYPE-KEY      VALUE 'KEY='.\n               88  CC-TYPE-REPORT   VALUE 'RPT='.\n               88  CC-TYPE-MASK     VALUE 'MASK'.\n               88  CC-TYPE-SIGNMASK VALUE 'SIGN'.\n               88  CC-TYPE-NULLMASK VALUE 'NULL'.\n               88  CC-TYPE-FILE     VALUE 'FILE'.\n               88  CC-TYPE-MAXDIFF  VALUE 'MAXD'.\n               88  CC-TYPE-MAXREAD  VALUE 'MAXR'.\n           05  FILLER                  PIC X(76).\n\n       01  CC-FILE-REC.\n           05  CC-FILE-ID              PIC X(6).\n               88  VALID-CC-FILE-TYPE  VALUE 'FILE1=' 'FILE2='.\n               88  CC-FILE-ID-1        VALUE 'FILE1='.\n               88  CC-FILE-ID-2        VALUE 'FILE2='.\n           05  CC-FILE-NAME            PIC X(66).\n           05  FILLER                  PIC X(08).\n\n       01  CC-MAX-REC.\n      *    MAXDIFF=999999999\n           05  FILLER                  PIC X(8).\n           05  CC-MAX-DIFF             PIC X(09).\n           05  FILLER                  PIC X(63).\n       01  CC-KEY-REC.\n           05  FILLER                  PIC X(4).\n           05  CC-KEY-OFF-LEN          PIC X(20).\n           05  FILLER                  PIC X(56).\n       01  CC-MASK-REC.\n           05  FILLER                  PIC X(5).\n           05  CC-MASK-OFF-LEN         PIC X(20).\n           05  FILLER                  PIC X(55).\n       01  CC-SIGNMASK-REC.\n           05  FILLER                  PIC X(9).\n           05  CC-SIGNMASK-OFF         PIC X(20).\n           05  FILLER                  PIC X(51).\n       01  CC-NULLMASK-REC.\n           05  FILLER                  PIC X(9).\n           05  CC-NULLMASK-OFF         PIC X(20).\n           05  FILLER                  PIC X(51).\n       01  CC-REPORT-REC.\n           05  FILLER                  PIC X(4).\n           05  CC-REPORT-TYPE          PIC X(04).\n               88  VALID-CC-REPORT-TYPE  VALUE 'CHAR' 'HEX ' '    '.\n               88  CC-REPORT-CHAR        VALUE 'CHAR' '    '.\n               88  CC-REPORT-HEX         VALUE 'HEX '.\n           05  FILLER                  PIC X(72).\n\n       FD  DIFF-REPORT-FILE\n           LABEL RECORDS ARE STANDARD\n           BLOCK CONTAINS 0 RECORDS\n           RECORDING MODE IS F.\n       01  DIFF-REPORT-REC             PIC X(133).\n\n\n           EJECT\n       WORKING-STORAGE SECTION.\n       01  WS-PROGRAM                  PIC X(08) VALUE ' JXCU001'.\n\n      *+ INSTALLATION SPECIFIC CONSTANTS\n       01  INSTALLATION-CONSTANTS.\n           05  WS-ILBOABN0             PIC X(08) VALUE 'ILBOABN0'.\n           05  WS-CEE3ABD              PIC X(07) VALUE 'CEE3ABD'.\n           05  WS-RETURN-CODE          PIC S9(4)       VALUE ZERO.\n           05  WS-ABEND-CODE           PIC S9(4) COMP  VALUE ZERO.\n           05  WS-CEE-ABEND-CODE       PIC S9(9) COMP  VALUE ZERO.\n           05  WS-CEE-CLEANUP-CODE     PIC S9(9) COMP  VALUE ZERO.\n           05  WS-ABEND-PARA           PIC X(30) VALUE SPACE.\n           05  WS-ABEND-REASON-1       PIC X(60) VALUE SPACE.\n           05  WS-ABEND-REASON-2       PIC X(60) VALUE SPACE.\n\n      *  MAXIMUM LINES PER PAGE\n           05  INST-LINES-PER-PAGE     PIC S9(3) COMP-3 VALUE +59.\n\n      *  SET TO 'Y' IF RUNNING LE LANGUAGE ENVIRONMENT\n           05  INST-CEE-SW                PIC X(01) VALUE 'Y'.\n               88  INST-CEE                         VALUE 'Y'.\n      *  SET TO 'Y' IF RUNNING IN MICROFOCUS COBOL\n           05  INST-MF-COBOL-SW           PIC X(01) VALUE 'N'.\n               88  INST-MF-COBOL                    VALUE 'Y'.\n      *  SET TO 'E' IF EBCDIC CHARACTERS\n      *  SET TO 'A' IF ASCII  CHARACTERS\n           05  INST-CODE-TABLE            PIC X(01) VALUE 'E'.\n               88  INST-EBCDIC                      VALUE 'E'.\n               88  INST-ASCII                       VALUE 'A'.\n\n\n       01  WORK-AREAS.\n           05  FILE-1-STATUS           PIC X(02) VALUE SPACES.\n           05  FILE-2-STATUS           PIC X(02) VALUE SPACES.\n           05  FILE-1D-STATUS          PIC X(02) VALUE SPACES.\n           05  FILE-2D-STATUS          PIC X(02) VALUE SPACES.\n           05  FILE-1E-STATUS          PIC X(02) VALUE SPACES.\n           05  FILE-2E-STATUS          PIC X(02) VALUE SPACES.\n           05  CARD-FILE-STATUS        PIC X(02) VALUE SPACES.\n\n           05  WS-WORK                 PIC X(9).\n           05  WS-WORK-NBRX.\n               10  WS-WORK-NBR         PIC 9(5).\n           05  WS-WORK-MAX-NBRX.\n               10  WS-WORK-MAX-NBR     PIC 9(9).\n           05  WS-OFFSET               PIC 9(5).\n           05  WS-MASK-LENGTH          PIC 9(5).\n           05  MASK-TABLE-MAX          PIC 9(5)  VALUE 12200.\n           05  MAX-REC-LENGTH          PIC 9(5)  VALUE 12150.\n           05  MIN-REC-LENGTH          PIC 9(5)  VALUE 10.\n           05  MAX-REC-LENGTH-USED     PIC 9(5)  VALUE 10.\n           05  WS-MAX-DIFF             PIC 9(9)  VALUE 999999999.\n           05  WS-MAX-READ             PIC 9(9)  VALUE 999999999.\n           05  MAX-100-BYTES           PIC S9(7) COMP-3 VALUE ZERO.\n           05  MAX-KEY-BYTES           PIC 9(5)  VALUE 1000.\n           05  MAX-KEY-SPLIT           PIC 9(5)  VALUE 100.\n           05  WS-SHOW-DIFF            PIC X     VALUE '-'.\n           05  WS-SHOW-MASK            PIC X     VALUE '*'.\n           05  WS-SHOW-SIGNMASK        PIC X     VALUE '#'.\n           05  WS-SHOW-NULLMASK        PIC X     VALUE '@'.\n           05  WS-START-POS            PIC 9(9).\n           05  WS-END-POS              PIC 9(9).\n           05  CARD-ERROR-REASON       PIC X(80) VALUE SPACES.\n\n           05  WS-100-BYTES            PIC X(100) VALUE SPACES.\n           05  WS1-100-BYTES           PIC X(100) VALUE SPACES.\n           05  WS2-100-BYTES           PIC X(100) VALUE SPACES.\n           05  WS3-100-BYTES           PIC X(100) VALUE SPACES.\n           05  WS-BYTE                 PIC S9(04) COMP.\n           05  WS-BYTE-X REDEFINES WS-BYTE.\n               10  FILLER              PIC X.\n               10  WS-HALF-BYTE        PIC X.\n           05  WS-APOST                PIC X          VALUE X'7D'.\n           05  WS-QUOTE                PIC X          VALUE X'7F'.\n           05  WS-ASCII-APOST          PIC X          VALUE X'27'.\n           05  WS-ASCII-QUOTE          PIC X          VALUE X'22'.\n\n\n           EJECT\n      ***************************************************************\n      *   HEX CHARACTER TABLE\n      *\n      *   TO DISPLAY APOSTROPHES AND QUOTES, DO THIS IN INITIALIZATION\n      *   FOR EBCDIC, MOVE X'7D' TO WS-HEX-LINE-1(125)  APOST\n      *               MOVE X'7F' TO WS-HEX-LINE-1(127)  QUOTE\n      *   FOR ASCII,  MOVE X'27' TO WS-HEX-LINE-1-ASCII(039)  APOST\n      *               MOVE X'22' TO WS-HEX-LINE-1-ASCII(034)  QUOTE\n      ***************************************************************\n       01  WS-HEX-DATA.\n           05  FILLER             PIC X(07) VALUE ' 01001 '.\n           05  FILLER             PIC X(07) VALUE ' 02002 '.\n           05  FILLER             PIC X(07) VALUE ' 03003 '.\n           05  FILLER             PIC X(07) VALUE ' 04004 '.\n           05  FILLER             PIC X(07) VALUE ' 05005 '.\n           05  FILLER             PIC X(07) VALUE ' 06006 '.\n           05  FILLER             PIC X(07) VALUE ' 07007 '.\n           05  FILLER             PIC X(07) VALUE ' 08008 '.\n           05  FILLER             PIC X(07) VALUE ' 09009 '.\n           05  FILLER             PIC X(07) VALUE ' 0A010 '.\n           05  FILLER             PIC X(07) VALUE ' 0B011 '.\n           05  FILLER             PIC X(07) VALUE ' 0C012 '.\n           05  FILLER             PIC X(07) VALUE ' 0D013 '.\n           05  FILLER             PIC X(07) VALUE ' 0E014 '.\n           05  FILLER             PIC X(07) VALUE ' 0F015 '.\n           05  FILLER             PIC X(07) VALUE ' 10016 '.\n           05  FILLER             PIC X(07) VALUE ' 11017 '.\n           05  FILLER             PIC X(07) VALUE ' 12018 '.\n           05  FILLER             PIC X(07) VALUE ' 13019 '.\n           05  FILLER             PIC X(07) VALUE ' 14020 '.\n           05  FILLER             PIC X(07) VALUE ' 15021 '.\n           05  FILLER             PIC X(07) VALUE ' 16022 '.\n           05  FILLER             PIC X(07) VALUE ' 17023 '.\n           05  FILLER             PIC X(07) VALUE ' 18024 '.\n           05  FILLER             PIC X(07) VALUE ' 19025 '.\n           05  FILLER             PIC X(07) VALUE ' 1A026 '.\n           05  FILLER             PIC X(07) VALUE ' 1B027 '.\n           05  FILLER             PIC X(07) VALUE ' 1C028 '.\n           05  FILLER             PIC X(07) VALUE ' 1D029 '.\n           05  FILLER             PIC X(07) VALUE ' 1E030 '.\n           05  FILLER             PIC X(07) VALUE ' 1F031 '.\n           05  FILLER             PIC X(07) VALUE ' 20032 '.\n           05  FILLER             PIC X(07) VALUE ' 21033!'.\n           05  FILLER             PIC X(07) VALUE ' 22034 '.\n           05  FILLER             PIC X(07) VALUE ' 23035#'.\n           05  FILLER             PIC X(07) VALUE ' 24036$'.\n           05  FILLER             PIC X(07) VALUE ' 25037%'.\n           05  FILLER             PIC X(07) VALUE ' 26038&'.\n           05  FILLER             PIC X(07) VALUE ' 27039 '.\n           05  FILLER             PIC X(07) VALUE ' 28040('.\n           05  FILLER             PIC X(07) VALUE ' 29041)'.\n           05  FILLER             PIC X(07) VALUE ' 2A042*'.\n           05  FILLER             PIC X(07) VALUE ' 2B043+'.\n           05  FILLER             PIC X(07) VALUE ' 2C044,'.\n           05  FILLER             PIC X(07) VALUE ' 2D045-'.\n           05  FILLER             PIC X(07) VALUE ' 2E046.'.\n           05  FILLER             PIC X(07) VALUE ' 2F047/'.\n           05  FILLER             PIC X(07) VALUE ' 300480'.\n           05  FILLER             PIC X(07) VALUE ' 310491'.\n           05  FILLER             PIC X(07) VALUE ' 320502'.\n           05  FILLER             PIC X(07) VALUE ' 330513'.\n           05  FILLER             PIC X(07) VALUE ' 340524'.\n           05  FILLER             PIC X(07) VALUE ' 350535'.\n           05  FILLER             PIC X(07) VALUE ' 360546'.\n           05  FILLER             PIC X(07) VALUE ' 370557'.\n           05  FILLER             PIC X(07) VALUE ' 380568'.\n           05  FILLER             PIC X(07) VALUE ' 390579'.\n           05  FILLER             PIC X(07) VALUE ' 3A058:'.\n           05  FILLER             PIC X(07) VALUE ' 3B059;'.\n           05  FILLER             PIC X(07) VALUE ' 3C060<'.\n           05  FILLER             PIC X(07) VALUE ' 3D061='.\n           05  FILLER             PIC X(07) VALUE ' 3E062>'.\n           05  FILLER             PIC X(07) VALUE ' 3F063?'.\n           05  FILLER             PIC X(07) VALUE ' 40064@'.\n           05  FILLER             PIC X(07) VALUE ' 41065A'.\n           05  FILLER             PIC X(07) VALUE ' 42066B'.\n           05  FILLER             PIC X(07) VALUE ' 43067C'.\n           05  FILLER             PIC X(07) VALUE ' 44068D'.\n           05  FILLER             PIC X(07) VALUE ' 45069E'.\n           05  FILLER             PIC X(07) VALUE ' 46070F'.\n           05  FILLER             PIC X(07) VALUE ' 47071G'.\n           05  FILLER             PIC X(07) VALUE ' 48072H'.\n           05  FILLER             PIC X(07) VALUE ' 49073I'.\n           05  FILLER             PIC X(07) VALUE '\u00a24A074J'.\n           05  FILLER             PIC X(07) VALUE '.4B075K'.\n           05  FILLER             PIC X(07) VALUE '<4C076L'.\n           05  FILLER             PIC X(07) VALUE '(4D077M'.\n           05  FILLER             PIC X(07) VALUE '+4E078N'.\n           05  FILLER             PIC X(07) VALUE '|4F079O'.\n           05  FILLER             PIC X(07) VALUE '&50080P'.\n           05  FILLER             PIC X(07) VALUE ' 51081Q'.\n           05  FILLER             PIC X(07) VALUE ' 52082R'.\n           05  FILLER             PIC X(07) VALUE ' 53083S'.\n           05  FILLER             PIC X(07) VALUE ' 54084T'.\n           05  FILLER             PIC X(07) VALUE ' 55085U'.\n           05  FILLER             PIC X(07) VALUE ' 56086V'.\n           05  FILLER             PIC X(07) VALUE ' 57087W'.\n           05  FILLER             PIC X(07) VALUE ' 58088X'.\n           05  FILLER             PIC X(07) VALUE ' 59089Y'.\n           05  FILLER             PIC X(07) VALUE '!5A090Z'.\n           05  FILLER             PIC X(07) VALUE '$5B091['.\n           05  FILLER             PIC X(07) VALUE '*5C092\\'.\n           05  FILLER             PIC X(07) VALUE ')5D093]'.\n           05  FILLER             PIC X(07) VALUE ';5E094^'.\n           05  FILLER             PIC X(07) VALUE '\u00ac5F095_'.\n           05  FILLER             PIC X(07) VALUE '-60096`'.\n           05  FILLER             PIC X(07) VALUE '/61097a'.\n           05  FILLER             PIC X(07) VALUE ' 62098b'.\n           05  FILLER             PIC X(07) VALUE ' 63099c'.\n           05  FILLER             PIC X(07) VALUE ' 64100d'.\n           05  FILLER             PIC X(07) VALUE ' 65101e'.\n           05  FILLER             PIC X(07) VALUE ' 66102f'.\n           05  FILLER             PIC X(07) VALUE ' 67103g'.\n           05  FILLER             PIC X(07) VALUE ' 68104h'.\n           05  FILLER             PIC X(07) VALUE ' 69105i'.\n           05  FILLER             PIC X(07) VALUE '\u00a66A106j'.\n           05  FILLER             PIC X(07) VALUE ',6B107k'.\n           05  FILLER             PIC X(07) VALUE '%6C108l'.\n           05  FILLER             PIC X(07) VALUE '_6D119m'.\n           05  FILLER             PIC X(07) VALUE '>6E110n'.\n           05  FILLER             PIC X(07) VALUE '?6F111o'.\n           05  FILLER             PIC X(07) VALUE ' 70112p'.\n           05  FILLER             PIC X(07) VALUE ' 71113q'.\n           05  FILLER             PIC X(07) VALUE ' 72114r'.\n           05  FILLER             PIC X(07) VALUE ' 73115s'.\n           05  FILLER             PIC X(07) VALUE ' 74116t'.\n           05  FILLER             PIC X(07) VALUE ' 75117u'.\n           05  FILLER             PIC X(07) VALUE ' 76118v'.\n           05  FILLER             PIC X(07) VALUE ' 77119w'.\n           05  FILLER             PIC X(07) VALUE ' 78120x'.\n           05  FILLER             PIC X(07) VALUE '`79121y'.\n           05  FILLER             PIC X(07) VALUE ':7A122z'.\n           05  FILLER             PIC X(07) VALUE '#7B123{'.\n           05  FILLER             PIC X(07) VALUE '@7C124|'.\n           05  FILLER             PIC X(07) VALUE ' 7D125}'.\n           05  FILLER             PIC X(07) VALUE '=7E126~'.\n           05  FILLER             PIC X(07) VALUE '\"7F127 '.\n           05  FILLER             PIC X(07) VALUE ' 80128 '.\n           05  FILLER             PIC X(07) VALUE 'a81129 '.\n           05  FILLER             PIC X(07) VALUE 'b82130 '.\n           05  FILLER             PIC X(07) VALUE 'c83131 '.\n           05  FILLER             PIC X(07) VALUE 'd84132 '.\n           05  FILLER             PIC X(07) VALUE 'e85133 '.\n           05  FILLER             PIC X(07) VALUE 'f86134 '.\n           05  FILLER             PIC X(07) VALUE 'g87135 '.\n           05  FILLER             PIC X(07) VALUE 'h88136 '.\n           05  FILLER             PIC X(07) VALUE 'i89137 '.\n           05  FILLER             PIC X(07) VALUE ' 8A138 '.\n           05  FILLER             PIC X(07) VALUE ' 8B139 '.\n           05  FILLER             PIC X(07) VALUE ' 8C140 '.\n           05  FILLER             PIC X(07) VALUE ' 8D141 '.\n           05  FILLER             PIC X(07) VALUE ' 8E142 '.\n           05  FILLER             PIC X(07) VALUE ' 8F143 '.\n           05  FILLER             PIC X(07) VALUE ' 90144 '.\n           05  FILLER             PIC X(07) VALUE 'j91145 '.\n           05  FILLER             PIC X(07) VALUE 'k92146 '.\n           05  FILLER             PIC X(07) VALUE 'l93147 '.\n           05  FILLER             PIC X(07) VALUE 'm94148 '.\n           05  FILLER             PIC X(07) VALUE 'n95149 '.\n           05  FILLER             PIC X(07) VALUE 'o96150 '.\n           05  FILLER             PIC X(07) VALUE 'p97151 '.\n           05  FILLER             PIC X(07) VALUE 'q98152 '.\n           05  FILLER             PIC X(07) VALUE 'r99153 '.\n           05  FILLER             PIC X(07) VALUE ' 9A154 '.\n           05  FILLER             PIC X(07) VALUE ' 9B155 '.\n           05  FILLER             PIC X(07) VALUE ' 9C156 '.\n           05  FILLER             PIC X(07) VALUE ' 9D157 '.\n           05  FILLER             PIC X(07) VALUE ' 9E158 '.\n           05  FILLER             PIC X(07) VALUE ' 9F159 '.\n           05  FILLER             PIC X(07) VALUE ' A0160 '.\n           05  FILLER             PIC X(07) VALUE '~A1161 '.\n           05  FILLER             PIC X(07) VALUE 'sA2162 '.\n           05  FILLER             PIC X(07) VALUE 'tA3163 '.\n           05  FILLER             PIC X(07) VALUE 'uA4164 '.\n           05  FILLER             PIC X(07) VALUE 'vA5165 '.\n           05  FILLER             PIC X(07) VALUE 'wA6166 '.\n           05  FILLER             PIC X(07) VALUE 'xA7167 '.\n           05  FILLER             PIC X(07) VALUE 'yA8168 '.\n           05  FILLER             PIC X(07) VALUE 'zA9169 '.\n           05  FILLER             PIC X(07) VALUE ' AA170 '.\n           05  FILLER             PIC X(07) VALUE ' AB171 '.\n           05  FILLER             PIC X(07) VALUE ' AC172 '.\n           05  FILLER             PIC X(07) VALUE ' AD173 '.\n           05  FILLER             PIC X(07) VALUE ' AE174 '.\n           05  FILLER             PIC X(07) VALUE ' AF175 '.\n           05  FILLER             PIC X(07) VALUE ' B0176 '.\n           05  FILLER             PIC X(07) VALUE ' B1177 '.\n           05  FILLER             PIC X(07) VALUE ' B2178 '.\n           05  FILLER             PIC X(07) VALUE ' B3179 '.\n           05  FILLER             PIC X(07) VALUE ' B4180 '.\n           05  FILLER             PIC X(07) VALUE ' B5181 '.\n           05  FILLER             PIC X(07) VALUE ' B6182 '.\n           05  FILLER             PIC X(07) VALUE ' B7183 '.\n           05  FILLER             PIC X(07) VALUE ' B8184 '.\n           05  FILLER             PIC X(07) VALUE ' B9185 '.\n           05  FILLER             PIC X(07) VALUE ' BA186 '.\n           05  FILLER             PIC X(07) VALUE '[BB187 '.\n           05  FILLER             PIC X(07) VALUE ']BC188 '.\n           05  FILLER             PIC X(07) VALUE ' BD189 '.\n           05  FILLER             PIC X(07) VALUE ' BE190 '.\n           05  FILLER             PIC X(07) VALUE ' BF191 '.\n           05  FILLER             PIC X(07) VALUE '{C0192 '.\n           05  FILLER             PIC X(07) VALUE 'AC1193 '.\n           05  FILLER             PIC X(07) VALUE 'BC2194 '.\n           05  FILLER             PIC X(07) VALUE 'CC3195 '.\n           05  FILLER             PIC X(07) VALUE 'DC4196 '.\n           05  FILLER             PIC X(07) VALUE 'EC5197 '.\n           05  FILLER             PIC X(07) VALUE 'FC6198 '.\n           05  FILLER             PIC X(07) VALUE 'GC7199 '.\n           05  FILLER             PIC X(07) VALUE 'HC8200 '.\n           05  FILLER             PIC X(07) VALUE 'IC9201 '.\n           05  FILLER             PIC X(07) VALUE ' CA202 '.\n           05  FILLER             PIC X(07) VALUE ' CB203 '.\n           05  FILLER             PIC X(07) VALUE ' CC204 '.\n           05  FILLER             PIC X(07) VALUE ' CD205 '.\n           05  FILLER             PIC X(07) VALUE ' CE206 '.\n           05  FILLER             PIC X(07) VALUE ' CF207 '.\n           05  FILLER             PIC X(07) VALUE '}D0208 '.\n           05  FILLER             PIC X(07) VALUE 'JD1209 '.\n           05  FILLER             PIC X(07) VALUE 'KD2210 '.\n           05  FILLER             PIC X(07) VALUE 'LD3211 '.\n           05  FILLER             PIC X(07) VALUE 'MD4212 '.\n           05  FILLER             PIC X(07) VALUE 'ND5213 '.\n           05  FILLER             PIC X(07) VALUE 'OD6214 '.\n           05  FILLER             PIC X(07) VALUE 'PD7215 '.\n           05  FILLER             PIC X(07) VALUE 'QD8216 '.\n           05  FILLER             PIC X(07) VALUE 'RD9217 '.\n           05  FILLER             PIC X(07) VALUE ' DA218 '.\n           05  FILLER             PIC X(07) VALUE ' DB219 '.\n           05  FILLER             PIC X(07) VALUE ' DC220 '.\n           05  FILLER             PIC X(07) VALUE ' DD221 '.\n           05  FILLER             PIC X(07) VALUE ' DE222 '.\n           05  FILLER             PIC X(07) VALUE ' DF223 '.\n           05  FILLER             PIC X(07) VALUE '\\E0224 '.\n           05  FILLER             PIC X(07) VALUE ' E1225 '.\n           05  FILLER             PIC X(07) VALUE 'SE2226 '.\n           05  FILLER             PIC X(07) VALUE 'TE3227 '.\n           05  FILLER             PIC X(07) VALUE 'UE4228 '.\n           05  FILLER             PIC X(07) VALUE 'VE5229 '.\n           05  FILLER             PIC X(07) VALUE 'WE6230 '.\n           05  FILLER             PIC X(07) VALUE 'XE7231 '.\n           05  FILLER             PIC X(07) VALUE 'YE8232 '.\n           05  FILLER             PIC X(07) VALUE 'ZE9233 '.\n           05  FILLER             PIC X(07) VALUE ' EA234 '.\n           05  FILLER             PIC X(07) VALUE ' EB235 '.\n           05  FILLER             PIC X(07) VALUE ' EC236 '.\n           05  FILLER             PIC X(07) VALUE ' ED237 '.\n           05  FILLER             PIC X(07) VALUE ' EE238 '.\n           05  FILLER             PIC X(07) VALUE ' EF239 '.\n           05  FILLER             PIC X(07) VALUE '0F0240 '.\n           05  FILLER             PIC X(07) VALUE '1F1241 '.\n           05  FILLER             PIC X(07) VALUE '2F2242 '.\n           05  FILLER             PIC X(07) VALUE '3F3243 '.\n           05  FILLER             PIC X(07) VALUE '4F4244 '.\n           05  FILLER             PIC X(07) VALUE '5F5245 '.\n           05  FILLER             PIC X(07) VALUE '6F6246 '.\n           05  FILLER             PIC X(07) VALUE '7F7247 '.\n           05  FILLER             PIC X(07) VALUE '8F8248 '.\n           05  FILLER             PIC X(07) VALUE '9F9249 '.\n           05  FILLER             PIC X(07) VALUE ' FA250 '.\n           05  FILLER             PIC X(07) VALUE ' FB251 '.\n           05  FILLER             PIC X(07) VALUE ' FC252 '.\n           05  FILLER             PIC X(07) VALUE ' FD253 '.\n           05  FILLER             PIC X(07) VALUE ' FE254 '.\n           05  FILLER             PIC X(07) VALUE ' FF255 '.\n           05  FILLER             PIC X(07) VALUE ' 00000 '.\n       01  WS-HEX-TABLE REDEFINES WS-HEX-DATA.\n           05  WS-HEX-DISPLAY OCCURS 256 TIMES.\n               10  WS-HEX-LINE-1       PIC X.\n               10  WS-HEXDATA-DISP.\n                   15  WS-HEX-LINE-2   PIC X.\n                   15  WS-HEX-LINE-3   PIC X.\n               10  WS-HEX-VALUE        PIC 9(03).\n               10  WS-HEX-LINE-1-ASCII PIC X.\n\n\n           EJECT\n       01  CONTROL-FIELDS.\n           05  KEY-LENGTHX.\n               10  KEY-LENGTH          PIC 9(5) VALUE ZERO.\n               10  KEY-OFFSET          PIC 9(5) VALUE ZERO.\n           05  REPORT-TYPE             PIC X(04) VALUE SPACES.\n               88  REPORT-TYPE-HEX        VALUE 'HEX '.\n               88  REPORT-TYPE-CHAR       VALUE 'CHAR' '    '.\n      * FILE NAMES TO PRINT IS SUMMARY REPORT\n           05  FILE-NAME-1             PIC X(66)  VALUE SPACE.\n           05  FILE-NAME-2             PIC X(66)  VALUE SPACE.\n\n       01  KEY-TABLE.\n           05  KEY-OFF-LEN  OCCURS 100 TIMES.\n               10  TKEY-OFFSET      PIC 9(5).\n               10  TKEY-LENGTH      PIC 9(5).\n\n       01  MASK-FIELDS.\n           05  MASKS.\n               10  MASK-POS     OCCURS 12200 TIMES\n                                INDEXED BY MASK-IX.\n                   15  FILLER          PIC X.\n                       88  MASK-THIS-BYTE       VALUE 'Y'.\n                       88  MASK-THIS-SIGN       VALUE 'S'.\n                       88  MASK-THIS-NULL       VALUE '0'.\n           05  MASKS-RE REDEFINES MASKS.\n               10  MASK-100-POS OCCURS 122 TIMES.\n                   15  FILLER   OCCURS 100 TIMES  PIC X.\n                       88  MASK-THIS-100-BYTE       VALUE 'Y'.\n                       88  MASK-THIS-100-SIGN       VALUE 'S'.\n                       88  MASK-THIS-100-NULL       VALUE '0'.\n\n       01  DIFFERENCE-WORK-FIELDS.\n      *  USED FOR SHOWING INDIVIDUAL RECORD DIFFERENCES\n           05  DIFFERENCE-INDS.\n               10  DIFF-100       OCCURS 122 TIMES.\n                   15  DIFF-POS   OCCURS 100 TIMES  PIC X.\n\n      *  USED FOR SHOWING SUMMARY AT END OF JOB\n           05  TOTAL-DIFFERENCE-INDS.\n               10  TDIFF-100      OCCURS 122 TIMES.\n                   15  TDIFF-POS  OCCURS 100 TIMES  PIC X.\n\n      *  FILE WORK AREAS\n       01  WS-F1-REC-LENGTH            PIC S9(8) COMP VALUE +12150.\n       01  WS-F2-REC-LENGTH            PIC S9(8) COMP VALUE +12150.\n\n       01  WS-F1-KEY                   PIC X(1000) VALUE SPACES.\n       01  WS-F1-REC.\n           05  WS-F1-REC-X.\n             10  WS-F1-100          OCCURS 122 TIMES.\n                 15  WS-F1-100-BYTE OCCURS 100  PIC X.\n\n       01  WS-F2-KEY                   PIC X(1000) VALUE SPACES.\n       01  WS-F2-REC.\n           05  WS-F2-REC-X.\n             10  WS-F2-100          OCCURS 122 TIMES.\n                 15  WS-F2-100-BYTE OCCURS 100  PIC X.\n\n       01  DIFF-COUNT-TABLE.\n           05  DIFF-COUNTS          OCCURS 122 TIMES.\n               10  TBL-DIFF-CNT        PIC S9(9) COMP-3.\n\n       01  SAVE-DIFF-REPORT-REC        PIC X(132).\n       01  SAVE-LINE-SPACING           PIC 9 VALUE ZERO.\n\n       01  COUNTERS.\n           05  FILE-1-READ-CNT         PIC S9(9) COMP-3 VALUE ZERO.\n           05  FILE-2-READ-CNT         PIC S9(9) COMP-3 VALUE ZERO.\n           05  FILE-1D-WRITE-CNT       PIC S9(9) COMP-3 VALUE ZERO.\n           05  FILE-2D-WRITE-CNT       PIC S9(9) COMP-3 VALUE ZERO.\n           05  FILE-1E-WRITE-CNT       PIC S9(9) COMP-3 VALUE ZERO.\n           05  FILE-2E-WRITE-CNT       PIC S9(9) COMP-3 VALUE ZERO.\n           05  FILE-1-INS-CNT          PIC S9(9) COMP-3 VALUE ZERO.\n           05  FILE-2-INS-CNT          PIC S9(9) COMP-3 VALUE ZERO.\n           05  FILE-CARDS-CNT          PIC S9(9) COMP-3 VALUE ZERO.\n           05  KEY-CNT                 PIC S9(9) COMP-3 VALUE ZERO.\n           05  DIFF-CNT                PIC S9(9) COMP-3 VALUE ZERO.\n           05  TOTAL-DIFF-CNT          PIC S9(9) COMP-3 VALUE ZERO.\n           05  MATCH-CNT               PIC S9(9) COMP-3 VALUE ZERO.\n           05  MASK-ONLY-CNT           PIC S9(9) COMP-3 VALUE ZERO.\n           05  PAGE-CNT                PIC S9(5) COMP-3 VALUE ZERO.\n           05  LINE-CNT                PIC S9(3) COMP-3 VALUE +80.\n           05  HEADER-LINE-CNT         PIC S9(3) COMP-3 VALUE +5.\n           05  LINE-SPACING            PIC 9 VALUE ZERO.\n           05  WS-DIFF-BYTE-CNT        PIC S9(9) COMP-3 VALUE ZERO.\n           05  WS-DIFF-100-BYTE-CNT    PIC S9(9) COMP-3 VALUE ZERO.\n\n\n       01  SUBSCRIPTS.\n           05  PSUB                    PIC S9(8) COMP VALUE ZERO.\n           05  WSUB                    PIC S9(8) COMP VALUE ZERO.\n           05  KSUB                    PIC S9(8) COMP VALUE ZERO.\n           05  HSUB                    PIC S9(4) COMP VALUE ZERO.\n           05  XSUB                    PIC S9(4) COMP VALUE ZERO.\n\n       01  SWITCHES.\n           05  END-OF-FILE-1-SW           PIC X VALUE SPACE.\n               88  END-OF-FILE-1                VALUE 'Y'.\n           05  END-OF-FILE-2-SW           PIC X VALUE SPACE.\n               88  END-OF-FILE-2                VALUE 'Y'.\n           05  END-OF-CARDS-SW            PIC X VALUE SPACE.\n               88  END-OF-CARDS                 VALUE 'Y'.\n           05  DIFF-FOUND-SW              PIC X VALUE SPACE.\n               88  DIFF-FOUND                   VALUE 'Y'.\n           05  CC-ERROR-FOUND-SW          PIC X VALUE 'N'.\n               88  CC-ERROR-FOUND               VALUE 'Y'.\n           05  HELP-PRINTED-SW            PIC X VALUE 'N'.\n               88  HELP-PRINTED                 VALUE 'Y'.\n           05  RECORD-PRINTED-SW          PIC X VALUE 'N'.\n               88  RECORD-PRINTED               VALUE 'Y'.\n               88  RECORD-NOT-PRINTED           VALUE 'N'.\n\n\n       01  DISP-CC-REC-LINE.\n           05  FILLER                     PIC X     VALUE SPACE.\n           05  DISP-CC-REC-CNT            PIC ZZZ9.\n           05  FILLER                     PIC XX    VALUE SPACE.\n           05  DISP-CC-REC                PIC X(72) VALUE SPACE.\n\n       01  REPORT-HEAD-3.\n           02  FILLER                      PIC X(133) VALUE SPACE.\n       01  REPORT-RULER.\n           02  FILLER                      PIC X      VALUE SPACE.\n           02  FILLER                      PIC X(12)  VALUE SPACE.\n           02  FILLER                      PIC X(50)  VALUE\n               '----+----1----+----2----+----3----+----4----+----5'.\n           02  FILLER                      PIC X(50)  VALUE\n               '----+----6----+----7----+----8----+----9----+----0'.\n           02  FILLER                      PIC X(02)  VALUE SPACE.\n           02  FILLER                      PIC X(12)  VALUE SPACE.\n\n       01  DETAIL-1.\n           02  FILLER                      PIC X  VALUE SPACE.\n           02  DT-INSERT-FILE-ID           PIC X(16)  VALUE\n               'FILE-1 RECORD # '.\n           02  DT-RECORD-NBR               PIC ZZ,ZZZ,ZZ9.\n\n       01  DETAIL-2.\n           02  FILLER                      PIC X  VALUE SPACE.\n           02  DT-START-POS                PIC ZZZZ9.\n           02  DT-HYPHEN                   PIC X VALUE '-'.\n           02  DT-END-POS                  PIC ZZZZ9.\n           02  FILLER                      PIC X  VALUE SPACE.\n           02  DT-100-BYTES                PIC X(100) VALUE SPACE.\n           02  FILLER                      PIC X(02)  VALUE SPACE.\n           02  DT-FILE-ID                  PIC X(18)  VALUE SPACE.\n\n       01  DETAIL-4.\n           02  FILLER                      PIC X  VALUE SPACE.\n           02  FILLER                      PIC X(16)  VALUE\n               'FILE-1 RECORD # '.\n           02  DT-RECORD-NBR-1             PIC ZZ,ZZZ,ZZ9.\n           02  FILLER                      PIC X(5)  VALUE SPACE.\n           02  FILLER                      PIC X(16)  VALUE\n               'FILE-2 RECORD # '.\n           02  DT-RECORD-NBR-2             PIC ZZ,ZZZ,ZZ9.\n\n       01  REPORT-TRLR-1.\n           02  FILLER                      PIC X     VALUE SPACE.\n           02  FILLER                      PIC X(05) VALUE SPACE.\n           02  RT-TITLE                    PIC X(50) VALUE SPACES.\n\n       01  REPORT-TRLR-2.\n           02  FILLER                      PIC X     VALUE SPACE.\n           02  FILLER                      PIC X(05) VALUE SPACE.\n           02  RT-COUNT                    PIC ZZZ,ZZZ,ZZ9.\n           02  FILLER                      PIC X(05) VALUE SPACE.\n           02  RT-LITERAL.\n               05  FILLER                  PIC X(23) VALUE SPACES.\n               05  RT-FILE-NAME            PIC X(66) VALUE SPACES.\n\n       01  REPORT-TRLR-3.\n           02  FILLER                      PIC X     VALUE SPACE.\n           02  FILLER                      PIC X(21) VALUE SPACE.\n           02  FILLER                      PIC X(04) VALUE 'KEY '.\n           02  RT-KEY-SEQ                  PIC Z9.\n           02  FILLER                      PIC X(02) VALUE SPACE.\n           02  FILLER                      PIC X(07) VALUE 'OFFSET '.\n           02  RT-KEY-OFFSET               PIC ZZZZ9.\n           02  FILLER                      PIC X(05) VALUE SPACE.\n           02  FILLER                      PIC X(07) VALUE 'LENGTH '.\n           02  RT-KEY-LENGTH               PIC ZZZZ9.\n\n       01  REPORT-TRLR-4.\n           02  FILLER                      PIC X     VALUE SPACE.\n           02  FILLER                      PIC X(05) VALUE SPACE.\n           02  TR-COUNT                    PIC ZZZ,ZZZ,ZZ9.\n           02  FILLER                      PIC X(05) VALUE SPACE.\n           02  TR-LITERAL                  PIC X(04) VALUE 'POS '.\n           02  TR-START-POS                PIC ZZZZ9.\n           02  TR-HYPHEN                   PIC X VALUE '-'.\n           02  TR-END-POS                  PIC ZZZZ9.\n\n       01  REPORT-TRLR-5.\n           02  FILLER                      PIC X     VALUE SPACE.\n           02  FILLER                      PIC X(21) VALUE SPACE.\n           02  RT-DIFF-CHAR                PIC X(01) VALUE SPACE.\n           02  FILLER                      PIC X(05) VALUE SPACE.\n           02  RT-DIFF-DESC                PIC X(45) VALUE SPACE.\n\n           EJECT\n      *   REPORT HEADINGS AND FOOTER\n       01  HEADING-1.\n           05  FILLER                  PIC X     VALUE SPACE.\n           05  HD1-RUN-DATE            PIC X(10).\n           05  FILLER                  PIC X(31) VALUE SPACES.\n           05  HD1-COMPANY-NAME        PIC X(50) VALUE SPACES.\n           05  FILLER                  PIC X(21) VALUE SPACES.\n           05  FILLER                  PIC X(08) VALUE 'PAGE: '.\n           05  HD1-PAGE                PIC ZZZ,ZZZ,ZZ9.\n\n       01  HEADING-2.\n           05  FILLER                  PIC X     VALUE SPACE.\n           05  HD2-RUN-TIME            PIC X(05).\n           05  FILLER                  PIC X(36) VALUE SPACES.\n           05  HD2-TITLE               PIC X(50) VALUE SPACES.\n           05  FILLER                  PIC X(21) VALUE SPACES.\n           05  FILLER                  PIC X(08) VALUE 'REPORT: '.\n           05  HD2-PROGRAM             PIC X(08) VALUE SPACES.\n           05  FILLER                  PIC X(01) VALUE '-'.\n           05  HD2-REPORT              PIC X(02) VALUE SPACES.\n\n       01  FOOTER-1.\n           05  FILLER                  PIC X     VALUE SPACE.\n           05  FT1-PRODUCT.\n               10  FILLER              PIC X(35) VALUE\n               'FILEWIZ COMPARE REL 6.0  VER 01'.\n               10  FILLER              PIC X(11) VALUE SPACES.\n           05  FT1-VENDOR              PIC X(43) VALUE\n               '(C) 2005 RENAISSANCE DATA SYSTEMS INC.'.\n           05  FILLER                  PIC X(10) VALUE SPACES.\n           05  FT1-DEBUG-FIELDS.\n               10  FT1-COMPILE-LIT1    PIC X(12) VALUE SPACES.\n               10  FT1-COMP-DATE       PIC X(10) VALUE SPACES.\n               10  FT1-COMPILE-LIT2    PIC X(04) VALUE SPACES.\n               10  FT1-COMP-TIME       PIC X(05) VALUE SPACES.\n\n\n       01  RULER-LINE.\n           05  FILLER                  PIC X     VALUE SPACE.\n           05  RULER-1-TO-132.\n               10  RULER-1-TO-50       PIC X(50) VALUE\n               '----+----1----+----2----+----3----+----4----+----5'.\n               10  RULER-51-TO-100     PIC X(50) VALUE\n               '----+----6----+----7----+----8----+----9----+----0'.\n               10  RULER-101-TO-132    PIC X(32) VALUE\n               '----+----1----+----2----+----3--'.\n\n           EJECT\n      *  DATE-TIME WORK AREAS\n       01  WS-CURRENT-DATE-WORK.\n           05  WS-CURRDATE-CC                 PIC 9(02).\n           05  WS-CURRDATE-YY                 PIC 9(02).\n           05  WS-CURRDATE-MM                 PIC 9(02).\n           05  WS-CURRDATE-DD                 PIC 9(02).\n           05  WS-CURRDATE-HR                 PIC 9(02).\n           05  WS-CURRDATE-MIN                PIC 9(02).\n           05  WS-CURRDATE-SEC                PIC 9(02).\n           05  WS-CURRDATE-HSEC               PIC 9(02).\n           05  WS-CURRDATE-PLUS-MINUS         PIC X(01).\n           05  WS-CURRDATE-PM-HR              PIC 9(02).\n           05  WS-CURRDATE-PM-MIN             PIC 9(02).\n       01  WS-CURRENT-DATE-WORK-2 REDEFINES\n           WS-CURRENT-DATE-WORK.\n           05  WS-CURRDATE-DATE.\n               10  WS-CURRDATE-CCYY           PIC 9(04).\n               10  FILLER                     PIC X(04).\n           05  WS-CURRDATE-TIME               PIC X(08).\n           05  WS-CURRDATE-GREENWICH          PIC X(05).\n       01  WS-CURRENT-DATE-WORK-3 REDEFINES\n           WS-CURRENT-DATE-WORK.\n           05  FILLER                         PIC X(02).\n           05  WS-CURRDATE-DATE-YMD           PIC X(06).\n           05  WS-CURRDATE-TIME-HMS           PIC X(06).\n           05  FILLER                         PIC X(07).\n\n      *  DISPLAY RUN DATE\n       01  WS-RUN-DATE-DISPLAY.\n           05  FILLER                         PIC X VALUE '*'.\n           05  FILLER                         PIC X(03) VALUE SPACES.\n           05  WS-RD-PROGRAM                  PIC X(08) VALUE SPACES.\n           05  FILLER                         PIC X(13) VALUE\n               ' RUN ON      '.\n           05  WS-RUN-DATE-FORMATTED.\n               10  WS-RD-MM                   PIC 9(02).\n               10  FILLER                     PIC X  VALUE '/'.\n               10  WS-RD-DD                   PIC 9(02).\n               10  FILLER                     PIC X  VALUE '/'.\n               10  WS-RD-CC                   PIC 9(02).\n               10  WS-RD-YY                   PIC 9(02).\n           05  FILLER                         PIC X(4) VALUE ' AT '.\n           05  WS-RUN-TIME-FORMATTED.\n               10  WS-RD-HR                   PIC 9(02).\n               10  FILLER                     PIC X  VALUE ':'.\n               10  WS-RD-MIN                  PIC 9(02).\n\n      *  DISPLAY COMPILE DATE\n       01  WS-COMPL-DATE-DISPLAY.\n           05  FILLER                         PIC X VALUE '*'.\n           05  FILLER                         PIC X(03) VALUE SPACES.\n           05  WS-CD-PROGRAM                  PIC X(08) VALUE SPACES.\n           05  FILLER                         PIC X(13) VALUE\n               ' COMPILED ON '.\n           05  WS-COMPL-DATE-FORMATTED.\n               10  WS-CD-MM                   PIC 9(02).\n               10  FILLER                     PIC X  VALUE '/'.\n               10  WS-CD-DD                   PIC 9(02).\n               10  FILLER                     PIC X  VALUE '/'.\n               10  WS-CD-CC                   PIC 9(02).\n               10  WS-CD-YY                   PIC 9(02).\n           05  FILLER                         PIC X(4) VALUE ' AT '.\n           05  WS-COMPL-TIME-FORMATTED.\n               10  WS-CD-HR                   PIC 9(02).\n               10  FILLER                     PIC X  VALUE ':'.\n               10  WS-CD-MIN                  PIC 9(02).\n\n\n\n\n           EJECT\n       PROCEDURE DIVISION.\n\n\n       A000-MAINLINE.\n\n           PERFORM A1000-INITIALIZATION THRU A1000-EXIT.\n\n           PERFORM C1000-COMPARE-RECS THRU C1000-EXIT\n             UNTIL END-OF-FILE-1 AND END-OF-FILE-2.\n\n           PERFORM A9000-TERMINATION THRU A9000-EXIT.\n\n           GOBACK.\n\n      **************************************************************\n      * INITIALIZATION ROUTINES                                    *\n      *   GET CURRENT DATE AND TIME.                               *\n      *   PROCESS INPUT CARDS                                      *\n      *   OPEN FILES                                               *\n      *   READ FIRST RECORDS IN EACH FILE TO COMPARE.              *\n      *                                                            *\n      **************************************************************\n       A1000-INITIALIZATION.\n\n           DISPLAY 'PROGRAM JXCU001 - COMPARE FILES'.\n\n      *  CODE FOR MICROFOCUS COBOL - USE ASCII VALUES\n           IF INST-MF-COBOL\n              MOVE WS-ASCII-APOST  TO WS-APOST\n              MOVE WS-ASCII-QUOTE  TO WS-QUOTE\n           END-IF.\n\n      *  FOR EBCDIC DISPLAY VALUES\n           MOVE WS-APOST        TO WS-HEX-LINE-1(125)\n           MOVE WS-QUOTE        TO WS-HEX-LINE-1(127)\n      *  FOR ASCII DISPLAY VALUES\n           MOVE WS-ASCII-APOST  TO WS-HEX-LINE-1-ASCII(039)\n           MOVE WS-ASCII-QUOTE  TO WS-HEX-LINE-1-ASCII(034)\n\n\n           MOVE 'FILEWIZ COMPARE  REL 6.0  VER 01   ' TO FT1-PRODUCT.\n           MOVE WS-PROGRAM             TO WS-RD-PROGRAM\n                                          WS-CD-PROGRAM\n                                          HD2-PROGRAM.\n\n           MOVE SPACES TO TOTAL-DIFFERENCE-INDS.\n           PERFORM VARYING KSUB FROM 1 BY 1\n                   UNTIL KSUB > MAX-KEY-SPLIT\n               MOVE ZERO TO TKEY-OFFSET(KSUB)\n               MOVE ZERO TO TKEY-LENGTH(KSUB)\n           END-PERFORM.\n\n      *  DATE AND TIME INITIALIZATION AND DISPLAY\n\n      **  GET COMPILE DATE AND TIME\n           MOVE FUNCTION WHEN-COMPILED  TO\n               WS-CURRENT-DATE-WORK.\n           MOVE WS-CURRDATE-MM     TO WS-CD-MM.\n           MOVE WS-CURRDATE-DD     TO WS-CD-DD.\n           MOVE WS-CURRDATE-CC     TO WS-CD-CC.\n           MOVE WS-CURRDATE-YY     TO WS-CD-YY.\n\n           MOVE WS-CURRDATE-HR     TO WS-CD-HR.\n           MOVE WS-CURRDATE-MIN    TO WS-CD-MIN.\n\n           DISPLAY WS-COMPL-DATE-DISPLAY.\n\n      **  GET RUN DATE AND TIME\n           MOVE FUNCTION CURRENT-DATE  TO\n               WS-CURRENT-DATE-WORK.\n\n           MOVE WS-CURRDATE-MM     TO WS-RD-MM.\n           MOVE WS-CURRDATE-DD     TO WS-RD-DD.\n           MOVE WS-CURRDATE-CC     TO WS-RD-CC.\n           MOVE WS-CURRDATE-YY     TO WS-RD-YY.\n\n           MOVE WS-CURRDATE-HR     TO WS-RD-HR.\n           MOVE WS-CURRDATE-MIN    TO WS-RD-MIN.\n\n           DISPLAY WS-RUN-DATE-DISPLAY.\n\n           MOVE  WS-RUN-DATE-FORMATTED       TO HD1-RUN-DATE.\n           MOVE  WS-RUN-TIME-FORMATTED       TO HD2-RUN-TIME.\n\n\n           MOVE  WS-COMPL-DATE-FORMATTED   TO FT1-COMP-DATE\n           MOVE  WS-COMPL-TIME-FORMATTED   TO FT1-COMP-TIME\n           MOVE 'COMPILED ON'  TO FT1-COMPILE-LIT1\n           MOVE ' AT '         TO FT1-COMPILE-LIT2.\n\n\n           PERFORM A2210-PRINT-GENERAL-HELP THRU A2210-EXIT.\n\n           INITIALIZE DIFF-COUNT-TABLE.\n\n           PERFORM A2000-CONTROL-CARDS THRU A2000-EXIT.\n           IF CC-ERROR-FOUND\n               DISPLAY '   '\n               DISPLAY '  ERROR FOUND IN CONTROL CARDS - PROGRAM'\n                       ' WILL NOT CONTINUE'\n               MOVE 100  TO WS-ABEND-CODE\n                            WS-CEE-ABEND-CODE\n               MOVE 'A1000-INITIALIZATION'  TO WS-ABEND-PARA\n               MOVE 'CONTROL CARD ERROR'    TO WS-ABEND-REASON-1\n               PERFORM Z9000-ABEND-PROGRAM\n           ELSE\n               PERFORM A2200-PRINT-CARD-HELP THRU A2200-EXIT.\n\n           OPEN INPUT FILE-1\n                      FILE-2.\n           OPEN OUTPUT FILE-1-DIFF\n                       FILE-2-DIFF\n                       FILE-1-INS\n                       FILE-2-INS.\n\n           OPEN OUTPUT DIFF-REPORT-FILE.\n\n\n           IF FILE-1-STATUS NOT = '00' AND '97'\n               DISPLAY '   BAD OPEN ON FILE 1.  STATUS = '\n                       FILE-1-STATUS\n               MOVE 'Y' TO END-OF-FILE-1-SW\n               MOVE HIGH-VALUES TO WS-F1-KEY\n               MOVE 101  TO WS-ABEND-CODE\n                            WS-CEE-ABEND-CODE\n               MOVE 'A1000-INITIALIZATION'  TO WS-ABEND-PARA\n               MOVE 'OPEN ERROR ON FILE 1'  TO WS-ABEND-REASON-1\n               PERFORM Z9000-ABEND-PROGRAM\n           ELSE\n               PERFORM X1000-READ-FILE-1 THRU X1000-EXIT.\n\n           IF FILE-2-STATUS NOT = '00' AND '97'\n               DISPLAY '   BAD OPEN ON FILE 2.  STATUS = '\n                       FILE-2-STATUS\n               MOVE 'Y' TO END-OF-FILE-2-SW\n               MOVE HIGH-VALUES TO WS-F2-KEY\n               MOVE 102  TO WS-ABEND-CODE\n                            WS-CEE-ABEND-CODE\n               MOVE 'A1000-INITIALIZATION'  TO WS-ABEND-PARA\n               MOVE 'OPEN ERROR ON FILE 2'  TO WS-ABEND-REASON-1\n           ELSE\n               PERFORM X2000-READ-FILE-2 THRU X2000-EXIT.\n\n           IF END-OF-FILE-1\n               DISPLAY 'NO RECORDS IN FILE 1'\n               DISPLAY '   '\n               DISPLAY '   '.\n           IF END-OF-FILE-2\n               DISPLAY 'NO RECORDS IN FILE 2'\n               DISPLAY '   '\n               DISPLAY '   '.\n\n\n      *+  INSTALLATION SPECIFIC INITIALIZATION ROUTINES\n      *\n           MOVE '                FILEWIZ COMPARE'\n                                       TO HD1-COMPANY-NAME.\n           SUBTRACT 4             FROM INST-LINES-PER-PAGE.\n\n\n       A1000-EXIT.\n           EXIT.\n           EJECT\n      *------------------------------------------------------------*\n      *    EDIT INPUT CONTROL CARDS                                *\n      *------------------------------------------------------------*\n       A2000-CONTROL-CARDS.\n           OPEN INPUT CONTROL-CARDS.\n\n           IF CARD-FILE-STATUS NOT = '00' AND '97'\n               DISPLAY '   BAD OPEN ON CARD FILE.  '\n                       'STATUS = ' CARD-FILE-STATUS\n               MOVE 'Y' TO END-OF-CARDS-SW\n               SET CC-ERROR-FOUND TO TRUE\n               GO TO A2000-EXIT\n           END-IF.\n\n           MOVE ZERO TO KEY-LENGTH.\n           MOVE SPACES TO MASKS.\n\n           DISPLAY '   '.\n           DISPLAY '=========   CONTROL CARDS ========== '.\n           DISPLAY '   '.\n\n           PERFORM X3000-READ-CARDS THRU X3000-EXIT.\n           IF END-OF-CARDS\n               DISPLAY '  NO INPUT CONTROL CARDS FOUND'\n               SET CC-ERROR-FOUND TO TRUE\n           ELSE\n               PERFORM A2100-EDIT-CARDS THRU A2100-EXIT\n                   UNTIL END-OF-CARDS.\n\n           DISPLAY '   '.\n           DISPLAY '=========   END OF CARDS  ========== '.\n           DISPLAY '   '.\n\n      *  MAKE SURE TOTAL KEY LENGTH IS NOT LONGER THAN ALLOWED\n           MOVE ZERO TO KEY-LENGTH.\n           PERFORM VARYING KSUB FROM 1 BY 1\n                   UNTIL KSUB > KEY-CNT\n               COMPUTE KEY-LENGTH = KEY-LENGTH + TKEY-LENGTH(KSUB)\n           END-PERFORM.\n\n           IF KEY-LENGTH > MAX-KEY-BYTES\n               STRING 'ERROR: MORE THAN MAX ' DELIMITED BY SIZE\n                      MAX-KEY-BYTES       DELIMITED BY SIZE\n                      ' BYTES IN KEY.'    DELIMITED BY SIZE\n                         INTO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT.\n\n           CLOSE CONTROL-CARDS.\n\n       A2000-EXIT.\n           EXIT.\n\n       A2100-EDIT-CARDS.\n\n           IF CC-TYPE-KEY\n               PERFORM A2110-EDIT-KEY-CARD THRU A2110-EXIT\n           ELSE\n           IF CC-TYPE-MASK\n               PERFORM A2120-EDIT-MASK-CARD THRU A2120-EXIT\n           ELSE\n           IF CC-TYPE-FILE\n               PERFORM A2130-EDIT-FILE-CARD THRU A2130-EXIT\n           ELSE\n           IF CC-TYPE-MAXDIFF\n               PERFORM A2140-EDIT-MAX-CARD THRU A2140-EXIT\n           ELSE\n           IF CC-TYPE-MAXREAD\n               PERFORM A2140-EDIT-MAX-CARD THRU A2140-EXIT\n           ELSE\n           IF CC-TYPE-REPORT\n               PERFORM A2150-EDIT-RPT-CARD THRU A2150-EXIT\n           ELSE\n           IF CC-TYPE-SIGNMASK\n               PERFORM A2160-EDIT-SIGNMASK-CARD THRU A2160-EXIT\n           ELSE\n           IF CC-TYPE-NULLMASK\n               PERFORM A2170-EDIT-NULLMASK-CARD THRU A2170-EXIT\n           ELSE\n           IF CC-TYPE(1:1) = '*' OR ' '\n               NEXT SENTENCE\n           ELSE\n               MOVE 'ERROR: UNKNOWN CARD TYPE' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT.\n\n           MOVE CC-REC TO DISP-CC-REC.\n           MOVE FILE-CARDS-CNT  TO DISP-CC-REC-CNT.\n           DISPLAY DISP-CC-REC-LINE.\n\n           PERFORM X3000-READ-CARDS THRU X3000-EXIT.\n\n       A2100-EXIT.\n           EXIT.\n           EJECT\n      ****************************************************************\n      *  READ ALL KEY CARDS INTO A TABLE\n      *  MAKE THE OFFSET AND LENGTH NUMERIC\n      ****************************************************************\n       A2110-EDIT-KEY-CARD.\n\n           MOVE ZERO TO KEY-LENGTH.\n           MOVE ZERO TO KEY-OFFSET.\n\n      *  PARSE KEY OFFSET - IT SHOULD END WITH A COMMA\n           MOVE SPACES TO WS-WORK.\n           MOVE 1 TO WSUB.\n           PERFORM VARYING PSUB FROM 1 BY 1\n                   UNTIL PSUB > 20 OR\n                   WSUB > 5  OR\n                   CC-KEY-OFF-LEN(PSUB:1) = ',' OR ' '\n               MOVE CC-KEY-OFF-LEN(PSUB:1) TO WS-WORK (WSUB:1)\n               ADD 1 TO WSUB\n           END-PERFORM.\n\n           IF CC-KEY-OFF-LEN(PSUB:1) NOT = ','\n               MOVE 'ERROR: INVALID KEY OFFSET FORMAT ' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2110-EXIT.\n\n      * MAKE KEY OFFSET NUMERIC\n           SUBTRACT 1 FROM WSUB.\n\n           MOVE 5 TO KSUB.\n           PERFORM VARYING WSUB FROM WSUB BY -1\n                   UNTIL WSUB < 1\n               MOVE WS-WORK (WSUB:1) TO KEY-OFFSET(KSUB:1)\n               SUBTRACT 1 FROM KSUB\n           END-PERFORM.\n\n           IF KEY-OFFSET NOT NUMERIC OR\n              KEY-OFFSET = ZERO\n               DISPLAY '>>> WS WORK    = ' WS-WORK ' LEN= ' WSUB\n               DISPLAY '>>> KEY OFFSET = ' KEY-OFFSET\n               MOVE 'ERROR: NON-NUMERIC KEY OFFSET ' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2110-EXIT.\n\n      *  PARSE KEY LENGTH\n           MOVE SPACES TO WS-WORK.\n           ADD  1 TO PSUB.\n           MOVE 1 TO WSUB.\n           PERFORM VARYING PSUB FROM PSUB BY 1\n                   UNTIL PSUB > 20 OR\n                   WSUB > 5  OR\n                   CC-KEY-OFF-LEN(PSUB:1) = ' '\n               MOVE CC-KEY-OFF-LEN(PSUB:1) TO WS-WORK (WSUB:1)\n               ADD 1 TO WSUB\n           END-PERFORM.\n\n      * MAKE KEY LENGTH NUMERIC\n           SUBTRACT 1 FROM WSUB.\n\n           MOVE 5 TO KSUB.\n           PERFORM VARYING WSUB FROM WSUB BY -1\n                   UNTIL WSUB < 1\n               MOVE WS-WORK (WSUB:1) TO KEY-LENGTH(KSUB:1)\n               SUBTRACT 1 FROM KSUB\n           END-PERFORM.\n\n           IF KEY-LENGTH NOT NUMERIC OR\n              KEY-LENGTH = ZERO\n               DISPLAY '>>> WS WORK    = ' WS-WORK ' LEN= ' WSUB\n               DISPLAY '>>> KEY LENGTH = ' KEY-LENGTH\n               MOVE 'ERROR: NON-NUMERIC KEY LENGTH ' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2110-EXIT.\n\n           ADD 1 TO KEY-CNT.\n           IF KEY-CNT > MAX-KEY-SPLIT\n               STRING 'ERROR: MORE THAN MAX ' DELIMITED BY SIZE\n                      MAX-KEY-SPLIT       DELIMITED BY SIZE\n                      ' KEY CARDS. '      DELIMITED BY SIZE\n                         INTO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2110-EXIT.\n\n           MOVE KEY-LENGTH TO TKEY-LENGTH(KEY-CNT)\n           MOVE KEY-OFFSET TO TKEY-OFFSET(KEY-CNT).\n\n       A2110-EXIT.\n           EXIT.\n\n           EJECT\n      ****************************************************************\n      *  READ ALL MASK CARDS\n      *  SET A MASK INDICATOR IN THE MASK TABLE FOR EACH BYTE MASKED\n      ****************************************************************\n       A2120-EDIT-MASK-CARD.\n      *  PARSE OFFSET - IT SHOULD END WITH A COMMA\n           MOVE SPACES TO WS-WORK.\n           MOVE 1 TO WSUB.\n           PERFORM VARYING PSUB FROM 1 BY 1\n                   UNTIL PSUB > 20 OR\n                   WSUB > 5  OR\n                   CC-MASK-OFF-LEN(PSUB:1) = ',' OR ' '\n               MOVE CC-MASK-OFF-LEN(PSUB:1) TO WS-WORK (WSUB:1)\n               ADD 1 TO WSUB\n           END-PERFORM.\n\n           IF CC-MASK-OFF-LEN(PSUB:1) NOT = ','\n               MOVE 'ERROR: INVALID MASK FORMAT ' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2120-EXIT.\n\n           MOVE ZERO TO WS-WORK-NBR.\n           IF WS-WORK(5:1) = SPACE\n             IF WS-WORK(4:1) = SPACE\n               IF WS-WORK(3:1) = SPACE\n                 IF WS-WORK(2:1) = SPACE\n                   IF WS-WORK(1:1) = SPACE\n                       MOVE  0 TO WS-WORK-NBR\n                   ELSE\n                       MOVE WS-WORK(1:1) TO WS-WORK-NBRX(5:1)\n                 ELSE\n                     MOVE WS-WORK(1:2) TO WS-WORK-NBRX(4:2)\n               ELSE\n                   MOVE WS-WORK(1:3) TO WS-WORK-NBRX(3:3)\n             ELSE\n                 MOVE WS-WORK(1:4) TO WS-WORK-NBRX(2:4)\n           ELSE\n               MOVE WS-WORK(1:5) TO WS-WORK-NBRX(1:5).\n\n           IF WS-WORK-NBR NOT NUMERIC\n               DISPLAY 'MASK OFFSET NOT NUMERIC : ' WS-WORK-NBRX\n               MOVE 0 TO WS-WORK-NBR\n               MOVE 'ERROR: MASK OFFSET NOT NUMERIC ' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2120-EXIT\n           ELSE\n           IF WS-WORK-NBR > MASK-TABLE-MAX\n               MOVE 'ERROR: MASK OFFSET TOO LARGE - MAX IS 12200'\n                           TO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2120-EXIT\n           ELSE\n               MOVE WS-WORK-NBR TO WS-OFFSET.\n\n      *  PARSE LENGTH - IT SHOULD END WITH A SPACE\n           MOVE SPACES TO WS-WORK.\n           MOVE 1 TO WSUB.\n           ADD  1 TO PSUB.\n           PERFORM VARYING PSUB FROM PSUB BY 1\n                   UNTIL PSUB > 72 OR\n                   WSUB > 5  OR\n                   CC-MASK-OFF-LEN(PSUB:1) =  ' '\n               MOVE CC-MASK-OFF-LEN(PSUB:1) TO WS-WORK (WSUB:1)\n               ADD 1 TO WSUB\n           END-PERFORM.\n\n           IF CC-MASK-OFF-LEN(PSUB:1) NOT = ' '\n               MOVE 'ERROR: MASK LENGTH INVALID'\n                           TO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2120-EXIT.\n\n           MOVE ZERO TO WS-WORK-NBR.\n           IF WS-WORK(5:1) = SPACE\n             IF WS-WORK(4:1) = SPACE\n               IF WS-WORK(3:1) = SPACE\n                 IF WS-WORK(2:1) = SPACE\n                   IF WS-WORK(1:1) = SPACE\n                       MOVE  0 TO WS-WORK-NBR\n                   ELSE\n                       MOVE WS-WORK(1:1) TO WS-WORK-NBRX(5:1)\n                 ELSE\n                     MOVE WS-WORK(1:2) TO WS-WORK-NBRX(4:2)\n               ELSE\n                   MOVE WS-WORK(1:3) TO WS-WORK-NBRX(3:3)\n             ELSE\n                 MOVE WS-WORK(1:4) TO WS-WORK-NBRX(2:4)\n           ELSE\n               MOVE WS-WORK(1:5) TO WS-WORK-NBRX(1:5).\n\n           IF WS-WORK-NBR NOT NUMERIC\n               DISPLAY 'MASK LENGTH NOT NUMERIC : ' WS-WORK-NBRX\n               MOVE 0 TO WS-WORK-NBR\n               MOVE 'ERROR: MASK LENGTH NOT NUMERIC'\n                           TO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2120-EXIT\n           ELSE\n           IF WS-WORK-NBR > MASK-TABLE-MAX\n               MOVE 'ERROR: MASK LENGTH TOO LARGE - MAX IS 12200'\n                           TO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2120-EXIT\n           ELSE\n               MOVE WS-WORK-NBR TO WS-MASK-LENGTH.\n\n           MOVE WS-OFFSET TO WSUB.\n           PERFORM VARYING PSUB FROM 1 BY 1\n                   UNTIL PSUB > WS-MASK-LENGTH OR\n                         WSUB > MASK-TABLE-MAX\n               MOVE 'Y' TO MASK-POS (WSUB)\n               ADD 1 TO WSUB\n           END-PERFORM.\n\n       A2120-EXIT.\n           EXIT.\n\n      *  FILE NAMES ARE DISPLAYED IN THE SUMMARY REPORT\n      *  THE ENTIRE LINE IS SHOWN INCLUDING COMMENTS\n      *  IF THERE IS MORE THAN ONE FILE1 CARD, THE FIRST ONE IS KEPT\n      *  IF THERE IS MORE THAN ONE FILE2 CARD, THE FIRST ONE IS KEPT\n       A2130-EDIT-FILE-CARD.\n      *   FILE1=XXXX.XXXX.XXXX     COMMENTS\n      *   FILE2=XXXX.XXXX.XXXX     COMMENTS\n           IF NOT VALID-CC-FILE-TYPE\n               MOVE 'ERROR: INVALID FILE TYPE'\n                           TO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2130-EXIT\n           END-IF.\n\n           IF CC-FILE-ID-1\n              IF FILE-NAME-1 = SPACE\n                 MOVE CC-FILE-NAME TO FILE-NAME-1\n              ELSE\n                 GO TO A2130-EXIT\n              END-IF\n           END-IF.\n\n           IF CC-FILE-ID-2\n              IF FILE-NAME-2 = SPACE\n                 MOVE CC-FILE-NAME TO FILE-NAME-2\n              ELSE\n                 GO TO A2130-EXIT\n              END-IF\n           END-IF.\n\n       A2130-EXIT.\n           EXIT.\n\n       A2140-EDIT-MAX-CARD.\n      *    MAXDIFF=999999999\n\n           MOVE ZERO TO WS-WORK-MAX-NBR.\n           IF CC-MAX-DIFF(9:1) = SPACE\n             IF CC-MAX-DIFF(8:1) = SPACE\n               IF CC-MAX-DIFF(7:1) = SPACE\n                 IF CC-MAX-DIFF(6:1) = SPACE\n                   IF CC-MAX-DIFF(5:1) = SPACE\n                     IF CC-MAX-DIFF(4:1) = SPACE\n                       IF CC-MAX-DIFF(3:1) = SPACE\n                         IF CC-MAX-DIFF(2:1) = SPACE\n                           IF CC-MAX-DIFF(1:1) = SPACE\n                               MOVE  999999999 TO WS-WORK-MAX-NBR\n                           ELSE\n                               MOVE CC-MAX-DIFF(1:1) TO\n                                          WS-WORK-MAX-NBRX(9:1)\n                         ELSE\n                             MOVE CC-MAX-DIFF(1:2) TO\n                                          WS-WORK-MAX-NBRX(8:2)\n                       ELSE\n                           MOVE CC-MAX-DIFF(1:3) TO\n                                          WS-WORK-MAX-NBRX(7:3)\n                     ELSE\n                         MOVE CC-MAX-DIFF(1:4) TO\n                                          WS-WORK-MAX-NBRX(6:4)\n                   ELSE\n                       MOVE CC-MAX-DIFF(1:5) TO\n                                        WS-WORK-MAX-NBRX(5:5)\n                 ELSE\n                     MOVE CC-MAX-DIFF(1:6) TO\n                                      WS-WORK-MAX-NBRX(4:6)\n               ELSE\n                   MOVE CC-MAX-DIFF(1:7) TO\n                                    WS-WORK-MAX-NBRX(3:7)\n             ELSE\n                 MOVE CC-MAX-DIFF(1:8) TO\n                                  WS-WORK-MAX-NBRX(2:8)\n           ELSE\n               MOVE CC-MAX-DIFF(1:9) TO\n                                WS-WORK-MAX-NBRX(1:9).\n\n           IF WS-WORK-MAX-NBR NOT NUMERIC\n               DISPLAY 'MAXDIFF NOT NUMERIC = ' WS-WORK-MAX-NBRX\n               MOVE 'ERROR: MAXDIFF NOT NUMERIC'\n                           TO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               MOVE 999999999 TO WS-WORK-MAX-NBR.\n           IF CC-TYPE-MAXDIFF\n               MOVE WS-WORK-MAX-NBR TO WS-MAX-DIFF.\n           IF CC-TYPE-MAXREAD\n               MOVE WS-WORK-MAX-NBR TO WS-MAX-READ.\n       A2140-EXIT.\n           EXIT.\n\n      *****************************************************************\n      *  VALID VALUES ARE 'CHAR'  'HEX '\n      *  NO VALUE DEFAULTS TO CHAR\n      *****************************************************************\n       A2150-EDIT-RPT-CARD.\n\n           IF VALID-CC-REPORT-TYPE\n               MOVE CC-REPORT-TYPE TO REPORT-TYPE\n           ELSE\n               MOVE 'ERROR: INVALID REPORT TYPE'\n                           TO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT.\n       A2150-EXIT.\n           EXIT.\n           EJECT\n      ****************************************************************\n      *  READ ALL SIGNMASK CARDS\n      *  SET A SIGNMASK INDICATOR IN THE MASK TABLE FOR EACH BYTE MASKED\n      *  LENGTH OF THIS MASK IS ALWAYS 1\n      ****************************************************************\n       A2160-EDIT-SIGNMASK-CARD.\n      *  PARSE OFFSET - IT SHOULD END WITH A SPACE OR ',1'\n           MOVE SPACES TO WS-WORK.\n           MOVE 1 TO WSUB.\n           PERFORM VARYING PSUB FROM 1 BY 1\n                   UNTIL PSUB > 20 OR\n                   WSUB > 5  OR\n                   CC-SIGNMASK-OFF(PSUB:1) = ' ' OR ','\n               MOVE CC-SIGNMASK-OFF(PSUB:1) TO WS-WORK (WSUB:1)\n               ADD 1 TO WSUB\n           END-PERFORM.\n\n           IF CC-SIGNMASK-OFF(PSUB:1) NOT = ' ' AND ','\n               MOVE 'ERROR: INVALID SIGNMASK FORMAT ' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2160-EXIT.\n\n           MOVE ZERO TO WS-WORK-NBR.\n           IF WS-WORK(5:1) = SPACE\n             IF WS-WORK(4:1) = SPACE\n               IF WS-WORK(3:1) = SPACE\n                 IF WS-WORK(2:1) = SPACE\n                   IF WS-WORK(1:1) = SPACE\n                       MOVE  0 TO WS-WORK-NBR\n                   ELSE\n                       MOVE WS-WORK(1:1) TO WS-WORK-NBRX(5:1)\n                 ELSE\n                     MOVE WS-WORK(1:2) TO WS-WORK-NBRX(4:2)\n               ELSE\n                   MOVE WS-WORK(1:3) TO WS-WORK-NBRX(3:3)\n             ELSE\n                 MOVE WS-WORK(1:4) TO WS-WORK-NBRX(2:4)\n           ELSE\n               MOVE WS-WORK(1:5) TO WS-WORK-NBRX(1:5).\n\n           IF WS-WORK-NBR NOT NUMERIC\n               DISPLAY 'SIGNMASK OFFSET NOT NUMERIC : ' WS-WORK-NBRX\n               MOVE 0 TO WS-WORK-NBR\n               MOVE 'ERROR: SIGNMASK OFFSET NOT NUMERIC ' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2160-EXIT\n           ELSE\n           IF WS-WORK-NBR > MASK-TABLE-MAX\n               MOVE 'ERROR: MASK OFFSET TOO LARGE - MAX IS 12200'\n                           TO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2160-EXIT\n           ELSE\n               MOVE WS-WORK-NBR TO WS-OFFSET.\n\n      *  LENGTH IS ALWAYS 1\n\n           MOVE WS-OFFSET TO WSUB.\n           MOVE 'S' TO MASK-POS (WSUB).\n\n\n       A2160-EXIT.\n           EXIT.\n\n           EJECT\n      ****************************************************************\n      *  READ ALL NULLMASK CARDS\n      *  SET A NULLMASK INDICATOR IN THE MASK TABLE FOR EACH BYTE MASKED\n      *  LENGTH OF THIS MASK IS ALWAYS 1\n      ****************************************************************\n       A2170-EDIT-NULLMASK-CARD.\n      *  PARSE OFFSET - IT SHOULD END WITH A SPACE OR ',1'\n           MOVE SPACES TO WS-WORK.\n           MOVE 1 TO WSUB.\n           PERFORM VARYING PSUB FROM 1 BY 1\n                   UNTIL PSUB > 20 OR\n                   WSUB > 5  OR\n                   CC-NULLMASK-OFF(PSUB:1) = ' ' OR ','\n               MOVE CC-NULLMASK-OFF(PSUB:1) TO WS-WORK (WSUB:1)\n               ADD 1 TO WSUB\n           END-PERFORM.\n\n           IF CC-NULLMASK-OFF(PSUB:1) NOT = ' ' AND ','\n               MOVE 'ERROR: INVALID NULLMASK FORMAT ' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2170-EXIT.\n\n           MOVE ZERO TO WS-WORK-NBR.\n           IF WS-WORK(5:1) = SPACE\n             IF WS-WORK(4:1) = SPACE\n               IF WS-WORK(3:1) = SPACE\n                 IF WS-WORK(2:1) = SPACE\n                   IF WS-WORK(1:1) = SPACE\n                       MOVE  0 TO WS-WORK-NBR\n                   ELSE\n                       MOVE WS-WORK(1:1) TO WS-WORK-NBRX(5:1)\n                 ELSE\n                     MOVE WS-WORK(1:2) TO WS-WORK-NBRX(4:2)\n               ELSE\n                   MOVE WS-WORK(1:3) TO WS-WORK-NBRX(3:3)\n             ELSE\n                 MOVE WS-WORK(1:4) TO WS-WORK-NBRX(2:4)\n           ELSE\n               MOVE WS-WORK(1:5) TO WS-WORK-NBRX(1:5).\n\n           IF WS-WORK-NBR NOT NUMERIC\n               DISPLAY 'NULLMASK OFFSET NOT NUMERIC : ' WS-WORK-NBRX\n               MOVE 0 TO WS-WORK-NBR\n               MOVE 'ERROR: NULLMASK OFFSET NOT NUMERIC ' TO\n                              CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2170-EXIT\n           ELSE\n           IF WS-WORK-NBR > MASK-TABLE-MAX\n               MOVE 'ERROR: MASK OFFSET TOO LARGE - MAX IS 12200'\n                           TO CARD-ERROR-REASON\n               PERFORM A2190-CARD-ERROR THRU A2190-EXIT\n               GO TO A2170-EXIT\n           ELSE\n               MOVE WS-WORK-NBR TO WS-OFFSET.\n\n      *  LENGTH IS ALWAYS 1\n\n           MOVE WS-OFFSET TO WSUB.\n           MOVE '0' TO MASK-POS (WSUB).\n\n\n       A2170-EXIT.\n           EXIT.\n\n           EJECT\n      **************************************************************\n      * DISPLAY HELP FOR CONTROL CARD ERRORS\n      **************************************************************\n       A2190-CARD-ERROR.\n\n           MOVE SPACES TO DISP-CC-REC-LINE.\n           MOVE '----+----1----+----2----+----3----+----4----+----5'\n                      TO DISP-CC-REC.\n           DISPLAY DISP-CC-REC-LINE.\n\n           DISPLAY 'THE PREVIOUS CONTROL CARD HAS AN ERROR'.\n           DISPLAY CARD-ERROR-REASON.\n           DISPLAY '   '\n           MOVE SPACES TO CARD-ERROR-REASON.\n\n           IF CC-ERROR-FOUND\n               GO TO A2190-EXIT.\n\n           PERFORM A2200-PRINT-CARD-HELP THRU A2200-EXIT.\n           MOVE 'Y' TO CC-ERROR-FOUND-SW.\n       A2190-EXIT.\n            EXIT.\n\n            EJECT\n      **************************************************************\n      * DISPLAY HELP FOR CONTROL CARDS\n      **************************************************************\n       A2200-PRINT-CARD-HELP.\n\n           IF HELP-PRINTED\n               GO TO A2200-EXIT.\n\n           DISPLAY '                      '.\n           DISPLAY '                      '.\n           DISPLAY 'CONTROL CARD SETUP INFORMATION'.\n           DISPLAY '                      '.\n\n           DISPLAY '  VALID CONTROL CARDS ARE:'\n           DISPLAY '    MAXREAD=999999999  MAX NUMBER OF INPUT '\n                        'RECORDS TO READ BEFORE ENDING PROGRAM'\n           DISPLAY '    MAXDIFF=999999999  MAX NUMBER OF DIFF'\n                        'ERENCES TO PRINT'\n           DISPLAY '    RPT=CHAR           PRINT DATA IN CHARACTER '\n                        'FORMAT  '\n           DISPLAY '    RPT=HEX      OR    PRINT DATA IN HEX FORMAT'\n                        '        '\n           DISPLAY '    FILE1=AAAA.BBBBB.CCCC(MBR1)     FILE 1 NAME'\n                        ' AND COMMENTS AFTER FILE NAME'\n           DISPLAY '    FILE2=AAAA.BBBBB.CCCC(MBR2)     FILE 2 NAME'\n                        ' AND COMMENTS AFTER FILE NAME'\n           DISPLAY '    KEY=99999,88888 WHERE 99999 IS OFFSET '\n                        'POSITION AND 88888 IS LENGTH OF KEY '\n           DISPLAY '                  MULTIPLE KEY RECORDS ARE '\n                        'ALLOWED.'.\n           DISPLAY '    MASK=99999,88888 WHERE 99999 IS OFFSET '\n                        'POSITION AND 88888 IS LENGTH OF MASK'\n           DISPLAY '    SIGNMASK=99999   WHERE 99999 IS OFFSET '\n                        'POSITION AND ONLY SIGN WILL BE MASKED'\n           DISPLAY '          THIS WILL CAUSE A POSITIVE VALUE '\n                        'AND AN UNSIGNED VALUE TO MATCH '\n           DISPLAY '   '\n           DISPLAY '    NULLMASK=99999   WHERE 99999 IS OFFSET '\n                        'POSITION AND ONLY NULLS WILL BE MASKED'\n           DISPLAY '          THIS WILL CAUSE A SPACE AND LOW-V'\n                        'ALUES TO MATCH                 '\n           DISPLAY '   '\n           DISPLAY '    *----  AN ASTERISK IN FIRST BYTE MAKES THE'\n                        ' CARD A COMMENT CARD'\n           DISPLAY '   '\n           DISPLAY '  THE FIRST SPACE ON A LINE ENDS DATA, THE '\n                      'REST OF THE LINE MAY BE USED FOR COMMENTS'\n           DISPLAY '   '\n           DISPLAY '  NUMERIC FIELDS CAN BE LEFT JUSTIFIED'\n           DISPLAY '  ALL CARDS ARE OPTIONAL AND MAY BE PLACED IN '\n                      'ANY ORDER EXCEPT KEY CARDS.'\n           DISPLAY '   '.\n           DISPLAY '  KEY CARDS MUST BE PLACED IN THE SORT SEQUENCE.'\n           DISPLAY '    THE FOLLOWING EXAMPLE KEY SEQUENCE CORRESPONDS'\n           DISPLAY '    TO THIS SORT SEQUENCE. (4 BYTES ADDED'\n                        ' TO OFFSETS BECAUSE OF VARIABLE LENGTH)'\n           DISPLAY '        SORT FIELDS=(5,8,CH,A,29,10,CH,A,15,3,CH,A)'\n           DISPLAY '   '.\n           DISPLAY '  CARD EXAMPLES:'\n           DISPLAY '   '.\n           DISPLAY '    FILE1=XXXX.XXXX.AAAA    FILE1 NAME'\n           DISPLAY '    FILE2=XXXX.XXXX.BBBB    FILE2 NAME'\n           DISPLAY '    KEY=1,8   '\n           DISPLAY '    KEY=25,10 '\n           DISPLAY '    KEY=11,3  '\n           DISPLAY '    MAXDIFF=100        MAX RECORDS TO PRINT'\n           DISPLAY '    MAXREAD=5000       MAX RECORDS TO READ'\n           DISPLAY '    RPT=HEX            PRINT DIFFERENCES IN HEX'\n           DISPLAY '    MASK=52,6          LAST-UPD-DATE'\n           DISPLAY '    MASK=143,60        CL-PREFIXES '\n           DISPLAY '    SIGNMASK=35        + AND UNSIGNED VALUE'\n           DISPLAY '    SIGNMASK=42        MASK ONLY SIGN NOT VALUE'\n           DISPLAY '    NULLMASK=53        SPACE AND LOW VALUES '\n           DISPLAY '    NULLMASK=54        OTHER VALUES MUST MATCH '\n           DISPLAY '   '.\n           DISPLAY '   '.\n           MOVE 'Y' TO HELP-PRINTED-SW.\n\n       A2200-EXIT.\n            EXIT.\n            EJECT\n      **************************************************************\n      * DISPLAY HELP FOR RUNNING THE PROGRAM\n      **************************************************************\n       A2210-PRINT-GENERAL-HELP.\n\n           DISPLAY '          '.\n           DISPLAY 'PROGRAM JXCU001 WILL COMPARE FILES, PRINT T'\n                        'HE DIFFERENCES IN A REPORT AND '\n           DISPLAY 'WRITE ALL RECORDS THAT DIFFER TO OUTPUT FIL'\n                   'ES SO THAT THEY CAN BE FURTHER ANALYZED.'\n           DISPLAY '                      '.\n           DISPLAY '\"INSERT FILE 1\" HAS ALL RECORDS ON FILE 1 '\n                   'WHICH DID NOT MATCH ON KEY TO A RECORD IN FILE 2'\n           DISPLAY '\"INSERT FILE 2\" HAS ALL RECORDS ON FILE 2 '\n                   'WHICH DID NOT MATCH ON KEY TO A RECORD IN FILE 1'\n           DISPLAY '                      '.\n           DISPLAY '\"DIFF FILE 1\" HAS ALL RECORDS ON FILE 1 WHICH '\n                   'MATCHED ON KEY TO A RECORD IN FILE 2, BUT '\n           DISPLAY '  THE REST OF THE RECORD CONTAINS DIFFERENCES.'\n           DISPLAY '\"DIFF FILE 2\" HAS THE EQUIVALENT RECORD FROM '\n                   'FILE 2 THAT DIFFERED.'\n           DISPLAY '                      '.\n           DISPLAY 'THE INPUT FILES MUST BE SORTED BY THE KEY '\n                      'LENGTH SPECIFIED IN THE CARD FILE INPUT '\n           DISPLAY '  AND THEY MUST BE VB WITH AN LRECL OF 12154.'\n           DISPLAY 'THIS ALLOWS THE PROGRAM TO COMPARE ANY SIZE '\n                   'RECORD.'\n           DISPLAY 'REMEMBER TO ADD 4 TO ALL OFFSETS IN THE SORT '\n                   'BECAUSE OF THE VARIABLE LENGTH.'\n           DISPLAY '                      '.\n       A2210-EXIT.\n            EXIT.\n\n       EJECT\n      **************************************************************\n      * TERMINATION\n      **************************************************************\n       A9000-TERMINATION.\n\n      *------------------------------------------------------------*\n      *    DISPLAY VARIOUS COUNTS                                  *\n      *------------------------------------------------------------*\n           DISPLAY '*************************************************'.\n           DISPLAY ' '.\n\n           IF LINE-CNT > 30\n               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT.\n\n           MOVE SPACES TO REPORT-TRLR-1.\n           MOVE 'INPUT RECORD COUNTS'    TO RT-TITLE.\n           MOVE 2 TO LINE-SPACING.\n           MOVE REPORT-TRLR-1 TO DIFF-REPORT-REC.\n           DISPLAY ' '.\n           DISPLAY REPORT-TRLR-1.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'FILE 1 RECORDS READ'    TO RT-LITERAL.\n           MOVE FILE-1-READ-CNT          TO RT-COUNT.\n           MOVE FILE-NAME-1              TO RT-FILE-NAME.\n           MOVE 2 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY ' '.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'FILE 2 RECORDS READ'    TO RT-LITERAL.\n           MOVE FILE-2-READ-CNT          TO RT-COUNT.\n           MOVE FILE-NAME-2              TO RT-FILE-NAME.\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'CONTROL CARDS READ'    TO RT-LITERAL.\n           MOVE FILE-CARDS-CNT           TO RT-COUNT.\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE SPACES TO REPORT-TRLR-1.\n           MOVE 'COMPARE STATISTICS'     TO RT-TITLE.\n           MOVE 2 TO LINE-SPACING.\n           MOVE REPORT-TRLR-1 TO DIFF-REPORT-REC.\n           DISPLAY ' '.\n           DISPLAY REPORT-TRLR-1.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'MAX RECORD LENGTH COMPARED.' TO RT-LITERAL.\n           MOVE 'EXCLUDE TRAILING SPACES/LOW VALUES '\n                                              TO RT-LITERAL(30:35)\n           MOVE MAX-REC-LENGTH-USED       TO RT-COUNT.\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'TOTAL KEY LENGTH USED FOR COMPARES' TO RT-LITERAL.\n           MOVE KEY-LENGTH                TO RT-COUNT.\n           MOVE 2 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY ' '.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 1 TO LINE-SPACING.\n           PERFORM VARYING KSUB FROM 1 BY 1\n                   UNTIL KSUB > KEY-CNT\n               MOVE KSUB              TO RT-KEY-SEQ\n               MOVE TKEY-OFFSET(KSUB) TO RT-KEY-OFFSET\n               MOVE TKEY-LENGTH(KSUB) TO RT-KEY-LENGTH\n               MOVE REPORT-TRLR-3 TO DIFF-REPORT-REC\n               DISPLAY REPORT-TRLR-3\n               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n           END-PERFORM.\n\n           MOVE 'FILE 1 RECORDS INSERTED' TO RT-LITERAL.\n           MOVE FILE-1-INS-CNT            TO RT-COUNT.\n           MOVE 2 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY ' '.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'FILE 2 RECORDS INSERTED' TO RT-LITERAL.\n           MOVE FILE-2-INS-CNT            TO RT-COUNT.\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'RECORDS THAT MATCHED WITH NO MASKS' TO RT-LITERAL.\n           MOVE MATCH-CNT                 TO RT-COUNT.\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'RECORDS THAT MATCHED WITH MASKS' TO RT-LITERAL.\n           MOVE MASK-ONLY-CNT             TO RT-COUNT.\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'RECORDS WITH DIFFERENT DATA' TO RT-LITERAL.\n           MOVE DIFF-CNT                  TO RT-COUNT.\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'FILE 1 DIFF WRITTEN' TO RT-LITERAL.\n           MOVE FILE-1D-WRITE-CNT        TO RT-COUNT.\n           MOVE 2 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY ' '.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'FILE 2 DIFF WRITTEN' TO RT-LITERAL.\n           MOVE FILE-2D-WRITE-CNT        TO RT-COUNT.\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'FILE 1 INSERTS WRITTEN' TO RT-LITERAL.\n           MOVE FILE-1E-WRITE-CNT        TO RT-COUNT.\n           MOVE 2 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY ' '.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE 'FILE 2 INSERTS WRITTEN' TO RT-LITERAL.\n           MOVE FILE-2E-WRITE-CNT        TO RT-COUNT.\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-2.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE SPACES TO DIFF-REPORT-REC.\n           MOVE 2 TO LINE-SPACING.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           DISPLAY '    '.\n\n           IF MASK-ONLY-CNT = ZERO AND\n                DIFF-CNT = ZERO\n               GO TO A9000-PRINT-FOOTER.\n\n      * PRINT TOTAL DIFFERENCES SUMMARY\n           MOVE SPACES TO REPORT-TRLR-1.\n           MOVE 'DIFFERENCES BY POSITION' TO RT-TITLE.\n           MOVE 2 TO LINE-SPACING.\n           MOVE REPORT-TRLR-1 TO DIFF-REPORT-REC.\n           DISPLAY ' '.\n           DISPLAY REPORT-TRLR-1.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           COMPUTE WSUB = MASK-TABLE-MAX / 100.\n           MOVE 1 TO LINE-SPACING.\n           MOVE SPACES TO REPORT-TRLR-4.\n           PERFORM VARYING PSUB FROM 1 BY 1\n                   UNTIL PSUB > WSUB\n               IF TBL-DIFF-CNT (PSUB) > 0\n                   MOVE TBL-DIFF-CNT (PSUB) TO TR-COUNT\n                   COMPUTE WS-START-POS = (PSUB * 100) - 99\n                   COMPUTE WS-END-POS   = (PSUB * 100)\n                   MOVE WS-START-POS        TO TR-START-POS\n                   MOVE WS-END-POS          TO TR-END-POS\n                   MOVE '-'                 TO TR-HYPHEN\n                   MOVE REPORT-TRLR-4 TO DIFF-REPORT-REC\n                   DISPLAY REPORT-TRLR-4\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n               END-IF\n           END-PERFORM.\n\n      * PRINT TOTAL DIFFERENCES MASK\n           IF LINE-CNT NOT = HEADER-LINE-CNT\n              MOVE REPORT-RULER TO DIFF-REPORT-REC\n              MOVE 2 TO LINE-SPACING\n              PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           COMPUTE WSUB = MASK-TABLE-MAX / 100.\n           MOVE 1 TO LINE-SPACING.\n\n           PERFORM VARYING PSUB FROM 1 BY 1\n                   UNTIL PSUB > WSUB\n               IF (TDIFF-100 (PSUB) NOT = SPACES) OR PSUB = 1\n                   COMPUTE WS-START-POS = (PSUB * 100) - 99\n                   COMPUTE WS-END-POS   = (PSUB * 100)\n                   MOVE WS-START-POS     TO DT-START-POS\n                   MOVE WS-END-POS       TO DT-END-POS\n                   MOVE '-'              TO DT-HYPHEN\n                   MOVE ' DIFF '         TO DT-FILE-ID\n                   MOVE TDIFF-100 (PSUB) TO DT-100-BYTES\n                   MOVE 'DIFFERENCES'    TO DT-FILE-ID\n                   MOVE DETAIL-2 TO DIFF-REPORT-REC\n                   MOVE 1 TO LINE-SPACING\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n                   MOVE SPACES TO DETAIL-2\n               END-IF\n           END-PERFORM.\n\n      * PRINT DIFFERENCE CHARACTER KEY\n           MOVE SPACES TO REPORT-TRLR-1.\n           MOVE 'KEY TO DIFFERENCE CHARACTERS'  TO RT-TITLE.\n           MOVE 2 TO LINE-SPACING.\n           MOVE REPORT-TRLR-1 TO DIFF-REPORT-REC.\n           DISPLAY ' '.\n           DISPLAY REPORT-TRLR-1.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE SPACES TO REPORT-TRLR-5.\n           MOVE WS-SHOW-DIFF                     TO RT-DIFF-CHAR\n           MOVE 'DIFFERENCE IN THIS POSITION'    TO RT-DIFF-DESC\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-5 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-5.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE WS-SHOW-MASK                     TO RT-DIFF-CHAR\n           MOVE 'DIFFERENCE MASKED IN THIS POSITION'  TO RT-DIFF-DESC\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-5 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-5.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE WS-SHOW-SIGNMASK                 TO RT-DIFF-CHAR\n           MOVE 'SIGN MASKED IN THIS POSITION'   TO RT-DIFF-DESC\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-5 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-5.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n           MOVE WS-SHOW-NULLMASK                 TO RT-DIFF-CHAR\n           MOVE 'NULL MASKED IN THIS POSITION'   TO RT-DIFF-DESC\n           MOVE 1 TO LINE-SPACING.\n           MOVE REPORT-TRLR-5 TO DIFF-REPORT-REC.\n           DISPLAY REPORT-TRLR-5.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n       A9000-PRINT-FOOTER.\n\n           PERFORM Y2050-FOOTER THRU Y2050-EXIT.\n\n      *------------------------------------------------------------*\n      *    CLOSE THE FILES                                         *\n      *------------------------------------------------------------*\n           CLOSE FILE-1\n                 FILE-2\n                 FILE-1-DIFF\n                 FILE-2-DIFF\n                 FILE-1-INS\n                 FILE-2-INS\n                 DIFF-REPORT-FILE.\n       A9000-EXIT.\n           EXIT.\n\n           EJECT\n      **************************************************************\n      *  COMPARE RECORDS.\n      *  IF THE ENTIRE RECORD DOES NOT MATCH, THEN CHECK IT IN\n      *  100 BYTE CHUNKS.\n      **************************************************************\n       C1000-COMPARE-RECS.\n\n      *   IF THE MAX NUMBER OF RECORDS HAVE BEEN READ, END\n           IF FILE-1-READ-CNT >  WS-MAX-READ OR\n              FILE-2-READ-CNT >  WS-MAX-READ\n               MOVE 'Y' TO END-OF-FILE-1-SW\n               MOVE 'Y' TO END-OF-FILE-2-SW\n               GO TO C1000-EXIT.\n\n           IF END-OF-FILE-2\n               PERFORM E1000-FILE-1-INSERT THRU E1000-EXIT\n                   UNTIL END-OF-FILE-1 OR\n                         FILE-1-READ-CNT >  WS-MAX-READ\n                   GO TO C1000-EXIT.\n\n           IF END-OF-FILE-1\n               PERFORM E2000-FILE-2-INSERT THRU E2000-EXIT\n                   UNTIL END-OF-FILE-2 OR\n                         FILE-2-READ-CNT >  WS-MAX-READ\n                   GO TO C1000-EXIT.\n\n           IF WS-F1-KEY(1:KEY-LENGTH) = WS-F2-KEY(1:KEY-LENGTH)\n               IF WS-F1-REC = WS-F2-REC\n                   ADD 1 TO MATCH-CNT\n                   PERFORM X1000-READ-FILE-1 THRU X1000-EXIT\n                   PERFORM X2000-READ-FILE-2 THRU X2000-EXIT\n                   GO TO C1000-EXIT\n               ELSE\n                   PERFORM D1000-FIND-DIFFERENCE THRU D1000-EXIT\n                   GO TO C1000-EXIT.\n\n           IF WS-F1-KEY(1:KEY-LENGTH) < WS-F2-KEY(1:KEY-LENGTH)\n               PERFORM E1000-FILE-1-INSERT THRU E1000-EXIT\n                   UNTIL END-OF-FILE-1 OR\n                         FILE-1-READ-CNT >  WS-MAX-READ OR\n                        (WS-F1-KEY(1:KEY-LENGTH) NOT <\n                                         WS-F2-KEY(1:KEY-LENGTH))\n                   GO TO C1000-EXIT.\n\n           IF WS-F1-KEY(1:KEY-LENGTH) > WS-F2-KEY(1:KEY-LENGTH)\n               PERFORM E2000-FILE-2-INSERT THRU E2000-EXIT\n                   UNTIL END-OF-FILE-2 OR\n                         FILE-2-READ-CNT >  WS-MAX-READ OR\n                        (WS-F1-KEY(1:KEY-LENGTH) NOT >\n                                         WS-F2-KEY(1:KEY-LENGTH))\n                   GO TO C1000-EXIT.\n\n       C1000-EXIT.\n           EXIT.\n           EJECT\n      ****************************************************************\n      *  FIND THE POSITIONS OF THE DIFFERENCES IN THE RECORDS\n      ****************************************************************\n       D1000-FIND-DIFFERENCE.\n\n           IF LINE-CNT > 50\n               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT.\n\n\n      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS\n      *  WHICH IS NOT SPACES AND NOT LOW-VALUES\n           COMPUTE WSUB = MASK-TABLE-MAX / 100.\n           PERFORM VARYING PSUB FROM WSUB BY -1\n                   UNTIL PSUB < 1 OR\n                        (WS-F1-100 (PSUB) NOT = SPACES AND\n                                                LOW-VALUES) OR\n                        (WS-F2-100 (PSUB) NOT = SPACES AND\n                                                LOW-VALUES)\n           END-PERFORM.\n\n           IF PSUB < 1\n               MOVE 1 TO MAX-100-BYTES\n           ELSE\n               MOVE PSUB TO MAX-100-BYTES.\n\n      *  FIND THE POSITION OF EACH DIFFERENCE\n           MOVE SPACES TO DIFFERENCE-INDS.\n           MOVE ZERO TO WS-DIFF-BYTE-CNT.\n           PERFORM D2000-100-BYTE-DIFF THRU D2000-EXIT\n               VARYING PSUB FROM 1 BY 1\n               UNTIL PSUB > MAX-100-BYTES.\n\n      *  IF ALL THE DIFFERENCES ARE MASKED DON'T PRINT\n           IF WS-DIFF-BYTE-CNT = ZERO\n               ADD 1 TO MASK-ONLY-CNT\n               PERFORM X1000-READ-FILE-1 THRU X1000-EXIT\n               PERFORM X2000-READ-FILE-2 THRU X2000-EXIT\n               GO TO D1000-EXIT.\n\n           PERFORM X4000-WRITE-DIFF-FILE-1 THRU X4000-EXIT.\n           PERFORM X5000-WRITE-DIFF-FILE-2 THRU X5000-EXIT.\n           ADD 1 TO DIFF-CNT\n                    TOTAL-DIFF-CNT.\n\n      *   IF THE MAX NUMBER OF DIFFERENCES HAVE PRINTED, DONT PRINT\n           IF TOTAL-DIFF-CNT >  WS-MAX-DIFF\n               PERFORM X1000-READ-FILE-1 THRU X1000-EXIT\n               PERFORM X2000-READ-FILE-2 THRU X2000-EXIT\n               GO TO D1000-EXIT.\n\n           MOVE FILE-1-READ-CNT TO DT-RECORD-NBR-1.\n           MOVE FILE-2-READ-CNT TO DT-RECORD-NBR-2.\n           MOVE DETAIL-4 TO DIFF-REPORT-REC.\n           MOVE 2 TO LINE-SPACING.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n\n           PERFORM D5000-PRINT-100-BYTES THRU D5000-EXIT\n               VARYING PSUB FROM 1 BY 1\n               UNTIL PSUB > MAX-100-BYTES.\n\n           PERFORM X1000-READ-FILE-1 THRU X1000-EXIT.\n           PERFORM X2000-READ-FILE-2 THRU X2000-EXIT.\n\n\n       D1000-EXIT.\n           EXIT.\n\n       D2000-100-BYTE-DIFF.\n           IF WS-F1-100 (PSUB) = WS-F2-100 (PSUB)\n               GO TO D2000-EXIT.\n\n           MOVE ZERO TO WS-DIFF-100-BYTE-CNT.\n           PERFORM D3000-CHECK-BYTES THRU D3000-EXIT\n               VARYING WSUB FROM 1 BY 1\n               UNTIL WSUB > 100.\n\n      * ACCUMULATE DIFF COUNTS BY 100 BYTE SEGMENT\n           IF WS-DIFF-100-BYTE-CNT > 0\n               ADD 1 TO TBL-DIFF-CNT (PSUB).\n\n\n       D2000-EXIT.\n           EXIT.\n\n      ***********************************************************\n      * CHECK EACH BYTE OF 100 CHAR SECTION\n      * IDENTIFY BYTES THAT ARE DIFFERENT WITH '-'\n      * IDENTIFY BYTES THAT ARE DIFFERENT BUT MASKED WITH '*'\n      * IDENTIFY BYTES THAT ONLY DIFFER IN SIGN WITH 'S'\n      *      THE SIGN DIFFERENCE MUST BE POSITIVE TO UNSIGNED\n      * IDENTIFY BYTES THAT ONLY DIFFER IN NULL \"FILL\" CHARACTERS\n      *      MATCH SPACE TO LOW-VALUES. OTHER VALUES MUST MATCH\n      ***********************************************************\n       D3000-CHECK-BYTES.\n           IF WS-F1-100-BYTE (PSUB WSUB) = WS-F2-100-BYTE (PSUB WSUB)\n               GO TO D3000-EXIT\n           END-IF.\n\n           IF MASK-THIS-100-BYTE (PSUB WSUB)\n               MOVE WS-SHOW-MASK TO DIFF-POS (PSUB WSUB)\n               MOVE WS-SHOW-MASK TO TDIFF-POS (PSUB WSUB)\n               GO TO D3000-EXIT\n           END-IF.\n\n           IF MASK-THIS-100-SIGN (PSUB WSUB)\n               PERFORM D3500-CHECK-SIGNMASK  THRU D3500-EXIT\n               GO TO D3000-EXIT\n           END-IF.\n\n           IF MASK-THIS-100-NULL (PSUB WSUB)\n               PERFORM D3600-CHECK-NULLMASK  THRU D3600-EXIT\n               GO TO D3000-EXIT\n           END-IF.\n\n           MOVE WS-SHOW-DIFF  TO DIFF-POS (PSUB WSUB)\n           MOVE WS-SHOW-DIFF  TO TDIFF-POS (PSUB WSUB)\n           ADD 1 TO WS-DIFF-BYTE-CNT\n           ADD 1 TO WS-DIFF-100-BYTE-CNT.\n\n       D3000-EXIT.\n           EXIT.\n           EJECT\n      *******************************************************\n      * CHECK BYTE TO SEE IF THE ONLY DIFFERENCE IS THAT ONE\n      *   IS POSITIVE SIGNED AND THE OTHER IS UNSIGNED.\n      * A DIFFERENT VALUE OR A NEGATIVE VALUE WILL BE SHOWN\n      *   AS A DIFFERENCE.\n      *******************************************************\n       D3500-CHECK-SIGNMASK.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'0F' OR X'0C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'0F' OR X'0C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F0' OR X'C0') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F0' OR X'C0'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'1F' OR X'1C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'1F' OR X'1C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F1' OR X'C1') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F1' OR X'C1'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'2F' OR X'2C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'2F' OR X'2C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F2' OR X'C2') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F2' OR X'C2'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'3F' OR X'3C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'3F' OR X'3C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F3' OR X'C3') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F3' OR X'C3'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'4F' OR X'4C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'4F' OR X'4C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F4' OR X'C4') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F4' OR X'C4'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'5F' OR X'5C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'5F' OR X'5C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F5' OR X'C5') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F5' OR X'C5'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'6F' OR X'6C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'6F' OR X'6C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F6' OR X'C6') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F6' OR X'C6'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'7F' OR X'7C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'7F' OR X'7C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F7' OR X'C7') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F7' OR X'C7'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'8F' OR X'8C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'8F' OR X'8C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F8' OR X'C8') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F8' OR X'C8'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'9F' OR X'9C') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'9F' OR X'9C')) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = X'F9' OR X'C9') AND\n               (WS-F2-100-BYTE (PSUB WSUB) = X'F9' OR X'C9'))\n               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3500-EXIT\n           END-IF.\n\n       D3500-DIFFERENCE.\n\n           MOVE WS-SHOW-DIFF   TO DIFF-POS (PSUB WSUB)\n           MOVE WS-SHOW-DIFF   TO TDIFF-POS (PSUB WSUB)\n           ADD 1 TO WS-DIFF-BYTE-CNT\n           ADD 1 TO WS-DIFF-100-BYTE-CNT.\n\n       D3500-EXIT.\n           EXIT.\n           EJECT\n      *******************************************************\n      * CHECK BYTE TO SEE IF THE ONLY DIFFERENCE IS THAT ONE\n      *   IS SPACE AND THE OTHER IS LOW-VALUE.\n      * ANY OTHER VALUE WILL BE SHOW AS A DIFFERENCE.\n      *******************************************************\n       D3600-CHECK-NULLMASK.\n\n           IF ((WS-F1-100-BYTE (PSUB WSUB) = LOW-VALUES) AND\n               (WS-F2-100-BYTE (PSUB WSUB) = SPACE)) OR\n              ((WS-F1-100-BYTE (PSUB WSUB) = SPACE) AND\n               (WS-F2-100-BYTE (PSUB WSUB) = LOW-VALUES))\n               MOVE WS-SHOW-NULLMASK TO DIFF-POS (PSUB WSUB)\n               IF TDIFF-POS (PSUB WSUB) = SPACE\n                  MOVE WS-SHOW-NULLMASK TO TDIFF-POS (PSUB WSUB)\n               END-IF\n               GO TO D3600-EXIT\n           END-IF.\n\n\n       D3600-DIFFERENCE.\n\n           MOVE WS-SHOW-DIFF   TO DIFF-POS (PSUB WSUB)\n           MOVE WS-SHOW-DIFF   TO TDIFF-POS (PSUB WSUB)\n           ADD 1 TO WS-DIFF-BYTE-CNT\n           ADD 1 TO WS-DIFF-100-BYTE-CNT.\n\n       D3600-EXIT.\n           EXIT.\n\n          EJECT\n      *******************************************************\n      * PRINT 100 BYTE SEGMENTS OF THE RECORD\n      * ALWAYS PRINT FIRST 100 BYTES IF THERE ARE DIFFERENCES\n      * PRINT FILE 1 ONLY IF THE 100 BYTE SECTION HAD NO DIFF\n      *******************************************************\n       D5000-PRINT-100-BYTES.\n\n      * START NEW PAGE IF CLOSE TO BOTTOM\n           IF REPORT-TYPE-HEX\n               ADD 6 TO LINE-CNT\n               IF LINE-CNT > INST-LINES-PER-PAGE\n                   SUBTRACT 6 FROM LINE-CNT\n                   PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT\n               ELSE\n                   SUBTRACT 6 FROM LINE-CNT\n                   IF DIFF-100 (PSUB) NOT = SPACES\n                     IF LINE-CNT > 10\n                       MOVE REPORT-RULER TO DIFF-REPORT-REC\n                       MOVE 2 TO LINE-SPACING\n                       PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n      * START NEW PAGE IF CLOSE TO BOTTOM\n           IF REPORT-TYPE-CHAR\n               ADD 4 TO LINE-CNT\n               IF LINE-CNT > INST-LINES-PER-PAGE\n                   SUBTRACT 4 FROM LINE-CNT\n                   PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT\n               ELSE\n                   SUBTRACT 4 FROM LINE-CNT\n                   IF DIFF-100 (PSUB) NOT = SPACES\n                     IF LINE-CNT > 10\n                       MOVE REPORT-RULER TO DIFF-REPORT-REC\n                       MOVE 2 TO LINE-SPACING\n                       PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n\n      * PRINT FILE-1\n           IF REPORT-TYPE-CHAR\n               MOVE WS-F1-100 (PSUB) TO DT-100-BYTES\n               COMPUTE WS-START-POS = (PSUB * 100) - 99\n               COMPUTE WS-END-POS   = (PSUB * 100)\n               MOVE WS-START-POS     TO DT-START-POS\n               MOVE WS-END-POS       TO DT-END-POS\n               MOVE '-'              TO DT-HYPHEN\n               MOVE 'FILE-1'         TO DT-FILE-ID\n               MOVE DETAIL-2 TO DIFF-REPORT-REC\n               IF DIFF-100 (PSUB) NOT = SPACES\n                   MOVE 1 TO LINE-SPACING\n               END-IF\n               IF DIFF-100 (PSUB) = SPACES\n                   MOVE 2 TO LINE-SPACING\n               END-IF\n               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n               MOVE SPACES TO DETAIL-2.\n\n           IF REPORT-TYPE-HEX\n               COMPUTE WS-START-POS = (PSUB * 100) - 99\n               COMPUTE WS-END-POS   = (PSUB * 100)\n               MOVE WS-START-POS     TO DT-START-POS\n               MOVE WS-END-POS       TO DT-END-POS\n               MOVE '-'              TO DT-HYPHEN\n               MOVE 'FILE-1'         TO DT-FILE-ID\n               MOVE WS-F1-100 (PSUB) TO WS-100-BYTES\n               PERFORM D5100-FORMAT-HEX THRU D5100-EXIT\n               MOVE WS1-100-BYTES    TO DT-100-BYTES\n               MOVE DETAIL-2 TO DIFF-REPORT-REC\n               IF DIFF-100 (PSUB) NOT = SPACES\n                   MOVE 1 TO LINE-SPACING\n               END-IF\n               IF DIFF-100 (PSUB) = SPACES\n                   MOVE 2 TO LINE-SPACING\n               END-IF\n               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n               MOVE SPACES           TO DETAIL-2\n               MOVE WS2-100-BYTES    TO DT-100-BYTES\n               MOVE DETAIL-2         TO DIFF-REPORT-REC\n               MOVE 1                TO LINE-SPACING\n               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n               MOVE WS3-100-BYTES    TO DT-100-BYTES\n               MOVE DETAIL-2         TO DIFF-REPORT-REC\n               MOVE 1                TO LINE-SPACING\n               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n               MOVE SPACES TO DETAIL-2.\n\n\n           IF DIFF-100 (PSUB) = SPACES\n               GO TO D5000-EXIT.\n\n      * PRINT FILE-2\n           IF REPORT-TYPE-CHAR\n               MOVE WS-F2-100 (PSUB) TO DT-100-BYTES\n               MOVE 'FILE-2'         TO DT-FILE-ID\n               MOVE DETAIL-2 TO DIFF-REPORT-REC\n               MOVE 1 TO LINE-SPACING\n               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n               MOVE SPACES TO DETAIL-2.\n\n           IF REPORT-TYPE-HEX\n               MOVE 'FILE-2'         TO DT-FILE-ID\n               MOVE WS-F2-100 (PSUB) TO WS-100-BYTES\n               PERFORM D5100-FORMAT-HEX THRU D5100-EXIT\n               MOVE WS1-100-BYTES    TO DT-100-BYTES\n               MOVE DETAIL-2 TO DIFF-REPORT-REC\n               MOVE 2 TO LINE-SPACING\n               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n               MOVE SPACES           TO DETAIL-2\n               MOVE WS2-100-BYTES    TO DT-100-BYTES\n               MOVE DETAIL-2         TO DIFF-REPORT-REC\n               MOVE 1                TO LINE-SPACING\n               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n               MOVE WS3-100-BYTES    TO DT-100-BYTES\n               MOVE DETAIL-2         TO DIFF-REPORT-REC\n               MOVE 1                TO LINE-SPACING\n               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n               MOVE SPACES TO DETAIL-2.\n\n      * PRINT DIFFERENCES\n           MOVE DIFF-100 (PSUB) TO DT-100-BYTES\n           MOVE 'DIFFERENCES'    TO DT-FILE-ID\n           MOVE DETAIL-2 TO DIFF-REPORT-REC\n           MOVE 1 TO LINE-SPACING\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n           MOVE SPACES TO DETAIL-2.\n\n\n       D5000-EXIT.\n           EXIT.\n           EJECT\n      ****************************************************************\n      *   FORMAT DATA INTO 3 LINE HEX FORMAT\n      *   FIRST  LINE IS DISPLAYABLE DATA\n      *   SECOND LINE IS FIRST BYTE OF HEX\n      *   THIRD  LINE IS SECOND BYTE OF HEX\n      *   INPUT FIELD IS WS-100-BYTES\n      *   OUTPUT FIELDS ARE  WS1-100-BYTES\n      *                      WS2-100-BYTES\n      *                      WS3-100-BYTES\n      ****************************************************************\n       D5100-FORMAT-HEX.\n           MOVE SPACES TO WS1-100-BYTES\n           MOVE SPACES TO WS2-100-BYTES\n           MOVE SPACES TO WS3-100-BYTES\n\n           IF WS-100-BYTES = SPACES\n               MOVE ALL '4' TO WS2-100-BYTES\n               MOVE ALL '0' TO WS3-100-BYTES\n               GO TO D5100-EXIT.\n\n           IF WS-100-BYTES = LOW-VALUES\n               MOVE ALL '0' TO WS2-100-BYTES\n               MOVE ALL '0' TO WS3-100-BYTES\n               GO TO D5100-EXIT.\n\n           IF WS-100-BYTES = HIGH-VALUES\n               MOVE ALL 'F' TO WS2-100-BYTES\n               MOVE ALL 'F' TO WS3-100-BYTES\n               GO TO D5100-EXIT.\n\n           PERFORM VARYING HSUB FROM 1 BY 1\n                   UNTIL HSUB > 100\n      *         OR (LAST-LINE AND HSUB > MAX-100-BYTES-REM)\n              MOVE ZERO TO WS-BYTE\n              MOVE WS-100-BYTES(HSUB:1)  TO WS-HALF-BYTE\n              IF WS-BYTE = 0\n                  MOVE 256 TO WS-BYTE\n              END-IF\n              IF INST-EBCDIC\n                 MOVE WS-HEX-LINE-1(WS-BYTE) TO\n                                             WS1-100-BYTES(HSUB:1)\n              ELSE\n                 MOVE WS-HEX-LINE-1-ASCII(WS-BYTE) TO\n                                             WS1-100-BYTES(HSUB:1)\n              END-IF\n              MOVE WS-HEX-LINE-2(WS-BYTE) TO WS2-100-BYTES(HSUB:1)\n              MOVE WS-HEX-LINE-3(WS-BYTE) TO WS3-100-BYTES(HSUB:1)\n           END-PERFORM.\n\n       D5100-EXIT.\n           EXIT.\n\n       EJECT\n      ****************************************************************\n      *   PRINT INSERTS ON FILE 1\n      *   PRINT THE RECORD IN 100 BYTE SEGMENTS\n      ****************************************************************\n       E1000-FILE-1-INSERT.\n           IF LINE-CNT > 50\n               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT.\n\n           PERFORM X6000-WRITE-INS-FILE-1 THRU X6000-EXIT.\n           ADD 1 TO FILE-1-INS-CNT\n                    TOTAL-DIFF-CNT.\n      *   IF THE MAX NUMBER OF DIFFERENCES HAVE PRINTED, DONT PRINT\n           IF TOTAL-DIFF-CNT >  WS-MAX-DIFF\n               PERFORM X1000-READ-FILE-1 THRU X1000-EXIT\n               GO TO E1000-EXIT.\n\n           MOVE 'FILE-1 RECORD #' TO DT-INSERT-FILE-ID\n           MOVE FILE-1-READ-CNT TO DT-RECORD-NBR.\n           MOVE DETAIL-1 TO DIFF-REPORT-REC.\n           MOVE 2 TO LINE-SPACING.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n      *    MOVE REPORT-RULER TO DIFF-REPORT-REC.\n      *    MOVE 1 TO LINE-SPACING.\n      *    PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS\n      *  WHICH IS NOT SPACES\n           COMPUTE WSUB = MASK-TABLE-MAX / 100.\n           PERFORM VARYING PSUB FROM WSUB BY -1\n                   UNTIL PSUB < 1 OR\n                         WS-F1-100 (PSUB) NOT = SPACES\n           END-PERFORM.\n           IF PSUB < 1\n               MOVE 1 TO MAX-100-BYTES\n           ELSE\n               MOVE PSUB TO MAX-100-BYTES.\n      *  PRINT 100 BYTE SEGMENTS OF THE RECORD\n           MOVE 'FILE 1 INSERT' TO DT-FILE-ID.\n           MOVE 1 TO LINE-SPACING.\n\n           IF REPORT-TYPE-CHAR\n               PERFORM VARYING PSUB FROM 1 BY 1\n                       UNTIL PSUB > MAX-100-BYTES\n                   MOVE WS-F1-100 (PSUB) TO DT-100-BYTES\n                   COMPUTE WS-START-POS = (PSUB * 100) - 99\n                   COMPUTE WS-END-POS   = (PSUB * 100)\n                   MOVE WS-START-POS     TO DT-START-POS\n                   MOVE WS-END-POS       TO DT-END-POS\n                   MOVE '-'              TO DT-HYPHEN\n                   MOVE DETAIL-2 TO DIFF-REPORT-REC\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n                   MOVE 2 TO LINE-SPACING\n                   MOVE SPACES TO DETAIL-2\n               END-PERFORM.\n\n           IF REPORT-TYPE-HEX\n               PERFORM VARYING PSUB FROM 1 BY 1\n                       UNTIL PSUB > MAX-100-BYTES\n                   COMPUTE WS-START-POS = (PSUB * 100) - 99\n                   COMPUTE WS-END-POS   = (PSUB * 100)\n                   MOVE WS-START-POS     TO DT-START-POS\n                   MOVE WS-END-POS       TO DT-END-POS\n                   MOVE '-'              TO DT-HYPHEN\n                   MOVE 'FILE-1'         TO DT-FILE-ID\n                   MOVE WS-F1-100 (PSUB) TO WS-100-BYTES\n                   PERFORM D5100-FORMAT-HEX THRU D5100-EXIT\n                   MOVE WS1-100-BYTES    TO DT-100-BYTES\n                   MOVE DETAIL-2 TO DIFF-REPORT-REC\n                   MOVE 2 TO LINE-SPACING\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n                   MOVE SPACES           TO DETAIL-2\n                   MOVE WS2-100-BYTES    TO DT-100-BYTES\n                   MOVE DETAIL-2         TO DIFF-REPORT-REC\n                   MOVE 1                TO LINE-SPACING\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n                   MOVE WS3-100-BYTES    TO DT-100-BYTES\n                   MOVE DETAIL-2         TO DIFF-REPORT-REC\n                   MOVE 1                TO LINE-SPACING\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n                   MOVE SPACES TO DETAIL-2\n               END-PERFORM.\n\n           PERFORM X1000-READ-FILE-1 THRU X1000-EXIT.\n       E1000-EXIT.\n           EXIT.\n\n      *   PRINT INSERTS ON FILE 2\n       E2000-FILE-2-INSERT.\n\n           IF LINE-CNT > 50\n               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT.\n\n           PERFORM X7000-WRITE-INS-FILE-2 THRU X7000-EXIT.\n           ADD 1 TO FILE-2-INS-CNT\n                    TOTAL-DIFF-CNT.\n      *   IF THE MAX NUMBER OF DIFFERENCES HAVE PRINTED, DONT PRINT\n           IF TOTAL-DIFF-CNT >  WS-MAX-DIFF\n               PERFORM X2000-READ-FILE-2 THRU X2000-EXIT\n               GO TO E2000-EXIT.\n\n           MOVE FILE-2-READ-CNT TO DT-RECORD-NBR.\n           MOVE 'FILE-2 RECORD #' TO DT-INSERT-FILE-ID\n           MOVE DETAIL-1 TO DIFF-REPORT-REC.\n           MOVE 2 TO LINE-SPACING.\n           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n      *    MOVE REPORT-RULER TO DIFF-REPORT-REC.\n      *    MOVE 1 TO LINE-SPACING.\n      *    PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.\n\n      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS\n      *  WHICH IS NOT SPACES\n           COMPUTE WSUB = MASK-TABLE-MAX / 100.\n           PERFORM VARYING PSUB FROM WSUB BY -1\n                   UNTIL PSUB < 1 OR\n                         WS-F2-100 (PSUB) NOT = SPACES\n           END-PERFORM.\n           IF PSUB < 1\n               MOVE 1 TO MAX-100-BYTES\n           ELSE\n               MOVE PSUB TO MAX-100-BYTES.\n\n      *  PRINT 100 BYTE SEGMENTS OF THE RECORD\n           MOVE 'FILE 2 INSERT' TO DT-FILE-ID.\n           MOVE 1 TO LINE-SPACING.\n           MOVE 'N' TO RECORD-PRINTED-SW.\n\n           IF REPORT-TYPE-CHAR\n               PERFORM VARYING PSUB FROM 1 BY 1\n                       UNTIL PSUB > MAX-100-BYTES\n                   MOVE WS-F2-100 (PSUB) TO DT-100-BYTES\n                   COMPUTE WS-START-POS = (PSUB * 100) - 99\n                   COMPUTE WS-END-POS   = (PSUB * 100)\n                   MOVE WS-START-POS     TO DT-START-POS\n                   MOVE WS-END-POS       TO DT-END-POS\n                   MOVE '-'              TO DT-HYPHEN\n                   MOVE DETAIL-2 TO DIFF-REPORT-REC\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n                   MOVE 2 TO LINE-SPACING\n                   MOVE SPACES TO DETAIL-2\n               END-PERFORM.\n\n           IF REPORT-TYPE-HEX\n               PERFORM VARYING PSUB FROM 1 BY 1\n                       UNTIL PSUB > MAX-100-BYTES\n                   COMPUTE WS-START-POS = (PSUB * 100) - 99\n                   COMPUTE WS-END-POS   = (PSUB * 100)\n                   MOVE WS-START-POS     TO DT-START-POS\n                   MOVE WS-END-POS       TO DT-END-POS\n                   MOVE '-'              TO DT-HYPHEN\n                   MOVE 'FILE-2'         TO DT-FILE-ID\n                   MOVE WS-F2-100 (PSUB) TO WS-100-BYTES\n                   PERFORM D5100-FORMAT-HEX THRU D5100-EXIT\n                   MOVE WS1-100-BYTES    TO DT-100-BYTES\n                   MOVE DETAIL-2 TO DIFF-REPORT-REC\n                   MOVE 2 TO LINE-SPACING\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n                   MOVE SPACES           TO DETAIL-2\n                   MOVE WS2-100-BYTES    TO DT-100-BYTES\n                   MOVE DETAIL-2         TO DIFF-REPORT-REC\n                   MOVE 1                TO LINE-SPACING\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n                   MOVE WS3-100-BYTES    TO DT-100-BYTES\n                   MOVE DETAIL-2         TO DIFF-REPORT-REC\n                   MOVE 1                TO LINE-SPACING\n                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT\n                   MOVE SPACES TO DETAIL-2\n               END-PERFORM.\n\n           PERFORM X2000-READ-FILE-2 THRU X2000-EXIT.\n       E2000-EXIT.\n           EXIT.\n\n           EJECT\n      **************************************************************\n      * READ FILE-1\n      **************************************************************\n       X1000-READ-FILE-1.\n\n           MOVE MAX-REC-LENGTH TO WS-F1-REC-LENGTH.\n           MOVE LOW-VALUES TO WS-F1-REC.\n           READ FILE-1 INTO WS-F1-REC.\n\n           IF FILE-1-STATUS = '10'\n               MOVE HIGH-VALUES TO WS-F1-KEY\n               MOVE 'Y' TO END-OF-FILE-1-SW\n               GO TO X1000-EXIT.\n\n           ADD 1                       TO FILE-1-READ-CNT.\n           IF FILE-1-STATUS NOT = '00'\n               DISPLAY 'BAD READ ON FILE-1.  STATUS = '\n                        FILE-1-STATUS\n               MOVE HIGH-VALUES TO WS-F1-KEY\n               MOVE 'Y' TO END-OF-FILE-1-SW\n               GO TO X1000-EXIT.\n\n      *  CALCULATE RECORD LENGTH\n      *  FIND THE LAST BYTE THAT IS NOT SPACES OR LOW-VALUES\n      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS\n      *  WHICH IS NOT SPACES\n           COMPUTE KSUB = MASK-TABLE-MAX / 100.\n           PERFORM VARYING PSUB FROM KSUB BY -1\n                   UNTIL PSUB < 1 OR\n                        (WS-F1-100 (PSUB) NOT = SPACES AND\n                                                LOW-VALUES)\n           END-PERFORM.\n\n           IF PSUB < 1\n               MOVE MIN-REC-LENGTH TO WS-F1-REC-LENGTH\n           ELSE\n               COMPUTE WS-F1-REC-LENGTH = PSUB * 100\n               PERFORM VARYING WS-F1-REC-LENGTH FROM\n                                           WS-F1-REC-LENGTH BY -1\n                       UNTIL WS-F1-REC-LENGTH < 1 OR\n                            (WS-F1-REC (WS-F1-REC-LENGTH:1) NOT =\n                                      SPACES AND LOW-VALUES)\n               END-PERFORM\n               IF WS-F1-REC-LENGTH > MAX-REC-LENGTH-USED\n                  MOVE WS-F1-REC-LENGTH TO MAX-REC-LENGTH-USED\n               END-IF\n               IF WS-F1-REC-LENGTH < MIN-REC-LENGTH\n                  MOVE MIN-REC-LENGTH TO WS-F1-REC-LENGTH\n               END-IF\n           END-IF.\n\n      *  FORMAT KEY TO MATCH RECORDS\n           MOVE SPACES TO WS-F1-KEY.\n           MOVE 1 TO WSUB.\n           PERFORM VARYING KSUB FROM 1 BY 1\n                   UNTIL KSUB > KEY-CNT\n               MOVE TKEY-OFFSET(KSUB) TO KEY-OFFSET\n               MOVE TKEY-LENGTH(KSUB) TO PSUB\n               MOVE WS-F1-REC(KEY-OFFSET:PSUB) TO\n                    WS-F1-KEY(WSUB:PSUB)\n               ADD PSUB TO WSUB\n           END-PERFORM.\n\n       X1000-EXIT.\n           EXIT.\n\n      **************************************************************\n      * READ FILE-2\n      **************************************************************\n       X2000-READ-FILE-2.\n\n           MOVE MAX-REC-LENGTH TO WS-F2-REC-LENGTH.\n           MOVE LOW-VALUES TO WS-F2-REC.\n           READ FILE-2 INTO WS-F2-REC.\n\n           IF FILE-2-STATUS = '10'\n               MOVE HIGH-VALUES TO WS-F2-KEY\n               MOVE 'Y' TO END-OF-FILE-2-SW\n               GO TO X2000-EXIT.\n\n           ADD 1                       TO FILE-2-READ-CNT.\n           IF FILE-2-STATUS NOT = '00'\n               DISPLAY 'BAD READ ON FILE-2.  STATUS = '\n                        FILE-2-STATUS\n               MOVE HIGH-VALUES TO WS-F2-KEY\n               MOVE 'Y' TO END-OF-FILE-2-SW\n               GO TO X2000-EXIT.\n\n      *  CALCULATE RECORD LENGTH\n      *  FIND THE LAST BYTE THAT IS NOT SPACES OR LOW-VALUES\n      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS\n      *  WHICH IS NOT SPACES\n           COMPUTE KSUB = MASK-TABLE-MAX / 100.\n           PERFORM VARYING PSUB FROM KSUB BY -1\n                   UNTIL PSUB < 1 OR\n                        (WS-F2-100 (PSUB) NOT = SPACES AND\n                                                LOW-VALUES)\n           END-PERFORM.\n\n           IF PSUB < 1\n               MOVE MIN-REC-LENGTH TO WS-F2-REC-LENGTH\n           ELSE\n               COMPUTE WS-F2-REC-LENGTH = PSUB * 100\n               PERFORM VARYING WS-F2-REC-LENGTH FROM\n                                           WS-F2-REC-LENGTH BY -1\n                       UNTIL WS-F2-REC-LENGTH < 1 OR\n                            (WS-F2-REC (WS-F2-REC-LENGTH:1) NOT =\n                                      SPACES AND LOW-VALUES)\n               END-PERFORM\n               IF WS-F2-REC-LENGTH > MAX-REC-LENGTH-USED\n                  MOVE WS-F2-REC-LENGTH TO MAX-REC-LENGTH-USED\n               END-IF\n               IF WS-F2-REC-LENGTH < MIN-REC-LENGTH\n                  MOVE MIN-REC-LENGTH TO WS-F2-REC-LENGTH\n               END-IF\n           END-IF.\n\n\n      *  FORMAT KEY TO MATCH RECORDS\n           MOVE SPACES TO WS-F2-KEY.\n           MOVE 1 TO WSUB.\n           PERFORM VARYING KSUB FROM 1 BY 1\n                   UNTIL KSUB > KEY-CNT\n               MOVE TKEY-OFFSET(KSUB) TO KEY-OFFSET\n               MOVE TKEY-LENGTH(KSUB) TO PSUB\n               MOVE WS-F2-REC(KEY-OFFSET:PSUB) TO\n                    WS-F2-KEY(WSUB:PSUB)\n               ADD PSUB TO WSUB\n           END-PERFORM.\n\n       X2000-EXIT.\n           EXIT.\n\n      **************************************************************\n      * READ CONTROL CARDS\n      **************************************************************\n       X3000-READ-CARDS.\n\n           READ CONTROL-CARDS\n               AT END\n                   MOVE 'Y' TO END-OF-CARDS-SW\n                   GO TO X3000-EXIT.\n\n           IF CARD-FILE-STATUS = '10'\n               MOVE 'Y' TO END-OF-CARDS-SW\n               GO TO X3000-EXIT.\n           IF CARD-FILE-STATUS NOT = '00'\n               DISPLAY 'CARD-FILE-STATUS = ' CARD-FILE-STATUS\n               MOVE 'Y' TO END-OF-CARDS-SW\n               GO TO X3000-EXIT.\n\n           ADD 1                   TO FILE-CARDS-CNT.\n\n       X3000-EXIT.\n           EXIT.\n\n      **************************************************************\n      * WRITE DIFF-FILE-1\n      **************************************************************\n       X4000-WRITE-DIFF-FILE-1.\n\n           WRITE FILE-1-DIFF-CD   FROM FILE-1-REC-C.\n\n           ADD 1                  TO FILE-1D-WRITE-CNT.\n           IF FILE-1D-STATUS NOT = '00'\n               DISPLAY 'DD DIFF1 FILE-1D-STATUS = ' FILE-1D-STATUS\n                       ' ON WRITE # '  FILE-1D-WRITE-CNT\n               GO TO X4000-EXIT.\n\n       X4000-EXIT.\n           EXIT.\n\n      **************************************************************\n      * WRITE DIFF-FILE-2\n      **************************************************************\n       X5000-WRITE-DIFF-FILE-2.\n\n           WRITE FILE-2-DIFF-CD   FROM FILE-2-REC-C.\n\n           ADD 1                  TO FILE-2D-WRITE-CNT.\n           IF FILE-2D-STATUS NOT = '00'\n               DISPLAY 'DD DIFF2 FILE-2D-STATUS = ' FILE-2D-STATUS\n                       ' ON WRITE # '  FILE-2D-WRITE-CNT\n               GO TO X5000-EXIT.\n\n       X5000-EXIT.\n           EXIT.\n\n      **************************************************************\n      * WRITE INS-FILE-1\n      **************************************************************\n       X6000-WRITE-INS-FILE-1.\n\n           WRITE FILE-1-INS-CD   FROM FILE-1-REC-C.\n\n           ADD 1                  TO FILE-1E-WRITE-CNT.\n           IF FILE-1E-STATUS NOT = '00'\n               DISPLAY 'DD INS1 FILE-1E-STATUS = ' FILE-1E-STATUS\n                       ' ON WRITE # '  FILE-1E-WRITE-CNT\n               GO TO X6000-EXIT.\n\n       X6000-EXIT.\n           EXIT.\n\n      **************************************************************\n      * WRITE INS-FILE-2\n      **************************************************************\n       X7000-WRITE-INS-FILE-2.\n\n           WRITE FILE-2-INS-CD   FROM FILE-2-REC-C.\n\n           ADD 1                  TO FILE-2E-WRITE-CNT.\n           IF FILE-2E-STATUS NOT = '00'\n               DISPLAY 'DD INS2 FILE-2E-STATUS = ' FILE-2E-STATUS\n                       ' ON WRITE # '  FILE-2E-WRITE-CNT\n               GO TO X7000-EXIT.\n\n       X7000-EXIT.\n           EXIT.\n\n           EJECT\n      ***************************************************************\n      ***  PRINT ROUTINES\n      ***************************************************************\n\n\n      **************************************************************\n      * WRITE DETAIL LINE\n      **************************************************************\n       Y2000-WRITE-DETAIL.\n\n           IF LINE-CNT > 55\n               MOVE DIFF-REPORT-REC TO SAVE-DIFF-REPORT-REC\n               MOVE LINE-SPACING TO SAVE-LINE-SPACING\n               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT\n               MOVE SAVE-DIFF-REPORT-REC TO DIFF-REPORT-REC\n               MOVE SAVE-LINE-SPACING TO LINE-SPACING.\n\n           IF LINE-SPACING = 1\n               WRITE DIFF-REPORT-REC\n                    AFTER ADVANCING 1 LINE\n           ELSE\n           IF LINE-SPACING = 2\n               WRITE DIFF-REPORT-REC\n                    AFTER ADVANCING 2 LINE\n           ELSE\n           IF LINE-SPACING = 3\n               WRITE DIFF-REPORT-REC\n                    AFTER ADVANCING 3 LINE.\n\n           ADD LINE-SPACING  TO LINE-CNT.\n\n       Y2000-EXIT.\n           EXIT.\n\n      **************************************************************\n      * WRITE HEADER\n      **************************************************************\n       Y2025-WRITE-HEADER.\n\n           ADD 1 TO PAGE-CNT\n           MOVE PAGE-CNT TO HD1-PAGE.\n           MOVE '          FILE COMPARE DIFFERENCE REPORT'\n                                   TO HD2-TITLE.\n           MOVE '01'               TO HD2-REPORT.\n\n           IF PAGE-CNT > 1\n               PERFORM Y2050-FOOTER THRU Y2050-EXIT.\n\n           WRITE DIFF-REPORT-REC FROM HEADING-1\n                AFTER ADVANCING PAGE.\n           WRITE DIFF-REPORT-REC FROM HEADING-2\n                AFTER ADVANCING 1 LINE.\n           WRITE DIFF-REPORT-REC FROM REPORT-HEAD-3\n                AFTER ADVANCING 2 LINE.\n           WRITE DIFF-REPORT-REC FROM REPORT-RULER\n                AFTER ADVANCING 1 LINE.\n           MOVE SPACES TO DIFF-REPORT-REC.\n\n           MOVE HEADER-LINE-CNT TO LINE-CNT.\n\n       Y2025-EXIT.\n           EXIT.\n\n\n       Y2050-FOOTER.\n           MOVE SPACES TO DIFF-REPORT-REC.\n\n           PERFORM UNTIL LINE-CNT > INST-LINES-PER-PAGE\n               WRITE DIFF-REPORT-REC\n                   AFTER ADVANCING 1 LINE\n               ADD 1 TO LINE-CNT\n           END-PERFORM.\n\n           WRITE DIFF-REPORT-REC\n               AFTER ADVANCING 2 LINE.\n           WRITE DIFF-REPORT-REC FROM FOOTER-1\n               AFTER ADVANCING 1 LINE.\n\n       Y2050-EXIT.\n           EXIT.\n\n           EJECT\n       Z9000-ABEND-PROGRAM.\n\n           IF INST-CEE\n              MOVE WS-ABEND-CODE TO WS-CEE-ABEND-CODE\n              MOVE 1 TO WS-CEE-CLEANUP-CODE\n              IF WS-CEE-ABEND-CODE = ZERO\n                 MOVE 4001 TO WS-CEE-ABEND-CODE\n              END-IF\n              IF WS-RETURN-CODE = ZERO\n                 MOVE WS-CEE-ABEND-CODE TO WS-RETURN-CODE\n              END-IF\n           ELSE\n           IF WS-ABEND-CODE = ZERO\n              MOVE 4001 TO WS-ABEND-CODE\n              IF WS-RETURN-CODE = ZERO\n                 MOVE WS-ABEND-CODE TO WS-RETURN-CODE\n              END-IF\n           END-IF.\n\n           MOVE WS-RETURN-CODE TO RETURN-CODE.\n\n           DISPLAY '***********************************************'.\n           DISPLAY '    '.\n\n           IF WS-RETURN-CODE NOT = ZERO\n              DISPLAY 'PROGRAM IS ABENDING WITH RETURN CODE = '\n                      WS-RETURN-CODE\n           END-IF.\n\n           IF WS-ABEND-PARA NOT = SPACE\n              DISPLAY ' ABEND FROM PARAGRAPH '\n                      WS-ABEND-PARA\n           END-IF.\n\n           IF WS-ABEND-REASON-1 NOT = SPACE\n              DISPLAY ' ' WS-ABEND-REASON-1\n           IF WS-ABEND-REASON-2 NOT = SPACE\n              DISPLAY ' ' WS-ABEND-REASON-2\n           END-IF.\n\n           IF INST-CEE\n              DISPLAY 'ABENDING PROGRAM ' WS-PROGRAM\n                      ' WITH ABEND CODE ' WS-CEE-ABEND-CODE\n                      '  CLEANUP = '      WS-CEE-CLEANUP-CODE\n              CALL 'CEE3ABD' USING WS-CEE-ABEND-CODE\n                                   WS-CEE-CLEANUP-CODE\n           ELSE\n              DISPLAY 'ABENDING PROGRAM ' WS-PROGRAM\n                      ' WITH ABEND CODE ' WS-ABEND-CODE\n              CALL 'ILBOABN0' USING WS-ABEND-CODE\n           END-IF.\n\n       Z9000-EXIT.\n           EXIT.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "JXPRU001": {"ttr": 2049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x005\\x01\\x05\\x08O\\x01\\x05\\x17\\x9f\\x13Q\\x00\\xcf\\x00\\xd2\\x00\\x00\\xe9\\xe8\\xf0\\xf6@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2005-03-25T00:00:00", "modifydate": "2005-06-28T13:51:35", "lines": 207, "newlines": 210, "modlines": 0, "user": "ZY06"}, "text": "//**********************************************************************\n//*   PROC JXPRU001\n//*\n//*   FILEWIZ COMPARE REL 5.0 VER 01\n//*   (C) 2005 RENAISSANCE DATA SYSTEMS INC.\n//*\n//*  THIS PROC IS USED BY JX.REFWIZ.SAMPLIB(CMFILE)\n//*\n//*   COMPARE PROCESS\n//*     STEP 1 COPY BOTH FILES TO VB 12154\n//*     STEP 2 SORT EACH FILE ON KEY TO BE MATCHED\n//*     STEP 3 COMPARE FILES USING KEY TO MATCH RECORDS.\n//*\n//*   KEY MUST START IN POSITION 5 FOR SORTS AND POSITION 1 FOR COMPARE\n//*\n//*   4 OUTPUT FILES ARE CREATED.\n//*     DIFF1 HAS RECORDS FROM FILE 1 THAT MATCH ON KEY FROM FILE 2,\n//*              BUT ENTIRE RECORD DOES NOT MATCH THE FILE 2 RECORD.\n//*     DIFF2 HAS RECORDS FROM FILE 2 THAT MATCH ON KEY FROM FILE 1,\n//*              BUT ENTIRE RECORD DOES NOT MATCH THE FILE 1 RECORD.\n//*     INS1  HAS RECORDS IN FILE 1 THAT DO NOT MATCH KEY FROM FILE 2.\n//*     INS2  HAS RECORDS IN FILE 2 THAT DO NOT MATCH KEY FROM FILE 1.\n//**********************************************************************\n//JXPRU001 PROC  FNODE='TEST.CMP',\n//         LNODE='XCFILE',\n//         FILE1='NULLFILE',\n//         FILE2='NULLFILE',\n//         RPT='*',                                  DIFF RPT CLASS\n//         SOUT='*',                                 SYSOUT CLASS\n//         SDUMP=*,                                  DUMP CLASS\n//         CNTRL='SYS2.PROD.CARDLIB',                CARD LIBRARY\n//         DBUG='N 00000 00000',                     DEBUG PARM\n//         CNDDEL='(0,NE)',                          DELETE WORK FILES\n//         UNIT='SYSDA',                             UNIT FOR FILES\n//         SORTSP='(CYL,(50,20))',                   SORT SPACE\n//         UNITA='SYSDA,SPACE=(CYL,(50,20),RLSE)',   TEMP FILE SPACE\n//         UNITD='SYSDA,SPACE=(CYL,(50,20),RLSE)',   DIFF FILE SPACE\n//         UNITI='SYSDA,SPACE=(CYL,(50,20),RLSE)'    INS FILE SPACE\n//**********************************************************************\n//*   DELETE WORK FILES\n//*   RESTART IN STEP010\n//**********************************************************************\n//STEP010  EXEC PGM=IEFBR14\n//FILE1    DD  DSN=&FNODE..OLD.&LNODE,\n//             DISP=(MOD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,1)\n//FILE2    DD  DSN=&FNODE..NEW.&LNODE,\n//             DISP=(MOD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,1)\n//**********************************************************************\n//*   COPY FILE1 TO VB FILE\n//*   RESTART IN STEP020\n//**********************************************************************\n//STEP020  EXEC PGM=IDCAMS\n//*\n//SYSPRINT DD  SYSOUT=&SOUT\n//SYSUDUMP DD  SYSOUT=&SDUMP\n//SYSOUT   DD  SYSOUT=&SOUT\n//INFIL01  DD  DSN=&FILE1,\n//             DISP=SHR\n//OUTFIL01 DD  DSN=&FNODE..OLD.&LNODE,\n//             DISP=(NEW,CATLG,DELETE),\n//             DCB=(RECFM=VB,LRECL=12154,BLKSIZE=0),\n//             UNIT=&UNITA\n//SYSIN    DD  DSN=&CNTRL(JXREPRO1),DISP=SHR\n//**********************************************************************\n//*   COPY FILE2 TO VB FILE\n//*   RESTART IN STEP030\n//**********************************************************************\n//STEP030  EXEC PGM=IDCAMS\n//*\n//SYSPRINT DD  SYSOUT=&SOUT\n//SYSUDUMP DD  SYSOUT=&SDUMP\n//SYSOUT   DD  SYSOUT=&SOUT\n//INFIL01  DD  DSN=&FILE2,\n//             DISP=SHR\n//OUTFIL01 DD  DSN=&FNODE..NEW.&LNODE,\n//             DISP=(NEW,CATLG,DELETE),\n//             DCB=(RECFM=VB,LRECL=12154,BLKSIZE=0),\n//             UNIT=&UNITA\n//SYSIN    DD  DSN=&CNTRL(JXREPRO1),DISP=SHR\n//**********************************************************************\n//*   DELETE WORK FILES\n//*   RESTART IN STEP040\n//**********************************************************************\n//STEP040  EXEC PGM=IEFBR14\n//FILE3    DD  DSN=&FNODE..OLD.&LNODE..SORT,\n//             DISP=(MOD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,1)\n//FILE4    DD  DSN=&FNODE..NEW.&LNODE..SORT,\n//             DISP=(MOD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,1)\n//**********************************************************************\n//*   SORT FILE 1\n//*   RESTART IN STEP050\n//**********************************************************************\n//STEP050  EXEC PGM=SORT\n//SYSPRINT DD  SYSOUT=&SOUT\n//SYSUDUMP DD  SYSOUT=&SDUMP\n//SYSOUT   DD  SYSOUT=&SOUT\n//SORTIN   DD  DSN=&FNODE..OLD.&LNODE,\n//             DISP=SHR\n//SORTOUT  DD  DSN=&FNODE..OLD.&LNODE..SORT,\n//             DISP=(NEW,CATLG,DELETE),\n//             DCB=(RECFM=VB,LRECL=12154,BLKSIZE=0),\n//             UNIT=&UNITA\n//SORTWK01 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK02 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK03 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK04 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK05 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK06 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SYSIN    DD  DSN=NULLFILE,BLKSIZE=80,DISP=SHR,UNIT=SYSDA\n//**********************************************************************\n//*   SORT FILE 2\n//*   RESTART IN STEP060\n//**********************************************************************\n//STEP060  EXEC PGM=SORT\n//SYSPRINT DD  SYSOUT=&SOUT\n//SYSUDUMP DD  SYSOUT=&SDUMP\n//SYSOUT   DD  SYSOUT=&SOUT\n//SORTIN   DD  DSN=&FNODE..NEW.&LNODE,\n//             DISP=SHR\n//SORTOUT  DD  DSN=&FNODE..NEW.&LNODE..SORT,\n//             DISP=(NEW,CATLG,DELETE),\n//             DCB=(RECFM=VB,LRECL=12154,BLKSIZE=0),\n//             UNIT=&UNITA\n//SORTWK01 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK02 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK03 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK04 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK05 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SORTWK06 DD  UNIT=SYSDA,SPACE=&SORTSP\n//SYSIN    DD  DSN=NULLFILE,BLKSIZE=80,DISP=SHR,UNIT=SYSDA\n//**********************************************************************\n//*   DELETE WORK FILES\n//*   RESTART IN STEP070\n//**********************************************************************\n//STEP070  EXEC PGM=IEFBR14\n//DIFF1    DD  DSN=&FNODE..&LNODE..DIFF1,\n//             DISP=(MOD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,(5,1),RLSE)\n//DIFF2    DD  DSN=&FNODE..&LNODE..DIFF2,\n//             DISP=(MOD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,(5,1),RLSE)\n//INS1     DD  DSN=&FNODE..&LNODE..INS1,\n//             DISP=(MOD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,(5,1),RLSE)\n//INS2     DD  DSN=&FNODE..&LNODE..INS2,\n//             DISP=(MOD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,(5,1),RLSE)\n//**********************************************************************\n//*   COMPARE FILES\n//*   RESTART IN STEP070\n//***********************************************************\n//STEP080  EXEC  PGM=JXCU001,PARM='&DBUG'\n//*STEPLIB DD  DSN=ZY06.REFWIZ.LOADLIB,DISP=SHR\n//*\n//SYSUDUMP DD  SYSOUT=&SDUMP\n//CEEDUMP  DD  SYSOUT=&SDUMP\n//*\n//SYSOUT   DD  SYSOUT=&SOUT\n//RDBUG    DD  SYSOUT=&SOUT\n//DIFFRPT  DD  SYSOUT=&RPT\n//*\n//FILE1    DD  DSN=&FNODE..OLD.&LNODE..SORT,\n//             DISP=OLD\n//FILE2    DD  DSN=&FNODE..NEW.&LNODE..SORT,\n//             DISP=OLD\n//DIFF1    DD  DSN=&FNODE..&LNODE..DIFF1,\n//             DISP=(NEW,CATLG,CATLG),\n//             DCB=(RECFM=VB,LRECL=12154,BLKSIZE=0),\n//             UNIT=&UNITD\n//DIFF2    DD  DSN=&FNODE..&LNODE..DIFF2,\n//             DISP=(NEW,CATLG,CATLG),\n//             DCB=(RECFM=VB,LRECL=12154,BLKSIZE=0),\n//             UNIT=&UNITD\n//INS1     DD  DSN=&FNODE..&LNODE..INS1,\n//             DISP=(NEW,CATLG,CATLG),\n//             DCB=(RECFM=VB,LRECL=12154,BLKSIZE=0),\n//             UNIT=&UNITI\n//INS2     DD  DSN=&FNODE..&LNODE..INS2,\n//             DISP=(NEW,CATLG,CATLG),\n//             DCB=(RECFM=VB,LRECL=12154,BLKSIZE=0),\n//             UNIT=&UNITI\n//*\n//CARDIN   DD  DSN=NULLFILE,BLKSIZE=80,DISP=SHR,UNIT=SYSDA\n//**********************************************************************\n//*   DELETE WORK FILES\n//*   RESTART IN STEP090\n//**********************************************************************\n//STEP090  EXEC PGM=IEFBR14,COND=&CNDDEL\n//FILE1    DD  DSN=&FNODE..OLD.&LNODE,\n//             DISP=(OLD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,1)\n//FILE2    DD  DSN=&FNODE..NEW.&LNODE,\n//             DISP=(OLD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,1)\n//FILE3    DD  DSN=&FNODE..OLD.&LNODE..SORT,\n//             DISP=(OLD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,1)\n//FILE4    DD  DSN=&FNODE..NEW.&LNODE..SORT,\n//             DISP=(OLD,DELETE,DELETE),\n//             UNIT=&UNIT,SPACE=(TRK,1)\n//**********************************************************************\n//*    END OF PROC\n//**********************************************************************\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JXREPRO1": {"ttr": 2053, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00@\\x01\\x00(\\x0f\\x01\\x05\\x17\\x9f\\x13Q\\x00\\x01\\x00\\x01\\x00\\x00\\xe9\\xe8\\xf0\\xf6@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-10-06T00:00:00", "modifydate": "2005-06-28T13:51:40", "lines": 1, "newlines": 1, "modlines": 0, "user": "ZY06"}, "text": "   REPRO INFILE(INFIL01) OUTFILE(OUTFIL01)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT722/FILE722.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT722", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}