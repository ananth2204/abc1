       PROCESS NOADV
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    JXCU001.
      *AUTHOR.        RENAISSANCE DATA SYSTEMS INC
      *DATE-WRITTEN.  12/12/96.
      *****************************************************************
      *                                                               *
      *  (C) 2005 RENAISSANCE DATA SYSTEMS INC.                       *
      *      ALL RIGHTS RESERVED.                                     *
      *              FILEWIZ COMPARE VER 6.0                          *
      *                                                               *
      *****************************************************************
      *
      *JX* THIS PROGRAM COMPARES 2 FILES.
      *JX* IT PRINTS A REPORT OF DIFFERENCES FOUND AND WRITES OUT THE
      *JX* RECORDS THAT WERE DIFFERENT OR INSERTED INTO FILES.
      *
      *    THE INPUT FILES COMPARED MUST FIRST BE COPIED TO
      *    FILES WITH A DCB OF VB LRECL=12154.  THIS ALLOWS
      *    THE PROGRAM TO COMPARE ANY FILE WITH A LENGTH UP
      *    TO 12154. IDCAMS CAN BE USED TO DO THIS.
      *
      *    THE PROGRAM WILL MATCH UP RECORDS BY A KEY THAT IS
      *    SPECIFIED IN PARAMETER CARDS.  THE MATCH KEYS MUST
      *    CORRESPOND TO THE SORT FIELDS.  MULTIPLE KEY FIELDS
      *    ARE POSSIBLE AND WILL BE USED TOGETHER TO MATCH
      *    RECORDS.
      *
      *    RECORDS ON FILE 1 WHICH DO NOT MATCH BY KEY TO A
      *    RECORD IN FILE 2 WILL BE PRINTED AS INSERTS AND
      *    WRITTEN TO THE INSERT FILE 1.  FILE 2 INSERTS ARE
      *    WRITTEN TO THE INSERT FILE 2 AND PRINTED.
      *
      *    RECORDS WHICH MATCH ON KEY, BUT DO NOT MATCH
      *    EXACTLY WILL BE PRINTED AS DIFFERENCES AND THE
      *    FILE 1 RECORD WRITTEN TO THE DIFF FILE 1 AND THE
      *    FILE 2 RECORD WRITTEN TO THE DIFF FILE 2.
      *
      *    THE OUTPUT FILES ENABLE ONE TO FURTHER ANALYZE THE
      *    DIFFERENCES BY LOOKING AT THE ENTIRE RECORDS.
      *
      *    IF THERE ARE EXPECTED OR ACCEPTABLE DIFFERENCES,
      *    THESE MAY BE MASKED OUT OF THE COMPARE PROCESS BY
      *    ADDING MASK CARDS TO THE INPUT PARAMETER FILE
      *    OR OMITTED FROM THE COMPARE BY OMITTING THEM IN
      *    THE SORT.
      *
      *    FOR MORE INFORMATION ABOUT THE PARAMETER CARD
      *    OPTIONS, SEE PARAGRAPH A2200-PRINT-CARD-HELP.
      *
      *
      * A1000-  INITIALIZATION ROUTINES
      * A2000-  EDIT INPUT CARDS
      * A9000-  TERMINATION ROUTINES
      * C0000-  MAIN PROCESSING
      * D0000-  DIFFERENCE PROCESSING
      * E0000-  INSERT PROCESSING
      * X0000-  PROGRAM READ, WRITE AND OTHER I-O ROUTINES
      * Y0000-  DEBUG ROUTINES
      * Z0000-  ABEND ROUTINES
      *
      *
      *****************************************************************
      *    INPUT FILES:   FILE 1
      *                   FILE 2
      *                   COMPARE OPTIONS CARDS
      *
      *    OUTPUT FILES:  DIFFERENCE REPORT
      *                   DIFF FILE 1
      *                   DIFF FILE 2
      *                   INSERT FILE 1
      *                   INSERT FILE 2
      *****************************************************************
      *  MODIFICATION LOG
      *  12/15/2000  SHH ADD SPLIT KEY FIELDS
      *  02/09/2001  SHH FIX OUTPUT RECORD LENGTH
      *  06/18/2001  SHH ADD HEX DUMP OPTION
      *  03/12/2003  SHH INITIALIZE REPORT FIELDS
      *  11/16/2003  SHH ADD OPTION TO MASK SIGN BYTE, REMOVE COPYBOOKS
      *  12/08/2004  SHH ADD OPTION TO MASK NULLS TO BLANKS
      *  12/13/2004  SHH MAKE RECORDS 10 BYTE MINIMUM RECORD LENGTH
      *                    IF ALL SPACES OR LOW-VALUES
      *  05/12/2005  SHH ADD INPUT DSN NAMES TO SUMMARY REPORT
      *
      *****************************************************************
       ENVIRONMENT DIVISION.
       CONFIGURATION SECTION.

       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT FILE-1
               STATUS IS FILE-1-STATUS
               ASSIGN    FILE1.
           SELECT FILE-2
               STATUS IS FILE-2-STATUS
               ASSIGN    FILE2.

           SELECT FILE-1-DIFF
               STATUS IS FILE-1D-STATUS
               ASSIGN    DIFF1.
           SELECT FILE-2-DIFF
               STATUS IS FILE-2D-STATUS
               ASSIGN    DIFF2.
           SELECT FILE-1-INS
               STATUS IS FILE-1E-STATUS
               ASSIGN    INS1.
           SELECT FILE-2-INS
               STATUS IS FILE-2E-STATUS
               ASSIGN    INS2.

           SELECT CONTROL-CARDS
               STATUS IS CARD-FILE-STATUS
               ASSIGN    CARDIN.

           SELECT DIFF-REPORT-FILE
               ASSIGN    DIFFRPT.


       DATA DIVISION.
       FILE SECTION.

       FD  FILE-1
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS V.
       01  FILE-1-REC-C.
           05  FILE-1-BYTE OCCURS 10 TO 12150 TIMES
                     DEPENDING ON WS-F1-REC-LENGTH.
               10  FILLER              PIC X.
       01  FILE-1-REC-MIN              PIC X(10).
       01  FILE-1-REC                  PIC X(12150).
       01  FILE-1-REC-B                PIC X(2000).

       FD  FILE-2
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS V.
       01  FILE-2-REC-C.
           05  FILE-2-BYTE OCCURS 10 TO 12150 TIMES
                     DEPENDING ON WS-F2-REC-LENGTH.
               10  FILLER              PIC X.
       01  FILE-2-REC-MIN              PIC X(10).
       01  FILE-2-REC                  PIC X(12150).
       01  FILE-2-REC-B                PIC X(2000).

       FD  FILE-1-DIFF
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS V.
       01  FILE-1-DIFF-CD.
           05  FILE-1D-BYTE OCCURS 10 TO 12150 TIMES
                     DEPENDING ON WS-F1-REC-LENGTH.
               10  FILLER              PIC X.
       01  FILE-1-DIFF-MIN             PIC X(10).
       01  FILE-1-DIFF-REC             PIC X(12150).

       FD  FILE-2-DIFF
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS V.
       01  FILE-2-DIFF-CD.
           05  FILE-2D-BYTE OCCURS 10 TO 12150 TIMES
                     DEPENDING ON WS-F2-REC-LENGTH.
               10  FILLER              PIC X.
       01  FILE-2-DIFF-MIN             PIC X(10).
       01  FILE-2-DIFF-REC             PIC X(12150).

       FD  FILE-1-INS
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS V.
       01  FILE-1-INS-CD.
           05  FILE-1E-BYTE OCCURS 10 TO 12150 TIMES
                     DEPENDING ON WS-F1-REC-LENGTH.
               10  FILLER              PIC X.
       01  FILE-1-INS-MIN              PIC X(10).
       01  FILE-1-INS-REC              PIC X(12150).

       FD  FILE-2-INS
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS V.
       01  FILE-2-INS-CD.
           05  FILE-2E-BYTE OCCURS 10 TO 12150 TIMES
                     DEPENDING ON WS-F2-REC-LENGTH.
               10  FILLER              PIC X.
       01  FILE-2-INS-MIN              PIC X(10).
       01  FILE-2-INS-REC              PIC X(12150).

       FD  CONTROL-CARDS
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS F.
       01  CC-REC.
           05  CC-TYPE                 PIC X(4).
               88  CC-TYPE-KEY      VALUE 'KEY='.
               88  CC-TYPE-REPORT   VALUE 'RPT='.
               88  CC-TYPE-MASK     VALUE 'MASK'.
               88  CC-TYPE-SIGNMASK VALUE 'SIGN'.
               88  CC-TYPE-NULLMASK VALUE 'NULL'.
               88  CC-TYPE-FILE     VALUE 'FILE'.
               88  CC-TYPE-MAXDIFF  VALUE 'MAXD'.
               88  CC-TYPE-MAXREAD  VALUE 'MAXR'.
           05  FILLER                  PIC X(76).

       01  CC-FILE-REC.
           05  CC-FILE-ID              PIC X(6).
               88  VALID-CC-FILE-TYPE  VALUE 'FILE1=' 'FILE2='.
               88  CC-FILE-ID-1        VALUE 'FILE1='.
               88  CC-FILE-ID-2        VALUE 'FILE2='.
           05  CC-FILE-NAME            PIC X(66).
           05  FILLER                  PIC X(08).

       01  CC-MAX-REC.
      *    MAXDIFF=999999999
           05  FILLER                  PIC X(8).
           05  CC-MAX-DIFF             PIC X(09).
           05  FILLER                  PIC X(63).
       01  CC-KEY-REC.
           05  FILLER                  PIC X(4).
           05  CC-KEY-OFF-LEN          PIC X(20).
           05  FILLER                  PIC X(56).
       01  CC-MASK-REC.
           05  FILLER                  PIC X(5).
           05  CC-MASK-OFF-LEN         PIC X(20).
           05  FILLER                  PIC X(55).
       01  CC-SIGNMASK-REC.
           05  FILLER                  PIC X(9).
           05  CC-SIGNMASK-OFF         PIC X(20).
           05  FILLER                  PIC X(51).
       01  CC-NULLMASK-REC.
           05  FILLER                  PIC X(9).
           05  CC-NULLMASK-OFF         PIC X(20).
           05  FILLER                  PIC X(51).
       01  CC-REPORT-REC.
           05  FILLER                  PIC X(4).
           05  CC-REPORT-TYPE          PIC X(04).
               88  VALID-CC-REPORT-TYPE  VALUE 'CHAR' 'HEX ' '    '.
               88  CC-REPORT-CHAR        VALUE 'CHAR' '    '.
               88  CC-REPORT-HEX         VALUE 'HEX '.
           05  FILLER                  PIC X(72).

       FD  DIFF-REPORT-FILE
           LABEL RECORDS ARE STANDARD
           BLOCK CONTAINS 0 RECORDS
           RECORDING MODE IS F.
       01  DIFF-REPORT-REC             PIC X(133).


           EJECT
       WORKING-STORAGE SECTION.
       01  WS-PROGRAM                  PIC X(08) VALUE ' JXCU001'.

      *+ INSTALLATION SPECIFIC CONSTANTS
       01  INSTALLATION-CONSTANTS.
           05  WS-ILBOABN0             PIC X(08) VALUE 'ILBOABN0'.
           05  WS-CEE3ABD              PIC X(07) VALUE 'CEE3ABD'.
           05  WS-RETURN-CODE          PIC S9(4)       VALUE ZERO.
           05  WS-ABEND-CODE           PIC S9(4) COMP  VALUE ZERO.
           05  WS-CEE-ABEND-CODE       PIC S9(9) COMP  VALUE ZERO.
           05  WS-CEE-CLEANUP-CODE     PIC S9(9) COMP  VALUE ZERO.
           05  WS-ABEND-PARA           PIC X(30) VALUE SPACE.
           05  WS-ABEND-REASON-1       PIC X(60) VALUE SPACE.
           05  WS-ABEND-REASON-2       PIC X(60) VALUE SPACE.

      *  MAXIMUM LINES PER PAGE
           05  INST-LINES-PER-PAGE     PIC S9(3) COMP-3 VALUE +59.

      *  SET TO 'Y' IF RUNNING LE LANGUAGE ENVIRONMENT
           05  INST-CEE-SW                PIC X(01) VALUE 'Y'.
               88  INST-CEE                         VALUE 'Y'.
      *  SET TO 'Y' IF RUNNING IN MICROFOCUS COBOL
           05  INST-MF-COBOL-SW           PIC X(01) VALUE 'N'.
               88  INST-MF-COBOL                    VALUE 'Y'.
      *  SET TO 'E' IF EBCDIC CHARACTERS
      *  SET TO 'A' IF ASCII  CHARACTERS
           05  INST-CODE-TABLE            PIC X(01) VALUE 'E'.
               88  INST-EBCDIC                      VALUE 'E'.
               88  INST-ASCII                       VALUE 'A'.


       01  WORK-AREAS.
           05  FILE-1-STATUS           PIC X(02) VALUE SPACES.
           05  FILE-2-STATUS           PIC X(02) VALUE SPACES.
           05  FILE-1D-STATUS          PIC X(02) VALUE SPACES.
           05  FILE-2D-STATUS          PIC X(02) VALUE SPACES.
           05  FILE-1E-STATUS          PIC X(02) VALUE SPACES.
           05  FILE-2E-STATUS          PIC X(02) VALUE SPACES.
           05  CARD-FILE-STATUS        PIC X(02) VALUE SPACES.

           05  WS-WORK                 PIC X(9).
           05  WS-WORK-NBRX.
               10  WS-WORK-NBR         PIC 9(5).
           05  WS-WORK-MAX-NBRX.
               10  WS-WORK-MAX-NBR     PIC 9(9).
           05  WS-OFFSET               PIC 9(5).
           05  WS-MASK-LENGTH          PIC 9(5).
           05  MASK-TABLE-MAX          PIC 9(5)  VALUE 12200.
           05  MAX-REC-LENGTH          PIC 9(5)  VALUE 12150.
           05  MIN-REC-LENGTH          PIC 9(5)  VALUE 10.
           05  MAX-REC-LENGTH-USED     PIC 9(5)  VALUE 10.
           05  WS-MAX-DIFF             PIC 9(9)  VALUE 999999999.
           05  WS-MAX-READ             PIC 9(9)  VALUE 999999999.
           05  MAX-100-BYTES           PIC S9(7) COMP-3 VALUE ZERO.
           05  MAX-KEY-BYTES           PIC 9(5)  VALUE 1000.
           05  MAX-KEY-SPLIT           PIC 9(5)  VALUE 100.
           05  WS-SHOW-DIFF            PIC X     VALUE '-'.
           05  WS-SHOW-MASK            PIC X     VALUE '*'.
           05  WS-SHOW-SIGNMASK        PIC X     VALUE '#'.
           05  WS-SHOW-NULLMASK        PIC X     VALUE '@'.
           05  WS-START-POS            PIC 9(9).
           05  WS-END-POS              PIC 9(9).
           05  CARD-ERROR-REASON       PIC X(80) VALUE SPACES.

           05  WS-100-BYTES            PIC X(100) VALUE SPACES.
           05  WS1-100-BYTES           PIC X(100) VALUE SPACES.
           05  WS2-100-BYTES           PIC X(100) VALUE SPACES.
           05  WS3-100-BYTES           PIC X(100) VALUE SPACES.
           05  WS-BYTE                 PIC S9(04) COMP.
           05  WS-BYTE-X REDEFINES WS-BYTE.
               10  FILLER              PIC X.
               10  WS-HALF-BYTE        PIC X.
           05  WS-APOST                PIC X          VALUE X'7D'.
           05  WS-QUOTE                PIC X          VALUE X'7F'.
           05  WS-ASCII-APOST          PIC X          VALUE X'27'.
           05  WS-ASCII-QUOTE          PIC X          VALUE X'22'.


           EJECT
      ***************************************************************
      *   HEX CHARACTER TABLE
      *
      *   TO DISPLAY APOSTROPHES AND QUOTES, DO THIS IN INITIALIZATION
      *   FOR EBCDIC, MOVE X'7D' TO WS-HEX-LINE-1(125)  APOST
      *               MOVE X'7F' TO WS-HEX-LINE-1(127)  QUOTE
      *   FOR ASCII,  MOVE X'27' TO WS-HEX-LINE-1-ASCII(039)  APOST
      *               MOVE X'22' TO WS-HEX-LINE-1-ASCII(034)  QUOTE
      ***************************************************************
       01  WS-HEX-DATA.
           05  FILLER             PIC X(07) VALUE ' 01001 '.
           05  FILLER             PIC X(07) VALUE ' 02002 '.
           05  FILLER             PIC X(07) VALUE ' 03003 '.
           05  FILLER             PIC X(07) VALUE ' 04004 '.
           05  FILLER             PIC X(07) VALUE ' 05005 '.
           05  FILLER             PIC X(07) VALUE ' 06006 '.
           05  FILLER             PIC X(07) VALUE ' 07007 '.
           05  FILLER             PIC X(07) VALUE ' 08008 '.
           05  FILLER             PIC X(07) VALUE ' 09009 '.
           05  FILLER             PIC X(07) VALUE ' 0A010 '.
           05  FILLER             PIC X(07) VALUE ' 0B011 '.
           05  FILLER             PIC X(07) VALUE ' 0C012 '.
           05  FILLER             PIC X(07) VALUE ' 0D013 '.
           05  FILLER             PIC X(07) VALUE ' 0E014 '.
           05  FILLER             PIC X(07) VALUE ' 0F015 '.
           05  FILLER             PIC X(07) VALUE ' 10016 '.
           05  FILLER             PIC X(07) VALUE ' 11017 '.
           05  FILLER             PIC X(07) VALUE ' 12018 '.
           05  FILLER             PIC X(07) VALUE ' 13019 '.
           05  FILLER             PIC X(07) VALUE ' 14020 '.
           05  FILLER             PIC X(07) VALUE ' 15021 '.
           05  FILLER             PIC X(07) VALUE ' 16022 '.
           05  FILLER             PIC X(07) VALUE ' 17023 '.
           05  FILLER             PIC X(07) VALUE ' 18024 '.
           05  FILLER             PIC X(07) VALUE ' 19025 '.
           05  FILLER             PIC X(07) VALUE ' 1A026 '.
           05  FILLER             PIC X(07) VALUE ' 1B027 '.
           05  FILLER             PIC X(07) VALUE ' 1C028 '.
           05  FILLER             PIC X(07) VALUE ' 1D029 '.
           05  FILLER             PIC X(07) VALUE ' 1E030 '.
           05  FILLER             PIC X(07) VALUE ' 1F031 '.
           05  FILLER             PIC X(07) VALUE ' 20032 '.
           05  FILLER             PIC X(07) VALUE ' 21033!'.
           05  FILLER             PIC X(07) VALUE ' 22034 '.
           05  FILLER             PIC X(07) VALUE ' 23035#'.
           05  FILLER             PIC X(07) VALUE ' 24036$'.
           05  FILLER             PIC X(07) VALUE ' 25037%'.
           05  FILLER             PIC X(07) VALUE ' 26038&'.
           05  FILLER             PIC X(07) VALUE ' 27039 '.
           05  FILLER             PIC X(07) VALUE ' 28040('.
           05  FILLER             PIC X(07) VALUE ' 29041)'.
           05  FILLER             PIC X(07) VALUE ' 2A042*'.
           05  FILLER             PIC X(07) VALUE ' 2B043+'.
           05  FILLER             PIC X(07) VALUE ' 2C044,'.
           05  FILLER             PIC X(07) VALUE ' 2D045-'.
           05  FILLER             PIC X(07) VALUE ' 2E046.'.
           05  FILLER             PIC X(07) VALUE ' 2F047/'.
           05  FILLER             PIC X(07) VALUE ' 300480'.
           05  FILLER             PIC X(07) VALUE ' 310491'.
           05  FILLER             PIC X(07) VALUE ' 320502'.
           05  FILLER             PIC X(07) VALUE ' 330513'.
           05  FILLER             PIC X(07) VALUE ' 340524'.
           05  FILLER             PIC X(07) VALUE ' 350535'.
           05  FILLER             PIC X(07) VALUE ' 360546'.
           05  FILLER             PIC X(07) VALUE ' 370557'.
           05  FILLER             PIC X(07) VALUE ' 380568'.
           05  FILLER             PIC X(07) VALUE ' 390579'.
           05  FILLER             PIC X(07) VALUE ' 3A058:'.
           05  FILLER             PIC X(07) VALUE ' 3B059;'.
           05  FILLER             PIC X(07) VALUE ' 3C060<'.
           05  FILLER             PIC X(07) VALUE ' 3D061='.
           05  FILLER             PIC X(07) VALUE ' 3E062>'.
           05  FILLER             PIC X(07) VALUE ' 3F063?'.
           05  FILLER             PIC X(07) VALUE ' 40064@'.
           05  FILLER             PIC X(07) VALUE ' 41065A'.
           05  FILLER             PIC X(07) VALUE ' 42066B'.
           05  FILLER             PIC X(07) VALUE ' 43067C'.
           05  FILLER             PIC X(07) VALUE ' 44068D'.
           05  FILLER             PIC X(07) VALUE ' 45069E'.
           05  FILLER             PIC X(07) VALUE ' 46070F'.
           05  FILLER             PIC X(07) VALUE ' 47071G'.
           05  FILLER             PIC X(07) VALUE ' 48072H'.
           05  FILLER             PIC X(07) VALUE ' 49073I'.
           05  FILLER             PIC X(07) VALUE '¢4A074J'.
           05  FILLER             PIC X(07) VALUE '.4B075K'.
           05  FILLER             PIC X(07) VALUE '<4C076L'.
           05  FILLER             PIC X(07) VALUE '(4D077M'.
           05  FILLER             PIC X(07) VALUE '+4E078N'.
           05  FILLER             PIC X(07) VALUE '|4F079O'.
           05  FILLER             PIC X(07) VALUE '&50080P'.
           05  FILLER             PIC X(07) VALUE ' 51081Q'.
           05  FILLER             PIC X(07) VALUE ' 52082R'.
           05  FILLER             PIC X(07) VALUE ' 53083S'.
           05  FILLER             PIC X(07) VALUE ' 54084T'.
           05  FILLER             PIC X(07) VALUE ' 55085U'.
           05  FILLER             PIC X(07) VALUE ' 56086V'.
           05  FILLER             PIC X(07) VALUE ' 57087W'.
           05  FILLER             PIC X(07) VALUE ' 58088X'.
           05  FILLER             PIC X(07) VALUE ' 59089Y'.
           05  FILLER             PIC X(07) VALUE '!5A090Z'.
           05  FILLER             PIC X(07) VALUE '$5B091['.
           05  FILLER             PIC X(07) VALUE '*5C092\'.
           05  FILLER             PIC X(07) VALUE ')5D093]'.
           05  FILLER             PIC X(07) VALUE ';5E094^'.
           05  FILLER             PIC X(07) VALUE '¬5F095_'.
           05  FILLER             PIC X(07) VALUE '-60096`'.
           05  FILLER             PIC X(07) VALUE '/61097a'.
           05  FILLER             PIC X(07) VALUE ' 62098b'.
           05  FILLER             PIC X(07) VALUE ' 63099c'.
           05  FILLER             PIC X(07) VALUE ' 64100d'.
           05  FILLER             PIC X(07) VALUE ' 65101e'.
           05  FILLER             PIC X(07) VALUE ' 66102f'.
           05  FILLER             PIC X(07) VALUE ' 67103g'.
           05  FILLER             PIC X(07) VALUE ' 68104h'.
           05  FILLER             PIC X(07) VALUE ' 69105i'.
           05  FILLER             PIC X(07) VALUE '¦6A106j'.
           05  FILLER             PIC X(07) VALUE ',6B107k'.
           05  FILLER             PIC X(07) VALUE '%6C108l'.
           05  FILLER             PIC X(07) VALUE '_6D119m'.
           05  FILLER             PIC X(07) VALUE '>6E110n'.
           05  FILLER             PIC X(07) VALUE '?6F111o'.
           05  FILLER             PIC X(07) VALUE ' 70112p'.
           05  FILLER             PIC X(07) VALUE ' 71113q'.
           05  FILLER             PIC X(07) VALUE ' 72114r'.
           05  FILLER             PIC X(07) VALUE ' 73115s'.
           05  FILLER             PIC X(07) VALUE ' 74116t'.
           05  FILLER             PIC X(07) VALUE ' 75117u'.
           05  FILLER             PIC X(07) VALUE ' 76118v'.
           05  FILLER             PIC X(07) VALUE ' 77119w'.
           05  FILLER             PIC X(07) VALUE ' 78120x'.
           05  FILLER             PIC X(07) VALUE '`79121y'.
           05  FILLER             PIC X(07) VALUE ':7A122z'.
           05  FILLER             PIC X(07) VALUE '#7B123{'.
           05  FILLER             PIC X(07) VALUE '@7C124|'.
           05  FILLER             PIC X(07) VALUE ' 7D125}'.
           05  FILLER             PIC X(07) VALUE '=7E126~'.
           05  FILLER             PIC X(07) VALUE '"7F127 '.
           05  FILLER             PIC X(07) VALUE ' 80128 '.
           05  FILLER             PIC X(07) VALUE 'a81129 '.
           05  FILLER             PIC X(07) VALUE 'b82130 '.
           05  FILLER             PIC X(07) VALUE 'c83131 '.
           05  FILLER             PIC X(07) VALUE 'd84132 '.
           05  FILLER             PIC X(07) VALUE 'e85133 '.
           05  FILLER             PIC X(07) VALUE 'f86134 '.
           05  FILLER             PIC X(07) VALUE 'g87135 '.
           05  FILLER             PIC X(07) VALUE 'h88136 '.
           05  FILLER             PIC X(07) VALUE 'i89137 '.
           05  FILLER             PIC X(07) VALUE ' 8A138 '.
           05  FILLER             PIC X(07) VALUE ' 8B139 '.
           05  FILLER             PIC X(07) VALUE ' 8C140 '.
           05  FILLER             PIC X(07) VALUE ' 8D141 '.
           05  FILLER             PIC X(07) VALUE ' 8E142 '.
           05  FILLER             PIC X(07) VALUE ' 8F143 '.
           05  FILLER             PIC X(07) VALUE ' 90144 '.
           05  FILLER             PIC X(07) VALUE 'j91145 '.
           05  FILLER             PIC X(07) VALUE 'k92146 '.
           05  FILLER             PIC X(07) VALUE 'l93147 '.
           05  FILLER             PIC X(07) VALUE 'm94148 '.
           05  FILLER             PIC X(07) VALUE 'n95149 '.
           05  FILLER             PIC X(07) VALUE 'o96150 '.
           05  FILLER             PIC X(07) VALUE 'p97151 '.
           05  FILLER             PIC X(07) VALUE 'q98152 '.
           05  FILLER             PIC X(07) VALUE 'r99153 '.
           05  FILLER             PIC X(07) VALUE ' 9A154 '.
           05  FILLER             PIC X(07) VALUE ' 9B155 '.
           05  FILLER             PIC X(07) VALUE ' 9C156 '.
           05  FILLER             PIC X(07) VALUE ' 9D157 '.
           05  FILLER             PIC X(07) VALUE ' 9E158 '.
           05  FILLER             PIC X(07) VALUE ' 9F159 '.
           05  FILLER             PIC X(07) VALUE ' A0160 '.
           05  FILLER             PIC X(07) VALUE '~A1161 '.
           05  FILLER             PIC X(07) VALUE 'sA2162 '.
           05  FILLER             PIC X(07) VALUE 'tA3163 '.
           05  FILLER             PIC X(07) VALUE 'uA4164 '.
           05  FILLER             PIC X(07) VALUE 'vA5165 '.
           05  FILLER             PIC X(07) VALUE 'wA6166 '.
           05  FILLER             PIC X(07) VALUE 'xA7167 '.
           05  FILLER             PIC X(07) VALUE 'yA8168 '.
           05  FILLER             PIC X(07) VALUE 'zA9169 '.
           05  FILLER             PIC X(07) VALUE ' AA170 '.
           05  FILLER             PIC X(07) VALUE ' AB171 '.
           05  FILLER             PIC X(07) VALUE ' AC172 '.
           05  FILLER             PIC X(07) VALUE ' AD173 '.
           05  FILLER             PIC X(07) VALUE ' AE174 '.
           05  FILLER             PIC X(07) VALUE ' AF175 '.
           05  FILLER             PIC X(07) VALUE ' B0176 '.
           05  FILLER             PIC X(07) VALUE ' B1177 '.
           05  FILLER             PIC X(07) VALUE ' B2178 '.
           05  FILLER             PIC X(07) VALUE ' B3179 '.
           05  FILLER             PIC X(07) VALUE ' B4180 '.
           05  FILLER             PIC X(07) VALUE ' B5181 '.
           05  FILLER             PIC X(07) VALUE ' B6182 '.
           05  FILLER             PIC X(07) VALUE ' B7183 '.
           05  FILLER             PIC X(07) VALUE ' B8184 '.
           05  FILLER             PIC X(07) VALUE ' B9185 '.
           05  FILLER             PIC X(07) VALUE ' BA186 '.
           05  FILLER             PIC X(07) VALUE '[BB187 '.
           05  FILLER             PIC X(07) VALUE ']BC188 '.
           05  FILLER             PIC X(07) VALUE ' BD189 '.
           05  FILLER             PIC X(07) VALUE ' BE190 '.
           05  FILLER             PIC X(07) VALUE ' BF191 '.
           05  FILLER             PIC X(07) VALUE '{C0192 '.
           05  FILLER             PIC X(07) VALUE 'AC1193 '.
           05  FILLER             PIC X(07) VALUE 'BC2194 '.
           05  FILLER             PIC X(07) VALUE 'CC3195 '.
           05  FILLER             PIC X(07) VALUE 'DC4196 '.
           05  FILLER             PIC X(07) VALUE 'EC5197 '.
           05  FILLER             PIC X(07) VALUE 'FC6198 '.
           05  FILLER             PIC X(07) VALUE 'GC7199 '.
           05  FILLER             PIC X(07) VALUE 'HC8200 '.
           05  FILLER             PIC X(07) VALUE 'IC9201 '.
           05  FILLER             PIC X(07) VALUE ' CA202 '.
           05  FILLER             PIC X(07) VALUE ' CB203 '.
           05  FILLER             PIC X(07) VALUE ' CC204 '.
           05  FILLER             PIC X(07) VALUE ' CD205 '.
           05  FILLER             PIC X(07) VALUE ' CE206 '.
           05  FILLER             PIC X(07) VALUE ' CF207 '.
           05  FILLER             PIC X(07) VALUE '}D0208 '.
           05  FILLER             PIC X(07) VALUE 'JD1209 '.
           05  FILLER             PIC X(07) VALUE 'KD2210 '.
           05  FILLER             PIC X(07) VALUE 'LD3211 '.
           05  FILLER             PIC X(07) VALUE 'MD4212 '.
           05  FILLER             PIC X(07) VALUE 'ND5213 '.
           05  FILLER             PIC X(07) VALUE 'OD6214 '.
           05  FILLER             PIC X(07) VALUE 'PD7215 '.
           05  FILLER             PIC X(07) VALUE 'QD8216 '.
           05  FILLER             PIC X(07) VALUE 'RD9217 '.
           05  FILLER             PIC X(07) VALUE ' DA218 '.
           05  FILLER             PIC X(07) VALUE ' DB219 '.
           05  FILLER             PIC X(07) VALUE ' DC220 '.
           05  FILLER             PIC X(07) VALUE ' DD221 '.
           05  FILLER             PIC X(07) VALUE ' DE222 '.
           05  FILLER             PIC X(07) VALUE ' DF223 '.
           05  FILLER             PIC X(07) VALUE '\E0224 '.
           05  FILLER             PIC X(07) VALUE ' E1225 '.
           05  FILLER             PIC X(07) VALUE 'SE2226 '.
           05  FILLER             PIC X(07) VALUE 'TE3227 '.
           05  FILLER             PIC X(07) VALUE 'UE4228 '.
           05  FILLER             PIC X(07) VALUE 'VE5229 '.
           05  FILLER             PIC X(07) VALUE 'WE6230 '.
           05  FILLER             PIC X(07) VALUE 'XE7231 '.
           05  FILLER             PIC X(07) VALUE 'YE8232 '.
           05  FILLER             PIC X(07) VALUE 'ZE9233 '.
           05  FILLER             PIC X(07) VALUE ' EA234 '.
           05  FILLER             PIC X(07) VALUE ' EB235 '.
           05  FILLER             PIC X(07) VALUE ' EC236 '.
           05  FILLER             PIC X(07) VALUE ' ED237 '.
           05  FILLER             PIC X(07) VALUE ' EE238 '.
           05  FILLER             PIC X(07) VALUE ' EF239 '.
           05  FILLER             PIC X(07) VALUE '0F0240 '.
           05  FILLER             PIC X(07) VALUE '1F1241 '.
           05  FILLER             PIC X(07) VALUE '2F2242 '.
           05  FILLER             PIC X(07) VALUE '3F3243 '.
           05  FILLER             PIC X(07) VALUE '4F4244 '.
           05  FILLER             PIC X(07) VALUE '5F5245 '.
           05  FILLER             PIC X(07) VALUE '6F6246 '.
           05  FILLER             PIC X(07) VALUE '7F7247 '.
           05  FILLER             PIC X(07) VALUE '8F8248 '.
           05  FILLER             PIC X(07) VALUE '9F9249 '.
           05  FILLER             PIC X(07) VALUE ' FA250 '.
           05  FILLER             PIC X(07) VALUE ' FB251 '.
           05  FILLER             PIC X(07) VALUE ' FC252 '.
           05  FILLER             PIC X(07) VALUE ' FD253 '.
           05  FILLER             PIC X(07) VALUE ' FE254 '.
           05  FILLER             PIC X(07) VALUE ' FF255 '.
           05  FILLER             PIC X(07) VALUE ' 00000 '.
       01  WS-HEX-TABLE REDEFINES WS-HEX-DATA.
           05  WS-HEX-DISPLAY OCCURS 256 TIMES.
               10  WS-HEX-LINE-1       PIC X.
               10  WS-HEXDATA-DISP.
                   15  WS-HEX-LINE-2   PIC X.
                   15  WS-HEX-LINE-3   PIC X.
               10  WS-HEX-VALUE        PIC 9(03).
               10  WS-HEX-LINE-1-ASCII PIC X.


           EJECT
       01  CONTROL-FIELDS.
           05  KEY-LENGTHX.
               10  KEY-LENGTH          PIC 9(5) VALUE ZERO.
               10  KEY-OFFSET          PIC 9(5) VALUE ZERO.
           05  REPORT-TYPE             PIC X(04) VALUE SPACES.
               88  REPORT-TYPE-HEX        VALUE 'HEX '.
               88  REPORT-TYPE-CHAR       VALUE 'CHAR' '    '.
      * FILE NAMES TO PRINT IS SUMMARY REPORT
           05  FILE-NAME-1             PIC X(66)  VALUE SPACE.
           05  FILE-NAME-2             PIC X(66)  VALUE SPACE.

       01  KEY-TABLE.
           05  KEY-OFF-LEN  OCCURS 100 TIMES.
               10  TKEY-OFFSET      PIC 9(5).
               10  TKEY-LENGTH      PIC 9(5).

       01  MASK-FIELDS.
           05  MASKS.
               10  MASK-POS     OCCURS 12200 TIMES
                                INDEXED BY MASK-IX.
                   15  FILLER          PIC X.
                       88  MASK-THIS-BYTE       VALUE 'Y'.
                       88  MASK-THIS-SIGN       VALUE 'S'.
                       88  MASK-THIS-NULL       VALUE '0'.
           05  MASKS-RE REDEFINES MASKS.
               10  MASK-100-POS OCCURS 122 TIMES.
                   15  FILLER   OCCURS 100 TIMES  PIC X.
                       88  MASK-THIS-100-BYTE       VALUE 'Y'.
                       88  MASK-THIS-100-SIGN       VALUE 'S'.
                       88  MASK-THIS-100-NULL       VALUE '0'.

       01  DIFFERENCE-WORK-FIELDS.
      *  USED FOR SHOWING INDIVIDUAL RECORD DIFFERENCES
           05  DIFFERENCE-INDS.
               10  DIFF-100       OCCURS 122 TIMES.
                   15  DIFF-POS   OCCURS 100 TIMES  PIC X.

      *  USED FOR SHOWING SUMMARY AT END OF JOB
           05  TOTAL-DIFFERENCE-INDS.
               10  TDIFF-100      OCCURS 122 TIMES.
                   15  TDIFF-POS  OCCURS 100 TIMES  PIC X.

      *  FILE WORK AREAS
       01  WS-F1-REC-LENGTH            PIC S9(8) COMP VALUE +12150.
       01  WS-F2-REC-LENGTH            PIC S9(8) COMP VALUE +12150.

       01  WS-F1-KEY                   PIC X(1000) VALUE SPACES.
       01  WS-F1-REC.
           05  WS-F1-REC-X.
             10  WS-F1-100          OCCURS 122 TIMES.
                 15  WS-F1-100-BYTE OCCURS 100  PIC X.

       01  WS-F2-KEY                   PIC X(1000) VALUE SPACES.
       01  WS-F2-REC.
           05  WS-F2-REC-X.
             10  WS-F2-100          OCCURS 122 TIMES.
                 15  WS-F2-100-BYTE OCCURS 100  PIC X.

       01  DIFF-COUNT-TABLE.
           05  DIFF-COUNTS          OCCURS 122 TIMES.
               10  TBL-DIFF-CNT        PIC S9(9) COMP-3.

       01  SAVE-DIFF-REPORT-REC        PIC X(132).
       01  SAVE-LINE-SPACING           PIC 9 VALUE ZERO.

       01  COUNTERS.
           05  FILE-1-READ-CNT         PIC S9(9) COMP-3 VALUE ZERO.
           05  FILE-2-READ-CNT         PIC S9(9) COMP-3 VALUE ZERO.
           05  FILE-1D-WRITE-CNT       PIC S9(9) COMP-3 VALUE ZERO.
           05  FILE-2D-WRITE-CNT       PIC S9(9) COMP-3 VALUE ZERO.
           05  FILE-1E-WRITE-CNT       PIC S9(9) COMP-3 VALUE ZERO.
           05  FILE-2E-WRITE-CNT       PIC S9(9) COMP-3 VALUE ZERO.
           05  FILE-1-INS-CNT          PIC S9(9) COMP-3 VALUE ZERO.
           05  FILE-2-INS-CNT          PIC S9(9) COMP-3 VALUE ZERO.
           05  FILE-CARDS-CNT          PIC S9(9) COMP-3 VALUE ZERO.
           05  KEY-CNT                 PIC S9(9) COMP-3 VALUE ZERO.
           05  DIFF-CNT                PIC S9(9) COMP-3 VALUE ZERO.
           05  TOTAL-DIFF-CNT          PIC S9(9) COMP-3 VALUE ZERO.
           05  MATCH-CNT               PIC S9(9) COMP-3 VALUE ZERO.
           05  MASK-ONLY-CNT           PIC S9(9) COMP-3 VALUE ZERO.
           05  PAGE-CNT                PIC S9(5) COMP-3 VALUE ZERO.
           05  LINE-CNT                PIC S9(3) COMP-3 VALUE +80.
           05  HEADER-LINE-CNT         PIC S9(3) COMP-3 VALUE +5.
           05  LINE-SPACING            PIC 9 VALUE ZERO.
           05  WS-DIFF-BYTE-CNT        PIC S9(9) COMP-3 VALUE ZERO.
           05  WS-DIFF-100-BYTE-CNT    PIC S9(9) COMP-3 VALUE ZERO.


       01  SUBSCRIPTS.
           05  PSUB                    PIC S9(8) COMP VALUE ZERO.
           05  WSUB                    PIC S9(8) COMP VALUE ZERO.
           05  KSUB                    PIC S9(8) COMP VALUE ZERO.
           05  HSUB                    PIC S9(4) COMP VALUE ZERO.
           05  XSUB                    PIC S9(4) COMP VALUE ZERO.

       01  SWITCHES.
           05  END-OF-FILE-1-SW           PIC X VALUE SPACE.
               88  END-OF-FILE-1                VALUE 'Y'.
           05  END-OF-FILE-2-SW           PIC X VALUE SPACE.
               88  END-OF-FILE-2                VALUE 'Y'.
           05  END-OF-CARDS-SW            PIC X VALUE SPACE.
               88  END-OF-CARDS                 VALUE 'Y'.
           05  DIFF-FOUND-SW              PIC X VALUE SPACE.
               88  DIFF-FOUND                   VALUE 'Y'.
           05  CC-ERROR-FOUND-SW          PIC X VALUE 'N'.
               88  CC-ERROR-FOUND               VALUE 'Y'.
           05  HELP-PRINTED-SW            PIC X VALUE 'N'.
               88  HELP-PRINTED                 VALUE 'Y'.
           05  RECORD-PRINTED-SW          PIC X VALUE 'N'.
               88  RECORD-PRINTED               VALUE 'Y'.
               88  RECORD-NOT-PRINTED           VALUE 'N'.


       01  DISP-CC-REC-LINE.
           05  FILLER                     PIC X     VALUE SPACE.
           05  DISP-CC-REC-CNT            PIC ZZZ9.
           05  FILLER                     PIC XX    VALUE SPACE.
           05  DISP-CC-REC                PIC X(72) VALUE SPACE.

       01  REPORT-HEAD-3.
           02  FILLER                      PIC X(133) VALUE SPACE.
       01  REPORT-RULER.
           02  FILLER                      PIC X      VALUE SPACE.
           02  FILLER                      PIC X(12)  VALUE SPACE.
           02  FILLER                      PIC X(50)  VALUE
               '----+----1----+----2----+----3----+----4----+----5'.
           02  FILLER                      PIC X(50)  VALUE
               '----+----6----+----7----+----8----+----9----+----0'.
           02  FILLER                      PIC X(02)  VALUE SPACE.
           02  FILLER                      PIC X(12)  VALUE SPACE.

       01  DETAIL-1.
           02  FILLER                      PIC X  VALUE SPACE.
           02  DT-INSERT-FILE-ID           PIC X(16)  VALUE
               'FILE-1 RECORD # '.
           02  DT-RECORD-NBR               PIC ZZ,ZZZ,ZZ9.

       01  DETAIL-2.
           02  FILLER                      PIC X  VALUE SPACE.
           02  DT-START-POS                PIC ZZZZ9.
           02  DT-HYPHEN                   PIC X VALUE '-'.
           02  DT-END-POS                  PIC ZZZZ9.
           02  FILLER                      PIC X  VALUE SPACE.
           02  DT-100-BYTES                PIC X(100) VALUE SPACE.
           02  FILLER                      PIC X(02)  VALUE SPACE.
           02  DT-FILE-ID                  PIC X(18)  VALUE SPACE.

       01  DETAIL-4.
           02  FILLER                      PIC X  VALUE SPACE.
           02  FILLER                      PIC X(16)  VALUE
               'FILE-1 RECORD # '.
           02  DT-RECORD-NBR-1             PIC ZZ,ZZZ,ZZ9.
           02  FILLER                      PIC X(5)  VALUE SPACE.
           02  FILLER                      PIC X(16)  VALUE
               'FILE-2 RECORD # '.
           02  DT-RECORD-NBR-2             PIC ZZ,ZZZ,ZZ9.

       01  REPORT-TRLR-1.
           02  FILLER                      PIC X     VALUE SPACE.
           02  FILLER                      PIC X(05) VALUE SPACE.
           02  RT-TITLE                    PIC X(50) VALUE SPACES.

       01  REPORT-TRLR-2.
           02  FILLER                      PIC X     VALUE SPACE.
           02  FILLER                      PIC X(05) VALUE SPACE.
           02  RT-COUNT                    PIC ZZZ,ZZZ,ZZ9.
           02  FILLER                      PIC X(05) VALUE SPACE.
           02  RT-LITERAL.
               05  FILLER                  PIC X(23) VALUE SPACES.
               05  RT-FILE-NAME            PIC X(66) VALUE SPACES.

       01  REPORT-TRLR-3.
           02  FILLER                      PIC X     VALUE SPACE.
           02  FILLER                      PIC X(21) VALUE SPACE.
           02  FILLER                      PIC X(04) VALUE 'KEY '.
           02  RT-KEY-SEQ                  PIC Z9.
           02  FILLER                      PIC X(02) VALUE SPACE.
           02  FILLER                      PIC X(07) VALUE 'OFFSET '.
           02  RT-KEY-OFFSET               PIC ZZZZ9.
           02  FILLER                      PIC X(05) VALUE SPACE.
           02  FILLER                      PIC X(07) VALUE 'LENGTH '.
           02  RT-KEY-LENGTH               PIC ZZZZ9.

       01  REPORT-TRLR-4.
           02  FILLER                      PIC X     VALUE SPACE.
           02  FILLER                      PIC X(05) VALUE SPACE.
           02  TR-COUNT                    PIC ZZZ,ZZZ,ZZ9.
           02  FILLER                      PIC X(05) VALUE SPACE.
           02  TR-LITERAL                  PIC X(04) VALUE 'POS '.
           02  TR-START-POS                PIC ZZZZ9.
           02  TR-HYPHEN                   PIC X VALUE '-'.
           02  TR-END-POS                  PIC ZZZZ9.

       01  REPORT-TRLR-5.
           02  FILLER                      PIC X     VALUE SPACE.
           02  FILLER                      PIC X(21) VALUE SPACE.
           02  RT-DIFF-CHAR                PIC X(01) VALUE SPACE.
           02  FILLER                      PIC X(05) VALUE SPACE.
           02  RT-DIFF-DESC                PIC X(45) VALUE SPACE.

           EJECT
      *   REPORT HEADINGS AND FOOTER
       01  HEADING-1.
           05  FILLER                  PIC X     VALUE SPACE.
           05  HD1-RUN-DATE            PIC X(10).
           05  FILLER                  PIC X(31) VALUE SPACES.
           05  HD1-COMPANY-NAME        PIC X(50) VALUE SPACES.
           05  FILLER                  PIC X(21) VALUE SPACES.
           05  FILLER                  PIC X(08) VALUE 'PAGE: '.
           05  HD1-PAGE                PIC ZZZ,ZZZ,ZZ9.

       01  HEADING-2.
           05  FILLER                  PIC X     VALUE SPACE.
           05  HD2-RUN-TIME            PIC X(05).
           05  FILLER                  PIC X(36) VALUE SPACES.
           05  HD2-TITLE               PIC X(50) VALUE SPACES.
           05  FILLER                  PIC X(21) VALUE SPACES.
           05  FILLER                  PIC X(08) VALUE 'REPORT: '.
           05  HD2-PROGRAM             PIC X(08) VALUE SPACES.
           05  FILLER                  PIC X(01) VALUE '-'.
           05  HD2-REPORT              PIC X(02) VALUE SPACES.

       01  FOOTER-1.
           05  FILLER                  PIC X     VALUE SPACE.
           05  FT1-PRODUCT.
               10  FILLER              PIC X(35) VALUE
               'FILEWIZ COMPARE REL 6.0  VER 01'.
               10  FILLER              PIC X(11) VALUE SPACES.
           05  FT1-VENDOR              PIC X(43) VALUE
               '(C) 2005 RENAISSANCE DATA SYSTEMS INC.'.
           05  FILLER                  PIC X(10) VALUE SPACES.
           05  FT1-DEBUG-FIELDS.
               10  FT1-COMPILE-LIT1    PIC X(12) VALUE SPACES.
               10  FT1-COMP-DATE       PIC X(10) VALUE SPACES.
               10  FT1-COMPILE-LIT2    PIC X(04) VALUE SPACES.
               10  FT1-COMP-TIME       PIC X(05) VALUE SPACES.


       01  RULER-LINE.
           05  FILLER                  PIC X     VALUE SPACE.
           05  RULER-1-TO-132.
               10  RULER-1-TO-50       PIC X(50) VALUE
               '----+----1----+----2----+----3----+----4----+----5'.
               10  RULER-51-TO-100     PIC X(50) VALUE
               '----+----6----+----7----+----8----+----9----+----0'.
               10  RULER-101-TO-132    PIC X(32) VALUE
               '----+----1----+----2----+----3--'.

           EJECT
      *  DATE-TIME WORK AREAS
       01  WS-CURRENT-DATE-WORK.
           05  WS-CURRDATE-CC                 PIC 9(02).
           05  WS-CURRDATE-YY                 PIC 9(02).
           05  WS-CURRDATE-MM                 PIC 9(02).
           05  WS-CURRDATE-DD                 PIC 9(02).
           05  WS-CURRDATE-HR                 PIC 9(02).
           05  WS-CURRDATE-MIN                PIC 9(02).
           05  WS-CURRDATE-SEC                PIC 9(02).
           05  WS-CURRDATE-HSEC               PIC 9(02).
           05  WS-CURRDATE-PLUS-MINUS         PIC X(01).
           05  WS-CURRDATE-PM-HR              PIC 9(02).
           05  WS-CURRDATE-PM-MIN             PIC 9(02).
       01  WS-CURRENT-DATE-WORK-2 REDEFINES
           WS-CURRENT-DATE-WORK.
           05  WS-CURRDATE-DATE.
               10  WS-CURRDATE-CCYY           PIC 9(04).
               10  FILLER                     PIC X(04).
           05  WS-CURRDATE-TIME               PIC X(08).
           05  WS-CURRDATE-GREENWICH          PIC X(05).
       01  WS-CURRENT-DATE-WORK-3 REDEFINES
           WS-CURRENT-DATE-WORK.
           05  FILLER                         PIC X(02).
           05  WS-CURRDATE-DATE-YMD           PIC X(06).
           05  WS-CURRDATE-TIME-HMS           PIC X(06).
           05  FILLER                         PIC X(07).

      *  DISPLAY RUN DATE
       01  WS-RUN-DATE-DISPLAY.
           05  FILLER                         PIC X VALUE '*'.
           05  FILLER                         PIC X(03) VALUE SPACES.
           05  WS-RD-PROGRAM                  PIC X(08) VALUE SPACES.
           05  FILLER                         PIC X(13) VALUE
               ' RUN ON      '.
           05  WS-RUN-DATE-FORMATTED.
               10  WS-RD-MM                   PIC 9(02).
               10  FILLER                     PIC X  VALUE '/'.
               10  WS-RD-DD                   PIC 9(02).
               10  FILLER                     PIC X  VALUE '/'.
               10  WS-RD-CC                   PIC 9(02).
               10  WS-RD-YY                   PIC 9(02).
           05  FILLER                         PIC X(4) VALUE ' AT '.
           05  WS-RUN-TIME-FORMATTED.
               10  WS-RD-HR                   PIC 9(02).
               10  FILLER                     PIC X  VALUE ':'.
               10  WS-RD-MIN                  PIC 9(02).

      *  DISPLAY COMPILE DATE
       01  WS-COMPL-DATE-DISPLAY.
           05  FILLER                         PIC X VALUE '*'.
           05  FILLER                         PIC X(03) VALUE SPACES.
           05  WS-CD-PROGRAM                  PIC X(08) VALUE SPACES.
           05  FILLER                         PIC X(13) VALUE
               ' COMPILED ON '.
           05  WS-COMPL-DATE-FORMATTED.
               10  WS-CD-MM                   PIC 9(02).
               10  FILLER                     PIC X  VALUE '/'.
               10  WS-CD-DD                   PIC 9(02).
               10  FILLER                     PIC X  VALUE '/'.
               10  WS-CD-CC                   PIC 9(02).
               10  WS-CD-YY                   PIC 9(02).
           05  FILLER                         PIC X(4) VALUE ' AT '.
           05  WS-COMPL-TIME-FORMATTED.
               10  WS-CD-HR                   PIC 9(02).
               10  FILLER                     PIC X  VALUE ':'.
               10  WS-CD-MIN                  PIC 9(02).




           EJECT
       PROCEDURE DIVISION.


       A000-MAINLINE.

           PERFORM A1000-INITIALIZATION THRU A1000-EXIT.

           PERFORM C1000-COMPARE-RECS THRU C1000-EXIT
             UNTIL END-OF-FILE-1 AND END-OF-FILE-2.

           PERFORM A9000-TERMINATION THRU A9000-EXIT.

           GOBACK.

      **************************************************************
      * INITIALIZATION ROUTINES                                    *
      *   GET CURRENT DATE AND TIME.                               *
      *   PROCESS INPUT CARDS                                      *
      *   OPEN FILES                                               *
      *   READ FIRST RECORDS IN EACH FILE TO COMPARE.              *
      *                                                            *
      **************************************************************
       A1000-INITIALIZATION.

           DISPLAY 'PROGRAM JXCU001 - COMPARE FILES'.

      *  CODE FOR MICROFOCUS COBOL - USE ASCII VALUES
           IF INST-MF-COBOL
              MOVE WS-ASCII-APOST  TO WS-APOST
              MOVE WS-ASCII-QUOTE  TO WS-QUOTE
           END-IF.

      *  FOR EBCDIC DISPLAY VALUES
           MOVE WS-APOST        TO WS-HEX-LINE-1(125)
           MOVE WS-QUOTE        TO WS-HEX-LINE-1(127)
      *  FOR ASCII DISPLAY VALUES
           MOVE WS-ASCII-APOST  TO WS-HEX-LINE-1-ASCII(039)
           MOVE WS-ASCII-QUOTE  TO WS-HEX-LINE-1-ASCII(034)


           MOVE 'FILEWIZ COMPARE  REL 6.0  VER 01   ' TO FT1-PRODUCT.
           MOVE WS-PROGRAM             TO WS-RD-PROGRAM
                                          WS-CD-PROGRAM
                                          HD2-PROGRAM.

           MOVE SPACES TO TOTAL-DIFFERENCE-INDS.
           PERFORM VARYING KSUB FROM 1 BY 1
                   UNTIL KSUB > MAX-KEY-SPLIT
               MOVE ZERO TO TKEY-OFFSET(KSUB)
               MOVE ZERO TO TKEY-LENGTH(KSUB)
           END-PERFORM.

      *  DATE AND TIME INITIALIZATION AND DISPLAY

      **  GET COMPILE DATE AND TIME
           MOVE FUNCTION WHEN-COMPILED  TO
               WS-CURRENT-DATE-WORK.
           MOVE WS-CURRDATE-MM     TO WS-CD-MM.
           MOVE WS-CURRDATE-DD     TO WS-CD-DD.
           MOVE WS-CURRDATE-CC     TO WS-CD-CC.
           MOVE WS-CURRDATE-YY     TO WS-CD-YY.

           MOVE WS-CURRDATE-HR     TO WS-CD-HR.
           MOVE WS-CURRDATE-MIN    TO WS-CD-MIN.

           DISPLAY WS-COMPL-DATE-DISPLAY.

      **  GET RUN DATE AND TIME
           MOVE FUNCTION CURRENT-DATE  TO
               WS-CURRENT-DATE-WORK.

           MOVE WS-CURRDATE-MM     TO WS-RD-MM.
           MOVE WS-CURRDATE-DD     TO WS-RD-DD.
           MOVE WS-CURRDATE-CC     TO WS-RD-CC.
           MOVE WS-CURRDATE-YY     TO WS-RD-YY.

           MOVE WS-CURRDATE-HR     TO WS-RD-HR.
           MOVE WS-CURRDATE-MIN    TO WS-RD-MIN.

           DISPLAY WS-RUN-DATE-DISPLAY.

           MOVE  WS-RUN-DATE-FORMATTED       TO HD1-RUN-DATE.
           MOVE  WS-RUN-TIME-FORMATTED       TO HD2-RUN-TIME.


           MOVE  WS-COMPL-DATE-FORMATTED   TO FT1-COMP-DATE
           MOVE  WS-COMPL-TIME-FORMATTED   TO FT1-COMP-TIME
           MOVE 'COMPILED ON'  TO FT1-COMPILE-LIT1
           MOVE ' AT '         TO FT1-COMPILE-LIT2.


           PERFORM A2210-PRINT-GENERAL-HELP THRU A2210-EXIT.

           INITIALIZE DIFF-COUNT-TABLE.

           PERFORM A2000-CONTROL-CARDS THRU A2000-EXIT.
           IF CC-ERROR-FOUND
               DISPLAY '   '
               DISPLAY '  ERROR FOUND IN CONTROL CARDS - PROGRAM'
                       ' WILL NOT CONTINUE'
               MOVE 100  TO WS-ABEND-CODE
                            WS-CEE-ABEND-CODE
               MOVE 'A1000-INITIALIZATION'  TO WS-ABEND-PARA
               MOVE 'CONTROL CARD ERROR'    TO WS-ABEND-REASON-1
               PERFORM Z9000-ABEND-PROGRAM
           ELSE
               PERFORM A2200-PRINT-CARD-HELP THRU A2200-EXIT.

           OPEN INPUT FILE-1
                      FILE-2.
           OPEN OUTPUT FILE-1-DIFF
                       FILE-2-DIFF
                       FILE-1-INS
                       FILE-2-INS.

           OPEN OUTPUT DIFF-REPORT-FILE.


           IF FILE-1-STATUS NOT = '00' AND '97'
               DISPLAY '   BAD OPEN ON FILE 1.  STATUS = '
                       FILE-1-STATUS
               MOVE 'Y' TO END-OF-FILE-1-SW
               MOVE HIGH-VALUES TO WS-F1-KEY
               MOVE 101  TO WS-ABEND-CODE
                            WS-CEE-ABEND-CODE
               MOVE 'A1000-INITIALIZATION'  TO WS-ABEND-PARA
               MOVE 'OPEN ERROR ON FILE 1'  TO WS-ABEND-REASON-1
               PERFORM Z9000-ABEND-PROGRAM
           ELSE
               PERFORM X1000-READ-FILE-1 THRU X1000-EXIT.

           IF FILE-2-STATUS NOT = '00' AND '97'
               DISPLAY '   BAD OPEN ON FILE 2.  STATUS = '
                       FILE-2-STATUS
               MOVE 'Y' TO END-OF-FILE-2-SW
               MOVE HIGH-VALUES TO WS-F2-KEY
               MOVE 102  TO WS-ABEND-CODE
                            WS-CEE-ABEND-CODE
               MOVE 'A1000-INITIALIZATION'  TO WS-ABEND-PARA
               MOVE 'OPEN ERROR ON FILE 2'  TO WS-ABEND-REASON-1
           ELSE
               PERFORM X2000-READ-FILE-2 THRU X2000-EXIT.

           IF END-OF-FILE-1
               DISPLAY 'NO RECORDS IN FILE 1'
               DISPLAY '   '
               DISPLAY '   '.
           IF END-OF-FILE-2
               DISPLAY 'NO RECORDS IN FILE 2'
               DISPLAY '   '
               DISPLAY '   '.


      *+  INSTALLATION SPECIFIC INITIALIZATION ROUTINES
      *
           MOVE '                FILEWIZ COMPARE'
                                       TO HD1-COMPANY-NAME.
           SUBTRACT 4             FROM INST-LINES-PER-PAGE.


       A1000-EXIT.
           EXIT.
           EJECT
      *------------------------------------------------------------*
      *    EDIT INPUT CONTROL CARDS                                *
      *------------------------------------------------------------*
       A2000-CONTROL-CARDS.
           OPEN INPUT CONTROL-CARDS.

           IF CARD-FILE-STATUS NOT = '00' AND '97'
               DISPLAY '   BAD OPEN ON CARD FILE.  '
                       'STATUS = ' CARD-FILE-STATUS
               MOVE 'Y' TO END-OF-CARDS-SW
               SET CC-ERROR-FOUND TO TRUE
               GO TO A2000-EXIT
           END-IF.

           MOVE ZERO TO KEY-LENGTH.
           MOVE SPACES TO MASKS.

           DISPLAY '   '.
           DISPLAY '=========   CONTROL CARDS ========== '.
           DISPLAY '   '.

           PERFORM X3000-READ-CARDS THRU X3000-EXIT.
           IF END-OF-CARDS
               DISPLAY '  NO INPUT CONTROL CARDS FOUND'
               SET CC-ERROR-FOUND TO TRUE
           ELSE
               PERFORM A2100-EDIT-CARDS THRU A2100-EXIT
                   UNTIL END-OF-CARDS.

           DISPLAY '   '.
           DISPLAY '=========   END OF CARDS  ========== '.
           DISPLAY '   '.

      *  MAKE SURE TOTAL KEY LENGTH IS NOT LONGER THAN ALLOWED
           MOVE ZERO TO KEY-LENGTH.
           PERFORM VARYING KSUB FROM 1 BY 1
                   UNTIL KSUB > KEY-CNT
               COMPUTE KEY-LENGTH = KEY-LENGTH + TKEY-LENGTH(KSUB)
           END-PERFORM.

           IF KEY-LENGTH > MAX-KEY-BYTES
               STRING 'ERROR: MORE THAN MAX ' DELIMITED BY SIZE
                      MAX-KEY-BYTES       DELIMITED BY SIZE
                      ' BYTES IN KEY.'    DELIMITED BY SIZE
                         INTO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT.

           CLOSE CONTROL-CARDS.

       A2000-EXIT.
           EXIT.

       A2100-EDIT-CARDS.

           IF CC-TYPE-KEY
               PERFORM A2110-EDIT-KEY-CARD THRU A2110-EXIT
           ELSE
           IF CC-TYPE-MASK
               PERFORM A2120-EDIT-MASK-CARD THRU A2120-EXIT
           ELSE
           IF CC-TYPE-FILE
               PERFORM A2130-EDIT-FILE-CARD THRU A2130-EXIT
           ELSE
           IF CC-TYPE-MAXDIFF
               PERFORM A2140-EDIT-MAX-CARD THRU A2140-EXIT
           ELSE
           IF CC-TYPE-MAXREAD
               PERFORM A2140-EDIT-MAX-CARD THRU A2140-EXIT
           ELSE
           IF CC-TYPE-REPORT
               PERFORM A2150-EDIT-RPT-CARD THRU A2150-EXIT
           ELSE
           IF CC-TYPE-SIGNMASK
               PERFORM A2160-EDIT-SIGNMASK-CARD THRU A2160-EXIT
           ELSE
           IF CC-TYPE-NULLMASK
               PERFORM A2170-EDIT-NULLMASK-CARD THRU A2170-EXIT
           ELSE
           IF CC-TYPE(1:1) = '*' OR ' '
               NEXT SENTENCE
           ELSE
               MOVE 'ERROR: UNKNOWN CARD TYPE' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT.

           MOVE CC-REC TO DISP-CC-REC.
           MOVE FILE-CARDS-CNT  TO DISP-CC-REC-CNT.
           DISPLAY DISP-CC-REC-LINE.

           PERFORM X3000-READ-CARDS THRU X3000-EXIT.

       A2100-EXIT.
           EXIT.
           EJECT
      ****************************************************************
      *  READ ALL KEY CARDS INTO A TABLE
      *  MAKE THE OFFSET AND LENGTH NUMERIC
      ****************************************************************
       A2110-EDIT-KEY-CARD.

           MOVE ZERO TO KEY-LENGTH.
           MOVE ZERO TO KEY-OFFSET.

      *  PARSE KEY OFFSET - IT SHOULD END WITH A COMMA
           MOVE SPACES TO WS-WORK.
           MOVE 1 TO WSUB.
           PERFORM VARYING PSUB FROM 1 BY 1
                   UNTIL PSUB > 20 OR
                   WSUB > 5  OR
                   CC-KEY-OFF-LEN(PSUB:1) = ',' OR ' '
               MOVE CC-KEY-OFF-LEN(PSUB:1) TO WS-WORK (WSUB:1)
               ADD 1 TO WSUB
           END-PERFORM.

           IF CC-KEY-OFF-LEN(PSUB:1) NOT = ','
               MOVE 'ERROR: INVALID KEY OFFSET FORMAT ' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2110-EXIT.

      * MAKE KEY OFFSET NUMERIC
           SUBTRACT 1 FROM WSUB.

           MOVE 5 TO KSUB.
           PERFORM VARYING WSUB FROM WSUB BY -1
                   UNTIL WSUB < 1
               MOVE WS-WORK (WSUB:1) TO KEY-OFFSET(KSUB:1)
               SUBTRACT 1 FROM KSUB
           END-PERFORM.

           IF KEY-OFFSET NOT NUMERIC OR
              KEY-OFFSET = ZERO
               DISPLAY '>>> WS WORK    = ' WS-WORK ' LEN= ' WSUB
               DISPLAY '>>> KEY OFFSET = ' KEY-OFFSET
               MOVE 'ERROR: NON-NUMERIC KEY OFFSET ' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2110-EXIT.

      *  PARSE KEY LENGTH
           MOVE SPACES TO WS-WORK.
           ADD  1 TO PSUB.
           MOVE 1 TO WSUB.
           PERFORM VARYING PSUB FROM PSUB BY 1
                   UNTIL PSUB > 20 OR
                   WSUB > 5  OR
                   CC-KEY-OFF-LEN(PSUB:1) = ' '
               MOVE CC-KEY-OFF-LEN(PSUB:1) TO WS-WORK (WSUB:1)
               ADD 1 TO WSUB
           END-PERFORM.

      * MAKE KEY LENGTH NUMERIC
           SUBTRACT 1 FROM WSUB.

           MOVE 5 TO KSUB.
           PERFORM VARYING WSUB FROM WSUB BY -1
                   UNTIL WSUB < 1
               MOVE WS-WORK (WSUB:1) TO KEY-LENGTH(KSUB:1)
               SUBTRACT 1 FROM KSUB
           END-PERFORM.

           IF KEY-LENGTH NOT NUMERIC OR
              KEY-LENGTH = ZERO
               DISPLAY '>>> WS WORK    = ' WS-WORK ' LEN= ' WSUB
               DISPLAY '>>> KEY LENGTH = ' KEY-LENGTH
               MOVE 'ERROR: NON-NUMERIC KEY LENGTH ' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2110-EXIT.

           ADD 1 TO KEY-CNT.
           IF KEY-CNT > MAX-KEY-SPLIT
               STRING 'ERROR: MORE THAN MAX ' DELIMITED BY SIZE
                      MAX-KEY-SPLIT       DELIMITED BY SIZE
                      ' KEY CARDS. '      DELIMITED BY SIZE
                         INTO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2110-EXIT.

           MOVE KEY-LENGTH TO TKEY-LENGTH(KEY-CNT)
           MOVE KEY-OFFSET TO TKEY-OFFSET(KEY-CNT).

       A2110-EXIT.
           EXIT.

           EJECT
      ****************************************************************
      *  READ ALL MASK CARDS
      *  SET A MASK INDICATOR IN THE MASK TABLE FOR EACH BYTE MASKED
      ****************************************************************
       A2120-EDIT-MASK-CARD.
      *  PARSE OFFSET - IT SHOULD END WITH A COMMA
           MOVE SPACES TO WS-WORK.
           MOVE 1 TO WSUB.
           PERFORM VARYING PSUB FROM 1 BY 1
                   UNTIL PSUB > 20 OR
                   WSUB > 5  OR
                   CC-MASK-OFF-LEN(PSUB:1) = ',' OR ' '
               MOVE CC-MASK-OFF-LEN(PSUB:1) TO WS-WORK (WSUB:1)
               ADD 1 TO WSUB
           END-PERFORM.

           IF CC-MASK-OFF-LEN(PSUB:1) NOT = ','
               MOVE 'ERROR: INVALID MASK FORMAT ' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2120-EXIT.

           MOVE ZERO TO WS-WORK-NBR.
           IF WS-WORK(5:1) = SPACE
             IF WS-WORK(4:1) = SPACE
               IF WS-WORK(3:1) = SPACE
                 IF WS-WORK(2:1) = SPACE
                   IF WS-WORK(1:1) = SPACE
                       MOVE  0 TO WS-WORK-NBR
                   ELSE
                       MOVE WS-WORK(1:1) TO WS-WORK-NBRX(5:1)
                 ELSE
                     MOVE WS-WORK(1:2) TO WS-WORK-NBRX(4:2)
               ELSE
                   MOVE WS-WORK(1:3) TO WS-WORK-NBRX(3:3)
             ELSE
                 MOVE WS-WORK(1:4) TO WS-WORK-NBRX(2:4)
           ELSE
               MOVE WS-WORK(1:5) TO WS-WORK-NBRX(1:5).

           IF WS-WORK-NBR NOT NUMERIC
               DISPLAY 'MASK OFFSET NOT NUMERIC : ' WS-WORK-NBRX
               MOVE 0 TO WS-WORK-NBR
               MOVE 'ERROR: MASK OFFSET NOT NUMERIC ' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2120-EXIT
           ELSE
           IF WS-WORK-NBR > MASK-TABLE-MAX
               MOVE 'ERROR: MASK OFFSET TOO LARGE - MAX IS 12200'
                           TO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2120-EXIT
           ELSE
               MOVE WS-WORK-NBR TO WS-OFFSET.

      *  PARSE LENGTH - IT SHOULD END WITH A SPACE
           MOVE SPACES TO WS-WORK.
           MOVE 1 TO WSUB.
           ADD  1 TO PSUB.
           PERFORM VARYING PSUB FROM PSUB BY 1
                   UNTIL PSUB > 72 OR
                   WSUB > 5  OR
                   CC-MASK-OFF-LEN(PSUB:1) =  ' '
               MOVE CC-MASK-OFF-LEN(PSUB:1) TO WS-WORK (WSUB:1)
               ADD 1 TO WSUB
           END-PERFORM.

           IF CC-MASK-OFF-LEN(PSUB:1) NOT = ' '
               MOVE 'ERROR: MASK LENGTH INVALID'
                           TO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2120-EXIT.

           MOVE ZERO TO WS-WORK-NBR.
           IF WS-WORK(5:1) = SPACE
             IF WS-WORK(4:1) = SPACE
               IF WS-WORK(3:1) = SPACE
                 IF WS-WORK(2:1) = SPACE
                   IF WS-WORK(1:1) = SPACE
                       MOVE  0 TO WS-WORK-NBR
                   ELSE
                       MOVE WS-WORK(1:1) TO WS-WORK-NBRX(5:1)
                 ELSE
                     MOVE WS-WORK(1:2) TO WS-WORK-NBRX(4:2)
               ELSE
                   MOVE WS-WORK(1:3) TO WS-WORK-NBRX(3:3)
             ELSE
                 MOVE WS-WORK(1:4) TO WS-WORK-NBRX(2:4)
           ELSE
               MOVE WS-WORK(1:5) TO WS-WORK-NBRX(1:5).

           IF WS-WORK-NBR NOT NUMERIC
               DISPLAY 'MASK LENGTH NOT NUMERIC : ' WS-WORK-NBRX
               MOVE 0 TO WS-WORK-NBR
               MOVE 'ERROR: MASK LENGTH NOT NUMERIC'
                           TO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2120-EXIT
           ELSE
           IF WS-WORK-NBR > MASK-TABLE-MAX
               MOVE 'ERROR: MASK LENGTH TOO LARGE - MAX IS 12200'
                           TO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2120-EXIT
           ELSE
               MOVE WS-WORK-NBR TO WS-MASK-LENGTH.

           MOVE WS-OFFSET TO WSUB.
           PERFORM VARYING PSUB FROM 1 BY 1
                   UNTIL PSUB > WS-MASK-LENGTH OR
                         WSUB > MASK-TABLE-MAX
               MOVE 'Y' TO MASK-POS (WSUB)
               ADD 1 TO WSUB
           END-PERFORM.

       A2120-EXIT.
           EXIT.

      *  FILE NAMES ARE DISPLAYED IN THE SUMMARY REPORT
      *  THE ENTIRE LINE IS SHOWN INCLUDING COMMENTS
      *  IF THERE IS MORE THAN ONE FILE1 CARD, THE FIRST ONE IS KEPT
      *  IF THERE IS MORE THAN ONE FILE2 CARD, THE FIRST ONE IS KEPT
       A2130-EDIT-FILE-CARD.
      *   FILE1=XXXX.XXXX.XXXX     COMMENTS
      *   FILE2=XXXX.XXXX.XXXX     COMMENTS
           IF NOT VALID-CC-FILE-TYPE
               MOVE 'ERROR: INVALID FILE TYPE'
                           TO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2130-EXIT
           END-IF.

           IF CC-FILE-ID-1
              IF FILE-NAME-1 = SPACE
                 MOVE CC-FILE-NAME TO FILE-NAME-1
              ELSE
                 GO TO A2130-EXIT
              END-IF
           END-IF.

           IF CC-FILE-ID-2
              IF FILE-NAME-2 = SPACE
                 MOVE CC-FILE-NAME TO FILE-NAME-2
              ELSE
                 GO TO A2130-EXIT
              END-IF
           END-IF.

       A2130-EXIT.
           EXIT.

       A2140-EDIT-MAX-CARD.
      *    MAXDIFF=999999999

           MOVE ZERO TO WS-WORK-MAX-NBR.
           IF CC-MAX-DIFF(9:1) = SPACE
             IF CC-MAX-DIFF(8:1) = SPACE
               IF CC-MAX-DIFF(7:1) = SPACE
                 IF CC-MAX-DIFF(6:1) = SPACE
                   IF CC-MAX-DIFF(5:1) = SPACE
                     IF CC-MAX-DIFF(4:1) = SPACE
                       IF CC-MAX-DIFF(3:1) = SPACE
                         IF CC-MAX-DIFF(2:1) = SPACE
                           IF CC-MAX-DIFF(1:1) = SPACE
                               MOVE  999999999 TO WS-WORK-MAX-NBR
                           ELSE
                               MOVE CC-MAX-DIFF(1:1) TO
                                          WS-WORK-MAX-NBRX(9:1)
                         ELSE
                             MOVE CC-MAX-DIFF(1:2) TO
                                          WS-WORK-MAX-NBRX(8:2)
                       ELSE
                           MOVE CC-MAX-DIFF(1:3) TO
                                          WS-WORK-MAX-NBRX(7:3)
                     ELSE
                         MOVE CC-MAX-DIFF(1:4) TO
                                          WS-WORK-MAX-NBRX(6:4)
                   ELSE
                       MOVE CC-MAX-DIFF(1:5) TO
                                        WS-WORK-MAX-NBRX(5:5)
                 ELSE
                     MOVE CC-MAX-DIFF(1:6) TO
                                      WS-WORK-MAX-NBRX(4:6)
               ELSE
                   MOVE CC-MAX-DIFF(1:7) TO
                                    WS-WORK-MAX-NBRX(3:7)
             ELSE
                 MOVE CC-MAX-DIFF(1:8) TO
                                  WS-WORK-MAX-NBRX(2:8)
           ELSE
               MOVE CC-MAX-DIFF(1:9) TO
                                WS-WORK-MAX-NBRX(1:9).

           IF WS-WORK-MAX-NBR NOT NUMERIC
               DISPLAY 'MAXDIFF NOT NUMERIC = ' WS-WORK-MAX-NBRX
               MOVE 'ERROR: MAXDIFF NOT NUMERIC'
                           TO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               MOVE 999999999 TO WS-WORK-MAX-NBR.
           IF CC-TYPE-MAXDIFF
               MOVE WS-WORK-MAX-NBR TO WS-MAX-DIFF.
           IF CC-TYPE-MAXREAD
               MOVE WS-WORK-MAX-NBR TO WS-MAX-READ.
       A2140-EXIT.
           EXIT.

      *****************************************************************
      *  VALID VALUES ARE 'CHAR'  'HEX '
      *  NO VALUE DEFAULTS TO CHAR
      *****************************************************************
       A2150-EDIT-RPT-CARD.

           IF VALID-CC-REPORT-TYPE
               MOVE CC-REPORT-TYPE TO REPORT-TYPE
           ELSE
               MOVE 'ERROR: INVALID REPORT TYPE'
                           TO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT.
       A2150-EXIT.
           EXIT.
           EJECT
      ****************************************************************
      *  READ ALL SIGNMASK CARDS
      *  SET A SIGNMASK INDICATOR IN THE MASK TABLE FOR EACH BYTE MASKED
      *  LENGTH OF THIS MASK IS ALWAYS 1
      ****************************************************************
       A2160-EDIT-SIGNMASK-CARD.
      *  PARSE OFFSET - IT SHOULD END WITH A SPACE OR ',1'
           MOVE SPACES TO WS-WORK.
           MOVE 1 TO WSUB.
           PERFORM VARYING PSUB FROM 1 BY 1
                   UNTIL PSUB > 20 OR
                   WSUB > 5  OR
                   CC-SIGNMASK-OFF(PSUB:1) = ' ' OR ','
               MOVE CC-SIGNMASK-OFF(PSUB:1) TO WS-WORK (WSUB:1)
               ADD 1 TO WSUB
           END-PERFORM.

           IF CC-SIGNMASK-OFF(PSUB:1) NOT = ' ' AND ','
               MOVE 'ERROR: INVALID SIGNMASK FORMAT ' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2160-EXIT.

           MOVE ZERO TO WS-WORK-NBR.
           IF WS-WORK(5:1) = SPACE
             IF WS-WORK(4:1) = SPACE
               IF WS-WORK(3:1) = SPACE
                 IF WS-WORK(2:1) = SPACE
                   IF WS-WORK(1:1) = SPACE
                       MOVE  0 TO WS-WORK-NBR
                   ELSE
                       MOVE WS-WORK(1:1) TO WS-WORK-NBRX(5:1)
                 ELSE
                     MOVE WS-WORK(1:2) TO WS-WORK-NBRX(4:2)
               ELSE
                   MOVE WS-WORK(1:3) TO WS-WORK-NBRX(3:3)
             ELSE
                 MOVE WS-WORK(1:4) TO WS-WORK-NBRX(2:4)
           ELSE
               MOVE WS-WORK(1:5) TO WS-WORK-NBRX(1:5).

           IF WS-WORK-NBR NOT NUMERIC
               DISPLAY 'SIGNMASK OFFSET NOT NUMERIC : ' WS-WORK-NBRX
               MOVE 0 TO WS-WORK-NBR
               MOVE 'ERROR: SIGNMASK OFFSET NOT NUMERIC ' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2160-EXIT
           ELSE
           IF WS-WORK-NBR > MASK-TABLE-MAX
               MOVE 'ERROR: MASK OFFSET TOO LARGE - MAX IS 12200'
                           TO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2160-EXIT
           ELSE
               MOVE WS-WORK-NBR TO WS-OFFSET.

      *  LENGTH IS ALWAYS 1

           MOVE WS-OFFSET TO WSUB.
           MOVE 'S' TO MASK-POS (WSUB).


       A2160-EXIT.
           EXIT.

           EJECT
      ****************************************************************
      *  READ ALL NULLMASK CARDS
      *  SET A NULLMASK INDICATOR IN THE MASK TABLE FOR EACH BYTE MASKED
      *  LENGTH OF THIS MASK IS ALWAYS 1
      ****************************************************************
       A2170-EDIT-NULLMASK-CARD.
      *  PARSE OFFSET - IT SHOULD END WITH A SPACE OR ',1'
           MOVE SPACES TO WS-WORK.
           MOVE 1 TO WSUB.
           PERFORM VARYING PSUB FROM 1 BY 1
                   UNTIL PSUB > 20 OR
                   WSUB > 5  OR
                   CC-NULLMASK-OFF(PSUB:1) = ' ' OR ','
               MOVE CC-NULLMASK-OFF(PSUB:1) TO WS-WORK (WSUB:1)
               ADD 1 TO WSUB
           END-PERFORM.

           IF CC-NULLMASK-OFF(PSUB:1) NOT = ' ' AND ','
               MOVE 'ERROR: INVALID NULLMASK FORMAT ' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2170-EXIT.

           MOVE ZERO TO WS-WORK-NBR.
           IF WS-WORK(5:1) = SPACE
             IF WS-WORK(4:1) = SPACE
               IF WS-WORK(3:1) = SPACE
                 IF WS-WORK(2:1) = SPACE
                   IF WS-WORK(1:1) = SPACE
                       MOVE  0 TO WS-WORK-NBR
                   ELSE
                       MOVE WS-WORK(1:1) TO WS-WORK-NBRX(5:1)
                 ELSE
                     MOVE WS-WORK(1:2) TO WS-WORK-NBRX(4:2)
               ELSE
                   MOVE WS-WORK(1:3) TO WS-WORK-NBRX(3:3)
             ELSE
                 MOVE WS-WORK(1:4) TO WS-WORK-NBRX(2:4)
           ELSE
               MOVE WS-WORK(1:5) TO WS-WORK-NBRX(1:5).

           IF WS-WORK-NBR NOT NUMERIC
               DISPLAY 'NULLMASK OFFSET NOT NUMERIC : ' WS-WORK-NBRX
               MOVE 0 TO WS-WORK-NBR
               MOVE 'ERROR: NULLMASK OFFSET NOT NUMERIC ' TO
                              CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2170-EXIT
           ELSE
           IF WS-WORK-NBR > MASK-TABLE-MAX
               MOVE 'ERROR: MASK OFFSET TOO LARGE - MAX IS 12200'
                           TO CARD-ERROR-REASON
               PERFORM A2190-CARD-ERROR THRU A2190-EXIT
               GO TO A2170-EXIT
           ELSE
               MOVE WS-WORK-NBR TO WS-OFFSET.

      *  LENGTH IS ALWAYS 1

           MOVE WS-OFFSET TO WSUB.
           MOVE '0' TO MASK-POS (WSUB).


       A2170-EXIT.
           EXIT.

           EJECT
      **************************************************************
      * DISPLAY HELP FOR CONTROL CARD ERRORS
      **************************************************************
       A2190-CARD-ERROR.

           MOVE SPACES TO DISP-CC-REC-LINE.
           MOVE '----+----1----+----2----+----3----+----4----+----5'
                      TO DISP-CC-REC.
           DISPLAY DISP-CC-REC-LINE.

           DISPLAY 'THE PREVIOUS CONTROL CARD HAS AN ERROR'.
           DISPLAY CARD-ERROR-REASON.
           DISPLAY '   '
           MOVE SPACES TO CARD-ERROR-REASON.

           IF CC-ERROR-FOUND
               GO TO A2190-EXIT.

           PERFORM A2200-PRINT-CARD-HELP THRU A2200-EXIT.
           MOVE 'Y' TO CC-ERROR-FOUND-SW.
       A2190-EXIT.
            EXIT.

            EJECT
      **************************************************************
      * DISPLAY HELP FOR CONTROL CARDS
      **************************************************************
       A2200-PRINT-CARD-HELP.

           IF HELP-PRINTED
               GO TO A2200-EXIT.

           DISPLAY '                      '.
           DISPLAY '                      '.
           DISPLAY 'CONTROL CARD SETUP INFORMATION'.
           DISPLAY '                      '.

           DISPLAY '  VALID CONTROL CARDS ARE:'
           DISPLAY '    MAXREAD=999999999  MAX NUMBER OF INPUT '
                        'RECORDS TO READ BEFORE ENDING PROGRAM'
           DISPLAY '    MAXDIFF=999999999  MAX NUMBER OF DIFF'
                        'ERENCES TO PRINT'
           DISPLAY '    RPT=CHAR           PRINT DATA IN CHARACTER '
                        'FORMAT  '
           DISPLAY '    RPT=HEX      OR    PRINT DATA IN HEX FORMAT'
                        '        '
           DISPLAY '    FILE1=AAAA.BBBBB.CCCC(MBR1)     FILE 1 NAME'
                        ' AND COMMENTS AFTER FILE NAME'
           DISPLAY '    FILE2=AAAA.BBBBB.CCCC(MBR2)     FILE 2 NAME'
                        ' AND COMMENTS AFTER FILE NAME'
           DISPLAY '    KEY=99999,88888 WHERE 99999 IS OFFSET '
                        'POSITION AND 88888 IS LENGTH OF KEY '
           DISPLAY '                  MULTIPLE KEY RECORDS ARE '
                        'ALLOWED.'.
           DISPLAY '    MASK=99999,88888 WHERE 99999 IS OFFSET '
                        'POSITION AND 88888 IS LENGTH OF MASK'
           DISPLAY '    SIGNMASK=99999   WHERE 99999 IS OFFSET '
                        'POSITION AND ONLY SIGN WILL BE MASKED'
           DISPLAY '          THIS WILL CAUSE A POSITIVE VALUE '
                        'AND AN UNSIGNED VALUE TO MATCH '
           DISPLAY '   '
           DISPLAY '    NULLMASK=99999   WHERE 99999 IS OFFSET '
                        'POSITION AND ONLY NULLS WILL BE MASKED'
           DISPLAY '          THIS WILL CAUSE A SPACE AND LOW-V'
                        'ALUES TO MATCH                 '
           DISPLAY '   '
           DISPLAY '    *----  AN ASTERISK IN FIRST BYTE MAKES THE'
                        ' CARD A COMMENT CARD'
           DISPLAY '   '
           DISPLAY '  THE FIRST SPACE ON A LINE ENDS DATA, THE '
                      'REST OF THE LINE MAY BE USED FOR COMMENTS'
           DISPLAY '   '
           DISPLAY '  NUMERIC FIELDS CAN BE LEFT JUSTIFIED'
           DISPLAY '  ALL CARDS ARE OPTIONAL AND MAY BE PLACED IN '
                      'ANY ORDER EXCEPT KEY CARDS.'
           DISPLAY '   '.
           DISPLAY '  KEY CARDS MUST BE PLACED IN THE SORT SEQUENCE.'
           DISPLAY '    THE FOLLOWING EXAMPLE KEY SEQUENCE CORRESPONDS'
           DISPLAY '    TO THIS SORT SEQUENCE. (4 BYTES ADDED'
                        ' TO OFFSETS BECAUSE OF VARIABLE LENGTH)'
           DISPLAY '        SORT FIELDS=(5,8,CH,A,29,10,CH,A,15,3,CH,A)'
           DISPLAY '   '.
           DISPLAY '  CARD EXAMPLES:'
           DISPLAY '   '.
           DISPLAY '    FILE1=XXXX.XXXX.AAAA    FILE1 NAME'
           DISPLAY '    FILE2=XXXX.XXXX.BBBB    FILE2 NAME'
           DISPLAY '    KEY=1,8   '
           DISPLAY '    KEY=25,10 '
           DISPLAY '    KEY=11,3  '
           DISPLAY '    MAXDIFF=100        MAX RECORDS TO PRINT'
           DISPLAY '    MAXREAD=5000       MAX RECORDS TO READ'
           DISPLAY '    RPT=HEX            PRINT DIFFERENCES IN HEX'
           DISPLAY '    MASK=52,6          LAST-UPD-DATE'
           DISPLAY '    MASK=143,60        CL-PREFIXES '
           DISPLAY '    SIGNMASK=35        + AND UNSIGNED VALUE'
           DISPLAY '    SIGNMASK=42        MASK ONLY SIGN NOT VALUE'
           DISPLAY '    NULLMASK=53        SPACE AND LOW VALUES '
           DISPLAY '    NULLMASK=54        OTHER VALUES MUST MATCH '
           DISPLAY '   '.
           DISPLAY '   '.
           MOVE 'Y' TO HELP-PRINTED-SW.

       A2200-EXIT.
            EXIT.
            EJECT
      **************************************************************
      * DISPLAY HELP FOR RUNNING THE PROGRAM
      **************************************************************
       A2210-PRINT-GENERAL-HELP.

           DISPLAY '          '.
           DISPLAY 'PROGRAM JXCU001 WILL COMPARE FILES, PRINT T'
                        'HE DIFFERENCES IN A REPORT AND '
           DISPLAY 'WRITE ALL RECORDS THAT DIFFER TO OUTPUT FIL'
                   'ES SO THAT THEY CAN BE FURTHER ANALYZED.'
           DISPLAY '                      '.
           DISPLAY '"INSERT FILE 1" HAS ALL RECORDS ON FILE 1 '
                   'WHICH DID NOT MATCH ON KEY TO A RECORD IN FILE 2'
           DISPLAY '"INSERT FILE 2" HAS ALL RECORDS ON FILE 2 '
                   'WHICH DID NOT MATCH ON KEY TO A RECORD IN FILE 1'
           DISPLAY '                      '.
           DISPLAY '"DIFF FILE 1" HAS ALL RECORDS ON FILE 1 WHICH '
                   'MATCHED ON KEY TO A RECORD IN FILE 2, BUT '
           DISPLAY '  THE REST OF THE RECORD CONTAINS DIFFERENCES.'
           DISPLAY '"DIFF FILE 2" HAS THE EQUIVALENT RECORD FROM '
                   'FILE 2 THAT DIFFERED.'
           DISPLAY '                      '.
           DISPLAY 'THE INPUT FILES MUST BE SORTED BY THE KEY '
                      'LENGTH SPECIFIED IN THE CARD FILE INPUT '
           DISPLAY '  AND THEY MUST BE VB WITH AN LRECL OF 12154.'
           DISPLAY 'THIS ALLOWS THE PROGRAM TO COMPARE ANY SIZE '
                   'RECORD.'
           DISPLAY 'REMEMBER TO ADD 4 TO ALL OFFSETS IN THE SORT '
                   'BECAUSE OF THE VARIABLE LENGTH.'
           DISPLAY '                      '.
       A2210-EXIT.
            EXIT.

       EJECT
      **************************************************************
      * TERMINATION
      **************************************************************
       A9000-TERMINATION.

      *------------------------------------------------------------*
      *    DISPLAY VARIOUS COUNTS                                  *
      *------------------------------------------------------------*
           DISPLAY '*************************************************'.
           DISPLAY ' '.

           IF LINE-CNT > 30
               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT.

           MOVE SPACES TO REPORT-TRLR-1.
           MOVE 'INPUT RECORD COUNTS'    TO RT-TITLE.
           MOVE 2 TO LINE-SPACING.
           MOVE REPORT-TRLR-1 TO DIFF-REPORT-REC.
           DISPLAY ' '.
           DISPLAY REPORT-TRLR-1.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'FILE 1 RECORDS READ'    TO RT-LITERAL.
           MOVE FILE-1-READ-CNT          TO RT-COUNT.
           MOVE FILE-NAME-1              TO RT-FILE-NAME.
           MOVE 2 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY ' '.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'FILE 2 RECORDS READ'    TO RT-LITERAL.
           MOVE FILE-2-READ-CNT          TO RT-COUNT.
           MOVE FILE-NAME-2              TO RT-FILE-NAME.
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'CONTROL CARDS READ'    TO RT-LITERAL.
           MOVE FILE-CARDS-CNT           TO RT-COUNT.
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE SPACES TO REPORT-TRLR-1.
           MOVE 'COMPARE STATISTICS'     TO RT-TITLE.
           MOVE 2 TO LINE-SPACING.
           MOVE REPORT-TRLR-1 TO DIFF-REPORT-REC.
           DISPLAY ' '.
           DISPLAY REPORT-TRLR-1.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'MAX RECORD LENGTH COMPARED.' TO RT-LITERAL.
           MOVE 'EXCLUDE TRAILING SPACES/LOW VALUES '
                                              TO RT-LITERAL(30:35)
           MOVE MAX-REC-LENGTH-USED       TO RT-COUNT.
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'TOTAL KEY LENGTH USED FOR COMPARES' TO RT-LITERAL.
           MOVE KEY-LENGTH                TO RT-COUNT.
           MOVE 2 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY ' '.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 1 TO LINE-SPACING.
           PERFORM VARYING KSUB FROM 1 BY 1
                   UNTIL KSUB > KEY-CNT
               MOVE KSUB              TO RT-KEY-SEQ
               MOVE TKEY-OFFSET(KSUB) TO RT-KEY-OFFSET
               MOVE TKEY-LENGTH(KSUB) TO RT-KEY-LENGTH
               MOVE REPORT-TRLR-3 TO DIFF-REPORT-REC
               DISPLAY REPORT-TRLR-3
               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
           END-PERFORM.

           MOVE 'FILE 1 RECORDS INSERTED' TO RT-LITERAL.
           MOVE FILE-1-INS-CNT            TO RT-COUNT.
           MOVE 2 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY ' '.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'FILE 2 RECORDS INSERTED' TO RT-LITERAL.
           MOVE FILE-2-INS-CNT            TO RT-COUNT.
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'RECORDS THAT MATCHED WITH NO MASKS' TO RT-LITERAL.
           MOVE MATCH-CNT                 TO RT-COUNT.
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'RECORDS THAT MATCHED WITH MASKS' TO RT-LITERAL.
           MOVE MASK-ONLY-CNT             TO RT-COUNT.
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'RECORDS WITH DIFFERENT DATA' TO RT-LITERAL.
           MOVE DIFF-CNT                  TO RT-COUNT.
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'FILE 1 DIFF WRITTEN' TO RT-LITERAL.
           MOVE FILE-1D-WRITE-CNT        TO RT-COUNT.
           MOVE 2 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY ' '.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'FILE 2 DIFF WRITTEN' TO RT-LITERAL.
           MOVE FILE-2D-WRITE-CNT        TO RT-COUNT.
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'FILE 1 INSERTS WRITTEN' TO RT-LITERAL.
           MOVE FILE-1E-WRITE-CNT        TO RT-COUNT.
           MOVE 2 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY ' '.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE 'FILE 2 INSERTS WRITTEN' TO RT-LITERAL.
           MOVE FILE-2E-WRITE-CNT        TO RT-COUNT.
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-2 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-2.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE SPACES TO DIFF-REPORT-REC.
           MOVE 2 TO LINE-SPACING.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           DISPLAY '    '.

           IF MASK-ONLY-CNT = ZERO AND
                DIFF-CNT = ZERO
               GO TO A9000-PRINT-FOOTER.

      * PRINT TOTAL DIFFERENCES SUMMARY
           MOVE SPACES TO REPORT-TRLR-1.
           MOVE 'DIFFERENCES BY POSITION' TO RT-TITLE.
           MOVE 2 TO LINE-SPACING.
           MOVE REPORT-TRLR-1 TO DIFF-REPORT-REC.
           DISPLAY ' '.
           DISPLAY REPORT-TRLR-1.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           COMPUTE WSUB = MASK-TABLE-MAX / 100.
           MOVE 1 TO LINE-SPACING.
           MOVE SPACES TO REPORT-TRLR-4.
           PERFORM VARYING PSUB FROM 1 BY 1
                   UNTIL PSUB > WSUB
               IF TBL-DIFF-CNT (PSUB) > 0
                   MOVE TBL-DIFF-CNT (PSUB) TO TR-COUNT
                   COMPUTE WS-START-POS = (PSUB * 100) - 99
                   COMPUTE WS-END-POS   = (PSUB * 100)
                   MOVE WS-START-POS        TO TR-START-POS
                   MOVE WS-END-POS          TO TR-END-POS
                   MOVE '-'                 TO TR-HYPHEN
                   MOVE REPORT-TRLR-4 TO DIFF-REPORT-REC
                   DISPLAY REPORT-TRLR-4
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
               END-IF
           END-PERFORM.

      * PRINT TOTAL DIFFERENCES MASK
           IF LINE-CNT NOT = HEADER-LINE-CNT
              MOVE REPORT-RULER TO DIFF-REPORT-REC
              MOVE 2 TO LINE-SPACING
              PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           COMPUTE WSUB = MASK-TABLE-MAX / 100.
           MOVE 1 TO LINE-SPACING.

           PERFORM VARYING PSUB FROM 1 BY 1
                   UNTIL PSUB > WSUB
               IF (TDIFF-100 (PSUB) NOT = SPACES) OR PSUB = 1
                   COMPUTE WS-START-POS = (PSUB * 100) - 99
                   COMPUTE WS-END-POS   = (PSUB * 100)
                   MOVE WS-START-POS     TO DT-START-POS
                   MOVE WS-END-POS       TO DT-END-POS
                   MOVE '-'              TO DT-HYPHEN
                   MOVE ' DIFF '         TO DT-FILE-ID
                   MOVE TDIFF-100 (PSUB) TO DT-100-BYTES
                   MOVE 'DIFFERENCES'    TO DT-FILE-ID
                   MOVE DETAIL-2 TO DIFF-REPORT-REC
                   MOVE 1 TO LINE-SPACING
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
                   MOVE SPACES TO DETAIL-2
               END-IF
           END-PERFORM.

      * PRINT DIFFERENCE CHARACTER KEY
           MOVE SPACES TO REPORT-TRLR-1.
           MOVE 'KEY TO DIFFERENCE CHARACTERS'  TO RT-TITLE.
           MOVE 2 TO LINE-SPACING.
           MOVE REPORT-TRLR-1 TO DIFF-REPORT-REC.
           DISPLAY ' '.
           DISPLAY REPORT-TRLR-1.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE SPACES TO REPORT-TRLR-5.
           MOVE WS-SHOW-DIFF                     TO RT-DIFF-CHAR
           MOVE 'DIFFERENCE IN THIS POSITION'    TO RT-DIFF-DESC
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-5 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-5.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE WS-SHOW-MASK                     TO RT-DIFF-CHAR
           MOVE 'DIFFERENCE MASKED IN THIS POSITION'  TO RT-DIFF-DESC
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-5 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-5.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE WS-SHOW-SIGNMASK                 TO RT-DIFF-CHAR
           MOVE 'SIGN MASKED IN THIS POSITION'   TO RT-DIFF-DESC
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-5 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-5.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

           MOVE WS-SHOW-NULLMASK                 TO RT-DIFF-CHAR
           MOVE 'NULL MASKED IN THIS POSITION'   TO RT-DIFF-DESC
           MOVE 1 TO LINE-SPACING.
           MOVE REPORT-TRLR-5 TO DIFF-REPORT-REC.
           DISPLAY REPORT-TRLR-5.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

       A9000-PRINT-FOOTER.

           PERFORM Y2050-FOOTER THRU Y2050-EXIT.

      *------------------------------------------------------------*
      *    CLOSE THE FILES                                         *
      *------------------------------------------------------------*
           CLOSE FILE-1
                 FILE-2
                 FILE-1-DIFF
                 FILE-2-DIFF
                 FILE-1-INS
                 FILE-2-INS
                 DIFF-REPORT-FILE.
       A9000-EXIT.
           EXIT.

           EJECT
      **************************************************************
      *  COMPARE RECORDS.
      *  IF THE ENTIRE RECORD DOES NOT MATCH, THEN CHECK IT IN
      *  100 BYTE CHUNKS.
      **************************************************************
       C1000-COMPARE-RECS.

      *   IF THE MAX NUMBER OF RECORDS HAVE BEEN READ, END
           IF FILE-1-READ-CNT >  WS-MAX-READ OR
              FILE-2-READ-CNT >  WS-MAX-READ
               MOVE 'Y' TO END-OF-FILE-1-SW
               MOVE 'Y' TO END-OF-FILE-2-SW
               GO TO C1000-EXIT.

           IF END-OF-FILE-2
               PERFORM E1000-FILE-1-INSERT THRU E1000-EXIT
                   UNTIL END-OF-FILE-1 OR
                         FILE-1-READ-CNT >  WS-MAX-READ
                   GO TO C1000-EXIT.

           IF END-OF-FILE-1
               PERFORM E2000-FILE-2-INSERT THRU E2000-EXIT
                   UNTIL END-OF-FILE-2 OR
                         FILE-2-READ-CNT >  WS-MAX-READ
                   GO TO C1000-EXIT.

           IF WS-F1-KEY(1:KEY-LENGTH) = WS-F2-KEY(1:KEY-LENGTH)
               IF WS-F1-REC = WS-F2-REC
                   ADD 1 TO MATCH-CNT
                   PERFORM X1000-READ-FILE-1 THRU X1000-EXIT
                   PERFORM X2000-READ-FILE-2 THRU X2000-EXIT
                   GO TO C1000-EXIT
               ELSE
                   PERFORM D1000-FIND-DIFFERENCE THRU D1000-EXIT
                   GO TO C1000-EXIT.

           IF WS-F1-KEY(1:KEY-LENGTH) < WS-F2-KEY(1:KEY-LENGTH)
               PERFORM E1000-FILE-1-INSERT THRU E1000-EXIT
                   UNTIL END-OF-FILE-1 OR
                         FILE-1-READ-CNT >  WS-MAX-READ OR
                        (WS-F1-KEY(1:KEY-LENGTH) NOT <
                                         WS-F2-KEY(1:KEY-LENGTH))
                   GO TO C1000-EXIT.

           IF WS-F1-KEY(1:KEY-LENGTH) > WS-F2-KEY(1:KEY-LENGTH)
               PERFORM E2000-FILE-2-INSERT THRU E2000-EXIT
                   UNTIL END-OF-FILE-2 OR
                         FILE-2-READ-CNT >  WS-MAX-READ OR
                        (WS-F1-KEY(1:KEY-LENGTH) NOT >
                                         WS-F2-KEY(1:KEY-LENGTH))
                   GO TO C1000-EXIT.

       C1000-EXIT.
           EXIT.
           EJECT
      ****************************************************************
      *  FIND THE POSITIONS OF THE DIFFERENCES IN THE RECORDS
      ****************************************************************
       D1000-FIND-DIFFERENCE.

           IF LINE-CNT > 50
               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT.


      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS
      *  WHICH IS NOT SPACES AND NOT LOW-VALUES
           COMPUTE WSUB = MASK-TABLE-MAX / 100.
           PERFORM VARYING PSUB FROM WSUB BY -1
                   UNTIL PSUB < 1 OR
                        (WS-F1-100 (PSUB) NOT = SPACES AND
                                                LOW-VALUES) OR
                        (WS-F2-100 (PSUB) NOT = SPACES AND
                                                LOW-VALUES)
           END-PERFORM.

           IF PSUB < 1
               MOVE 1 TO MAX-100-BYTES
           ELSE
               MOVE PSUB TO MAX-100-BYTES.

      *  FIND THE POSITION OF EACH DIFFERENCE
           MOVE SPACES TO DIFFERENCE-INDS.
           MOVE ZERO TO WS-DIFF-BYTE-CNT.
           PERFORM D2000-100-BYTE-DIFF THRU D2000-EXIT
               VARYING PSUB FROM 1 BY 1
               UNTIL PSUB > MAX-100-BYTES.

      *  IF ALL THE DIFFERENCES ARE MASKED DON'T PRINT
           IF WS-DIFF-BYTE-CNT = ZERO
               ADD 1 TO MASK-ONLY-CNT
               PERFORM X1000-READ-FILE-1 THRU X1000-EXIT
               PERFORM X2000-READ-FILE-2 THRU X2000-EXIT
               GO TO D1000-EXIT.

           PERFORM X4000-WRITE-DIFF-FILE-1 THRU X4000-EXIT.
           PERFORM X5000-WRITE-DIFF-FILE-2 THRU X5000-EXIT.
           ADD 1 TO DIFF-CNT
                    TOTAL-DIFF-CNT.

      *   IF THE MAX NUMBER OF DIFFERENCES HAVE PRINTED, DONT PRINT
           IF TOTAL-DIFF-CNT >  WS-MAX-DIFF
               PERFORM X1000-READ-FILE-1 THRU X1000-EXIT
               PERFORM X2000-READ-FILE-2 THRU X2000-EXIT
               GO TO D1000-EXIT.

           MOVE FILE-1-READ-CNT TO DT-RECORD-NBR-1.
           MOVE FILE-2-READ-CNT TO DT-RECORD-NBR-2.
           MOVE DETAIL-4 TO DIFF-REPORT-REC.
           MOVE 2 TO LINE-SPACING.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.


           PERFORM D5000-PRINT-100-BYTES THRU D5000-EXIT
               VARYING PSUB FROM 1 BY 1
               UNTIL PSUB > MAX-100-BYTES.

           PERFORM X1000-READ-FILE-1 THRU X1000-EXIT.
           PERFORM X2000-READ-FILE-2 THRU X2000-EXIT.


       D1000-EXIT.
           EXIT.

       D2000-100-BYTE-DIFF.
           IF WS-F1-100 (PSUB) = WS-F2-100 (PSUB)
               GO TO D2000-EXIT.

           MOVE ZERO TO WS-DIFF-100-BYTE-CNT.
           PERFORM D3000-CHECK-BYTES THRU D3000-EXIT
               VARYING WSUB FROM 1 BY 1
               UNTIL WSUB > 100.

      * ACCUMULATE DIFF COUNTS BY 100 BYTE SEGMENT
           IF WS-DIFF-100-BYTE-CNT > 0
               ADD 1 TO TBL-DIFF-CNT (PSUB).


       D2000-EXIT.
           EXIT.

      ***********************************************************
      * CHECK EACH BYTE OF 100 CHAR SECTION
      * IDENTIFY BYTES THAT ARE DIFFERENT WITH '-'
      * IDENTIFY BYTES THAT ARE DIFFERENT BUT MASKED WITH '*'
      * IDENTIFY BYTES THAT ONLY DIFFER IN SIGN WITH 'S'
      *      THE SIGN DIFFERENCE MUST BE POSITIVE TO UNSIGNED
      * IDENTIFY BYTES THAT ONLY DIFFER IN NULL "FILL" CHARACTERS
      *      MATCH SPACE TO LOW-VALUES. OTHER VALUES MUST MATCH
      ***********************************************************
       D3000-CHECK-BYTES.
           IF WS-F1-100-BYTE (PSUB WSUB) = WS-F2-100-BYTE (PSUB WSUB)
               GO TO D3000-EXIT
           END-IF.

           IF MASK-THIS-100-BYTE (PSUB WSUB)
               MOVE WS-SHOW-MASK TO DIFF-POS (PSUB WSUB)
               MOVE WS-SHOW-MASK TO TDIFF-POS (PSUB WSUB)
               GO TO D3000-EXIT
           END-IF.

           IF MASK-THIS-100-SIGN (PSUB WSUB)
               PERFORM D3500-CHECK-SIGNMASK  THRU D3500-EXIT
               GO TO D3000-EXIT
           END-IF.

           IF MASK-THIS-100-NULL (PSUB WSUB)
               PERFORM D3600-CHECK-NULLMASK  THRU D3600-EXIT
               GO TO D3000-EXIT
           END-IF.

           MOVE WS-SHOW-DIFF  TO DIFF-POS (PSUB WSUB)
           MOVE WS-SHOW-DIFF  TO TDIFF-POS (PSUB WSUB)
           ADD 1 TO WS-DIFF-BYTE-CNT
           ADD 1 TO WS-DIFF-100-BYTE-CNT.

       D3000-EXIT.
           EXIT.
           EJECT
      *******************************************************
      * CHECK BYTE TO SEE IF THE ONLY DIFFERENCE IS THAT ONE
      *   IS POSITIVE SIGNED AND THE OTHER IS UNSIGNED.
      * A DIFFERENT VALUE OR A NEGATIVE VALUE WILL BE SHOWN
      *   AS A DIFFERENCE.
      *******************************************************
       D3500-CHECK-SIGNMASK.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'0F' OR X'0C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'0F' OR X'0C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F0' OR X'C0') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F0' OR X'C0'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'1F' OR X'1C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'1F' OR X'1C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F1' OR X'C1') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F1' OR X'C1'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'2F' OR X'2C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'2F' OR X'2C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F2' OR X'C2') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F2' OR X'C2'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'3F' OR X'3C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'3F' OR X'3C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F3' OR X'C3') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F3' OR X'C3'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'4F' OR X'4C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'4F' OR X'4C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F4' OR X'C4') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F4' OR X'C4'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'5F' OR X'5C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'5F' OR X'5C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F5' OR X'C5') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F5' OR X'C5'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'6F' OR X'6C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'6F' OR X'6C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F6' OR X'C6') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F6' OR X'C6'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'7F' OR X'7C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'7F' OR X'7C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F7' OR X'C7') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F7' OR X'C7'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'8F' OR X'8C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'8F' OR X'8C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F8' OR X'C8') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F8' OR X'C8'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = X'9F' OR X'9C') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'9F' OR X'9C')) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = X'F9' OR X'C9') AND
               (WS-F2-100-BYTE (PSUB WSUB) = X'F9' OR X'C9'))
               MOVE WS-SHOW-SIGNMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-SIGNMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3500-EXIT
           END-IF.

       D3500-DIFFERENCE.

           MOVE WS-SHOW-DIFF   TO DIFF-POS (PSUB WSUB)
           MOVE WS-SHOW-DIFF   TO TDIFF-POS (PSUB WSUB)
           ADD 1 TO WS-DIFF-BYTE-CNT
           ADD 1 TO WS-DIFF-100-BYTE-CNT.

       D3500-EXIT.
           EXIT.
           EJECT
      *******************************************************
      * CHECK BYTE TO SEE IF THE ONLY DIFFERENCE IS THAT ONE
      *   IS SPACE AND THE OTHER IS LOW-VALUE.
      * ANY OTHER VALUE WILL BE SHOW AS A DIFFERENCE.
      *******************************************************
       D3600-CHECK-NULLMASK.

           IF ((WS-F1-100-BYTE (PSUB WSUB) = LOW-VALUES) AND
               (WS-F2-100-BYTE (PSUB WSUB) = SPACE)) OR
              ((WS-F1-100-BYTE (PSUB WSUB) = SPACE) AND
               (WS-F2-100-BYTE (PSUB WSUB) = LOW-VALUES))
               MOVE WS-SHOW-NULLMASK TO DIFF-POS (PSUB WSUB)
               IF TDIFF-POS (PSUB WSUB) = SPACE
                  MOVE WS-SHOW-NULLMASK TO TDIFF-POS (PSUB WSUB)
               END-IF
               GO TO D3600-EXIT
           END-IF.


       D3600-DIFFERENCE.

           MOVE WS-SHOW-DIFF   TO DIFF-POS (PSUB WSUB)
           MOVE WS-SHOW-DIFF   TO TDIFF-POS (PSUB WSUB)
           ADD 1 TO WS-DIFF-BYTE-CNT
           ADD 1 TO WS-DIFF-100-BYTE-CNT.

       D3600-EXIT.
           EXIT.

          EJECT
      *******************************************************
      * PRINT 100 BYTE SEGMENTS OF THE RECORD
      * ALWAYS PRINT FIRST 100 BYTES IF THERE ARE DIFFERENCES
      * PRINT FILE 1 ONLY IF THE 100 BYTE SECTION HAD NO DIFF
      *******************************************************
       D5000-PRINT-100-BYTES.

      * START NEW PAGE IF CLOSE TO BOTTOM
           IF REPORT-TYPE-HEX
               ADD 6 TO LINE-CNT
               IF LINE-CNT > INST-LINES-PER-PAGE
                   SUBTRACT 6 FROM LINE-CNT
                   PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT
               ELSE
                   SUBTRACT 6 FROM LINE-CNT
                   IF DIFF-100 (PSUB) NOT = SPACES
                     IF LINE-CNT > 10
                       MOVE REPORT-RULER TO DIFF-REPORT-REC
                       MOVE 2 TO LINE-SPACING
                       PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

      * START NEW PAGE IF CLOSE TO BOTTOM
           IF REPORT-TYPE-CHAR
               ADD 4 TO LINE-CNT
               IF LINE-CNT > INST-LINES-PER-PAGE
                   SUBTRACT 4 FROM LINE-CNT
                   PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT
               ELSE
                   SUBTRACT 4 FROM LINE-CNT
                   IF DIFF-100 (PSUB) NOT = SPACES
                     IF LINE-CNT > 10
                       MOVE REPORT-RULER TO DIFF-REPORT-REC
                       MOVE 2 TO LINE-SPACING
                       PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.


      * PRINT FILE-1
           IF REPORT-TYPE-CHAR
               MOVE WS-F1-100 (PSUB) TO DT-100-BYTES
               COMPUTE WS-START-POS = (PSUB * 100) - 99
               COMPUTE WS-END-POS   = (PSUB * 100)
               MOVE WS-START-POS     TO DT-START-POS
               MOVE WS-END-POS       TO DT-END-POS
               MOVE '-'              TO DT-HYPHEN
               MOVE 'FILE-1'         TO DT-FILE-ID
               MOVE DETAIL-2 TO DIFF-REPORT-REC
               IF DIFF-100 (PSUB) NOT = SPACES
                   MOVE 1 TO LINE-SPACING
               END-IF
               IF DIFF-100 (PSUB) = SPACES
                   MOVE 2 TO LINE-SPACING
               END-IF
               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
               MOVE SPACES TO DETAIL-2.

           IF REPORT-TYPE-HEX
               COMPUTE WS-START-POS = (PSUB * 100) - 99
               COMPUTE WS-END-POS   = (PSUB * 100)
               MOVE WS-START-POS     TO DT-START-POS
               MOVE WS-END-POS       TO DT-END-POS
               MOVE '-'              TO DT-HYPHEN
               MOVE 'FILE-1'         TO DT-FILE-ID
               MOVE WS-F1-100 (PSUB) TO WS-100-BYTES
               PERFORM D5100-FORMAT-HEX THRU D5100-EXIT
               MOVE WS1-100-BYTES    TO DT-100-BYTES
               MOVE DETAIL-2 TO DIFF-REPORT-REC
               IF DIFF-100 (PSUB) NOT = SPACES
                   MOVE 1 TO LINE-SPACING
               END-IF
               IF DIFF-100 (PSUB) = SPACES
                   MOVE 2 TO LINE-SPACING
               END-IF
               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
               MOVE SPACES           TO DETAIL-2
               MOVE WS2-100-BYTES    TO DT-100-BYTES
               MOVE DETAIL-2         TO DIFF-REPORT-REC
               MOVE 1                TO LINE-SPACING
               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
               MOVE WS3-100-BYTES    TO DT-100-BYTES
               MOVE DETAIL-2         TO DIFF-REPORT-REC
               MOVE 1                TO LINE-SPACING
               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
               MOVE SPACES TO DETAIL-2.


           IF DIFF-100 (PSUB) = SPACES
               GO TO D5000-EXIT.

      * PRINT FILE-2
           IF REPORT-TYPE-CHAR
               MOVE WS-F2-100 (PSUB) TO DT-100-BYTES
               MOVE 'FILE-2'         TO DT-FILE-ID
               MOVE DETAIL-2 TO DIFF-REPORT-REC
               MOVE 1 TO LINE-SPACING
               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
               MOVE SPACES TO DETAIL-2.

           IF REPORT-TYPE-HEX
               MOVE 'FILE-2'         TO DT-FILE-ID
               MOVE WS-F2-100 (PSUB) TO WS-100-BYTES
               PERFORM D5100-FORMAT-HEX THRU D5100-EXIT
               MOVE WS1-100-BYTES    TO DT-100-BYTES
               MOVE DETAIL-2 TO DIFF-REPORT-REC
               MOVE 2 TO LINE-SPACING
               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
               MOVE SPACES           TO DETAIL-2
               MOVE WS2-100-BYTES    TO DT-100-BYTES
               MOVE DETAIL-2         TO DIFF-REPORT-REC
               MOVE 1                TO LINE-SPACING
               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
               MOVE WS3-100-BYTES    TO DT-100-BYTES
               MOVE DETAIL-2         TO DIFF-REPORT-REC
               MOVE 1                TO LINE-SPACING
               PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
               MOVE SPACES TO DETAIL-2.

      * PRINT DIFFERENCES
           MOVE DIFF-100 (PSUB) TO DT-100-BYTES
           MOVE 'DIFFERENCES'    TO DT-FILE-ID
           MOVE DETAIL-2 TO DIFF-REPORT-REC
           MOVE 1 TO LINE-SPACING
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
           MOVE SPACES TO DETAIL-2.


       D5000-EXIT.
           EXIT.
           EJECT
      ****************************************************************
      *   FORMAT DATA INTO 3 LINE HEX FORMAT
      *   FIRST  LINE IS DISPLAYABLE DATA
      *   SECOND LINE IS FIRST BYTE OF HEX
      *   THIRD  LINE IS SECOND BYTE OF HEX
      *   INPUT FIELD IS WS-100-BYTES
      *   OUTPUT FIELDS ARE  WS1-100-BYTES
      *                      WS2-100-BYTES
      *                      WS3-100-BYTES
      ****************************************************************
       D5100-FORMAT-HEX.
           MOVE SPACES TO WS1-100-BYTES
           MOVE SPACES TO WS2-100-BYTES
           MOVE SPACES TO WS3-100-BYTES

           IF WS-100-BYTES = SPACES
               MOVE ALL '4' TO WS2-100-BYTES
               MOVE ALL '0' TO WS3-100-BYTES
               GO TO D5100-EXIT.

           IF WS-100-BYTES = LOW-VALUES
               MOVE ALL '0' TO WS2-100-BYTES
               MOVE ALL '0' TO WS3-100-BYTES
               GO TO D5100-EXIT.

           IF WS-100-BYTES = HIGH-VALUES
               MOVE ALL 'F' TO WS2-100-BYTES
               MOVE ALL 'F' TO WS3-100-BYTES
               GO TO D5100-EXIT.

           PERFORM VARYING HSUB FROM 1 BY 1
                   UNTIL HSUB > 100
      *         OR (LAST-LINE AND HSUB > MAX-100-BYTES-REM)
              MOVE ZERO TO WS-BYTE
              MOVE WS-100-BYTES(HSUB:1)  TO WS-HALF-BYTE
              IF WS-BYTE = 0
                  MOVE 256 TO WS-BYTE
              END-IF
              IF INST-EBCDIC
                 MOVE WS-HEX-LINE-1(WS-BYTE) TO
                                             WS1-100-BYTES(HSUB:1)
              ELSE
                 MOVE WS-HEX-LINE-1-ASCII(WS-BYTE) TO
                                             WS1-100-BYTES(HSUB:1)
              END-IF
              MOVE WS-HEX-LINE-2(WS-BYTE) TO WS2-100-BYTES(HSUB:1)
              MOVE WS-HEX-LINE-3(WS-BYTE) TO WS3-100-BYTES(HSUB:1)
           END-PERFORM.

       D5100-EXIT.
           EXIT.

       EJECT
      ****************************************************************
      *   PRINT INSERTS ON FILE 1
      *   PRINT THE RECORD IN 100 BYTE SEGMENTS
      ****************************************************************
       E1000-FILE-1-INSERT.
           IF LINE-CNT > 50
               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT.

           PERFORM X6000-WRITE-INS-FILE-1 THRU X6000-EXIT.
           ADD 1 TO FILE-1-INS-CNT
                    TOTAL-DIFF-CNT.
      *   IF THE MAX NUMBER OF DIFFERENCES HAVE PRINTED, DONT PRINT
           IF TOTAL-DIFF-CNT >  WS-MAX-DIFF
               PERFORM X1000-READ-FILE-1 THRU X1000-EXIT
               GO TO E1000-EXIT.

           MOVE 'FILE-1 RECORD #' TO DT-INSERT-FILE-ID
           MOVE FILE-1-READ-CNT TO DT-RECORD-NBR.
           MOVE DETAIL-1 TO DIFF-REPORT-REC.
           MOVE 2 TO LINE-SPACING.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

      *    MOVE REPORT-RULER TO DIFF-REPORT-REC.
      *    MOVE 1 TO LINE-SPACING.
      *    PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS
      *  WHICH IS NOT SPACES
           COMPUTE WSUB = MASK-TABLE-MAX / 100.
           PERFORM VARYING PSUB FROM WSUB BY -1
                   UNTIL PSUB < 1 OR
                         WS-F1-100 (PSUB) NOT = SPACES
           END-PERFORM.
           IF PSUB < 1
               MOVE 1 TO MAX-100-BYTES
           ELSE
               MOVE PSUB TO MAX-100-BYTES.
      *  PRINT 100 BYTE SEGMENTS OF THE RECORD
           MOVE 'FILE 1 INSERT' TO DT-FILE-ID.
           MOVE 1 TO LINE-SPACING.

           IF REPORT-TYPE-CHAR
               PERFORM VARYING PSUB FROM 1 BY 1
                       UNTIL PSUB > MAX-100-BYTES
                   MOVE WS-F1-100 (PSUB) TO DT-100-BYTES
                   COMPUTE WS-START-POS = (PSUB * 100) - 99
                   COMPUTE WS-END-POS   = (PSUB * 100)
                   MOVE WS-START-POS     TO DT-START-POS
                   MOVE WS-END-POS       TO DT-END-POS
                   MOVE '-'              TO DT-HYPHEN
                   MOVE DETAIL-2 TO DIFF-REPORT-REC
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
                   MOVE 2 TO LINE-SPACING
                   MOVE SPACES TO DETAIL-2
               END-PERFORM.

           IF REPORT-TYPE-HEX
               PERFORM VARYING PSUB FROM 1 BY 1
                       UNTIL PSUB > MAX-100-BYTES
                   COMPUTE WS-START-POS = (PSUB * 100) - 99
                   COMPUTE WS-END-POS   = (PSUB * 100)
                   MOVE WS-START-POS     TO DT-START-POS
                   MOVE WS-END-POS       TO DT-END-POS
                   MOVE '-'              TO DT-HYPHEN
                   MOVE 'FILE-1'         TO DT-FILE-ID
                   MOVE WS-F1-100 (PSUB) TO WS-100-BYTES
                   PERFORM D5100-FORMAT-HEX THRU D5100-EXIT
                   MOVE WS1-100-BYTES    TO DT-100-BYTES
                   MOVE DETAIL-2 TO DIFF-REPORT-REC
                   MOVE 2 TO LINE-SPACING
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
                   MOVE SPACES           TO DETAIL-2
                   MOVE WS2-100-BYTES    TO DT-100-BYTES
                   MOVE DETAIL-2         TO DIFF-REPORT-REC
                   MOVE 1                TO LINE-SPACING
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
                   MOVE WS3-100-BYTES    TO DT-100-BYTES
                   MOVE DETAIL-2         TO DIFF-REPORT-REC
                   MOVE 1                TO LINE-SPACING
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
                   MOVE SPACES TO DETAIL-2
               END-PERFORM.

           PERFORM X1000-READ-FILE-1 THRU X1000-EXIT.
       E1000-EXIT.
           EXIT.

      *   PRINT INSERTS ON FILE 2
       E2000-FILE-2-INSERT.

           IF LINE-CNT > 50
               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT.

           PERFORM X7000-WRITE-INS-FILE-2 THRU X7000-EXIT.
           ADD 1 TO FILE-2-INS-CNT
                    TOTAL-DIFF-CNT.
      *   IF THE MAX NUMBER OF DIFFERENCES HAVE PRINTED, DONT PRINT
           IF TOTAL-DIFF-CNT >  WS-MAX-DIFF
               PERFORM X2000-READ-FILE-2 THRU X2000-EXIT
               GO TO E2000-EXIT.

           MOVE FILE-2-READ-CNT TO DT-RECORD-NBR.
           MOVE 'FILE-2 RECORD #' TO DT-INSERT-FILE-ID
           MOVE DETAIL-1 TO DIFF-REPORT-REC.
           MOVE 2 TO LINE-SPACING.
           PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

      *    MOVE REPORT-RULER TO DIFF-REPORT-REC.
      *    MOVE 1 TO LINE-SPACING.
      *    PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT.

      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS
      *  WHICH IS NOT SPACES
           COMPUTE WSUB = MASK-TABLE-MAX / 100.
           PERFORM VARYING PSUB FROM WSUB BY -1
                   UNTIL PSUB < 1 OR
                         WS-F2-100 (PSUB) NOT = SPACES
           END-PERFORM.
           IF PSUB < 1
               MOVE 1 TO MAX-100-BYTES
           ELSE
               MOVE PSUB TO MAX-100-BYTES.

      *  PRINT 100 BYTE SEGMENTS OF THE RECORD
           MOVE 'FILE 2 INSERT' TO DT-FILE-ID.
           MOVE 1 TO LINE-SPACING.
           MOVE 'N' TO RECORD-PRINTED-SW.

           IF REPORT-TYPE-CHAR
               PERFORM VARYING PSUB FROM 1 BY 1
                       UNTIL PSUB > MAX-100-BYTES
                   MOVE WS-F2-100 (PSUB) TO DT-100-BYTES
                   COMPUTE WS-START-POS = (PSUB * 100) - 99
                   COMPUTE WS-END-POS   = (PSUB * 100)
                   MOVE WS-START-POS     TO DT-START-POS
                   MOVE WS-END-POS       TO DT-END-POS
                   MOVE '-'              TO DT-HYPHEN
                   MOVE DETAIL-2 TO DIFF-REPORT-REC
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
                   MOVE 2 TO LINE-SPACING
                   MOVE SPACES TO DETAIL-2
               END-PERFORM.

           IF REPORT-TYPE-HEX
               PERFORM VARYING PSUB FROM 1 BY 1
                       UNTIL PSUB > MAX-100-BYTES
                   COMPUTE WS-START-POS = (PSUB * 100) - 99
                   COMPUTE WS-END-POS   = (PSUB * 100)
                   MOVE WS-START-POS     TO DT-START-POS
                   MOVE WS-END-POS       TO DT-END-POS
                   MOVE '-'              TO DT-HYPHEN
                   MOVE 'FILE-2'         TO DT-FILE-ID
                   MOVE WS-F2-100 (PSUB) TO WS-100-BYTES
                   PERFORM D5100-FORMAT-HEX THRU D5100-EXIT
                   MOVE WS1-100-BYTES    TO DT-100-BYTES
                   MOVE DETAIL-2 TO DIFF-REPORT-REC
                   MOVE 2 TO LINE-SPACING
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
                   MOVE SPACES           TO DETAIL-2
                   MOVE WS2-100-BYTES    TO DT-100-BYTES
                   MOVE DETAIL-2         TO DIFF-REPORT-REC
                   MOVE 1                TO LINE-SPACING
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
                   MOVE WS3-100-BYTES    TO DT-100-BYTES
                   MOVE DETAIL-2         TO DIFF-REPORT-REC
                   MOVE 1                TO LINE-SPACING
                   PERFORM Y2000-WRITE-DETAIL THRU Y2000-EXIT
                   MOVE SPACES TO DETAIL-2
               END-PERFORM.

           PERFORM X2000-READ-FILE-2 THRU X2000-EXIT.
       E2000-EXIT.
           EXIT.

           EJECT
      **************************************************************
      * READ FILE-1
      **************************************************************
       X1000-READ-FILE-1.

           MOVE MAX-REC-LENGTH TO WS-F1-REC-LENGTH.
           MOVE LOW-VALUES TO WS-F1-REC.
           READ FILE-1 INTO WS-F1-REC.

           IF FILE-1-STATUS = '10'
               MOVE HIGH-VALUES TO WS-F1-KEY
               MOVE 'Y' TO END-OF-FILE-1-SW
               GO TO X1000-EXIT.

           ADD 1                       TO FILE-1-READ-CNT.
           IF FILE-1-STATUS NOT = '00'
               DISPLAY 'BAD READ ON FILE-1.  STATUS = '
                        FILE-1-STATUS
               MOVE HIGH-VALUES TO WS-F1-KEY
               MOVE 'Y' TO END-OF-FILE-1-SW
               GO TO X1000-EXIT.

      *  CALCULATE RECORD LENGTH
      *  FIND THE LAST BYTE THAT IS NOT SPACES OR LOW-VALUES
      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS
      *  WHICH IS NOT SPACES
           COMPUTE KSUB = MASK-TABLE-MAX / 100.
           PERFORM VARYING PSUB FROM KSUB BY -1
                   UNTIL PSUB < 1 OR
                        (WS-F1-100 (PSUB) NOT = SPACES AND
                                                LOW-VALUES)
           END-PERFORM.

           IF PSUB < 1
               MOVE MIN-REC-LENGTH TO WS-F1-REC-LENGTH
           ELSE
               COMPUTE WS-F1-REC-LENGTH = PSUB * 100
               PERFORM VARYING WS-F1-REC-LENGTH FROM
                                           WS-F1-REC-LENGTH BY -1
                       UNTIL WS-F1-REC-LENGTH < 1 OR
                            (WS-F1-REC (WS-F1-REC-LENGTH:1) NOT =
                                      SPACES AND LOW-VALUES)
               END-PERFORM
               IF WS-F1-REC-LENGTH > MAX-REC-LENGTH-USED
                  MOVE WS-F1-REC-LENGTH TO MAX-REC-LENGTH-USED
               END-IF
               IF WS-F1-REC-LENGTH < MIN-REC-LENGTH
                  MOVE MIN-REC-LENGTH TO WS-F1-REC-LENGTH
               END-IF
           END-IF.

      *  FORMAT KEY TO MATCH RECORDS
           MOVE SPACES TO WS-F1-KEY.
           MOVE 1 TO WSUB.
           PERFORM VARYING KSUB FROM 1 BY 1
                   UNTIL KSUB > KEY-CNT
               MOVE TKEY-OFFSET(KSUB) TO KEY-OFFSET
               MOVE TKEY-LENGTH(KSUB) TO PSUB
               MOVE WS-F1-REC(KEY-OFFSET:PSUB) TO
                    WS-F1-KEY(WSUB:PSUB)
               ADD PSUB TO WSUB
           END-PERFORM.

       X1000-EXIT.
           EXIT.

      **************************************************************
      * READ FILE-2
      **************************************************************
       X2000-READ-FILE-2.

           MOVE MAX-REC-LENGTH TO WS-F2-REC-LENGTH.
           MOVE LOW-VALUES TO WS-F2-REC.
           READ FILE-2 INTO WS-F2-REC.

           IF FILE-2-STATUS = '10'
               MOVE HIGH-VALUES TO WS-F2-KEY
               MOVE 'Y' TO END-OF-FILE-2-SW
               GO TO X2000-EXIT.

           ADD 1                       TO FILE-2-READ-CNT.
           IF FILE-2-STATUS NOT = '00'
               DISPLAY 'BAD READ ON FILE-2.  STATUS = '
                        FILE-2-STATUS
               MOVE HIGH-VALUES TO WS-F2-KEY
               MOVE 'Y' TO END-OF-FILE-2-SW
               GO TO X2000-EXIT.

      *  CALCULATE RECORD LENGTH
      *  FIND THE LAST BYTE THAT IS NOT SPACES OR LOW-VALUES
      *  FIND THE LAST 100 BYTE SEGMENT IN THE WORK RECORDS
      *  WHICH IS NOT SPACES
           COMPUTE KSUB = MASK-TABLE-MAX / 100.
           PERFORM VARYING PSUB FROM KSUB BY -1
                   UNTIL PSUB < 1 OR
                        (WS-F2-100 (PSUB) NOT = SPACES AND
                                                LOW-VALUES)
           END-PERFORM.

           IF PSUB < 1
               MOVE MIN-REC-LENGTH TO WS-F2-REC-LENGTH
           ELSE
               COMPUTE WS-F2-REC-LENGTH = PSUB * 100
               PERFORM VARYING WS-F2-REC-LENGTH FROM
                                           WS-F2-REC-LENGTH BY -1
                       UNTIL WS-F2-REC-LENGTH < 1 OR
                            (WS-F2-REC (WS-F2-REC-LENGTH:1) NOT =
                                      SPACES AND LOW-VALUES)
               END-PERFORM
               IF WS-F2-REC-LENGTH > MAX-REC-LENGTH-USED
                  MOVE WS-F2-REC-LENGTH TO MAX-REC-LENGTH-USED
               END-IF
               IF WS-F2-REC-LENGTH < MIN-REC-LENGTH
                  MOVE MIN-REC-LENGTH TO WS-F2-REC-LENGTH
               END-IF
           END-IF.


      *  FORMAT KEY TO MATCH RECORDS
           MOVE SPACES TO WS-F2-KEY.
           MOVE 1 TO WSUB.
           PERFORM VARYING KSUB FROM 1 BY 1
                   UNTIL KSUB > KEY-CNT
               MOVE TKEY-OFFSET(KSUB) TO KEY-OFFSET
               MOVE TKEY-LENGTH(KSUB) TO PSUB
               MOVE WS-F2-REC(KEY-OFFSET:PSUB) TO
                    WS-F2-KEY(WSUB:PSUB)
               ADD PSUB TO WSUB
           END-PERFORM.

       X2000-EXIT.
           EXIT.

      **************************************************************
      * READ CONTROL CARDS
      **************************************************************
       X3000-READ-CARDS.

           READ CONTROL-CARDS
               AT END
                   MOVE 'Y' TO END-OF-CARDS-SW
                   GO TO X3000-EXIT.

           IF CARD-FILE-STATUS = '10'
               MOVE 'Y' TO END-OF-CARDS-SW
               GO TO X3000-EXIT.
           IF CARD-FILE-STATUS NOT = '00'
               DISPLAY 'CARD-FILE-STATUS = ' CARD-FILE-STATUS
               MOVE 'Y' TO END-OF-CARDS-SW
               GO TO X3000-EXIT.

           ADD 1                   TO FILE-CARDS-CNT.

       X3000-EXIT.
           EXIT.

      **************************************************************
      * WRITE DIFF-FILE-1
      **************************************************************
       X4000-WRITE-DIFF-FILE-1.

           WRITE FILE-1-DIFF-CD   FROM FILE-1-REC-C.

           ADD 1                  TO FILE-1D-WRITE-CNT.
           IF FILE-1D-STATUS NOT = '00'
               DISPLAY 'DD DIFF1 FILE-1D-STATUS = ' FILE-1D-STATUS
                       ' ON WRITE # '  FILE-1D-WRITE-CNT
               GO TO X4000-EXIT.

       X4000-EXIT.
           EXIT.

      **************************************************************
      * WRITE DIFF-FILE-2
      **************************************************************
       X5000-WRITE-DIFF-FILE-2.

           WRITE FILE-2-DIFF-CD   FROM FILE-2-REC-C.

           ADD 1                  TO FILE-2D-WRITE-CNT.
           IF FILE-2D-STATUS NOT = '00'
               DISPLAY 'DD DIFF2 FILE-2D-STATUS = ' FILE-2D-STATUS
                       ' ON WRITE # '  FILE-2D-WRITE-CNT
               GO TO X5000-EXIT.

       X5000-EXIT.
           EXIT.

      **************************************************************
      * WRITE INS-FILE-1
      **************************************************************
       X6000-WRITE-INS-FILE-1.

           WRITE FILE-1-INS-CD   FROM FILE-1-REC-C.

           ADD 1                  TO FILE-1E-WRITE-CNT.
           IF FILE-1E-STATUS NOT = '00'
               DISPLAY 'DD INS1 FILE-1E-STATUS = ' FILE-1E-STATUS
                       ' ON WRITE # '  FILE-1E-WRITE-CNT
               GO TO X6000-EXIT.

       X6000-EXIT.
           EXIT.

      **************************************************************
      * WRITE INS-FILE-2
      **************************************************************
       X7000-WRITE-INS-FILE-2.

           WRITE FILE-2-INS-CD   FROM FILE-2-REC-C.

           ADD 1                  TO FILE-2E-WRITE-CNT.
           IF FILE-2E-STATUS NOT = '00'
               DISPLAY 'DD INS2 FILE-2E-STATUS = ' FILE-2E-STATUS
                       ' ON WRITE # '  FILE-2E-WRITE-CNT
               GO TO X7000-EXIT.

       X7000-EXIT.
           EXIT.

           EJECT
      ***************************************************************
      ***  PRINT ROUTINES
      ***************************************************************


      **************************************************************
      * WRITE DETAIL LINE
      **************************************************************
       Y2000-WRITE-DETAIL.

           IF LINE-CNT > 55
               MOVE DIFF-REPORT-REC TO SAVE-DIFF-REPORT-REC
               MOVE LINE-SPACING TO SAVE-LINE-SPACING
               PERFORM Y2025-WRITE-HEADER THRU Y2025-EXIT
               MOVE SAVE-DIFF-REPORT-REC TO DIFF-REPORT-REC
               MOVE SAVE-LINE-SPACING TO LINE-SPACING.

           IF LINE-SPACING = 1
               WRITE DIFF-REPORT-REC
                    AFTER ADVANCING 1 LINE
           ELSE
           IF LINE-SPACING = 2
               WRITE DIFF-REPORT-REC
                    AFTER ADVANCING 2 LINE
           ELSE
           IF LINE-SPACING = 3
               WRITE DIFF-REPORT-REC
                    AFTER ADVANCING 3 LINE.

           ADD LINE-SPACING  TO LINE-CNT.

       Y2000-EXIT.
           EXIT.

      **************************************************************
      * WRITE HEADER
      **************************************************************
       Y2025-WRITE-HEADER.

           ADD 1 TO PAGE-CNT
           MOVE PAGE-CNT TO HD1-PAGE.
           MOVE '          FILE COMPARE DIFFERENCE REPORT'
                                   TO HD2-TITLE.
           MOVE '01'               TO HD2-REPORT.

           IF PAGE-CNT > 1
               PERFORM Y2050-FOOTER THRU Y2050-EXIT.

           WRITE DIFF-REPORT-REC FROM HEADING-1
                AFTER ADVANCING PAGE.
           WRITE DIFF-REPORT-REC FROM HEADING-2
                AFTER ADVANCING 1 LINE.
           WRITE DIFF-REPORT-REC FROM REPORT-HEAD-3
                AFTER ADVANCING 2 LINE.
           WRITE DIFF-REPORT-REC FROM REPORT-RULER
                AFTER ADVANCING 1 LINE.
           MOVE SPACES TO DIFF-REPORT-REC.

           MOVE HEADER-LINE-CNT TO LINE-CNT.

       Y2025-EXIT.
           EXIT.


       Y2050-FOOTER.
           MOVE SPACES TO DIFF-REPORT-REC.

           PERFORM UNTIL LINE-CNT > INST-LINES-PER-PAGE
               WRITE DIFF-REPORT-REC
                   AFTER ADVANCING 1 LINE
               ADD 1 TO LINE-CNT
           END-PERFORM.

           WRITE DIFF-REPORT-REC
               AFTER ADVANCING 2 LINE.
           WRITE DIFF-REPORT-REC FROM FOOTER-1
               AFTER ADVANCING 1 LINE.

       Y2050-EXIT.
           EXIT.

           EJECT
       Z9000-ABEND-PROGRAM.

           IF INST-CEE
              MOVE WS-ABEND-CODE TO WS-CEE-ABEND-CODE
              MOVE 1 TO WS-CEE-CLEANUP-CODE
              IF WS-CEE-ABEND-CODE = ZERO
                 MOVE 4001 TO WS-CEE-ABEND-CODE
              END-IF
              IF WS-RETURN-CODE = ZERO
                 MOVE WS-CEE-ABEND-CODE TO WS-RETURN-CODE
              END-IF
           ELSE
           IF WS-ABEND-CODE = ZERO
              MOVE 4001 TO WS-ABEND-CODE
              IF WS-RETURN-CODE = ZERO
                 MOVE WS-ABEND-CODE TO WS-RETURN-CODE
              END-IF
           END-IF.

           MOVE WS-RETURN-CODE TO RETURN-CODE.

           DISPLAY '***********************************************'.
           DISPLAY '    '.

           IF WS-RETURN-CODE NOT = ZERO
              DISPLAY 'PROGRAM IS ABENDING WITH RETURN CODE = '
                      WS-RETURN-CODE
           END-IF.

           IF WS-ABEND-PARA NOT = SPACE
              DISPLAY ' ABEND FROM PARAGRAPH '
                      WS-ABEND-PARA
           END-IF.

           IF WS-ABEND-REASON-1 NOT = SPACE
              DISPLAY ' ' WS-ABEND-REASON-1
           IF WS-ABEND-REASON-2 NOT = SPACE
              DISPLAY ' ' WS-ABEND-REASON-2
           END-IF.

           IF INST-CEE
              DISPLAY 'ABENDING PROGRAM ' WS-PROGRAM
                      ' WITH ABEND CODE ' WS-CEE-ABEND-CODE
                      '  CLEANUP = '      WS-CEE-CLEANUP-CODE
              CALL 'CEE3ABD' USING WS-CEE-ABEND-CODE
                                   WS-CEE-CLEANUP-CODE
           ELSE
              DISPLAY 'ABENDING PROGRAM ' WS-PROGRAM
                      ' WITH ABEND CODE ' WS-ABEND-CODE
              CALL 'ILBOABN0' USING WS-ABEND-CODE
           END-IF.

       Z9000-EXIT.
           EXIT.

