./ ADD NAME=CASE     0100-14178-14178-0002-00044-00044-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     09/23/08.
.*             REMARKS.  ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE
.********************************************************************
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
         CASE  &VALUE
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ 0)
           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1
               MNOTE 8,'CASE - MISSING CASENTRY'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
.*       AIF   (&ZSTR_LVL_TYPE(&ZSTR_LVL) NE 'CASENTRY')
           AIF   (NOT(&ZSTR_LVL_TYPE(&ZSTR_LVL) NE 'CASENTRY')).AIF_2_1
               MNOTE 8,'CASE - MISSING CASENTRY'
               MEXIT
.*       AEND
.AIF_2_1   ANOP
.*       AIF   (T'&VALUE NE 'N')
           AIF   (NOT(T'&VALUE NE 'N')).AIF_3_1
               MNOTE 8,'CASE - INVALID VALUE 0-N'
.*       AEND
.AIF_3_1   ANOP
.*       AIF   (&VALUE GT &ZSTR_CASE_MAX(&ZSTR_LVL))
           AIF   (NOT(&VALUE GT &ZSTR_CASE_MAX(&ZSTR_LVL))).AIF_4_1
&ZSTR_CASE_MAX(&ZSTR_LVL) SETA &VALUE
.*       AEND
.AIF_4_1   ANOP
.*       AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)
           AIF   (NOT(&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)).AIF_5_1
         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E
.*       AEND
.AIF_5_1   ANOP
&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1
#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&VALUE DS 0H
#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_L LOCTR
         ORG   #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T+4*&VALUE
         DC    A(#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&VALUE)
&SYSECT  CSECT
         MEND
./ ADD NAME=CASENTRY 0100-14178-14178-0002-00034-00034-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     09/23/08.
.*             REMARKS.  ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE
.********************************************************************
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
         CASENTRY &REG
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)
           AIF   (NOT(&ZSTR_LVL EQ &ZSTR_MAX_LVL)).AIF_1_1
               MNOTE 8,'CASENTRY - LEVEL OVERFLOW'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
&ZSTR_LVL SETA &ZSTR_LVL+1
&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'CASENTRY'
&ZSTR_CASE_CNT SETA &ZSTR_CASE_CNT+1
&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_CASE_CNT
&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA 0 RESET BLK CTR
&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 0 RESET OTHRWISE BLK
&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 1 REQUEST END LABEL
&ZSTR_CASE_REG(&ZSTR_LVL) SETC '&REG' SAVE FOR ENDCASE CODE
.*       AIF ('&REG' EQ '')
           AIF (NOT('&REG' EQ '')).AIF_2_1
             MNOTE 8,'CASENTRY - MISSING REGISTER WITH INDEX 0-N'
.*       AEND
.AIF_2_1   ANOP
#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_L LOCTR
#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T DS 0A START CASENTRY BRANCH TABLE
&SYSECT  CSECT
         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_G BRANCH TO CASE CODE
         MEND
./ ADD NAME=DO       0100-14178-14178-0002-00123-00123-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     03/27/74.
.*             REMARKS.  MACRO TO ALLOW STRUCTURED PROGRAMMING USING
.*                       IF, THEN, ELSE, AND DO UP TO TEN LEVELS DEEP
.*                       AND NO BRANCH INSTRUCTIONS. SEE IF MACRO.
.********************************************************************
.* 05/14/06 DSH Z390 RPI 316 UPDATED FOR COMPAT.
.* 07/21/06 DSH Z390 RPI 379 USE IF TO SUPPORT COMPOUND WHILE/UNTIL
.* 04/11/07 DSH Z390 RPI 589 USE ZSTRGBL AND EXPAND LEVELS TO 100
.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
         DO    &END,&WHILE=,&UNTIL=
         COPY  ZSTRGBL
.*       AIF   ('&END' NE '')
           AIF   (NOT('&END' NE '')).AIF_1_1
.*             AIF ('&END' EQ 'END')
                 AIF (NOT('&END' EQ 'END')).AIF_2_1
.*                ACALL DO_END
&ACALL_1_DO_END     SETA    1
                    AGO   .ACL_1_DO_END
.ACL_1_1            ANOP
                  MEXIT
.*             AELSE
                 AGO   .AIF_2_E
.AIF_2_1         ANOP
                  MNOTE 8,'DO - UNSUPPORTED OPTION'
                  MEXIT
.*             AEND
.AIF_2_E         ANOP
.*       AEND
.AIF_1_1   ANOP
.*       AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)
           AIF   (NOT(&ZSTR_LVL EQ &ZSTR_MAX_LVL)).AIF_3_1
               MNOTE 8,'DO - LEVEL OVERFLOW'
               MEXIT
.*       AEND
.AIF_3_1   ANOP
&ZSTR_LVL SETA &ZSTR_LVL+1
&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'DO'
&ZSTR_DO_CNT SETA &ZSTR_DO_CNT+1
&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_DO_CNT
.*       AIF   ('&WHILE' NE '')
           AIF   (NOT('&WHILE' NE '')).AIF_4_1
.*             ACALL DO_WHILE
&ACALL_2_DO_WHILE SETA    1
                 AGO   .ACL_2_DO_WHILE
.ACL_2_1         ANOP
.*       AELSEIF ('&UNTIL' NE '')
           AGO   .AIF_4_E
.AIF_4_1   ANOP
           AIF     (NOT('&UNTIL' NE '')).AIF_4_2
.*             ACALL DO_UNTIL
&ACALL_3_DO_UNTIL SETA    1
                 AGO   .ACL_3_DO_UNTIL
.ACL_3_1         ANOP
.*       AELSE
           AGO   .AIF_4_E
.AIF_4_2   ANOP
               MNOTE 8,'DO - MISSING WHILE=, UNTIL=, OR END'
.*       AEND
.AIF_4_E   ANOP
         MEXIT
.*
.* DO END
.*
.*       AENTRY DO_END
           AGO   .ACL_1_SKIP
.ACL_1_DO_END ANOP
&PARM    SETC  '&SYSLIST(2)'
.*       AIF   (&ZSTR_LVL EQ 0)
           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_5_1
               MNOTE 8,'DO - END OUT OF SEQUENCE'
               MEXIT
.*       AEND
.AIF_5_1   ANOP
.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'DO')
           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'DO')).AIF_6_1
               MNOTE 8,'DO END - MISSING DO'
               MEXIT
.*       AEND
.AIF_6_1   ANOP
         B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T
#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H
&ZSTR_LVL SETA &ZSTR_LVL-1
.*       AEND
           AGO   (&ACALL_1_DO_END).ACL_1_1
.ACL_1_SKIP ANOP
.*
.* DO WHILE=(CLC,A,EQ,B)
.*
.*       AENTRY DO_WHILE
           AGO   .ACL_2_SKIP
.ACL_2_DO_WHILE ANOP
#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T DS 0H
&IFPARM  SETC  '&WHILE'(2,K'&WHILE-2)
         IF &IFPARM
               B   #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL-1)_1
         ENDIF
         B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E
#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_1 DS 0H
.*       AEND
           AGO   (&ACALL_2_DO_WHILE).ACL_2_1
.ACL_2_SKIP ANOP
.*
.* DO UNTIL=(CLC,A,EQ,B)
.*
.*       AENTRY DO_UNTIL
           AGO   .ACL_3_SKIP
.ACL_3_DO_UNTIL ANOP
         B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_1
#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T DS 0H
&IFPARM  SETC  '&UNTIL'(2,K'&UNTIL-2)
         IF    &IFPARM
               B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL-1)_E
         ENDIF
#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_1 DS 0H
.*       AEND
           AGO   (&ACALL_3_DO_UNTIL).ACL_3_1
.ACL_3_SKIP ANOP
         MEND
./ ADD NAME=ELSE     0100-14178-14178-0002-00085-00085-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     03/27/74.
.*             REMARKS.  MACRO TO ALLOW STRUCTURED PROGRAMMING USING
.*                       IF, THEN, ELSE, AND DO UP TO TEN LEVELS DEEP
.*                       AND NO BRANCH INSTRUCTIONS. SEE IF MACRO.
.********************************************************************
.* 05/23/76 DSH - SUPPORT ELSEIF
.* 05/15/06 DSH - Z390 RPI 315 UPDATE FOR COMPAT.
.* 04/11/07 DSH - RPI 589 USE ZSTRGBL COPY AND EXPAND LEVELS TO 100
.* 09/23/08 DSH - RPI 909 USE ZSTRMAC SPE'S
.********************************************************************
         ELSE  &OPT
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ 0)
           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1
               MNOTE 8,'ELSE - MISSING IF'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')
           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')).AIF_2_1
               MNOTE 8,'ELSE - MISSING IF'
               MEXIT
.*       AEND
.AIF_2_1   ANOP
.*       AIF   (T'&OPT EQ 'O' OR '&OPT' EQ 'BEGIN')
           AIF   (NOT(T'&OPT EQ 'O' OR '&OPT' EQ 'BEGIN')).AIF_3_1
.*             ACALL ELSE_BEGIN
&ACALL_1_ELSE_BEGIN SETA    1
                 AGO   .ACL_1_ELSE_BEGIN
.ACL_1_1         ANOP
.*       AELSEIF ('&OPT' EQ 'END')
           AGO   .AIF_3_E
.AIF_3_1   ANOP
           AIF     (NOT('&OPT' EQ 'END')).AIF_3_2
.*             ACALL ELSE_END
&ACALL_2_ELSE_END SETA    1
                 AGO   .ACL_2_ELSE_END
.ACL_2_1         ANOP
.*       AEND
.AIF_3_2   ANOP
.AIF_3_E   ANOP
         MEXIT
.*
.* ELSE OR ELSE BEGIN - START ELSE BLOCK
.*
.*      AENTRY ELSE_BEGIN
          AGO   .ACL_1_SKIP
.ACL_1_ELSE_BEGIN ANOP
.*      AIF   (&ZSTR_LVL_ELSE(&ZSTR_LVL))
          AIF   (NOT(&ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_4_1
              MNOTE 8,'ELSE - DUPLICATE ELSE'
              MEXIT
.*      AEND
.AIF_4_1  ANOP
&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 1  ELSE
&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 1  REQUEST END LABEL
        B      #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H
.*       AEND
           AGO   (&ACALL_1_ELSE_BEGIN).ACL_1_1
.ACL_1_SKIP ANOP
.*
.* ELSE END (SAVE AS ENDIF)
.*
.*       AENTRY ELSE_END
           AGO   .ACL_2_SKIP
.ACL_2_ELSE_END ANOP
.*       AIF   (NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))
           AIF   (NOT(NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_5_1
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H
.*       AEND
.AIF_5_1   ANOP
.*       AIF   (&ZSTR_LVL_TEND(&ZSTR_LVL))
           AIF   (NOT(&ZSTR_LVL_TEND(&ZSTR_LVL))).AIF_6_1
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H
.*       AEND
.AIF_6_1   ANOP
&ZSTR_LVL SETA &ZSTR_LVL-1
.*       AEND
           AGO   (&ACALL_2_ELSE_END).ACL_2_1
.ACL_2_SKIP ANOP
         MEND
./ ADD NAME=ELSEIF   0100-14178-14178-0002-00121-00121-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     05/23/76.
.*             REMARKS.  CONTROL STRUCTURE FOR CONDITIONAL EXECUTION.
.********************************************************************
.* 05/12/06 Z390 RPI 316 UPDATE FOR COMPAT.
.* 04/11/07 Z390 RPI 589 USE ZSTRGBL AND EXPAND LEVELS TO 100
.* 11/02/07 Z390 RPI 734 CORRECT BAD CONDITION CODE FOR OR CONNECTOR
.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility
.* 09/23/08 RPI 909 update using ZSTRMAC SPE's
.********************************************************************
         ELSEIF
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ 0)
           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1
               MNOTE 8,'ELSEIF - MISSING IF'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')
           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')).AIF_2_1
               MNOTE 8,'ELSEIF - MISSING IF'
               MEXIT
.*       AEND
.AIF_2_1   ANOP
&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 1  REQUEST END LABEL
         B     #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H
&BLK_CNT SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1 THIS BLK LAB FOR OR
&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+2
&AND_CONN SETB 1             ASSUME AND CONNECTOR IF ANY
&N       SETA N'&SYSLIST         TOTAL TEST AND CONNECTOR PARMS
&S       SETA 1                  OPERAND INDEX
.*       AWHILE (&S LE &N)
.AWH_1_T   ANOP
           AIF    (NOT(&S LE &N)).AWH_1_E
&SN            SETA  N'&SYSLIST(&S)        TEST OPERANDS
&OP            SETC  '&SYSLIST(&S,1)'      TEST OPCODE
.*             AIF (&SN EQ 1)  COMPARE NOT IN QUOTES
                 AIF (NOT(&SN EQ 1)).AIF_3_1   COMPARE NOT IN QUOTES
&BC                SETC  '&SYSLIST(&S+2)'  TEST COMPARE MASK
.*                 AIF (&N LT &S+3)
                     AIF (NOT(&N LT &S+3)).AIF_4_1
                       MNOTE 8,'IF - TEST SUBLIST LENGTH INVALID - &SYSX
               LIST(&S)'
                       MEXIT
.*                 AEND
.AIF_4_1             ANOP
&OPR               SETC '&SYSLIST(&S+1),&SYSLIST(&S+3)'
&S                 SETA  &S+4-1     POS TO TEST END-1
.*             AELSEIF (&SN EQ 4)  OPERANDS IN QUOTES WITH CONNECTORS
                 AGO   .AIF_3_E
.AIF_3_1         ANOP
                 AIF     (NOT(&SN EQ 4)).AIF_3_2   OPERANDS IN QUOTES WX
               ITH CONNECTORS
&BC                SETC  '&SYSLIST(&S,3)'
&OPR               SETC  '&SYSLIST(&S,2),&SYSLIST(&S,4)'
.*             AEND
.AIF_3_2         ANOP
.AIF_3_E         ANOP
.*             AIF   (&AND_CONN)    IF AND EXIT IF COMPARE FAILS
                 AIF   (NOT(&AND_CONN)).AIF_5_1     IF AND EXIT IF COMPX
               ARE FAILS
         &OP   &OPR
         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX
               TR_LVL)
.*             AELSE                IF OR  EXEC BLOCK IF TEST OK
                 AGO   .AIF_5_E
.AIF_5_1         ANOP
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H
&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1
         &OP   &OPR
         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX
               TR_LVL)
.*             AEND
.AIF_5_E         ANOP
&S             SETA  &S+1       ADVANCE TO CONNECTOR OR END
.*             AIF (&S LE &N)
                 AIF (NOT(&S LE &N)).AIF_6_1
&SN                SETA N'&SYSLIST(&S)
.*                 AIF (&SN NE 1)
                     AIF (NOT(&SN NE 1)).AIF_7_1
                       MNOTE 8,'IF - INVALID CONNECTOR'
                       MEXIT
.*                 AEND
.AIF_7_1             ANOP
.*                 AIF   ('&SYSLIST(&S)' EQ 'OR')
                     AIF   (NOT('&SYSLIST(&S)' EQ 'OR')).AIF_8_1
         B     #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT
&AND_CONN              SETB 0
.*                 AELSEIF  ('&SYSLIST(&S)' EQ 'AND')
                     AGO   .AIF_8_E
.AIF_8_1             ANOP
                     AIF      (NOT('&SYSLIST(&S)' EQ 'AND')).AIF_8_2
&AND_CONN              SETB 1
.*                 AELSE
                     AGO   .AIF_8_E
.AIF_8_2             ANOP
                       MNOTE 8,'IF - INVALID CONNECTOR'
                       MEXIT
.*                 AEND
.AIF_8_E             ANOP
&S                 SETA &S+1
.*                 AIF (&S GT &N)
                     AIF (NOT(&S GT &N)).AIF_9_1
                       MNOTE 8,'IF - MISSING TEST AFTER CONNECTOR'
                       MEXIT
.*                 AEND
.AIF_9_1             ANOP
.*             AEND
.AIF_6_1         ANOP
.*       AEND
           AGO   .AWH_1_T
.AWH_1_E   ANOP
.*       AIF   (NOT &AND_CONN)
           AIF   (NOT(NOT &AND_CONN)).AIF_10_1
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT DS 0H
.*       AEND
.AIF_10_1  ANOP
         MEND
./ ADD NAME=ENDCASE  0100-14178-14178-0002-00042-00042-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     09/23/08.
.*             REMARKS.  ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE
.********************************************************************
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
         ENDCASE
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ 0)
           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1
               MNOTE 8,'ENDCASE - MISSING CASENTRY'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'CASENTRY')
           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'CASENTRY')).AIF_2X
               _1
               MNOTE 8,'ENDCASE - MISSING CASENTRY'
               MEXIT
.*       AEND
.AIF_2_1   ANOP
.*       AIF   ('&ZSTR_LVL_BCNT(&ZSTR_LVL)' EQ 0)
           AIF   (NOT('&ZSTR_LVL_BCNT(&ZSTR_LVL)' EQ 0)).AIF_3_1
               MNOTE 8,'ENDCASE - MISSING CASE(S)'
               MEXIT
.*       AEND
.AIF_3_1   ANOP
         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E
#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_A DC A(#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_X
               T)
#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_G DS 0H
         CLFI  &ZSTR_CASE_REG(&ZSTR_LVL),&ZSTR_CASE_MAX(&ZSTR_LVL)
         BH    #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E
         SLA   &ZSTR_CASE_REG(&ZSTR_LVL),2
         A     &ZSTR_CASE_REG(&ZSTR_LVL),#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVLX
               )_A
         LT    &ZSTR_CASE_REG(&ZSTR_LVL),0(&ZSTR_CASE_REG(&ZSTR_LVL))
         BNZR  &ZSTR_CASE_REG(&ZSTR_LVL)
#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H
         MEND
./ ADD NAME=ENDDO    0100-14178-14178-0002-00007-00007-00000-STRPGMC
         MACRO
&N       ENDDO
.********************************************************************
.* 05/14/06 DSH Z390 RPI 316 UPDATED FOR COMPAT.
.********************************************************************
&N       DO    END
         MEND
./ ADD NAME=ENDIF    0100-14178-14178-0002-00034-00034-00000-STRPGMC
         MACRO
.********************************************************************
.* ENDIF - END OF ALTERATE SELECTION
.********************************************************************
.* 05/14/06 DSH Z390 RPI 316 UPDATE FOR COMPAT.
.* 04/11/07 DSH Z390 RPI 589 USE ZSTRGBL COPY AND EXPAND LEVELS 100
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
&N       ENDIF
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ 0)
           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1
               MNOTE 8,'ENDIF - MISSING IF'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')
           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')).AIF_2_1
               MNOTE 8,'ENDIF - MISSING IF'
               MEXIT
.*       AEND
.AIF_2_1   ANOP
.*       AIF   (NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))
           AIF   (NOT(NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_3_1
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H
.*       AEND
.AIF_3_1   ANOP
.*       AIF   (&ZSTR_LVL_TEND(&ZSTR_LVL))
           AIF   (NOT(&ZSTR_LVL_TEND(&ZSTR_LVL))).AIF_4_1
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H
.*       AEND
.AIF_4_1   ANOP
&ZSTR_LVL SETA &ZSTR_LVL-1
         MEND
./ ADD NAME=ENDSEL   0100-14178-14178-0002-00042-00042-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     09/23/08.
.*             REMARKS.  ADD SPMS FOR SELECT,WHEN,OTHRWISE,ENDSEL
.********************************************************************
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
         ENDSEL
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ 0)
           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1
               MNOTE 8,'ENDSEL - MISSING SELECT'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')
           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')).AIF_2_1
               MNOTE 8,'ENDSEL - MISSING SELECT'
               MEXIT
.*       AEND
.AIF_2_1   ANOP
.*       AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)
           AIF   (NOT(&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)).AIF_3_1
               MNOTE 8,'ENDSEL - MISSING WHEN'
               MEXIT
.*       AEND
.AIF_3_1   ANOP
.*       AIF (NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))
           AIF (NOT(NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_4_1
#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H
.*       AEND
.AIF_4_1   ANOP
.*       AIF   (&ZSTR_LVL_ELSE(&ZSTR_LVL)                              X
                OR &ZSTR_LVL_BCNT(&ZSTR_LVL) GT 1))
           AIF   (NOT(&ZSTR_LVL_ELSE(&ZSTR_LVL)                        X
                      OR &ZSTR_LVL_BCNT(&ZSTR_LVL) GT 1))).AIF_5_1
#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H
.*       AEND
.AIF_5_1   ANOP
&ZSTR_LVL SETA &ZSTR_LVL-1
         MEND
./ ADD NAME=IF       0100-14178-14178-0002-00118-00118-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     03/27/74.
.*             REMARKS.  CONTROL STRUCTURE FOR CONDITIONAL EXECUTION.
.********************************************************************
.* 05/23/76 DSH - SUPPORT ELSEIF.
.* 05/15/06 RPI 316 UPDATE FOR COMPAT.
.* 04/11/07 RPI     USE ZSTRGBL COPY AND EXPAND LEVELS TO 100
.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
         IF
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)
           AIF   (NOT(&ZSTR_LVL EQ &ZSTR_MAX_LVL)).AIF_1_1
               MNOTE 8,'IF - LEVEL OVERFLOW'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
&ZSTR_LVL SETA &ZSTR_LVL+1
&ZSTR_AIF_CNT SETA &ZSTR_AIF_CNT+1   IF COUNTER
&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_AIF_CNT
&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'IF'
&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA 2     IF BLK/LAB COUNTER
&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 0     ELSE RESET
&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 0     END LABEL RESET
&AND_CONN SETB 1             ASSUME AND CONNECTOR IF ANY
&N       SETA N'&SYSLIST         TOTAL TEST AND CONNECTOR PARMS
&S       SETA 1                  OPERAND INDEX
&BLK_CNT SETA 1              LAB FOR THIS BLOCK USED BY OR
.*       AWHILE (&S LE &N)
.AWH_1_T   ANOP
           AIF    (NOT(&S LE &N)).AWH_1_E
&SN            SETA  N'&SYSLIST(&S)        TEST OPERANDS
&OP            SETC  '&SYSLIST(&S,1)'      TEST OPCODE
.*             AIF (&SN EQ 1)  COMPARE NOT IN QUOTES
                 AIF (NOT(&SN EQ 1)).AIF_2_1   COMPARE NOT IN QUOTES
.*                 AIF (&N LT &S+3)
                     AIF (NOT(&N LT &S+3)).AIF_3_1
                       MNOTE 8,'IF - TEST SUBLIST LENGTH INVALID - &SYSX
               LIST(&S)'
                       MEXIT
.*                 AEND
.AIF_3_1             ANOP
&BC                SETC  '&SYSLIST(&S+2)'  TEST COMPARE MASK
&OPR               SETC '&SYSLIST(&S+1),&SYSLIST(&S+3)'
&S                 SETA  &S+4-1     POS TO TEST END-1
.*             AELSEIF (&SN EQ 4)  OPERAND IN QUOTES WITH CONNECTORS
                 AGO   .AIF_2_E
.AIF_2_1         ANOP
                 AIF     (NOT(&SN EQ 4)).AIF_2_2   OPERAND IN QUOTES WIX
               TH CONNECTORS
&BC                SETC  '&SYSLIST(&S,3)'
&OPR               SETC  '&SYSLIST(&S,2),&SYSLIST(&S,4)'
.*             AEND
.AIF_2_2         ANOP
.AIF_2_E         ANOP
.*             AIF   (&AND_CONN)    IF AND EXIT IF COMPARE FAILS
                 AIF   (NOT(&AND_CONN)).AIF_4_1     IF AND EXIT IF COMPX
               ARE FAILS
         &OP   &OPR
         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX
               TR_LVL)
.*             AELSE                IF OR  EXEC BLOCK IF TEST OK
                 AGO   .AIF_4_E
.AIF_4_1         ANOP
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H
&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1
         &OP   &OPR
         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX
               TR_LVL)
.*             AEND
.AIF_4_E         ANOP
&S             SETA  &S+1       ADVANCE TO CONNECTOR OR END
.*             AIF (&S LE &N)
                 AIF (NOT(&S LE &N)).AIF_5_1
&SN                SETA N'&SYSLIST(&S)
.*                 AIF (&SN NE 1)
                     AIF (NOT(&SN NE 1)).AIF_6_1
                       MNOTE 8,'IF - INVALID CONNECTOR'
                       MEXIT
.*                 AEND
.AIF_6_1             ANOP
.*                 AIF   ('&SYSLIST(&S)' EQ 'OR')
                     AIF   (NOT('&SYSLIST(&S)' EQ 'OR')).AIF_7_1
         B     #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT
&AND_CONN              SETB 0
.*                 AELSEIF  ('&SYSLIST(&S)' EQ 'AND')
                     AGO   .AIF_7_E
.AIF_7_1             ANOP
                     AIF      (NOT('&SYSLIST(&S)' EQ 'AND')).AIF_7_2
&AND_CONN              SETB 1
.*                 AELSE
                     AGO   .AIF_7_E
.AIF_7_2             ANOP
                       MNOTE 8,'IF - INVALID CONNECTOR'
                       MEXIT
.*                 AEND
.AIF_7_E             ANOP
&S                 SETA &S+1
.*                 AIF (&S GT &N)
                     AIF (NOT(&S GT &N)).AIF_8_1
                       MNOTE 8,'IF - MISSING TEST AFTER CONNECTOR'
                       MEXIT
.*                 AEND
.AIF_8_1             ANOP
.*             AEND
.AIF_5_1         ANOP
.*       AEND
           AGO   .AWH_1_T
.AWH_1_E   ANOP
.*       AIF   (NOT &AND_CONN)
           AIF   (NOT(NOT &AND_CONN)).AIF_9_1
#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT DS 0H
.*       AEND
.AIF_9_1   ANOP
         MEND
./ ADD NAME=OTHRWISE 0100-14178-14178-0002-00038-00038-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     09/23/08.
.*             REMARKS.  ADD SPMS FOR SELECT,WHEN,OTHRWISE,ENDSEL
.********************************************************************
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
         OTHRWISE  &VALUE
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ 0)
           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1
               MNOTE 8,'OTHRWISE - MISSING SELECT'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')
           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')).AIF_2_1
               MNOTE 8,'OTHRWISE - MISSING SELECT'
               MEXIT
.*       AEND
.AIF_2_1   ANOP
.*       AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)
           AIF   (NOT(&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)).AIF_3_1
               MNOTE 8,'OTHRWISE - MISSING WHEN'
               MEXIT
.*       AEND
.AIF_3_1   ANOP
.*       AIF   (&ZSTR_LVL_ELSE(&ZSTR_LVL))
           AIF   (NOT(&ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_4_1
               MNOTE 8,'OTHRWISE - DUPLICATE OTHRWISE'
               MEXIT
.*       AEND
.AIF_4_1   ANOP
         B     #@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E
#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H
&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 1
         MEND
./ ADD NAME=SELECT   0100-14178-14178-0002-00026-00026-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     09/23/08.
.*             REMARKS.  ADD SPM MACROS FOR SELECT,WHEN,ENDSEL
.********************************************************************
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
         SELECT &OP,&FIELD,&COMP
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)
           AIF   (NOT(&ZSTR_LVL EQ &ZSTR_MAX_LVL)).AIF_1_1
               MNOTE 8,'SELECT - LEVEL OVERFLOW'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
&ZSTR_LVL SETA &ZSTR_LVL+1
&ZSTR_SEL_CNT SETA &ZSTR_SEL_CNT+1
&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_SEL_CNT
&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'SELECT'
&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA 0 RESET BLK CTR
&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 0 RESET OTHRWISE BLK
&ZSTR_SEL_OP(&ZSTR_LVL) SETC '&OP'
&ZSTR_SEL_FLD(&ZSTR_LVL) SETC '&FIELD'
&ZSTR_SEL_CMP(&ZSTR_LVL) SETC '&COMP'
         MEND
./ ADD NAME=WHEN     0100-14178-14178-0002-00050-00050-00000-STRPGMC
         MACRO
.********************************************************************
.*             AUTHOR.   DON HIGGINS.
.*             DATE.     09/23/08.
.*             REMARKS.  ADD SPM MACROS FOR SELECT,WHEN,ENDSEL
.********************************************************************
.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.
.********************************************************************
         WHEN  &VALUE
         COPY  ZSTRGBL
.*       AIF   (&ZSTR_LVL EQ 0)
           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1
               MNOTE 8,'WHEN - MISSING SELECT'
               MEXIT
.*       AEND
.AIF_1_1   ANOP
.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')
           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')).AIF_2_1
               MNOTE 8,'WHEN - MISSING SELECT'
               MEXIT
.*       AEND
.AIF_2_1   ANOP
.*       AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)
           AIF   (NOT(&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)).AIF_3_1
         B     #@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E
#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H
.*       AEND
.AIF_3_1   ANOP
.*       AIF   (N'&SYSLIST EQ 1)
           AIF   (NOT(N'&SYSLIST EQ 1)).AIF_4_1
.*             AIF ('&ZSTR_SEL_OP(&ZSTR_LVL)' EQ '')
                 AIF (NOT('&ZSTR_SEL_OP(&ZSTR_LVL)' EQ '')).AIF_5_1
                   MNOTE 8,'WHEN - MISSING COMPARE OPCODE'
                   MEXIT
.*             AEND
.AIF_5_1         ANOP
         &ZSTR_SEL_OP(&ZSTR_LVL) &ZSTR_SEL_FLD(&ZSTR_LVL),&VALUE
&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1
         BC    15-&ZSTR_SEL_CMP(&ZSTR_LVL),#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LX
               VL)_&ZSTR_LVL_BCNT(&ZSTR_LVL)
.*       AELSE
           AGO   .AIF_4_E
.AIF_4_1   ANOP
         &SYSLIST(1) &SYSLIST(2),&SYSLIST(4)
&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1
         BC    15-&SYSLIST(3),#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVLX
               _BCNT(&ZSTR_LVL)
.*       AEND
.AIF_4_E   ANOP
         MEND
./ ADD NAME=ZSTREQU  0100-14178-14178-0002-00037-00037-00000-STRPGMC
         MACRO
         ZSTREQU
         GBLB  &ZSTR_EQU
.*       AIF   (&ZSTR_EQU)
           AIF   (NOT(&ZSTR_EQU)).AIF_1_1
               MEXIT
.*       AEND
.AIF_1_1   ANOP
&ZSTR_EQU SETB 1
         PUSH  PRINT,NOPRINT
         PRINT OFF,NOPRINT
.********************************************************************
.* EQUBC - DEFINE COMMON EQU SYMBOLS FOR USE IN STRUCTURED MACROS
.********************************************************************
.* 09/27/08 RPI 909 CHANGED FROM CPY TO MAC CALLED BY ZSTRGBL.CPY
.********************************************************************
H        EQU   2
L        EQU   4
E        EQU   8
NH       EQU   13
NL       EQU   11
NE       EQU   7
O        EQU   1
P        EQU   2
M        EQU   4
Z        EQU   8
NP       EQU   13
NM       EQU   11
NZ       EQU   7
NO       EQU   14
EQ       EQU   8
GT       EQU   2
LT       EQU   4
GE       EQU   11
LE       EQU   13
         POP   PRINT,NOPRINT
         MEND
