{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013417000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 8641542, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE912.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 8641542, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 8641542, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE912.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x84\\x07'", "DS1TRBAL": "b'\\x81\\x18'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xb0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\t\\x01\\x00\\x06\\t\\n\\x00\\x03\\x00\\x85'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Y\\x006\\x01\\x14\\x17\\x8f\\x01\\x14\\x17\\x8f\\x18A\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf9@@@'", "ispf": {"version": "04.89", "flags": 0, "createdate": "2014-06-27T00:00:00", "modifydate": "2014-06-27T18:41:36", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-489"}, "text": "REGULAR CBT TAPE - VERSION 489    FILE:  912\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT489.FILE912\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 9 MEMBERS COUNTED; CUMULATIVE SIZE IS 81,936 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   06/27/14    18:41:36    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$PDSLOAD": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0b\\x00'\\x00\\x98\\x01/\\x01\\x14\\x17\\x8f\\x188\\x00\\x1c\\x00\\x0c\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.11", "flags": 0, "createdate": "1998-01-12T00:00:00", "modifydate": "2014-06-27T18:38:27", "lines": 28, "newlines": 12, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBA  JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//*                                                                 *//\n//*     CREATE PARTITIONED DATASETS FROM THE MEMBERS OF FILE 912    *//\n//*                                                                 *//\n//* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *//\n//PDSLOAD PROC IPRE='SBGOLOB.CBT489.FILE912',        (THIS PDS)\n//             MEM=YYY,\n//             OPRE=SBGOLOB,                         (CHANGE)\n//             OVL=WORKE2,                           (CHANGE)\n//             OUNT=SYSALLDA,                        (CHANGE)\n//             TYPEL='HIGGINS',                      (TAPE OF ORIGIN)\n//             P=30,S=150,D=137,\n//             DSP1=NEW,DSP2=CATLG,DSP3=DELETE\n//LOAD EXEC PGM=PDSLOAD\n//STEPLIB  DD DISP=SHR,DSN=SYS2.PDSLOAD.LOAD\n//SYSPRINT DD SYSOUT=*\n//SYSUT1 DD DISP=SHR,DSN=&IPRE(&MEM)\n//SYSUT2 DD UNIT=&OUNT,VOL=SER=&OVL,DSN=&OPRE..&TYPEL..&MEM,\n//       DISP=(&DSP1,&DSP2,&DSP3),SPACE=(TRK,(&P,&S,&D),RLSE)\n//  PEND\n//MACS     EXEC PDSLOAD,MEM=MACS\n//MACSCPY  EXEC PDSLOAD,MEM=MACSCPY\n//SPLAFILE EXEC PDSLOAD,MEM=SPLAFILE\n//SPM      EXEC PDSLOAD,MEM=SPM\n//SPMCPY   EXEC PDSLOAD,MEM=SPMCPY\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#PDSLOAD": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x06\\x00'\\x01\\x12$\\x8f\\x01\\x14\\x17\\x8f\\x186\\x00\\xa3\\x00\\x9d\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.06", "flags": 0, "createdate": "2012-09-04T00:00:00", "modifydate": "2014-06-27T18:36:27", "lines": 163, "newlines": 157, "modlines": 0, "user": "SBGOLOB"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "@FILE912": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04Y\\x00 \\x01\\x14\\x17\\x8f\\x01\\x14\\x17\\x8f\\x18A\\x00(\\x00(\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf9@@@'", "ispf": {"version": "04.89", "flags": 0, "createdate": "2014-06-27T00:00:00", "modifydate": "2014-06-27T18:41:20", "lines": 40, "newlines": 40, "modlines": 0, "user": "CBT-489"}, "text": "//***FILE 912 is from Don Higgins, and contains a set of his        *   FILE 912\n//*           macros, structured and general purpose, which he      *   FILE 912\n//*           updated for his z390 assembler project in 2008        *   FILE 912\n//*           or thereabouts.  Most of these are updates to Don's   *   FILE 912\n//*           old macros which were on the SPLA MVS tape in former  *   FILE 912\n//*           years, and which have been preserved on the CBT       *   FILE 912\n//*           Overflow Tape, File 178.                              *   FILE 912\n//*                                                                 *   FILE 912\n//*           This file, with (almost) each member being in         *   FILE 912\n//*           IEBUPDTE (really PDSLOAD) format, consists of Don's   *   FILE 912\n//*           macros and COPY members to deploy them.  The entire   *   FILE 912\n//*           CBT Overflow Tape File 178 has also been included,    *   FILE 912\n//*           as member SPLAFILE.  Most of the programs have dates  *   FILE 912\n//*           on them, so you can see what is newer or older, if    *   FILE 912\n//*           there is duplication of program or macro names.       *   FILE 912\n//*                                                                 *   FILE 912\n//*           SPM      - Structured Programming macros              *   FILE 912\n//*           SPMCPY   - COPY members associated with SPM           *   FILE 912\n//*           MACS     - Don's other macros                         *   FILE 912\n//*           MACSCPY  - COPY members associated with MACS          *   FILE 912\n//*           SPLAFILE - The entire CBT Overflow Tape File 178      *   FILE 912\n//*                                                                 *   FILE 912\n//*           All macros have been translated from ASCII to EBCDIC. *   FILE 912\n//*                                                                 *   FILE 912\n//*           There is a lot of study material here, especially     *   FILE 912\n//*           in the programs that are in member SPLAFILE.  Most    *   FILE 912\n//*           old Assembler techniques never die.                   *   FILE 912\n//*                                                                 *   FILE 912\n//*           You are supposed to make pds'es out of each member    *   FILE 912\n//*           in this file.  Use the PDSLOAD program from File 093  *   FILE 912\n//*           or use the helpful members copied here.               *   FILE 912\n//*                                                                 *   FILE 912\n//*           email  :  don@higgins.net                             *   FILE 912\n//*           website:  www.don-higgins.net                         *   FILE 912\n//*                                                                 *   FILE 912\n//*           Also refer to:                                        *   FILE 912\n//*                                                                 *   FILE 912\n//*                http://www.z390.org                              *   FILE 912\n//*                http://www.z390.org/zcobol/                      *   FILE 912\n//*                                                                 *   FILE 912\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "MACS": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x01\\x14\\x17\\x8f\\x01\\x14\\x17\\x8f\\x00\\x15&\\xe6&\\xe7\\x00\\x00\\xc8\\xc9\\xc7\\xc7\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2014-06-27T00:00:00", "modifydate": "2014-06-27T00:15:14", "lines": 9958, "newlines": 9959, "modlines": 0, "user": "HIGGINS"}, "text": "./ ADD NAME=$$NOTE01 0100-14178-14178-0012-00001-00001-00000-SBGOLOB\nThe macro SQL_INCLUDE had to be renamed as SQLINCLU\n./ ADD NAME=ABEND    0100-14178-14178-0013-00050-00050-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 10/27/05 RPI56 - correct OIHH to OILH to set dump bit\n.* 04/10/06 RPI 244 - update parm support\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       ABEND &COMP,      COMPLETION CODE NNN OR (REG)                X\n               &DUMP,      DUMP ALLOCATED PROGRAM STORAGE              X\n               &STEP,      IGNORED                                     X\n               &TYPE,      IGNORED                                     X\n               &MF=I,      NOT SUPPORTED                               X\n               &REASON=,   IGNORED                                     X\n               &DUMPOPT=,  IGNORED                                     X\n               &DUMPOPX=   IGNORED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   (N'&SYSLIST GE 1).CHKHIGH\n         MNOTE 12,'ABEND COMPLETION CODE REQUIRED'\n         MEXIT\n.CHKHIGH AIF   (N'&SYSLIST LE 4).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(5)'\n         MEXIT\n.NPOK    ANOP\n.*\n.* ABORT TASK WITH OPTIONAL DUMP\n.*\n         AIF  ('&COMP'(1,1) EQ '(').REGCOMP\n         LA   1,&COMP\n         AGO  .CHKDUMP\n.REGCOMP ANOP\n         ZOPTLR 1,&COMP(1)\n.CHKDUMP ANOP\n         AIF  ('&DUMP' EQ '').SKIPDUMP\n         OILH 1,X'8000'\n.SKIPDUMP ANOP\n         SVC  13 ABEND R1=COMP CODE AND HIGH BIT = DUMP PGM STORAGE\n         MEXIT\n.ERR1    MNOTE 12,'ABEND MF= NOT SUPPORTED'\n         MEND\n./ ADD NAME=ACB      0100-14178-14178-0013-00071-00071-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 07/26/07 INITIAL CODING\n.* 08/19/07 RPI 680 FIX 10 MUTUALLY MISSPELLED\n.* 09/04/07 RPI 691 ADD ACBNAME, ACBDCBN, ACBDCBS, ACBDCBP\n.* 09/24/07 RPI 702 ADD ACBOPENC UNIQUE ACB OPEN COUNT FOR RPL RESET\n.* 11/26/07 RPI 723 MOVE GETOK, GETNF FROM ACB TO RPL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       ACB   &AM=VSAM,      VSAM VS VTAM                             X\n               &BUFSP=0,      MAXIMUM BUFFER SPACE FOR CLUSTER         X\n               &DDNAME=,      DDNAME FOR VSAM CLUSTER DEFINITION TABLE X\n               &DSNAME=0,     DSNAME FOR VSAM CLUSTER DEFINITION TABLE X\n               &EXLST=0,      NOT CURRENTLY SUPPORTED                  X\n               &MACRF=        PROCESSING OPTIONS\n&NPOS    SETA  N'&SYSLIST\n.POSLOOP ANOP\n         AIF   (&NPOS EQ 0).POSEND\n         MNOTE 12,'UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'\n&NPOS    SETA  &NPOS-1\n         AGO   .POSLOOP\n.POSEND  ANOP\n         AIF   ('&AM' NE 'VSAM').ERR1\n         AIF   ('&EXLST' NE 0).ERR2\n&N       DS    0D\n         DC    X'A0'                    ACBID    VSAM VS VTAM\n         DC    X'11'                    ACBSTYPE 11-1F VSAM 20-2F VTAM\n         DC    AL2(ACBEND-IHAACB)       ACBLEN   ACB LENGTH\n         DC    A(0)                     ACBAMBL  ACCESS METHOD PARMS\n         DC    A(0)                     ACBIFR   VTAM INTERFACE ROUTINE\n.*\n.* SET ZGENMAC1-4 USING ZGENMACF SHARED WITH MODCB\n.*\n         GBLC  &ZGENMACF1,&ZGENMACF2,&ZGENMACF3,&ZGENMACF4\n         ZGENMACF MACRF=&MACRF\n         DC    B'&ZGENMACF1' ACBMACF1\n         DC    B'&ZGENMACF2' ACBMACF2\n         DC    B'&ZGENMACF3' ACBMACF3\n         DC    B'&ZGENMACF4' ACBMACF4\n         DC    X'00'                    ACBOFLAGS OPEN FLAGS\n         DC    XL3'00'                  ALIGNMENT\n         AIF   ('&DDNAME' EQ '').DDDEF\n         DC    CL8'&DDNAME'\n         AGO   .DDEND                   ACBDDNAM  DDNAME FOR VCDT CAT\n.DDDEF   ANOP\n         DC    CL8'&N'\n.DDEND   ANOP\n*\n* ACB Z390 EXTENSIONS\n*\n         DC    A(&DSNAME)               ACBDSNAM  DSNAME FOR VCDT.390\n         DC    CL8'&N'                  ACBVCLRN  ACB LABEL DEF VCLR\n         DC    A(0)                     ACBVCLRA  ADDR OF VCLR ENTRY\n         DC    A(0)                     ACBVAIXA  ADDR OF VAIX PTH ENT\n         DC    F'0'                     ACBDCBN   NUMBER OF DCBS OPEN\n         DC    A(0)                     ACBDCBA   ADDR OF DCB TABLE\n         DC    F'0'                     ACBOPENC  UNIQUE ACB OPEN COUNT\n         ACBD\n         DCBD\n         MEXIT\n.ERR1    MNOTE 12,'ACB ONLY AM=VSAM IS SUPPORTED'\n         MEXIT\n.ERR2    MNOTE 12,'ACB EXLST NOT CURRENTLY SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=ACBD     0100-14178-14178-0013-00087-00087-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 07/26/07 INITIAL CODING\n.* 08/29/07 RPI 688 SPLIT MACRF INTO MACR1-4 WITH 1 BYTE EQU'S\n.* 09/04/07 RPI 691 ADD ACBVCLRN, ACBVCLRA, ACBVAIXA, ACBDCBT, ACBDCBA\n.* 09/24/07 RPI 702 ADD ACBOPENC UNIQUE OPEN COUNT FOR RPL RESET\n.* 11/25/07 RPI 723 ADD ACBGETNF PRE-REQ FOR KSDS UPD INSERT VS REWRITE\n.* 11/26/07 RPI 723 MOVE GETOK, GETNF FROM ACB TO RPL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n         ACBD\n.*\n.* IF ACBD ALREADY DEFINED EXIT NOW\n.*\n         GBLB  &Z390_ACBD\n         GBLC  &Z390_ACBD_NAME,&Z390_ACBD_TYPE\n         AIF   (&Z390_ACBD).EXIT\n&Z390_ACBD      SETB 1\n&Z390_ACBD_NAME SETC '&SYSLOC'\n&Z390_ACBD_TYPE SETC '&SYSSTYP'\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'ACBD UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.*       ACCESS CONTROL BLOCK DSECT FOR VSAM\n.*\nIHAACB   DSECT\nACBID    DS    X              X'A0'  = VSAM VS VTAM\nACBSTYPE DS    X              X'11-1F' = VSAM SUBTYPES\nACBLEN   DS    H              LENGTH OF ACB\nACBAMBL  DS    A              AMB LIST POINTER\nACBIFR   DS    A              VTAM INTERFACE ROUTINE (O FOR VSAM)\nACBMACRF DS    F              MACRO ACCESS TYPE FLAGS\n         ORG   *-4\nACBMACR1 DS    X              MACRF FLAGS BYTE 1\nACBMACR1_KEY    EQU X'80' KEY ACCESS TO KS OR RR\nACBMACR1_ADR    EQU X'40' RBA ADDRESS ACCESS TO KS OR ES\nACBMACR1_CNV    EQU X'20' CONTROL INTERAL ACCESS(NOT SUPPORTED)\nACBMACR1_SEQ    EQU X'10' SEQUENTIAL ACCESS TO KS, ES, RR\nACBMACR1_DIR    EQU X'08' DIRECT     ACCESS TO KS, ES, RR\nACBMACR1_IN     EQU X'04' INPUT ONLY FROM KS, ES, RR\nACBMACR1_OUT    EQU X'02' OUTPUT ADD, UPDATE, DELETE KS,ES,RR\nACBMACR1_UBF    EQU X'01' USER BUFFER MGT - USE AREA   (IGNORED)\nACBMACR2 DS    X              MACRF FLAGS BYTE 2\nACBMACR2_SKP    EQU X'80' SKIP SEQUENTIAL ACCESS TO KS, RR\nACBMACR2_NLOGON EQU X'40' NO LOGON REQUIRED - ALWAYS   (IGNORED)\nACBMACR2_RST    EQU X'20' DATA SET REUSABLE - ALWAYS   (IGNORED)\nACBMACR2_DSN    EQU X'10' SUBTASK SHARING BASED ON DSN (IGNORED)\nACBMACR2_AIX    EQU X'08' PROCESS ALT. INDEX VS BASE   (IGNORED)\nACBMACR2_LSR    EQU X'04' LOCAL SHARED RESOURCES       (IGNORED)\nACBMACR2_GSR    EQU X'02' GLOBAL SHARED RESOURCES      (IGNORED)\nACBMACR2_ICI    EQU X'01' IMPROVE CONTROL INT. PROC.   (IGNORED)\nACBMACR3 DS    X              MACRF FLAGS BYTE 3\nACBMACR3_DFR    EQU X'80' DEFERR PUT'S UNTIL WRTBFR    (IGNORED)\nACBMACR3_SIS    EQU X'40' SEQUENTIAL INSERT STRATEGY   (IGNORED)\nACBMACR3_CFX    EQU X'20' FIX CBS AND BUFFERS          (IGNORED)\nACBMACR4 DS    X              MACRF FLAGS BYTE 4\nACBOFLGS DS    X              OPEN FLAGS\nACBOPEN  EQU   X'80'          ACB IS OPEN\nACBGET   EQU   X'40'          GET ALLOWED\nACBPUT   EQU   X'20'          PUT ALLOWED\nACBAIXP  EQU   X'10'          USE PATH AIX KEY VERSUS PRIMARY KEY\nACBAIXU  EQU   X'08'          UPGRADE AIX INDEXES (SEE VPTH OPTION)\n         DS    XL3            ALIGNMENT\nACBDDNAM DS    CL8            DDNAME > ENV VAR > VCDT_NAME[.VCLR/VPTH]\n*\n* ACB Z390 EXTENSIONS\n*\nACBDSNAM DS    A              ADDRESS OF USER SUPPLIED VCDT[.VCLR/VPTH]\nACBVCLRN DS    CL8            VCLR NAME LABEL (CAT.VCLR MAY OVERRIDE)\nACBVCLRA DS    A              ADDRESS VCLR CLUSTER ENTRY IN VCDT CAT\nACBVAIXA DS    A              ADDRESS VAIX FOR ALTERNATE PATH  ACCESS\nACBDCBT  DS    F              TOTAL DCBS FOR VES,VX0, AND VXN UGRADES\nACBDCBA  DS    A              ADDR OF DYN ALLOC DCB TABLE\nACBOPENC DS    F              UNIQUE ACB OPEN COUNT FOR RPL RESET\nACBEND   EQU  *\n          AIF  ('&Z390_ACBD_NAME' EQ '' OR '&Z390_ACBD_TYPE' EQ '').EXIX\n               T\n&Z390_ACBD_NAME &Z390_ACBD_TYPE\n.EXIT    ANOP\n         MEND\n./ ADD NAME=ASMMREL  0100-14178-14178-0013-00060-00060-00000-Z390MAC\n         MACRO                                                          00002\n.*********************************************************************\n.* Copyright 2008 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 07/30/08                                                 *\n.*********************************************************************\n.* 07/31/08 RPI 884 USE OPSYN TO REPLACE BC WITH BR TYPE BRANCH OPS\n.*********************************************************************\n&N       ASMMREL &OPTION\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&OPTION' EQ 'OFF').EXIT\n*\n* RELATIVE BRANCH SUTSTITUTIONS FOR BASE DISPLACEMENT BRANCH\n*\nB        OPSYN BRU\nBC       OPSYN BRC\nBE       OPSYN BRE\nBH       OPSYN BRH\nBL       OPSYN BRL\nBNE      OPSYN BRNE\nBNH      OPSYN BRNH\nBNL      OPSYN BRNL\nBM       OPSYN BRM\nBO       OPSYN BRO\nBP       OPSYN BRP\nBZ       OPSYN BRZ\nBNM      OPSYN BRNM\nBNO      OPSYN BRNO\nBNP      OPSYN BRNP\nBNZ      OPSYN BRNZ\nBCT      OPSYN BRCT\nBXH      OPSYN BRXH\nBXHG     OPSYN BRXHG\nBXLE     OPSYN BRXLE\nBXLEG    OPSYN BRXLG\nBCT      OPSYN BRCT\n*\n* LONG DISPLACEMENT SUBSTITUTION FOR STANDARD BASE DISPLACMENT\n*\nCS       OPSYN CSY\nCLM      OPSYN CLMY\nSTCM     OPSYN STCMY\nCDS      OPSYN CDSY\nTM       OPSYN TMY\nMVI      OPSYN MVIY\nNI       OPSYN NIY\nCLI      OPSYN CLIY\nOI       OPSYN OIY\nXI       OPSYN XIY\nICM      OPSYN ICMY\nSTM      OPSYN STMY\nLM       OPSYN LMY\nLAM      OPSYN LAMY\nSTAM     OPSYN STAMY\n.EXIT    ANOP\n         MEND\n./ ADD NAME=BLDL     0100-14178-14178-0013-00051-00051-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 04/12/06 RPI244 ADD BLDL FOR SUPPORT OF DE= ON LINK, LOAD, XCTL\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/06 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.* BLDL SEARCH SYS390 DIRECTORIES FOR MEMBER NAMES IN LIST AND\n.* SET R15 RETURN CODE:\n.*   0 - ALL MEMBERS FOUND\n.*   4 - ONE OR MORE NOT FOUND (R FIELD SET TO 1 IF FOUND ELSE 0)\n.*   8 - LIST COUNT < 1 OR ENTRY LENGTH < 12\n.*\n.* BLDL LIST HAS HWORD COUNT OF NUMBER OF ENTRIES (1 OR MORE)\n.* BLDL ENTRY HAS FOLLOWING FORMAT (THIS ADDR CAN BE USED IN DE=)\n.*   LL    HWORD COUNT OF BYTES IN ENTRY (12 OR MORE)\n.*   NAME  CL8   EBCDIC NAME\n.*   TTR   XL3   TRACK AND RECORD POINTER (R=0 IF NOT FOUND ELSE > 0)\n.*   K     XL1   CONCATENATION #\n.*   Z     XL1   LOCATION FOUND (0=PRIVATE,1=LPA,2=JPA,3+=PARENT)\n.*   C     XL1   ALIAS IF HIGH BIT ON, LENGTH OF USER DATA\n.*   ???   XLN   USER DATA INCLUDED IN ENTRY LL (SUCH AS PGM LINK DATA)\n.*********************************************************************\n&N       BLDL  &DCB,      IGNORED                                      X\n               &LIST,     BLDL LIST WITH HWORD TOTAL LENGTH            X\n               &MF=I,     NOT SUPPORTED                                X\n               &START=,   INGORED                                      X\n               &STOP=     IGNORED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR2\n         AIF   ('&LIST' EQ '').ERR1\n         AIF   ('&LIST'(1,1) EQ '(').REGLIST\n         LA    1,&LIST\n         AGO   .SVC\n.REGLIST ANOP\n         ZOPTLR 1,&LIST(1)\n.SVC     ANOP\n         SVC   X'12' BLDL R1=BLDL LIST LL(LL,NAME,TTR,KZC,USER),(...)\n         MEXIT\n.ERR1    MNOTE 12,'BLDL MISSING BLDL LIST ADDRESS'\n         MEXIT\n.ERR2    MNOTE 12,'BLDL MF= NOT SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=CALL     0100-14178-14178-0013-00018-00018-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 11/14/08 RPI 953 - move CALL content to ZCALL\n.*********************************************************************\n&N      CALL   &NAME,                                                  X\n               &PARMS,                                                 X\n               &VL,            SET END OF LIST HIGH BIT                X\n               &ID=,           IGNORE                                  X\n               &LINKINST=BALR,                                         X\n               &MF=I           I/L/E FORMS SUPPORTED\n&N       ZCALL &NAME,&PARMS,&VL,ID=&ID,LINKINST=&LINKINST,MF=&MF\n         MEND\n./ ADD NAME=CASE     0100-14178-14178-0013-00051-00051-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.* 11/10/08 RPI 946 fill address table to avoid INIT x'F6' in 390\n.* 11/19/08 RPI 964 allow use of self defining terms for index values\n.********************************************************************\n         CASE  &VALUE\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ 0)\n               MNOTE 8,'CASE - MISSING CASENTRY'\n               MEXIT\n         AEND\n         AIF   (&ZSTR_LVL_TYPE(&ZSTR_LVL) NE 'CASENTRY')\n               MNOTE 8,'CASE - MISSING CASENTRY'\n               MEXIT\n         AEND\n         AIF   (T'&VALUE EQ 'N')\n               :&NVALUE SETA &VALUE\n         AELSEIF ('&VALUE'(1,2) EQ 'C''')\n               :&NVALUE SETA C2A('&VALUE'(3,1))\n         AELSEIF ('&VALUE'(1,2) EQ 'X''')\n               :&NVALUE SETA X2A('&VALUE'(3,K'&VALUE-3))\n         AELSE\n               MNOTE 8,'CASE INVALID INDEX VALUE - &VALUE'\n               MEXIT\n         AEND\n         AIF   (&NVALUE GT &ZSTR_CASE_MAX(&ZSTR_LVL))\n               :&ZSTR_CASE_MAX(&ZSTR_LVL) SETA &NVALUE\n         AEND\n         AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)\n         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n         AEND\n         :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&NVALUE DS 0H\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_L LOCTR\n         AIF   (&NVALUE GT &ZSTR_CASE_LAST_INDEX) rpi 946\n               :&LFILL SETA (&NVALUE-&ZSTR_CASE_LAST_INDEX-1)\n               AIF (&LFILL GT 0)\n         DC    (&LFILL)A(0)\n               AEND\n               :&ZSTR_CASE_LAST_INDEX SETA &NVALUE\n         AELSE\n               MNOTE 8,'CASE VALUE NOT IN ASCENDING SEQUENCE - &VALUE'\n         AEND\n         DC    A(#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&NVALUE)\n&SYSECT  CSECT\n         MEND\n./ ADD NAME=CASENTRY 0100-14178-14178-0013-00032-00032-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.* 11/10/08 RPI 946 fill address table to avoid INIT x'F6' in 390\n.********************************************************************\n         CASENTRY &REG\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)\n               MNOTE 8,'CASENTRY - LEVEL OVERFLOW'\n               MEXIT\n         AEND\n         :&ZSTR_LVL SETA &ZSTR_LVL+1\n         :&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'CASENTRY'\n         :&ZSTR_CASE_CNT SETA &ZSTR_CASE_CNT+1\n         :&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_CASE_CNT\n         :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA 0 RESET BLK CTR\n         :&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 0 RESET OTHRWISE BLK\n         :&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 1 REQUEST END LABEL\n         :&ZSTR_CASE_REG(&ZSTR_LVL) SETC '&REG' SAVE FOR ENDCASE CODE\n         AIF ('&REG' EQ '')\n             MNOTE 8,'CASENTRY - MISSING REGISTER WITH INDEX 0-N'\n         AEND\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_L LOCTR\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T DS 0A START CASENTRY BRANCH TABLE\n&ZSTR_CASE_LAST_INDEX SETA -1 RPI 946 START FILLING TABLE AT INDEX 0\n&SYSECT  CSECT\n         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_G BRANCH TO CASE CODE\n         MEND\n./ ADD NAME=CDED     0100-14178-14178-0013-00025-00025-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2009 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 09/18/09 RPI 1063 DEFINE IHADCB DSECT\n.*********************************************************************\n.* Z390 ZCVT CVTCDE POINTS TO FIRST CDE SINCE THERE IS NO TCB OR RB\n.*********************************************************************\n         CDED\nIHACDE   DSECT\nCDENTRY  DS    0X\nCDCHAIN  DS    A   ADDRESS OF NEXT CDE ENTRY OR 0\n         DS    XL4 RESERVED\nCDNAME   DS    CL8 PROGRAM NAME OF LOADED MODULE\nCDENTPT  DS    A   ADDRESS OF RELOCATED ENTRY POINT\n         DS    XL4 RESERVED\nCDUSE    DS    H   USE COUNT\n         DS    XL6\nCDLOADPT DS    A   LOAD ADDRESS (MAY BE DIFFERENT FROM ENTRY) Z390 EXT\nCDMODLEN DS    A   LOAD MODULE LENGTH                         Z390 EXT\nCDELEN   EQU   *-IHACDE\n         MEND\n./ ADD NAME=CFD      0100-14178-14178-0013-00084-00084-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 07/17/06                                                 *\n.*********************************************************************\n.* 11/10/06 RPI 477 SUPPORT ASCII OPTION, REGISTER INPUT, RC=12 VS ERR\n.* 11/29/06 RPI 507 SUPPORT OUT=REG (GPR OR FPR OUTPUT REG)\n.*                  (NOTE OUT=(REG) INDICATES FIELD ADDR IN GPR)\n.* 12/10/06 RPI 514 ADD DFP SUPPORT FOR DD, ED, AND LD TYPES\n.* 04/19/06 RPI 833 add SETC quotes for HLASM compatibility\n.* 06/14/08 RPI 863 add error messages for extra positional parms\n.*********************************************************************\n.*\n.*  CONVERT FROM EBCDIC DECIMAL FIELD TO BINARY FIELD FORMAT\n.*    TYPE    OUTPUT               INPUT\n.*     21      128 BIT INTEGER     45 BYTE DECIMAL (SIGN+39 DIGITS)\n.*     22      HFP SHORT EH        45 BYTE SCIENTIFIC (N.N( 7)+ENNNN)\n.*     23      DFP SHORT EB        45 BYTE SCIENTIFIC (N.N( 7)+ENNNN)\n.*     24      HFP LONG  DH        45 BYTE SCIENTIFIC (N.N(14)+ENNNN)\n.*     25      BFP LONG  DB        45 BYTE SCIENTIFIC (N.N(14)+ENNNN)\n.*     26      HFP EXT.  LH        45 BYTE SCIENTIFIC (N.N(34)+ENNNN)\n.*     27      BFP EXT.  LB        45 BYTE SCIENTIFIC (N.N(34)+ENNNN)\n.*     28      DFP LONG  DD        45 BYTE SCIENTIFIC (N.N(16)+ENNNN)\n.*     29      DFP SHORT ED        45 BYTE SCIENTIFIC (N.N( 7)+ENNNN)\n.*     30      DFP EXT.  LD        45 BYTE SCIENTIFIC (N.N(34)+ENNNN)\n.*\n.* IF LINKAGE=SVC\n.*   USE CFD Z390 SVC 171 R1=A(TYPE,OUT,IN)\n.* ELSE\n.*   USE CFD MAINFRAME SERVICE ROUTINE MFCONMFS(TYPE,OUT,IN)\n.* ENDIF\n.*\n.* R15 RETURN CODE\n.*    0 OK\n.*   12 INVALID REQUEST\n.*\n.*********************************************************************\n&N       CFD   &TYPE,         SEE 7 CONVERSION TYPES BELOW             X\n               &IN=,          SOURCE FIELD (RX OR REG)                 X\n               &OUT=,         TARGET FIELD (RX OR REG)                 X\n               &LINKAGE=SVC   SVC= Z390 171, MF=CALL TO FPCONMFC\n&NPOS    SETA  N'&SYSLIST\n.POSLOOP ANOP\n         AIF   (&NPOS LE 1).POSEND\n         MNOTE 12,'UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'\n&NPOS    SETA  &NPOS-1\n         AGO   .POSLOOP\n.POSEND  ANOP\n&N       DS    0H\n.SKIPDS  ANOP\n         GBLB  &CFD_EQUS\n         AIF   (&CFD_EQUS).SKIP_CFD_EQUS\n&CFD_EQUS SETB 1\nCFD_INT128 EQU 21 CONVERT TO 128 BIT INT FROM 45 BYTE SN(39)\nCFD_EH   EQU   22 CONVERT TO HFP SHORT EH FROM 45 BYTE SN.N(7)+ENNNN\nCFD_EB   EQU   23 CONVERT TO BFP SHORT EB FROM 45 BYTE SN.N(7)+ENNNN\nCFD_DH   EQU   24 CONVERT TO HFP LONG  DH FROM 45 BYTE SN.N(14)+ENNNN\nCFD_DB   EQU   25 CONVERT TO BFP LONG  DB FROM 45 BYTE SN.N(14)+ENNNN\nCFD_LH   EQU   26 CONVERT TO HFP EXT.  LH FROM 45 BYTE SN.N(34)+ENNNN\nCFD_LB   EQU   27 CONVERT TO BFP EXT.  LB FROM 45 BYTE SN.N(34)+ENNNN\nCFD_DD   EQU   28 CONVERT TO DFP LONG  DD FROM 45 BYTE SN.N(16)+ENNNN\nCFD_ED   EQU   29 CONVERT TO DFP SHORT ED FROM 45 BYTE SN.N( 7)+ENNNN\nCFD_LD   EQU   30 CONVERT TO DFP EXT.  LD FROM 45 BYTE SN.N(34)+ENNNN\n.SKIP_CFD_EQUS ANOP\n         LA    1,=A(&TYPE,&OUT,&IN)\n         AIF   ('&TYPE'(1,1) NE '(').CHKIN\n         ST    &TYPE(1),0(1)\n.CHKIN   ANOP\n         AIF   ('&IN'(1,1) NE '(').CHKOUT\n         ST    &IN(1),8(1)                  RPI 507\n.CHKOUT  ANOP\n         AIF   ('&OUT'(1,1) NE '(').SVC\n         ST    &OUT(1),4(1)                 RPI 507\n.SVC     ANOP\n         AIF   ('&LINKAGE' NE 'SVC').CALL\n         SVC   171 CFD Z390 SVC R1=A(TYPE,OUT,IN)\n         MEXIT\n.CALL    ANOP\n         L     15,=V(FPCONMFC) CFD MAINFRAME CALL ROUTINE\n         BASR  14,15 CALL FPCONMFC,(TYPE,OUT,IN)\n         MEND\n./ ADD NAME=CHECK    0100-14178-14178-0013-00043-00043-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 04/12/06 RPI244 IGNORE DSORG=\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/06 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       CHECK &DECB,                                                  X\n               &DSORG=ALL,                                             X\n               &MF=I        NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   (N'&SYSLIST EQ 1).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.*       CHECK COMPLETION OF SEQUENTIAL READ OR WRITE\n.*\n.*       CHECK ECB COMPLETION CODE IN DECB (NO WAIT REQ'D)\n.*          IF      ECB = X'42' TAKE EODAD EXIT\n.*          ELSE IF ECB = X'41' TAKE SYNAD EXIT\n.*          ELSE    EXIT NORMALLY\n.*\n         AIF   ('&DECB'(1,1) EQ '(').DECBREG\n         LA    1,&DECB\n         AGO   .SVC\n.DECBREG ANOP\n         ZOPTLR 1,&DECB(1)\n.SVC     ANOP\n         SVC   155 CHECK R1=DECB\n         MEXIT\n.ERR1    MNOTE 12,'CHECK MF= NOT SUPPORTED'\n         MEND\n./ ADD NAME=CLOSE    0100-14178-14178-0013-00016-00016-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2008 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/15/08                                                 *\n.*********************************************************************\n.* 04/15/08 RPI 838 CHANGE OPEN, CLOSE, READ, WRITE TO CALL Z VERSION\n.*********************************************************************\n&N       CLOSE &DCBLIST, ((DCB,OPT),(DCB2,OPT2)..) OR (DCB) OR DCB     X\n               &MODE=,   IGNORED AS IT WORKS IN EITHER MODE            X\n               &MF=I,    NOT SUPPORTED                                 X\n               &TYPE=    IGNORED\n&N       ZCLOSE &DCBLIST,MODE=&MODE,MF=&MF,TYPE=&TYPE\n         MEND\n./ ADD NAME=CMDPROC  0100-14178-14178-0013-00109-00109-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 10/29/05                                                 *\n.*********************************************************************\n.* MAINTENANCE\n.* 11/09/05 ADD &ID=0 TASK ID AND &WAIT=500 MILLISECONDS WAIT FOR READ\n.* 11/11/05 FIX INCORRECT LENGHT IN R2\n.* 01/09/06 RPI 163 SKIP LR FOR SAME REGISTER\n.* 01/16/06 RPI 177 REQUIRE LENGTH PARM IF REC IS REGISTER FORM\n.* 02/20/07 RPI 551 ADD SUPPORT FOR IP=(REG)\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 10/29/07 RPI 731 ADD CMDLOG=YES TO COPY ALL CMD STD OUTPUT TO LOG\n.* 04/19/06 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.*\n.* CMDPROC PROVIDES INTERFACE TO SUPPORT UP TO 10 CONCURRENT\n.* WINDOWS PROCESSES:\n.*  START,ID=N STARTS PROCESS WITH OR WITHOUT AUTO LOGGING OF OUTPUT\n.*             IF CMDLOG=NO THEN PARENT TASK MUST ISSUE CMDPROC READ\n.*             TO RETRIEVE CMD OUTPUT FROM MEMORY QUEUE.  IF MEMORY\n.*             QUEUE EXCEEDS OPTION MAXQUE(1000) THEN ERROR IS ISSUED\n.*             AND AUTO LOGGING IS TURNED ON FOR ALL CMDS AND\n.*  STOP,ID=N  STOPS  PROCESS\n.*  WRITE,REC,ID=N SENDS NULL OR DOUBLE QUOTE DELIMITED COMMAND\n.*             TO A PROCESS STANDARD INPUT\n.*  READ,REC,LEN,ID=N,WAIT=S READS NEXT STANDARD OUTPUT LINE FROM\n.*             PROCESS.  READ WILL WAIT UP TO MILLISECOND LIMIT.\n.*  RETURN CODES:\n.*    0 - OPERATIN SUCCESSFUL (RECORD RETURNED FOR READ)\n.*    4 - NO READ RETURNED IN TIME ALLOWED\n.*    8 - NO READ RECORD RETURNED AND PROCESS ENDED\n.*   12 - PROCESS ERROR OCCURRED - SEE ERROR MESSAGE ON LOG\n.*********************************************************************\n&N       CMDPROC &OP,&REC,&LEN,&ID=0,&WAIT=500,&CMDLOG=YES\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   (N'&SYSLIST LE 3).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(5)'\n.NPOK    ANOP\n         AIF   ('&OP' EQ 'START').START\n         AIF   ('&OP' EQ 'STOP').STOP\n         AIF   ('&OP' EQ 'WRITE').WRITE\n         AIF   ('&OP' EQ 'READ').READ\n         MNOTE 12,'CMDPROC UNDEFINED OPERATION - &OP'\n         MEXIT\n.START   ANOP\n         LA    0,0 ASSUME START WITH NO CMDLOG\n         AIF   ('&CMDLOG' NE 'YES').SETID\n         ICM   0,4,=X'01' SET CMDLOG ON TO ROUTE ALL OUTPUT TO LOG\n         AGO   .SETID\n.START_CMDLOG ANOP\n         LA    0,X'0100' TEXT MAXQUE START CMD WITH AUTO LOGGING\n         AGO   .SETID\n.STOP    ANOP\n         LA    0,1  STOP COMMAND PROCESSOR\n         AGO   .SETID\n.WRITE   ANOP\n         LA    0,2  WRITE CMD TO PROCESS\n         AIF   ('&REC'(1,1) EQ '(').WRITE_REC_REG\n         LA    1,&REC EBCDIC NULL TERM OR DQOUTES\n         AGO   .SETID\n.WRITE_REC_REG  ANOP\n         ZOPTLR 1,&REC(1)\n         AGO   .SETID\n.READ    ANOP\n         LA    0,3 READ CMD OUTPUT LINE\n         AIF   ('&REC'(1,1) EQ '(').READ_REC_REG\n         LA    1,&REC\n         AGO   .READ_LEN\n.READ_REC_REG ANOP\n         ZOPTLR 1,&REC(1)\n         AIF   ('&LEN' NE '').READ_LEN\n         MNOTE 12,'CMDPROC READ MISSING LENGTH FOR REGISTER REC FORM'\n         MEXIT\n.READ_LEN ANOP\n         AIF   ('&LEN' EQ '').LREC\n         AIF   ('&LEN'(1,1) EQ '(').READ_LEN_REG\n         LA    2,&LEN\n         AGO   .READ_WAIT\n.LREC    ANOP\n         LA    2,L'&REC\n         AGO   .READ_WAIT\n.READ_LEN_REG  ANOP\n         ZOPTLR 2,&LEN(1)\n.READ_WAIT ANOP\n         AIF   ('&WAIT'(1,1) EQ '(').READ_WAIT_REG\n         LA    3,&WAIT\n         AGO   .SETID\n.READ_WAIT_REG  ANOP\n         ZOPTLR 3,&WAIT(1)\n.SETID   ANOP                                              RPI 551\n         AIF   ('&ID' EQ '0').SVC\n         AIF   ('&ID'(1,1) EQ '(').IDREG\n         ICM   0,2,=AL1(&ID)\n         AGO   .SVC\n.IDREG   ANOP\n         ZOPTLR 15,&ID(1)\n.SKIP15  ANOP\n         SLL  15,8\n         OR   0,15\n.SVC     ANOP\n         SVC   34 R0=(BYTE3=ID,BYTE4=OP),R1=A(REC),R2=LREC,R3=MILS WAIT\n         MEXIT\n         MEND\n./ ADD NAME=CPOOL    0100-14178-14178-0013-00061-00061-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 02/12/09                                                 *\n.*********************************************************************\n.* 02/12/09 RPI 996 ADD INITIAL CPOOL SUPPORT FOR BUILD AND GET\n.*********************************************************************\n&N       CPOOL &TYPE,        BUILD, GET, FREE, DELETE                  X\n               &COND,        U,UNCOND,C,COND                           X\n               &CPID=,       CPOOL ID ADDR OF FULL WORD                X\n               &PCELLCT=,    PRIMARY CELL COUNT                        X\n               &SCELLCT=,    SECONDARY CELL COUNT                      X\n               &CSIZE=,      CELL SIZE                                 X\n               &HDR=         DESCRIPTION\n         AIF   ('&TYPE' EQ 'BUILD').BUILD\n         AIF   ('&TYPE' EQ 'GET').GET\n         MNOTE 8,'CPOOL UNKNOWN TYPE - &TYPE'\n         MEXIT\n.BUILD   ANOP\n         GBLA  &CPOOL_ID\n&CPOOL_ID SETA &CPOOL_ID+1\nCPOOL_&CPOOL_ID_BUILD DS 0H\n         L     R3,CPOOL_&CPOOL_ID._TL  TOTAL LENGTH\n         GETMAIN R,LV=(R3)\n         LR    R2,R1\n         SR    R14,R14\n         SR    R15,R15\n         MVCL  R2,R14                   CLEAR POOL TO ZEROS\n         ST    R1,CPOOL_&CPOOL_ID._SA  STARTING ADDR\n         S     R1,CPOOL_&CPOOL_ID._EL  BACKUP ONE CELL\n         ST    R1,CPOOL_&CPOOL_ID._CA  CURRENT  ADDR\n         A     R1,CPOOL_&CPOOL_ID._EL  FORWARD ONE CELL\n         A     R1,CPOOL_&CPOOL_ID._TL  FORWARD TOTAL LENGTH\n         ST    R1,CPOOL_&CPOOL_ID._EA  ENDING   ADDR\n         LA    R0,CPOOL_&CPOOL_ID._GET GEN RETURN R0=A(GET ENTRY)\n         J     CPOOL_&CPOOL_ID._END    SKIP GET RTN AND DATA\nCPOOL_&CPOOL_ID._GET DS 0H\n         USING *,R15\n         L     R1,CPOOL_&CPOOL_ID._CA PREV CELL ADDR\n         A     R1,CPOOL_&CPOOL_ID._EL ADD  CELL LENGTH\n         ST    R1,CPOOL_&CPOOL_ID._CA CURR CELL ADDR\n         C     R1,CPOOL_&CPOOL_ID._EA ARE WE AT END\n         BLR   R14                     NO RETURN R1=A(CURR CELL)\n         SR    R1,R1                  ELSE\n         BR    R14                     RETURN R1=ZERO\n         DROP  R15\n         DC    C&HDR              CPOOL HEADER TEXT\nCPOOL_&CPOOL_ID._EL DC  A(&CSIZE) CPOOL &CPOOL_ID CELL SIZE\nCPOOL_&CPOOL_ID._TL DC  A((&PCELLCT+&SCELLCT)*&CSIZE) TOT LENGTH\nCPOOL_&CPOOL_ID._SA DS  A  CPOOL &CPOOL_ID STARTING ADDRESS\nCPOOL_&CPOOL_ID._CA DS  A  CPOOL &CPOOL_ID CURRENT  ADDRESS\nCPOOL_&CPOOL_ID._EA DS  A  CPOOL &CPOOL_ID ENDING   ADDRESS\nCPOOL_&CPOOL_ID._END DS 0H\n         MEXIT\n.GET     ANOP\n         L     R15,&CPID    GALL THE GET ROUTINE CREATED BY BUILD\n         BASR  R14,R15      RETURNS CELL ADDR IN R1 ELSE 0\n         MEND\n./ ADD NAME=CTD      0100-14178-14178-0013-00087-00087-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 11/10/06 RPI 477 SUPPORT ASCII OPTION, REGISTER INPUT, RC=12 VS ERR\n.* 11/29/06 RPI 507 SUPPORT IN=REG (GPR OR FPR INPUT VALUE IN REG)\n.*                  (NOTE REG MUST NOT BE GPR 1)\n.*                  (NOTE IN=(REG) INDICATES FIELD ADDR IN GPR)\n.* 12/10/06 RPI 514 ADD DFP DECIMAL FLOATING POINT TYPES\n.* 04/19/06 RPI 833 add SETC quotes for HLASM compatibility\n.* 06/14/08 RPI 863 add error messages for extra positional parms\n.*********************************************************************\n.*\n.*  CONVERT INPUT NUMERIC FIELD TO DISPLAY EBCDIC FORMAT\n.*    TYPE    INPUT                OUTPUT\n.*      1       128 BIT INTEGER      45 BYTE DECIMAL (SIGN+39 DIGITS)\n.*      2       HFP SHORT EH         45 BYTE SCIENTIFIC (N.N(7)+ENNNN)\n.*      3       BFP SHORT EB         45 BYTE SCIENTIFIC (N.N(7)+ENNNN)\n.*      4       HFP LONG  DH         45 BYTE SCIENTIFIC (N.N(14)+ENNNN)\n.*      5       BFP LONG  DB         45 BYTE SCIENTIFIC (N.N(14)+ENNNN)\n.*      6       HFP EXT.  LH         45 BYTE SCIENTIFIC (N.N(34)+ENNNN)\n.*      7       BFP EXT.  LB         45 BYTE SCIENTIFIC (N.N(34)+ENNNN)\n.*      8       DFP LONG  DD         45 BYTE SCIENTIFIC (N.N(34)+ENNNN)\n.*      9       DFP SHORT ED         45 BYTE SCIENTIFIC (N.N(34)+ENNNN)\n.*     10       DFP EXT.  LD         45 BYTE SCIENTIFIC (N.N(34)+ENNNN)\n.*\n.* SVC 170 INPUT\n.*  R1 = A(TYPE,IN,OUT)\n.* SVC 170 OUTPUT\n.*  R15 = 0 OK, 12 INVALID REQUEST\n.*********************************************************************\n&N       CTD   &TYPE,        CONVERTION TYPE - SEE BELOW               X\n               &IN=,         SOURCE FIELD (RX OR REG)                  X\n               &OUT=,        TARGET FIELD (RX OR REG)                  X\n               &LINKAGE=SVC  USE Z390 SVC ELSE USE CALL TO FPCONMFC\n&NPOS    SETA  N'&SYSLIST\n.POSLOOP ANOP\n         AIF   (&NPOS LE 1).POSEND\n         MNOTE 12,'UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'\n&NPOS    SETA  &NPOS-1\n         AGO   .POSLOOP\n.POSEND  ANOP\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         GBLB  &CTD_EQUS\n         AIF   (&CTD_EQUS).SKIP_CTD_EQUS\n&CTD_EQUS SETB 1\nCTD_INT128 EQU 1 CONVERT 128 BIT INT TO 45 BYTE EBCDIC DECIMAL\nCTD_EH   EQU   2 CONVERT HFP SHORT EH TO 45 BYTE EBCDIC N.N( 6)+ENNNN\nCTD_EB   EQU   3 CONVERT BFP SHORT EB TO 45 BYTE EBCDIC N.N( 7)+ENNNN\nCTD_DH   EQU   4 CONVERT HFP LONG  DH TO 45 BYTE EBCDIC N.N(14)+ENNNN\nCTD_DB   EQU   5 CONVERT BFP LONG  DB TO 45 BYTE EBCDIC N.N(15)+ENNNN\nCTD_LH   EQU   6 CONVERT HFP EXT.  LH TO 45 BYTE EBCDIC N.N(34)+ENNNN\nCTD_LB   EQU   7 CONVERT BFP EXT.  LB TO 45 BYTE EBCDIC N.N(34)+ENNNN\nCTD_DD   EQU   8 CONVERT DFP LONG  DD TO 45 BYTE EBCDIC N.N(16)+ENNNN\nCTD_ED   EQU   9 CONVERT DFP SHORT ED TO 45 BYTE EBCDIC N.N( 7)+ENNNN\nCTD_LD   EQU  10 CONVERT DFP EXT.  LD TO 45 BYTE EBCDIC N.N(34)+ENNNN\n.SKIP_CTD_EQUS ANOP\n         AIF   ('&IN'(1,1) EQ '=').LIT\n         LA    1,=A(&TYPE,&IN,&OUT)\n         AGO   .SKPLIT\n.LIT     ANOP\n         LA    1,=A(&TYPE,0,&OUT)\n         LA    0,&IN\n         ST    0,4(1)\n.SKPLIT  ANOP\n         AIF   ('&TYPE'(1,1) NE '(').CHKIN\n         ST    &TYPE(1),0(1)\n.CHKIN   ANOP\n         AIF   ('&IN'(1,1) NE '(').CHKOUT\n         ST    &IN(1),4(1)\n.CHKOUT  ANOP\n         AIF   ('&OUT'(1,1) NE '(').SVC\n         ST    &OUT(1),8(1)\n.SVC     ANOP\n         AIF   ('&LINKAGE' NE 'SVC').CALL\n         SVC   170 CTD R1=A(TYPE,IN,OUT)\n         MEXIT\n.CALL    ANOP\n         L     15,=V(FPCONMFC) CFD MAINFRAME CALL ROUTINE\n         BASR  14,15 CALL FPCONMFC,(TYPE,OUT,IN)\n         MEND\n./ ADD NAME=CVTD     0100-14178-14178-0013-00032-00032-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 03/14/06 RPI 228 - ADD CVTDCB AND ALSO CVTECB, CVTPARM\n.* 03/28/06 RPI 266 - CORRECT ,* VS .* ON ABOVE LINE\n.* 04/10/06 RPI 276 - ADD CVTDATE IPL DATE SET BY IPL(TESTIPL1)\n.* 04/23/06 RPI 286 - MOVE ZCVT FIELDS LEAVING ONLY MVS COMPAT. FIELDS\n.* 04/23/06 RPI 1063  SET CVTCDE TO FIRST CDE ENTRY DEFINED BY CDED\n.*********************************************************************\n         CVTD\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.* EZ390 CVT DSECT - ADDRESS STORED AT LOC X'10' AND X'4C'\n.*\nIHACVT   DSECT\n         ORG    IHACVT+X'38'\nCVTDATE  DS     PL4   IPL DATE SET BY IPL(TESTIPL1)\n         ORG    IHACVT+X'74'\nCVTDCB   DS     X     OS FLAGS X'80' = 31 BITS, X'13' = MVS+\n         ORG    IHACVT+200\nCVTABEND DS     A     SECONDARY CVT  (ZERO FOR NOW)\nCVTUSER  DS     A     USER POINTER\nCVTCDE   DS     A     ADDRESS FIRST CDE FOR Z390 RPI 1063\n         MEND\n./ ADD NAME=DCB      0100-14178-14178-0013-00158-00158-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/16/08                                                 *\n.*********************************************************************\n.* MAINTENANCE\n.* 10/12/05 ADD DCBREC AND DCBDSNAM FIELDS, AND DEFAULT DDNAME\n.* 10/17/05 RPI  26 - correct missing .DDDEF label\n.* 10/17/05 RPI  27 - issue error for any defined key word parms\n.* 11/13/05 RPI  88 - add DCBID EBCDIC/ASCII ID for I/O verification\n.* 11/16/05 RPI  95 - add DDNAME and DSNAME conflict check\n.* 11/17/05 RPI  96 - add RECFM, LRECL, and BLKSIZE consistency check\n.* 04/10/06 RPI 244  support RECFM A/M, allow LRECL=0\n.* 05/05/06 RPI 281  add DCBE support for EODAD and SYNAD\n.* 04/11/07 RPI 587  support 32 bit DCBLRECLF and DCBBLKSIF fields\n.* 04/23/07 RPI 599  add call to DCBD to define referened fields\n.* 08/03/07 RPI 644  zero DCBOFLGS and fix DCBMACRF when 2 operands\n.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY\n.* 06/23/08 RPI 867 JUST ISSUE WARNING FOR EXLST NOT SUPPORTED\n.* 09/11/08 RPI 764 ADD DCBIO TOTAL IO REQUESTS SINCE OPEN USED BY PL\n.* 09/16/08 RPI 91764 ADD DCBIO TOTAL IO REQUESTS SINCE OPEN USED BY PL\n.* 11/10/08 RPI 946 INIT ENTIRE DCB TO ZEROS TO AVOID INIT X'F6' FILLER\n.*********************************************************************\n&N       DCB   &DSORG=PS,    PHYSICAL SEQUENTIAL                       X\n               &BFALN=,      IGNORE                                    X\n               &BFTEK=,      IGNORE                                    X\n               &BLKSIZE=0,   BLOCK SIZE                                X\n               &BUFCB=,      IGNORE                                    X\n               &BUFL=,       IGNORE                                    X\n               &BUFNO=,      IGNORE                                    X\n               &BUFOPT=,     IGNORE                                    X\n               &DCBE=0,      USE DCBE EODAD AND SYNAD IF NZ  RPI 281   X\n               &DDNAME=,     ENVIRONMENT VARIABLE WITH PATH OR FILE    X\n               &DEVD=,       UNSUPPORTED ERROR                         X\n               &DSNAME=0,    DSN AREA WITH PATH OR FILE (NULL OR \"..\") X\n               &EODAD=0,     END OF FILE EXIT                          X\n               &EXLST=,      UNSUPPORTED ERROR                         X\n               &KEYLEN=,     UNSUPPORTED ERROR                         X\n               &LINCT,       IGNORE                                    X\n               &LRECL=0,     RECORD SIZE                               X\n               &MACRF=GM,    ACCESS METHOD (GM,PM,R,W)                 X\n               &OPTCD=,      IGNORE                                    X\n               &RECFM=FB,    RECORD FORMAT (F,FB,V,VB,RT,VT) IGNOR A/M X\n               &RECORD=0,    RECORD AREA                               X\n               &SYNAD=0      ERROR EXIT\n&N       DS    0D             RPI 915\n         DC    XL(DCBLEN)'00' RPI 946\n&NPOS    SETA  N'&SYSLIST\n.POSLOOP ANOP\n         AIF   (&NPOS EQ 0).POSEND\n         MNOTE 12,'UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'\n&NPOS    SETA  &NPOS-1\n         AGO   .POSLOOP\n.POSEND  ANOP\n         AIF   ('&DEVD'   NE '').ERR2\n         AIF   ('&EXLST'  EQ '').NO_EXLST\n         MNOTE 4,'DCB EXLST NOT SUPPORTED YET - IGNORED'  RPI 867\n.NO_EXLST ANOP\n         AIF   ('&KEYLEN' NE '').ERR4\n         AIF   ('&RECFM' EQ 'F').CHKF\n         AIF   ('&RECFM' EQ 'FA').CHKF\n         AIF   ('&RECFM' EQ 'FM').CHKF\n         AIF   ('&RECFM' EQ 'FB').CHKFB\n         AIF   ('&RECFM' EQ 'FBA').CHKFB\n         AIF   ('&RECFM' EQ 'FBM').CHKFB\n         AIF   ('&RECFM' EQ 'V').CHKV\n         AIF   ('&RECFM' EQ 'VA').CHKV\n         AIF   ('&RECFM' EQ 'VM').CHKV\n         AIF   ('&RECFM' EQ 'VB').CHKVB\n         AIF   ('&RECFM' EQ 'VBA').CHKVB\n         AIF   ('&RECFM' EQ 'VBM').CHKVB\n         AIF   ('&RECFM' EQ 'FT').CHKFT\n         AIF   ('&RECFM' EQ 'VT').CHKVT\n         MNOTE 12,'INVALID RECFM - &RECFM'\n         MEXIT\n.CHKF    ANOP\n         AIF   (&LRECL GT 0 AND &BLKSIZE GT 0 AND &LRECL NE &BLKSIZE).EX\n               RR_LRECL\n         AGO   .CHKEND\n.CHKFB   ANOP\n         AIF   (&LRECL GT 0 AND &BLKSIZE GT 0 AND &BLKSIZE/&LRECL*&LRECX\n               L NE &BLKSIZE).ERR_LRECL\n         AGO   .CHKEND\n.CHKV    ANOP\n         AIF   (&LRECL GT 0 AND &BLKSIZE GT 0 AND &BLKSIZE NE &LRECL).EX\n               RR_LRECL\n         AGO   .CHKEND\n.CHKVB   ANOP\n         AIF   (&LRECL GT 0 AND &BLKSIZE GT 0 AND (&BLKSIZE LT (&LRECL+X\n               4))).ERR_LRECL\n         AGO   .CHKEND\n.CHKFT   ANOP\n         AIF   (&LRECL GT 0 AND &BLKSIZE GT 0 AND &BLKSIZE NE &LRECL).EX\n               RR_LRECL\n         AGO   .CHKEND\n.CHKVT   ANOP\n         AIF   (&LRECL EQ 0 AND &BLKSIZE EQ 0).ERR_LRECL\n         AIF   (&LRECL GT 0 AND &BLKSIZE GT 0 AND &BLKSIZE NE &LRECL).EX\n               RR_LRECL\n.CHKEND  ANOP\n         AIF   ('&DDNAME' EQ '' OR '&DSNAME' EQ '0').DSNOK\n         MNOTE 12,'DSNAME AND DDNAME ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.DSNOK   ANOP\n         ORG   &N+DCBID-IHADCB        RPI88\n         DC    C'DCBV1001'            RPI88\n         ORG   &N+DCBDSORG-IHADCB\n         DC    AL1(DCBDSORG_&DSORG) DCBDSORG\n         ORG   &N+DCBEODAD-IHADCB\n         DC    A(&EODAD) DCBEODAD\n         ORG   &N+DCBRECFM-IHADCB\n         DC    AL1(DCBRECFM_&RECFM) DCBRECFM\n         ORG   &N+DCBDDNAM-IHADCB\n         AIF   ('&DDNAME' EQ '').DDDEF\n         DC    CL8'&DDNAME' DCBDDNAM\n         AGO   .DDEND\n.DDDEF   ANOP\n         DC    CL8'&N' DCBDDNAME\n.DDEND   ANOP\n         ORG   &N+DCBOFLGS-IHADCB\n         DC    AL1(0) DCBOFLGS RPI 668 ZERO (SET AT OPEN)\n         ORG   &N+DCBMACRF-IHADCB\n         AIF   (N'&MACRF GT 1).MACRF2 RPI 668\n         DC    AL2(DCBMACRF_&MACRF(1)) DCBMACRF\n         AGO   .MACRF2_END\n.MACRF2  ANOP\n         DC    AL2(DCBMACRF_&MACRF(1)+DCBMACRF_&MACRF(2)) DCBMACRF\n.MACRF2_END ANOP\n         ORG   &N+DCBSYNAD-IHADCB\n         DC    A(&SYNAD) DCBSYNAD DCBSYNAD\n         ORG   &N+DCBBLKSIF-IHADCB    RPI 587\n         DC    F'&BLKSIZE' DCBBLKSIF  RPI 587\n         ORG   &N+DCBLRECLF-IHADCB    RPI 587\n         DC    F'&LRECL' DCBLRECLF    RPI 587\n         ORG   &N+DCBREC-IHADCB\n         DC    A(&RECORD) DCBREC\n         ORG   &N+DCBDSNAM-IHADCB\n         DC    A(&DSNAME) DCBDSNAM\n         ORG   &N+DCBDCBE-IHADCB   RPI 281\n         DC    A(&DCBE) DCBDCBE\n         ORG   &N+DCBIO-IHADCB     RPI 907\n         DC    A(0)     DCBIO      RPI 907 TOTAL IO COUNT SINCE OPEN\n         ORG   &N+DCBLEN\n.EXIT    ANOP\n         DCBD\n         MEXIT\n.ERR_LRECL MNOTE 12,'DCB INVALID LRECL/BLKSIZE'\n         AGO   .EXIT\n.ERR2    MNOTE 12,'DCB DEVD NOT SUPPORTED'\n         AGO   .EXIT\n.ERR3    MNOTE 12,'DCB EXLST NOT SUPPORTED'\n         AGO   .EXIT\n.ERR4    MNOTE 12,'DCB KEYLEN NOT SUPPORTED'\n         AGO   .EXIT\n         MEND\n./ ADD NAME=DCBD     0100-14178-14178-0013-00112-00112-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* MAINTENANCE\n.* 10/12/05 ADD DCBAREA AND DCBDSNAM FIELDS\n.* 10/20/05 RPI  27 - issue error for any undefined operands\n.* 11/13/05 RPI  88 - add DCBID id EBCDIC/ASCII ID for I/O verification\n.* 04/10/06 RPI 244  support RECFM A/M, DSORG=, unsupported DEVD=\n.* 05/05/06 RPI 281  add DCBDCBE field\n.* 03/12/07 RPI 558  add glba z390_dcbd to only define once for DCB/DTF\n.* 03/12/07 RPI 587  add DCBBLKSIF and DCBLRECLF 32 bit len extension\n.* 04/13/07 RPI 591  correct to handle DCBD before any CSECT/DSECT\n.* 05/17/07 RPI 625  correct to handle LOCTR as well as CSECT/DSECT\n.* 09/10/08 RPI 764  add  DCBMACRF_GL and PL locate support labels\n.* 09/10/08 RPI 906  move DCBOFLGS_OPEN to X'10', add DCBOFOPN X'10'\n.* 02/04/09 RPI 989  add DCBEODA (note DCBEODAD is same 31 bit addr)\n.* 02/06/09 RPI 989  add DCBRECF,DCBRECBR,DCBRECFU bits (RECU never on)\n.*********************************************************************\n         DCBD  &DSORG=,     IGNORE                                     X\n               &DEVD=       IGNORE\n.*\n.* IF DCBD ALREADY DEFINED EXIT NOW\n.*\n         GBLB  &Z390_DCBD                       RPI 591\n         GBLC  &Z390_DCBD_NAME,&Z390_DCBD_TYPE  RPI 591\n         AIF   (&Z390_DCBD).EXIT                RPI 591\n&Z390_DCBD      SETB 1                          RPI 591\n&Z390_DCBD_NAME SETC '&SYSLOC'                  RPI 591 RPI 625\n&Z390_DCBD_TYPE SETC '&SYSSTYP'\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.*       DATA CONTROL BLOCK DSECT\n.*\nIHADCB   DSECT\n         ORG   IHADCB+X'00'\nDCBID    DS    CL4            DCB ID RPI88\n         ORG   IHADCB+X'1A'\nDCBDSORG DS    X              DATA SET ORGANIZATION\nDCBDSORG_PS EQU X'40'           PHYSICAL SEQUENTIAL\nDCBDSORG_DA EQU X'20'           DIRECT ACCESS\n         ORG   IHADCB+X'1C'\nDCBIOBAD DS    A              INPUT/OUTPUT BLOCK (TIOT TABLE INDEX)\n         ORG   IHADCB+X'20'\nDCBEODA  DS    0A ADDRESS OF END OF FILE EXIT 31 BIT VS 24 RPI 989\nDCBEODAD DS    A ADDRESS OF END OF FILE EXIT  31 BIT VS 24\n         ORG   IHADCB+X'24'\nDCBRECFM DS    X              RECORD FORMAT\nDCBRECF      EQU X'80'           FIXED  RPI 989\nDCBRECFM_F   EQU X'80'           FIXED\nDCBRECFM_FA  EQU X'80'           FIXED\nDCBRECFM_FM  EQU X'80'           FIXED\nDCBRECFM_V   EQU X'40'           VARIABLE\nDCBRECFM_VA  EQU X'40'           VARIABLE\nDCBRECFM_VM  EQU X'40'           VARIABLE\nDCBRECFM_FB  EQU X'90'           FIXED BLOCKED\nDCBRECBR     EQU X'10'           BLOCKED RECORDS RPI 989\nDCBRECFM_FBA EQU X'90'           FIXED BLOCKED\nDCBRECFM_FBM EQU X'90'           FIXED BLOCKED\nDCBRECFM_VB  EQU X'50'           VARIABLE BLOCKED\nDCBRECFM_VBA EQU X'50'           VARIABLE BLOCKED\nDCBRECFM_VBM EQU X'50'           VARIABLE BLOCKED\nDCBRECFM_FT  EQU X'A0'           FIXED ASCII TEXT\nDCBRECFM_VT  EQU X'60'           VARIABLE ASCII TEXT\nDCBRECU      EQU X'C0'           UNDEFINED RCDS NOT SUPPORTED RPI 989\n         ORG   IHADCB+X'28'\nDCBDDNAM DS    CL8            DDNAME > ENV VAR > FILE NAME\n         ORG   IHADCB+X'30'\nDCBOFLGS DS    X              OPEN FLAGS\nDCBOFLGS_OPEN EQU X'10'          FILE OPEN (X'80' > X'10' RPI 906)_\nDCBOFOPN      EQU X'10'          FILE OPEN RPI 906\nDCBOFLGS_GM   EQU X'40'          READ  ALLOWED\nDCBOFLGS_PM   EQU X'20'          WRITE ALLOWED\nDCBOFLGS_GL   EQU X'40'          READ  ALLOWED\nDCBOFLGS_PL   EQU X'20'          WRITE ALLOWED\nDCBOFLGS_R    EQU X'40'          READ  ALLOWED\nDCBOFLGS_W    EQU X'20'          WRITE ALLOWED\nDCBOFLGS_RW   EQU X'60'          READ AND WRITE ALLOWED\n         ORG   IHADCB+X'32'\nDCBMACRF DS    H              MACRO REFERENCE ACCESS TYPE\nDCBMACRF_GM EQU X'5000'         GET MOVE   QSAM\nDCBMACRF_PM EQU X'0050'         PUT MOVE   QSAM\nDCBMACRF_GL EQU X'4800'         GET LOCATE QSAM    RPI 764\nDCBMACRF_PL EQU X'0048'         PUT LOCATE QSAM    RPI 764\nDCBMACRF_R  EQU X'2000'         READ  RANDOM BDAM\nDCBMACRF_W  EQU X'0020'         WRITE RANDOM BDAM\nDCBMACRF_RW EQU X'2020'         READ/WRITE RANDOM BDAM\n         ORG   IHADCB+X'38'\nDCBSYNAD DS    A              ERROR EXIT\n         ORG   IHADCB+X'3C'\nDCBBLKSIF DS   F              BLOCK SIZE    RPI 587 32 BIT BLOCK SIZE\n         ORG   IHADCB+X'3E'\nDCBBLKSI DS    H              BLOCK SIZE    (ALSO UNBLOCKED MAX RECORD)\n         ORG   IHADCB+X'50'\nDCBLRECLF DS   F              RECORD LENGTH RPI 587 32 BIT RECORD LEN\n         ORG   IHADCB+X'52'\nDCBLRECL DS    H              RECORD LENGTH (MAY BE ZERO FOR UNBLOCKED)\n         ORG   IHADCB+X'58'\nDCBREC   DS    A      X'58'   ADDRESS OF USER SUPPLIED RECORD AREA\nDCBDSNAM DS    A      X'5C'   ADDRESS OF USER SUPPLIED DSN FILE SPEC\nDCBDCBE  DS    A      X'60'   ADDRESS OF DCBE EODAD/SYNAD  RPI 281\nDCBIO    DS    F      X'64'   TOTAL DCB IO OPERATIONS SINCE OPEN\nDCBLEN   EQU   *-IHADCB\n          AIF  ('&Z390_DCBD_NAME' EQ '' OR '&Z390_DCBD_TYPE' EQ '').EXIX\n               T\n&Z390_DCBD_NAME &Z390_DCBD_TYPE                    RPI 591\n.EXIT    MEND\n./ ADD NAME=DCBE     0100-14178-14178-0013-00020-00020-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 05/05/06 RPI 281 ADD DCBE SUPPORT FOR EODAD= AND SYNAD=\n.*********************************************************************\n.*\n.* If the DCBDCBE field in DCB is not zero then the EODAD and SYNAD\n.* exit addresses will be fetched from DCDE block when required.\n.* See IHADCBE for IHADCBE DSECT with DCBEEODA and DCBESYNA fields\n.*********************************************************************\n         MACRO\n&N       DCBE  &EODAD=0,      END OF FILE EXIT ADDRESS                 X\n               &SYNAD=0       I/O ERROR EXIT ADDRESS\n&N       DS    0F\n         DC    A(&EODAD)      DCBEEODA\n         DC    A(&SYNAD)      DCBESYNA\n         MEND\n./ ADD NAME=DECBD    0100-14178-14178-0013-00025-00025-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.*********************************************************************\n         DECBD\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.*  EVENT CONTROL BLOCKS CREATED BY READ/WRITE\n.*\nIHADECB  DSECT\nDECBECB  DS    F\nDECBTYPE DS    XL2\nDECBLEN  DS    XL2\nDECBDCBA DS    A\nDECBAREA DS    A\nDECBL    EQU   *-IHADECB\n         MEND\n./ ADD NAME=DEFINE   0100-14178-14178-0013-00387-00387-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/19/07                                                 *\n.*********************************************************************\n.* 07/31/07 RPI 668 INITIAL CODING\n.* 08/04/07 RPI 668 ADD VCDTTIOT FOR ACCESSING TIOT PATH/FILE\n.* 09/02/07 RPI 681 EXPAND DEFINE TO DEFINE ENTIRE VSAM CATALOG\n.* 09/23/07 RPI 704 ADD CLUSTER SUPPORT FOR CONTROLINTERVALSIZE=\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 10/14/10 RPI 1130 change keyword parms and check for errors:\n.*             REUSE=NO,UNIQUEKEY=YES,UPGRADE=YES,UPDATE=YES\n.*********************************************************************\n.*\n.* DEFINE - define z390 VSAM catalog loadable table entries:\n.*\n.*           1. DEFINE CATALOG,        DEFINE VCDT VSAM CATALOG TABLE\n.*                     NAME=           NAME OF VCDT CATALOG TABLE\n.*           2. DEFINE CLUSTER,        DEFINE BASE CLUSTER (DATA/INDEX)\n.*                     NAME=,          BASE OF BASE CLUSTER\n.*                     INDEX=INDEXED/NONINDEXED/NUMBERED/LINEAR, TYPE\n.*                     RECORDSIZE=(average,max) or fixed length, V/F\n.*                     KEYS=(64,0),    KSDS PRIMARY KEY LENGTH, OFFSET\n.*                     REUSE=YES,      ERASE ALL DATA AT OPEN RPI 1130\n.*                     VESDSN=,        OPTIONAL DSNAME FOR VES FILE\n.*                     VX0DSN=         OPTIONAL DSNAME FOR VX0 INDEX\n.*                     CONTROLINTERVALSIZE= OPTIONAL CI BLOCK PADDING\n.*           3. DEFINE ALTERNATEINDEX, DEFINE KSDS ALTERNATE INDEX KEY\n.*                     NAME=,          NAME OF KSDS ALT IDX\n.*                     RELATE=,        NAME OF BASE CLUSTER\n.*                     KEYS=(64,0),    ALT KEY IN BASE CLUSTER\n.*                     UNIQUEKEY=YES,  DO NOT ALLOW DUPLICATES RPI 1130\n.*                     UPGRADE=YES,    UPDATE AIX FOR BASE CHANGE  1130\n.*                     VXNDSN=         OPTIONAL DSNAME FOR AIX\n.*           4. DEFINE PATH,           DEFINE PATH FOR KSDS ACCESS\n.*                     NAME=,          NAME OF PATH\n.*                     ENTRY=,         NAME OF AIX OR BASE     RPI 1130\n.*                     UPDATE=YES      UPDATE AIX FOR BASE CHANGE  1130\n.*           5. DEFINE END             GENERATE CATALOG TABLE\n.*\n.*   See example in vsam\\demo and vsam\\test directories:\n.*     1.  vsam\\demo\\DEMOCAT.MLC defines demo VSAM files\n.*     2.  vsam\\test\\TESTCAT.MLC defines test VSAM files\n.*\n.*     The DDNAME in ACB must point to the VCDT loadable catalog table\n.*     containing the base cluster or alternate path to be opened.\n.*     The DDNAME may have optional specific name appended to catalog\n.*     name separated by period otherwise the ACB label field name will\n.*     be the name used to search VCDT catalog for matching cluster\n.*     or alternate path name.  For REPRO the OUTFILE spec pointing to\n.*     catalog and entry may also be followed by [DISP=MOD] to add rcds\n.*\n.*  Notes:\n.*    1.  Variable length VSAM records are prefixed by 4 byte length\n.*        which is not included in RECORDSIZE=(average,maximum)\n.*    2.  Specify INDEXED=NONINDEXED for ESDS sequential file.\n.*        Specify INDEXED=NUMBERED   for RRDS relative record file.\n.*        Specify INDEXED=LINEAR     for LDS  CI size required.\n.*        The default is KSDS key sequened file with at primary key.\n.*    3.  KSDS and VRRDS use VX0 index file to obtain XRBA of VES\n.*        records.  For KSDS, the VX0 file has key field after XRBA.\n.*        For VRRDS, 0 XRBA indicates no record written.  All VRRDS\n.*        record XRBA's are stored with +1 added.  For KSDS files\n.*        negative_value XRBA point to inserted record binary tree\n.*        structure records at the end of VX0 index file.\n.*        Note updates for variable records with different lengths and\n.*        new inserted records are added to VRRDS and KSDS data file\n.*        and the corresponding VX0 RBA pointer is updated accordingly.\n.*    5.  Any number of additional alternate key indexes can be\n.*        defined with contain XRBA pointers into VX0 primary index.\n.*        Beware of overhead to update each alternate index file\n.*        every time a record is added, deleted, or updated.\n.*********************************************************************\n         DEFINE &TYPE,         CATALOG,CLUSTER,ALTERNATEINDEX,PATH     X\n               &NAME=,         NAME OF CATALOG, CLUSTER, AIX, OR PATH  X\n               &CONTROLINTERVALSIZE=0, OPTIONAL CI SIZE NOT REQUIRED   X\n               &ENTRY=,        AIX OR BASE CLUSTER NAME FOR PATH       X\n               &INDEX=INDEXED, LINEAR/NONINDEXED/NUMBERED CLUSTER TYPE X\n               &KEYS=(64,0),   (LENGTH,OFFSET) FOR KSDS PRI/ALT KEY    X\n               &RECORDSIZE=,   FIXED LENGTH OR VAR (AVG,MAX) CLUSTER   X\n               &RELATE=,       BASE CLUSTER NAME FOR ALTERNATEINDEX    X\n               &REUSE=NO,      RESET HIGH XRBA AT OPEN FOR AIX/CLUSTER X\n               &UNIQUEKEY=YES, REQUIRE UNIQUE AIX KEYS        RPI 1130 X\n               &UPDATE=YES,    REQUIRE AIX UPDATES FOR THIS PATH  1130 X\n               &UPGRADE=YES,   REQUIRE AIX UPDATE FOR THIS AIX    1130 X\n               &VESDSN=, OPTIONAL CLUSTER DSNAME FOR VES (DEF NAME.VES)X\n               &VX0DSN=, OPTIONAL CLUSTER DSNAME FOR VX0 (DEF NAME.VX0)X\n               &VXNDSN=  OPTIONAL AIX     DSNAME FOR VXN (DEF NAME.VXN)\n         COPY  ZDEFINE.CPY   INCLUDE GLOBALS SHARED WITH ZDEFINE.MAC\n         AIF   (N'&SYSLIST LE 1).CHKTYPE\n&ERROR   SETB  1\n         MNOTE 12,'UNDEFINED PARAMETER - &SYSLIST(2)' RPI 1130\n         MEXIT\n.CHKTYPE ANOP\n         AIF   ('&TYPE' EQ 'CATALOG').DEFINE_CATALOG\n         AIF   ('&TYPE' EQ 'CLUSTER').DEFINE_CLUSTER\n         AIF   ('&TYPE' EQ 'ALTERNATEINDEX').DEFINE_AIX\n         AIF   ('&TYPE' EQ 'AIX').DEFINE_AIX\n         AIF   ('&TYPE' EQ 'PATH').DEFINE_PATH\n         AIF   ('&TYPE' EQ 'END').DEFINE_END\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE INVALID TYPE - &TYPE'\n         MEXIT\n.*\n.* DEFINE CATALOG\n.*\n.DEFINE_CATALOG ANOP\n         AIF   ('&CATALOG' NE '' AND K'&CATALOG LE 8).SET_CATALOG\n.SET_CATALOG ANOP\n&CATALOG SETC '&NAME'\n         MEXIT\n.*\n.* DEFINE CLUSTER\n.*\n.DEFINE_CLUSTER ANOP\n&CLR_TOT SETA  &CLR_TOT+1\n&CLR_CI(&CLR_TOT) SETA &CONTROLINTERVALSIZE\n.*\n.* SET BASE CLUSTER NAME\n.*\n.SET_CLR_NAME ANOP\n         AIF   ('&NAME' NE '' AND K'&NAME LE 8).SET_CLR_NAME2\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE INVALID BASE CLUSTER NAME - &NAME'\n         MEXIT\n.SET_CLR_NAME2 ANOP\n&CLR_NAME(&CLR_TOT) SETC '&NAME'\n.*\n.* SET BASE CLUSTER TYPE\n.*\n.SET_CLR_TYPE ANOP\n         AIF   ('&INDEX' EQ 'INDEXED').SET_CLR_KSDS\n         AIF   ('&INDEX' EQ 'NONINDEXED').SET_CLR_ESDS\n         AIF   ('&INDEX' EQ 'NUMBERED').SET_CLR_RRDS\n         AIF   ('&INDEX' EQ 'LINEAR').SET_CLR_LDS\n&ERROR   SETB  1\n         MNOTE 12,'ZDEFCLR INVALID INDEX TYPE - &INDEX'\n         MEXIT\n.SET_CLR_KSDS ANOP\n&CLR_TYPE(&CLR_TOT) SETC 'KSDS'\n&CLR_KSDS(&CLR_TOT) SETB 1\n         AGO   .SET_CLR_VREC\n.SET_CLR_ESDS ANOP\n&CLR_TYPE(&CLR_TOT) SETC 'ESDS'\n&CLR_ESDS(&CLR_TOT) SETB 1\n         AGO   .SET_CLR_VREC\n.SET_CLR_RRDS ANOP\n&CLR_TYPE(&CLR_TOT) SETC 'RRDS'\n&CLR_RRDS(&CLR_TOT) SETB 1\n         AGO   .SET_CLR_VREC\n.SET_CLR_LDS ANOP\n&CLR_TYPE(&CLR_TOT) SETC 'LDS'\n&CLR_LDS(&CLR_TOT) SETB 1\n         AIF   ('&CONTROLINTERVALSIZE' NE '0').SET_CLR_LDS2\n         MNOTE 12,'DEFINE LINEAR REQUIRES CONTROL INTERVAL SIZE'\n.SET_CLR_LDS2 ANOP\n         AGO   .SET_CLR_VESDSN\n.*\n.* SET BASE CLUSTER VREC FLAG AND LAVG AND LMAX\n.*\n.SET_CLR_VREC ANOP\n         AIF  (N'&RECORDSIZE EQ 2).SET_CLR_VREC2\n&CLR_LMAX(&CLR_TOT) SETA &RECORDSIZE\n         AGO  .SET_CLR_KEY\n.SET_CLR_VREC2 ANOP\n&CLR_VREC(&CLR_TOT) SETB 1\n&CLR_LAVG(&CLR_TOT) SETA &RECORDSIZE(1)\n&CLR_LMAX(&CLR_TOT) SETA &RECORDSIZE(2)\n.*\n.* SET BASE CLUSTER KSDS KEY LENGTH AND OFFSET\n.*\n.SET_CLR_KEY ANOP\n         AIF ('&CLR_TYPE(&CLR_TOT)' NE 'KSDS').SET_CLR_REUSE\n         AIF (N'&KEYS EQ 2).SET_CLR_KEY2\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE INVALID KEYS FOR KSDS - &KEYS'\n         MEXIT\n.SET_CLR_KEY2 ANOP\n&CLR_KLEN(&CLR_TOT) SETA &KEYS(1)\n&CLR_KOFF(&CLR_TOT) SETA &KEYS(2)\n         AIF   (&CLR_KOFF(&CLR_TOT)+&CLR_KLEN(&CLR_TOT) LE &CLR_LMAX(&CX\n               LR_TOT)).SET_CLR_KEY3\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE KEY EXTENDS BEYOND RECORDSIZE'\n         MEXIT\n.SET_CLR_KEY3 ANOP\n.*\n.* SET BASE CLUSTER REUSE\n.*\n.SET_CLR_REUSE ANOP\n         AIF   ('&REUSE' EQ 'NO').SET_CLR_VESDSN\n         AIF   ('&REUSE' EQ 'YES').SET_REUSE\n         MNOTE 12,'REUSE MUST BE YES/NO - &REUSE'\n         MEXIT\n.SET_REUSE ANOP\n&CLR_REUSE(&CLR_TOT) SETB 1\n.*\n.* SET BASE CLUSTER VESDSN\n.*\n.SET_CLR_VESDSN ANOP\n&CLR_VES(&CLR_TOT) SETC '&NAME..VES'\n         AIF   ('&VESDSN' EQ '').SET_CLR_VX0DSN\n&CLR_VES(&CLR_TOT) SETC '&VSEDSN'\n.*\n.* SET BASE CLUSTER VX0DSN\n.*\n.SET_CLR_VX0DSN ANOP\n&CLR_VX0(&CLR_TOT) SETC '&NAME..VX0'\n         AIF   ('&VESDSN' EQ '').SET_CLR_VX0DSN2\n&CLR_VX0(&CLR_TOT) SETC '&VSEDSN'\n.SET_CLR_VX0DSN2 ANOP\n         MEXIT\n.*\n.* DEFINE AIX\n.*\n.DEFINE_AIX ANOP\n&AIX_TOT SETA  &AIX_TOT+1\n.*\n.* SET AIX NAME\n.*\n.SET_AIX_NAME ANOP\n         AIF   ('&NAME' NE '' AND K'&NAME LE 8).SET_AIX_NAME2\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE INVALID AIX NAME - &NAME'\n         MEXIT\n.SET_AIX_NAME2 ANOP\n&AIX_NAME(&AIX_TOT) SETC '&NAME'\n.*\n.* SET AIX KEY LENGTH AND OFFSET\n.*\n.SET_AIX_KEY ANOP\n         AIF (N'&KEYS EQ 2).SET_AIX_KEY2\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE INVALID AIX KEYS LENGTH AND OFFSET - &KEYS'\n         MEXIT\n.SET_AIX_KEY2 ANOP\n&AIX_KLEN(&AIX_TOT) SETA &KEYS(1)\n&AIX_KOFF(&AIX_TOT) SETA &KEYS(2)\n.*\n.* SET AIX RELATE\n.*\n.SET_AIX_RELATE ANOP\n         AIF   ('&RELATE' NE '').SET_AIX_RELATE2\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE AIX MISSING RELATE NAME OF BASE CLUSTER'\n.SET_AIX_RELATE2 ANOP\n&AIX_RELATE(&AIX_TOT) SETC '&RELATE'\n.*\n.* SET BASE CLUSTER REUSE\n.*\n.SET_AIX_REUSE ANOP\n         AIF   ('&REUSE' EQ 'NOREUSE').SET_AIX_UNIQUEKEY\n&AIX_REUSE(&AIX_TOT) SETB 1\n.*\n.* SET AIX UNIQUEKEY\n.*\n.SET_AIX_UNIQUEKEY ANOP\n         AIF   ('&UNIQUEKEY' EQ 'NO').SET_AIX_UPGRADE RPI 1130\n         AIF   ('&UNIQUEKEY' EQ 'YES').SET_UNIQUEKEY\n         MNOTE 12,'UNIQUEKEY MUST BE YES/NO - &UNIQUEKEY'\n         MEXIT\n.SET_UNIQUEKEY ANOP\n&AIX_UNIQUEKEY(&AIX_TOT) SETB 1\n.*\n.* SET AIX UPGRADE\n.*\n.SET_AIX_UPGRADE ANOP\n         AIF   ('&UPGRADE' EQ 'NO').SET_AIX_VXNDSN\n         AIF   ('&UPGRADE' EQ 'YES').SET_UPGRADE\n         MNOTE 12,'UPGRADE MUST BE YES/NO - &UPGRADE'\n         MEXIT\n.SET_UPGRADE ANOP\n&AIX_UPGRADE(&AIX_TOT) SETB 1\n.*\n.* SET AIX VXNDSN\n.*\n.SET_AIX_VXNDSN ANOP\n&AIX_VXN(&AIX_TOT) SETC '&NAME..VXN'\n         AIF   ('&VXNDSN' EQ '').SET_AIX_VXNDSN2\n&AIX_VXN(&AIX_TOT) SETC '&VXNDSN'\n.SET_AIX_VXNDSN2 ANOP\n         MEXIT\n.*\n.* DEFINE PATH\n.*\n.DEFINE_PATH ANOP\n&PTH_TOT SETA  &PTH_TOT+1\n.*\n.* SET PATH NAME\n.*\n.SET_PTH_NAME ANOP\n         AIF   ('&NAME' NE '' AND K'&NAME LE 8).SET_PTH_NAME2\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE INVALID PATH NAME - &NAME'\n         MEXIT\n.SET_PTH_NAME2 ANOP\n&PTH_NAME(&PTH_TOT) SETC '&NAME'\n.*\n.* SET PATH ENTRY\n.*\n.SET_PTH_ENTRY ANOP\n         AIF   ('&ENTRY' NE '').SET_PTH_ENTRY2\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE PATH MISSING ENTRY NAME OF AIX OR BASE'\n         MEXIT\n.SET_PTH_ENTRY2 ANOP\n&PTH_ENTRY(&PTH_TOT) SETC '&ENTRY'\n.*\n.* SET PATH UPDATE\n.*\n.SET_PTH_UPDATE ANOP\n         AIF   ('&UPDATE' EQ 'NO').SET_PTH_UPDATE2\n         AIF   ('&UPDATE' EQ 'YES').SET_UPDATE\n         MNOTE 12,'UPDATE MUST BE YES/NO - &UPDATE'\n         MEXIT\n.SET_UPDATE ANOP\n&PTH_UPDATE(&PTH_TOT) SETB 1\n.SET_PTH_UPDATE2 ANOP\n         MEXIT\n.*\n.* DEFINE END\n.*\n.DEFINE_END ANOP\n.*\n.* VERIFY VAIX ENTRIES HAVE MATCHING VCLR RELATE\n.*\n&AIX_CUR SETA  0\n.CHK_AIX ANOP\n&AIX_CUR SETA  &AIX_CUR+1\n         AIF   (&AIX_CUR GT &AIX_TOT).CHK_AIX_END\n&CLR_CUR SETA  0\n.FIND_CLR ANOP\n&CLR_CUR SETA  &CLR_CUR+1\n         AIF   (&CLR_CUR GT &CLR_TOT).AIX_ERR\n         AIF   ('&AIX_RELATE(&AIX_CUR)' NE '&CLR_NAME(&CLR_CUR)').FIND_X\n               CLR\n         AIF   (&AIX_KOFF(&AIX_CUR)+&AIX_KLEN(&AIX_CUR) LE &CLR_LMAX(&CX\n               LR_CUR)).CHK_AIX\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE AIX &AIX_NAME(&AIX_CUR) KEY BEYOND CLUSTER &CX\n               LR_NAME(&CLR_CUR) RECORD'\n         AGO   .CHK_AIX\n.AIX_ERR ANOP\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE AIX RELATE=&AIX_RELATE(&AIX_CUR) NOT FOUND'\n         AGO   .CHK_AIX\n.CHK_AIX_END ANOP\n.*\n.* VERIFY VPTH ENTRIES HAVE MATCHING VCLR OR VAIX ENTRY\n.* AND SET VPTH_AIXP ACCORDINGLY\n.*\n&PTH_CUR SETA  0\n.CHK_PTH ANOP\n&PTH_CUR SETA  &PTH_CUR+1\n         AIF   (&PTH_CUR GT &PTH_TOT).CHK_PTH_END\n&AIX_CUR SETA  0\n.FIND_AIX ANOP\n&AIX_CUR SETA  &AIX_CUR+1\n         AIF   (&AIX_CUR GT &AIX_TOT).CHK_CLR\n         AIF   ('&PTH_ENTRY(&PTH_CUR)' EQ '&AIX_NAME(&AIX_CUR)').SET_AIX\n               XP\n         AGO   .FIND_AIX\n.SET_AIXP ANOP\n&PTH_AIXP(&PTH_CUR) SETB 1\n         AGO   .CHK_PTH\n.CHK_CLR ANOP\n&CLR_CUR SETA  0\n.FIND_CLR2 ANOP\n&CLR_CUR SETA  &CLR_CUR+1\n         AIF   (&CLR_CUR GT &CLR_TOT).PTH_ERR\n         AIF   ('&PTH_ENTRY(&PTH_CUR)' EQ '&CLR_NAME(&CLR_CUR)').CHK_PTX\n               H\n         AGO   .FIND_CLR2\n.PTH_ERR ANOP\n&ERROR   SETB  1\n         MNOTE 12,'DEFINE PTH ENTER=&PTH_ENTRY(&PTH_CUR) NOT FOUND'\n         AGO   .CHK_PTH\n.CHK_PTH_END ANOP\n         AIF   (&ERROR).EXIT\n         ZDEFINE  , GENERATE VCDT CATALOG LOADABLE TABLE\n         VCDTD    , GENERATE VCDT DSECTS\n         DCBD     , GENERATE DCB  DSECT\n.EXIT    ANOP\n         MEXIT\n./ ADD NAME=DELETE   0100-14178-14178-0013-00020-00020-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 11/17/08 RPI 953 move code to ZDELETE to share with maclibs\n.*********************************************************************\n&N       DELETE &DE=,      BLDL ENTRY                                  X\n               &EP=,      PROGRAM NAME                                 X\n               &EPLOC=,   ADDR OF PROGRAM NAME                         X\n               &DDNAME=,  1-9 CHARACTER DDNAME                         X\n               &DSNAME=,  RX ADDR OF DSN WITH PATH                     X\n               &MF=I,     NOT SUPPORTED                                X\n               &RELATED=  IGNORED\n&N      ZDELETE DE=&DE,EP=&EP,EPLOC=&EPLOC,DDNAME=&DDNAME,             X\n               DSNAME=&DSNAME,MF=&MF,RELATED=&RELATED\n         MEND\n./ ADD NAME=DEQ      0100-14178-14178-0013-00025-00025-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 04/24/06 RPI 291 - ADD AND IGNORE FOR TESTING\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY\n.*********************************************************************\n        MACRO\n&N      DEQ    &LIST,  (QNAMEA,RNAMEA,LEN,STEP/SYSTEM/SYSTEMS),,,      X\n               &MF=I,        L/E NOT SUPPORTED                         X\n               &RET=NONE,    CHNG,HAVE,TEST,USE,NONE (CONTROL ALL)     X\n               &RNL=YES,     GLOBAL RESOURCE SERIALIZATION             X\n               &RELATED=,    IGNORED                                   X\n               &LINKAGE=SVC, SVC INTERFACE                             X\n               &UCB=         IGNORED\n        AIF    ('&N' EQ '').SKIPDS\n&N      DS     0H\n.SKIPDS ANOP\n        AIF    ('&MF' EQ 'I').EXIT\n        MNOTE  12,'DEQ MF= NOT SUPPORTED'\n.EXIT   ANOP\n        MEND\n./ ADD NAME=DO       0100-14178-14178-0013-00083-00083-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     03/27/74.\n.*             REMARKS.  MACRO TO ALLOW STRUCTURED PROGRAMMING USING\n.*                       IF, THEN, ELSE, AND DO UP TO TEN LEVELS DEEP\n.*                       AND NO BRANCH INSTRUCTIONS. SEE IF MACRO.\n.********************************************************************\n.* 05/14/06 DSH Z390 RPI 316 UPDATED FOR COMPAT.\n.* 07/21/06 DSH Z390 RPI 379 USE IF TO SUPPORT COMPOUND WHILE/UNTIL\n.* 04/11/07 DSH Z390 RPI 589 USE ZSTRGBL AND EXPAND LEVELS TO 100\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         DO    &END,&WHILE=,&UNTIL=\n         COPY  ZSTRGBL\n         AIF   ('&END' NE '')\n               AIF ('&END' EQ 'END')\n                  ACALL DO_END\n                  MEXIT\n               AELSE\n                  MNOTE 8,'DO - UNSUPPORTED OPTION'\n                  MEXIT\n               AEND\n         AEND\n         AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)\n               MNOTE 8,'DO - LEVEL OVERFLOW'\n               MEXIT\n         AEND\n         :&ZSTR_LVL SETA &ZSTR_LVL+1\n         :&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'DO'\n         :&ZSTR_DO_CNT SETA &ZSTR_DO_CNT+1\n         :&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_DO_CNT\n         AIF   ('&WHILE' NE '')\n               ACALL DO_WHILE\n         AELSEIF ('&UNTIL' NE '')\n               ACALL DO_UNTIL\n         AELSE\n               MNOTE 8,'DO - MISSING WHILE=, UNTIL=, OR END'\n         AEND\n         MEXIT\n.*\n.* DO END\n.*\n         AENTRY DO_END\n         :&PARM    SETC  '&SYSLIST(2)'\n         AIF   (&ZSTR_LVL EQ 0)\n               MNOTE 8,'DO - END OUT OF SEQUENCE'\n               MEXIT\n         AEND\n         AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'DO')\n               MNOTE 8,'DO END - MISSING DO'\n               MEXIT\n         AEND\n         B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n         :&ZSTR_LVL SETA &ZSTR_LVL-1\n         AEND\n.*\n.* DO WHILE=(CLC,A,EQ,B)\n.*\n         AENTRY DO_WHILE\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T DS 0H\n         :&IFPARM  SETC  '&WHILE'(2,K'&WHILE-2)\n         IF &IFPARM\n               B   #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL-1)_1\n         ENDIF\n         B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_1 DS 0H\n         AEND\n.*\n.* DO UNTIL=(CLC,A,EQ,B)\n.*\n         AENTRY DO_UNTIL\n         B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_1\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T DS 0H\n         :&IFPARM  SETC  '&UNTIL'(2,K'&UNTIL-2)\n         IF    &IFPARM\n               B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL-1)_E\n         ENDIF\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_1 DS 0H\n         AEND\n         MEND\n./ ADD NAME=ELSE     0100-14178-14178-0013-00055-00055-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     03/27/74.\n.*             REMARKS.  MACRO TO ALLOW STRUCTURED PROGRAMMING USING\n.*                       IF, THEN, ELSE, AND DO UP TO TEN LEVELS DEEP\n.*                       AND NO BRANCH INSTRUCTIONS. SEE IF MACRO.\n.********************************************************************\n.* 05/23/76 DSH - SUPPORT ELSEIF\n.* 05/15/06 DSH - Z390 RPI 315 UPDATE FOR COMPAT.\n.* 04/11/07 DSH - RPI 589 USE ZSTRGBL COPY AND EXPAND LEVELS TO 100\n.* 09/23/08 DSH - RPI 909 USE ZSTRMAC SPE'S\n.********************************************************************\n         ELSE  &OPT\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ 0)\n               MNOTE 8,'ELSE - MISSING IF'\n               MEXIT\n         AEND\n         AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')\n               MNOTE 8,'ELSE - MISSING IF'\n               MEXIT\n         AEND\n         AIF   (T'&OPT EQ 'O' OR '&OPT' EQ 'BEGIN')\n               ACALL ELSE_BEGIN\n         AELSEIF ('&OPT' EQ 'END')\n               ACALL ELSE_END\n         AEND\n         MEXIT\n.*\n.* ELSE OR ELSE BEGIN - START ELSE BLOCK\n.*\n        AENTRY ELSE_BEGIN\n        AIF   (&ZSTR_LVL_ELSE(&ZSTR_LVL))\n              MNOTE 8,'ELSE - DUPLICATE ELSE'\n              MEXIT\n        AEND\n        :&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 1  ELSE\n        :&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 1  REQUEST END LABEL\n        B      #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n         AEND\n.*\n.* ELSE END (SAVE AS ENDIF)\n.*\n         AENTRY ELSE_END\n         AIF   (NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n         AEND\n         AIF   (&ZSTR_LVL_TEND(&ZSTR_LVL))\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n         AEND\n         :&ZSTR_LVL SETA &ZSTR_LVL-1\n         AEND\n         MEND\n./ ADD NAME=ELSEIF   0100-14178-14178-0013-00085-00085-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     05/23/76.\n.*             REMARKS.  CONTROL STRUCTURE FOR CONDITIONAL EXECUTION.\n.********************************************************************\n.* 05/12/06 Z390 RPI 316 UPDATE FOR COMPAT.\n.* 04/11/07 Z390 RPI 589 USE ZSTRGBL AND EXPAND LEVELS TO 100\n.* 11/02/07 Z390 RPI 734 CORRECT BAD CONDITION CODE FOR OR CONNECTOR\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 09/23/08 RPI 909 update using ZSTRMAC SPE's\n.********************************************************************\n         ELSEIF\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ 0)\n               MNOTE 8,'ELSEIF - MISSING IF'\n               MEXIT\n         AEND\n         AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')\n               MNOTE 8,'ELSEIF - MISSING IF'\n               MEXIT\n         AEND\n         :&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 1  REQUEST END LABEL\n         B     #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n         :&BLK_CNT SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1 THIS BLK LAB FOR OR\n         :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+2\n         :&AND_CONN SETB 1             ASSUME AND CONNECTOR IF ANY\n         :&N   SETA N'&SYSLIST         TOTAL TEST AND CONNECTOR PARMS\n         :&S   SETA 1                  OPERAND INDEX\n         AWHILE (&S LE &N)\n               :&SN SETA  N'&SYSLIST(&S)        TEST OPERANDS\n               :&OP SETC  '&SYSLIST(&S,1)'      TEST OPCODE\n               AIF (&SN EQ 1)  COMPARE NOT IN QUOTES\n                   :&BC SETC  '&SYSLIST(&S+2)'  TEST COMPARE MASK\n                   AIF (&N LT &S+3)\n                       MNOTE 8,'IF - TEST SUBLIST LENGTH INVALID - &SYSX\n               LIST(&S)'\n                       MEXIT\n                   AEND\n                   :&OPR SETC '&SYSLIST(&S+1),&SYSLIST(&S+3)'\n                   :&S       SETA  &S+4-1     POS TO TEST END-1\n               AELSEIF (&SN EQ 4)  OPERANDS IN QUOTES WITH CONNECTORS\n                   :&BC      SETC  '&SYSLIST(&S,3)'\n                   :&OPR     SETC  '&SYSLIST(&S,2),&SYSLIST(&S,4)'\n               AEND\n               AIF   (&AND_CONN)    IF AND EXIT IF COMPARE FAILS\n         &OP   &OPR\n         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX\n               TR_LVL)\n               AELSE                IF OR  EXEC BLOCK IF TEST OK\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n                    :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTX\n               R_LVL)+1\n         &OP   &OPR\n         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX\n               TR_LVL)\n               AEND\n               :&S SETA  &S+1       ADVANCE TO CONNECTOR OR END\n               AIF (&S LE &N)\n                   :&SN SETA N'&SYSLIST(&S)\n                   AIF (&SN NE 1)\n                       MNOTE 8,'IF - INVALID CONNECTOR'\n                       MEXIT\n                   AEND\n                   AIF   ('&SYSLIST(&S)' EQ 'OR')\n         B     #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT\n                       :&AND_CONN SETB 0\n                   AELSEIF  ('&SYSLIST(&S)' EQ 'AND')\n                       :&AND_CONN SETB 1\n                   AELSE\n                       MNOTE 8,'IF - INVALID CONNECTOR'\n                       MEXIT\n                   AEND\n                   :&S SETA &S+1\n                   AIF (&S GT &N)\n                       MNOTE 8,'IF - MISSING TEST AFTER CONNECTOR'\n                       MEXIT\n                   AEND\n               AEND\n         AEND\n         AIF   (NOT &AND_CONN)\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT DS 0H\n         AEND\n         MEND\n./ ADD NAME=ENDCASE  0100-14178-14178-0013-00035-00035-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         ENDCASE\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ 0)\n               MNOTE 8,'ENDCASE - MISSING CASENTRY'\n               MEXIT\n         AEND\n         AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'CASENTRY')\n               MNOTE 8,'ENDCASE - MISSING CASENTRY'\n               MEXIT\n         AEND\n         AIF   ('&ZSTR_LVL_BCNT(&ZSTR_LVL)' EQ 0)\n               MNOTE 8,'ENDCASE - MISSING CASE(S)'\n               MEXIT\n         AEND\n         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_A DC A(#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_X\n               T)\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_G DS 0H\n         CLFI  &ZSTR_CASE_REG(&ZSTR_LVL),&ZSTR_CASE_MAX(&ZSTR_LVL)\n         BH    #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n         SLA   &ZSTR_CASE_REG(&ZSTR_LVL),2\n         A     &ZSTR_CASE_REG(&ZSTR_LVL),#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVLX\n               )_A\n         LT    &ZSTR_CASE_REG(&ZSTR_LVL),0(&ZSTR_CASE_REG(&ZSTR_LVL))\n         BNZR  &ZSTR_CASE_REG(&ZSTR_LVL)\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n         MEND\n./ ADD NAME=ENDDO    0100-14178-14178-0013-00007-00007-00000-Z390MAC\n         MACRO\n&N       ENDDO\n.********************************************************************\n.* 05/14/06 DSH Z390 RPI 316 UPDATED FOR COMPAT.\n.********************************************************************\n&N       DO    END\n         MEND\n./ ADD NAME=ENDIF    0100-14178-14178-0013-00026-00026-00000-Z390MAC\n         MACRO\n.********************************************************************\n.* ENDIF - END OF ALTERATE SELECTION\n.********************************************************************\n.* 05/14/06 DSH Z390 RPI 316 UPDATE FOR COMPAT.\n.* 04/11/07 DSH Z390 RPI 589 USE ZSTRGBL COPY AND EXPAND LEVELS 100\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n&N       ENDIF\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ 0)\n               MNOTE 8,'ENDIF - MISSING IF'\n               MEXIT\n         AEND\n         AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')\n               MNOTE 8,'ENDIF - MISSING IF'\n               MEXIT\n         AEND\n         AIF   (NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n         AEND\n         AIF   (&ZSTR_LVL_TEND(&ZSTR_LVL))\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n         AEND\n         :&ZSTR_LVL SETA &ZSTR_LVL-1\n         MEND\n./ ADD NAME=ENDSEL   0100-14178-14178-0013-00032-00032-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPMS FOR SELECT,WHEN,OTHRWISE,ENDSEL\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.* 02/19/12 RPI 1192 remove dup )) from AIF\n.********************************************************************\n         ENDSEL\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ 0)\n               MNOTE 8,'ENDSEL - MISSING SELECT'\n               MEXIT\n         AEND\n         AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')\n               MNOTE 8,'ENDSEL - MISSING SELECT'\n               MEXIT\n         AEND\n         AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)\n               MNOTE 8,'ENDSEL - MISSING WHEN'\n               MEXIT\n         AEND\n         AIF (NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))\n#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n         AEND\n         AIF   (&ZSTR_LVL_ELSE(&ZSTR_LVL)                              X\n                OR &ZSTR_LVL_BCNT(&ZSTR_LVL) GT 1) RPI 1192\n#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n         AEND\n         :&ZSTR_LVL SETA &ZSTR_LVL-1\n         MEND\n./ ADD NAME=ENQ      0100-14178-14178-0013-00024-00024-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 04/24/06 RPI 291 - ADD AND IGNORE FOR TESTING\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n        MACRO\n&N      ENQ    &LIST,  (QNAMEA,RNAMEA,E/S,LEN,STEP/SYSTEM/SYSTEMS),,,  X\n               &MF=I,        L/E NOT SUPPORTED YET                     X\n               &RET=NONE,    CHNG,HAVE,TEST,USE,NONE (CONTROL ALL)     X\n               &RNL=YES,     GLOBAL RESOURCE SERIALIZATION             X\n               &RELATED=,    IGNORED                                   X\n               &LINKAGE=SVC  SVC INTERFACE\n        AIF    ('&N' EQ '').SKIPDS\n&N      DS     0H\n.SKIPDS ANOP\n        AIF    ('&MF' EQ 'I').EXIT\n        MNOTE  12,'ENQ MF= NOT SUPPORTED'\n.EXIT   ANOP\n        MEND\n./ ADD NAME=EQUREGS  0100-14178-14178-0013-00048-00048-00000-Z390MAC\n        MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.*  EQUREGS ,        - default to R0 - R15 symbols for 0-15 general\n.*                     purpose register references\n.*  EQUREGS REGS=FPR - generate F0 - F15 symbols for 0-15 floating\n.*                     point registers\n.*  EQUREGS TYPE=HEX - generate R0 - RF symbols for 0-15 general\n.*                     purpose registers\n.*  EQUREGS REGS=FPC,TYPE=HEX - generate F0 - FF symbols for FPR's\n.*********************************************************************\n.* 10/20/05 RPI27  - issue error for any undefined operands\n.* 12/07/05 RPI119 - add FPR and hex options\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n        EQUREGS &REGS=GPR,&TYPE=DEC\n        GBLB  &EQUREGS_GPR_DEC(16),&EQUREGS_GPR_HEX(16)\n        GBLB  &EQUREGS_FPR_DEC(16),&EQUREGS_FPR_HEX(16)\n        AIF    ('&REGS' EQ 'GPR')\n               :&PFX SETC 'R'\n        AELSE\n               :&PFX SETC 'F'\n        AEND\n        LCLC   &HEX(16)\n&HEX(1) SETC   '0','1','2','3','4','5','6','7',                        X\n               '8','9','A','B','C','D','E','F'\n        AIF   ('&SYSLIST(1)' NE '')\n              MNOTE 12,'EQUREGS UNSUPPORTED OPERANDS - &SYSLIST(1)'\n              MEXIT\n        AEND\n&I      SETA   0\n        AWHILE (&I LT 16)\n               AIF (NOT &(EQUREGS_&REGS._&TYPE)(&I+1))\n                   :&(EQUREGS_&REGS._&TYPE)(&I+1) SETB 1\n                   AIF ('&TYPE' EQ 'DEC')\n                       :&PFX&I EQU &I\n                   AELSE\n                       :&PFX&HEX(&I+1) EQU &I\n                   AEND\n               AEND\n               :&I SETA &I+1\n        AEND\n        MEND\n./ ADD NAME=ERASE    0100-14178-14178-0013-00037-00037-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 08/07/07                                                 *\n.*********************************************************************\n.* 08/07/07 RPI 644 INITIAL CODING FOR VSAM ERASE FOLLOWING GET UPD\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       ERASE &RPL=,   VSAM REQUEST PARAMETER LIST                    X\n               &MF=I    NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR2\n         AIF   (N'&SYSLIST LE 0).NPOK\n         MNOTE 12,'ERASE UNSUPPORTED OPERANDS - &SYSLIST(1)'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&RPL' EQ '').ERR1\n         AIF   ('&RPL'(1,1) EQ '(').RPLREG\n         LA    1,&RPL\n         AGO   .VSVC\n.RPLREG  ANOP\n         ZOPTLR 1,&RPL(1)\n.VSVC    ANOP\n         LA    0,RPLOPERA\n         SVC   121 VSAM ERASE R0=3 R1=A(RPL)\n         MEXIT\n.ERR1    MNOTE 12,'ERASE REQUIRES RPL='\n         MEXIT\n.ERR2    MNOTE 12,'ERASE MF= NOT SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=ESPIE    0100-14178-14178-0013-00153-00153-00000-Z390MAC\n        MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27  - issue error for any undefined operands\n.* 11/20/05 RPI106 - correct alignment for SPM mask\n.* 12/12/05 RPI132 - correct to support range within list (5,7,(9,11))\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 04/12/06 RPI244 SUPPORT PARAM=\n.* 04/29/06 RPI305 CORRECT REGISTER FORM OF PARAM= (AIR TO AIF)\n.* 06/03/06 RPI321 CORRECT MNOTE MSG TO INCLUDE MACRO NAME\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       ESPIE &OP,     SET/RESET                                      X\n               &ADDR,   EXIT ADDRESS                                   X\n               &LIST,   INTERRUPTION LIST (1,2...15)                   X\n               &MF=I,   NOT SUPPORTED                                  X\n               &PARAM=  OPTIONAL PARM TO PASS TO EXIT\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   (N'&SYSLIST LE 3).NPOK\n         MNOTE 12,'ESPIE UNSUPPORTED OPERANDS - &SYSLIST(4)'\n         MEXIT\n.NPOK    ANOP\n.*\n.* Set or reset program interruption exit\n.*    ESPIE SET,ADDR\n.*    ESPIE RESET\n.* Notes:\n.*  1.  SPM can be used to set the psw program mask bits and cc:\n.*         mask bit 0 - pic  8 - fixed point overflow\n.*         mask bit 1 - pic 10 - packed decimal overflow\n.*         mask bit 2 - pic 13 - HFP floating point exponent underflow\n.*         mask bit 3 - pic 14 - HFP floating point mantissa signif.\n.*  2.  If mask bit is off, then the above exceptions are not\n.*      generated and cannot be handled by ESPIE or ESTAE.\n.*  3.  The interrupt codes that can be specified in 3rd positional\n.*      operand sublist are as follows:\n.*         1 - operation\n.*         2 - privilege\n.*         3 - execute\n.*         4 - protection\n.*         5 - addressing\n.*         6 - specification\n.*         7 - data exception - see DXC reason codes:\n.*               00 packed decimal data exception\n.*               08 BFP inexact truncated\n.*               0C BFP inexact incremented\n.*               10 BFP underflow exact\n.*               18 BFP underflow inexact truncated\n.*               1C BFP underflow inexact incremented\n.*               20 BFP overflow  exact\n.*               28 BFP overflow  inexact truncated\n.*               2C BFP overflow  inexact incremented\n.*               40 BFP division by zero\n.*               80 BFP invalid operation\n.*         8 - fixed point overflow   (SPM mask bit x'8')\n.*         9 - fixed point divide\n.*        10 - decimal overflow       (SPM mask bit x'4')\n.*        11 - decimal divide\n.*        12 - HFP exponent overflow\n.*        13 - HFP exponent underflow (SPM mask bit x'2')\n.*        14 - HFP significance       (SPM mask bit x'1')\n.*        15 - HFP divide\n.*\n.*  4.  Any of the above interrupts raised are not handled by ESPIE\n.*      or ESTAE user defined exit will result in 0Cx abend.\n.*\n        LCLA   B(31)\n        AIF    ('&PARAM' EQ '').ZPARM\n        AIF    ('&PARAM'(1,1) EQ '(').REGPARM\n        LA     15,&PARAM\n        AGO    .ENDPARM\n.REGPARM ANOP\n        ZOPTLR 15,&PARAM(1)\n        AGO    .ENDPARM\n.ZPARM  ANOP\n        SR     15,15\n.ENDPARM ANOP\n        AIF    ('&OP' EQ 'SET').SET\n        AIF    ('&OP' EQ 'RESET').RESET\n        MNOTE  8,'ESPIE INVALID OPERATION - SET/RESET - &OP'\n        MEXIT\n.SET    ANOP\n&NP     SETA   N'&LIST\n        IPM    0  GET CURRENT PGM MASK\n&MASK   SETA   0\n.PLOOP  ANOP\n        AIF    (&NP EQ 0).SETMASK\n&I1     SETA   &LIST(&NP,1)\n&I2     SETA   &LIST(&NP,2)\n.RLOOP  ANOP\n        AIF    (&I1 GT 0 AND &I1 LT 16).SETBIT\n        MNOTE  8,'ESPIE INVALID INTERRUPT CODE = &RANGE'\n        MEXIT\n.SETBIT ANOP\n&B(&I1) SETA   1\n        AIF    (&I1 EQ  8).SETM0 FIXED OVERFLOW\n        AIF    (&I1 EQ 10).SETM1 DEC   OVERFLOW\n        AIF    (&I1 EQ 13).SETM2 HFP   UNDERFLOW\n        AIF    (&I1 EQ 14).SETM3 HFP   SIGNIFICANCE\n        AGO    .NEXT\n.SETM0  ANOP\n&MASK   SETA   &MASK+X'0800'\n        AGO    .NEXT\n.SETM1  ANOP\n&MASK   SETA   &MASK+X'0400'\n        AGO    .NEXT\n.SETM2  ANOP\n&MASK   SETA   &MASK+X'0200'\n        AGO    .NEXT\n.SETM3  ANOP\n&MASK   SETA   &MASK+X'0100'\n.NEXT   ANOP\n&I1     SETA   &I1+1\n        AIF    (&I1 LE &I2).RLOOP\n&NP     SETA   &NP-1\n        AGO    .PLOOP\n.SETMASK ANOP\n        AIF    (&MASK EQ 0).BLDPIE\n        OILH   0,&MASK\n.BLDPIE ANOP\n        SPM    0 TURN ON ANY MASKS REQUIRED\n&I      SETA   1\n&PIE    SETC   '0'\n.BLOOP  ANOP\n        AIF    (&I GT 31).SETR0\n&PIE    SETC   '&PIE&B(&I)'\n&I      SETA   &I+1\n        AGO    .BLOOP\n.SETR0  ANOP\n        L      0,=B'&PIE'\n        AIF    ('&ADDR'(1,1) EQ '(').AREG\n        LA     1,&ADDR\n        AGO    .SVC\n.AREG   ANOP\n        ZOPTLR 1,&ADDR(1)\n        AGO    .SVC\n.RESET  ANOP\n        SR     1,1\n.SVC    ANOP\n        SVC    X'6D' ESPIE R0=INT BITS R1=EXIT R15=PARAM\n        MEXIT\n.ERR1   MNOTE 12,'ESPIE MF= NOT SUPPORTED'\n        MEND\n./ ADD NAME=ESTAE    0100-14178-14178-0013-00057-00057-00000-Z390MAC\n        MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI  27 - issue error for any undefined operands\n.* 01/09/06 RPI 163 SKIP LR FOR SAME REGISTER\n.* 04/11/06 RPI 244 IGNORE UNUSED KEYWORDS, SUPPORT CV,CT,PARAM=\n.* 06/03/06 RPI 321 CORRECT MNOTE MSG TO INCLUDE MACRO NAME\n.* 11/10/06 RPI 475 SUPPORT CT AS IF OV\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N      ESTAE  &ADDR,          ADDRESS OF ABEND RECOVERY EXIT          X\n               &TYPE,          OV=REPLACE EXIT, CT=ADD NEW EXIT        X\n               &ASYNCH=NO,     IGNORE                                  X\n               &MF=I,          NOT SUPPORTED                           X\n               &PARAM=,        ADDRESS PASSED IN R1 IF SPECIFIED       X\n               &PURGE=NONE,    IGNORE                                  X\n               &RELATED=,      IGNORE                                  X\n               &SDWALOC31=NO,  IGNORE                                  X\n               &TERM=NO,       IGNORE                                  X\n               &XCTL=NO        IGNORE\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   (N'&SYSLIST LE 2).NPOK  R[ 475\n         MNOTE 12,'ESTAE UNSUPPORTED OPERANDS - &SYSLIST(2)'\n.NPOK    ANOP\n        AIF    ('&ADDR'(1,1) EQ '(').AREG\n        LA     0,&ADDR\n        AGO    .CHKP\n.AREG   ANOP\n        ZOPTLR 0,&ADDR(1)\n.CHKP   ANOP\n        AIF    ('&PARAM' EQ '').ZPARM\n        AIF    ('&PARAM'(1,1) EQ '(').PREG\n        LA     1,&PARAM\n        AGO    .CHKTYPE\n.PREG   ANOP\n        ZOPTLR 1,&PARAM(1)\n        AGO    .CHKTYPE\n.ZPARM  ANOP\n        SR     1,1\n.CHKTYPE ANOP\n        AIF    ('&TYPE' NE 'OV').SVC\n        OILH   0,X'8000'\n.SVC    ANOP\n        SVC    X'3C' ESTAE R0=EXIT, R0+=CT, R0-=OV,R1=PARAM OR 0\n        MEXIT\n.ERR1   MNOTE  12,'ESTAE MF= NOT SUPPORTED'\n        MEND\n./ ADD NAME=ESTAEX   0100-14178-14178-0013-00053-00053-00000-Z390MAC\n        MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 04/11/06 RPI244 COPY FROM ESTAE FOR LIMITED SUPPORT\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N      ESTAEX &ADDR,          ADDRESS OF ABEND RECOVERY EXIT          X\n               &TYPE,          OV=REPLACE EXIT, CT=ADD NEW EXIT        X\n               &ASYNCH=NO,     IGNORE                                  X\n               &MF=I,          NOT SUPPORTED                           X\n               &PARAM=,        ADDRESS PASSED IN R1 IF SPECIFIED       X\n               &PURGE=NONE,    IGNORE                                  X\n               &RELATED=,      IGNORE                                  X\n               &SDWALOC31=NO,  IGNORE                                  X\n               &TERM=NO,       IGNORE                                  X\n               &XCTL=NO        IGNORE\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   (N'&SYSLIST EQ 1).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(2)'\n.NPOK    ANOP\n        AIF    ('&ADDR'(1,1) EQ '(').AREG\n        LA     0,&ADDR\n        AGO    .CHKP\n.AREG   ANOP\n        ZOPTLR 0,&ADDR(1)\n.CHKP   ANOP\n        AIF    ('&PARAM' EQ '').ZPARM\n        AIF    ('&PARAM'(1,1) EQ '(').PREG\n        LA     1,&PARAM\n        AGO    .CHKTYPE\n.PREG   ANOP\n        ZOPTLR 1,&PARAM(1)\n        AGO    .CHKTYPE\n.ZPARM  ANOP\n        SR     1,1\n.CHKTYPE ANOP\n        AIF    ('&TYPE' NE 'OV').SVC\n        OILH   0,X'8000'\n.SVC    ANOP\n        SVC    X'3C' ESTAE R0=EXIT, R0+=CT, R0-=OV,R1=PARAM OR 0\n        MEXIT\n.ERR1   MNOTE 12,'ESTAEX MF= NOT SUPPORTED'\n        MEND\n./ ADD NAME=EXEC     0100-14178-14178-0013-00034-00034-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 04/25/06 RPI 293 ADD EXEC SQL INCLUDE SUPPORT VIA COPY\n.* 05/05/06 RPI 308 GENERALIZED FOR CICS, DLI, AND SQL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.*\n.* The mz390 loader parses space delimited EXEC parms and forms to\n.* form standard comma delimited macro call to EXEC macro to support\n.* EXEC SQL/CICS/DLI type statements.\n.*\n.*********************************************************************\n         MACRO\n&N       EXEC\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n&EXEC_TYPE      SETC  '&SYSLIST(1)'\n&EXEC_CMD       SETC  '&SYSLIST(2)'\n&EXEC_CMD_PARMS SETC  '&SYSLIST(3)'\n&NP      SETA  N'&SYSLIST\n&I       SETA  3\n.PLOOP   ANOP\n&I       SETA  &I+1\n         AIF   (&I GT &NP).ENDPARMS\n&EXEC_CMD_PARMS SETC  '&EXEC_CMD_PARMS,&SYSLIST(&I)'\n         AGO   .PLOOP\n.ENDPARMS ANOP\n         &EXEC_TYPE._&EXEC_CMD &EXEC_CMD_PARMS\n         MEND\n./ ADD NAME=EXIT     0100-14178-14178-0013-00017-00017-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 05/08/06 RPI 308 ADD EXIT FOR SVC 3 USED IN CICS.MLC TO EXIT LINK\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n         MACRO\n&N       EXIT\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         SVC   3   EXIT FROM LINK TO CALLER OR EZ390\n         MEND\n\n./ ADD NAME=EXTRACT  0100-14178-14178-0013-00005-00005-00000-Z390MAC\n         MACRO\n&N       EXTRACT\n&N       DS    0H\n         MNOTE 12,'EXTRACT NOT SUPPORTED YET'\n         MEND\n./ ADD NAME=FREEMAIN 0100-14178-14178-0013-00103-00103-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI  27 - issue error for any undefined operands\n.* 12/06/05 RPI 117 - support 32 bit LV= and short forms nnnK, nnnM\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 01/21/06 RPI187 CORRECT FREEMAIN and GETMAIN comments, LA/L length,\n.*          limit check length, correct K/M support\n.* 03/14/06 RPI 210 allow positional type operand and support LA=\n.* 04/11/06 RPI 244 CHECK FOR REGISTER CONFLICT, IGNORE UNUSED KWDS,\n.*          ALSO SWITCH R0=LENGTH AND R1=ADDR FOR COMPATIBILITY\n.* 04/16/06 RPI 293 IGNORE SP= AND FIX MNOTES\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 01/28/11 RPI 1143 remove old bug due to offset 0777 versus 0\n.*********************************************************************\n&N       FREEMAIN &TYPE,      IGNORED                                  X\n               &A=,        ADDRESS                                     X\n               &KEY=,      NOT SUPPORTED ERROR                         X\n               &LA=,       LENGTH ADDRESS                              X\n               &LV=,       LENGTH VALUE                                X\n               &MF=I,      NOT SUPPORTED                               X\n               &RELATED=,  IGNORED                                     X\n               &SP=        IGNORED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR5\n         AIF   (N'&SYSLIST LE 1).NPOK   RPI 210\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(2)'\n         MEXIT\n.NPOK    ANOP\n.*\n.* FREEMAIN - RELEASE MEMORY FROM ABOVE OR BELOW 16MB LINE\n.*\n.*  LENGTH LV=\n.*    ABSOLUTE LENGTH OR (REG)\n.*  LENGTH LA=\n.*    ADDRESS OF FULL WORD LENGTH OR (REG)\n.*  ADDRESS A=\n.*    RX OF FULLWORD OR (REG) WITH DEFAULT REG 0\n.* OUTPUT\n.*    ABORT WITH A0A ABEND IF REQUEST FAILS\n.*\n         AIF   ('&KEY' NE '').ERR2\n.LA      ANOP                 RPI 210\n         AIF  ('&LA' EQ '').LV\n         AIF  ('&LA'(1,1) EQ '(').LAREG\n         L    0,&LA\n         AGO  .A\n.LAREG   ANOP\n         L    0,0(&LA(1)) RPI 1143\n         AGO  .A\n.LV      ANOP\n         AIF  ('&LV' NE '').CHKLV\n         MNOTE 12,'FREEMAIN LV= MISSING'\n         MEXIT\n.CHKLV   ANOP\n         AIF  ('&LV'(1,1) EQ '(').LVREG\n         AIF  ('&LV'(1,1) GE'0' AND '&LV'(1,1) LE '9').LVLIT\n         L    0,=A(&LV)\n         AGO  .A\n.LVLIT   ANOP\n&LEN     SETA &LV\n         AIF  ('&LV'(K'&LV,1) NE 'K').CHKLVM\n         AIF  (&LEN GT 1048576).ERR1\n&LEN     SETA &LEN*1024\n         AGO  .SETLV\n.CHKLVM  ANOP\n         AIF  ('&LV'(K'&LV,1) NE 'M').SETLV\n         AIF  (&LEN GT 1024).ERR1\n&LEN     SETA &LEN*1048576\n.SETLV   ANOP\n         L    0,=A(&LEN)  RPI 117\n         AGO  .A\n.LVREG   ANOP\n         ZOPTLR 0,&LV(1)\n.A       ANOP\n         AIF  ('&A' EQ '').SVC\n         AIF  ('&A'(1,1) EQ '(').AREG\n         L    1,&A\n         AGO  .SVC\n.AREG    ANOP\n         AIF   ('&A(1)' EQ '1' OR '&A(1)' EQ 'R1').SVC  RPI163\n         ZOPTLR 1,&A(1)\n.SVC     ANOP\n         SVC   5 FREEMAIN R0=LEN, R1=ADDR\n         MEXIT\n.ERR1    MNOTE 12,'FREEMAIN LV LENGTH TOO LONG - &LV'\n         MEXIT\n.ERR2    MNOTE 12,'FREEMAIN KEY= NOT SUPPORTED'\n         MEXIT\n.ERR4    MNOTE 12,'FREEMAIN A=(0) INVALID'\n         MEXIT\n.ERR5    MNOTE 12,'FREEMAIN MF= NOT SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=GENCB    0100-14178-14178-0013-00124-00124-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/16/07                                                 *\n.*********************************************************************\n.* 09/16/07 RPI 682 INITIAL CODING\n.* 09/20/07 RPI 703 CORRECT NISSING QUOTE IN AIF\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       GENCB &AM=VSAM, VSAM VS VTAM                                  X\n               &BLK=,    ACB OR RPL CONTROL BLOCK GENERATION           X\n               &COPIES=1,  ACB NUMBER OF COPIES TO ALLOCATE            X\n               &LENGTH=, LENGTH OF USER WAREA PROVIDED                 X\n               &LOC=BELOW, ALLOCATE AREA ABOVE OR BELOW 24 BIT LINE    X\n               &WAREA=,  USER PROVIDED WORK AREA FOR ACB/RPL COPIES    X\n               &BUFSP=0,   ACB MAXIMUM BUFFER SPACE FOR CLUSTER        X\n               &DDNAME=,   ACB DDNAME FOR VSAM CLUSTER DEFINITION TABLEX\n               &DSNAME=0,  ACB DSNAME FOR VSAM CLUSTER DEFINITION TABLEX\n               &EXLST=0,   ACB NOT CURRENTLY SUPPORTED                 X\n               &MACRF=,    ACB PROCESSING OPTIONS                      X\n               &ACB=,      RPL ADDR ACB                                X\n               &AREA=0,    RPL RECORD WORK AREA (DATA MVE, ADDR LOC)   X\n               &AREALEN=0, RPL LENGTH OF AREA (MAX MVE, 4 FOR LOC)     X\n               &ARG=0,     RPL KEY FIELD FOR KSDS ACCESS               X\n               &ECB=0,     RPL ECB TO BE POSTED ON COMPLETION          X\n               &KEYLEN=0,  RPL KEY LENGTH FOR GENERIC KEY SEARCH       X\n               &OPTCD=,    RPL OPTIONS (SEE SUPPORTED OPTIONS ABOVE)   X\n               &RECLEN=0   RPL RECORD LENGTH FOR VARIABLE LENGTH PUT\n&NPOS    SETA  N'&SYSLIST\n.POSLOOP ANOP\n         AIF   (&NPOS EQ 0).POSEND\n         MNOTE 12,'UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'\n&NPOS    SETA  &NPOS-1\n         AGO   .POSLOOP\n.POSEND  ANOP\n         AIF   ('&AM' EQ 'VSAM').CHK_EXLST\n         MNOTE 12,'GENCB ONLY AM=VSAM IS SUPPORTED'\n         MEXIT\n.CHK_EXLST ANOP\n         AIF   ('&EXLST' EQ '0').NOEXLST\n         MNOTE 12,'GENCB ACB EXLST NOT CURRENTLY SUPPORTED'\n         MEXIT\n.NOEXLST ANOP\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         &BLK.D , GEN ACB/RPL DSECT AND &BLK.LEN IF NOT ALREADY DONE\n&BLKEND  SETC   '&BLK.END'\n&BLKSTRT SETC   'IHA&BLK'\n&LBLK    SETA   &BLKEND-&BLKSTRT\n&LBLKS   SETA   &COPIES*&LBLK\n         AIF    (&LBLK GT 1).LBLKOK\n         MNOTE  12,'GENCB LENGTH OF &BLK FROM DSECT INVALID - &LBLK'\n.LBLKOK  ANOP\n.*\n.* INIT R14 = USER WORK AREA OR DYNAMIC ALLOC AREA\n.*\n         AIF   ('&LENGTH' EQ '' AND '&WAREA' EQ '').ALLOC\n         AIF   ('&LENGTH' NE '').WAREA\n         MNOTE 12,'GENCB MISSING LENGTH FOR WAREA'\n         MEXIT\n.WAREA   ANOP\n         AIF   ('&WAREA'  NE '').WAREA2\n         MNOTE 12,'GENCB MISSING WAREA FOR LENGTH'\n         MEXIT\n.WAREA2  ANOP\n         AIF   ('&WAREA'(1,1) EQ '(').REGWAREA   RPI 703\n         LA    1,&WAREA\n         LR    14,1\n         AGO   .LENGTH\n.REGWAREA ANOP\n         ZOPTLR 14,&WAREA(1)\n.LENGTH  ANOP\n         AIF   ('&LENGTH' GE '&LBLKS').CLEAR\n         MNOTE 12,'GENCB &LENGTH TOO SHORT FOR &COPIES COPIES OF &BLK'\n         MEXIT\n.ALLOC   ANOP\n         GETMAIN RU,LV=&LBLKS,LOC=&LOC\n.CLEAR   ANOP\n         MVI   0(1),0\n         MVC   1(&LBLK-1,1),0(1) CLEAR FIRST &BLK\n.CHKTYPE ANOP\n&TCOPY   SETA  &COPIES\n         AIF   ('&BLK' EQ 'ACB').GENACB\n         AIF   ('&BLK' EQ 'RPL').GENRPL\n         MNOTE 12,'GENCB ONLY BLK=ACB OR BLK=RPL SUPPORTED'\n         MEXIT\n.*\n.* GENERATE FIRST ACB STARTING AT R1\n.*\n.GENACB  ANOP\n         ZGENACB BUFSP=&BUFSP, ACB MAXIMUM BUFFER SPACE FOR CLUSTER    X\n               DDNAME=&DDNAME, ACB DDNAME FOR CLUSTER DEFINITION TABLE X\n               DSNAME=&DSNAME, ACB DSNAME FOR CLUSTER DEFINITION TABLE X\n               EXLST=&EXLST,   ACB NOT CURRENTLY SUPPORTED             X\n               MACRF=&MACRF    ACB PROCESSING OPTIONS\n         AGO   .MAKE_COPIES\n.*\n.* GENERATE FIRST RPL AT R1\n.*\n.GENRPL  ANOP\n         ZGENRPL ACB=&ACB,      RPL ADDR ACB                           X\n               AREA=&AREA,      RPL WORK AREA (DATA MVE, ADDR LOC)     X\n               AREALEN=&AREALEN, RPL LEN OF AREA (MAX MVE, 4 FOR LOC)  X\n               ARG=&ARG,        RPL KEY FIELD FOR KSDS ACCESS          X\n               ECB=&ECB,        RPL ECB TO BE POSTED ON COMPLETION     X\n               KEYLEN=&KEYLEN,  RPL KEY LENGTH FOR GENERIC KEY SEARCH  X\n               OPTCD=&OPTCD,    RPL OPTIONS (SEE RPL FOR LIST)         X\n               RECLEN=&RECLEN   RPL REC LENGTH FOR VARIABLE LENGTH PUT\n.MAKE_COPIES ANOP\n         AIF   (&TCOPY LE 1).EXIT\n         LR    14,1\n.COPY_LOOP ANOP\n&TCOPY   SETA  &TCOPY-1\n         AIF   (&TCOPY LE 0).EXIT\n         AHI   14,&LBLK\n         MVC   0(&LBLK,14),0(1) COPY &BLK\n         AGO   .COPY_LOOP\n.EXIT    ANOP\n         MEXIT\n         MEND\n./ ADD NAME=GET      0100-14178-14178-0013-00071-00071-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* MAINTENANCE\n.* 10/12/05 ADD USE OF DCBREC IF RECORD NOT SPECIFIED\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 10/20/05 RPI38 - check for register conflicts\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 04/12/06 RPI163 ISSUE MNOTE ERROR FOR TYPE=P\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 06/22/07 RPI 644 ADD VSAM RPL SUPPORT VIA SVC 221 R0=1 R1=A(RPL)\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 10/01/07 RPI 709 CORRECT MNOTE TEXT\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       GET   &DCB,    DCB                                            X\n               &REC,    RECORD                                         X\n               &MF=I,   NOT SUPPORTED                                  X\n               &RPL=,   VSAM REQUEST PARAMETER LIST                    X\n               &TYPE=   TYPE=P NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR3\n         AIF   (N'&SYSLIST LE 2).NPOK\n         MNOTE 12,'GET UNSUPPORTED OPERANDS - &SYSLIST(3)'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&RPL' NE '').VSAM\n         AIF   ('&TYPE' NE '').ERR1\n         AIF   ('&DCB'(1,1) EQ '(').DCBREG\n         LA    1,&DCB\n         AGO   .CHKREC\n.DCBREG  ANOP\n         ZOPTLR 1,&DCB(1)\n.CHKREC  ANOP\n         AIF   ('&REC' EQ '').RECDEF\n         AIF   ('&REC'(1,1) EQ '(').RECREG\n         LA    0,&REC\n         AGO   .SVC\n.RECREG  ANOP\n         AIF   ('&REC(1)' EQ '1' OR '&REC(1)' EQ 'R1').ERR2\n         ZOPTLR 0,&REC(1)\n         AGO   .SVC\n.RECDEF  ANOP\n         L     0,DCBREC-IHADCB(1)\n.SVC     ANOP\n         SVC  151\n         MEXIT\n.VSAM    ANOP\n         AIF   ('&RPL'(1,1) EQ '(').RPLREG\n         LA    1,&RPL\n         AGO   .VSVC\n.RPLREG  ANOP\n         ZOPTLR 1,&RPL(1)\n.VSVC    ANOP\n         LA    0,RPLOPGET\n         SVC   121 VSAM GET R0=1 R1=A(RPL)\n         MEXIT\n.ERR1    MNOTE 12,'GET TYPE= NOT SUPPORTED'\n         MEXIT\n.ERR2    MNOTE 12,'GET RECORD REG INVALID - &REC(1)'\n         MEXIT\n.ERR3    MNOTE 12,'GET MF= NOT SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=GETENV   0100-14178-14178-0013-00043-00043-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 07/12/07                                                 *\n.*********************************************************************\n.* 07/12/07 RPI 413 INITIAL CODING\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/29/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.*\n.* GETENV - GET ENVIRONMENT VARIABLE VALUE\n.*   INPUT\n.*     R0  = 1 EXTRACE SVC FUNCTION CODE\n.*     R1  = ADDRESS OF NULL TERMINATED ENVIRONMENT VARIABLE NAME\n.*   OUTPUT\n.*     R2  = ADDRESS OF NULL TERMINATED ENVIRONMENT VARIABLE VALUE\n.*           (THE AREA IS GETMAIN'D FOR ENTIRE VALUE PLUS NULL)\n.*     R15 = RETURN CODE\n.*             0 - OK\n.*             4 - VALUE NULL\n.*             8 - NAME NULL\n.*\n.*********************************************************************\n&N       GETENV &NAME\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&NAME' EQ '').ERR1\n         AIF   ('&NAME'(1,1) EQ '(').REGNAME\n         LA    1,&NAME\n         AGO   .SVC\n.REGNAME ANOP\n         ZOPTLR 1,&NAME(1)\n.SVC     ANOP\n         LA   0,1\n         SVC  40 EXTRACT GETENV R0=1, R1=A(NAME) OUTPUT R2=A(VALUE)\n         MEXIT\n.ERR1    MNOTE 12,'GETENV MISSING NULL TERMINATED NAME'\n         MEXIT\n         MEND\n./ ADD NAME=GETMAIN  0100-14178-14178-0013-00146-00146-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27  - issue error for any undefined operands\n.* 12/06/05 RPI117 - allow LV=full word and nnnK or nnnM short forms\n.* 01/09/06 RPI162 - correct support for nnnK and mmmM extensions.\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 01/21/06 RPI187 CORRECT FREEMAIN and GETMAIN comments, LA/L length,\n.*          limit check length, correct K/M support\n.* 03/14/06 RPI 210 ALLOW LOC=24,(24),31,(31),(24,31)\n.* 04/11/06 RPI 244 ISSUE ERROR FOR UNSUPPORTED KW OPERANDS\n.* 06/03/06 RPI 324 correct register 0 versus 1 for A= store\n.* 01/23/07 RPI 542 correct output regs r0=len, r1=addr\n.* 03/08/07 RPI 568 correct output regs r0=len, r1=addr comments\n.* 03/12/07 RPI 575 correct to honor LOC=RES equivalent to LOC=BELOW\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       GETMAIN &TYPE,     TYPE OF REQUEST R,RC,RU ELSE UNSUPP ERROR  X\n               &A=,         ADDR TO STORE ADDR                         X\n               &BNDRY=,     IGNORED                                    X\n               &CHECKZERO=, IGNORED                                    X\n               &CONTBDY,    IGNORED                                    X\n               &INADDR=,    UNSUPPORTED ERROR                          X\n               &KEY=,       IGNORED                                    X\n               &LA=,        ADDR OF LENGTH                             X\n               &LV=,        LENGTH VALUE                               X\n               &LOC=,       BELOW/RES=24, ABOVE,ANY/64=31              X\n               &MF=I,       NOT SUPPORTED                              X\n               &RELATED=,   IGNORED                                    X\n               &SP=,        IGNORED (SEE RPI 244, 248, AND 394)        X\n               &STARTBDY=   IGNORED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR4\n         AIF   (N'&SYSLIST EQ 1).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(2)'\n.NPOK    ANOP\n.*\n.* GETMAIN - ALLOCATE MEMORY FROM ABOVE OR BELOW 16MB LINE\n.*\n.*  TYPE\n.*    R   - UNCONDITIONAL (DEFAULT IS BELOW THE LINE)\n.*    RC  - CONDITIONAL (DEFAULT IS ABOVE THE LINE)\n.*    RU  - UNCONDITIONAL (DEFAULT IS ABOVE THE LINE)\n.*  LENGHT LA= ADDR OF LENGTH OR (REG)\n.*  LENGTH LV= ABSOLUTE LENGTH OR (REG)\n.*  LOCATION LOC=\n.*    BELOW, RES = 24\n.*    ABOVE, ANY = 31\n.*  INPUT TO SVC 4\n.*    R0 OPTION BITS\n.*        BIT 0 - AMODE 31 ALLOCATION ABOVE LINE\n.*        BIT 1 - CONDITIONAL REQUEST\n.*    R1 LENGTH\n.*  OUTPUT\n.*    R1 = ADDRESS OF ALLOCATED AREA  RPI 568\n.*    R0 = LENGTH ROUNDED UP TO *8    RPI 568\n.*    R15 RETURN CODE\n.*         0 - OK\n.*         4 - REQUEST FAILED OR ABEND 80A IF UNCONDITIONAL\n.*\n         AIF   ('&INADDR' NE '').ERR2\n         AIF   ('&SP'     EQ '').SKPWARN\n         MNOTE 4,'GETMAIN IGNORING SP AND USING DEFAULT' RPI 394\n.SKPWARN ANOP\n         AIF   ('&TYPE' EQ 'R').R\n         AIF   ('&TYPE' EQ 'RC').RC\n         AIF   ('&TYPE' EQ 'RU').RU\n         MNOTE 12,'GETMAIN INVALID TYPE - &TYPE'\n         MEXIT\n.R       ANOP\n&ABOVE   SETB 0\n&COND    SETB 0\n         AGO  .LV\n.RC      ANOP\n&ABOVE   SETB 1\n&COND    SETB 1\n         AGO  .LV\n.RU      ANOP\n&ABOVE   SETB 1\n&COND    SETB 0\n.LV      ANOP\n         AIF  ('&LV' NE '').CHKLV\n         MNOTE 12,'GETMAIN LV= MISSING'\n         MEXIT\n.CHKLV   ANOP\n         AIF  ('&LV'(1,1) EQ '(').LVREG\n         AIF  ('&LV'(1,1) GE'0' AND '&LV'(1,1) LE '9').LVLIT\n         L    1,=A(&LV)\n         AGO  .LOC\n.LVLIT   ANOP\n&LEN     SETA &LV\n         AIF  ('&LV'(K'&LV,1) NE 'K').CHKLVM\n         AIF  (&LEN GT 1048576).ERR1\n&LEN     SETA &LEN*1024\n         AGO  .SETLV\n.CHKLVM  ANOP\n         AIF  ('&LV'(K'&LV,1) NE 'M').SETLV\n         AIF  (&LEN GT 1024).ERR1\n&LEN     SETA &LEN*1048576\n.SETLV   ANOP\n         L    1,=A(&LEN)  RPI 117\n         AGO  .LOC\n.LVREG   ANOP\n         ZOPTLR 1,&LV(1)\n.LOC     ANOP\n         AIF  ('&LOC' EQ '').OPTIONS\n         AIF  ('&LOC' EQ 'ANY').SETABOVE\n         AIF  ('&LOC' EQ 'ABOVE').SETABOVE\n         AIF  ('&LOC' EQ 'BELOW').SETBELOW\n         AIF  ('&LOC' EQ 'RES').SETBELOW         RPI 575\n         AIF  ('&LOC(1)' EQ '31' OR '&LOC(2)' EQ '31').SETABOVE\n         AIF  ('&LOC(1)' EQ '24' OR '&LOC(2)' EQ '24').SETBELOW\n         MNOTE 12,'GETMAIN INVALID LOC - &LOC'\n         MEXIT\n.SETABOVE ANOP\n&ABOVE   SETB  1\n         AGO   .OPTIONS\n.SETBELOW ANOP\n&ABOVE   SETB  0\n.OPTIONS ANOP\n         LA    0,B'&ABOVE&COND'\n         SVC   4 GMAIN R0=(X'02'=31B,X'01'=COND),R1=LEN OUT(R0=L,R1=A)\n         AIF   ('&A' EQ '').EXIT\n         AIF   ('&A'(1,1) EQ '(').AREG\n         ST    1,&A RPI 542\n         MEXIT\n.AREG    ST    1,0(&A(1)) RPI 542\n         MEXIT\n.ERR1    MNOTE 12,'GETMAIN LENGTH TOO LONG - &LV'\n         MEXIT\n.ERR2    MNOTE 12,'GETMAIN INADDR= NOT SUPPORTED'\n         MEXIT\n.ERR3    MNOTE 12,'GETMAIN LENGTH TOO LONG - &LV'\n         MEXIT\n.ERR4    MNOTE 12,'GETMAIN MF= NOT SUPPORTED'\n         MEXIT\n.EXIT    MEND\n./ ADD NAME=GPARMOD  0100-14178-14178-0013-00022-00022-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 05/16/07                                                 *\n.*********************************************************************\n.* 05/16/07 RPI 604 ADD BS2000 MACRO TO SET &SYSMOD TO 24 OR 31\n.*********************************************************************\n         GPARMOD &MODE\n         GBLC    &SYSMOD\n         AIF     ('&MODE' EQ '24').MODE24\n         AIF     ('&MODE' EQ '31').MODE31\n         MNOTE   1,'GPARMOD &MODE INVALID'\n         MEXIT\n.MODE24  ANOP\n&SYSMOD  SETC    '24'\n         MEXIT\n.MODE31  ANOP\n&SYSMOD  SETC    '31'\n         MEND\n./ ADD NAME=GUAM     0100-14178-14178-0013-00383-00383-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 12/01/05                                                 *\n.*********************************************************************\n.*\n.* GUI GRAPHICAL USER ACCESS METHOD MACRO FOR Z390\n.*\n.*********************************************************************\n.* 12/01/05 RPI47 ADD GUI USER INTERFACE SUPPORT\n.* 12/16/05 RPI47 ADD GUI COLOR DEFINITIONS\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 02/21/06 RPI205 RENAME GUI MACRO TO GUAM TO REDUCE CONFUSION\n.* 02/24/06 RPI217 CORRECT GRAPH,TEXT COMMAND TO SET TEXT LENGTH\n.* 05/08/06 RPI308 FIX WINDOW,VIEW TO SWITCH WITH NO RESET OPTIONS\n.* 05/24/06 RPI227 ADD SCREEN,COLOR TO SET BACKGROUND AND TEXT COLOR\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       GUAM  &MAJOR,&MINOR\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n&NP     SETA   N'&SYSLIST\n        AIF    ('&MAJOR' EQ 'WINDOW').WINDOW\n        AIF    ('&MAJOR' EQ 'SCREEN').SCREEN\n        AIF    ('&MAJOR' EQ 'GRAPH').GRAPH\n        AIF    ('&MAJOR' EQ 'KEYBOARD').KEYBOARD\n        AIF    ('&MAJOR' EQ 'MOUSE').MOUSE\n        AIF    ('&MAJOR' EQ 'SOUND').SOUND\n        AIF    ('&MAJOR' EQ 'SYMBOLS').SYMBOLS\n        AIF    ('&MAJOR' EQ 'COLOR').COLOR\n        MNOTE  12,'GUI INVALID MAJOR FUNCTION - &MAJOR'\n        MEXIT\n.WINDOW ANOP\n        AIF    ('&MINOR' EQ 'TITLE').WINDOW_TITLE\n        AIF    ('&MINOR' EQ 'LOC').WINDOW_LOC\n        AIF    ('&MINOR' EQ 'SIZE').WINDOW_SIZE\n        AIF    ('&MINOR' EQ 'FONT').WINDOW_FONT\n        AIF    ('&MINOR' EQ 'VIEW').WINDOW_VIEW\n        AIF    ('&MINOR' EQ 'GETVIEW').WINDOW_GETVIEW\n        MNOTE  12,'GUI WINDOW INVALID MINOR FUNCTION - &MINOR'\n        MEXIT\n.WINDOW_TITLE  ANOP R1=A(TITLE) DQ OR NULL TERM\n        LA     0,GUI_WINDOW_TITLE\n        AIF    ('&SYSLIST(3)'(1,1) EQ '''').WINDOW_TITLE_LIT\n        AIF    ('&SYSLIST(3)'(1,1) EQ '(').WINDOW_TITLE_REG\n        LA     1,=A(&SYSLIST(3)) R1=A(TITLE) DQ OR NULL TERM\n        AGO    .SVC\n.WINDOW_TITLE_LIT ANOP\n&TEXT   SETC   '&SYSLIST(3)'(2,K'&SYSLIST(3)-2)\n        LA     15,=C'\"&TEXT\"'     R15=A(TITLE) DQ DELIMITED\n        LA     1,=A(*-*)\n        ST     15,0(1)            R1=A(A(TITLE))\n        AGO    .SVC\n.WINDOW_TITLE_REG ANOP\n        LA     1,=A(*-*)\n        ST     &SYSLIST(3,1),0(1) R1=A(A(TITLE))\n        AGO    .SVC\n.WINDOW_LOC ANOP R1=A(X,Y)\n        LA     0,GUI_WINDOW_LOC\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4)) R1=A(X,Y) PIXELS\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP8\n        ST     &SYSLIST(3,1),0(1)\n.SKP8   ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP9\n        ST     &SYSLIST(4,1),4(1)\n.SKP9   ANOP\n        AGO    .SVC\n.WINDOW_SIZE ANOP R1=A(WIDTH,HEIGHT)\n        LA     0,GUI_WINDOW_SIZE\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4)) R1=A(WIDTH,HEIGHT)\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP10\n        ST     &SYSLIST(3,1),0(1)\n.SKP10  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP11\n        ST     &SYSLIST(4,1),4(1)\n.SKP11  ANOP\n        AGO    .SVC\n.WINDOW_FONT ANOP  R1=FONT (8,30)\n        LA     0,GUI_WINDOW_FONT\n        LA     15,-A(&SYSLIST(3)) R1=A(FONT SIZE) (8-30)\n        LA     1,=A(*-*)\n        ST     15,0(1) R1=A(A(FONT))\n        AGO    .SVC\n.WINDOW_VIEW ANOP  R1=VIEW (0-3)\n        LA     0,GUI_WINDOW_VIEW\n        AIF    ('&SYSLIST(4)' NE '').WINDOW_VIEW_PARMS\n        LA     1,=A(GUI_WINDOW_VIEW_&SYSLIST(3),0,0,0)\n        AGO    .SVC\n.WINDOW_VIEW_PARMS ANOP\n        LA     1,=A(GUI_WINDOW_VIEW_&SYSLIST(3),&SYSLIST(4),&SYSLIST(5)X\n               ,&SYSLIST(6)) R1=VIEW (0-NONE,1=MCS,2=SCREEN,3=GRAPH)\n        AIF    ('&SYSLIST(4)'(1,1) LT '0' OR '&SYSLIST(4)'(1,1) GT '9')X\n               .SKPLIT1\n        LA     15,=A(&SYSLIST(4))\n        ST     15,4(1)\n.SKPLIT1 ANOP\n        AIF    ('&SYSLIST(5)'(1,1) LT '0' OR '&SYSLIST(5)'(1,1) GT '9')X\n               .SKPLIT2\n        LA     15,=A(&SYSLIST(5))\n        ST     15,8(1)\n.SKPLIT2 ANOP\n        AGO    .SVC\n.WINDOW_GETVIEW ANOP R1=VIEW (0-3)\n        LA     0,GUI_WINDOW_GETVIEW SET R0 = CURRENT VIEW (0-3)\n        AGO    .SVC\n.SCREEN ANOP\n        AIF    ('&MINOR' EQ 'READ').SCREEN_READ\n        AIF    ('&MINOR' EQ 'WRITE').SCREEN_WRITE\n        AIF    ('&MINOR' EQ 'FIELD').SCREEN_FIELD\n        AIF    ('&MINOR' EQ 'CURSOR').SCREEN_CURSOR\n        AIF    ('&MINOR' EQ 'COLOR').SCREEN_COLOR\n        MNOTE  12,'GUI SCREEN INVALID MINOR FUNCTION - &MINOR'\n        MEXIT\n.SCREEN_READ ANOP R1=A(BUFF,LBUFF,WAIT/NOWAIT,EDIT/NOEDIT)\n        LA     0,GUI_SCREEN_READ\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),GUI_&SYSLIST(5),GUI_&SYSLISX\n               T(6)) R1=(BUFF,LBUFF,WAIT/NOWAIT,EDIT/NOEDIT)\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP1\n        ST     &SYSLIST(3,1),0(1)\n.SKP1   ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP2\n        ST     &SYSLIST(4,1),4(1)\n.SKP2   ANOP\n        AGO    .SVC\n.SCREEN_WRITE ANOP R1=A(ROW,COL,BUFF,LBUFF,EDIT/NOEDIT)\n        LA     0,GUI_SCREEN_READ\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),   X\n               &SYSLIST(7)) R1=A(ROW,COL,BUFF,LBUFF,EDIT/NOEDIT)\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP3\n        ST     &SYSLIST(3,1),0(1)\n.SKP3   ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP4\n        ST     &SYSLIST(4,1),4(1)\n.SKP4   ANOP\n        AIF    ('&SYSLIST(5)'(1,1) NE '(').SKP5\n        ST     &SYSLIST(3,1),8(1)\n.SKP5   ANOP\n        AIF    ('&SYSLIST(6)'(1,1) NE '(').SKP6\n        ST     &SYSLIST(4,1),12(1)\n.SKP6   ANOP\n        AIF    ('&SYSLIST(7)'(1,1) NE '(').SKP7\n        ST     &SYSLIST(3,1),16(1)\n.SKP7   ANOP\n        AGO    .SVC\n.SCREEN_FIELD ANOP R1=A(ROW,COL,LFIELD)\n        LA     0,GUI_SCREEN_FIELD\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),&SYSLIST(5))  R1=A(ROW,COL,X\n               LFIELD)\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP12\n        ST     &SYSLIST(3,1),0(1)\n.SKP12  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP13\n        ST     &SYSLIST(4,1),4(1)\n.SKP13  ANOP\n        AIF    ('&SYSLIST(5)'(1,1) NE '(').SKP14\n        ST     &SYSLIST(3,1),8(1)\n.SKP14  ANOP\n        AGO    .SVC\n.SCREEN_CURSOR ANOP R1=A(ROW,COL,TYPE)\n        LA     0,GUI_SCREEN_CURSOR\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),&SYSLIST(5)) R1=A(ROW,COL,TX\n               YPE)\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP15\n        ST     &SYSLIST(3,1),0(1)\n.SKP15  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP16\n        ST     &SYSLIST(4,1),4(1)\n.SKP16  ANOP\n        AIF    ('&SYSLIST(5)'(1,1) NE '(').SKP17\n        ST     &SYSLIST(3,1),8(1)\n.SKP17  ANOP\n        AGO    .SVC\n.SCREEN_COLOR ANOP R1=A(BG_COLOR,TEXT_COLOR)\n        LA     0,GUI_SCREEN_COLOR\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4))\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP40\n        ST     &SYSLIST(3,1),0(1)\n.SKP40  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP41\n        ST     &SYSLIST(4,1),4(1)\n.SKP41  ANOP\n        AGO    .SVC\n.GRAPH ANOP\n        AIF    ('&MINOR' EQ 'POINT').GRAPH_POINT\n        AIF    ('&MINOR' EQ 'LINE').GRAPH_LINE\n        AIF    ('&MINOR' EQ 'FILL').GRAPH_FILL\n        AIF    ('&MINOR' EQ 'TEXT').GRAPH_TEXT\n        MNOTE  12,'GUI GRAPH INVALID MINOR FUNCTION - &MINOR'\n        MEXIT\n.GRAPH_POINT ANOP R1=A(X,Y,COLOR)\n        LA     0,GUI_GRAPH_POINT\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),&SYSLIST(5)) R1=A(X,Y,COLORX\n               )\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP37\n        ST     &SYSLIST(3,1),0(1)\n.SKP37  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP38\n        ST     &SYSLIST(4,1),4(1)\n.SKP38  ANOP\n        AIF    ('&SYSLIST(5)'(1,1) NE '(').SKP39\n        ST     &SYSLIST(3,1),8(1)\n.SKP39  ANOP\n        AGO    .SVC\n.GRAPH_LINE ANOP R1=A(X1,Y1,X2,Y2,COLOR)\n        LA     0,GUI_GRAPH_LINE\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),&SYX\n               SLIST(7)) R1=A(X1,Y1,X2,Y2,COLOR)\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP18\n        ST     &SYSLIST(3,1),0(1)\n.SKP18  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP19\n        ST     &SYSLIST(4,1),4(1)\n.SKP19  ANOP\n        AIF    ('&SYSLIST(5)'(1,1) NE '(').SKP20\n        ST     &SYSLIST(3,1),8(1)\n.SKP20  ANOP\n        AIF    ('&SYSLIST(6)'(1,1) NE '(').SKP21\n        ST     &SYSLIST(3,1),12(1)\n.SKP21  ANOP\n        AIF    ('&SYSLIST(7)'(1,1) NE '(').SKP22\n        ST     &SYSLIST(4,1),16(1)\n.SKP22  ANOP\n        AGO    .SVC\n.GRAPH_FILL ANOP R1=A(X1,Y1,X2,Y2,COLOR)\n        LA     0,GUI_GRAPH_FILL\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),&SYX\n               SLIST(7)) R1=A(X1,Y1,X2,Y2,COLOR)\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP23\n        ST     &SYSLIST(3,1),0(1)\n.SKP23  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP24\n        ST     &SYSLIST(4,1),4(1)\n.SKP24  ANOP\n        AIF    ('&SYSLIST(5)'(1,1) NE '(').SKP25\n        ST     &SYSLIST(3,1),8(1)\n.SKP25  ANOP\n        AIF    ('&SYSLIST(6)'(1,1) NE '(').SKP26\n        ST     &SYSLIST(3,1),12(1)\n.SKP26  ANOP\n        AIF    ('&SYSLIST(7)'(1,1) NE '(').SKP27\n        ST     &SYSLIST(4,1),16(1)\n.SKP27  ANOP\n        AGO    .SVC\n.GRAPH_TEXT ANOP R1=A(X,Y,'text',text_length,color)\n        LA     0,GUI_GRAPH_TEXT\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),*-*,*-*,&SYSLIST(7))       X\n               R1=A(X,Y,'text',text_length,COLOR)   RPI217\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP28\n        ST     &SYSLIST(3,1),0(1)\n.SKP28  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP29\n        ST     &SYSLIST(4,1),4(1)\n.SKP29  ANOP\n        AIF    ('&SYSLIST(5)'(1,1) EQ '''').GRAPH_TEXT_LIT\n        AIF    ('&SYSLIST(5)'(1,1) EQ '(').GRAPH_TEXT_REG\n        LA     15,&SYSLIST(5)\n        ST     15,8(1)\n        AGO    .SVC\n.GRAPH_TEXT_LIT ANOP\n&TEXT   SETC   '&SYSLIST(5)'(2,K'&SYSLIST(5)-2)\n        LA     15,=C'&TEXT'\n        ST     15,8(1)\n&LTEXT  SETA   K'&TEXT\n        LA     15,&LTEXT RPI217\n        ST     15,12(1)\n        AGO    .SVC\n.GRAPH_TEXT_REG ANOP\n        ST     &SYSLIST(3,1),8(1)\n        AIF    ('&SYSLIST(6)'(1,1) NE '(').SKP30\n        ST     &SYSLIST(3,1),12(1)\n.SKP30  ANOP\n        AGO    .SVC\n.KEYBOARD ANOP\n        AIF    ('&MINOR' EQ 'READ').KEYBOARD_READ\n        MNOTE  12,'GUI KEYBOARD INVALID MINOR FUNCTION - &MINOR'\n        MEXIT\n.KEYBOARD_READ ANOP R1=A(mode,char,WAIT/NOWAIT)\n        LA     0,GUI_KEYBOARD_READ\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),GUI_&SYSLIST(5)) R1=A(mode,X\n               char,WAIT/NOWAIT)\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP31\n        ST     &SYSLIST(3,1),0(1)\n.SKP31  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP32\n        ST     &SYSLIST(4,1),4(1)\n.SKP32  ANOP\n        AGO    .SVC\n.MOUSE  ANOP\n        AIF    ('&MINOR' EQ 'READ').MOUSE_READ\n        MNOTE  12,'GUI MOUSE INVALID MINOR FUNCTION - &MINOR'\n        MEXIT\n.MOUSE_READ ANOP R1=A(x,y,left,right)\n        LA     0,GUI_MOUSE_READ\n        LA     1,=A(&SYSLIST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6)) R1X\n               =A(x,y,left,right)\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SKP33\n        ST     &SYSLIST(3,1),0(1)\n.SKP33  ANOP\n        AIF    ('&SYSLIST(4)'(1,1) NE '(').SKP34\n        ST     &SYSLIST(4,1),4(1)\n.SKP34  ANOP\n        AIF    ('&SYSLIST(5)'(1,1) NE '(').SKP35\n        ST     &SYSLIST(5,1),8(1)\n.SKP35  ANOP\n        AIF    ('&SYSLIST(6)'(1,1) NE '(').SKP36\n        ST     &SYSLIST(6,1),12(1)\n.SKP36  ANOP\n        AGO    .SVC\n.SOUND  ANOP\n        AIF    ('&MINOR' EQ 'PLAY').SOUND_PLAY\n        MNOTE  12,'GUI SOUND INVALID MINOR FUNCTION - &MINOR'\n        MEXIT\n.SOUND_PLAY ANOP R1=A(wav_file) DQ or null term\n        LA     0,GUI_SOUND_PLAY\n        AIF    ('&SYSLIST(3)'(1,1) NE '(').SOUND_PLAY_REG\n        LA     1,&SYSLIST(3) R1=A(wave_file) DQ or null terminated\n        AGO    .SVC\n.SOUND_PLAY_REG ANOP\n        ZOPTLR 1,&SYSLIST(3,1)\n        AGO    .SVC\n.SYMBOLS ANOP\nGUI_WINDOW_TITLE       EQU X'0101' GUI WINDOW,TITLE,'text'\nGUI_WINDOW_LOC         EQU X'0102' GUI WINDOW,LOC,x,y\nGUI_WINDOW_SIZE        EQU X'0103' GUI WINDOW,width,height\nGUI_WINDOW_FONT        EQU X'0104' GUI WINDOW,size (8-30)\nGUI_WINDOW_VIEW        EQU X'0105' GUI WINDOW,VIEW,type (0-3)\nGUI_WINDOW_VIEW_NONE   EQU 0       GUI WINDOW,VIEW,NONE window closed\nGUI_WINDOW_VIEW_MCS    EQU 1       GUI WINDOW,VIEW,MCS console log\nGUI_WINDOW_VIEW_SCREEN EQU 2       GUI WINDOW,VIEW,SCREEN,row,col,color\nGUI_WINDOW_VIEW_GRAPH  EQU 3       GUI WINDOW,VIEW,GRAPH,x,y,color\nGUI_WINDOW_GETVIEW     EQU X'0106' GUI WINDOW,GETVIEW return view 0-3\nGUI_SCREEN_READ        EQU X'0201' GUI SCREEN,READ,b,lb,WAIT/NOWAIT\nGUI_WAIT               EQU 1       GUI WAIT FOR KEYBOARD INPUT\nGUI_NOWAIT             EQU 0       GUI NOWAIT RETURN R15=4 IF NO INPUT\nGUI_SCREEN_WRITE       EQU X'0202' GUI SCREEN,WRITE,row,col,b,lb,color\nGUI_SCREEN_FIELD       EQU X'0203' GUI SCREEN,FIELD,row,col,length\nGUI_SCREEN_CURSOR      EQU X'0204' GUI SCREEN,CURSOR,row,col,type\nGUI_SCREEN_COLOR       EQU X'0205' GUI SCREEN,COLOR,bg_color,text_color\nGUI_GRAPH_POINT        EQU X'0301' GUI GRAPH,POINT,x,y,color\nGUI_GRAPH_LINE         EQU X'0302' GUI GRAPH,LINE,x1,y1,x2,y2,color\nGUI_GRAPH_FILL         EQU X'0303' GUI GRAPH,FILL,x1,y1,x2,y2,color\nGUI_GRAPH_TEXT         EQU X'0304' GUI GRAPH,TEXT,x,y,'text',color\nGUI_KEYBOARD_READ      EQU X'0401' GUI KEYBOARD,mode,char,WAIT/NOWAIT\nGUI_MOUSE_READ         EQU X'0501' GUI MOUSE,x,y,left,right\nGUI_BUTTON_DOWN        EQU 1 MOUSE BUTTON PRESSED DOWN\nGUI_BUTTON_UP          EQU 0 MOUSE BUTTON UP\nGUI_SOUND_PLAY         EQU X'0601' GUI SOUND,PLAY,wav_file\n         MEXIT\n.COLOR   ANOP\n         AIF   (N'&SYSLIST EQ 4).COLOR_RGB\n         AIF   ('&SYSLIST(2)' EQ 'RED').COLOR_RED\n         AIF   ('&SYSLIST(2)' EQ 'GREEN').COLOR_GREEN\n         AIF   ('&SYSLIST(2)' EQ 'BLUE').COLOR_BLUE\n         AIF   ('&SYSLIST(2)' EQ 'WHITE').COLOR_WHITE\n         AIF   ('&SYSLIST(2)' EQ 'BLACK').COLOR_BLACK\n         MNOTE 12,'GUI COLOR UNDEFINED - &SYSLIST(2)'\n         MEXIT\n.COLOR_RGB ANOP\n&N       DC    AL1(0,&SYSLIST(2),&SYSLIST(3),&SYSLIST(4)) RGB COLOR\n         MEXIT\n.COLOR_RED ANOP\n         DC    AL1(0,255,0,0) RGB RED COLOR\n         MEXIT\n.COLOR_GREEN ANOP\n         DC    AL1(0,0,255,0) RGB GREEN COLOR\n         MEXIT\n.COLOR_BLUE ANOP\n         DC    AL1(0,0,0,255) RGB BLUE COLOR\n         MEXIT\n.COLOR_BLACK ANOP\n         DC    AL1(0,0,0,0) RGB BLACK COLOR\n         MEXIT\n.COLOR_WHITE ANOP\n         DC    AL1(0,255,255,255) RGB WHITE COLOR\n         MEXIT\n.SVC     ANOP\n         SVC   84 GUAM R0LL=MAJOR/MINOR\n         MEND\n./ ADD NAME=IF       0100-14178-14178-0013-00084-00084-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     03/27/74.\n.*             REMARKS.  CONTROL STRUCTURE FOR CONDITIONAL EXECUTION.\n.********************************************************************\n.* 05/23/76 DSH - SUPPORT ELSEIF.\n.* 05/15/06 RPI 316 UPDATE FOR COMPAT.\n.* 04/11/07 RPI     USE ZSTRGBL COPY AND EXPAND LEVELS TO 100\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         IF\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)\n               MNOTE 8,'IF - LEVEL OVERFLOW'\n               MEXIT\n         AEND\n         :&ZSTR_LVL SETA &ZSTR_LVL+1\n         :&ZSTR_AIF_CNT SETA &ZSTR_AIF_CNT+1   IF COUNTER\n         :&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_AIF_CNT\n         :&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'IF'\n         :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA 2     IF BLK/LAB COUNTER\n         :&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 0     ELSE RESET\n         :&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 0     END LABEL RESET\n         :&AND_CONN SETB 1             ASSUME AND CONNECTOR IF ANY\n         :&N   SETA N'&SYSLIST         TOTAL TEST AND CONNECTOR PARMS\n         :&S   SETA 1                  OPERAND INDEX\n         :&BLK_CNT SETA 1              LAB FOR THIS BLOCK USED BY OR\n         AWHILE (&S LE &N)\n               :&SN SETA  N'&SYSLIST(&S)        TEST OPERANDS\n               :&OP SETC  '&SYSLIST(&S,1)'      TEST OPCODE\n               AIF (&SN EQ 1)  COMPARE NOT IN QUOTES\n                   AIF (&N LT &S+3)\n                       MNOTE 8,'IF - TEST SUBLIST LENGTH INVALID - &SYSX\n               LIST(&S)'\n                       MEXIT\n                   AEND\n                   :&BC SETC  '&SYSLIST(&S+2)'  TEST COMPARE MASK\n                   :&OPR SETC '&SYSLIST(&S+1),&SYSLIST(&S+3)'\n                   :&S       SETA  &S+4-1     POS TO TEST END-1\n               AELSEIF (&SN EQ 4)  OPERAND IN QUOTES WITH CONNECTORS\n                   :&BC      SETC  '&SYSLIST(&S,3)'\n                   :&OPR     SETC  '&SYSLIST(&S,2),&SYSLIST(&S,4)'\n               AEND\n               AIF   (&AND_CONN)    IF AND EXIT IF COMPARE FAILS\n         &OP   &OPR\n         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX\n               TR_LVL)\n               AELSE                IF OR  EXEC BLOCK IF TEST OK\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n                    :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTX\n               R_LVL)+1\n         &OP   &OPR\n         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX\n               TR_LVL)\n               AEND\n               :&S SETA  &S+1       ADVANCE TO CONNECTOR OR END\n               AIF (&S LE &N)\n                   :&SN SETA N'&SYSLIST(&S)\n                   AIF (&SN NE 1)\n                       MNOTE 8,'IF - INVALID CONNECTOR'\n                       MEXIT\n                   AEND\n                   AIF   ('&SYSLIST(&S)' EQ 'OR')\n         B     #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT\n                       :&AND_CONN SETB 0\n                   AELSEIF  ('&SYSLIST(&S)' EQ 'AND')\n                       :&AND_CONN SETB 1\n                   AELSE\n                       MNOTE 8,'IF - INVALID CONNECTOR'\n                       MEXIT\n                   AEND\n                   :&S SETA &S+1\n                   AIF (&S GT &N)\n                       MNOTE 8,'IF - MISSING TEST AFTER CONNECTOR'\n                       MEXIT\n                   AEND\n               AEND\n         AEND\n         AIF   (NOT &AND_CONN)\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT DS 0H\n         AEND\n         MEND\n./ ADD NAME=IHADCBE  0100-14178-14178-0013-00016-00016-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 05/05/06 RPI 281 ADD DCBE SUPPORT FOR EODAD= AND SYNAD=\n.*********************************************************************\n.* See DCB DCBE= and DCBD  DCBDCBE field\n.*********************************************************************\n         MACRO\n         IHADCBE\nIHADCBE  DSECT\nDCBEEODA DS    A\nDCBESYNA DS    A\n         MEND\n./ ADD NAME=IHAEPIE  0100-14178-14178-0013-00061-00061-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 05/01/06 RPI 305 - define DSECT for ESPIE PIE control block\n.* 06/17/08 RPI 845 - rename from EPIED to IHAEPIE macro and change\n.*          offsets to be z/OS compatible with 64 bit reg flag on.\n.*********************************************************************\n         MACRO\n         IHAEPIE\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'IHAEPIE UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.*  ESPIE EXTENDED PROGRAM INTERRUPTION ELEMENT (EPIE)\n.*\n.*  ESPIE EXIT MUST MODIFY PSW AND ANY REGS BEFORE BR 14 EXIT\n.*\nEPIE     DSECT\nEPIEEPIE DS    CL4   C'EPIE'\nEPIEPARM DS    A     A(PARAM PASSED AT ESPIE OR 0)\n         DS    16F   32 bit regs not used by z390 (see EPIEG64)\nEPIEPSW  DS    0XL8  (OLD PSW  (EC 24/31 BIT ONLY)\nEPIEEMK1 DS    X     PSW MASK\nEPIEMWP1 DS    X     PSW KEY AND MWP\nEPIECCPM DS    X     PSW CONDITION CODE AND PGM MASK\n         DS    X     RESERVED\nEPIENXT1 DS    0F    PSW 31 BIT ADDR NEXT INSTRUCTION\nEPIEAMF1 DS    X     PSW ADDRESS HIGH BYTE WITH AMODE BIT\nEPIEMOD1 EQU   X'80' PSW 31 BIT AMODE BIT\nEPIEADD1 DS    XL3   PSW 24 BIT ADDRESSS OF NEXT INSTRUCTION\nEPIEINT  DS    0XL4  PROGRAM INTERRUPTION INFO\nEPIEIRSV DS    XL1   RESERVED\nEPIEILC1 DS    B     INSTRUCTION LENGTH BYTE\nEPIEIL1  EQU   X'06' INSTRUCTION LENGTH MASK (2, 4, 6 LENGTH)\nEPIEINC1 DS    0CL2  INTERRUPTION CODE\n         ORG   EPIE+X'99'\nEPIEFLGS DS    XL1   EPIE OPTION FLAGS\nEPIEUP64 EQU   X'40' USE 64 BIT REGS INSTEAD OF 32 BIT\n         DS    XL6   RESERVED\nEPIEG64   DS   0D\nEPIEG6400 DS   D\nEPIEG6401 DS   D\nEPIEG6402 DS   D\nEPIEG6403 DS   D\nEPIEG6404 DS   D\nEPIEG6405 DS   D\nEPIEG6406 DS   D\nEPIEG6407 DS   D\nEPIEG6408 DS   D\nEPIEG6409 DS   D\nEPIEG6410 DS   D\nEPIEG6411 DS   D\nEPIEG6412 DS   D\nEPIEG6413 DS   D\nEPIEG6414 DS   D\nEPIEG6415 DS   D\nEPIELEN  EQU   *-EPIE\n         MEND\n./ ADD NAME=IHASDWA  0100-14178-14178-0013-00042-00042-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 05/01/06 RPI 305 - define DSECT for ESTAE PIE control block\n.* 06/21/08 RPI 845 - change name from ESTAD.NAC to IHAESTA.MAC\n.*                    and redefine fields for z/OS compatibility\n.*                    Note ESTAPSW and ESTAG64 removed as only\n.*                    restart request allowed via R15=4, R0=restart\n.* 06/22/08 RPI 845 - add IHASDWA passed to ESTAE exit in R1 for\n.*                    access to SDWAEC1 EC PSW and SDWAG64 regs\n.*                    in SDWARC4 extension.\n.*********************************************************************\n.* SYSTEM DIAGNOSTIC WORK AREA PASSED TO ESTA EXIT IN R1\n.*  1.  Abend code stored in SDWAABSS\n.*  2.  PSW at abend stored in SDWAEC1\n.*  3.  16 - 64 bit GPR regs stored in SDWAG64 in SDWARC4 extension\n.*  4.  For restart set R0 to new PSW address, and R15=4\n.*  5.  All GPR's are restored from SDWAG64 on restart.\n.*********************************************************************\n         MACRO\n         IHASDWA\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'IHASDWA NSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\nSDWA     DSECT\nSDWAPARM DS    A    ESTAE PARM ADDRESS\nSDWAABSS DS    0BL4 COMPLETION CODE\nSDWACMPF DS    B    COMPLETION CODE FLAGS\nSDWACMPC DS    BL3  COMPLETION CODE (FIRST 12 BITS SYS,LAST 12 USER)\n         ORG   SDWA+X'68'\nSDWAEC1  DS    XL8  EXTENDED CONTROL PSW AT ERROR\n         ORG   SDWA+X'170'\nSDWAXPAD DS    A    ADDR OF POINTERS EXTENSION SDWAPTRS\nSDWAPTRS DSECT\n         ORG   SDWAPTRS+X'18'\nSDWAXEME DS    A    ADDR OF 64 BIT REGISTER INFO\nSDWARC4  DSECT\nSDWAG64  DS    16XL8 16 - 64 BIT GPRS AT ERROR\n         MEND\n./ ADD NAME=KSIRD    0100-14178-14178-0013-00050-00050-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/26/07                                                 *\n.*********************************************************************\n.* 11/26/07 INITIAL CODING OF KSIR KSDS INSERT TREE RECORD CONTROL BLK\n.* 01/08/08 RPI 723 REVERSE FWD/BWD FOR CONSISTENCE WITH LOW/HIGH SEQ\n.* 02/18/08 RPI 807 ADD KSIRLOWH AND KSIRHGHH\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n         KSIRD\n.*\n.* IF KSIR ALREADY DEFINED EXIT NOW\n.*\n         GBLB  &Z390_KSIR\n         GBLC  &Z390_KSIR_NAME,&Z390_KSIR_TYPE\n         AIF   (&Z390_KSIR).EXIT\n&Z390_KSIR     SETB 1\n&Z390_KSIR_NAME SETC '&SYSLOC'\n&Z390_KSIR_TYPE SETC '&SYSSTYP'\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'KSIR UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.*       KEYED SEQUENTIAL INSERT RECORD CONTROL BLOCK\n.*\n.*       IF VX0 INDEX XRBA HIGH BIT (HB) THEN IT POINTS TO VES KSIT\n.*       KSITTOP - XRBA TO TOP   KSIR IN BALANCED TREE\n.*       KSITFST - XRBA TO FIRST KSIR IN TREE FOR SEQ FWD\n.*       KSITLST - XRBA TO LAST  KSIR IN TREE FOR SEQ BWD\n.*\nIHAKSIR  DSECT\nKSIRID   DS   CL4 KSIT ID C'KSIR'\nKSIRPAR  DS   XL8 XRBA TO PARENT KSIR OR KSIT IN AVL BALANCED TREE\nKSIRLOW  DS   XL8 XRBA TO NEXT LOWEST  KSIR NODE IN TREE OR -1\nKSIRHIGH DS   XL8 XRBA TO NEXT HIGHEST KSIR NODE IN TREE OR -1\nKSIRBWD  DS   XL8 XRBA TO NEXT LOWEST  KSIR IN TREE OR -1\nKSIRFWD  DS   XL8 XRBA TO NEXT HIGHEST KSIR IN TREE OR -1\nKSIRREC  DS   XL8 XRBA TO RECORD OR -1 IF DELETED\nKSIRLHT  DS   X   LOW  BRANCH AVL TREE HEIGHT (0-63)\nKSIRHHT  DS   X   HIGH BRANCH AVL TREE HEIGHT (0-63)\nKSIRLEN  EQU  *-IHAKSIR\n          AIF  ('&Z390_KSIR_NAME' EQ '' OR '&Z390_KSIR_TYPE' EQ '').EXIX\n               T\n&Z390_KSIR_NAME &Z390_KSIR_TYPE\n.EXIT    ANOP\n         MEND\n./ ADD NAME=KSITD    0100-14178-14178-0013-00043-00043-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/26/07                                                 *\n.*********************************************************************\n.* 11/26/07 INITIAL CODING OF KSIT KSDS INSERT TREE CONTROL BLOCK\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n         KSITD\n.*\n.* IF KSIT ALREADY DEFINED EXIT NOW\n.*\n         GBLB  &Z390_KSIT\n         GBLC  &Z390_KSIT_NAME,&Z390_KSIT_TYPE\n         AIF   (&Z390_KSIT).EXIT\n&Z390_KSIT     SETB 1\n&Z390_KSIT_NAME SETC '&SYSLOC'\n&Z390_KSIT_TYPE SETC '&SYSSTYP'\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'KSIT UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.*       KEYED SEQUENTIAL INSERT TREE CONTROL BLOCK\n.*\n.*       IF VX0 INDEX XRBA IS NEG, IT POINTS TO KSIT INSERT TREE CB\n.*       KSITTOP - XRBA TO TOP   KSIR AT TOP OF BALANCED TREE\n.*       KSITFST - XRBA TO FIRST KSIR IN TREE FOR SEQ FWD\n.*       KSITLST - XRBA TO LAST  KSIR IN TREE FOR SEQ BWD\n.*\nIHAKSIT  DSECT\nKSITID   DS   CL4 KSIT ID C'KSIT'\nKSITTOP  DS   XL8 TOP   XRBA TO TOP KSIR IN BALANCED TREE\nKSITFST  DS   XL8 FIRST XRBA TO FIRST (LOWEST)  KSIR IN TREE\nKSITLST  DS   XL8 LAST  XRBA TO LAST  (HIGHEST) KSIR IN TREE\nKSITLEN  EQU  *-IHAKSIT\n          AIF  ('&Z390_KSIT_NAME' EQ '' OR '&Z390_KSIT_TYPE' EQ '').EXIX\n               T\n&Z390_KSIT_NAME &Z390_KSIT_TYPE\n.EXIT    ANOP\n         MEND\n./ ADD NAME=LINK     0100-14178-14178-0013-00138-00138-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27  - issue error for any undefined operands\n.* 10/21/05 RPI41  - add PARAM= and VL= support\n.* 11/13/05 RPI89  - add support for DDNAME= and DSNAME=\n.* 11/16/05 RPI95  - add DDNAME= and DSNAME= conflict checking\n.* 11/19/05 RPI102 - allow DDNAME or DSNAME to replace EP or EPLOC\n.* 12/06/05 RPI118 - use SR vs LA, reg chk, drop BALR/USING, fix VL\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 03/28/06 RPI266 CORRECT MISSING .DSNERR LABEL (WAS .DSHERR)\n.* 04/11/06 RPI244 SUPPORT DE=, UNSUPPORTED ERRET=\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 03/04/12 RPI 1194 support single parm without (...)\n.*********************************************************************\n.* LOAD AND EXEC PGM VIA SVC 6\n.*   R0  = ADDR PGM NAME (8 BYTES SPACE FILLED)\n.*   R15 = 0    USE SYS390 DEFAULT PATH FROM EZ390 PARM\n.*   R15 = ADDR DSNAME FILE SPEC IF HIGH BIT OFF (NULL OR DQ DELIMITED)\n.*   R15 = ADDR DDNAME IF HIGH BIT ON (8 BYTES SPACE FILLED)\n.* NOTES:\n.*   1.  DSNAME OR DDNAME MAY BE 1 OR MORE DIRECTORY PATHS TO SEARCH\n.*       OR THEY MAY BE PATH AND FILE NAME WHICH OVERRIDES EP/EPLOC\n.*   2.  RETURN CODE SET BY CALLED PGM IF SUCCESSFUL\n.*   3.  ABEND WITH S806\n.*********************************************************************\n&N       LINK  &DCB=,         IGNORED                                  X\n               &DDNAME=,      LOAD FROM DIR OR FILE DEFINED IN ENV.VAR X\n               &DE=,          BLDL DIRECTORY ENTRY                     X\n               &DSNAME=,      LOAD FROM RX OR (REG) FILE SPEC          X\n               &EP=,          PGMNAME 1-8 CHAR                         X\n               &EPLOC=,       RX LABEL OR (REG) POINTER TO PGM FIELD   X\n               &ERRET=,       ERROR EXIT NOT SUPPORTED                 X\n               &ID=,          IGNORED                                  X\n               &LSEARCH=,     IGNORED                                  X\n               &MF=I,         NOT SUPPORTED                            X\n               &PARAM=,       PARAMETER LIST                           X\n               &VL=1          SET HIGH BIT IN LAST PARM ADDR\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR2\n         AIF   (N'&SYSLIST LE 0).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(1)'\n         MEXIT\n.NPOK    ANOP\n         AIF    ('&ERRET' NE '').ERR1\n         AIF    ('&PARAM' EQ '').ENDPARM\n         AIF    ('&PARAM'(1,1) NE '(').ONEPARM RPI 1194\n         LA     1,=A&PARAM\n         AGO    .ONESKIP\n.ONEPARM ANOP\n         LA     1,=A(&PARAM)\n.ONESKIP ANOP\n         AIF    (&VL NE 1).ENDPARM\n&OFF     SETA   N'&PARAM*4-4\n         OI     &OFF.(1),X'80'\n.ENDPARM ANOP\n         AIF   ('&DE' NE '').DE\n         AIF   ('&EP' NE '').EP\n         AIF   ('&EPLOC' NE '').EPLOC\n         SR    0,0\n         AIF   ('&DDNAME' NE '' OR '&DSNAME' NE '').CHKDSN\n         MNOTE 12,'LINK REQUIRES EP, EPLOC, DDNAME, OR DSNAME'\n         MEXIT\n.DE      ANOP\n         AIF   ('&DE'(1,1) EQ '(').DEREG\n         LA    0,&DE\n         AGO   .DEADD\n.DEREG ANOP\n         ZOPTLR 0,&DE(1)\n.DEADD   ANOP\n         AHI   0,2\n         AIF   ('&EP' EQ '' AND '&EPLOC' EQ '').CHKDSN\n         MNOTE 12,'LINK DE EP AND EPLOC ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.EP      ANOP\n         LA    0,=CL8'&EP'\n         AGO   .CHKDSN\n.EPLOC   ANOP\n         AIF   ('&EPLOC'(1,1) EQ '(').EPLOCREG\n         LA    0,&EPLOC\n         AGO   .CHKDSN\n.EPLOCREG ANOP\n         AIF   ('&EPLOC(1)' EQ '1' OR '&EPLOC(1)' EQ 'R1').EPERR\n         ZOPTLR 0,&EPLOC(1)\n         AGO   .CHKDSN\n.EPERR   ANOP\n         MNOTE 12,'LINK INVALID EPLOC REG'\n         MEXIT\n.CHKDSN  ANOP\n         AIF   ('&DSNAME' EQ '').CHKDD\n         AIF   ('&DDNAME' EQ '').DSNOK\n         MNOTE 12,'LINK DSNAME AND DDNAME ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.DSNOK   ANOP\n         AIF   ('&DSNAME'(1,1) EQ '(').DSNREG\n         LA    15,&DSNAME\n         AGO   .SVC\n.DSNREG  ANOP\n         AIF   ('&DSNAME(1)' EQ '0' OR '&DSNAME(1)' EQ 'R0').DSNERR\n         ZOPTLR 15,&DSNAME(1)\n         AGO   .SVC\n.DSNERR  ANOP\n         MNOTE 12,'LINK INVALID DSNAME REG'\n         MEXIT\n.CHKDD   ANOP\n         AIF   ('&DDNAME' EQ '').DEFPATH\n         AIF   ('&DDNAME'(1,1) EQ '(').DDREG\n         LA    15,=CL8'&DDNAME'\n         OILH  15,X'8000' DD VS DSN\n         AGO   .SVC\n.DDREG   ANOP\n         AIF   ('&DDNAME(1)' EQ '0' OR '&DDNAME(1)' EQ 'R0').DDERR\n         ZOPTLR 15,&DDNAME(1)\n.SKP1    ANOP\n         OILH  15,X'8000' DD VS DSN\n         AGO   .SVC\n.DDERR   ANOP\n         MNOTE 12,'LINK INVALID DDNAME REG'\n         MEXIT\n.DEFPATH ANOP\n         SR    15,15 USE DEFAULT SYS390 SEARCH\n.SVC     ANOP\n         SVC    6 LINK R0=A(PGM) R1-PARMS R15=DDNAME/DSNAME ADDR OR 0\n         MEXIT\n.ERR1    MNOTE 12,'LINK ERRET= UNSUPPORTED'\n         MEXIT\n.ERR2    MNOTE 12,'LINK MF= UNSUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=LOAD     0100-14178-14178-0013-00142-00142-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27  - issue error for any undefined operands\n.* 10/20/05 RPI89  - issue error for any undefined operands\n.* 11/16/05 RPI95  - add DDNAME and DSNAME support and doc RC\n.* 11/19/05 RPI102 - allow DDNAME/DSNAME to replace EP/EPLOC\n.* 12/06/05 RPI118 - use SR vs LA, reg chk, drop BALR/USING, fix VL\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 03/28/06 RPI266 CORRECT MISSING .SKP1 TO .SKPLR1\n.* 04/11/06 RPI244 ERROR ON UNSUPPORTED KEYWORDS, SUPPORT DE=,LOADPT=\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 10/23/08 RPI 921 add support for ERRET= exit on load error, ZSTRMAC\n.*********************************************************************\n.* LOAD PGM VIA SVC 8\n.*\n.* INPUT\n.*   R0  = ADDR PGM NAME (8 BYTES SPACE FILLED)\n.*   R15 = 0    USE SYS390 DEFAULT PATH FROM EZ390 PARM\n.*   R15 = ADDR DSNAME FILE SPEC IF HIGH BIT OFF (NULL OR DQ DELIMITED)\n.*   R15 = ADDR DDNAME IF HIGH BIT ON (8 BYTES SPACE FILLED)\n.*\n.* OUTPUT\n.*   R0  = LOAD ADDRESS\n.*   R15 = O IF SUCCESSFUL\n.*   R15 = 4 IF LOAD FAILED\n.*\n.* NOTES:\n.*   1.  DSNAME OR DDNAME MAY BE 1 OR MORE DIRECTORY PATHS TO SEARCH\n.*       OR THEY MAY BE PATH AND FILE NAME WHICH OVERRIDES EP/EPLOC\n.*********************************************************************\n&N       LOAD  &DCB=,     IGNORED                                      X\n               &DDNAME=,  1 TO 8 CHARACTER DDNAME                      X\n               &DE=,      BLDL ENTRY                                   X\n               &DSNAME=,  RX LABEL OR (REG) > NULL OR \"..\" DIR/DSN     X\n               &EP=,      1 TO 8 CHARACTER PROGRAM NAME                X\n               &EPLOC=,   RX LABEL OR (REG) > OF 8 BYTE PGM NAME       X\n               &ERRET=,   NOT UNSUPPORTED                              X\n               &EXTINFO=, IGNORED                                      X\n               &LSEARCH=, IGNORED                                      X\n               &LOADPT=,  STORE LOAD ADDRESS                           X\n               &MF=I,     NOT SUPPORTED                                X\n               &RELATED=  IGNORED\n       AIF   ('&N' NE '')\n&N       DS    0H\n       AEND\n       AIF   ('&MF' NE 'I')\n               MNOTE 12,'LOAD MF= NOT SUPPORTED'\n               MEXIT\n       AEND\n       AIF   (N'&SYSLIST NE 0)\n               MNOTE 12,'LOAD UNSUPPORTED OPERANDS - &SYSLIST(1)'\n               MEXIT\n       AEND\n       AIF   ('&DE' NE '')\n               AIF   ('&DE'(1,1) EQ '(')\n         ZOPTLR 0,&DE(1)\n               AELSE\n         LA    0,&DE\n               AEND\n         AHI   0,2\n               AIF   ('&EP' NE '' OR '&EPLOC' NE '')\n                     MNOTE 12,'LOAD DE EP EPLOC MUTUALLY EXCLUSIVE'\n                     MEXIT\n               AEND\n       AELSEIF ('&EP' NE '')\n         LA    0,=CL8'&EP'\n               AIF   ('&EPLOC' NE '')\n                     MNOTE 12,'LOAD  EP AND EPLOC MUTUALLY EXCLUSIVE'\n                     MEXIT\n               AEND\n       AELSEIF ('&EPLOC' NE '')\n               AIF   ('&EPLOC'(1,1) EQ '(')\n         ZOPTLR 0,&EPLOC(1)\n               AELSE\n         LA    0,&EPLOC\n               AEND\n       AELSE\n         SR    0,0\n               AIF   ('&DDNAME' EQ '' AND '&DSNAME' EQ '')\n                     MNOTE 12,'LOAD REQUIRES DE, EP, EPLOC, DDNAME, OR X\n               DSNAME'\n                     MEXIT\n               AEND\n       AEND\n       AIF   ('&DSNAME' EQ '')\n             AIF   ('&DDNAME' EQ '')\n         SR    15,15 USE DEFAULT SYS390 SEARCH\n               AELSE\n                   AIF   ('&DDNAME'(1,1) EQ '(')\n                         AIF   ('&DDNAME(1)' EQ '0' OR '&DDNAME(1)' EQ X\n               'R0')\n                               MNOTE 12,'LOAD DDNAME INVALID REG'\n                               MEXIT\n                         AEND\n         ZOPTLR 15,&DDNAME(1)\n                   AELSE\n         LA    15,=CL8'&DDNAME'\n                   AEND\n         OILH  15,X'8000' DD VS DSN\n               AEND\n       AELSE\n               AIF   ('&DDNAME' NE '')\n                     MNOTE 12,'LOAD DSNAME AND DDNAME MUTUALLY EXCLUSIVX\n               E'\n                     MEXIT\n               AEND\n               AIF   ('&DSNAME'(1,1) NE '(')\n         LA    15,&DSNAME\n               AELSE\n                   AIF   ('&DSNAME(1)' EQ '0' OR '&DSNAME(1)' EQ 'R0')\n                         MNOTE 12,'LOAD DSNAME INVALID REG'\n                         MEXIT\n                   AEND\n         ZOPTLR 15,&DSNAME(1)\n               AEND\n         AEND\n         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0\n         AIF   ('&LOADPT' NE '')\n               AIF   ('&LOADPT'(1,1) EQ '(')\n         ST    0,0(&LOADPT(1))\n               AELSE\n         ST    0,&LOADPT\n               AEND\n         AEND\n         AIF   ('&ERRET' NE '')             RPI 921\n         LTR   15,15\n               AIF  ('&ERRET'(1,1) EQ '(')\n         BNZR  &ERRET(1)\n               AELSE\n         BNZ   &ERRET\n               AEND\n         AEND\n         MEXIT\n         MEND\n./ ADD NAME=LX       0100-14178-14178-0013-00016-00016-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 04/28/06 RPI 298 CORRECT TO LOAD REGISTER PAIR AT R AND R+2\n.*********************************************************************\n&N       LX    &R1,&S2   LOAD  LH/LB\n&N       LA    15,&S2\n         LD    &R1,0(15)\n         LD    &R1+2,8(15)\n         MEND\n\n./ ADD NAME=MODCB    0100-14178-14178-0013-00183-00183-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 08/10/07 INITIAL CODING TO SUPPORT AREA, RECLEN INITIALLY\n.* 08/22/07 RPI 680  CORRECT REPLRECL\n.* 08/27/07 RPI 688  SUPPORT RPL=(REG)\n.* 09/03/07 RPI 690  ADD ARG= AND OPTCD= SUPPORT\n.* 09/03/07 RPI 672  FIX 3 MISSPELLED LABELS,&OPTCDF,OPTF1/2,&MODS ERRS\n.*          ADD CROSS CHECK FOR ACB/RPL OPTION MATCHS\n.* 09/15/07 RPI 696  ADD SUPPORT FOR RPL OPTCD FWD DEFAULT OPTION SET\n.*          ADD RPL FIELD ACB ADDR\n.* 09/17/07 RPI 682  ADD ACB DDNAME, DSNAME, VCLRN,\n.*          and use  ZGENMACF and ZGENOPTD\n.* 09/19/07 RPI 697  SET RC=0\n.* 12/08/07 RPI 750  ADD RPL KEYLEN= PARM FOR GENERIC KEY LENGTH\n.* 04/19/08 RPI 833  add SETC quotes for HLASM compatibility\n.* 04/23/09 RPI 1023 jm1 MNOTE 4 instead of 12 if STRNO specified\n.* 04/23/09 RPI 1023 jm2 MODCB generates OI and NI instead of MVI\n.* 04/23/09 RPI 1023 jm3 support for AREALEN\n.*********************************************************************\n&N       MODCB &ACB=,        ACB CONTROL BLOCK ADDRESS (ALSO RPL FIELD)X\n               &DDNAME=,     ACB DDNAME FOR VCDT VSAM CATALOG.ENTRY    X\n               &DSNAME=,     ACB DSNAME OVERRIDE ADDR VCDT CAT.ENTRY   X\n               &MACRF=,      ACB OPTIONS                               X\n               &VCLRN=,      ACB VCDT CATALOG DEFAULT ENTRY NAME       X\n               &RPL=,        RPL REQUEST PARAMATER LIST ADDRESS        X\n               &AREA=,       RPL ADDR OF RECORD AREA                   X\n               &AREALEN=,    RPL AREA LENGTH       jm3                 X\n               &ARG=,        RPL ADDR OF ARG FOR KEY/REC#/RBA/XRBA     X\n               &KEYLEN=,     RPL GENERIC KEY LENGTH OR ZERO TO USE DEF X\n               &OPTCD=,      RPL OPTION FLAGS                          X\n               &RECLEN=,     RPL RECORD LENGTH                         X\n               &STRNO=       UNSUPPORTED ERROR     jm1\n         LCLB  &MODS         SET IF MOD FOUND\n&NPOS    SETA  N'&SYSLIST\n.POSLOOP ANOP\n         AIF   (&NPOS EQ 0).POSEND\n         MNOTE 12,'MODCB UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'\n&NPOS    SETA  &NPOS-1\n         AIF   (&NPOS GT 0).POSLOOP\n         MEXIT\n.POSEND  ANOP\n         AIF   ('&STRNO'  EQ '').NO_STRNO\n         MNOTE 4,'MODCB STRNO NOT SUPPORTED YET - IGNORED'  jm1\n&MODS    SETB   1\n.NO_STRNO ANOP\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n.*\n.*  CHECK ACB FIELDS\n.*\n         AIF   ('&ACB'  EQ '').CHK_RPL_FIELDS\n         AIF   ('&DDNAME' NE '').DDNAME\n.DDNAME_END ANOP\n         AIF   ('&DSNAME' NE '').DSNAME\n.DSNAME_END ANOP\n         AIF   ('&MACRF'  NE '').MACRF\n.MACRF_END ANOP\n         AIF   ('&VCLRN' NE '').VCLRN\n.VCLRN_END ANOP\n.*\n.* CHECK RPL FIELDS\n.*\n.CHK_RPL_FIELDS ANOP\n         AIF   ('&RPL'  EQ '').CHK_MODS\n         AIF   ('&ACB'  NE '').ACB\n.ACB_END ANOP\n         AIF   ('&AREA' NE '').AREA\n.AREA_END ANOP\n         AIF   ('&ARG'    NE '').ARG\n.ARG_END ANOP\n         AIF   ('&KEYLEN' NE '').KEYLEN\n.KEYLEN_END ANOP\n         AIF   ('&OPTCD'  NE '').OPTCD\n.OPTCD_END ANOP\n         AIF   ('&RECLEN' NE '').RECLEN\n.RECLEN_END ANOP\n         AIF   ('&AREALEN' NE '').AREALEN    jm3\n.AREALEN_END ANOP\n.*\n.* CHECK IF ANY FIELDS FOUND\n.*\n.CHK_MODS ANOP\n         AIF   (&MODS).EXIT\n         MNOTE 12,'MODCB NO SUPPORTED FIELDS FOUND'\n         MEXIT\n.EXIT    ANOP\n         SR    15,15\n         MEXIT\n.*\n.* MODIFY ACB DDNAME\n.*\n.DDNAME  ANOP\n&MODS    SETB   1\n         ZMODCB &ACB,ACBDDNAM-IHAACB,&DDNAME,8\n         AGO   .DDNAME_END\n.*\n.* MODIFY ACB DSNAME\n.*\n.DSNAME  ANOP\n&MODS    SETB   1\n         ZMODCB &ACB,ACBDSNAM-IHAACB,&DSNAME,4\n         AGO   .MACRF_END\n.*\n.* MODIFY ACB MACRF\n.*\n.MACRF   ANOP\n         GBLC  &ZGENMACF1,&ZGENMACF2,&ZGENMACF3,&ZGENMACF4\n         ZGENMACF MACRF=&MACRF\n&MODS    SETB   1\n         ZMODCB &ACB,ACBMACR1-IHAACB,B'&ZGENMACF1',1\n         ZMODCB &ACB,ACBMACR2-IHAACB,B'&ZGENMACF2',1\n         ZMODCB &ACB,ACBMACR3-IHAACB,B'&ZGENMACF3',1\n         ZMODCB &ACB,ACBMACR4-IHAACB,B'&ZGENMACF4',1\n         AGO   .MACRF_END\n.*\n.* MODIFY ACB VCLRN VCDT VSAM CATALOG ENTRY DEFAULT NAME\n.*\n.VCLRN  ANOP\n&MODS    SETB   1\n         ZMODCB &ACB,ACBVCLRN-IHAACB,&VCLRN,8\n         AGO   .VCLRN_END\n.*\n.* MODIFY RPL ACB ADDRESS FIELD    RPI 696\n.*\n.ACB     ANOP\n&MODS    SETB   1\n         ZMODCB &RPL,RPLACB-IHARPL,&ACB,4\n         AGO   .ACB_END\n.*\n.* MODIFY RPL AREA\n.*\n.AREA    ANOP\n&MODS    SETB   1\n         ZMODCB &RPL,RPLAREA-IHARPL,&AREA,4\n         AGO   .AREA_END\n.*\n.* MODIFY RPL ARG\n.*\n.ARG     ANOP\n&MODS    SETB   1\n         ZMODCB &RPL,RPLARG-IHARPL,&ARG,4\n         AGO    .ARG_END\n.*\n.* MODIFY RPL KEYLEN\n.*\n.KEYLEN  ANOP\n&MODS    SETB   1\n         ZMODCB &RPL,RPLLKEY-IHARPL,&KEYLEN,4\n         AGO    .KEYLEN_END\n.*\n.* MODIFY RPL OPTCD\n.*\n.OPTCD   ANOP\n         GBLC   &ZGENOPT1,&ZGENOPT2\n         GBLC   &XGENOPT1,&XGENOPT2                               jm2\n         ZGENOPTD OPTCD=&OPTCD\n&MODS    SETB   1\n         ZMODCB &RPL,RPLOPT1-IHARPL,B'&ZGENOPT1',1,B'&XGENOPT1'   jm2\n         ZMODCB &RPL,RPLOPT2-IHARPL,B'&ZGENOPT2',1,B'&XGENOPT2'   jm2\n         AGO   .OPTCD_END\n.*\n.* MODIFY RPL LREC\n.*\n.RECLEN  ANOP\n&MODS    SETB   1\n         ZMODCB &RPL,RPLLREC-IHARPL,&RECLEN,4\n         AGO   .RECLEN_END\n.*\n.* MODIFY RPL AREALEN\n.*\n.AREALEN ANOP\n&MODS    SETB   1\n         ZMODCB &RPL,RPLLAREA-IHARPL,&AREALEN,4                    jm3\n         AGO   .AREALEN_END\n.*\n         MEND\n./ ADD NAME=OPEN     0100-14178-14178-0013-00016-00016-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 04/15/08 RPI 838 CHANGE OPEN, CLOSE, READ, WRITE TO CALL Z VERSION\n.*********************************************************************\n&N       OPEN  &DCBLIST,   ((DCB,OPT),(DCB,OPT),,) OR DCB OR (REG)     X\n               &MF=I,      NOT SUPPORTED                               X\n               &MODE=31,   IGNORED AS IT WORKS IN BOTH                 X\n               &TYPE=      FLAG TYPE J AS UNSUPPORTED\n&N       ZOPEN &DCBLIST,MF=&MF,MODE=&MODE,TYPE=&TYPE\n         MEND\n./ ADD NAME=OTHRWISE 0100-14178-14178-0013-00030-00030-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPMS FOR SELECT,WHEN,OTHRWISE,ENDSEL\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         OTHRWISE  &VALUE\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ 0)\n               MNOTE 8,'OTHRWISE - MISSING SELECT'\n               MEXIT\n         AEND\n         AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')\n               MNOTE 8,'OTHRWISE - MISSING SELECT'\n               MEXIT\n         AEND\n         AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)\n               MNOTE 8,'OTHRWISE - MISSING WHEN'\n               MEXIT\n         AEND\n         AIF   (&ZSTR_LVL_ELSE(&ZSTR_LVL))\n               MNOTE 8,'OTHRWISE - DUPLICATE OTHRWISE'\n               MEXIT\n         AEND\n         B     #@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n         :&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 1\n         MEND\n./ ADD NAME=PENTRY   0100-14178-14178-0013-00073-00073-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 07/11/07                                                 *\n.*********************************************************************\n.* 07/11/07 RPI 654 ADD PERFORM, PM, PENTRY, PEXIT WITH RENT SUPPORT\n.* 10/01/07 RPI 709 REMOVE PTRACE REFS\n.*********************************************************************\n&N       PENTRY\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     01/06/75.\n.*             REMARKS.  PERFORM ROUTINE ENTRY POINT  RPI 709\n.*\n.*       REV1 01/04/78 DSH - ADD STACK OPTIONS (SEE SUBENTRY)\n         GBLC  &PSTKREG,&PBASREG,&PBASLAB\n         GBLB  &PSTKSW,&PBASESW,&PSAVESW,&PCHKSW\n         LCLC  &STKREG\n         LCLA  &OFFSET\n         GBLB  &STKOPT  RPI 709 REMOVE &TRACE\n         GBLC  &PENAME\n         AIF   (&PBASESW EQ 0).L0\n         LTORG\n.L0      ANOP\n&PENAME  SETC  '&N'\n         DC    0H'0',CL8'&N'\n         AIF   (&STKOPT EQ 1).STK\n         B     *+4\n&N       EQU   *\n         AGO   .EXIT  RPI 709\n.STK     AIF   (K'&N EQ 0).STK1\n&N       DS    0H\n.STK1    ANOP\n         AIF   (&PSTKSW EQ 1).L1\n&STKREG  SETC  '15'\n         L     15,80(13)                    LOAD STACK POINTER\n&OFFSET  SETA  &OFFSET+4\n         AGO   .L2\n.L1      ANOP\n&STKREG  SETC  '&PSTKREG'\n.L2      AIF   (&PCHKSW EQ 1).L3\n         ST    14,0(&STKREG)  STORE LINK - NO CHECKING\n&OFFSET  SETA  &OFFSET+4\n         AGO   .L4\n.L3      ANOP\n         CLI   0(&STKREG),X'00'\n         BE    *+6\n         DC    X'0000'\n         STCM  14,7,1(&STKREG) STORE LINK - WITH CHECKING\n&OFFSET  SETA  &OFFSET+14\n.L4      ANOP\n         AIF   (&PBASESW EQ 0).L4A\n         ST    &PBASREG,4(&STKREG) SAVE BASE\n         BALR  &PBASREG,0 SET NEW BASE\n         USING *,&PBASREG\n&OFFSET  SETA  &OFFSET+6\n&PBASLAB SETC  '&N+&OFFSET'\n         LA    &STKREG,8(&STKREG)  INCREMENT STACK WITH PBASE=YES\n         AGO   .L4B\n.L4A     ANOP\n         LA    &STKREG,4(&STKREG)  INCREMENT STACK WITHOUT BASES\n.L4B     ANOP\n         AIF   (&PSTKSW EQ 1).L5\n         ST    15,80(13) STORE STACK\n.L5      AIF   (&PSAVESW EQ 0).L6\n         LM    14,15,72(13)\n.L6      ANOP\n.* RPI 709\n.EXIT    ANOP\n         MEND\n\n./ ADD NAME=PERFORM  0100-14178-14178-0013-00053-00053-00000-Z390MAC\n         MACRO                                                          00002\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 07/11/07                                                 *\n.*********************************************************************\n.* 07/11/07 RPI 654 ADD PERFORM, PM, PENTRY, PEXIT WITH RENT SUPPORT\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.*********************************************************************\n&N       PERFORM &PENTRY\n         GBLC  &PSTKREG,&PBASREG,&PBASLAB\n         GBLB  &PSTKSW,&PBASESW,&PSAVESW,&PCHKSW\n         GBLB  &STKOPT\n.*\n.*       SAME AS PM      - SEE SUBENTRY FOR OPTIONS\n.*\n.*       REV1 01/04/78 DSH - ADD OPTIONS TO STACK MODE\n.*\n         AIF   (&STKOPT EQ 1).STK\n&N       MVC   &PENTRY-2(2),*+10\n         B     &PENTRY\n         DC    S(*+2)\n         MEXIT\n.STK     AIF   (K'&N EQ 0).STK1\n&N       DS    0H\n.STK1    ANOP\n         AIF   (&PSAVESW EQ 0).L3\n         STM   14,15,72(13)\n         AIF   (&PBASESW EQ 1).L1\n         BAL   14,&PENTRY\n         AGO   .L2\n.L1      ANOP\n         ZOPTLR 15,&PBASREG\n.SKIP15  ANOP\n         A     15,=A(&PENTRY-PBASLAB)\n         BALR  14,15\n.L2      ANOP\n         LM    14,15,72(13)\n         AGO   .L5\n.L3      ANOP\n         AIF   (&PBASESW EQ 1).L4\n         BAL   14,&PENTRY\n         AGO   .L5\n.L4      ANOP\n         ZOPTLR 15,&PBASREG\n.SKIP15B ANOP\n         A     15,=A(&PENTRY-(&PBASLAB))\n         BALR  14,15\n.L5      ANOP\n         MEND\n\n./ ADD NAME=PEXIT    0100-14178-14178-0013-00058-00058-00000-Z390MAC\n         MACRO                                                          00002\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 07/11/07                                                 *\n.*********************************************************************\n.* 07/11/07 RPI 654 ADD PERFORM, PM, PENTRY, PEXIT WITH RENT SUPPORT\n.*********************************************************************\n&N       PEXIT\n.*\n.*       EXIT FROM PERFORMED PROCEDURE DEFINED BY PENTRY\n.*       SEE SUBENTRY FOR OPTIONS\n.*\n.*       REV1 01/04/78 DSH - ADD STACK OPTIONS\n.*       REV2 01/17/80 DSH - CHANGE DEFAULT TEMP STACK REG. TO R14\n.*                           TO ALLOW RC IN R15 TO BE RETURNED FROM\n.*                           PERFORMED ROUTINE.\n.*\n.*\n.*\n         GBLC  &PSTKREG,&PBASREG,&PBASLAB\n         GBLB  &PSTKSW,&PBASESW,&PSAVESW,&PCHKSW\n         LCLC  &STKREG\n         GBLB  &STKOPT\n         GBLC  &PENAME\n         AIF   (&STKOPT EQ 1).STK\n&N       B     &PENAME-4\n         MEXIT\n.STK     AIF   (K'&N EQ 0).STK1\n&N       DS    0H\n.STK1    ANOP\n         AIF   (&PSAVESW EQ 0).L1\n         STM   14,15,72(13)\n.L1      AIF   (&PSTKSW  EQ 1).L2\n&STKREG  SETC  '14'\n         L     14,80(13) LOAD STACK POINTER\n         AGO   .L3\n.L2      ANOP\n&STKREG  SETC  '&PSTKREG'\n.L3      ANOP\n         SL    &STKREG,84(13) DECREMENT STACK\n         AIF   (&PSTKSW EQ 1).L4\n         ST    14,80(13) SAVE STACK\n.L4      AIF   (&PBASESW EQ 0).L4A\n         L     &PBASREG,4(&STKREG) RELOAD BASE\n.L4A     AIF   (&PCHKSW EQ 0).L5\n         ICM   14,15,0(&STKREG)  LOAD LINK WITH CHECKING\n         BCR   P,14\n         DC    X'0000'\n         AGO   .L6\n.L5      ANOP\n         L     14,0(&STKREG)  LOAD LINK WITHOUT CHECKING\n         BR    14\n.L6      ANOP\n         MEND\n\n./ ADD NAME=PM       0100-14178-14178-0013-00053-00053-00000-Z390MAC\n         MACRO                                                          00002\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 07/11/07                                                 *\n.*********************************************************************\n.* 07/11/07 RPI 654 ADD PERFORM, PM, PENTRY, PEXIT WITH RENT SUPPORT\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.*********************************************************************\n&N       PM    &PENTRY\n         GBLC  &PSTKREG,&PBASREG,&PBASLAB\n         GBLB  &PSTKSW,&PBASESW,&PSAVESW,&PCHKSW\n         GBLB  &STKOPT\n.*\n.*       SAME AS PM      - SEE SUBENTRY FOR OPTIONS\n.*\n.*       REV1 01/04/78 DSH - ADD OPTIONS TO STACK MODE\n.*\n         AIF   (&STKOPT EQ 1).STK\n&N       MVC   &PENTRY-2(2),*+10\n         B     &PENTRY\n         DC    S(*+2)\n         MEXIT\n.STK     AIF   (K'&N EQ 0).STK1\n&N       DS    0H\n.STK1    ANOP\n         AIF   (&PSAVESW EQ 0).L3\n         STM   14,15,72(13)\n         AIF   (&PBASESW EQ 1).L1\n         BAL   14,&PENTRY\n         AGO   .L2\n.L1      ANOP\n         ZOPTLR 15,&PBASREG\n.SKIP15  ANOP\n         A     15,=A(&PENTRY-PBASLAB)\n         BALR  14,15\n.L2      ANOP\n         LM    14,15,72(13)\n         AGO   .L5\n.L3      ANOP\n         AIF   (&PBASESW EQ 1).L4\n         BAL   14,&PENTRY\n         AGO   .L5\n.L4      ANOP\n         ZOPTLR 15,&PBASREG\n.SKIP15B ANOP\n         A     15,=A(&PENTRY-(&PBASLAB))\n         BALR  14,15\n.L5      ANOP\n         MEND\n\n./ ADD NAME=POINT    0100-14178-14178-0013-00082-00082-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 11/26/05 RPI111- add missing AGO\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 04/12/06 RPI244 SUPPORT TYPE=REL\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 07/11/07 RPI 654 CORRECT TO SUPPORT DCBBLKSIF\n.* 08/07/07 RPI 644 ADD VSAM RPL SUPPORT VIA SVC\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       POINT &DCB,         DCB                                       X\n               &REL,         RELATIVE BLOCK                            X\n               &MF=I,        NOT SUPPORTED                             X\n               &RBA=,        EXTENSION RELATIVE BYTE ADDR              X\n               &RPL=,        VSAM RPL ADDR FOR KSDS/RRDS/ESDS          X\n               &TYPE=REL     REL (ABS NOT SUPPORTED)\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR2\n         AIF   (N'&SYSLIST LE 2).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(3)'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&RPL' NE '').VSAM\n.*\n.* SET FILE POINTER FOR READ/WRITE RANDOM ACCESS\n.*   DCB  - REQUIRED WITH DCBBLKSI DEFINED\n.*   REL  - RX OF FULL WORD RELATIVE RECORD NUMBER (0-N)\n.*   RBA= - RX OF DOUBLE WORD RELATIVE BYTE POSITION (OVERRIDES REL)\n.*\n.*   NOTE RBA= IS EXTENSION OF POINT FOR UP TO 2 GB RANDOM ACCESS\n.*\n         AIF   ('&TYPE' NE 'REL').ERR1\n         AIF   ('&DCB'(1,1) EQ '(').DCBREG\n         LA    1,&DCB\n         AGO   .CHKRBA\n.DCBREG  ANOP\n         ZOPTLR 1,&DCB(1)\n.CHKRBA  ANOP\n         AIF   ('&RBA' EQ '').CHKREL\n         AIF   ('&RBA'(1,1) EQ '(').RBAREG\n         LG    0,&RBA\n         AGO   .SVC\n.RBAREG  ANOP\n         LG    0,0(&RBA(1))\n         AGO   .SVC            RPI111\n.CHKREL  ANOP\n         AIF   ('&REL'(1,1) EQ '(').RELREG\n         LGF   0,&REL\n         AGO   .TORBA\n.RELREG  ANOP\n         LGF   0,0(&REL(1))\n.TORBA   ANOP\n         L     15,DCBBLKSIF-IHADCB(1)      RPI 654\n         MSGFR 0,15\n.SVC     ANOP\n         SVC   156 POINT R1=DCB R0=(64 BIT RBA)\n         MEXIT\n.VSAM    ANOP\n         AIF   ('&RPL'(1,1) EQ '(').RPLREG\n         LA    1,&RPL\n         AGO   .VSVC\n.RPLREG  ANOP\n         ZOPTLR 1,&RPL(1)\n.VSVC    ANOP\n         LA    0,RPLOPPNT\n         SVC   121 VSAM POINT R0=4 R1=A(RPL)\n         MEXIT\n.ERR1    MNOTE 12,'POINT ONLY TYPE=REL SUPPORTED'\n         MEXIT\n.ERR2    MNOTE 12,'POINT MF= NOT SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=POST     0100-14178-14178-0013-00047-00047-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 04/26/06 RPI 279 ADD POST SVC\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY\n.*********************************************************************\n         MACRO\n&N       POST  &ECB,         POST ECB COMPLETION                       X\n               &CODE,        EVENT COMPLETION CODE                     X\n               &LINKAGE=SVC, IGNORED                                   X\n               &MF=I,        NOT SUPPORTED                             X\n               &RELATED=     IGNORED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR3\n         AIF   ('&ECB' EQ '').ERR1\n         AIF   ('&ECB'(1,1) EQ '(').REGECB\n         LA    1,&ECB\n         AGO   .CHKCODE\n.REGECB  ANOP\n         ZOPTLR 1,&ECB(1)\n.CHKCODE ANOP\n         AIF   ('&CODE' EQ '').ZCODE\n         AIF   ('&CODE'(1,1) EQ '(').REGCODE\n         L     0,=A(&CODE)\n         AGO   .SVC\n.REGCODE ANOP\n         AIF   ('&CODE(1)' EQ '1' OR '&CODE(1)' EQ 'R1').ERR2\n         ZOPTLR 0,&CODE(1)\n         AGO   .SVC\n.ZCODE   ANOP\n         SR    0,0       ZERO DEFAULT CODE\n.SVC     ANOP\n         SVC   2 POST R0=CODE, R1=A(ECB)\n         MEXIT\n.ERR1    MNOTE 12,'POST REQUIRES ECB'\n         MEXIT\n.ERR2    MNOTE 12,'POST CODE REGISTER CONFLICTS WITH ECB REGISTER'\n         MEXIT\n.ERR3    MNOTE 12,'POST MF= NOT SUPPORTED'\n         MEND\n./ ADD NAME=PSAD     0100-14178-14178-0013-00029-00029-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/23/06                                                 *\n.*********************************************************************\n.* 04/23/06 RPI  286 DEFINE 8K PSA WITH SUPPORTED FIELDS\n.* 09/20/09 RPI 1063 ADD PGM OLD PSW AND INSTRUCTION LENGTH FIELDS\n.*                   UPDATED FOR ESPIE AND ABEND FOR EASE OF ACCESS\n.*********************************************************************\n         PSAD\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'PSAD UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.* PSA FIELDS IN FIRST 8K OF MEMORY\n.*\nIHAPSA   DSECT\n         ORG    IHAPSA+X'10'\nPSACVT   DS     A     LOW MEMORY POINTER TO OS CVT\n         ORG    IHAPSW+X'28'\nFLCPOPSW DS     XL8   PGM OLD PSW (+2=00CCMMMM,+3=INT,+4=ADDR)\n         ORG    IHAPSA+X'4C'\nPSACVT2  DS     A     LOW MEMORY POINTER TO OS CVT\n         ORG    IHAPSW+X'8D'\nFLCPIILC DS     X     INSTRUCTION LENGTH AT INTERRUPT (2,4,6)\n         MEND\n./ ADD NAME=PUT      0100-14178-14178-0013-00064-00064-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* MAINTENANCE\n.* 10/12/05 ADD USE OF DCBREC IF RECORD NOT SPECIFIED\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 10/20/05 RPI38 - check for register conflicts\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 07/22/07 RPI 644 ADD RPL VSAM SUPPORT VIA SVC 121 R0=2, R1=A(RPL)\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       PUT   &DCB,                                                   X\n               &REC,                                                   X\n               &RPL=,    VSAM REQUEST PARAMETER LIST                   X\n               &MF=I  NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR2\n         AIF   (N'&SYSLIST LE 2).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(3)'\n.NPOK    ANOP\n         AIF   ('&RPL' NE '').VSAM\n         AIF   ('&DCB'(1,1) EQ '(').DCBREG\n         LA    1,&DCB\n         AGO   .CHKREC\n.DCBREG  ANOP\n         ZOPTLR 1,&DCB(1)\n.CHKREC  ANOP\n         AIF   ('&REC' EQ '').RECDEF\n         AIF   ('&REC'(1,1) EQ '(').RECREG\n         LA    0,&REC\n         AGO   .SVC\n.RECREG  ANOP\n         AIF   ('&REC(1)' EQ '1' OR '&REC(1)' EQ 'R1').ERR1\n         ZOPTLR 0,&REC(1)\n         AGO   .SVC\n.RECDEF  ANOP\n         L     0,DCBREC-IHADCB(1)\n.SVC     ANOP\n         SVC  152 QSAM PUT R0=REC, R1=DCB\n         MEXIT\n.VSAM    ANOP\n         AIF   ('&RPL'(1,1) EQ '(').RPLREG\n         LA    1,&RPL\n         AGO   .VSVC\n.RPLREG  ANOP\n         ZOPTLR 1,&RPL(1)\n.VSVC    ANOP\n         LA    0,RPLOPPUT\n         SVC   121 VSAM PUT R0=2 R1=A(RPL)\n         MEXIT\n.ERR1    MNOTE 12,'PUT RECORD REG INVALID - &REC(1)'\n         MEXIT\n.ERR2    MNOTE 12,'PUT MF= NOT SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=READ     0100-14178-14178-0013-00036-00036-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2008 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/15/08                                                 *\n.*********************************************************************\n.* 04/15/08 RPI 838 CHANGE OPEN, CLOSE, READ, WRITE TO CALL Z VERSION\n.*********************************************************************\n&N       READ  &DECB,                                                  X\n               &TYPE,                                                  X\n               &DCB,                                                   X\n               &AREA,                                                  X\n               &LENGTH,                                                X\n               &MF=I        NOT SUPPORTED\n         AIF   ('&LENGTH' EQ '').PARM4\n&N       ZREAD &DECB,&TYPE,&DCB,&AREA,&LENGTH,MF=&MF\n         MEXIT\n.PARM4   ANOP\n&N       ZREAD &DECB,&TYPE,&DCB,&AREA,MF=&MF\n         MEND\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n./ ADD NAME=RESTORE  0100-14178-14178-0013-00067-00067-00000-Z390MAC\n'         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 12/06/05 RPI 118- use RESTORE in RETURN and XCTL to restore regs\n.* 04/26/07 RPI 601- support R0-R15 format args\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 11/10/08 RPI 942 support RC=(15) and upgrade to ZSTRMAC\n.* 03/16/11 RPI 1139 SET DEFAULT RC=(15) TO AVOID SUBSTR ERROR\n.*********************************************************************\n&N       RESTORE &REGS,&RC='(15)' RPI 942,1139 ADD RC=(15)\n       AIF   ('&N' NE '')\n&N       DS    0H\n       AEND\n       AIF     (N'&SYSLIST NE 1)\n               MNOTE 12,'RESTORE REQUIRES SINGLE REG SUBLIST OPERAND'\n               MEXIT\n      AEND\n      AIF   ('&REGS(1)'(1,1) EQ 'R')\n            :&R1 SETA   D2A('&REGS(1)'(2,K'&REGS(1)-1)) RPI 1139\n      AELSE\n            :&R1      SETA  &REGS(1)\n      AEND\n      :&R2      SETA  &R1\n      AIF   ('&REGS(2)' NE '')\n            AIF   ('&REGS(2)'(1,1) EQ 'R')\n                  :&R2 SETA  D2A('&REGS(2)'(2,K'&REGS(2)-1))\n            AELSE\n                  :&R2 SETA  &REGS(2)\n            AEND\n       AEND\n       AIF     (&R1 LT 0                                               X\n                OR &R1 GT 15                                           X\n                OR &R2 LT 0                                            X\n                OR &R2 GT 15                                           X\n                OR &R1 EQ 13                                           X\n                OR &R2 EQ 13)\n               MNOTE 8,'RESTORE RANGE INVALID (&R1,&R2)'\n               MEXIT\n       AEND\n       AIF     (&R1 LT 13)\n               AIF  (&R1 GT &R2 OR &R2 GT 13)\n                    MNOTE 8,'RESTORE RANGE OVERLAPS R13 (&R1,&R2)'\n                    MEXIT\n               AEND\n         LM    &R1,&R2,20+4*&R1.(13)\n       AELSE\n               AIF  (&R2 EQ 14 AND &R1 EQ 15)\n                    MNOTE 8,'RESTORE RANGE OVERLAPS R13 (&R1,&R2)'\n                    MEXIT\n               AEND\n               AIF  (&R1 EQ 14 AND '&RC'(1,1) EQ '(')\n         L     14,12(13)\n                    AIF  ('&RC(1)' NE '15' AND '&RC(1)' NE 'R15')\n         LR    15,&RC(1)\n                    AEND\n                    AIF  (&R2 LT 14)\n         LM    0,&R2,20(13)\n                    AEND\n               AELSE\n         LM    &R1,&R2,12+4*(&R1-14)(13)\n               AEND\n       AEND\n./ ADD NAME=RETURN   0100-14178-14178-0013-00016-00016-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 11/17/08 RPI 953 - code moved to ZRETURN to share with other maclibs\n.*********************************************************************\n&N       RETURN &REGS,                                                 X\n               &SETFLAG,                                               X\n               &MF=I,      NOT SUPPORTED                               X\n               &RC=\n&N      ZRETURN &REGS,&SETFLAG,MF=&MF,RC=&RC\n         MEND\n./ ADD NAME=RPL      0100-14178-14178-0013-00099-00099-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 06/22/07                                                 *\n.*********************************************************************\n.* 07/28/07 RPI 644 INITIAL CODING OF RPL OPTIONS\n.* 08/04/07 RPI 644 UPDATE RPLFEEDB TO 4 BYTE CODES\n.* 08/19/07 RPI 680 CORRECT LOOP GE TO GT, ADD LCLB &LRD\n.* 08/29/07 RPI 688 CORRECT SETTING OF MACR1_XRBA OPTION BIT, ADD XRBA\n.* 09/14/07 RPI 672 ISSUE MNOTE ERROR FOR UNDEFINED OPTIONS\n.* 09/16/07 RPI 682 SHARE ZGENOPTD TO GEN OPTCD BITS\n.* 09/24/07 RPI 702 REPLACE RPLXRBA WITH RPLLXRTA AND RPLCXRBA\n.*          ADD RPLOPENC UNIQUE ACB OPEN COUNT FOR REPOSITION REQ'D\n.* 11/26/07 RPI 723 MOVE GETOK, GETNF FLAGS TO RPLFLAG, ADD KSIT,KSIR\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.*\n.* RPL 28 VSAM OPTCD OPTIONS - MODELED ON MVS 3.8 IDAVSOPT\n.*\n.* ADR - addressed access to KSDS or ESDS by RBA, seq access by ESDS\n.* ARD - User's argument determines the record to be processed (NS)\n.* ASY - Asynchronous access (ignored)\n.* BWD - proceed backward for KEY, SEQ, DIR for POINT, GET, PUT, ERASE\n.* CNV - control intervAL access (not supported)\n.* CR  - For RLS, CR (consistent read integrity) (ignored)\n.* CRE - For RLS transactional POINT and GET NUP CR locks (ignored)\n.* DIR - direct access to a RRDS, KSDS, or ESDS.\n.* FKS - a full key is provided as a search argument\n.* FWD - Processing to proceed in a forward direction.\n.* GEN - A generic key is provided as a search argument using KEYLEN\n.* KEQ - key must match for GET (key,dir/skp) and POINT (key)\n.* KEY - rel rcd RRDS access or key KDSD access, seq rel rcd or key\n.* KGE - key GE, for RRDS rel rcd > max existing returns EOD, PUT adds\n.* LOC - leave record from GET in I/O buffer (ignored)\n.* LRD - Last record in the data set is to be located via POINT/GET\n.* MVE - move record to/from area (ignored - always in RPL AREA=)\n.* NRI - For RLS, NRI (no read integrity) (ignored)\n.* NSP - For DIR, remember position for seq access until ENDREQ\n.* NUP - records will not be updated, PUT stores new record, no pos\n.* NWAITX - Never take the UPAD or RLSWAIT exit (ignored)\n.* RBA - for ADR, use 4 byte RBA in ARG field (default)\n.* SEQ - Sequential access to a RRDS, KSDS, or ESDS.\n.* SKP - Skip sequential access.\n.* SYN - Synchronous access (always)\n.* UPD - records may be updated or deleted after DIR+UPD GET\n.* WAITX  - if SYN and UPAD, take UPAD exit instead of WAIT (ignored)\n.* XRBA - for ADR, use 8 byte XRBA in ARG field\n.*********************************************************************\n&N       RPL   &ACB=0,    VSAM ACCESS CONTROL BLOCK ADDRESS            X\n               &AM=VSAM,  VSAM VS VTAM                                 X\n               &AREA=0,   RECORD WORK AREA (DATA FOR MVE, ADDR FOR LOC)X\n               &AREALEN=0, LENGTH OF AREA (MAX LRECL IF MVS, 4 FOR LOC)X\n               &ARG=0,    KEY(KSDS), XRBA/RBA(KSDS/ESDS), REC#(RRDSS)  X\n               &ECB=0,    ECB TO BE POSTED ON COMPLETION               X\n               &KEYLEN=0, KEY LENGTH FOR GENERIC KEY SEARCH            X\n               &NXTRPL=0, NEXT RPL IN CHAINED RPL LIST                 X\n               &OPTCD=,   OPTIONS (SEE SUPPORTED OPTIONS ABOVE)        X\n               &RECLEN=0  RECORD LENGTH FOR VARIABLE LENGTH PUT\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0D\n.SKIPDS  ANOP\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'RPL UNSUPPORTED OPERANDS - &SYSLIST(1)'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&AM' NE 'VSAM').ERR1\n         GBLC  &ZGENOPT1,&ZGENOPT2\n         ZGENOPTD OPTCD=&OPTCD\n.*\n.* GENERATE VSAM RPL\n.*\n         DC    AL1(0)             RPLTYPE   RPL ID\n         DC    AL1(10)            RPLSTYPE  RPL TYPE VSAM\n         DC    AL1(RPLEND-IHARPL) RPLLEN    RPL LENGTH\n         DC    X'00'              (ALIGN)\n         DC    A(&ECB)            RPLECB    ECB (POSTED IF PRESENT)\n         DC    XL4'00'            RPLFEEDBK RPL FEEDBACK CODES\n         DC    A(&KEYLEN)         RPLKEYLEN KEY LENGTH\n         DC    A(&ACB)            RPLACB    ACB\n         DC    A(&AREA)           RPLAREA   AREA\n         DC    A(&ARG)            RPLARG    ARG (KS KEY, RR NUM)\n         DC    B'&ZGENOPT1&ZGENOPT2' RPLOPT OPTION BYTES 1+2\n         DC    X'0000'            (ALIGN)\n         DC    A(&NXTRPL)         RPLNEXT   NEXT RPL\n         DC    A(&RECLEN)         RPLRECL   RECORD LENGTH FOR PUT\n         DC    XL8'00'            RPLLXRBA  LAST RCD VES/VX0 XRBA\n         DC    XL8'00'            RPLCXRBA  CURR POS VES/VX0 XRBA\n         DC    A(0)               RPLOPENC  UNIQUE ACB OPEN COUNT\n         DC    A(&AREALEN)        RPLAREAL  AREA LENGTH\n         DC    F'0'               RPLFLAG   UPD GETOK,GETNF FLAGS ETC\n         DC    XL8'00'            RPLKSIT   CURRENT KSIT XRBA\n         DC    XL8'00'            RPLKSIR   CURRENT KSIR XRBA\n         RPLD\n         MEXIT\n.ERR1    MNOTE 12,'ONLY AM=VSAM IS SUPPORTED'\n         MEND\n./ ADD NAME=RPLD     0100-14178-14178-0013-00091-00091-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 06/23/07                                                 *\n.*********************************************************************\n.* 06/23/07 INITIAL CODING\n.* 08/29/07 RPI 688 ADD RPLXRBA XRBA/RBA FIELD AND SPLIT OPT1/OPT2 EQU\n.* 09/16/07 RPI 682 CORRECT RPLID\n.* 09/16/07 RPI 702 REPLACE RPLXRBA WITH RPLCXRBA AND RPLLXRBA\n.*                  ALSO ADD RPLOPENC UNIQUE ACB OPEN COUNT\n.* 11/26/07 RPI 723 MOVE GETOK, GETNF FLAGS TO RPLFLAG, ADD KSIT,KSIR\n.* 12/08/07 RPI 750 SPLIT RPLFLAG INTO 4 BYTE FIELDS WITH EQUATES\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n         RPLD\n.*\n.* IF RPLD ALREADY DEFINED EXIT NOW\n.*\n         GBLB  &Z390_RPL\n         GBLC  &Z390_RPL_NAME,&Z390_RPL_TYPE\n         AIF   (&Z390_RPL).EXIT\n&Z390_RPL      SETB 1\n&Z390_RPL_NAME SETC '&SYSLOC'\n&Z390_RPL_TYPE SETC '&SYSSTYP'\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n.*\n.*       ACCESS CONTROL BLOCK DSECT FOR VSAM\n.*\nIHARPL   DSECT\nRPLID    DS   X   RPL ID\nRPLSTYPE DS   X   RPL TYPE VSAM\nRPLLEN   DS   X   RPL LENGTH\n         DS   X   (ALIGN)\nRPLECB   DS   F   ECB ADDRESS (POSTED IF PRESENT)\nRPLFEEDB DS   XL4 RPL FEEDBACK CODES (PDF,RC,COMP,REASON CODE)\nRPLLKEY  DS   A   KEY LENGTH\nRPLACB   DS   A   ACB\nRPLAREA  DS   A   AREA\nRPLARG   DS   A   ARG (KSDS KEY, RRDS REC NUMBER, OR RBA/XRBA)\nRPLOPTCD DS   0H  OPTION BYTES 1 AND 2\nRPLOPT1  DS   X   OPTION BYTE 1\nRPLOPT1_LOC   EQU X'80' - leave record from GET in I/O buffer (IG)\nRPLOPT1_DIR   EQU X'40' - direct access to RRDS, KSDS, or ESDS\nRPLOPT1_SEQ   EQU X'20' - Sequential access to RRDS, KSDS, or ESDS\nRPLOPT1_SKP   EQU X'10' - Skip sequential access.\nRPLOPT1_ASY   EQU X'08' - Asynchronous access (ignored)\nRPLOPT1_KGE   EQU X'04' - key GE, for RRDS rel rcd > max returns EOD\nRPLOPT1_GEN   EQU X'02' - A generic key provided with RPLKEYL length\nRPLOPT1_XRBA  EQU X'01' - for ADR, use 8 vs 4 byte RBA in ARG field\nRPLOPT2  DS   X   OPTION BYTE 2\nRPLOPT2_KEY   EQU X'80' - rel rcd RRDS access or key KSDS access\nRPLOPT2_ADR   EQU X'40' - addressed access to KSDS or ESDS by RBA\nRPLOPT2_CNV   EQU X'20' - control intervAL access (not supported)\nRPLOPT2_BWD   EQU X'10' - proceed backward for KEY, SEQ, DIR\nRPLOPT2_LRD   EQU X'08' - locate last record in the data set\nRPLOPT2_WAITX EQU X'04' - if SYN and UPAD, take UPAD exit vs WAIT\nRPLOPT2_UPD   EQU X'02' - rcds may be updated or deleted after GET\nRPLOPT2_NSP   EQU X'01' - For DIR, remember position for seq access\n         DS   H   (ALIGN)\nRPLNEXT  DS   A   NEXT RPL\nRPLLREC  DS   A   RECORD LENGTH FOR GET/PUT VAR LENGTH RECORDS\nRPLLXRBA DS   XL8 XRBA OF LAST REC VES (ESDS,RRDS) OR VX0 (KSDS,VRRDS)\nRPLCXRBA DS   XL8 XRBA OF CURR POS VES (ESDS,RRDS) OR VX0 (KSDS,VRRDS)\nRPLOPENC DS   F   UNIQUE ACB OPEN COUNT TO DETECT RPL REPOSITION REQ'D\nRPLLAREA DS   F   AREA LENGTH\nRPLFLAG  DS   0F  RPL FLAG BITS FOR UPD GET ETC.\nRPLFLAG1 DS   X\nRPLF1GOK EQU  X'80' PREV GET SUCCESSFUL\nRPLF1GNF EQU  X'40' PREV GET RECORD NOT FOUND\nRPLFLAG2 DS   X\nRPLFLAG3 DS   X\nRPLFLAG4 DS   X\nRPLKSIT  DS   XL8 XRBA OF KSIT KSDS INSERT TOP OF TREE CONTROL BLOCK\nRPLKSIR  DS   XL8 XBRA OF KSIR KSDS INSERT CUR RECORD  CONTROL BLOCK\nRPLEND   EQU *\n*\n* VSAM RPL SVC 97 AND OPEN/CLOSE ACB OPCODES IN R0\n*\nRPLOPGET  EQU  1 GET\nRPLOPPUT  EQU  2 PUT\nRPLOPERA  EQU  3 ERASE\nRPLOPPNT  EQU  4 POINT\n          AIF  ('&Z390_RPL_NAME' EQ '' OR '&Z390_RPL_TYPE' EQ '').EXIT\n&Z390_RPL_NAME &Z390_RPL_TYPE\n.EXIT    ANOP\n         MEND\n./ ADD NAME=RT1      0100-14178-14178-0013-00176-00176-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* MAINTENANCE\n.* 10/04/05 ADD SUPPORT FOR ASCII MODE ED MASK WITH X'A0' VS X'20'\n.* 11/02/05 REMOVE ASCII MODE ED MASK WITH X'A0' NO LONGER REQUIRED\n.* 11/20/05 CHANGE LA 1,X'101', SVC 13 TO ABEND 101\n.* 09/22/06 ADD CCLE AND CCGE OPTIONS FOR USE IN TESTTIM2 TESTS\n.* 03/05/08 ADD RT1 OK - INC COUNT BY 1\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&NAME    RT1   &CMD,&CLC1,&CLC2,&LL\n.*\n.* REGRESSION TEST V1 COMMAND MACROS\n.*\n.* 1.  RT1 MAIN  - START PGM AND DISPLAY STARTUP WTO\n.* 2,  RT1 START - START OF RT1 TEST MACROS FOLLOWING DATA\n.* 3.  RT1 CCE   - TEST FOR PSW CC EQUAL (OPTIONAL CLC PARMS)\n.* 4.  RT1 CCL   - TEST FOR PSW CC LOW   (OPTIONAL CLC PARMS)\n.* 5.  RT1 CCH   - TEST FOR PSW CC HIGH  (OPTIONAL CLC PARMS)\n.* 6.  RT1 CCGE  - TEST FOR PSW CC HIGH  (OPTIONAL CLC PARMS) RPI 461\n.* 7.  RT1 CCLE  - TEST FOR PSW CC HIGH  (OPTIONAL CLC PARMS) RPI 461\n.* 8.  RT1 CC?   - TEST FOR PSW CC = CC0-CC3\n.* 9.  RT1 OK    - INC TEST COUNT BY 1\n.* 9.  RT1 ABORT - ABORT WITH TOTAL TESTS TO FAILURE AND USER 101 DUMP\n.*10.  RT1 END   - DISPLAY TOTAL TESTS AND ENDED OK WTO\n.*\n         GBLA  &RT1_TOT\n         GBLC  &RT1NAME\n         AIF   ('&CMD' EQ 'MAIN').RT1MAIN\n         AIF   ('&CMD' EQ 'START').RT1START\n         AIF   ('&CMD' EQ 'END').RT1END\n&NAME    DS    0H\n&RT1_TOT SETA  &RT1_TOT+1\n         AIF   ('&CMD' EQ 'OK').RT1OK\n         AIF   ('&CMD' EQ 'ABORT').RT1ABORT\n         AIF   ('&CLC1' EQ '').NOCLC\n         AIF   ('&LL'   EQ '').NOCLCLL\n         LA    1,&CLC1\n         LA    2,&CLC2\n         CLC   0(&LL,1),0(2)\n         AGO   .NOCLC\n.NOCLCLL ANOP\n         CLC   &CLC1,&CLC2\n.NOCLC   ANOP\n         AIF   ('&CMD' EQ 'CCE').RT1CCE\n         AIF   ('&CMD' EQ 'CCL').RT1CCL\n         AIF   ('&CMD' EQ 'CCH').RT1CCH\n         AIF   ('&CMD' EQ 'CCLE').RT1CCLE\n         AIF   ('&CMD' EQ 'CCGE').RT1CCGE\n         AIF   ('&CMD' EQ 'CC0').RT1CC0\n         AIF   ('&CMD' EQ 'CC1').RT1CC1\n         AIF   ('&CMD' EQ 'CC2').RT1CC2\n         AIF   ('&CMD' EQ 'CC3').RT1CC3\n         MNOTE 8,'RT1 INVALID COMMAND - &CMD'\n         MEXIT\n.RT1MAIN ANOP\n&RT1NAME SETC  '&NAME'\n&RT1NAME SUBENTRY\n         WTO   '&RT1NAME RT1 STARTED'\n         BRCL    15,RT1_START\nRT1_ABORT DS 0H\n         MVI   RT1_ABORTED,C'T'\n         WTO   '&RT1NAME RT1 TESTING ABORTED'\nRT1_END  DS    0H\n         MVC   RT1_DTOT,=X'402020202020'\n         ED    RT1_DTOT,RT1_TOT\n         WTO   MF=(E,RT1_WTO1)\n         CLI   RT1_ABORTED,C'T'\n         BE    RT1_DUMP\n         WTO   '&RT1NAME RT1 ENDED OK'\n         SUBEXIT\nRT1_DUMP DS    0H\n         ABEND 101\nRT1_LINK EQU   11\nRT1_DATA EQU   *\nRT1_TOT  DC    PL3'0' TOTAL RT1 TESTS COMPLETED\nRT1_ONE  DC    P'1'\nRT1_WTO1 DC    AL2(RT1_WTO_END-*,0),C'&RT1NAME RT1 TESTS COMPLETED = '\nRT1_DTOT DC    CL6' ZZZZZ'\nRT1_WTO_END EQU *\nRT1_ABORTED DC C'F'\n         LTORG\nRT1_TEST_CC0  DS    0H\n         BNE   RT1_ABORT\nRT1_OK   DS    0H\n         AP    RT1_TOT,RT1_ONE\n         BR    RT1_LINK\nRT1_TEST_CC1  DS    0H\n         BNL   RT1_ABORT\n         AP    RT1_TOT,RT1_ONE\n         BR    RT1_LINK\nRT1_TEST_CC2  DS    0H\n         BNH   RT1_ABORT\n         AP    RT1_TOT,RT1_ONE\n         BR    RT1_LINK\nRT1_TEST_CC3  DS    0H\n         BNO   RT1_ABORT\n         AP    RT1_TOT,RT1_ONE\n         BR    RT1_LINK\nRT1_TEST_CCGE  DS    0H\n         BL    RT1_ABORT\n         AP    RT1_TOT,RT1_ONE\n         BR    RT1_LINK\nRT1_TEST_CCLE  DS    0H\n         BH    RT1_ABORT\n         AP    RT1_TOT,RT1_ONE\n         BR    RT1_LINK\n         MEXIT\n.RT1START ANOP\nRT1_START DS  0H\n         MEXIT\n.RT1CCE  ANOP\n.RT1CC0  ANOP\nRT1_TEST&RT1_TOT BAS   RT1_LINK,RT1_TEST_CC0\n         USING *,RT1_LINK\n         B     RT1_CCE&RT1_TOT\n         LTORG\nRT1_CCE&RT1_TOT DS 0H\n         MEXIT\n.RT1CCL  ANOP\n.RT1CC1  ANOP\nRT1_TEST&RT1_TOT BAS   RT1_LINK,RT1_TEST_CC1\n         USING *,RT1_LINK\n         B     RT1_CCL&RT1_TOT\n         LTORG\nRT1_CCL&RT1_TOT DS 0H\n         MEXIT\n.RT1CCH  ANOP\n.RT1CC2  ANOP\nRT1_TEST&RT1_TOT BAS   RT1_LINK,RT1_TEST_CC2\n         USING *,RT1_LINK\n         B     RT1_CCH&RT1_TOT\n         LTORG\nRT1_CCH&RT1_TOT DS 0H\n         MEXIT\n.RT1CC3  ANOP\nRT1_TEST&RT1_TOT BAS   RT1_LINK,RT1_TEST_CC3\n         USING *,RT1_LINK\n         B     RT1_CC3&RT1_TOT\n         LTORG\nRT1_CC3&RT1_TOT DS 0H\n         MEXIT\n.RT1CCLE ANOP\nRT1_TEST&RT1_TOT BAS   RT1_LINK,RT1_TEST_CCLE\n         USING *,RT1_LINK\n         B     RT1_CCLE&RT1_TOT\n         LTORG\nRT1_CCLE&RT1_TOT DS 0H\n         MEXIT\n.RT1CCGE ANOP\nRT1_TEST&RT1_TOT BAS   RT1_LINK,RT1_TEST_CCGE\n         USING *,RT1_LINK\n         B     RT1_CCGE&RT1_TOT\n         LTORG\nRT1_CCGE&RT1_TOT DS 0H\n         MEXIT\n.RT1OK   ANOP\n         BAS   RT1_LINK,RT1_OK\n         USING *,RT1_LINK\n         B     RT1_OK&RT1_TOT\n         LTORG\nRT1_OK&RT1_TOT DS 0H\n         MEXIT\n.RT1ABORT ANOP\n         B      RT1_ABORT\n         MEXIT\n.RT1END  ANOP\n         B      RT1_END\n         MEXIT\n         MEND\n./ ADD NAME=SAVE     0100-14178-14178-0013-00058-00058-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI  27 - issue error for any undefined operands\n.* 04/27/07 RPI 601 - support R0-R15 register references\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 01/15/09 RPI 984 correct to use R13 when ending reg > first reg\n.* 03/24/11 RPI 1139 correct strings in SETA\n.*********************************************************************\n&N       SAVE  &REGS,   (REGS TO SAVE)                                 X\n               &T,      IGNORED                                        X\n               &ID,     IGNORED                                        X\n               &MF=I    NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   (N'&SYSLIST LE 3).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(4)'\n.NPOK    ANOP\n         AIF   ('&REGS(1)'(1,1) EQ 'R').SETR1\n&R1      SETA  &REGS(1)\n         AGO   .CHKR2\n.SETR1   ANOP\n&R1      SETA  D2A('&REGS(1)'(2,K'&REGS(1)-1)) RPI 1139\n.CHKR2   ANOP\n&R2      SETA  &R1\n         AIF   ('&REGS(2)' EQ '').CHKREGS\n         AIF   ('&REGS(2)'(1,1) EQ 'R').SETR2\n&R2      SETA  &REGS(2)\n         AGO   .CHKREGS\n.SETR2   ANOP\n&R2      SETA  D2A('&REGS(2)'(2,K'&REGS(2)-1)) RPI 1139\n.CHKREGS ANOP\n         AIF   (&R1 LT 0 OR &R1 GT 15).ERR\n         AIF   (&R2 LT 0 OR &R2 GT 15).ERR\n         AIF   (&R1 EQ 13).ERR\n         AIF   (&R2 EQ 13).ERR\n         AIF   (&R1 GE 14).R1_GE_14\n         AIF   (&R1 GT &R2).ERR OVERLAPS 13\n         STM   &R1,&R2,20+4*&R1.(13)   RPI 984\n         AGO   .EXIT\n.R1_GE_14 ANOP\n         AIF   (&R2 EQ 14 AND &R1 EQ 15).ERR OVERLAPS 13\n         STM   &R1,&R2,12+4*(&R1-14)(13)\n         AGO   .EXIT\n.ERR     ANOP\n         MNOTE 8,'MZ390E 1002 SAVE RANGE INVALID (&R1,&R2)'\n.EXIT    ANOP\n         MEXIT\n.ERR1    MNOTE 12,'SAVE MF= NOT SUPPORTED'\n         MEND\n./ ADD NAME=SELECT   0100-14178-14178-0013-00024-00024-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR SELECT,WHEN,ENDSEL\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         SELECT &OP,&FIELD,&COMP\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)\n               MNOTE 8,'SELECT - LEVEL OVERFLOW'\n               MEXIT\n         AEND\n         :&ZSTR_LVL SETA &ZSTR_LVL+1\n         :&ZSTR_SEL_CNT SETA &ZSTR_SEL_CNT+1\n         :&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_SEL_CNT\n         :&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'SELECT'\n         :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA 0 RESET BLK CTR\n         :&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 0 RESET OTHRWISE BLK\n         :&ZSTR_SEL_OP(&ZSTR_LVL)  SETC '&OP'\n         :&ZSTR_SEL_FLD(&ZSTR_LVL) SETC '&FIELD'\n         :&ZSTR_SEL_CMP(&ZSTR_LVL) SETC '&COMP'\n         MEND\n./ ADD NAME=SETRP    0100-14178-14178-0013-00021-00021-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 06/23/06 RPI 845 add new SETRP macro to set restart options\n.*********************************************************************\n.* SET RESTART PARAMETERS FOR ESTAE EXIT\n.*  1.  USER MUST SET R15=4 AND R0=RESTART PSW ADDR FOR RESTART\n.*  2.  SETRP DEFAULT IS RETREGS=64 TO RESTORE ALL 64 BIT GPRS\n.*********************************************************************\n         MACRO\n         SETRP &RETREGS=64    RESTORE ALL 16 64 BIT REGS\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'SETRP NON-SUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n         AIF   ('&RETREGS' NE '64').ERR1\n         MEXIT\n.ERR1    MNOTE 4,'SETRP DEFAULT IS ALWAYS RETREGS=64 FOR NOW'\n         MEND\n./ ADD NAME=SHOWCB   0100-14178-14178-0013-00087-00087-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 08/10/07 INITIAL CODING TO SUPPORT FDBK, AREA, RECLEN INITIALLY\n.* 09/14/07 RPI 672 VERIFY RPL VS ACB\n.* 09/19/07 RPI 697 SET RC=0\n.* 09/24/07 RPI 702 CHANGE RPLXRBA TO RPLLXRBA\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       SHOWCB &RPL=,        RPL REQUEST PARAMATER LIST ADDRESS       X\n               &ACB=,         ACB ACCESS CONTROL BLOCK                 X\n               &AREA=,        USER AREA TO RECEIVE ACB/RPL FIELD       X\n               &LENGTH=,      USER AREA LENGTH                         X\n               &FIELDS=       NAME OF FIELD TO RETRIEVE\n&NPOS    SETA  N'&SYSLIST\n.POSLOOP ANOP\n         AIF   (&NPOS EQ 0).POSEND\n         MNOTE 12,'SHOWCB UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'\n&NPOS    SETA  &NPOS-1\n         AIF   (&NPOS GT 0).POSLOOP\n         MEXIT\n.POSEND  ANOP\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&RPL' NE '').SHOW_RPL\n         MNOTE 12,'SHOWCB ONLY SUPPORTS RPL CURRENTLY'\n         MEXIT\n.SHOW_RPL ANOP\n         AIF   ('&AREA' EQ '').ERR1\n         AIF   ('&LENGTH' EQ '').ERR2\n&OFFSET  SETA  0\n.LOOP    ANOP\n         AIF   ('&OFFSET' GT '&LENGTH').ERR3\n&I       SETA  &I+1\n         AIF   (&I GT N'&FIELDS).EXIT\n         AIF   ('&FIELDS(&I)' EQ 'AREA').AREA\n         AIF   ('&FIELDS(&I)' EQ 'FDBK').FDBK\n         AIF   ('&FIELDS(&I)' EQ 'RBA').RBA\n         AIF   ('&FIELDS(&I)' EQ 'RECLEN').RECLEN\n         AIF   ('&FIELDS(&I)' EQ 'XRBA').XRBA\n         MNOTE 12,'SHOWCB FIELD NOT SUPPORTED - &FIELDS(&I)'\n         MEXIT\n.EXIT    ANOP\n         SR    15,15 RC=0\n         MEXIT\n.AREA    ANOP  RETURN ADDRESS OF RECORD AREA\n         ZSHOWCB &RPL,RPLAREA-IHARPL,&AREA,&OFFSET,4\n&OFFSET  SETA  &OFFSET+4\n         AIF   ('&RPL' NE '').LOOP\n         MNOTE 12,'SHOWCB RPL RQUIRED FOR AREA'\n         AGO   .LOOP\n.FDBK    ANOP  RETURN REASON CODE FROM RPLFEEDB\n         ZSHOWCB &RPL,RPLFEEDB-IHARPL+3,&AREA,&OFFSET,1\n&OFFSET  SETA  &OFFSET+1\n         AIF   ('&RPL' NE '').LOOP\n         MNOTE 12,'SHOWCB RPL RQUIRED FOR FDBK'\n         AGO   .LOOP\n.RBA     ANOP\n         ZSHOWCB &RPL,RPLLXRBA-IHARPL+4,&AREA,&OFFSET,4  RPI 702\n&OFFSET  SETA  &OFFSET+4\n         AIF   ('&RPL' NE '').LOOP\n         MNOTE 12,'SHOWCB RPL RQUIRED FOR RBA'\n         AGO   .LOOP\n.RECLEN  ANOP\n         ZSHOWCB &RPL,RPLLREC-IHARPL,&AREA,&OFFSET,4\n&OFFSET  SETA  &OFFSET+4\n         AIF   ('&RPL' NE '').LOOP\n         MNOTE 12,'SHOWCB RPL RQUIRED FOR RECLEN'\n         AGO   .LOOP\n.XRBA    ANOP\n         ZSHOWCB &RPL,RPLLXRBA-IHARPL,&AREA,&OFFSET,8    RPI 702\n&OFFSET  SETA  &OFFSET+8\n         AIF   ('&RPL' NE '').LOOP\n         MNOTE 12,'SHOWCB RPL RQUIRED FOR XRBA'\n         AGO   .LOOP\n.ERR1    MNOTE 12,'SHOWCB REQUIRES AREA='\n         MEXIT\n.ERR2    MNOTE 12,'SHOWCB REQUIRES LENGTH='\n         MEXIT\n.ERR3    MNOTE 12,'SHOWCB FIELDS EXCEED AREA LENGTH'\n         MEND\n./ ADD NAME=SNAP     0100-14178-14178-0013-00204-00204-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 11/22/05 RPI 110 CORRECT FLAG SETTING FOR STORAGE, ADD REG CHK\n.* 01/06/06 RPI 154 CORRECT FLAG SETTING FOR STORAGE, ADD REG CHK\n.* 01/08/06 RPI 154 CORRECT FLAG SETTING FOR STORAGE, ADD REG CHK\n.* 01/09/06 RPI 163 SKIP LR FOR SAME REGISTER\n.* 04/11/06 RPI 244 UPDATE KW PARMS, SUPPORT PDATA=PSW\n.* 04/25/06 RPI 297 USE L VS LA FOR STOARGE PARMS\n.* 04/14/07 RPI 583 CHANGE PDATA=ALL TO ALSO DUMP ALL STORAGE\n.* 05/15/07 RPI 623 SUPPORT ID=(REG)\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 06/23/07 RPI 642 SUPPORT TEXT=(REG)\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 04/18/09 RPI 1017 add MF=L/E support\n.* 04/30/11 RPI 1143 default PDATA=ALL and use PDATA= for only storage\n.*********************************************************************\n.* SNAP WILL GENERATE DUMP ON LOG FILE BASED ON THESE PARMS:\n.*  1. PDATA= (DEFAULT IS ALL)\n.*     A. REGS   - ALL REGISTERS\n.*     B.   GPR  - GENERAL PURPOSE REGISTERS\n.*     C.   FPR  - FLOATING POINT REGISTERS\n.*     D. CB     - ALL CONTROL BLOCKS\n.*     E.   CDE  - PROGRAMS (LINK AND LOAD)\n.*     F.   DCB  - DDNAME, DCB, AND DSNAME'S\n.*  2. STORAGE=(ADDR1,ADDR2)\n.*  3. ID=0 - IDENTIFICATION NUMBER\n.*  4. TEXT=  IDENTIFICATION TEXT (EXTENDED OPTION)\n.*********************************************************************\n.* INPUT:\n.*   R0  BIT 0 - STORAGE REQUEST (R14=START, R15=END)\n.*   R0  BIT 1 = GPR REGS\n.*   R0  BIT 2 = FPR REGS\n.*   R0  BIT 3 = CDE LOADED 390 PROGRAMS AND FILES\n.*   R0  BIT 4 = DCBS WITH DDNAME AND DSNAME\n.*   R0  BIT 5 = DUMP ALL MEMORY  RPI 583\n.*********************************************************************\n&N       SNAP  &DCB=,        IGNORED                                   X\n               &ID=0,        SHOW ID ON DUMP                           X\n               &LIST=,       NOT SUPPORTED                             X\n               &MF=I,        NOT SUPPORTED                             X\n               &PDATA=ALL,   ALL, REGS, GPR, FPR, CDE, DCB, PSW (ALL)  X\n               &SDATA=,      IGNORED                                   X\n               &STORAGE=,    STORAGE ADDRESS RANGE                     X\n               &STRHDR=,     NOT SUPPORTED                             X\n               &SUBPLST=,    NOT SUPPORTED                             X\n               &TCB=,        IGNORED                                   X\n               &TEXT=        EXTENSION TEXT TO DISPLAY\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(1)'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&LIST' NE '').ERR2\n         AIF   ('&STRHDR' NE '').ERR3\n         AIF   ('&SUBPLST' NE '').ERR4\n&FLAGS   SETA  X'0000' DEFAULT ALL     RPI 1143\n         AIF   ('&PDATA' EQ '').NPOK2\n&FLAGS   SETA  0\n&NP      SETA  N'&PDATA+1\n.NPLOOP  ANOP\n&NP      SETA  &NP-1\n         AIF   (&NP EQ 0).NPOK2\n         AIF   ('&PDATA(&NP)' EQ 'ALL').ALL\n         AIF   ('&PDATA(&NP)' EQ 'REGS').REGS\n         AIF   ('&PDATA(&NP)' EQ 'GPR').GPR\n         AIF   ('&PDATA(&NP)' EQ 'FPR').FPR\n         AIF   ('&PDATA(&NP)' EQ 'CDE').CDE\n         AIF   ('&PDATA(&NP)' EQ 'DCB').DCB\n         AIF   ('&PDATA(&NP)' EQ 'PSW').PSW\n         MNOTE 8,'SNAP UNSUPPORTED PARM - &PDATA(&NP)'\n         AGO   .NPLOOP\n.ALL     ANOP                       8     4   2   1   8   4\n&FLAGS   SETA  &FLAGS+X'7C00' NO STORAGE,GPR,FPR,CDE,DCB,ALL  RPI 583\n         AGO   .NPOK2\n.REGS    ANOP\n&FLAGS   SETA  &FLAGS+X'6000'\n         AGO   .NPLOOP\n.GPR     ANOP\n&FLAGS   SETA  &FLAGS+X'4000'\n         AGO   .NPLOOP\n.FPR     ANOP\n&FLAGS   SETA  &FLAGS+X'2000'\n         AGO   .NPLOOP\n.CDE     ANOP\n&FLAGS   SETA  &FLAGS+X'1000'\n         AGO   .NPLOOP\n.DCB     ANOP\n&FLAGS   SETA  &FLAGS+X'0800'\n         AGO   .NPLOOP\n.PSW     ANOP   PSW INCLUDED BY DEFAULT\n         AGO   .NPLOOP\n.NPOK2   ANOP\n         AIF   ('&MF' EQ 'L').LISTFORM\n         AIF   ('&MF(1)' EQ 'E').EXECFORM\n         AIF   ('&MF' NE 'I').ERR2\n.*\n.* STD FORM SNAP A MEMORY DUMP OF SPECIFIED AREA\n.*\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&STORAGE' EQ '').SETUP\n         AIF   (N'&STORAGE NE 2).ERR1\n&FLAGS   SETA  &FLAGS+X'8000'           RPI110\n         AIF   ('&STORAGE(1)'(1,1) EQ '(').ADDR1_REG\n         L     14,=A(&STORAGE(1))\n         AGO   .ADDR2_CHK\n.ADDR1_REG ANOP\n         ZOPTLR 14,&STORAGE(1,1)\n.ADDR2_CHK ANOP\n         AIF   ('&STORAGE(2)'(1,1) EQ '(').ADDR2_REG\n         L     15,=A(&STORAGE(2))\n         AGO   .SETUP\n.ADDR2_REG ANOP\n         AIF   ('&STORAGE(2,1)' EQ '14' OR '&STORAGE(2,1)' EQ 'R14').ERX\n               R1\n         ZOPTLR 15,&STORAGE(2,1)\n.SETUP   ANOP\n         AIF   ('&ID'(1,1) EQ '(').IDREG     RPI 623\n         IILL  0,&ID                  RPI158\n         AGO   .SETFLAGS\n.IDREG   ANOP\n         ZOPTLR 0,&ID(1)                      RPI 623\n.SETFLAGS ANOP\n         IILH 0,&FLAGS               RPI158\n         AIF   ('&TEXT' EQ '').NOTEXT\n         AIF   ('&TEXT'(1,1) EQ '(').REGTEXT  RPI 642\n&TEMP    SETC  '&TEXT'\n         AIF   ('&TEMP'(1,1) NE '''').SKIP\n&TEMP    SETC  '&TEMP'(2,K'&TEMP-2)\n.SKIP    ANOP\n         LA    1,=CL60'&TEMP'\n         AGO   .SVC\n.REGTEXT ANOP\n         ZOPTLR 1,&TEXT(1) RPI 642 PTR TO TEXT WITH NULL TERM (MAX 60)\n         AGO   .SVC\n.NOTEXT  ANOP\n         LA    1,0\n.SVC     ANOP\n         SVC   51  SNAP DUMP R0=FLAGS,ID,R1=A(TEXT),R14-15=A(LOW,HIGH)\n         MEXIT\n.*\n.* LIST FORM\n.*\n.LISTFORM ANOP\n&N       DS    0F\n         AIF   ('&STORAGE(1)' EQ '').Nl_NOSTOR\n         DC    A(&STORAGE(1),&STORAGE(2)) R14-R15 STORAGE RANGE\n         AGO   .NL_FLAGS\n.NL_NOSTOR ANOP\n         DC    A(0,0) R14-R15 STORAGE RANGE\n.NL_FLAGS ANOP\n         DC    AL2(&FLAGS,&ID) R0 FLAGS AND ID\n&TEMP    SETC  ' '\n         AIF   ('&TEXT' EQ '').NL_NOTEXT\n&TEMP    SETC  '&TEXT'(2,K'&TEXT-2)\n.NL_NOTEXT ANOP\n         DC    A(*+4)          R1 A(TEXT)\n         DC    C'&TEMP',X'00'\n         MEXIT\n.*\n.* EXEC FORM\n.*\n.EXECFORM ANOP\n         AIF   ('&MF(2)'(1,1) EQ '(').EF_REG\n         LM    14,1,&MF(2)\n         AGO   .EF_OPTS\n.EF_REG  ANOP\n         LM    14,1,0(&MF(2,1))\n.EF_OPTS ANOP\n         AIF   ('&PDATA' EQ '').EF_NOPDATA\n         IILH  0,&FLAGS\n.EF_NOPDATA ANOP\n         AIF   (&ID EQ 0).EF_NOID\n         IILL  0,&ID\n.EF_NOID ANOP\n         AIF   ('&TEXT' EQ '').EF_NOTEXT\n         LA    1,=C&TEXT\n.EF_NOTEXT ANOP\n         AIF   ('&STORAGE' EQ '').SVC\n         AIF   ('&STORAGE(1)'(1,1) EQ '(').EF_STORREG\n         LM    14,15,=A(&STORAGE(1),&STORAGE(2))\n         AGO   .SVC\n.EF_STORREG ANOP\n         ZOPTLR 14,&STORAGE(1)\n         ZOPTLR 15,&STORAGE(2)\n         AGO   .SVC\n.ERR1    MNOTE 12,'SNAP INVALID STORAGE=(ADDR1,ADDR2) - &STORAGE'\n         MEXIT\n.ERR2    MNOTE 12,'SNAP INVALID MF= OPTION'\n         MEXIT\n.ERR3    MNOTE 12,'SNAP STRHDR= NOT SUPPORTED'\n         MEXIT\n.ERR4    MNOTE 12,'SNAP SUBPLST NOT SUPPORTED'\n         MEXIT\n.ERR5    MNOTE 12,'SNAP MF= NOT SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=SQLINCLU 0100-14178-14178-0013-00012-00012-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.*********************************************************************\n.* 05/05/06 RPI 308 SQL INCLUDE CMD CALLED FROM EXEC\n.*********************************************************************\n         MACRO\n         SQL_INCLUDE &MEMBER\n         &MEMBER\n         MEND\n./ ADD NAME=SQXTR    0100-14178-14178-0013-00019-00019-00000-Z390MAC\n         MACRO\n&N       SQXTR &FR1,&FR2\n.*********************************************************************\n.* CALCULATE DFP LD EXTENED SQUARE ROOT OF FR2 IN FR1\n.* (THIS INSTRUCTION IS MISSING FROM POP - SEE HFP SQXR AND BFP SQXBR)\n.* (THIS MACRO CALLS SQXTR CSECT PASSING LD ARG AT +8 IN CSECT)\n.* (RESULT IS RETURNED AT +8 ELSE PGM EXCEPTION FOR NEG VALUE ETC.)\n.* (SQXTR.OBJ IS LOCATED IN LINKLIB ALONG WITH SQXTR.MLC)\n.*********************************************************************\n.* 04/25/11 RPI 1161 correct FP2 > FR2\n.*********************************************************************\n&N       DS   0H\n         L    15,=V(SQXTR)\n         STD  &FR2,8+0(15)\n         STD  &FR2+2,8+8(15)\n         BASR 14,15\n         LD   &FR1,8+0(15)\n         LD   &FR1+2,8+8(15)\n         MEND\n./ ADD NAME=STFSMODE 0100-14178-14178-0013-00018-00018-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/30/05                                                 *\n.*********************************************************************\n.* 02/16/06 RPI136 TN3270 FULL SCREEN SUPPORT FOR TPUT/TGET\n.*********************************************************************\n.*\n.* STFSMODE ON/OFF,INITIAL=YES/NO  SET TSO MODE\n.*\n.*********************************************************************\n&N       STFSMODE  &MODE,&INITIAL=NO\n&N       DS    0H\n         MEND\n\n./ ADD NAME=STIMER   0100-14178-14178-0013-00135-00135-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 03/03/06 RPI 209 ADD STIMER WAIT INTERVAL SUPPORT\n.* 04/11/06 RPI 244 UPDATE PARMS, SUPPORT REAL\n.* 04/20/06 RPI 279 ADD REAL/TASK,EXIT AND DINTVL= SUPPORT\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY\n.*********************************************************************\n.*\n.*  STIMER WAIT,BINTVL=s  -  where S is RX type label of full\n.*                           word containing 0.01 seconds to wait\n.*\n.*  STIMER WAIT,DINTVL=s  -  where S is RX type label of double\n.*                           word containing PL8'HHMMSSTH' interval\n.*\n.*  STIMER WAIT,MICVL=s   -  where S is RX type label of doubleword\n.*                           containing microseconds to wait\n.*\n.*  STIMER WAIT,TUINTVL=s -  where S is RX type label of doubleword\n.*                           containing timer unit 26.04166 sec ms\n.*\n.*  STIMER REAL,EXIT,BINTVL=s  -  where S is RX type label of full\n.*                           word containing 0.01 seconds to wait\n.*\n.*  STIMER REAL,EXIT,DINTVL=s  -  where S is RX type label of double\n.*                           word containing PL8'HHMMSSTH' interval\n.*\n.*  STIMER REAL,EXIT,MICVL=s   -  where S is RX type label of dblword\n.*                           containing microseconds to wait\n.*\n.*  STIMER REAL,EXIT,TUINTVL=s -  where S is RX type label of dblword\n.*                           containing timer unit 26.04166 sec ms\n.*\n.*  REGISTER INPUT\n.*    R0 - HIGH BYTE REQUEST TYPE:\n.*           1=WAIT\n.*           2=REAL\n.*           3=TASK\n.*    R0 - SECOND BYTE INTERVAL TYPE\n.*           1=BINTVL  FULLWORD    0.01 SECONDS IN INTERVAL\n.*           2=DINTVL  DOUBLEWORD  0000000HHMMSSTHF INTERVAL\n.*           3=MICVL   DOUBLEWORD  MICROSECONDS IN INTERVAL\n.*           4=TUINTVL FULLWORD    26.04166 MICROSECOND TIMER UNITS\n.*    R0 - LOW 4 BYTES = EXIT ADDRESS IF NOT ZERO\n.*    R1 = ADDRESS OF WORD OR DOUBLEWORD INTERVAL ARGUMENT\n.*\n.*********************************************************************\n&N      STIMER &TYPE,      WAIT/REAL/TASK                              X\n               &EXIT,      EXIT ROUTINE FOR REAL/TASK                  X\n               &BINTVL=,   FULL WORD 0.01 SECONDS                      X\n               &DINTVL=,   DOUBLE WORD DEC HHMMSSTH INTERVAL           X\n               &ERRET=,    IGNORED                                     X\n               &GMT=,      NOT SUPPORTED                               X\n               &MF=I,      NOT SUPPORTED                               X\n               &MICVL=,    DOUBLE WORD MICROSECONDS                    X\n               &TUINTVL=   DOUBLE WORD TIMER UNTIS 26.04166 MICROSEC\n        AIF   ('&N' EQ '').SKPLAB\n&N      DS    0H\n.SKPLAB ANOP\n        AIF   ('&GMT'    NE '').ERR3\n        AIF   ('&MF' NE 'I').ERR5\n        AIF   ('&TYPE' EQ 'WAIT').WAIT\n        AIF   ('&TYPE' EQ 'REAL').REAL\n        AIF   ('&TYPE' EQ 'TASK').TASK\n        MNOTE 12,'STIMER - INVALID WAIT/REAL/TASK TYPE - &TYPE'\n        MEXIT\n.WAIT   ANOP\n        AIF   ('&EXIT' NE '').ERR4\n        AIF   ('&BINTVL' EQ '').WCHK_DINTVL\n        IIHF  0,X'01010000' WAIT BINTVL\n        LA    1,&BINTVL\n        AGO   .SVC\n.WCHK_DINTVL ANOP\n        AIF   ('&DINTVL' EQ '').WCHK_MICVL\n        IIHF  0,X'01020000' WAIT DINTVL\n        LA    1,&DINTVL\n        AGO   .SVC\n.WCHK_MICVL ANOP\n        AIF   ('&MICVL' EQ '').WCHK_TUINTVL\n        IIHF  0,X'01030000' WAIT MICVL\n        LA    1,&MICVL\n        AGO   .SVC\n.WCHK_TUINTVL ANOP\n        AIF   ('&TUINTVL' EQ '').ERR1\n        IIHF  0,X'01040000' WAIT TUINTVL\n        LA    1,&TUINTVL\n        AGO   .SVC\n.REAL   ANOP  TAKE EXIT WHEN REAL TIME INTERVAL ENDS\n.TASK   ANOP  TAKE EXIT WHEN TASK ITME INTERVAL ENDS (TASK=REAL LIMIT)\n        AIF   ('&EXIT' EQ '').ERR2\n        AIF   ('&EXIT'(1,1) EQ '(').REGEXIT\n        LA    0,&EXIT       REAL EXIT\n        AGO   .RCHKTYPE\n.REGEXIT ANOP\n        ZOPTLR 0,&EXIT(1)    REAL EXIT\n.RCHKTYPE ANOP\n        AIF   ('&BINTVL' EQ '').RCHK_DINTVL\n        IIHF  0,X'02010000' REAL BINTVL\n        LA    1,&BINTVL\n        AGO   .SVC\n.RCHK_DINTVL ANOP\n        AIF   ('&DINTVL' EQ '').RCHK_MICVL\n        IIHF  0,X'02020000' REAL DINTVL\n        LA    1,&DINTVL\n        AGO   .SVC\n.RCHK_MICVL ANOP\n        AIF   ('&MICVL' EQ '').RCHK_TUINTVL\n        IIHF  0,X'02030000' REAL MICVL\n        LA    1,&MICVL\n        AGO   .SVC\n.RCHK_TUINTVL ANOP\n        AIF   ('&TUINTVL' EQ '').ERR1\n        IIHF  0,X'02040000' REAL TUINTVL\n        LA    1,&TUINTVL\n.SVC    ANOP\n        SVC   X'2F' STIMER R0B0=TYPE,R0B1=INT, R0=EXIT, R1=INTVL ARG\n        MEXIT\n.ERR1   MNOTE 12,'STIMER INTERVAL OPTION NOT DEFINED'\n        MEXIT\n.ERR2   MNOTE 12,'STIMER EXIT ADDRESS REQUIRED FOR REAL/TASK'\n        MEXIT\n.ERR3   MNOTE 12,'STIMER GMT= NOT SUPPORTED'\n        MEXIT\n.ERR4   MNOTE 12,'STIMER WAIT DOES NOT SUPPORT EXIT ADDRESS'\n        MEXIT\n.ERR5   MNOTE 12,'STIMER MF= NOT SUPPORTED'\n        MEXIT\n        MEND\n./ ADD NAME=STLINENO 0100-14178-14178-0013-00018-00018-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/30/05                                                 *\n.*********************************************************************\n.* 02/16/06 RPI136 TN3270 FULL SCREEN SUPPORT FOR TPUT/TGET\n.*********************************************************************\n.*\n.* STLINENO &LINE=    SET STARTING SCREEN LINE NUMBER\n.*\n.*********************************************************************\n&N       STLINENO  &LINE=\n&N       DS    0H\n         MEND\n\n./ ADD NAME=STORAGE  0100-14178-14178-0013-00071-00071-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 03/14/06                                                 *\n.*********************************************************************\n.* 03/14/06 RPI 210 ADD STORAGE MACRO\n.* 04/11/06 RPI 244 UPDATE KW PARMS, SUPPORT LOC=ANY\n.* 06/03/06 RPI 324 CORRECT ADDR=(REG) TO STORE R0 AT 0(REG)\n.* 01/23/07 RPI 542 CORRECT OUTPUT REGS R0=LEN AND R1=ADDR\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY\n.*********************************************************************\n&N       STORAGE &TYPE,      OBTAIN/RELEASE                            X\n               &ADDR=,       ADDRESS TO STORE ALLOC STORAGE            X\n               &BNDRY=,      IGNORE                                    X\n               &CALLRKY=,    IGNORE                                    X\n               &CHECKZERO=,  IGNORE                                    X\n               &COND=NO,     CONDITIONAL NO/YES                        X\n               &CONTBDY=,    IGNORED                                   X\n               &INADDR=,     NOT SUPPORTED                             X\n               &KEY=,        IGNORE                                    X\n               &LENGTH=,     LENGTH OF REQUEST                         X\n               &LOC=,        24,31,ANY,ABOVE,BELOW                     X\n               &MF=I,        NOT SUPPORTED                             X\n               &RELATED=,    IGNORE                                    X\n               &RTCD=,       NOT SUPPORTED                             X\n               &SP=,         IGNORE                                    X\n               &STARTBDY=    IGNORE\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   (N'&SYSLIST EQ 1).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(2)'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&INADDR' NE '').ERR1\n         AIF   ('&RTCD'   NE '').ERR2\n         AIF   ('&MF' NE 'I').ERR3\n         AIF   ('&TYPE' EQ 'OBTAIN').OBTAIN\n         AIF   ('&TYPE' EQ 'RELEASE').RELEASE\n         MNOTE 12,'STORAGE TYPE NOT OBTAIN/RELEASE - &TYPE'\n         MEXIT\n.OBTAIN  ANOP\n         AIF   ('&COND' EQ 'YES').GMRC\n.GMR     ANOP\n         GETMAIN R,LV=&LENGTH,LOC=&LOC\n         AGO     .STORE\n.GMRC    ANOP\n         GETMAIN RC,LV=&LENGTH,LOC=&LOC\n.STORE   ANOP\n         AIF   ('&ADDR' EQ '').EXIT\n         AIF   ('&ADDR'(1,1) EQ '(').STOREREG\n         ST    1,&ADDR                          RPI 542\n         AGO   .EXIT\n.STOREREG ANOP\n         ST    1,0(&ADDR(1)) RPI 324            RPI 542\n.EXIT    ANOP\n         MEXIT\n.RELEASE ANOP\n         FREEMAIN R,A=&ADDR,LV=&LENGTH\n         MEXIT\n.ERR1    MNOTE 12,'STORAGE INADDR= NOT SUPPORTED'\n         MEXIT\n.ERR2    MNOTE 12,'STORAGE RTCD= NOT SUPPORTED'\n         MEXIT\n.ERR3    MNOTE 12,'STORAGE MF= NOT SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=STTMPMD  0100-14178-14178-0013-00018-00018-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/30/05                                                 *\n.*********************************************************************\n.* 02/16/06 RPI136 TN3270 FULL SCREEN SUPPORT FOR TPUT/TGET\n.*********************************************************************\n.*\n.* STTMPMD ON/OFF  SET TSO DIALOG MANAGER ON/OFF\n.*\n.*********************************************************************\n&N       STTMPMD  &MODE\n&N       DS    0H\n         MEND\n\n./ ADD NAME=STX      0100-14178-14178-0013-00015-00015-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 12/15/06 RPI 406 UPDATE FOR USE IN TESTDFP1 USING REG PAIR N,N+2\n.*********************************************************************\n&N       STX   &R1,&S2   STORE LH/LB\n&N       LA    15,&S2\n         STD   &R1,0(15)\n         STD   &R1+2,8(15)\n         MEND\n./ ADD NAME=SUBENTRY 0100-14178-14178-0013-00207-00207-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/12/07                                                 *\n.*********************************************************************\n.* 04/12/07 RPI 590 COPIED FROM FPC SHARE SPLA FILE 178 CONTRIBUTION\n.*          TO SUPPORT MULTIPLE BASES AND RENT OPTIONS\n.* 04/26/07 RPI 601 CHANGE BASE OFFSETS FROM 4095 TO STD 4096\n.* 07/11/07 RPI 654 CLEANUP - ADD DROP, CHECK RENT+R13, RWA+RWALNG\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 10/01/07 RPI 709 FIX MISSING QUOTE IN AIF AFTER .NOSTK2\n.* 02/17/12 RPI 1189 REMOVE DROP 13 WHEN NOT USING 13\n.*********************************************************************\n.*             MACRO-ID. 'SUBENTRY'\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE WRITTEN.  07/28/70.\n.*             REMARKS.  THIS MACRO GENERATES THE CODE TO ESTABLISH A\n.*                       CSECT WITH SAVE AREA AND BASE REGISTER USING\n.*                       STANDARD OS LINKAGE CONVENTIONS.\n.*             REV1 11/14/74 ADD REENTRANT OPTION WITH WORK AREA\n.*                 1.  FOR REENTRANT LINKAGE YOU MUST SPECIFY\n.*                     A.  RENT=YES\n.*                     B.  AT LEAST ONE BASE REGISTER OTHER THAN 13\n.*                         SUCH AS BASES=(R12)\n.*                 2.  OPTIONALLY YOU CAN SPECIFY A DSECT NAME AND\n.*                     LENGTH FOR A WORK AREA BUILT BEHIND SAVE AREA.\n.*                     FOR EXAMPLE  RWA=MYWORK,RWALNG=8\n.*             REV2 02/10/76 DSH - ADD SUBPOOL OPTION\n.*             REV3 XX/XX/77 FDB - ADD STACK OPTION TO SUPPORT\n.*                                 REENTRANT PERFORM, PENTRY, PEXIT\n.*\n.*                                 STACK=  SETS MAXIMUM DEPTH\n.*                                         OF PERFORMS\n.*\n.*             REV4 01/04/78 DSH - ADD OPTIONS TO OPTIMIZE STACK CODE\n.*                                 AND PROVIDE EXTENDED BASE REGISTERS\n.*\n.*                                 PSTACK= DEFINES PERMANENT REGISTER\n.*                                         FOR STACK TO SAVE LOADS\n.*                                         AND STORES\n.*\n.*                                 PBASE=YES CAUSES BASE REGISTER\n.*                                           DEFINED BY BASES= TO\n.*                                           BE STACKED AND A NEW\n.*                                           BASE ESTABLISHED FOR\n.*                                           EACH PERFORMED ROUTINE\n.*\n.*                                 PSAVE=NO  CAUSES R14 AND R15\n.*                                           TO NOT BE SAVED ACROSS\n.*                                           PERFORMS TO SAVE LOADS\n.*                                           AND STORES\n.*\n.*                                 PCHECK=NO ELIMINATES CODE TO\n.*                                           CHECK FOR STACK\n.*                                           OVERFLOW/UNDERFLOW\n.*\n.*\n.*\n.*********************************************************************\n&NAME    SUBENTRY &CSECT=YES,&BASES=(13),                              X\n               &RENT=NO,&RWA=,&RWALNG=0,&SP=0,&STACK=0,                X\n               &PSTACK=0,&PBASE=NO,&PSAVE=YES,&PCHECK=YES\n         GBLC  &PSTKREG,&PBASREG,&PBASLAB\n         GBLB  &PSTKSW,&PBASESW,&PSAVESW,&PCHKSW\n         GBLA  &STKSIZE,&STKENT\n         GBLB  &STKOPT,&RENTOPT\n         LCLA  &NBASE,&S,&OFFSET\n&PSTKSW  SETB  0\n&PBASESW SETB  0\n&PSAVESW SETB  0\n&PCHKSW  SETB  0\n&STKOPT  SETB  0\n&RENTOPT SETB  0\n         AIF   ('&CSECT'(1,1) EQ 'N').NOCSECT\n&NAME    CSECT\n         AGO   .STM\n.NOCSECT ANOP\n&NAME    DS    0D\n.STM     ANOP\n         AIF   ('&RENT'(1,1) EQ 'N').NORENT\n&RENTOPT SETB  1\n         AIF   ('&BASES(1)' EQ 'R13').ERR2  RPI 654\n         AIF   (&BASES(1) EQ 13).ERR2     RPI 654\n         STM   14,12,12(13)\n         BAL   &BASES(1),40(15)\n         USING &NAME+8,&BASES(1)\n         DC    CL8'&NAME'\n         DC    CL8'SESA'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         AIF   ('&STACK' EQ '0').NOSTK1\n&STKOPT  SETB  1\n&STKENT  SETA  4\n         AIF   ('&PBASE'(1,1) EQ 'N').STK1\n&PBASESW SETB  1\n&STKENT  SETA  8\n&PBASREG SETC  '&BASES(1)'\n&PBASLAB SETC  '&NAME+8'\n.STK1    ANOP\n&STKSIZE SETA  20+&STKENT*&STACK+4\n.NOSTK1  ANOP\n         LA    0,80+&RWALNG+&STKSIZE\n         AIF   ('&SP' EQ '0').SKIPSP\n         LA    1,&SP\n         SLL   1,24\n         OR    0,1\n.SKIPSP  ANOP\n         LR    2,0\n         GETMAIN R,LV=(0)\n.*\n.*       SAVE AREA, STACK, AND WORK AREA LAYOUT\n.*\n.*       -8     4  'SESA'\n.*       -4     4  SUB POOL AND TOTAL LENGTH FOR SUBEXIT FREEMAIN\n.*        0    72  STANDARD SAVE AREA\n.*       72     4  R14 SAVE AREA DURING PERFORM IF PSAVE=YES\n.*       76     4  R15 SAVE AREA DURING PERFORM IF PSAVE=YES\n.*       80     4  STACK POINTER SAVE AREA IF NO PSTACK DEFINED\n.*       84     4  LENGTH OF STACK ENTRY (4 OR 8 IF PBASE DEFINED)\n.*       88     4  LOW STACK ENTRY WITH HIGH BIT ON FOR CHECKING\n.*       92     X  STACK OF LENGTH DEFINED BY STACK=\n.*       92+X   4  HIGH STACK ENTRY WITH HIGH BIT ON FOR CHECKING\n.*       96+X   Y  WORK AREA DEFINED BY RWA= AND RWALNG=\n.*\n.*\n         MVC   0(4,1),8(&BASES(1))\n         ST    2,4(,1)\n         LA    1,8(,1)\n         AIF   ('&STACK' EQ '0').NOSTK2\n         AIF   ('&PSAVE'(1,1) EQ 'N').L1\n.*                                          IF SAVE REQUIRED\n.*                                             SET SWITCH\n&PSAVESW SETB  1\n.L1      AIF   ('&PCHECK'(1,1) EQ 'N').L2\n.*                                          IF CHECKING REQUIRED\n.*                                             SET SWITCH\n&PCHKSW  SETB  1\n         XC    88(8+&STKENT*&STACK,1),88(1) CLEAR STACK AREA\n         MVI   88(1),X'80'                  SET LOW BAD BIT\n         MVI   92+&STKENT*&STACK.(1),X'80'  SET HIGH BAD BIT\n.L2      ANOP\n         LA    15,&STKENT\n         ST    15,84(1)                     SET ENTRY LENGTH\n         AIF   ('&PSTACK' NE '0').L3\n.*                                          IF NO STACK REGISTER\n         LA    15,92(1)\n         ST    15,80(1)                       SAVE STACK POINTER\n         AGO   .L4\n.*                                          ELSE\n.L3      ANOP\n&PSTKSW  SETB  1                               SET PSTACK SWITCH\n&PSTKREG SETC  '&PSTACK'                       SAVE REG FOR MACROS\n         LA    &PSTKREG,92(1)                  LOAD STACK REGISTER\n.L4      ANOP\n.NOSTK2  ANOP\n         ST    1,8(13)\n         ST    13,4(1)\n         LM    14,2,12(13)\n         L     13,8(13)\n         AIF   ('&RWALNG' EQ '0' AND '&RWA' EQ '').GEN   RPI 654\n         AIF   ('&RWALNG' EQ '0' OR  '&RWA' EQ '').ERR1  RPI 654,709\n         USING &RWA-(72+&STKSIZE),13\n         AGO   .GEN\n.NORENT  ANOP\n         STM   14,12,12(13)\n         BAL   15,104(15)\n         DC    18F'0'\n         DC    CL8'&NAME'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n         ST    15,8(13)\n         ST    13,4(15)\n         LR    13,15\n         AIF   (T'&BASES(1) NE 'N').CHKR13\n         AIF   (&BASES(1) EQ 13).GENB13\n         AGO   .GENBX\n.CHKR13  ANOP\n         AIF   ('&BASES(1)' EQ 'R13').GENB13      RPI 654\n.GENBX   ANOP\n         ZOPTLR &BASES(1),13\n.SKIPR13 ANOP\n.*       DROP  13                               RPI 654, RPI 1189\n         USING &NAME+8,&BASES(1)\n         AGO   .GEN\n.GENB13  ANOP\n         USING &NAME+8,13\n.GEN     ANOP\n&NBASE   SETA  N'&BASES\n&S       SETA  1\n.LOOP    ANOP\n&S       SETA  &S+1\n         AIF   (&S GT &NBASE).EXIT\n&OFFSET  SETA  &OFFSET+4096                    RPI 601\n         LAY   &BASES(&S),4096(&BASES(&S-1))   RPI 601\n         USING &NAME+8+&OFFSET,&BASES(&S)\n         AGO   .LOOP\n.EXIT    ANOP\n         MEXIT\n.ERR1    MNOTE 'SUBENTRY PARM ERROR RWA= REQUIRES RWALNG= ALSO'\n         MEXIT\n.ERR2    MNOTE 'SUBENTRY PARM ERROR RENT=YES REQUIRES BASE(1) NE 13'\n         MEXIT\n         MEND\n\n./ ADD NAME=SUBEXIT  0100-14178-14178-0013-00055-00055-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/12/07                                                 *\n.*********************************************************************\n.* 04/12/07 DSH RPI 590 COPIED FROM CBT SHARE SPLA TAPE 178 TO ADD\n.*          SUPPORT FOR RENT, EXTRA BASES, ETC.\n.* 04/24/07 RPI 601 CORRECT PLACEMENT OF LABEL\n.* 07/11/07 RPI 654 REMOVE USED RWALNG= AND SP=\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY\n.*********************************************************************\n.*             MACRO-ID. 'SUBEXIT'.\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE WRITTEN.  07/28/70.\n.*             REMARKS.  THIS MACRO GENERATES THE CODE TO RESTORE\n.*                       REGISTERS AND RETURN FROM A CSECT.  A RETURN\n.*                       CODE OF ZERO IS RETURNED UNLESS A DIFFERENT\n.*                       CODE IS SPECIFIED USING THE KEY WORD RC=.\n.*             REV1 11/14/74 ADD REENTRANT OPTION. SEE SUBENTRY.\n.*             REV2 12/09/74 ADD REG OPTION FOR RC OPERAND.\n.*             REV3 02/10/76 DSH - ADD SUBPOOL OPTION\n.*********************************************************************\n&NAME    SUBEXIT &RC=0,&RENT=NO\n         AIF   ('&NAME' EQ '').SKIPDS\n&NAME    DS    0H\n.SKIPDS  ANOP\n         GBLB  &RENTOPT\n         AIF   ('&RC'(1,1) EQ '(').RCREG\n         LA    15,&RC\n         AGO   .CHKRENT\n.RCREG   ANOP\n         ZOPTLR 15,&RC\n.CHKRENT ANOP\n         AIF   (&RENTOPT EQ 0).NORENT\n         L     13,4(,13)\n         STM   15,1,16(13)\n         L     1,8(,13)\n         LA    15,8\n         SLR   1,15\n         L     0,4(,1)\n         FREEMAIN R,LV=(0),A=(1)\n         LM    14,12,12(13)\n         BR    14\n         MEXIT\n.NORENT  ANOP\n         L     13,4(,13)\n         L     14,12(,13)\n         LM    2,12,28(13)\n         BR    14\n         MEND\n./ ADD NAME=SYSSTATE 0100-14178-14178-0013-00025-00025-00000-Z390MAC\n         MACRO                                                          00002\n.*********************************************************************\n.* Copyright 2008 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 07/30/08                                                 *\n.*********************************************************************\n.* 07/30/078 RPI 885 ADD FOR COMPATIBILITY WITH ZOS APPLICATIONS\n.*********************************************************************\n.* 1.  ISSUE WARNING IF AMODE64=YES, ASCENV=AR, OR ARCHLVL > 2\n.*********************************************************************\n&N       SYSSTATE &AMODE64=NO,    DEFAULT IS AMODE24 OR AMODE31        X\n               &ASCENV=P,         PRIMARY MODE (AR MODE NOT SUPPORTED) X\n               &ARCHLVL=2         ARCHITECTURE LEVEL 2 FOR Z/OS\n         AIF   ('&AMODE64' EQ 'NO').OK1\n         MNOTE 4,'SYSSTATE AMODE64 NOT SUPPORTED YET'\n.OK1     ANOP\n         AIF   ('&ASCENV' EQ 'P').OK2\n         MNOTE 4,'SYSSTATE ASCENV=P PRIMARY MODE ONLY SUPPORTED'\n.OK2     ANOP\n         AIF   (&ARCHLVL LE 2).OK3\n         MNOTE 4,'SYSSTATE ARCHLVL 2 ONLY SUPPORTED'\n.OK3     ANOP\n         MEND\n./ ADD NAME=SYSTRACE 0100-14178-14178-0013-00017-00017-00000-Z390MAC\n         MACRO\n&NAME    SYSTRACE &TRACE_OPTIONS\n.*\n.* AUTHOR. DON HIGGINS\n.* DATE.   05/07/11\n.* REMARKS. SET EZ390 TRACE OPTIONS FROM STRING\n.*          TERMINATED BY SPACE.  THE EXECUTION TIME\n.*          OPTIONS INCLUDE:\n.*            1. NULL STRING TURNS ALL TRACE OPTIONS OFF\n.*            2. E - INSTRUCTION TRACE ON TRE\n.*            3. G - MEMORY GETMAIN/FREEMAIN\n.*            4. Q - QVSAM I/O\n.*            5. T - TCPIO I/O\n.*            6. V - VSAM  I/O\n&TEXT    SETC '&TRACE_OPTIONS'(2,K'&TRACE_OPTIONS-2)\n&NAME    LA   1,=C'&TEXT '\n         SVC  X'AC' SET EZ390 TRACE OPTIONS FROM STRING\n./ ADD NAME=TCPIO    0100-14178-14178-0013-00135-00135-00000-Z390MAC\n         MACRO\n&N       TCPIO &OP,         OPERATION - OPEN, CLOSE, SEND, RECEIVE     X\n               &OPTION,     NOWAIT OPTION FOR RECIEVE                  X\n               &MSG=,       RX/REG ADDRESS OF MESSAGE TO SEND/RECEIVE  X\n               &LMSG=,      RX,REG MSG SEND LENGTH OR RECEIVE MAX LEN  X\n               &HOST=,      RX/REG ADDR OF HOST IP ADDRESS (*=LOCAL)   X\n               &PORT=,      PORT NUMBER FOR ALL OPERATIONS             X\n               &CONN=-1     CONNECTION NUMBER FOR SERVER SEND/RECEIVE\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 01/01/07                                                 *\n.*********************************************************************\n.* MAINTENANCE\n.* 01/01/07 RPI 524 ADD TCPIO MACRO AND SVC X'7C' SUPPORT FOR SOCKETS\n.* 02/21/07 RPI 554 ADD TCPIO NOWAIT OPTION FOR RECEIVE\n.*                  REMOVE LMAX AND USE LMSG FOR SEND/RECEIVE\n.*                  ADD CONN= CONNECTION ID FOR SEND OR RECEIVE\n.*                  (CONN ID IS RETURNED IN R2 BY SERVER RECEIVE)\n.* 03/11/07 RPI 573 ALLOW CONN=-1 IN ADDITION TO DEFAULT CONN=-1\n.* 08/21/07 RPI 670 ADD REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.* SVC INPUT:\n.*   R0 OP CODE 1=OPEN SERVER ON CURRENT HOST TO ACCEPT CONNECTIONS\n.*     R1  PORT #\n.*   R0 OP CODE 2=OPEN CLIENT CONNECTION TO ACTIVE SERVER ON HOST\n.*     R1  PORT #\n.*     R14 HOST IP ADDR NULL TERMINATED OR 0 FOR LOCAL HOST (HOST=*)\n.*   R0 OP CODE 3=CLOSE\n.*     R1  PORT #\n.*   R0 OP CODE 4=SEND\n.*     R1  PORT #\n.*     R2  CONN # (ONLY REQUIRED FOR SERVER PORT DUE TO MULT. CONN)\n.*     R14 MSG ADDRESS\n.*     R15 MSG LENGTH FOR SEND\n.*   R0 OP CODE 5= RECEIVE WITH OPTIONAL NOWAIT BIT 15\n.*     R1  PORT #\n.*     R2  CONN # (IF -1 THEN NEXT MSG FROM ANY CONNECTION)\n.*     R14 MSG ADDRESS\n.*     R15 MAX MESSAGE LENGTH FOR RECEOVE (ACTUAL RETURNED IN R1)\n.* SVC OUTPUT\n.*     R15 =  0 OK\n.*     R15 =  4 NOWAIT SPECIFIED ON RECEIVE AND NO MSG READY\n.*     R15 = 12 ERROR OCCURRED (SEE ERROR MESSAGES)\n.*     R1  = ACTUAL MESSAGE LENGTH RETURNED FOR RECEIVE\n.*     R2  = CONNECTION ID FOR SERVER PORT RECEIVE (REQUIRED FOR SEND)\n.*********************************************************************\n         AIF   ('&OP' EQ 'OPEN').OPEN\n         AIF   ('&OP' EQ 'CLOSE').CLOSE\n         AIF   ('&OP' EQ 'SEND').SEND\n         AIF   ('&OP' EQ 'RECEIVE').RECEIVE\n         AGO   .ERR1\n.OPEN    ANOP\n         AIF   ('&HOST' NE '').OPEN_CLIENT\n.OPEN_SERVER ANOP\n         LA    0,1           R0 = TCPIO OP OPEN SERVER PORT ON HOST\n         AGO   .PORT\n.OPEN_CLIENT ANOP\n         LA    0,2           R0 = TCPIO OP OPEN CLIENT PORT CONN7ECTION\n         AIF   ('&HOST' EQ '*').HOST_LOCAL\n         AIF   ('&HOST'(1,1) EQ '(').HOSTREG\n         LA    14,&HOST      R14= TCPIO HOST IP NULL TERMINATED\n         AGO   .PORT\n.HOST_LOCAL ANOP\n         LA    14,0          R14= 0 FOR LOCAL HOST\n         AGO   .PORT\n.HOSTREG ANOP\n         ZOPTLR 14,&HOST(1)   R14= TCPIO HOST IP NULL TERMINATED\n         AGO   .PORT\n.CLOSE   ANOP\n         LA    0,3           R0 = TCPIO OP CLOSE PORT\n         AGO   .PORT\n.SEND    ANOP\n         LA    0,4           R0 = TCPIO OP SEND MSG VIA PORT CONNECTION\n         AGO   .CONN\n.RECEIVE ANOP\n         LA    0,5           R0 = TCPIO OP RECV MSG VIA PORT CONNECTION\n         AIF   ('&OPTION' EQ '').CONN\n         AIF   (UPPER '&OPTION' EQ 'NOWAIT').NOWAIT\n         AGO   .ERR5\n.NOWAIT  ANOP\n         OILH  0,1           R0 BIT 15 FOR NOWAIT  RPI 554\n.CONN    AIF   ('&CONN' EQ '').NOCONN\n         AIF   ('&CONN' EQ '-1').NOCONN\n         AIF   ('&CONN'(1,1) EQ '(').CONNREG\n         L     2,&CONN\n         AGO   .MSG\n.NOCONN  ANOP          ASSUME CLIENT PORT SEND\n         SR    2,2     (SVC WILL ISSUE ERROR IF SERVER PORT AND R2=-1)\n         BCTR  2,0\n         AGO   .MSG\n.CONNREG ANOP\n         ZOPTLR 2,&CONN(1)\n.MSG     ANOP\n         AIF   ('&MSG' EQ '').ERR2\n         AIF   ('&MSG'(1,1) EQ '(').MSGREG\n         LA    14,&MSG\n         AGO   .LMSG\n.MSGREG  ANOP\n         ZOPTLR 14,&MSG(1)\n.LMSG    ANOP\n         AIF   ('&LMSG' EQ '').ERR4\n         AIF   ('&LMSG'(1,1) EQ '(').LMSGREG\n         AIF   (T'&LMSG EQ 'N').LMSGLIT\n         L     15,&LMSG\n         AGO   .PORT\n.LMSGLIT ANOP\n         L     15,=F'&LMSG'\n         AGO   .PORT\n.LMSGREG ANOP\n         ZOPTLR 15,&LMSG(1)\n.PORT    ANOP\n         AIF   ('&PORT' EQ '').ERR3\n         AIF   ('&PORT'(1,1) EQ '(').PORTREG\n         LA    1,&PORT\n         AGO   .SVC\n.PORTREG ANOP\n         ZOPTLR 1,&PORT(1)\n.SVC     ANOP\n         SVC   X'7C' R0=OP(1-5) R1=PORT R14=HOST/MSG R15=LMSG\n         MEXIT\n.ERR1    MNOTE 12,'TCPIO - INVALID OP - OPEN, CLOSE, SEND, RECEIVE'\n         MEXIT\n.ERR2    MNOTE 12,'TCPIO - MISSING KEYWORD MSG= FOR SEND/RECV'\n         MEXIT\n.ERR3    MNOTE 12,'TCPIO - MISSING KEYWORD PORT= FOR SEND/RECV'\n         MEXIT\n.ERR4    MNOTE 12,'TCPIO - LMSG LENGTH FOR SEND/RECEIVE REQUIRED'\n         MEXIT\n.ERR5    MNOTE 12,'TCPIO - INVALID OPTION - &OPTION'\n         MEXIT\n         MEND\n./ ADD NAME=TESTCB   0100-14178-14178-0013-00046-00046-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 08/10/07 INITIAL CODING TO TEST FDBK OR RECLEN FIELDS\n.* 08/19/07 RPI 680 SHOWCB TO TESTCB\n.* 09/14/07 RPI 672 VERIFY RPL VS ACB\n.* 09/19/07 RPI 697 SET RC=0\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       TESTCB &RPL=,        RPL REQUEST PARAMATER LIST ADDRESS       X\n               &ACB=,         ACB ACCESS CONTROL BLOCK ADDRESS         X\n               &FDBK=,        TEST RPL FEEDBACK REASON CODE BYTE       X\n               &RECLEN=       TEST RPL LENGTH OF RECORD\n         LCLB  &MODS\n&NPOS    SETA  N'&SYSLIST\n.POSLOOP ANOP\n         AIF   (&NPOS EQ 0).POSEND\n         MNOTE 12,'TESTCB UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'\n&NPOS    SETA  &NPOS-1\n         AGO   .POSLOOP\n.POSEND  ANOP\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         SR    15,15 RC=0\n         AIF   ('&FDBK'   NE '').FDBK\n         AIF   ('&RECLEN' NE '').RECLEN\n         MNOTE 12,'TESTCB FIELD NOT SUPPORTED YET'\n.EXIT    ANOP\n         MEXIT\n.FDBK    ANOP\n         ZTESTCB &RPL,RPLFEEDB-IHARPL+3,&FDBK,1\n         AIF   ('&RPL' NE '').EXIT\n         MNOTE 'TESTCB RPL REQUIRED FOR FDBK'\n         AGO   .EXIT\n.RECLEN  ANOP\n         ZTESTCB &RPL,RPLLREC-IHARPL,&RECLEN,4\n         AIF   ('&RPL' NE '').EXIT\n         MNOTE 'TESTCB RPL REQUIRED FOR RECLEN'\n         AGO     .EXIT\n         MEND\n./ ADD NAME=TGET     0100-14178-14178-0013-00111-00111-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/30/05                                                 *\n.*********************************************************************\n.* 12/11/05 RPI47 - add TGET/TPUT support for GUI window\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 02/21/06 RPI211 MAKE TGET/TPUT MAINFRAME COMPATIBLE AT SVC LEVEL\n.* 02/25/06 RPI211 MAKE TGET/TPUT MAINFRAME COMPATIBLE (DEMOGUI4 TEST)\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.*\n.* TGET BUFFER,LBUFFER,OPTIONS\n.*\n.*     BUFFER  - RX or reg pointer to TN3290 data stream buffer\n.*     LBUFFER - absolute value or reg length of buffer\n.*     OPTIONS - the follwing options may be coded:\n.*                 EDIT   - read text and remove controls (default)\n.*                 NOEDIT - read text with controls\n.*                 WAIT   - wait for input (default)\n.*                 NOWAIT - return with R15=4 if no response avail.\n.*                 ASIS   - read TN3270 data stream unedited\n.*\n.* TGET (R0),(R1),OPTIONS\n.*\n.*     If TGET (0),(1) and no options are coded then\n.*     simple SVC 93 is generated so user can set options in regs\n.*\n.* Register input:\n.*\n.* R0LH = ASID (NOT USED)\n.* R0LL = BUFFER LENGTH\n.* R1   = LOW 24 BIT BUFFER ADDRESS (RMODE24 REQUIRED)\n.* R1   = FLAGS IN HIGH BYTE\n.*           X'80' - 1=TGET 0=TPUT\n.*           X'40' - USERID IN R15 (NOT USED)\n.*           X'20' - LOWP PROCESSING REQUIRED (NOT USED)\n.*           X'10' - 1=NOWAIT 0=WAIT\n.*           X'08' - 1=HOLD 0=NOHOLD\n.*           X'04' - 1=BREAKIN 0=NOBREAKIN\n.*           X'03' - 00=EDIT, 01=ASIS, 10=CONTROL, 11=FULLSCR\n.* Register output:\n.* R1    = bytes acutally read\n.*********************************************************************\n&N       TGET  &BUFF,                                                  X\n               &LBUFF,                                                 X\n               &MF=I      NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   ('&BUFF'(1,1) EQ '(').RECREG\n         LA    1,&BUFF\n         AGO   .CHKLEN\n.RECREG  ANOP\n         ZOPTLR 1,&BUFF(1)\n.CHKLEN  ANOP\n         AIF   ('&LBUFF'(1,1) EQ '(').LENREG\n         LA    0,&LBUFF\n         AGO   .SETOPT\n.LENREG  ANOP\n         AIF   (&LBUFF(1) NE 1).LENREGOK\n         MNOTE 12,'TGET INVALID LENGTH REGISTER - &LBUFF(1)'\n.LENREGOK ANOP\n         ZOPTLR 0,&LBUFF(1)\n.SETOPT  ANOP\n&OP      SETC  '1'  X'80' 1=TGET, 0=TPUT\n&USERID  SETC  '0'  X'40' 0=NO USERID IN R15    (NOT USED)\n&LOWP    SETC  '0'  X'20' 0=LOWP                (NOT USED)\n&WAIT    SETC  '0'  X'10' 0=WAIT, 1=NOWAIT\n&HOLD    SETC  '0'  X'08' 0=NOHOLD, 1=HOLD      (NOT USED)\n&BREAKIN SETC  '0'  X'04' 0=BREAKIN, 1=BREANKIN (NOT USED)\n&TYPE    SETC  '00' X'03' 00=EDIT, 01=ASIS, 10=CONTROL, 11=FULLSCR\n.CHKOPT  ANOP\n&NP      SETA  N'&SYSLIST\n         AIF   (&NP GE 3 AND '&SYSLIST(3)' EQ 'R').SVC USE REG PARMS\n&I       SETA  2\n.OPTLOOP ANOP\n&I       SETA  &I+1\n         AIF   (&I GT &NP).OPTEND\n         AIF   ('&SYSLIST(&I)' EQ 'EDIT').EDIT\n         AIF   ('&SYSLIST(&I)' EQ 'ASIS').ASIS\n         AIF   ('&SYSLIST(&I)' EQ 'WAIT').WAIT\n         AIF   ('&SYSLIST(&I)' EQ 'NOWAIT').NOWAIT\n         MNOTE 12,'TGET INVALID OPTION - &SYSLIST(&I)'\n         AGO   .OPTLOOP\n.EDIT    ANOP\n&TYPE    SETC  '00' X'03' 00=EDIT\n         AGO   .OPTLOOP\n.ASIS    ANOP\n&TYPE    SETC  '01' X'03'  01=ASIS\n         AGO   .OPTLOOP\n.WAIT    ANOP\n&WAIT    SETC  '0' X'10'  0=WAIT\n         AGO   .OPTLOOP\n.NOWAIT  ANOP\n&WAIT    SETC  '1' X'10'  1=NOWAIT\n         AGO   .OPTLOOP\n.OPTEND  ANOP\n         ICM   1,8,=B'&OP&USERID&LOWP&WAIT&HOLD&BREAKIN&TYPE'\n.SVC     ANOP\n         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)\n         MEXIT\n.ERR1    MNOTE 12,'TGET MF= NOT SUPPORTED'\n         MEND\n\n./ ADD NAME=TIME     0100-14178-14178-0013-00166-00166-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 11/02/05 RPI68 - add SVC CLOCK options for STCK, STCKE, and JAVA\n.* 11/15/05 RPI94 - add SVC NS option for nano-second interval timer\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 01/16/06 RPI175 ADD CHECK FOR MISSING ADDR PARM\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 06/22/07 RPI 662 ADD SVC TS OPTION FOR 29 CHAR NANOSEC TIMESTAMP\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 03/18/08 RPI 825 ADD EXTENDED OPTION INS TO RETURN R1=INSTR. COUNT\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       TIME  &TYPE,               DEC,BIN,MIC,STCK,STCKE,NS,TS,INS   X\n               &ADDR,               STORE RESULT ADDR                  X\n               &CLOCKTYPE=,         STCK/STCKE(1900),EXT JAVA (1970)   X\n               &DATETYPE=YYYYDDD,   SYSTEM DATE FORMATS                X\n               &LINKAGE=SVC,        SVC/SYSTEM                         X\n               &MF=I,               NOT SUPPORTED                      X\n               &ZONE=LT             LOCAL TIME (GMT/UTC NOT SUPPORTED)\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   (N'&SYSLIST LE 2).NPOK\n         MNOTE 12,'TIME UNSUPPORTED OPERANDS - &SYSLIST(3)'\n         MEXIT\n.NPOK    ANOP\n.*\n.* RETURN TIME AND DATE IN REQUESTED FORMAT\n.*\n         AIF   ('&MF' NE 'I').ERR3\n         AIF   ('&ZONE' NE 'LT').ERR2\n         AIF   ('&LINKAGE' EQ 'SVC').SVCLINK\n         AIF   ('&LINKAGE' EQ 'SYSTEM').SYSLINK\n         MNOTE 12,'TIME INVALID LINKAGE TYPE - &LINKAGE'\n         MEXIT\n.*\n.* LINKAGE=SVC DEFAULT\n.*\n.SVCLINK ANOP\n         AIF   ('&TYPE' EQ '').SVCDEC\n         AIF   ('&TYPE' EQ 'DEC').SVCDEC\n         AIF   ('&TYPE' EQ 'BIN').SVCBIN\n         AIF   ('&TYPE' EQ 'TU').SVCTU\n         AIF   ('&TYPE' EQ 'MIC').SVCMIC\n         AIF   ('&TYPE' EQ 'STCK').SVCSTCK\n         AIF   ('&TYPE' EQ 'CLOCK').SVCCLOCK\n         AIF   ('&TYPE' EQ 'NS').SVCNS\n         AIF   ('&TYPE' EQ 'TS').SVCTS        RPI 662\n         AIF   ('&TYPE' EQ 'INS').SVCINS      RPI 825\n         MNOTE 12,'TIME INVALID SVC LINKAGE TYPE - &TYPE'\n         MEXIT\n.SVCDEC  ANOP             R1 = HEX CCYYDDDF\n         LA    0,0   DEC  R0 = HEX HHMMSSTH\n         AGO   .SVCSVC\n.SVCBIN  ANOP\n         LA    0,1   BIN  R0 = 0.01 SECONDS\n         AGO   .SVCSVC\n.SVCTU   ANOP\n         LA    0,2   TU   R0 = 26.04166 MIC UNITS\n         AGO   .SVCSVC\n.SVCMIC  ANOP\n         LA    0,3   MIC  0(8,R1) = DOUBLE WORD MICROSECONDS\n         AGO   .SVCADDR\n.SVCSTCK ANOP\n         LA    0,4   STCK 0(8,R1) = TOD DOUBLE WORD (BIT 51=MIC)\n.SVCADDR ANOP\n         AIF   ('&ADDR' EQ '').ERR1\n         AIF   ('&ADDR'(1,1) EQ '(').SVCAREG\n         LA    1,&ADDR\n         AGO   .SVCSVC\n.SVCAREG ANOP\n         ZOPTLR 1,&ADDR(1)\n.SVCSVC  ANOP\n         SVC   11 TIME AND DATE\n         MEXIT\n.SVCCLOCK ANOP\n         AIF   ('&CLOCKTYPE' EQ 'STCK').CLOCK_STCK\n         AIF   ('&CLOCKTYPE' EQ 'STCKE').CLOCK_STCKE\n         AIF   ('&CLOCKTYPE' EQ 'JAVA').CLOCK_JAVA\n         MNOTE 12,'TIME INVALID SVC CLOCK TYPE - &TYPE'\n.CLOCK_STCK ANOP\n         LA    0,5 CLOCK STCK - DOUBLE WORD BIT 51 MICS FROM 1900\n         AGO   .SVCADDR\n.CLOCK_STCKE ANOP\n         LA    0,6 CLOCK STCKE - 2 DOUBLE WORDS BIT 59 MICS FROM 1900\n         AGO   .SVCADDR\n.CLOCK_JAVA  ANOP\n         LA    0,7 CLOCK JAVA - DOUBLE WORD BIT 63 MILL-SEC FROM 1970\n         AGO   .SVCADDR\n.SVCNS   ANOP\n         LA    0,8 NANOSECONDS - DOUBLE WORD BIT 63 NANO-SEC COUNTER\n         AGO   .SVCADDR\n.SVCTS   ANOP      RPI 662 YYYY-MM-DD HH:MM:SS.NNNNNNNNN (29 CHAR)\n         LA    0,9 OBDC TIMESTAMP WITH 9 DIGIT NANOSECONDS\n         AGO   .SVCADDR\n.SVCINS  ANOP\n         LA    0,16 RPI 825 R1=INSTRUCTION COUNTER\n         AGO   .SVCSVC\n.*\n.* LINKAGE=SYSTEM\n.*\n.SYSLINK ANOP\n         AIF   ('&TYPE' EQ '').SYSDEC\n         AIF   ('&TYPE' EQ 'DEC').SYSDEC\n         AIF   ('&TYPE' EQ 'BIN').SYSBIN\n         AIF   ('&TYPE' EQ 'MIC').SYSMIC\n         AIF   ('&TYPE' EQ 'STCK').SYSSTCK\n         AIF   ('&TYPE' EQ 'STCKE').SYSSTCKE\n         MNOTE 12,'TIME INVALID SYS LINKAGE TYPE - &TYPE'\n         MEXIT\n.SYSDEC  ANOP\n         LA    0,10   DEC   0(4,R1) = HHMMSSTH\n         AGO   .SYSADDR\n.SYSBIN  ANOP\n         LA    0,11   BIN   0(4,R1) = 0.01 SECONDS\n         AGO   .SYSADDR\n.SYSMIC  ANOP\n         LA    0,13  MIC    0(8,R1) = MICROSECONDS\n         AGO   .SYSADDR\n.SYSSTCK ANOP\n         LA    0,14   STCK  0(8,R1) = CLOCK (BIT 51 = MIC)\n         AGO   .SYSADDR\n.SYSSTCKE ANOP\n         LA    0,15   SKCKE 0(16,R1) = ECLOCK (BIT 59 = MIC)\n.SYSADDR ANOP\n         AIF   ('&ADDR' EQ '').ERR1\n         AIF   ('&ADDR'(1,1) EQ '(').SYSAREG\n         LA    1,&ADDR\n         AGO   .SYSDATE\n.SYSAREG ANOP\n         ZOPTLR 1,&ADDR(1)\n.SYSDATE ANOP\n         AIF   ('&TYPE' EQ 'STCKE').SYSSVC NO DATE\n         AIF   ('&DATETYPE' EQ 'YYYYDDD').SYSYYYYDDD\n         AIF   ('&DATETYPE' EQ 'MMDDYYYY').SYSMMDDYYYY\n         AIF   ('&DATETYPE' EQ 'DDMMYYYY').SYSDDMMYYYY\n         AIF   ('&DATETYPE' EQ 'YYYYMMDD').SYSYYYYMMDD\n         MNOTE 12,'TIME INVALID SYS LINKAGE DATETYPE - &DATETYPE'\n         MEXIT\n.SYSYYYYDDD ANOP\n         IILH  0,1      8(4,R1) = HEX 0YYYYDDD\n         AGO   .SYSSVC\n.SYSMMDDYYYY ANOP\n         IILH  0,2      8(4,R1) = HEX MMDDYYYY\n         AGO   .SYSSVC\n.SYSDDMMYYYY ANOP\n         IILH  0,3      8(4,R1) = HEX DDMMYYYY\n         AGO   .SYSSVC\n.SYSYYYYMMDD ANOP\n         IILH  0,4      8(4,R1) = HEX YYYYMMDD\n.SYSSVC  ANOP\n         SVC   11 TIME AND DATE\n         MEXIT\n.ERR1    MNOTE 12,'TIME MISSING POSITIONAL ADDRESS PARM'\n         MEXIT\n.ERR2    MNOTE 12,'TIME ZONE ONLY SUPPORTS LT'\n         MEXIT\n.ERR3    MNOTE 12,'TIME MF= NOT SUPPORTED'\n         MEND\n./ ADD NAME=TN3270   0100-14178-14178-0013-00242-00242-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/30/05                                                 *\n.*********************************************************************\n.* 11/20/05 RPI47  - add TN3270 support functions and equates\n.* 02/25/06 RPI219 - add WCC_CKD and WCC_KD for DEMOGUI4 test update\n.* 03/13/06 RPI 220 ADD WCC_BKD TO SOUND ALARM\n.* 03/15/06 RPI 224 ADD RA COMMAND SUPPORT (RA,ROW,COL,BYTE)\n.* 04/10/06 RPI 244 ADD MISSING ERROR MESSAGES\n.* 05/17/06 RPI 227 ADD GE graphic escape order X'08' to symbols\n.* 04/02/07 RPI 572 CHANGE ATTR BYTES TO EBCDIC GRAPHIC CHARS.\n.* 04/03/07 RPI 572 CHANGE SBA TRANSLATE X'E1' TO X'61'\n.* 04/03/07 RPI 572 ADD 4 ADDITIONAL ATTR EQU'S WITH MDT SET\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 06/06/08 RPI 628 add EEOF and EINP local key cmds and WRT_EAU order\n.* 06/23/08 RPI 850 add ATT_PND and ATT_UND non-display char attribute\n.*********************************************************************\n.*\n.* TN3270 MACRO TO SUPPORT DEFINITION OF TN3270 DATA STREAMS\n.*\n.*   IF FIRST PARAMETER IS THE WORD SYMBOLS THEN EQUATES FOR TN3270\n.*   CONTROL CHARACTERS AND ATTRIBUTES ARE GENERATED.\n.*\n.*   ANY NUMBER OF TN3270 SYMBOLS AND ASSOCIATED DATA BYTES\n.*   CAN BE GENERATED.  SYMBOLS REQUIRING DATA BYTES MAY BE\n.*   ENCLOSED IN SUBLIST WITH DATA BYTES.  FOR SBA SUBLIST THE ROW AND\n.*   COLUMN MAY BE SPECIFIED IN SUBLIST FOR MACRO TO CALCULATE ADDR.\n.*\n.*\n.*********************************************************************\n&N       TN3270\n         AIF   ('&N' EQ '').SKPEQU\n&N       EQU   *\n.SKPEQU  ANOP\n         AIF   ('&SYSLIST(1)' EQ 'SYMBOLS').SYMBOLS\n         LCLA  &TAB(64)\n&TAB(1)  SETA  X'40',X'C1',X'C2',X'C3',X'C4',X'C5',X'C6',X'C7',        X\n               X'C8',X'C9',X'4A',X'4B',X'4C',X'4D',X'4E',X'4F',        X\n               X'50',X'D1',X'D2',X'D3',X'D4',X'D5',X'D6',X'D7',        X\n               X'D8',X'D9',X'5A',X'5B',X'5C',X'5D',X'5E',X'5F',        X\n               X'60',X'61',X'E2',X'E3',X'E4',X'E5',X'E6',X'E7', RPI572 X\n               X'E8',X'E9',X'6A',X'6B',X'6C',X'6D',X'6E',X'6F',        X\n               X'F0',X'F1',X'F2',X'F3',X'F4',X'F5',X'F6',X'F7',        X\n               X'F8',X'F9',X'7A',X'7B',X'7C',X'7D',X'7E',X'7F'\n&NP      SETA  N'&SYSLIST\n&OPS     SETC  ''\n.LOOP1   ANOP\n&I       SETA  &I+1\n         AIF   (&I GT &NP).EOF\n&NPS     SETA  N'&SYSLIST(&I)\n         AIF   (&NPS EQ 1).GENONE\n         AIF   ('&OPS' EQ '').FLUSH1\n&OPS     SETC  '&OPS'(2,K'&OPS-1)\n         DC    AL1(&OPS)\n&OPS     SETC  ''\n.FLUSH1  ANOP\n         AIF   ('&SYSLIST(&I,1)' EQ 'SBA').GENSBA\n         AIF   ('&SYSLIST(&I,1)' EQ 'RA').GENRA\n&J       SETA  0\n.LOOP2   ANOP\n&J       SETA  &J+1\n         AIF   (&J LE &NPS).NEXT\n         AIF   ('&OPS' EQ '').LOOP1\n&OPS     SETC  '&OPS'(2,K'&OPS-1)\n         DC    AL1(&OPS)\n&OPS     SETC  ''\n         AGO   .LOOP1\n.NEXT    ANOP\n         AIF   ('&SYSLIST(&I,&J)'(K'&SYSLIST(&I,&J),1) EQ '''').GENLITN\n         AIF   ('&SYSLIST(&I,&J)'(K'&SYSLIST(&I,&J),1) EQ ')').GENLITN\n&OPS     SETC  '&OPS,&SYSLIST(&I,&J)'\n         AGO   .LOOP2\n.GENLITN ANOP\n         AIF   ('&OPS' EQ '').GENLITN1\n&OPS     SETC  '&OPS'(2,K'&OPS-1)\n         DC    AL1(&OPS)\n&OPS     SETC  ''\n.GENLITN1 ANOP\n         DC    &SYSLIST(&I,&J)\n         AGO   .LOOP2\n.EOF     ANOP\n         AIF   ('&OPS' EQ '').SKPDC\n&OPS     SETC  '&OPS'(2,K'&OPS-1)\n         DC    AL1(&OPS)\n.SKPDC   ANOP\n         MEXIT\n.GENONE  ANOP\n         AIF   ('&SYSLIST(&I)'(K'&SYSLIST(&I),1) EQ '''').GENLIT1\n         AIF   ('&SYSLIST(&I)'(K'&SYSLIST(&I),1) EQ ')').GENLIT1\n&OPS     SETC  '&OPS,&SYSLIST(&I)'\n         AGO   .LOOP1\n.GENLIT1 ANOP\n         AIF   ('&OPS' EQ '').GENLIT11\n&OPS     SETC  '&OPS'(2,K'&OPS-1)\n         DC    AL1(&OPS)\n&OPS     SETC  ''\n.GENLIT11 ANOP\n         DC    &SYSLIST(&I)\n         AGO   .LOOP1\n.GENSBA  ANOP\n         AIF   (N'&SYSLIST(&I) NE 3).ERR1\n&ROW     SETA  &SYSLIST(&I,2)-1\n&COL     SETA  &SYSLIST(&I,3)-1\n         AIF   (&ROW LT 0 OR &ROW GT 23).ERR2\n         AIF   (&COL LT 0 OR &COL GT 79).ERR3\n&OFFSET  SETA  &ROW*80+&COL\n&SBA1    SETA  &OFFSET/64\n&SBA2    SETA  &OFFSET-&SBA1*64\n&OPS     SETC  '&OPS,SBA,&TAB(&SBA1+1),&TAB(&SBA2+1)'\n         AGO   .LOOP1\n.GENRA   ANOP\n         AIF   (N'&SYSLIST(&I) NE 4).ERR1\n&ROW     SETA  &SYSLIST(&I,2)-1\n&COL     SETA  &SYSLIST(&I,3)-1\n         AIF   (&ROW LT 0 OR &ROW GT 23).ERR2\n         AIF   (&COL LT 0 OR &COL GT 79).ERR3\n&OFFSET  SETA  &ROW*80+&COL\n&SBA1    SETA  &OFFSET/64\n&SBA2    SETA  &OFFSET-&SBA1*64\n&OPS     SETC  '&OPS,RA,&TAB(&SBA1+1),&TAB(&SBA2+1),&SYSLIST(&I,4)'\n         AGO   .LOOP1\n.SYMBOLS ANOP\n*\n* TN3270 CALL OPTIONS FROM TOP 16 BITS OF FIRST WORD OF PARMLIST\n*\nTGET_EDIT_WAIT   EQU X'80' READ,EDIT,WAIT FOR TN3270 DEVICE\nTGET_EDIT_NOWAIT EQU X'90' READ,EDIT,WAIT FOR TN3270 DEVICE\nTGET_ASIS_WAIT   EQU X'81' READ,ASIS,WAIT FOR TN3270 DEVICE\nTGET_ASIS_NOWAIT EQU X'91' READ,ASIS,NOWAIT FOR TN3270 DEVICE\nTPUT_EDIT        EQU X'00' WRITE,FULLSCN  FOR 3270 DEVICE\nTPUT_ASIS        EQU X'01' WRITE,FULLSCN  FOR 3270 DEVICE\nTPUT_FULLSCR     EQU X'03' WRITE,FULLSCN  FOR 3270 DEVICE\n*\n* TN3270 DATA STREAM PREFIX CONTROL CODES\n*\nESC      EQU   X'27'       ESCAPE (OPTIONAL FOLLOWED BY WRT,WCC)\nWRT      EQU   X'F1'       WRITE\nWRT_EW   EQU   X'F5'       ERASE WRITE\nWRT_EWA  EQU   X'7E'       ERASE WRITE ALTERNATE\nWRT_EAU  EQU   X'6F'       ERASE ALL UNPROTECTED FIELDS RPI 628\nWCC_BKD  EQU   X'C7'       WCC BEEP, RESET KBD, RESET MDT\nWCC_KD   EQU   X'C3'       WCC RESET KBD, RESET MDT\n*\n* TN3270 DATA STREAM ORDERS\n*\nPT       EQU   X'05'       PROGRAM TAB (ADVANCE TO NEXT UNPROT FIELD)\nGE       EQU   X'08'       GRAPHIC ESCAPE (REPLACE CHAR FROM APL TAB)\nSBA      EQU   X'11'       SET BUFFER ADDRESS (2 ADDR BYTES)\nSF       EQU   X'1D'       START FIELD        (1 - ATTRIBUTE BYTE)\nEUA      EQU   X'12'       ERASE UNPROTECTED FIELDS TO (2 ADDR BYTES)\nIC       EQU   X'13'       INSERT CURSOR AT CURRENT SBA\nSFE      EQU   X'29'       START EXTENDED FIELD (COUNT,(ATT_TYPE,ATT))\nRA       EQU   X'3C'       REPEAT TO ADDR (2 ADDR BYTES, REPEAT CHAR)\n*\n* TN3270 KEYBOARD INPUT AID CONTROL CODES\n*\nNOAID    EQU   X'60'       NO AID AVAILABLE\nENTER    EQU   X'7D'       ENTER KEY\nPF1      EQU   X'F1'       PROGRAM FUNCTION KEY 1\nPF2      EQU   X'F2'       PROGRAM FUNCTION KEY 2\nPF3      EQU   X'F3'       PROGRAM FUNCTION KEY 3\nPF4      EQU   X'F4'       PROGRAM FUNCTION KEY 4\nPF5      EQU   X'F5'       PROGRAM FUNCTION KEY 5\nPF6      EQU   X'F6'       PROGRAM FUNCTION KEY 6\nPF7      EQU   X'F7'       PROGRAM FUNCTION KEY 7\nPF8      EQU   X'F8'       PROGRAM FUNCTION KEY 8\nPF9      EQU   X'F9'       PROGRAM FUNCTION KEY 9\nPF10     EQU   X'7A'       PROGRAM FUNCTION KEY 10\nPF11     EQU   X'7B'       PROGRAM FUNCTION KEY 11\nPF12     EQU   X'7C'       PROGRAM FUNCTION KEY 12\nPF13     EQU   X'C1'       PROGRAM FUNCTION KEY 13 (CTRL-ALT F1-F12)\nPF14     EQU   X'C2'       PROGRAM FUNCTION KEY 14 (CTRL-ALT F1-F12)\nPF15     EQU   X'C3'       PROGRAM FUNCTION KEY 15 (CTRL-ALT F1-F12)\nPF16     EQU   X'C4'       PROGRAM FUNCTION KEY 16 (CTRL-ALT F1-F12)\nPF17     EQU   X'C5'       PROGRAM FUNCTION KEY 17 (CTRL-ALT F1-F12)\nPF18     EQU   X'C6'       PROGRAM FUNCTION KEY 18 (CTRL-ALT F1-F12)\nPF19     EQU   X'C7'       PROGRAM FUNCTION KEY 19 (CTRL-ALT F1-F12)\nPF20     EQU   X'C8'       PROGRAM FUNCTION KEY 20 (CTRL-ALT F1-F12)\nPF21     EQU   X'C9'       PROGRAM FUNCTION KEY 21 (CTRL-ALT F1-F12)\nPF22     EQU   X'4A'       PROGRAM FUNCTION KEY 22 (CTRL-ALT F1-F12)\nPF23     EQU   X'4B'       PROGRAM FUNCTION KEY 23 (CTRL-ALT F1-F12)\nPF24     EQU   X'4C'       PROGRAM FUNCTION KEY 24 (CTRL-ALT F1-F12)\nPA1      EQU   X'6C'       PROGRAM ATTENTION 1     (CTRL-F1)\nPA2      EQU   X'6E'       PROGRAM ATTENTION 2     (CTRL-F2)\nPA3      EQU   X'6B'       PROGRAM ATTENTION 3     (CTRL-F3)\nCLEAR    EQU   X'6D'       CLEAR SCREEN            (CTRL-C)\n*\n* LOCAL 3270 KEYBOARD COMMANDS - RPI 628 (SEE GZ390.JAVA)\n* (THESE KEYSTROKES ONLY CHANGE TN3270 BUFFER SO NO CODE ASSIGNED)\n*\n* EEOF - ERASE TO END OF FIELD   (CTRL-F6)\n* EINP - ERASE INPUT             (CTRL-F7)\n*\n* TN3270 ATTRIBUTE BYTES\n*\n*  BIT 0-1 CHECKSUM\n*  BIT 2   PROTECTED FIELD\n*  BIT 3   NUMBERIC  FIELD\n*  BIT 4-5 FIELD DISPLAY\n*           00=NORMAL INTENSITY\n*           01=NORMAL INTENSITY PLUS LIGHT PEN\n*           10=HIGH   INTENSITY NO LIGHT PEN\n*           11=NON DISPLAY USED FOR HIDDEN FIELDS\n*\n*                EBCDIC CHAR 6bit RPI 572 See 3270 Pgmr Ref Appendix C\nATT_PAH     EQU X'F8'  '8'  38   PROTECTED HIGH INTENSITY TEXT\nATT_PND     EQU X'6C'  '%\"  3C   PROTECTED NON-DISPLAY\nATT_PA      EQU X'F0'  '0'  30   PROTECTED NORMAL TEXT\nATT_UA      EQU X'40'  ' '  00   UNPROTECTED ALPHA INPUT FIELD\nATT_UN      EQU X'50'  '&'  10   UNPROTECTED NUMERIC INPUT FIELD\nATT_UND     EQU X'4C'  '<'  0C   UNPROTECTED NON-DISPLAY\nATT_PAH_MDT EQU X'F9'  '9'  39   PROTECTED HIGH INTENSITY TEXT, MDT\nATT_PA_MDT  EQU X'F1'  '1'  31   PROTECTED NORMAL TEXT, MDT\nATT_UA_MDT  EQU X'C1'  'A'  01   UNPROTECTED ALPHA INPUT FIELD, MDT\nATT_UN_MDT  EQU X'D1'  'J'  11   UNPROTECTED NUMERIC INPUT FIELD, MDT\n*\n* SFE ENTENDED ATTRIBUTE TYPE PREFIXES\n*\nSFE_BFA  EQU   X'C0'       BASIC FIELD ATTRIBUTE\nSFE_HL   EQU   X'41'       EXTENDED HIGHLIGHTING\nSFE_COLOR EQU  X'42'       COLOR\nSFE_DEFAULT   EQU X'00'\nSFE_BLUE      EQU X'F1'\nSFE_RED       EQU X'F2'\nSFE_PINK      EQU X'F3'\nSFE_GREEN     EQU X'F4'\nSFE_TURQUOISE EQU X'F5'\nSFE_YELLOW    EQU X'F6'\nSFE_WHITE     EQU X'F7'\n         MEXIT\n.ERR1    MNOTE 12,'TN3270 SBA REQUIRES ROW AND COLUMN SUBLIST'\n         MEXIT\n.ERR2    MNOTE 12,'TN3270 SBA ROW MUST BE 1 TO 24'\n         MEXIT\n.ERR3    MNOTE 12,'TN3270 SBA COLUMN MUST 1 TO 80'\n         MEXIT\n         MEND\n\n./ ADD NAME=TPUT     0100-14178-14178-0013-00139-00139-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/30/05                                                 *\n.*********************************************************************\n.* 12/11/05 RPI47 - add TGET/TPUT support for GUI window\n.* 12/16/05 RPI47 - add TGET/TPUT extension for literal edit msg\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 02/21/06 RPI211 MAKE TGET/TPUT MAINFRAME COMPATIBLE AT SVC LEVEL\n.* 05/05/06 RPI308 CORRECT BUT IN .ASIS CODE FOUND DEBUGGING TESTCIC1\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.*\n.* TPUT BUFFER,LBUFFER,OPTIONS\n.*\n.*     BUFFER  - RX or reg pointer to TN3290 data stream buffer\n.*     LBUFFER - absolute value or reg length of buffer\n.*     OPTIONS - the follwing options may be coded:\n.*                 EDIT    - write text only and add cursor control\n.*                 NOEDIT  - write text as is with cursor control\n.*                 WAIT    - wait for output to be moved to buffer\n.*                 NOWAIT  - return with R15=4 if no buffer avail.\n.*                 ASIS    - write text as is with cursor control\n.*                 CONTROL - non text (bell, reset kb, etc.)\n.*                 NOHOLD  - don't wait for buffer transmission\n.*                 HOLD    - wait until buffer is transmitted\n.*                 NOBREAK - wait for input to be sent before write\n.*                 BREAKIN - write now and discard input in process\n.*                 FULLSCR - write 3270 data stream with no changes\n.*                 R       - all options set in regstier 1\n.*\n.* TPUT (R0),(R1),R may to coded to pass all parms via registers\n.*\n.* Register input:\n.*\n.* R0LH = ASID (NOT USED)\n.* R0LL = BUFFER LENGTH\n.* R1   = LOW 24 BIT BUFFER ADDRESS (RMODE24 REQUIRED)\n.* R1   = FLAGS IN HIGH BYTE\n.*           X'80' - 1=TGET 0=TPUT\n.*           X'40' - USERID IN R15 (NOT USED)\n.*           X'20' - LOWP PROCESSING REQUIRED (NOT USED)\n.*           X'10' - 1=NOWAIT 0=WAIT\n.*           X'08' - 1=HOLD 0=NOHOLD\n.*           X'04' - 1=BREAKIN 0=NOBREAKIN\n.*           X'03' - 00=EDIT, 01=ASIS, 10=CONTROL, 11=FULLSCR\n.*********************************************************************\n&N       TPUT  &BUFF,                                                  X\n               &LBUFF,                                                 X\n               &MF=I      NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   ('&BUFF'(1,1) EQ '(').RECREG\n         LA    1,&BUFF\n         AGO   .CHKLEN\n.RECREG  ANOP\n         ZOPTLR 1,&BUFF(1)\n.CHKLEN  ANOP\n         AIF   ('&LBUFF'(1,1) EQ '(').LENREG\n         LA    0,&LBUFF\n         AGO   .SETOPT\n.LENREG  ANOP\n         AIF   (&LBUFF(1) NE 1).LENREGOK\n         MNOTE 12,'TPUT INVALID LENGTH REGISTER - &LBUFF(1)'\n.LENREGOK ANOP\n         ZOPTLR 0,&LBUFF(1)\n.SETOPT  ANOP\n&OP      SETC  '0'  X'80' 1=TGET, 0=TPUT\n&USERID  SETC  '0'  X'40' 0=NO USERID IN R15    (NOT USED)\n&LOWP    SETC  '0'  X'20' 0=LOWP                (NOT USED)\n&WAIT    SETC  '0'  X'10' 0=WAIT, 1=NOWAIT\n&HOLD    SETC  '0'  X'08' 0=NOHOLD, 1=HOLD      (NOT USED)\n&BREAKIN SETC  '0'  X'04' 0=NOBREAK, 1=BREANKIN\n&TYPE    SETC  '00' X'03' 00=EDIT, 01=ASIS, 10=CONTROL, 11=FULLSCR\n.CHKOPT  ANOP\n&NP      SETA  N'&SYSLIST\n         AIF   (&NP GE 3 AND '&SYSLIST(3)' EQ 'R').SVC USER REG PARMS\n&I       SETA  2\n.OPTLOOP ANOP\n&I       SETA  &I+1\n         AIF   (&I GT &NP).OPTEND\n         AIF   ('&SYSLIST(&I)' EQ 'EDIT').EDIT\n         AIF   ('&SYSLIST(&I)' EQ 'NOEDIT').NOEDIT\n         AIF   ('&SYSLIST(&I)' EQ 'ASIS').ASIS\n         AIF   ('&SYSLIST(&I)' EQ 'WAIT').WAIT\n         AIF   ('&SYSLIST(&I)' EQ 'NOWAIT').NOWAIT\n         AIF   ('&SYSLIST(&I)' EQ 'CONTROL').CONTROL\n         AIF   ('&SYSLIST(&I)' EQ 'HOLD').HOLD\n         AIF   ('&SYSLIST(&I)' EQ 'NOHOLD').NOHOLD\n         AIF   ('&SYSLIST(&I)' EQ 'BREAKIN').BREAKIN\n         AIF   ('&SYSLIST(&I)' EQ 'NOBREAK').NOBREAK\n         AIF   ('&SYSLIST(&I)' EQ 'FULLSCR').FULLSCR\n         MNOTE 12,'TPUT INVALID OPTION - &SYSLIST(&I)'\n         AGO   .OPTLOOP\n.EDIT    ANOP\n&TYPE    SETC  '00' X'03' 00=EDIT\n         AGO   .OPTLOOP\n.NOEDIT  ANOP  SAME AS ASIS\n.ASIS    ANOP\n&TYPE    SETC  '01' X'03'  01=ASIS  RPI 308\n         AGO   .OPTLOOP\n.WAIT    ANOP\n&WAIT    SETC  '0' X'10'  0=WAIT\n         AGO   .OPTLOOP\n.NOWAIT  ANOP\n&WAIT    SETC  '1' X'10'  1=NOWAIT\n         AGO   .OPTLOOP\n.CONTROL ANOP\n&TYPE    SETC  '10' X'03' 10=CONTROL (NON TEXT - BELL, KB RESET)\n         AGO   .OPTLOOP\n.HOLD    ANOP\n&HOLD    SETC  '1' X'08' 1=HOLD UNTIL BUFFER FILLED\n         AGO   .OPTLOOP\n.NOHOLD  ANOP\n&HOLD    SETC  '0' X'08' 1=HOLD UNTIL BUFFER FILLED\n         AGO   .OPTLOOP\n.BREAKIN ANOP\n&BREAK   SETC  '0' X'04' 0=NOBREAK\n         AGO   .OPTLOOP\n.NOBREAK ANOP\n&BREAK   SETC  '1' X'04' 1=BREAKIN\n         AGO   .OPTLOOP\n.FULLSCR ANOP\n&TYPE    SETC  '11' X'03' 11=FULLSCR\n         AGO   .OPTLOOP\n.OPTEND  ANOP\n         ICM   1,8,=B'&OP&USERID&LOWP&WAIT&HOLD&BREAKIN&TYPE'\n.SVC     ANOP\n         SVC   93 R0=(ASID,LENGTH) R1=(FLAGS,ADDR)\n         MEXIT\n.ERR1    MNOTE 12,'TPUT MF= NOT SUPPORTED'\n         MEND\n./ ADD NAME=TTIMER   0100-14178-14178-0013-00065-00065-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/23/05                                                 *\n.*********************************************************************\n.* 04/23/06 RPI 279 - add TTIMER to test or cancel STIMER REAL\n.* 09/19/06 RPI 452 - return time for CANCEL,TU OR CANCEL,MIC,ADDR\n.* 10/07/06 RPI 472 - set TYPE=TU for default on CANCEL\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       TTIMER &CANCEL,   CANCEL TTIMER INTERVAL IF DEFINED           X\n               &TYPE,      TU (DEFAULT RETURN IN R0) OR MIC,MICADDR    X\n               &ADDR,      DOUBLE WORD TO STORE MIC TIME REMAINING     X\n               &ERRET=,    IGNORE                                      X\n               &MF=I        NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR2\n         AIF   ('&CANCEL' EQ 'CANCEL').CANCEL\n         AIF   ('&TYPE' EQ '').TU\n         AIF   ('&TYPE' EQ 'TU').TU\n         AIF   ('&TYPE' EQ 'MIC').MIC\n         AGO   .ERR3\n.CANCEL  ANOP\n         AIF   ('&TYPE' EQ '').CAN_TU      RPI 472\n         AIF   ('&TYPE' EQ 'TU').CAN_TU\n         AIF   ('&TYPE' EQ 'MIC').CAN_MIC\n         AGO   .ERR3\n.CAN_TU  ANOP\n         LA    0,B'10' CANCEL, TU\n         AGO   .SVC\n.CAN_MIC ANOP\n         LA    0,B'11' CANCEL, MIC'\n         AIF   ('&ADDR' EQ '').ERR1\n         AIF   ('&ADDR'(1,1) EQ '(').REGADDR\n         LA    1,&ADDR\n         AGO   .SVC\n.TU      ANOP\n         LA    0,B'00' NO CANCEL, TU\n         AGO   .SVC\n.MIC     ANOP\n         LA    0,B'01' NO CANCEL, MIC\n         AIF   ('&ADDR' EQ '').ERR1\n         AIF   ('&ADDR'(1,1) EQ '(').REGADDR\n         LA    1,&ADDR\n         AGO   .SVC\n.REGADDR ANOP\n         ZOPTLR 1,&ADDR(1)\n.SVC     ANOP\n         SVC   X'2E' TTIMER (R0 BIT0=MIC BIT1=CAN, R1=A(MIC ADDR)\n         MEXIT\n.ERR1    MNOTE 12,'TTIMER MIC REQUIRES DOUBLE WORD ADDRESS PARM'\n         MEXIT\n.ERR2    MNOTE 12,'TTIMER MF= NOT SUPPORTED'\n         MEXIT\n.ERR3    MNOTE 12,'TTIMER - INVALID TYPE TU OR MIC - &TYPE'\n         MEXIT\n         MEND\n\n./ ADD NAME=VCDTD    0100-14178-14178-0013-00110-00110-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 07/27/07                                                 *\n.*********************************************************************\n.* 07/27/07 RPI INITIAL CODING\n.* 08/03/07 RPI 668 VCDTTIOT TABLE INDEX AFTER LOADING\n.* 08/06/07 RPI 668 VCDTPATH ADDR KSDS ALT PATH IHAAIX SECTION\n.* 09/03/07 RPI 681 EXPAND TO IHAVCDT, IHACLR, IHAAIX, IHAPTH\n.* 09/23/07 RPI 704 ADD VCLRCI OPTIONAL CI SIZE TO SUPPORT LINEAR\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n         VCDTD\n.*\n.* IF VCDTD ALREADY DEFINED EXIT NOW\n.*\n         GBLB  &Z390_VCDT\n         GBLC  &Z390_VCDT_NAME,&Z390_VCDT_TYPE\n         AIF   (&Z390_VCDT).EXIT\n&Z390_VCDT      SETB 1\n&Z390_VCDT_NAME SETC '&SYSLOC'\n&Z390_VCDT_TYPE SETC '&SYSSTYP'\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'VCDTD UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n*\n* IHAVCDT VSAM CATALOG DEFINITION TABLE(vcdt) DSECT\n*\nIHAVCDT  DSECT\nVCDTID   DS    CL4   C'VCDT' ID\nVCDTNAME DS    CL8   NAME OF VSAM CATALOG\nVCDTCLRT DS    F     TOTAL CLR BASE CLUSTERS\nVCDTCLRA DS    A     ADDR  CLR BASE CLUSTER TABLE\nVCDTAIXT DS    F     TOTAL AIX ALTERNATE INDEXES\nVCDTAIXA DS    A     ADDR  AIX ALTERNATE INDEXES\nVCDTPTHT DS    F     TOTAL PTH PATHS\nVCDTPTHA DS    A     ADDR  PTH PATH TABLE\nVCDTDCBA DS    A     ADDR  MODEL DCB FOR VES/VX0/VXN ACCESS\n*\n* IHAVCLR VSAM BASE CLUSTER DSECT\n*\nIHAVCLR  DSECT\nVCLRID   DS    CL4   ID C'VCLR'\nVCLRNAME DS    CL8   NAME OF BASE CLUSTER\nVCLRTYPE DS    CL4   TYPE OF BASE CLUSTER (ESDS/RRDS/KSDS/LDS)\nVCLRFLAG DS    0F    OPTION FLAGS\nVCLRFLG1 DS    X     VCDT OPTION BYTE 1\nVCLRVREC EQU   X'80' RECFM=V VARIABLE LENGTH VS FIXED\nVCLRRUSE EQU   X'40' REUSE OPTION RESETS EOF TO 0 AT ACB OPEN\nVCLRKSDS EQU   X'08' KSDS KEY SEQUENCED (DEF) VIA VXN INDEXES\nVCLRRRDS EQU   X'04' RRDS RELATIVE RECORD     VIA VX0 INDEX\nVCLRESDS EQU   X'02' ESDS ENTRY SEQUENCED     VIA VX0 INDEX\nVCLRLDS  EQU   X'01' LDS  LINEAR CI SEQUENCE  VIA VX0 INDEX\nVCLRFLG2 DS    X     VCDT OPTION BYTE 2\nVCLRFLG3 DS    X     VCDT OPTION BYTE 3\nVCLRFLG4 DS    X     VCDT OPTION BYTE 4\nVCLRLAVG DS    F     AVG RECORD LENGTH FOR VREC\nVCLRLREC DS    F     MAX RECORD LENGTH (EXCLUDES 4 BYTE VREC LENGTH)\nVCLRKLEN DS    F     KSDS PRIMARY KEY LENGTH\nVCLRKOFF DS    F     KSDS PRIMARY KEY OFFSET\nVCLRVESA DS    A     ADDR CLR VES DATA  OPTIONAL DSNAME (NAME.VES)\nVCLRVX0A DS    A     ADDR CLR VX0 INDEX OPTIONAL DSNAME (NAME.VX0)\nVCLRAIXN DS    F     NUMBER OF AIX'S WITH UPGRADE FOR THIS CLUSTER\nVCLRAIXA DS    A     ADDR AIX UPGRADE TABLE OF VAIX ADDRESSES\nVCLRCI   DS    A     OPTIONAL CI SIZE TO SUPPORT LINEAR ACCESS\nVCLRLEN  EQU   *-IHAVCLR\n*\n* IHAVAIX ALTERNATE INDEX DSECT\n*\nIHAVAIX  DSECT\nVAIXID   DS    CL4   ID C'VAIX'\nVAIXNAME DS    CL8   NAME OF ALTERNATE INDEX\nVAIXRELN DS    CL8   NAME OF RELATED VCLR BASE CLUSTER\nVAIXFLAG DS    0F    OPTION FLAGS\nVAIXFLG1 DS    X     OPTION BYTE 1\nVAIXRUSE EQU   X'80' REUSE OPTION RESETS EOF TO 0 AT ACB OPEN\nVAIXUKEY EQU   X'40' INFORCE UNIQUE KSDS KEYS\nVAIXUAIX EQU   X'20' UPGRADE AIX ON BASE CLUSTER CHANGES\nVAIXFLG2 DS    X     OPTION BYTE 2\nVAIXFLG3 DS    X     OPTION BYTE 3\nVAIXFLG4 DS    X     OPTION BYTE 4\nVAIXKLEN DS    F     KSDS AIX KEY LENGTH\nVAIXKOFF DS    F     KSDS AIX KEY OFFSET\nVAIXVXNA DS    A     ADDR AIX VXN OPTIONAL DSNAME (DEF. NAME.VXN)\nVAIXRELA DS    A     ADDR RELATED VCLR BASE CLUSTER\nVAIXLEN  EQU   *-IHAVAIX\n*\n* IHAVPTH PATH DSECT\n*\nIHAVPTH  DSECT\nVPTHID   DS    CL4 ID C'VPTH'\nVPTHNAME DS    CL8 NAME OF PATH\nVPTHENTN DS    CL8   NAME OF BASE CLUSTER OR ALTERNATE INDEX ENTRY\nVPTHFLAG DS    0F    OPTION FLAGS\nVPTHFLG1 DS    X     OPTION BYTE 1\nVPTHAIXP EQU   X'80' ENTRY IS AIX PATH VS ALIAS CLUSTER NAME\nVPTHAIXU EQU   X'40' UPDATE ALL UPGRADE AIX'S ON BASE CLUSTER CHANGES\nVPTHFLG2 DS    X     OPTION BYTE 2\nVPTHFLG3 DS    X     OPTION BYTE 3\nVPTHFLG4 DS    X     OPTION BYTE 4\nVPTHENTA DS    A     ADDR OF ENTRY VAIX OR VCLR CATALOG ENTRY\nVPTHLEN  EQU   *-IHAVPTH\n         AIF   ('&Z390_VCDT_NAME' EQ '' OR '&Z390_VCDT_TYPE' EQ '').EXIX\n               T\n&Z390_VCDT_NAME &Z390_VCDT_TYPE\n.EXIT    ANOP\n         MEND\n./ ADD NAME=WAIT     0100-14178-14178-0013-00069-00069-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/28/05                                                 *\n.*********************************************************************\n.*\n.*  WAIT ECB=ecb\n.*\n.*\n.*********************************************************************\n.* 10/20/05 RP47 - add WTOR as part of first GUAM release in v1008\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 04/10/06 RPI244 IGNORE LONG=, LINKAGE=, RELATED=, SUPPORT NUM\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       WAIT  &NUM,       EVENT COUNT (DEFAULT 1)                     X\n               &ECB=,      ECB ADDRESS                                 X\n               &ECBLIST=,  ECB ADDRESS LIST                            X\n               &LONG=,     IGNORE                                      X\n               &LINKAGE=,  IGNORE                                      X\n               &MF=I,      NOT SUPPORTED                               X\n               &RELATED=   IGNORE\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   (N'&SYSLIST LE 1).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(2)'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&ECB' EQ '').CHKLIST\n         SR    0,0\n         AIF   ('&NUM' EQ '' OR '&NUM' EQ 1).CHKECB\n         MNOTE 12,'WAIT COUNT INVALID FOR ECB= ONLY 1 SUPPORTED - &NUM'\n         MEXIT\n.CHKECB  ANOP\n         AIF   ('&ECB'(1,1) EQ '(').ECBREG\n         LA    1,&ECB\n         AGO   .SVC\n.ECBREG  ANOP\n         ZOPTLR 1,&ECB(1)\n         AGO   .SVC\n.CHKLIST ANOP\n         AIF   ('&ECBLIST' EQ '').ERR2\n         AIF   ('&NUM' EQ '').NUM1\n         LA    0,&NUM\n         AGO   .CHKREG\n.NUM1    ANOP\n         LA    0,1\n.CHKREG  ANOP\n         AIF   ('&ECBLIST'(1,1) EQ '(').REGLIST\n         LA    1,&ECBLIST\n         AGO   .SVC\n.REGLIST ANOP\n         ZOPTLR 1,&ECBLIST(1)\n.SVC     ANOP\n         SVC   1 (R0=0,R1=A(ECB) OR (R0=NUM,R1=ECBLIST)\n         MEXIT\n.ERR1    MNOTE 12,'WAIT MF= NOT SUPPORTED'\n         MEXIT\n.ERR2    MNOTE 12,'WAIT ECB= OR ECBLIST= REQUIRED'\n         MEXIT\n         MEND\n\n./ ADD NAME=WHEN     0100-14178-14178-0013-00040-00040-00000-Z390MAC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR SELECT,WHEN,ENDSEL\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         WHEN  &VALUE\n         COPY  ZSTRGBL\n         AIF   (&ZSTR_LVL EQ 0)\n               MNOTE 8,'WHEN - MISSING SELECT'\n               MEXIT\n         AEND\n         AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')\n               MNOTE 8,'WHEN - MISSING SELECT'\n               MEXIT\n         AEND\n         AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)\n         B     #@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n         AEND\n         AIF   (N'&SYSLIST EQ 1)\n               AIF ('&ZSTR_SEL_OP(&ZSTR_LVL)' EQ '')\n                   MNOTE 8,'WHEN - MISSING COMPARE OPCODE'\n                   MEXIT\n               AEND\n         &ZSTR_SEL_OP(&ZSTR_LVL) &ZSTR_SEL_FLD(&ZSTR_LVL),&VALUE\n               :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVLX\n               )+1\n         BC    15-&ZSTR_SEL_CMP(&ZSTR_LVL),#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LX\n               VL)_&ZSTR_LVL_BCNT(&ZSTR_LVL)\n         AELSE\n         &SYSLIST(1) &SYSLIST(2),&SYSLIST(4)\n               :&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVLX\n               )+1\n         BC    15-&SYSLIST(3),#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVLX\n               _BCNT(&ZSTR_LVL)\n         AEND\n         MEND\n./ ADD NAME=WRITE    0100-14178-14178-0013-00022-00022-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2008 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/15/08                                                 *\n.*********************************************************************\n.* 04/15/08 RPI 838 CHANGE OPEN, CLOSE, READ, WRITE TO CALL Z VERSION\n.*********************************************************************\n&N       WRITE &DECB,                                                  X\n               &TYPE,                                                  X\n               &DCB,                                                   X\n               &AREA,                                                  X\n               &LENGTH,                                                X\n               &MF=I       NOT SUPPORTED\n         AIF   ('&LENGTH' EQ '').PARM4\n&N       ZWRITE &DECB,&TYPE,&DCB,&AREA,&LENGTH,MF=&MF\n         MEXIT\n.PARM4   ANOP\n&N       ZWRITE &DECB,&TYPE,&DCB,&AREA,MF=&MF\n         MEND\n./ ADD NAME=WTO      0100-14178-14178-0013-00078-00078-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 10/21/05 RPI41  - add MF=L support\n.* 11/05/05 RPI80  - add missing .ERR1 label\n.* 12/02/05 RPI114 - fix to use more unique labels to avoid dup labels\n.* 12/20/05 RPI143 - allow no pos parms for MF=\n.* 01/05/06 RPI153 - remove duplicate label for MF=L\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 01/12/06 RPI151 CHANGE BAL TO BRAS FOR USE WITHOUT BASE REG\n.* 04/10/06 RPI244 IGNORE KEYWORDS EXCEPT TEXT= UNSUPPORTED ERROR\n.* 04/25/06 RPI290 ALWAYS GEN LABEL IF ANY, CHECK MF=\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 ADD STRING QUOTES FOR HLASM COMPATIBILITY\n.*********************************************************************\n&N       WTO   &MSG,         'TEXT' OR TEXT= REQUIRED                  X\n               &TEXT=,       MULTIPLE QUOTED TEXT ELSE ERROR           X\n               &MF=I,        MF=(E,ADDR) OR MF=L DEFAULT IS STD.       X\n               &CART=,       IGNORED                                   X\n               &CONSID=,     IGNORED                                   X\n               &CONSNAME=,   IGNORED                                   X\n               &DESC=,       IGNORED                                   X\n               &KEY=,        IGNORED                                   X\n               &MCSFLAG=,    IGNORED                                   X\n               &ROUTCDE=,    IGNORED                                   X\n               &TOKEN=       IGNORED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   (N'&SYSLIST LE 1).NPOK\n         MNOTE 12,'UNSUPPORTED OPERAND - &SYSLIST(2)'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&MF' NE 'I').MF\n         AIF   ('&TEXT' NE '').ERR2\n         AIF   ('&MSG' EQ '').ERR3\n&MSGTEXT SETC  '&MSG'\n         AIF   ('&MSG'(1,1) EQ '''').WTOMSG\n         AIF   ('&MSG'(1,2) NE '(''').ERR2\n&MSGTEXT SETC  '&MSG'(2,K'&MSG-2)\n.WTOMSG  ANOP\n         BRAS  1,*+(WTO#&SYSNDX._EOT-*+1)/2*2\n         DC    AL2(WTO#&SYSNDX._EOT-*,0),C&MSGTEXT\nWTO#&SYSNDX._EOT EQU *\n         SVC   35\n         MEXIT\n.TEXT    ANOP\n         AIF   ('&TEXT' EQ '').ERR3\n.MF      ANOP\n         AIF   ('&MF' EQ 'L').MFL\n         AIF   ('&MF(1)' NE 'E').ERR1\n         AIF   ('&MF(2)' EQ '').SVC\n         AIF   ('&MF(2)'(1,1) EQ '(').MFEREG\n         LA    1,&MF(2)\n         AGO   .SVC\n.MFEREG  ANOP\n         ZOPTLR 1,&MF(2)\n.SVC     ANOP\n         SVC   35\n         MEXIT\n.MFL     ANOP\n         DC    AL2(WTO#&SYSNDX._EOT-*,0),C&MSG\nWTO#&SYSNDX._EOT EQU *\n         MEXIT\n.ERR1    MNOTE 8,'WTO UNDEFINED TYPE - &MF'\n         MEXIT\n.ERR2    MNOTE 8,'WTO TEXT OPTION NOT SUPPORTED'\n         MEXIT\n.ERR3    MNOTE 8,'WTO MISSING ''MSG'' OR TEXT=INED TYPE - &MF'\n         MEND\n\n./ ADD NAME=WTOR     0100-14178-14178-0013-00137-00137-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/28/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI  47  - add WTOR as part of first GUAM release in v1008\n.* 12/02/05 RPI 114 - make wto label more unique to avoid duplicates\n.* 01/09/06 RPI 163 SKIP LR FOR SAME REGISTER\n.* 01/21/06 RPI 188 REQUIRE LENGTH IF REPLY REG FORM\n.* 04/12/06 RPI 244 IGNORE UNUSED KW PARMS, MNOTE ERROR FOR TEXT=\n.* 04/25/06 RPI 290 ALWAYS GEN LABEL IF ANY, CHECK MF=\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 02/06/09 RPI 992 add WTOR list and execute forms\n.* 05/22/10 RPI 1120 clear high bits in replay address (was NIHH)\n.*********************************************************************\n.*\n.*  WTOR - write to operator with reply (routed to GUAM window if\n.*         GUI option active and copy of msg and reply to log)\n.*\n.*  WTOR   'msg',reply,reply_len,ecb\n.*\n.*         'msg' - text to be displayed prior to waiting for reply\n.*         reply - rx label or (reg) pointing to reply field\n.*         reply_len - length of reply field (omit to use rx length)\n.*         ecb       - rx label or (reg) of 4 byte ECB which should be\n.*                     zeros when WTOR issued.  Set to X'80000000'\n.*                     while waiting for reply and X'40000000' when\n.*                     reply complete.  Use WAIT ECB=ecb to wait for\n.*                     reply posting.\n.*  INPUT:\n.*    R0  - REPLY FIELD ADDR\n.*    R1  - WTO MSG ADDR WITH 4 BYTE PREFIX\n.*    R14 - LENGTH OF REPLY FIELD\n.*    R15 - ECB ADDR\n.*********************************************************************\n&N       WTOR  &MSG,         PROMPT MSG FOR REPLY                      X\n               &REPLY,       REPLY ADDRESS                             X\n               &REPLYLEN,    REPLY LENGTH                              X\n               &ECB,         ECB POSTED WHEN REPLY READY               X\n               &TEXT=,       NOT SUPPORTED                             X\n               &MF=I,        LIMITED MF=L AND MF=(E,WTORL) RPI 992     X\n               &CART=,       IGNORED                                   X\n               &CONSID=,     IGNORED                                   X\n               &CONSNAME=,   IGNORED                                   X\n               &DESC=,       IGNORED                                   X\n               &KEY=,        IGNORED                                   X\n               &MCSFLAG=,    IGNORED                                   X\n               &MSGTYPE=,    IGNORED                                   X\n               &RPLYISUR=,   IGNORED                                   X\n               &ROUTCDE=,    IGNORED                                   X\n               &TOKEN=       IGNORED\n         AIF   (N'&SYSLIST LE 4).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(5)'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&TEXT' NE '').ERR1\n         AIF   ('&MF'    EQ 'L').WTORLIST RPI 992\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF(1)' EQ 'E').WTOREXEC RPI 992\n         AIF   ('&MF'    NE 'I').ERR2\n         BAL   1,*+(WTOR#&SYSNDX._EOT-*+1)/2*2\n         DC    AL2(WTOR#&SYSNDX._EOT-*,0),C&MSG\nWTOR#&SYSNDX._EOT EQU *\n         AIF   ('&REPLY'(1,1) EQ  '(').REPLY_REG\n         LA    0,&REPLY\n         AGO   .CHKLEN\n.REPLY_REG ANOP\n         ZOPTLR 0,&REPLY(1)\n         AIF   ('&REPLYLEN' NE '').CHKLENREG\n         MNOTE 12,'WTOR REPLY LENGTH REQUIRED'\n         MEXIT\n.CHKLEN  ANOP\n         AIF   ('&REPLYLEN' EQ '').DEFLEN\n.CHKLENREG ANOP\n         AIF   ('&REPLYLEN'(1,1) EQ '(').LEN_REG\n         LA    14,&REPLYLEN\n         AGO   .CHKECB\n.LEN_REG ANOP\n         AIF   ('&REPLYLEN(1)' EQ '0' OR '&REPLYLEN(1)' EQ 'R0').ERR3\n         ZOPTLR 14,&REPLYLEN(1)\n         AGO   .CHKECB\n.DEFLEN  ANOP\n         LA    14,L'&REPLY\n.CHKECB  ANOP\n         AIF   ('&ECB'(1,1) EQ '(').ECBREG\n         LA    15,&ECB\n         AGO   .SVC\n.ECBREG  ANOP\n         ZOPTLR 15,&ECB(1)\n.SVC     ANOP\n         SVC   160 WTOR R1=MSG,R0=REPLY,R14=LEN,R15=ECB\n         MEXIT\n.********************************************************************\n.* WTOR MF=L LIST FORM       RPI 992\n.********************************************************************\n.WTORLIST ANOP\n&N       DS    0A\n         DC    AL1(&REPLYLEN)  +00 REPLY LENGTH\n         DC    AL3(&REPLY)     +01 REPLY ADDR (24 BIT)\n         DC    A(&ECB)         +04 REPLY ECB ADDRESS\n&LMSG    SETA  K'&MSG-2\n         DC    AL2(&LMSG)      +08 LENGTH OF MSG\n         DC    AL2(X'8020')    +0A WTOR MCS FLAGS (PRI CON,PGMR INFO)\n         DC    C&MSG           +0C MESSAGE\n         MEXIT\n.********************************************************************\n.* WTOR MF=(E,WTORLIST) EXEC FORM   RPI 992\n.********************************************************************\n.WTOREXEC ANOP\n         AIF   ('&MF(2)'(1,1) EQ '(').WTOREXEC_REG\n         LA    1,&MF(2)   R1=WTOR LIST ADDR\n         AGO   .WTOREXEC_COM\n.WTOREXEC_REG ANOP\n         ZOPTLR 1,&MF(2,1) R1=WTOR LIST ADDR\n.WTOREXEC_COM ANOP\n         L     0,0(1)      R0 =REPLY FIELD ADDR (24B REQUIRES RMODE24)\n         NILH  0,X'00FF'   TURN OFF HIGH BITS IN 24 BIT ADDR RPI 1120\n         SR    14,14\n         IC    14,0(1)     R14=REPLY LENGTH\n         L     15,4(1)     R15=ECB ADDR\n         LA    1,8(1)      R1 =MSG WITH 4 BYTE PREFIX AL2(LEN,FLAGS)\n         AGO   .SVC\n.ERR1    MNOTE 12,'WTOR TEXT= NOT SUPPORTED'\n         MEXIT\n.ERR2    MNOTE 12,'WTOR MF=E/L NOT SUPPORTED'\n         MEXIT\n.ERR3    MNOTE 12,'WTOR REPLY LENGTH REGISTER 0 NOT ALLOWED'\n         MEXIT\n         MEND\n\n./ ADD NAME=XCTL     0100-14178-14178-0013-00137-00137-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 11/16/05 RPI95 - add XCTL support with DDNAME= and DSNAME=\n.* 12/06/05 RPI118 - use SR vs LA, reg chk, drop BALR/USING, fix VL\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 04/12/06 RPI244 SUPPORT DE= SAME REGISTER\n.* 04/25/06 RPI290 ALWAYS GEN LABEL IF ANY, CHECK MF=\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.* XCTL AND EXEC PGM VIA SVC 7 (DELETES CALLING PGM FROM MEMORY)\n.*   R0  = ADDR PGM NAME (8 BYTES SPACE FILLED)\n.*   R15 = 0    USE SYS390 DEFAULT PATH FROM EZ390 PARM\n.*   R15 = ADDR DSNAME FILE SPEC IF HIGH BIT OFF (NULL OR DQ DELIMITED)\n.*   R15 = ADDR DDNAME IF HIGH BIT ON (8 BYTES SPACE FILLED)\n.* NOTES:\n.*   1.  DSNAME OR DDNAME MAY BE 1 OR MORE DIRECTORY PATHS TO SEARCH\n.*       OR THEY MAY BE PATH AND FILE NAME WHICH OVERRIDES EP/EPLOC\n.*   2.  RETURN CODE SET BY CALLED PGM IF SUCCESSFUL\n.*   3.  ABEND WITH S906 IF NOT FOUND\n.*   4.  IF (REGS) ARE SPECIFIED, THEN R13 MUST BE SET TO SAVE AREA\n.*********************************************************************\n&N       XCTL  &REGS,         OPTIONAL (REG) OR (REGS) TO RESTORE      X\n               &DDNAME=,      LOAD FROM DIR OR FILE DEFINED IN ENV.VAR X\n               &DE=,          BLDL ENTRY                               X\n               &DSNAME=,      LOAD FROM RX OR (REG) FILE SPEC          X\n               &EP=,          PGMNAME 1-8 CHAR                         X\n               &EPLOC=,       RX LABEL OR (REG) POINTER TO PGM FIELD   X\n               &ERRET=,       NOT SUPPORTED                            X\n               &MF=I,         NOT SUPPORTED                            X\n               &PARAM=,       PARAMETER LIST                           X\n               &VL=1          SET HIGH BIT IN LAST PARM ADDR\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   (N'&SYSLIST LE 1).NPOK\n         MNOTE 12,'XCTL UNSUPPORTED OPERANDS - &SYSLIST(2)'\n         MEXIT\n.NPOK    ANOP\n         AIF    ('&MF' NE 'I').ERR2\n         AIF    ('&ERRET' NE '').ERR1\n         AIF    ('&PARAM' EQ '').ENDPARM\n         LA     1,=A&PARAM\n         AIF    ('&VL' NE 1).ENDPARM\n&OFF     SETA   N'&PARAM*4-4\n         OI     &OFF.(1),X'80'\n.ENDPARM ANOP\n         AIF   ('&DE' NE '').DE\n         AIF   ('&EP' NE '').EP\n         AIF   ('&EPLOC' NE '').EPLOC\n         SR    0,0\n         AIF   ('&DDNAME' NE '' OR '&DSNAME' NE '').CHKDSN\n         MNOTE 12,'XCTL REQUIRES EP, EPLOC, DDNAME, OR DSNAME'\n.DE      ANOP\n         AIF   ('&DE'(1,1) EQ '(').DEREG\n         LA    0,&DE\n         AGO   .DEADD\n.DEREG ANOP\n         ZOPTLR 0,&DE(1)\n.DEADD   ANOP\n         AHI   0,2\n         AIF   ('&EP' EQ '' AND '&EPLOC' EQ '').CHKDSN\n         MNOTE 12,'XCTL DE EP AND EPLOC ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n         MEXIT\n.EP      ANOP\n         LA    0,=CL8'&EP'\n         AGO   .CHKDSN\n.EPLOC   ANOP\n         AIF   ('&EPLOC'(1,1) EQ '(').EPLOCREG\n         LA    0,&EPLOC\n         AGO   .CHKDSN\n.EPLOCREG ANOP\n         AIF   ('&EPLOC(1)' EQ '1' OR '&EPLOC(1)' EQ 'R1').EPERR\n         ZOPTLR 0,&EPLOC(1)\n         AGO   .CHKDSN\n.EPERR   ANOP\n         MNOTE 12,'XCTL INVALID EPLOC REG'\n         MEXIT\n.CHKDSN  ANOP\n         AIF   ('&DSNAME' EQ '').CHKDD\n         AIF   ('&DDNAME' EQ '').DSNOK\n         MNOTE 12,'DSNAME AND DDNAME ARE MUTUALLY EXCLUSIVE'\n.DSNOK   ANOP\n         AIF   ('&DSNAME'(1,1) EQ '(').DSNREG\n         LA    15,&DSNAME\n         AGO   .CHKRST\n.DSNREG  ANOP\n         AIF   ('&DSNAME(1)' LE '1' OR '&DSNAME(1)' EQ 'R1').DSNERR\n         ZOPTLR 15,&DSNAME(1)\n         AGO   .CHKRST\n.DSNERR  ANOP\n         MNOTE 12,'XCTL INVALID DSNAME REG'\n         MEXIT\n.CHKDD   ANOP\n         AIF   ('&DDNAME' EQ '').DEFPATH\n         AIF   ('&DDNAME'(1,1) EQ '(').DDREG\n         LA    15,=CL8'&DDNAME'\n         OILH  15,X'8000' DD VS DSN\n         AGO   .CHKRST\n.DDREG   ANOP\n         AIF   ('&DDNAME(1)' LE '1' OR &DDNAME(1) EQ 'R1').DDERR\n         ZOPTLR 15,&DDNAME(1)\n.SKPLR1  ANOP\n         OILH  15,X'8000' DD VS DSN\n         AGO   .CHKRST\n.DDERR   ANOP\n         MNOTE 12,'XCTL INVALID DDNAME REG'\n         MEXIT\n.DEFPATH ANOP\n         SR    15,15 USE DEFAULT SYS390 SEARCH\n.CHKRST  ANOP\n         AIF   ('&REGS' EQ '').SVC\n&R1      SETA  &REGS(1)\n&R2      SETA  &R1\n         AIF   ('&REGS(2)' EQ '').R2OK\n&R2      SETA  &REGS(2)\n.R2OK    ANOP\n         AIF   (&R1 GT &R2 OR &R1 LT 2 OR &R2 GT 12).REGERR\n         RESTORE &REGS\n.SVC     ANOP\n         SVC    7 XCTL R0=A(PGM) R1-PARMS R15=DDNAME/DSNAME ADDR OR 0\n         MEXIT\n.REGERR  ANOP\n         MNOTE 12,'XCTL RESTORE RANGE MUST BE 2-12'\n         MEXIT\n.ERR1    MNOTE 12,'XCTL ERRET= NOT SUPPORTED'\n         MEXIT\n.ERR2    MNOTE 12,'XCTL MF= NOT SUPPORTED'\n         MEND\n./ ADD NAME=XLATE    0100-14178-14178-0013-00040-00040-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* XLATE TRANSLATE AREA TO EBCDIC OR ASCII\n.*********************************************************************\n.* 01/09/06 RPI 163 SKIP LR FOR SAME REGISTER\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       XLATE &AREA,&LEN,&TO=\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   (N'&SYSLIST EQ 2).NPOK\n.ERR     MNOTE 12,'XLATE REQUIRES AREA,LEN,TO=A/E'\n         MEXIT\n.NPOK    ANOP\n         AIF   ('&AREA'(1,1) EQ '(').AREAREG\n         LA    0,&AREA\n         AGO   .CHKLEN\n.AREAREG ANOP\n         ZOPTLR 0,&AREA(1)\n.CHKLEN  ANOP\n         AIF   ('&LEN'(1,1) EQ '(').LENREG\n         LA    1,&LEN\n         AGO   .CHKTO\n.LENREG  ANOP\n         ZOPTLR 1,&LEN(1)\n.CHKTO   ANOP\n         AIF   ('&TO' EQ 'E').SVC\n         AIF   ('&TO' NE 'A').ERR\n         OILH  0,X'8000' HIGH ADDR BIT ON FOR EBCDIC TO ASCII\n.SVC     ANOP\n         SVC   X'67' TRANSLATE R0=AREA R1=LEN R0 HIGH BIT FOR E>A\n         MEND\n./ ADD NAME=YREGS    0100-14178-14178-0013-00019-00019-00000-Z390MAC\n         MACRO\n         YREGS\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         MEND\n./ ADD NAME=ZCALL    0100-14178-14178-0013-00142-00142-00000-Z390MAC\n        MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI  27 - issue error for any undefined operands\n.* 10/21/05 RPI  41 - add VL positional parm support\n.* 12/12/05 RPI  18 - correct VL bit OI instrcution (missing .)\n.* 01/09/06 RPI 163 - SKIP LR FOR SAME REGISTER\n.* 04/12/06 RPI 244 - IGNORE NON CRITICAL KW PARMS\n.* 04/12/06 RPI 322 - support VL option with MF=L\n.* 07/22/06 RPI 381 - support register substitution of parametrs\n.* 11/10/06 RPI 473 - correct macro bugs and update RT\\TEST\\TESTCAL1\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/06 RPI 833 add SETC quotes for HLASM compatibility\n.* 11/08/08 RPI 942 check for (reg) parm conflict with R1, ZSTRMAC UPDT\n.* 11/14/08 RPI 953 move CALL to ZCALL to share with other macro libs\n.*********************************************************************\n&N      ZCALL  &NAME,                                                  X\n               &PARMS,                                                 X\n               &VL,            SET END OF LIST HIGH BIT                X\n               &ID=,           IGNORE                                  X\n               &LINKINST=BALR,                                         X\n               &MF=I           I/L/E FORMS SUPPORTED\n         CNOP  0,4\n         AIF   ('&N' NE '')\n&N       DS    0F\n         AEND\n         AIF   (N'&SYSLIST GT 3)\n               MNOTE 12,'CALL UNSUPPORTED OPERANDS - &SYSLIST(4)'\n               MEXIT\n         AEND\n         :&NPARMS SETA N'&PARMS\n         AIF   (&NPARMS EQ 0 AND '&VL' NE '')    RPI 473\n               MNOTE 12,'CALL VL INVALID WHEN NO PARMS'\n               MEXIT\n         AEND\n         AIF   ('&MF' EQ 'I')\n               ACALL STD_FORM\n         AELSEIF ('&MF' EQ 'L')\n               ACALL LIST_FORM\n         AELSEIF ('&MF(1)' EQ 'E')\n               ACALL EXEC_FORM\n         AELSE\n               MNOTE 12,'CALL INVALID MF=&MF'\n         AEND\n         MEXIT\n.*\n.* STD FORM\n.*\n         AENTRY STD_FORM\n       AIF    (&NPARMS NE 0)\n         BRAS   1,*+4+&NPARMS*4\n         DC     A&PARMS\n                :&I SETA   1\n                AWHILE (&I LE &NPARMS)\n                    AIF ('&PARMS(&I)'(1,1) EQ '(')\n                        :&OFF     SETA   &I*4-4\n                        AIF    ('&PARMS(&I,1)' EQ 1                    X\n                                OR '&PARMS(&I,1)' EQ 'R1')\n                        MNOTE 8,'CALL (REG) TYPE PARM MUST BE (2)-(12)'\n                        MEXIT\n                        AEND\n         ST     &PARMS(&I,1),&OFF.(1)\n                    AEND\n                    :&I SETA   &I+1\n                AEND\n                AIF    ('&VL' EQ 'VL')\n                       :&OFF     SETA   N'&PARMS*4-4\n         OI     &OFF.(1),X'80'\n                AEND\n       AEND\n       AIF   ('&NAME' NE '')\n             AIF ('&NAME'(1,1) NE '(')\n         LRL    15,=V(&NAME)\n             AELSE\n         ZOPTLR 15,&NAME(1)\n             AEND\n       AEND\n         &LINKINST 14,15\n         AEND\n.*\n.* LIST FORM\n.*\n         AENTRY LIST_FORM\n       AIF    ('&VL' NE 'VL')\n         DC    A&PARMS\n       AELSE\n               :&I SETA 1\n               AWHILE (&I LT &NPARMS)\n         DC    A(&PARMS(&I))\n                      :&I SETA  &I+1\n               AEND\n         DC    A(&PARMS(&I)+X'80000000')\n       AEND\n         AEND\n.*\n.* EXEC FORM\n.*\n         AENTRY EXEC_FORM\n         AIF    ('&MF(2)' EQ '')   RPI 473\n                MNOTE 12,'CALL EXEC FORM MISSING LIST ADDR'\n                MEXIT\n         AEND\n       AIF    ('&MF(2)' NE '(')\n         LA     1,&MF(2)\n       AELSE\n         ZOPTLR 1,&MF(2,1)\n       AEND\n       :&NPARMS  SETA   N'&PARMS\n       AIF    (&NPARMS GT 0)\n              :&EXOFF   SETA   0\n              :&I       SETA   1\n              AWHILE (&I LE &NPARMS)\n                    :&EXPARM  SETC   '&PARMS(&I)'\n                    AIF    ('&EXPARM'(1,1) NE '(')\n         LA     0,&EXPARM\n         ST     0,&EXOFF.(1)\n                    AELSE\n         ST     &EXPARM,&EXOFF.(1)   RPI 473\n                    AEND\n                    :&EXOFF   SETA   &EXOFF+4\n                    :&I SETA &I+1\n              AEND\n              AIF  ('&VL' EQ 'VL' AND &EXOFF NE 0)   RPI 473\n         OI     &EXOFF-4(1),X'80'\n              AEND\n       AEND\n       AIF   ('&NAME' NE '')\n             AIF ('&NAME'(1,1) NE '(')\n         LRL    15,=V(&NAME)\n             AELSE\n         ZOPTLR 15,&NAME(1)\n             AEND\n       AEND\n         &LINKINST 14,15\n         AEND\n         MEND\n./ ADD NAME=ZCLOSE   0100-14178-14178-0013-00120-00120-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 11/13/05 RPI88 - correct error in checking for DCB register parm\n.* 11/26/05 RPI112- check for invalid DCB RX form (reg) vs ((reg))\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 04/10/06 RPI244 support (reg) and ignore other keywords\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/03/07 RPI 668 check return code for each svc and exit if nz\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 10/14/07 RPI 718 ISSUE MNOTE ERR FOR NN OR RNN WITHOUT ((REG),OPT)\n.* 04/15/08 RPI 838 CHANGE OPEN, CLOSE, READ, WRITE TO CALL Z VERSION\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 09/12/08 RPI 764 upgrade to ZSTRMAC and allow CLOSE (reg)\n.* 04/22/09 RPI 1021 add MF=L/E and cleanup reg support\n.* 05/19/09 RPI 1029 remove SPM macro code for compatibility\n.* 05/28/09 RPI 1045 change to only assume reg form if (...)\n.*********************************************************************\n&N       ZCLOSE &DCBLIST, (DCB1,OPT1,DCB2,OPT2..) OR (DCB), DCB, ((r)) X\n               &MODE=,   IGNORED AS IT WORKS IN EITHER MODE            X\n               &MF=I,    NOT SUPPORTED                                 X\n               &TYPE=    IGNORED\n         AIF   (N'&SYSLIST GT 1)\n               MNOTE 12,'CLOSE UNSUPPORTED OPERANDS - &SYSLIST(2)'\n               MEXIT\n         AEND\n         :&NP  SETA  N'&DCBLIST\n         AIF   ('&MF' EQ 'L')\n.*\n.* LIST FORM\n.*\n               AIF ('&N' NE '')\n                   :&N       DS    0F\n               AEND\n               :&I SETA  1\n               AWHILE (&I LE &NP)\n                   :&DCB     SETC  '&DCBLIST(&I)'\n                   :&OPTION  SETC  '&DCBLIST(&I+1)'\n                   AIF ('&DCB'(1,1) EQ '(')  RPI 764 RPI 1045\n                       MNOTE 8,'ZCLOSE REG FORM NOT ALLOWED'\n                       MEXIT\n                   AEND\n                   AIF   ('&OPTION' NE '')\n                         MNOTE 12,'CLOSE OPTION NOT SUPPORTED - &OPTIONX\n               '\n                         MEXIT\n                   AEND\n                   AIF   (&I+1 GE &NP)\n                         :&VL SETC 'X''80000000''+'\n                   AELSE\n                         :&VL SETC ''\n                   AEND\n                   DC    A(&VL&DCB)\n                   :&I SETA &I+2\n               AEND\n         AELSEIF ('&MF(1)' EQ 'E')\n.*\n.* EXEC FORM\n.*\n               AIF   ('&N' NE '')\n                    :&N       DS    0H\n               AEND\n               AIF  ('&MF(2)'(1,1) EQ '(')\n                    ZOPTLR 14,&MF(2)\n               AELSE\n                    LA     14,&MF(2)\n               AEND\n               B    ZCLOSE_DO_LOOP&SYSNDX\nZCLOSE_DO_UNTIL&SYSNDX DS 0H\n               LTR  1,1\n               BM   ZCLOSE_DO_EXIT&SYSNDX\n               LTR  15,15\n               BNZ  ZCLOSE_DO_EXIT&SYSNDX\nZCLOSE_DO_LOOP&SYSNDX DS 0H\n                    L   1,0(14)\n                    SVC 20\n                    AHI 14,4\n               B    ZCLOSE_DO_UNTIL&SYSNDX\nZCLOSE_DO_EXIT&SYSNDX DS 0H\n         AELSEIF ('&MF(1)' EQ 'I')\n.*\n.* STD FORM\n.*\n               AIF ('&N' NE '')\n                   :&N       DS    0H\n               AEND\n               :&I SETA  1\n               AWHILE (&I LE &NP)\n                   :&DCB     SETC  '&DCBLIST(&I)'\n                   :&OPTION  SETC  '&DCBLIST(&I+1)'\n                   AIF ('&DCB'(1,1) EQ '(')  RPI 764 TPI 1045\n                       ZOPTLR 1,&DCB(1)\n                   AELSE\n                       LA     1,&DCB\n                   AEND\n                   AIF   ('&OPTION' NE '')\n                         MNOTE 12,'CLOSE OPTION NOT SUPPORTED - &OPTION'\n                         MEXIT\n                   AEND\n                   SVC   20 CLOSE R1=DCB/ACB\n                   :&I SETA &I+2\n                   AIF    (&I LE &NP)\n                          LTR   15,15\n                          BNZ   Z390_CLOSE_EXIT&SYSNDX RPI 668\n                   AEND\n               AEND\n               AIF (&NP GT 2)\n                   :Z390_CLOSE_EXIT&SYSNDX EQU *\n               AEND\n         AELSE\n               MNOTE 12,'CLOSE MF=&MF NOT SUPPORTED'\n               MEXIT\n         AEND\n         MEND\n./ ADD NAME=ZCVTD    0100-14178-14178-0013-00073-00073-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2006 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/23/06                                                 *\n.*********************************************************************\n.* 04/23/06 RPI 286 - DEFINE ZCVT FOR Z390 CVT AT X'2000' IN MEMORY\n.* 05/02/06 RPI 305 - ADD ZCVTEPIE AND ZCVTESTA CONTROL BLOCK AREAS\n.* 05/05/06 RPI 308 - ADD ZCVTEIBP AND ZCVTCAP FOR CICS SUPPORT\n.* 03/11/07 RPI 558 - ADD ZCVTVSE_COMRG COMMUNICATIONS AREA\n.* 04/07/07 RPI 582 - SET ZCVT_PARMA TO ADDR OF ADDR OF ZCVT_PARM\n.* 05/17/07 RPI 625 - SUPPORT LOCTR AS WELL AS CSECT/DSECT\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 06/23/08 RPI 845 change ZCVTESTA to ZCVTSDWA passed to ESTAE exit\n.*********************************************************************\n         ZCVTD\n.*\n.* IF ZCVTD ALREADY DEFINED EXIT NOW\n.*\n         GBLC  &Z390_ZCVTD\n         AIF   ('&Z390_ZCVTD' NE '').EXIT\n&Z390_ZCVTD SETC '&SYSLOC &SYSSTYP'\n.*\n.* EZ390 ZCVT DSECT - LOCATED AT X'2000' FOLLOWING PSA IN MEMORY\n.*\nZCVT     EQU    X'2000'  ABS ADDR ZCVT\nIHAZCVT  DSECT\n         ORG    IHAZCVT+X'00'\nZCVTUPGM DS     CL8   390 USER PROGRAM NAME LOADED AT IPL\n         ORG    IHAZCVT+X'08'\nZCVTIPLP DS     CL8   390 IPL PROGRAM SPECIFIED IN IPL(PGM) OPTION\n         ORG    IHAZCVT+X'10'\nZCVTFQ24 DS     A     ADDRESS OF FIRST FQE FOR 24 BIT MEM AT X'10000'\n         ORG    IHAZCVT+X'14'\nZCVTFQ31 DS     A     ADDRESS OF FIRST FQE FOR 31 BIT MEM AT X'1000000'\n         ORG    IHAZCVT+X'18'\nZCVTEXIT DS     XL2   SVC 3 EXIT USED AS R14 EXIT AND STIMER EXIT\n         ORG    IHAZCVT+X'1C'\nZCVTGECB DS     F     TGET ECB\n         ORG    IHAZCVT+X'20'\nZCVTEIBP DS     A     CICS INTERFACE CONTROL BLOCK POINTER > DFHEIBLK\n         ORG    IHAZCVT+X'24'\nZCVTCAP  DS     A     CICS COMMON AREA POINTER\n         ORG    IHAZCVT+X'100'\nZCVTSAVE DS     18F   SAVE AREA USED TO INIT USER PGM R13\n         ORG    IHAZCVT+X'200'\nZCVTSAV2 DS     18F   SAVE AREA FOR STIMER EXIT R13\n         ORG    IHAZCVT+X'300'\nZCVTPARMA DS    A     ADDRESS OF ZCVT_PARM TO SET USER R1\nZCVTPARM DS     XL256 PARM AREA\n         ORG    IHAZCVT+X'400'\nZCVTEPIE DS     XL256 RESERVED FOR ESPIE EPIE CB (SEE EPIED MACRO)\n         ORG    IHAZCVT+X'500'\nZCVTSDWA DS     XL256 RESERVED FOR SDWA PASSED TO ESTAE IN R1 (IHASDWA)\n         ORG    IHAZCVT+X'600'\nZCVT_COMRG DS XL1024 RESERVED FOR VSE COMRG AREA (SEE vse\\mac\\COMRG)\nZCVT_COMRG_JOBDATE DS    CL8            0  8 MM/DD/YY (SET IF TIMING)\nZCVT_COMRG_RESV1   DS    XL4            8  4 RESERVED\nZCVT_COMRG_COMUSCR DS    XL11          12 11 USER AREA (ZERO'D)\nZCVT_COMRG_UPSI    DS    B             23  1 SWITCH BITS\nZCVT_COMRG_COMNAME DS    CL8           24  8 JOBNAME (SET TO PGMNAME)\nZCVT_COMRG_PPEND   DS    A             32  4 ADDR HIGH PGM\nZCVT_COMRG_HTPHAS  DS    A             36  4 ADDR HIGH LAST PH\nZCVT_COMRG_HTPROG  DS    A             40  4 ADDR HIGH MAX  PH ID4\nZCVT_COMRG_LABLEN  DS    H             44  2 LENGTH OF LABEL\nZCVT_COMRG_RESV2   DS    XL2           46  2 RESERVERD LENGTH ?????\nZCVT_COMRG_IJBHPHLA DS   A             48  4 ADDR HIGH MAX  PH ANY\nZCVT_ACCEPT_REPLY   DS    CL256        52 80 ACCEPT REPLY AREA RMODE24\nZCVTEND  ORG    IHAZCVT+(X'A000'-X'2000')  RESERVE UP TO CVT\n&Z390_ZCVTD\n.EXIT    MEND\n./ ADD NAME=ZDEFINE  0100-14178-14178-0013-00128-00128-00000-Z390MAC\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/19/07                                                 *\n.*********************************************************************\n.* 09/04/07 RPI 681 DEFINE ZDEFINE TO GENERATE VCDT CATALOG TABLE\n.* 09/23/07 RPI 704 DEFINE VCLRCI OPTIONAL CONTROL INTERVAL SIZE\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 07/17/10 RPI 865 add C'PATH' ID\n.*********************************************************************\n         MACRO\n         ZDEFINE\n         COPY  ZDEFINE.CPY       INCLUDE GLOBALS SET BY DEFINE\n         AIF   ('&CATALOG' NE '').GEN_VCDT\n         MNOTE 12,'ZDEFINE MISSING DEFINE CATALOG NAME='\n         MEXIT\n*\n* VCDT VSAM CATALOG DEFINITION TABLE\n*\n.GEN_VCDT ANOP\nVCDT     CSECT\n         DC    CL4'VCDT'      VCDTID   VSAM CATALOG DEFINITION TABLE ID\n         DC    CL8'&CATALOG'  VCDTNAME CATALOG NAME\n         DC    F'&CLR_TOT'    VCDTCLRT TOTAL CLR BASE CLUSTER ENTRIES\n         DC    A(VCLR)        VCDTCLRA ADDR  CLR ENTRIES\n         DC    F'&AIX_TOT'    VCDTAIXT TOTAL AIX ALTERNATE INDEXES\n         DC    A(VAIX)        VCDTAIXA ADDR  AIX ALTERNATE INDEX TABLE\n         DC    F'&PTH_TOT'    VCDTPTHT TOTAL PTH PATH ENTRIES\n         DC    A(VPTH)        VCDTPTHA ADDR  PTH PATH TABLE\n         DC    A(DCB)         VCDTDCBA ADDR  MODEL DCB FOR VES/VX0/VZN\nVCLR     CSECT , BASE CLUSTER TABLE ENTRIES\nVCLRAIXS CSECT , BASE CLUSTER AIX UPGRADE ADDRESS LISTS\nVCLRDSNS CSECT , BASE CLUSTER DSNAME'S (DEFAULT OR OVERRIDES)\nVAIX     CSECT , ALTERNATE INDEX TABLE ENTRIES\nVAIXDSNS CSECT , ALTERNATE INDEX DSNAME'S (DEFSULYT OR OVERRIDES)\nVPTH     CSECT , PATH TABLE ENTRIES\nDCB      CSECT , MODELDCB FOR DYNAMIC ALLOCATION VES/VX0/VXN AT OPEN\nMODELDCB DCB   DSORG=PS,RECFM=F,MACRF=(GM,PM)\n.GEN_CLR ANOP\n&CLR_CUR SETA  0\n.GEN_CLR_LOOP ANOP\n&CLR_CUR SETA  &CLR_CUR+1\n         AIF   (&CLR_CUR GT &CLR_TOT).GEN_AIX\n*\n* VCLR VSAM BASE CLUSTER TABLE ENTRY\n*\nVCLR     CSECT\n&CLR_NAME(&CLR_CUR) DS 0F\n         DC    CL4'VCLR'                  VCLRID  BASE CLUSTER ID\n         DC    CL8'&CLR_NAME(&CLR_CUR)'   VCLRNAME BASE CLUSTER NAME\n         DC    CL4'&CLR_TYPE(&CLR_CUR)'   VCLRTYPE BASE CLUSTER TYPE\n         DC    0XL4                       VCLRFLAG BASE CLUSTER OPTIONS\n         DC    BL1'&CLR_VREC(&CLR_CUR)&CLR_REUSE(&CLR_CUR).00&CLR_KSDS(X\n               &CLR_CUR)&CLR_RRDS(&CLR_CUR)&CLR_ESDS(&CLR_CUR)&CLR_LDS(X\n               &CLR_CUR)'\n         DC    BL3'0'\n         DC    F'&CLR_LAVG(&CLR_CUR)'     VCLRLAVG AVERAGE RCD LENGTH\n         DC    F'&CLR_LMAX(&CLR_CUR)'     VCLRLMAX MAXIMUM RCD LENGTH\n         DC    F'&CLR_KLEN(&CLR_CUR)'     VCLRKLEN KSDS PRI KEY LENGTH\n         DC    F'&CLR_KOFF(&CLR_CUR)'     VCLRKOFF KSDS PRI KEY OFFSET\n         DC    A(&CLR_NAME(&CLR_CUR)_VES) VCLRVESA ADDR CLR DATA  DSN\n         DC    A(&CLR_NAME(&CLR_CUR)_VX0) VCLRVX0A ADDR CLR INDEX DSN\n         DC    A(&CLR_CI(&CLR_CUR))       VCLRCI   OPTIONAL CI SIZE\nVCLRAIXS CSECT\n&CLR_NAME(&CLR_CUR)_AIX_UPGRADES DS 0F\n&AIX_CUR SETA  0\n.AIX_UPGRADE_LOOP ANOP\n&AIX_CUR SETA  &AIX_CUR+1\n         AIF   (&AIX_CUR GT &AIX_TOT).AIX_UPGRADE_END\n         AIF   ('&CLR_NAME(&CLR_CUR)' EQ '&AIX_RELATE(&AIX_CUR)' AND &AX\n               IX_UPGRADE(&AIX_CUR)).AIX_UPGRADE_LOOP\n&CLR_AIX_UPGRADE(&CLR_CUR) SETA &CLR_AIX_UPGRADE(&CLR_CUR)+1\n         DC    A(&AIX_NAME(&AIX_CUR))\n         AGO   .AIX_UPGRADE_LOOP\n.AIX_UPGRADE_END ANOP\nVCLR     CSECT\n         DC    F'&CLR_AIX_TOT(&CLR_CUR)'  VCLRAIXT TOTAL UPGRADE AIX'S\n         DC    A(&CLR_NAME(&CLR_CUR)_AIX_UPGRADES) VCLRAIXA ADDR AIX'S\nVCLRDSNS CSECT\n&CLR_NAME(&CLR_CUR)_VES DC C'&CLR_VES(&CLR_CUR)',X'00' VES DSNAME\n&CLR_NAME(&CLR_CUR)_VX0 DC C'&CLR_VX0(&CLR_CUR)',X'00' VX0 DSNAME\n         AGO   .GEN_CLR_LOOP\n.GEN_AIX ANOP\n&AIX_CUR SETA  0\n.GEN_AIX_LOOP ANOP\n&AIX_CUR SETA  &AIX_CUR+1\n         AIF   (&AIX_CUR GT &AIX_TOT).GEN_PTH\n*\n* CLR VSAM ALTERNATE INDEX TABLE ENTRY\n*\nVAIX     CSECT\n&AIX_NAME(&AIX_CUR) DS 0F\n         DC    CL4'VAIX'                  VAIXID\n         DC    CL8'&AIX_NAME(&AIX_CUR)'   VAIXNAME ALTERNATE INDEX NAME\n         DC    CL8'&AIX_RELATE(&AIX_CUR)' VAIXCLRN BASE CLUSTER NAME\n         DC    0XL4                       VAIXFLAG AIX FLAGS\n         DC    BL1'&AIX_REUSE(&AIX_CUR)&AIX_UNIQUEKEY(&AIX_CUR)&AIX_UPGX\n               RADE(&AIX_CUR).00000'\n         DC    BL3'0'\n         DC    F'&AIX_KLEN(&AIX_CUR)'     VAIXKLEN AIX KEY LENGTH\n         DC    F'&AIX_KOFF(&AIX_CUR)'     VAIXKOFF AIX KEY OFFSET\n         DC    A(&AIX_NAME(&AIX_CUR)_VXN) VAIXVXNA ADDR AIX DSNAME\n         DC    A(&AIX_RELATE(&AIX_CUR))   VAIXRELA ADDR RELATED CLR/AIX\nVAIXDSNS CSECT\n&AIX_NAME(&AIX_CUR)_VXN DC C'&AIX_VXN(&AIX_CUR)',X'00'\n         AGO   .GEN_AIX_LOOP\n.GEN_PTH ANOP\n&PTH_CUR SETA  0\n.GEN_PTH_LOOP ANOP\n&PTH_CUR SETA  &PTH_CUR+1\n         AIF   (&PTH_CUR GT &PTH_TOT).GEN_END\n*\n* PTH VSAM PATH TABLE ENTRY\n*\nVPTH     CSECT\n&PTH_NAME(&PTH_CUR) DS 0F\n         DC    C'PATH'                    PATH    ID   RPI 865\n         DC    CL8'&PTH_NAME(&PTH_CUR)'   PTHNAME PATH NAME\n         DC    CL8'&PTH_ENTRY(&PTH_CUR)'  PTHENTN BASE CLR OR AIX NAME\n         DC    0XL4                       AIXFLAG PATH FLAGS\n         DC    BL1'&PTH_AIXP(&PTH_CUR)&PTH_AIXU(&PTH_CUR).000000'\n         DC    BL3'0'\n         DC    A(&PTH_ENTRY(&PTH_CUR))    PTHENTA ADDR OF CLR OR AIX\n         AGO   .GEN_PTH_LOOP\n.GEN_END ANOP\n         MEND\n./ ADD NAME=ZDELETE  0100-14178-14178-0013-00102-00102-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27  - issue error for any undefined operands\n.* 11/19/05 RPI102 - allow DDNAME or DSNAME to replace EP or EPLOC\n.* 12/06/05 RPI118 - use SR vs LA, reg chk, drop BALR/USING, fix VL\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 11/17/08 RPI 953 move DELETE code to ZDELETE code to share maclibs\n.*********************************************************************\n&N      ZDELETE &DE=,      BLDL ENTRY                                  X\n               &EP=,      PROGRAM NAME                                 X\n               &EPLOC=,   ADDR OF PROGRAM NAME                         X\n               &DDNAME=,  1-9 CHARACTER DDNAME                         X\n               &DSNAME=,  RX ADDR OF DSN WITH PATH                     X\n               &MF=I,     NOT SUPPORTED                                X\n               &RELATED=  IGNORED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR1\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n         AIF   ('&DE' NE '').DE\n         AIF   ('&EP' NE '').EP\n         AIF   ('&EPLOC' NE '').EPLOC\n         SR    0,0\n         AIF   ('&DDNAME' NE '' OR '&DSNAME' NE '').CHKDSN\n         MNOTE 12,'DELETE REQUIRES EP, EPLOC, DDNAME, OR DSNAME'\n         MEXIT\n.DE      ANOP\n         AIF   ('&DE'(1,1) EQ '(').DEREG\n         LA    0,&DE\n         AGO   .DEADD\n.DEREG ANOP\n         ZOPTLR 0,&DE(1)\n.DEADD   ANOP\n         AHI   0,2\n         AIF   ('&EP' EQ '' AND '&EPLOC' EQ '').CHKDSN\n         MNOTE 12,'DELETE DE EP AND EPLOC ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.EP      ANOP\n         LA    0,=CL8'&EP'\n         AIF   ('&DE' EQ '' AND '&EPLOC' EQ '').CHKDSN\n         MNOTE 12,'DELETE DE EP AND EPLOC ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.EPLOC   ANOP\n         AIF   ('&EPLOC'(1,1) EQ '(').EPLOCREG\n         LA    0,&EPLOC\n         AIF   ('&DE' EQ '' AND '&EP' EQ '').CHKDSN\n         MNOTE 12,'DELETE DE EP AND EPLOC ARE MUTUALLY EXCLUSIVE'\n         MEXIT\n.EPLOCREG ANOP\n         AIF   ('&EPLOC(1)' EQ '0').CHKDSN  RPI163\n         LR    0,&EPLOC(1)\n.CHKDSN  ANOP\n         AIF   ('&DSNAME' EQ '').CHKDD\n         AIF   ('&DDNAME' EQ '').DSNOK\n         MNOTE 12,'DELETE DSNAME AND DDNAME ARE MUTUALLY EXCLUSIVE'\n.DSNOK   ANOP\n         AIF   ('&DSNAME'(1,1) EQ '(').DSNREG\n         LA    15,&DSNAME\n         AGO   .SVC\n.DSNREG  ANOP\n         AIF   ('&DSNAME(1)' EQ '0').DSNERR\n         AIF   ('&DSNAME(1)' EQ '15').SVC  RPI163\n         LR    15,&DSNAME(1)\n         AGO   .SVC\n.DSNERR  ANOP\n         MNOTE 12,'DELETE INVALID DSNAME REG'\n         MEXIT\n.CHKDD   ANOP\n         AIF   ('&DDNAME' EQ '').DEFPATH\n         AIF   ('&DDNAME'(1,1) EQ '(').DDREG\n         LA    15,=CL8'&DDNAME'\n         OILH  15,X'8000' DD VS DSN\n         AGO   .SVC\n.DDREG   ANOP\n         AIF   ('&DSNAME(1)' EQ '0').DDERR\n         AIF   ('&DDNAME(1)' EQ '15').SKP1 RPI163\n         LR    15,&DDNAME(1)\n.SKP1    ANOP\n         OILH  15,X'8000' DD VS DSN\n         AGO   .SVC\n.DDERR   ANOP\n         MNOTE 12,'DELETE INVALID DDNAME REG'\n         MEXIT\n.DEFPATH ANOP\n         SR    15,15 USE DEFAULT SYS390 SEARCH\n.SVC     ANOP\n         SVC   9 DELETE R0=A(NAME) R15=DSNAME/DDNAME ADDR OR 0\n         MEXIT\n.ERR1    MNOTE 12,'DELETE MF= NOT SUPPORTED'\n         MEND\n./ ADD NAME=ZGENACB  0100-14178-14178-0013-00056-00056-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/16/07                                                 *\n.*********************************************************************\n.* 09/16/07 RPI 682 INITIAL CODING TO GENERATE ACB AT R1 ADDR\n.* 09/20/07 RPI 703 SKIP GEN FOR ZERO VALUE FIELDS\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n         ZGENACB &BUFSP=0,    MAXIMUM BUFFER SPACE FOR CLUSTER         X\n               &DDNAME=,      DDNAME FOR VSAM CLUSTER DEFINITION TABLE X\n               &DSNAME=0,     DSNAME FOR VSAM CLUSTER DEFINITION TABLE X\n               &EXLST=0,      NOT CURRENTLY SUPPORTED                  X\n               &MACRF=        PROCESSING OPTIONS\n&NPOS    SETA  N'&SYSLIST\n.POSLOOP ANOP\n         AIF   (&NPOS EQ 0).POSEND\n         MNOTE 12,'ZGENACB UNSUPPORTED OPERAND - &SYSLIST(&NPOS)'\n&NPOS    SETA  &NPOS-1\n         AGO   .POSLOOP\n.POSEND  ANOP\n         AIF   ('&EXLST' EQ '0').NOEXLST\n         MNOTE 12,'ZGENACB EXLST NOT SUPPORTED YET'\n.NOEXLST ANOP\n.*\n.* SET ACBID,ACBTYPE,ACBLEN NON-ZERO FIELDS\n.*\n         MVC   ACBID-IHAACB(4,1),=AL1(X'A0',X'11',0,ACBEND-IHAACB)\n.*\n.* SET ACBMACRF USING ZGENMACF SHARED WITH ACB\n.*\n         MODCB ACB=(1),MACRF=&MACRF\n.*\n.* SET ACBDDNAM OR DEFAULT ACB#&SYSNDX\n.*\n&ACBDDNAM SETC '&DDNAME'\n         AIF   ('&DDNAME' NE '').DDMOD\n&ACBDDNAM SETC 'ACB#&SYSNDX'\n.DDMOD   ANOP\n         MODCB  ACB=(1),DDNAME=&ACBDDNAM\n*\n* SET DSNAME OVERRIDE ADDRESS IF SPECIFIED\n*\n         AIF   ('&DSNAME' EQ '0').END_DSNAME     RPI 703\n         ZMODCB (1),ACBDSNAM-IHAACB,&DSNAME,4\n.END_DSNAME ANOP\n.*\n.* SET DEFAULT VCLR VSAM CATALOG CLUSTER NAME ACB#SYSNDX WHICH\n.* CAN BE CHANGED PRIOR TO OPEN OR MAY BE SET FROM DDNAME CATALOG\n.* SUFFIX (I.E. SET DDNAME=DEMOCAT.ESF1 WILL SET ACBVCLRN TO ESF1)\n.*\n         MVC   ACBVCLRN-IHAACB(8,1),=CL8'ACB#&SYSNDX' ACB VCLR NAME\n         MEND\n./ ADD NAME=ZGENMACF 0100-14178-14178-0013-00108-00108-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/16/07                                                 *\n.*********************************************************************\n.* 09/16/07 RPI 682 INITIAL CODING TO GENERATE ACBMACRF FROM MACRF=\n.*********************************************************************\n         ZGENMACF &MACRF=\n.*\n.* SET 27 MACRF OPTION BITS USING PUBLIC DOMAIN MVS 3.8\n.* IDAVSACB CODE AS INITIAL MODEL\n.*\n         LCLB  &MKEY,&MADR,&MCNV,&MSEQ,&MSKP\n         LCLB  &LOGONF,&NLOGON\n         LCLB  &MDIR,&IN,&OUT,&NUB,&UBF\n         LCLB  &NFX,&CFX,&RST,&NRS,&DDN,&DSN\n         LCLB  &NRM,&AIX,&NSR,&LSR,&GSR\n         LCLB  &NCI,&ICI,&NDF,&DFR,&NIS,&SIS\n&I       SETA  0\n.MACRF_LOOP ANOP\n&I       SETA  &I+1\n         AIF   (&I GT N'&MACRF).MACRF_CHECK\n&MKEY    SETB  ('&MACRF(&I)' EQ 'KEY' OR &MKEY)\n&MADR    SETB  ('&MACRF(&I)' EQ 'ADR' OR &MADR)\n&MCNV    SETB  ('&MACRF(&I)' EQ 'CNV' OR &MCNV)\n&MSEQ    SETB  ('&MACRF(&I)' EQ 'SEQ' OR &MSEQ)\n&MSKP    SETB  ('&MACRF(&I)' EQ 'SKP' OR &MSKP)\n&MDIR    SETB  ('&MACRF(&I)' EQ 'DIR' OR &MDIR)\n&OUT     SETB  ('&MACRF(&I)' EQ 'OUT' OR &OUT)\n&IN      SETB  ('&MACRF(&I)' EQ 'IN' OR &IN)\n&NUB     SETB  ('&MACRF(&I)' EQ 'NUB' OR &NUB)\n&UBF     SETB  ('&MACRF(&I)' EQ 'UBF' OR &UBF)\n&NFX     SETB  ('&MACRF(&I)' EQ 'NFX' OR &NFX)\n&CFX     SETB  ('&MACRF(&I)' EQ 'CFX' OR &CFX)\n&DDN     SETB  ('&MACRF(&I)' EQ 'DDN' OR &DDN)\n&DSN     SETB  ('&MACRF(&I)' EQ 'DSN' OR &DSN)\n&NRM     SETB  ('&MACRF(&I)' EQ 'NRM' OR &NRM)\n&AIX     SETB  ('&MACRF(&I)' EQ 'AIX' OR &AIX)\n&NSR     SETB  ('&MACRF(&I)' EQ 'NSR' OR &NSR)\n&LSR     SETB  ('&MACRF(&I)' EQ 'LSR' OR &LSR)\n&GSR     SETB  ('&MACRF(&I)' EQ 'GSR' OR &GSR)\n&NCI     SETB  ('&MACRF(&I)' EQ 'NCI' OR &NCI)\n&ICI     SETB  ('&MACRF(&I)' EQ 'ICI' OR &ICI)\n&NDF     SETB  ('&MACRF(&I)' EQ 'NDF' OR &NDF)\n&DFR     SETB  ('&MACRF(&I)' EQ 'DFR' OR &DFR)\n&NIS     SETB  ('&MACRF(&I)' EQ 'NIS' OR &NIS)\n&SIS     SETB  ('&MACRF(&I)' EQ 'SIS' OR &SIS)\n&RST     SETB  ('&MACRF(&I)' EQ 'RST' OR &RST)\n&NRS     SETB  ('&MACRF(&I)' EQ 'NRS' OR &NRS)\n         AGO   .MACRF_LOOP\n.*\n.* CHECK FOR MUTUALLY EXCLUSIVE OPTIONS\n.*\n.MACRF_CHECK ANOP\n         LCLB  &ACBERR\n.CHK1    AIF   (NOT(&UBF AND &NUB)).CHK2\n         MNOTE 12,'ZGENACB ACB UBF AND NUB MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK2    AIF   (NOT(&LOGONF AND &NLOGON)).CHK3\n         MNOTE 12,'ZGENACB ACB LOGONF AND NLOGON MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK3    AIF   (NOT(&RST AND &NRS)).CHK4\n         MNOTE 12,'ZGENACB ACB RST AND NRS MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK4    AIF   (NOT(&NFX AND &CFX)).CHK5\n         MNOTE 12,'ZGENACB ACB NFX AND CFX MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK5    AIF   (NOT(&DDN AND &DSN)).CHK6\n         MNOTE 12,'ACB DDN AND DSN MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK6    AIF   (NOT(&NRM AND &AIX)).CHK7\n         MNOTE 12,'ZGENACB ACB NRM AND AIX MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK7    AIF   ((NOT(&NSR AND &GSR)) AND (NOT(&GSR AND &LSR))          X\n               AND (NOT(&LSR AND &NSR))).CHK8\n         MNOTE 12,'ZGENACB ACB NSR, LSR, AND GXR MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK8    AIF   (NOT(&NCI AND &ICI)).CHK9\n         MNOTE 12,'ZGENACB ACB NCI AND ICI MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK9    AIF   (NOT(&NDF AND &DFR)).CHK10\n         MNOTE 12,'ZGENACB ACB NDF AND DFR MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK10   AIF   (NOT(&NIS AND &SIS)).CHK11\n         MNOTE 12,'ZGENACB ACB NIS AND SIS MUTUALLY EXCLUSIVE'\n&ACBERR  SETB  1\n.CHK11   ANOP\n         AIF   (NOT &ACBERR).MACRF_DEF\n         MEXIT\n.MACRF_DEF ANOP\n.*\n.* SET DEFAULT OPTIONS\n.*\n&MKEY    SETB  (NOT(&MADR OR &MCNV) OR &MKEY)\n&MSEQ    SETB  (NOT(&MSKP OR &MDIR) OR &MSEQ)\n&IN      SETB  (NOT(&OUT) OR &IN)\n.*\n.* GEN MACRF FLAG BYTES (SEE ACBD FOR FLAG SYMBOLS AND DESCRIPTIONS)\n.*\n         GBLC  &ZGENMACF1,&ZGENMACF2,&ZGENMACF3,&ZGENMACF4\n&ZGENMACF1 SETC '&MKEY&MADR&MCNV&MSEQ&MDIR&IN&OUT&UBF'\n&ZGENMACF2 SETC '000&MSKP&NLOGON&RST&DSN&AIX'\n&ZGENMACF3 SETC '0&LSR&GSR&ICI&DFR&SIS&CFX.0'\n&ZGENMACF4 SETC '00000000'\n         MEND\n./ ADD NAME=ZGENOPTD 0100-14178-14178-0013-00184-00184-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/16/07                                                 *\n.*********************************************************************\n.* 09/16/07 RPI 687  INITIAL CODING TO GEN RPL OPTCD BITS\n.* 04/19/08 RPI 833  add SETC quotes for HLASM compatibility\n.* 04/23/09 RPI 1024 jm2 MODCB generates OI and NI instead of MVI\n.* 04/07/11 RPI 1158 REMOVE DUPLICATE LCLB ASY,XASY\n.*********************************************************************\n         ZGENOPTD &OPTCD=\n.*\n.* DEFINE 2 OPTION BYTES FROM OPTCD PARMS USING IDAVSOPT AS MODEL\n.*\n         LCLB  &KEY,&ADR,&CNV,&SEQ,&DIR,&SKP     6\n         LCLB  &SYN,&ASY,&NUP,&UPD,&NSP,&KEQ     6\n         LCLB  &KGE,&FKS,&GEN,&MVE,&LOC,&LRD     5\n         LCLB  &WAITX,&NWAITX                    2\n         LCLB  &ARD,&BWD,&CR,&CRE RPI 1158 ASY   5\n         LCLB  &FWD,&NRI,&RBA,&XRBA              4\n         LCLB  &XKEY,&XADR,&XCNV,&XSEQ,&XDIR,&XSKP     6    jm2\n         LCLB  &XSYN,&XASY,&XNUP,&XUPD,&XNSP,&XKEQ     6    jm2\n         LCLB  &XKGE,&XFKS,&XGEN,&XMVE,&XLOC,&XLRD     5    jm2\n         LCLB  &XWAITX,&XNWAITX                        2    jm2\n         LCLB  &XARD,&XBWD,&XCR,&XCRE RPI 1158 XASY    5    jm2\n         LCLB  &XFWD,&XNRI,&XXRBA     RPI 1158 XRBA    4    jm2\n&OPTS(1) SETC  'ADR',   1                                              X\n               'ARD',   2                                              X\n               'ASY',   3                                              X\n               'BWD',   4                                              X\n               'CNV',   5                                              X\n               'CR',    6                                              X\n               'CRE',   7                                              X\n               'DIR',   8                                              X\n               'FKS',   9                                              X\n               'FWD',  10                                              X\n               'GEN',  11                                              X\n               'KEQ',  12                                              X\n               'KEY',  13                                              X\n               'KGE',  14                                              X\n               'LOC',  15                                              X\n               'LRD',  16                                              X\n               'MVE',  17                                              X\n               'NRI',  18                                              X\n               'NSP',  19                                              X\n               'NUP',  20                                              X\n               'NWAITX', 21                                            X\n               'RBA',  22                                              X\n               'SEQ',  23                                              X\n               'SKP',  24                                              X\n               'SYN',  25                                              X\n               'UPD',  26                                              X\n               'WAITX', 27                                             X\n               'XRBA'  28\n&I       SETA  0\n.OPTLOOP ANOP\n&I       SETA  &I+1\n         AIF   (&I GT N'&OPTCD).CHK_OPT  RPI 680\n&J       SETA  0\n.FINDOPT ANOP\n&J       SETA  &J+1\n         AIF   (&J GT N'&OPTS).OPT_NOT_FND\n         AIF   ('&OPTCD(&I)' EQ '&OPTS(&J)').OPT_FND\n         AGO   .FINDOPT\n.OPT_NOT_FND ANOP\n         MNOTE 12,'ZGENRPL OPTCD NOT FOUND - &OPTCD(&I)'\n         AGO   .OPTLOOP\n.OPT_FND ANOP\n&ADR     SETB  ('&OPTCD(&I)' EQ 'ADR' OR &ADR)\n&ARD     SETB  ('&OPTCD(&I)' EQ 'ARD' OR &ARD)\n&ASY     SETB  ('&OPTCD(&I)' EQ 'ASY' OR &ASY)\n&BWD     SETB  ('&OPTCD(&I)' EQ 'BWD' OR &BWD)\n&CNV     SETB  ('&OPTCD(&I)' EQ 'CNV' OR &CNV)\n&CR      SETB  ('&OPTCD(&I)' EQ 'CR'  OR &CR)   NEW\n&CRE     SETB  ('&OPTCD(&I)' EQ 'CRE' OR &CRE)  NEW\n&DIR     SETB  ('&OPTCD(&I)' EQ 'DIR' OR &DIR)\n&FKS     SETB  ('&OPTCD(&I)' EQ 'FKS' OR &FKS)\n&FWD     SETB  ('&OPTCD(&I)' EQ 'FWD' OR &FWD)\n&GEN     SETB  ('&OPTCD(&I)' EQ 'GEN' OR &GEN)\n&KEQ     SETB  ('&OPTCD(&I)' EQ 'KEQ' OR &KEQ)\n&KEY     SETB  ('&OPTCD(&I)' EQ 'KEY' OR &KEY)\n&KGE     SETB  ('&OPTCD(&I)' EQ 'KGE' OR &KGE)\n&LOC     SETB  ('&OPTCD(&I)' EQ 'LOC' OR &LOC)\n&LRD     SETB  ('&OPTCD(&I)' EQ 'LRD' OR &LRD)\n&MVE     SETB  ('&OPTCD(&I)' EQ 'MVE' OR &MVE)\n&NRI     SETB  ('&OPTCD(&I)' EQ 'NRI' OR &NRI)       NEW\n&NSP     SETB  ('&OPTCD(&I)' EQ 'NSP' OR &NSP)\n&NUP     SETB  ('&OPTCD(&I)' EQ 'NUP' OR &NUP)\n&NWAITX  SETB  ('&OPTCD(&I)' EQ 'NWAITX' OR &NWAITX)\n&RBA     SETB  ('&OPTCD(&I)' EQ 'RBA' OR &RBA)       NEW\n&SEQ     SETB  ('&OPTCD(&I)' EQ 'SEQ' OR &SEQ)\n&SKP     SETB  ('&OPTCD(&I)' EQ 'SKP' OR &SKP)\n&SYN     SETB  ('&OPTCD(&I)' EQ 'SYN' OR &SYN)\n&UPD     SETB  ('&OPTCD(&I)' EQ 'UPD' OR &UPD)\n&WAITX   SETB  ('&OPTCD(&I)' EQ 'WAITX' OR &WAITX)\n&XRBA    SETB  ('&OPTCD(&I)' EQ 'XRBA' OR &XRBA)     NEW\n         AGO   .OPTLOOP\n.CHK_OPT ANOP\n.*\n.* CHECK MUTUALLY EXCLUSIVE OPTIONS\n.*\n.CHK1    AIF   (NOT(&KEY AND &ADR)).CHK2\n         MNOTE 12,'ZGENRPL KEY AND ADR MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK2    AIF   (NOT(&KEY AND &CNV)).CHK3\n         MNOTE 12,'ZGENRPL KEY AND CNV MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK3    AIF   (NOT(&ADR AND &CNV)).CHK4\n         MNOTE 12,'ZGENRPL ADR AND CNV MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK4    AIF   (NOT(&SEQ AND &DIR)).CHK5\n         MNOTE 12,'ZGENRPL SEQ AND DIR MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK5    AIF   (NOT(&SEQ AND &SKP)).CHK6\n         MNOTE 12,'ZGENRPL SEQ AND SKP MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK6    AIF   (NOT(&DIR AND &SKP)).CHK7\n         MNOTE 12,'ZGENRPL DIR AND SKP MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK7    AIF   (NOT(&SYN AND &ASY)).CHK8\n         MNOTE 12,'ZGENRPL SYN AND ASY MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK8    AIF   (NOT(&NUP AND &UPD)).CHK9\n         MNOTE 12,'ZGENRPL NUP AND UPD MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK9    AIF   (NOT(&NUP AND &NSP)).CHK10\n         MNOTE 12,'ZGENRPL NUP AND NSP MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK10   AIF   (NOT(&UPD AND &NSP)).CHK11\n         MNOTE 12,'ZGENRPL UPD AND NSP MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK11   AIF   (NOT(&KEQ AND &KGE)).CHK12\n         MNOTE 12,'ZGENRPL KEY AND KGE MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK12   AIF   (NOT(&WAITX AND &NWAITX)).CHK13\n         MNOTE 12,'ZGENRPL WAITX AND NWAITX MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK13   AIF   (NOT(&FKS AND &GEN)).CHK14\n         MNOTE 12,'ZGENRPL FKS AND GEN MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK14   AIF   (NOT(&MVE AND &LOC)).CHK15\n         MNOTE 12,'ZGENRPL MVE AND LOC MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK15   AIF   (NOT(&BWD AND &FWD)).CHK16\n         MNOTE 12,'ZGENRPL FWD AND BWD MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHK16   AIF   (NOT(&ARD AND &LRD)).CHKEND\n         MNOTE 12,'ZGENRPL ARD AND LRD MUTUALLY EXCLUSIVE'\n&RPLERR  SETB  1\n.CHKEND  ANOP\n         GBLC  &ZGENOPT1,&ZGENOPT2\n&ZGENOPT1 SETC '&LOC&DIR&SEQ&SKP&ASY&KGE&GEN&XRBA'  OPTCD BYTE 1\n&ZGENOPT2 SETC '&KEY&ADR&CNV&BWD&LRD&WAITX&UPD&NSP' OPTCD BYTE 2\n.*\n&XADR     SETB  (&KEY OR &CNV)                              jm2\n&XARD     SETB  (&LRD)                                      jm2\n&XASY     SETB  (&SYN)                                      jm2\n&XBWD     SETB  (&FWD)                                      jm2\n&XCNV     SETB  (&KEY OR &ADR)                              jm2\n&XDIR     SETB  (&SEQ OR &SKP )                             jm2\n&XFKS     SETB  (&GEN)                                      jm2\n&XFWD     SETB  (&BWD)                                      jm2\n&XGEN     SETB  (&FKS)                                      jm2\n&XKEY     SETB  (&ADR OR &CNV OR &KGE)                      jm2\n&XKGE     SETB  (&KEY)                                      jm2\n&XLOC     SETB  (&MVE)                                      jm2\n&XLRD     SETB  (&ARD)                                      jm2\n&XMVE     SETB  (&LOC)                                      jm2\n&XNSP     SETB  (&NUP OR &UPD)                              jm2\n&XNUP     SETB  (&NUP OR &NSP)                              jm2\n&XNWAITX  SETB  (&WAITX)                                    jm2\n&XSEQ     SETB  (&DIR OR &SKP)                              jm2\n&XSKP     SETB  (&DIR OR &SEQ)                              jm2\n&XSYN     SETB  (&ASY)                                      jm2\n&XUPD     SETB  (&NUP OR &NSP)                              jm2\n&XWAITX   SETB  (&NWAITX)                                   jm2\n         GBLC  &XGENOPT1,&XGENOPT2                          jm2\n&XGENOPT1 SETC '&XLOC&XDIR&XSEQ&XSKP&XASY&XKGE&XGEN&XXRBA'  OPTCD1\n&XGENOPT2 SETC '&XKEY&XADR&XCNV&XBWD&XLRD&XWAITX&XUPD&XNSP' OPTCD2\n.*\n         MEND\n./ ADD NAME=ZGENRPL  0100-14178-14178-0013-00079-00079-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/16/07                                                 *\n.*********************************************************************\n.* 09/14/07 RPI 682 INITIAL CODING TO GEN RPL AT R1\n.* 09/14/07 RPI 703 SKIP GENERATING ZERO VALUE ARGS\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n         ZGENRPL &ACB=0,  VSAM ACCESS CONTROL BLOCK ADDRESS            X\n               &AREA=0,   RECORD WORK AREA (DATA FOR MVE, ADDR FOR LOC)X\n               &AREALEN=0, LENGTH OF AREA (MAX LRECL IF MVS, 4 FOR LOC)X\n               &ARG=0,    KEY FIELD FOR KSDS ACCESS                    X\n               &ECB=0,    ECB TO BE POSTED ON COMPLETION               X\n               &KEYLEN=0, KEY LENGTH FOR GENERIC KEY SEARCH            X\n               &OPTCD=,   OPTIONS (SEE SUPPORTED OPTIONS ABOVE)        X\n               &RECLEN=0  RECORD LENGTH FOR VARIABLE LENGTH PUT\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'ZGENRPL UNSUPPORTED OPERANDS - &SYSLIST(1)'\n         MEXIT\n.NPOK    ANOP\n.*\n.* SET RPL ID,TYPE,LEN\n.*\n         MVC   RPLID-IHARPL(3,1),=AL1(0,10,RPLEND-IHARPL)\n.*\n.* SET RPL ECB\n.*\n         AIF   ('&ECB' EQ '0').END_ECB              RPI 703\n         ZMODCB (1),RPLECB-IHARPL,&ECB,4\n.END_ECB ANOP\n.*\n.* SET RPL KEYLEN\n.*\n         AIF   ('&KEYLEN' EQ '0').END_KEYLEN        RPI 703\n         ZMODCB (1),RPLLKEY-IHARPL,&KEYLEN,4\n.END_KEYLEN ANOP\n.*\n.* SET RPL ACB\n.*\n         AIF   ('&ACB' EQ '0').END_ACB              RPI 703\n         ZMODCB (1),RPLACB-IHARPL,&ACB,4\n.END_ACB ANOP\n.*\n.* SET RPL AREA\n.*\n         AIF   ('&AREA' EQ '0').END_AREA            RPI 703\n         ZMODCB (1),RPLAREA-IHARPL,&AREA,4\n.END_AREA ANOP\n.*\n.* SET RPL ARG\n.*\n         AIF   ('&ARG' EQ '0').END_ARG              RPI 703\n         ZMODCB (1),RPLARG-IHARPL,&ARG,4\n.END_ARG ANOP\n.*\n.* SET RPL OPTCD NON-ZERO FIELD\n.*\n         AIF   ('&OPTCD' EQ '').END_OPTCD\n         GBLC  ZGENOPT1,&ZGENOPT2\n         ZGENOPTD OPTCD=&OPTCD\n         MVC   RPLOPTCD-IHARPL(2,1),=B'&ZGENOPT1&ZGENOPT2'\n.END_OPTCD ANOP\n.*\n.* SET RPL RECLEN\n.*\n         AIF   ('&RECLEN' EQ '0').END_RECLEN        RPI 703\n         ZMODCB (1),RPLLREC-IHARPL,&RECLEN,4\n.END_RECLEN ANOP\n.*\n.* SET RPL AREALEN\n.*\n         AIF   ('&AREALEN' EQ '0').END_AREALEN      RPI 703\n         ZMODCB (1),RPLLAREA-IHARPL,&AREALEN,4\n.END_AREALEN ANOP\n         MEND\n./ ADD NAME=ZKSIRD   0100-14178-14178-0013-00045-00045-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 10/05/07                                                 *\n.*********************************************************************\n.* 10/05/07 RPI INITIAL CODING OF KSDS INSERT RECORD DESECT\n.* 08/03/07 RPI 668 VCDTTIOT TABLE INDEX AFTER LOADING\n.* 08/06/07 RPI 668 VCDTPATH ADDR KSDS ALT PATH IHAAIX SECTION\n.* 09/03/07 RPI 681 EXPAND TO IHAVCDT, IHACLR, IHAAIX, IHAPTH\n.* 09/23/07 RPI 704 ADD VCLRCI OPTIONAL CI SIZE TO SUPPORT LINEAR\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n         ZKSIRD\n.*\n.* IF ZKSIRD ALREADY DEFINED EXIT NOW\n.*\n         GBLB  &Z390_ZKSIR\n         GBLC  &Z390_ZKSIR_NAME,&Z390_ZKSIR_TYPE\n         AIF   (&Z390_ZKSIR).EXIT\n&Z390_ZKSIR SETB 1\n&Z390_ZKSIR_NAME SETC '&SYSLOC'\n&Z390_ZKSIR_TYPE SETC '&SYSSTYP'\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'ZKSIRD UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n*\n* IHAZKSIT VSAM CATALOG DEFINITION TABLE(vcdt) DSECT\n*\nIHAZKSIR DSECT\nZKSIRID  DS    CL4    0 C'KSIR'\nZKSIRP   DS    XL8    4 XRBA OF PARENT   ZKSIR RECORD\nZKSIRL   DS    XL8   12 XRBA OF LOWER    ZKSIR RECORD\nZKSIRH   DS    XL8   20 XRBA OF HIGHER   ZKSIR RECORD\nZKSIRF   DS    XL8   28 XRBA OF FORWARD  ZKSIR RECORD\nZKSIRB   DS    XL8   36 XRBA OF BACKWARD ZKSIR RECORD\nZKSIREC  EQU   *     44 START OF FIXED OR VARIABLE KSDS DATA RECORD\nZKSIRLEN EQU   *-IHAZKSIR\n         AIF   ('&Z390_ZKSIR_NAME' EQ '' OR '&Z390_ZKSIR_TYPE' EQ '').EX\n               XIT\n&Z390_ZKSIR_NAME &Z390_ZKSIR_TYPE\n.EXIT    ANOP\n         MEND\n./ ADD NAME=ZKSITD   0100-14178-14178-0013-00060-00060-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 10/05/07                                                 *\n.*********************************************************************\n.* 10/05/07 RPI INITIAL CODING OF KSDS INSERT TREE ZKSITD\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n.*\n.* ZKSIT - Z390 VSAM KSDS INSERT TREE CONTROL BLOCK\n.*\n.* 1.  When record is inserted in KSDS, the VX0 index pointer for\n.*     next lowest or first xrba in index is replaced with negative\n.*     xrba to ZKSIT control block defining balanced binary tree\n.*     structure in VES containing all inserted records.\n.* 2.  The ZKSIT control block has 3 pointers to ZKSIR Z390 VSAM\n.*     KSDS INSERT RECORD CONTROL BLOCKS (top, lowest, and highest).\n.* 3.  If first record, the existing key is moved into the tree as\n.*     it may not be the lowest key after insert in which case the\n.*     VX0 first record key is updated accordingly with lowest key.\n.* 4.  The ZKSIR control block prefixes each inserted record and\n.*     contains XRBA pointers to parent, next lower, next higher,\n.*     next foward, and next backward XRBA pointers to support\n.*     searching tree or reading sequentially forward or backward.\n.* 5.  The high bit is set on in the next lower or higher XRBA field\n.*     to indicated last add.  This flag is used to keep the tree\n.*     balanced by moving nodes in tree up or down as required.\n.*\n.*\n.*********************************************************************\n         ZKSITD\n.*\n.* IF ZKSITD ALREADY DEFINED EXIT NOW\n.*\n         GBLB  &Z390_ZKSIT\n         GBLC  &Z390_ZKSIT_NAME,&Z390_ZKSIT_TYPE\n         AIF   (&Z390_ZKSIT).EXIT\n&Z390_ZKSIT SETB 1\n&Z390_ZKSIT_NAME SETC '&SYSLOC'\n&Z390_ZKSIT_TYPE SETC '&SYSSTYP'\n         AIF   (N'&SYSLIST EQ 0).NPOK\n         MNOTE 12,'ZKSITD UNSUPPORTED OPERANDS - &SYSLIST(1)'\n.NPOK    ANOP\n*\n* IHAZKSIT VSAM KSDS INSERT TOP OF BALANCED TREE DSECT\n*\nIHAZKSIT DSECT\nZKSITID  DS    CL4    0 C'KSIT'\nZKSITTOP DS    XL8    4 XRBA OF TOP   KSIR RECORD\nZKSITFST DS    XL8   12 XRBA OF FIRST KSIR RECORD\nZKSITLST DS    XL8   20 XRBA OF LAST  KSIR RECORD\nZKSITLEN EQU   *-IHAZKSIT\n         AIF   ('&Z390_ZKSIT_NAME' EQ '' OR '&Z390_ZKSIT_TYPE' EQ '').EX\n               XIT\n&Z390_ZKSIT_NAME &Z390_ZKSIT_TYPE\n.EXIT    ANOP\n         MEND\n./ ADD NAME=ZMFACC   0100-14178-14178-0013-00333-00333-00000-Z390MAC\n        MACRO\n&PROBLEM ZMFACC &SECTION,     START OR STOP                       DSH2 X\n               &OP,           CODE, INPUT, OUTPUT, OR DUMP        DSH2 X\n               &NAME=,        P? SOLUTION NAME REQ'D ON 1ST CALL  DSH2 X\n               &RUNSYS=,      MVS, CMS, VSE, ZOS (DEFAULT IS 390) DSH2 X\n               &ST=,&LEN=,&END=,&ID=  DUMP OPTIONS USED BY CMS    DSH2\n.********************************************************************\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.********************************************************************\n         GBLC  &ZRUNSYS           Global OS TARGET EXECUTION ID\n         GBLB  &SYPOPN            IS SYSPRINT OPEN\n         LCLA  &N,&L,&K\n         LCLC  &WT,&TNAME,&XNAME\n      AIF   ('&ZRUNSYS' NE '').GUSERUN  DON'T LOOK IF ZRUNSYS SET  DSH2\n      AIF   ('&RUNSYS' NE '').GSETRUN   IF MACRO DEFINITION USE IT DSH2\n&N       SETA  1                  Start index\n&L       SETA  K'&SYSPARM-7       Max loop\n.SYSPLP ANOP\n      AIF   ('&N' GT &L).NOSYS            STOP IF TOO FAR\n      AIF   ('&SYSPARM'(&N,7) EQ 'RUNSYS=').GOTSYS IF MAGIC WORD GO\n&N       SETA  &N+1               Bump index\n      AGO   .SYSPLP               Loop de loop\n.GOTSYS ANOP\n&N       SETA  &N+7               Index over 'RUNSYS='\n&ZRUNSYS  SETC  '&SYSPARM'(&N,3)        GET THREE BYTE CODE\n      AGO   .TSYS                 Go check validity\n.NOSYS ANOP  SET                  default\n         MNOTE 4,'No RUNSYS= on first ZMFACC, 390 assumed.'\n&ZRUNSYS  SETC  '390'\n      AGO   .TSYS\n.GSETRUN ANOP\n&ZRUNSYS  SETC  '&RUNSYS'        GET VALUE FROM MACRO HEADER DSH2\n.TSYS ANOP\n      AIF   ('&ZRUNSYS' EQ '390').SAYZOP\n      AIF   ('&ZRUNSYS' EQ 'CMS').SAYZOP\n      AIF   ('&ZRUNSYS' EQ 'MVS').SAYZOP\n      AIF   ('&ZRUNSYS' EQ 'VSE').SAYZOP        DSH2\n      AIF   ('&ZRUNSYS' EQ 'ZOS').SAYZOP        DSH2\n         MNOTE 8,'ZRUNSYS=&ZRUNSYS not valid, No generation'\n      MEXIT\n.SAYZOP ANOP\n         MNOTE 0,'ZRUNSYS=&ZRUNSYS'                          DSH2\n.GUSERUN ANOP\n.***** 390, MVS and CMS Version *****\n.* Z390 Mainframe Assembler Coding Contest\n.* macro to isolate problem solutions from\n.* specific operating systems. This macro\n.* may be customizied to work on users\n.* specific operating system.  The functions\n.* it performs are as follows:\n.*  CODE,START,NAME='YOUR NAME'\n.*    1.  generate standard linkage\n.*        and define base register.\n.*    2.  Verify problem # and name are specified and display them.\n.*    3.  Generate code\n.*         to display the memory between INPUT_START and INPUT_END.\n.*  CODE,END\n.*    1.  Generate code\n.*         to display the memory between INPUT_START and INPUT_END.\n.*    2.  Exit with return code 0.\n.*    3.  Generate equates for Regs\n.*  INPUT,START\n.*    1.  Define INPUT_START on double word boundary for start\n.*        of data input storage to be displayed at CODE,START time.\n.*  INPUT,END\n.*    1.  Define INPUT_END for end\n.*        of data input storage to be displayed at CODE,START time.\n.*  OUTPUT,START\n.*    1.  Define OUTPUT_START on double word boundary for start\n.*        of data output storage to be displayed at CODE,END time.\n.*  OUTPUT,END\n.*    1.  Define OUTPUT_END for end\n.*        of data output storage to be displayed at CODE,END time.\n.*\n.*  DUMP ID=,NAME=,ST=,END=\n.*    1.  Generate code to display data (CMS has no SNAP)\n.****************************************************************\n.* 12/13/07 Don Higgins initial version for z390 environment\n.* 12/15/07 Rafa Pereira modified for MVS 3.8, Hercules environ.\n.* 12/16/07 Don Higgins - merged z390 and Hercules support using\n.*          test of &SYSASM for 'z390' else assume MVS compat. OS\n.* 12/17/07 Chris L    Update version for 390, MVS AND CMS environment\n.*                     &SYSASM specified on first ZFMACC or via\n.*                     SYSPARM contains 'SYSASM=xxx'\n.*                     Added DUMP section to isolate SNAP code\n.* 12/18/07 DSH2 Don Higgins changes:\n.*          1.  Change program ID back to P versus # for\n.*              compatibility with published solutions and for\n.*              compatibility with MVS 3.8 IFOX00 assembler.\n.*          2.  Change ZMFACC new parm from SYSASM to RUNSYS=\n.*              to avoid conflist with SYSASM keyword vs global.\n.*          3.  Add support for RUNSYS=ZOS using same code as MVS\n.*          4.  Add support for RUNSYS=VSE using WTO and PDUMP\n.* 12/18/07 Rafa Pereira fix restrictions req'd for IFOX00\n.* 12/18/07 Chris Langford change to &RUNSYS= to support SYSPARM\n.*          overrides, set VSE base and save area and use EOJ exit\n.* 12/19/07 CL3 Chris Langford chnage to correct MVS/ZOS SNAP msgs\n.* 12/19/07 RP2 Rafa Pereira   chnage to correct MVS/ZOS SNAP areas\n.* 12/19/07 CL4 Chris Langford chnage PDUMP fields and SNAP ID\n.* 12/21/07 DSH3 Display RUNSYS=??? after programmer name\n.* 12/22/07 DSH4 Add all 16 F?? registers with comment showing pairs\n.****************************************************************\n      AIF   ('&SECTION' EQ 'CODE').CODE\n      AIF   ('&SECTION' EQ 'DUMP').DUMP\n      AIF   ('&SECTION' EQ 'INPUT').INPUT\n      AIF   ('&SECTION' EQ 'OUTPUT').OUTPUT\n         MNOTE 12,'ZMFACC SECTION NOT CODE/INPUT/OUTPUT - &SECTION'\n         MEXIT\n.*                                                ********************\n.*                                                 CODE  Routine\n.*                                                ********************\n.CODE    ANOP\n      AIF   ('&OP' EQ 'START').CODEST\n      AIF   ('&OP' EQ 'END').CODEEND\n         MNOTE 12,'ZMFACC OP MUST BE START OR END - &OP'\n         MEXIT\n.*                                                ********************\n.*                                                 CODE,START  Routine\n.*                                                ********************\n.CODEST ANOP\n         AIF   (K'&PROBLEM LT 2 OR '&PROBLEM'(1,1) NE 'P').BADPGM DSH2\n         AIF   (K'&NAME LT 2).BADNAME\n&PROBLEM CSECT\n         AIF   ('&ZRUNSYS' EQ 'VSE').VSEBALR\n         STM   14,12,12(13)\n         BAL   15,GO&SYSNDX-&PROBLEM.(15)\nSV&SYSNDX DC    18F'0'\n         DC    CL8'&PROBLEM'\n         DC    CL8'&SYSDATE'\n         DC    CL8'&SYSTIME'\n      AIF   ('&ZRUNSYS' NE 'MVS' AND '&ZRUNSYS' NE 'ZOS').NOSYSP  DSH2\nSYSPRINT DCB   DSORG=PS,MACRF=W,RECFM=VBA,BLKSIZE=1632,LRECL=125,      X\n               DDNAME=SYSPRINT\n        AGO    .NOSYSP\n.VSEBALR ANOP\n        BAL    13,18*4(13)\n        USING  *,13\n        DC     18F'0'\n        AGO    .SHOWID\n.NOSYSP ANOP\nGO&SYSNDX DS    0H\n         ST    15,8(13)\n         ST    13,4(15)\n         LR    13,15\n      USING SV&SYSNDX,13\n.SHOWID  ANOP\n&TNAME   SETC  '&NAME'(2,K'&NAME-2)\n      AIF   ('&ZRUNSYS' EQ 'CMS').WRTER\n         WTO   'ZMFACC Solution for problem &PROBLEM by &TNAME using RUX\n               NSYS=&ZRUNSYS'   DSH3\n      AGO   .AFWRT\n.WRTER ANOP\n         WRTERM 'ZMFACC Solution for problem &PROBLEM by &TNAME using RX\n               UNSYS=&ZRUNSYS'  DSH3\n.AFWRT ANOP\n         ZMFACC DUMP,ID=1,ST=INPUTSTR,END=INPUTEND,NAME='Input Area'\n         MEXIT\n.*                                                ********************\n.*                                                 CODE,END  Routine\n.*                                                ********************\n.CODEEND ANOP\n      ZMFACC DUMP,ID=2,ST=OUTPUTST,END=OUTPUTEN,NAME='Output Area' RP2\n      AIF   (&SYPOPN EQ 0).NOTOP\n         CLOSE (SYSPRINT)\n.NOTOP ANOP\n         AIF   ('&ZRUNSYS' EQ 'VSE').EXITVSE\n         L     13,4(,13)\n         L     14,12(,13)\n         LM    2,12,28(13)\n         SR    15,15\n         BR    14\n         AGO   .EXITEND\n.EXITVSE ANOP\n         EOJ\n.EXITEND ANOP\n*        YREGS\n***      REGISTER EQUATES\n*\n         SPACE 2\n.*   Generate REG equates inline. CMS does not have YREGS\n* GENERAL  REGISTERS\n         SPACE\nR0        EQU  0\nR1        EQU  1\nR2        EQU  2\nR3        EQU  3\nR4        EQU  4\nR5        EQU  5\nR6        EQU  6\nR7        EQU  7\nR8        EQU  8\nR9        EQU  9\nR10       EQU  10\nR11       EQU  11\nR12       EQU  12\nR13       EQU  13\nR14       EQU  14\nR15       EQU  15\n         SPACE\n* FLOATING POINT REGISTERS\n         SPACE\nF0        EQU  0  L0\nF1        EQU  1  L1\nF2        EQU  2  L0+\nF3        EQU  3  L1+\nF4        EQU  4  L4\nF5        EQU  5  L5\nF6        EQU  6  L4+\nF7        EQU  7  L5+\nF8        EQU  8  L8\nF9        EQU  9  L9\nF10       EQU  10 L8+\nF11       EQU  11 L9+\nF12       EQU  12 L12\nF13       EQU  13 L13\nF14       EQU  14 L12+\nF15       EQU  15 L13+\n         SPACE\n* EXTENDED CONTROL REGISTERS\n         SPACE\nC0        EQU  0\nC1        EQU  1\nC2        EQU  2\nC3        EQU  3\nC4        EQU  4\nC5        EQU  5\nC6        EQU  6\nC7        EQU  7\nC8        EQU  8\nC9        EQU  9\nC10       EQU  10\nC11       EQU  11\nC12       EQU  12\nC13       EQU  13\nC14       EQU  14\nC15       EQU  15\n         MEXIT\n.*                                                ********************\n.*                                                 INPUT Routine\n.*                                                ********************\n.INPUT   ANOP\n      AIF   ('&OP' EQ 'START').INPUTST\n      AIF   ('&OP' EQ 'END').INPUTE\n         MNOTE 12,'ZMFACC OP MUST BE START OR END - &OP'\n         MEXIT\n.INPUTST ANOP\nINPUTSTR DS    0F\n         MEXIT\n.INPUTE ANOP\nINPUTEND  EQU  *\n         MEXIT\n.*                                                ********************\n.*                                                 OUTPUT Routine\n.*                                                ********************\n.OUTPUT ANOP\n      AIF   ('&OP' EQ 'START').OUTST\n      AIF   ('&OP' EQ 'END').OUTEND\n         MNOTE 12,'ZMFACC OP MUST BE START OR END - &OP'\n         MEXIT\n.OUTST ANOP\nOUTPUTST DS    0F\n         MEXIT\n.OUTEND ANOP\nOUTPUTEN  EQU  *\n         MEXIT\n.BADPGM  MNOTE 12,'ZMFACC PROGRAM NAME MUST BE P? - &PROBLEM' DSH2\n         MEXIT\n.BADNAME MNOTE 12,'ZMFACC PROGRAMMER NAME MUST BE DEFINED'\n         MEXIT\n.*                                                ********************\n.*                                                 DUMP Routine\n.*                                                ********************\n.DUMP ANOP\n&PROBLEM DS    0H\n&TNAME   SETC  '&NAME'\n      AIF   ('&NAME'(1,1) NE '''').SKN\n&K       SETA  K'&NAME\n&XNAME   SETC  '&NAME'(2,&K-2)\n.SKN ANOP\n&TNAME SETC 'ID:&ID &XNAME'\n      AIF   ('&ZRUNSYS' NE 'CMS').DMPNCMS\n         STM   2,4,RSV&SYSNDX\n         LA    2,&ST\n      AIF      ('&END' EQ '').DOLEN\n         LA    4,&END\n&WT      SETC  'END'\n         SR    4,2\n      AGO   .GOT\n.DOLEN ANOP\n         LA    4,&LEN\n&WT      SETC  'LEN'\n.GOT ANOP\n         LINEDIT TEXT='Dump of &TNAME Starts ........ Len ........',   X\n               SUB=(HEX,(2),HEX,(4)),RENT=NO\n         SR    3,3\nLP&SYSNDX DS    0H\n  LINEDIT TEXT=' ........ .... ........ ........ ........ ........  >..X\n               ..............<',RENT=NO,COMP=NO,DOT=NO,                X\n               SUB=(HEX,(2),HEX,(3),HEXA,0(2),HEXA,4(2),HEXA,8(2),     X\n               HEXA,12(2),CHARA,0(2))\n         LA    2,16(2)\n         LA    3,16(3)\n         SH    4,=H'16'\n         BP    LP&SYSNDX\n         LM    2,4,RSV&SYSNDX\n         B     A&SYSNDX\nRSV&SYSNDX DS    3F\nA&SYSNDX DS    0H\n      MEXIT\n.DMPNCMS ANOP\n      AIF    ('&ZRUNSYS' EQ 'MVS').GENMDMP\n      AIF    ('&ZRUNSYS' EQ 'ZOS').GENMDMP    DSH2\n      AIF    ('&ZRUNSYS' EQ 'VSE').GENPDMP    DSH2\n         SNAP  ID=&ID,PDATA=,STORAGE=(&ST,&END),TEXT='&XNAME'\n      MEXIT\n.GENPDMP ANOP                                 DSH2\n      PDUMP  &ST,&END                         DSH2 CL4\n      MEXIT                                   DSH2\n.GENMDMP ANOP\n      AIF    (&SYPOPN).DIDOPN\n         OPEN  (SYSPRINT,(OUTPUT))\n&SYPOPN  SETB  1                  Set 'DCB is open'\n.DIDOPN ANOP\n         SNAP  DCB=SYSPRINT,                                           X\n               ID=&ID,PDATA=,STORAGE=(&ST,&END),         RP2 CL4       X\n               STRHDR=(HDR&SYSNDX)                       CL3\n         B     AF&SYSNDX  skip over message              CL3\n&K       SETA  K'&XNAME   length of message              CL3\nHDR&SYSNDX DC AL1(&K)                                    RP2\n           DC C'&XNAME' msg for snap                     CL3\nAF&SYSNDX DS 0H           skip label                     CL3\n      MEXIT\n      MEND\n./ ADD NAME=ZMODCB   0100-14178-14178-0013-00071-00071-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 08/27/05                                                 *\n.*********************************************************************\n.* 08/27/07 INITIAL CODING TO SUPPORT MODCB ACB OR RPL FIELD MODS\n.* 09/03/07 RPI 690  ADD OPTCD LENGTH 2 SUPPORT\n.* 09/15/07 RPI 696  CORRECT SUPPORT FOR 1 BYTE FIELD LENGHTS\n.* 09/15/07 RPI 682  ADD SUPPORT FOR 8 BYTE DDNAME,VCLRN TYPE MODS\n.* 04/19/08 RPI 833  add SETC quotes for HLASM compatibility\n.* 04/23/09 RPI 1023 jm2 MODCB generates OI and NI instead of MVI\n.*********************************************************************\n&N       ZMODCB &CB,         ACB/RPL ADDRESS OR (REG)                  X\n               &OFFSET,      OFFSET TO TARGET FIELD                    X\n               &SOURCE,      ABS VAL, RX ADDR, (REG), (S,SCON),(*,SCON)X\n               &LENGTH,      LENGTH FOR ABS VAL MODS LIKE MACRF/OPTCD  X\n               &CLEAN        MODCB CLEAN UP     jm2\n         AIF   ('&CB'(1,1) EQ '(').REGCB\n&STADDR  SETC  '&CB+&OFFSET'\n         AGO   .SOURCE\n.REGCB   ANOP\n&STADDR  SETC  '&OFFSET.&CB'\n.SOURCE  ANOP\n         AIF   ('&SOURCE'(1,1) EQ '(').CHK_SCON\n         AIF   ('&LENGTH' EQ '4').MV4\n         AIF   ('&LENGTH' EQ '1').MV1\n         AIF   ('&LENGTH' EQ '8').MV8\n         MNOTE 12,'ZMODCB INVALID LENGTH - &LENGTH'\n         MEXIT\n.MV1     ANOP\n.*        MVI   &STADDR,&SOURCE         jm2\n         AIF   (T'&CLEAN EQ 'O').MV1OI\n         NI    &STADDR,X'FF'-(&CLEAN)   jm2\n.MV1OI   ANOP\n         OI    &STADDR,&SOURCE          jm2\n         MEXIT\n.MV4     ANOP\n         AIF   ('&SOURCE'(1,1) EQ '=').MV4LIT\n         L     0,=A(&SOURCE)\n         AGO   .MV4ST\n.MV8     ANOP\n         AIF   ('&CB'(1,1) EQ '(').MV8REG\n         MVC   &CB+&OFFSET.(8),=CL8'&SOURCE'\n         MEXIT\n.MV8REG  ANOP\n         MVC   &OFFSET.(8,&CB(1)),=CL8'&SOURCE'\n         MEXIT\n.MV4LIT  ANOP\n         L     0,&SOURCE\n.MV4ST   ANOP\n         ST    0,&STADDR\n         MEXIT\n.CHK_SCON ANOP\n         AIF   ('&SOURCE'(1,3) EQ '(S,').SCON_ADDR\n         AIF   ('&SOURCE'(1,3) EQ '(*,').SCON_IADDR\n.STREG   ANOP\n         ST    &SOURCE(1),&STADDR\n         MEXIT\n.SCON_ADDR ANOP\n&ADDR    SETC  '&SOURCE'(4,K'&SOURCE-4)\n         LA    0,&ADDR\n         ST    0,&STADDR\n         MEXIT\n.SCON_IADDR ANOP\n&ADDR    SETC  '&SOURCE'(4,K'&SOURCE-4)\n         L     0,&ADDR\n         ST    0,&STADDR\n         MEND\n./ ADD NAME=ZOPEN    0100-14178-14178-0013-00135-00135-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/15/08                                                 *\n.*********************************************************************\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 11/13/05 RPI88 - correct test for DCB register parm\n.* 11/13/05 RPI96 - add additional validity checking for parms\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 04/10/06 RPI244 IGNORE OR ISSUE UNSUPPORTED ERROR, SUPPORT (REG)\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/03/07 RPI 668 check return code for each svc and exit if nz\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 09/16/07 RPI 697 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 09/16/07 RPI 682 CHANGE TO GEN DCBD REQUIRED FOR OPEN FLAG REFS\n.* 10/14/07 RPI 718 ISSUE MNOTE ERR FOR NN OR RNN WITHOUT ((REG),OPT)\n.* 04/15/08 RPI 838 CHANGE OPEN, CLOSE, READ, WRITE TO CALL Z VERSION\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 09/11/08 RPI 764 allow OPEN (reg) for input, use ZSTRMAC\n.* 04/19/09 RPI 1021 support MF=L/E\n.* 04/19/09 RPI 1023 support lower case options\n.* 05/19/09 RPI 1029 remove SPM macros for compatibility\n.* 05/28/09 RPI 1045 change to only assume register form if (..)\n.* 01/26/11 RPI 1139 remove space from SETC expression\n.*********************************************************************\n&N       ZOPEN &DCBLIST,   ((DCB,OPT),(DCB,OPT),,) OR DCB OR (REG)     X\n               &MF=I,      STD, LIST, OR EXEC                          X\n               &MODE=31,   IGNORED AS IT WORKS IN BOTH                 X\n               &TYPE=      FLAG TYPE J AS UNSUPPORTED\n         AIF   (N'&SYSLIST NE 1)\n               MNOTE 12,'UNSUPPORTED OPERANDS - &SYSLIST(2)'\n               MEXIT\n         AEND\n.*\n.* OPEN 1 OR MORE FILES DEFINED BY DCB'S WITH INPUT, OUTPUT, UPDATE\n.* OPTIONS\n.*\n         AIF   ('&TYPE' NE '')\n               MNOTE 12,'OPEN TYPE= NOT SUPPORTED'\n               MEXIT\n         AEND\n         :&NP      SETA  N'&DCBLIST\n         AIF   ('&MF' EQ 'L')\n               AIF   ('&N' NE '')\n                    :&N       DS    0F\n               AEND\n               :&I       SETA  1\n               AWHILE (&I LE &NP)\n                   :&DCB    SETC '&DCBLIST(&I)'\n                   :&OPTION SETC (UPPER '&DCBLIST(&I+1,1)')  RPI 1023\n                   AIF ('&DCB'(1,1) EQ '(') RPI 764 RPI 1045\n                       MNOTE 8,'ZOPEN REGISTER FORM NOT ALLOWED'\n                       MEXIT\n                   AEND\n                   AIF (&I+2 GE &NP)\n                       :&VL SETC 'X''80000000''+'\n                   AELSE\n                       :&VL SETC ''\n                   AEND\n                   AIF ('&OPTION' EQ '' OR '&OPTION' EQ 'INPUT')\n                       DC  A(&VL&DCB,DCBOFLGS_GM)   READ ONLY\n                   AELSEIF   ('&OPTION' EQ 'OUTPUT')\n                       DC  A(&VL&DCB,DCBOFLGS_PM)   WRITE ONLY\n                   AELSEIF   ('&OPTION' EQ 'UPDATE')\n                       DC  A(&VL&DCB,DCBOFLGS_RW)   READ AND WRITE\n                   AELSE\n                       MNOTE 12,'OPEN OPTION NOT SUPPORTED - &OPTION'\n                       MEXIT\n                   AEND\n                   :&I SETA &I+2\n               AEND\n         AELSEIF ('&MF(1)' EQ 'E')\n               AIF   ('&N' NE '')\n                    :&N       DS    0H\n               AEND\n               AIF  ('&MF(2)'(1,1) EQ '(')\n                    ZOPTLR 14,&MF(2)\n               AELSE\n                    LA     14,&MF(2)\n               AEND\n               B    ZOPEN_DO_LOOP&SYSNDX\nZOPEN_DO_UNTIL&SYSNDX DS 0H\n               LTR  1,1\n               BM   ZOPEN_DO_EXIT&SYSNDX\n               LTR  15,15\n               BNZ  ZOPEN_DO_EXIT&SYSNDX\nZOPEN_DO_LOOP&SYSNDX DS 0H\n                    L   1,0(14)\n                    L   0,4(14)\n                    SVC 19\n                    AHI 14,8\n               B    ZOPEN_DO_UNTIL&SYSNDX\nZOPEN_DO_EXIT&SYSNDX DS 0H\n         AELSEIF ('&MF'  EQ 'I')\n               AIF   ('&N' NE '')\n                    :&N       DS    0H\n               AEND\n               :&I       SETA  1\n               AWHILE (&I LE &NP)\n                   :&DCB    SETC '&DCBLIST(&I)'\n                   :&OPTION SETC UPPER('&DCBLIST(&I+1,1)')  RPI 1023\n                   AIF ('&DCB'(1,1) EQ '(') RPI 764 RPI 1045\n                       ZOPTLR 1,&DCB(1)\n                   AELSE\n                       LA     1,&DCB\n                   AEND\n                   AIF ('&OPTION' EQ '' OR '&OPTION' EQ 'INPUT')\n                       LA  0,DCBOFLGS_GM   READ ONLY\n                   AELSEIF   ('&OPTION' EQ 'OUTPUT')\n                       LA  0,DCBOFLGS_PM   WRITE ONLY\n                   AELSEIF   ('&OPTION' EQ 'UPDATE')\n                       LA  0,DCBOFLGS_RW   READ AND WRITE\n                   AELSE\n                       MNOTE 12,'OPEN OPTION NOT SUPPORTED - &OPTION'\n                       MEXIT\n                   AEND\n                   SVC   19 OPEN R0=TYPE,R1=DCB/ACB\n                   AIF    (&NP GT 2)\n                         LTR   15,15\n                         BNZ   Z390_OPEN_EXIT&SYSNDX RPI 668\n                   AEND\n                   :&I SETA &I+2\n               AEND\n               AIF   (&NP GT 2)\n                   :Z390_OPEN_EXIT&SYSNDX EQU *\n               AEND\n         AELSE\n               MNOTE 12,'OPEN MF= TYPE NOT SUPPORTED &MF'\n               MEXIT\n         AEND\n         DCBD\n         MEND\n./ ADD NAME=ZOPTLR   0100-14178-14178-0013-00030-00030-00000-Z390MAC\n         MACRO                                                          00002\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 08/22/07                                                 *\n.*********************************************************************\n.* 08/22/07 RPI 680 ADD ZOPTLR TO OPTIMIZE LR GENERATION\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 11/10/08 RPI 943 check for (reg) and upgrade to ZSTRMAC\n.*********************************************************************\n.*\n.* TEST FOR SOURCE AND TARGET MATCH TO SKIP GEN OF LR.\n.*\n.*   1. CHECK FOR LITERAL MATCH OF &P1 VS &P2 OR R&P1 VS &P2\n.*      (THIS WILL HANDLE R?? WHEN NOT DEFINED YET BY MACRO).\n.*   2. IF &P2 IS DEFINED SYMBOL THEN COMPARE &P1 WITH &P2 EQU VALUE.\n.*   3. ELSE GENERATE LR TO BE SAFE.\n.*********************************************************************\n&N       ZOPTLR &P1,&P2\n       AIF   ('&N' NE '')\n&N       DS    0H\n       AEND\n       AIF     ('&P1(1)' NE '&P2(1)'                                   X\n                AND '&P1(1)' NE 'R&P2(1)'                              X\n                AND 'R&P1(1)' NE '&P2(1)')\n         LR    &P1,&P2\n       AEND\n         MEND\n./ ADD NAME=ZREAD    0100-14178-14178-0013-00088-00088-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* MAINTENANCE\n.* 10/13/05 ADD DCBREC SUPPORT\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 10/20/05 RPI38 - check for register conflicts\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 01/11/06 RPI170 ALLOW 'S' AS FIFTH PARM\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/15/08 RPI 838 CHANGE OPEN, CLOSE, READ, WRITE TO CALL Z VERSION\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       ZREAD &DECB,                                                  X\n               &TYPE,                                                  X\n               &DCB,                                                   X\n               &AREA,                                                  X\n               &LENGTH,                                                X\n               &MF=I        NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR3\n         AIF   (N'&SYSLIST LT 5).NPOK\n         AIF   (N'&SYSLIST EQ 5 AND '&SYSLIST(5)' EQ '''S''').NPOK\n         MNOTE 12,'UNSUPPORTED OPERAND - &SYSLIST(5)'\n.NPOK    ANOP\n.*\n.*       SEQUENTIALLY READ BLOCK AT CURRENT FILE POSITION\n.*\n.*       USE CHECK TO VERIFY COMPLETION AND TAKE EODAD/SYNAD EXITS\n.*       USE POINT TO CHANGE CURRENT FILE POSITION\n.*\n.*       DECB -  CREATED INLINE FOR REFERENCE BY CHECK (SEE DECBD)\n.*       TYPE -  SF FOR SEQUENTIAL FORWARD, SB FOR SEQUENTIAL BACKWARD\n.*       DCB  -  DATA CONTROL BLOCK OPENED WITH R OR RW MACRF\n.*       AREA -  AREA TO RECEIVE BLOCK (MUST BE >= DCBBLKSI)\n.*\n         AIF   ('&DECB'(1,1) EQ '(').DECBREG\n         CNOP  0,4\n         BAL   1,&DECB+DECBL\n&DECB    DC    F'0' DECBECB  (X'40' OK, X'41' I/O ERROR, X'42' EOF)\n         DC    H'0' DECBTYPE\n         DC    AL2(DECBL)\n         DC    A(0) DECBDCBA OPEN DCB WITH MACRF R OR RW\n         DC    A(0) DECBAREA AREA FOR BLOCK MUST BE >= DCBBLKSI\n         ORG   &DECB+DECBL\n         AGO   .CHKDCB\n.DECBREG ANOP\n         ZOPTLR 1,&DECB(1)\n.CHKDCB  ANOP\n         AIF   ('&DCB' EQ '').CHKAREA\n         AIF   ('&DCB'(1,1) EQ '(').DCBREG\n         LA    0,&DCB\n         ST    0,DECBDCBA-IHADECB(1)\n         AGO   .CHKAREA\n.DCBREG  ANOP\n         AIF   ('&DCB(1)' EQ 1 OR '&DCB(1)' EQ 'R1').ERR1\n         ST    &DCB(1),DECBDCBA-IHADECB(1)\n.CHKAREA ANOP\n         AIF   ('&AREA' EQ '').AREADEF\n         AIF   ('&AREA'(1,1) EQ '(').AREAREG\n         LA    0,&AREA\n         ST    0,DECBAREA-IHADECB(1)\n         AGO   .SVC\n.AREADEF ANOP\n         L     15,DECBDCBA-IHADECB(1)\n         MVC   DECBAREA-IHADECB(4,1),DCBREC-IHADCB(15)\n         AGO   .SVC\n.AREAREG ANOP\n         AIF   ('&AREA(1)' EQ 1 OR '&AREA(1)' EQ 'R1').ERR2\n         ST    &AREA(1),DECBAREA-IHADECB(1)\n.SVC     ANOP\n         SVC   153 READ R0=AREA, R1=DECB\n         MEXIT\n.ERR1    MNOTE 12,'READ INVALID DCB REGISTER - &DCB(1)'\n         MEXIT\n.ERR2    MNOTE 12,'READ INVALID AREA REGISTER - &AREA(1)'\n         MEXIT\n.ERR3    MNOTE 12,'READ MF= NOT SUPPORTED'\n         MEXIT\n         MEND\n./ ADD NAME=ZRETURN  0100-14178-14178-0013-00042-00042-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* 10/20/05 RPI  27 - issue error for any undefined operands\n.* 06/08/07 RPI 639 - add RC=(reg) support\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 11/10/08 RPI 942 correct to support RC=(15) and upgrade to ZSTRMAC\n.* 11/17/08 RPI 953 renamed to ZRETURN to share with other maclibs\n.*********************************************************************\n&N      ZRETURN &REGS,                                                 X\n               &SETFLAG,                                               X\n               &MF=I,      NOT SUPPORTED                               X\n               &RC=\n       AIF   ('&N' NE '')\n&N       DS    0H\n       AEND\n       AIF     ('&MF' NE 'I')\n               MNOTE 12,'RETURN MF= NOT SUPPORTED'\n               MEXIT\n       AEND\n       AIF     (N'&SYSLIST GT 2)\n               MNOTE 12,'RETURN UNSUPPORTED OPERANDS - &SYSLIST(3)'\n               MEXIT\n       AEND\n         RESTORE &REGS,RC=&RC\n       AIF   ('&SETFLAG' EQ 'T')\n         OI    15(13),1\n       AEND\n       AIF   ('&RC' NE '')\n             AIF   ('&RC'(1,1) NE '(')\n         LA    15,&RC\n             AEND\n       AEND\n         BR    14\n         MEND\n./ ADD NAME=ZSHOWCB  0100-14178-14178-0013-00059-00059-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 08/27/05                                                 *\n.*********************************************************************\n.* 08/27/07 INITIAL CODING TO SUPPORT MODCB ACB OR RPL FIELD MODS\n.* 09/14/07 RPI 672 CORRECT TARGET > AREA\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       ZSHOWCB &CB,        ACB/RPL ADDRESS OR (REG)                  X\n               &CBOFF,       OFFSET TO ACB/RPL FIELD                   X\n               &AREA,        RX ADDR, (REG), (S,SCON),(*,SCON)         X\n               &AREAOFF,     OFFSET TO AREA FIELD                      X\n               &LAREA        LENGTH OF AREA FIELD TO STORE\n         AIF   ('&CB'(1,1) EQ '(').REGCB\n&SADDR   SETC  '&CB+&CBOFF'\n         AGO   .AREA\n.REGCB   ANOP\n&SADDR   SETC  '&CBOFF.&CB'\n.AREA    ANOP\n         AIF   ('&AREA'(1,1) EQ '(').CHK_SCON\n         AIF   ('&LAREA' EQ '1').MOV1\n         AIF   ('&LAREA' EQ '4').MOV4\n         AIF   ('&LAREA' EQ '8').MOV8\n         MNOTE 12,'ZSHOWCB INVALID AREA FIELD LENGTH - &LAREA'\n         MEXIT\n.MOV1    ANOP\n         IC    0,&SADDR\n         STC   0,&AREA+&AREAOFF\n         MEXIT\n.MOV4    ANOP\n         L     0,&SADDR\n         ST    0,&AREA+&AREAOFF\n         MEXIT\n.MOV8    ANOP\n         LG    0,&SADDR\n         STG   0,&AREA+&AREAOFF\n         MEXIT\n.CHK_SCON ANOP\n         AIF   ('&AREA'(1,3) EQ '(S,').SCON_ADDR\n         AIF   ('&AREA'(1,3) EQ '(*,').SCON_IADDR\n.LREG   ANOP\n         L     &AREA(1),&SADDR\n         MEXIT\n.SCON_ADDR ANOP\n&ADDR    SETC  '&AREA'(4,K'&AREA-4)\n         L     0,&SADDR\n         ST    0,&ADDR+&AREAOFF\n         MEXIT\n.SCON_IADDR ANOP\n&ADDR    SETC  '&AREA'(4,K'&AREA-4)\n.LST     ANOP\n         L     0,&SADDR\n         L     1,&ADDR\n         ST    0,&AREAOFF.(1)\n         MEND\n./ ADD NAME=ZSORT    0100-14178-14178-0013-00210-00210-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 11/07/09                                                *\n.*********************************************************************\n.* 11/07/09 RPI 865 ADD INTERNAL SORT CALLED ZSORT USING SVC X'A1'\n.* 03/14/10 RPI 1110 CHANGE MEMORY=0 TO ALLOC LARGEST BLOCK AVAIL.\n.* 05/24/10 RPI 1116 CORRECT TYPE AND ORDER FIELDS TO 2 BYTES\n.* 07/26/10 RPI 865  CORRECT OFFSET TO KEY PARMS\n.* 07/26/10 RPI 865  CORRECT EXPANDED KEY TYPES 1-7\n.*********************************************************************\n.* ISORT - INITIALIZE FOR INTERNAL SORT\n.* PUT   - PUT UNOSRTED RECORD TO INTERNAL SORT\n.* GET   - GET SORTED   RECORD FORM INTERNAL SORT\n.*\n.* ISORT REQUIRE FOLLOWING 3 KEYWORD PARAMETERS OR MF > PARMLIST:\n.*   LRECL=    - FIXED RECORD LENGTH (MAY BE MAX VARIABLE REC LENGTH)\n.*   MEMORY=   - SIZE OF SORT TABLE AVAILABLE FOR RECORDS\n.*   FIELDS=   - (OFFSET,LENGTH,TYPE,A/D,,,,,)\n.*               WITH FOLLOWING 4 PARAMETERS FOR EACH KEY\n.*               A.  OFFSET - BYTES FROM START OF RECORD + 1\n.*                   1.  +1 IS FOR COMPATIBILITY WITH IDCAMS CMDS.\n.*                   2.  GENERATED OFFSET PASSED TO SORT IS +0\n.*                   3.  IF REGISTER (N) USED IT CONTAINS +0 VALUE\n.*                   4.  OFFSET DOES NOT INCLUDE VAR PREFIX.\n.*               B.  LENGTH - LENGHT OF KEY IN BYTES\n.*               C.  TYPE OF KEY:\n.*                   1.  AC - ASCII CHARACTERS\n.*                   2.  BI - UNSIGNED BINARY\n.*                   3.  CH - EBCDIC CHARACTERS\n.*                   4.  FI - SIGNED BINARY (F, H, Q - 2, 4, 8, 16)\n.*                   5.  FL - FLOATING POINT (HFP,BFP,DFP 4,8,16)\n.*                   6.  PD - PACKED DECIMAL (1-16)\n.*                   7.  ZD - ZONED DECIMAL\n.*               D.  A/D - ASCENDING OR DESCENDING SEQUENCE\n.* THE GENERATED PARMLIST OR PARMLIST PASSED VIA MF=(E,addr) HAS\n.* THE FOLLOWING FORMAT:\n.*   OFFSET LENGTH\n.*        0    4   RECORD LENGTH (MAY BE MAX VAR LENGTH)\n.*        4    4   MAXIMUM MEMORY TO BE USED BY SORT\n.*        8    4   OFFSET TO KEY FIELD N\n.*       12    4   LENGTH OF KEY FIELD N\n.*       16    2   TYPE OF KEY FIELD N (1-7 SEE ABOVE) VL BIT IF LAST\n.*       18    2   ASCENDING=1 OR DESCENDING=0 FIELD N\n.*\n.* PUT AND GET REQUIRE FOLLOWING KEYWORD PARAMETER:\n.*   REC= - ADDRESS OF RECORD AREA FOR INPUT OR OUTPUT\n.*\n.* RETURN CODES\n.*   0  - OPERATION SUCCESSFUL\n.*   4  - END OF FILE ON GET\n.*  16  - SEE ERROR MESSAGE IF ZSORT ABORTS\n.*\n.* NOTES:\n.*   1.  WOKR FILES SORTWK01 AND SORTWK02 ONLY USED IF MERGE FOR MORE\n.*       THAN 2 SORTED STRINGS REQUIRED.  WORK FILES ARE DYNAMICALLY\n.*       ALLOCATED TO SORTWK01.TMP AND SORTWK02.TMP IF NOT DEFINED.\n.*********************************************************************\n&NAME    ZSORT &OP,               ISORT, PUT, GET            ALL       X\n               &FIELDS=,          (OFFSET,LENGTH,TYPE,A/D,,) IS/FS     X\n               &LRECL=,           FIXED RECORD LENGTH        IS/FS     X\n               &MEMORY=0,         MEMORY AVAILABLE TO ZSORT  IS/FS     X\n               &REC=,             RECORD ADDRESS             PUT, GET  X\n               &MF=               OPTIONAL LIST FOR EXEC ISORT/FSORT\n&NAME    DS    0H\n         AIF       ('&OP' EQ 'ISORT')\n               ACALL ISORT\n         AELSEIF   ('&OP' EQ 'PUT')\n               ACALL PUT\n         AELSEIF   ('&OP' EQ 'GET')\n               ACALL GET\n         AELSE\n               MNOTE 12,'ZSORT INVALID OP (ISORT,FSORT,PUT, OR GET)'\n         AEND\n         MEXIT\n*\n* INTERNAL SORT\n*\n         AENTRY ISORT\n         CNOP  0,4\n         LA    0,1   ISORT\n         ACALL INIT_PARMS\n         ACALL SVC\n         AEND\n*\n* PUT RECORD FOR INTERNAL SORT\n*\n         AENTRY PUT\n         ACALL SET_REC\n         LA    0,2   PUT\n         ACALL SVC\n         AEND\n*\n* GET SORTED RECORD FROM INTERAL SORT AND RETURN ADDR IN R1\n*\n         AENTRY GET\n         ACALL  SET_REC\n         LA    0,3   GET\n         ACALL SVC\n         AEND\n*\n*\n*\n         AENTRY SET_REC\n       AIF   ('&MF' NE '')\n             MNOTE 12,'ZSORT PUT/GET MF= NOT SUPPORED'\n             MEXIT\n       AEND\n       AIF   ('&REC' EQ '')\n             MNOTE 12,'ZSORT PUT/GET MISSING REC='\n             MEXIT\n       AEND\n       AIF   ('&REC'(1,1) EQ '(')\n         LR    1,&REC(1)\n       AELSE\n         LA    1,&REC\n       AEND\n       AEND\n*\n* GEN PARMS FOR ISORT\n*\n         AENTRY INIT_PARMS\n         AIF   ('&MF' NE '')\n               AIF ('&MF(2)'(1,1) EQ '(')\n         LR    R1,&MF(2)\n               AELSE\n         LA    R1,&MF\n               AEND\n               AEXIT AENTRY\n         AEND\n&NF      SETA  N'&FIELDS/4\n         BAS   1,*+4+8+(8+4)*&NF\n         AIF   ('&LRECL' EQ '')\n               MNOTE 8,'ZSORT - LRECL NOT DEFINED'\n               MEXIT\n         AEND\n         DC    A(&LRECL) ZSORT LRECL\n         AIF   ('&MEMORY' EQ '')\n               MNOTE 8,'ZSORT - MEMORY NOT DEFINED'\n               MEXIT\n         AEND\n         DC    A(&MEMORY) ZSORT MEMORY AVAILABLE\n         AIF   ('&FIELDS' EQ '')\n               MNOTE 8,'ZSORT - FIELDS=(OFF,LNG,TYPE,A/D) NOT DEFINED'\n               MEXIT\n         AEND\n         :&I SETA 1\n         AWHILE (&I LE N'&FIELDS)\n         DC    A(&FIELDS(&I)-1) ZSORT KEY OFFSET\n         DC    A(&FIELDS(&I+1)) ZSORT KEY LENGTH\n               AIF ('&FIELDS(&I+2)' EQ 'AC')\n         DC    AL2(1) ZSORT KEY TYPE AC ASCII CHARACTER\n               AELSEIF ('&FIELDS(&I+2)' EQ 'BI')\n         DC    AL2(2) ZSORT KEY TYPE BI UNSIGNED BINARY\n               AELSEIF ('&FIELDS(&I+2)' EQ 'CH')\n         DC    AL2(3) ZSORT KEY TYPE CH EBCDIC CHARACTER\n               AELSEIF ('&FIELDS(&I+2)' EQ 'FI')\n         DC    AL2(4) ZSORT KEY TYPE FI SIGNED BINARY (FHQ)\n               AELSEIF ('&FIELDS(&I+2)' EQ 'FL')\n         DC    AL2(5) ZSORT KEY TYPE FL FLOATING POINT\n               AELSEIF ('&FIELDS(&I+2)' EQ 'PD')\n         DC    AL2(6) ZSORT KEY TYPE PD PACKED DECIMAL\n               AELSEIF ('&FIELDS(&I+2)' EQ 'ZD')\n         DC    AL2(7) ZSORT KEY TYPE ZD ZONED DECIMAL\n               AELSE\n                   MNOTE 8,'ZSORT KEY TYPE UNKNOWN - &FIELD(&I+2)'\n                   MEXIT\n               AEND\n               AIF ('&FIELDS(&I+3)' EQ 'A')\n         DC    AL2(1) ZSORT KEY ASCENDING\n               AELSEIF ('&FIELDS(&I+3)'(1,1) EQ 'D')\n         DC    AL2(0) ZSORT KEY DESCENDING\n               AELSE\n                   MNOTE 8,'ZSORT KEY ORDER NOT A/D - &FIELD(&I+3)'\n                   MEXIT\n               AEND\n               :&I SETA &I+4\n         AEND\n         ORG   *-4\n         DC    X'80' OVERLAY VL BIT FOR END OF LIST\n         ORG\n       AIF   ('&LRECL'(1,1) EQ '(')\n         ST    &LRECL(1),0(1)\n       AEND\n       AIF   ('&MEMORY'(1,1) EQ '(')\n         ST    &MEMORY(1),4(1)\n       AEND\n         :&I SETA 1\n         :&OFFSET SETA 8         RPI 865\n         AWHILE (&I LE N'&FIELDS)\n               AIF ('&FIELDS(&I)'(1,1) EQ '(')\n         ST    &FIELDS(&I,1),&OFFSET.(1)       STORE AIX OFFSET REG\n               AEND\n               AIF ('&FIELDS(&I+1)'(1,1) EQ '(')\n         ST    &FIELDS(&I+1,1),&OFFSET+4(1)   STORE AIX KEY LEN REG\n               AEND\n               :&OFFSET SETA &OFFSET+12\n               :&I      SETA &I+4\n         AEND\n         AEND\n*\n* ISSUE ZSORT SVC\n*\n         AENTRY SVC\n         SVC   X'A1' ZSORT R0=1-ISORT,2-PUT,3=GET R15= 4 AT EOF\n         AEND\n         MEND\n./ ADD NAME=ZSTREQU  0100-14178-14178-0013-00035-00035-00000-Z390MAC\n         MACRO\n         ZSTREQU\n         GBLB  &ZSTR_EQU\n         AIF   (&ZSTR_EQU)\n               MEXIT\n         AEND\n         :&ZSTR_EQU SETB 1\n         PUSH  PRINT,NOPRINT\n         PRINT OFF,NOPRINT\n.********************************************************************\n.* EQUBC - DEFINE COMMON EQU SYMBOLS FOR USE IN STRUCTURED MACROS\n.********************************************************************\n.* 09/27/08 RPI 909 CHANGED FROM CPY TO MAC CALLED BY ZSTRGBL.CPY\n.********************************************************************\nH        EQU   2\nL        EQU   4\nE        EQU   8\nNH       EQU   13\nNL       EQU   11\nNE       EQU   7\nO        EQU   1\nP        EQU   2\nM        EQU   4\nZ        EQU   8\nNP       EQU   13\nNM       EQU   11\nNZ       EQU   7\nNO       EQU   14\nEQ       EQU   8\nGT       EQU   2\nLT       EQU   4\nGE       EQU   11\nLE       EQU   13\n         POP   PRINT,NOPRINT\n         MEND\n./ ADD NAME=ZTESTCB  0100-14178-14178-0013-00050-00050-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 08/27/05                                                 *\n.*********************************************************************\n.* 08/27/07 INITIAL CODING TO SUPPORT MODCB ACB OR RPL FIELD TESTS\n.* 09/01/07 RPI 688 USE L,CL VS CLC TO FORCE 4 BYTE RECLEN TEST\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       ZTESTCB &CB,        ACB/RPL ADDRESS OR (REG)                  X\n               &OFFSET,      OFFSET TO TARGET FIELD                    X\n               &SOURCE,      ABS VAL, RX ADDR, (REG), (S,SCON),(*,SCON)X\n               &LSOURCE      LENGTH OF SOURCE\n         AIF   ('&CB'(1,1) EQ '(').REGCB\n&TADDR   SETC  '&CB+&OFFSET'\n         AGO   .SOURCE\n.REGCB   ANOP\n&TADDR   SETC  '&OFFSET.&CB'\n.SOURCE  ANOP\n         AIF   ('&SOURCE'(1,1) EQ '(').CHK_SCON\n         AIF   ('&LSOURCE' EQ '1').CLI\n         AIF   ('&LSOURCE' EQ '4').CL\n         MNOTE 12,'ZTESTCB INVALID TESTCB SOURCE LENGTH - &LSOURCE'\n         MEXIT\n.CLI     ANOP\n         CLI   &TADDR,&SOURCE\n         MEXIT\n.CL      ANOP\n         L     0,&TADDR\n         CL    0,=A(&SOURCE)\n         MEXIT\n.CHK_SCON ANOP\n         AIF   ('&SOURCE'(1,3) EQ '(S,').SCON_ADDR\n         AIF   ('&SOURCE'(1,3) EQ '(*,').SCON_IADDR\n.CLREG   ANOP\n         CL    &SOURCE(1),&TADDR\n         MEXIT\n.SCON_ADDR ANOP\n&ADDR    SETC  '&SOURCE'(4,K'&SOURCE-4)\n         LA    0,&ADDR\n         CL    0,&TADDR\n         MEXIT\n.SCON_IADDR ANOP\n&ADDR    SETC  '&SOURCE'(4,K'&SOURCE-4)\n         L     0,&ADDR\n         CL    0,&STADDR\n         MEND\n./ ADD NAME=ZWRITE   0100-14178-14178-0013-00088-00088-00000-Z390MAC\n         MACRO\n.*********************************************************************\n.* Copyright 2005 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 09/30/05                                                 *\n.*********************************************************************\n.* MAINTENANCE\n.* 10/13/05 ADD DCBREC SUPPORT\n.* 10/20/05 RPI27 - issue error for any undefined operands\n.* 10/20/05 RPI38 - check for register conflicts\n.* 01/09/06 RPI163 SKIP LR FOR SAME REGISTER\n.* 01/11/06 RPI170 ALLOW 'S' AS FIFTH PARM\n.* 04/25/06 RPI290 ALWAYS DEFINE LABEL IF ANY, CHECK MF=\n.* 06/14/07 RPI 641 DEFAULT MF=I\n.* 08/21/07 RPI 670 CORRECT REG OPTIMIZATION TO HANDLE ANY REG SYMBOL\n.* 04/15/08 RPI 838 CHANGE OPEN, CLOSE, READ, WRITE TO CALL Z VERSION\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.*********************************************************************\n&N       ZWRITE &DECB,                                                 X\n               &TYPE,                                                  X\n               &DCB,                                                   X\n               &AREA,                                                  X\n               &LENGTH,                                                X\n               &MF=I       NOT SUPPORTED\n         AIF   ('&N' EQ '').SKIPDS\n&N       DS    0H\n.SKIPDS  ANOP\n         AIF   ('&MF' NE 'I').ERR3\n         AIF   (N'&SYSLIST LT 5).NPOK\n         AIF   (N'&SYSLIST EQ 5 AND '&SYSLIST(5)' EQ '''S''').NPOK\n         MNOTE 12,'WRITE UNSUPPORTED OPERANDS - &SYSLIST(5)'\n.NPOK    ANOP\n.*\n.*       SEQUENTIALLY WRITE BLOCK AT CURRENT FILE POSITION\n.*\n.*       USE CHECK TO VERIFY COMPLETION AND TAKE EODAD/SYNAD EXITS\n.*       USE POINT TO CHANGE CURRENT FILE POSITION\n.*\n.*       DECB -  CREATED INLINE FOR REFERENCE BY CHECK (SEE DECBD)\n.*       TYPE -  SF FOR SEQUENTIAL FORWARD, SB FOR SEQUENTIAL BACKWARD\n.*       DCB  -  DATA CONTROL BLOCK OPENED WITH RW MACRF\n.*       AREA -  AREA TO RECEIVE BLOCK (MUST BE >= DCBBLKSI)\n.*\n         AIF   ('&DECB'(1,1) EQ '(').DECBREG\n         CNOP  0,4\n         BAL   1,&DECB+DECBL\n&DECB    DC    F'0' DECBECB  (X'40' OK, X'41' I/O ERROR, X'42' EOF)\n         DC    H'0' DECBTYPE\n         DC    AL2(DECBL)\n         DC    A(0) DECBDCBA OPEN DCB WITH MACRF R OR RW\n         DC    A(0) DECBAREA AREA FOR BLOCK MUST BE >= DCBBLKSI\n         ORG   &DECB+DECBL\n         AGO   .CHKDCB\n.DECBREG ANOP\n         ZOPTLR 1,&DECB(1)\n.CHKDCB  ANOP\n         AIF   ('&DCB' EQ '').CHKAREA\n         AIF   ('&DCB'(1,1) EQ '(').DCBREG\n         LA    0,&DCB\n         ST    0,DECBDCBA-IHADECB(1)\n         AGO   .CHKAREA\n.DCBREG  ANOP\n         AIF   ('&DCB(1)' EQ 1 OR '&DCB(1)' EQ 'R1').ERR1\n         ST    &DCB(1),DECBDCBA-IHADECB(1)\n.CHKAREA ANOP\n         AIF   ('&AREA' EQ '').AREADEF\n         AIF   ('&AREA'(1,1) EQ '(').AREAREG\n         LA    0,&AREA\n         ST    0,DECBAREA-IHADECB(1)\n         AGO   .SVC\n.AREADEF ANOP\n         L     15,DECBDCBA-IHADECB(1)\n         MVC   DECBAREA-IHADECB(4,1),DCBREC-IHADCB(15)\n         AGO   .SVC\n.AREAREG ANOP\n         AIF   ('&AREA(1)' EQ 1 OR '&AREA(1)' EQ 'R1').ERR2\n         ST    &AREA(1),DECBAREA-IHADECB(1)\n.SVC     ANOP\n         SVC   154 WRITE\n         MEXIT\n.ERR1    MNOTE 12,'WRITE INVALID DCB REGISTER - &DCB(1)'\n         MEXIT\n.ERR2    MNOTE 12,'WRITE INVALID AREA REGISTER - &AREA(1)'\n         MEXIT\n.ERR3    MNOTE 12,'WRITE MF= NOT SUPPORTED'\n         MEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "MACSCPY": {"ttr": 4614, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x14\\x17\\x8f\\x01\\x14\\x17\\x8f\\x00!\\x00\\x86\\x00\\x86\\x00\\x00\\xc8\\xc9\\xc7\\xc7\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-06-27T00:00:00", "modifydate": "2014-06-27T00:21:00", "lines": 134, "newlines": 134, "modlines": 0, "user": "HIGGINS"}, "text": "./ ADD NAME=ASMMSP   0100-14178-14178-0020-00001-00001-00000-MACSCPY\n         COPY ZSTRMAC  Z390 STRUCTURED PROGRAMMING MACROS\n./ ADD NAME=DEFLMOD  0100-14178-14178-0020-00001-00001-00000-MACSCPY\n&LMOD SETA 1\n./ ADD NAME=ZDEFINE  0100-14178-14178-0020-00058-00058-00000-MACSCPY\n.*********************************************************************\n.* Copyright 2007 Automated Software Tools Corporation               *\n.* This source code is part of z390 assembler/emulator package       *\n.* The z390 package is distributed under GNU general public license  *\n.* Author - Don Higgins                                              *\n.* Date   - 04/19/07                                                 *\n.*********************************************************************\n.* 09/02/07 RPI 681 DEFINE GLOBALS FOR DEFINE AND ZDEFINE MACROS\n.* 09/23/07 RPI 704 ADD CONTROL INTERVAL SIZE FOR LINEAR SUPPORT\n.*********************************************************************\n.*\n.* DEFINE GLOBAL DATA FOR Z390 VSAM CATALOG DEFINITION TABLE (VCDT)\n.*\n         GBLC  &CATALOG          CATALOG NAME\n         GBLB  &ERROR            SET IF ANY DEFINE ERRORS\n.*\n.* CLUSTER GLOBAL DATA\n.*\n         GBLA  &CLR_TOT          TOTAL CLR BASE CLUSTERS DEFINED\n         GBLC  &CLR_NAME(100)    NAMES OF BASE CLUSTERS\n         GBLC  &CLR_TYPE(100)    TYPE ESDS, RRDS, KSDS, OR LDS\n         GBLA  &CLR_CI(100)      OPTIONAL CI SIZE (DEFAULT 0)\n         GBLB  &CLR_VREC(100)    VARIABLE LENGTH RECORDS (ELSE FIXED)\n         GBLB  &CLR_REUSE(100)   ERASE ALL DATA FOR REUSE AT OPEN\n         GBLB  &CLR_KSDS(100)    KSDS KEY SEQUENCED\n         GBLB  &CLR_RRDS(100)    RRDS RELATIVE RECORD\n         GBLB  &CLR_ESDS(100)    ESDS ENTRY SEQUENCED\n         GBLB  &CLR_LDS(100)     LDS  LINEAR\n         GBLA  &CLR_LAVG(100)    AVERAGE RECORD LENGTH\n         GBLA  &CLR_LMAX(100)    MAX OR FIXED RECORD LENGTH\n         GBLA  &CLR_KLEN(100)    KSDS PRIMARY KEY LENGTH\n         GBLA  &CLR_KOFF(100)    KSDS PRIMARY KEY OFFSET\n         GBLC  &CLR_VES(100)     OPTIONAL VES DSNAME DEFAULT NAME.VES\n         GBLC  &CLR_VX0(100)     OPTIONAL VX0 DSNAME DEFAULT NAME.VX0\n         GBLA  &CLR_AIX_TOT(100) TOTAL AIX UPGRADES FOR THIS CLUSTER\n.*\n.* AIX GLOBAL DATA\n.*\n         GBLA  &AIX_TOT          TOTAL AIX INDEXES DEFINED\n         GBLC  &AIX_NAME(100)    NAME OF KSDS ALTERNATE INDEX\n         GBLC  &AIX_RELATE(100)  NAME OF RELATED BASE CLUSTER\n         GBLB  &AIX_REUSE(100)   ERASE ASLL DATA FOR AIX AT OPEN\n         GBLB  &AIX_UNIQUEKEY(100) INFORCE UNIQUE AIX KEYS\n         GBLB  &AIX_UPGRADE(100) UPDATE AIX ON BASE CHANGES\n         GBLA  &AIX_KLEN(100)    AIX KEY LENGTH IN RELATED BASE CLUSTER\n         GBLA  &AIX_KOFF(100)    AIX KEY OFFSET IN RELATED BASE CLUSTER\n         GBLC  &AIX_VXN(100)     OPTIONAL VXN DSNAME DEFAULT NAME.VXN\n.*\n.* PATH GLOBAL DATA\n.*\n         GBLA  &PTH_TOT          TOTAL PATHS DEFINED\n         GBLC  &PTH_NAME(100)    NAME OF ALTERNATE PATH\n         GBLC  &PTH_ENTRY(100)   NAME OF AIX OR BASE CLUSTER\n         GBLB  &PTH_AIXP(100)    USE AIX PATH ENTRY VS PRIMARY KEY\n         GBLB  &PTH_AIXU(100)    UPDATE AIX'S ON BASE CHANGES\n.*\n.* END OF ZDEFINE.CPY\n.*\n./ ADD NAME=ZSTRGBL  0100-14178-14178-0020-00048-00048-00000-MACSCPY\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  SHARED GLOBAL VARIABLES FOR ZSTRMAC SPMS\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.* 01/30/10 RPI 1139 NOALLOW REQUIRES SDT FOR GBL ARRAYS\n.********************************************************************\n.*\n.*  DEFINE SHARED CONDTION CODES FOR USE IN SPM OPERANDS\n.*\n         ZSTREQU\n.*\n.*  SHARED LEVEL CONTROL FOR IF, DO, SELECT, AND CASENTRY\n.*\n         GBLA &ZSTR_LVL      CURRENT LEVEL OF NESTING\n         GBLA &ZSTR_MAX_LVL  MAX LEVEL OF NESTING\n&ZSTR_MAX_LVL SETA 100\n         GBLC &ZSTR_LVL_TYPE(100) IF,DO,SELECT,CASENTRY\n         GBLA &ZSTR_LVL_TCNT(100) TYPE  COUNTER\n         GBLA &ZSTR_LVL_BCNT(100) BLOCK COUNTER\n         GBLB &ZSTR_LVL_ELSE(100) ELSE BLOCK DEFINED\n         GBLB &ZSTR_LVL_TEND(100) END LABEL REQUESTED\n.*\n.*  IF, ELSEIF, ELSE, ENDIF\n.*\n         GBLA  &ZSTR_AIF_CNT                AIF COUNTER\n.*\n.*  DO, ENDDO\n.*\n         GBLA  &ZSTR_DO_CNT\n.*\n.*  SELECT, WHEN, OTHRWISE, ENDSEL\n.*\n         GBLA  &ZSTR_SEL_CNT             SELECT COUNTER\n         GBLC  &ZSTR_SEL_OP(100)   SELECT OPCODE ('' IF NONE)\n         GBLC  &ZSTR_SEL_FLD(100)  SELECT FIELD\n         GBLC  &ZSTR_SEL_CMP(100)  SELECT COMPARE TYPE\n.*\n.*  CASENTRY, CASE, ENDCASE\n.*\n         GBLA &ZSTR_CASE_CNT                 CASENTRY COUNTER\n         GBLA &ZSTR_CASE_LAST_INDEX          LAST CASE INDEX VALUE\n         GBLC &ZSTR_CASE_REG(100)  REG WITH INDEX 1-N\n         GBLA &ZSTR_CASE_MAX(100)  MAX CASE INDEX 1-N VALUE\n.*\n.*  END OF ZSTRGBL.CPY\n.*\n./ ADD NAME=ZSTRMAC  0100-14178-14178-0020-00021-00021-00000-MACSCPY\n.********************************************************************\n.* ZSTRMAC - Z390 STRUCTRUED PROGRAMMING MACROS\n.********************************************************************\n.* 05/16/06 DSH RPI 316 UPDATED FOR COMPATIBILITY\n.* 09/27/08 DSH RPI 909 UPDATED USING SPE STRUCTURED MACRO CODE\n.********************************************************************\n.* ORIGINAL MACROS WRITTEN BY DON HIGGINS IN 1974 AT FLORIDA POWER\n.* SEE ACM SIGPLAN ARTICLE PUBLISHED IN FEBRUARY 1975\n.* ORIGINAL MACROS CONTRIBUTED TO SHARE SPLA LIBRARY IN LATE 1970'S\n.* ORIGINAL MACROS RETRIEVED FROM CBT OVERFLOW TAPE 178:\n.*   http://www.cbttape.org/covdowns.htm\n.* THE ZSTRMAC MACROS HAVE BEEN UPDATED TO BE A COMPATIBLE\n.* SUBSET OF IBM HLASM TOOLKIT MACROS BASED ON SHARE PRESENTATION\n.* VISIT FOLLOWING SITE FOR LATEST DOCUMENTATION AND LINKS:\n.*   www.z390.org/z390_STRMAC_Structured_Macro_Support.mac\n.********************************************************************\n.* THE ZSTRMAC SPE SPM MACROS ARE IN z390\\mac\n.* THE HLASM COMPATIBLE TRANSLATED VERSIONS ARE IN z390\\mac\\spm\n.* THE COMMAND SPMTRAN.BAT CAN BE USED TO RETRANSLATE THEM.\n.* SEE rt\\test\\TESTSPM1.MLC REGRESSION TEST\n.********************************************************************\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SPLAFILE": {"ttr": 4617, "alias": false, "halfwords": 40, "notes": 0, "parms": "b'\\x01\\x00 \\x00\\x01\\x14\\x17\\x8f\\x01\\x14\\x17\\x8f\\x17R\\xff\\xff\\xff\\xff\\x00\\x00\\xd6\\xe5\\xc6\\xd3\\xf1\\xf7\\xf8@\\x00\\x01\\x14;\\x00\\x00\\xff\\xff\\x00\\x00\\x00\\x00'", "ispf": {"version": "01.00", "flags": 32, "createdate": "2014-06-27T00:00:00", "modifydate": "2014-06-27T17:52:00", "lines": 65535, "newlines": 65535, "modlines": 0, "user": "OVFL178"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "SPM": {"ttr": 33537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x14\\x17\\x8f\\x01\\x14\\x17\\x8f\\x00\\x03\\x03/\\x03/\\x00\\x00\\xc8\\xc9\\xc7\\xc7\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-06-27T00:00:00", "modifydate": "2014-06-27T00:03:00", "lines": 815, "newlines": 815, "modlines": 0, "user": "HIGGINS"}, "text": "./ ADD NAME=CASE     0100-14178-14178-0002-00044-00044-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         CASE  &VALUE\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ 0)\n           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1\n               MNOTE 8,'CASE - MISSING CASENTRY'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n.*       AIF   (&ZSTR_LVL_TYPE(&ZSTR_LVL) NE 'CASENTRY')\n           AIF   (NOT(&ZSTR_LVL_TYPE(&ZSTR_LVL) NE 'CASENTRY')).AIF_2_1\n               MNOTE 8,'CASE - MISSING CASENTRY'\n               MEXIT\n.*       AEND\n.AIF_2_1   ANOP\n.*       AIF   (T'&VALUE NE 'N')\n           AIF   (NOT(T'&VALUE NE 'N')).AIF_3_1\n               MNOTE 8,'CASE - INVALID VALUE 0-N'\n.*       AEND\n.AIF_3_1   ANOP\n.*       AIF   (&VALUE GT &ZSTR_CASE_MAX(&ZSTR_LVL))\n           AIF   (NOT(&VALUE GT &ZSTR_CASE_MAX(&ZSTR_LVL))).AIF_4_1\n&ZSTR_CASE_MAX(&ZSTR_LVL) SETA &VALUE\n.*       AEND\n.AIF_4_1   ANOP\n.*       AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)\n           AIF   (NOT(&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)).AIF_5_1\n         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n.*       AEND\n.AIF_5_1   ANOP\n&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&VALUE DS 0H\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_L LOCTR\n         ORG   #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T+4*&VALUE\n         DC    A(#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&VALUE)\n&SYSECT  CSECT\n         MEND\n./ ADD NAME=CASENTRY 0100-14178-14178-0002-00034-00034-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         CASENTRY &REG\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)\n           AIF   (NOT(&ZSTR_LVL EQ &ZSTR_MAX_LVL)).AIF_1_1\n               MNOTE 8,'CASENTRY - LEVEL OVERFLOW'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n&ZSTR_LVL SETA &ZSTR_LVL+1\n&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'CASENTRY'\n&ZSTR_CASE_CNT SETA &ZSTR_CASE_CNT+1\n&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_CASE_CNT\n&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA 0 RESET BLK CTR\n&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 0 RESET OTHRWISE BLK\n&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 1 REQUEST END LABEL\n&ZSTR_CASE_REG(&ZSTR_LVL) SETC '&REG' SAVE FOR ENDCASE CODE\n.*       AIF ('&REG' EQ '')\n           AIF (NOT('&REG' EQ '')).AIF_2_1\n             MNOTE 8,'CASENTRY - MISSING REGISTER WITH INDEX 0-N'\n.*       AEND\n.AIF_2_1   ANOP\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_L LOCTR\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T DS 0A START CASENTRY BRANCH TABLE\n&SYSECT  CSECT\n         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_G BRANCH TO CASE CODE\n         MEND\n./ ADD NAME=DO       0100-14178-14178-0002-00123-00123-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     03/27/74.\n.*             REMARKS.  MACRO TO ALLOW STRUCTURED PROGRAMMING USING\n.*                       IF, THEN, ELSE, AND DO UP TO TEN LEVELS DEEP\n.*                       AND NO BRANCH INSTRUCTIONS. SEE IF MACRO.\n.********************************************************************\n.* 05/14/06 DSH Z390 RPI 316 UPDATED FOR COMPAT.\n.* 07/21/06 DSH Z390 RPI 379 USE IF TO SUPPORT COMPOUND WHILE/UNTIL\n.* 04/11/07 DSH Z390 RPI 589 USE ZSTRGBL AND EXPAND LEVELS TO 100\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         DO    &END,&WHILE=,&UNTIL=\n         COPY  ZSTRGBL\n.*       AIF   ('&END' NE '')\n           AIF   (NOT('&END' NE '')).AIF_1_1\n.*             AIF ('&END' EQ 'END')\n                 AIF (NOT('&END' EQ 'END')).AIF_2_1\n.*                ACALL DO_END\n&ACALL_1_DO_END     SETA    1\n                    AGO   .ACL_1_DO_END\n.ACL_1_1            ANOP\n                  MEXIT\n.*             AELSE\n                 AGO   .AIF_2_E\n.AIF_2_1         ANOP\n                  MNOTE 8,'DO - UNSUPPORTED OPTION'\n                  MEXIT\n.*             AEND\n.AIF_2_E         ANOP\n.*       AEND\n.AIF_1_1   ANOP\n.*       AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)\n           AIF   (NOT(&ZSTR_LVL EQ &ZSTR_MAX_LVL)).AIF_3_1\n               MNOTE 8,'DO - LEVEL OVERFLOW'\n               MEXIT\n.*       AEND\n.AIF_3_1   ANOP\n&ZSTR_LVL SETA &ZSTR_LVL+1\n&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'DO'\n&ZSTR_DO_CNT SETA &ZSTR_DO_CNT+1\n&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_DO_CNT\n.*       AIF   ('&WHILE' NE '')\n           AIF   (NOT('&WHILE' NE '')).AIF_4_1\n.*             ACALL DO_WHILE\n&ACALL_2_DO_WHILE SETA    1\n                 AGO   .ACL_2_DO_WHILE\n.ACL_2_1         ANOP\n.*       AELSEIF ('&UNTIL' NE '')\n           AGO   .AIF_4_E\n.AIF_4_1   ANOP\n           AIF     (NOT('&UNTIL' NE '')).AIF_4_2\n.*             ACALL DO_UNTIL\n&ACALL_3_DO_UNTIL SETA    1\n                 AGO   .ACL_3_DO_UNTIL\n.ACL_3_1         ANOP\n.*       AELSE\n           AGO   .AIF_4_E\n.AIF_4_2   ANOP\n               MNOTE 8,'DO - MISSING WHILE=, UNTIL=, OR END'\n.*       AEND\n.AIF_4_E   ANOP\n         MEXIT\n.*\n.* DO END\n.*\n.*       AENTRY DO_END\n           AGO   .ACL_1_SKIP\n.ACL_1_DO_END ANOP\n&PARM    SETC  '&SYSLIST(2)'\n.*       AIF   (&ZSTR_LVL EQ 0)\n           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_5_1\n               MNOTE 8,'DO - END OUT OF SEQUENCE'\n               MEXIT\n.*       AEND\n.AIF_5_1   ANOP\n.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'DO')\n           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'DO')).AIF_6_1\n               MNOTE 8,'DO END - MISSING DO'\n               MEXIT\n.*       AEND\n.AIF_6_1   ANOP\n         B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n&ZSTR_LVL SETA &ZSTR_LVL-1\n.*       AEND\n           AGO   (&ACALL_1_DO_END).ACL_1_1\n.ACL_1_SKIP ANOP\n.*\n.* DO WHILE=(CLC,A,EQ,B)\n.*\n.*       AENTRY DO_WHILE\n           AGO   .ACL_2_SKIP\n.ACL_2_DO_WHILE ANOP\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T DS 0H\n&IFPARM  SETC  '&WHILE'(2,K'&WHILE-2)\n         IF &IFPARM\n               B   #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL-1)_1\n         ENDIF\n         B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_1 DS 0H\n.*       AEND\n           AGO   (&ACALL_2_DO_WHILE).ACL_2_1\n.ACL_2_SKIP ANOP\n.*\n.* DO UNTIL=(CLC,A,EQ,B)\n.*\n.*       AENTRY DO_UNTIL\n           AGO   .ACL_3_SKIP\n.ACL_3_DO_UNTIL ANOP\n         B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_1\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_T DS 0H\n&IFPARM  SETC  '&UNTIL'(2,K'&UNTIL-2)\n         IF    &IFPARM\n               B     #@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL-1)_E\n         ENDIF\n#@DO_&ZSTR_LVL_TCNT(&ZSTR_LVL)_1 DS 0H\n.*       AEND\n           AGO   (&ACALL_3_DO_UNTIL).ACL_3_1\n.ACL_3_SKIP ANOP\n         MEND\n./ ADD NAME=ELSE     0100-14178-14178-0002-00085-00085-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     03/27/74.\n.*             REMARKS.  MACRO TO ALLOW STRUCTURED PROGRAMMING USING\n.*                       IF, THEN, ELSE, AND DO UP TO TEN LEVELS DEEP\n.*                       AND NO BRANCH INSTRUCTIONS. SEE IF MACRO.\n.********************************************************************\n.* 05/23/76 DSH - SUPPORT ELSEIF\n.* 05/15/06 DSH - Z390 RPI 315 UPDATE FOR COMPAT.\n.* 04/11/07 DSH - RPI 589 USE ZSTRGBL COPY AND EXPAND LEVELS TO 100\n.* 09/23/08 DSH - RPI 909 USE ZSTRMAC SPE'S\n.********************************************************************\n         ELSE  &OPT\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ 0)\n           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1\n               MNOTE 8,'ELSE - MISSING IF'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')\n           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')).AIF_2_1\n               MNOTE 8,'ELSE - MISSING IF'\n               MEXIT\n.*       AEND\n.AIF_2_1   ANOP\n.*       AIF   (T'&OPT EQ 'O' OR '&OPT' EQ 'BEGIN')\n           AIF   (NOT(T'&OPT EQ 'O' OR '&OPT' EQ 'BEGIN')).AIF_3_1\n.*             ACALL ELSE_BEGIN\n&ACALL_1_ELSE_BEGIN SETA    1\n                 AGO   .ACL_1_ELSE_BEGIN\n.ACL_1_1         ANOP\n.*       AELSEIF ('&OPT' EQ 'END')\n           AGO   .AIF_3_E\n.AIF_3_1   ANOP\n           AIF     (NOT('&OPT' EQ 'END')).AIF_3_2\n.*             ACALL ELSE_END\n&ACALL_2_ELSE_END SETA    1\n                 AGO   .ACL_2_ELSE_END\n.ACL_2_1         ANOP\n.*       AEND\n.AIF_3_2   ANOP\n.AIF_3_E   ANOP\n         MEXIT\n.*\n.* ELSE OR ELSE BEGIN - START ELSE BLOCK\n.*\n.*      AENTRY ELSE_BEGIN\n          AGO   .ACL_1_SKIP\n.ACL_1_ELSE_BEGIN ANOP\n.*      AIF   (&ZSTR_LVL_ELSE(&ZSTR_LVL))\n          AIF   (NOT(&ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_4_1\n              MNOTE 8,'ELSE - DUPLICATE ELSE'\n              MEXIT\n.*      AEND\n.AIF_4_1  ANOP\n&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 1  ELSE\n&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 1  REQUEST END LABEL\n        B      #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n.*       AEND\n           AGO   (&ACALL_1_ELSE_BEGIN).ACL_1_1\n.ACL_1_SKIP ANOP\n.*\n.* ELSE END (SAVE AS ENDIF)\n.*\n.*       AENTRY ELSE_END\n           AGO   .ACL_2_SKIP\n.ACL_2_ELSE_END ANOP\n.*       AIF   (NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))\n           AIF   (NOT(NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_5_1\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n.*       AEND\n.AIF_5_1   ANOP\n.*       AIF   (&ZSTR_LVL_TEND(&ZSTR_LVL))\n           AIF   (NOT(&ZSTR_LVL_TEND(&ZSTR_LVL))).AIF_6_1\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n.*       AEND\n.AIF_6_1   ANOP\n&ZSTR_LVL SETA &ZSTR_LVL-1\n.*       AEND\n           AGO   (&ACALL_2_ELSE_END).ACL_2_1\n.ACL_2_SKIP ANOP\n         MEND\n./ ADD NAME=ELSEIF   0100-14178-14178-0002-00121-00121-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     05/23/76.\n.*             REMARKS.  CONTROL STRUCTURE FOR CONDITIONAL EXECUTION.\n.********************************************************************\n.* 05/12/06 Z390 RPI 316 UPDATE FOR COMPAT.\n.* 04/11/07 Z390 RPI 589 USE ZSTRGBL AND EXPAND LEVELS TO 100\n.* 11/02/07 Z390 RPI 734 CORRECT BAD CONDITION CODE FOR OR CONNECTOR\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 09/23/08 RPI 909 update using ZSTRMAC SPE's\n.********************************************************************\n         ELSEIF\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ 0)\n           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1\n               MNOTE 8,'ELSEIF - MISSING IF'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')\n           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')).AIF_2_1\n               MNOTE 8,'ELSEIF - MISSING IF'\n               MEXIT\n.*       AEND\n.AIF_2_1   ANOP\n&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 1  REQUEST END LABEL\n         B     #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n&BLK_CNT SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1 THIS BLK LAB FOR OR\n&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+2\n&AND_CONN SETB 1             ASSUME AND CONNECTOR IF ANY\n&N       SETA N'&SYSLIST         TOTAL TEST AND CONNECTOR PARMS\n&S       SETA 1                  OPERAND INDEX\n.*       AWHILE (&S LE &N)\n.AWH_1_T   ANOP\n           AIF    (NOT(&S LE &N)).AWH_1_E\n&SN            SETA  N'&SYSLIST(&S)        TEST OPERANDS\n&OP            SETC  '&SYSLIST(&S,1)'      TEST OPCODE\n.*             AIF (&SN EQ 1)  COMPARE NOT IN QUOTES\n                 AIF (NOT(&SN EQ 1)).AIF_3_1   COMPARE NOT IN QUOTES\n&BC                SETC  '&SYSLIST(&S+2)'  TEST COMPARE MASK\n.*                 AIF (&N LT &S+3)\n                     AIF (NOT(&N LT &S+3)).AIF_4_1\n                       MNOTE 8,'IF - TEST SUBLIST LENGTH INVALID - &SYSX\n               LIST(&S)'\n                       MEXIT\n.*                 AEND\n.AIF_4_1             ANOP\n&OPR               SETC '&SYSLIST(&S+1),&SYSLIST(&S+3)'\n&S                 SETA  &S+4-1     POS TO TEST END-1\n.*             AELSEIF (&SN EQ 4)  OPERANDS IN QUOTES WITH CONNECTORS\n                 AGO   .AIF_3_E\n.AIF_3_1         ANOP\n                 AIF     (NOT(&SN EQ 4)).AIF_3_2   OPERANDS IN QUOTES WX\n               ITH CONNECTORS\n&BC                SETC  '&SYSLIST(&S,3)'\n&OPR               SETC  '&SYSLIST(&S,2),&SYSLIST(&S,4)'\n.*             AEND\n.AIF_3_2         ANOP\n.AIF_3_E         ANOP\n.*             AIF   (&AND_CONN)    IF AND EXIT IF COMPARE FAILS\n                 AIF   (NOT(&AND_CONN)).AIF_5_1     IF AND EXIT IF COMPX\n               ARE FAILS\n         &OP   &OPR\n         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX\n               TR_LVL)\n.*             AELSE                IF OR  EXEC BLOCK IF TEST OK\n                 AGO   .AIF_5_E\n.AIF_5_1         ANOP\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1\n         &OP   &OPR\n         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX\n               TR_LVL)\n.*             AEND\n.AIF_5_E         ANOP\n&S             SETA  &S+1       ADVANCE TO CONNECTOR OR END\n.*             AIF (&S LE &N)\n                 AIF (NOT(&S LE &N)).AIF_6_1\n&SN                SETA N'&SYSLIST(&S)\n.*                 AIF (&SN NE 1)\n                     AIF (NOT(&SN NE 1)).AIF_7_1\n                       MNOTE 8,'IF - INVALID CONNECTOR'\n                       MEXIT\n.*                 AEND\n.AIF_7_1             ANOP\n.*                 AIF   ('&SYSLIST(&S)' EQ 'OR')\n                     AIF   (NOT('&SYSLIST(&S)' EQ 'OR')).AIF_8_1\n         B     #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT\n&AND_CONN              SETB 0\n.*                 AELSEIF  ('&SYSLIST(&S)' EQ 'AND')\n                     AGO   .AIF_8_E\n.AIF_8_1             ANOP\n                     AIF      (NOT('&SYSLIST(&S)' EQ 'AND')).AIF_8_2\n&AND_CONN              SETB 1\n.*                 AELSE\n                     AGO   .AIF_8_E\n.AIF_8_2             ANOP\n                       MNOTE 8,'IF - INVALID CONNECTOR'\n                       MEXIT\n.*                 AEND\n.AIF_8_E             ANOP\n&S                 SETA &S+1\n.*                 AIF (&S GT &N)\n                     AIF (NOT(&S GT &N)).AIF_9_1\n                       MNOTE 8,'IF - MISSING TEST AFTER CONNECTOR'\n                       MEXIT\n.*                 AEND\n.AIF_9_1             ANOP\n.*             AEND\n.AIF_6_1         ANOP\n.*       AEND\n           AGO   .AWH_1_T\n.AWH_1_E   ANOP\n.*       AIF   (NOT &AND_CONN)\n           AIF   (NOT(NOT &AND_CONN)).AIF_10_1\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT DS 0H\n.*       AEND\n.AIF_10_1  ANOP\n         MEND\n./ ADD NAME=ENDCASE  0100-14178-14178-0002-00042-00042-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR CASENTRY, CASE, ENDCASE\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         ENDCASE\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ 0)\n           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1\n               MNOTE 8,'ENDCASE - MISSING CASENTRY'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'CASENTRY')\n           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'CASENTRY')).AIF_2X\n               _1\n               MNOTE 8,'ENDCASE - MISSING CASENTRY'\n               MEXIT\n.*       AEND\n.AIF_2_1   ANOP\n.*       AIF   ('&ZSTR_LVL_BCNT(&ZSTR_LVL)' EQ 0)\n           AIF   (NOT('&ZSTR_LVL_BCNT(&ZSTR_LVL)' EQ 0)).AIF_3_1\n               MNOTE 8,'ENDCASE - MISSING CASE(S)'\n               MEXIT\n.*       AEND\n.AIF_3_1   ANOP\n         B     #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_A DC A(#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_X\n               T)\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_G DS 0H\n         CLFI  &ZSTR_CASE_REG(&ZSTR_LVL),&ZSTR_CASE_MAX(&ZSTR_LVL)\n         BH    #@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n         SLA   &ZSTR_CASE_REG(&ZSTR_LVL),2\n         A     &ZSTR_CASE_REG(&ZSTR_LVL),#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVLX\n               )_A\n         LT    &ZSTR_CASE_REG(&ZSTR_LVL),0(&ZSTR_CASE_REG(&ZSTR_LVL))\n         BNZR  &ZSTR_CASE_REG(&ZSTR_LVL)\n#@CAS_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n         MEND\n./ ADD NAME=ENDDO    0100-14178-14178-0002-00007-00007-00000-STRPGMC\n         MACRO\n&N       ENDDO\n.********************************************************************\n.* 05/14/06 DSH Z390 RPI 316 UPDATED FOR COMPAT.\n.********************************************************************\n&N       DO    END\n         MEND\n./ ADD NAME=ENDIF    0100-14178-14178-0002-00034-00034-00000-STRPGMC\n         MACRO\n.********************************************************************\n.* ENDIF - END OF ALTERATE SELECTION\n.********************************************************************\n.* 05/14/06 DSH Z390 RPI 316 UPDATE FOR COMPAT.\n.* 04/11/07 DSH Z390 RPI 589 USE ZSTRGBL COPY AND EXPAND LEVELS 100\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n&N       ENDIF\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ 0)\n           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1\n               MNOTE 8,'ENDIF - MISSING IF'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')\n           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'IF')).AIF_2_1\n               MNOTE 8,'ENDIF - MISSING IF'\n               MEXIT\n.*       AEND\n.AIF_2_1   ANOP\n.*       AIF   (NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))\n           AIF   (NOT(NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_3_1\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n.*       AEND\n.AIF_3_1   ANOP\n.*       AIF   (&ZSTR_LVL_TEND(&ZSTR_LVL))\n           AIF   (NOT(&ZSTR_LVL_TEND(&ZSTR_LVL))).AIF_4_1\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n.*       AEND\n.AIF_4_1   ANOP\n&ZSTR_LVL SETA &ZSTR_LVL-1\n         MEND\n./ ADD NAME=ENDSEL   0100-14178-14178-0002-00042-00042-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPMS FOR SELECT,WHEN,OTHRWISE,ENDSEL\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         ENDSEL\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ 0)\n           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1\n               MNOTE 8,'ENDSEL - MISSING SELECT'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')\n           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')).AIF_2_1\n               MNOTE 8,'ENDSEL - MISSING SELECT'\n               MEXIT\n.*       AEND\n.AIF_2_1   ANOP\n.*       AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)\n           AIF   (NOT(&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)).AIF_3_1\n               MNOTE 8,'ENDSEL - MISSING WHEN'\n               MEXIT\n.*       AEND\n.AIF_3_1   ANOP\n.*       AIF (NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))\n           AIF (NOT(NOT &ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_4_1\n#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n.*       AEND\n.AIF_4_1   ANOP\n.*       AIF   (&ZSTR_LVL_ELSE(&ZSTR_LVL)                              X\n                OR &ZSTR_LVL_BCNT(&ZSTR_LVL) GT 1))\n           AIF   (NOT(&ZSTR_LVL_ELSE(&ZSTR_LVL)                        X\n                      OR &ZSTR_LVL_BCNT(&ZSTR_LVL) GT 1))).AIF_5_1\n#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E DS 0H\n.*       AEND\n.AIF_5_1   ANOP\n&ZSTR_LVL SETA &ZSTR_LVL-1\n         MEND\n./ ADD NAME=IF       0100-14178-14178-0002-00118-00118-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     03/27/74.\n.*             REMARKS.  CONTROL STRUCTURE FOR CONDITIONAL EXECUTION.\n.********************************************************************\n.* 05/23/76 DSH - SUPPORT ELSEIF.\n.* 05/15/06 RPI 316 UPDATE FOR COMPAT.\n.* 04/11/07 RPI     USE ZSTRGBL COPY AND EXPAND LEVELS TO 100\n.* 04/19/08 RPI 833 add SETC quotes for HLASM compatibility\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         IF\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)\n           AIF   (NOT(&ZSTR_LVL EQ &ZSTR_MAX_LVL)).AIF_1_1\n               MNOTE 8,'IF - LEVEL OVERFLOW'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n&ZSTR_LVL SETA &ZSTR_LVL+1\n&ZSTR_AIF_CNT SETA &ZSTR_AIF_CNT+1   IF COUNTER\n&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_AIF_CNT\n&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'IF'\n&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA 2     IF BLK/LAB COUNTER\n&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 0     ELSE RESET\n&ZSTR_LVL_TEND(&ZSTR_LVL) SETB 0     END LABEL RESET\n&AND_CONN SETB 1             ASSUME AND CONNECTOR IF ANY\n&N       SETA N'&SYSLIST         TOTAL TEST AND CONNECTOR PARMS\n&S       SETA 1                  OPERAND INDEX\n&BLK_CNT SETA 1              LAB FOR THIS BLOCK USED BY OR\n.*       AWHILE (&S LE &N)\n.AWH_1_T   ANOP\n           AIF    (NOT(&S LE &N)).AWH_1_E\n&SN            SETA  N'&SYSLIST(&S)        TEST OPERANDS\n&OP            SETC  '&SYSLIST(&S,1)'      TEST OPCODE\n.*             AIF (&SN EQ 1)  COMPARE NOT IN QUOTES\n                 AIF (NOT(&SN EQ 1)).AIF_2_1   COMPARE NOT IN QUOTES\n.*                 AIF (&N LT &S+3)\n                     AIF (NOT(&N LT &S+3)).AIF_3_1\n                       MNOTE 8,'IF - TEST SUBLIST LENGTH INVALID - &SYSX\n               LIST(&S)'\n                       MEXIT\n.*                 AEND\n.AIF_3_1             ANOP\n&BC                SETC  '&SYSLIST(&S+2)'  TEST COMPARE MASK\n&OPR               SETC '&SYSLIST(&S+1),&SYSLIST(&S+3)'\n&S                 SETA  &S+4-1     POS TO TEST END-1\n.*             AELSEIF (&SN EQ 4)  OPERAND IN QUOTES WITH CONNECTORS\n                 AGO   .AIF_2_E\n.AIF_2_1         ANOP\n                 AIF     (NOT(&SN EQ 4)).AIF_2_2   OPERAND IN QUOTES WIX\n               TH CONNECTORS\n&BC                SETC  '&SYSLIST(&S,3)'\n&OPR               SETC  '&SYSLIST(&S,2),&SYSLIST(&S,4)'\n.*             AEND\n.AIF_2_2         ANOP\n.AIF_2_E         ANOP\n.*             AIF   (&AND_CONN)    IF AND EXIT IF COMPARE FAILS\n                 AIF   (NOT(&AND_CONN)).AIF_4_1     IF AND EXIT IF COMPX\n               ARE FAILS\n         &OP   &OPR\n         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX\n               TR_LVL)\n.*             AELSE                IF OR  EXEC BLOCK IF TEST OK\n                 AGO   .AIF_4_E\n.AIF_4_1         ANOP\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1\n         &OP   &OPR\n         BC    15-&BC,#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSX\n               TR_LVL)\n.*             AEND\n.AIF_4_E         ANOP\n&S             SETA  &S+1       ADVANCE TO CONNECTOR OR END\n.*             AIF (&S LE &N)\n                 AIF (NOT(&S LE &N)).AIF_5_1\n&SN                SETA N'&SYSLIST(&S)\n.*                 AIF (&SN NE 1)\n                     AIF (NOT(&SN NE 1)).AIF_6_1\n                       MNOTE 8,'IF - INVALID CONNECTOR'\n                       MEXIT\n.*                 AEND\n.AIF_6_1             ANOP\n.*                 AIF   ('&SYSLIST(&S)' EQ 'OR')\n                     AIF   (NOT('&SYSLIST(&S)' EQ 'OR')).AIF_7_1\n         B     #@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT\n&AND_CONN              SETB 0\n.*                 AELSEIF  ('&SYSLIST(&S)' EQ 'AND')\n                     AGO   .AIF_7_E\n.AIF_7_1             ANOP\n                     AIF      (NOT('&SYSLIST(&S)' EQ 'AND')).AIF_7_2\n&AND_CONN              SETB 1\n.*                 AELSE\n                     AGO   .AIF_7_E\n.AIF_7_2             ANOP\n                       MNOTE 8,'IF - INVALID CONNECTOR'\n                       MEXIT\n.*                 AEND\n.AIF_7_E             ANOP\n&S                 SETA &S+1\n.*                 AIF (&S GT &N)\n                     AIF (NOT(&S GT &N)).AIF_8_1\n                       MNOTE 8,'IF - MISSING TEST AFTER CONNECTOR'\n                       MEXIT\n.*                 AEND\n.AIF_8_1             ANOP\n.*             AEND\n.AIF_5_1         ANOP\n.*       AEND\n           AGO   .AWH_1_T\n.AWH_1_E   ANOP\n.*       AIF   (NOT &AND_CONN)\n           AIF   (NOT(NOT &AND_CONN)).AIF_9_1\n#@IF_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&BLK_CNT DS 0H\n.*       AEND\n.AIF_9_1   ANOP\n         MEND\n./ ADD NAME=OTHRWISE 0100-14178-14178-0002-00038-00038-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPMS FOR SELECT,WHEN,OTHRWISE,ENDSEL\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         OTHRWISE  &VALUE\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ 0)\n           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1\n               MNOTE 8,'OTHRWISE - MISSING SELECT'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')\n           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')).AIF_2_1\n               MNOTE 8,'OTHRWISE - MISSING SELECT'\n               MEXIT\n.*       AEND\n.AIF_2_1   ANOP\n.*       AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)\n           AIF   (NOT(&ZSTR_LVL_BCNT(&ZSTR_LVL) EQ 0)).AIF_3_1\n               MNOTE 8,'OTHRWISE - MISSING WHEN'\n               MEXIT\n.*       AEND\n.AIF_3_1   ANOP\n.*       AIF   (&ZSTR_LVL_ELSE(&ZSTR_LVL))\n           AIF   (NOT(&ZSTR_LVL_ELSE(&ZSTR_LVL))).AIF_4_1\n               MNOTE 8,'OTHRWISE - DUPLICATE OTHRWISE'\n               MEXIT\n.*       AEND\n.AIF_4_1   ANOP\n         B     #@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 1\n         MEND\n./ ADD NAME=SELECT   0100-14178-14178-0002-00026-00026-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR SELECT,WHEN,ENDSEL\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         SELECT &OP,&FIELD,&COMP\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ &ZSTR_MAX_LVL)\n           AIF   (NOT(&ZSTR_LVL EQ &ZSTR_MAX_LVL)).AIF_1_1\n               MNOTE 8,'SELECT - LEVEL OVERFLOW'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n&ZSTR_LVL SETA &ZSTR_LVL+1\n&ZSTR_SEL_CNT SETA &ZSTR_SEL_CNT+1\n&ZSTR_LVL_TCNT(&ZSTR_LVL) SETA &ZSTR_SEL_CNT\n&ZSTR_LVL_TYPE(&ZSTR_LVL) SETC 'SELECT'\n&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA 0 RESET BLK CTR\n&ZSTR_LVL_ELSE(&ZSTR_LVL) SETB 0 RESET OTHRWISE BLK\n&ZSTR_SEL_OP(&ZSTR_LVL) SETC '&OP'\n&ZSTR_SEL_FLD(&ZSTR_LVL) SETC '&FIELD'\n&ZSTR_SEL_CMP(&ZSTR_LVL) SETC '&COMP'\n         MEND\n./ ADD NAME=WHEN     0100-14178-14178-0002-00050-00050-00000-STRPGMC\n         MACRO\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  ADD SPM MACROS FOR SELECT,WHEN,ENDSEL\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n         WHEN  &VALUE\n         COPY  ZSTRGBL\n.*       AIF   (&ZSTR_LVL EQ 0)\n           AIF   (NOT(&ZSTR_LVL EQ 0)).AIF_1_1\n               MNOTE 8,'WHEN - MISSING SELECT'\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n.*       AIF   ('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')\n           AIF   (NOT('&ZSTR_LVL_TYPE(&ZSTR_LVL)' NE 'SELECT')).AIF_2_1\n               MNOTE 8,'WHEN - MISSING SELECT'\n               MEXIT\n.*       AEND\n.AIF_2_1   ANOP\n.*       AIF   (&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)\n           AIF   (NOT(&ZSTR_LVL_BCNT(&ZSTR_LVL) GT 0)).AIF_3_1\n         B     #@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_E\n#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVL_BCNT(&ZSTR_LVL) DS 0H\n.*       AEND\n.AIF_3_1   ANOP\n.*       AIF   (N'&SYSLIST EQ 1)\n           AIF   (NOT(N'&SYSLIST EQ 1)).AIF_4_1\n.*             AIF ('&ZSTR_SEL_OP(&ZSTR_LVL)' EQ '')\n                 AIF (NOT('&ZSTR_SEL_OP(&ZSTR_LVL)' EQ '')).AIF_5_1\n                   MNOTE 8,'WHEN - MISSING COMPARE OPCODE'\n                   MEXIT\n.*             AEND\n.AIF_5_1         ANOP\n         &ZSTR_SEL_OP(&ZSTR_LVL) &ZSTR_SEL_FLD(&ZSTR_LVL),&VALUE\n&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1\n         BC    15-&ZSTR_SEL_CMP(&ZSTR_LVL),#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LX\n               VL)_&ZSTR_LVL_BCNT(&ZSTR_LVL)\n.*       AELSE\n           AGO   .AIF_4_E\n.AIF_4_1   ANOP\n         &SYSLIST(1) &SYSLIST(2),&SYSLIST(4)\n&ZSTR_LVL_BCNT(&ZSTR_LVL) SETA &ZSTR_LVL_BCNT(&ZSTR_LVL)+1\n         BC    15-&SYSLIST(3),#@SEL_&ZSTR_LVL_TCNT(&ZSTR_LVL)_&ZSTR_LVLX\n               _BCNT(&ZSTR_LVL)\n.*       AEND\n.AIF_4_E   ANOP\n         MEND\n./ ADD NAME=ZSTREQU  0100-14178-14178-0002-00037-00037-00000-STRPGMC\n         MACRO\n         ZSTREQU\n         GBLB  &ZSTR_EQU\n.*       AIF   (&ZSTR_EQU)\n           AIF   (NOT(&ZSTR_EQU)).AIF_1_1\n               MEXIT\n.*       AEND\n.AIF_1_1   ANOP\n&ZSTR_EQU SETB 1\n         PUSH  PRINT,NOPRINT\n         PRINT OFF,NOPRINT\n.********************************************************************\n.* EQUBC - DEFINE COMMON EQU SYMBOLS FOR USE IN STRUCTURED MACROS\n.********************************************************************\n.* 09/27/08 RPI 909 CHANGED FROM CPY TO MAC CALLED BY ZSTRGBL.CPY\n.********************************************************************\nH        EQU   2\nL        EQU   4\nE        EQU   8\nNH       EQU   13\nNL       EQU   11\nNE       EQU   7\nO        EQU   1\nP        EQU   2\nM        EQU   4\nZ        EQU   8\nNP       EQU   13\nNM       EQU   11\nNZ       EQU   7\nNO       EQU   14\nEQ       EQU   8\nGT       EQU   2\nLT       EQU   4\nGE       EQU   11\nLE       EQU   13\n         POP   PRINT,NOPRINT\n         MEND\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SPMCPY": {"ttr": 33797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x14\\x17\\x8f\\x01\\x14\\x17\\x8f\\x00\\x17\\x00G\\x00G\\x00\\x00\\xc8\\xc9\\xc7\\xc7\\xc9\\xd5\\xe2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2014-06-27T00:00:00", "modifydate": "2014-06-27T00:17:00", "lines": 71, "newlines": 71, "modlines": 0, "user": "HIGGINS"}, "text": "./ ADD NAME=ASMMSP   0100-14178-14178-0005-00001-00001-00000-SPMCOPY\n         COPY ZSTRMAC  Z390 STRUCTURED PROGRAMMING MACROS\n./ ADD NAME=ZSTRGBL  0100-14178-14178-0005-00046-00046-00000-SPMCOPY\n.********************************************************************\n.*             AUTHOR.   DON HIGGINS.\n.*             DATE.     09/23/08.\n.*             REMARKS.  SHARED GLOBAL VARIABLES FOR ZSTRMAC SPMS\n.********************************************************************\n.* 09/23/08 RPI 909 upgrade to use ZSTRMAC SPE's and extend compat.\n.********************************************************************\n.*\n.*  DEFINE SHARED CONDTION CODES FOR USE IN SPM OPERANDS\n.*\n         ZSTREQU\n.*\n.*  SHARED LEVEL CONTROL FOR IF, DO, SELECT, AND CASENTRY\n.*\n         GBLA &ZSTR_LVL      CURRENT LEVEL OF NESTING\n         GBLA &ZSTR_MAX_LVL  MAX LEVEL OF NESTING\n&ZSTR_MAX_LVL SETA 100\n         GBLC &ZSTR_LVL_TYPE(&ZSTR_MAX_LVL) IF,DO,SELECT,CASENTRY\n         GBLA &ZSTR_LVL_TCNT(&ZSTR_MAX_LVL) TYPE  COUNTER\n         GBLA &ZSTR_LVL_BCNT(&ZSTR_MAX_LVL) BLOCK COUNTER\n         GBLB &ZSTR_LVL_ELSE(&ZSTR_MAX_LVL) ELSE BLOCK DEFINED\n         GBLB &ZSTR_LVL_TEND(&ZSTR_MAX_LVL) END LABEL REQUESTED\n.*\n.*  IF, ELSEIF, ELSE, ENDIF\n.*\n         GBLA  &ZSTR_AIF_CNT                AIF COUNTER\n.*\n.*  DO, ENDDO\n.*\n         GBLA  &ZSTR_DO_CNT\n.*\n.*  SELECT, WHEN, OTHRWISE, ENDSEL\n.*\n         GBLA  &ZSTR_SEL_CNT             SELECT COUNTER\n         GBLC  &ZSTR_SEL_OP(100)   SELECT OPCODE ('' IF NONE)\n         GBLC  &ZSTR_SEL_FLD(100)  SELECT FIELD\n         GBLC  &ZSTR_SEL_CMP(100)  SELECT COMPARE TYPE\n.*\n.*  CASENTRY, CASE, ENDCASE\n.*\n         GBLA &ZSTR_CASE_CNT                 CASENTRY COUNTER\n         GBLC &ZSTR_CASE_REG(&ZSTR_MAX_LVL)  REG WITH INDEX 1-N\n         GBLA &ZSTR_CASE_MAX(&ZSTR_MAX_LVL)  MAX CASE INDEX 1-N VALUE\n.*\n.*  END OF ZSTRGBL.CPY\n.*\n./ ADD NAME=ZSTRMAC  0100-14178-14178-0005-00021-00021-00000-SPMCOPY\n.********************************************************************\n.* ZSTRMAC - Z390 STRUCTRUED PROGRAMMING MACROS\n.********************************************************************\n.* 05/16/06 DSH RPI 316 UPDATED FOR COMPATIBILITY\n.* 09/27/08 DSH RPI 909 UPDATED USING SPE STRUCTURED MACRO CODE\n.********************************************************************\n.* ORIGINAL MACROS WRITTEN BY DON HIGGINS IN 1974 AT FLORIDA POWER\n.* SEE ACM SIGPLAN ARTICLE PUBLISHED IN FEBRUARY 1975\n.* ORIGINAL MACROS CONTRIBUTED TO SHARE SPLA LIBRARY IN LATE 1970'S\n.* ORIGINAL MACROS RETRIEVED FROM CBT OVERFLOW TAPE 178:\n.*   http://www.cbttape.org/covdowns.htm\n.* THE ZSTRMAC MACROS HAVE BEEN UPDATED TO BE A COMPATIBLE\n.* SUBSET OF IBM HLASM TOOLKIT MACROS BASED ON SHARE PRESENTATION\n.* VISIT FOLLOWING SITE FOR LATEST DOCUMENTATION AND LINKS:\n.*   www.z390.org/z390_STRMAC_Structured_Macro_Support.mac\n.********************************************************************\n.* THE ZSTRMAC SPE SPM MACROS ARE IN z390\\mac\n.* THE HLASM COMPATIBLE TRANSLATED VERSIONS ARE IN z390\\mac\\spm\n.* THE COMMAND SPMTRAN.BAT CAN BE USED TO RETRANSLATE THEM.\n.* SEE rt\\test\\TESTSPM1.MLC REGRESSION TEST\n.********************************************************************\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT912/FILE912.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT912", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}