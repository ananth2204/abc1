/* **************************** REXX ****************************** */
/*                                                                  */
/*  NAME: FINDMOD                                                   */
/*  FUNC: Scan linklist table for datasets, then search in order    */
/*        for a particular member name using SYSDSN function.       */
/*  CALL: FINDMOD member listtype                                   */
/*  SRCH: PSA+10 > CVT > CVT+4DC > LLT                              */
/*  OPSYS: z/OS                                                     */
/*  NOTES: listtype can be 'SHORT' or 'LONG'.  LONG lists all       */
/*         datasets regardless of whether the member is found.      */
/*         SHORT only lists the datasets the member is found in,    */
/*         along with the number in the concatenation each dataset  */
/*         is. SHORT is the default.                                */
/*                                                                  */
/* **************************************************************** */
Trace O
Address TSO
ARG Member ListType .
Parse Source . Called_As .
If Called_As ¬= 'SUBROUTINE' then "CLR3270"
If Member = "" then
  Do
    Say "You did NOT enter a member name.  Terminating...(FINDMOD)"
    exit
  End
If LENGTH(Member) > 8 then
  Do
    Say "Member name" member "too long.  Terminating..."
    Exit
  End
If ListType = "" then ListType = "SHORT"
LnkLstSetName = ""
Select
  When COMPARE(ListType,"SHORT") = 0 then NOP
  When COMPARE(ListType,"LONG") = 0 then NOP
  Otherwise
    Do
      Say "Default listing option of 'SHORT' assumed"
      ListType = "SHORT"
   End
End
Cvt = STORAGE(10,4)
Cvt = C2X(Cvt)
CvtVerId = X2D(Cvt)-X2d('28')
CvtVerId = D2X(CvtVerId)
MvsVerId = STORAGE(CvtVerId,8)
CvtECVT = X2D(Cvt)+X2D('8C')
CvtECVT = D2X(CvtECVT)
EcvtPtr = STORAGE(CvtECVT,4)
EcvtPTR = C2X(EcvtPtr)
EcvtDLCB = X2D(EcvtPtr)+X2D('88')
EcvtDLCB = D2X(EcvtDLCB)
DlcbPtr = STORAGE(EcvtDLCB,4)
DlcbPtr = C2X(DlcbPtr)
DlcbLnkLstSetName = X2D(DlcbPtr)+X2D('24')
DlcbLnkLstSetName = D2X(DlcbLnkLstSetName)
LnkLstSetName = STORAGE(DlcbLnkLstSetName,8)
LnkLstSetName = " Set" LnkLstSetname
DlcbLLT@ = X2D(DlcbPtr)+X2D('10')
DlcbLLT@ = D2X(DlcbLLt@)
LltPtr = STORAGE(DlcbLLT@,4)
LltPtr = C2X(LltPtr)
SetCvtLLTa:
CvtLLTA = LltPtr
LltId = STORAGE(CvtLLTA,4)
CvtLLTA = X2D(CvtLLTA)+X2D(4)
CvtLLTA = D2X(CvtLLTA)
LltCount = STORAGE(CvtLLTA,4)
LltCount = C2D(LltCount)
CALL #SYSID
Say "Searching LINKLIST"LnkLstSetName "on" result "for" Member
CvtLLTA = X2D(CvtLLTA)+X2D(5);
CvtLLTA = D2X(CvtLLTA);
Found = "NO"
Do I = 1 to LltCount
  LltEntry = STORAGE(CvtLLTA,44)
  LltEntry = STRIP(LltEntry)
  x = SYSDSN("'"||LltEntry||"("||member||")'")
  LltEntry = LEFT(LltEntry,36)
 Select
    When listtype = 'SHORT' & x = 'OK' then
      Do
        Say "LINKLIST+"i-1 ':' LltEntry x
        Found = 'YES'
        If Called_As ¬= 'SUBROUTINE' then
          Do
            Say 'Do you want to continue the search?'
            Pull Reply
            If Reply ¬= 'Y' then LEAVE
          End
        Else
          NOP
      end;
    When ListType = "LONG" then
      Do
        Say LltEntry x;
        If x = "OK" then Found = "YES"
      End;
    Otherwise
       NOP
  End
  CvtLLTA = X2D(CvtLLTA)+45;
  CvtLLTA = D2X(CvtLLTA);
End
If Found = "NO" then
  Say "No match for" member "in the LINKLIST concatenation"
Exit
