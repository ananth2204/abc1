/* REXX */
ADDRESS ISREDIT "MACRO (LIST)"
ADDRESS ISPEXEC "VGET (CCLIST,CCBATCH) SHARED"
ADDRESS ISPEXEC "VGET (ZUSER) ASIS"
CCBATCH = LEFT(CCBATCH,1)
DELIM = ' '
GROUP = 0
HDRROW = 'N'
LRECL = 255
OUT = ZUSER".CC.ISPFILE"
RESTART = 'Y'
START = 1
STRIP = 'N'

IF LIST = ''
  THEN IF CCLIST = ''
         THEN
           DO
             ZEDSMSG = 'Input list missing'
             ZEDLMSG = 'Input list is a required parameter'
             SIGNAL ABEND
           END
         ELSE
           DO
             LIST = CCLIST
           END
PARSE UPPER VAR LIST CCLIB '(' CCMEM ')'
IF (CCMEM = '') & (POS('.',CCLIB) = 0)
  THEN
    DO
      CCMEM = CCLIB
      ADDRESS ISREDIT "(DSN) = DATASET"
      PARSE VAR DSN CCLIB '(' .
      LIST = CCLIB || '(' || CCMEM || ')'
    END
DSN_STATUS = SYSDSN("'"LIST"'")
IF DSN_STATUS \= 'OK'
  THEN
    DO
      ZEDSMSG = DSN_STATUS
      ZEDLMSG = 'Please re-run with a valid input list file'
      SIGNAL ABEND
    END

ADDRESS ISREDIT "(LAST) = LINENUM .ZLAST"
IF LAST = 0
  THEN
    DO
      ZEDSMSG = 'Skeleton is empty'
      ZEDLMSG = 'Input skeleton is empty'
      SIGNAL ABEND
    END

GRPMODE = 0
LINENUM = 1
ADDRESS ISREDIT "(LINE) = LINE " LINENUM
ULINE = LINE
UPPER ULINE
POS = POS('<CCPARMS ', ULINE)
IF POS > 0
  THEN
    DO
      DO WHILE POS > 0
        LINE = SUBSTR(LINE,POS + 9)
        POS = POS('>', LINE)
        IF POS > 0
          THEN LINE = STRIP(SUBSTR(LINE,1,POS - 1))
          ELSE LINE = STRIP(LINE)
        DO WHILE LINE \= ''
          PARSE VAR LINE KEYWORD '=' LINE
          IF LEFT(LINE,1) = ''''
            THEN PARSE VAR LINE '''' VALUE '''' LINE
            ELSE PARSE VAR LINE VALUE LINE
          LINE = STRIP(LINE)
          UPPER KEYWORD
          SELECT
            WHEN KEYWORD = 'DELIM'   THEN DELIM   = VALUE
            WHEN KEYWORD = 'GROUP'   THEN GROUP   = VALUE
            WHEN KEYWORD = 'HDRROW'  THEN HDRROW  = VALUE
            WHEN KEYWORD = 'LRECL'   THEN LRECL   = VALUE
            WHEN KEYWORD = 'OUT'     THEN OUT     = VALUE
            WHEN KEYWORD = 'RESTART' THEN RESTART = VALUE
            WHEN KEYWORD = 'START'   THEN START   = VALUE
            WHEN KEYWORD = 'STRIP'   THEN STRIP   = VALUE
            OTHERWISE
              ZEDSMSG = 'Invalid keyword' KEYWORD
              ZEDLMSG = 'Valid keywords are: DELIM, GROUP, HDRROW, LRECL,',
                        'OUT, RESTART, START, STRIP'
              SIGNAL ABEND
          END
        END
        LINENUM = LINENUM + 1
        ADDRESS ISREDIT "(LINE) = LINE " LINENUM
        ULINE = LINE
        UPPER ULINE
        POS = POS('<CCPARMS ', ULINE)
      END
      IF LENGTH(DELIM) = 0
        THEN
          DO
            ZEDSMSG = 'Invalid DELIM value'
            ZEDLMSG = 'DELIM must not be empty'
            SIGNAL ABEND
          END
      IF GROUP = 0
        THEN GRPMODE = 0
        ELSE
          DO
            IF (DATATYPE(GROUP,N) = 1 & DATATYPE(GROUP,W) \= 1) |,
               (DATATYPE(GROUP,W) = 1 & GROUP <= 0)
              THEN
                DO
                  ZEDSMSG = 'Invalid GROUP value'
                  ZEDLMSG = 'GROUP must be a string or a whole number',
                            'zero or greater'
                  SIGNAL ABEND
                END
            IF DATATYPE(GROUP,W) = 1
              THEN GRPMODE = 1
              ELSE GRPMODE = 2
          END
      UPPER HDRROW
      IF HDRROW \= 'Y' & HDRROW \= 'N'
        THEN
          DO
            ZEDSMSG = 'Invalid HDRROW value'
            ZEDLMSG = 'HDRROW must be ''Y'' or ''N'''
            SIGNAL ABEND
          END
      IF DATATYPE(LRECL,W) \= 1 | LRECL < 80 | LRECL > 255
        THEN
          DO
            ZEDSMSG = 'Invalid LRECL value'
            ZEDLMSG = 'LRECL must be a whole number in the range 80-255'
            SIGNAL ABEND
          END
      OUT = STRIP(OUT,,'''')
      IF POS('(', OUT) > 0
        THEN
          DO
            ZEDSMSG = 'Invalid OUT dataset'
            ZEDLMSG = 'OUT dataset must be a sequential file'
            SIGNAL ABEND
          END
      UPPER RESTART
      IF RESTART \= 'Y' & RESTART \= 'N'
        THEN
          DO
            ZEDSMSG = 'Invalid RESTART value'
            ZEDLMSG = 'RESTART must be ''Y'' or ''N'''
            SIGNAL ABEND
          END
      IF DATATYPE(START,W) \= 1 | START < 1
        THEN
          DO
            ZEDSMSG = 'Invalid START value'
            ZEDLMSG = 'START must be a positive whole number'
            SIGNAL ABEND
          END
      UPPER STRIP
      IF STRIP \= 'Y' & STRIP \= 'N'
        THEN
          DO
            ZEDSMSG = 'Invalid STRIP value'
            ZEDLMSG = 'STRIP must be ''Y'' or ''N'''
            SIGNAL ABEND
          END
    END

DO LINENUM = 1 TO LAST BY 1
  ADDRESS ISREDIT "(LINE) = LINE" LINENUM
  LINES.LINENUM = LINE
END
MSG_STATUS = MSG('OFF')
ADDRESS TSO "FREE F(ISPFILE,SKEL)"
ADDRESS TSO "DELETE '"OUT"'"
ADDRESS TSO "DELETE '"ZUSER".CC.TEMPLIB'"
MSG_STATUS = MSG(MSG_STATUS)
ADDRESS TSO "ALLOC F(SKEL) DA('"ZUSER".CC.TEMPLIB') UNIT(SYSDA)
                   TRACKS SPACE(1 5) RECFM(F B) LRECL("LRECL")
                   DSORG(PO) DIR(1) CATALOG"
ADDRESS TSO "ALLOC F(SKEL) DA('"ZUSER".CC.TEMPLIB(CCSKEL)') OLD REUSE"
ADDRESS TSO "EXECIO * DISKW SKEL (STEM LINES. FINIS"
ADDRESS TSO "FREE F(SKEL)"
ADDRESS ISPEXEC "EDIT DATASET('"ZUSER".CC.TEMPLIB(CCSKEL)')
                      MACRO(CCSKEL)"
IF RC \= 0
  THEN
    DO
      ZEDSMSG = "Invalid char in skel"
      ZEDLMSG = "Skeleton contains one or more invalid characters"
      SIGNAL ABEND
    END
ADDRESS TSO "ALLOC F(ISPFILE) DA('"OUT"') UNIT(SYSDA)
                   CYLINDERS SPACE(1 5) RECFM(F B) LRECL("LRECL")
                   DSORG(PS) CATALOG MOD"

CCSTART = START
CCGRP = 1
ROWCNT = 0
TBNAME = "CC" || STRIP(RIGHT(ZUSER,6),L)
ADDRESS ISPEXEC "TBCREATE" TBNAME "REPLACE NOWRITE
     NAMES(CC1 CC2 CC3 CC4 CC5 CC6 CC7 CC8 CC9 CC10 CC11 CC12 CC13
     CC14 CC15 CC16 CC17 CC18 CC19 CC20 CC21 CC22 CC23 CC24 CC25)"
ADDRESS ISPEXEC "LIBDEF ISPSLIB DATASET ID('"ZUSER".CC.TEMPLIB')"
ADDRESS TSO "ALLOC F(LIST) DA('"LIST"') SHR REUSE"
ADDRESS TSO "EXECIO 1 DISKR LIST (STEM LINES."
IF RC = 0 & HDRROW = 'Y'
  THEN ADDRESS TSO "EXECIO 1 DISKR LIST (STEM LINES."
DO WHILE RC = 0
  ROWCNT = ROWCNT + 1
  IF LINES.1 = GROUP & GRPMODE = 2
    THEN
      DO
        CALL RUN_FTINCL
        CCGRP = CCGRP + 1
      END
    ELSE
      DO
        IF DELIM = '~'
          THEN LINE = LINES.1
          ELSE LINE = TRANSLATE(LINES.1,'05'X,'~')
        IF DELIM = ' '
          THEN PARSE VAR LINE CC1 CC2 CC3 CC4 CC5 CC6 CC7 CC8 CC9,
                         CC10 CC11 CC12 CC13 CC14 CC15 CC16 CC17 CC18,
                         CC19 CC20 CC21 CC22 CC23 CC24 CC25 .
          ELSE
            DO
              PARSE VAR LINE CC1 (DELIM) CC2 (DELIM) CC3 (DELIM) CC4,
                (DELIM) CC5 (DELIM) CC6 (DELIM) CC7 (DELIM) CC8 (DELIM),
                CC9 (DELIM) CC10 (DELIM) CC11 (DELIM) CC12 (DELIM) CC13,
                (DELIM) CC14 (DELIM) CC15 (DELIM) CC16 (DELIM) CC17,
                (DELIM) CC18 (DELIM) CC19 (DELIM) CC20 (DELIM) CC21,
                (DELIM) CC22 (DELIM) CC23 (DELIM) CC24 (DELIM) CC25,
                (DELIM) .
              IF STRIP = 'Y'
                THEN DO I = 1 TO 25 BY 1
                       INTERPRET 'CC'I' = STRIP(CC'I')'
                     END
            END
        ADDRESS ISPEXEC "TBADD" TBNAME
        IF ROWCNT = GROUP & GRPMODE = 1
          THEN
            DO
              CALL RUN_FTINCL
              CCGRP = CCGRP + 1
            END
      END
  ADDRESS TSO "EXECIO 1 DISKR LIST (STEM LINES."
END
ADDRESS TSO "EXECIO 0 DISKR LIST (FINIS"
ADDRESS TSO "FREE F(LIST)"
IF ROWCNT > 0 THEN CALL RUN_FTINCL
ADDRESS ISPEXEC "TBEND" TBNAME
ADDRESS ISPEXEC "LIBDEF ISPSLIB"
ADDRESS TSO "FREE F(ISPFILE)"
ADDRESS ISPEXEC "EDIT DATASET('"OUT"') MACRO(CCEND)"
MSG_STATUS = MSG('OFF')
IF CCBATCH \= "Y"
  THEN ADDRESS TSO "DELETE '"OUT"'"
ADDRESS TSO "DELETE '"ZUSER".CC.TEMPLIB'"
MSG_STATUS = MSG(MSG_STATUS)
IF CCBATCH = "Y"
  THEN
    DO
      CCRESULT = 0
      ADDRESS ISPEXEC "VPUT (CCRESULT) SHARED"
      ADDRESS ISREDIT "END"
    END
EXIT

RUN_FTINCL:
ADDRESS ISPEXEC "FTOPEN"
ADDRESS ISPEXEC "FTINCL CCSKEL"
ADDRESS ISPEXEC "FTCLOSE"
IF GRPMODE \= 0
  THEN
    DO
      ADDRESS ISPEXEC "TBEND" TBNAME
      ADDRESS ISPEXEC "TBCREATE" TBNAME "REPLACE NOWRITE
           NAMES(CC1 CC2 CC3 CC4 CC5 CC6 CC7 CC8 CC9 CC10 CC11 CC12 CC13
           CC14 CC15 CC16 CC17 CC18 CC19 CC20 CC21 CC22 CC23 CC24 CC25)"
      IF RESTART = 'Y'
        THEN CCSTART = START
        ELSE CCSTART = CCN
      ROWCNT = 0
    END
RETURN

ABEND:
IF CCBATCH = 'Y'
  THEN
    DO
      SAY ZEDSMSG
      SAY ZEDLMSG
      SAY
      CCRESULT = 12
      ADDRESS ISPEXEC "VPUT (CCRESULT) SHARED"
      ADDRESS ISREDIT "END"
      EXIT
    END
  ELSE
    DO
      ADDRESS ISPEXEC "SETMSG MSG(ISRZ001)"
      EXIT 12
    END
