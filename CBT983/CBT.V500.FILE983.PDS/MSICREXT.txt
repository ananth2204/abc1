/* We first need rexx in comment if compiled or read from SYSPROC. */
rexx_msicrext:
  rexxpgm_version = "01.01"          /* Set with 'ver 1' and 'lev 2'. */

/* >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

=======================================================================

  Dataset: MSIC.PDS(MSICREXT)
  Contact: "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
  Syntax:  MSICREXT {input-pds} {output-ps} {,member-prefix}
           input-pds = Where the source is.
           output-ps = Where the IDTF records will end up.
           member-prefix = The leftmost matching prefix.
  Purpose: This code uses ISPF library services to gather selected
           members and creates a transmit command of all members
           matching the prefix.

    TRANSMIT ken COPYLIST PROLOG EPILOG NOLOG +
       NONOTIFY DATASET({input-pds}) +
       MEMBERS({,member-prefix}) +
       MSGDATASET('KTOMIAK.MSIC.PDS(XMIMSG)') +
       OUTDATASET({output-ps})

-----------------------------------------------------------------------

 History of Modifications
 ------------------------
vv.mm When     Who / What you did ... (Newest change at the top.)
----- -------- --------------------------------------------------------
01.00 20180123 KTOMIAK "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Moved message into this PDS.
               2) Corrected internal name and syntax.
----- -------- --------------------------------------------------------
01.00 20170714 KTOMIAK "Kenneth E. Tomiak"<CBT_Ken@KTomiak.BIZ>
               1) Original code.
----- -------- --------------------------------------------------------

=======================================================================

STANDARD GLOBAL DISCLAIMER
The author explicitly disavows any claim whatsoever about the
correctness or functionality of this program, and disclaims liability
for anything and everything bad that might happen in connection with,
before, during, or after using it.  I have tried to make it work right,
and I am personally pretty confident that it does, but everybody makes
mistakes, so if you use it, you do so at your own risk.

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< */

  Parse Arg input_pds output_ps members
  ADDRESS ISPEXEC "CONTROL ERRORS RETURN"
  return_code = 0
  say "Dataset:" input_pds
  ADDRESS ISPEXEC "LMINIT DATAID(DATAID)",
    "DATASET("input_pds") ENQ(SHR)"
  MYCC = RC
  IF (MYCC <> 0) THEN do
    say "Dataset:" input_pds "LMINIT failed, RC("mycc")."
    Return 16
  End
  allmbrs = ""
  maxpfx = Words(members)
  Do MX = 1 to maxpfx
    Say mx "=" Word(members, mx)
    extract = Strip(Word(members, mx),"T"," ")
    extractl = Length(extract)
    ADDRESS ISPEXEC "LMOPEN DATAID("DATAID")",
      "OPTION(INPUT) LRECL(MYRECLN)"
    MYCC = RC
    IF (MYCC > 0) THEN do
      say "Dataset:" input_pds "LMOPEN failed, RC("mycc")."
      Return 16
    End
    PDSMBR = ""
    mycc = 0
    function_rc = extract_members()
    ADDRESS ISPEXEC "LMMLIST DATAID("DATAID") OPTION(FREE)"
    ADDRESS ISPEXEC "LMCLOSE DATAID("DATAID")"
  End
  function_rc = normal_exit()
  Return 0

extract_members:
  do while (mycc = 0)
    ADDRESS ISPEXEC "LMMLIST DATAID("DATAID")",
      "MEMBER(PDSMBR) STATS(NO)"
    MYCC = RC
    If (MYCC = 8) THEN do
      return 0
    End
    If (Left(Pdsmbr, extractl) = extract) Then Do
      allmbrs = allmbrs Strip(PDSMBR,"T"," ")
    End
  End
  return 0

NORMAL_EXIT:
  ADDRESS ISPEXEC "LMFREE DATAID("DATAID")"

  maxmbrs = Words(allmbrs)
  line_pairs = maxmbrs % 5
  last_pairs = maxmbrs // 5
  if (last_pairs > 0) then line_pairs = line_pairs + 1
  say ""
  say "TRANSMIT Command:"
  say "-----------------"
  cmdtxt = "TRANSMIT ken COPYLIST PROLOG EPILOG NOLOG +"
  say cmdtxt
  queue cmdtxt
  cmdtxt = "NONOTIFY DATASET("input_pds") +"
  say cmdtxt
  queue cmdtxt
  If (allmbrs <> "") Then Do
    endtxt = " +"
    Do mx = 1 to line_pairs
      parse var allmbrs mbr1 mbr2 mbr3 mbr4 mbr5 allmbrs
      mbr1 = Strip(mbr1,"B"," ")
      mbr2 = Strip(mbr2,"B"," ")
      mbr3 = Strip(mbr3,"B"," ")
      mbr4 = Strip(mbr4,"B"," ")
      mbr5 = Strip(mbr5,"B"," ")
      If (mx = 1) Then Do
        cmdtxt = "MEMBERS("
      End
      If (mx = line_pairs) Then Do
        endtxt = ") +"
      End
      If (mbr2 <> "") Then mbr1 = mbr1", "
      If (mbr3 <> "") Then mbr2 = mbr2", "
      If (mbr4 <> "") Then mbr3 = mbr3", "
      If (mbr5 <> "") Then mbr4 = mbr4", "
      If (mx < line_pairs) then mbr5 = mbr5","
      cmdtxt = cmdtxt||mbr1||mbr2||mbr3||mbr4||mbr5||endtxt
      say cmdtxt
      queue cmdtxt
      cmdtxt = ""
    End
  End
  cmdtxt = "MSGDATASET('KTOMIAK.MSIC.PDS(XMIMSG)') +"
  say cmdtxt
  queue cmdtxt
  cmdtxt = "OUTDATASET("output_ps")"
  say cmdtxt
  queue cmdtxt
  cmdtxt = ""
  say cmdtxt
  queue cmdtxt
  cmdlen = Queued()
  Address MVS ,
    "EXECIO * DISKW TRANSMIT (Finis)"
  SAY "EXITING MICREXT."
  return return_code
