















         SSSS   UU  UU  PPPPP   RRRRR   DDDDD   UU  UU  MMM    MMM  PPPPP
        SSSSSS  UU  UU  PPPPPP  RRRRRR  DDDDDD  UU  UU  MM M  M MM  PPPPPP
        SS   S  UU  UU  PP  PP  RR  RR  DD  DD  UU  UU  MM M  M MM  PP  PP
        SS      UU  UU  PP  PP  RR  RR  DD  DD  UU  UU  MM M  M MM  PP  PP
        SS      UU  UU  PP  PP  RR  RR  DD  DD  UU  UU  MM  MM  MM  PP  PP
         SS     UU  UU  PPPPP   RRRRR   DD  DD  UU  UU  MM  MM  MM  PPPPP
          SS    UU  UU  PP      RRR     DD  DD  UU  UU  MM      MM  PP
           SS   UU  UU  PP      RR R    DD  DD  UU  UU  MM      MM  PP
           SS   UU  UU  PP      RR  R   DD  DD  UU  UU  MM      MM  PP
       S   SS   UU  UU  PP      RR  RR  DD  DD  UU  UU  MM      MM  PP
       SSSSSS   UUUUUU  PP      RR  RR  DDDDDD  UUUUUU  MM      MM  PP
        SSSS     UUUU   PP      RR  RR  DDDDD    UUUU   MM      MM  PP











                                                    RELEASE  3.3  01/21/93

                                                             MORRIS KARLIN
                                                            NORMAN LINDNER

      (C) COPYRIGHT JUNE 1984 BY M. KARLIN, N. LINDNER



                              SUPRDUMP                      Contents   i

                         TABLE OF CONTENTS
                                                     PAGE

             SUMMARY OF AMENDMENTS                     ii

             PREFACE                                   iv

             INTRODUCTION                               v

        1.   PROGRAMMING NOTES                        1-1

        2.   SYSTEM CONFIGURATION                     2-1

        3.   GUIDE TO SUPRDUMP FUNCTIONS              3-1

        4.   INSTALLATION PROCEDURES                  4-1

        5.   JCL AND PARM FIELD                       5-1

             5.1.  BLOCK COUNT PARAMETER              5-3
             5.2.  PRINT FORMAT PARAMETER             5-3
             5.3.  NUMBER OF FILES PARAMETER          5-5
             5.4.  GROUP LENGTH PARAMETER             5-6
             5.5.  SKIP PARAMETER                     5-6
             5.6.  TITLE PARAMETER                    5-6
             5.7.  DIAGNOSTICS PARAMETER              5-7

        6.   FILES                                    6-1

             6.1.  INPUT FILE - SYSUT1                6-1
             6.2.  OUTPUT PRINT FILE - SYSUT2         6-2
             6.3.  STATISTICS FILE - SYSPRINT         6-2
             6.4.  OUTPUT TAPE - TAPECOPY             6-3
             6.5.  OTHER FILES                        6-4
             6.6.  DIAGNOSTICS FILE - DIAGNOSE        6-4

        7.  EXAMPLES                                  7-1

        8.  MESSAGES                                  8-1

            8.1   NUMBERED MESSAGES                   8-1
            8.2   UNNUMBERED MESSAGES                8-11

        9.  APPENDIX A - QUICK REFERENCE CHART        A-1

       10.  APPENDIX B - TSO (ON-LINE) CONSIDERATIONS B-1

       11.  APPENDIX C - BIBLIOGRAPHY                 C-1

       12.  GLOSSARY                                  G-1

       13.  INDEX                                     I-1


                              SUPRDUMP                  Amendments     ii

                       SUMMARY OF AMENDMENTS

     RELEASE 3.3                                              01/21/93

       SUPRDUMP now provides a TSO/E ISPF/PDF  dialog  that allows on-line
       access to all SUPRDUMP  message text and explanations.

       The installation procedure has been enhanced and streamlined.

     RELEASE 3.2                                              09/09/92

       One output file has been added. The ddname is:
         DIAGNOSE-  Diagnostic output for all tape reads.

       An additional keyword parameter D= has  been  added to  control
       output directed to the DIAGNOSE file.

       Release 6.07 of SAS,  the  addition  of  three DD statements, and a
       region  of  at  least  2500K  are  now required to use the TAPECOPY
       function of SUPRDUMP.

     RELEASE 3.1                                              02/06/92

       SUPRDUMP now allows null (dummy) file  processing  for  tapes  when
       using non-standard label processing.

       Null or zero values are now allowed  in the PARM  parameters.  When
       null or zero is specified, the parameter takes its default value.

       If no R= parameter is coded in the PARM and the data set is  a disk
       or SL tape, the R parameter defaults to the data set LRECL.

       Message DMP027W has been added warning that  a tape file contains a
       block whose BLKSIZE exceeds 32K. This file can  not be processed by
       standard IBM access methods.

       This documentation has been enhanced and repaged.


                              SUPRDUMP                   Amendments  iii



     RELEASE 3                                                07/22/91

       An  additional subparameter, P,  has been added to the F= parameter
       (print format) to limit the number  of  characters printed for each
       block.

       SUPRDUMP now  allows multi-volume and concatenated file processing.
       Messages DMP025I and DMP026E have been added  in  support  of  this
       function.

       Support has been added for 3480 magnetic tape cartridge subsystems.

       The title from the T= parameter is now displayed on each page.

       SUPRDUMP is now an authorized program and must be installed  in  an
       APF-authorized library.

       Release 5.16 of SAS is required to use the TAPECOPY function.

       Message DMP040I has  been  enhanced,  giving more information about
       the disk or tape data sets that have been processed.

       Message DMP021I has been added giving the approximate  tape  length
       of each file processed. The approximate  total  tape  length of all
       processed tape files is also displayed in message DMP023I.

       Message DMP022I, listing the JOB name, the PROCSTEP  name  (if any)
       and the STEP name has been added.

       Message DMP024W has been  added  which  warns  that  an actual tape
       block count does not match the block count  in  the  trailer label.
       If such a tape data set were used in a program and read to the end,
       an ABEND (IEC210I 214-10) would occur.

       Numerous  editorial  changes  and  revisions  have been made to the
       documentation for these changes  and  for  clarity. This supersedes
       and  obsoletes  all  previous  editions of SUPRDUMP documentation.

     RELEASE  2                                               11/01/87

       The ability to copy tape-to-tape.

       One output file has been added. The ddname is:

         TAPECOPY-  The output tape which is an exact copy of SYSUT1.


                              SUPRDUMP                       Preface    iv

                                PREFACE

              This  publication  provides a full description of the use of
         the  utility  program  SUPRDUMP. A working knowledge of IBM OS/VS
         JCL is required to understand this publication.

              This publication consists of 13 parts:

                1. Programming  notes,  which  contain  coding conventions
                   used in coding the JCL and PARM statements.

                2. A  Guide  to  SUPRDUMP functions,  which is a  table of
                   parameters and  certain other file processing tasks.

                3. System Configuration, which provides a general overview
                   of system requirements.

                4. Installation  Procedures, which  provides  the  JCL  to
                   install the program SUPRDUMP.

                5. A general description of the SUPRDUMP PARM and the JCL.

                6. The input and output files used with SUPRDUMP.

                7. Examples.

                8. A complete listing of the messages produced by SUPRDUMP
                   and their meaning.

                9. Appendix A - A chart providing a quick reference  guide
                   to SUPRDUMP.

               10. Appendix B - TSO  considerations  for  users  executing
                   SUPRDUMP on-line rather than in batch mode.

               11. Bibliography.

               12. Glossary  of special  terms  used in the description of
                   the program operation.

               13. Index.


                              SUPRDUMP                      Introduction v

                               INTRODUCTION

              SUPRDUMP is an easy-to-use utility print program designed to

               ® copy an entire tape volume to one output tape volume

               ® print  datasets, in  whole  or in  part, from  any system
                 storage  device.

               ® show  the characteristics  of  all  data  sets  on a tape
                 volume, including  labels, formats (ASCII or EBCDIC)  and
                 tapemarks for tapes with blocksizes of up to 65535 bytes.

               ® show  the  position  and  attributes  of  files,  and the
                 position of tapemarks on tape volumes.

               ® print files in hex,  with simultaneous  interpretation of
                 each character in both ASCII and EBCDIC format.

              SUPRDUMP  is  parameter-driven, with the parameters coded in
         the  PARM  of  the EXECute statement. All parameters are keywords
         and all have defaults so that none need be explicitly specified.

              Information messages displayed by the program are

               ® PARM coded on the EXECute statement

               ® Jobname, Stepname and Procstepname of SUPRDUMP job & step

               ® output tape characteristics and a summary of copied files

               ® DSN  coded on the input file (SYSUT1) DD statement

               ® maximum block size in the file

               ® minimum block size in the file (excluding the last block)

               ® size of the last block on the file

               ® total number of bytes in the file

               ® total number of blocks in the file

               ® for tape, the  sequence  number  of the file on the tape,
                   the density, and the recording mode technique


                              SUPRDUMP                     Introduction vi

               ® serial number  of the volume containing the file

               ® change in BLKSIZE messages (with relative block number)

               ® RECFM and LRECL of each data set

               ® Creation and Expiration dates

               ® Approximate tape length of each tape file, and the
                   approximate total tape length of all processed files

              The SYSUT1 input file record formats may be fixed, variable,
         undefined, blocked, spanned, standard or any valid combination of
         these formats,  but  the  file must  be physical sequential.  The
         RECFM, LRECL and BLKSIZE of these files need not be known before-
         hand.  One  file  in  print  format (SYSUT2) is generated and one
         output tape volume may be created (TAPECOPY). The printout can be
         in any one  of five display  formats. Variable-length records can
         be  printed  in  readable  form.  It shows all bytes of the block
         including the BDW and the RDW if any.

              An  optional output file can  be coded to capture status and
         sense bytes from reads of tape/cartridge data sets.


                              SUPRDUMP               Programming Notes 1-1

                         ü1 PROGRAMMING NOTES

              The  formats of the parameters described in this publication
         and  the  notations used in the format descriptions are described
         below:

                1. Uppercase letters and words written in  uppercase  must
                   be  coded in  the  JCL  exactly  as  they appear in the
                   format descriptions. The following characters must also
                   be coded  exactly  as they appear in the descriptions:

                   ampersand      &
                   asterisk       *
                   comma          ,
                   equal sign     =
                   parentheses    ()
                   apostrophe     '

                2. Lowercase  letters,  words  and  symbols  appearing  in
                   the format description represent  variables  for  which
                   specific information is substituted when the  parameter
                   is coded.

                       For example, C=count is the format description  for
                   the C= parameter. When you code the C  parameter in the
                   PARM  field,  you  substitute  a  number for  the  word
                   "count"; e.g., C=44056.

                3. Brackets Ý¨ are a special notation and  are never coded
                   in  the  JCL or  the PARM field. Brackets indicate that
                   the enclosed item  or items are  optional  and you  can
                   code one or none of the items.

                       For example,  Ý,S=skip¨   is  part  of  the  format
                   description of the PARM field. When  you code the  PARM
                   field,  you can include  ,S=skip   in the PARM field or
                   omit it.

                4. Verticals | are a special notation and  are never coded
                   in  the  JCL or the PARM field. Verticals indicate that
                   only one of the items adjacent to the verticals may  be
                   coded. E. g., A|B|C|H|R means that either A, B, C, H or
                   R may be chosen as a value of the parameter.

                5. Braces »º  are a special  notation and  are never coded
                   in the JCL or the  PARM field.  Braces indicate that at
                   least one of the items in the  braces  must  be  coded.
                   E. g., F=»A|B|C|H|Rº means that if F= is coded,  either
                   A, B, C, H or R must be coded.


                              SUPRDUMP            System Configuration 2-1

                        ü2 SYSTEM CONFIGURATION

              The  program SUPRDUMP is designed for any IBM  MVS operating
         system.  Any tape, disk or unit record device allowed  on  an MVS
         operating system is compatible with the program SUPRDUMP.

              SUPRDUMP consists of one load  module which  requires 10K of
         core for the basic SUPRDUMP program, plus a dynamic allocation of
         64K. If the tape copy function is being  utilized, an  additional
         2500K is required.

              In  addition  to this core requirement, for disk files only,
         buffer  areas  are required for all input data sets. The size and
         number  of these areas vary, depending on the BLKSIZE of the data
         sets  and  the  BUFNO (the number of buffers assigned) parameters
         used.

              Additional core for buffers is required for  any  additional
         files (SYSPRINT, SYSUT2, DIAGNOSE) used.

              The  program  is  written  in  ASSEMBLER  Language  and  was
         assembled under ASSEMBLER H.

              The tape copy feature of SUPRDUMP  is available only if  the
         SAS software product Release 6.07 (distributed  by  SAS Institute
         Inc.,  Cary,  N. C. 27511)  is  installed  on the system. The SAS
         module invoked in SUPRDUMP is SAS370,  the entry module specified
         in the bundled MVS/370 non-LPA configuration of SAS.  This module
         is in the SAS load library.


                              SUPRDUMP            Guide to Functions  3-1

                    ü3 GUIDE TO SUPRDUMP FUNCTIONS

           _____________________________________________________________
          |          |                                        |         |
          |OPERATION |             DESCRIPTION                |PARAMETER|
          |__________|________________________________________|_________|
          |__________|________________________________________|_________|
          |          |                                        |TAPECOPY |
          | COPY     | an entire tape volume to one output    |   DD    |
          |          | tape volume                            |statement|
          |__________|________________________________________|_________|
          |          |                                        |DIAGNOSE |
          | DIAGNOSE | tape I/O read functions                |   DD    |
          |          |                                        |statement|
          |__________|________________________________________|_________|
          |          |                                        |         |
          | DISPLAY  | labels of tape files                   |  JCL    |
          |__________|________________________________________|_________|
          |          |                                        |         |
          | LIST     | data set attributes                    |automatic|
          |__________|________________________________________|_________|
          |          | sequential disk or tape files in       |         |
          |          |character and/or hex and/or ASCII format|F=format |
          | PRINT    |________________________________________|_________|
          |          | sequential disk or tape files with     |         |
          |          | IBM variable record format             |   R=V   |
          |          |________________________________________|_________|
          |          | a specified number of blocks from a    |         |
          |          | file                                   | C=nnn   |
          |          |________________________________________|_________|
          |          | a specified number of blocks           |         |
          |          | reading a tape file backwards          | C=-nnn  |
          |__________|________________________________________|_________|
          |MULTI-FILE| print from multiple files on           |         |
          |  READ    | single or multiple tape volumes        | N=nnn   |
          |__________|________________________________________|_________|
          |          | HEX to EBCDIC                          |   F=H   |
          | TRANSLATE| HEX to ASCII                           |   F=A   |
          |          | HEX to both ASCII and EBCDIC           |   F=B   |
          |__________|________________________________________|_________|


                              SUPRDUMP                   Installation  4-1

                       ü4 INSTALLATION PROCEDURE

              SUPRDUMP  is  distributed  as  7  files on either a standard
         labeled  6250 BPI  tape or 3480 cartridge.  File 1 contains a JCL
         PROC used to install the program and to print the documentation.

              File 2 is a  load  library  containing the SUPRDUMP module.

              The next three files contain the components  of the SUPRDUMP
         on-line  message  dialog  facility.  File  3  contains  the CLIST
         SUPRDMSG, which should be placed in  the SYSPROC concatenation of
         the LOGON PROC. File 4 contains the panel library and File  5 the
         message library of the dialog facility.  The SUPRDMSG CLIST (from
         File 3) must be modified  for  the names  used for  the libraries
         containing the panels and messages.

              File 6 contains a special character  set used  to  print the
         documentation and must  be placed  into  SYS1.IMAGELIB  with  the
         name XTB1MK11. It is invoked in JCL via the CHARS=MK11 parameter.
         File  7  is  the  documentation  itself.  A 3800-compatible laser
         printer is required to print the documentation. If such a printer
         is  not available, then comment out  the second COPY statement in
         the first  step (PGMLOAD) of the installation PROC.

              To use the TAPECOPY feature of SUPRDUMP, SAS607 must be
         installed.

              The first file may be  retrieved with the following JCL:

                   //PROCUNLD EXEC PGM=IEBGENER
                   //SYSUT1 DD DSN=SUPRDUMP.INSTALL,DISP=OLD,
                   //    UNIT=tape,VOL=SER=SUPRDP  <=== code tape unit
                   //SYSUT2 DD DSN=your.install.file,DISP=SHR
                   //SYSIN  DD DUMMY
                   //SYSPRINT DD SYSOUT=*


                              SUPRDUMP                   Installation  4-2

              Following is the JCL contained in the first tape file.

                   //SUPRDUMP PROC LOADLIB=,       PROGRAM LOAD LIBRARY
                   //   CMDPROC=,PANELIB=,MSGLIB=, CLIST, PANEL & MSG LIB
                   //   UNIT=,      CLASS FOR 6250 TAPE OR CARTRIDGE
                   //   SYSOUT=,    3800 LASER PRINT CLASS FOR DOC PRINT
                   //   CHARSET=MK11,     SPECIAL CHAR SET FOR DOC PRINT
                   //   COPIES=1          NO. OF COPIES OF DOCUMENTATION
                   //PGMLOAD EXEC PGM=IEBCOPY  LOAD THE SUPRDUMP PROGRAM
                   //SYSPRINT  DD SYSOUT=*
                   //IN        DD DSN=SUPRDUMP.PGM,    <=== LOAD MODULE PDS
                   //             UNIT=&UNIT,DISP=(OLD,PASS),
                   //             LABEL=(2,SL),VOL=(,RETAIN,SER=SUPRDP)
                   //OUT       DD DSN=&LOADLIB,DISP=SHR
                   //CLSTIN    DD DSN=SUPRDUMP.CLIST   <=== CLIST PDS
                   //             UNIT=&UNIT,DISP=(OLD,PASS),
                   //             LABEL=(3,SL),VOL=REF=*.IN
                   //CLSTOUT   DD DSN=&CMDPROC,DISP=SHR
                   //PNLIN     DD DSN=SUPRDUMP.PANEL,  <=== PANEL PDS
                   //             UNIT=&UNIT,DISP=(OLD,PASS),
                   //             LABEL=(4,SL),VOL=REF=*.IN
                   //PNLOUT    DD DSN=&PANELIB,DISP=SHR
                   //MSGIN     DD DSN=SUPRDUMP.MSG,    <=== MSG PDS
                   //             UNIT=&UNIT,DISP=(OLD,PASS),
                   //             LABEL=(5,SL),VOL=REF=*.IN
                   //MSGOUT    DD DSN=&MSGLIB,DISP=SHR
                   //CHARIN    DD DSN=SUPRDUMP.CHAR,   <=== CHAR SET
                   //             UNIT=&UNIT,DISP=(OLD,PASS),
                   //             LABEL=(6,SL),VOL=REF=*.IN
                   //CHAROUT   DD DSN=SYS1.IMAGELIB,DISP=SHR
                   //SYSUT3    DD UNIT=SYSDA,SPACE=(TRK,(2,2))
                   //SYSIN     DD *
                     COPY INDD=((IN,R)),OUTDD=OUT
                     COPY INDD=((CHARIN,R)),OUTDD=CHAROUT
                     COPY INDD=((CLSTIN,R)),OUTDD=CLSTOUT
                     COPY INDD=((PNLIN,R)),OUTDD=PNLOUT
                     COPY INDD=((MSGIN,R)),OUTDD=MSGOUT
                   //*
                   //DOCPRINT EXEC PGM=IEBGENER  PRINT THE DOC
                   //SYSPRINT  DD SYSOUT=*
                   //SYSUT1    DD DSN=SUPRDUMP.DOC,DISP=(OLD,KEEP),
                   //             UNIT=&UNIT,
                   //             LABEL=(7,SL),VOL=REF=*.PGMLOAD.IN
                   //SYSUT2    DD SYSOUT=&SYSOUT,CHARS=&CHARSET,
                   //             COPIES=&COPIES
                   //SYSIN     DD DUMMY
                   //      PEND


                              SUPRDUMP                  Installation   4-3


              Files 2 thru 7 are unloaded using the PROC retrieved  by the
         IEBGENER step. The PROC should be customized to your installation
         standards.  Execution  of  the  above  JCL  should produce a zero
         return code for each step.

         THE LOADLIB INTO WHICH THE SUPRDUMP MODULE IS LOADED MUST SPECIFY
         AN APF-AUTHORIZED LIBRARY.

              Note that  the  R  parameter has been specified in the  COPY
         control statements of the first (PGMLOAD) step above.  This  will
         cause any module in the corresponding libraries to be replaced by
         the modules being loaded from the installation tape. If there are
         any modules  with  these  names they  may be kept, if desired, by
         renaming them before running the installation procedure.

              The following table summarizes the attributes and contents
         of the installation tape files.

               _____________________________________________________________
               |FILE   | FILE   |  FILE  |   FILE   | FILE  | FILE   |FILE |
               |  1    |   2    |    3   |     4    |   5   |   6    |  7  |
      _________|_______|________|________|__________|_______|________|_____|
     | DSN(1)  |INSTALL|  PGM   | CLIST  |  PANEL   | MSG   | CHAR   | DOC |
     |_________|_______|________|________|__________|_______|________|_____|
     | RECFM   |  FB   |   U    |   FB   |    FB    |  FB   |   U    | VBA |
     |_________|_______|________|________|__________|_______|________|_____|
     | LRECL   |  80   |   -    |   80   |    80    |  80   |   -    | 148 |
     |_________|_______|________|________|__________|_______|________|_____|
     | BLKSIZE | 3120  | 23476  |  3120  |   3120   | 3120  | 23476  |4096 |
     |_________|_______|________|________|__________|_______|________|_____|
     | SPACE(2)|   1   |   2    |    1   |     5    |   1   |   1    | 14  |
     |_________|_______|________|________|__________|_______|________|_____|
     | DIR BLKS|   -   |   2    |    1   |    15    |   1   |   1    |  -  |
     |_________|_______|________|________|__________|_______|________|_____|
     |         |       |        |        | DMPnnn(x)|       |        |     |
     | MEMBER  |       |SUPRDUMP|SUPRDMSG| DMPH001/2|DMPMS00|XTB1MK11|     |
     |  NAMES  |       |        |        | DMPMAIN  |       |        |     |
     |_________|_______|________|________|__________|_______|________|_____|

       Notes: (1) The high level qualifier on all dsns is SUPRDUMP.
              (2) All space requirements are in tracks on 3380 DASD.


                              SUPRDUMP                 JCL and PARM    5-1

                 ü5 DESCRIPTION OF JCL AND PARM FIELD

              The  JCL  required  to  run the program consists of one EXEC
         statement and as many of the DD statements described below as are
         necessary for dump, diagnose  and/or  copy  operations.  The  JCL
         statements needed as the minimum required for  creating  SUPRDUMP
         as a PROC are statements 1 (coded without a PARM), 3 and 6.

         Ý 1¨ //stepdmp EXEC PGM=SUPRDUMPÝ,PARM='parameters'¨          REQ
         Ý 2¨ //STEPLIB   DD DSN=loadlib,DISP=SHR
              //          DD DSN=sas.loadlib,DISP=SHR
         Ý 3¨ //SYSPRINT  DD SYSOUT=output print class                 REQ
         Ý 4¨ //SYSUDUMP  DD SYSOUT=output print class
         Ý 5¨ //SYSUT1    DD Sequential input file                     REQ
         Ý 6¨ //SYSUT2    DD SYSOUT=output print class                 REQ
         Ý 7¨ //TAPECOPY  DD Output tape volume
         Ý 8¨ //CONFIG    DD SAS options files
         Ý 9¨ //SASHELP   DD SAS help file
         Ý10¨ //SASMSG    DD SAS message file
         Ý11¨ //DIAGNOSE  DD diagnostics file

         Ý 1¨  This  statement  is always required. The PARM field for the
               program is as follows:

               PARM='ÝC=ÝÆ¨cnt¨Ý,F=»A|B|C|H|RºÝL|P¨¨Ý,N=files¨
                    Ý,S=skip¨Ý,R=»leng|Vº¨Ý,T=title¨Ý,D=diagrecs¨'

              The  PARM  consists  entirely of optional keyword parameters
         which  may  be entered in any order. If a parameter is not coded,
         the  comma  associated  with  that  parameter must be omitted. No
         spaces are permitted in the PARM except in the title.  Individual
         PARM parameters are described in Sections 5.1 through 5.7.

         Ý 2¨  This  DD statement is required  if the  program load module
               is not in an automatically searched load module library and
               a JOBLIB DD statement has not been  included  in  the  JCL.
               loadlib is the PDS in which the load module of SUPRDUMP  is
               a member.
               If the TAPECOPY DD statement is coded then the SAS  loadlib
               containing   the   SAS370  load  module  may  have  to   be
               concatenated to STEPLIB DD statement if sas.loadlib  is not
               an automatically called library.

         Ý 3¨  See section 6.3.

         Ý 4¨  For program/system ABENDS, SYSUDUMP provides a system dump.
1                             SUPRDUMP                   JCL and PARM  5-2


         Ý 5¨  See section 6.1.

         Ý 6¨  See section 6.2.

         Ý 7¨  See section 6.4.

         Ý 8¨  See section 6.4

         Ý 9¨  See section 6.4

         Ý10¨  See section 6.4

         Ý11¨  See section 6.6

         NOTE: DD statements which should not be coded, unless the user is
               familiar  with  SAS  or message DMP020E  is  produced,  are
               FT11F001, FT12F001, WORK and SYSIN. See ü6.4  and  the  SAS
               User's Guide for more details.


                              SUPRDUMP                   JCL and PARM  5-3


                ü5.1 BLOCK COUNT PARAMETER          ,C=

              This parameter specifies the number of blocks  to be printed
         from  each  file  processed.  It  may  be null, or a one to eight
         character number from 0 to 99999999 with leading zeros permitted.
         However, the first character may be a minus or plus sign  instead
         of numeric. If not coded, or if null  or  zero,  the  default  is
         used.

              The default prints  all  the  blocks of each file processed;
         i.e., the entire  data  set,  starting  after the  skip parameter
         (if that is coded), is printed.

              If no sign or a minus sign is coded, the  program  reads  to
         the end of the file to get the block sizes and the block count.

              When  the  minus  sign is coded, multiple input tape volumes
         may be specified  only  when  Standard  Label  (SL) processing is
         specified. Concatenated  DD  statements may  not be coded.  Files
         with variable length records may  not  be specified, 7-track tape
         with data conversion may not be specified  and the parameter N is
         ignored if coded.

              With  a  negative  count,  a tape file is opened and printed
         starting from the end of the input file. The blocks of the SYSUT2
         file  will be in reverse order from those of SYSUT1. Care must be
         taken in interpreting the program messages.

              If  a  plus  sign is coded, the program will stop processing
         each file after the specified  number  of blocks of the file have
         been printed. Thus, the  block  count,  the  maximum  and minimum
         block sizes  and the total  number  of  bytes  apply only  to the
         blocks that have been read up to that point.


                 ü5.2 PRINT FORMAT PARAMETER       ,F=

              The Format parameter specifies the type of printout; whether
         EBCDIC or ASCII translated data, with or without HEX, ruler or no
         ruler  line  under  each  text group. The second character of the
         format parameter indicates either that printer control characters
         occurring  in  the data will not be translated to blanks, or that
         a  partial  block printout is requested.  If the F=format  is not
         coded or  is  null,  the  default  is  C,  with control character
         translation.



                              SUPRDUMP                 JCL and PARM    5-4

              Two   positional   sub-parameters  may  be  coded  for  this
         parameter.  The  first  may be either A, B, C, H or R; the second
         may be L or P.

              If F=C is coded, the blocks are printed with character lines
         only.  The  characters  are the EBCDIC representation of the data
         bytes. F=C is the default.

              If  F=R  is  coded,  the blocks are printed in groups of two
         lines.  The  first line contains the EBCDIC representation of the
         data  bytes.  The  second  line  is a ruler line for ease of data
         location in the printout.

              If  F=H  is  coded, the blocks are printed in groups of four
         lines.   The  first  line  of  each  group  contains  the  EBCDIC
         representation  of  the  data  bytes.  The second and third lines
         contain  the  vertical  hex representation of the data bytes, and
         the fourth line is the ruler line.

              If  F=A  is  coded, the blocks are printed in groups of four
         lines.  The first line of each group contains the ASCII character
         representation  of  the  data  bytes.  The second and third lines
         contain  the  vertical  hex representation of the data bytes. The
         fourth line is the ruler line.

              If  F=B  is  coded, the blocks are printed in groups of five
         lines.  The first line of each group contains the ASCII character
         representation  of  the data bytes. The second line of each group
         contains  the  EBCDIC character representation of the data bytes.
         The   third   and   fourth   lines   contain   the  vertical  hex
         representation  of  the  data  bytes. The fifth line is the ruler
         line.

              If  L  is  not  coded  as  a  second  subparameter in the F=
         parameter, all print characters with  hex values less than  X'40'
         are translated  to  X'40' before they are output. This means that
         the output  can  go  to  any  type  of  printer, including  those
         that recognize and act on carriage control characters anywhere in
         the  print  record (e.g., remote terminals). If L is coded as the
         second suboption, no character translation to hex X'40' occurs.

              If L is coded the printout should be routed only to printers
         which  recognize carriage control characters in the first byte of
         the print record line only (e.g., 3211, 3800, etc).

             If P is coded as the second subparameter of the F= parameter,
         only the number of characters specified by the  R=  parameter are
         printed for each block requested by the C= parameter.

              If  either  L  or  P  is  coded, the first suboption must be
         explicitly coded.

                              SUPRDUMP                   JCL and PARM  5-5

                ü5.3 NUMBER OF FILES PARAMETER     ,N=

              The  N=nnn  parameter specifies the number of files from the
         input tape(s)  that are to be printed. nnn may be omitted or must
         be a 1 to 8 digit number  and have a value of from 0 to 99999999.
         Leading zeroes may be used. If N= is not coded, or is null, or if
         nnn is zero, the default N=1 is used. A value of nnn greater than
         1 is valid only for BLP-processed tapes  in  forward  read  mode;
         otherwise  the default N=1 is used.

              If  N is greater than 1 the parameters specified in the PARM
         apply to all tape files read  by  the program.  The file sequence
         number is  printed  as  part  of  the  title,  starting  with the
         second data set  read, and  the tapemark number is printed on the
         tapemark indicator.

              If  BLP  is coded in the LABEL parameter of  the  SYSUT1  DD
         statement, the  file sequence number specified  is interpreted as
         the physical position of the file on the  tape;  e.g.,  LABEL=(4,
         BLP) means that the program will dump N files starting  with  the
         one before the fourth tapemark on the first volume. With multiple
         volumes,  if  N  is  not  satisfied,  the  program  will continue
         with the first physical data set  on  the next and, if necessary,
         any following volumes.

              If, before the N count is satisfied in  a forward read mode,
         two consecutive  tapemarks are encountered,  or  an 80-byte block
         containing  "EOV1" in  its  first four bytes (end-of-volume label
         record) had been read  and  a following tapemark  is encountered,
         end-of-volume processing will print an end of volume message.  If
         this is  the last volume, the program will halt.  If more volumes
         are  specified,  the program  will  continue and process the next
         volume.

              End-of-volume processing is NOT triggered if two consecutive
         tapemarks are encountered immediately following an  80-byte block
         containing "HDR1" in its first four bytes (header  label record).
         This  situation  is  interpreted  as  a  null  (dummy)  file, and
         processing will continue past the two consecutive tapemarks.

              In general, it is best to code the N= parameter when reading
         an  unknown tape. A good value would be  3 times  the  number  of
         expected data files.


                              SUPRDUMP                 JCL and PARM    5-6


                  ü5.4 GROUP LENGTH PARAMETER     ,R=

              The  number  of characters in each group of lines printed is
         determined by the R=length parameter. This may be null,  or  must
         be a 1 to 8 digit number  and have a value of from 0 to 99999999.
         Leading zeroes may be used.

              If no R= is coded, or if R= is null or zero,  the  LRECL  is
         used for files on disk or on standard label (SL) tapes. A default
         of 100 is used for all other data sets or when LRECL=0 (e.g. when
         RECFM=U).

              If  R  greater  than  100  is  specified,  the group will be
         printed  as  two or more sets of lines with the maximum number of
         characters in any line equal to 100.

              If R=V is specified, SUPRDUMP tests the file for a  variable
         length  record  format  by checking that the first four bytes  of
         each block of data is a valid BDW (block descriptor word)  and is
         equal to the number of bytes read.  If this criterion is not met,
         SUPRDUMP will issue a warning message and will default  to  R=100
         (unless the  data is JCL, i.e., the first two bytes of  the  data
         set are "//", in which case it will default to R=80).

              If  the file has a variable length record format, the length
         of  each  character  group  printed will be determined by the RDW
         (Record Descriptor Word) of each record in the block.

                   ü5.5 SKIP PARAMETER           ,S=

              The  S=skip parameter specifies the number of blocks of data
         to be skipped before printout is to start, where skip is a number
         from 0 to 99999999. If S= is not coded or is coded  as null,  the
         default of zero is taken.  If the skip parameter is equal  to  or
         greater than the total number of blocks in the data set,  no data
         will be printed. This applies to each file processed.

                   ü5.6 TITLE PARAMETER          ,T=

              The  T=title  parameter  puts  the value of 'title' on every
         page  of  the printout. The title may be up to 65 characters long
         and  may  consist  of  any  of  the 256 hex characters except the
         EBCDIC comma (X'6B'). The default, if T is not coded or is  coded
         as null, is to print no title. If a quote (X'7D') or an ampersand
         (X'50') is to be  coded in the title, two consecutive  quotes  or
         ampersands must be included in "title".

                              SUPRDUMP                   JCL and PARM  5-7


                   ü5.7 DIAGNOSTICS PARAMETER    ,D=

              The  D=nnn parameter allows the user to control  the  number
         of diagnostic records output to the DIAGNOSE file.  D= is ignored
         if the input file is not a tape.  nnn indicates  that  the  first
         nnn reads  issued against  the input tape will produce diagnostic
         records in the DIAGNOSE file.  When  multiple files are processed
         nnn  diagnostic records records  will  be  written for each file.
         For a description of the diagnostic records see section 6.6.

                              SUPRDUMP                          Files  6-1

                       ü6   FILES

                       ü6.1 INPUT FILE - SYSUT1

              A physical sequential input file must always be specified in
         the DD statement SYSUT1 in the JCL.

             With standard label processing, multi-volume data sets may be
         specified by multiple serial number specification in the VOL=SER=
         parameter,  or  by  concatenation of  DD statements in SYSUT1. If
         concatening DD statements, UNIT=AFF=SYSUT1 should be used in  the
         second and succeeding DDs  to  prevent  multiple tape drives from
         being allocated.

              Multiple data sets, on one or more tape volumes, may be read
         by SUPRDUMP, since the program does not use a standard IBM access
         method  for  tape.  They  are  read  by  coding the  N=n  (n > 1)
         parameter of the PARM and coding LABEL=(m,BLP,...) in the  SYSUT1
         DD statement.

              To print a tape label file, code LABEL=(n,BLP) in the SYSUT1
         DD statement, where n is the label data set position on the tape.

              When a SYSUT1 DD statement contains the BLP label type sub-
         parameter for a tape file, no  DD statements may be concatenated
         to it. To process multiple volumes, code VOL=SER=(aaaaaa,bbbbbb,
         ...) in the SYSUT1 DD statement.

              When CA-1  (Tape  Management System)  is installed, printing
         multiple  data  sets will require an operator volume verification
         for each data set  printed.  Code EXPDT=98000  in  the  JCL LABEL
         parameter to prevent these verification prompts to the console.

              If  the  label  type  is  other than BLP, the N parameter is
         ignored and its default of 1 is taken.

              The record format (RECFM) may be fixed, variable, undefined,
         spanned, standard or any valid combination thereof.

              SUPRDUMP can read tape blocks that are  up  to  65,520 bytes
         long. Files whose  BLKSIZE  exceed  32K  are  flagged  by message
         DMP027W warning  the  user  that  they  are  not  processable  by
         standard IBM access methods.

              DISP  and  file name identification (DSN, *, DATA, etc.) are
         always  required in the SYSUT1 DD statement. For tape files,  the
         DCB parameters RECFM, LRECL, and BLKSIZE are ignored if coded.

              If  the same tape volume is used in multiple steps to access
         multiple  files, the RETAIN subparameter of the JCL VOL parameter
         should be coded in all steps except the last.


                              SUPRDUMP                          Files  6-2

              In a multi-step job, when changing the JCL LABEL  label type
         subparameter on tape volume files in different steps  (e.g.  when
         switching from SL to BLP processing) the VOL=REF= parameter  must
         not be coded. If the tape volser was known before  the  job, then
         it  must  be  explicitly coded (e.g., in a VOL=SER= parameter) in
         the steps with different label values, and neither DISP=PASS  nor
         VOL=REF= can be used.  If the tape is created in the job, it must
         be catalogued to be  used in a subsequent step with  a  different
         label type.  If it cannot be catalogued, a separate job  must  be
         run to use SUPRDUMP.

              If C=-nn is coded  for an  input tape file, it is opened and
         read backwards.

              For disk files, SUPRDUMP uses standard IBM  access  methods.
         DCB information is not required.

              To dump the directory of  a PDS (partitioned data set), code
         the PDS name  (without a member name)  on the SYSUT1 DD statement
         together with DCB=(RECFM=F,LRECL=256,BLKSIZE=256).

              To dump  an  OS  CVOL, code  DSN=SYSCTLG  on  the  SYSUT1 DD
         statement together  with  a  UNIT and VOLSER parameter specifying
         where the catalog resides.

                      ü6.2 OUTPUT PRINT FILE - SYSUT2

              The  program  generates a  physical  sequential output file,
         SYSUT2.  Its DCB  attributes  are  predefined  in  the program as
         RECFM=FBA,LRECL=133,BLKSIZE=4788.  If the SYSUT2 DD statement  is
         not coded in the JCL, it is dynamically allocated as SYSOUT=*.

              SYSUT2  is  a  printout  of  the  data blocks of the file(s)
         requested. Printing of a given file stops when the count has been
         satisfied or at the end of the file. The bytes of the blocks that
         are printed  include the  BDWs  and  the  RDWs of variable record
         format files.

              SYSUT2   also   contains  an  indication  of  each  tapemark
         encountered by the program.

              SYSUT2  may  be  directed to any system device. The contents
         and  format  of SYSUT2 depend on the parameters coded in the  JCL
         PARM field.

                           ü6.3 SYSPRINT

              SYSPRINT  is  the  SUPRDUMP  message  print file. The DCB is
         coded in the  program  as  RECFM=FBA,LRECL=133,BLKSIZE=4788.  All
         program messages, statistics, file characteristics, etc. are out-
         put to this file. If SYSPRINT is not coded in the  JCL it will be
         dynamically allocated as SYSOUT=*.


                              SUPRDUMP                           Files 6-3


                      ü6.4 OUTPUT TAPE - TAPECOPY

              This  output  tape  is  optional and is only created if a DD
         statement containing the ddname TAPECOPY is specified in the JCL.
         It must not be specified, however, if the  SAS software  product,
         Release 6.07 is  not installed  on  your  system.  This  DD  must
         specify a  tape  volume and the  input DD (SYSUT1) must also be a
         tape volume.  The input may be  standard  labeled or  nonlabeled.
         The output tape will contain an exact physical copy  of the input
         tape volume (except as noted below).

              It is recommended that the LABEL=(,BLP) parameter  be  coded
         on the TAPECOPY DD statement. This allows the system to determine
         whether the output tape volume is to be standard labeled or  non-
         labeled depending on whether the input tape  volume  is  standard
         labeled  or nonlabeled. If the input volume is  standard labeled,
         then the VOL header label will not be copied to the  output  tape
         volume if the output volume has been initialized  by  IEHINITT or
         an equivalent tape initialization program (i.e. the output volume
         will retain its own VOL header label). However, the remainder  of
         the label records will be copied (i.e. the fields containing  the
         DSN, creating job/step, etc. are copied).

              All physical files and tapemarks on the input volume will be
         copied to the output tape volume. Note, however, that the BLKSIZE
         of any physical record (block) on the output tape  volume  cannot
         exceed 32,767. Input  blocks  containing  more  than 32,767 bytes
         will be truncated to 32,767  on the output volume.

              When the TAPECOPY DD statement is specified, along with  the
         normal SUPRDUMP messages, SAS messages summarizing the tape  copy
         operation will also appear in a separate listing. These  messages
         will include the first 80 bytes of the first  10  blocks of  each
         physical file copied.

              The TAPECOPY DD may necessitate concatenating an  additional
         library to the  STEPLIB DD statement in  the  JCL.  See section 5
         JCL statement Ý2¨   for details.

              When TAPECOPY is used, a region  of 2500K or greater must be
         specified.

              When the tape copy feature is invoked  by coding  the DDNAME
         TAPECOPY, three more DD statements must be coded.  The  DD  names
         are  CONFIG,  SASMSG  and  SASHELP.  See the SAS User's Guide for
         details on coding these DDs.


                              SUPRDUMP                          Files 6-4


                      ü6.5 OTHER FILES - FT11F001 FT12F001 WORK SYSIN

             When the tape copy function is invoked by coding the TAPECOPY
         DD statement 4 other files are dynamically allocated by SUPRDUMP.
         This action is transparent to the user and he need have no  know-
         ledge of these files. However, anyone familiar with the SAS soft-
         ware product may wish to code these files, thereby overriding the
         dynamic allocation of SUPRDUMP.  In particular,  one  may wish to
         specify one's own SYSIN  control statements customizing  the tape
         copy operation to a particular application.


                      ü6.6 DIAGNOSE FILE

             The  DIAGNOSE file  is used primarily for debugging purposes,
         to diagnose a tape drive or reel/cartridge problem.  The DIAGNOSE
         DD statement  is  ignored if the input (SYSUT1) is not on a tape.
         The diagnostic  records consist  of data returned to the SUPRDUMP
         program  as a result of a SENSE command issued after a tape READ,
         and the unit and channel status bytes following the READ command.
         The  diagnostic  record  consists of 40 bytes.  For non-cartridge
         tapes  the  first  24 bytes contain SENSE information, the next 8
         bytes have  no  meaning, the next 2 byte are the unit and channel
         status  (from  the  channel-status word (CSW) in the input/output
         block (IOB))  as  the  result of the READ command, and the last 6
         bytes contain  a  sequence  number in packed decimal format.  For
         cartridge tapes,  the  first  32  bytes contain SENSE information
         followed by the 2-byte unit and channel status and then an 6-byte
         packed sequence number.

              For a detailed description of the SENSE information returned
         see  the  IBM  3420  Magnetic  Tape  Subsystem Descriptions  (for
         non-cartridge  tapes)  and  the  IBM 3480 Magnetic Tape Subsystem
         Reference  (for  cartridge  tapes). For a detailed description of
         the unit and channel status information see the IBM Principles of
         Operation  in conjunction with the above specific device manuals.
         The  6-byte  sequence number  is reset to zero when a new file is
         processed in a multi-file processing option (i.e., when N=m,
         with m greater than 1).

              The  DIAGNOSE file may be a disk or tape dataset or may be a
         SYSOUT  file. When routed to a SYSOUT file the diagnostic records
         are printed in vertical hex format (similar to format F=H without
         an EBCDIC representation  of  the data bytes printed (see section
         5.2).  A JCL  DCB  BLKSIZE  parameter must always be coded on the
         DIAGNOSE DD statement.  When  the  file  is routed to SYSOUT, the
         BLKSIZE must be a multiple of 80.  When  routed to a disk or tape
         it must be a multiple of 40.


                              SUPRDUMP                     Examples  7-1


                      ü7 EXAMPLES

         The  following  examples are valid for sequential input files,
         SYSUT1. The SYSUT1 DD statement is not shown in examples 1-12.


          EXAMPLE 1 - Print an entire file in 100 byte groups, character
                         format with no title.

         //S1     EXEC  SUPRDUMP


          EXAMPLE 2 - Same as Ex. 1 except print in groups of 250 bytes.

         //S1     EXEC  SUPRDUMP,PARM='R=250'


          EXAMPLE 3 - Same as Ex. 2 but skipping the first 10 blocks of
                         data.

         //S1     EXEC  SUPRDUMP,PARM='R=250,S=10'


          EXAMPLE 4 - Same as Ex. 3 except print only 15 blocks.

         //S1     EXEC  SUPRDUMP,PARM='R=250,S=10,C=15'


          EXAMPLE 5 - Same as Ex. 4 but with a title.

         //S1     EXEC  SUPRDUMP,PARM='R=250,S=10,C=15,T=title'


          EXAMPLE 6 - Same as Ex. 4 but in character & ruler line format.

         //S1     EXEC  SUPRDUMP,PARM='R=250,S=10,C=15,F=R'


          EXAMPLE 7 - Same as Ex. 4 but in EBCDIC character & HEX format.

         //S1     EXEC  SUPRDUMP,PARM='R=250,S=10,C=15,F=H'


          EXAMPLE 8 - Same as Ex. 4 but in ASCII character and HEX format.

         //S1     EXEC  SUPRDUMP,PARM='R=250,S=10,C=15,F=A'


          EXAMPLE 9 - Same as Ex. 4 but in both ASCII and EBCDIC character
                         and HEX format.

         //S1     EXEC  SUPRDUMP,PARM='R=250,S=10,C=15,F=B'


                              SUPRDUMP                      Examples  7-2



          EXAMPLE 10 - Same as Ex. 8 without  carriage  control  character
                       suppression.

         //S1     EXEC  SUPRDUMP,PARM='R=250,S=10,C=15,F=AL'


          EXAMPLE 11 - Same as Ex. 7 but printout for IBM variable  format
                       records.

         //S1     EXEC  SUPRDUMP,PARM='R=V,S=10,C=15,F=H'


          NOTE: if the input file is not a variable format the R parameter
                defaults to 100 (or 80 if the data is JCL).


          EXAMPLE 12 - Same as Ex. 4 but stop processing  after  C and S
                       parameters have been satisfied (after 25 blocks).

         //S1     EXEC  SUPRDUMP,PARM='R=250,S=10,C=+15'


         The following examples are valid only for files residing on tape.

          EXAMPLE 13 - Print 12 blocks of data from tape starting from the
                      end of the third logical data set on a labeled tape.

         //S1     EXEC  SUPRDUMP,PARM='C=-12'
         //SYSUT1 DD    Input tape file,...,LABEL=(3,SL)


          EXAMPLE 14 - Print the first three blocks of data from the first
                       five physical files on a tape.

         //S1     EXEC  SUPRDUMP,PARM='N=5,C=3'
         //SYSUT1 DD    Input tape file,...,
         //      LABEL=(1,BLP,EXPDT=98000)

           Note: EXPDT=98000 is installation dependent. It may be required
                 for installations using the CA-1 tape management  package
                 if BLP is coded or for an outside tape.

          EXAMPLE 15 - Print the first three blocks of data from  the  6th
                       through the 10th physical files on  a tape (labeled
                       or unlabeled).

         //S1     EXEC  SUPRDUMP,PARM='N=5,C=3'
         //SYSUT1 DD    Input tape file,...,
         //      LABEL=(6,BLP,EXPDT=98000)


                              SUPRDUMP                     Examples  7-3


          EXAMPLE 16 - Print all the blocks from the first physical file
                       on a labeled tape; blocks  5,  6 and  7  from the
                       eighth, all blocks from the fourth, and  the last
                       eight blocks from the fifth.

         //S1     EXEC  SUPRDUMP,PARM='R=80,F=R'
         //SYSUT1 DD    Input tape file,...,
         //      LABEL=(1,BLP,EXPDT=98000),DISP=OLD,
         //      VOL=(,RETAIN,SER=000100)
         //*  THE ABOVE IS AN 80 CHARACTER LABEL DATA SET
         //****************************************************
         //S2     EXEC  SUPRDUMP,PARM='R=80'
         //SYSUT1 DD    Input tape file,...,
         //      LABEL=(4,BLP,EXPDT=98000),DISP=OLD,
         //      VOL=(,RETAIN,SER=000100)
         //*  THE ABOVE IS ANOTHER 80 CHARACTER LABEL DATA SET
         //****************************************************
         //S3     EXEC  SUPRDUMP,PARM='R=V,F=H,S=4,C=3'
         //SYSUT1 DD    Input tape file,...,
         //      LABEL=(8,BLP,EXPDT=98000),DISP=OLD,
         //      VOL=(,RETAIN,SER=000100)
         //*  THE ABOVE IS A VARIABLE FORMAT DATA SET
         //****************************************************
         //S4     EXEC  SUPRDUMP,PARM='R=V,C=-8'
         //SYSUT1 DD    Input tape file,...,
         //       LABEL=(5,BLP,EXPDT=98000),DISP=OLD,
         //       VOL=(,RETAIN,SER=000100),
         //*  IF THE ABOVE IS NOT VARIABLE THEN R=100 IS USED
         //*************

         NOTE: Datasets 1 and 4 are label datasets;  5 and 8  are  assumed
         variable datasets. NOTE: To ensure that the  tape volume  is kept
         mounted between steps, RETAIN may be coded in the VOL parameter.

                               SUPRDUMP                   Examples   7-4



            EXAMPLE 17 - Print 2 blocks in hex format from the  9 physical
                         data sets on a tape; copy the entire input volume
                         to a tape volume described in TAPECOPY DD.

         //S1     EXEC  SUPRDUMP,PARM='F=H,N=9,T=TAPECOPY,C=+2',
         //           REGION=2500K
         //STEPLIB DD   DSN=sas.loadlib,DISP=SHR
         //SYSUT1  DD   DSN=INPUT.TAPE,UNIT=T6250,DISP=OLD,
         //      LABEL=(1,BLP),VOL=SER=000100
         //TAPECOPY  DD DSN=OUTPUT.TAPE,UNIT=T6250,
         //        LABEL=(1,BLP,RETPD=3),DISP=(,KEEP)
         //CONFIG  DD   DSN=sas.config.file,DISP=SHR,
         //        DD   DSN=sas.my.config.file,DISP=SHR
         //SASHELP DD   DSN=sas.helpfile,DISP=SHR
         //SASMSG  DD   DSN=sas.message.file,DISP=SHR

         NOTE: For a tape copy operation, the REGION  parameter should  be
         coded with at least 2500K. Also, a STEPLIB is  coded  pointing to
         the SAS loadlib. To allow the system to decide whether the output
         tape volume  should be  labeled  or  nonlabeled, LABEL=(,BLP) has
         been coded on the TAPECOPY  DD statement.  Finally, even though a
         DSN has been coded on TAPECOPY the program will nevertheless copy
         the DSN from the input  tape  volume header (if it exists) to the
         output tape volume header label.


            EXAMPLE 18 - Print all labels  and  the first 100 bytes of the
                         first 5 blocks of each data set  on  tape  volume
                         111111.

         //S1     EXEC SUPRDUMP,PARM='R=100,F=CP,N=3,C=5,T=PARTIAL PRINT'
         //SYSUT1 DD DSN=MYTAPE,UNIT=T6250,DISP=(OLD,KEEP),
         //          LABEL=(1,BLP,EXPDT=98000),
         //          VOL=SER=111111


            EXAMPLE 19 - Print three blocks from all  datasets on two tape
                         volumes.  It  is  assumed  that there are no more
                         than 90 data sets on the two volumes.

         //S1     EXEC SUPRDUMP,PARM='R=100,F=C,N=90,C=3,T=MULTIVOLUME'
         //SYSUT1 DD DSN=MYTAPE,UNIT=T6250,DISP=(OLD,KEEP),
         //          LABEL=(1,BLP,EXPDT=98000),
         //          VOL=SER=(111111,222222)

         NOTE:  N=90  means  that  up  to  30  labeled  data  sets  can be
         displayed. The job will stop when 90 files have been processed or
         at the end of the second volume, whichever occurs first.


                               SUPRDUMP                  Examples     7-5


            EXAMPLE 20 - Print 100 blocks from two concatenated  tape data
                         sets. The data sets have different DSNs, but  the
                         same DCB attributes.

         //S1     EXEC SUPRDUMP,PARM='R=100,F=C,C=100,T=CONCATENATION'
         //SYSUT1 DD DSN=MYTAPE,UNIT=T6250,DISP=(OLD,KEEP),
         //          VOL=SER=(111111)
         //       DD DSN=YOURTAPE,UNIT=AFF=SYSUT1,DISP=(OLD,KEEP),
         //          VOL=SER=(222222)

         NOTE:  Only files processed as standard label (SL) files  may  be
         concatenated.

            EXAMPLE 21 - Print all blocks from a tape file. Produce
                         diagnostic records for the first 100 read
                         operations issued against this tape.

         //S1     EXEC SUPRDUMP,PARM='F=C,D=100'
         //SYSUT1   DD DSN=MYTAPE,UNIT=T6250,DISP=(OLD,KEEP),
         //          VOL=SER=(111111)
         //DIAGNOSE DD SYSOUT=A,
         //          DCB=BLKSIZE=8000


                              SUPRDUMP                    Messages     8-1

                              ü8 MESSAGES


              During the execution of SUPRDUMP four  types of messages are
         output  to  the  SYSPRINT file. These are informational, warning,
         error messages, and SAS tape copy messages.

              Informational  messages  describe requested conditions, file
         attributes, statistics and similar information.

              Warning messages describe incorrect or missing parameters in
         the PARM field or JCL. The program, however, attempts  to correct
         the  errors and generate correct parameter  values.   Tape  label
         problems may also produce warning messages.

              Error messages describe conditions  that  caused the program
         to halt before completion.

              SAS messages which are  output  to the FT11F001 file are not
         described here but may be  found in the appropiate SAS manual.

              If  only informational and warning messages have been issued
         by SUPRDUMP,  a  completion code of 0 is returned. Error messages
         are  accompanied by various completion codes; 8, FF, system abend
         codes and SAS error return codes.  8 means an error was  detected
         that caused program execution to halt. FF means the SYSPRINT file
         could not be allocated; hence no messages could be  produced  and
         program execution is immediately halted.

              Most  messages  produced  by  SUPRDUMP  are  prefixed by the
         letters DMP. The general message format is:

          DMPxxxy text

          xxx     Message number
          y       Message type

                  y=I means an informational message
                  y=W means a warning message
                  y=E means an error message

          text    Message text



                              SUPRDUMP                      Messages 8-1.1

              There  are  also unnumbered messages which are output to the
         SYSUT2  file.  They  describe  the  BLKSIZE  of  each  block, the
         tapemark positioning, etc. These messages will be described after
         the numbered messages are described.

              SUPRDUMP messages  are  available  as  an on-line TSO/E ISPF
         dialog facility.  The dialog  is  invoked  via the   TSO/E  CLIST
         SUPRDMSG.  Full  instructions  for  installing  this  dialog  are
         contained in  Chapter 4 'Installation  Procedures'.   The  dialog
         panels are self-explanatory  and  include  a  help  tutorial.  In
         general,   each  on-line  message  text  is  identical   to   its
         corresponding hardcopy description.


                              SUPRDUMP                      Messages   8-2

                              ü8.1 NUMBERED MESSAGES

         DMP000I PARM= xxxxxxxxxxxxxxxxxxxxxxxxx

                 EXPLANATION: This message is printed with every execution
                 of  SUPRDUMP. It repeats the characters coded in the PARM
                 field in the JCL for the user's convenience.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


         DMP001E ERROR IN PARM FIELD OR JCL

                 EXPLANATION: This message indicates that a critical error
                 has  occurred  and  is always printed in conjunction with
                 previous  critical  error  message(s). The previous error
                 messages  may  deal  with  errors encountered in the PARM
                 field or JCL.

                 SYSTEM ACTION: Program end with a non-zero return code.

                 PROGRAMMER RESPONSE: Correct the error(s) indicated in the
                 previous error message(s).


         DMP002I END OF FILE REACHED

                 EXPLANATION:  This message is printed when the end of the
                 input file has been reached and the C=count parameter has
                 not been satisfied.

                 SYSTEM ACTION: Normal program end.

                 PROGRAMMER RESPONSE: None.


         DMP003E SYSUT1/2 DD STATEMENT MISSING

                 EXPLANATION:  This critical message indicates that either
                 the  input file has not been defined in the JCL with  the
                 ddname of SYSUT1, or that SYSUT2 has not been defined  in
                 the JCL and could not be dynamically allocated.

                 SYSTEM ACTION: Program termination with return code of 8.

                 PROGRAMMER RESPONSE: Supply the correct JCL DD statement.


                              SUPRDUMP                       Messages  8-3

         DMP004E KEYWORD PARAMETER NOT FOLLOWED BY = SIGN

                 EXPLANATION:  This critical message indicates that one of
                 the key word parameters in the PARM is not followed by an
                 = sign.
                 SYSTEM ACTION: Program termination with return code of 8.

                 PROGRAMMER RESPONSE: Correct the parameter in error.


         DMP005E INVALID OR DUPLICATE KEYWORD PARAMETER

                 EXPLANATION:  This  critical  message  indicates  that  a
                 character other than C, F, N, R, S or T has been coded as
                 a key word parameter, or that one of the above parameters
                 has been coded more than once.

                 SYSTEM ACTION: Program termination with return code of 8.

                 PROGRAMMER RESPONSE: Correct the parameter error.


         DMP006E A PARAMETER LENGTH EXCEEDS MAXIMUM ALLOWABLE

                 EXPLANATION:  This  message  is  produced when any of the
                 parameters  listed  in  the PARM is more than 8 digits in
                 length, or if the T=title parameter exceeds 65 characters
                 in length.

                 SYSTEM ACTION: Program terminates with return code of 8.

                 PROGRAMMER RESPONSE: Correct the parameter in error.


         DMP008E PARM VALUE NOT NUMERIC

                 EXPLANATION:  This  message  is  produced when one of the
                 parameters listed  in  the  PARM  has a non-numeric value
                 after the equal sign.

                 SYSTEM ACTION: Program terminates with return code of 8.

                 PROGRAMMER RESPONSE: Correct the parameter in error.


                              SUPRDUMP                       Messages  8-4

         DMP009E INVALID VALUE SPECIFIED FOR FORMAT PARAMETER

                 EXPLANATION:  This  message  is produced when a character
                 other than A, B, C, H or R as the first sub-parameter has
                 been coded or other than  L  or  P  has been coded as the
                 second sub-parameter of the F parameter.

                 SYSTEM ACTION: Program terminates with return code of 8.

                 PROGRAMMER RESPONSE: Correct the F parameter in the PARM.


         DMP010I NUMBER OF BLOCKS DUMPED = nnnnn

                 EXPLANATION:  This message is produced once at the end of
                 each  file  processed  where  nnn  is the total number of
                 blocks  from the input file that were printed. nnn always
                 is  less  than or equal to the number of blocks requested
                 in the Count parameter coded in the PARM.

                 SYSTEM ACTION: Normal program end.

                 PROGRAMMER RESPONSE: None.


         DMP011I NUMBER OF BLOCKS TO BE SKIPPED = nnnnn

                 EXPLANATION:  This  message  is  produced when the S=nnnn
                 parameter  is coded and indicates that nnn blocks will be
                 skipped  before  printing  begins. These blocks and their
                 lengths are counted and processed in the block statistics
                 (block  count, maximum block size, minimum blocksize, and
                 last block size).

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


         DMP012I MINIMUM BLKSIZE = nnnnn, MAXIMUM BLKSIZE = mmmmm, LAST
                 BLKSIZE = kkkkk, TOTAL NUMBER OF BYTES = jjjjjjjjj

                 EXPLANATION:  This message is produced for each file that
                 is  read.  nnnnn  is  the  size  of  the  smallest  block
                 processed, excluding the last block. mmmmm is the size of
                 the  largest block processed and kkkkk is the size of the
                 last  block  processed.  jjjjjjjjj is the total number of
                 bytes  in the blocks processed. If C=+count is not coded,
                 the  program  will  process  every  block in the file. If
                 C=+count  is coded, the program will stop processing that


                              SUPRDUMP                      Messages   8-5

                 file  after  the  S and C parameters are satisfied, or at
                 the end of file, whichever occurs first.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


         DMP013I nnn FILES TO BE DUMPED (N PARAMETER IGNORED FOR NON-TAPE)

                 EXPLANATION:  This message indicates that the program has
                 been  requested to print the number of files specified in
                 the  N=files  parameter.  See Section 5.3 NUMBER OF FILES
                 Parameter for details of multiple tape file processing.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None


         DMP014W DATA NOT VARIABLE FORMAT, R=100 WILL BE USED

                 EXPLANATION:   This   message   indicates  that  R=V  was
                 requested  but  the  program determined that the file did
                 not  have  standard IBM variable-format records. (See IBM
                 DATA ADMINISTRATION SERVICES GUIDE for  a  description of
                 variable-format  records.)  The  default length of 100 is
                 used to print out the blocks  except when the data is JCL
                 (in which case R=80 is used).

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER  RESPONSE:  Inspect  the printout to determine
                 the actual record format of the file.


         DMP015I SKIP COUNT EQUALS OR EXCEEDS TOTAL BLOCK COUNT. NO BLOCKS
                 DUMPED.

                 EXPLANATION:  This  message  is  produced  when the value
                 coded in the S=skip parameter is greater than or equal to
                 the  total  number  of  blocks in the file. No blocks are
                 printed for this file.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


                              SUPRDUMP                       Messages  8-6


         DMP016I END OF VOLUME REACHED

                 EXPLANATION:  This  message  is  produced with tape input
                 files  when  the  N parameter is coded greater than 1 and
                 an  end  of  volume  condition has been encountered.  The
                 program will process the next tape volume(s) (if present)
                 until the  N parameter has been satisfied.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


         DMP017I TAPE FILE WILL BE PROCESSED BACKWARDS.R=V AND N PARAMETER
                 WILL BE IGNORED IF CODED.

                 EXPLANATION:  This  message  indicates  that the backward
                 option of the Count parameter has been specified. The use
                 of  this  option  requires  that  the input file is a one
                 volume  fixed-format  sequential tape file. Hence, R=V is
                 defaulted to R=100 and the  N  parameter  is  ignored  if
                 coded. The tape volume is opened and processed backwards.
                 Caution is advised in interpreting the resulting messages
                 when using this option.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


         DMP018I SUPRDUMP  STATISTICS  APPLY ONLY TO THE  NUMBER OF BLOCKS
                 PROCESSED

                 EXPLANATION:  This  message is issued when a plus sign is
                 coded  in  the  C  parameter value. The + sign causes the
                 program  to  stop  processing  a  file  if  the  S  and C
                 parameters are satisfied.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


         DMP019I BLOCK NO. = nnnnn, NO. OF BYTES IN BLOCK = mmmmm

                 EXPLANATION:  This  message is issued, when processing  a
                 non-variable format file, when the length mmmmm  of block


                              SUPRDUMP                        Messages 8-7

                 nnnnn differs from the length of the previous block.   It
                 is always printed for the first block except when R=V  is
                 coded but the file is not variable;  then the  message is
                 printed  for  the  second block. A maximum of ten DMP019I
                 messages will be printed.  If a block number  other  than
                 the first or last is printed for a fixed format file then
                 the indicated block(s) is probably bad.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: Recreate the file if bad blocks  are
                 found.

         DMP020E UNABLE TO ALLOCATE FILE(S) FOR TAPE COPY (FT11F001, WORK,
                 FT12F001, SYSIN)

                 EXPLANATION:  This message is issued when the TAPECOPY DD
                 statement has been coded in  the  JCL  but  SUPRDUMP  has
                 been unable to dynamically allocate one  or  more  of the
                 above files required for the tape copy operation.

                 SYSTEM ACTION: Tape copy operation bypassed.

                 PROGRAMMER RESPONSE: Code the required file  in  the  JCL
                 and rerun the job.

         DMP021I FILE OCCUPIES APPROXIMATELY nnn INCH(ES) OF TAPE

                 EXPLANATION:  This message is issued once  at  the end of
                 each  file  processed,   where   nnn  is  the approximate
                 physical  length  of  the  file,  computed  from the tape
                 density,  recording  mode  technique and number of bytes.
                 Refer  to  IBM  3420  Models  4,  6,  and 8 Magnetic Tape
                 Subsystems, GA32-0021, for more details.

                 SYSTEM ACTION:  Normal program continuation.

                 PROGRAMMER RESPONSE:  None.

         DMP022I JOBNAME=jobname,PROCSTEPNAME=procstepname,JOBSTEPNAME=
                 jobstepname

                 EXPLANATION: This message is printed with every execution
                 of SUPRDUMP. If the program is not executed from  a PROC,
                 the PROCSTEPNAME=  becomes STEPNAME=.

                 SYSTEM ACTION:  Normal program continuation.

                 PROGRAMMER RESPONSE:  None.


                              SUPRDUMP                       Messages 8-8


         DMP023I APPROXIMATE TOTAL TAPE LENGTH OF PROCESSED FILES = nnnnnn
                 INCH(ES)

                 EXPLANATION: This message is printed with every execution
                 of SUPRDUMP with multiple tape data sets. nnnnnnn  is the
                 summation of the approximate  tape  lengths  of  all  the
                 processed data sets on all tape volume(s).

                 SYSTEM ACTION:  Normal program continuation.

                 PROGRAMMER RESPONSE:  None.

         DMP024W THE BLOCK COUNT IN THE TAPE TRAILER LABEL (nnnn) DOES NOT
                 MATCH THE ACTUAL BLOCK COUNT (mmmm).

                 EXPLANATION: This message is printed with every execution
                 of SUPRDUMP with standard label tape processing and C=+cc
                 not coded. This message indicates a possible problem with
                 the tape data set. nnnn is the block count  on  the  tape
                 trailer label  and  mmmm  is  the actual block count. The
                 trailer labels of each volume  of a multi-volume standard
                 label processed tape data set are checked for block count.

                 SYSTEM ACTION:  Normal program continuation.

                 PROGRAMMER RESPONSE:  Examine tape data set. It may need
                 to be recreated.

         DMP025I VOLUME SWITCHED TO VOLSER= vvvvvv AFTER BLOCK NUMBER nnn

                 EXPLANATION:  This  message is  printed  for multi-volume
                 data sets. vvvvvv  is  the next volume  serial number and
                 nnn  is  the block count  of  the just-processed  volume.
                 AFTER BLOCK NUMBER nnn is not printed for BLP processing.

                 SYSTEM ACTION:  Normal program continuation.

                 PROGRAMMER RESPONSE:  None.

         DMP026E BLP PROCESSING FOR CONCATENATED TAPE FILES NOT ALLOWED
                 (SPECIFY ALL VOLSERS IN SYSUT1 DD STATEMENT).

                 EXPLANATION: This message is  printed when the SYSUT1 DD
                 statement specifies BLP processing for concatenated tape
                 files. This is not allowed; however, all the volumes  in
                 the concatenation may be coded in the  VOL=SER parameter
                 of the the SYSUT1 DD.

                 SYSTEM ACTION: Program terminates with a return code of 8

                 PROGRAMMER RESPONSE:  Recode  the  SYSUT1 DD statement to
                 include all the VOLSERs  specified  in  the concatenation
                 and remove all the concatenated DD statements.


                              SUPRDUMP                       Messages  8-9

         DMP027W BLKSIZE OF FILE EXCEEDS 32K - NOT PROCESSABLE USING
                 STANDARD IBM ACCESS METHODS

                 EXPLANATION: This message is printed when a tape file has
                 a blocksize exceeding  32K.  See  message DMP012I for the
                 maximum blocksize  found  in  the  data set. This message
                 tells  the  user  that  programs  using  standard IBM I/O
                 methods cannot process the data set properly.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: Take appropriate action.


                              SUPRDUMP                       Messages 8-10


         DMP040I VOLSER=volser,BLK CNT=nnnnnnn,SEQ NO=mmmmm,LABEL=lbl,
                                       DEN=den,p-TRK,DSN=dsname
                 RECFM=recfm,LRECL=lrecl,CREATION DATE:YY=yy,DDD=ddd,
                                       EXPIRATION DATE:YY=yy,DDD=ddd

                 EXPLANATION: This message is issued for each  input  file
                 processed by SUPRDUMP.

                 The following are in the first message line:

                 "volser" is the first  (or only) volume  serial number of
                 the storage device on which the file  resides. nnn is the
                 number  of  blocks  in  the file except  when C=+count is
                 specified,   when  it  is  only  the  number   of  blocks
                 processed.  SEQ  NO=mmm  is  printed only  for tape files
                 where mmm is the logical  or physical sequence number  of
                 the file, depending on the JCL label parameter. If BLP is
                 coded, it is the physical sequence number.  For all other
                 label  parameters  (SL, SUL, AL, etc.)  it is the logical
                 sequence number. "lbl" is the JCL label parameter  (coded
                 or defaulted).  DEN=den  is  printed  for 3420 tape files
                 where "den" is the actual tape density (only 800, 1600 or
                 6250  BPI)  and  p-TRK  indicates  either  7  or  9-track
                 recording mode. For 3480 tape cartridges, "den" is listed
                 as  38000 BPI  and  18TRK recording mode. "dsname" is the
                 file name specified  in  the JCL.

                 The following are in the second line of the message. They
                 have valid values only for disk  data sets,  or tape data
                 sets run with standard label processing:

                 "recfm"  is  the  record  format  of the file (F, V, or U
                 only).  "lrecl"  is  the  logical record length.  For  SL
                 processing,  CREATION  DATE is  the  Julian date  of tape
                 creation. For BLP processing,  CREATION DATE  is  today's
                 Julian date. EXPIRATION  DATE yy  and  ddd  is the Julian
                 date of expiration if it exists.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.

         DMP041I (C) COPYRIGHT JUNE 1984 BY M. KARLIN, N. LINDNER SUPRDUMP
                 RELEASE x.y  date

                 EXPLANATION: Copyright and release information.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


                                   SUPRDUMP                  Messages 8-11



                              ü8.2 UNNUMBERED MESSAGES


         BLOCK nnnnn SIZE mmmmm   ----+----1----+----2---...---9----+----0

                 EXPLANATION:  This  message  is  issued before each block
                 printed in the SYSUT2 data set. nnnnn is the block number
                 in  the  file being printed. mmmmm is the number of bytes
                 in  the  block that is being printed. It includes the BDW
                 and  RDWs  if any are present. A ruler line of length 100
                 follows mmmmm.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


               nnnnn LEN mmmmm   format         ..........data..........

                 EXPLANATION: This message is issued for each print group.
                 For  F=C,  F=R  and F=H, format  is blanked out. For F=A,
                 format  is  ASC  and  for F=B two lines are printed, with
                 format  ASC  on  the  first  line  and  format EBC on the
                 second.  nnnnn  is  the  group  number  within  the  file
                 printout,  always starting from 1. mmmmm is the length of
                 the  group.  It  is equal to the value specified in the R
                 parameter  unless  R=V  is  coded and the records are IBM
                 variable format.  In this case, in the first group of the
                 block,  mmmmm  is the length specified in the RDW plus 4.
                 In  all  other groups within the block it is the value of
                 the RDW.

                 With   format  blanked  out,  ...data...  is  the  EBCDIC
                 representation  of the bytes. With format ASC, ...data...
                 is the ASCII representation of the bytes, and with format
                 EBC ...data... is the EBCDIC representation.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


                              SUPRDUMP                      Messages  8-12



         TAPEMARK nnnnn  *************************************************

                 EXPLANATION: This message is issued each time a  tapemark
                 is encountered while printing blocks. When multiple files
                 are printed (using the N parameter) a tapemark is printed
                 between files. nnnnn is the number of the tapemark on the
                 tape;  i.e., 1  for the first tapemark on the tape, 2 for
                 the second, etc.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


         title            nnnnn

                 EXPLANATION:  The  value  specified in the T parameter is
                 written on each page printed in SYSUT2.  For single  data
                 sets (N=1) and for the first file with N greater  than 1,
                 nnnnn is blanked out. For all the other data  sets with N
                 greater than one, nnnnn is the absolute position  of  the
                 data set on the tape volume.

                 NOTE:  for  single  tape  data  sets and for the first of
                 multiple tape data sets the position of the file is given
                 by the sequence number in message DMP040I.

                 SYSTEM ACTION: Normal program continuation.

                 PROGRAMMER RESPONSE: None.


         UNABLE TO READ DATA IN BLOCK

                 EXPLANATION:  A READ macro was issued by SUPRDUMP but the
                 system returned no data to the  program.  This  indicates
                 that a bad block has been read by the tape unit.

                 SYSTEM ACTION: Program continuation.

                 PROGRAMMER RESPONSE: Recreate the file.


                              SUPRDUMP            TSO Considerations  B-1


                              APPENDIX B


                        ü10 TSO CONSIDERATIONS

              For  those  users  who  have  the ability to execute on-line
         command lists (CLISTs) on TSO (Time Sharing Option) the following
         sample command procedure, i.e., a prearranged executable sequence
         of  TSO commands that can be invoked by issuing the EXEC command,
         may be used to run the program SUPRDUMP.

              A  working  knowledge  of  IBM  OS  TSO  Command Language is
         required to understand this section.

              Uppercase  letters  and  words  written in uppercase must be
         coded  in  the  CLIST  exactly  as  they  appear.  The  following
         characters must also be coded exactly as they appear:

               ampersand     &
               asterisk      *
               parentheses   ()
               apostrophe    '

              Lowercase  letters, words and symbols appearing in the CLIST
         represent variables for which specific information is substituted
         when the parameter is coded.

         Ý 1¨ PROC 0 SYSUT1(),SYSUT2(*),SYSPRINT(*)
         Ý 2¨ CONTROL PROMPT,LIST
         Ý 3¨ FREE  DD(SYSUT1,SYSUT2,SYSPRINT)
         Ý 4¨ ALLOC DS(&SYSPRINT)   DD(SYSPRINT)
         Ý 5¨ ALLOC DS(&SYSUT1)     DD(SYSUT1)    SHR
         Ý 6¨ ALLOC DS(&SYSUT2)     DD(SYSUT2)    disp
         Ý 7¨ WRITE prompt to enter parm field
         Ý 8¨ READ  &PARM
         Ý 9¨ CALL  'loadlib(suprdump)'  '&PARM'
         Ý10¨ FREE  DD(SYSUT1,SYSUT2,SYSPRINT)
         Ý11¨ WRITE message to indicate CLIST has ended
         Ý12¨ RETURN

         Ý 1¨  This  statement  defines the  parameters that are passed to
               the  command  procedure via the value-list parameter of the
               EXEC  command.  0  in  the  PROC  statement  means  that no
               positional  parameters  are  used. There are three  keyword
               parameters coded in the PROC statement. They are:

              SYSUT1   - This parameter gives   the DSN of the input file.
                         It must be coded, with a DSN as its value,   when
                         executing the CLIST.


                              SUPRDUMP             TSO Considerations  B-2


              SYSUT2   - This  parameter supplies the DSN of the file that
                         will  contain  the  blocks dumped from SYSUT1. It
                         has  been coded in the PROC with a default to the
                         terminal.

              SYSPRINT - This  parameter  supplies the DSN of the SYSPRINT
                         file.  It has  been  coded  with a default to the
                         terminal.

         Ý 2¨  This statement permits the CLIST to prompt the terminal for
               input  and  to  display  the CLIST commands at the terminal
               after symbolic substitution but before execution.

         Ý 3¨  This  statement  releases  (deallocates)  all of the listed
               data  sets if they  were previously allocated. This is done
               in preparation for allocating them in this CLIST.

         Ý 4¨  See Ý 3¨ of section 5.

         Ý 5¨  See Ý 5¨ of section 5.

         Ý 6¨  See Ý 6¨ of section 5.

         Ý 7¨  This  statement sends text  of  the  user's choosing to the
               terminal  to  prompt  the  user to enter a PARM. The prompt
               should request the PARM in the form:
                       'R=len,C=count,S=skip,...'

         Ý 8¨  This statement makes the PARM entered by the user available
               to the CLIST.

         Ý 9¨  This statement will load and execute the program designated
               by 'suprdump' residing  in executable (load module) form in
               the load library designated by 'loadlib'.

         Ý10¨  This  statement  releases  all of the listed data sets that
               had been allocated in this CLIST.

         Ý11¨  This  statement  sends  a message to terminal user that the
               CLIST has completed its execution.

         Ý12¨  This statement returns control to the terminal user.

              As  the  program  is  executing,  the data sets allocated as
         DS(*) (statements 4 and 6) are displayed at the terminal.

              It  must be remembered that this is just a sample CLIST. The
         user  may  wish to modify it by adding/deleting/changing commands
         to fit his own needs.


                              SUPRDUMP              TSO Considerations B-3



                             TSO EXAMPLES


              In the following examples it is assumed that the CLIST above
         is the member DUMP of the library USER.CLIST and that the program
         load  module  resides  in  the  library  LOADLIB  under  the name
         SUPRDUMP.  It  is  also assumed that the PARM field prompt Ý8¨ is
         ENTER  PARM  FIELD,  that the DISPositions of all the output data
         sets  are  coded  OLD  and  that  the library USER.CLIST has been
         ALLOCated to the ddname SYSPROC.


              EXAMPLE TSO1

              Dump every block from the file ALLCASES to the terminal.

              DUMP SYSUT1('''ALLCASES''')

              When the prompt ENTER PARM FIELD appears on the screen, type
         'T=ALLCASES' and press the ENTER key.


              EXAMPLE TSO2

              Dump  3 blocks of data from the file ALLCASES after skipping
         the first four blocks. Print the blocks in 80 character groups.

              DUMP SYSUT1('''ALLCASES''')

              When   ENTER   PARM   FIELD   appears  on  the  screen  type
         'R=80,S=4,C=3' and press the ENTER KEY.


                              SUPRDUMP                 Bibliography    C-1

                           ü11 BIBLIOGRAPHY


              The  following publications contain concepts and terminology
         that relate to the operation of the program SUPRDUMP:

         IBM MVS JCL

         IBM DATA PROCESSING GLOSSARY

         IBM MVS System Programming Library: Data Administration (EXCP
              MACRO)

         IBM Magnetic Tape Labels and File Structure Administration

         IBM MVS Data Admin. Services Guide (BSAM, RDW, BDW)

         IBM TSO/E Command Language Reference (TSO Considerations)

         IBM TSO/E Terminal User's Guide (TSO Considerations)

         IBM MVS Linkage Editor and Loader (Installation Procedures)

         IBM MVS Message Library: System Codes and Messages (return codes)

         IBM 3803 Model 3, IBM 3420 Models 4, 6 and 8 Magnetic Tape Subsystem
             Description (Sense and Status information)

         IBM 3480 Magnetic Tape Subsystem Reference

         IBM Principles of Operation (unit and channel status)

         SAS User's Guide: Basics (TAPECOPY procedure)


                              SUPRDUMP                     Glossary    G-1

                             ü12 GLOSSARY

         This  glossary  provides a comprehensive vocabulary reference for
              SUPRDUMP  users.  Some  of  these  terms  may have different
              meanings  in  other contexts, or to people not familiar with
              data processing usage.

         Entries in this glossary are arranged in a letter-by-letter basis
              -  that  is,  only  the  letters of the alphabet are used to
              determine  sequence,  special  characters and spaces between
              words are ignored.

         The  entry  for  each  term consists of a single or multiple-word
              term  or the abbreviation or acronym for a term, followed by
              a   commentary.   If   the  term  can  be  abbreviated,  the
              abbreviation  is  given in parentheses immediately following
              the term.

            ABEND.  The  program  SUPRDUMP could not continue because of a
             violation of a system operation.

            access methods. The BSAM IBM access method is used in SUPRDUMP
             for  disk  data  sets.  For  tape  data sets an EXCP macro is
             issued to obtain input data.

            ASCII.  When  F=A  or  F=B  is  coded  in  the PARM, each byte
             representation  is  interpreted  in  accordance with the ANSI
             standard character set.

            bad  block.  In  normal IBM access methods, a bad block is one
             which  does  not  meet the requirements of the Access Methods
             used. SUPRDUMP, however, does not use standard access methods
             for tape so a bad block to the program is only one which  the
             physical device cannot read.

            block descriptor word (BDW). IBM places a four byte BDW at the
             start  of  each  block  of  a variable length file. The   BDW
             contains  the  block  length  and  is  used  by  SUPRDUMP  to
             determine  if  the  file  is  variable  length,  when  R=V is
             specified.

            BLKSIZE.  The  lengths of the smallest, largest and last block
             read  by  SUPRDUMP are  displayed  in  the  message  data set
             SYSPRINT. While the largest block that can be written or read
             by  IBM  standard  access  methods  is 32K, SUPRDUMP can read
             blocks up to 64K.

            BLP.  This  is a tape LABEL subparameter in JCL. When used, it
             causes the IBM operating system to bypass label processing of
             magnetic  tape and to treat each physical file of the tape as


                              SUPRDUMP                      Glossary   G-2

             data.

            backward processing of tapes. If C=-nnn is coded and SYSUT1 is
             a  tape  data  set,  the data set is opened backwards and nnn
             blocks  are  printed. If SYSUT1 is other than tape, the minus
             sign is ignored and the input data set is read from the start
             with nnn blocks being printed.

            block  count.  The  number  of blocks to be printed out by the
             program.  The count is started after the skip block parameter
             is satisfied.

            carriage  control  character. Certain byte representations are
             used  by  printers  to trigger form feed, line feed, carriage
             return  and other printer control functions. SUPRDUMP changes
             these  characters  to spaces whenever they occur in any print
             position other than the first. This change is suppressed if L
             is  specified  as  the  second  subparameter  of the F=format
             parameter of the PARM.

            data  portion  of block. For   non-variable-length-block files
             it  is  the  entire  physical record (block). For  files with
             variable  length  records it is the block minus the four-byte
             BDW  at the start of each physical record minus any four-byte
             RDWs  contained within the block. However SUPRDUMP treats all
             bytes in the block, including the BDW and RDW, as data.

            DCB.  SUPRDUMP does not use the standard sub-parameters of the
             data control block (i.e., RECFM, LRECL, BLKSIZE) on SYSUT1.

            density. This refers to the number of bytes per inch  recorded
             on magnetic tape.   Tape  densities   of  800, 1600, 6250 and
             38000 bpi are processed for data set tape length.

            EBCDIC.   Unless   F=A   is  coded  in  the  PARM,  each  byte
             representation  is  interpreted  in  accordance  with the IBM
             Extended Binary Coded Decimal character set.

            EXCP.  This  is  the  IBM  macro used by SUPRDUMP to read tape
             files.  Its  use  enables SUPRDUMP to bypass the standard IBM
             Sequential  Access Methods and thereby enables the program to
             read tapes without knowing any of the DCB attributes.

            input  file.  This  is  the file from which blocks are printed
             according  to  the  SUPRDUMP criteria specified. The data set
             organization must be sequential (PS).

            LABEL.  This  parameter  of the JCL is used for tape files. It
             indicates  the  data  set  on the tape to use by the Sequence
             Number   subparameter   and   whether  or  not  to  do  label
             processing.  For  installations  with the CA-1  tape handling
             software  package,  coding  EXPDT=98000 removes the tape from
             CA-1 processing.


                              SUPRDUMP                       Glossary  G-3

            logical/physical  file.  The  tape file to use is specified by
             the   tape   file   sequence   number   coded  in  the  LABEL
             subparameter.  If  SL  is  coded  in  the LABEL, the sequence
             number  refers to the logical file (data file where the files
             are  ordered as header, data, trailer, header, data, trailer,
             etc.)  If  BLP  is  coded, the  sequence number refers to the
             actual  physical  location of the file to be used, i.e., 1 is
             header, 2 is data, 3 is trailer.

            multiple  files. If the N parameter is coded for tape volumes,
             multiple  data  sets on the tape(s)  may  be  printed  in one
             execution of SUPRDUMP.

            output file. One file, SYSUT2, is output by SUPRDUMP.

            print  files.  SYSPRINT,  the  one  print  file available with
             SUPRDUMP   is  always  required  for  program  operation  and
             contains the program messages.

            print  format.  There  are  five  separate  print  formats for
             SYSUT2. These are character, character and ruler line, EBCDIC
             character  with  vertical HEX and ruler line, ASCII character
             with  vertical  HEX and ruler line, and both EBCDIC character
             and  ASCII  character  with  vertical HEX and ruler line. The
             print format is controlled by the F parameter in the PARM.

            print group. The number of characters printed in each group is
             controlled  by the R parameter. It may be any value from 1 to
             the  blocksize.  If R=V is  specified  as  the value of the R
             parameter, with  a variable  length file  the group length is
             determined by each RDW encountered. With R=V and with a fixed
             length file, the print group defaults to 100.

            record  descriptor word (RDW). The four-byte RDW of a variable
             length  record is used by SUPRDUMP, when R=V is specified, to
             delimit the record group printed in SYSUT2.

            recording mode technique. Magnetic tape is recorded with either
             7, 9, or 18 tracks across the tape.

            ruler  line.  This  is  a  line  placed under the print lines,
             calibrated  from  1  to  100  or  less,  depending  on the R=
             parameter.  It  is used to find the relative byte location of
             any field within the record.

            skip  block  parameter.  This  optional keyword PARM parameter
             specifies  the  number  of  blocks  of the input file to skip
             before  printing out the characters in the file. For example,
             S=2  means to skip the first two blocks and start printout at
             the third block of the data set.

            SYSPRINT.  This  is  the  ddname of the SUPRDUMP message print
             file.


                              SUPRDUMP                      Glossary   G-4

            SYSUDUMP.  This  is  the  ddname of the operating system abend
             dump file.

            SYSUT1. This is the ddname to be used for the input  file.  It
             must be a sequential file.

            SYSUT2.  This is the ddname of the file containing the printed
             blocks from the input file.

            TAPECOPY. This is the ddname of the output tape  which  is  an
             exact physical copy of the input tape volume.

            tapemark. This is a special one byte record placed on the tape
             by the tape drive which indicates the end of a physical file.
             It  is  indicated  on  the  printout by a line of asterisks.

            title.  If  T=title  is  coded  in the PARM, the characters in
             title  are  printed  at the top of each page of SYSUT2.

            translation.  When the F= format parameter is either A or B, a
             character line is printed where each character corresponds to
             the  ASCII  translation of each data byte. If any value other
             than  A  is coded, an EBCDIC translation of each data byte is
             printed. If F=B is coded,  both an ASCII translated line  and
             an EBCDIC translated line are printed.


                              SUPRDUMP                          Index  I-1

                               ü13 INDEX


            A subparameter  3-1,5-4,A-1
            ABEND  5-1
            access methods  5-7
            ampersand  5-6
            ASCII  5-3,5-4


            backwards processing  3-1,5-3,5-7
            B subparameter of F parameter  3-1,5-4,A-1
            BDW  v,5-5,6-2
            BLKSIZE  6-1,6-2,6-3
                 last  v
                 maximum  v,5-3
                 minimum  v,5-3
            block  5-7
            BLOCK COUNT PARAMETER  5-3
            block descriptor word  see BDW
            BLP  5-5,6-1,6-2,6-3,7-3,G-3


            C=  see BLOCK COUNT PARAMETER
            C subparameter of F parameter  5-4
            CA-1  6-1
            carriage control  see print control characters
            cartridge tapes  6-4
            CLIST  B-1
            completion codes  8-1
            concatenated files  6-1
            CONFIG  6-3
            core memory required  2-1
            CSW  (channel-status word)  6-4


            D=  see DIAGNOSTICS PARAMETER
            DCB  v,6-1
            density 8-7
            DIAGNOSE file  5-1,6-4
            DIAGNOSTICS PARAMETER  5-7
            directory  see PDS directory
            DISP  6-1
            DSCB  6-1
            DSN  v
            dummy  see null file


            EBCDIC  5-3,5-4
            end of volume  5-5
            EOV1  5-5
            error messages  8-1
            EXCP macro  G-2
            EXPDT  6-1,7-3


                              SUPRDUMP                          Index  I-2

            F=  see PRINT FORMAT PARAMETER
            file sequence number  see logical/physical file
            FT11F001  6-3
            FT12F001  6-3


            GROUP LENGTH PARAMETER  5-5


            H subparameter of F parameter  5-4
            HDR1  5-5

            input file  see SYSUT1
            installation procedure  5-3
            IOB (input/output block)  6-4


            JCL PROCedure  5-1
            JCL (program)  5-1, 5-6
            JOBLIB  5-1


            L subparameter of F parameter  5-4
            LABEL=(n,BLP)  6-1,6-2,6-3
            label type  6-2
            logical/physical file  G-3
            LRECL  6-1


            message file  see SYSPRINT
            multiple reel file  5-5,6-1


            N=  see NUMBER OF FILES PARAMETER
            null file  5-5
            NUMBER OF FILES PARAMETER  5-5


            OS CVOL    6-1
            output file  see SYSUT2


            P subparameter of F parameter  5-4
            PARM  v,5-3
            partial block printing  5-4
            PDS directory 6-1
            PREFACE  5-4
            printer control characters  5-3
            PRINT FORMAT PARAMETER  5-3,5-4
            print file  see SYSUT2


            Quote  5-6


                              SUPRDUMP                          Index  I-3

            R subparameter of F parameter  5-4
            R=  see GROUP LENGTH PARAMETER
            RDW  v,5-6,6-2
            RECFM   see record format
            record descriptor word   see RDW
            record format  6-1,6-2
            recording mode  8-7
            ruler line  5-4,G-3


            S=   see SKIP PARAMETER
            SAS  2-1,5-1,6-3,C-1
            SASHELP 5-1,6-3,7-4
            SASMSG  5-1,6-3,7-4
            SAS370  5-1
            sequential file  v,6-1,6-2
            SENSE command  6-4
            sense information  6-4
            SKIP PARAMETER  5-6
            SL  6-2
            statistics  5-1
            status (unit and channel)  6-4
            STEPLIB  5-1
            subparameters of F parameter
                 A  5-4
                 C  5-4
                 H  5-4
                 L  5-4
                 R  5-4
            SYSCTLG  6-2
            SYSIN   6-3
            SYSPRINT  5-1,6-2
            system configuration  2-1
            SYSUDUMP  5-1
            SYSUT1  v,5-1,5-3,6-1,8-6
            SYSUT2  v,5-1,5-3,6-1,6-2,8-1


            T=  see TITLE PARAMETER
            TAPECOPY  v,5-1,6-3,35
            tape files  v,5-3,5-5,6-1
            tape labels  v
            tape length  5-4,8-7
            tape management system  see CA-1
            tapemark  v,6-1
            TITLE PARAMETER  5-6
            translation (ASCII TO EBCDIC)  v,5-3,5-4


            V (R=V)  5-5,A-1,G-3
            variable length records  v,5-3
            vertical hex  5-4,A-1
            VOL header  6-3
            VOL=REF=    6-2
            VOL=SER=    6-2
