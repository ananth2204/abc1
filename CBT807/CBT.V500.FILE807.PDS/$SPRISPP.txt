./ ADD NAME=DMPH001  0105-93011-93014-1213-00020-00024-00000-CN03MQK
%HELP----------------------  SUPRDUMP MESSAGE DIALOG -----------------------HELP
%COMMAND ===>_ZCMD
+
+All messages issued by SUPRDUMP have the following form:
+
+                                %DMPnnnx text+
+
+where%nnn+is the message number (001 to 099), and%x+may be I, E or W.
+To access a message in this dialog, enter its number.
+
+The letter following the message number signifies the type of message issued:
+
%E+is a critical error message. When this type of error occurs, SUPRDUMP
+terminates so that the error can be corrected.
+
%W+is a warning message. These messages are useful in adjusting a job to
run more efficiently or to warn of possible non-critical errors.
+
%I+messages document informational messages.
)END
./ ADD NAME=DMPH002  0102-93011-93013-1907-00020-00018-00000-CN03MQK
%HELP---------------------  SUPRDUMP MESSAGE DIALOG  ----------------------HELP
%COMMAND ===>_ZCMD
+
+PF KEY SETTINGS
+
+The following PF key settings are used in the message dialog:
+
%PF1+ Help
+
%PF3+ Go back to the main dialog panel
+
+If multiple panels are needed to explain a message, the following additional
+PF key settings can be used:
+
%PF7+ Go back to the previous screen in a sequence
+
%PF8+ Go to the next screen in a sequence
+
+The%PF13-PF24+keys may be used for the corresponding PF1-PF12 functions.
)END
./ ADD NAME=DMPMAIN  0104-93011-93014-1323-00049-00053-00000-CN03MQK
)BODY
%------------------------  SUPRDUMP MESSAGE DIALOG  ----------------------------
%COMMAND ===>_ZCMD
+
+To display information about an SUPRDUMP message, type its number (001-099),
+then press%ENTER.+
+
%MESSAGE NUMBER  ===> DMP_NNN+
+
+                               ***%EXAMPLE+***
+
+To access message DMP000I, enter the message number (000):
+
%MESSAGE NUMBER  ===> DMP 000
+
+
+
+Press%PF1+for HELP.
+Press%PF3+to END.
)INIT
        .HELP = DMPH001
        &ZCMD = &Z
        &NNN  = &Z
       &ZPF01 = HELP
       &ZPF13 = HELP
       &ZPF03 = END
       &ZPF15 = END
       &ZPF04 = RETURN
       &ZPF16 = RETURN
       &ZPF07 = UP
       &ZPF19 = UP
       &ZPF08 = DOWN
       &ZPF20 = DOWN
      .CURSOR = NNN
       VPUT ( ZPF01 ZPF03 ZPF07 ZPF08 ZPF13 ZPF15 ZPF19 ZPF20 ) PROFILE
)PROC
     IF (&ZCMD ¬= &Z)
         .MSG = selms004
     VER (&NNN,NONBLANK)
     &NN   =  TRUNC (&NNN,2)
     &NA   = .TRAIL
     VER (&NNN,NB,PICT,NNN,MSG=selms001)
     VER (&NN,LIST,00,01,02,04,MSG=selms003)
     IF (&NN = 00) VER (&NA,LIST,0,1,2,3,4,5,6,8,9,MSG=selms003)
     IF (&NN = 02) VER (&NA,LIST,0,1,2,3,4,5,6,7,MSG=selms003)
     IF (&NN = 04) VER (&NA,LIST,0,1,MSG=selms003)
     &PANELID = DMP&NNN
     VPUT PANELID SHARED
)END
./ ADD NAME=DMP000   0106-93011-93014-1320-00022-00023-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP000I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP000I PARM= xxxxxxxxxxxxxxx
+
+
+                 %EXPLANATION:+This message is printed with every execution
+                  of  SUPRDUMP. It repeats the characters coded in the PARM
+                  field in the JCL for the user's convenience.
+
+                 %SYSTEM ACTION:+normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+none.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP001   0107-93011-93014-1613-00024-00023-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP001E ---------------------------
%COMMAND ===>_ZCMD
+
%          DMP001E ERROR IN PARM FIELD OR JCL
+
+                 %EXPLANATION:+This message indicates that a critical error
+                  has  occurred  and  is always printed in conjunction with
+                  previous  critical  error  message(s). The previous error
+                  messages  may  deal  with  errors encountered in the PARM
+                  field or JCL.
+
+                 %SYSTEM ACTION:+Program end with a non-zero return code.
+
+                 %PROGRAMMER RESPONSE:+Correct the error(s) indicated in the
+                  previous error message(s).
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP002   0107-93011-93014-1613-00021-00027-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP002I ---------------------------
%COMMAND ===>_ZCMD
+
%          DMP002I END OF FILE REACHED
+
+                 %EXPLANATION:+ This message is printed when the end of the
+                  input file has been reached and the C=count parameter has
+                  not been satisfied.
+
+                 %SYSTEM ACTION:+Normal program end.
+
+                 %PROGRAMMER RESPONSE:+None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP003   0106-93011-93014-1614-00022-00020-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP003E ---------------------------
%COMMAND ===>_ZCMD
+
%          DMP003E SYSUT1/2 DD STATEMENT MISSING
+
+                 %EXPLANATION:+ This critical message indicates that either
+                  the  input file has not been defined in the JCL with  the
+                  ddname of SYSUT1, or that SYSUT2 has not been defined  in
+                  the JCL and could not be dynamically allocated.
+
+                 %SYSTEM ACTION:+Program termination with return code of 8.
+
+                 %PROGRAMMER RESPONSE:+Supply the correct JCL DD statement.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP004   0112-93011-93014-1321-00021-00018-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP004E ---------------------------
%COMMAND ===>_ZCMD
+
%          DMP004E KEYWORD PARAMETER NOT FOLLOWED BY = SIGN
+
+                 %EXPLANATION:+ This critical message indicates that one of
+                  the key word parameters in the PARM is not followed by an
+                  = sign.
+
+                 %SYSTEM ACTION:+Program termination with return code of 8.
+
+                 %PROGRAMMER RESPONSE:+Correct the parameter in error.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z,NEXT)
         .MSG = SELMS004
)END
./ ADD NAME=DMP005   0106-93011-93014-1614-00022-00019-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP005E ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP005E INVALID OR DUPLICATE KEYWORD PARAMETER
+
+                 %EXPLANATION:+ This  critical  message  indicates  that  a
+                  character other than C, F, N, R, S or T has been coded as
+                  a key word parameter, or that one of the above parameters
+                  has been coded more than once.
+
+                 %SYSTEM ACTION:+Program termination with return code of 8.
+
+                 %PROGRAMMER RESPONSE:+Correct the parameter error.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP006   0105-93011-93014-1615-00022-00018-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP006E ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP006E A PARAMETER LENGTH EXCEEDS MAXIMUM ALLOWABLE
+
+                 %EXPLANATION:+ This  message  is  produced when any of the
+                  parameters  listed  in  the PARM is more than 8 digits in
+                  length, or if the T=title parameter exceeds 65 characters
+                  in length.
+
+                 %SYSTEM ACTION:+Program terminates with return code of 8.
+
+                 %PROGRAMMER RESPONSE:+Correct the parameter in error.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP008   0105-93011-93014-1615-00021-00019-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP008E ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP008E PARM VALUE NOT NUMERIC
+
+                 %EXPLANATION:+ This  message  is  produced when one of the
+                  parameters listed  in  the  PARM  has a non-numeric value
+                  after the equal sign.
+
+                 %SYSTEM ACTION:+Program terminates with return code of 8.
+
+                 %PROGRAMMER RESPONSE:+Correct the parameter in error.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP009   0104-93011-93014-1615-00022-00031-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP009E ---------------------------
%COMMAND ===>_ZCMD
+
%          DMP009E INVALID VALUE SPECIFIED FOR FORMAT PARAMETER
+
+                 %EXPLANATION:+ This  message  is produced when a character
+                  other than A, B, C, H or R as the first sub-parameter has
+                  been coded or other than  L  or  P  has been coded as the
+                  second sub-parameter of the F parameter.
+
+                 %SYSTEM ACTION:+Program terminates with return code of 8.
+
+                 %PROGRAMMER RESPONSE:+Correct the F parameter in the PARM.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP010   0104-93011-93014-1616-00023-00030-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP010I ---------------------------
%COMMAND ===>_ZCMD
+
%          DMP010I NUMBER OF BLOCKS DUMPED = nnnnn
+
+                 %EXPLANATION:+ This message is produced once at the end of
+                  each  file  processed  where  nnn  is the total number of
+                  blocks  from the input file that were printed. nnn always
+                  is  less  than or equal to the number of blocks requested
+                  in the Count parameter coded in the PARM.
+
+                 %SYSTEM ACTION:+Normal program end.
+
+                 %PROGRAMMER RESPONSE:+None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP011   0106-93011-93014-1616-00024-00018-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP011I ---------------------------
%COMMAND ===>_ZCMD
+
%          DMP011I NUMBER OF BLOCKS TO BE SKIPPED = nnnnn
+
+                 %EXPLANATION:+ This  message  is  produced when the S=nnnn
+                  parameter  is coded and indicates that nnn blocks will be
+                  skipped  before  printing  begins. These blocks and their
+                  lengths are counted and processed in the block statistics
+                  (block  count, maximum block size, minimum blocksize, and
+                  last block size).
+
+                 %SYSTEM ACTION:+Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP012   0105-93011-93032-0940-00031-00030-00000-CN03MQK
)ATTR DEFAULT(%$_)
)BODY
%------------------------- SUPRDUMP MESSAGE DMP012I ---------------------------
%COMMAND ===>_ZCMD
$
%          DMP012I MINIMUM BLKSIZE = nnnnn, MAXIMUM BLKSIZE = mmmmm, LAST
%                  BLKSIZE = kkkkk, TOTAL NUMBER OF BYTES = jjjjjjjjj
$
$                 %EXPLANATION:$ This message is produced for each file that
$                  is  read.  nnnnn  is  the  size  of  the  smallest  block
$                  processed, excluding the last block. mmmmm is the size of
$                  the  largest block processed and kkkkk is the size of the
$                  last  block  processed.  jjjjjjjjj is the total number of
$                  bytes  in the blocks processed. If C=+count is not coded,
$                  the  program  will  process  every  block in the file. If
$                  C=+count  is coded, the program will stop processing that
$                  file  after  the  S and C parameters are satisfied, or at
$                  the end of file, whichever occurs first.
$
$                 %SYSTEM ACTION:$Normal program continuation.
$
$                 %PROGRAMMER RESPONSE:$None.
$
$    Press%PF03$to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP013   0104-93011-93014-1619-00022-00026-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP013I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP013I nnn FILES TO BE DUMPED (N PARAMETER IGNORED FOR NON-TAPE)
+
+                 %EXPLANATION:+ This message indicates that the program has
+                  been  requested to print the number of files specified in
+                  the  N=files  parameter.  See Section 5.3 NUMBER OF FILES
+                  Parameter for details of multiple tape file processing.
+
+                 %SYSTEM ACTION:+Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+None
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP014   0105-93011-93032-1042-00026-00029-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP014W ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP014W DATA NOT VARIABLE FORMAT, R=100 WILL BE USED
+
+                 %EXPLANATION:+  This   message   indicates  that  R=V  was
+                  requested  but  the  program determined that the file did
+                  not  have  standard IBM variable-format records. (See IBM
+                  DATA ADMINISTRATION SERVICES GUIDE for  a  description of
+                  variable-format  records.)  The  default length of 100 is
+                  used to print out the blocks  except when the data is JCL
+                  (in which case R=80 is used).
+
+                 %SYSTEM ACTION:+Normal program continuation.
+
+                 %PROGRAMMER  RESPONSE:+ Inspect  the printout to determine
+                  the actual record format of the file.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP015   0103-93011-93014-1620-00023-00026-00000-CN03MQK
%------------------------- HFSELECT MESSAGE SEL015I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP015I SKIP COUNT EQUALS OR EXCEEDS TOTAL BLOCK COUNT. NO BLOCKS
%                  DUMPED.
+
+                 %EXPLANATION:+ This  message  is  produced  when the value
+                  coded in the S=skip parameter is greater than or equal to
+                  the  total  number  of  blocks in the file. No blocks are
+                  printed for this file.
+
+                 %SYSTEM ACTION:+Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+None.
+
+    Press%PF03+to END.
)INIT
   .HELP = SELH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP016   0105-93011-93014-1621-00023-00027-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP016I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP016I END OF VOLUME REACHED
+
+                 %EXPLANATION:+ This  message  is  produced with tape input
+                  files  when  the  N parameter is coded greater than 1 and
+                  an  end  of  volume  condition has been encountered.  The
+                  program will process the next tape volume(s) (if present)
+                  until the  N parameter has been satisfied.
+
+                 %SYSTEM ACTION:+Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP017   0104-93011-93014-1621-00027-00024-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP017I ---------------------------
%COMMAND ===>_ZCMD
+
%          DMP017I TAPE FILE WILL BE PROCESSED BACKWARDS.R=V AND N PARAMETER
%                  WILL BE IGNORED IF CODED.
+
+                 %EXPLANATION:+ This  message  indicates  that the backward
+                  option of the Count parameter has been specified. The use
+                  of  this  option  requires  that  the input file is a one
+                  volume  fixed-format  sequential tape file. Hence, R=V is
+                  defaulted to R=100 and the  N  parameter  is  ignored  if
+                  coded. The tape volume is opened and processed backwards.
+                  Caution is advised in interpreting the resulting messages
+                  when using this option.
+
+                 %SYSTEM ACTION:+Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP018   0105-93011-93032-1038-00025-00030-00000-CN03MQK
)attr default(%$_)
)body
%------------------------- SUPRDUMP MESSAGE DMP018I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP018I SUPRDUMP  STATISTICS  APPLY ONLY TO THE  NUMBER OF BLOCKS
%                  PROCESSED
$
$                 %EXPLANATION:$ This  message is issued when a plus sign is
$                  coded  in  the  C  parameter value. The + sign causes the
$                  program  to  stop  processing  a  file  if  the  S  and C
$                  parameters are satisfied.
$
$                 %SYSTEM ACTION:$Normal program continuation.
$
$                 %PROGRAMMER RESPONSE:$None.
$
$    Press%PF03$to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP019   0104-93011-93014-1622-00028-00023-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP019I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP019I BLOCK NO. = nnnnn, NO. OF BYTES IN BLOCK = mmmmm
+
+                 %EXPLANATION:+ This  message is issued, when processing  a
+                  non-variable format file, when the length mmmmm  of block
+                  nnnnn differs from the length of the previous block.   It
+                  is always printed for the first block except when R=V  is
+                  coded but the file is not variable;  then the  message is
+                  printed  for  the  second block. A maximum of ten DMP019I
+                  messages will be printed.  If a block number  other  than
+                  the first or last is printed for a fixed format file then
+                  the indicated block(s) is probably bad.
+
+                 %SYSTEM ACTION:+Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+Recreate the file if bad blocks  are
+                  found.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP020   0104-93011-93014-1622-00024-00026-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP020E ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP020E UNABLE TO ALLOCATE FILE(S) FOR TAPE COPY (FT11F001, WORK,
%                  FT12F001, SYSIN)
+
+                 %EXPLANATION:+ This message is issued when the TAPECOPY DD
+                  statement has been coded in  the  JCL  but  SUPRDUMP  has
+                  been unable to dynamically allocate one  or  more  of the
+                  above files required for the tape copy operation.
+
+                 %SYSTEM ACTION:+Tape copy operation bypassed.
+
+                 %PROGRAMMER RESPONSE:+Code the required file  in  the  JCL
+                  and rerun the job.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP021   0103-93014-93014-1623-00024-00024-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP021I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP021I FILE OCCUPIES APPROXIMATELY nnn INCH(ES) OF TAPE
+
+                 %EXPLANATION:+ This message is issued once  at  the end of
+                  each  file  processed,   where   nnn  is  the approximate
+                  physical  length  of  the  file,  computed  from the tape
+                  density,  recording  mode  technique and number of bytes.
+                  Refer  to  IBM  3420  Models  4,  6,  and 8 Magnetic Tape
+                  Subsystems, GA32-0021, for more details.
+
+                 %SYSTEM ACTION:+ Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+ None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP022   0104-93011-93014-1623-00022-00024-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP022I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP022I JOBNAME=jobname,PROCSTEPNAME=procstepname,JOBSTEPNAME=
%                  jobstepname
+
+                 %EXPLANATION:+This message is printed with every execution
+                  of SUPRDUMP. If the program is not executed from  a PROC,
+                  the PROCSTEPNAME=  becomes STEPNAME=.
+
+                 %SYSTEM ACTION:+ Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+ None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP023   0104-93011-93014-1624-00023-00031-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP023I ---------------------------
%COMMAND ===>_ZCMD
+
%          DMP023I APPROXIMATE TOTAL TAPE LENGTH OF PROCESSED FILES = nnnnnn
%                  INCH(ES)
+
+                 %EXPLANATION:+This message is printed with every execution
+                  of SUPRDUMP with multiple tape data sets. nnnnnnn  is the
+                  summation of the approximate  tape  lengths  of  all  the
+                  processed data sets on all tape volume(s).
+
+                 %SYSTEM ACTION:+ Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+ None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP024   0106-93011-93032-1039-00029-00023-00000-CN03MQK
)attr default(%$_)
)body
%------------------------- SUPRDUMP MESSAGE DMP024W ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP024W THE BLOCK COUNT IN THE TAPE TRAILER LABEL (nnnn) DOES NOT
%                  MATCH THE ACTUAL BLOCK COUNT (mmmm).
$
$                 %EXPLANATION:$This message is printed with every execution
$                  of SUPRDUMP with standard label tape processing and C=+cc
$                  not coded. This message indicates a possible problem with
$                  the tape data set. nnnn is the block count  on  the  tape
$                  trailer label  and  mmmm  is  the actual block count. The
$                  trailer labels of each volume  of a multi-volume standard
$                  label processed tape data set are checked for block count.
$
$                 %SYSTEM ACTION:$ Normal program continuation.
$
$                 %PROGRAMMER RESPONSE:$ Examine tape data set. It may need
$                  to be recreated.
$
$    Press%PF03$to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP025   0104-93011-93014-1625-00022-00021-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP025I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP025I VOLUME SWITCHED TO VOLSER= vvvvvv AFTER BLOCK NUMBER nnn
+
+                 %EXPLANATION:+ This  message is  printed  for multi-volume
+                  data sets. vvvvvv  is  the next volume  serial number and
+                  nnn  is  the block count  of  the just-processed  volume.
+                  AFTER BLOCK NUMBER nnn is not printed for BLP processing.
+
+                 %SYSTEM ACTION:+ Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+ None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP026   0104-93011-93014-1625-00026-00030-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP026E ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP026E BLP PROCESSING FOR CONCATENATED TAPE FILES NOT ALLOWED
%                  (SPECIFY ALL VOLSERS IN SYSUT1 DD STATEMENT).
+
+                 %EXPLANATION:+This message is  printed when the SYSUT1 DD
+                  statement specifies BLP processing for concatenated tape
+                  files. This is not allowed; however, all the volumes  in
+                  the concatenation may be coded in the  VOL=SER parameter
+                  of the the SYSUT1 DD.
+
+                 %SYSTEM ACTION:+Program terminates with a return code of 8
+
+                 %PROGRAMMER RESPONSE:+ Recode  the  SYSUT1 DD statement to
+                  include all the VOLSERs  specified  in  the concatenation
+                  and remove all the concatenated DD statements.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP027   0104-93011-93014-1626-00024-00026-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP027W ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP027W BLKSIZE OF FILE EXCEEDS 32K - NOT PROCESSABLE USING
%                  STANDARD IBM ACCESS METHODS
+
+                 %EXPLANATION:+This message is printed when a tape file has
+                  a blocksize exceeding  32K.  See  message DMP012I for the
+                  maximum blocksize  found  in  the  data set. This message
+                  tells  the  user  that  programs  using  standard IBM I/O
+                  methods cannot process the data set properly.
+
+                 %SYSTEM ACTION:+Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+Take appropriate action.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
./ ADD NAME=DMP040   0109-93011-93032-1040-00036-00041-00000-CN03MQK
)attr default(%$_)
)body
%------------------------- SUPRDUMP MESSAGE DMP040I ---------------------------
%COMMAND ===>_ZCMD
$
%          DMP040I VOLSER=volser,BLK CNT=nnnnnnn,SEQ NO=mmmmm,LABEL=lbl,
%                                        DEN=den,p-TRK,DSN=dsname
%                  RECFM=recfm,LRECL=lrecl,CREATION DATE:YY=yy,DDD=ddd,
%                                        EXPIRATION DATE:YY=yy,DDD=ddd
$
$                 %EXPLANATION:$This message is issued for each  input  file
$                  processed by SUPRDUMP.
$
$                  The following are in the first message line:
$
$                  "volser" is the first  (or only) volume  serial number of
$                  the storage device on which the file  resides. nnn is the
$                  number  of  blocks  in  the file except  when C=+count is
$                  specified,   when  it  is  only  the  number   of  blocks
$                  processed.  SEQ  NO=mmm  is  printed only  for tape files
$                  where mmm is the logical  or physical sequence number  of
$                  the file, depending on the JCL label parameter. If BLP is
$                  coded, it is the physical sequence number.  For all other
$
$    Press%PF08$to display next screen.
$    Press%PF03$to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
  &ZPF08 = NEXT
  &ZPF20 = NEXT
  VPUT ( ZPF08 ZPF20 ) PROFILE
)PROC
   IF (&ZCMD ¬= &Z,NEXT)
         .MSG = SELMS004
)END
./ ADD NAME=DMP040B  0104-93012-93014-1627-00036-00036-00000-CN03MQK
%------------------------- HFSELECT MESSAGE SEL040I (CONT'D) ------------------
%COMMAND ===>_ZCMD
+         label parameters (SL, SUL, AL, etc.) it is the logical sequence
+         number. "lbl" is the JCL label parameter  (coded or defaulted).
+         DEN=den is printed for 3420 tape files where "den" is the actual tape
+         density (only 800, 1600 or 6250  BPI) and p-TRK indicates either 7 or
+         9-track recording mode. For 3480 tape cartridges, "den" is listed as
+         38000 BPI and 18TRK recording mode. "dsname" is the file name
+         specified  in  the JCL.
+
+         The following are in the second line of the message. They have valid
+         values only for disk files, or tape files run with standard label
+         processing:
+
+         "recfm" is the record format of the file (F, V, or U only).  "lrecl"
+         is the logical record length.  For SL processing, CREATION DATE is
+         the  Julian date  of tape creation. For BLP processing, CREATION DATE
+         is today's Julian date. EXPIRATION DATE yy  and ddd is the Julian date
+         of expiration if it exists.
+
+        %SYSTEM ACTION:+Normal program continuation.
+        %PROGRAMMER RESPONSE:+None.
+    Press%PF03+to END.
+    Press%PF07+to display the previous screen.
)INIT
   .HELP = SELH002
   &ZCMD = &Z
  &ZPF07 = LAST
  &ZPF19 = LAST
  &ZPF08 = DOWN
  &ZPF20 = DOWN
  VPUT ( ZPF07 ZPF08 ZPF19 ZPF20 ) PROFILE
)PROC
 IF (&ZCMD ¬= &Z,LAST)
       .MSG = SELMS004
)END
./ ADD NAME=DMP041   0104-93011-93014-1627-00020-00029-00000-CN03MQK
%------------------------- SUPRDUMP MESSAGE DMP041I ---------------------------
%COMMAND ===>_ZCMD
%
%          DMP041I (C) COPYRIGHT JUNE 1984 BY M. KARLIN, N. LINDNER SUPRDUMP
%                  RELEASE x.y  date
+
+                 %EXPLANATION:+Copyright and release information.
+
+                 %SYSTEM ACTION:+Normal program continuation.
+
+                 %PROGRAMMER RESPONSE:+None.
+
+    Press%PF03+to END.
)INIT
   .HELP = DMPH002
   &ZCMD = &Z
)PROC
   IF (&ZCMD ¬= &Z)
         .MSG = SELMS004
)END
