         MACRO
&LABEL   CHCKTIOT &FOUND=,&NOTFND=TIOTERR
&LABEL   BAL   R6,CALLTIOT
         CLI   TIOTFLAG,C'1'
         BNE   &NOTFND
         AIF   ('&FOUND' EQ '').NOBRNCH
         B     &FOUND
.NOBRNCH MEND
         SPACE 2
         MACRO
&LABEL   MESSAGE &MSGNUM,&BRANCH=
&LABEL   L     R1,PRINTBUF
         MVC   0(MSG&MSGNUM.LEN,R1),MSG&MSGNUM
         BAL   R6,PUTP2
         AIF   ('&BRANCH' EQ '').END
         B     &BRANCH
.END     MEND
         SPACE 2
         MACRO
         GETDATE &TODAY
&TODAY   DC    C'&SYSDATE'
         MEND
         TITLE 'SUPRDUMP PROGRAM'
         PRINT NOGEN
SUPRDUMP START 0
         USING *,R15
         STM   R14,R12,12(R13)      SAVE SYSTEM REGISTERS
         ST    R13,SAVEAREA+4
         LR    R3,R13               SAVE SYSTEM SAVEAREA ADDR
         LM    R11,R12,BASES
         CNOP  0,4
         BAL   R13,JUMPSAVE
SAVEAREA DS    18F
BASES    DC    A(SAVEAREA+4096,SAVEAREA+8192)
JUMPSAVE ST    R13,8(R3)     STORE MY SAVEAREA ADDR IN SYSTEM SAVEAREA
         USING SAVEAREA,R13,R11,R12 ESTABLISH R13,R11 & R12 AS BASE REG
         USING TIOENTRY,R4  MAKE TIOT DD ENTRY ADDRESSABLE
         DROP  R15
         L     R7,0(R1)   SAVE ADDR OF PARMS, REF BY R1 AT ENTRY
         SPACE 2
         L     R0,F65535  LOAD R0 WITH 65535
         GETMAIN R,LV=(0)     GET AN INPUT BUFFER OF 65535 BYTES
         STCM  R1,7,CCW+1     STORE BUFFER ADDRESS IN CCW
         CHCKTIOT NOTFND=NOSYSPRT
SYSPRNT  OPEN  (SYSPRINT,OUTPUT)          PARM, ATTRIBUTE & STATS FILE
         BAL   R6,PUTP2  INITIALIZE PRINTBUF WITH SYSPRINT BUF ADDR
         MESSAGE 41
         SR    R5,R5             GET PSA ADDR
         USING PSA,R5
         L     R5,PSATOLD        GET TCB ADDR
         USING TCB,R5
         L     R5,TCBTIO         GET TIOT ADDR
         DROP  R5
         MVC   MSG22JOB,0(R5)        GET JOBNAME
         MVC   MSG22PRC,8(R5)        GET (PROC)STEPNAME
         CLI   16(R5),C' '  IS THERE ONLY A STEPNAME & NO PROCSTEPNAME
         BE    NOPRCSTP               YES
         MVC   MSG22STP,16(R5)        NO
         B     ENDMSG22
NOPRCSTP MVC   MSG22JOB+9(4),MSGSPACE    BLANK OUT PROC LITERAL
         MVC   MSG22PRC+8(20),MSGSPACE
ENDMSG22 MESSAGE 22
         MVC   DDNAME,=C'SYSUT2  '   CHECK IF SYSUT2 IS IN JCL
         CHCKTIOT NOTFND=NOSYSUT2
SYSUT2   OPEN  (PRINTER,OUTPUT)    OUTPUT PRINT FILE
         BAL   R6,PUTP1           SKIP TO CH 1
         MVC   DDNAME,=C'DIAGNOSE'   CHECK IF DIAGNOSE DD IS IN JCL
         CHCKTIOT NOTFND=NODIAG
         OPEN  (DIAGNOSE,OUTPUT)
         MVI   DIAGNOP+1,X'00'       SET NOP TO DO SENSE
         MVI   DENCKEND+1,X'00'      SET NOP TO WRITE TO DIAGNOSE FILE
         DEVTYPE DDNAME,DVCTYPE
         CLC   DVCTYPE,=X'00000102'  IS DIAGNOSE ALLOCATED TO SYSOUT
         BNE   NODIAG                NO
         MVI   PRTDIAG+1,X'F0'       YES- SET BRANCH FOR PRINTING
         MVC   DIAGNOSE+LRECL(2),=H'80'  CHNG LRECL FOR PRINTING
NODIAG   EQU   *
*              ** GET LENGTH OF PARM FIELD
         LH    R5,0(R7)           GET LENGTH OF PARMS
         LTR   R5,R5              IS IT ZERO ?
         BZ    EOC                YES - NO PARMS
         LA    R7,1(R7)
         BCTR  R5,0
         L     R1,PRINTBUF
         STC   R5,PRNTCTL+1
         MVC   0(MSG0LEN,R1),MSG0
PRNTCTL  MVC   MSG0LEN(0,R1),1(R7)   PRINT OUT PARM FIELD
         BAL   R6,PUTP2
*
         LA    R5,0(R5,R7)     GET ADDRESS OF LAST PARM BYTE
         ST    R5,PARMEND        AND STORE IT IN PARMEND
NEXTPARM CLI   2(R7),C'='     IS NEXT PARM A KEYWORD
         BNE   KEYWRDER          NO-ERROR
         LA    R2,0             YES. ZERO OUT R2 FOR USE IN TRT
         LA    R15,OPTNTABL     LOAD ADDR OF KEYWORD TABLE
         TRT   1(1,R7),0(15)   IS THIS A VALID KEYWORD
         BZ    DUPKEYW              NO
         IC    R1,0(0,R1)          YES-LOAD KEYWORD INTO R1
         STC   R1,NOPOPTN+3
NOPOPTN  MVI   0(R15),X'00'       BLANK OUT KEYWORD ON TABLE
         LA    R7,2(R7)         POINT TO PARM VALUE
         B     JUMPOFF2-4(R2)    JUMP TO CORRECT KEYWORD PROCESSING
JUMPOFF2 B     GETR                  R=
         B     GETC                  C=
         B     GETS                  S=
         B     GETT                  T=
         B     GETF                  F=
         B     GETN                  N=
         B     GETD                  D=
         TITLE 'PARM PROCESSING'
TESTN    LA    R5,0
         MVC   WORKFLD,MSGSPACE
PVERLOOP C     R7,PARMEND           IS THIS THE END OF THE PARM
         BH    VERPARM              YES
         LA    R7,1(R7)             NO-GET NEXT PARM CHARACTER
         CLI   0(R7),C','      ','= KEYWORD DELIMITER
         BE    VERPARM1
         IC    R9,0(0,R7)       PUT PARM CHARACTER INTO R9
         STC   R9,WORKFLD(R5)   AND THENCE INTO WORKFLD1
         LA    R5,1(R5)        R5=POINTER FOR WORKFLD1
         C     R5,PARMLIM      PARMS NOT ALLOWED TO EXCEED 8 CHARS
         BH    PARMLNER
         B     PVERLOOP         FILL UP WORKFLD1 WITH KEYWORD VALUE
VERPARM  MVI   ENDPARMS,C'1'    1 INDICATES END OF PARM
VERPARM1 LTR   R5,R5            PARM EMPTY
         BZ    NXT              YES-OK GO TO NEXT PARAMETER
         BCTR  R5,0
BACKWTST MVI   NUMBERR,C' '
         EX    R5,VERNUMLP     TEST TO SEE IF PARM IS NUMERIC
         BNZ   VERNUMER
         EX    R5,PKVNUM       PACK PARM INTO WORKFLD1
         CP    WORKFLD1,ONE    IS PARM VALUE = 0
         BL    NXT             YES-OK USE DEFAULT
         BR    R6
*
VERNUMER MVI   NUMBERR,C'1'
         BR    R6
VERNUMLP TRT   WORKFLD(1),TRNSTAB2
PKVNUM   PACK  WORKFLD1,WORKFLD(1)
         TITLE 'T=, R= AND C= PARM PROCESSING'
GETT     MVC   PARMLIM,=F'65'
         ST    R7,TITADDR     STORE STARTING ADDRESS OF TITLE
         BAL   R6,TESTN       EXECUTE TESTN TO GET LENGTH OF TITLE
         L     R9,TITADDR     LOAD R1 WITH ADDR OF TITLE FOR PRINTING
         LA    R9,1(R9)       POINT BEYOND THE EQUAL SIGN TO TITLE
         STC   R5,TITMV+1
TITMV    MVC   TITLE+2(0),0(R9) SAVE TITLE FOR PRTING ON EACH PAGE
         MVC   PARMLIM,=F'8'
         B     NXT             GET NEXT PARM
         SPACE 1
GETR     BAL   R6,TESTN
         MVI   RLENFLAG,C'1'     FLAG TO INDICATE USER CODED R=
         CLI   NUMBERR,C'1'
         BE    CHKVAR            IS R=V (VARIABLE RECFM) REQUESTED
         ZAP   RLEN,WORKFLD1     PUT R= PARM INTO RLEN
         B     NXT
         SPACE 1
CHKVAR   CLI   WORKFLD,C'V'      R=V
         BNE   PMNUMBER         NO-ERROR
         MVI   VARFLAG,C'V'   NOP FOR VARIABLE LENGTH RECORDS
         MVI   REC1BLK+1,X'00'   NOP FOR VARIABLE LENGTH RECORDS
         MVI   NXTREC+1,X'00'
         B     NXT
         SPACE 1
GETC     BAL   R6,TESTN
         CLI   NUMBERR,C'1'
         BE    CHKBACKW
CNTPROC  MVI   CNTSW+1,X'00'    NOP THE BRANCH TO OUTPUT ONLY C= BLOCKS
         ZAP   LIMIT,WORKFLD1     PRINT ONLY 'LIMIT' BLOCKS
         B     NXT
         SPACE 1
CHKBACKW CLI   WORKFLD,C'-'   IS BACKWARD OPTION REQUESTED (NEGAT. CNT)
         BNE   CHKFINSH  NO- IS '+' REQU - STOP BEFORE END OF FILE
         MVI   BACKWOPN+1,X'F0' YES-SET BRANCH FOR BACKWARD OPEN
         MESSAGE 17
RETURNC  MVI   WORKFLD,C'0'   YES-REPLACE '-' WITH A ZERO
         BAL   R6,BACKWTST    CHECK FOR NO OTHER ERRORS
         CLI   NUMBERR,C'1'   IS THERE ANUMERIC ERROR
         BE    PMNUMBER          YES
         B     CNTPROC
         SPACE 1
CHKFINSH CLI   WORKFLD,C'+'   IS STOP BEFORE END OF FILE REQUESTED
         BNE   PMNUMBER       NO- ERROR
         MVI   FINSHFIL+1,X'F0'  SET BRANCH TO STOP PROCESSING
         MESSAGE 18,BRANCH=RETURNC
         TITLE 'S=, F= AND N= PARM PROCESSING'
GETS     BAL   R6,TESTN
         CLI   NUMBERR,C'1'
         BE    PMNUMBER
         ZAP   SKPCNT,WORKFLD1
         ED    MSG11SKP,SKPCNT+3
         MESSAGE 11,BRANCH=NXT
         SPACE 1
GETF     BAL   R6,TESTN      GET FORMAT PARAMETER INTO WORKFLD
         LTR   R5,R5      IS THERE JUST 1 SUBPARM
         BZ    ACHCHK     YES
         CLI   WORKFLD+1,C'P'  2ND BYTE =P:PARTIAL BLOCK LISTING ONLY
         BNE   FORMATL         NO
         MVI   FORMATP+1,X'F0' SET BRANCH TO ONLY PRT 1ST LINE OF BLOCK
         B     ACHCHK
FORMATL  CLI   WORKFLD+1,C'L'  2ND BYTE OF WORKFLD IS FOR LOC/REMOTE
         BNE   FORMATER   ERROR-SECOND BYTE NOT L
         MVI   REMOTESW+1,X'F0'  YES-SET THE B TO BYPASS REMOTE TABLE
         MVI   REMOTSW2,X'47'  YES-NOP THE USE OF THE REMOTE TABLE
ACHCHK   CLI   WORKFLD,C'C'    IS CHARACTER ONLY PRINTOUT WANTED
         BE    NXT                        YES
         MVI   LINECT+1,X'00'   PUT OUT RULER LINE
         CLI   WORKFLD,C'R'     IS RULER LINE ON CHARACTER ONLY REQU
         BE    NXT            YES
         MVI   HEXSW+1,X'00'
         CLI   WORKFLD,C'H'  IS THIS THE HEX OPTION
         BE    NXT
         MVI   ASCIISW+1,X'00'
         CLI   WORKFLD,C'A'   IS ASCII TRANSLATION REQUESTED
         BE    NXT            YES
         CLI   WORKFLD,C'B'   ARE BOTH ASCII AND EBXDIC REQUESTED
         BNE   FORMATER       NO- INVALID FORMAT
         MVI   ASCIEBCD+1,X'00' SET NOP TO PRINT BOTH
         B     NXT
         SPACE 1
GETN     BAL   R6,TESTN
         CLI   NUMBERR,C'1'
         BE    PMNUMBER
         ZAP   FILES,WORKFLD1    NUMBER OF DATA SETS TO BE COPIED
         ED    MSG13NEQ,FILES+3
         MESSAGE 13,BRANCH=NXT
         SPACE 1
GETD     BAL   R6,TESTN
         CLI   NUMBERR,C'1'
         BE    PMNUMBER
         ZAP   DIAGRECS,WORKFLD1  NUMBER OF DIAGNOSTIC RECORDS TO WRITE
*        ED    MSG.....,DIAGRECS+3
*        MESSAGE ..,BRANCH=NXT
         B     NXT
         SPACE 2
NXT      CLI   ENDPARMS,C'1'
         BE    EOC
         B     NEXTPARM
         TITLE 'TIOT ROUTINE'
CALLTIOT SR    R5,R5
         USING PSA,R5
         L     R5,PSATOLD
         USING TCB,R5
         L     R5,TCBJSCB
         USING IEZJSCB,R5
         L     R5,JSCDSABQ
         USING QDB,R5
         L     R5,QDBFELMP
         USING DSAB,R5
DSABLOOP L     R4,DSABTIOT
         CLC   TIOEDDNM,DDNAME
         BE    FOUND
         ICM   R5,15,DSABFCHN
         BNZ   DSABLOOP
         MVI   TIOTFLAG,C'0'
         BR    R6
FOUND    MVI   TIOTFLAG,C'1'
         BR    R6
         TITLE 'OPEN SYSUT2'
EOC      MVC   DDNAME,=C'SYSUT1  '
         CHCKTIOT
         DEVTYPE DDNAME,DVCTYPE
         CLI   DVCTYPE+2,X'80'    IS DEVICE A MAG TAPE
         BNE   OPEN2           NO-BR TO NOT TAPE INPUT
         MVI   VOLVER,X'18'    TURN ON TAPE VOL VER EXIT TO GET EXPDT
         MVI   READX+1,X'00'      SET NOP FOR TAPE READ ROUTINE
         LA    R5,TAPEX           EXCP DCB
         B     OPENINPT           GO TO BEGIN
         SPACE 1
OPEN2    LA    R5,INPUT           FOR OTHER THAN TAPE
         MVC   MSG40BLK+9(14),MSGSPACE   BLANK OUT SEQUENCE NO ON DISK
         MVC   MSG40LBL+4(16),MSGSPACE   BLANK OUT DENSITY ON DISK
         MVI   BACKWOPN+1,X'00'  DISALLOW BACKWARD OPEN ON DISK
         ZAP   FILES,ONE         DISALLOW MORE THAN 1 FILE ON DISK
OPENINPT RDJFCB ((R5))        GET INPUT JFCB
         MVC   MSG40VOL,JFCBVOLS   GET VOLSER
         MVC   MSG40DSN,JFCBDSNM   GET DSN
         SPACE 1
         LH    R1,JFCBFLSQ       GET DATA SET SEQUENCE NUMBER
         LTR   R1,R1 IS LABEL=(0,TYPE) OR LABEL=(,TYPE) SPECIFIED-DEFLT
         BNZ   NODEFLT           NO
         LA    R1,1    YES - CHANGE TO LABEL=(1,TYPE)
         STH   R1,JFCBFLSQ    AND PUT IN THE JFCB
NODEFLT  CVD   R1,FILESQ           CONVERT SEQUENCE NO TO DECIMAL
         ED    MSG40SEQ,FILESQ+5   AND EDIT IT INTO THE MESSAGE
         TM    JFCBLTYP,JFCBLP  BLP?
         BNO   NOTBLP           NO
         MVC   MSG40LBL,=C'BLP'  YES
         LA    R1,CKCONCAT       CHECK IF CONCATENATED TAPE BLP
         DYNALLOC                ISSUE DYN INFO RETRIEVAL
         TM    CONCPARM,X'80'    BIT 0=PERMANENT CONCATENATION
         BO    CONCATER          YES- ERROR
*
*  FOLLOWING CODE FOR MULTI-VOLUME TAPE BLP PROCESSING
         SR    R1,R1             CLEAR
         IC    R1,JFCBNVOL       GET COUNT OF NUMBER OF VOLUMES
         ST    R1,NVOLSAVE       SAVE COUNT
         MVI   JFCBNVOL,X'01'    PROCESS JUST 1 VOL AT A TIME
*  I.E. MAKE THE SYSTEM THINK THIS IS THE ONLY VOLUME UNTIL IT
*  IT IS COMPLETELY PROCESSED, THE ADD 1 TO COUNT TO PROCESS NEXT VOL
         B     BACKWOPN          BRANCH OUT
NOTBLP   ZAP   FILES,ONE         DISALLOW MORE THAN 1 FILE IF NOT BLP
         TM    JFCBLTYP,JFCNL    NL?
         BNO   NOTNL
         MVC   MSG40LBL,=C'NL '
NOTNL    TM    JFCBLTYP,JFCSL    SL?
         BNO   NOTSL
         MVC   MSG40LBL,=C'SL '
NOTSL    TM    JFCBLTYP,JFCNSL  NSL?
         BNO   NOTNSL
         MVC   MSG40LBL,=C'NSL'
NOTNSL   TM    JFCBLTYP,JFCSUL  SUL?
         BNO   NOTSUL
         MVC   MSG40LBL,=C'SUL'
NOTSUL   TM    JFCBLTYP,JFCBLTM    LTM?
         BNO   NOTLTM
         MVC   MSG40LBL,=C'LTM'
NOTLTM   TM    JFCBLTYP,JFCBAL   AL?
         BNO   BACKWOPN
         MVC   MSG40LBL,=C'AL '
BACKWOPN NOP   OPENBACK     SET TO BRANCH ON BACKWARD OPEN
OPENREG  OPEN  ((R5)),TYPE=J OPEN (TYPE=J FOR DEFAULT LABEL)
RDJFCB   RDJFCB ((R5)) RE-ISSUE RDJFCB TO PICK UP RECFM,LRECL,CRDT/XPDT
*                                                                  NL
CHKRECFM TM    JFCRECFM,JFCUND   IS RECFM=U
         BNO   NOTU              NO
         MVI   MSG39FVU,C'U'     YES
         B     NOTV
NOTU     TM    JFCRECFM,JFCFIX   IS RECFM=F
         BNO   NOTF              NO
         MVI   MSG39FVU,C'F'     YES
         B     NOTV
NOTF     TM    JFCRECFM,JFCVAR   IS RECFM=V
         BNO   NOTV              NO
         MVI   MSG39FVU,C'V'     YES
NOTV     EQU   *
         LH    R1,JFCLRECL       GET LRECL
         CVD   R1,WORKFLD1
         ED    MSG39REC,WORKFLD1+5
         SPACE 1
         CLI   RLENFLAG,C'1'     DID USER CODE R=
         BE    GETDATES          YES
         CLI   READX+1,X'00'     NO- IS THIS A TAPE FILE
         BNE   ITSDISK           NO-ITS DISK, USE LRECL
         CLC   MSG40LBL(2),=C'SL'   YES-IS IT SL TAPE
         BNE   GETDATES          NO- USE R=100
ITSDISK  LTR   R1,R1             YES- IS LRECL=0 NEVETHELESS (RECFM=U)
         BZ    GETDATES          YES
         CVD   R1,RLEN           NO - USE RLEN=LRECL
         SPACE 1
GETDATES SR    R1,R1             CLEAR R1
         IC    R1,JFCBCRDT       GET CREATION DATE-YY
         CVD   R1,WORKFLD1
         UNPK  WORKFLD1(3),WORKFLD1+6(2)   UNPK 3 BYTES
         MVC   MSG39CRY,WORKFLD1+1
         OI    MSG39CRY+1,X'F0'
         ICM   R1,3,JFCBCRDT+1   GET CREATION DDD
         CVD   R1,WORKFLD1
         ED    MSG39CRD,WORKFLD1+6
         SPACE
         CLI   VOLVER,X'18' DID WE GET EXPDT FROM TAPE VOL VER EXIT
         BE    STRTPROC          YES
         SR    R1,R1         NO- CLEAR R1
         IC    R1,JFCBXPDT       GET EXPIRATN DATE-YY
         CVD   R1,WORKFLD1
         UNPK  WORKFLD1(3),WORKFLD1+6(2)   UNPK 3 BYTES
         MVC   MSG39EXY,WORKFLD1+1
         OI    MSG39EXY+1,X'F0'
         ICM   R1,3,JFCBXPDT+1   GET EXPIRATN DDD
         CVD   R1,WORKFLD1
         ED    MSG39EXD,WORKFLD1+6
         SPACE
         DROP  R4,R5   R4,R5 NO LONGER NEEDED FOR TIOT CHECKING
         TITLE 'SKIP AND OPEN BACKWARD ROUTINE'
STRTPROC CP    SKPCNT,ONE
         BL    RD1
         CVB   R5,SKPCNT            NO
EX       BAL   R6,READX      READ THRU S=SKIP NUMBER OF BLOCKS
         BAL   R2,MSG19RTN   DO MSG 19 RTN
         BCT   R5,EX
         B     NXTBLK   SEE IF BLKCNT > LIMIT
         SPACE 1
OPENBACK OPEN  ((R5),RDBACK),TYPE=J  (TYPE=J IF DEFLT LABEL SPECIFIED)
         L     R5,CCW           GET BUFFER ADDRESS
         A     R5,F65535        SET R5 TO POINT TO LAST BYTE OF BUFFER
         ST    R5,CCW           PUT NEW BUFFER ADDRESS IN CCW
         MVI   CCW,X'0C'        SET CCW TO READ BACKWARD
         MVI   BACKNOP+1,X'F0' CHK EOV1 IN LBL ON FORWRD TPE READ ONLY
         MVI   BACKOFLG+1,X'44' SET EOV TO INDICATE LAST READ WAS BCKW
         MVI   BACKBUF1+1,X'48' CHANGE NOP TO 'SR R4,R8'
         MVI   BACKBUF2+3,X'01' CHNG NOP TO 'LA R4,1(R4)' ADD 1 TO PNT
         MVI   REFLECT+1,X'02' CHNG NOP TO 'TM IOB+12,X'02' UNIT EXCEPT
         ZAP   FILES,ONE   FORCE N=1 (ONE FILE ONLY ON BACKWARD READ)
         CLI   VARFLAG,C'V'  IS R=V REQUESTED FOR BACKWARD OPEN
         BNE   RDJFCB            NO-BR TO RDJFCB FOLLOWING REGULAR OPEN
         L     R4,CCW  SET UP LEGIT ADDR IN R4 FOR CLC 0(2,R4),C'//'
IGNREQV  MVI   REC1BLK+1,X'F0'   YES-IGNORE R=V
         MVI   NXTREC+1,X'F0'
         CLC   0(2,R4),=C'//'    IS THE DATA JCL?
         BE    SETREQ80          YES
         ZAP   RLEN,=P'100'  NO- USE DEFAULT R=100
         B     VARERR
SETREQ80 ZAP   RLEN,=P'80'       USE R=80 FOR PRINTING JCL
VARERR   NOP   NXTRECNV    SET TO B WHEN R=V AND REC NOT VAR (ERROR)
         B     RDJFCB      FOR BACKWARDS ONLY- BR TO RDJFCB AFTER OPEN
         TITLE 'MAINLINE LOGIC'
RD1      BAL   R6,READX          LINK TO READ ROUTINE (READ OR READX)
         AP    BLKWRIT,ONE   ADD 1 TO BLOCKS WRITTEN
         MVC   PNT+4(8),MASK
         ED    PNT+4(8),BLKCNT+4   MOVE IN THE BLOCK NUMBER
         MVC   PNT(5),=C'BLOCK'
         CVD   R8,WORKFLD1            PRINT THE BLKSIZE
         BAL   R2,MSG19RTN  BAD BLK DISPLAY ROUTINE (R6 USED FOR MSG)
         MVC   PNT+16(8),MASK
         ED    PNT+16(8),WORKFLD1+4
         MVC   PNT+14(4),=C'SIZE'
         MVC   PNT+31(100),NUMLINE
         MVI   CC,C'0'      SKIP A BLANK LINE AFTER BLKCNT LINE
         AP    LINES,ONE    ADD 1 TO LINE FOR BLANK LINE
         BAL   R6,PUTP
         LTR   R8,R8   ARE NUMBER OF BYTES IN BLOCK = 0
         BZ    BLKERR  YES- I/O UNABLE TO READ DATA IN BLOCK
         SPACE 1
REC1BLK  B     NXTRECNV     SET TO NOP ON VARIABLE LENGTH RECS
         CH    R8,0(R4)     IS BDW = BLKSIZE
         BNE   VARIBER      NO - VARIABLE ERROR
         LH    R3,4(R4)     GET RDW OF 1ST REC IN BLOCK
         C     R3,=F'5'     IS RDW LESS THAN 5
         BL    VARIBER      YES - RDW IS INVALID
         LA    R3,4(R3)     ADD 4 TO RDW TO PRINT BDW WITH 1ST REC
         CVD   R3,RLEN      INITIALIZE RLEN
         B     VARREC
*
NXTREC   B     NXTRECNV     SET TO NOP ON VARIABLE LENGTH RECORDS
         LH    R3,0(R4)     GET RDW OF REC (NOT 1ST REC OF BLOCK)
         C     R3,=F'5'     IS RDW LESS THAN 5
         BL    VARIBER      YES - RDW IS INVALID
         CVD   R3,RLEN      INITIALIZE RLEN
         B     VARREC
*
NXTRECNV CVB   R3,RLEN         R3=RECORD LENGTH
VARREC   MVI   FORMTLIN+1,X'00'
         MVI   CC,C'0'   SKIP A LINE BEFORE NEW RECORD
         AP    LINES,ONE    ADD 1 TO LINE FOR BLANK LINE
SAMEREC  LR    R10,R3    R10=THE LESSER OF R3, R8 AND 100
         CR    R10,R8          R8=REMAINING BLKSIZE
         BH    RECMORE
COMP100  CVD   R10,WORKFLD1
         C     R10,=F'100'
         BH    LINELESS
FORMTLIN NOP   PRINTLIN
         AP    RCNT,ONE
         MVC   PNT+4(8),MASK
         ED    PNT+4(8),RCNT
         MVC   PNT+14(3),=C'LEN'
         MVC   PNT+18(6),MASK  MOVE IN MASK FOR RECORD LENGTH
         ED    PNT+18(6),WORKFLD1+5
         SPACE 1
PRINTLIN LR    R9,R10
         BCTR  R9,0
         STC   R9,STORLEN+1
         STC   R9,PRNTCHAR+1
         STC   R9,LNO+1       ADJUST THE LENGTH OF THE RULER LINE
STORLEN  MVC   HEXAREA,0(R4)      MOVE TO THE WORKAREA
ASCIISW  B     REMOTESW            NOP IF ASCII OPTION IS REQUESTED
         XLATE HEXAREA,100,TO=E   TRANSLATE ASCII TO EBCDIC
         MVC   PNT+27(3),=C'ASC'   INDICATE EBCDIC LINE
REMOTESW NOP   PRNTCHAR      B  IF LOCAL PRINTER REQUESTED
         STC   R9,REMOTETR+1    SET LENGTH OF TRANSLATE
REMOTETR TR    HEXAREA,TABLE4
PRNTCHAR MVC   PNT+31(0),HEXAREA  MOVE LINE FOR PRINTING
         BAL   R6,PUTP
ASCIEBCD B     HEXSW       SET TO NOP WHEN BOTH ASCII AND EBCDIC REQU
         EX    0,STORLEN         MOVE ORIGINAL RECORD INTO HEXAREA
REMOTSW2 EX    0,REMOTETR  TRANSLATE FOR REMOTE PRINTER, NOP ON F=XL
         EX    0,PRNTCHAR        PRINT EBCDIC CHARACTER LINE
         MVC   PNT+27(3),=C'EBC'   INDICATE EBCDIC LINE
         BAL   R6,PUTP
         SPACE 1
HEXSW    B     LINECT             NOP IF HEX SPECIFIED
         XC    HEXAREA,HEXAREA
         STC   R9,MOVEZONE+1
         STC   R9,TRANSZN+1
         STC   R9,MOVENUMR+1
         STC   R9,TRANSNO+1
MOVEZONE MVZ   HEXAREA,0(R4)
TRANSZN  TR    HEXAREA,TABLE2
         EX    0,PRNTCHAR
         BAL   R6,PUTP
         XC    HEXAREA,HEXAREA
MOVENUMR MVN   HEXAREA,0(R4)
TRANSNO  TR    HEXAREA,TABLE3
         EX    0,PRNTCHAR
         BAL   R6,PUTP
LINECT   B     CONTINPR     CHANGED TO NOP IF NOT(F=C OR DEFAULT)
LNO      MVC   PNT+31(0),NUMLINE
         BAL   R6,PUTP
         SPACE 1
CONTINPR AR    R4,R10           R4=ADDRESS OF RECORD BUFFER AREA
         SR    R8,R10
FORMATP  BNP   NXTBLK           CHANGED TO BRANCH WHEN F=XP
         SR    R3,R10
         BZ    NXTREC
         MVI   FORMTLIN+1,X'F0'
         B     SAMEREC
         SPACE 1
RECMORE  LR    R10,R8
         B     COMP100
LINELESS LA    R10,100
         B     FORMTLIN
         SPACE 3
NXTBLK   EQU   *
CNTSW    B     RD1                NOP IF COUNT SPECIFIED
         CP    BLKWRIT,LIMIT   IS BLOCK COUNT PARAMETER SATISFIED
         BL    RD1              NO
FINSHFIL NOP   QUIT        SET TO BRANCH IF C=+COUNT CODED
         SR    R5,R5       YES-CREATE INFINITE LOOP BY PUTTING 0 IN R5
         B     EX          GO TO SPACE FORWARD ROUTINE
         TITLE 'READ AND WRITE ROUTINES'
READX    B     READ         READ FORWARD CODE IS X'02' FOR TAPE READ
         L     R4,CCW       LOAD ADDRESS OF THE BUFFER
         EXCP  IOB
         WAIT  ECB=ECB
         SPACE 3
DENCK    NOP   DENCKEND        SET TO BRANCH AFTER FIRST TIME THRU
DIAGNOP  MVI   DENCK+1,X'F0'   SET BRANCH
         MVC   MSG40DEN(7),MSGSPACE   BLANK OUT DENSITY AND P-TRK  NL
         EXCP  IOB1         GET TAPE DRIVE SENSE BYTES             NL
         WAIT  ECB=ECB1                                            NL
         TM    DVCTYPE+3,X'80' (UCBTYPE) IS IT 3480 CARTRIDGE TAPE NL
         BNO   TAPEDEN           NO                                NL
         MVC   MSG40DEN(5),=C'38000'   YES 38000 BPI               NL
         MVC   MSG40TRK(2),=C'18'   18 TRK TAPES                   NL
         ZAP   DENSITY,=PL3'38000'                                 NL
         MVI   IBGLEN,X'8C'         IBG=.08 INCHES                 NL
         MVI   SRP+5,SHFT3480   SET SHIFT TO DIVIDE BY 100         NL
         B     DENCKEND         NOW CHECK RECFM                    NL
         SPACE 1                                                   NL
TAPEDEN  TM    SENSE6,X'10'  IS TAPE T1600                         NL
         BO    TEST6250                                            NL
         MVC   MSG40DEN(5),=C' 1600'  YES                          NL
         MVI   MSG40TRK,C'9'                                       NL
         ZAP   DENSITY,=PL3'1600'  SET DEN VAR TO 1600 FOR CALC    NL
         MVI   IBGLEN,X'6C'     SET INT-BLK-GAP LNGTH TO .6 INCHES NL
         B     CHKTRK7                                             NL
TEST6250 TM    SENSE6,X'08'     IS DRIVE 3420-4,-6,-8              NL
         BNO   NOT6250          NO - TAPE IS THEN 800BPI           NL
         MVC   MSG40DEN(5),=C' 6250'  YES TAPE IS 6250BPI          NL
         ZAP   DENSITY,=PL3'6250' SET DEN VAR TO 6250 FOR CALC     NL
         MVI   IBGLEN,X'3C'  SET INT-BLK-GAP LNGTH TO .3 INCHES    NL
         B     CHKTRK7                                             NL
NOT6250  MVC   MSG40DEN(5),=C'  800'  TAPE IS 800BPI               NL
         ZAP   DENSITY,=PL3'800'  SET DEN VAR TO 800 FOR CALC      NL
         MVI   IBGLEN,X'6C'     SET INT-BLK-GAP LNGTH TO .6 INCHES NL
CHKTRK7  TM    SENSE6,X'80'     IS 7-TRK RECORDING MODE USED       NL
         BNO   TRK9             NO - IT IS 9 TRACK                 NL
         MVI   MSG40TRK,C'7'  YES - IT IS 7 TRACK           NL
         MVI   IBGLEN,X'7C'           SET IBG TO .7 INCHES         NL
         B     DENCKEND                                            NL
TRK9     MVI   MSG40TRK,C'9'  NO - IT IS 9 TRACK            NL
         SPACE 1
DENCKEND B     SKIPDIAG          SET TO NOP IF DIAGNOSE REQUESTED
         AP    DIAGPUTS,ONE      ADD 1 TO RECS WRITTEN TO DIAG FILE
         CP    DIAGPUTS,DIAGRECS HAVE WE WRITTEN THE REQUESTED AMOUNT
         BH    SKIPDIAG          YES
         MVC   STATUS,IOB+12     MOVE IN UNIT AND CHANNEL STATUS BYTES
PRTDIAG  NOP   PRTDIAG2          CHNG TO BRANCH IF DIAGNOSE IS SYSOUT
         PUT   DIAGNOSE,SBYTES
SKIPDIAG EQU   *
         SPACE 3
         TM    IOB+12,X'01'       TEST FOR TM (UNIT EXCEPTION)
         BO    TPMK            END OF DATA SET
REFLECT  TM    IOB+12,X'00' CHG TO X'02' ON READBACK FOR UNIT CHECK
         BNO   UNTCKRET     NO UNIT CHECK
         TM    IOB+3,X'08'  YES- CHECK 2ND SENSE BYTE FOR LOAD POINT
         BO    QUIT         BEGINNING OF TAPE HIT
UNTCKRET L     R8,F65535      LOAD LENGTH OF BUFFER
         LH    R9,IOB+14   GET RESIDUAL COUNT
         SLL   R9,16         AND PUSH OUT HIGH ORDER SIGN BITS
         SRL   R9,16         WHEN RESIDUAL COUNT EXCEEDS 32K
         SR    R8,R9        GET BLOCK LENGTH IN R8
         BZR   R6     RETURN TO MAIN ROUTINE IF BLKSIZE=0
         CLI   HDRFLAG,C'2'    HAVE WE READ A TM AFTER A HDR LABEL
         BNE   BACKNOP         NO
         MVI   HDRFLAG,C'0'    YES-RESET FLAG AFTER READING MORE DATA
         SPACE 1
*   NXT PARAGR FOR EOV1/HDR1 CHECK ON TAPE LABELS-SKIP WHEN BACKW READ
BACKNOP  NOP   BACKBUF1    SET TO BRANCH WHEN BACKWARD READ
         C     R8,=F'80'      IS THE BLKSIZE = 80 (FOR LABEL RECORD)
         BNE   BACKBUF1    NO
         CLC   0(4,R4),=C'EOV1' YES-EOV1 THE FIRST 4 CHARS OF RECORD?
         BNE   CHKHDR     NO
         MVI   EOVFLAG,C'1' YES- SET EOV FLAG- CHECKED WHEN TPMK HIT
         B     BACKBUF1
         SPACE 1
CHKHDR   CLC   0(4,R4),=C'HDR1'  HDR1 THE FIRST 4 BYTES OF RECORD?
         BNE   BACKBUF1    NO
         MVI   HDRFLAG,C'1'      YES - SET HDR FLAG
         SPACE 1
BACKBUF1 SR    0,0   NOP CHANGED TO SR R4,R8 ON BACKWARD READ
BACKBUF2 LA    R4,0(R4) NOP CHNG TO LA R4,1(R4)-BACKWARD READ
MINMAX   AP    BLKCNT,ONE            ADD 1 TO NUMBER OF BLOCKS
         CVD   R8,WORKFLD1     PUT BLKSIZE IN WORKFLD1
         AP    TOTBYTES,WORKFLD1 ADD BLKSIZE TO TOTAL NUMBER OF BYTES
         ST    R8,LASTBLK      STORE THE BLKSIZE OF THE LAST BLOCK
         MVC   MINBLK(4),SAVEMIN  PUT PREV MIN IN MINBLK
         C     R8,SAVEMIN
         BNL   MINMAX2
         ST    R8,SAVEMIN
MINMAX2  C     R8,MAXBLK
         BNHR  R6
         ST    R8,MAXBLK
         BR    R6
         SPACE 1
READ     L     R4,CCW             FOR DISK READ
         READ  DECB,SF,INPUT,(R4),'S'
         CHECK DECB
         LH    R8,INPUT+62     LOAD BLKSIZE INTO R8
         L     R2,DECB+16      LOAD IOB ADDRESS INTO R2
         SH    R8,14(R2)   SUBTRACT RESID CNT- BLK LENG IN R8
         B     MINMAX
         SPACE 1
PUTP     CP    LINES,=P'58'   HAVE 58 LINES BEEN PRINTED ON PAGE
         BL    PUTP1          NOT YET
         ZAP   LINES,ONE      YES - SET PAGE LINE COUNTER TO 1
         PUT   PRINTER,TITLE  PRINT TITLE
         MVI   TITLE,C'1'     SET TITLE TO SKIP TO NEW PAGE
PUTP1    PUT   PRINTER,CC
         MVC   PNT,PNT-1
         MVI   CC,C' '
         AP    LINES,ONE
         BR    R6
         SPACE 1
PUTP2    PUT   SYSPRINT
         ST    R1,PRINTBUF
         MVI   0(R1),C' '
         MVC   1(132,R1),0(R1)
         BR    R6
         SPACE 1
PRTDIAG2 MVC   PNT+31(40),NUMLINE    PRINT RULER
         MVI   CC,C'0'
         ST    R6,SAVER6              SAVE BAL REGISTER
         BAL   R6,PUTDIAG
         MVZ   HEXAREA(40),SBYTES     PRINT FIRST HEX LINE
         TR    HEXAREA(40),TABLE2
         MVC   PNT+31(40),HEXAREA
         BAL   R6,PUTDIAG
         XC    HEXAREA(40),HEXAREA    ZERO OUT
         MVN   HEXAREA(40),SBYTES     PRINT SECOND HEX LINE
         TR    HEXAREA(40),TABLE3
         MVC   PNT+31(40),HEXAREA
         BAL   R6,PUTDIAG
         L     R6,SAVER6          RESTORE BAL REGISTER
         B     SKIPDIAG
         SPACE 1
PUTDIAG  PUT   DIAGNOSE,CC            PRINT DIAGNOSE
         MVC   PNT,PNT-1
         MVI   CC,C' '
         BR    R6
         TITLE 'TAPEMARK AND EOJ ROUTINES'
TPMK     CLI   HDRFLAG,C'1'     WAS A HDR LABEL JUST READ?
         BNE   NOHDR            NO
         MVI   HDRFLAG,C'2'     INDICATE WE HAVE JUST PROCESSED A HDR
NOHDR    EQU   *                FOLLOWED BY A TPMK
         MVC   PNT(9),=C'TAPE MARK'   PRINT TAPE MARK
         MVC   PNT+11(6),MSG40SEQ   PRINT ABSOLUTE FILE SEQ NO
         MVI   PNT+18,C'*'     MOVE ASTERISKS TO REST OF LINE
         MVC   PNT+19(113),PNT+18    RIPPLE
         MVI   CC,C'0'
         AP    LINES,ONE
         BAL   R6,PUTP
         ZAP   WORKFLD1,BLKCNT    GET TOTAL BLOCK COUNT
         SP    WORKFLD1,EOVBLKCT  SUBTACT PRIOR VOLUMES'S BLKCNT
         CVB   R1,WORKFLD1  GET THE NO.OF BLOCKS PROCESSED ON THIS VOL
         ST    R1,TAPEX+12  PLACE IT IN DCBBLKCT FIELD FOR LABL VERIFY
         ZAP   EOVBLKCT,BLKCNT
*        TM    JFCBLTYP,JFCNL+JFCBLP  IS LABEL TYPE=NL OR BLP
*        BM    QUIT      SKIP EOV RTN-TO ALLOW MULTIPLE FILE PROCESS
* ABOVE COMMENTED - NOT ISSUING EOV CAUSED OUT OF SYNC ON MULTI-FILES
BACKOFLG OI    TAPEX+48,X'04' SET BIT 5 OF DCBOFLAGS TO INDICATE A TM
         EOV   TAPEX HAS BEEN READ & BRANCH TO EODAD ROUTINE (QUIT) FOR
*    EOF OR DO VOLUME SWITCHING FOR EOV (FOR STANDARD LABEL PROCESSING)
         L     R1,TAPEX+44   END OF FILE NOT HIT SO GET DEB ADDRESS
         L     R1,32(,R1)    GET UCB ADDR
         MVC   MSG25VOL,28(R1)    GET VOLSER OF SWITCHED VOLUME
         ED    MSG25BLK,BLKCNT+4 GET NO OF BLKS PROCESSED AT SWITCHTIME
         MESSAGE 25               PUT OUT VOLUME SWITCH MESSAGE
         CLI   EOVFLAG,C'2'   HAS VOLUME ALREADY BEEN SWITCHED ON
*                 MULTI-VOLUME TAPE BLP
         BNE   NXTBLK     NO- CONTINUE PROCESSING
         MVC   MSG40VOL,MSG25VOL    YES- SET MSG40 WITH NEW VOLSER
         SR    R1,R1      CLEAR
         IC    R1,JFCBNVOL     RESET VOL SEQ # TO VOL BEING PROCESSED
         STH   R1,JFCBVLSQ
         B     NXTBLK     CONTINUE PROCEESSING
         SPACE 2
QUIT     CP    BLKCNT,ONE    2 CONSECTUTIVE TPMKS ENCOUNTERED
         BL    CHKEOV               YES
         AP    FILEPROC,ONE NO-ADD 1 TO NUMBER OF DATA SETS PROCESS
         ED    MSG40BLK,BLKCNT+4
         MESSAGE 40
         MESSAGE 39
         CP    BLKCNT,ONE   IS THERE ONLY 1 BLOCK IN THE FILE
         BH    LDMINBLK     NO
         MVC   MINBLK(4),SAVEMIN  YES-USE SAVEMIN AS ACTUAL MIN
LDMINBLK L     R1,MINBLK
         CVD   R1,WORKFLD1
         ED    MSG12MIN,WORKFLD1+5
         L     R1,MAXBLK
         CVD   R1,WORKFLD1
         ED    MSG12MAX,WORKFLD1+5
         C     R1,=F'32767'        IS MAX BLKSIZE > 32K?
         BH    BLKGT32K            YES
BLKMSG   EQU   *
         L     R1,LASTBLK
         CVD   R1,WORKFLD1
         ED    MSG12LST,WORKFLD1+5
         ED    MSG12BYT,TOTBYTES+2
         MESSAGE 12
         ED    MSG10CNT,BLKWRIT+3   NUMBER OF BLOCKS DUMPED
         MESSAGE 10
         CP    SKPCNT,BLKCNT
         BNL   NOBLKS
         AP    BLKWRIT,SKPCNT
         CP    BLKWRIT,BLKCNT
         BE    EOFMSG
QUIT2    CLI   READX+1,X'00'   IS THIS A TAPE FILE
         BNE   QUIT3           NO
         CP    DENSITY,PZERO   YES- IS DENSITY 6250/1600/800/38000?
         BE    QUIT3           NO
         DP    TOTBYTES,DENSITY THE QUOTIENT GOES INTO FIRST 5 BYTES
         SP    BLKCNT,ONE      ONE LESS IBG THAN THERE BLOCKS
         MP    BLKCNT,IBGLEN    MULTIPLY INTER-REC-BLK LEN BY # BLKS
SRP      SRP   BLKCNT,64-1,0   DIVIDE BY 10-SHIFT RIGHT 1 WITH NO ROUND
*          MODIFIED FOR 3480 CARTRIDGE TO DIVIDE BY 100 SINCE IBG=.08
         AP    BLKCNT,TOTBYTES(5)
         AP    BLKCNT,ONE
         ED    MSG21TPL,BLKCNT+3
         MESSAGE 21
         AP    TAPELEN,BLKCNT  SUM FOR TOTAL TAPE LENGTH
QUIT3    CLI   EOVFLAG,C'1'    HAS EOV1 BEEN HIT IN A TAPE LABEL
         BE    EOVMSG          YES-END (SO TAPE DOESNT RUN OFF REEL)
*        SINCE MULTI-REEL DATASETS ONLY HAVE 1 TPMK FOLLOWING EOV LABL
         CP    FILES,FILEPROC  IS N= PARAMETER SATISFIED
         BH    REINIT          NO
         SPACE 2
CLOSE    CLOSE (TAPEX,,PRINTER,,DIAGNOSE)
         CP    FILEPROC,ONE       HAVS MORE THAN 1 FILE BEEN PROCESSED
         BNH   CKTAPCPY
         ED    MSG23TPL,TAPELEN+3
         MESSAGE 23            TOTAL LENGTH OF TAPE PROCESSED
         USING TIOENTRY,R4
CKTAPCPY MVC   DDNAME,=C'TAPECOPY'   IS THERE A TAPECOPY DD STATEMENT
         CHCKTIOT FOUND=DOTAPCPY,NOTFND=RETURN
RETURN   CLOSE (SYSPRINT)
         L     R13,SAVEAREA+4
         LM    R14,R12,12(R13)
RCSPOT   LA    R15,0      RETURN CODE (MODIFIED)
         BR    R14
         SPACE 1
BLKCTXIT ST    R14,SAVER14    SAVE R14
         CVD   R0,WORKFLD1    TRAILER LABEL BLOCK COUNT IN R0
         ED    MSG24LBL,WORKFLD1+4
         L     R1,12(0,R1)    GET DCB BLKCT-AT OFFSET 12 IN DCB (R1)
         CVD   R1,WORKFLD1
         ED    MSG24BLK,WORKFLD1+4
         MESSAGE 24      PUT OUT WARNING- LABEL BLK CNT NOT= ACTUAL
         L     R14,SAVER14    RESTORE R14
         LA    R15,4     IGNORE BLOCKCOUNT UNEQUAL CONDITION
         BR    R14       RETURN
         SPACE 1
VOLVERXT ST    R14,SAVER14    SAVE R14
         USING OEVSID,R1      SET BASE
         L     R2,OEVSHDR1    GET ADDR OF TAPE LABEL HEADER
         MVC   MSG39EXY(2),48(R2)   GET YY OF EXPIRATION DATE
         MVC   MSG39EXD+1(3),50(R2)   GET DDD OF XPIRATION DATE
         DROP  R1
         L     R14,SAVER14    RESTORE R14
         SR    R15,R15   RETURN NORMALLY TO OPEN/EOV
         BR    R14       RETURN
         SPACE 1
EOFMSG   MESSAGE 2,BRANCH=QUIT2
TIOTERR  MESSAGE 3,BRANCH=ER
KEYWRDER MESSAGE 4,BRANCH=ER
DUPKEYW  MESSAGE 5,BRANCH=ER
PARMLNER MESSAGE 6,BRANCH=ER
PMNUMBER MESSAGE 8,BRANCH=ER
FORMATER MESSAGE 9,BRANCH=ER
VARIBER  MVI   VARERR+1,X'F0'  SET BRANCH TO SKIP OVER READ
         MESSAGE 14,BRANCH=IGNREQV
NOBLKS   MESSAGE 15,BRANCH=QUIT2
CONCATER MESSAGE 26,BRANCH=ER        TAPE BLP CONCATENATION
BLKGT32K MESSAGE 27,BRANCH=BLKMSG    WARNING - BLKSIZE > 32K
EOVMSG   MESSAGE 16     ADDED LOGIC TO PROCESS MULTI-VOL TAPES BLP
         SR    R1,R1             CLEAR
         IC    R1,JFCBNVOL       GET NUMBER OF VOLUMES
         C     R1,NVOLSAVE       HAVE WE PROCESSED ALL VOLUMES
         BNL   CLOSE             YES - ALL DONE
         LA    R1,1(R1)          ADD 1 TO PROCESS NEXT VOLUME
         STC   R1,JFCBNVOL       MODIFY JFCB
         ZAP   FILESQ,PZERO      RESET FILESQ COUNTER
         MVI   ENDINIT+1,X'00'   SET NOP TO BRANCH TO EOV
         MVI   EOVFLAG,C'2'  SET EOV FLAG TO INDICATE ALREADY SWITCHED
         MVC   MSG25VOL+6(19),MSGSPACE  BLANK OUT BLOCK COUNT
         B     REINIT            REINIT FIELDS
         SPACE 2
SASFILER MVI   RCSPOT+3,X'08'    DYNAMIC ALLOC FOR A SAS FILE FAILED
         MESSAGE 20,BRANCH=RETURN
BLKERR   MVC   PNT(29),=C' UNABLE TO READ DATA IN BLOCK'
         BAL   R6,PUTP     WRITE MSG
         B     NXTBLK      GET NEXT BLOCK
         SPACE 1
ER       MVI   RCSPOT+3,X'08'     STORE RET CODE 8 FOR EXIT ROUTINE
         MESSAGE 1,BRANCH=CLOSE
         SPACE 1
NOSYSPRT LA    R1,REQBLKP
         DYNALLOC
         LH    R15,RBERR    ERROR
         LTR   R15,R15      WAS SYSPRINT DYNAMICALLY ALLOCATED
         BNZ   NOPRINT NO-BRANCH TO WRITE 'NO SYSPRINT' MSG ON CONSOLE
         WTO   'SYSPRINT FILE DYNAMICALLY ALLOCATED TO SYSOUT=*'
         B     SYSPRNT   OPEN SYSPRINT,SET TO NOP IF SYSUT2 NOT IN JCL
         SPACE 1
NOSYSUT2 LA    R1,REQBLKP
         DYNALLOC
         LH    R15,RBERR    ERROR
         LTR   R15,R15      WAS SYSPRINT DYNAMICALLY ALLOCATED
         BNZ   TIOTERR      NO
         WTO   'SYSUT2 FILE DYNAMICALLY ALLOCATED TO SYSOUT=*'
         B     SYSUT2    BRANCH TO OPEN SYSUT2
         SPACE 1
NOPRINT  MVI   RCSPOT+3,X'FF' SET RETURN CD TO 255-CANT ALLOC SYSPRINT
         WTO   'SYSPRINT DD STATEMENT MISSING'
         B     CLOSE                  GET OUT
         SPACE 1
REINIT   MVC   MINBLK,F65535     RESET MINIMUM BLKSIZE
         MVC   SAVEMIN,F65535 RESET MINIMUM BLKSIZE
         XC    MAXBLK,MAXBLK     RESET MAXIMUM BLKSIZE TO LOW VALUES
         XC    LASTBLK,LASTBLK  RESET LAST BLKSIZE
         MVC   MSG10CNT,MASK     RESET MASKS
         MVC   MSG12MIN,MASK
         MVC   MSG12MAX,MASK
         MVC   MSG12LST,MASK
         MVC   MSG12BYT,MASK
         MVC   MSG21TPL,MASK
         MVC   MSG24BLK,MASK
         MVC   MSG24LBL,MASK
         MVC   MSG25BLK,MASK
         MVC   MSG40BLK,MASK
         MVC   MSG40SEQ,MASK
*        MVC   MSG39REC,MASK    MSG39 NEED NOT BE RE-INIT, USED ONLY
*        MVC   MSG39CRD,MASK          FOR DISK AND SL TAPES (N=1 ONLY)
*        MVC   MSG39EXD,MASK
         ZAP   BLKCNT,PZERO     RESET BLOCK COUNT
         ZAP   BLKWRIT,PZERO
         ZAP   RCNT,PZERO       RESET RECORD COUNT
         ZAP   TOTBYTES,PZERO   RESET TOTAL BYTE COUNT
         ZAP   SAVEBLK,=P'-1'  RESET THE PREV BLK
         ZAP   MSG19CNT,PZERO   RESET MSG 19 COUNTER (MAX 10)
         MVI   DENCK+1,X'00'    RESET TO GET DENSITY OF NEXT FILE
         ZAP   DIAGPUTS,PZERO   RESET FOR DIAGNOSE FILE
         BAL   R6,PUTP2      SKIP EXTRA LINE BETWEEN SYSPRINT GROUPS
         AP    FILESQ,ONE       ADD 1 TO NUMBER OF FILES PROCESSED
         ED    MSG40SEQ,FILESQ+5  EDIT FILE SEQ INTO ATTRIB MSG
         MVC   TITLE+68(6),MSG40SEQ  MV ABSOLUTE FILE SEQ NO TO TITLE
         ZAP   LINES,=P'58'          CAUSES SKIP TO TOP OF NEXT PAGE
         CLOSE (TAPEX,LEAVE)       CLOSE TAPE FILE INORDER TO KEEP
         CVB   R9,FILESQ     SYSTEM INFORMED WHICH FILE IS BEING PROC
         STH   R9,JFCBFLSQ  BY INSERTING THE CORRECT FILE SEQ NO INTO
         OPEN  (TAPEX),TYPE=J     THE JFCB AND OPENING THE DCB
*                             WITH THE MODIFIED JFCB
         CLI   VARFLAG,C'V'   IS R=V REQUESTED
         BNE   ENDINIT        NO
         MVI   REC1BLK+1,X'00'  YES-RESET ALL THE NOP'S
         MVI   NXTREC+1,X'00'
         MVI   VARERR+1,X'00'
ENDINIT  B     STRTPROC  RETURN TO START OF FILE PROCESSING-
*                  NOP FOR FOR MULTIVOLUME BLP TAPE PROCESSING
         MVI   ENDINIT+1,X'F0' RESET ABOVE TO BR AFTER EACH TIME THRU
         B     BACKOFLG    FOR MULTIVOLUME BLP TAPE PROCESSING
         SPACE 1
CHKEOV   CLI   HDRFLAG,C'2'  HAVE WE PROCESSED 2 TPMKS FOLLOWING A HDR
         BE    STRTPROC      YES - ITS A DUMMY DATA SET, CONTINUE
         CLI   JFCBLTYP,JFCBLP  NO- IS LABEL TYPE 'BLP'
         BNE   EOVMSG           NO-GO TO EOV MSG
         CP    FILESQ,ONE   IS THIS THE FIRST PHYSICAL DATA SET
         BNE   EOVMSG           NO-GO TO EOV
         B     STRTPROC      YES- THIS IS (1,BLP) WITH LEADING TM
         SPACE 2
MSG19RTN CP    SAVEBLK,WORKFLD1 NO-IS CURRENT BLKSIZE = TO PREV BLKSIZE
         BER   R2              YES
         CLI   REC1BLK+1,X'00' HAS R=V BEEN REQUESTED FOR VARIABLE RECS
         BER   R2              YES
         CP    MSG19CNT,=P'9'  NO- HAS MSG19 BEEN WRITTEN 10 TIMES
         BHR   R2              YES
         ZAP   SAVEBLK,WORKFLD1  NO- MOVE CURRENT BLKSIZE TO PREV BLKSI
         AP    MSG19CNT,ONE    ADD 1 TO NUMBER OF TIMES MSG19 WRITTEN
         MVC   MSG19BYT(6),MASK
         MVC   MSG19BLK(8),MASK
         ED    MSG19BYT(6),SAVEBLK
         ED    MSG19BLK(8),BLKCNT+4
         MESSAGE 19
         BR    R2
         TITLE 'ALLOCATE FILES FOR SAS TAPECOPY ROUTINE'
DOTAPCPY MVC   DDNAME,=C'FT11F001'   LOG FILE
         CHCKTIOT NOTFND=NOFT11
NEXT1    MVC   DDNAME,=C'FT12F001'   PRT FILE
         CHCKTIOT NOTFND=NOFT12
NEXT2    MVI   SYSOUTC1,X'00'   ZERO OUT SYSOUT FLAG
         XC    SYSOUTC2(4),SYSOUTC2 ZERO OUT SYSOUT POINTER
         MVC   DDNAME,=C'WORK    '   SAS WORK FILE
         CHCKTIOT NOTFND=NOWORK
NEXT3    MVC   DDNAME,=C'SYSIN   '   SAS SYSIN CONTROL STATEMENTS
         CHCKTIOT NOTFND=NOSYSIN
LINK     LINK  EP=SAS370,PARAM=(SASPARM),VL=1 EXECUTE SAS TAPECOPY RTN
         STC   R15,RCSPOT+3   PUT OUT SAS RETURN CODE
         B     RETURN
         SPACE 5
NOFT11   LA    R1,REQBLKP
         DYNALLOC           ALLOCAT FT11F001
         LH    R15,RBERR    ERROR
         LTR   R15,R15      WAS FT11F001 DYNAMICALLY ALLOCATED
         BNZ   SASFILER     NO
         B     NEXT1   BRANCH TO CHECK FOR FT12F001
         SPACE 1
NOFT12   LA    R1,REQBLKP
         DYNALLOC
         LH    R15,RBERR    ERROR
         LTR   R15,R15      WAS FT12F001 DYNAMICALLY ALLOCATED
         BNZ   SASFILER     NO
         B     NEXT2     BRANCH TO CHECK FOR SAS WORK FILE
         SPACE 1
NOWORK   LA    R1,REQBLKP
         DYNALLOC
         LH    R15,RBERR    ERROR
         LTR   R15,R15      WAS WORK FLE DYNAMICALLY ALLOCATED
         BNZ   SASFILER     NO
         B     NEXT3     BRANCH TO CHECK FOR SYSIN FILE
         SPACE 1
NOSYSIN  XC    WORKSEC(4),WORKSEC     ZERO SECONDARY SPACE ALLOC
         MVC   WRKBLKSZ(3),=FL3'80'   SET SYSIN BLKSIZE TO 80
         MVC   WORKPRM(3),=FL3'1'     ALLOC 1 BLOCK OF SPACE TO SYSIN
         LA    R1,REQBLKP
         DYNALLOC
         LH    R15,RBERR    ERROR
         LTR   R15,R15      WAS SYSIN DYNAMICALLY ALLOCATED
         BNZ   SASFILER     NO
         OPEN  (SYSIN,OUTPUT)  YES- OPEN SYSIN FILE
         PUT   SYSIN,SYSINR1   REC1= PROC TAPECOPY INDD=SYSUT1 OUTDD=..
         CLOSE (SYSIN)       CLOSE SYSIN
         B     LINK      BRANCH TO LINK TO SAS
         SPACE 1
         TITLE 'DATA AREAS AND CONSTANTS'
TITADDR  DS    A         STARTING ADDRESS OF TITLE STORED HERE
SAVER6   DS    F         SAVE AREA FOR R6
SAVER14  DS    F         SAVE AREA FOR R14
PARMEND  DS    F         ADDRESS OF LAST PARM CHARACTER
NVOLSAVE DS    F   NUMBER OF INPUT VOLUMES FROM JFCBNVOL-FOR BLP TAPES
PRINTBUF DS    F         ADDRESS OF THE PRINT BUFFER-USED FOR SYSPRINT
PARMLIM  DC    F'8'    MAXIMUM NUMBER OF CHARACTER FOR ANY KEYWORD PARM
DVCTYPE  DS    2F
WORKFLD1 DS    D         WORK FIELD USED USED TO PACK NUMBERS INTO
FILESQ   DS    PL8           FILE SEQUENCE COUNTER
SKPCNT   DC    PL8'0'        S= PARAMETER (DEFAULT=0)
RLEN     DC    PL8'100'      R= PARAMETER (DEFAULT=100)
FILES    DC    PL8'1'        N= PARAMETER
FILEPROC DC    PL8'0'    NUMBER OF FILES ALREADY PROCESSED
BLKWRIT  DC    PL8'0'         NUMBER OF BLOCKS WRITTEN
BLKCNT   DC    PL8'0'         NUMBER OF BLOCKS READ
EOVBLKCT DC    PL8'0'       BLKCNT FOR EOV (NUMBER OF BLKS ON VOLUME)
TOTBYTES DC    PL8'0'         TOTAL NUMBER OF BYTES IN FILE
TAPELEN  DC    PL8'0'         TOTAL LENGTH OF TAPE PROCESSED
DIAGRECS DC    PL8'999999999999999' NUMBER OF DIAG RECS TO WRITE
MINBLK   DC    F'65535'     MINIMUM BLKSIZE OF THE BLOCKS IN A FILE
SAVEMIN  DC    F'65535'
F65535   DC    F'65535'     CONSTANT-MAXIMUM BLKSIZE
MAXBLK   DC    F'0'         MAXIMUM    "
LASTBLK  DC    F'0'         LAST       "
WORKFLD  DS    CL16'RESERVE 16 BYTES'
         DS    CL50 FIELD TO CONCATENATE TO WORKFLD TO HOLD TITLE
RCNT     DC    PL4'0'         NUMBER OF RECORDS PROCESSED
LIMIT    DC    PL5'0'         C= PARAMETER (DEFAULT=ALL)
SAVEBLK  DC    PL3'-1'    COUNT OF BYTES IN PREV BLOCK
MSG19CNT DC    PL2'0'     NUMBER OF MESSAGE 19'S PUT OUT
ONE      DC    P'1'           CONSTANT PACKED 1
PZERO    DC    P'0'           CONSTANT PACKED 0
DENSITY  DC    PL3'0'         TAPE DENSITY (6250/1600/800) FOR CALCUL
IBGLEN   DC    PL1'0'  INTER-RECORD-GAP LENGTH (.3 OR .6 OR .7 INCH)
RLENFLAG DC    C'0'    INDICATE IF USER CODED R= (0=NO, 1=YES)
LINES    DC    PL2'58' PAGE LINE COUNTER
TITLE    DC    CL133' '       SAVE TITLE HERE
CC       DC    C' '           CARRIAGE CONTROL CHARACTER
         DC    C' '           1ST BYTE OF PRINT LINE
PNT      DC    CL131' '        REST OF PRINT LINE
HEXAREA  DS    CL100      WORK AREA FOR TRANSLATING FROM ASCII,RMT PRT
MSGSPACE DC    CL20' '    CONSTANT CHARACTER SPACES
ENDPARMS DC    C' '            END OF PARM FLAG
NUMBERR  DC    C' '            NUMERIC ERROR IN PARM FLAG
TIOTFLAG DC    C'0'            DDNAME NOT FOUND IN TIOT FLAG
EOVFLAG  DC    C'0'   FLAG TO INDICATE EOV1 HIT ON TAPE LABEL
* 0=EOV NEVER HIT, 1=VOLUME TO BE SWITCHED, 2=VOLUME ALREADY SWITCHED
HDRFLAG  DC    C'0'   FLAG TO INDICATE HDR1 HIT ON TAPE LABEL
* 0=HDR NEVER HIT, 1=HDR LABEL HIT, 2=TPMK HIT AFTER HDR LABEL
VARFLAG  DS    CL1             FLAG INDICATING IF R=V REQUESTED
SASPARM  DC    H'33',C'NONEWS NOOPLIST NOSTIMER NOSOURCE' TSO,MINSTG
MASK     DC    X'402020202020202020202120'
SHFT3480 EQU   62   SHIFT FACTOR FOR 3480 CARTRIDGE (DIVIDE BY 100)
LRECL    EQU   82   DCB LRECL
         TITLE 'MESSAGES'
MSG0     DC    C'0DMP000I PARM= '
MSG0LEN  EQU   *-MSG0
MSG1     DC    C'0DMP001E ERROR IN PARM FIELD OR JCL'
MSG1LEN  EQU   *-MSG1
MSG2     DC    C'0DMP002I END OF FILE REACHED'
MSG2LEN  EQU   *-MSG2
MSG3     DC    C'0DMP003E SYSUT1/2 DD STATEMENT MISSING'
MSG3LEN  EQU   *-MSG3
MSG4     DC    C'0DMP004E KEYWORD PARAMETER NOT FOLLOWED BY = SIGN'
MSG4LEN  EQU   *-MSG4
MSG5     DC    C'0DMP005E INVALID OR DUPLICATE KEYWORD PARMATER'
MSG5LEN  EQU   *-MSG5
MSG6     DC    C'0DMP006E A PARAMETER LENGTH EXCEEDS MAXIMUM ALLOWABLE'
MSG6LEN  EQU   *-MSG6
MSG8     DC    C'0DMP008E PARM VALUE NOT NUMERIC'
MSG8LEN  EQU   *-MSG8
MSG9     DC    C'0DMP009E INVALID VALUE SPECIFIED FOR FORMAT PARAMETER'
MSG9LEN  EQU   *-MSG9
MSG10    DC    C'0DMP010I NUMBER OF BLOCKS DUMPED ='
MSG10CNT DC    X'40202020202020202120'
MSG10LEN EQU   *-MSG10
MSG11    DC    C'0DMO011I NUMBER OF BLOCKS TO BE SKIPPED ='
MSG11SKP DC    X'40202020202020202120'
MSG11LEN EQU   *-MSG11
MSG12    DC    C'0DMP012I MINIMUM BLKSIZE ='
MSG12MIN DC    X'402020202120'
         DC    C', MAXIMUM BLKSIZE ='
MSG12MAX DC    X'402020202120'
         DC    C', LAST BLKSIZE ='
MSG12LST DC    X'402020202120'
         DC    C', TOTAL NUMBER OF BYTES ='
MSG12BYT DC    X'402020202020202020202120'
MSG12LEN EQU   *-MSG12
MSG13    DC    C'0DMP013I '
MSG13NEQ DC    X'40202020202020202120'
         DC    C' FILES TO BE DUMPED (N PARAMETER VALID ONLY WHEN '
         DC    C'LABEL PROCESSING IS BYPASSED ON TAPE FILES)'
MSG13LEN EQU   *-MSG13
MSG14    DC    C'0DMP014W DATA NOT VARIABLE FORMAT, R=100 WILL BE USED'
MSG14LEN EQU   *-MSG14
MSG15    DC    C'0DMP015I SKIP COUNT EQUALS OR EXCEEDS TOTAL'
         DC    C' BLOCK COUNT. NO BLOCKS DUMPED.'
MSG15LEN EQU   *-MSG15
MSG16    DC    C'0DMP016I END OF VOLUME REACHED'
MSG16LEN EQU   *-MSG16
MSG17    DC    C'0DMP017I TAPE FILE WILL BE PROCESSED BACKWARDS. '
         DC    C'(R=V AND N PARAMETER WILL BE IGNORED IF CODED)'
MSG17LEN EQU   *-MSG17
MSG18    DC    C'0DMP018I SUPRDUMP STATISTICS APPLY ONLY TO THE '
         DC    C'NUMBER OF BLOCKS PROCESSED'
MSG18LEN EQU   *-MSG18
MSG19    DC    C'0DMP019I BLOCK NO. ='
MSG19BLK DC    X'4020202020202120'
         DC    C', NO. OF BYTES IN BLOCK ='
MSG19BYT DC    X'402020202120'
MSG19LEN EQU   *-MSG19
MSG20    DC    C'0DMP020E UNABLE TO ALLOCATE FILE(S) FOR TAPECOPY '
         DC    C'(FT11F001, FT12F001, WORK, SYSIN)'
MSG20LEN EQU   *-MSG20
MSG21    DC    C'0DMP021I FILE OCCUPIES APPROXIMATELY'
MSG21TPL DC    X'40202020202020202120'
         DC    C' INCH(ES) OF TAPE'
MSG21LEN EQU   *-MSG21
MSG22    DC    C'0DMP022I JOBNAME='
MSG22JOB DS    CL8
         DC    C',PROCSTEPNAME='
MSG22PRC DS    CL8
         DC    C',JOBSTEPNAME='
MSG22STP DS    CL8
MSG22LEN EQU   *-MSG22
MSG23    DC    C'0DMP023I APPROXIMATE TOTAL TAPE LENGTH OF PROCESSED '
         DC    C'FILES='
MSG23TPL DC    X'40202020202020202120'
         DC    C' INCH(ES)'
MSG23LEN EQU   *-MSG23
MSG24    DC    C'0DMP024W THE BLOCK COUNT ON THE TAPE TRAILER LABEL ('
MSG24LBL DC    X'4020202020202120'
         DC    C') DOES NOT MATCH THE ACTUAL BLOCK COUNT ('
MSG24BLK DC    X'4020202020202120'
         DC    C')'
MSG24LEN EQU   *-MSG24
MSG25    DC    C'0DMP025I VOLUME SWITCHED TO VOLSER='
MSG25VOL DS    CL6
         DC    C' AFTER BLOCK NUMBER'
MSG25BLK DC    X'4020202020202120'
MSG25LEN EQU   *-MSG25
MSG26    DC    C'0DMP026E BLP PROCESSING FOR CONCATENATED TAPE FILES '
         DC    C'NOT ALLOWED (SPECIFY ALL VOLSERS IN SYSUT1 DD)'
MSG26LEN EQU   *-MSG26
MSG27    DC   C'0DMP027W BLKSIZE OF FILE EXCEEDS 32K - NOT PROCESSABLE'
         DC    C' USING STANDARD IBM ACCESS METHODS'
MSG27LEN EQU   *-MSG27
MSG39    DC    C'         RECFM='
MSG39FVU DS    CL1
         DC    C',LRECL='
MSG39REC DC    X'402020202120'
         DC    C',CREATION DATE:YY='
MSG39CRY DS    CL2
         DC    C',DDD='
MSG39CRD DC    X'40202020'
         DC    C',EXPIRATION DATE:YY='
MSG39EXY DS    CL2
         DC    C',DDD='
MSG39EXD DC    X'40202020'
MSG39LEN EQU   *-MSG39
MSG40    DC    C'0DMP040I VOLSER='
MSG40VOL DC    CL6' '
         DC    C',BLK CNT='
MSG40BLK DC    X'4020202020202120'
         DC    C',SEQ NO='
MSG40SEQ DC    X'402020202120'
         DC    C',LABEL='
MSG40LBL DC    CL3' '
         DC    C',DEN='
MSG40DEN DS    CL5              (6250/1600/800)
         DC    C' '
MSG40TRK DS    CL1              (7/9)
         DC    C'-TRK'
         DC    C',DSN='
MSG40DSN DC    CL44' '
MSG40LEN EQU   *-MSG40
MSG41    DC    C'0DMP041I (C) COPYRIGHT JUNE 1984 BY M. KARLIN, '
         DC    C'N. LINDNER          SUPRDUMP RELEASE 3.3 '
         GETDATE DATE
MSG41LEN EQU   *-MSG41
         TITLE 'TABLES AND LTORG'
TABLE3   DC    C'0123456789ABCDEF'
TABLE2   DC    16C'0',16C'1',16C'2',16C'3',16C'4',16C'5',16C'6',16C'7'
         DC    16C'8',16C'9',16C'A',16C'B',16C'C',16C'D',16C'E',C'F'
TABLE4   DC    64C'.'        UNPRINTABLE CHARACTERS PRINT AS '.'
         DC    X'404142434445464748494A4B4C4D4E4F'
         DC    X'505152535455565758595A5B5C5D5E5F'
         DC    X'606162636465666768696A6B6C6D6E6F'
         DC    X'707172737475767778797A7B7C7D7E7F'
         DC    X'808182838485868788898A8B8C8D8E8F'
         DC    X'909192939495969798999A9B9C9D9E9F'
         DC    X'A0A1A2A3A4A5A6A7A8A9AAABACADAEAF'
         DC    X'B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF'
         DC    X'C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF'
         DC    X'D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF'
         DC    X'E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF'
         DC    X'F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF'
TRNSTAB2 DC    160X'FF'
         DC    5X'01010101010101010101FFFFFFFFFFFF'
         DC    10X'00',6X'FF'
NUMLINE  DC    C'----+----1----+----2----+----3----+----4----+----5---'
         DC    C'-+----6----+----7----+----8----+----9----+----0'
SYSINR1  DC    CL80'PROC  TAPECOPY INDD=SYSUT1 OUTDD=TAPECOPY NORER;'
*
OPTNTABL DC    195X'00'
         DC    X'08'          C=
         DC    X'1C',1X'00'   D=
         DC    X'14',14X'00'  F=
         DC    X'18',3X'00'   N=
         DC    X'04',8X'00'   R=
         DC    X'0C'          S=
         DC    X'10',28X'00'  T=
         SPACE 1
         LTORG
         TITLE 'DYNAMIC ALLOCATION AREAS'
*        DYNAMICALLY PRODUCE A SYSPRINT/SYSUT2 DD
*        STATEMENT (ASSIGNED TO SYSOUT=MSGCLASS) IF THE SYSPRINT/SYSUT2
*        DD STATEMENT HAS NOT BEEN CODED IN THE JCL.
*           FOR SAS TAPECOPY RTN
*         WILL DYNAMICALLY ALLOCATE FT11F001 AND FT12F001 TO SYSOUT=*
*         THE WORK DD TO A TEMPORARY SYSDA FILE (BLKSIZE=6160,(90,90)
*             BLOCKS) AND A SYSIN FILE OF 1 BLOCK, BLKSIZE=80 FOR
*             THE SAS CONTROL STATEMENTS.
         DS    0F
REQBLKP  DC    X'80',AL3(REQBLK)  POINTER TO REQUEST BLOCK
REQBLK   DC    X'14'   RB LENGTH(20)
         DC    X'01'   VERB CODE = 1, DS ALLOC
SYSOUTC1 DC    X'1000' FLAG SET FOR SYSOUT DATA SET - ZEROD FOR OTHERS
RBERR    DC    H'0',X'0000'   HALFWORD ERROR RETURN CODE FROM DYNALLOC
TXTP     DC    A(TXTUNTP)     POINTER TO TEXT UNITS
         DC    XL8'00'
TXTUNTP  DC    A(TUDDNAM)     ADDRESS OF DDNAME ALLOC
SYSOUTC2 DC    X'80',AL3(TUSYSOUT) ZEROED WHEN SYSOUT=* ALLOCATES DONE
         DC    A(TUBLKLN)     ADDR OF BLOCK LENGTH ALLOC
         DC    A(TUSPCPRM)            PRIMARY SPACE ALLOC
WORKSEC  DC    A(TUSPCSEC)            SEC SPACE- ZEROED OUT FOR SYSIN
         DC    X'80',AL3(TUUNIT)      UNIT ALLOC
TUDDNAM  DC    X'0001'         KEY=1
         DC    X'0001'         #  =1  (NUMBER OF 'LEN,PARM'S FOLLOWING)
         DC    X'0008'         LEN=8
DDNAME   DC    CL8'SYSPRINT'      CHANGED FOR EACH FILE
TUBLKLN  DC    X'0009'
         DC    X'0001'
         DC    X'0003'
WRKBLKSZ DC    FL3'6160'   CHANGED TO 80 FOR SYSIN
TUSPCPRM DC    X'000A'
         DC    X'0001'
         DC    X'0003'
WORKPRM  DC    FL3'90'     CHANGED TO 1 FOR SYSIN
TUSPCSEC DC    X'000B'
         DC    X'0001'
         DC    X'0003'
         DC    FL3'90'
TUUNIT   DC    X'0015'
         DC    X'0001'
         DC    X'0005'
         DC    C'SYSDA'
TUSYSOUT DC    X'0018'
         DC    X'0000'
         SPACE 1
         DS    0F
CKCONCAT DC    X'80',AL3(CONCAT)  POINTER TO REQUEST BLOCK
CONCAT   DC    X'14'   RB LENGTH(20)
         DC    X'07'   VERB CODE = 7, DYNAMIC INFORMATION RETRIEVAL
         DC    XL6'00'
         DC    A(CONCATTX)    POINTER TO TEXT UNITS
         DC    XL8'00'
CONCATTX DC    A(CONCATDD)    ADDRESS OF DDNAME
         DC    X'80',AL3(DINRTATT) POINTER TO ATTRIBUTES TEXT UNIT
CONCATDD DC    X'0001'         KEY=1
         DC    X'0001'         #  =1  (NUMBER OF 'LEN,PARM'S FOLLOWING)
         DC    X'0006'         LEN=6
         DC    CL6'SYSUT1'
DINRTATT DC    X'000C'         KEY=C
         DC    X'0001'         #  =1
         DC    X'0001'         LEN=1
CONCPARM DS    X     ATTRIBUTES RETURNED HERE:X'80'=PERMANENT CONCATEN
         TITLE 'EXLST,IOB,ECB,CCW,DCB''S,JFCB,TIOT AND REG EQUATES'
INPTXLST DS    0F
         DC    X'07',AL3(INFMJFCB)   JFCB EXIT
VOLVER   DC    X'00',AL3(VOLVERXT)   CHANGED TO X'18' FOR TAPE TO GET
* THE EXPDT FROM THE VOLUME VERIF EXIT WHICH GIVES ACCESS TO HDR1 LABEL
         DC    X'8B',AL3(BLKCTXIT)   BYPASS UNQUAL BLKCNT EXIT
         SPACE 1
IOB      DS    0F
         DC    X'02000000'
         DC    A(ECB)
         DC    2F'0' CSW(SEE P228 POPS) CONTAINS CCW ADDR, UNIT STAT,
*              RESIDUAL COUNT FLD, ETC.
         DC    A(CCW)
         DC    A(TAPEX)
         DC    5F'0'
         SPACE 1
ECB      DC    F'0'
CCW      CCW   2,0,0,65535  COMMAND CODE,ADDR OF BUFFER,0,LENGTH OF BUF
         SPACE 1
*                                                                  NL
IOB1     DS    0F           FOR TAPE DRIVE SENSE COMMAND           NL
         DC    X'02000000'                                         NL
         DC    A(ECB1)                                             NL
         DC    2F'0' CSW(SEE P228 POPS) CONTAINS CCW ADDR,         NL
*                UNIT STAT,RESIDUAL COUNT FLD, ETC.                NL
         DC    A(CCW1)                                             NL
         DC    A(TAPEX)                                            NL
         DC    5F'0'                                               NL
*                                                                  NL
ECB1     DC    F'0'         FOR SENSE DRIVE SENSE COMMAND          NL
*                                                                  NL
CCW1     CCW   X'04',SBYTES,0,32 CCW FOR SENSE (TAPE OR CARTRIDGE)
*                                                                  NL
SBYTES   DS    0F     32 SENSE BYTES FOR BOTH TAPE AND CASSETTE    NL
SENSE0   DS    XL1    UNIT CHECK                                   NL
SENSE1   DS    XL1                                                 NL
SENSE2   DS    XL1    TRACK IN ERROR                               NL
SENSE3   DS    XL1    DATA AND EQUIPMENT CHECK                     NL
SENSE4   DS    XL1                                                 NL
SENSE5   DS    XL1                                                 NL
SENSE6   DS    XL1    TAPE UNIT                                    NL
SENSE7   DS    XL1    TAPE UNIT READY-DROP SOURCE                  NL
SENSE8   DS    XL1    MICRO PROGRAM DETECTED ERRORS                NL
SENSE9   DS    XL1                                                 NL
SENSE10  DS    XL1                                                 NL
SENSE11  DS    XL1    MAL 1 ROS/MP ERRORS                          NL
SENSE12  DS    XL1    MAL 2 ROS/MP ERRORS                          NL
SENSE13  DS    XL1    TAPE CONTROL IDENTIFICATION - SERIAL NUMBER  NL
SENSE14  DS    XL1    TAPE CONTROL IDENTIFICATION - SERIAL NUMBER  NL
SENSE15  DS    XL1    TAPE UNIT IDENTIFICATION - SERIAL NUMBER     NL
SENSE16  DS    XL1    TAPE UNIT IDENTIFICATION - SERIAL NUMBER     NL
SENSE17  DS    XL1    TAPE CONTROL FEATURES                        NL
SENSE18  DS    XL1                                                 NL
SENSE19  DS    XL1                                                 NL
SENSE20  DS    XL1                                                 NL
SENSE21  DS    XL1    THREAD AND LOAD  DIAGNOSTICS                 NL
SENSE22  DS    XL1    FIELD REPLACEABLE UNIT IDENTIFICATION        NL
SENSE23  DS    XL1    FIELD REPLACEABLE UNIT IDENTIFICATION        NL
SENSE24  DS    XL1                                                 NL
SENSE25  DS    XL1                                                 NL
SENSE26  DS    XL1                                                 NL
SENSE27  DS    XL1                                                 NL
SENSE28  DS    XL1                                                 NL
SENSE29  DS    XL1                                                 NL
SENSE30  DS    XL1                                                 NL
SENSE31  DS    XL1                                                 NL
         SPACE 1
STATUS   DS    XL2
DIAGPUTS DC    PL6'0'    DIAG RECORD COUNTER
*
TAPEX    DCB   DSORG=PS,MACRF=(E),DDNAME=SYSUT1,EODAD=QUIT,RECFM=U,    X
               EXLST=INPTXLST
         SPACE 1
INPUT    DCB   DSORG=PS,MACRF=R,DDNAME=SYSUT1,EODAD=QUIT,BLKSIZE=0,    X
               EXLST=INPTXLST
         SPACE 1
PRINTER  DCB   DSORG=PS,RECFM=FBA,BLKSIZE=4788,LRECL=133,MACRF=PM,     X
               DDNAME=SYSUT2
         SPACE 1
SYSPRINT DCB   DSORG=PS,RECFM=FBA,BLKSIZE=4788,LRECL=133,MACRF=PL,     X
               DDNAME=SYSPRINT
         SPACE 1
SYSIN    DCB   DSORG=PS,RECFM=F,LRECL=80,BLKSIZE=80,MACRF=PM,          X
               DDNAME=SYSIN  BUILT BY SUPRDUMP;USED BY SAS
         SPACE 2
DIAGNOSE DCB   DSORG=PS,RECFM=FBA,LRECL=40,BLKSIZE=0,MACRF=PM,         X
               DDNAME=DIAGNOSE
         SPACE 2
         IEFJFCBN
         SPACE 1
         IEFTIOT1
         SPACE 1
         IHAPSA      NEEDED FOT TIOT
         SPACE 1
         IKJTCB      NEEDED FOR TIOT
         SPACE 1
         IEZJSCB     NEEDED FOR TIOT
         SPACE 1
         IHAQDB      NEEDED FOR TIOT
         SPACE 1
         IHADSAB     NEEDED FOR TIOT
         SPACE 1
         IECOEVSE
         SPACE
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
