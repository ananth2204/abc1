*   SEE  ASM(READVTC) - CONTAINS TSO UPDATE NUMBERS IN COL 72-80
*   READ  VTOCS
*        RETURN CODES:
*          00 - DSCB READ AND MOVED TO CALLERS WORKAREA
*          04 - ALL VOLUMES PROCESSED, NO DATA RETURNED
*          08 - CVAFTST MACRO FAILED
*          16 - CVAFSEQ OR CVAFDIR FAILED
*
*        REGISTER USAGE:
*          R1 - PARM
*          R2 - UCBOB
*          R3 - UCB ADDR
*          R4 - MASK
*          R5 - TARGET
*          R15- LTR
*
*        INPUT REQUIREMENTS:
*           1. 40-BYTE MASK - USED BY FINDUCB
*              SEE RVPARM MACRO
*           2. TARGET AREA - INFO TO USER; SEE RVDATA MACRO (156 BYTES)
*              DSCB, VOLSER, CCHHR OF DSCB, IXVTOC FLAG, UCB ADDR
*           3. INITAL DSN  - FOR INDEXED VTOCS THE DSN AT WHICH THE
*              SEARCH OF THE VTOC SHOULD BEGIN.
*
         MACRO
&NAME    FINDUCB &UCB,&WA,&MASK,&PENDOFF=NOSKIP,&PENDMNT=NOSKIP,       X
               &VOLZERO=NOSKIP,&VIRTVOL=NOSKIP
.*
.*       RESTRICTIONS: YOU MUST 'DROP' ANY USING FOR BOTH 'UCBOB' AND
.*            'CVTMAP' BEFORE ENTERING THIS MACRO.
.*
.*       REGISTER USAGE:
.*            R1 - BASE REGISTER OF THE UCBOB DSECT, MODIF BY TRT
.*            R2 - MODIFIED BY TRT INSTRUCTION
.*            R14- BAL AND WORK REGISTER
.*            R15- BASE FOR CVT, BAL AND RC FOR UCB SCAN SERVICE
.*
.*       REQUIREMENTS: YOU MUST INCLUDE THE 'IEFUCBOB' MACRO AND THE
.*            'CVT DSECT=YES' MACRO IN YOUR CODE.
.*
.*       REQUIRED POSITIONAL PARAMETERS:
.*           &UCB - FULLWORD IN WHICH THE UCB ADDRESS WILL BE RETURNED
.*           &WA  - 100 BYTE WORKAREA, MUST BE ZERO AT FIRST CALL
.*                  DO NOT ZERO ON SUBSEQUENT CALLS UNLESS YOU WISH
.*                  TO START WITH THE FIRST UCB AGAIN.
.*           &MASK- 40 BYTE MASK THAT IS COMPARED TO THE UCBS AND ONLY
.*                  THOSE UCBS MATCHING THE BITS IN THE MASK WILL BE
.*                  RETURNED.
.*
.*       OPTIONAL KEYWORD PARAMETERS:
.*           &PENDOFF=NOSKIP/SKIP: RETURN UCB EVEN IF IT IS PENDING
.*                    OFFLINE, THIS (NOSKIP) IS THE DEFAULT.
.*           &PENDMNT=NOSKIP/SKIP: RETURN UCB EVEN IF A MOUNT IS
.*                    PENDING, THIS (NOSKIP) IS THE DEFAULT.
.*           &VOLZERO=NOSKIP/SKIP: RETURN UCB EVEN IF THE VOLSER IS
.*                    ZERO, THIS (NOSKIP) IS THE DEFAULT.
.*           &VIRTVOL=NOSKIP/SKIP: RETURN UCB EVEN IF IT IS A VIRTUAL
.*                    VOL, THIS (NOSKIP) IS THE DEFAULT.
.*
.*EXAMPL
.*       USING UCBOB,R2     ESTABLISH ADDRESSABILITY TO
.*       LA    R2,MASK            UCB MASK AND DSECT
.*       XC    UCBWA,UCBWA    CLEAR 100 BYTE WORK AREA
.*       XC    MASK,MASK      CLEAR MASK
.*       OI    UCBBYT3,UCB3DACC     DIRECT ACCESS DEVICE
.*       OI    UCBSTAT,UCBONLI      MUST BE ONLINE
.*       OI    UCBSTAB,UCBBSTR      MUST BE MOUNTED STORAGE
.*       DROP  R2                 DROP ADDRESSABILITY
.* LOOP  EQU   *
.*       FINDUCB UCBPTR,UCBWA,MASK,PENDOFF=SKIP,PENDMNT=SKIP,
.*            VOLZERO=SKIP,VIRTVOL=SKIP
.*       USING UCBOB,R2           RE-ESTABLISH ADDRESSABILITY
.*       LTR   R15,R15            FIND ONE?
.*       BNZ   EXIT               NO - END OF UCBS
.*       ICM   R2,15,UCBPTR    YES- PICK UP RETURNED UCB ADDRESS
.*       .                               PROCESS
.*       .
.*       .
.*       B     LOOP               GET NEXT UCB
.* EXIT  EQU   *
.*
.*       THE MASK IN THE ABOVE EXAMPLE WOULD LIMIT THE UCBS RETURNED
.*       TO THOSE THAT ARE: DASD AND ONLINE AND MOUNTED AS STORAGE
.*       AND A MOUNT IS NOT PENDING AND IS NOT PENDING OFFLINE AND THE
.*       VOLSER IS NOT X'00'S AND IT IS NOT A VIRTUAL DEVICE (MSS).
.*
.*       ANY BITS MAY BE SET IN THE MASK. IF YOU WANT A SPECIFIC DEVICE
.*       ADDRESS, SET EITHER THE BINARY OR CHARACTER DEVICE ADDRESS IN
.*       THE MASK TO THE SPECIFIC DEVICE REQUIRED.
.*
.*       IF YOU ALL UCBS, SET THE MASK TO ZERO AND OMIT THE OPTIONAL
.*       KEYWORD PARAMETRS.
.*------ --------------------------------------------------------------
         LCLA  &X
&X       SETA  &SYSNDX
         USING UCBOB,R1     UCB DSECT
         USING CVTMAP,R15   CVT DSECT
&NAME    DS    0H
         LA    R1,&WA       GET ADDRESS OF 100 BYTE WORKAREA
         ST    R1,PWA&X         STORE ADDRESS INTO PARMLIST
         LA    R1,&MASK+18  PICK UP DEVICE CLASS
         ST    R1,PDVT&X        STORE ADDRESS INTO PARMLIST
         LA    R1,&UCB      GET ADDRESS OF WORD TO STORE UCB ADDR
         ST    R1,PUCB&X        STORE ADDRESS INTO PARMLIST
         OI    PUCB&X,X'80' INDICATE END OF PARMLIST
MLPA&X   EQU   *
         LA    R1,PARM&X    PUT PARMLIST ADDRESS INTO R1
         L     R15,CVTPTR    GET CVT ADDRESS
         L     R15,CVTUCBSC  GET UCB SCAN SERVICE ADDRESS
         BALR  R14,R15       BRANCH TO SCAN SERVICE
         LTR   R15,R15       DID SCAN SERVICE RETURN A UCB?
         BNZ   MZZZ&X          NO- MUST BE END OF UCB TABLE
         L     R1,&UCB      YES-GET UCB ADDR THAT SCAN SERVICE RETURND
         MVC   WUCB&X,0(R1)   COPY UCB
         CLI   &MASK+28,X'00'   DID USER SUPPLY A VOLSER?
         BE    MBBB&X           NO - OK
         XC    WTRT&X,WTRT&X    YES - CLEAR TRT TABLE
         MVI   WTRT&X+C'*',C'*'    SET FOR A GENERIC VOLSER TEST
         TRT   &MASK+28(6),WTRT&X  DID USER SUPPLY A GENERIC VOLSER?
         BZ    MAAA&X              NO - OK
         LA    R14,&MASK+28      START OF GENERIC
         SR    R1,R14              LENGTH OF GENERIC
         STC   R2,WUCB&X+28(R1) PLACE * IN CORRESPONDNG UCB VOLS WKAREA
*        SO THAT WHEN ITS 'ANDED' WITH MASK WILL GIVE AN EQ COMPARISON
         BCTR  R1,0                LENGTH-1
         LR    R2,R1      USE R2 AS LENGTH IN EX INSTRUCTION
         L     R1,&UCB    RESET R1 AS BASE REG FOR UCB
         LTR   R2,R2  IS LENGTH = -1 I.E. WAS VOL=* SPECIFIED
         BM    MBBB&X     YES - GET ALL VOLUMES
         EX    R2,MCLC&X  NO- GENERIC COMPARE
         BNE   MLPA&X              NOT EQUAL
         B     MBBB&X              EQUAL
MAAA&X   EQU   *
         CLC   UCBVOLI,&MASK+28    SAME VOLSER?
         BNE   MLPA&X              NO - SKIP IT
MBBB&X   EQU   *
         NC    WUCB&X,&MASK   'AND' MASK OVER COPY OF UCB
         CLC   WUCB&X,&MASK   COMPARE 'ANDED' UCB TO MASK
         BNE   MLPA&X           NOT EQUAL - SKIP IT
         AIF   ('&PENDOFF' EQ 'NOSKIP').AAA
         TM    UCBSTAT,UCBCHGS     PENDING OFFLINE/UNLOAD
         BO    MLPA&X              YES - IGNORE IT
.AAA     ANOP
         AIF   ('&PENDMNT' EQ 'NOSKIP').BBB
         TM    UCBDMCT,UCBMOUNT    MOUNT PENDING
         BO    MLPA&X              YES - IGNORE IT
.BBB     ANOP
         AIF   ('&VOLZERO' EQ 'NOSKIP').CCC
         CLI   UCBVOLI,X'00'       ANY VOLUME INFORMATION
         BE    MLPA&X              NO - SKIP IT
.CCC     ANOP
         AIF   ('&VIRTVOL' EQ 'NOSKIP').DDD
         TM    UCBTBYT2,UCBRVDEV   IS THIS A VIRTUAL VOLUME
         BO    MLPA&X              YES - SKIP IT
.DDD     ANOP
         B     MZZZ&X
PARM&X   DS    0F
PWA&X    DS    F           ADDRESS OF 100-BYTE WORK AREA
PDVT&X   DS    F           ADDRESS OF DEVICE CLASS BYTE
PUCB&X   DS    F           ADDRESS OF WORD TO STORE UCB ADDR
*
WUCB&X   DC    XL40'00'    COPY OF UCB FOR 'AND'
WTRT&X   DC    XL256'00'            TRT TABLE
MCLC&X   CLC   UCBVOLI(0),&MASK+28   SAME VOLSER?
MZZZ&X   DS    0H
         MEND
*   END  MACRO
*
         MACRO
&NAME    RVPARM &DSECT=NO,&CSECT=YES,&CONTDS=NO
*        MAP DATA PASSED TO READVTOC SUBROUTINE
*        USAGE NOTES:
*          ALL ZEROS- ALL DASD VOLUMES WILL BE PROCESSED
*          RVUCBNME - SET THIS TO PROCESS A SPECIFIC DASD ADDR
*          RVUCBVOL - SET THIS TO PROCESS A SPECIFIC DASD VOLUME
*          RVUCBSTA - SET THIS TO PROCESS ONLY:
*                     PRIVATE, PUBLIC OR STORAGE
*
         AIF   ('&DSECT' EQ 'YES').CHKCONT
&NAME    DS    0D
RVMASK   DS    0XL40    UCB MASK
         DC    XL13'00'
RVUCBNME DC    XL3'00'   CHAR - UCB NAME  CUA
         DC    XL12'00'
RVUCBVOL DC    XL6'00'   CHAR - VOLSER NUMBER
RVUCBSTA DC    XL1'00'   HEX - VOLUME STATUS
         DC    XL5'00'
         AGO   .DONE
.CHKCONT AIF   ('&CONTDS' EQ 'YES').DS
&NAME    DSECT
.DS      ANOP
RVMASK   DS    0XL40    UCB MASK
         DS    XL13
RVUCBNME DS    XL3       CHAR - UCB NAME  CUA
         DS    XL12
RVUCBVOL DS    XL6       CHAR - VOLSER NUMBER
RVUCBSTA DS    XL1       HEX - VOLUME STATUS
&SYSECT  CSECT
.DONE    ANOP
*                     VOLUME STATUS BITS
RVUCBPRV EQU   X'10'           PRIVATE
RVUCBPUB EQU   X'08'           PUBLIC
RVUCBSTG EQU   X'04'           STORAGE
         MEND
*   END  MACRO
*
         MACRO
&NAME    RVDATA &DSECT=NO,&CSECT=YES,&CONTDS=NO
*        MAP AREA FOR READVTOC SUBROUTINE
         AIF   ('&DSECT' EQ 'YES').CHKCONT
&NAME    DS    0D
RVSTART  EQU   *
RVDSCB   DC    CL140' '       DSCB
RVVOLSER DC    CL6' '         VOLSER
RVCCHHR  DC    CL5'00'        CCHHR OF THIS DSCB
RVFLAG   DC    XL1'00'         FLAG BYTE
RVUCBA   DC    XL4'00'         UCB ADDR
RVEND    EQU   *
         AGO   .DONE
.CHKCONT AIF   ('&CONTDS' EQ 'YES').DS
&NAME    DSECT
.DS      ANOP
RVSTART  EQU   *
RVDSCB   DS    CL140      DSCB
RVVOLSER DS    CL6        VOLSER
RVCCHHR  DS    CL5        CCHHR
RVFLAG   DS    XL1        FLAG
RVUCBA   DS    XL4        UCB ADDR
RVEND    EQU   *
&SYSECT  CSECT
.DONE    ANOP
RVINDEX  EQU   X'80'   INDEXED VTOC (RVFLAG)
RVLEN    EQU   (RVEND-RVSTART)
         MEND
*   END  MACRO
*
         PRINT NOGEN
READVTOC START 0
         USING *,R15
         STM   R14,R12,12(R13)  SAVE CALLERS REGISTERS IN HIS SAVEAREA
         ST    R13,SAVEAREA+4  PLACE CALLERS SAVEAREA ADDR IN MY SVAREA
         CNOP  0,4
         BAL   R12,JUMPSAVE    LOAD BASE REGISTER
SAVEAREA DS    18F
JUMPSAVE ST    R12,8(R13)    PLACE MY SAVEAREA ADDR IN CALLERS SAVEAREA
         LR    R13,R12       LOAD MY SAVEAREA ADDR INTO R13
         USING SAVEAREA,R12
         DROP  R15
*        GET PARM
         USING MASK,R4
         USING TARGET,R5
ENTRY010 DS    0H
         XC    RC,RC    CLEAR RETURN CODE
         ICM   R4,15,0(R1)   PICK UP MASK IN FIRST WORD OF PARM
         ICM   R5,15,4(R1)   PICK UP TARGET AREA IN 2ND WORD OF PARM
         ICM   R15,15,8(R1)   PICK UP INITIAL DSN IN 3RD WORD OF PARM
         TM    FLAG,FIRST    HAVE WE BEEN HERE BEFORE?
         BZ    ZZZ010                NO -OK
         CLI   0(R15),X'FF'  ARE WE FORCING END-OF-VOLUME FOR IXVTOC
         BNE   AAA010        NO
         MVI   IDXDSN,X'FF'  YES - SET CVAF DSN TO X'FF'
AAA010   LM    R2,R11,SAVEREGS    YES -PICK UP OUR REGS
         TM    FLAG,FORMAT4     DID WE JUST GET A FORMAT4 DSCB
         BO    ENTRY060         YES SETUP FOR THE REST
         TM    FLAG,INDEXED    DOES THIS VOLUME HAVE AN INDEXED VTOC
         BZ    LOOP060A          YES - USE THIS RTN
         B     LOOP065A          NO
ZZZ010   EQU   *
         OI    FLAG,FIRST       SET FLAG
         MVC   IDXDSN,0(R15) SET DSN FIELD WITH INIT DSN FOR INDEX VTOC
         MVC   SAVEDSN,IDXDSN SAVE THE ORIGINAL INITDSN FOR ENDVOL PRCS
EXIT010  EQU   *
         SPACE 3
*        GET A DASD UCB
ENTRY020 DS    0H
         USING UCBOB,R2    ESTABLISH ADDRESSABILITY TO
         LR    R2,R4       ADDRESS OF CALLERS MASK
         XC    UCBWA,UCBWA          CLEAR 100 BYTE WORK AREA
         OI    UCBTBYT3,UCB3DACC    DIRECT ACCESS DEVICE
         OI    UCBSTAT,UCBONLI     MUST BE ONLINE
         DROP  R2          DROP ADDRESSABILITY
LOOP020A EQU   *
         FINDUCB UCBPTR,UCBWA,MASK,PENDOFF=SKIP,PENDMNT=SKIP,          X
               VOLZERO=SKIP,VIRTVOL=SKIP
         USING UCBOB,R2        RE-ESTABLISH ADDRESSABILITY
         ICM   R2,15,UCBPTR     - UCB
         STCM  R2,15,RVUCBA     RETURN ADDRESS OF UCB TO CALLER
         MVC   RVVOLSER,UCBVOLI  COPY VOLSER FROM UCB
         DROP  R2
         LTR   R15,R15           FIND ONE?
         BZ    EXIT020           YES - PROCESS IT
         OI    FLAG,DONE
EXIT020  EQU   *
         B     ENTRY030
UCBPTR   DC    A(0)
UCBWA    DC    XL100'00'
         SPACE 3
*RELEASE  THE CVAF IOAREA   (FOR MULTIPLE VOLUMES)
ENTRY030 DS    0H
         SR    R15,R15     ZERO R15 FOR FIRST TIME THRU WHEN
*        NOT DONE, NO IOAREA AND NOT VOLEND
         TM    FLAG,IOAREA    DO WE HAVE AN IO AREA
         BZ    BYPAS030      NO - OK - CHECK IF FOUND UCB (DONE FLAG)
*        IF DONE FLAG SET THEN NON-EXISTANT VOLSER WAS REQUESTED
         ICM   R3,15,UCBPTR     YES - PUT UCB ADDR IN R3
         CVAFSEQ UCB=(R3),IOAREA=NOKEEP,MF=(E,CVAFSEQ)
BYPAS030 TM    FLAG,DONE     ARE WE ALL DONE?
         BZ    AAA030         NO  - OK
         MVI   FLAG,X'00'     YES - RESET FLAG
         XC    UCBWA,UCBWA  REINIT WORK AREA FOR FINDUCB MACRO
         MVC   RC,=F'4'       SET RETURN CODE
         B     GOBACK
AAA030   EQU   *
         TM    FLAG,VOLEND    HAVE WE HIT THE END OF THE CURRENT VOL
         BO    EXIT030   YES- RESET ENDVOL FLAG AND PROCESS NEXT VOL
         MVI   ERR,C'1'       SET ERRO NUMBER FOR TRACKING
         LTR   R15,R15
         BNZ   ERROR1
EXIT030  EQU   *
         OI    FLAG,IOAREA          SET FLAG
         NI    FLAG,X'FF'-VOLEND  RESET VOLEND FLAG
         SPACE 3
*        GET THE FORMAT4 DSCB
ENTRY040 DS    0H
         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST
         OI    BFLHFL,BFLHDSCB   DSCB TO BE READ
         MVI   BFLHNOE,1         ONE BUFFER
         LA    R1,DSCB           ADDR OF DSCB AREA
         STCM  R1,15,BFLEBUF     STORE IN BUFLIST
         MVI   BFLELTH,96        LENGTH OF DSCB AREA
         ICM   R3,15,UCBPTR           UCB ADDR
         CVAFDIR UCB=(R3),IOAREA=NOKEEP,MF=(E,CVAFDIR)
         MVI   ERR,C'2'
         LTR   R15,R15
         BNZ   ERROR1
         OI    FLAG,FORMAT4      SET THE FLAG
         MVC   RVDSCB(96),DSCB   MOVE TO CALLERS AREA
         MVC   RVCCHHR,BFLEARG   COPY CCHHR OF THIS DSCB
EXIT040  EQU   *
         SPACE 3
*        TEST FOR INDEXED VTOC
ENTRY050 DS    0H
         NI    FLAG,X'FF'-INDEXED    RESET
         MVC   IDXDSN,SAVEDSN       GET INITIAL DSN FOR NEW IXVTOC
*        XC    IDXDSN,IDXDSN         CLEAR
*        MVI   IDXDSN,X'05'  START AFTER THE FORMAT4 DSCB
         ICM   R3,15,UCBPTR      UCB ADDR
         CVAFTST UCB=(R3)
         LTR   R15,R15      RETURN CODE
         BZ    BBB050       0 - SYSTEM DOES NOT SUPPORT INDEXED VTOC
         C     R15,=F'4'    4 - NON-INDEXED VOLUME
         BE    BBB050
         C     R15,=F'8'    8 - INDEXED VTOC
         BE    AAA050
         B     ERROR2       INVALID
AAA050   EQU   *
         OI    FLAG,INDEXED   SET FLAG
         OI    RVFLAG,RVINDEX SET FLAG
BBB050   EQU   *
         MVC   LASTCCHH,DS4HPCHR   SAVE LAST USED FORMAT1
EXIT050  EQU   *
         B     GOBACK
*
*        GET VTOC ENTRIES  - NON-INDEXED
*
ENTRY060 DS    0H
         TM    FLAG,INDEXED       IS IT INDEXED?
         BO    ENTRY065               YES - USE DSN= CVAF
         NI    FLAG,X'FF'-FORMAT4               RESET
         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST
         OI    BFLHFL,BFLHDSCB        DSCBS TO BE READ
         MVI   BFLHNOE,1              1 BUFFER
         LA    R1,DSCB               ADDR OF DSCB AREA
         STCM  R1,15,BFLEBUF         STORE IN BUFLIST
         MVI   BFLELTH,140           LENGTH OF DSCB AREA
         ICM   R3,15,UCBPTR             UCB ADDR
         CVAFSEQ UCB=(R3),IOAREA=KEEP,DSN=0,MF=(E,CVAFSEQ)
         LTR   R15,R15       DID WE GET A DSCB
         BZ    EXIT060      YES - OK
         USING CVPL,R1
         CLI   CVSTAT,32    END OF DATA
         BE    EXIT060
         MVI   ERR,C'3'
         B     ERROR1
         DROP  R1
LOOP060A EQU   *
         OI    BFLHFL,BFLHDSCB   DSCBS TO BE READ
         MVI   BFLHNOE,1              1 BUFFER
         LA    R1,DSCB               ADDR OF DSCB AREA
         STCM  R1,15,BFLEBUF         STORE IN BUFLIST
         MVI   BFLELTH,140           LENGTH OF DSCB AREA
         ICM   R3,15,UCBPTR             UCB ADDR
         CVAFSEQ IOAREA=KEEP,DSN=0,MF=(E,CVAFSEQ)
         LTR   R15,R15       DID WE GET A DSCB
         BZ    EXIT060      YES - OK
         USING CVPL,R1
         OI    FLAG,VOLEND   SET END OF VOL FLAG
         CLI   CVSTAT,32   END OF DATA
         BE    LOOP020A    YES - GET NEXT VOLUME
         MVI   ERR,C'4'    SET ERROR NUMBER FOR TRACKING
         B     ERROR1       NO - ERROR
         DROP  R1
EXIT060  EQU   *
         B     ENTRY100
BUFLIST  ICVAFBFL DSECT=NO
         SPACE 5
*        GET VTOC ENTRIES  - INDEXED
*
ENTRY065 DS    0H
         NI    FLAG,X'FF'-FORMAT4               RESET
         XC    BUFLIST(BFLHLN+BFLELN),BUFLIST
         OI    BFLHFL,BFLHDSCB        DSCBS TO BE READ
         MVI   BFLHNOE,1              1 BUFFER
         LA    R1,DSCB               ADDR OF DSCB AREA
         STCM  R1,15,BFLEBUF         STORE IN BUFLIST
         MVI   BFLELTH,96           LENGTH OF DSCB AREA
         ICM   R3,15,UCBPTR             UCB ADDR
         CVAFSEQ UCB=(R3),IOAREA=KEEP,DSN=IDXDSN,MF=(E,CVAFSEQ)
         LTR   R15,R15       DID WE GET A DSCB
         BZ    EXIT065      YES - OK
         USING CVPL,R1
         CLI   CVSTAT,32  END OF DATA(NEVER GETS TO EOD ON INDEXED VOL
*        AFTER FIRST CVAF BECAUSE THERS ALWAYS A SYS1.VTOCIX DS)
         BE    EXIT065
         MVI   ERR,C'5'
         B     ERROR1
         DROP  R1
LOOP065A EQU   *
         OI    BFLHFL,BFLHDSCB   DSCBS TO BE READ
         MVI   BFLHNOE,1              1 BUFFER
         LA    R1,DSCB               ADDR OF DSCB AREA
         STCM  R1,15,BFLEBUF         STORE IN BUFLIST
         MVI   BFLELTH,96            LENGTH OF DSCB AREA
         ICM   R3,15,UCBPTR             UCB ADDR
         CVAFSEQ IOAREA=KEEP,DSN=IDXDSN,MF=(E,CVAFSEQ)
         LTR   R15,R15       DID WE GET A DSCB
         BZ    EXIT065      YES - OK
         USING CVPL,R1
         OI    FLAG,VOLEND   SET END OF VOL FLAG
         CLI   CVSTAT,32   END OF DATA
         BE    LOOP020A    YES - GET NEXT VOLUME
         MVI   ERR,C'6'    SET ERROR NUMBER FOR TRACKING
         B     ERROR1       NO - ERROR
         DROP  R1
EXIT065  EQU   *
         B     ENTRY100
IDXDSN   DC    XL44'05'
         SPACE 5
*        MOVE DATA TO CALLERS AREA
ENTRY100 DS    0H
         MVC   RVCCHHR,BFLEARG   COPY CCHHR OF THIS DSCB
         TM    FLAG,INDEXED      IS VOL INDEXED
         BO    AAA100        YES- OK
         MVC   RVDSCB,DSCB    NO
         CLC   LASTCCHH,BFLEARG   PAST THE LAST FORMAT1 ON VOLUME
         BNL   EXIT100       NO - CONTINUE NORMALLY
         OI    FLAG,VOLEND   YES- SET VOLEND FLAG
         B     LOOP020A            GET THE NEXT VOLUME
AAA100   EQU   *
         MVC   RVDSCB(44),IDXDSN     COPY DSN
         MVC   RVDSCB+44(96),DSCB    COPY REST OF DSCB
EXIT100  EQU   *
         SPACE 5
*
*        EOJ
GOBACK   DS    0H
         STM   R2,R11,SAVEREGS
         ICM   R15,15,RC      GET RETURN CODE
         L     R13,SAVEAREA+4
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
         SPACE 3
RC       DC    F'0'
SAVEREGS DC    10F'0'
         SPACE 3
*        ERRORS
ERROR1   DS    0H
         USING CVPL,R1
         XR    R2,R2    CLEAR
         ICM   R2,1,CVSTAT          STATUS CODE
         CVD   R2,DBWRD             CONVERT
         MVC   STAT,=X'40202120'    EDIT MASK
         ED    STAT,DBWRD+6
         DROP  R1
         CVD   R15,DBWRD
         MVC   RETCODE,=X'40202120'
         ED    RETCODE,DBWRD+6
         MVC   RC,=F'16'
         B     GOBACK
RETCODE  DC    CL4' '
STAT     DC    CL4' '
ERR      DC    C' '
         SPACE 1
ERROR2   DS    0H
         MVC   RC,=F'8'   SET RC
         B     GOBACK
         SPACE 5
*        STORAGE AREAS
FLAG     DC    X'00'
INDEXED  EQU   X'80'
IOAREA   EQU   X'40'
FIRST    EQU   X'20'
DONE     EQU   X'10'
FORMAT4  EQU   X'08'
VOLEND   EQU   X'04'
         SPACE 1
LASTCCHH DC    XL5'00'
DBWRD    DC    D'0'
SAVEDSN  DS    CL44
FMT4DSN  DC    44X'04'
DSCB     DC    XL140'00'
         ORG   DSCB
         IECSDSL1 (4)
         ORG   *+44    TAKE UP THE SLACK
         SPACE 2
CVAFSEQ  CVAFSEQ ACCESS=GT,BUFLIST=BUFLIST,BRANCH=(YES,PGM),MF=L
         SPACE 2
CVAFDIR  CVAFDIR ACCESS=READ,BUFLIST=BUFLIST,DSN=FMT4DSN,              X
               BRANCH=(YES,PGM),MF=L
         SPACE 2
MASK     RVPARM DSECT=YES
         SPACE 2
TARGET   RVDATA DSECT=YES
         SPACE 2
CVPL     ICVAFPL ,
         SPACE 2
         CVT   DSECT=YES
UCVDSECT DSECT
         IEFUCBOB
R0       EQU   0
R1       EQU   1
R2       EQU   2
R3       EQU   3
R4       EQU   4
R5       EQU   5
R6       EQU   6
R7       EQU   7
R8       EQU   8
R9       EQU   9
R10      EQU   10
R11      EQU   11
R12      EQU   12
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END
