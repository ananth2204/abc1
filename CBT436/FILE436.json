{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012028000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE436.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE436.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x06'", "DS1TRBAL": "b'x\\xba'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x03*\\x00\\x00\\x03*\\x00\\x04\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x993?\\x01\\x00$?\\x18\\x18\\x00\"\\x00 \\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1999-11-29T00:00:00", "modifydate": "2000-08-30T18:18:00", "lines": 34, "newlines": 32, "modlines": 0, "user": "WSBG"}, "text": "Subject:   CBT Tape Submission\n   Date:   Mon, 29 Nov 1999 14:15:32 +0300\n   From:   \"Jones, Glenn K\" <JONESGK@aramco.com.sa>\n     To:   sbgolob@attglobal.net\n    CC:    sbgolob@aol.com\n\nSir:\n\nI have modified some code which may be of interest to you or\nothers.  Whenever I'm on the computer, I generally have an email\nsession going (either work or home). Sometimes my tasks do not\nrequire mainframe access.\n\nRather than continually logging on/swapping to a mainframe\nsession, I modified a copy of the NASPA MVS-LIB COMPCODE program to\noptionally do e-mail notifications. This COMPCODE program is in\nproduction jobs, started tasks, as well as batch work that is\nimportant enough for me to know about if a problem occurs.\n\nAnother neat feature is when I go out of town, I make a simple\nupdate to the notify dataset for the person who will be handling\nthe problems in my absence. Since all my jobs & STC's have this\nnotify step, one simple update is immediately in effect for\neverything.\n\nI also made the code Y2K friendly, and changed it to print out the\nsteps real termination code, not just the highest recorded in the\nJCT.  This code is currently running on OS/390 V2R5 without any\nproblems. The email portion uses IBM's MVS SMTP as the interface to\nthe corporate email system. The COMPCODE program must be modified for\nyour installation. Anyway, use it if you like.\n\nIf you need any more information, please let me know.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x993?\\x00\\x993\\x9f\\x11\\x01\\x00\\x03\\x00\\r\\x00\\x00\\xc1\\xe6\\xc3\\xc7\\xd2\\xd1@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1999-11-29T00:00:00", "modifydate": "1999-12-05T11:01:00", "lines": 3, "newlines": 13, "modlines": 0, "user": "AWCGKJ"}, "text": "\nAssembly JCL is in member ASMJCL.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE436": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x99\\x08?\\x00\\x993\\x9f\\x12\\x01\\x00&\\x00\\x02\\x00\\x00\\xc1\\xe6\\xc3\\xc7\\xd2\\xd1@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1999-03-24T00:00:00", "modifydate": "1999-12-05T12:01:00", "lines": 38, "newlines": 2, "modlines": 0, "user": "AWCGKJ"}, "text": "//***FILE 436 from Glenn Jones of Aramco in Saudi Arabia, and       *   FILE 436\n//*           contains a version of the COMPCODE program, which     *   FILE 436\n//*           notifies users of completion code information for     *   FILE 436\n//*           jobs.  This version has been modified to even send    *   FILE 436\n//*           emails to notify a user located elsewhere, of a job   *   FILE 436\n//*           completion on the MVS system.                         *   FILE 436\n//*                                                                 *   FILE 436\n//*           Glenn Jones                                           *   FILE 436\n//*           Saudi Aramco, Dhahran, Saudi Arabia                   *   FILE 436\n//*           email: jonesgk@aramco.com.sa                          *   FILE 436\n//*                  g_k_j@yahoo.com                                *   FILE 436\n//*                                                                 *   FILE 436\n//*      I have modified some code which may be of interest to      *   FILE 436\n//*      you or others.  Whenever I'm on the computer, I            *   FILE 436\n//*      generally have an email session going (either work or      *   FILE 436\n//*      home). Sometimes my tasks do not require mainframe         *   FILE 436\n//*      access.                                                    *   FILE 436\n//*                                                                 *   FILE 436\n//*      Rather than continually logging on/swapping to a           *   FILE 436\n//*      mainframe session, I modified a copy of the public         *   FILE 436\n//*      COMPCODE program to optionally do e-mail notifications.    *   FILE 436\n//*      This COMPCODE program is in production jobs, started       *   FILE 436\n//*      tasks, as well as batch work that is important enough      *   FILE 436\n//*      for me to know about if a problem occurs.                  *   FILE 436\n//*                                                                 *   FILE 436\n//*      Another neat feature is when I go out of town, I make a    *   FILE 436\n//*      simple update to the notify dataset for the person who     *   FILE 436\n//*      will be handling the problems in my absence. Since all     *   FILE 436\n//*      my jobs & STC's have this notify step, one simple          *   FILE 436\n//*      update is immediately in effect for everything.            *   FILE 436\n//*                                                                 *   FILE 436\n//*      I also made the code Y2K friendly, and changed it to       *   FILE 436\n//*      print out the steps real termination code, not just the    *   FILE 436\n//*      highest recorded in the JCT.  This code is currently       *   FILE 436\n//*      running on OS/390 V2R5 without any problems. The email     *   FILE 436\n//*      portion uses IBM's MVS SMTP, and the program requires      *   FILE 436\n//*      simple modifications for use at your installation.         *   FILE 436\n//*                                                                 *   FILE 436\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASMJCL": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x993\\x9f\\x00\\x993\\x9f\\x11\\x00\\x00\\r\\x00\\r\\x00\\x00\\xc1\\xe6\\xc3\\xc7\\xd2\\xd1@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-12-05T00:00:00", "modifydate": "1999-12-05T11:00:00", "lines": 13, "newlines": 13, "modlines": 0, "user": "AWCGKJ"}, "text": "//AWCGKJC JOB AWCGKJ,JONES,CLASS=E,MSGCLASS=X,NOTIFY=AWCGKJ,\n//   MSGLEVEL=(1,1)\n//HLASM EXEC HLASMCL,\n//  PARM.L='AC=1'\n//C.SYSLIB    DD  DSN=SYS1.MACLIB,DISP=SHR\n//            DD  DSN=SYS1.AMODGEN,DISP=SHR\n//C.SYSIN     DD  DSN=USERID.SOURCE.ASM(COMPCODE),DISP=SHR\n//L.SYSLMOD  DD   DSN=SYS1.LNKLST.LINKLIB,DISP=SHR\n//SYSPRINT    DD  SYSOUT=*\n//SYSIN     DD   *\n   ENTRY COMPCODE\n   NAME  COMPCODE(R)\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMPCODE": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x993?\\x00\\x993\\x9f\\x12U\\x05<\\x058\\x00\\x00\\xc1\\xe6\\xc3\\xc7\\xd2\\xd1@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-11-29T00:00:00", "modifydate": "1999-12-05T12:55:00", "lines": 1340, "newlines": 1336, "modlines": 0, "user": "AWCGKJ"}, "text": "* THIS PROGRAM IS DESIGNED TO REPORT STEP COMPLETION CODES FOR BATCH\n*\n* JOBS.  WHAT AND WHERE IT WRITES IS DETERMINED BY A PARAMETER LIST\n*\n* AND A DD STATEMENT.  THE PROGRAM IS TO BE RUN AS ITS OWN JOBSTEP\n*\n* FOLLOWING ANY JOBSTEPS THAT IT IS TO REPORT ON. IF A NOTIFY DDCARD\n*\n* IS PRESENT, E-MAIL NOTIFICATION WILL BE MADE TO THE REQUESTED\n*\n* MAILIDS.\n*\n* EXAMPLE:\n*\n* //*\n* //COMPCODE EXEC PGM=COMPCODE,COND=EVEN,\n* //         PARM='USER=(RWGV3),ROUT=(2,3,11),STEP=(ASMFCL.*,TESTER)'\n* //SYSPRINT DD   DSN=RWGV3.SYSPRINT,DISP=MOD          (optional)\n* //NOTIFY   DD   DSN=Zxxxx.ONCALL.LIST,DISP=SHR       (optional)\n* //*\n*             OR MORE PRACTICALLY:\n* //*\n* //COMPCODE EXEC PGM=COMPCODE,COND=EVEN\n* //NOTIFY   DD   DSN=Zxxxx.ONCALL.LIST,DISP=SHR       (optional)\n* //*\n*\n*\n* (1)    COND=EVEN SHOULD ALWAYS BE SPECIFIED SO THAT THE STEP WILL\n*        EXECUTE EVEN IF A PREVIOUS STEP HAS ABENDED.\n*\n* (2)    VALID PARMS ARE AS FOLLOWS:\n*\n*    (A) USER= SPECIFIES WHICH USER(S) ARE TO BE NOTIFIED BY COMPCODE.\n*              THIS PARAMETER IS OPTIONAL.  THE USER LIST MUST BE\n*              ENCLOSED IN PARENTHESIS' EVEN IF ONLY ONE USER IS\n*              SPECIFIED. EX. USER=(S001,S002) OR USER=(S001) .\n*              THE MAXIMUM NUMBER OF USERS IS THREE.  IF NO USERS\n*              ARE SPECIFIED, NO USERS WILL BE NOTIFIED.\n*\n*    (B) ROUT= SPECIFIES THE ROUTE CODES THAT THE MESSAGE(S) ARE TO BE\n*              SENT TO.  THIS PARAMETER IS OPTIONAL.  THE ROUTCDE LIST\n*              MUST BE ENCLOSED IN PARENTHESIS' EVEN IF ONLY ONE\n*              ROUTE CODE IS SPECIFIED. EX. ROUT=(1,2,3) OR ROUT=(3).\n*              VALID ROUTE CODES ARE 1-16.  IF NO ROUTE CODES ARE\n*              SPECIFIED, NO MESSAGES WILL BE SENT TO OPERATOR\n*              CONSOLES.\n*\n*    (C) STEP= SPECIFIES THE STEP(S) THAT COMPCODE IS TO REPORT ON.\n*              THIS PARAMETER IS OPTIONAL.  IF OMITTED, ALL STEPS WILL\n*              BE REPORTED ON (EXCEPT FOR STEPS THAT HAVE NOT YET EX-\n*              CUTED OR THE \"COMPCODE\" STEP, BOTH OF WHICH ARE NEVER\n*              LISTED) . THE STEP LIST MUST BE ENCLOSED IN PAREN-\n*              THESIS' EVEN IF ONLY ONE STEP IS SPECIFIED.  STEPS MUST\n*              BE INDICATED IN ONE OF THREE WAYS:\n*\n*        (1)   PROGRAM EXECUTION - WHERE THE EXEC CARD SPECIFIES PGM= .\n*              FOR //STEP1 DD PGM=IEBGENER ,\n*              THE STEP PARM WOULD READ : STEP=(STEP1,ETC,ETC)\n*\n*        (2)   PROC EXECUTION(SINGLE STEP) - WHERE THE EXEC CARD\n*              SPECIFIES A PROC AND ONLY ONE STEP OF THE PROC IS TO\n*              BE REPORTED ON.\n*              FOR //ASMNLINK EXEC ASMFCL ,\n*              TO GET ONLY THE LKED STEP,\n*              THE STEP PARM WOULD READ : STEP=(ASMNLINK.LKED,ETC,ETC)\n*\n*        (3)   PROC EXECUTION(ALL STEPS) - WHERE THE EXEC CARD\n*              SPECIFIES A PROC AND ALL STEPS FOR THE PROC ARE TO\n*              BE REPORTED ON.\n*              FOR //ASMNLINK EXEC ASMFCL ,\n*              TO GET ALL STEPS,\n*              THE STEP PARM WOULD READ : STEP=(ASMNLINK.*,ETC,ETC)\n*\n* (3)    SYSPRINT DD STATEMENT - IF A SYSPRINT DD STATEMENT IS\n*        INCLUDED, THE MESSAGE WILL BE WRITTEN INTO THE DATASET\n*        SPECIFIED IN ADDITION TO THE USER= AND ROUT= REPORTING.  IF\n*        THE DATASET EXISTS AND HAS DCB ATTRIBUTES, THEY ARE NOT\n*        CHANGED.  IF NO DCB ATTRIBUTES ARE SPECIFIED, THE DATA\n*        IS WRITTEN AS RECFM=FB,LRECL=133,BLKSIZE=6118.\n*\n* (4)    SNAPDUMP DD STATEMENT - THIS DD STATEMENT IS TO BE USED FOR\n*        DIAGNOSTIC PURPOSES ONLY.  IF INCLUDED, A SNAPDUMP OF THE\n*        PERTINENT CONTROL BLOCKS WILL BE DONE.  NOTE THAT THE DCB\n*        ATTRIBUTES FOR THIS DCB ARE HARD-CODED TO RECFM=VBA,LRECL=125,\n*        BLKSIZE=1632, A RESTRICTION IMPOSED BY THE SNAP FACILITY.\n*\n* (5)    NOTIFY DD STATEMENT - THIS DD STATEMENT IS USED TO IDENTIFY\n*        WHAT MAILIDS ARE TO BE SENT THE SAME NOTIFICATION MESSAGES\n*        THAT ARE SENT TO TSOUSER IDS OR WTO'ED. THIS DDCARD IS\n*        OPTIONAL. THE CONTROL CARDS IN THE NOTIFY DATASET HAVE ONE\n*        FULLY QUALIFIED MAIL ID PER CARD, BEGINNING IN COLUMN 1. ANY\n*        NUMBER OF CARDS MAY BE IN THE DATASET. FORMAT OF THE NOTIFY\n*        DATASET IS FB, LRECL = 80, ANY VALID BLOCKSIZE.  AN * IN\n*        COLUMN ONE DENOTES A COMMENT AND IS IGNORED. THIS PROGRAM USES\n*        IBM'S SMTP (SIMPLE MAIL TRANSPORT PROTOCOL) AS THE ROUTING\n*        MECHANISM TO THE CORPORATE E-MAIL SYSTEM. DELIVERY OF THE\n*        MESSAGE TO THE CORPORATE E-MAIL IS USUSALLY WITHIN A COUPLE\n*        SECONDS OF STEP TERMINATION. DELIVERY TO THE END USER(S) IS\n*        MOSTLY DEPENDENT ON HOW OFTEN THE USER'S MAIL CLIENT CHECKS\n*        FOR MAIL.\n*\n*         EXAMPLE OF NOTIFY CARD, BEGINNING IN COLUMN 1:\n*          mailid@company.com\n*\n*        MAILID ADDRESS MAY BE IN EITHER UPPER OR LOWER CASE.\n*        IF A NOTIFY DDCARD IS NOT DETECTED, OR THE CORRECT\n*        INTERMEDIARY DATASETS SUCCESSFULLY DYNAMICALLY ALLOCATED,\n*        E-MAIL WILL NOT BE ATTEMPTED.\n*\n* NOTE:  THAT THIS PROGRAM MUST RUN APF-AUTHORIZED IF THE \"USER=\"\n*\n*        PARAMETER IS SPECIFIED.\n*\n***********************************************************************\n*                                                                     *\n* Note:  This program must be modified for the installed site for     *\n*        e-mail notification.                                         *\n*                                                                     *\n* Modifications Required:  The user must specify what SMFID's are in  *\n*                          each JES domain (MAS complex - NODE        *\n*                          statement in JES definition) (see code     *\n*                          before label DOMADONE), and establish      *\n*                          the domain name (see labels SETBDOM,       *\n*                          SETDDOM, and SETTDOM. Add/subtract as      *\n*                          necessary.                                 *\n*                          Update RETNMSG with what APPEARS to be a   *\n*                          valid return address for your installation.*\n*                          Update SUBJMSG with the name of your data  *\n*                          center (or whatever you want).             *\n*                          Update OUTTXT01 with the length and name   *\n*                          of your MVS SMTP started task name.        *\n*                                                                     *\n***********************************************************************\n*\n* This code is running on OS/390 V2R5\n*\n***********************************************************************\n*\n* Modifications made from the original COMPCODE program taken from\n* the CBT tape (don't remember what file it was):\n*\n*  -  Added support for e-mail notification\n*  -  Changed code to get the actual previous step\n*     execution/termination code instead of highest code from JCT\n*  -  Made dates Y2K friendly\n*\n*                           Glenn Jones\n*                           Saudi Aramco, Dhahran, Saudi Arabia\n*                           email: jonesgk@aramco.com.sa\n*                                  g_k_j@yahoo.com\n*\n         MACRO\n&NAME    H2C   &TO,&FROM,&LEN\n         GBLA  &H2CCNT\n.*\n         AIF   ('&TO' EQ '').ERR1\n         AIF   ('&LEN' EQ '').ERR1\n         AIF   ('&FROM' EQ '').ERR1\n.*\n&TOLEN   SETA  &LEN+1\n&FROMLEN SETA  &LEN/2+1\n*\n* THIS MACRO TRANSLATES HEX DATA TO EBCDIC.  NOTICE THAT THE \"FROM\"\n*\n* AND \"TO\" FIELDS MUST HAVE AN EXTRA BYTE FOLLOWING THEM TO ALLOW THE\n*\n* TRANSLATION TO TAKE PLACE.\n*\n         AIF   ('&TO'(1,1) EQ '(').REGTO\n&NAME    LA    15,&TO              LOAD ADDR OF \"TO\" AREA\n         AGO   .CHKFROM\n.REGTO   ANOP\n&NAME    LR    15,&TO              LOAD ADDR OF \"TO\" AREA\n.*\n.CHKFROM AIF   ('&FROM'(1,1) EQ '(').REGFROM\n         LA    14,&FROM            LOAD ADDR OF \"FROM\" AREA\n         AGO   .REGDONE\n.REGFROM LR    14,&FROM            LOAD ADDR OF \"FROM\" AREA\n.*\n.REGDONE ANOP\n         UNPK  0(&TOLEN,15),0(&FROMLEN,14) CONVERT ZONES TO EBCDIC\n         AIF   (&H2CCNT EQ 1).NOT1ST\n&H2CCNT  SETA  1\n         BAL   1,H2C0002           LOAD ADDR OF PARTIAL TBL AND BRANCH\nH2C0001  DC    C'0123456789ABCDEF' PARTIAL TRANSLATE TABLE\n         AGO   .H2C0002\n.*\n.NOT1ST  LA    1,H2C0001           LOAD TBL ADDR FROM LAST INVOCATION\n         AGO   .SKPALGN\n.H2C0002 ANOP\nH2C0002  DS    0H\n.SKPALGN ANOP\n         LA    0,C'0'              LOAD OFFSET INTO TABLE\n         SR    1,0                 SET PTR TO BEGINNING OF TABLE\n         TR    0(&LEN,15),0(1)     TRANSLATE TO CORRECT EBCDIC CHARS\n         MEXIT\n*\n.ERR1    MNOTE 8,'REQUIRED OPERAND NOT SPECIFIED'\n         MEND\n         MACRO\n&NAME    DCBEXIT &RECFM=,&LRECL=,&BLKSIZE=\n.*\n         LCLA  &I,&D\n&I       SETA  1\n&D       SETA  &SYSNDX\n.*\n&NAME    DS    0F\n         DC    X'85',AL3(*+3)      END OF LIST, DCB EXIT, EXIT ADDRESS\n*\n         USING *,R15               OBTAIN ADDRESSABILITY FOR EXIT RTN\n         SLR   R0,R0               ZERO REG0\n.*\n         AIF   ('&RECFM' EQ '').LRECL\n*\n         CLI   36(R1),X'00'        IS THE RECFM ZERO?\n         BNE   D&D.I&I             IF NOT, DON'T REPLACE IT\n         OI    36(R1),DCBRECF      RECFM=F\n.*\n.LRECL   AIF   ('&LRECL' EQ '').BLKSIZE\n*\nD&D.I&I  DS    0H\n&I       SETA  &I+1\n         CH    R0,52(,R1)          IS THE LRECL ZERO?\n         BNE   D&D.I&I             IF NOT, DON'T REPLACE IT\n         MVC   52(2,R1),=AL2(&LRECL) ELSE MOVE IN SPECIFIED VALUE\n.*\n.BLKSIZE AIF   ('&BLKSIZE' EQ '').EXIT\n*\nD&D.I&I  DS    0H\n&I       SETA  &I+1\n         CH    R0,62(,R1)          IS THE BLKSIZE ZERO?\n         BNE   D&D.I&I             IF NOT, DON'T REPLACE IT\n         MVC   62(2,R1),=AL2(&BLKSIZE) ELSE MOVE IN SPECIFIED VALUE\n.*\n.EXIT    ANOP\n*\nD&D.I&I  DS    0H\n         DROP  R15                 DISCONTINUE MAPPING\n         BR    R14                 RETURN\n         MEND\n         PRINT GEN\nCOMPCODE CSECT                     DEFINE CSECT NAME\nCOMPCODE AMODE 24\nCOMPCODE RMODE 24\nR0       EQU   0                   E\nR1       EQU   1                     Q\nR2       EQU   2                       U\nR3       EQU   3                         A\nR4       EQU   4                           T\nR5       EQU   5                             E\nR6       EQU   6\nR7       EQU   7                   R\nR8       EQU   8                     E\nR9       EQU   9                       G\nR10      EQU   10                        I\nR11      EQU   11                          S\nR12      EQU   12                            T\nR13      EQU   13                              E\nR14      EQU   14                                R\nR15      EQU   15                                  S\n         B     BEGIN-*(R15)        BRANCH TO BEGINNING OF PROGRAM\n         DC    17F'0'              REST OF SAVEAREA\nPGMNAME  DC    CL8'COMPCODE'       PROGRAM NAME\n         DC    CL8'G. JONES'       PROGRAMMER NAME\n         DC    CL8'&SYSDATE'       ASSEMBLY DATE\n         DC    CL8'&SYSTIME'       ASSEMBLY TIME\nBEGIN    DS    0H                  ALIGN TO HALFWORD BOUNDARY\n         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS\n         ST    R13,4(,R15)         SAVE ADDRESS OF CALLER'S SAVEAREA\n         ST    R15,8(,R13)         STORE ADDRESS OF MY SAVEAREA\n         LR    R13,R15             LOAD 13 WITH ADDR OF SAVEAREA & PGM\n         USING COMPCODE,R13        SET PRIMARY BASE\n         LA    R12,2048(,R13)          2ND BASE REG\n         LA    R12,2048(,R12)          2ND BASE REG\n         USING COMPCODE+4096,R12\n         USING PSA,R0              MAP PSA\n*\n*        PARSE INITIALIZATION\n*\n         L     R1,0(,R1)           GET ADDRESS OF PARMLIST\n         LH    R10,0(,R1)          GET LENGTH OF PARMLIST\n         LTR   R10,R10             WAS A PARMLIST PROVIDED?\n         BZ    PARSDONE            IF NOT, SKIP PARSING PARMLIST\n         LA    R10,1(R10,R1)       SET POINTER TO LAST BYTE IN PARMLIST\n         CLI   0(R10),C')'         IS THE LAST BYTE A \")\" ?\n         BE    FIRSTPRM            IF SO, CONTINUE\n*\n         MVI   RETCODE+3,X'08'     SET NON-ZERO RETURN CODE\n         LA    R1,PARMERR1         LOAD ADDRESS OF ERROR MESSAGE\n         LA    R11,END             LOAD RETURN ADDRESS\n         B     ERRORRTN            GO TO ERROR ROUTINE\n*\nFIRSTPRM DS    0H\n         LA    R9,2(,R1)           SET POINTER TO 1ST KEYWORD\n         B     PARSLVL1            GO TO LEVEL 1 PARSE ROUTINE\n*\n         TITLE 'PERFORM SOME ADDITIONAL INITIALIZATION FOR PROCESSING'\n*\nPARSDONE DS    0H\n*        OPEN SYSPRINT AND SNAPDUMP DCBS IF THEIR DD CARDS EXISTS\n*\n         L     R1,PSATOLD          GET ADDRESS OF CURRENT TCB\n         USING TCB,R1              MAP IT\n         L     R8,TCBTIO           GET ADDRESS OF TIOT\n         USING TIOT1,R8            MAP IT\n         LA    R8,TIOENTRY         BUMP PTR TO 1ST DD ENTRY\n         USING TIOENTRY,R8         MAP IT\n         XR    R7,R7               CLEAR LENGTH HOLDER\n*\nTIOTLOOP DS    0H\n         CLC   TIOENTRY(4),=4X'00' IS THIS ENTRY THE END?\n         BE    TIOTDONE            IF SO, WE'RE DONE\n         CLC   TIOEDDNM(8),=C'SYSPRINT' IS THIS A SYSPRINT DD CARD?\n         BE    OPENSYSP            IF SO, GO OPEN DCB\n         CLC   TIOEDDNM(8),=C'SNAPDUMP' IS THIS A SNAPDUMP DD CARD?\n         BE    OPENSNAP            IF SO, GO OPEN DCB\n         CLC   TIOEDDNM(8),=C'SMTPMAIL' IS THIS A SMTPMAIL DD CARD?\n         BE    OPENSMTP            IF SO, GO OPEN DCB\n         CLC   TIOEDDNM(8),=C'NOTIFY  ' IS THIS A NOTIFY DD CARD?\n         BE    OPENNOTI            IF SO, GO OPEN DCB\n         CLC   TIOEDDNM(8),=C'SMTP    ' IS THIS A SMTP SYSOUT CARD?\n         BE    FLGSMTP             YES:  GO FLAG SMTP PROVIDED\n         B     BUMPTIOT            ELSE, BUMP PTR TO NEXT TIOT ENTRY\n*\nOPENSYSP DS    0H\n         OPEN  (SYSPRINT,(OUTPUT)) OPEN THE DCB\n         LTR   R15,R15             DID OPEN GO O.K.?\n         BNZ   SYSPFAIL            NO:  GO OUTPUT ERROR MESSAGE\n         OI    FLAGS,PRINTIT       TURN ON FLAG TO ACTIVATE PRINT RTN\n         B     BUMPTIOT            CONTINUE SEARCH FOR OTHER DDNAME\n*\nOPENSNAP DS    0H\n         OPEN  (SNAPDUMP,(OUTPUT)) OPEN THE DCB\n         OI    FLAGS,SNAPIT        TURN ON FLAG TO ACTIVATE SNAP RTN\n         B     BUMPTIOT            CONTINUE SEARCH FOR OTHER DDNAME\n*\nOPENSMTP DS    0H\n         TM    FLAG2,NOEMAIL       HAS EMAIL BEEN DISALLOWED?\n         BO    BUMPTIOT            YES:  BYPASS SMTPMAIL OPEN\n         OPEN  (SMTPMAIL,(OUTPUT)) OPEN THE DCB\n         LTR   R15,R15             DID OPEN GO O.K.?\n         BNZ   MAILFAIL            NO:  GO OUTPUT ERROR MESSAGE\n         OI    FLAG2,MAILPROV      TURN ON FLAG TO SMTPMAIL PROVIDED\n         B     BUMPTIOT            CONTINUE SEARCH FOR OTHER DDNAME\n*\nFLGSMTP  DS    0H\n         OI    FLAGS,SMTPPROV      FLAG THAT SMTP OUTPUT PROVIDED\n         B     BUMPTIOT            CONTINUE SEARCH FOR OTHER DDNAME\n*\nOPENNOTI DS    0H\n         TM    FLAG2,NOEMAIL       HAS EMAIL BEEN DISALLOWED?\n         BO    BUMPTIOT            YES:  BYPASS NOTIFY OPEN\n         OPEN  (NOTIFY,(INPUT))    OPEN THE DCB\n         LTR   R15,R15             DID OPEN GO O.K.?\n         BNZ   NOTIFAIL            NO:  GO OUTPUT ERROR MESSAGE\n         OI    FLAG2,NOTISCAN      SET FLAG NOTIFY SCAN IS IN PROGRESS\nSCANLOOP EQU   *\n         GET   NOTIFY,RECORD       GO READ RECORD\n         CLI   RECORD,C'*'         IS THIS A COMMENT?\n         BE    SCANLOOP            YES:  GO READ AGAIN\n         OI    FLAGS,NOTIPRES      TURN ON FLAG TO ACTIVATE NOTIFY RTN\n         NI    FLAG2,255-NOTISCAN  RESET SCANNING FLAG\n         LA    R1,16               HEX 10\n         L     R2,0(R1)            ADDRESS OF CVT\n         USING CVT,R2\n         L     R3,CVTSMCA          ADDRESS OF SMF CONTROL AREA\n         USING SMCABASE,R3\n         MVC   SMFID,SMCASID       SAVE SMFID\n         DROP  R2,R3\n         CLC   SMFID,=C'B303'      IS THIS THE B MACHINE?\n         BE    SETBDOM             YES:  GO SET B DOMAIN NAMES\n         CLC   SMFID,=C'ASYS'      IS THIS THE A MACHINE?\n         BE    SETBDOM             YES:  GO SET B DOMAIN NAMES\n         CLC   SMFID,=C'DSYS'      IS THIS THE D MACHINE?\n         BE    SETDDOM             YES:  GO SET D DOMAIN NAMES\n         CLC   SMFID,=C'ESYS'      IS THIS THE E MACHINE?\n         BE    SETDDOM             YES:  GO SET D DOMAIN NAMES\n         CLC   SMFID,=C'TEST'      IS THIS THE T MACHINE?\n         BE    SETTDOM             YES:  GO SET T DOMAIN NAMES\nDOMADONE EQU   *\n         MVC   HELOMSG+09(8),DOMAIN MOVE IN DOMAIN NAME\n         MVC   SUBJDOMN,DOMAIN     MOVE IN DOMAIN NAME\n         MVC   SUBJSMF,SMFID       MOVE IN SMFID INTO SUBJECT\n         B     BUMPTIOT            GO CHECK NEXT TIOT ENTRY\n*\nBUMPTIOT DS    0H\n         IC    R7,TIOELNGH         GET THE LENGTH OF THIS ENTRY\n         LA    R8,TIOENTRY(R7)     BUMP THE POINTER TO THE NEXT ENTRY\n         B     TIOTLOOP            GO CHECK NEXT ENTRY\n         DROP  R8                  DISCONTINUE MAPPING\n*\n         EJECT\nTIOTDONE DS    0H\n         TM    FLAGS,NOTIPRES      WAS NOTIFY SUCCESSFULLY DETECTED?\n         BO    *+8                 YES:  BYPASS KILLING EMAIL\n         OI    FLAG2,NOEMAIL       NO:  KILL EMAIL\n         TM    FLAG2,NOEMAIL       HAS EMAIL BEEN DISALLOWED?\n         BO    MAILDONE            YES:  BYPASS NOTIFY OPEN\n****************************************************************\n*        ADD DYNAMIC OUTPUT STATEMENT                          *\n****************************************************************\n         TM    FLAGS,SMTPPROV      WAS A SMTP OUTPUT PROVIDED?\n         BO    SMTPDONE            YES:  BYPASS SMTP DYNALLOC\n         OI    OUTPTR01,S99TUPLN   TURN ON HIGH ORDER BYTE\nOUTSMTP  OUTADD SYSNAME=SMTPDDN,TEXTPTR=OUTPTR01,MF=(E,SMTPLIST)\n         LTR   R15,R15             DID ADD GO O.K.?\n         BNZ   ERROR02             GO OUTPUT ERROR MESSAGE\n         OI    FLAGS,OUTADDOK      TURN ON FLAG THAT DYNAM OUTADD DONE\nSMTPDONE EQU   *\n         TM    FLAG2,MAILPROV      WAS A SMTPMAIL DD SYSOUT PROVIDED?\n         BO    MAILDONE            YES:  BYPASS SMTP DYNALLOC & OPEN\n         OI    S99RBPTR,S99TUPLN   TURN ON HI ORDER BYTE\n         OI    S99TXEND,S99TUPLN   TURN ON HI ORDER BYTE\n         LA    R1,S99RBPTR         LOAD ADDR OF PARM LIST\n         DYNALLOC                  INVOKE DYNALLOC SVC\n         LTR   R15,R15             DID IT ALLOC O.K. ?\n         BNZ   ERROR01             NO:  ISSUE ERROR MSG\n         OI    FLAG2,MAILDYNA      SET FLAG FOR DYNAMIC SMTPMAIL DD\n         MVC   SMTPMAIL+40(8),OUTDDN SAVE DDNAME TO DCB ALSO\n         MVC   S99DEADD,OUTDDN     SAVE DDNAME FOR UNALLOC\n         OPEN  (SMTPMAIL,(OUTPUT)) OPEN THE DCB\n         LTR   R15,R15             DID OPEN GO O.K.?\n         BZ    MAILDONE            CONTINUE PROCESSING\n         OI    FLAG2,DYNSMTFA+NOEMAIL SET FLAG THAT OPEN OF DYNAMIC\n*                                  SMTPMAIL DATASET FAILED\n         B     MAILFAIL            GO OUTPUT ERROR MESSAGE\n         SPACE 1\n*\n*        MAKE SURE WE'RE APF-AUTHORIZED IF USER= WAS SPECIFIED\n*\nMAILDONE EQU   *\n         TM    FLAGS,SENDIT        WAS \"USER=\" SPECIFIED?\n         BZ    GETTIME             IF NOT, SKIP THIS\n         TESTAUTH FCTN=1           SEE IF WE'RE AUTH'D (TO ISSUE CMDS)\n         LTR   R15,R15             ARE WE?\n         BZ    GETTIME             IF SO, SKIP REST OF THIS\n         LA    R1,PARMERR5         LOAD ADDRESS OF ERROR MESSAGE\n         BAL   R11,ERRORRTN        GO TO ERROR ROUTINE\n         MVI   RETCODE+3,X'08'     SET NON-ZERO RETURN CODE\n         TM    FLAGS,WTOIT+PRINTIT WERE ANY OTHER OPTIONS SELECTED?\n         BZ    END                 IF NOT, GO END\n         MVI   RETCODE+3,X'04'     ELSE, SET LESS-SEVERE RETURN CODE\n         NI    FLAGS,255-SENDIT    TURN OFF SEND ROUTINE\n*\n*        GET TIME AND DATE\n*\nGETTIME  DS    0H\n         XC    TIMEDATE,TIMEDATE   ZERO RETURN AREA\n         TIME  DEC,TIMEDATE,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY\n         LTR   R15,R15             DID TIME GO O.K.?\n         BNZ   TIMERROR            GO OUTPUT ERROR MESSAGE\n*        DERIVE THE CORRECT DAY\n         L     R5,TIMEDATE+8       LOAD DATE VALUE INTO REG AGAIN\n         SLL   R5,8                SHIFT OFF MONTH\n         SRL   R5,20               SHIFT OFF YEAR & 4 EXTRA BITS\n         O     R5,=X'0000000F'     PLACE VALID SIGN IN REGISTER\n         ST    R5,PACKWORK+4       SAVE INTO WORKING STORAGE\n         UNPK  J1DAY,PACKWORK+6(2) UNPACK INTO MSG LINE\n*        DERIVE THE CORRECT YEAR\n         L     R5,TIMEDATE+8       LOAD DATE VALUE INTO REG AGAIN\n         SLL   R5,16               SHIFT OFF DAY & MONTH\n         SRL   R5,12               SHIFT BACK TO LOW ORDER SIDE\n         O     R5,=X'0000000F'     PLACE VALID SIGN IN REGISTER\n         ST    R5,PACKWORK+4       SAVE INTO WORKING STORAGE\n         UNPK  J1YEAR,PACKWORK+5(3) UNPACK INTO MSG LINE\n*        DERIVE THE CORRECT MONTH\n         L     R5,TIMEDATE+8       LOAD DATE VALUE INTO REG\n         SRL   R5,20               SHIFT OFF UNNECESSARY BITS\n         ST    R5,PACKWORK+4       SAVE INTO WORKING STORAGE\n         OI    PACKWORK+7,X'0F'    PLACE VALID SIGN INTO FIELD\n         CVB   R5,PACKWORK         CONVERT TO BINARY\n         SLL   R5,2                MULTIPLY BY 4 TO GET OFFSET\n         LA    R6,MONTHS-4         POINT TO MONTHS TABLE -4\n         LA    R6,0(R5,R6)         POINT TO CORRECT MONTH\n         MVC   J1MONTH,0(R6)       MOVE MONTH TO PRINT LINE\n*\nDOTIME   EQU   *\n         MVN   TIMEDATE+3(1),=X'0F' MAKE VALID PACKED NUMBER\n         ED    TIME-1(9),TIMEDATE  EDIT IN VALUE\n         SPACE 2\n*\n*        GET JOBNAME, JESJOBID, AND POINTER TO FIRST SCT\n*\n         L     R1,PSATOLD          GET ADDRESS OF CURRENT TCB (US)\n         USING TCB,R1              MAP IT\n         ICM   R1,B'0111',TCBJSCBB GET ADDRESS OF JSCB\n         USING IEZJSCB,R1          MAP IT\n         L     R4,JSCBJCT          GET ADDRESS OF JCT\n         LA    R4,16(,R4)          BUMP PTR OVER JCT PREFIX\n         USING INJMJCT,R4          MAP IT\n         L     R8,JSCBSSIB         GET ADDRESS OF SSIB\n         USING SSIB,R8             MAP IT\n         MVC   JESJOBID(1),SSIBJBID MOVE J, T, OR S IDENTIFIER INTO MSG\n         MVC   JESJOBID+1(5),SSIBJBID+3 MOVE JES JOB NUMBER INTO MSG\n         DROP  R8                  DISCONTINUE MAPPING WITH R1\n         MVC   JOBNAME(8),JCTJNAME MOVE JOBNAME INTO MESSAGE\n*\n         TM    FLAGS,SNAPIT        DID A SNAPDUMP DDNAME EXIST?\n         BZ    SCTS                IF NOT, SKIP SNAPS\n         ST    R4,SNAPLIST         STORE ADDR OF JCT\n         LA    R0,176(,R4)         LOAD ADDR OF END OF JCT\n         ST    R0,SNAPEND          STORE IT\n         OI    SNAPEND,X'80'       TURN ON END-OF-LIST INDICATOR\n         LA    R0,JCTHDR           LOAD ADDR OF TITLE LINE\n         ST    R0,HDRLIST          STORE IT\n         OI    HDRLIST,X'80'       TURN ON END-OF-LIST INDICATOR\n         SNAP  DCB=SNAPDUMP,LIST=SNAPLIST,STRHDR=HDRLIST STAP AREA\n*\n*        ST    R8,SNAPLIST         STORE ADDR OF SSIB\n*        LA    R0,36(,R8)          LOAD ADDR OF END OF SSIB\n*        ST    R0,SNAPEND          STORE IT\n*        OI    SNAPEND,X'80'       TURN ON END-OF-LIST INDICATOR\n*        LA    R0,SSIBHDR          LOAD ADDR OF TITLE LINE\n*        ST    R0,HDRLIST          STORE IT\n*        OI    HDRLIST,X'80'       TURN ON END-OF-LIST INDICATOR\n*        SNAP  DCB=SNAPDUMP,LIST=SNAPLIST,STRHDR=HDRLIST STAP AREA\n*\n         TITLE 'PROCESS SCTS'\n*\nSCTS     DS    0H\n         L     R10,JCTSDKAD        GET TTR ADDRESS OF FIRST SCT\n         L     R3,LISTPTR          LOAD ADDRESS OF END OF USED LIST\nSCTLOOP  DS    0H\n         SRL   R10,8               CORRECT SCT ADDRESS\n         LA    R10,16(,R10)        BUMP PTR OVER SCT PREFIX\n         USING INSMSCT,R10         MAP SCT\n*\n         TM    FLAGS,SNAPIT        DID A SNAPDUMP DDNAME EXIST?\n         BZ    NOSCTSNP            IF NOT, SKIP SNAPS\n         ST    R10,SNAPLIST        STORE ADDR OF SCT\n         LA    R0,176(,R10)        LOAD ADDR OF END OF SCT\n         ST    R0,SNAPEND          STORE IT\n         OI    SNAPEND,X'80'       TURN ON END-OF-LIST INDICATOR\n         LA    R0,SCTHDR           LOAD ADDR OF TITLE LINE\n         ST    R0,HDRLIST          STORE IT\n         OI    HDRLIST,X'80'       TURN ON END-OF-LIST INDICATOR\n         SNAP  DCB=SNAPDUMP,LIST=SNAPLIST,STRHDR=HDRLIST STAP AREA\n*\nNOSCTSNP DS    0H\n         TM    SCTSTEND,SCTSTPND   THIS STEP BEEN EXECUTED(OR FLUSHED)?\n         BO    SCTCOMP             IF SO, CONTINUE\n         TM    FLAGS,SNAPIT        DID A SNAPDUMP DDNAME EXIST?\n         BZ    END                 IF NOT, WE'RE DONE\n         B     NEXTSCT2            ELSE, RUN ALL SCTS\n*\nSCTCOMP  DS    0H\n         CLC   SCTPGMNM(8),PGMNAME IS THIS ONE A COMPCODE?\n         BE    NEXTSCT2            IF SO, GO BUMP TO NEXT SCT\n         CLI   STEPLIST,C'*'       NO STEPS SPECIFIED?\n         BE    SHOWIT              IF SO, SHOW ALL STEPS\n         LA    R2,STEPLIST         SET POINTER TO BEGINNING OF STEPLIST\n*\nLOOP     DS    0H\n         CR    R2,R3               IS THIS THE END OF THE LIST?\n         BNL   NEXTSCT2            IF SO, GO BUMP PTR TO NEXT SCT\n         CLI   8(R2),C'*'          STEPNAME.* SPECIFIED?\n         BNE   CHECKALL            IF NOT, GO CHECK STEPNAME & PRCSTPNM\n*\n         CLC   0(8,R2),SCTSCLPC    ELSE, IS THIS STEPNAME IN THE LIST?\n         BE    SHOWIT              IF SO, GO DISPLAY IT\n         LA    R2,16(,R2)          ELSE, BUMP TO NEXT LIST ENTRY,\n         B     LOOP                AND TRY IT\n*\nCHECKALL DS    0H\n         CLC   0(16,R2),SCTSCLPC   DO STEPNAME AND PRCSTPNM MATCH?\n         BE    SHOWIT              IF SO, GO DISPLAY IT\nBUMPSCT  DS    0H\n         LA    R2,16(,R2)          ELSE, BUMP TO NEXT LIST ENTRY,\n         B     LOOP                AND TRY IT\n         SPACE 3\nTIMERROR EQU   *\n         MVC   J1MONTH,=CL4'X'     SET BOGUS MONTH\n         MVC   J1YEAR,=CL4'X'      SET BOGUS MONTH\n         MVC   J1DAY,=CL2'X'       SET BOGUS MONTH\n         B     DOTIME              GO DO TIME\n*\n         TITLE 'COMPLETE MESSAGE AND DISPLAY IT'\n*\nSHOWIT   DS    0H\n         TM    SCTABCND,SCTABEND   DID THIS STEP ABEND?\n         BZ    CHKFLSH             IF NOT, GO CHECK FOR FLUSHED STEP\n         MVC   RESULT(9),ABENDED   MOVE \"ABEND\" INTO MESSAGE\n         L     R14,SCTXBTTR        LOAD POINTER TO SCT EXTENSION\n         SRL   R14,8               SHIFT TO 24 BIT ADDR\n         LTR   R14,R14             IS THERE AN EXTENSION?\n         BZ    NOSCTXSN            NO:  BYPASS STORAGE DUMP\n         LA    R14,16(,R14)        POINT TO CORRECT ADDRESS\n         USING SCTXIN,R14          POINT TO EXTENSION BLOCK\n         TM    FLAGS,SNAPIT        DID A SNAPDUMP DDNAME EXIST?\n         BZ    USSCTXSN            IF NOT, SKIP SNAPS\n         ST    R14,SNAPLIST        STORE ADDR OF SCT\n         LA    R0,176(,R14)        LOAD ADDR OF END OF SCTX\n         ST    R0,SNAPEND          STORE IT\n         OI    SNAPEND,X'80'       TURN ON END-OF-LIST INDICATOR\n         LA    R0,SCTXHDR          LOAD ADDR OF TITLE LINE\n         ST    R0,HDRLIST          STORE IT\n         OI    HDRLIST,X'80'       TURN ON END-OF-LIST INDICATOR\n         SNAP  DCB=SNAPDUMP,LIST=SNAPLIST,STRHDR=HDRLIST STAP AREA\nUSSCTXSN EQU   *\n         XR    R1,R1               ZERO WORK REG\n         ICM   R1,B'0111',SCTXABCC+1 LOAD SYSTEM ABEND CODE\n         DROP  R14                 KILL ADDRESSABILITY TO SCTX\n         LTR   R1,R1               DO WE HAVE AN ABEND CODE?\n         BNZ   *+10                YES:  DON'T USE JCT CODE\nNOSCTXSN EQU   *\n         XR    R1,R1               ZERO WORK REG\n         ICM   R1,B'0111',JCTACODE+1 GET ABEND CODE\n         LA    R0,4095             GET MAXIMUM USER ABEND CODE\n         CR    R1,R0               IS THIS A USER ABEND?\n         BH    SYSTEM              IF NOT, PROCESS AS SYSTEM ABEND\n*\n         CVD   R1,PACKWORK         CONVERT ABEND VALUE TO DECIMAL\n         UNPK  CONDCODE(5),PACKWORK+5(3) UPPACK IT INTO MSG\n         OI    CONDCODE+4,X'F0'    CORRECT THE SIGN\n         MVI   CONDCODE,C'U'       MOVE IN USER ABEND IDENTIFIER\n         MVI   CONDCODE+5,C','     ADD COMMA\n         B     BLANKFLD            SKIP PROCESSING NORMAL COND CODE\n*\nSYSTEM   DS    0H\n         SRL   R1,12               SHIFT TO LOW-ORDER BYTES\n         ST    R1,ABEND            STORE IT\n         H2C   CONDCODE,ABEND+2,4  CONVERT SYSTEM ABEND CODE TO CHAR\n         MVI   CONDCODE,C'S'       MOVE IN SYSTEM ABEND IDENTIFIER\n         MVI   CONDCODE+4,C','     ADD COMMA\n         B     BLANKFLD            SKIP PROCESSING NORMAL COND CODE\n*\nCHKFLSH  DS    0H\n         TM    SCTSTEND,SCTSTSRT   DID THIS STEP EVER START?\n         BO    CC                  IF SO, GO GET CONDITION CODE\n         MVC   RESULT(9),FLUSHED   MOVE \"FLUSHED\" INTO MESSAGE\n         MVC   CONDCODE(4),=C'----' MOVE DASHES INTO CONDE CODE FIELD\n         MVI   CONDCODE+4,C','     ADD COMMA\n         B     BLANKFLD            SKIP PROCESSING NORMAL COND CODE\n*\nCC       DS    0H\n         MVC   RESULT(9),ENDED     MOVE \"ENDED\" INTO MESSAGE\n         LH    R1,SCTSEXEC         GET STEP COMPLETION CODE\n         CVD   R1,PACKWORK         CONVERT IT TO PACKED DECIMAL\n         UNPK  CONDCODE(4),PACKWORK+5(3) UNPACK IT INTO DISPLAY FIELD\n         OI    CONDCODE+3,X'F0'    CORRECT THE SIGN\n         MVI   CONDCODE+4,C','     ADD COMMA\n*\nBLANKFLD DS    0H\n         MVI   STEPNAME,C' '       SEED BLANK\n         MVC   STEPNAME+1(16),STEPNAME BLANK OUT STEPNAME/PRCSTPNM FLD\n         CLI   SCTSCLPC,C' '       DOES THIS STEP CALL A PROC?\n         BNE   MOVEPROC            IF SO, GO MOVE IT AND PRCSTPNM IN\n         MVC   STEPNAME(8),SCTSNAME MOVE PRCSTPNM INTO DISPLAY FIELD\n         B     SENDRTN             GO DISPLAY IT\n*\nMOVEPROC DS    0H\n         MVC   STEPNAME(8),SCTSCLPC MOVE IN STEPNAME\n         MVI   PERIOD,C'.'         MOVE IN SEPARATOR\n         MVC   PRCSTPNM(8),SCTSNAME MOVE IN PRCSTPNM\n         EJECT\n*\nSENDRTN  DS    0H\n         TM    FLAGS,SENDIT        ARE WE SUPPOSED TO SEND IT?\n         BZ    WTORTN              IF, NOT SKIP IT\n         MVC   SENDBUF(LMESSAGE),MESSAGE MOVE MESSAGE INTO BUFFER\n*        APFAUTH ON                TURN ON APF-AUTHORIZATION\n         MODESET MODE=SUP,KEY=ZERO GET INTO SUP STATE, KEY 0 FOR SVC34\n         LA    R1,SEND             GET ADDRESS OF SEND PARMLIST\n         XR    R0,R0               SPECIFY \"SYSTEM-ENTERED COMMAND\"\n         SVC   34                  ISSUE COMMAND SVC\n         MODESET MODE=PROB,KEY=NZERO GET BACK INTO PROBLEM STATE\n*        APFAUTH OFF               TURN OFF APF-AUTHORIZATION\n*\nWTORTN   DS    0H\n         TM    FLAGS,WTOIT         ARE WE SUPPOSED TO WTO IT?\n         BZ    PRINTRTN            IF, NOT SKIP IT\n         MVC   WTOBUF(LMESSAGE),MESSAGE MOVE MESSAGE INTO BUFFER\n         WTO   MF=(E,WTO)          WTO THE MESSAGE\n*\nPRINTRTN DS    0H\n         TM    FLAGS,PRINTIT       ARE WE SUPPOSED TO PRINT IT?\n         BZ    NEXTSCT             IF, NOT SKIP IT\n         MVC   PRINTBUF(LMESSAGE),MESSAGE MOVE MESSAGE INTO BUFFER\n         PUT   SYSPRINT,PRINTBUF   PRINT THE MESSAGE\n*\nNEXTSCT  DS    0H\n         TM    FLAG2,NOEMAIL       HAS EMAIL BEEN SQUASHED?\n         BO    *+8                 YES:  BYPASS EMAIL SETUP\n         BAL   R11,NOTIPROS        GO MAKE INTERNET NOTIFICATIONS\n         MVI   CONDCODE+5,C' '     BLANK FIELD IF USED\nNEXTSCT2 EQU   *\n         ICM   R10,B'1111',SCTANSCT LOAD ADDRESS OF NEXT SCT,\n         BNZ   SCTLOOP             AND PROCESS IT\n*\nEND      DS    0H\n         TM    SYSPRINT+48,X'10'   WAS THE SYSPRINT DCB OPENED?\n         BZ    CLOSESNP            IF NOT, JUST END\n         CLOSE SYSPRINT            ELSE, CLOSE DCB\n*\nCLOSESNP DS    0H\n         TM    SNAPDUMP+48,X'10'   WAS THE SNAPDUMP DCB OPENED?\n         BZ    CLOSESMT            NO:  GO CHECK SMT FILE\n         CLOSE SNAPDUMP            ELSE, CLOSE DCB\n*\nCLOSESMT DS    0H\n         TM    SMTPMAIL+48,X'10'   WAS THE SMTPMAIL DCB OPENED?\n         BZ    UNALMAIL            GO CHECK FOR DYNAMIC ALLOC\n         PUT   SMTPMAIL,BLANMSG    GO OUTPUT BLANK LINE MSG\n         PUT   SMTPMAIL,BLANMSG    GO OUTPUT BLANK LINE MSG\n         CLOSE SMTPMAIL            CLOSE DCB\nUNALMAIL EQU   *\n         TM    FLAG2,MAILDYNA      WAS SMTPMAIL DYNAMICALLY ADDED?\n         BNO   DELOUTP             NO:  BYPASS DYNAMIC UNALLOC\n***********************************************************************\n*  PLACE DYNAMIC UNALLOC FOR SMTPMAIL HERE                            *\n***********************************************************************\n*\n*\n         MVI   S99VERB,X'02'       SET DYNALLOC VERB FOR UNALLOC\n         LA    R1,S99DEALC         POINT TO UNALLOCATION PARM LIST\n         ST    R1,S99PTR01         SET AS FIRST TEXT UNIT\n         OI    S99RBPTR,S99TUPLN   SET HI-ORDER BYTE OF PARM LIST\n         OI    S99PTR01,S99TUPLN   AND ONLY TEXT UNIT\n         LA    R1,S99RBPTR         LOAD ADDR OF PARM LIST\n         DYNALLOC                  GO PERFORM UNALLOCATION\nDELOUTP  DS    0H\n         TM    FLAGS,OUTADDOK      DID WE DYNAMICALLY ADD OUTPUT CARD?\n         BNO   ALLDONE             NO:  BYPASS DELETE\n         OUTDEL NAME=SMTPDDN,MF=(E,SMTPDEL)\nALLDONE  DS    0H\n         L     R15,RETCODE         LOAD RETURN CODE\n         L     R13,4(,R13)         RELOAD CALLER'S REGISTER 13\n         L     R14,12(,R13)        RELOAD CALLER'S REGISTER 14\n         LM    R0,R12,20(R13)      RESTORE CALLER'S REGISTERS\n         BR    R14                 RETURN TO CALLER\n         SPACE 3\nSYSPFAIL EQU   *\n         MVC   DYNAFMSG(9),=C' ****OPEN' OVERWRITE MESSAGE\n         MVC   DYNAFDDN,=C'SYSPRINT' MOVE IN DDNAME\n         ST    R15,ABEND           SAVE OPEN RETURN CODE\n         H2C   DYNAFRTC,ABEND+2,4  CONVERT TO PRINTABLE\n         LA    R1,DYNAFMSG         POINT TO CORRECT MSG\n         LA    R11,BUMPTIOT        GO WTO OPEN FAILURE\n         NI    FLAGS,255-PRINTIT   RESET PRINT FLAG\n         BAL   R11,ERRORRTN        GO OUTPUT FORMAT RETURN CODE\n         MVC   DYNAFMSG(9),=C' DYNALLOC' PUT BACK TO ORIGINAL TEXT\n         MVI   RETCODE+3,X'04'     SET WARNING RETURN CODE\n         B     BUMPTIOT            GO PROCESS NEXT DDCARD\n         SPACE 2\nNOTIFAIL EQU   *\n         MVC   DYNAFMSG(9),=C' ****OPEN' OVERWRITE MESSAGE\n         MVC   DYNAFDDN,=C'NOTIFY  ' MOVE IN DDNAME\n         OI    FLAG2,NOEMAIL       SET FLAG DISALLOWING E-MAIL\n         B     ABENDRTC            GO OUTPUT FORMAT RETURN CODE\n         SPACE 2\nMAILFAIL EQU   *\n         MVC   DYNAFMSG(9),=C' ****OPEN' OVERWRITE MESSAGE\n         MVC   DYNAFDDN,=C'SMTPMAIL' MOVE IN DDNAME\n         B     ABENDRTC            GO OUTPUT FORMAT RETURN CODE\n         SPACE 2\nERROR01  EQU   *\n         MVC   DYNAFDDN,=C'SMTPMAIL' MOVE DD IDENTIFIER TO PRT MSG\nABENDRTC EQU   *\n         OI    FLAG2,NOEMAIL       SET FLAG DISALLOWING E-MAIL\n         ST    R15,ABEND           SAVE OPEN RETURN CODE\n         H2C   DYNAFRTC,ABEND+2,4  CONVERT TO PRINTABLE\n         TM    FLAGS,PRINTIT       DO WE HAVE A SYSPRINT?\n         BNO   WTOMSG              NO:  GO WTO ERROR MESSAGE\n         PUT   SYSPRINT,DYNAFMSG   OUTPUT ERROR MESSAGE\n         MVC   DYNAFMSG(9),=C' DYNALLOC' PUT BACK TO ORIGINAL TEXT\n         MVI   RETCODE+3,X'04'     SET WARNING RETURN CODE\n         TM    FLAG2,DYNSMTFA      DID OPEN OF DYNAMICALLY ALLOC\n*                                  SMTPMAIL DATASET FAIL?\n         BO    MAILDONE            GO PROCESS WITHOUT EMAIL\n         B     TIOTDONE            GO HANDLE WITHOUT EMAIL NOTIFICATION\n         SPACE 3\nERROR02  EQU   *\n         MVC   DYNAFMSG(9),=C' **OUTADD' OVERWRITE MESSAGE\n         MVC   DYNAFDDN(8),=C'SMTP    ' MOVE DD IDENTIFIER TO PRT MSG\n         OI    FLAG2,NOEMAIL       KILL EMAIL PROCESSING\n         B     ABENDRTC            GO BUILD REST OF MSG\n         SPACE 2\nERROR03  EQU   *\n         OI    FLAG2,NOEMAIL       KILL EMAIL PROCESSING\n         MVI   RETCODE+3,X'04'     SET WARNING RETURN CODE\n         LA    R1,NOTIERR1         POINT TO NOTIFY ERROR MESSAGE\n         BAL   R11,ERRORRTN        GO OUTPUT ERROR MESSAGE\n         B     BUMPTIOT            GO CHECK NEXT TIOT ENTRY\n         SPACE 2\nWTOMSG   EQU   *\n         LA    R1,DYNAFMSG+1       LOAD POINTER TO ERROR MESSAGE\n         BAL   R11,ERRORRTN        GO OUTPUT ERROR MESSAGE\n         B     BUMPTIOT            GO CHECK FOR NEXT DDCARD\n*\n         TITLE 'PARSE ROUTINES'\n*\n*        LEVEL 1 PARSE ROUTINE (KEYWORD PROCESSING ROUTINE)\n*\nPARSLVL1 DS    0H\n         LA    R1,KEYWORDS         GET ADDRESS OF KEYWORD LIST\nKEYLOOP  DS    0H\n         CLI   0(R1),C' '          IS THIS THE END OF THE KEYWORD LIST?\n         BNE   CHECKKEY            IF NOT, CONTINUE\n*\n         MVI   RETCODE+3,X'08'     SET NON-ZERO RETURN CODE\n         LA    R1,PARMERR2         LOAD ADDRESS OF ERROR MESSAGE\n         LA    R11,END             LOAD RETURN ADDRESS\n         B     ERRORRTN            GO TO ERROR ROUTINE\n*\nCHECKKEY DS    0H\n         CLC   0(4,R9),0(R1)       IS THIS A VALID KEYWORD?\n         BE    FOUNDKEY            IF SO, GO LOAD LEVEL 3 ROUTINE ADDRS\n         LA    R1,12(,R1)          ELSE BUMP TO NEXT KEYWORD,\n         B     KEYLOOP             AND TRY IT\n*\nFOUNDKEY DS    0H\n         L     R7,4(,R1)           LOAD ADDRESS OF PRIMARY LEVEL 3 RTN\n         L     R8,8(,R1)           LOAD ADDRESS OF LEVEL 3 END ROUTINE\n         LA    R1,5(,R9)           LOAD ADDRESS PAST XXXX=\n         B     PARSLVL2            GO TO LEVEL 2 PARSE ROUTINE\n*\nKEYWORDS DS    0F\n         DC    C'USER',A(PARSUSER,USEREND)\n         DC    C'ROUT',A(PARSROUT,ROUTEND)\n         DC    C'STEP',A(PARSSTEP,STEPEND)\n         DC    C' '\n         EJECT\n*\n*        LEVEL 2 PARSE ROUTINE (DELIMITER PROCESSING ROUTINE)\n*\nPARSLVL2 DS    0H\n         CLI   0(R1),C'('          IS THIS A VALID \"OPEN\" DELIMITER\n         BE    PARMSCAN            IF SO, CONTINUE\n*\n         MVI   RETCODE+3,X'08'     SET NON-ZERO RETURN CODE\n         LA    R1,PARMERR3         LOAD ADDRESS OF ERROR MESSAGE\n         LA    R11,END             LOAD RETURN ADDRESS\n         B     ERRORRTN            GO TO ERROR ROUTINE\n*\nPARMSCAN DS    0H\n         LA    R5,1(,R1)           SET BASE POINTER IN PARM\n         LA    R6,1(,R5)           SET POINTER TO SCAN FOR DELIMITER\n*\nPARMLOOP DS    0H\n         CLI   0(R6),C','          IS THIS A PARM SEPARATOR?\n         BE    PARMSEP             IF SO, GO PROCESS IT\n         CLI   0(R6),C')'          IS THIS PARM END?\n         BE    PARMEND             IF SO, GO PROCESS IT\n         LA    R6,1(,R6)           BUMP POINTER\n         B     PARMLOOP            PROCESS NEXT CHARACTER\n*\nPARMSEP  DS    0H\n         BALR  R11,R7              GO TO APPROPRIATE LEVEL 3 ROUTINE\n         LR    R1,R6               COPY ADDRESS OF DELIMITER\n         B     PARMSCAN            PROCESS NEXT PARM\n*\nPARMEND  DS    0H\n         BALR  R11,R7              GO TO APPROPRIATE LEVEL 3 ROUTINE\n         BALR  R11,R8              GO TO APPROPRIATE LVL 3 END ROUTINE\n         CLI   1(R6),C','          IS THERE ANOTHER PARM KEYWORD?\n         BNE   PARSDONE            IF NOT, PARSING IS DONE\n*\n         LA    R9,2(,R6)           ELSE, LOAD ADDRESS OF NEXT KEYWORD,\n         B     PARSLVL1            AND GO PROCESS IT\n         EJECT\n*\n*        LEVEL 3 ROUTINE (USER PARM AND USER END PROCESSING ROUTINES)\n*\nPARSUSER DS    0H\n         BR    R11                 NO PROCESSING TILL END OF PARM\n*\nUSEREND  DS    0H\n         LR    R1,R6               COPY ADDRESS OF END OF PARM FIELD\n         SR    R1,R9               GET LENGTH OF PARM (WITH KEYWORD)\n*\n         LA    R14,SENDBUF+LMESSAGE GET ADDR OF 1ST BYTE PAST MESSAGE\n         MVI   0(R14),X'7D'        MOVE IN CLOSE QUOTE\n         MVI   1(R14),C','         MOVE IN COMMA\n*\n         EX    R1,*+8              SAVE USER PARM FIELD FOR SEND CMD\n         B     *+10                BRANCH AROUND EX ISN\n         MVC   2(0,R14),0(R9)      EX ISN\n*\n         LA    R14,3(R1,R14)       BUMP POINTER PAST USER= PARM\n         MVC   0(6,R14),=C',LOGON' MOVE IN END OF MESSAGE\n         LA    R14,6(,R14)         GET END POINTER\n         LA    R15,SEND            GET ADDRESS OF SEND COMMAND\n         SR    R14,R15             GET TOTAL LENGTH OF COMMAND\n         STH   R14,SEND            STORE IT IN SEND PARMLIST\n*\n         OI    FLAGS,SENDIT        TURN ON FLAG TO ACTIVATE SEND RTN\n         BR    R11                 RETURN TO CALLING ROUTINE\n         EJECT\n*\n*        LEVEL 3 ROUTINE (ROUT PARM AND ROUT END PROCESSING ROUTINES)\n*\nPARSROUT DS    0H\n         LH    R0,ROUTCDE          LOAD ACCUMULATED ROUTCDE\n         LR    R1,R6               COPY END POINTER\n         SR    R1,R5               GET LENGTH OF PARM\n         BCTR  R1,0                SUBTRACT ONE FOR EX ISN\n         EX    R1,*+8              PACK ROUTCODE\n         B     *+10                BRANCH AROUND EX ISN\n         PACK  PACKWORK(8),0(0,R5) PACK ROUTCODE\n*\n         CVB   R1,PACKWORK         CONVERT IT TO BINARY\n         BCTR  R1,0                SUBTRACT ONE FOR 1-16, NOT 0-15\n         STC   R1,SHIFTISN+3       ALTER SHIFT ISN FOR CORRECT LENGTH\n         L     R1,=X'00008000'     LOAD SEED\nSHIFTISN DS    0H\n         SRL   R1,0                SHIFT CORRECT AMOUNT\n         OR    R0,R1               ADD THIS ROUTCDE TO ACCUMULATOR\n         STH   R0,ROUTCDE          STORE UPDATED ROUTCDE\n         BR    R11                 RETURN TO CALLING ROUTINE\n*\nROUTEND  DS    0H\n         MVC   WTOBUF+LMESSAGE(4),WTOCODES MOVE IN DESCRIPT & ROUTCDES\n         LA    R0,LMESSAGE+4       GET WTO PARMLIST LENGTH\n         STH   R0,WTO              STORE LENGTH IN PARMLIST\n         OI    FLAGS,WTOIT         TURN ON FLAG TO ACTIVATE WTO RTN\n         BR    R11                 RETURN TO CALLING ROUTINE\n         EJECT\n*\n*        LEVEL 3 ROUTINE (STEP PARM AND STEP END PROCESSING ROUTINES)\n*\nPARSSTEP DS    0H\n         L     R1,LISTPTR          LOAD CURRENT LIST POINTER\n         L     R0,LISTNUM          LOAD CURRENT LIST ENTRY COUNTER\n         BCT   R0,STPINIT1         DECREMENT COUNTER AND CONTINUE\n*\n         MVI   RETCODE+3,X'08'     SET NON-ZERO RETURN CODE\n         LA    R1,PARMERR4         LOAD ADDRESS OF ERROR MESSAGE\n         LA    R11,END             LOAD RETURN ADDRESS\n         B     ERRORRTN            GO TO ERROR ROUTINE\n*\nSTPINIT1 DS    0H\n         LR    R14,R5              COPY POINTER TO BEGINNING OF PARM\nSTPINIT2 DS    0H\n         LA    R15,1(,R14)         LOAD POINTER TO FIRST CHAR TO CHECK\nSTEPLOOP DS    0H\n         CR    R15,R6              IS THIS END OF PARM?\n         BNL   DELIMIT1            IS SO, PROCESS PARM\n*\n         CLI   0(R15),C'.'         IS THIS DELIMITER FOR PRCSTPNM\n         BE    DELIMIT2            IF SO, PROCESS IT\n*\n         LA    R15,1(,R15)         ELSE, BUMP POINTER,\n         B     STEPLOOP            AND CONTINUE\n*\nDELIMIT2 DS    0H\n         SR    R15,R14             CALCULATE LENGTH OF PARM\n         BCTR  R15,0               SUBTRACT ONE FOR EX ISN\n         EX    R15,*+8             MOVE STEPNAME INTO LIST\n         B     *+10                BRANCH AROUND EX ISN\n         MVC   0(0,R1),0(R14)      EX ISN\n         LA    R14,2(R15,R14)      BUMP BASE TO PRCSTPNM\n         B     STPINIT2            GO PROCESS PRCSTPNM\n*\nDELIMIT1 DS    0H\n         SR    R15,R14             CALCULATE LENGTH OF PARM\n         BCTR  R15,0               SUBTRACT ONE FOR EX ISN\n         EX    R15,*+8             MOVE PRCSTPNM INTO LIST\n         B     *+10                BRANCH AROUND EX ISN\n         MVC   8(0,R1),0(R14)      EX ISN\n         LA    R1,16(,R1)          BUMP POINTER TO NEXT SLOT IN LIST\n*\n         ST    R1,LISTPTR          STORE CURRENT LIST POINTER\n         ST    R0,LISTNUM          STORE CURRENT LIST ENTRY COUNTER\n         BR    R11                 RETURN TO CALLING ROUTINE\n*\nSTEPEND  DS    0H\n         CLI   STEPLIST,C'*'       WAS \"LIST ALL\" FLAG NOT OVERWRITTEN?\n         BNER  R11                 IF OVERWRITTEN, JUST RETURN\n         MVI   STEPLIST,C' '       ELSE, BLANK FLAG OUT\n         BR    R11                 RETURN TO CALLING ROUTINE\n         SPACE 3\nNOTIPROS EQU   *\n         TM    FLAG2,NOEMAIL       HAS E-MAIL BEEN DISALLOWED?\n         BOR   R11                 YES:  DONE HERE\n         TM    FLAGS,EMAILINT      HAS EMAIL BEEN INITIALIZED?\n         BO    MOVESUBJ            YES:  GO MOVE SUBJECT ONLY\n         OI    FLAGS,EMAILINT      SET FLAG AS INITIAL STUFF DONE\n         PUT   SMTPMAIL,HELOMSG    GO OUTPUT HELO MESSAGE\n         PUT   SMTPMAIL,RETNMSG    GO OUTPUT RETURN ADDR MESSAGE\n         B     GET1DONE            INITIAL GET ALREADY DONE\n**************************************************************\n*       BUILD RECEIPENTS CARDS                               *\n**************************************************************\nGETCARD  EQU   *\n         GET   NOTIFY,RECORD       GET EMAIL ADDRESS\n         CLI   RECORD,C'*'         IS THIS A COMMENT?\n         BE    GETCARD             YES:  GO GET ANOTHER RECORD\nGET1DONE EQU   *\n         MVC   RCPTID(RCPTIDL),RECORD  MOVE RECORD TO CARD\n         LA    R15,RCPTID          LOAD ADDRESS TO BEGIN CHECK FROM\n         LA    R14,RCPTIDL         LOAD MAX TIMES THROUGH LOOP\nNAMELOOP EQU   *\n         CLI   0(R15),C' '         END OF NAME?\n         BE    DOPUT               YES:  GO DO PUT\n         LA    R15,1(,R15)         NO:  BUMP TO NEXT CHARACTER\n         BCT   R14,NAMELOOP        GO CHECK NEXT CHARACTER\nDOPUT    EQU   *\n         MVI   0(R15),C'>'         PUT IN CLOSING CHARACTER\n         PUT   SMTPMAIL,RCPTMSG    GO OUTPUT RECEIPENT MESSAGE\n         MVI   RCPTID,C' '         BLANK OUT FIRST CHARACTER\n         MVC   RCPTID+1(RCPTIDL-1),RCPTID BLANK FIELD FOR NEXT USE\n         B     GETCARD             GO DO ANOTHER NOTIFY CARD\n         SPACE 2\nREADEND  EQU   *\n         TM    FLAG2,NOTISCAN      WAS A SCAN IN PROGRESS?\n         BO    ERROR03             YES:  GO TERMMINATE EMAIL PROCESSING\n         PUT   SMTPMAIL,DATAMSG    GO OUTPUT DATA MESSAGE\n         PUT   SMTPMAIL,XMAIMSG    GO OUTPUT XMAIL MESSAGE\n         PUT   SMTPMAIL,FROMMSG    GO OUTPUT FROM MESSAGE\n         PUT   SMTPMAIL,SUBJMSG    GO OUTPUT SUBJECT MESSAGE\n         PUT   SMTPMAIL,MIMVMSG    GO OUTPUT MIME VERSION MESSAGE\n         PUT   SMTPMAIL,CONTMSG    GO OUTPUT CONTENT TYPE MESSAGE\n         PUT   SMTPMAIL,BOUNMSG    GO OUTPUT BOUNDARY TYPE MESSAGE\n         PUT   SMTPMAIL,MIMPMSG    GO OUTPUT MIME PAGE TYPE MESSAGE\n         PUT   SMTPMAIL,CONYMSG    GO OUTPUT CONTENT TYPE MESSAGE\n         PUT   SMTPMAIL,BLANMSG    GO OUTPUT BLANK LINE MESSAGE\nMOVESUBJ EQU   *\n         MVC   EMAILMSG(LMESSAGE),MESSAGE MOVE MESSAGE TO EMAIL LINE\n         PUT   SMTPMAIL,EMAIMSG    GO OUTPUT ACTUAL MESSAGE TEXT\n         BR    R11                 RETURN TO CALLER\n         SPACE 3\nSETBDOM  EQU   *\n         MVC   DOMAIN,=CL8'SAOTOWER' SET CORRECT DOMAIN FOR SMFID\n         B     DOMADONE            DOMAIN ESTABLISHMENT DONE\n         SPACE 1\nSETDDOM  EQU   *\n         MVC   DOMAIN,=CL8'SAONORTH' SET CORRECT DOMAIN FOR SMFID\n         B     DOMADONE            DOMAIN ESTABLISHMENT DONE\n         SPACE 1\nSETTDOM  EQU   *\n         MVC   DOMAIN,=CL8'SAOTEST ' SET CORRECT DOMAIN FOR SMFID\n         B     DOMADONE            DOMAIN ESTABLISHMENT DONE\n         SPACE 1\nLISTPTR  DC    A(STEPLIST)\nLISTNUM  DC    A(NUMNAMES+1)\n*\n         TITLE 'ERROR MESSAGE ROUTINE'\n*\nERRORRTN DS    0H\n         MVC   ERRORWTO+19(50),0(R1) MOVE ERROR MESSAGE INTO WTO\nERRORWTO WTO   'COMPCODE - 12345678901234567890123456789012345678901234X\n               567890',ROUTCDE=11\n         BR    R11                 RETURN TO CALLING ROUTINE\n*\nPARMERR1 DC    CL50'PARMLIST DOES NOT END WITH A CLOSE PARENTHESIS'\n*\nPARMERR2 DC    CL50'PARMLIST CONTAINS UNRECOGINIZED KEYWORD'\n*\nPARMERR3 DC    CL50'OPEN PARENTHESIS NOT FOUND FOR KEYWORD'\n*\nPARMERR4 DC    CL50'MORE THAN 16 STEPNAMES SPECIFIED'\n*\nPARMERR5 DC    CL50'UNABLE TO ISSUE SEND COMMANDS, NOT APF-AUTHORIZED'\n*\nNOTIERR1 DC    CL50'NO NOTIFY ADDRESSES DETECTED. EMAIL TERMINATED.  '\n*\n         TITLE 'WTO, SEND, AND PRINT CONTROL BLOCK CONSTANTS'\n*\nWTOCODES DS    0H\nDSCPTCDE DC    B'0000000000000000' DESCRIPTOR CODES (NONE)\nROUTCDE  DC    B'0000000000000000' ROUTE CODE(S)\n*\n*\nWTO      DC    H'0'                TEXT LENGTH\n         DC    B'1000000000000000' MCS FLAGS\nWTOBUF   DC    CL80' '             MSG, DESCRIPTOR AND ROUTCDES\n*\nSEND     DC    H'0'                COMMAND LENGTH\n         DC    H'0'                CONSOLE ID\n         DC    C'SE ',X'7D'        MESSAGE PREFIX\nSENDBUF  DC    (LMESSAGE+34)C' '   ALLOW FOR MSG AND -\n*                                  ',USER=(XXXXXXX),LOGON   (22 CHARS)\n*\nPRINTBUF DC    CL133' '\n*\nMESSAGE  DS    0H\nJOBNAME  DC    C'XXXXXXXX('\nJESJOBID DC    C'XYYYYY)- '\nSTEPNAME DC    C'XXXXXXXX'\nPERIOD   DC    C'.'\nPRCSTPNM DC    C'XXXXXXXX '\nRESULT   DC    C'         '\n         DC    C'CODE '\nCONDCODE DC    C'XXXX   '\nJ1DAY    DC    C'01'\n         DC    C' '\nJ1MONTH  DC    C'JAN'\n         DC    C' '\nJ1YEAR   DC    C'1979'\n         DC    C' '\nTIME     DC    X'20217A20207A2020'\nLMESSAGE EQU   *-MESSAGE\n*\n         TITLE 'SMTP CONTROL CARDS '\n*\nHELOMSG  DS    0H\n         DC    AL2(HELOMSGL),AL2(0)\n         DC    C'helo SAOTEST '\nHELOMSGL EQU   *-HELOMSG\nRETNMSG  DS    0H\n         DC    AL2(RETNMSGL),AL2(0)\n         DC    C'mail from:<COMPCODE@company.com>'\nRETNMSGL EQU   *-RETNMSG\nRCPTMSG  DS    0H\n         DC    AL2(RCPTMSGL),AL2(0)\n         DC    C'rcpt to:<'\nRCPTID   DC    CL60' '\nRCPTIDL  EQU   *-RCPTID\nRCPTMSGL EQU   *-RCPTMSG\nDATAMSG  DS    0H\n         DC    AL2(DATAMSGL),AL2(0)\n         DC    C'data '\nDATAMSGL EQU   *-DATAMSG\nXMAIMSG  DS    0H\n         DC    AL2(XMAIMSGL),AL2(0)\n         DC    C'x-mailer: COMPCODE Program'\nXMAIMSGL EQU   *-XMAIMSG\nFROMMSG  DS    0H\n         DC    AL2(FROMMSGL),AL2(0)\n         DC    C'From:  COMPCODE Program'\nFROMMSGL EQU   *-FROMMSG\nSUBJMSG  DS    0H\n         DC    AL2(SUBJMSGL),AL2(0)\n         DC    C'Subject: JOB/STEP Notification - Tower Computer Centerx\n                - NJE Network Node: '\nSUBJDOMN DC    CL8' '\n         DC    CL10'  SYSID: '\nSUBJSMF  DC    CL4' '\n         DC    CL2' '\nSUBJMSGL EQU   *-SUBJMSG\nMIMVMSG  DS    0H\n         DC    AL2(MIMVMSGL),AL2(0)\n         DC    C'Mime-Version 1.0'\nMIMVMSGL EQU   *-MIMVMSG\nCONTMSG  DS    0H\n         DC    AL2(CONTMSGL),AL2(0)\n         DC    C'Content-Type: multipart/mixed'\nCONTMSGL EQU   *-CONTMSG\nBOUNMSG  DS    0H\n         DC    AL2(BOUNMSGL),AL2(0)\n         DC    C'boundary=\"Mime.Part.CONDCODE.24jul651rhg.0x0zaxld\"'\nBOUNMSGL EQU   *-BOUNMSG\nMIMPMSG  DS    0H\n         DC    AL2(MIMPMSGL),AL2(0)\n         DC    C'--Mime.Part.CONDCODE.24jul651rhg.0x0zaxld'\nMIMPMSGL EQU   *-MIMPMSG\nCONYMSG  DS    0H\n         DC    AL2(CONYMSGL),AL2(0)\n         DC    C'Content-Type: text/plain'\nCONYMSGL EQU   *-CONYMSG\nBLANMSG  DS    0H\n         DC    AL2(BLANMSGL),AL2(0)\n         DC    C'                        '\nBLANMSGL EQU   *-BLANMSG\nEMAIMSG  DS    0H\n         DC    AL2(EMAIMSGL),AL2(0)\nEMAILMSG DC    (LMESSAGE)C' '\nEMAIMSGL EQU   *-EMAIMSG\nCHARMSG  DS    0H\n         DC    AL2(CHARMSGL),AL2(0)\n         DC    C'Charset=\"US-ASCII\"'\nCHARMSGL EQU   *-CHARMSG\nCON7MSG  DS    0H\n         DC    AL2(CON7MSGL),AL2(0)\n         DC    C'Content-Transfer-Encoding: 7bit'\nCON7MSGL EQU   *-CON7MSG\nENDEMSG  DS    0H\n         DC    AL2(ENDEMSGL),AL2(0)\n         DC    C'--Mime.Part.CONDCODE.24jul651rhg.0x0zaxld--'\nENDEMSGL EQU   *-ENDEMSG\n*\n         TITLE 'SNAPDUMP CONSTANTS'\n*\nSNAPLIST DS    F\nSNAPEND  DS    F\nHDRLIST  DS    F\n*\nJCTHDR   DC    AL1(LJCTHDR-1)\n         DC    C'SNAP DUMP OF JOB CONTROL TABLE (JCT)'\nLJCTHDR  EQU   *-JCTHDR\n*\nSSIBHDR  DC    AL1(LSSIBHDR-1)\n         DC    C'SUBSYSTEM IDENTIFICATION BLOCK (SSIB)'\nLSSIBHDR EQU   *-SSIBHDR\n*\nSCTHDR   DC    AL1(LSCTHDR-1)\n         DC    C'STEP CONTROL TABLE (SCT) (ONE PER STEP)'\nLSCTHDR  EQU   *-SCTHDR\n*\nSCTXHDR  DC    AL1(LSCTXHDR-1)\n         DC    C'STEP CONTROL TABLE EXT (SCTX) (ONE PER STEP)'\nLSCTXHDR EQU   *-SCTXHDR\n*\n         TITLE 'OTHER MISCELANEOUS CONSTANTS'\n*\nPACKWORK DS    D\nRETCODE  DC    F'0'\nABEND    DS    F,X\nFLAGS    DC    X'00'\n*\nSENDIT   EQU   X'80'\nWTOIT    EQU   X'40'\nPRINTIT  EQU   X'20'\nSNAPIT   EQU   X'10'\nSMTPPROV EQU   X'08'\nEMAILINT EQU   X'04'\nNOTIPRES EQU   X'02'               NOTIFY CARD PRESENT\nOUTADDOK EQU   X'01'               DYNAMIC OUTADD DONE\nFLAG2    DC    X'00'\nMAILPROV EQU   X'80'               SMTPMAIL DD CARD PROVIDED\nNOEMAIL  EQU   X'40'               EMAIL NOT ALLOWED\nMAILDYNA EQU   X'20'               SMTPMAIL DYNAMICALLY ALLOCATED\nNOTISCAN EQU   X'10'               NOTIFY IS SCANNING FOR VALID MAIL ID\nDYNSMTFA EQU   X'08'               OPEN OF DYN ALLOC SMTPMAIL FAILED\n         DS    0F\nMONTHS   DC    CL4'JAN'\n         DC    CL4'FEB'\n         DC    CL4'MAR'\n         DC    CL4'APR'\n         DC    CL4'MAY'\n         DC    CL4'JUN'\n         DC    CL4'JUL'\n         DC    CL4'AUG'\n         DC    CL4'SEP'\n         DC    CL4'OCT'\n         DC    CL4'NOV'\n         DC    CL4'DEC'\nTIMEDATE DS    CL16\nDOMAIN   DC    CL8' '\nSMFID    DC    CL4' '\n*\nABENDED  DC    CL9'ABENDED,'\nFLUSHED  DC    CL9'FLUSHED,'\nENDED    DC    CL9'ENDED,'\n*\nSTEPLIST DC    CL16'*'\n         DC    15CL16' '\nNUMNAMES EQU   (*-STEPLIST)/16\n*\n         TITLE 'DYNAMIC ALLOCATION CONSTANTS'\n         DS    0F\nS99RBPTR DC     AL4(S99RB)         POINTER TO REQUEST BLOCK\nS99RB    DS     0F                 REQUEST BLOCK\nS99RBLN  DC     X'14'              LENGTH OF REQUEST BLOCK\nS99VERB  DC     XL1'01'            VERB CODE\nS99FLAG1 DS     0CL2               FLAGS\nS99FLG11 DS     CL1                FIRST FLAGS BYTE\nS99FLG12 DS     CL1                SECOND BYTE OF FLAGS\nS99RSC   DS     0CL4               REASON CODE FIELDS\nS99ERROR DS     XL2                ERROR REASON CODE\nS99INFO  DS     XL2                INFORMATION REASON CODE\nS99TXTPP DC     A(S99TUPL)         ADDR OF LIST OF TEXT UNIT PTRS\nS99RSV01 DS     F                  RESERVED\nS99FLAG2 DS     0CL4               FLAGS FOR AUTHORIZED FUNCTIONS\nS99FLG21 DS     CL1                FIRST BYTE OF FLAGS\nS99FLG22 DS     CL1                SECOND BYTE OF FLAGS\nS99FLG23 DS     CL1                THIRD BYTE OF FLAGS\nS99FLG24 DS     CL1                FOURTH BYTE OF FLAGS\nS99RBEND EQU    *                  END MARKER\n***********************************************************************\n* SVC 99 TEXT UNIT POINTER LIST\n***********************************************************************\nS99TUPL  DS     0F                 TEXT UNIT POINTER LIST\nS99PTR01 DC     A(S99TXT01)        TEXT UNIT POINTER TO DDNAME\nS99PTR02 DC     A(S99TXT02)        TEXT UNIT POINTER TO SYSOUT=B\nS99TXEND DC     A(S99TXT03)        TEXT UNIT POINTER TO OUTPUT=SMTP\nS99TUPLN EQU    X'80'              LAST TEXT UNIT POINTER IN LIST\n***********************************************************************\n* SVC 99 TEXT UNIT\n***********************************************************************\nS99SYS01 DS    0F\nS99TXT01 DC    X'005500010008'    ALLOC DDN FOR SMTPMAIL\nOUTDDN   DC    CL8' '             SYSTEM RETURNED OUTPUT DDNAME\nS99TXT02 DC    X'001800010001',C'B' CLASS B OUTPUT\nS99TXT03 DC    X'800200010008'    DDNAME OF OUTPUT CARD\nSMTPDDN  DC    CL8'SMTP'          DEFAULT IN CASE NOT DYNAMIC ALLOC\n         SPACE\nS99DEALC DS    0H\n         DC    X'000100010008'\nS99DEADD DC    CL8'SMTPMAIL'      DEFAULT IN CASE NOT DYNAMIC\n***********************************************************************\n* OUTADD TEXT POINTERS\n***********************************************************************\n         DS    0F\nSMTPLIST OUTADD MF=L\nSMTPDEL  OUTDEL MF=L\nOUTPTR01 DC    AL4(OUTTXT01)\nOUTTXT01 DC    X'000C00010004',C'SMTP' STC SMTP PROC NAME\nRECORD   DC    CL80' '\nDYNAFMSG DS    0CL133\n         DC    CL21' DYNALLOC FAILED FOR '\nDYNAFDDN DC    CL8' '\n         DC    CL17'. RETURN CODE IS '\nDYNAFRTC DC    CL4' '\n         DC    CL83'.  EMAIL NOTIFICATION TERMINATED.'\n         PRINT NOGEN\nSYSPRINT DCB   DDNAME=SYSPRINT,                                        X\n               DSORG=PS,                                               X\n               MACRF=PM,                                               X\n               RECFM=FB,                                               X\n               LRECL=133,                                              X\n               BLKSIZE=27930\n*              EXLST=DCBEXIT\n*\nDCBEXIT  DCBEXIT BLKSIZE=6118      SEE MACRO EXPANSION\n*\nSNAPDUMP DCB   DDNAME=SNAPDUMP,                                        X\n               DSORG=PS,                                               X\n               MACRF=W,                                                X\n               RECFM=VBA,                                              X\n               LRECL=125,                                              X\n               BLKSIZE=1632\n*\nSMTPMAIL DCB   DDNAME=SMTPMAIL,                                        X\n               DSORG=PS,                                               X\n               MACRF=PM,                                               X\n               RECFM=VB,                                               X\n               LRECL=125,                                              X\n               BLKSIZE=27998\n*\nNOTIFY   DCB   DDNAME=NOTIFY,                                          X\n               DSORG=PS,                                               X\n               MACRF=GM,                                               X\n               RECFM=FB,                                               X\n               EODAD=READEND,                                          X\n               LRECL=80\n*\n         IHAPSA                    PSA DSECT\n         IKJTCB                    TCB DSECT\n         IEZJSCB                   JSCB DSECT\n         IEFSCTX                   SCTX DSECT\n         IEFJSSIB                  SSIB DSECT\n         IEFAJCTB                  JCT DSECT\n         IEFASCTB                  SCT DSECT\n         IEFTIOT1                  TIOT DSECT\n*        IHADCB DSORG=PS           DCB DSECT\n         DCBD   DSORG=PS           DCB DSECT\n         IEESMCA\n         CVT    DSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT436/FILE436.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT436", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}