{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011629000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 705432, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 10, "INMDSNAM": "CBT.V500.FILE271.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 705432, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 705432, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE271.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x0c\\n'", "DS1TRBAL": "b'(>'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\xeb\\x00\\x00\\x01\\xeb\\x00\\x0c\\x00\\r'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"##V3R2M4": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00$\\x00$\\x00\\x00\\xc4\\xd6\\xc3\\xe4\\xd4\\xd5\\xe3@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 36, "newlines": 36, "modlines": 0, "user": "DOCUMNT"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "#CHANGES": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00\\xf7\\x00\\xf7\\x00\\x00\\xc4\\xd6\\xc3\\xe4\\xd4\\xd5\\xe3@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 247, "newlines": 247, "modlines": 0, "user": "DOCUMNT"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "#CPYRITE": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00-\\x00-\\x00\\x00\\xc4\\xd6\\xc3\\xe4\\xd4\\xd5\\xe3@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 45, "newlines": 45, "modlines": 0, "user": "DOCUMNT"}, "text": "\u00bb\n\u008d                         MVS Dynamic PROCLIB                  #CPYRITE\n\u008d                            Version 3.2.4\n\u008d                            December, 1990\n\u008d                              Copyright\n\u008f\n\u008dThis  library  contains a complete Dynamic PROCLIB modification.  This\n\u008dmodification is compatible with all versions of MVS/SP 1.3.3 to MVS/SP\n\u008d3.1.3.  This release of Dynamic PROCLIB includes  substantial  changes\n\u008dto  the previous release(s) and REQUIRES de-installation of any previ-\n\u008dous level installed.\n\n\u008d**********************************************************************\n\n\u008dThis Dynamic PROCLIB Modification  is  copyrighted  by  Amdahl  Corpo-\n\u008dration,  even  though  it  is  essentially in the public domain.   The\n\u008dintent of this copyright was to prevent it's appropriation and  inclu-\n\u008dsion in a product that is sold.  This code will remain free as long as\n\u008dAmdahl retains any rights to it.\n\n\u008dThis  copyright,  however,  has not prevented at least one vendor of a\n\u008dDynamic PROCLIB from using MOST of the code contained in IEFVPP as the\n\u008dbasis for their product.  This was done by an ex-Amdahl employee  that\n\u008dhad no involvement whatsoever in the development or enhancement of any\n\u008dversion  of  the  Amdahl Dynamic PROCLIB Modification.  As noted, this\n\u008dDynamic PROCLIB Modification originally came from Mutual Life of Cana-\n\u008dda.\n\n\u008dThis vendor, who shall remain nameless here, nevertheless is guilty of\n\u008dpoor ethics.  And if people are willing to pay a substantial amount of\n\u008dmoney for something that's available in the  public  domain,  well,  I\n\u008dguess that there's a sucker born every minute.\n\n\u008d**********************************************************************\n\n\u008dPlease direct any questions, problems, suggestions, etc. to:\n\n\u008d          Keith E. Moe\n\u008d          Amdahl Corporation\n\u008d          Corporate Computer Services\n\u008d          M/S 201\n\u008d          1250 E. Arques Ave.\n\u008d          P. O. Box 3470\n\u008d          Sunnyvale, California  94088-3470\n\u008d          (408) 746-6386\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#DINSTLL": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00,\\x00,\\x00\\x00\\xc4\\xd6\\xc3\\xe4\\xd4\\xd5\\xe3@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "DOCUMNT"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "#DISTRIB": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x003\\x003\\x00\\x00\\xc4\\xd6\\xc3\\xe4\\xd4\\xd5\\xe3@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 51, "newlines": 51, "modlines": 0, "user": "DOCUMNT"}, "text": "\u00bb\n\u008d                         MVS Dynamic PROCLIB                  #DISTRIB\n\u008d                            Version 3.2.4\n\u008d                            December, 1990\n\u008d                             Distribution\n\u008f\n\u008dThis  library  contains a complete Dynamic PROCLIB modification.  This\n\u008dmodification is compatible with all versions of MVS/SP 1.3.3 to MVS/SP\n\u008d3.1.3.  This release of Dynamic PROCLIB includes  substantial  changes\n\u008dto  the previous release(s) and REQUIRES de-installation of any previ-\n\u008dous level installed.\n\n\u008d**********************************************************************\n\n\u008dFour complete versions of the SMP format modifications  are  provided.\n\u008dOne  is  for  MVS/SP  1.3.x (#ZSP13x members), one is for MVS/SP 2.1.x\n\u008d(#ZSP21x members), one is for MVS/SP 2.2.0 (#ZSP22x members), and  the\n\u008dfourth is for MVS/SP 3.1.x (#YSP31x members).\n\n\u008dThe source code for the additional module (IEFVPP) is fully compatible\n\u008dwith  all  levels  of  MVS/SP.    However,  Assembler  H, Version 2 is\n\u008drequired to reassemble it.  Unless the default setting of the  &SWA220\n\u008dSET  Symbols  is  changed,  the  MVS/SP 2.2.0 Macro Libraries are also\n\u008drequired to properly assembly IEFVPP.\n\n\u008dIEFCVRWA is the Converter Work Area mapping Macro  from  the  MVS  3.8\n\u008dOptional  Materials.  It is necessary to properly assemble IEFVPP.  It\n\u008dis currently NOT necessary to obtain a version of this Macro from  the\n\u008dlicensed  Optional  Materials provided with the MVS/SPs, as all refer-\n\u008denced data fields are unchanged.   However, this  may  change  in  the\n\u008dfuture.\n\n\u008dExtensive  documentation  on  the  installation  and  function of this\n\u008dDynamic PROCLIB Modification can be found in other members and in  the\n\u008dComments in the SMP Modifications and the source for IEFVPP.\n\n\u008dSince  1977,  this  modification  has had only one major change (other\n\u008dthan changing the Converter ZAPs) until the changes  made  in  release\n\u008d3.2.0  (which  were mostly enhancements).  This was to support the SJF\n\u008dfeature added in MVS/SP 1.3.2.  The change was made to  be  compatible\n\u008dacross all levels of MVS and to eliminate the future dependence on the\n\u008dsize  of  the Converter Work Area.  This change took all of ONE DAY to\n\u008dmake.  Hence, this modification can be considered quite stable.    The\n\u008dchanges  in  this  release make this Dynamic PROCLIB Modification even\n\u008dmore MVS Release level independent.\n\n\u008dNote:  Please use extreme care when reworking the Superzap against the\n\u008dInterpreter module (IEFVDA) when maintenance or a new release hits it.\n\u008dBe sure that the Base/Displacements of the various branches are  prop-\n\u008derly calculated and changed.  0C1s and 0C4s in the Interpreter are the\n\u008dmost common symptoms when the Superzap is not properly reworked.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "#INSTALL": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00\\xa8\\x00\\xa8\\x00\\x00\\xc4\\xd6\\xc3\\xe4\\xd4\\xd5\\xe3@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 168, "newlines": 168, "modlines": 0, "user": "DOCUMNT"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "#USERGDE": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00F\\x00F\\x00\\x00\\xc4\\xd6\\xc3\\xe4\\xd4\\xd5\\xe3@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 70, "newlines": 70, "modlines": 0, "user": "DOCUMNT"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "#YSP311": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00@\\x00@\\x00\\x00\\xe2\\xd7\\xf3K\\xf1K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 64, "newlines": 64, "modlines": 0, "user": "SP3.1.X"}, "text": "++ USERMOD (#YSP311)  .\n++ VER   (Z038)  FMID  (JBB3313)             /* MVS/SP 3.1.3 */\n                 PRE   (UY45188)             /* 9002 */\n                                                                  /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #YSP311  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #YSP312  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #YSP313  SGIEF409  SYSGEN MACRO UPDATE AND JCLIN\n               #YSP314  IEFVPP    NEW CONVERTER MODULE\n\n               IEFVDA\n\n               IEFVDA IS THE INTERPRETER DD STATEMENT PROCESSOR.  THE\n               ZAP CHANGES IEFVDA TO CHECK FOR A \"DD DYNAM\" BEFORE\n               THE FIRST EXEC STATEMENT AND CAUSE IT TO BE BYPASSED.\n               IEFVPP FLAGS JOBPROC DD STATEMENTS AS IF THEY WERE DD\n               DYNAM STATEMENTS.  IF THIS IS NOT DONE, ANY JOB WITH A\n               JOBPROC DD STATEMENT WILL RECEIVE A \"MISPLACED DD\n               STATEMENT\" JCL ERROR.\n\n               THIS MODIFICATION MUST BE INSTALLED IN ADVANCE OF\n               ANY ATTEMPTED USE OF THE DYNAMIC PROCLIB FACILITY.\n               IF IT NOT INSTALLED, ANY ATTEMPT TO USE A JOBPROC\n               DD STATEMENT WILL SIMPLY RECEIVE A \"MISPLACED DD\n               STATEMENT\" JCL ERROR.\n\n               THIS MODIFICATION CAN BE INSTALLED IN ADVANCE OF\n               THE REMAINING DYNAMIC PROCLIB MODIFICATIONS WITH\n               NO IMPACT ON THE FUNCTIONING OF THE CONVERTER OR\n               INTERPRETER.\n\n                                                                  */ .\n++ ZAP   (IEFVDA)  DISTLIB (AOSB3) .\n         NAME  IEFVDA\n*\n         VER   0000 05B0                   BALR R11,0 (BASE=0002)\n*                                               R7    (BASE=1002)\n*                                               R6    (BASE=2002)\n*\n         VER   064A 9120,C22A              TM   SWD,FEXRCV\n         VER   064E 4710,B6EE              BO   DDP02\n*\n         VER   065C D506,3000,B9B8         CLC  0(DD7,R3),DDP20 SYSCHK\n         VER   0662 4780,611A              BE   CLEAN156\n*\n         VER   2680 0000,0000              START OF NEEDED PATCH AREA\n         VER   2690 0000,0000              END OF NEEDED PATCH AREA\n*\n         REP   064E 45E0,667E              BAL  R14,PATCH\n*\n         REP   2680 4710,B6EE              BO   DDP02 (OVERLAID INST)\n         REP   2684 5810,C02C              L    R1,TEXTBUFP\n         REP   2688 9108,1003              TM   STRDINDC,DTXDYNAM\n         REP   268C 078E                   BZR  R14\n         REP   268E 47F0,611A              B    CLEAN156\n*\n         IDRDATA #YSP311\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#YSP312": {"ttr": 776, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x001\\x001\\x00\\x00\\xe2\\xd7\\xf3K\\xf1K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 49, "newlines": 49, "modlines": 0, "user": "SP3.1.X"}, "text": "++ USERMOD (#YSP312)  .\n++ VER   (Z038)  FMID  (JBB3313)             /* MVS/SP 3.1.3 */\n                 PRE  (UY44584)              /* 9001 */\n                                                                 /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #YSP311  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #YSP312  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #YSP313  SGIEF409  SYSGEN MACRO UPDATE AND JCLIN\n               #YSP314  IEFVPP    NEW CONVERTER MODULE\n\n               IEFVFA\n\n               AN ENTRY IN THE JCL KEYWORD TABLE IS CONVERTED\n               TO THE \"SYSPROC=\" KEYWORD.  \"SUBALLOC=\" WAS CHOSEN,\n               SINCE ITS USE IS VIRTUALLY NON-EXISTANT.  TO FILL\n               IN THE EXTRA BYTE LEFT OVER WHEN \"SYSPROC=\" AND ITS\n               INTERNAL TEXT CODE (SYMBOL SYSPROCK DEFINED IN IEFVPP)\n               IS ZAPPED OVER \"SUBALLOC=\" AND ITS INTERNAL TEXT\n               CODE (SYMBOL SUBALLOK - X'4C' - DEFINED IN MACRO\n               IEFVKEYS), \"SYSPROC=\" IS MADE MUTUALLY EXCLUSIVE\n               WITH \"DCB=\" (SYMBOL DCBK - X'40' - DEFINED IN MACRO\n               IEFVKEYS).\n\n               THIS MODIFICATION IS OPTIONAL.  IF NOT INSTALLED,\n               THE SYSPROC=YES|NO PARAMETER ON THE JOBPROC STATEMENT\n               WILL NOT BE AVAILABLE AND THE DEFAULT AS SPECIFIED IN\n               THE ASSEMBLY OF IEFVPP WILL BE IN EFFECT.\n\n               THIS MODIFICATION CAN BE INSTALLED IN ADVANCE OF\n               THE REMAINING DYNAMIC PROCLIB MODIFICATIONS WITH\n               NO IMPACT ON THE FUNCTIONING OF THE CONVERTER OR\n               INTERPRETER.\n\n                                                                */  .\n++ ZAP   (IEFVFA)  DISTLIB (AOSB3) .\n         NAME  IEFVFA\n*\n         VER   3169 17E2,E4C2,C1D3,D3D6,C37E,4C  SUBALLOC=\n*\n         REP   3169 17E2,E8E2,D7D9,D6C3,7E23,40  SYSPROC=\n*\n         IDRDATA #YSP312\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#YSP313": {"ttr": 778, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00;\\x00;\\x00\\x00\\xe2\\xd7\\xf3K\\xf1K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 59, "newlines": 59, "modlines": 0, "user": "SP3.1.X"}, "text": "++ USERMOD (#YSP313)  .\n++ VER   (Z038)  FMID  (HBB3310)             /* MVS/SP 3.1.0 */\n                                             /* BASE */\n                                                                    /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               DO NOT ATTEPMT TO RESEQUENCE THIS MODIFICATION,\n               AS IT CONTAINS A MACRO UPDATE TO A SYSGEN MACRO.\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #YSP311  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #YSP312  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #YSP313  SGIEF409  SYSGEN MACRO UPDATE AND JCLIN\n               #YSP314  IEFVPP    NEW CONVERTER MODULE\n\n               THIS MOD SUPPLIES THE SYSGEN MACRO UPDATE FOR\n               SGIEF409.  THIS MACRO IS UPDATED TO SUPPORT\n               DYNAMIC PROCLIB.\n\n               THE JCLIN WAS TAKEN FROM A STAGE 2 THAT ALREADY\n               CONTAINED THE NECESSARY MODIFICATIONS.  THIS\n               PROVIDES THE BASE FOR INSTALLING THE ZAPS\n               AND NEW MODULE THAT COMPRISE THE DYNAMIC\n               PROCLIB SUPPORT.\n\n               DOCUMENTATION ON THE DYNAMIC PROCLIB MODS\n               ARE CONTAINED IN THE MOD CONTAINING THE\n               OBJECT DECK FOR IEFVPP, A NEW MODULE.\n\n                                                                */  .\n++ JCLIN .\n//SG16 EXEC LINKS,\n// PARM='NCAL,LIST,XREF,LET,RENT',\n// NAME=LINKLIB\n//SYSLIN DD    *\n         CHANGE IEFVHF(IEFVHFX) DYNAMIC PROCLIB\n         INCLUDE AOSB3(IEFVHF)\n         CHANGE IEFVHA(IEFVPP0) DYNAMIC PROCLIB\n         INCLUDE AOSB3(IEFVH1)\n         INCLUDE AOSB3(IEFVPP) DYNAMIC PROCLIB\n         ENTRY IEFVH1\n         NAME  IEFVH1(R)\n/*\n++ MACUPD (SGIEF409)  DISTLIB (AGENLIB)  .\n./       CHANGE NAME=SGIEF409\n         PUNCH '        CHANGE IEFVHF(IEFVHFX) DYNAMIC PROCLIB' #YSP313\n         PUNCH '        CHANGE IEFVHA(IEFVPP0) DYNAMIC PROCLIB' #YSP313\n.*       NEW CSECT FOR DYNAMIC PROCLIB                          #YSP313\n         PUNCH '         INCLUDE AOSB3(IEFVPP) DYNAMIC PROCLIB' #YSP313\n./       ENDUP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#YSP314": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x01e\\x01e\\x00\\x00\\xe2\\xd7\\xf3K\\xf1K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 357, "newlines": 357, "modlines": 0, "user": "SP3.1.X"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "#ZSP131": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00@\\x00@\\x00\\x00\\xe2\\xd7\\xf1K\\xf3K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 64, "newlines": 64, "modlines": 0, "user": "SP1.3.X"}, "text": "++ USERMOD (#ZSP131)  .\n++ VER   (Z038)  FMID  (JBB1329)             /* MVS/SP 1.3.3 */\n                 PRE   (UY05271)             /* 8703 */\n                                                                  /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #ZSP131  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #ZSP132  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #ZSP133  SGIEF441  SYSGEN MACRO UPDATE AND JCLIN\n               #ZSP134  IEFVPP    NEW CONVERTER MODULE\n\n               IEFVDA\n\n               IEFVDA IS THE INTERPRETER DD STATEMENT PROCESSOR.  THE\n               ZAP CHANGES IEFVDA TO CHECK FOR A \"DD DYNAM\" BEFORE\n               THE FIRST EXEC STATEMENT AND CAUSE IT TO BE BYPASSED.\n               IEFVPP FLAGS JOBPROC DD STATEMENTS AS IF THEY WERE DD\n               DYNAM STATEMENTS.  IF THIS IS NOT DONE, ANY JOB WITH A\n               JOBPROC DD STATEMENT WILL RECEIVE A \"MISPLACED DD\n               STATEMENT\" JCL ERROR.\n\n               THIS MODIFICATION MUST BE INSTALLED IN ADVANCE OF\n               ANY ATTEMPTED USE OF THE DYNAMIC PROCLIB FACILITY.\n               IF IT NOT INSTALLED, ANY ATTEMPT TO USE A JOBPROC\n               DD STATEMENT WILL SIMPLY RECEIVE A \"MISPLACED DD\n               STATEMENT\" JCL ERROR.\n\n               THIS MODIFICATION CAN BE INSTALLED IN ADVANCE OF\n               THE REMAINING DYNAMIC PROCLIB MODIFICATIONS WITH\n               NO IMPACT ON THE FUNCTIONING OF THE CONVERTER OR\n               INTERPRETER.\n\n                                                                  */ .\n++ ZAP   (IEFVDA)  DISTLIB (AOSB3) .\n         NAME  IEFVDA\n*\n         VER   0000 05B0                   BALR R11,0 (BASE=0002)\n*                                               R7    (BASE=1002)\n*                                               R6    (BASE=2002)\n*\n         VER   04A2 9120,C22A              TM   SWD,FEXRCV\n         VER   04A6 4710,B534              BO   DDP02\n*\n         VER   04B4 D506,3000 ****         CLC  0(DD7,R3),DDP20 SYSCHK\n         VER   04BA 4780,7C9C              BE   CLEAN156\n*\n         VER   1E30 0000,0000              START OF NEEDED PATCH AREA\n         VER   1E40 0000,0000              END OF NEEDED PATCH AREA\n*\n         REP   04A6 45E0,7E2E              BAL  R14,PATCH\n*\n         REP   1E30 4710,B534              BO   DDP02 (OVERLAID INST)\n         REP   1E34 5810,C02C              L    R1,TEXTBUFP\n         REP   1E38 9108,1003              TM   STRDINDC,DTXDYNAM\n         REP   1E3C 078E                   BZR  R14\n         REP   1E3E 47F0,7C9C              B    CLEAN156\n*\n         IDRDATA #ZSP131\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#ZSP132": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x001\\x001\\x00\\x00\\xe2\\xd7\\xf1K\\xf3K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 49, "newlines": 49, "modlines": 0, "user": "SP1.3.X"}, "text": "++ USERMOD (#ZSP132)  .\n++ VER   (Z038)  FMID  (JBB1329)             /* MVS/SP 1.3.3 */\n                 PRE   (UZ79140)             /* 8503 */\n                                                                 /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #ZSP131  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #ZSP132  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #ZSP133  SGIEF441  SYSGEN MACRO UPDATE AND JCLIN\n               #ZSP134  IEFVPP    NEW CONVERTER MODULE\n\n               IEFVFA\n\n               AN ENTRY IN THE JCL KEYWORD TABLE IS CONVERTED\n               TO THE \"SYSPROC=\" KEYWORD.  \"SUBALLOC=\" WAS CHOSEN,\n               SINCE ITS USE IS VIRTUALLY NON-EXISTANT.  TO FILL\n               IN THE EXTRA BYTE LEFT OVER WHEN \"SYSPROC=\" AND ITS\n               INTERNAL TEXT CODE (SYMBOL SYSPROCK DEFINED IN IEFVPP)\n               IS ZAPPED OVER \"SUBALLOC=\" AND ITS INTERNAL TEXT\n               CODE (SYMBOL SUBALLOK - X'4C' - DEFINED IN MACRO\n               IEFVKEYS), \"SYSPROC=\" IS MADE MUTUALLY EXCLUSIVE\n               WITH \"DCB=\" (SYMBOL DCBK - X'40' - DEFINED IN MACRO\n               IEFVKEYS).\n\n               THIS MODIFICATION IS OPTIONAL.  IF NOT INSTALLED,\n               THE SYSPROC=YES|NO PARAMETER ON THE JOBPROC STATEMENT\n               WILL NOT BE AVAILABLE AND THE DEFAULT AS SPECIFIED IN\n               THE ASSEMBLY OF IEFVPP WILL BE IN EFFECT.\n\n               THIS MODIFICATION CAN BE INSTALLED IN ADVANCE OF\n               THE REMAINING DYNAMIC PROCLIB MODIFICATIONS WITH\n               NO IMPACT ON THE FUNCTIONING OF THE CONVERTER OR\n               INTERPRETER.\n\n                                                                */  .\n++ ZAP   (IEFVFA)  DISTLIB (AOSB3) .\n         NAME  IEFVFA\n*\n         VER   2C5C 16E2,E4C2,C1D3,D3D6,C37E,4C  SUBALLOC=\n*\n         REP   2C5C 16E2,E8E2,D7D9,D6C3,7E23,40  SYSPROC=\n*\n         IDRDATA #ZSP132\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#ZSP133": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00;\\x00;\\x00\\x00\\xe2\\xd7\\xf1K\\xf3K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 59, "newlines": 59, "modlines": 0, "user": "SP1.3.X"}, "text": "++ USERMOD (#ZSP133)  .\n++ VER   (Z038)  FMID  (JBB1356)             /* MVS/SP 1.3.5/6 */\n                 PRE   (UY02503)             /* 8702 */\n                                                                    /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               DO NOT ATTEPMT TO RESEQUENCE THIS MODIFICATION,\n               AS IT CONTAINS A MACRO UPDATE TO A SYSGEN MACRO.\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #ZSP131  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #ZSP132  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #ZSP133  SGIEF441  SYSGEN MACRO UPDATE AND JCLIN\n               #ZSP134  IEFVPP    NEW CONVERTER MODULE\n\n               THIS MOD SUPPLIES THE SYSGEN MACRO UPDATE FOR\n               SGIEF409.  THIS MACRO IS UPDATED TO SUPPORT\n               DYNAMIC PROCLIB.\n\n               THE JCLIN WAS TAKEN FROM A STAGE 2 THAT ALREADY\n               CONTAINED THE NECESSARY MODIFICATIONS.  THIS\n               PROVIDES THE BASE FOR INSTALLING THE ZAPS\n               AND NEW MODULE THAT COMPRISE THE DYNAMIC\n               PROCLIB SUPPORT.\n\n               DOCUMENTATION ON THE DYNAMIC PROCLIB MODS\n               ARE CONTAINED IN THE MOD CONTAINING THE\n               OBJECT DECK FOR IEFVPP, A NEW MODULE.\n\n                                                                */  .\n++ JCLIN .\n//SG16 EXEC LINKS,\n// PARM='NCAL,LIST,XREF,LET,RENT',\n// NAME=LPALIB\n//SYSLIN DD    *\n         CHANGE IEFVHF(IEFVHFX) DYNAMIC PROCLIB\n         INCLUDE AOSB3(IEFVHF)\n         CHANGE IEFVHA(IEFVPP0) DYNAMIC PROCLIB\n         INCLUDE AOSB3(IEFVH1)\n         INCLUDE AOSB3(IEFVPP) DYNAMIC PROCLIB\n         ENTRY IEFVH1\n         NAME  IEFVH1(R)\n/*\n++ MACUPD (SGIEF441)  DISTLIB (AGENLIB)  .\n./       CHANGE NAME=SGIEF441\n         PUNCH '        CHANGE IEFVHF(IEFVHFX) DYNAMIC PROCLIB' #ZSP133\n         PUNCH '        CHANGE IEFVHA(IEFVPP0) DYNAMIC PROCLIB' #ZSP133\n.*       NEW CSECT FOR DYNAMIC PROCLIB                          #ZSP133\n         PUNCH '         INCLUDE AOSB3(IEFVPP) DYNAMIC PROCLIB' #ZSP133\n./       ENDUP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#ZSP134": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x01e\\x01e\\x00\\x00\\xe2\\xd7\\xf1K\\xf3K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 357, "newlines": 357, "modlines": 0, "user": "SP1.3.X"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "#ZSP211": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00@\\x00@\\x00\\x00\\xe2\\xd7\\xf2K\\xf1K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 64, "newlines": 64, "modlines": 0, "user": "SP2.1.X"}, "text": "++ USERMOD (#ZSP211)  .\n++ VER   (Z038)  FMID  (JBB2125)             /* MVS/SP 2.1.2 */\n                 PRE   (UY05273)             /* 8703 */\n                                                                  /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #ZSP211  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #ZSP212  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #ZSP213  SGIEF409  SYSGEN MACRO UPDATE AND JCLIN\n               #ZSP214  IEFVPP    NEW CONVERTER MODULE\n\n               IEFVDA\n\n               IEFVDA IS THE INTERPRETER DD STATEMENT PROCESSOR.  THE\n               ZAP CHANGES IEFVDA TO CHECK FOR A \"DD DYNAM\" BEFORE\n               THE FIRST EXEC STATEMENT AND CAUSE IT TO BE BYPASSED.\n               IEFVPP FLAGS JOBPROC DD STATEMENTS AS IF THEY WERE DD\n               DYNAM STATEMENTS.  IF THIS IS NOT DONE, ANY JOB WITH A\n               JOBPROC DD STATEMENT WILL RECEIVE A \"MISPLACED DD\n               STATEMENT\" JCL ERROR.\n\n               THIS MODIFICATION MUST BE INSTALLED IN ADVANCE OF\n               ANY ATTEMPTED USE OF THE DYNAMIC PROCLIB FACILITY.\n               IF IT NOT INSTALLED, ANY ATTEMPT TO USE A JOBPROC\n               DD STATEMENT WILL SIMPLY RECEIVE A \"MISPLACED DD\n               STATEMENT\" JCL ERROR.\n\n               THIS MODIFICATION CAN BE INSTALLED IN ADVANCE OF\n               THE REMAINING DYNAMIC PROCLIB MODIFICATIONS WITH\n               NO IMPACT ON THE FUNCTIONING OF THE CONVERTER OR\n               INTERPRETER.\n\n                                                                  */ .\n++ ZAP   (IEFVDA)  DISTLIB (AOSB3) .\n         NAME  IEFVDA\n*\n         VER   0000 05B0                   BALR R11,0 (BASE=0002)\n*                                               R7    (BASE=1002)\n*                                               R6    (BASE=2002)\n*\n         VER   04D2 9120,C22A              TM   SWD,FEXRCV\n         VER   04D6 4710,B564              BO   DDP02\n*\n         VER   04E4 D506,3000,B7DA         CLC  0(DD7,R3),DDP20 SYSCHK\n         VER   04EA 4780,7CD4              BE   CLEAN156\n*\n         VER   1E80 0000,0000              START OF NEEDED PATCH AREA\n         VER   1E90 0000,0000              END OF NEEDED PATCH AREA\n*\n         REP   04D6 45E0,7E7E              BAL  R14,PATCH\n*\n         REP   1E80 4710,B564              BO   DDP02 (OVERLAID INST)\n         REP   1E84 5810,C02C              L    R1,TEXTBUFP\n         REP   1E88 9108,1003              TM   STRDINDC,DTXDYNAM\n         REP   1E8C 078E                   BZR  R14\n         REP   1E8E 47F0,7CD4              B    CLEAN156\n*\n         IDRDATA #ZSP211\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#ZSP212": {"ttr": 1286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x001\\x001\\x00\\x00\\xe2\\xd7\\xf2K\\xf1K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 49, "newlines": 49, "modlines": 0, "user": "SP2.1.X"}, "text": "++ USERMOD (#ZSP212)  .\n++ VER   (Z038)  FMID  (JBB2125)             /* MVS/SP 2.1.2 */\n                 PRE   (UZ83808)             /* 8607 */\n                                                                 /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #ZSP211  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #ZSP212  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #ZSP213  SGIEF409  SYSGEN MACRO UPDATE AND JCLIN\n               #ZSP214  IEFVPP    NEW CONVERTER MODULE\n\n               IEFVFA\n\n               AN ENTRY IN THE JCL KEYWORD TABLE IS CONVERTED\n               TO THE \"SYSPROC=\" KEYWORD.  \"SUBALLOC=\" WAS CHOSEN,\n               SINCE ITS USE IS VIRTUALLY NON-EXISTANT.  TO FILL\n               IN THE EXTRA BYTE LEFT OVER WHEN \"SYSPROC=\" AND ITS\n               INTERNAL TEXT CODE (SYMBOL SYSPROCK DEFINED IN IEFVPP)\n               IS ZAPPED OVER \"SUBALLOC=\" AND ITS INTERNAL TEXT\n               CODE (SYMBOL SUBALLOK - X'4C' - DEFINED IN MACRO\n               IEFVKEYS), \"SYSPROC=\" IS MADE MUTUALLY EXCLUSIVE\n               WITH \"DCB=\" (SYMBOL DCBK - X'40' - DEFINED IN MACRO\n               IEFVKEYS).\n\n               THIS MODIFICATION IS OPTIONAL.  IF NOT INSTALLED,\n               THE SYSPROC=YES|NO PARAMETER ON THE JOBPROC STATEMENT\n               WILL NOT BE AVAILABLE AND THE DEFAULT AS SPECIFIED IN\n               THE ASSEMBLY OF IEFVPP WILL BE IN EFFECT.\n\n               THIS MODIFICATION CAN BE INSTALLED IN ADVANCE OF\n               THE REMAINING DYNAMIC PROCLIB MODIFICATIONS WITH\n               NO IMPACT ON THE FUNCTIONING OF THE CONVERTER OR\n               INTERPRETER.\n\n                                                                */  .\n++ ZAP   (IEFVFA)  DISTLIB (AOSB3) .\n         NAME  IEFVFA\n*\n         VER   2E88 16E2,E4C2,C1D3,D3D6,C37E,4C  SUBALLOC=\n*\n         REP   2E88 16E2,E8E2,D7D9,D6C3,7E23,40  SYSPROC=\n*\n         IDRDATA #ZSP212\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#ZSP213": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00;\\x00;\\x00\\x00\\xe2\\xd7\\xf2K\\xf1K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 59, "newlines": 59, "modlines": 0, "user": "SP2.1.X"}, "text": "++ USERMOD (#ZSP213)  .\n++ VER   (Z038)  FMID  (JBB2125)             /* MVS/SP 2.1.2 */\n                                             /* BASE */\n                                                                    /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               DO NOT ATTEPMT TO RESEQUENCE THIS MODIFICATION,\n               AS IT CONTAINS A MACRO UPDATE TO A SYSGEN MACRO.\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #ZSP211  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #ZSP212  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #ZSP213  SGIEF409  SYSGEN MACRO UPDATE AND JCLIN\n               #ZSP214  IEFVPP    NEW CONVERTER MODULE\n\n               THIS MOD SUPPLIES THE SYSGEN MACRO UPDATE FOR\n               SGIEF409.  THIS MACRO IS UPDATED TO SUPPORT\n               DYNAMIC PROCLIB.\n\n               THE JCLIN WAS TAKEN FROM A STAGE 2 THAT ALREADY\n               CONTAINED THE NECESSARY MODIFICATIONS.  THIS\n               PROVIDES THE BASE FOR INSTALLING THE ZAPS\n               AND NEW MODULE THAT COMPRISE THE DYNAMIC\n               PROCLIB SUPPORT.\n\n               DOCUMENTATION ON THE DYNAMIC PROCLIB MODS\n               ARE CONTAINED IN THE MOD CONTAINING THE\n               OBJECT DECK FOR IEFVPP, A NEW MODULE.\n\n                                                                */  .\n++ JCLIN .\n//SG16 EXEC LINKS,\n// PARM='NCAL,LIST,XREF,LET,RENT',\n// NAME=LINKLIB\n//SYSLIN DD    *\n         CHANGE IEFVHF(IEFVHFX) DYNAMIC PROCLIB\n         INCLUDE AOSB3(IEFVHF)\n         CHANGE IEFVHA(IEFVPP0) DYNAMIC PROCLIB\n         INCLUDE AOSB3(IEFVH1)\n         INCLUDE AOSB3(IEFVPP) DYNAMIC PROCLIB\n         ENTRY IEFVH1\n         NAME  IEFVH1(R)\n/*\n++ MACUPD (SGIEF409)  DISTLIB (AGENLIB)  .\n./       CHANGE NAME=SGIEF409\n         PUNCH '        CHANGE IEFVHF(IEFVHFX) DYNAMIC PROCLIB' #ZSP213\n         PUNCH '        CHANGE IEFVHA(IEFVPP0) DYNAMIC PROCLIB' #ZSP213\n.*       NEW CSECT FOR DYNAMIC PROCLIB                          #ZSP213\n         PUNCH '         INCLUDE AOSB3(IEFVPP) DYNAMIC PROCLIB' #ZSP213\n./       ENDUP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#ZSP214": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x01e\\x01e\\x00\\x00\\xe2\\xd7\\xf2K\\xf1K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 357, "newlines": 357, "modlines": 0, "user": "SP2.1.X"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "#ZSP221": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00@\\x00@\\x00\\x00\\xe2\\xd7\\xf2K\\xf2K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 64, "newlines": 64, "modlines": 0, "user": "SP2.2.X"}, "text": "++ USERMOD (#ZSP221)  .\n++ VER   (Z038)  FMID  (JBB2220)             /* MVS/SP 2.2.0 */\n                 PRE   (UY31363)             /* 8902 */\n                                                                  /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #ZSP221  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #ZSP222  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #ZSP223  SGIEF409  SYSGEN MACRO UPDATE AND JCLIN\n               #ZSP224  IEFVPP    NEW CONVERTER MODULE\n\n               IEFVDA\n\n               IEFVDA IS THE INTERPRETER DD STATEMENT PROCESSOR.  THE\n               ZAP CHANGES IEFVDA TO CHECK FOR A \"DD DYNAM\" BEFORE\n               THE FIRST EXEC STATEMENT AND CAUSE IT TO BE BYPASSED.\n               IEFVPP FLAGS JOBPROC DD STATEMENTS AS IF THEY WERE DD\n               DYNAM STATEMENTS.  IF THIS IS NOT DONE, ANY JOB WITH A\n               JOBPROC DD STATEMENT WILL RECEIVE A \"MISPLACED DD\n               STATEMENT\" JCL ERROR.\n\n               THIS MODIFICATION MUST BE INSTALLED IN ADVANCE OF\n               ANY ATTEMPTED USE OF THE DYNAMIC PROCLIB FACILITY.\n               IF IT NOT INSTALLED, ANY ATTEMPT TO USE A JOBPROC\n               DD STATEMENT WILL SIMPLY RECEIVE A \"MISPLACED DD\n               STATEMENT\" JCL ERROR.\n\n               THIS MODIFICATION CAN BE INSTALLED IN ADVANCE OF\n               THE REMAINING DYNAMIC PROCLIB MODIFICATIONS WITH\n               NO IMPACT ON THE FUNCTIONING OF THE CONVERTER OR\n               INTERPRETER.\n\n                                                                  */ .\n++ ZAP   (IEFVDA)  DISTLIB (AOSB3) .\n         NAME  IEFVDA\n*\n         VER   0000 05B0                   BALR R11,0 (BASE=0002)\n*                                               R7    (BASE=1002)\n*                                               R6    (BASE=2002)\n*\n         VER   062E 9120,C22A              TM   SWD,FEXRCV\n         VER   0632 4710,B6D2              BO   DDP02\n*\n         VER   0640 D506,3000,B994         CLC  0(DD7,R3),DDP20 SYSCHK\n         VER   0646 4780,60C4              BE   CLEAN156\n*\n         VER   2608 0000,0000              START OF NEEDED PATCH AREA\n         VER   2616 0000,0000              END OF NEEDED PATCH AREA\n*\n         REP   0632 45E0,6606              BAL  R14,PATCH\n*\n         REP   2608 4710,B6D2              BO   DDP02 (OVERLAID INST)\n         REP   260C 5810,C02C              L    R1,TEXTBUFP\n         REP   2610 9108,1003              TM   STRDINDC,DTXDYNAM\n         REP   2614 078E                   BZR  R14\n         REP   2616 47F0,60C4              B    CLEAN156\n*\n         IDRDATA #ZSP221\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#ZSP222": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x001\\x001\\x00\\x00\\xe2\\xd7\\xf2K\\xf2K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 49, "newlines": 49, "modlines": 0, "user": "SP2.2.X"}, "text": "++ USERMOD (#ZSP222)  .\n++ VER   (Z038)  FMID  (JBB2220)             /* MVS/SP 2.2.0 */\n                 PRE (UY39889)               /* 8906 */\n                                                                 /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #ZSP221  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #ZSP222  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #ZSP223  SGIEF409  SYSGEN MACRO UPDATE AND JCLIN\n               #ZSP224  IEFVPP    NEW CONVERTER MODULE\n\n               IEFVFA\n\n               AN ENTRY IN THE JCL KEYWORD TABLE IS CONVERTED\n               TO THE \"SYSPROC=\" KEYWORD.  \"SUBALLOC=\" WAS CHOSEN,\n               SINCE ITS USE IS VIRTUALLY NON-EXISTANT.  TO FILL\n               IN THE EXTRA BYTE LEFT OVER WHEN \"SYSPROC=\" AND ITS\n               INTERNAL TEXT CODE (SYMBOL SYSPROCK DEFINED IN IEFVPP)\n               IS ZAPPED OVER \"SUBALLOC=\" AND ITS INTERNAL TEXT\n               CODE (SYMBOL SUBALLOK - X'4C' - DEFINED IN MACRO\n               IEFVKEYS), \"SYSPROC=\" IS MADE MUTUALLY EXCLUSIVE\n               WITH \"DCB=\" (SYMBOL DCBK - X'40' - DEFINED IN MACRO\n               IEFVKEYS).\n\n               THIS MODIFICATION IS OPTIONAL.  IF NOT INSTALLED,\n               THE SYSPROC=YES|NO PARAMETER ON THE JOBPROC STATEMENT\n               WILL NOT BE AVAILABLE AND THE DEFAULT AS SPECIFIED IN\n               THE ASSEMBLY OF IEFVPP WILL BE IN EFFECT.\n\n               THIS MODIFICATION CAN BE INSTALLED IN ADVANCE OF\n               THE REMAINING DYNAMIC PROCLIB MODIFICATIONS WITH\n               NO IMPACT ON THE FUNCTIONING OF THE CONVERTER OR\n               INTERPRETER.\n\n                                                                */  .\n++ ZAP   (IEFVFA)  DISTLIB (AOSB3) .\n         NAME  IEFVFA\n*\n         VER   2EF6 17E2,E4C2,C1D3,D3D6,C37E,4C  SUBALLOC=\n*\n         REP   2EF6 17E2,E8E2,D7D9,D6C3,7E23,40  SYSPROC=\n*\n         IDRDATA #ZSP222\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "#ZSP223": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00;\\x00;\\x00\\x00\\xe2\\xd7\\xf2K\\xf2K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 59, "newlines": 59, "modlines": 0, "user": "SP2.2.X"}, "text": "++ USERMOD (#ZSP223)  .\n++ VER   (Z038)  FMID  (JBB2220)             /* MVS/SP 2.2.0 */\n                                             /* BASE */\n                                                                    /*\n               DYNAMIC PROCLIB MODIFICATIONS\n               VERSION 3, RELEASE 2, MODIFICATION 4\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               DO NOT ATTEPMT TO RESEQUENCE THIS MODIFICATION,\n               AS IT CONTAINS A MACRO UPDATE TO A SYSGEN MACRO.\n\n               ***** WARNING ***** WARNING ***** WARNING *****\n\n               THIS LOCAL MODIFICATION, ALONG WITH ITS\n               COMPANION CO-REQUISITES, TOTALLY INTEGRATES THE\n               NECESSARY SYSTEM MODIFICATIONS FOR DYNAMIC PROCLIB\n               SUPPORT.\n\n               #ZSP221  IEFVDA    ZAP FOR INTERPRETER JOBPROC BYPASS\n               #ZSP222  IEFVFA    ZAP FOR SYSPROC JCL PARAMETER\n               #ZSP223  SGIEF409  SYSGEN MACRO UPDATE AND JCLIN\n               #ZSP224  IEFVPP    NEW CONVERTER MODULE\n\n               THIS MOD SUPPLIES THE SYSGEN MACRO UPDATE FOR\n               SGIEF409.  THIS MACRO IS UPDATED TO SUPPORT\n               DYNAMIC PROCLIB.\n\n               THE JCLIN WAS TAKEN FROM A STAGE 2 THAT ALREADY\n               CONTAINED THE NECESSARY MODIFICATIONS.  THIS\n               PROVIDES THE BASE FOR INSTALLING THE ZAPS\n               AND NEW MODULE THAT COMPRISE THE DYNAMIC\n               PROCLIB SUPPORT.\n\n               DOCUMENTATION ON THE DYNAMIC PROCLIB MODS\n               ARE CONTAINED IN THE MOD CONTAINING THE\n               OBJECT DECK FOR IEFVPP, A NEW MODULE.\n\n                                                                */  .\n++ JCLIN .\n//SG16 EXEC LINKS,\n// PARM='NCAL,LIST,XREF,LET,RENT',\n// NAME=LINKLIB\n//SYSLIN DD    *\n         CHANGE IEFVHF(IEFVHFX) DYNAMIC PROCLIB\n         INCLUDE AOSB3(IEFVHF)\n         CHANGE IEFVHA(IEFVPP0) DYNAMIC PROCLIB\n         INCLUDE AOSB3(IEFVH1)\n         INCLUDE AOSB3(IEFVPP) DYNAMIC PROCLIB\n         ENTRY IEFVH1\n         NAME  IEFVH1(R)\n/*\n++ MACUPD (SGIEF409)  DISTLIB (AGENLIB)  .\n./       CHANGE NAME=SGIEF409\n         PUNCH '        CHANGE IEFVHF(IEFVHFX) DYNAMIC PROCLIB' #ZSP223\n         PUNCH '        CHANGE IEFVHA(IEFVPP0) DYNAMIC PROCLIB' #ZSP223\n.*       NEW CSECT FOR DYNAMIC PROCLIB                          #ZSP223\n         PUNCH '         INCLUDE AOSB3(IEFVPP) DYNAMIC PROCLIB' #ZSP223\n./       ENDUP\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "#ZSP224": {"ttr": 1545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x01e\\x01e\\x00\\x00\\xe2\\xd7\\xf2K\\xf2K\\xe7@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 357, "newlines": 357, "modlines": 0, "user": "SP2.2.X"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "IEFCVRWA": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x01v\\x01v\\x00\\x00\\xc9\\xc2\\xd4\\xc1\\xc3\\xd9\\xd6@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 374, "newlines": 374, "modlines": 0, "user": "IBMACRO"}, "text": "*%GOTO CNVPROLG;\n         MACRO\n         IEFCVRWA\n*\n*%CNVPROLG:;\n*/*\n*   MACMEAN  IEFCVRWA MEANS CONVERTER WORK AREA\n*   MACCOMP  Y-2  SC1B9/PZD11\n*   MACSTAT  Y-2  74038/VS02718                                 YM02718\n*\n***********************************************************************\n*                                                                     *\n*   IEFCVRWA MAPS DATA FIELDS AND SWITCHES UNIQUE TO THE CONVERTER.   *\n*   IT MUST BE INVOKED IMMEDIATELY FOLLOWING IEFCOMWA, TO INSURE      *\n*   CORRECT ADDRESSABILITY. REGISTER 12 IS THE BASE REGISTER ACROSS   *\n*   THE ENTIRE WORK AREA MAPPED BY BOTH IEFCOMWA AND IEFCVRWA.        *\n*   THEREFORE DISPLACEMENTS FOR THE CONVERTER WORK AREA MUST BE A     *\n*   CONTINUATION OF THOSE FOR THE COMMON WORK AREA.                   *\n*                                                                     *\n*   THIS MACRO IS NEW FOR VS2/RELEASE 2.                        Y02668*\n*                                                                     *\n***********************************************************************\n**/\n*%GOTO CNVWAPLS;\n*/*\n*\nCVRWA    DS    0F                  START OF CONVERTER WORK AREA. Y02668\n*\n*  POINTERS, WORK AND DATA AREAS.\n*\nPDCBP    DS    F                        PROCLIB DCB OR NOTED TTR\nIWAINTS3 DS    F                   PTR TO EXIT LIST ACCT ENTRY     AABA\nIWAINTS4 DS    F                   PTR TO BLOCKED PROCLIB BUFFER   AABA\nCWABPROC EQU   IWAINTS4\nIWAINTS5 DS    F                   PTR TO JOB MNGMT RECORD         AABA\nCWATXTEX DS    F                   PTR TO TEXT EXIT RTNE ADDR.\nRSTMT    DS    F                        PTR TO RDR STMT\n         DS    CL1                      VERB #\n*                                          NULL=0\n*                                          JOB=1\n*                                          EXEC=2\n*                                          DD=4\n*                                          PROC=8                  AAAA\nSSE      EQU   128                         DD STMT SEQUENCE ERROR\nCRE      EQU   64   BIT 1         MISPLACED SYSCHK DD STMT         AACA\n         DS    CL1                      NAME LENGTH\n         DS    CL1                      RELATIVE LIST PTR\n         DS    CL1                 RESERVED.\nPSTMT    DS    2F                       SAME AS RDR PARM LIST\nVERB     EQU   4                        OFFSET FOR VERB BYTE\nNAMEL    EQU   5                        OFFSET FOR NAME LENGTH\nLISTPTR  EQU   6                        OFFSET FOR REL LIST PTR\n*                                  PROCLIB MERGE CONTROL DATA\nPDNM     DS    CL8                      PROC DD NAME            YM02703\nPSNM     DS    CL8                      PROC STEP NAME          YM02703\nRDNM     DS    CL8                      RDR DD NAME             YM02703\nRSNM     DS    CL8                      RDR STEP NAME           YM02703\nPPSN     DS    CL8                      PREVIOUS PROC STEP NAME YM02703\nIWAPARM  DS    F   ADDRESS OF THE PARAMETER LIST USED FOR          O106\n*                     PROCESSING IN-LINE PROCEDURES                O106\n*                     SET AND USED BY IEFVINA AND IEFVEA           O106\nDREFB    DS    CL176        SYMBOLIC PARAMETER TABLE             Y02668\nIWAJOBS5 DS    F                   CHKP/REST - PTR TO SYSCHK DD    AAAA\nIWAWKBF  DS    F   ADDRESS OF THE WORK AREA GOTTEN BY IEFVHCB      O106\nIWASTAPL DS    F         POINTER TO R/I STAE PARAMETER LIST      A39047\nCWAJMRPT DS    F                   POINTER TO JMR.\nIWANELJC DS    F         NEL JCL POINTER FIELD.                    I272\n*                        STORED BY IEFVH1. USED BY IEFVFA FOR      I272\n*                            INPUT TO POST SCAN ROUTINE            I272\nTBEGP    DS    F                        TEXT BEGIN POINTER\nTKEYP    DS    F                        TEXT KEY POINTER\nTNUMP    DS    F                        TEXT NUMBER POINTER\nTLENP    DS    F                        TEXT LENGTH POINTER\nTENDP    DS    F                        TEXT END POINTER\nAODSPCSA DS    F                   SAVE RETURN REGISTER IN VFA.  Y02668\nAOFDTMP1 DS    F                   ADDR OF SPECIAL FIND ROUTINE. Y02668\nAOKSCHSA DS    8F                  AOKSRCHR REG SAVE AREA.       Y02668\nAOGACSA  EQU   AOKSCHSA            GET AND CLEAR RTNE SAVE AREA. Y02668\n*                                                                Y02668\nAOKSR1SA DS    2F                  AOKSR1 REG SAVE AREA.         Y02668\nAOHEBSA  DS    F                   VHEB RETURN REG SAVE AREA.    Y02668\nAODFLTSA DS    7F                  AODFAULT REG SAVE AREA.       Y02668\nAOBSKSA  DS    F                   AOBASEKY REG SAVE AREA.       Y02668\nCWASAVPT DS    F                   PTR TO SAVE AREA OF CVR'S     Y02668*\n                                   CALLER - ALSO USED BY         Y02668*\n                                   SUBSYSTEM AT TEXT EXIT.       Y02668\nAOFDPCSV DS    CL8                 PROCEDURE NAME.               Y02668\nAOSCHKYS DS    CL8                 LIST OF KEYS FOR AOKSRCHR.    Y02668\nIWABPAM  DS    CL3                 BPAM ACCESS METHOD ADDRESS M3739O106\n*                       SET AND USED BY IEFVEA FOR PROCESSING      O106\n*                       IN-LINE PROCEDURES                         O106\n*\nAOKSRPRM DS    CL3                 AOKSR1 PARM LIST.             Y02668\nAOKSRNBR EQU   AOKSRPRM            NUMBER OF PARAMS THIS KEYWORD.Y02668\nAOKSRSCT EQU   AOKSRPRM+1          LENGTH OF PARAM OR SUBLIST CT.\nAOKSRBY3 EQU   AOKSRPRM+2          LENGTH OF PARAM IF AOKSRCT IS Y02668*\n                                   A SUBLIST COUNT.              Y02668\nIWANLRC  DS    H                   NUMBER RECORDS (BLOCKED PROC)   AABA\nCURLE    DS    H                        CURRENT LEVEL\nLASLE    DS    H                        LAST LEVEL\nAOSTRLTH DS    H                   LENGTH OF TEXT STRING.        Y02668\nIWAWRNMS DS    CL1                 WARNING MESSAGE CODE.         Y02668\nCWACHIDL DS    CL1                 CHECKID LENGTH.               Y02668\n*\n*  SWITCH BYTES.\n*\nIWAJMSGL DS    CL1                 MSGLEVEL VALUE.               Y02668\nAOMSGLV0 EQU   X'00'               BIT SETTING FOR MSGLEVEL=1.   Y02668\nAOMSGLV1 EQU   X'10'               BIT SETTING FOR MSGLEVEL=1.   Y02668\nAOMSGLV2 EQU   X'20'               BIT SETTING FOR MSGLEVEL=2.   Y02668\n*\nAOSW2    DS    CL1                 SWITCH BYTE.\nAOPROCNM EQU   X'08'               PROCNAME POSITIONAL ON EXEC.  Y02668\nAOSW3    DS    CL1                                               Y02668\nAOBTCHSW EQU   X'01'               RETURN TO VHA FLAG.           Y02668\nAOFDPCL  DS    CL1                 LENGTH OF PROCEDURE NAME.     Y02668\nIWAEXTS  DS    CL1            SPECIAL CALLER EXITS                I171\nIWASFIND EQU   2                        BIT-6 SPECIAL PROCLIB FINDI171\nIWAFINDP DS    CL3                      ENTRY POINT FOR 'FIND' ISSI171\n*                                       FOR SPECIAL PROCLIB ACCESSI171\nOSW2     DS    CL1                 OPTION SWITCHES FROM PARM FIELD\nCMAUTH   EQU   3                        BITS-6,7 COMMAND AUTHORIZATION\nSWA      DS    CL1                 SWITCH A\nJTOP     EQU   128                      BIT-0  JOB TO PROCESS\nJHS      EQU   64                       BIT-1 JOB HAS A STEP\nEOFR     EQU   2                        BIT-6 EOF RECEIVED\nDLM      EQU   1                        BIT-7 DLM KWD SPECIFIED YM03459\nSWB      DS    CL1                 SWITCH B\nCXP      EQU   128                      BIT-0 CONTINUATION EXP BY SCAN\nCXPN     EQU   64                       BIT-1 CONT EXP & NOT RECEIVED\nCXPC     EQU   32                       BIT-2 CONT EXP & CANCELLED\nFRCV     EQU   2                        BIT-6 1ST STMT RECEIVED\nSWC      DS    CL1                 SWITCH C\nIOERR    EQU   64                       BIT-1 I/O ERROR ON INPUT\nNRCV     EQU   32                       BIT-2 RDR NULL RECEIVED\nPEXP     EQU   16                       BIT-3 PROCEDURE EXEC STMT EXPEC\nSWD      DS    CL1                 SWITCH D\nFEXRCV   EQU   32                       BIT-2 1ST EXEC RCVD THIS JOB\nSYMPRC   EQU   1                        BIT-7 FIRST ACCESS OF PROC AAAA\nSWV      DS    CL1           SCAN SWITCHES     288               A24895\n*                  THIS BYTE OF SWITCHES MOVED FROM SWA TO GIVE  A24895\n*                            IT LIFE ACROSS CALLS OF IEFVFB.     A24895\nOVKEYSWZ EQU   SWV           IF ON, THIS KEY OVERRIDDEN  187     A24895\nOVKEYSW  EQU   128                                               A24895\nPROCERRZ EQU   SWV           IF ON, ERROR THIS STATEMENT  187    A24895\nPROCERR  EQU   64                                                A24895\nVERBCSWZ EQU   SWV           187                                 A24895\nVERBCSW  EQU   32                                                A24895\nFBFLUSHZ EQU   SWV           SYMBOLIC PARM FLUSH INDICATOR       A24895\nFBFLUSH  EQU   16                                                A24895\nAMPSWZ   EQU   SWV           IF ON,TEXT DEFINES A SYMBOLIC PARM  A24895\nAMPSW    EQU   8                                                 A24895\nFBLITRLZ EQU   SWV    IF ON, TEXT IS LITERAL(ENCLOSED IN QUOTES) A24895\nFBLITRL  EQU   4                                                 A24895\nFPRNSWZ  EQU   SWV           IF ON, INDICATES LEFT PAREN         A24895\nFPRNSW   EQU   2                                                 A24895\nLPBYSWZ  EQU   SWV           IF ON, BYPASS LEFT PAREN CHECK      A24895\nLPBYSW   EQU   1                                                 A24895\nCLEARVZ  EQU   SWV           187                                 A24895\nCLEARV   EQU   OVKEYSW+PROCERR+VERBCSW+FBFLUSH+AMPSW+FBLITRL+FPRNSW 895\n*                                  PROC STATEMENT PARAM LIST\nCRSW1    DS    CL1                CHECKPOINT RESTART SWITCHES      AACA\nCPFLG    EQU   128  BIT 0         GET/FREE SYSCHK DD STMT CORE     AACA\nCRRES1   EQU   16   BIT 3         RESERVED                         AACA\n         DS    CL1                 RESERVED                      Y02668\nSYMTTR   DS    F                   TTR OF FIRST SYMBUF\nIWANELEN DS    CL1      LENGTH OF NEL,SET BY IEFVH1,USED BY\n*                           IEFVH2,IEFVHN,ETC.\n*\nSWY      DS    CL1                 SCAN SWITCHES\nSWZ      DS    CL1                 CONTROL AND SCAN JOINT SWITCHES\nCMT      EQU   128                      COMMENT SWITCH\nDDOV     EQU   64                       DD OVERRIDE SWITCH\nENDS     EQU   32                       END SCAN SWITCH\nCOLST    EQU   16                       COLUMN 72 SWITCH\nJOBSW    EQU   8                        JOB SWITCH\nEXECSW   EQU   4                        EXEC SWITCH\nDDSW     EQU   2                        DD SWITCH\nSNPSW    EQU   1                        STATEMENT SYSOUT SWITCH.\nRCHAR1   DS    CL1                 RESERVED                     YM00373\nCWALINK  DS    F                   PTR TO TEXT EXIT LINK AREA   YM00373\nCWALINKL DS    F                   LTH OF LINK AREA             YM00373\nCWAPSENM DS    CL8                 POST SCAN EXIT NAME          YM00373\nCDAUTHWA DS    F                   COMD AUTH CONVERSION WK AREA.YM02718\nRBLOCK   DS    20F                 BLOCK OF UNNAMED RES'D WDS.  YM02718\nRFULLA   DS    F                   RESERVED                     YM02718\nRFULLB   DS    F                   RESERVED                     YM02718\nRFULLC   DS    F                   RESERVED                     YM02718\nRFULLD   DS    F                   RESERVED                     YM02718\nRFULLE   DS    F                   RESERVED                     YM02718\n*          ********************************************************\n*          *                                                      *\n*          *             END OF CONVERTER WORK AREA.              *\n*          *                                                      *\n*          ********************************************************\n*\nCVRWAEND DS    0C                                               YM00373\nCVRWALTH EQU   CVRWAEND-CVRWA      LTH OF CVR WORK AREA.         Y02668\nWALTH    EQU   CVRWAEND-COMWA      LTH OF CVR+COMMON WORK AREAS. Y02668\n         MEND\n**/\n*%CNVWAPLS:;\n*DCL\n* 1 CVRWA BASED(ADDR(COMWA)+LENGTH(COMWA)) BDY(WORD),        /*Y02668*/\n*\n*/*  POINTERS, WORK AND DATA AREAS                             Y02668*/\n*\n*   2 PDCBP    PTR(31),      /* PROCLIB DCB OR NOTED TTR       Y02668*/\n*   2 IWAINTS3 PTR(31),      /* PTR TO EXIT LIST ACCT ENTRY    Y02668*/\n*   2 IWAINTS4,              /*                                Y02668*/\n*     3 CWABPROC PTR(31),    /* PTR TO BLOCKED PROCLIB BUFFER  Y02668*/\n*   2 IWAINTS5 PTR(31),      /* PTR TO JOB MNGMT RECORD        Y02668*/\n*   2 CWATXTEX PTR(31),      /* PTR TO TEXT EXIT RTNE ADDRESS  Y02668*/\n*   2 RSTMT,                 /*                                Y02668*/\n*     3 RSTMTPTR PTR(31),    /* PTR TO RDR STMT                Y02668*/\n*     3 VERB,                /* VERB #                         Y02668*/\n*       4 SSE      BIT(1),   /* DD STMT SEQUENCE ERROR         Y02668*/\n*       4 CRE      BIT(1),   /* MISPLACED SYSCHECK DD STMT     Y02668*/\n*       4 *        BIT(6),   /* NULL=0 JOB=1 EXEC=2 DD=4 PROC=8Y02668*/\n*     3 NAMEL    FIXED(8),   /* LENGTH OF NAME                 Y02668*/\n*     3 LISTPTR  FIXED(8),   /* RELITIVE LIST POINTER          Y02668*/\n*     3 *        CHAR(1),    /* UNUSED                         Y02668*/\n*   2 PSTMT,                 /*                                Y02668*/\n*     3 STMTPTRP PTR(31),    /* PTR TO RDR STMT                Y02668*/\n*     3 VERBP,               /* VERB #                         Y02668*/\n*       4 SSEP     BIT(1),   /* DD STMT SEQUENCE ERROR         Y02668*/\n*       4 CREP     BIT(1),   /* MISPLACED SYSCHECK DD STMT     Y02668*/\n*       4 *        BIT(6),   /* NULL=0 JOB=1 EXEC=2 DD=4 PROC=8Y02668*/\n*     3 NAMELP   FIXED(8),   /* LENGTH OF NAME                 Y02668*/\n*     3 LISTPTRP FIXED(8),   /* RELITIVE LIST POINTER          Y02668*/\n*     3 *        CHAR(1),    /* UNUSED                         Y02668*/\n*\n*/*  PROCLIB MERGE CONTROL DATA                                Y02668*/\n*\n*   2 PDNM     CHAR(8),      /* PROC DD NAME                   Y02668*/\n*   2 PSNM     CHAR(8),      /* PROC STEP NAME                 Y02668*/\n*   2 RDNM     CHAR(8),      /* RDR DD NAME                    Y02668*/\n*   2 RSNM     CHAR(8),      /* RDR STEP NAME                  Y02668*/\n*   2 PPSN     CHAR(8),      /* PREVIOUS PROC STEP NAME        Y02668*/\n*   2 IWAPARM  PTR(31),      /* ADDRESS OF PARAMETER LIST USED Y02668*/\n*                            /* FOR PROCESSING IN-LINE PROCS   Y02668*/\n*   2 DREFB    CHAR(176) BDY(WORD), /* SYSMOLIC PARM TABLE     Y02668*/\n*   2 IWAJOBS5 PTR(31),      /* CHKP/REST - PTR TO SYSCHK DD   Y02668*/\n*   2 IWAWKBF  PTR(31),      /* PTR TO VHCB WORK AREA          Y02668*/\n*   2 IWASTAPL PTR(31),      /* PTR TO STAE PARAMETER LIST     Y02668*/\n*   2 CWAJMRPT PTR(31),      /* PTR TO JMR                     Y02668*/\n*   2 IWANELJC PTR(31),      /* PTR TO NEL JCL FIELD. PST/SCAN Y02668*/\n*   2 TBEGP    PTR(31),      /* TEXT BEGIN POINTER             Y02668*/\n*   2 TKEYP    PTR(31),      /* TEXT KEY POINTER               Y02668*/\n*   2 TNUMP    PTR(31),      /* TEXT NUMBER POINTER            Y02668*/\n*   2 TLENP    PTR(31),      /* TEXT LENGTH POINTER            Y02668*/\n*   2 TENDP    PTR(31),      /* TEXT END POINTER               Y02668*/\n*   2 AODSPCSA PTR(31),      /* SAVE RETURN REGISTER IN VFA    Y02668*/\n*   2 AOFDTMP1 PTR(31),      /* ADDR OF SPECIAL FIND ROUTINE   Y02668*/\n*   2 AOKSCHSA,              /* AOKSRCHR REG SAVE AREA.        Y02668*/\n*     3 AOGACSA  CHAR(32),   /* GET AND CLEAR RTNE SAVE AREA   Y02668*/\n*   2 AOKSR1SA CHAR(8),      /* AOKSR1 REG SAVE AREA           Y02668*/\n*   2 AOHEBSA  PTR(31),      /* VHEB RETURN REG SAVE AREA      Y02668*/\n*   2 AODFLTSA CHAR(28),     /* AODFAULT REG SAVE AREA         Y02668*/\n*   2 AOBSKSA  PTR(31),      /* AOBASEKY REG SAVE AREA         Y02668*/\n*   2 CWASAVPT PTR(31),      /* PTR TO SAVE AREA OF CVR'S      Y02668*/\n*                            /* CALLER - ALSO USED BY SUBSYSTEMY02668*/\n*                            /* AT TEXT EXIT                   Y02668*/\n*   2 AOFDPCSV CHAR(8),      /* PROCEDURE NAME                 Y02668*/\n*   2 AOSCHKYS CHAR(8),      /* LIST OF KEYS FOR AOKSRCHR      Y02668*/\n*   2 IWABPAM  CHAR(3),      /* BPAM ACCESS METHOD ADDRESS SET Y02668*/\n*                            /* AND USED BY IEFVEA FOR         Y02668*/\n*                            /* PROCESSING IN-LINE PROCEDURES  Y02668*/\n*\n*   2 AOKSRPRM,              /* AOKSR1 PARM LIST               Y02668*/\n*     3 AOKSRNBR CHAR(1),    /* NUMBER OF PARMS IN KEYWORD     Y02668*/\n*     3 AOKSRSCT CHAR(1),    /* LENGTH OF PARM OR SUBLIST CNT  Y02668*/\n*     3 AOKSRBY3 CHAR(1),    /* LENGTH OF PARM IF AOKSRCT IS A Y02668*/\n*                            /* SUBLIST COUNT                  Y02668*/\n*   2 IWANLRC  FIXED(15),    /* NUMBER OF RECORDS (BLKED PROC) Y02668*/\n*   2 CURLE    FIXED(15),    /* CURRENT LEVEL                  Y02668*/\n*   2 LASLE    FIXED(15),    /* LAST LEVEL                     Y02668*/\n*   2 AOSTRLTH FIXED(15),    /* LENGTH OF TEXT STRING          Y02668*/\n*   2 IWAWRNMS CHAR(1),      /* WARNING MESSAGE CODE           Y02668*/\n*   2 CWACHIDL CHAR(1),      /* CHECKID LENGTH                 Y02668*/\n*\n*/*  SWITCH BYTES                                              Y02668*/\n*\n*   2 IWAJMSGL CHAR(1),      /* MSGLEVEL VALUE                 Y02668*/\n*                            /* '00'X FOR MSGLEVEL=1           Y02668*/\n*                            /* '10'X FOR MSGLEVEL=1           Y02668*/\n*                            /* '20'X FOR MSGLEVEL=2           Y02668*/\n*   2 AOSW2,                 /* SWITCH BYTE                    Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*     3 AOPROCNM BIT(1),     /* PROCNAME POSITIONAL ON EXEC    Y02668*/\n*     3 *        BIT(3),     /* UNUSED                         Y02668*/\n*   2 AOSW3,                 /* SWITCH BYTE                    Y02668*/\n*     3 *        BIT(7),     /* UNUSED                         Y02668*/\n*     3 AOBTCHSW BIT(1),     /* RETURN TO VHA FLAG             Y02668*/\n*   2 AOFDPCL  CHAR(1),      /* LENGTH OF PROCEEDURE NAME      Y02668*/\n*   2 IWAEXTS,               /* SPECIAL CALLER EXITS           Y02668*/\n*     3 *        BIT(6),     /* UNUSED                         Y02668*/\n*     3 IWASFIND BIT(1),     /* BIT-6 SPECIAL PROCLIB FIND     Y02668*/\n*     3 *        BIT(1),     /* UNUSED                         Y02668*/\n*   2 IWAFINDP CHAR(3),      /* ENTRY POINT FOR 'FIND'FOR      Y02668*/\n*                            /* SPECIAL PROCLIB ACCESS         Y02668*/\n*   2 OSW2     CHAR(1),      /* OPTION SWITCHES FROM PARM FIELDY02668*/\n*                            /* BITS-6,7 COMMAND AUTHORIZATION Y02668*/\n*   2 SWA,                   /* SWITCH A                       Y02668*/\n*     3 JTOP     BIT(1),     /* JOB TO PROCESS                 Y02668*/\n*     3 JHS      BIT(1),     /* JOB HAS A STEP                 Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*     3 EOFR     BIT(1),     /* EOF RECIEVED                   Y02668*/\n*     3 DLM      BIT(1),     /* DLM KEYWORD SPECIFIED         YM03459*/\n*   2 SWB,                   /* SWITCH B                       Y02668*/\n*     3 CXP      BIT(1),     /* CONTINUATION EXPECTED BY SCAN  Y02668*/\n*     3 CXPN     BIT(1),     /* CONT EXP AND NOT RECEIVED      Y02668*/\n*     3 CXPC     BIT(1),     /* CONT EXP AND CANCELLED         Y02668*/\n*     3 *        BIT(3),     /* UNUSED                         Y02668*/\n*     3 FRCV     BIT(1),     /* FIRST STATEMENT RECEIVED       Y02668*/\n*     3 *        BIT(1),     /* UNUSED                         Y02668*/\n*   2 SWC,                   /* SWITCH C                       Y02668*/\n*     3 *        BIT(1),     /* UNUSED                         Y02668*/\n*     3 IOERR    BIT(1),     /* I/O ERROR ON INPUT             Y02668*/\n*     3 NRCV     BIT(1),     /* RDR NULL RECEIVED              Y02668*/\n*     3 PEXP     BIT(1),     /* PROC EXEC STMT EXPECTED        Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*   2 SWD,                   /* SWITCH D                       Y02668*/\n*     3 *        BIT(2),     /* UNUSED                         Y02668*/\n*     3 FEXRCV   BIT(1),     /* FIRST EXEC RECEIVED            Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*     3 SYMPRC   BIT(1),     /* FIRST ACCESS OF PROC           Y02668*/\n*   2 SWV,                   /* SCAN SWITCHES                  Y02668*/\n*     3 OVKEYSW  BIT(1),     /* THIS KEY OVERRIDDEN            Y02668*/\n*     3 PROCERR  BIT(1),     /* ERROR THIS STATEMENT           Y02668*/\n*     3 VERBCSW  BIT(1),     /*                                Y02668*/\n*     3 FBFLUSH  BIT(1),     /* SYMBOLIC PARM FLUSH INDICATOR  Y02668*/\n*     3 AMPSW    BIT(1),     /* TEXT DEFINES A SYMBOLIC PARM   Y02668*/\n*     3 FBLITRL  BIT(1),     /* TEXT IS LITERAL                Y02668*/\n*     3 FPRNSW   BIT(1),     /* INDICATES LEFT PAREN           Y02668*/\n*     3 LPBYSW   BIT(1),     /* BYPASS LEFT PAREN CHECK        Y02668*/\n*   2 CRSW1,                 /* CHECKPOINT RESTART SWITCHES    Y02668*/\n*     3 CPFLG    BIT(1),     /* GET/FREE SYSCHK DD STMT CORE   Y02668*/\n*     3 *        BIT(2),     /* UNUSED                         Y02668*/\n*     3 CRRES1   BIT(1),     /* RESERVED                       Y02668*/\n*     3 *        BIT(4),     /* UNUSED                         Y02668*/\n*   2 *        CHAR(1),      /* RESERVED                       Y02668*/\n*   2 SYMTTR   PTR(31),      /* TTR OF FIRST SYMBUF            Y02668*/\n*   2 IWANELEN FIXED(8),     /* LENGTH OF NEL                  Y02668*/\n*   2 SWY      CHAR(1),      /* SCAN SWITCHES                  Y02668*/\n*   2 SWZ,                   /* CONTROL AND SCAN SWITCHES      Y02668*/\n*     3 CMT      BIT(1),     /* COMMENT SWITCH                 Y02668*/\n*     3 DDOV     BIT(1),     /* DD OVERIDE SWITCH              Y02668*/\n*     3 ENDS     BIT(1),     /* END SCAN SWITCH                Y02668*/\n*     3 COLST    BIT(1),     /* COLUMN 72 SWITCH               Y02668*/\n*     3 JOBSW    BIT(1),     /* JOB SWITCH                     Y02668*/\n*     3 EXECSW   BIT(1),     /* EXEC SWITCH                    Y02668*/\n*     3 DDSW     BIT(1),     /* DD SWITCH                      Y02668*/\n*     3 SNPSW    BIT(1),     /* STATEMENT SYSOUT SWITCH        Y02668*/\n*   2 RCHAR1   CHAR(1),      /* RESERVED                      YM00373*/\n*   2 CWALINK  FIXED(31),    /* PTR TO TEXT EXIT LINK AREA    YM00373*/\n*   2 CWALINKL FIXED(31),    /* LTH OF LINK AREA              YM00373*/\n*   2 CWAPSENM CHAR(8),      /* POST SCAN EXIT NAME           YM02718*/\n*   2 CDAUTHWA FIXED(32),    /* COMD AUTH CONVERSION WRK AREA YM02718*/\n*   2 RBLOCK   CHAR(80) BDY(WORD), /* BLOCK OF RESERVED WORDS YM02718*/\n*   2 RFULLA   FIXED(32),    /* RESERVED                      YM02718*/\n*   2 RFULLB   FIXED(32),    /* RESERVED                      YM02718*/\n*   2 RFULLC   FIXED(32),    /* RESERVED                      YM02718*/\n*   2 RFULLD   FIXED(32),    /* RESERVED                      YM02718*/\n*   2 RFULLE   FIXED(32);    /* RESERVED                      YM02718*/\n*\n*/*************************************************************Y02668*/\n*/*                                                            Y02668*/\n*/*  END OF CONVERTER WORK AREA -                              Y02668*/\n*/*  TO GET LENGTH OF CONVERTER WORK AREA USE THE LENGTH       Y02668*/\n*/*  FUNCTION OF THE NAME  CVRWA                               Y02668*/\n*/*                                                            Y02668*/\n*/*************************************************************Y02668*/\n* LINE TO PREVENT SPF FROM RESEQUENCING THIS MEMBER\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IEFVPP": {"ttr": 1800, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x0c2\\x0c2\\x00\\x00\\xe2\\xd6\\xe4\\xd9\\xc3\\xc5@@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 3122, "newlines": 3122, "modlines": 0, "user": "SOURCE"}, "text": "VPP      TITLE 'IEFVPP - AMDAHL MVS DYNAMIC PROCLIB SUPPORT'\n***********************************************************************\n*                                                                     *\n*        IEFVPP                                                       *\n*        ******                                                       *\n*                                                                     *\n*        VERSION 3, RELEASE 2, MODIFICATION 4                         *\n*        ******* ** ******* ** ************ *                         *\n*                                                                     *\n* THIS CSECT CONTAINS THE DYNAMIC PROCEDURE LIBRARY SUPPORT ROUTINES. *\n*                                                                     *\n* THIS PROGRAM IS A REWRITE OF THE USER PROCLIB SUPPORT PROGRAM       *\n* UPROCRDR, WHICH HAD BEEN IN USE AT THE MUTUAL LIFE OF CANADA ON     *\n* OS/MVT SINCE MARCH OF 1972.                                         *\n*                                                                     *\n* THIS CODE HAS BEEN SUBSTANTIALLY MODIFIED BY THE AMDAHL CORPORATE   *\n* COMPUTER CENTER TO SIMPLIFY THE MODIFICATIONS NECESSARY TO          *\n* IBM CODE IN ORDER TO IMPLEMENT AND INSTALL THIS CODE.               *\n* ADDITIONAL FEATURES ADDED ARE CLEANUP RECOVERY, MULTIPLE            *\n* CONVERTER SUPPORT, MVS/SE RELEASE 2 COMPATIBILITY, MVS/SP           *\n* VERSION 1, RELEASE 3.2 SUPPORT, AND MVS/SP 2.2.0 COMPATIBILITY.     *\n*                                                                     *\n*                                                                     *\n***********************************************************************\n         TITLE '**** DYNAMIC PROCLIB LINKAGE REQUIREMENTS ****'\n***********************************************************************\n*                                                                     *\n* ENTRIES:                                                            *\n*        IEFVPP0 - (FROM IEFVH1)  - INITIALIZATION PROCESSING         *\n*        IEFVPP1 - (FROM IEFVFA)  - //JOBPROC VALIDATE & ALLOCATE AND *\n*                                   JOBPROC CONCATENATE & OPEN        *\n*        IEFVHF  - (FROM MANY)    - BRANCHES TO IEFVPP3               *\n*        IEFVPP3 - (FROM IEFVHF)  - CLEANUP AT JOB PROCESSING END     *\n*                                                                     *\n* ATTRIBUTES:                                                         *\n*        REENTRANT, REFRESHABLE.                                      *\n*        RMODE 24, AMODE 24 (CONVERTER REQUIREMENT).                  *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE.                                                        *\n*                                                                     *\n* EXITS:                                                              *\n*        IEFVPP0 BRANCHES TO IEFVHA AND DOES NOT RETURN TO CALLER.    *\n*        IEFVPP1 RETURNS TO CALLER AFTER CALLING CONVERTER POST       *\n*                SCAN EXIT (IF ANY) AND IEFUJV INTERNAL TEXT TEXT     *\n*                (IF OPTION ASSEMBLED).                               *\n*        IEFVPP3 BRANCHES TO IEFVHFX AND DOES NOT RETURN TO CALLER.   *\n*                                                                     *\n*        SEE COMMENTS AT EACH INDIVIDUAL ENTRY POINT FOR MORE         *\n*        INFORMATION.                                                 *\n*                                                                     *\n***********************************************************************\n         TITLE '**** DYNAMIC PROCLIB INSTALLATION NOTES ****'\n***********************************************************************\n*                                                                     *\n*     1) ALL ENTRIES (EXCEPT IEFVPP0) TEST THE \"PPW0INIT\"             *\n*           SWITCH IN THE DYNAMIC PROCLIB WORK AREA BEFORE            *\n*           PERFORMING ANY PROCESSING.                                *\n*                                                                     *\n*           THE USER PROCLIB SUPPORT CODE CAN THEREFORE BE DISABLED   *\n*           BY SIMPLY ALTERING IEFVPP0 NOT TO TURN ON \"PPW0INIT\".     *\n*           IEFVPP0 MUST ALWAYS BE ENTERED AS IT BUILDS THE DYNAMIC   *\n*           PROCLIB WORK AREA AND ANCHORS IT IN THE CONVERTER         *\n*           WORK AREA (CWA) IN A RESERVED FIELD.                      *\n*                                                                     *\n*     2) ALL ROUTINES EXPECT R12 TO PERMANENTLY ADDRESS THE CWA.      *\n*                                                                     *\n*     3) A RESERVED FULL WORD MUST BE AVAILABLE IN THE CWA TO         *\n*           ANCHOR THE ADDRESS OF THE DYNAMIC PROCLIB WORK AREA.      *\n*           THE NAME OF THIS FIELD IS DEFINED BY THE &ANCHOR SET      *\n*           SYMBOL IN THIS PROGRAM.  THE LOCATION OF THIS FIELD       *\n*           IS NOT NEEDED TO BE KNOWN OUTSIDE OF THIS MODULE.         *\n*                                                                     *\n*     4) ANY ERROR NOTED DURING CLEANUP OPERATIONS WILL CAUSE THE     *\n*           CONVERTER TO ABORT.                                       *\n*                                                                     *\n*     5) SEE THE SECTION OF COMMENTS ON CONVERTER MODIFICATION FOR    *\n*           PARTICULARS ON THE CHANGES TO THE CONVERTER/INTERPRETER.  *\n*                                                                     *\n*     6) TO PROPERLY ASSEMBLE THIS MODULE, THE CONVERTER/INTERPRETER  *\n*           WORK AREA MACRO, IEFCVRWA, MUST BE AVAILABLE.  IBM        *\n*           DISTRIBUTES THIS MACRO IN APVTMACS.                       *\n*                                                                     *\n*     7) THE MESSAGE NUMBER PREFIX IS SET BY THE SET SYMBOL           *\n*           &MSGPFX.  ITS DEFINITION FOLLOWS THE LOCAL MACRO          *\n*           DEFINITIONS.                                              *\n*                                                                     *\n*     8) THE INTERNAL TEXT ENTRY INTO IEFUJV IS ENABLED OR DISABLED   *\n*           BY THE USE OF THE &INTEXTX SET SYMBOL IN THIS PROGRAM.    *\n*                                                                     *\n*     9) THE DEFAULT OF SYSPROC=YES CAN BE CHANGED BY ALTERING THE    *\n*           VALUE OF THE &SYSPROC SET SYMBOL IN THIS PROGRAM.         *\n*                                                                     *\n*    10) THE DEFAULT DDNAME OF \"JOBPROC\" CAN BE ALTERED BY CHANGING   *\n*           THE VALUE OF THE &DDNAME SET SYMBOL IN THIS PROGRAM.      *\n*           NOTE, HOWEVER, THAT WHATEVER DDNAME IS CHOSEN BECOMES     *\n*           RESERVED AND CANNOT BE USED ANYWHERE ELSE IN JCL.         *\n*                                                                     *\n*    11) DISABLING OF THIS CODE CAN BE DONE BY ZAPPING THE            *\n*           INSTRUCTION AT \"PP0CANCL\".  THE TRACING CODE CAN BE       *\n*           ENABLED BY ZAPPING THE INSTRUCTION AT \"PP0SETTR\" OR       *\n*           BY SPECIFYING SYSPARM(TRACE) DURING ASSEMBLY OF THIS      *\n*           MODULE.                                                   *\n*                                                                     *\n*    12) THIS MODULE MUST BE ASSEMBLED WITH THE \"SYS1.MACLIB\"         *\n*           AND \"SYS1.AMODGEN\" FROM AN MVS/SP VERSION 1 (OR LATER)    *\n*           SYSTEM.  ASSEMBLER H, VERSION 2, IS REQUIRED.             *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n* COPYRIGHT:                                                          *\n*        AMDAHL CORPORATION, 1978, 1981, 1982, 1988.                  *\n*                                                                     *\n*        THIS COPYRIGHT IS NOT INTENDED TO LIMIT THE USE OF THIS      *\n*        CODE BY THE RECEIVING INSTALLATION, BUT TO PREVENT ITS       *\n*        REDISTRIBUTION FOR PROFIT.                                   *\n*                                                                     *\n*        THERE IS AT LEAST ONE KNOWN DYNAMIC PROCLIB PRODUCT THAT     *\n*        HAS TAKEN THIS CODE AND HAS MADE IT A SUBSTANTIAL PART OF    *\n*        THEIR PRODUCT.  NAUGHTY, NAUGHTY.                            *\n*                                                                     *\n***********************************************************************\n         TITLE '**** DYNAMIC PROCLIB SUMMARY OF AMENDMENTS ****'\n***********************************************************************\n*                                                                     *\n*        VERSION 3, RELEASE 2, MODIFICATION 4                         *\n*                                                                     *\n*        THE INTERNAL TEXT KEY FOR THE SYSPROC= KEYWORD PARAMETER     *\n*        HAS BEEN CHANGED FROM X'01' TO THE SAME VALUE AS THE HOLD=   *\n*        KEYWORD PARAMETER (X'23').  THIS PREVENTS AN 0C1 ABEND IN    *\n*        THE INTERPRETER IF THE SYSPROC= PARAMETER IS CODED ON ANY    *\n*        DD STATEMENT OTHER THAN THE FIRST JOBPROC DD STATEMENT.      *\n*        EQUALLY, THIS MEANS THAT HOLD=YES OR HOLD=NO COULD BE USED   *\n*        ON THE JOBPROC DD STATEMENT TO SPECIFY INCLUSION OR          *\n*        EXCLUSION OF THE SYSTEM PROCLIBS.                            *\n*                                                                     *\n*        NOTE THAT IN ORDER FOR THIS CHANGE TO BE EFFECTIVE AND FOR   *\n*        SYSPROC= TO CONTINUE WORKING, THE SUPERZAP TO THE CON-       *\n*        VERTER KEYWORD TABLE IN IEFVFA MUST BE UPDATED AT THE SAME   *\n*        TIME AS THIS LEVEL OF IEFVPP IS INSTALLED.                   *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        VERSION 3, RELEASE 2, MODIFICATION 3                         *\n*                                                                     *\n*        THE INTERNAL ROUTINE THAT DUPLICATED THE PROCESSING OF       *\n*        IEFVGM HAS BEEN ELIMINATED, AS IEFVGM PROVIDES AN INTERFACE  *\n*        THAT ALLOWS IT TO BE USED WITHOUT HAVING TO ALTER ANY        *\n*        CONVERTER MESSAGE TABLES.  THIS PROVIDES AN ADDITIONAL       *\n*        LEVEL OF CONVERTER MAINTENANCE INDEPENDENCE.                 *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        VERSION 3, RELEASE 2, MODIFICATION 2                         *\n*                                                                     *\n*        A SET SYMBOL (&SWA220) HAS BEEN ADDED TO RESOLVE THE PROBLEM *\n*        OF RE-ASSEMBLY WITH A NON MVS/SP 2.2.0 SYSTEM.               *\n*                                                                     *\n*        A SET OF MODIFICATIONS FOR MVS/SP 3.1.0 (MVS/ESA(TM)) IS     *\n*        SUPPLIED.  THE ONLY CHANGES ARE THE SUPERZAPS AND THE        *\n*        SYSGEN MACRO UPDATE.                                         *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        VERSION 3, RELEASE 2, MODIFICATION 1                         *\n*                                                                     *\n*        SET SYMBOLS HAVE BEEN ADDED TO ALLOW ADDITIONAL INSTALLATION *\n*        CUSTOMIZATION WITHOUT ALTERING THE SOURCE.                   *\n*                                                                     *\n*        THE &SYSPROC SETB SYMBOL ESTABLISHES THE DEFAULT FOR THE     *\n*        SYSPROC=YES|NO JCL PARAMETER.  THE SUPPLIED DEFAULT IS 1,    *\n*        WHICH MEANS SYSPROC=YES.                                     *\n*                                                                     *\n*        THE &DDNAME SETC SYMBOL SPECIFIES THE DDNAME TO BE RESERVED  *\n*        TO IDENTIFY THE DYNAMIC PROCLIB DD STATEMENT.  THE SUPPLIED  *\n*        DEFAULT IS \"JOBPROC\".  ALL MESSAGES ALSO REFLECT THIS        *\n*        SPECIFIED DDNAME.                                            *\n*                                                                     *\n*        WHEN A JOBPROC DD STATEMENT WAS SPECIFIED AFTER THE FIRST    *\n*        EXEC STATEMENT AND NO JOBPROC STATEMENT HAD BEEN SPECIFIED   *\n*        BEFORE THE FIRST EXEC STATEMENT, NO JCL ERROR WAS DETECTED   *\n*        AND THE JOBPROC STATEMENT WAS ESSENTIALLY IGNORED.  THIS     *\n*        HAS BEEN CORRECTED AND A \"MISPLACED JOBPROC STATEMENT\"       *\n*        MESSAGE IS ISSUED AND A JCL ERROR IS INDICATED.              *\n*                                                                     *\n*        THE ERROR RECOVERY CODE THAT CHECKS FOR AN S213-04 ABEND     *\n*        DURING OPEN HAS BEEN DELETED.  IT IS NO LONGER NEEDED, AS    *\n*        THE \"RETURN DSORG\" FUNCTION OF DYNAMIC ALLOCATION (ADDED     *\n*        TO THIS CODE IN 3.2.0) INSURES THAT THE DSCB DOES IN FACT    *\n*        EXIST.  IF THE USER CAN DELETE THE DATA SET BETWEEN THE      *\n*        DYNAMIC ALLOCATION AND THE OPEN, MORE POWER TO HIM (OR HER)  *\n*        AND THE JOB WILL FAIL.                                       *\n*                                                                     *\n*        DDNAMES FOR ALLOCATED PROCLIBS ARE NOW SPECIFICALLY          *\n*        ASSIGNED TO PREVENT GIGANTIC TYPE 30 SMF RECORDS.  SINCE     *\n*        MULTIPLE CONVERTERS CAN BE RUNNING SIMULTANEOUSLY, THE       *\n*        DDNAMES ARE COMPOSED TO THE LETTER \"P\", THE SIX HEXA-        *\n*        DECIMAL DIGIT TCB ADDRESS, AND A SUFFIX OF 0-9, A-F.         *\n*        ALSO, SINCE THE DDNAMES ARE \"FIXED\" FOR A GIVEN CONVERTER    *\n*        SUBTASK, IT IS POSSIBLE TO CLEAN THEM UP (I.E., DEALLOCATE   *\n*        THEM) ON A SUBSEQUENT CONVERTER CALL SHOULD A PREVIOUS       *\n*        CONVERTER INVOCATION FAIL TO DEALLOCATE THEM.                *\n*                                                                     *\n*        IN SCANNING THE TIOT FOR THE SYSTEM PROCLIBS ASSOCIATED      *\n*        WITH THE CURRENT CONVERTER INVOCATION, SWAREQ IS NOW USED    *\n*        TO LOCATE THE JFCB WHEN SWA IS LOCATED ABOVE THE 16 MEG      *\n*        LINE.                                                        *\n*                                                                     *\n*        RATHER THAN ISSUING AND CANCELLING AND ESTAE AT EACH AND     *\n*        EVERY ENTRY TO THE DYNAMIC PROCLIB CODE (ESSENTAILLY ON      *\n*        EVERY SINGLE JCL STATEMENT), A SINGLE ESTAE IS ISSUED IN     *\n*        IEFVPP0.  IEFVPP3, DURING CLEANUP, WILL CANCEL THIS ESTAE.   *\n*        BECAUSE THIS ESTAE IS \"LOWER\" THAT THE CONVERTER'S ESTAE,    *\n*        IT WILL RECEIVE CONTROL ON ANY CONVERTER ABEND.  IF THE      *\n*        ABEND OCCURS IN THE DYNAMIC PROCLIB CODE, THE SAME RECOVERY  *\n*        THAT WAS PREVIOUSLY TAKEN IS PERFORMED.  IF THE ABEND        *\n*        OCCURS ELSEWHERE IN THE CONVERTER, NO RECOVERY IS ATTEMPTED  *\n*        HERE AND THE CONVERTER'S ESTAE EXIT WILL BE PERCOLATED TO.   *\n*        ALSO, IF AN ERROR OCCURS IN THE DYNAMIC PROCLIB INITIALI-    *\n*        ZATION ROUTINE (IEFVPP0), NO JCL ERROR WILL BE INDICATED.    *\n*        USE OF A JOBPROC DD STATEMENT WILL, OF COURSE, RESULT IN     *\n*        A JCL ERROR, BUT NON JOBPROC JOBS COULD STILL BE RUN,        *\n*        ALLOWING FOR POSSIBLE REPAIR OF THE PROBLEM.                 *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        VERSION 3, RELEASE 2, MODIFICATION 0                         *\n*                                                                     *\n*        SUPPORT FOR SYSTEMS BEFORE MVS/SP VERSION 1 HAS BEEN         *\n*        DROPPED.  THE CODE MAY IN FACT STILL WORK, BUT THERE ARE     *\n*        NO GUARANTEES.                                               *\n*                                                                     *\n*        THE SPECIAL DDS FOR EACH CONVERTER (IEF0PDSI, IEF1PDSI,      *\n*        IEF2PDSI, ETC.) ARE NO LONGER NEEDED.  THE \"SYSPROC\"         *\n*        DATA SET NAMES ARE DETERMINED FROM THE CURRENTLY OPEN        *\n*        CONVERTER PROCLIB DCB FOR WHATEVER \"PROCNN\" (IN JES2 TERMS)  *\n*        DD IS BEING USED.                                            *\n*                                                                     *\n*        ALL DDNAMES USED TO ALLOCATED DYNAMIC PROCLIBS ARE SYSTEM    *\n*        GENERATED NAMES (SYS*****).                                  *\n*                                                                     *\n*        THE USE OF THE RESERVED BIT IN THE STRINDCS FIELD OF THE     *\n*        INTERNAL TEXT HEADER HAS BEEN ELIMINATED.                    *\n*                                                                     *\n*        THE SUPERZAP MODIFICATION TO IEFVHE IS NOT LONGER NEEDED     *\n*        AND CAN BE REMOVED.  A NEW SUPERZAP TO INTERPRETER MODULE    *\n*        IEFVDA IS REQUIRED.                                          *\n*                                                                     *\n*        THE SUPERZAP TO IEFVHF IS NO LONGER REQUIRED AND MUST BE     *\n*        REMOVED IF IT IS CURRENTLY INSTALLED.  AN ADDITIONAL CHANGE  *\n*        STATEMENT MUST BE ADDED TO THE CONVERTER SYSGEN JCL (AND     *\n*        SMP JCLIN).                                                  *\n*                                                                     *\n*        THE SUPERZAP TO IEFVFA TO CALL THIS MODULE HAS BEEN ELIMIN-  *\n*        ATED AND MUST BE REMOVED IF PREVIOUSLY INSTALLED.  THE       *\n*        SUPERZAP TO DEFINE THE INTERNAL TEXT FOR SYSPROC IS NOW      *\n*        OPTIONAL AND IS NEEDED ONLY IF THE SYSPROC KEYWORD IS TO     *\n*        BE SUPPORTED.                                                *\n*                                                                     *\n***********************************************************************\n         TITLE '**** DYNAMIC PROCLIB USER EXTERNALS ****'\n***********************************************************************\n*                                                                     *\n*        THE USER WISHING TO SUPPLY A DYNAMIC PROCLIB NEED ONLY       *\n*        CODE ONE OR MORE DD STATEMENTS (FOLLOWING THE NORMAL         *\n*        RULES OF CONCATENATION) WITH THE DD NAME OF \"JOBPROC\".       *\n*        THE JOBPROC DD MUST APPEAR BEFORE THE FIRST EXEC STATE-      *\n*        MENT OF A JOB.  THE ONLY JCL KEYWORD PARAMETERS SUPPORTED    *\n*        ARE DSN, DISP, UNIT, VOL=SER, VOL=REF, AND SYSPROC.  USE     *\n*        OF OTHER JCL PARAMETERS MAY CAUSE ERRORS OR MAY BE IGNORED.  *\n*        DSN IS MANDATORY.  DISP CAN ONLY BE \"SHR\".  UNIT AND VOL     *\n*        ARE NECESSARY ONLY IF THE DATA SET IS NOT CATALOGUED (VIA    *\n*        MASTER AND ALIASES - JOBCAT IS NOT USED).  SYSPROC INDICATES *\n*        THE CONCATENATION (SYSPROC=YES) OR NON-CONCATENATION         *\n*        (SYSPROC=NO) OF THE SYSTEM PROCLIBS WITH THE USER SUPPLIED   *\n*        PROCLIBS.  THE DEFAULT IS SYSPROC=YES.                       *\n*                                                                     *\n*        THE SYSPROC KEYWORD IS AN OPTIONAL FEATURE OF THIS PROGRAM   *\n*        AND IS ENABLED VIA A MODIFICATION TO IEFVFA.  IF THE         *\n*        SYSPROC MODIFICATION HAS NOT BEEN MADE, SYSPROC=YES WILL     *\n*        ALWAYS BE ASSUMED.                                           *\n*                                                                     *\n***********************************************************************\n         TITLE '**** CONVERTER/INTERPRETER MODIFICATIONS ****'\n***********************************************************************\n*                                                                     *\n*        CONVERTER/INTERPRETER MODIFICATIONS                          *\n*        ********************* *************                          *\n*                                                                     *\n*        THERE ARE THREE AREAS OF CHANGES TO THE CONVERTER/           *\n*        INTERPRETER NECESSARY TO PROPERLY IMPLEMENT DYNAMIC PROCLIB  *\n*        SUPPORT IN MVS.  THE THREE AREAS ARE: SYSGEN MACROS (WHICH   *\n*        INCLUDES LINK EDIT CHANGES TO THE CONVERTER); A NEW MODULE   *\n*        (IEFVPP); AND SUPERZAPS TO CONVERTER/INTERPRETER MODULES.    *\n*        IN ADDITION, IF THESE MODIFICATIONS ARE INSTALLED ONTO       *\n*        AN EXISTING SYSTEM, A UCLIN AND JCLIN WILL BE NECESSARY      *\n*        TO SMP AND A SPECIAL, ONE TIME, MANUAL RE-LINKEDIT OF THE    *\n*        CONVERTER (IEFVH1) WILL BE REQUIRED TO PROPERLY ALTER THE    *\n*        APPROPRIATE EXTERNAL REFERENCES.                             *\n*                                                                     *\n*        THE CHANGES TO SYSGEN ARE ALL CONTAINED IN MACRO SGIEF441    *\n*        FOR MVS/370 AND MACRO SGIEF409 FOR MVS/XA.                   *\n*        THESE MACROS CONTAIN THE LINK EDIT CONTROL STATEMENTS FOR    *\n*        THE CONVERTER.  THE CHANGES ARE TWO CHANGE STATEMENTS TO     *\n*        ALTER THE EXTERNAL REFERENCE TO IEFVHA IN IEFVH1 TO REFER    *\n*        IEFVPP0 IN IEFVPP AND TO CHANGES THE CSECT NAME OF IEFVHF    *\n*        TO IEFVHFX, AND AN INCLUDE OF THE NEW MODULE IEFVPP.         *\n*                                                                     *\n*        THE CHANGE STATEMENT:                                        *\n*        PUNCH ' CHANGE IEFVHA(IEFVPP0) '                             *\n*        IS INSERTED IMMEDIATELY BEFORE THE PUNCH INCLUDE OF IEFVH1.  *\n*                                                                     *\n*        THE CHANGE STATEMENT:                                        *\n*        PUNCH ' CHANGE IEFVHF(IEFVHFX) '                             *\n*        IS INSERTED IMMEDIATELY BEFORE THE PUNCH INCLUDE OF IEFVHF.  *\n*                                                                     *\n*        THE INCLUDE STATEMENT:                                       *\n*        PUNCH ' INCLUDE AOSB3(IEFVPP) '                              *\n*        IS INSERTED IMMEDIATELY BEFORE THE PUNCH ENTRY IEFVH1.       *\n*                                                                     *\n*        THE NEW MODULE, IEFVPP IS LINK EDITTED AS PART OF IEFVH1,    *\n*        THE JCL CONVERTER.  THE LINK EDIT CHANGE STATEMENTS CAUSE    *\n*        IT TO BE INVOKED TO INITIALIZE THE EXPANDED CONVERTER        *\n*        WORK AREA AND TO RECEIVE CONTROL INSTEAD OF IEFVHF.  IT      *\n*        ALSO RECEIVES CONTROL BY ALTERING THE CONVERTER POST SCAN    *\n*        EXIT ADDRESS LIST.                                           *\n*                                                                     *\n*        THE SUPERZAP IS TO MODULE IEFVDA IN LOAD MODULE IEFNB903.    *\n*        THE ZAP TO IEFVDA (IN THE INTERPRETER) MUST BE INSTALLED     *\n*        TO PREVENT A JOBPROC STATEMENT FROM CAUSING A MISPLACED      *\n*        DD STATEMENT JCL ERROR IN THE INTERPRETER.                   *\n*                                                                     *\n*        THE ZAP FOR IEFVDA IS TO HAVE THE INTERPRETER BYPASS         *\n*        INTERNAL TEXT DD STATEMENTS THAT PRECEED THE FIRST EXEC      *\n*        STATEMENT THAT ARE DD DYNAM.  THIS IS SET BY IEFVPP ON       *\n*        ALL JOBPROC DD STATEMENTS.  THE INTERPRETER ALREADY HAS      *\n*        LOGIC TO NOT BUILD SWA BLOCKS FOR DD DYNAM STATEMENTS.       *\n*        THIS CHANGE FROM THE PREVIOUS BYPASS LOGIC IS TO ACCOM-      *\n*        ODATE MVS/SP 2.2.0, WHICH SETS A LAST STATEMENT FLAG IN      *\n*        THE LAST DD STATEMENT OF A STEP (INCLUDING STEP \"0\") AND     *\n*        WILL ABEND (0B0) IN THE INTERPRETER IF THE JOBPROC STATE-    *\n*        MENT IS THE LAST STATEMENT BEFORE THE EXEC STATEMENT AND     *\n*        IS PRECEEDED BY A JOBLIB OR JOBCAT STATEMENT.                *\n*                                                                     *\n*        THE ZAP TO IEFVFA IS TO PROVIDE THE SYSPROC PARAMETER BY     *\n*        ALTERING A SUITABLY UNUSED JCL KEYWORD (HOW'S \"SUBALLOC\"     *\n*        GRAB YOU?) TO BECOME THE \"SYSPROC\" KEYWORD.                  *\n*                                                                     *\n*        SINCE THE ACTUAL TEXT OF THESE ZAPS WILL DEPEND ON THE       *\n*        CURRENT MAINTENANCE LEVELS OF THE VARIOUS MODULES, THEY ARE  *\n*        NOT ENUMERATED HERE.  THE PTF TO APPLY THESE ZAPS SHOULD     *\n*        BE EXAMINED, AS WELL AS THE SOURCE MICROFICHE OR OPTIONAL    *\n*        MATERIALS.                                                   *\n*                                                                     *\n***********************************************************************\n         TITLE '**** STATEMENT OF SUPPORT ****'\n***********************************************************************\n*                                                                     *\n*        STATEMENT OF SUPPORT                                         *\n*        ********* ** *******                                         *\n*                                                                     *\n*        THIS PROGRAM IS RUN IN THE CORPORATE COMPUTER CENTER         *\n*        OF THE AMDAHL CORPORATION AND IT'S USERS ARE TOTALLY         *\n*        DEPENDANT UPON IT.  HOWEVER, THAT DOES NOT IMPLY THAT        *\n*        THE AMDAHL CORPORATION FORMALLY SUPPORTS THIS CODE           *\n*        AND MAINTAINS RESPONSIBILITY FOR IT.  AS WITH ALL            *\n*        MODIFICATIONS, THE USING INSTALLATION MUST DECIDE            *\n*        WHETER OR NOT TO INSTALL IT BASED ON THEIR ABILITY TO        *\n*        MAINTAIN IT IN THE FUTURE.  NOTE THAT SUPPORT IS PRI-        *\n*        MARILY A MATTER OF TIMING (I.E., WE MAY NOT BE RUNNING A     *\n*        NEW PTF OR RELEASE LEVEL AS SONN AS OTHER INSTALLATIONS).    *\n*                                                                     *\n*        SPECIAL NOTE: THE AMDAHL CORPORATE COMPUTER CENTER IS NOW    *\n*        RUNNING ONLY MVS/XA.  WHILE IT HAS BEEN ATTEMPTED TO MAIN-   *\n*        TAIN COMPATIBILITY WITH MVS/370, THIS HAS NOT BEEN TESTED    *\n*        AND SUCH INSTALLATIONS ARE ADVISED TO TEST THIS CODE VERY    *\n*        CAREFULLY.                                                   *\n*                                                                     *\n*        ADDITIONAL INFORMATION CONCERNING THESE MODIFICATIONS        *\n*        CAN BE OBTAINED BY CONTACTING:                               *\n*                                                                     *\n*        KEITH E. MOE                                                 *\n*        AMDAHL CORPORATION                                           *\n*        CORPORATE COMPUTER CENTER                                    *\n*        MAIL STOP 201                                                *\n*        POST OFFICE BOX 3470                                         *\n*        1250 EAST ARQUES AVENUE                                      *\n*        SUNNYVALE, CALIFORNIA  94088-3470                            *\n*        (408) 746-6386                                               *\n*                                                                     *\n***********************************************************************\n         TITLE '**** DYNAMIC MACRO INSTRUCTIONS ****'\n         MACRO\n         IEFVPPMS &MNO,&TEXT\n.*\n         LCLA  &LTH\n         LCLC  &STR\n         GBLC  &MSGPFX\n.*\n         AIF   (T'&TEXT EQ 'O').VGMER01\n         AIF   (T'&MNO EQ 'O').VGMER02\n.*\n&LTH     SETA  K'&TEXT-2           GET LENGTH OF MESSAGE TEXT\n&STR     SETC  '&TEXT'(2,&LTH)     EXTRACT MESSAGE TEXT\n&LTH     SETA  &LTH+8              CALCULATE TOTAL MESSAGE LENGTH\n.*\nPPMS&MNO DC    AL1(0)              RESERVED\n         DC    AL1(&LTH)           LENGTH OF MESSAGE TEXT\n         DC    CL8'&MSGPFX&MNO'    EXTERNAL MESSAGE IDENTIFICATION\n         DC    C'&STR'\n         SPACE 2\n         MEXIT ,\n.*\n.VGMER01 MNOTE 12,'*** MESSAGE TEXT REQUIRED BUT NOT SPECIFIED ***'\n         MEXIT ,\n.*\n.VGMER02 MNOTE 12,'*** MESSAGE NUMBER REQUIRED BUT NOT SPECIFIED ***'\n         MEND\n*\n         MACRO\n&NAME    PPTRACE &WHERE\n&NAME    BAL   R14,PPTRACER        GO TO DEBUGGING TRACER\n         DC    CL4'&WHERE'         INDICATE WHERE WE ARE\n         MEND\n*\n         TITLE '**** SYMBOLIC PARAMETER DEFINITIONS ****'\n***********************************************************************\n*                                                                     *\n*        THE SYMBOLIC PARAMETERS THAT CAN BE USED TO ALTER THE        *\n*        CHARACTERISTICS OF THIS MODULE ARE DEFINED HERE.             *\n*                                                                     *\n***********************************************************************\n*\n         GBLA  &MAXPROC            MAXIMUM NUMBER OF PROCLIBS\n*\n         GBLB  &INTEXTX            IEFUJV INTERNAL TEST EXIT\n*\n         GBLB  &SWA220             SWA ABOVE THE LINE SUPPORT FOR XA\n*\n         GBLB  &SYSPROC            SYSPROC= YES|NO DEFAULT\n*\n         GBLC  &ANCHOR             CONVERTER WORK AREA ARCHOR WORD\n*\n         GBLC  &DDNAME             JOBPROC DD NAME\n*\n         GBLC  &MSGPFX             MESSAGE ID PREFIX\n*\n***********************************************************************\n*                                                                     *\n*        MAXIMUM NUMBER OF PROCLIBS                                   *\n*                                                                     *\n*        THIS PARAMETER REPRESENTS THE MAXIMUM NUMBER OF PROCLIBS     *\n*        (USER PLUS SYSTEM) THAT CAN BE ALLOCATED FOR USE IN DYNAMIC  *\n*        PROCLIB PROCESSING.                                          *\n*                                                                     *\n***********************************************************************\n*\n&MAXPROC SETA  16                  A FULL 16 PROCLIBS\n*\n***********************************************************************\n*                                                                     *\n*        INTERNAL TEXT EXIT                                           *\n*                                                                     *\n*        THIS PARAMETER SHOULD BE SET TO EITHER 1 (ONE) OR 0 (ZERO)   *\n*        TO GENERATE OR NOT GENERATE SUPPORT FOR THE INTERNAL         *\n*        TEXT EXIT TO IEFUJV.                                         *\n*                                                                     *\n***********************************************************************\n*\n&INTEXTX SETB  0                   WE DON'T WANT THE EXIT\n*\n***********************************************************************\n*                                                                     *\n*        SWA ABOVE THE LINE                                           *\n*                                                                     *\n*        THIS PARAMETER SHOULD BE SET TO EITHER 1 (ONE) OR 0 (ZERO)   *\n*        TO GENERATE OR NOT GENERATE SUPPORT FOR SWA ABOVE THE LINE   *\n*        IN MVS/SP 2.2.0 OR LATER.  WHEN SET TO 1 (ONE), THE MVS/SP   *\n*        2.2.0 MACLIBS (WITH PTF UY16002) ARE REQUIRED.  THE GENER-   *\n*        ATED CODE IS FULLY COMPATIBLE WITH ALL RELEASES.  WHEN SET   *\n*        TO 0 (ZERO), THE GENERATED CODE WILL STILL EXECUTE PROPERLY  *\n*        ON AN MVS/SP 2.2.0 SYSTEM, BUT THE CONVERTER'S SWA (I.E.,    *\n*        JES2'S) MUST BE BELOW THE LINE.                              *\n*                                                                     *\n***********************************************************************\n*\n&SWA220  SETB  1                   WE WANT THE SWA ABOVE THE LINE CODE\n*\n***********************************************************************\n*                                                                     *\n*        SYSPROC = YES|NO DEFAULT                                     *\n*                                                                     *\n*        THIS PARAMETER SHOULD BE SET TO 1 (ONE) TO MAKE SYSPROC=YES  *\n*        THE DEFAULT OR 0 (ZERO) TO MAKE SYSPROC=NO THE DEFAULT.      *\n*                                                                     *\n***********************************************************************\n*\n&SYSPROC SETB  1                   SET SYSPROC=YES\n*\n***********************************************************************\n*                                                                     *\n*        DYNAMIC PROCLIB WORK AREA ANCHOR                             *\n*                                                                     *\n*        THIS PARAMETER SHOULD BE SET TO THE NAME OF THE FIELD        *\n*        IN THE COMMON OR CONVERTER WORK AREA THAT WILL BE USED       *\n*        TO CONTAIN THE ADDRESS OF THE DYNAMIC PROCLIB WORK AREA.     *\n*        THIS FIELD MUST BE A FULL WORD THAT IS UNUSED BY THE         *\n*        CONVERTER.  THE SUPERZAPS TO THE CONVERTER NOT LONGER        *\n*        NEED TO REFER TO THIS FIELD.                                 *\n*                                                                     *\n***********************************************************************\n*\n&ANCHOR  SETC  'RFULLE'            AT THE END OF THE CONVERTER WORKAREA\n*\n***********************************************************************\n*                                                                     *\n*        JOBPROC DD NAME                                              *\n*                                                                     *\n*        THIS PARAMETER SHOULD BE SET TO THE DDNAME THAT IS DESIRED   *\n*        TO BE USED FOR THE DYNAMIC PROCLIB DD STATEMENT.  THIS DD    *\n*        NAME CANNOT BE USED FOR ANY OTHER PURPOSE IN JCL AND WILL    *\n*        CAUSE A JCL ERROR (MISPLACED DD STATEMENT) IF IT IS.         *\n*                                                                     *\n***********************************************************************\n*\n&DDNAME  SETC  'JOBPROC'           SET DDNAME=JOBPROC\n*\n***********************************************************************\n*                                                                     *\n*        MESSAGE PREFIX                                               *\n*                                                                     *\n*        THIS PARAMETER SHOULD BE SET TO THE THREE (3) CHARACTER      *\n*        WHICH IS DESIRED ON ALL MESSAGES ISSUED BY THE MODULE.       *\n*        THE MESSAGE NUMBERS WILL BE XXX800 THROUGH XXX899, WHERE     *\n*        XXX IS THE SELECTED PREFIX.                                  *\n*                                                                     *\n***********************************************************************\n*\n&MSGPFX  SETC  'CCC'               CORPORATE COMPUTER CENTER\n*                                  -         -        -\n         TITLE '**** CONTROL BLOCK MAPPINGS ****'\nIEFVPP   CSECT ,                   CONTROL SECTION NAME\nIEFVPP   AMODE 24\nIEFVPP   RMODE 24\n*\n         SPLEVEL SET=1             MVS/370 AND MVS/XA COMPATIBILITY\n*\n         PUSH  PRINT\n         PRINT NOGEN\n*\n         CVT   DSECT=YES\n*\nNEL      DSECT\n         IEFNEL SUBCOM=C\n*\n         IEFJMR ,\n*\n         IEESMCA ,\n*\n         IFGRPL ,\n*\n         IEFZB4D0  ,\n*\n         IEFZB4D2  ,\n*\n         IKJEFFDF  DFDSECT=YES\n*\n         DCBD  DSORG=PO,DEVD=DA\n*\n         IHASDWA DSECT=YES\n*\n         IHAPSA\n*\n         IHAASCB\n*\n         IKJTCB\n*\nTIODSECT DSECT\n         IEFTIOT1\n*\nJFCBDSCT DSECT\n         IEFJFCBN\n*\nUCBDSECT DSECT\n         IEFUCBOB\n*\n         IEFJESCT\n*\n         AIF   (NOT &SWA220).NOSWA0\n         IEFZB505 LOCEPAX=YES\n.NOSWA0  ANOP\n*\n         IEFTXTFT ,\n*\n         IEFVKEYS ,\n*\n***********************************************************************\n*                                                                     *\n*        THE FOLLOWING SYMBOL IS USED AS THE INTERNAL TEXT KEY VALUE  *\n*        FOR THE \"SYSPROC=\" KEYWORD.  ITS VALUE MUST BE USED IN       *\n*        CHANGING THE JCL KEYWORD TABLE IN IEFVFA.  THIS SYMBOL IS    *\n*        DEFINED HERE TO AVOID HAVING TO CHANGE THE IEFVKEYS MACRO.   *\n*                                                                     *\n***********************************************************************\n*\nSYSPROCK EQU   HOLDK   *     DD      SYSPROC=  JOBPROC DD STATEMENTS\n*\n         IEFCOMWA ,                COMMON WORK AREA\n*\n         IEFCVRWA ,                CONVERTER WORK AREA\n*\n         POP  PRINT\n*\n         TITLE '**** DYNAMIC PROCLIB WORK AREA ****'\n***********************************************************************\n*                                                                     *\n* PPWDSECT                                                            *\n* ********                                                            *\n*                                                                     *\n* THE FOLLOWING IS THE DYNAMIC PROCEDURE LIBRARY SUPPORT WORK AREA.   *\n* IT IS POINTED TO BY THE \"&ANCHOR\" FIELD IN THE CONVERTER WORK       *\n* AREA.                                                               *\n*                                                                     *\n***********************************************************************\n*\nPPANCHOR EQU   &ANCHOR\n*\n         USING PPWDSECT,R13\nPPWDSECT DSECT                     USER PROCLIB WORK AREA\n*\nPPWSAVE  DS    9D                  SAVE AREA FOR ALL ENTRY POINTS\nPPWESAVE DS    9D                  SAVE AREA FOR ESTAE EXIT\n*\nPPWBASE1 DS    A                   FIRST BASE ADDRESS\nPPWBASE2 DS    A                   SECOND BASE ADDRESS\n*\nPPWSTAT0 DS    X'00'               STATUS FLAGS 0 (PER INVOCATION)\nPPW0VPP0 EQU   X'80'                    IEFVPP0 IS EXECUTING\nPPW0VPP1 EQU   X'40'                    IEFVPP1 IS EXECUTING\nPPW0VPP2 EQU   X'20'                    IEFVPP2 IS EXECUTING\nPPW0VPP3 EQU   X'10'                    IEFVPP3 IS EXECUTING\nPPW0EREC EQU   X'08'                    ERROR RECOVERY IN PROGRESS\nPPW0VGM  EQU   X'04'                    CONTROL PASSED TO IEFVGM\nPPW0DALC EQU   X'02'                    CONTROL PASSED TO SVC 99\nPPW0INIT EQU   X'01'                    INITIALIZATION IS COMPLETE\n*\nPPWSTAT1 DS    X'00'               STATUS FLAGS 1 (PER JOB):\nPPW1JPER EQU   X'80'                    ERROR NOTED IN JOBPROC STMT\nPPW1HVJP EQU   X'40'                    JOBPROC DD CARD IS PRESENT\nPPW1JPBZ EQU   X'20'                    POSSIBLE JOBPROC CONCAT.\nPPW1CNJP EQU   X'10'                    JOBPROC IS A CONCATENATION\nPPW1SYSP EQU   X'08'                    SYSTEM PROCLIB IS REQUIRED\nPPW1BUFR EQU   X'04'                    NEW PROCLIB BUFFER OBTAINED\nPPW1OPEN EQU   X'02'                    USER PROCLIB DCB IS OPEN\nPPW1JPCN EQU   X'01'                    JOBPROC IS NOW CONCATENATED\n*\nPPWSTAT2 DS    X'00'               STATUS FLAGS 2 (PER STATEMENT):\nPPW2DSN  EQU   X'80'                      DSNAME PROVIDED\nPPW2VSER EQU   X'40'                      VOLSER PROVIDED\nPPW2VREF EQU   X'20'                      VOL=REF=DSNAME SPECIFIED\nPPW2UNIT EQU   X'10'                      UNIT=\" \" SPECIFIED\n*\n*        THE FOLLOWING TRACE FLAGS ARE USED FOR ERROR RECOVERY\n*\nPPWTRPP0 DS    X'00'               TRACE FLAGS FOR IEFVPP0\n*\nPPWTRPP1 DS    X'00'               TRACE FLAGS FOR IEFVPP1\n*\nPPWTRPP2 DS    X'00'               TRACE FLAGS FOR IEFVPP2\nPPWT2PP2 EQU   X'80'                  PP2 CALLED FOR CURRENT JOB\nPPWT2CON EQU   X'40'                  DYNAMIC CONCAT IN PROGRESS\nPPWT2OPN EQU   X'20'                  PROCLIB OPEN IN PROGRESS\n*\nPPWTRPP3 DS    X'00'               TRACE FLAGS FOR IEFVPP3\nPPWT3DCN EQU   X'80'                  DYNAMIC DE-CON IN PROGRESS\nPPWT3DAL EQU   X'40'                  DYNAMIC DE-ALOC IN PROGRESS\n*\nPPWMISC  DS    X'00'               MISCELLANEOUS FLAGS\nPPWMTRCE EQU   X'80'                  ALL SORTS OF TRACING CODE\nPPWMESTA EQU   X'40'                  ESTAE HAS BEEN ISSUED\nPPWMNOSY EQU   X'20'                  SYSPROC UNAVAILABLE\nPPWMVSXA EQU   X'10'                  MVS/XA OR MVS/ESA SYSTEM\n*\nPPWTIOTA DS    A                   ADDRESS OF TIOT\nPPWTCBAD DS    A                   CONVERTER TCB ADDRESS\n*\nPPWJPCNT DS    H                   NO. OF JOBPROC DD STATEMENTS\nPPWJPSYS DS    H                   NO. OF SYSTEM PROCLIBS\nPPWJPMAX DS    H                   MAXIMUM USER PROCLIBS ALLOWED\n         DS    H                   RESERVED FOR FUTURE USE\n*\nPPWSYSDS DS    16A                 ADDRESS OF SYSPROC JFCBS\nPPWDDBSE DS    CL8                 BASE DDNAME FOR ALL ALLOCATIONS\nPPWDDSUF DS    CL16                DDNAME SUFFIX CHARACTERS\n*\n         AIF   (NOT &SWA220).NOSWA1\nPPWSWAPL DS    2A                  SWAREQ PARAMETER POINTERS\nPPWSWAEA DS    A                   SWAREQ PARAMETER LIST\nPPWSWAEP DS    CL(L'SWAEPAX)       SWAREQ EPA\n.NOSWA1  ANOP\n*\nPPWTXTEX DS    A                   -> ORIGINAL EXIT LIST ADDRESS\nPPWSDCBA DS    A                   -> ORIGINAL IEFPDSI DCB\nPPWSBUFA DS    A                   -> ORIG. PDSI BUF(IF REPLACED)\nPPWBUFAD DS    A                   -> NEW PROCLIB BUF(IF REPLACED)\nPPWSYSDD DS    CL8                 NAME OF SYSTEM PROCLIB DD\n*\nPPWDCB   DCB   DDNAME=PTTTTTT0,DSORG=PO,MACRF=(R)\nPPWDCBDD EQU   (DCBDDNAM-IHADCB)+PPWDCB DYNAMIC PROCLIB DDNAME\nPPWDCBL  EQU   *-PPWDCB            LENGTH OF DCB AREA\n*\nPPWDARGL DS    A                   DYN ALLOC ARG LIST\nPPWDARB  DS    0XL20'0',5F'0'      DYN ALLOC REQUEST BLOCK\nPPWDATXT DS    10A                 DYN ALLOC TEXT POINTERS\n*\nPPWDDNMK DS    H                   DDNAME KEY FOR DYN ALLOC/DE-ALLOC\nPPWDDNM# DS    H                         NO. OF LENGTH-PARM ITEMS:\nPPWDDNML DS    H                         DDNAME LENGTH\nPPWDDNME DS    CL8                       USER PROCLIB DDNAME\n*\nPPWRTDSK DS    H                   RETURN DSORG KEY FOR DYN ALLOC\nPPWRTDS# DS    H                         NO. OF LENGTH-PARM ITEMS:\nPPWRTDSL DS    H                         DSORG LENGTH\nPPWRTDSE DS    XL2                       DSORG RETURNED\n*\nPPWDSNMK DS    H                   DSNAME KEY FOR DYN ALLOC\nPPWDSNM# DS    H                         NO. OF LENGTH-PARM ITEMS:\nPPWDSNML DS    H                         DSNAME LENGTH\nPPWDSNME DS    CL44                      USER PROCLIB DSNAME\n*\nPPWVOLSK DS    H                   VOLSER KEY FOR DYN ALLOC\nPPWVOLS# DS    H                         NO. OF LENGTH-PARM ITEMS:\nPPWVOLSL DS    H                         VOLSER LENGTH\nPPWVOLSR DS    CL8                       USER PROCLIB VOLSER\n*\nPPWUNITK DS    H                   UNIT KEY FOR DYN ALLOC\nPPWUNIT# DS    H                         NO. OF LENGTH-PARM ITEMS\nPPWUNITL DS    H                         UNIT LENGTH\nPPWUNIT  DS    CL8                       USER PROCLIB UNIT\n*\nPPWDISPK DS    H                   STATUS DISPOSITION KEY\nPPWDISP# DS    H                         NO. OF LENGTH-PARM ITEMS\nPPWDISPL DS    H                         DISPOSITION CODE LENGTH\nPPWDISP  DS    X                         DISP CODE\n*\nPPWCLOSK DS    H                   FREE=CLOSE KEY FOR DYN DEALLOC\nPPWCLOS# DS    H                         NO. OF LENGTH-PARM ITEMS:\n*\nPPWVLRFK DS    H                   VOLUME REFERENCE TO DSNAME KEY\nPPWVLRF# DS    H                         NO. OF LENGTH-PARM ITEMS\nPPWVLRFL DS    H                         REFERENCE DSNAME LENGTH\nPPWVLREF DS    CL44                      VOLUME REFERENCE DSNAME\n*\nPPWCONCK DS    H                   DDNAME KEY FOR CONCATENATIONS\nPPWCONC# DS    H                         NUMBER OF LENGTH-PARM ITEMS:\nPPWCONCM EQU   &MAXPROC                  MAX NUMBER OF CONCATENATIONS\nPPWCONCD DS    (PPWCONCM)XL10            DDNAME LENGTH AND TEXT\n*\nPPWDARET DS    A                   SAVE AREA FOR DYN ERROR ANALYSIS RTN\nPPWDFPRM DS    5F                  DAIRFAIL PARM LIST\nPPWDF02A DS    A                   DAIRFAIL - IKJEFF02 WORD\nPPWDFRCD DS    F                   DAIRFAIL RETURN CODE\nPPWDFIDN DS    H                   DAIRFAIL CALLER IDENT.\n*\nPPWMSRET DS    A                   SAVE AREA FOR MESSAGE ROUTINE RETURN\n*\nPPWESTAE ESTAE *-*,TERM=YES,MF=L\nPPWESTAL EQU   *-PPWESTAE          AREA LENGTH\n*\nPPWOCLST OPEN  (PPWDCB,(INPUT)),MF=L\n*\nPPWLOCPL CAMLST NAME,*-*,,*-*      PARM LIST FOR LOCATE\n*\n         DS    0D\nPPWLOCWK DS    CL268               WORK AREA FOR LOCATE\n*\nPPWTOWRK DS    CL144               WTO MESSAGE AREA\n*\n         DS    0D                  ALIGN TO A DOUBLE WORD\nPPWORKLN EQU   *-PPWDSECT          WORK AREA LENGTH\n*\nPPALL    EQU   X'FF'               ALL BITS MASK\nPPVLBIT  EQU   X'80'               PARMLIST VL\nPPABEND  EQU   X'BAD'              INTERNAL ABEND CODE\n*\nPPASHR   EQU   X'08'               \"DISP=SHR\" PARM CODE\n*\n         TITLE '**** DYNAMIC PROCLIB MODULE PREFIX ****'\nIEFVPP   CSECT ,                   CONTROL SECTION NAME\n         ENTRY IEFVPP0             INITIALIZATION CALL\n         ENTRY IEFVPP3             CLEAN UP AND TERMINATION\n*\nR10      EQU   10                  SECONDARY BASE REGISTER\nR11      EQU   11                  PRIMARY BASE REGISTER\nR12      EQU   12                  CONVERTER WORK AREA\nR13      EQU   13                  REGISTER SAVE AREA\nR14      EQU   14                  SCRATCH AND LINK\nR15      EQU   15                  SCRATCH AND LINK\n*\n         USING COMWA,R12           SET STANDARD BASE\n         USING IEFVPP,R11,R10      INFORM ASSEMBLER OF NORMAL BASE REG\n*\n         DC    AL1(VPPIDL)         LTH OF IDENTIFICATION PREFIX\nVPPID    DC    CL8'IEFVPP'         USER PROCLIB SUPPORT MODULE ID\nVPPVERSN DC    CL9'V3.R2.M4 '      CURRENT AMDAHL RELEASE NO.\nVPPSDATE DC    CL8'&SYSDATE'       LAST ASSEMBLY DATE\nVPPSTIME DC    CL8' &SYSTIME'      TIME OF LAST ASSEMBLY\nVPPCPYRT DC    C'COPYRIGHT 1978, 1981, 1982, 1988  BY AMDAHL CORP.'\nVPPIDL   EQU   *-VPPID             LENGTH OF IDENTIFICATION HEADER\n*\n         TITLE '**** IEFVPP0  - INITIALIZATION PROCESSING ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP0                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE IS CALLED TO PROCESS ANY INITIALIZATION FUNCTIONS.     *\n* IF THIS ROUTINE IS NOT INVOKED, THE CONVERTER WILL FAIL IN THE MOST *\n* TERRIBLE WAY, SINCE THE ADDRESS OF THE DYNAMIC PROCLIB WORK AREA    *\n* WILL NOT HAVE BEEN PLACED IN THE CONVERTER WORK AREA RESERVED WORD. *\n*                                                                     *\n*    1  GETMAIN THE DYNAMIC PROCLIB WORK AREA AND ANCHOR IT IN        *\n*       THE CONVERTER WORK AREA.                                      *\n*    2  INITIALIZE SWITCHES, COUNTERS, AND TRACE FLAGS.               *\n*    3  INITIALIZE DYNAMIC ALLOCATION PARAMETER BLOCK.                *\n*    4  DETERMINE NUMBER AND NAMES OF SYSTEM PROCLIBS.                *\n*    5  BRANCH TO IEFVHA.                                             *\n*                                                                     *\n* INPUT:                                                              *\n*        CONVERTER WORK AREA (REGISTER 12).                           *\n*                                                                     *\n* OUTPUT:                                                             *\n*        INITIALIZE DYNAMIC PROCLIB ANCHOR IN THE CWA AND THE         *\n*        DYNAMIC PROCLIB WORK AREA ITSELF.                            *\n*                                                                     *\n* ENTERNALS:                                                          *\n*        NONE                                                         *\n*                                                                     *\n* EXIT:                                                               *\n*        BRANCH TO IEFVHA.                                            *\n*                                                                     *\n* SVC:                                                                *\n*        GETMAIN  (SVC 120)                                           *\n*        ESTAE    (SVC 60)                                            *\n*        WTO      (SVC 35)                                            *\n*                                                                     *\n***********************************************************************\n         EJECT\nIEFVPP0  DS    0H                  ENTRY POINT ADDRESS\n         USING *,R15               TEMPORARY BASE\n*\n         STM   R14,R12,12(R13)     SAVE CALLERS REGS\n         L     R11,PP0BASE         SET UP MODULE BASE\n         LA    R10,2048            SET UP SECOND\n         LA    R10,2048(R10,R11)    BASE REGISTER\n         DROP  R15                 DROP TEMPORARY BASE\n*\n         LA    R0,PPWORKLN         LENGTH OF PROCLIB WORK AREA\n         GETMAIN RU,LV=(0),LOC=(BELOW,ANY) GET THE PROCLIB WORK AREA\n         ST    R1,PPANCHOR         STORE IN CONVERTER WORK AREA\n*\n         LR    R0,R1               SET FOR MVCL\n         LA    R1,PPWORKLN         LENGTH OF MVCL\n         SLR   R15,R15             ZERO FROM LENGTH\n         MVCL  R0,R14              CLEAR THE WORK AREA\n*\n         L     R1,PPANCHOR         RELOAD DYNAMIC PROCLIB WORK AREA\n         ST    R1,8(,R13)          STORE FORWARD POINTER\n         ST    R13,4(,R1)          STORE BACKWARD POINTER\n         LR    R13,R1              SET NEW SAVE AREA ADDRESS\n*\n         MVI   PPWSTAT0,PPW0VPP0   INDICATE IEFVPP0 IS EXECUTING\n*\n         ST    R11,PPWBASE1        SET MODULE BASE IN WORK AREA\n         ST    R10,PPWBASE2        SET MODULE BASE IN WORK AREA\n*\n         L     R15,PP0TRCV         LOAD CONVERTER TRACE ROUTINE ADDRESS\n         CNOP  2,4                 ALIGN TRACE PARM LIST\n         BALR  R14,R15             ENTER MODULE ID IN TRACE REC.\nPP0TRCV  DC    V(TRACE)            TRACE ROUTINE ID (IN IEFVH1)\n         DC    CL4'VPP0'           MODULE ID FOR TRACE RECORD\n*\n         MVC   PPWESTAE(PPWESTAL),PP0ESTAE MOVE IN MODEL PLIST\n*\n         ESTAE PPESTAEX,CT,        ESTABLISH DYNAMIC PROCLIB           X\n               TERM=YES,PARAM=(12), ERROR RECOVERY                     X\n               MF=(E,PPWESTAE)       ENVIRONMMENT\n*\n         OI    PPWMISC,PPWMESTA    INDICATE ESTAE IN EFFECT\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        THE INSTRUCTION BELOW CAN BE CHANGED OR ZAPPED TO ENABLE     *\n*        EXTERNAL DEBUGGING TRACE CODE (WTO MESSAGES).                *\n*                                                                     *\n***********************************************************************\n*\nPP0SETTR DS    0AL4(PP0SETTR)      PROVIDE XREF REFERENCE\n         OI    PPWMISC,PPWMTRCE    THIS IS HOW DEBUGGING IS TURNED ON\n*\n         AIF   ('&SYSPARM' EQ 'TRACE').PPTRACE\n         ORG   PP0SETTR+1          ORG BACK TO IMMEDIATE FIELD\n         DC    X'00'               PATCH TO TURN ON DEBUGGING CODE\n         ORG   ,                   BACK TO NORMAL LOCATION COUNTER\n.PPTRACE ANOP\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        INITIALIZE THE DYNAMIC PROCLIB WORK AREA                     *\n*                                                                     *\n***********************************************************************\n*\n         MVI   PPWSTAT1,0          INITIALIZE STATUS FLAG 1\n         MVI   PPWSTAT2,0          INITIALIZE STATUS FLAG 2\n*\n         MVI   PPWTRPP0,0          INITIALIZE\n         MVI   PPWTRPP1,0           TRACE\n         MVI   PPWTRPP2,0            FLAGS\n         MVI   PPWTRPP3,0\n*\n         L     R1,CVTPTR           LOAD THE CVT ADDRESS\n         USING CVT,R1\n         TM    CVTDCB,CVTMVSE      TEST FOR MVS/XA\n         BZ    *+8                 BRANCH IF NOT\n         OI    PPWMISC,PPWMVSXA    INDICATE MVS/XA\n         DROP  R1\n*\n         MVC   PPWDCB(PP0DCBML),PP0DCBMD INIT DCB AREA\n*\n         LA    R9,PPWDARB          -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET ADDRESSABILITY TO DARB\n         ST    R9,PPWDARGL         SET PTR TO DARB IN PARM LIST->\n         OI    PPWDARGL,S99RBPND   SET END OF PARM LIST INDICATOR\n         XC    PPWDARB(L'PPWDARB),PPWDARB CLEAR ALLOC REQUEST BLOCK\n         MVI   S99RBLN,L'PPWDARB   SET LENGTH OF REQUEST BLOCK\n         MVI   S99FLG11,S99ONCNV+S99NOCNV+S99NOMNT SET FLAGS 1\n*              NO CONVERTIBLE, NO EXISTING ALLOC, NO VOLUME MOUNT\n         MVI   S99FLG21,S99NORES   SET NO DATA SET ENQUEUE FLAGS 2\n         LA    R0,PPWDATXT         -> DYNAMIC ALLOCATION TEXT\n         ST    R0,S99TXTPP         SET TEXT LIST PTR IN DARB\n*\n         LA    R1,1                GET A NICE CONSTANT\n*\n         LA    R0,DALDDNAM         GET DDNAME KEY\n         STH   R0,PPWDDNMK         SET DDNAME KEY\n         STH   R1,PPWDDNM#         SET NUMBER OF OPERANDS\n         LA    R0,8                GET MAX DDNAME LENGTH\n         STH   R0,PPWDDNML         SET DDNAME LENGTH\n*\n         LA    R0,DALRTORG         GET RETURN DSORG KEY\n         STH   R0,PPWRTDSK         SET RETURN DSORG KEY\n         STH   R1,PPWRTDS#         SET NUMBER OF OPERANDS\n         LA    R0,2                GET DSORG LENGTH\n         STH   R0,PPWRTDSL         SET DSORG LENGTH\n*\n         LA    R0,DALDSNAM         GET DSNAME TEXT KEY\n         STH   R0,PPWDSNMK         SET DSNAME TEXT KEY\n         STH   R1,PPWDSNM#         SET NUMBER OF OPERANDS\n*\n         LA    R0,DALSTATS         GET STATUS DISP KEY\n         STH   R0,PPWDISPK         SET STATUS DISP KEY\n         STH   R1,PPWDISP#         SET NUMBER OF OPERANDS\n         STH   R1,PPWDISPL         SET LENGTH OF DISP CODE\n*\n         LA    R0,DALCLOSE         GET FREE=CLOSE KEY\n         STH   R0,PPWCLOSK         SET FREE=CLOSE KEY\n         XC    PPWCLOS#,PPWCLOS#   SET NUMBER OF OPERANDS\n*\n         LA    R0,DALVLSER         GET VOL=SER TEXT KET\n         STH   R0,PPWVOLSK         SET VOL=SER TEXT KEY\n         STH   R1,PPWVOLS#         SET NUMBER OF OPERANDS\n*\n         LA    R0,DALVLRDS         GET VOL=REF TEXT KEY\n         STH   R0,PPWVLRFK         SET VOL=REF TEXT KEY\n         STH   R1,PPWVLRF#         SET NUMBER OF OPERANDS\n*\n         LA    R0,DALUNIT          GET UNIT TEXT KEY\n         STH   R0,PPWUNITK         SET UNIT TEXT KEY\n         STH   R1,PPWUNIT#         SET NUMBER OF OPERANDS\n*\n         LA    R0,DCCDDNAM         GET CONCATENATE DDNAME KEY\n         STH   R0,PPWCONCK         SET CONCATENATE DDNAME KEY\n*\n         LA    R15,PPWCONCD        POINT AT FIRST CONCAT DDNAME\n         LA    R14,PPWCONCM        GET MAXIMUM NUMBER OF DDNAMES\n         LA    R0,8                GET THE DDNAME LENGTH\n*\nPP0CONCL STH   R0,0(,R15)          STORE THE LENGTH\n         LA    R15,L'PPWCONCD(,R15)     INCREMENT TO NEXT DDNAME\n         BCT   R14,PP0CONCL        LOOP THROUGH THE CONCATENATION LIST\n*\n         LA    R9,PPWDFPRM         -> DAIRFAIL PARM LIST\n         USING DFDSECTD,R9         MAKE IT ADDRESSABLE\n*\n         LA    R1,PPWDARB          -> DYNAMIC ALLOCATE RB\n         ST    R1,DFS99RBP         SET IN DFPL\n         LA    R1,PPWDFRCD         -> RETURN CODE HOLDING AREA\n         ST    R1,DFRCP            SET IN DFPL\n         LA    R1,PPWDF02A         -> IKJEFF02 ADDRESS AREA\n         ST    R1,DFJEFF02         STORE PTR IN DAIRFAIL PLIST\n         XC    PPWDF02A,PPWDF02A   SHOW IKJEFF02 ADDRESS UNKNOWN\n         LA    R1,PPWDFIDN         -> DAIRFAIL IDENTIFICATION NO.\n         ST    R1,DFIDP            SET IN DFPL\n         OI    DFIDP,X'80'         FLAG END OF PARM LIST\n*\n         XC    DFCPPLP,DFCPPLP     CLEAR CPPL POINTER\n         LA    R1,50               INDICATE SVC 99 ERROR\n         STH   R1,PPWDFIDN          IN DAIRFAIL PARM LIST\n         OI    PPWDFIDN,DFWTP      INDICATE WTP REQUEST\n*\n         MVC   PPWLOCPL(PP0CAMLL),PP0CAMLS MOVE IN LOCATE CAMLST\n         LA    R1,PPWDSNME         -> DSNAME HOLD AREA\n         ST    R1,PPWLOCPL+4       SET DSNAME PTR IN CAMLST\n         LA    R1,PPWLOCWK         -> LOCATE WORK AREA\n         ST    R1,PPWLOCPL+12      SET WORK AREA PTR IN CAMLST\n*\n         AIF   (NOT &SWA220).NOSWA2\n         MVC   PPWSWAPL(8),PP0SWARQ     INITIALIZE SWAREQ PARM LIST\n         LA    R1,PPWSWAEA         POINT AT EPA POINTER\n         ST    R1,PPWSWAPL         STORE IN PARAMETER LIST\n         XC    PPWSWAEP,PPWSWAEP   CLEAR THE SWA EPA\n         LA    R1,PPWSWAEP         POINT AT SWA EPA\n         ST    R1,PPWSWAEA         STORE IN POINTER\n.NOSWA2  ANOP\n*\n         L     R1,PSATOLD-PSA(,R0) LOAD TCB ADDRESS\n         ST    R1,PPWTCBAD         SAVE THE TCB ADDRESS\n*\n         L     R1,TCBTIO-TCB(,R1)  LOAD TIOT ADDRESS\n         ST    R1,PPWTIOTA         SAVE THE ADDRESS\n*\n         UNPK  PPWLOCWK(9),PPWTCBAD(5)  UNPACK THE TCB ADDRESS\n         TR    PPWLOCWK(8),PP0HEXTR-240 CONVERT TO PRINTABLE HEX\n         MVI   PPWDDBSE,C'P'       SET DDNAME PREFIX CHARACTER\n         MVC   PPWDDBSE+1(6),PPWLOCWK+2 MOVE THE TCB ADDRESS\n         MVI   PPWDDBSE+7,C' '     BLANK THE LAST CHARACTER\n         MVC   PPWDDSUF,PP0DDPAT   SET THE DDNAME SUFFIXES\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        LOCATE THE SYSTEM PROCLIBS FROM THE OPEN CONVERTER DCB       *\n*                                                                     *\n***********************************************************************\n*\n         L     R1,PPWTIOTA         LOAD THE TIOT ADDRESS\n         USING TIODSECT,R1         SET UP ADDRESSIBILITY\n*\n         SLR   R15,R15             ZERO FOR INSERTS\n         SLR   R2,R2               ZERO FOR COUNTING\n*\n         L     R9,PDCBP            LOAD CURRENT PROCLIB DCB ADDRESS\n         USING IHADCB,R9\n         TM    DCBOFLGS,DCBOFOPN   IS THIS DCB OPEN\n         BZ    PP0SYSMS            IF NOT, SKIP COUNTING DATA SETS\n*\n         SLR   R8,R8               CLEAR FOR INSERT\n         ICM   R8,3,DCBTIOT        LOAD THE DCB TIOT OFFSET\n         AR    R8,R1               GET THE ACTUAL TIOT ENTRY ADDRESS\n         DROP  R9\n         USING TIOENTRY,R8\n*\n         MVC   PPWSYSDD,TIOEDDNM   SAVE THIS DDNAME FOR POSTERITY\n*\nPP0SYCNT DS    0H\n         SLR   R1,R1               CLEAR FOR THE INSERT\n         ICM   R1,7,TIOEJFCB       LOAD THE ADDRESS\n         TM    TIOEJFCB+2,X'01'    IS THE JFCB ADDRESS REALLY A TOKEN\n         BO    PP0SYS31            BRANCH IF SO\n         LA    R1,16(,R1)          POINT AT THE ACTUAL JFCB\n         B     PP0SYSTO            AND GO STORE THIS ADDRESS\n*\nPP0SYS31 DS    0H\n         AIF   (NOT &SWA220).NOSWA3\n         STCM  R1,7,SWVA-ZB505+PPWSWAEP STORE THE SVA\n         SWAREQ MF=(E,PPWSWAPL),UNAUTH=YES\n         LTR   R15,R15             TEST IF SUCCESSFUL\n         BZ    *+6                 BRANCH IF GOOD\n.NOSWA3  ANOP\n         DC    H'0'                IF THIS HAPPENS, WE ARE IN TROUBLE\n*\n         AIF   (NOT &SWA220).NOSWA4\n         L     R1,SWBLKPTR-ZB505+PPWSWAEP LOAD THE ACTUAL SWA BLK ADDR\n.NOSWA4  ANOP\n*\nPP0SYSTO DS    0H\n         LR    R14,R2              GET PROCLIB COUNT (-1)\n         SLL   R14,2               MULTIPLY BY 4\n         ST    R1,PPWSYSDS(R14)    STORE THE JFCB ADDRESS\n*\n         LA    R2,1(,R2)           BUMP SYSTEM PROCLIB COUNT\n         IC    R15,TIOELNGH        LOAD THE LENGTH\n         AR    R8,R15              INCREMENT THE ADDRESS\n         CLI   TIOELNGH,0          CHECK FOR LAST ENTRY\n         BE    *+12                SKIP CONCATENATION LOOP IF SO\n         CLI   TIOEDDNM,C' '       CHECK FOR CONCATENATION\n         BE    PP0SYCNT            LOOP IF IT IS\n         DROP  R8\n*\n         LA    R0,PPWCONCM         SET MAXIMUM PROCLIBS\n         SR    R0,R2               DEDUCT FOR SYSTEM PROCLIBS\n         STH   R2,PPWJPSYS         SET THE SYSTEM PROCLIB COUNT\n         STH   R0,PPWJPMAX         SET THE MAX USER PROCLIB COUNT\n         B     PP0SYSOK            AND FINISH INITIALIZATION\n*\nPP0SYSMS L     R1,PPWTIOTA         LOAD THE TIOT ADDRESS\n         CLC   TIOCNJOB(8),=CL8'MSTRJCL' TEST IF MASTER'S TIOT\n         BE    PP0SYMST            SKIP MESSAGE IF SO\n         CLC   TIOCNJOB(6),=C'MSTJCL'   TEST IF MASTER'S TIOT (1.3.2)\n         BE    PP0SYMST            SKIP MESSAGE IF SO\n         DROP  R1                  DONE WITH THE TIOT\n*\n         L     R1,PSAAOLD-PSA(,0)  LOAD ASCB ADDRESS\n         LH    R1,ASCBASID-ASCB(,R1)    LOAD THE ASID\n         CH    R1,=H'1'            CHECK FOR THE MASTER ADDRESS SPACE\n         BE    PP0SYMST            BRANCH IF SO\n*\n         WTO   MF=(E,PPMSYSMS)     INDICATE ERROR\n*\nPP0SYMST OI    PPWMISC,PPWMNOSY    INDICATE SYSPROC UNAVAILABLE\n         LA    R0,PPWCONCM         SET MAXIMUM PROCLIBS\n         STH   R0,PPWJPMAX         STASH THE MAX\n*\nPP0SYSOK DS    0H\n         SR    R0,R0               CLEAR R0\n         STH   R0,PPWJPCNT         INITIALIZE CONCATENATION COUNT\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CLEAN UP AFTER A PREVIOUS CONVERTER FAILURE                  *\n*                                                                     *\n***********************************************************************\n*\n         L     R1,PPWTIOTA         GET THE TIOT ADDRESS\n         USING TIODSECT,R1         SET UP ADDRESSIBILITY\n*\n         SLR   R15,R15             ZERO FOR INSERTS\n*\nPP0CLNL1 CLI   TIOELNGH,0          CHECK FOR END OF TIOT\n         BE    PP0CLNDN            BRANCH IF NAME NOT FOUND\n         CLC   TIOEDDNM(7),PPWDDBSE     CHECK FOR LEFT OVER DDNAME\n         BE    PP0CLNUP            IF FOUND, WE HAVE TO CLEAN UP\n*\n         IC    R15,TIOELNGH        LOAD THE LENGTH\n         AR    R1,R15              INCREMENT ADDRESS\n         B     PP0CLNL1            CONTINUE TIOT SCAN\n*\n         DROP  R1\n*\nPP0CLNUP DS    0H                  NEED TO CLEAN UP LEFTOVERS\n         LA    R9,PPWDARB          -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET DARB ADDRESSABILITY\n         MVI   S99VERB,S99VRBDC    INDICATE DE-CONCAT REQUEST\n         LA    R9,PPWDATXT         -> TEXT UNIT PTR SLOTS\n*\n         USING S99TUPL,R9          GET TEXT PTR ADDRESSABILITY\n         USING S99TUNIT,R8         GET TEXT UNIT ADDRESSABILITY\n*\n         LA    R8,PPWCONCK         -> DE-CONCATENATE TEXT UNIT\n         LA    R0,DDCDDNAM         GET DE-CONCATENATE KEY\n         STH   R0,S99TUKEY         SET DE-CONCATENATE KEY\n         LA    R1,1                GET THE NUMBER OF DDNAMES\n         STH   R1,S99TUNUM         SET NO. OF DDNAMES\n         MVC   S99TUPAR(8),PPWDDBSE     SET BASE DDNAME\n         MVC   S99TUPAR+7(1),PPWDDSUF   AND FIRST DDNAME SUFFIX\n         ST    R8,S99TUPTR         SET PTR TO DE-CONC TEXT UNIT\n         OI    S99TUPTR,S99TUPLN   FLAG END OF TEXT UNIT PTR'S\n*\n         LA    R1,PPWDARGL         -> DYNAMIC ALLOC PARM PTR\n         OI    PPWSTAT0,PPW0DALC   INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                DE-CONCATENATE PROCLIB'S\n         NI    PPWSTAT0,PPALL-PPW0DALC  INDICATE WE ARE BACK\n*\n         DROP  R8,R9\n*\n         PPTRACE DCN0              TRACE DECONCATENATION IN PP0\n*\n         LA    R0,DCCDDNAM         GET CONCATENATE DDNAME KEY\n         STH   R0,PPWCONCK         REPAIR CONCATENATE DDNAME KEY\n*\n         LA    R2,PPWDDSUF         POINT AT DDNAME SUFFIX STRING\n         LA    R3,PPWCONCM         GET MAXIMUM CONCATENATIONS\n*\n         LA    R9,PPWDARB          -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET DARB ADDRESSABILITY\n         MVI   S99VERB,S99VRBUN    INDICATE UNALLOC REQUEST\n         LA    R9,PPWDATXT         -> TEXT UNIT PTR SLOTS\n*\n         USING S99TUPL,R9          GET TEXT PTR ADDRESSABILITY\n         USING S99TUNIT,R8         GET TEXT UNIT ADDRESSABILITY\n*\n         LA    R8,PPWDDNMK         -> DDNAME TEXT UNIT\n         LA    R0,DUNDDNAM         SET DDNAME TEXT KEY\n         STH   R0,PPWDDNMK         SET DDNAME TEXT KEY\n*\n         ST    R8,S99TUPTR         SET PTR TO DDNAME TEXT UNIT\n         OI    S99TUPTR,S99TUPLN   FLAG END OF TEXT UNIT PTR'S\n*\n         MVC   S99TUPAR(8),PPWDDBSE     MOVE THE DDNAME BASE\n*\nPP0CLNDL DS    0H\n         MVC   S99TUPAR+7(1),0(R2) MOVE THE DDNAME SUFFIX\n*\n         LA    R1,PPWDARGL         -> DYNAMIC ALLOC PARM PTR\n         OI    PPWSTAT0,PPW0DALC   INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                FREE A PROCLIB DATA SET\n         NI    PPWSTAT0,PPALL-PPW0DALC  INDICATE WE ARE BACK\n*\n         LA    R2,1(,R2)           INCREMENT THE SUFFIX POINTER\n         BCT   R3,PP0CLNDL         LOOP THROUGH DEALLOCATION\n*\n         DROP  R8,R9\n*\n         PPTRACE DAL0              TRACE DEALLOCATION IN PP0\n*\n         LA    R0,DALDDNAM         GET DDNAME KEY\n         STH   R0,PPWDDNMK         REPAIR DDNAME KEY\n*\nPP0CLNDN DS    0H\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        PLANT THE CONVERTER POST SCAN EXIT INTERCEPT                 *\n*                                                                     *\n***********************************************************************\n*\n         MVC   PPWTXTEX,CWATXTEX   SAVE THE CONVERTER'S POST SCAN EXIT\n         LA    R0,PP0EXITL         POINT AT OUR EXIT LIST\n         ST    R0,CWATXTEX         AND OVERLAY THE STANDARD EXIT ADDR\n*\n         PPTRACE END0              INDICATE END OF PP0\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        THE FOLLOWING MVI INSTRUCTION SHOULD HAVE ITS IMMEDIATE      *\n*        FIELD MODIFIED FROM PPW0INIT TO ZERO TO CRIPPLE THE DYNAMIC  *\n*        PROCLIB SUPPORT.  THIS IS THE ONLY WAY, SHORT OF REMOVING    *\n*        ALL CONVERTER MODIFICATIONS (ZAPS AND ALL).                  *\n*                                                                     *\n***********************************************************************\n*\nPP0CANCL DS    0AL4(PP0CANCL)      PROVIDE XREF REFERENCE\n         MVI   PPWSTAT0,PPW0INIT   INDICATE VPP0 HAS COMPLETED\n*\nPP0RETRN DS    0H\n         L     R13,4(,R13)         UNCHAIN SAVE AREAS\n         L     R15,PP0VHA          LOAD THE IEFVHA ADDRESS\n         L     R14,12(,R13)        RELOAD\n         LM    R0,R12,20(R13)       REGISTERS\n         BR    R15                 AND LET IT DO IT'S THING\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CONSTANTS AND DATA AREAS USED BY IEFVPP0                     *\n*                                                                     *\n***********************************************************************\n*\nPP0BASE  DC    A(IEFVPP)           BASE ADDRESS FOR ALL ROUTINES\n*\nPP0VHA   DC    V(IEFVHA)           EXIT FROM IEFVPP0\n*\nPP0EXITL DS    0F                  OUR INTERNAL TEXT EXIT LIST\n         DC    AL1(NELEXADD)       ENTRY POINT IS 3-BYTE ADDRESS\n         DC    AL1(NELTXTEX)       INDICATE POST SCAN EXIT ID\n         DC    AL2(0)              FILLER\n         DC    A(IEFVPP1)          ADDRESS OF OUR POST SCAN EXIT\n*\nPP0DCBMD DCB   DDNAME=********,    PATTERN DCB                         X\n               DSORG=PO,                                               X\n               MACRF=(R),                                              X\n               BUFNO=0,                                                X\n               BUFCB=0,                                                X\n               RECFM=FB,                                               X\n               LRECL=80\nPP0DCBML EQU   *-PP0DCBMD          PATTERN DCB LENGTH\n*\nPP0CAMLS CAMLST NAME,*-*,,*-*      BUILD LOCATE PARM LIST\n*\nPP0CAMLL EQU   *-PP0CAMLS          PARM LIST LENGTH\n*\nPP0ESTAE ESTAE *-*,CT,             ESTABLISH DYNAMIC PROCLIB           X\n               TERM=YES,            ERROR                              X\n               PARAM=*-*,            RECOVERY                          X\n               MF=L                   ENVIRONMMENT\n*\n         AIF   (NOT &SWA220).NOSWA5\nPP0SWARQ SWAREQ FCODE=LA,EPA=*-*,UNAUTH=YES,MF=L\n.NOSWA5  ANOP\n*\nPP0HEXTR DC    C'0123456789ABCDEF' CHARACTER STRING FOR HEX TRANSLATE\nPP0DDPAT EQU   PP0HEXTR            LET'S REUSE THIS STRING\n*\nPP0LITRL LTORG ,                   FLUSH LITERALS\n*\n         TITLE '**** IEFVPP1  - //JOBPROC DD PROCESSOR ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP1                                                             *\n* *******                                                             *\n*                                                                     *\n*    THIS ROUTINE RECEIVES CONTROL FROM IEFVFA AS IF IT WERE THE      *\n*    CONVERTER POST SCAN EXIT.  IT IS CALLED FOR EACH CONVERTED       *\n*    JCL STATEMENT IN INTERNAL TEXT FORM.  IT DETERMINES IF IT IS     *\n*    BEING CALLED FOR A DD STATEMENT OR AN EXEC STATEMENT AND WILL    *\n*    BRANCH TO IEFVPP2 IF THE FIRST EXEC STATEMENT IS ENCOUNTERED.    *\n*    THE IEFVPP1 PORTION WILL PERFORM THE FOLLOWING:                  *\n*                                                                     *\n*    1) DETERMINES WHETHER THE DD STATEMENT IS A JOBPROC. IF NOT,     *\n*       CONTROL IS PASSED TO PP12RETN.                                *\n*                                                                     *\n*    2) THE INTERNAL TEXT STRING IS FLAGGED AS IF DD DYNAM WAS        *\n*       SPECIFIED ON THE JOBPROC DD CARD. THIS METHOD IS USED TO      *\n*       CAUSE THE INTERPRETER TO IGNORE THE DD STATEMENT AT THE       *\n*       INTERPRETER \"DD\" MODULE (IEFVDA) DURING INTERPRETATION.       *\n*       THIS IS NECESSARY IN ORDER TO PREVENT A MISPLACED DD          *\n*       STATEMENT ERROR MESSAGE.                                      *\n*                                                                     *\n*    3) DETERMINES IF THE FIRST EXEC STATEMENT OF THE STEP HAS        *\n*       BEEN RECEIVED. IF IT HAS, AN ERROR MESSAGE INDICATING THAT    *\n*       THE JOBPROC DD STATEMENT IS \"MISPLACED\" IS ISSUED AND         *\n*       CONTROL IS PASSED TO PP12RETN.                                *\n*                                                                     *\n*    4) DETERMINES IF THIS DD STATEMENT IS CONCATENATED TO A PREVIOUS *\n*       JOBPROC DD STATEMENT. IF NOT (IE. A DDNAME HAS BEEN CODED), A *\n*       MESSAGE IS ISSUED INDICATING THE THIS IS A DUPLICATE JOBPROC  *\n*       DD STATEMENT.                                                 *\n*                                                                     *\n*                                                                     *\n*    5) ALL INFORMATION NECESSARY TO ALLOCATE THE JOBPROC DATA SET    *\n*       DEFINED ON THE DD STATEMENT IS OBTAINED BY SCANNING THE       *\n*       INTERNAL TEXT BUFFER. CURRENTLY ONLY THE FOLLOWING DD CARD    *\n*       KEYWORDS ARE PROCESSED:                                       *\n*                                                                     *\n*           KEYWORD       RESTRICTIONS                                *\n*          ---------     --------------                               *\n*           DSNAME           NONE                                     *\n*           UNIT             FIRST POSITIONAL ONLY (IE. UNIT NAME)    *\n*           VOLUME           SER=\"VOLUME SERIAL NUMBER\"               *\n*                            REF=\"DSNAME\"                             *\n*           SYSPROC          YES -> INSTALLATION PROCLIBS AS DEFINED  *\n*                                   BY THE IEFDPDSI DD CARD IN THE    *\n*                                   JES PROC SHOULD BE CONCATENATED   *\n*                                   FOLLOWING THE USERS' PROCLIBS.    *\n*                            NO  -> ONLY THE USERS' PROCLIBS SHOULD   *\n*                                   BE SEARCHED.                      *\n*                                                                     *\n*    6) THE USER PROCLIB IS ALLOCATED TO \"JES\" VIA THE DYNAMIC        *\n*       ALLOCATION FACILITIES OF OS/VS.  THE MAXIMUM NO. OF DD'S      *\n*       ALLOWED IS SET DURING INITIALIZATION (IEFVPP0) AS \"16\" MINUS  *\n*       THE NUMBER OF PROCLIBS PROVIDED IN THE SYSTEM PROCLIB THAT    *\n*       WAS OPEN DURING DYNAMIC PROCLIB INITIALIZATION.               *\n*       IF SYSPROC=NO IS SPECIFIED, THE NUMBR OF USER SUPPLIED        *\n*       PROCLIBS IS AUTOMATICALLY SET TO THE MAXIMUM (16).            *\n*                                                                     *\n*    7) CONTROL IS PASSED TO PP12RETN TO INVOKE THE REAL POST SCAN    *\n*       EXIT AND RETURN TO IEFVFA.                                    *\n*                                                                     *\n* INPUT:                                                              *\n*        IWA(SWY)      - INDICATES IF IEFVFA HAS DETECTED A SYNTAX    *\n*                        ERROR IN THE CURRENT STATEMENT               *\n*        IWA(TEXTBUFP) - CONTAINS A PTR TO THE INTERNAL TEXT BUFFER   *\n*        IEFVKEYS      - JCL KEY EQUATES USED FOR SCANNING THE TEXT   *\n*                        BUFFER                                       *\n*                                                                     *\n* OUTPUT:                                                             *\n*        INTERNAL TEXT STRING IS FLAGGED AS REPRESENTING A JOBPROC    *\n*        AND USER PROCLIB IS ALLOCATED.                               *\n*                                                                     *\n* SUBROUTINES:                                                        *\n*        CALL TO PPMESSGE WHEN ERROR CONDITION IS DETECTED.           *\n*                                                                     *\n* EXIT:                                                               *\n*        BRANCH TO RR12RETN.                                          *\n*                                                                     *\n* SVC:                                                                *\n*        DYNAMIC ALLOCATION (SVC 99)                                  *\n*                                                                     *\n* NOTES:                                                              *\n*     1) THE TEXT SCANNING IS SOMEWHAT SIMPLIFIED SINCE ALL REQUIRED  *\n*        OPERANDS ARE THE FIRST FOR THE RELATED KEYWORDS.             *\n*                                                                     *\n*     2) ALL ERROR SITUATIONS CAUSE A CALL TO THE PPMESSGE SUBROUTINE *\n*        WHICH CAUSES THE JOB TO BE FLUSHED ON A JCL ERROR. ERROR     *\n*        MESSAGES ARE WRITTEN TO THE USER'S JCL MESSAGES DATA SET.    *\n*                                                                     *\n***********************************************************************\n         EJECT\nIEFVPP1  DS    0H                  ENTRY POINT ADDRESS\n         STM   R14,R12,12(R13)     SAVE CALLERS REGS\n         L     R1,PPANCHOR         LOAD PP WORK AREA ADDRESS\n         ST    R13,4(,R1)          STORE BACKWARD POINTER\n         ST    R1,8(,R13)          STORE FORWARD POINTER\n         LR    R13,R1              SET NEW SAVE AREA ADDRESS\n*\n         L     R11,PPWBASE1        SET UP MODULE 1ST BASE\n         L     R10,PPWBASE2        SET UP MODULE 2ND BASE\n*\n         TM    PPWSTAT0,PPW0INIT   IS JOBPROC SUPPORT ENABLED?\n         BZ    PP12RETN            NO, SIMPLY RETURN\n*\n         OI    PPWSTAT0,PPW0VPP1   INDICATE IEFVPP1 IS EXECUTING\n*\n         L     R15,PP1TRCV         LOAD CONVERTER TRACE ROUTINE ADDRESS\n         CNOP  2,4                 ALIGN TRACE PARM LIST\n         BALR  R14,R15             ENTER MODULE ID IN TRACE REC.\nPP1TRCV  DC    V(TRACE)            TRACE ROUTINE ID (IN IEFVH1)\n         DC    CL4'VPP1'           MODULE ID FOR TRACE RECORD\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        DETERMINE THE ENVIRONMENT                                    *\n*                                                                     *\n***********************************************************************\n*\n         TM    SWZ,DDSW            IS THIS A DD STATEMENT\n         BO    PP1DDCRD            BRANCH IF SO\n*\n         TM    SWA,JHS             HAD FIRST EXEC STATEMENT\n         BO    PP12RETN            RETURN IF SO\n         TM    SWZ,EXECSW          IS THIS AN EXEC STATEMENT\n         BZ    PP12RETN            BRANCH IF NOT\n*\n         TM    PSTMT+4,X'08'       IS THIS A CONVERTED PROC\n         BO    PP12RETN            RETURN IF SO\n         B     PP2ENTRY            BRANCH TO IEFVPP2\n*\n***********************************************************************\n*                                                                     *\n*        DETERMINE IF WE ARE INTERESTED IN THIS DD CARD               *\n*                                                                     *\n***********************************************************************\n*\nPP1DDCRD DS    0H\n         TM    SWY,X'01'           ANY SYNTAX ERROR IN STATEMENT ?\n         BO    PP12RETN            YES, IGNORE THE STATEMENT\n*\n         L     R1,TEXTBUFP         -> INTERNAL TEXT BUFFER\n         LA    R1,STRDKEY-TEXT(,R1)  -> START KEY\n         CLI   1(R1),1             SINGLE POSITIONAL (= DDNAME) ?\n         BNE   PP12RETN            NO, WILL GET JCL ERROR\n*\n         TM    PPWSTAT1,PPW1JPBZ   BUSY ON JOBPROC CONCAT ?\n         BO    PP1TCONC            YES, SKIP\n*\n         CLC   2(8,R1),PP1JBPRC    IS START OF JOBPROC CONCAT ?\n         BNE   PP12RETN            NO, EXIT\n*\n         TM    PPWSTAT1,PPW1HVJP   BEEN HERE BEFORE ?\n         BO    PP1ER836            YES -> MISPLACED JOBPROC ERROR\n*\n         OI    PPWSTAT1,PPW1HVJP+PPW1JPBZ BUSY, HAVE JOBPROC\n         OI    PPWSTAT1,PPW1SYSP*&SYSPROC SET DEFAULT SYSPROC=YES|NO\n         TM    SWA,JHS             FIRST EXEC STATEMENT REACHED YET?\n         BZ    PP1COMM             CONTINUE INITIALIZATION IF NOT\n         B     PP1ER836            ERROR IF SO\n*\nPP1TCONC DS    0H\n         CLI   2(R1),0             MISSING DDNAME = CONCATENATION\n         BE    PP1SETCO            YES, GO SAVE STATUS\n*\n         NI    PPWSTAT1,PPALL-PPW1JPBZ   CLEAR JOBPROC BUSY STATUS\n         CLC   2(8,R1),PP1JBPRC    A SECOND \"JOBPROC\" DD CARD ?\n         BE    PP1ER836            YES, GIVE \"MISPLACED JOBPROC\"\n         B     PP12RETN            AND EXIT\n*\nPP1SETCO DS    0H\n         TM    SWA,JHS             FIRST EXEC STATEMENT REACHED YET?\n         BO    PP1ER836            ERROR IF SO\n*\n         OI    PPWSTAT1,PPW1CNJP   SHOW CONCATENATED USER FILES\n*\nPP1COMM  DS    0H\n         MVI   PPWDSNME,C' '       CLEAR DSNAME AREA\n         MVC   PPWDSNME+1(43),PPWDSNME    TO BLANKS\n         MVC   PPWVLREF,PPWDSNME   CLEAR VOL=REF=DSNAME\n         MVC   PPWVOLSR,PPWDSNME   CLEAR VOLSER AREA\n         MVC   PPWUNIT,PPWDSNME    CLEAR THE UNIT NAME AREA\n         MVI   PPWDISP,PPASHR      SET DEFAULT DISP TO \"SHR\" SO THAT\n*                                   DISP PARAMETER MAY BE IGNORED\n*\n         PPTRACE ENT1              TRACE PP1 WITH JOBPROC CARD\n*\n         L     R2,TEXTBUFP         R2 -> INTERNAL TEXT BUFFER\n         OI    STRDINDC-TEXT(R2),DTXDYNAM FLAG DD CARD AS A DD DYNAM\n*\n         TM    PPWSTAT1,PPW1JPER   PREVIOUS ERROR NOTED ?\n         BO    PP12RETN            YES, JUST EXIT\n*\n         MVI   PPWSTAT2,0          CLEAR STATEMENT STATUS FLAGS\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        SCAN THE INTERNAL TEXT LOOKING FOR OUR PARAMETERS            *\n*                                                                     *\n***********************************************************************\n*\n         SR    R0,R0               CLEAR NUMBER/COUNT STACK (MAX = 4)\n         SR    R14,R14             USED FOR NUMBER/COUNT\n         SR    R15,R15             USED FOR LENGTH\n*\nPP1ITXT1 DS    0H\n         LR    R2,R1               SAVE KEY ADDR\n         CLI   0(R2),ENDK          END OF TEXT ?\n         BE    PP1TSTOP            BRANCH IF YES..GO TEST OPTIONS\n         IC    R14,1(,R1)          LOAD NUMBER\n         LA    R1,2(,R1)           -> LENGTH/COUNT/KEY\n         LTR   R14,R14             HAVE OPERAND ?\n         BZ    PP1ITXT1            NULL OPERAND, LOOP\n*\nPP1ITXT2 DS    0H\n         TM    0(R1),PPVLBIT       IS THIS A COUNT ?\n         BZ    PP1ITXT3            NO, SKIP\n         SLA   R0,8                PUSH NUMBER/COUNT STACK\n         BO    PP1ER800            ERROR IF OVERFLOW\n         OR    R0,R14              SAVE CURRENT NUMBER/COUNT\n         IC    R14,0(,R1)          LOAD NEW COUNT\n         LA    R1,1(,R1)           -> LENGTH/COUNT\n         N     R14,PP1MSKCL        CLEAR TOP FLAG AND TEST ZERO\n         BNZ   PP1ITXT2            HAVE COUNT, GO INSPECT NEXT\n         B     PP1ITXT5            NULL COUNT, GO POP STACK\n*\nPP1ITXT3 DS    0H\n         IC    R15,0(,R1)          LOAD LENGTH\n         LTR   R2,R2               HAVE A KEY TO INSPECT ?\n         BZ    PP1ITXT4            NO, SKIP\n         LTR   R3,R15              IS LENGTH NULL ?\n         BZ    PP1ITXT4            IGNORE IF SO\n*\n         CLI   0(R2),DSNAMEK       DSNAME ?\n         BE    PP1SETDS                 GO SAVE IT\n         CLI   0(R2),SERMK         VOLUME SERIAL ?\n         BE    PP1SETSR                 GO SAVE IT\n         CLI   0(R2),REFMK         VOLUME REF BY DSNAME ?\n         BE    PP1SETRF                 GO SAVE IT\n         CLI   0(R2),SYSPROCK      SYSPROC OPTION ?\n         BE    PP1SETSY                 GO SAVE IT\n         CLI   0(R2),UNITK         UNIT SPECIFICATION ?\n         BE    PP1SETUN                 GO SAVE IT\n*\nPP1ITXT4 DS    0H\n         SR    R2,R2               KILL KEY INSPECTION TILL NEXT KEY\n         LA    R1,1(R15,R1)        -> LENGTH/COUNT/KEY\n         BCT   R14,PP1ITXT2        LOOP FOR REST OF NUMBER/COUNT\n*\nPP1ITXT5 DS    0H\n         SRA   R0,8                OPERAND END, POP THE NUMBER/COUNT\n         BZ    PP1ITXT1            STACK EMPTY, GO DO NEXT KEY\n         LR    R14,R0              SET LOOP COUNTER\n         N     R14,PP1MSKCL        ONLY ONE BYTE VALUE\n         B     PP1ITXT2            GO TEST FOR COUNT/LENGTH NEXT\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        EXTRACT THE INTERNAL TEXT PARAMETER DATA                     *\n*                                                                     *\n***********************************************************************\n*\nPP1SETSY DS    0H\n         TM    PPWSTAT1,PPW1CNJP   PRIMARY JOBPROC STATEMENT ?\n         BO    PP1ER801            NO -> ERROR, SYSPROC NOT VALID\n         CLC   PP1SPYES(4),0(R1)   SYSPROC=YES ?\n         BE    PP1ITXT4                 IS DEFAULT, RETURN TO SCAN\n         CLC   PP1SPNO(3),0(R1)    SYSPROC=NO ?\n         BNE   PP1ER843            ELSE INVALID OPERAND\n*\n         NI    PPWSTAT1,PPALL-PPW1SYSP  SAVE NO SYSTEM PROC WANTED\n         LA    R4,PPWCONCM         SET MAXIMUM NUMBER OF PROCLIBS\n         STH   R4,PPWJPMAX         SET IT FOR LATER USE\n         B     PP1ITXT4            CONTINUE SCAN\n*\nPP1SETDS DS    0H\n         OI    PPWSTAT2,PPW2DSN    SHOW DSNAME GIVEN\n         STH   R3,PPWDSNML         SAVE STRING LENGTH\n         LA    R4,PP1DSNTB         -> TABLE ENTRY FOR PROCESSING\n         B     PP1TSTMV            MERGE\n*\nPP1SETSR DS    0H\n         OI    PPWSTAT2,PPW2VSER   SHOW VOLSER GIVEN\n         STH   R3,PPWVOLSL         SAVE STRING LENGTH\n         LA    R4,PP1SERTB         -> TABLE ENTRY FOR PROCESSING\n         B     PP1TSTMV            MERGE\n*\nPP1SETUN DS    0H\n         OI    PPWSTAT2,PPW2UNIT   SHOW UNIT GIVEN\n         STH   R3,PPWUNITL         SAVE STRING LENGTH\n         LA    R4,PP1UNITB         -> TABLE ENTRY FOR PROCESSING\n         B     PP1TSTMV            MERGE\n*\nPP1SETRF DS    0H\n         OI    PPWSTAT2,PPW2VREF   SHOW VOLUME REF BY DSNAME\n         STH   R3,PPWVLRFL         SAVE DSNAME LENGTH FOR ALLOC\n         LA    R4,PP1REFTB         -> TABLE ENTRY FOR PROCESSING\n*\nPP1TSTMV DS    0H\n         CH    R3,0(,R4)           TEST STRING LENGTH FOR MAX\n         BH    PP1ER842            \"EXCESSIVE PARAMETER LENGTH\"\n         BCTR  R3,0                GET MC LENGTH FOR MOVE\n         EX    R3,2(,R4)           SET STRING ACCORDING TO MOVE\n         B     PP1ITXT4            CONTINUE SCAN\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        MAXIMUM LENGTH OF DATA FOLLOWED BY EXECUTED INSTRUCTION      *\n*        THAT WILL MOVE THE USER SPECIFIED PARAMETER                  *\n*                                                                     *\n***********************************************************************\n*\nPP1DSNTB DC    Y(44)                       MAX STRING LENGTH\n         MVC   PPWDSNME(*-*),1(R1)         SHIFT STRING TO WORK AREA\n*\nPP1SERTB DC    Y(6)\n         MVC   PPWVOLSR(*-*),1(R1)\n*\nPP1REFTB DC    Y(44)\n         MVC   PPWVLREF(*-*),1(R1)\n*\nPP1UNITB DC    Y(8)\n         MVC   PPWUNIT(*-*),1(R1)\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CHECK FOR REQUIRED PARAMETERS                                *\n*                                                                     *\n***********************************************************************\n*\nPP1TSTOP DS    0H\n         TM    PPWSTAT2,PPW2DSN    IS DSNAME PROVIDED ?\n         BZ    PP1ER802            ERROR IF MISSING\n*\n         TM    PPWSTAT2,PPW2UNIT   UNIT PARAMETER SPECIFIED ?\n         BZ    PP1TNMSS            BRANCH IF NOT\n         CLC   PPWUNIT,=CL8'3330V' WAS MSS SPECIFIED AS UNIT?\n         BE    PP1ER811            ERROR IF SO\n         CLC   PPWUNIT,=CL8'SDG00' CHECK LOWER BOUND OF SDGXX NAME\n         BL    PP1TNMSS            OK IF LOWER\n         CLC   PPWUNIT,=CL8'SDG99' CHECK UPPER BOUND OF SDGXX NAME\n         BNH   PP1ER811            ERROR IF NOT HIGHER\n*\nPP1TNMSS DS    0H\n*\n***********************************************************************\n*                                                                     *\n*        IF IT IS DESIRED TO PROHIBIT ACCESS TO ANY DATA SETS VIA     *\n*        JOBPROC, THE CHECK CAN BE MADE HERE APPROPRIATE MESSAGE      *\n*        ROUTINE (PP1ER803) CAN BE BRANCHED TO.                       *\n*                                                                     *\n***********************************************************************\n*\n         CLC   PPWJPCNT,PPWJPMAX   ARE WE ALREADY AT THE MAXIMUM ?\n         BNL   PP1ER804            YES, GIVE UP\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        ALLOCATE THE USER'S PROCLIB                                  *\n*                                                                     *\n***********************************************************************\n*\nPP1GOALC LA    R9,PPWDARB          -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET ADDRESSABILITY TO DARB\n         MVI   S99VERB,S99VRBAL    INDICATE \"ALLOC DSNAME\" REQUEST\n         LA    R9,PPWDATXT         -> ALLOCATION TEXT POINTERS\n*\n         USING S99TUPL,R9          MAKE TEXT PTRS ADDRESSABLE\n         USING S99TUNIT,R8         MAKE TEXT UNITS ADDRESSABLE\n*\n         LH    R2,PPWJPCNT         GET CURRENT CONCATENATION NO.\n         LA    R2,1(,R2)           BUMP BY ONE\n*\n         LA    R8,PPWDDNMK         -> DDNAME RETURN TEXT UNIT SLOT\n         MVC   S99TUPAR(8),PPWDDBSE     SET THE BASE DDNAME\n         LA    R1,PPWDDSUF-1(R2)   POINT AT SUFFIX CHARACTER\n         MVC   S99TUPAR+7(1),0(R1) MOVE THE SUFFIX CHARACTER\n         ST    R8,S99TUPTR         SET PTR TO RETURN DDNAME TEXT UNIT\n*\n         LA    R8,PPWRTDSK         -> DSORG RETURN TEXT UNIT SLOT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT UNIT PTR\n         XC    S99TUPAR(2),S99TUPAR     CLEAR THE DSORG\n         ST    R8,S99TUPTR         SET PTR TO RETURN DSORG TEXT UNIT\n*\n         LA    R8,PPWDSNMK         -> DSNAME TEXT UNIT SLOT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT UNIT PTR\n         ST    R8,S99TUPTR         SET PTR TO \"DSNAME\" TEXT UNIT\n*\n         LA    R8,PPWDISPK         -> STATUS DISPOSITION TEXT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         ST    R8,S99TUPTR         SET PTR TO \"STATUS\" DISP TEXT\n*\n         LA    R8,PPWCLOSK         -> FREE=CLOSE TEXT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         ST    R8,S99TUPTR         SET PTR TO \"STATUS\" DISP TEXT\n*\n         TM    PPWSTAT2,PPW2VSER   VOLUME SERIAL NO. SPECIFIED ?\n         BZ    PP1AVREF            BRANCH IF NOT\n         LA    R8,PPWVOLSK         -> VOLUME SERIAL TEXT UNIT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         ST    R8,S99TUPTR         SET PTR TO \"VOL=SER=\" TEXT\n*\nPP1AVREF TM    PPWSTAT2,PPW2VREF   \"VOL=REF=DSN\" SPECIFIED ?\n         BZ    PP1AUNIT            BRANCH IF NOT\n         LA    R8,PPWVLRFK         -> VOLUME REFERENCE TEXT UNIT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         ST    R8,S99TUPTR         SET PTR TO \"VOL=SER=\" TEXT\n*\nPP1AUNIT TM    PPWSTAT2,PPW2UNIT   UNIT PARAMETER SPECIFIED ?\n         BZ    PP1AENDT            BRANCH IF NOT\n         LA    R8,PPWUNITK         -> \"UNIT\" TEXT UNIT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         ST    R8,S99TUPTR         SET PTR TO \"UNIT\" TEXT\n*\nPP1AENDT OI    S99TUPTR,S99TUPLN   SET END OF TEXT UNITS INDICATOR\n         LA    R1,PPWDARGL         R1 -> DYNAMIC ALLOC PARM LIST\n         OI    PPWSTAT0,PPW0DALC   INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                ALLOCATE TO USER PROCLIB\n         NI    PPWSTAT0,PPALL-PPW0DALC INDICATE WE ARE BACK\n         LTR   R15,R15             ALLOCATION SUCCESSFUL ?\n         BZ    PP1DYNOK            BRANCH IF YES\n*\n         BAL   R14,PPDAERRA        DO ERROR ANALYSIS\n         B     PP12RETN            RETURN TO CALLER\n*\nPP1DYNOK STH   R2,PPWJPCNT         UPDATE CONCATENATION NO.\n         BCTR  R2,0                SUBTRACT ONE\n         MH    R2,=Y(L'S99TULEN+8) MULTIPLE BY 10\n         LA    R2,PPWCONCD(R2)     CALCULATE DDNAME POSITION\n         MVC   2(8,R2),PPWDDNME    COPY THE ALLOCATED DDNAME\n*\n         PPTRACE ALC1              TRACE END OF ALLOCATION\n*\n         TM    PPWRTDSE,X'02'      TEST FOR DSORG=PO\n         BZ    PP1ER803            DATA SET NOT VALID IF WRONG DSORG\n*\n         L     R1,PPWTIOTA         LOAD THE TIOT ADDRESS\n         USING TIODSECT,R1         SET UP ADDRESSIBILITY\n         SLR   R15,R15             ZERO FOR INSERTS\n*\nPP1TIOLP CLI   TIOELNGH,0          CHECK FOR END OF TIOT\n         BE    PP1ER811            BRANCH IF NAME NOT FOUND (ERROR)\n         CLC   TIOEDDNM,PPWDDNME   CHECK FOR THE ALLOCATED DD ENTRY\n         BE    PP1TIOTF            BRANCH IF FOUND\n         IC    R15,TIOELNGH        LOAD THE LENGTH\n         AR    R1,R15              INCREMENT ADDRESS\n         B     PP1TIOLP            CONTINUE TIOT SCAN\n*\nPP1TIOTF ICM   R1,7,TIOEFSRT       LOAD THE UCB ADDRESS\n         BZ    PP1ER811            IF NONE, THIS IS VERY BAD\n         USING UCBDSECT,R1         TELL THE ASSEMBLER ABOUT THE UCB\n*\n         TM    UCBTBYT3,UCB3DACC   TEST FOR DIRECT ACCESS\n         BZ    PP1ER811            IF NOT, THIS CANNOT BE ALLOWED\n         TM    UCBTBYT2,UCBRVDEV   TEST FOR VIRTUAL DEVICE\n         BO    PP1ER811            THIS IS ALSO NOT ALLOWED\n*\n         DROP  R1\n*\n         PPTRACE END1              TRACE END OF PP1\n*\n         B     PP12RETN            RETURN TO CONVERTER\n*\n         DROP  R8,R9\n*\n         EJECT ,\n***********************************************************************\n*                                                                     *\n*        THE FOLLOWING ARE THE ERROR MESSAGE INTERFACES TO PPMESSGE   *\n*        FOR THE JOBPROC DD STATEMENT PROCESSOR (IEFVPP1).            *\n*                                                                     *\n***********************************************************************\n*\nPP1ER800 DS    0H\n         LA    R2,PPMS800I         SYNTAX ERROR IN JOBPROC STMT\n         B     PP1ERRNS            GO PRODUCE ERROR MESSAGE\n*\nPP1ER801 DS    0H\n         LA    R2,PPMS801I         ILLEGAL USE OF \"SYSPROC\" KEY\n         B     PP1ERRNS            GO PRODUCE ERROR MESSAGE\n*\nPP1ER802 DS    0H\n         LA    R2,PPMS802I         JOBPROC DSNAME MISSING\n         B     PP1ERRNS\n*\nPP1ER803 DS    0H\n         LA    R2,PPMS803I         DATA SET NOT VALID FOR JOBPROC\n         B     PP1ERRNS\n*\nPP1ER804 DS    0H\n         LA    R2,PPMS804I         CONCATENATION LIMIT EXCEEDED\n         B     PP1ERRNS\n*\nPP1ER811 DS    0H\n         LA    R2,PPMS811I         JOBPROC VOLUME NOT ALLOWED\n         B     PP1ERRNS\n*\nPP1ER836 DS    0H\n         LA    R2,PPMS836I         MISPLACED OR DUPLICATE JOBPROC\n         B     PP1ERRNS\n*\nPP1ER842 DS    0H\n         LA    R2,PPMS842I         EXCESSIVE PARAMETER LENGTH (SYSPROC)\n         B     PP1ERRNS\n*\nPP1ER843 DS    0H\n         LA    R2,PPMS843I         UNIDENTIFIED PARAMETER IN SYSPROC\n         B     PP1ERRNS\n*\nPP1ERRNS DS    0H\n         BAL   R14,PPMESSGE        PRODUCE ERROR MESSAGE\n         PPTRACE ERR1              TRACE ERROR IN PP1\n*\n         B     PP12RETN            RETURN TO CALLER\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CONSTANTS FOR IEFVPP1 PROCESSING                             *\n*                                                                     *\n***********************************************************************\n*\nPP1MSKCL DC    A(X'7F')            TO CLEAR FLAG BIT IN INT TEXT COUNT\nPP1JBPRC DC    AL1(7),C'&DDNAME'   INT. TEXT DEF FOR DDNAME\n*\nPP1SPYES DC    AL1(3),C'YES'       INT TEXT FORM FOR SYSPROC=YES\nPP1SPNO  DC    AL1(2),C'NO'        INT TEXT FORM FOR SYSPROC=NO\n*\n         TITLE '**** IEFVPP2 - SET USER PROCLIB ENVIRONMENT ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP2                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE IS PASSED CONTROL FROM IEFVPP1 WHEN THE FIRST EXEC     *\n* STATEMENT HAS BEEN DETECTED.                                        *\n*                                                                     *\n*      1) A CHECK IS MADE TO SEE IF A JOBPROC DD CARD HAS BEEN        *\n*         DETECTED BY IEFVPP1. IF NOT, CONTROL IS IMMEDIATELY PASSED  *\n*         TO PP12RETN.                                                *\n*                                                                     *\n*      2) IF THE JOBPROC DEFINES A CONCATENATION OR THE \"SYSPROC=YES\" *\n*         OPTION HAS BEEN CHOSEN, THE OS/VS DYNAMIC ALLOCATION        *\n*         ROUTINES ARE CALLED TO CONCATENATE THE DATA SETS ALLOCATED  *\n*         BY IEFVPP1.                                                 *\n*                                                                     *\n*      3) THE USER PROCLIB DCB IS OPENED.                             *\n*                                                                     *\n*      4) IF THE PROCLIB BUFFER OBTAINED BY CONVERTER INITIALIZATION  *\n*         IS SMALLER THAN THE USER'S PROCLIB BLKSIZE, A NEW BUFFER IS *\n*         OBTAINED AND ITS ADDRESS SET IN THE CONVERTER WORK AREA.    *\n*                                                                     *\n*      5) ALL ERRORS ENCOUNTERED DURING IEFVPP2 CAUSE AN APPROPRIATE  *\n*         ERROR MESSAGE TO BE ISSUED AND THE JOB BEING PROCESSED TO   *\n*         FAIL WITH A JCL ERROR.                                      *\n*                                                                     *\n*      6) CONTROL IS PASSED BACK TO IEFVFA VIA PP12RETN.              *\n*                                                                     *\n* INPUT:                                                              *\n*        IWA(PDCBP)    -> ORIGINAL PROCLIB DCB                        *\n*        IWA(IWAINTS4) -> ORIGINAL PROCLIB BUFFER                     *\n*                                                                     *\n* OUTPUT:                                                             *\n*        REGISTERS RESTORED                                           *\n*        IWA(PDCBP)    -> JOBPROC DCB                                 *\n*        IWA(IWAINTS4) -> TEMPORARY PROCLIB BUFFER (IF NEEDED)        *\n*        IWA(PSTMT) -> TEMPORARY PROCLIB BUFFER (IF NEEDED COPY)      *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        PPMESSGE FOR ERROR CONDITION                                 *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO IEFVFA VIA PP12RETN.                               *\n*                                                                     *\n* SVC:                                                                *\n*        DYNAMIC ALLOCATION (SVC 99)                                  *\n*        OPEN (SVC 19)                                                *\n*        GETMAIN (SVC 120)                                            *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        INDICATE WHERE WE ARE NOW                                    *\n*                                                                     *\n***********************************************************************\n*\nPP2ENTRY DS    0H\n         XI    PPWSTAT0,PPW0VPP1+PPW0VPP2 INDICATE IEFVPP2 ENTRY\n*\n***********************************************************************\n*                                                                     *\n*        STATUS ROUTING                                               *\n*                                                                     *\n***********************************************************************\n*\n         TM    PPWSTAT1,PPW1HVJP   HAVE JOBPROC TO PROCESS ?\n         BZ    PP12RETN            NO, RETURN\n*\n         PPTRACE ENT2              TRACE ENTRY INTO PP2\n*\n         TM    PPWSTAT1,PPW1JPER   ERROR NOTED IN JOBPROC ?\n         BO    PP12RETN            SO JUST RETURN\n*\n         LH    R0,PPWJPCNT         LOAD DD CARD COUNT\n         LTR   R0,R0               TEST IF ANY\n         BZ    PP12RETN            FORGET THE WHOLE THING\n*\n         TM    PPWTRPP2,PPWT2PP2   HAVE WE BEEN HERE BEFORE ?\n         BO    PP12RETN            YES, MUST HAVE BEEN A FAILURE\n*                                   DURING PROCESSING OF FIRST\n*                                    EXEC STATEMENT WHICH TURNED\n*                                     OUT TO BE AN \"EXEC PROC=\"\n         OI    PPWTRPP2,PPWT2PP2   INDICATE PROCLIB OPEN HAS BEEN\n*                                   TRIED FOR CURRENT JOB IN CASE\n*                                    CONVERTER RE-ENTERS IEFVPP2\n*                                     FOR THE SAME JOB\n         EJECT\n***********************************************************************\n*                                                                     *\n*        ALLOCATE THE SYSTEM PROCLIB DATA SETS IF NECESSARY           *\n*                                                                     *\n***********************************************************************\n*\n         TM    PPWSTAT1,PPW1SYSP   TEST IF SYSTEM PROCLIB(S) WANTED\n         BZ    PP2ANSYS            NO, SKIP\n         TM    PPWMISC,PPWMNOSY    TEST IF SYSPROC UNAVAILABLE\n         BO    PP2ANSYS            YES, SKIP CONCATENATION\n         ICM   R3,3,PPWJPSYS       GET COUNT OF SYSTEM PROCLIBS\n         BZ    PP2ANSYS            BRANCH IF NOT\n*\n         OI    PPWSTAT1,PPW1CNJP   INDICATE CONCATENATION REQUIRED\n         LA    R3,1                START SYSTEM PROCLIB COUNT AT 1\n*\nPP2ASYSL LA    R9,PPWDARB          -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET ADDRESSABILITY TO DARB\n         MVI   S99VERB,S99VRBAL    INDICATE \"ALLOC DSNAME\" REQUEST\n         LA    R9,PPWDATXT         -> ALLOCATION TEXT POINTERS\n*\n         USING S99TUPL,R9          MAKE TEXT PTRS ADDRESSABLE\n         USING S99TUNIT,R8         MAKE TEXT UNITS ADDRESSABLE\n*\n         LH    R2,PPWJPCNT         GET CURRENT CONCATENATION NO.\n         LA    R2,1(,R2)           BUMP BY ONE\n*\n         LR    R15,R3              GET SYSTEM PROCLIB NUMBER\n         BCTR  R15,0               SUBTRACT ONE\n         SLL   R15,2               MULTIPLY BY 4\n         L     R15,PPWSYSDS(R15)   LOAD PROCLIB JFCB ADDRESS\n         USING JFCBDSCT,R15\n*\n         TM    PPWMISC,PPWMVSXA    ARE WE MVS/XA\n         BZ    PP2ASYX1            BRANCH IF NOT\n         LA    R14,PP2ASYX1        GET THE ADDRESS\n         O     R14,=X'80000000'    INDICATE 31-BIT MODE\n         BSM   0,R14               GET INTO 31-BIT MODE(JFCB ABOVE 16M)\nPP2ASYX1 DS    0H\n*\n         LA    R8,PPWDDNMK         -> DDNAME RETURN TEXT UNIT SLOT\n         MVC   S99TUPAR(8),PPWDDBSE     SET THE BASE DDNAME\n         LA    R1,PPWDDSUF-1(R2)   GET THE DDNAME SUFFIX\n         MVC   S99TUPAR+7(1),0(R1) SET THE DDNAME SUFFIX\n         ST    R8,S99TUPTR         SET PTR TO RETURN DDNAME TEXT UNIT\n*\n         LA    R8,PPWDSNMK         -> DSNAME TEXT UNIT SLOT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT UNIT PTR\n         MVC   S99TULNG,=H'44'     SET DATA SET NAME LENGTH\n         MVC   S99TUPAR(44),JFCBDSNM    MOVE THE DATA SET NAME\n         ST    R8,S99TUPTR         SET PTR TO \"DSNAME\" TEXT UNIT\n*\n         LA    R8,PPWDISPK         -> STATUS DISPOSITION TEXT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         MVI   PPWDISP,PPASHR      SET DEFAULT DISP TO \"SHR\" SO THAT\n         ST    R8,S99TUPTR         SET PTR TO \"STATUS\" DISP TEXT\n*\n         LA    R8,PPWVOLSK         -> VOLUME SERIAL TEXT UNIT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         MVC   S99TULNG,=H'6'      SET VOL SER LENGTH\n         MVC   S99TUPAR(6),JFCBVOLS     MOVE THE VOLUME SERIAL NUMBER\n         ST    R8,S99TUPTR         SET PTR TO \"VOL=SER=\" TEXT\n*\n         LA    R8,PPWUNITK         -> \"UNIT\" TEXT UNIT\n         LA    R9,L'S99TUPTR(,R9)  -> NEXT TEXT PTR SLOT\n         LA    R0,8                GET UNIT NAME LENGTH\n         STH   R0,S99TULNG         SET THE UNIT NAME LENGTH\n         MVC   S99TUPAR(8),=C'SYSALLDA' SET THE UNIT NAME\n         ST    R8,S99TUPTR         SET PTR TO \"UNIT\" TEXT\n*\n         TM    PPWMISC,PPWMVSXA    ARE WE MVS/XA\n         BZ    PP2ASYX2            BRANCH IF NOT\n         LA    R14,PP2ASYX2        GET THE ADDRESS\n         BSM   0,R14               GET BACK INTO 24-BIT MODE\nPP2ASYX2 DS    0H\n*\n         OI    S99TUPTR,S99TUPLN   SET END OF TEXT UNITS INDICATOR\n         LA    R1,PPWDARGL         R1 -> DYNAMIC ALLOC PARM LIST\n         OI    PPWSTAT0,PPW0DALC   INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                ALLOCATE TO USER PROCLIB\n         NI    PPWSTAT0,PPALL-PPW0DALC INDICATE WE ARE BACK\n         LTR   R15,R15             ALLOCATION SUCCESSFUL ?\n         BZ    PP2SYSOK            BRANCH IF YES\n*\n         BAL   R14,PPDAERRA        DO ERROR ANALYSIS\n         B     PP12RETN            RETURN TO CALLER\n*\nPP2SYSOK STH   R2,PPWJPCNT         UPDATE CONCATENATION NO.\n         BCTR  R2,0                SUBTRACT ONE\n         MH    R2,=Y(L'S99TULEN+8) MULTIPLE BY 10\n         LA    R2,PPWCONCD(R2)     CALCULATE DDNAME POSITION\n         MVC   2(8,R2),PPWDDNME    COPY THE ALLOCATED DDNAME\n*\n         LA    R3,1(,R3)           INCREMENT SYSTEM PROCLIB COUNT\n         CH    R3,PPWJPSYS         ARE WE DONE?\n         BNH   PP2ASYSL            LOOP IF WE AREN'T\n*\n         DROP  R8,R9\n*\n         PPTRACE ALC2              TRACE ALLOCATION IN PP2\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CONCATENATE ALL USER AND SYSTEM PROCLIB DATA SETS TOGETHER   *\n*                                                                     *\n***********************************************************************\n*\nPP2ANSYS TM    PPWSTAT1,PPW1CNJP   REQUIRE CONCATENATION ?\n         BO    PP2CONCT            YES, PERFORM CONCATENATION\n         TM    PPWSTAT1,PPW1SYSP   TEST IF SYSTEM PROCLIB(S) WANTED\n         BZ    PP2OPEN             NO, SKIP\n         TM    PPWMISC,PPWMNOSY    TEST IF SYSPROC UNAVAILABLE\n         BO    PP2OPEN             YES, SKIP CONCATENATION\n*\nPP2CONCT LA    R9,PPWDARB          -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET DARB ADDRESSABILITY\n         MVI   S99VERB,S99VRBCC    INDICATE CONCATENATION REQUEST\n         LA    R9,PPWDATXT         -> ALLOCATION TEXT PTR SLOTS\n*\n         USING S99TUPL,R9          GET TEXT LIST ADDRESSABILITY\n         USING S99TUNIT,R8         MAKE TEXT UNITS ADDRESSABLE\n*\n         LA    R8,PPWCONCK         -> CONCATENATION TXT UNIT SLOT\n         ST    R8,S99TUPTR         SET PTR TO CONCATENATE TEXT\n         LH    R14,PPWJPCNT        LOAD COUNT OF DDNAMES\n         STH   R14,S99TUNUM        SET NO. OF DDNAMES TO CONC.\n         OI    S99TUPTR,S99TUPLN   FLAG END OF TEXT UNIT PTR'S\n*\n         LA    R1,PPWDARGL         -> ALLOC REQUEST PARM PTR\n         OI    PPWSTAT0,PPW0DALC   INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                CONCATENATE THE PROCLIB'S\n         NI    PPWSTAT0,PPALL-PPW0DALC INDICATE WE ARE BACK\n         LTR   R15,R15             WAS CONCATENATION OK ?\n         BZ    PPCSETCI            BRANCH IF YES\n*\n         BAL   R14,PPDAERRA        DO ERROR ANALYSIS\n         B     PP12RETN            RETURN TO CALLER\n*\n         DROP  R8,R9\n*\nPPCSETCI OI    PPWSTAT1,PPW1JPCN   SHOW FILES CONCATENATED\n*\n         PPTRACE CON2              TRACE CONCATENATION IN PP2\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        OPEN THE USER PROCLIB(S)                                     *\n*                                                                     *\n***********************************************************************\n*\nPP2OPEN  DS    0H\n         OI    PPWTRPP2,PPWT2OPN   SET \"OPEN\" TRACE EVENT\n         OI    PPWOCLST,PPVLBIT    SET LISTEND\n*\n         MVC   PPWDCBDD,PPWCONCD+2 SET THE FIRST DDNAME\n*\n         OPEN  (PPWDCB),MF=(E,PPWOCLST) OPEN THE FILE\n*\nPP2TOPEN DS    0H\n         NI    PPWTRPP2,PPALL-PPWT2OPN  RESET \"OPEN\" TRACE EVENT ?\n         NI    PPWSTAT0,PPALL-PPW0EREC  RESET IN CASE WE HAD ERROR\n*\n         TM    DCBOFLGS-IHADCB+PPWDCB,DCBOFOPN DID FILE OPEN OK ?\n         BZ    PP2ER812            NO, SKIP\n         OI    PPWSTAT1,PPW1OPEN   ELSE SAVE STATUS\n         PPTRACE OPN2              TRACE OPEN IN PP2\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        DETERMINE IF A NEW BUFFER IS NEEDED                          *\n*                                                                     *\n***********************************************************************\n*\n         LH    R2,DCBBLKSI-IHADCB+PPWDCB LOAD REQUIRED BUFFER LEN\n         L     R3,PDCBP            -> STANDARD PROCLIB DCB\n         USING IHADCB,R3\n*\n         CH    R2,DCBBLKSI         COMPARE BLOCK SIZES\n         BNL   *+10                BRANCH IF NEW NOT SMALLER\n         MVC   DCBBLKSI-IHADCB+PPWDCB,DCBBLKSI REPLACE SMALLER BLKSIZE\n         BNH   PP2STDCB            NO NEED FOR NEW\n*\n         GETMAIN RC,LV=(R2),LOC=(BELOW,ANY) NOW GETMAIN BUFFER\n         LTR   R15,R15             ALL OK ?\n         BNZ   PP2ER810            NOGO\n*\n         ST    R1,PPWBUFAD         SAVE PTR TO OUR BUFFER\n         OI    PPWSTAT1,PPW1BUFR   SHOW BUFFER GOTTEN\n         MVC   PPWSBUFA,IWAINTS4   SAVE ORIG BUFFER PTR\n         MVC   IWAINTS4+1(3),PPWBUFAD+1  SET NEW\n         MVC   PSTMT+1(3),PPWBUFAD+1     SET NEW (COPY)\n*\nPP2STDCB DS    0H\n         MVC   DCBREAD+1-IHADCB+PPWDCB(3),DCBREAD+1 SHIFT FIELDS THAT\n         MVC   DCBPOINT+1-IHADCB+PPWDCB(3),DCBPOINT+1  CONVERTER\n         MVC   DCBEODAD+1-IHADCB+PPWDCB(3),DCBEODAD+1  LIKES TO\n         MVC   DCBSYNAD+1-IHADCB+PPWDCB(3),DCBSYNAD+1  PLAY WITH\n         MVC   PPWSDCBA(4),PDCBP   SAVE ORIG DCB ADDR\n         MVC   PDCBP+1(3),PPWOCLST+1   AND SET TO NEW\n*\n         PPTRACE END2              TRACE END OF PP2\n*\n         B     PP12RETN            RETURN\n*\n         DROP  R3\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        ERROR ROUTINES                                               *\n*                                                                     *\n***********************************************************************\n*\nPP2ER812 DS    0H\n         LA    R2,PPMS812I         USER PROCLIB OPEN FAILED\n         B     PP2ERROR\n*\nPP2ER810 DS    0H\n         LA    R2,PPMS810I         INSUFFICIENT BUFFER STORAGE\n*\nPP2ERROR DS    0H\n         BAL   R14,PPMESSGE        GIVE USER HIS ERROR\n         PPTRACE ERR2              TRACE ERROR IN PP2\n*\n         B     PP12RETN            RETURN TO CALLER\n*\n         TITLE '**** EXIT ROUTINE FOR IEFVPP1/2 ****'\n***********************************************************************\n*                                                                     *\n* PP12RETN                                                            *\n* ********                                                            *\n*                                                                     *\n*        THIS PASSES CONTROL BACK TO IEFVFA, WHICH CALLED IEFVPP1     *\n*        AS THE CONVERTER POSTSCAN EXIT ROUTINE.  BEFORE RETURNING    *\n*        TO IEFVFA, THE \"REAL\" POST SCAN EXIT (IF ANY) IS CALLED      *\n*        AND (IF ASSEMBLED) THE INTERNAL TEXT IEFUJV EXIT CALL IS     *\n*        MADE.                                                        *\n*                                                                     *\n*                                                                     *\n* INPUT:                                                              *\n*        R13 -> DYNAMIC PROCLIB WORK AREA (PPWDSECT).                 *\n*                                                                     *\n* OUTPUT:                                                             *\n*        CURRENT ERROR RECOVERY ENVIRONMENT, IF ANY, IS CANCELLED,    *\n*        TRACE FLAGS ARE RESET, AND CONTROL IS PASSED BACK TO         *\n*        THE CALLER (IEFVFA) VIA A REGISTER 14.                       *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        SMFEXIT TO INVOKE IEFUJV FOR INTERNAL TEXT EXIT.             *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO IEFVFA VIA REGISTER 14.                            *\n*                                                                     *\n* SVC:                                                                *\n*        LINK  (SVC 6)                                                *\n*                                                                     *\n***********************************************************************\n         EJECT\nPP12RETN DS    0H\n         ICM   R15,15,PPWTXTEX     SEE IF WE HAVE A POST SCAN EXIT\n         BZ    PP12NPST            BRANCH IF NOT\n*\n         LA    R1,TEXTBUFP         POINT AT INTERNAL EXIT\n         TM    0(R15),NELEXADD     TEST FOR EXIT ADDRESS\n         BO    PP12PBAL            BRANCH IF SO\n*\n         LA    R2,CWAPSENM         POINT AT NAME\n         L     R15,CWALINK         POINT AT LINK PARM LIST\n         LINK  EPLOC=(R2),MF=(E,(1)),SF=(E,(15)) LINK TO POST SCAN EXIT\n         B     PP12NPST            AND CONTINUE ON\n*\nPP12PBAL L     R15,4(,R15)         LOAD THE ACTUAL EXIT ADDRESS\n         BALR  R14,R15             CALL THE POST SCAN EXIT\n*\nPP12NPST DS    0H\n*\n         AIF   (NOT &INTEXTX).UJVDONE\n***********************************************************************\n*                                                                     *\n* NOTES:                                                              *\n*        THIS ROUTINE IS NOT PART OF THE DYNAMIC PROCLIB SUPPORT      *\n*        PER SE, BUT IT DOES USE THE CONVERTER WORK AREA INTERFACE.   *\n*        THE PRIMARY PURPOSE OF THIS EXIT WAS THE IMPLEMENTATION      *\n*        OF A JOB RESOURCE MANAGEMENT SUBSYSTEM.                      *\n*                                                                     *\n***********************************************************************\n*\n         L     R15,WANELPTR          LOAD THE NEL ADDRESS\n         TM    NELOPSWT-NEL(R15),NELSMF TEST FOR SMF OPTION\n         BNO   PPRNOUJV              SKIP IF NO SMF\n         L     R15,CWAJMRPT          LOAD JMR ADDRESS\n         USING JMR,R15\n*\n         LA    R1,JMRJOB             POINT AT JOB LOG\n         ST    R1,JMRJOBP            SET IN PARAMETER LIST\n         MVC   JMRJCLP,TEXTBUFP      SET POINTER TO INTERNAL TEXT\n         LA    R1,JMRJCLCD           SET ADDRESS OF ENTRY CODE BYTE\n         ST    R1,JMRJCLCP           STORE IN PARAMETER LIST\n         MVI   JMRJCLCD,64           INTERNAL TEXT EXIT TYPE\n         LA    R1,JMRPTRS            POINT AT PARAMETER LIST\n*\n         DROP  R15                   DONE WITH THE JMR\n*\n         SMFEXIT IEFUJV              INVOKE UJV EXIT\n*\n.UJVDONE ANOP\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CLEAR EXECUTION TRACE INDICATORS                             *\n*                                                                     *\n***********************************************************************\n*\n         NI    PPWSTAT0,PPALL-PPW0VPP1-PPW0VPP2-PPW0EREC\n*\n         L     R13,4(,R13)         UNCHAIN SAVE AREAS\n         LM    R14,R12,12(R13)     RELOAD SAVED REGISTERS\n         BR    R14                 RETURN TO CALLER\n*\nPP12LITS LTORG ,                   FLUSH LITERALS\n*\n         TITLE '**** IEFVPP3 - JOB END CLEANUP ****'\n***********************************************************************\n*                                                                     *\n* IEFVPP3                                                             *\n* *******                                                             *\n*                                                                     *\n* THIS ROUTINE IS BRANCHED TO INSTEAD OF IEFVHF.  IF THIS IS NOT      *\n* A CONVERTER TERMINATION CALL, CONTROL IS SIMPLY PASSED TO THE       *\n* REAL IEFVHF (EXTERNAL REFERENCE IEFVHFX).  IF IT IS A TERMINATION   *\n* CALL, THE FOLLOWING IS DONE BEFORE BRANCHING TO THE REAL IEFVHF.    *\n*                                                                     *\n*    1)  RESTORE ORIGINAL PROCLIB DCB ADDRESS.                        *\n*    2)  CLOSE THE DYNAMIC PROCLIB DCB.                               *\n*    3)  DE-CONCATENATE THE DYNAMIC AND SYSTEM PROCLIB DATASETS.      *\n*    4)  DE-ALLOCATE THE DYNAMIC PROCLIB DATASETS.                    *\n*    5)  FREEMAIN THE DYNAMIC PROCLIB WORK AREA.                      *\n*    6)  RETURN TO CALLER OR ABORT IF ERROR.                          *\n*                                                                     *\n* INPUT:                                                              *\n*        IWA(PDCBP)    -> JOBPROC DCB                                 *\n*        IWA(IWAINTS4) -> TEMPORARY PROCLIB BUFFER                    *\n*                                                                     *\n* OUTPUT:                                                             *\n*        REGISTERS RESTORED                                           *\n*        IWA(PDCBP)    RESTORED FOR ORIG PROCLIB DCB                  *\n*        IWA(IWAINTS4) RESTORED FOR ORIG PROCLIB BUFFER               *\n*        IWA(PSTMT) RESTORED FOR ORIG PROCLIB BUFFER - COPY           *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        BRANCH TO IEFVHFX (ORIGINAL IEFVHF).                         *\n*                                                                     *\n* EXITS:                                                              *\n*        NORMAL    - RETURN TO CALLER                                 *\n*        ERROR     - ABORT                                            *\n*                                                                     *\n* SVC:                                                                *\n*        ESTAE (SVC 60)                                               *\n*        FREEMAIN (SVC 10)                                            *\n*        CLOSE (SVC 20)                                               *\n*        DYNALLOC (SVC 99)                                            *\n*        ABEND (SVC 13)                                               *\n*                                                                     *\n***********************************************************************\n         EJECT\nIEFVPP3  DS    0H                  ENTRY POINT ADDRESS\n         STM   R14,R12,12(R13)     SAVE CALLERS REGS\n         L     R1,PPANCHOR         LOAD PP WORK AREA ADDRESS\n*\n         ST    R13,4(,R1)          STORE BACKWARD POINTER\n         ST    R1,8(,R13)          STORE FORWARD POINTER\n         LR    R13,R1              SET NEW SAVE AREA ADDRESS\n*\n         L     R11,PPWBASE1        SET UP MODULE 1ST BASE\n         L     R10,PPWBASE2        SET UP MODULE 2ND BASE\n*\n         TM    PPWSTAT0,PPW0INIT   IS JOBPROC SUPPORT ENABLED?\n         BZ    PP3LEAVE            IF NOT, SKIP CLEANUP\n*\n         OI    PPWSTAT0,PPW0VPP3   INDICATE IEFVPP3 IS EXECUTING\n*\n         L     R15,PP3TRCV         LOAD CONVERTER TRACE ROUTINE ADDRESS\n         CNOP  2,4                 ALIGN TRACE PARM LIST\n         BALR  R14,R15             ENTER MODULE ID IN TRACE REC.\nPP3TRCV  DC    V(TRACE)            TRACE ROUTINE ID (IN IEFVH1)\n         DC    CL4'VPP3'           MODULE ID FOR TRACE RECORD\n*\n         PPTRACE ENT3              TRACE ENTRY TO PP3\n*\n         NI    PPWTRPP2,PPALL-PPWT2PP2  RESET \"IEFVPP2 ENTERED\" FLAG\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CLOSE THE DYNAMIC PROCLIB DATA SET AND FREEMAIN THE BUFFER   *\n*                                                                     *\n***********************************************************************\n*\n         TM    PPWSTAT1,PPW1OPEN   WAS DYNAMIC PROCLIB DCB OPENED ?\n         BZ    PP3DCONC            NO, SKIP\n         TM    PPWSTAT1,PPW1BUFR   WAS BUFFER GOTTEN ?\n         BZ    PP3CLOSE            NO, SKIP\n*\n         L     R1,IWAINTS4         -> GOTTEN BUFFER\n         LH    R0,DCBBLKSI-IHADCB+PPWDCB LOAD BUFFER LENGTH\n         FREEMAIN RU,LV=(0),A=(1)  RELEASE IT\n         NI    PPWSTAT1,PPALL-PPW1BUFR  CLEAR STATUS\n         MVC   IWAINTS4+1(3),PPWSBUFA+1 RESET ORIG BUFFER ADDR\n         MVC   PSTMT+1(3),PPWSBUFA+1    RESET ORIG BUFFER ADDR\n*\nPP3CLOSE DS    0H\n         L     R3,PPWSDCBA         -> ORIGINAL PROCLIB DCB ADDRESS\n         USING IHADCB,R3\n         MVC   DCBEODAD+1(3),DCBEODAD+1-IHADCB+PPWDCB PASS ON ANY\n         MVC   DCBSYNAD+1(3),DCBSYNAD+1-IHADCB+PPWDCB  CHANGES\n         MVC   DCBREAD+1(3),DCBREAD+1-IHADCB+PPWDCB\n         MVC   DCBPOINT+1(3),DCBPOINT+1-IHADCB+PPWDCB\n         DROP  R3\n*\n         MVC   PDCBP+1(3),PPWSDCBA+1   RESTORE ORIGINAL DCB ADDR\n         OI    PPWOCLST,PPVLBIT    SET VL FOR CLOSE PARMLIST\n         CLOSE (PPWDCB),MF=(E,PPWOCLST) CLOSE THE FILE\n         NI    PPWSTAT1,PPALL-PPW1OPEN  CLEAR OPEN STATUS\n*\n         PPTRACE CLS3              TRACE CLOSE IN PP3\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        DE-CONCATENATE THE PROCLIB DATA SETS IF MORE THAN ONE        *\n*                                                                     *\n***********************************************************************\n*\nPP3DCONC DS    0H\n         TM    PPWSTAT1,PPW1JPCN   ANY CONCATENATIONS DONE ?\n         BZ    PP3DALOC            NO, SKIP\n*\n         LA    R9,PPWDARB          -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET DARB ADDRESSABILITY\n         MVI   S99VERB,S99VRBDC    INDICATE DE-CONCAT REQUEST\n         LA    R9,PPWDATXT         -> TEXT UNIT PTR SLOTS\n*\n         USING S99TUPL,R9          GET TEXT PTR ADDRESSABILITY\n         USING S99TUNIT,R8         GET TEXT UNIT ADDRESSABILITY\n*\n         LA    R8,PPWCONCK         -> DE-CONCATENATE TEXT UNIT\n         LA    R0,DDCDDNAM         GET DE-CONCATENATE KEY\n         STH   R0,S99TUKEY         SET DE-CONCATENATE KEY\n         LA    R1,1                GET THE NUMBER OF DDNAMES\n         STH   R1,S99TUNUM         SET NO. OF DDNAMES\n         ST    R8,S99TUPTR         SET PTR TO DE-CONC TEXT UNIT\n         OI    S99TUPTR,S99TUPLN   FLAG END OF TEXT UNIT PTR'S\n*\n         LA    R1,PPWDARGL         -> DYNAMIC ALLOC PARM PTR\n         OI    PPWSTAT0,PPW0DALC   INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                DE-CONCATENATE PROCLIB'S\n         NI    PPWSTAT0,PPALL-PPW0DALC  INDICATE WE ARE BACK\n         LTR   R15,R15             WAS DE-CONCATENATION OK ?\n         BZ    *+8                 RETURN IF YES\n         BAL   R14,PPDAERRA        DO ERROR ANALYSIS\n*                                   AND MAYBE RETURN\n         NI    PPWSTAT1,PPALL-PPW1JPCN  CLEAR CONCATENATION STATUS\n*                                   AND MAYBE RETURN\n         DROP  R8,R9\n*\n         PPTRACE DCN3              TRACE DECONCATENATION IN PP3\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        DE-ALLOCATE THE USER AND SYSTEM PROCLIB DATA SETS            *\n*                                                                     *\n***********************************************************************\n*\nPP3DALOC DS    0H\n         LH    R0,PPWJPCNT         GET COUNT OF CONCATENATIONS\n         LTR   R0,R0               DO WE HAVE ANYTHING TO FREE ?\n         BZ    PP3NDALC            NO, GO RESET STATUS FLAGS\n*\n         LH    R2,PPWJPCNT         SET MAXIMUM TO DEALLOCATE\n         LA    R9,PPWDARB          -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            GET DARB ADDRESSABILITY\n         MVI   S99VERB,S99VRBUN    INDICATE UNALLOC REQUEST\n         LA    R9,PPWDATXT         -> TEXT UNIT PTR SLOTS\n*\n         USING S99TUPL,R9          GET TEXT PTR ADDRESSABILITY\n         USING S99TUNIT,R8         GET TEXT UNIT ADDRESSABILITY\n*\n         LA    R8,PPWDDNMK         -> DDNAME TEXT UNIT\n         LA    R0,DUNDDNAM         SET DDNAME TEXT KEY\n         STH   R0,PPWDDNMK         SET DDNAME TEXT KEY\n*\n         ST    R8,S99TUPTR         SET PTR TO DDNAME TEXT UNIT\n         OI    S99TUPTR,S99TUPLN   FLAG END OF TEXT UNIT PTR'S\n*\nPP3DEDDN DS    0H\n         LR    R15,R2              GET THE CURRENT COUNTER\n         BCTR  R15,0               SUBTRACT ONE\n         MH    R15,=Y(L'S99TULEN+8)     GET OFFSET IN DDNAME LIST\n         LA    R15,PPWCONCD(R15)   POINT TO ACTUAL NAME\n         MVC   S99TUPAR(8),2(R15)  MOVE THE DDNAME\n*\n         LA    R1,PPWDARGL         -> DYNAMIC ALLOC PARM PTR\n         OI    PPWSTAT0,PPW0DALC   INDICATE WE ARE IN ALLOC. CODE\n         DYNALLOC ,                FREE A PROCLIB DATA SET\n         NI    PPWSTAT0,PPALL-PPW0DALC  INDICATE WE ARE BACK\n*\n         LTR   R15,R15             DID DE-ALLOCATE GO OK ?\n         BZ    PP3DENXT            YES, CONTINUE ON\n         BAL   R14,PPDAERRA        NO, GO BOMB THE MOTHER\n*\nPP3DENXT BCT   R2,PP3DEDDN         DE-ALLOCATE ALL PROCLIB'S\n*\n         XC    PPWJPCNT,PPWJPCNT   RESET CONCATENATION COUNTER\n         XC    PPWSTAT1(2),PPWSTAT1     CLEAR REMAINING STATUS FLAGS\n*\n         DROP  R8,R9\n*\n         PPTRACE DAL3              END OF DEALLOCATION\n*\nPP3NDALC DS    0H\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        PASS CONTROL TO THE REAL IEFVHF                              *\n*                                                                     *\n***********************************************************************\n*\nPP3LEAVE DS    0H\n         TM    PPWMISC,PPWMESTA    TEST IF ESTAE ESTABLISHED\n         BZ    PP3NSTAE            BRANCH IF NOT\n         ESTAE 0                   CANCEL ERROR RECOVERY\n         NI    PPWMISC,PPALL-PPWMESTA   TURN OFF ESTAE EXISTS FLAG\n*\nPP3NSTAE MVC   CWATXTEX,PPWTXTEX   RESTORE EXIT LIST ADDRESS\n         XC    PPANCHOR,PPANCHOR   CLEAR ANCHOR WORD\n*\n         LR    R1,R13              LOAD THE WORK AREA ADDRESS\n         L     R13,4(,R13)         UNCHAIN SAVE AREAS\n*\n         LA    R0,PPWORKLN         LOAD LENGTH OF WORK AREA\n         FREEMAIN RU,A=(1),LV=(0)  FREE THE WORK AREA\n*\n         L     R15,PP3VHFX         LOAD THE REAL ADDRESS OF IEFVHF\n         L     R14,12(,R13)        RELOAD SAVED REG 14\n         LM    R0,R12,20(R13)      RELOAD REMAINING SAVED REGISTERS\n         BR    R15                 AND BRANCH TO REAL IEFVHF\n*\nPP3VHFX  DC    V(IEFVHFX)          REFERENCE TO REAL IEFVHF ENTRY POINT\n*\nPP3LITRL LTORG ,                   FLUSH LITERALS\n*\n         TITLE '**** DYNAMIC ALLOCATION ERROR ANALYSIS ****'\n***********************************************************************\n*                                                                     *\n* PPDAERRA                                                            *\n* ********                                                            *\n*                                                                     *\n*     THIS ROUTINE ANALYZES ERRORS DETECTED BY THE OS/VS DYNAMIC      *\n*  ALLOCATION ROUTINES. COMMON ERRORS WILL CAUSE A SPECIFIC ERROR     *\n*  MESSAGE TO BE PRODUCED WHILE ALL OTHERS WILL CAUSE A WTP MESSAGE   *\n*  GIVING A LESS PRECISE ERROR DESCRIPTION. IN THIS LATTER CASE       *\n*  THE USER WILL ALSO RECEIVE MESSAGE XXX808I INFORMING HIM THAT      *\n*  HE SHOULD EXAMINE THE WTP MESSAGE FOR ERROR DIAGNOSIS.             *\n*                                                                     *\n* INPUT:                                                              *\n*        R15 = DYNAMIC ALLOCATION RETURN CODE (NOT = 0).              *\n*                                                                     *\n* OUTPUT:                                                             *\n*        ERROR MESSAGE IS PRODUCED VIA PPMESSGE AND CONTROL IS PASSED *\n*        TO THE CALLER VIA R14.                                       *\n*                                                                     *\n*        PPWDARB   - OUR DYNAMIC ALLOCATE PARAMETER BLOCK.            *\n*        PPWDFRCD  - RETURN CODE HOLD AREA FOR DAIRFAIL(IKJEFF18)     *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        IKJEFF18 (DAIRFAIL SERVICE ROUTINE) - ISSUES WTP MESSAGE.    *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER VIA R14.                                    *\n*        ABEND THE CONVERTER BECAUSE OF UNRECOVERABLE ERROR.          *\n*                                                                     *\n* SVC:                                                                *\n*        LINK (SVC 6)                                                 *\n*        LOCATE (SVC 26)                                              *\n*        WTO (SVC 35)                                                 *\n*        ABEND (SVC 13)                                               *\n*                                                                     *\n***********************************************************************\n         EJECT\nPPDAERRA LA    R9,PPWDARB          -> DYNAMIC ALLOC REQUEST BLOCK\n         USING S99RB,R9            MAKE DARB ADDRESSABLE\n         ST    R15,PPWDFRCD        SET RETURN CODE FOR DAIRFAIL\n         ST    R14,PPWDARET        SAVE RETURN ADDRESS\n*\n***********************************************************************\n*                                                                     *\n*        ANALYZE ALLOCATION TIME ERRORS                               *\n*                                                                     *\n***********************************************************************\n*\n         CLI   S99VERB,S99VRBAL    IS THIS AN ALLOCATION FAILURE\n         BNE   PPDAERRC            NO, TRY CONCATENATION\n         CLI   S99ERROR,LOCATE     IS THIS A CATALOG LOCATE ERROR\n         BE    PPDER805            GO GIVE ERROR MESSAGE\n         CLI   S99ERROR,OBTAIN     IS THIS AN OBTAIN ERROR ?\n         BE    PPDER807            GO GIVE ERROR MESSAGE\n         CLI   S99ERROR,DALRNOTA   IS THIS A \"RESOURCE\" ERROR ?\n         BNE   PPDER808            NO, GIVE ERROR CODE IN MESSAGE\n         CLI   S99ERROR+1,DALDSNEX EXCLUSIVE \"DSN\" REQUEST ?\n         BE    PPDER813            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALDSNNA DATA SET CURRENTLY \"IN USE\" ?\n         BE    PPDER813            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALUNITE UNIT NOT AVAILABLE ?\n         BE    PPDER814            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALUNITI INVALID UNIT NAME ?\n         BE    PPDER814            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALVOLNM VOLUME NOT MOUNTED ?\n         BE    PPDER806            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALVOLNA VOLUME NOT AVAILABLE ?\n         BE    PPDER806            YES, GIVE ERROR MESSAGE\n         CLI   S99ERROR+1,DALCVOLE CVOL NOT MOUNTED ?\n         BE    PPDER815            YES, GIVE ERROR MESSAGE\n         B     PPDER808            GIVE GENERAL FAILURE MESSAGE\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        ANALYZE CONCATENATION ERRORS                                 *\n*                                                                     *\n***********************************************************************\n*\nPPDAERRC CLI   S99VERB,S99VRBCC    CONCATENATION FAILURE ?\n         BE    PPDER809            GIVE ERROR MESSAGE\n*\n***********************************************************************\n*                                                                     *\n*        ANALYZE DE-CONCATENATION ERRORS                              *\n*                                                                     *\n***********************************************************************\n*\nPPDAERRD CLI   S99VERB,S99VRBDC    DE-CONCATENATION FAILURE ?\n         BNE   PPDAERRR            NO, TRY DE-ALLOCATION\n         CLC   S99ERROR,=X'0438'   DDNAME NOT FOUND ?\n         BNE   PPDER808            NO, GIVE MESSAGE AND ABEND\n         BR    R14                 RETURN -> IGNORE ERROR\n*\n***********************************************************************\n*                                                                     *\n*        ANALYZE DE-ALLOCATION ERRORS                                 *\n*                                                                     *\n***********************************************************************\n*\nPPDAERRR CLI   S99VERB,S99VRBUN    DE-ALLOCATION FAILURE ?\n         BNER  R14                 IMPOSSIBLE ERROR -> RETURN\n         CLC   S99ERROR,=X'0438'   DDNAME NOT FOUND ?\n         BNE   PPDER808            NO, GIVE MESSAGE AND ABEND\n         BR    R14                 RETURN TO CALLER\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        DYNAMIC ALLOCATION ERROR MESSAGE ROUTINES                    *\n*                                                                     *\n***********************************************************************\n*\nPPDER805 DS    0H\n         LA    R2,PPMS805I         CATALOG SEARCH FAILED\n         B     PPDAERRM\n*\nPPDER806 DS    0H\n         LA    R2,PPMS806I         REQUIRED VOLUME NOT MOUNTED\n         TM    PPWSTAT2,PPW2VSER+PPW2UNIT VOLSER AND UNIT HARD CODED ?\n         BO    PPDVNMSG            BRANCH IF YES, NO NEED FOR LOCATE\n*\n         LOCATE PPWLOCPL           LOCATE REQUIRED VOLSER FROM CATLG\n         LTR   R15,R15             LOCATE SUCCESSFUL ?\n         TM    PPWSTAT2,PPW2VSER   WAS VOLSER CODED?\n         BNZ   PPDVNMSG            BRANCH IF NOT\n*\n         LA    R15,PPWLOCWK+6      SET LOCATED VOLUME\n         CLC   PPWLOCWK(2),=H'1'   MAKE SURE THERE IS ONLY ONE VOLUME\n         BNE   PPDVNALW            BRANCH IF IT ISN'T\n         TM    PPWLOCWK+2+2,UCB3DACC    TEST FOR DIRECT ACCESS DEVICE\n         BZ    PPDVNALW            BRANCH IF NOT DASD\n*\n         TM    PPWLOCWK+2+1,UCBRVDEV    TEST FOR MSS DEVICE\n         BZ    PPDVNMSG            BRANCH IF NOT MSS\n*\nPPDVNALW LA    R2,PPMS811I         VOLUME NOT ALLOW FOR JOBPROC\n*\nPPDVNMSG DS    0H\n         B     PPDAERRM\n*\nPPDER807 DS    0H\n         LA    R2,PPMS807I         JOBPROC DATA SET NOT ON VOLUME\n         B     PPDAERRM\n*\nPPDER808 DS    0H\n         LA    R1,PPWDFPRM         -> DAIRFAIL PARM LIST\n         LINK  EP=IKJEFF18         ISSUE WTP FOR FAILURE\n*\n         L     R14,PPWDARET        RESTORE RETURN ADDR JUST IN CASE\n*\n         CLI   S99VERB,S99VRBDC    FAILURE DURING DE-CONCAT. ?\n         BE    PPDER816            YES, ABEND THE CONVERTER\n         CLI   S99VERB,S99VRBUN    FAILURE DURING DE-ALLOCATION ?\n         BE    PPDER817            YES, ABEND THE CONVERTER\n         LA    R2,PPMS808I         PROCLIB ALLOCATION FAILED\n         B     PPDAERRM            ISSUE ERROR MESSAGE\n*\nPPDER809 DS    0H\n         LA    R1,PPWDFPRM         -> DAIRFAIL PARM LIST\n         LINK  EP=IKJEFF18         ISSUE WTP FOR FAILURE\n*\n         L     R14,PPWDARET        RESTORE RETURN ADDR JUST IN CASE\n*\n         LA    R2,PPMS809I         USER PROCLIB CONCATENATION ERR\n         B     PPDAERRM\n*\nPPDER813 DS    0H\n         LA    R2,PPMS813I         DATA SET NOT AVALIABLE EXCL'VE\n         B     PPDAERRM\n*\nPPDER814 DS    0H\n         LA    R2,PPMS814I         UNIT NOT AVAILABLE (INVALID ?)\n         B     PPDAERRM\n*\nPPDER815 DS    0H\n         LA    R2,PPMS815I         CATALOG VOLUME NOT MOUNTED\n         B     PPDAERRM\n*\nPPDER816 WTO   MF=(E,PPMSDCNM)     DECONCATENATION FAILURE\n         LA    R2,PPMS816I         GIVE USER ERROR MESSAGE TOO\n         B     PPDAERRM            GO ISSUE ERROR MESSAGE\n*\n***********************************************************************\n*                                                                     *\n*        DEALLOCATION FAILURE                                         *\n*                                                                     *\n***********************************************************************\n*\nPPDER817 WTO   MF=(E,PPMSDALM)     DEALLOCATION FAILURE\n*\n***********************************************************************\n*                                                                     *\n*        ABEND THE CONVERTER                                          *\n*                                                                     *\n***********************************************************************\n*\nPPDABEND ABEND PPABEND,DUMP,,SYSTEM LET JES CLEANUP CONVERTER\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        DISPLAY ERROR MESSAGE                                        *\n*                                                                     *\n***********************************************************************\n*\nPPDAERRM BAL   R14,PPMESSGE        GIVE USER ERROR MESSAGE\n*\n         L     R14,PPWDARET        RESTORE RETURN ADDRESS\n*\n         BR    R14                 RETURN TO CALLER\n*\nLOCATE   EQU   X'17'               CATALOG LOCATE FAILED\nOBTAIN   EQU   X'67'               DSCB OBTAIN FAILED\nDALRNOTA EQU   X'02'               RESOURCE NOT AVAILABLE\nDALDSNEX EQU   X'0C'                  UNABLE TO GET DATA SET EXCLUSIVE\nDALDSNNA EQU   X'10'                  DATA SET IN USE\nDALUNITE EQU   X'14'                  UNAVAILABLE UNIT SPECIFIED\nDALVOLNM EQU   X'18'                  REQUIRED VOLUME NOT MOUNTED\nDALUNITI EQU   X'1C'                  INVALID UNIT SPECIFIED\nDALVOLNA EQU   X'20'                  VOLUME NOT AVAILABLE\nDALCVOLE EQU   X'3C'                  CVOL NOT MOUNTED\n*\n         DROP  R9\n*\nPPDLITRL LTORG ,                   FLUSH LITERALS\n*\n         TITLE '**** ERROR MESSAGE ROUTINE ****'\n***********************************************************************\n*                                                                     *\n* PPMESSGE                                                            *\n* ********                                                            *\n*                                                                     *\n* THIS ROUTINE SETS THE JOB ERROR FLAG FOR THE CONVERTER AND PRINTS   *\n* AN ERROR MESSAGE FOR THE USER.                                      *\n*                                                                     *\n* INPUT:                                                              *\n*        R2 =  ADDRESS OF MESSAGE.                                    *\n*                                                                     *\n* OUTPUT:                                                             *\n*        IWA(WAJOBPFX) SET TO INDICATE JCL ERROR.                     *\n*        MESSAGE TO THE JCL MESSAGE DATA SET.                         *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        CONVERTER MESSAGE ROUTINE IEFVGM.                            *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER OF THIS ROUTINE.                            *\n*                                                                     *\n* SVC:                                                                *\n*        NONE                                                         *\n*                                                                     *\n***********************************************************************\n         EJECT\nPPMESSGE DS    0H\n         ST    R14,PPWMSRET        SAVE CALLER'S RETURN ADDR\n         OI    STRJINDC-TEXT+WAJOBPFX,JTXJOBFL SET JOB ERROR FLAG\n         OI    PPWSTAT1,PPW1JPER   BYPASS ALL FURTHER PROCESSING\n         OI    PPWSTAT0,PPW0VGM    INDICATE WE ARE IN PPMESSGE CODE\n*\n         L     R1,WAMSGBUF         LOAD ADDRESS OF MESSAGE BUFFER\n         MVI   0(R1),C' '          BLANK THE BUFFER OUT\n         MVC   1(159,R1),0(R1)\n*\n         SR    R14,R14             CLEAR FOR INSERT\n         IC    R14,1(,R2)          GET LENGTH OF MESSAGE\n         STH   R14,8(,R1)          STORE MESSAGE LENGTH\n         BCTR  R14,0               DECREMENT FOR MVC\n         EX    R14,PPMMVMSG        MOVE THE MESSAGE TEXT\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        CALL THE CONVERTER'S MESSAGE ROUTINE TO ISSUE THE MESSAGE    *\n*                                                                     *\n***********************************************************************\n*\n         SLR   R2,R2               ZERO MESSAGE NUMBER FOR IEFVGM\n         OI    AOSW4,AOMSGTXT      INDICATE MESSAGE TEXT IN MSG AREA\n*\n         L     R15,PPMVGM          LOAD MESSAGE ROUTINE ADDRESS\n         BALR  R14,R15             GO HAVE CONVERTER ISSUE MESSAGE\n         NI    AOSW4,255-AOMSGTXT  CLEAR THIS MESSAGE FLAG\n*\n         NI    PPWSTAT0,PPALL-PPW0VGM   INDICATE COMPLETION OF PPMESSGE\n         L     R14,PPWMSRET        RESTORE RETURN ADDRESS\n         BR    R14                 RETURN TO CALLER\n*\nPPMMVMSG MVC   10(0,R1),2(R2)      MOVE MESSAGE TEXT - EXECUTE ONLY\n*\n         EJECT\nPPMVGM   DC    V(IEFVGM)           CONVERTER MESSAGE ROUTINE\n*\nPPMLITRL LTORG ,                   FLUSH LITERALS\n*\n         TITLE '**** DEBUGGING TRACER OF LAST RESORT ****'\n***********************************************************************\n*                                                                     *\n* PPTRACER                                                            *\n* ********                                                            *\n*                                                                     *\n* THIS ROUTINE WILL PRODUCE A CONSOLE MESSAGE FOR TRACING IF THE      *\n* \"PPWMTRCE\" FLAG IS ON.                                              *\n*                                                                     *\n* INPUT:                                                              *\n*        R14 = ADDRESS OF FOUR BYTE TRACE ID.                         *\n*                                                                     *\n* OUTPUT:                                                             *\n*        MESSAGE ***869I XXXX HAS BEEN ENCOUNTERED                    *\n*        XXXX IS THE FOUR BYTE TRACE ID.                              *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE.                                                        *\n*                                                                     *\n* EXIT:                                                               *\n*        RETURN TO CALLER OF THIS ROUTINE TO FOUR AFTER REGISTER 14.  *\n*                                                                     *\n* SVC:                                                                *\n*        WTO (SVC 35)                                                 *\n*                                                                     *\n***********************************************************************\n*\nPPTRACER DS    0H\n         TM    PPWMISC,PPWMTRCE    SEE IF TRACING TURNED ON\n         BNO   4(,R14)             RETURN PAST GOODIE\n*\n         STM   R14,R12,12(R13)     SAVE THE REGISTERS\n         MVC   PPWTOWRK(PPMSTRML),PPMSTRMS SET THE WTO\n         MVC   PPWTOWRK+12(4),0(R14)   SET THE TRACE CODE\n         WTO   MF=(E,PPWTOWRK)     SO THE TERRIBLE WTO\n         LM    R14,R12,12(R13)     RESTORE THE REGISTERS\n         B     4(,R14)             RETURN TO CALLER\n*\n         TITLE '**** SYSTEM ERROR RECOVERY EXIT (ESTAE) ****'\n***********************************************************************\n*                                                                     *\n* PPESTAEX                                                            *\n* ********                                                            *\n*                                                                     *\n* THIS ROUTINE SETS THE JOB ERROR FLAG FOR THE CONVERTER AND PRINTS   *\n* AN ERROR MESSAGE FOR THE USER.                                      *\n*                                                                     *\n* INPUT:                                                              *\n*        R1 -> SYSTEM DIAGNOSTIC WORK AREA (SDWA).                    *\n*                                                                     *\n* OUTPUT:                                                             *\n*        UPDATED SDWA FOR THE APPROPRIATE ERROR RECOVERY ROUTINE.     *\n*        IWA(WAJOBPFX) SET TO INDICATE JCL ERROR.                     *\n*                                                                     *\n* EXTERNALS:                                                          *\n*        NONE.                                                        *\n*                                                                     *\n* EXIT:                                                               *\n*        NORMAL:  RETURN TO R/TM2 VIA SETRP MACRO.                    *\n*        NO SDWA: RETURN TO R/TM2 WITH R15 = 0.                       *\n*                                                                     *\n* SVC:                                                                *\n*        SDUMP (SVC 51) WHEN IN DEBUGGING MODE.                       *\n*                                                                     *\n* NOTES:                                                              *\n*        IT IS HOPED THAT SDWAPARM CONTAINS A PTR TO THE CWA.         *\n*                                                                     *\n***********************************************************************\n         EJECT\n***********************************************************************\n*                                                                     *\n*        PREPARE THE SDWA AND CHECK FOR UNRECOVERABLE ABENDS          *\n*                                                                     *\n***********************************************************************\n*\n         DROP  R11,R10             DROP THESE REGISTERS AROUND ESTAE\n*\n         USING PPESTAEX,R15        TEMPORARY BASE\nPPESTAEX DS    0H\n         C     R0,=F'12'           CHECK FOR NO SDWA\n         BE    PPESTAEZ            GIVE UP IF NONE\n         LTR   R1,R1               CHECK FOR NO SDWA\n         BE    PPESTAEZ            GIVE UP IF NONE\n*\n         STM   R14,R12,12(R13)     SAVE R/TM REGISTERS\n         LR    R11,R15             COPY THE BASE REGISTER\n         USING PPESTAEX,R11\n         DROP  R15\n*\n         LR    R3,R1               SET PTR TO SDWA\n         USING SDWA,R3             ESTABLISH SDWA ADDRESSABILITY\n*\n         L     R12,SDWAPARM        ENSURE CWA ADDRESSABILITY\n         CLC   CWAID,=X'11111111'  ENSURE THIS IS IN FACT THE CWA\n         BNE   PPESFATL            NO, DO NOT RECOVER FROM ABEND\n         ICM   R1,15,PPANCHOR      LOAD DYNAMIC PROCLIB WORK AREA\n         BZ    PPESFATL            THIS IS DEADLY IF WE DON'T\n*\n         LA    R1,PPWESAVE-PPWDSECT(,R1) POINT AT ESTAE SAVE AREA\n         ST    R13,4(,R1)          SAVE THE CURRENT SAVE AREA\n         ST    R1,8(,R13)          CHAIN THIS TOO\n         LR    R13,R1              ESTABLISH NEW SAVE AREA\n         PUSH  USING               SAVE THE CURRENT ENVIRONMENT\n         DROP  R13                 DROP THE NORMAL ADDRESSABILITY\n         USING PPWESAVE,R13        ESTABLISH SPECIAL ADDRESSABILITY\n*\n         TM    PPWMISC,PPWMTRCE    TEST IF DEBUGGING IN FORCE\n         BZ    PPESBYP             BRANCH IF NO DEBUGGING\n         SDUMP MF=(E,PPESDUMP)     INVOKE A BIG DUMP\nPPESBYP  DS    0H\n*\n         MVC   SDWARECP,PPESRECP   MOVE IN RECORDING PARMS\n         MVI   SDWADPVA,SDWAHEX    DUMP USER DATA IN HEX\n         MVI   SDWAURAL,PPWDCB-PPWSTAT0 MOVE IN LENGTH OF USER DATA\n         MVC   SDWAVRA(PPWDCB-PPWSTAT0),PPWSTAT0 TRACE INFO FOR LOGREC\n*\n         OI    STRJINDC-TEXT+WAJOBPFX,JTXJOBFL FLUSH THE BAD JOB\n         OI    PPWSTAT1,PPW1JPER   ALSO FLAG ERROR FOR US\n*\n         SR    R1,R1               CLEAR R1\n         ICM   R1,3,SDWACMPC       R1 = ABEND CODE (XXX0)\n         SRL   R1,4                DROP INSIGNIFICANT BITS\n         CLM   R1,3,=Y(PPABEND)    IS THIS A SELF INFLICTED ABEND\n         BE    PPESNREC            BRANCH IF YES\n         TM    PPWSTAT0,PPW0EREC   IS THIS A RECURSIVE ABEND ?\n         BO    PPESNREC            BRANCH IF SO\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        DETERMINE THE LOCATION OF THE ERROR                          *\n*                                                                     *\n***********************************************************************\n*\nPPESENVR OI    PPWSTAT0,PPW0EREC   INDICATE ERROR EXIT IN CONTROL\n*\n         L     R11,PPWBASE1        SET UP MODULE 1ST BASE\n         L     R10,PPWBASE2        SET UP MODULE 2ND BASE\n         USING IEFVPP,R11,R10      INFORM ASSEMBLER ABOUT IT\n*\n         TM    PPWSTAT0,PPW0VPP0   FAILURE DURING INITIALIZATION?\n         BNO   PPESPP1             NO, CONTINUE\n         MVI   SDWARECP+14,C'0'    INDICATE IEFVPP0 FAILED\n         OI    SDWAACF2,SDWARCRD   INDICATE LOGREC RECORD REQ'D\n         MVI   PPWSTAT0,0          DISABLE USER PROCLIB SUPPORT\n*\n         NI    STRJINDC-TEXT+WAJOBPFX,255-JTXJOBFL LET THE JOB GO\n         LA    R4,PP0RETRN         SET RETRY FOR GRACEFUL EXIT\n         B     PPESRTRN            RETURN TO R/TM\n*\nPPESPP1  TM    PPWSTAT0,PPW0VPP1   FAILURE IN JOBPROC PROCESSOR?\n         BNO   PPESPP2             BRANCH IF NOT\n         MVI   SDWARECP+14,C'1'    INDICATE IEFVPP1 FAILED\n         OI    SDWAACF2,SDWARCRD   INDICATE LOGREC RECORD REQ'D\n*\n         LA    R4,PP12RETN         SET RETRY ADDRESS\n         B     PPESRTRN            RETURN TO R/TM\n*\nPPESPP2  TM    PPWSTAT0,PPW0VPP2   FAILURE IN PROCLIB PREPARE?\n         BNO   PPESPP3             BRANCH IF NOT\n         MVI   SDWARECP+14,C'2'    INDICATE IEFVPP2 FAILED\n*\n         LA    R4,PP12RETN         GRACEFUL EXIT IF NOT OPEN ERR\n         OI    SDWAACF2,SDWARCRD   INDICATE LOGREC RECORD REQ'D\n*\n         TM    PPWTRPP2,PPWT2OPN   IS PROCLIB OPEN IN PROGRESS?\n         BNO   PPESRTRN            RETURN TO R/TM\n*\n         LA    R4,PP2TOPEN         SET RECOVERY PTR FOR OPEN ERR\n         NI    SDWAACF2,PPALL-SDWARCRD NO RECORDING FOR USER ERR\n         B     PPESRTRN            RETURN TO R/TM\n*\nPPESPP3  TM    PPWSTAT0,PPW0VPP3   FAILURE IN CLEANUP PROCESSING?\n         BNO   PPESNREC            NO -> THINGS ARE IN BAD SHAPE\n         MVI   SDWARECP+14,C'3'    INDICATE IEFVPP3 FAILED\n*\n         B     PPESNREC            DO NOT RECOVER FROM PP3 ERROR\n*\n         EJECT\n***********************************************************************\n*                                                                     *\n*        RETURN TO RTM                                                *\n*                                                                     *\n***********************************************************************\n*\nPPESRTRN L     R13,4(,R13)         UNCHAIN THE SAVE AREA\n*\n         SETRP RC=4,RETADDR=(R4),FRESDWA=YES,WKAREA=(R3),              X\n               REGS=(14,12)        RETURN TO R/TM\n*\nPPESNREC L     R13,4(,R13)         UNCHAIN THE SAVE AREA\n*\nPPESFATL DS    0H\n         SETRP REGS=(14,12),RC=0,RECORD=YES, * CONTINUE ABEND *        X\n               WKAREA=(R3)\n*\nPPESTAEZ DS    0H                  NO SDWA ADDRESS PROVIDED\n         SLR   R15,R15             INDICATE NO RETRY\n         BR    R14                  AND RETURN\n*\n         POP   USING               RESTORE PREVIOUS ADDRESSABILITY\n*\n         EJECT\nPPESRECP DC    CL8'IEFVH1',CL8'IEFVPP?',CL8'PPESTAEX'\nPPESHDR  DC    AL1(32),CL32'DYNAMIC PROCLIB ESTAE DUMP'\n*\nPPESDUMP SDUMP HDRAD=PPESHDR,      SVC DUMP PARAMETER LIST             X\n               SDATA=(LSQA,PSA,RGN,TRT),                               X\n               MF=L\n*\nPPELITRL LTORG ,                   FLUSH LITERALS\n*\n         TITLE '**** ALL USER AND OPERATOR ERROR MESSAGES ****'\n      IEFVPPMS 800I,                                                   X\n               'SYNTAX ERROR IN &DDNAME DD STATEMENT'\n*\n      IEFVPPMS 801I,                                                   X\n               'ILLEGAL USE OF \"SYSPROC\" OPTION'\n*\n      IEFVPPMS 802I,                                                   X\n               '&DDNAME DATA SET NAME NOT SPECIFIED'\n*\n      IEFVPPMS 803I,                                                   X\n               'DATA SET NAME NOT SPECIFIABLE FOR &DDNAME'\n*\n      IEFVPPMS 804I,                                                   X\n               '&DDNAME CONCATENATION LIMIT EXCEEDED'\n*\n      IEFVPPMS 805I,                                                   X\n               '&DDNAME DATA SET NOT FOUND IN CATALOG'\n*\n      IEFVPPMS 806I,                                                   X\n               'VOLUME CONTAINING &DDNAME DATA SET NOT MOUNTED'\n*\n      IEFVPPMS 807I,                                                   X\n               '&DDNAME DATA SET NOT ON VOLUME'\n*\n      IEFVPPMS 808I,                                                   X\n               '&DDNAME ALLOCATION FAILED'\n*\n      IEFVPPMS 809I,                                                   X\n               '&DDNAME CONCATENATION FAILED'\n*\n      IEFVPPMS 810I,                                                   X\n               'INSUFFICIENT STORAGE AVAILABLE TO ALLOCATE &DDNAME BUFFX\n               ER'\n*\n      IEFVPPMS 811I,                                                   X\n               'VOLUME OR DEVICE TYPE NOT ALLOWED FOR &DDNAME USAGE'\n*\n      IEFVPPMS 812I,                                                   X\n               '&DDNAME OPEN FAILED'\n*\n      IEFVPPMS 813I,                                                   X\n               '&DDNAME DATA SET NOT AVAILABLE UNDER REQUESTED DISPOSITX\n               ION'\n*\n      IEFVPPMS 814I,                                                   X\n               '&DDNAME DATA SET HAS INCORRECT UNIT SPECIFICATION'\n*\n      IEFVPPMS 815I,                                                   X\n               'CATALOG VOLUME REQUIRED FOR &DDNAME PROCESSING IS NOT MX\n               OUNTED'\n*\n      IEFVPPMS 816I,                                                   X\n               '&DDNAME DE-CONCATENATION FAILED'\n*\nPPMSDCNM WTO   '&MSGPFX.816I &DDNAME DE-CONCATENATION FAILED',         X\n               ROUTCDE=1,DESC=1,MF=L\nPPMSDCNL EQU   *-PPMSDCNM\n*\n      IEFVPPMS 817I,                                                   X\n               '&DDNAME DE-ALLOCATION FAILED'\n*\nPPMSDALM WTO   '&MSGPFX.817I &DDNAME DE-ALLOCATION FAILED',            X\n               ROUTCDE=1,DESC=1,MF=L\nPPMSDALL EQU   *-PPMSDALM\n*\n      IEFVPPMS 836I,                                                   X\n               'MISPLACED &DDNAME STATEMENT'\n*\n      IEFVPPMS 842I,                                                   X\n               'EXCESSIVE PARAMETER LENGTH IN THE SYSPROC FIELD'\n*\n      IEFVPPMS 843I,                                                   X\n               'UNIDENTIFIED POSITIONAL PARAMETER IN THE SYSPROC FIELD'\n*\nPPMSYSMS WTO   '&MSGPFX.852I SYSPROC LIBRARIES UNAVAILABLE',           X\n               ROUTCDE=11,DESC=6,MF=L\nPPMSYSML EQU   *-PPMSYSMS\n*\nPPMSTRMS WTO   '&MSGPFX.869I **** HAS BEEN ENCOUNTERED',               X\n               ROUTCDE=11,DESC=6,MF=L\nPPMSTRML EQU   *-PPMSTRMS\n*\n         TITLE '**** IEFVHF - CONVERTER TERMINATION FRONT-END'\n***********************************************************************\n*                                                                     *\n* IEFVHF                                                              *\n* ******                                                              *\n*                                                                     *\n*        THIS ROUTINE RECEIVES CONTROL FROM ANY BRANCH TO IEFVHF.     *\n*        IT SIMPLY BRANCHES TO IEFVPP3.  IT IS PACKAGED AS A          *\n*        SEPARATE CSECT IN ORDER TO PERFORM THE PROPER CSECT          *\n*        REPLACEMENT OF IEFVHF WHEN INSTALLED INTO LOAD MODULE        *\n*        IEFVH1.                                                      *\n*                                                                     *\n***********************************************************************\n*\nIEFVHF   CSECT\nIEFVHF   AMODE 24\nIEFVHF   RMODE 24\n*\n         BALR  R11,0               ESTABLISH BASE - THERE MAY NOT BE\n         USING *,R11               A USABLE ONE UPON ENTRY\n*\n         TM    AOSW4,CWATERM       IS THIS A TERMINATION CALL\n         BZ    VHFLEAVE            BRANCH IF IT ISN'T\n*\n         ICM   R15,15,PPANCHOR     LOAD PP WORK AREA ADDRESS\n         BZ    VHFLEAVE            BYPASS IF NEVER BUILT\n*\n         L     R15,VHFVPP3         LOAD IEFVPP3 ADDRESS\n         BR    R15                 BRANCH TO IEFVPP3\n*\nVHFLEAVE L     R15,VHFVHFX         LOAD THE REAL IEFVHF ADDRESS\n         BR    R15                 AND LET IT DO IT'S THING\n*\nVHFVPP3  DC    V(IEFVPP3)          DYNAMIC PROCLIB CLEANUP ROUTINE ADDR\nVHFVHFX  DC    V(IEFVHFX)          ADDRESS OF REAL IEFVHF\n*\n         DROP  ,\n*\n         END   ,(IEFVPP,0324,91233)\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VPPOBJ": {"ttr": 3080, "alias": false, "halfwords": 30, "notes": 0, "parms": "b' \\x00\\x00\\x00\\x00\\x910\\x1f\\x00\\x910\\x1f!W\\x00t\\x00t\\x00\\x00\\xd6\\xc2\\xd1\\xc4\\xc5\\xc3\\xd2@@@'", "ispf": {"version": "32.00", "flags": 0, "createdate": "1991-10-28T00:00:00", "modifydate": "1991-10-28T21:57:00", "lines": 116, "newlines": 116, "modlines": 0, "user": "OBJDECK"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT271/FILE271.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT271", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}