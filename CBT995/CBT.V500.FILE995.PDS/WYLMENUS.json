{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20190818184341000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 293930, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 84, "INMBLKSZ": 3120, "INMRECFM": "VB", "INMDIR": 21, "INMDSNAM": "SBGOLOB.WYLTSO.MENUS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 293930, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"SBGOLOB.WYLTSO.MENUS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 3120, "DS1LRECL": 84, "DS1RECFM": "VB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "190230", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00<'", "DS1LSTAR": "b'\\x00\\n\\x03'", "DS1TRBAL": "b'\\xd0@'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f=\\xf0\\x00\\x04\\x96\\xc0`'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f=\\xf0\\x00\\x04\\x96\\xc0`'", "b'X\\xf5\\x03(\\x00\\x00\\t)\\x00\\x08\\t*\\x00\\x03\\x00\\x0b'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"APRIOPT": {"ttr": 2561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x80\\x11\\x9f\\x00\\x80\\x13\\x7f\\x14\\x17\\x00J\\x00L\\x00\\x00[\\xe2\\xe8\\xe2\\xf1\\xf3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1980-04-28T00:00:00", "modifydate": "1980-05-16T14:17:00", "lines": 74, "newlines": 76, "modlines": 0, "user": "$SYS13"}, "text": "&-----------------------  SPF/TSO PRIMARY OPTION MENU  -------------------------\n&SELECT OPTION ===>%OPT     $\n &                                                          $USERID   -@ID\n&   0 $SPF PARMS  - SPECIFY TERMINAL AND SPF PARAMETERS     $TIME     -@TIME\n$                   1) TERMINAL  2) LOG/LIST  3) PF KEYS    $TERMINAL -@TERM\n&   1 $BROWSE     - DISPLAY SOURCE DATA OR OUTPUT LISTINGS  $PFKEYS   -@KY\n&   2 $EDIT       - CREATE OR CHANGE SOURCE DATA\n&   3 $UTILITY    - PERFORM SPF UTILITY FUNCTIONS\n$                   1) LIBRARY    3) MOVE/COPY   5) RESET      7) VTOC\n$                   2) DATA SET   4) CATALOG     6) HARDCOPY   8) OUTLIST\n&   4 $FOREGROUND - COMPILE, ASSEMBLE, OR LINK EDIT, OR DEBUG\n&   5 $BACKGROUND - COMPILE, ASSEMBLE, OR LINK EDIT\n&   6 $TSO        - ENTER TSO COMMAND OR CLIST\n&   7 $TUTORIAL   - DISPLAY INFORMATION ABOUT SPF\n&   J $JTIP       - PERFORM JTIP UTILITY FUNCTIONS\n&   P $PANVALET   - SPF/TSO/PANVALET INTERFACE\n$                               2) CHANGE    4) DISPLAY  6) PRINT    8) RETRIEVE\n$                   1) ADD      3) COPY      5) LISTDS   7) RENAME   9) STORE\n&   X $EXIT       - TERMINATE SPF USING LIST/LOG DEFAULTS\n&\n$PRESS&END KEY$TO TERMINATE SPF$\n&\n<ACTION>\n1 OPT CHAR(8) CURSOR GENHELP(TTUTOR)\n LIST   (0     ,0.1   ,0.2   ,0.3   ,1     ,2      ,\n  3      ,3.1   ,3.2   ,3.3   ,3.4   ,3.5   ,3.6   ,3.7   ,3.8   ,3.9   ,\n  4      ,4.1   ,4.2   ,4.3   ,4.4   ,4.5   ,4.6   ,4.7   ,4.8   ,\n  5     ,5.1   ,5.2   ,5.3   ,5.4   ,5.5   ,5.6   ,\n  6     ,7       ,\n  P     ,P.0   ,P.1   ,P.2   ,P.3   ,P.4   ,P.5   ,P.6    ,P.7   ,\n  P.8   ,P.9   ,\n  A     ,A.1   ,A.2   ,A.3   ,\n  J     ,\n  X  ,TESTMENU,' ',*)\n RETURN (SPFOPT,SPFOPT,SPFOPT,SPFOPT,SPFBRO,SPFEDIT,\n  SPFUTIL,SPFUDA,SPFUDA,SPFUMC,SPFUCA,SPFURS,SPFUHC,SPFUVT,SPFUOL,SPFUSC,\n  SPFUTIL,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,\n  SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,\n  SPFTSO,SPFTUTOR,\n  SPFUTIL,TKSPED0D,SPFFOR,SPFFOR,SPFFOR,SPFIPAN2,SPFFOR,SPFFOR,SPFFOR\n  SPFFOR,SPFFOR,\n  SPFUTIL,SPFFOR,SPFFOR,SPFFOR,\n  SPFIJTIP,\n  END,SPFTMENU,' ',?);\n2 OPT CHAR(8) INIT($PARM2)\n LIST   (0    ,0.1  ,0.2  ,0.3  ,3   ,3.1 ,3.2 ,3.8  ,3.9   ,\n  4   ,4.1  ,4.2  ,4.3  ,4.4  ,4.5  ,4.6  ,4.7  ,4.8  ,\n  5    ,5.0  ,5.1  ,5.2  ,5.3  ,5.4  ,5.5  ,5.6  ,7,\n  P    ,P.0  ,P.1  ,P.2  ,P.3  ,P.4  ,P.5  ,P.6  ,P.7,\n  P.8  ,P.9  ,\n  A    ,A.1  ,A.2  ,A.3  ,\n  J)\n RETURN (OPT00,OPT01,OPT02,OPT03,UTIL,UDA1,UDA2,UOL01,SCRPTA,\n  FORA,FOR01,FOR02,FOR03,FOR04,FOR05,FOR06,FOR07,FOR08,\n  *JOBA,JOB00,JOB01,JOB02,JOB03,JOB04,JOB05,JOB06,T,\n  VPAN,VPANE,VPAN01,VPAN02,VPAN03,VPAN04,VPAN05,VPAN06,VPAN07,\n  VPAN08,VPAN09,\n  VASM2,V$AR,V$BK,V$SM,\n  VJTIP);\n3 ID CHAR(8) INIT($PARM3);\n4 TIME CHAR(5) INIT($PARM4);\n5 DATE CHAR(8) INIT($PARM5);\n6 DATEJ CHAR(6) INIT($PARM6);\n7 KY CHAR(2) INIT($PARM7);\n8 TERM CHAR(8) INIT($PARM8);\n9 MODE CHAR(1) INIT($PARM9)\n LIST   (MONO,DUAL)\n RETURN (M   ,D   );\n10 PFX CHAR(8) INIT($PARM10);\n11 STEP CHAR(8) INIT($PARM11);\n12 * FIXED(8) INIT(0);  ** RESERVED **\n13 * CHAR(8) INIT(' '); ** RESERVED **\n14 * FIXED(31) INIT(0); ** RESERVED **\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "APRIOPT0": {"ttr": 2334, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x80\\x13\\x7f\\x00\\x80\\x13\\x7f\\x14\\x16\\x00L\\x00L\\x00\\x00[\\xe2\\xe8\\xe2\\xf1\\xf3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1980-05-16T00:00:00", "modifydate": "1980-05-16T14:16:00", "lines": 76, "newlines": 76, "modlines": 0, "user": "$SYS13"}, "text": "&-----------------------  SPF/TSO PRIMARY OPTION MENU  -------------------------\n&SELECT OPTION ===>%OPT     $\n &                                                          $USERID   -@ID\n&   0 $SPF PARMS  - SPECIFY TERMINAL AND SPF PARAMETERS     $TIME     -@TIME\n$                   1) TERMINAL  2) LOG/LIST  3) PF KEYS    $TERMINAL -@TERM\n&   1 $BROWSE     - DISPLAY SOURCE DATA OR OUTPUT LISTINGS  $PFKEYS   -@KY\n&   2 $EDIT       - CREATE OR CHANGE SOURCE DATA\n&   3 $UTILITY    - PERFORM SPF UTILITY FUNCTIONS\n$                   1) LIBRARY    3) MOVE/COPY   5) RESET      7) VTOC\n$                   2) DATA SET   4) CATALOG     6) HARDCOPY   8) OUTLIST\n&   4 $FOREGROUND - COMPILE, ASSEMBLE, OR LINK EDIT, OR DEBUG\n&   5 $BACKGROUND - COMPILE, ASSEMBLE, OR LINK EDIT\n&   6 $TSO        - ENTER TSO COMMAND OR CLIST\n&   7 $TUTORIAL   - DISPLAY INFORMATION ABOUT SPF\n&   A $ASM2       - ASM2 DISK STORAGE MANAGEMENT SYSTEM\n$                   1) ARCHIVE  2) BACKUP    3) SPACE MANAGEMENT\n&   J $JTIP       - PERFORM JTIP UTILITY FUNCTIONS\n&   P $PANVALET   - SPF/TSO/PANVALET INTERFACE\n$                               2) CHANGE    4) DISPLAY  6) PRINT    8) RETRIEVE\n$                   1) ADD      3) COPY      5) LISTDS   7) RENAME   9) STORE\n&   X $EXIT       - TERMINATE SPF USING LIST/LOG DEFAULTS\n&\n$PRESS&END KEY$TO TERMINATE SPF$\n&\n<ACTION>\n1 OPT CHAR(8) CURSOR GENHELP(TTUTOR)\n LIST   (0     ,0.1   ,0.2   ,0.3   ,1     ,2      ,\n  3      ,3.1   ,3.2   ,3.3   ,3.4   ,3.5   ,3.6   ,3.7   ,3.8   ,3.9   ,\n  4      ,4.1   ,4.2   ,4.3   ,4.4   ,4.5   ,4.6   ,4.7   ,4.8   ,\n  5     ,5.1   ,5.2   ,5.3   ,5.4   ,5.5   ,5.6   ,\n  6     ,7       ,\n  P     ,P.0   ,P.1   ,P.2   ,P.3   ,P.4   ,P.5   ,P.6    ,P.7   ,\n  P.8   ,P.9   ,\n  A     ,A.1   ,A.2   ,A.3   ,\n  J     ,\n  X  ,TESTMENU,' ',*)\n RETURN (SPFOPT,SPFOPT,SPFOPT,SPFOPT,SPFBRO,SPFEDIT,\n  SPFUTIL,SPFUDA,SPFUDA,SPFUMC,SPFUCA,SPFURS,SPFUHC,SPFUVT,SPFUOL,SPFUSC,\n  SPFUTIL,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,\n  SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,\n  SPFTSO,SPFTUTOR,\n  SPFUTIL,TKSPED0D,SPFFOR,SPFFOR,SPFFOR,SPFIPAN2,SPFFOR,SPFFOR,SPFFOR\n  SPFFOR,SPFFOR,\n  SPFUTIL,SPFFOR,SPFFOR,SPFFOR,\n  SPFIJTIP,\n  END,SPFTMENU,' ',?);\n2 OPT CHAR(8) INIT($PARM2)\n LIST   (0    ,0.1  ,0.2  ,0.3  ,3   ,3.1 ,3.2 ,3.8  ,3.9   ,\n  4   ,4.1  ,4.2  ,4.3  ,4.4  ,4.5  ,4.6  ,4.7  ,4.8  ,\n  5    ,5.0  ,5.1  ,5.2  ,5.3  ,5.4  ,5.5  ,5.6  ,7,\n  P    ,P.0  ,P.1  ,P.2  ,P.3  ,P.4  ,P.5  ,P.6  ,P.7,\n  P.8  ,P.9  ,\n  A    ,A.1  ,A.2  ,A.3  ,\n  J)\n RETURN (OPT00,OPT01,OPT02,OPT03,UTIL,UDA1,UDA2,UOL01,SCRPTA,\n  FORA,FOR01,FOR02,FOR03,FOR04,FOR05,FOR06,FOR07,FOR08,\n  *JOBA,JOB00,JOB01,JOB02,JOB03,JOB04,JOB05,JOB06,T,\n  VPAN,VPANE,VPAN01,VPAN02,VPAN03,VPAN04,VPAN05,VPAN06,VPAN07,\n  VPAN08,VPAN09,\n  VASM2,V$AR,V$BK,V$SM,\n  VJTIP);\n3 ID CHAR(8) INIT($PARM3);\n4 TIME CHAR(5) INIT($PARM4);\n5 DATE CHAR(8) INIT($PARM5);\n6 DATEJ CHAR(6) INIT($PARM6);\n7 KY CHAR(2) INIT($PARM7);\n8 TERM CHAR(8) INIT($PARM8);\n9 MODE CHAR(1) INIT($PARM9)\n LIST   (MONO,DUAL)\n RETURN (M   ,D   );\n10 PFX CHAR(8) INIT($PARM10);\n11 STEP CHAR(8) INIT($PARM11);\n12 * FIXED(8) INIT(0);  ** RESERVED **\n13 * CHAR(8) INIT(' '); ** RESERVED **\n14 * FIXED(31) INIT(0); ** RESERVED **\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "UDA1": {"ttr": 2326, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x80\\x03\\x8f\\x00\\x80\\x03\\x8f#A\\x00&\\x00&\\x00\\x00[\\xe2\\xe8\\xe2\\xf1\\xf3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1980-02-07T00:00:00", "modifydate": "1980-02-07T23:41:00", "lines": 38, "newlines": 38, "modlines": 0, "user": "$SYS13"}, "text": "&----------------------------  LIBRARY UTILITY  --------------------------------\n&SELECT OPTION ===>%CODE                                                       $\n&\n&   C$- COMPRESS DATASET                   &P$- PRINT MEMBER\n&   X$- PRINT INDEX LISTING                &R$- RENAME MEMBER\n&   L$- PRINT ENTIRE DATASET               &D$- DELETE MEMBER\n&   BLANK$- DISPLAY MEMBER LIST            &B$- BROWSE MEMBER\n$\n$SPF LIBRARY DATASET:\n$   PROJECT&===>%PROJECT $\n$   LIBRARY&===>%LIBRARY $\n$   TYPE   &===>%TYPE    $\n$   MEMBER &===>%MEMBER  $ (IF OPTION \"P\", \"R\", \"D\", OR \"B\" SELECTED)\n$   NEWNAME&===>%NEWNAME $ (IF OPTION \"R\" SELECTED)\n$\n$OTHER PARTITIONED OR SEQUENTIAL DATASET:\n$   DATASET NAME &===>%DSN                                                     $\n$   VOLUME SERIAL&===>%VOL   $  (IF NOT CATALOGED)\n$\n$DATASET PASSWORD&===>\u00acPSWD    $(IF PASSWORD PROTECTED)\n<ACTION>\n 1 CODE    CHAR(1)  INIT($PARM1) CURSOR   GENHELP(TUL)\n           LIST  (C,L,X,P,R,D,B,' ',*)\n           RETURN(Z,L,X,P,R,D,B,M  ,?);\n 2 PROJECT CHAR(8)  INIT($PARM2) NOCURSOR;\n 3 LIBRARY CHAR(8)  INIT($PARM3) NOCURSOR;\n 4 TYPE    CHAR(8)  INIT($PARM4) NOCURSOR;\n 5 DSN     CHAR(56) INIT($PARM5) NOCURSOR;\n 6 VOL     CHAR(6)  INIT($PARM6) NOCURSOR;\n 7 PSWD    CHAR(8)  INIT($PARM7) NOCURSOR;\n 8 MEMBER  CHAR(8)  INIT($PARM8) NOCURSOR;\n 9 NEWNAME CHAR(8)  INIT($PARM9) NOCURSOR;\n10 *       CHAR(8)  INIT('SPFCOPY '); - COMPRESS PGM NAME IF NOT IEBCOPY\n11 *       CHAR(8)  INIT('PPRINTED'); - PRINT MEMBER OPT/RESPONSE\n12 *       CHAR(8)  INIT('RRENAMED'); - RENAME MEMBER OPT/RESPONSE\n13 *       CHAR(8)  INIT('DDELETED'); - DELETE MEMBER OPT/RESPONSE\n14 *       CHAR(8)  INIT('B       '); - BROWSE MEMBER OPT/RESPONSE\n<END>\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "V$AR": {"ttr": 2311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\x00\\x00\\x80\\x01O\\x00\\x80\\x03\\x9f\\x08R\\x00>\\x00=\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1980-01-14T00:00:00", "modifydate": "1980-02-08T08:52:00", "lines": 62, "newlines": 61, "modlines": 0, "user": "TYD9801"}, "text": "&------------------------ ASM2 ARCHIVE UTILITY ---------------------------------\n&SELECT OPTION ===>%OPT                                                        $\n&\n&   A$- QUEUE A DATASET TO BE ARCHIVED\n&   R$- QUEUE A DATASET TO BE RELOADED FROM AN ARCHIVE TAPE\n&   BLANK$- INQUIRE ABOUT ARCHIVED DATASET(S)\n$\n$COMPLETE DSN (OR PARTIAL DSN, WITHOUT QUOTES, FOR INQUIRY.)\n$  NAME &===>%DSN                                                $\n$\n$FOR ARCHIVE REQUEST (OPTION A)\n$   RETENTION  &===>%RET$  PERMANENT ARCHIVE &===>%P$ (Y OR N)\n$   QUALIFIER  &===>%QUAL    $\n$   COMMENT    &===>%CMT                           $\n$\n$FOR INQUIRY REQUEST (OPTION 'BLANK')\n$   CYCLE      &===>%CYC$  (ONLY DATASETS ARCHIVED WITHIN LAST NNN DAYS)\n$   COMMENT    &===>%C$    (ENTER 'Y' TO DISPLAY COMMENTS)\n$\n$\n$\n$\n$\n$\n<ACTION>\n 1 OPT     CHAR (1)  INIT(' ')     LIST   (A,R,' ',*) GENHELP(VT$AR)\n                       CURSOR      RETURN (A,R,' ',?);\n 2 OPT     CHAR (1)  INIT(' ')     LIST   ('A' ,  * )  KEY(SW1)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 3 OPT     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW2)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 4 OPT     CHAR (1)  INIT(' ')     LIST   ('R' ,  * )  KEY(SW3)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 5 DSN     CHAR (51) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n 6 DSN     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW8)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 7 RET     CHAR (3)  INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n 8 RET     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW4)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 9 P       CHAR (1)  INIT('N')     LIST   ('Y' , 'N',  * )\n                     NOCURSOR      RETURN ('Y' , 'N',  ? );\n10 P       CHAR (1)  INIT('N')     LIST   ('Y' ,  * )  KEY(SW6)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n11 QUAL    CHAR (8)  INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n12 QUAL    CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW5)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n13 CMT     CHAR (30) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n14 CMT     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW7)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n15 C       CHAR (1)  INIT('N')     LIST   ('Y' , 'N',  * )\n                     NOCURSOR      RETURN ('Y' , 'N',  ? );\n16 C       CHAR (1)  INIT('N')     LIST   ('Y' ,  * )  KEY(SWB)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n17 CYC     CHAR (3)  INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n18 CYC     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW9)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "V$BK": {"ttr": 2063, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x00\\x00\\x80\\x01O\\x00\\x80\\x02\\x1f\\x07)\\x00:\\x00=\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "1980-01-14T00:00:00", "modifydate": "1980-01-21T07:29:00", "lines": 58, "newlines": 61, "modlines": 0, "user": "TYD9801"}, "text": "&------------------------ ASM2 BACKUP UTILITY ----------------------------------\n&SELECT OPTION ===>%OPT                                                        $\n&\n&   B$- QUEUE A DATASET TO BE BACKED UP\n&   R$- QUEUE A DATASET TO BE RELOADED FROM AN BACKUP TAPE\n&   BLANK$- INQUIRE ABOUT BACKED UP DATASET(S)\n$\n$COMPLETE DSN (OR PARTIAL DSN, WITHOUT QUOTES, FOR INQUIRY)\n$  NAME &===>%DSN                                                $\n$\n$FOR ARCHIVE REQUEST (OPTION B)\n$   RETENTION  &===>%RET$\n$   QUALIFIER  &===>%QUAL    $\n$   COMMENT    &===>%CMT                           $\n$\n$FOR INQUIRY REQUEST (OPTION 'BLANK')\n$   CYCLE      &===>%CYC$ (ONLY DATASETS BACKED UP WITHIN LAST NNN DAYS)\n$   COMMENT    &===>%C$   (ENTER 'Y' TO DISPLAY COMMENTS)\n$\n$\n$\n$\n$\n$\n<ACTION>\n 1 OPT     CHAR (1)  INIT(' ')     LIST   (B,R,' ',*) GENHELP(VT$BK)\n                       CURSOR      RETURN (B,R,' ',?);\n 2 OPT     CHAR (1)  INIT(' ')     LIST   ('B' ,  * )  KEY(SW1)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 3 OPT     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW2)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 4 OPT     CHAR (1)  INIT(' ')     LIST   ('R' ,  * )  KEY(SW3)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 5 DSN     CHAR (51) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n 6 DSN     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW8)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 7 RET     CHAR (3)  INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n 8 RET     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW4)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n10 QUAL    CHAR (8)  INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n11 QUAL    CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW5)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n12 CMT     CHAR (30) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n13 CMT     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW7)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n14 C       CHAR (1)  INIT('N')     LIST   ('Y' , 'N',*)\n                     NOCURSOR      RETURN ('Y' , 'N',?);\n15 C       CHAR (1)  INIT('N')     LIST   ('Y' , 'N')  KEY(SWB)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n16 CYC     CHAR (3)  INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n17 CYC     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW9)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "V$SM": {"ttr": 2061, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x00\\x00\\x80\\x01O\\x00\\x80\\x01\\x8f\\x168\\x000\\x00<\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "1980-01-14T00:00:00", "modifydate": "1980-01-18T16:38:00", "lines": 48, "newlines": 60, "modlines": 0, "user": "TYD9801"}, "text": "&---------------- ASM2 DISK SPACE MANAGEMENT UTILITY ---------------------------\n&SELECT OPTION ===>%OPT                                                        $\n&\n&   BLANK$- DISPLAY DISK DATASET SPACE INFORMATION\n&   U$- DISPLAY DISK DATASET USAGE INFORMATION\n&   C$- COMPRESS DATASET WITHOUT RELEASING UNUSED SPACE\n&   R$- RELEASE UNUSED SPACE IN DATASETS (COMPRESS OPTIONAL)\n&   E$- RESET END-OF-FILE TO BEGINNING OF SEQUENTIAL DATASET\n$\n$TYPE OF NAME  &===>%T$     (L=INDEX LEVELS, BLANK=FULL DSN))\n$   NAME       &===>%DSN                                         $\n$\n$OPTIONS FOR RELEASE/COMPRESS OPTION (OPTION 'R','C')\n$   COMPRESS   &===>%C$     (FOR PDS ONLY, 'Y' OR 'N')\n$   BACKUP     &===>%B$     (FOR COMPRESS ONLY, 'Y' OR 'N')\n$   SAVE       &===>%S    $ (SAVE NNNNN UNUSED TRACKS)\n<ACTION>\n 1 OPT     CHAR (1)  INIT(' ')     LIST   (U,R,E,C,' ',*) GENHELP(VT$SM)\n                       CURSOR      RETURN (U,R,E,C,' ',?);\n 2 OPT     CHAR (1)  INIT(' ')     LIST   ('U' ,  * )  KEY(SW1)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 3 OPT     CHAR (1)  INIT(' ')     LIST   ('U' ,  * )  KEY(SW2)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 4 OPT     CHAR (1)  INIT(' ')     LIST   ('R' ,  * )  KEY(SW7)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 5 OPT     CHAR (1)  INIT(' ')     LIST   ('E' ,  * )  KEY(SW8)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 6 OPT     CHAR (1)  INIT(' ')     LIST   ('C' ,  * )  KEY(SW9)\n                     NOCURSOR      RETURN (' ' , '\u00ac');\n 7 DSN     CHAR (44) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n 8 DSN     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW3)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 9 T       CHAR (1)  INIT(' ')     LIST   (' ' , 'L' ,  * )\n                     NOCURSOR      RETURN (' ' , 'L' ,  ? ); OPTIONAL\n10 T       CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW4)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n11 T       CHAR (1)  INIT(' ')     LIST   ('L' ,  * )  KEY(SW5)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n12 C       CHAR (2)  INIT('Y')     LIST   ('N' ,  'Y' ,  * )\n                     NOCURSOR      RETURN ('NO' , ' ' ,  ? ); REQUIRED\n13 B       CHAR (2)  INIT('Y')     LIST   ('N' ,  'Y' ,  * )\n                     NOCURSOR      RETURN ('NO' , ' ' ,  ? ); REQUIRED\n14 S       CHAR (5)  INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n15 S       CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW6)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VAPRIOPT": {"ttr": 2322, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00y(\\x8f\\x00\\x80\\x10\\x8f\\x14\\x11\\x00\\x9d\\x00\\x90\\x00\\x00[\\xc3\\xe2\\xc7\\xf0\\xf5@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1979-10-15T00:00:00", "modifydate": "1980-04-17T14:11:00", "lines": 157, "newlines": 144, "modlines": 0, "user": "$CSG05"}, "text": "&-----------------------  SPF/TSO PRIMARY OPTION MENU  -------------------------\n&SELECT OPTION ===>%OPT     $\n&                                                           $USERID   -@ID\n&   0 $SPF PARMS  - SPECIFY TERMINAL AND SPF PARAMETERS     $TIME     -@TIME\n$                   1) TERMINAL  2) LOG/LIST  3) PF KEYS    $TERMINAL -@TERM\n&   1 $BROWSE     - DISPLAY SOURCE DATA OR OUTPUT LISTINGS  $PFKEYS   -@KY\n&   2 $EDIT       - CREATE OR CHANGE SOURCE DATA\n&   3 $UTILITY    - PERFORM SPF UTILITY FUNCTIONS\n$                   1) LIBRARY    3) MOVE/COPY   5) RESET      7) VTOC\n$                   2) DATA SET   4) CATALOG     6) HARDCOPY   8) OUTLIST\n&   4 $FOREGROUND - COMPILE, ASSEMBLE, OR LINK EDIT, OR DEBUG\n&   5 $BACKGROUND - COMPILE, ASSEMBLE, OR LINK EDIT\n&   6 $TSO        - ENTER TSO COMMAND OR CLIST\n&   7 $TUTORIAL   - DISPLAY INFORMATION ABOUT SPF\n&   A $ASM2       - ASM2 DISK STORAGE MANAGEMENT SYSTEM\n$                   1) ARCHIVE  2) BACKUP    3) SPACE MANAGEMENT\n&   P $PANVALET   - SPF/TSO/PANVALET INTERFACE\n$                               2) CHANGE    4) DISPLAY  6) PRINT    8) RETRIEVE\n$                   1) ADD      3) COPY      5) LISTDS   7) RENAME   9) STORE\n&   J $JTIP       - PERFORM JTIP UTILITY FUNCTIONS\n&   X $EXIT       - TERMINATE SPF USING LIST/LOG DEFAULTS\n&\n&\n$PRESS&PF3$(END KEY) TO TERMINATE SPF$\n&\n<ACTION>\n1 OPT CHAR(8) CURSOR GENHELP(TTUTOR)\n LIST    (0       ,0.1     ,0.2     ,0.3     ,\n  1       ,\n  2       ,\n  3       ,3.1     ,3.2     ,3.3     ,3.4     ,3.5     ,3.6     ,3.7    ,\n  3.8     ,3.9     ,\n  4       ,4.1     ,4.2     ,4.3     ,4.4     ,4.5     ,4.6     ,4.7    ,\n  4.8     ,\n  5       ,5.1     ,5.2     ,5.3     ,5.4     ,5.5     ,5.6     ,5.7    ,\n  5.8     ,\n  6       ,\n  7       ,\n  8       ,8.0     ,8.1     ,8.2     ,8.3     ,8.4     ,8.5     ,8.6    ,\n  8.7     ,8.8     ,8.9     ,\n  9       ,\n  A       ,A.1     ,A.2     ,A.3     ,\n  C       ,\n  J       ,\n  X       ,TESTMENU,' '    ,*)\n RETURN  (SPFOPT  ,SPFOPT  ,SPFOPT  ,SPFOPT  ,\n  SPFBRO  ,\n  SPFEDIT ,\n  SPFUTIL ,SPFUDA  ,SPFUDA  ,SPFUMC  ,SPFUCA  ,SPFURS  ,SPFUHC  ,SPFUVT  ,\n  SPFUOL  ,SPFUTIL ,\n  SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,SPFUTIL ,\n  SPFUTIL ,\n  SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,SPFJOB  ,\n  SPFJOB  ,\n  SPFTSO  ,\n  SPFTUTOR,\n  SPFUTIL ,TKSPED0D,SPFFOR  ,SPFFOR  ,SPFFOR  ,TKSPBR0D,SPFFOR  ,SPFFOR ,\n  SPFFOR  ,SPFFOR  ,SPFFOR  ,\n  SPFUTIL ,\n  SPFUTIL ,SPFFOR  ,SPFFOR  ,SPFFOR  ,\n  TKSUOL0D,\n  TKSJOL0D,\n  END     ,SPFTMENU,' '   ,?);\n2 OPT CHAR(8) INIT($PARM2)\n LIST     (0       ,0.1     ,0.2     ,0.3     ,\n  3       ,3.1     ,3.2     ,3.8     ,3.9     ,\n  4       ,4.1     ,4.2     ,4.3     ,4.4     ,4.5     ,4.6     ,4.7     ,\n  4.8     ,\n  5       ,5.1     ,5.2     ,5.3     ,5.4     ,5.5     ,5.6     ,5.7     ,\n  5.8     ,\n  7       ,\n  8       ,8.0     ,8.1     ,8.2     ,8.3     ,8.4     ,8.5     ,8.6     ,\n  8.7     ,8.8     ,8.9     ,\n  9       ,\n  A       ,A.1     ,A.2     ,A.3     ,\n  C       ,\n  J       )\n RETURN   (OPT00   ,OPT01   ,OPT02   ,OPT03   ,\n  UTIL    ,UDA1    ,UDA2    ,UOL01   ,VNOTSUP ,\n  VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,VNOTSUP ,\n  VNOTSUP ,\n  *JOBA   ,JOB01   ,JOB02   ,JOB03   ,JOB04   ,JOB05   ,JOB06   ,JOB07   ,\n  JOB08   ,\n  T       ,\n  VPAN    ,VPANE   ,VPAN01  ,VPAN02  ,VPAN03  ,VPAN04  ,VPAN05  ,VPAN06  ,\n  VPAN07  ,VPAN08  ,VPAN09  ,\n  VINDEV  ,\n  VASM2   ,V$AR    ,V$BK    ,V$SM    ,\n  VUOL01  ,\n  VJTIP   );\n 3 ID       CHAR (8) INIT($PARM3);\n 4 TIME     CHAR (5) INIT($PARM4);\n 5 DATE     CHAR (8) INIT($PARM5);\n 6 DATEJ    CHAR (6) INIT($PARM6);\n 7 KY       CHAR (2) INIT($PARM7);\n 8 TERM     CHAR (8) INIT($PARM8);\n 9 MODE     CHAR (1) INIT($PARM9)\n            LIST   (MONO,DUAL)\n            RETURN (M   ,D   );\n10 PFX      CHAR (8) INIT($PARM10);\n11 STEP     CHAR (8) INIT($PARM11);\n12 *        FIXED (8) INIT(0);  ** RESERVED **\n13 *        CHAR (8) INIT(' '); ** RESERVED **\n14 *        FIXED (31) INIT(0); ** RESERVED **\n<END>\n***\n*** ORIGINAL STATEMENTS\n***\n&-----------------------  SPF/TSO PRIMARY OPTION MENU  -------------------------\n&SELECT OPTION ===>%OPT     $\n &                                                          $USERID   -@ID\n &  0 $SPF PARMS  - SPECIFY TERMINAL AND SPF PARAMETERS     $TIME     -@TIME\n&   1 $BROWSE     - DISPLAY SOURCE DATA OR OUTPUT LISTINGS  $TERMINAL -@TERM\n&   2 $EDIT       - CREATE OR CHANGE SOURCE DATA            $PF KEYS  -@KY\n&   3 $UTILITY    - PERFORM SPF UTILITY FUNCTIONS\n&   4 $FOREGROUND - COMPILE, ASSEMBLE, LINK EDIT, OR DEBUG\n&   5 $BACKGROUND - COMPILE, ASSEMBLE, OR LINK EDIT\n&   6 $TSO        - ENTER TSO COMMAND OR CLIST\n&   7 $TUTORIAL   - DISPLAY INFORMATION ABOUT SPF\n&   X $EXIT       - TERMINATE SPF USING LIST/LOG DEFAULTS\n&\n$PRESS&END KEY$TO TERMINATE SPF$\n&\n<ACTION>\n1 OPT CHAR(8) CURSOR GENHELP(TTUTOR)\n LIST   (0     ,0.1   ,0.2   ,0.3   ,1     ,2      ,\n  3      ,3.1   ,3.2   ,3.3   ,3.4   ,3.5   ,3.6   ,3.7   ,3.8   ,3.9   ,\n  4      ,4.1   ,4.2   ,4.3   ,4.4   ,4.5   ,4.6   ,4.7   ,4.8   ,\n  5     ,5.1   ,5.2   ,5.3   ,5.4   ,5.5   ,5.6   ,\n  6     ,7       ,X  ,TESTMENU,' ',*)\n RETURN (SPFOPT,SPFOPT,SPFOPT,SPFOPT,SPFBRO,SPFEDIT,\n  SPFUTIL,SPFUDA,SPFUDA,SPFUMC,SPFUCA,SPFURS,SPFUHC,SPFUVT,SPFUOL,SPFUSC,\n  SPFUTIL,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,SPFFOR,\n  SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,SPFJOB,\n  SPFTSO,SPFTUTOR,END,SPFTMENU,' ',?);\n2 OPT CHAR(8) INIT($PARM2)\n LIST   (0    ,0.1  ,0.2  ,0.3  ,3   ,3.1 ,3.2 ,3.8  ,3.9   ,\n  4   ,4.1  ,4.2  ,4.3  ,4.4  ,4.5  ,4.6  ,4.7  ,4.8  ,\n  5    ,5.0  ,5.1  ,5.2  ,5.3  ,5.4  ,5.5  ,5.6  ,7)\n RETURN (OPT00,OPT01,OPT02,OPT03,UTIL,UDA1,UDA2,UOL01,SCRPTA,\n  FORA,FOR01,FOR02,FOR03,FOR04,FOR05,FOR06,FOR07,FOR08,\n  *JOBA,JOB00,JOB01,JOB02,JOB03,JOB04,JOB05,JOB06,T);\n3 ID CHAR(8) INIT($PARM3);\n4 TIME CHAR(5) INIT($PARM4);\n5 DATE CHAR(8) INIT($PARM5);\n6 DATEJ CHAR(6) INIT($PARM6);\n7 KY CHAR(2) INIT($PARM7);\n8 TERM CHAR(8) INIT($PARM8);\n9 MODE CHAR(1) INIT($PARM9)\n LIST   (MONO,DUAL)\n RETURN (M   ,D   );\n10 PFX CHAR(8) INIT($PARM10);\n11 STEP CHAR(8) INIT($PARM11);\n12 * FIXED(8) INIT(0);  ** RESERVED **\n13 * CHAR(8) INIT(' '); ** RESERVED **\n14 * FIXED(31) INIT(0); ** RESERVED **\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VASM2": {"ttr": 1809, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x80\\x01O\\x00\\x80\\x01_\\x07D\\x00\\x1a\\x00\\x15\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1980-01-14T00:00:00", "modifydate": "1980-01-15T07:44:00", "lines": 26, "newlines": 21, "modlines": 0, "user": "TYD9801"}, "text": "&---------------------  ASM2 UTILITY SELECTION MENU  ---------------------------\n&SELECT OPTION ===>%OPT     $\n&\n&\n&       1$- ARCHIVE FUNCTIONS\n$           REQUEST ARCHIVE TO TAPE.  INQUIRE ABOUT ARCHIVED DATASETS.\n$           REQUEST RELOAD OF ARCHIVED DATASET.\n$\n&       2$- BACKUP FUNCTIONS\n$           REQUEST BACKUP TO TAPE.   INQUIRE ABOUT BACKED UP DATASETS.\n$           REQUEST RESORE OF BACKED UP DATASET.\n$\n&       3$- SPACE MANAGEMENT FUNCTIONS\n$           LIST DISK DATASET SPACE AND USAGE INFORMATION.\n$           COMPRESS AND/OR RELEASE UNUSED SPACE FROM DATASETS.\n$           RESET END-OF-FILE ON A SEQUENTIAL DATASET.\n&\n&\n<ACTION>\n1 OPT CHAR(8) CURSOR GENHELP(VTASM2)\n      LIST   (1       ,2       ,3       ,*        )\n      RETURN (SPFFOR  ,SPFFOR  ,SPFFOR  ,?        );\n2 OPT CHAR(8)\n      LIST   (1       ,2       ,3       )\n      RETURN (V$AR    ,V$BK    ,V$SM    );\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VINDEV": {"ttr": 1293, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x15\\x00\\x15\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "TYD9835"}, "text": "&-------------------  SPF MENU DEVELOPMENT DISPLAY  ----------------------------\n&\n&\n&\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n&         * * $                                                 & * *\n&         * * $                                                 & * *\n&         * * $         THE MENU THAT WAS SELECTED              & * *\n&         * * $         IS CURRENTLY IN DEVELOPMENT.            & * *\n&         * * $                                                 & * *\n&         * * $                                                 & * *\n&         * * $    PRESS&(PF3)$TO DISPLAY PRIMARY OPTION MENU   & * *\n&         * * $                                                 & * *\n&         * * $                                                 & * *\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n<ACTION>\n 1 PRJ1    CHAR (8)  INIT(' ')      LIST   (' ')\n                     NOCURSOR       RETURN (' '); REQUIRED\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VJTIP": {"ttr": 2332, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x00\\x00\\x80\\x10\\x8f\\x00\\x80\\x13_\\x11\"\\x003\\x003\\x00\\x00[\\xe2\\xe8\\xe2\\xf1\\xf3@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1980-04-17T00:00:00", "modifydate": "1980-05-14T11:22:00", "lines": 51, "newlines": 51, "modlines": 0, "user": "$SYS13"}, "text": "&-----------------------------  JTIP UTILITY  ----------------------------------\n&SELECT OPTION ===>%TCOD                                                       $\n&\n&   L$- SHOW JOB NAMES/ID'S VIA THE JTIP SHOW COMMAND\n&   S$- SHOW A JOB'S FETCH DATASET INFORMATION\n&   D$- DELETE JOB OUTPUT FROM FETCH OR SYSOUT QUEUE\n&   R$- REQUEUE JOB OUTPUT FROM FETCH QUEUE TO SYSOUT QUEUE\n&   O$- DISPLAY JOB OUTPUT AT TERMINAL\n&   BLANK$- COPY OUTPUT FROM FETCH QUEUE TO TEMPORARY DATASET AND BROWSE\n$\n$FOR JOB TO BE SELECTED:\n$   JOBNAME OR JOBID &===>%TJNM    $\n$\n$   DDNAME(S)     &===>%TDDNAME                            $\n$   DATASET ID(S) &===>%TPN                                $\n$\n$FOR OPTION 'O':                       FOR OPTION 'R':\n$   START  COLUMN &===>%TC1$              DEST &===>%TDST  $\n$   ENDING COLUMN &===>%TC2$\n<ACTION>\n 1 TCOD    CHAR (1)  INIT(' ')     LIST   (L,S,D,R,O,' ',*) GENHELP(VTJTIP)\n                       CURSOR      RETURN (L,S,D,R,O, B ,?); REQUIRED\n 2 TCOD    CHAR (1)  INIT(' ')     LIST   ('L' ,  * )  KEY(SW1)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 3 TCOD    CHAR (1)  INIT(' ')     LIST   ('S' ,  * )  KEY(SW2)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 4 TCOD    CHAR (1)  INIT(' ')     LIST   ('D' ,  * )  KEY(SW3)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 5 TCOD    CHAR (1)  INIT(' ')     LIST   ('R' ,  * )  KEY(SW4)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 6 TCOD    CHAR (1)  INIT(' ')     LIST   ('O' ,  * )  KEY(SW5)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 7 TCOD    CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW6)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 8 TJNM    CHAR (8)  INIT($PARM8)  LIST   (' ' ,  * )\n                     NOCURSOR      RETURN ('\u00ac'      ); OPTIONAL\n 9 TDDNAME CHAR (35) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n10 TDDNAME CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW7)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n11 TPN     CHAR (35) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n12 TPN     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW8)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n13 TC1     CHAR (3)  INIT('001')   LIST   (' ' ,  * )\n                     NOCURSOR      RETURN ('001'    ); OPTIONAL\n14 TC2     CHAR (3)  INIT('079')   LIST   (' ' ,  * )\n                     NOCURSOR      RETURN ('079'    ); OPTIONAL\n15 TDST    CHAR (4)  INIT($PARM15)  LIST   (' ' , * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VJTIPB": {"ttr": 1295, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x07\\x00\\x07\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "TYD9835"}, "text": "&JTIP OUTPUT LISTING FOR#JOB                            &LINE 00001 COLS 001 080\n&COMMAND INPUT ===>%INPUT                                     &SCROLL ===>%AMT $\n<ACTION>\n1 JOB   CHAR(35) INIT($PARM1) GENHELP(VTJTIPB);\n0 INPUT CHAR(40) CURSOR;\n0 AMT   CHAR(4)  INIT('PAGE');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VJTIPO": {"ttr": 2320, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00y&\\x9f\\x00\\x80\\x10\\x8f\\t1\\x003\\x001\\x00\\x00[\\xc3\\xe2\\xc7\\xf0\\xf5@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1980-04-17T09:31:00", "lines": 51, "newlines": 49, "modlines": 0, "user": "$CSG05"}, "text": "&-----------------------------  JTIP UTILITY  ----------------------------------\n&SELECT OPTION ===>%TCOD                                                       $\n&\n&   L$- SHOW JOB NAMES/ID'S VIA THE JTIP SHOW COMMAND\n&   S$- SHOW A JOB'S FETCH DATASET INFORMATION\n&   D$- DELETE JOB OUTPUT FROM FETCH OR SYSOUT QUEUE\n&   R$- REQUEUE JOB OUTPUT FROM FETCH QUEUE TO SYSOUT QUEUE\n&   O$- DISPLAY JOB OUTPUT AT TERMINAL\n&   BLANK$- COPY OUTPUT FROM FETCH QUEUE TO TEMPORARY DATASET AND BROWSE\n$\n$FOR JOB TO BE SELECTED:\n$   JOBNAME OR JOBID &===>%TJNM    $\n$\n$   DDNAME(S)     &===>%TDDNAME                            $\n$   DATASET ID(S) &===>%TPN                                $\n$\n$FOR OPTION 'O':                       FOR OPTION 'R':\n$   START  COLUMN &===>%TC1$              DEST &===>%TDST$\n$   ENDING COLUMN &===>%TC2$\n<ACTION>\n 1 TCOD    CHAR (1)  INIT(' ')     LIST   (L,S,D,R,O,' ',*) GENHELP(VTJTIP)\n                       CURSOR      RETURN (L,S,D,R,O, B ,?); REQUIRED\n 2 TCOD    CHAR (1)  INIT(' ')     LIST   ('L' ,  * )  KEY(SW1)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 3 TCOD    CHAR (1)  INIT(' ')     LIST   ('S' ,  * )  KEY(SW2)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 4 TCOD    CHAR (1)  INIT(' ')     LIST   ('D' ,  * )  KEY(SW3)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 5 TCOD    CHAR (1)  INIT(' ')     LIST   ('R' ,  * )  KEY(SW4)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 6 TCOD    CHAR (1)  INIT(' ')     LIST   ('O' ,  * )  KEY(SW5)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 7 TCOD    CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW6)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 8 TJNM    CHAR (8)  INIT($PARM8)  LIST   (' ' ,  * )\n                     NOCURSOR      RETURN ('\u00ac'      ); OPTIONAL\n 9 TDDNAME CHAR (35) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n10 TDDNAME CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW7)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n11 TPN     CHAR (35) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n12 TPN     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW8)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n13 TC1     CHAR (3)  INIT('001')   LIST   (' ' ,  * )\n                     NOCURSOR      RETURN ('001'    ); OPTIONAL\n14 TC2     CHAR (3)  INIT('079')   LIST   (' ' ,  * )\n                     NOCURSOR      RETURN ('079'    ); OPTIONAL\n15 TDST    CHAR (4)  INIT($PARM15)  LIST   (' ' , * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VJTIP9": {"ttr": 2330, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x80\\x13_\\x00\\x80\\x13_\\x11\\x14\\x003\\x003\\x00\\x00[\\xe2\\xe8\\xe2\\xf1\\xf3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1980-05-14T00:00:00", "modifydate": "1980-05-14T11:14:00", "lines": 51, "newlines": 51, "modlines": 0, "user": "$SYS13"}, "text": "&-----------------------------  JTIP UTILITY  ----------------------------------\n&SELECT OPTION ===>%TCOD                                                       $\n&\n&   L$- SHOW JOB NAMES/ID'S VIA THE JTIP SHOW COMMAND\n&   S$- SHOW A JOB'S FETCH DATASET INFORMATION\n&   D$- DELETE JOB OUTPUT FROM FETCH OR SYSOUT QUEUE\n&   R$- REQUEUE JOB OUTPUT FROM FETCH QUEUE TO SYSOUT QUEUE\n&   O$- DISPLAY JOB OUTPUT AT TERMINAL\n&   BLANK$- COPY OUTPUT FROM FETCH QUEUE TO TEMPORARY DATASET AND BROWSE\n$\n$FOR JOB TO BE SELECTED:\n$   JOBNAME OR JOBID &===>%TJNM    $\n$\n$   DDNAME(S)     &===>%TDDNAME                            $\n$   DATASET ID(S) &===>%TPN                                $\n$\n$FOR OPTION 'O':                       FOR OPTION 'R':\n$   START  COLUMN &===>%TC1$              DEST &===>%TDST$\n$   ENDING COLUMN &===>%TC2$\n<ACTION>\n 1 TCOD    CHAR (1)  INIT(' ')     LIST   (L,S,D,R,O,' ',*) GENHELP(VTJTIP)\n                       CURSOR      RETURN (L,S,D,R,O, B ,?); REQUIRED\n 2 TCOD    CHAR (1)  INIT(' ')     LIST   ('L' ,  * )  KEY(SW1)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 3 TCOD    CHAR (1)  INIT(' ')     LIST   ('S' ,  * )  KEY(SW2)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 4 TCOD    CHAR (1)  INIT(' ')     LIST   ('D' ,  * )  KEY(SW3)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 5 TCOD    CHAR (1)  INIT(' ')     LIST   ('R' ,  * )  KEY(SW4)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 6 TCOD    CHAR (1)  INIT(' ')     LIST   ('O' ,  * )  KEY(SW5)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 7 TCOD    CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW6)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n 8 TJNM    CHAR (8)  INIT($PARM8)  LIST   (' ' ,  * )\n                     NOCURSOR      RETURN ('\u00ac'      ); OPTIONAL\n 9 TDDNAME CHAR (35) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n10 TDDNAME CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW7)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n11 TPN     CHAR (35) INIT(' ')     LIST   (' ' ,  * )\n                     NOCURSOR      RETURN (' '      ); OPTIONAL\n12 TPN     CHAR (1)  INIT(' ')     LIST   (' ' ,  * )  KEY(SW8)\n                     NOCURSOR      RETURN ('\u00ac' , ' ');\n13 TC1     CHAR (3)  INIT('001')   LIST   (' ' ,  * )\n                     NOCURSOR      RETURN ('001'    ); OPTIONAL\n14 TC2     CHAR (3)  INIT('079')   LIST   (' ' ,  * )\n                     NOCURSOR      RETURN ('079'    ); OPTIONAL\n15 TDST    CHAR (4)  INIT('RMT0')   LIST   (' ' , * )\n                     NOCURSOR      RETURN ('RMT0'   ); OPTIONAL\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VNOTSUP": {"ttr": 1297, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x15\\x00\\x15\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "TYD9835"}, "text": "&-------------------  SPF MENU UNSUPPORTED DISPLAY  ----------------------------\n&\n&\n&\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n&         * * $                                                 & * *\n&         * * $                                                 & * *\n&         * * $         THE MENU THAT WAS SELECTED              & * *\n&         * * $         IS NOT CURRENTLY SUPPORTED.             & * *\n&         * * $                                                 & * *\n&         * * $                                                 & * *\n&         * * $    PRESS&(PF3)$TO DISPLAY PRIMARY OPTION MENU   & * *\n&         * * $                                                 & * *\n&         * * $                                                 & * *\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n<ACTION>\n 1 PRJ1     CHAR (8)  INIT(' ')    LIST   (' ')\n                      NOCURSOR     RETURN (' '); REQUIRED\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VOPT01SM": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00W\\x00W\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 87, "newlines": 87, "modlines": 0, "user": "TYD9835"}, "text": "&-----------------------  TERMINAL CHARACTERISTICS  ----------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$\n$TERMINAL TYPE    &===>%TERM    $(3277 - 3277/3275 DISPLAY STATION)\n$                                (3278 - 3278/3276 DISPLAY STATION)\n$\n$NUMBER OF PF KEYS&===>%KY$      (12 - TWELVE PROGRAM FUNCTION KEYS)\n$                                (24 - TWENTY FOUR PROGRAM FUNCTION KEYS)\n$\n$CHARACTER MODE   &===>%MODE$    (DUAL - DISPLAY UPPER/LOWER CASE CHARACTERS)\n$                                (MONO - DISPLAY UPPER CASE CHARACTERS ONLY)\n$\n$SESSION MANAGER MODE FOR LINE MESSAGES\n$                 &===>%SMM$    (NO  - DO NOT ENTER SESSION MANAGER MODE)\n$                               (YES - ENTER SESSION MANAGER MODE)\n<ACTION>\n 1 TERM    CHAR(8)  INIT(' '   ) CURSOR GENHELP(TOPT1)\n                    LIST   (3277   ,3278   ,3278C   ,' ',*)\n                    RETURN (SPF3277,SPF3278,SPF3278C,' ',?);\n 2 TERM    CHAR(8)  INIT($PARM2) NOCURSOR;\n 3 KY      CHAR(2)  INIT($PARM3) NOCURSOR;\n 4 MODE    CHAR(1)  INIT($PARM4) NOCURSOR\n                    LIST   (MONO,DUAL,*)\n                    RETURN (M   ,D   );\n 5 SMM     CHAR(1)  INIT($PARM5) NOCURSOR\n                    LIST   (NO,YES,*)\n                    RETURN (N ,Y  );\n<END>\n************************************************************************\n\nTHE FOLLOWING MODIFICATIONS MAY BE MADE TO THIS MENU IF YOU WANT TO\nTO CONTROL SESSION MANAGER MODE FOR TSO MESSAGES OUTSIDE OF OPTION 6\nAND OPTION 4.\n\n*** MOVE THE FOLLOWING 4 LINES BEFORE THE \"<ACTION>\" STATEMENT *********\n$\n$SESSION MANAGER MODE FOR LINE MESSAGES\n$                 &===>%SMM$    (NO  - DO NOT ENTER SESSION MANAGER MODE)\n$                               (YES - ENTER SESSION MANAGER MODE)\n\n*** REPLACE ACTION STATEMENT 5 WITH THE FOLLOWING 3 LINES **************\n 5 SMM     CHAR(1)  INIT($PARM5) NOCURSOR\n                    LIST   (NO,YES,*)\n                    RETURN (N ,Y  );\n*\n* ORGINAL STATEMENTS\n*\n&-----------------------  TERMINAL CHARACTERISTICS  ----------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$\n$TERMINAL TYPE    &===>%TERM    $(3277 - 3277/3275 DISPLAY STATION)\n$                                (3278 - 3278/3276 DISPLAY STATION)\n$\n$NUMBER OF PF KEYS&===>%KY$      (12 - TWELVE PROGRAM FUNCTION KEYS)\n$                                (24 - TWENTY FOUR PROGRAM FUNCTION KEYS)\n$\n$CHARACTER MODE   &===>%MODE$    (DUAL - DISPLAY UPPER/LOWER CASE CHARACTERS)\n$                                (MONO - DISPLAY UPPER CASE CHARACTERS ONLY)\n<ACTION>\n 1 TERM    CHAR(8)  INIT(' '   ) CURSOR GENHELP(TOPT1)\n                    LIST   (3277   ,3278   ,3278C   ,' ',*)\n                    RETURN (SPF3277,SPF3278,SPF3278C,' ',?);\n 2 TERM    CHAR(8)  INIT($PARM2) NOCURSOR;\n 3 KY      CHAR(2)  INIT($PARM3) NOCURSOR;\n 4 MODE    CHAR(1)  INIT($PARM4) NOCURSOR\n                    LIST   (MONO,DUAL,*)\n                    RETURN (M   ,D   );\n 5 SMM     CHAR(1)  INIT('N'); SESSION MANAGER MODE - SEE COMMENTS BELOW\n<END>\n************************************************************************\n\nTHE FOLLOWING MODIFICATIONS MAY BE MADE TO THIS MENU IF YOU WANT TO\nTO CONTROL SESSION MANAGER MODE FOR TSO MESSAGES OUTSIDE OF OPTION 6\nAND OPTION 4.\n\n*** MOVE THE FOLLOWING 4 LINES BEFORE THE \"<ACTION>\" STATEMENT *********\n$\n$SESSION MANAGER MODE FOR LINE MESSAGES\n$                 &===>%SMM$    (NO  - DO NOT ENTER SESSION MANAGER MODE)\n$                               (YES - ENTER SESSION MANAGER MODE)\n\n*** REPLACE ACTION STATEMENT 5 WITH THE FOLLOWING 3 LINES **************\n 5 SMM     CHAR(1)  INIT($PARM5) NOCURSOR\n                    LIST   (NO,YES,*)\n                    RETURN (N ,Y  );\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VPAN": {"ttr": 2328, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00y&\\x9f\\x00\\x80\\x11\\x9f\\x16\\x03\\x00\\x15\\x00\\x15\\x00\\x00[\\xe2\\xe8\\xe2\\xf1\\xf3@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1980-04-28T16:03:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "$SYS13"}, "text": "&--------------------------  PANVALET SELECTION MENU  --------------------------\n&SELECT OPTION ===>%P       $\n&\n&  0$- PAN EDIT                            &5$- PAN LISTDS\n&  1$- PAN ADD                             &6$- PAN PRINT\n&  2$- PAN CHANGE                          &7$- PAN RENAME\n&  3$- PAN COPY                            &8$- PAN RETRIEVE\n&  4$- PAN DISPLAY                         &9$- PAN STORE\n&\n<ACTION>\n1 P   CHAR(8) CURSOR GENHELP(VTPAN)\n      LIST   (0       ,1       ,2       ,3        ,4        ,5       ,\n              6       ,7       ,8        ,9        ,*       )\n      RETURN (TKSPED0D,SPFFOR  ,SPFFOR  ,SPFFOR   ,SPFIPAN2 ,SPFFOR  ,\n              SPFFOR  ,SPFFOR  ,SPFFOR   ,SPFFOR   ,'?'     );\n2 P   CHAR(8)\n      LIST   (0       ,1       ,2        ,3       ,4        ,5       ,\n              6       ,7       ,8        ,9        )\n      RETURN (VPANE   ,VPAN01  ,VPAN02   ,VPAN03  ,VPAN04   ,VPAN05  ,\n              VPAN06  ,VPAN07  ,VPAN08   ,VPAN09   );\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPANE": {"ttr": 1807, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x16\\x00\\x00\\x00y&/\\x00y3?\\x17\\t\\x002\\x007\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.22", "flags": 0, "createdate": "1979-09-19T00:00:00", "modifydate": "1979-11-29T17:09:00", "lines": 50, "newlines": 55, "modlines": 0, "user": "TYD9801"}, "text": "&---------------------------------  PAN EDIT  ----------------------------------\n&SELECT OPTION ===>%VOPT$\n&\n&   S$- SAVE EDITED MEMBER VIA PAN STORE (SPF MEMBER DELETED)\n&   D$- DISPLAY EDIT STATUS OF PANVALET MEMBER\n&   E$- END PANVALET MEMBER EDIT STATUS WITHOUT SAVE\n&   BLANK$- EDIT PANVALET MEMBER\n&\n$    PANVALET LIBRARY$===> DDNAME&===>%VDDNAME $\n$                         PANNAME&===>%VPANNAM   $\n$                          ACCESS&===>\u00acVACC $\n$                         CONTROL&===>\u00acVCTL $\n&\n$    SPF DATASET$===>     PROJECT&===>%PRJ0    &\n$                         LIBRARY&===>%LIB0    &\n$                            TYPE&===>%TYP0    &\n$                          MEMBER&===>%MEMBER  $(IF DIFFERENT THAN PANNAME)&\n&\n<ACTION>\n 1 VOPT    CHAR (1)   INIT(' ')   LIST   (S,D,E,' ',*) GENHELP(VTPANE)\n                        CURSOR    RETURN (S,D,E, R ,?); REQUIRED\n 2 VOPT    CHAR (1)   INIT(' ')   LIST   (' ' ,  * )  KEY(SW1)\n                      NOCURSOR    RETURN (' ' , '\u00ac');\n 3 VOPT    CHAR (1)   INIT(' ')   LIST   ('S' ,  * )  KEY(SW2)\n                      NOCURSOR    RETURN (' ' , '\u00ac');\n 4 VOPT    CHAR (1)   INIT(' ')   LIST   ('E' ,  * )  KEY(SW3)\n                      NOCURSOR    RETURN (' ' , '\u00ac');\n 5 VOPT    CHAR (1)   INIT(' ')   LIST   ('D' ,  * )  KEY(SW4)\n                      NOCURSOR    RETURN (' ' , '\u00ac');\n 6 PRJ0     CHAR (8)  INIT($PARM6)  LIST   (' ' , * )\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n 7 LIB0     CHAR (8)  INIT($PARM7)  LIST   (' ' , * )\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n 8 TYP0     CHAR (8)  INIT($PARM8)  LIST   (' ' , * )\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n 9 MEMBER   CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('?'     ); OPTIONAL\n10 VDDNAME  CHAR (8)  INIT($PARM10) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n11 VPANNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                        CURSOR      RETURN ('?'     ); OPTIONAL\n12 VACC     CHAR (5)  INIT(' ')\n                      NOCURSOR                       ; OPTIONAL\n13 VACC     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW5)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n14 VCTL     CHAR (5)  INIT(' ')\n                      NOCURSOR                       ; OPTIONAL\n15 VCTL     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW6)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN01": {"ttr": 2308, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00y&\\x9f\\x00\\x80\\x02\\x8f \\x05\\x007\\x007\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1980-01-28T20:05:00", "lines": 55, "newlines": 55, "modlines": 0, "user": "TYD9801"}, "text": "&----------------------------------  PAN ADD  ----------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$TO PANVALET LIBRARY $                        PANVALET OPTIONS\n$        DDNAME&===>%VDDNAME $                          USER&===>\u00acVUSR$\n$       PANNAME&===>%VPANNAM   $                     CONTROL&===>\u00acVCTL $\n$        FORMAT&===>%VFORMAT $                  INTERNAL FMT&===>%VINTFMT $\n$                                                DISPOSITION&===>%VDISP $\n$FROM SPF DATASET\n$       PROJECT&===>%PRJ1    &\n$       LIBRARY&===>%LIB1    &\n$          TYPE&===>%TYP1    &\n$        MEMBER&===>%MEMBER  &\n&\n$FROM NON-SPF SEQUENTIAL OR PARTITIONED DATASET\n$        DSNAME&===>%VDSNAME                                                 $\n&\n<ACTION>\n40 VDDNAME  CHAR (8)  INIT($PARM40) LIST   (' ' , * )  GENHELP(VTPAN01)\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n41 VPANNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                        CURSOR      RETURN ('?'     ); REQUIRED\n42 VFORMAT  CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n10 PRJ1     CHAR (8)  INIT($PARM10) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n11 LIB1     CHAR (8)  INIT($PARM11) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n12 TYP1     CHAR (8)  INIT($PARM12) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n31 MEMBER   CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n61 MEMBER   CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW1)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n47 VDSNAME  CHAR (56) INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n67 VDSNAME  CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW2)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n43 VUSR     CHAR (4)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n63 VUSR     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW3)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n44 VCTL     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n64 VCTL     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW4)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n45 VINTFMT  CHAR (8)  INIT('TSO')   LIST (' ' , TSO , PANVALET , NOFORMAT ,\n                                             T , P , N )\n                      NOCURSOR      RETURN ('?' , TSO , PANVALET , NOFORMAT ,\n                                             T , P , N ); REQUIRED\n46 VDISP    CHAR (6)  INIT('DELETE') LIST  (' ' , DELETE , KEEP ,\n                                                      DE , K )\n                      NOCURSOR      RETURN ('?' , DELETE , KEEP ,\n                                                      DE , K ); REQUIRED\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN02": {"ttr": 1299, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00/\\x00/\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 47, "newlines": 47, "modlines": 0, "user": "TYD9835"}, "text": "&--------------------------------  PAN CHANGE  ---------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$IN PANVALET LIBRARY\n$        DDNAME&===>%VDDNAME $\n$       PANNAME&===>%VPANNAM   $\n&\n&ENTER CHANGE IN ONLY ONE CRITERION\n$       STATUS &===>%VSTATUS $\n$       COMMENT&===>%VCOM                                              $\n$          USER&===>\u00acVUSR$\n$         LEVEL&===>%VLV$\n&\n$PANVALET OPTIONS\n$        ACCESS&===>\u00acVACC $\n$       CONTROL&===>\u00acVCTL $\n&\n<ACTION>\n40 VDDNAME  CHAR (8)  INIT($PARM40) LIST   (' ' , * )  GENHELP(VTPAN02)\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n41 VPANNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                        CURSOR      RETURN ('?'     ); REQUIRED\n49 VSTATUS  CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n3  VSTATUS  CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW1)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n50 VCOM     CHAR (50) INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n2  VCOM     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW2)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n43 VUSR     CHAR (4)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n63 VUSR     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW3)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n51 VLV      CHAR (3)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n61 VLV      CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW4)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n48 VACC     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n68 VACC     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW5)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n44 VCTL     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n64 VCTL     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW6)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN03": {"ttr": 1301, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "TYD9835"}, "text": "&---------------------------------  PAN COPY  ----------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$IN PANVALET LIBRARY\n$        DDNAME&===>%VDDNAME $\n$  FROM PANNAME&===>%VPANNAM   $\n$    TO NEWNAME&===>%VNEWNAM   $\n&\n$PANVALET OPTIONS\n$        ACCESS&===>\u00acVACC $\n$       CONTROL&===>\u00acVCTL $\n&\n<ACTION>\n40 VDDNAME  CHAR (8)  INIT($PARM40) LIST   (' ' , * )  GENHELP(VTPAN03)\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n41 VPANNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                        CURSOR      RETURN ('?'     ); REQUIRED\n52 VNEWNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ( '?'    ); REQUIRED\n48 VACC     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n68 VACC     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW1)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n44 VCTL     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n64 VCTL     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW2)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN04": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x00\\x00y&\\x9f\\x00y0O\\x14%\\x00\\x1d\\x00'\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-10-31T14:25:00", "lines": 29, "newlines": 39, "modlines": 0, "user": "TYD9801"}, "text": "&--------------------------------  PAN DISPLAY  --------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n&\n&\n&\n&\n&\n         $IN PANVALET LIBRARY\n                     $DDNAME&===>%VDDNAME $\n             $      $PANNAME&===>%VPANNAM   $\n&\n         $PANVALET OPTIONS\n                     $ACCESS&===>\u00acVACC$\n                     $EXPAND&===>%VEXPAND $\n&\n&\n<ACTION>\n1  VDDNAME  CHAR (8)  INIT($PARM1)  LIST   (' ' , * )  GENHELP(VTPAN04)\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n2  VPANNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                        CURSOR      RETURN ('?'     ); REQUIRED\n3  VACC     CHAR (4)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('?'     ); OPTIONAL\n4  VEXPAND  CHAR (8)  INIT('NOEXPAND') LIST (' ' , NOEXPAND , EXPAND ,\n                                                          N , E )\n                      NOCURSOR      RETURN ('?'  , NOEXPAND , EXPAND ,\n                                                          N , E ); REQUIRED\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN04B": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00y&\\x9f\\x00y0O\\x15\\x03\\x00\\x07\\x00\\x07\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-10-31T15:03:00", "lines": 7, "newlines": 7, "modlines": 0, "user": "TYD9801"}, "text": "&PAN BROWSE#TITLE                                       &LINE 00001 COLS 001 080\n&COMMAND INPUT ===>%INPUT                                     &SCROLL ===>%AMT $\n<ACTION>\n1 TITLE CHAR(44) INIT($PARM1)  GENHELP(TB)    ;\n0 INPUT CHAR(40) CURSOR;\n0 AMT   CHAR(4)  INIT('PAGE');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN05": {"ttr": 1303, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "TYD9835"}, "text": "&--------------------------------  PAN LISTDS  ---------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$IN PANVALET LIBRARY\n$        DDNAME&===>%VDDNAME $\n$       PANNAME&===>%VPANNAM   $\n&\n$PANVALET OPTIONS\n$        ACCESS&===>\u00acVACC $\n$       CONTROL&===>\u00acVCTL $\n$       COMMENT&===>%VCOM   $\n&\n<ACTION>\n40 VDDNAME  CHAR (8)  INIT($PARM40) LIST   (' ' , * )  GENHELP(VTPAN05)\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n41 VPANNAM  CHAR (10) INIT(' '  )   LIST   (' ' , * )\n                        CURSOR      RETURN ('?'     ); REQUIRED\n50 VCOM     CHAR (7)  INIT('COMMENT') LIST (' ' , COMMENT , COM )\n                      NOCURSOR      RETURN ('\u00ac' , COMMENT , COM ); OPTIONAL\n60 VCOM     CHAR (1)  INIT('COMMENT') LIST (' ' , COMMENT , COM )  KEY(SW1)\n                      NOCURSOR      RETURN ('\u00ac' ,' ',' ');\n48 VACC     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n68 VACC     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW2)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n44 VCTL     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n64 VCTL     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW3)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN06": {"ttr": 1305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00,\\x00,\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 44, "newlines": 44, "modlines": 0, "user": "TYD9835"}, "text": "&---------------------------------  PAN PRINT  ---------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$IN PANVALET LIBRARY\n$        DDNAME&===>%VDDNAME $\n&\n&ENTER ONLY ONE SELECTION CRITERION\n$          NAME&===>%VPANNAM   $\n$        STATUS&===>%VSTATUS $\n$          TYPE&===>%VTYPE   $\n$          USER&===>\u00acVUSR$\n&\n$PANVALET OPTIONS\n$       CONTROL&===>\u00acVCTL $\n$       COMMENT&===>%VCOM   $\n&\n<ACTION>\n40 VDDNAME  CHAR (8)  INIT($PARM40) LIST   (' ' , * )  GENHELP(VTPAN06)\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n41 VPANNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                        CURSOR      RETURN ('\u00ac'     ); OPTIONAL\n4  VPANNAM  CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW3)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n49 VSTATUS  CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n3  VSTATUS  CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW1)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n53 VTYPE    CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n1  VTYPE    CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW2)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n43 VUSR     CHAR (4)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n63 VUSR     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW4)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n44 VCTL     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n64 VCTL     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW5)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n50 VCOM     CHAR (7)  INIT('COMMENT') LIST (' ' , COMMENT , COM )\n                      NOCURSOR      RETURN ('\u00ac' , COMMENT , COM ); OPTIONAL\n60 VCOM     CHAR (1)  INIT('COMMENT') LIST (' ' , * )  KEY(SW6)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN07": {"ttr": 1307, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "TYD9835"}, "text": "&--------------------------------  PAN RENAME  ---------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$IN PANVALET LIBRARY\n$        DDNAME&===>%VDDNAME $\n$  FROM PANNAME&===>%VPANNAM   $\n$    TO NEWNAME&===>%VNEWNAM   $\n&\n$PANVALET OPTIONS\n$        ACCESS&===>\u00acVACC $\n$       CONTROL&===>\u00acVCTL $\n&\n<ACTION>\n40 VDDNAME  CHAR (8)  INIT($PARM40) LIST   (' ' , * )  GENHELP(VTPAN07)\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n41 VPANNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                        CURSOR      RETURN ('?'     ); REQUIRED\n52 VNEWNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n48 VACC     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n68 VACC     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW1)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n44 VCTL     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n64 VCTL     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW2)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN08": {"ttr": 1309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x005\\x005\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 53, "newlines": 53, "modlines": 0, "user": "TYD9835"}, "text": "&-------------------------------  PAN RETRIEVE  --------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$FROM PANVALET LIBRARY $                        PANVALET OPTIONS\n$          DDNAME&===>%VDDNAME $                          ACCESS&===>\u00acVACC $\n$         PANNAME&===>%VPANNAM   $                       CONTROL&===>\u00acVCTL $\n$          EXPAND&===>%VEXPAND $                    INTERNAL FMT&===>%VINTFMT $\n&\n$TO SPF DATASET\n$         PROJECT&===>%PRJ1    &\n$         LIBRARY&===>%LIB1    &\n$            TYPE&===>%TYP1    &\n$          MEMBER&===>%MEMBER  &\n&\n$TO NON-SPF SEQUENTIAL OR PARTITIONED DATASET\n$          DSNAME&===>%VDSNAME                                                 $\n&\n<ACTION>\n40 VDDNAME  CHAR (8)  INIT($PARM40) LIST   (' ' , * )  GENHELP(VTPAN08)\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n41 VPANNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                        CURSOR      RETURN ('?'     ); REQUIRED\n1  PRJ1     CHAR (8)  INIT($PARM1)  LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n2  LIB1     CHAR (8)  INIT($PARM2)  LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n6  TYP1     CHAR (8)  INIT($PARM6)  LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n31 MEMBER   CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n61 MEMBER   CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW1)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n54 VEXPAND  CHAR (8)  INIT('NOEXPAND') LIST (' ' , NOEXPAND , EXPAND ,\n                                                          N , E )\n                      NOCURSOR      RETURN ('?' , NOEXPAND , EXPAND ,\n                                                      N , E ); OPTIONAL\n47 VDSNAME  CHAR (56) INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n67 VDSNAME  CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW2)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n44 VCTL     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n64 VCTL     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW3)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n45 VINTFMT  CHAR (8)  INIT('TSO')   LIST   (' ' , TSO , PANVALET ,\n                                                    T , P )\n                      NOCURSOR      RETURN ('?' , TSO , PANVALET ,\n                                                    T , P ); OPTIONAL\n48 VACC     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n68 VACC     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW4)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VPAN09": {"ttr": 1311, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x007\\x007\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 55, "newlines": 55, "modlines": 0, "user": "TYD9835"}, "text": "&---------------------------------  PAN STORE  ---------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$TO PANVALET LIBRARY$                          PANVALET OPTIONS\n$        DDNAME&===>%VDDNAME $                         ACCESS&===>\u00acVACC $\n$       PANNAME&===>%VPANNAM   $                      CONTROL&===>\u00acVCTL $\n$         LEVEL&===>%VLV$                        INTERNAL FMT&===>%VINTFMT $\n$                                                 DISPOSITION&===>%VDISP $\n$FROM SPF DATASET\n$       PROJECT&===>%PRJ1    &\n$       LIBRARY&===>%LIB1    &\n$          TYPE&===>%TYP1    &\n$        MEMBER&===>%MEMBER  &\n&\n$FROM NON-SPF SEQUENTIAL OR PARTITIONED DATASET\n$        DSNAME&===>%VDSNAME                                                 $\n&\n<ACTION>\n40 VDDNAME  CHAR (8)  INIT($PARM40) LIST   (' ' , * )  GENHELP(VTPAN09)\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n41 VPANNAM  CHAR (10) INIT(' ')     LIST   (' ' , * )\n                        CURSOR      RETURN ('?'     ); REQUIRED\n51 VLV      CHAR (3)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('?'     ); REQUIRED\n1  PRJ1     CHAR (8)  INIT($PARM1)  LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n2  LIB1     CHAR (8)  INIT($PARM2)  LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n6  TYP1     CHAR (8)  INIT($PARM6)  LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n31 MEMBER   CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n61 MEMBER   CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW1)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n47 VDSNAME  CHAR (56) INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n67 VDSNAME  CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW2)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n44 VCTL     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n64 VCTL     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW3)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n45 VINTFMT  CHAR (8)  INIT('PANVALET') LIST (' ' , TSO , PANVALET ,\n                                                    T , P )\n                      NOCURSOR      RETURN ('?' , TSO , PANVALET ,\n                                                    T , P ); REQUIRED\n46 VDISP    CHAR (6)  INIT('DELETE') LIST  (' ' , DELETE , KEEP ,\n                                                      DE , K )\n                      NOCURSOR      RETURN ('?' , DELETE , KEEP ,\n                                                      DE , K ); REQUIRED\n48 VACC     CHAR (5)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n68 VACC     CHAR (1)  INIT(' ')     LIST   (' ' , * )  KEY(SW4)\n                      NOCURSOR      RETURN ('\u00ac' ,' ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VSUBMT": {"ttr": 1314, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00%\\x00%\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 37, "newlines": 37, "modlines": 0, "user": "TYD9835"}, "text": "&----------------------------------  SUBMIT  -----------------------------------\n&ENTER/VERIFY PARAMETERS BELOW:\n&\n$FROM SPF DATASET\n$       PROJECT&===>%PRJ1    &        $       PROJECT&===>%PRJ2    &\n$       LIBRARY&===>%LIB1    &        $       LIBRARY&===>%LIB2    &\n$          TYPE&===>%TYP1    &        $          TYPE&===>%TYP2    &\n$        MEMBER&===>%MEMBER1 &        $        MEMBER&===>%MEMBER2 &\n&\n$FROM NON-SPF SEQUENTIAL OR PARTITIONED DATASET\n$        DSNAME&===>%VDSNAME1                                                $\n&\n$FROM NON-SPF SEQUENTIAL OR PARTITIONED DATASET\n$        DSNAME&===>%VDSNAME2                                                $\n&\n$FROM PANNVALET LIBRARY\n$        DDNAME&===>%VDDNAME1&        $        DDNAME&===>%VDDNAME2&\n$       PANNAME&===>%VPANNAM1  &      $       PANNAME&===>%VPANNAM2  &\n&\n<ACTION>\n10 PRJ1     CHAR (8)  INIT($PARM10) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n11 LIB1     CHAR (8)  INIT($PARM11) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n12 TYP1     CHAR (8)  INIT($PARM12) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n31 MEMBER1  CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n10 PRJ2     CHAR (8)  INIT($PARM10) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n11 LIB2     CHAR (8)  INIT($PARM11) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n12 TYP2     CHAR (8)  INIT($PARM12) LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n31 MEMBER2  CHAR (8)  INIT(' ')     LIST   (' ' , * )\n                      NOCURSOR      RETURN ('\u00ac'     ); OPTIONAL\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR": {"ttr": 2316, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x10_\\x15\\x04\\x00\\x1f\\x00\\x1f\\x00\\x00[\\xc3\\xe2\\xc7\\xf0\\xf5@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-04-14T15:04:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "$CSG05"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                      ----------------------------------\n                       | ASM2 ARCHIVE UTILITY FUNCTIONS |\n                       ----------------------------------\n$\n  THE ASM2 ARCHIVE UTILITY ALLOWS USERS TO MAKE USE OF THE ASM2 ARCHIVE\n  FACILITY.  ARCHIVING IS THE PROCESS BY WHICH A DATASET IS COPIED TO AN ASM2\n  ARCHIVE TAPE AND THEN DELETED FROM DISK AND UNCATALOGED.  THIS PROCESS ALLOWS\n  DATA TO BE RETAINED FOR POSSIBLE FUTURE USE ON DISK EVEN THOUGH THE VOLUME OR\n  FREQUENCY OF USE WOULD NOT NORMALLY WARRANT KEEPING THE DATASET ON DISK.\n  ARCHIVING CAN OCCUR AUTOMATICALLY IN ACCORDANCE WITH INSTALLATION STANDARDS,\n  OR IT CAN BE EXPLICITLY REQUESTED BY THE USER.  IN EITHER CASE THE DATASET IS\n  RETAINED FOR A SPECIFIED,  OR DEFAULT, TIME DURING WHICH IT MAY BE RESTORED\n  TO DISK VIA A USER REQUEST.\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- GENERAL ARCHIVE CONSIDERATIONS\n    &2$- QUEUEING DATASETS TO BE ARCHIVED\n    &3$- QUEUEING DATASETS TO BE RESTORED\n    &4$- INQUIRING ABOUT THE STATUS OF ARCHIVED DATASETS\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(   1   ,   2   ,   3   ,   4   )\n               RETURN(VT$AR1 ,VT$AR2 ,VT$AR3 ,VT$AR4 );\n3 * CHAR(8) INIT('VTASM2 ');\n4 * CHAR(8) INIT('VT$BK   ');\n5 * CHAR(8) INIT('VT$AR1  ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR1": {"ttr": 1817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01_\\x16W\\x00\\x1e\\x00\\x1c\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-15T16:57:00", "lines": 30, "newlines": 28, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                      ----------------------------------\n                       | GENERAL ARCHIVE CONSIDERATIONS |\n                       ----------------------------------\n$\n  THE ASM2 ARCHIVE FACILITY IS USED TO COPY A DATASET FROM DISK TO TAPE.\n  THE DISK DATASET IS UNCATALOGED AND DELETED.\n\n  ASM2 PROVIDES FACILITIES TO ARCHIVE DATASETS ,  INQUIRE ABOUT ARCHIVED\n  DATASETS, AND TO RESTORE ARCHIVED DATASETS.    THESE FUNCTIONS MAY BE\n  REQUESTED  FROM A TSO TERMINAL.   THE DATASET IS NOT ARCHIVED OR RESTORED\n  IMMEDIATELY UPON REQUEST.  THE REQUEST IS QUEUED UNTIL A BATCH ARCHIVE OR\n  RESTORE RUN IS SUBMITTED.\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- ARCHIVE DATASET RESTRICTIONS\n    &2$- TYPES OF ARCHIVE TAPES\n    &3$- SYSTEM INITIATED ARCHIVING\n    &4$- USER INITIATED ARCHIVE\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(   1   ,   2   ,   3   ,   4   )\n               RETURN(VT$AR11,VT$AR12,VT$AR13,VT$AR14);\n3 * CHAR(8) INIT('VT$AR  ');\n4 * CHAR(8) INIT('VT$AR2  ');\n5 * CHAR(8) INIT('VT$AR11 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR11": {"ttr": 1821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01o\\x079\\x00\\x1c\\x00\\x15\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-16T07:39:00", "lines": 28, "newlines": 21, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                      --------------------------------\n                       | ARCHIVE DATASET RESTRICTIONS |\n                       --------------------------------\n$\n  THE ASM2 ARCHIVE FACILITY CAN BE USED ON ALMOST ALL TYPES OF DATASETS.\n\n  CERTAIN TYPES OF DATASETS ARE NOT NORMALLY ARCHIVED.\n    1. UNMOVEABLE DATASETS\n    2. MULTI-VOLUME DATASETS\n    3. DATSETS WITH INVALID DCB INFORMATION.\n    4. EMPTY DATASETS (CAN BE ARCHIVED WITH PARAMETER OVERRIDE)\n    5. GDG DATASETS (SPECIAL GDG HANDLING IS AVAILABLE)\n\n  VSAM CATALOGS,  PAGE SPACES,  ALTERNATE INDEXES,  DATA COMPONENTS, AND INDEX\n  COMPONENTS CANNOT BE ARCHIVED.  VSAM CLUSTERS MAY BE ARCHIVED AS LONG AS THEY\n  DO NOT HAVE ALTERNATE INDEXES ASSOCIATED WITH THEM.\n\n  ASM2 USES THE 'EXPORT PERMANENT' FUNCTION OF IDCAMS TO ARCHIVE THE CLUSTER.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$AR1 ');\n4 * CHAR(8) INIT('VT$AR12 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR12": {"ttr": 1813, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01_\\x16F\\x00\\x19\\x00\\x19\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-15T16:46:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                             --------------------------\n                              | TYPES OF ARCHIVE TAPES |\n                              --------------------------\n$\n  ARCHIVED DATASETS ARE GROUPED ON TO ASM2 CONTROLLED ARCHIVE TAPES.  MANY\n  DATASETS ARE WRITTEN ON TO EACH TAPE,  THUS PROVIDING SAVINGS IN TAPES.\n\n  ASM2 SEGREGATES ARCHIVED TAPES INTO TWO GROUPS.  THESE ARE KNOWN AS 'NORMAL'\n  ARCHIVES AND 'PERMANENT' ARCHIVES.  THIS IS DONE TO REDUCE THE HANDLING AND\n  PASSING OF TAPES CONTAINING DATA WHICH IS TO BE KEPT  FOR  LONG  PERIODS  OF\n  TIME,  AND MOST LIKELY,  NOT REFERENCED VERY FREQUENTLY.  ANY ARCHIVE REQUEST\n  SPECIFYING  A  RETENTION  PERIOD  GREATER  THAN  3  YEARS,   IS  CONSIDERED\n  'PERMANENT'.   YOU  MAY  ALSO  DESIGNATE  AN  ARCHIVE  DATASET AS PERMANENT,\n  REGARDLESS OF RETENTION.  THE DEFAULT RETENTION PERIOD IS 1 YEAR FOR NORMAL\n  ARCHIVES,  AND 5 YEARS FOR PERMANENT ARCHIVES.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$AR1 ');\n4 * CHAR(8) INIT('VT$AR13 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR13": {"ttr": 2055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01\\x7f\\x16\\x05\\x00\\x15\\x00\\x19\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-17T16:05:00", "lines": 21, "newlines": 25, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                         ------------------------------\n                          | SYSTEM INITIATED ARCHIVING |\n                          ------------------------------\n$\n  IN SYSTEM INITIATED ARCHIVAL,  ONLINE DISK VOLUMES ARE SCANNED FOR DATASETS\n  WHICH ARE NOT PRE-AUTHORIZED TO REMAIN ON DISK.  THE UNAUTHORIZED DATASETS\n  ARE THEN SUBJECT TO TESTS FOR INACTIVITY.  A DATASET IS INACTIVE IF IT HAS\n  NOT BEEN ACCESSED IN 'X' DAYS. ('X' IS DETERMINED BY CURRENT INSTALLATION\n  STANDARDS.)  INACTIVE DATASETS WHICH ARE ARCHIVABLE ARE ARCHIVED.\n  NON-ARCHIVABLE DATASETS ARE SCRATCHED.  (SEE 'ARCHIVE DATASET RESTRICTIONS')\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$AR1 ');\n4 * CHAR(8) INIT('VT$AR14 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR14": {"ttr": 1823, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01o\\x07X\\x00\\x17\\x00\\x19\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-16T07:58:00", "lines": 23, "newlines": 25, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                           ----------------------------\n                            | USER INITIATED ARCHIVING |\n                            ----------------------------\n$\n  USER INITIATED ARCHIVING IS DONE TO REMOVE DATASETS FROM DISK WHILE KEEPING A\n  COPY OF THE DATASET AVAILABLE FOR FUTURE PROCESSING.  DATA SUCH AS TEST DATA,\n  YEAR END FILES,  OLD VERSIONS OF LIBRARIES,  ETC.  ARE ALL CANDADATES FOR\n  ARCHIVING.\n\n  A USER ARCHIVE REQUEST IS USUALLY INITIATED THROUGH THE ASM2 TSO COMMAND.\n  THE SPF INTERFACE PROVIDES MENU SUPPORT TO THIS COMMAND.  (SEE 'QUEUEING\n  DATASETS TO BE ARCHIVED' FOR MORE INFORMATION.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$AR1 ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR2": {"ttr": 2065, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x02\\x1f\\x070\\x00\\x1e\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-21T07:30:00", "lines": 30, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     ------------------------------------\n                      | QUEUEING DATASETS TO BE ARCHIVED |\n                      ------------------------------------\n$\n  A DATASET IS QUEUED FOR LATER ARCHIVE PROCESSING THROUGH THE ASM2 TSO\n  COMMAND.  AN SPF INTERFACE HAS BEEN PROVIDED TO SIMPLIFY USE OF THIS COMMAND.\n\n  A DATASET IS QUEUED FOR ARCHIVING BY SELECTING OPTION&A$ON THE &ASM2 ARCHIVE\n  UTILITY$MENU.  ENTER THE NAME OF THE DATASET TO BE ARCHIVED IN THE&NAME$AREA.\n  NORMAL TSO NAMING CONVENTIONS APPLY.  USE SINGLE QUOTES&(')$FOR FULLY\n  QUALIFIED NAMES.\n\n  YOU MAY SPECIFY THE NUMBER OF DAYS THE ARCHIVED DATASET SHOULD BE KEPT IN\n  THE&RETENTION$FIELD.  NOTE:  DEFAULTS ARE&365 (1 YR.)$FOR &NORMAL\n  ARCHIVES$,AND&1825 (5 YR.)&FOR PERMANENT ARCHIVES$. A RETENTION GREATER\n  THAN&3 YEARS$IS AUTOMATICALLY CONSIDERED PERMANENT.  YOU MAY CLASSIFY AN\n  ARCHIVE REQUEST AS PERMANENT,  REGARDLESS OF THE RETENTION PERIOD,  BY CODING\n  A&Y$ IN THE&PERMANENT ARCHIVE$FIELD.\n\n                         (CONTINUED ON NEXT PAGE)\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$AR  ');\n4 * CHAR(8) INIT('VT$AR3  ');\n5 * CHAR(8) INIT('VT$AR2A ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR2A": {"ttr": 1825, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x80\\x01o\\x00\\x80\\x01o\\x130\\x00\\x19\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1980-01-16T00:00:00", "modifydate": "1980-01-16T13:30:00", "lines": 25, "newlines": 30, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     ------------------------------------\n                      | QUEUEING DATASETS TO BE ARCHIVED |\n                      ------------------------------------\n$\n  WHEN A DATASET IS ARCHIVED TO TAPE IT NORMALLY RETAINS THE SAME NAME.  USE OF\n  THE&QUALIFIER$CAUSES THE DATASET TO BE RENAMED.  THE VALUE SPECIFIED IS\n  INSERTED IMMEDIATELY BEFORE THE LAST NODE OF THE DATASET NAME.  FOR EXAMPLE:\n  IF THE QUALIFIER&SMITH$WERE SPECIFIED WHEN ARCHIVING A DATASET NAMED\n &BCPQT.A1007211.CLAIMS$, THE NEW DATASET WOULD BE&BCPQT.A1007211.SMITH.CLAIMS$\n\n  THE&COMMENT$FIELD IS USED TO PLACE ANY USER INFORMATION, UP TO 30 CHARACTERS\n  LONG,  INTO THE ASM2 CATALOG.  WHEN INQUIRIES ARE MADE ABOUT ARCHIVED\n  DATASETS,  THE COMMENT CAN BE DISPLAYED.\n\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$AR2 ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR3": {"ttr": 2067, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x02\\x1f\\x070\\x00\\x1b\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-21T07:30:00", "lines": 27, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     ------------------------------------\n                      | QUEUEING DATASETS TO BE RESTORED |\n                      ------------------------------------\n$\n  DATASETS ARE QUEUED FOR RELOADING BY SELECTING OPTION&R$ON THE&ASM2 ARCHIVE\n  UTILITY$MENU.  THE NAME OF THE DATASET TO BE RELOADED IS ENTERED IN\n  THE&NAME$FIELD. NORMAL TSO NAMING CONVENTIONS APPLY.  FULLY QUALIFIED DATASET\n  NAMES MUST BE ENCLOSED IN SINGLE QUOTES&(')$.\n\n  IF MULTIPLE ARCHIVED VERSIONS OF A DATASET EXIST,  YOU MAY SPECIFY THE\n  VERSION IN A MANNER SIMILAR TO GENERATION DATASETS.  YOU SPECIFY THE NEXT TO\n  LATEST VERSION BY ADDING A&(-1)$FOLLOWING THE NAME.&(-2)$ SPECIFIES THE ONE\n  BEFORE THAT,  AND SO ON.\n\n  WHEN THE BATCH RELOAD JOB IS COMPLETE,  A MESSAGE WILL BE SENT TO THE TSO\n  USER WHO REQUESTED THE RELOAD.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$AR  ');\n4 * CHAR(8) INIT('VT$AR4  ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$AR4": {"ttr": 2069, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x02\\x1f\\x071\\x00\\x1e\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-21T07:31:00", "lines": 30, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 ARCHIVE UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                          -----------------------------\n                           | ARCHIVE DATASET INQUIRIES |\n                           -----------------------------\n$\n  ONCE A DATASET HAS BEEN ARCHIVED BY THE BATCH RUN,  IT IS POSSIBLE TO INQUIRE\n  ABOUT THE STATUS THROUGH THE INQUIRY OPTION&(OPTION BLANK)$.\n\n  AN INQUIRY WITH NOTHING IN THE&NAME$FIELD WILL CAUSE DATASETS BEGINNING WITH\n  THE REQUESTOR'S USERID TO BE LISTED.\n\n  YOU MAY ENTER A PARTIAL OR FULL NAME IN THE&NAME$FIELD. UNLIKE NORMAL TSO\n  DATASET NAMES,   YOUR  USERID  IS&NOT$APPENDED TO  THE  BEGINNING.   ALL\n  DATASETS&BEGINNING$WITH THE CHARACTERS SPECIFIED WILL BE LISTED.\n\n  THE&CYCLE$FIELD IS USED TO LIMIT THE INQUIRIES TO DATASETS ARCHIVED WITHIN\n  THE LAST 'NNN' DAYS.  WHERE 'NNN' IS THE NUMBER ENTERED.\n\n  TYPING A&Y$IN THE&COMMENT$FIELD CAUSES ANY USER COMMENTS ENTERED AT THE TIME\n  THE DATASET WAS ARCHIVED TO BE DISPLAYED.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$AR  ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$BK": {"ttr": 1819, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01_\\x17\\x15\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-15T17:15:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 BACKUP UTILITY ---------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                      ---------------------------------\n                       | ASM2 BACKUP UTILITY FUNCTIONS |\n                       ---------------------------------\n$\n  THE ASM2 BACKUP UTILITY ALLOWS USERS MAKE USE OF THE ASM2 BACKUP FACILITY.\n  'BACKUP' IS THE PROCESS BY WHICH A DATASET IS COPIED TO AN ASM2 BACKUP TAPE,\n  WHILE THE DISK RESIDENT DATASET IS LEFT UNDISTURBED.   THIS PROCESS ALLOWS\n  DATA TO BE REFERENCED ON DISK,  AND INSURES THE DATASET MAY BE RECONSTRUCTED\n  IF THE DISK  DATASET  IS  DAMAGED.   BACKUP  CAN  OCCUR  AUTOMATICALLY  IN\n  ACCORDANCE WITH INSTALLATION STANDARDS,  OR IT CAN BE EXPLICITLY REQUESTED BY\n  THE USER.  IN EITHER CASE THE BACKED UP DATASET IS RETAINED FOR A SPECIFIED,\n  OR DEFAULT,  TIME DURING WHICH IT MAY BE RESTORED TO DISK VIA A USER REQUEST.\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- GENERAL BACKUP CONSIDERATIONS\n    &2$- QUEUEING DATASETS TO BE BACKED UP\n    &3$- QUEUEING DATASETS TO BE RESTORED\n    &4$- INQUIRING ABOUT THE STATUS OF BACKED UP DATASETS\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(   1   ,   2   ,   3   ,   4   )\n               RETURN(VT$BK1 ,VT$BK2 ,VT$BK3 ,VT$BK4 );\n3 * CHAR(8) INIT('VTASM2 ');\n4 * CHAR(8) INIT('VT$SM   ');\n5 * CHAR(8) INIT('VT$BK1  ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$BK1": {"ttr": 1815, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01_\\x16V\\x00\\x1d\\x00\\x1c\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-15T16:56:00", "lines": 29, "newlines": 28, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 BACKUP UTILITY ---------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                      ---------------------------------\n                       | GENERAL BACKUP CONSIDERATIONS |\n                       ---------------------------------\n$\n  THE ASM2 BACKUP FACILITY IS USED TO COPY A DATASET FROM DISK TO TAPE.\n  THE DISK DATASET IS LEFT UNDISTURBED.\n\n  ASM2 PROVIDES FACILITIES TO BACK UP DATASETS ,  INQUIRE ABOUT BACKED UP\n  DATASETS, AND TO RESTORE BACKED UP DATASETS.   THESE  FUNCTIONS MAY BE\n  REQUESTED  FROM A TSO TERMINAL.   THE DATASET IS NOT BACKED UP OR RESTORED AT\n  THE TIME THE REQUEST IS ENTERED.  THE REQUEST IS PLACED IN A QUEUE TO BE\n  PROCESSED WHEN A BATCH BACKUP OR RESTORE RUN IS SUBMITTED.\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- BACK UP DATASET RESTRICTIONS\n    &2$- SYSTEM INITIATED INCREMENTAL BACKUP\n    &3$- USER INITIATED BACKUP\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(   1   ,   2   ,   3   )\n               RETURN(VT$BK11,VT$BK12,VT$BK13);\n3 * CHAR(8) INIT('VT$BK  ');\n4 * CHAR(8) INIT('VT$BK2  ');\n5 * CHAR(8) INIT('VT$BK11 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$BK11": {"ttr": 2057, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01\\x7f\\x16\\x06\\x00\\x1b\\x00\\x15\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-17T16:06:00", "lines": 27, "newlines": 21, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 BACK UP UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                      --------------------------------\n                       | BACK UP DATASET RESTRICTIONS |\n                       --------------------------------\n$\n  THE ASM2 BACK UP FACILITY CAN BE USED ON ALMOST ALL TYPES OF DATASETS.\n\n  CERTAIN TYPES OF DATASETS ARE NOT NORMALLY BACKED UP.\n    1. MULTI-VOLUME DATASETS\n    2. DATSETS WITH INVALID DCB INFORMATION.\n    3. EMPTY DATASETS (CAN BE ARCHIVED WITH PARAMETER OVERRIDE)\n    4. GDG DATASETS (SPECIAL GDG HANDLING IS AVAILABLE)\n\n  VSAM CATALOGS,  PAGE SPACES,  ALTERNATE INDEXES,  DATA COMPONENTS, AND INDEX\n  COMPONENTS CANNOT BE BACKED UP.  VSAM CLUSERS CAN BE BACKED UP.\n\n  ASM2 USES THE 'EXPORT TEMPORARY' FUNCTION OF IDCAMS TO BACK UP THE CLUSTER.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$BK1 ');\n4 * CHAR(8) INIT('VT$BK12 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$BK12": {"ttr": 1829, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01o\\x16\\x00\\x00\\x1a\\x00\\x19\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-16T16:00:00", "lines": 26, "newlines": 25, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 BACK UP UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                  ----------------------------------------\n                   | SYSTEM INITIATED INCREMENTAL BACK UP |\n                   ----------------------------------------\n$\n  IN SYSTEM INITIATED BACK UP,   ONLINE DISK VOLUMES ARE SCANNED FOR DATASETS\n  WHICH HAVED BEEN OPENED FOR UPDATE SINCE THE LAST INCREMENTAL BACKUP FOR THAT\n  VOLUME.  THESE DATASETS ARE AUTOMATICALLY BACKUP.\n\n  THIS METHOD INSURES ALL DATASETS (ON VOLUMES PROCESSED BY INCREMENTAL BACKUP)\n  ARE BACKED UP IF THEY HAVE BEEN CHANGED SINCE THE LAST INCREMENTAL BACKUP.\n  DATASETS NOT CHANGED NEED NOT BE BACKED UP SINCE A PREVIOUS BACKUP ALREADY\n  EXISTS.\n\n  NO ACTION IS NECESSARY BY THE USER OTHER THAN INSURING HIS DATASETS RESIDE ON\n  AN 'INCREMENATLLY BACKED UP' VOLUME.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$BK1 ');\n4 * CHAR(8) INIT('VT$BK13 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$BK13": {"ttr": 1827, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01o\\x14&\\x00\\x13\\x00\\x19\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-16T14:26:00", "lines": 19, "newlines": 25, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 BACK UP UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                            --------------------------\n                             | USER INITIATED BACK UP |\n                             --------------------------\n$\n  USER INITIATED BACK UP IS AVAILABLE TO SUPPLEMENT THE SYSTEM INITIATED BACK\n  UP OF ASM2.  THE USER CAN EXPLICITLY REQUEST BACK UP OF HIS DATASETS VIA A\n  TSO COMMAND.  THE SPF INTERFACE PROVIDES MENU SUPPORT TO THIS COMMAND.  (SEE\n  'QUEUEING DATASETS TO BE BACKED UP' FOR MORE INFORMATION.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$BK1 ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$BK2": {"ttr": 2071, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x02\\x1f\\x071\\x00\\x1b\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-21T07:31:00", "lines": 27, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 BACK UP UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     -------------------------------------\n                      | QUEUEING DATASETS TO BE BACKED UP |\n                      -------------------------------------\n$\n  A DATASET IS QUEUED FOR LATER BACK UP PROCESSING THROUGH THE ASM2 TSO\n  COMMAND.  AN SPF INTERFACE HAS BEEN PROVIDED TO SIMPLIFY USE OF THIS COMMAND.\n\n  A DATASET IS QUEUED FOR BACK UP BY SELECTING OPTION&B$ON THE &ASM2 BACK UP\n  UTILITY$MENU.  ENTER THE NAME OF THE DATASET TO BE BACKED UP IN THE&NAME$AREA.\n  NORMAL TSO NAMING CONVENTIONS APPLY.  USE SINGLE QUOTES&(')$FOR FULLY\n  QUALIFIED NAMES.\n\n  YOU MAY SPECIFY THE NUMBER OF DAYS THE BACKED UP DATASET SHOULD BE KEPT IN\n  THE&RETENTION$FIELD.  NOTE:  DEFAULT (AND MAXIMUM) IS&90$.  NOTE THAT THIS\n  MAXIMUM DOES NOT AFFECT INCREMENTALLY BACKED UP DATASET RETENTIONS.\n\n                         (CONTINUED ON NEXT PAGE)\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$BK  ');\n4 * CHAR(8) INIT('VT$BK3  ');\n5 * CHAR(8) INIT('VT$BK2A ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$BK2A": {"ttr": 1831, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00\\x80\\x01o\\x00\\x80\\x01o\\x16\\x03\\x00\\x18\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1980-01-16T00:00:00", "modifydate": "1980-01-16T16:03:00", "lines": 24, "newlines": 30, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 BACK UP UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     -------------------------------------\n                      | QUEUEING DATASETS TO BE BACKED UP |\n                      -------------------------------------\n$\n  WHEN A DATASET IS BACKED UP TO TAPE IT NORMALLY RETAINS THE SAME NAME.  USE\n  OF THE&QUALIFIER$CAUSES THE DATASET TO BE RENAMED.  THE VALUE SPECIFIED IS\n  INSERTED IMMEDIATELY BEFORE THE LAST NODE OF THE DATASET NAME.  FOR EXAMPLE:\n  IF THE QUALIFIER&SMITH$WERE SPECIFIED WHEN BACKING UP A DATASET NAMED\n $BCPQT.A1007211.CLAIMS$, THE NEW DATASET WOULD BE&BCPQT.A1007211.SMITH.CLAIMS$\n\n  THE&COMMENT$FIELD IS USED TO PLACE ANY USER INFORMATION, UP TO 30 CHARACTERS\n  LONG,  INTO THE ASM2 CATALOG.  WHEN INQUIRIES ARE MADE ABOUT BACKED UP\n  DATASETS,  THE COMMENT CAN BE DISPLAYED.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$BK2 ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$BK3": {"ttr": 2073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x02\\x1f\\x071\\x00\\x1b\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-21T07:31:00", "lines": 27, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 BACK UP UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     ------------------------------------\n                      | QUEUEING DATASETS TO BE RESTORED |\n                      ------------------------------------\n$\n  DATASETS ARE QUEUED FOR RELOADING BY SELECTING OPTION&R$ON THE&ASM2 BACK UP\n  UTILITY$MENU.  THE NAME OF THE DATASET TO BE RELOADED IS ENTERED IN\n  THE&NAME$FIELD. NORMAL TSO NAMING CONVENTIONS APPLY.  FULLY QUALIFIED DATASET\n  NAMES MUST BE ENCLOSED IN SINGLE QUOTES&(')$.\n\n  IF MULTIPLE BACK UP VERSIONS EXIST,  AND YOU DO NOT WANT TO RELOAD THE LATEST\n  VERSION,  YOU MAY SPECIFY THE RELATIVE VERSION IN MUCH THE SAME WAY AS\n  GENERATION DATASETS. YOU SPECIFY THE NEXT TO LATEST VERSION BY ADDING&(-1)$\n  FOLLOWING THE NAME. &(-2)$SPECIFIES THE ONE BEFORE THAT,  AND SO ON.\n\n  WHEN THE BATCH RELOAD JOB IS COMPLETE,  A MESSAGE WILL BE SENT TO THE TSO\n  USER WHO REQUESTED THE RELOAD.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$BK  ');\n4 * CHAR(8) INIT('VT$BK4  ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$BK4": {"ttr": 2075, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x02\\x1f\\x072\\x00\\x1e\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-21T07:32:00", "lines": 30, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------ ASM2 BACK UP UTILITY --------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                          -----------------------------\n                           | BACK UP DATASET INQUIRIES |\n                           -----------------------------\n$\n  ONCE A DATASET HAS BEEN BACKED UP BY THE BATCH RUN,  IT IS POSSIBLE TO\n  INQUIRE ABOUT THE STATUS THROUGH THE INQUIRY OPTION&(OPTION BLANK)$.\n\n  AN INQUIRY WITH NOTHING IN THE&NAME$FIELD WILL CAUSE DATASETS BEGINNING WITH\n  THE REQUESTOR'S USERID TO BE LISTED.\n\n  YOU MAY ENTER A PARTIAL OR FULL NAME IN THE&NAME$FIELD. UNLIKE NORMAL TSO\n  DATASET NAMES,   YOUR  USERID  IS&NOT$APPENDED TO  THE BEGINNING.   ALL\n  DATASETS&BEGINNING$WITH THE CHARACTERS SPECIFIED WILL BE LISTED.\n\n  THE&CYCLE$FIELD IS USED TO LIMIT THE INQUIRIES TO DATASETS BACKED UP WITHIN\n  THE LAST 'NNN' DAYS.  WHERE 'NNN' IS THE NUMBER ENTERED.\n\n  TYPING A&Y$IN THE&COMMENT$FIELD CAUSES ANY USER COMMENTS ENTERED AT THE TIME\n  THE DATASET WAS BACKED UP TO BE DISPLAYED.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$BK  ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$SM": {"ttr": 1833, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01o\\x16\\x16\\x00\\x1f\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-16T16:16:00", "lines": 31, "newlines": 30, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL -------------- ASM2 SPACE MANAGEMENT UTILITY ---------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                 -------------------------------------------\n                  | ASM2 SPACE MANAGEMENT UTILITY FUNCTIONS |\n                  -------------------------------------------\n$\n  THE ASM2 DISK SPACE MANAGEMENT UTILITY ALLOWS USERS MAKE USE OF THE ASM2\n  UNIQUE FACILITIES TO MANAGE THEIR OWN DATASETS EFFICIENTLY.  THE USER IS ABLE\n  TO EASILY DETERMINE BOTH THE AMOUNT OF SPACE HIS DATASETS OCCUPY,  AND THE\n  FREQUENCY WITH WHICH THE DATASET IS USED.  WITH THIS INFORMATION,  ASM2\n  PROVIDES FACILITIES TO COMPRESS DATASETS AND/OR TO RELEASE UNUSED SPACE FROM\n  OVER-ALLOCATED DATASETS.  OBSOLETE OR INFREQUENTLY USED DATASETS CAN BE\n  DELETED OR ARCHIVED TO TAPE.\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- GENERAL SPACE MANAGEMENT CONSIDERATIONS\n    &2$- DISPLAYING DISK DATASET USAGE INFORMATION\n    &3$- DISPLAYING DISK DATASET SPACE INFORMATION\n    &4$- COMPRESSING PARTITIONED DATASETS\n    &5$- RELEASING UNUSED SPACE FROM DATASETS\n    &6$- RESETTING END-OF-FILE ON SEQUENTIAL DATASETS\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(   1   ,   2   ,   3   ,   4   ,   5   ,   6   )\n               RETURN(VT$SM1 ,VT$SM2 ,VT$SM3 ,VT$SM4 ,VT$SM5 ,VT$SM6 );\n3 * CHAR(8) INIT('VTASM2 ');\n4 * CHAR(8) INIT('VTASM2  ');\n5 * CHAR(8) INIT('VT$SM1  ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$SM1": {"ttr": 2318, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x10_\\x15\\x14\\x00\\x1b\\x00\\x1b\\x00\\x00[\\xc3\\xe2\\xc7\\xf0\\xf5@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-04-14T15:14:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "$CSG05"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL -------------- ASM2 SPACE MANAGEMENT UTILITY ---------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&               ------------------------------------------------\n                | ASM2 SPACE MANAGEMENT GENERAL CONSIDERATIONS |\n                ------------------------------------------------\n$\n  THERE ARE TWO ITEMS REQUIRED TO BE ABLE TO MANAGE YOUR DISK DATASETS.  FIRST,\n  YOU MUST BE ABLE TO OBTAIN INFORMATION CONCERNING THE USE OF DISK SPACE.\n  SECONDLY YOU MUST BE ABLE TO CHANGE THE WAY IN WHICH THE DISK SPACE IS USED.\n\n  THE ASM2 SPACE MANAGEMENT UTILITY SEARCHES THE SYSTEM CATALOGS TO FIND ALL\n  THE DATASETS MATCHING THE CRITERIA WHICH YOU SPECIFY.  THE DISK VOLUMES ARE\n  THEN SEARCHED TO OBTAIN SPECIFIC INFORMATION ABOUT THE DATASETS. IF YOU SO\n  SPECIFY,  THE SPACE ALLOCATIONS CAN BE CHANGED TO MAKE MORE EFFICIENT USE OF\n  THE SPACE AVAILABLE.\n\n  VSAM DATASETS ARE NOT CURRENTLY SUPPORTED BY THE SPACE MANAGEMENT\n  UTILITY.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$SM  ');\n4 * CHAR(8) INIT('VT$SM2  ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$SM2": {"ttr": 2049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x80\\x01o\\x00\\x80\\x01o\\x16\"\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1980-01-16T00:00:00", "modifydate": "1980-01-16T16:22:00", "lines": 28, "newlines": 28, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL --------------- ASM2 SPACE MANAGEMENT UTILITY   ------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                   ---------------------------------------------\n                    | DISPLAYING DISK USAGE DATASET INFORMATION |\n                    ---------------------------------------------\n$\n  TO DISPLAY DISK DATASET USAGE INFORMATION A&U$IS ENTERED IN THE&SELECT OPTION\n $FIELD.\n\n  IF NO OTHER FIELDS ARE ENTERED,  ALL DISK DATASETS BEGINNING WITH THE\n  REQUESTOR'S USERID ARE DISPLAYED.\n\n  YOU MAY ALSO SELECT A SPECIFIC DATASET BY ENTERING DATASET NAME IN\n  THE&NAME$FIELD. (NORMAL TSO NAMING CONVENTIONS APPLY.  ENCLOSE FULLY\n  QUALIFIED DATASET NAMES IN SINGLE QUOTES)\n\n  BY SPECIFYING AN&L$IN THE&TYPE OF NAME$FIELD,  AND ONE OR MORE INDEX LEVELS\n  IN THE&NAME$FIELD, YOU CAN DISPLAY INFORMATION FOR ANY DISK DATASETS\n  BEGINNING WITH THE SPECIFIED INDEX LEVEL(S).\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$SM  ');\n4 * CHAR(8) INIT('VT$SM3  ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$SM3": {"ttr": 1835, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01o\\x16\\x18\\x00\\x1c\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-16T16:18:00", "lines": 28, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL --------------- ASM2 SPACE MANAGEMENT UTILITY   ------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     ---------------------------------------\n                      | DISPLAYING DISK DATASET INFORMATION |\n                      ---------------------------------------\n$\n  TO DISPLAY DISK DATASET SPACE INFORMATION A&BLANK$IS ENTERED IN THE&SELECT\n  OPTION$FIELD.\n\n  IF NO OTHER FIELDS ARE ENTERED,  ALL DISK DATASETS BEGINNING WITH THE\n  REQUESTOR'S USERID ARE DISPLAYED.\n\n  YOU MAY ALSO SELECT A SPECIFIC DATASET BY ENTERING DATASET NAME IN\n  THE&NAME$FIELD. (NORMAL TSO NAMING CONVENTIONS APPLY.  ENCLOSE FULLY\n  QUALIFIED DATASET NAMES IN SINGLE QUOTES)\n\n  BY SPECIFYING AN&L$IN THE&TYPE OF NAME$FIELD,  AND ONE OR MORE INDEX LEVELS\n  IN THE&NAME$FIELD, YOU CAN DISPLAY INFORMATION FOR ANY DISK DATASETS\n  BEGINNING WITH THE SPECIFIED INDEX LEVEL(S).\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$SM  ');\n4 * CHAR(8) INIT('VT$SM4  ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$SM4": {"ttr": 2059, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01\\x8f\\x12F\\x00\\x1e\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-18T12:46:00", "lines": 30, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL --------------- ASM2 SPACE MANAGEMENT UTILITY   ------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     ------------------------------------\n                      | COMPRESSING PARTITIONED DATASETS |\n                      ------------------------------------\n$\n  A PARTITIONED DATASET MAY BE COMPRESSED IN TWO WAYS.\n\n  THE COMPRESS OPTION&(C)$,  CAUSES THE NAMED DATASET TO BE COMPRESSED WITHOUT\n  RELEASING UNUSED SPACE.  THE RELEASE OPTION&(R)$, CAN ALSO CAUSE P.D.S\n  COMPRESSION IF A&Y$IS ENTERED IN THE&COMPRESS$FIELD.  (SEE 'RELEASING UNUSED\n  SPACE').\n\n  WHEN A DATASET IS COMPRESSED BY EITHER METHOD,  YOU HAVE THE OPTION OF FIRST\n  MAKING A BACK UP COPY OF THE DATASET PRIOR TO THE COMPRESS.  THIS OPTION IS\n  SELECTED BY CODING A&Y$IN THE&BACKUP$FIELD.  WHEN THIS IS DONE,  A COPY OF\n  THE DATASET MADE UNDER A NEW NAME.  THE NEW NAME IS THE SAME AS THE OLD NAME,\n  BUT AN INDEX LEVEL NAMED&BKUP$ IS INSERTED IMMEDIATELY BEFORE THE LAST\n  QUALIFIER. FOR EXAMPLE:\n          &TBD95XX.EDIT.DATA$ IS BACKED UP IN &TBD95XX.EDIT.BKUP.DATA$\n  THE BACK UP DATASET IS DELETED UPON SUCCESSFULL COMPLETION OF THE COMPRESS.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$SM  ');\n4 * CHAR(8) INIT('VT$SM5  ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$SM5": {"ttr": 2051, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01o\\x16$\\x00\\x1d\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-16T16:24:00", "lines": 29, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL --------------- ASM2 SPACE MANAGEMENT UTILITY   ------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                             --------------------------\n                              | RELEASING UNUSED SPACE |\n                              --------------------------\n$\n  THE RELEASE OPTION&(R)$IS USED TO RELEASE UNUSED SPACE FROM SEQUENTIAL OR\n  PARTIONED DATASETS.  YOU MAY ALSO SPECIFY A NUMBER OF TRACKS OF UNUSED SPACE\n  TO BE SAVED BY ENTERING THE NUMBER IN THE&SAVE$FIELD.  EVEN IF YOU MAKE A\n  MISTAKE IN THE 'SAVE' AMOUNT ASM2 WILL NEVER RELEASE USED SPACE.  IF THE\n  DATASET IS ALLOCATED IN CYLINDERS, THE 'SAVE' AMOUNT IS ROUNDED UP TO THE\n  NEAREST CYLINDER.\n\n  THE NAME OF THE DATASET FOR WHICH SPACE IS TO BE RELEASED, IS ENTERED IN\n  THE&NAME$FIELD.  (NORMAL TSO NAMING CONVENTIONS APPLY.  ENCLOSE FULLY\n  QUALIFIED NAMES IN SINGLE QUOTES.)\n\n  IN CONJUNCTION WITH THE RELEASE OPTION,  A P.D.S CAN ALSO\n  BE COMPRESSED PRIOR TO SPACE RELEASE.  (SEE 'COMPRESSING\n  PARTITIONED DATASETS').\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$SM  ');\n4 * CHAR(8) INIT('VT$SM6  ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VT$SM6": {"ttr": 2053, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01o\\x16%\\x00\\x16\\x00\\x0f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-16T16:25:00", "lines": 22, "newlines": 15, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL --------------- ASM2 SPACE MANAGEMENT UTILITY   ------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&               ------------------------------------------------\n                | RESETTING END-OF FILE ON SEQUENTIAL DATASETS |\n                ------------------------------------------------\n$\n  OPTION&E$CAN BE USED TO WRITE AN END-OF-FILE AT THE BEGINNING OF A SEQUENTIAL\n  DATASET.\n\n  THE DATASET NAME TO BE RESET IS ENTERED IN THE&NAME$FIELD.  (NORMAL TSO\n  NAMING CONVENTIONS APPLY.  ENCLOSE FULLY QUALIFIED NAMES IN SINGLE QUOTES.)\n\n  IF A NON-SEQUENTIAL DATASET IS SPECIFIED,  THE RESET REQUEST IS IGNORED.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n3 * CHAR(8) INIT('VT$SM  ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTASM2": {"ttr": 1811, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x80\\x01_\\x00\\x80\\x01_\\x10X\\x00!\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1980-01-15T00:00:00", "modifydate": "1980-01-15T10:58:00", "lines": 33, "newlines": 30, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------- ASM2 DISK SPACE MANAGEMENT UTILITIES ------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                  ----------------------------------------\n                   | ASM2 UTILITIES - GENERAL INFORMATION |\n                   ----------------------------------------\n$\n  THE ASM2 DISK MANAGEMENT SYSTEM FROM THE CAMBRIDGE SYSTEMS GROUP IS INTENDED\n  TO SIMPLIFY THE MANAGEMENT OF DISK DATA IN MEDIUM AND LARGE SYSTEMS USING ANY\n  OS OPERATING SYSTEM.   UTILITIES ARE PROVIDED TO ALLOW INSTALLATIONS TO MORE\n  EASILY UTILIZE ALL THEIR STORAGE MEDIA.   THIS INCLUDES DISK,  TAPE, AND MASS\n  STORAGE SYSTEMS.   ASM2  ALLOWS  EFFICIENT  AND  ECONOMICAL  USE  OF THE MOST\n  EFFECTIVE MEDIUM. DISK IS USED FOR HIGH USE, QUICK ACCESS TO RELATIVELY SMALL\n  AMOUNTS OF DATA.   MASS STORAGE  OR  TAPE  IS  UTILIZED FOR LOW USE AND LARGE\n  VOLUME DATASETS.\n\n  SEVERAL OF THE UTILITIES OF ASM2 ARE USER ORIENTED.  THESE ALLOW THE USER TO\n  MAINTAIN BETTER CONTROL OF HIS DATA  ,  WHILE  PERMITTING  A  HIGH DEGREE OF\n  TOTAL SYSTEM EFFICIENCY.\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- ARCHIVE UTILITY FUNCTIONS\n    &2$- BACK UP UTILITY FUNCTIONS\n    &3$- SPACE MANAGEMENT UTILITY FUNCTIONS\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(   1   ,   2   ,   3   )\n               RETURN(VT$AR  ,VT$BK  ,VT$SM  );\n3 * CHAR(8) INIT('       ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('VT$AR   ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTJTIP": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x18\\x00\\x18\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------------- JTIP UTILITY ------------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                    ----------------------------------\n                     |         JTIP   UTILITY         |\n                     ----------------------------------\n$\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- LISTING JOB NAMES/IDS VIA THE JTIP SHOW COMMAND\n    &2$- LISTING A JOBS FETCH DATASET INFORMATION\n    &3$- DELETING A JOBS OUTPUT\n    &4$- REQUEUEING JOB OUTPUT FROM FETCH QUEUE TO SYSOUT QUEUE\n    &5$- DISPLAYING JOB OUTPUT AT THE TERMINAL\n    &6$- COPYING OUTPUT TO TEMPORARY DATASET AND BROWSE\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(   1   ,   2   ,   3   ,   4   ,   5   ,   6   )\n               RETURN(VTJTIP1,VTJTIP2,VTJTIP3,VTJTIP4,VTJTIP5,VTJTIP6);\n3 * CHAR(8) INIT('VTJTIP ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('VTJTIP1 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTJTIPB": {"ttr": 1539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x14\\x00\\x14\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 20, "newlines": 20, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL ------------------ JTIP UTILITY - DISPLAY ------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n$  THE&DISPLAY FETCH SYSOUT JOB$FUNCTION CAUSED A LISTING FOR THE SPECIFIED JOB\n   TO BE DISPLAYED AT THE TERMINAL.  THE LISTING WAS PRODUCED VIA THE TSO FETCH\n   COMMAND.\n\n   THE SPF&BROWSE$FUNCTION WAS AUTOMATICALLY INVOKED TO DISPLAY THE\n   JOB LISTING, AND ALL BROWSE OPTIONS MAY BE USED, INCLUDING\n  &SCROLLING$AND THE&FIND$COMMAND.  USE THE&END$KEY TO TERMINATE THE\n   BROWSE FUNCTION AND RETURN TO THE JTIP UTILITY MENU.\n\n   IF YOU PRESS THE&ENTER$KEY NOW YOU WILL ENTER THE BROWSE TUTORIAL.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('TTUTOR  ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('TUB     ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTJTIP1": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x18\\x00\\x18\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL ----------- JTIP UTILITY - SHOW JOB NAMES / ID'S ------------ TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n   THE&SHOW JOBS$FUNCTION ( OPTION&L$) IS USED TO DISPLAY THE STATUS OF\n   A JOB OR JOBS.\n\n   FILL IN THE FOLLOWING FIELDS OF THE JTIP UTILITY MENU:\n       - ENTER&L$IN THE SELECT OPTION FIELD.\n\n   THE FOLLOWING RULES APPLY FOR THE&JOBNAME/JOBID$PARAMETER WHEN USED\n   WITH THE&L$OPTION:\n\n       -&JOBNAME/ID$= BLANK - ALL JOBS THAT HAVE JOB NAMES BEGINNING WITH\n                              THE USER'S ID WILL BE DISPLAYED.\n       -&JOBNAME$   = USERID + ONE CHARACTER - SAME AS BLANK.\n       -&JOBNAME/ID$= ANYTHING ELSE - ONLY THE NAMED JOB WILL BE DISPLAYED.\n\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTJTIP  ');\n4 * CHAR(8) INIT('VTJTIP2 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTJTIP2": {"ttr": 1543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x11\\x00\\x11\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL ------------- JTIP UTILITY - SHOW FETCH INFO --------------  TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n   THE&SHOW FETCH$FUNCTION ( OPTION&S$) IS USED TO DISPLAY THE NUMBER OF\n   LINES, COPIES, AND FORM TYPE FOR EACH SYSOUT DATASET OF A JOB IN THE\n  &FETCH$QUEUE.\n\n   FILL IN THE FOLLOWING FIELDS OF THE JTIP UTILITY MENU:\n      - ENTER&S$IN THE SELECT OPTION FIELD.\n      - ENTER A&JOBNAME$OR&JOBID.$ ONE OR THE OTHER MUST BE SPECIFIED.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTJTIP  ');\n4 * CHAR(8) INIT('VTJTIP3 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTJTIP3": {"ttr": 1545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x10\\x00\\x10\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL ------------ JTIP UTILITY - DELETE JOB OUTPUT -------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n   THE&DELETE$FUNCTION ( OPTION&D$) IS USED TO DELETE THE OUTPUT OF A\n   JOB IN THE&FETCH$QUEUE.\n\n   FILL IN THE FOLLOWING FIELDS OF THE JTIP UTILITY MENU:\n      - ENTER&D$IN THE SELECT OPTION FIELD.\n      - ENTER A&JOBNAME$OR&JOBID.$ ONE OR THE OTHER MUST BE SPECIFIED.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTJTIP  ');\n4 * CHAR(8) INIT('VTJTIP4 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTJTIP4": {"ttr": 1547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x12\\x00\\x12\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 18, "newlines": 18, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL ------------- JTIP UTILITY - ROUTE JOB OUTPUT -------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n   THE&ROUTE$FUNCTION ( OPTION&R$) IS USED TO ROUTE THE OUTPUT OF A JOB\n   IN THE&FETCH$QUEUE TO THE SYSOUT QUEUE FOR NORMAL OUTPUT PROCESSING.\n   ALL DATASETS FOR THE JOB WILL BE PRINTED TOGETHER, I.E., BETWEEN TWO\n   BANNER PAGES.\n\n   FILL IN THE FOLLOWING FIELDS OF THE JTIP UTILITY MENU:\n      - ENTER&R$IN THE SELECT OPTION FIELD.\n      - ENTER A&JOBNAME$OR&JOBID.$ ONE OR THE OTHER MUST BE SPECIFIED.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTJTIP  ');\n4 * CHAR(8) INIT('VTJTIP5 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTJTIP5": {"ttr": 1549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x1a\\x00\\x1a\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL ------------ JTIP UTILITY - DISPLAY JOB OUTPUT ------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n   THE&DISPLAY$FUNCTION ( OPTION&O$) IS USED TO VIEW THE OUTPUT OF A JOB\n   IN THE&FETCH$QUEUE AT THE TERMINAL. COLUMN NUMBERS MAY BE SPECIFIED.\n\n   FILL IN THE FOLLOWING FIELDS OF THE JTIP UTILITY MENU:\n      - ENTER&O$IN THE SELECT OPTION FIELD.\n      - ENTER A&JOBNAME$OR&JOBID.$ ONE OR THE OTHER MUST BE SPECIFIED.\n\n   THE FOLLOWING RULES APPLY FOR THE&DDNAME/DATASET ID$PARAMETERS WHEN\n   USED WITH THE&O$OPTION:\n\n      -&DDNAME$AND&DATASET ID$ARE MUTUALLY EXCLUSIVE. CHOSE ONE OR THE OTHER.\n\n      -&DDNAME$    -  ENTER THE 1 TO 8 CHARACTER DDNAME TO BE DISPLAYED.\n      -&DATASET ID$-  ENTER THE 1 TO 4 DIGIT NUMBER OF THE DATASET TO BE\n                      DISPLAYED. THIS IS THE NUMBER UNDER THE&PN$HEADING\n                      OBTAINED WITH THE&SHOW FETCH$FUNCTION ( OPTION&S$).\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTJTIP  ');\n4 * CHAR(8) INIT('VTJTIP6 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTJTIP6": {"ttr": 1551, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL ------------- JTIP UTILITY - FETCH AND BROWSE -------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n   THE&FETCH AND BROWSE$FUNCTION ( OPTION&BLANK$) IS USED TO VIEW THE OUTPUT\n   OF A JOB IN THE&FETCH$QUEUE. JOB OUTPUT IS FETCHED TO A TEMPORARY DATASET\n   AND CONTROL IS PASSEDTO SPF BROWSE. ANY OF THE BROWSE OPTIONS CAN BE USED.\n\n   FILL IN THE FOLLOWING FIELDS OF THE JTIP UTILITY MENU:\n      - ENTER&BLANK$IN THE SELECT OPTION FIELD.\n      - ENTER A&JOBNAME$OR&JOBID.$ ONE OR THE OTHER MUST BE SPECIFIED.\n\n   THE FOLLOWING RULES APPLY FOR THE&DDNAME/DATASET ID$PARAMETERS WHEN\n   USED WITH THE&BLANK$OPTION:\n\n      -&DDNAME$AND&DATASET ID$ARE MUTUALLY EXCLUSIVE. CHOSE ONE OR THE OTHER.\n\n      -&DDNAME$    -  ENTER THE 1 TO 8 CHARACTER DDNAME TO BE DISPLAYED.\n      -&DATASET ID$-  ENTER THE 1 TO 4 DIGIT NUMBER OF THE DATASET TO BE\n                      DISPLAYED. THIS IS THE NUMBER UNDER THE&PN$HEADING\n                      OBTAINED WITH THE&SHOW FETCH$FUNCTION ( OPTION&S$).\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTJTIP  ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN": {"ttr": 2314, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x00\\x00y&\\x9f\\x00\\x80\\x10/\\x18\\x19\\x00$\\x00%\\x00\\x00[\\xc3\\xe2\\xc7\\xf0\\xf5@@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1980-04-11T18:19:00", "lines": 36, "newlines": 37, "modlines": 0, "user": "$CSG05"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                       --------------------------------\n&                       |  PANVALET PROCESSING OPTION  |\n&                       --------------------------------\n&\n$   THE PANVALET PROCESSING OPTION ALLOWS A PANVALET FUNCTION TO BE EXECUTED\n$   UNDER SPF. THE PANVALET SELECTION MENU, WHICH IS DISPLAYED WHEN OPTION\n$   &P$IS ENTERED ON THE PRIMARY OPTION MENU, ALLOWS YOU TO SELECT ONE OF\n$   THE TEN PANVALET OPTIONS LISTED BELOW:\n&\n$THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n   & G$- PAN PROCESSING OPTION GENERAL INFORMATION\n   & 0$- PAN EDIT\n   & 1$- PAN ADD\n   & 2$- PAN CHANGE\n   & 3$- PAN COPY\n   & 4$- PAN DISPLAY\n   & 5$- PAN LISTDS\n   & 6$- PAN PRINT\n   & 7$- PAN RENAME\n   & 8$- PAN RETRIEVE\n   & 9$- PAN STORE\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')   CURSOR;\n 2 SELECT CHAR(8)\n          LIST   (G       ,0       ,1       ,2       ,3       ,4       ,\n                  5       ,6       ,7       ,8       ,9       )\n          RETURN (VTPAN00 ,VTPANE  ,VTPAN01 ,VTPAN02 ,VTPAN03 ,VTPAN04 ,\n                  VTPAN05 ,VTPAN06 ,VTPAN07 ,VTPAN08 ,VTPAN09 );\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('TC      ');\n 5 *      CHAR(8)  INIT('VTPAN00 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPANE": {"ttr": 1575, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00y)o\\x00y0?\\x12\\x11\\x00\\x18\\x00\\x18\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1979-10-23T00:00:00", "modifydate": "1979-10-30T12:11:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "TYD9801"}, "text": "&TUTORIAL --------------------- PAN EDIT ------------------------------ TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n                    &----------------------------------&\n                    &-            PAN EDIT            -&\n                    &----------------------------------$\n\n$PAN EDIT ALLOWS YOU TO MORE EASILY USE SPF EDIT TO MODIFY MEMBERS OF\n PANVALET LIBRARIES.\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &0$- GENERAL INTRODUCTION\n    &1$- EDIT PANVALET MEMBER\n    &2$- SAVE EDITED MEMBER VIA PAN STORE\n    &3$- END PANVALET EDIT STATUS WITHOUT SAVE\n    &4$- DISPLAY EDIT STATUS OF PANVALET MEMBER\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(   0   ,   1   ,   2   ,   3   ,   4   )\n               RETURN(VTPANE0,VTPANE1,VTPANE2,VTPANE3,VTPANE4);\n3 * CHAR(8) INIT('VTPAN   ');\n4 * CHAR(8) INIT('VTSUBMT ');\n5 * CHAR(8) INIT('VTPANE0 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPANEX": {"ttr": 1797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00y)o\\x00y0O\\x17'\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1979-10-23T00:00:00", "modifydate": "1979-10-31T17:27:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "TYD9801"}, "text": "&TUTORIAL -------------- PAN EDIT - OWNERSHIP ------------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n&\n&                    &-----------------------------------&\n&                    &-            PAN EDIT             -&\n&                    &-    MODULE OWNERSHIP CONCEPT     -&\n&                    &-----------------------------------$\n$\n$ PAN EDIT USES AN OWNERSHIP CONCEPT TO CONTROL ACCESS TO PANVALET MEMBERS.\n$ INITIALLY A PANVALET MEMBER IS 'UNOWNED' AFTER IT IS ADDED TO THE\n$ PANVALET LIBRARY.  WHEN A MODULE IS RETRIEVED VIA PAN EDIT OR PAN\n$ RETRIEVE, THE MODULE BECOMES 'OWNED' BY THAT TSO USER.  WHEN 'OWNED',\n$ A MODULE CAN NOT BE UPDATED BY BATCH PANVALET.  ONLY THE 'OWNER' CAN\n$ UPDATE IT VIA PAN EDIT 'SAVE' OR PAN STORE.\n$\n$ A MODULE RETRIEVED WHICH IS NOT 'TEST,ENABLED, AND ACTIVE' WILL NOT\n$ BECOME 'OWNED' SINCE IT CANNOT BE STORED BACK ON THE PANVALET LIBRARY.\n$\n$ A MODULE IS CHANGED BACK TO 'UNOWNED' AFTER A SUCCESSFULL PAN STORE,\n$ PAN EDIT SAVE, OR PAN EDIT END.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTPANE  ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPANE0": {"ttr": 1569, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00y)o\\x00y)o\\x15(\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1979-10-23T00:00:00", "modifydate": "1979-10-23T15:28:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "TYD9801"}, "text": "&TUTORIAL -------------- PAN EDIT - INTRODUCTION ---------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n&\n                     &-----------------------------------&\n                     &-            PAN EDIT             -&\n                     &-       GENERAL INTRODUCTION      -&\n                     &-----------------------------------$\n$\n$ PAN EDIT IS DESIGNED TO SIMPLIFY THE INTERFACE BETWEEN SPF EDIT AND\n$ PANVALET.  NORMALLY YOU MUST RETRIEVE A MEMBER FROM THE PANVALET\n$ LIBRARY INTO AN SPF DATASET,  AND THEN USE SPF EDIT TO MAKE CHANGES.\n$ AFTER YOUR CHANGES ARE COMPLETE,  YOU MUST USE PANVALET 'STORE' TO\n$ RETURN THE MODIFIED MEMBER TO PANVALET.  THESE OPERATIONS REQUIRE\n$ SEVERAL STEPS AND ALSO REQUIRE MANUAL CO-ORDINATION TO PREVENT MORE\n$ THAN ONE PERSON FROM WORKING ON THE SAME PANVALET MEMBER IN SEPARATE\n$ SPF DATASETS.\n$\n$ PAN EDIT SIMPLIFIES THE OPERATION BY FURNISHING ADDITIONAL CHECKING\n$ AND CONTROLS TO INSURE ONLY ONE PERSON IS EDITING A PANVALET MEMBER AT\n$ A TIME.  IT SIMPLIFIES USAGE BY PERFORMING SEVERAL FUNCTIONS WITH\n$ FEWER SCREENS.\n$\n                          $(CONTINUED ON NEXT PAGE)\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTPANE  ');\n4 * CHAR(8) INIT('VTPANE1 ');\n5 * CHAR(8) INIT('VTPANE01');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPANE01": {"ttr": 1799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00y)o\\x00y0O\\x171\\x00\\x1c\\x00\\x19\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1979-10-23T00:00:00", "modifydate": "1979-10-31T17:31:00", "lines": 28, "newlines": 25, "modlines": 0, "user": "TYD9801"}, "text": "&TUTORIAL -------------- PAN EDIT - INTRODUCTION ---------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n$ HERE ARE HIGHLIGHTS OF PAN EDIT FUNCTIONS:\n$   1. FOR EDIT REQUESTS, A CHECK IS MADE TO SEE IF THE MEMBER HAS\n$      ALREADY BEEN RETRIEVED BY ANOTHER MEMBER.\n$\n$   2. FOR EDIT REQUESTS,  A PAN RETRIEVE COMMAND IS EXECUTED AND THE\n$      SPF EDIT DRIVER IS CALLED DIRECTLY FROM THE PAN EDIT SCREEN.\n$\n$   3. FOR EDIT REQUESTS, SPF COMPATABLE SEQUENCE NUMBERS, BANKERS AUDIT\n$      TRAIL INFORMATION,  AND AN SPF COMPATABLE DIRECTORY ENTRY ARE\n$      GENERATED FOR COBOL AND ASSEMBLER MEMBERS.\n$\n$   4. FOR SAVE REQUESTS,  THE PAN 'STORE' COMMAND IS EXECUTED, AND\n$      THE SPF MEMBER IS DELETED FROM THE SPF LIBRARY.\n$\n$NOTES: PAN EDIT,  BATCH PANVALET,  AND PAN 'STORE' AND 'RETRIEVE'\n$      PROCCESSING ARE COORDINATED.  IE. A BATCH UPDATE OR PAN RETRIEVE\n$      IS NOT ALLOWED IF THE MODULE IS 'OWNED'.  A PAN 'STORE' IS NOT\n$      ALLOWED UNLESS THE 'STORER' IS ALSO THE 'OWNER'.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTPANE0 ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPANE1": {"ttr": 1801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00y)o\\x00y0O\\x172\\x00\\x1c\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1979-10-23T00:00:00", "modifydate": "1979-10-31T17:32:00", "lines": 28, "newlines": 30, "modlines": 0, "user": "TYD9801"}, "text": "&TUTORIAL -------------- PAN EDIT - EDIT OPTION ----------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n&\n&                    &-----------------------------------&\n&                    &-            PAN EDIT             -&\n&                    &-        OPTION ' ' - EDIT        -&\n&                    &-----------------------------------$\n$\n$ THE EDIT FUNCTION PERFORMS THE FOLLOWING FUNCTIONS:\n$   1. IF PAN MEMBER IS NOT CURRENTLY 'OWNED' BY A TSO USER,  IT IS\n$      RETRIEVED INTO THE SPF DATASET SPECIFIED.  IF 'OWNED' BY THE TSO\n$      USER ENTERING THE EDIT OPTION,  SPF EDIT IS CALLED WITHOUT A\n$      RETRIEVE.  IF THE MEMBER IS OWNED BY ANOTHER TSO USER, THE EDIT\n$      REQUEST IS DENIED;  THE MEMBER CANNOT BE RETRIEVED.\n$\n$   2. IF THE MEMBER IS COBOL OR ASSEMBLER,  AND IT IS NOT 'NOFORMAT',\n$      THE SAME 'AUDIT TRAIL' CONSTANTS ARE INSERTED AS IN BATCH\n$      PROCCESSING;  THE MODULE IS RESEQUENCED USING STANDARD SPF OR\n$      COBOL SEQUENCE NUMBERS.\n$\n                           (CONTINUED ON NEXT PAGE)\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTPANE  ');\n4 * CHAR(8) INIT('VTPANE2 ');\n5 * CHAR(8) INIT('VTPANE11');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPANE11": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00y)o\\x00y0O\\x173\\x00\\x1a\\x00\\x1c\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1979-10-23T00:00:00", "modifydate": "1979-10-31T17:33:00", "lines": 26, "newlines": 28, "modlines": 0, "user": "TYD9801"}, "text": "&TUTORIAL -------------- PAN EDIT - EDIT OPTION ----------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n&\n                     &-----------------------------------&\n                     &-            PAN EDIT             -&\n                     &-        OPTION ' ' - EDIT        -&\n                     &-----------------------------------$\n$\n$   3. THE SPF DIRECTORY STATISTICS ARE INITIALIZED.  THE 'CREATION DATE'\n$      IS SET TO THE 'DATE LAST MAINTAINED' FROM PANVALET.\n$\n$   4. IF THE MEMBER IS NOT 'TEST,ACTIVE,ENABLED' THE RETRIEVE IS DONE,\n$      BUT THE MEMBER IS NOT 'OWNED';  NO SAVE (STORE) WILL BE ALLOWED.\n$\n$NOTES: YOU NEED SPECIFY ONLY THE SPF MEMBER OR THE PANVALET MEMBER ON\n$      THE PAN EDIT MENU.  IF ONLY THE SPF MEMBER IS SPECIFIED,  THE PAN\n$      MEMBER NAME IS DEFAULTED TO THE SAME NAME. IF ONLY THE PAN MEMBER\n$      SPECIFIED,  THE SPF NAME IS DEFAULTED TO THE FIRST 8 CHARACTERS\n$      OF THE PAN MEMBER NAME.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTPANE1 ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPANE2": {"ttr": 1571, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00y)o\\x00y)o\\x153\\x00\\x1a\\x00\\x1a\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1979-10-23T00:00:00", "modifydate": "1979-10-23T15:33:00", "lines": 26, "newlines": 26, "modlines": 0, "user": "TYD9801"}, "text": "&TUTORIAL -------------- PAN EDIT - SAVE OPTION ----------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n&\n                     &-----------------------------------&\n                     &-            PAN EDIT             -&\n                     &-        OPTION 'S' - SAVE        -&\n                     &-----------------------------------$\n$\n$ THE SAVE FUNCTION PERFORMS THE FOLLOWING FUNCTIONS:\n$   1. IF PAN MEMBER IS CURRENTLY 'OWNED' BY THE TSO USER ISSUING THE\n$      SAVE REQUEST,  PANVALET 'STORE' IS INVOKED TO STORE THE MEMBER\n$      BACK ON THE PANVALET LIBRARY. IF THE MODULE IS NOT OWNED BY THE\n$      REQUESTOR,  THE SAVE IS DISSALLOWED.\n$\n$   2. IF THE 'SAVED' MEMBER IS DELETED FROM THE SPF LIBRARY, AFTER\n$      SUCCESSFULL 'STORE'.\n$\n$   3. THE MODULE IS MARKED AS 'NOT OWNED' SO ANOTHER USER MAY RETRIEVE\n$      IT FOR EDIT.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTPANE  ');\n4 * CHAR(8) INIT('VTPANE3 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPANE3": {"ttr": 1573, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00y)o\\x00y)o\\x155\\x00\\x15\\x00\\x15\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1979-10-23T00:00:00", "modifydate": "1979-10-23T15:35:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "TYD9801"}, "text": "&TUTORIAL -------------- PAN EDIT - END OPTION ------------------------ TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n&\n                     &-----------------------------------&\n                     &-            PAN EDIT             -&\n                     &-        OPTION 'E' - END         -&\n                     &-----------------------------------$\n$\n$ THE END FUNCTION PERFORMS THE FOLLOWING FUNCTIONS:\n$   1. IF PAN MEMBER IS CURRENTLY 'OWNED' BY THE TSO USER ISSUING THE\n$      END REQUEST,  THE MODULE IS MARKED AS 'NOT OWNED'. IF THE MODULE\n$      IS NOT OWNED BY THE REQUESTER,  NO ACTION IS PERFORMED.\n$\n$   2. THE MODULE IS LEFT ON THE SPF LIBRARY.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTPANE  ');\n4 * CHAR(8) INIT('VTPANE4 ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPANE4": {"ttr": 1805, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00y)o\\x00y0O\\x175\\x00\\x11\\x00\\x11\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1979-10-23T00:00:00", "modifydate": "1979-10-31T17:35:00", "lines": 17, "newlines": 17, "modlines": 0, "user": "TYD9801"}, "text": "&TUTORIAL ------------ PAN EDIT - DISPLAY OPTION ---------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n&\n                     &-----------------------------------&\n                     &-            PAN EDIT             -&\n                     &-      OPTION 'D' - DISPLAY       -&\n                     &-----------------------------------$\n$\n$ THE DISPLAY FUNCTION PERFORMS THE FOLLOWING FUNCTION:\n$   1. THE LAST ACTION PERFORMED USING PAN/TSO IS DISPLAYED.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('VTPANE  ');\n4 * CHAR(8) INIT('VTPANE  ');\n5 * CHAR(8) INIT('VTPAN01 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN00": {"ttr": 1579, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00y&\\x9f\\x00y0?\\x12(\\x00&\\x00$\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-10-30T12:28:00", "lines": 38, "newlines": 36, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                       ----------------------------------\n&                       |  PANVALET GENERAL INFORMATION  |\n&                       ----------------------------------\n&\n$   THE PANVALET PROCESSING OPTION USES THE TSO/PAN COMMAND TO PERFORM THE\n$   FOLLOWING FUNCTIONS:\n&\n$             EDIT, ADD, CHANGE, COPY, DISPLAY,\n$             LISTDS, PRINT, RENAME, RETRIEVE, AND STORE.\n$\n$   DISCUSSIONS OF THE INDIVIDUAL FUNCTIONS MAY BE OBTAINED BY SELECTED NUMBER:\n$\n   & 0$- PAN EDIT\n   & 1$- PAN ADD\n   & 2$- PAN CHANGE\n   & 3$- PAN COPY\n   & 4$- PAN DISPLAY\n   & 5$- PAN LISTDS\n   & 6$- PAN PRINT\n   & 7$- PAN RENAME\n   & 8$- PAN RETRIEVE\n   & 9$- PAN STORE\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')   CURSOR;\n 2 SELECT CHAR(8)\n          LIST   (0       ,1       ,2       ,3       ,4       ,5       ,\n                  6       ,7       ,8       ,9       )\n          RETURN (VTPANE  ,VTPAN01 ,VTPAN02 ,VTPAN03 ,VTPAN04 ,VTPAN05 ,\n                  VTPAN06 ,VTPAN07 ,VTPAN08 ,VTPAN09 );\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPAN   ');\n 5 *      CHAR(8)  INIT('VTPANE  ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN01": {"ttr": 1577, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00y&\\x9f\\x00y0?\\x12\\x14\\x00\\x1d\\x00\\x1d\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-10-30T12:14:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                             ---------------------\n&                             |  PAN ADD COMMAND  |\n&                             ---------------------\n&\n$   A TSO PDS MEMBER OR SEQUENTIAL DSN MAY BE ADDED TO THE PANVALET LIBRARY.\n$\n$        SPECIFY: DDNAME   (NAME OF PANVALET LIBRARY  EG. PAN3912)\n$                 PANNAME  (NEW PANVALET MEMBER NAME TO BE ADDED)\n$                 FORMAT   (ASM, COBOL, DATA, FORT, PL1, OBJ, OTHER, JCL)\n$\n$                 PROJECT-LIBRARY-TYPE-MEMBER (NORMAL SPF DATASET NAME FORMAT)\n$\n$                 DSNAME   (NON SPF SEQUENTIAL OR PARTITIONED DATASET)\n$\n$                 USER     (OPTIONAL USER CODE OF THE PANVALET MEMBER)\n$                 CONTROL  (CONTROL CODE OF THE PANVALET LIBRARY)\n$                 INT FMT  (INTERNAL FORMAT - TSO, PANVALET, OR NOFORMAT)\n$                 DISP     (DISPOSITION OF FROM DATASET, KEEP OR DELETE)\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPANE  ');\n 5 *      CHAR(8)  INIT('VTPAN02 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN02": {"ttr": 1553, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x1d\\x00\\x1d\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 29, "newlines": 29, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                           ------------------------\n&                           |  PAN CHANGE COMMAND  |\n&                           ------------------------\n&\n$   INDIVIDUAL PANVALET DATASET ATTRIBUTES MAY BE APPLIED, ALTERED OR REMOVED.\n$   ONLY ONE ATTRIBUTE MAY BE CHANGED AT A TIME.\n$\n$        SPECIFY: DDNAME   (NAME OF PANVALET LIBRARY  EG. PAN3912)\n$                 PANNAME  (NAME OF PANVALET MEMBER)\n$\n$                 STATUS   (TEST/PROD ENABLED/DISABLED ACTIVE/INACTIVE)\n$                 COMMENT  (50 BYTE COMMENT FIELD. MUST BE IN QUOTES)\n$                 USER     (CHANGE USER CODE AND/OR SECURITY LEVEL)\n$                 LEVEL    (CHANGE LEVEL OF PANVALET MEMBER)\n$\n$                 ACCESS   (ACCESS CODE OF THE PANVELET MEMBER)\n$                 CONTROL  (CONTROL CODE OF THE PANVALET LIBRARY)\n$\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPAN01 ');\n 5 *      CHAR(8)  INIT('VTPAN03 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN03": {"ttr": 1555, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x18\\x00\\x18\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                            ----------------------\n&                            |  PAN COPY COMMAND  |\n&                            ----------------------\n&\n$   THE COPY FUNCTION CREATES A DUPLICATE MEMBER ON THE PANVALET LIBRARY GIVING\n$   A NEW NAME AND PLACING THE COPY IN TEST, ENABLE STATUS.\n$\n$        SPECIFY:   DDNAME   (NAME OF PANVALET LIBRARY EG. PAN3912)\n$              FROM PANNAME  (NAME OF PANVALET MEMBER TO BE COPIED)\n$                TO NEWNAME  (NEW PANVALET MEMBER TO BE COPIED TO)\n$\n$                   ACCESS   (ACCESS CODE OF THE PANVALET MEMBER)\n$                   CONTROL  (CONTROL CODE OF THE PANVALET LIBRARY)\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPAN02 ');\n 5 *      CHAR(8)  INIT('VTPAN04 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN04": {"ttr": 1581, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00y&\\x9f\\x00y0?\\x12)\\x00\\x19\\x00\\x18\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf0\\xf1@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-10-30T12:29:00", "lines": 25, "newlines": 24, "modlines": 0, "user": "TYD9801"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                           -------------------------\n&                           |  PAN DISPLAY COMMAND  |\n&                           -------------------------\n&\n$   A PANVALET MEMBER MAY BE DISPLAYED FROM THE PANVALET LIBRARY.\n$\n$        SPECIFY: DDNAME   (NAME OF PANVALET LIBRARY   EG. PAN3912)\n$                 PANNAME  (NAME OF PANVALET MEMBER TO BE DISPLAYED)\n$\n$                 ACCESS   (ACCESS CODE OF THE PANVALET MEMBER)\n$                 EXPAND   (OPTIONAL REQUEST TO EXPAND IMBEDDED ++INCLUDE\n$                           STATEMENTS DURING DISPLAY. DEFAULT IS NOEXPAND)\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPAN03 ');\n 5 *      CHAR(8)  INIT('VTPAN05 ');\n<END>\n* THE FOLLOWING PARAMETER IS NOT USED BY THE PANDSPLY PROGRAM.\n$                 SEQ2     (OPTIONAL ENDING LINE NUMBER TO BE DISPLAYED)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN05": {"ttr": 1557, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x18\\x00\\x18\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 24, "newlines": 24, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                           ------------------------\n&                           |  PAN LISTDS COMMAND  |\n&                           ------------------------\n&\n$   THE ATTRIBUTES (DIRECTORY LISTING) OF A PANVALET MEMBER MAY BE DISPLAYED.\n$\n$        SPECIFY: DDNAME   (NAME OF PANVALET LIBRARY   EG. PAN3912)\n$                 PANNAME  (NAME OF PANVALET MAMBER)\n$\n$                 ACCESS   (ACCESS CODE OF THE PANVALET MEMBER)\n$                 CONTROL  (CONTROL CODE OF THE PANVALET LIBRARY)\n$                 COMMENT  (COMMENTS ARE LISTED BY DEFAULT. CLEAR\n$                           'COMMENT' TO NOT SHOW COMMENTS)\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPAN04 ');\n 5 *      CHAR(8)  INIT('VTPAN06 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN06": {"ttr": 1559, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                            -----------------------\n&                            |  PAN PRINT COMMAND  |\n&                            -----------------------\n&\n$   PRODUCES A SELECTIVE DIRECTORY LIST OF THE PANVALET LIBRARY.  ENTER ONLY\n$   ONE SELECTION CRITERION PER EXECUTION\n$\n$        SPECIFY: DDNAME  (NAME OF PANVALET LIBRARY  EG. PAN3912)\n$\n$                 NAME    (LIST MEMBERS BEGINNING WITH THIS STRING)\n$                 STATUS  (ONLY LIST MEMBERS WITH THIS STATUS)\n$                 TYPE    (ASM, COBOL, DATA, FORT, PLI, OBJ, JCL, OTHER)\n$                 USER    (ONLY LIST MEMBERS WITH THIS USER CODE)\n$\n$                 CONTROL (CONTROL CODE OF THE PANVALET LIBRARY)\n$                 COMMENT (OPTIONALY DISPLAY USER COMMENTS)\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPAN05 ');\n 5 *      CHAR(8)  INIT('VTPAN07 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN07": {"ttr": 1561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x17\\x00\\x17\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 23, "newlines": 23, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                           ------------------------\n&                           |  PAN RENAME COMMAND  |\n&                           ------------------------\n&\n$   CHANGE THE NAME OF A PANVALET LIBRARY MEMBER.\n$\n$        SPECIFY:   DDNAME  (NAME OF PANVALET LIBRARY  EG. PAN3912)\n$              FROM PANNAME (OLD NAME OF PANVALET MEMBER)\n$                TO NEWNAME (NEW NAME OF PANVALET MEMBER)\n$\n$                   ACCESS  (ACCESS CODE OF THE PANVALET MEMBER)\n$                   CONTROL (CONTROL CODE OF THE PANVALET LIBRARY)\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPAN06 ');\n 5 *      CHAR(8)  INIT('VTPAN08 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN08": {"ttr": 1563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x1f\\x00\\x1f\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 31, "newlines": 31, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                          --------------------------\n&                          |  PAN RETRIEVE COMMAND  |\n&                          --------------------------\n&\n$   A PANVALET LIBRARY MEMBER MAY BE RETRIEVED INTO A TSO PDS MEMBER,\n$   OR A SEQUENTIAL DATASET.\n$\n$\n$        SPECIFY: DDNAME  (NAME OF PANVALET LIBRARY)\n$                 PANNAME (NAME OF PANVALET MEMBER TO BE RETRIEVED)\n$                 EXPAND  (OPTIONAL REQUEST TO EXPAND IMBEDDED ++INCLUDE\n$                          STATEMENTS DURING RETRIEVE. DEFAULT IS NOEXPAND)\n$\n$                 PROJECT-LIBRARY-TYPE-MEMBER  (NORMAL SPF DATASET NAME FORMAT)\n$\n$                 DSNAME  (NON SPF SEQUENTIAL OR PARTITIONED DATASET)\n$\n$                 ACCESS  (ACCESS CODE OF THE PANVALET MEMBER)\n$                 CONTROL (CONTROL CODE OF THE PANVALET LIBRARY)\n$                 INT FMT (INTERNAL FORMAT - TSO,PANVALET, OR NOFORMAT)\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPAN07 ');\n 5 *      CHAR(8)  INIT('VTPAN09 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTPAN09": {"ttr": 1565, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ---------------  PANVALET PROCESSING OPTION  --------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&                            -----------------------\n&                            |  PAN STORE COMMAND  |\n&                            -----------------------\n&\n$   A PANVALET LIBRARY MEMBER MAY BE REPLACED USING A TSO PDS MEMBER,\n$   OR A SEQUENTIAL DATASET.\n$\n$        SPECIFY: DDNAME  (NAME OF PANVALET LIBRARY  EG. PAN3912)\n$                 PANNAME (NAME OF PANVALET MEMBER TO BE UPDATED)\n$                 LEVEL   (CURRENT LEVEL OF THIS MEMBER)\n$\n$                 PROJECT-LIBRARY-TYPE-MEMBER  (NORMAL SPF DATASET NAME FORMAT)\n$\n$                 DSNAME  (NON SPF SEQUENTIAL OR PARTITIONED DATASET)\n$\n$                 ACCESS  (ACCESS CODE OF THE PANVALET MEMBER)\n$                 CONTROL (CONTROL CODE OF THE PANVALET LIBRARY)\n$                 INT FMT (INTERNAL FORMAT - TSO, PANVALET, OR NOFORMAT)\n$                 DISP    (DISPOSITION OF FROM DATASET, KEEP OR DELETE)\n&\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('VTPAN08 ');\n 5 *      CHAR(8)  INIT('VTPAN00 ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTSUBMT": {"ttr": 1567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x00\\x00\\x00y&\\x9f\\x00y'\\x1f\\x12\\x01\\x00\\x1b\\x00\\x1b\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-28T12:01:00", "lines": 27, "newlines": 27, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL--------------  SUBMIT PROCESSING OPTION  ------------------   TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &(OR PRESS PF1 FOR HELP)\n&\n&\n&\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n&         * * $                                                 & * *\n&         * * $                                                 & * *\n&         * * $         THE TUTORIAL THAT WAS SELECTED          & * *\n&         * * $         IS CURRENTLY IN DEVELOPMENT.            & * *\n&         * * $                                                 & * *\n&         * * $                                                 & * *\n&         * * $      PRESS&(PF3)$TO DISPLAY PRIMARY MENU        & * *\n&         * * $                     OR                          & * *\n&         * * $    PRESS&(ENTER)$ TO DISPLAY TUTORIAL MENU      & * *\n&         * * $                                                 & * *\n&         * * $                                                 & * *\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n&         * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n<ACTION>\n 1 SELECT CHAR(36) INIT(' ')         CURSOR;\n 3 *      CHAR(8)  INIT('TTUTOR  ');\n 4 *      CHAR(8)  INIT('TTUTOR  ');\n 5 *      CHAR(8)  INIT('TTUTOR  ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTU": {"ttr": 1284, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00B\\x00B\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 66, "newlines": 66, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------------ UTILITIES -------------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     -----------------------------------\n&                     |            UTILITIES            |\n                      -----------------------------------\n$  THE&UTILITY$OPTION ALLOWS YOU TO SELECT ONE OF NINE UTILITIES LISTED BELOW.\n   TO SELECT A UTILITY, ENTER A NUMBER FROM 1 TO 9 ON THE UTILITY SELECTION\n   MENU, WHICH IS DISPLAYED WHEN OPTION 3 IS ENTERED ON THE PRIMARY OPTION MENU.\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- LIBRARY UTILITIES......PRINT INDEX OR ENTIRE DATA SET; PRINT, RENAME,\n                                OR DELETE MEMBER; COMPRESS DATA SET\n    &2$- DATA SET UTILITIES.....ALLOCATE, RENAME, DELETE, CATALOG, OR UNCATALOG\n                                DATA SET; DISPLAY DATA SET INFORMATION\n    &3$- MOVE/COPY UTILITY......MOVE OR COPY MEMBERS OR DATA SETS\n    &4$- CATALOG MANAGEMENT.....DISPLAY OR PRINT CATALOG ENTRIES;\n                                INITIALIZE OR DELETE PROJECT CATALOG POINTER\n    &5$- RESET SPF STATISTICS...RESET SOURCE MEMBER STATISTICS\n    &6$- HARDCOPY UTILITY.......INITIATE HARDCOPY OUTPUT\n    &7$- VTOC UTILITY...........DISPLAY OR PRINT A DASD VTOC\n    &8$- OUTLIST UTILITY........BROWSE, DELETE, OR PRINT HELD JOB OUTPUT\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(1  ,2  ,3   ,4   ,5  ,6  ,7  ,8   ,9)\n               RETURN(TUL,TUD,TUMC,TUCM,TUR,TUH,TUV,TUOL,VTNOTSUP);\n3 * CHAR(8) INIT('TTUTOR  ');\n4 * CHAR(8) INIT('TP      ');\n5 * CHAR(8) INIT('TUL     ');\n<END>\n***\n*** ORGINAL STATEMENTS\n***\n<FIELDS>\u00ac%!&$#@\n&TUTORIAL ------------------------ UTILITIES -------------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     -----------------------------------\n&                     |            UTILITIES            |\n                      -----------------------------------\n$  THE&UTILITY$OPTION ALLOWS YOU TO SELECT ONE OF NINE UTILITIES LISTED BELOW.\n   TO SELECT A UTILITY, ENTER A NUMBER FROM 1 TO 9 ON THE UTILITY SELECTION\n   MENU, WHICH IS DISPLAYED WHEN OPTION 3 IS ENTERED ON THE PRIMARY OPTION MENU.\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- LIBRARY UTILITIES......PRINT INDEX OR ENTIRE DATA SET; PRINT, RENAME,\n                                OR DELETE MEMBER; COMPRESS DATA SET\n    &2$- DATA SET UTILITIES.....ALLOCATE, RENAME, DELETE, CATALOG, OR UNCATALOG\n                                DATA SET; DISPLAY DATA SET INFORMATION\n    &3$- MOVE/COPY UTILITY......MOVE OR COPY MEMBERS OR DATA SETS\n    &4$- CATALOG MANAGEMENT.....DISPLAY OR PRINT CATALOG ENTRIES;\n                                INITIALIZE OR DELETE PROJECT CATALOG POINTER\n    &5$- RESET SPF STATISTICS...RESET SOURCE MEMBER STATISTICS\n    &6$- HARDCOPY UTILITY.......INITIATE HARDCOPY OUTPUT\n    &7$- VTOC UTILITY...........DISPLAY OR PRINT A DASD VTOC\n    &8$- OUTLIST UTILITY........BROWSE, DELETE, OR PRINT HELD JOB OUTPUT\n    &9$- SCRIPT/VS UTILITY......FORMAT, DISPLAY, AND PRINT SCRIPT TEXT\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(1  ,2  ,3   ,4   ,5  ,6  ,7  ,8   ,9)\n               RETURN(TUL,TUD,TUMC,TUCM,TUR,TUH,TUV,TUOL,TUS);\n3 * CHAR(8) INIT('TTUTOR  ');\n4 * CHAR(8) INIT('TP      ');\n5 * CHAR(8) INIT('TUL     ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTUOL": {"ttr": 2085, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x80\\x02/\\x00\\x80\\x02/\\x16V\\x00\\x19\\x00\\x19\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1980-01-22T00:00:00", "modifydate": "1980-01-22T16:56:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "TYD9835"}, "text": "<FIELDS>\u00ac%!&$#@\n&TUTORIAL --------------------- OUTLIST UTILITY ----------------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n&                     -----------------------------------\n                      |            UTILITIES            |\n                      |         OUTLIST UTILITY         |\n                      -----------------------------------\n$\n   YOU MAY SELECT THE OUTLIST UTILITY BY:\n       - SELECTING OPTION&C$FROM THE&PRIMARY OPTION MENU\n\n THE FOLLOWING TOPICS ARE PRESENTED IN SEQUENCE, OR MAY BE SELECTED BY NUMBER:\n    &1$- LISTING THE STATUS OF JOBS\n    &2$- DELETING THE OUTPUT OF A HELD JOB\n    &3$- PRINTING THE OUTPUT OF A HELD JOB\n    &4$- DISPLAYING THE OUTPUT OF A HELD JOB\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(1       ,2       ,3       ,4       )\n               RETURN(VTUOL01L,VTUOL01D,VTUOL01P,VTUOL01B);\n3 * CHAR(8) INIT('TU      ');\n4 * CHAR(8) INIT('TUS     ');\n5 * CHAR(8) INIT('VTUOL01L');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTUOLB": {"ttr": 2079, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "&TUTORIAL ----------------- OUTLIST UTILITY - DISPLAY ----------------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n$  THE&DISPLAY HELD SYSOUT JOB$FUNCTION CAUSED A LISTING FOR THE SPECIFIED JOB\n   TO BE DISPLAYED AT THE TERMINAL.  THE LISTING WAS PRODUCED VIA THE TSO OUTPUT\n   COMMAND.\n\n   THE SPF&BROWSE$FUNCTION WAS AUTOMATICALLY INVOKED TO DISPLAY THE\n   JOB LISTING, AND ALL BROWSE OPTIONS MAY BE USED, INCLUDING\n  &SCROLLING$AND THE&FIND$COMMAND.  USE THE&END$KEY TO TERMINATE THE\n   BROWSE FUNCTION AND RETURN TO THE OUTLIST UTILITY MENU.\n\n   IF YOU PRESS THE&ENTER$KEY NOW YOU WILL ENTER THE BROWSE TUTORIAL.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('TTUTOR  ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('TUB     ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTUOL01B": {"ttr": 2077, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "&TUTORIAL ------------- OUTLIST UTILITY - DISPLAY JOB OUTPUT ---------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n$  THE&DISPLAY JOB OUTPUT$FUNCTION IS USED TO BROWSE OUTPUT FROM A HELD SYSOUT\n   QUEUE FOR A PARTICULAR JOB.  FOR MVS, THE DATA IS NOT DELETED FROM THE HELD\n   SYSOUT QUEUE.  HOWEVER, FOR SVS, THE DATA IS ALWAYS DELETED.  FOR THIS\n   REASON, IN THE SVS CASE, AFTER COMPLETION OF THE BROWSE FUNCTION, THE OUTLIST\n   PRINT MENU WILL BE AUTOMATICALLY DISPLAYED.\n   (USE THE&LIST JOB$OPTION IF YOU WISH TO OBTAIN THE NAMES AND ID'S (MVS ONLY)\n   OF CURRENTLY HELD JOBS)\n\n   FILL IN THE FOLLOWING FIELDS OF THE OUTLIST UTILITY MENU:\n       - ENTER&BLANK$IN THE SELECT OPTION FIELD\n       - ENTER THE&JOB NAME$IN THE APPROPRIATE FIELD\n       - ENTER THE&CLASS$IN THE APPROPRIATE FIELD\n       - ENTER THE&JOB ID$IN THE APPROPRIATE FIELD (MVS ONLY)\n           (THIS IS REQUIRED ONLY IF DUPLICATE JOBNAMES EXIST IN THE HELD\n           SYSOUT CLASS)\n\n   AFTER PRESSING THE&ENTER$KEY, THE DATA WILL BE DISPLAYED AND THE USER\n   WILL BE IN BROWSE MODE. ANY OF THE BROWSE OPTIONS CAN BE INVOKED.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('TUOL    ');\n4 * CHAR(8) INIT('        ');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTUOL01D": {"ttr": 2087, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x80\\x02/\\x00\\x80\\x02/\\x16W\\x00\\x16\\x00\\x16\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1980-01-22T00:00:00", "modifydate": "1980-01-22T16:57:00", "lines": 22, "newlines": 22, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL ------------- OUTLIST UTILITY - DELETE JOB OUTPUT ----------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n   THE&DELETE JOB OUTPUT$FUNCTION IS USED TO DELETE OUTPUT FROM A HELD SYSOUT\n   QUEUE FOR A PARTICULAR JOB.\n   (USE THE&LIST JOB$OPTION IF YOU WISH TO OBTAIN THE NAMES AND IDS (MVS ONLY)\n   OF CURRENTLY HELD JOBS)\n\n   FILL IN THE FOLLOWING FIELDS OF THE OUTLIST UTILITY MENU:\n       - ENTER&D$IN THE SELECT OPTION FIELD\n       - ENTER THE&JOB NAME$IN THE APPROPRIATE FIELD\n       - ENTER THE&CLASS$IN THE APPROPRIATE FIELD\n       - ENTER THE&JOB ID$IN THE APPROPRIATE FIELD (MVS ONLY)\n           (THIS IS REQUIRED ONLY IF DUPLICATE JOBNAMES EXIST IN THE HELD\n           SYSOUT CLASS)\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('TUOL    ');\n4 * CHAR(8) INIT('VTUOL01P');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTUOL01L": {"ttr": 2089, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x80\\x02/\\x00\\x80\\x02/\\x16X\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1980-01-22T00:00:00", "modifydate": "1980-01-22T16:58:00", "lines": 30, "newlines": 30, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL --------- OUTLIST UTILITY - LIST JOB NAMES / ID'S ----------- TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n   THE&LIST JOBS$FUNCTION IS USED TO OBTAIN STATUS INFORMATION ON JOBS IN\n   YOUR SYSTEM.\n\n   FILL IN THE FOLLOWING FIELDS OF THE OUTLIST UTILITY MENU:\n       - ENTER&L$IN THE SELECT OPTION FIELD\n\n   THE&JOBNAME$PARAMETER IS HANDLED AS FOLLOWS:\n\n       -&JOBNAME$= BLANK - STATUS IS LISTED FOR ALL JOBS HAVING JOBNAMES\n                           CONSISTING OF YOUR USER ID FOLLOWED BY ONE CHARACTER.\n\n       -&JOBNAME$= USERID + ONE CHARACTER - STATUS IS LISTED FOR ALL JOBS HAVING\n                                            JOBNAMES CONSISTING OF YOUR USER ID\n                                            FOLLOWED BY ONE CHARACTER.\n\n       -&JOBNAME$= ANYTHING ELSE - STATUS IS LISTED FOR THE JOBNAME SPECIFIED.\n\n   THE JOB NAMES WILL BE DISPLAYED ON THE LOWER PART OF THE MENU. IF THE LIST\n   IS TOO LONG TO FIT ON THE SCREEN,&***$WILL BE WRITTEN AS THE LAST LINE.\n   BY PRESSING THE&ENTER$KEY THE NEXT PAGE OF DATA WILL BE DISPLAYED.\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('TUOL    ');\n4 * CHAR(8) INIT('VTUOL01D');\n5 * CHAR(8) INIT('        ');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VTUOL01P": {"ttr": 2306, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x80\\x02/\\x00\\x80\\x02/\\x16X\\x00\\x19\\x00\\x19\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1980-01-22T00:00:00", "modifydate": "1980-01-22T16:58:00", "lines": 25, "newlines": 25, "modlines": 0, "user": "TYD9835"}, "text": "&TUTORIAL ------------- OUTLIST UTILITY - PRINT JOB OUTPUT ------------ TUTORIAL\n&NEXT SELECTION ===>%SELECT                             &\n$\n$  THE&PRINT JOB OUTPUT$FUNCTION IS USED TO PRINT OUTPUT FROM A HELD SYSOUT\n   QUEUE FOR A PARTICULAR JOB.  THE DATA IS AUTOMATICALLY DELETED FROM THE HELD\n   SYSOUT QUEUE WHENEVER THIS FUNCTION IS SELECTED.\n   (USE THE&LIST JOB$OPTION IF YOU WISH TO OBTAIN THE NAMES AND IDS (MVS ONLY)\n   OF CURRENTLY HELD JOBS)\n\n   FILL IN THE FOLLOWING FIELDS OF THE OUTLIST UTILITY MENU:\n       - ENTER&P$IN THE SELECT OPTION FIELD\n       - ENTER THE&JOB NAME$IN THE APPROPRIATE FIELD\n       - ENTER THE&CLASS$IN THE APPROPRIATE FIELD\n       - ENTER THE&JOB ID$IN THE APPROPRIATE FIELD (MVS ONLY)\n           (THIS IS REQUIRED ONLY IF DUPLICATE JOBNAMES EXIST IN THE\n           HELD SYSOUT CLASS)\n\n                           (CONTINUED ON NEXT PAGE)\n<ACTION>\n1 SELECT CHAR(36) CURSOR;\n2 SELECT CHAR(8) LIST(' ') RETURN(' ');\n3 * CHAR(8) INIT('TUOL    ');\n4 * CHAR(8) INIT('VTUOL01R');\n5 * CHAR(8) INIT('TUOL01P1');\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VUAA": {"ttr": 2081, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00y&\\x9f\\x00\\x80\\x02/\\x15\\x11\\x00*\\x00W\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1980-01-22T15:11:00", "lines": 42, "newlines": 87, "modlines": 0, "user": "TYD9835"}, "text": "&------------------------  ALLOCATE NEW DATASET  -------------------------------\n$DATASET NAME:#DSN                                         $\n$\n$   VOLUME SERIAL   &===>%VOL   $     (BLANK FOR AUTHORIZED DEFAULT VOLUME)\n$   SPACE UNITS     &===>%SPCU      $ (BLKS, TRKS OR CYLS)\n$   PRIMARY QUAN    &===>%PRIQ $      (IN ABOVE UNITS)\n$   SECONDARY QUAN  &===>%SECQ $      (IN ABOVE UNITS)\n$   DIRECTORY BLOCKS&===>%DIRB $      (ZERO FOR SEQUENTIAL DATASET)\n$   RECORD FORMAT   &===>%RECFM $\n$   RECORD LENGTH   &===>%LRECL$\n$   BLOCK SIZE      &===>%BLKSZ$\n<ACTION>\n 1 DSN     CHAR(44)  INIT($PARM1) NOCURSOR GENHELP(TUDA);\n 2 VOL     CHAR(8)   INIT($PARM2) CURSOR;\n 3 SPCU    CHAR(10)  INIT($PARM3) NOCURSOR\n           LIST  (CYLS     , TRKS  , BLKS  ,\n                  CYLINDERS, TRACKS, BLOCKS,\n                  CYLINDER , TRACK , BLOCK ,\n                  CYL      , TRK   , BLK   ,\n                  C        , T     , B     ,' ',*)\n           RETURN(CYLINDER , TRACK , BLOCK ,\n                  CYLINDER , TRACK , BLOCK ,\n                  CYLINDER , TRACK , BLOCK ,\n                  CYLINDER , TRACK , BLOCK ,\n                  CYLINDER , TRACK , BLOCK ,' ',' ');\n 4 PRIQ    FIXED(31) INIT($PARM4) NOCURSOR\n           LIST  (0  ,' ',*)\n           RETURN(0  ,0  );\n 5 SECQ    FIXED(31) INIT($PARM5) NOCURSOR\n           LIST  (0  ,' ',*)\n           RETURN(0  ,0  );\n 6 DIRB    FIXED(31) INIT($PARM6) NOCURSOR\n           LIST  (0  ,' ',*)\n           RETURN(0  ,0  );\n 7 RECFM   CHAR(6)   INIT($PARM7) NOCURSOR;\n 8 LRECL   FIXED(16) INIT($PARM8) NOCURSOR\n           LIST  (0  ,' ',*)\n           RETURN(0  ,0  );\n 9 BLKSZ   FIXED(16) INIT($PARM9) NOCURSOR\n           LIST  (0  ,' ',*)\n           RETURN(0  ,0  );\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VUDA1": {"ttr": 1287, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00O\\x00O\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 79, "newlines": 79, "modlines": 0, "user": "TYD9835"}, "text": "&----------------------------  LIBRARY UTILITY  --------------------------------\n&SELECT OPTION ===>%CODE                                                       $\n&\n&   C$- COMPRESS DATASET                   &P$- PRINT MEMBER\n&   X$- PRINT INDEX LISTING                &R$- RENAME MEMBER\n&   L$- PRINT ENTIRE DATASET               &D$- DELETE MEMBER\n&   BLANK$- DISPLAY MEMBER LIST            &B$- BROWSE MEMBER\n$\n$SPF LIBRARY DATASET:\n$   PROJECT&===>%PROJECT $\n$   LIBRARY&===>%LIBRARY $\n$   TYPE   &===>%TYPE    $\n$   MEMBER &===>%MEMBER  $ (IF OPTION \"P\", \"R\", \"D\", OR \"B\" SELECTED)\n$   NEWNAME&===>%NEWNAME $ (IF OPTION \"R\" SELECTED)\n$\n$OTHER PARTITIONED OR SEQUENTIAL DATASET:\n$   DATASET NAME &===>%DSN                                                     $\n$   VOLUME SERIAL&===>%VOL   $  (IF NOT CATALOGED)\n$\n$DATASET PASSWORD&===>\u00acPSWD    $(IF PASSWORD PROTECTED)\n<ACTION>\n 1 CODE    CHAR(1)  INIT($PARM1) CURSOR   GENHELP(TUL)\n           LIST  (C,L,X,P,R,D,B,' ',*)\n           RETURN(Z,L,X,P,R,D,B,M  ,?);\n 2 PROJECT CHAR(8)  INIT($PARM2) NOCURSOR;\n 3 LIBRARY CHAR(8)  INIT($PARM3) NOCURSOR;\n 4 TYPE    CHAR(8)  INIT($PARM4) NOCURSOR;\n 5 DSN     CHAR(56) INIT($PARM5) NOCURSOR;\n 6 VOL     CHAR(6)  INIT($PARM6) NOCURSOR;\n 7 PSWD    CHAR(8)  INIT($PARM7) NOCURSOR;\n 8 MEMBER  CHAR(8)  INIT($PARM8) NOCURSOR;\n 9 NEWNAME CHAR(8)  INIT($PARM9) NOCURSOR;\n10 *       CHAR(8)  INIT('SPFCOPY '); - COMPRESS PGM NAME IF NOT IEBCOPY\n11 *       CHAR(8)  INIT('PPRINTED'); - PRINT MEMBER OPT/RESPONSE\n12 *       CHAR(8)  INIT('RRENAMED'); - RENAME MEMBER OPT/RESPONSE\n13 *       CHAR(8)  INIT('DDELETED'); - DELETE MEMBER OPT/RESPONSE\n14 *       CHAR(8)  INIT('B       '); - BROWSE MEMBER OPT/RESPONSE\n<END>\n***\n*** ORGINAL STATEMENTS\n***\n&----------------------------  LIBRARY UTILITY  --------------------------------\n&SELECT OPTION ===>%CODE                                                       $\n&\n&   C$- COMPRESS DATASET                   &P$- PRINT MEMBER\n&   X$- PRINT INDEX LISTING                &R$- RENAME MEMBER\n&   L$- PRINT ENTIRE DATASET               &D$- DELETE MEMBER\n&   BLANK$- DISPLAY MEMBER LIST            &B$- BROWSE MEMBER\n$\n$SPF LIBRARY DATASET:\n$   PROJECT&===>%PROJECT $\n$   LIBRARY&===>%LIBRARY $\n$   TYPE   &===>%TYPE    $\n$   MEMBER &===>%MEMBER  $ (IF OPTION \"P\", \"R\", \"D\", OR \"B\" SELECTED)\n$   NEWNAME&===>%NEWNAME $ (IF OPTION \"R\" SELECTED)\n$\n$OTHER PARTITIONED OR SEQUENTIAL DATASET:\n$   DATASET NAME &===>%DSN                                                     $\n$   VOLUME SERIAL&===>%VOL   $  (IF NOT CATALOGED)\n$\n$DATASET PASSWORD&===>\u00acPSWD    $(IF PASSWORD PROTECTED)\n<ACTION>\n 1 CODE    CHAR(1)  INIT($PARM1) CURSOR   GENHELP(TUL)\n           LIST  (C,L,X,P,R,D,B,' ',*)\n           RETURN(Z,L,X,P,R,D,B,M  ,?);\n 2 PROJECT CHAR(8)  INIT($PARM2) NOCURSOR;\n 3 LIBRARY CHAR(8)  INIT($PARM3) NOCURSOR;\n 4 TYPE    CHAR(8)  INIT($PARM4) NOCURSOR;\n 5 DSN     CHAR(56) INIT($PARM5) NOCURSOR;\n 6 VOL     CHAR(6)  INIT($PARM6) NOCURSOR;\n 7 PSWD    CHAR(8)  INIT($PARM7) NOCURSOR;\n 8 MEMBER  CHAR(8)  INIT($PARM8) NOCURSOR;\n 9 NEWNAME CHAR(8)  INIT($PARM9) NOCURSOR;\n10 *       CHAR(8)  INIT('        '); - COMPRESS PGM NAME IF NOT IEBCOPY\n11 *       CHAR(8)  INIT('PPRINTED'); - PRINT MEMBER OPT/RESPONSE\n12 *       CHAR(8)  INIT('RRENAMED'); - RENAME MEMBER OPT/RESPONSE\n13 *       CHAR(8)  INIT('DDELETED'); - DELETE MEMBER OPT/RESPONSE\n14 *       CHAR(8)  INIT('B       '); - BROWSE MEMBER OPT/RESPONSE\n<END>\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VUOL01": {"ttr": 2083, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x80\\x02/\\x00\\x80\\x02/\\x15U\\x007\\x007\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1980-01-22T00:00:00", "modifydate": "1980-01-22T15:55:00", "lines": 55, "newlines": 55, "modlines": 0, "user": "TYD9835"}, "text": "&------------------  PRODUCTION CONTROL OUTPUT FUNCTIONS  ----------------------\n&SELECT OPTION ===>%TCOD                                                       $\n&\n&   L$- LIST JOB NAMES/ID'S VIA THE TSO STATUS COMMAND\n&   D$- DELETE JOB OUTPUT AND SAVE IN CONTROL PDS\n&   P$- PRINT JOB OUTPUT AND SAVE IN CONTROL PDS\n&   BLANK$- DISPLAY JOB OUTPUT AND SAVE IN CONTROL PDS\n$\n$FOR JOB TO BE SELECTED:\n$   JOBNAME&===>%TJNM    $\n$   CLASS  &===>%TCL1$\n$   JOBID  &===>%TJID    $\n$\n$FOR JOB TO BE PRINTED:\n$       OUTPUT CLASS&===>%TCL2$\n$\n<ACTION>\n 1 TCOD    CHAR(1)  NOCURSOR   KEY(SW1)\n           LIST  (' ', * )\n           RETURN(' ','\u00ac');\n 2 TCOD    CHAR(1)  NOCURSOR   KEY(SW2)\n           LIST  ( D , * )\n           RETURN(' ','\u00ac');\n 4 TCOD    CHAR(1)  NOCURSOR   KEY(SW3)\n           LIST  ( L , * )\n           RETURN(' ','\u00ac');\n 5 TCOD    CHAR(1)  NOCURSOR   KEY(SW4)\n           LIST  ( L , * )\n           RETURN('\u00ac',' ');\n 6 TCOD    CHAR(1)  NOCURSOR   KEY(SW5)\n           LIST  ( P , * )\n           RETURN(' ','\u00ac');\n 7 TCOD    CHAR(1)  INIT(' ') CURSOR   GENHELP(VTUOL)\n           LIST  (L,D,P,' ',*)\n           RETURN(L,D,P, B ,?);\n 8 TJNM    CHAR(1)  NOCURSOR   KEY(SW6)\n           LIST  (' ', *)\n           RETURN('\u00ac',' ');\n 9 TJNM    CHAR(1)  NOCURSOR   KEY(SW7)\n           LIST  (' ', *)\n           RETURN(' ','\u00ac');\n10 TJNM    CHAR(8)  INIT($PARM10) NOCURSOR;\n11 TCL1    CHAR(1)  NOCURSOR   KEY(SW8)\n           LIST  (' ', * )\n           RETURN('\u00ac',' ');\n12 TCL1    CHAR(1)  INIT($PARM12) NOCURSOR;\n13 TJID    CHAR(1)  NOCURSOR   KEY(SW9)\n           LIST  (' ', *)\n           RETURN('\u00ac',' ');\n14 TJID    CHAR(1)  NOCURSOR   KEY(SWA)\n           LIST  (' ', *)\n           RETURN(' ','\u00ac');\n15 TJID    CHAR(8)  INIT($PARM15) NOCURSOR;\n16 TCL2    CHAR(1)  INIT($PARM16) NOCURSOR;\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VUTIL": {"ttr": 1290, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00y&\\x9f\\x00y&\\x9f\\x13\\x11\\x00>\\x00>\\x00\\x00\\xe3\\xe8\\xc4\\xf9\\xf8\\xf3\\xf5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1979-09-26T00:00:00", "modifydate": "1979-09-26T13:11:00", "lines": 62, "newlines": 62, "modlines": 0, "user": "TYD9835"}, "text": "&----------------------  UTILITY SELECTION MENU  -------------------------------\n&SELECT OPTION ===>%PRI                                                        $\n&\n&   1 $LIBRARY   - LIBRARY UTILITIES:\n$                           PRINT INDEX LISTING OR ENTIRE DATASET\n$                           PRINT, RENAME, OR DELETE MEMBERS\n$                           COMPRESS DATASET\n&   2 $DATASET   - DATASET UTILITIES:\n$                           DISPLAY DATASET INFORMATION\n$                           ALLOCATE, RENAME, OR DELETE ENTIRE DATASET\n$                           CATALOG OR UNCATALOG DATASET\n&   3 $MOVE/COPY - MOVE OR COPY MEMBERS OR DATASETS\n&   4 $CATALOG   - CATALOG MANAGEMENT:\n$                           DISPLAY OR PRINT CATALOG ENTRIES\n$                           INITIALIZE OR DELETE PROJECT CATALOG POINTER\n&   5 $RESET     - RESET STATISTICS FOR MEMBERS OF SPF LIBRARY DATASET\n&   6 $HARDCOPY  - INITIATE HARDCOPY OUTPUT\n&   7 $VTOC      - DISPLAY OR PRINT VTOC ENTRIES FOR A DASD VOLUME\n&   8 $OUTLIST   - DISPLAY, DELETE, OR PRINT HELD JOB OUTPUT\n<ACTION>\n1 PRI   CHAR(8) CURSOR    GENHELP(TU)\n        LIST   (1       ,2       ,3       ,4       ,5       ,6       ,\n                7       ,8       ,9       ,' '     ,*       )\n        RETURN (SPFUDA  ,SPFUDA  ,SPFUMC  ,SPFUCA  ,SPFURS  ,SPFUHC  ,\n                SPFUVT  ,SPFUOL  ,SPFUTIL ,' '     ,?       );\n2 PRI   CHAR(8)\n        LIST   (1       ,2       ,8       ,9       ,*       )\n        RETURN (UDA1    ,UDA2    ,UOL01   ,VNOTSUP ,' '     );\n<END>\n***\n*** ORGINAL STATEMENTS\n***\n&----------------------  UTILITY SELECTION MENU  -------------------------------\n&SELECT OPTION ===>%PRI                                                        $\n&\n&   1 $LIBRARY   - LIBRARY UTILITIES:\n$                           PRINT INDEX LISTING OR ENTIRE DATASET\n$                           PRINT, RENAME, OR DELETE MEMBERS\n$                           COMPRESS DATASET\n&   2 $DATASET   - DATASET UTILITIES:\n$                           DISPLAY DATASET INFORMATION\n$                           ALLOCATE, RENAME, OR DELETE ENTIRE DATASET\n$                           CATALOG OR UNCATALOG DATASET\n&   3 $MOVE/COPY - MOVE OR COPY MEMBERS OR DATASETS\n&   4 $CATALOG   - CATALOG MANAGEMENT:\n$                           DISPLAY OR PRINT CATALOG ENTRIES\n$                           INITIALIZE OR DELETE PROJECT CATALOG POINTER\n&   5 $RESET     - RESET STATISTICS FOR MEMBERS OF SPF LIBRARY DATASET\n&   6 $HARDCOPY  - INITIATE HARDCOPY OUTPUT\n&   7 $VTOC      - DISPLAY OR PRINT VTOC ENTRIES FOR A DASD VOLUME\n&   8 $OUTLIST   - DISPLAY, DELETE, OR PRINT HELD JOB OUTPUT\n&   9 $SCRIPT/VS - FORMAT, DISPLAY, AND OPTIONALLY PRINT SCRIPT TEXT\n<ACTION>\n1 PRI   CHAR(8) CURSOR    GENHELP(TU)\n        LIST   (1       ,2       ,3       ,4       ,5       ,6       ,\n                7       ,8       ,9       ,' '     ,*       )\n        RETURN (SPFUDA  ,SPFUDA  ,SPFUMC  ,SPFUCA  ,SPFURS  ,SPFUHC  ,\n                SPFUVT  ,SPFUOL  ,SPFUSC  ,' '     ,?       );\n2 PRI   CHAR(8)\n        LIST   (1       ,2       ,8       ,9       ,*       )\n        RETURN (UDA1    ,UDA2    ,UOL01   ,SCRPTA  ,' '     );\n<END>\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT995/CBT.V500.FILE995.PDS/WYLMENUS.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT995/CBT.V500.FILE995.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}