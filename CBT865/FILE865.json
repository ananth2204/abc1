{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220013133000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 2116296, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE865.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 2116296, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 2116296, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE865.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\"\\x04'", "DS1TRBAL": "b'\\xce\\xca'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x07\\\\\\x00\\x04\\x07^\\x00\\x08\\x00#'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04T\\x00\\x13\\x01\\x12\\x08\\x0f\\x01\\x12\\x08\\x0f#B\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf4@@@'", "ispf": {"version": "04.84", "flags": 0, "createdate": "2012-03-20T00:00:00", "modifydate": "2012-03-20T23:42:13", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-484"}, "text": "REGULAR CBT TAPE - VERSION 484    FILE:  865\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT484.FILE865\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    3200    PO\n\n   PDS117I 19 MEMBERS COUNTED; CUMULATIVE SIZE IS 19,855 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/20/12    23:42:12    GMT-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE01": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x12\\x07/\\x01\\x12\\x07/\\x10W\\x000\\x000\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-03-12T00:00:00", "modifydate": "2012-03-12T10:57:23", "lines": 48, "newlines": 48, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  JCL to ZIP and UNZIP\nFrom:     \"Belinda Tinsley\" <belinda.tinsley@tnb.com>\nDate:     Mon, 12 Mar 2012 08:49:13 -0500\nTo:       \"Sam Golob\" <sbgolob@cbttape.org>\n\nZIP:\n\n//JOBCARD\n//*\n//MINIZIP EXEC PGM=MINIZIP,PARM='ZIPFILE DATA1 DATA2'\n//STEPLIB    DD DSN=<HLQ>.CBTTAPE.FILE135.LOADLIB,DISP=SHR\n//STDOUT DD SYSOUT=*\n//SYSUT1 DD UNIT=SYSALLDA,SPACE=(CYL,30),\n// DCB=(DSORG=PS,RECFM=FB,LRECL=128,BLKSIZE=6144)\n//*\n//ZIPFILE DD DSN=<HLQ>.TEST.ZIP.FILE,DISP=OLD\n//* ==> FB,LRECL 80,BLK 6160 (zipped file(s) will\n//*                           be put in here)\n//DATA1 DD DSN=<HLQ>.TST.DATA.FILE1,DISP=SHR\n//* ==>  FB,LRECL 80,BLK 6160\n//*      (data that needs to be zipped)\n//DATA2 DD DSN=<HLQ>.TST.DATA.FILE2,DISP=SHR\n//* ==>  FB,LRECL 80,BLK 6160\n//*      (data that needs to be zipped) .....\n\nUNZIP:\n\n//JOBCARD\n//*\n//MINUNZP  EXEC PGM=MINIUNZ,PARM='ZIPIN PDSOUT'\n//STEPLIB    DD DSN=<HLQ>.CBTTAPE.FILE135.LOADLIB,DISP=SHR\n//STDOUT     DD SYSOUT=*\n//ZIPIN      DD DSN=<HLQ>.TST.ZIP.FILE,DISP=SHR\n//* ==> zipped file (contains one/more files)\n//PDSOUT     DD DSN=<HLQ>.TST.UNZIPPED.PDS,DISP=OLD\n//* ==> PDS (after running it contains DATA1 and DATA2\n//*          from zip job)\n//SYSUT1     DD DSN=<HLQ>.TST.ZIP.SYSUT1,DISP=SHR\n//*\n\nThanks\n\nBelinda Tinsley\niTeam - Technical Services\nThomas & Betts Corporation\n(901) 252-5000 Ext 8547\nbelinda.tinsley@tnb.com\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE02": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x002\\x01\\x12\\x07/\\x01\\x12\\x07/\\x13F\\x00\\x1e\\x00\\x18\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2012-03-12T00:00:00", "modifydate": "2012-03-12T13:46:32", "lines": 30, "newlines": 24, "modlines": 0, "user": "SBGOLOB"}, "text": "             Short set of notes.  Please add to this.\n\nSG-2012/03/11-\n\n   MINIZIP and MINIUNZ (unzip) are C-language programs ported to MVS.\n   The compiler used to port these programs is JCC from Jason Winter,\n   which produces Assembler-language output.  So therefore, no C\n   run-time libraries are required to run these programs.\n\n   On the MVS platform, we have had to \"discover\" JCL which works.\n   This was done largely by Belinda Tinsley.  Thanks, Belinda.\n\n   Input is via DD name, which is fed into the program with a PARM.\n\n   For MINIZIP, you can feed many input files in, to be zipped to\n   one output file.  For MINIUNZ, the output file has to be a pds,\n   and the individual zipped files will be loaded as members of the\n   output pds.  So far, that's what we've gotten to.  I think that\n   SYSUT1 is a work area, and increasing its size might increase the\n   capacity of the program to handle larger files, but we don't know\n   that for sure at this time.\n\n   For now, it appears that the usefulness of this program is for a\n   shop that has to handle zipped files on an MVS (z/OS) system and\n   can't afford, or doesn't want to have to \"trial\" one of the\n   expensive zipping/unzipping programs that are sold for MVS.\n\n\n\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE865": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04T\\x00\\x07\\x01\\x12\\x08\\x0f\\x01\\x12\\x08\\x0f#B\\x00(\\x00(\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf4@@@'", "ispf": {"version": "04.84", "flags": 0, "createdate": "2012-03-20T00:00:00", "modifydate": "2012-03-20T23:42:07", "lines": 40, "newlines": 40, "modlines": 0, "user": "CBT-484"}, "text": "//***FILE 865 is a FREE zip/unzip program for MVS from Jason Winter *   FILE 865\n//*           who used his JCC C-language compiler to port it to    *   FILE 865\n//*           the MVS platform.  The zip program is called MINIZIP  *   FILE 865\n//*           and the unzip program is called MINIUNZ.              *   FILE 865\n//*                                                                 *   FILE 865\n//*           MINIZIP and MINIUNZ (unzip) were incorporated into    *   FILE 865\n//*           Greg Price's load module library (CBT File 135) for   *   FILE 865\n//*           the use of unzipping sequential zip files which were  *   FILE 865\n//*           to be browsed with the REVIEW program.                *   FILE 865\n//*                                                                 *   FILE 865\n//*           I have tried to package MINIZIP and MINIUNZ here,     *   FILE 865\n//*           to be used independently for zipping and unzipping    *   FILE 865\n//*           files under MVS.  They do have some limitations.      *   FILE 865\n//*           See the supplied sample JCL in this file.             *   FILE 865\n//*                                                                 *   FILE 865\n//*           For now, it appears that the usefulness of these      *   FILE 865\n//*           programs is for a shop that needs to handle zipped    *   FILE 865\n//*           files on an MVS (z/OS) system and can't afford, or    *   FILE 865\n//*           doesn't want to have to \"trial\" one of the expensive  *   FILE 865\n//*           zipping/unzipping programs that are sold for MVS.     *   FILE 865\n//*                                                                 *   FILE 865\n//*           In our limited tests, it appears that MINIUNZ can     *   FILE 865\n//*           unzip files that were zipped using other packages,    *   FILE 865\n//*           correctly.  You will have to discover this for        *   FILE 865\n//*           yourself.  Please report any discoveries back to      *   FILE 865\n//*           us, so that we can improve the usefulness of this     *   FILE 865\n//*           product for MVS (z/OS) shops.                         *   FILE 865\n//*                                                                 *   FILE 865\n//*           Belinda Tinsley has tested MINIZIP and MINIUNZ, and   *   FILE 865\n//*           has developed JCL to make them work in batch jobs     *   FILE 865\n//*           under z/OS.  See members $$NOTE0x.  JCL was tested    *   FILE 865\n//*           by S.Golob.  See members ZIPxx and UNZxx.             *   FILE 865\n//*                                                                 *   FILE 865\n//*           email:  sbgolob@cbttape.org    or                     *   FILE 865\n//*                   sbgolob@attglobal.net                         *   FILE 865\n//*                                                                 *   FILE 865\n//*           email:  belinda.tinsley@tnb.com                       *   FILE 865\n//*                                                                 *   FILE 865\n//*           email:  jasonwinter@hotmail.com                       *   FILE 865\n//*                                                                 *   FILE 865\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LINKZIP": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00H\\x01\\x035\\x7f\\x01\\x12\\x06\\x9f\\x12#\\x00\\x11\\x00\\x11\\x00\\x00\\xd3\\xc9\\xd5\\xd2\\xd1\\xc3\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-12-23T00:00:00", "modifydate": "2012-03-09T12:23:48", "lines": 17, "newlines": 17, "modlines": 0, "user": "LINKJCL"}, "text": "//SBGOLOBL JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//LINK1  EXEC PGM=IEWL,PARM='NORENT'\n//SYSPRINT DD SYSOUT=*\n//SYSLIB   DD DSN=SBGOLOB.CBT484.FILE865(MINIUNZ),DISP=SHR\n//SYSLMOD  DD DSN=SBGOLOB.MINIZIP.LOAD(MINIUNZ),DISP=SHR\n//SYSLIN   DD DSN=SBGOLOB.CBT484.FILE865(MINIUNZ),DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,VOL=SER=WORK03,SPACE=(CYL,(5,1))\n//*\n//LINK2  EXEC PGM=IEWL,PARM='NORENT'\n//SYSPRINT DD SYSOUT=*\n//SYSLIB   DD DSN=SBGOLOB.CBT484.FILE865(MINIZIP),DISP=SHR\n//SYSLMOD  DD DSN=SBGOLOB.MINIZIP.LOAD(MINIZIP),DISP=SHR\n//SYSLIN   DD DSN=SBGOLOB.CBT484.FILE865(MINIZIP),DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,VOL=SER=WORK03,SPACE=(CYL,(5,1))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LOADALT": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x12\\x06\\x9f\\x01\\x12\\x06\\x9f\\x12\\x19\\x10\\xdf\\x10\\xdf\\x00\\x00\\xc1\\xd3\\xe3\\xd3\\xd6\\xc1\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-03-09T00:00:00", "modifydate": "2012-03-09T12:19:00", "lines": 4319, "newlines": 4319, "modlines": 0, "user": "ALTLOAD"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOADLIB": {"ttr": 2309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x12\\x06\\x9f\\x01\\x12\\x06\\x9f\\x12&\\x10I\\x10I\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-03-09T00:00:00", "modifydate": "2012-03-09T12:26:00", "lines": 4169, "newlines": 4169, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LOAD1": {"ttr": 4097, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x12\\x06\\x9f\\x01\\x12\\x06\\x9f\\x12&\\x10I\\x10I\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd3\\xc9\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-03-09T00:00:00", "modifydate": "2012-03-09T12:26:00", "lines": 4169, "newlines": 4169, "modlines": 0, "user": "LOADLIB"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "LZIP": {"ttr": 5640, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00H\\x01\\x035\\x7f\\x01\\x12\\x06\\x9f\\x12#\\x00\\x11\\x00\\x11\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2003-12-23T00:00:00", "modifydate": "2012-03-09T12:23:48", "lines": 17, "newlines": 17, "modlines": 0, "user": "SBGOLOB"}, "text": "//SBGOLOBL JOB (ACCT#),S-GOLOB,\n// NOTIFY=&SYSUID,\n// CLASS=B,MSGCLASS=X\n//*\n//LINK1  EXEC PGM=IEWL,PARM='NORENT'\n//SYSPRINT DD SYSOUT=*\n//SYSLIB   DD DSN=SBGOLOB.CBT484.FILE865(MINIUNZ),DISP=SHR\n//SYSLMOD  DD DSN=SBGOLOB.MINIZIP.LOAD(MINIUNZ),DISP=SHR\n//SYSLIN   DD DSN=SBGOLOB.CBT484.FILE865(MINIUNZ),DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,VOL=SER=WORK03,SPACE=(CYL,(5,1))\n//*\n//LINK2  EXEC PGM=IEWL,PARM='NORENT'\n//SYSPRINT DD SYSOUT=*\n//SYSLIB   DD DSN=SBGOLOB.CBT484.FILE865(MINIZIP),DISP=SHR\n//SYSLMOD  DD DSN=SBGOLOB.MINIZIP.LOAD(MINIZIP),DISP=SHR\n//SYSLIN   DD DSN=SBGOLOB.CBT484.FILE865(MINIZIP),DISP=SHR\n//SYSUT1   DD  UNIT=SYSALLDA,VOL=SER=WORK03,SPACE=(CYL,(5,1))\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MINIUNZ": {"ttr": 5642, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x12\\x06\\x9f\\x01\\x12\\x06\\x9f\\x12 \\r?\\r?\\x00\\x00\\xd6\\xc2\\xd1\\xc5\\xc3\\xe3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-03-09T00:00:00", "modifydate": "2012-03-09T12:20:00", "lines": 3391, "newlines": 3391, "modlines": 0, "user": "OBJECT"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "MINIZIP": {"ttr": 7171, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x12\\x06\\x9f\\x01\\x12\\x06\\x9f\\x12 \\r\\x96\\r\\x96\\x00\\x00\\xd6\\xc2\\xd1\\xc5\\xc3\\xe3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-03-09T00:00:00", "modifydate": "2012-03-09T12:20:00", "lines": 3478, "newlines": 3478, "modlines": 0, "user": "OBJECT"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "MINIZIP#": {"ttr": 8456, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00P\\x01\\x05#\\x7f\\x01\\x12\\x06\\x9f\\x12E\\x00G\\x00@\\x00\\x00\\xc8\\xc5\\xd3\\xd7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2005-08-25T00:00:00", "modifydate": "2012-03-09T12:45:50", "lines": 71, "newlines": 64, "modlines": 0, "user": "HELP"}, "text": "Using zip and unzip:\n--------------------\n\nThe usage message is displayed when either program is executed as a\nbatch EXEC or as a TSO command processor (in TSO \"alloc fi(stdout)\nda(*)\" is required.)\n\nUsage : minizip -abco zipfile files_to_add\n-a opens files_to_add in text-translated mode and converts EBCDIC to\n   ASCII.\n-b zips files without length indicators (use with V,VB or U datasets\n   only).\n-c chooses the alternate code-page 037 instead of the default 1047.\n-o specifies that all files_to_add are Partition Organised datasets and\n   that all members/alias's in each dataset should be zipped.\n\nSYSUT1 and zipfile need to be allocated as F/FB with any LRECL and\n   BLKSIZE.\n\nUsage : miniunz -aclv zipfile dest_file file_to_extract\n-a opens files in text-translated mode and converts ASCII to EBCDIC.\n-c chooses the alternate code-page 037 instead of the default 1047.\n-l or -v only lists statistics and files in the zip archive.\nIf no file_to_extract is specified, all files are extracted and\nthe destination file will have (member) automatically appended.\n\nUsage Notes:\n------------\n\nminizip has additional options \"-0\" to \"-9\" which select how\naggressively the algorithms check for better compression.  \"-0\" stores\nthe files with no compression.\n\nAll specified filenames default to DD style names, to specify full\npathnames of MVS datasets use the following convention:\n//DSN:SYSX.DATASET.NAME\n\nIf the DD name or DSN refers to a Partitioned Organised dataset, then\nmember names can be added as usual eg. \"MYDDNAME(MYMEMBER)\"  When\nzipping with the \"-o\" PO dataset option, do not specify a member name as\na file_to_add.  When unzipping all members of a zipfile by not\nspecifying a file_to_extract, do not specify a member as the dest_file.\n\nWhen zipping files on the MVS platform, a comment is added with each\nzipped file to indicate the dataset format from where the data came.\nThis includes an initial character which describes any conversion 'A' is\nASCII, 'E' is for the default of no conversion or EBCDIC data, and 'B'\nstands for the special zip mode where only the raw dataset data is\nstored.  The initial character is followed by a comma (\",\") then the\nrecfm and lrecl.  The 'B' mode is not really for general use - but\nprogrammers may find it handy.\n\neg.\n\"E,FB80\"\n\"A,VB8192\"\n\nWhen listing the contents of zip files with -v in miniunz, the comment,\nif it exists, is displayed after the filename within braces \"{\" & \"}\".\n\nWhen using text-translated mode, MSDOS style CRLF text files are\nconverted to just LF when unzipping files.  This conversion is not\nperformed in reverse when zipping text files on the MVS platform - the\nresulting text files must be later converted (eg. by using WinZip and a\nprogram like WordPad) if the Windows platform is the target.  Note *nix\nplatforms expect only LF characters in text files.\n\nThere is no provision in minizip to UPDATE an existing zip file.\n\nEnjoy your free zip and unzip for MVS.\nJason Winter.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TESTHEX": {"ttr": 8459, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x01\\x03\\x17\\x0f\\x01\\x03\\x17\\x0f\\x19B\\x00\\x04\\x00\\x04\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2003-06-19T00:00:00", "modifydate": "2003-06-19T19:42:52", "lines": 4, "newlines": 4, "modlines": 0, "user": "SBGOLOB"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "UNZ01": {"ttr": 8461, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x006\\x01\\x12\\x07/\\x01\\x12\\x07/\\x119\\x00\\x0e\\x00\\x0c\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2012-03-12T00:00:00", "modifydate": "2012-03-12T11:39:36", "lines": 14, "newlines": 12, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBU JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//MINUNZP  EXEC PGM=MINIUNZ,PARM='ZIPIN PDSOUT'\n//STEPLIB   DD DSN=SYS1.W$$.LINKLIB,DISP=SHR\n//STDOUT    DD SYSOUT=*\n//ZIPIN     DD DISP=SHR,DSN=SBGOLOB.TESTZIP\n//* ==> zipped file (contains one/more files)\n//PDSOUT    DD DISP=SHR,DSN=SBGOLOB.B.TEST\n//* ==> PDS (after running it contains DATA1 and DATA2\n//*          from zip job)\n//SYSUT1 DD UNIT=SYSALLDA,SPACE=(CYL,30),\n// DCB=(DSORG=PS,RECFM=FB,LRECL=128,BLKSIZE=6144)\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "UNZ02": {"ttr": 8463, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00F\\x01\\x12\\x07/\\x01\\x12\\x07/\\x11R\\x00\\x0e\\x00\\x0c\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2012-03-12T00:00:00", "modifydate": "2012-03-12T11:52:46", "lines": 14, "newlines": 12, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBU JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//MINUNZP  EXEC PGM=MINIUNZ,PARM='ZIPIN PDSOUT'\n//STEPLIB   DD DSN=SYS1.W$$.LINKLIB,DISP=SHR\n//STDOUT    DD SYSOUT=*\n//ZIPIN     DD DISP=SHR,DSN=SBGOLOB.TESTZIP2\n//* ==> zipped file (contains one/more files)\n//PDSOUT    DD DISP=SHR,DSN=SBGOLOB.B.TEST\n//* ==> PDS (after running it contains DATA1 and DATA2\n//*          from zip job)\n//SYSUT1 DD UNIT=SYSALLDA,SPACE=(CYL,30),\n// DCB=(DSORG=PS,RECFM=FB,LRECL=128,BLKSIZE=6144)\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "UNZ99A": {"ttr": 8465, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00S\\x01\\x12\\x07/\\x01\\x12\\x07/\\x122\\x00\\x0e\\x00\\x0c\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2012-03-12T00:00:00", "modifydate": "2012-03-12T12:32:53", "lines": 14, "newlines": 12, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBU JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//MINUNZP  EXEC PGM=MINIUNZ,PARM='ZIPIN PDSOUT'\n//STEPLIB   DD DSN=SYS1.W$$.LINKLIB,DISP=SHR\n//STDOUT    DD SYSOUT=*\n//ZIPIN     DD DISP=SHR,DSN=SBGOLOB.B.SISPGUI.ZIP\n//* ==> zipped file (contains one/more files)\n//PDSOUT    DD DISP=SHR,DSN=SBGOLOB.B.ASM.TEST\n//* ==> PDS (after running it contains DATA1 and DATA2\n//*          from zip job)\n//SYSUT1 DD UNIT=SYSALLDA,SPACE=(CYL,300),\n// DCB=(DSORG=PS,RECFM=FB,LRECL=128,BLKSIZE=6144)\n//*\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "UNZ99AM": {"ttr": 8467, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x12\\x07/\\x01\\x12\\x07/\\x12G\\x00\\n\\x00\\n\\x00\\x00\\xd4\\xc5\\xe2\\xe2\\xc1\\xc7\\xc5@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2012-03-12T00:00:00", "modifydate": "2012-03-12T12:47:15", "lines": 10, "newlines": 10, "modlines": 0, "user": "MESSAGE"}, "text": "//STDOUT message produced by running job UNZ99A.  Zip file was\n         produced by WinRar utility on the PC.\n\n\nMiniUnz 0.15, demo of zLib + Unz package written by Gilles Vollant\nmore info at http://www.winimage.com/zLibDll/unzip.html\nCompiled with JCC for MVS, http://www.jccompiler.com/\n\nZIPIN opened\n extracting: PDSOUT(SISPGUI)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIP01": {"ttr": 8705, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x000\\x01\\x12\\x07/\\x01\\x12\\x07/\\x11E\\x00\\x13\\x00\\x11\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2012-03-12T00:00:00", "modifydate": "2012-03-12T11:45:30", "lines": 19, "newlines": 17, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBZ JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//MINIZIP EXEC PGM=MINIZIP,PARM='ZIPFILE DATA1 DATA2'\n//STEPLIB    DD DSN=SYS1.W$$.LINKLIB,DISP=SHR\n//STDOUT DD SYSOUT=*\n//SYSUT1 DD UNIT=SYSALLDA,SPACE=(CYL,30),\n// DCB=(DSORG=PS,RECFM=FB,LRECL=128,BLKSIZE=6144)\n//*\n//ZIPFILE DD DISP=(NEW,CATLG,DELETE),\n//        DSN=SBGOLOB.TESTZIP,UNIT=SYSALLDA, <== sequential-not pdsmem\n//        VOL=SER=WORK01,SPACE=(TRK,(15,15),RLSE),\n//        DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=27920)\n//* ==> FB,LRECL 80,BLK 6160 (zipped file(s) will\n//*                           be put in here)\n//DATA1   DD DISP=SHR,DSN=SBGOLOB.B.ASM(COPYMODS)\n//DATA2   DD DISP=SHR,DSN=SBGOLOB.B.ASM(TESTHEX)\n//* ==>  FB,LRECL 80,BLK 6160\n//*      (data that needs to be zipped)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ZIP02": {"ttr": 8707, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x08\\x01\\x12\\x07/\\x01\\x12\\x07/\\x11S\\x00\\x13\\x00\\x11\\x00\\x00\\xd1\\xc3\\xd3@@@@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2012-03-12T00:00:00", "modifydate": "2012-03-12T11:53:08", "lines": 19, "newlines": 17, "modlines": 0, "user": "JCL"}, "text": "//SBGOLOBZ JOB ,'SAM GOLOB',CLASS=B,\n//    MSGCLASS=X,NOTIFY=&SYSUID\n//*\n//MINIZIP EXEC PGM=MINIZIP,PARM='ZIPFILE SHOWZOS COPYMODS'\n//STEPLIB    DD DSN=SYS1.W$$.LINKLIB,DISP=SHR\n//STDOUT DD SYSOUT=*\n//SYSUT1 DD UNIT=SYSALLDA,SPACE=(CYL,30),\n// DCB=(DSORG=PS,RECFM=FB,LRECL=128,BLKSIZE=6144)\n//*\n//ZIPFILE DD DISP=(NEW,CATLG,DELETE),\n//        DSN=SBGOLOB.TESTZIP2,UNIT=SYSALLDA, <= sequential-not pdsmem\n//        VOL=SER=WORK01,SPACE=(TRK,(15,15),RLSE),\n//        DCB=(DSORG=PS,RECFM=FB,LRECL=80,BLKSIZE=27920)\n//* ==> FB,LRECL 80,BLK 6160 (zipped file(s) will\n//*                           be put in here)\n//SHOWZOS  DD DISP=SHR,DSN=SBGOLOB.B.ASM(SHOWZOS)\n//COPYMODS DD DISP=SHR,DSN=SBGOLOB.B.ASM(COPYMODS)\n//* ==>  FB,LRECL 80,BLK 6160\n//*      (data that needs to be zipped)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT865/FILE865.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT865", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}