//  JOBCARD
//*
//DUMMY EXEC PGM=IEFBR14
//*
//DELETE EXEC PGM=IDCAMS,COND=(0,LE)
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
 DELETE 'ZZZ.SORTED.REC42'
//*
//FILTER EXEC SYNCSORT,COND=(0,LE)
//SYSOUT DD SYSOUT=*
//*SORTIN DD DISP=SHR,DSN=GS.CP.SMFTEMP.SYS9
//SORTIN DD DISP=SHR,DSN=GS.CP.SMFTEMP.REC42
//SORTOUT DD DSN=ZZZ.SORTED.REC42,DISP=(NEW,CATLG),
// RECFM=VB,LRECL=32756,BLKSIZE=32760,SPACE=(CYL,(500,200))
//SYSIN DD *
 SORT FIELDS=COPY
 INCLUDE COND=(6,1,FI,EQ,42,AND,23,2,FI,EQ,6,AND,
    15,4,CH,EQ,C'SYS9',AND,
    7,4,FI,GE,2881000,AND,7,4,FI,LE,5761000,
 AND,11,4,PD,EQ,100247)
//*
//ANALYZE EXEC REXXBAT
//SMF DD DISP=SHR,DSN=ZZZ.SORTED.REC42,DCB=BUFNO=80
//SYSPRINT DD DCB=(DSORG=PS,RECFM=FB,LRECL=257,BUFNO=80),
//  DISP=(NEW,CATLG),DSN=ZZZ.SMF42.REPORT,
//  UNIT=SYSDA,SPACE=(CYL,(300,300),RLSE)
 CALL INIT
 NUMERIC DIGITS 20
 COUNT=0;
 "EXECIO 1000 DISKR SMF (STEM SMF.)"
 DO WHILE SMF.0 > 0
    DO I = 1 TO SMF.0
       RECORD = SMF.I
       DATE = SMFDATE(SUBSTR(RECORD,7,4))
       TIME = SMFTIME(SUBSTR(RECORD,3,4))
       IO_TIME = DATE'-'TIME'0000'
       SYSID = SUBSTR(RECORD,11,4)

       /*-----------------------------------------------------------*/
       /* DATA FROM THE PRODUCT SECTION:                            */
       /*   HOW LONG WAS THE FILE OPEN (MILISECONDS)                */
       /*-----------------------------------------------------------*/
       PRD_OFF = C2D(SUBSTR(RECORD,25,4))
       PRD_LEN = C2D(SUBSTR(RECORD,29,2))
       PRD_NUM = C2D(SUBSTR(RECORD,31,2))
       IF PRD_NUM = 0 THEN ITERATE
       SECTION = SUBSTR(RECORD,PRD_OFF-3,PRD_LEN)
       TIME_OPEN = FORMAT((C2D(SUBSTR(SECTION,29,7))-,
                   C2D(SUBSTR(SECTION,21,7)))%(16*1000),10)

       /*-----------------------------------------------------------*/
       /* DATA FROM THE JOB HEADER SECTION:                         */
       /*   JOBNAME                                                 */
       /*-----------------------------------------------------------*/
       JHD_OFF = C2D(SUBSTR(RECORD,33,4))
       JHD_LEN = C2D(SUBSTR(RECORD,37,2))
       JHD_NUM = C2D(SUBSTR(RECORD,39,2))
       IF JHD_NUM = 0 THEN ITERATE
       SECTION = SUBSTR(RECORD,JHD_OFF-3,JHD_LEN)
       JOB_NAME = SUBSTR(SECTION,1,8)
       IO_LEN   = C2D(SUBSTR(SECTION,35,2))

       /*-----------------------------------------------------------*/
       /* READ ALL DATASET HEADER SECTIONS                          */
       /*-----------------------------------------------------------*/
       DSN_OFF = C2D(SUBSTR(SECTION,25,4))
       DSN_LEN = C2D(SUBSTR(SECTION,29,2))
       DO WHILE DSN_OFF > 0
          /*--------------------------------------------------------*/
          /* DATA FROM THE DATASET HEADER SECTION:                  */
          /*   DSN                                                  */
          /*   VOLSER                                               */
          /*   BLKSIZE                                              */
          /*   DEVN    - THE DEVICE NUMBER                          */
          /*   DSTYPE  - TYPE OF DATASET (PS,PO,ETC)                */
          /*--------------------------------------------------------*/
          SECTION = SUBSTR(RECORD,DSN_OFF-3,DSN_LEN)
          DSN     = SUBSTR(SECTION,5,44)
          TYPE    = C2D(SUBSTR(SECTION,49,1))
          DSTYPE  = TYPES.TYPE
          VOLSER  = SUBSTR(SECTION,61,6)
          DEVN    = C2X(SUBSTR(SECTION,67,2))
          BLKSIZE = FORMAT(C2D(SUBSTR(SECTION,77,4)),5)
          DSN_OFF = C2D(SUBSTR(SECTION,1,4))
          IF LEFT(DSN,1)='04'X THEN ITERATE  /* ASTEX SPECIAL DSN */

          /*--------------------------------------------------------*/
          /* DATA FROM THE IO STATISTICS SECTION:                   */
          /* RESP  - AVERAGE RESPONSE TIME                          */
          /* CONN  - AVERAGE CONNECT TIME                           */
          /* PEND  - AVERAGE PENDING TIME                           */
          /* DISC  - AVERAGE DISCONNECT TIME                        */
          /* CUQ   - AVERAGE CONTROL UNIT QUEUE TIME                */
          /* IOSQ  - AVERAGE IOS QUEUE TIME (CALCULATED)            */
          /* IOC#     - NUMBER OF IOS                               */
          /* C_CAND#  - NUMBER OF CACHE CANDIDATES                  */
          /* C_HITS   - NUMBER OF CACHE HITS                        */
          /* W_CAND#  - NUMBER OF WRITE CACHE CANDIDATES            */
          /* W_HITS   - NUMBER OF WRITE CACHE HITS                  */
          /* SEQ_IO#  - NUMBER OF SEQUENTIAL IOS                    */
          /* RLC_IO#  - NUMBER OF RECORD LEVEL CACHE IOS            */
          /* NO_C_IO# - NUMBER OF INHIBIT CACHE IOS                 */
          /* MAX_RESP - MAXIMUM RESPONSE TIME. FFU                  */
          /* MAX_SERV - MAXIMUM SERVICE TIME. FFU                   */
          /*--------------------------------------------------------*/
          IO_OFF = C2D(SUBSTR(SECTION,53,4))
          IF IO_OFF = 0 THEN ITERATE
          SECTION  = SUBSTR(RECORD,IO_OFF-3,IO_LEN)
          RESP  = C2D(SUBSTR(SECTION,1,4))/8
          CONN  = C2D(SUBSTR(SECTION,5,4))/8
          PEND  = C2D(SUBSTR(SECTION,9,4))/8
          DISC  = C2D(SUBSTR(SECTION,13,4))/8
          CUQ   = C2D(SUBSTR(SECTION,17,4))/8
          IOSQ  = RESP-(CONN+PEND+DISC+CUQ)
          RESP  = FORMAT(RESP,5,2)
          CONN  = FORMAT(CONN,5,2)
          PEND  = FORMAT(PEND,5,2)
          DISC  = FORMAT(DISC,5,2)
          CUQ   = FORMAT(CUQ,5,2)
          IOSQ  = FORMAT(IOSQ,5,2)
          IO#      = FORMAT(C2D(SUBSTR(SECTION,21,4)),10)
          C_CAND#  = FORMAT(C2D(SUBSTR(SECTION,25,4)),10)
          C_HITS   = FORMAT(C2D(SUBSTR(SECTION,29,4)),10)
          W_CAND#  = FORMAT(C2D(SUBSTR(SECTION,33,4)),10)
          W_HITS   = FORMAT(C2D(SUBSTR(SECTION,37,4)),10)
          SEQ_IO#  = FORMAT(C2D(SUBSTR(SECTION,41,4)),10)
          RLC_IO#  = FORMAT(C2D(SUBSTR(SECTION,45,4)),10)
          NO_C_IO# = FORMAT(C2D(SUBSTR(SECTION,49,4)),10)
          MAX_RESP = FORMAT(0,5,2)
          MAX_SERV = FORMAT(0,5,2)

          /*--------------------------------------------------------*/
          /* WRITE FOR DB/2 TO LOAD IT                              */
          /*--------------------------------------------------------*/
          QUEUE IO_TIME     ||,
                SYSID       ||,
                TIME_OPEN   ||,
                JOB_NAME    ||,
                DSN         ||,
                DSTYPE      ||,
                VOLSER      ||,
                DEVN        ||,
                BLKSIZE     ||,
                RESP        ||,
                CONN        ||,
                DISC        ||,
                PEND        ||,
                CUQ         ||,
                IOSQ        ||,
                IO#         ||,
                C_CAND#     ||,
                C_HITS      ||,
                W_CAND#     ||,
                W_HITS      ||,
                SEQ_IO#     ||,
                RLC_IO#     ||,
                NO_C_IO#    ||,
                MAX_RESP    ||,
                MAX_SERV    ||,
                ''
       END
    END
    COUNT=COUNT + QUEUED();
    "EXECIO" QUEUED() "DISKW SYSPRINT"
    "EXECIO 1000 DISKR SMF (STEM SMF.)"
    SAY "COUNT="COUNT". TIME IS: "TIME() ;
 END
 "EXECIO 0 DISKR SMF (STEM SMF. FINIS)"
 "EXECIO 0 DISKW SYSPRINT (FINIS)"
 EXIT

 INIT:
 TYPES.   = '??????'
 TYPES.0  = 'OTHER '
 TYPES.1  = 'PS    '
 TYPES.2  = 'PDS   '
 TYPES.3  = 'PDSE  '
 TYPES.4  = 'DA    '
 TYPES.5  = 'ISAM  '
 TYPES.6  = 'EXCP  '
 TYPES.7  = 'EXT-PS'
 TYPES.10 = 'HFS   '
 TYPES.16 = 'KSDS/D'
 TYPES.17 = 'KSDS/I'
 TYPES.18 = 'RRDS/D'
 TYPES.19 = 'RRDS/I'
 TYPES.20 = 'RRDS/F'
 TYPES.21 = 'LDS   '
 TYPES.22 = 'ESDS  '

 /*-----------------------------------------------------------------*/
 /* DATE CALCULATIONS                                               */
 /*-----------------------------------------------------------------*/
 DAYS.1  = 31
 DAYS.2  = 28
 DAYS.3  = 31
 DAYS.4  = 30
 DAYS.5  = 31
 DAYS.6  = 30
 DAYS.7  = 31
 DAYS.8  = 31
 DAYS.9  = 30
 DAYS.10 = 31
 DAYS.11 = 30
 DAYS.12 = 31
 DAYLIST.1 = ''
 DO I = 1 TO 12
    DO J = 1 TO DAYS.I
       DAYLIST.1 = DAYLIST.1||RIGHT(I,2,0)'-'RIGHT(J,2,0)
    END
 END
 DAYS.2 = 29
 DAYLIST.0 = ''
 DO I = 1 TO 12
    DO J = 1 TO DAYS.I
       DAYLIST.0 = DAYLIST.0||RIGHT(I,2,0)'-'RIGHT(J,2,0)
    END
 END
 RETURN

 SMFTIME: PROCEDURE
 ARG SMFTIME
 HSECS = C2D(SMFTIME)
 SECS  = HSECS%100
 HSECS = HSECS//100
 MINS  = SECS%60
 SECS  = SECS//60
 HOURS = MINS%60
 MINS  = MINS//60
 RETURN RIGHT(HOURS,2,0)'.'RIGHT(MINS,2,0)'.'RIGHT(SECS,2,0)'.'||,
        RIGHT(HSECS,2,0)

 SMFDATE: PROCEDURE EXPOSE DAYLIST. MONLIST.
 ARG SMFDATE
 SMFDATE = C2X(SMFDATE)
 YEAR = SUBSTR(SMFDATE,2,3)+1900
 JDAY = SUBSTR(SMFDATE,5,3)
 NOLEAP = ((YEAR//4)=1)
 MMDD = SUBSTR(DAYLIST.NOLEAP,JDAY*5-4,5)
 RETURN YEAR'-'MMDD
