./ ADD NAME=ABCODES  0100-09250-09250-1028-00032-00032-00000-MACLIB
         MACRO
         ABCODES
$U0001   EQU   0001               SUBTASK ATTACH FAILED IN STCMAIN
$U0002   EQU   0002               SUBTASK DETACH FAILED IN STCMAIN
$U0003   EQU   0003               SETLOGON FAILED IN STCMAIN
$U0004   EQU   0004               INVALID COMMAND PASSED TO STCVTAM
$U0005   EQU   0005               DUPLICATE CNOS IN STCATTN
$U0006   EQU   0006               RECVFMH5 FAILED IN STCATTN
$U0007   EQU   0007               DUPLICATE FMH5 IN STCATTN
$U0008   EQU   0008               VTAM RECEIVE FAILED IN STCUSER
$U0009   EQU   0009               UNKNOWN REGION TYPE IN STCACT
$U0010   EQU   0010               LLT NOT PRESENT IN STCLLA
$U0011   EQU   0011               QEDIT CIB DELETE FAILED IN STCCONS
$U0012   EQU   0012               QEDIT SET CIB LIMIT FAILED IN STCCONS
$U0013   EQU   0013               INVALID DEVICE CLASS IN STCUCB
$U0014   EQU   0014               UCBSCAN FAILED IN STCUCB
$U1002   EQU   1002               ERROR IN COMMAND PROCESSOR IN TSOMAIN
$U1007   EQU   1007               LERAD EXIT ENTERED IN TSO INTERFACE
$U1008   EQU   1008               DEALLOC FAILED IN TSOMAIN
$U1009   EQU   1009               INVALID COMMAND PASSED TO TSOVARS
$U1010   EQU   1010               INVALID VARIABLE ID PASSED TO TSOVARS
$U1011   EQU   1011               VDEFINE FAILED IN TSOVARS
$U1012   EQU   1012               VDELETE FAILED IN TSOVARS
$U1013   EQU   1013               INVALID REGION TYPE IN TSOACT
$U1014   EQU   1014               INVALID SWAP STATUS IN TSOACT
$U1015   EQU   1015               INVALID COMMAND PASSED TO TSOVTAM
$U1016   EQU   1016               RECEIVE FAILED IN TSOVTAM
$U1017   EQU   1017               SEND FAILED IN TSOVTAM
$U1018   EQU   1018               PQUERY FAILED IN TSOPQRY
$U1019   EQU   1019               VDATA VDELETE FAILED IN TSODISP
$U1020   EQU   1020               VDATA VDEFINE FAILED IN TSODISP
         MEND
./ ADD NAME=ACTDATA  0104-09138-09160-1600-00040-00036-00000-MACLIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ACT_HEADER             DS    0C
ACT_REGION_TYPES       DS    X     REGION TYPE
$ACT_ALL               EQU   X'00' .. ALL REGIONS
$ACT_BATCH             EQU   C'B'  .. BATCH REGIONS
$ACT_MOUNT             EQU   C'M'  .. MOUNTS
$ACT_STC               EQU   C'S'  .. STARTED TASKS
$ACT_TSO               EQU   C'T'  .. TSO USERS
ACT_NAME_PREFIX_LENGTH DS    XL2   JOB NAME PREFIX LENGTH
ACT_NAME_PREFIX        DS    CL8   JOB NAME PREFIX
ACT_USER_PREFIX_LENGTH DS    XL2   USER NAME PREFIX LENGTH
ACT_USER_PREFIX        DS    CL8   USER NAME PREFIX
ACT_NBR_REGIONS        DS    XL2   NBR OF REGIONS RETURNED
ACT_CPU_BUSY           DS    XL2   CPU BUSY PERCENTAGE
ACT_HEADER_L           EQU   *-ACT_HEADER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
ACT_REGION             DS    0C    INFO PER REGION
ACT_ASID               DS    XL2   ASID
ACT_NAME               DS    CL8   NAME
ACT_STEP               DS    CL8   STEP NAME
ACT_PROC               DS    CL8   PROC NAME
ACT_PROC_STEP          DS    CL8   PROC STEP
ACT_USER               DS    CL8   USER NAME
ACT_REGION_TYPE        DS    X     REGION TYPE
ACT_SWAP_STATUS        DS    X     SWAP STATUS
$ACT_SWAP_TRANSITION   EQU   C'T'  .. IN TRANSITION
$ACT_SWAP_IN           EQU   C'I'  .. SWAPPED IN
$ACT_SWAP_OUT          EQU   C'O'  .. SWAPPED OUT
$ACT_SWAP_LOGICAL      EQU   C'L'  .. LOGICALLY SWAPPED OUT
$ACT_SWAP_NONSWAP      EQU   C'N'  .. NON-SWAPPABLE
ACT_REAL_FRAMES        DS    XL4   NUMBER OF REAL PAGE FRAMES
ACT_SERVICE_UNITS      DS    XL4   SERVICE UNITS
ACT_IO                 DS    XL4   NBR OF I/O'S
ACT_TCB_TIME           DS    XL8   TCB TIME
ACT_SRB_TIME           DS    XL8   SRB TIME
ACT_REGION_L           EQU   *-ACT_REGION
./ ADD NAME=APFDATA  0101-09138-09139-1302-00013-00013-00000-MACLIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
APF_HEADER             DS    0C
APF_NBR_DSNS           DS    XL2       NUMBER OF DATASETS IN LIST
APF_HEADER_L           EQU   *-APF_HEADER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
APF_DATA               DS    0C
APF_DSN                DS    CL44      DATASET NAME
APF_VOLSER             DS    CL6       VOLUME
APF_DATA_L             EQU   *-APF_DATA
./ ADD NAME=ATTR     0100-09138-09138-1029-00016-00016-00000-MACLIB
* ------------------------------------------------------------------- *
*                                                                     *
*                                                                     *
*     Attributes used for ISPF panels                                 *
*                                                                     *
*                                                                     *
*     These need to agree with the definition on the panels           *
*                                                                     *
* ------------------------------------------------------------------- *
$ATTR_NORMAL                EQU   X'01'
$ATTR_INPUT                 EQU   X'02'
$ATTR_HIGH                  EQU   X'03'
$ATTR_HIGH_YELLOW           EQU   X'04'
$ATTR_HIGH_RED              EQU   X'05'
$ATTR_HIGH_TURQUOISE        EQU   X'06'
$ATTR_HIGH_GREEN            EQU   X'07'
./ ADD NAME=CLIENT   0100-09148-09148-1523-00008-00008-00000-MACLIB
         MACRO
         CLIENT &PREFIX=
&PREFIX._CLIENT       DS   0F
&PREFIX._CLIENT_DOMAIN DS  F
&PREFIX._CLIENT_NAME  DS   CL8
&PREFIX._CLIENT_TASK  DS   CL8
                      DS   XL20
         MEND
./ ADD NAME=COMMCOMM 0109-09138-09169-1448-00091-00088-00000-MACLIB
         MACRO
         COMMCOMM &COMMNAME=
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
*---------------------------------------------------------------------*
*                                                                     *
*          Double word for CVB/CVD                                    *
*                                                                     *
*---------------------------------------------------------------------*
COMM_DWORD DC  D'0'
*---------------------------------------------------------------------*
*                                                                     *
*          ADD TRACE ENTRY                                            *
*                                                                     *
*  During program initialization mainline acquires storage for the    *
*  trace table and sets TRFIRST, TRLAST, and TRCURR.  The mainline    *
*  also sets R11 to the address of the common area and all other      *
*  modules depend on this remaining unchanged.  Any module except     *
*  this module may call the trace routine.  Macro ITRACE generates    *
*  the calling sequence.  R14 is the only register altered by the     *
*  trace macro.                                                       *
*                                                                     *
*  The trace table is a "wrap-around" table.  TRFIRST is the first    *
*  entry's address, TRLAST is the last entry's address, and           *
*  TRCURR is the address of the last entry added to the table.        *
*  When a trace entry is added to the table, the current TCB address, *
*  current module's suffix, and 8-byte ID, and up to 2 8-byte user    *
*  specified data items are captured.                                 *
*                                                                     *
*      This code depends on:                                          *
*           R12  Common area address                                  *
*           R11  Current module's base address                        *
*           R13  address of:                                          *
*                1. 18 word work area                                 *
*                2. 2 8-byte data data items                          *
*           R14  trace id's address and R14 + 8 will be the return    *
*                address                                              *
*                                                                     *
*---------------------------------------------------------------------*
TRACE000 DS    0H
         USING DXD_SAVE,R13                   DEFINE BASE
         USING &COMMNAME,R12                  DEFINE BASE
         USING MODPRFX,R11                    DEFINE BASE
         USING TRENTRY,R2                     DEFINE BASE
         STM   R14,R12,12(R13)                SAVE REGISTERS
TRACE010 DS    0H
         ICM   R2,15,TRCURR                   CURRENT TRACE ENTRY
         BZ    TRACE030                       NO TRACE TABLE
         OC    0(TRENTRYL,R2),0(R2)           EMPTY ENTRY?
         BZ    TRACE020                       YES.. USE THIS ENTRY
         LA    R2,TRENTRYL(,R2)               NEXT TRACE ENTRY
         C     R2,TRLAST                      BEYOND END OF TABLE?
         BNH   TRACE020                       NO
         L     R2,TRFIRST                     'WRAP' TRACE TABLE
TRACE020 DS    0H
         L     R1,TRCURR                      CURRENT ENTRY
         CS    R1,R2,TRCURR                   UPDATE 'CURRENT' ADDRESS
         BNE   TRACE010                       UNSUCCESSFUL.. TRY AGAIN
         USING PSA,R0                         DEFINE PSA BASE
         MVC   TRETCB,PSATNEW                 COPY CURRENT TCB ADDRESS
         MVC   TREMOD,PFXMODNM+3              COPY MODULE SUFFIX
         MVC   TREID,0(R14)                   COPY TRACE ID
         MVC   TREDATA1,TRDATA1               COPY TRACE DATA 1
         MVC   TREDATA2,TRDATA2               COPY TRACE DATA 2
         XC    TRDATA1,TRDATA1                CLEAR TRACE DATA
         XC    TRDATA2,TRDATA2                CLEAR TRACE DATA
TRACE030 DS    0H
         TM    XTR_FLAG,$XTR_ON               EXTERNAL TRACE?
         BNO   TRACE040                       NO
         TPUT  0(R2),32
TRACE040 DS    0H
         LM    R14,R12,12(R13)                RESTORE REGISTERS
         B     8(R14)                         RETURN

XTR_FLAG DC    X'00'
$XTR_ON  EQU   X'80'
*---------------------------------------------------------------------*
*                                                                     *
*          TRACE CONTROL                                              *
*                                                                     *
*---------------------------------------------------------------------*
         DS    0A
         DC    CL4'1STX'                      FIRST TRACE ENTRY
TRFIRST  DC    A(0)
         DC    CL4'LAST'                      LAST TRACE ENTRY
TRLAST   DC    A(0)
         DC    CL4'CURR'                      CURRENT TRACE ENTRY
TRCURR   DC    A(0)
TRADDR   DC    A(0)                           TRACE TABLE ADDRESS
TRSIZE   DC    A(&TRSZ*TRENTRYL)              TRACE TABLE SIZE
         MEND
./ ADD NAME=FMH5     0100-09250-09250-1028-00037-00037-00000-MACLIB
         MACRO
&NAME    FMH5  &DSECT=
         LCLA  &LEN
         LCLC  &DNAME
         AIF   (T'&NAME EQ 'O').NAME10
&DNAME   SETC  '&NAME'
         AGO   .NAME20
.NAME10  ANOP
&DNAME   SETC  'FMH5'
.NAME20  ANOP
         AIF   ('&DSECT' EQ 'YES').DSECT00
         AIF   ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'''DSECT'' IS INVALID, MUST BE ''YES'' OR ''NO'' '
         MEXIT
.DSECT00 ANOP
&DNAME   DSECT
         AGO   .COMM
.CSECT00 ANOP
&DNAME   DS    0A
.COMM    ANOP
         DC    AL1(&DNAME.L)         FMH LENGTH
         DC    X'05'                 FMH TYPE
         DC    XL2'02FF'             ATTACH COMMAND CODE
         DC    X'00'                 FLAG BYTE
         DC    X'03'                 LENGTH OF FIXED PARAMETERS FIELD
         DC    X'D0'                 CONVERSATION TYPE (BASIC)
         DC    X'00'                 RESERVED
         DC    X'40'                 ALLOW CONFIRMS
         DC    AL1(L'FMH5USER+L'FMH5SMF)   TRANSACTION DATA LENGTH
FMH5TRAN DS    0C                    TRANSACTION (USER ID) NAME
FMH5USER DC    CL8' '                TRANSACTION (USER ID) NAME
FMH5SMF  DC    CL8' '                TRANSACTION (USER ID) NAME
         DC    X'00'                 LENGTH OF SECURITY INFORMATION
         DC    X'00'                 LENGTH OF LUW IDENTIFIER
         DC    X'00'                 LENGTH OF CONVERSATION CORRELATOR
&DNAME.L EQU   *-&DNAME              FMH LENGTH
         MEND
./ ADD NAME=FSDATA   0103-09142-09189-0932-00022-00022-00000-MACLIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FS_HEADER              DS    0C
FS_NBR                 DS    XL2   NBR OF FILESYSTEMS RETURNED
FS_HEADER_L            EQU   *-FS_HEADER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
FS_DATA                DS    0C    INFO PER FILE SYSTEM
FS_MOUNT_POINT         DS    CL256 MOUNT POINT
FS_SIZE                DS    XL4   SIZE (IN BLOCKS)
FS_USED                DS    XL4   BLOCKS USED
FS_READS               DS    XL4   NBR OF READS
FS_BYTES_READ          DS    XL8   NBR OF BYTES READ
FS_WRITES              DS    XL4   NBR OF READS
FS_BYTES_WRITTEN       DS    XL8   NBR OF BYTES WRITTEN
FS_TYPE                DS    CL6   TYPE
FS_STATUS              DS    CL8   STATUS
FS_DDNAME              DS    CL8   DD NAME
FS_DSNAME              DS    CL44  DATASET NAME
FS_DATA_L              EQU   *-FS_DATA
./ ADD NAME=IPLDATA  0104-09138-09160-1448-00006-00005-00000-MACLIB
IPL_NBR                DS    XL4           NBR OF IPL ITEMS

IPL                    DS    0C
IPL_NAME               DS    CL20
IPL_DATA               DS    CL54
IPL_L                  EQU   *-IPL
./ ADD NAME=ITRACE   0100-09250-09250-1028-00073-00073-00000-MACLIB
.* ------------------------------------------------------------------*
.*                                                                   *
.*                        TRACE MACRO                                *
.*                                                                   *
.*       The trace function always captures the TCB address, CSECT   *
.*       suffix, and a trace ID.                                     *
.*                                                                   *
.*       One or two data elements (8 bytes each) may be captured at  *
.*       any trace point.  The data to be captured may be specified  *
.*       in either of two ways: DATA1 or RDATA1 and DATA2 or RDATA2. *
.*       DATA1 and RDATA1 are mutually exclusive as are DATA2 and    *
.*       RDATA2.  DATA1 and DATA2 specify the address of data to be  *
.*       captured.  RDATA1 and RDATA2 specify a register whose       *
.*       contents are to be captured.                                *
.*                                                                   *
.*       For example:                                                *
.*                                                                   *
.*                 ITRACE ID=POINTA,DATA1=VALUE1,RDATA2=R4           *
.*                                                                   *
.*          In this case the trace entry would include the current   *
.*          TCB address, CSECT suffix, the id "POINTA", 8 bytes of   *
.*          data beginning at VALUE1's address, and the contents of  *
.*          register 4.                                              *
.*                                                                   *
.* ------------------------------------------------------------------*
         MACRO
&NAME    ITRACE &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010
         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020
         AIF   ('&TROPT' EQ 'OFF').MEXIT
         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT
         AIF   (T'&DATA1 EQ 'O').DATA020
         AIF   ('&DATA1'(1,1) EQ '(').DATA010
         LA    R14,&DATA1            DATA ADDRESS
         MVC   TRDATA1,0(R14)        MOVE DATA
         AGO   .DATA030
.DATA010 ANOP
         MVC   TRDATA1,0&DATA1       MOVE DATA
         AGO   .DATA030
.DATA020 ANOP
         AIF   (T'&RDATA1 EQ 'O').DATA030
         STCM  &RDATA1,15,TRDATA1    SAVE REGISTER CONTENTS
.DATA030 ANOP
         AIF   (T'&DATA2 EQ 'O').DATA050
         AIF   ('&DATA2'(1,1) EQ '(').DATA040
         LA    R14,&DATA2            DATA ADDRESS
         MVC   TRDATA2,0(R14)        MOVE DATA
         AGO   .DATA060
.DATA040 ANOP
         MVC   TRDATA2,0&DATA2       MOVE DATA
         AGO   .DATA060
.DATA050 ANOP
         AIF   (T'&RDATA2 EQ 'O').DATA060
         STCM  &RDATA2,15,TRDATA2    SAVE REGISTER CONTENTS
.DATA060 ANOP
         BAL   R14,TRACE000          ENTER TRACE ROUTINE
         AIF      (T'&ID EQ 'O').NOID
&NAME    DC    CL8'&ID'              TRACE ID
         AGO   .ID
.NOID    ANOP
&NAME    DC    CL8'**NOID**'
.ID      ANOP
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'
.MEXIT   ANOP
         MEXIT
         MEND
./ ADD NAME=LLADATA  0100-09138-09138-1038-00012-00012-00000-MACLIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LLA_HEADER             DS    0C
LLA_NBR_DSNS           DS    XL2       NUMBER OF DATASETS IN LIST
LLA_HEADER_L           EQU   *-LLA_HEADER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
LLA_DATA               DS    0C
LLA_DSN                DS    CL44      DATA SET NAME
LLA_DATA_L             EQU   *-LLA_DATA
./ ADD NAME=MENUDSCT 0102-09138-09141-1451-00010-00010-00000-MACLIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
MENU_DSECT             DSECT
MENU_CMD               DS    CL4       COMMAND NAME
MENU_FLAGS             DS    X         FLAGS/INDICTORS
$MENU_NO_DISPLAY       EQU   X'80'     DON'T DISPLAY ON MENU
MENU_ADDR              DS    AL4       BRANCH ADDRESS
MENU_DESC              DS    CL60      DESCRIPTION FOR MENU
MENU_DSECT_L           EQU   *-MENU_DSECT
./ ADD NAME=MENUFUNC 0100-09138-09138-1043-00022-00022-00000-MACLIB
         MACRO
         MENUFUNC &CMD,&DESC,&MOD,&DISPLAY=YES
         GBLA  &MENUA,&MENUD
         AIF   ('&DISPLAY' EQ 'COUNT').LBL0040
         DC    CL4'&CMD'          COMMAND
         AIF   ('&DISPLAY' EQ 'YES').LBL0010
         DC    AL1($MENU_NO_DISPLAY)
         AGO   .LBL0020
.LBL0010 ANOP
         DC    AL1(0)
&MENUD   SETA &MENUD+1
.LBL0020 ANOP
&MENUA   SETA &MENUA+1
         DC    VL4(&MOD)          ADDRESS OF COMMAND PROCESSOR
         AIF   ('&DISPLAY' EQ 'NO').LBL0030
         DC    CL60&DESC          COMMAND DESCRIPTION
.LBL0030 ANOP
         MEXIT
.LBL0040 ANOP
$MENUA   EQU   &MENUA
$MENUD   EQU   &MENUD
         MEND
./ ADD NAME=MODPRFX  0100-09138-09138-1043-00007-00007-00000-MACLIB
MODPRFX  DSECT
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS                 ASE00110
         LR    R11,R15             LOAD PERMANENT BASE                  ASE00120
         B     0(R0)               BRANCH AROUND MOD NAME/DATE/TIME
PFXMODNM DS    CL8                 MODULE NAME
PFXMODDT DS    CL8                 ASSEMBLY DATE
PFXMODTM DS    CL6                 ASSEMBLY TIME
./ ADD NAME=NETIO    0107-09138-09161-1535-00029-00029-00000-MACLIB
         MACRO
         NETIO &DSECT=NO
             AIF   ('&DSECT' EQ 'YES').LBL0010
             AIF   ('&DSECT' EQ 'NO').LBL0020
             MNOTE 12,'INVALID ''DSECT'' PARAMETER'
             MEXIT
.LBL0010     ANOP
NET_IO       DSECT
             AGO   .LBL0030
.LBL0020     ANOP
NET_IO       DS   0H
.LBL0030     ANOP
NET_LENGTH   DS    H
NET_FUNCTION DS    X                   FUNCTION
$NET_ID      EQU   0                   .. USER IDENTIFICATION
$NET_ACT     EQU   1                   .. ACTIVE REGIONS
$NET_APF     EQU   2                   .. APF LIST
$NET_FS      EQU   3                   .. FILESYSTEM LIST
$NET_IPL     EQU   4                   .. IPL DATA
$NET_LLA     EQU   5                   .. LINK LIST
$NET_PS      EQU   6                   .. UNIX 'PROCESSES'
$NET_SUB     EQU   7                   .. SUBSYSTEMS
$NET_USERS   EQU   8                   .. INQUIRE USERS
$NET_LOGOFF  EQU   254                 .. LOGOFF
NET_RC       DS    XL2                 RETURN CODE
NET_MESSAGE  DS    CL80                MESSAGE
NET_HEADER_L EQU   *-NET_IO
NET_DATA     DS    0C                  I/O AREA
             MEND
./ ADD NAME=OPTIONS  0100-09250-09250-1028-00003-00003-00000-MACLIB
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
         SUTLOPT TRACE=ON
./ ADD NAME=PARSEREQ 0100-09138-09138-1055-00016-00016-00000-MACLIB
         MACRO
         PARSEREQ &DSECT=YES
         AIF   ('&DSECT' EQ 'NO').LBL0010
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PARSE_REQ     DSECT
              AGO  .LBL0020
.LBL0010      ANOP
PARSE_REQ     DS   0A
.LBL0020      ANOP
PARSE_LENGTH  DS   H                        LENGTH OF OUTPUT
PARSE_IN      DS   CL80                     INPUT STRING
PARSE_OUT     DS   CL80                     OUTPUT STRING
PARSE_REQ_L   EQU  *-PARSE_REQ
         MEND
./ ADD NAME=PRTBLOK  0100-09138-09138-1639-00023-00023-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*        PRINTER REQUEST BLOCK                                        *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         PRTBLOK &DSECT=YES
             AIF   ('&DSECT' EQ 'YES').LBL0010
PRTBLOK      DS    0A
             AGO   .LBL0020
.LBL0010     ANOP
PRTBLOK      DSECT
.LBL0020     ANOP
PRT_EYE      DS    CL8                 EYECATCHER
PRT_NEXT     DS    A                   NEXT BLOCK ON THE CHAIN
PRT_COMMAND  DS    C                   COMMAND
$PRT_HEAD    EQU   C'H'                .. PRINT HEADING
$PRT_PRINT   EQU   C'P'                .. PRINT
PRT_CC       DS    C                   CARRIAGE CONTROL
PRT_MSGID    DS    CL11                MESSAGE ID
PRT_DATA     DS    CL120               PRINT DATA
PRTBLOKL     EQU   *-PRTBLOK
         MEND
./ ADD NAME=PSDATA   0103-09146-09169-1551-00019-00019-00000-MACLIB
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PS_HEADER              DS    0C
PS_NBR                 DS    XL2   NBR OF PROCESSES RETURNED
PS_HEADER_L            EQU   *-PS_HEADER
* ------------------------------------------------------------------- *
*                                                                     *
* ------------------------------------------------------------------- *
PS_DATA                DS    0C    INFO PER FILE SYSTEM
PS_PID                 DS    XL4   PROCESS ID
PS_PPID                DS    XL4   PARENT PROCESS ID
PS_SIZE                DS    XL4   TOTAL SIZE
PS_START_TIME          DS    XL4   TIME PROCESS STARTED
PS_USER_TIME           DS    XL4   USER CPU TIME
PS_SYSTEM_TIME         DS    XL4   SYSTEM CPU TIME
PS_IO                  DS    XL4   NBR OF I/O'S
PS_COMMAND             DS    CL256 PATH
PS_DATA_L              EQU   *-PS_DATA
./ ADD NAME=REGEQU   0100-09250-09250-1028-00016-00016-00000-MACLIB
R0       EQU    0
R1       EQU    1
R2       EQU    2
R3       EQU    3
R4       EQU    4
R5       EQU    5
R6       EQU    6
R7       EQU    7
R8       EQU    8
R9       EQU    9
R10      EQU    10
R11      EQU    11
R12      EQU    12
R13      EQU    13
R14      EQU    14
R15      EQU    15
./ ADD NAME=STCCOMM  0123-09138-09159-1120-00172-00128-00000-MACLIB
         MACRO
         STCCOMM &TYPE=
*---------------------------------------------------------------------*
*                                                                     *
*          COMMON AREA MAPPING MACRO                                  *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
STCCOMM  CSECT
STCCOMM  AMODE 31
STCCOMM  RMODE ANY
         AGO   .NODSECT
.DSECT   ANOP
STCCOMM  DSECT
.NODSECT ANOP
         COMMCOMM COMMNAME=STCCOMM
*---------------------------------------------------------------------*
*                                                                     *
*                     MODULE ENTRY POINTS                             *
*                                                                     *
*---------------------------------------------------------------------*
                       DC   CL8'STCATTN'
AATTN                  DC   A(0)            VTAM ATTN EXIT ENTRY POINT
                       DC   CL8'STCCOMM'
ACOMM                  DC   A(STCCOMM)      COMMON MODULE
                       DC   CL8'STCCONS'
ACONS                  DC   A(0)            CONSOLE COMMUNICATION
                       DC   CL8'STCLRAD'
ALRAD                  DC   A(0)            VTAM LERAD EXIT ENTRY POINT
                       DC   CL8'STCMAIN '
AMAIN                  DC   A(0)            MAINLINE MODULE ENTRY POINT
                       DC   CL8'STCNET  '
ANET                   DC   A(0)            NETWORK FUNCTIONS
                       DC   CL8'STCPRTQ'
APRTQ                  DC   A(0)            PRINT QUEUING
                       DC   CL8'STCPRTS'
APRTS                  DC   A(0)            PRINT SUBTASK ENTRY POINT
                       DC   CL8'STCTCPIP'
ATCPIP                 DC   A(0)            USER TCPIP FUNCTIONS
                       DC   CL8'TCPIPSUB'
ATCPIPSUB              DC   A(0)            TCPIP SUBTASK ENTRY POINT
                       DC   CL8'STCVTAM '
AVTAM                  DC   A(0)            USER VTAM FUNCTIONS
                       DC   CL8'VTAMSUB '
AVTAMSUB               DC   A(0)            VTAM SUBTASK ENTRY POINT
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
COMM_DXD_ADDRESS       DS   A               MAIN TASK'S WORK AREA
COMM_DXD_LENGTH        DS   F               MAIN TASK'S WORK AREA SIZE
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
COMM_USERS             DC   A(0)            USER CHAIN
                       DC   A(0)
*---------------------------------------------------------------------*
*                                                                     *
*                                                                     *
*                                                                     *
*---------------------------------------------------------------------*
COMM_ACB               DC   A(0)            VTAM ACB'S ADDRESS
COMM_EXLST             DC   A(0)            EXIT LIST'S ADDRESS
COMM_NET_ECB           DC   A(0)            ECB POSTED BY ATTN OR TCPIP
COMM_TERM_ECB          DC   A(0)            TERMINATE ECB
*---------------------------------------------------------------------*
*                                                                     *
*          PRINT SUBTASK CONTROL                                      *
*                                                                     *
*---------------------------------------------------------------------*
PRT_TCB                DC   A(0)            TCB ADDRESS
PRT_REQ                DC   A(0)            REQUEST QUEUE
PRT_TERM_ECB           DC   A(0)            TERMINATION ECB
PRT_WORK_ECB           DC   A(0)            WORK TO DO ECB
PRT_WORK_AREA          DC   A(0)            WORK AREA ADDRESS
PRT_WORK_AREA_LENGTH   DC   F'0'            WORK AREA LENGTH
*---------------------------------------------------------------------*
*                                                                     *
*          CONSOLE SUBTASK CONTROL                                    *
*                                                                     *
*---------------------------------------------------------------------*
CONS_TCB               DC   A(0)            TCB ADDRESS
CONS_TERM_ECB          DC   A(0)            TERMINATION ECB
CONS_WORK_ECB          DC   A(0)            CONSOLE ECB ADDRESS
CONS_SYSTEM_ECB        DC   A(0)            ECB POSTED BY SYSTEM
CONS_WORK_AREA         DC   A(0)            WORK AREA ADDRESS
CONS_WORK_AREA_LENGTH  DC   F'0'            WORK AREA ADDRESS
*---------------------------------------------------------------------*
*                                                                     *
*          TCPIP SUBTASK CONTROL                                      *
*                                                                     *
*---------------------------------------------------------------------*
TCPIP_TCB              DC   A(0)            TCB ADDRESS
TCPIP_TERM_ECB         DC   A(0)            TERMINATION ECB
TCPIP_WORK_ECB         DC   A(0)            WORK ECB ADDRESS
TCPIP_WORK_AREA        DC   A(0)            WORK AREA ADDRESS
TCPIP_WORK_AREA_LENGTH DC   F'0'            WORK AREA ADDRESS
*---------------------------------------------------------------------*
*                                                                     *
*          VTAM SUBTASK CONTROL                                       *
*                                                                     *
*---------------------------------------------------------------------*
VTAM_TCB               DC   A(0)            TCB ADDRESS
VTAM_TERM_ECB          DC   A(0)            TERMINATION ECB
VTAM_WORK_ECB          DC   A(0)            WORK ECB ADDRESS
VTAM_WORK_AREA         DC   A(0)            WORK AREA ADDRESS
VTAM_WORK_AREA_LENGTH  DC   F'0'            WORK AREA ADDRESS
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
COMM_TCPIP_CONNECTIONS DC   F'0'
COMM_PORT              DC   H'0'
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
                       CLIENT PREFIX=COMM_MAIN

*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
COMM_APPL_LENGTH       DC   AL1(L'COMM_APPL_NAME)
COMM_APPL_NAME         DC   CL8' '          OUR VTAM APPL ID
COMM_MAX_LINES         DC   PL3'&MAXL'      LINES PER PAGE ON SYSOUT

COMM_FLAG              DC   X'00'           GLOBAL FLAGS
$ABEND                 EQU  X'80'           .. ABEND AT END OF JOB
$ABORT                 EQU  X'40'           .. SERIOUS ERROR, ABORT

COMM_TASKS             DC   X'00'           SUBTASKS ACTIVE
$TASKS_PRINT           EQU  X'80'           .. PRINT SUBTASK
$TASKS_CONSOLE         EQU  X'40'           .. CONSOLE SUBTASK
$TASKS_VTAM            EQU  X'20'           .. VTAM SUBTASK
$TASKS_TCPIP           EQU  X'10'           .. TCPIP SUBTASK

COMM_EOJ               DC   X'00'           EOJ FLAGS
$EOJ1                  EQU  X'80'           .. NO NEW USER SESSIONS
$EOJ2                  EQU  X'40'           .. NO SESSIONS ACTIVE
$EOJ3                  EQU  X'20'           .. ACB CLOSED
$EOJ4                  EQU  X'10'           ..
$EOJ5                  EQU  X'08'           ..
$EOJ6                  EQU  X'04'           ..
$EOJ7                  EQU  X'02'           ..
$EOJ8                  EQU  X'01'           ..
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
COMM_BLANKS            DC   CL256' '        CONSTANT
COMMEND                EQU  *
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         COPY  TRENTRY
         COPY  MODPRFX
         MEND
./ ADD NAME=SUTLOPT  0100-09138-09138-1356-00010-00010-00000-MACLIB
         MACRO
         SUTLOPT &MAXLINE=60,         LINES PER PAGE ON SYSOUT         +
               &TRSIZE=1000,          NUMBER OF TRACE TABLE ENTRIES    +
               &TRACE=ON              INTERNAL TRACE CONTROL
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
&MAXL    SETA  &MAXLINE
&TRSZ    SETA  &TRSIZE
&TROPT   SETC  '&TRACE'
         MEND
./ ADD NAME=SUTLSAVE 0100-09139-09139-1101-00021-00021-00000-MACLIB
         MACRO
&NAME    SUTLSAVE &DSECT=NO
         LCLC   &DNAME
         AIF    ('&DSECT' EQ 'YES').LBL0010
         AIF    ('&DSECT' EQ 'NO').LBL0020
         MNOTE  12,'INVALID ''DSECT'' PARAMETER'
         MEXIT
.LBL0010 ANOP
         AIF    (T'&NAME EQ 'O').LBL001A
&DNAME   SETC   '&NAME'
         AGO    .LBL001B
.LBL001A ANOP
&DNAME   SETC   'SUTLSAVE'
.LBL001B ANOP
&DNAME   DSECT
.LBL0020 ANOP
DXD_SAVE DS    18F
DXD_ID   DS    CL8
TRDATA1  DS    CL8
TRDATA2  DS    CL8
         MEND
./ ADD NAME=TRENTRY  0100-09250-09250-1028-00012-00012-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*          TRACE TABLE ENTRY                                          *
*                                                                     *
*---------------------------------------------------------------------*
TRENTRY  DSECT
TRETCB   DS    XL4                 TCB ADDRESS
TREMOD   DS    CL4                 MODULE SUFFIX
TREID    DS    CL8                 TRACE ID
TREDATA1 DS    CL8                 TRACE DATA 1
TREDATA2 DS    CL8                 TRACE DATA 2
TRENTRYL EQU   *-TRENTRY           ENTRY LENGTH
./ ADD NAME=TSOCOMM  0112-09138-09169-1425-00153-00133-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*          TSO COMMON AREA MAPPING MACRO                              *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         TSOCOMM &TYPE=
         GBLA  &MAXL,&TRSZ
         GBLC  &TROPT
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
TSOCOMM                CSECT
TSOCOMM                AMODE   31
TSOCOMM                RMODE   ANY
                       AGO     .NODSECT
.DSECT                 ANOP
TSOCOMM                DSECT
.NODSECT               ANOP
                       COMMCOMM COMMNAME=TSOCOMM
*---------------------------------------------------------------------*
*                                                                     *
*               MODULE ENTRY POINTS                                   *
*                                                                     *
*---------------------------------------------------------------------*
                       DC    CL8'TSOCOMM'
ACOMM                  DC    A(TSOCOMM)     COMMON MODULE
                       DC    CL8'TSODISP'
ADISP                  DC    A(0)           DYNAMIC AREA DISPLAY
                       DC    CL8'TSOLRAD'
ALRAD                  DC    A(0)           LERAD EXIT
                       DC    CL8'TSOMAIN'
AMAIN                  DC    A(0)           TSO MAINLINE MODULE
                       DC    CL8'TSOMENU'
AMENU                  DC    A(0)           TSO MENU DATA
                       DC    CL8'TSONET'
ANET                   DC    A(0)           NETWORK FUNCTIONS
                       DC    CL8'TSOPQRY'
APQRY                  DC    A(0)           DYNAMIC AREA PQUERY
                       DC    CL8'TSOPRSE'
APRSE                  DC    A(0)           COMMAND PARSER
                       DC    CL8'TSOTCPIP'
ATCPIP                 DC    A(0)           TCP/IP INTERFACE
                       DC    CL8'TSOVARS'
AVARS                  DC    A(0)           SPF VARIABLE DEFINE/DELETE
                       DC    CL8'TSOVTAM'
AVTAM                  DC    A(0)           TSO VTAM FUNCTIONS
*---------------------------------------------------------------------*
*                                                                     *
*                 SPF INTEFACE ENTRY POINT                            *
*                                                                     *
*---------------------------------------------------------------------*
                       DC    CL8'ISPLINK'
AISPLINK               DC    A(0)           SPF INTERFACE ENTRY POINT
*---------------------------------------------------------------------*
*                                                                     *
*                      GLOBAL DATA                                    *
*                                                                     *
*---------------------------------------------------------------------*
COMM_DXD_ADDRESS       DC    A(0)           WORK AREA BASE
COMM_ACB               DC    A(0)           ACB'S ADDRESS
COMM_RPL               DC    A(0)           RPL'S ADDRESS
COMM_RPLX              DC    A(0)           RPL EXTENSION'S ADDRESS
COMM_NIB               DC    A(0)           NIB'S ADDRESS
COMM_EXLST             DC    A(0)           EXLST'S ADDRESS
COMM_IO                DC    A(0)           I/O AREA ADDRESS
COMM_TEXT              DC    A(0)           TEXT AREA ADDRESS
COMM_TEXT_LENGTH       DC    F'0'           TEXT AREA SIZE
COMM_VDATA             DC    A(0)           DYNAMIC AREA ADDRESS
COMM_VDATA_LENGTH      DC    F'0'           DYNAMIC AREA SIZE
COMM_CURSOR            DC    F'0'           CURSOR POSITION
COMM_TEXT_OFFSET       DC    F'0'           OFFSET FOR TEXT
COMM_TEXT_LINE_NBR     DC    F'0'           RELATIVE LINE IN TEXT
COMM_TEXT_LINES        DC    F'0'           NUMBER OF LINES OF TEXT
COMM_TEXT_LINE_LENGTH  DC    F'0'           LINE LENGTH OF TEXT
COMM_HOSTNAME_LENGTH   DC    F'0'           HOSTNAME LENGTH
COMM_SUTL_PORT         DC    H'0'           SUTL STC'S PORT NUMBER
COMM_SOCKET            DC    H'0'           TCP/IP SOCKET
COMM_APPL_LENGTH       DC    AL1(L'COMM_APPL_NAME)
COMM_APPL_NAME         DC    CL8' '         OUR APPLID
COMM_SUTL_APPL         DC    CL8' '         SUTL STC'S APPLID
COMM_SUTL_HOSTNAME     DC    CL256' '       SUTL STC'S HOST NAME
COMM_CID               DC    XL4'00'        CONVERSATION ID

COMM_FLAG              DC    X'00'          GLOBAL FLAGS
$COMM_VTAM             EQU   X'80'          .. USING VTAM
$COMM_TCPIP            EQU   X'40'          .. USING TCP/IP
$ABEND                 EQU   X'20'          .. ABEND AT END OF JOB
$ABORT                 EQU   X'10'          .. SERIOUS ERROR, ABORT
$VDEF                  EQU   X'08'          .. VDEFINE'S PERFORMED
$ACB_OPEN              EQU   X'04'          .. ACB IS OPEN
$SESS_ALLOCATED        EQU   X'02'          .. SESSION ALLOCATED

COMM_NET_COMMAND       DC    C' '           VTAM COMMAND
$NET_INIT              EQU   C'I'           .. INITIALIZE
$NET_RECEIVE           EQU   C'R'           .. ISSUE A RECEIVE
$NET_SEND              EQU   C'S'           .. ISSUE A SEND
$NET_CLEANUP           EQU   C'C'           .. CLEAN UP

COMM_DISPLAY_FLAGS     DC    X'00'          DISPLAY FLAGS
$NO_SCROLL             EQU   X'80'          .. NO SCROLLING
$NO_CURSOR             EQU   X'40'          .. NO CURSOR DATA
$MULTIPLE_SCREENS      EQU   X'20'          .. APP HAS MULTPLE SCREENS

COMM_PANEL             DC    CL8' '         PANEL NAME

COMM_RC                DC    X'00'          RETURN CODE

COMM_BLANKS            DC    CL256' '
*---------------------------------------------------------------------*
*                                                                     *
* Any fields that are defined as SPF variables must be below LVLINE   *
*                                                                     *
*---------------------------------------------------------------------*
LVLINE                 DC    F'0'           LAST VISIBLE LINE
VWIDTH                 DC    F'0'           DYNAMIC AREA WIDTH
VCOL                   DC    F'0'           DYNAMIC AREA COLUMN
VDEPTH                 DC    F'0'           DYNAMIC AREA DEPTH
VROW                   DC    F'0'           DYNAMIC AREA ROW
VTYPE                  DC    CL8' '         DYNAMIC AREA TYPE
ZSCROLLN               DC    F'0'           NUMBER OF LINES TO SCROLL
ZSCROLLA               DC    CL8' '         SCROLL AMOUNT
ZVERB                  DC    CL8' '         SPF VERB
COMM_USER              DC    CL8' '         USER'S ID
COMM_USER_SMF          DC    CL4' '         USER'S SYSTEM'S SMF ID
COMM_SUTL_SMF          DC    CL4' '         SUTL STC SYSTEM'S SMF ID
COMM_SUTL_SYSTEM_NAME  DC    CL4' '         SUTL STC SYSTEM'S NAME

COMM_MSG               DS    0CL70          MESSAGE
COMM_MSGI              DS    CL11           .. MESSAGE ID
COMM_MSGT              DS    CL59           .. MESSAGE TEXT
ZCMD                   DS    CL80           SPF COMMAND AREA
COMM_END               EQU   *
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
          COPY  TRENTRY
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         COPY  MODPRFX
         MEND
./ ADD NAME=USERBLOK 0118-09138-09160-0834-00058-00033-00000-MACLIB
         MACRO
         USERBLOK
USERBLOK            DSECT
USER_NEXT           DS    A        NEXT USER BLOCK
USER_PREV           DS    A        PREVIOUS USER BLOCK
USER_EYE            DS    CL8      EYECATCHER
USER_ID             DS    CL8      USER'S ID
USER_SMF            DS    CL4      USER'S SYSTEM'S SMF ID
USER_LU             DS    CL8      USER'S LU NAME
USER_CID            DS    XL4      SESSION'S CID
USER_COMM           DS    A        STCCOMM ADDRESS
USER_TCB            DS    A        TCB ADDRESS
USER_DXD_ADDR       DS    A        WORK AREA BASE ADDRESS
USER_DXD_LENGTH     DS    A        WORK AREA BASE ADDRESS
USER_NET            DS    A        NETWORK FUNCTIONS ENTRY POINT
USER_TCPIP          DS    A        TCP/IP FUNCTIONS ENTRY POINT
USER_VTAM           DS    A        VTAM FUNCTIONS ENTRY POINT
USER_RPL            DS    A        RPL ADDRESS
USER_RPLX           DS    A        RPL EXTENSION ADDRESS
USER_IO             DS    A        I/O AREA ADDRESS
USER_TERM_ECB       DS    A        TERMINATION ECB

USER_NET_ECB        DS    A        ECB FOR NETWORK FUNCTIONS
                    DS    XL100    .. WORK AREA FOR TCP/IP

USER_API_ECB        DS    F        ECB FOR API
USER_TAKESOCKET_ECB DS    F        ECB FOR TAKESOCKET
USER_RECEIVES       DS    F        NUMBER OF RECEIVES
USER_SENDS          DS    F        NUMBER OF SENDS
USER_BYTES_SENT     DS    F        TOTAL NUMBER OF BYTES RECEIVED
USER_BYTES_RECEIVED DS    F        TOTAL NUMBER OF BYTES SENT
USER_TCPIP_GWA      DS    A        TCPIP GLOBAL WORK AREA

                    CLIENT PREFIX=USER

USER_SOCKET         DS    H        SOCKET DESCRIPTOR

USER_DATE           DS    XL4      DATE USER CONNECTED
USER_TIME           DS    XL4      TIME USER CONNECTED

USER_IP_ADDRESS     DS    CL15     IP ADDRESS (PRINTABLE FORM)

USER_STATUS         DS    X        STATUS
$USER_VTAM          EQU   X'01'    .. USING VTAM
$USER_TCPIP         EQU   X'02'    .. USING TCP/IP
$USER_INITIAL       EQU   X'04'    .. INITIAL STATUS
$USER_ACTIVE        EQU   X'08'    .. USER SUBTASK ATTACHED AND ACTIVE
$USER_LOST          EQU   X'10'    .. SESSION TO USER LU LOST
$USER_DEALLOCATE    EQU   X'20'    .. SESSION TO USER DEALLOCATED
$USER_CLEANUP       EQU   X'40'    .. NET CLEANUP PERFORMED

USER_NET_COMMAND    DS    X        VTAM COMMAND
$USER_NET_INIT      EQU   X'01'    .. INITIALIZE
$USER_RECEIVE       EQU   X'02'    .. ISSUE A RECEIVE
$USER_SEND          EQU   X'03'    .. ISSUE A SEND
$USER_NET_CLEANUP   EQU   X'04'    .. CLEAN UP
USER_L              EQU   *-USERBLOK
         MEND
./ ADD NAME=VARDSECT 0100-09250-09250-1028-00010-00010-00000-MACLIB
* ------------------------------------------------------------------- *
*              VARIABLE TABLE ENTRIES                                 *
* ------------------------------------------------------------------- *
VARDSECT DSECT
VARNAME  DS    CL8                   NAME KNOWN TO SPF
VARLEN   DS    AL4                   VARIABLE LENGTH
VARFORM  DS    CL8                   VARIABLE FORMAT
VARID    DS    AL2                   VARIABLE'S 'ID'
VARDISP  DS    AL2                   DISPLACEMENT TO DATA
VARL     EQU   *-VARDSECT
./ ADD NAME=VARREQ   0100-09138-09138-1538-00024-00024-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*        VARIABLE DEFINE/DELETE REQUEST                               *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         VARREQ  &DSECT=YES
                      AIF   ('&DSECT' EQ 'YES').LBL0010
VAR_REQ               DS    0A
                      AGO   .LBL0020
.LBL0010              ANOP
VAR_REQ               DSECT
.LBL0020              ANOP
VAR_IDS               DS    A         ID LIST ADDRESS
VAR_TABLE             DS    A         ADDRESS OF VARIABLE TABLE
VAR_AREA              DS    A         ADDRESS OF VARIABLE DATA AREA
VAR_NBR               DS    H         NUMBER OF VARIABLES IN ID LIST
VAR_COMMAND           DS    C         COMMAND
$VAR_DEFINE_ALL       EQU   X'01'     .. DEFINE (ALL)
$VAR_DEFINE_SPECIFIC  EQU   X'02'     .. DEFINE (SPECIFIC)
$VAR_DELETE_SPECIFIC  EQU   X'03'     .. DELETE (SPECIFIC)
$VAR_DELETE_ALL       EQU   X'04'     .. DELETE (ALL)
VARR_REQ_L            EQU   *-VAR_REQ
         MEND
./ ADD NAME=VDEF     0100-09250-09250-1028-00063-00063-00000-MACLIB
         MACRO
         VDEF  &BASE=,               BASE ADDRESS OF VARIABLES AREA    +
               &NAME=,               NAME DEFINED TO SPF               +
               &DATA=,               DATA ADDRESS                      +
               &LENGTH=,             DATA LENGTH                       +
               &FORM=                DATA FORMAT
         GBLA  &MAXL,&TRSZ
         GBLB  &VINIT
         GBLC  &AREA,&TROPT
         GBLC  &VDEFGBL(100)
         LCLA  &SUB
         AIF   (T'&BASE EQ 'O').LBL0010
&AREA    SETC  '&BASE'
&VINIT   SETB  0                     NEW AREA... RESET INIT SWITCH
         MEXIT
.LBL0010 ANOP
         AIF   (&VINIT).LBL0030
&VINIT   SETB  1
&SUB     SETA  1
.LBL0020 ANOP
&VDEFGBL(&SUB)  SETC ' '
         AIF   (&SUB EQ 100).LBL0030
&SUB     SETA   &SUB+1
         AGO   .LBL0020
.LBL0030 ANOP
         AIF   (T'&NAME EQ 'O').ERR0010
         AIF   (T'&LENGTH  EQ 'O').ERR0020
         AIF   (T'&FORM    EQ 'O').ERR0030
&SUB     SETA  1
.LBL0040 ANOP
         AIF   ('&VDEFGBL(&SUB)' EQ ' ').LBL0050
         AIF   ('&VDEFGBL(&SUB)' EQ '&NAME').ERR0040
         AIF   (&SUB EQ 100).ERR0050
&SUB     SETA  &SUB+1
         AGO   .LBL0040
.LBL0050 ANOP
&VDEFGBL(&SUB) SETC '&NAME'
         AIF   ('&AREA' EQ '').ERR0060
         DC    CL8'&NAME'             NAME KNOWN TO SPF
         DC    AL4(&LENGTH)           LENGTH
         DC    CL8'&FORM'             VARIABLE FORMAT
         DC    AL2(&SUB)              VARIABLE'S 'ID' NUMBER
         DC    AL2(&DATA-&AREA)       DISPLACEMENT TO DATA
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'NAME IS A REQUIRED PARAMETER'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'LENGTH IS A REQUIRED PARAMETER'
         MEXIT
.ERR0030 ANOP
         MNOTE 12,'FORM IS A REQUIRED PARAMETER'
         MEXIT
.ERR0040 ANOP
         MNOTE 12,'VARIABLE NAME IS DUPLICATED'
         MEXIT
.ERR0050 ANOP
         MNOTE 12,'VDEFGBL IS FULL'
         MEXIT
.ERR0060 ANOP
         MNOTE 12,'BASE MUST BE DEFINED BEFORE VARIABLES CAN BE DEFINED+
               '
         MEND
