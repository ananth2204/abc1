 /* test ispf panel exit                         rexx */

 say 'ISPF panel exit ISPDPX01 installation verification'

 pp ='ISX1PNL'
 say 'Panel prefix' pp
 zz=Listdsi('sysexec file')
 plib=sysdsname
 llib='CBT669.LOADLIB'
 env = left(sysvar('sysenv'),1)   /* Fore/Back */
 libdef=''
 address ispexec
 /*
 zerrlm=''
 "libdef ispllib dataset id('"llib"') stack"
 if rc<>0 then call close 8 'Libdef llib' llib 'failed rc' rc zerrlm
 libdef=libdef 'ISPLLIB'
 */
 zerrlm=''
 "libdef ispplib dataset id('"plib"') stack"
 if rc<>0 then call close 8 'Libdef plib' plib 'failed rc' rc zerrlm
 libdef=libdef 'ISPPLIB'

 say 'testing' pp'A, supplying everything in the stem'
 pl.1  = ")ATTR                          "
 pl.2  = " + type(text) color(green) skip(on)  "
 pl.3  = " _ type(input) color(turq) hilite(uscore) caps(on)"
 pl.4  = " ! type(input) color(turq) hilite(uscore) caps(off)"
 pl.5  = ")BODY expand(\\)               "
 pl.6  = center('%Test panel exit 1 - IVP 2',78)
 pl.7  = "%Cmd =>_zcmd    \ \ +"
 pl.8  = "+                              "
 pl.9  = "Just some text                 "
 pl.10 = "+"
 pl.11 = left("Input your name!name",60)"+"
 pl.12 = "+                              "
 pl.13 = ")INIT                          "
 pl.14 = " &name = 'test1'                "
 pl.15 = ")PROC                          "
 pl.16 = " ver (&name,nb)"
 pl.0 = 16
 zerrlm=''
 if enf='B' then "control nondispl enter"
 "display panel("pp"1)"
 if rc>8 then call close 8 'display' pp'1 rc' rc zerrlm
 say 'Display test 1 ok, rc='rc', name='name
 say ''

 say 'testing' pp'2, separate stem per panel section'
 /* ATTR */
 pa.1 = " + type(text) color(green) skip(on)  "
 pa.2 = " _ type(input) color(turq) hilite(uscore) caps(on)"
 pa.3 = " ! type(input) color(turq) hilite(uscore) caps(off)"
 pa.0 = 3
 /* BODY */
 pb.1 = center('%Test panel exit 1 - IVP 2',78)
 pb.2 = left("%Cmd =>_zcmd",78)"+"
 pb.3 = "+                              "
 pb.4 = "Just some text                 "
 pb.5 = "+"
 pb.6 = left("Input your name!name",60)"+"
 pb.7 = "+                              "
 pb.0 = 7
 /* INIT */
 pi.1 = " &name = 'test2'                "
 pi.0 = 1
 /* REINIT */
 pr.0 = 0
 /* PROC */
 pp.1 = " ver (&name,nb)"
 pp.0 = 1
 zerrlm=''
 if enf='B' then "control nondispl enter"
 "display panel("pp"2)"
 if rc>8 then call close 8 'display' pp'2 rc' rc zerrlm
 say 'Display test 2 ok, rc='rc', name='name
 say ''

 say 'testing' pp'2, separate stem per panel section, with some missing'
 drop pa. pb. pi. pr. pp.
 /* ATTR */
 pa.1 = " + type(text) color(green) skip(on)  "
 pa.2 = " _ type(input) color(turq) hilite(uscore) caps(on)"
 pa.3 = " ! type(input) color(turq) hilite(uscore) caps(off)"
 pa.0 = 3
 /* BODY */
 pb.1 = center('%Test panel exit 1 - IVP 3',78)
 pb.2 = left("%Cmd =>_zcmd",78)"+"
 pb.3 = "+                              "
 pb.4 = "Just some text                 "
 pb.5 = "+"
 pb.6 = left("Input your name!name",60)"+"
 pb.7 = "+                              "
 pb.0 = 7
 /* INIT */
 pi.1 = " &name = 'test3'                "
 pi.0 = 1
 zerrlm=''
 if enf='B' then "control nondispl enter"
 "display panel("pp"2)"
 if rc>8 then call close 8 'display' pp'2 rc' rc zerrlm
 say 'Display test 3 ok, name=' name
 say ''

 say 'testing' pp'2, with incomplete stems'
 drop pb.4
 zerrlm=''
 if enf='B' then "control nondispl enter"
 "display panel("pp"2)"
 if rc>8 then call close 8 'display' pp'2 rc' rc zerrlm
 say 'Display test ok'
 say ''

 call close 0

Close:
 parse arg n m
 if m<>'' then say m
 do dn=1 to words(libdef)
   "libdef" word(libdef,dn)
 end
 exit word(n 0,1)
