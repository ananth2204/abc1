/*                                                                rexx
 REXXGBLV test - recovery
*/
 arg p
 parse var p . 'PGM('pgm')' . 0 . 'TRC('trc')' .
 pgm=word(pgm 'REXXGBLV',1)
 if p<>'' then do
   say 'Parameters:' p
   say 'Pgmname:' pgm
   say 'Trace:  ' trc
 end
 Interpret "say 'Version:'" pgm"('version')"
 say ''

 /*- Import from null dataset - build 061                -*/
 zz=bpxwdyn('alloc new delete dd(b061dd)',
   'lrecl(80) recfm(f,b) tracks space(1,1) unit(sysda)')
 Call RunPgm 'import pool(b061) dd(b061dd) trace','import from null ds',8
 zz=bpxwdyn('free dd(b061dd)')

 /*-------------------- all ok ---------------------------*/
 /* end */
 say ''
 exit xmsg('All ok',0)

XMsg: if arg(1)<>'' then say arg(1);return word(arg(2) 99,1)

DoListVar:
 trace off
 do $=1 to words(arg(1))
   say left(word(arg(1),$),12)':<'Value(word(arg(1),$))'>'
 end
 return 0

RunPgm:
 if arg(2)<>'' then say '->' arg(1) '-' arg(2)
 else say '->' arg(1)
 t=''
 if wordpos(translate(word(arg(1),1)),trc)>0 then t='TRACE'
 rexxgblv_msg=''
 Interpret "cc="pgm"(arg(1)" t")"
 say 'retval  "'cc'"'
 say 'message "'strip(REXXGBLV_msg,'t')'"'
 testvl='VSAVEN VLOADN VLISTN RLISTN RLOADN importn exportn vdeln',
        'MAXNL MAXDL MAXNDL'
 do n=1 to words(testvl)
   w =word(testvl,n)
   zz=Value(w,Value('REXXGBLV_'w)+0)
 end
 say 'vsaven='REXXGBLV_VSAVEN+0,
     'vloadn='REXXGBLV_VLOADN+0,
     'vlistn='REXXGBLV_VLISTN+0,
     'vdeln='REXXGBLV_VdelN+0,
     'rlistn='REXXGBLV_RLISTN+0,
     'rloadn='REXXGBLV_RLOADN+0,
     'importn='REXXGBLV_importn+0,
     'exportn='REXXGBLV_exportn+0,
     'maxnl='REXXGBLV_MAXNL+0,
     'maxdl='REXXGBLV_MAXDL+0,
     'maxndl='REXXGBLV_MAXNDL+0
 if cc=0 then return 0
 say '    Rc' cc rexxgblv_msg
 if arg(3)<>'' then if cc>arg(3) then exit 20
 return  cc

DataSort: procedure expose data.
 n=data.0
 h=n
 do while h>1
   h=h%2
   do i=1 to n-h
     j=i
     k=h+i
     do while data.k<data.j
       t=data.j
       data.j=data.k
       data.k=t
       if h>=j then leave
       j=j-h
       k=k-h
     end   /*while data.k<data.j*/
   end     /*i*/
 end       /*while h>1*/
 return

/* Return region in use.  Origin: Mark Zelden's REXXSTOR       */
RgnInUse: Procedure
Numeric digits 14                            /* dflt of 9 not enough!*/
ASCB     = C2d(Storage(224,4))               /* current ASCB         */
LDA      = C2d(Storage(D2x(ASCB + 48),4))    /* local data area      */
LDAEVVRG = C2d(storage(D2x(LDA + 220),4))    /* >16m reg size        */
LDAEVVRG = Right(LDAEVVRG/1024,9)            /* convert to kbytes    */
LDALOAL  = C2d(storage(D2x(LDA + 232),4))    /* <16m reg alloc       */
LDALOAL  = Right(LDALOAL/1024,9)             /* convert to kbytes    */
Return  LDALOAL

V054TestTrace: Procedure expose pgm
 say 'v054 passed trace test'
 v054.1='Kilroy'
 v054.2='was'
 v054.3='here'
 Call RunPgm 'Save  var(v054.)  pool(tracetest) trace(y)'
 Call RunPgm 'Drop pool(tracetest)'
 return 0

DrWhoData:
 drop drwho.
 drwho.1  =  'Doctor Who is a British science-fiction television'
 drwho.2  =  'Programme produced by the BBC from 1963 to the present'
 drwho.3  =  'Day. The programme depicts the adventures of The'
 drwho.4  =  'Doctor, a Time Lord a time-travelling humanoid alien.'
 drwho.5  =  'He explores the universe in his TARDIS, a sentient'
 drwho.6  =  'Time-travelling space ship. Its exterior appears as a'
 drwho.7  =  'Blue British police box, which was a common sight in'
 drwho.8  =  'Britain in 1963 when the series first aired. Along'
 drwho.9  =  'With a succession of companions, the Doctor combats a'
 drwho.10 =  'Variety of foes while working to save civilisations'
 drwho.11 =  'And help people in need.'
 drwho.0  =  11
 drwhowhat=  'Doctor Who is a British sci-fi tv programme from 1963'
 drwhobox =  'TARDIS looks like a blue British police box'
 drwhowho =  'a Time Lord working to save civilisations'
 return 0
