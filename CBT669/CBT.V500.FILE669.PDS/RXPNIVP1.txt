/*                                                         rexx
    REXX Pattern Check IVP
    positional parms: string,pattern,wildcard,expect-rc
*/

trace off
 say 'Test REXX Pattern Check utility RXPATTRN (IVP1)'
 testrc=0
 say ''
 say 'Version:' RXPATTRN('version')
 say ''

 text1 = 'Kilroy was here some time ago'
 text2 = 'this is a string with some names - Gandalf and Frodo'

 /* parms: text, mask, wildcards, expect-rc, Trace */
 cc = Test('IEFBR14','%%%BR*',,0 )
 cc = Test('IEFBR14','???BR#','#?',0 )
 cc = Test('IEFBR14','IEFB*',,0  )
 cc = Test('IEFBR14','IEFBR14*',,0 )
 cc = Test('TESTAAA','TEST%%%',,0,'T')
 cc = Test('Kilroy was here','*',,0)
 cc = Test(text1,'%%%BR*',,1   )
 cc = Test(text1,'*her*',,0    )
 cc = Test(text2,'*not*',,1    )
 cc = Test(text2,'*nam*',,0    )
 cc = Test(,'*nam*',,2         )
 cc = Test(text2,,,3           )

 cc = Test('Aexor Blixzgsnn Lexxiko22ersxc. AG 1234 Yolixaon',,
           'A*x%r Bl%xz*nn%Le%%ik%%%ersxc*AG*Y%%%%%on',,0)

 cc = Test('Aexor Blixzgsnn Lexxiko22ersxc. AG 1234 Yolixaon',,
           'A*x%r Bl%xz*nn%Le%%ik%%%ersxc*AX*Y%%%%%on',,1)

 say ''
 exit xmsg('Test completed rc' testrc,testrc)

Test:
trace off
 parse arg tdata,tmask,twc,txrc,topt /* topt: T=trace */
 txrc=word(txrc 0,1)
 say ''
 say 'string  ' right(length(tdata),3,0) tdata
 say 'pattern ' right(length(tmask),3,0) tmask
 say 'wildcard' right(length(twc),3,0) twc
 say 'expectrc' txrc
 if topt<>'' then say 'option  ' topt
 cc=RXPATTRN(tdata,tmask,twc,topt)
 /*=RXPATTRN(arg(1),arg(2),arg(3),arg(5))  */
 say 'rc      ' cc 'reason' strip(RXPATTRN_RS)
 if cc>txrc then do
   testrc=8
   return xmsg('Bad rc ******',8)
 end
 return xc
XMsg: if arg(1)<>'' then say arg(1);return word(arg(2) 0,1)
