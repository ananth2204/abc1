{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011106000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 58786, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 6, "INMDSNAM": "CBT.V500.FILE031.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 58786, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE031.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x02\\x07'", "DS1TRBAL": "b'\\xa0,'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x00=\\x00\\x0e\\x00>\\x00\\x01\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"IGGPRE00": {"ttr": 516, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "IGGPRE00 TITLE 'DADSM PRE-PROCESSING EXIT'\n*\n*\n*        DOCUMENTATION NOTE:\n*\n*        THIS EXIT WILL ALLOW DASD ALLOCATION OF NEW DATASETS ONLY ON\n*        VOLUMES MOUNTED STORAGE OR PUBLIC UNLESS THE USER HAS BEEN\n*        GIVEN RACF \"OPERATIONS\".\n*\n*\n*\n         EJECT\n*\n*        FOR DOCUMENTATION, SEE GC26-4149, MVS/XA SYSTEM-DATA\n*        ADMINISTRATION, CHAPTER 5 ON EXIT ROUTINES.\n*\n*\n*        ASSEMBLY REQUIRES SYS1.MACLIB AND SYS1.AMODGEN\n*\n*\n*        LINKEDIT ATTRIBUTES: RENT\n*\n*\n*        CHANGES:\n*        1.0 MVS 10-02-86 REJECT ANY NEW ALLOCATION REQUESTS NOT\n*                         DIRECTED TO A VOLUME WHICH IS MOUNTED\n*                         AS STORAGE OR PUBLIC.\n*\n*\n*        REGISTERS AT ENTRY TO DADSM EXIT\n*\n* REG1  =>  ADDRESS OF PARAMETER LIST\n* REG13 =>  ADDRESS OF AN 18 WORD SAVE AREA\n* REG14 =>  RETURN ADDRESS TO DADSM\n* REG15 =>  ADDRESS OF EXIT ROUTINE\n*\n*        REGISTERS AT RETURN FROM DADSM EXIT\n*\n* REG0  =>\n*  THRU     SAME AS ON ENTRY TO YOUR EXIT ROUTINE\n* REG14 =>\n* REG15 =>  A RETURN CODE FROM IGGPRE00\n*\n*        RETURN CODES FROM DADSM EXITS\n*\n* X'00' =>  PROCESS REQUEST\n* X'04' =>  DO NOT PROCESS REQUEST FOR CURRENT VOLUME\n* X'08' =>  DO NOT PROCESS REQUEST AT ALL\n         EJECT\n*        IN ORDER TO TEST IGGPRE00 THE FOLLOWING MUST BE DONE:\n*              1). LINK THE NEW IGGPRE00 INTO SYS1.LINKLIB.\n*              2). BUILD LPA MEMBER IN PARMLIB.\n*              3). IPL WITH A MLPA.\n*              4). TEST OUT THE NEW IGGPRE00.\n*        IF IT WORKS, THEN ALL IS WELL.\n*              1). LINK THE NEW IGGPRE00 INTO SYS1.LPALIB.\n*              2). DELETE THE NEW IGGPRE00 FORM SYS1.LINKLIB.\n*              3). IPL WITH A CLPA.\n*        IF IT DOES NOT WORK, THEN:\n*              1). IPL\n         EJECT\n**********************************************************************\n*        SET UP NORMAL LINKAGE AND USE REGISTER 12 AS THE BASE REG.\n*        AND REGISTER 10 AS THE POINTER TO THE LIST OF ADDRESSES\n*        PASSED TO IGGPRE00.\n**********************************************************************\n         EJECT\nIGGPRE00 CSECT\n         SAVE  (14,12),,IGGPRE00_&SYSTIME_&SYSDATE\n         LR    R12,R15             SET UP R12 AS BASE REGISTER\n         USING IGGPRE00,R12        ESTABLISH PROGRAM BASE REGISTER\n         LR    R10,R1              FETCH PARM ADDRESS\n         USING IEXID,R10           ESTABLISH PARM LIST BASE REGISTER\n         TM    IEXFLAG,IEXVIO      IF THIS IS A VIO ALLOCATION\n         BO    OKALLOC             THEN ALLOW ALLOCATION\n         L     R4,IEXUCB           POINT TO UCB\n         USING UCBCMSEG,R4         ADDRESS DSECT\n         L     R5,IEXPTR1          POINT TO JFCB\n         USING INFMJFCB,R5         ADDRESS DSECT\nTEST     DS    0H\n         CLI   IEXFUNC,IEXALL      IS REQUEST FOR ALLOCATION\n         BE    CHECK               LETS VERIFY THIS REQUEST\n         CLI   IEXFUNC,IEXEXT      IS REQUEST FOR EXTENSION\n         BNE   OKALLOC             THEN ALLOW ALLOCATION\nCHECK    DS    0H\n         TM    UCBTYP+2,UCB3DACC   IS ALLOCATION FOR DASD\n         BNO   OKALLOC             IF NOT ALLOW ALLOCATION\n         TM    UCBSTAB,X'10'       IF VOLUME IS NOT MOUNTED PRIVATE\n         BNO   OKALLOC             THEN ALLOW ALLOCATION\n         TM    JFCBIND2,JFCNEW     IF DISP NEW WAS SPECIFIED\n         BNO   OKALLOC             IF NOT ALLOW ALLOCATION\n         CLC   0(3,R5),=C'SYS'     ALLOCATING A SYSXXXX DATASET\n         BE    OKALLOC             THEN ALLOW ALLOCATION\n         LA    R6,0                POINT TO PSA\n         L     R6,548(R6)          POINT TO ASCB\n         USING ASCB,R6             ADDRESS  ASCB\n         L     R6,ASCBASXB         POINT TO ASXB\n         USING ASXB,R6             ADDRESS  ASXB\n         L     R6,ASXBSENV         POINT TO ACEE\n         USING ACEE,R6             ADDRESS  ACEE\n         TM    ACEEFLG1,ACEEOPER   DOES THIS USER HAVE OPERATIONS\n         BNO   NOALLOC             IF NOT THEN DO NOT ALLOW ALLOCATION\n         EJECT\nOKALLOC  DS    0H\n         LA    R15,0               ALLOW THE REQUEST\n         B     EXIT\n         SPACE 2\nNOALLOC  DS    0H\n         LA    R15,8               REJECT THE REQUEST\n         SPACE 2\nEXIT     DS    0H\n*        L     R13,4(R13)          GET PREVIOUS SAVEAREA @\n         RETURN (14,12),T,RC=(15)  RETURN TO CALLER\n         EJECT\n         TITLE 'REGISTER EQUATES'\nR0       EQU   0\nR1       EQU   1\nR2       EQU   2\nR3       EQU   3\nR4       EQU   4\nR5       EQU   5\nR6       EQU   6\nR7       EQU   7\nR8       EQU   8\nR9       EQU   9\nR10      EQU   10\nR11      EQU   11\nR12      EQU   12\nR13      EQU   13\nR14      EQU   14\nR15      EQU   15\n         TITLE 'PARM LIST DSECT'\n         IECIEXPL\n         TITLE 'ACEE DSECT'\n         IHAACEE\n         TITLE 'ASCB DSECT'\n         IHAASCB\n         TITLE 'ASXB DSECT'\n         IHAASXB\n         TITLE 'JFCB DSECT'\n         IEFJFCBN\n         TITLE 'UCB DSECT'\n         IEFUCBOB\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT031/FILE031.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT031", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}