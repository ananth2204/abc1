{"INMR01": {"INMLRECL": 80, "INMFNODE": "NODENAME", "INMFUID": "T311LBD", "INMTNODE": "X", "INMTUID": "Y", "INMFTIME": "20180518151844000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 117572, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 27920, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "T311LBD.SDSFEXT.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 117572, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"T311LBD.SDSFEXT.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 27920, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 32, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 32760, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "180138", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\x02'", "DS1LSTAR": "b'\\x00\\x02\\x05'", "DS1TRBAL": "b'7\\xea'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0ep\\x00\\x04\\x98\\x10\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x0ep\\x00\\x04\\x98\\x10\\xd8'", "b'X\\x9f\\x8eh\\x00\\x00\\x01\\x86\\x00\\x01\\x01\\x86\\x00\\x03\\x00\\x03'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$CONTENT": {"ttr": 15, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x007\\x01\\x02\\x14/\\x01\\x02)\\x0f\\x07%\\x00\\x11\\x00\\x0c\\x00\\x00\\xe2\\xc4\\xe2\\xc6@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-10-17T07:25:37", "lines": 17, "newlines": 12, "modlines": 0, "user": "SDSF"}, "text": "This dataset contains the SDSFEXT package.  The members are:\n\n   $CONTENT    - what you are reading\n   $DOC        - basic SDSFEXT documentation\n   CHANGES     - change history\n   SAMPJCL     - sample batch jcl\n   SAMPJCL2    - sample batch jcl - more extensive\n                 demonstrates using sdsfext in a proc and using\n                 jcl if/then/endif around its usage to extract and\n                 e-mail selected dd's if the return code if not zero.\n   SAMPPROC    - sample SDSFEXT Proc\n   SDSFEXT     - the SDSFEXT Rexx Exec\n   TESTSDSF    - jcl to test sdsf in batch\n\nIf you have problems with SDSFEXT then you should modify and run the\nTESTSDSF sample job to verify that SDSF works in batch for you.  You\nmay have problems if you have TSOAUTH active for SDSF.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$DOC": {"ttr": 19, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x04\\x01\\x02\\x14\\x0f\\x01\\x153\\x8f\\x11\\x14\\x00S\\x00C\\x00\\x00\\xe2\\xc4\\xe2\\xc6@@@@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2002-05-20T00:00:00", "modifydate": "2015-12-04T11:14:04", "lines": 83, "newlines": 67, "modlines": 0, "user": "SDSF"}, "text": "SDSFEXT\n\n    This utility is a rexx exec designed to use SDSF to extract a specific\n    DDname for every JOB in the spool that matches the specified jobname.\n    The extracted data is then placed into a pre-allocated dataset\n    referenced by a DDname in the command.\n\nSyntax:   %sdsfext jobname report-dd extract-dd ( options\n\nWhere:    jobname is a specific jobname that will be found in the JES2 SPOOL\n                  or * for the currently active job\n\n          report-dd is the DDname in the job that will be extracted\n                 or (ddname1 ddname2 ...)\n                 ddname may be a specific ddname or stepname.ddname\n                 or stepname.procstep.ddname\n                 or * for all ddname's\n\n          extract-dd is the DDname in the SDSFEXT step that references a\n                     dataset where the extracted reports will be copied.\n\n          ( is required if any options are specified\n\n          options currently supported are:\n\n          ACTIVE   - only process jobs that are currently executing.\n                     ** this can be used if using SDSFEXT as a step\n                        within a job\n                     ** set on if JOBNAME = *\n\n          DEBUG   - display sdsf options and report\n\n          INPUT   - allows selection of input data\n\nInstallation:\n\n    To install just copy the SDSFEXT member of this dataset into a library\n    in your SYSPROC or SYSEXEC concatenation.\n\nNotes:\n\n    1. No masking is allowed in the jobname or the report-dd\n    2. The jobs are sorted based on start date and processed oldest to newest\n       based on the Status (ST) display.\n    3. Only the first matching DDname is processed as the code is not in\n       place at this time to test for multiple matches.\n    4. There is no way to test for stepname at this time either\n    5. This obviously requires IBMs SDSF\n\nSample JCL:\n\n    //jobname  JOB  .....\n    //*       * ---------------------------------- *\n    //*       * Sample Batch TMP to invoke sdsfext *\n    //*       * ---------------------------------- *\n    //TSOA EXEC PGM=IKJEFT1B\n    //         PARM='%sdsfext smtp logfile log'\n    //SYSEXEC  DD DISP=SHR,DSN=hlq.sdsfext.exec\n    //SYSPRINT DD SYSOUT=*\n    //SYSTSPRT DD SYSOUT=*\n    //LOG      DD DSN=hlq.LOGFILE.LIST,DISP=(,CATLG),\n    //            UNIT=SYSDA,SPACE=(TRK,(300,300),RLSE),\n    //            DCB=(RECFM=VB,LRECL=255,BLKSIZE=23440)\n    //SYSTSIN  DD DUMMY\n    /*\n\n    In this example:\n    * The SYSEXEC references the REXX library where the SDSFEXT command\n      has been installed.\n    * The SYSPRINT and SYSTSPRT are used by the IKJEFT1B program which\n      is the TSO Batch Terminal Monitor Program (TMP)\n    * The LOG DD refers to a temporary dataset that is where the\n      extracted reports will be placed.\n    * The command is in the step execution parm.\n    * The jobname is SMTP and the Report-DD is LOGFILE with the output\n      going to the LOG DD.\n\nComments, suggestions, and complaints should be directed to the author\nat:\n\n  Lionel B. Dyck\n  e-mail: lbdyck@gmail.com\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CHANGES": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\"\\x01\\x02\\x14\\x0f\\x01\\x18\\x13\\x8f\\x10\\x18\\x00Q\\x00\\x04\\x00\\x00\\xe2\\xc4\\xe2\\xc6@@@@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2002-05-20T00:00:00", "modifydate": "2018-05-18T10:18:22", "lines": 81, "newlines": 4, "modlines": 0, "user": "SDSF"}, "text": "Change History:\n\n    Version 1.21   05/18/18 - Update from Bruce Koss\n                            - Allow wild cards in jobname (% and *)\n    Version 1.20   09/04/15 - Update from William J. Smith for SDS\n                            - Replaced two line message 'Processing\n                              jobs for' ... with a single new line\n                              that is date and time stamped separated\n                              by a blank line before and after\n                              including the jobname and JES2 job id\n                              with the message \"SDSF Extract is\n                              capturing output for\"\n                   09/01/15 - Update from William J. Smith for SDS\n                            - Version changed to 1.20 and substantial\n                              addition of inline comments above\n                            - Added BLKSIZE(27930) to ALLOC F(ISFOUT)\n                              to override default of 133 and\n                              significantly reduce EXCP I/O counts\n                   08/26/15 - Update from William J. Smith for SDS\n                            - Changed two BLKSIZE operands from 3200\n                              to 27920 on the ALLOC F(ISFIN) to reduce\n                              EXCP I/O counts\n                            - May require changes to ISFPARMS to\n                              provide needed authorization for SDSF\n                              BATCH (not REXX or JAVA!) support (Ref:\n                              Chapter 11, \"Introduction to SDSF\n                              Application Services\" in the \"Operation\n                              and Customization Guide\")\n                            - At minimum you will need authorization\n                              to execute the PREFIX, OWNER, and DA\n                              commands which may be verified by\n                              running this exec in DEBUG mode.\n                              Examine the SDSF output that can be\n                              found in the SYSTSPRT DD.  reflected in\n                              the SDSF Primary Option Menu on\n    Version 1.10   06/12/2007\n                  - Updates from Rick Turnbull\n                    - allow ddname of * for all ddnames\n\n    Version 1.09   06/10/2004\n                  - Updates from Billy Smith\n                    - insert TOP command after Filter Procstep\n\n    Version 1.08   05/04/2004\n                  - Updates from Daryl Johnson\n                    - use mvsvar for jobname\n                    - change test for NP in SDSF output\n\n    Version 1.07   03/17/2004\n                   - Add input option to allow extract of input data\n\n    Version 1.06   10/02/2003\n                   - Correction for FILTER STEPNAME thanks to Rick Turnbull\n\n    Version 1.05   11/02/2002\n                   - Correction for jobname * to set active on\n\n    Version 1.04   10/18/2002\n                   - Change to call sdsf instead of isfafd\n\n    Version 1.03   10/17/2002\n                   - support procstep specification\n                   - if jobname = * then default active to on\n                   - change from using PT to X for extract to a file\n\n    Version 1.02   10/15/2002\n                   - add option for current jobname\n                   - support multiple ddnames\n                   - allow stepname.ddname\n\n    Version 1.01   08/27/2002\n                   - add jobnum option\n\n    Version 1.00   05/21/2002\n                   - cleanup and add version to code\n\n    Version 0.2    05/20/2002\n                   - rewrite of job selection\n\n    Version 0.1    05/20/2002\n                   - creation of this exec\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SAMPJCL": {"ttr": 11, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x005\\x01\\x02\\x14\\x0f\\x01\\x02\\x14O\\x07T\\x000\\x00$\\x00\\x00\\xe2\\xc4\\xe2\\xc6@@@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2002-05-20T00:00:00", "modifydate": "2002-05-24T07:54:35", "lines": 48, "newlines": 36, "modlines": 0, "user": "SDSF"}, "text": "//jobname  JOB  .....\n//*       * ----------------------------------------------------- *\n//*       * This sample job will extract the SMTP LOGFILE into a  *\n//*       * temporary dataset which will then be processed by the *\n//*       * SMTPSTAT exec (part of the XMITIP package) and the    *\n//*       * generated report will then be e-mailed using XMITIP.  *\n//*       *                                                       *\n//*       * This is only an example.                              *\n//*       * ----------------------------------------------------- *\n//TSOA EXEC PGM=IKJEFT1B\n//SYSEXEC  DD DISP=SHR,DSN=hlq.sdsfext.exec\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD SYSOUT=*\n//LOG      DD DSN=hlq.LOGFILE.LIST,DISP=(,CATLG),\n//            UNIT=SYSDA,SPACE=(TRK,(300,300),RLSE),\n//            DCB=(RECFM=VB,LRECL=255,BLKSIZE=23440)\n//SYSTSIN  DD *\n%sdsfext smtp logfile log\n//*       * --------------------------------------------- *\n//*       * Sample post processor using the smtpstat tool *\n//*       * --------------------------------------------- *\n//TSOB EXEC PGM=IKJEFT1B\n//SYSEXEC  DD DISP=SHR,DSN=hlq.sdsfext.exec\n//SYSPRINT DD SYSOUT=*\n//SYSTSPRT DD DISP=(,PASS),UNIT=SYSDA,SPACE=(TRK,(1,1)),DSN=&&STATS,\n//   DCB=(RECFM=VBA,LRECL=133,BLKSIZE=0)\n//CSV      DD DISP=(,PASS),UNIT=SYSDA,SPACE=(TRK,(1,1)),DSN=&&CSV,\n//   DCB=(RECFM=VB,LRECL=255,BLKSIZE=25504)\n//SYSTSIN  DD *\n%SMTPSTAT LOGFILE.LIST DD:CSV\nDELETE LOGFILE.LIST\n//*       * ------------------------------------------------ *\n//*       * Sample step showing how to use XMITIP to mail it *\n//*       * ------------------------------------------------ *\n//TSOB2    EXEC PGM=IKJEFT1B\n//SYSEXEC  DD  DISP=SHR,DSN=hlq.sdsfext.exec\n//SYSPRINT DD  SYSOUT=*\n//SYSTSPRT DD  SYSOUT=*\n//STATS    DD  DISP=(OLD,DELETE),DSN=&&STATS\n//CSV      DD  DISP=(OLD,DELETE),DSN=&&CSV\n//SYSTSIN  DD  *\n%xmitip user.name@samp.com +\n   from send.name@samp.com +\n   subject 'SMTP Statistics &date from &sysid' +\n   nomsg +\n   filedd (stats csv) +\n   format (rtf csv) +\n   filename (smtpstat.rtf smtpstat.csv)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SAMPJCL2": {"ttr": 13, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x18\\x01\\x02(\\x8f\\x01\\x02)\\x0f\\x07$\\x00\\x1e\\x00\\x1a\\x00\\x00\\xe2\\xc4\\xe2\\xc6@@@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2002-10-15T00:00:00", "modifydate": "2002-10-17T07:24:18", "lines": 30, "newlines": 26, "modlines": 0, "user": "SDSF"}, "text": "//JOBNAME  JOB   .....,NOTIFY=&SYSUID,\n//         MSGLEVEL=(1,1),MSGCLASS=X\n//* ----------------------------------------------------------------- *\n//*       CHANGE SDSFEXT.PROC.LIBRARY TO THE LIBRARY WHERE THE\n//*       SDSFEXT PROC IS TO BE FOUND\n//JCL     JCLLIB ORDER=(SDSFEXT.PROC.LIBRARY)\n//* ----------------------------------------------------------------- *\n//HLIST   EXEC PGM=IEHLIST\n//SYSPRINT DD SYSOUT=*\n//SYSIN    DD *\n LISTVTOC VOL=3390=XXXXXX\n/*\n//TEST1 IF (HLIST.RC > 0 ) THEN\n//SDSFEXT1 EXEC SDSFEXT,\n//             DDNAME='(JESJCL JESMSGLG JESYSMSG HLIST.SYSPRINT)',\n//             OUTDD=OUT\n//OUT      DD  DISP=(MOD,PASS),UNIT=SYSDA,SPACE=(TRK,(15,15)),\n//          DSN=&&OUT\n//*****************************************\n//TSOB     EXEC PGM=IKJEFT1B,\n//SYSEXEC  DD  DISP=SHR,DSN=YOUR.EXEC.LIBRARY\n//SYSPRINT DD  SYSOUT=*\n//SYSTSPRT DD  SYSOUT=*\n//SYSTSIN  DD  *\n%XMITIP YOUR.MAIL@ADDRESS SUBJECT 'SAMPLE SDSFEXT REPORT' +\n   FILEDD OUT NOMSG +\n   FROM YOUR.MAIL@ADDRESS +\n   FORMAT RTF/LAND\n//OUT      DD  DISP=(OLD,DELETE),DSN=&&OUT\n//         ENDIF\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAMPPROC": {"ttr": 17, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01\\x02)\\x0f\\x01\\x04\\x07\\x7f\\x13Y\\x00\\x15\\x00\\x14\\x00\\x00\\xe2\\xc4\\xe2\\xc6@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-10-17T00:00:00", "modifydate": "2004-03-17T13:59:13", "lines": 21, "newlines": 20, "modlines": 0, "user": "SDSF"}, "text": "//SDSFEXT  PROC DEBUG=,JOBNAME='*',ACTIVE=,INPUT=\n//* -------------------------------------------------------- *\n//* SDSF EXTRACT PROC TO EXTRACT A SPECIFIC DDNAME FROM THE  *\n//* JES2 SPOOL TO A SPECIFIED OUTPUT DD FOR THE ACTIVE JOB.  *\n//*                                                          *\n//* SYMBOLICS ARE:                                           *\n//*    ACTIVE  IS ACTIVE IF USING JOBNAME OF *               *\n//*    DDNAME  IS THE DDNAME TO SELECT                       *\n//*    DEBUG   IS TO ENABLE DIAGNOSTIC INFORMATION           *\n//*    INPUT   ENABLES ACCESS TO INPUT DATA                  *\n//*    JOBNAME IS THE NAME OF THE JOB TO SELECT OR * FOR     *\n//*            THE CURRENT (ACTIVE JOBNAME)                  *\n//*    OUTDD   IS THE OUTPUT DD DD THAT THE USER PROVIDES    *\n//* -------------------------------------------------------- *\n//TSOB    EXEC PGM=IKJEFT1B,\n//  PARM='%SDSFEXT &JOBNAME &DDNAME &OUTDD (&ACTIVE &DEBUG &INPUT'\n//SYSEXEC  DD  DISP=SHR,DSN=SYSLBD.LIONEL.EXEC\n//SYSPRINT DD  SYSOUT=*\n//SYSTSPRT DD  SYSOUT=*\n//SYSTSIN  DD  DUMMY\n//         PEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SDSFEXT": {"ttr": 513, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00A\\x01\\x02(\\x8f\\x01\\x18\\x13\\x8f\\x10\\x17\\x01\\xa4\\x00\\xf3\\x00\\x00\\xe2\\xc4\\xe2\\xc6@@@@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "2002-10-15T00:00:00", "modifydate": "2018-05-18T10:17:41", "lines": 420, "newlines": 243, "modlines": 0, "user": "SDSF"}, "text": "/*%NOCOMMENT====================* REXX *==============================*/\n  ver = \"1.21\"\n/* Name:     SDSF Extract                                            *\n*                                                                    *\n* Function:  A generalized SDSF extraction process that will         *\n*            extract a specific ddname for all matching jobs         *\n*            that are in the JES2 SPOOL. The extraction is           *\n*            performed to a preallocated data set referenced         *\n*            by a DD statement in the batch terminal monitor         *\n*            program.                                                *\n*                                                                    *\n* Syntax:    %sdsfext jobname ddname outdd jobnum (options           *\n*                                                                    *\n*            Where:                                                  *\n*                                                                    *\n*            jobname is the name of the job to extract               *\n*                    or * for the current jobname                    *\n*                    if * then active is set on                      *\n*                    support wild cards (% and *) in jobname         *\n*                                                                    *\n*            ddname is the ddname to be extracted                    *\n*            or                                                      *\n*            (ddname1 ddname2 ...)                                   *\n*            or                                                      *\n*            * for all ddnames                                       *\n*                                                                    *\n*            ddname may be coded as stepname.ddname where            *\n*                stepname is the jcl stepname not the step           *\n*                found in a proc.                                    *\n*                or stepname.procstep.ddname                         *\n*                                                                    *\n*            outdd is the ddname where the extracted data is         *\n*                to be directed                                      *\n*                                                                    *\n*            jobnum is the job number for the desired job            *\n*                                                                    *\n*            ( is required if any options are specified              *\n*                                                                    *\n*            options currently supported are:                        *\n*                                                                    *\n*            ACTIVE   - only process jobs that are currently         *\n*                       executing.                                   *\n*                     - set on if jobname is *                       *\n*                                                                    *\n*            DEBUG    - will echo the generated SDSF cmds            *\n*                                                                    *\n*            INPUT    - will allow selection of input data           *\n*                                                                    *\n* Example:   %sdsfext smtp logfile report                            *\n*                                                                    *\n*            This will extract the ddname LOGFILE for each           *\n*            occurrence of the job SMTP in the spool with the        *\n*            output going to preallocated DD REPORT.                 *\n*                                                                    *\n* ------------------------------------------------------------------ *\n*                                                                    *\n* Sample Test Case/JCL                                               *\n* --------------------                                               *\n*                                                                    *\n* Additional debugging/processing overrides                          *\n* -----------------------------------------                          *\n* Append DEBUG=DEBUG to the EXEC statement below to initiate the     *\n* debugging mode.                                                    *\n*    DEBUG=DEBUG                                                     *\n*                                                                    *\n* Optional DDNAME parameter override                                 *\n*    DDNAME='(JESJCL JESMSGLG JESYSMSG *)',                          *\n*                                                                    *\n* -----                                                              *\n*                                                                    *\n* //SDSFEXTR JOB (0),'SDSF Output Extract ',CLASS=A,MSGCLASS=X,      *\n* //     NOTIFY=&SYSUID                                              *\n* //SDSFEXT  PROC JOBNAME='*',DDNAME='(*)',ACTIVE=,DEBUG=,INPUT=OFF  *\n* //TSOB     EXEC PGM=IKJEFT1B,                                      *\n* // PARM='%SDSFEXT &JOBNAME &DDNAME &OUTDD (&ACTIVE &DEBUG &INPUT'  *\n* //SYSEXEC   DD  DISP=SHR,DSN=BWJS1.CLIST                           *\n* //SYSTSPRT  DD  SYSOUT=*                                           *\n* //SYSTSIN   DD  DUMMY                                              *\n* //         PEND                                                    *\n* //COPY     EXEC PGM=IEBCOPY                                        *\n* //SYSPRINT  DD  SYSOUT=*                                           *\n* //IN        DD  DISP=SHR,DSN=BWJS1.CLIST                           *\n* //SYSIN     DD  *                                                  *\n*   C I=IN,O=IN                                                      *\n* //EXTRACT  EXEC SDSFEXT,OUTDD=OUT                                  *\n* //OUT       DD  UNIT=3390,SPACE=(TRK,(15,15)),  (PDSE recommended) *\n* //     DSN=BWJS1.SDSF.EXTRACT,                                     *\n* //     DCB=(RECFM=VBA,LRECL=240,BLKSIZE=27840),                    *\n* //     DISP=(MOD,CATLG,KEEP)                                       *\n*                                                                    *\n* ------------------------------------------------------------------ *\n*                                                                    *\n* Sample Output found in SYSTSPRT                                    *\n* -------------------------------                                    *\n*                                                                    *\n* Processing Jobs for SDSFEXTR                                       *\n*                     JOB09848                                       *\n*  >>>  PRE SDSFEXTR                                                 *\n*  >>>  OWNER                                                        *\n*  >>>  DA                                                           *\n*  >>>  PT FILE OUT                                                  *\n*  >>>  SORT OFF                                                     *\n*  >>>  Set Display On                                               *\n*  >>>  SELECT SDSFEXTR JOB09848                                     *\n*  >>>  FIND SDSFEXTR                                                *\n*  >>>  ++X                                                          *\n*  >>>  PT CLOSE                                                     *\n*                                                                    *\n* 1 HQX7790 -----------------  SDSF PRIMARY OPTION MENU  ----------- *\n*   COMMAND INPUT ===>                                            SC *\n*                                                                    *\n*   DA    Active users                      INIT  Initiators         *\n*   I     Input queue                       PR    Printers           *\n*   O     Output queue                      PUN   Punches            *\n*   H     Held output queue                 RDR   Readers            *\n*   ST    Status of jobs                    LINE  Lines              *\n*                                           NODE  Nodes              *\n*   LOG   System log                        SO    Spool offload      *\n*   SR    System requests                   SP    Spool volumes      *\n*   MAS   Members in the MAS                NS    Network servers    *\n*   JC    Job classes                       NC    Network connection *\n*   SE    Scheduling environments                                    *\n*   RES   WLM resources                     RM    Resource monitor   *\n*   ENC   Enclaves                          CK    Health checker     *\n*   PS    Processes                                                  *\n*                                           ULOG  User session log   *\n*   END   Exit SDSF                                                  *\n*                                                                    *\n* ------------------------------------------------------------------ *\n*                                                                    *\n* You should NOT see. . . in the DEBUG mode SYSTSPRT output . . .    *\n*                                                                    *\n* HQX7790 ----  SDSF PRIMARY OPTION MENU     COMMAND NOT AUTHORIZED  *\n*                                                                    *\n* If you do see the above error, update ISFPARMS to grant batch      *\n* authority to the SDSF user.  Use the WHO command to view the SDSF  *\n* group in which the EXEC is executing in batch.                     *\n*                                                                    *\n* ------------------------------------------------------------------ *\n*                                                                    *\n* Author:    Lionel B. Dyck                                          *\n*            Internet: lbdyck@gmail.com                              *\n*                                                                    *\n* History:                                                           *\n*    @A1     05/18/18 - Update from Bruce Koss                       *\n*                     - Allow wild cards in jobname (% and *)        *\n*            09/04/15 - Update from William J. Smith for SDS         *\n*                     - Replaced two line message 'Processing jobs   *\n*                       for' ... with a single new line that is      *\n*                       date and time stamped separated by a blank   *\n*                       line before and after including the jobname  *\n*                       and JES2 job id with the message \"SDSF       *\n*                       Extract is capturing output for\"             *\n*            09/01/15 - Update from William J. Smith for SDS         *\n*                     - Version changed to 1.20 and substantial      *\n*                       addition of inline comments above            *\n*                     - Added BLKSIZE(27930) to ALLOC F(ISFOUT) to   *\n*                       override default of 133 and significantly    *\n*                       reduce EXCP I/O counts                       *\n*            08/26/15 - Update from William J. Smith for SDS         *\n*                     - Changed two BLKSIZE operands from 3200 to    *\n*                       27920 on the ALLOC F(ISFIN) to reduce EXCP   *\n*                       I/O counts                                   *\n*                     - May require changes to ISFPARMS to provide   *\n*                       needed authorization for SDSF BATCH (not     *\n*                       REXX or JAVA!) support (Ref: Chapter 11,     *\n*                       \"Introduction to SDSF Application Services\"  *\n*                       in the \"Operation and Customization Guide\")  *\n*                     - At minimum you will need authorization to    *\n*                       execute the PREFIX, OWNER, and DA commands   *\n*                       which may be verified by running this exec   *\n*                       in DEBUG mode.  Examine the SDSF output that *\n*                       can be found in the SYSTSPRT DD.             *\n*                       reflected in the SDSF Primary Option Menu on *\n*            06/12/04 - Update from Rick Turnbull to capture         *\n*                       all ddnames                                  *\n*            06/10/04 - Update from Billy Smith                      *\n*                     - add TOP command after Filter Procstep        *\n*            05/04/04 - Updates from Daryl Johnson                   *\n*                     - use mvsvar for jobname                       *\n*                     - change test for NP in SDSF output            *\n*            03/17/04 - Add INPUT option                             *\n*            10/02/03 - Corrections thanks to Rick Turnbull          *\n*                       when filtering for stepname                  *\n*            11/02/02 - correct jobname * for active                 *\n*            10/18/02 - add set display on (for debug)               *\n*            10/17/02 - change to use X instead of PT                *\n*                     - support procstep                             *\n*            10/15/02 - allow multiple ddnames and stepname          *\n*                     - change from sdsf to isfafd                   *\n*                     - add debug option                             *\n*            10/13/02 - allow jobname of * for current job           *\n*            08/27/02 - add jobnum option thanks to                  *\n*                       Pedro Cunha                                  *\n*            05/22/02 - add ACTIVE option                            *\n*            05/21/02 - add test for no matches                      *\n*            05/20/02 - creation                                     *\n*                                                                    *\n* ------------------------------------------------------------------ */\n  arg input\n\n /* ---------------------------- *\n  * validate the first parameter *\n  * ---------------------------- */\n  If words(input) < 3 then Do\n     Say \"Error: Invalid syntax.  A jobname, ddname, and outdd\",\n         \"are required.\"\n     Say \"Try again......\"\n     Exit 8\n     End\n\n /* ------------------------------- *\n  * Now parse out the input options *\n  * ------------------------------- */\n  parse value input with jobname more\n  If left(more,1) <> \"(\" then\n     parse value more with ddname outdd jobnum \"(\" options\n  Else\n     parse value more with \"(\"ddname\")\" outdd jobnum \"(\" options\n\n /* -------------------------------------------- *\n  * Test if jobname is * and get current jobname *\n  * -------------------------------------------- */\n  IF JOBNAME = \"*\" THEN DO\n     JOBNAME = MVSVAR('SYMDEF','JOBNAME')\n     IF POS(\"ACTIVE\",OPTIONS) = 0 THEN\n        OPTIONS = OPTIONS \"ACTIVE\"\n     END\n\n /* -------------------------------- *\n  * Set Defaults                     *\n  * -------------------------------- */\n  parse value \"\" with null active stepname debug input\n  call msg 'off'\n\n /* ------------------- *\n  * Process any options *\n  * ------------------- */\n  If length(options) > 0 then Do\n     If wordpos(\"ACTIVE\",options) > 0 then active = 1\n     If wordpos(\"DEBUG\",options)  > 0 then debug  = 1\n     If wordpos(\"INPUT\",options)  > 0 then input  = 1\n     End\n\n /* ---------------------------------------------------------- *\n  * First find all jobs that match the provided jobname. Build *\n  * a list of jobid's.                                         *\n  * ---------------------------------------------------------- */\n  out.1 = \"PRE\" jobname\n  out.2 = \"OWNER\"\n  If active = 1 then\n     out.3 = \"DA\"\n  Else\n     out.3 = \"ST\"\n  out.0 = 3\n  If active <> 1 then Do\n     out.4 = \"sort st-date a\"\n     out.0 = 4\n   End\n  \"Alloc f(isfin) new spa(1,1) tr\" ,\n        \"recfm(f b) lrecl(80) blksize(27920) reuse\"\n  \"Execio * diskw isfin (Finis stem out.\"\n  If debug <> null then Do\n     Say ' >>> Job selection processing'\n     Do ix = 1 to out.0\n        Say ' >>> ' out.ix\n        End\n        Say ' '\n     End\n  call do_sdsf\n  call get_jobids\n\n /* ------------------------------ *\n  * Test for any jobs that matched *\n  * ------------------------------ */\n  If length(jobs) = 0 then Do\n     Say \"No matching jobs for\" jobname\n     Say \"Exiting....\"\n     Exit 8\n     End\n\n /* --------------------------------------- *\n  * Now for each job get the DD and extract *\n  * --------------------------------------- */\n  out.1 = \"PRE\" jobname\n  out.2 = \"OWNER\"\n  If active = 1 then\n     out.3 = \"DA\"\n  Else\n     out.3 = \"ST\"\n  out.4 = \"PT FILE\" outdd\n  out.5 = \"SORT OFF\"\n  out.6 = \"Set Display On\"\n  oc = 6\n  If input = 1 then Do\n     oc = oc + 1\n     out.oc = \"Input On\"\n     End\n\n  Do j = 1 to words(jobs)\n     jid = word(jobs,j)\n\n     jobname = word(jobnames,j)                               /* @A1 */\n     Say \" \"\n     datetime = date(U) time('C')\n     Say datetime \"SDSF Extract is capturing output for\" jobname jid\n     Say \" \"\n     oc = oc + 1\n     out.oc = \"SELECT\" jobname jid\n     oc = oc + 1\n     out.oc = \"FIND\" jobname\n     If (ddname = \"*\") then Do  /* StateAuto Modification */\n         oc = oc + 1            /* StateAuto Modification */\n         out.oc = \"++X\"         /* StateAuto Modification */\n         End                    /* StateAuto Modification */\n     Else Do                    /* StateAuto Modification */\n     oc = oc + 1\n     out.oc = \"++?\"\n      Do ddw = 1 to words(ddname)\n         If pos(\".\",word(ddname,ddw)) > 0 then Do\n           parse value word(ddname,ddw) with stepname\".\"sddname\n           oc = oc + 1\n           out.oc = \"FILTER STEPNAME\" stepname\n           If pos(\".\",sddname) = 0 then procstep = null\n              Else parse value sddname with procstep\".\"sddname\n           If procstep <> null then Do\n              oc = oc + 1\n              out.oc = \"FILTER PROCSTEP\" procstep\n              End\n           oc = oc + 1\n           out.oc = \"TOP\"\n           oc = oc + 1\n           out.oc = \"FIND\" sddname\n           End\n         Else Do\n             oc = oc + 1\n             out.oc = \"FIND\" word(ddname,ddw)\n             End\n         oc = oc + 1\n         out.oc = \"++X\"\n         If stepname <> null then Do\n            oc = oc + 1\n            out.oc  = \"FILTER OFF\"\n            stepname = null\n            End\n         End\n      oc = oc + 1\n      If active = 1 then\n         out.oc = \"DA\"\n      Else\n         out.oc = \"ST\"\n      End\n   End\n   oc = oc + 1\n   out.oc = \"PT CLOSE\"\n   \"Alloc f(isfin) new spa(1,1) tr\" ,\n         \"recfm(f b) lrecl(80) blksize(27920) reuse\"\n   \"Execio * diskw isfin (Finis stem out.\"\n   If debug <> null then Do\n      Do ix = 1 to oc\n         Say ' >>> ' out.ix\n         End\n         Say ' '\n      End\n   call do_sdsf\n   Exit\n\n  /* ---------------------- *\n   * Get job id information *\n   * ---------------------- */\n   Get_JobIDs:\n   hit = 0\n   jobs = null\n   Do i = 1 to sdsf.0\n      If left(sdsf.i,1) = \"1\" then hit = 0\n      sdsf.i = translate(sdsf.i,' ',x2c(06))\n      If active = null then\n         If pos(\"SDSF STATUS DISPLAY\",sdsf.i) > 0 then\n            hit = 1\n      If active = 1 then\n         If pos(\"SDSF DA\",sdsf.i) > 0 then\n            hit = 1\n      If hit = 0 then iterate\n      If pos(\" NP\",sdsf.i) > 0 then Do\n         hit = 2\n         jobpos = pos(\"JOBNAME\",sdsf.i)\n         idpos  = pos(\"JOBID\",translate(sdsf.i))\n         iterate\n         End\n      If hit = 1 then iterate\n      If substr(sdsf.i,jobpos,1) = \" \" then iterate\n      sdsfjob = strip(substr(sdsf.i,jobpos,8))\n   /* If sdsfjob = jobname then Do */                         /* @A1 */\n         seljobnm = strip(substr(sdsf.i,jobpos,8))            /* @A1 */\n         jobnames = seljobnm jobnames                         /* @A1 */\n         seljobid = strip(substr(sdsf.i,idpos,8))\n         If pos(seljobid,jobs) = 0 then\n         If jobnum = null then\n            jobs = strip(seljobid jobs)\n         Else If jobnum = seljobid\n                 then jobs = jobnum\n         End\n   /* End */                                                 /* @A1 */\n    Return\n\n/* ------------------------------ *\n * Call SDSF and Read the Results *\n * ------------------------------ */\n Do_SDSF:\n \"Alloc f(isfout) new spa(15,15) tr reuse blksize(27930)\"\n Address Linkmvs \"sdsf\"\n x_rc = rc\n \"Execio * diskr isfout (finis stem sdsf.\"\n \"Free f(isfin isfout) delete\"\n If x_rc > 0 then Say \">>>>>>>>>> SDSF RC:\" x_rc\n If debug <> null then\n    Do ix = 1 to sdsf.0\n       Say strip(sdsf.ix,'t')\n       End\n Return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TESTSDSF": {"ttr": 9, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x04\\x01\\x02\\x14/\\x01\\x02\\x14/\\x07\\x06\\x00\\x1a\\x00\\x1a\\x00\\x00\\xe2\\xc4\\xe2\\xc6@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-22T00:00:00", "modifydate": "2002-05-22T07:06:04", "lines": 26, "newlines": 26, "modlines": 0, "user": "SDSF"}, "text": "//JOBNAME  JOB   .....,NOTIFY=&SYSUID,\n//         MSGLEVEL=(1,1),MSGCLASS=X\n//* ----------------------------------------------------------------- *\n//*                                                                   *\n//* CHANGE JOBNAME TO YOUR JOBNAME AND FIXUP THE JOBCARD              *\n//* CHANGE SOME.DATASET TO A REAL SEQUENTIAL DATASET (OR PDS MEMBER)  *\n//*                                                                   *\n//* ----------------------------------------------------------------- *\n//GENER    EXEC PGM=IEBGENER\n//SYSPRINT DD  SYSOUT=*\n//SYSUT1   DD  DISP=SHR,DSN=SOME.DATASET\n//SYSUT2   DD  SYSOUT=*\n//SYSIN    DD  DUMMY\n//****\n//SDSFBTCH EXEC PGM=SDSF\n//ISFOUT   DD  DUMMY\n//LOGFILE  DD  SYSOUT=*\n//ISFIN    DD  *\nPRE JOBNAME\nOWNER\nST\nFIND JOBNAME\n++S\nPRINT FILE LOGFILE\nPRINT\nPRINT CLOSE\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT313/CBT.V500.FILE313.PDS/SDSFEXT.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT313/CBT.V500.FILE313.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}