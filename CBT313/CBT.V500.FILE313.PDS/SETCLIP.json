{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SLBD", "INMTNODE": "X", "INMTUID": "Y", "INMFTIME": "20190207123914000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 235144, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 32720, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "SLBD.SETCLIP.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 235144, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"SLBD.SETCLIP.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 32720, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 128, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 10017, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "190038", "DS1SCEXT": "b'\\x80\\x7f\\xd0'", "DS1SCALO": "b'P\\x00\\x00\\x03'", "DS1LSTAR": "b'\\x00\\x03\\x04'", "DS1TRBAL": "b'\\x94\\xc0'"}, "COPYR2": {"deb": "b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\r \\x00\\x04y\\xa0\\xc8'", "extents": ["b'\\x02\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\r \\x00\\x04y\\xa0\\xc8'", "b'X\\xfa\\xf0p\\x00\\x00\\x04\\x83\\x00\\x00\\x04\\x83\\x00\\x06\\x00\\x07'", "b'X\\xfa\\xf0p\\x00\\x00\\x15\\xc0\\x00\\x08\\x15\\xc0\\x00\\x08\\x00\\x01'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$DOC": {"ttr": 265, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00#\\x01\\x16%\\x8f\\x01\\x16)O\\x13Y\\x008\\x00\\x1a\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2016-09-14T00:00:00", "modifydate": "2016-10-20T13:59:23", "lines": 56, "newlines": 26, "modlines": 0, "user": "SETCLIP"}, "text": "SETCLIP\n\nSetClip consists of 3 REXX Exec's and 2 ISPF Panels.\n\n   Members: $DOC     - this member\n            $USERDOC - doc to help the end user\n            LICENSE  - GPL License\n            SETCLIP  - primary rexx exec\n            SETCLIPM - rexx ispf edit macro\n            SETCLIPP - ispf panel\n            SETCLIPH - ispf tutorial panel\n            SETCLIPX - rexx exec for testing SETCLIP\n                       Thanks to John Kalinich\n            SETZSTRT - rexx called by SETCLIP when the SET command is used\n                       - Updates the ZSTART ISPF Profile Variable\n            SUPPORT  - Statement of Support\n\nSetClip will perform two functions depending on how it is invoked.\n\nSyntax:  %setclip option\n\nWhere option is:   blank     invokes the ISPF Dialog to define and setup\n                             the user clipboards\n                   non-blank to just setup the clipboards\n\nWhen the option is blank an ISPF panel (setclipp) is displayed that\nallows the user to define up to 10 (the IBM limit) Edit clipboards.\n\nThe panel requests both a clipboard name and the dataset, or dataset(member),\nthat contains the text that will be copied into the clipboard. If the start\nand/or ending row numbers are not specified then all records will be copied\ninto the clipboard.\n\nWhen ENTER is pressed the clipboard definitions will be saved and the user\nclipboards will be updated or created.\n\nThe CANCEL command can be used to exit without saving updates.\n\nPF3 exits the dialog and will create, or update, the clipboards if\nchanges have been made.\n\nWhen the option is non-blank then the ISPF profile variables are read\nand the clipboards created. This is to enable the ability to\nautomatically create the clipboards when ISPF Starts using the ZSTART\nISPF variable.  Use the SET command within this dialog to set, or update,\nthe ZSTART variable.\n\n          To have the clipboards created every time ISPF\n          starts update the ISPF Profile variable ZSTART to\n          add:  tso %setclip x\n\nRecommendation: Use the EDSET ISPF Edit command to verify that the CUT\noperation defaults to REPLACE and PASTE defaults to KEEP.\n\nThen exit ISPF and restart ISPF. Open ISPF Edit on a dataset and use the\nCUT DISplay command to view the created clipboards.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$USERDOC": {"ttr": 263, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x009\\x01\\x16&\\x0f\\x01\\x16)O\\x13W\\x00/\\x00+\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2016-09-16T00:00:00", "modifydate": "2016-10-20T13:57:39", "lines": 47, "newlines": 43, "modlines": 0, "user": "SETCLIP"}, "text": "SETCLIP is an ISPF dialog that makes it easy for a user to create from\none to ten (the ISPF max) ISPF Edit Clipboards from existing datasets\nfor use during the ISPF session.\n\nThe dialog has two modes that are determined by how the command is\ncalled.\n\nMode 1:  Define, or update, user clipboards\n\nThis mode is enabled when the SETCLIP command is invoked without any\nparameters and will display an ISPF panel on which the user enters:\n\n   - Clipboard Name\n   - Dataset Name where the clipboard data resides\n   - Optional Starting and/or Ending records to be copied into the\n     clipboard\n\nThe row option is either B (Browse), E (Edit), or D (Delete).\n\nThe Clipboard name is a 1 to 8 character name that must follow the\nstandard PDS member naming convention.\n\nThe Dataset name is the dataset, or dataset member, where the data is\nlocated to be copied into the clipboard.\n\nThe starting and ending record numbers are optional. If not specified\nthen all records are copied into the clipboard.\n\nUsage note:  By using the starting and ending record numbers the user\ncan have one dataset with data for multiple clipboards in it.\n\nWhen the clipboards are defined the ENTER key will create, or update,\nthe active clipboards. PF3 will update and then exit if changes have\nbeen make, while CANCEL will exit without making any updates.\n\nMode 2: Create clipboards only\n\nThis mode is enabled when the SETCLIP command is invoked with any\nnon-blank parameter and will process the defined clipboard information\nto create the clipboards.\n\nThis mode is designed to be used out of the ISPF ZSTART process that\nruns when ISPF starts so that the clipboards are available for any\nISPF Edit session during the current ISPF session. Use the SET command\nwithin this dialog for a simple way to create or update the ZSTART\nvariable.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "LICENSE": {"ttr": 9, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x16\\x16/\\x01\\x16\\x16/\\x13R\\x02\\xa2\\x02\\xa2\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2016-06-10T00:00:00", "modifydate": "2016-06-10T13:52:15", "lines": 674, "newlines": 674, "modlines": 0, "user": "SETCLIP"}, "text": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SETCLIP": {"ttr": 517, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x018\\x00\\x15\\x01\\x16%\\x7f\\x01\\x17\\x11_\\x14\\x08\\x02\\x16\\x00*\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.56", "flags": 0, "createdate": "2016-09-13T00:00:00", "modifydate": "2017-04-25T14:08:15", "lines": 534, "newlines": 42, "modlines": 0, "user": "SETCLIP"}, "text": "/* --------------------  rexx procedure  -------------------- *\n * Name:      SetClip                                         *\n *                                                            *\n * Function:  Setup my Clipboards                             *\n *                                                            *\n *            Dual purpose depending on the parm option       *\n *                                                            *\n * Syntax:    %setclip option                                 *\n *                                                            *\n *            options:                                        *\n *                                                            *\n *            blank = ispf dialog to manage                   *\n *            non-blank = set                                 *\n *                                                            *\n * Dependencies:   setclipm edit macro                        *\n *                 setclipp ispf panel                        *\n *                 Must be under applid of SCLP               *\n *                                                            *\n * Notes:     use CUT DISplay to view clipboards              *\n *            use Paste clipboard to paste into edit text     *\n *                                                            *\n *            Each time the Enter key is used all defined     *\n *            clipboards will be created or updated.          *\n *                                                            *\n *            If Enter is not used then PF3 will create or    *\n *            update the defined clipboards.                  *\n *                                                            *\n * Author:    Lionel B. Dyck                                  *\n *                                                            *\n * Dependencies:  The SETZSTRT exec (included in this package)*\n *                                                            *\n * History:                                                   *\n *            04/25/17 - Change Edit to View for Clipboard    *\n *                       copy                                 *\n *            10/21/16 - Clean up SET messages                *\n *            10/20/16 - Add SET command to update ZSTART     *\n *                       ISPF Profile variable by calling     *\n *                       SETZSTRT exec.                       *\n *            09/22/16 - Update check for changes             *\n *            09/21/16 - Reset Counter                        *\n *                     - change to use msg isrz002 so the     *\n *                       tutorial panel can be defined        *\n *            09/20/16 - Clean up to prevent duplicate update *\n *                       on exit                              *\n *            09/19/16 - Add test for X and NX (not allowed)  *\n *                     - additional cleanup/checking          *\n *                     - sort the clipboard list              *\n *                     - Add Browse and Edit options          *\n *            09/16/16 - Make sure PF3 updates before leaving *\n *                     - remove update message if option      *\n *                       not blank                            *\n *                     - If clipboard name but no dsname balk *\n *            09/15/16 - Add start and ending rows to cut     *\n *                     - add cancel command                   *\n *            09/14/16 - Major rewrite to include panel to    *\n *                       define the clipboards                *\n *            09/13/16 - Creation                             *\n *                                                            *\n * ---------------------------------------------------------- *\n * Support is on a best effort and time available basis which *\n * is why the complete source is provided for this application*\n * so you can find and fix any issues you find. Please let    *\n * me know if you do make changes/enhancements/fixes.         *\n * ---------------------------------------------------------- *\n * License:   This EXEC and related components are released   *\n *            under terms of the GPLV3 License. Please        *\n *            refer to the LICENSE file for more information. *\n *            Or for the latest license text go to:           *\n *                                                            *\n *              http://www.gnu.org/licenses/                  *\n * ---------------------------------------------------------- */\n\n arg option\n\n/* -------------------------------------------------- *\n * Test for the SCLP ISPF Applid and if not then      *\n * - re-invoke ourselves with NewAppl(SCLP)           *\n * - upon return then exit                            *\n * -------------------------------------------------- */\n Address ISPExec\n \"Vget (Zapplid)\"\n \"Control Errors Return\"\n if zapplid <> \"SCLP\" then do\n     \"Select CMD(%\"sysvar('sysicmd') option \") Newappl(SCLP)\" ,\n         \"Passlib\"\n    exit 0\n    end\n\n/* --------------- *\n | Define defaults |\n * --------------- */\n parse value '' with null cns cds\n count   = 0\n changed = 1\n zerrhm   = 'SETCLIPH'\n zerralrm = 'NO'\n\n/* ------------------------- *\n | Define addressing to ISPF |\n | and get the variables     |\n * ------------------------- */\n Address ISPExec\n 'vget (cn1 cn2 cn3 cn4 cn5 cn6 cn7 cn8 cn9 cna' ,\n       'cd1 cd2 cd3 cd4 cd5 cd6 cd7 cd8 cd9 cda' ,\n       'f1 f2 f3 f4 f5 f6 f7 f8 f9 fa' ,\n       'l1 l2 l3 l4 l5 l6 l7 l8 l9 la' ,\n       ') profile'\n\n/* --------------------------------- *\n | Save in hold as check for changes |\n * --------------------------------- */\n hold = cn1 cn2 cn3 cn4 cn5 cn6 cn7 cn8 cn9 cna  ,\n       cd1 cd2 cd3 cd4 cd5 cd6 cd7 cd8 cd9 cda  ,\n       f1 f2 f3 f4 f5 f6 f7 f8 f9 fa ,\n       l1 l2 l3 l4 l5 l6 l7 l8 l9 la\n\n/* ----------------------------------------------- *\n * If option is not null then just create the user *\n * clipboards and exit                             *\n * ----------------------------------------------- */\n if option /= null then do\n    call create_boards\n    exit\n    end\n\n/* ------------------------------ *\n * Display ISPF Panel and Process *\n * ------------------------------ */\n do forever\n    zcmd = null\n    count = 0\n    \"Display Panel(setclipp)\"\n    if translate(zcmd) = 'CANCEL' then exit\n    check  = cn1 cn2 cn3 cn4 cn5 cn6 cn7 cn8 cn9 cna  ,\n             cd1 cd2 cd3 cd4 cd5 cd6 cd7 cd8 cd9 cda  ,\n             f1 f2 f3 f4 f5 f6 f7 f8 f9 fa ,\n             l1 l2 l3 l4 l5 l6 l7 l8 l9 la\n   /* ------------------------------------------------------- *\n    | If the SET command then call the setzstrt function to   |\n    | add TSO %SETCLIP X to the ISPF ZSTART profile variable. |\n    * ------------------------------------------------------- */\n    if translate(zcmd) = 'SET' then do\n       zstart_cmd = 'tso %setclip x'\n       xx = setzstrt(zstart_cmd)\n       if xx = 0 then do\n          zedsmsg = 'Updated'\n          zedlmsg = 'The ISPF ZSTART Variable has been' ,\n                    'successfully updated so that the' ,\n                    'SETCLIP defined clipboards will be' ,\n                    'available each time ISPF starts from' ,\n                    'now on.'\n          end\n          else do\n               zedsmsg = 'Not Updated'\n               zedlmsg = 'The ISPF ZSTART Variable was not' ,\n                         'updated. The return code indicates' ,\n                         'it is already defined.'\n               end\n          'Setmsg msg(isrz001)'\n          rc = 0\n          end\n   /* ---------------------------------------------- *\n    | If not the SET command then do our processing. |\n    * ---------------------------------------------- */\n    if translate(zcmd) /= 'SET' then do\n       if hold /= check then changed = 1\n       if rc > 0 then do\n          if changed = 1 then\n             call create_boards\n          leave\n          end\n       if z1 = 'D' then parse value '' with cn1 cd1 f1 l1\n       if z2 = 'D' then parse value '' with cn2 cd2 f2 l2\n       if z3 = 'D' then parse value '' with cn3 cd3 f3 l3\n       if z4 = 'D' then parse value '' with cn4 cd4 f4 l4\n       if z5 = 'D' then parse value '' with cn5 cd5 f5 l5\n       if z6 = 'D' then parse value '' with cn6 cd6 f6 l6\n       if z7 = 'D' then parse value '' with cn7 cd7 f7 l7\n       if z8 = 'D' then parse value '' with cn8 cd8 f8 l8\n       if z9 = 'D' then parse value '' with cn9 cd9 f9 l9\n       if za = 'D' then parse value '' with cna cda fa la\n       if z1 = 'B' then call browse cd1\n       if z2 = 'B' then call browse cd2\n       if z3 = 'B' then call browse cd3\n       if z4 = 'B' then call browse cd4\n       if z5 = 'B' then call browse cd5\n       if z6 = 'B' then call browse cd6\n       if z7 = 'B' then call browse cd7\n       if z8 = 'B' then call browse cd8\n       if z9 = 'B' then call browse cd9\n       if za = 'B' then call browse cda\n       if z1 = 'E' then call edit cd1\n       if z2 = 'E' then call edit cd2\n       if z3 = 'E' then call edit cd3\n       if z4 = 'E' then call edit cd4\n       if z5 = 'E' then call edit cd5\n       if z6 = 'E' then call edit cd6\n       if z7 = 'E' then call edit cd7\n       if z8 = 'E' then call edit cd8\n       if z9 = 'E' then call edit cd9\n       if za = 'E' then call edit cda\n       parse value '' with z1 z2 z3 z4 z5 z6 z7 z8 z9 za\n       check  = cn1 cn2 cn3 cn4 cn5 cn6 cn7 cn8 cn9 cna  ,\n                cd1 cd2 cd3 cd4 cd5 cd6 cd7 cd8 cd9 cda  ,\n                f1 f2 f3 f4 f5 f6 f7 f8 f9 fa ,\n                l1 l2 l3 l4 l5 l6 l7 l8 l9 la\n       if hold /= check then changed = 1\n       if changed = 1 then do\n          frc = fixup()\n          if frc = 0 then do\n             call check_boards\n             if cboards /= null then do\n                zerrsm = 'Error'\n                zerrlm = bc 'Rows with errors:' cboards\n                'Setmsg msg(isrz002)'\n                cboards = null\n                end\n             else call create_boards\n             end\n          end\n       end\n    end\n\n Exit\n\n/* ---------------------------- *\n | Browse the clipboard dataset |\n * ---------------------------- */\n Browse:\n arg cdsn\n 'Browse dataset('cdsn')'\n return\n\n/* -------------------------- *\n | Edit the clipboard dataset |\n * -------------------------- */\n Edit:\n arg cdsn\n 'Edit  dataset('cdsn')'\n changed = 1\n return\n\n/* ------------------------------------------ *\n | Check if a clipboard has a missing dataset |\n * ------------------------------------------ */\n Check_Boards:\n  cboards = null\n  bc      = 0\n  if cn1 /= null then if cd1 = null then\n     call do_balk cn1\n  if wordpos(cn1,'X NX') > 0 then call do_BalkXNX cn1\n  if cn2 /= null then if cd2 = null then\n     call do_balk cn2\n  if wordpos(cn2,'X NX') > 0 then call do_BalkXNX cn2\n  if cn3 /= null then if cd3 = null then\n     call do_balk cn3\n  if wordpos(cn3,'X NX') > 0 then call do_BalkXNX cn3\n  if cn4 /= null then if cd4 = null then\n     call do_balk cn4\n  if wordpos(cn4,'X NX') > 0 then call do_BalkXNX cn4\n  if cn5 /= null then if cd5 = null then\n     call do_balk cn5\n  if wordpos(cn5,'X NX') > 0 then call do_BalkXNX cn5\n  if cn6 /= null then if cd1 = null then\n     call do_balk cn6\n  if wordpos(cn6,'X NX') > 0 then call do_BalkXNX cn6\n  if cn7 /= null then if cd7 = null then\n     call do_balk cn7\n  if wordpos(cn7,'X NX') > 0 then call do_BalkXNX cn7\n  if cn8 /= null then if cd8 = null then\n     call do_balk cn8\n  if wordpos(cn8,'X NX') > 0 then call do_BalkXNX cn8\n  if cn9 /= null then if cd1 = null then\n     call do_balk cn9\n  if wordpos(cn9,'X NX') > 0 then call do_BalkXNX cn9\n  if cna /= null then if cda = null then\n     call do_balk cna\n  if wordpos(cna,'X NX') > 0 then call do_BalkXNX cna\n\n  cns = cn1 cn2 cn3 cn4 cn5 cn6 cn7 cn8 cn9 cna\n  do i = 1 to words(cns)\n     if word(cns,i+1) = null then leave\n     if word(cns,i) = word(cns,i+1) then call do_balkdup word(cns,i)\n     end\n  return\n\n/* ------------------------------------------- *\n | Check for a clipboard name and if non-blank |\n | then create the clipboard.                  |\n * ------------------------------------------- */\n Create_Boards:\n  if cn1 /= null then call create_clipboard cd1 cn1 f1 l1\n  if cn2 /= null then call create_clipboard cd2 cn2 f2 l2\n  if cn3 /= null then call create_clipboard cd3 cn3 f3 l3\n  if cn4 /= null then call create_clipboard cd4 cn4 f4 l4\n  if cn5 /= null then call create_clipboard cd5 cn5 f5 l5\n  if cn6 /= null then call create_clipboard cd6 cn6 f6 l6\n  if cn7 /= null then call create_clipboard cd7 cn7 f7 l7\n  if cn8 /= null then call create_clipboard cd8 cn8 f8 l8\n  if cn9 /= null then call create_clipboard cd9 cn9 f9 l9\n  if cna /= null then call create_clipboard cda cna fa la\n  hold = check\n\n  'vput (cn1 cn2 cn3 cn4 cn5 cn6 cn7 cn8 cn9 cna' ,\n        'cd1 cd2 cd3 cd4 cd5 cd6 cd7 cd8 cd9 cda' ,\n        'f1 f2 f3 f4 f5 f6 f7 f8 f9 fa' ,\n        'l1 l2 l3 l4 l5 l6 l7 l8 l9 la' ,\n        ') profile'\n  if count > 0 then\n     if option = null then do\n     zerrsm = 'Updated'\n     zerrlm = count 'Clipboards updated and saved'\n     'Setmsg msg(isrz002)'\n     end\n  changed = 0\n  return\n\n/* ---------------------------------------------------- *\n * Create_Clipboard routine:                            *\n *                                                      *\n * 1. Set the clipboard name and update ispf variable   *\n * 2. View the dataset(member) where the clipboard data *\n *    resides to copy the entire member into clipboard  *\n * ---------------------------------------------------- */\n Create_Clipboard:\n  arg clipdsn clipname\n  if clipname = '?' then return\n  if sysdsn(clipdsn) /= 'OK' then do\n     zerrsm = 'Invalid DSN'\n     zerrlm = clipdsn sysdsn(clipdsn)\n     'Setmsg msg(isrz002)'\n     end\n  'View dataset('clipdsn') macro(setclipm) parm(clipname)'\n  count = count + 1\n  return\n\n/* ---------------------------------------------- *\n * Fixup routine:                                 *\n *                                                *\n * Consolidate entries if a delete were performed *\n * ---------------------------------------------- */\n Fixup:\n /* -------------------------- *\n  | Test for no clipboard name |\n  * -------------------------- */\n  if cn1 = null then if cd1 /= null then cn1 = '?'\n  if cn2 = null then if cd2 /= null then cn2 = '?'\n  if cn3 = null then if cd3 /= null then cn3 = '?'\n  if cn4 = null then if cd4 /= null then cn4 = '?'\n  if cn5 = null then if cd5 /= null then cn5 = '?'\n  if cn6 = null then if cd6 /= null then cn6 = '?'\n  if cn7 = null then if cd7 /= null then cn7 = '?'\n  if cn8 = null then if cd8 /= null then cn8 = '?'\n  if cn9 = null then if cd9 /= null then cn9 = '?'\n  if cna = null then if cda /= null then cna = '?'\n /* ------------ *\n  | now clean up |\n  * ------------ */\n  cns = cn1 cn2 cn3 cn4 cn5 ,\n        cn6 cn7 cn8 cn9 cna\n  cds = cd1 cd2 cd3 cd4 cd5 ,\n        cd6 cd7 cd8 cd9 cda\n  f1 = strip(f1) ; l1 = strip(l1)\n  f2 = strip(f2) ; l2 = strip(l2)\n  f3 = strip(f3) ; l3 = strip(l3)\n  f4 = strip(f4) ; l4 = strip(l4)\n  f5 = strip(f5) ; l5 = strip(l5)\n  f6 = strip(f6) ; l6 = strip(l6)\n  f7 = strip(f7) ; l7 = strip(l7)\n  f8 = strip(f8) ; l8 = strip(l8)\n  f9 = strip(f9) ; l9 = strip(l9)\n  fa = strip(fa) ; la = strip(la)\n  fls = null\n  if cn1 /= null then fls = fls 'r'f1'-'l1\n  if cn2 /= null then fls = fls 'r'f2'-'l2\n  if cn3 /= null then fls = fls 'r'f3'-'l3\n  if cn4 /= null then fls = fls 'r'f4'-'l4\n  if cn5 /= null then fls = fls 'r'f5'-'l5\n  if cn6 /= null then fls = fls 'r'f6'-'l6\n  if cn7 /= null then fls = fls 'r'f7'-'l7\n  if cn8 /= null then fls = fls 'r'f8'-'l8\n  if cn9 /= null then fls = fls 'r'f9'-'l9\n  if cna /= null then fls = fls 'r'fa'-'la\n  parse value '' with cn1 cn2 cn3 cn4 cn5 cn6 cn7 cn8 cn9 cna ,\n                      cd1 cd2 cd3 cd4 cd5 cd6 cd7 cd8 cd9 cda ,\n                      f1 f2 f3 f4 f5 f6 f7 f8 f9 fa ,\n                      l1 l2 l3 l4 l5 l6 l7 l8 l9 la\n  cn1 = word(cns,1)  ; cd1 = word(cds,1)\n       rc = test_dsn(cd1); if rc > 0 then return 8\n       fr = word(fls,1) ; if fr /= 'r-' then parse value fr with 'r'f1'-'l1 .\n  cn2 = word(cns,2)  ; cd2 = word(cds,2)\n       rc = test_dsn(cd2); if rc > 0 then return 8\n       fr = word(fls,2) ; if fr /= 'r-' then parse value fr with 'r'f2'-'l2 .\n  cn3 = word(cns,3)  ; cd3 = word(cds,3)\n       rc = test_dsn(cd3); if rc > 0 then return 8\n       fr = word(fls,3) ; if fr /= 'r-' then parse value fr with 'r'f3'-'l3 .\n  cn4 = word(cns,4)  ; cd4 = word(cds,4)\n       rc = test_dsn(cd4); if rc > 0 then return 8\n       fr = word(fls,4) ; if fr /= 'r-' then parse value fr with 'r'f4'-'l4 .\n  cn5 = word(cns,5)  ; cd5 = word(cds,5)\n       rc = test_dsn(cd5); if rc > 0 then return 8\n       fr = word(fls,5) ; if fr /= 'r-' then parse value fr with 'r'f5'-'l5 .\n  cn6 = word(cns,6)  ; cd6 = word(cds,6)\n       rc = test_dsn(cd6); if rc > 0 then return 8\n       fr = word(fls,6) ; if fr /= 'r-' then parse value fr with 'r'f6'-'l6 .\n  cn7 = word(cns,7)  ; cd7 = word(cds,7)\n       rc = test_dsn(cd7); if rc > 0 then return 8\n       fr = word(fls,7) ; if fr /= 'r-' then parse value fr with 'r'f7'-'l7 .\n  cn8 = word(cns,8)  ; cd8 = word(cds,8)\n       rc = test_dsn(cd8); if rc > 0 then return 8\n       fr = word(fls,8) ; if fr /= 'r-' then parse value fr with 'r'f8'-'l8 .\n  cn9 = word(cns,9)  ; cd9 = word(cds,9)\n       rc = test_dsn(cd9); if rc > 0 then return 8\n       fr = word(fls,9) ; if fr /= 'r-' then parse value fr with 'r'f9'-'l9 .\n  cna = word(cns,10) ; cda = word(cds,10)\n       rc = test_dsn(cda); if rc > 0 then return 8\n       fr = word(fls,10) ; if fr /= 'r-' then parse value fr with 'r'fa'-'la .\n  call do_sort\n  return 0\n\n/* -------- *\n * Test DSN *\n * -------- */\n test_dsn:\n   arg tdsn\n   if tdsn = '' then return 0\n   dsnrc = listdsi(tdsn)\n   if dsnrc > 0 then do\n      zerrsm = 'Invalid DSN'\n      zerrlm = 'Dataset:' tdsn 'Error:' sysmsglvl2\n      'Setmsg msg(isrz002)'\n      return 8\n      end\n   if wordpos(sysdsorg,'PS PO') = 0 then do\n      zerrsm = 'Invalid DSN'\n      zerrlm = 'Dataset:' tdsn 'Not a supported DSORG'\n      'Setmsg msg(isrz002)'\n      return 8\n      end\n   if sysdsorg = 'PO' then\n      if sysdsn(tdsn) /= 'OK' then do\n      zerrsm = 'Invalid DSN'\n      zerrlm = 'Dataset:' tdsn sysdsn(tdsn)\n      'Setmsg msg(isrz002)'\n      return 8\n      end\n   if sysdsorg = 'PO' then\n      if pos('(',tdsn) = 0 then do\n      zerrsm = 'Invalid DSN'\n      zerrlm = 'Dataset:' tdsn 'is a PDS but no member specified.'\n      'Setmsg msg(isrz002)'\n      return 8\n      end\n   return 0\n\n/* ----------------------------- *\n | Do_Sort                       |\n | 1. put values into a stem     |\n | 2. sort stem                  |\n | 3. return values to variables |\n * ----------------------------- */\n Do_Sort:\n  drop stem.\n  stem. = null\n  if cn1 /= null then stem.1  = cn1 cd1 'r'f1'-'l1\n  if cn2 /= null then stem.2  = cn2 cd2 'r'f2'-'l2\n  if cn3 /= null then stem.3  = cn3 cd3 'r'f3'-'l3\n  if cn4 /= null then stem.4  = cn4 cd4 'r'f4'-'l4\n  if cn5 /= null then stem.5  = cn5 cd5 'r'f5'-'l5\n  if cn6 /= null then stem.6  = cn6 cd6 'r'f6'-'l6\n  if cn7 /= null then stem.7  = cn7 cd7 'r'f7'-'l7\n  if cn8 /= null then stem.8  = cn8 cd8 'r'f8'-'l8\n  if cn9 /= null then stem.9  = cn9 cd9 'r'f9'-'l9\n  if cna /= null then stem.10 = cna cda 'r'fa'-'la\n  stem.0 = 10\n\n/* rexx command to sort a stem variable\n   Simple bubble sort of \"stem' by stem.1\n   Ken Singer, Shell Oil, Houston\n ********************************************************/\n  if stem.0 = 1 then return /* simple sort !*/\n  ctr =  stem.0\n  do y = 1 to  ctr - 1\n     do x = y+1 to ctr\n        if stem.x = null then leave\n        if stem.x < stem.y then do\n            /* swap these 2 entries */\n            t1 = stem.y ;\n            stem.y = stem.x\n            stem.x = t1\n        end\n     end x\n  end y\n  if stem.1 /= null then\n     parse value stem.1 with cn1 cd1 'r'f1'-'l1\n  if stem.2 /= null then\n     parse value stem.2 with cn2 cd2 'r'f2'-'l2\n  if stem.3 /= null then\n     parse value stem.3 with cn3 cd3 'r'f3'-'l3\n  if stem.4 /= null then\n     parse value stem.4 with cn4 cd4 'r'f4'-'l4\n  if stem.5 /= null then\n     parse value stem.5 with cn5 cd5 'r'f5'-'l5\n  if stem.6 /= null then\n     parse value stem.6 with cn6 cd6 'r'f6'-'l6\n  if stem.7 /= null then\n     parse value stem.7 with cn7 cd7 'r'f7'-'l7\n  if stem.8 /= null then\n     parse value stem.8 with cn8 cd8 'r'f8'-'l8\n  if stem.9 /= null then\n     parse value stem.9 with cn9 cd9 'r'f9'-'l9\n  if stem.10 /= null then\n     parse value stem.10 with cna cda 'r'fa'-'la\n  drop stem.\n  return\n\n\n Do_BalkXNX:\n  arg tclip\n  bc = bc + 1\n  cboards = cboards 'Clipboard:' tclip 'not allowed'\n  return\n\n Do_Balk:\n  arg tclip\n  bc = bc + 1\n  cboards = cboards 'Clipboard:' tclip 'no DSN'\n  return\n\n Do_BalkDup:\n  arg tclip\n  bc = bc + 1\n  cboards = cboards 'Clipboard:' tclip 'duplicate'\n  return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SETCLIPH": {"ttr": 515, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x006\\x01\\x16%\\x9f\\x01\\x17\\x03\\x0f\\x11U\\x00D\\x00\\x1e\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2016-09-15T00:00:00", "modifydate": "2017-01-30T11:55:36", "lines": 68, "newlines": 30, "modlines": 0, "user": "SETCLIP"}, "text": ")attr default(@+_)\n  + type(text) intens(high) caps(off) just(asis ) color(turq)\n  ~ type(text) intens(high) caps(off) just(asis ) color(blue) hilite(reverse)\n  @ type(text) intens(high) color(white)\n  # area(SCRL) Extend(ON)\n)Body Expand(\\\\)\n+-\\-\\-(~SETCLIP - ISPF Edit Clipboards+)-\\-\\-\n@Command ===>_ZCMD                                                             +\n#help ------------------------------------------------------------------------#\n)Area Help\n+\n@  SETCLIP+is an ISPF dialog that makes it easy for a user to create from\n+  one to ten (the ISPF max) ISPF Edit Clipboards from existing datasets\n+  for use during the ISPF session.\n+\n+  Commands: @CANCEL+to not update the current definitions and exit\n+             (Only works if Cancel is entered before the@Enter+key)\n+            @SET+to update the ISPF Profile Variable ZSTART to cause\n+             the clipboards to be set each time ISPF Starts\n+\n+  Line Options:@B+to browse the dataset\n+               @D+to delete the selected row\n+               @E+to edit the dataset\n+\n+  Clipboard name is any 1-8 character name for the user clipboard.\n+\n+  Dataset is the dataset, or dataset(member), where the clipboard data are\n+  found.\n+\n+  Rows (optional) is the 1st and/or last row to be copied into the clipboard.\n+\n  @Enter+will save the current definitions and update/create the user\n+  defined clipboards if there have been updates.\n+\n  @PF3+will save all updated information and create/update clipboards\n+  before exiting.\n+\n  @Automate+the creation of the user clipboards by updating the ISPF\n+  ZSTART variable with@TSO %SETCLIP X+to have the clipboards created\n+  each time ISPF starts. Hint: Use the@SET+command within this dialog.\n+\n  @Notes:+ 1. When in ISPF Edit use the@CUT DISplay+command to\n+             view active clipboards\n+          2. If the rows entered are not valid then the set routine\n+             will stop while in EDIT on the source dataset with an\n+             error message\n+          3. Use the ISPF Edit command EDSET to change/verify the\n+             default actions for CUT and PASTE.\n+             - Default for CUT is recommended to be be REPLACE\n+             - Default for PASTE is recommended to be be KEEP\n+          4. Clipboards named X and NX are not allowed as they\n+             are CUT command options.\n+\n  @Suggestion:+Consider placing the records for multiple clipboards\n+  into a single dataset, or dataset(member), and using the starting\n+  and ending rows to select the records.\n+\n+ @Background+The clipboards are stored in memory, which means they are\n+  discarded at TSO LOGOFF, but they remain if ISPF is just stopped and\n+  restarted.  Thus, by using SETCLIP to define clipboards, and adding\n+  SETCLIP to the ZSTART variable, clipboards with frequently used\n+  information can be made available across ISPF sessions and TSO\n+  LOGONs.\n+\n)Init\n .cursor = &zcmd\n)PROC\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SETCLIPM": {"ttr": 267, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x0b\\x00&\\x01\\x16%\\x7f\\x01\\x16%\\x9f\\x08\\x03\\x00J\\x00\\x19\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.11", "flags": 0, "createdate": "2016-09-13T00:00:00", "modifydate": "2016-09-15T08:03:26", "lines": 74, "newlines": 25, "modlines": 0, "user": "SETCLIP"}, "text": "/* --------------------  rexx procedure  -------------------- *\n * Name:      SetClipM                                        *\n *                                                            *\n * Function:  ISPF Edit Macro to create a Edit Clipboard      *\n *                                                            *\n * Parameters:  passed as ispf variable clipparm              *\n *                                                            *\n * Author:    Lionel B. Dyck                                  *\n *                                                            *\n * History:                                                   *\n *            09/15/16 - Update to use passed parm on edit    *\n *            09/13/16 - Creation                             *\n *                                                            *\n * ---------------------------------------------------------- *\n * Support is on a best effort and time available basis which *\n * is why the complete source is provided for this application*\n * so you can find and fix any issues you find. Please let    *\n * me know if you do make changes/enhancements/fixes.         *\n * ---------------------------------------------------------- *\n * License:   This EXEC and related components are released   *\n *            under terms of the GPLV3 License. Please        *\n *            refer to the LICENSE file for more information. *\n *            Or for the latest license text go to:           *\n *                                                            *\n *              http://www.gnu.org/licenses/                  *\n * ---------------------------------------------------------- */\n\n/* -------------------------------- *\n * Define the ISPF Edit environment *\n * -------------------------------- */\n address isredit\n 'macro (clipparm)'\n\n/* ---------------------- *\n * Split out the Clipparm *\n * ---------------------- */\n parse value clipparm with clipparm first last\n if first = '' then first = '.zfirst'\n if last  = '' then last  = '.zlast'\n\n/* -------------------------------------------- *\n * Validate that the first and last rows to cut *\n * are valid rows.                              *\n * -------------------------------------------- */\n \"(zlast)  = linenum .zlast\"\n if datatype(first) = 'NUM' then\n    if first > zlast then do\n       zedsmsg = 'Invalid first'\n       zedlmsg = first 'is not a valid row to be cut.' ,\n       'Review and then update the SETCLIP rows.'\n       Address ISPExec ,\n          'setmsg msg(isrz001)'\n       'end'\n       end\n if datatype(last) = 'NUM' then\n    if last > zlast then do\n       zedsmsg = 'Invalid last'\n       zedlmsg = last 'is not a valid row to be cut.' ,\n       'Review and then update the SETCLIP rows.'\n       Address ISPExec ,\n          'setmsg msg(isrz001)'\n       'end'\n       end\n\n/* ------------------------------------ *\n * Cut all records to the new clipboard *\n * ------------------------------------ */\n 'cut' first last clipparm\n\n/* ---------------------------------- *\n * End the ISPF Edit session and exit *\n * ---------------------------------- */\n 'end'\n exit\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SETCLIPP": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x10\\x00B\\x01\\x16%\\x8f\\x01\\x19\\x03\\x8f\\x068\\x00^\\x00.\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.16", "flags": 0, "createdate": "2016-09-14T00:00:00", "modifydate": "2019-02-07T06:38:42", "lines": 94, "newlines": 46, "modlines": 0, "user": "SETCLIP"}, "text": ")attr Default(@+_)\n  _ type(input)  caps(off)\n  $ type(input)  caps(on) hilite(uscore)\n)body expand(\\\\)\n+-\\-\\-(@SETCLIP - ISPF Edit Clipboards+)-\\-\\-\n@Command ===>_ZCMD / /\n+\n+    ClipBoard  Dataset(member)                                     Rows\n+Opt Name       Containing the Clipboard Text                       1st  Last\n$z+ $z       + $z                                                 +$f1 +$l1 +\n$z+ $z       + $z                                                 +$f2 +$l2 +\n$z+ $z       + $z                                                 +$f3 +$l3 +\n$z+ $z       + $z                                                 +$f4 +$l4 +\n$z+ $z       + $z                                                 +$f5 +$l5 +\n$z+ $z       + $z                                                 +$f6 +$l6 +\n$z+ $z       + $z                                                 +$f7 +$l7 +\n$z+ $z       + $z                                                 +$f8 +$l8 +\n$z+ $z       + $z                                                 +$f9 +$l9 +\n$z+ $z       + $z                                                 +$fa +$la +\n+\n+Opt: @B+Browse@E+Edit@D+Delete\n+Commands:@Enter+to Save, Create, or@Cancel+to Exit.\n+\n+Notes: 1. The table will be sorted after each update automatically.\n+       2. Create these clipboards at ISPF Start by using the ZSTART\n+          profile variable (Issue command@SET+to do this)\n)INIT\n.help = setcliph\n.zvars = '(z1 cn1 cd1 +\n           z2 cn2 cd2 +\n           z3 cn3 cd3 +\n           z4 cn4 cd4 +\n           z5 cn5 cd5 +\n           z6 cn6 cd6 +\n           z7 cn7 cd7 +\n           z8 cn8 cd8 +\n           z9 cn9 cd9 +\n           za cna cda)'\n .cursor = 'zcmd'\n)PROC\n ver (&cn1,name)\n ver (&cn2,name)\n ver (&cn3,name)\n ver (&cn4,name)\n ver (&cn5,name)\n ver (&cn6,name)\n ver (&cn7,name)\n ver (&cn8,name)\n ver (&cn9,name)\n ver (&cna,name)\n ver (&cd1,dsnameq)\n ver (&cd2,dsnameq)\n ver (&cd3,dsnameq)\n ver (&cd4,dsnameq)\n ver (&cd5,dsnameq)\n ver (&cd6,dsnameq)\n ver (&cd7,dsnameq)\n ver (&cd8,dsnameq)\n ver (&cd9,dsnameq)\n ver (&cda,dsnameq)\n ver (&f1,num)\n ver (&f2,num)\n ver (&f3,num)\n ver (&f4,num)\n ver (&f5,num)\n ver (&f6,num)\n ver (&f7,num)\n ver (&f8,num)\n ver (&f9,num)\n ver (&fa,num)\n ver (&l1,num)\n ver (&l2,num)\n ver (&l3,num)\n ver (&l4,num)\n ver (&l5,num)\n ver (&l6,num)\n ver (&l7,num)\n ver (&l8,num)\n ver (&l9,num)\n ver (&la,num)\n)END\n/* ---------------------------------------------------------- *\n * Support is on a best effort and time available basis which *\n * is why the complete source is provided for this application*\n * so you can find and fix any issues you find. Please let    *\n * me know if you do make changes/enhancements/fixes.         *\n * ---------------------------------------------------------- *\n * License:   This EXEC and related components are released   *\n *            under terms of the GPLV3 License. Please        *\n *            refer to the LICENSE file for more information. *\n *            Or for the latest license text go to:           *\n *                                                            *\n *              http://www.gnu.org/licenses/                  *\n * ---------------------------------------------------------- */\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "SETCLIPX": {"ttr": 261, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x03\\x01\\x16&\\x0f\\x01\\x16&\\x0f\\x101\\x00\\x19\\x00\\x19\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2016-09-16T00:00:00", "modifydate": "2016-09-16T10:31:03", "lines": 25, "newlines": 25, "modlines": 0, "user": "SETCLIP"}, "text": "/* --------------------  rexx procedure  -------------------- *\n * Name:      setclipx                                        *\n *                                                            *\n * Function:  dynamically allocate the setclip libraries      *\n *            for testing purposes                            *\n *                                                            *\n * Syntax:    %setclipx option                                *\n *                                                            *\n * Author:    John P. Kalinich                                *\n *                                                            *\n * History:                                                   *\n *            09/16/2016 - creation                           *\n * ---------------------------------------------------------- */\n arg option\n\n exec   = \"SETCLIP.PDS\"\n panels = \"SETCLIP.PDS\"\n\n'altlib activate dataset('exec') application(exec)'\naddress ispexec\n'libdef ispplib dataset id('panels') stack'\n'Select cmd(%setclip' option') scrname(setclip)'\n'libdef ispplib'\naddress tso\n'altlib deactivate application(exec)'\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SETZSTRT": {"ttr": 269, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x01\\x01\\x16)O\\x01\\x16)O\\x13P\\x00\\\\\\x00M\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2016-10-20T00:00:00", "modifydate": "2016-10-20T13:50:01", "lines": 92, "newlines": 77, "modlines": 0, "user": "SETCLIP"}, "text": "/* --------------------  rexx procedure  -------------------- *\n | Name:      SetZStrt                                        |\n |                                                            |\n | Function:  Add the ZSTART Profile Variable with            |\n |            the provided info if it doesn't exist           |\n |                                                            |\n | Syntax:    %setzstrt new-command                           |\n |            or                                              |\n |            x = setzstrt(new-command)                       |\n |                                                            |\n |            new-command is a new ispf command to be         |\n |            added to the ISPF ZSTART variable.              |\n |                                                            |\n | Usage Notes: The new command will be checked to see        |\n |              if it is already in the ZSTART                |\n |              variable. If found then exit, if not          |\n |              then it is added.                             |\n |                                                            |\n | Dependencies:  Must run under Applid ISR                   |\n |                                                            |\n | Return Codes: 0 - successfully added                       |\n |               4 - already in ZSTART                        |\n |               8 - no new command                           |\n |              16 - not run under ISPF                       |\n |                                                            |\n | Author:    Lionel B. Dyck                                  |\n |                                                            |\n | History:  (most recent on top)                             |\n |            10/20/16 - Creation                             |\n |                                                            |\n * ---------------------------------------------------------- */\n parse arg new_command\n\n/* -------------------------- *\n | Check for ISPF environment |\n * -------------------------- */\n if sysvar('sysispf') /= 'ACTIVE' then do\n    say 'Error. This command can ONLY be run under ISPF'\n    say '       Exiting - try again.'\n    Exit 16\n    end\n\n Address ISPExec\n\n/* --------------------------------------- *\n | Check for a new ISPF Command for ZSTART |\n * --------------------------------------- */\n if strip(new_command) = '' then do\n    zedsmsg = 'Error'\n    zedlmsg = 'This command requires a new ISPF command.'\n    'Setmsg msg(isrz001)'\n    Exit 8\n    end\n\n/* --------------------------- *\n | Get the current ISPF Applid |\n * --------------------------- */\n 'Vget (zapplid)'\n\n/* ------------------------------- *\n | If not APPLID(ISR) then recurse |\n * ------------------------------- */\n if zapplid /= 'ISR' then do\n     \"Select CMD(%setzstrt\" new_command \") Newappl(ISR)\" ,\n         \"Passlib\"\n    Exit rc\n    end\n\n/* ------------------------------------ *\n | Get the ISPF Profile Variable ZSTART |\n * ------------------------------------ */\n 'Vget (zstart) Profile'\n\n/* ----------------------------------------- *\n | If ZSTART does not exist or is empty then |\n | prime it with ISPF;                       |\n * ----------------------------------------- */\n if strip(zstart) = '' then zstart = 'ISPF;'\n\n/* -------------------------------------------------- *\n | Test to determine if the new command is already in |\n | ZSTART and if so exit with return code of 4        |\n |                                                    |\n | Otherwise add it to the end and exit return code 0 |\n * -------------------------------------------------- */\n test = translate(new_command)\n if pos(test,translate(zstart)) > 0 then Exit 4\n else do\n      zstart = strip(zstart)';'new_command\n      'vput (zstart) profile'\n      Exit 0\n      end\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SUPPORT": {"ttr": 259, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00G\\x01\\x16\\x16_\\x01\\x16\\x16_\\x134\\x00\\n\\x00\\x07\\x00\\x00\\xe2\\xc5\\xe3\\xc3\\xd3\\xc9\\xd7@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2016-06-13T00:00:00", "modifydate": "2016-06-13T13:34:47", "lines": 10, "newlines": 7, "modlines": 0, "user": "SETCLIP"}, "text": "Disclaimer: This software is provide for your use without any warranty or\nrecourse should it not perform or cause problems. The author and others\nwho have contributed are not responsible for issues that arise, nor are\ntheir employers. Use this software at your own risk. Test and test again\nbefore using in any productive capacity.\n\nThe complete source is provided and it is my hope that you will not find\nany issues.  However if you do have issues please let me know\n(lbdyck@gmail.com) and if you do make changes/enhancements please let me\nknow as well.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT313/CBT.V500.FILE313.PDS/SETCLIP.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT313/CBT.V500.FILE313.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}