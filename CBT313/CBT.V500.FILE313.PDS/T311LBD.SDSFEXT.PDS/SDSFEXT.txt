/*%NOCOMMENT====================* REXX *==============================*/
  ver = "1.21"
/* Name:     SDSF Extract                                            *
*                                                                    *
* Function:  A generalized SDSF extraction process that will         *
*            extract a specific ddname for all matching jobs         *
*            that are in the JES2 SPOOL. The extraction is           *
*            performed to a preallocated data set referenced         *
*            by a DD statement in the batch terminal monitor         *
*            program.                                                *
*                                                                    *
* Syntax:    %sdsfext jobname ddname outdd jobnum (options           *
*                                                                    *
*            Where:                                                  *
*                                                                    *
*            jobname is the name of the job to extract               *
*                    or * for the current jobname                    *
*                    if * then active is set on                      *
*                    support wild cards (% and *) in jobname         *
*                                                                    *
*            ddname is the ddname to be extracted                    *
*            or                                                      *
*            (ddname1 ddname2 ...)                                   *
*            or                                                      *
*            * for all ddnames                                       *
*                                                                    *
*            ddname may be coded as stepname.ddname where            *
*                stepname is the jcl stepname not the step           *
*                found in a proc.                                    *
*                or stepname.procstep.ddname                         *
*                                                                    *
*            outdd is the ddname where the extracted data is         *
*                to be directed                                      *
*                                                                    *
*            jobnum is the job number for the desired job            *
*                                                                    *
*            ( is required if any options are specified              *
*                                                                    *
*            options currently supported are:                        *
*                                                                    *
*            ACTIVE   - only process jobs that are currently         *
*                       executing.                                   *
*                     - set on if jobname is *                       *
*                                                                    *
*            DEBUG    - will echo the generated SDSF cmds            *
*                                                                    *
*            INPUT    - will allow selection of input data           *
*                                                                    *
* Example:   %sdsfext smtp logfile report                            *
*                                                                    *
*            This will extract the ddname LOGFILE for each           *
*            occurrence of the job SMTP in the spool with the        *
*            output going to preallocated DD REPORT.                 *
*                                                                    *
* ------------------------------------------------------------------ *
*                                                                    *
* Sample Test Case/JCL                                               *
* --------------------                                               *
*                                                                    *
* Additional debugging/processing overrides                          *
* -----------------------------------------                          *
* Append DEBUG=DEBUG to the EXEC statement below to initiate the     *
* debugging mode.                                                    *
*    DEBUG=DEBUG                                                     *
*                                                                    *
* Optional DDNAME parameter override                                 *
*    DDNAME='(JESJCL JESMSGLG JESYSMSG *)',                          *
*                                                                    *
* -----                                                              *
*                                                                    *
* //SDSFEXTR JOB (0),'SDSF Output Extract ',CLASS=A,MSGCLASS=X,      *
* //     NOTIFY=&SYSUID                                              *
* //SDSFEXT  PROC JOBNAME='*',DDNAME='(*)',ACTIVE=,DEBUG=,INPUT=OFF  *
* //TSOB     EXEC PGM=IKJEFT1B,                                      *
* // PARM='%SDSFEXT &JOBNAME &DDNAME &OUTDD (&ACTIVE &DEBUG &INPUT'  *
* //SYSEXEC   DD  DISP=SHR,DSN=BWJS1.CLIST                           *
* //SYSTSPRT  DD  SYSOUT=*                                           *
* //SYSTSIN   DD  DUMMY                                              *
* //         PEND                                                    *
* //COPY     EXEC PGM=IEBCOPY                                        *
* //SYSPRINT  DD  SYSOUT=*                                           *
* //IN        DD  DISP=SHR,DSN=BWJS1.CLIST                           *
* //SYSIN     DD  *                                                  *
*   C I=IN,O=IN                                                      *
* //EXTRACT  EXEC SDSFEXT,OUTDD=OUT                                  *
* //OUT       DD  UNIT=3390,SPACE=(TRK,(15,15)),  (PDSE recommended) *
* //     DSN=BWJS1.SDSF.EXTRACT,                                     *
* //     DCB=(RECFM=VBA,LRECL=240,BLKSIZE=27840),                    *
* //     DISP=(MOD,CATLG,KEEP)                                       *
*                                                                    *
* ------------------------------------------------------------------ *
*                                                                    *
* Sample Output found in SYSTSPRT                                    *
* -------------------------------                                    *
*                                                                    *
* Processing Jobs for SDSFEXTR                                       *
*                     JOB09848                                       *
*  >>>  PRE SDSFEXTR                                                 *
*  >>>  OWNER                                                        *
*  >>>  DA                                                           *
*  >>>  PT FILE OUT                                                  *
*  >>>  SORT OFF                                                     *
*  >>>  Set Display On                                               *
*  >>>  SELECT SDSFEXTR JOB09848                                     *
*  >>>  FIND SDSFEXTR                                                *
*  >>>  ++X                                                          *
*  >>>  PT CLOSE                                                     *
*                                                                    *
* 1 HQX7790 -----------------  SDSF PRIMARY OPTION MENU  ----------- *
*   COMMAND INPUT ===>                                            SC *
*                                                                    *
*   DA    Active users                      INIT  Initiators         *
*   I     Input queue                       PR    Printers           *
*   O     Output queue                      PUN   Punches            *
*   H     Held output queue                 RDR   Readers            *
*   ST    Status of jobs                    LINE  Lines              *
*                                           NODE  Nodes              *
*   LOG   System log                        SO    Spool offload      *
*   SR    System requests                   SP    Spool volumes      *
*   MAS   Members in the MAS                NS    Network servers    *
*   JC    Job classes                       NC    Network connection *
*   SE    Scheduling environments                                    *
*   RES   WLM resources                     RM    Resource monitor   *
*   ENC   Enclaves                          CK    Health checker     *
*   PS    Processes                                                  *
*                                           ULOG  User session log   *
*   END   Exit SDSF                                                  *
*                                                                    *
* ------------------------------------------------------------------ *
*                                                                    *
* You should NOT see. . . in the DEBUG mode SYSTSPRT output . . .    *
*                                                                    *
* HQX7790 ----  SDSF PRIMARY OPTION MENU     COMMAND NOT AUTHORIZED  *
*                                                                    *
* If you do see the above error, update ISFPARMS to grant batch      *
* authority to the SDSF user.  Use the WHO command to view the SDSF  *
* group in which the EXEC is executing in batch.                     *
*                                                                    *
* ------------------------------------------------------------------ *
*                                                                    *
* Author:    Lionel B. Dyck                                          *
*            Internet: lbdyck@gmail.com                              *
*                                                                    *
* History:                                                           *
*    @A1     05/18/18 - Update from Bruce Koss                       *
*                     - Allow wild cards in jobname (% and *)        *
*            09/04/15 - Update from William J. Smith for SDS         *
*                     - Replaced two line message 'Processing jobs   *
*                       for' ... with a single new line that is      *
*                       date and time stamped separated by a blank   *
*                       line before and after including the jobname  *
*                       and JES2 job id with the message "SDSF       *
*                       Extract is capturing output for"             *
*            09/01/15 - Update from William J. Smith for SDS         *
*                     - Version changed to 1.20 and substantial      *
*                       addition of inline comments above            *
*                     - Added BLKSIZE(27930) to ALLOC F(ISFOUT) to   *
*                       override default of 133 and significantly    *
*                       reduce EXCP I/O counts                       *
*            08/26/15 - Update from William J. Smith for SDS         *
*                     - Changed two BLKSIZE operands from 3200 to    *
*                       27920 on the ALLOC F(ISFIN) to reduce EXCP   *
*                       I/O counts                                   *
*                     - May require changes to ISFPARMS to provide   *
*                       needed authorization for SDSF BATCH (not     *
*                       REXX or JAVA!) support (Ref: Chapter 11,     *
*                       "Introduction to SDSF Application Services"  *
*                       in the "Operation and Customization Guide")  *
*                     - At minimum you will need authorization to    *
*                       execute the PREFIX, OWNER, and DA commands   *
*                       which may be verified by running this exec   *
*                       in DEBUG mode.  Examine the SDSF output that *
*                       can be found in the SYSTSPRT DD.             *
*                       reflected in the SDSF Primary Option Menu on *
*            06/12/04 - Update from Rick Turnbull to capture         *
*                       all ddnames                                  *
*            06/10/04 - Update from Billy Smith                      *
*                     - add TOP command after Filter Procstep        *
*            05/04/04 - Updates from Daryl Johnson                   *
*                     - use mvsvar for jobname                       *
*                     - change test for NP in SDSF output            *
*            03/17/04 - Add INPUT option                             *
*            10/02/03 - Corrections thanks to Rick Turnbull          *
*                       when filtering for stepname                  *
*            11/02/02 - correct jobname * for active                 *
*            10/18/02 - add set display on (for debug)               *
*            10/17/02 - change to use X instead of PT                *
*                     - support procstep                             *
*            10/15/02 - allow multiple ddnames and stepname          *
*                     - change from sdsf to isfafd                   *
*                     - add debug option                             *
*            10/13/02 - allow jobname of * for current job           *
*            08/27/02 - add jobnum option thanks to                  *
*                       Pedro Cunha                                  *
*            05/22/02 - add ACTIVE option                            *
*            05/21/02 - add test for no matches                      *
*            05/20/02 - creation                                     *
*                                                                    *
* ------------------------------------------------------------------ */
  arg input

 /* ---------------------------- *
  * validate the first parameter *
  * ---------------------------- */
  If words(input) < 3 then Do
     Say "Error: Invalid syntax.  A jobname, ddname, and outdd",
         "are required."
     Say "Try again......"
     Exit 8
     End

 /* ------------------------------- *
  * Now parse out the input options *
  * ------------------------------- */
  parse value input with jobname more
  If left(more,1) <> "(" then
     parse value more with ddname outdd jobnum "(" options
  Else
     parse value more with "("ddname")" outdd jobnum "(" options

 /* -------------------------------------------- *
  * Test if jobname is * and get current jobname *
  * -------------------------------------------- */
  IF JOBNAME = "*" THEN DO
     JOBNAME = MVSVAR('SYMDEF','JOBNAME')
     IF POS("ACTIVE",OPTIONS) = 0 THEN
        OPTIONS = OPTIONS "ACTIVE"
     END

 /* -------------------------------- *
  * Set Defaults                     *
  * -------------------------------- */
  parse value "" with null active stepname debug input
  call msg 'off'

 /* ------------------- *
  * Process any options *
  * ------------------- */
  If length(options) > 0 then Do
     If wordpos("ACTIVE",options) > 0 then active = 1
     If wordpos("DEBUG",options)  > 0 then debug  = 1
     If wordpos("INPUT",options)  > 0 then input  = 1
     End

 /* ---------------------------------------------------------- *
  * First find all jobs that match the provided jobname. Build *
  * a list of jobid's.                                         *
  * ---------------------------------------------------------- */
  out.1 = "PRE" jobname
  out.2 = "OWNER"
  If active = 1 then
     out.3 = "DA"
  Else
     out.3 = "ST"
  out.0 = 3
  If active <> 1 then Do
     out.4 = "sort st-date a"
     out.0 = 4
   End
  "Alloc f(isfin) new spa(1,1) tr" ,
        "recfm(f b) lrecl(80) blksize(27920) reuse"
  "Execio * diskw isfin (Finis stem out."
  If debug <> null then Do
     Say ' >>> Job selection processing'
     Do ix = 1 to out.0
        Say ' >>> ' out.ix
        End
        Say ' '
     End
  call do_sdsf
  call get_jobids

 /* ------------------------------ *
  * Test for any jobs that matched *
  * ------------------------------ */
  If length(jobs) = 0 then Do
     Say "No matching jobs for" jobname
     Say "Exiting...."
     Exit 8
     End

 /* --------------------------------------- *
  * Now for each job get the DD and extract *
  * --------------------------------------- */
  out.1 = "PRE" jobname
  out.2 = "OWNER"
  If active = 1 then
     out.3 = "DA"
  Else
     out.3 = "ST"
  out.4 = "PT FILE" outdd
  out.5 = "SORT OFF"
  out.6 = "Set Display On"
  oc = 6
  If input = 1 then Do
     oc = oc + 1
     out.oc = "Input On"
     End

  Do j = 1 to words(jobs)
     jid = word(jobs,j)

     jobname = word(jobnames,j)                               /* @A1 */
     Say " "
     datetime = date(U) time('C')
     Say datetime "SDSF Extract is capturing output for" jobname jid
     Say " "
     oc = oc + 1
     out.oc = "SELECT" jobname jid
     oc = oc + 1
     out.oc = "FIND" jobname
     If (ddname = "*") then Do  /* StateAuto Modification */
         oc = oc + 1            /* StateAuto Modification */
         out.oc = "++X"         /* StateAuto Modification */
         End                    /* StateAuto Modification */
     Else Do                    /* StateAuto Modification */
     oc = oc + 1
     out.oc = "++?"
      Do ddw = 1 to words(ddname)
         If pos(".",word(ddname,ddw)) > 0 then Do
           parse value word(ddname,ddw) with stepname"."sddname
           oc = oc + 1
           out.oc = "FILTER STEPNAME" stepname
           If pos(".",sddname) = 0 then procstep = null
              Else parse value sddname with procstep"."sddname
           If procstep <> null then Do
              oc = oc + 1
              out.oc = "FILTER PROCSTEP" procstep
              End
           oc = oc + 1
           out.oc = "TOP"
           oc = oc + 1
           out.oc = "FIND" sddname
           End
         Else Do
             oc = oc + 1
             out.oc = "FIND" word(ddname,ddw)
             End
         oc = oc + 1
         out.oc = "++X"
         If stepname <> null then Do
            oc = oc + 1
            out.oc  = "FILTER OFF"
            stepname = null
            End
         End
      oc = oc + 1
      If active = 1 then
         out.oc = "DA"
      Else
         out.oc = "ST"
      End
   End
   oc = oc + 1
   out.oc = "PT CLOSE"
   "Alloc f(isfin) new spa(1,1) tr" ,
         "recfm(f b) lrecl(80) blksize(27920) reuse"
   "Execio * diskw isfin (Finis stem out."
   If debug <> null then Do
      Do ix = 1 to oc
         Say ' >>> ' out.ix
         End
         Say ' '
      End
   call do_sdsf
   Exit

  /* ---------------------- *
   * Get job id information *
   * ---------------------- */
   Get_JobIDs:
   hit = 0
   jobs = null
   Do i = 1 to sdsf.0
      If left(sdsf.i,1) = "1" then hit = 0
      sdsf.i = translate(sdsf.i,' ',x2c(06))
      If active = null then
         If pos("SDSF STATUS DISPLAY",sdsf.i) > 0 then
            hit = 1
      If active = 1 then
         If pos("SDSF DA",sdsf.i) > 0 then
            hit = 1
      If hit = 0 then iterate
      If pos(" NP",sdsf.i) > 0 then Do
         hit = 2
         jobpos = pos("JOBNAME",sdsf.i)
         idpos  = pos("JOBID",translate(sdsf.i))
         iterate
         End
      If hit = 1 then iterate
      If substr(sdsf.i,jobpos,1) = " " then iterate
      sdsfjob = strip(substr(sdsf.i,jobpos,8))
   /* If sdsfjob = jobname then Do */                         /* @A1 */
         seljobnm = strip(substr(sdsf.i,jobpos,8))            /* @A1 */
         jobnames = seljobnm jobnames                         /* @A1 */
         seljobid = strip(substr(sdsf.i,idpos,8))
         If pos(seljobid,jobs) = 0 then
         If jobnum = null then
            jobs = strip(seljobid jobs)
         Else If jobnum = seljobid
                 then jobs = jobnum
         End
   /* End */                                                 /* @A1 */
    Return

/* ------------------------------ *
 * Call SDSF and Read the Results *
 * ------------------------------ */
 Do_SDSF:
 "Alloc f(isfout) new spa(15,15) tr reuse blksize(27930)"
 Address Linkmvs "sdsf"
 x_rc = rc
 "Execio * diskr isfout (finis stem sdsf."
 "Free f(isfin isfout) delete"
 If x_rc > 0 then Say ">>>>>>>>>> SDSF RC:" x_rc
 If debug <> null then
    Do ix = 1 to sdsf.0
       Say strip(sdsf.ix,'t')
       End
 Return
