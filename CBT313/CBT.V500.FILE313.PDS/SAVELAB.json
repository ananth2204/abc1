{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SLBD", "INMTNODE": "X", "INMTUID": "Y", "INMFTIME": "20200208232605000000", "INMNUMF": 2}, "INMR02": {"1": {"INMUTILN": "INMCOPY", "INMSIZE": 228966, "INMDSORG": "PS", "INMLRECL": 251, "INMBLKSZ": 3120, "INMRECFM": "VB", "numfile": 1}, "2": {"INMUTILN": "IEBCOPY", "INMSIZE": 228966, "INMDSORG": "PO", "INMTYPE": "Data Library", "INMLRECL": 80, "INMBLKSZ": 32720, "INMRECFM": "FB", "INMDIR": 1, "INMDSNAM": "SLBD.SAVELAB.PDS", "numfile": 2}, "3": {"INMUTILN": "INMCOPY", "INMSIZE": 228966, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 2}}, "INMR03": {"1": {"INMSIZE": 228966, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}, "2": {"INMSIZE": 228966, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "message": {"file": "b'a\\\\@``````````````````````````````````````````````````````````````@\\\\\\xe0@O@\\xe3\\x88\\x85@\\xe3\\xe2\\xd6@\\xe3\\x99\\x81\\x95\\xa2\\x94\\x89\\xa3@\\x84\\x81\\xa3\\x81@\\xa3\\x88\\x81\\xa3@\\x89\\xa2@\\x82\\x85\\x89\\x95\\x87@\\x99\\x85\\x83\\x85\\x89\\xa5\\x85\\x84@\\x89\\xa2@\\x83\\x96\\xa5\\x85\\x99\\x85\\x84@\\xa4\\x95\\x84\\x85\\x99@@O@O@\\xa3\\x88\\x85@\\xc7\\xd7\\xd3@\\xe5\\x85\\x99\\xa2\\x89\\x96\\x95@\\xf3@\\xd3\\x89\\x83\\x85\\x95\\xa2\\x85K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@O@\\xe6\\x85\\x93\\x83\\x96\\x94\\x85@\\xa3\\x96@\\xe2\\xc1\\xe5\\xc5\\xd3\\xc1\\xc2@`@\\xa3\\x88\\x85@\\xc9\\xe2\\xd7\\xc6@\\xc5\\x84\\x89\\xa3@\\x83\\x96\\x94\\x94\\x81\\x95\\x84@\\xa3\\x96@\\x94\\x81\\x92\\x85@\\xa4\\xa2\\x89\\x95\\x87@@@@@@@O@O@\\xc5\\x84\\x89\\xa3@\\xd3\\x81\\x82\\x85\\x93\\xa2@\\xa6\\x96\\x99\\xa3\\x88\\xa6\\x88\\x89\\x93\\x85@\\x81\\xa2@\\xa3\\x88\\x85\\xa8@\\x81\\x99\\x85@\\x95\\x96\\xa6@\\x97\\x85\\x99\\xa2\\x89\\xa2\\xa3\\x85\\x95\\xa3@\\x81\\x95\\x84@@@@@@@@@@O@O@\\xa3\\x88\\xa4\\xa2@\\xa4\\xa2\\x81\\x82\\x93\\x85K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@O@\\xe3\\x88\\x85@\\x94\\x96\\xa2\\xa3@\\x83\\xa4\\x99\\x99\\x85\\x95\\xa3@\\xa5\\x85\\x99\\xa2\\x89\\x96\\x95@\\x96\\x86@\\xa3\\x88\\x89\\xa2@\\x97\\x81\\x83\\x92\\x81\\x87\\x85@\\x83\\x81\\x95@\\x82\\x85@\\x86\\x96\\xa4\\x95\\x84@\\x81\\xa3@@@@@@@O@O@\\x88\\xa3\\xa3\\x97\\xa2zaa\\xa6\\xa6\\xa6K\\x93\\x82\\x84\\xa2\\x96\\x86\\xa3\\xa6\\x81\\x99\\x85K\\x83\\x96\\x94@\\x81\\x95\\x84@\\x81\\xa3@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@O@\\x88\\xa3\\xa3\\x97\\xa2zaa\\xa6\\xa6\\xa6K\\x83\\x82\\xa3\\xa3\\x81\\x97\\x85K\\x96\\x99\\x87@\\x89\\x95@\\x86\\x89\\x93\\x85@\\xf3\\xf1\\xf2@M\\x83\\x88\\x85\\x83\\x92@\\xa3\\x88\\x85@\\xa4\\x97\\x84\\x81\\xa3\\x85\\xa2@\\x97\\x81\\x87\\x85]K@@O@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O\\xe0\\\\@``````````````````````````````````````````````````````````````@\\\\a@'", "lrecl": 80, "text": "/* -------------------------------------------------------------- *\\ | The TSO T\nransmit data that is being received is covered under  | | the GPL Version 3 Lice\nnse.                                     | |\n                            | | Welcome to SAVELAB - the ISPF Edit command to ma\nke using       | | Edit Labels worthwhile as they are now persistent and\n  | | thus usable.                                                   | |\n                                                        | | The most current ver\nsion of this package can be found at       | | https://www.lbdsoftware.com and a\nt                             | | https://www.cbttape.org in file 312 (check the\n updates page).  | |\n    |\\* -------------------------------------------------------------- */\n"}, "file": {"SLBD.SAVELAB.PDS": {"COPYR1": {"type": "PDSE", "DS1DSORG": 512, "DS1BLKL": 32720, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 8, "DVACLASS": 32, "DVAUNIT": 0, "DVAMAXRC": 32760, "DVACYL": 256, "DVATRK": 256, "DVATRKLN": 65535, "DVAOVHD": 0, "num_header_records": 0}, "COPYR2": {"deb": "b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "extents": ["b'\\x03\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x00\\x00\\x00\\x04\\x00\\x00\\x00'", "b'\\x00\\x0f8H\\x00\\x00\\x00\\x00\\x00\\x00\\x00~\\x00\\xff\\x7f\\x00'", "b'\\x00\\x0f8H\\x00\\x00\\x00\\x7f\\x00\\x00\\x00\\xfd\\x00\\xff\\x7f\\x00'", "b'\\x00\\x0f8H\\x00\\x00\\x00\\xfe\\x00\\x00\\x00\\xff\\x00\\xff\\x02\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$README": {"ttr": 19, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x17\\x00\"\\x01\\x18$?\\x01 \\x03\\x9f\\x17%\\x00y\\x00\\x01\\x00\\x00\\xe2\\xc1\\xe5\\xc5\\xd3\\xc1\\xc2@@@'", "ispf": {"version": "01.23", "flags": 0, "createdate": "2018-08-31T00:00:00", "modifydate": "2020-02-08T17:25:22", "lines": 121, "newlines": 1, "modlines": 0, "user": "SAVELAB"}, "text": "Welcome to the SAVELAB Package - see the Overview below for more\ninformation on SAVELAB.\n\nNote: If you downloaded from github then ignore the $RECV but you\n      should look at using zigi (https://zigi.rocks) for the clone\n      and installation.\n\nThis dataset contains the following members (which have meaningful ISPF\nstat userids):\n\n   $README  - what you are reading\n   $README2 - migration information from a pre-2.0 release\n   $RECV    - exec to run to expand the xmit members\n   $WHY     - brief why use ISPF Edit Labels\n   @MSG     - TSO Transmit message text\n   EXEC     - TSO Transmit (XMIT) REXX library\n   EXPORT   - SAVELAB export of the Savelab labels\n   PANELS   - TSO Transmit (XMIT) ISPF Panels Library\n\nAfter installing SAVELAB to experiment Edit the SAVELAB exec and use the\ncommand SAVELAB IMP dsn(SAVELAB) to restore the Edit Labels for it\n(where dsn is the restored dataset name for the EXPORT dataset).\n\nOverview\n\n   Name:      SAVELAB\n\n   Type:      ISPF Edit Command (Macro)\n\n  Function:    Save, Restore, or List Labels for an ISPF Edit\n               member.\n\n               Or List all existing labels in the data.\n               - thanks to Alex B.\n\n               This is accomplished by saving the label and\n               associated line numbers in a row in an ISPF\n               Table that is stored in the user ISPPROF PDS.\n\n               When the SAVELAB is called it will define an\n               alias to the END/PF3 commands to call the\n               SAVELABE exec to save all active labels for\n               the current member prior to ending the ISPF\n               Edit session.\n\n               Along with SAVELABE an alias for SAVE will be\n               defined for SAVELABS so any overt SAVE will\n               also save all the active labels.\n\n               During a Restore (SAVELAB with no option) and\n               an Import the code checks the number of records\n               in the current member with the number of\n               records when a SAVELAB Save or EXport were\n               performed. If different then a warning message\n               is generated as the labels may not be restored\n               to the correct record locations.\n\n  Syntax:      %SAVELAB option\n\n               option may be:\n               blank    - restore saved labels (default)\n                          of this member\n               EXPORT   - export the label set to a pds\n               HELP     - show help info (alias is ?)\n               IMAC     - Like Quiet but if not saved labels\n                          will not enable automatic saving\n                          ** Ideal use in an Initial Macro\n               IMPORT   - import the label set from a pds\n               LIST     - Selection list of active labels\n               QUIET    - do not report if no labels avail\n               SAVE     - save all labels\n               SHOW     - alias of LIST\n               SHOW ALL - display the ISPF table\n                        - includes the ability to Use another\n                          dataset(mem) labels in the current member\n\n               Abbreviations:\n               E        - Export dsn\n               H        - Help\n               I        - Import dsn\n               IM       - IMAC\n               L        - List active labels selection table\n               Q        - Quiet\n               S        - Save\n               SH       - SHOW\n               SH A     - SHOW ALL\n\n  Processing:\n               The labels for a dataset(member) are saved in\n               a row in the SAVELAB Table in the ISPPROF PDS.\n               Each dataset(member) is added to this table\n               in its own row variables.\n\n               Use SHOW ALL to view a table list of all saved\n               entries in the ISPF Table.\n\n               Export and Import require a PDS data set name\n               be provided. The member used will be the\n               member name of the active member.\n\n               If the PDS does not exist it will be allocated.\n\n               An Export will force a SAVELAB Save before\n               doing an export.\n\n  Notes:    1. If the ISPF Session abnormally terminates the\n               updates may not be saved in the table.\n            2. This code may be installed using a different\n               name if SAVELAB is too long (e.g. SL)\n               - if you do that then you MUST rename the\n                 SAVELABE code which calls SAVELAB.\n               ** When SAVELAB is used the 1st time to restore\n                 it defines an alias of SL for SAVELAB\n            3. All members/labels info is saved in a table\n               in the users ISPF Profile dataset.\n            4. The same member in different data sets MAY be\n               processed with No Conflicts.\n            5. Using the ISPF Compare, and some other tools,\n               can insert additional labels that you may not\n               want to save - just beware.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$README2": {"ttr": 11, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x02\\x00\\x02\\x00\\x01 \\x03/\\x01 \\x03/\\x061\\x00\\x10\\x00\\x10\\x00\\x00\\xe2\\xc1\\xe5\\xc5\\xd3\\xc1\\xc2@@@'", "ispf": {"version": "02.00", "flags": 2, "createdate": "2020-02-01T00:00:00", "modifydate": "2020-02-01T06:31:00", "lines": 16, "newlines": 16, "modlines": 0, "user": "SAVELAB"}, "text": "With SAVELAB 2.0 the saved labels are now available regardless of the ISPF\nProfile (applid) in use as the labels are now stored in an ISPF Table. During\nthe 1st use of SAVELAB 2.0 all the existing labels will be converted from the\nISPF Profile variable to a table (occurs only once so do this on the applid\nthat is most used).\n\nConversion can be done by using the pre 2.0 release to EXPORT the labels\nthat you care about and then IMPORT them using the 2.0 release.\n\nNOTE: - do this before using the SAVELAB 2.0 or the conversion will fail.\n\nIf you have used a previous version of SAVELAB (prior to version 1.16)\nthen you should install the SAVELABF exec and have your users use it.\n\nThis will update the # character in the ISPF Profile variable savelbl to\nthe % character since a # may be used in a member name.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$RECV": {"ttr": 13, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x02\\x00\\x01 \\x03\\x1f\\x01 \\x03/\\x06!\\x00p\\x00u\\x00\\x00\\xe2\\xc1\\xe5\\xc5\\xd3\\xc1\\xc2@@@'", "ispf": {"version": "01.04", "flags": 2, "createdate": "2020-01-31T00:00:00", "modifydate": "2020-02-01T06:21:00", "lines": 112, "newlines": 117, "modlines": 0, "user": "SAVELAB"}, "text": "/* this rexx exec is expected to be invoked by the EXEC command\n   thus:\n\n   EXec 'dsname($RECV)'\n\n   Prompting will occur for hlq and optional volser.\n\n   and it will then issue the TSO RECEIVE command for the\n   the following members to create these new data sets:\n\n   Member       Dataset\n   EXEC         hlq.EXEC\n   EXPORT       hlq.EXPORT\n   PANELS       hlq.PANELS\n\n   You will then need to copy these datasets/members into\n   datasets for production use.\n\n   After these data sets are created several of the members\n   of this install data set will be browsed.\n   */\n\n  parse source x1 x2 x3 x4 dsn .\n  x = PROMPT(\"ON\") /* enable prompting */\n\n  say \"Enter desired hlq for target data sets\",\n    \"(default is\" sysvar(\"syspref\")\".SAVELAB.NEW):\"\n  pull hlq\n  hlq = strip(hlq)\n\n  if hlq = \"\" then hlq = sysvar(\"syspref\")\".SAVELAB.NEW\"\n  hlq = translate(hlq)\n\n  say \"Enter optional volser for target data sets\",\n    \"default is to allow standard allocation to\",\n    \"find a volume.\"\n  pull volser\n  volser = strip(volser)\n\n  say \"Enter optional SYSOUT class for RECEIVE messages,\" ,\n      \"a null SYSOUT class is recommended.\"\n  pull sysout\n  sysout = strip(sysout)\n  if sysout <> \"\" then sys = \"sysout(\"sysout\")\"\n  else sys = \"\"\n\n  if volser <> \"\" then vol = \"vol(\"volser\")\"\n  else vol = \"\"\n\n  Say \"Using HLQ:\" hlq\n  if vol <> \"\" then\n  Say \"Using Volser:\" volser\n\n/* ----------------------------------------------- *\n * Check for an ISPF environment and then check to *\n * see if the receive target datasets exist. If so *\n * then compress  them before the receive.         *\n * ----------------------------------------------- */\n  if sysvar('sysispf') = \"ACTIVE\" then do\n    Address ISPEXEC\n    call do_comp   \"'\"hlq\".exec'\"\n    call do_comp   \"'\"hlq\".export'\"\n    call do_comp   \"'\"hlq\".panels'\"\n    Address TSO\n  end\n\n/* ------------------------------------------------------------ *\n * Process the TSO RECEIVE command on all the pertinent members *\n * ------------------------------------------------------------ */\n  queue \"dsn('\"hlq\".exec')\" vol sys\n  \"Receive inds('\"dsn\"(exec)')\"\n  queue \"dsn('\"hlq\".export')\" vol sys\n  \"Receive inds('\"dsn\"(export)')\"\n  queue \"dsn('\"hlq\".panels')\" vol sys\n  \"Receive inds('\"dsn\"(panels)')\"\n\n/* -------------------------------------------- *\n * If ISPF is active show key members in Browse *\n * -------------------------------------------- */\n  if sysvar('sysispf') <> \"ACTIVE\" then exit\n  Address ISPEXEC\n  say 'Do you want to browse important documenation members' ,\n    '- Y or N?'\n  pull reply\n  if left(reply,1) = 'Y' then do\n    \"Browse dataset('\"dsn\"($README)')\"\n    \"Browse dataset('\"dsn\"($README2)')\"\n    \"Browse dataset('\"dsn\"($WHY)')\"\n  end\n\n/* ------------------------------------------------- *\n * Now display a list of the received datasets using *\n * ISPF LMM services (ISPF 3.4)                      *\n * ------------------------------------------------- */\n  Address ISPExec\n  if vol <> \"\" then lmvol = \"VOLUME(\"vol\")\"\n  else lmvol = \"\"\n  \"LMDINIT LISTID(LISTID) LEVEL(\"hlq\")\" lmvol\n  \"LMDDISP LISTID(\"ListId\") Confirm(Yes)\",\n    \"View(Volume)\"\n  \"LMDFREE LISTID(\"ListId\")\"\n\n  Exit\n\nDo_Comp: procedure\n  arg compdsn\n  if sysdsn(compdsn) /= 'OK' then return\n  say \"Compressing:\"  compdsn\n  \"LMInit dataid(compress) enq(exclu) dataset(\"compdsn\")\"\n  \"LMComp Dataid(\"compress\")\"\n  \"LMFree Dataid(\"compress\")\"\n  return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$WHY": {"ttr": 15, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x02\\x00\\x01\\x18%\\x0f\\x01 \\x03\\x1f\\x088\\x00\\x8b\\x00!\\x00\\x00\\xe2\\xc1\\xe5\\xc5\\xd3\\xc1\\xc2@@@'", "ispf": {"version": "01.07", "flags": 2, "createdate": "2018-09-07T00:00:00", "modifydate": "2020-01-31T08:38:00", "lines": 139, "newlines": 33, "modlines": 0, "user": "SAVELAB"}, "text": "                        Why use ISPF Edit Labels?\n\nThat is a question that I've been asked by many who have rarely, if\never, used Edit Labels and for which I hope this helps.\n\nWhat are ISPF Edit Labels\n\n   ISPF Edit Labels are user defined labels that begin with a period and\n   overlay the record sequence number. Labels can be easily located\n   using the Locate command:  L .label\n\n   ISPF Edit Labels are typically used to limit the range of action for\n   some ISPF commands, and Edit Compare uses them to identify inserted\n   or changed records.\n\n   An ISPF Edit Label must be all alphabetic characters and are always\n   upper case (if entered in lower case they are converted to upper\n   case).\n\n   Some examples:\n\n   1. User generated labels:\n\n   .EXEC  //SYMBOLS  EXEC PGM=IEBGENER\n   000009 //SYSIN    DD  DUMMY\n   000010 //SYSUT1   DD  *,SYMBOLS=EXECSYS\n   .DATA   Test name  &NAME\n\n   2. Labels generated by ISPF Edit Compare:\n\n   000001 //T311LBDD JOB XXXEXCP9,T311LBD,\n   ====== //          NOTIFY=T311LBD,MSGCLASS=R\n   ====== //OUT       OUTPUT DEFAULT=YES,JESDS=ALL,OUTDISP=(HOLD,HOLD)\n   .OAAAA //             NOTIFY=T311LBD,MSGCLASS=R\n   .OAAAB //OUT      OUTPUT DEFAULT=YES,JESDS=ALL,OUTDISP=(HOLD,HOLD)\n   000004 //DISKMAP EXEC PGM=DISKMAP,PARM='MAP'\n\n   Since the sequence numbers are only 6 characters, and labels must\n   start with a period, that leaves 5 alphabetic characters for the\n   label.\n\nFirst why would anyone use ISPF Edit Labels?\n\n   To start with ISPF Edit Labels are transient. They go away when the\n   user uses RESET ALL, RESET LABEL, or just ends the ISPF Edit session.\n   This makes the time and effort of creating them, only to have them\n   cease to exist, a waste of time.\n\n   Another reason to not use ISPF Edit Labels is that there is no easy\n   way to get a list of the active labels. Thus if your memory suffers\n   short term memory failures, the labels can only be found with\n   scrolling or using the Locate Label Next command.\n\n   Now if ISPF Edit Labels could be retained across ISPF Edit sessions\n   that would make them infinitely more usable.  They would be even\n   more useful if they could be shared with others who are working on\n   the same data.\n\n   If the ISPF Edit Labels are meaningful and it is easy to find the\n   names of the active labels, then they are worth using.\n\nUsing ISPF Edit Labels with the SAVELAB Extension\n\n   The ISPF Edit SAVELAB Extension is an ISPF Edit Macro (command) that\n   makes using ISPF Edit Labels worthwhile. It does this by making it\n   easy to save, list, and restore ISPF Edit Labels.\n\n   The options available with SAVELAB are:\n\n   ERASE  (ERA) - Completely erase the ALL saved labels for ALL members\n   EXPORT (EX)  - Export the saved label set to a PDS\n                - EX pds-dsname\n                - Performs a Save first\n   FREE   (F)   - Free saved labels for this member\n                - FREE # (see Show Sum for the #) to free others\n   HELP   (H)   - Show this help info - alias is ?\n   IMAC   (IM)  - Option for an Initial Macro use to bypass messages and\n                  if no labels are found then bypass configuring to auto\n                  save labels.\n   IMPORT (IM)  - Import the saved label set from a PDS\n                - IM pds-dsname\n   LIST   (L)   - List all Active labels in the data\n   QUIET  (Q)   - Option for an Initial Macro use to bypass messages\n   SAVE   (S)   - Save all labels\n   SHOW   (SH)  - Show the ISPF variable info on the saved labels\n   SHOW ALL (SH A) - Show all members with saved labels\n   SHOW SUM (SH S) - Show a summary all saved label sets\n\n   When used with no options SAVELAB will restore the saved label set\n   for the member.  The saved label set is saved in a ISPF Table in\n   the ISPPROF dataset.\n\n   Note that during the Label restore process a comparison is made\n   between the number of records in the member at the time of the save\n   and at the time of the restore. If the count is different then a\n   warning message is issued informing the user that it is very possible\n   that labels were restored on incorrect records.\n\n   The Save option will save all active ISPF Edit labels in the ISPF\n   Table using the dataset name and member as the key.\n\n   The ISPF Edit labels are saved in the table using ISPF variables.\n\n   When SAVELAB is used during the ISPF Edit Session it will\n   configure the ISPF Edit END command to call the SAVELABE routine\n   which will perform a SAVELAB Save, then an ISPF Edit SAVE, and then\n   exit ISPF Edit. This is to help ensure that the active labels are\n   saved. It will also define SL as an alias of SAVELAB for the life of\n   the ISPF Edit session.\n\n   Beware: If you use ISPF Edit Compare, or some other ISPF Edit\n   commands, that some reset all labels and generate their own. Thus to\n   make sure that only your labels are saved it is important that after\n   using one of these types of commands that the ISPF Edit RESET LABEL\n   be used followed by the SAVELAB command to restore your labels.\n\n   The SHOW option by itself will display all of the active members\n   saved label set. Adding ALL will display all of the saved label sets.\n   Adding SUM, instead of ALL, will display a summary of all saved label\n   sets along with a number that can be used with the FREE option to\n   free up space in the ISPF Profile variable.\n\n   The IMport and EXport options utilize an external PDS, or PDSE, to\n   store the saved label set for the member. The member name in the data\n   set is the active member name being Edited. This means if Editing the\n   same name in multiple data sets that the EXport data set should be\n   unique or the saved label set of JCL member XYZ would overlay the\n   saved label set of REXX member XYZ, causing a lot of confusion in the\n   use of the restored labels.\n\n   The syntax for IMport and EXport requires a parameter of the target\n   PDS, or PDSE, to be specified:\n\n        e.g. EXport SL.PDSE\n             EXport SL.PDSE\n\n   If the data set does not exist then it will be allocated as a PDSE\n   using a primary and secondary space of 15 tracks. As a PDSE there is\n   no need to define directory blocks.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@MSG": {"ttr": 17, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x02\\x00\\x01 \\x03/\\x01 \\x03/\\x07'\\x00\\x0e\\x00\\x07\\x00\\x00\\xe2\\xc1\\xe5\\xc5\\xd3\\xc1\\xc2@@@\"", "ispf": {"version": "01.03", "flags": 2, "createdate": "2020-02-01T00:00:00", "modifydate": "2020-02-01T07:27:00", "lines": 14, "newlines": 7, "modlines": 0, "user": "SAVELAB"}, "text": "/* -------------------------------------------------------------- *\\\n | The TSO Transmit data that is being received is covered under  |\n | the GPL Version 3 License.                                     |\n |                                                                |\n | Welcome to SAVELAB - the ISPF Edit command to make using       |\n | Edit Labels worthwhile as they are now persistent and          |\n | thus usable.                                                   |\n |                                                                |\n | The most current version of this package can be found at       |\n | https://www.lbdsoftware.com and at                             |\n | https://www.cbttape.org in file 312 (check the updates page).  |\n |                                                                |\n\\* -------------------------------------------------------------- */\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "EXEC": {"ttr": 23, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01 \\x03\\x9f\\x01 \\x03\\x9f\\x17&\\x03z\\x03z\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-02-08T00:00:00", "modifydate": "2020-02-08T17:26:05", "lines": 890, "newlines": 890, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "EXPORT": {"ttr": 31, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01 \\x03\\x9f\\x01 \\x03\\x9f\\x17&\\x00\\x16\\x00\\x16\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-02-08T00:00:00", "modifydate": "2020-02-08T17:26:05", "lines": 22, "newlines": 22, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "PANELS": {"ttr": 27, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x01 \\x03\\x9f\\x01 \\x03\\x9f\\x17&\\x01*\\x01*\\x00\\x00\\xe7\\xd4\\xc9\\xe3@@@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2020-02-08T00:00:00", "modifydate": "2020-02-08T17:26:05", "lines": 298, "newlines": 298, "modlines": 0, "user": "XMIT"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT313/CBT.V500.FILE313.PDS/SAVELAB.xmi", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT313/CBT.V500.FILE313.PDS", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}