         TITLE 'Y2KTDOW - DETERMINES DATE FOR GIVEN DAY REFERENCE'
*                                                                     *
***********************************************************************
*                                                                     *
*   YY   YY   222   KK   KK TTTTTTTT DDDDDD   OOOOO  WW   WW          *
*   YY   YY  2   2  KK  KK     TT    DD   DD OO   OO WW   WW          *
*   YY   YY      2  KK KK      TT    DD   DD OO   OO WW   WW          *
*    YY YY       2  KKKK       TT    DD   DD OO   OO WW   WW          *
*     YYY     222   KKKK       TT    DD   DD OO   OO WW W WW          *
*     YY     2      KK KK      TT    DD   DD OO   OO WWWWWWW          *
*     YY     2      KK  KK     TT    DD   DD OO   OO WWW WWW          *
*     YY     22222  KK   KK    TT    DDDDDD   OOOOO   W   W           *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
*    THIS SUBROUTINE DETERMINES THE DATE FOR A GIVEN DAY OF WEEK      *
*    USING A GIVEN GREGORIAN DATE (MMDDYYYY) AS A REFERENCE DATE      *
*                                                                     *
*    1.  VALID INPUT YEARS FOR THIS ROUTINE ARE THE YEARS 1601        *
*        THROUGH 3399 A. D. (INCLUSIVE)                               *
*                                                                     *
*    2.  VALID INPUT MONTH VALUES FOR THIS ROUTINE ARE 01 THROUGH 12. *
*                                                                     *
*    3.  VALID INPUT DAY VALUES FOR THIS ROUTINE ARE 01 THROUGH 31    *
*        WITH EXCEPTIONS FOR THE MONTHS LISTED:                       *
*             MONTH          MAXIMUM DAY VALUE                        *
*              04                    30                               *
*              06                    30                               *
*              09                    30                               *
*              11                    30                               *
*              02                    28                               *
*              02 DURING LEAP YEAR   29                               *
*                                                                     *
*    4.  THE DATE FORMAT MUST BE MMDDYYYY, WHERE MM = THE 2 DIGIT     *
*        MONTH VALUE, DD = THE 2 DIGIT DAY VALUE, AND YYYY = THE      *
*        4 DIGIT YEAR VALUE.                                          *
*                                                                     *
*    5.  FIVE FIELDS ARE PASSED AS PARAMETERS TO THE ROUTINE:         *
*        1)  AN 8 BYTE FIELD CONTAINING THE REFERENCE DATE (IN        *
*            ZONED-DECIMAL FORMAT),                                   *
*        2)  A 1 BYTE FIELD CONTAINING 'P' TO SPECIFY THE PREVIOUS    *
*            DATE OR 'N' TO SPECIFY THE NEXT DATE TO BE RETURNED,     *
*        3)  A 1 BYTE FIELD CONTAINING THE NUMERIC DESIGNATION OF     *
*            THE DAY OF WEEK TO BE RETURNED (0=MONDAY, 1=TUESDAY, ... *
*            6=SUNDAY),                                               *
*        4)  A 1 BYTE ZONED-DECIMAL RETURN CODE, AND                  *
*        5)  AN 8 BYTE FIELD IN WHICH THE DERIVED DATE (IN            *
*            ZONED-DECIMAL FORMAT) WILL BE PLACED.                    *
*        THE ROUTINE WILL NOT ALTER THE FIELDS PASSED TO IT.          *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR ALC CALLERS:                    *
*                                                                     *
*                      CALL  Y2KTDOW,(DATE)                           *
*                         . . .                                       *
*             DATE     DS    ZL8'04151997'                            *
*             NORP     DS    CL1'N'                                   *
*             DAYN     DS    ZL1'3'                                   *
*             RC       DS    ZL1'0'                                   *
*             NEWDATE  DS    ZL8'0'                                   *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR COBOL CALLERS:                  *
*                                                                     *
*             01  TDOW-PARAMETERS.                                    *
*                 02  DATE    PIC 9(8) VALUE 04151997.                *
*                 02  NORP    PIC X(1) VALUE 'N'.                     *
*                 02  DAYN    PIC 9(1) VALUE 3.                       *
*                 02  RC      PIC 9(1) VALUE 0.                       *
*                 02  NEWDATE PIC 9(8) VALUE 0.                       *
*             CALL 'Y2KTDOW' USING TDOW-PARAMETERS.                   *
*                                                                     *
*    6.  THE POSSIBLE VALUES FOR THE RETURN CODE FIELD ARE:           *
*                                                                     *
*        0 INDICATES SUCCESSFUL EXECUTION OF THE ROUTINE.             *
*                                                                     *
*        2 INDICATES INVALID DATA WAS FOUND IN THE DATE FIELD.        *
*        INVALID DATA ARE DETERMINED IF THE FIELD'S LOW ORDER         *
*        BYTE'S ZONE CONTAINS AN INVALID SIGN, (NOT ONE OF            *
*        X'C', X'A', X'E', OR X'F'), OR IF THE PRECEDING BYTES'       *
*        ZONES ARE OTHER THAN X'F', OR IF ANY BYTE'S LOW ORDER        *
*        NIBBLE CONTAINS A VALUE GREATER THAN X'9'.                   *
*                                                                     *
*        4 INDICATES THE VALUE OF THE YEAR SPECIFIED WAS NOT IN       *
*        THE RANGE SPECIFIED IN 1 (ABOVE).                            *
*                                                                     *
*        6 INDICATES THE VALUE OF THE MONTH SPECIFIED WAS NOT IN      *
*        THE RANGE SPECIFIED IN 2 (ABOVE).                            *
*                                                                     *
*        8 INDICATES THE VALUE OF THE DAY SPECIFIED WAS NOT IN        *
*        THE RANGE SPECIFIED IN 3 (ABOVE).                            *
*                                                                     *
*        3 INDICATES THE VALUE OF THE PREVIOUS/NEXT INDICATOR WAS     *
*        NOT VALID ('N' OR 'P').                                      *
*                                                                     *
*        5 INDICATES THAN AN INVALID DATE WILL BE DEVELOPED WHEN      *
*        THE TARGET DATE IS CREATED (OUTSIDE OF YEAR RANGE LISTED     *
*        IN 1 ABOVE).                                                 *
*                                                                     *
*        7 INDICATES THE VALUE OF THE DAY OF THE WEEK WAS NOT IN      *
*        THE ALLOWABLE RANGE (0-6).                                   *
*                                                                     *
*    4.  UPON SUCCESSFUL EXECUTION, THE DERIVED DATE WILL BE          *
*        PLACED IN THE 5TH PARAMETER FIELD.  IF THE RETURN CODE IS    *
*        A NON-ZERO VALUE (UNSUCCESSFUL EXECUTION), THE 5TH           *
*        PARAMETER FIELD WILL CONTAIN ZEROS.                          *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
         EJECT
Y2KTDOW  CSECT
*         PRINT NOGEN
         EYEC  'COMPUTE NEW DATE USING DOW+OFFSET'
*
         SAVE  (14,12)                 SAVE CALLER'S REGISTERS
*
         LR    R12,R15                 LOAD BASE WITH ENTRY ADDRESS
         USING Y2KTDOW,R12             ESTABLISH ADDRESSABILITY
*
         L     R11,0(,R1)              LOAD A(PARAMETERS)
         USING $PARMS,R11              ESTABLISH ADDRESSABILITY
*
         GETMAIN R,LV=$DYNLEN          GETMAIN DYNAMIC WORKAREA
         LR    R10,R1                  SAVE A(MEMORY)
*
         ST    R13,4(,R10)             STORE A(CALLER'S SAVE AREA)
         ST    R10,8(,R13)             BACK CHAIN A(MY SAVE AREA)
         LR    R13,R10                 SET A(MY SAVE AREA)
         USING $DYNMEM,R13             ESTABLISH ADDRESSABILITY
*
*    INSERT EYECATCHER MARKS AT BEGIN/END OF GETMAIN'D AREA.
*
         MVC   TOPFLAG,=C'Y2KTDOW GETMAIN BEGINS->'
         MVC   BOTFLAG,=C'<-Y2KTDOW GETMAIN ENDS'
*
*    INITIALIZE RETURN CODE AND DAY OF WEEK NUMBER.
*
         MVI   PRC,C'0'                ASSUME GOOD RETURN
         MVC   PRC+1(8),PRC            INITIALIZE RETURN DATE TO ZEROS
*
*    RETRIEVE DAY OF WEEK FOR DATE PASSED.
*
         MVC   DATED,PDATE             LOAD DATE TO PASS
         LA    R1,DOWNPARM             ADDRESS OF Y2KDOWN PARMS
         ST    R1,PLIST                STORE IN DYNAMIC AREA
         LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KDOWN)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    SEE IF DATE WE RECEIVED FROM CALLER PASSED EDITS IN Y2KDOWN.
*    THIS MEANS WE DON'T HAVE TO REPEAT THE EDIT CODE HERE <G>!
*
         MVC   PRC,RCD                 ADOPT RECEIVED RETURN CODE
         CLI   RCD,C'0'                WAS EXECUTION SUCCESSFUL?
         BNE   RETURN                  IF NOT, EXIT TO CALLER
*
*    TEST DIRECTION CODE FOR INVALID VALUE
*
         CLI   PDIR,C'P'               WAS 'PREVIOUS' SPECIFIED?
         BE    P2OK                    YES, OK
         CLI   PDIR,C'N'               WAS 'NEXT' SPECIFIED?
         BE    P2OK                    YES, OK
         MVI   PRC,C'3'                INDICATE ERROR
         B     RETURN                  AND RETURN TO CALLER
*
*    TEST TARGET DAY OF WEEK NUMBER FOR INVALID VALUE
*
P2OK     XR    R1,R1                   CLEAR WORK REGISTER
         IC    R1,PDOW                 GET FORMAT CODE
         LA    R2,X'F0'                LOWEST VALID CODE
         LA    R3,7                    TEST THROUGH X'F6'
DOWLOOP  CR    R1,R2                   IS FORMAT VALID?
         BE    P3OK                    YES, CONTINUE
         LA    R2,1(,R2)               INCREMENT VALID CODE
         BCT   R3,DOWLOOP              CONTINUE TESTING NEXT CODE
         MVI   PRC,C'7'                INDICATE INVALID CODE
         B     RETURN                  AND RETURN TO CALLER
*
*    INITIALIZE Y2KPROJ PARAMETER FIELDS.
*
P3OK     MVC   DATEP,PDATE             LOAD REFERENCE DATE
         MVC   OFFSETP,=C'000000'      INITIALIZE OFFSET
         LA    R1,PROJPARM             ADDRESS OF Y2KPROJ PARMS
         ST    R1,PLIST                STORE IN DYNAMIC AREA
*
*    SELECT CALCULATION BASED ON DIRECTION OF INCREMENT
*
         ZAP   WORK,=P'7'              INITIALIZE WORK FIELD
         CLI   PDIR,C'N'               GOING TO NEXT?
         BE    NEXTDAY                 YES
PREVDAY  PACK  P1(1),DOW(1)            PACK CURRENT DAY NUMBER
         AP    WORK,P1                 ADD TO WORK FIELD
         PACK  P1(1),PDOW(1)           PACK TARGET DAY NUMBER
         SP    WORK,P1                 SUBTRACT FROM WORK FIELD
         CP    WORK,=P'7'              IS RESULT GREATER THAN 7?
         BNH   PREVFINI                NO, GO FINISH
         SP    WORK,=P'7'              ADJUST FOR OVERSHOOT
PREVFINI UNPK  OFFSETP+5(1),WORK+1(1)  UNPACK COMPUTED OFFSET
         MVZ   OFFSETP+5(1),=X'D0'     NEGATIVE SIGN
         B     FINI                    BRANCH TO COMMON FINISH
*
NEXTDAY  PACK  P1(1),DOW(1)            PACK CURRENT DAY NUMBER
         SP    WORK,P1                 SUBTRACT FROM WORK FIELD
         PACK  P1(1),PDOW(1)           PACK TARGET DAY NUMBER
         AP    WORK,P1                 ADD TO WORK FIELD
         CP    WORK,=P'7'              IS RESULT GREATER THAN 7?
         BNH   NEXTFINI                NO, GO FINISH
         SP    WORK,=P'7'              ADJUST FOR OVERSHOOT
NEXTFINI UNPK  OFFSETP+5(1),WORK+1(1)  UNPACK COMPUTED OFFSET
         MVZ   OFFSETP+5(1),=X'C0'     POSITIVE SIGN
*
*    CALL TO Y2KPROJ TO GET TARGET DATE
*
FINI     LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KPROJ)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    IF RETURN CODE FROM Y2KPROJ IS '5', THE DATE THAT WOULD BE
*    DEVELOPED WOULD BE OUTSIDE OF RANGE OF VALID YEARS.
*
         MVC   PRC,RCP                 ADOPT RECEIVED RETURN CODE
         CLI   RCP,C'0'                WAS EXECUTION SUCCESSFUL?
         BNE   RETURN                  IF NOT, EXIT TO CALLER
*
*    MOVE RETURNED DATE TO CALLER'S AREA
*
         MVC   PNEWDATE(8),NUDATEP
*
*    RESTORE REGISTERS, FREE STORAGE, AND RETURN
*
RETURN   LR    R1,R13                  LOAD ADDRESS OF GETMAINED AREA
         L     R13,4(,R13)             RELOAD PREVIOUS SAVE AREA
         LA    R0,$DYNLEN              LOAD LENGTH OF GETMAINED AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED AREA
         RETURN (14,12),RC=0           RETURN TO CALLER WITH RC=0
*
         LTORG
         EJECT
* ******************************************************************* *
* ***************************** EQUATES ***************************** *
* ******************************************************************* *
         YREGS
* ******************************************************************* *
         EJECT
* ******************************************************************* *
* ***************************** DSECTS ****************************** *
* ******************************************************************* *
$DYNMEM  DSECT                         DYNAMICALLY ALLOCATED MEMORY
SAVEAREA DS    18F                     REGISTER SAVE AREA
TOPFLAG  DS    CL24                    EYECATCHER
PLIST    DS    A                       PARMLIST ADDR FOR SUB CALLS
DOWNPARM DS    0H                      PARAMETERS FOR Y2KDOWN
DATED    DS    CL8                       DATE INPUT
RCD      DS    CL1                       RETURN CODE
DOW      DS    ZL1                       DAY OF WEEK
PROJPARM DS    0H                      PARAMETERS FOR Y2KPROJ
DATEP    DS    CL8                       DATE INPUT
OFFSETP  DS    ZL6                       OFFSET IN DAYS
RCP      DS    CL1                       RETURN CODE
NUDATEP  DS    CL8                       NEW DATE
WORK     DS    PL2                     WORK FIELD FOR CALCULATION
P1       DS    PL1                     WORK FIELD FOR CALCULATION
BOTFLAG  DS    CL22                    EYECATCHER
*
$DYNLEN  EQU   (*-$DYNMEM)             LENGTH OF GETMAIN'D AREA
*
$PARMS   DSECT                         PARAMETERS FROM/TO CALLER
PDATE    DS    CL8                     REFERENCE DATE
PDIR     DS    CL1                     DIRECTION AWAY FROM
PDOW     DS    CL1                     TARGET DAY OF WEEK
PRC      DS    CL1                     RETURN CODE (0/2-6/8)
PNEWDATE DS    CL8                     NEW DATE
* ******************************************************************* *
         END
