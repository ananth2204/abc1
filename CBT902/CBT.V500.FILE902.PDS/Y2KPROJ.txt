         TITLE 'Y2KPROJ - INCREMENT/DECREMENT GREGORIAN DATE'
*                                                                     *
*   YY   YY   222   KK   KK PPPPPP  RRRRRR   OOOOO       JJ           *
*   YY   YY  2   2  KK  KK  PP   PP RR   RR OO   OO      JJ           *
*   YY   YY      2  KK KK   PP   PP RR   RR OO   OO      JJ           *
*    YY YY       2  KKKK    PP   PP RR   RR OO   OO      JJ           *
*     YYY     222   KKKK    PPPPPP  RRRRRR  OO   OO      JJ           *
*     YY     2      KK KK   PP      RR RR   OO   OO JJ   JJ           *
*     YY     2      KK  KK  PP      RR  RR  OO   OO JJ   JJ           *
*     YY     22222  KK   KK PP      RR   RR  OOOOO   JJJJJ            *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
*    THIS SUBROUTINE INCREMENTS OR DECREMENTS A GIVEN GREGORIAN       *
*    DATE (MMDDYYYY) BY A SPECIFIED NUMBER OF DAYS                    *
*                                                                     *
*    1.  VALID INPUT YEARS FOR THIS ROUTINE ARE THE YEARS 1601        *
*        THROUGH 3399 A. D. (INCLUSIVE)                               *
*                                                                     *
*    2.  VALID INPUT MONTH VALUES FOR THIS ROUTINE ARE 01 THROUGH 12. *
*                                                                     *
*    3.  VALID INPUT DAY VALUES FOR THIS ROUTINE ARE 01 THROUGH 31    *
*        WITH EXCEPTIONS FOR THE MONTHS LISTED:                       *
*             MONTH          MAXIMUM DAY VALUE                        *
*              04                    30                               *
*              06                    30                               *
*              09                    30                               *
*              11                    30                               *
*              02                    28                               *
*              02 DURING LEAP YEAR   29                               *
*                                                                     *
*    4.  THE DATE FORMAT MUST BE MMDDYYYY, WHERE MM = THE 2 DIGIT     *
*        MONTH VALUE, DD = THE 2 DIGIT DAY VALUE, AND YYYY = THE      *
*        4 DIGIT YEAR VALUE.                                          *
*                                                                     *
*    5.  FOUR FIELDS ARE PASSED AS PARAMETERS TO THE ROUTINE:         *
*        1)  AN 8 BYTE FIELD CONTAINING THE DATE TO BE INCR/          *
*            DECREMENTED (IN ZONED-DECIMAL FORMAT),                   *
*        2)  A 6 BYTE FIELD CONTAINING THE INCREMENTAL VALUE (IN      *
*            ZONED-DECIMAL FORMAT, NEGATIVE OR POSITIVE),             *
*        3)  A 1 BYTE ZONED-DECIMAL RETURN CODE, AND                  *
*        4)  AN 8 BYTE FIELD WHICH WILL RECEIVE THE RESULTING         *
*            GREGORIAN DATE (IN ZONED-DECIMAL FORMAT).                *
*        THE ROUTINE WILL NOT ALTER THE DATE AND INCREMENT FIELDS     *
*        PASSED TO IT.                                                *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR ALC CALLERS:                    *
*                                                                     *
*                      CALL  Y2KPROJ,(DATE)                           *
*                         . . .                                       *
*             DATE     DS    ZL8'01011997'                            *
*             INCR     DS    ZL6'00003N'     NOTE: -35 DAYS           *
*             RC       DS    ZL1'0'                                   *
*             NUDATE   DS    ZL8'00000000'                            *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR COBOL CALLERS:                  *
*                                                                     *
*             01  PROJ-PARAMETERS.                                    *
*                 02  DATE   PIC 9(8) VALUE 01011997.                 *
*                 02  INCR   PIC S9(6) VALUE -35.                     *
*                 02  RC     PIC 9(1) VALUE 0.                        *
*                 02  NUDATE PIC 9(8) VALUE ZERO.                     *
*             CALL 'Y2KPROJ' USING PROJ-PARAMETERS.                   *
*                                                                     *
*    6.  THE POSSIBLE VALUES FOR THE RETURN CODE FIELD ARE:           *
*                                                                     *
*        0 INDICATES SUCCESSFUL EXECUTION OF THE ROUTINE.             *
*                                                                     *
*        2 INDICATES INVALID DATA WAS FOUND IN THE DATE FIELD.        *
*        INVALID DATA ARE DETERMINED IF THE FIELD'S LOW ORDER         *
*        BYTE'S ZONE CONTAINS AN INVALID SIGN, (NOT ONE OF            *
*        X'C', X'D' OR X'F'), OR IF THE PRECEDING BYTES' ZONES        *
*        ARE OTHER THAN X'F', OR IF ANY BYTE'S LOW ORDER NIBBLE       *
*        CONTAINS A VALUE GREATER THAN X'9'.                          *
*                                                                     *
*        4 INDICATES THE VALUE OF THE YEAR SPECIFIED WAS NOT IN       *
*        THE RANGE SPECIFIED IN 1 (ABOVE).                            *
*                                                                     *
*        6 INDICATES THE VALUE OF THE MONTH SPECIFIED WAS NOT IN      *
*        THE RANGE SPECIFIED IN 2 (ABOVE).                            *
*                                                                     *
*        8 INDICATES THE VALUE OF THE DAY SPECIFIED WAS NOT IN        *
*        THE RANGE SPECIFIED IN 3 (ABOVE).                            *
*                                                                     *
*        3 INDICATES INVALID DATA WAS FOUND IN THE INCREMENT FIELD.   *
*        INVALID DATA ARE DETERMINED IF THE FIELD'S LOW ORDER         *
*        BYTE'S ZONE CONTAINS AN INVALID SIGN, (NOT ONE OF            *
*        X'C', X'D' OR X'F'), OR IF THE PRECEDING BYTES' ZONES        *
*        ARE OTHER THAN X'F', OR IF ANY BYTE'S LOW ORDER NIBBLE       *
*        CONTAINS A VALUE GREATER THAN X'9'.                          *
*                                                                     *
*        5 INDICATES THAN AN INVALID DATE WILL BE DEVELOPED WHEN      *
*        THE INPUT DATE IS INCREMENTED BY THE SPECIFIED AMOUNT        *
*        (OUTSIDE OF YEAR RANGE LISTED IN 1 ABOVE).                   *
*                                                                     *
*    7.  UPON SUCCESSFUL EXECUTION, THE RESULTING DATE IS PLACED      *
*        IN THE 4TH PARAMETER.  IF THE RETURN CODE IS A NON-ZERO      *
*        VALUE (UNSUCCESSFUL EXECUTION), THE 4TH PARAMETER WILL       *
*        CONTAIN ZEROS.                                               *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
         EJECT
Y2KPROJ  CSECT
*        PRINT NOGEN
         EYEC  'COMPUTE DATE USING OFFSET FROM GIVEN DATE'
*
         SAVE  (14,12)                 SAVE CALLER'S REGISTERS
*
         LR    R12,R15                 LOAD BASE WITH ENTRY ADDRESS
         USING Y2KPROJ,R12             ESTABLISH ADDRESSABILITY
*
         L     R11,0(,R1)              LOAD A(PARAMETERS)
         USING $PARMS,R11              ESTABLISH ADDRESSABILITY
*
         GETMAIN R,LV=$DYNLEN          GETMAIN DYNAMIC WORKAREA
         LR    R10,R1                  SAVE A(MEMORY)
*
         ST    R13,4(,R10)             STORE A(CALLER'S SAVE AREA)
         ST    R10,8(,R13)             BACK CHAIN A(MY SAVE AREA)
         LR    R13,R10                 SET A(MY SAVE AREA)
         USING $DYNMEM,R13             ESTABLISH ADDRESSABILITY
*
*    INSERT EYECATCHER MARKS AT BEGIN/END OF GETMAIN'D AREA.
*
         MVC   TOPFLAG,=C'Y2KPROJ GETMAIN BEGINS->'
         MVC   BOTFLAG,=C'<-Y2KPROJ GETMAIN ENDS'
*
*    INITIALIZE RETURN CODE AND ANUM PARAMETER FIELDS.
*
         MVI   PRC,C'0'                ASSUME GOOD RETURN
         MVC   PRC+1(8),PRC            NULL NEW DATE
*
*    RETRIEVE ASTRONOMICAL NUMBER FOR DATE PASSED
*
         MVC   DATEG,PDATE             LOAD DATE TO PASS
         LA    R1,GTOAPARM             ADDRESS OF Y2KGTOA PARMS
         ST    R1,PLIST                STORE IN DYNAMIC AREA
         LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KGTOA)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    SEE IF DATE WE RECEIVED FROM CALLER PASSED EDITS IN Y2KGTOA.
*    THIS MEANS WE DON'T HAVE TO REPEAT THE EDIT CODE HERE <G>!
*
         MVC   PRC,RCG                 ADOPT RECEIVED RETURN CODE
         CLI   RCG,C'0'                WAS EXECUTION SUCCESSFUL?
         BNE   RETURN                  IF NOT, EXIT TO CALLER
*
*    TEST INCREMENT/DECREMENT VALUE FOR INVALID CHARACTER
*
         LA    R2,PINCR                ADDRESS PASSED INCREMENT
         LA    R3,5                    LENGTH MINUS 1
P2VLOOP  CLI   0(R2),X'F0'             TEST LESS THAN C'0'
         BL    P2ERR1                  IF YES, INCR CONTAINS BAD DATA
         CLI   0(R2),X'F9'             TEST GREATER THAN C'9'
         BH    P2ERR1                  IF YES, INCR CONTAINS BAD DATA
         LA    R2,1(0,R2)              ADDRESS NEXT BYTE
         BCT   R3,P2VLOOP              CONTINUE TESTING
         IC    R3,0(,R2)               LOAD RIGHT-MOST CHARACTER
         LR    R4,R3                   COPY INTO R4
         N     R3,=F'15'               ISOLATE DIGIT PORTION
         CH    R3,=H'9'                TEST GREATER THAN 9
         BH    P2ERR1                  IF YES, INCR CONTAINS BAD DATA
         SRL   R4,4                    ISOLATE ZONE PORTION
         CH    R4,=H'12'               TEST FOR 'C' ZONE
         BE    P2OK                    IF YES, INCR IS VALID NUMERIC
         CH    R4,=H'13'               TEST FOR 'D' ZONE
         BE    P2OK                    IF YES, INCR IS VALID NUMERIC
         CH    R4,=H'15'               TEST FOR 'F' ZONE
         BE    P2OK                    IF YES, INCR IS VALID NUMERIC
*
*    INCREMENT CONTAINED AN INVALID CHARACTER
*
P2ERR1   MVI   PRC,C'3'                INDICATE BAD DATA
         B     RETURN                  AND RETURN TO CALLER
*
*    ADD INCREMENT TO ASTRO NUMBER FOR ORIGIN DATE.
*
P2OK     PACK  WORK(4),PINCR(6)        PACK THE INCREMENT
         PACK  WORK2(4),ANUMG(7)       AND THE ASTRO #
         AP    WORK(4),WORK2(4)        ADD THEM
*
*    NOW MAKE SURE RESULTING DATE WILL BE IN ALLOWABLE RANGE.
*
         CP    WORK,=P'2305814'        WILL YEAR BE LESS THAN 1601?
         BL    P2ERR2                  IF YES, RETURN ERROR
         CP    WORK,=P'2962884'        OR GREATER THAN 3399?
         BNH   GETDATE                 IF NOT, GET THE DATE
*
*    NEW DATE WOULD BE OUT OF RANGE, SO INDICATE ERROR.
*
P2ERR2   MVI   PRC,C'5'                INDICATE BAD VALUE
         B     RETURN                  AND RETURN TO CALLER
*
*    USE Y2KATOG TO BUILD NEW DATE.
*
GETDATE  UNPK  ANUMA(7),WORK(4)        UNPACK NEW ASTRO #
         OI    ANUMA+6,X'F0'           CLEAR SIGN
         LA    R1,ATOGPARM             ADDRESS OF Y2KATOG PARMS
         ST    R1,PLIST                STORE IN DYNAMIC AREA
         LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KATOG)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    PLACE DATE IN CALLER'S STORAGE.
*
         MVC   PNUDATE(8),DATEA        RETURNED DATE
*
*    RESTORE REGISTERS, FREE STORAGE, AND RETURN
*
RETURN   LR    R1,R13                  LOAD ADDRESS OF GETMAINED AREA
         L     R13,4(,R13)             RELOAD PREVIOUS SAVE AREA
         LA    R0,$DYNLEN              LOAD LENGTH OF GETMAINED AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED AREA
         RETURN (14,12),RC=0           RETURN TO CALLER WITH RC=0
*
         LTORG
         EJECT
* ******************************************************************* *
* ***************************** EQUATES ***************************** *
* ******************************************************************* *
         YREGS
* ******************************************************************* *
         EJECT
* ******************************************************************* *
* ***************************** DSECTS ****************************** *
* ******************************************************************* *
$DYNMEM  DSECT                         DYNAMICALLY ALLOCATED MEMORY
SAVEAREA DS    18F                     REGISTER SAVE AREA
TOPFLAG  DS    CL24                    EYECATCHER
PLIST    DS    A                       PARMLIST ADDR FOR SUB CALLS
GTOAPARM DS    0H                      PARAMETERS FOR Y2KGTOA
DATEG    DS    CL8                       INPUT DATE
RCG      DS    CL1                       RETURN CODE
ANUMG    DS    ZL7                       ASTRO NUMBER
ATOGPARM DS    0H                      PARAMETERS FOR Y2KATOG
ANUMA    DS    ZL7                       ASTRO NUMBER
RCA      DS    CL1                       RETURN CODE
DATEA    DS    CL8                       OUTPUT DATE
WORK     DS    PL4                     CALCULATION WORK FIELD
WORK2    DS    PL4                     CALCULATION WORK FIELD
BOTFLAG  DS    CL22                    EYECATCHER
*
$DYNLEN  EQU   (*-$DYNMEM)             LENGTH OF GETMAIN'D AREA
*
$PARMS   DSECT                         PARAMETERS FROM/TO CALLER
PDATE    DS    CL8                     DATE TO BE PROCESSED
PINCR    DS    ZL6                     AMOUNT OF INCREMENT
PRC      DS    CL1                     RETURN CODE (0/2-6/8)
PNUDATE  DS    CL8                     NEW DATE
* ******************************************************************* *
         END
