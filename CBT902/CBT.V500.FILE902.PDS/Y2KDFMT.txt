         TITLE 'Y2KDFMT - FORMAT DATE FOR OUTPUT'
*                                                                     *
*   YY   YY   222   KK   KK DDDDDD  FFFFFFF M     MTTTTTTTT           *
*   YY   YY  2   2  KK  KK  DD   DD FF      MM   MM   TT              *
*   YY   YY      2  KK KK   DD   DD FF      MMM MMM   TT              *
*    YY YY       2  KKKK    DD   DD FFFFF   MMMMMMM   TT              *
*     YYY     222   KKKK    DD   DD FF      MM M MM   TT              *
*     YY     2      KK KK   DD   DD FF      MM   MM   TT              *
*     YY     2      KK  KK  DD   DD FF      MM   MM   TT              *
*     YY     22222  KK   KK DDDDDD  FF      MM   MM   TT              *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
*    THIS SUBROUTINE FORMATS A GIVEN GREGORIAN DATE (MMDDYYYY) IN     *
*    A LARGE VARIETY OF FORMATS                                       *
*                                                                     *
*    1.  VALID INPUT YEARS FOR THIS ROUTINE ARE THE YEARS 1601        *
*        THROUGH 3399 A. D. (INCLUSIVE)                               *
*                                                                     *
*    2.  VALID INPUT MONTH VALUES FOR THIS ROUTINE ARE 01 THROUGH 12. *
*                                                                     *
*    3.  VALID INPUT DAY VALUES FOR THIS ROUTINE ARE 01 THROUGH 31    *
*        WITH EXCEPTIONS FOR THE MONTHS LISTED:                       *
*             MONTH          MAXIMUM DAY VALUE                        *
*              04                    30                               *
*              06                    30                               *
*              09                    30                               *
*              11                    30                               *
*              02                    28                               *
*              02 DURING LEAP YEAR   29                               *
*                                                                     *
*    4.  THE DATE FORMAT MUST BE MMDDYYYY, WHERE MM = THE 2 DIGIT     *
*        MONTH VALUE, DD = THE 2 DIGIT DAY VALUE, AND YYYY = THE      *
*        4 DIGIT YEAR VALUE.                                          *
*                                                                     *
*    5.  THE MAJOR FORMAT CODE DETERMINES THE OVERALL OUTPUT FORMAT   *
*        AND THE MINOR FORMAT CODE DETERMINES SUBTLE VARIATIONS OF    *
*        THE FORMAT:                                                  *
*          MAJOR                                  MINOR               *
*            1 = COMMERCIAL (01051997)              1 = NO INSERT     *
*            1 = COMMERCIAL (01 05 1997)            2 = SPACE         *
*            2 = EUROPEAN   (05/01/1997)            3 = SLASH         *
*            2 = EUROPEAN   (05-01-1997)            4 = HYPHEN        *
*            3 = F.I.P.S.   (YYYY.MM.DD)            5 = PERIOD        *
*          ---------------------------------------------------------  *
*            4 = TEXT 1 (JANUARY 5, 1997)           1 = U.S.          *
*            4 = TEXT 1 (5 JANUARY 1997)            2 = EUROPEAN      *
*            5 = TEXT 2 (JAN 5, 1997)               1 = U.S.          *
*            6 = TEXT 3 (SUNDAY, JANUARY 5, 1997)   1 = U.S.          *
*            7 = TEXT 4 (SUNDAY, 5 JAN 1997)        2 = EUROPEAN      *
*            8 = TEXT 5 (SUN, JANUARY 5, 1997)      1 = U.S.          *
*            9 = TEXT 6 (SUN, 5 JAN 1997)           2 = EUROPEAN      *
*                                                                     *
*    6.  SIX FIELDS ARE PASSED AS PARAMETERS TO THE ROUTINE:          *
*        1)  AN 8 BYTE FIELD CONTAINING THE DATE (IN ZONED-           *
*            DECIMAL FORMAT) TO BE FORMATTED,                         *
*        2)  A 1 BYTE ZONED-DECIMAL MAJOR FORMAT CODE (SEE 5 ABOVE),  *
*        3)  A 1 BYTE ZONED-DECIMAL MINOR FORMAT CODE (SEE 5 ABOVE),  *
*        4)  A 1 BYTE ZONED-DECIMAL RETURN CODE,                      *
*        5)  A 2 BYTE FIELD WHICH WILL CONTAIN THE NUMBER OF BYTES    *
*            PLACED IN THE FOLLOWING FIELD (IN ZONED DECIMAL FORMAT), *
*        6)  AN OUTPUT FIELD TO RECEIVE THE FORMATTED DATE (NOTE:     *
*            THE SIZE OF THIS FIELD DEPENDS UPON THE FORMATTING       *
*            CODES ... IT IS THE CALLER'S RESPONSIBILITY TO PASS A    *
*            FIELD LONG ENOUGH TO RECEIVE THE REQUESTED FORMAT).      *
*        THE ROUTINE WILL NOT ALTER THE DATE OR FORMAT CODE FIELDS.   *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR ALC CALLERS:                    *
*                                                                     *
*                      CALL  Y2KDFMT,(DATEIN)                         *
*                         . . .                                       *
*             DATEIN   DS    ZL8'01051997'                            *
*             MAJOR    DS    CL1'1'                                   *
*             MINOR    DS    CL1'3'                                   *
*             RC       DS    ZL1'0'                                   *
*             OUTSIZE  DS    ZL2'00'                                  *
*             OUTDATE  DS    CL29' '                                  *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR COBOL CALLERS:                  *
*                                                                     *
*             01  DFMT-PARAMETERS.                                    *
*                 02  DATEIN  PIC 9(8) VALUE 01011997.                *
*                 02  MAJOR   PIC 9(1) VALUE 1.
*                 02  MINOR   PIC 9(1) VALUE 3.
*                 02  RC      PIC 9(1) VALUE 0.                       *
*                 02  OUTSIZE PIC 9(2) VALUE 0.                       *
*                 02  OUTDATE PIC X(29).                              *
*             CALL 'Y2KDFMT' USING DFMT-PARAMETERS.                   *
*                                                                     *
*    7.  THE POSSIBLE VALUES FOR THE RETURN CODE FIELD ARE:           *
*                                                                     *
*        0 INDICATES SUCCESSFUL EXECUTION OF THE ROUTINE.             *
*                                                                     *
*        2 INDICATES INVALID DATA WAS FOUND IN THE DATE FIELD.        *
*        INVALID DATA ARE DETERMINED IF THE FIELD'S LOW ORDER         *
*        BYTE'S ZONE CONTAINS AN INVALID SIGN, (NOT ONE OF            *
*        X'C', X'D' OR X'F'), OR IF THE PRECEDING BYTES' ZONES        *
*        ARE OTHER THAN X'F', OR IF ANY BYTE'S LOW ORDER NIBBLE       *
*        CONTAINS A VALUE GREATER THAN X'9'.                          *
*                                                                     *
*        4 INDICATES THE VALUE OF THE YEAR SPECIFIED WAS NOT IN       *
*        THE RANGE SPECIFIED IN 1 (ABOVE).                            *
*                                                                     *
*        6 INDICATES THE VALUE OF THE MONTH SPECIFIED WAS NOT IN      *
*        THE RANGE SPECIFIED IN 2 (ABOVE).                            *
*                                                                     *
*        8 INDICATES THE VALUE OF THE DAY SPECIFIED WAS NOT IN        *
*        THE RANGE SPECIFIED IN 3 (ABOVE).                            *
*                                                                     *
*        3 INDICATES THE VALUE OF THE MAJOR FORMAT CODE SPECIFIED     *
*        WAS NOT ONE OF THE ACCEPTABLE VALUES (SEE 5 ABOVE).          *
*                                                                     *
*        5 INDICATES THE VALUE OF THE MINOR FORMAT CODE SPECIFIED     *
*        WAS NOT ONE OF THE ACCEPTABLE VALUES FOR THE MAJOR FORMAT    *
*        CODE SPECIFIED (SEE 5 ABOVE).                                *
*                                                                     *
*    8.  UPON SUCCESSFUL EXECUTION, THE FORMATTED DATE WILL BE        *
*        PLACED IN THE 6TH PARAMETER FIELD AND THE NUMBER OF BYTES    *
*        PLACED IN THE FIELD WILL BE PLACED IN THE 5TH FIELD.  IF     *
*        THE RETURN CODE CONTAINS A NON-ZERO VALUE (UNSUCCESSFUL      *
*        EXECUTION), THE 6TH FIELD WILL NOT BE MODIFIED BY THE        *
*        ROUTINE AND THE 5TH FIELD WILL CONTAIN ZERO.                 *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
         EJECT
Y2KDFMT  CSECT
*         PRINT NOGEN
         EYEC  'FORMAT DATE WITH FOR PRINT/DISPLAY'
*
         SAVE  (14,12)                 SAVE CALLER'S REGISTERS
*
         LR    R12,R15                 LOAD BASE WITH ENTRY ADDRESS
         USING Y2KDFMT,R12             ESTABLISH ADDRESSABILITY
*
         L     R11,0(,R1)              LOAD A(PARAMETERS)
         USING $PARMS,R11              ESTABLISH ADDRESSABILITY
*
         GETMAIN R,LV=$DYNLEN          GETMAIN DYNAMIC WORKAREA
         LR    R10,R1                  SAVE A(MEMORY)
*
         ST    R13,4(,R10)             STORE A(CALLER'S SAVE AREA)
         ST    R10,8(,R13)             BACK CHAIN A(MY SAVE AREA)
         LR    R13,R10                 SET A(MY SAVE AREA)
         USING $DYNMEM,R13             ESTABLISH ADDRESSABILITY
*
*    INSERT EYECATCHER MARKS AT BEGIN/END OF GETMAIN'D AREA.
*
         MVC   TOPFLAG,=C'Y2KDFMT GETMAIN BEGINS->'
         MVC   BOTFLAG,=C'<-Y2KDFMT GETMAIN ENDS'
*
*    INITIALIZE RETURN CODE AND OUTPUT BYTE COUNT.
*
         MVI   PRC,C'0'                ASSUME GOOD RETURN
         MVC   PRC+1(2),PRC            ZERO RETURN SIZE
*
*    CALL Y2KDOWN TO VERIFY DATE AND RETURN INTEGRAL DAY NUMBER.
*
         MVC   DDATE,PDATE             COPY YEAR TO Y2KDOWN PARM
         LA    R1,DOWNPARM             ADDRESS OF Y2KDOWN PARMS
         ST    R1,PLIST                STORE IN DYNAMIC AREA
         LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KDOWN)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    SEE IF DATE WE RECEIVED FROM CALLER PASSED EDITS IN Y2KDOWN.
*    THIS MEANS WE DON'T HAVE TO REPEAT THE EDIT CODE HERE <G>!
*
         MVC   PRC,DRC                 ADOPT RECEIVED RETURN CODE
         CLI   DRC,C'0'                WAS EXECUTION SUCCESSFUL?
         BNE   RETURN                  IF NOT, EXIT TO CALLER
*
*    TEST MAJOR FORMAT CODE FOR INVALID VALUE.
*
         XR    R1,R1                   CLEAR WORK REGISTER
         IC    R1,PMAJOR               GET MAJOR FORMAT CODE
         LA    R2,X'F1'                LOWEST VALID CODE
         LA    R3,9                    HIGHEST VALID CODE
MAJLOOP  CR    R1,R2                   IS FORMAT VALID?
         BE    MAJOK                   YES, CONTINUE
         LA    R2,1(,R2)               INCREMENT TO NEXT VALID CODE
         BCT   R3,MAJLOOP              AND CONTINUE TESTING
         MVI   PRC,C'3'                INDICATE INVALID CODE
         B                             RETURN
*
*    TEST MINOR FORMAT CODE FOR INVALID VALUE.
*
MAJOK    IC    R1,PMINOR               GET MINOR FORMAT CODE
         LA    R2,X'F1'                LOWEST VALID CODE
         LA    R3,5                    HIGHEST VALID CODE FOR MAJ:1-3
         CLI   PMAJOR,C'4'             IS MAJOR LESS THAN 4?
         BL    MINLOOP                 YES, BEGIN TEST
         LA    R3,2                    ELSE SET HIGHEST FOR MAJ:4-9
MINLOOP  CR    R1,R2                   IS FORMAT VALID?
         BE    MINOK                   YES, CONTINUE
         LA    R2,1(,R2)               INCREMENT TO NEXT VALID CODE
         BCT   R3,MINLOOP              AND CONTINUE TESTING
         MVI   PRC,C'5'                INDICATE INVALID CODE
         B                             RETURN
*
*    BRANCH TO FORMAT ROUTINE BASED ON MAJOR FORMAT CODE
*
MINOK    XR    R3,R3                   CLEAR WORK REGISTER
         IC    R3,PMAJOR               GET FORMAT NUMBER
         N     R3,=F'15'               CLEAR SIGN
         BCTR  R3,0                    DECREMENT BY 1 (ZERO BASED)
         SLL   R3,2                    MULTIPLY BY 4 (LENGTH OF BRANCH)
         LA    R3,MFMTBR(R3)           LOAD ADDRESS OF BRANCH
         BR    R3                      GO BRANCH DEPENDING ON FORMAT
*
*    BRANCH TABLE TO SELECT ROUTINE FOR MAJOR FORMAT CODE
*
MFMTBR   B     MFMT1
         B     MFMT2
         B     MFMT3
         B     MFMT4
         B     MFMT5
         B     MFMT6
         B     MFMT7
         B     MFMT8
         B     MFMT9
*
*    MAJOR FORMAT CODE 1: COMMERCIAL (MMDDYYYY)
*
MFMT1    BAL   R9,MFMTSUB              GO GET SEPARATOR CHARACTOR
         LA    R2,POUTDATE             LOAD OUTPUT AREA ADDRESS
         MVC   0(2,R2),PDATE           MOVE MM
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         LTR   R3,R3                   IS THERE AN INSERTION CHAR?
         BZ    MFMT1A                  NO, JUMP OVER
         STC   R3,0(,R2)               INSERT CHARACTER
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
MFMT1A   MVC   0(2,R2),PDATE+2         MOVE DD
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         LTR   R3,R3                   IS THERE AN INSERTION CHAR?
         BZ    MFMT1B                  NO, JUMP OVER
         STC   R3,0(,R2)               INSERT CHARACTER
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
MFMT1B   MVC   0(4,R2),PDATE+4         MOVE YYYY
         LA    R2,4(,R2)               BUMP OUTPUT ADDRESS
         B     SETSIZE                 SET OUTPUT FIELD SIZE
*
*    MAJOR FORMAT CODE 2: EUROPEAN (DDMMYYYY)
*
MFMT2    BAL   R9,MFMTSUB              GO GET SEPARATOR CHARACTOR
         LA    R2,POUTDATE             LOAD OUTPUT AREA ADDRESS
         MVC   0(2,R2),PDATE+2         MOVE DD
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         LTR   R3,R3                   IS THERE AN INSERTION CHAR?
         BZ    MFMT2A                  NO, JUMP OVER
         STC   R3,0(,R2)               INSERT CHARACTER
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
MFMT2A   MVC   0(2,R2),PDATE           MOVE MM
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         LTR   R3,R3                   IS THERE AN INSERTION CHAR?
         BZ    MFMT2B                  NO, JUMP OVER
         STC   R3,0(,R2)               INSERT CHARACTER
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
MFMT2B   MVC   0(4,R2),PDATE+4         MOVE YYYY
         LA    R2,4(,R2)               BUMP OUTPUT ADDRESS
         B     SETSIZE                 SET OUTPUT FIELD SIZE
*
*    MAJOR FORMAT CODE 3: F.I.P.S. (YYYYMMDD)
*
MFMT3    BAL   R9,MFMTSUB              GO GET SEPARATOR CHARACTOR
         LA    R2,POUTDATE             LOAD OUTPUT AREA ADDRESS
         MVC   0(4,R2),PDATE+4         MOVE YYYY
         LA    R2,4(,R2)               BUMP OUTPUT ADDRESS
         LTR   R3,R3                   IS THERE AN INSERTION CHAR?
         BZ    MFMT3A                  NO, JUMP OVER
         STC   R3,0(,R2)               INSERT CHARACTER
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
MFMT3A   MVC   0(2,R2),PDATE           MOVE MM
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         LTR   R3,R3                   IS THERE AN INSERTION CHAR?
         BZ    MFMT3B                  NO, JUMP OVER
         STC   R3,0(,R2)               INSERT CHARACTER
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
MFMT3B   MVC   0(2,R2),PDATE+2         MOVE DD
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         B     SETSIZE                 SET OUTPUT FIELD SIZE
*
*    THIS SUBROUTINE PLACES THE INSERTION CHARACTER (IF ANY) INTO
*    REGISTER 3 BASED UPON MINOR CODE 1 THROUGH 5 (USED BY MAJOR
*    CODE ROUTINES 1 THROUGH 3 ABOVE.
*
MFMTSUB  XR    R3,R3                   ASSUME NO SEPARATOR
         XR    R4,R4                   CLEAR WORK REGISTER
         IC    R4,PMINOR               GET MINOR FORMAT NUMBER
         N     R4,=F'15'               CLEAR SIGN
         BCTR  R4,0                    DECREMENT BY 1 (ZERO BASED)
         SLL   R4,2                    MULTIPLY BY 4 (LENGTH OF BRANCH)
         LA    R4,MFMTSBR(R4)          LOAD ADDRESS OF BRANCH
         BR    R4                      GO BRANCH DEPENDING ON FORMAT
*
*    BRANCH TABLE TO SELECT INSERTION CHARACTER
*
MFMTSBR  B     MFMTSC1                 NONE
         B     MFMTSC2                 SPACE
         B     MFMTSC3                 SLASH
         B     MFMTSC4                 HYPHEN
         B     MFMTSC5                 PERIOD
*
MFMTSC1  BR    R9                      RETURN TO MAJOR FORMAT
MFMTSC2  LA    R3,C' '                 SPACE IS INSERTION CHARACTER
         BR    R9                      RETURN TO MAJOR FORMAT
MFMTSC3  LA    R3,C'/'                 SPACE IS INSERTION CHARACTER
         BR    R9                      RETURN TO MAJOR FORMAT
MFMTSC4  LA    R3,C'-'                 SPACE IS INSERTION CHARACTER
         BR    R9                      RETURN TO MAJOR FORMAT
MFMTSC5  LA    R3,C'.'                 SPACE IS INSERTION CHARACTER
         BR    R9                      RETURN TO MAJOR FORMAT
*
*    MAJOR FORMAT CODE 4: TEXT 1 (MMMMMMMMM D, YYYY)
*
MFMT4    LA    R2,POUTDATE             LOAD OUTPUT AREA ADDRESS
         CLI   PMINOR,C'2'             EUROPEAN?
         BE    MFMT4A                  YES, USE ALTERNATE ORDER
         BAL   R9,MMONTHN              MOVE MONTH NAME
         BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVC   0(2,R2),=C', '          INSERT COMMA
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         B     MFMT4B                  CONTINUE
MFMT4A   BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVI   0(R2),C' '              INSERT BLANK
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
         BAL   R9,MMONTHN              MOVE MONTH NAME
MFMT4B   MVC   0(4,R2),PDATE+4         MOVE YYYY
         LA    R2,4(,R2)               BUMP OUTPUT ADDRESS
         B     SETSIZE                 SET OUTPUT FIELD SIZE
*
*    MAJOR FORMAT CODE 5: TEXT 2 (MMM D, YYYY)
*
MFMT5    LA    R2,POUTDATE             LOAD OUTPUT AREA ADDRESS
         CLI   PMINOR,C'2'             EUROPEAN?
         BE    MFMT5A                  YES, USE ALTERNATE ORDER
         BAL   R9,MMONTHA              MOVE MONTH ABBREVIATION
         BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVC   0(2,R2),=C', '          INSERT COMMA
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         B     MFMT5B                  CONTINUE
MFMT5A   BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVI   0(R2),C' '              INSERT BLANK
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
         BAL   R9,MMONTHA              MOVE MONTH ABBREVIATION
MFMT5B   MVC   0(4,R2),PDATE+4         MOVE YYYY
         LA    R2,4(,R2)               BUMP OUTPUT ADDRESS
         B     SETSIZE                 SET OUTPUT FIELD SIZE
*
*    MAJOR FORMAT CODE 6: TEXT 3 (DAYNAME, MMMMMMMMM D, YYYY)
*
MFMT6    LA    R2,POUTDATE             LOAD OUTPUT AREA ADDRESS
         BAL   R9,MDAYN                MOVE DAY OF WEEK NAME
         CLI   PMINOR,C'2'             EUROPEAN?
         BE    MFMT6A                  YES, USE ALTERNATE ORDER
         BAL   R9,MMONTHN              MOVE MONTH NAME
         BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVC   0(2,R2),=C', '          INSERT COMMA
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         B     MFMT6B                  CONTINUE
MFMT6A   BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVI   0(R2),C' '              INSERT BLANK
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
         BAL   R9,MMONTHN              MOVE MONTH NAME
MFMT6B   MVC   0(4,R2),PDATE+4         MOVE YYYY
         LA    R2,4(,R2)               BUMP OUTPUT ADDRESS
         B     SETSIZE                 SET OUTPUT FIELD SIZE
*
*    MAJOR FORMAT CODE 7: TEXT 4 (DAYNAME, MMM D, YYYY)
*
MFMT7    LA    R2,POUTDATE             LOAD OUTPUT AREA ADDRESS
         BAL   R9,MDAYN                MOVE DAY OF WEEK NAME
         CLI   PMINOR,C'2'             EUROPEAN?
         BE    MFMT7A                  YES, USE ALTERNATE ORDER
         BAL   R9,MMONTHA              MOVE MONTH ABBREVIATION
         BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVC   0(2,R2),=C', '          INSERT COMMA
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         B     MFMT7B                  CONTINUE
MFMT7A   BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVI   0(R2),C' '              INSERT BLANK
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
         BAL   R9,MMONTHA              MOVE MONTH ABBREVIATION
MFMT7B   MVC   0(4,R2),PDATE+4         MOVE YYYY
         LA    R2,4(,R2)               BUMP OUTPUT ADDRESS
         B     SETSIZE                 SET OUTPUT FIELD SIZE
*
*    MAJOR FORMAT CODE 8: TEXT 5 (DAY, MMMMMMMMM D, YYYY)
*
MFMT8    LA    R2,POUTDATE             LOAD OUTPUT AREA ADDRESS
         BAL   R9,MDAYA                MOVE DAY OF WEEK ABBREVIATION
         CLI   PMINOR,C'2'             EUROPEAN?
         BE    MFMT8A                  YES, USE ALTERNATE ORDER
         BAL   R9,MMONTHN              MOVE MONTH NAME
         BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVC   0(2,R2),=C', '          INSERT COMMA
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         B     MFMT8B                  CONTINUE
MFMT8A   BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVI   0(R2),C' '              INSERT BLANK
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
         BAL   R9,MMONTHN              MOVE MONTH NAME
MFMT8B   MVC   0(4,R2),PDATE+4         MOVE YYYY
         LA    R2,4(,R2)               BUMP OUTPUT ADDRESS
         B     SETSIZE                 SET OUTPUT FIELD SIZE
*
*    MAJOR FORMAT CODE 9: TEXT 6 (DAY, MMM D, YYYY)
*
MFMT9    LA    R2,POUTDATE             LOAD OUTPUT AREA ADDRESS
         BAL   R9,MDAYA                MOVE DAY OF WEEK ABBREVIATION
         CLI   PMINOR,C'2'             EUROPEAN?
         BE    MFMT9A                  YES, USE ALTERNATE ORDER
         BAL   R9,MMONTHA              MOVE MONTH NAME
         BAL   R9,MDAY                 MOVE DAY OF ABBREVIATION
         MVC   0(2,R2),=C', '          INSERT COMMA
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         B     MFMT9B                  CONTINUE
MFMT9A   BAL   R9,MDAY                 MOVE DAY OF MONTH
         MVI   0(R2),C' '              INSERT BLANK
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
         BAL   R9,MMONTHA              MOVE MONTH ABBREVIATION
MFMT9B   MVC   0(4,R2),PDATE+4         MOVE YYYY
         LA    R2,4(,R2)               BUMP OUTPUT ADDRESS
         B     SETSIZE                 SET OUTPUT FIELD SIZE
*
*    MOVE WEEKDAY NAME TO OUTPUT AREA FOLLOWED BY ', ' (COMMON
*    ROUTINE PERFORMED BY MAJOR FORMAT CODE ROUTINES 6/7 ABOVE)
*
MDAYN    BAL   R8,LDAY                 GET ADDRESS/LENGTH OF DAYNAME
         BCTR  R7,0                    DECREMENT LENGTH FOR EX
         EX    R7,VARMOVE              MOVE DAY NAME
         LA    R7,1(,R7)               RESTORE FULL NAME LENGTH
         AR    R2,R7                   BUMP OUTPUT ADDRESS
         MVC   0(2,R2),=C', '          INSERT COMMA/BLANK AFTER NAME
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         BR    R9                      AND RETURN
*
*    MOVE WEEKDAY ABBR TO OUTPUT AREA FOLLOWED BY ', ' (COMMON
*    ROUTINE PERFORMED BY MAJOR FORMAT CODE ROUTINES 7/8 ABOVE)
*
MDAYA    BAL   R8,LDAY                 GET ADDRESS/LENGTH OF DAYNAME
         LA    R7,2                    ABBR LENGTH MINUS 1 FOR EX
         EX    R7,VARMOVE              MOVE DAY NAME
         LA    R7,1(,R7)               RESTORE FULL MOVE LENGTH
         AR    R2,R7                   BUMP OUTPUT ADDRESS
         MVC   0(2,R2),=C', '          INSERT COMMA/BLANK AFTER NAME
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         BR    R9                      AND RETURN
*
*    MOVE MONTH NAME TO OUTPUT AREA FOLLOWED BY A BLANK (COMMON
*    ROUTINE PERFORMED BY MAJOR FORMAT CODE ROUTINES 4/6/8 ABOVE)
*
MMONTHN  BAL   R8,LMONTH               GET ADDRESS/LENGTH OF MONTH
         BCTR  R7,0                    DECREMENT LENGTH FOR EX
         EX    R7,VARMOVE              MOVE MONTH NAME
         LA    R7,1(,R7)               RESTORE FULL NAME LENGTH
         AR    R2,R7                   BUMP OUTPUT ADDRESS
         MVI   0(R2),C' '              INSERT BLANK AFTER NAME
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
         BR    R9                      AND RETURN
VARMOVE  MVC   0(0,R2),0(R6)           VARIABLE MOVE FOR EXECUTE
*
*    MOVE MONTH ABBR TO OUTPUT AREA FOLLOWED BY A BLANK (COMMON
*    ROUTINE PERFORMED BY MAJOR FORMAT CODE ROUTINES 5/7/9 ABOVE)
*
MMONTHA  BAL   R8,LMONTH               GET ADDRESS/LENGTH OF MONTH
         LA    R7,2                    ABBR LENGTH MINUS 1 FOR EX
         EX    R7,VARMOVE              MOVE MONTH NAME
         LA    R7,1(,R7)               RESTORE FULL MOVE LENGTH
         AR    R2,R7                   BUMP OUTPUT ADDRESS
         MVI   0(R2),C' '              INSERT BLANK AFTER NAME
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
         BR    R9                      AND RETURN
*
*    MOVE DAY OF MONTH TO OUTPUT AREA (COMMON ROUTINE PERFORMED FROM
*    MAJOR FORMAT CODE ROUTINES 4 THROUGH 9 ABOVE)
*
MDAY     CLI   PDATE+2,C'0'            IS FIRST DIGIT ZERO?
         BNE   MDAY2                   NO, MOVE BOTH DIGITS
MDAY1    MVC   0(1,R2),PDATE+3         MOVE ONLY RIGHT DIGIT
         LA    R2,1(,R2)               BUMP OUTPUT ADDRESS
         BR    R9                      AND RETURN
MDAY2    MVC   0(2,R2),PDATE+2         MOVE BOTH DIGITS
         LA    R2,2(,R2)               BUMP OUTPUT ADDRESS
         BR    R9                      AND RETURN
*
*    LOAD ADDRESS OF DAY NAME IN R6, LENGTH IN R7 (COMMON ROUTINE
*    PERFORMED FROM MDAYN AND MDAYA ABOVE)
*
LDAY     PACK  DWORK(1),DDOW(1)        PACK DAY INTEGRAL NUMBER
         ZAP   DWORK(8),DWORK(1)       EXPAND TO DOUBLEWORD
         CVB   R6,DWORK                CONVERT TO BINARY
         MH    R6,=H'12'               MULTIPLY BY 12 (LENGTH OF ENTRY)
         LA    R7,DNAME(R6)            LOAD ADDRESS OF NAME'S SIZE
         LA    R6,2(,R7)               LOAD ADDRESS OF DAY'S NAME
         LH    R7,0(,R7)               LOAD SIZE OF DAY'S NAME
         BR    R8                      AND RETURN
*
*    LOAD ADDRESS OF MONTH NAME IN R6, LENGTH IN R7 (COMMON ROUTINE
*    PERFORMED FROM MMONTHN AND MMONTHA ABOVE)
*
LMONTH   PACK  DWORK(2),PDATE(2)       PACK MONTH INTEGRAL NUMBER
         ZAP   DWORK(8),DWORK(2)       EXPAND TO DOUBLEWORD
         CVB   R6,DWORK                CONVERT TO BINARY
         BCTR  R6,0                    DECREMENT BY 1 (ZERO BASED)
         MH    R6,=H'12'               MULTIPLY BY 12 (LENGTH OF ENTRY)
         LA    R7,MNAME(R6)            LOAD ADDRESS OF NAME'S SIZE
         LA    R6,2(,R7)               LOAD ADDRESS OF MONTH'S NAME
         LH    R7,0(,R7)               LOAD SIZE OF MONTH'S NAME
         BR    R8                      AND RETURN
*
*    RETURN THE SIZE OF THE OUTPUT FIELD IN BYTES (COMMON ROUTINE
*    BRANCHED TO BY ALL MAJOR FORMAT CODE ROUTINES ABOVE)
*
SETSIZE  LA    R1,POUTDATE             GET ADDRESS OF FIELD START
         SR    R2,R1                   COMPUTE LENGTH OF FIELD
         CVD   R2,DWORK                CONVERT TO DECIMAL
         UNPK  DWORK(3),DWORK+6(2)     UNPACK SIZE
         OI    DWORK+2,X'F0'           CLEAR SIGN
         MVC   PSIZE,DWORK+1           MOVE TO OUTPUT FIELD
*
*    RESTORE REGISTERS, FREE STORAGE, AND RETURN
*
RETURN   LR    R1,R13                  LOAD ADDRESS OF GETMAINED AREA
         L     R13,4(,R13)             RELOAD PREVIOUS SAVE AREA
         LA    R0,$DYNLEN              LOAD LENGTH OF GETMAINED AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED AREA
         RETURN (14,12),RC=0           RETURN TO CALLER WITH RC=0
*
         EJECT
* ******************************************************************* *
* **************************** CONSTANTS **************************** *
* ******************************************************************* *
*
*    DAY OF WEEK NAMES, PRECEEDED BY LENGTH ATTRIBUTE
*
DNAME    DC    H'6',CL10'MONDAY  '
         DC    H'7',CL10'TUESDAY '
         DC    H'9',CL10'WEDNESDAY'
         DC    H'8',CL10'THURSDAY '
         DC    H'6',CL10'FRIDAY  '
         DC    H'8',CL10'SATURDAY '
         DC    H'6',CL10'SUNDAY  '
*
*    MONTH NAMES, PRECEEDED BY LENGTH ATTRIBUTE
*
MNAME    DC    H'7',CL10'JANUARY '
         DC    H'8',CL10'FEBRUARY '
         DC    H'5',CL10'MARCH   '
         DC    H'5',CL10'APRIL   '
         DC    H'3',CL10'MAY     '
         DC    H'4',CL10'JUNE    '
         DC    H'4',CL10'JULY    '
         DC    H'6',CL10'AUGUST  '
         DC    H'9',CL10'SEPTEMBER'
         DC    H'7',CL10'OCTOBER '
         DC    H'8',CL10'NOVEMBER '
         DC    H'8',CL10'DECEMBER '
* ******************************************************************* *
         LTORG
         EJECT
* ******************************************************************* *
* ***************************** EQUATES ***************************** *
* ******************************************************************* *
         YREGS
* ******************************************************************* *
         EJECT
* ******************************************************************* *
* ***************************** DSECTS ****************************** *
* ******************************************************************* *
$DYNMEM  DSECT                         DYNAMICALLY ALLOCATED MEMORY
SAVEAREA DS    18F                     REGISTER SAVE AREA
TOPFLAG  DS    CL24                    EYECATCHER
PLIST    DS    A                       PARMLIST ADDR FOR SUB CALLS
DOWNPARM DS    0H                      PARAMETERS FOR Y2KDOWN
DDATE    DS    CL8                       INPUT DATE
DRC      DS    CL1                       RETURN CODE
DDOW     DS    CL1                       INTEGRAL DAY OF WEEK
DWORK    DS    D                       DOUBLEWORD WORK FIELD
BOTFLAG  DS    CL22                    EYECATCHER
*
$DYNLEN  EQU   (*-$DYNMEM)             LENGTH OF GETMAIN'D AREA
*
$PARMS   DSECT                         PARAMETERS FROM/TO CALLER
PDATE    DS    CL8                     DATE TO BE PROCESSED
PMAJOR   DS    CL1                     MAJOR FORMAT CODE
PMINOR   DS    CL1                     MINOR FORMAT CODE
PRC      DS    CL1                     RETURN CODE (0, 2-6, 8)
PSIZE    DS    CL2                     SIZE OF OUTPUT FIELD
POUTDATE DS    CL1                     OUTPUT DATE (SIZE WILL VARY!)
* ******************************************************************* *
         END
