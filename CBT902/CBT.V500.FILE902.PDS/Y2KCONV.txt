         TITLE 'Y2KCONV - CONVERT DATES WITH 2 DIGIT YEARS'
*                                                                     *
*   YY   YY   222   KK   KK  CCCCC   OOOOO  NN   NN VV   VV           *
*   YY   YY  2   2  KK  KK  CC   CC OO   OO NNN  NN VV   VV           *
*   YY   YY      2  KK KK   CC   CC OO   OO NNN  NN VV   VV           *
*    YY YY       2  KKKK    CC      OO   OO NNNN NN VV   VV           *
*     YYY     222   KKKK    CC      OO   OO NN NNNN VV   VV           *
*     YY     2      KK KK   CC   CC OO   OO NN  NNN  VV VV            *
*     YY     2      KK  KK  CC   CC OO   OO NN  NNN   VVV             *
*     YY     22222  KK   KK  CCCCC   OOOOO  NN   NN    V              *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
*    THIS SUBROUTINE CONVERTS EXISTING DATE FIELDS WITH 2 DIGIT       *
*    YEARS TO A YEAR 2000 COMPLIANT FORMAT                            *
*                                                                     *
*    1.  VALID INPUT MONTH VALUES (FOR FORMATS 1, 2, AND 3 INPUT      *
*        DATES) FOR THIS ROUTINE ARE 01 THROUGH 12.                   *
*                                                                     *
*    2.  VALID INPUT DAY VALUES (FOR FORMATS 1, 2, AND 3 INPUT DATES) *
*        FOR THIS ROUTINE ARE 01 THROUGH 31, WITH EXCEPTIONS FOR      *
*        THE MONTHS LISTED:                                           *
*             MONTH          MAXIMUM DAY VALUE                        *
*              04                    30                               *
*              06                    30                               *
*              09                    30                               *
*              11                    30                               *
*              02                    28                               *
*              02 DURING LEAP YEAR   29                               *
*                                                                     *
*    3.  VALID INPUT DAY OF YEAR VALUES (FOR FORMAT 4 INPUT DATE)     *
*        FOR THIS ROUTINE ARE 001 THROUGH 365 (FOR NON-LEAP YEARS)    *
*        OR 001 THROUGH 366 (FOR LEAP YEARS).                         *
*                                                                     *
*    4.  THE DATE FORMAT MUST BE ONE OF THE FOLLOWING (BASED UPON     *
*        THE INPUT FORMAT CODE - PARAMETER 2):                        *
*          A)  FORMAT 1 DATES MUST BE MMDDYY (U.S. 6)                 *
*          B)  FORMAT 2 DATES MUST BE DDMMYY (EUROPEAN 6)             *
*          C)  FORMAT 3 DATES MUST BE YYMMDD (FIPS 6)                 *
*          D)  FORMAT 4 DATES MUST BE YYDDD (JULIAN 5)                *
*        WHERE MM = THE 2 DIGIT MONTH VALUE, DD = THE 2 DIGIT DAY     *
*        VALUE, YY = THE 2 DIGIT YEAR VALUE, AND DDD = THE 3 DIGIT    *
*        ORDINAL DAY OF THE YEAR VALUE.                               *
*                                                                     *
*    5.  SEVEN FIELDS ARE PASSED AS PARAMETERS TO THE ROUTINE:        *
*        1)  THE INPUT DATE (IN ZONED-DECIMAL FORMAT) TO BE CON-      *
*            VERTED IN A SUB-FORMAT CORRESPONDING TO THE FORMAT       *
*            CODE CONTAINED IN FIELD #2 (SEE 4 ABOVE).  (FORMAT 4     *
*            DATES (5 BYTE JULIAN) MUST BE FOLLOWED BY A SLACK        *
*            BYTE WHICH IS NOT ACCESSED BY THE ROUTINE)               *
*        2)  A 1 BYTE FIELD CONTAINING THE FORMAT OF THE DATE IN      *
*            FIELD #1 (IN ZONED-DECIMAL) AS SPECIFIED IN 4 (ABOVE).   *
*        3)  A 2 BYTE FIELD CONTAINING THE YEAR AT WHICH THE CENTURY  *
*            IS TO SWITCH FROM 1900 TO 2000 (IN ZONED-DECIMAL).  IF   *
*            THIS FIELD CONTAINS 20, INPUT DATES WITH YEAR VALUES OF  *
*            00 THROUGH 20 WILL EXPAND TO 2000 THROUGH 2020 AND       *
*            INPUT DATES WITH YEAR VALUES OF 21 THROUGH 99 WILL       *
*            EXPAND TO 1921 THROUGH 1999.                             *
*        4)  A 1 BYTE ZONED-DECIMAL RETURN CODE.                      *
*        5)  AN 8 BYTE FIELD WHICH WILL RECEIVE THE DATE IN GREGOR-   *
*            IAN FORMAT (IN ZONED DECIMAL FORMAT).  THIS FIELD WILL   *
*            BE RETURNED IN COMMERCIAL-8 FORMAT (MMDDYYYY).           *
*        6)  A 7 BYTE FIELD WHICH WILL RECEIVE THE DATE IN JULIAN     *
*            FORMAT (IN ZONED DECIMAL FORMAT).                        *
*        7)  A 7 BYTE FIELD WHICH WILL RECEIVE THE ASTRONOMICAL       *
*            NUMBER (IN ZONED DECIMAL FORMAT).                        *
*        THE ROUTINE WILL NOT ALTER THE FIELDS PASSED TO IT (1-3).    *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR ALC CALLERS:                    *
*                                                                     *
*                      CALL  Y2KCONV,(DATEIN)                         *
*                         . . .                                       *
*             DATEIN   DS    ZL6'010197'                              *
*             DATEFMT  DS    ZL1'1'                                   *
*             BREAK    DS    ZL2'20'                                  *
*             RC       DS    ZL1'0'                                   *
*             DATEG    DS    ZL8'00000000'                            *
*             DATEJ    DS    ZL7'0000000'                             *
*             ANUM     DS    ZL7'0000000'                             *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR COBOL CALLERS:                  *
*                                                                     *
*             01  CONV-PARAMETERS.                                    *
*                 02  DATEIN  PIC 9(6) VALUE 010197.                  *
*                 02  DATEFMT PIC 9(1) VALUE 1.                       *
*                 02  BREAK   PIC 9(2) VALUE 20.                      *
*                 02  RC      PIC 9(1) VALUE 0.                       *
*                 02  DATEG   PIC 9(8) VALUE 0.                       *
*                 02  DATEJ   PIC 9(7) VALUE 0.                       *
*                 02  ANUM    PIC 9(7) VALUE 0.                       *
*             CALL 'Y2KCONV' USING CONV-PARAMETERS.                   *
*                                                                     *
*    6.  THE POSSIBLE VALUES FOR THE RETURN CODE FIELD ARE:           *
*                                                                     *
*        0 INDICATES SUCCESSFUL EXECUTION OF THE ROUTINE.             *
*                                                                     *
*        2 INDICATES INVALID DATA WAS FOUND IN THE INPUT DATE FIELD   *
*        (3 FOR THE BREAK VALUE FIELD).  INVALID DATA ARE DETERMINED  *
*        IF THE FIELD'S LOW ORDER BYTE'S ZONE CONTAINS AN INVALID     *
*        SIGN, (NOT ONE OF X'C', X'D', OR X'F'), OR IF THE PRECEED-   *
*        ING BYTES' ZONES ARE OTHER THAN X'F', OR IF ANY BYTE'S LOW   *
*        LOW ORDER NIBBLE CONTAINS A VALUE GREATER THAN X'9'.         *
*                                                                     *
*        5 INDICATES THE VALUE OF THE DATE FORMAT CODE IS INVALID     *
*        ('1', '2', '3', AND '4' ARE VALID).                          *
*                                                                     *
*        6 INDICATES THE VALUE OF THE MONTH SPECIFIED IN THE INPUT    *
*        DATE FIELD WAS NOT IN THE RANGE SPECIFIED IN 1 (ABOVE).      *
*                                                                     *
*        8 INDICATES THE VALUE OF THE DAY SPECIFIED IN THE INPUT      *
*        DATE FIELD WAS NOT IN THE RANGE SPECIFIED IN 2 OR 3          *
*        (ABOVE) DEPENDING UPON THE INPUT DATE FORMAT.                *
*                                                                     *
*    7.  UPON SUCCESSFUL EXECUTION, THE GREGORIAN DATE WITH THE 4     *
*        DIGIT YEAR WILL BE PLACED IN FIELD 5, THE JULIAN DATE WITH   *
*        THE 4 DIGIT YEAR WILL BE PLACED IN FIELD 6, AND THE ASTRO-   *
*        NOMICAL NUMBER FOR THE DATE WILL BE PLACE IN FIELD 7.  IF    *
*        THE RETURN CODE IS A NON-ZERO VALUE (UNSUCCESSFUL EXECUTION) *
*        RETURN FIELDS 5 THROUGH 7 WILL CONTAIN ZEROS.                *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
         EJECT
Y2KCONV  CSECT
*         PRINT NOGEN
         EYEC  'CONVERT PRE-2000 DATE'
*
         SAVE  (14,12)                 SAVE CALLER'S REGISTERS
*
         LR    R12,R15                 LOAD BASE WITH ENTRY ADDRESS
         USING Y2KCONV,R12             ESTABLISH ADDRESSABILITY
*
         L     R11,0(,R1)              LOAD A(PARAMETERS)
         USING $PARMS,R11              ESTABLISH ADDRESSABILITY
*
         GETMAIN R,LV=$DYNLEN          GETMAIN DYNAMIC WORKAREA
         LR    R10,R1                  SAVE A(MEMORY)
*
         ST    R13,4(,R10)             STORE A(CALLER'S SAVE AREA)
         ST    R10,8(,R13)             BACK CHAIN A(MY SAVE AREA)
         LR    R13,R10                 SET A(MY SAVE AREA)
         USING $DYNMEM,R13             ESTABLISH ADDRESSABILITY
*
*    INSERT EYECATCHER MARKS AT BEGIN/END OF GETMAIN'D AREA.
*
         MVC   TOPFLAG,=C'Y2KCONV GETMAIN BEGINS->'
         MVC   BOTFLAG,=C'<-Y2KCONV GETMAIN ENDS'
*
*    INITIALIZE OUTPUT FIELDS.
*
         MVI   PRC,C'0'                RETURN CODE
         MVC   PRC+1(22),PRC           OUTPUT DATES
*
*    TEST INPUT FORMAT CODE FOR INVALID VALUE
*
         XR    R1,R1                   CLEAR WORK REGISTER
         IC    R1,PFORM                GET FORMAT CODE
         LA    R2,X'F1'                LOWEST VALID CODE
         LA    R3,4                    HIGHEST VALID CODE
FMTLOOP  CR    R1,R2                   IS FORMAT VALID?
         BE    FORMOK                  YES, CONTINUE
         LA    R2,1(,R2)               INCREMENT VALID CODE
         BCT   R3,FMTLOOP              CONTINUE TESTING NEXT CODE
         MVI   PRC,C'5'                INDICATE INVALID CODE
         B     RETURN                  AND RETURN TO CALLER
*
*    TEST INPUT BREAK POINT FOR INVALID CHARACTER
*
FORMOK   LA    R2,PBREAK               ADDRESS BREAK VALUE
         LA    R3,1                    LENGTH MINUS 1
         MVI   PRC,C'3'                ASSUME INVALID DATA
         BAL   R14,PTEST1              PERFORM TESTING ROUTINE
         CLI   PRC,C'0'                DID BREAK TEST 'OK'?
         BNE   RETURN                  IF NOT, RETURN TO CALLER
*
*    TEST INPUT DATE FOR INVALID CHARACTER
*
         LA    R2,PDATEG               ADDRESS DATE FIELDS
         LA    R3,5                    LENGTH MINUS 1 (FOR FORMAT 1)
         MVI   PRC,C'2'                ASSUME INVALID DATA
         CLI   PFORM,C'1'              IS IT FORMAT 1?
         BE    F1CALL                  YES, GO TEST IT
         BCTR  R3,0                    NO, DECREMENT LENGTH
F1CALL   BAL   R14,PTEST1              PERFORM TESTING ROUTINE
         CLI   PRC,C'0'                DID DATE TEST 'OK'?
         BNE   RETURN                  IF NOT, RETURN TO CALLER
*
*    BRANCH AROUND PERFORMED CODE TO CONTINUE
*
         B     PERCON                  CONTINUE
*
*    THIS ROUTINE SCANS FOR INVALIDS CHARACTER IN ZONED-DECIMAL
*    PARAMETER FIELDS.  IT IS CALLED FOR BOTH DATE FIELDS.
*
PTEST1   EQU   *
PT1LOOP  CLI   0(R2),X'F0'             TEST LESS THAN C'0'
         BL    PT1ERR                  IF YES, DATE CONTAINS BAD DATA
         CLI   0(R2),X'F9'             TEST GREATER THAN C'9'
         BH    PT1ERR                  IF YES, DATE CONTAINS BAD DATA
         LA    R2,1(0,R2)              ADDRESS NEXT BYTE
         BCT   R3,PT1LOOP              CONTINUE TESTING
         IC    R3,0(,R2)               LOAD RIGHT-MOST CHARACTER
         LR    R4,R3                   COPY INTO R4
         N     R3,=F'15'               ISOLATE DIGIT PORTION
         CH    R3,=H'9'                TEST GREATER THAN 9
         BH    PT1ERR                  IF YES, DATE CONTAINS BAD DATA
         SRL   R4,4                    ISOLATE ZONE PORTION
         CH    R4,=H'12'               TEST FOR 'C' ZONE
         BE    PT1OK                   IF YES, DATE IS VALID NUMERIC
         CH    R4,=H'13'               TEST FOR 'D' ZONE
         BE    PT1OK                   IF YES, DATE IS VALID NUMERIC
         CH    R4,=H'15'               TEST FOR 'F' ZONE
         BE    PT1OK                   IF YES, DATE IS VALID NUMERIC
*
*    DATA CONTAINED AN INVALID CHARACTER.  SINCE THE ERROR RC WAS
*    SET BY THE CALLER, JUST RETURN.
*
PT1ERR   BR    R14                     RETURN
*
*    DATA WAS VALID, SO RESET RETURN CODE TO GOOD AND RETURN.
*
PT1OK    MVI   PRC,C'0'                INDICATE GOOD DATA
         BR    R14                     AND RETURN
*
*    THIS BRANCH POINT IS TO JUMP OVER PERFORMED ROUTINE ABOVE
*
PERCON   EQU   *
*
*    WHICH FORMAT IS COMING IN?
*
         CLI   PFORM,C'4'              FORMAT 4 (YYDDD)?
         BNE   DATE6                   NO, GO TO 6 DIGIT DATES
*
*    PROCESSING INPUT FORMAT 4 (YYDDD)
*
         MVC   JDATEJ+4(3),PDATEJ+2    MOVE DDD PART OF FIELD
         PACK  WORKY,PDATEJ(2)         PACK YY PART OF FIELD
         BAL   R14,EXTYEAR             PERFORM YEAR EXTENSION
         MVC   JDATEJ(4),WORKYZ+1      UNPACK EXTENDED DATE
         LA    R1,JTOGPARM             ADDRESS OF Y2KJTOG PARMS
         ST    R1,PLIST                STORE IN DYNAMIC AREA
         LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KJTOG)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    TEST RETURN CODE TO SEE IF JULIAN DATE PASSED LOGIC TEST
*
         MVC   PRC,RCJ                 SHARE RETURN CODE
         CLI   RCJ,C'0'                GOOD RETURN CODE?
         BNE   RETURN                  RETURN TO MY CALLER
*
*    RETURN CODE IS OK, MOVE FIELDS TO OUTPUT
*
         MVC   POUTG,JDATEG            MOVE GREGORIAN
         MVC   POUTJ,JDATEJ            MOVE EXTENDED JULIAN
         MVC   GDATEA,JDATEG           LOAD INPUT FOR LAST CALL
         B     FINI                    GO DO COMMON FINISH
*
*    INPUT FORMAT IS PARSED ACCORDING TO DATE FORMAT CODE.
*
DATE6    CLI   PFORM,C'2'              FORMAT 1?
         BE    DATE6I2                 YES, DO DDMMYY
         CLI   PFORM,C'3'              FORMAT 2?
         BE    DATE6I3                 YES, DO YYMMDD
DATE6I1  MVC   GDATEG(4),PDATEG        MOVE MMDD PART OF FIELD
         PACK  WORKY,PDATEG+4(2)       PACK YY PART OF FIELD
         B     DATE6IX                 GO DO COMMON DATE6 PROCESS
DATE6I2  MVC   GDATEG(2),PDATEG+2      MOVE DD PART OF FIELD
         MVC   GDATEG+2(2),PDATEG      MOVE MM PART OF FIELD
         PACK  WORKY,PDATEG+4(2)       PACK YY PART OF FIELD
         B     DATE6IX                 GO DO COMMON DATE6 PROCESS
DATE6I3  MVC   GDATEG(4),PDATEG+2      MOVE MMDD PART OF FIELD
         PACK  WORKY,PDATEG(2)         PACK YY PART OF FIELD
DATE6IX  BAL   R14,EXTYEAR             PERFORM YEAR EXTENSION
         MVC   GDATEG+4(4),WORKYZ+1    UNPACK EXTENDED YEAR
*
*    CALL Y2KGTOJ TO DO VERIFY DATE AND DO 1ST CONVERSION
*
         LA    R1,GTOJPARM             ADDRESS OF Y2KGTOJ PARMS
         ST    R1,PLIST                STORE IN DYNAMIC AREA
         LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KGTOJ)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    TEST RETURN CODE TO SEE IF GREGORIAN DATE PASSED LOGIC TEST
*
         MVC   PRC,RCG                 SHARE RETURN CODE
         CLI   RCG,C'0'                GOOD RETURN CODE?
         BNE   RETURN                  RETURN TO MY CALLER
*
*    RETURN CODE IS OK, MOVE FIELDS TO OUTPUT
*
         MVC   POUTG,GDATEG            MOVE MMDDYYYY TO OUTPUT
         MVC   POUTJ,GDATEJ            MOVE JULIAN
         MVC   GDATEA,GDATEG           LOAD INPUT FOR LAST CALL
         B     FINI                    GO DO COMMON FINISH
*
*    THIS ROUTINE IS CALLED BY BOTH FORMAT ROUTINES ABOVE TO EXTEND
*    THE 2 DIGIT YEAR TO 4 DIGITS.
*
EXTYEAR  PACK  WORKB,PBREAK            PACK BREAK POINT
         ZAP   WORKY,WORKY             SET SIGN TO POSITIVE
         ZAP   WORKB,WORKB             SET SIGN TO POSITIVE
         CP    WORKY,WORKB             COMPARE PASSED YEAR TO IT
         BH    IS1900                  IF ABOVE POINT, MAKE IT 1900
IS2000   OC    WORKY,=X'020000'        ADD 20 BEFORE YY
         B     EXTYEARF                COMMON FINISH
IS1900   OC    WORKY,=X'019000'        ADD 19 BEFORE YY
EXTYEARF UNPK  WORKYZ,WORKY            UNPACK THE RESULT
         OI    WORKYZ+4,X'F0'          CLEAR SIGN
         BR    R14                     AND RETURN
*
*    CALL Y2KGTOA TO GET THE ASTRONOMICAL NUMBER
*
FINI     LA    R1,GTOAPARM             ADDRESS OF Y2KGTOA PARMS
         ST    R1,PLIST                STORE IN DYNAMIC AREA
         LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KGTOA)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    SHOULD BE ABLE TO IGNORE THE RETURN CODE HERE ... JUST COPY
*    THE ASTRO NUMBER TO THE OUTPUT FIELD.
*
         MVC   PANUM,ANUM              WAS EXECUTION SUCCESSFUL?
*
*    RESTORE REGISTERS, FREE STORAGE, AND RETURN
*
RETURN   LR    R1,R13                  LOAD ADDRESS OF GETMAINED AREA
         L     R13,4(,R13)             RELOAD PREVIOUS SAVE AREA
         LA    R0,$DYNLEN              LOAD LENGTH OF GETMAINED AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED AREA
         RETURN (14,12),RC=0           RETURN TO CALLER WITH RC=0
*
         LTORG
         EJECT
* ******************************************************************* *
* ***************************** EQUATES ***************************** *
* ******************************************************************* *
         YREGS
* ******************************************************************* *
         EJECT
* ******************************************************************* *
* ***************************** DSECTS ****************************** *
* ******************************************************************* *
$DYNMEM  DSECT                         DYNAMICALLY ALLOCATED MEMORY
SAVEAREA DS    18F                     REGISTER SAVE AREA
TOPFLAG  DS    CL24                    EYECATCHER
PLIST    DS    A                       PARMLIST ADDR FOR SUB CALLS
GTOAPARM DS    0H                      PARAMETERS FOR Y2KGTOA
GDATEA   DS    CL8                       INPUT DATE
RCGTOA   DS    CL1                       RETURN CODE
ANUM     DS    CL7                       ASTRO NUMBER
JTOGPARM DS    0H                      PARAMETERS FOR Y2KJTOG
JDATEJ   DS    CL7                       INPUT DATE
RCJ      DS    CL1                       RETURN CODE
JDATEG   DS    CL8                       OUTPUT GREGORIAN DATE
GTOJPARM DS    0H                      PARAMETERS FOR Y2KGTOJ
GDATEG   DS    CL8                       INPUT DATE
RCG      DS    CL1                       RETURN CODE
GDATEJ   DS    CL7                       OUTPUT JULIAN DATE
WORKB    DS    PL2                     WORK FIELD FOR COMPUTATION
WORKY    DS    PL3                     WORK FIELD FOR COMPUTATION
WORKYZ   DS    ZL5                     WORK FIELD FOR COMPUTATION
BOTFLAG  DS    CL22                    EYECATCHER
*
$DYNLEN  EQU   (*-$DYNMEM)             LENGTH OF GETMAIN'D AREA
*
$PARMS   DSECT                         PARAMETERS FROM/TO CALLER
PDATEG   DS    CL6                     GREGORIAN DATE FORMAT
         ORG   PDATEG
PDATEJ   DS    CL5                     JULIAN DATE FORMAT
         ORG
PFORM    DS    CL1                     FORMAT CODE OF INPUT DATE
PBREAK   DS    ZL2                     YEAR WHERE 2000 BEGINS
PRC      DS    CL1                     RETURN CODE (0, 2-6, 8)
POUTG    DS    CL8                     EXPANDED GREGORIAN
POUTJ    DS    CL7                     EXPANDED JULIAN
PANUM    DS    CL7                     ASTRONOMICAL NUMBER
* ******************************************************************* *
         END
