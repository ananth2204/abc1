         TITLE 'Y2KSAGE - COMPUTE ELAPSED DAYS BETWEEN DATES'
*                                                                     *
*   YY   YY   222   KK   KK  SSSSS     A     GGGGG  EEEEEE            *
*   YY   YY  2   2  KK  KK  SS   SS   AAA   GG   GG EE                *
*   YY   YY      2  KK KK   SS       AA AA  GG   GG EE                *
*    YY YY       2  KKKK     SSSSS  AA   AA GG      EEEE              *
*     YYY     222   KKKK         SS AA   AA GG  GGG EE                *
*     YY     2      KK KK   SS   SS AAAAAAA GG   GG EE                *
*     YY     2      KK  KK  SS   SS AA   AA GG   GG EE                *
*     YY     22222  KK   KK  SSSSS  AA   AA  GGGGG  EEEEEEE           *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
*    THIS SUBROUTINE COMPUTES THE NUMBER OF DAYS ELAPSED BETWEEN 2    *
*    GIVEN GREGORIAN DATES (MMDDYYYY) FOR SHORT TERM AGING            *
*                                                                     *
*    1.  VALID INPUT YEARS FOR THIS ROUTINE ARE THE YEARS 1601        *
*        THROUGH 3399 A. D. (INCLUSIVE)                               *
*                                                                     *
*    2.  VALID INPUT MONTH VALUES FOR THIS ROUTINE ARE 01 THROUGH 12. *
*                                                                     *
*    3.  VALID INPUT DAY VALUES FOR THIS ROUTINE ARE 01 THROUGH 31    *
*        WITH EXCEPTIONS FOR THE MONTHS LISTED:                       *
*             MONTH          MAXIMUM DAY VALUE                        *
*              04                    30                               *
*              06                    30                               *
*              09                    30                               *
*              11                    30                               *
*              02                    28                               *
*              02 DURING LEAP YEAR   29                               *
*                                                                     *
*    4.  THE DATE FORMAT MUST BE MMDDYYYY, WHERE MM = THE 2 DIGIT     *
*        MONTH VALUE, DD = THE 2 DIGIT DAY VALUE, AND YYYY = THE      *
*        4 DIGIT YEAR VALUE.                                          *
*                                                                     *
*    5.  FOUR FIELDS ARE PASSED AS PARAMETERS TO THE ROUTINE:         *
*        1) & 2)  8 BYTE FIELDS CONTAINING THE GREGORIAN DATES (IN    *
*            (ZONED-DECIMAL FORMAT) BETWEEN WHICH THE NUMBER OF DAYS  *
*            IS TO BE CALCULATED (ORDER OF THE DATES IS IMMATERIAL),  *
*        3)  A 1 BYTE ZONED-DECIMAL RETURN CODE, AND                  *
*        4)  A 7 BYTE FIELD WHICH WILL RECEIVE THE NUMBER OF ELAPSED  *
*            DAYS (IN ZONED-DECIMAL FORMAT).                          *
*        THE ROUTINE WILL NOT ALTER THE DATES PASSED TO IT.           *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR ALC CALLERS:                    *
*                                                                     *
*                      CALL  Y2KSAVE,(DATE1)                          *
*                         . . .                                       *
*             DATE1    DS    ZL8'01011997'                            *
*             DATE2    DS    ZL8'04011997'                            *
*             RC       DS    ZL1'0'                                   *
*             DAYS     DS    ZL7'0000000'                             *
*                                                                     *
*        SUGGESTED CALLING SYNTAX FOR COBOL CALLERS:                  *
*                                                                     *
*             01  SAGE-PARAMETERS.                                    *
*                 02  DATE1 PIC 9(8) VALUE 01011997.                  *
*                 02  DATE2 PIC 9(8) VALUE 04011997.                  *
*                 02  RC    PIC 9(1) VALUE 0.                         *
*                 02  DAYS  PIC S9(7) VALUE +0.                       *
*             CALL 'Y2KSAGE' USING SAGE-PARAMETERS.                   *
*                                                                     *
*    6.  THE POSSIBLE VALUES FOR THE RETURN CODE FIELD ARE:           *
*                                                                     *
*        0 INDICATES SUCCESSFUL EXECUTION OF THE ROUTINE.             *
*                                                                     *
*        2 INDICATES INVALID DATA WAS FOUND IN THE DATE1 FIELD        *
*        (3 FOR DATE2).  INVALID DATA ARE DETERMINED IF THE FIELD'S   *
*        LOW ORDER BYTE'S ZONE CONTAINS AN INVALID SIGN, (NOT ONE     *
*        OF X'C', X'D', OR X'F'), OR IF THE PRECEEDING BYTES' ZONES   *
*        ARE OTHER THAN X'F', OR IF ANY BYTE'S LOW ORDER NIBBLE       *
*        CONTAINS A VALUE GREATER THAN X'9'.                          *
*                                                                     *
*        4 INDICATES THE VALUE OF THE YEAR SPECIFIED IN THE DATE1     *
*        FIELD (5 FOR DATE2) WAS NOT IN THE RANGE SPECIFIED IN 1      *
*        (ABOVE).                                                     *
*                                                                     *
*        6 INDICATES THE VALUE OF THE MONTH SPECIFIED IN THE DATE1    *
*        FIELD (7 FOR DATE2) WAS NOT IN THE RANGE SPECIFIED IN 2      *
*        (ABOVE).                                                     *
*                                                                     *
*        8 INDICATES THE VALUE OF THE DAY SPECIFIED IN THE DATE1      *
*        FIELD (9 FOR DATE2) WAS NOT IN THE RANGE SPECIFIED IN 3      *
*        (ABOVE).                                                     *
*                                                                     *
*    7.  UPON SUCCESSFUL EXECUTION, THE ABSOLUTE VALUE OF THE NUMBER  *
*        OF DAYS BETWEEN THE 2 SPECIFIED DATES WILL BE PLACED IN THE  *
*        4TH PARAMETER (IN PACKED DECIMAL FORMAT).  IF THE RETURN     *
*        CODE IS A NON-ZERO VALUE (UNSUCCESSFUL EXECUTION), THE 4TH   *
*        PARAMETER WILL CONTAIN ZEROS.                                *
*                                                                     *
* ******************************************************************* *
* ******************************************************************* *
         EJECT
Y2KSAGE  CSECT
*         PRINT NOGEN
         EYEC  'SHORT TERM AGE BETWEEN 2 DATES'
*
         SAVE  (14,12)                 SAVE CALLER'S REGISTERS
*
         LR    R12,R15                 LOAD BASE WITH ENTRY ADDRESS
         USING Y2KSAGE,R12             ESTABLISH ADDRESSABILITY
*
         L     R11,0(,R1)              LOAD A(PARAMETERS)
         USING $PARMS,R11              ESTABLISH ADDRESSABILITY
*
         GETMAIN R,LV=$DYNLEN          GETMAIN DYNAMIC WORKAREA
         LR    R10,R1                  SAVE A(MEMORY)
*
         ST    R13,4(,R10)             STORE A(CALLER'S SAVE AREA)
         ST    R10,8(,R13)             BACK CHAIN A(MY SAVE AREA)
         LR    R13,R10                 SET A(MY SAVE AREA)
         USING $DYNMEM,R13             ESTABLISH ADDRESSABILITY
*
*    INSERT EYECATCHER MARKS AT BEGIN/END OF GETMAIN'D AREA.
*
         MVC   TOPFLAG,=C'Y2KSAGE GETMAIN BEGINS->'
         MVC   BOTFLAG,=C'<-Y2KSAGE GETMAIN ENDS'
*
*    INITIALIZE RETURN CODE AND DAYS PARAMETER FIELDS.
*
         MVI   PRC,C'0'                ASSUME GOOD RETURN
         MVC   PRC+1(7),PRC            NULL DAYS
*
*    RETRIEVE ASTRONOMICAL NUMBER FOR 1ST DATE PASSED
*
         MVC   GDATE,PDATE1            LOAD DATE TO PASS
         LA    R1,GTOAPARM             ADDRESS OF Y2KGTOA PARMS
         ST    R1,PLIST                STORE IN DYNAMIC AREA
         LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KGTOA)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    SEE IF DATE WE RECEIVED FROM CALLER PASSED EDITS IN Y2KGTOA.
*    THIS MEANS WE DON'T HAVE TO REPEAT THE EDIT CODE HERE <G>!
*
         MVC   PRC,RCG                 ADOPT RECEIVED RETURN CODE
         CLI   RCG,C'0'                WAS EXECUTION SUCCESSFUL?
         BNE   RETURN                  IF NOT, EXIT TO CALLER
*
*    SAVE THE ASTRONOMICAL NUMBER FOR DAY PASSED
*
         PACK  WORK(4),ANUMG(7)        SAVE ASTRO NUMBER
*
*    RETRIEVE ASTRONOMICAL NUMBER FOR 2ND DATE PASSED
*
         MVC   GDATE,PDATE2            LOAD DATE TO PASS
         LA    R1,PLIST                ADDRESS TO PASS
         L     R15,=V(Y2KGTOA)         ADDRESS OF ROUTINE
         BALR  R14,R15                 CALL ROUTINE
*
*    AGAIN, TEST THE RETURN CODE SO THE CALLER'S DATA IS CHECKED
*    BY Y2KGTOA INSTEAD OF US ... BUT WE HAVE TO ADJUST THE CODE
*    THIS TIME TO REFLECT THE SECOND DATE FIELD.
*
         CLI   RCG,C'0'                WAS EXECUTION SUCCESSFUL?
         BE    COMPUTE                 IF YES, GO FIGURE DAYS
*
*    WE HAVE TO BUMP THE RETURN CODE BY 1 TO INDICATE THE 2ND DATE.
*
         PACK  WORK(1),RCG(1)          PACK THE RETURN CODE
         AP    WORK(1),=P'1'           INCREMENT BY 1
         UNPK  PRC(1),WORK(1)          UNPACK TO DESTINATION
         OI    PRC,X'F0'               REMOVE THE ZONE
         B     RETURN                  AND EXIT TO CALLER
*
*    SUBTRACT 2ND ASTRO NUMBER FROM THE 1ST ONE.
*
COMPUTE  PACK  WORK2(4),ANUMG(7)       PACK THE 2ND ASTRO #
         SP    WORK,WORK2              YIELDS DIFFERENCE IN DAYS
         UNPK  PDAYS(7),WORK           UNPACK RESULT
         OI    PDAYS+6,X'F0'           CLEAR SIGN
*
*    RESTORE REGISTERS, FREE STORAGE, AND RETURN
*
RETURN   LR    R1,R13                  LOAD ADDRESS OF GETMAINED AREA
         L     R13,4(,R13)             RELOAD PREVIOUS SAVE AREA
         LA    R0,$DYNLEN              LOAD LENGTH OF GETMAINED AREA
         FREEMAIN R,LV=(0),A=(1)       FREE GETMAINED AREA
         RETURN (14,12),RC=0           RETURN TO CALLER WITH RC=0
*
         LTORG
         EJECT
* ******************************************************************* *
* ***************************** EQUATES ***************************** *
* ******************************************************************* *
         YREGS
* ******************************************************************* *
         EJECT
* ******************************************************************* *
* ***************************** DSECTS ****************************** *
* ******************************************************************* *
$DYNMEM  DSECT                         DYNAMICALLY ALLOCATED MEMORY
SAVEAREA DS    18F                     REGISTER SAVE AREA
TOPFLAG  DS    CL24                    EYECATCHER
PLIST    DS    A                       PARMLIST ADDR FOR SUB CALLS
GTOAPARM DS    0H                      PARAMETERS FOR Y2KGTOA
GDATE    DS    CL8                       INPUT DATE
RCG      DS    CL1                       RETURN CODE
ANUMG    DS    ZL7                       ASTRO NUMBER
WORK     DS    PL4                     WORK FIELD FOR COMPUTATION
WORK2    DS    PL4                     WORK FIELD FOR COMPUTATION
BOTFLAG  DS    CL22                    EYECATCHER
*
$DYNLEN  EQU   (*-$DYNMEM)             LENGTH OF GETMAIN'D AREA
*
$PARMS   DSECT                         PARAMETERS FROM/TO CALLER
PDATE1   DS    CL8                     DATE TO BE PROCESSED
PDATE2   DS    CL8                     DATE TO BE PROCESSED
PRC      DS    CL1                     RETURN CODE (0, 2-9)
PDAYS    DS    ZL7                     DAYS DIFFERENCE
* ******************************************************************* *
         END
