./ ADD NAME=AUTHBLOK 0100-09054-09054-0236-00055-00055-00000-MACLIB
         MACRO
         AUTHBLOK &DSECT=
* ------------------------------------------------------------------- *
*                                                                     *
*      AUTHBLOK                                                       *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
AUTHBLOK           DS    0F
         AGO  .COMMON
.DSECT00 ANOP
AUTHBLOK            DSECT
.COMMON  ANOP
AUTH_EYE            DS   CL8         EYE CATCHER
AUTH_MEMBER         DS   CL8         MEMBER NAME
AUTH_VERSION        DS   XL2         MEMBER VERSION
AUTH_FUNCTION       DS   X           FUNCTION
$AUTH_CHECK_DELETE  EQU  X'01'       .. DELETE
$AUTH_CHECK_DESC    EQU  X'02'       .. VIEW/UPDATE DESCRIPTION
$AUTH_CHECK_IN      EQU  X'03'       .. CHECK IN
$AUTH_CHECK_NEW     EQU  X'04'       .. NEW MEMBER
$AUTH_CHECK_OUT     EQU  X'05'       .. CHECK OUT
$AUTH_CHECK_VIEW    EQU  X'06'       .. VIEW
$AUTH_CHECK_VERSION EQU  X'07'       .. CREATE A NEW VERSION
$AUTH_CHECK_ADMIN   EQU  X'08'       .. CHANGE IN/OUT STATUS OR USER
$AUTH_CHECK_SUBMIT  EQU  X'09'       .. SUBMIT AS BATCH JOB
AUTH_USER           DS   CL8         USER MAKING THIS REQUEST
AUTH_LIB            DS   CL8         LIBRARY
AUTH_CHECK_OWNER    DS   CL8         MEMBER OWNER
AUTH_CHECK_OUT_USER DS   CL8         MEMBER IS CHECKED OUT TO THIS USER
AUTH_MEMBER_STATUS  DS   X           MEMBER STATUS
$AUTH_STATUS_IN     EQU  X'01'       .. STATUS IS CHECKED-IN
$AUTH_STATUS_OUT    EQU  X'02'       .. STATUS IS CHECKED-OUT
$AUTH_STATUS_NONE   EQU  X'03'       .. MEMBER DOES NOT EXIST

* Any value except 0 will deny access
AUTH_RETURN_CODE    DS   X           RETURN CODE
$AUTH_OK            EQU  X'00'       .. ALLOW THE ACCESS

AUTH_MESSAGE        DS   0CL400      MESSAGES (EXPLAIN DENIALS)
AUTH_MESSAGE_1      DS   CL80
AUTH_MESSAGE_2      DS   CL80
AUTH_MESSAGE_3      DS   CL80
AUTH_MESSAGE_4      DS   CL80
AUTH_MESSAGE_5      DS   CL80
AUTHBLOKL EQU       *-AUTHBLOK
         MEND
./ ADD NAME=CLIENT   0100-09054-09054-0236-00008-00008-00000-MACLIB
         MACRO
         CLIENT &PREFIX=
&PREFIX._CLIENT       DS   0F
&PREFIX._CLIENT_DOMAIN DS  F
&PREFIX._CLIENT_NAME  DS   CL8
&PREFIX._CLIENT_TASK  DS   CL8
                      DS   XL20
         MEND
./ ADD NAME=COMMCOMM 0100-09054-09054-0236-00121-00121-00000-MACLIB
         MACRO
         COMMCOMM &MAIN=
COMM     DS    0D
*---------------------------------------------------------------------*
*                                                                     *
*          Double word for CVB/CVD                                    *
*                                                                     *
*---------------------------------------------------------------------*
COMMDWRD DC    D'0'
COMMDXDA DC    A(0)                WORK AREA base
*---------------------------------------------------------------------*
*                                                                     *
*          ADD TRACE ENTRY                                            *
*                                                                     *
*  During initialization the "main" module will have obtained storage *
*  for the trace table.  The "main" module will have set TRFIRST,     *
*  TRLAST, and TRCURR.  The "main" module all also have set R11 to    *
*  the label "COMM" at the very top of this CSECT.  All other modules *
*  depend on this remaining unchanged.  Any module except this        *
*  module may call the trace routine.  Macro ITRACE generates the     *
*  calling sequence.  R14 is the only register altered by the trace   *
*  macro.                                                             *
*                                                                     *
*  The trace table is a "wrap-around" table.  TRFIRST is the first    *
*  entry's address, TRLAST is the last entry's address, and           *
*  TRCURR is the address of the last entry added to the table.        *
*                                                                     *
*  Data captured in each trace entry is:                              *
*        The TCB address of the calling task                          *
*        The calling CSECT's suffix                                   *
*        ID coded on the ITRACE macro                                 *
*        DATA1 or RDATA1 or zeros                                     *
*        DATA2 or RDATA2 or zeros                                     *
*                                                                     *
*                                                                     *
*      This code depends on:                                          *
*           R11  base address of this code                            *
*           R12  current module's base address                        *
*           R13  the standard work area address for the caller        *
*           R14  trace id's address and R14 + 8 will be the return    *
*                address                                              *
*                                                                     *
*---------------------------------------------------------------------*
TRACE000 DS    0H
         USING DXDSAVE,R13         DEFINE BASE
         USING MODPRFX,R12         DEFINE BASE
         USING TRENTRY,R2          DEFINE BASE
         STM   R14,R12,12(R13)     SAVE REGISTERS
TRACE010 DS    0H
         ICM   R2,15,TRCURR        CURRENT TRACE ENTRY
         BZ    TRACE040            NO TRACE TABLE
         OC    0(TRENTRYL,R2),0(R2)    EMPTY ENTRY?
         BZ    TRACE020            YES.. USE THIS ENTRY
         LA    R2,TRENTRYL(R2)     NEXT TRACE ENTRY
         C     R2,TRLAST           BEYOND END OF TABLE?
         BNH   TRACE020            NO
         L     R2,TRFIRST          'WRAP' TRACE TABLE
TRACE020 DS    0H
         L     R1,TRCURR           CURRENT TRACE ENTRY
         CS    R1,R2,TRCURR        UPDATE 'CURRENT' ADDRESS
         BC    4,TRACE010          UNSUCCESSFUL, TRY AGAIN
         ST    R2,TRCURR           SAVE CURRENT TRACE ENTRY ADDRESS
         USING PSA,R0              DEFINE PSA BASE
         MVC   TRETCB,PSATNEW+1    COPY TCB ADDRESS
         MVC   TREMOD,PFXMODNM+3   COPY MODULE NAME
         CLC   TRACE050,PFXMODNM+1 IS THIS A 'SUB' SOMETHING?
         BNE   TRACE030            NO
         MVC   TREMOD(1),PFXMODNM  COPY 1ST CHARACTER OF NAME
TRACE030 DS    0H
         MVC   TREID,0(R14)        COPY TRACE ID
         MVC   TREDATA1,TRDATA1    COPY TRACE DATA 1
         MVC   TREDATA2,TRDATA2    COPY TRACE DATA 2
         XC    TRDATA1,TRDATA1     CLEAR TRACE DATA
         XC    TRDATA2,TRDATA2     CLEAR TRACE DATA
         TM    XTRFLAG,$XTRON      EXTERNAL TRACE ON?
         BNO   TRACE040            NO
         MVC   XTRDATA(TRENTRYL),TRENTRY
         MVI   XTRLEN+0,0          SET LENGTH
         MVI   XTRLEN+1,36         SET LENGTH
         GETMAIN R,LV=72
         ST    R13,4(R1)
         ST    R1,8(R13)
         LR    R13,R1
         PUT   XTRACE,XTRREC       WRITE TO EXTERNAL TRACE
         LR    R1,R13
         L     R13,4(R1)
         FREEMAIN R,A=(1),LV=72
TRACE040 DS    0H
         LM    R14,R12,12(R13)     RESTORE REGISTERS
         B     8(R14)              RETURN
TRACE050 DC    C'SUB'
*---------------------------------------------------------------------*
*                                                                     *
*          TRACE CONTROL                                              *
*                                                                     *
*---------------------------------------------------------------------*
         DS    0A
         DC    CL4'1STX'           FIRST TRACE ENTRY
TRFIRST  DC    A(0)
         DC    CL4'LAST'           LAST TRACE ENTRY
TRLAST   DC    A(0)
         DC    CL4'CURR'           CURRENT TRACE ENTRY
TRCURR   DC    A(0)
TRADDR   DC    A(0)                TRACE TABLE STORAGE ADDRESS
TRSIZE   DC    A(0)                TRACE TABLE SIZE
XTRACE   DCB   DSORG=PS,                                               +
               DDNAME=LIBXTR,                                          +
               RECFM=VB,                                               +
               LRECL=32756,                                            +
               BLKSIZE=32760,                                          +
               MACRF=PM
XTRFLAG  DC    X'00'
$XTRON   EQU   X'80'               EXTERNAL TRACE DD PRESENT
$XTROPEN EQU   X'40'               EXTERNAL TRACE IS OPEN
XTRREC   DS    0H
XTRLEN   DS    XL2
XTRBB    DS    XL2
XTRDATA  DS    (TRENTRYL)C
*---------------------------------------------------------------------*
COMMIOSZ EQU   32767
         MEND
./ ADD NAME=DAIRREQ  0100-09054-09054-0236-00044-00044-00000-MACLIB
         MACRO
         DAIRREQ &DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
*      DAIR REQUEST BLOCK                                             *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'YES').DSECT00
         AIF  ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00    ANOP
DAIRREQ     DS    0F
               AGO  .COMMON
.DSECT00       ANOP
DAIRREQ        DSECT
.COMMON        ANOP
DAIR_EYE       DS   CL8             EYECATCHER
DAIR_NEXT      DS   A               NEXT BLOCK ON THE CHAIN
DAIR_ECB       DS   A               ECB CALLER WILL BE WAITING ON
DAIR_CMD       DS   X               COMMAND
$DAIR_EXISTING EQU  X'01'           .. ALLOCATE EXISTING DATA SET
$DAIR_NEW      EQU  X'02'           .. ALLOCATE NEW DATA SET
$DAIR_SYSOUT   EQU  X'03'           .. ALLOCATE SNAP (SPUN SYSOUT)
$DAIR_INTRDR   EQU  X'04'           .. ALLOCATE INTERNAL READER
$DAIR_RELEASE  EQU  X'05'           .. RELEASE
$DAIR_DELETE   EQU  X'06'           .. DELETE
DAIR_DD        DS   CL8             DDNAME NAME
DAIR_DSN       DS   CL44            DATASET NAME
DAIR_MEMBER    DS   CL8             MEMBER NAME
DAIRBLKN       DS   XL4             ALLOCATION BLOCK LENGTH
DAIRPRI        DS   XL4             PRIMARY ALLOCATION QUANTITY
DAIRSEC        DS   XL4             SECONDARY ALLOCATION QUANTITY
DAIRUNIT       DS   CL8             UNIT NAME
DAIR_CLASS     DS   C               OUTPUT CLASS FOR SPUN SYSOUT
DAIR_R15       DS   XL2             R15 FROM SVC99
DAIR_ERROR     DS   XL2             ERROR CODE FROM SVC99
DAIR_INFO      DS   XL2             INFO CODE FROM SVC99
DAIRL          EQU  *-DAIRREQ
         MEND
./ ADD NAME=FMH5     0100-09054-09054-0236-00037-00037-00000-MACLIB
         MACRO
         FMH5  &DSECT=,&TRAN=
         LCLA  &LEN
         AIF   ('&DSECT' EQ 'YES').DSECT00
         AIF   ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'''DSECT'' IS INVALID, MUST BE ''YES'' OR ''NO'' '
         MEXIT
.DSECT00 ANOP
FMH5     DSECT
         AGO   .COMM
.CSECT00 ANOP
FMH5     DS    0A
.COMM    ANOP
         DC    AL1(FMH5L)            FMH LENGTH
         DC    X'05'                 FMH TYPE
         DC    XL2'02FF'             ATTACH COMMAND CODE
         DC    X'00'                 FLAG BYTE
         DC    X'03'                 LENGTH OF FIXED PARAMETERS FIELD
         DC    X'D0'                 CONVERSATION TYPE (BASIC)
         DC    X'00'                 RESERVED
         DC    X'40'                 ALLOW CONFIRMS
         AIF   ('&DSECT' EQ 'YES').DSECT01
&LEN     SETA  K'&TRAN
FMH5TRNL DC    AL1(&LEN)             TRANSACTION NAME LENGTH
FMH5TRAN DC    C'&TRAN'              TRANSACTION NAME
FMH5UID  DS    CL8                   TSO ID OF USER
FMH5SMF  DS    CL4                   SMF ID OF USER
         AGO   .CSECT01
.DSECT01 ANOP
FMH5TRNL DS    X                     TRANSACTION NAME LENGTH
FMH5TRAN DS    CL8                   TRANSACTION NAME
.CSECT01 ANOP
         DC    X'00'                 LENGTH OF SECURITY INFORMATION
         DC    X'00'                 LENGTH OF LUW IDENTIFIER
         DC    X'00'                 LENGTH OF CONVERSATION CORRELATOR
FMH5L    EQU   *-FMH5                FMH LENGTH
         MEND
./ ADD NAME=HISTREQ  0100-09054-09054-0236-00021-00021-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*        SOURCE HISTORY BLOCK                                         *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         HISTREQ &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').LBL0010
HISTREQ  DS    0A
         AGO   .LBL0020
.LBL0010 ANOP
HISTREQ  DSECT
.LBL0020 ANOP
HISTEYE  DS    CL8                 EYECATCHER
HISTNEXT DS    A                   NEXT BLOCK ON CHAIN
HISTECB  DS    A                   ECB POSTED WHEN COMPLETE
HISTLIB  DS    CL8                 LIBRARY NAME
HISTNAME DS    CL8                 SOURCE NAME
HISTVER  DS    XL2                 SOURCE VERSION
HISTREQL EQU   *-HISTREQ
         MEND
./ ADD NAME=ITRACE   0100-09054-09054-0236-00071-00071-00000-MACLIB
.* ------------------------------------------------------------------*
.*                                                                   *
.*                        TRACE MACRO                                *
.*                                                                   *
.*       The trace function always captures the last three bytes of  *
.*       the active task's TCB address and bytes 3-7 of the active   *
.*       CSECT's name, and a trace ID.                               *
.*                                                                   *
.*       One or two data elements (8 bytes each) may be captured at  *
.*       any trace point.  The data to be captured may be specified  *
.*       in either of two ways: DATA1 or RDATA1 and DATA2 or RDATA2. *
.*       DATA1 and RDATA1 are mutually exclusive as are DATA2 and    *
.*       RDATA2.  DATA1 and DATA2 specify the address of data to be  *
.*       captured, RDATA1 and RDATA2 specify a register whose        *
.*       contents are to be captured.                                *
.*                                                                   *
.*       For example:                                                *
.*                                                                   *
.*                 ITRACE ID=POINTA,DATA1=VALUE1,RDATA2=R4           *
.*                                                                   *
.*          In this case the trace entry would include the TCB       *
.*          address, CSECT name, ID "POINTA", 8 bytes of data        *
.*          beginning at value1's address and the contents of        *
.*          register 4.                                              *
.*                                                                   *
.* ------------------------------------------------------------------*
         MACRO
&NAME    ITRACE &ID=,&DATA1=,&DATA2=,&RDATA1=,&RDATA2=
         AIF   (T'&DATA1 NE 'O' AND T'&RDATA1 NE 'O').ERR0010
         AIF   (T'&DATA2 NE 'O' AND T'&RDATA2 NE 'O').ERR0020
         AIF   ('&SYSPARM' EQ 'NOTRACE').MEXIT
         AIF   (T'&DATA1 EQ 'O').DATA020
         AIF   ('&DATA1'(1,1) EQ '(').DATA010
         LA    R14,&DATA1            DATA ADDRESS
         MVC   TRDATA1,0(R14)        MOVE DATA
         AGO   .DATA030
.DATA010 ANOP
         MVC   TRDATA1,0&DATA1       MOVE DATA
         AGO   .DATA030
.DATA020 ANOP
         AIF   (T'&RDATA1 EQ 'O').DATA030
         STCM  &RDATA1,15,TRDATA1    SAVE REGISTER CONTENTS
.DATA030 ANOP
         AIF   (T'&DATA2 EQ 'O').DATA050
         AIF   ('&DATA2'(1,1) EQ '(').DATA040
         LA    R14,&DATA2            DATA ADDRESS
         MVC   TRDATA2,0(R14)        MOVE DATA
         AGO   .DATA060
.DATA040 ANOP
         MVC   TRDATA2,0&DATA2       MOVE DATA
         AGO   .DATA060
.DATA050 ANOP
         AIF   (T'&RDATA2 EQ 'O').DATA060
         STCM  &RDATA2,15,TRDATA2    SAVE REGISTER CONTENTS
.DATA060 ANOP
         BAL   R14,TRACE000          ENTER TRACE ROUTINE
         AIF      (T'&ID EQ 'O').NOID
&NAME    DC    CL8'&ID'              TRACE ID
         AGO   .ID
.NOID    ANOP
&NAME    DC    CL8'**NOID**'
.ID      ANOP
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'DATA1 AND RDATA1 ARE MUTUALLY EXCLUSIVE'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'DATA2 AND RDATA2 ARE MUTUALLY EXCLUSIVE'
.MEXIT   ANOP
         MEXIT
         MEND
./ ADD NAME=LIBBLOK  0100-09054-09054-0236-00049-00049-00000-MACLIB
         MACRO
         LIBBLOK &DSECT=
* ------------------------------------------------------------------- *
*                                                                     *
*      Libraries exist in VSAM clusters.  Users refer to the library  *
*      by "name".  The LIBRARY statements in the STC's start up       *
*      parameters associate library names with the corresponding VSAM *
*      cluster.                                                       *
*                                                                     *
*      There is a LIBBLOK per STC LIBRARY parameter statement.        *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
LIBBLOK             DS  0F
         AGO  .COMMON
.DSECT00 ANOP
LIBBLOK             DSECT
.COMMON  ANOP
LIB_EYE             DS  CL8         EYECATCHER
LIB_NEXT            DS  A           NEXT LIBRARY BLOCK
LIB_READS           DS  A           NUMBER OF READS
LIB_WRITES          DS  A           NUMBER OF WRITES
LIB_ERASES          DS  A           NUMBER OF ERASES
LIB_NEW             DS  A           NUMBER OF NEW MEMBERS
LIB_CHECK_OUT       DS  A           NUMBER OF MEMBER CHECK-OUTS
LIB_CHECK_IN        DS  A           NUMBER OF MEMBER CHECK-INS
LIB_VIEW            DS  A           NUMBER OF VIEWED MEMBERS
LIB_UPDATE          DS  A           NUMBER OF UPDATED MEMBERS
LIB_DELETE          DS  A           NUMBER OF DELETED MEMBERS
LIB_USERS           DS  A           CHAIN OF ACTIVE USERS

LIB_NAME            DS  CL8         LIBRARY NAME
LIB_DESCRIPTION     DS  CL80        LIBRARY DESCRIPTION
LIB_VSAM_DSN        DS  CL44        VSAM CLUSTER DSN
LIB_ACB             DS  (ACBL)X     ACB
LIB_STATUS          DS  X
$LIB_AUTO_OPEN      EQU X'80'       OPEN AT START UP
$LIB_ALLOCATED      EQU X'40'       LIBRARY IS ALLOCATED
$LIB_OPEN           EQU X'20'       LIBRARY IS OPEN
LIBBLOKL            EQU *-LIBBLOK
         MEND
./ ADD NAME=LIBFUNC  0100-09054-09054-0236-00039-00039-00000-MACLIB
         MACRO
         LIBFUNC &DSECT=YES
* ------------------------------------------------------------------- *
*                                                                     *
*      LIBRARY REQUEST BLOCK                                          *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'YES').DSECT00
         AIF  ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
LIBFUNC                DS   0F
         AGO  .COMMON
.DSECT00 ANOP
LIBFUNC                DSECT
.COMMON  ANOP
LIB_FUNCTION_EYE       DS  CL8        EYECATCHER
LIB_FUNCTION_NEXT      DS  A          NEXT BLOCK ON THE CHAIN
LIB_FUNCTION_ECB       DS  A
LIB_FUNCTION_USER      DS  A          USERBLOK ADDRESS (ADDS/REMS)
LIB_FUNCTION           DS  X          COMMAND
$LIB_FUNCTION_OPEN     EQU X'01'      .. OPEN
$LIB_FUNCTION_CLOSE    EQU X'02'      .. CLOSE
$LIB_FUNCTION_CLOSET   EQU X'03'      .. CLOSE, TYPE=T
$LIB_FUNCTION_ADD_USER EQU X'04'      .. ADD A USER
$LIB_FUNCTION_REM_USER EQU X'05'      .. REMOVE A USER
$LIB_FUNCTION_REM_TASK EQU X'06'      .. REMOVE A USER (SUBTASK ENDED)
LIB_FUNCTION_STATUS    DS  X          STATUS
$LIB_FUNCTION_OK       EQU X'00'      .. ALL SUCCESSFUL
$LIB_FUNCTION_ERROR    EQU X'01'      .. ERROR HAS OCCURRED
LIB_FUNCTION_LIB_NAME  DS  CL8        LIBRARY NAME
LIB_FUNCTION_MESSAGE   DS  CL120
LIBFUNCL               EQU *-LIBFUNC
         MEND
./ ADD NAME=LIBPRFX  0100-09054-09054-0236-00007-00007-00000-MACLIB
MODPRFX  DSECT
         STM   R14,R12,12(R13)     SAVE ENTRY REGISTERS                 ASE00110
         LR    R12,R15             LOAD PERMANENT BASE                  ASE00120
         B     0(R0)               BRANCH AROUND MOD NAME/TIME/DESC
PFXMODNM DS    CL8                 MODULE NAME
PFXMODDT DS    CL8                 ASSEMBLY DATE
PFXMODTM DS    CL6                 ASSEMBLY TIME
./ ADD NAME=LIBRECD  0100-09054-09054-0236-00051-00051-00000-MACLIB
         MACRO
         LIBRECD &DSECT=YES
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'YES').DSECT00
         AIF  ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
* ------------------------------------------------------------------- *
*                                                                     *
*        Library "index" record                                       *
*                                                                     *
* ------------------------------------------------------------------- *
LIB_RECORD               DS   0C
         AGO  .COMMON
.DSECT00 ANOP
LIB_RECORD               DSECT
.COMMON  ANOP
LIB_KEY                  DS  0CL15
LIB_KEY_TYPE             DS  C
$LIB_KEY_LIB_DESC        EQU X'00'
$LIB_KEY_TYPE_INDEX      EQU X'01'
$LIB_KEY_TYPE_DATA       EQU X'02'
LIB_KEY_NAME             DS  CL8
LIB_KEY_VERSION          DS  XL2
LIB_KEY_SEQ              DS  XL4
LIB_DATA                 DS  0CL80

LIB_INDEX                DS  0C
LIB_INDEX_OWNER          DS  CL8
LIB_INDEX_STATUS         DS  X
$LIB_STATUS_IN           EQU X'01'
$LIB_STATUS_OUT          EQU X'02'

LIB_INDEX_CREATE_DATE    DS  XL4
LIB_INDEX_CREATE_TIME    DS  XL4
LIB_INDEX_CHECK_OUT_DATE DS  XL4
LIB_INDEX_CHECK_OUT_TIME DS  XL4
LIB_INDEX_CHECK_OUT_USER DS  CL8
LIB_INDEX_CHECK_OUTS     DS  XL4
LIB_INDEX_CHECK_IN_DATE  DS  XL4
LIB_INDEX_CHECK_IN_TIME  DS  XL4
LIB_INDEX_CHECK_IN_USER  DS  CL8
LIB_INDEX_RECORDS        DS  XL4          NUMBER OF RECORDS IN SOURCE
                         ORG LIB_DATA
LIB_INDEX_DESC           DS  CL80         DESCRIPTION
LIB_INDEX_RECORD_LENGTH  EQU *-LIB_RECORD
         MEND
./ ADD NAME=LIBSAVE  0100-09054-09054-0236-00021-00021-00000-MACLIB
         MACRO
&NAME    LIBSAVE &DSECT=NO
         LCLC   &DNAME
         AIF    ('&DSECT' EQ 'YES').LBL0010
         AIF    ('&DSECT' EQ 'NO').LBL0020
         MNOTE  12,'INVALID ''DSECT'' PARAMETER'
         MEXIT
.LBL0010 ANOP
         AIF    (T'&NAME EQ 'O').LBL001A
&DNAME   SETC   '&NAME'
         AGO    .LBL001B
.LBL001A ANOP
&DNAME   SETC   'LIBSAVE'
.LBL001B ANOP
&DNAME   DSECT
.LBL0020 ANOP
DXDSAVE  DS    18F
DXDID    DS    CL8
TRDATA1  DS    CL8
TRDATA2  DS    CL8
         MEND
./ ADD NAME=LIBSPFD  0100-09054-09054-0236-00089-00089-00000-MACLIB
         MACRO
         LIBSPFD  &TYPE=
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
LIBSPFD  CSECT
         AGO   .COMM
.DSECT   ANOP
LIBSPFD  DSECT
.COMM    ANOP
SPF_LVLINE             DC    F'0'       LAST VISIBLE LINE
SPF_VWIDTH             DC    F'0'       DYNAMIC AREA WIDTH
SPF_VCOL               DC    F'0'       DYNAMIC AREA COLUMN
SPF_VDEPTH             DC    F'0'       DYNAMIC AREA DEPTH
SPF_VROW               DC    F'0'       DYNAMIC AREA ROW
SPF_DYNAMIC_AREA_ADDR  DC    A(0)       DYNAMIC AREA ADDRESS
SPF_DYNAMIC_AREA_SIZE  DC    F'0'       DYNAMIC AREA SIZE
SPF_TEXT_ADDR          DC    A(0)       DYNAMIC AREA TEXT ADDRESS
SPF_TEXT_SIZE          DC    F'0'       DYNAMIC AREA TEXT SIZE
SPF_TEXT_LINES         DC    F'0'       NUMBER OF TEXT LINES
SPF_TEXT_LINE_LENGTH   DC    F'0'       LENGTH OF EACH TEXT LINE
SPF_TEXT_OFFSET        DC    F'0'       DYNAMIC AREA TEXT OFFSET
SPF_TEXT_RELATIVE_LINE DC    F'0'       DYNAMIC AREA TEXT OFFSET
SPF_CURSOR_POSITION    DC    F'0'       CURSOR POSITION
SPF_VTYPE              DC    CL8' '     DYNAMIC AREA TYPE
SPF_ZSCROLLN           DC    F'0'       NUMBER OF LINES TO SCROLL
SPF_ZSCROLLA           DC    CL8' '     SCROLL AMOUNT
SPF_ZVERB              DC    CL8' '     SPF VERB
SPF_LIB_NAME           DC    CL8' '     SPF LIBRARY NAME
SPF_LIB_DESC           DC    CL40' '    SPF LIBRARY DESCRIPTION
SPF_MEM_NAME           DC    CL8' '     SPF MEMBER NAME
SPF_MEM_VERSION        DC    CL5' '     SPF MEMBER VERSION
SPF_IN_OUT_STATUS      DC    CL3' '     CHECK IN/OUT STATUS
SPF_OUT_USER           DC    CL8' '     CHECKED OUT TO THIS USER
SPF_OWNER              DC    CL8' '     OWNED BY THIS USER
SPF_DATA_ID            DC    CL8' '     DATA ID FOR BROWSE
SPF_ZCMD               DC    CL80' '    SPF COMMAND AREA

SPF_SYSTEM_NAME        DS    CL20' '    LIBRARIAN'S NAME

SPF_USER_DSN           DC    CL44' '    USER DATASET
SPF_USER_MEMBER        DC    CL8' '     USER MEMBER
SPF_OPTION             DC    CL4' '     OPTION
SPF_UNIT               DC    CL8' '     UNIT NAME FOR NEW ALLOCATIONS

SPF_MSG1               DS    0CL76
SPF_MSG1_ID            DC    CL11' '    MESSAGE ID
SPF_MSG1_TEXT          DC    CL65' '    MESSAGE TEXT
SPF_MSG2               DS    0CL76
SPF_MSG2_ID            DC    CL11' '    MESSAGE ID
SPF_MSG2_TEXT          DC    CL65' '    MESSAGE TEXT
SPF_MSG3               DS    0CL76
SPF_MSG3_ID            DC    CL11' '    MESSAGE ID
SPF_MSG3_TEXT          DC    CL65' '    MESSAGE TEXT
SPF_MSG4               DS    0CL76
SPF_MSG4_ID            DC    CL11' '    MESSAGE ID
SPF_MSG4_TEXT          DC    CL65' '    MESSAGE TEXT
SPF_MSG5               DS    0CL76
SPF_MSG5_ID            DC    CL11' '    MESSAGE ID
SPF_MSG5_TEXT          DC    CL65' '    MESSAGE TEXT

SPF_MISC1              DC    CL79' '
SPF_MISC2              DC    CL79' '
SPF_MISC3              DC    CL79' '
SPF_MISC4              DC    CL79' '
SPF_MISC5              DC    CL79' '
SPF_MISC6              DC    CL79' '
SPF_MISC7              DC    CL79' '
SPF_MISC8              DC    CL79' '
SPF_MISC9              DC    CL79' '
SPF_MISC10             DC    CL79' '

SPF_PANEL              DC    CL8' '     SPF PANEL NAME
SPF_DISPLAY_FLAGS      DC    X'00'      DISPLAY OPTIONS
$NO_SCROLL             EQU   X'80'      .. NO SCROLLING
$NO_CURSOR             EQU   X'40'      .. NO CURSOR POSITION DATA

SPF_SMF                DC    CL8' '     USER'S SYSTEM SMF NAME
SPF_USER               DC    CL8' '     USER'S USERID
SPF_USER_NAME          DC    CL20' '    USER'S NAME

SPF_COMM1              DC    CL80' '    COMMENT 1
SPF_COMM2              DC    CL80' '    COMMENT 2
SPF_COMM3              DC    CL80' '    COMMENT 3
SPF_COMM4              DC    CL80' '    COMMENT 4
SPF_COMM5              DC    CL80' '    COMMENT 5
         MEND
./ ADD NAME=LIBUSER  0100-09054-09054-0236-00029-00029-00000-MACLIB
         MACRO
         LIBUSER &DSECT=
* ------------------------------------------------------------------- *
*                                                                     *
*      When a user begins accessing a library, a LIBUSER block is     *
*      added to the chain anchored at LIB_USER in the LIBBLOK.        *
*      When the user changes libraries or ends the session with the   *
*      librarian, the LIBUSER block is removed.                       *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
LIBUSER             DS  0F
         AGO  .COMMON
.DSECT00 ANOP
LIBUSER             DSECT
.COMMON  ANOP
LIB_USER_EYE        DS  CL8         EYECATCHER
LIB_USER_NEXT       DS  A           NEXT LIBUSER BLOCK
LIB_USER_USER       DS  A           USERBLOK ADDRESS
LIBUSERL            EQU *-LIBUSER
         MEND
./ ADD NAME=NETBLOK  0100-09054-09054-0236-00064-00064-00000-MACLIB
         MACRO
         NETBLOK &DSECT=
* ------------------------------------------------------------------- *
*                                                                     *
*      NETBLOK  is the data sent between a user and the STC           *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
NETBLOK            DS    0F
         AGO  .COMMON
.DSECT00 ANOP
NETBLOK            DSECT
.COMMON  ANOP
NET_LENGTH             DS   XL2     LENGTH
NET_FILL               DS   XL2
NET_FUNCTION           DS   X       FUNCTION
$NET_IDENTIFY_USER     EQU  X'01'   .. IDENTIFY USER
$NET_GET_LIBS          EQU  X'02'   .. GET LIST OF LIBRARIES
$NET_GET_MEMBERS       EQU  X'03'   .. GET LIST OF MEMBERS
$NET_CHECK_IN_AUTH     EQU  X'04'   .. VERIFY AUTH FOR A CHECK-IN
$NET_CHECK_IN_SOURCE   EQU  X'05'   .. CHECKING IN SOURCE DATA
$NET_CHECK_NEW_AUTH    EQU  X'06'   .. CHECK AUTH FOR A NEW MEMBER
$NET_CHECK_OUT_AUTH    EQU  X'07'   .. VERIFY AUTH FOR A CHECK-OUT
$NET_CHECK_OUT_SOURCE  EQU  X'08'   .. CHECK OUT MEMBER SOURCE
$NET_CHECK_VIEW_AUTH   EQU  X'09'   .. VIEW MEMBER SOURCE
$NET_VIEW_SOURCE       EQU  X'0A'   .. VIEW MEMBER SOURCE
$NET_CHECK_DESC_AUTH   EQU  X'0B'   .. CHECK AUTH FOR VIEW/UPDATE DESC
$NET_SEND_DESC         EQU  X'0C'   .. FILE DESCRIPTION
$NET_GET_DESC          EQU  X'0D'   .. FILE DESCRIPTION
$NET_GET_RECORDS       EQU  X'0E'   .. GET NUMBER OF SOURCE RECORDS
$NET_SEND_RECORDS      EQU  X'0F'   .. SEND NUMBER OF SOURCE RECORDS
$NET_ENQUE_LIB         EQU  X'10'   .. ENQUEUE A LIBRARY
$NET_DEQ_LIB           EQU  X'11'   .. DEQUEUE A LIBRARY
$NET_CHECK_DEL_AUTH    EQU  X'12'   .. CHECK AUTH FOR DELETION
$NET_DELETE            EQU  X'13'   .. DELETE A MEMBER
$NET_NEW_VERSION       EQU  X'14'   .. CREATE A NEW VERSION OF A MEMBER
$NET_CONFIRM_CHECK_OUT EQU  X'15'   .. CONFIRM CHECK OUT
$NET_ABORT_CHECK_OUT   EQU  X'16'   .. ABORT CHECK-OUT
$NET_GET_STATUS        EQU  X'17'   .. GET STC STATUS
$NET_CHECK_ADMIN_AUTH  EQU  X'18'   .. CHECK AUTH FOR ADMIN FUNCTION
$NET_SEND_ADMIN        EQU  X'19'   .. UPDATE IN/OUT STATUS OR USER
$NET_UNDO              EQU  X'1A'   .. UNDO (RESET CHECK OUT STATUS)
$NET_SUBMIT_JOB        EQU  X'1B'   .. SUBMIT AS BATCH JOB
$NET_CLOSE             EQU  X'FF'   .. CLOSE (TCP/IP CONNECTION)
NET_RETURN_CODE        DS   X
$NET_OK                EQU  X'00'   .. SUCCESSFUL
$NET_EOF               EQU  X'01'   .. END_OF_FILE
$NET_ERROR             EQU  X'02'   .. ERROR
NET_MSG_1              DS   CL80
NET_MSG_2              DS   CL80
NET_MSG_3              DS   CL80
NET_MSG_4              DS   CL80
NET_MSG_5              DS   CL80
NET_DATA               DS   0C
NETBLOKL               EQU  *-NETBLOK
         MEND
./ ADD NAME=OPTDSECT 0100-09054-09054-0236-00013-00013-00000-MACLIB
OPTDSECT DSECT
OPTTRACE DS    H                NUMBER OF TRACE ENTRIES
         SPACE 1
OPTMAXL  DS    PL3
         SPACE 1
OPTRACF  DS    0CL09
OPTRACFL DS    AL1              LENGTH OF RACF CLASS
OPTRACFC DS    CL8              RACF CLASS
OPTSNAPC DS    C                SNAP DUMP SYSOUT CLASS
OPTPORT  DS    AL2              TCP/IP PORT NUMBER
         SPACE 1
OPT#ACB  DS    AL2              NUMBER OF ACBS
OPTACB   DS    CL8              USER ACB NAME(S)
./ ADD NAME=OPTIONS  0100-09054-09054-0236-00046-00046-00000-MACLIB
         MACRO
         OPTIONS &TRSIZE=500,         NUMBER OF TRACE TABLE ENTRIES    +
               &MAXLINES=65,          MAX LINE COUNT OUT SYSOUT        +
               &PORT=,                PORT NUMBER (TCPIP)              +
               &RACCLASS=APPL,        RACF CLASS 'LIB'                 +
               &SNAPCLAS=Z,           SYSOUT CLASS FOR SNAP DUMPS      +
               &UACB=                 SPECIFY USER INTERFACE ACB NAMES
         LCLA  &INDX1,&IP
&IP      SETA  0
         AIF   (T'&PORT EQ 'O').NOPORT
         AIF   (T'&PORT NE 'N').BADPORT
         AIF   (&PORT EQ 0).PORT0
.NOPORT  ANOP
         AGO   .MAIN
.BADPORT ANOP
         MNOTE 12,'PORT VALUE MUST BE NUMERIC'
         MEXIT
.PORT0   ANOP
         MNOTE 12,'PORT NUMBER MAY NOT BE ZERO'
         MEXIT
.MAIN    ANOP
&IP      SETA  &PORT
LIBOPT   CSECT
LIBOPT   AMODE 31
LIBOPT   RMODE ANY
         DC    H'&TRSIZE'             NUMBER OF TRACE ENTRIES
         DC    PL3'&MAXLINES'         MAX LINES PER PAGE
         DC    AL1(8)                 LENGTH OF RACF CLASS
         DC    CL8'&RACCLASS'         RACF CLASS
         DC    C'&SNAPCLAS'           SNAP DUMP SYSOUT CLASS
         DC    AL2(&IP)               TCPIP PORT NUMBER
         DC    AL2((ACBEND-ACBSTART)/ACBLEN)
ACBSTART DS    0C
&INDX1   SETA  1
.ACB00   ANOP
         AIF   (T'&UACB(&INDX1) EQ 'O').MEND
         DC    CL8'&UACB(&INDX1)'     USER ACB NAME
         AIF   (&INDX1 EQ N'&UACB).MEND
         AIF   (&INDX1 GT 1).ACB10
ACBLEN   EQU   *-ACBSTART
.ACB10   ANOP
&INDX1   SETA  &INDX1+1
         AGO   .ACB00
.MEND    ANOP
ACBEND   DS    0C
         MEND
./ ADD NAME=PRTBLOK  0100-09054-09054-0236-00024-00024-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*        PRINTER REQUEST BLOCK                                        *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         PRTBLOK &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').LBL0010
PRTBLOK  DS    0A
         AGO   .LBL0020
.LBL0010 ANOP
PRTBLOK  DSECT
.LBL0020 ANOP
PRTEYE   DS    CL8                 EYECATCHER
PRTNEXT  DS    A                   NEXT BLOCK ON THE CHAIN
PRTCMD   DS    C                   COMMAND
$PRTHEAD EQU   C'H'                .. PRINT HEADING
$PRTPRT  EQU   C'P'                .. PRINT
$PRTASIS EQU   C'A'                .. PRINT AS IS
PRTCC    DS    C                   CARRIAGE CONTROL
PRTMSGID DS    CL11                MESSAGE ID
PRTDATA  DS    CL120               PRINT DATA
PRTBLOKL EQU   *-PRTBLOK
         MEND
./ ADD NAME=REGEQU   0100-09054-09054-0236-00016-00016-00000-MACLIB
R0       EQU    0
R1       EQU    1
R2       EQU    2
R3       EQU    3
R4       EQU    4
R5       EQU    5
R6       EQU    6
R7       EQU    7
R8       EQU    8
R9       EQU    9
R10      EQU    10
R11      EQU    11
R12      EQU    12
R13      EQU    13
R14      EQU    14
R15      EQU    15
./ ADD NAME=SCOMM    0100-09054-09054-0236-00158-00158-00000-MACLIB
         MACRO
         SCOMM &TYPE=
*---------------------------------------------------------------------*
*                                                                     *
*          STC COMMON AREA MAPPING MACRO                              *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
LIBSCOMM CSECT
LIBSCOMM AMODE 31
LIBSCOMM RMODE ANY
         AGO   .NODSECT
.DSECT   ANOP
LIBSCOMM DSECT
.NODSECT ANOP
         COMMCOMM MAIN=SCOMM
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
                      DC    CL8'LIBSATTN'
COMM_LIBATTN          DC    A(0)      ATTENTION EXIT
                      DC    CL8'LIBLERAD'
COMM_LIBLERAD         DC    A(0)      LERAD EXIT
                      DC    CL8'LIBSMAIN'
COMM_LIBSMAIN         DC    A(0)      STC MAINLINE
*---------------------------------------------------------------------*
*                                                                     *
*          PRINT SUBTASK CONTROL                                      *
*                                                                     *
*---------------------------------------------------------------------*
COMM_PRINT_TCB        DC    A(0)      PRINT SUBTASK'S TCB ADDRESS
COMM_PRINT_REQ        DC    A(0)      PRINT SUBTASK PRTBLOK QUEUE
COMM_PRINT_TERM_ECB   DC    A(0)      PRINT SUBTASK TERMINATION ECB
COMM_PRINT_WORK_ECB   DC    A(0)      PRINT WORK TO DO ECB
COMM_PRINT_DXD        DC    A(0)      PRINT SUBTASK'S WORK AREA
*---------------------------------------------------------------------*
*                                                                     *
*          Console subtask control                                    *
*                                                                     *
*---------------------------------------------------------------------*
COMM_CSUB_TCB         DC    A(0)      CONSOLE SUBTASK'S TCB ADDRESS
COMM_CSUB_TERM_ECB    DC    A(0)      CONSOLE SUBTASK TERMINATION ECB
COMM_CSUB_WORK_ECB    DC    A(0)      CONSOLE SUBTASK WORK TO DO ECB
*---------------------------------------------------------------------*
*                                                                     *
*          Dynamic allocation/de-allocation                           *
*                                                                     *
*---------------------------------------------------------------------*
COMM_DSUB_TCB         DC    A(0)      DAIR SUBTASK'S TCB ADDRESS
COMM_DSUB_REQ         DC    A(0)      DAIR SUBTASK WORK QUEUE
COMM_DSUB_TERM_ECB    DC    A(0)      DAIR SUBTASK TERMINATION ECB
COMM_DSUB_WORK_ECB    DC    A(0)      DAIR SUBTASK WORK TO DO ECB
*---------------------------------------------------------------------*
*                                                                     *
*          Library open/close                                         *
*                                                                     *
*---------------------------------------------------------------------*
COMM_LSUB_TCB         DC    A(0)      OPEN/CLOSE SUBTASK'S TCB ADDRESS
COMM_LSUB_REQ         DC    A(0)      OPEN/CLOSE SUBTASK WORK QUEUE
COMM_LSUB_TERM_ECB    DC    A(0)      OPEN/CLOSE SUBTASK TERM ECB
COMM_LSUB_WORK_ECB    DC    A(0)      OPEN/CLOSE SUBTASK WORK TO DO ECB
*---------------------------------------------------------------------*
*                                                                     *
*          Source history subtask control                             *
*                                                                     *
*---------------------------------------------------------------------*
COMM_HSUB_TCB         DC    A(0)      SOURCE HISTORY SUBTASK'S TCB
COMM_HSUB_REQ         DC    A(0)      SOURCE HISTORY SUBTASK WORK QUEUE
COMM_HSUB_TERM_ECB    DC    A(0)      SOURCE HISTORY SUBTASK TERM ECB
COMM_HSUB_WORK_ECB    DC    A(0)      HISTORY SUBTASK WORK TO DO
*---------------------------------------------------------------------*
*                                                                     *
*          VTAM communcation subtask control                          *
*                                                                     *
*---------------------------------------------------------------------*
COMM_VTAM_TCB         DC    A(0)      VTAM SUBTASK'S ECB ADDRESS
COMM_VTAM_REQ         DC    A(0)      VTAM SUBTASK WORK QUEUE
COMM_VTAM_TERM_ECB    DC    A(0)      VTAM SUBTASK TERM ECB
COMM_VTAM_WORK_ECB    DC    A(0)      VTAM SUBTASK WORK TO DO
*---------------------------------------------------------------------*
*                                                                     *
*          TCP/IP communcation subtask control                        *
*                                                                     *
*---------------------------------------------------------------------*
COMM_TCPIP_TCB        DC    A(0)      TCPIP SUBTASK'S ECB ADDRESS
COMM_TCPIP_REQ        DC    A(0)      TCPIP SUBTASK WORK QUEUE
COMM_TCPIP_TERM_ECB   DC    A(0)      TCPIP SUBTASK TERM ECB
COMM_TCPIP_WORK_ECB   DC    A(0)      TCPIP SUBTASK WORK TO DO
*---------------------------------------------------------------------*
*                                                                     *
*          GLOBAL DATA                                                *
*                                                                     *
*---------------------------------------------------------------------*
COMM_LIBRARY_CHAIN    DC   A(0)       LIBRARY CHAIN
COMM_USER_CHAIN       DC   A(0)       USER BLOCK CHAIN
COMM_VTAM_LOGINS      DC   F'0'       NUMBER OF VTAM LOGONS
COMM_TCPIP_LOGINS     DC   F'0'       NUMBER OF TCP/IP LOGONS
COMMXUSR              DC   A(0)       EXTERNAL USERS CHAIN
COMM_ATTN_ECB         DC   F'0'       ECB POSTED BY ATTENTION EXIT
COMM_TERMINATION_ECB  DC   F'0'       ECB POSTED AS SIGNAL TO SHUT DOWN
COMM_NETWORK_IO_AREA  DC   A(0)       I/O AREA FOR NETWORK USE
COMM_VTAM_ECB         DC   F'0'       ECB FOR VTAM EVENTS
COMM_ACB              DC   A(0)       ACB'S ADDRESS
COMM_ACB_LENGTH       DC   A(0)       ACB'S LENGTH
COMM_NIB              DC   A(0)       NIB'S ADDRESS
COMM_APPL_NAME_LENGTH DC   AL1(8)     APPLID'S LENGTH
COMM_APPL_NAME        DC   CL8' '     APPLID
COMM_PORT             DC   AL2(0)     SERVER'S TCP/IP PORT NUMBER
COMM_FLAGS            DC   X'00'      GLOBAL FLAGS
$INIT                 EQU  X'80'      .. INITIALIZATION COMPLETE
$ABEND                EQU  X'40'      .. ABEND AT END OF JOB
$ABORT                EQU  X'20'      .. SERIOUS ERROR, ABORT
$COMM_ACB_OPEN        EQU  X'01'      .. VTAM ACB IS OPEN
COMM_TASKS            DC   X'00'      SUBTASK ACTVE INDICATORS
$TASK_PRINT           EQU  X'80'      .. PRINT SUBTASK IS ATTACHED
$TASK_CONSOLE         EQU  X'40'      .. CONSOLE SUBTASK IS ATTACHED
$TASK_DAIR            EQU  X'20'      .. DAIR SUBTASK ATTACHED
$TASK_LIB             EQU  X'10'      .. LIBRARY OPEN/CLOSE ATTACHED
$TASK_HISTORY         EQU  X'08'      .. CHANGED SOURCE HISTORY
$TASK_VTAM            EQU  X'04'      .. VTAM SUBTASK ATTACHED
$TASK_TCPIP           EQU  X'02'      .. TCP/IP SUBTASK ATTACHED
COMM_EOJ_PHASE        DC   X'00'      EOJ PHASES
$EOJ1                 EQU  X'80'
$EOJ2                 EQU  X'40'
$EOJ3                 EQU  X'20'
$EOJ4                 EQU  X'10'
COMM_SNAP_CLASS       DC   C'Z'       SNAP DUMP SYSOUT CLASS
COMM_SNAP_NBR         DC   PL4'0'     NUMBER OF SNAP DUMPS TAKEN
COMM_SUBMIT_NBR       DC   PL4'0'     NUMBER OF JOB(S) SUBMITTED
COMM_SYSTEM_NAME      DC   CL20' '    SYSTEM NAME
COMM_BLANKS           DC   CL132' '
COMM_RC               DC   X'00'      RETURN CODE

COMMRACF              DS   0CL9
                      DS   AL1        RACF CLASS NAME LENGTH
                      DS   CL8        RACF CLASS NAME

                      CLIENT PREFIX=COMM_MAIN

COMM_MAX_LINES        DC   PL3'0'
COMMEND               EQU  *

                COPY TRENTRY
                COPY LIBPRFX
         MEND
./ ADD NAME=TCOMM    0100-09054-09054-0236-00135-00135-00000-MACLIB
         MACRO
         TCOMM &TYPE=
*---------------------------------------------------------------------*
*                                                                     *
*          TSO COMMON AREA MAPPING MACRO                              *
*                                                                     *
*     This macro will generate either the 'common' module CSECT or    *
*     a DSECT to map the 'common' module.  'Common' is used for       *
*     constants and work areas that are required by several modules   *
*     allowing some elimination of duplicated data and to allow       *
*     inter-module communication.                                     *
*                                                                     *
*     The trace table code is also incorporated into the 'common'     *
*     area.                                                           *
*                                                                     *
*---------------------------------------------------------------------*
         AIF   ('&TYPE' EQ 'CSECT').CSECT
         AIF   ('&TYPE' EQ 'DSECT').DSECT
         MNOTE 12,'INVALID TYPE'
         MEXIT
.CSECT   ANOP
LIBTCOMM CSECT
LIBTCOMM AMODE 31
LIBTCOMM RMODE 24
         AGO   .NODSECT
.DSECT   ANOP
LIBTCOMM DSECT
.NODSECT ANOP
         COMMCOMM MAIN=TCOMM
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
         DC    CL8'LIBTMAIN'
ATMAIN   DC    A(0)                TSO MAINLIN
         DC    CL8'LIBTDISP'
ATDISP   DC    A(0)                DISPLAY PANELS WITH DYNAMIC AREA
         DC    CL8'LIBTDLIB'
ATDLIB   DC    A(0)                DISPLAY LIST OF LIBRARIES
         DC    CL8'LIBTDMEM'
ATDMEM   DC    A(0)                DISPLAY LIST OF MEMBERS
         DC    CL8'LIBTPARM'
ATPARM   DC    A(0)                PARAMETER PARSER
         DC    CL8'LIBTPARS'
ATPRSE   DC    A(0)                PARAMETER PARSER
         DC    CL8'LIBTSNAP'
ATSNAP   DC    A(0)                SNAP DUMP
         DC    CL8'LIBTSTAT'
ATSTAT   DC    A(0)                DISPLAY STC STATUS
         DC    CL8'LIBTVMGR'
ATVTAM   DC    A(0)                VTAM FUNCTIONS
         DC    CL8'LIBTVTAM'
ATTCP    DC    A(0)                TCP/IP FUNCTIONS
         DC    CL8'LIBTTCP '
ATVMGR   DC    A(0)                SPF VARIABLE DEFINE/DELETE
         DC    CL8'LIBSPFD'
ALIBSPFD DC    A(0)                SPF DATA
         DC    CL8'ISPLINK'
AISPLINK DC    A(0)                SPF INTERFACE ENTRY POINT
         DC    CL8'LIBUX01'
AUX01    DC    A(0)                USER EXIT 1 ENTRY POINT
*---------------------------------------------------------------------*
*                                                                     *
*---------------------------------------------------------------------*
COMM_OPERANDS                DS    0A
COMM_OPERANDS_NBR            DS    XL4
COMM_OPERAND_1_ADDRESS       DS    XL4
COMM_OPERAND_1_LENGTH        DS    XL1
COMM_OPERAND_1_FLAGS         DS    X
COMM_OPERAND_2_ADDRESS       DS    XL4
COMM_OPERAND_2_LENGTH        DS    XL1
COMM_OPERAND_2_FLAGS         DS    X
COMM_OPERAND_3_ADDRESS       DS    XL4
COMM_OPERAND_3_LENGTH        DS    XL1
COMM_OPERAND_3_FLAGS         DS    X
COMM_OPERAND_4_ADDRESS       DS    XL4
COMM_OPERAND_4_LENGTH        DS    XL1
COMM_OPERAND_4_FLAGS         DS    X
COMM_OPERAND_5_ADDRESS       DS    XL4
COMM_OPERAND_5_LENGTH        DS    XL1
COMM_OPERAND_5_FLAGS         DS    X
COMM_OPERANDS_L              EQU   *-COMM_OPERANDS

*---------------------------------------------------------------------*
*                                                                     *
*          GLOBAL DATA                                                *
*                                                                     *
*---------------------------------------------------------------------*
COMM_NETWORK_IO_AREA         DC    A(0)     NETWORK I/O AREA
COMM_LIBRARY_CHAIN           DS    A(0)     ADDRESS OF LIBRARY LIST
COMM_NBR_OF_LIBRARIES        DS    F'0'     NUMBER OF LIBRARIES IN LIST
COMM_VTAM_ECB                DC    F'0'     ECB FOR VTAM EVENTS
COMM_ACB                     DC    A(0)     ACB'S ADDRESS
COMM_ACB_LENGTH              DC    F'0'     ACB'S LENGTH
COMM_EXLST                   DC    A(0)     EXLST'S ADDRESS
COMM_RPL                     DC    A(0)     RPL'S ADDRESS
COMM_RPLX                    DC    A(0)     RPL EXTENSION'S ADDRESS
COMM_NIB                     DC    A(0)     NIB'S ADDRESS
COMM_SERVER_HOST_NAME_LENGTH DC    F'6'
COMM_SERVER_PORT             DC    AL2(0)
COMM_APPL_NAME_LENGTH        DC    AL1(8)   APPLID'S LENGTH
COMM_APPL_NAME               DC    CL8' '   APPLID
COMM_SERVER_APPL_ID          DC    CL8' '   LIBRARY STC APPLID
COMM_SERVER_HOST_NAME        DC    CL24' '  LIBRARY IP HOST NAME
COMM_LIBRARY_NAME            DC    CL8' '   LIBRARY NAME
COMM_MEMBER_NAME             DC    CL8' '   MEMBER NAME
COMM_VERSION                 DC    XL4'00'  MEMBER VERSION
COMM_SOURCE_RECORDS          DC    XL4'00'  RECORDS IN SOURCE FILE
COMMBLKN                     DC    XL4'00'  ALLOCATION BLOCK LENGTH
COMMPRI                      DC    XL4'00'  PRIMARY ALLOCATION
COMMSEC                      DC    XL4'00'  SECONDARY ALLOCATION
COMM_CONVERSATION_ID         DC    XL4'00'  CONVERSATION ID
COMM_FLAGS                   DC    X'00'    GLOBAL FLAGS
$ABEND                       EQU   X'80'    .. ABEND AT END OF JOB
$ABORT                       EQU   X'40'    .. SERIOUS ERROR, ABORT
$ACB_OPEN                    EQU   X'20'    .. ACB IS OPEN
$SESSALO                     EQU   X'10'    .. SESSION ALLOCATED
$LIST_ALL                    EQU   X'08'    .. LIST ALL MEMBERS
COMM_DD                      DS    X'00'
$DD_SNAP                     EQU   X'80'    .. LIBSNAP DD IS PRESENT
$DD_DEBUG1                   EQU   X'40'    .. DEBUG1 DD IS PRESENT
$DD_DEBUG2                   EQU   X'20'    .. DEBUG2 DD IS PRESENT
$DD_DEBUG3                   EQU   X'10'    .. DEBUG3 DD IS PRESENT
$DD_DEBUG4                   EQU   X'08'    .. DEBUG4 DD IS PRESENT
COMM_BLANKS                  DC    CL80' '
COMM_RC                      DC    X'00'    RETURN CODE

COMMRACF                     DS    0CL9
                             DS    A        RACF CLASS NAME LENGTH
                             DS    CL8      RACF CLASS NAME

COMMEND                      EQU   *
         SPACE 2
         COPY  TRENTRY
         COPY  LIBPRFX
         MEND
./ ADD NAME=TDISP    0100-09054-09054-0236-00022-00022-00000-MACLIB
         MACRO
         TDISP   &TYPE=
         AIF    ('TYPE' EQ 'CSECT').CSECT
         AIF    ('TYPE' EQ 'DSECT').DSECT
         MNOTE  12,'TYPE IS INVALID'
         MEXIT
.CSECT   ANOP
TDISP    CSECT
         AGO    .COMM
.DSECT   ANOP
TDISP    DSECT
.COMM    ANOP
TDISP_EYE               DS  CL8    EYECATCHER
TDISP_DYN_ADDR          DS  A      DYNAMIC AREA ADDRESS
TDISP_DYN_SIZE          DS  F      DYNAMIC AREA SIZE
TDISP_DATA_ADDR         DS  A      DATA FOR DYNAMIC AREA
TDISP_DATA_LINES        DS  F      NUMBER OF DATA LINES
TDISP_DATA_LINE_LENGTH  DS  F      LENGTH OF DATA PER LINE
TDISP_DATA_1ST_LINE     DS  F      FIRST LINE TO DISPLAY
TDISP_PANEL             DS  CL8    PANEL NAME
TDISPL   EQU *-TDISP
         MEND
./ ADD NAME=TRENTRY  0100-09054-09054-0236-00012-00012-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*          TRACE TABLE ENTRY                                          *
*                                                                     *
*---------------------------------------------------------------------*
TRENTRY  DSECT
TRETCB   DS    XL3                 TCB ADDRESS
TREMOD   DS    CL5                 MODULE SUFFIX
TREID    DS    CL8                 TRACE ID
TREDATA1 DS    CL8                 TRACE DATA 1
TREDATA2 DS    CL8                 TRACE DATA 2
TRENTRYL EQU   *-TRENTRY           ENTRY LENGTH
./ ADD NAME=USERBLOK 0100-09054-09054-0236-00070-00070-00000-MACLIB
         MACRO
         USERBLOK &DSECT=
* ------------------------------------------------------------------- *
*                                                                     *
*      USERBLOK's represent active users.                             *
*                                                                     *
* ------------------------------------------------------------------- *
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'NO').CSECT00
         AIF  ('&DSECT' EQ 'YES').DSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
USERBLOK DS   0F
         AGO  .COMMON
.DSECT00 ANOP
USERBLOK DSECT
.COMMON  ANOP
USEREYE              DS   CL8      EYECATCHER
USER_NEXT            DS   A        NEXT USER BLOCK
USER_IO              DS   A        I/O AREA ADDRESS
USER_TIME            DS   A        TIME USER SESSION BEGAN (HHMMSSTH)
USER_DATE            DS   A        DATE USER SESSION BEGAN (0CYYDDDS)
USER_TCB             DS   A        SUBTASK'S TCB ADDRESS
USER_TERMINATION_ECB DS   A        SUBTASK TERMINATION ECB
USER_COMM            DS   A        LIBSCOMM ADDRESS
USER_SELF            DS   A        ADDRESS OF THIS USERBLOK
USER_DXD             DS   A        DXD WORK AREA BASE ADDRESS
USER_RPL             DS   A        RPL'S ADDRESS
USER_RPLX            DS   A        RPL EXTENSION'S ADDRESS
USER_CONVERSATION_ID DS   XL4      CONVERSATION ID
USER_PARTNER_LU      DS   CL8      PARTNER LU NAME
USER_RECEIVES        DS   F        NUMBER OF RECEIVES
USER_BYTES_RECEIVED  DS   F        NUMBER OF BYTES RECEIVED
USER_SENDS           DS   F        NUMBER OF SENDS
USER_BYTES_SENT      DS   F        NUMBER OF BYTES SENT
USER_SYSTEM_SMF      DS   CL4      SMF ID OF USER'S SYSTEM
USER_USER_ID         DS   CL8      USER'S TSO ID
USER_JOB             DS   CL8      USER'S ADDRESS SPACE NAME
USER_NAME            DS   CL20     USER'S NAME (UP TO 20 CHARACTERS)
USER_LIBRARY         DS   CL8      LIBRARY USER HAS ENQUEUED
USER_AUTH_LIBS       DS   A        LIBRARIES USER IS AUTHORIZED TO USE
USER_SOCKET          DS   XL2      TCP/IP SOCKET
USER_FUNCTION        DS   X
$USER_RECEIVE        EQU  X'01'    .. ISSUING A RECEIVE
$USER_RUN            EQU  X'02'    .. RUNNING
USER_STATUS          DS   X
$USERSUB             EQU  X'80'    .. SUBTASK HAS BEEN ATTACHED
$USERLOS             EQU  X'40'    .. VTAM SESSION HAS BEEN LOST
$USERSND             EQU  X'20'    .. SENDING
$USERRCV             EQU  X'10'    .. RECEIVING
$USERRUN             EQU  X'08'    .. RUNNING
$USERCLN             EQU  X'04'    .. CLEAN-UP SCHEDULED
$USERID              EQU  X'02'    .. USER HAS BEEN IDENTIFIED
$USER_KILL           EQU  X'01'    .. KILLED BY CONSOLE COMMAND
USER_IP_ADDRESS      DS   CL15     USER IP ADDRESS (PRINTABLE)

                     CLIENT  PREFIX=USER

                     DS   256X
USER_NETWORK_ECB     DS   F        ECB FOR NETWORK OPERATIONS
USER_API_ECB         DS   F        SUBTASK HAS COMPLETED INITAPI
USER_TAKESOCKET_ECB  DS   F        MAIN TASK HAS ISSUED TAKESOCK
USER_WORK_ECB        DS   F        ECB FOR MAIN TASK TO 'WAKE US UP'
                     DS   256X
USERBLOKL            EQU  *-USERBLOK
         MEND
./ ADD NAME=UX01PARM 0100-09054-09054-0236-00020-00020-00000-MACLIB
         MACRO
         UX01PARM &DSECT=NO
         AIF  ('&DSECT' EQ 'YES').LBL0010
         AIF  ('&DSECT' EQ 'NO').LBL0020
         MNOTE 12,'INVALID DSECT OPTION'
         MEXIT
.LBL0010 ANOP
UX01_PARMS             DSECT
         AGO .LBL0030
.LBL0020 ANOP
UX01_PARMS             DS   0F
.LBL0030 ANOP
UX01_FUNCTION          DS   C
$UX01_COMPRESS         EQU  C'C'
$UX01_DECOMPRESS       EQU  C'D'
UX01_EXPANDED_BUFFER   DS   F
UX01_EXPANDED_LENGTH   DS   F
UX01_COMPRESSED_BUFFER DS   F
UX01_COMPRESSED_LENGTH DS   F
         MEND
./ ADD NAME=UX03PARM 0100-09054-09054-0236-00016-00016-00000-MACLIB
         MACRO
         UX03PARM &DSECT=NO
         AIF  ('&DSECT' EQ 'YES').LBL0010
         AIF  ('&DSECT' EQ 'NO').LBL0020
         MNOTE 12,'INVALID DSECT OPTION'
         MEXIT
.LBL0010 ANOP
UX03_PARMS     DSECT
         AGO .LBL0030
.LBL0020 ANOP
UX03_PARMS     DS   0F
.LBL0030 ANOP
UX03_SMF       DS   CL4
UX03_USER      DS   CL8
UX03_USER_NAME DS   CL20
         MEND
./ ADD NAME=VARDSECT 0100-09054-09054-0236-00012-00012-00000-MACLIB
* ------------------------------------------------------------------- *
*              VARIABLE TABLE ENTRIES                                 *
* ------------------------------------------------------------------- *
VAR_DSECT      DSECT
VAR_NAME       DS    CL8                   NAME KNOWN TO SPF
VAR_FLAGS      DS    X                     FLAGS
$VAR_PROFILE   EQU   X'80'                 .. SAVE IN PROFILE
$VAR_DEFINED   EQU   X'40'                 .. VARIABLE IS DEFINED
VAR_LENGTH     DS    AL4                   VARIABLE LENGTH
VAR_FORM       DS    CL8                   VARIABLE FORMAT
VAR_DISP       DS    AL2                   DISPLACEMENT TO DATA
VAR_DSECT_L    EQU   *-VAR_DSECT
./ ADD NAME=VARREQ   0100-09054-09054-0236-00020-00020-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*        VARIABLE DEFINE/DELETE REQUEST                               *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         VARREQ  &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').LBL0010
VARREQ   DS    0A
         AGO   .LBL0020
.LBL0010 ANOP
VARREQ   DSECT
.LBL0020 ANOP
VARTBLE  DS    A                   ADDRESS OF VARIABLE TABLE
VARAREA  DS    A                   ADDRESS OF VARIABLE DATA AREA
VARCMD   DS    C                   COMMAND
$VARDEF  EQU   X'01'               .. DEFINE
$VARDEL  EQU   X'02'               .. DELETE
VARREQL  EQU   *-VARREQ
         MEND
./ ADD NAME=VDEF     0100-09054-09054-0236-00043-00043-00000-MACLIB
         MACRO
         VDEF  &BASE=,               BASE ADDRESS OF VARIABLES AREA    +
               &NAME=,               NAME DEFINED TO SPF               +
               &DATA=,               DATA ADDRESS                      +
               &LENGTH=,             DATA LENGTH                       +
               &FLAGS=,              SAVE IN PROFILE                   +
               &FORM=                DATA FORMAT
         GBLC  &VBASE
         AIF   (T'&BASE EQ 'O').LBL0010
&VBASE   SETC  '&BASE'
         MEXIT
.LBL0010 ANOP
         AIF   (T'&NAME EQ 'O').ERR0010
         AIF   (T'&LENGTH  EQ 'O').ERR0020
         AIF   (T'&FORM    EQ 'O').ERR0030
         AIF   ('&VBASE' EQ '').ERR0060
         DC    CL8'&NAME'             NAME KNOWN TO SPF
         AIF   (T'&FLAGS EQ 'O').LBL020
         DC    AL1(&FLAGS)
         AGO   .LBL030
.LBL020  ANOP
         DC    X'00'                  FLAGS/INDICATORS
.LBL030  ANOP
         DC    AL4(&LENGTH)           LENGTH
         DC    CL8'&FORM'             VARIABLE FORMAT
         DC    AL2(&DATA-&VBASE)      DISPLACEMENT TO DATA
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'NAME IS A REQUIRED PARAMETER'
         MEXIT
.ERR0020 ANOP
         MNOTE 12,'LENGTH IS A REQUIRED PARAMETER'
         MEXIT
.ERR0030 ANOP
         MNOTE 12,'FORM IS A REQUIRED PARAMETER'
         MEXIT
.ERR0040 ANOP
         MNOTE 12,'VARIABLE NAME IS DUPLICATED'
         MEXIT
.ERR0060 ANOP
         MNOTE 12,'BASE MUST BE DEFINED BEFORE VARIABLES CAN BE DEFINED+
               '
         MEND
./ ADD NAME=VTAMPARM 0100-09054-09054-0236-00032-00032-00000-MACLIB
         MACRO
         VTAMPARM &DSECT=YES
         AIF  (T'&DSECT EQ 'O').ERR0010
         AIF  ('&DSECT' EQ 'YES').DSECT00
         AIF  ('&DSECT' EQ 'NO').CSECT00
         MNOTE 12,'INVALID ''DSECT'', MUST BE ''YES'' OR ''NO'' '
         MEXIT
.ERR0010 ANOP
         MNOTE 12,'''DSECT'' PARAMETER IS REQUIRED'
         MEXIT
.CSECT00 ANOP
VTAM_PARM_LIST    DS   0F
         AGO  .COMMON
.DSECT00 ANOP
VTAM_PARM_LIST    DSECT
.COMMON  ANOP
VTAM_PARM_APPL    DS    CL8
VTAM_PARM_ACB     DS    A
VTAM_PARM_RPL     DS    A
VTAM_PARM_RPLX    DS    A
VTAM_PARM_XLST    DS    A
VTAM_PARM_NIB     DS    A
VTAM_PARM_IO      DS    A
VTAM_PARM_CNVID   DS    XL4
VTAM_PARM_CMD     DS    X
$VTAM_OPEN        EQU   X'01'
$VTAM_CLOSE       EQU   X'02'
$VTAM_SEND        EQU   X'03'
$VTAM_RECEIVE     EQU   X'04'
VTAM_PARM_RC      DS    X
VTAM_PARM_LENGTH  EQU   *-VTAM_PARM_LIST
         MEND
./ ADD NAME=VTAMREQ  0100-09054-09054-0236-00020-00020-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*        VTAM COMMANDS                                                *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         VTAMREQ &DSECT=YES
         AIF   ('&DSECT' EQ 'YES').LBL0010
VTAMREQ        DS    0A
               AGO   .LBL0020
.LBL0010       ANOP
VTAMREQ        DSECT
.LBL0020       ANOP
VTAM_COMMAND   DS   X              COMMAND
$VTAM_OPEN     EQU  X'01'          .. OPEN
$VTAM_SEND     EQU  X'02'          .. ISSUE SEND
$VTAM_RECEIVE  EQU  X'03'          .. ISSUE RECEIVE
$VTAM_CLOSE    EQU  X'04'          .. CLOSE
VTAMREQL       EQU  *-VTAMREQ
         MEND
./ ADD NAME=XUSRBLOK 0100-09054-09054-0236-00020-00020-00000-MACLIB
*---------------------------------------------------------------------*
*                                                                     *
*        EXTERNAL USER IDENTIFICATION BLOCK                           *
*                                                                     *
*---------------------------------------------------------------------*
         MACRO
         XUSRBLOK &DSECT=
         AIF      ('&DSECT' EQ 'YES').DSECT
XUSRBLOK DS    0H
         AGO      .NODSECT
.DSECT   ANOP
XUSRBLOK DSECT
.NODSECT ANOP
XUSREYE  DS    CL8                 EYECATCHER
XUSRNEXT DS    A                   NEXT XUSRBLOK ADDRESS
XUSRSMF  DS    CL4                 SMF ID
XUSRID1  DS    CL8                 USER ID ON OTHER SYSTEM
XUSRID2  DS    CL8                 USER ID ON THIS SYSTEM
XUSRL    EQU   *-XUSRBLOK          LENGTH OF CONTROL BLOCK
         MEND
