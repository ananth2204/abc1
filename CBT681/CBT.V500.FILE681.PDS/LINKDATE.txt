LINKDATE TITLE 'LINK EDITOR INTERFACE - DATE/TIME STAMP LOAD MODULES'
***********************************************************************
*                                                                     *
*  NAME: LINKDATE                                                     *
*                                                                     *
*  PROGRAM WRITTEN BY: R.D.WIRTH   9/22/75                            *
*  LAST MAINTAINED BY: R.D.WIRTH   9/22/75                            *
*  LAST MAINTAINED BY: R.E.STYMA   5/10/85                            *
*  LAST MAINTAINED BY: R.E.STYMA  12/12/2003 MAKE OUTPUT RMODE ANY    *
*                                            AND AMODE ANY            *
*                                                                     *
*                                                                     *
*  PURPOSE: FETCH THE DATE AND TIME OF AN IBM LINKAGE EDITOR JOB STEP *
*           AND BUILD A " SETSSI " COMMAND WHICH CAN BE CONCATENATED  *
*           TO THE FRONT OF THE LINK EDITORS SYSLIN INPUT STREAM.  THE*
*           OPERAND OF THE SETSSI COMMAND WILL BE AN ENCODING OF THE  *
*           DATE AND TIME AS DEFINED BELOW.  THE LINK EDITOR INSERTS  *
*           THE OPERAND OF THE SETSSI COMMAND INTO THE USER DATA FIELD*
*           OF THE LOAD MODULE PDS DIRECTORY WHERE IT CAN SUBSEQUENTLY*
*           BE PRINTED ON A LOAD MODULE LIBRARY DIRECTORY ( SEE       *
*           LINKDIR ).                                                *
*           5/10/85 - ADD AN OPTION TO PUT THE DATE IN THE FORMAT     *
*           MM/DD/YY IN A VARYING LENGTH EXTERNAL STRING.             *
*           THE EXTERNAL CSECT NAME GENERATED IS LINKDTE AND THE      *
*           FORMAT IS A TWO BYTE LENGTH FIELD FOLLOWED BY             *
*           AN EIGHT BYTE STRING.                                     *
*           TO ACTIVATE THIS OPTION, PLACE THE TWO CHARACTERS "L,"    *
*           AS THE FIRST TWO CHARACTERS OF THE PARM STRING.           *
*                                                                     *
*                                                                     *
*                                                                     *
*  FUNCTIONS: 1) FETCH THE DATE & TIME USING THE OS MACRO.            *
*             2) BUILD A SINGLE 80 BYTE RECORD TO BE WRITTEN TO OUTPUT*
*                CARD IMAGE FILE (SETSSI).                            *
*                THE CARD FORMAT IS:                                  *
*                       '  SETSSI XXXXXYYY '                          *
*                   WHERE  XXXXX  IS THE JULIAN DATE IN YYDDD FORMAT  *
*                            YYY  IS THE TIME IN HOURS & TENS MINUTES *
*                IE; '         SETSSI 75237184 '                      *
*                    237 TH DAY OF 1975                               *
*                    AT 6:40 PM                                       *
*                NOTE THE THE CHARACTERS IN THE OPERAND OF            *
*                     SETSSI ARE LIMITED TO 0-9 & A-F.                *
*             3) PRINT A LINE (121 BYTES) ON AN OUTPUT FILE (PRINTDAT)*
*                CONTAINING:                                          *
*                  TITLE                                              *
*                  JULIAN DATE   YYDDD                                *
*                  CALENDAR DATE   MM/DD/YY                           *
*                  TIME  HH:MM:SS                                     *
*                  IMAGE OF SETSSI COMMAND                            *
*             4) READ THE PARM:                                       *
*                  FIRST PARAMETER IS THE NAME TO LOAD (TO 1ST COMMA) *
*                  REST IS PASSED TO PROGRAM CALLED.                  *
*             5) LINK TO THE LINK EDITOR LOAD MODULE, THE NAME        *
*                WAS PASSED AS THE FIRST PARAMETER IN THE PARM STRING.*
*             6) UPON RETURN FROM THE LINKED PROGRAM, RETURN WITH     *
*                THE LINKED PROGRAMS RETURN CODE                      *
*                                                                     *
***********************************************************************
         EJECT
***********************************************************************
*                                                                     *
* OBTAIN THE CURRENT DATE AND TIME AND PROCEED TO FORMAT              *
* THE OUTPUT CARD IMAGE AND PRINT LINE                                *
*                                                                     *
***********************************************************************
         SPACE
*        PRINT NOGEN
LINKDATE CSECT
         ENTER R,SPIE=NO,ID=YES,BASE=13 * ESTABLISH SAVE AREA & ENTRY
         ST    R1,PARMSAVE    * SAVE THE POINTER TO THE PARM
         SPACE
         TIME  DEC            * FETCH THE CURRENT DATE AND TIME
         ST    R1,DATESAVE    * SAVE THE PACKED DECIMAL DATE (00YYDDDF)
         ST    R0,TIMESAVE    * SAVE THE PACKED DECIMAL TIME (HHMMSSTH)
         SPACE
         UNPK  DATEUNPK,DATESAVE  * UNPACK THE DATE FOR PRINTING  YYDDD
         MVC   SSICARD+10(5),DATEUNPK+3  * MOVE DATE CHARS INTO SETSSI
         LA    R3,DATESAVE    * SET UP JULIAN DATE (PACKED) FOR SUBR.
         BAL   R6,DATECONV    * GO CONVERT JULIAN DATE
         ST    R3,SSICARD+52  *  TO MM/DD/YY FORMAT  (1ST 4 CHAR)
         ST    R4,SSICARD+56  *                      (LAST 4 CHAR)
         STCM  R3,15,OBJDATE     *  SAVE IN OBJ RECORD  (1ST 4 CHAR)
         STCM  R4,15,OBJDATE+4   *  IN CASE WE NEED IT  (LAST 4 CHAR)
         SPACE
         OI    TIMESAVE+3,X'0F'  * SET THE SIGN TO PERMIT UNPACKING
         UNPK  TIMEUNPK,TIMESAVE  * UNPACK THE TIME FOR PRINTING
         MVC   SSICARD+15(3),TIMEUNPK+1  * MOVE HOURS & TENS OF MINUTES
         MVC   SSICARD+63(2),TIMEUNPK+1  * MOVE HOURS TO PRINT LINE
         MVC   SSICARD+66(2),TIMEUNPK+3  * MOVE MINUTES TO PRINT LINE
         MVC   SSICARD+69(2),TIMEUNPK+5  * MOVE SECONDS TO PRINT LINE
         MVC   OBJTIME+00(2),TIMEUNPK+1  * MOVE HOURS TO OBJECT CARD
         MVC   OBJTIME+03(2),TIMEUNPK+3  * MOVE MINUTES TO OBJECT CARD
         EJECT
***********************************************************************
*                                                                     *
* PERFORM ALL OUTPUT TO THE CARD AND PRINT FILES                      *
*   SETSSI    IS THE DDNAME OF THE CARD OUTPUT FILE                   *
*   PRINTDAT  IS THE DDNAME OF THE PRINT OUTPUT FILE                  *
*                                                                     *
***********************************************************************
         SPACE
         OPEN  (SSIDCB,OUTPUT,PRINTDCB,OUTPUT)  * OPEN BOTH OUTPUT FILE
         SPACE
         TM    PRINTDCB+DCBOFLGS-IHADCB,X'10'  * TEST FOR OPEN DCB
         BZ    NOOPENPT       * BRANCH IF OPEN NOT SUCCESSFUL
         TM    SSIDCB+DCBOFLGS-IHADCB,X'10'  * TEST FOR OPEN DCB
         BZ    NOOPENCD       * BRANCH IF OPEN NOT SUCCESSFUL
         SPACE
         PUT   SSIDCB,SSICARD              * WRITE CARD TO OUTPUT FILE
         PUT   PRINTDCB,SSICARD              * WRITE PRINT OUTPUT FILE
         SPACE
         L     R15,PARMSAVE   * RETIREVE THE INPUT PARM POINTER
         L     R1,0(R15)      * POINT TO THE PARM STRING LENGTH
         LH    R2,0(R1)       * FETCH THE LENGTH OF THE PARM STRING
         LTR   R2,R2          * TEST LENGTH OF THE PARM STRING
         BZ    PARMERR        * BRANCH TO ERROR IF NO PARM WAS PASSED
         LA    R1,2(R1)       * BUMP PARM POINTER PAST LENGTH FIELD
         SPACE
         CLC   0(2,R1),=CL2'L,' * IS THE FIRST PARM THE L PARM
         BNE   DOCLOSE        * IF NOT, SKIP OUTPUTING THE OBJ
         SPACE
         BCTR  R2,0           * DECREMENT TWICE TO COMPENSATE FOR
         BCTR  R2,0           * THE L PARM AND COMMA
         STH   R2,0(R1)       * STORE LENGTH OF NEW PARM
         ST    R1,0(R15)      * REPLACE STRING ADDR IN PARM LIST
         SPACE
         PUT   SSIDCB,OBJ1    * OUTPUT ESD RECORD
         PUT   SSIDCB,OBJ2    * OUTPUT TXT RECORD
         PUT   SSIDCB,OBJ3    * OUTPUT END RECORD
         SPACE
DOCLOSE  EQU   *
         CLOSE (SSIDCB,,PRINTDCB)  * CLOSE BOTH OUTPUT FILES
         EJECT
***********************************************************************
*                                                                     *
*  FETCH THE FIRST PARAMETER OF THE PARM STRING (WHICH SHOULD BE A    *
*  NAME OF A LINK EDITOR) AND USE IT TO LINK TO THE APPROPRIATE       *
*  LOAD MODULE.  THEN PASS THE REMAINDER OF THE PARM TO THE PROGRAM.  *
*  TERMINATE UPON RETURN.                                             *
*                                                                     *
***********************************************************************
         SPACE
         L     R1,PARMSAVE    * RETIREVE THE INPUT PARM POINTER
         L     R1,0(R1)       * POINT TO THE PARM STRING LENGTH
         LH    R2,0(R1)       * FETCH THE LENGTH OF THE PARM STRING
         LTR   R2,R2          * TEST LENGTH OF THE PARM STRING
         BZ    PARMERR        * BRANCH TO ERROR IF NO PARM WAS PASSED
         LA    R1,2(R1)       * BUMP PARM POINTER PAST LENGTH FIELD
         SPACE
         LR    R3,R1          * CURRENT CHAR POINTER TO PARM STRING
         SR    R4,R4          * LENGTH OF FIRST PARAMETER OF PARM
         SPACE
NEXTCHAR EQU   *
         CH    R2,=H'0'       * RUN OUT OF PARM? MEANS ONLY NAME PASSED
         BNH   GOTNAME        * YES, GO SAVE NAME FOR LINK
         CLI   0(R3),C','     * COMMA? INDICATING END OF FIRST PARAM
         BE    GOTPARM        * YES, GO SAVE NAME & REMAINIGN PARM
         BCTR  R2,0           * DECREMENT PARM STRING LENGTH -REMAINDER
         LA    R3,1(R3)       * BUMP PARM POINTER TO NEXT CHAR
         LA    R4,1(R4)       * BUMP NAME PARAMETER LENGTH
         B     NEXTCHAR       * GO LOOK AT NEXT CHARACTER
         SPACE
GOTPARM  EQU   *
         BCTR  R2,0           * DECREMENT ONCE TO GET PASSED COMMA
         STH   R2,LPRMLST     * STORE LENGTH OF NEW PARM TO LINK EDITOR
         BCTR  R2,0           * DECREMENT AGAIN TO ADJUST FOR MVC
         EX    R2,PARMMVC     * GO EXECUTE MVC TO MOVE PARM FOR LINK
         SPACE
GOTNAME  EQU   *
         CH    R4,=H'8'       * IS THE NAME TOO LARGE? (>8 CHAR)
         BH    PARMERR        * YES, GO ABEND SIGNALLING PARM ERROR
         BCTR  R4,0           * DECREMENT TO ADJUST LENGTH FOR MVC
         EX    R4,NAMEMVC     * GO EXECUTE MVC TO MOVE NAME FOR LINK
         SPACE
         LA    R1,APRMLST     * ADDRESS OF PARM PASSED TO LINK EDITOR
         LINK  EPLOC=EPNAME   * GO LINK TO THE REQUESTED LINK EDITOR
         SPACE
         RETRN R,SPIE=NO,RC=(15)  * RETURN - PASS L/E RETURN CODE BACK
         SPACE
NAMEMVC  MVC   EPNAME(*-*),0(R1)  * EXECUTED!  CAPTURE NAME FOR LINK
PARMMVC  MVC   PARM(*-*),1(R3)  * EXECUTED!  CAPTURE REMAINING PARM
         EJECT
***********************************************************************
*                                                                     *
*  SUBROUTINE TO CONVERT THE JULIAN DATE (AS OBTAINED FROM THE        *
*  OS TIME MACRO) INTO THE NORMAL CALENDAR DATE                       *
*                                                                     *
*  CALLING SEQUENCE:  (R3) = A(X'00YYDDDF')      YY = YEAR            *
*                     BAL  R6,DATECONV          DDD = DAY OF YEAR     *
*                                                                     *
*  RETURNS:           (R3) = C'MM/D'             MM = MONTH           *
*                     (R4) = C'D/YY'             DD = DAY             *
*                                                YY = YEAR            *
*                                                                     *
***********************************************************************
         SPACE
DATECONV EQU   *
         ST    R6,DATERTRN    * SAVE THE RETURN LINKAGE
         SPACE
         MVC   DATEPACK(4),=X'0000000F'  * CONVERT YEAR OF DATE TO DEC
         MVO   DATEPACK(4),1(1,R3)  *
         UNPK  DATEUNPK(3),DATEPACK+2(2)  *
         OI    DATEUNPK+2,X'F0'
         MVC   DATECHAR+6(2),DATEUNPK+1  * MOVE THE YEAR TO DATE CHARS
         SPACE
         DP    DATEPACK(4),=PL2'4'  * DETERMINE IF LEAP YEAR (MULT 4)
         CP    DATEPACK+2(2),=PL2'0'  * REMAINDER OF ZERO IF IT IS
         MVC   DATEPACK(2),2(R3)  * CAPTURE DAY OF YEAR
         BNE   DATELEAP       * BRANCH IF NOT LEAP YEAR
         CP    DATEPACK(2),=P'60'  * SEE IF AFTER FEB 28
         BNH   DATELEAP       * BRANCH IF AFTER FEB 28
         SP    DATEPACK(2),=P'1'  * DECREASE DATE TO COMPENSATE
DATELEAP EQU   *
         LA    R4,DATETAB+22  * POINT TO LAST ENTRY IN THE TABLE
DATELOOP EQU   *
         CP    DATEPACK(2),0(2,R4)  * SEE IF RIGHT RANGE OF MONTH
         BH    DATEGOT        * BRANCH IF RIGHT MONTH
         SH    R4,=H'2'       * POINT TO THE NEXT ENTRY OF THE TABLE
         B     DATELOOP       * GO BACK TO TRY NEXT ENTRY
DATEGOT  EQU   *
         SP    DATEPACK(2),0(2,R4)  * GET DAY OF MONTH
         LA    R6,DATETAB-2   * CONVERT THE TABLE POINTER
         SR    R4,R6          *   INTO AN OFFSET
         SRA   R4,1           *     AND THEN INTO MONTH NUMBER
         CVD   R4,DATEUNPK    * CONVERT THE MONTH # INTO DECIMAL
         UNPK  DATEUNPK(3),DATEUNPK+6(2)  * AND UNPACK MONTH # TO PRINT
         OI    DATEUNPK+2,X'F0'  * ADJUST SIGN FOR PROPER PRINTING
         MVC   DATECHAR(2),DATEUNPK+1  * PUT MONTH # INTO RTRN PARM
         SPACE
         UNPK  DATEUNPK(3),DATEPACK(2)  * CONVERT DAY OF MONTH
         OI    DATEUNPK+2,X'F0'         *   INTO DECIMAL FOR PRINT
         MVC   DATECHAR+3(2),DATEUNPK+1 * PUT DAY INTO RETURN PARAM
         SPACE
         L     R3,DATECHAR    * PICK UP 1ST HALF OF DATE CHARS
         L     R4,DATECHAR+4  * PICK UP LAST HALF OF DATE CHARS
         SPACE
         L     R6,DATERTRN    * RESTORE THE RETURN LINKAGE
         BR    R6             * RETURN
         EJECT
***********************************************************************
*                                                                     *
* ERROR PROCESSING CONSISTS OF GENERATING A USER ABEND UNIQUE TO      *
* EACH TYPE OF ERROR DETECTED.                                        *
*                                                                     *
***********************************************************************
         SPACE
NOOPENPT EQU  *
         ABEND 1000           * OUTPUT PRINT FILE DID NOT OPEN
         SPACE
NOOPENCD EQU   *
         ABEND 1004           * OUTPUT CARD FILE DID NOT OPEN
         SPACE
PARMERR  EQU   *
         ABEND 1008           * INVALID PARM INPUT STRING
*                             * EITHER: NO PARM?
*                             *     OR  FIRST PARAMETER > 8 CHARACTERS?
         EJECT
***********************************************************************
*                                                                     *
*  DATA AREAS / DCB'S FOR OUTPUT / PARAMETER LISTS / DCB SYMBOLICS    *
*                                                                     *
***********************************************************************
         SPACE
         DS   0F
SSICARD  DC    CL52'  SETSSI  XXXXXXXX  <SET LOADLIB SSI - YYDDDHHM>'
         DC    CL28'MM/DD/YY   HH:MM:SS'
         DC    CL41'PROGRAM: LINKDATE  (LINK EDIT DATE/TIME)'
         SPACE
TIMEUNPK DC    D'0'           * UNPACKED TIME
TIMESAVE DC    F'0'           * SAVE AREA FOR THE PACKED TIME
DATERTRN DC    F'0'           * DATE CONVERSION SUBR RETURN LINK
DATESAVE DC    F'0'           * SAVE AREA FOR THE PACKED DATE
DATEPACK DC    F'0'
DATEUNPK DC    D'0'           * UNPACKED DATE
DATECHAR DC    CL8'XX/XX/XX'  * PARAMETER RETURNED FROM DATECONV
DATETAB  DC    PL2'0,31,59,90,120,151,181,212,243,273,304,334'
         SPACE
EPNAME   DC    CL8' '         * CALLED LINK EDITOR ENTRY NAME
         SPACE
PARMSAVE DC    F'0'           * SAVE ADDRESS OF PARM TO LINKDATE
APRMLST  DC    AL1(X'80'),AL3(LPRMLST)  * ADDRESS OF PARM PASSED TO L/E
LPRMLST  DC    H'0'           * LENGTH OF PARM PASSED TO LINK EDITOR
PARM     DC    CL255' '       * ACTUAL PARM PASSED TO LINK EDITOR
         SPACE
PRINTDCB DCB   DDNAME=SYSPRINT,BLKSIZE=121,DEVD=DA,DSORG=PS,           X
               LRECL=121,MACRF=PM,RECFM=FA,BUFNO=1
         SPACE
SSIDCB   DCB   DDNAME=SETSSI,BLKSIZE=3200,BUFNO=1,DEVD=DA,DSORG=PS,    X
               LRECL=80,MACRF=PM,RECFM=FB
         SPACE
OBJ1    DC    X'02'
        DC    C'ESD      '
        DC    X'001040400001'
        DC    C'LINKDTE '
        DC    X'0000000047000028'
        DC    CL48' '
OBJ2    DC    X'02'
        DC    C'TXT '
        DC    X'000000404000284040000141F0F02807FF0000000F'
OBJDATE DC    CL10'MM/DD/YY  '
OBJTIME DC    CL5'HH:MM'
        DC    CL41' '
OBJ3    DC    X'02'
        DC    CL79'END                            15741SC103 020185130'
         SPACE
         PRINT NOGEN
         DCBD  DSORG=PS,DEVD=DA  * GENERATE SYMBOLICS FOR DCB ADDRESSES
         END
