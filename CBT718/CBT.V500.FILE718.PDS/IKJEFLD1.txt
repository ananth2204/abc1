         ICTL      1,71,20

***********************************************************************
*                                                                     *
*                           I K J E F L D 1                           *
*                                                                     *
*                                                                     *
*F U T U R I T Y   S O F T W A R E   I N T E R N A T I O N A L   I N C*
*                                                                     *
*                                                                     *
*                   CHIEF ARCHITECT: Garry G. Green                   *
*                  ARCHITECT EN CHEF: Garry G. Green                  *
*                                                                     *
*                       COPYRIGHT MAY 2005 FSI                        *
*                                                                     *
***********************************************************************

***********************************************************************
*                                                                     *
*   FUNCTION                                                          *
*                                                                     *
*     TSO Logon Pre-prompt exit that permits user to specify the name *
*     of the JES to be used for the about to be started TSO session.  *
*     The default is to use the PJES (Primary JES).                   *
*                                                                     *
***********************************************************************

***********************************************************************
*                                                                     *
*   CHANGE ACTIVITY                                                   *
*   $G00=050527 VERSION 1.0 BASE                                      *
*                                                                     *
***********************************************************************

***********************************************************************
*                                                                     *
*   ATTRIBUTES:                                                       *
*     Refreshable, Amode(24), Rmode(24), Plpa or Linklist resident    *
*     Entered Key8, Supervisor state                                  *
*                                                                     *
***********************************************************************

***********************************************************************
*                                                                     *
*                     R E C O R D   L A Y O U T S                     *
*                                                                     *
***********************************************************************

         PRINT     ON,NOGEN                  SUPPRESS EXPANSION
         IHAPSA    ,                         MAP PSA
         CVT       DSECT=YES                 MAP CVT
         IEFJESCT  ,                         MAP JESCT
         IHAASCB   ,                         MAP ASCB
CSCB     DSECT     ,                         CSCB DOES NOT HAVE ITS OWN
         IEECHAIN  ,                         MAP CSCB
CIB      DSECT     ,                         CIB  DOES NOT HAVE ITS OWN
         IEZCIB    ,                         MAP CIB
         IKJTCB    ,                         MAP TCB

WS       DSECT     ,                         MAP OUR WORKING STORAGE
ENQW     ENQ       (CSCBMAJ,                 W/S copy of ENQ plist     *
                   CSCBMIN,                  (cont'd)                  *
                   E,                        (cont'd)                  *
                   3,                        (cont'd)                  *
                   SYSTEM),                  (cont'd)                  *
                   RET=HAVE,                 (cont'd)                  *
                   MF=L                      (cont'd)

DEQW     DEQ       (CSCBMAJ,                 W/S copy of DEQ plist     *
                   CSCBMIN,                  (cont'd)                  *
                   3,                        (cont'd)                  *
                   SYSTEM),                  (cont'd)                  *
                   RET=HAVE,                 (cont'd)                  *
                   MF=L                      (cont'd)

SSNAME   DS        CL4                       Subsystem name
KEYSAVE  DS        XL1                       PSW key save
PJESN    DS        CL4                       Primary JES Name
WSLEN    EQU       *-WS                      Length of working storage
         PRINT     ON,GEN

***********************************************************************
*                                                                     *
*                     P R O G R A M   P R O L O G                     *
*                                                                     *
***********************************************************************

IKJEFLD1 ENTER     AMODE=24,RMODE=24
         B         START                     BRANCH AROUND CONSTANTS
*STATS
***********************************************************************
*                                                                     *
*                          C O N S T A N T S                          *
*                                                                     *
***********************************************************************

@CIBLEN  EQU       CIBDATA-CIB+L'CIBDATA     Len of STC Comm CIB =
*                                            fixed len + data len
PROMPT   DC        C'Enter subsystem name; pressing enter will use the *
                   Primary JES'

ENQM     ENQ       (CSCBMAJ,                 Model copy of ENQ plist   *
                   CSCBMIN,                  (cont'd)                  *
                   E,                        (cont'd)                  *
                   3,                        (cont'd)                  *
                   SYSTEM),                  (cont'd)                  *
                   RET=HAVE,                 (cont'd)                  *
                   MF=L                      (cont'd)
ENQLEN   EQU       *-ENQM                    (cont'd)

DEQM     DEQ       (CSCBMAJ,                 Model copy of DEQ plist   *
                   CSCBMIN,                  (cont'd)                  *
                   3,                        (cont'd)                  *
                   SYSTEM),                  (cont'd)                  *
                   RET=HAVE,                 (cont'd)                  *
                   MF=L                      (cont'd)
DEQLEN   EQU       *-DEQM                    (cont'd)

CSCBMAJ  DC        C'SYSIEFSD'               CSCB major ENQ name
CSCBMIN  DC        C'Q10'                    CSCB minor ENQ name

***********************************************************************
*                                                                     *
*            L O G I C A L   S T A R T   O F   P R O G R A M          *
*                                                                     *
***********************************************************************

START    DS        0H                        Logical start of program
         LR        R3,R1                     Save parmlist addr
         STORAGE   OBTAIN,                   Get w/s                   *
                   LENGTH=WSLEN              (cont'd)
         LR        R13,R1                    Load W/S @ into R13
         USING     WS,R13                    Map w/s

***********************************************************************
*                                                                     *
*      Obtain Primary JES Subsystem Name and save for later use       *
*                                                                     *
***********************************************************************

         L         R1,FLCCVT-PSA(0)          Get @ CVT
         L         R1,CVTJESCT-CVTMAP(R1)    Get @ JESCT
         MVC       PJESN,JESPJESN-JESCT(R1)  Save Primary JES Name

***********************************************************************
*                                                                     *
*  Look for 'LOGON ?' (i.e. LOGON followed by exactly one blank, a    *
*  question mark, then optionally any other data normally entered on  *
*  the LOGON command line                                             *
*                                                                     *
***********************************************************************

         L         R1,0(R3)                  Get @ Exit parm 1
         L         R2,4(R1)                  Get logon command length
         C         R2,=F'7'                  Q. Command length >= 7
         BL        PJES                      A. No, can't be "LOGON ?"
*                                               Branch to use PJES
         L         R1,8(R1)                  Get @ logon buffer
         CLC       =CL7'LOGON ?',0(R1)       Q. LOGON command with ?
         BNE       PJES                      A. No - branch to use PJES
         MVI       6(R1),C' '                Blank out question mark

***********************************************************************
*                                                                     *
*                   Prompt User for Subsystem Name                    *
*                                                                     *
***********************************************************************

         MVC       SSNAME,=CL4' '            Init subsys name to blanks
         TPUT      PROMPT,                   Prompt user for subsystem *
                   L'PROMPT                  (cont'd)
         TGET      SSNAME,                   Get user's answer         *
                   L'SSNAME                  (cont'd)
         OC        SSNAME,=CL4' '            Upper case the answer
         CLC       SSNAME,=CL4' '            Q. User entered nothing
         BE        PJES                      A. Yes - branch - use PJES
         CLC       SSNAME,PJESN              Q. Answer is name of PJES
         BE        PJES                      A. Yes - branch - use PJES

***********************************************************************
*                                                                     *
*                  Obtain storage for and format CIB                  *
*                                                                     *
***********************************************************************

         IPK       ,                         Save current PSW key
         STC       R2,KEYSAVE                (cont'd)
         SPKA      X'00'                     Switch to PSW key zero
         STORAGE   OBTAIN,                   Get CIB storage from SQA  *
                   LENGTH=@CIBLEN,           (cont'd)                  *
                   SP=245                    (cont'd)
         LR        R10,R1                    Save CIB address
         USING     CIB,R10                   Map our CIB
         LA        R1,*+4+4+2                Switch to 31-bit mode
         O         R1,=XL4'80000000'         (cont'd)
         BSM       0,R1                      (cont'd)
         XC        CIB(@CIBLEN),CIB          Zero out our CIB
         MVI       CIBLEN,@CIBLEN/8          Set CIB len in DWords
         MVI       CIBVERB,CIBSTCOM          Set STC communication code
         MVI       CIBCONID,X'00'            Set console ID to internal
         MVC       CIBDATLN,=AL2(L'CIBDATA)  Set data length in bytes
         MVC       CIBDATA(4),=CL4'SUB='     Put SUB= into CIB data
         MVC       CIBDATA+4(4),SSNAME       Add S/S name after SUB=

***********************************************************************
*                                                                     *
*              Chain our CIB onto CIB chain as first CIB              *
*                                                                     *
* CHCIBP  -->  1st CIB --> 2nd CIB --> etc          (Before)          *
*   +                                                                 *
*   + changed to following                                            *
*   +                                                                 *
*   +------->  our CIB --> 1st CIB --> 2nd CIB etc  (After)           *
*                                                                     *
***********************************************************************

         MVC       ENQW(ENQLEN),ENQM         Copy model ENQ parm list
         ENQ       ,MF=(E,ENQW)              ENQ CIB chain
         L         R2,PSAAOLD-PSA(0)         Get @ ASCB
         L         R11,ASCBCSCB-ASCB(R2)     Get @ CSCB
         L         R1,CHCSCXP-CHAIN(R11)     Get @ CSCX
         LA        R1,CHCIBP-CSCX(R1)        @ to CHCIBP (see diagram)
         L         R0,0(R1)                  Get 1st CIB @ from CHCIBP
         ST        R0,CIBNEXT-CIB(R10)       And store it into our CIB
         ST        R10,0(R1)                 Store @ to our CIB into
*                                            CHCIBP field (see diagram)
         LA        R1,*+4+2                  Switch to 24-bit mode
         BSM       0,R1                      (cont'd)
         MVC       DEQW(DEQLEN),DEQM         Copy model DEQ parm list
         DEQ       ,MF=(E,DEQW)              DEQ CIB chain
         DROP      R10                       Finished with CIB mapping

***********************************************************************
*                                                                     *
*                  Eliminate zap to IKJEFLA1/IKJEFLB                  *
*                                                                     *
***********************************************************************

         CLC       SSNAME,=CL4'MSTR'         Q. MSTR S/S specified
         BNE       NOJOBST                   A. No - branch
         L         R2,PSATOLD-PSA(0)         Get @ our TCB
         ST        R2,TCBJSTCB-TCB(R2)       Make our TCB a JobStep TCB
NOJOBST  DS        0H                        Bypass making our TCB a
*                                            JobStep TCB

***********************************************************************
*                                                                     *
*                      Back to original PSW Key                       *
*                                                                     *
***********************************************************************

         IC        R2,KEYSAVE                Restore original PSW key
         SPKA      0(R2)                     (cont'd)
         B         END                       Goto common end

***********************************************************************
*                                                                     *
*                           Use Primary JES                           *
*                                                                     *
***********************************************************************

PJES     DS        0H                        Set SSNAME to PJES name
         MVC       SSNAME,PJESN              (cont'd)

***********************************************************************
*                                                                     *
*    Indicate which S/S was used - store name into TSO Exit to Exit   *
*    communication word; logoff exit IKJEFLD2 has special processing  *
*    to perform if selected subsystem was not the PJES                *
*                                                                     *
***********************************************************************

END      DS        0H                        Common end
         L         R4,20(R3)                 Get @ to TSO Exit to Exit
*                                            Communication Word
         MVC       0(8,R4),=XL8'0000000000000004'  Init key and len
         MVC       8(4,R4),SSNAME            Indicate to IKJEFLD2 the
*                                            Subsystem Name used

***********************************************************************
*                                                                     *
*                            Module Epilog                            *
*                                                                     *
***********************************************************************

         STORAGE   RELEASE,                  Release working storage   *
                   LENGTH=WSLEN,             (cont'd)                  *
                   ADDR=(R13)                (cont'd)
         XR        R15,R15                   Set return code = 0
         PR        ,                         Return to caller

***********************************************************************
*                                                                     *
*                          WIND UP ASSEMBLY                           *
*                                                                     *
***********************************************************************

         LTORG     ,                         Assemble literals here
         END       IKJEFLD1                  Specify Entry Point
