{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012344000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 352716, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 14, "INMDSNAM": "CBT.V500.FILE561.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 352716, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE561.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x07\\x04'", "DS1TRBAL": "b'\\xbaV'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x04+\\x00\\t\\x04,\\x00\\x01\\x00\\x08'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02\\x13_\\x01\\x02\\x13_#\\x05\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-15T00:00:00", "modifydate": "2002-05-15T23:05:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 447    FILE:  561\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT447.FILE561\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    8000    PO\n\n   PDS117I 52 MEMBERS COUNTED; CUMULATIVE SIZE IS 2,550 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/15/02    23:05:08    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00A\\x01\\x02\\x13_\\x01\\x02\\x13_#\\x04\\x00\\x1a\\x00\\x11\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-15T00:00:00", "modifydate": "2002-05-15T23:04:41", "lines": 26, "newlines": 17, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: File561\nDate: Wed, 15 May 2002 17:48:33 -0400\nFrom: \"Thornton, Dick\" <rthornton@trigon.com>\nTo: xgob1 <sbgolob@attglobal.net>, xgob2 <sbgolob@aol.com>\n\nHi Sam,\nI am sending an update to File 561 this time. It is an XMIT PDS file.\nI sent the whole library (as I now have it) as there were a lot of\ncosmetic changes to members. The principal change of value is the\naddition of the $$README member.\n\nI deleted the following members as of no value: ASME, CBC3GIS9, CT,\nFELEREXX, EWXREF, OWNER, PST, SMPE0, TESTMAC, XREFPUT, XTUPDATE\n\nThanks again for your work,\nDick\n\nNote from Sam Golob:   I kept what Dick says he deleted.  Maybe\n                       somebody can use some code from these\n                       members.  The idea that Dick deleted the\n                       stuff, is that he doesn't vouch for its\n                       usefulness or its accuracy.  That's why we\n                       are mentioning these member names--to just\n                       let you know about the \"status\" of these\n                       particular pds members.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$README": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x16\\x01\\x02\\x12\\x8f\\x01\\x02\\x13_\\x17\\x04\\x00^\\x00e\\x00^\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2002-05-08T00:00:00", "modifydate": "2002-05-15T17:04:16", "lines": 94, "newlines": 101, "modlines": 94, "user": "BC0THOR"}, "text": "************************************************************************\n* File 561 is primarily CLISTs used in TSO ISPF sessions.              *\n************************************************************************\nASMC     .Edit macro used to save current source program and submit an\n          assembly and linkedit. Uses the ASMXP66 member in File 560 and\n          also the ASMEDITC edit macro in this library. This CLIST\n          differs from ASMN in that the linkedit is with \"CALL\".\nASMEDITC .Edit macro used by the ASMC edit macro in this library.\nASMEDITN .Edit macro used by the ASMN edit macro in this library.\nASMN     .Edit macro used to save current source program and submit an\n          assembly and linkedit. Uses the ASMXP66 member in File 560 and\n          also the ASMEDITN edit macro in this library. This CLIST\n          differs from ASMC in that the linkedit is with \"NCAL\".\nBATCHEDT .A sample edit macro that can be used as-is, or as a model. As\n          written, it does a \"change all 'mvc' '@@@';save;end\" in the\n          dataset currently being edited.\nBATCHED1 .A sample CLIST that initiates an edit session on a dataset\n          named BC0THOR.TEST.DATA and executes the BATCHEDT macro in\n          this library. The dataset will be changed such that all\n          occurrences of the string 'mvc' will have been changed to\n          '@@@'.\nBKT      .In the C language source program being edited, this edit\n          macro replaces all square brackets found with the values\n          needed so that they display as brackets in the edit session.\n          This is necessary since the edit session may not recognize\n          the same value for square brackets as does the C language\n          compiler.\nBOOKD    .Used to initiate a BookManager session.\nBOOKSHRT .Another BookManager CLIST\nBPROC    .A TSO initialization CLIST\nCBC3GIS1 .Starts the C language ISPF example using the panels CBC3GIS2,\n          CBC3GIS4, and CBC3GIS5 in File 562 (PLIB) and the C program\n          CBC3GIS3 in File 559.\nCBC3GIS6 .Starts the C language ISPF example using the panels CBC3GIS7\n          and CBC3GIS4 in File 562 (PLIB) and the C program CBC3GIS8 in\n          File 559.\nCCMP     .Saves the current C language source program being edited and\n          submits a compile-and-bind job for the program. It uses the\n          edit macro CEDIT in this library, and the EDCCB JCL in File\n          560.\nCEDIT    .An edit macro used with the CCMP macro in this library.\nCHRDUMP  .Allocates the files and executes the CHRDUMP program from a\n          TSO session.\nCOBV     .Saves the VS COBOL program currently being edited and submits\n          a compile-and-linkedit job for it. Uses the COBVEDIT macro in\n          this library and the JCL member COBVXP66 in File 560\nCOBVEDIT .An edit macro used by the COBV member of this library.\nCOB2     .Saves the COBOL II program currently being edited and submits\n          a compile-and-linkedit job for it. Uses the COB2EDIT macro in\n          this library and the JCL member COB2XP66 in File 560.\nCOB2EDIT .An edit macro used with the COB2 macro in this library.\nCOB3     .Saves the COBOL/390 program currently being edited and submits\n          a compile-and-linkedit job for it. Uses the COB3EDIT macro in\n          this library and the JCL member COB3XP66 in File 560.\nCOB3EDIT .An edit macro used with the COB3 macro in this library.\nCOMPARE  .Sample CLIST to allocate the files and invoke the COMPASM\n          program in file 558 to compare two assembler language\n          programs.\nCOMPPDS  .Compresses a PDS by allocating a new dataset, copying the\n          named dataset into it, deleting the original, and renaming\n          the new one to the old name.\nDATES    .Accepts a date (Julian or Gregorian) from the user, calls the\n          DATES program in File 563 for conversion, and returns the\n          opposite date of that provided.\nDEBUG    .Sample start code for a CLIST with the DEBUG option.\nFELE     .A REXX EXEC we use to query Endevor about elements.\nHCD      .Initiates an HCD session.\nIPCSINIT .Initiates an IPCS session under ISPF.\nIPLINFO  .Displays information about the most recent IPL. A REXX EXEC\n          written by Mark Zelden is called.\nISPALOC  .Allocates files for a TSO ISPF session.\nRENMSAVE .Reduces keystrokes in renaming a PDS member. Syntax is\n          \"RENM pdsname curmemname newmemname\" where pdsname is the\n          dsname of the PDS containing the member, curmemname is the\n          current member name, and newmemname is the desired new name\n          for the member.\nSTARTREK .Initiates an old STARTREK game from the 60's. Uses the\n          STASRTREK load module in File 568.\nT        .Sample edit macro that searches for a string beginning in\n          column 1. When/if found, deletes the line found and inserts\n          two lines in its place, then SAVEs and ENDs.\nTEST2    .Sample edit macro that searches for a string beginning in\n          column 1. When/if found, deletes the line found and inserts\n          two lines in its place. same as the T CLIST except it does\n          not SAVE nor END.\nVSYSTEM  .A system utility CLIST for Endevor received from CA support.\nXCOL     .Excludes a column from a dataset in edit or view. This can\n          be useful when elements in a dataset are so far apart\n          that the display must be shifted left and right to see both\n          elements. Syntax is \"XCOL sss lll\" where sss is the beginning\n          column, and lll is the ending column. Data is actually\n          shifted by this edit macro, so be sure to end without saving\n          to prevent data corruption in edit.\nXXCOL    .A REXX EXEC that duplicates the action of CLIST XCOL.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE561": {"ttr": 523, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x18\\x01\\x01\\x02_\\x01\\x02\\x10O\\x08\\x07\\x00\\r\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2002-04-14T08:07:18", "lines": 13, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 561 is from Dick Thornton, who is the author of the       *   FILE 561\n//*           DISASSEMBLER program on File 217, and his new         *   FILE 561\n//*           DISASSEMBLER program on File 234.  This is his        *   FILE 561\n//*           CLIST collection.  This collection has been           *   FILE 561\n//*           converted from the original VB-255 to the FB-80       *   FILE 561\n//*           format, but there were very few \"long lines\" that     *   FILE 561\n//*           had to be folded.                                     *   FILE 561\n//*                                                                 *   FILE 561\n//*           emails:  (check to see which are relevant):           *   FILE 561\n//*               dickthor@hotmail.com                              *   FILE 561\n//*               cthornton@swva.net                                *   FILE 561\n//*               rthornton@trigon.com                              *   FILE 561\n//*                                                                 *   FILE 561\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ASMC": {"ttr": 525, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x15\\x01\\x02\\x02?\\x01\\x02\\x02?\\x082\\x00\\r\\x00\\r\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2002-01-23T00:00:00", "modifydate": "2002-01-23T08:32:15", "lines": 13, "newlines": 13, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISREDIT (ASMMBR) = MEMBER  /* GET NAME OF MEMBER BEING EDITED.       */\nIF &ASMMBR = &STR() THEN DO\n    SET &ZEDSMSG = &STR(NO MEMBER)\n    SET &ZEDLMSG = &STR(MEMBER VARIABLE FROM ISPF IS NULL)\n    ISPEXEC SETMSG MSG(ISRZ001)\n    EXIT CODE(12)\n    END\nISPEXEC VPUT (ASMMBR)      /* WRITE MEMBER NAME TO VARIABLE POOL     */\nISREDIT SAVE               /* SAVE MEMBER BEING EDITED               */\nISPEXEC EDIT DATASET(PDS.JCL(ASMXP66)) MACRO(ASMEDITC) /*EDIT, SUBMIT*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASME": {"ttr": 527, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00#\\x01\\x00(_\\x01\\x00(_\\x12H\\x00\\r\\x00\\r\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-10-11T00:00:00", "modifydate": "2000-10-11T12:48:23", "lines": 13, "newlines": 13, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISREDIT (ASMMBR) = MEMBER  /* GET NAME OF MEMBER BEING EDITED.       */\nIF &ASMMBR = &STR() THEN DO\n    SET &ZEDSMSG = &STR(NO MEMBER)\n    SET &ZEDLMSG = &STR(MEMBER VARIABLE FROM ISPF IS NULL)\n    ISPEXEC SETMSG MSG(ISRZ001)\n    EXIT CODE(12)\n    END\nISPEXEC VPUT (ASMMBR)      /* WRITE MEMBER NAME TO VARIABLE POOL     */\nISREDIT SAVE               /* SAVE MEMBER BEING EDITED               */\nISPEXEC EDIT DATASET(PDS.JCL(ASMXP66E)) MACRO(ASMEDIT) /*EDIT, SUBMIT*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASMEDITC": {"ttr": 529, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00W\\x01\\x02\\x02?\\x01\\x02\\x02?\\x08@\\x00\\x19\\x00\\x19\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-01-23T00:00:00", "modifydate": "2002-01-23T08:40:57", "lines": 25, "newlines": 25, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: THIS EDIT MACRO IS CALLED BY EDIT MACRO ASMN TO CHANGE */\n/*            THE JCL IN BC0THOR.PDS.ASM(ASMXP66) SO THAT IT WILL    */\n/*            ASSEMBLE THE PROGRAM JUST EDITED WHEN THE ASM MACRO WAS*/\n/*            INVOKED. THE ASM MACRO VPUTS THE MEMBER NAME IN POOL   */\n/*            VARIABLE ASMMBR BEFORE INVOKING THIS MACRO.            */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 01/23/2002      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE, IMPLIES LINKEDIT PARM IS NCAL          */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*01/23/2002 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISPEXEC VGET (ASMMBR)         /* GET MEMBER NAME SET UP BY ASM MACRO */\nISREDIT CHANGE ALL 'XXXXXXXX' '&ASMMBR' /* CHANGE X'S TO MEMBER NAME */\nISREDIT CHANGE ALL 'ZZZZ' 'CALL'   /* SET LINK CALL/NCAL PARM */\nISREDIT SUBMIT                /* SUBMIT RESULTING ASM/LKED JCL       */\nISREDIT CAN                   /* DON'T SAVE THE CHANGES TO ASMXP66   */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASMEDITN": {"ttr": 531, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00!\\x01\\x02\\x02?\\x01\\x02\\x02?\\x089\\x00\\x19\\x00\\x19\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-01-23T00:00:00", "modifydate": "2002-01-23T08:39:21", "lines": 25, "newlines": 25, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: THIS EDIT MACRO IS CALLED BY EDIT MACRO ASMN TO CHANGE */\n/*            THE JCL IN BC0THOR.PDS.ASM(ASMXP66) SO THAT IT WILL    */\n/*            ASSEMBLE THE PROGRAM JUST EDITED WHEN THE ASM MACRO WAS*/\n/*            INVOKED. THE ASM MACRO VPUTS THE MEMBER NAME IN POOL   */\n/*            VARIABLE ASMMBR BEFORE INVOKING THIS MACRO.            */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 01/23/2002      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE, IMPLIES LINKEDIT PARM IS NCAL          */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*01/23/2002 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISPEXEC VGET (ASMMBR)         /* GET MEMBER NAME SET UP BY ASM MACRO */\nISREDIT CHANGE ALL 'XXXXXXXX' '&ASMMBR' /* CHANGE X'S TO MEMBER NAME */\nISREDIT CHANGE ALL 'ZZZZ' 'NCAL'   /* SET LINK CALL/NCAL PARM */\nISREDIT SUBMIT                /* SUBMIT RESULTING ASM/LKED JCL       */\nISREDIT CAN                   /* DON'T SAVE THE CHANGES TO ASMXP66   */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ASMN": {"ttr": 533, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00X\\x01\\x02\\x02?\\x01\\x02\\x02?\\x087\\x00\\r\\x00\\r\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2002-01-23T00:00:00", "modifydate": "2002-01-23T08:37:58", "lines": 13, "newlines": 13, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISREDIT (ASMMBR) = MEMBER  /* GET NAME OF MEMBER BEING EDITED.       */\nIF &ASMMBR = &STR() THEN DO\n    SET &ZEDSMSG = &STR(NO MEMBER)\n    SET &ZEDLMSG = &STR(MEMBER VARIABLE FROM ISPF IS NULL)\n    ISPEXEC SETMSG MSG(ISRZ001)\n    EXIT CODE(12)\n    END\nISPEXEC VPUT (ASMMBR)      /* WRITE MEMBER NAME TO VARIABLE POOL     */\nISREDIT SAVE               /* SAVE MEMBER BEING EDITED               */\nISPEXEC EDIT DATASET(PDS.JCL(ASMXP66)) MACRO(ASMEDITN) /*EDIT, SUBMIT*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BATCHEDT": {"ttr": 535, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00Y\\x00\\x99!\\x7f\\x00\\x99!\\x7f\\x17\\x12\\x00\\x05\\x00/\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1999-08-05T00:00:00", "modifydate": "1999-08-05T17:12:59", "lines": 5, "newlines": 47, "modlines": 0, "user": "BC0THOR"}, "text": "ISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISREDIT CHANGE ALL 'MVC' '@@@'\nISREDIT SAVE\nISREDIT END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BATCHED1": {"ttr": 537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x00\\x99!\\x7f\\x00\\x99!\\x7f\\x17\\x12\\x00\\x01\\x00\\x01\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-08-05T00:00:00", "modifydate": "1999-08-05T17:12:33", "lines": 1, "newlines": 1, "modlines": 0, "user": "BC0THOR"}, "text": "ISPEXEC EDIT DATASET('bc0thor.test.data') MACRO(batchedt)\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "BKT": {"ttr": 539, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x000\\x01\\x00\"\\x7f\\x01\\x02\\x13_\\x17\\x10\\x00.\\x00#\\x00.\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2000-08-14T00:00:00", "modifydate": "2002-05-15T17:10:30", "lines": 46, "newlines": 35, "modlines": 46, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: CONVERTS BRACKETS FOR EDITING C LANGUAGE SOURCE AND    */\n/*            PROVIDES A COUNT OF THE LEFT AND RIGHT BRACKETS FOR    */\n/*            VALIDATION. FIRST, CONVERTS ALL TRIGRAPH AND TRUE HEX  */\n/*            BRACKET VALUES TO THOSE USABLE IN TSO/ISPF EDIT, THEN  */\n/*            COUNTS THE LEFT AND RIGHT BRACKETS AND REPORTS ANY     */\n/*            INEQUALITY. CIRCUMFLEX ALSO CONVERTED.                 */\n/*   AUTHOR:  BC0THOR BASED ON IBM MANUAL. CREATED: 08/14/2000       */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO DATE DEPENDENCIES                            */\n/*********************************************************************/\n/*               MAINTENANCE RECORD: LAST 3 CHANGES                  */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nIF &DEBUG = DEBUG THEN CONTROL LIST CONLIST SYMLIST\nISREDIT CHANGE ALL C'??(' X'BA'    /*********************************/\nISREDIT CHANGE ALL C'??)' X'BB'    /* CONVERT TRIGRAPHS, X'AD' AND  */\nISREDIT CHANGE ALL X'AD' X'BA'     /* X'BD' TO THE ISPF EDIT SCREEN */\nISREDIT CHANGE ALL X'BD' X'BB'     /* VALUES X'BA' AND X'BB'.       */\n                                   /*********************************/\nISREDIT CHANGE ALL X'5F' X'B0'     /* CIRCUMFLEX (HAT)              */\n\nISREDIT FIND C'[' ALL NX\nISREDIT (N1) = FIND_COUNTS\nISREDIT FIND C']' ALL NX\nISREDIT (N2) = FIND_COUNTS\nIF (&N1 \u00ac= &N2) THEN WRITE UNBALANCED BRACKETS: &N1 LEFT, &N2 RIGHT\n\nISREDIT FIND C'(' ALL NX\nISREDIT (N1) = FIND_COUNTS\nISREDIT FIND C')' ALL NX\nISREDIT (N2) = FIND_COUNTS\nIF (&N1 \u00ac= &N2) THEN WRITE UNBALANCED PARENTHESES: &N1 LEFT, &N2 RIGHT\n\nISREDIT FIND C'{'  ALL NX\nISREDIT (N1) = FIND_COUNTS\nISREDIT FIND C'}' ALL NX\nISREDIT (N2) = FIND_COUNTS\nIF (&N1 \u00ac= &N2) THEN WRITE UNBALANCED CURLY BRACES: &N1 LEFT, &N2 RIGHT\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BOOKD": {"ttr": 541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00X\\x01\\x00\\x13\\x7f\\x01\\x02\\x08_\\x11C\\x00!\\x00\\x1e\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2000-05-16T00:00:00", "modifydate": "2002-03-26T11:43:58", "lines": 33, "newlines": 30, "modlines": 0, "user": "BC0THOR"}, "text": "PROC 0 DEBUG(     )\nIF &DEBUG = DEBUG THEN CONTROL LIST CONLIST SYMLIST\nCONTROL MAIN\nISPEXEC LIBDEF ISPPLIB DATASET ID('EOY.SEOYPENU')\nISPEXEC LIBDEF ISPTLIB DATASET ID('EOY.SEOYTENU')\nISPEXEC LIBDEF ISPMLIB DATASET ID('EOY.SEOYMENU')\nISPEXEC LIBDEF ISPLLIB DATASET ID('EOY.SEOYLOAD' 'EOY.SEOYLPA' -\n                       'CEE.SCEERUN' 'CBC.SCLBDLL' 'GDDM.SADMMOD')\nALTLIB  ACT    APP(EXEC)      DSN('EOY.SEOYCLIB')\nSTEPLIB CLOSE\nFREE FI(STEPLIBX)\nALLOC FI(STEPLIBX) DA('EOY.SEOYLOAD' 'EOY.SEOYLPA' 'CEE.SCEERUN' -\n                              'CBC.SCLBDLL' 'GDDM.SADMMOD') SHR\nSTEPLIB CLOSE\nERROR GOTO FREESL\nSTEPLIB OPEN(STEPLIBX)\nISPEXEC SELECT CMD(%EOXVSTRT &ZALTTR) MODE(FSCR) SUSPEND -\n                           NEWAPPL(EOXR) NOCHECK PASSLIB\nSTEPLIB CLOSE\nISPEXEC LIBDEF ISPPLIB\nISPEXEC LIBDEF ISPTLIB\nISPEXEC LIBDEF ISPMLIB\nISPEXEC LIBDEF ISPLLIB\nALTLIB  DEA    APP(EXEC)\nEXIT CODE(0)\n/* */\nFREESL: ERROR OFF\nSTEPLIB CLOSE\nFREE FI(STEPLIBX)\nFREEIS: ISPEXEC LIBDEF ISPPLIB\nISPEXEC LIBDEF ISPTLIB\nISPEXEC LIBDEF ISPMLIB\nALTLIB  DEA    APP(EXEC)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BOOKSHRT": {"ttr": 543, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00I\\x01\\x00\\x13\\x7f\\x01\\x02\\x08_\\x11R\\x00\\x10\\x00\\x0e\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-05-16T00:00:00", "modifydate": "2002-03-26T11:52:49", "lines": 16, "newlines": 14, "modlines": 0, "user": "BC0THOR"}, "text": "PROC 0 DEBUG(     )\nIF &DEBUG = DEBUG THEN CONTROL LIST CONLIST SYMLIST\nCONTROL MAIN\nISPEXEC LIBDEF ISPPLIB DATASET ID('EOY.SEOYPENU')\nISPEXEC LIBDEF ISPTLIB DATASET ID('EOY.SEOYTENU')\nISPEXEC LIBDEF ISPMLIB DATASET ID('EOY.SEOYMENU')\nISPEXEC LIBDEF ISPLLIB DATASET ID('EOY.SEOYLOAD' 'EOY.SEOYLPA' -\n                      'CEE.SCEERUN' 'CBC.SCLBDLL' 'GDDM.SADMMOD')\nALTLIB  ACT    APP(EXEC)      DSN('EOY.SEOYCLIB')\nSTEPLIB CLOSE\nFREE FI(STEPLIBX)\nALLOC FI(STEPLIBX) DA('EOY.SEOYLOAD' 'EOY.SEOYLPA' 'CEE.SCEERUN' -\n                              'CBC.SCLBDLL' 'GDDM.SADMMOD') SHR\nSTEPLIB CLOSE\nERROR GOTO FREESL\nSTEPLIB OPEN(STEPLIBX)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BPROC": {"ttr": 545, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x06\\x00\\x99\\x04/\\x00\\x99\\x04/\\x14\"\\x00\\x11\\x00\\x10\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1999-02-11T00:00:00", "modifydate": "1999-02-11T14:22:06", "lines": 17, "newlines": 16, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: TSO INITIALIZATION FOR USE WITH TEST.PROC(DPROC)       */\n/*   AUTHOR:  BC0THOR                CREATION DATE: 02/11/1999       */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO DATE DEPENDENCIES                            */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*02/11/1999 BC0THOR CREATED THIS CLIST                              */\n/*                                                                   */\n/*********************************************************************/\nPROC 0\nISPFINIT\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBC3GIS1": {"ttr": 547, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00D\\x01\\x00%\\x0f\\x01\\x00%\\x0f\\x11Y\\x00\\x03\\x00\\x03\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-09-06T00:00:00", "modifydate": "2000-09-06T11:59:44", "lines": 3, "newlines": 3, "modlines": 0, "user": "BC0THOR"}, "text": "/* THIS CLIST STARTS THE ISPF EXAMPLE */\n\nISPEXEC SELECT PANEL(CBC3GIS2)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBC3GIS6": {"ttr": 549, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x00%\\x0f\\x01\\x00%\\x0f\\x11A\\x00\\x03\\x00\\x03\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-09-06T00:00:00", "modifydate": "2000-09-06T11:41:34", "lines": 3, "newlines": 3, "modlines": 0, "user": "BC0THOR"}, "text": "/* THIS CLIST STARTS THE ISPF EXAMPLE */\n\nISPEXEC SELECT PANEL(CBC3GIS7)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBC3GIS9": {"ttr": 551, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00B\\x01\\x00%\\x0f\\x01\\x00%\\x0f\\x11B\\x00\\x03\\x00\\x03\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-09-06T00:00:00", "modifydate": "2000-09-06T11:42:42", "lines": 3, "newlines": 3, "modlines": 0, "user": "BC0THOR"}, "text": "/* THIS CLIST STARTS THE ISPF EXAMPLE */\n\nISPEXEC SELECT PANEL(CBC3GISA)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CCMP": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00Y\\x01\\x00#\\x0f\\x01\\x00$\\x9f\\t9\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-08-17T00:00:00", "modifydate": "2000-09-05T09:39:59", "lines": 28, "newlines": 28, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: SUBMITS A C COMPILE/BIND FOR THE MEMBER BEING EDITED   */\n/*            USING THE JCL IN PDS.JCL(EDCCB) AS MODIFIED BY EDIT    */\n/*            MACRO CEDIT WHICH IS INVOKED BY THIS EDIT MACRO.       */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 08/17/2000      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*08/17/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISREDIT (CMBR) = MEMBER  /* GET NAME OF MEMBER BEING EDITED.         */\nIF &CMBR = &STR() THEN DO\n    SET &ZEDSMSG = &STR(NO MEMBER)\n    SET &ZEDLMSG = &STR(MEMBER VARIABLE FROM ISPF IS NULL)\n    ISPEXEC SETMSG MSG(ISRZ001)\n    EXIT CODE(12)\n    END\nISPEXEC VPUT (CMBR)        /* WRITE MEMBER NAME TO VARIABLE POOL     */\nISREDIT SAVE               /* SAVE MEMBER BEING EDITED               */\nISPEXEC EDIT DATASET(PDS.JCL(EDCCB)) MACRO(CEDIT)       /*EDIT,SUBMIT*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CEDIT": {"ttr": 771, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00%\\x01\\x00#\\x0f\\x01\\x00$\\x9f\\tA\\x00\\x18\\x00\\x18\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2000-08-17T00:00:00", "modifydate": "2000-09-05T09:41:25", "lines": 24, "newlines": 24, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: THIS EDIT MACRO IS CALLED BY EDIT MACRO CCMP TO CHANGE */\n/*            THE JCL IN BC0THOR.PDS.ASM(EDCCB) SO THAT IT WILL      */\n/*            COMPILE THE PROGRAM JUST EDITED WHEN THE CCMP MACRO    */\n/*            WAS INVOKED. THE CCMP MACRO VPUTS THE MEMBER NAME IN   */\n/*            POOL VARIABLE CMBR BEFORE INVOKING THIS MACRO.         */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 08/17/2000      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*08/17/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISPEXEC VGET (CMBR)           /* GET MEMBER NAME SET BY CCMP MACRO   */\nISREDIT CHANGE ALL 'XXXXXXXX' '&CMBR'    /* CHANGE X'S TO MEMBER NAME*/\nISREDIT SUBMIT                /* SUBMIT RESULTING COMPILE/LKED JCL   */\nISREDIT CAN                   /* DON'T SAVE THE CHANGES TO EDCCB     */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHRDUMP": {"ttr": 773, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x18\\x00\\x98\\x19O\\x01\\x01\\x03o\\tU\\x00\\x04\\x00\\x04\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1998-07-13T00:00:00", "modifydate": "2001-02-05T09:55:18", "lines": 4, "newlines": 4, "modlines": 0, "user": "BC0THOR"}, "text": "FREE F(SYSIN SYSPRINT)\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nCALL 'SYS1.SYSB.HNET.LINKLIB(CHRDUMP)'\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBV": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00Q\\x01\\x00$_\\x01\\x00$_\\x14\\x14\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-09-01T00:00:00", "modifydate": "2000-09-01T14:14:51", "lines": 28, "newlines": 28, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: SUBMITS A COMPILE/LINK FOR THE MEMBER BEING EDITED     */\n/*            USING THE JCL IN PDS.JCL(COBVXP66) AS MODIFIED BY EDIT */\n/*            MACRO COBVEDIT WHICH IS INVOKED BY THIS EDIT MACRO.    */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 04/19/2000      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*04/19/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISREDIT (COBVMBR) = MEMBER  /* GET NAME OF MEMBER BEING EDITED.      */\nIF &COBVMBR = &STR() THEN DO\n    SET &ZEDSMSG = &STR(NO MEMBER)\n    SET &ZEDLMSG = &STR(MEMBER VARIABLE FROM ISPF IS NULL)\n    ISPEXEC SETMSG MSG(ISRZ001)\n    EXIT CODE(12)\n    END\nISPEXEC VPUT (COBVMBR)     /* WRITE MEMBER NAME TO VARIABLE POOL     */\nISREDIT SAVE               /* SAVE MEMBER BEING EDITED               */\nISPEXEC EDIT DATASET(PDS.JCL(COBVXP66)) MACRO(COBVEDIT) /*EDIT,SUBMIT*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBVEDIT": {"ttr": 777, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x004\\x01\\x00$_\\x01\\x00$_\\x14\\x15\\x00\\x18\\x00\\x18\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-09-01T00:00:00", "modifydate": "2000-09-01T14:15:34", "lines": 24, "newlines": 24, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: THIS EDIT MACRO IS CALLED BY EDIT MACRO COBV TO CHANGE */\n/*            THE JCL IN BC0THOR.PDS.ASM(COBVXP66) SO THAT IT WILL   */\n/*            ASSEMBLE THE PROGRAM JUST EDITED WHEN THE COBV MACRO   */\n/*            WAS INVOKED. THE COBV MACRO VPUTS THE MEMBER NAME IN   */\n/*            POOL VARIABLE COBVMBR BEFORE INVOKING THIS MACRO.      */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 04/19/2000      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*04/19/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISPEXEC VGET (COBVMBR)        /* GET MEMBER NAME SET UP BY COBV MACRO*/\nISREDIT CHANGE ALL 'XXXXXXXX' '&COBVMBR' /* CHANGE X'S TO MEMBER NAME*/\nISREDIT SUBMIT                /* SUBMIT RESULTING ASM/LKED JCL       */\nISREDIT CAN                   /* DON'T SAVE THE CHANGES TO COBVXP66  */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB2": {"ttr": 779, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x001\\x01\\x00\\x11\\x0f\\x01\\x00\\x11\\x0f\\x11\\x17\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-04-19T00:00:00", "modifydate": "2000-04-19T11:17:31", "lines": 28, "newlines": 28, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: SUBMITS A COMPILE/LINK FOR THE MEMBER BEING EDITED     */\n/*            USING THE JCL IN PDS.JCL(COB2XP66) AS MODIFIED BY EDIT */\n/*            MACRO COB2EDIT WHICH IS INVOKED BY THIS EDIT MACRO.    */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 04/19/2000      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*04/19/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISREDIT (COB2MBR) = MEMBER  /* GET NAME OF MEMBER BEING EDITED.      */\nIF &COB2MBR = &STR() THEN DO\n    SET &ZEDSMSG = &STR(NO MEMBER)\n    SET &ZEDLMSG = &STR(MEMBER VARIABLE FROM ISPF IS NULL)\n    ISPEXEC SETMSG MSG(ISRZ001)\n    EXIT CODE(12)\n    END\nISPEXEC VPUT (COB2MBR)     /* WRITE MEMBER NAME TO VARIABLE POOL     */\nISREDIT SAVE               /* SAVE MEMBER BEING EDITED               */\nISPEXEC EDIT DATASET(PDS.JCL(COB2XP66)) MACRO(COB2EDIT) /*EDIT,SUBMIT*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB2EDIT": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x00\\x11\\x0f\\x01\\x00\\x11\\x0f\\x11\\x17\\x00\\x18\\x00\\x18\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-04-19T00:00:00", "modifydate": "2000-04-19T11:17:09", "lines": 24, "newlines": 24, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: THIS EDIT MACRO IS CALLED BY EDIT MACRO COB2 TO CHANGE */\n/*            THE JCL IN BC0THOR.PDS.ASM(COB2XP66) SO THAT IT WILL   */\n/*            ASSEMBLE THE PROGRAM JUST EDITED WHEN THE COB2 MACRO   */\n/*            WAS INVOKED. THE COB2 MACRO VPUTS THE MEMBER NAME IN   */\n/*            POOL VARIABLE COB2MBR BEFORE INVOKING THIS MACRO.      */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 04/19/2000      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*04/19/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISPEXEC VGET (COB2MBR)        /* GET MEMBER NAME SET UP BY COB2 MACRO*/\nISREDIT CHANGE ALL 'XXXXXXXX' '&COB2MBR' /* CHANGE X'S TO MEMBER NAME*/\nISREDIT SUBMIT                /* SUBMIT RESULTING ASM/LKED JCL       */\nISREDIT CAN                   /* DON'T SAVE THE CHANGES TO COB2XP66  */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB3": {"ttr": 783, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x04\\x01\\x00$_\\x01\\x00$_\\x13I\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-09-01T00:00:00", "modifydate": "2000-09-01T13:49:04", "lines": 28, "newlines": 28, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: SUBMITS A COMPILE/LINK FOR THE MEMBER BEING EDITED     */\n/*            USING THE JCL IN PDS.JCL(COB3XP66) AS MODIFIED BY EDIT */\n/*            MACRO COB3EDIT WHICH IS INVOKED BY THIS EDIT MACRO.    */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 04/19/2000      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*04/19/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISREDIT (COB3MBR) = MEMBER  /* GET NAME OF MEMBER BEING EDITED.      */\nIF &COB3MBR = &STR() THEN DO\n    SET &ZEDSMSG = &STR(NO MEMBER)\n    SET &ZEDLMSG = &STR(MEMBER VARIABLE FROM ISPF IS NULL)\n    ISPEXEC SETMSG MSG(ISRZ001)\n    EXIT CODE(12)\n    END\nISPEXEC VPUT (COB3MBR)     /* WRITE MEMBER NAME TO VARIABLE POOL     */\nISREDIT SAVE               /* SAVE MEMBER BEING EDITED               */\nISPEXEC EDIT DATASET(PDS.JCL(COB3XP66)) MACRO(COB3EDIT) /*EDIT,SUBMIT*/\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB3EDIT": {"ttr": 785, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x18\\x01\\x00$_\\x01\\x00$_\\x13H\\x00\\x18\\x00\\x18\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-09-01T00:00:00", "modifydate": "2000-09-01T13:48:18", "lines": 24, "newlines": 24, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: THIS EDIT MACRO IS CALLED BY EDIT MACRO COB3 TO CHANGE */\n/*            THE JCL IN BC0THOR.PDS.ASM(COB3XP66) SO THAT IT WILL   */\n/*            ASSEMBLE THE PROGRAM JUST EDITED WHEN THE COB3 MACRO   */\n/*            WAS INVOKED. THE COB3 MACRO VPUTS THE MEMBER NAME IN   */\n/*            POOL VARIABLE COB3MBR BEFORE INVOKING THIS MACRO.      */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 04/19/2000      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*04/19/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISPEXEC VGET (COB3MBR)        /* GET MEMBER NAME SET UP BY COB3 MACRO*/\nISREDIT CHANGE ALL 'XXXXXXXX' '&COB3MBR' /* CHANGE X'S TO MEMBER NAME*/\nISREDIT SUBMIT                /* SUBMIT RESULTING ASM/LKED JCL       */\nISREDIT CAN                   /* DON'T SAVE THE CHANGES TO COB3XP66  */\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMPARE": {"ttr": 787, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x04\\x00\\x99\\t\\x8f\\x00\\x99\\x10?\\x14\\x14\\x00\\n\\x00\\n\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-04-08T00:00:00", "modifydate": "1999-04-13T14:14:04", "lines": 10, "newlines": 10, "modlines": 0, "user": "BC0THOR"}, "text": "CONTROL LIST MSG SYMLIST CONLIST\nFREE F(INPUT1 INPUT2 SYSIN SYSPRINT)\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\nALLOC F(INPUT1) DA(TST.RUX1720P.REENG) SHR\nALLOC F(INPUT2) DA(TST.RUX1722P.REENG) SHR\nCALL LOAD.LOAD(COMPASM)\nFREE F(INPUT1 INPUT2 SYSIN SYSPRINT)\nALLOC F(SYSIN) DA(*)\nALLOC F(SYSPRINT) DA(*)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COMPPDS": {"ttr": 789, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x02\\x000\\x01\\x00\\x01/\\x01\\x02\\x13_\\x17'\\x00%\\x00&\\x00%\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-01-12T00:00:00", "modifydate": "2002-05-15T17:27:30", "lines": 37, "newlines": 38, "modlines": 37, "user": "BC0THOR"}, "text": "PROC 3 DSNAME SIZE DIR\n/*\n    IF &SIZE > 99 THEN DO\n    SET &SEC = 25\n    GOTO ALC\n    END\n/*\n    IF &SIZE > 49 THEN DO\n    SET &SEC = 15\n    GOTO ALC\n    END\n/*\n    SET &SEC = 10\n/*\nALC:ALLOC DA(TST.COMP.PDS) NEW SP(&SIZE &SEC) DIR(&DIR) TRACKS\n    WRITE ***   NOW COMPRESSING \"&SYSPREF..&DSNAME\"   ***\n    WRITE\n/*\n    IF &DSNAME = CLIST.LIB THEN DO\n    FREE F(SYSPROC)\n    ALLOC FILE(SYSPROC) DA('SYS1.CLIST') SHR\n    END\n/*\n    COPY &DSNAME TST.COMP.PDS NOMSG\n    WRITE\n    DEL '&SYSPREF..&DSNAME'\n    WRITE\n    REN TST.COMP.PDS '&SYSPREF..&DSNAME'\n/*\n    IF &DSNAME = CLIST.LIB THEN DO\n    FREE F(SYSPROC)\n    ALLOC FILE(SYSPROC) DA('&SYSPREF..&DSNAME' 'SYS1.CLIST') SHR\n    END\n/*\n    WRITE ***   \"&SYSPREF..&DSNAME\" NOW COMPRESSED   ***\n    EXIT\n/*\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CT": {"ttr": 791, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x08\\x00F\\x00\\x97\\x05\\x1f\\x00\\x98'O\\x11W\\x00\\xb9\\x00\\xb9\\x00\\xb9\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.08", "flags": 0, "createdate": "1997-02-20T00:00:00", "modifydate": "1998-10-01T11:57:46", "lines": 185, "newlines": 185, "modlines": 185, "user": "BC0THOR"}, "text": "          ISREDIT MACRO (LEVEL REST) NOPROCESS\n/******************************************************************\n/*     DETERMINE IF WE ARE RUNNING IN DEBUG MODE                  *\n/*     AND SET CONTROL ACCORDINGLY                                *\n/******************************************************************\n         CONTROL MSG FLUSH PROMPT\n         ISPEXEC  CONTROL  ERRORS CANCEL\n         ISPEXEC VGET (SPFDBUG) PROFILE\n         IF &LASTCC \u00ac= 0 THEN SET &SPFDBUG = N\n         IF &SPFDBUG = Y THEN CONTROL LIST MSG SYMLIST CONLIST\n/******************************************************************\n/*               MAIN CLIST LOGIC                                 *\n/******************************************************************\n\n          IF &NRSTR(&REST) \u00ac= THEN +\n             DO\n             SET ZEDSMSG = &NRSTR(INVALID OPERAND)\n             SET ZEDLMSG = &NRSTR(ONLY A FILE NAME OF 5 BYTES OR +\n             LESS IS VALID)\n             ISPEXEC SETMSG MSG(ISRZ001)\n             EXIT CODE(12)\n             END\n\n          IF &NRSTR(&LEVEL) = THEN +\n             DO\n             SET LEVEL = A\n             END\n\n          IF &NRSTR(&LEVEL) = HELP THEN +\n             DO\n             ISPEXEC CONTROL DISPLAY SAVE\n             ISPEXEC SELECT PGM(ISPTUTOR) PARM(#CUT)\n             ISPEXEC CONTROL DISPLAY RESTORE\n             EXIT CODE(0)\n             END\n\n          IF &NRSTR(&LEVEL) = LIST THEN +\n             DO\n             GOTO CUTLIST\n             END\n\n          IF &LENGTH(&NRSTR(&LEVEL)) > 5 THEN +\n             DO\n             SET ZEDSMSG = &NRSTR(INVALID LEVEL)\n             SET ZEDLMSG = &NRSTR(ONLY A FILE NAME OF 5 BYTES OR +\n             LESS IS VALID)\n             ISPEXEC SETMSG MSG(ISRZ001)\n             EXIT CODE(12)\n             END\n\n          IF &DATATYPE(&NRSTR(&LEVEL)) = NUM THEN +\n              SET LEVEL = &LEVEL\n\n          CONTROL NOFLUSH NOMSG\n          ISREDIT PROCESS RANGE C M\n          SET LCC = &LASTCC\n          CONTROL FLUSH MSG\n          ISREDIT (CMD) = RANGE_CMD\n          IF &LCC > 0 THEN +\n             DO\n             SET ZEDSMSG = &NRSTR(RANGE NOT SPECIFIED)\n             SET ZEDLMSG = &NRSTR(USING \"M\" OR \"C\" LINE COMMANDS +\n             YOU MUST SPECIFY THE LINES TO CUT)\n             ISPEXEC SETMSG MSG(ISRZ001)\n             EXIT CODE(12)\n             END\n\n          ISREDIT (FLINE) = LINENUM .ZFRANGE\n          ISREDIT (LLINE) = LINENUM .ZLRANGE\n\n          SET TABLE = &NRSTR(CUT&LEVEL)\n\n          ISPEXEC TBCREATE &TABLE NAMES(RECORD) WRITE REPLACE +\n                  LIBRARY(ISPPROF)\n          SET LCC = &LASTCC\n\n          SET CNT = 0\n          DO WHILE &FLINE \u00ac> &LLINE\n\n             ISREDIT (RECORD) = LINE &FLINE\n             ISPEXEC TBADD &TABLE\n             SET CNT = &CNT + 1\n             IF &CMD = M THEN DO\n                 ISREDIT DELETE &FLINE &FLINE\n                 SET LLINE = &LLINE - 1\n                 END\n             ELSE +\n                 SET FLINE = &FLINE + 1\n\n             END\n\n          ISPEXEC TBCLOSE &TABLE PAD(10) LIBRARY(ISPPROF)\n          SET ZEDSMSG = &NRSTR(&CNT LINES CUT)\n          SET ZEDLMSG = &NRSTR(&CNT LINES CUT AND SAVED INTO FILE +\n          &LEVEL)\n          ISPEXEC SETMSG MSG(ISRZ000)\n          EXIT CODE(1)\nCUTLIST:  +\n          ISPEXEC TBCREATE CUTLIST NAMES(LEVEL RECCNT CREATED +\n                  RECORD) NOWRITE\n\n          ISPEXEC TBVCLEAR CUTLIST\n          ISPEXEC LMINIT DATAID(ID) DDNAME(ISPPROF)\n          ISPEXEC LMOPEN DATAID(&ID)\n          ISPEXEC LMMLIST DATAID(&ID) MEMBER(MEM)\n          IF &LASTCC = 0 THEN SET PREF = &SUBSTR(1:3,&MEM         )\n          ELSE SET PREF = ZZZ\n          SET LEVEL = &SUBSTR(4:8,&MEM        )\n\n          DO WHILE &PREF < CUT\n              ISPEXEC LMMLIST DATAID(&ID) MEMBER(MEM)\n              IF &LASTCC = 0 THEN SET PREF = &SUBSTR(1:3,&MEM         )\n              ELSE SET PREF = ZZZ\n              SET LEVEL = &SUBSTR(4:8,&MEM        )\n              END\n\n          DO WHILE &PREF = CUT\n             ISPEXEC TBSTATS &MEM      +\n                     CDATE(CREATED)    +\n                     ROWCURR(RECCNT)   +\n                     LIBRARY(ISPPROF)\n             SET RECCNT = &RECCNT\n             ISPEXEC TBOPEN &MEM LIBRARY(ISPPROF) NOWRITE\n             ISPEXEC TBSKIP &MEM\n             ISPEXEC TBEND  &MEM\n             ISPEXEC TBADD CUTLIST\n\n             ISPEXEC LMMLIST DATAID(&ID) MEMBER(MEM)\n             IF &LASTCC = 0 THEN SET PREF = &SUBSTR(1:3,&MEM     )\n             ELSE SET PREF = ZZZ\n             SET LEVEL = &SUBSTR(4:8,&MEM        )\n             END\n\n          ISPEXEC LMMLIST DATAID(&ID) OPTION(FREE)\n          ISPEXEC LMCLOSE DATAID(&ID)\n          ISPEXEC LMFREE DATAID(&ID)\n\n          ISPEXEC TBTOP CUTLIST\n          SET PANEL = #CUTD\nCUTLOOP:  +\n          ISPEXEC TBTOP CUTLIST\n          ISPEXEC TBSKIP CUTLIST NUMBER(&ZTDTOP)\n          ISPEXEC TBDISPL CUTLIST PANEL(&PANEL)\n          SET PCC = &LASTCC\n          SET PANEL = #CUTD\n          IF &PCC > 4 THEN DO\n             ISPEXEC TBEND CUTLIST\n             EXIT CODE(1)\n             END\nIF &LSEL  = S  OR &LSEL = B THEN DO\n          ISPEXEC CONTROL DISPLAY SAVE\n          SET BRTITLE = &STR(FILE FOLDER \"&LEVEL\")\n          ALLOC F(CUTTEXT) REUSE NEW UNIT(SYSDA) +\n                LRECL(80) BLKSIZE(6160) RECFM(F B) +\n                DSORG(PS) SP(5 5) TR\n          ISPEXEC LMINIT DATAID(ID) DDNAME(CUTTEXT)\n          ISPEXEC LMOPEN DATAID(&ID) OPTION(OUTPUT)\n          SET TABLE = &STR(CUT&LEVEL)\n          ISPEXEC TBOPEN &TABLE NOWRITE LIBRARY(ISPPROF)\n          ISPEXEC TBTOP &TABLE\n          DO WHILE &RECCNT > 0\n              ISPEXEC TBSKIP &TABLE\n              ISPEXEC LMPUT DATAID(&ID) MODE(INVAR) +\n                  DATALOC(RECORD) DATALEN(80)\n              SET RECCNT = &RECCNT - 1\n              END\n              ISPEXEC TBEND &TABLE\n              ISPEXEC LMCLOSE DATAID(&ID)\n              ISPEXEC BROWSE DATAID(&ID) PANEL(CNADBROW)\n              ISPEXEC LMFREE DATAID(&ID)\n              FREE F(CUTTEXT)\n              IF &PCC = 4 THEN SET PANEL =\n              ISPEXEC CONTROL DISPLAY RESTORE\n              GOTO CUTLOOP\n          END\nIF &LSEL  = D THEN DO\n          ISPEXEC CONTROL DISPLAY SAVE\n          ISPEXEC TBERASE CUT&LEVEL LIBRARY(ISPPROF)\n          ISPEXEC TBDELETE CUTLIST\n          IF &PCC = 4 THEN SET PANEL =\n          ISPEXEC CONTROL DISPLAY RESTORE\n          GOTO CUTLOOP\n          END\n          IF &PCC = 4 THEN SET PANEL =\n          GOTO CUTLOOP\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DATES": {"ttr": 795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00\\x19\\x01\\x00\\x03\\x1f\\x01\\x00\\x03/\\t6\\x00\\x1a\\x007\\x00\\x19\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2000-01-31T00:00:00", "modifydate": "2000-02-01T09:36:19", "lines": 26, "newlines": 55, "modlines": 25, "user": "BC0THOR"}, "text": "PROC 0 DATE()\n   CONTROL MAIN NOMSG NOLIST NOCONLIST NOSYMLIST\nIF &DATE = THEN DO\n   WRITE JULIAN SYNTAX IS: DATES DATE(JYYYYDDD)\n   WRITE GREGORIAN SYNTAX IS: DATES DATE(MMDDYYYY)\n   EXIT\n   END\nELSE DO\n   FREE FILE(SYSIN SYSPRINT DCB1)\n   DEL DATES.SYSIN\n   ATTRIB DCB1 LRECL(80)   BLKSIZE(9440) RECFM(F B) DSORG(PS)\n   ALLOCATE FILE(SYSIN)  DATASET(DATES.SYSIN)     NEW +\n       TRACKS USING(DCB1) SPACE(1 1)\n   OPENFILE SYSIN OUTPUT\n   SET &SYSIN = &STR(&DATE)\n   PUTFILE SYSIN\n   SET &SYSIN = &STR(END)\n   PUTFILE SYSIN\n   CLOSFILE SYSIN\n   FREE FILE(SYSIN)\n   ALLOCATE FILE(SYSIN)   DATASET(DATES.SYSIN) SHR\n   ALLOCATE FILE(SYSPRINT) DATASET(*)\n   CALL LOAD.LOAD(DATES)\n   FREE F(SYSIN SYSPRINT)\n   END\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DEBUG": {"ttr": 797, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x06\\x01\\x00\\x14\\x9f\\x01\\x02\\x13_\\x17(\\x00\\x06\\x00\\x06\\x00\\x06\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-05-28T00:00:00", "modifydate": "2002-05-15T17:28:06", "lines": 6, "newlines": 6, "modlines": 6, "user": "BC0THOR"}, "text": "PROC 0  DEBUG(     )\nIF &DEBUG = DEBUG THEN +\n  CONTROL   FLUSH   MSG   LIST   SYMLIST   CONLIST\nELSE +\n  CONTROL NOFLUSH NOMSG NOLIST NOSYMLIST NOCONLIST\nCONTROL MAIN\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FELE": {"ttr": 1026, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x02\\x13_\\x01\\x02\\x13_\\x17\\x18\\x00<\\x00<\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-15T00:00:00", "modifydate": "2002-05-15T17:18:48", "lines": 60, "newlines": 60, "modlines": 0, "user": "BC0THOR"}, "text": "/*                              REXX                                 */\nPD='          '\nEL = TRANSLATE(ARG(1))\nIF EL\u00ac='' THEN CALL CHECK\nRESTART:\nADDRESS 'TSO'\nCLR\nSAY '***************** FIND ELEMENT ON ENDEVOR ************************'\nSAY '*                                                                *'\nSAY '* THIS IS USED TO FIND INFORMATION ABOUT AN ELEMENT ON ENDEVOR.  *'\nSAY '*   YOU CAN USE A WILDCARD * AT THE END OF THE ELEMENT NAME.     *'\nSAY '*                                                                *'\nSAY '*         THIS DATA IS CURRENT AS OF 00:00 LAST NIGHT.           *'\nSAY '*                                                                *'\nSAY '******************************************************************'\nSAY ' '\nSAY 'ENTER THE ELEMENT BELOW'\nPULL EL\nIF EL \u00ac='' THEN CALL CHECK\nSAY 'NOTHING ENTERED'\nCALL END\nCHECK:\n            IF SUBSTR(EL,LENGTH(EL),1) \u00ac= '*' THEN DO\n                      EL = EL||SUBSTR(PD,1,LENGTH(PD)-LENGTH(EL))\n                      SIGNAL NOMASK\n            END\n            IF SUBSTR(EL,LENGTH(EL),1) = '*' THEN DO\n                      EL = SUBSTR(EL,1,LENGTH(EL)-1)\n                      SIGNAL MASK\n            END\nMASK:\n     ADDRESS 'ISPEXEC'\n       \"SELECT CMD(FREE F(INPUT1 SYSOUT PRINT1 SYSUDUMP)\"\n       \"SELECT CMD(ALLOC F(INPUT1) DA('TEST.ENDEVOR.MASTER') SHR\"\n       \"SELECT CMD(ALLOC F(SYSOUT)  DA(*)\"\n       \"SELECT CMD(ALLOC F(PRINT1)  DA(*)\"\n       \"SELECT CMD(ALLOC F(SYSUDUMP) SYSOUT(A)\"\n       \"SELECT CMD(CLR)\"\n       \"SELECT CMD(CALL 'EMVSP.OUTPUT.LOADLIB(EMVS010P)','\"EL\"'\"\n       \"SELECT CMD(FREE F(INPUT1 SYSOUT PRINT1 SYSUDUMP)\"\n      SIGNAL ANOTHER\nNOMASK:\n     ADDRESS 'ISPEXEC'\n       \"SELECT CMD(FREE F(INPUT1 SYSOUT PRINT1 SYSUDUMP)\"\n       \"SELECT CMD(ALLOC F(INPUT1) DA('TEST.ENDEVOR.MASTER') SHR\"\n       \"SELECT CMD(ALLOC F(SYSOUT)  DA(*)\"\n       \"SELECT CMD(ALLOC F(PRINT1)  DA(*)\"\n       \"SELECT CMD(ALLOC F(SYSUDUMP) SYSOUT(A)\"\n       \"SELECT CMD(CLR)\"\n       \"SELECT CMD(CALL 'EMVSP.OUTPUT.LOADLIB(EMVS009P)','\"EL\"'\"\n       \"SELECT CMD(FREE F(INPUT1 SYSOUT PRINT1 SYSUDUMP)\"\n      SIGNAL ANOTHER\nANOTHER:\nSAY 'ENTER ANOTHER ELEMENT TO SEARCH FOR OR HIT ENTER TO QUIT'\nPULL QUES\nIF QUES \u00ac= ' ' THEN DO\n   EL = QUES\n   CALL CHECK\nEND\nEND:\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FELEREXX": {"ttr": 1028, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "/*                              REXX                                 */-\n\nPD='          '                                                        -\n\nEL = TRANSLATE(ARG(1))                                                 -\n\nIF EL\u00ac='' THEN CALL CHECK                                              -\n\nRESTART:                                                               -\n\nADDRESS 'TSO'                                                          -\n\nCLR                                                                    -\n\nSAY '***************** FIND ELEMENT ON ENDEVOR ************************-\n'\nSAY '*                                                                *-\n'\nSAY '* THIS IS USED TO FIND INFORMATION ABOUT AN ELEMENT ON ENDEVOR.  *-\n'\nSAY '*   YOU CAN USE A WILDCARD * AT THE END OF THE ELEMENT NAME.     *-\n'\nSAY '*                                                                *-\n'\nSAY '*         THIS DATA IS CURRENT AS OF 00:00 LAST NIGHT.           *-\n'\nSAY '*                                                                *-\n'\nSAY '******************************************************************-\n'\nSAY ' '                                                                -\n\nSAY 'ENTER THE ELEMENT BELOW'                                          -\n\nPULL EL                                                                -\n\nIF EL \u00ac='' THEN CALL CHECK                                             -\n\nSAY 'NOTHING ENTERED'                                                  -\n\nCALL END                                                               -\n\nCHECK:                                                                 -\n\n            IF SUBSTR(EL,LENGTH(EL),1) \u00ac= '*' THEN DO                  -\n\n                      EL = EL||SUBSTR(PD,1,LENGTH(PD)-LENGTH(EL))      -\n\n                      SIGNAL NOMASK                                    -\n\n            END                                                        -\n\n            IF SUBSTR(EL,LENGTH(EL),1) = '*' THEN DO                   -\n\n                      EL = SUBSTR(EL,1,LENGTH(EL)-1)                   -\n\n                      SIGNAL MASK                                      -\n\n            END                                                        -\n\nMASK:                                                                  -\n\n     ADDRESS 'ISPEXEC'                                                 -\n\n       \"SELECT CMD(FREE F(INPUT1 SYSOUT PRINT1 SYSUDUMP)\"              -\n\n       \"SELECT CMD(ALLOC F(INPUT1) DA('TEST.ENDEVOR.MASTER') SHR\"      -\n\n       \"SELECT CMD(ALLOC F(SYSOUT)  DA(*)\"                             -\n\n       \"SELECT CMD(ALLOC F(PRINT1)  DA(*)\"                             -\n\n       \"SELECT CMD(ALLOC F(SYSUDUMP) SYSOUT(A)\"                        -\n\n       \"SELECT CMD(CLR)\"                                               -\n\n       \"SELECT CMD(CALL 'EMVSP.OUTPUT.LOADLIB(EMVS010P)','\"EL\"'\"       -\n\n       \"SELECT CMD(FREE F(INPUT1 SYSOUT PRINT1 SYSUDUMP)\"              -\n\n      SIGNAL ANOTHER                                                   -\n\nNOMASK:                                                                -\n\n     ADDRESS 'ISPEXEC'                                                 -\n\n       \"SELECT CMD(FREE F(INPUT1 SYSOUT PRINT1 SYSUDUMP)\"              -\n\n       \"SELECT CMD(ALLOC F(INPUT1) DA('TEST.ENDEVOR.MASTER') SHR\"      -\n\n       \"SELECT CMD(ALLOC F(SYSOUT)  DA(*)\"                             -\n\n       \"SELECT CMD(ALLOC F(PRINT1)  DA(*)\"                             -\n\n       \"SELECT CMD(ALLOC F(SYSUDUMP) SYSOUT(A)\"                        -\n\n       \"SELECT CMD(CLR)\"                                               -\n\n       \"SELECT CMD(CALL 'EMVSP.OUTPUT.LOADLIB(EMVS009P)','\"EL\"'\"       -\n\n       \"SELECT CMD(FREE F(INPUT1 SYSOUT PRINT1 SYSUDUMP)\"              -\n\n      SIGNAL ANOTHER                                                   -\n\nANOTHER:                                                               -\n\nSAY 'ENTER ANOTHER ELEMENT TO SEARCH FOR OR HIT ENTER TO QUIT'         -\n\nPULL QUES                                                              -\n\nIF QUES \u00ac= ' ' THEN DO                                                 -\n\n   EL = QUES                                                           -\n\n   CALL CHECK                                                          -\n\nEND                                                                    -\n\nEND:                                                                   -\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HCD": {"ttr": 1031, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x16\\x00\\x99\\x08?\\x00\\x99\\x08?\\x13\\x19\\x00\\r\\x00\\x1c\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-03-24T00:00:00", "modifydate": "1999-03-24T13:19:16", "lines": 13, "newlines": 28, "modlines": 0, "user": "BC0THOR"}, "text": "PROC 0 DEBUG( )\n/*******************************************************************/\n/*    THIS CLIST ALLOWS ACCESS TO \"HCD\" USING LIBDEF               */\n/*******************************************************************/\nIF &DEBUG = DEBUG THEN +\n  CONTROL LIST CONLIST SYMLIST MSG NOFLUSH\nELSE +\n  CONTROL NOLIST NOCONLIST NOSYMLIST NOMSG NOFLUSH\nISPEXEC LIBDEF ISPLLIB EXCLDATA ID('SYS1.SCBDHENU' 'SYS1.NUCLEUS')\nCBDCHCD\nISPEXEC LIBDEF ISPLLIB\nCONTROL NOFLUSH\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "IPCSINIT": {"ttr": 1033, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x009\\x00\\x98'\\x9f\\x00\\x98'\\x9f\\x16W\\x00\\x0f\\x00-\\x00\\x01\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1998-10-06T00:00:00", "modifydate": "1998-10-06T16:57:39", "lines": 15, "newlines": 45, "modlines": 1, "user": "BC0THOR"}, "text": "PROC 0\n  CONTROL LIST CONLIST SYMLIST MSG NOFLUSH\nFREE  F(SYSPROC)\nALLOC F(SYSPROC) DA('WRKBNCH.ISPF.CLIST' +\n                    'SYS1.SISPEXEC'       +\n                    'SYS1.SISPCLIB'       +\n                    'SYS1.CLIST') SHR\nFREE F(IPCSDDIR IPCSPRNT IPCSATTR IPCSPARM)\nALLOC F(IPCSDDIR) DA(TST.IPCSDDIR)\nDEL IPCSPRNT\nATTR IPCSATTR RECFM(V B) LRECL(137) BLKSIZE(23476)\nALLOC F(IPCSPRNT) DA(IPCSPRNT) UNIT(DISK) SPACE(5 1) CYLINDERS -\n   USING(IPCSATTR)\nALLOC F(IPCSPARM) DA('WRKBNCH.ISPF.IPCS.PARMLIB') SHR\nIPCS\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "IPLINFO": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00%\\x00\\x99\\x10_\\x00\\x99\\x10_\\x11\\x01\\x01[\\x01[\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-04-15T00:00:00", "modifydate": "1999-04-15T11:01:25", "lines": 347, "newlines": 347, "modlines": 0, "user": "BC0THOR"}, "text": "/* REXX */\n/*                                       */\n/* AUTHOR: Mark Zelden                   */\n/*                                       */\n/* Trace ?r */\n/*********************************************************************/\n/* DISPLAY SYSTEM INFORMATION ON TERMINAL                            */\n/*********************************************************************/\nclr\nCall RDATE TODAY                             /* call RDATE subroutine*/\nDAY      = Word(RESULT,3)                    /* weekday from RDATE   */\nDATE     = Substr(RESULT,1,10)               /* date as MM/DD/YYYY   */\nJUL      = Substr(RESULT,7,8)                /* date as YYYY.DDD     */\n/*                                                                   */\nCVT      = C2d(Storage(10,4))                /* point to CVT         */\n/*                                                                   */\nJESCT    = C2d(Storage(D2x(CVT + 296),4))    /* point to JESCT       */\n/*                                                                   */\nCVTGDA   = C2d(Storage(D2x(CVT + 560),4))    /* point to GDA         */\nGDAPVTSZ = C2d(Storage(D2x(CVTGDA + 164),4)) /* point to MAX PVT<16M */\nGDAPVTSZ = GDAPVTSZ/1024                     /* convert to kbytes    */\n/*                                                                   */\nRESUCB   = C2d(Storage(D2x(JESCT + 4),4))    /* point to SYSRES UCB  */\nJESNAME  = Storage(D2x(JESCT + 28),4)        /* point to JESNAME     */\n/*                                                                   */\nIPLADDR  = Storage(D2x(RESUCB + 13),3)       /* point to IPL address */\nIPLVOL   = Storage(D2x(RESUCB + 28),6)       /* point to IPL volume  */\n/*                                                                   */\nCVTEXT2  = C2d(Storage(D2x(CVT + 328),4))    /* point to CVTEXT2     */\nCVTATCVT = C2d(Storage(D2x(CVTEXT2 + 65),3)) /* point to VTAM AVT    */\nISTATCVT = C2d(Storage(D2x(CVTATCVT + 0),4)) /* point to VTAM CVT    */\nATCVTLVL = Storage(D2x(ISTATCVT + 0),8)      /* VTAM Rel Lvl VOVRP   */\nVTAMVER  = Substr(ATCVTLVL,3,1)              /* VTAM Version   V     */\nVTAMREL  = Substr(ATCVTLVL,4,1)              /* VTAM Release    R    */\nVTAMMOD  = Substr(ATCVTLVL,5,1)              /* VTAM Mod Lvl     P   */\nIf VTAMMOD = ' ' then VTAMLEV = 'V'|| VTAMVER || 'R' || VTAMREL\n   else VTAMLEV = 'V' || VTAMVER || 'R' || VTAMREL || 'M' || VTAMMOD\n/*                                                                   */\nAMCBS    = C2d(Storage(D2x(CVT + 256),4))    /* point to AMCBS       */\nACB      = C2d(Storage(D2x(AMCBS + 8),4))    /* point to ACB         */\nCAXWA    = C2d(Storage(D2x(ACB + 64),4))     /* point to CAXWA       */\nMCATDSN  = Storage(D2x(CAXWA + 52),44)       /* master catalog dsn   */\nMCATDSN  = Strip(MCATDSN,T)                  /* remove trailing blnks*/\nMCATUCB  = C2d(Storage(D2x(CAXWA + 28),4))   /* point to mcat UCB    */\nMCATVOL  = Storage(D2x(MCATUCB + 28),6)      /* master catalog VOLSER*/\n/*                                                                   */\nSMCA     = Storage(D2x(CVT + 196),4)         /* point to SMCA        */\nSMCA     = Bitand(SMCA,'7FFFFFFF'x)          /* zero high order bit  */\nSMCA     = C2d(SMCA)                         /* convert to decimal   */\n/*                                                                   */\n/*********************************************************************/\n/*  The IPL date is stored in packed decimal format - so to make     */\n/*  the date printable, it needs to be converted back to hex and     */\n/*  the packed sign needs to be removed.                             */\n/*********************************************************************/\nIPLTIME  = C2d(Storage(D2x(SMCA + 336),4))   /* IPL Time - binary    */\nIPLDATE  = C2d(Storage(D2x(SMCA + 340),4))   /* IPL Date - 0CYYDDDF  */\nIf IPLDATE  >= 16777231 then do              /*          is C = 1 ?  */\n  IPLDATE  = D2x(IPLDATE)                    /* convert back to hex  */\n  IPLDATE  = Substr(IPLDATE,2,5)             /* keep YYDDD           */\n  IPLDATE  = '20'IPLDATE                     /* use 21st century date*/\nEnd\nElse do\n  IPLDATE  = D2x(IPLDATE)                    /* convert back to hex  */\n  IPLDATE  = Left(IPLDATE,5)                 /* keep YYDDD           */\n  IPLDATE  = '19'IPLDATE                     /* use 20th century date*/\nEnd\nIPLYYYY  = Substr(IPLDATE,1,4)               /* YYYY portion of date */\nIPLDDD   = Substr(IPLDATE,5,3)               /* DDD  portion of date */\nCall RDATE IPLYYYY IPLDDD                    /* call RDATE subroutine*/\nIPLDAY   = Word(RESULT,3)                    /* weekday from RDATE   */\nIPLDATE  = Substr(RESULT,1,10)               /* date as MM/DD/YYYY   */\nIPLJUL   = Substr(RESULT,7,8)                /* date as YYYY.DDD     */\nIPLTIME  = IPLTIME / 100                     /* remove hundreths     */\nHH       = IPLTIME % 3600                    /* IPL hour             */\nMM       = (IPLTIME - (3600 * HH)) % 60      /* IPL minute           */\nSS       = (IPLTIME - (3600 * HH)  - (60 * MM)) % 1  /* IPL seconds  */\nHH       = Right(HH,2,'0')                   /* ensure 2 digit HH    */\nMM       = Right(MM,2,'0')                   /* ensure 2 digit MM    */\nSS       = Right(SS,2,'0')                   /* ensure 2 digit SS    */\nIPLTIME  = HH':'MM':'SS                      /* time in HH:MM format */\n/*                                                                   */\nASMVT    = C2d(Storage(D2x(CVT + 704),4))    /* point to ASMVT       */\nCLPABYTE = Storage(D2x(ASMVT + 1),1)         /* point to CLPA byte   */\nCHKCLPA  = Bitand(CLPABYTE,'8'x)             /* check for B'1000'    */\nCHKCLPA  = C2d(CHKCLPA)                      /* convert to decimal   */\nIf CHKCLPA < 8 then IPLCLPA = '(with CLPA)'  /* bit off - CLPA       */\n  Else IPLCLPA = '(without CLPA)'            /* bit on  - no CLPA    */\n/*                                                                   */\nSMFNAME  = Storage(D2x(SMCA + 16),4)         /* point to SMF name    */\n/*                                                                   */\nPRODNAME = Storage(D2x(CVT - 40),7)          /* point to mvs version */\nFMIDNUM  = Storage(D2x(CVT - 32),7)          /* point to fmid        */\n/*                                                                   */\nGRSNAME  = Storage(D2x(CVT + 340),8)         /* point to system name */\nGRSNAME  = Strip(GRSNAME,T)                  /* del trailing blanks  */\n/*                                                                   */\nSTORSIZE = C2d(Storage(D2x(CVT + 856),4))    /* point to storage size*/\nSTORSIZE = STORSIZE/1024                     /* convert to Megabytes */\n/*                                                                   */\nRCE      = C2d(Storage(D2x(CVT + 1168),4))   /* point to RCE         */\nESTOR    = C2d(Storage(D2x(RCE + 160),4))    /* point to ESTOR frames*/\nESTOR    = ESTOR*4/1024                      /* convert to Megabytes */\n/*********************************************************************/\n/*  The CPU model is stored in packed decimal format with no sign,   */\n/*  so to make the model printable, it needs to be converted back    */\n/*  to hex.                                                          */\n/*********************************************************************/\nMODEL    = C2d(Storage(D2x(CVT - 6),2))      /* point to cpu model   */\nMODEL    = D2x(MODEL)                        /* convert back to hex  */\n/*                                                                   */\nCSD      = C2d(Storage(D2x(CVT + 660),4))    /* point to CSD         */\nNUMCPU   = C2d(Storage(D2x(CSD + 10),2))     /* point to # of CPUS   */\n/*                                                                   */\n/*********************************************************************/\n/*   Write  information to terminal.                                 */\n/*********************************************************************/\nSay '***********************************************************' || ,\n    '******************'\nSay '***************************  SYSTEM INFORMATION  **********' ||,\n    '******************'\nSay '***********************************************************' || ,\n    '******************'\nSay ''\nSay 'Today is 'DAY DATE '('JUL').'\nSay 'The last IPL was 'IPLDAY IPLDATE '('IPLJUL')' ,\n     'at 'IPLTIME IPLCLPA'.'\nSay 'The system IPL address was 'IPLADDR' ('IPLVOL').'\nIf Substr(PRODNAME,3,1) > 3 then do\n  ECVT     = C2d(Storage(D2x(CVT + 140),4))  /* point to CVTECVT     */\n  IPLPARM  = Storage(D2x(ECVT+160),8)        /* point to LOAD PARM   */\n  IPLPARM  = Strip(IPLPARM,T)                /* del trailing blanks  */\n  SEPPARM  = Substr(IPLPARM,1,4) Substr(IPLPARM,5,2),\n             Substr(IPLPARM,7,1) Substr(IPLPARM,8,1)\n  Say 'The IPL LOAD PARM used was 'IPLPARM' ('SEPPARM').'\nEnd\nIf Substr(PRODNAME,3,1) < 5 then do\n  IOCON    = Storage(D2x(CVTEXT2 + 6),2)       /* HCD IODFxx or MVSCP*/\n                                               /* IOCONFIG ID=xx     */\n  Say 'The currently active IOCONFIG or HCD IODF is 'IOCON'.'\nEnd\nElse do\n  CVTIXAVL = C2d(Storage(D2x(CVT+124),4))    /* point to IOCM        */\n  IOCIOVTP = C2d(Storage(D2x(CVTIXAVL+208),4)) /* pt to IOS Vect Tbl */\n  IODF     = Storage(D2X(IOCIOVTP+288),11)   /* point to IODF name   */\n  CONFIGID = Storage(D2X(IOCIOVTP+348),8)    /* point to CONFIG      */\n  EDT      = Storage(D2X(IOCIOVTP+360),2)    /* point to EDT         */\n  IOPROC   = Storage(D2X(IOCIOVTP+380),8)    /* point to IODF Proc   */\n  IODATE   = Storage(D2X(IOCIOVTP+412),8)    /* point to IODF date   */\n  IOTIME   = Storage(D2X(IOCIOVTP+420),8)    /* point to IODF time   */\n  IODESC   = Storage(D2X(IOCIOVTP+428),16)   /* point to IODF desc   */\n  Say 'The currently active IODF data set is 'IODF'.'\n  Say '  Configuration ID =' CONFIGID ' EDT ID =' EDT\n  Say '  TOKEN: Processor  Date      Time      Description'\n  Say '         'IOPROC'   'IODATE'  'IOTIME'  'IODESC\nEnd\nSay 'The Master Catalog is 'MCATDSN' on 'MCATVOL'.'\nSay ''\nIf Substr(PRODNAME,3,1) < 6 then\n  Say 'The MVS version is 'PRODNAME' - FMID 'FMIDNUM'.'\nElse do\n  PRODNAME = Storage(D2x(ECVT+496),16)       /* point to product name*/\n  PRODNAME = Strip(PRODNAME,T)               /* del trailing blanks  */\n  VER      = Storage(D2x(ECVT+512),2)        /* point to version     */\n  REL      = Storage(D2x(ECVT+514),2)        /* point to release     */\n  MOD      = Storage(D2x(ECVT+516),2)        /* point to mod level   */\n  VRM      = VER'.'REL'.'MOD\n  Say 'The OS version is 'PRODNAME VRM' - FMID 'FMIDNUM'.'\nEnd\nSay 'The VTAM Level is 'VTAMLEV'.'\nSay 'The primary job entry subsystem is 'JESNAME'.'\nSay 'The GRS system id is 'GRSNAME'. The SMF system id is 'SMFNAME'.'\n  Say 'The real storage size is 'Format(STORSIZE,,0)'M.'\nIf ESTOR > 0 then do\n  Say 'The expanded storage size is 'ESTOR'M.'\nEnd\nElse\n  Say 'The system has no expanded storage.'\nSay 'The maximum private area size below the line is 'gdapvtsz'K.'\nSay ''\nSay 'The CPU model number is 'MODEL'.'\nSay 'The number of online CPUs is 'NUMCPU'.'\n/*                                                                   */\nPCCAVT    = C2d(Storage(D2x(CVT + 764),4))   /* point to PCCA vect tb*/\n/*                                                                   */\nCPNUM     = 0\nFOUNDCPUS = 0\nDo until FOUNDCPUS = NUMCPU\nPCCA = C2d(Storage(D2x(PCCAVT + CPNUM*4),4)) /* point to PCCA        */\n  If PCCA \u00ac= 0 then do\n    CPUID   = Storage(D2x(PCCA + 6),10)      /* point to CPUID       */\n    IDSHORT = Substr(CPUID,2,5)\n    Say 'The CPU serial number for CPU 'CPNUM' is 'CPUID' ('IDSHORT').'\n    FOUNDCPUS = FOUNDCPUS + 1\n  End\nCPNUM = CPNUM + 1\nEnd  /* do until  */\nSay ''\nExit\n/* rexx */\nRDATE:\n/*                           */\n/* AUTHOR: MARK ZELDEN       */\n/*  3D Business solutions    */\n/*                           */\n/************************************************/\n/* Convert MM DD YYYY or YYYY DDD to standard   */\n/* date output that inclues the day of week and */\n/* the century date. A parm of \"TODAY\" can also */\n/* be passed to the date conversion routine.    */\n/* The output format is always as follows:      */\n/*      MM/DD/YYYY.JJJ CCCCC WEEKDAY            */\n/* The above value will be put in the special   */\n/* REXX variable \"RESULT\"                       */\n/* example: CALL RDATE TODAY                    */\n/* example: CALL RDATE 1996 300                 */\n/* example: CALL RDATE 10 26 1996               */\n/* result:  10/26/1996.300 35363 Saturday       */\n/************************************************/\narg P1 P2 P3\n\nJULTBL = '000031059090120151181212243273304334'\nDAY.0 = 'Sunday'\nDAY.1 = 'Monday'\nDAY.2 = 'Tuesday'\nDAY.3 = 'Wednesday'\nDAY.4 = 'Thursday'\nDAY.5 = 'Friday'\nDAY.6 = 'Saturday'\n\nSelect\n  When P1 = 'TODAY' then do\n    P1 = Substr(date('s'),5,2)\n    P2 = Substr(date('s'),7,2)\n    P3 = Substr(date('s'),1,4)\n    call CONVERT_MDY\n    call THE_END\n  end\n  When P3 = '' then do\n    call CONVERT_JDATE\n    call DOUBLE_CHECK\n    call THE_END\n  end\n  otherwise do\n    call CONVERT_MDY\n    call DOUBLE_CHECK\n    call THE_END\n  end\nend /* end select */\n/* say RDATE_VAL  */\nreturn RDATE_VAL\n/**********************************************/\n/*  E N D    O F   M A I N L I N E   C O D E  */\n/**********************************************/\n\nCONVERT_MDY:\nif P1<1 | P1>12 then do\n  say 'Invalid month passed to date routine'\n  exit 12\nend\nif P2<1 | P2>31 then do\n  say 'Invalid day passed to date routine'\n  exit 12\nend\nif (P1=4 | P1=6 | P1=9 | P1=11) & P2>30 then do\n  say 'Invalid day passed to date routine'\n  exit 12\nend\nif P3<1900 | P3>2099 then do\n  say 'Invalid year passed to date routine'\n  exit 12\nend\nBASE   = Substr(JULTBL,((P1-1)*3)+1,3)\nif (P3//4=0 & P3\u00ac=1900) then LEAP= 1\n  else LEAP = 0\nif P1 > 2 then BASE = BASE+LEAP\nJJJ = BASE + P2\n\nMM   = P1\nDD   = P2\nYYYY = P3\nreturn\n\nCONVERT_JDATE:\nif P1<1900 | P1>2099 then do\n  say 'Invalid year passed to date routine'\n  exit 12\nend\nif P2<1 | P2>366 then do\n  say 'Invalid Julian date passed to date routine'\n  exit 12\nend\nif (P1//4=0 & P1\u00ac=1900) then LEAP= 1\n  else LEAP = 0\nADJ1 = 0\nADJ2 = 0\nDo MM = 1 to 11\n   VAL1 = Substr(JULTBL,((MM-1)*3)+1,3)\n   VAL2 = Substr(JULTBL,((MM-1)*3)+4,3)\n   if MM >=2 then ADJ2 = LEAP\n   if MM >=3 then ADJ1 = LEAP\n   if P2 > VAL1+ADJ1 & P2 <= VAL2+ADJ2 then do\n        DD = P2-VAL1-ADJ1\n        MATCH = 'Y'\n        leave\n   end\nend\nif MATCH \u00ac= 'Y' then do\n    MM = 12\n    DD = P2-334-LEAP\nend\n\nYYYY = P1\nJJJ  = P2\nreturn\n\nDOUBLE_CHECK:\nif MM = 2 then do\n   if DD > 28 & LEAP = 0 then do\n     say 'Invalid day passed to date routine'\n     exit 12\n   end\n   if DD > 29 & LEAP = 1 then do\n     say 'Invalid day passed to date routine'\n     exit 12\n   end\nend\nif LEAP = 0 & JJJ > 365 then do\n  say 'Invalid Julian date passed to date routine'\n  exit 12\nend\nreturn\n\nTHE_END:\nYRC = YYYY-1900\nCCCCC = (YRC*365) +(YRC+3)%4 + JJJ\nif YYYY > 1900 then CCCCC = CCCCC-1\nINDEX   = CCCCC//7  /* index to DAY stem */\nWEEKDAY =  DAY.INDEX\n\nDD      = Right(DD,2,'0')\nMM      = Right(MM,2,'0')\nCCCCC   = Right(CCCCC,5,'0')\nJJJ     = Right(JJJ,3,'0')\n\nRDATE_VAL = MM||'/'||DD||'/'||YYYY||'.'||JJJ||' '||CCCCC||' '||WEEKDAY\nreturn\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ISPALOC": {"ttr": 1281, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x001\\x00\\x98'O\\x00\\x98'O\\x12\\x16\\x00\\x17\\x00\\x12\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1998-10-01T00:00:00", "modifydate": "1998-10-01T12:16:31", "lines": 23, "newlines": 18, "modlines": 0, "user": "BC0THOR"}, "text": "CONTROL LIST MSG\nFREE FI(ISPTABL)\nALLOCATE FI(ISPTABL) SHR DA(ISPPROF)\nFREE FI(ISPTLIB)\nALLOCATE FI(ISPTLIB) SHR DA(ISPPROF 'SYS1.ISRTLIB' 'SYS1.ISPTLIB')\nFREE FI(ISPMLIB)\nALLOCATE FI(ISPMLIB) SHR DA('SYS1.ISRMLIB' 'SYS1.ISPMLIB')\nFREE FI(ISPPLIB)\nALLOCATE FI(ISPPLIB) SHR DA('SYS1.ISRPLIB' 'SYS1.ISPPLIB')\nFREE FI(ISPSLIB)\nALLOCATE FI(ISPSLIB) SHR DA('SYS1.ISRSLIB' 'SYS1.ISPSLIB')\nFREE FI(ISPLLIB)\nFREE FI(ISPCTL0)\nALLOCATE FI(ISPCTL0) NEW SP(1 1) CYL UNIT(VIO) +\n         LRECL(80) DSORG(PS) RECFM(F B) BLKSIZE(23440)\nFREE FI(ISPCTL1)\nALLOCATE FI(ISPCTL1) NEW SP(1 1) CYL UNIT(VIO) +\n         LRECL(80) DSORG(PS) RECFM(F B) BLKSIZE(23440)\nFREE FI(ISPCTL2)\nALLOCATE FI(ISPCTL2) NEW SP(1 1) CYL UNIT(VIO) +\n         LRECL(80) DSORG(PS) RECFM(F B) BLKSIZE(23440)\nFREE FI(SYSPROC)\nALLOCATE FI(SYSPROC) DA(PDS.CLIST) SHR\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NEWXREF": {"ttr": 1283, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x01\\x00\\x99\\x10\\x9f\\x01\\x02\\x08_\\x11V\\x00~\\x00|\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1999-04-19T00:00:00", "modifydate": "2002-03-26T11:56:01", "lines": 126, "newlines": 124, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: ??????????????                                         */\n/*   AUTHOR:  UNKNOWN                CREATION DATE: 04/19/1991       */\n/*   TYPICAL USER(S): USERGN USERO5 BC0JASS USERA2 USERCB USERD1     */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO DATE DEPENDENCIES                            */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*01/22/1996 USER87  UNKNOWN                                         */\n/*08/18/1998 BC0THOR ADDED THIS COMMENT BLOCK                        */\n/*                                                                   */\n/*********************************************************************/\nPROC 0\n/*      CALL 'TEST.LOAD(CLISTMON)' 'XREF    '  */\nCONTROL NOFLUSH NOMSG NOLIST\nFREEALL\nSET MSG = &MSG\nSET P =\nSET &P = &STR((+1))\nFREE FI(XREF)\nFREE FI(XREF1)\nFREE FI(SEQIN) DA('BC0THOR.DEL.XREF.OUTPUT')\nDEL &SYSUID..XREF\nDEL &SYSUID..XREF1\nSET CNTR = 4\nE1:SET &DSN =\nISPEXEC CONTROL DISPLAY REFRESH\nISPEXEC DISPLAY PANEL(XREF1) MSG(&MSG)\nVPUT (&GROUPID &NAME) PROFILE\nIF &DSN =  THEN GOTO E1\nIF &DSN = QUIT THEN GOTO EXIT\nSET LEN = &LENGTH(&DSN)\nALLOC FI(XREF) DA(&SYSUID..XREF) DELETE UNIT(DISK) SPACE(5,1) -\n                       TRACK RECFM(F B) LRECL(80) BLKSIZE(80)\nOPENFILE XREF OUT\nSET &XREF = &STR(&DSN)\nPUTFILE XREF\nCLOSFILE XREF\nSET &H =\nISPEXEC CONTROL DISPLAY REFRESH\nISPEXEC DISPLAY PANEL(XREF2) MSG(&MSG)\nIF &H = 2 THEN DO\n  ISPEXEC CONTROL DISPLAY REFRESH\n  ISPEXEC DISPLAY PANEL(XREF3) MSG(&MSG)\n  DEL &SYSUID..XREF1\n  ALLOC DA(&SYSUID..XREF1) NEW UNIT(DISK) SPACE(5,5) TRACK -\n                           RECFM(F B) LRECL(80) BLKSIZE(80)\n  IF &LASTCC\u00ac= 0 THEN DO\n       CLR\n       WRITE\n       WRITE\n       WRITE\n       WRITE   INTERNAL ERROR AT POINT 1\n       WRITE   FOR &SYSUID..&SYSUID..XREF1.\n       WRITE\n       WRITE   UNCATALOG THIS DATASET AND\n       WRITE   EXECUTE UTILITY AGAIN OR\n       WRITE   CONTACT JCL PROGRAMMER.\n       WRITE\n       WRITE\n       GOTO EXIT\n  END\n  ALLOC FI(SEQOUT) DA(&SYSUID..XREF1) SHR\n  IF &LASTCC\u00ac= 0 THEN DO\n       CLR\n       WRITE\n       WRITE\n       WRITE\n       WRITE   INTERNAL ERROR AT POINT 2\n       WRITE   FOR &SYSUID..&SYSUID..XREF1\n       WRITE   CONTACT JCL PROGRAMMER\n       WRITE\n       WRITE\n       GOTO EXIT\n  END\n  ALLOC FI(SEQIN) DA('BC0THOR.DEL.XREF.OUTPUT') SHR\n  IF &LASTCC\u00ac= 0 THEN DO\n       CLR\n       WRITE\n       WRITE\n       WRITE\n       WRITE   INTERNAL ERROR AT POINT 3\n       WRITE   FOR PROD.XREF\n       WRITE   CONTACT JCL PROGRAMMER\n       WRITE\n       WRITE\n       GOTO EXIT\n  END\n  ALLOC FI(CONTROL) DA(&SYSUID..XREF) DELETE\n  IF &LASTCC\u00ac= 0 THEN DO\n       CLR\n       WRITE\n       WRITE\n       WRITE\n       WRITE   INTERNAL ERROR AT POINT 4\n       WRITE   FOR &SYSUID..&SYSUID..XREF\n       WRITE   CONTACT JCL PROGRAMMER\n       WRITE\n       WRITE\n       GOTO EXIT\n  END\n  CALL 'BC0THOR.LOAD.LOAD(RUX7005P)'\n  ISPEXEC BROWSE DATASET(&SYSUID..XREF1)\n  FREE FI(XREF)\n  FREE FI(XREF1)\n  DEL &SYSUID..XREF\n  DEL &SYSUID..XREF1\n  GOTO EXIT\nEND\nIF &H = 1 THEN DO\n ISPEXEC FTOPEN TEMP\n ISPEXEC FTINCL XREF2\n ISPEXEC FTCLOSE\n ISPEXEC VGET ZTEMPF\n ISPEXEC CONTROL DISPLAY LINE START(1)\nCONTROL   MSG\n SUBMIT '&ZTEMPF.'\nCONTROL NOMSG\n SET &MSG =\n GOTO EXIT\nEND\nIF &H = X THEN GOTO EXIT\nEXIT: FREEALL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "OWNER": {"ttr": 1286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x007\\x01\\x00\"/\\x01\\x02\\x08_\\x11W\\x00%\\x00$\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-08-09T00:00:00", "modifydate": "2002-03-26T11:57:37", "lines": 37, "newlines": 36, "modlines": 0, "user": "BC0THOR"}, "text": "/*  THIS IS THE 'ISD ONCALL' CLIST\nPROC 1 PROCNAME\nCONTROL MSG LIST FLUSH CONLIST SYMLIST\n/*CONTROL NOMSG NOLIST NOFLUSH\nSET &MODE = 'T'\nFREE F(INPUT1,INPUT2,INPUT3,INPUT4,INPUT5,INPUT6,FINCALL,MICSCALL)\nFREE F(SYSOUT SYSUDUMP)\nALLOC F(FINCALL) DA('TEST.TST.FINANCE.JOBS(ONCALL)') SHR\nALLOC F(MICSCALL) DA('MICS.PRD.C6.LOCALMOD.CNTL(MICSCALL)') SHR\nALLOC F(INPUT1)  DA('PROD.OWNER.DATA') SHR\nALLOC F(INPUT2)  DA('SYS1.PPOPTION(TSOUSERS)') SHR\nALLOC F(INPUT3)  DA('CLAIMS.OWNER.CNTL(CROSLIST)' -\n                    'TEST.TST.PPR.OWNER.CNTL(PPRLIST)' -\n                    'TEST.TST.CHIPS.OWNER.CNTL(CHIPLIST)') SHR\nALLOC F(INPUT4)  DA('CLAIMS.OWNER.CNTL(PHONENOS)' -\n                    'TEST.TST.PPR.OWNER.CNTL(PHONENOS)' -\n                    'TEST.TST.CHIPS.OWNER.CNTL(PHONENOS)') SHR\nALLOC F(INPUT5)  DA('CLAIMS.OWNER.CNTL(EXCEPT)' -\n                    'TEST.TST.PPR.OWNER.CNTL(EXCEPT)' -\n                    'TEST.TST.CHIPS.OWNER.CNTL(EXCEPT)') SHR\nALLOC F(INPUT6)  DA('CLAIMS.OWNER.CNTL(SUPER)' -\n                    'TEST.TST.PPR.OWNER.CNTL(SUPER)' -\n                    'TEST.TST.CHIPS.OWNER.CNTL(SUPER)') SHR\nALLOC F(SYSOUT)  DA(*)\nALLOC F(SYSUDUMP) SYSOUT(A)\nIF &LENGTH(&PROCNAME) = 7 THEN SET &PROCNAME=&STR(&PROCNAME )\nIF &LENGTH(&PROCNAME) = 6 THEN SET &PROCNAME=&STR(&PROCNAME  )\nIF &LENGTH(&PROCNAME) = 5 THEN SET &PROCNAME=&STR(&PROCNAME   )\nIF &LENGTH(&PROCNAME) = 4 THEN SET &PROCNAME=&STR(&PROCNAME    )\nIF &LENGTH(&PROCNAME) = 3 THEN SET &PROCNAME=&STR(&PROCNAME     )\nIF &LENGTH(&PROCNAME) = 2 THEN SET &PROCNAME=&STR(&PROCNAME      )\nIF &LENGTH(&PROCNAME) = 1 THEN SET &PROCNAME=&STR(&PROCNAME       )\nCLR\nCALL 'EMVSP.OUTPUT.LOADLIB(RUX2027P)','T&PROCNAME.'\nFREE F(INPUT1 INPUT2 INPUT3 INPUT4 INPUT5 INPUT6 SYSOUT SYSUDUMP -\n                             FINCALL MICSCALL)\nEXIT\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PST": {"ttr": 1288, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x08\\x00\\x14\\x00\\x97\\x05\\x1f\\x00\\x98'O\\x11X\\x00\\xb4\\x00\\xb4\\x00\\xb4\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.08", "flags": 0, "createdate": "1997-02-20T00:00:00", "modifydate": "1998-10-01T11:58:14", "lines": 180, "newlines": 180, "modlines": 180, "user": "BC0THOR"}, "text": "          ISREDIT MACRO (LEVEL REST) NOPROCESS\n\n          IF &NRSTR(&REST) \u00ac= THEN +\n             DO\n             SET ZEDSMSG = &NRSTR(INVALID OPERAND)\n             SET ZEDLMSG = &NRSTR(ONLY A FILE NAME OF UP TO 5 +\n             ALPHANUMERIC BYTES IS VALID)\n             ISPEXEC SETMSG MSG(ISRZ001)\n             EXIT CODE(12)\n             END\n\n          IF &NRSTR(&LEVEL) = THEN +\n             DO\n             SET LEVEL = LIST\n             END\n\n          IF &NRSTR(&LEVEL) = LIST THEN +\n             DO\n             GOTO PASTLIST\n             END\n\n          IF &NRSTR(&LEVEL) = HELP THEN +\n             DO\n             ISPEXEC CONTROL DISPLAY SAVE\n             ISPEXEC SELECT PGM(ISPTUTOR) PARM(#PASTE)\n             ISPEXEC CONTROL DISPLAY RESTORE\n             EXIT CODE(1)\n             END\n\n          IF &DATATYPE(&NRSTR(&LEVEL)) = NUM THEN +\n                 SET LEVEL = &LEVEL\n          IF &LENGTH(&NRSTR(&LEVEL)) > 5 THEN +\n             DO\n             SET ZEDSMSG = &NRSTR(INVALID LEVEL)\n             SET ZEDLMSG = &NRSTR(ONLY A FILE NAME OF LESS THAN 6 +\n             BYTES IS VALID)\n             ISPEXEC SETMSG MSG(ISRZ001)\n             EXIT CODE(12)\n             END\n\n          CONTROL NOFLUSH NOMSG\n          ISREDIT PROCESS DEST\n          SET LCC = &LASTCC\n          CONTROL FLUSH MSG\n          IF &LCC > 0 THEN +\n             DO\n             SET ZEDSMSG = &NRSTR(PASTE CMD PENDING)\n             SET ZEDLMSG = &NRSTR(USING \"A\" OR \"B\" LINE COMMANDS +\n             YOU MUST SPECIFY THE DESTINATION OF THE PASTE)\n             ISPEXEC SETMSG MSG(ISRZ001)\n             EXIT CODE(12)\n             END\n\n          ISREDIT (LINE) = LINENUM .ZDEST\n\n          SET TABLE = &NRSTR(CUT&LEVEL)\n\n          ISPEXEC TBSTATS &TABLE STATUS1(ST1) LIBRARY(ISPPROF)\n          SET LCC = &LASTCC\n          IF &ST1 \u00ac= 1 THEN +\n             DO\n             SET ZEDSMSG = &NRSTR(DATA NOT CUT)\n             SET ZEDLMSG = &NRSTR(THE REQUESTED FILE (&LEVEL) WAS +\n             NOT CUT)\n             ISPEXEC SETMSG MSG(ISRZ001)\n             EXIT CODE(12)\n             END\n\n          ISPEXEC TBOPEN &TABLE LIBRARY(ISPPROF)\n          ISPEXEC TBTOP &TABLE\n\n          SET CNT = 0\n          SET LCC = 0\n          DO WHILE &LCC = 0\n\n             ISPEXEC TBSKIP &TABLE\n             SET LCC = &LASTCC\n\n             IF &LCC = 0 THEN DO\n                 ISREDIT LINE_AFTER &LINE = DATALINE (RECORD)\n                 SET LINE = &LINE + 1\n                 SET CNT = &CNT + 1\n                 END\n\n             END\n\n          ISPEXEC TBEND &TABLE\n          SET ZEDSMSG = &NRSTR(&CNT LINES PASTED)\n          SET ZEDLMSG = &NRSTR(&CNT LINES PASTED FROM FILE &LEVEL)\n          ISPEXEC SETMSG MSG(ISRZ000)\n          EXIT CODE(1)\nPASTLIST: +\n          ISPEXEC TBCREATE CUTLIST NAMES(LEVEL RECCNT CREATED +\n                  RECORD) NOWRITE\n\n          ISPEXEC TBVCLEAR CUTLIST\n          ISPEXEC LMINIT DATAID(ID) DDNAME(ISPPROF)\n          ISPEXEC LMOPEN DATAID(&ID)\n          ISPEXEC LMMLIST DATAID(&ID) MEMBER(MEM)\n          IF &LASTCC = 0 THEN SET PREF = &SUBSTR(1:3,&MEM         )\n          ELSE SET PREF = ZZZ\n          SET LEVEL = &SUBSTR(4:8,&MEM        )\n\n          DO WHILE &PREF < CUT\n              ISPEXEC LMMLIST DATAID(&ID) MEMBER(MEM)\n              IF &LASTCC = 0 THEN SET PREF = &SUBSTR(1:3,&MEM         )\n              ELSE SET PREF = ZZZ\n              SET LEVEL = &SUBSTR(4:8,&MEM        )\n              END\n\n          DO WHILE &PREF = CUT\n             ISPEXEC TBSTATS &MEM      +\n                     CDATE(CREATED)    +\n                     ROWCURR(RECCNT)   +\n                     LIBRARY(ISPPROF)\n             SET RECCNT = &RECCNT\n             ISPEXEC TBOPEN &MEM LIBRARY(ISPPROF) NOWRITE\n             ISPEXEC TBSKIP &MEM\n             ISPEXEC TBEND  &MEM\n             ISPEXEC TBADD CUTLIST\n\n             ISPEXEC LMMLIST DATAID(&ID) MEMBER(MEM)\n             IF &LASTCC = 0 THEN SET PREF = &SUBSTR(1:3,&MEM     )\n             ELSE SET PREF = ZZZ\n             SET LEVEL = &SUBSTR(4:8,&MEM        )\n             END\n\n          ISPEXEC LMMLIST DATAID(&ID) OPTION(FREE)\n          ISPEXEC LMCLOSE DATAID(&ID)\n          ISPEXEC LMFREE DATAID(&ID)\n\n          ISPEXEC TBTOP CUTLIST\n          SET PANEL = #PASD\nCUTLOOP:  +\n          ISPEXEC TBTOP CUTLIST\n          ISPEXEC TBSKIP CUTLIST NUMBER(&ZTDTOP)\n          ISPEXEC TBDISPL CUTLIST PANEL(&PANEL)\n          SET PCC = &LASTCC\n          SET PANEL = #PASD\n          IF &PCC > 4 THEN DO\n             ISPEXEC TBEND CUTLIST\n             EXIT CODE(1)\n             END\nIF &LSEL  = B THEN DO\n          ISPEXEC CONTROL DISPLAY SAVE\n          SET BRTITLE = &STR(FILE FOLDER \"&LEVEL\")\n          ALLOC F(CUTTEXT) REUSE NEW UNIT(SYSDA) +\n                LRECL(80) BLKSIZE(6160) RECFM(F B) +\n                DSORG(PS) SP(5 5) TR\n          ISPEXEC LMINIT DATAID(ID) DDNAME(CUTTEXT)\n          ISPEXEC LMOPEN DATAID(&ID) OPTION(OUTPUT)\n          SET TABLE = &STR(CUT&LEVEL)\n          ISPEXEC TBOPEN &TABLE NOWRITE LIBRARY(ISPPROF)\n          ISPEXEC TBTOP &TABLE\n          DO WHILE &RECCNT > 0\n              ISPEXEC TBSKIP &TABLE\n              ISPEXEC LMPUT DATAID(&ID) MODE(INVAR) +\n                  DATALOC(RECORD) DATALEN(80)\n              SET RECCNT = &RECCNT - 1\n              END\n              ISPEXEC TBEND &TABLE\n              ISPEXEC LMCLOSE DATAID(&ID)\n              ISPEXEC BROWSE DATAID(&ID) PANEL(CNADBROW)\n              ISPEXEC LMFREE DATAID(&ID)\n              FREE F(CUTTEXT)\n              ISPEXEC CONTROL DISPLAY RESTORE\n              IF &PCC = 4 THEN SET PANEL =\n              GOTO CUTLOOP\n          END\nIF &LSEL  = S THEN DO\n          ISPEXEC CONTROL ERRORS RETURN\n          ISREDIT PASTE &LEVEL\n          SET LCC = &LASTCC\n          ISPEXEC CONTROL ERRORS CANCEL\n          ISPEXEC TBEND CUTLIST\n          IF &LCC \u00ac= 0 THEN EXIT CODE(&LCC)\n          EXIT CODE(0)\n          END\n          IF &PCC = 4 THEN SET PANEL =\n          GOTO CUTLOOP\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RENMSAVE": {"ttr": 1292, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00(\\x00\\x98(o\\x00\\x98(\\x7f\\x08Q\\x00 \\x00\\x03\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1998-10-13T00:00:00", "modifydate": "1998-10-14T08:51:28", "lines": 32, "newlines": 3, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: RENAMES A MEMBER IN A PDS                              */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 10/14/1998      */\n/*   TYPICAL USER(S): ALL TSO USERS                                  */\n/*   PARAMETERS PASSED: PDS DSNAME, OLD MEMBER NAME, NEW MEMBER NAME */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*10/14/1998 BC0THOR INITIAL CLIST CREATION                          */\n/*                                                                   */\n/*********************************************************************/\nPROC 3 DSNAME OLDMEM NEWMEM\nSET &LPN = &STR((\nSET &RPN = )\nIF &STR(&SUBSTR(1:1,&DSNAME)) = &STR(') THEN DO\n SET &DSN1 = &STR(&SUBSTR(1:&LENGTH(&STR(&DSNAME))-1,&DSNAME)+\n   &STR(&LPN)&STR(&OLDMEM)&STR(&RPN)&STR(')\n SET &DSN2 = &STR(&SUBSTR(1:&LENGTH(&STR(&DSNAME))-1,&DSNAME)+\n   &STR(&LPN)&STR(&NEWMEM)&STR(&RPN)&STR(')\nEND\nELSE DO\n SET &DSN1 = &STR(&STR(')&STR(&SYSUID)&STR(.)&STR(&DSNAME)+\n   &STR(&LPN)&STR(&OLDMEM)&STR(&RPN)&STR(')\n SET &DSN2 = &STR(&STR(')&STR(&SYSUID)&STR(.)&STR(&DSNAME)+\n   &STR(&LPN)&STR(&NEWMEM)&STR(&RPN)&STR(')\nEND\nWRITE REN &DSN1 &DSN2\nREN &DSN1 &DSN2\nEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SMPE0": {"ttr": 1294, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x14\\x00\\x99(o\\x00\\x99(o\\x16\\x05\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-10-13T00:00:00", "modifydate": "1999-10-13T16:05:14", "lines": 28, "newlines": 28, "modlines": 0, "user": "BC0THOR"}, "text": "PROC 0 DEBUG( )\n/*******************************************************************/\n/*    THIS CLIST ALLOWS ACCESS TO \"SMPE\" USING LIBDEFS AND ALTLIB  */\n/*******************************************************************/\nIF &DEBUG = DEBUG THEN +\n  CONTROL LIST CONLIST SYMLIST MSG NOFLUSH\nELSE +\n  CONTROL NOLIST NOCONLIST NOSYMLIST NOMSG NOFLUSH\n    FREE FILE(STEPLIBY)\n    ALLOC F(STEPLIBY) DA('SYS1.SGIMLMD0') SHR\n    STEPLIB OPEN(STEPLIBY) QUIET\n    ALLOC F(SMPTABL) DA(ISPPROF) SHR\n    ISPEXEC LIBDEF ISPLLIB EXCLDATA ID('SYS1.SGIMLMD0')\n    ISPEXEC LIBDEF ISPPLIB DATASET ID('SYS1.SGIMPENU' PDS.PLIB)\n    ISPEXEC LIBDEF ISPMLIB DATASET ID('SYS1.SGIMMENU')\n    ISPEXEC LIBDEF ISPTLIB DATASET ID('SYS1.SGIMTENU')\n    ISPEXEC LIBDEF ISPSLIB DATASET ID('SYS1.SGIMSENU')\n  ISPEXEC SELECT PANEL(SMPE) NEWAPPL(SMPE) PASSLIB\n    ISPEXEC LIBDEF ISPLLIB\n    ISPEXEC LIBDEF ISPPLIB\n    ISPEXEC LIBDEF ISPMLIB\n    ISPEXEC LIBDEF ISPTLIB\n    ISPEXEC LIBDEF ISPSLIB\n    FREE FI(SMPTABL)\n    STEPLIB CLOSE QUIET\n    FREE FI(STEPLIBY)\n    CONTROL NOFLUSH\nEND\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "STARTREK": {"ttr": 1296, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x01\\x01\\x13_\\x01\\x01\\x13_\\x150\\x00\\x05\\x00\\x05\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-05-15T00:00:00", "modifydate": "2001-05-15T15:30:15", "lines": 5, "newlines": 5, "modlines": 0, "user": "BC0THOR"}, "text": "ALLOC F(FT06F001) DA(*)\nALLOC F(FT05F001) DA(*)\nCALL 'SYS1.TECHLOAD(ZNC1080P)'\nFREE F(FT06F001)\nFREE F(FT05F001)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "T": {"ttr": 1298, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00&\\x00\\x98)O\\x00\\x98)_\\x08\\x02\\x00\\x0b\\x00\\n\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1998-10-21T00:00:00", "modifydate": "1998-10-22T08:02:26", "lines": 11, "newlines": 10, "modlines": 0, "user": "BC0THOR"}, "text": "ISREDIT MACRO\nSET L1 = &STR(//JESOUT OUTPUT GROUPID=HDQTRSF2,DEFAULT=YES,JESDS=ALL,)\nSET L2 = &STR(//   PAGEDEF=GRYBIG,FORMDEF=GRYBIG)\nISREDIT FIND &STR(//JESOUT) 1\nIF &LASTCC NE 0 THEN END\nISREDIT (CURLINE,CURPOS) = CURSOR\nISREDIT DELETE &CURLINE\nISREDIT LINE_BEFORE &CURLINE = DATALINE \"&L1\"\nISREDIT LINE_AFTER &CURLINE = DATALINE \"&L2\"\nISREDIT SAVE\nISREDIT END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TESTMAC": {"ttr": 1300, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x15\\x00\\x99!\\x7f\\x00\\x99!\\x7f\\x111\\x00\\x15\\x00\\x15\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1999-08-05T00:00:00", "modifydate": "1999-08-05T11:31:15", "lines": 21, "newlines": 21, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: SUBMITS AN ASSEMBLY/LINK FOR THE MEMBER BEING EDITED   */\n/*            USING THE JCL IN PDS.JCL(ASMXP61) AS MODIFIED BY EDIT  */\n/*            MACRO ASMEDIT WHICH IS INVOKED BY THIS EDIT MACRO.     */\n/*   AUTHOR:  BC0THOR (DICK THORNTON) CREATION DATE: 10/09/1998      */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: NONE                                         */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*10/09/1998 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO\nCONTROL NOLIST NOSYMLIST NOCONLIST MSG\nISREDIT CHANGE ALL 'MVC' '***'\nISREDIT SAVE\nISREDIT END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TEST2": {"ttr": 1302, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00A\\x00\\x98(o\\x00\\x98)O\\x17\\x19\\x00\\n\\x00\\x01\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1998-10-13T00:00:00", "modifydate": "1998-10-21T17:19:41", "lines": 10, "newlines": 1, "modlines": 0, "user": "BC0THOR"}, "text": "ISREDIT MACRO\nSET L1 = &STR(//JESOUT OUTPUT GROUPID=HDQTRSF2,DEFAULT=YES,JESDS=ALL,)\nSET L2 = &STR(//   PAGEDEF=GRYBIG,FORMDEF=GRYBIG)\nISREDIT FIND &STR(//JESOUT) 1\nIF &LASTCC NE 0 THEN END\nISREDIT (CURLINE,CURPOS) = CURSOR\nISREDIT DELETE &CURLINE\nISREDIT LINE_BEFORE &CURLINE = DATALINE \"&L1\"\nISREDIT LINE_AFTER &CURLINE = DATALINE \"&L2\"\nISREDIT END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "VSYSTEM": {"ttr": 1537, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00S\\x01\\x013\\x0f\\x01\\x013\\x0f\\x17&\\x00p\\x00p\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-11-26T00:00:00", "modifydate": "2001-11-26T17:26:53", "lines": 112, "newlines": 112, "modlines": 0, "user": "BC0THOR"}, "text": "PROC 0\nCONTROL MSG\n   FREE  ATTRLIST(LSTATTR)\n   ATTRIB LSTATTR BLKSIZE(6171) LRECL(121) RECFM(V B) DSORG(PS)\n   DELETE '&SYSUID..VLIST' SCRATCH NVSAM\n   ALLOC DD(PR2)      DS('&SYSUID..VLIST') MOD SP(1,1) CYL    -\n                   UNIT(SYSDA) USING(LSTATTR)   REUSE\nSTARTIT: +\nFREE   DD(PRT,VIN,SYSIN)\nALLOC  DD(PRT) DA(*)  REUSE\n/* CLEAR   */\nWRITE *******************************************************\nWRITE ***            VSAM HELPER                          ***\nWRITE ***   THIS UTILITY IS VERY POWERFUL, PLEASE USE     ***\nWRITE ***   EXTREME CAUTION, AND BACK UP THE MCF BEFORE   ***\nWRITE ***       EXECUTING THE DELETE SYSTEM OPTION.       ***\nWRITE ***                                                 ***\nWRITE *** (1)  BROWSE VSAM FILE       (2) DELETE SYSTEM   ***\nWRITE *** (3)  BROWSE DELETE REPORT   (4) DELETE PACKAGE  ***\nWRITE *** (5)  QUIT                                       ***\nWRITE ***                                                 ***\nWRITE *******************************************************\nWRITE ***                                                 ***\nWRITENR ** ENTER SELECTION :\nREAD AA\nIF '&AA' = '1' THEN GOTO DUMPIT\nIF '&AA' = '2' THEN GOTO DELSYS\nIF '&AA' = '3' THEN GOTO DELRPT\nIF '&AA' = '4' THEN GOTO DELPKG\nIF '&AA' = '5' THEN GOTO ENDIT\nGOTO STARTIT\n/*******************************************/\n/*             DELSYS - DELETE SYSTEM      */\nDELSYS: +\nWRITE **\nWRITENR ** ENTER MCF DATASET :\nREAD DS\nIF '&DS' = ''  THEN GOTO STARTIT\nWRITE **\nWRITENR ** ENTER SYSTEM TO BE DELETED :\nREAD SYS\nIF '&SYS' = '' THEN GOTO STARTIT\nWRITE ** ALL RECORD TYPES CONNECTED WITH THIS SYSTEM WILL BE DELETED **\nWRITE ** !!  ELEMENTS, TYPES, SUBSYSTEMS, ETC.. !!!                  **\nWRITE ** ALL RECORD TYPES CONNECTED WITH THIS SYSTEM WILL BE DELETED **\nWRITE ** !!  ELEMENTS, TYPES, SUBSYSTEMS, ETC.. !!!                  **\nWRITENR ** DELETE SYSTEM &SYS ?? Y/N ->\nREAD AA\nIF '&AA'  = '' THEN GOTO STARTIT\nIF '&AA' NE 'Y' THEN GOTO STARTIT\nDELCONT: +\nCONTROL   MSG\nALLOC  DD(VIN) DS('&DS') SHR REUSE\nWRITE ** LISTING IS IN DATSET &SYSUID..VLIST   **\nDELCALL: +\nCALL  'BC0THOR.LOAD.LOAD(BSTVSYS)' 'DELS,&SYS'\nWRITENR ***\nREAD AA\nGOTO STARTIT\n/*******************************************/\n/*             DELPKG - DELETE PACKAGE     */\nDELPKG: +\nWRITE **\nWRITENR ** ENTER PACKAGE DATASET :\nREAD DS\nIF '&DS' = ''  THEN GOTO STARTIT\nWRITE **\nWRITENR ** ENTER PACKAGE ID TO BE DELETED :\nREAD SYS\nIF '&SYS' = '' THEN GOTO STARTIT\nWRITE ** ALL RECORD TYPES CONNECTED WITH THIS PACKAGE WILL BE DELETED**\nWRITE ** !!                                     !!!                  **\nWRITE ** ALL RECORD TYPES CONNECTED WITH THIS PACKAGE WILL BE DELETED**\nWRITE ** !!                                     !!!                  **\nWRITENR ** DELETE PACKAGE &SYS ?? Y/N ->\nREAD AA\nIF '&AA'  = '' THEN GOTO STARTIT\nIF '&AA' NE 'Y' THEN GOTO STARTIT\nDELPCNT: +\nCONTROL   MSG\nALLOC  DD(VIN) DS('&DS') SHR REUSE\nWRITE ** LISTING IS IN DATSET &SYSUID..VLIST   **\nDELPCLL: +\n        CALL  'BC0THOR.LOAD.LOAD(BSTVSYS)' 'DELP,&SYS'\nWRITENR ***\nREAD AA\nGOTO STARTIT\n/*******************************************/\n/*             DUMPIT - BROWSE DATASET     */\nDUMPIT: +\nWRITE **\nWRITENR ** ENTER DATASET NAME :\nREAD DS\nIF '&DS' = ''  THEN GOTO STARTIT\nFREE  ATTRLIST(DMPATTR)\nDELETE '&SYSUID..VDMP' SCRATCH NVSAM\nATTRIB DMPATTR BLKSIZE(5120) LRECL(256) RECFM(F B) DSORG(PS)\nALLOC DD(DMP)      DS('&SYSUID..VDMP') NEW SP(1,1) CYL    -\n                   UNIT(SYSDA) USING(DMPATTR)   REUSE\nCONTROL   MSG\nALLOC  DD(VIN) DS('&DS') SHR REUSE\nCONTROL MSG\nCALL  'BC0THOR.LOAD.LOAD(BSTVSYS)' 'DUMP'\nISPEXEC BROWSE DATASET('&SYSUID..VDMP')\nDELETE '&SYSUID..VDMP' SCRATCH NVSAM\nGOTO STARTIT\nDELRPT: +\nCONTROL NOMSG\nISPEXEC BROWSE DATASET('&SYSUID..VLIST')\nGOTO STARTIT\nENDIT: +\nFREE   DD(PRT,VIN,SYSIN,DMP)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XCOL": {"ttr": 1540, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00S\\x01\\x00\\x18/\\x01\\x00\\x18/\\x16X\\x00 \\x00\\x1c\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2000-06-30T00:00:00", "modifydate": "2000-06-30T16:58:53", "lines": 32, "newlines": 28, "modlines": 0, "user": "BC0THOR"}, "text": "/*********************************************************************/\n/*   PURPOSE: EXCLUDES A COLUMN FROM A DATASET IN EDIT OR VIEW. THIS */\n/*            CAN BE USEFUL WHEN ELEMENTS IN A DATASET ARE SO FAR    */\n/*            APART THAT THE DISPLAY MUST BE SHIFTED LEFT AND RIGHT  */\n/*            TO SEE BOTH ELEMENTS. SYNTAX IS XCOL SSS LLL WHERE SSS */\n/*            IS THE BEGINNING COLUMN, AND LLL IS THE LAST COLUMN.   */\n/*            FOR EXAMPLE, TO EXCLUDE THE DATA IN COLUMNS 10-20, USE:*/\n/*                    XCOL 10 20                                     */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: STARTING AND ENDING COLUMNS                  */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*06/30/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\nISREDIT MACRO (LEFTCOL RIGHTCOL)\n/* CONTROL LIST SYMLIST CONLIST MSG */\nISREDIT BOUNDS &LEFTCOL *\nSET &NBRCOL = &RIGHTCOL - &LEFTCOL + 1\nSET &LINENBR = 1\nISREDIT (LASTLINE) = LINENUM .ZLAST\nRESHIFT: IF &LINENBR > &LASTLINE THEN GOTO ENDIT\nISREDIT CURSOR = &LINENBR\nISREDIT SHIFT ( .ZCSR &NBRCOL\nSET &LINENBR = &LINENBR + 1\nGOTO RESHIFT\nISREDIT BOUNDS\nENDIT: EXIT CODE(1)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XREFPUT": {"ttr": 1542, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\"\\x00\\x99\\x10\\x9f\\x01\\x02\\x08_\\x12\\x02\\x00\\x13\\x00\\x15\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1999-04-19T00:00:00", "modifydate": "2002-03-26T12:02:22", "lines": 19, "newlines": 21, "modlines": 0, "user": "BC0THOR"}, "text": "PROC 0\nCONTROL LIST MSG SYMLIST CONLIST\nFREEALL\nSET MSG = &MSG\nSET P =\nSET &P = &STR((+1))\nSET CNTR = 4\nE1:SET &DSN =\nISPEXEC CONTROL DISPLAY REFRESH\nISPEXEC DISPLAY PANEL(XREF1) MSG(&MSG)\nVPUT (&GROUPID &NAME) PROFILE\nIF &DSN =  THEN GOTO E1\nIF &DSN = QUIT THEN GOTO EXIT\nSET LEN = &LENGTH(&DSN)\nALLOC FI(XREF) DA(XREF) SHR LRECL(80) BLKSIZE(80)\nOPENFILE XREF OUT\nSET &XREF = &STR(&DSN)\nPUTFILE XREF\nCLOSFILE XREF\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XTUPDATE": {"ttr": 1544, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x004\\x01\\x01\\x15\\x0f\\x01\\x01\\x15\\x0f\\x17\\x17\\x01\\xe6\\x01\\xe4\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-05-30T00:00:00", "modifydate": "2001-05-30T17:17:34", "lines": 486, "newlines": 484, "modlines": 0, "user": "BC0THOR"}, "text": "PROC 0\nCONTROL NOLIST NOCONLIST NOSYMLIST ASIS\nISREDIT MACRO\n/* ***************************************************************** */\n/* * Edit macro to tailor XPEDITER/TSO install JCL                 * */\n/* * ------------------------------------------------------------- * */\n/* * Customization instructions:                                   * */\n/* *                                                               * */\n/* * 1.  All lines which should be altered are marked with '<=='.  * */\n/* * 2.  Also, lines which are used when installing optional       * */\n/* *     product features are marked with 'optional <=='.          * */\n/* * 3.  Specific instructions are included below for each         * */\n/* *     parameter you may need to alter.  Each block of           * */\n/* *     instructions is marked with '>>>' for use with the FIND   * */\n/* *     command.                                                  * */\n/* * 4.  No changes should be made below the line marked with a    * */\n/* *     row of equal signs (=).                                   * */\n/* * 5.  This macro will make a copy of the unaltered JCL with a   * */\n/* *     member name of memberO (where member is the original      * */\n/* *     member name that this macro was executed against EXCEPT   * */\n/* *     in the case of member names that are already 8 positions  * */\n/* *     long, or where duplicates would occur).  The exceptions   * */\n/* *     are: JCLUTILD and JCLUTILI (which become JCLUTIDO and     * */\n/* *     JCLUTIIO, respectively).  This copy operation will allow  * */\n/* *     you to 'recover' the unaltered JCL in the off chance      * */\n/* *     that you may need to rework this macro and re-execute     * */\n/* *     it against the JCL.                                       * */\n/* * 6.  The members names that this macro will change are:        * */\n/* *     IMS005 IMS005V JCLUTIL JCLUTILD JCLUTILI JCL001 JCL002    * */\n/* *     JCL003 JCL004 JCL005 JCL006 JCL007 JCL008 JCL009 JCL010   * */\n/* *     JCL011 JCL014 JCL015 JCL016 JCL017 JCLSQ1 JCLSQ2 JCLSQ3   * */\n/* *     ROS001 ROS002                                             * */\n/* *     XTBOOKS XTUNLD JCLRA093 JCLRAUSR JCLLKSVC JCLLKDB2        * */\n/* *     XTSVCINS                                                  * */\n/* *     JCLDB2SP                                                  * */\n/* * ------------------------------------------------------------- * */\n/* * Usage instructions:                                           * */\n/* *                                                               * */\n/* * After you have completed customization of this macro, it can  * */\n/* * be used by issuing XTUPDATE on the COMMAND line after         * */\n/* * selecting a member.                                           * */\n/* *                                                               * */\n/* * Important usage notes:                                        * */\n/* *                                                               * */\n/* * 1.  Once a member has been tailored with XTUPDATE, then       * */\n/* *     XTUPDATE cannot be used to tailor that member again.      * */\n/* *     (Unless you copy in the memberO backup that this macro    * */\n/* *     creates.)                                                 * */\n/* * 2.  XTUPDATE is intended for use only with XPEDITER/TSO       * */\n/* *     supplied JCL.  Be careful not to use XTUPDATE while       * */\n/* *     editting other datasets.                                  * */\n/* *                                                               * */\n/* ***************************************************************** */\n\n/* ***************************************************************** */\n/* * >>> JOB card:                                                 * */\n/* *                                                               * */\n/* * Sample JOB card information is shown on the lines below.      * */\n/* * This JOB card will be inserted into each JCL member.  You     * */\n/* * should update these lines to create a valid JOB card.  Note   * */\n/* * that the data to be changed for each line of the JOB card is  * */\n/* * enclosed by \"&STR(\" and \")\".                                  * */\n/* ***************************************************************** */\n  SET LINE1 = +\n   &STR(//&SYSUID.# JOB (0-0,,TMVS01-UR-XXXX),'DTHORNTON', )  /* <== */\n  SET LINE2 = +\n   &STR(// CLASS=V,MSGCLASS=Y,NOTIFY=&SYSUID            )     /* <== */\n  SET LINE3 = +\n   &STR(//JESOUT OUTPUT GROUPID=HDQTRSF2,DEFAULT=YES, )       /* <== */\n  SET LINE4 = +\n   &STR(//   JESDS=ALL,PAGEDEF=GRYBIG,FORMDEF=GRYBIG    )     /* <== */\n  SET LINE5 = +\n   &STR(//*                                             )     /* <== */\n\n/* ***************************************************************** */\n/* * >>> Dataset names:                                            * */\n/* *                                                               * */\n/* * Sample dataset names for product libraries are shown below.   * */\n/* * You should update the Dataset 'prefix' to your site's         * */\n/* * requirements.  The values for XTPREF and CXPREF               * */\n/* * should be the same as you used in the XTUNLD job (Step 2 of   * */\n/* * the Installation Procedures).                                 * */\n/* *                                                               * */\n/* * It is suggested that the TSO release be included in the       * */\n/* * dataset name for the XPEDITER/TSO load library.  A separate   * */\n/* * XPEDITER load library is required for each TSO release.       * */\n/* ***************************************************************** */\n  SET XTPREF  = SPP.XPEDTSO.V7R0M0                            /* <== */\n  SET CXPREF  = SPP.COMPWARE.PROD                             /* <== */\n\n/* ***************************************************************** */\n/* * >>> DD parameters for XPEDITER/TSO datasets.                  * */\n/* *                                                               * */\n/* * DD statements parameters are shown below.  These may need to  * */\n/* * be tailored for your site's requirements.  XTVOL and XTUNIT   * */\n/* * will be used for XPEDITER datasets.  XTBLKZL will be used for * */\n/* * the XPEDITER/TSO load library.                                * */\n/* * XTVVOL is the volser for the XOPTIONS VSAM file allocation.   * */\n/* * XTTUNIT is the unit type for the install tape, XTTVOL is the  * */\n/* * volser of the install tape.  XTBLKZS will be used for the     * */\n/* * XPEDITER ISPF datasets.                                       * */\n/* ***************************************************************** */\n  SET XTVOL   =          /* Specify specific DASD volume serial  <== */\n                         /* number after = sign, if required.        */\n  SET XTVVOL  =          /* Specify specific volume serial after <== */\n                         /* = sign, for VSAM XOPTIONS file.          */\n  SET XTTVOL  = XN0701   /* Specify specific volume serial after <== */\n                         /* = sign (of the XPEDITER install tape)    */\n  SET XTTUNIT = 671      /* Specify the tape unit type after     <== */\n                         /* = sign (for the XPEDITER install tape)   */\n  SET XTUNIT  = DISK     /* DASD unit type for the XPEDITER libs <== */\n                         /* (SYSDA is valid for most sites).     <== */\n/*********************************************************************/\n/* XTBLKZL is used for XPEDITER LOAD libraries, which are allocted   */\n/*   RECFM=U (undefined).                                            */\n/*********************************************************************/\n  SET XTBLKZL = 27998    /* Change 6144 to desired value.        <== */\n                         /*   23476 = 1/2 track on 3380              */\n                         /*   27998 = 1/2 track on 3390              */\n/*********************************************************************/\n/* XTBLKZS is used for XPEDITER ISPF datasets, which are a multiple  */\n/*   of 80 (RECFM=FB fixed-blocked).                                 */\n/*********************************************************************/\n  SET XTBLKZS = 27920    /* Change 6160 to desired value.        <== */\n                         /*   23440 = 1/2 track on 3380              */\n                         /*   27920 = 1/2 track on 3390              */\n\n/* ***************************************************************** */\n/* * >>> Dataset names for IMS libraries.                          * */\n/* *                                                               * */\n/* * If IMS is used at your site, specify IMSRES as the name of    * */\n/* * the IMS load library which contains the module DFSLI000.      * */\n/* *                                                               * */\n/* * If you will be installing XPEDITER/TSO IMS support,           * */\n/* * specify the names for IMS RESLIB and DBDLIB.                  * */\n/* *                                                               * */\n/* * If you will be installing support for IMS Shared Queues       * */\n/* * (Requires IMS 6.1 or higher), specify the name for            * */\n/* * IMS EXITLIB (if not, you can ignore the EXITLIB change).      * */\n/* *                                                               * */\n/* * Replace 'YOUR_IMS_RESLIB' with the name of your IMS RESLIB    * */\n/* * Replace 'YOUR_IMS_DBDLIB' with the name of your IMS DBDLIB    * */\n/* * Replace 'YOUR_IMS_EXIT_LIBRARY' with the name of your         * */\n/* *     IMS EXITLIB                                               * */\n/* ***************************************************************** */\n  SET IMSRES  = &STR(SYS1.IMSVS.RESLIB)             /* optional  <== */\n  SET IMSDBD  = &STR(UCC10.DBDLIB)                  /* optional  <== */\n  SET IMSXIT  = &STR(YOUR_IMS_EXIT_LIBRARY)         /* optional  <== */\n\n/* ***************************************************************** */\n/* * >>> Dataset name for LE/370 load library.                     * */\n/* *                                                               * */\n/* * If PL1 or LE/370 is used at your site, specify the name of    * */\n/* * the LE/370 linkedit library.  If neither PL1 not LE/370 is    * */\n/* * used at your site, leave the 'YOUR.CEE.SCEELKED' default.     * */\n/* *                                                               * */\n/* * Replace 'YOUR.CEE.SCEELKED' with 'hilvl.cee.sceelked'         * */\n/* ***************************************************************** */\n  SET CEELKED = &STR(CEE.SCEELKED)                            /* <== */\n\n/* ***************************************************************** */\n/* * >>> Dataset names for ROSCOE libraries.                       * */\n/* *                                                               * */\n/* * If you will be installing XPEDITER/TSO ROSCOE support,        * */\n/* * specify the ROSCOE libraries to be used as well as the KEY    * */\n/* * to be used.                                                   * */\n/* *                                                               * */\n/* * Replace 'YOUR.ROSCOE' with the name of the prefix used for    * */\n/* * your ROSLIBxx libraries.                                      * */\n/* *                                                               * */\n/* * Replace 'YOUR.ROSCOE.ROSLIB' with the name of your ROSCOE     * */\n/* * load library.                                                 * */\n/* *                                                               * */\n/* * Replace 'SYS2.XPEDITER.V7R0M0' with the name of the prefix    * */\n/* * that will be used for the 'ROSBAT.LOADLIB' which XPEDITER     * */\n/* * will allocate which will contain the linkedited XPEDITER      * */\n/* * modules to be used by ROSCOE.                                 * */\n/* *                                                               * */\n/* * Replace 'XPEDITER.BATCON' with the name of the ROSCOE library * */\n/* * KEY that will be used for XPEDITER.                           * */\n/* ***************************************************************** */\n  SET ROSPREF = &STR(YOUR.ROSCOE)                   /* optional  <== */\n  SET ROSLOAD = &STR(YOUR.ROSCOE.ROSLIB)            /* optional  <== */\n  SET ROSXPD  = &STR(XPEDITER.BATCON)               /* optional  <== */\n  SET ROSBAT  = &STR(SYS2.XPEDITER.V7R0M0)          /* optional  <== */\n\n/* >>> ============================================================= */\n/* = S T O P === S T O P === S T O P === S T O P === S T O P ======= */\n/* == S T O P === S T O P === S T O P === S T O P === S T O P ====== */\n/* === S T O P === S T O P === S T O P === S T O P === S T O P ===== */\n/* ==== S T O P === S T O P === S T O P === S T O P === S T O P ==== */\n/* >>> = S T O P - DO NOT MODIFY ANY STATEMENTS BELOW THIS LINE!! << */\n/* ====== S T O P === S T O P === S T O P === S T O P === S T O P == */\n/* ======= S T O P === S T O P === S T O P === S T O P === S T O P = */\n/* ======== S T O P === S T O P === S T O P === S T O P === S T O P  */\n/* ========= S T O P === S T O P === S T O P === S T O P === S T O P */\n/* ================================================================= */\n  SET BKPREF  =       /* softcopy */\n  SET XTSFTVB = 27998 /* softcopy */\n  SET XTSFTFB = 24576 /* softcopy */\n\n  SET SRCHLVL = V7R0M0\n  ISREDIT EXCLUDE ALL\n  ISREDIT FIND ALL 'tailored with '                /* test recursion */\n  IF &LASTCC = 0 THEN GOTO NOREDO\n  ISREDIT RESET\n  ISREDIT (XMEMBER) = MEMBER           /* get name of current member */\n\n  ISREDIT FIND ALL 'XPEDITER/TSO'               /* is it our member? */\n  IF &LASTCC = 0 THEN GOTO ITSOURS\n  ISREDIT FIND ALL 'XPEDITER.TSO'               /* is it our member? */\n  IF &LASTCC = 0 THEN GOTO ITSOURS\n  ISREDIT FIND ALL '.XPEDITER.'                 /* is it our member? */\n  IF &LASTCC = 0 THEN GOTO ITSOURS\n  ISREDIT FIND ALL 'XPEDITER/IMS'               /* is it our member? */\n  IF &LASTCC = 0 THEN GOTO ITSOURS\n  ISREDIT FIND ALL 'COMPWARE.CX'                /* is it our member? */\n  IF &LASTCC = 0 THEN GOTO ITSOURS\n  GOTO NOTINST\n\nITSOURS: &NULL\n  IF &XMEMBER = IMS005   OR &XMEMBER = IMS005V  OR +\n     &XMEMBER = JCLUTIL  OR &XMEMBER = JCLUTILD OR +\n     &XMEMBER = JCLUTILI OR &XMEMBER = JCL001   OR +\n     &XMEMBER = JCL002   OR &XMEMBER = JCL003   OR +\n     &XMEMBER = JCL004   OR &XMEMBER = JCL005   OR +\n     &XMEMBER = JCL006   OR &XMEMBER = JCL007   OR +\n     &XMEMBER = JCL008   OR &XMEMBER = JCL009   OR +\n     &XMEMBER = JCL010   OR &XMEMBER = JCL011   OR +\n     &XMEMBER = JCL014   OR &XMEMBER = JCL015   OR +\n     &XMEMBER = JCL016   OR &XMEMBER = JCL017   OR +\n     &XMEMBER = JCLSQ1   OR &XMEMBER = JCLSQ2   OR +\n     &XMEMBER = JCLSQ3   OR &XMEMBER = JCLLKDB2 OR +\n     &XMEMBER = JCLRAUSR OR &XMEMBER = JCLRA093 OR +\n     &XMEMBER = JCLLKSVC OR &XMEMBER = XTSVCINS OR +\n     &XMEMBER = ROS001   OR &XMEMBER = ROS002   OR +\n     &XMEMBER = XTBOOKS  OR &XMEMBER = XTUNLD   OR +\n     &XMEMBER = JCLDB2SP                           +\n     THEN GOTO PROCESS\n  GOTO NOTINST\nPROCESS: &NULL\n  SET NEWMEMB=\n  IF &XMEMBER = JCLUTILD THEN +\n     SET NEWMEMB = JCLUTIDO\n  IF &XMEMBER = JCLUTILI THEN +\n     SET NEWMEMB = JCLUTIIO\n  IF &NEWMEMB\u00ac= THEN GOTO HAVESET\n\n  IF &LENGTH(&XMEMBER) > 7 THEN +\n     SET NEWMEMB = &STR(&SUBSTR(1:7,&XMEMBER)O)\n  ELSE +\n     SET NEWMEMB = &XMEMBER.O\n\n  IF &NEWMEMB= THEN GOTO NOTINST\n\nHAVESET: &null\n  ISREDIT CREATE &NEWMEMB .ZFIRST .ZLAST  /* create backup memberO */\n  IF &XMEMBER = JCL014 THEN GOTO XMSGOPT\n\n  ISREDIT EXCLUDE ALL '//*' 1     /* Do not modify JCL comment lines */\n\n  ISREDIT FIND ALL NX '//' 1                          /* is it JCL?  */\n  IF &LASTCC \u00ac= 0 THEN GOTO NOTINST             /* no, don't install */\n  ISREDIT FIND ALL NX ' DD '\n  IF &LASTCC \u00ac= 0 THEN GOTO NOTINST\n\nISAJOB: &null\n  SET INSTNO=\n  IF &SUBSTR(1:3,&XMEMBER) EQ JCL THEN +\n     SET INSTNO = &SUBSTR(4:6,&XMEMBER)\n  IF &XMEMBER = XTSVCINS +\n     THEN GOTO CHG1\n  IF &XMEMBER \u00ac= IMS005V +\n     AND &XMEMBER \u00ac= IMS005 +\n     AND &XMEMBER \u00ac= XTUNLD +\n     AND &XMEMBER \u00ac= XTBOOKS +\n     AND &XMEMBER \u00ac= ROS001 +\n     AND &XMEMBER \u00ac= ROS002 +\n     AND &INSTNO= THEN GOTO NOTINST\n  ISREDIT LINE_BEFORE 1 = DATALINE &STR(\"&LINE1\")\n  ISREDIT LINE_AFTER  1 = DATALINE &STR(\"&LINE2\")\n  ISREDIT LINE_AFTER  2 = DATALINE &STR(\"&LINE3\")\n  ISREDIT LINE_AFTER  3 = DATALINE &STR(\"&LINE4\")\n  ISREDIT LINE_AFTER  4 = DATALINE &STR(\"&LINE5\")\n  SET LINEX = +\n     &STR(//* &ZDATE &ZTIME - &SYSUID tailored with &SYSICMD..)\n  ISREDIT LINE_AFTER  5 = DATALINE &STR(\"&LINEX\")\n  IF &XMEMBER = XTUNLD THEN GOTO UNLDSTEP\n  ISREDIT CHANGE ALL NX '//YOUR JOB CARD HERE'   '//******************'\n\n  IF &XMEMBER = ROS001 OR &XMEMBER = ROS002 +\n     THEN GOTO ROSCOE\n\nCHG1: &null\n  ISREDIT CHANGE ALL NX 'DSN=SYS2.XPEDITER.&SRCHLVL' +\n                        'DSN=&XTPREF.'\n  ISREDIT CHANGE ALL NX 'COMPWARE.CX'     &CXPREF\n\n  IF &INSTNO = 001 OR &INSTNO = 002 OR &INSTNO = 005 OR +\n     &INSTNO = 006 OR &INSTNO = 007 OR &INSTNO = 009 OR +\n     &INSTNO = LKS OR +\n     &INSTNO = 017 THEN GOTO SIMPLE1\n  IF &XMEMBER = XTSVCINS +\n     THEN GOTO SIMPLE1\n  IF &INSTNO = 003 THEN GOTO LE370LNK\n  IF &INSTNO = 004 THEN GOTO IMSSTEP\n  IF &INSTNO = 011 THEN GOTO LIBSPROC\n  IF &INSTNO = 014 THEN GOTO XMSGOPT\n  IF &INSTNO = 015 OR &XMEMBER = IMS005V OR +\n     &XMEMBER = IMS005 THEN GOTO VSAM\n  IF &INSTNO = 008 OR &INSTNO = 010 OR &INSTNO = 016 OR +\n     &XMEMBER = JCLUTILI OR &XMEMBER = JCLUTILD OR +\n     &XMEMBER = JCLUTIL +\n     THEN GOTO NOTCX\n  IF &INSTNO = SQ1 OR &INSTNO = SQ2 OR &INSTNO = SQ3 +\n     THEN GOTO IMSSTEP\n  IF &XMEMBER = XTBOOKS THEN GOTO UNLDBOOK\n  GOTO NOTINST\n\nLE370LNK: &null\n  IF &CEELKED = YOUR.CEE.SCEELKED THEN +\n    DO\n      ISREDIT CHANGE ALL 'DSN=YOUR.CEE.SCEELKED' 'DSN=NULLFILE'\n      ISREDIT FIND ALL 1 '//LKED4 '\n      ISREDIT (ROW,COL) = CURSOR\n      SET L1 = +\n        &STR(\"//*        PARM='RENT,REUS,REFR,LIST,SIZE=1024K'\")\n      SET L2 = +\n        &STR(\"//         PARM='RENT,REUS,REFR,NCAL,LIST,SIZE=1024K'\")\n      ISREDIT LINE &EVAL(&ROW+1) = &L1\n      ISREDIT LINE &EVAL(&ROW+2) = &L2\n    END\n  ELSE +\n    DO\n      ISREDIT CHANGE ALL NX \"YOUR.CEE.SCEELKED\"      \"&CEELKED.\"\n      ISREDIT FIND ALL 1 '//LKED4 '\n      ISREDIT (ROW,COL) = CURSOR\n      SET L1 = +\n        &STR(\"//         PARM='RENT,REUS,REFR,LIST,SIZE=1024K'\")\n      SET L2 = +\n        &STR(\"//*        PARM='RENT,REUS,REFR,NCAL,LIST,SIZE=1024K'\")\n      ISREDIT LINE &EVAL(&ROW+1) = &L1\n      ISREDIT LINE &EVAL(&ROW+2) = &L2\n    END\n  GOTO NOTCX\n\nUNLDBOOK: &null\n  ISREDIT CHANGE ALL NX 'DSN=CWBOOKS' 'DSN=&BKPREF.'\n  ISREDIT CHANGE ALL NX ' VOL=SER=DDDDDD, '      ' VOL=SER=&XTVOL., '\n  ISREDIT CHANGE ALL NX ' UNIT=NNNNNN, '         ' UNIT=&XTUNIT., '\n  ISREDIT CHANGE ALL NX '//* YOUR JOB CARD HERE'   '//****************'\n  ISREDIT CHANGE ALL NX 'DCB=(RECFM=FB,BLKSIZE=0,' +\n                        'DCB=(RECFM=FB,BLKSIZE=&XTSFTFB.,'\n  ISREDIT CHANGE ALL NX 'DCB=(RECFM=VB,BLKSIZE=8000,' +\n                        'DCB=(RECFM=VB,BLKSIZE=&XTSFTVB.,'\n  GOTO NOTCX\n\nUNLDSTEP: &null\n  ISREDIT CHANGE ALL NX '<==== CHECK ' '   <=CHK '\n  SET L1 = &STR(\"XTSOR='SYS2.XPEDITER.&SRCHLVL\")\n  SET L2 = &STR(\"XTSOR='&XTPREF\")\n  ISREDIT CHANGE ALL NX &L1 &L2\n  SET L1 = &STR(\"XTOBJ='SYS2.XPEDITER.&SRCHLVL\")\n  SET L2 = &STR(\"XTOBJ='&XTPREF\")\n  ISREDIT CHANGE ALL NX &L1 &L2\n  SET L1 = &STR(\"CXSOR='COMPWARE.CX\")\n  SET L2 = &STR(\"CXSOR='&CXPREF\")\n  ISREDIT CHANGE ALL NX &L1 &L2\n  SET L1 = &STR(\"CXOBJ='COMPWARE.CX\")\n  SET L2 = &STR(\"CXOBJ='&CXPREF\")\n  ISREDIT CHANGE ALL NX &L1 &L2\n  ISREDIT CHANGE ALL NX \"DUNIT='SYSDA'\" \"DUNIT='&XTUNIT'\"\n  ISREDIT CHANGE ALL NX \"TUNIT='TAPE'\" \"TUNIT='&XTTUNIT'\"\n  ISREDIT CHANGE ALL NX ' VOL=SER=DDDDDD, '      ' VOL=SER=&XTVOL., '\n  ISREDIT CHANGE ALL NX ',SER=TTTTTT)'           ',SER=&XTTVOL.)'\n  ISREDIT CHANGE ALL NX '//YOUR TAPE JOB CARD HERE'   '//*************'\n  GOTO NOTCX\n\nLIBSPROC: &null\n  ISREDIT CHANGE ALL NX 'LIBS=SYS2.XPEDITER.&SRCHLVL' +\n                        'LIBS=&XTPREF.'\n  GOTO NOTCX\n\nIMSSTEP: &null\n  ISREDIT CHANGE ALL NX 'DSN=YOUR_IMS_RESLIB' +\n                        'DSN=&IMSRES.'\n  ISREDIT CHANGE ALL NX 'DSN=YOUR_IMS_EXIT_LIBRARY' +\n                        'DSN=&IMSXIT.'\n  GOTO NOTCX\n\nSIMPLE1: &null\n  ISREDIT CHANGE ALL NX ' VOL=SER=DDDDDD, '      ' VOL=SER=&XTVOL., '\n  ISREDIT CHANGE ALL NX ' UNIT=SYSDA, '          ' UNIT=&XTUNIT., '\n  IF &INSTNO = 002 THEN GOTO LIBBLKZ\n  IF &INSTNO = 007 OR &INSTNO = 009 THEN GOTO ISPFBLKZ\n  GOTO NOTCX\n\nISPFBLKZ: &null\n  ISREDIT CHANGE ALL NX ',BLKSIZE=6160,'        ',BLKSIZE=&XTBLKZS.,'\n  GOTO NOTCX\n\nLIBBLKZ: &null\n  ISREDIT CHANGE ALL NX ',BLKSIZE=23476)'        ',BLKSIZE=&XTBLKZL.)'\n  GOTO NOTCX\n\nVSAM: &null\n  IF &XTVVOL= THEN +\n    DO\n      SET L1 = &STR(/*VOLUME(SMS)*/)\n      ISREDIT CHANGE ALL NX '  VOLUME(VVVVVV)  ' '&L1 '\n    END\n  ELSE\n    ISREDIT CHANGE ALL NX 'VOLUME(VVVVVV)'  'VOLUME(&XTVVOL.)'\n\n  ISREDIT CHANGE ALL NX ' DELETE SYS2.XPEDITER.&SRCHLVL' +\n                        ' DELETE &XTPREF'\n  ISREDIT CHANGE ALL NX ' NAME(SYS2.XPEDITER.&SRCHLVL' +\n                        ' NAME(&XTPREF'\n  IF &INSTNO = 015 THEN GOTO NOTCX\n\n  ISREDIT CHANGE ALL NX 'NAME(SYS2.XPEDITER.&SRCHLVL' +\n                        'NAME(&XTPREF'\n  ISREDIT CHANGE ALL NX ' NAME (SYS2.XPEDITER.&SRCHLVL' +\n                        ' NAME (&XTPREF'\n  ISREDIT CHANGE ALL NX 'DSN=YOUR.IMS.RESLIB' +\n                        'DSN=&IMSRES.'\n  ISREDIT CHANGE ALL NX 'DSN=YOUR.IMS.DBDLIB' +\n                        'DSN=&IMSDBD.'\n  IF &XTVVOL= THEN +\n    DO\n      SET L1 = &STR(/*VOLUME(SMS)*/)\n      ISREDIT CHANGE ALL NX ' VOLUMES(VVVVVV) ' '&L1 '\n    END\n  ELSE\n    ISREDIT CHANGE ALL NX 'VOLUMES(VVVVVV)'  'VOLUME(&XTVVOL.)'\n  GOTO NOTCX\n\nROSCOE: &null\n  ISREDIT CHANGE ALL NX 'COMPWARE.CX'     &CXPREF\n  ISREDIT CHANGE ALL NX ' VOL=SER=DDDDDD, '      ' VOL=SER=&XTVOL., '\n  ISREDIT CHANGE ALL NX ' UNIT=SYSDA, '          ' UNIT=&XTUNIT., '\n  ISREDIT CHANGE ALL NX 'DSN=YOUR.ROSCOE.ROSLIB,' +\n                        'DSN=&ROSLOAD.,'\n  ISREDIT CHANGE ALL NX 'DSN=YOUR.ROSCOE'       'DSN=&ROSPREF.'\n  ISREDIT CHANGE ALL NX 'OUTKEY=XPEDITER.BATCON' +\n                        'OUTKEY=&ROSXPD.'\n  ISREDIT CHANGE ALL NX 'DSN=SYS2.XPEDITER.V7R0M0.ROSBAT.LOADLIB' +\n                        'DSN=&ROSBAT..ROSBAT.LOADLIB'\n  ISREDIT CHANGE ALL NX 'DSN=SYS2.XPEDITER.&SRCHLVL' +\n                        'DSN=&XTPREF.'\n  ISREDIT CHANGE ALL NX '<==== YOUR ROSCOE LOAD' ' '\n  GOTO NOTCX\n\nNOTCX: &null\n  ISREDIT FIND # FIRST\nEXIT CODE(0)\n\nNOREDO: &null\n  ISREDIT (XLINE,XCOL) = CURSOR\n  ISREDIT CURSOR = &XLINE 0\n      SET &ZEDSMSG = &STR(Already tailored)\n      SET &ZEDLMSG = +\n        &STR(NO CHANGES MADE.  Member already tailored with &SYSICMD..)\n      ISPEXEC SETMSG MSG(ISRZ001)\nEXIT CODE(4)\n\nXMSGOPT: &null\n  ISREDIT (XLINE,XCOL) = CURSOR\n  ISREDIT CURSOR = &XLINE 0\n    SET &ZEDSMSG = &STR(XMESSAGE not required)\n    SET &ZEDLMSG = +\n      &STR(NO CHANGES MADE.  The XMESSAGE dataset is no longer required-\n.)\n    ISPEXEC SETMSG MSG(ISRZ001)\nEXIT CODE(4)\n\nNOTINST: &null\n  ISREDIT (XLINE,XCOL) = CURSOR\n  ISREDIT CURSOR = &XLINE 0\n    SET &ZEDSMSG = &STR(Not XPED/TSO install)\n    SET &ZEDLMSG = +\n      &STR(NO CHANGES MADE.  This is not an XPEDITER/TSO install member-\n.)\n    ISPEXEC SETMSG MSG(ISRZ001)\nEXIT CODE(4)\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "XXCOL": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00S\\x01\\x00\\x18/\\x01\\x00\\x18_\\tX\\x00$\\x00!\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2000-06-30T00:00:00", "modifydate": "2000-07-03T09:58:53", "lines": 36, "newlines": 33, "modlines": 0, "user": "BC0THOR"}, "text": "/* REXX **************************************************************/\n/*   PURPOSE: EXCLUDES A COLUMN FROM A DATASET IN EDIT OR VIEW. THIS */\n/*            CAN BE USEFUL WHEN ELEMENTS IN A DATASET ARE SO FAR    */\n/*            APART THAT THE DISPLAY MUST BE SHIFTED LEFT AND RIGHT  */\n/*            TO SEE BOTH ELEMENTS. SYNTAX IS XCOL SSS LLL WHERE SSS */\n/*            IS THE BEGINNING COLUMN, AND LLL IS THE LAST COLUMN.   */\n/*            FOR EXAMPLE, TO EXCLUDE THE DATA IN COLUMNS 10-20, USE:*/\n/*                    XCOL 10 20                                     */\n/*   TYPICAL USER(S): BC0THOR                                        */\n/*   PARAMETERS PASSED: STARTING AND ENDING COLUMNS                  */\n/*   CDC COMPLIANCE: NO CDC DATE DEPENDENCIES                        */\n/*********************************************************************/\n/*   MAINTENANCE RECORD: LAST 3 CHANGES                              */\n/*********************************************************************/\n/*   DATE    LOGONID REASON FOR CHANGE & WHAT WAS DONE               */\n/*-------------------------------------------------------------------*/\n/*06/30/2000 BC0THOR INITIAL CREATION                                */\n/*                                                                   */\n/*********************************************************************/\n ADDRESS ISPEXEC 'CONTROL ERRORS RETURN';\n ADDRESS ISREDIT;\n'MACRO (LEFTCOL RIGHTCOL)';\n'BOUNDS &LEFTCOL *';\nNBRCOL = RIGHTCOL - LEFTCOL + 1;\nLINENBR = 1;\n'(LASTLINE) = LINENUM .ZLAST';\nRESHIFT:\nIF LINENBR > LASTLINE THEN\n    SIGNAL ENDIT;\n'CURSOR = &LINENBR';\n'SHIFT ( .ZCSR &NBRCOL';\nLINENBR = LINENBR + 1;\nSIGNAL RESHIFT;\n'BOUNDS';\nENDIT:\nEXIT 1;\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT561/FILE561.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT561", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}