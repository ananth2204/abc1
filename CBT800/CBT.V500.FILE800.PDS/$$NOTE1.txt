Subject:    Re: PC tool for CBTTAPE
From:       Enrico Sorichetti <e.sorichetti@alice.it>
Date:       Tue, 11 Nov 2008 20:26:04 +0100
To:         Sam Golob <sbgolob@cbttape.org>


Hi Sam !

As promised, I am sending you the result of my work.
This is a zip file with the receive/unxmit REXX.

The main program, (it can be renamed in any way you like)
and three subroutines... unzip them somewhere in your path.
A quick and dirty EBCDIC display tool and the license info.

It works only wih object rexx , until they fix Regina REXX...
A long time ago I found a bug in Regina rexx which prevents any
useful utilization, ( I need to issue a MKDIR, ..... )
- after issuing a system command, the input file position is lost
- it might be a mac/linux only issue, not tested on windows

All the tests have been done on a mac and windows.
On windows not exhaustive as on the mac (just a few selected files)

The only issue with windows is the lack of the mac/linux globbing
so under windows it can be used only on single files.
For multiple (masked) files, a do works well.

On unix_like .... &RECEIVE *.XMI
On windows   .... for %i in ( *.xmi ) do; &RECEIVE %i

I have successfully received all, repeat ALL, the CBT XMI tapes
base,updates,overflow,overflow updates,jes2
- more than 1200 xmi files, more than 70000 files/members
and checked also that ALL the inner XMI members of all the tapes
were &RECEIVABLE, at least those whose names did not contain the
$ char.

The $ in a unix environment is a shell control char and must be
escaped.  I suppose that in a real environment we can afford to
have the users rename the culprit to get rid of the special char.
Anyhow I'll investigate.

While writing I fixed the issue, but I am too lazy to test them
all, a couple should be enough.  (After writing the message I
changed my mind and retested everything.)

Looks like the only issues left are...

... obj.xmi in cbt654 gave me an error but maybe ...
/self esteem on
since I tested about 1200 xmi files (probably more than
less) from a statistical point of view the probability
to find an error in my rexx is pretty low but I'll
check anyway
/self esteem off

I checked carefully and found the end of directory block
(12 bytes of binary zeros) was in a standalone block ...
with some flag mismatches.
OK I'll spare the details , I fixed the input by getting rid
of those 14 bytes and also that receive was successful.

and ....
There are some PDSE pds, like in update file CBT770,
I am working on supporting them, but it will take a while.

The parameters should be self explanatory, for general use
a simple &RECEIVE should be enough...

The defaults are
extract to a directory/path with the file name
identify the action to be taken by checking the initial
  bytes of the member
text files : suffix .txt translate to ascii,
XMI  files : suffix .xmi do not translate
OBJ  files : suffix .obj do not translate (compiler object decks)

The translation is very simple (only the printable).
Objects containing hidden binary_only bytes will yield wrong results
- usually, I've seen a few,
- linkage editors with embedded objs
- ISPF panels with unprintable attribute bytes, AREA definitions
  (mostly)

There are a few files with IEBUPDTE control cards for object
  decks,
I'll see if it is very frequent and I'll try to check also
  the second record...

here a snippet of a run
enrico-pBook:xmicbt enrico$ _receive cbt048
_receive  - Started        : 10 Nov 2008 10:23:31

_receive  - processing     : cbt048.xmi
_receive  - $$$#date       records(      12) file(cbt048/$$$#date.txt)
_receive  - @file048       records(      73) file(cbt048/@file048.txt)
_receive  - aput           records(     138) file(cbt048/aput.txt)
_receive  - eputl          records(     200) file(cbt048/eputl.txt)
_receive  - listspc        records(    1030) file(cbt048/listspc.txt)
_receive  - listspc$       records(      31) file(cbt048/listspc$.txt)
_receive  - listspc#       records(      30) file(cbt048/listspc#.txt)
_receive  - listvol        records(     696) file(cbt048/listvol.txt)
_receive  - listvol$       records(      31) file(cbt048/listvol$.txt)
_receive  - listvol#       records(      22) file(cbt048/listvol#.txt)
_receive  - loadlib        records(     123) file(cbt048/loadlib.xmi)
_receive  - locindex       records(     417) file(cbt048/locindex.txt)
_receive  - tsob           records(      26) file(cbt048/tsob.txt)
_receive  - tsoe           records(      26) file(cbt048/tsoe.txt)
_receive  - tsov           records(      26) file(cbt048/tsov.txt)
_receive  - ended          : 10 Nov 2008 10:23:32 elapsed : 0.457700
enrico-pBook:xmicbt enrico$ _receive cbt052
_receive  - Started        : 10 Nov 2008 10:23:37

_receive  - processing     : cbt052.xmi
_receive  - $$$#date       records(      12) file(cbt052/$$$#date.txt)
_receive  - $$readme       records(      44) file(cbt052/$$readme.txt)
_receive  - $changes       records(     118) file(cbt052/$changes.txt)
_receive  - $memory        records(      26) file(cbt052/$memory.txt)
_receive  - @file052       records(      11) file(cbt052/@file052.txt)
_receive  - ihadqe         records(      20) file(cbt052/ihadqe.txt)
_receive  - ihapcca        records(     340) file(cbt052/ihapcca.txt)
_receive  - ihapqe         records(      34) file(cbt052/ihapqe.txt)
_receive  - lkedshow       records(     274) file(cbt052/lkedshow.txt)
_receive  - p$begin        records(      16) file(cbt052/p$begin.txt)
_receive  - p$end          records(      10) file(cbt052/p$end.txt)
_receive  - showmvs        records(    1874) file(cbt052/showmvs.txt)
_receive  - showobj        records(     260) file(cbt052/showobj.obj)
_receive  - string         records(     962) file(cbt052/string.txt)
_receive  - wk$out         records(      13) file(cbt052/wk$out.txt)
_receive  - yregs          records(      23) file(cbt052/yregs.txt)
_receive  - ended          : 10 Nov 2008 10:23:37 elapsed : 0.594200
enrico-pBook:xmicbt enrico$

If something is not clear or more testing is needed just let me know
and I'll fix it.

Best regards.

Sincerely,
Enrico - The best to you and yours.

P.S. 1
Thank you for reading everything.

P.S. 2
How I tested:
Create the directories xmicbt, xmicbtcov, xmiupd, xmiupdcov
Unzip in the respective directories the content of the base files

Then in each directory issue the simple command.
&RECEIVE *.xmi
Which created all the subdirectories with unxmitted files

To test for the embedded xmi I repeated the same with the command
&RECEIVE *.xmi --root z --dest here
with the result of extracting everything to the z subdirectory
I did overwrite a few files, but I do not consider that an issue
(for the test at least).

Then I changed to the Z subdirectory renamed obj.xmi to obj.xmi_bad
and again issued the command
&RECEIVE *.xmi --root z --dest here
which created the z directory and junked everything there

I might change the parameter contruct from "--dest here" to "--junk"
It gives better the idea of putting everything together,
with the risk of overwriting something

