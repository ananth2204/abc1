/* REXX FILEXFER - Jim Halley - Accept control card input and build
   and execute the FILEXFER service of ISPF to transfer a file
   between a z/OS mainframe and a Microsoft Windows PC workstation.

   Input control card types:
   IP=IP ADDRESS OF THE PC WORKSTATION RUNNING THE WSA
   PC=PATH AND FILE NAME OF THE PC WORKSTATION FILE
   MF=MAINFRAME FILE NAME (MUST BE PREALLOCATED IF TG='MF')
   TG=TARGET OF TRANSFER - 'PC' OR 'MF' (DEFAULT IS 'PC')
   TY=TRANSFER TYPE - 'TEXT' OR 'BINARY' (DEFAULT IS 'TEXT')

   Data in control cards must be enclosed in apostrophes.

   Up to three PC= control cards are allowed and must be supplied
   in the proper order so that their data contents may be correctly
   concatenated.  Only the data enclosed within apostrophes  -
   including leading and trailing spaces - will be concatenated.

   Up to fourteen MF= control cards are allowed and must be supplied
   in the proper order so that their data contents may be correctly
   concatenated.  Only the data enclosed within apostrophes  -
   including leading and trailing spaces - will be concatenated.
   A file name of a traditional partitioned or sequential mainframe
   file will fit on one MF= control card - maximum file name length
   = 44 + 10 = 54 to allow for a 44 character PDS and member name.

   A PDS member can be created during an upload as long as the PDS
   already exists.

   If the first MF= control card encountered has a forward slash in
   record position 5, the file name is assumed to a UNIX path in
   which case up to 13 additional MF= control may be supplied for
   use in building the UNIX path used by the ISPF FILEXFER service.

   Fourteen MF= control cards are adequate for coding a UNIX path of
   up to the maximum allowable 1,023 length as long as record
   positions 73-80 are used. (75 X 14 = 1,050)

   Order does not matter for all other control card types.

   When continuing a path or file name from one PC= control card
   to the next, all spaces in the path and file name must be
   accounted for and entered within the leading and trailing
   apostrophies.

   Data may be coded in columns 73-80 of PC= and MF= cards but take
   care not to inadvertently overlay data with sequence numbers.     */
/* TRACE I */
SAY " "
SAY "************ Messages from REXX program FILEXFER - START ****************"
P1 = ''     /* initialize hold area for required PC= record #1      */
P2 = ''     /* initialize hold area for optional PC= record #2      */
P3 = ''     /* initialize hold area for optional PC= record #3      */
M1 = ''     /* initialize hold area for required MF= record #1      */
M2 = ''     /* initialize hold area for optional MF= record #2      */
M3 = ''     /* initialize hold area for optional MF= record #3      */
M4 = ''     /* initialize hold area for optional MF= record #4      */
M5 = ''     /* initialize hold area for optional MF= record #5      */
M6 = ''     /* initialize hold area for optional MF= record #6      */
M7 = ''     /* initialize hold area for optional MF= record #7      */
M8 = ''     /* initialize hold area for optional MF= record #8      */
M9 = ''     /* initialize hold area for optional MF= record #9      */
M10 = ''    /* initialize hold area for optional MF= record #10     */
M11 = ''    /* initialize hold area for optional MF= record #11     */
M12 = ''    /* initialize hold area for optional MF= record #12     */
M13 = ''    /* initialize hold area for optional MF= record #13     */
M14 = ''    /* initialize hold area for optional MF= record #14     */
TG = 'PC'   /* Default target of file transfer is PC workstation    */
TY = 'TEXT' /* Default data transfer type is TEXT                   */
FILEIN_CT = 0        /* Initialize input record counter             */

/* "ISPEXEC CONTROL ERRORS RETURN" */
ADDRESS ISPEXEC
"LMINIT DATAID(FILEIN) DDNAME(INDD1) ENQ(SHR)"
IF RC\=0 THEN
  DO
    SAY 'LMINIT OF INDD1 FAILED; RC = ' RC
    SIGNAL EOJ_FAST
  END

ADDRESS ISPEXEC
"LMOPEN DATAID("FILEIN") OPTION(INPUT)"
IF RC\=0 THEN
  DO
    SAY 'LMOPEN OF INDD1 FAILED; RC = ' RC
    SIGNAL EOJ_FAST
  END

DO UNTIL RC > 0
  CALL GETREC  /* read and process input records until end of file */
END
IF RC=8 THEN /* Since RC=8 is normal, return a zero return code   */
  RC = 0     /* to MVS                                            */
CALL EOJ_ROUTINE

/*--------------------------------------------------------------*/
GETREC:       /* GETREC is the process all input records */
DATAVAR = 0
/* NOTE:  "HOLD" is a work area to hold the input record */
"LMGET DATAID("FILEIN") MODE(INVAR) DATALOC(HOLD) DATALEN(DATAVAR) MAXLEN(80)"

IF RC=8 THEN
 DO
  SAY "NORMAL END OF INPUT FILE REACHED; RETURN CODE = " RC
/*RC = 0     Initialize RC to zero since RC=8 is good */
  RETURN
 END
IF RC > 8 THEN
 DO
  SAY "UNEXPECTED RETURN CODE ON INPUT FILE READ = " RC
  RETURN
 END
REC_TYPE = SUBSTR(HOLD,1,3)
FILEIN_CT = FILEIN_CT + 1 /* Add 1 to input record counter */

APOSTPOS = LASTPOS("'",HOLD) /* Find record position of trailing apost */
DATA_END = APOSTPOS - 5  /* Calculate the last rec position with data */
HOLD = SUBSTR(HOLD,4,APOSTPOS) /* Ignore junk after trailing APOST */
HOLD = STRIP(HOLD,B,' ')   /* Strip leading/trailing blanks */
HOLD = STRIP(HOLD,B,"'")   /* Strip leading/trailing apostrophes */

IF REC_TYPE = "IP=" THEN /* Store PC Workstation IP address */
 DO
  IP = SUBSTR(HOLD,1,20) /* Allow for format 999.999.999.999 */
  RETURN
 END

IF REC_TYPE = "PC=" & P1 = ' ' THEN
 DO
  P1 = SUBSTR(HOLD,1,DATA_END) /* Allow for up to 75 byte path piece */
  RETURN
 END

IF REC_TYPE = "PC=" & P2 = ' ' THEN
 DO
  P2 = SUBSTR(HOLD,1,DATA_END) /* Allow for up to 75 byte path piece */
  SAY "Multiple PC= control cards - display of contents follows:"
  SAY "#1 =" P1
  SAY "#2 =" P2
  RETURN
 END

IF REC_TYPE = "PC=" & P3 = ' ' THEN
 DO
  P3 = SUBSTR(HOLD,1,DATA_END) /* Allow for up to 75 byte path piece */
  SAY "#3 =" P3
  RETURN
 END

IF REC_TYPE = "MF=" & M1 = ' ' THEN
 DO
  M1 = SUBSTR(HOLD,1,DATA_END)
  RETURN
 END
IF REC_TYPE = "MF=" & M2 = ' ' THEN
 DO
  M2 = SUBSTR(HOLD,1,DATA_END)
  SAY " "
  SAY "Multiple MF= control cards - display of contents follows:"
  SAY "#1 =" M1
  SAY "#2 =" M2
  RETURN
 END
IF REC_TYPE = "MF=" & M3 = ' ' THEN
 DO
  M3 = SUBSTR(HOLD,1,DATA_END)
  SAY "#3 =" M3
  RETURN
 END
IF REC_TYPE = "MF=" & M4 = ' ' THEN
 DO
  M4 = SUBSTR(HOLD,1,DATA_END)
  SAY "#4 =" M4
  RETURN
 END
IF REC_TYPE = "MF=" & M5 = ' ' THEN
 DO
  M5 = SUBSTR(HOLD,1,DATA_END)
  SAY "#5 =" M5
  RETURN
 END
IF REC_TYPE = "MF=" & M6 = ' ' THEN
 DO
  M6 = SUBSTR(HOLD,1,DATA_END)
  SAY "#6 =" M6
  RETURN
 END
IF REC_TYPE = "MF=" & M7 = ' ' THEN
 DO
  M7 = SUBSTR(HOLD,1,DATA_END)
  SAY "#7 =" M7
  RETURN
 END
IF REC_TYPE = "MF=" & M8 = ' ' THEN
 DO
  M8 = SUBSTR(HOLD,1,DATA_END)
  SAY "#8 =" M8
  RETURN
 END
IF REC_TYPE = "MF=" & M9 = ' ' THEN
 DO
  M9 = SUBSTR(HOLD,1,DATA_END)
  SAY "#9 =" M9
  RETURN
 END
IF REC_TYPE = "MF=" & M10 = ' ' THEN
 DO
  M10 = SUBSTR(HOLD,1,DATA_END)
  SAY "#10=" M10
  RETURN
 END
IF REC_TYPE = "MF=" & M11 = ' ' THEN
 DO
  M11 = SUBSTR(HOLD,1,DATA_END)
  SAY "#11=" M11
  RETURN
 END
IF REC_TYPE = "MF=" & M12 = ' ' THEN
 DO
  M12 = SUBSTR(HOLD,1,DATA_END)
  SAY "#12=" M12
  RETURN
 END
IF REC_TYPE = "MF=" & M13 = ' ' THEN
 DO
  M13 = SUBSTR(HOLD,1,DATA_END)
  SAY "#13=" M13
  RETURN
 END
IF REC_TYPE = "MF=" & M14 = ' ' THEN
 DO
  M14 = SUBSTR(HOLD,1,DATA_END)
  SAY "#14=" M14
  RETURN
 END

IF REC_TYPE = "TY=" THEN /* Store type of file transfer */
 DO
  TY = SUBSTR(HOLD,1,8)
  RETURN
 END

IF REC_TYPE = "TG=" THEN /* Store target of file transfer */
 DO
  TG = SUBSTR(HOLD,1,4)
  RETURN
 END

RETURN /* End of core routine */

/*--------------------------------------------------------------*/

EOJ_ROUTINE:
IF SUBSTR(M1,5,1) = "/" THEN /* If z/OS Unix */
  MF = M1||M2||M3||M4||M5||M6||M7||M8||M9||M10||M11||M12||M13||M14
ELSE
  MF = "'"||M1||"'" /* Enclose standard z/OS file name in apostrophes */
SAY "IP =" IP
SAY "MF =" MF
SAY "TG =" TG
SAY "TY =" TY
PC = P1||P2||P3 /* Concatenate data of all PC= control cards */

SAY "The following display is the concatenation of all PC= input card contents"
SAY "PC =" PC
/* Z= LENGTH(PC)           */ /* For testing and diagnosis */
/* SAY "Length of PC =" Z  */ /* For testing and diagnosis */

'ISPEXEC WSCON IP(IP) CODEPAGE(0037) CHARSET(0697) NOGUIDSP'
IF RC /= 0 THEN
  DO
    SAY 'WSCON FAILED; RETURN CODE ='  RC
    SIGNAL EOJ_FAST
  END
SELECT
  WHEN TG = 'PC' & TY = 'TEXT' THEN      /* Download in TEXT mode */
    DO
      SAY "TARGET = PC; TYPE = TEXT"
      "ISPEXEC FILEXFER WS(PC) HOST(MF) TO(WS) TEXT"
  END
  WHEN TG = 'PC' & TY = 'BINARY' THEN    /* Download in BINARY mode */
    DO
      SAY "TARGET = PC; TYPE = BINARY"
      "ISPEXEC FILEXFER WS(PC) HOST(MF) TO(WS) BINARY"
    END
  WHEN TG = 'MF' & TY = 'TEXT' THEN      /* Upload in TEXT mode */
    DO
      SAY "TARGET = HOST; TYPE = TEXT"
      "ISPEXEC FILEXFER WS(PC) HOST(MF) TO(HOST) TEXT"
    END
  WHEN TG = 'MF' & TY = 'BINARY' THEN    /* Upload in BINARY mode */
    DO
      SAY "TARGET = HOST; TYPE = BINARY"
      "ISPEXEC FILEXFER WS(PC) HOST(MF) TO(HOST) BINARY"
    END
  OTHERWISE NOP
END
IF RC /= 0 THEN
  DO
    SAY 'FILEXFER FAILED; RETURN CODE ='  RC
    SIGNAL EOJ_FAST
  END
ISPEXEC WSDISCON
"LMCLOSE DATAID("FILEIN")"

EOJ_FAST:
ZISPFRC = RC
Say 'Input Records Read =' FILEIN_CT
SAY "ZISPFRC =" ZISPFRC
SAY "************ Messages from REXX program FILEXFER - END   ****************"
SAY " "
ADDRESS ISPEXEC "VPUT (ZISPFRC) SHARED"
EXIT ZISPFRC
