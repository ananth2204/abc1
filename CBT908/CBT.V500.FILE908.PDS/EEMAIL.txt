/* REXX NAME:  EEMAIL   ----------------------------------------------*/
/* Store the contents of the file or report being edited in a temp    */
/*    file and then invoke CEMAIL.                                    */
/* -------------------------------------------------------------------*/
Address ISREDIT MACRO
Address ISREDIT "(lrecl) = DATA_WIDTH"

/* --------------------------------------------------------- *
 * Create a temp file to contain the file or report.         *
 * --------------------------------------------------------- */
Address TSO
parse value time() with hh":"mm":"ss
ddn  = "sp"hh""mm""ss  /* include timestamp to make file name unique */
if sysvar('syspref') = sysvar('sysuid') then
   dsn = "'"sysvar("sysuid")".eEMAIL."ddn"'"
else
   dsn = "'"sysvar(syspref)"."sysvar("sysuid")".eEMAIL."ddn"'"

"Alloc f("ddn") new spa(90,90) tr" ,
 "dsn("dsn") release" ,
 "recfm(f b) lrecl("lrecl") blksize(0)"

Address ISPEXEC "VGET ZPANELID SHARED"
IF SUBSTR(ZPANELID,1,3) = "LIB" THEN   /* If invoked from ELIPS */
  CALL Use_Stem_and_EXECIO /* (ELIPS not compatible with ISREDIT REPLACE) */
ELSE
  CALL Use_ISREDIT_REPLACE /* For ISPF, SDSF, use much faster method */

"Free f("ddn")"

/* --------------------------------------------------------- *
 * execute the CEMAIL REXX passing the temp file name.       *
 * --------------------------------------------------------- */
address ispexec
"Select cmd("CEMAIL dsn") NewAppl(ISR)"

/* ------------------------------------------ *
 * Delete the temp file and then Exit.        *
 * ------------------------------------------ */
 Address TSO
 call msg "off"
 "Delete" dsn
 exit 0

/* ------------------------------------------ *
 * Called routines follow ...                 *
 * ------------------------------------------ */
Use_ISREDIT_REPLACE:
/* say "Using ISREDIT REPLACE" */
   Address ISREDIT "REPLACE "dsn" .ZFIRST .ZLAST"
Return

Use_Stem_and_EXECIO:
/* say "Using STEM and EXECIO" */
   Address ISREDIT "(first) = LINENUM .zfirst"
   Address ISREDIT "(last) = LINENUM .zlast"
   i = 0
   do linenum = first to last /* Store edited module in stem */
       i = i + 1
       Address ISREDIT "(temp) = LINE" linenum
       line.i = temp
   end
   Address TSO
   "EXECIO * diskw "ddn" (finis stem line." /* Write all to temp file */
Return
