{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011913000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1998724, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 11, "INMDSNAM": "CBT.V500.FILE389.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1998724, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1998724, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE389.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00!\\x08'", "DS1TRBAL": "b'mN'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x02\\xc9\\x00\\x05\\x02\\xcb\\x00\\x08\\x00\"'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$$$$$$": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x93\\x10o\\x00\\x96\\x05\\x7f\\x19\\x16\\x00\\x1a\\x00\\x0e\\x00\\x00\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-04-16T00:00:00", "modifydate": "1996-02-26T19:16:00", "lines": 26, "newlines": 14, "modlines": 0, "user": "SBGCSC"}, "text": "With very minor change to INIT and CTGPL source (move $HASPEQU up\ntill right after the SETC instructions near the end), this version\nassembles and works on JES2 Version 5.2.0.   (S.GOLOB per J.SCHUDEL)\n\nThis is a quick and dirty hack to get QUEUE working with JES2 5.1.0.\n\nIt is based on the old NERDC QUEUE command for JES2 2.2.0,\nas modified by William B. Hecox to work with JES2 Version 4.\n\n$$JCL should be used as the model to assemble and link the program.\n\nThere are probably problems with system affinities, especially with\nsystem numbers greater than 7.\n\nPlease fix any problems you find, and then send the fixes to:\n\n Jack Schudel\n Northeast Regional Data Center\n 233 Space Sciences Research Building\n University of Florida\n Gainesville, FL 32611\n 904-392-4601\n 904-392-9440 FAX\n\n schudel@ufl.edu         (the best way to reach me!)\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$$$#DATE": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x046\\x00\\x00\\x01\\x022\\x1f\\x01\\x022\\x1f\\x11 \\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf4@@@'", "ispf": {"version": "04.54", "flags": 0, "createdate": "2002-11-17T00:00:00", "modifydate": "2002-11-17T11:20:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-454"}, "text": "REGULAR CBT TAPE - VERSION 454    FILE:  389\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT454.FILE389\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 87 MEMBERS COUNTED; CUMULATIVE SIZE IS 18,273 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   11/17/02    11:20:53    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$JCL": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00\\x00\\x00\\x942/\\x00\\x96\\x05\\x7f\\x19\\x17\\x00S\\x00R\\x00\\x08\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "1994-11-18T00:00:00", "modifydate": "1996-02-26T19:17:00", "lines": 83, "newlines": 82, "modlines": 8, "user": "SBGCSC"}, "text": "//*  ----  THIS VERSION WORKS FOR JES2 5.1.0 AND FOR 5.2.0.  ----  *//\n//Q510    JOB  ,'ASSEMBLE QUEUE',\n//  RESTART=RESTART,\n//  REGION=2048K,\n//  COND=(4,LT),\n//  MSGCLASS=T\n/*JOBPARM Q=F,I\n//*\n//QASM   PROC  M=\n//ASM    EXEC  PGM=IEV90,REGION=3500K,           (IBM ASSEMBLER H)\n// PARM='DECK,RENT,NOLOAD,TEST,SYSPARM=(NERDC,CKPTV=J2SPL0)'\n//STEPLIB  DD  DSN=NERDC.SLAC.ASMH,DISP=SHR          SLAC ASSEMBLER\n//SYSLIB   DD  DSN=JES2.SHARE.NERDC.Q510,DISP=SHR QUEUE MACRO LIBRARY\n//         DD  DSN=JES2.V510.TEST.MODMAC,DISP=SHR LOCAL MACRO CHANGES\n//         DD  DSN=JES2.V510.TEST.HASPSRC,DISP=SHR JES2 MACRO LIB\n//         DD  DSN=SYS1.MACLIB,DISP=SHR           SYSTEM MACRO LIBRARY\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR          SYSTEM MACRO LIBRARY\n//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=VIO\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=A\n//SYSIN    DD  DISP=SHR,DSN=JES2.SHARE.NERDC.Q510(&M)\n//SYSPUNCH DD  DSN=JES2.V510.Q.OBJECT(&M),DISP=OLD\n//*\n//PEND   PEND\n//*\n//QCOMMON  EXEC QASM,M=Q0\n//ACTIVE   EXEC QASM,M=ACTIVE\n//ALLOCATE EXEC QASM,M=ALLOCATE\n//AUTH     EXEC QASM,M=AUTH\n//CDIE     EXEC QASM,M=CDIE\n//CHCT     EXEC QASM,M=CHCT\n//CIOT     EXEC QASM,M=CIOT\n//CJCT     EXEC QASM,M=CJCT\n//CJHIST   EXEC QASM,M=CJHIST\n//CJOE     EXEC QASM,M=CJOE\n//CJQE     EXEC QASM,M=CJQE\n//CKPT     EXEC QASM,M=CKPT\n//CPDDB    EXEC QASM,M=CPDDB\n//CPFK     EXEC QASM,M=CPFK\n//CQUIET   EXEC QASM,M=CQUIET\n//CSPIN    EXEC QASM,M=CSPIN\n//CTSO     EXEC QASM,M=CTSO\n//DDNAME   EXEC QASM,M=DDNAME\n//DISPLAY  EXEC QASM,M=DISPLAY\n//FINDJOB  EXEC QASM,M=FINDJOB\n//FINDPDDB EXEC QASM,M=FINDPDDB\n//HELP     EXEC QASM,M=HELP\n//HEXBLK   EXEC QASM,M=HEXBLK\n//HEXDUMP  EXEC QASM,M=HEXDUMP\n//INIT     EXEC QASM,M=INIT\n//INITS    EXEC QASM,M=INITS\n//JCL      EXEC QASM,M=JCL\n//JLOG     EXEC QASM,M=JLOG\n//JMSG     EXEC QASM,M=JMSG\n//LIST     EXEC QASM,M=LIST\n//LISTDS   EXEC QASM,M=LISTDS\n//PARSE    EXEC QASM,M=PARSE\n//PRINT    EXEC QASM,M=PRINT\n//QUEUE    EXEC QASM,M=QUEUE\n//READSPC  EXEC QASM,M=READSPC\n//REPOS    EXEC QASM,M=REPOS\n//SAVE     EXEC QASM,M=SAVE\n//SEARCH   EXEC QASM,M=SEARCH\n//SYSLOG   EXEC QASM,M=SYSLOG\n//SYSOUT   EXEC QASM,M=SYSOUT\n//XDS      EXEC QASM,M=XDS\n//*\n//RESTART  EXEC PGM=IEFBR14\n//CTGPS    EXEC QASM,M=CTGPS\n//FORMAT   EXEC QASM,M=FORMAT\n//*\n//LKED   EXEC  PGM=IEWL,PARM='TERM,XREF,LIST,LET,TEST',\n//             COND=(7,LT)\n//SYSLMOD  DD  DSN=NER.S685.PGMLIB,DISP=SHR\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(2,1))\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=A\n//SYSLIB   DD  DISP=SHR,DSN=JES2.V510.Q.OBJECT\n//SYSLIN   DD  *\n INCLUDE SYSLIB(Q0)\n INCLUDE SYSLIB(QUEUE)\n ENTRY QUEUE\n NAME Q510(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$CLDOC": {"ttr": 523, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "THIS MEMBER ($CLDOC) DOCUMENTS THE CHANGES MADE TO THE QUEUE COMMAND\nON THE SHARE JES2 MODS TAPE.  THE CHANGES WERE MADE BY:\n\n     JOHN KINN\n     LOCKHEED, CALIFORNIA COMPANY\n     PLANT A-1, BUILDING 67, DEPARTMENT 8321\n     P.O. BOX 551\n     BURBANK, CALIFORNIA 91520\n\n     PHONE: (818) 847-7492\n\n     SHARE INSTALLATION CODE = CL\n\n\nCL001 -- USE THE NUMBER OF AVAILABLE TRACK GROUPS FOR ACTIVE SPOOL\n         EXTENTS RATHER THAN THE MAXIMUM POSSIBLE IN USE FOR\n         PERCENTAGE COMPUTATIONS IN MODULE CTGPS.\n\nCL002 -- MODIFY THE FIND COMMAND TO ALLOW UNQUOTED STRINGS\n\nCL003 -- ALTER THE FTIM COMMAND TO SUPPORT MVS/XA SYSLOG\n\nCL004 -- ADD THE COMMAND JHIS TO THE HELP LIST.\n\nCL005 -- FORMAT THE INFORMATION FOR A JQE IN THE SETUP QUEUE\n\nCL006 -- WHEN QUEUE IS INVOKED, THE DATA SET NAME PREFIX FOR\n         THE HASPCKPT AND HASPACE DATA SETS CAN BE SPECIFIED\n         VIA THE KEYWORD PREFIX(XXXX).  THE UNIT AND VOLUME SERIAL\n         CAN ALSO BE SPECIFIED BY GIVING THE UNIT AND VOL KEYWORDS\n         RESPECTIVELY.  THUS THE SYNTAX OF THE INITIAL QUEUE COMMAND\n         IS AS FOLLOWS:\n           (1) QUEUE\n           (2) QUEUE CMD\n           (3) QUEUE * PREFIX(XYZ)\n           (4) QUEUE CMD PREFIX(XYZ)\n           (5) QUEUE * VOL(ABCDEF)\n           (6) QUEUE CMD VOL(ABCDEF)\n            ETC\n         IN (1) THE DEFAULT PREFIX, UNIT, AND VOL (I.E. THE ONES\n         ASSEMBLED IN QCOMMON) ARE USED AS WELL AS THE DEFAULT\n         INITIAL COMMAND (ASSEMBLED AS HELP).\n         IN (2) THE INITIAL COMMAND IS 'CMD' RATHER THAN 'HELP'\n         IN (3) THE INITIAL COMMAND IS 'HELP' BUT THE JES2 DATA\n         SET PREFIXES ARE CHANGED TO XYZ.\n         IN (4) THE INITIAL COMMAND IS 'CMD' AND THE JES2 PREFIX\n         IS XYZ.\n         IN (5) THE INITIAL COMMAND IS 'HELP' BUT THE VOLUME SERIAL\n         FOR THE CHECKPOINT IS CHANGED TO ABCDEF.\n         IN (6) THE INITIAL COMMAND IS 'CMD' AND THE CHECKPOINT\n         VOLUME SERIAL IS CHANGED TO ABCDEF.\n\nCL007 -- DO NOT DISPLAY PDDB (IN 'ALL' MODE) IF IT IS A\n         PLACEHOLDER\n\nCL    -- 1) IOT COMMAND\n         2) ALL FUNCTIONS ARE NOW SUPPORTED FOR SYSTEM JQES\n               LIST, DJ, SPIN, SAVE, ETC.\n         3) NON-CONTIGUOUS SPOOL EXTENTS NOW WORK\n\nCL008 -- SL COMMAND WITH NO OPERANDS NOW WORKS (AS IT IS DOCUMENTED TO)\n\nCL009 -- TGPS WILL NOTE THOSE JOBS CURRENTLY EXECUTING IN ITS\n         TOP 15 USERS OF TRACK GROUPS\n\nCL010 -- FIX ABEND0C4 IN LISTDS IF SKIPPING A SPANNED RECORD WITH\n         CARRIAGE CONTROL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$CLJCL": {"ttr": 525, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//J2S215  JOB  (X3600,42),R.G.PACE,CLASS=I,MSGCLASS=G,\n//             NOTIFY=@222339,TYPRUN=XCAN,RESTART=RESTART\n//*\n/*JOBPARM      ROOM=JES2,S=ANY\n//*\n//QASM   PROC  M=\n//ASM    EXEC  PGM=IEV90,REGION=3500K,           (IBM ASSEMBLER H)\n// PARM='DECK,RENT,NOLOAD,SYSPARM=(NOACF2,SP133,LOCKHEED)'\n//STEPLIB  DD  DSN=JES2.S215.LINKLIBT,DISP=SHR    SLAC MOD ASSEMBLER\n//SYSLIB   DD  DSN=JES2.S215.QUEUE,DISP=SHR       QUEUE MACRO LIBRARY\n//         DD  DSN=JES2.S215.MTS,DISP=SHR         LOCAL MACRO CHANGES\n//         DD  DSN=JES2.S215.SOURCE,DISP=SHR      JES2 MACRO LIB\n//         DD  DSN=SYS1.MACLIB,DISP=SHR           SYSTEM MACRO LIBRARY\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR          SYSTEM MACRO LIBRARY\n//         DD  DSN=JES2.ACF314.MACROS,DISP=SHR    ACF2 MACRO LIBRARY\n//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=VIO\n//SYSTERM  DD  SYSOUT=A,HOLD=YES\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=JES2.S215.QUEUE(&M)\n//SYSPUNCH DD  DSN=JES2.S215.PUNCH(&M),DISP=OLD\n//*\n//PEND   PEND\n//*\n//RESTART  EXEC PGM=IEFBR14\n//QCOMMON  EXEC QASM,M=Q0\n//ACTIVE   EXEC QASM,M=ACTIVE\n//ALLOCATE EXEC QASM,M=ALLOCATE\n//AUTH     EXEC QASM,M=AUTH\n//CDIE     EXEC QASM,M=CDIE\n//CHCT     EXEC QASM,M=CHCT\n//CIOT     EXEC QASM,M=CIOT\n//CJCT     EXEC QASM,M=CJCT\n//CJHIST   EXEC QASM,M=CJHIST\n//CJOE     EXEC QASM,M=CJOE\n//CJQE     EXEC QASM,M=CJQE\n//CKPT     EXEC QASM,M=CKPT\n//CPDDB    EXEC QASM,M=CPDDB\n//CPFK     EXEC QASM,M=CPFK\n//CSPIN    EXEC QASM,M=CSPIN\n//CTGPS    EXEC QASM,M=CTGPS\n//CTSO     EXEC QASM,M=CTSO\n//DDNAME   EXEC QASM,M=DDNAME\n//DISPLAY  EXEC QASM,M=DISPLAY\n//FINDJOB  EXEC QASM,M=FINDJOB\n//FINDPDDB EXEC QASM,M=FINDPDDB\n//FORMAT   EXEC QASM,M=FORMAT\n//HELP     EXEC QASM,M=HELP\n//HEXBLK   EXEC QASM,M=HEXBLK\n//HEXDUMP  EXEC QASM,M=HEXDUMP\n//INIT     EXEC QASM,M=INIT\n//INITS    EXEC QASM,M=INITS\n//JCL      EXEC QASM,M=JCL\n//JLOG     EXEC QASM,M=JLOG\n//JMSG     EXEC QASM,M=JMSG\n//LIST     EXEC QASM,M=LIST\n//LISTDS   EXEC QASM,M=LISTDS\n//PARSE    EXEC QASM,M=PARSE\n//PRINT    EXEC QASM,M=PRINT\n//QUEUE    EXEC QASM,M=QUEUE\n//READSPC  EXEC QASM,M=READSPC\n//REPOS    EXEC QASM,M=REPOS\n//SAVE     EXEC QASM,M=SAVE\n//SEARCH   EXEC QASM,M=SEARCH\n//SYSLOG   EXEC QASM,M=SYSLOG\n//SYSOUT   EXEC QASM,M=SYSOUT\n//XDS      EXEC QASM,M=XDS\n//*\n//LKED   EXEC  PGM=IEWL,PARM='TERM,XREF,LIST,LET,TEST',\n//             COND=(7,LT)\n//*YSLMOD  DD  DSN=SYS1.LOCKLIB,DISP=SHR                       CJKAUG84\n//SYSLMOD  DD  DSN=JES2.S215.LINKLIBT,DISP=SHR\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(2,1))\n//SYSTERM  DD  SYSOUT=A,HOLD=YES\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=JES2.S215.PUNCH\n//SYSLIN   DD  *\n INCLUDE SYSLIB(Q0)\n INCLUDE SYSLIB(QUEUE)\n ENTRY QUEUE\n SETCODE AC(1)\n NAME QUEUE(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$HELP": {"ttr": 528, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": ")F FUNCTION -\n  THE QUEUE COMMAND IS USED TO INTERROGATE THE SYSTEM QUEUES IN ORDER\n  TO DETERMINE THE STATUS OF A JOB OR GROUP OF JOBS. IT ALSO PROVIDES\n  ACCESS TO ALL PARTS OF A JOB WHILE IT IS ON THE QUEUE.\n\n  FOR MORE INFORMATION, TYPE IN - QUEUE HELP.\n)X SYNTAX -\n         QUEUE  OPERAND    DEFAULT OPERAND IS HELP.   USE AN OPERAND OF\n         Q                 VOL(VOLSER) UNIT(TYPE) PREFIX(XXXX) CMD.\n                           TO ALLOCATE A JES2 CHECKPOINT DATASET OTHER\n                           THAN THE STANDARD DATASET. THE DEFAULTS\n                           ARE:    PREFIX(SYS1) UNIT(SYSALLDA)\n                                   VOL(BLANKS) TO USE SYSTEM CATALOG.\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$INST220": {"ttr": 530, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\nFOR FURTHER INFORMATION ON THIS VERSION OF THE QUEUE COMMAND CONTACT:\n\nJACK SCHUDEL\nNORTHEAST REGIONAL DATA CENTER\n233 SSRB, UNIVERSITY OF FLORIDA\nGAINESVILLE, FLORIDA  32611\n(904) 392-4601\nSHARE CODE - UF\n\n\nTHIS VERSION OF QUEUE CONTAINS SUPPORT FOR JES2 2.2.0 ONLY.\n\n\nIN THE NERDC ENVIRONMENT, USE OF THE QUEUE COMMAND IS RESTRICTED TO\nSYSTEMS PROGRAMMING PERSONNEL INVOLVED IN JES2 MAINTENANCE, AND THERE\nHAVE BEEN SEVERAL COMMANDS ADDED FOR THIS USAGE.  AN ATTEMPT HAS BEEN\nMADE TO REQUIRE THAT THE COMMANDS THAT ALLOW THE UNRESTRICTED ACCESS\nTO SPOOL DATA AND CONTROL BLOCKS BE AVAILABLE TO ONLY AUTHORIZED USERS,\nBUT THERE WERE ALSO CHANGES MADE TO ALLOW THOSE AUTHORIZED USERS FULL\nACCESS TO THE SYSTEM WITHOUT HAVING ANY NAMING CONVENTION RESTRICTIONS\nIMPOSED UPON THEM.  IT IS THEREFORE NORMAL FOR AN AUTHORIZED USER\nTO BE ABLE TO USE THE LIST COMMAND AGAINST ANY JOB IN THE SYSTEM\nINSTEAD OF HAVING TO USE THE XD COMMAND.\n\nTHE COMMAND ONLY NEEDS TO RUN AUTHORIZED FOR THE FOLLOWING COMMANDS\nCANCEL, REQUEUE, AND PURGE. IF YOU DO NOT MARK THE CODE AC=1, THESE\nTHREE COMMANDS WILL NOT FUNCTION.\n\n========================================================================\n\nINSTALLATION PROCEDURE FOR QUEUE:\n\n     1. Q0 IS THE COMMON AREA.\n        QCOMMON, QSTART, QSTOP, QTILT, AND $JQT ARE MACROS.\n        OTHER MEMBERS NOT STARTING WITH $ OR # ARE RENT SOURCE MODULES\n        (SEE MEMBER $$JCL FOR A COMPLETE LIST).\n        (USERS OF THE OLD QUEUE COMMAND WILL NOTICE THAT ALL OF THE\n         Q1 - QNN MODULES HAVE BEEN RENAMED TO MAKE LIFE EASIER ON ME.)\n        #HELP IS THE TSO HELP MEMBER.\n        $$JCL IS SAMPLE JCL TO ASSEMBLE AND LINK QUEUE.\n        #TABLE IS A SAMPLE SMP JOB TO AUTHORIZE THE QUEUE COMMAND.\n\n     2. EDIT MACRO QSTART CHANGING THE FOLLOWING PARAMETERS:\n\n        &QDSPRFX  CORRESPONDS TO &DSNPRFX.\n        &QCKPTV   IS ONLY REQUIRED IF SYS1.HASPCKPT IS NOT CATALOGUED.\n        &Q1CMD    IS THE FIRST COMMAND ISSUED.\n        &QPF(n)   ARE THE DEFAULT PFK SETTINGS.\n\n        EDIT THE MACRO QSTART TO INDICATE THE OPTIONS DESIRED,\n        OR SPECIFY THEM AS SYSPARM INPUT TO THE ASSEMBLER.\n        IT IS USUALLY EASIEST TO SPECIFY THE OPTIONS AS SYSPARM\n        INPUT TO THE ASSEMBLER, SINCE THIS WILL ENSURE THAT ANY\n        COMPLEX OPTION DEPENDENCIES ARE RESOLVED.\n        IT WILL BE NECESSARY TO LOOK AT THE MACRO FOR A DESCRIPTION\n        OF THE OPTIONS AVAILABLE.\n        INSTALLATION SPECIFIC OPTIONS SHOULD NOT BE SPECIFIED.\n        THESE USUALLY DEPEND UPON MODIFICATIONS THAT ARE ONLY\n        PRESENT AT THE NAMED INSTALLATION, AND ARE PROVIDED FOR\n        THOSE INSTALLATIONS THAT HAVE PROVIDED ENHANCEMENTS TO THIS\n        VERSION OF QUEUE.\n\n        AT PRESENT THERE IS SUPPORT IN THE INITIALIZATION MODULE TO\n        DYNAMICALLY ALLOCATE THE CHECKPOINT ON EITHER 3330, 3330-1,\n        3350, OR 3380. IF YOU ARE FORTUNATE ENOUGH TO HAVE A DRUM OR\n        SOMETHING ELSE YOU WILL HAVE TO MODIFY INIT TO ADD SUPPORT.\n\n     3. EDIT MEMBER $$JCL TO CHANGE THE JCL TO FIT YOUR STANDARDS.\n        DO NOT ALTER THE ORDER OF THE ASSEMBLY SYSLIBS AS THERE IS A\n        CONFLICT ON THE MACRO QSTART.\n\n        THE SUPPLIED JCL GENERATES A SINGLE LOAD MODULE WHICH IS NOT\n        REENTRANT.  THIS IS IDEAL FOR TESTING, BUT MAY NOT BE DESIRED IN\n        A PRODUCTION ENVIRONMENT.  TO GENERATE A REENTRANT VERSION OF\n        THE COMMAND, LINK ALL MODULES EXCEPT Q0 AS A SINGLE PROGRAM\n        NAMED QUEUE (ALIAS Q) INTO SYS1.LPALIB.  IT WILL NEED AN\n        AUTHORIZATION CODE OF 1 IF YOU DESIRE TO USE THE CANCEL,\n        REQUEUE, AND PURGE COMMANDS.  THE LINKEDIT OF MODULE QUEUE WILL\n        GENERATE AN UNRESOLVED EXTERNAL REFERENCE FOR MODULE QCOMMON,\n        WHICH IS NORMAL AND SHOULD BE IGNORED.  MODULE Q0 SHOULD THEN BE\n        ASSEMBLED AND LINKED INTO SYS1.LINKLIB OR SYS1.CMDLIB WITH A\n        NAME OF QUEUECMN.  IT MUST NOT BE LINKED WITH RENT.\n        IF YOU WANT TO CHANGE THE NAME OF QUEUECMN, THE ONLY REFERENCE\n        TO IT IS IN MEMBER INIT WHERE THE LINK IS ISSUED.\n        (YES, THE NAME OF THE Q0 MODULE IS DIFFERENT FROM THE NAME\n        ON THE UNRESOLVED EXTERNAL REFERENCE MESSAGE.)\n\n     4. IF THE CANCEL, REQUEUE, AND PURGE COMMANDS ARE DESIRED, ADD\n        QUEUE (ALIAS Q) TO THE IKJEFTE2 MODULE WHICH IS THE TSO LIST\n        OF AUTHORIZED COMMANDS. A SAMPLE SMP JOB IS PROVIDED IN THE\n        MEMBER TABLE. QUEUE CAN BE RUN UNDER SPF BUT THE SUBCOMMANDS\n        USING THE SUBSYSTEM INTERFACE (CANCEL, REQUEUE, AND DELETE)\n        WILL BE INOPERABLE, ALL OTHER COMMANDS WILL FUNCTION NORMALLY.\n        IF YOU DON'T MIND THE INTEGRITY PROBLEM YOU CAN ADD CODE TO\n        QUEUE TO USE A SPECIAL SVC TO GET INTO SUPERVISOR STATE AND\n        HAVE FULL FACILITY UNDER SPF.\n\nSOME OF THE CODE MAY BE DEPENDENT ON ASSEMBLER H, BUT ALL THAT SHOULD\nBE NEEDED IS TO MOVE SOME OF THE DSECTS AROUND TO GET THEM IN THE\nPROPER ORDER FOR THE OTHER ASSEMBLERS.\n\nTO MAKE IT EASIER TO ENTER CERTAIN COMMANDS, COMMAND NAMES MAY NOW\nBE UP TO FOUR CHARACTERS.\n\nMEMBER $LOG IS A CHRONOLOGICAL LIST OF THE CHANGES THAT HAVE BEEN MADE\nTO THIS PROGRAM, AND SHOULD BE CONSULTED BY USERS WHO HAVE A PREVIOUS\nVERSION AND WANT TO KNOW WHAT HAS BEEN CHANGED.\n\nMEMBER $UFDOC  IS A LIST OF THE INDIVIDUAL UF... MODIFICATIONS.\nMEMBER $CLDOC  IS A LIST OF THE INDIVIDUAL CL... MODIFICATIONS.\nMEMBER $ONLDOC IS A LIST OF THE INDIVIDUAL ONL.. MODIFICATIONS.\n\n========================================================================\n\n WHEN QUEUE IS INVOKED, THE DATA SET NAME PREFIX FOR\n THE HASPCKPT AND HASPACE DATA SETS CAN BE SPECIFIED\n VIA THE KEYWORD PREFIX(XXXX).  THE UNIT AND VOLUME SERIAL\n CAN ALSO BE SPECIFIED BY GIVING THE UNIT AND VOL KEYWORDS\n RESPECTIVELY.  THUS THE SYNTAX OF THE INITIAL QUEUE COMMAND\n IS AS FOLLOWS:\n   (1) QUEUE\n   (2) QUEUE CMD\n   (3) QUEUE * PREFIX(XYZ)\n   (4) QUEUE CMD PREFIX(XYZ)\n   (5) QUEUE * VOL(ABCDEF)\n   (6) QUEUE CMD VOL(ABCDEF)\n    ETC\n IN (1) THE DEFAULT PREFIX, UNIT, AND VOL (I.E. THE ONES\n ASSEMBLED IN QCOMMON) ARE USED AS WELL AS THE DEFAULT\n INITIAL COMMAND (ASSEMBLED AS HELP).\n IN (2) THE INITIAL COMMAND IS 'CMD' RATHER THAN 'HELP'\n IN (3) THE INITIAL COMMAND IS 'HELP' BUT THE JES2 DATA\n SET PREFIXES ARE CHANGED TO XYZ.\n IN (4) THE INITIAL COMMAND IS 'CMD' AND THE JES2 PREFIX\n IS XYZ.\n IN (5) THE INITIAL COMMAND IS 'HELP' BUT THE VOLUME SERIAL\n FOR THE CHECKPOINT IS CHANGED TO ABCDEF.\n IN (6) THE INITIAL COMMAND IS 'CMD' AND THE CHECKPOINT\n VOLUME SERIAL IS CHANGED TO ABCDEF.\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "$JCL220": {"ttr": 534, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//Q220    JOB  ,'ASSEMBLE QUEUE',\n//  REGION=2048K,\n//  RESTART=RESTART,\n//  COND=(4,LT),\n//  MSGCLASS=D\n/*JOBPARM Q=F,I\n//*\n//QASM   PROC  M=\n//ASM    EXEC  PGM=IEV90,REGION=3500K,           (IBM ASSEMBLER H)\n// PARM='DECK,RENT,NOLOAD,TEST,SYSPARM=(NERDC)'\n//STEPLIB  DD  DSN=NERDC.SLAC.ASMH,DISP=SHR          SLAC ASSEMBLER\n//SYSLIB   DD  DSN=JES2.B21.Q.CNTL,DISP=SHR       QUEUE MACRO LIBRARY\n//         DD  DSN=JES2.B21.MODMAC,DISP=SHR       LOCAL MACRO CHANGES\n//         DD  DSN=JES2.B21.TEST.HASPSRC,DISP=SHR JES2 MACRO LIB\n//         DD  DSN=SYS1.MACLIB,DISP=SHR           SYSTEM MACRO LIBRARY\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR          SYSTEM MACRO LIBRARY\n//         DD  DSN=ACF2.ACFMAC,DISP=SHR           ACF2 MACRO LIBRARY\n//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=VIO\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=A\n//SYSIN    DD  DISP=SHR,DSN=JES2.B21.Q.CNTL(&M)\n//SYSPUNCH DD  DSN=JES2.B21.Q.OBJECT(&M),DISP=OLD\n//*\n//PEND   PEND\n//*\n//QCOMMON  EXEC QASM,M=Q0\n//ACTIVE   EXEC QASM,M=ACTIVE\n//ALLOCATE EXEC QASM,M=ALLOCATE\n//AUTH     EXEC QASM,M=AUTH\n//CDIE     EXEC QASM,M=CDIE\n//CHCT     EXEC QASM,M=CHCT\n//CIOT     EXEC QASM,M=CIOT\n//CJCT     EXEC QASM,M=CJCT\n//CJHIST   EXEC QASM,M=CJHIST\n//CJOE     EXEC QASM,M=CJOE\n//CJQE     EXEC QASM,M=CJQE\n//CKPT     EXEC QASM,M=CKPT\n//CPDDB    EXEC QASM,M=CPDDB\n//CPFK     EXEC QASM,M=CPFK\n//CSPIN    EXEC QASM,M=CSPIN\n//CTGPS    EXEC QASM,M=CTGPS\n//CTSO     EXEC QASM,M=CTSO\n//DDNAME   EXEC QASM,M=DDNAME\n//DISPLAY  EXEC QASM,M=DISPLAY\n//FINDJOB  EXEC QASM,M=FINDJOB\n//FINDPDDB EXEC QASM,M=FINDPDDB\n//FORMAT   EXEC QASM,M=FORMAT\n//HELP     EXEC QASM,M=HELP\n//HEXBLK   EXEC QASM,M=HEXBLK\n//HEXDUMP  EXEC QASM,M=HEXDUMP\n//INIT     EXEC QASM,M=INIT\n//INITS    EXEC QASM,M=INITS\n//JCL      EXEC QASM,M=JCL\n//JLOG     EXEC QASM,M=JLOG\n//JMSG     EXEC QASM,M=JMSG\n//LIST     EXEC QASM,M=LIST\n//LISTDS   EXEC QASM,M=LISTDS\n//PARSE    EXEC QASM,M=PARSE\n//PRINT    EXEC QASM,M=PRINT\n//QUEUE    EXEC QASM,M=QUEUE\n//READSPC  EXEC QASM,M=READSPC\n//REPOS    EXEC QASM,M=REPOS\n//SAVE     EXEC QASM,M=SAVE\n//SEARCH   EXEC QASM,M=SEARCH\n//SYSLOG   EXEC QASM,M=SYSLOG\n//SYSOUT   EXEC QASM,M=SYSOUT\n//XDS      EXEC QASM,M=XDS\n//*\n//RESTART EXEC PGM=IEFBR14\n//INIT     EXEC QASM,M=INIT\n//*\n//LKED   EXEC  PGM=IEWL,PARM='TERM,XREF,LIST,LET,TEST',\n//             COND=(7,LT)\n//SYSLMOD  DD  DSN=NER.S685.PGMLIB,DISP=SHR\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(2,1))\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=A\n//SYSLIB   DD  DISP=SHR,DSN=JES2.B21.Q.OBJECT\n//SYSLIN   DD  *\n INCLUDE SYSLIB(Q0)\n INCLUDE SYSLIB(QUEUE)\n ENTRY QUEUE\n NAME Q220(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$JQT": {"ttr": 770, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO -- JQT -- PHONY DSECT TO DESCRIBE FIRST CKPT REC\n         $JQT\n*                                                                 WGH\n*   SEE MODULE HASPTABS ENTRY $QINDEX                             WGH\n*                                                                 WGH\n*   SOME COMMENTS IN MODULES SEARCH AND FORMAT ARE MISLEADING     WGH\n*   AS TO WHAT QUEUES ARE BEING SEARCHED.                         WGH\n*                                                                 WGH\nJQTDSECT DSECT\n*                 $PURGE   04  (NOT SEARCHED)                     WGH\nJQTOUT   DS    F  $HARDCPY 08 HEADER FOR PRINT/PUNCH JQES         RNB19\nJQTAWOUT DS    F  $OUTPUT  12 HEADER FOR OUTPUT JQES (AWAITING)   RNB19\nJQTRCV   DS    F  $RECEIV  16 HEADER FOR NJE RECEIVE              WGH\nJQTSETUP DS    A  $SETUP   20      HEADER FOR SETUP JQES          CL005\nJQTXMIT  DS    F  $XMIT    24 HEADER FOR NJE XMIT                 WGH\nJQTINPUT DS    F  $INPUT   28 HEADER FOR ??                       WGH\nJQTXEQ   DS    F  $XEQ     32 HEADER FOR XEQ (CONVERSION) JQE'S   RNB19\nJQTSTC   DS    F           36                                     UF020\nJQTTSU   DS    F           40 HEADER FOR TSO USER JQES            UF020\nJQTCLSA  DS    F           44 HEADER FOR CLASS A JQES             UF020\n*        DS    35F    ADDITIONAL CLASS QUEUES B - 9               WGH\n*        DS    F  $DUMMY  188      $SPIN                          WGH\n*                                                                 WGH\n*   CALCULATION FOR JQTQMAX---------------------------            WGH\n*                   $PURGE  (DO NOT COUNT)                        WGH\n*                   JQTOUT - JQTTSU               9               WGH\n*                   CLASS QUEUES A - 9           36               WGH\n*          $SPIN    $DUMMY QUEUE                  1               WGH\n*                                               ----              WGH\n*                                                46               WGH\n*                                                                 WGH\nJQTQMAX  EQU   46             MAXIMUM NUMBER OF QUEUES            UF020\n*                             (SHOULD BE $JQTYPES-1 FROM HCT)     UF020\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$JQTO": {"ttr": 772, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO -- JQT -- PHONY DSECT TO DESCRIBE FIRST CKPT REC\n         $JQT\nJQTDSECT DSECT\nJQTOUT   DS    F              HEADER FOR PRINT/PUNCH JQES         RNB19\nJQTAWOUT DS    F              HEADER FOR OUTPUT JQES (AWAITING)   RNB19\n         DS    1A                                                 CL005\nJQTSETUP DS    A                   HEADER FOR SETUP JQES          CL005\n         DS    2A                                                 CL005\nJQTXEQ   DS    F              HEADER FOR XEQ (CONVERSION) JQE'S   RNB19\nJQTSTC   DS    F                                                  UF020\nJQTTSU   DS    F              HEADER FOR TSO USER JQES            UF020\nJQTCLSA  DS    F              HEADER FOR CLASS A JQES             UF020\nJQTQMAX  EQU   46             MAXIMUM NUMBER OF QUEUES            UF020\n*                             (SHOULD BE $JQTYPES-1 FROM HCT)     UF020\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$LOG": {"ttr": 774, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\nLOG OF MODIFICATIONS AND DISTRIBUTION VERSIONS.\n\n\n15 NOV 81  CURRENT QUEUE LEVEL - SP\n           PLACED ON CBT MODS TAPE VER 182\n\n30 DEC 81  PDDB COMMAND AND FIXES FOR SYSLOG\n\n09 FEB 82  FIX FOR DO/HO COMMAND\n\n10 MAR 82  FIX FOR $MAXNODE\n           PLACED ON CBT MODS TAPE VER 190\n\n07 MAY 82  PLACED ON JES2 MODS TAPE VER SP-001\n\n02 JUN 82  2ND PANEL OF HELP GENERATED BLANK SCREEN AT END (Q8)\n           CHANGE XI COMMAND TO USE $SVMAXCL (Q23)\n           FIX X0C4 IN DC COMMAND (Q24)\n           ADD CONDITIONAL ASSEMBLY SWITCH FOR DBC (Q10)\n\n01 JUL 82  CHANGES TO ALLOW ASSEMBLY UNDER ASM FX.\n\n03 JUL 82  PLACED ON JES2 TAPE VER 003.\n\n27 JUL 82  FIX JOEBUSY ERROR IN Q7 (FORMAT).\n\n10 AUG 82  SET &QSP=1 TO GENERATE SP VERSION BY DEFAULT.\n\n11 AUG 82  INCORPORATE RAINIER NATIONAL BANK MODIFICATIONS.\n           (SEE MEMBER $RNBDOC).\n\n11 AUG 82  PLACED ON JES2 MODS TAPE SP-004.\n\n22 AUG 82  PLACED ON CBT MODS TAPE V???.\n\n01 SEP 82  ADD Q35 JOB HISTORY COMMAND FROM INTEL.\n\n02 SEP 82  UF031 - CHANGE DISPLAY (Q5) TO NOT SEND X'FF' TO THE TUBE.\n\n08 SEP 82  CHANGE Q35 FOR PROPER REMOTE DEFINITIONS WITH SP2.\n           UF032 - ADD NERDC GLOBAL TO ALLOW FOR LOCAL SUPPORT.\n           UF033 - CHANGE HELP (Q8) TO PROPERLY GENERATE PLUS SIGNS.\n\n10 SEP 82  PLACED ON JES2 MODS TAPE SP-005.\n\n22 SEP 82  UF034 - CHANGE FINDJOB TO ISSUE ERROR MESSAGE IF USER\n                   ATTEMPTS TO USE \"*\" AND HAS NEVER SET A JOBID.\n\n27 SEP 82  UF035 - CHANGE FINDJOB FOR SYSLOG COMMAND.\n                   THE SYSLOG COMMAND MAY NOW HAVE AN OPERAND OF\n                       \"SYSLOG\", OR NULL - EITHER WILL GIVE SYSLOG OF\n                       ACTIVE SYSTEM.\n                   THE OPERAND MAY ALSO BE THE SMFID OF THE DESIRED\n                       SYSTEM.\n                   HELP HAS BEEN CHANGED TO INDICATE THIS.\n           UF024 - CHANGE Q10 INIT TO HANDLE THE ESTAE CREATION IN A\n                   RENT FASHION.\n\n27 SEP 82  PLACED ON JES2 MODS TAPE SP-007.\n\n08 OCT 82  FIXES FROM WALT FARRELL TO CORRECT PROBLEM WITH LINE COUNTS\n               FOR JOBS ACTIVE ON REMOTES. (Q7 - RNB28).\n           FIX TO Q20 (REALLY PART OF RNB16) TO DELETE LINE ABOVE\n               LABEL PRTJOE THAT WAS SETTING JOEJQE TO ZEROS.\n               (THE HIGH BYTE IS FLAGS THAT INDICATE IF THE JOB\n               IS ACTIVE).\n\n11 OCT 82  PLACED ON JES2 MODS TAPE SP-008.\n\n11 OCT 82  UF036 - SPIN COMMAND PROCESSOR ADDED TO SPIN A COPY OF THE\n                   CURRENT DATASET TO SYSOUT.\n\n13 OCT 82  UF037 - SUPPORT FOR 3380.\n\n25 OCT 82  UF038 - ADD TGPS COMMAND TO LIST THE 20 JOBS WITH THE LARGEST\n                   NUMBER OF ALLOCATED TRACK GROUPS.\n           RENAME MEMBERS OF PDS TO BE THE CSECT NAME INSTEAD OF THOSE\n                   SILLY Q NUMBERS.  (IT WAS GETTING TO BE A REAL PAIN).\n\n27 OCT 82  FIX ERROR IN UF035 FINDJOB FOR SYSLOG TESTS.\n           UF039 - CHANGE CKPT READ TO USE MULTIPLE DECB'S FOR SPEED.\n                   (COMPLETED 11 NOV 82)\n\n11 NOV 82  CHANGE DOCUMENTATION TO REFLECT THE FACT THAT THE MODULES\n                   HAVE BEEN RENAMED.\n           UF039 - COMPLETED CHANGES FOR CHECKPOINT READ SPEEDUP.\n           UF041 - CHANGE TSO COMMAND PROCESSOR FOR TCAM SCREEN CLEAR.\n\n15 NOV 82  CHANGE LISTDS TO PRINT JOBNAME AND DSID PROPERLY IF\n                   \"L * +\" COMMAND IS ISSUED.\n           UF043 - ADD PFK COMMAND TO LIST AND CHANGE DEFINITIONS.\n\n06 DEC 82  UF044 - CHANGE READSPC TO ADD ADDITIONAL VALIDITY CHECKS\n                   FOR THE PASSED IN VALUE OF MTTR.\n\n16 DEC 82  UF043 - CHANGE HELP FOR PFK COMMAND.\n\n21 DEC 82  NOTE -  IT IS POSSIBLE FOR THE SYSTEM TO GENERATE S0C1\n                   OR S0C9 ABENDS DURING THE DD COMMAND.  IF THIS\n                   HAPPENS, CHECK THE LINKEDIT TO SEE IF THE LENGTH\n                   OF THE FINDPDDB ROUTINE (OR ANY OTHER MODULE) IS\n                   ZERO.  IF IT IS, RELINK QUEUE WITH AN EXPLICIT\n                   INCLUDE CARD FOR THE MODULE.\n                   THE PROBLEM IS THAT SOMEWHERE THERE IS A CSECT CARD\n                   WITH THE WRONG NAME ON IT.  IN THIS CASE, MODULE\n                   CPDDB HAD A FINDPDDB CSECT CARD IN IT INSTEAD OF THE\n                   PROPER ONE (CPDDB).  IT HAS BEEN FIXED AS OF\n                   23 DEC 82, BUT THERE ARE PROBABLY OLD VERSIONS OUT\n                   THAT STILL HAVE THE PROBLEM.\n\n24 JAN 83  PLACED ON JES2 MODS TAPE SP-009.\n\n15 FEB 83  UF083 - CHANGE TGPS COMMAND TO ALSO LIST THE NUMBER OF JOBS\n                   THAT HAVE CERTAIN NUMBERS OF TRACK GROUPS ASSIGNED\n                   TO MAKE IT POSSIBLE TO SEE IF THE NUMBER OF BUFFERS\n                   IN A TRACK GROUP IS REASONABLE.\n\n20 MAR 83  NOTE -  FOR THE QUEUE COMMAND TO SET QXAUTH BASED UPON\n                   THE USER HAVING THE TSO OPER FLAG SET, IT IS\n                   NECESSARY FOR THE COMMAND TO BE INVOKED AS A TSO\n                   COMMAND, NOT VIA CALL.\n                   THIS IS BECAUSE THE CODE ASSUMES THAT UPON ENTRY\n                   R1 IS POINTING TO THE CPPL, AND THE CALL ENVIRONMENT\n                   DOES NOT SET THINGS UP IN THIS WAY.  NO CHECKING IS\n                   DONE TO VERIFY THE ENVIRONMENT UPON ENTRY, OR EVEN\n                   IF THE FIELDS POINTED TO BY R1 ARE EVEN IN THE\n                   ADDRESSABLE REGION.\n\n29 APR 83  PLACED ON JES2 MODS TAPE SP-011.\n\n09 SEP 83  OAK RIDGE NATIONAL LAB (OR) QAUTH CHECKING MODS ADDED.\n\n09 SEP 83  UF045 - IF MODEL COMMAND IS ISSUED WITHOUT AN OPERAND, AN\n                   ABEND S0C7 WILL OCCUR.\n                   CODE IS ADDED IN LISTDS TO PREVENT THE ABEND.\n\n18 OCT 83  UF046 - SUPPORT FOR THE SP 1.3.3 LEVEL OF JES2 (HJE2329).\n\n28 MAR 84  OAK RIDGE NATIONAL LAB (OR) FIX FOR DD COMMAND UNDER 1.3.3.\n\n11 APR 84  CHANGE DDNAME COMMAND FOR SP 1.3.0 TO PROPERLY LOCATE THE\n           PDDBS IN THE IOT.\n\n20 JUN 84  CHANGES TO ALLOW PRINTING OUTPUT FROM DUMMY JOBS (RMT...)\n           AFFECTS FINDJOB AND LISTDS.\n\n29 JUN 84  CHANGE INIT TO INCREASE THE SIZE OF THE TABLE OF LINE\n           NUMBERS TO MTTR'S FROM 64K TO 256K TO ALLOW LOOKING AT\n           DUMPS WITH MORE THAN 500,000 RECORDS.\n\n31 AUG 84  SUPPORT FOR SP 1.3.4.\n           THE ONLY PROBLEM WAS THAT THE $HCT EXPANSION GOT AN\n           UNDEFINED SYMBOL FOR $DRAINED, WHICH WAS ADDED TO THE\n           3 MODULES THAT NEEDED THE HCT (INIT, CHCT, CTGPS).\n\n10 SEP 84  CHANGE INIT TO FIX A TYPO TO CHANGE 4059 TO 4095.\n\n17 SEP 84  ADD CL MODS TO SUPPORT \"SYSTEM\" JOBS, THE IOT COMMAND,\n           AND REMOVED SPOOL VOLUMES.\n\n09 OCT 84  ADD ADDITIONAL CL MODS AS DESCRIBED IN MEMBER $CLDOC.\n\n25 OCT 84  ADD ADDITIONAL OR MODS AS DESCRIBED IN MEMBER $ONLDOC.\n\n26 OCT 84  PLACED ON JES2 MODS TAPE SP-\n\n19 NOV 84  FIX TO UF011 (HEXDUMP + QCOMMON) TO USE NEW FIELD IN\n           QCOMMON TO BUILD THE TEXT STRING INTO, INSTEAD OF\n           USING QPLINE.  (PRINT OF A HEXDUMP AREA WOULD BLANK\n           THE FIRST LINE OF THE FOLLOWING PAGE OF HEX, BECAUSE\n           BOTH WERE USING THE SAME WORKAREA.)\n\n30 NOV 84  PLACED ON JES2 MODS TAPE SP-037.\n\n03 DEC 84  ADD MEMBER $$INST TO TRY TO MAKE THE INSTALLATION\n           INSTRUCTIONS A LITTLE EASIER TO FIND, AND PERHAPS\n           EVEN A LITTLE EASIER TO UNDERSTAND.\n\n06 DEC 84  UF049 FIXES A BUG IN CKPT THAT COULD CAUSE ABEND S0C4\n           FOR RELATIVELY SMALL SYSTEMS.\n\n06 DEC 84  FIX TO FINDJOB SO SLOG WILL WORK IF ISSUED WITH NO OPERANDS.\n\n20 FEB 86  LOCKHEED MODIFICATIONS FOR SP 2.1.5 (1.3.6) LEVEL OF JES2.\n\n05 JUN 86  MODS FROM JOHN SULLIVAN TO DYNAMICALLY OBTAIN THE SYSTEM\n           IDS FROM THE QSE'S RATHER THAN HAVING TO HAVE THEM ASSEMBLED\n           IN QCOMMON.\n           ALSO CHANGE TO $JQT TO SET THE PROPER NUMBER OF SYSTEM\n           QUEUES FOR THIS RELEASE.\n\n22 AUG 86  CHANGE $JQT TO SET JQTQMAX TO 46 INSTEAD OF 47 TO ELIMINATE\n           THE ABEND S0C4.\n\n07 OCT 86  MODS FROM SAM GOLOB OF NEWSWEEK - LIVINGSTON N.J.        SBG\n              ALLOW A DSID OF 0 TO BE A VALID DSID FOR A JOB.       SBG\n           THE REASON FOR THIS MODIFICATION IS THAT RSCS VERSION    SBG\n           2.1 GIVES DSID'S OF 0 FOR JOBS IT SENDS TO MVS FOR       SBG\n           PRINTING.  MAKE -1, OR X'FFFF' THE INVALID DSID INSTEAD  SBG\n           OF ZERO.  (THESE MODIFICATIONS ARE MARKED BY MY INITIALS SBG\n           AND BY AN ISPF USERID OF \"RSCS2.1\").                     SBG\n              I'VE INTRODUCED THE POSSIBILITY FOR USERS TO MADE     SBG\n           ANOTHER CHANGE.  FOR INFO, SEE MEMBER CALLED $SBGDOC.    SBG\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$NCCSJCL": {"ttr": 778, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//Z8WGHQUE JOB (K3000,N820,999),'HECOX W',TIME=(0010,30),\n//   CLASS=O,MSGCLASS=7,NOTIFY=Z8WGH\n//*\n/*JOBPARM LINES=999\n//*\n//QASM   PROC  M=\n//ASM    EXEC  PGM=IEV90,REGION=3500K,           (IBM ASSEMBLER H)\n// PARM='DECK,RENT,NOLOAD,TEST'\n//SYSLIB   DD  DSN=K3ESA.QUEUE420.ASM,DISP=SHR\n//         DD  DSN=ESASMPE.SMPMTS,DISP=SHR\n//         DD  DSN=SYS1.HASPSRC,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=VIO\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=K3ESA.QUEUE420.ASM(&M)\n//SYSPUNCH DD  DSN=K3ESA.QUEUE420.OBJ(&M),DISP=OLD\n//*\n//PEND   PEND\n//*\n//QCOMMON  EXEC QASM,M=Q0\n//ACTIVE   EXEC QASM,M=ACTIVE\n//ALLOCATE EXEC QASM,M=ALLOCATE\n//AUTH     EXEC QASM,M=AUTH\n//CDIE     EXEC QASM,M=CDIE\n//CHCT     EXEC QASM,M=CHCT\n//CIOT     EXEC QASM,M=CIOT\n//CJCT     EXEC QASM,M=CJCT\n//CJHIST   EXEC QASM,M=CJHIST\n//CJOE     EXEC QASM,M=CJOE\n//CJQE     EXEC QASM,M=CJQE\n//CKPT     EXEC QASM,M=CKPT\n//CPDDB    EXEC QASM,M=CPDDB\n//CPFK     EXEC QASM,M=CPFK\n//CQUIET   EXEC QASM,M=CQUIET\n//CSPIN    EXEC QASM,M=CSPIN\n//CTGPS    EXEC QASM,M=CTGPS\n//CTSO     EXEC QASM,M=CTSO\n//DDNAME   EXEC QASM,M=DDNAME\n//DISPLAY  EXEC QASM,M=DISPLAY\n//FINDJOB  EXEC QASM,M=FINDJOB\n//FINDPDDB EXEC QASM,M=FINDPDDB\n//FORMAT   EXEC QASM,M=FORMAT\n//HELP     EXEC QASM,M=HELP\n//HEXBLK   EXEC QASM,M=HEXBLK\n//HEXDUMP  EXEC QASM,M=HEXDUMP\n//INIT     EXEC QASM,M=INIT\n//INITS    EXEC QASM,M=INITS\n//JCL      EXEC QASM,M=JCL\n//JLOG     EXEC QASM,M=JLOG\n//JMSG     EXEC QASM,M=JMSG\n//LIST     EXEC QASM,M=LIST\n//LISTDS   EXEC QASM,M=LISTDS\n//PARSE    EXEC QASM,M=PARSE\n//PRINT    EXEC QASM,M=PRINT\n//QUEUE    EXEC QASM,M=QUEUE\n//READSPC  EXEC QASM,M=READSPC\n//REPOS    EXEC QASM,M=REPOS\n//SAVE     EXEC QASM,M=SAVE\n//SEARCH   EXEC QASM,M=SEARCH\n//SYSLOG   EXEC QASM,M=SYSLOG\n//SYSOUT   EXEC QASM,M=SYSOUT\n//XDS      EXEC QASM,M=XDS\n//*\n//*\n//LKED   EXEC  PGM=IEWL,PARM='TERM,XREF,LIST,LET,TEST',\n//             COND=(7,LT)\n//SYSLMOD  DD  DSN=SYS3.CMDLIB,DISP=SHR\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(2,1))\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=K3ESA.QUEUE420.OBJ\n//SYSLIN   DD  *\n INCLUDE SYSLIB(Q0)\n INCLUDE SYSLIB(QUEUE)\n ENTRY QUEUE\n NAME Q420(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$NCCSJC1": {"ttr": 781, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//Z8WGHQUE JOB (K3000,N820,999),'HECOX W',TIME=(0010,30),\n//   CLASS=O,MSGCLASS=7,NOTIFY=Z8WGH\n//*\n/*JOBPARM LINES=999\n//*\n//QASM   PROC  M=\n//ASM    EXEC  PGM=IEV90,REGION=3500K,           (IBM ASSEMBLER H)\n// PARM='DECK,RENT,NOLOAD,TEST,TERM'\n//SYSLIB   DD  DSN=K3ESA.QUEUE420.ASM,DISP=SHR\n//         DD  DSN=ESASMPE.SMPMTS,DISP=SHR\n//         DD  DSN=SYS1.HASPSRC,DISP=SHR\n//         DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.MODGEN,DISP=SHR\n//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=VIO\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSIN    DD  DISP=SHR,DSN=K3ESA.QUEUE420.ASM(&M)\n//SYSPUNCH DD  DSN=K3ESA.QUEUE420.OBJ(&M),DISP=OLD\n//*\n//PEND   PEND\n//*\n//*QCOMMON  EXEC QASM,M=Q0\n//*ACTIVE   EXEC QASM,M=ACTIVE\n//*ALLOCATE EXEC QASM,M=ALLOCATE\n//*AUTH     EXEC QASM,M=AUTH\n//*CDIE     EXEC QASM,M=CDIE\n//*CHCT     EXEC QASM,M=CHCT\n//*CIOT     EXEC QASM,M=CIOT\n//*CJCT     EXEC QASM,M=CJCT\n//*CJHIST   EXEC QASM,M=CJHIST\n//*CJOE     EXEC QASM,M=CJOE\n//*CJQE     EXEC QASM,M=CJQE\n//*CKPT     EXEC QASM,M=CKPT\n//*CPDDB    EXEC QASM,M=CPDDB\n//*CPFK     EXEC QASM,M=CPFK\n//*CQUIET   EXEC QASM,M=CQUIET\n//*CSPIN    EXEC QASM,M=CSPIN\n//*CTGPS    EXEC QASM,M=CTGPS\n//*CTSO     EXEC QASM,M=CTSO\n//*DDNAME   EXEC QASM,M=DDNAME\n//*DISPLAY  EXEC QASM,M=DISPLAY\n//*FINDJOB  EXEC QASM,M=FINDJOB\n//*FINDPDDB EXEC QASM,M=FINDPDDB\n//*FORMAT   EXEC QASM,M=FORMAT\n//*HELP     EXEC QASM,M=HELP\n//*HEXBLK   EXEC QASM,M=HEXBLK\n//*HEXDUMP  EXEC QASM,M=HEXDUMP\n//*INIT     EXEC QASM,M=INIT\n//*INITS    EXEC QASM,M=INITS\n//*JCL      EXEC QASM,M=JCL\n//*JLOG     EXEC QASM,M=JLOG\n//*JMSG     EXEC QASM,M=JMSG\n//*LIST     EXEC QASM,M=LIST\n//*LISTDS   EXEC QASM,M=LISTDS\n//*PARSE    EXEC QASM,M=PARSE\n//*PRINT    EXEC QASM,M=PRINT\n//*QUEUE    EXEC QASM,M=QUEUE\n//*READSPC  EXEC QASM,M=READSPC\n//*REPOS    EXEC QASM,M=REPOS\n//*SAVE     EXEC QASM,M=SAVE\n//*SEARCH   EXEC QASM,M=SEARCH\n//*SYSLOG   EXEC QASM,M=SYSLOG\n//*SYSOUT   EXEC QASM,M=SYSOUT\n//*XDS      EXEC QASM,M=XDS\n//*\n//*\n//*LKED   EXEC  PGM=IEWL,PARM='TERM,XREF,LIST,LET,TEST,AC=1',\n//LKED   EXEC  PGM=IEWL,PARM='TERM,XREF,LIST,LET,AC=1',\n//             COND=(7,LT)\n//*            COND=(100,GT)\n//SYSLMOD  DD  DSN=SYS3.CMDLIB,DISP=SHR\n//SYSUT1   DD  UNIT=VIO,SPACE=(CYL,(2,1))\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSLIB   DD  DISP=SHR,DSN=K3ESA.QUEUE420.OBJ\n//SYSLIN   DD  *\n INCLUDE SYSLIB(Q0)\n INCLUDE SYSLIB(QUEUE)\n ENTRY QUEUE\n ALIAS Q\n NAME QUEUE(R)\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$ONLDOC": {"ttr": 784, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "THIS MEMBER ($ONLDOC) DOCUMENTS CHANGES MADE TO THE QUEUE COMMAND BY:\n\n     ROBERT M. JINKINS\n     OAK RIDGE NATIONAL LABORATORY\n     BLDG. 4500-N  MS-259\n     P.O. BOX X\n     OAK RIDGE, TENNESSEE  37830\n\n     PHONE: (615) 574-7208/5300\n             FTS  624-7208/5300\n\n     SHARE INSTALLATION CODE = OR\n\n     LAST UPDATE = MAR 84\n\n\nONL01 -- CREATED THE &QBGEN GOBAL SET SYMBOL TO CONTROL THE EXPANSION\n         OF JES2 AND SYSTEM CONTROL BLOCK DSECTS SEPARATELY FROM THE\n         EXPANSIONS OF MACROS WITHIN THE CODE CONTROLED BY &QGEN.  THE\n         QPRBGEN MACRO WAS ALSO CREATED FOR THIS PURPOSE.\n\nONL02 -- CREATED A COMMAND FUNCTION AUTHORIZATION CSECT (MEMBER AUTH)\n         AND A MACRO USED TO REQUEST AUTHORIZATION CHECKING (QAUTHCK).\n         ALL CODE CONCERNED WITH WHO USES WHICH QUEUE SUBCOMMAND, AND\n         ON WHICH JOBS, HAS BEEN MOVED TO THE AUTH CSECT.  SEE THE\n         COMMENTS AT THE BEGINNING OF THE AUTH CSECT FOR ADDITIONAL\n         INFORMATION.\n\n         THE HELP CSECT WAS REWRITTEN TO ALLOW CONTROL OVER WHO CAN\n         LOOK AT HELP INFORMATION FOR WHICH SUB-COMMANDS.  SEE THE\n         COMMENTS AT THE BEGINNING OF THE HELP CSECT FOR ADDITIONAL\n         INFORMATION.\n\n         CODE WAS ALSO ADDED TO THE INIT CSECT TO VERIFY A TSO\n         ENVIRONMENT AND TO VERIFY SOME FIELDS IN THE COMMAND PROCESSER\n         PARAMETER LIST (CPPL).  THIS CODE SUPERCEEDS THE UF010 CHANGE.\n\n         THE FOLLOWING MODS WERE RELOCATED:\n\n              FCI01 (CODE FOR MVS/SP JES2 WAS ALSO ADDED)\n              RNB03\n              RNB05\n              RNB08\n\n              NOTES:\n               (1) SOME CHANGES WERE MADE TO THE ABOVE RELOCATED\n                   CODE.  HOWEVER, THE OLD PARSE TEXT WAS USED TO\n                   AID IN THE IDENTIFICATION OF ALL CODE PERTAINNING\n                   TO A GIVEN FUNCTION.\n               (2) AS OF JUNE 1983, THE ABOVE RELOCATED CODE HAS\n                   NOT BEEN TESTED BY FCI OR RNB.\n\n         THE FOLLOWING MODS WERE SUPERCEEDED:\n\n              RNB02\n              UF033\n\nONL03 -- ENSURED THAT JCT'S AND IOT'S READ FROM THE SPOOL BELONG TO\n         THE JOB FOR WHICH THEY WERE READ.\n\nONL04 -- CHANGED THE LISTDS CSECT TO DISTINGUISH BETWEEN EMPTY AND\n         NONEXISTENT DSID'S.  ALSO, SINCE THE DSID FIELD IS OFTEN\n         CLEARED BY AUTHORIZATION CHECKING CODE, A SEPERATE FIELD IN\n         THE QCOMMON CSECT IS USED TO KEEP TRACK OF THE LAST DSID FOR\n         THE \"L * +/-\" COMMAND.  THE FINDJOB, LIST, AND LISTDS CSECT'S\n         USE THE NEW FIELD.\n\nONL05 -- CHANGED THE JLOG COMMAND TO BETTER DETERMINE IF THERE IS\n         A VALID JOB LOG.  THIS SUPERCEEDS THE RNB04 CHANGE.\n\nONL06 -- USES THE &QONL GOBAL SET SYMBOL TO ALLOW THE GENERATION\n         OF ONL'S OWN BRAND OF CONTROL IN THE AUTH CSECT.\n\nONL07 -- ADDED THE THE FOLLOWING COMMAND ABBREVIATIONS:\n\n            DELE FOR DEL\n            CANC FOR CAN\n\nONL08 -- USES THE &QONL GOBAL SET SYMBOL TO SKIP TESTING A V-TYPE\n         ADDRESS CONSTANT BEFORE LOADING QUEUECMN TO PREVENT GETING\n         CONDITION CODES ON THE LINK-EDIT.\n\nONL09 -- ADDED THE &QDSPRFX GOBAL SET SYMBOL TO DEFINE THE FIRST LEVEL\n         QUALIFIERS FOR THE HASPCKPT AND HASPACE DATA SET NAMES.  THE\n         DEFAULT IS 'SYS1'.  A VALUE OF 'JES2' IS USED IF &QONL IS SET\n         TO ONE.\n\nONL10 -- CHANGED THE \"DC\" COMMAND TO SUPPORT AN OPERAND OF \"J\" (JOB)\n         IN ADDITION TO \"B\", \"S\", AND \"T\" (BATCH, STC, AND TSU).\n\nONL11 -- ADDED SP V1.3.3 SUPPORT FOR THE DD COMMAND.\n\nONL12 -- USES THE &QONL GOBAL SET SYMBOL IN CSECT REPOS TO DO AN\n         'OLD TIME' FIND IF THE STRING BEGINS WITH A SLASH (\"/\").\n\nONL13 -- QUOTED STRING SPECIFICATIONS FOR THE FIND COMMAND MAY BE\n         DELIMITED WITH DOUBLE QUOTES AS WELL AS SINGLE QUOTES.\n         THE FIND COMMAND HELP INFORMATION HAS ALSO BEEN UPDATED.\n\nONL14 -- DEFINED THE QFLG1SDS BIT TO INDICATE WHEN THE CURRENT JOB\n         IS A SYSTEM DATA SET JOB AND DOES NOT HAVE A JCT.  THE\n         FLAG IS DEFINED IN QCOMMON, SET IN FINDJOB, AND IS TESTED\n         BY VARIOUS MODULES.\n\nONL15 -- ADDED ACF2 SP 1.3.3 SUPPORT TO THE JHIST COMMAND.\n\nONL16 -- ADJUSTED ALL JCT ADDRESSABILITY BY BUFSTART-BUFDSECT.\n\nONL17 -- USES THE &QONL GOBAL SET SYMBOL IN CSECT CJHIST TO FORMAT\n         INSTALLATION SPECIFIC INFORMATION.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$RNBDOC": {"ttr": 1025, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "THIS DATASET WAS OBTAINED FROM FILE 322 ON VER193 OF THE CBT TAPE, AND\nWAS THEN MODIFIED AT RAINIER NATIONAL BANK.\n\nRNB00 -                - MOVED DSECTS AROUND FOR IFOX ASSEMBLER\n        Q4  (DDNAME)\n        Q10 (INIT)\n        Q12 (JLOG)\n        Q15 (LISTDS)\n        Q20 (SEARCH)\n        Q25 (FINDPDDB)\n        Q26 (SYSOUT)\n        Q33 (CPPDB)\nRNB01 - Q1  (QUEUE)    - FIX TO FINAL TPUT MESSAGE TO ALLOW TO WORK WITH\n                           BOTH TCAM AND VTAM\nRNB02 - Q10 (INIT)     - REMOVE PART OF UF010: DON'T USE OPER AUTHORITY\n                           TO SET QXAUTH. ALSO UF024: DON'T USE DBC.\nRNB03 - Q10 (INIT)     - FOR RACF: IF &QRACF = 1, AND IF &QNEWUSR ISN'T\n                           NULL, THEN IF APF-AUTHORIZED CHANGE THE\n                           USERID IN THE ACEE SO THE USER CAN ACCESS A\n                           RACF-PROTECTED SPOOL/CHECKPOINT DATA SET.\n      - Q16 (PARSE)    - IF &QRACF = 1 THEN USE RACF TO CHECK AUTHORITY\n                           TO USE THE XP COMMAND.\n      - Q17 (READSPC)  - IF &QRACF = 1 THEN WHEN A JCT IS READ FROM THE\n                           SPOOL BLANK THE PASSWORD AND NEWPASSWORD.\n      - Q22 (XDS)      - IF &QRACF = 1 THEN DO A SPECIAL CHECK TO SEE IF\n                           THE USER IF ALLOWED TO DO THE XDS COMMAND.\nRNB04 - Q12 (JLOG)     - FIX TO ALLOW JLOG TO WORK FOR JOBS THAT ARE IN\n                           EXECUTION BUT THAT HAVEN'T FINISHED THE FIRST\n                           STEP. THIS WILL SHOW ONLY THE 'JOB STARTED'\n                           MESSAGE.\nRNB05 - Q14 (LIST)     - IF &QRNB = 1 THEN DO THE FOLLOWING:\n                           (1) REMOVE THE PART OF UF005 THAT ALLOWS L TO\n                               PROCESS DSID'S < 101 AND THAT ALLOWS AUTH\n                               USERS TO LIST ANY JOB.  THIS REQUIRES THE\n                               XD COMMAND TO BE USED TO LIST STRANGE\n                               THINGS.\n                           (2) ALLOW TSO USERS TO ACCESS ANY JOB THAT\n                               STARTS WITH THEIR USERID OR THAT HAS A\n                               NOTIFY FOR THEIR USERID. THIS WILL NOT\n                               BE ALLOWED FOR USERID'S STARTING WITH\n                               'PJS' DUE TO LOCAL RESTRICTIONS.\n                           (3) ALLOW TSO USERS WHOSE USERID'S START WITH\n                               'TEC' TO PROCESS ANY 'TEC...' JOB OR ANY\n                               JOB WITH A NOTIFY FOR A TEC USER. ALSO\n                               ALLOW THEM TO PROCESS OUTPUT FROM STARTED\n                               TASKS.\nRNB06 - Q16 (PARSE)    - ADDED THE FOLLOWING COMMAND ABBREVIATIONS FOR\n                           CONSISTENCY WITH PREVIOUS VERSIONS:\n                                 JC  FOR JCL\n                                 JL  FOR JLOG\n                                 JM  FOR JMSG\n                                 SL  FOR SLOG\n                                 FT  FOR FTIM\n                                 DE  FOR DEL\n                                 RE  FOR REQ\n                         ALSO, IF &QRNB = 1, DELETE COMMANDS TSO, EXEC,\n                           AND MODEL.\nRNB07 - Q24 (ACTIVE)   - WHEN LISTING BATCH JOBS SAY THEY\n                           ARE ON THE XEQ QUEUE INSTEAD OF THE INPUT\n                           QUEUE TO BE MORE CONSISTENT WITH WHAT THE\n                           OPERATORS USUALLY SEE.\nRNB08 - Q26 (SYSOUT)   - IF &QRNB = 1, ALLOW USERS TO MANIPULATE JOBS\n                           THAT START WITH THEIR USERID'S OR THAT HAVE\n                           A NOTIFY FOR THEIR USERID, UNLESS THE USERID\n                           STARTS WITH 'PJS'.\n                         IF &QRNB = 1, ALLOW 'TEC' USERS TO MANIPULATE\n                           ANY TEC JOB OR STARTED TASK OUTPUT.\nRNB09 - Q26 (SYSOUT)   - IF &QRNB = 1, FOR A REQ OPERATION, IF A NEW\n                           CLASS IS NOT GIVEN, USE CLASS C AS THE\n                           DEFAULT NEW CLASS.\nRNB10 - Q27 (PRINT)    - IF &QRNB = 1, USE C AS THE DEFAULT SYSOUT\n                           CLASS.\nRNB11 - Q4  (DDNAME)   - ALLOW DDNAME COMMAND TO BE\n                           ISSUED AS   DDNAME JOBID S\n                           WHERE THE S INDICATES THAT THE SPIN DATA\n                           SETS SHOULD ALSO BE LISTED. THIS WAS ADDED\n                           BECAUSE WE HAVE SOME LONG RUNNING BATCH JOBS\n                           (IMS) THAT SPIN THINGS AND THE STANDARD Q\n                           COMMAND DOESN'T SEARCH THE SPIN Q FOR BATCH\n                           JOBS.\nRNB12 - Q4  (DDNAME)   - IF &QSP = 1, DON'T FORMAT THE MESSAGE 'ALREADY\n                           PRINTED', AS IT APPEARS THAT THE FLAG BIT\n                           IN THE PDDB IS NOT USED ANY MORE, CAUSING\n                           ALL SPIN DATA SETS TO APPEAR PRINTED, EVEN\n                           WHEN THEY'RE NOT.\nRNB13 - Q5  (DISPLAY)  - FIX SOME PROBLEMS WITH TCAM\n                           AND THE PROCESSING OF THE TEST-REQUEST,\n                           SYSTEM-REQUEST, AND THE PA2/PA3 KEYS.\nRNB14 - Q5  (DISPLAY)  - BUG FIX FOR FULL-SCREEN PROCESSING. WITH THIS\n                           FIX THE USER CAN ENTER A COMMAND IN EITHER\n                           INPUT FIELD, NOT JUST THE BOTTOM ONE.\nRNB15 - Q5  (DISPLAY)  - RESTORE THE PFK DEFINITIONS FOR\n                           PF7/8 TO '- 27' AND '+ 27' AS ORIGINALLY\n                           SUPPLIED BY THE ICBC MOD. WE DON'T HAVE\n                           THE OTHER 3278 MODELS, AND SCROLLING IS\n                           EASIER THIS WAY. WITH NERDC'S CHANGES TO\n                           MAKE THE KEYS 'PB' AND 'PF' IT IS DIFFICULT\n                           TO SCROLL UP OR DOWN A FEW LINES.\nRNB16 - Q20 (SEARCH)   - PROCESS BOTH THE LOCAL AND REMOTE QUEUES FOR\n                           JOBS AWAITING PRINT/PUNCH.\n                         ALSO FIX A BUG IN UF020 THAT WAS CLEARING THE\n                           JOEFLAG  WHEN JUST THE JOEJQE POINTER SHOULD\n                           BE CLEARED.\nRNB17 - Q7  (FORMAT)   - WHEN FORMATTING JOES:\n                           (1) IF THE JOE IS BEING PROCESSED BY PSO,\n                               INDICATE EXT-WTR FOR A DEVICE TYPE.\n                           (2) USE $JOEBUSY FLAG TO INDICATE WHETHER JOB\n                               IS REALLY PRINTING/PUNCHING. OTHERWISE,\n                               AN INTERRUPTED JOB STILL SHOWS AS ON THE\n                               PRINTER/PUNCH.\n                           (3) FOR SP2, FIX A BUG IN GETTING TO THE\n                               CHECKPOINT JOE AND IN COMPUTING THE LINES\n                               LEFT TO PRINT/PUNCH.\n                           (4) FOR SP2, IF THE JOE IS NOT ACTIVE, BUT\n                               THE CHECKPOINT JOE IS VALID, SHOW THE\n                               LINES LEFT, NOT THE ORIGINAL LINE COUNT.\nRNB18 - Q7  (FORMAT)   - DISTINGUISH BETWEEN JOES WITH REMOTE ROUTING\n                           AND THOSE WITH SPECIAL LOCAL ROUTING (DESTID\n                           INITIALIZATION STATEMENT IN JES PARMS).\nRNB19 - Q20 (SEARCH)   - FOR STATUS OR DJ COMMANDS IN THE SP2 VERSION,\n                           ALSO SEARCH THE DUMP Q, THE CONVERSION Q,\n                           AND THE OUTPUT Q. THIS ALLOWS THE USER TO\n                           FIND HIS JOB IF IT'S AWAITING DUMP, AWAITING\n                           CONVERSION, OR AWAITING OUTPUT PROCESSING.\n      - Q7  (FORMAT)   - WHEN LISTING JQE'S, DON'T ASSUME INPUT QUEUE\n                           BUT USE JQETYPE INSTEAD. ALSO, SPECIAL\n                           HANDLING FOR AWAITING CONVERSION, AWAITING\n                           DUMP, AND AWAITING OUTPUT.\nRNB20 - Q7  (FORMAT)   - DISTINGUISH BETWEEN NORMAL HOLD, HELD VIA $HA,\n                           AND DUPLICATE HOLD. ALSO, FOR JOES, IF THE\n                           SELECT=NO FLAG IS ON, FLAG WITH S=N TO SHOW\n                           WHY THE OUTPUT WON'T PRINT.\nRNB21 - Q7  (FORMAT)   - FIX THE SETDEVIC ROUTINE FOR SP2 SO THE PROPER\n                           DEVICE NAMES SHOW UP FOR JOBS ON PRINTERS,\n                           ETC.\nRNB22 - Q6  (FINDJOB)  - IF JOBNAME = *, AFTER READING THE JCT, ENSURE\n                           THAT JQEJNAME = JCTJNAME AND THAT QPJOBID =\n                           JCTJBKEY IN CASE THE JOB HAS PURGED AND THE\n                           JCT HAS BEEN REUSED SINCE WE LAST READ THE\n                           CHECKPOINT. THIS IS UNLIKELY, BUT SEEMS TO BE\n                           POSSIBLE.\nRNB23 - Q8  (HELP)     - MISCELLANEOUS CHANGES TO THE NERDC HELP INFO.\n                           THE ORIGINAL NERDC VERSION IS MEMBER $Q8, AND\n                           THE OLD RNB MEMBER IS #Q8.\nRNB24 - Q23 (INITS)    - BUG FIX, AS SUGGESTED BY JACK SHUDEL\nRNB25 - Q7  (FORMAT)   - ADD 'COUNT' OPTION TO THE HO COMMAND TO HELP\n                           FIND WHICH JOBS ARE TIEING UP SPOOL SPACE.\n                           WHEN THE COUNT OPTION IS USED, THE JCT FOR\n                           EACH JQE WITH HELD OUTPUT WILL BE READ AND\n                           THE JCT TOTAL LINE COUNT WILL BE DISPLAYED.\nRNB26 - Q24 (ACTIVE)   - BUG FIX (SORT OF): THE DC COMMAND WAS SHOWING\n                           A LOT OF STRANGE JOBS. THIS FIX MAKES IT MORE\n                           REASONABLE, BUT IT'S STILL NOT QUITE RIGHT.\n                           ALL OF THE STARTED TASKS, E.G. TCAM, DON'T\n                           SHOW UP.\n\n========================================================================\nKNOWN PROBLEMS:\n  (1) DC S DOESN'T SHOW ALL OF THE STARTED TASKS.\n  (2) JOE PRIORITIES ARE (PROBABLY) INCORRECT, AS THE CALCULATIONS\n      CHANGED FOR SP2 AND Q HASN'T BEEN UPDATED TO REFLECT THAT.\n  (3) IT APPEARS THAT THE LINE COUNTS FOR JOBS ON A REMOTE PRINTER ARE\n      MAINTAINED DIFFERENTLY THAT FOR JOBS ON A LOCAL PRINTER. THIS HAS\n      NOT BEEN FULLY RESEARCHED YET, BUT IT SEEMS THAT THE LINE COUNT\n      REPORTED BY Q FOR A JOB ON A REMOTE PRINTER IS APPROXIMATELY THE\n      NUMBER OF LINES PRINTED, NOT THE NUMBER THAT REMAIN TO BE PRINTED.\n  (4) ONLY 2 (POSSIBLY 3) CHARACTER REMOTE NUMBERS CAN BE USED.\n  (5) NJE NODE NUMBERS ARE IGNORED.\n  (6) THE NJE JOB/SYSOUT TRANSMITTERS AND RECEIVERS ARE IGNORED AS\n      DEVICES AND AS QUEUES.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$SBGDOC": {"ttr": 1029, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x01\\x00$?\\x01\\x00)\\x9f\\x112\\x00!\\x00!\\x00\\x00\\xe6\\xe2\\xc2\\xc7@@@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-08-30T00:00:00", "modifydate": "2000-10-25T11:32:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "WSBG"}, "text": "    CHANGES MADE TO QUEUE 1.3.6-2.1.5 BY SAM GOLOB OF NEWSWEEK.     SBG\n                                                                    SBG\n ****  SEE NOTE AT BOTTOM  *****                                    SBG\n                                                                    SBG\n          MAILING ADDRESS:    SAM GOLOB                             SBG\n                              P.O. BOX 906                          SBG\n                              TALLMAN, NY 10982-0906                SBG\n                                                                    SBG\n                                                                    SBG\n          EMAIL:  SBGOLOB@ATTGLOBAL.NET AND/OR                      SBG\n                  SBGOLOB@AOL.COM                                   SBG\n                                                                    SBG\n                                                                    SBG\n07 OCT 86  MODS FROM SAM GOLOB OF NEWSWEEK - LIVINGSTON N.J.        SBG\n              ALLOW A DSID OF 0 TO BE A VALID DSID FOR A JOB.       SBG\n           THE REASON FOR THIS MODIFICATION IS THAT RSCS VERSION    SBG\n           2.1 GIVES DSID'S OF 0 FOR JOBS IT SENDS TO MVS FOR       SBG\n           PRINTING.  MAKE -1, OR X'FFFF' THE INVALID DSID INSTEAD  SBG\n           OF ZERO.  (THESE MODIFICATIONS ARE MARKED BY MY INITIALS SBG\n           AND BY AN ISPF USERID OF \"RSCS2.1\").                     SBG\n                                                                    SBG\n   NOTE.  AFTER DISPLAYING A REAL DATASET, QUEUE WILL REMEMBER      SBG\n            ITS JOB NUMBER AND DSID.  IF YOUR NEXT COMMAND AFTER    SBG\n            DISPLAYING A REAL DATASET, DISPLAYS A NON-VALID         SBG\n            DATASET (FOR INSTANCE--YOU DO A LIST, AND THEN A        SBG\n            HELP COMMAND), A REPOSITION UP OR DOWN WILL GET YOU     SBG\n            BACK TO YOUR FORMER REAL DATASET.  THIS IS SURPRISING   SBG\n            BUT TRUE.                                               SBG\n          IF YOU WANT TO NULLIFY THIS \"MEMORY\" OF THE LAST REAL     SBG\n            DATASET YOU LOOKED AT, I HAVE INCLUDED A MEMBER         SBG\n            CALLED NULLDSID.  JUST PUT ITS CODE AT THE BEGINNING    SBG\n            OF ANY NON-REAL-DATASET COMMAND, AND THE \"MEMORY\"       SBG\n            WILL VANISH FROM THAT COMMAND.                          SBG\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$UFDOC": {"ttr": 1031, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "\nUF MODIFICATION DESCRIPTIONS\n\n\nFOR FURTHER INFORMATION ON THESE MODIFICATIONS PLEASE CONTACT:\n\nJACK SCHUDEL\nNORTHEAST REGIONAL DATA CENTER\n233 SSRB, UNIVERSITY OF FLORIDA\nGAINESVILLE, FLORIDA  32611\n(904) 392-4601\nSHARE CODE - UF\n\n\nTHIS VERSION OF QUEUE WAS DERIVED FROM FILE 278 OF THE CBT MODS TAPE,\nWHICH HAD BEEN OBTAINED FROM VERSION 18 OF THE SHARE JES2 PROJECT TAPE.\nIT HAS BEEN RUN ON THE FOLLOWING VERSIONS OF JES2 (ASSUMING THAT THE\nAPPROPRIATE SYSPARM OPTIONS HAVE BEEN SET):\n       JES2 4.1\n       JES2 NJE 3.1\n       MVS/SP-JES2 RELEASE 3\n\nIN THE NERDC ENVIRONMENT, USE OF THE QUEUE COMMAND IS RESTRICTED TO\nSYSTEMS PROGRAMMING PERSONNEL INVOLVED IN JES2 MAINTENANCE, AND THERE\nHAVE BEEN SEVERAL COMMANDS ADDED FOR THIS USAGE.  AN ATTEMPT HAS BEEN\nMADE TO REQUIRE THAT THE COMMANDS THAT ALLOW THE UNRESTRICTED ACCESS\nTO SPOOL DATA AND CONTROL BLOCKS BE AVAILABLE TO ONLY AUTHORIZED USERS,\nBUT THERE WERE ALSO CHANGES MADE TO ALLOW THOSE AUTHORIZED USERS FULL\nACCESS TO THE SYSTEM WITHOUT HAVING ANY NAMING CONVENTION RESTRICTIONS\nIMPOSED UPON THEM.  IT IS THEREFORE NORMAL FOR AN AUTHORIZED USER\nTO BE ABLE TO USE THE LIST COMMAND AGAINST ANY JOB IN THE SYSTEM\nINSTEAD OF HAVING TO USE THE XD COMMAND.\n\nTHE COMMAND ONLY NEEDS TO RUN AUTHORIZED FOR THE FOLLOWING COMMANDS\nCANCEL, REQUEUE, AND PURGE. IF YOU DO NOT MARK THE CODE AC=1, THESE\nTHREE COMMANDS WILL NOT FUNCTION.\n\nINSTALLATION PROCEDURE FOR QUEUE:\n\n     1. Q0 IS THE COMMON AREA.\n        QCOMMON, QSTART, QSTOP, QTILT, AND $JQT ARE MACROS.\n        OTHER MEMBERS NOT STARTING WITH $ OR # ARE RENT SOURCE MODULES\n        (SEE MEMBER $NERJCL FOR A COMPLETE LIST).\n        (USERS OF THE OLD QUEUE COMMAND WILL NOTICE THAT ALL OF THE\n         Q1 - QNN MODULES HAVE BEEN RENAMED TO MAKE LIFE EASIER ON ME.)\n        #HELP IS THE TSO HELP MEMBER.\n        $NERJCL IS THE JCL TO ASSEMBLE AND LINK QUEUE.\n        TABLE IS A SAMPLE SMP JOB TO AUTHORIZE THE QUEUE COMMAND.\n\n     2. EDIT MEMBER QCOMMON CHANGING THE FOLLOWING PARAMETERS:\n\n        UNIT=XXXX THE DEVICE TYPE FOR SYS1.HASPCKPT.\n        VOLSER=YYYYYY THE VOLUME SERIAL FOR SYS1.HASPCKPT.\n        SID1-SID7=ZZZZ THE SMF IDS FOR EACH CPU IN THE COMPLEX. THE\n        IDS MUST BE IN THE SAME ORDER AS IN THE INITIALIZATION DECK.\n\n        AT PRESENT THERE IS SUPPORT IN THE INITIALIZATION MODULE TO\n        DYNAMICALLY ALLOCATE THE CHECKPOINT ON EITHER 3330, 3330-1,\n        3350, OR 3380. IF YOU ARE FORTUNATE ENOUGH TO HAVE A DRUM OR\n        SOMETHING ELSE YOU WILL HAVE TO MODIFY INIT TO ADD SUPPORT.\n\n        EDIT THE MACRO QSTART TO INDICATE THE OPTIONS DESIRED,\n        OR SPECIFY THEM AS SYSPARM INPUT TO THE ASSEMBLER.\n        IT WILL BE NECESSARY TO LOOK AT THE MACRO FOR A DESCRIPTION\n        OF THE OPTIONS AVAILABLE.\n\n     3. EDIT MEMBER $NERJCL TO CHANGE THE JCL TO FIT YOUR STANDARDS.\n        DO NOT ALTER THE ORDER OF THE ASSEMBLY SYSLIBS AS THERE IS A\n        CONFLICT ON THE MACRO QSTART.  THE DBCSYMED PROGRAM THAT IS USED\n        AFTER THE ASSEMBLIES IS A PART OF THE YALE DBC PROGRAM PRODUCT\n        AVAILABLE FROM CSR.  IT EDITS THE GENERATED SYM CARDS IN THE\n        OBJECT DECK TO REMOVE NULL ENTRIES AND MOST OF THE DUPLICATE\n        ONES.  IF THE PROGRAM IS NOT AVAILABLE, SIMPLY DELETE THE STEP\n        AND CHANGE THE ASSEMBLER SYSPUNCH REFERENCE.\n\n        THE SUPPLIED JCL GENERATES A SINGLE LOAD MODULE WHICH IS NOT\n        REENTRANT.  THIS IS IDEAL FOR TESTING, BUT MAY NOT BE DESIRED IN\n        A PRODUCTION ENVIRONMENT.  TO GENERATE A REENTRANT VERSION OF\n        THE COMMAND, LINK ALL MODULES EXCEPT Q0 AS A SINGLE PROGRAM\n        NAMED QUEUE (ALIAS Q) INTO SYS1.LPALIB.  IT WILL NEED AN\n        AUTHORIZATION CODE OF 1 IF YOU DESIRE TO USE THE CANCEL,\n        REQUEUE, AND PURGE COMMANDS.  THE LINKEDIT OF MODULE QUEUE WILL\n        GENERATE AN UNRESOLVED EXTERNAL REFERENCE FOR MODULE QUEUECMN,\n        WHICH IS NORMAL AND SHOULD BE IGNORED.  MODULE Q0 SHOULD THEN BE\n        ASSEMBLED AND LINKED INTO SYS1.LINKLIB OR SYS1.CMDLIB WITH A\n        NAME OF QUEUECMN.  IF YOU WANT TO CHANGE THE NAME OF QUEUECMN,\n        THE ONLY REFERENCE TO IT IS IN MEMBER INIT WHERE THE LINK IS\n        ISSUED.\n\n     4. IF THE CANCEL, REQUEUE, AND PURGE COMMANDS ARE DESIRED, ADD\n        QUEUE (ALIAS Q) TO THE IKJEFTE2 MODULE WHICH IS THE TSO LIST\n        OF AUTHORIZED COMMANDS. A SAMPLE SMP JOB IS PROVIDED IN THE\n        MEMBER TABLE. QUEUE CAN BE RUN UNDER SPF BUT THE SUBCOMMANDS\n        USING THE SUBSYSTEM INTERFACE (CANCEL, REQUEUE, AND DELETE)\n        WILL BE INOPERABLE, ALL OTHER COMMANDS WILL FUNCTION NORMALLY.\n        IF YOU DON'T MIND THE INTEGRITY PROBLEM YOU CAN ADD CODE TO\n        QUEUE TO USE A SPECIAL SVC TO GET INTO SUPERVISOR STATE AND\n        HAVE FULL FACILITY UNDER SPF.\n\nUSERS THAT DO NOT HAVE THE UICC JTIP PACKAGE INSTALLED WILL NEED TO\nEITHER CHANGE THE QSTART MACRO OR SPECIFY NOJTIP IN THE ASSEMBLER\nSYSPARM OPTIONS.\n\nUSERS THAT DO NOT HAVE THE YALE DBC PACKAGE INSTALLED SHOULD\nEITHER CHANGE THE QSTART MACRO OR SPECIFY NODBC IN THE ASSEMBLER\nSYSPARM OPTIONS.  IF DBC IS SPECIFIED BUT THE PACKAGE DOES NOT\nEXIST, ALL THAT WILL HAPPEN IS THAT A MESSAGE WILL FLASH ON THE\nUSER'S TERMINAL INDICATING THAT THE LOAD FOR MODULE DBC FAILED.\nTHIS MESSAGE CAN BE IGNORED.\n\nSOME OF THE CODE MAY BE DEPENDENT ON ASSEMBLER H, BUT ALL THAT SHOULD\nBE NEEDED IS TO MOVE SOME OF THE DSECTS AROUND TO GET THEM IN THE\nPROPER ORDER FOR THE OTHER ASSEMBLERS.\n\nFOR FURTHER INFORMATION ON THE SUPPORT FOR MVS/SP-JES2 RELEASE 2 AND\nABOVE, SEE MEMBER $SP.\n\nTO MAKE IT EASIER TO ENTER CERTAIN COMMANDS, COMMAND NAMES MAY NOW\nBE UP TO FOUR CHARACTERS.\n\nMEMBER $LOG IS A CHRONOLOGICAL LIST OF THE CHANGES THAT HAVE BEEN MADE\nTO THIS PROGRAM, AND SHOULD BE CONSULTED BY USERS WHO HAVE A PREVIOUS\nVERSION AND WANT TO KNOW WHAT HAS BEEN CHANGED.\n\nFOLLOWING IS A LIST OF THE INDIVIDUAL MODIFICATIONS:\n\nUF001  ALLOW QUEUE COMMAND TO ASSEMBLE USING NJE3.1 SOURCE CODE.\n       A FEW EQUATES AND ADDITIONAL DSECTS WERE INCLUDED, WHICH SHOULD\n       BE OK FOR NON-NJE SOURCE AS WELL.\n\nUF002  ALLOW QCOMMON TO BE LINKED IN FOR TESTING.\n       WE RUN WITH SEVERAL DIFFERENT SPOOL PACK FORMATS DURING TEST,\n       AND IT IS CONVENIENT TO HAVE MULTIPLE VERSIONS OF QUEUE TO\n       SUPPORT THESE DIFFERENT TEST VERSIONS.\n       IT IS ALSO MUCH SIMPLER TO RUN UNDER TSO TEST.\n\nUF003  SUPPORT FOR 3278 MODELS 2, 3, 4, AND 5.\n       WE HAVE A WIDE ASSORTMENT OF TERMINALS IN-HOUSE, SO QUEUE WAS\n       MODIFIED TO SUPPORT ALL TERMINAL TYPES AS BASIC MODEL 2, AND\n       TO ALLOW THE USER TO SWITCH TO THE LARGER SCREEN FORMAT AT ANY\n       TIME DURING HIS SESSION.\n       THIS CODE IS CURRENTLY RUNNING UNDER ACF/VTAM REL 2, BUT WAS\n       DEVELOPED UNDER ACF/VTAM REL 1, AND HAS ALSO RUN WITH TCAM AT\n       THE 8011 LEVEL.\n\nUF004  ADD A TITLE CARD FOR Q0 (QCOMMON).\n\nUF005  DO NOT CHECK FOR JOBNAME MATCHING TSO LOGON ID IF QXAUTH=1.\n       ALSO ALLOW READING DSID'S LESS THAN 101 IF QXAUTH=1.\n       DSID'S LESS THAN 101 ARE SOMETIMES USEFUL TO LOOK AT;  THE\n       INTERNAL TEXT FILE MAKES IT EASIER TO LOCATE THE PROPER DSID\n       IN A SYSGEN WHERE ALL STEPNAMES ARE \"ASM\", AND IN A VM NETWORK\n       ENVIRONMENT IT IS COMMON TO HAVE OUTPUT DSID'S OF 1.\n\nUF006  ONLY READ THE CHECKPOINT IF THE INFORMATION IS NEEDED.\n       THE READ OF THE CHECKPOINT IS REMOVED FROM THE MAIN EXECUTION\n       LOOP, SINCE IT IS REALLY SILLY TO READ A LARGE CHECKPOINT DATASET\n       WHEN THE USER COMMAND IS TO JUST REPOSTITION WITHIN THE CURRENT\n       FILE.\n\nUF007  CHANGE COMMANDS \"DD *\" AND \"L * DSID\" TO USE THE LAST JOBNAME\n       IF A \"*\" IS SPECIFIED.  THIS MAKES IT EASIER TO TYPE, AND CODE\n       IS ADDED TO SKIP THE CHECKPOINT READ FOR PERFORMANCE REASONS.\n       IT IS STRONGLY RECOMMENDED THAT THE \"*\" BE USED INSTEAD OF THE\n       JOB NAME/NUMBER SINCE THE RESPONCE TIME IS SO MUCH BETTER.\n\nUF008  HAVE THE FINDPDDB ROUTINE START AT THE FIRST IOT IF PDDB IS NOT\n       FOUND.  A MIXTURE OF SPIN AND REGULAR PDDB'S USED TO CAUSE\n       THE ROUTINE TO SCAN TO THE END OF THE IOT'S AND STAY THERE WHILE\n       TRYING TO LOCATE THE FIRST REGULAR PDDB AFTER A SPUN ONE.\n\nUF009  ADD SYNAD ROUTINE AND ADDITIONAL CHECKING TO READSPC ROUTINE SO\n       THAT THE SYSTEM WILL NOT FAIL DURING XB PROCESSING.\n\nUF010  IF USER HAS TSO OPERATOR AUTHORITY, SET FLAG BIT IN QFLAG1,\n       AND FORCE QXAUTH ON.\n\nUF011  ADD MODULE HEXDUMP (Q28) WHICH WILL GENERATE AN ABEND FORMAT\n       DUMP OF THE DATA PASSED TO IT.\n\nUF012  CHANGE HEXBLK (Q9) TO USE HEXDUMP FOR FORMATTING THE READ\n       BUFFER.\n\nUF013  CHANGE HEXBLK (Q9) TO ALLOW ADDITIONAL INPUT PARAMETERS FOR\n       DUMPING CURRENT BLOCK, AND OFFSETS INTO THE REQUESTED BLOCK.\n       IF THE BLOCK ADDRESS PARAMETER IS \"+\", THE BUFFER CHAINED FROM\n       THE CURRENT BUFFER WILL BE DUMPED.\n\nUF014  CHANGE PARSE (Q16) TO USE 4 CHARACTER COMMAND NAMES, AND\n       CHANGE LOGIC FOR DETERMINING IF A COMMAND IN PRIVILEGED.\n\nUF015  ADD MODULE CJQE (Q29) TO DUMP JQE IN HEX.\n\nUF016  ADD MODULE CJCT (Q30) TO DUMP JCT IN HEX WITH OPTIONAL\n       OFFSET SPECIFIED.\n\nUF017  ADD MODULE CTSO (Q31) TO ALLOW ANY TSO COMMAND TO BE ISSUED\n       WHILE IN QUEUE.\n\nUF018  CHANGE DEFAULT STARTUP COMMAND TO \"HELP\" SO GET STARTED FASTER.\n\nUF019  ALLOW SYSPARM TO CHANGE &QXXX DEFAULTS.\n\nUF020  SUPPORT FOR SP2 LEVEL OF JES2.\n       NOTE: THERE ARE PROBABLY SOME BUGS IN THE DISPLAY COMMANDS AT\n             THIS LEVEL.  THEY ARE BEING FIXED AS THEY ARE DISCOVERED,\n             BUT SINCE THE NERDC DOES NOT NORMALLY USE THESE COMMANDS,\n             IT MAY TAKE SOME TIME TO DISCOVER THE ERRORS.\n\nUF021  SUPPORT FOR SP2 PTF UZ52546 (8110 LEVEL SET).\n\nUF022  ADD MODULE CHCT (Q32) TO DUMP HCT CHECKPOINTED AREA.\n\nUF023  ADD SYMDEL/SYMNODEL STATEMENTS AROUND DSECTS TO REDUCE\n       NUMBER OF SYM ENTRIES IN FINAL LOAD MODULE.\n       (THE DBCSYMED PROGRAM READS IN THE GENERATED OBJECT\n       DECKS AND REMOVES SYM ENTRIES THAT APPEAR BETWEEN\n       SYMDEL/SYMNODEL DSECT DEFINITIONS.  THIS CAN CUT THE\n       SIZE OF THE FINAL LOAD MODULE BY MORE THAN HALF.)\n\nUF024  ADD DIE COMMAND TO FORCE AN ABEND SO CAN GET BACK INTO THE\n       DEBUGGING ENVIRONMENT, AND ESTABLISH ESTAE DURING INIT.\n\nUF025  ADD PDDB COMMAND TO LIST PDDB'S FOR A JOB.  THIS IS USEFUL WHEN\n       THE DD COMMAND FAILS FOR SUCH THINGS AS SYSOUT RECEIVED FROM\n       OTHER NODES AS WELL AS DURING DEBUGGING OF MISC PROBLEMS.\n       IF &QJTIP IS ON, THE PROC, STEP, AND DDNAMES WILL BE FORMATTED.\n\nUF026  ADD JOE COMMAND TO DUMP JOES FOR A JOB.\n\nUF027  FIX XI COMMAND TO PROPERLY LIST ALL INITIATOR CLASSES.\n\nUF028  CHANGE SAVE COMMAND TO ALLOW QPARM3 TO SPECIFY THE VOLSER\n       THAT THE DATASET IS TO BE ALLOCATED TO.\n       (QPARM2 IS USED TO SPECIFY THE DATASET TYPE.  IT WASN'T\n       DOCUMENTED, EITHER.)\n       NOW THE COMMAND IS:\n         SAVE DSN <DSTYPE> <VOLSER>\n\nUF029  CHANGE Q7 FORMAT TO FIX ERROR IN TESTING FOR JOB ACTIVE ON A\n       PRINTER.\n\nUF030  ADD JOB HISTORY COMMAND (Q35).\n       THE MODEL FOR THIS COMMAND WAS PROVIDED BY KEN TRUE OF INTEL.\n\nUF031  CHANGE TRANSLATE IN THE DISPLAY (Q5) MODULE TO CHANGE X'FF'\n       TO A BLANK.  THIS IS REQUIRED FOR REMOTE 3278'S.\n\nUF032  ADD &QNERDC GLOBAL TO ALLOW FOR LOCAL DEPENDENCIES.\n       SO FAR ONLY Q35 JOB HISTORY USES THIS FLAG.\n\nUF033  CHANGE Q8 HELP TO PRINT BLANK LINES TO FORCE THE PLUS SIGN TO\n       BE GENERATED AT THE BOTTOM OF EACH PAGE TO INDICATE TO THE USER\n       THAT MORE DATA FOLLOWS.  THIS CODE FROM KEN TRUE AT INTEL.\n\nUF034  CHANGE Q6 FINDJOB TO GENERATE ERROR MESSAGE IF A \"*\" WAS USED\n       AS THE JOBID, BUT THE JQE FIELD HAS NOT YET BEEN INITIALIZED.\n       THIS IS A PROBLEM FOR USERS WHO DO A STATUS COMMAND, SEE ONLY\n       ONE JOB LISTED, AND THEN THINK THAT THEY CAN USE THE \"*\" TO\n       DISPLAY THAT JOB.\n\nUF035  CHANGE Q6 FINDJOB SO THAT IF THE COMMAND WAS SYSLOG THEN\n       IF QPARM1 IS NULL OR \"SYSLOG\" THEN LOCATE THE SYSLOG\n          FOR THE ACTIVE SYSTEM.\n       IF QPARM1 IS NOT NUMERIC, AND NOT \"SYSLOG\" THEN IT IS ASSUMED\n          TO BE THE SMFID OF THE SYSTEM WHOSE LOG IS DESIRED.\n          FOR THIS TO WORK IT IS NECESSARY FOR THE SYSTEM ID'S\n          TO BE PROPERLY DEFINED IN QSTART.\n\nUF036  ADD Q36 (SPIN) COMMAND PROCESSOR.\n       A NEW COMMAND 'SPIN' WILL CAUSE A COPY OF THE CURRENT DATASET\n          TO BE SPUN TO SYSOUT.\n       AT THIS TIME, THERE ARE NO OPTIONS FOR THE COMMAND, BUT IT\n          WOULD BE NICE TO ADD OPTIONS FOR DEST, SYSOUT CLASS, FORMS,\n          AND RANGE OF LINE NUMBERS.\n       THIS REQUIRED CHANGES TO ALLOCATE AND QSTART, AS WELL.\n\nUF037  CHANGE Q10 TO ADD SUPPORT FOR 3380.\n\nUF038  ADD TGPS COMMAND TO LIST THE TOP 20 USERS OF SPOOL SPACE.\n       THIS IS A VERY USEFUL COMMAND TO USE WHEN YOUR SPOOL VOLUMES\n       ARE NEARLY FULL AND YOU WOULD REALLY LIKE TO KNOW WHO HAS ALL\n       OF THE SPACE.  OUR EXPERIENCE HAS SHOWN THAT WHEN THE SPOOLS\n       GET FULL, THE TOP 20 JOBS (OUT OF OVER 1000) WILL HAVE ABOUT\n       30% OF THE TRACK GROUPS.  THIS COMMAND ACTUALLY COUNTS THE TRACK\n       GROUPS ASSIGNED TO EACH JOB, BY READING ALL OF THE ALLOCATION\n       IOT'S.  BY DOING IT THIS WAY YOU GET THE ACTUAL SPACE USED, AND\n       DO NOT GET THROWN OFF BY JOBS THAT WRITE ONE LINE TO EACH OF\n       THOUSANDS OF SPUN SYSOUTS.\n       *** NOTE ***:  THIS COMMAND DOES AN INCREADIBLE AMOUNT OF I/O AND\n       TAKES A LONG TIME TO COMPLETE.  IN OUR ENVIRONMENT, RUNNING ON A\n       TEST CPU WHICH FREQUENTLY GETS LOCKED OUT FROM THE SHARED SPOOLS\n       BY THE FASTER PRODUCTION MACHINES, IT CAN TAKE AS LONG AS FIVE\n       MINUTES FOR THE RESPONCE TO COME BACK, BUT SOMETIMES IT IS THE\n       ONLY WAY.\n       *** NOTE ***:  THE PERCENT COLUMN INDICATES THE PERCENT OF TRACK\n       GROUPS USED OUT OF THE DEFINED NUMBER OF TRACK GROUPS FOR THE\n       SYSTEM.  IF YOU HAVE ALLOWED FOR EXTRA SPOOLS, THE NUMBERS WILL\n       DISPLAYED WILL BE LOWER THAN ACTUAL.\n\nUF039  CHANGE CHECKPOINT READ TO MULTIPLE DECB'S BASED ON NCP.\n       THE IDEA FOR THIS CODE CAME FROM THE UCLA/UOC VERSION OF THE\n       QUEUE COMMAND.\n\nUF040  ALLOW +/-NNN TO BE SPECIFIED ON THE LIST * COMMAND.\n\nUF041  CHANGE TSO COMMAND PROCESSOR TO PROPERLY CLEAR SCREEN FOR TCAM.\n\nUF042  ALLOW QCOMMON PARAMETERS TO BE SPECIFIED IN QSTART.\n       THIS WILL CAUSE ALL OF THE COMMONLY CHANGED OPTIONS TO BE\n       SPECIFIED IN ONLY ONE PLACE.\n\nUF043  MOVE PFK DEFINITIONS TO QCOMMON, AND SET VIA QSTART.\n       BY MOVING THE DEFINITIONS TO QCOMMON, IT WILL BE POSSIBLE\n       FOR THE MODEL COMMAND TO SET THE PROPER VALUES FOR PFK 7/8,\n       THE SCROLL COMMANDS, FOR THE DISPLAY SIZE.\n\nUF044  CHANGE READSPC TO DO FURTHER VALIDITY CHECKING ON THE VALUE\n       OF MTTR THAT IS PASSED TO IT.  THIS SHOULD ELIMINATE OCCASIONAL\n       S0C4 AND S0C1 ABENDS FROM OCCURRING.\n\nUF046  SUPPORT FOR JES2 AT THE SP 1.3.3 LEVEL (HJE2329).\n       THIS SUPPORT IS ENABLED BY SPECIFYING SYSPARM(SP133), OR\n       CHANGING THE QSTART MACRO TO DEFAULT &QSP133 TO 1.\n\nUF047  ADD WRITER NAME TO JOE DISPLAY IN FORMAT ROUTINE.\n\nUF048  SUPPORT FOR SP 1.3.4.  (ADD $DRAINED EQUATE FOR HCT EXPANSION).\n\nUF049  FIX TO CKPT TO RESOLVE OCCASIONAL ABEND S0C4.\n       CODE IN INIT ASSUMES THAT THE HEADER RECORD IN THE CHECKPOINT\n       DATASET THAT INCLUDES THE HCT SAVEAREA WILL BE AT LEAST 4096\n       BYTES LONG, AND THE READ FOR THAT AREA IN \"CKPT\" HAS A LENGTH\n       OF 4096 CODED IN THE DECB.  CODE IN \"CKPT\" BUMPS THE I/O AREA\n       POINTER BY THE LENGTH READ FROM THE DECB, CAUSING PROBLEMS\n       IF THE HEADER RECORD IS LESS THAT 4K BYTES LONG.\n       CODE IS CHANGED IN \"CKPT\" TO BUMP THE POINTER BY 4K.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$WGHDOC": {"ttr": 1281, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "                          William G. Hecox\n                          NASA/GSFC\n                          Code 931, Bldg. 28 Rm S224\n                          Greenbelt, MD. 20771\n                          (301) 286-3993\n                          Z8WGH@GIBBS.BITNET\n                          Z8WGH@GIBBS.GSFC.NASA.GOV\n\n20 AUG 86  WGH  - INSTALLED AT NASA GODDARD NSESCC INCLUDED LOCAL MODS.\n\n                  INCLUDE RECFM AND LRECL IN PDDB DISPLAY\n                          CPDDB\n                  TTY SUPPORT  (LINE TERMINALS)\n                          QUEUE, DISPLAY\n                  EASY SEARCH: ALLOW BLANK OR = AS WELL AS *\n                          FINDJOB\n                  FIX EXIT CLEAR MSG FOR LARGE SCREENS\n                          QUEUE\n                  PUT IN TCAM/VTAM TEST IN CTSO SO WILL LOOK SAME\n                          QUEUE, CTSO\n                  INCREASE BLKSIZE TO 6160 ON SAVE COMMAND\n                          SAVE\n                  FIX TO PICK UP TWO BYTES FOR RMT/LCL FIELD\n                          FORMAT\n                  ALLOW ALL USERS TO ISSUE TSO COMMANDS\n                          AUTH\n                  MODIFIED SEARCH AND FORMAT TO INCLUDE ALL QUEUES\n                   AND DISPLAY FIELDS ASSOCIATED WITH NJE\n                          SEARCH, FORMAT, $JQT\n                  MODIFIED DDNAMES HASPCKPT AND HASPACE1 TO\n                   HASPCKPQ AND HASPACQ1 RESPECTIVELY\n                   TO ALLOW SDSF AND QUEUE TO BE EXECUTING\n                   SIMULTANEOUSLY UNDER ISPF\n                          INIT, QCOMMON\n\n           WGH  - ADDITIONAL ENHANCEMENTS (AFTER AUG 86)\n\n                  ADDED #LINES PARM TO SAVE AND SPIN COMMAND\n                          SAVE, SPIN\n                  ADDED DEST AND USRID PARM TO SPIN COMMAND\n                          SPIN\n                  EASY QUEUE: ALLOW (LIST JOB DSID) ENTER DSID ONLY\n                          LIST\n                  PROCESS CLIST SUBCOMMANDS\n                          INIT, DISPLAY\n                  ADDED FOUR COMMANDS TO SUPPORT CLIST SUB-COMMANDS\n                          STACK, TERMINAL, QUIET, TALK\n                  ENHANCED HCT COMMAND TO REQUEST SPECIFIC BLOCKS\n                  BY NAME (JQT, JOT, ETC) + OFFSET\n                          CHCT\n                  MODIFIED INIT TO PARSE INITIAL COMMAND\n                  QUEUE VOL(CKPT) UNIT(33XX) PRE(SYSX) 1STCMD P1 - P4\n                          INIT\n                  MODIFIED DC TO DISPLAY CORRECT STEP AND PROCSTEP NAMES\n                          INIT\n                  RETRIEVE SMFID FIELDS FROM CHECKPOINT DAS RECORDS\n                          INIT\n                  NEW SUBCOMMAND -  PFX LEVEL  - CHANGES DEFAULT USERID\n                      FOR STATUS COMMAND\n\n   MAR 91  WGH  - MODIFIED VERSION XA 2.2 RECEIVED FROM J. SCHUDEL\n                  WITH ABOVE MODS.\n\n   AUG 92  WGH  - MODIFIED TO RUN WITH JES2 4.2  .\n                          MINOR CHANGES TO ABOUT 20 MODULES\n                          MOSTLY CONTROL BLOCK CHANGES.\n                   SEARCH - CHANGED TO CHECK 3 OUTPUT QUEUES\n                          PER CLASS AND CHECK NEW HELD OUTPUT JOE\n                          QUEUE.\n                   NOTE CHANGE IN FORMAT OF INITIAL COMMAND.\n\n            --    QUEUE VOL(CKPT) UNIT(33XX) PRE(SYSX) 1STCMD P1 - P4 --\n\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@COMPLIB": {"ttr": 1284, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "//SICQ    JOB ,JACK,CLASS=Z\n/*JOBPARM Q=F,I,CARDS=9999999\n/*ROUTE  PUNCH X10 SIC\n//COMP   PROC  PRE='NER.S685.',D=\n//COMP   EXEC  PGM=COMPLIB\n//SYSPRINT DD  SYSOUT=A\n//SYSLIB   DD  DSN=&PRE.&D,DISP=SHR\n//SYSUT2   DD  SYSOUT=B,HOLD=YES\n//SYSIN    DD  DSN=*.SYSIN.SYSUT2,DISP=(OLD,PASS)\n//PEND   PEND\n//SYSIN  EXEC  PGM=IEBGENER\n//SYSPRINT DD  DUMMY\n//SYSIN    DD  DUMMY\n//SYSUT2   DD  UNIT=VIO,SPACE=(CYL,1),DISP=(,PASS),\n//             DCB=(LRECL=80,RECFM=FB,BLKSIZE=800)\n//SYSUT1   DD  *\n++SETLIB FLAGS=IEBUPDTE\n++INCLUDE LIBRARY=ALL\n/*\n//QUEUE  EXEC  COMP,D='NEW.QUEUE'\n//COMP.SYSIN DD *\n++SETLIB FLAGS=IEBUPDTE\n++INCLUDE $$$$$$$$\n++INCLUDE $$INST\n++INCLUDE $LOG\n++INCLUDE $UFDOC\n++INCLUDE CKPT\n++INCLUDE FINDJOB\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "@FILE389": {"ttr": 1286, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x046\\x00\\x00\\x01\\x022\\x1f\\x01\\x022\\x1f\\x11\\x04\\x00\\n\\x00\\n\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf5\\xf4@@@'", "ispf": {"version": "04.54", "flags": 0, "createdate": "2002-11-17T00:00:00", "modifydate": "2002-11-17T11:04:00", "lines": 10, "newlines": 10, "modlines": 0, "user": "CBT-454"}, "text": "//***FILE 389 IS A JES2 5.X.0 VERSION OF QUEUE FROM JACK SCHUDEL    *   FILE 389\n//*           OF NERDC AT THE UNIVERSITY OF FLORIDA IN GAINESVILLE  *   FILE 389\n//*           FLORIDA.  THIS IS HIS MODIFICATION FROM THE 4.3.0     *   FILE 389\n//*           VERSION ON FILE 391, AND JACK CLAIMS THAT IT IS       *   FILE 389\n//*           MAY NEED A TWEAKING HERE AND THERE.  HOWEVER, IT      *   FILE 389\n//*           WORKS.  SEE HIS NOTES.  CORRECTED BY SAM GOLOB SO     *   FILE 389\n//*           THAT THIS VERSION WILL ALSO WORK WHEN ASSEMBLED       *   FILE 389\n//*           AGAINST JES2 5.2.0 MACROS.  THIS VERSION NOW WORKS    *   FILE 389\n//*           UNDER JES2 5.2.0 ALSO, AS WELL AS UNDER 5.1.0.        *   FILE 389\n//*                                                                 *   FILE 389\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ACTIVE": {"ttr": 1288, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ACTIVE   TITLE 'QUEUE COMMAND - LIST ACTIVE JOB STATUS'           ONL01\nACTIVE   QSTART ,                  START ACTIVE CSECT ASSEMBLY    ONL01\n         PRINT GEN\n******************************************************************\n* RNB CHANGES:                                                   *\n*       (1) RNB07 - WHEN LISTING BATCH JOBS, SAY THEY            *\n*                   ARE ON THE XEQ QUEUE INSTEAD OF INPUT QUEUE. *\n*       (1) RNB26 - BUG FIX TO STOP LISTING A LOT OF STRANGE JOBS*\n******************************************************************\n         USING QCKPT,R9       BASE REG FOR CHECKPOINT AREA\n         L     R9,QVCKPT      LOAD BASE REG\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA\n******************************************************************UF006\n*                                                                 UF006\n*   CALL - READ JES2 CHECKPOINT ROUTINE                           UF006\n*                                                                 UF006\n******************************************************************UF006\nCALLCKPT L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006\n         BALR  R14,R15        GO TO IT                            UF006\n         L     R8,16          POINT TO CVT\n         USING CVTDSECT,R8\n***********************************************************************\n*                                                                     *\n*        FIND THE ACTIVE MAIN SUBSYSTEM SSVT                          *\n*                                                                     *\n***********************************************************************\n         L     R7,CVTASVT     POINT TO ASVT\n         L     R2,CVTMSER     POINT TO ASVT\n         USING ASVT,R7\n         L     R7,ASVTMAXU    LOAD THE MAX ASCBS\n         DROP  R7\n         L     R8,CVTJESCT    POINT TO JESCT\n         DROP  R8\n         USING JESCT,R8\n         L     R8,JESSSCT     POINT TO SSCT\n         DROP  R8\n         USING SSCT,R8\n         L     R8,SSCTSUS2    POINT TO HCCT                    WGH42\n         DROP  R8\n         USING HCCT,R8                                         WGH42\n***********************************************************************\n*                                                                     *\n*        FIND THE ACTIVE MAIN SUBSYSTEM'S HAVT                        *\n*                                                                     *\n***********************************************************************\n         L     R6,CCTHAVT     POINT TO HAVT                    WGH42\n         LTR   R6,R6          TEST IF ANY PITS\n         BZ    NOHAVT         NO, IGNORE COMMAND\n         $AMODE 31,PUSHR=10\n         LA    R6,4(,R6)      POINT TO FIRST SJB POINTER\n         USING SJB,R5\n         MVC   QDHLINE,INITHD MOVE IN THE HEADING\n***********************************************************************\n*                                                                     *\n*        BUILD THE MESSAGE(S) DESCRIBING THE JOBS                     *\n*                                                                     *\n***********************************************************************\nBLDMSG   MVC   QDMSG,QBLANK   BLANK THE AREA\n*        L     R5,0(,R6)      POINT TO SJB\n         L     R8,0(R6)       GET $HASB POINTER               WGH42\n         LTR   R8,R8          ANY THING                          WGH42\n         BZ    NEXTSJB                                           WGH42\n         L     R5,16(R8)      POINT TO SJB                       WGH42\n         LTR   R5,R5          TEST FOR ANY\n         BZ    NEXTSJB\n         L     R4,SJBSJB      TEST FOR BATCH JOB\n         LTR   R4,R4          IS IT\n         BNZ   BATCHCHK\n         L     R3,SJBJQOFF    LOAD JQE OFFSET\n         LTR   R3,R3          ANY JQE?                            RNB26\n         BZ    NEXTSJB        /NO  - TRY NEXT SJB                 RNB26\n         AL    R3,QCJQTA      ADD TO JQE ORIGIN\n         USING JQE,R3         BASE REG FOR JQE\n         TM    JQEFLAG3,JQE3JOB BATCH JOB?  (SHOULDN'T BE)        RNB26\n         BO    UNK              /YES - SAY UNKNOWN                RNB26\n         TM    JQEFLAG3,JQE3TSU TSO USER?                         UF020\n         BO    TSOCHK         YES, GO PROCESS                     UF020\n         TM    JQEFLAG3,JQE3STC STARTED TASK?                     UF020\n         BO    STCCHK         YES, GO PROCESS                     UF020\nUNK      MVC   QUEUE,=CL8'UNKNOWN'                                UF020\n         B     NOTTSO         PRINT WHATEVER WE CAN FIND          UF020\nBATCHCHK CLI   QPARM1,C'B'    BATCH DISPLAY ONLY ?\n         BE    BATCHMSG       YES. GO PROCESS\n         CLI   QPARM1,C'J'    BATCH DISPLAY ONLY ?                ONL10\n         BE    BATCHMSG       YES. GO PROCESS                     ONL10\n         CLI   QPARM1,C' '    DISPLAY EVERYTHING ?\n         BNE   NEXTSJB        NO. GET NEXT SJB\nBATCHMSG LR    R5,R4          COPY THE SJB ADDRESS\n         L     R3,SJBJQOFF    POINT TO JQE OFFSET\n         LTR   R3,R3          ANY JQE?                            RNB26\n         BZ    NEXTSJB        /NO  - TRY NEXT SJB                 RNB26\n         AL    R3,QCJQTA      POINT TO THE JQE\n         IC    R0,JQETYPE     GET THE JOB TYPE\n         MVC   QUEUE,=CL8'   XEQ'                                 RNB07\n         STC   R0,QUEUE+7     SET THE QUEUE TYPE\n         OI    QUEUE+7,X'80'  SET THE PRINTABLE QUEUE TYPE\n         B     NOTTSO         GO TO COMMON ROUTINE\nTSOCHK   CLI   QPARM1,C'T'    TSO DISPLAY ONLY ?\n         BE    TSOMSG         YES. GO PROCESS\n         CLI   QPARM1,C' '    DISPLAY EVERYTHING ?\n         BNE   NEXTSJB        NO. GET NEXT SJB ?\nTSOMSG   MVC   QUEUE,=CL8'TSO USER'\n         B     NOTTSO\nSTCCHK   CLI   QPARM1,C'S'    STC DISPLAY ONLY ?\n         BE    STCMSG         YES. GO PROCESS.\n         CLI   QPARM1,C' '    DISPLAY EVERYTHING ?\n         BNE   NEXTSJB        NO. GET NEXT SJB.\nSTCMSG   MVC   QUEUE,=CL8'SYSTEM Q'\nNOTTSO   L     R1,SJBASCBP    POINT TO ASCB\n         USING ASCB,R1\n         LM    R14,R15,ASCBEJST GET THE CPU TIME\n         SRDL  R14,12         SKIP THE GARBAGE\n         D     R14,=F'10000'  GET THE VALUE IN .01 SECS\n         CVD   R15,CONVERT    GET THE DECIMAL VALUE\n         MVC   TCBTIME,EDCPU  MOVE EDIT MASK\n         ED    TCBTIME,CONVERT+4 EDIT THE NUMBER\n         MVI   TCBTIME+L'TCBTIME-1,C'S' SET SECONDS\n         LM    R14,R15,ASCBSRBT GET THE CPU TIME\n         SRDL  R14,12         SKIP THE GARBAGE\n         D     R14,=F'10000'  GET THE VALUE IN .01 SECS\n         CVD   R15,CONVERT    GET THE DECIMAL VALUE\n         MVC   SRBTIME,EDCPU  MOVE EDIT MASK\n         ED    SRBTIME,CONVERT+4 EDIT THE NUMBER\n         MVI   SRBTIME+L'SRBTIME-1,C'S' SET SECONDS\n         MVC   JOBNAME,SJBJOBNM MOVE IN JOBNAME\n         LH    R14,JQEJOBNO   LOAD JOB NUMBER\n         CVD   R14,CONVERT    GET THE DECIMAL VALUE\n         MVC   JOBNUM,ED5     GET THE CHARACTER VALUE\n         ED    JOBNUM,CONVERT+5 GET THE CHARACTER VALUE\n         LR    R4,R2          COPY THE ADDRESS\nFINDCSCB ICM   R4,15,0(R4)    POINT TO THE NEXT CSCB\n         BZ    NEXTSJB\n         USING CSCDSECT,R4\n         TM    CHTRKID,CHINITID  IS IT INIT?                       WGH\n         BO    FINDCSCB          YES.. NEXT CSCB                   WGH\n         TM    CHTRKID,CHJOBID   IS IT JOB OR STC ?                WGH\n         BO    DOSTC             YES.. GO PROCESS                  WGH\n         CLC   CHKEY,JQEJNAME    NO... TEST FOR RIGHT TSU          WGH\n         BNE   FINDCSCB          NO... NEXT CSCB                   WGH\n         MVC   STEPNAME,CHCLS    CHANGE STEP FOR TSU               WGH\n         MVC   PROCSTEP,=CL8' '  BLANK PROCSTEP                    WGH\n         B     NOCSCB            CONTINUE                          WGH\nDOSTC    CLC   CHCLS,JQEJNAME    TEST FOR RIGHT JOB/STC            WGH\n         BNE   FINDCSCB          NOPE\n         MVC   PROCSTEP,CHPROCSN MOVE IN THE PROCSTEP NAME\n         MVC   STEPNAME,CHSTEP   MOVE IN STEPNAME (JOB)\n         TM    JQEFLAG3,JQE3STC  STARTED TASK?\n         BNO   NOCSCB            NO...  CONTINUE\n         MVC   STEPNAME,CHKEY    YES.. CHANGE STEP FOR STC\n         DROP  R4\nNOCSCB   EQU   *                                                  WGH42\n* WGH *  LH    R0,ASCBFMCT    GET NUMBER OF SLOTS\n         L     R1,ASCBRSME    ADDRESS OF RAX                      WGH42\n         USING RAX,R1                                             WGH42\n         L     R0,RAXFMCT     FRAMES CURRENTLY IN USE             WGH42\n         LTR   R0,R0          ANY THING THERE ???DEBUG???         WGH42\n         BZ    GOTFMCT        NO SKIP MULTIPLY                    WGH42\n         NOP   GOTFMCT        PLACE FOR BREAKPOINT                WGH42\n         SLL   R0,2           GET NUMBER OF K\n         NOP   GOTFMCT        PLACE FOR BREAKPOINT                WGH42\nGOTFMCT  CVD   R0,CONVERT     GET THE DECIMAL VALUE\n         MVC   SLOTS(6),ED5      MOVE EDIT MASK\n         ED    SLOTS(6),CONVERT+5 GET THE K\n         MVI   SLOTS+L'SLOTS-1,C'K' SET THE 'K'\n         MVC   QDMLNG,=H'80'  SET THE LENGTH\n         LA    R0,QDMSG       GET THE ADDRESS\n         ST    R0,QDMSGA      SET THE ADDRESS\n         $AMODE POPR=10\n         L     R15,=V(DISPLAY) POINT TO THE ROUTINE\n         BALR  R14,R15        CALL THE ROUTINE\n         $AMODE 31,PUSHR=10\n***********************************************************************\n*                                                                     *\n*        SEND THE MESSAGE DESCRIBING THE PIT                          *\n*                                                                     *\n***********************************************************************\nNEXTSJB  LA    R6,4(,R6)      POINT TO NEXT HAVT POINTER\n         DROP  R1,R5\n         BCT   R7,BLDMSG      TEST FOR NEXT HAVT POINTER\n         $AMODE POPR=10\n***********************************************************************\n*                                                                     *\n*        END IT ALL                                                   *\n*                                                                     *\n***********************************************************************\nEND      QSTOP\nNOHAVT   QTILT '***** NO JOBS TO DISPLAY *****'\nINITHD   DC    CL80'  QUEUE  JOBNAME   JOB#  STEPNAME PROCSTEP   SLOTS *\n                  TCB-TIME    SRB-TIME'\nED5      DC    X'402020202120'\nEDCPU    DC    X'4020206B2021204B2020'\n         LTORG\n***********************************************************************\n*                                                                     *\n*        DESCRIBE ALL THE DSECTS NEEDED BY THIS MODULE                *\n*                                                                     *\n***********************************************************************\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nACTIVE   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         CVT   PREFIX=NO,DSECT=YES                                UF046\nCVTDSECT EQU   CVT                                                UF046\n         IEFJESCT TYPE=DSECT                                      UF046\n         IEFJSCVT ,                                               UF046\n         IHAASVT DSECT=YES                                        UF046\n         IHAASCB DSECT=YES                                        UF046\n         IARRAX                                                   WGH42\nCSCDSECT DSECT ,                                                  UF046\n         IEECHAIN ,                                               UF046\n         IEZDEB ,                                                 UF046\n         $XECB ,                                                  UF046\nACTIVE   CSECT                                                    UF046\n         $SCAT ,                                                  UF046\n         $HCCT ,                                                  WGH42\n         $HFAME\n         $SJB\n         $JQE\n         $HASPEQU\n         $TQE\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\nQUEUE    DS    CL8\n         DS    C\nJOBNAME  DS    CL8\n         DS    C\nJOBNUM   DS    CL6\n         DS    C\nSTEPNAME DS    CL8\n         DS    C\nPROCSTEP DS    CL8\n         DS    C\nSLOTS    DS    CL7\n         DS    C\nTCBTIME  DS    CL11\n         DS    C\nSRBTIME  DS    CL11\n         DS    C\nWORK     DSECT\n         DS    CL72\nCONVERT  DS    D\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ACTIVEO": {"ttr": 1293, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "ACTIVE   TITLE 'QUEUE COMMAND - LIST ACTIVE JOB STATUS'           ONL01\nACTIVE   QSTART ,                  START ACTIVE CSECT ASSEMBLY    ONL01\n******************************************************************\n* RNB CHANGES:                                                   *\n*       (1) RNB07 - WHEN LISTING BATCH JOBS, SAY THEY            *\n*                   ARE ON THE XEQ QUEUE INSTEAD OF INPUT QUEUE. *\n*       (1) RNB26 - BUG FIX TO STOP LISTING A LOT OF STRANGE JOBS*\n******************************************************************\n         USING QCKPT,R9       BASE REG FOR CHECKPOINT AREA\n         L     R9,QVCKPT      LOAD BASE REG\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA\n******************************************************************UF006\n*                                                                 UF006\n*   CALL - READ JES2 CHECKPOINT ROUTINE                           UF006\n*                                                                 UF006\n******************************************************************UF006\nCALLCKPT L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006\n         BALR  R14,R15        GO TO IT                            UF006\n         L     R8,16          POINT TO CVT\n         USING CVTDSECT,R8\n***********************************************************************\n*                                                                     *\n*        FIND THE ACTIVE MAIN SUBSYSTEM SSVT                          *\n*                                                                     *\n***********************************************************************\n         L     R7,CVTASVT     POINT TO ASVT\n         L     R2,CVTMSER     POINT TO ASVT\n         USING ASVT,R7\n         L     R7,ASVTMAXU    LOAD THE MAX ASCBS\n         DROP  R7\n         L     R8,CVTJESCT    POINT TO JESCT\n         DROP  R8\n         USING JESCT,R8\n         L     R8,JESSSCT     POINT TO SSCT\n         DROP  R8\n         USING SSCT,R8\n         L     R8,SSCTSSVT    POINT TO SSVT\n         DROP  R8\n         USING SSVT,R8\n***********************************************************************\n*                                                                     *\n*        FIND THE ACTIVE MAIN SUBSYSTEM'S HAVT                        *\n*                                                                     *\n***********************************************************************\n         L     R6,SVTHAVT     POINT TO HAVT\n         LTR   R6,R6          TEST IF ANY PITS\n         BZ    NOHAVT         NO, IGNORE COMMAND\n         LA    R6,4(,R6)      POINT TO FIRST SJB POINTER\n         USING SJB,R5\n         MVC   QDHLINE,INITHD MOVE IN THE HEADING\n***********************************************************************\n*                                                                     *\n*        BUILD THE MESSAGE(S) DESCRIBING THE JOBS                     *\n*                                                                     *\n***********************************************************************\nBLDMSG   MVC   QDMSG,QBLANK   BLANK THE AREA\n         L     R5,0(,R6)      POINT TO SJB\n         LTR   R5,R5          TEST FOR ANY\n         BZ    NEXTSJB\n         L     R4,SJBSJB      TEST FOR BATCH JOB\n         LTR   R4,R4          IS IT\n         BNZ   BATCHCHK\n         L     R3,SJBJQOFF    LOAD JQE OFFSET\n         LTR   R3,R3          ANY JQE?                            RNB26\n         BZ    NEXTSJB        /NO  - TRY NEXT SJB                 RNB26\n         AL    R3,QCJQTA      ADD TO JQE ORIGIN\n         USING JQE,R3         BASE REG FOR JQE\n         TM    JQEFLAG3,JQE3JOB BATCH JOB?  (SHOULDN'T BE)        RNB26\n         BO    UNK              /YES - SAY UNKNOWN                RNB26\n         TM    JQEFLAG3,JQE3TSU TSO USER?                         UF020\n         BO    TSOCHK         YES, GO PROCESS                     UF020\n         TM    JQEFLAG3,JQE3STC STARTED TASK?                     UF020\n         BO    STCCHK         YES, GO PROCESS                     UF020\nUNK      MVC   QUEUE,=CL8'UNKNOWN'                                UF020\n         B     NOTTSO         PRINT WHATEVER WE CAN FIND          UF020\nBATCHCHK CLI   QPARM1,C'B'    BATCH DISPLAY ONLY ?\n         BE    BATCHMSG       YES. GO PROCESS\n         CLI   QPARM1,C'J'    BATCH DISPLAY ONLY ?                ONL10\n         BE    BATCHMSG       YES. GO PROCESS                     ONL10\n         CLI   QPARM1,C' '    DISPLAY EVERYTHING ?\n         BNE   NEXTSJB        NO. GET NEXT SJB\nBATCHMSG LR    R5,R4          COPY THE SJB ADDRESS\n         L     R3,SJBJQOFF    POINT TO JQE OFFSET\n         LTR   R3,R3          ANY JQE?                            RNB26\n         BZ    NEXTSJB        /NO  - TRY NEXT SJB                 RNB26\n         AL    R3,QCJQTA      POINT TO THE JQE\n         IC    R0,JQETYPE     GET THE JOB TYPE\n         MVC   QUEUE,=CL8'   XEQ'                                 RNB07\n         STC   R0,QUEUE+7     SET THE QUEUE TYPE\n         OI    QUEUE+7,X'80'  SET THE PRINTABLE QUEUE TYPE\n         B     NOTTSO         GO TO COMMON ROUTINE\nTSOCHK   CLI   QPARM1,C'T'    TSO DISPLAY ONLY ?\n         BE    TSOMSG         YES. GO PROCESS\n         CLI   QPARM1,C' '    DISPLAY EVERYTHING ?\n         BNE   NEXTSJB        NO. GET NEXT SJB ?\nTSOMSG   MVC   QUEUE,=CL8'TSO USER'\n         B     NOTTSO\nSTCCHK   CLI   QPARM1,C'S'    STC DISPLAY ONLY ?\n         BE    STCMSG         YES. GO PROCESS.\n         CLI   QPARM1,C' '    DISPLAY EVERYTHING ?\n         BNE   NEXTSJB        NO. GET NEXT SJB.\nSTCMSG   MVC   QUEUE,=CL8'SYSTEM Q'\nNOTTSO   L     R1,SJBASCBP    POINT TO ASCB\n         USING ASCB,R1\n         LM    R14,R15,ASCBEJST GET THE CPU TIME\n         SRDL  R14,12         SKIP THE GARBAGE\n         D     R14,=F'10000'  GET THE VALUE IN .01 SECS\n         CVD   R15,CONVERT    GET THE DECIMAL VALUE\n         MVC   TCBTIME,EDCPU  MOVE EDIT MASK\n         ED    TCBTIME,CONVERT+4 EDIT THE NUMBER\n         MVI   TCBTIME+L'TCBTIME-1,C'S' SET SECONDS\n         LM    R14,R15,ASCBSRBT GET THE CPU TIME\n         SRDL  R14,12         SKIP THE GARBAGE\n         D     R14,=F'10000'  GET THE VALUE IN .01 SECS\n         CVD   R15,CONVERT    GET THE DECIMAL VALUE\n         MVC   SRBTIME,EDCPU  MOVE EDIT MASK\n         ED    SRBTIME,CONVERT+4 EDIT THE NUMBER\n         MVI   SRBTIME+L'SRBTIME-1,C'S' SET SECONDS\n         MVC   JOBNAME,SJBJOBNM MOVE IN JOBNAME\n         LH    R14,JQEJOBNO   LOAD JOB NUMBER\n         CVD   R14,CONVERT    GET THE DECIMAL VALUE\n         MVC   JOBNUM,ED5     GET THE CHARACTER VALUE\n         ED    JOBNUM,CONVERT+5 GET THE CHARACTER VALUE\n         LR    R4,R2          COPY THE ADDRESS\nFINDCSCB ICM   R4,15,0(R4)    POINT TO THE NEXT CSCB\n         BZ    NEXTSJB\n         USING CSCDSECT,R4\n         TM    CHTRKID,CHINITID  IS IT INIT?                       WGH\n         BO    FINDCSCB          YES.. NEXT CSCB                   WGH\n         TM    CHTRKID,CHJOBID   IS IT JOB OR STC ?                WGH\n         BO    DOSTC             YES.. GO PROCESS                  WGH\n         CLC   CHKEY,JQEJNAME    NO... TEST FOR RIGHT TSU          WGH\n         BNE   FINDCSCB          NO... NEXT CSCB                   WGH\n         MVC   STEPNAME,CHCLS    CHANGE STEP FOR TSU               WGH\n         MVC   PROCSTEP,=CL8' '  BLANK PROCSTEP                    WGH\n         B     NOCSCB            CONTINUE                          WGH\nDOSTC    CLC   CHCLS,JQEJNAME    TEST FOR RIGHT JOB/STC            WGH\n         BNE   FINDCSCB          NOPE\n         MVC   PROCSTEP,CHPROCSN MOVE IN THE PROCSTEP NAME\n         MVC   STEPNAME,CHSTEP   MOVE IN STEPNAME (JOB)\n         TM    JQEFLAG3,JQE3STC  STARTED TASK?\n         BNO   NOCSCB            NO...  CONTINUE\n         MVC   STEPNAME,CHKEY    YES.. CHANGE STEP FOR STC\n         DROP  R4\nNOCSCB   LH    R0,ASCBFMCT    GET NUMBER OF SLOTS\n         SLL   R0,2           GET NUMBER OF K\n         CVD   R0,CONVERT     GET THE DECIMAL VALUE\n         MVC   SLOTS,ED5      MOVE EDIT MASK\n         ED    SLOTS,CONVERT+5 GET THE K\n         MVI   SLOTS+L'SLOTS-1,C'K' SET THE 'K'\n         MVC   QDMLNG,=H'80'  SET THE LENGTH\n         LA    R0,QDMSG       GET THE ADDRESS\n         ST    R0,QDMSGA      SET THE ADDRESS\n         L     R15,=V(DISPLAY) POINT TO THE ROUTINE\n         BALR  R14,R15        CALL THE ROUTINE\n***********************************************************************\n*                                                                     *\n*        SEND THE MESSAGE DESCRIBING THE PIT                          *\n*                                                                     *\n***********************************************************************\nNEXTSJB  LA    R6,4(,R6)      POINT TO NEXT HAVT POINTER\n         DROP  R1,R5\n         BCT   R7,BLDMSG      TEST FOR NEXT HAVT POINTER\n***********************************************************************\n*                                                                     *\n*        END IT ALL                                                   *\n*                                                                     *\n***********************************************************************\nEND      QSTOP\nNOHAVT   QTILT '***** NO JOBS TO DISPLAY *****'\nINITHD   DC    CL80'  QUEUE  JOBNAME   JOB#  STEPNAME PROCSTEP   SLOTS *\n                  TCB-TIME    SRB-TIME'\nED5      DC    X'402020202120'\nEDCPU    DC    X'4020206B2021204B2020'\n         LTORG\n***********************************************************************\n*                                                                     *\n*        DESCRIBE ALL THE DSECTS NEEDED BY THIS MODULE                *\n*                                                                     *\n***********************************************************************\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nACTIVE   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         CVT   PREFIX=NO,DSECT=YES                                UF046\nCVTDSECT EQU   CVT                                                UF046\n         IEFJESCT TYPE=DSECT                                      UF046\n         IEFJSCVT ,                                               UF046\n         IHAASVT DSECT=YES                                        UF046\n         IHAASCB DSECT=YES                                        UF046\nCSCDSECT DSECT ,                                                  UF046\n         IEECHAIN ,                                               UF046\n         IEZDEB ,                                                 UF046\n         $XECB ,                                                  UF046\nACTIVE   CSECT                                                    UF046\n         $SCAT ,                                                  UF046\n*        $SVT\n         $HCCT\n         $HFAME\n         $SJB\n         $JQE\n         $HASPEQU\n         $TQE\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\nQUEUE    DS    CL8\n         DS    C\nJOBNAME  DS    CL8\n         DS    C\nJOBNUM   DS    CL6\n         DS    C\nSTEPNAME DS    CL8\n         DS    C\nPROCSTEP DS    CL8\n         DS    C\nSLOTS    DS    CL7\n         DS    C\nTCBTIME  DS    CL11\n         DS    C\nSRBTIME  DS    CL11\n         DS    C\nWORK     DSECT\n         DS    CL72\nCONVERT  DS    D\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALLOCATE": {"ttr": 1538, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x93\\x10o\\x00\\x93\\x10o\\x18B\\x00x\\x00x\\x00\\x01\\xe2\\xc3\\xc8\\xe4\\xc4\\xc5\\xd3@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-04-16T00:00:00", "modifydate": "1993-04-16T18:42:00", "lines": 120, "newlines": 120, "modlines": 1, "user": "SCHUDEL"}, "text": "ALLOCATE TITLE 'QUEUE COMMAND - DATASET ALLOCATION ROUTINES'      ONL01\nALLOCATE QSTART ,                  START ALLOCATE CSECT ASSEMBLY  ONL01\n         USING QDAIR,R10      BASE REG FOR DAIR WORK\n         L     R10,QVDAIR     LOAD ADDR OF DAIR WORK\n         USING QCKPT,R9       BASE REG FOR CKPT WORK ARES\n         L     R9,QVCKPT      LOAD ADDR\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR ALLOCATION                    ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAALLOC           VALIDATE ALLOCATION REQUEST    ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   DETERMINE FUNCTION                                                *\n*                                                                     *\n***********************************************************************\n         CLI   DAIRFLAG,X'08' IS THE FUNCTION ALLOCATE?\n         BE    ALLOC          YES. DO IT.\n         CLI   DAIRFLAG,X'18' IS THE FUNCTION FREE?\n         BE    FREE           YES. DO IT.\n         CLI   DAIRFLAG,X'30' IS THE FUNCTION ALLOCATE SYSOUT?\n         BE    SYSALLOC       YES. DO IT.\n         B     ABEND99        INVALID FUNCTION. ABANDON SHIP.\n***********************************************************************\n*                                                                     *\n*   FREE DDNAME(XXXXXXXX)                                             *\n*                                                                     *\n***********************************************************************\nFREE     LA    R1,DA18CD      LOAD ADDR OF FREE PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR\n         B     STOP           RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   ALLOC DDNAME(XXXXXXXX) DSNAME(YYYYYYYY) SHR                       *\n*                                                                     *\n***********************************************************************\nALLOC    MVC   DA18DDN,DA08DDN MOVE DDNAME TO FREE LIST\n         LA    R1,DA18CD      LOAD ADDR OF FREE PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR - FREE THE DDNAME\n         LA    R1,DA08CD      LOAD ADDR OF ALLOC PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR - ALLOCATE THE DATASET\n         B     STOP           RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   ALLOC DDNAME(XXXXXXXX) SYSOUT(X)                                  *\n*                                                                     *\n***********************************************************************\nSYSALLOC MVC   DA18DDN,DA30DDN MOVE DDNAME TO FREE LIST\n         LA    R1,DA18CD      LOAD ADDR OF FREE PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR - FREE THE DDNAME\n         LA    R1,DA30CD      LOAD ADDR OF ALLOC PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR - ALLOCATE THE DATASET\n         B     STOP           RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   RETURN TO CALLING ROUTINE                                         *\n*                                                                     *\n***********************************************************************\nSTOP     QSTOP\n***********************************************************************\n*                                                                     *\n*   CALL DYNAMIC ALLOCATION INTERFACE ROUTINE (DAIR)                  *\n*                                                                     *\n***********************************************************************\nCALLDAIR XC    DAIRECB,DAIRECB CLEAR ECB\n         LA    R1,DAPLUPT     LOAD ADDR OF DAIR CALL LIST\n         LINK  EP=IKJEFD00    CALL DAIR\n         LTR   R15,R15        IS RETURN CODE ZERO?\n         BZR   R2             YES. RETURN.\n         CH    R15,=H'28'     IS DATASET ALREADY FREE?\n         BER   R2             YES. RETURN.\n         CLC   DA08DDN,=C'HASPSAVE' IS THIS A SAVE?\n         BNE   DAIRFAIL       NO. ABEND.\n         QTILT '*** UNABLE TO ALLOCATE DATASET ***'\n***********************************************************************\n*                                                                     *\n*   DAIR HAS FAILED. TAKE A PICTURE AND GO HOME.                      *\n*                                                                     *\n***********************************************************************\nDAIRFAIL DS    0H\n         L     R1,QCSTART          POINT TO BIG WORK AREA\n         USING DFPARMS,R1          ADDRESSING FOR IT\n         SPACE 1\n         XC    DFPARMS(DFLEN),DFPARMS\n         ST    R15,DFLEN(,R1)      SAVE R15 FROM DAIR\n         LA    R15,DAPLUPT         DAIR PARAMETER LIST\n         ST    R15,DFDAPLP         FOR DAIRFAIL\n         LA    R15,DFLEN(,R1)      POINT TO DAIR RETURN CODE\n         ST    R15,DFRCP           POINTER TO DAIR RETURN CODE\n         LA    R15,=AL1(0,DFDAIR)  CALLER WAS DAIR\n         ST    R15,DFIDP           POINTER TO SWITCHES\n         DROP  R1\n         LINK  EP=IKJEFF18\n         SPACE 1\nABEND99  TPUT  MESSAGE,L'MESSAGE,EDIT,MF=(E,QTPUT) TELL SAD STORY  PWF*\n         ABEND 99,DUMP        ABEND THE JOB. USER CODE 0099.\n***********************************************************************\n*                                                                     *\n*   CONSTANTS AND ASSORTED GARBAGE                                    *\n*                                                                     *\n***********************************************************************\n         LTORG\nMESSAGE  DC    C'A MAJOR DISASTER HAS OCCURRED IN DAIR PROCESSING.'\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $HASPEQU\n         QCOMMON\n         IKJEFFDF DFDSECT=YES,DFDSEC2=YES\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALLOCATO": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x93\\x10o\\x00\\x93\\x10o\\x172\\x00h\\x00h\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc4\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-04-16T00:00:00", "modifydate": "1993-04-16T17:32:00", "lines": 104, "newlines": 104, "modlines": 0, "user": "SCHUDEL"}, "text": "ALLOCATE TITLE 'QUEUE COMMAND - DATASET ALLOCATION ROUTINES'      ONL01\nALLOCATE QSTART ,                  START ALLOCATE CSECT ASSEMBLY  ONL01\n         USING QDAIR,R10      BASE REG FOR DAIR WORK\n         L     R10,QVDAIR     LOAD ADDR OF DAIR WORK\n         USING QCKPT,R9       BASE REG FOR CKPT WORK ARES\n         L     R9,QVCKPT      LOAD ADDR\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR ALLOCATION                    ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAALLOC           VALIDATE ALLOCATION REQUEST    ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   DETERMINE FUNCTION                                                *\n*                                                                     *\n***********************************************************************\n         CLI   DAIRFLAG,X'08' IS THE FUNCTION ALLOCATE?\n         BE    ALLOC          YES. DO IT.\n         CLI   DAIRFLAG,X'18' IS THE FUNCTION FREE?\n         BE    FREE           YES. DO IT.\n         CLI   DAIRFLAG,X'30' IS THE FUNCTION ALLOCATE SYSOUT?\n         BE    SYSALLOC       YES. DO IT.\n         B     ABEND99        INVALID FUNCTION. ABANDON SHIP.\n***********************************************************************\n*                                                                     *\n*   FREE DDNAME(XXXXXXXX)                                             *\n*                                                                     *\n***********************************************************************\nFREE     LA    R1,DA18CD      LOAD ADDR OF FREE PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR\n         B     STOP           RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   ALLOC DDNAME(XXXXXXXX) DSNAME(YYYYYYYY) SHR                       *\n*                                                                     *\n***********************************************************************\nALLOC    MVC   DA18DDN,DA08DDN MOVE DDNAME TO FREE LIST\n         LA    R1,DA18CD      LOAD ADDR OF FREE PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR - FREE THE DDNAME\n         LA    R1,DA08CD      LOAD ADDR OF ALLOC PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR - ALLOCATE THE DATASET\n         B     STOP           RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   ALLOC DDNAME(XXXXXXXX) SYSOUT(X)                                  *\n*                                                                     *\n***********************************************************************\nSYSALLOC MVC   DA18DDN,DA30DDN MOVE DDNAME TO FREE LIST\n         LA    R1,DA18CD      LOAD ADDR OF FREE PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR - FREE THE DDNAME\n         LA    R1,DA30CD      LOAD ADDR OF ALLOC PARM LIST\n         ST    R1,DAPLDAPB    STORE IN DAIR CALL LIST\n         BAL   R2,CALLDAIR    CALL DAIR - ALLOCATE THE DATASET\n         B     STOP           RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   RETURN TO CALLING ROUTINE                                         *\n*                                                                     *\n***********************************************************************\nSTOP     QSTOP\n***********************************************************************\n*                                                                     *\n*   CALL DYNAMIC ALLOCATION INTERFACE ROUTINE (DAIR)                  *\n*                                                                     *\n***********************************************************************\nCALLDAIR XC    DAIRECB,DAIRECB CLEAR ECB\n         LA    R1,DAPLUPT     LOAD ADDR OF DAIR CALL LIST\n         LINK  EP=IKJEFD00    CALL DAIR\n         LTR   R15,R15        IS RETURN CODE ZERO?\n         BZR   R2             YES. RETURN.\n         CH    R15,=H'28'     IS DATASET ALREADY FREE?\n         BER   R2             YES. RETURN.\n         CLC   DA08DDN,=C'HASPSAVE' IS THIS A SAVE?\n         BNE   ABEND99        NO. ABEND.\n         QTILT '*** UNABLE TO ALLOCATE DATASET ***'\n***********************************************************************\n*                                                                     *\n*   DAIR HAS FAILED. TAKE A PICTURE AND GO HOME.                      *\n*                                                                     *\n***********************************************************************\nABEND99  TPUT  MESSAGE,L'MESSAGE,EDIT,MF=(E,QTPUT) TELL SAD STORY  PWF*\n         ABEND 99,DUMP        ABEND THE JOB. USER CODE 0099.\n***********************************************************************\n*                                                                     *\n*   CONSTANTS AND ASSORTED GARBAGE                                    *\n*                                                                     *\n***********************************************************************\n         LTORG\nMESSAGE  DC    C'A MAJOR DISASTER HAS OCCURRED IN DAIR PROCESSING.'\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AUTH": {"ttr": 1544, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "AUTH     TITLE 'AUTHORIZATION MODULE FOR THE QUEUE COMMAND'       ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n* MODULE NAME = AUTH                                              ONL02\n*                                                                 ONL02\n* DESCRIPTIVE NAME = AUTHORIZATION MODULE FOR THE QUEUE COMMAND   ONL02\n*                                                                 ONL02\n* AUTHOR = ROBERT M. JINKINS                                      ONL02\n*          OAK RIDGE NATIONAL LABORATORY                          ONL02\n*          BLDG. 4500-N  MS-259                                   ONL02\n*          P.O. BOX X                                             ONL02\n*          OAK RIDGE, TENNESSEE  37830                            ONL02\n*                                                                 ONL02\n*          PHONE: (615) 574-7208/5300                             ONL02\n*                  FTS  624-7208/5300                             ONL02\n*                                                                 ONL02\n*          SHARE INSTALLATION CODE = OR                           ONL02\n*                                                                 ONL02\n* DATE WRITTEN = JUNE 83                                          ONL02\n*                                                                 ONL02\n* FUNCTION = TO PROVIDE A SECURITY FUNCTION WHICH CONTROLS THE    ONL02\n*    USE THE TSO QUEUE COMMAND, ITS SUB-COMMANDS, AND THE JOBS    ONL02\n*    OR DATASETS A USER MAY ACCESS, CHANGE, OR DELETE.  THE AUTH  ONL02\n*    CSECT IS INVOKED AT VARIOUS POINTS DURING QUEUE COMMAND      ONL02\n*    PROCESSING VIA A QAUTHCK MACRO.                              ONL02\n*                                                                 ONL02\n* DEFAULT OPERATION = THE DEFAULT AUTHORITY CHECKING FOR THE      ONL02\n*    QUEUE COMMAND IS AS FOLLOWS:                                 ONL02\n*                                                                 ONL02\n*    (1) THE START-UP ENTRY FROM THE INIT CSECT GIVES JES2        ONL02\n*        SYSTEM PROGRAMMER AUTHORITY TO ANYONE HAS OPERATOR       ONL02\n*        AUTHORITY.  SINCE JES2 SYSTEM PROGRAMMER AUTHORITY HAS   ONL02\n*        GREAT POWER, MANY USERS WILL PROBABLY WANT TO CHANGE     ONL02\n*        THIS TO SUIT THE REQUIREMENTS OF THEIR INSTALLATION.     ONL02\n*        THE SAME CONSIDERATIONS APPLY TO EXEC AUTHORITY (THE     ONL02\n*        ABILITY TO ISSUE TSO COMMANDS WHILE IN QUEUE) BECAUSE    ONL02\n*        THE QUEUECMN AREA COULD BE ALTERED BY USER PROGRAMS      ONL02\n*        EXECUTING IN THAT ENVIRONMENT.                           ONL02\n*                                                                 ONL02\n*    (2) THE START-UP ENTRY FROM THE INIT CSECT ALSO ISSUES A     ONL02\n*        TESTAUTH MACRO.  IF THE QUEUE COMMAND IS NOT APF         ONL02\n*        AUTHORIZED, THEN THE AUTHORITY FOR USING THE SUB-SYSTEM  ONL02\n*        INTERFACE COMMANDS IS TURNED OFF.                        ONL02\n*                                                                 ONL02\n*    (3) THE START-UP ENTRY FROM THE INIT CSECT ALSO SETS THE     ONL02\n*        HELP CONTROL FLAGS FROM THE AUTHORIZATION FLAGS.  SEE    ONL02\n*        THE HELP CSECT FOR MORE INFORMATION ON THE HELP CONTROL  ONL02\n*        FLAGS.                                                   ONL02\n*                                                                 ONL02\n*    (4) THE ENTRY FROM THE PARSE ROUTINE IS USED TO DETERMINE    ONL02\n*        WHO MAY USE A GIVEN QUEUE SUB-COMMAND.  A SUB-COMMAND    ONL02\n*        IS ALLOWED TO PROCEED IF ALL SUB-COMMAND TYPE            ONL02\n*        RESTRICTIONS ('TYPE=' CODED IN THE QSCE MACRO) HAVE      ONL02\n*        CORRESPONDING AUTHORIZATION BITS SET ON IN THE           ONL02\n*        AUTHORIZATION FLAGS (QAFLAGS).                           ONL02\n*                                                                 ONL02\n*    (5) THE ENTRY FROM THE FINDJOB ROUTINE IS ENTERED FOR ANY    ONL02\n*        JOB WHOSE INPUT/OUTPUT IS TO BE ACCESSED BY A QUEUE      ONL02\n*        COMMAND FUNCTION.  THE FUNCTION IS ALLOWED TO PROCEED    ONL02\n*        IF THE JOBNAME BEGINS WITH THE USER'S USERID OR IF THE   ONL02\n*        USER HAS OPERATOR OR JES2 SYSTEM PROGRAMMER AUTHORITY.   ONL02\n*        ALTHOUGH THE ENTRY FROM THE FINDJOB ROUTINE MAY ALLOW    ONL02\n*        THE FUNCTION TO PROCEED, OTHER ENTRIES MAY FUTHER        ONL02\n*        RESTRICT THE ACCESS GRANTED BY THIS ENTRY.               ONL02\n*                                                                 ONL02\n*    (6) THE LIST COMMAND MAY NOT LIST DATASET ID'S LESS THAN     ONL02\n*        101 UNLESS THE USER HAS JES2 SYSTEM PROGRAMMER           ONL02\n*        AUTHORITY.                                               ONL02\n*                                                                 ONL02\n*    (7) THE DEL, REQ, AND CAN COMMANDS MAY NOT ACCESS A JOB      ONL02\n*        WHOSE JOBNAME DOES NOT BEGIN WITH THE USER'S USERID      ONL02\n*        UNLESS THEY HAVE JES2 SYSTEM PROGRAMMER AUTHORITY.       ONL02\n*                                                                 ONL02\n* OPTIONAL OPERATION = CONDITIONAL ASSEMBLY OPTIONS ALTER THE     ONL02\n*    DEFAULT OPERATION OF THE QUEUE COMMAND AS SHOWN BELOW:       ONL02\n*                                                                 ONL02\n*    FCI01  --  IF THE &QACF2 OPTION IS SET, THEN THE ENTRY FROM  FCI01\n*               FINDJOB ALLOWS THE FOLLOWING:                     FCI01\n*                                                                 FCI01\n*                (1) USER WITH OPER AUTH MAY LOOK AT ANY JOB.     FCI01\n*                (2) USER MAY LOOK AT OWN JOBS (USERID MATCHES    FCI01\n*                    LOGONID IN JOB'S JCT).                       FCI01\n*                (3) ACFSVC ISSUED TO CHECK ALL OTHER ACCESSES.   FCI01\n*                                                                 FCI01\n*    RNB03  --  IF THE &QRACF OPTION IS SET, THEN:                RNB03\n*                                                                 RNB03\n*                (1) THE CHECKPOINT/SPOOL PRE-OPEN ENTRY CHANGES  RNB03\n*                    THE USERID IN THE ACEE TO ALLOW THE DATASETS RNB03\n*                    TO BE OPENED IF WE ARE APF AUTHORIZED, RACF  RNB03\n*                    IS UP, AND &QRACUSR IS NOT NULL.  THE POST-- RNB03\n*                    OPEN ENTRY FROM INIT RESTORES THE ORIGINAL   RNB03\n*                    USERID.  ATTENTION INTERRUPTS ARE INHIBITED  RNB03\n*                    DURING THIS INTERVAL.                        RNB03\n*                                                                 RNB03\n*                (2) THE ENTRY FROM READSPC ZEROS THE OLD AND     RNB03\n*                    NEW PASSWORDS FIELDS WHEN JCT'S ARE READ     RNB03\n*                    FROM SPOOL.                                  RNB03\n*                                                                 RNB03\n*                (3) THE ENTRY FROM PARSE IS USED TO PROCESSE     RNB03\n*                    THE XP COMMAND.  A RACHECK MACRO IS ISSUED   RNB03\n*                    TO DETERMINE IF THE USER SHOULD BE GIVEN     RNB03\n*                    JES2 SYSTEM PROGRAMMER AUTHORITY.            RNB03\n*                                                                 RNB03\n*                (4) THE ENTRY FROM FINDJOB ONLY CHECKS FOR       RNB03\n*                    ACCESSES MADE BY THE XD COMMAND AND USES A   RNB03\n*                    RACHECK MACRO TO CONTROL AND LOG ITS USE.    RNB03\n*                                                                 RNB03\n*    RNB05  --  IF THE &QRNB OPTION IS SET, THEN:                 RNB05\n*                                                                 RNB05\n*                (1) THE START-UP ENTRY SETS THE AUTHORITY AND    RNB05\n*                    HELP DISPLAY CONTROL FLAGS FOR THE RNB       RNB05\n*                    ENVIRONMENT.                                 RNB05\n*                                                                 RNB05\n*                (2) THE LIST COMMAND CAN NEVER BE USED FOR       RNB05\n*                    DSID'S LESS THAN 101.  THE XD COMMAND        RNB05\n*                    MUST BE USED INSTEAD.                        RNB05\n*                                                                 RNB05\n*                (3) SPECIAL USERID/JOBNAME/NOTIFY CHECKING IS    RNB05\n*                    USED TO CONTROL DATASET ACCRESS BY THE LIST  RNB05\n*                    COMMAND (SEE COMMENTS IN THE CODE).          RNB05\n*                                                                 RNB05\n*    RNB06  --  IF THE &QRNB OPTION IS SET, THEN THE ENTRY FROM   RNB06\n*               PARSE INHIBITS THE MODEL, TSO, AND EXEC COMMANDS. RNB06\n*                                                                 RNB06\n*    RNB08  --  IF THE &QRNB OPTION IS SET, THEN THE ENTRY FROM   RNB08\n*               SYSOUT (THE DEL, REQ, AND CAN COMMANDS) IS USED   RNB08\n*               TO PERFORM SPECIAL USERID/JOBNAME/NOTIFY/USER=    RNB08\n*               CHECKING (SEE COMMENTS IN THE CODE).              RNB03\n*                                                                 RNB08\n*    ONL06  --  IF THE &QONL OPTION IS SET, JES2 SYSTEM           ONL06\n*               PROGRAMMER AUTHORITY IS ONL GRANTED ONLY IF THE   ONL06\n*               USER HAS OPERATOR AUTHORITY AND THEIR USERID      ONL06\n*               IS CONTAINED IN A TABLE IN THIS ASSEMBLY.         ONL06\n*                                                                 ONL06\n* CHANGE ACTIVITY = NONE                                          ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         EJECT ,                                                  ONL02\n         GBLB  &QACF2              ACF2 OPTION                    FCI01\n         GBLB  &QRACF              RACF OPTION                    RNB03\n         GBLB  &QRNB               RNB OPTION                     RNB05\n         GBLB  &QONL               ONL OPTION                     ONL06\n         SPACE 1                                                  FCI01\n         GBLC  &ACF2XIT,&ACF2DCT,&ACF2JCT,&OFFSET                 FCI01\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  DO ENTRY POINT HOUSEKEEPING FOR THE AUTH CSECT                 ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nAUTH     QSTART ,                  START AUTH CSECT ASSEMBLY      ONL02\n         SPACE 2                                                  ONL02\n*                                                                 ONL02\n*  SETUP ADDRESSABILITY FOR COMMON SUB-AREAS AND SAVE/WORK AREA   ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\n         USING WORK,R13            NOTE SAVE/WORK ADDRESSABILITY  ONL02\n         SPACE 1                                                  ONL02\n         L     R10,QVDAIR          ADDR OF DAIR WORK AREA         ONL02\n         USING QDAIR,R10           NOTE DAIR WORK ADDRESSABILITY  ONL02\n         SPACE 1                                                  ONL02\n         L     R9,QVCKPT           ADDR OF CKPT WORK AREA         ONL02\n         USING QCKPT,R9            NOTE CKPT WORK ADDRESSABILITY  ONL02\n         EJECT ,                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  VALIDATE AUTHORIZATION REQUEST CODE AND ENTER PROCESSING RTN   ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         CLI   QACODE,MAXCODE      IS REQUEST CODE WITHIN RANGE ? ONL02\n         BH    BOMB                ERROR IF NO                    ONL02\n         SPACE 1                                                  ONL02\n         SLR   R15,R15             ENTER                          ONL02\n         IC    R15,QACODE           PROCESSING ROUTINE            ONL02\n         SLL   R15,2                 PER                          ONL02\n         B     VECTOR(R15)            AUTHORIZATION REQUEST CODE  ONL02\n         SPACE 1                                                  ONL02\nVECTOR   DS    0H                  AUTH REQUEST CODE VECTOR       ONL02\n         B     Q#NULL           0  NULL REQUEST                   ONL02\n         B     Q#START          1  QUEUE COMMAND START-UP         ONL02\n         B     Q#END            2  QUEUE COMMAND TERMINATION      ONL02\n         B     Q#ALLOC          3  DATASET ALLOCATION/UNALLOCATIONONL02\n         B     Q#BEFOPN         4  BEFORE CKPT/SPOOL OPEN         ONL02\n         B     Q#AFTOPN         5  AFTER CKPT/SPOOL OPEN          ONL02\n         B     Q#SPOOL          6  READSPC RTN (AFTER SPOOL I/O)  ONL02\n         B     Q#PARSE          7  QUEUE SUBCOMMAND AUTHORIZATION ONL02\n         B     Q#FINDJ          8  FINDJOB RTN FOR JOB            ONL02\n         B     Q#JCL            9  JCL CMD FOR JOB                ONL02\n         B     Q#JLOG          10  JLOG CMD FOR JOB               ONL02\n         B     Q#JMSG          11  JMSG CMD FOR JOB               ONL02\n         B     Q#LIST          12  LIST CMD FOR JOB/DSID          ONL02\n         B     Q#JHIST         13  JHIST CMD FOR JOB              ONL02\n         B     Q#DD            14  DD CMD FOR JOB                 ONL02\n         B     Q#PDDB          15  PDDB CMD FOR JOB               ONL02\n         B     Q#SYSOUT        16  DEL/REQ/CAN CMDS FOR JOB       ONL02\n         B     Q#SYSLOG        17  AUTHORIZATION TO LOOK AT SYSLOGONL02\n         SPACE 1                                                  ONL02\nMAXCODE  EQU   (*-4-VECTOR)/4      MAX SUPPORTED REQUEST CODE     ONL02\n         SPACE 1                                                  ONL02\nBOMB     DS    0H                  INVALID AUTH REQUEST CODE      ONL02\n         WTO   'QUEUE COMMAND INTERNAL LOGIC ERROR IN AUTH RTN',  ONL02X\n               ROUTCDE=11                                         ONL02\n         SPACE 1                                                  ONL02\n         ABEND 913                 ABEND U0913                    ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = NULL REQUEST                            ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#NULL   DS    0H                  NULL REQUEST                   ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         EJECT ,                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = QUEUE COMMAND START-UP                  ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#START  DS    0H                  QUEUE COMMAND START-UP         ONL02\n         SPACE 1                                                  ONL02\n         AIF   (&QONL).ONL06S1                                    ONL06\n         AIF   (&QRNB).RNB05S1                                    RNB05\n*                                                                 ONL02\n*  THE DEFAULT CODE FOR THIS ENTRY GIVES JES2 SYSTEM PROGRAMMER   ONL02\n*  AUTHORITY AND THE ABILITY TO ISSUE TSO COMMANDS FROM QUEUE     ONL02\n*  TO ANYONE WHO HAS OPERATOR AUTHORITY.                          ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\n         OI    QAFLAGS,QAFXEXEC    GIVE ALL USERS TSO CMD AUTH    WGH\n         TM    QAFLAGS,QAFXOPER    DOES USER HAVE OPER AUTHORITY? ONL02\n         BZ    QSNOOPER            SKIP IF NO                     ONL02\n         OI    QAFLAGS,QAFXSYSP+QAFXSLOG  GIVE USER UNLIMITED AUTH WGH\n*        OI    QAFLAGS,QAFXSYSP+QAFXEXEC  GIVE USER UNLIMITED AUTHONL02\nQSNOOPER DS    0H                                                 ONL02\n         SPACE 2                                                  ONL02\n         AGO   .ONL06S2                                           ONL06\n.ONL06S1 ANOP  ,                                                  ONL06\n*                                                                 ONL06\n*  AT ONL, USERS ARE DIVIDED INTO THREE GROUPS:                   ONL06\n*                                                                 ONL06\n*    (1) ORDINARY USERS                                           ONL06\n*    (2) USERS WITH THE TSO OPERATOR PRIVILEGE                    ONL06\n*    (3) JES2 SYSTEM PROGRAMMERS                                  ONL06\n*                                                                 ONL06\n*  THESE GROUPS ARE GIVEN THE FOLLOWING QUEUE AUTHORIZATIONS:     ONL06\n*                                                                 ONL06\n*    AUTHORIZATION    ----GROUP----    DESCRIPTION                ONL06\n*    -------------    (1)  (2)  (3)    -------------------------  ONL06\n*      QAFXACTV             X    X     DISPLAY ACTIVE LISTS       ONL06\n*      QAFXBLOG             X    X     DISPLAY BACKLOG LISTS      ONL06\n*      QAFXSSSM        X    X    X     MAY USE CAN/DEL/REQ        ONL06\n*      QAFXSLOG             X    X     MAY LOOK AT SYSLOG         ONL06\n*      QAFXEXEC                  X     MAY ISSUE TSO CMDS IN QUE  ONL06\n*      QAFXOPER             X    X     OPERATOR AUTHORITY         ONL06\n*      QAFXSYSP                  X     JES2 SYSTEM PROGRAMMER     ONL06\n*                                                                 ONL06\n*  A USER IS GRANTED JES2 SYSTEM PROGRAMMER AUTHORITY ONLY        ONL06\n*  IF THEY HAVE OPERATOR AUTHORITY AND THEIR USERID IS ALSO       ONL06\n*  CONTAINED IN A TABLE BELOW (SEE SYMBOL SYSPTABL).              ONL06\n*                                                                 ONL06\n         SPACE 1                                                  ONL06\n         NI    QAFLAGS,QAFXOPER    CLEAR ALL BUT OPER AUTHORITY   ONL06\n         OI    QAFLAGS,QAFXSSSM    ASSUME GROUP 1 AUTHORITY       ONL06\n         SPACE 1                                                  ONL06\n         TM    QAFLAGS,QAFXOPER    DOES USER HAVE OPER AUTHORITY? ONL06\n         BZ    QSNOOPER            SKIP IF NO                     ONL06\n         SPACE 1                                                  ONL06\n         OI    QAFLAGS,QAFXACTV+QAFXBLOG+QAFXSLOG ADD GROUP 2 AUTHONL06\n         SPACE 1                                                  ONL06\n         LA    R2,SYSPTABL         ADDR OF JES2 SYSTEM PGMR TABLE ONL06\n         SPACE 1                                                  ONL06\nQSNEXTSP DS    0H                  CHECK NEXT SYSTEM PGMR ENTRY   ONL06\n         CLI   0(R2),X'FF'         END OF TABLE ?                 ONL06\n         BE    QSNOSYSP            SKIP IF YES                    ONL06\n         CLC   QLOGON,0(R2)        DOES USERID MATCH TABLE ENTRY? ONL06\n         BE    QSSPHIT             SKIP IF YES                    ONL06\n         LA    R2,8(,R2)           BUMP ADDR TO NEXT ENTRY        ONL06\n         B     QSNEXTSP            LOOP TO CHECK NEXT ENTRY       ONL06\n         SPACE 1                                                  ONL06\nSYSPTABL DS    0CL8                USERID'S OF JES2 SYSTEM PGMR'S ONL06\n         DC    X'FF'               NO SPECIAL USERS               WGH\n         DC    CL8'SIC'                                           ONL06\n         DC    CL8'TDC'                                           ONL06\n         DC    X'FF'               FLAG END OF TABLE              ONL06\n         SPACE 1                                                  ONL06\nQSSPHIT  DS    0H                  USER ID FOUND IN SYS PGMR TABLEONL06\n         OI    QAFLAGS,QAFXSYSP+QAFXEXEC  SET JES2 SYS-PGMR & EXECONL06\nQSNOSYSP DS    0H                  CONT HERE IF NOT JES2 SYS PGMR ONL06\nQSNOOPER DS    0H                  CONT HERE IF NO OPER AUTHORITY ONL06\n         SPACE 1                                                  ONL06\n.RNB05S1 AIF   (NOT &QRNB).RNB05S2                                RNB05\n         SPACE 1                                                  RNB05\n*                                                                 RNB05\n*  AT RNB, THE AUTHORIZATION FLAGS ARE SET AS FOLLOWS:            RNB05\n*                                                                 RNB05\n         MVI   QAFLAGS,QAFXACTV+QAFXBLOG+QAFXSSSM+QAFXSLOG        RNB05\n         SPACE 1                                                  RNB05\n.RNB05S2 ANOP  ,                                                  RNB05\n.ONL06S2 ANOP  ,                                                  ONL06\n*                                                                 ONL02\n*  THE DEFAULT CODE FOR THIS ENTRY TURNS OF AUTHORITY FOR THE     ONL02\n*  SUB-SYSTEM INTERFACE COMMANDS IF THE QUEUE COMMAND IS NOT      ONL02\n*  APF AUTHORIZED.                                                ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\n         TESTAUTH FCTN=1           TEST FOR APF AUTHORIZATION     ONL02\n         SPACE 1                                                  ONL02\n         LTR   R15,R15             ARE WE APF AUTHORIZED?         ONL02\n         BZ    QSNOTAPF            SKIP IF YES                    ONL02\n         NI    QAFLAGS,255-QAFXSSSM  ELSE, TURN OFF SSSM AUTHORITYONL02\nQSNOTAPF DS    0H                                                 ONL02\n         SPACE 2                                                  ONL02\n*                                                                 ONL02\n*  THE DEFAULT CODE FOR THIS ENTRY SETS THE HELP CONTROL FLAGS    ONL02\n*  FROM THE AUTHORITY FLAGS.                                      ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\n         MVC   QAHELP,QAFLAGS      SET HELP FLAGS PER AUTHORITY   ONL02\n         SPACE 1                                                  ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = QUEUE COMMAND TERMINATION               ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#END    DS    0H                  QUEUE COMMAND TERMINATION      ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = DATASET ALLOCATION/UNALLOCATION         ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#ALLOC  DS    0H                  DATASET ALLOCATION/UNALLOCATIONONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = PRE-OPEN FOR CHECKPOINT/SPOOL DATASETS  ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#BEFOPN DS    0H                  BEFORE CKPT/SPOOL OPEN         ONL02\n         SPACE 1                                                  RNB03\n         AIF   (NOT &QRACF).RNB03BO                               RNB03\n         SPACE 1                                                  RNB03\n         TESTAUTH FCTN=1           APF-AUTHORIZED?                RNB03\n         LTR   R15,R15                                            RNB03\n         BNZ   RNB03BO             /NO  - CAN'T CHG ACEEUSER      RNB03\n*                                  /YES -                         RNB03\n         RACSTAT ,                 IS RACF UP?                    RNB03\n         LTR   R15,R15                                            RNB03\n         BNZ   RNB03BO             /NO  - CAN'T CHG ACEEUSER      RNB03\n*                                  /YES -                         RNB03\n         CLI   QNEWUSR,0           IS THERE A NEW USERID TO USE?  RNB03\n         BE    RNB03BO             /NO  - CAN'T CHG ACEEUSER      RNB03\n*                                  /YES - CHANGE ACEEUSER TO      RNB03\n*                                         ALLOW ACCESS TO THE     RNB03\n*                                         SPOOL/CKPT DATA SETS    RNB03\n         L     R2,CVTPTR           CVT                            RNB03\n         USING CVT,R2              #####                          RNB03\n         L     R2,CVTTCBP          TCB WORDS                      RNB03\n         L     R2,12(,R2)          CURRENT ASCB                   RNB03\n         USING ASCB,R2             #####                          RNB03\n         L     R2,ASCBASXB         ASXB                           RNB03\n         USING ASXB,R2             #####                          RNB03\n         ICM   R2,15,ASXBSENV      ACEE                           RNB03\n         BZ    RNB03BO             FORGET IT IF NO ACEE           RNB03\n         USING ACEE,R2             #####                          RNB03\n         CLC   =C'ACEE',ACEEACEE   REALLY AN ACEE?                RNB03\n         BNE   RNB03BO             /NO  - FORGET IT               RNB03\n         MVC   QUSRSAV,ACEEUSER    /YES - SAVE CURRENT USERID     RNB03\n         STAX  DEFER=YES           DON'T ALLOW ATTENTION'S        RNB03\n         MODESET KEY=ZERO          GET KEY ZERO TO UPDATE ACEE    RNB03\n         MVC   ACEEUSER,QNEWUSR    SET NEW USERID                 RNB03\n         MODESET KEY=NZERO         BACK TO USER KEY               RNB03\nRNB03BO  DS    0H                                                 RNB03\n         DROP  R2                  #####                          RNB03\n         SPACE 1                                                  RNB03\n.RNB03BO ANOP  ,                                                  RNB03\n         SPACE 1                                                  RNB03\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = POST-OPEN FOR CHECKPOINT/SPOOL DATASETS ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#AFTOPN DS    0H                  AFTER CKPT/SPOOL OPEN          ONL02\n         SPACE 1                                                  RNB03\n         AIF   (NOT &QRACF).RNB03AO                               RNB03\n         SPACE 1                                                  RNB03\n         CLI   QUSRSAV,0           DID WE CHANGE ACEEUSER?        RNB03\n         BE    RNB03AO             /NO  - SKIP THIS CODE          RNB03\n*                                  /YES - PUT USERID BACK         RNB03\n         L     R2,CVTPTR           CVT                            RNB03\n         USING CVT,R2              #####                          RNB03\n         L     R2,CVTTCBP          TCB WORDS                      RNB03\n         L     R2,12(,R2)          CURRENT ASCB                   RNB03\n         USING ASCB,R2             #####                          RNB03\n         L     R2,ASCBASXB         ASXB                           RNB03\n         USING ASXB,R2             #####                          RNB03\n         ICM   R2,15,ASXBSENV      ACEE                           RNB03\n         USING ACEE,R2             #####                          RNB03\n         MODESET KEY=ZERO          GET KEY ZERO TO UPDATE ACEE    RNB03\n         MVC   ACEEUSER,QUSRSAV    SET OLD USERID                 RNB03\n         MODESET KEY=NZERO         BACK TO USER KEY               RNB03\n         STAX  DEFER=NO            ALLOW ATTENTION INTERRUPTS     RNB03\nRNB03AO  DS    0H                                                 RNB03\n         DROP  R2                  #####                          RNB03\n         SPACE 1                                                  RNB03\n.RNB03AO ANOP  ,                                                  RNB03\n         SPACE 1                                                  RNB03\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = READSPC ROUTINE (AFTER SPOOL I/O)       ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#SPOOL  DS    0H                  READSPC RTN (AFTER SPOOL I/O)  ONL02\n         SPACE 1                                                  RNB03\n         AIF   (NOT &QRACF).RNB03SR                               RNB03\n*                                                                 RNB03\n*  WIPE OUT THE OLD AND NEW PASSWORDS WHEN A JCT IS READ FROM     RNB03\n*  THE SPOOL.                                                     RNB03\n*                                                                 RNB03\n         SPACE 1                                                  RNB03\n         LR    R8,R1               COPY ADDR OF SPOOL BUFFER      RNB03\n         SL    R8,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16\n         USING JCT,R8              NOTE JCT ADDRESSABILITY        ONL16\n         SPACE 1                                                  RNB03\n         CLC   JCTID,=CL4'JCT'     DID WE READ A JCT?             RNB03\n         BNE   RNB03SRO            /NO  - FORGET IT               RNB03\n         CLC   JCTJNAME,JCTJMRJN   JOB NAME IN BOTH PLACES?       RNB03\n         BNE   RNB03SRO            /NO  - FORGET IT               RNB03\n         CLC   =C'JOB ',JCTJOBID   IS IT AN STC, A JOB, OR A TSU? RNB03\n         BE    RNB03SRJ            IF SO, ASSUME THIS IS A JCT    RNB03\n         CLC   =C'TSU ',JCTJOBID                                  RNB03\n         BE    RNB03SRJ                                           RNB03\n         CLC   =C'STC ',JCTJOBID                                  RNB03\n         BNE   RNB03SRO                                           RNB03\n         SPACE 1                                                  RNB03\nRNB03SRJ DS    0H                  THIS MUST BE A JCT             RNB03\n         XC    JCTPASS,JCTPASS     WIPE OUT THE OLD AND           RNB03\n         XC    JCTNUPAS,JCTNUPAS    NEW PASSWORDS                 RNB03\nRNB03SRO DS    0H                  CONT. HERE IF NOT A GOOD JCT   RNB03\n         DROP  R8                  KILL JCT ADDRESSABILITY        RNB03\n         SPACE 1                                                  RNB03\n.RNB03SR ANOP  ,                                                  RNB03\n         SPACE 1                                                  RNB03\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         EJECT ,                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = QUEUE SUBCOMMAND AUTHORIZATION          ONL02\n*                                                                 ONL02\n*   THIS ENTRY IS USED TO CONTROL WHO CAN USE WHICH QUEUE         ONL02\n*   SUB-COMMAND.  OTHER ENTRIES MAY FUTHER RESTRICT THE FUNCTION  ONL02\n*   OF SOME SUB-COMMANDS.  INSTALLATIONS MAY TAYLOR THE FUNCTION  ONL02\n*   OF THIS ENTRY BY ASSIGNING USER FLAGS IN THE PARSE TABLE      ONL02\n*   (QSCE MACROS) AND BY INSERTING THEIR OWN CODE BELOW.          ONL02\n*                                                                 ONL02\n*   A SUB-COMMAND IS ALLOWED TO PROCEED IF ALL SUB-COMMAND TYPE   ONL02\n*   RESTRICTIONS ('TYPE=' CODED IN THE QSCE MACRO) HAVE           ONL02\n*   CORRESPONDING AUTHORIZATION BITS SET ON IN THE AUTHORIZATION  ONL02\n*   FLAGS (QAFLAGS).                                              ONL02\n*                                                                 ONL02\n*   THE USER WILL GET THE HELP SCREEN IF THEY ENTER A COMMAND     ONL02\n*   WHICH IS NOT ALLOWED.                                         ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#PARSE  DS    0H                  QUEUE SUBCOMMAND AUTHORIZATION ONL02\n         SPACE 1                                                  ONL02\n*  INSERT CODE HERE TO SUPERCEDE STANDARD CHECKING                ONL02\n         SPACE 1                                                  ONL02\n         ICM   R2,1,QASCFLGS       PICKUP SUB-COMMAND AUTH FLAGS  ONL02\n         BZ    QPOK                SKIP IF NO RESTRICTIONS        ONL02\n         EX    R2,QPTM             DOES USER HAVE THE AUTHORITY?  ONL02\n         BO    QPOK                SKIP IF COMMAND IS ALLOWED     ONL02\n         SPACE 1                                                  ONL02\n*  INSERT CODE HERE TO ALLOW RESTRICTED SUB-COMMANDS TO PROCEED   ONL02\n         SPACE 1                                                  ONL02\nQPNOK    DS    0H                  COMMAND IS NOT ALLOWED         ONL02\n         XC    QCODEH,QCODEH       CLEAR FUNCTION CODE            ONL02\n         MVC   QSUBCMD,=V(HELP)    REDIRECT TO THE HELP ROUTINE   ONL02\n         B     AUTHOK              PROCEED AS IF HELP WERE ENTEREDONL02\n         SPACE 2                                                  ONL02\nQPOK     DS    0H                  COMMAND IS ALLOWED             ONL02\n         SPACE 1                                                  ONL02\n*  INSERT CODE HERE TO IMPOSE ADDTIONAL RESTRICTIONS              ONL02\n         AIF   (NOT &QRACF).RNB03P1                               RNB03\n*                                                                 RNB03\n*  ISSUE RACHECK MACRO AND SET JES2 SYSTEM PROGRAMMER AUTHORITY   RNB03\n*  IF USER IS AUTHORIZED                                          RNB03\n*                                                                 RNB03\n         SPACE 1                                                  RNB03\n         CLC   =C'XP',QSUBNAME     IS THIS THE XP COMMAND?        RNB03\n         BNE   QPNOTXP             SKIP IF NO                     RNB03\n         SPACE 1                                                  RNB03\n         RACHECK ENTITY=QRACNMXP,MF=(E,QRACHECK)                  RNB03\n         SPACE 1                                                  RNB03\n         LTR   R15,R15             IS USER AUTHORIZED?            RNB03\n         BNZ   QPNOK               IF NOT, DON'T ALLOW COMMAND    RNB03\n         OI    QAFLAGS,QAFXSYSP    GIVE USER JES2 SYS PGMR AUTH   RNB03\n         OI    QAHELP,QAHXSYSP     UPDATE HELP DISPLAY CNTL FLAGS RNB03\nQPNOTXP  DS    0H                                                 RNB03\n         SPACE 1                                                  RNB03\n.RNB03P1 ANOP  ,                                                  RNB03\n         AIF   (NOT &QRNB).RNB06P2                                RNB06\n*                                                                 RNB06\n*  AT RNB, CERTAIN COMMANDS ARE NOT ALLOWED                       RNB06\n*                                                                 RNB06\n         SPACE 1                                                  RNB06\n         CLC   =C'MO',QSUBNAME     DO NOT                         RNB06\n         BE    QPNOK                ALLOW                         RNB06\n         CLC   =C'M ',QSUBNAME       THE MODEL,                   RNB06\n         BE    QPNOK                  TSO, OR                     RNB06\n         CLC   QSUBCMD,=V(CTSO)        EXEC                       RNB06\n         BE    QPNOK                    COMMANDS                  RNB06\n.RNB06P2 ANOP  ,                                                  RNB06\n         SPACE 1                                                  ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\nQPTM     TM    QAFLAGS,*-*         (EXECUTED) MATCH AUTH FLAGS    ONL02\n         EJECT ,                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = FINDJOB ROUTINE FOR JOB AUTHORIZATION   ONL02\n*                                                                 ONL02\n*   THIS ENTRY IS THE FIRST LINE OF DEFENSE AT THE JOB LEVEL.  IT ONL02\n*   IS ENTERED BEFORE A USER CAN LOOK AT A JOB'S INPUT/OUTPUT OR  ONL02\n*   DO ANYTHING WITH A JOB.  OTHER ENTRIES IN THIS AUTHORIZATION  ONL02\n*   MODULE MAY FUTHER REFINE A JOB LEVEL AUTHORITY GRANTED BY     ONL02\n*   THIS ENTRY.                                                   ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#FINDJ  DS    0H                  FINDJOB RTN FOR JOB            ONL02\n         SPACE 1                                                  ONL02\n         AIF   (&QRACF).RNB03F1                                   RNB03\n*                                                                 ONL02\n*  THE DEFAULT CODE FOR THIS ENTRY IS TO ALLOW THE USER ACCESS    ONL02\n*  TO ANY JOB WHOSE JOBNAME BEGINS WITH THEIR USERID.  USERS      ONL02\n*  WITH OPERATOR AUTHORITY OR JES2 SYSTEM PROGRAMMER AUTHORITY    ONL02\n*  HAVE ACCESS TO ALL JOBS IN THE SYSTEM.  THE ACCESS MAY BE      ONL02\n*  RESTRICTED BY OTHER ENTRIES IN THIS MODULE.                    ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\n         TM    QAFLAGS,QAFXOPSP    USER HAS OPER OR SYS PGMR AUTH?ONL02\n         BNZ   AUTHOK              DONE IF YES, ALLOW ACCESS      ONL02\n         SPACE 1                                                  ONL02\n         L     R8,QCJCTA           ADDR OF JCT                    ONL02\n         USING JCT,R8              NOTE JCT ADDRESSABILITY        ONL16\n         SPACE 1                                                  ONL02\n         ICM   R1,15,QLOGONLN      GET LENGTH OF USERID           ONL02\n         BNP   FINDJNOK            ERROR IF NO LENGTH             ONL02\n         BCTR  R1,0                LESS ONE FOR EXECUTE           ONL02\n         EX    R1,FINDJCLC         JOBNAME BEGINS WITH USERID ?   ONL02\n         BE    AUTHOK              DONE IF YES, ALLOW ACCESS      ONL02\n         B     FINDJNOK            ELSE, GO TELL USER             ONL02\n         SPACE 1                                                  ONL02\nFINDJCLC CLC   JCTJNAME(*-*),QLOGON  EXECUTED - MATCH JOBNAME     ONL02\n         SPACE 1                                                  ONL02\nFINDJNOK DS    0H                  JOBNAME DOESN'T MATCH USERID   ONL02\n         SPACE 1                                                  FCI01\n         AIF   (NOT &QACF2).FCI01F1                               FCI01\n*                                                                 FCI01\n*  THIS CODE USES THE ACF2 SVC TO SEE IF THE USER MAY ACCESS A    FCI01\n*  FICTITIOUS DSNAME OF THE FORM 'SYSOUT.LOGONID.JOBNAME'.  IF    FCI01\n*  ACF2 WILL ALLOW THIS ACCESS, THEN THE QUEUE FUNCTION WILL      FCI01\n*  PROCEED.                                                       FCI01\n*                                                                 FCI01\n         SPACE 1                                                  FCI01\n         AIF   (NOT &QACF2).FCI01F2                               FCI01\n         SPACE 1                                                  FCI01\n         #ACFJES2 ,                SET ACF2 MVS/SP JES2 SPECS.    FCI01\n         SPACE 1                                                  FCI01\n         ICM   R7,15,&ACF2JCT      ACF2 AREA OFFSET IN JCT        FCI01\n         BZ    ADSNNOK             DENY ACCESS IF NO ACF2 AREA    FCI01\n         LA    R7,JCT(R7)          ADDR OF ACF2 AREA              ONL16\n         USING #ACFJCTX,R7         NOTE ACF AREA 2ADDRESSABILITY  FCI01\n         SPACE 1                                                  FCI01\n         CLC   JCTACFJ,=C'ACFJ'    IS IT THE ACF2 AREA ?          FCI01\n         BZ    ADSNNOK             IF NOT, DENY ACCESS            FCI01\n         SPACE 1                                                  FCI01\n.FCI01F2 ANOP  ,                                                  FCI01\n         SPACE 1                                                  FCI01\n         CLC   QLOGON,LIDLID       USERS LOGONID=JOBS ACF LOGONID?FCI01\n         BE    AUTHOK              YES..CONTINUE FORTHWITH        FCI01\n         SPACE 1                                                  FCI01\n         ACFGACVT R6,NONE=ADSNNOK  GET THE ACF2 CVT               FCI01\n         SPACE 1                                                  FCI01\n         USING ACCVT,R6            NOTE ACF2 CVT ADDRESSABILITY   FCI01\n         SPACE 1                                                  FCI01\n         MVC   ADSNAME,=CL44'SYSOUT. '  INITIALIZE DSNAME TO USE  FCI01\n         XC    ACFSPARM(ACFSPRML),ACFSPARM   CLEAR REQUEST BLOCK  FCI01\n         MVI   ACFSPREQ,ACFSPRDS   DSNAME ACCESS ONLY             FCI01\n         MVI   ACFSPID1,ACFSPIUR   DIS AM DE USER TALKING....     FCI01\n         LA    R5,ADSNAME          GET DSNAME ADDRESS             FCI01\n         ST    R5,ACFSPDSN         AND GIVE IT TO ACF PARM LIST   FCI01\n         SPACE 1                                                  FCI01\n*  GENERATE A DSN OF THE FORM 'SYSOUT.LOGONID.JOBNAME'            FCI01\n         SPACE 1                                                  FCI01\n         MVC   ADSNAME+7(8),LIDLID MOVE LID TO DSNAME             FCI01\n         CLI   ADSNAME+7,C' '      IS THE LID BLANK?              FCI01\n         BNE   ADSNCHK0            NO..NORMAL PROCESS             FCI01\n         SPACE 1                                                  FCI01\n*  GOT HERE BECAUSE LID IS ' ' (BLANK)..SUBSTITUTE 'SYSTEM'       FCI01\n         MVC   ADSNAME+7(8),=CL8'SYSTEM'                          FCI01\n         SPACE 1                                                  FCI01\nADSNCHK0 LA    R1,ADSNAME+7        GET ADDRESS                    FCI01\n         LA    R5,8                LOAD COUNT                     FCI01\nADSNCHK  CLI   0(R1),C' '          LOOK FOR BLANK                 FCI01\n         BE    ADSNCHK1            GOTIT..                        FCI01\n         LA    R1,1(R1)            BUMP AND                       FCI01\n         BCT   R5,ADSNCHK            GRIND                        FCI01\nADSNCHK1 MVI   0(R1),C'.'          MOVE IN PERIOD..               FCI01\n         MVC   1(8,R1),JCTJNAME    MOVE IN JOBNAME                FCI01\n         SPACE 1                                                  FCI01\n         LA    R1,ACFSPARM         GET ADDRESS OF PARM FIELD      FCI01\n         ACFSVC (1),TYPE=S,NONE=ADSNNOK,CVT=HAVE  INVOKE A C F 2  FCI01\n         SPACE 1                                                  FCI01\n         LTR   R15,R15             HOW DID YOU LIKE THEM APPLES?  FCI01\n         BC    8,AUTHOK            ..OK BY YOU...CONTINUE..       FCI01\n         SPACE 1                                                  FCI01\nADSNNOK  DS    0H                  ACF2 DOWN OR ACCESS NOT ALLOWEDFCI01\n         QTILT '*** SORRY..NO ACF2 AUTHORITY TO LOOK AT THIS JOB' FCI01\n         SPACE 1                                                  FCI01\n         DROP  R6                  KILL ACF2 CVT ADDRESSABILITY   FCI01\n         SPACE 1                                                  FCI01\n         AIF   (NOT &QACF2).FCI01F1                               FCI01\n         SPACE 1                                                  FCI01\n         DROP  R7                  KILL ACF AREA 2ADDRESSABILITY  FCI01\n         SPACE 1                                                  FCI01\n.FCI01F1 ANOP  ,                                                  FCI01\n         SPACE 1                                                  FCI01\n         QTILT '*** JOBNAME MUST BEGIN WITH USERID ***'           ONL02\n         SPACE 1                                                  ONL02\n         DROP  R8                  KILL JCT ADDRESSABILITY        ONL02\n         SPACE 1                                                  RNB03\n         AGO   .RNB03F2                                           RNB03\n.RNB03F1 ANOP  ,                                                  RNB03\n*                                                                 RNB03\n*  AT RNB, CHECKING FOR THE ENTRY FROM FINDJOB IS DONE ONLY FOR   RNB03\n*  THE XD SUB-COMMAND:  RACHECK FOR APPL-QUEUEXDS AND PASS THE    RNB03\n*  JOBNAME AS THE APPL FOR LOGGING                                RNB03\n*                                                                 RNB03\n         SPACE 1                                                  RNB03\n         CLC   =C'XD',QSUBNAME     IS THIS AN XD COMMAND?         RNB03\n         BNE   AUTHOK              DONE IF NO                     RNB03\n         SPACE 1                                                  RNB03\n         L     R2,QCJCTA           ADDR OF JCT                    RNB03\n         USING JCT,R2              NOTE JCT ADDRESSABILITY        RNB03\n         SPACE 1                                                  RNB03\n         RACHECK ENTITY=QRACNMXD,APPL=JCTJNAME,MF=(E,QRACHECK)    RNB03\n         SPACE 1                                                  RNB03\n         LTR   R15,R15             IS ACCESS ALLOWED?             RNB03\n         BZ    AUTHOK              DONE IF YES                    RNB03\n         SPACE 1                                                  RNB03\n         QTILT '*** XDS COMMAND NOT ALLOWED ***'                  RNB03\n         SPACE 1                                                  RNB03\n         DROP  R2                  KILL JCT ADDRESSABILITY        RNB03\n         SPACE 1                                                  RNB03\n.RNB03F2 ANOP  ,                                                  RNB03\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = JCL COMMAND FOR JOB AUTHORIZATION       ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#JCL    DS    0H                  JCL COMMAND FOR JOB            ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = JLOG COMMAND FOR JOB AUTHORIZATION      ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#JLOG   DS    0H                  JLOG COMMAND FOR JOB           ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = JMSG COMMAND FOR JOB AUTHORIZATION      ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#JMSG   DS    0H                  JMSG COMMAND FOR JOB           ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         EJECT ,                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = LIST COMMAND FOR JOB/DSID AUTHORIZATION ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#LIST   DS    0H                  LIST CMD FOR JOB AND DSID      ONL02\n         SPACE 1                                                  ONL02\n         AIF   (&QRNB).RNB05L1                                    RNB05\n*                                                                 ONL02\n*  THE DEFAULT CODE DOES NOT ALLOW THE LIST COMMAND TO BE USED    ONL02\n*  FOR A DATASET ID (DSID) LESS THAN 101 UNLESS THE USER HAS JES2 ONL02\n*  SYSTEM PROGRAMMER AUTHORITY.                                   ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\n         TM    QAFLAGS,QAFXSYSP    DOES USER HAVE SYS PGMR AUTH ? ONL02\n         BO    DSIDOK              SKIP IF YES, ALLOW ANY DSID    ONL02\n         CLC   QPDSID,=X'FFFF'     IS THE DSID INVALID?             SBG\n         BE    DSIDBAD             GO MAKE SURE IT IS.              SBG\n         CLC   QPDSID,=H'101'      IS THE DSID ID LESS THAN 101?  ONL02\n         BNL   DSIDOK              SKIP IF YES                    ONL02\n         SPACE 1                                                  ONL02\nDSIDBAD  MVC   QPDSID,=X'FFFF'     INVALIDATE DSID                  SBG\n         SPACE 1                                                  ONL02\n         QTILT '*** DATASET ID INVALID ***'                       ONL02\n         SPACE 1                                                  ONL02\nDSIDOK   DS    0H                  THE DSID IS OK                 ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 1                                                  RNB05\n         AGO   .RNB05L2                                           RNB05\n.RNB05L1 ANOP  ,                                                  RNB05\n*                                                                 RNB05\n*  AT RNB, THE LIST COMMAND MAY NOT BE USED FOR A DATASET ID      RNB05\n*  (DSID) LESS THAN 101.                                          RNB05\n*                                                                 RNB05\n         SPACE 1                                                  RNB05\n         CLC   QPDSID,=X'FFFF'     IS THE DSID INVALID?             SBG\n         BE    DSIDBAD1            GO MAKE SURE IT IS.              SBG\n         CLC   QPDSID,=H'101'      IS THE DSID ID LESS THAN 101?  RNB05\n         BNL   DSIDOK              SKIP IF YES                    RNB05\nDSIDBAD1 MVC   QPDSID,=X'FFFF'     INVALIDATE DSID                  SBG\n         QTILT '*** DATASET ID INVALID ***'                       RNB05\n         SPACE 1                                                  RNB05\nDSIDOK   DS    0H                  THE DSID IS OK                 RNB05\n         SPACE 2                                                  RNB05\n*                                                                 RNB05\n*  AT RNB, THE JOBNAME MUST BEGIN WITH THE USER'S USERID.         RNB05\n*  OTHERWISE:                                                     RNB05\n*                                                                 RNB05\n*   (1) \"PJS\" USERS CAN'T LIST ANYTHING.                          RNB05\n*   (2) OTHERS CAN LIST IF THEIR USERID IS SPECIFIED IN A NOTIFY  RNB05\n*       PARAMETER ON THE JOB STATEMENT.                           RNB05\n*   (3) \"TEC\" USERS CAN LIST FROM ANY \"TEC\" JOBS OR JOBS WITH A   RNB05\n*       NOTIFY FOR A \"TEC\" USERID.                                RNB05\n*   (4) \"TEC\" USERS CAN LIST FROM ANY STARTED TASK.               RNB05\n*                                                                 RNB05\n         SPACE 1                                                  RNB05\n         L     R8,QCJCTA           ADDR OF JCT                    RNB05\n         USING JCT,R8              NOTE JCT ADDRESSABILITY        ONL16\n         SPACE 1                                                  RNB05\n         ICM   R1,15,QLOGONLN      GET LENGTH OF USERID           RNB05\n         BNP   LISTNOK             ERROR IF NO LENGTH             RNB05\n         BCTR  R1,0                LESS ONE FOR EXECUTE           RNB05\n         EX    R1,LISTJCLC         JOBNAME BEGINS WITH USERID ?   RNB05\n         BE    AUTHOK              DONE IF YES, ALLOW ACCESS      RNB05\n         SPACE 1                                                  RNB05\n         CLC   =C'PJS',QLOGON      IS THIS A PJS USER?            RNB05\n         BE    LISTNOK             INVALID JOB IF SO              RNB05\n         EX    R1,LISTNCLC         NOTIFY ID BEGINS WITH USERID ? RNB05\n         BE    AUTHOK              GOOD JOB IF SO                 RNB05\n         CLC   =C'TEC',QLOGON      IS THIS A TEC USERID?          RNB05\n         BNE   LISTNOK             INVALID JOB IF NOT             RNB05\n         CLC   =C'TEC',JCTJNAME    FOR A TEC USER, ALLOW LIST     RNB05\n         BE    AUTHOK              FOR ANY TEC JOB OR ANY JOB     RNB05\n         CLC   =C'TEC',JCTTSUID    WITH A TEC NOTIFY              RNB05\n         BE    AUTHOK                                             RNB05\n         TM    JCTJOBFL,JCTSTCJB   ALSO ALLOW IF AN STC           RNB05\n         BNZ   AUTHOK                                             RNB05\n         SPACE 1                                                  RNB05\nLISTNOK  DS    0H                  USER MAY NOT LIST THIS DATASET RNB05\n         MVC   QPDSID,=X'FFFF'     INVALIDATE DSID                  SBG\n         QTILT '*** JOBNAME MUST BEGIN WITH USERID ***'           RNB05\n         SPACE 1                                                  RNB05\nLISTJCLC CLC   JCTJNAME(*-*),QLOGON  EXECUTED - MATCH JOBNAME     RNB05\nLISTNCLC CLC   QLOGON(*-*),JCTTSUID  EXECUTED - MATCH NOTIFY ID   RNB05\n         SPACE 1                                                  RNB05\n         DROP  R8                  KILL JCT ADDRESSABILITY        RNB05\n         SPACE 1                                                  RNB05\n.RNB05L2 ANOP  ,                                                  RNB05\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = JHIST COMMAND FOR JOB AUTHORIZATION     ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#JHIST  DS    0H                  JHIST COMMAND FOR JOB          ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = DD COMMAND FOR JOB AUTHORIZATION        ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#DD     DS    0H                  DD COMMAND FOR JOB             ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = PDDB COMMAND FOR JOB AUTHORIZATION      ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#PDDB   DS    0H                  PDDB COMMAND FOR JOB           ONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = DEL, REQ, AND CAN COMMANDS FOR JOB AUTH ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#SYSOUT DS    0H                  DEL/REQ/CAN CMDS FOR JOB       ONL02\n         SPACE 1                                                  ONL02\n         AIF   (&QRNB).RNB08S1                                    RNB08\n*                                                                 ONL02\n*  THE DEFAULT CODE FOR THIS ENTRY IS TO ALLOW THE DEL, REQ, AND  ONL02\n*  CAN COMMANDS TO BE USED ONLY ON JOBS WHOSE JOBNAME BEGINS WITH ONL02\n*  THE USER'S USERID.  USERS WHO HAVE JES2 SYSTEM PROGRAMMER      ONL02\n*  AUTHORITY MAY USE ANY JOBNAME.                                 ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\n         TM    QAFLAGS,QAFXSYSP    USER HAS JES2 SYSTEM PGMR AUTH?ONL02\n         BO    AUTHOK              DONE IF YES, ALLOW ACCESS      ONL02\n         SPACE 1                                                  ONL02\n         L     R8,QCJCTA           ADDR OF JCT                    ONL02\n         USING JCT,R8              NOTE JCT ADDRESSABILITY        ONL16\n         SPACE 1                                                  ONL02\n         ICM   R1,15,QLOGONLN      GET LENGTH OF USERID           ONL02\n         BNP   SYSONOK             ERROR IF NO LENGTH             ONL02\n         BCTR  R1,0                LESS ONE FOR EXECUTE           ONL02\n         EX    R1,SYSOCLC          JOBNAME BEGINS WITH USERID ?   ONL02\n         BE    AUTHOK              DONE IF YES, ALLOW ACCESS      ONL02\n         B     SYSONOK             ELSE, GO TELL USER             ONL02\n         SPACE 1                                                  ONL02\nSYSOCLC  CLC   JCTJNAME(*-*),QLOGON  EXECUTED - MATCH JOBNAME     ONL02\n         SPACE 1                                                  ONL02\nSYSONOK  DS    0H                  JOBNAME DOESN'T MATCH USERID   ONL02\n         QTILT '*** JOBNAME MUST BEGIN WITH USERID ***'           ONL02\n         SPACE 1                                                  ONL02\n         DROP  R8                  KILL JCT ADDRESSABILITY        ONL02\n         SPACE 1                                                  RNB08\n         AGO   .RNB08S2                                           RNB08\n.RNB08S1 ANOP  ,                                                  RNB08\n*                                                                 RNB08\n*  AT RNB, ALLOW DEL/REQ/CAN IF JOBNAME STARTS WITH USERID OR     RNB08\n*  NOTIFY IS FOR USERID, UNLESS JOB SUBMITTED FROM PJS.  ALLOW    RNB08\n*  TEC USERS TO MANIPULATE OTHER TEC USER'S JOBS AND ALSO STC'S.  RNB08\n*                                                                 RNB08\n         SPACE 1                                                  RNB08\n         L     R8,QCJCTA           ADDR OF JCT                    RNB08\n         USING JCT,R8              NOTE JCT ADDRESSABILITY        ONL16\n         SPACE 1                                                  RNB08\n         ICM   R1,15,QLOGONLN      GET LENGTH OF USERID           RNB08\n         BNP   SYSONOK             ERROR IF NO LENGTH             RNB08\n         BCTR  R1,0                LESS ONE FOR EXECUTE           RNB08\n         EX    R1,SYSOJCLC         JOBNAME BEGINS WITH USERID ?   RNB08\n         BE    AUTHOK              DONE IF YES, ALLOW ACCESS      RNB08\n         SPACE 1                                                  RNB08\n         CLC   =C'PJS',QLOGON      IS THIS A PJS USER?            RNB08\n         BE    SYSONOK             YES - INVALID                  RNB08\n         BAL   R6,SYSPJSCK         ENSURE NOT PJS JOB FOR CAN/DEL RNB08\n         SPACE 1                                                  RNB08\n         L     R8,QCJCTA           RESTORE JCT ADDRESSABILITY     RNB08\n         ICM   R1,15,QLOGONLN      GET LENGTH OF USERID           RNB08\n         BCTR  R1,0                LESS ONE FOR EXECUTE           RNB08\n         EX    R1,SYSONCLC         NOTIFY ID BEGINS WITH USERID ? RNB08\n         BE    AUTHOK              YES - OK                       RNB08\n         CLC   =C'TEC',QLOGON      IS THIS A TEC USER?            RNB08\n         BNE   SYSONOK             NO  - INVALID                  RNB08\n         TM    JCTJOBFL,JCTSTCJB   IS IT AN STC?                  RNB08\n         BO    AUTHOK              /YES - OK FOR TEC USER         RNB08\n         CLC   =C'TEC',JCTJNAME    IS JOBNAME FOR A TEC USER?     RNB08\n         BE    AUTHOK              YES - OK                       RNB08\n         CLC   =C'TEC',JCTTSUID    IS NOTIFY FOR A TEC USER?      RNB08\n         BE    AUTHOK              YES - OK                       RNB08\n         SPACE 1                                                  RNB08\nSYSONOK  QTILT '*** JOBNAME MUST BEGIN WITH USERID ***'           RNB08\n         SPACE 1                                                  RNB08\nSYSOJCLC CLC   JCTJNAME(*-*),QLOGON  EXECUTED - MATCH JOBNAME     RNB08\nSYSONCLC CLC   QLOGON(*-*),JCTTSUID  EXECUTED - MATCH NOTIFY ID   RNB08\n         SPACE 1                                                  RNB08\n         DROP  R8                  KILL JCT ADDRESSABILITY        RNB08\n         SPACE 2                                                  RNB08\n*                                                                 RNB08\n*  SUBROUTINE TO TILT IF PJS JOB (ONLY FOR CANCEL OR DELETE)      RNB08\n*                                                                 RNB08\n         SPACE 1                                                  RNB08\n         USING PDBDSECT,R1         NOTE PDDB ADDRESSABILITY       RNB08\n         USING IOTDSECT,R3         NOTE IOT ADDRESSABILITY        RNB08\n         SPACE 1                                                  RNB08\nSYSPJSCK CLI   QCODEH+1,4          IS THIS A REQUEUE?             RNB08\n         BER   R6                  /YES - OK FOR NOW              RNB08\n*                                  /NO  - ENSURE NOT A PJS JOB    RNB08\n         L     R3,QCIOTA           LOAD BASE REG                  RNB08\n         SH    R3,=Y(IOTSTART-IOTDSECT) ADJUST FOR HEADER            CL\n         LR    R5,R3               BASE OF IOT                    RNB08\n         A     R5,IOTPDDBP         OFFSET BEYOND LAST PDDB        RNB08\n         LR    R1,R3               BASE OF IOT                    RNB08\n         A     R1,IOTPDDB          OFFSET TO FIRST PDDB IN IOT    RNB08\nSYSPFDDS DS    0H                  SEARCH IOT FOR DSID = 5        RNB08\n         CLC   IOTID,=CL4'IOT'     WAS AN IOT READ FROM SPOOL ?   RNB08\n         BNE   SOBADIOT            ERROR IF NO                    RNB08\n         CLC   QPJOBID,IOTJBKEY    IS THE IOT'S JOB KEY VALID ?   RNB08\n         BNE   SOBADIOT            ERROR IF NO                    RNB08\n         CLC   =F'5',PDBDSKEY      IS THIS THE DATASET?           WGH42\n         BE    SYSPID5             YES. CONTINUE.                 RNB08\n         LA    R1,PDBLENG(R1)      NO. LOOK AT NEXT PDDB.         RNB08\n         CR    R1,R5               HAVE WE GONE PAST LAST PDDB?   RNB08\n         BL    SYSPFDDS            NO. TRY AGAIN.                 RNB08\n         B     SOBADTXR            ELSE BAD DD TABLE (INTERP. JCL)RNB08\nSYSPID5  L     R5,PDBMTTR          DISK ADDR OF FIRST BLOCK       RNB08\n         DROP  R1                  KILL PDDB ADDRESSABILITY       RNB08\n         L     R7,QCBLKA           ADDR OF DATASET BLOCK IOAREA   RNB08\n         MVC   QDMSG,QBLANK        BLANK OUT THE MESSAGE AREA     RNB08\n         ST    R5,QCTRAK           STORE DISK ADDR                RNB08\n         LR    R1,R7               IOAREA ADDRESS                 RNB08\n         L     R15,=V(READSPC)     ADDR OF ROUTINE TO READ SPOOL  RNB08\n         BALR  R14,R15             GO TO IT                       RNB08\n         CLC   QPJOBID,4(R7)       IS RECORD'S JOB JEY VALID?     RNB08\n         BNE   SOBADTXR            ERROR IF NO                    RNB08\n         CLC   8(2,R7),=H'5'       IS RECORD'S DSID VALID?        RNB08\n         BNE   SOBADTXR            ERROR IF NO                    RNB08\n         LA    R5,10(R7)           ADDR OF FIRST RECORD IN BLOCK  RNB08\n         SR    R7,R7               ZERO OUT REG                   RNB08\n         IC    R7,0(R5)            INSERT LENGTH                  RNB08\n         CLI   5(R5),1             IS THIS A JOB RECORD?          RNB08\n         BNE   SOBADJTX            /NO  - INVALID INTERNAL TEXT   RNB08\n         LA    R5,9(R5)            ADDR OF FIRST KEY              RNB08\n         LR    R8,R7               REMAINING LENGTH OF RECORD     RNB08\n         SR    R15,15              ZERO OUT R15                   RNB08\n         SR    R14,R14             ZERO OUT R14                   RNB08\n         SR    R1,R1               ZERO OUT R1                    RNB08\nSYSPCKEY CLI   0(R5),X'A5'         IS THIS THE USER= PARM?        RNB08\n         BE    SYSPGOTU            YES. PROCESS IT.               RNB08\n         IC    R1,1(R5)            NUMBER OF SUBFIELDS            RNB08\n         LA    R5,2(R5)            UPDATE LOCATION                RNB08\n         SH    R8,=H'2'            REMAINING COUNT                RNB08\n         SR    R8,R1               REMAINING COUNT                RNB08\n         BNP   SOBADJTX            RECORD IS EXHAUSTED            RNB08\n         LTR   R1,R1               ARE THERE ANY SUBFIELDS?       RNB08\n         BZ    SYSPCKEY            NO. TRY NEXT FIELD.            RNB08\nSYSPNXSF TM    0(R5),X'80'         IS THIS A SUB-SUB-FIELD        RNB08\n         BZ    SYSPNOSS            NO. CONTINUE.                  RNB08\n         NI    0(R5),X'7F'         CLEAR THE HEX 80 BIT           RNB08\n         IC    R14,0(R5)           NUMBER OF SUB-SUB-FIELDS       RNB08\n         LA    R5,1(R5)            UPDATE LOCATION                RNB08\n         SH    R8,=H'1'            REMAINING COUNT                RNB08\n         SR    R8,R14              REMAINING COUNT                RNB08\n         BNP   SOBADJTX            RECORD IS EXHAUSTED            RNB08\n         AR    R1,R14              INCREASE NUMBER OF SUBFIELDS   RNB08\n         B     SYSPYESS            DECREMENT AND TRY AGAIN        RNB08\nSYSPNOSS IC    R15,0(R5)           SUBFIELD LENGTH                RNB08\n         LA    R5,1(R15,R5)        ADD TO LOCATION                RNB08\n         SR    R8,R15              REMAINING COUNT                RNB08\n         BNP   SOBADJTX            RECORD IS EXHAUSTED            RNB08\nSYSPYESS BCT   R1,SYSPNXSF         DO NEXT SUBFIELD               RNB08\n         B     SYSPCKEY            TRY NEXT FIELD                 RNB08\nSYSPGOTU CLI   2(R5),7             IS USER ID LENGTH = 7?         RNB08\n         BNER  R6                  /NO - NOT PJS JOB, PROCESS     RNB08\n         CLI   2(R5),0             IS THE LENGTH ZERO?            RNB08\n         BER   R6                  YES. SKIP THE FIELD.           RNB08\n         CLC   =C'PROD',6(R5)      PJS JOB? (USER = ???PROD)      RNB08\n         BE    SOPJSMSG            /YES - BAD                     RNB08\n         BR    R6                  /NO  - GO PROCESS              RNB08\n         SPACE 2                                                  RNB08\nSOBADIOT QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       RNB08\nSOBADTXR QTILT '*** JOB HAS PURGED (OR DSID 5 SPOOL ERROR) ***'   RNB08\nSOBADJTX QTILT '*** CANNOT PROCESS JOB - INVALID JOB STMT TEXT'   RNB08\nSOPJSMSG QTILT '*** CANNOT CAN/DEL JOB SUBMITTED VIA PJS ***'     RNB08\n         SPACE 1                                                  RNB08\n         DROP  R3                  KILL IOT ADDRESSABILITY        RNB08\n         SPACE 1                                                  RNB08\n.RNB08S2 ANOP  ,                                                  RNB08\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  PROCESS REQUEST TYPE = AUTHORIZATION TO LOOK AT SYSLOG         ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQ#SYSLOG DS    0H                  AUTHORIZATION TO LOOK AT SYSLOGONL02\n         B     AUTHOK              ALLOW FUNCTION TO PROCEED      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  RETURN TO CALLER, REQUESTED FUNCTION MAY PROCEED               ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nAUTHOK   DS    0H                  REQUESTED FUNCTION MAY PROCEED ONL02\n         QSTOP ,                   RETURN TO CALLER               ONL02\n         SPACE 3                                                  ONL02\n         LTORG ,                   DEFINE LITERAL ORIGIN          ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  GENERATE CONTROL BLOCK DSECTS                                  ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       ONL02\nAUTH     CSECT ,                   RESUME CSECT                   ONL02\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL02\n         SPACE 1                                                  ONL02\n         $BUFFER ,                                                ONL16\n         IFGRPL\n         $JQE  ,                                                  ONL02\n         $JCT  ,                                                  ONL02\n         $PDDB ,                                                  ONL02\n         $TAB  ,                                                  ONL02\n         $IOT  ,                                                  ONL02\n         SPACE 1                                                  ONL02\nWORK     DSECT ,                   SAVE AREA WORK DSECT           ONL02\n         DS    18F                 OS SAVE AREA                   ONL02\nWORKAREA DS    0D                  START OF DATA                  ONL02\n         SPACE 1                                                  ONL02\n         AIF   (NOT &QRACF).RNB03CB                               RNB03\n         CVT   DSECT=YES                                          RNB03\n         IHAASCB ,                                                RNB03\n         IHAASXB ,                                                RNB03\n         IHAACEE ,                                                RNB03\n.RNB03CB ANOP  ,                                                  RNB03\n         SPACE 1                                                  RNB03\n         AIF   (NOT &QACF2).FCI01CB                               FCI01\nWORK     DSECT ,                   CONTINUE SAVE AREA WORK DSECT  FCI01\n         ORG   WORKAREA            ORG PAST OS SAVE AREA          FCI01\n         ACDSV DSECT=NO            PARAMETER LIST FOR THE ACF2 SVCFCI01\nADSNAME  DS    CL44                DSNAME USED WITH THE ACF2 SVC  FCI01\nAUTH     CSECT ,                   RESUME CSECT                   FCI01\n         SPACE 1                                                  FCI01\n         ACCVT ,                                                  FCI01\n         ACUCB ,                                                  FCI01\n         IHAPSA ,                                                 FCI01\n         AIF   (NOT &QACF2).FCI01CB                               FCI01\n         #ACFJCTX ,                GEN ACF2 JCT EXTENSION DSECT   FCI01\n.FCI01CB ANOP  ,                                                  FCI01\n         SPACE 1                                                  FCI01\n         QCOMMON ,                 GENERATE QCOMMON DSECT         ONL02\n         $HASPEQU\n         SPACE 1                                                  ONL02\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL02\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    ONL02\n         END   ,                                                  ONL02\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CDIE": {"ttr": 2052, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CDIE     TITLE 'QUEUE COMMAND - GENERATE S0C1 FOR DEBUGGING'      ONL01\nCDIE     QSTART ,\n         SPACE 1\n         DC    X'00DEAD'                                          UF024\n         DC    AL1(L'CDIEMSG)                                     UF024\nCDIEMSG  DC    C'DIE COMMAND ENTERRED'                            UF024\n         SPACE 1                                                  UF024\nCDIEDONE DS    0H\n         QTILT 'QUEUE OPERATION RESUMED'\n         SPACE 1\nSYMDEL   DSECT ,\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN\n         QCOMMON ,\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS\nSYMNODEL DSECT ,\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHCT": {"ttr": 2054, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x942/\\x00\\x942/\\x16\\x05\\x00\\xaa\\x00\\xaa\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc4\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-11-18T00:00:00", "modifydate": "1994-11-18T16:05:00", "lines": 170, "newlines": 170, "modlines": 0, "user": "SCHUDEL"}, "text": "CHCT     TITLE 'QUEUE COMMAND - DUMP A HCT IN HEX'                ONL01 CHC00010\nCHCT     QSTART ,                  START CHCT CSECT ASSEMBLY      ONL01 CHC00020\n*********************************************************************** CHC00030\n* HCT                                                                 * CHC00040\n         USING WORK,R13            BASE REG FOR LOCAL SAVE AREA   WGH   CHC00050\n*********************************************************************** CHC00060\n*                                                                     * CHC00070\n*   CALL - READ JES2 CHECKPOINT ROUTINE                               * CHC00080\n*                                                                     * CHC00090\n*********************************************************************** CHC00100\n         L     R15,=V(CKPT)        ADDR OF CKPT ROUTINE                 CHC00110\n         BALR  R14,R15             GO TO IT                             CHC00120\n*********************************************************************** CHC00130\n*                                                                     * CHC00140\n*   CALL HEXDUMP TO DUMP THE HCT CHECKPOINT AREA                      * CHC00150\n*                                                                     * CHC00160\n*********************************************************************** CHC00170\n         L     R10,QVCKPT     BASE FOR CKPT WORK AREA                   CHC00180\n         USING QCKPT,R10      ADDRESSING FOR IT                         CHC00190\n         LH    R2,QLNG1       LENGTH OF 1ST PARM                   WGH  CHC00200\n         LTR   R2,R2          ANYTHING THERE ?                     WGH  CHC00210\n         BZ    JQTLR          NO... USE 1ST CHECKPOINT RECORD      WGH  CHC00220\n         CLI   QPARM1,C'0'    IS FIRST POSITION A NUMBER ??        WGH  CHC00230\n         BL    NAME           NO...  GET BLOCK NAME                WGH  CHC00240\n         BCTR  R2,0           REDUCE LENGTH FOR EXECUTE            WGH  CHC00250\n         EX    R2,PACKBLK     PACK INTO QDWORK                     WGH  CHC00260\n         CVB   R1,QDWORK      PICK UP BLOCK NUMBER                 WGH  CHC00270\n         LTR   R1,R1          CHECK IF ZERO                        WGH  CHC00280\n         BP    *+8            NO... CONTINUE                       WGH  CHC00290\n         LA    R1,1           YES.. FORCE TO 1                     WGH  CHC00300\n*        C     R1,QCJOTL      COMPARE TO MAX                       WGH  CHC00310\n*        BNH   *+8            OK... KEEP IT                        WGH  CHC00320\n*        L     R1,QCJOTL      TOO BIG... USE MAX                   WGH  CHC00330\n         BCTR  R1,0           REDUCE FOR ADDRESS CALCULATION       WGH  CHC00340\n         MH    R1,=H'4096'    CALCULATE BUFFER OFFSET OF RECORD    WGH  CHC00350\n         A     R1,QCJQTL      ADD TO BASE OF CKPT AREA             WGH  CHC00360\n         B     NEXTPARM       PROCESS OFFSET                       WGH  CHC00370\nNAME     LA    R1,CKPTABLE-6         GET BLOCK NAME                WGH  CHC00380\n         LA    R15,(CKPTEND-CKPTABLE)/6        SIZE OF TABLE       WGH  CHC00390\nTABLOOP  LA    R1,6(R1)       CHECK NEXT ENTRY                     WGH  CHC00400\n         CLC   0(3,R1),QPARM1 IS THIS NAME CORRECT                 WGH  CHC00410\n         BE    TABFIND        YES..  PROCESS NAME                  WGH  CHC00420\n         BCT   R15,TABLOOP    NO...  TRY AGAIN                     WGH  CHC00430\n         B     JQTLR          END OF TABLE - DEFAULT TO 1ST        WGH  CHC00440\nTABFIND  EQU   *                                                   WGH  CHC00450\n         MVC   LOADINW,LOADINST   MOVE IN MODEL INSTRUCTION        WGH  CHC00460\n         MVC   LOADINW+2(2),4(R1) MOVE IN S TYPE ADDRESS           WGH  CHC00470\n         LA    R2,0               SET OVERLAY TO 0 FOR EXECUTE     WGH  CHC00480\n         EX    R2,LOADINW     ADDRESS OF CHECKPOINT RECORD TO R1   WGH  CHC00490\n         B     NEXTPARM       GO PROCESS PARM2                     WGH  CHC00500\nJQTLR    L     R1,QCJQTL      ADDRESS OF 1ST CHECKPOINT REC        WGH  CHC00510\nNEXTPARM EQU   *              PROCESS PARM2                        WGH  CHC00520\n         LR    R2,R1          SAVE ORIGINAL BASE                   WGH  CHC00530\n         MVC   MSGCKPW(MSGCKPWL),MSGCKP   MOVE MSG TO WORK AREA    WGH  CHC00540\n         S     R1,QCJQTL      CALCULATE CKPT RECORD OFFSET         WGH  CHC00550\n         SR    R0,R0          CLEAR FOR DIVIDE                     WGH  CHC00560\n         D     R0,=F'4096'    CALCULATE CKPT RECORD NUMBER         WGH  CHC00570\n         MVC   MSGCKP3W,QBLANK          BLANK OUT OFFSET MSG       WGH  CHC00580\n         LTR   R0,R0          IS THERE AN OFFSET                   WGH  CHC00590\n         BZ    NOOFF          NO... CONTINUE                       WGH  CHC00600\n         MVC   MSGCKP3W,MSGCKP3         YES.. MOVE IN OFFSET MSG   WGH  CHC00610\n         MVC   MSGCKP3W+1(3),QPARM1     MOVE CONTROL BLOCK NAME    WGH  CHC00620\n         ST    R0,QDWORK      STORE OFFSET                         WGH  CHC00630\n         UNPK  MSGCKP4W(5),QDWORK+2(3)                             WGH  CHC00640\n         TR    MSGCKP4W(4),TRTAB-C'0'                              WGH  CHC00650\n         MVI   MSGCKP4W+4,C' ' CLEAR EXTRA BYTE                    WGH  CHC00660\nNOOFF    LA    R1,1(R1)       MAKE BLOCK # RELEATIVE 1             WGH  CHC00670\n         CVD   R1,QDWORK      CONVERT TO DECIMAL                   WGH  CHC00680\n         ED    MSGCKP1W,QDWORK+6   INSERT NUMBER IN MSG            WGH  CHC00690\n         L     R1,QCJOTL      GET TOTAL NUMBER OF CKPT RECORDS     WGH  CHC00700\n         CVD   R1,QDWORK      CONVERT TO DECIMAL                   WGH  CHC00710\n         ED    MSGCKP2W,QDWORK+6   INSERT NUMBER IN MSG            WGH  CHC00720\n*        MVC   QDHLINE(MSGCKPWL),MSGCKPW  PUT MSG IN HEADER        WGH  CHC00730\n         LA    R1,MSGCKPW     MESSAGE ADDRESS                      WGH  CHC00740\n         ST    R1,QDMSGA      SAVE ADDRESS                         WGH  CHC00750\n         LA    R1,MSGCKPWL    LENGTH                               WGH  CHC00760\n         STH   R1,QDMLNG      SAVE FOR DISPLAY ROUTINE             WGH  CHC00770\n         L     R15,=V(DISPLAY)                                     WGH  CHC00780\n         BALR  R14,R15        DO IT                                WGH  CHC00790\n         LR    R1,R2          RELOAD ORIGINAL BASE                 WGH  CHC00800\n         LH    R15,QLNG2      LENGTH OF OFFSET PARM                WGH  CHC00810\n         LTR   R15,R15        IS LENGTH ZERO ??                    WGH  CHC00820\n         BNP   DOOFF          YES.. NO OFFSET                      WGH  CHC00830\n         EX    R15,OFFTR2     NO... CONVERT TO HEX                 WGH  CHC00840\n         EX    R15,OFFPACK    PACK INTO QDWORD                     WGH  CHC00850\n         LH    R15,QDWORK     PICK UP OFFSET                       WGH  CHC00860\nDOOFF    EQU   *                                                   WGH  CHC00870\n         LR    R0,R15         SAVE OFFSET                          WGH  CHC00880\n         AR    R1,R15         ADD OFFSET TO BASE                   WGH  CHC00890\n         LH    R15,=H'4096'   LENGTH OF BUFFER                     WGH  CHC00900\n         SR    R15,R0         LENGTH - OFFSET = LENGTH TO DUMP     WGH  CHC00910\n         SLL   R0,16          MOVE OFFSET TO PROPER POSITION       WGH  CHC00920\n         OR    R0,R15         INSERT INTO LENGTH REGISTER          WGH  CHC00930\n*        L     R1,QCJQTL      ADDRESS OF HCT SAVEAREA                   CHC00940\n*        LA    R0,$SAVEBEG-HCT  OFFSET TO START OF AREA                 CHC00950\n*        LA    R0,0             OFFSET TO START OF AREA                 CHC00960\n*        LA    R15,$SAVELEN   LENGTH OF $SAVEAREA                       CHC00970\n*        LA    R15,4095       LENGTH TO DUMP                            CHC00980\n*        SLL   R0,16          MOVE OFFSET TO PROPER POSITION            CHC00990\n*        OR    R0,R15         INSERT INTO LENGTH REG                    CHC01000\n         L     R15,=V(HEXDUMP) ADDRESS OF DUMP ROUTINE                  CHC01010\n         BALR  R14,R15        LINK TO IT                                CHC01020\nSTOP     QSTOP                                                          CHC01030\n*********************************************************************** CHC01040\n*                                                                     * CHC01050\n*   MISCELLANY                                                        * CHC01060\n*                                                                     * CHC01070\n*********************************************************************** CHC01080\nLOADINST L     R1,*-*              MODEL INSTRUCTION              WGH   CHC01090\nOFFTR1   TR    QPARM1,TABLEH-193   CONVERT TO HEX                 WGH   CHC01100\nOFFTR2   TR    QPARM2,TABLEH-193   CONVERT TO HEX                 WGH   CHC01110\nOFFPACK  PACK  QDWORK(3),QPARM2(1) PACK TO WORK AREA              WGH   CHC01120\nPACKBLK  PACK  QDWORK,QPARM1(1)    PACK TO WORK AREA              WGH   CHC01130\nTABLEH   DC    X'0A0B0C0D0E0F',CL41' ',C'0123456789',CL6' '       WGH   CHC01140\nTRTAB    DC    C'0123456789ABCDEF'                                WGH   CHC01150\nMSGCKP   DC    C'*** CHECKPOINT RECORD'                                 CHC01160\nMSGCKP1  DC    X'40202020'                                              CHC01170\n         DC    C' OF'                                                   CHC01180\nMSGCKP2  DC    X'40202020',C' ***   '                                   CHC01190\nMSGCKP3  DC    C' XXX BEGAN AT RECORD OFFSET '                          CHC01200\nMSGCKP4  DC    CL5' '                                                   CHC01210\nMSGCKPL  EQU   *-MSGCKP                                           WGH   CHC01220\n         DS    0H                  FORCE TABLE ALIGNMENT          WGH   CHC01230\nCKPTABLE DC    CL4'HCT',S(QCJQTL)                                 WGH   CHC01240\n         DC    CL4'DAS',S(QCTDASA)                                WGH   CHC01250\n         DC    CL4'TGM',S(QCTGMA)                                 WGH   CHC01260\n         DC    CL4'JIX',S(QCJIXA)                                 WGH   CHC01270\n         DC    CL4'JQT',S(QCJQTA)                                 WGH   CHC01280\n         DC    CL4'PST',S(QCPSTA)                                 WGH   CHC01290\n         DC    CL4'JOT',S(QCJOTA)                                 WGH   CHC01300\n         DC    CL4'JCT',S(QCJCTA)                                 WGH   CHC01310\nCKPTEND  EQU   *                                                        CHC01320\n         LTORG                                                          CHC01330\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023 CHC01340\n         QCOMMON                                                        CHC01350\nCHCT     CSECT                                                          CHC01360\n         DROP                                                           CHC01370\n         COPY  $HASPGBL                                                 CHC01380\n&MACSPLV SETC  '2'                                                      CHC01390\n&SYSSPLV SETC  '2'                                                      CHC01400\n&VERSION SETC  'SP 4.2.0'                                         WGH   CHC01410\n&FMID    SETC  'HJE4420'                                          WGH   CHC01420\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01 CHC01430\n        $HASPEQU                                                        CHC01440\n        $LMT    ,                                                 WGH42 CHC01440\n        $XECB   ,                                                 WGH42 CHC01440\nPDS2BLEN EQU    1                                                 WGH42 CHC01440\n         IFGRPL                                                         CHC01450\n        $BUFFER                                                         CHC01460\n        $JCT                                                            CHC01470\n        $CAT                                                            CHC01480\n        $JQE                                                            CHC01490\n        $PCE                                                            CHC01500\n        $PSV                                                            CHC01500\n        $QSE                                                            CHC01500\n        $MIT   ,                                                  ONL11 CHC01510\n        $HCT                                                            CHC01520\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01 CHC01530\nWORK     DSECT                                                     WGH  CHC01540\n         DS     90F                 5 SAVE AREAS                   WGH  CHC01550\nLOADINW  DS    F                    LOAD INSTRUCTION WORK AREA     WGH  CHC01560\nMSGCKPW  DC    C'*** CHECKPOINT RECORD'                                 CHC01570\nMSGCKP1W DC    X'40202020'                                              CHC01580\n         DC    C' OF'                                                   CHC01590\nMSGCKP2W DC    X'40202020',C' ***   '                                   CHC01600\nMSGCKP3W DC    C' XXX BEGAN AT RECORD OFFSET '                          CHC01610\nMSGCKP4W DC    CL5' '                                                   CHC01620\nMSGCKPWL EQU   *-MSGCKPW                                                CHC01630\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023 CHC01640\n         END                                                            CHC01650\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHCTO": {"ttr": 2058, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CHCT     TITLE 'QUEUE COMMAND - DUMP A HCT IN HEX'                ONL01\nCHCT     QSTART ,                  START CHCT CSECT ASSEMBLY      ONL01\n***********************************************************************\n* HCT                                                                 *\n***********************************************************************\n*                                                                     *\n*   CALL - READ JES2 CHECKPOINT ROUTINE                               *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(CKPT)        ADDR OF CKPT ROUTINE\n         BALR  R14,R15             GO TO IT\n***********************************************************************\n*                                                                     *\n*   CALL HEXDUMP TO DUMP THE HCT CHECKPOINT AREA                      *\n*                                                                     *\n***********************************************************************\n         L     R10,QVCKPT     BASE FOR CKPT WORK AREA\n         USING QCKPT,R10      ADDRESSING FOR IT\n         L     R1,QCJQTL      ADDRESS OF HCT SAVEAREA\n         LA    R0,$SAVEBEG-HCT  OFFSET TO START OF AREA\n         LA    R15,$SAVELEN   LENGTH OF $SAVEAREA\n         SLL   R0,16          MOVE OFFSET TO PROPER POSITION\n         OR    R0,R15         INSERT INTO LENGTH REG\n         L     R15,=V(HEXDUMP) ADDRESS OF DUMP ROUTINE\n         BALR  R14,R15        LINK TO IT\nSTOP     QSTOP\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QCOMMON\nCHCT     CSECT\n         DROP\n         COPY  $HASPGBL\n&MACSPLV SETC  '2'\n&SYSSPLV SETC  '2'\n&VERSION SETC  'SP 2.1.5'\n&FMID    SETC  'HJE2215'\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $BUFFER\n        $JCT\n        $CAT\n        $JQE\n        $PCE\n        $MIT   ,                                                  ONL11\n        $HCT\n        $HASPEQU\n         IFGRPL\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CIOT": {"ttr": 2060, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CIOT     TITLE 'QUEUE COMMAND - DUMP AN IOT IN HEX'                  CL\nCIOT     QSTART ,                  START CIOT CSECT ASSEMBLY         CL\n***********************************************************************\n* IOT JOBNAME                                                         *\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JCT                                    *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n***********************************************************************\n*                                                                     *\n*   CALL HEXDUMP TO DUMP THE IOT                                      *\n*                                                                     *\n***********************************************************************\n         L     R10,QVCKPT     BASE FOR CKPT WORK AREA\n         SPACE 1                                                     CL\n         USING QCKPT,R10      ADDRESSING FOR IT\n         USING JCT,R6              JCT ADDRESSABILITY             ONL16\n         USING WORK,R13            WORK AREA ADDRESSABILITY          CL\n         USING IOT,R3              IOT ADDRESSABILITY                CL\n         USING QDISPLAY,R9         DISPLAY WORK ADDRESABILITY        CL\n         L     R9,QVDSPL           ADDR OF DISPLAY WORK AREA         CL\n         SPACE 1                                                     CL\n         MVI   SWITCH,0            CLEAR FLAG BYTE                   CL\n         L     R6,QCJCTA      ADDRESS OF JCT\n         LH    R5,HASPACE+62 MAX LEN INCLUDING NETWORK HEADERS\n         LA    R5,IOTSTART-IOT(R5)    + LEN OF PREFIX\n         LA    R4,IOTSTART-IOT      OFFSET TO START OF IOT           CL\n         SR    R5,R4          TOTAL LENGTH - OFFSET = LENGTH TO DUMP\n         SLL   R4,16          MOVE OFFSET TO PROPER POSITION\n         OR    R4,R5          INSERT INTO LENGTH REG\n         L     R1,QCJQEA           ADDR OF JQE                       CL\n         USING JQE,R1              JQE ADDRESSABILITY                CL\n         TM    JQEFLAG3,JQE3SYSD   SKIP IF THIS IS NOT               CL\n         BNO   *+8                  SYSTEM JQE                       CL\n         OI    SWITCH,NOSPIN       DO NOT READ SPIN IOTS             CL\n         L     R3,QCIOTA           IOT BASE                          CL\n         LR    R7,R3               IOAREA FOR READING IOTS           CL\n         SH    R3,=Y(IOTSTART-IOT) ADJUST FOR HEADER                 CL\n         B     IOTREAD             FIRST IOT HAS BEEN READ           CL\n         SPACE 1                                                     CL\nREADIOT  ICM   R14,15,IOTIOTTR     MTTR OF NEXT IOT                  CL\n         BNZ   READISK             GO READ IT IF AVAILABLE           CL\n         TM    SWITCH,NOSPIN       ALL THRU IF SPIN IOTS             CL\n         BO    STOP                 HAVE BEEN READ                   CL\n         OI    SWITCH,NOSPIN       REMEMBER SPIN IOT READ            CL\n         ICM   R14,15,JCTSPIOT     MTTR OF FIRST SPIN IOT            CL\n         BZ    STOP                EXIT IF NONE                      CL\n         SPACE 1                                                     CL\nREADISK  ST    R14,QCTRAK          SET MTTR                          CL\n         MVC   QDMSG,QBLANK        BLANK LINE                        CL\n         MVC   QDMLNG,=H'80'       LENGTH OF LINE                    CL\n         LA    R0,QDMSG            SET ADDRESS                       CL\n         ST    R0,QDMSGA            OF MESSAGE LINE                  CL\n         L     R15,=V(DISPLAY)     ADDR OF SCREEN DISPLAY RTN        CL\n         BALR  R14,R15             GO OUTPUT ONE BLANK LINE          CL\n         BALR  R14,R15             OUTPUT SECOND BLANK LINE          CL\n         LR    R1,R7               ADDR OF IO AREA                   CL\n         L     R15,=V(READSPC)     ADDR OF RTN TO READ HASPACE       CL\n         BALR  R14,R15             GO TO IT                          CL\n         SPACE 1                                                     CL\nIOTREAD  CLC   IOTID,=CL4'IOT'     BR IF NOT                         CL\n         BNE   BADIOT               GOOD IOT                         CL\n         CLC   QPJOBID,IOTJBKEY    BR IF JOB                         CL\n         BNE   BADIOT               KEYS DO NOT MATCH                CL\n         LR    R1,R7               ADDR OF IO AREA                   CL\n         LR    R0,R4               OFFSET AND LENGTH OF DATA         CL\n         L     R15,=V(HEXDUMP) ADDRESS OF DUMP ROUTINE\n         BALR  R14,R15        LINK TO IT\n         B     READIOT             GO READ NEXT IOT                  CL\nSTOP     QSTOP\n***********************************************************************\n*                                                                     *\n*   EXCEPTIONS AND RETURN                                             *\n*                                                                     *\n***********************************************************************\nBADIOT   QTILT '*** INVALID IOT READ ***'\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nCIOT     CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN      CL\n        $BUFFER\n         IFGRPL\n        $JQE\n        $TAB                                                         CL\n        $JCT\n        $IOT\n        $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS       CL\nWORK     DSECT                                                       CL\n         DS    18A                 REG SAVE AREA                     CL\nSWITCH   DS    X                   SWITCHES HERE                     CL\nNOSPIN   EQU   X'80'               READ NO SPIN IOTS                 CL\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CJCT": {"ttr": 2063, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CJCT     TITLE 'QUEUE COMMAND - DUMP A JCT IN HEX'                ONL01\nCJCT     QSTART ,                  START CJCT CSECT ASSEMBLY      ONL01\n***********************************************************************\n* JCT JOBNAME <OFFSET>                                                *\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JCT                                    *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n***********************************************************************\n*                                                                     *\n*   CALL HEXDUMP TO DUMP THE JCT                                      *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL14\n         L     R10,QVCKPT          ADDR OF CKPT WORK AREA         ONL14\n         USING QCKPT,R10           NOTE CKPT WORK ADDRESSABILITY  ONL14\n         SPACE 1                                                  ONL14\n         TM    QFLAG1,QFLG1SDS     IS THIS A SYSTEM DATA SET JOB? ONL14\n         BO    TILTSYSD            TILT IF YES                    ONL14\n         SPACE 1                                                  ONL14\n         L     R1,QCJCTA      ADDRESS OF JCT\n         LA    R0,JCTSTART-JCT  OFFSET TO START OF JCT\n         LH    R15,QLNG2      LENGTH OF USER OFFSET INTO JCT\n         LTR   R15,R15        IS THE LENGTH ZERO?\n         BNP   DUMP0          YES. NONE SPECIFIED\n         CH    R15,=H'8'      IS THE LENGTH TOO BIG?\n         BH    TILTO          YES, GIVE UP\n         EX    R15,OFFTR      CONVERT TO HEX\n         EX    R15,OFFPACK    PACK INTO QDWORD\n         LH    R15,QDWORD     PICK UP OFFSET\n         CR    R0,R15         COMPARE TO BASE OFFSET\n         BNL   DUMP0          USE R0 FOR OFFSET\n         LR    R0,R15         GET OTHER OFFSET\nDUMP0    AR    R1,R0          ADD TO BASE ADDRESS\n         LH    R15,HASPACE+62 MAX LEN INCLUDING NETWORK HEADERS\n         LA    R15,JCTSTART-JCT(R15)  + LEN OF PREFIX\n         SR    R15,R0         TOTAL LENGTH - OFFSET = LENGTH TO DUMP\n         SLL   R0,16          MOVE OFFSET TO PROPER POSITION\n         OR    R0,R15         INSERT INTO LENGTH REG\n         L     R15,=V(HEXDUMP) ADDRESS OF DUMP ROUTINE\n         BALR  R14,R15        LINK TO IT\nSTOP     QSTOP\n***********************************************************************\n*                                                                     *\n*   EXCEPTIONS AND RETURN                                             *\n*                                                                     *\n***********************************************************************\nTILTO    QTILT '*** INVALID OFFSET SPECIFIED ***'\nTILTSYSD QTILT '*** COMMAND INVALID FOR SYSDS TYPE JOBS ***'      ONL14\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\nOFFTR    TR    QPARM2,TABLEH       CONVERT TO HEX\nOFFPACK  PACK  QDWORD(3),QPARM2(1) PACK TO WORK AREA\n         LTORG\n* TABLE FOR HEX CONVERT\nTABLEH   DC    CL193' '\n         DC    X'0A0B0C0D0E0F',CL41' ',C'01234567890',CL6' '\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nCJCT     CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $BUFFER\n         IFGRPL\n        $JQE\n        $JCT\n        $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CJHIST": {"ttr": 2066, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x942/\\x00\\x942/\\x16\\x12\\x02\\x05\\x02\\x05\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc4\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-11-18T00:00:00", "modifydate": "1994-11-18T16:12:00", "lines": 517, "newlines": 517, "modlines": 0, "user": "SCHUDEL"}, "text": "CJHIST   TITLE 'QUEUE COMMAND - PRINT JOB HISTORY/SOURCE'         ONL01\nCJHIST   QSTART ,                  START CJHIST CSECT ASSEMBLY    ONL01\n         GBLB  &QSP           SP2 FLAG                            UF030\n         GBLB  &QSP133        SP1.3.3 FLAG                        UF046\n         GBLB  &QONL          ONL FLAG                            ONL06\n         GBLB  &QACF2         ACF2 FLAG                             NTL\n         SPACE 1                                                  ONL15\n         GBLC  &ACF2XIT,&ACF2DCT,&ACF2JCT,&OFFSET  ACF2 GLOBALS   ONL15\n         SPACE 1                                                  ONL15\n         AIF   (NOT &QACF2).$SKP1                                 ONL15\n         AIF   (NOT &QSP133).$SKP1                                ONL15\n         #ACFJES2 ,                SET ACF2 OPTIONS FOR JES2      ONL15\n.$SKP1   ANOP  ,                                                  ONL15\n         SPACE 2                                                  ONL15\n         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA        NTL\n         L     R10,QVDSPL     LOAD BASE REG                         NTL\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA          NTL\n***********************************************************************\n*                                                                   NTL\n*   PROCESS THE HISTORY COMMAND                                     NTL\n*                                                                   NTL\n***********************************************************************\n         SPACE 1                                                  ONL14\n         L     R15,=V(FINDJOB) GO FIND JOB/JCT/JQE\n         BALR  R14,R15                                              NTL\n         L     R9,QCJCTA      GET ADDRESS OF JCT                    NTL\n         USING JCT,R9         ADDRESSABILITY                        NTL\n         SPACE 1                                                  ONL14\n         TM    QFLAG1,QFLG1SDS     IS THIS A SYSTEM DATA SET JOB? ONL14\n         BO    TILTSYSD            TILT IF YES                    ONL14\n         SPACE 2                                                    NTL\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAJHIST           PERFORM JOB AUTHORIZATION      ONL02\n         SPACE 2                                                  ONL02\nFORMATIT MVC   QDHLINE,HEADER                                       NTL\n         MVC   QDMSG,QBLANK   BLANK OUT LINE                        NTL\n         BAL   R7,DISPLAY     GO DO THE DISPLAY                     NTL\n*                                                                   NTL\nLINE3    MVC   QDMSG,HEAD3    MOVE IN LINE MASK                     NTL\n         MVC   JOBNUMB,JCTJOBID     JOB ID                          NTL\n         MVC   JOBNAME,JCTJNAME     JOBNAME                         NTL\n         MVC   JOBSCE,JCTINDEV      INPUT DEVICE                    NTL\n         MVC   BIN#,JCTROOMN        BIN NUMBER                      NTL\n         MVC   JOBCLASS,JCTJCLAS    JOB CLASS FROM JOBCARD          NTL\n         MVC   MSGCLASS,JCTMCLAS    MESSAGE CLASS                   NTL\n         MVC   NOTIFY,JCTTSUID      WHO TO CONTACT                  NTL\n         BAL   R7,DISPLAY           PUT OUT LINE3                   NTL\n*                                                                   NTL\nLINE4    BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE            NTL\n*                                                                   NTL\nLINE5    MVC   QDMSG,HEAD5        MOVE IN HEADING                   NTL\n         MVC   PROCDDN,JCTPROCN   PROCLIB DDNAME                    NTL\n         LA    R15,PRTDEST                                          NTL\n         LA    R1,JCTPROUT                                          NTL\n         BAL   R7,RMTORLCL       CONVERT PRT= FIELD                 NTL\n         LA    R15,PUNDEST                                          NTL\n         LA    R1,JCTPUOUT                                          NTL\n         BAL   R7,RMTORLCL       CONVERT PUN= FIELD                 NTL\n         LM    R0,R1,JCTRDRON    GET READER TIME/DATE               NTL\n         LTR   R1,R1             ANYBODY (DATE) HOME                NTL\n         BZ    NODATE5                                              NTL\n         BAL   R7,TIMECONV       FORMAT IT PRETTY                   NTL\n         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                  NTL\nNODATE5  BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL\n*                                                                   NTL\nLINE6    MVC   QDMSG,HEAD6        MOVE IN HEADING                   NTL\n         MVC   PROGAMER,JCTPNAME  PROGRAMMER NAME                   NTL\n         LM    R0,R1,JCTXEQON    GET XEQ START TIME/DATE            NTL\n         LTR   R1,R1             ANYBODY (DATE) HOME                NTL\n         BZ    NODATE6                                              NTL\n         BAL   R7,TIMECONV       FORMAT IT PRETTY                   NTL\n         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                  NTL\nNODATE6  BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL\n*                                                                   NTL\nLINE7    MVC   QDMSG,HEAD7        MOVE IN HEADING                   NTL\n         LA    R15,CARDSIN       POINT TO POSITION                  NTL\n         L     R1,JCTCARDS       GET VALUE                          NTL\n         BAL   R7,FITINUM        AND PUT IT AWAY                    NTL\n         LM    R0,R1,JCTXEQOF    GET XEQ STOP TIME/DATE             NTL\n         LTR   R1,R1             ANYBODY (DATE) HOME                NTL\n         BZ    NODATE7                                              NTL\n         BAL   R7,TIMECONV       FORMAT IT PRETTY                   NTL\n         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                  NTL\nNODATE7  BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL\n*                                                                   NTL\nLINE8    MVC   QDMSG,HEAD8        MOVE IN HEADING                   NTL\n         LA    R15,LINESOUT      POINT TO POSITION                  NTL\n         L     R1,JCTLINES       GET VALUE                          NTL\n         BAL   R7,FITINUM        AND PUT IT AWAY                    NTL\n         LA    R15,CARDSOUT      POINT TO POSITION                  NTL\n         L     R1,JCTPUNCH       GET VALUE                          NTL\n         BAL   R7,FITINUM        AND PUT IT AWAY                    NTL\n         LM    R0,R1,JCTOUTON    GET PRT/PUN START TIME/DATE        NTL\n         LTR   R1,R1             ANYBODY (DATE) HOME                NTL\n         BZ    NODATE8                                              NTL\n         BAL   R7,TIMECONV       FORMAT IT PRETTY                   NTL\n         MVC   TIMESTMP,CDAYN    MOVE IN TO RECORD                  NTL\nNODATE8  BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL\n         SPACE 1                                                  ONL15\n         AIF   (NOT &QACF2).$SKP2                                 ONL15\n         AIF   (NOT &QSP133).$SKP3                                ONL15\n         SPACE 1                                                  ONL15\n         ICM   R6,B'1111',&ACF2JCT ACF2 AREA OFFSET IN JCT        ONL15\n         BZ    SKIPACF2            FORGET IT IF NO ACF2 AREA      ONL15\n         SPACE 1                                                  ONL15\n         LA    R6,JCT(R6)          ADDR OF ACF2 AREA              ONL15\n         USING #ACFJCTX,R6         NOTE #ACFJCTX ADDRESSABILITY   ONL15\n         SPACE 1                                                  ONL15\n         CLC   JCTACFJ,=C'ACFJ'    IS IT THE ACF2 AREA ?          ONL15\n         BNE   SKIPACF2            IF NO, FORGET IT               ONL15\n.$SKP3   ANOP  ,                                                  ONL15\n         SPACE 1                                                  ONL15\nLINE911  MVC   QDMSG,QBLANK     BLANK IT OUT                        NTL\n         LA    R2,4             SAY DO IT 4 TIMES                   NTL\nBLNKS    BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL\n         BCT   R2,BLNKS                                             NTL\n*                                                                   NTL\nLINE12   MVC   QDMSG,HEAD12       MOVE IN HEADING                   NTL\n         BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL\n*                                                                   NTL\nLINE13   BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE            NTL\n*                                                                   NTL\n         AIF   (&QONL).ONL17A                                     ONL17\nLINE14   MVC   QDMSG,HEAD14       MOVE IN HEADING                   NTL\n         MVC   LOGONID,LIDLID    ACF2 LOGON ID                      NTL\n         MVC   GROUP,LIDOPER     ACF2 GROUP (NTL FIELD)            NTL1\n         MVC   NAME,LIDNAME      ACF2 USER NAME/DESCRIPT            NTL\n         MVC   PHONE,LIDPHONE    ACF2 PHONE NUMBER FOR USER         NTL\n         BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL\n*                                                                   NTL\nLINE15   BAL   R7,DISPBLNK       GO PUT OUT A BLANK LINE            NTL\n*                                                                   NTL\nLINE16   MVC   QDMSG,HEAD16       MOVE IN HEADING                   NTL\n         MVC   SOURCE,ACVSRCE    ACF2 LOGICAL SOURCE                NTL\n         MVC   SUBLID,ACVSLID    ACF2 SUBMITTING LID                NTL\n         MVC   SUBPROG,ACVAPROG  ACF2 SUBMITTING PROGRAM            NTL\n         MVC   SUBPATH,ACVPATH   ACF2 SUBMITTING PATH               NTL\n         BAL   R7,DISPLAY        GO SHOW IT OFF                     NTL\n         AGO   .ONL17B                                            ONL17\n.ONL17A  ANOP  ,                                                  ONL17\n         SPACE 1                                                  ONL17\nLINE14   MVC   QDMSG,HEAD14        MOVE IN HEADING                ONL17\n         MVC   LOGONID,LIDLID      ACF2 LOGON ID                  ONL17\n         MVC   NAME,LIDNAME        ACF2 USER NAME/DESCRIPT        ONL17\n         MVC   PHONE,LIDPHONE      ACF2 PHONE NUMBER FOR USER     ONL17\n         BAL   R7,DISPLAY          GO SHOW IT OFF                 ONL17\n         SPACE  1                                                 ONL17\nLINE15   MVC   QDMSG,HEAD15        MOVE IN HEADING                ONL17\n         MVC   UIDSTR,JCTAUIDB     ACF2 UID STRING                ONL17\n         MVC   MAILADDR,LIDADDR    ACF2 LOCAL PLANT MAIL ADDR     ONL17\n         BAL   R7,DISPLAY          GO SHOW IT OFF                 ONL17\n         SPACE  1                                                 ONL17\nLINE16   MVC   QDMSG,HEAD16        MOVE IN HEADING                ONL17\n         MVC   SOURCE,ACVSRCE      ACF2 LOGICAL SOURCE            ONL17\n         MVC   SUBLID,ACVSLID      ACF2 SUBMITTING LID            ONL17\n         MVC   SUBPROG,ACVAPROG    ACF2 SUBMITTING PROGRAM        ONL17\n         MVC   SUBPATH,ACVPATH     ACF2 SUBMITTING PATH           ONL17\n         BAL   R7,DISPLAY          GO SHOW IT OFF                 ONL17\n         SPACE 1                                                  ONL17\n.ONL17B  ANOP  ,                                                  ONL17\n         SPACE 1                                                  ONL15\nSKIPACF2 DS    0H                  CONTINUE HERE IF NO ACF2 INFO  ONL15\n         SPACE 1                                                  ONL15\n         AIF   (NOT &QSPACF2).$SKP2                               ONL15\n         SPACE 1                                                  ONL15\n         DROP  R6                  KILL #ACFJCTX ADDRESSABILITY   ONL15\n         SPACE 1                                                  ONL15\n.$SKP2   ANOP  ,                                                  ONL15\n         SPACE 2                                                    NTL\nRETURN   QSTOP                                                      NTL\n         SPACE 2                                                    NTL\n***********************************************************************\n*   LOCAL SUBROUTINE TO PUT OUT LINE VIA Q DISPLAY                  NTL\n***********************************************************************\nDISPBLNK MVC   QDMSG,QBLANK   CLEAR OUT MESSAGE                     NTL\n*                                                                   NTL\nDISPLAY  MVC   QDMLNG,=H'80'  SET LENGTH                            NTL\n         LA    R0,QDMSG       GET ADDRESS OF MESSAGE                NTL\n         ST    R0,QDMSGA      AND SAVE ADDRESS                      NTL\n         L     R15,=V(DISPLAY) GET ADDRESS OF MODULE FOR DISPLAY    NTL\n         BALR  R14,R15        CALL THE MOTHER                       NTL\n         BR    R7             RETURN TO MAINLINE...                 NTL\n         EJECT ,                                                    NTL\n***********************************************************************\n*                                                                   NTL\n* FORMAT DATE TIME  HEADING   ENTER WITH BAL R7,TIMECONV            NTL\n*   R0=TIME IN 100THS OF SECOND SINCE MIDNIGHT                      NTL\n*   R1=DATE IN 00YYDDDS FORMAT                                      NTL\n*                                                                   NTL\n* RETURNS WITH CDAYN(LEN) = DDMONYY (DDD) DAY HH:MM:SS.TH           NTL\n*                E.G.       07JUL80 (189) MON 13:45:24.56           NTL\n*                           123456789.123456789.123456789           NTL\n*                                                                   NTL\n***********************************************************************\nTIMECONV MVC   MONMSK(MVCLEN),XMONMSK  INIT DATE/TIME WORK AREA     NTL\n         ST    R1,DATE                 SAVE DATE FOR LATER          NTL\n         CVD   R0,DOUBLEWD            GET TIME IN DEC 100TH/SEC     NTL\n         DP    DOUBLEWD(8),DEC6000(3) /6000 : REM IS SS.TH          NTL\n         DP    DOUBLEWD(5),DEC60(2)   /60   : REM IS MM             NTL\n         MVC   EDITWORK(L'HHMASK),HHMASK   SETUP MULT EDIT MASK     NTL\n         ED    EDITWORK(L'HHMASK),DOUBLEWD EDIT HH,MM,SS            NTL\nFINTIME  MVC   CHH(2),EDITWORK+4      MOVE IN HOURS                 NTL\n         MVC   CMM(2),EDITWORK+8      MOVE IN MM                    NTL\n         MVC   CSS(5),EDITWORK+12     MOVE IN SS.TH                 NTL\n*                                                                   NTL\n***FORMAT THE DATE INTO THE OUTPUT MSG                              NTL\n*                                                                   NTL\n         MVC   WORKWORD(4),DATE        MOVE DATE TO WORK AREA.      NTL\n         MVO   WORKWORD+1(3),WORKWORD(2)   MAKE 00YYDDDS INTO 00000YYS.\n         UNPK  CYR(2),WORKWORD+2(2)    FORMAT YEAR.                 NTL\n         XC    DOUBLEWD,DOUBLEWD                                    NTL\n         MVC   DOUBLEWD+4(4),WORKWORD  CNVT YEAR TO BIN             NTL\n         CVB   R0,DOUBLEWD                                          NTL\n         ST    R0,BINYEAR              AND SAVE                     NTL\n         TM    BINYEAR+3,X'03'         LEAP YEAR?                   NTL\n         BNZ   MON1                    NO.                          NTL\n         MVI   MONMSK+10,29            YES, CORRECT                 NTL\nMON1     XC    DOUBLEWD,DOUBLEWD       CNVT DAYS TO BIN             NTL\n         MVC   DOUBLEWD+6(2),DATE+2                                 NTL\n         CVB   R2,DOUBLEWD                                          NTL\n         ST    R2,BINDAYS              SAVE FOR LATER               NTL\n         XR    R1,R1                                                NTL\n         LA    R15,11                                               NTL\nMON2     IC    R1,MONMSK(R15)          COMPUTE MON & DAY            NTL\n         SR    R2,R1                                                NTL\n         BNP   MONOVR                                               NTL\n         BCT   R15,MON2                                             NTL\n         B     *+6                                                  NTL\nMONOVR   AR    R2,R1                   CORRECT OVERDRAW             NTL\n         CVD   R2,DOUBLEWD             FORMAT DAY                   NTL\n         UNPK  CDAYN(2),DOUBLEWD+6(2)                               NTL\n         OI    CDAYN+1,X'F0'           FIX UP SIGN                  NTL\n         MH    R15,=H'3'               GET TABLE OFFSET             NTL\n         LA    R15,MONTAB(R15)         AND POINT AT MONTH           NTL\n         MVC   CMON(3),0(R15)          MOVE IT TO THE MSG           NTL\n         EJECT ,                                                    NTL\n***DAY OF WEEK                                                      NTL\n         L     R15,BINYEAR                                          NTL\n         SH    R15,=H'69'                                           NTL\n         BNP   OUTT                    MUST BE GREATER OR BAD       NTL\n         XR    R14,R14                 CLEAR DAY REG                NTL\n         D     R14,=F'4'                                            NTL\n         MH    R15,=H'5'                                            NTL\n         AR    R14,R15                                              NTL\n         A     R14,BINDAYS                                          NTL\n         SRDA  R14,32                                               NTL\n         D     R14,=F'7'               MODULO 7 FOR WEEK            NTL\n         MH    R14,=H'3'                                            NTL\n         LA    R14,DAYTAB(R14)         POINT AT TODAY               NTL\n         MVC   CDAY(3),0(R14)          INSERT IN MSG                NTL\n***                                                                 NTL\nMOVEJD   MVC   JDATE-1(7),=X'4020204B202020'                        NTL\n         ED    JDATE-1(7),DATE+1                                    NTL\n         MVC   CJDAY(3),JDATE+3         MOVE DAY TO MESSAGE         NTL\n*                                                                   NTL\n*                                                                   NTL\nDATERTN  BR    R7                      RETURN TO MAINLINE           NTL\n*                                                                   NTL\nOUTT     MVC   CDAY(3),=CL3'???'                                    NTL\n         B     MOVEJD                                               NTL\n         SPACE 2                                                    NTL\n         EJECT\n***********************************************************************\n*                                                                   NTL\n*       CONSTANTS FOR DATE ROUTINE USAGE                            NTL\n*                                                                   NTL\n***********************************************************************\n         SPACE ,\nHHMASK   DC    X'40202021202022212020222120204B2020'                NTL\nDEC60    DC    X'060C'                                              NTL\nDEC6000  DC    X'06000C'                                            NTL\nDEC50    DC    X'050C'                                              NTL\n***********************************************************************\n* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES        NTL\n*                                                                   NTL\nXMONMSK  DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )    NTL\n         DC    CL1' '                                          )    NTL\n         DC    C'XX.XXX'                           L           )    NTL\n*                                                  E  F        )    NTL\n         DC    CL2' '                              A  I  T     )    NTL\n         DC    CL3' '                              V  E  O  F  )    NTL\n         DC    CL2' ',C' ('                        E  L  G  O  )    NTL\n         DC    CL3' ',C') '                           D  E  R  )    NTL\n         DC    CL3' ',C' '                            S  T     )    NTL\n         DC    CL2' ',C':'                               H  I  )    NTL\n         DC    CL2' ',C':'                               E  N  )    NTL\n         DC    CL5'SS.TH'                                R  I  )    NTL\n*                                                           T  )    NTL\nMVCLEN   EQU   *-XMONMSK                                            NTL\n*                                                                   NTL\n***********************************************************************\nDAYTAB   DC    C'TUEWEDTHRFRISATSUNMON'                             NTL\nMONTAB   DC    C'DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJAN'              NTL\n         EJECT\n***********************************************************************\n*RMTORLCL SUBROUTINE - DETERMINE REMOTE OR LOCAL DESTINATION        NTL\n* R1 POINTS TO PRTRT/PUNRT, R15 TO ASSEMBLY POINTER                 NTL\n***********************************************************************\nRMTORLCL CLC   2(2,R1),=X'0000'    IS IT FOR REMOTE00 (LOCAL)\n         BNE   RMTRMT         NO LUCK .. HAVE TO WORK FOR IT        NTL\n*                                                                   NTL\n         L     R2,QCJQTL              GET HCT AREA                WGH\n         USING $SAVEBEG,R2                                        WGH\n         CLC   0(2,R1),$NODEID        IS THIS OUR NODE            WGH\n         BE    LCLLCL                 YES.. THEN LOCAL            WGH\n         DROP  R2\n         MVI   0(15),C'N'             MOVE IN 'NODE'              WGH\n         LA    R15,1(R15)             BUMP PTR                    WGH\n         SR    R14,R14                CLEAR REG                   WGH\n         ICM   R14,3,0(R1)            GET NODE NUM                WGH\n         CVD   R14,DOUBLEWD   NODE NUMBER TO DECIMAL              WGH\n         B     FITINUM1       FIT THE NUMBER IN MESSAGE           WGH\nLCLLCL   MVC   0(L'LOCAL,R15),LOCAL   MOVE IN LOCAL                 NTL\n         LA    R15,L'LOCAL(R15)       BUMP POINTER AND              NTL\n         BR    R7                       RETURN                      NTL\n*                                                                   NTL\nRMTRMT   MVC   0(L'RMT,R15),RMT       MOVE IN 'RMT'                 NTL\n         CLC   0(2,R1),=X'0000'    BR IF NOT                         CL\n         BNE   *+10                 SPECIAL LOCAL                    CL\n         MVC   0(L'LCL,R15),LCL    MOVE IN 'LCL'                     CL\n         LA    R15,L'RMT(R15)  BUMP POINTER                         NTL\n         SR    R14,R14        LOAD RMT FLAGS                        NTL\n         ICM   R14,3,2(R1)         FROM PRT/PUN                   UF030\n         CVD   R14,DOUBLEWD   RMT NUMBER TO DECIMAL                 NTL\n         B     FITINUM1       FIT THE NUMBER IN RMT MESSAGE         NTL\n         SPACE 2\n***********************************************************************\n* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT            NTL\n*                                                                   NTL\n***********************************************************************\nFITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL             NTL\nFITINUM1 MVC   EDITWORK(L'NORMAL),NORMAL INIT THE EDIT FORMAT       NTL\n         LA    R1,EDITWORK+SIGNORM IN CASE OF ZEROES                NTL\n         EDMK  EDITWORK(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC      NTL\n         LA    R14,EDITWORK+L'NORMAL-1 A(END OF CONVERTED NUMBER)   NTL\n         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1    NTL\n         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG             NTL\n         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                   NTL\n         BR    R7             RETURN TO OUR CALLER                  NTL\n         SPACE 3                                                    NTL\nMVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED                        NTL\n         SPACE 1                                                  ONL14\nTILTSYSD QTILT '*** COMMAND INVALID FOR SYSDS TYPE JOBS ***'      ONL14\n         SPACE 2                                                    NTL\nNORMAL   DC    X'402020202020202020202120' EDIT MASK                NTL\nSIGNORM  EQU   11             OFFSET TO LAST DIGIT                  NTL\nRMT      DC    C'RMT'                                               NTL\nLCL      DC    C'LCL'                                                CL\nLOCAL    DC    C'LOCAL'                                             NTL\n         EJECT ,                                                    NTL\n         LTORG                                                      NTL\n         EJECT ,                                                    NTL\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nCJHIST   CSECT ,                                                  UF023\n         PUSH  PRINT\n         PRINT NOGEN\n         AIF   (NOT &QACF2).$SKP4                                 ONL15\n         AIF   (NOT &QSP133).$SKP4                                ONL15\n         #ACFJCTX ,                GEN ACF2 JCT EXTENSION DSECT   ONL15\n.$SKP4   ANOP  ,                                                  ONL15\n         QCOMMON                   MOVE QCOMMON BEFORE EQUATES      NTL\n         COPY $HASPGBL\n&MACSPLV SETC '2'\n         $HASPEQU\n         POP   PRINT\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\nCJHIST   CSECT ,                                                  UF023\n***********************************************************************\n*                                                                   NTL\n* LINE MAPPINGS                                                     NTL\n*                                                                   NTL\n***********************************************************************\n*                   0123456789.123456789.123456789.123456789.123456789.\n*              123456789.123456789.123456789.\nHEADER   DC    CL80'                           JOB HISTORY INFORMATION'\nHEAD3    DC    CL80'XXXXXXXX  XXXXXXXX VIA=XXXXXXXX BIN=XXXX  CLASS=X M*\n               SGCLASS=X  NOTIFY=XXXXXXX'                           NTL\n*              123456789.123456789.123456789\nHEAD5    DC    CL80'PROCDDN=XXXXXXXX PRT=       PUN=        RDR TIME'\nHEAD6    DC    CL80'PROGRAMMER=XXXXXXXXXXXXXXXXXXXX         XEQ START'\nHEAD7    DC    CL80'CARDS  IN=                              XEQ STOP'\nHEAD8    DC    CL80'LINES OUT=             CARDS OUT=       OUT START'\n*\n         AIF   (NOT &QACF2).$SKP5                                 ONL15\n         AIF   (&QONL).ONL17C                                     ONL17\n         SPACE 1                                                  ONL15\nHEAD12   DC    CL80'                              ACF2 INFORMATION'\nHEAD14   DC    CL80'LOGONID=XXXXXXXX GROUP=XXXXXXXX NAME=XXXXXXXXXXXXXX*\n               XXXXXX PHONE=XXXXXXXXXXXX'                           NTL\nHEAD16   DC    CL80'SOURCE=XXXXXXXX SUBMITTED BY XXXXXXXX XXXXXXXX XXXX*\n               XXXX'                                                NTL\n         AGO   .ONL17D                                            ONL17\n.ONL17C  ANOP  ,                                                  ONL17\n         SPACE 1                                                  ONL17\nHEAD12   DC    CL80'                            ACF2 INFORMATION' ONL17\nHEAD14   DC    CL80'LOGONID=XXXXXXXX                NAME=XXXXXXXXXXXXXXX\n               XXXXXX PHONE=XXXXXXXXXXXX'                         ONL17\nHEAD15   DC    CL80'UID=XXXXXXXXXXXXXXXXXXXXXXXX    ADDR=XXXXXXXXXXXXXXX\n               XXXXXXXXXX'                                        ONL17\nHEAD16   DC    CL80'SOURCE=XXXXXXXX SUBMITTED BY XXXXXXXX XXXXXXXX XXXXX\n               XXXX'                                              ONL17\n.ONL17D  ANOP  ,                                                  ONL17\n.$SKP5   ANOP  ,                                                  ONL15\n         EJECT ,                                                    NTL\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nCJHIST   CSECT ,                                                  UF023\n         DROP  ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $BUFFER ,                                                 ONL16\n         IFGRPL\n        $LMT   ,                                                  WGH42\n        $XECB  ,                                                  WGH42\nPDS2BLEN EQU   1                                                  WGH42\n        $JCT   ,                                                  ONL16\n        $PCE   ,                                                  WGH42\n        $PSV   ,                                                  WGH42\n        $MIT   ,                                                  WGH42\n        $HCT   ,                                                  WGH42\n        $QSE   ,                                                  WGH42\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         EJECT  ,                                                   NTL\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         SPACE 2                                                    NTL\n*                            OVERLAY FOR HEAD3                      NTL\nJOBNAME  EQU   QDMSG+00,8                                           NTL\nJOBNUMB  EQU   QDMSG+10,8                                           NTL\nJOBSCE   EQU   QDMSG+23,8                                           NTL\nBIN#     EQU   QDMSG+36,4                                           NTL\nJOBCLASS EQU   QDMSG+48,1                                           NTL\nMSGCLASS EQU   QDMSG+59,1                                           NTL\nNOTIFY   EQU   QDMSG+69,7                                           NTL\n*                                                                   NTL\n*                            OVERLAY FOR HEAD5                      NTL\nPROCDDN  EQU   QDMSG+08,8                                           NTL\nPRTDEST  EQU   QDMSG+21,6                                           NTL\nPUNDEST  EQU   QDMSG+32,6                                           NTL\nTIMESTMP EQU   QDMSG+50,29     COMMON FOR READER/XEQ/PRT            NTL\n*                                                                   NTL\n*                            OVERLAY FOR HEAD6                      NTL\nPROGAMER EQU   QDMSG+11,20                                          NTL\n*                            OVERLAY FOR HEAD7                      NTL\nCARDSIN  EQU   QDMSG+10,8                                           NTL\n*                            OVERLAY FOR HEAD8                      NTL\nLINESOUT EQU   QDMSG+10,8                                           NTL\nCARDSOUT EQU   QDMSG+33,8                                           NTL\n         SPACE 1                                                  ONL15\n         AIF   (NOT &QACF2).$SKP6                                 ONL15\n         AIF   (&QONL).ONL17E                                     ONL17\n         SPACE 1                                                  ONL15\n*                            OVERLAY FOR HEAD14                     NTL\nLOGONID  EQU   QDMSG+08,8                                           NTL\nGROUP    EQU   QDMSG+23,8                                           NTL\nNAME     EQU   QDMSG+37,20                                          NTL\nPHONE    EQU   QDMSG+64,12                                          NTL\n*                            OVERLAY FOR HEAD16                     NTL\nSOURCE   EQU   QDMSG+07,8                                           NTL\nSUBLID   EQU   QDMSG+29,8                                           NTL\nSUBPROG  EQU   QDMSG+38,8                                           NTL\nSUBPATH  EQU   QDMSG+47,8                                           NTL\n         SPACE 1                                                  ONL15\n         AGO   .ONL17F                                            ONL17\n.ONL17E  ANOP  ,                                                  ONL17\n         SPACE 1                                                  ONL17\n*                            OVERLAY FOR HEAD14                   ONL17\nLOGONID  EQU   QDMSG+08,8                                         ONL17\nNAME     EQU   QDMSG+37,20                                        ONL17\nPHONE    EQU   QDMSG+64,12                                        ONL17\n*                            OVERLAY FOR HEAD15                   ONL17\nUIDSTR   EQU   QDMSG+04,24                                        ONL17\nMAILADDR EQU   QDMSG+37,24                                        ONL17\n*                            OVERLAY FOR HEAD16                   ONL17\nSOURCE   EQU   QDMSG+07,8                                         ONL17\nSUBLID   EQU   QDMSG+29,8                                         ONL17\nSUBPROG  EQU   QDMSG+38,8                                         ONL17\nSUBPATH  EQU   QDMSG+47,8                                         ONL17\n         SPACE 1                                                  ONL17\n.ONL17F  ANOP  ,                                                  ONL17\n.$SKP6   ANOP  ,                                                  ONL15\n         EJECT ,                                                    NTL\n***********************************************************************\n*                                                                   NTL\n* WORK AREA DSECT                                                   NTL\n*                                                                   NTL\n***********************************************************************\nWORK     DSECT                                                      NTL\n         DS    CL72                                                 NTL\nDOUBLEWD DC    D'0'                                                 NTL\nBINYEAR  DC    F'0'                                                 NTL\nBINDAYS  DC    F'0'                                                 NTL\nDATE     DC    F'0'                                                 NTL\nWORKWORD DC    2F'0'                                                NTL\nEDITWORK DC    12H'0'\n***********************************************************************\n* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES        NTL\n*                                                                   NTL\nMONMSK   DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )    NTL\n         DC    CL1' '                                          )    NTL\n*        0123456789.123456789.123456789.                       )    NTL\n*        DDMONYY (DDD) DAY HH:MM:SS.TH                         )    NTL\n*                                                              )    NTL\nJDATE    DC    C'XX.XXX'                           L           )    NTL\n*                                                  E  F        )    NTL\nCDAYN    DC    CL2' '                              A  I  T     )    NTL\nCMON     DC    CL3' '                              V  E  O  F  )    NTL\nCYR      DC    CL2' ',C' ('                        E  L  G  O  )    NTL\nCJDAY    DC    CL3' ',C') '                           D  E  R  )    NTL\nCDAY     DC    CL3' ',C' '                            S  T     )    NTL\nCHH      DC    CL2' ',C':'                               H  I  )    NTL\nCMM      DC    CL2' ',C':'                               E  N  )    NTL\nCSS      DC    CL5'SS.TH'                                R  I  )    NTL\n*                                                           T  )    NTL\n***********************************************************************\nLEN      EQU   *-CDAYN                                              NTL\n         END  ,                                                     NTL\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CJOE": {"ttr": 2313, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CJOE     TITLE 'QUEUE COMMAND - DUMP A JOE IN HEX'                ONL01\nCJOE     QSTART ,                  START CJOE CSECT ASSEMBLY      ONL01\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE                                    *\n*                                                                     *\n***********************************************************************\nFINDJQE  L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n***********************************************************************\n*                                                                     *\n*   CALL HEXDUMP TO DUMP THE JOES                                     *\n*                                                                     *\n***********************************************************************\n         L     R10,QVCKPT     BASE FOR CKPT WORK AREA\n         USING QCKPT,R10      ADDRESSING FOR IT\n         L     R1,QCJQEA      ADDRESS OF JQE\n         USING JQE,R1         ADDRESSING FOR JQE\n         SR    R2,R2          CLEAR WORK REG\n         ICM   R2,7,JQEJOEB   OFFSET TO FIRST WORK JOE\n         BNZ   JOELOOP        CONTINUE IF ANY\n         QTILT 'JOB HAS NO JOES'\n         DROP  R1             DROP JQE ADDRESSING\n         USING JOE,R2         ADDRESSING FOR JOE\n         SPACE 1\nJOELOOP  A     R2,QCJOTA      ADD TO GET ACTUAL ADDRESS\n         LA    R1,MSGJWORK    WORK JOE MESSAGE\n         ST    R1,QDMSGA      SAVE MESSAGE ADDRESS\n         LA    R1,L'MSGJWORK  LENGTH OF MESSAGE\n         STH   R1,QDMLNG      SAVE FOR DISPLAY ROUTINE\n         L     R15,=V(DISPLAY) ADDRESS OF DISPLAY ROUTINE\n         BALR  R14,R15        LINK TO IT\n         LR    R1,R2          POINTER TO JOE TO DUMP\n         LA    R0,JOE1END-JOE ACTUAL LENGTH OF WORK JOE\n         L     R15,=V(HEXDUMP) ADDR OF HEXDUMP MODULE\n         BALR  R14,R15        GO TO IT\n         SPACE 1\n         LA    R1,MSGJCHAR    CHAR JOE MESSAGE\n         ST    R1,QDMSGA      SAVE MESSAGE ADDRESS\n         LA    R1,L'MSGJCHAR  LENGTH OF MESSAGE\n         STH   R1,QDMLNG      SAVE FOR DISPLAY ROUTINE\n         L     R15,=V(DISPLAY) ADDRESS OF DISPLAY ROUTINE\n         BALR  R14,R15        LINK TO IT\n         ICM   R1,7,JOECHARB  POINTER TO CHARACTERISTICS JOE\n         A     R1,QCJOTA      ADD TO GET ACTUAL ADDRESS\n         LA    R0,JOE2END-JOE ACTUAL LENGTH OF CHAR JOE\n         L     R15,=V(HEXDUMP) ADDR OF HEXDUMP MODULE\n         BALR  R14,R15        GO TO IT\n         SPACE 1\n         SPACE 1\nNEXTWORK ICM   R2,7,JOEJQNXB  GET NEXT WORK JOE FOR THIS JOB\n         BNZ   JOELOOP          AND DUMP IT\n         QSTOP\nMSGJWORK DC    C'*** WORK JOE ***'\nMSGJCHAR DC    C'*** CHAR JOE ***'\nMSGJCKPT DC    C'*** CKPT JOE ***'\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nCJOE     CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $JOE\n        $JQE\n        $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CJQE": {"ttr": 2315, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CJQE     TITLE 'QUEUE COMMAND - DUMP A JQE IN HEX'                ONL01\nCJQE     QSTART ,                  START CJQE CSECT ASSEMBLY      ONL01\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE                                    *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n***********************************************************************\n*                                                                     *\n*   CALL HEXDUMP TO DUMP THE JQE                                      *\n*                                                                     *\n***********************************************************************\n         L     R10,QVCKPT     BASE FOR CKPT WORK AREA\n         USING QCKPT,R10      ADDRESSING FOR IT\n         L     R1,QCJQEA      ADDRESS OF JQE\n         LA    R0,JQEBLEN+4   GET ACTUAL LENGTH OF JQE ASSUMING 1 WORD *\n                                    OF SPOOLS USED MASK\n         L     R15,=V(HEXDUMP) ADDR OF HEXDUMP MODULE\n         BALR  R14,R15        GO TO IT\n         QSTOP\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nCJQE     CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $JQE\n        $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CKPT": {"ttr": 2561, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CKPT     TITLE 'QUEUE COMMAND - READ JES2 CKPT RECORDS'           ONL01\nCKPT     QSTART ,                  START CKPT CSECT ASSEMBLY      ONL01\n         USING QCKPT,R10      BASE REG FOR HASP WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n***********************************************************************\n*                                                                     *\n*   REPOSITION DATASET                                                *\n*                                                                     *\n***********************************************************************\n         POINT HASPCKPT,TIR3  POINT PAST SYNC RECORDS\n***********************************************************************\n*                                                                     *\n*   READ FIRST CHECKPOINT RECORD                                      *\n*                                                                     *\n***********************************************************************\n         L     R2,QCJQTL      ADDR OF IOAREA FOR CKPT HEADER REC\n         READ  HDECB1,SF,,(R2),MF=E                               UF039\n         CHECK HDECB1\n         AH    R2,=H'4096'    INCREMENT PAST HEADER RECORD        UF049\n***********************************************************************\n*                                                                     *\n*   READ REMAINDER OF CHECKPOINT RECORDS                              *\n*                                                                     *\n***********************************************************************\n         L     R3,QCJOTL      NUMBER OF RECORDS IN CKPT DATASET   UF039\n         BCTR  R3,0           DROP FOR PREVIOUSLY READ HEADER REC UF039\n***********************************************************************\n*LOOP    READ  HDECB1,SF,,(R2),MF=E                               UF039\n*        CHECK HDECB1                                             UF039\n*        AH    R2,=H'4096'    INCREMENT TO NEXT BUFFER            UF039\n*        BCT   R3,LOOP        READ NEXT RECORD.                   UF039\n***********************************************************************\nLOOP1    LR    R6,R3          ASSUME CAN READ ALL BLOCKS AT ONCE  UF039\n         SR    R0,R0          CLEAR FOR IC                        UF039\n         IC    R0,DCBNCP-IHADCB+HASPCKPT  GET NCP ALLOWED         UF039\n         CR    R6,R0                                              UF039\n         BNH   *+6                                                UF039\n         LR    R6,R0          LIMIT READS TO NCP MAX              UF039\n         LR    R4,R6          SAVE NUMBER OF READS TO DO          UF039\n         L     R7,QCDECBPT    POINTER TO DECB WORK AREA           UF039\nLOOP2    MVC   0(HDECB1L,R7),HDECB1  PRIME THE DECB               UF039\n         READ  (R7),SF,,(R2),MF=E  START A READ                   UF039\n         AH    R2,=H'4096'    BUMP TO NEXT BUFFER AREA            UF039\n         LA    R7,HDECB1L(,R7) BUMP TO NEXT DECB ADDR             UF039\n         BCT   R4,LOOP2       LOOP FOR MAX READS                  UF039\n         SPACE 1                                                  UF039\n         LR    R4,R6          NUMBER OF CHECKS TO DO              UF039\n         L     R7,QCDECBPT    POINT TO DECBS                      UF039\nLOOP3    CHECK (R7)           CHECK A READ                        UF039\n         LA    R7,HDECB1L(,R7) BUMP TO NEXT DECB                  UF039\n         BCT   R4,LOOP3       CHECK ALL READS                     UF039\n         SPACE 1                                                  UF039\n         SR    R3,R6          TOTAL TO READ - JUST READ           UF039\n         BP    LOOP1          CONTINUE IF MORE TO READ            UF039\n***********************************************************************\n*                                                                     *\n*   RETURN TO CALLER                                                  *\n*                                                                     *\n***********************************************************************\n         QSTOP\n         LTORG\n         DS    0F\nTIR3     DC    X'00000300'    POINT PAST SYNC RECORDS\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n*        IHADCB DSORG=PS                                          UF039\n         DCBD   DSORG=PS                                          UF039\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CKPTBSAM": {"ttr": 2564, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CKPT     TITLE 'QUEUE COMMAND - READ JES2 CKPT RECORDS'           ONL01\nCKPT     QSTART ,                  START CKPT CSECT ASSEMBLY      ONL01\n         USING QCKPT,R10      BASE REG FOR HASP WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n***********************************************************************\n*                                                                     *\n*   REPOSITION DATASET                                                *\n*                                                                     *\n***********************************************************************\n         POINT HASPCKPT,TIR3  POINT PAST SYNC RECORDS\n***********************************************************************\n*                                                                     *\n*   READ FIRST CHECKPOINT RECORD                                      *\n*                                                                     *\n***********************************************************************\n         L     R2,QCJQTL      ADDR OF IOAREA FOR CKPT HEADER REC\n         READ  HDECB1,SF,,(R2),MF=E                               UF039\n         CHECK HDECB1\n         AH    R2,=H'4096'    INCREMENT PAST HEADER RECORD        UF049\n***********************************************************************\n*                                                                     *\n*   READ REMAINDER OF CHECKPOINT RECORDS                              *\n*                                                                     *\n***********************************************************************\n         L     R3,QCJOTL      NUMBER OF RECORDS IN CKPT DATASET   UF039\n         BCTR  R3,0           DROP FOR PREVIOUSLY READ HEADER REC UF039\n***********************************************************************\n*LOOP    READ  HDECB1,SF,,(R2),MF=E                               UF039\n*        CHECK HDECB1                                             UF039\n*        AH    R2,=H'4096'    INCREMENT TO NEXT BUFFER            UF039\n*        BCT   R3,LOOP        READ NEXT RECORD.                   UF039\n***********************************************************************\nLOOP1    LR    R6,R3          ASSUME CAN READ ALL BLOCKS AT ONCE  UF039\n         SR    R0,R0          CLEAR FOR IC                        UF039\n         IC    R0,DCBNCP-IHADCB+HASPCKPT  GET NCP ALLOWED         UF039\n         CR    R6,R0                                              UF039\n         BNH   *+6                                                UF039\n         LR    R6,R0          LIMIT READS TO NCP MAX              UF039\n         LR    R4,R6          SAVE NUMBER OF READS TO DO          UF039\n         L     R7,QCDECBPT    POINTER TO DECB WORK AREA           UF039\nLOOP2    MVC   0(HDECB1L,R7),HDECB1  PRIME THE DECB               UF039\n         READ  (R7),SF,,(R2),MF=E  START A READ                   UF039\n         AH    R2,=H'4096'    BUMP TO NEXT BUFFER AREA            UF039\n         LA    R7,HDECB1L(,R7) BUMP TO NEXT DECB ADDR             UF039\n         BCT   R4,LOOP2       LOOP FOR MAX READS                  UF039\n         SPACE 1                                                  UF039\n         LR    R4,R6          NUMBER OF CHECKS TO DO              UF039\n         L     R7,QCDECBPT    POINT TO DECBS                      UF039\nLOOP3    CHECK (R7)           CHECK A READ                        UF039\n         LA    R7,HDECB1L(,R7) BUMP TO NEXT DECB                  UF039\n         BCT   R4,LOOP3       CHECK ALL READS                     UF039\n         SPACE 1                                                  UF039\n         SR    R3,R6          TOTAL TO READ - JUST READ           UF039\n         BP    LOOP1          CONTINUE IF MORE TO READ            UF039\n***********************************************************************\n*                                                                     *\n*   RETURN TO CALLER                                                  *\n*                                                                     *\n***********************************************************************\n         QSTOP\n         LTORG\n         DS    0F\nTIR3     DC    X'00000300'    POINT PAST SYNC RECORDS\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n*        IHADCB DSORG=PS                                          UF039\n         DCBD   DSORG=PS                                          UF039\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPDDB": {"ttr": 2567, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CPDDB    TITLE 'QUEUE COMMAND - LIST PDDBS FOF A JOB'             ONL01\nCPDDB    QSTART ,                  START CPDDB ASSEMBLY           ONL01\n***********************************************************************\n*                                                                     *\n*        PDDB JOBNAME <PDDB#>                                         *\n*                                                                     *\n* DISPLAY LIMITED INFORMATION ABOUT ALL OF THE PDDB'S FOR A JOB       *\n*                                                                     *\n* IF THE OPTIONAL PDDB NUMBER IS SPECIFIED, ONLY THAT PDDB WILL       *\n* BE DUMPED IN HEX.                                                   *\n*                                                                     *\n***********************************************************************\n         GBLB  &QJTIP             JTIP OPTION, DEFINED BY QSTART\n         GBLB  &QSP133             SP 1.3.3 OPTION                UF046\n         GBLB  &QSP                SP 1.3.X OPTION                CL007\n         USING QCKPT,R10          BASE REG FOR CHECKPONT WORK AREA\n         L     R10,QVCKPT         LOAD BASE REG\n         USING QDISPLAY,R9        BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL          LOAD BASE REG\n         USING WORK,R13           BASE REG FOR LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JCT                                    *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB)    ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15            GO TO IT\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAPDDB            PERFORM JOB AUTHORIZATION      ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   FIND ALL PDDBS FOR THIS JOB                                       *\n*                                                                     *\n***********************************************************************\n         USING PDB,R2             BASE REG FOR PDDB\n         MVC   QDHLINE,HEADING    SET HEADING LINE\n         MVI   SWITCH,0           CLEAR FLAG BYTE\n         L     R3,QCIOTA          LOAD BASE REG\n         LR    R5,R3              IOAREA FOR READ IOT BLOCK\n         SH    R3,=AL2(IOTSTART-IOT) ADJUST FOR HEADER            UF046\n         USING IOT,R3             BASE REG FOR IOT                UF046\n         L     R1,QCJQEA          ADDRESS OF JQE                  UF046\n         USING JQE,R1             SET TEMP ADDRESSING             UF046\n         TM    JQEFLAG3,JQE3SYSD  JQETRAK POINT TO IOT?           UF046\n         BZ    READJCT            NO, SKIP THIS CODE              UF046\n         OI    SWITCH,1            SKIP SPIN IOT'S                UF046\n         L     R4,JQETRAK          ADDRESS OF FIRST IOT           UF046\n         B     READIOT             READ FIRST IOT                 UF046\nREADJCT  DS    0H                                                 UF046\n         USING JCT,R1             SET TEMP ADDRESSING             ONL16\n         L     R1,QCJCTA          POINT TO JCT\n         L     R4,JCTIOT          FIRST IOT ADDRESS\n         DROP  R1                 DROP TEMP ADDRESSING\nREADIOT  DS    0H                                                 UF046\n         BAL   R8,READ            READ THE IOT\n         SPACE 1\n         LH    R6,QLNG2           WAS A PDDB SPECIFIED?\n         LTR   R6,R6\n         BZ    NEXTIOT            NO, PROCEED NORMALLY\n         BCTR  R6,0               DROP FOR EXECUTES\n         MVC   QFZONES,QFZONE     PREPARE FOR NUMERIC TEST\n         EX    R6,MVZ             MOVE ZONES FOR TEST\n         CLC   QFZONES,QFZONE     ALL NUMERIC?\n         BNE   TILT               NO, SKIP IT\n         EX    R6,PACK            PACK TO DWORD\n         CVB   R6,CONVERT         GET PDDB NUMBER\n         OI    SWITCH,X'02'       AND INDICATE FOR LATER\n         SPACE 1\nNEXTIOT  LR    R4,R3              BASE OF IOT\n         CLC   IOTID,=CL4'IOT'    WAS AN IOT READ FROM SPOOL ?    ONL03\n         BNE   BADIOT             ERROR IF NO                     ONL03\n         CLC   QPJOBID,IOTJBKEY   IS THE IOT'S JOB KEY VALID ?    ONL03\n         BNE   BADIOT             ERROR IF NO                     ONL03\n         A     R4,IOTPDDBP        OFFSET BEYOND LAST PDDB\n         LR    R2,R3              BASE OF IOT\n         A     R2,IOTPDDB            ADD OFFSET TO FIRST PDDB     UF046\nPDDBLOOP L     R0,PDBDSKEY        GET THE DSID        (FULLWORD) WGH42\n         TM    PDBFLAG3,PDB3PLHD   IGNORE PDDB IF                 CL007\n         BO    NEXTPDDB             IT IS A PLACE HOLDER          CL007\n         TM    SWITCH,X'02'       ONLY WANT ONE PDDB?\n         BZ    PDDBLP1            NO, SKIP SPECIAL TEST\n         CR    R0,R6              FOUND RIGHT PDDB?\n         BNE   NEXTPDDB           NO, TRY NEXT ONE\n         LR    R1,R2              POINT TO PDDB\n         LA    R0,PDBLENG         LENGTH OF PDDB\n         L     R15,=V(HEXDUMP)    POINT TO DISPLAY ROUTINE\n         BALR  R14,R15            AND LINK TO IT\n         B     NEXTPDDB           JUST INCASE MULTIPLE PDDBS (SYSLOG)\n         SPACE 1\nPDDBLP1  MVC   QDMSG,QBLANK       BLANK WORK LINE AREA\n         LTR   R0,R0              TEST FOR NULL PDDB#\n*        BZ    NEXTPDDB           SKIP IF SO                        SBG\n         CVD   R0,CONVERT         CONVERT TO DECIMAL\n         MVC   DSID-4(8),ED8      MOVE EDIT PATTERN TO DISPLAY\n         ED    DSID-4(8),CONVERT+4  EDIT THE DSID\n         UNPK  DSFLAG1(3),PDBFLAG1(2)  HEX OF FLAG BYTE\n         TR    DSFLAG1,HEXTAB     MAKE PRINTABLE\n         MVI   DSFLAG1+2,C' '     CLEAR TRASH BYTE\n         L     R0,PDBRECCT        GET THE RECORD COUNT\n         CVD   R0,CONVERT         CONVERT TO DECIMAL\n         MVC   DSRECCT,ED8        MOVE EDIT PATTERN TO DISPLAY\n         ED    DSRECCT,CONVERT+4  EDIT THE RECORD COUNT\n         MVC   DSCLASS,PDBCLASS   MOVE PDBCLASS TO DISPLAY\n         UNPK  DSMTTR(9),PDBMTTR(5)  UNPACK MTTR TO DISPLAY\n         TR    DSMTTR,HEXTAB      MAKE PRINTABLE\n         MVI   DSMTTR+9,C' '      CLEAR JUNK BYTE\n         MVC   DS#PROC,PDBPNAME   SET PDDB PROC NAME              UF046\n         MVC   DS#STEP,PDBSNAME   SET PDDB STEP NAME              UF046\n         MVC   DS#DDNM,PDBDDNAM   SET PDDB DD NAME                UF046\n         LH    R0,PDBLRECL        PICK UP LRECL                   WGH\n         CVD   R0,CONVERT         CONVERT TO DECIMAL              WGH\n         MVC   DS#LRECL,ED8       MOVE EDIT PATTERN TO DISPLAY    WGH\n         ED    DS#LRECL,CONVERT+4 EDIT THE LRECL                  WGH\n         UNPK  DS#RECFM(3),PDBRECFM(2) UNPACK RECFM TO DISPLAY    WGH\n         TR    DS#RECFM(2),HEXTAB MAKE PRINTABLE                  WGH\n         MVI   DS#RECFM+2,C' '    CLEAR JUNK BYTE                 WGH\n         LA    R1,DS#RECFM+3      SET FOR FORMAT CONCAT           WGH\n         MVI   0(R1),C'U'         DEFAULT TO RECFM U              WGH\n         TM    PDBRECFM,X'C0'     FIXED OR VARIABLE ?             WGH\n         BZ    RECFMZIP           NO.. MUST BE ZIP                WGH\n         BO    CHKBLK             BOTH.. MUST BE U                WGH\n         MVI   0(R1),C'F'         DEFAULT TO RECFM F              WGH\n         TM    PDBRECFM,X'80'     FIXED    RECORDS                WGH\n         BO    CHKBLK             YES.. LEAVE IT RECFM F          WGH\n         MVI   0(R1),C'V'         NO... MUST BE RECFM V           WGH\n         B     CHKBLK             CHECKED IF BLOCKED              WGH\nRECFMZIP MVI   0(R1),C'?'         UNKNOWN                         WGH\nCHKBLK   LA    R1,1(R1)           BUMP TO NEXT POSITION           WGH\n         TM    PDBRECFM,X'10'     BLOCKED ?                       WGH\n         BZ    CKSPAN             NO.. CHECK FOR SPANNED          WGH\n         MVI   0(R1),C'B'         YES... SET BLOCKED              WGH\n         LA    R1,1(R1)           BUMP TO NEXT POSITION           WGH\nCKSPAN   TM    PDBRECFM,X'08'     SPANNED OR STANDARD?            WGH\n         BZ    GETCCTL            NO... CHECK CONTROL             WGH\n         MVI   0(R1),C'S'         YES.. SET                       WGH\n         LA    R1,1(R1)           BUMP TO NEXT POS                WGH\nGETCCTL  TM    PDBRECFM,X'06'     CCTL ?                          WGH\n         BZ    FMTDONE            NO.. THATS IT                   WGH\n         BO    UNCCTL             BOTH.. ???                      WGH\n         MVI   0(R1),C'A'         DEFAULT TO A                    WGH\n         TM    PDBRECFM,X'04'     IS IT ASA?                      WGH\n         BO    FMTDONE            YES... LEAVE IT                 WGH\n         MVI   0(R1),C'M'         NO.... MUST BE MACHINE          WGH\n         B     FMTDONE                                            WGH\nUNCCTL   MVI   0(R1),C'?'         UNKNOWN                         WGH\n         B     FMTDONE                                            WGH\nFMTDONE  EQU   *                                                  WGH\n         MVC   QDMLNG,=H'80'      SET THE LENGTH\n         LA    R0,QDMSG           POINT TO MESSAGE\n         ST    R0,QDMSGA          SET IN AREA\n         L     R15,=V(DISPLAY)    POINT TO DISPLAY ROUTINE\n         BALR  R14,R15            LINK TO IT\nNEXTPDDB LA    R2,PDBLENG(R2)     POINT TO NEXT PDDB\n         CR    R2,R4              HAVE WE GONE PAST THE LAST PDDB\n         BL    PDDBLOOP           NO. KEEP TRYING\n         L     R4,IOTIOTTR        DISK ADDR OF NEXT IOT\nSPIN     LTR   R4,R4              IS THERE ANOTHER IOT?\n         BZ    SPINIOT            NO. TRY THE SPIN IOT.\n         BAL   R8,READ            READ THE IOT\n         B     NEXTIOT            SEARCH THE NEXT IOT\n         USING JCT,R1             BASE REG FOR JCT                ONL16\nSPINIOT  TM    SWITCH,1           DID WE SEARCH THE SPINIOT ALREADY\n         BO    STOP               YES, DONE\n         OI    SWITCH,1           SET SWITCH\n         L     R1,QCJCTA          LOAD BASE REG\n         L     R4,JCTSPIOT        DISK ADDR OF SPIN IOT\n         B     SPIN               SEARCH THE SPIN IOT CHAIN\n         DROP  R1\nSTOP     QSTOP                    GO BACK TO CALLER\n***********************************************************************\n*                                                                     *\n*   READ A BLOCK FROM HASPACE                                         *\n*                                                                     *\n***********************************************************************\nREAD     ST    R4,QCTRAK          STORE DISK ADDR\n         LR    R1,R5              IOAREA ADDRESS\n         L     R15,=V(READSPC)    ADDR OF ROUTINE TO READ HASPACE\n         BALR  R14,R15            GO TO IT\n         BR    R8                 RETURN TO CALLER\nED8      DC    X'4020202020202120'\nMVZ      MVZ   QFZONES(1),QPARM2\nPACK     PACK  CONVERT,QPARM2(1)\nHEXTAB   EQU   *-X'F0'\n         DC    C'0123456789ABCDEF'\nTILT     QTILT 'INVALID PDDB# SPECIFIED'\nBADIOT   QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       ONL03\nHEADING  DC    CL80' '\n         ORG   HEADING            POINT TO START OF AREA\n         DC    C'    DSID'\n         DC    C' F1'             FLAG BYTE 1\n         DC    C'  RECORDS'\n         DC    C' C'              CLASS\n         DC    C'   MTTR  '       MTTR\n         DC    C' PROCNAME'\n         DC    C' STEPNAME'\n         DC    C' DDNAME  '\n         DC    C'   RECFM '                                       WGH\n         DC    C'   LRECL '                                       WGH\n         ORG   ,                  BACK TO NORMAL ADDRESSING\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nCPDDB    CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $BUFFER ,                                                UF046\n         IFGRPL\n         $TAB\n         $JCT\n         $JQE                                                     UF046\n         $PDDB\n         $IOT\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\n         DS    CL4\nDSID     DS    CL4\n         DS    CL1\nDSFLAG1  DS    CL2\n         DS    CL1\nDSRECCT  DS    CL8\n         DS    CL1\nDSCLASS  DS    CL1\n         DS    CL1\nDSMTTR   DS    CL8\n         DS    CL1\nDS#PROC  DS    CL8\n         DS    CL1\nDS#STEP  DS    CL8\n         DS    CL1\nDS#DDNM  DS    CL8\n         DS    CL3                                             WGH\nDS#RECFM DS    CL4                                             WGH\n         DS    CL1                                             WGH\nDS#LRECL DS    CL8                                             WGH\nWORK     DSECT\n         DS    CL72\nSWITCH   DS    C\nCONVERT  DS    D\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CPFK": {"ttr": 2572, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CPFK     TITLE 'QUEUE COMMAND - LIST / CHANGE PFK DEFINITIONS'    ONL01\nCPFK     QSTART ,                  START CPFK CSECT ASSEMBLY      ONL01\n         USING QDISPLAY,R9\n         L     R9,QVDSPL           LOAD BASE REG FOR DISPLAY AREA\n         USING WORK,R13            BASE FOR SAVE / WORK AREA\n         LH    R1,QLNG1            WAS A PARM PASSED?\n         LTR   R1,R1\n         BZ    PFKDISP             NO, GO DISPLAY CURRENT DEFNS\n         SPACE 1\n*        CHANGE THE CURRENT SETTING FOR THE PFK DEFINED BY QPARM1\n         SPACE 1\n         LH    R2,QLNG1            LENGTH OF DATASET ID FIELD\n         SH    R2,=H'1'            IS THE DATASET ID FIELD ZERO LENGTH?\n         BM    TILT                YES. QUIT.\n         MVC   QFZONES,QFZONE      INITIALIZE NUMERIC TEST\n         EX    R2,MVZ              MOVE THE ZONES FOR VALIDITY CHECK\n         CLC   QFZONES,QFZONE      IS THE FIELD NUMERIC?\n         BNE   TILT                NO. QUIT.\n         EX    R2,PACK             PACK THE FIELD\n         CVB   R2,DWORD            CONVERT TO BINARY\n         LA    R15,QDREPLY         POINT TO REPLY AREA\n         AH    R15,QOFF2           ADD OFFSET PAST PFK NUMBER\n         BCTR  R2,0                RELATIVE PFK NUMBER\n         SLL   R2,3                TIME LENGTH OF AN ENTRY\n         LA    R1,QDPFKTAB(R2)     POINT TO TABLE ENTRY\n         MVC   0(8,R1),0(R15)      SET NEW DEFINITION\n         SPACE 1\n*        DISPLAY THE CURRENT PFK DEFINITIONS\nPFKDISP  MVC   QDHLINE,HEADING     SET HEADING\n         LA    R2,QDPFKTAB         POINT TO TABLE\n         LA    R3,1                FIRST ENTRY\n         LA    R4,12               NUMBER OF ENTRIES\nDISPLOOP MVC   QDMSG,QBLANK        BLANK THE OUTPUT LINE\n         MVC   QDMSG+1(4),=X'40202120' SET MASK\n         CVD   R3,DWORD            PFK NUMBER TO DECIMAL\n         ED    QDMSG+1(4),DWORD+6  SET IN MESSAGE\n         LR    R15,R3              GET PFK NUMBER\n         BCTR  R15,0               DROP BY ONE\n         SLL   R15,3               TIMES 8\n         AR    R15,R2              POINT TO PFK TEXT\n         MVC   QDMSG+8(8),0(R15)   COPY TEXT\n         LA    R0,QDMSG            POINT TO MESSAGE\n         ST    R0,QDMSGA           SAVE MSG POINTER\n         MVC   QDMLNG,=H'80'       SET MESSAGE LENGTH\n         L     R15,=V(DISPLAY)     WRITE THE\n         BALR  R14,R15               MESSAGE\n         LA    R3,1(,R3)           BUMP TO NEXT VALUE\n         BCT   R4,DISPLOOP         LOOP FOR ALL PFK'S\n         SPACE 1\nPUTHELP  MVC   QDMLNG,=H'80'   SET MSG LENGTH\n         LA    R2,PFKHMN       NUMBER OF LINES\n         LA    R3,PFKHM        START OF TEXT AREA\nPUTHELP1 ST    R3,QDMSGA       SET MESSAGE ADDRESS\n         L     R15,=V(DISPLAY) ADDRESS OF DISPLAY ROUTINE\n         BALR  R14,R15         LINK TO ROUTINE\n         LA    R3,80(,R3)      POINT TO NEXT LINE\n         BCT   R2,PUTHELP1     LOOP TILL DONE\n         SPACE 1\n         QSTOP\nTILT     QTILT '*** PFK NUMBER IS INVALID ***'\nMVZ      MVZ   QFZONES(*-*),QPARM1 CHECK FOR NUMERIC\nPACK     PACK  DWORD,QPARM1(*-*)   CONVERT TO BINARY\nHEADING  DC    CL80' PFK CURRENT DEFINITIONS'\nPFKHM    EQU   *\n DC CL84' '\n DC CL80'TO SPECIFY OPERANDS (FOR PF5, AND OPTIONALLY FOR PF6, 9, 12),'\n DC CL80'OR TO TEMPORARILY OVERRIDE THE DEFAULTS (FOR PF7, 8, 10, 11),'\n DC CL80'KEY IN THE VALUE AND PRESS THE APPROPRIATE PF KEY.'\n DC CL80' '\n DC CL80'TO REDEFINE A PFK, ENTER \"PFK # TEXT\"'\n DC CL80'  WHERE # IS THE PFK NUMBER AND TEXT IS THE DESIRED STRING'\n DC CL4' '\nPFKHMN   EQU   (*-PFKHM)/80    NUMBER OF MESSAGES\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\nWORK     DSECT\n         DS    18F\nDWORD    DS    D                   SCRATCH DOUBLE WORD\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CQUIET": {"ttr": 2575, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CQUIET   TITLE 'QUEUE COMMAND - CHANGE QUIET MODE ON/OFF '              CQU00010\nCQUIET   QSTART ,                  START CQUIET CSECT ASSEMBLY          CQU00020\n         SPACE 2                                                        CQU00030\n         USING QDISPLAY,R9                                              CQU00040\n         L     R9,QVDSPL                                                CQU00050\n         USING WORK,R13                                                 CQU00060\n         CLC   QSUBNAME(4),=C'QUIE'   QUIET MODE REQUESTED ?            CQU00070\n         BE    QUIET               YES.. SET MODE                       CQU00080\n         CLC   QSUBNAME(4),=C'TALK'   TALK  MODE REQUESTED ?            CQU00090\n         BE    TALK                YES.. SET MODE                       CQU00100\n         CLC   QSUBNAME(3),=C'NOS'    NOSTACK MODE REQUESTED ?          CQU00090\n         BE    NOSTACK             YES.. SET MODE                       CQU00100\n         CLC   QSUBNAME(4),=C'ENDS'  ENDSTACK MODE REQUESTED ?          CQU00090\n         BE    NOSTACK             YES.. SET MODE                       CQU00100\n         CLC   QSUBNAME(4),=C'TERM'  ENDSTACK MODE REQUESTED ?          CQU00090\n         BE    NOSTACK             YES.. SET MODE                       CQU00100\n         CLC   QSUBNAME(4),=C'STAC'   STACK  MODE REQUESTED ?           CQU00090\n         BE    STACK               YES.. SET MODE                       CQU00100\n         QTILT 'INVALID ENTRY TO CQUIET'                                CQU00110\nQUIET    EQU   *                                                        CQU00120\n         OI    QFLAG1,QFLG1QUI                                          CQU00130\n         QTILT 'QUIET MODE SET'                                         CQU00140\nTALK     EQU   *                                                        CQU00150\n         NI    QFLAG1,255-QFLG1QUI                                      CQU00160\n         QTILT 'TALK MODE SET'                                          CQU00170\nNOSTACK  EQU   *                                                        CQU00150\n         OI    QFLAG2,QFLG2NSK                                          CQU00160\n         QTILT 'QUEUE SET TO PROCESS COMMANDS DIRECTLY FROM TERMINAL'   CQU00170\nSTACK    EQU   *                                                        CQU00150\n         NI    QFLAG2,255-QFLG2NSK                                      CQU00160\n         QTILT 'QUEUE SET TO PROCESS COMMANDS THROUGH INPUT STACK'      CQU00170\n         SPACE 1                                                        CQU00180\n         LTORG                                                          CQU00190\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023 CQU00200\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01 CQU00210\n         QCOMMON                                                        CQU00220\n         $HASPEQU                                                       CQU00230\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01 CQU00240\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023 CQU00250\nWORK     DSECT                                                          CQU00260\n         DS    90F                 5 SAVE AREAS                   WGH   CQU00270\n         END                                                            CQU00280\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CSPIN": {"ttr": 2817, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CSPIN    TITLE 'QUEUE COMMAND - SPIN A COPY OF CURRENT DATASET'   ONL01\nCSPIN    QSTART ,                  START CSPIN CSECT ASSEMBLY     ONL01\n*        PRINT GEN\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n         USING WORK,R13       LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   ALLOCATE OUTPUT DATASET                                           *\n*                                                                     *\n***********************************************************************\n         CLC   QPDSID,=H'0'   IS THERE A VALID DATASET?\n         BE    TILT1          NO. TELL THE USER.\n         LA    R1,1           DEFAULT FIRST LINE                 WGH\n         ST    R1,FRSTLINE    INIT DEFAULT                       WGH\n         LA    R1,0           INIT CURRENT LINE                  WGH\n         ST    R1,LINECNT     DEFAULT CURRENT LINE               WGH\n         L     R1,=F'9999999' DEFAULT LAST LINE                  WGH\n         ST    R1,LASTLINE    TO ENSUR END OF DATASET            WGH\n         MVC   DEST(8),=CL8' '         DEFAULT DEST              WGH\n         MVC   WRTRID(8),=CL8' '       DEFAULT WRTRID            WGH\n         MVI   CLASS,C'A'     SYSOUT=A\n         CLC   QPARM1(6),=C'CLASS='  IS CLASS SPECIFIED          WGH\n         BE    ALTCLASS       YES..  GET ALTERNATE CLASS PARM    WGH\n         LA    R4,QLNG1       POINT TO 1ST  FIELD LENGTH         WGH\n         LA    R5,QPARM1      POINT TO 1ST  FIELD                WGH\n         LH    R3,0(R4)       ANY PARMS  SPECIFIED               WGH\n         LTR   R3,R3          IS PARM1 0 CHAR?                   WGH\n         BZ    DSALLOC        YES..  USE DEFAULT                 WGH\n         CLI   QPARM1,C'Z'    CHECK FOR COUNT                    WGH\n         BH    CHKCNT         NOT ALPHABETIC TRY COUNT           WGH\n         CH    R3,=H'1'       IS PARM GT 1 CHAR?                 WGH\n         BH    DEST1          YES..  MUST BE DEST                WGH\n         CLI   QPARM1,C'A'    NO...  CHECK FOR VALID CLASS       WGH\n         BL    BADCLS         NOT ALPHABETIC BAD CLASS           WGH\n         MVC   CLASS,QPARM1   USE SPECIFIED CLASS                WGH\n         B     COUNT2         TRY FOR COUNT IN PARM2             WGH\nALTCLASS CLI   QPARM1+6,C'A'  CHECK FOR VALID CLASS              WGH\n         BL    BADCLS         TO LOW BAD SYSOUT CLASS            WGH\n         MVC   CLASS,QPARM1+6 USE SPECIFIED CLASS                WGH\nCOUNT2   LA    R4,QLNG2       POINT TO NEXT FIELD                WGH\n         LA    R5,QPARM2      POINT TO NEXT FIELD                WGH\nCHKCNT   EQU   *\n         LH    R3,0(R4)       LENGTH OF COUNT FIELD              WGH\n         LTR   R3,R3          ANYTHING THERE                     WGH\n         BZ    DSALLOC        NO.. CONTINUE WITH DEFAULTS        WGH\n         CLI   0(R5),C'0'     IS IT A NUMBER?                    WGH\n         BL    DEST1          NO.. MUST BE DEST                  WGH\n         XC    SCRATCH,SCRATCH YES..ZERO WORK AREA               WGH\n         MVC   SCRATCH+4,QPREC      MOVE CURRENT LINE            WGH\n         CVB   R15,SCRATCH     CONVERT TO BINARY                 WGH\n         LTR   R15,R15         IS IT POSITIVE                    WGH\n         BNP   CHKNUM          NO.. LEAVE AS DEFAULT             WGH\n         ST    R15,FRSTLINE    SAVE FOR LATER                    WGH\nCHKNUM   BCTR  R3,0            LENGTH OF FIELD -1                WGH\n         LA    R14,0(R5)       POINT TO PARM FIELD               WGH\n         MVC   QFZONES,QFZONE  INIT CHECK FIELD                  WGH\n         EX    R3,MVZ          MOVE ZONES FROM PARM              WGH\n         CLC   QFZONES,QFZONE  IS IT ALL NUMERIC ?               WGH\n         BNE   NOTNUM          NO.. INFORM USER                  WGH\n         EX    R3,PACK         PACK THE NUMBER                   WGH\n         CVB   R15,SCRATCH     LOAD THE NUMBER                   WGH\n         A     R15,FRSTLINE    ADD TO STARTING LINE              WGH\n         S     R15,=F'1'       ADJUST TO GET CORRECT COUNT       WGH\n         ST    R15,LASTLINE    SAVE IT                           WGH\n         LA    R4,12(R4)      POINT TO NEXT FIELD LENGTH         WGH\n         LA    R5,12(R5)      POINT TO NEXT FIELD (2 OR 3)       WGH\nDEST1    EQU   *                                                 WGH\n         LH    R3,0(R4)       LENGTH OF DEST  FIELD              WGH\n         LTR   R3,R3          ANYTHING THERE                     WGH\n         BZ    DSALLOC        NO.. CONTINUE WITH DEFAULTS        WGH\n         STH   R3,DESTLEN     SAVE LENGTH                        WGH\n         MVC   DEST(8),0(R5)   MOVE IN DEST FIELD                WGH\n         LA    R4,12(R4)      POINT TO WRTRID FIELD LENGTH       WGH\n         LA    R5,12(R5)      POINT TO WRTRID FIELD              WGH\n         LH    R3,0(R4)       LENGTH OF WRTRID FIELD             WGH\n         LTR   R3,R3          ANYTHING THERE                     WGH\n         BZ    DSALLOC        NO.. CONTINUE WITH DEFAULTS        WGH\n         STH   R3,WRTRLEN     SAVE LENGTH                        WGH\n         MVC   WRTRID(8),0(R5)   MOVE IN WRTRID FIELD            WGH\nDSALLOC  EQU   *\n         BAL   R8,ALLOSPIN    GO ALLOCATE SPIN DDN               WGH\n         MVC   QCOUT+36(1),QCRECFM MOVE IN RECORD FORMAT\n         NI    QCOUT+36,X'06' TURN OFF EVERTHING BUT CCTL\n         OI    QCOUT+36,X'90' SPECIFY FIXED BLOCKED RECORDS\n         LH    R1,QCLRECL     RECORD LENGTH\n         LTR   R1,R1          IS THE LRECL ZERO?\n         BNZ   RECOK          NO. SKIP.\n         LA    R1,133         YES. USE LRECL 133.\nRECOK    STH   R1,QCOUT+82    STORE LRECL\n         STH   R1,QCOUT+62    AND BLKSIZE\n         OPEN  MF=(E,QCOPEN)\n***********************************************************************\n*                                                                     *\n*   REPOSITION DATASET TO TOP                                         *\n*                                                                     *\n***********************************************************************\n         L     R4,QCSTART     TOP OF DATASET POINTER\n         L     R4,0(R4)       DISK ADDR TOP OF DATASET\n         L     R5,QCBLKA      IOAREA ADDRESS\n         B     FIRST          GO DO IT\n***********************************************************************\n*                                                                     *\n*   PROCESS DATASET                                                   *\n*                                                                     *\n***********************************************************************\nNEXTBLK  L     R4,HDBNXTRK-BUFSTART(R5) DISK ADDR NEXT BLOCK   WGH42\nFIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?\n         BZ    END            YES. END OF DATASET.\n         BAL   R8,READ        READ A BLOCK\n         CLC   QPJOBID,HDBJBKEY-BUFSTART(R5)    JOBID MATCH?    WGH42\n         BNE   END                  NOMATCH                     WGH42\n         CLC   QPDSID,HDBDSKEY-BUFSTART+2(R5)   DSID  MATCH?    WGH42\n         BE    IDISOK              BR IF SO                          CL\n         L     R4,QCJQEA           ADDR OF JQE                       CL\n         TM    JQEFLAG3-JQE(R4),JQE3SYSD ALL THRU IF THIS            CL\n         BNO   END                    IS NOT SYSTEM JQE              CL\nIDISOK   LA    R4,HDBSTART-BUFSTART(R5)    FIRST RECORD IN BLOCK  WGH42\n***********************************************************************\n*                                                                     *\n*   PROCESS RECORDS                                                   *\n*                                                                     *\n***********************************************************************\nNEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?\n         BE    NEXTBLK        YES. END OF BLOCK.\n         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?\n         BO    SPAN           YES. SKIP IT.\n         SR    R6,R6          ZERO OUT REG\n         IC    R6,0(R4)       INSERT LENGTH\n         TM    1(R4),X'80'    IS CCTL SPECIFIED?\n         BZ    NOCCTL         NO. SKIP.\n         LA    R6,1(R6)       INCREMENT LENGTH FOR CCTL\nNOCCTL   TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?\n         BO    SKIPREC        YES. SKIP IT.\n         MVI   BUFFER,C' '    BLANK FIRST BYTE OF BUFFER\n         MVC   BUFFER+1(255),BUFFER BLANK THE BUFFER\n         LR    R7,R6          DO NOT DESTROY R6\n         SH    R7,=H'1'       IS LENGTH ZERO?\n         BM    SKIPREC        YES. SKIP RECORD.\n         EX    R7,MVCREC      MOVE RECORD TO BUFFER\n         L     R1,LINECNT     GET CURRENT LINE CNT                WGH\n         LA    R1,1(R1)       ADD THIS LINE TO IT                 WGH\n         ST    R1,LINECNT     SAVE IT                             WGH\n         C     R1,LASTLINE    IT IS GT THAN LAST REQUESTED        WGH\n         BH    END            YES.. CLOSE IT                      WGH\n         C     R1,FRSTLINE    IS IT LESS THAN 1ST REQUESTED?      WGH\n         BL    SKIPREC        YES... SKIP IT                      WGH\n         PUT   QCOUT,BUFFER\nSKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\nSPAN     LH    R6,2(R4)       SEGMENT LENGTH\n         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?\n         BO    SPANFRST       YES. USE LARGER HEADER SIZE.\n         LA    R4,4(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\nSPANFRST LA    R4,6(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\n***********************************************************************\n*                                                                     *\n*   CLOSE UP SHOP AND GO HOME                                         *\n*                                                                     *\n***********************************************************************\nEND      CLOSE MF=(E,QCOPEN)\n         MVC   DYNALLOC(FREELEN),FREEPTR\n         LA    R1,YREERB\n         STCM  R1,B'0111',YREEPTR+1\n         LA    R1,YREETXPT\n         ST    R1,YREETPTR\n         LA    R1,YREETU1\n         STCM  R1,B'0111',YREETXPT+1\n         LA    R1,YREETU2\n         STCM  R1,B'0111',YREETXPT+5\n         LA    R1,YREEPTR\n         DYNALLOC\n         L     R15,=V(LISTDS) GO BACK TO LISTDS\n         BALR  R14,R15        GO TO IT\n         QSTOP\n***********************************************************************\n*                                                                     *\n*   READ A BLOCK FROM HASPACE                                         *\n*                                                                     *\n***********************************************************************\nREAD     ST    R4,QCTRAK      STORE DISK ADDR\n         LR    R1,R5          IOAREA ADDRESS\n         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\n         BR    R8             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   ALLOCATION ROUTINE                                                *\n*                                                                     *\n***********************************************************************\nALLOSPIN MVC   DYNALLOC(S99LENG),S99RBPTR  COPY DYN ALLOC LIST    WGH\n         LA    R1,X99RB       RELOCATE LIST\n         STCM  R1,B'0111',X99RBPTR+1\n         LA    R1,X99TUPL\n         ST    R1,X99TXTPP\n         LA    R1,X99TUKY1\n         STCM  R1,B'0111',X99TUPL+1\n         LA    R1,X99TUKY2\n         STCM  R1,B'0111',X99TUPL+5\n         LA    R1,X99TUKY3\n         STCM  R1,B'0111',X99UPLL+1\n         LA    R1,X99TUKY4\n         STCM  R1,B'0111',X99UPLLW+1\n         MVC   X99SYSOC,CLASS\n         CLI   DEST,C' '               ANY DEST SPEC?\n         BE    NODEST\n         MVC   X99DESTL,DESTLEN        MOVE IN LENGTH\n         MVC   X99DEST,DEST            MOVE IN DEST\n         MVI   X99EPARM,X'00'          SAY CLASS NOT LAST PARM\n         CLI   WRTRID,C' '             ANY WRTRID SPECIFIED\n         BE    NODEST\n         MVC   X99WRTRL,WRTRLEN        MOVE IN LENGTH\n         MVC   X99WRTR,WRTRID          MOVE IN WRTRID\n         MVI   X99UPLL,X'00'           SAY DEST NOT LAST PARM\nNODEST   LA    R1,DYNALLOC\n         DYNALLOC\n         LTR   R15,R15                 OK?\n         BNZ   CANTALLC                NO CAN DO\n         BR    R8             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   ALLOCATION FAILURE                                                *\n*                                                                     *\n***********************************************************************\nCANTALLC MVC   QDTLINE,QBLANK     CLEAR OUT LINE\n         CLC   X99ERROR,=X'046C'  WAS IT 'NOT DEF TO JES2'\n         BE    BADDEST            YES TELL USER\n*\n         MVC   QDTLINE(L'MSGERR),MSGERR\n         CVD   R15,SCRATCH\n         MVC   M2RC,=X'40202020'\n         ED    M2RC,SCRATCH+6\n*\n         UNPK  M2ERC(5),X99ERROR(3)  CONVT DYNAM ALLOC ERR CODE\n         NC    M2ERC,HEXMASK\n         TR    M2ERC,HEXTAB\n         MVI   M2ERC+4,C' '\n*\n         UNPK  M2INFO(5),X99INFO(3)  CONVT DYNAM ALLOC ERR INFO\n         NC    M2INFO,HEXMASK\n         TR    M2INFO,HEXTAB\n         MVI   M2INFO+4,C' '\n         B     GOTMSG\n*\nBADDEST  MVC   QDTLINE(L'MSGDEST),MSGDEST\n         MVC   MDEST,DEST\n         CLI   DEST,C' '             ANY DEST\n         BNE   GOTMSG                YES.. CONTINUE\n         MVC   MDEST(8),=CL8'LOCAL'\n         B     GOTMSG\n*\nGOTMSG   EQU   *\n         LA    R1,0                  SET A ZERO\n         L     R2,4(R13)             RETURN CODE\n         ST    R1,16(R2)\n         MVC   QDREPLY,QBLANK        KISS OFF OUR REPLY\n         XC    QDRLNG,QDRLNG         AND SAY NOBODY HOME (SNEAKY)\n         QSTOP\nHEXTAB   DC    C'0123456789ABCDEF'\nHEXMASK  DC    X'0F0F0F0F0F0F0F0F'\nMSGDEST  DC    C'  DEST XXXXXXXX NOT DEFINED TO JES2; SPIN BYPASSED'\nMSGERR   DC    C'CANT ALLOC SYSOUT FOR SPIN ; DARC= XXXX INFO= XXXX R15X\n               = XXXX '\nMDEST    EQU   QDTLINE+7,8\nM2ERC    EQU   QDTLINE+35,4\nM2INFO   EQU   QDTLINE+46,4\nM2RC     EQU   QDTLINE+56,4\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\nTILT1    QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'\nNOTNUM   QTILT '*** INVALID RANGE FIELD SPECIFIED ***'\nBADCLS   QTILT '*** INVALID SYSOUT CLASS SPECIFIED ***'\n         LTORG\nMVCREC   MVC   BUFFER(1),3(R4)\nPACK     PACK  SCRATCH,0(1,R14)    PACK OPERAND                   WGH\nMVZ      MVZ   QFZONES(1),0(R14)   MOVE ZONES FROM PARM FIELD     WGH\n*\n***********************************************************************\n*                                                                     *\n*   DYNAMIC ALLOCATION CONTROL BLOCKS                                 *\n*                                                                     *\n***********************************************************************\n         DS    0F\nS99RBPTR DC    X'80',AL3(S99RB)\n*\nS99RB    DS    0F\nS99RBLN  DC    AL1(20)             LENGTH = 20 BYTES\nS99VERB  DC    X'01'               VERB CDE=01 (DSN ALLOC)\nS99FLAG1 DC    X'1000'             DONT USE EXISTING ALLOC\nS99ERROR DC    AL2(0)              ERROR CODE\nS99INFO  DC    AL2(0)              INFO CODE\nS99TXTPP DC    A(S99TUPL)          TEXT UNIT PTR PTR\nS99RSVD1 DC    A(0)                RESERVED\nS99FLAG2 DC    A(0)                FLAGS 2\nS99TUPL  DC    A(S99TUKY1)         TEXT UNIT PTR\nS99EPARM DC    X'80',AL3(S99TUKY2) LAST PARM IF NO DEST\nS99UPLL  DC    X'80',AL3(S99TUKY3) LAST PARM IF NO WRTRID GIVEN\nS99UPLLW DC    X'80',AL3(S99TUKY4) LAST PARM IF WRTRID GIVEN\nS99TUNIT DS    0F\n*\nS99TUKY1 DC    X'0001',X'0001',X'0008',C'HASPSAVE'\n*\nS99TUKY2 DC    X'0018',X'0001',X'0001'       SYSOUT\nS99SYSOC DC    C'A'\n*\nS99TUKY3 DC    X'0058',X'0001'        OPTIONAL DEST=RMTXX OR NODE\nS99DESTL DC    X'0000'                LENGTH OF DEST PARM\nS99DEST  DC    CL8'LOCAL'             DEST PARM\nS99TUKY4 DC    X'0063',X'0001'        OPTIONAL WRTRID=USER OR WRTR\nS99WRTRL DC    X'0000'                LENGTH OF WRTR LENGTH\nS99WRTR  DC    CL8' '                 WRTR PARM\nS99LENG  EQU   *-S99RBPTR\n*\n*        DYNALLOC REQUEST CONTROL TO FREE DDNAME\n*\n         DS    0F\nFREEPTR  DC    X'80',AL3(FREERB)\n*\nFREERB   DC    FL1'20'                LENGTH OF RB 20 BYTES\n         DC    XL1'02'                VERB CODE 02 FREE BY DDN\n         DC    AL2(0)                 FLAGS1\nFREERC   DC    XL2'0000'              ERROR CODE\nFREEINFO DC    XL2'0000'              INFO CODE\nFREETPTR DC    AL4(FREETXPT)          TEXT UNIT PTR PTR\n         DC    XL4'00'                RESERVED\n         DC    XL4'00'                FLAGS2\n*\nFREETXPT DC    AL4(FREETU1)           ADDR OF DSN TEXT UNIT\n         DC    X'80',AL3(FREETU2)     ADDR OF UNALLOC TEXT\n*\nFREETU1  DC    X'0001',X'0001',FL2'8',C'HASPSAVE' DDNAME\nFREETU2  DC    X'0007',X'0000'        UNALLOC EVEN IF PERM\nFREELEN  EQU   *-FREEPTR\n*\n***********************************************************************\n*\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $JQE                                                        CL\n         $HASPEQU\n         IFGRPL  ,                                                WGH42\n         $BUFFER ,                                                WGH42\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\nWORK     DSECT\n         DS    CL80\nBUFFER   DS    CL256\nSCRATCH  DS    D                   DOUBLEWORD                     WGH\nFRSTLINE DS    F                   FIRST LINE TO SAVE             WGH\nLINECNT  DS    F                   CURRENT LINE #                 WGH\nLASTLINE DS    F                   LAST LINE TO SAVE              WGH\nDESTLEN  DS    H                   DESTINATION LENGTH             WGH\nDEST     DS    CL8                 DESTINATION                    WGH\nWRTRLEN  DS    H                   DESTINATION LENGTH             WGH\nWRTRID   DS    CL8                 DESTINATION                    WGH\nCLASS    DS    C                   SYSOUT CLASS                   WGH\n****************************************************************  WGH\n         DS    0F\nDYNALLOC DS    (S99LENG)XL1\n         ORG   DYNALLOC\n*\nX99RBPTR DC    X'80',AL3(X99RB)\n*\nX99RB    DS    0F\nX99RBLN  DC    AL1(20)             LENGTH = 20 BYTES\nX99VERB  DC    X'01'               VERB CDE=01 (DSN ALLOC)\nX99FLAG1 DC    X'1000'             DONT USE EXISTING ALLOC\nX99ERROR DC    AL2(0)              ERROR CODE\nX99INFO  DC    AL2(0)              INFO CODE\nX99TXTPP DC    A(X99TUPL)          TEXT UNIT PTR PTR\nX99RSVD1 DC    A(0)                RESERVED\nX99FLAG2 DC    A(0)                FLAGS 2\nX99TUPL  DC    A(X99TUKY1)         TEXT UNIT PTR\nX99EPARM DC    X'80',AL3(X99TUKY2) LAST PARM IF NO DEST\nX99UPLL  DC    X'80',AL3(X99TUKY3) LAST PARM IF NO WRTRID\nX99UPLLW DC    X'80',AL3(X99TUKY4) LAST PARM IF WRTRID GIVEN\nX99TUNIT DS    0F\n*\nX99TUKY1 DC    X'0001',X'0001',X'0008',C'HASPSAVE'\n*\nX99TUKY2 DC    X'0018',X'0001',X'0001'       SYSOUT\nX99SYSOC DC    C'A'\n*\nX99TUKY3 DC    X'0058',X'0001'        OPTIONAL DEST=RMTXX OR NODE\nX99DESTL DC    X'0000'                LENGTH OF DEST PARM\nX99DEST  DC    CL8'LOCAL'             DEST PARM\n*\nX99TUKY4 DC    X'0063',X'0001'        OPTIONAL WRTRID=USER OR WRTR\nX99WRTRL DC    X'0000'                LENGTH OF WRTRID PARM\nX99WRTR  DC    CL8' '                 WRTRID PARM\n*\n         ORG   DYNALLOC\n         DS    0F\nYREEPTR  DC    X'80',AL3(YREERB)\n*\nYREERB   DC    FL1'20'                LENGTH OF RB 20 BYTES\n         DC    XL1'02'                VERB CODE 02 FREE BY DDN\n         DC    AL2(0)                 FLAGS1\nYREERC   DC    XL2'0000'              ERROR CODE\nYREEINFO DC    XL2'0000'              INFO CODE\nYREETPTR DC    AL4(YREETXPT)          TEXT UNIT PTR PTR\n         DC    XL4'00'                RESERVED\n         DC    XL4'00'                FLAGS2\n*\nYREETXPT DC    AL4(YREETU1)           ADDR OF DSN TEXT UNIT\n         DC    X'80',AL3(YREETU2)     ADDR OF UNALLOC TEXT\n*\nYREETU1  DC    X'0001',X'0001',FL2'8',C'HASPSAVE' DDNAME\nYREETU2  DC    X'0007',X'0000'        UNALLOC EVEN IF PERM\n         ORG   ,\n****************************************************************  WGH\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CSPINO": {"ttr": 2824, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CSPIN    TITLE 'QUEUE COMMAND - SPIN A COPY OF CURRENT DATASET'   ONL01\nCSPIN    QSTART ,                  START CSPIN CSECT ASSEMBLY     ONL01\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n         USING WORK,R13       LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   ALLOCATE OUTPUT DATASET                                           *\n*                                                                     *\n***********************************************************************\n         CLC   QPDSID,=X'FFFF'  IS THERE A VALID DATASET?           SBG\n         BE    TILT1          NO. TELL THE USER.\n         MVC   DA30DDN,=CL8'HASPSAVE'  SET DDNAME\n         MVI   DA30OCLS,C'A'  SYSOUT=A\nDSALLOC  MVI   DAIRFLAG,X'30' INDICATE ALLOC FUNCTION\n         L     R15,=V(ALLOCATE) ADDR OF DAIR MODULE\n         BALR  R14,R15        GO TO IT\n         MVC   QCOUT+36(1),QCRECFM MOVE IN RECORD FORMAT\n         NI    QCOUT+36,X'06' TURN OFF EVERTHING BUT CCTL\n         OI    QCOUT+36,X'90' SPECIFY FIXED BLOCKED RECORDS\n         LH    R1,QCLRECL     RECORD LENGTH\n         LTR   R1,R1          IS THE LRECL ZERO?\n         BNZ   RECOK          NO. SKIP.\n         LA    R1,133         YES. USE LRECL 133.\nRECOK    STH   R1,QCOUT+82    STORE LRECL\n         STH   R1,QCOUT+62    AND BLKSIZE\n         OPEN  MF=(E,QCOPEN)\n***********************************************************************\n*                                                                     *\n*   REPOSITION DATASET TO TOP                                         *\n*                                                                     *\n***********************************************************************\n         L     R4,QCSTART     TOP OF DATASET POINTER\n         L     R4,0(R4)       DISK ADDR TOP OF DATASET\n         L     R5,QCBLKA      IOAREA ADDRESS\n         B     FIRST          GO DO IT\n***********************************************************************\n*                                                                     *\n*   PROCESS DATASET                                                   *\n*                                                                     *\n***********************************************************************\nNEXTBLK  L     R4,0(R5)       DISK ADDR OF NEXT BLOCK\nFIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?\n         BZ    END            YES. END OF DATASET.\n         BAL   R8,READ        READ A BLOCK\n         CLC   QPJOBID(6),4(R5) DOES THE JOBID MATCH?\n         BE    IDISOK              BR IF SO                          CL\n         L     R4,QCJQEA           ADDR OF JQE                       CL\n         TM    JQEFLAG3-JQE(R4),JQE3SYSD ALL THRU IF THIS            CL\n         BNO   END                    IS NOT SYSTEM JQE              CL\n         CLC   QPJOBID,4(R5)           ELSE COMPARE JOB KEY ONLY     CL\n         BNE   END            NO. END OF DATASET.\nIDISOK   LA    R4,10(R5)      ADDR OF FIRST RECORD IN BLOCK          CL\n***********************************************************************\n*                                                                     *\n*   PROCESS RECORDS                                                   *\n*                                                                     *\n***********************************************************************\nNEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?\n         BE    NEXTBLK        YES. END OF BLOCK.\n         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?\n         BO    SPAN           YES. SKIP IT.\n         SR    R6,R6          ZERO OUT REG\n         IC    R6,0(R4)       INSERT LENGTH\n         TM    1(R4),X'80'    IS CCTL SPECIFIED?\n         BZ    NOCCTL         NO. SKIP.\n         LA    R6,1(R6)       INCREMENT LENGTH FOR CCTL\nNOCCTL   TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?\n         BO    SKIPREC        YES. SKIP IT.\n         MVI   BUFFER,C' '    BLANK FIRST BYTE OF BUFFER\n         MVC   BUFFER+1(255),BUFFER BLANK THE BUFFER\n         LR    R7,R6          DO NOT DESTROY R6\n         SH    R7,=H'1'       IS LENGTH ZERO?\n         BM    SKIPREC        YES. SKIP RECORD.\n         EX    R7,MVCREC      MOVE RECORD TO BUFFER\n         PUT   QCOUT,BUFFER\nSKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\nSPAN     LH    R6,2(R4)       SEGMENT LENGTH\n         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?\n         BO    SPANFRST       YES. USE LARGER HEADER SIZE.\n         LA    R4,4(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\nSPANFRST LA    R4,6(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\n***********************************************************************\n*                                                                     *\n*   CLOSE UP SHOP AND GO HOME                                         *\n*                                                                     *\n***********************************************************************\nEND      CLOSE MF=(E,QCOPEN)\n         MVC   DA18SCLS,DA30OCLS  COPY SYSOUT CLASS FOR FREE\n         MVI   DAIRFLAG,X'18' INDICATE FREE FUNCTION\n         L     R15,=V(ALLOCATE) ADDR OF DAIR MODULE\n         BALR  R14,R15        GO TO IT\n         L     R15,=V(LISTDS) GO BACK TO LISTDS\n         BALR  R14,R15        GO TO IT\n         QSTOP\n***********************************************************************\n*                                                                     *\n*   READ A BLOCK FROM HASPACE                                         *\n*                                                                     *\n***********************************************************************\nREAD     ST    R4,QCTRAK      STORE DISK ADDR\n         LR    R1,R5          IOAREA ADDRESS\n         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\n         BR    R8             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\nTILT1    QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'\n         LTORG\nMVCREC   MVC   BUFFER(1),3(R4)\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $JQE                                                        CL\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\nWORK     DSECT\n         DS    CL80\nBUFFER   DS    CL256\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CTGPS": {"ttr": 2827, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x942/\\x00\\x96\\x05\\x7f\\x19\\x13\\x00\\xf7\\x00\\xf6\\x00\\x03\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-11-18T00:00:00", "modifydate": "1996-02-26T19:13:00", "lines": 247, "newlines": 246, "modlines": 3, "user": "SBGCSC"}, "text": "CTGPS    TITLE 'QUEUE COMMAND - LIST JOB WITH MOST TRACK GROUPS'  ONL01\nCTGPS    QSTART ,                  START CTGPS CSECT ASSEMBLY     ONL01\n         USING QCKPT,R10           BASE REG FOR CHECKPOINT WORK AREA\n         L     R10,QVCKPT          LOAD BASE REG\n         USING QDISPLAY,R9\n         L     R9,QVDSPL           ADDRESSING FOR DISPLAY AREA\n         USING WORK,R13            LOCAL WORK AREA\n*        READ IN THE CHECKPOINT\n         L     R15,=V(CKPT)        ADDR OF CKPT ROUTINE\n         BALR  R14,R15             GO TO IT\n*\n         XC    JQEAREA(L'JQEAREA),JQEAREA CLEAR JQE AREA\n         MVC   TGPSAREA,TGPSFMT    PRIME TRACK GROUPS ACCUMULATORS\n         XC    TOTTGPS,TOTTGPS     CLEAR ACCUMULATOR\n         XC    TOTJOBS,TOTJOBS     CLEAR ACCUMULATOR\n         L     R1,QCJQTL           POINT TO HCT SAVEAREA\n         USING $SAVEBEG,R1         SET ADDRESSING\n         LA    R3,$JQHEADS-(JQENEXT-JQE) POINT TO FIRST QHEAD\n         LA    R4,$JQHEADL         SIZE OF EACH QHEAD\n         LA    R5,$JQHEADS-(JQENEXT-JQE)+($JQTYPES*$JQHEADL)-1\n         DROP  R1                  DROP HCT ADDRESSING\nNXTQHD   LR    R6,R3               POINT TO NEXT QHEAD\n         USING JQE,R6              ADDRESSING FOR JQE\nJQELOOP  L     R6,JQENEXT          GET CHAIN FIELD\n         N     R6,=X'00FFFFFF'     TEST FOR END\n         BZ    STEPQHD             BRANCH IF END OF CHAIN\n         LR    R2,R6               SAVE OFFSET FOR TEST\n         A     R6,QCJQTA           CALCULATE FULL ADDRESS\n         LH    R2,JQETGNUM         NUMBER OF TRACK GROUPS            CL\n         TM    JQEFLAG5,JQE5XUSD   BR IF NOT\n         BNO   TGTEST               USING JQE EXTENSION\n         AL    R2,QCJQEXA          COMPUTE ADDR OF EXTENSION\n         LH    R2,$JEXTTGN(,R2)    TRACK GROUPS IN EXTENSION\nTGTEST   LTR   R2,R2               TEST FOR TGPS\n         BNP   JQELOOP             NONE, SKIP THIS JQE\n         LR    R14,R2              NUMBER OF TRACK GROUPS\n         A     R14,TOTTGPS         ADD TO ACCUMULATOR\n         ST    R14,TOTTGPS         AND RESAVE\n         LA    R14,1               BUMP TOTAL\n         A     R14,TOTJOBS           NUMBER OF\n         ST    R14,TOTJOBS             JOBS\n         SPACE 1\n         LA    R14,TGPSAREA+L'TGPSAREA-8 POINT TO LAST ENTRY\n         LA    R15,(L'TGPSAREA/8)  NUMBER OF ENTRIES\n         LA    R1,8                SIZE OF AN ENTRY\nTGTST01  C     R2,0(R14)           COMPARE TRACK GROUPS WITH SLOT SIZE\n         BNH   TGTST05             YES, INSERT IT HERE\n         SR    R14,R1              BACK UP TO PREV ENTRY\n         BCT   R15,TGTST01         LOOP THROUGH ELEMENTS\n         B     TGTST99             NONE, SKIP INCREMENT\n         SPACE 1\nTGTST05  LA    R15,1               SET FOR INCREMENT\n         A     R15,4(,R14)         INCREMENT COUNT\n         ST    R15,4(,R14)         AND SAVE NEW COUNT\n         SPACE 1\nTGTST99  DS    0H\n         LA    R14,JQEAREA+L'JQEAREA-8 POINT TO LAST ENTRY\n         LA    R15,(L'JQEAREA/8)   NUMBER OF ENTRIES\n         LA    R1,8                SIZE OF AN ENTRY\nTGTST1   C     R2,4(R14)           SEE IF NEW IS BIGGER\n         BNL   TGTINS              YES, INSERT IT HERE\n         SR    R14,R1              BACK UP TO PREV ENTRY\n         BCT   R15,TGTST1          LOOP THROUGH ELEMENTS\n         B     JQELOOP             GO TRY NEXT JQE\n         SPACE 1\nTGTINS   BCTR  R15,0               DROP BY ONE\n         SLL   R15,3               TIMES 8 (LENGTH OF ENTRY)\n         BCTR  R15,0               DROP FOR EXECUTE\n         LTR   R15,R15             TEST FOR VALID\n         BNP   TGTNOMV             NO, JUST DO THE INSERT\n         EX    R15,TGTMVC          MOVE ENTRIES DOWN\nTGTNOMV  ST    R6,0(,R14)          SAVE JQE ADDRESS\n         ST    R2,4(,R14)          SAVE # OF TRACK GROUPS\n         B     JQELOOP             TRY NEXT JQE\n         SPACE 1\nTGTMVC   MVC   JQEAREA(*-*),JQEAREA+8    SLIDE ENTRIES DOWN\n         SPACE 1\nSTEPQHD  BXLE  R3,R4,NXTQHD        STEP TO NEXT QHEAD\n         DROP  R6                  DROP OLD JQE REG\n         SPACE 1\n         LA    R2,JQEAREA+L'JQEAREA-8 POINT TO LAST ENTRY\n         LA    R3,(L'JQEAREA/8)    NUMBER OF ENTRIES\n         LA    R4,8                SIZE OF EACH ENTRY\n         MVC   QDHLINE,HEADING     SET HEADER LINE\n         SPACE 1\nPRNTJQE  L     R5,0(,R2)           JQE ADDRESS\n         USING JQE,R5              ADDRESSING\n         MVC   QDMSG,QBLANK        BLANK THE TEXT AREA\n         LTR   R5,R5               ANY ADDRESS?                   UF046\n         BZ    PRNTJQEN            NO, SKIP TRASH                 UF046\n         LH    R0,JQEJOBNO         GET JOB NUMBER\n         CVD   R0,DWORD            TO DECIMAL\n         MVC   MSGJOBID,ED         SET EDIT PATTERN\n         ED    MSGJOBID,DWORD+4    SET JOB ID IN MESSAGE TEXT\n         MVC   MSGJNAME,JQEJNAME   MOVE JOB NAME TO MESSAGE\n         SR    R1,R1\n         ICM   R1,B'0001',JQEBUSY  SYSTEM BUSY\n         BZ    PRNTJQEN             NOT BUSY                      CL009\n         SLL   R1,3                COMPUTE OFFSET INTO QSE TABLE  CL009\n         LA    R1,QSYSID(R1)       ADDR OF SYSTEM BUSY            CL009\n         MVC   MSGACT,0(R1)        INSERT INTO MESSAGE            CL009\n         SPACE 1                                                  CL009\nPRNTJQEN DS    0H                                                 UF046\n         L     R0,4(,R2)           NUMBER OF TRACK GROUPS\n         LR    R1,R0               SAVE FOR DIVIDE\n         CVD   R0,DWORD            TO DECIMAL\n         MVC   MSG#TGPS,ED         SET EDIT PATTERN\n         ED    MSG#TGPS,DWORD+4    SET IN MESSAGE\n         L     R15,QCTNUMTG        NUMBER OF ACTIVE TRACK GROUPS  CL001\n         SR    R0,R0               CLEAR FOR DIVIDE\n         MH    R1,=H'1000'\n         DR    R0,R15              DIVIDE TO GET PERCENT OF TOTAL\n         CVD   R1,DWORD            TO DECIMAL\n         MVC   MSGTGPCT,EDPCT      SET EDIT MASK\n         ED    MSGTGPCT,DWORD+6    SET PCT TO MESSAGE\n         L     R0,TGPSAREA-JQEAREA(,R2) TRACK GROUP ACCUMULATOR\n         CVD   R0,DWORD            TO DECIMAL\n         MVC   MSG$TGPS,ED         SET EDIT PATTERN\n         ED    MSG$TGPS,DWORD+4    SET IN MESSAGE TEXT\n         C     R0,TGPSFMT          IS THIS THE MAX VALUE?\n         BNE   *+4+6               NO SKIP NEXT\n         MVC   MSG$TGPS,=C'     MAX'  SET MORE REASONABLE VALUE\n         L     R0,TGPSAREA-JQEAREA+4(,R2) NUMBER OF JOBS\n         CVD   R0,DWORD            TO DECIMAL\n         MVC   MSG$JOBS,ED         SET EDIT PATTERN\n         ED    MSG$JOBS,DWORD+4    SET IN MESSAGE TEXT\n         LR    R1,R0               SAVE FOR DIVIDE\n         SR    R0,R0               CLEAR FOR DIVIDE\n         MH    R1,=H'1000'\n         L     R15,TOTJOBS         GET TOTAL NUMBER OF JOBS\n         DR    R0,R15              DIVIDE TO GET PERCENT OF TOTAL\n         CVD   R1,DWORD            TO DECIMAL\n         MVC   MSG$PCT,EDPCT       SET EDIT MASK\n         ED    MSG$PCT,DWORD+6     SET PCT TO MESSAGE\n         MVC   QDMLNG,=H'80'       SET MESSAGE LENGTH\n         LA    R0,QDMSG            POINT TO MESSAGE AREA\n         ST    R0,QDMSGA           SET IN AREA\n         L     R15,=V(DISPLAY)     POINT TO OUTPUT ROUTINE\n         BALR  R14,R15             LINK TO IT\n         SPACE 1\n         SR    R2,R4               MOVE TO NEXT ENTRY\n         BCT   R3,PRNTJQE          PRINT ALL ENTRIES\n         SPACE 1\n         MVC   QDMSG,QBLANK        BLANK THE TEXT AREA\n         MVC   MSGJNAME,=CL8'*TOTAL*'\n         L     R0,TOTTGPS          TOTAL NUMBER OF TRACK GROUPS\n         CVD   R0,DWORD            TO DECIMAL\n         MVC   MSG#TGPS,ED         SET EDIT PATTERN\n         ED    MSG#TGPS,DWORD+4    SET IN MESSAGE\n         L     R0,TOTJOBS          TOTAL NUMBER OF JOBS\n         CVD   R0,DWORD            TO DECIMAL\n         MVC   MSG$JOBS,ED         SET EDIT PATTERN\n         ED    MSG$JOBS,DWORD+4    SET IN MESSAGE\n         MVC   QDMLNG,=H'80'       SET MESSAGE LENGTH\n         LA    R0,QDMSG            POINT TO MESSAGE AREA\n         ST    R0,QDMSGA           SET IN AREA\n         L     R15,=V(DISPLAY)     POINT TO OUTPUT ROUTINE\n         BALR  R14,R15             LINK TO IT\n         SPACE 1\nSTOP     QSTOP\n         SPACE 1\nED       DC    X'4020202020202120' EDIT PATTERN\nEDPCT    DC    X'4020214B21'       EDIT PATTERN FOR % SPOOL\n*                   123456789 123456789 123456789 123456789 123456789 1\n*              23456789 123456789 123456789.\n*\n*                   12345678 12345678 2345678 2345\n*                       2345678 2345678 2345'\n*\nHEADING  DC    CL80'   JOBID JOBNAME     TGPS  PCT                     +\n                           TGPS    JOBS  PCT'\n         SPACE 1\n         LTORG ,\n         SPACE 1\nTGPSFMT  DC    X'7FFFFFFF',F'0'\n         DC    F'150',F'0'\n         DC    F'100',F'0'\n         DC    F'080',F'0'\n         DC    F'060',F'0'\n         DC    F'050',F'0'\n         DC    F'040',F'0'\n         DC    F'030',F'0'\n         DC    F'020',F'0'\n         DC    F'015',F'0'\n         DC    F'010',F'0'\n         DC    F'009',F'0'\n         DC    F'008',F'0'\n         DC    F'007',F'0'\n         DC    F'006',F'0'\n         DC    F'005',F'0'\n         DC    F'004',F'0'\n         DC    F'003',F'0'\n         DC    F'002',F'0'\n         DC    F'001',F'0'\n         SPACE 1\nWORK     DSECT\n         DS    18F                 SAVE AREA\n         DS    18F                 SCRATCH SPACE\nDWORD    DS    D                   SCRATCH DOUBLE WORD\nTOTTGPS  DS    F                   TOTAL TRACK GROUPS ALLOCATED\nTOTJOBS  DS    F                   TOTAL NUMBER OF JOBS PROCESSED\nJQEAREA  DS    XL(20*8)            20 ENTRIES (JQEADDR, #TGPS)\nTGPSAREA DS    XL(20*8)            20 ENTRIES (# TGPS, # JOBS)\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG               BACK UP TO MESSAGE AREA\nMSGJOBID DS    CL8,X               SPACE FOR JOBID\nMSGJNAME DS    CL8                 SPACE FOR JOBNAME\nMSG#TGPS DS    CL(L'ED)            SPACE FOR NUMBER OF TRACK GROUPS\nMSGTGPCT DS    CL(L'EDPCT)         SPACE FOR % OF TOTAL TRACK GROUPS\n         DS    C                   FILLER                         CL009\nMSGACT   DS    CL4                 ACTIVE SYSTEM NAME             CL009\n         DS    CL24                FILLER                         CL009\nMSG$TGPS DS    CL(L'ED)            SPACE FOR NUMBER OF TRACK GROUPS\nMSG$JOBS DS    CL(L'ED)            SPACE FOR NUMBER OF JOBS W/ TGPS\nMSG$PCT  DS    CL(L'EDPCT)         SPACE FOR % OF JOBS\nCTGPS    CSECT\n         DROP\n         COPY  $HASPGBL\n&VERSION SETC  'SP 4.2.0'\n&MACSPLV SETC  '2'\n&SYSSPLV SETC  '2'\n&FMID    SETC  'HJE4420'\n        $HASPEQU\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $BUFFER\n        $LMT    ,                                                 WGH42\n        $XECB   ,                                                 WGH42\nPDS2BLEN EQU    1                                                 WGH42\n         IFGRPL\n        $PCE\n        $PSV\n        $JQE\n        $JCT\n        $CAT\n        $MIT   ,                                                  ONL11\n        $HCT\n        $QSE\n        $TAB\n        $PDDB\n        $IOT\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         DROP\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CTSO": {"ttr": 3077, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CTSO     TITLE 'ISSUE TSO COMMANDS WHILE IN QUEUE COMMAND'        ONL01\nCTSO     QSTART ,                  START CTSO CSECT ASSEMBLY      ONL01\n         USING WORK,R13       BASE FOR WORK AREA\n         L     R10,QVCKPT     BASE FOR CKTP AREA\n         USING QCKPT,R10      ADDRESSING FOR AREA\n         L     R9,QVDSPL      BASE FOR DISPLAY AREA\n         USING QDISPLAY,R9    ADDRESSING FOR AREA\n         LA    R8,WCPPL       BASE FOR CPPL AREA\n         USING CPPL,R8        ADDRESSING FOR AREA\n         OC    QLNG1,QLNG1    TEST LENGTH OF COMMAND\n         BZ    NOCMD          NONE, ABORT\n         MVC   QDHLINE,QBLANK BLANK HEADING LINE\n         TPUT  CLEAR,L'CLEAR,FULLSCR,MF=(E,QTPUT)  CLEAR THE SCREEN\n*        STLINENO LINE=1,MODE=OFF  TURN OFF FULL SCREEN MODE\n         MVC   WMODEL(WMODELEN),MODEL  COPY MODEL AREA TO DSECT AREA\n         MVC   WBLDLFF,=AL2(1)  1 ENTRY IN LIST\n         MVC   WBLDLLL,=AL2(12) 12 BYTES TO BE RETURNED\n         L     R1,DAPLECT     POINT TO ECT\n         USING ECT,R1         SET TEMP ADDRESSING\n         MVC   QDWORD,ECTPCMD SAVE PRIMARY COMMAND NAME\n         MVC   QDWORK,ECTSCMD  AND SECONDARY COMMAND NAME\n         DROP  R1             DROP TEMP ADDRESSING\n         SPACE 1\n         MVC   CPPLUPT,DAPLUPT   COPY UPT POINTER\n         MVC   CPPLPSCB,DAPLPSCB COPY PSCB POINTER\n         MVC   CPPLECT,DAPLECT   COPY ECT POINTER\n         SPACE 1\n         LA    R15,QDREPLY    POINT TO COMMAND LINE\n         AH    R15,QOFF1      POINT TO 1ST PARM (AFTER \"TSO\")\n         SH    R15,=H'4'      BACK UP FOR BUFFER HEADER\n         USING CMDBUF,R15     TEMP ADDRESSING FOR BUFFER\n         LH    R14,QDRLNG     LENGTH OF REPLY\n         SH    R14,QOFF1      - OFFSET TO OPERAND = TEXT LENGTH\n         LA    R14,4(,R14)    + HEADER\n         STH   R14,CMDLEN     SAVE AS LENGTH IN BUFFER\nSCAN     ST    R15,CPPLCBUF   SET BUFFER CB POINTER\n         XC    CMDOFF,CMDOFF  CLEAR OFFSET TO SECOND OPERAND\n         DROP  R15            DROP TEMP ADDRESSING\n         LA    R1,WCSPL       POINT TO IKJSCAN PARM LIST\n         USING CSPL,R1        SET TEMP ADDRESSING\n         L     R2,DAPLUPT     POINT TO UPT\n         ST    R2,CSPLUPT\n         L     R2,DAPLECT     POINT TO ECT\n         ST    R2,CSPLECT\n         LA    R2,WTCBECB     POINT TO ECB\n         MVI   0(R2),0          CLEAR ECB\n         ST    R2,CSPLECB\n         LA    R2,WTCBADDR    WORD FOR FLAGS\n         MVI   0(R2),0          CLEAR FLAGS\n         ST    R2,CSPLFLG\n         LA    R2,WCSOA       POINT TO OUTPUT AREA\n         ST    R2,CSPLOA\n         ST    R15,CSPLCBUF   COMMAND BUFFER ADDRESS TO CSPL\n         DROP  R1             DROP TEMP ADDRESSING\n         CALLTSSR EP=IKJSCAN  SCAN INPUT BUFFER\n         LA    R1,WCSOA       POINT TO OUTPUT AREA\n         USING CSOA,R1        SET TEMP ADDRESSING\n         L     R14,CSOACNM    POINTER TO COMMAND NAME\n         ICM   R15,3,CSOALNM  LENGTH OF NAME\n         BZ    NOCMD2         NONE, SKIP REST\n         BCTR  R15,0          DROP FOR EXECUTE\n         DROP  R1             DROP TEMP ADDRESSING\n         MVC   WBLDLNAM,QBLANK FILL WITH BLANKS\n         EX    R15,MVCCMD      MOVE COMMAND TO WBLDLNAM\n         CLC   =C'EX',QSUBNAME   IMPLICIT EXEC OF CLIST?\n         BNE   NOTEXEC           NO, SKIP THIS\nSETEXEC  NI    QSUBNAME,255-X'40'  DROP TO LOWER CASE\n         MVC   WBLDLNAM,=CL8'EXEC' SET MODULE NAME TO ATTACH\n         L     R1,CPPLCBUF       POINT TO BUFFER\n         USING CMDBUF,R1         TEMP ADDRESSING\n         XC    CMDOFF,CMDOFF     CLEAR OFFSET FOR EXEC\n         B     OKATTACH       AND GO DO IT\n         DROP  R1                DROP TEMP ADDRESSING\nNOTEXEC  DS    0H\n         BLDL  0,WBLDLPRM     CHECK FOR MODULE PRESENT\n         LTR   R15,R15        CHECK RETURN CODE\n         BNZ   SETEXEC        NONE, MUST BE CLIST\n         SPACE 1\nOKATTACH L     R1,DAPLECT     POINT TO ECT\n         USING ECT,R1         SET TEMP ADDRESSING\n         MVC   ECTPCMD,WBLDLNAM FAKE PRIMARY COMMAND NAME\n         MVC   ECTSCMD,QBLANK AND SECONDARY COMMAND NAME\n         DROP  R1             DROP TEMP ADDRESSING\n         SPACE 1\n         MVI   WTCBECB,0      CLEAR ECB\n         LA    R1,WCPPL       CPPL PTR FOR COMMAND\nATTACH   DS    0H\n         ATTACH EPLOC=WBLDLNAM,ECB=WTCBECB,                            +\n               MF=(1,(1)),SF=(E,WATTL)\n         ST    R1,WTCBADDR    SAVE TCB ADDR\nWAIT     DS    0H\n         WAIT  ECB=WTCBECB    WAIT\nDETACH   DS    0H\n         DETACH WTCBADDR\n         SPACE 1\nNOCMD2   DS    0H\n         ICM   R1,15,WGTPB+4  ADDRESS OF GETLINE BUFFER\n         BZ    NOFREE         NONO, SKIP FREEMAIN\n         LH    R0,0(R1)       LENGTH OF BUFFER\n         ICM   R0,B'1000',=X'01'  SUBPOOL 1\n         FREEMAIN R,LV=(0),A=(1)  FREE THE BUFFER\n         SPACE 1\nNOFREE   L     R1,DAPLECT     POINT TO ECT\n         USING ECT,R1         TEMP ADDRESSING\n         L     R1,ECTIOWA     --> I/O WORK AREA\n         DROP  R1             DROP TEMP ADDRESSING\n         L     R1,0(R1)       --> TO ELEMENT ON STACK\n         TM    0(R1),X'40'    FROM STORAGE (CLIST)?\n         BZ    DONE           NO, DONE WITH PROCESSING\n         LA    R1,WIOPL       ADDRESS OF IO PARM LIST\n         L     R2,CPPLUPT     ADDRESS OF UPT\n         L     R3,CPPLECT     ADDRESS OF ECT\n         LA    R4,WTCBECB     ADDRESS OF ECB\n         MVI   WTCBECB,0      CLEAR ECB\n         GETLINE PARM=WGTPB,UPT=(R2),ECT=(R3),ECB=(R4),MF=(E,(1))\n         CH    R15,=H'16'     END OF INPUT?\n         BE    DONE           YES, CLEAN UP AND RETURN\n         LA    R1,WGTPB       POINT TO GETLINE PARM LIST\n         USING GTPB,R1        TEMP ADDRESSING\n         L     R15,GTPBIBUF   POINT TO INPUT BUFFER\n         DROP  R1             DROP TEMP ADDRESSING\n         B     SCAN           AND GO TO SCAN PROCESSING\n         SPACE 1\nDONE     L     R1,DAPLECT     POINT TO ECT\n         USING ECT,R1         SET TEMP ADDRESSING\n         MVC   ECTPCMD,QDWORD RESTORE PRIMARY COMMAND NAME\n         MVC   ECTSCMD,QDWORK  AND SECONDARY COMMAND NAME\n         DROP  R1             DROP TEMP ADDRESSING\nTPUT     DS    0H\n*        TPUT  DONEMSG,L'DONEMSG  ASK FOR ENTER WHEN DONE\nTGET     DS    0H\n*        TGET  QDWORD,L'QDWORD,EDIT,MF=(E,QTGET)  READ RESPONCE\n*        STFSMODE ON          RESTORE FULL SCREEN MODE\nQSTOP    DS    0H\n         QSTOP\n         SPACE 1\nNOCMD    QTILT '*** NO COMMAND SPECIFIED ***'\n         SPACE 1\nMVCCMD   MVC   WBLDLNAM(*-*),0(R14) MOVE COMMAND TO WBLDLNAM\n         SPACE 1\nDONEMSG  DC    C'*** PRESS ENTER TO RETURN TO QUEUE COMMAND ***'\nCLEAR1   EQU   *\n*        DC    X'27F5C1\n         DC    X'C1'               FOR SPF/TCAM                   UF041\n         DC    X'115D7E'\n         DC    X'114040'\n         DC    X'3C404000'\n         DC    X'1DC8'\n         DC    X'13'\nCLEAR    EQU   CLEAR1,*-CLEAR1\n         SPACE 1\nMODEL    DS    0D\nMGTPB    GETLINE MF=L\nMATTL    ATTACH SHSPV=78,     NEEDED TO PREVENT S305 ABENDS            +\n               SF=L\nMODELEN  EQU   *-MODEL        LENGTH OF MODEL AREA\n         SPACE 1\n         LTORG\n         SPACE  1\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nWORK     DSECT ,              .\n         DS    18F            SAVE AREA\n         DS    0D\nWMODEL   DS    0D             START OF MODEL AREA\nWGTPB    GETLINE MF=L\nWATTL    ATTACH  SF=L\nWMODELEN EQU   *-WMODEL       CHECK FOR SAME LENGTH.\n         SPACE 1\nWTCBADDR DC    A(0)           ADDRESS OF CREATED TASK\nWTCBECB  DC    A(0)           COMPLETION CONTROL BLOCK.\nWCPPL    DS    4F             SPACE FOR CPPL TO BE PASSED TO CMD\nWPARML   DS    12F            SPACE FOR PARM LISTS\nWIOPL    EQU   WPARML,16      IO PARM LIST FOR GETLINE\nWCSPL    EQU   WPARML,24      PARM LIST FOR IKJSCAN\nWCSOA    EQU   WPARML+24,8    OUTPUT AREA FROM IKJSCAN\n         SPACE 1\n         DS    0F\nWBLDLPRM DS    XL16           WORK AREA FOR BLDL\nWBLDLFF  EQU   WBLDLPRM,2     NUMBER OF ENTRIES IN LIST\nWBLDLLL  EQU   WBLDLPRM+2,2   LENGTH OF EACH ENTRY\nWBLDLNAM EQU   WBLDLPRM+4,8   MEMBER NAME\nWBLDLTTR EQU   WBLDLPRM+12,3  TTR OF START\nWBLDLK   EQU   WBLDLPRM+15,1  CONCATENATION NUMBER\n         SPACE 1\nWORKLEN  EQU   *-WORK         LENGTH OF WORK AREA\n         SPACE 1\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         IKJCPPL  ,\n         IKJCSOA  ,\n         IKJCSPL  ,\n         IKJECT   ,\n         IKJGTPB  ,\n         CVT   DSECT=YES\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         SPACE 1\nCMDBUF   DSECT\nCMDLEN   DC    H'0'           LENGTH, INCLUDES HEADER (+4)\nCMDOFF   DC    H'0'           OFFSET TO NONBLANK PAST COMMAND.\nCMDTEXT  DC    C' '           FIRST TEXT BYTE.\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DDNAME": {"ttr": 3081, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DDNAME   TITLE 'QUEUE COMMAND - LIST DDNAMES AND DSIDS FOR A JOB' ONL01 DDN00010\nDDNAME   QSTART ,                  START DDNAME CSECT ASSEMBLY    ONL01 DDN00020\n*********************************************************************** DDN00030\n* RNB CHANGES:                                                        * DDN00040\n*      (1) RNB11 - ALLOW COMMAND OF FORM   DD NAME S  WHERE S MEANS   * DDN00050\n*                  TO LIST THE SPIN DATA SETS EVEN IF A BATCH JOB.    * DDN00060\n*                  ADDED BECAUSE OUR IMS SYSTEM SPINS OFF DUMP DATA   * DDN00070\n*                  SETS THAT WE WANT TO LOOK AT.                      * DDN00080\n*      (2) RNB12 - WITH SP2 JES2 WE ALWAYS SEEM TO GET THE 'ALREADY   * DDN00090\n*                  PRINTED' MESSAGE FOR SPIN DATA SETS. THIS CHANGE   * DDN00100\n*                  BYPASSES THE MESSAGE IF QSP=1.                     * DDN00110\n*********************************************************************** DDN00120\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA         DDN00130\n         L     R10,QVCKPT     LOAD BASE REG                             DDN00140\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA            DDN00150\n         L     R9,QVDSPL      LOAD BASE REG                             DDN00160\n         USING WORK,R13                                                 DDN00170\n*********************************************************************** DDN00180\n*                                                                     * DDN00190\n*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      * DDN00200\n*                                                                     * DDN00210\n*********************************************************************** DDN00220\n         L     R15,=V(FINDJOB) ROUTINE TO FIND JOB                      DDN00230\n         BALR  R14,R15        GO TO IT                                  DDN00240\n         SPACE 2                                                  ONL02 DDN00250\n******************************************************************ONL02 DDN00260\n*                                                                 ONL02 DDN00270\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02 DDN00280\n*                                                                 ONL02 DDN00290\n******************************************************************ONL02 DDN00300\n         SPACE 1                                                  ONL02 DDN00310\n         QAUTHCK QADD              PERFORM JOB AUTHORIZATION      ONL02 DDN00320\n         SPACE 2                                                  ONL02 DDN00330\n*********************************************************************** DDN00340\n*                                                                     * DDN00350\n*   DETERMINE JOB TYPE (BATCH OR TSO)                                 * DDN00360\n*                                                                     * DDN00370\n*********************************************************************** DDN00380\n         USING JCT,R1         BASE REG FOR JCT                          DDN00390\n         USING PDB,R2         BASE REG FOR PDDB                         DDN00400\n         USING IOT,R3         BASE REG FOR IOT                    WGH   DDN00410\n         L     R1,QCJCTA      A(JCT)                                    DDN00420\n         CLI   QPARM2,C'S'                                        RNB11 DDN00430\n         BE    DDTSO                                              RNB11 DDN00440\n         CLC   JCTJOBID(3),=CL3'TSU' ?/TSO USER                         DDN00450\n         BE    DDTSO          YES. GO PROCESS                           DDN00460\n         CLC   JCTJOBID(3),=CL3'STC' ?/STARTED TASK                     DDN00470\n         BE    DDTSO          YES. GO PROCESS                           DDN00480\n*********************************************************************** DDN00490\n*                                                                     * DDN00500\n*   LOCATE PDDB NUMBER 5                                              * DDN00510\n*                                                                     * DDN00520\n*********************************************************************** DDN00530\nDDJOB    L     R3,QCIOTA      LOAD BASE REG                             DDN00540\n         SH    R3,=AL2(IOTSTART-IOT)      HASP BUFFER PREFIX       WGH  DDN00550\n         LR    R4,R3          BASE OF IOT                               DDN00560\n         CLC   IOTID,=CL4'IOT'  WAS AN IOT READ FROM SPOOL ?      ONL03 DDN00570\n         BNE   BADIOT         ERROR IF NO                         ONL03 DDN00580\n         CLC   QPJOBID,IOTJBKEY  IS THE IOT'S JOB KEY VALID ?     ONL03 DDN00590\n         BNE   BADIOT         ERROR IF NO                         ONL03 DDN00600\n         A     R4,IOTPDDBP    OFFSET BEYOND LAST PDDB                   DDN00610\n         LR    R2,R3          BASE OF IOT                               DDN00620\n         A     R2,IOTPDDB     OFFSET TO FIRST PDDB IN IOT         WGH   DDN00630\n         MVC   QPDSID,=H'0'   NULLIFY VALIDITY FOR LISTDS         WGH   DDN00640\nFINDDS   CLC   =F'5',PDBDSKEY IS THIS THE DATASET?                WGH42 DDN00650\n         BE    FOUNDDS        YES. CONTINUE.                            DDN00660\n         LA    R2,PDBLENG(R2) NO. LOOK AT NEXT PDDB.                    DDN00670\n         CR    R2,R4          HAVE WE GONE PAST THE LAST PDDB?          DDN00680\n         BL    FINDDS         NO. TRY AGAIN.                            DDN00690\n         QTILT '*** JOB DOES NOT HAVE DD TABLE - TRY PDDB ***'          DDN00700\nFOUNDDS  L     R4,PDBMTTR     DISK ADDR OF FIRST BLOCK                  DDN00710\n         L     R5,QCBLKA      ADDR OF DATASET BLOCK IOAREA              DDN00720\n         MVC   QDMSG,QBLANK   BLANK OUT THE MESSAGE AREA                DDN00730\n         B     FIRST          PROCESS DATASET                           DDN00740\n*********************************************************************** DDN00750\n*                                                                     * DDN00760\n*   PROCESS DATASET                                                   * DDN00770\n*                                                                     * DDN00780\n*********************************************************************** DDN00790\nNEXTBLK  L     R4,HDBNXTRK-BUFSTART(R5)   ADDR OF NEXT BLOCK     WGH42  DDN00800\nFIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?                    DDN00810\n         BZ    END            YES. END OF DATASET.                      DDN00820\n         BAL   R8,READ        READ A BLOCK                              DDN00830\n         CLC   QPJOBID,HDBJBKEY-BUFSTART(R5)  JOBID MATCH       WGH42   DDN00840\n         BNE   END            NO. END OF DATASET.                       DDN00850\n         CLC   =H'5',HDBDSKEY-BUFSTART+2(R5)  DSID MATCH        WGH42   DDN00860\n         BNE   END            NO. END OF DATASET.                       DDN00870\n         LA    R4,HDBSTART-BUFSTART(R5)   FIRST RECORD IN BLOCK  WGH42  DDN00880\n*********************************************************************** DDN00890\n*                                                                     * DDN00900\n*   PROCESS RECORDS                                                   * DDN00910\n*                                                                     * DDN00920\n*********************************************************************** DDN00930\nNEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?                        DDN00940\n         BE    NEXTBLK        YES. END OF BLOCK.                        DDN00950\n         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?                 DDN00960\n         BO    SPAN           YES. SKIP IT.                             DDN00970\n         SR    R6,R6          ZERO OUT REG                              DDN00980\n         IC    R6,0(R4)       INSERT LENGTH                             DDN00990\n         TM    5(R4),2        IS THIS AN EXEC RECORD?                   DDN01000\n         BO    EXEC           YES. PROCESS IT.                          DDN01010\n         TM    5(R4),4        IS THIS A DD RECORD?                      DDN01020\n         BO    DD             YES. PROCESS IT.                          DDN01030\nSKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD                  DDN01040\n         B     NEXTREC        PROCESS NEXT RECORD                       DDN01050\nSPAN     LH    R6,2(R4)       LENGTH OF SEGMENT                         DDN01060\n         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?                DDN01070\n         BO    SPANFRST       YES. USE HEADER LENGTH OF 6.              DDN01080\n         LA    R4,4(R6,R4)    INCREMENT TO NEXT RECORD                  DDN01090\n         B     NEXTREC        PROCESS NEXT RECORD                       DDN01100\nSPANFRST LA    R4,6(R6,R4)    INCREMENT TO NEXT RECORD                  DDN01110\n         B     NEXTREC        PROCESS NEXT RECORD                       DDN01120\nEND      QSTOP                                                          DDN01130\n*********************************************************************** DDN01140\n*                                                                     * DDN01150\n*   PROCESS AN EXEC RECORD                                            * DDN01160\n*                                                                     * DDN01170\n*********************************************************************** DDN01180\nEXEC     EQU   *                                                   WGH  DDN01190\n         CLI   6(R4),X'08'    PROC EXEC ?                          WGH  DDN01200\n         BE    PROC                                                WGH  DDN01210\n         MVC   PROCSTEP,QBLANK BLANK OUT THE PROC STEPNAME         WGH  DDN01220\n         MVC   STEPNAME,QBLANK BLANK OUT THE STEPNAME                   DDN01230\n         CLI   7(R4),X'94'    IS THERE A STEPNAME?                      DDN01240\n         BNE   SKIPREC        NO. SKIP THE REST.                        DDN01250\n         SR    R1,R1          ZERO OUT R1                               DDN01260\n         IC    R1,9(R4)       LENGTH OF STEPNAME                        DDN01270\n         SH    R1,=H'1'       DECREMENT BY 1                            DDN01280\n         BM    SKIPREC        STEPNAME WAS ZERO LENGTH.                 DDN01290\n         EX    R1,MVCSTEP     MOVE THE STEPNAME                         DDN01300\n         B     SKIPREC        CONTINUE PROCESSING                       DDN01310\nPROC     EQU   *                                                   WGH  DDN01320\n         MVC   PROCSTEP,QBLANK                                     WGH  DDN01330\n         CLI   7(R4),X'94'    IS THERE A STEPNAME?                 WGH  DDN01340\n         BNE   SKIPREC        NO. SKIP THE REST                    WGH  DDN01350\n         SR    R1,R1                                               WGH  DDN01360\n         IC    R1,9(R4)       LENGTH OF STEPNAME                   WGH  DDN01370\n         SH    R1,=H'1'       REDUCE BY 1                          WGH  DDN01380\n         BM    SKIPREC        STEPNAME WAS ZERO LENGTH             WGH  DDN01390\n         EX    R1,MVCPROC     MOVE THE STEPNAME                    WGH  DDN01400\n         B     SKIPREC        CONTINUE                             WGH  DDN01410\n*********************************************************************** DDN01420\n*                                                                     * DDN01430\n*   PROCESS DD RECORDS                                                * DDN01440\n*                                                                     * DDN01450\n*********************************************************************** DDN01460\nDD       TM    6(R4),X'30'    IS THIS A SYSIN OR SYSOUT DD?             DDN01470\n         BZ    SKIPREC        NO. SKIP THE RECORD.                      DDN01480\n         MVC   DDN,QBLANK     BLANK OUT THE DDNAME                      DDN01490\n         MVC   DSID,QBLANK    BLANK OUT THE DSID                        DDN01500\n         MVC   DSRECCT,QBLANK BLANK OUT THE DS RECORD COUNT             DDN01510\n         MVC   DSCLASS,QBLANK BLANK OUT THE DS CLASS                    DDN01520\n         LA    R7,7(R4)       ADDR OF FIRST KEY                         DDN01530\n         LR    R8,R6          REMAINING LENGTH OF RECORD                DDN01540\n         SR    R15,15         ZERO OUT R15                              DDN01550\n         SR    R14,R14        ZERO OUT R14                              DDN01560\n         SR    R1,R1          ZERO OUT R1                               DDN01570\nTRYFLD   CLI   0(R7),X'6E'    IS THIS THE DDNAME?                       DDN01580\n         BE    DDKEY          YES. PROCESS IT.                          DDN01590\n         CLI   0(R7),X'4A'    IS THIS THE DSNAME?                       DDN01600\n         BNE   NEXTFLD        NO. GET NEXT FIELD                        DDN01610\n         CLC   1(2,R7),=X'012C'   TRY TO VERIFY SYSIN/SYSOUT DS  WGH42  DDN01620\n         BE    DSKEY          YES. PROCESS IT.                          DDN01630\nNEXTFLD  IC    R1,1(R7)       NUMBER OF SUBFIELDS                       DDN01640\n         LA    R7,2(R7)       UPDATE LOCATION                           DDN01650\n         SH    R8,=H'2'       REMAINING COUNT                           DDN01660\n         SR    R8,R1          REMAINING COUNT                           DDN01670\n         BNP   SKIPREC        RECORD IS EXHAUSTED                       DDN01680\n         LTR   R1,R1          ARE THERE ANY SUBFIELDS?                  DDN01690\n         BZ    TRYFLD         NO. TRY NEXT FIELD.                       DDN01700\nLOOPFLD  TM    0(R7),X'80'    IS THIS A SUB-SUB-FIELD                   DDN01710\n         BZ    NOSUB          NO. CONTINUE.                             DDN01720\n         NI    0(R7),X'7F'    CLEAR THE HEX 80 BIT                      DDN01730\n         IC    R14,0(R7)      NUMBER OF SUB-SUB-FIELDS                  DDN01740\n         LA    R7,1(R7)       UPDATE LOCATION                           DDN01750\n         SH    R8,=H'1'       REMAINING COUNT                           DDN01760\n         SR    R8,R14         REMAINING COUNT                           DDN01770\n         BNP   SKIPREC        RECORD IS EXHAUSTED                       DDN01780\n         AR    R1,R14         INCREASE NUMBER OF SUBFIELDS              DDN01790\n         B     YESSUB         DECREMENT AND TRY AGAIN                   DDN01800\nNOSUB    IC    R15,0(R7)      SUBFIELD LENGTH                           DDN01810\n         LA    R7,1(R15,R7)   ADD TO LOCATION                           DDN01820\n         SR    R8,R15         REMAINING COUNT                           DDN01830\n         BNP   SKIPREC        RECORD IS EXHAUSTED                       DDN01840\nYESSUB   BCT   R1,LOOPFLD     DO NEXT SUBFIELD                          DDN01850\n         B     TRYFLD         TRY NEXT FIELD                            DDN01860\nDDKEY    IC    R1,2(R7)       LENGTH OF DDNAME                          DDN01870\n         LTR   R1,R1          IS THE LENGTH ZERO?                       DDN01880\n         BZ    NEXTFLD        YES. SKIP THE FIELD.                      DDN01890\n         BCTR  R1,0           DECREMENT BY 1                            DDN01900\n         EX    R1,MVCDDN      MOVE THE DDNAME                           DDN01910\n         B     NEXTFLD        PROCESS NEXT FIELD                        DDN01920\nDSKEY    SR    R1,R1          CLEAR FOR INSERT                   WGH    DDN01930\n         IC    R1,2(R7)       GET LENGTH OF DSNAME               WGH\n         LA    R1,2(R1,R7)    POINT TO END OF DSN                WGH\nDSKEY1   CLI   0(R1),C'?'     SEARCH FOR ? MARK                  WGH\n         BE    DSKEYF         GOT IT                             WGH42\n         BCTR  R1,0           NO... BACKUP ONE POSITION          WGH42\n         CR    R1,R7          HAVE WE GONE BACK TOO FAR          WGH42\n         BNH   NEXTFLD        YES.. SKIP IT                      WGH42\n         B     DSKEY1         NO... LOOP AND CHECK IT            WGH42\nDSKEYF   EQU   *                                                 WGH42\n         SH    R1,=H'18'      POINT TO JOB NUM PART OF DSN       WGH42\n         CLI   9(R1),C'D'      VERIFY JESDS FORMAT               WGH42\n         BNE   NEXTFLD         NO... SKIP REC                    WGH42\n         CLC   0(3,R1),=C'JOB'      VERIFY JES DS FORMAT         WGH42\n         BE    DSKEYID         YES.. PROCESS                     WGH42\n         CLC   0(3,R1),=C'STC'      VERIFY JES DS FORMAT         WGH42\n         BE    DSKEYID         YES.. PROCESS                     WGH42\n         CLC   0(3,R1),=C'TSU'      VERIFY JES DS FORMAT         WGH42\n         BE    DSKEYID         YES.. PROCESS                     WGH42\n         B     NEXTFLD         NO... SKIP REC                    WGH42\nDSKEYID  MVC   DSID+1(3),14(R1)  MOVE THE DSID                   WGH42  DDN01930\n         L     R15,=V(FINDPDDB) ADDR OF FINDPDDB MODULE                 DDN01940\n         BALR  R14,R15        GO TO IT                                  DDN01950\n         MVC   QDHLINE,HEADING MOVE IN HEADING                          DDN01960\n         LA    R1,QDMSG       ADDR OF MESSAGE LINE                      DDN01970\n         ST    R1,QDMSGA      STORE IN MESSAGE ADDR                     DDN01980\n         MVC   QDMLNG,=H'80'  MESSAGE LENGTH                            DDN01990\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE                   DDN02000\n         BALR  R14,R15        GO TO IT                                  DDN02010\n         B     SKIPREC        PROCESS NEXT RECORD                       DDN02020\n*********************************************************************** DDN02030\n*                                                                     * DDN02040\n*   PROCESS DD TSU                                                    * DDN02050\n*                                                                     * DDN02060\n*********************************************************************** DDN02070\nDDTSO    L     R5,QCBLKA      ADDR OF DATASET BLOCK IOAREA              DDN02080\n         LR    R3,R5          BASE OF IOAREA                            DDN02090\n         L     R4,JCTSPIOT    ADDR OF FIRST SPIN IOT                    DDN02100\nTSO010   LTR   R4,R4          IS IOT ADDR ZERO?                         DDN02110\n         BZ    DDJOB          YES, GO READ REGULAR IOT'S                DDN02120\n         L     R3,QCBLKA      RELOAD POINTER TO IOAREA             WGH  DDN02130\n         BAL   R8,READ        READ IOT                                  DDN02140\n         SH    R3,=AL2(IOTSTART-IOT)      HASP BUFFER PREFIX       WGH  DDN02150\n         LR    R4,R3          BASE OF IOT                               DDN02160\n         CLC   IOTID,=CL4'IOT'  WAS AN IOT READ FROM SPOOL ?      ONL03 DDN02170\n         BNE   BADIOT         ERROR IF NO                         ONL03 DDN02180\n         CLC   QPJOBID,IOTJBKEY  IS THE IOT'S JOB KEY VALID ?     ONL03 DDN02190\n         BNE   BADIOT         ERROR IF NO                         ONL03 DDN02200\n         A     R4,IOTPDDBP    OFFSET BEYOND LAST PDDB                   DDN02210\n         LR    R2,R3          BASE OF IOT                               DDN02220\n         A     R2,IOTPDDB     OFFSET TO FIRST PDDB IN IOT         WGH   DDN02230\nTSO020   CLI   PDBFLAG1,X'00' IS THIS PDDB VALID                        DDN02240\n         BE    TSO040         NO, GET NEXT IOT                          DDN02250\n         MVC   QDMSG,QBLANK   BLANK MESSAGE LINE                        DDN02260\n         MVC   DDN,=CL8'SPIN-DS'      MOVE IN DDNAME                    DDN02270\n         SR    R0,R0          CLEAR REG 0                               DDN02280\n         L     R0,PDBDSKEY    CONVERT                             WGH42 DDN02290\n         CVD   R0,CONVERT        DATA SET                               DDN02300\n         MVC   DSID,ED4               ID  TO                            DDN02310\n         ED    DSID,CONVERT+6             ZERO                          DDN02320\n         L     R0,PDBRECCT    CONVERT                                   DDN02330\n         CVD   R0,CONVERT        RECORD                                 DDN02340\n         MVC   DSRECCT,ED8          COUNT TO                            DDN02350\n         ED    DSRECCT,CONVERT+4        CHARACTER                       DDN02360\n         MVC   DSCLASS,PDBCLASS  MOVE IN SYSOUT CLASS                   DDN02370\n         B     TSO030            SKIP TEST                        WGH   DDN02380\n*        TM    PDBFLAG1,PDB1PSO  HAS DATA SET BEEN PRINTED        WGH42 DDN02390\n*        BO    TSO030         NO                                  WGH42 DDN02400\n*        MVC   MESSAGE,PRTMSG INDICATE DATA SET PRINTED           WGH42 DDN02410\nTSO030   MVC   QDHLINE,HEADING MOVE IN HEADING                          DDN02420\n         LA    R1,QDMSG       ADDR OF MESSAGE LINE                      DDN02430\n         ST    R1,QDMSGA      STORE IN MESSAGE ADDR                     DDN02440\n         MVC   QDMLNG,=H'80'  MESSAGE LENGTH                            DDN02450\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE                   DDN02460\n         BALR  R14,R15        GO TO IT                                  DDN02470\n         LA    R2,PDBLENG(R2) LOOK AT NEXT PDDB                         DDN02480\n         CR    R2,R4          HAVE WE GONE PAST THE LAST PDDB           DDN02490\n         BL    TSO020         NO, TRY AGAIN                             DDN02500\nTSO040   L     R4,IOTIOTTR    DISK ADDR OF NEXT IOT                     DDN02510\n         B     TSO010         GO SEARCH THE NEXT IOT                    DDN02520\n*********************************************************************** DDN02530\n*                                                                     * DDN02540\n*   READ A BLOCK FROM HASPACE                                         * DDN02550\n*                                                                     * DDN02560\n*********************************************************************** DDN02570\nREAD     ST    R4,QCTRAK      STORE DISK ADDR                           DDN02580\n         LR    R1,R5          IOAREA ADDRESS                            DDN02590\n         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE          DDN02600\n         BALR  R14,R15        GO TO IT                                  DDN02610\n         BR    R8             RETURN TO CALLER                          DDN02620\n         SPACE 3                                                  ONL03 DDN02630\nBADIOT   EQU   *                                                        DDN02640\n         QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       ONL03 DDN02650\n         SPACE 2                                                  ONL03 DDN02660\n*********************************************************************** DDN02670\n*                                                                     * DDN02680\n*   MISCELLANY                                                        * DDN02690\n*                                                                     * DDN02700\n*********************************************************************** DDN02710\n         LTORG                                                          DDN02720\nMVCSTEP  MVC   STEPNAME(1),10(R4)                                       DDN02730\nMVCPROC  MVC   PROCSTEP(1),10(R4)                                 WGH   DDN02740\nMVCDDN   MVC   DDN(1),3(R7)                                             DDN02750\nHEADING  DC    CL12'STEPNAME  '                                   WGH   DDN02760\n         DC    CL68'PROCSTEP    DDNAME      DSID      LINES   CLASS'    DDN02770\nED4      DC    X'40202120'                                              DDN02780\nED5      DC    X'4020202120'                                            DDN02790\nED8      DC    X'4020202020202120'                                      DDN02800\nPRTMSG   DC    CL15'ALREADY PRINTED'                                    DDN02810\n         DROP  ,                   DROP ALL ADDRESSINGS           NERDC DDN02820\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023 DDN02830\nDDNAME   CSECT ,                                                  UF023 DDN02840\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01 DDN02850\n         $HASPEQU                                                       DDN02860\n         IFGRPL                                                         DDN02870\n         $BUFFER ,                                                      DDN02880\n         $TAB                                                           DDN02890\n         $JCT                                                           DDN02900\n         $PDDB                                                          DDN02910\n         $IOT                                                           DDN02920\n         QCOMMON                                                        DDN02930\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01 DDN02940\n         ORG   QDMSG                                                    DDN02950\nSTEPNAME DS    CL8                                                      DDN02960\n         DS    CL4                                                      DDN02970\nPROCSTEP DS    CL8                 SPACE FOR PROCSTEP NAME        WGH   DDN02980\n         DS    CL4                 ALSO SEE MODULE FINDPDDB(Q25)  WGH   DDN02990\nDDN      DS    CL8 END OF DATA. LAST REC #'                             DDN03000\n         DS    CL4                                                      DDN03010\nDSID     DS    CL4                                                      DDN03020\n         DS    CL4                                                      DDN03030\nDSRECCT  DS    CL8                                                      DDN03040\n         DS    CL4                                                      DDN03050\nDSCLASS  DS    CL1                                                      DDN03060\n         DS    CL6                                                      DDN03070\nMESSAGE  DS    CL15                                                     DDN03080\nWORK     DSECT                                                          DDN03090\n         DS    90F               5 SAVE AREAS                           DDN03100\nCONVERT  DS    D                                                        DDN03110\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023 DDN03120\n         END                                                            DDN03130\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DDNAMEO": {"ttr": 3332, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DDNAME   TITLE 'QUEUE COMMAND - LIST DDNAMES AND DSIDS FOR A JOB' ONL01\nDDNAME   QSTART ,                  START DDNAME CSECT ASSEMBLY    ONL01\n         GBLB  &QSP                SP V1.3.X OPTION               RNB12\n         GBLB  &QSP133             SP V1.3.3 OPTION               ONL11\n         GBLB  &QJTIP              JTIP OPTION                    UF046\n         SPACE 2                                                  ONL11\n******************************************************************ONL11\n*                                                                 ONL11\n*   LIST DDNAME'S AND DSID'S FOR A JOB                            ONL11\n*                                                                 ONL11\n*   SYNTAX:  DD <JOBNAME>                                         ONL11\n*                                                                 ONL11\n*   NOTE:  THE SP 1.3.3 VERSION OF THE DD COMMAND IS JUST A       ONL11\n*          SUBSET OF THE PDDB COMMAND.                            ONL11\n*                                                                 ONL11\n******************************************************************ONL11\n         SPACE 1                                                  ONL11\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n         USING WORK,R13\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ROUTINE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QADD              PERFORM JOB AUTHORIZATION      ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   FIND ALL PDDBS FOR THIS JOB WITH A DSID OF 101 OR GRATER          *\n*                                                                     *\n***********************************************************************\n         USING PDB,R2             BASE REG FOR PDDB\n         MVC   QDHLINE,HEADING    SET HEADING LINE\n         MVI   SWITCH,0           CLEAR FLAG BYTE\n         L     R3,QCIOTA          LOAD BASE REG\n         LR    R5,R3              IOAREA FOR READ IOT BLOCK\n         SH    R3,=AL2(IOTSTART-IOT) ADJUST FOR HEADER            UF046\n         USING IOT,R3             BASE REG FOR IOT                UF046\n         L     R1,QCJQEA          ADDRESS OF JQE                  UF046\n         USING JQE,R1             SET TEMP ADDRESSING             UF046\n         TM    JQEFLAG3,JQE3SYSD  JQETRAK POINT TO IOT?           UF046\n         BZ    READJCT            NO, SKIP THIS CODE              UF046\n         OI    SWITCH,1            SKIP SPIN IOT'S                UF046\n         L     R4,JQETRAK          ADDRESS OF FIRST IOT           UF046\n         B     READIOT             READ FIRST IOT                 UF046\nREADJCT  DS    0H                                                 UF046\n         USING JCT,R1             SET TEMP ADDRESSING             ONL16\n         L     R1,QCJCTA          POINT TO JCT\n         L     R4,JCTIOT          FIRST IOT ADDRESS\n         DROP  R1                 DROP TEMP ADDRESSING\nREADIOT  DS    0H                                                 UF046\n         BAL   R8,READ            READ THE IOT\n         SPACE 1\nNEXTIOT  LR    R4,R3              BASE OF IOT\n         CLC   IOTID,=CL4'IOT'    WAS AN IOT READ FROM SPOOL ?    ONL03\n         BNE   BADIOT             ERROR IF NO                     ONL03\n         CLC   QPJOBID,IOTJBKEY   IS THE IOT'S JOB KEY VALID ?    ONL03\n         BNE   BADIOT             ERROR IF NO                     ONL03\n         A     R4,IOTPDDBP        OFFSET BEYOND LAST PDDB\n         LR    R2,R3              BASE OF IOT\n         A     R2,IOTPDDB            ADD OFFSET TO FIRST PDDB     UF046\n         SPACE 1                                                  ONL11\nPDDBLOOP LH    R0,PDBDSKEY        GET THE DSID\n         C     R0,=F'101'         IS DSID .GE. 101?               ONL11\n         BL    NEXTPDDB           IF NOT, IGNORE THIS PDDB        ONL11\n         SPACE 1                                                  ONL11\n         MVC   QDMSG,QBLANK       BLANK WORK LINE AREA            ONL11\n         LTR   R0,R0              TEST FOR NULL PDDB#\n*        BZ    NEXTPDDB           SKIP IF SO                        SBG\n         CVD   R0,CONVERT         CONVERT TO DECIMAL\n         MVC   DSID-4(8),ED8      MOVE EDIT PATTERN TO DISPLAY\n         ED    DSID-4(8),CONVERT+4  EDIT THE DSID\n         L     R0,PDBRECCT        GET THE RECORD COUNT\n         CVD   R0,CONVERT         CONVERT TO DECIMAL\n         MVC   DSRECCT,ED8        MOVE EDIT PATTERN TO DISPLAY\n         ED    DSRECCT,CONVERT+4  EDIT THE RECORD COUNT\n         MVC   DSCLASS,PDBCLASS   MOVE PDBCLASS TO DISPLAY\n         MVC   DS#PROC,PDBPNAME   SET PDDB PROC NAME              UF046\n         MVC   DS#STEP,PDBSNAME   SET PDDB STEP NAME              UF046\n         MVC   DS#DDNM,PDBDDNAM   SET PDDB DD NAME                UF046\n         MVC   QDMLNG,=H'80'      SET THE LENGTH\n         LA    R0,QDMSG           POINT TO MESSAGE\n         ST    R0,QDMSGA          SET IN AREA\n         L     R15,=V(DISPLAY)    POINT TO DISPLAY ROUTINE\n         BALR  R14,R15            LINK TO IT\nNEXTPDDB LA    R2,PDBLENG(R2)     POINT TO NEXT PDDB\n         CR    R2,R4              HAVE WE GONE PAST THE LAST PDDB\n         BL    PDDBLOOP           NO. KEEP TRYING\n         L     R4,IOTIOTTR        DISK ADDR OF NEXT IOT\nSPIN     LTR   R4,R4              IS THERE ANOTHER IOT?\n         BZ    SPINIOT            NO. TRY THE SPIN IOT.\n         BAL   R8,READ            READ THE IOT\n         B     NEXTIOT            SEARCH THE NEXT IOT\n         USING JCT,R1             BASE REG FOR JCT                ONL16\nSPINIOT  TM    SWITCH,1           DID WE SEARCH THE SPINIOT ALREADY\n         BO    STOP               YES, DONE\n         OI    SWITCH,1           SET SWITCH\n         L     R1,QCJCTA          LOAD BASE REG\n         L     R4,JCTSPIOT        DISK ADDR OF SPIN IOT\n         B     SPIN               SEARCH THE SPIN IOT CHAIN\n         DROP  R1\nSTOP     QSTOP                    GO BACK TO CALLER\n***********************************************************************\n*                                                                     *\n*   READ A BLOCK FROM HASPACE                                         *\n*                                                                     *\n***********************************************************************\nREAD     ST    R4,QCTRAK          STORE DISK ADDR\n         LR    R1,R5              IOAREA ADDRESS\n         L     R15,=V(READSPC)    ADDR OF ROUTINE TO READ HASPACE\n         BALR  R14,R15            GO TO IT\n         BR    R8                 RETURN TO CALLER\nED8      DC    X'4020202020202120'\nBADIOT   QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       ONL03\nHEADING  DC    CL80' '\n         ORG   HEADING            POINT TO START OF AREA\n         DC    CL4' '                                             ONL11\n         DC    C'DSID'                                            ONL11\n         DC    CL2' '                                             ONL11\n         DC    C'RECORDS'                                         ONL11\n         DC    CL2' '                                             ONL11\n         DC    C'CLASS'                                           ONL11\n         DC    CL2' '                                             ONL11\n         DC    C'PROCNAME'                                        ONL11\n         DC    CL2' '                                             ONL11\n         DC    C'STEPNAME'                                        ONL11\n         DC    CL2' '                                             ONL11\n         DC    C'DDNAME'                                          ONL11\n         ORG   ,                  BACK TO NORMAL ADDRESSING\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nDDNAME   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $BUFFER ,                                                UF046\n         IFGRPL\n         $TAB\n         $JCT\n         $JQE                                                     UF046\n         $PDDB\n         $IOT\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\n         DS    CL4                                                ONL11\nDSID     DS    CL4                                                ONL11\n         DS    CL1                                                ONL11\nDSRECCT  DS    CL8                                                ONL11\n         DS    CL4                                                ONL11\nDSCLASS  DS    CL1                                                ONL11\n         DS    CL4                                                ONL11\nDS#PROC  DS    CL8                                                ONL11\n         DS    CL2                                                ONL11\nDS#STEP  DS    CL8                                                ONL11\n         DS    CL2                                                ONL11\nDS#DDNM  DS    CL8                                                ONL11\nWORK     DSECT\n         DS    CL72\nSWITCH   DS    C\nCONVERT  DS    D\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END   ,                                                  ONL11\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DDNAMEX": {"ttr": 3336, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DDNAME   TITLE 'QUEUE COMMAND - LIST DDNAMES AND DSIDS FOR A JOB' ONL01 DDN00010\nDDNAME   QSTART ,                  START DDNAME CSECT ASSEMBLY    ONL01 DDN00020\n*********************************************************************** DDN00030\n* RNB CHANGES:                                                        * DDN00040\n*      (1) RNB11 - ALLOW COMMAND OF FORM   DD NAME S  WHERE S MEANS   * DDN00050\n*                  TO LIST THE SPIN DATA SETS EVEN IF A BATCH JOB.    * DDN00060\n*                  ADDED BECAUSE OUR IMS SYSTEM SPINS OFF DUMP DATA   * DDN00070\n*                  SETS THAT WE WANT TO LOOK AT.                      * DDN00080\n*      (2) RNB12 - WITH SP2 JES2 WE ALWAYS SEEM TO GET THE 'ALREADY   * DDN00090\n*                  PRINTED' MESSAGE FOR SPIN DATA SETS. THIS CHANGE   * DDN00100\n*                  BYPASSES THE MESSAGE IF QSP=1.                     * DDN00110\n*********************************************************************** DDN00120\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA         DDN00130\n         L     R10,QVCKPT     LOAD BASE REG                             DDN00140\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA            DDN00150\n         L     R9,QVDSPL      LOAD BASE REG                             DDN00160\n         USING WORK,R13                                                 DDN00170\n*********************************************************************** DDN00180\n*                                                                     * DDN00190\n*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      * DDN00200\n*                                                                     * DDN00210\n*********************************************************************** DDN00220\n         L     R15,=V(FINDJOB) ROUTINE TO FIND JOB                      DDN00230\n         BALR  R14,R15        GO TO IT                                  DDN00240\n         SPACE 2                                                  ONL02 DDN00250\n******************************************************************ONL02 DDN00260\n*                                                                 ONL02 DDN00270\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02 DDN00280\n*                                                                 ONL02 DDN00290\n******************************************************************ONL02 DDN00300\n         SPACE 1                                                  ONL02 DDN00310\n         QAUTHCK QADD              PERFORM JOB AUTHORIZATION      ONL02 DDN00320\n         SPACE 2                                                  ONL02 DDN00330\n*********************************************************************** DDN00340\n*                                                                     * DDN00350\n*   DETERMINE JOB TYPE (BATCH OR TSO)                                 * DDN00360\n*                                                                     * DDN00370\n*********************************************************************** DDN00380\n         USING JCT,R1         BASE REG FOR JCT                          DDN00390\n         USING PDB,R2         BASE REG FOR PDDB                         DDN00400\n         USING IOT,R3         BASE REG FOR IOT                    WGH   DDN00410\n         L     R1,QCJCTA      A(JCT)                                    DDN00420\n         CLI   QPARM2,C'S'                                        RNB11 DDN00430\n         BE    DDTSO                                              RNB11 DDN00440\n         CLC   JCTJOBID(3),=CL3'TSU' ?/TSO USER                         DDN00450\n         BE    DDTSO          YES. GO PROCESS                           DDN00460\n         CLC   JCTJOBID(3),=CL3'STC' ?/STARTED TASK                     DDN00470\n         BE    DDTSO          YES. GO PROCESS                           DDN00480\n*********************************************************************** DDN00490\n*                                                                     * DDN00500\n*   LOCATE PDDB NUMBER 5                                              * DDN00510\n*                                                                     * DDN00520\n*********************************************************************** DDN00530\nDDJOB    L     R3,QCIOTA      LOAD BASE REG                             DDN00540\n         SH    R3,=AL2(IOTSTART-IOT)      HASP BUFFER PREFIX       WGH  DDN00550\n         LR    R4,R3          BASE OF IOT                               DDN00560\n         CLC   IOTID,=CL4'IOT'  WAS AN IOT READ FROM SPOOL ?      ONL03 DDN00570\n         BNE   BADIOT         ERROR IF NO                         ONL03 DDN00580\n         CLC   QPJOBID,IOTJBKEY  IS THE IOT'S JOB KEY VALID ?     ONL03 DDN00590\n         BNE   BADIOT         ERROR IF NO                         ONL03 DDN00600\n         A     R4,IOTPDDBP    OFFSET BEYOND LAST PDDB                   DDN00610\n         LR    R2,R3          BASE OF IOT                               DDN00620\n         A     R2,IOTPDDB     OFFSET TO FIRST PDDB IN IOT         WGH   DDN00630\n         MVC   QPDSID,=H'0'   NULLIFY VALIDITY FOR LISTDS         WGH   DDN00640\nFINDDS   CLC   =F'5',PDBDSKEY IS THIS THE DATASET?                WGH42 DDN00650\n         BE    FOUNDDS        YES. CONTINUE.                            DDN00660\n         LA    R2,PDBLENG(R2) NO. LOOK AT NEXT PDDB.                    DDN00670\n         CR    R2,R4          HAVE WE GONE PAST THE LAST PDDB?          DDN00680\n         BL    FINDDS         NO. TRY AGAIN.                            DDN00690\n         QTILT '*** JOB DOES NOT HAVE DD TABLE - TRY PDDB ***'          DDN00700\nFOUNDDS  L     R4,PDBMTTR     DISK ADDR OF FIRST BLOCK                  DDN00710\n         L     R5,QCBLKA      ADDR OF DATASET BLOCK IOAREA              DDN00720\n         MVC   QDMSG,QBLANK   BLANK OUT THE MESSAGE AREA                DDN00730\n         B     FIRST          PROCESS DATASET                           DDN00740\n*********************************************************************** DDN00750\n*                                                                     * DDN00760\n*   PROCESS DATASET                                                   * DDN00770\n*                                                                     * DDN00780\n*********************************************************************** DDN00790\nNEXTBLK  L     R4,HDBNXTRK-BUFSTART(R5)   ADDR OF NEXT BLOCK     WGH42  DDN00800\nFIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?                    DDN00810\n         BZ    END            YES. END OF DATASET.                      DDN00820\n         BAL   R8,READ        READ A BLOCK                              DDN00830\n         CLC   QPJOBID,HDBJBKEY-BUFSTART(R5)  JOBID MATCH       WGH42   DDN00840\n         BNE   END            NO. END OF DATASET.                       DDN00850\n         CLC   =H'5',HDBDSKEY-BUFSTART+2(R5)  DSID MATCH        WGH42   DDN00860\n         BNE   END            NO. END OF DATASET.                       DDN00870\n         LA    R4,HDBSTART-BUFSTART(R5)   FIRST RECORD IN BLOCK  WGH42  DDN00880\n*********************************************************************** DDN00890\n*                                                                     * DDN00900\n*   PROCESS RECORDS                                                   * DDN00910\n*                                                                     * DDN00920\n*********************************************************************** DDN00930\nNEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?                        DDN00940\n         BE    NEXTBLK        YES. END OF BLOCK.                        DDN00950\n         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?                 DDN00960\n         BO    SPAN           YES. SKIP IT.                             DDN00970\n         SR    R6,R6          ZERO OUT REG                              DDN00980\n         IC    R6,0(R4)       INSERT LENGTH                             DDN00990\n         TM    5(R4),2        IS THIS AN EXEC RECORD?                   DDN01000\n         BO    EXEC           YES. PROCESS IT.                          DDN01010\n         TM    5(R4),4        IS THIS A DD RECORD?                      DDN01020\n         BO    DD             YES. PROCESS IT.                          DDN01030\nSKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD                  DDN01040\n         B     NEXTREC        PROCESS NEXT RECORD                       DDN01050\nSPAN     LH    R6,2(R4)       LENGTH OF SEGMENT                         DDN01060\n         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?                DDN01070\n         BO    SPANFRST       YES. USE HEADER LENGTH OF 6.              DDN01080\n         LA    R4,4(R6,R4)    INCREMENT TO NEXT RECORD                  DDN01090\n         B     NEXTREC        PROCESS NEXT RECORD                       DDN01100\nSPANFRST LA    R4,6(R6,R4)    INCREMENT TO NEXT RECORD                  DDN01110\n         B     NEXTREC        PROCESS NEXT RECORD                       DDN01120\nEND      QSTOP                                                          DDN01130\n*********************************************************************** DDN01140\n*                                                                     * DDN01150\n*   PROCESS AN EXEC RECORD                                            * DDN01160\n*                                                                     * DDN01170\n*********************************************************************** DDN01180\nEXEC     EQU   *                                                   WGH  DDN01190\n         CLI   6(R4),X'08'    PROC EXEC ?                          WGH  DDN01200\n         BE    PROC                                                WGH  DDN01210\n         MVC   PROCSTEP,QBLANK BLANK OUT THE PROC STEPNAME         WGH  DDN01220\n         MVC   STEPNAME,QBLANK BLANK OUT THE STEPNAME                   DDN01230\n         CLI   7(R4),X'94'    IS THERE A STEPNAME?                      DDN01240\n         BNE   SKIPREC        NO. SKIP THE REST.                        DDN01250\n         SR    R1,R1          ZERO OUT R1                               DDN01260\n         IC    R1,9(R4)       LENGTH OF STEPNAME                        DDN01270\n         SH    R1,=H'1'       DECREMENT BY 1                            DDN01280\n         BM    SKIPREC        STEPNAME WAS ZERO LENGTH.                 DDN01290\n         EX    R1,MVCSTEP     MOVE THE STEPNAME                         DDN01300\n         B     SKIPREC        CONTINUE PROCESSING                       DDN01310\nPROC     EQU   *                                                   WGH  DDN01320\n         MVC   PROCSTEP,QBLANK                                     WGH  DDN01330\n         CLI   7(R4),X'94'    IS THERE A STEPNAME?                 WGH  DDN01340\n         BNE   SKIPREC        NO. SKIP THE REST                    WGH  DDN01350\n         SR    R1,R1                                               WGH  DDN01360\n         IC    R1,9(R4)       LENGTH OF STEPNAME                   WGH  DDN01370\n         SH    R1,=H'1'       REDUCE BY 1                          WGH  DDN01380\n         BM    SKIPREC        STEPNAME WAS ZERO LENGTH             WGH  DDN01390\n         EX    R1,MVCPROC     MOVE THE STEPNAME                    WGH  DDN01400\n         B     SKIPREC        CONTINUE                             WGH  DDN01410\n*********************************************************************** DDN01420\n*                                                                     * DDN01430\n*   PROCESS DD RECORDS                                                * DDN01440\n*                                                                     * DDN01450\n*********************************************************************** DDN01460\nDD       TM    6(R4),X'30'    IS THIS A SYSIN OR SYSOUT DD?             DDN01470\n         BZ    SKIPREC        NO. SKIP THE RECORD.                      DDN01480\n         MVC   DDN,QBLANK     BLANK OUT THE DDNAME                      DDN01490\n         MVC   DSID,QBLANK    BLANK OUT THE DSID                        DDN01500\n         MVC   DSRECCT,QBLANK BLANK OUT THE DS RECORD COUNT             DDN01510\n         MVC   DSCLASS,QBLANK BLANK OUT THE DS CLASS                    DDN01520\n         LA    R7,7(R4)       ADDR OF FIRST KEY                         DDN01530\n         LR    R8,R6          REMAINING LENGTH OF RECORD                DDN01540\n         SR    R15,15         ZERO OUT R15                              DDN01550\n         SR    R14,R14        ZERO OUT R14                              DDN01560\n         SR    R1,R1          ZERO OUT R1                               DDN01570\nTRYFLD   CLI   0(R7),X'6E'    IS THIS THE DDNAME?                       DDN01580\n         BE    DDKEY          YES. PROCESS IT.                          DDN01590\n         CLI   0(R7),X'4A'    IS THIS THE DSNAME?                       DDN01600\n         BNE   NEXTFLD        NO. GET NEXT FIELD                        DDN01610\n         CLC   3(3,R7),=C'JES' YES. IS THIS TRULY A JES2 SYSIN/OUT DS?  DDN01620\n         BE    DSKEY          YES. PROCESS IT.                          DDN01630\nNEXTFLD  IC    R1,1(R7)       NUMBER OF SUBFIELDS                       DDN01640\n         LA    R7,2(R7)       UPDATE LOCATION                           DDN01650\n         SH    R8,=H'2'       REMAINING COUNT                           DDN01660\n         SR    R8,R1          REMAINING COUNT                           DDN01670\n         BNP   SKIPREC        RECORD IS EXHAUSTED                       DDN01680\n         LTR   R1,R1          ARE THERE ANY SUBFIELDS?                  DDN01690\n         BZ    TRYFLD         NO. TRY NEXT FIELD.                       DDN01700\nLOOPFLD  TM    0(R7),X'80'    IS THIS A SUB-SUB-FIELD                   DDN01710\n         BZ    NOSUB          NO. CONTINUE.                             DDN01720\n         NI    0(R7),X'7F'    CLEAR THE HEX 80 BIT                      DDN01730\n         IC    R14,0(R7)      NUMBER OF SUB-SUB-FIELDS                  DDN01740\n         LA    R7,1(R7)       UPDATE LOCATION                           DDN01750\n         SH    R8,=H'1'       REMAINING COUNT                           DDN01760\n         SR    R8,R14         REMAINING COUNT                           DDN01770\n         BNP   SKIPREC        RECORD IS EXHAUSTED                       DDN01780\n         AR    R1,R14         INCREASE NUMBER OF SUBFIELDS              DDN01790\n         B     YESSUB         DECREMENT AND TRY AGAIN                   DDN01800\nNOSUB    IC    R15,0(R7)      SUBFIELD LENGTH                           DDN01810\n         LA    R7,1(R15,R7)   ADD TO LOCATION                           DDN01820\n         SR    R8,R15         REMAINING COUNT                           DDN01830\n         BNP   SKIPREC        RECORD IS EXHAUSTED                       DDN01840\nYESSUB   BCT   R1,LOOPFLD     DO NEXT SUBFIELD                          DDN01850\n         B     TRYFLD         TRY NEXT FIELD                            DDN01860\nDDKEY    IC    R1,2(R7)       LENGTH OF DDNAME                          DDN01870\n         LTR   R1,R1          IS THE LENGTH ZERO?                       DDN01880\n         BZ    NEXTFLD        YES. SKIP THE FIELD.                      DDN01890\n         BCTR  R1,0           DECREMENT BY 1                            DDN01900\n         EX    R1,MVCDDN      MOVE THE DDNAME                           DDN01910\n         B     NEXTFLD        PROCESS NEXT FIELD                        DDN01920\nDSKEY    SR    R1,R1          CLEAR FOR INSERT                   WGH    DDN01930\n         IC    R1,2(R7)       GET LENGTH OF DSNAME               WGH\n         LA    R1,0(R1,R7)    POINT TO LAST 3 CHARS OF DSN       WGH\n         MVC   DSID+1(3),0(R1)  MOVE THE DSID                    WGH    DDN01930\n         L     R15,=V(FINDPDDB) ADDR OF FINDPDDB MODULE                 DDN01940\n         BALR  R14,R15        GO TO IT                                  DDN01950\n         MVC   QDHLINE,HEADING MOVE IN HEADING                          DDN01960\n         LA    R1,QDMSG       ADDR OF MESSAGE LINE                      DDN01970\n         ST    R1,QDMSGA      STORE IN MESSAGE ADDR                     DDN01980\n         MVC   QDMLNG,=H'80'  MESSAGE LENGTH                            DDN01990\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE                   DDN02000\n         BALR  R14,R15        GO TO IT                                  DDN02010\n         B     SKIPREC        PROCESS NEXT RECORD                       DDN02020\n*********************************************************************** DDN02030\n*                                                                     * DDN02040\n*   PROCESS DD TSU                                                    * DDN02050\n*                                                                     * DDN02060\n*********************************************************************** DDN02070\nDDTSO    L     R5,QCBLKA      ADDR OF DATASET BLOCK IOAREA              DDN02080\n         LR    R3,R5          BASE OF IOAREA                            DDN02090\n         L     R4,JCTSPIOT    ADDR OF FIRST SPIN IOT                    DDN02100\nTSO010   LTR   R4,R4          IS IOT ADDR ZERO?                         DDN02110\n         BZ    DDJOB          YES, GO READ REGULAR IOT'S                DDN02120\n         L     R3,QCBLKA      RELOAD POINTER TO IOAREA             WGH  DDN02130\n         BAL   R8,READ        READ IOT                                  DDN02140\n         SH    R3,=AL2(IOTSTART-IOT)      HASP BUFFER PREFIX       WGH  DDN02150\n         LR    R4,R3          BASE OF IOT                               DDN02160\n         CLC   IOTID,=CL4'IOT'  WAS AN IOT READ FROM SPOOL ?      ONL03 DDN02170\n         BNE   BADIOT         ERROR IF NO                         ONL03 DDN02180\n         CLC   QPJOBID,IOTJBKEY  IS THE IOT'S JOB KEY VALID ?     ONL03 DDN02190\n         BNE   BADIOT         ERROR IF NO                         ONL03 DDN02200\n         A     R4,IOTPDDBP    OFFSET BEYOND LAST PDDB                   DDN02210\n         LR    R2,R3          BASE OF IOT                               DDN02220\n         A     R2,IOTPDDB     OFFSET TO FIRST PDDB IN IOT         WGH   DDN02230\nTSO020   CLI   PDBFLAG1,X'00' IS THIS PDDB VALID                        DDN02240\n         BE    TSO040         NO, GET NEXT IOT                          DDN02250\n         MVC   QDMSG,QBLANK   BLANK MESSAGE LINE                        DDN02260\n         MVC   DDN,=CL8'SPIN-DS'      MOVE IN DDNAME                    DDN02270\n         SR    R0,R0          CLEAR REG 0                               DDN02280\n         L     R0,PDBDSKEY    CONVERT                             WGH42 DDN02290\n         CVD   R0,CONVERT        DATA SET                               DDN02300\n         MVC   DSID,ED4               ID  TO                            DDN02310\n         ED    DSID,CONVERT+6             ZERO                          DDN02320\n         L     R0,PDBRECCT    CONVERT                                   DDN02330\n         CVD   R0,CONVERT        RECORD                                 DDN02340\n         MVC   DSRECCT,ED8          COUNT TO                            DDN02350\n         ED    DSRECCT,CONVERT+4        CHARACTER                       DDN02360\n         MVC   DSCLASS,PDBCLASS  MOVE IN SYSOUT CLASS                   DDN02370\n         B     TSO030            SKIP TEST                        WGH   DDN02380\n*        TM    PDBFLAG1,PDB1PSO  HAS DATA SET BEEN PRINTED        WGH42 DDN02390\n*        BO    TSO030         NO                                  WGH42 DDN02400\n*        MVC   MESSAGE,PRTMSG INDICATE DATA SET PRINTED           WGH42 DDN02410\nTSO030   MVC   QDHLINE,HEADING MOVE IN HEADING                          DDN02420\n         LA    R1,QDMSG       ADDR OF MESSAGE LINE                      DDN02430\n         ST    R1,QDMSGA      STORE IN MESSAGE ADDR                     DDN02440\n         MVC   QDMLNG,=H'80'  MESSAGE LENGTH                            DDN02450\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE                   DDN02460\n         BALR  R14,R15        GO TO IT                                  DDN02470\n         LA    R2,PDBLENG(R2) LOOK AT NEXT PDDB                         DDN02480\n         CR    R2,R4          HAVE WE GONE PAST THE LAST PDDB           DDN02490\n         BL    TSO020         NO, TRY AGAIN                             DDN02500\nTSO040   L     R4,IOTIOTTR    DISK ADDR OF NEXT IOT                     DDN02510\n         B     TSO010         GO SEARCH THE NEXT IOT                    DDN02520\n*********************************************************************** DDN02530\n*                                                                     * DDN02540\n*   READ A BLOCK FROM HASPACE                                         * DDN02550\n*                                                                     * DDN02560\n*********************************************************************** DDN02570\nREAD     ST    R4,QCTRAK      STORE DISK ADDR                           DDN02580\n         LR    R1,R5          IOAREA ADDRESS                            DDN02590\n         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE          DDN02600\n         BALR  R14,R15        GO TO IT                                  DDN02610\n         BR    R8             RETURN TO CALLER                          DDN02620\n         SPACE 3                                                  ONL03 DDN02630\nBADIOT   EQU   *                                                        DDN02640\n         QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       ONL03 DDN02650\n         SPACE 2                                                  ONL03 DDN02660\n*********************************************************************** DDN02670\n*                                                                     * DDN02680\n*   MISCELLANY                                                        * DDN02690\n*                                                                     * DDN02700\n*********************************************************************** DDN02710\n         LTORG                                                          DDN02720\nMVCSTEP  MVC   STEPNAME(1),10(R4)                                       DDN02730\nMVCPROC  MVC   PROCSTEP(1),10(R4)                                 WGH   DDN02740\nMVCDDN   MVC   DDN(1),3(R7)                                             DDN02750\nHEADING  DC    CL12'STEPNAME  '                                   WGH   DDN02760\n         DC    CL68'PROCSTEP    DDNAME      DSID      LINES   CLASS'    DDN02770\nED4      DC    X'40202120'                                              DDN02780\nED5      DC    X'4020202120'                                            DDN02790\nED8      DC    X'4020202020202120'                                      DDN02800\nPRTMSG   DC    CL15'ALREADY PRINTED'                                    DDN02810\n         DROP  ,                   DROP ALL ADDRESSINGS           NERDC DDN02820\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023 DDN02830\nDDNAME   CSECT ,                                                  UF023 DDN02840\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01 DDN02850\n         $HASPEQU                                                       DDN02860\n         IFGRPL                                                         DDN02870\n         $BUFFER ,                                                      DDN02880\n         $TAB                                                           DDN02890\n         $JCT                                                           DDN02900\n         $PDDB                                                          DDN02910\n         $IOT                                                           DDN02920\n         QCOMMON                                                        DDN02930\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01 DDN02940\n         ORG   QDMSG                                                    DDN02950\nSTEPNAME DS    CL8                                                      DDN02960\n         DS    CL4                                                      DDN02970\nPROCSTEP DS    CL8                 SPACE FOR PROCSTEP NAME        WGH   DDN02980\n         DS    CL4                 ALSO SEE MODULE FINDPDDB(Q25)  WGH   DDN02990\nDDN      DS    CL8 END OF DATA. LAST REC #'                             DDN03000\n         DS    CL4                                                      DDN03010\nDSID     DS    CL4                                                      DDN03020\n         DS    CL4                                                      DDN03030\nDSRECCT  DS    CL8                                                      DDN03040\n         DS    CL4                                                      DDN03050\nDSCLASS  DS    CL1                                                      DDN03060\n         DS    CL6                                                      DDN03070\nMESSAGE  DS    CL15                                                     DDN03080\nWORK     DSECT                                                          DDN03090\n         DS    90F               5 SAVE AREAS                           DDN03100\nCONVERT  DS    D                                                        DDN03110\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023 DDN03120\n         END                                                            DDN03130\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DISPLAY": {"ttr": 3586, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DISPLAY  TITLE 'QUEUE COMMAND - 3270 DISPLAY ROUTINES'            ONL01\nDISPLAY  QSTART ,                  START DISPLAY CSECT ASSEMBLY   ONL01\n         PRINT GEN\n***********************************************************************\n* RNB CHANGES:                                                        *\n*     (1) RNB13 - MODIFICATIONS TO FIX PROBLEMS WITH TCAM FULL-SCREEN *\n*                 PROCESSING OF TEST-REQUEST, SYSTEM REQUEST, AND THE *\n*                 PA2/PA3 KEYS.                                       *\n*     (2) RNB14 - MODIFICATIONS TO FIX PROBLEMS FULL-SCREEN           *\n*                 PROCESSING. THIS ONE ALLOWS THE USER TO TYPE IN THE *\n*                 TOP COMMAND LINE WITHOUT QUEUE MISINTERPRETING WHAT *\n*                 WAS ENTERED. (TRY THE DO COMMAND FROM BOTH PLACES   *\n*                 WITHOUT THE MOD TO SEE THE EFFECT.)                 *\n***********************************************************************\n         GBLB  &QPFK          PF-KEY OPTION. DEFINED BY QSTART     ICBC\n         GBLB  &QNERDC                                            UF040\n         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA\n         L     R10,QVDSPL     ADDR OF DISPLAY WORK AREA\n         USING QCPRINT,R9     BASE REG FOR PRINT   WORK AREA       FCI*\n         L     R9,QVPRINT     ADDR OF PRINT   WORK AREA            FCI*\n***********************************************************************\n*                                                                     *\n*   CHECK FOR ROOM ON SCREEN                                          *\n*                                                                     *\n***********************************************************************\n         MVI   QDOVER,0       ZERO OUT THE PAGE OVERFLOW INDICATOR\n         MVI   QDPLUS,C' '    BLANK THE OVERFLOW INDICATOR\n         LH    R4,QDMLNG      LOAD MSG LENGTH\n         CH    R4,QDSCRLEN    IS THE MSG LENGTH > SCRSIZE?        UF003\n         BH    RETURN         YES. GO AWAY.\n         MVC   QPRSAVE,QDTLINE        SAVE SUBTITLE LINE ON ENTRY  FCI*\n         LTR   R4,R4          IS MSG LENGTH ZERO?\n         BZ    WRTSCR         YES. WRITE SCREEN.\n         MVI   QDPLUS,C'+'    INDICATE SCREEN OVERFLOW\n         AH    R4,QDNEXT      ADD CURRENT LOCATION ON SCREEN\n         CH    R4,QDSCRLEN    IS THERE ROOM ON THE SCREEN?        UF003\n         BH    WRTSCR         NO. WRITE SCREEN.\n***********************************************************************\n*                                                                     *\n*   MOVE THE MESSAGE TO THE SCREEN                                    *\n*                                                                     *\n***********************************************************************\nDSP2     LH    R7,QDMLNG      LOAD MESSAGE LENGTH\n         LTR   R7,R7          IS MESSAGE LENGTH ZERO?\n         BZ    RETURN         YES. RETURN.\n         LH    R4,QDNEXT      LOAD CURRENT SCREEN LINE NUMBER\n         LR    R1,R4          SAVE LINE NUMBER\n         LA    R4,QDLINE1(R4) LOAD ADDRESS OF NEXT LINE\n         L     R6,QDMSGA      LOAD ADDR OF MESSAGE\n         LH    R5,QDLNELEN    LENGTH MUST BE MULTIPLE OF LINESIZE UF003\nDSP3     CR    R5,R7          IS 5 NOT LESS THAN 7?\n         BNL   DSP4           YES. GO DO IT.\n         AH    R5,QDLNELEN    INCR BY LINE LENGTH                 UF003\n         B     DSP3           TRY AGAIN\nDSP4     AR    R1,R5          UPDATE LINE NUMBER\n         STH   R1,QDNEXT      STORE LINE NUMBER\n         MVCL  R4,R6          MOVE THE MESSAGE TO THE SCREEN\n***********************************************************************\n*                                                                     *\n*   RETURN TO CALLER                                                  *\n*                                                                     *\n***********************************************************************\nRETURN   QSTOP\n***********************************************************************\n*                                                                     *\n*   WRITE A FULL SCREEN, WAIT FOR REPLY                               *\n*                                                                     *\n***********************************************************************\nWRTSCR   LA    R1,QDLINE1     ENSURE PRINTABILITY                 UF003\n         LH    R15,QDSCRLEN   LENGTH TO XLATE                     UF003\n         LA    R14,255        SET FOR EXECUTE                     UF003\nWRTSCR1  CR    R15,R14        SEE IF ONLY ONE NEEDED              UF003\n         BNH   WRTSCRN        YES, DO IT                          UF003\n         EX    R14,WRTSCRTR   TRANSLATE PART OF BUFFER            UF003\n         LA    R1,1(R1,R14)   POINT TO NEXT SLOT                  UF003\n         SR    R15,R14        DROP FOR LENGTH DONE                UF003\n         BCTR  R15,0          END FOR EXECUTE FIX                 UF003\n         B     WRTSCR1        LOOP TILL DONE                      UF003\n         SPACE 1                                                  UF003\nWRTSCRTR TR    0(*-*,R1),TABLE  FIX UNPRINTABLES                  UF003\n         SPACE 1                                                  UF003\nWRTSCRN  BCTR  R15,0          DROP FOR EXECUTE                    UF003\n         LTR   R15,R15        TEST FOR NULL                       UF003\n         BM    *+8            SKIP IF NULL                        UF003\n         EX    R15,WRTSCRTR   TRANSLATE END OF BUFFER             UF003\n         SPACE 1                                                  UF003\nTPUTSCRN DS    0H                                                 UF003\n         TM    QFLAG1,QFLG1QUI QUIET MODE SET ?                   WGH\n         BO    CRTSAME        YES.. BYPASS TERMINAL OUTPUT        WGH\n         L     R1,QDOSZR0     CHECK TERM TYPE                     WGH\n         LTR   R1,R1          IS IT CRT                           WGH\n         BZ    NOTCRT         NO.. DO TTY OUTPUT                  WGH\n         LH    R6,QDLNELEN    GET LINESIZE                        WGH\n         BCTR  R6,0           REDUCE FOR EX                       WGH\n         LA    R5,QDSCREEN    START OF SCREEN                     WGH\n         AH    R5,QDSCRPLN    PLUS LENGTH OF BUFFER               WGH\nBLNKLOOP SH    R5,QDLNELEN    MINUS ONE LINE                      WGH\n         EX    R6,BLNKTST     IS THIS LINE BLANK                  WGH\n         BE    BLNKLOOP       YES... BACK UP SOME MORE            WGH\n         AH    R5,QDLNELEN    NO... ADD IT BACK IN                WGH\n         LA    R6,QDSCREEN    START OF SCREEEN BUFFER             WGH\n         SR    R5,R6          CALCULATE SIZE                      WGH\n*        LH    R0,QDSCRPLN    LOAD LENGTH FOR TPUT                UF003\n         TPUT  QDSCREEN,(5),FULLSCR,MF=(E,QTPUT)          WGH     UF003\n         B     CRTSAME        REJOIN LOGIC                        WGH\nBLNKTST  CLC   0(0,R5),=CL132' '      ALL BLANKS?                 WGH\nNOTCRT   EQU   *                                                  WGH\n*        TPUT  QUECMD,L'QUECMD,ASIS,MF=(E,QTOUT)                  WGH\n*        TPUT  QDTLINE,63,EDIT,MF=(E,QTPUT)                       WGH\n         MVI   QOUTLINE+1,5                    DATA + HEADER      WGH\n         MVI   QOUTLINE+4,C' '                 BLANK LINE         WGH\n         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=EDIT,MF=(E,PUTIOPL)\n         MVI   QOUTLINE+1,L'QUECMD+63+4        DATA + HEADER      WGH\n         MVC   QOUTLINE+4(L'QUECMD),QUECMD       DATA TO BUFFER   WGH\n         MVC   QOUTLINE+4+L'QUECMD(63),QDTLINE   DATA TO BUFFER   WGH\n         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=EDIT,MF=(E,PUTIOPL)\n*        TPUT  QDHLINE,79,EDIT,MF=(E,QTPUT)                       WGH\n         MVI   QOUTLINE+1,79+4         SIZE OF DATA + HEADER      WGH\n         MVC   QOUTLINE+4(79),QDHLINE  MOVE DATA TO BUFFER        WGH\n         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=EDIT,MF=(E,PUTIOPL)\n         LH    R6,QDLNELEN    GET LINESIZE                        WGH\n         BCTR  R6,0           REDUCE FOR EX                       WGH\n         LA    R5,QDLINE1     START OF DATA AREA                  WGH\n         AH    R5,QDSCRLEN    PLUS LENGTH OF DATA AREA            WGH\nBLNKLOP2 SH    R5,QDLNELEN    MINUS ONE LINE                      WGH\n         EX    R6,BLNKTST     IS THIS LINE BLANK                  WGH\n         BE    BLNKLOP2       YES.. BACK UP SOME MORE             WGH\n         AH    R5,QDLNELEN    NO... ADD IT BACK IN                WGH\n         LA    R6,QDLINE1     START OF DATA AREA                  WGH\n         SR    R5,R6          CALCULATE SIZE                      WGH\n         SR    R4,R4          CLEAR FOR DIVIDE                    WGH\n         LH    R6,QDLNELEN    GET LINESIZE FOR DIVIDE             WGH\n         DR    R4,R6          FIND NUMBER OF LINES TO OUTPUT      WGH\n         LR    R6,R5          LINES LEFT TO OUTPUT                WGH\n         LA    R5,QDLINE1     FIRST ONE                           WGH\n         LTR   R6,R6          CHECK FOR ZERO                      WGH\n         BP    MSGLOOP        NO.. DO IT                          WGH\n         LA    R6,1           YES. DO AT LEAST 1 EVEN IF BLANK    WGH\nMSGLOOP  EQU   *                                                  WGH\n*        TPUT  (R5),79,EDIT,MF=(E,QTPUT)                          WGH\n         MVI   QOUTLINE+1,79+4         SIZE OF DATA + HEADER      WGH\n         MVC   QOUTLINE+4(79),0(R5)    MOVE DATA TO BUFFER        WGH\n         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=EDIT,MF=(E,PUTIOPL)\n         AH    R5,QDLNELEN            BUMP LINE PTR               WGH\n         BCT   R6,MSGLOOP                                         WGH\nTYPROMPT EQU   *                                                  WGH\n         LA    R6,REPLY       ADDRESS OF DEFAULT REPLY            WGH\n         CLI   QDPLUS,C'+'    IS THERE MORE DATA?                 WGH\n         BNE   NOPLUS         NO.. LEAVE DEFAULT                  WGH\n         LA    R6,REPLY2      YES.. USE ALTERNATE                 WGH\nNOPLUS   EQU   *                                                  WGH\n*        TPUT  (R6),L'REPLY,ASIS,MF=(E,QTPUT)                    WGH\n         MVI   QOUTLINE+1,L'REPLY+4            DATA + HEADER      WGH\n         MVC   QOUTLINE+4(L'REPLY),0(R6)    DATA TO BUFFER        WGH\n         PUTLINE OUTPUT=(QOUTLINE,,,DATA),TERMPUT=ASIS,MF=(E,PUTIOPL)\nCRTSAME  EQU   *                                                  WGH\n         MVC   QDTLINE,QPRSAVE        RESTORE SUBTITLE INFO        FCI*\n         L     R1,QDOSZR0     CHECK TERM TYPE?                     WGH\n         LTR   R1,R1          FOR CRT OR NOT CRT                   WGH\n         BNZ   ISCRT          GO PROCESS FULL SCREEN MODE          WGH\n         XC    PFREPLY,PFREPLY  PREPARE FOR TTY/TTY-CLIST/BATCH    WGH\n         XC    QDREPLY,QDREPLY                                     WGH\n*        TGET  QDREPLY,63,EDIT,MF=(E,QTGET)                        WGH\nGETDATA  EQU   *                                                   WGH\n         TM    QFLAG2,QFLG2NSK     IS NOSTACK FLAG ON              WGH\n         BO    GETTERM             YES.. BYPASS STACK              WGH\n         GETLINE INPUT=ISTACK,TERMGET=EDIT,MF=(E,GETIOPL)          WGH\n         B     GOTDATA             PROCESS INPUT                   WGH\nGETTERM  GETLINE INPUT=TERM,TERMGET=EDIT,MF=(E,GETIOPL)            WGH\nGOTDATA  CH    R15,=H'16'     EOD FROM BATCH TSO OR CLIST ?        WGH\n         BE    GETDATA        YES.. TRY AGAIN                      WGH\n         CH    R15,=H'4'      ANY DATA TO PROCESS?                 WGH\n         BH    GETDATA        NO... TRY AGAIN                      WGH\n         BE    STACKIN        YES.. CMD FROM STACK                 WGH\n         TM    QFLAG2,QFLG2STK CMD FROM TERM/PREVIOUS FROM STACK ? WGH\n         BZ    EASYIN         NO.. CONTINUE                        WGH\n         NI    QFLAG2,255-QFLG2STK  FLAG CMD FROM TERMINAL         WGH\n         NI    QFLAG1,255-QFLG1QUI  RESET QUIET MODE               WGH\n         B     EASYIN              AND CONTINUE                    WGH\nSTACKIN  OI    QFLAG2,QFLG2STK      FLAG CMD FROM STACK            WGH\nEASYIN   L     R1,GETBLOCK+4  ADDRESS OF INPUT BUFFER              WGH\n         LH    R2,0(R1)       GET LENGTH OF INPUT                  WGH\n         SH    R2,=H'4'       MINUS HEADER                         WGH\n         CH    R2,=H'63'      MAX WE CAN TAKE                      WGH\n         BNH   *+8            SKIP RESET                           WGH\n         LA    R2,63          FORCE TO MAX                         WGH\n         STH   R2,QDRLNG      SAVE INPUT LENGTH                    WGH\n         LTR   R2,R2          TEST LENGTH FOR MOVE                 WGH\n         BZ    FREEBUF        NOTHING TO MOVE                      WGH\n         BCTR  R2,0           REDUCE FOR EX                        WGH\n         MVC   QDREPLY(0),4(R1)    MOVE DATA TO BUFFER             WGH\n         EX    R2,*-6              MOVE DATA TO BUFFER             WGH\nFREEBUF  LH    R0,0(R1)            PUT LENGTH  IN R0               WGH\n         O     R0,=X'01000000'     PUT SUBPOOL IN R0               WGH\n         FREEMAIN R,A=(1),LV=(0)   RELEASE BUFFER                  WGH\n*        CH    R15,=H'12'     IS INPUT LONGER THAN BUFFER          WGH\n*        BNE   NOCLEAR2       NO, CONTINUE                         WGH\n*        TCLEARQ INPUT        CLEAR INPUT QUEUE                    WGH\n*NOCLEAR2 STH   R1,QDRLNG      SAVE INPUT LENGTH                    WGH\n         B     INSANE                                              WGH\nISCRT    EQU   *                                                   WGH\n         LA    R6,QDREPLY                                          ICBC\n         XC    PFREPLY,PFREPLY                                     ICBC\n         XC    QDREPLY,QDREPLY                                     ICBC\n*        TGET  PFREPLY,69,ASIS,MF=(E,QTGET)\n*        CH    R15,=H'12'     IS INPUT LONGER THAN BUFFER?         ICBC\n*        BNE   NOCLEAR        NO. CONTINUE.                        ICBC\n*        TCLEARQ INPUT        CLEAR THE QUEUE                      ICBC\nGETCRT   EQU   *                                                   WGH\n         TM    QFLAG2,QFLG2NSK     IS NOSTACK FLAG ON              WGH\n         BO    GETCRTT             YES.. BYPASS STACK              WGH\n         GETLINE INPUT=ISTACK,TERMGET=ASIS,MF=(E,GETIOPL)          WGH\n         B     GOTCRT                                              WGH\nGETCRTT  GETLINE INPUT=TERM,TERMGET=ASIS,MF=(E,GETIOPL)            WGH\nGOTCRT   CH    R15,=H'16'     EOD FROM CLIST ?                     WGH\n         BE    GETCRT         YES.. GET NEXT INPUT                 WGH\n         CH    R15,=H'4'      ANY DATA TO PROCESS?                 WGH\n         BE    STACKIN        COMMAND FROM CLIST..                 WGH\n         BH    GETCRT         NO... TRY AGAIN                      WGH\n         TM    QFLAG2,QFLG2STK  CMD FROM TERM/PREVIOUS FROM STACK? WGH\n         BZ    CRTIN          NO.. CONTINUE                        WGH\n         NI    QFLAG2,255-QFLG2STK  YES.. RESET CMD FROM STACK     WGH\n         NI    QFLAG1,255-QFLG1QUI  RESET QUIET MODE               WGH\nCRTIN    L     R1,GETBLOCK+4  ADDRESS OF INPUT BUFFER              WGH\n         LH    R2,0(R1)       GET LENGTH OF INPUT                  WGH\n         SH    R2,=H'4'       MINUS HEADER                         WGH\n         CH    R2,=H'69'      MAX WE CAN TAKE                      WGH\n         BNH   *+8            SKIP RESET                           WGH\n         LA    R2,69          FORCE TO MAX                         WGH\n         LTR   R4,R2          SAVE INPUT LENGTH                    WGH\n         BZ    FREEBUF2       NOTHING TO MOVE                      WGH\n         BCTR  R2,0           REDUCE FOR EX                        WGH\n         MVC   PFREPLY(0),4(R1)    MOVE DATA TO BUFFER             WGH\n         EX    R2,*-6              MOVE DATA TO BUFFER             WGH\nFREEBUF2 LH    R0,0(R1)            PUT LENGTH  IN R0               WGH\n         O     R0,=X'01000000'     PUT SUBPOOL IN R0               WGH\n         FREEMAIN R,A=(1),LV=(0)   RELEASE BUFFER                  WGH\n         LR    R1,R4          PUT LENGTH IN R1                     WGH\nNOCLEAR  IC    R4,PFCODE                                           ICBC\n         XR    R5,R5                                               ICBC\n         CLI   PFCODE,X'F0'      TEST-REQ/SYS-REQ?                RNB13\n         BE    ENTKEY            /YES - TREAT AS ENTER            RNB13\n         CLI   PFCODE,X'01'      OTHER KIND OF SYS-REQ?           RNB13\n         BE    ENTKEY            /YES - TREAT AS ENTER            RNB13\n*        CLI   PFCODE,X'6E'      PA2?                      WGH    RNB13\n*        BE    TPUTSCRN          /YES - GO RESHOW SCREEN   WGH    RNB13\n         CLI   PFCODE,X'6B'      PA3?  (TCAM GENERATED)           RNB13\n         BE    TPUTSCRN          /YES - GO RESHOW SCREEN          RNB13\n         N     R4,=X'0000000F'   EXTRACT PF-KEY NUMBER             ICBC\n         CH    R4,=H'12'                                           ICBC\n         BH    ENTKEY           \"ENTER\" KEY                        ICBC\n         BCTR  R4,0                                                ICBC\n         SLL   R4,3              TIMES SIZE OF AN ENTRY           UF043\n         LA    R5,QDPFKTAB                                        UF043\n         LA    R5,0(R4,R5)                                         ICBC\n         MVC   QDREPLY(8),0(R5)  MOVE PF-KEY VALUE                UF043\n         LA    R5,8                                               UF043\n         LA    R6,6(,R6)                                          UF043\n         SH    R1,=H'3'          ALLOW USER TO INPUT ON EITHER    UF043\n         BZ    NOTXT             THE TOP OR BOTTOM COMMAND LINE   RNB14\n         MVC   0(57,R6),PFTXT                                     UF043\n         LA    R5,6                                               UF043\n         SH    R1,=H'3'                                           UF043\n         B     NOTXT                                              RNB14\nENTKEY   EQU   *                                                   ICBC\n         SH    R1,=H'3'                                            ICBC\n         BZ    NOTXT                                               ICBC\n         MVC   0(63,R6),PFTXT                                     RNB14\n         SH    R1,=H'3'                                            ICBC\nNOTXT    LA    R1,0(R5,R1)                                         ICBC\n         STH   R1,QDRLNG      STORE LENGTH OF REPLY                ICBC\nINSANE   OC    QDREPLY,QBLANK     UPPERCASE THE COMMAND            FCI*\n         CLC   QDREPLY(2),=CL2'PR' POSSIBLE PRINT COMMAND      PWF FCI*\n         BNE   CLSCRN             NOPE..SPLIT NORMALLY             FCI*\n*                                                                  FCI*\n         L     R15,=V(PRINT)  FETCH PRINT ENTRY ADDRESS            FCI*\n         BALR  R14,R15        AND CALL HIM                         FCI*\n         LTR   R15,R15        HOW IS HIS RETURN CODE               FCI*\n         BNZ   CLSCRN         NOTHING TO REPORT                    FCI*\n*                                                                  FCI*\n         B     TPUTSCRN       GO REPOST SCREEN                     FCI*\nCLSCRN   LA    R4,QDLINE1     LOAD ADDRESS OF FIRST LINE           FCI*\n         LH    R5,QDSCRLEN    LOAD LENGTH OF SCREEN               UF003\n         SR    R6,R6          NO SENDING FIELD NEEDED              FCI*\n         STH   R6,QDNEXT      STORE ZERO IN LINE NUMBER            FCI*\n         SR    R7,R7          FILL SCREEN WITH NULLS               FCI*\n         MVCL  R4,R6          CLEAR THE SCREEN                     FCI*\n*\n         LH    R1,QDRLNG      STORE LENGTH OF REPLY\n         LTR   R1,R1          WAS THERE A RESPONSE FROM USER?\n         BNZ   INTER          YES. INTERRUPT PROCESSING.\n         MVI   QDOVER,1       INDICATE PAGE OVERFLOW\n         B     DSP2           CONTINUE PROCESSING\nINTER    L     R13,QFRSTSA    GO BACK TO MAIN MODULE\n         LM    R14,R12,12(R13) RESTORE REGISTERS FROM FIRST SAVEAREA\n         BR    R10            ADDRESS OF INTERRUPT HANDLER IN QUEUE\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nREPLY    DC    C'REPLY - '    TTY PROMPT                          WGH\nREPLY2   DC    C'REPLY + '    TTY PROMPT                          WGH\nQUECMD   DC    C'QUEUE COMMAND - ' TTY/BATCH TSO PROMPT           WGH\n* TABLE OF PRINTABLE CHARACTERS\nTABLE    DC    CL64' '\n         DC    191AL1(*-TABLE)  REST OF TABLE IS OK               UF003\n         DC    C' '              EXCEPT FOR X'FF'                 UF031\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "DISPLAYO": {"ttr": 3592, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "DISPLAY  TITLE 'QUEUE COMMAND - 3270 DISPLAY ROUTINES'            ONL01\nDISPLAY  QSTART ,                  START DISPLAY CSECT ASSEMBLY   ONL01\n***********************************************************************\n* RNB CHANGES:                                                        *\n*     (1) RNB13 - MODIFICATIONS TO FIX PROBLEMS WITH TCAM FULL-SCREEN *\n*                 PROCESSING OF TEST-REQUEST, SYSTEM REQUEST, AND THE *\n*                 PA2/PA3 KEYS.                                       *\n*     (2) RNB14 - MODIFICATIONS TO FIX PROBLEMS FULL-SCREEN           *\n*                 PROCESSING. THIS ONE ALLOWS THE USER TO TYPE IN THE *\n*                 TOP COMMAND LINE WITHOUT QUEUE MISINTERPRETING WHAT *\n*                 WAS ENTERED. (TRY THE DO COMMAND FROM BOTH PLACES   *\n*                 WITHOUT THE MOD TO SEE THE EFFECT.)                 *\n***********************************************************************\n         GBLB  &QPFK          PF-KEY OPTION. DEFINED BY QSTART     ICBC\n         GBLB  &QNERDC                                            UF040\n         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA\n         L     R10,QVDSPL     ADDR OF DISPLAY WORK AREA\n         USING QCPRINT,R9     BASE REG FOR PRINT   WORK AREA       FCI*\n         L     R9,QVPRINT     ADDR OF PRINT   WORK AREA            FCI*\n***********************************************************************\n*                                                                     *\n*   CHECK FOR ROOM ON SCREEN                                          *\n*                                                                     *\n***********************************************************************\n         MVI   QDOVER,0       ZERO OUT THE PAGE OVERFLOW INDICATOR\n         MVI   QDPLUS,C' '    BLANK THE OVERFLOW INDICATOR\n         LH    R4,QDMLNG      LOAD MSG LENGTH\n         CH    R4,QDSCRLEN    IS THE MSG LENGTH > SCRSIZE?        UF003\n         BH    RETURN         YES. GO AWAY.\n         MVC   QPRSAVE,QDTLINE        SAVE SUBTITLE LINE ON ENTRY  FCI*\n         LTR   R4,R4          IS MSG LENGTH ZERO?\n         BZ    WRTSCR         YES. WRITE SCREEN.\n         MVI   QDPLUS,C'+'    INDICATE SCREEN OVERFLOW\n         AH    R4,QDNEXT      ADD CURRENT LOCATION ON SCREEN\n         CH    R4,QDSCRLEN    IS THERE ROOM ON THE SCREEN?        UF003\n         BH    WRTSCR         NO. WRITE SCREEN.\n***********************************************************************\n*                                                                     *\n*   MOVE THE MESSAGE TO THE SCREEN                                    *\n*                                                                     *\n***********************************************************************\nDSP2     LH    R7,QDMLNG      LOAD MESSAGE LENGTH\n         LTR   R7,R7          IS MESSAGE LENGTH ZERO?\n         BZ    RETURN         YES. RETURN.\n         LH    R4,QDNEXT      LOAD CURRENT SCREEN LINE NUMBER\n         LR    R1,R4          SAVE LINE NUMBER\n         LA    R4,QDLINE1(R4) LOAD ADDRESS OF NEXT LINE\n         L     R6,QDMSGA      LOAD ADDR OF MESSAGE\n         LH    R5,QDLNELEN    LENGTH MUST BE MULTIPLE OF LINESIZE UF003\nDSP3     CR    R5,R7          IS 5 NOT LESS THAN 7?\n         BNL   DSP4           YES. GO DO IT.\n         AH    R5,QDLNELEN    INCR BY LINE LENGTH                 UF003\n         B     DSP3           TRY AGAIN\nDSP4     AR    R1,R5          UPDATE LINE NUMBER\n         STH   R1,QDNEXT      STORE LINE NUMBER\n         MVCL  R4,R6          MOVE THE MESSAGE TO THE SCREEN\n***********************************************************************\n*                                                                     *\n*   RETURN TO CALLER                                                  *\n*                                                                     *\n***********************************************************************\nRETURN   QSTOP\n***********************************************************************\n*                                                                     *\n*   WRITE A FULL SCREEN, WAIT FOR REPLY                               *\n*                                                                     *\n***********************************************************************\nWRTSCR   LA    R1,QDLINE1     ENSURE PRINTABILITY                 UF003\n         LH    R15,QDSCRLEN   LENGTH TO XLATE                     UF003\n         LA    R14,255        SET FOR EXECUTE                     UF003\nWRTSCR1  CR    R15,R14        SEE IF ONLY ONE NEEDED              UF003\n         BNH   WRTSCRN        YES, DO IT                          UF003\n         EX    R14,WRTSCRTR   TRANSLATE PART OF BUFFER            UF003\n         LA    R1,1(R1,R14)   POINT TO NEXT SLOT                  UF003\n         SR    R15,R14        DROP FOR LENGTH DONE                UF003\n         BCTR  R15,0          END FOR EXECUTE FIX                 UF003\n         B     WRTSCR1        LOOP TILL DONE                      UF003\n         SPACE 1                                                  UF003\nWRTSCRTR TR    0(*-*,R1),TABLE  FIX UNPRINTABLES                  UF003\n         SPACE 1                                                  UF003\nWRTSCRN  BCTR  R15,0          DROP FOR EXECUTE                    UF003\n         LTR   R15,R15        TEST FOR NULL                       UF003\n         BM    *+8            SKIP IF NULL                        UF003\n         EX    R15,WRTSCRTR   TRANSLATE END OF BUFFER             UF003\n         SPACE 1                                                  UF003\nTPUTSCRN DS    0H                                                 UF003\n         LH    R0,QDSCRPLN    LOAD LENGTH FOR TPUT                UF003\n         TPUT  QDSCREEN,(0),FULLSCR,MF=(E,QTPUT)                  UF003\n         MVC   QDTLINE,QPRSAVE        RESTORE SUBTITLE INFO        FCI*\n         AIF  (&QPFK).PFK1    SKIP NON-PFK CODE                    ICBC\n         TGET  QDREPLY,63,EDIT,MF=(E,QTGET)\n         CH    R15,=H'12'     IS INPUT LONGER THAN BUFFER?\n         BNE   NOCLEAR        NO. CONTINUE.\n         TCLEARQ INPUT        CLEAR THE QUEUE\nNOCLEAR  STH   R1,QDRLNG      STORE LENGTH OF REPLY\n         AGO   .PFK2                                               ICBC\n.PFK1    ANOP                                                      ICBC\n         LA    R6,QDREPLY                                          ICBC\n         XC    PFREPLY,PFREPLY                                     ICBC\n         XC    QDREPLY,QDREPLY                                     ICBC\n         TGET  PFREPLY,69,ASIS,MF=(E,QTGET)\n         CH    R15,=H'12'     IS INPUT LONGER THAN BUFFER?         ICBC\n         BNE   NOCLEAR        NO. CONTINUE.                        ICBC\n         TCLEARQ INPUT        CLEAR THE QUEUE                      ICBC\nNOCLEAR  IC    R4,PFCODE                                           ICBC\n         XR    R5,R5                                               ICBC\n         CLI   PFCODE,X'F0'      TEST-REQ/SYS-REQ?                RNB13\n         BE    ENTKEY            /YES - TREAT AS ENTER            RNB13\n         CLI   PFCODE,X'01'      OTHER KIND OF SYS-REQ?           RNB13\n         BE    ENTKEY            /YES - TREAT AS ENTER            RNB13\n         CLI   PFCODE,X'6E'      PA2?                             RNB13\n         BE    TPUTSCRN          /YES - GO RESHOW SCREEN          RNB13\n         CLI   PFCODE,X'6B'      PA3?  (TCAM GENERATED)           RNB13\n         BE    TPUTSCRN          /YES - GO RESHOW SCREEN          RNB13\n         N     R4,=X'0000000F'   EXTRACT PF-KEY NUMBER             ICBC\n         CH    R4,=H'12'                                           ICBC\n         BH    ENTKEY           \"ENTER\" KEY                        ICBC\n         BCTR  R4,0                                                ICBC\n         SLL   R4,3              TIMES SIZE OF AN ENTRY           UF043\n         LA    R5,QDPFKTAB                                        UF043\n         LA    R5,0(R4,R5)                                         ICBC\n         MVC   QDREPLY(8),0(R5)  MOVE PF-KEY VALUE                UF043\n         LA    R5,8                                               UF043\n         LA    R6,6(,R6)                                          UF043\n         SH    R1,=H'3'          ALLOW USER TO INPUT ON EITHER    UF043\n         BZ    NOTXT             THE TOP OR BOTTOM COMMAND LINE   RNB14\n         MVC   0(57,R6),PFTXT                                     UF043\n         LA    R5,6                                               UF043\n         SH    R1,=H'3'                                           UF043\n         B     NOTXT                                              RNB14\nENTKEY   EQU   *                                                   ICBC\n         SH    R1,=H'3'                                            ICBC\n         BZ    NOTXT                                               ICBC\n         MVC   0(63,R6),PFTXT                                     RNB14\n         SH    R1,=H'3'                                            ICBC\nNOTXT    LA    R1,0(R5,R1)                                         ICBC\n         STH   R1,QDRLNG      STORE LENGTH OF REPLY                ICBC\n.PFK2    ANOP                                                      ICBC\n         OC    QDREPLY,QBLANK     UPPERCASE THE COMMAND            FCI*\n         CLC   QDREPLY(2),=CL2'PR' POSSIBLE PRINT COMMAND      PWF FCI*\n         BNE   CLSCRN             NOPE..SPLIT NORMALLY             FCI*\n*                                                                  FCI*\n         L     R15,=V(PRINT)  FETCH PRINT ENTRY ADDRESS            FCI*\n         BALR  R14,R15        AND CALL HIM                         FCI*\n         LTR   R15,R15        HOW IS HIS RETURN CODE               FCI*\n         BNZ   CLSCRN         NOTHING TO REPORT                    FCI*\n*                                                                  FCI*\n         B     TPUTSCRN       GO REPOST SCREEN                     FCI*\nCLSCRN   LA    R4,QDLINE1     LOAD ADDRESS OF FIRST LINE           FCI*\n         LH    R5,QDSCRLEN    LOAD LENGTH OF SCREEN               UF003\n         SR    R6,R6          NO SENDING FIELD NEEDED              FCI*\n         STH   R6,QDNEXT      STORE ZERO IN LINE NUMBER            FCI*\n         SR    R7,R7          FILL SCREEN WITH NULLS               FCI*\n         MVCL  R4,R6          CLEAR THE SCREEN                     FCI*\n*\n         LH    R1,QDRLNG      STORE LENGTH OF REPLY\n         LTR   R1,R1          WAS THERE A RESPONSE FROM USER?\n         BNZ   INTER          YES. INTERRUPT PROCESSING.\n         MVI   QDOVER,1       INDICATE PAGE OVERFLOW\n         B     DSP2           CONTINUE PROCESSING\nINTER    L     R13,QFRSTSA    GO BACK TO MAIN MODULE\n         LM    R14,R12,12(R13) RESTORE REGISTERS FROM FIRST SAVEAREA\n         BR    R10            ADDRESS OF INTERRUPT HANDLER IN QUEUE\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\n* TABLE OF PRINTABLE CHARACTERS\nTABLE    DC    CL64' '\n         DC    191AL1(*-TABLE)  REST OF TABLE IS OK               UF003\n         DC    C' '              EXCEPT FOR X'FF'                 UF031\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FINDJOB": {"ttr": 3596, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "FINDJOB  TITLE 'QUEUE COMMAND - LOCATE JQE, JCT, AND IOT BY JOBNAME'\nFINDJOB  QSTART ,                  START FINDJOB CSECT ASSEMBLY   ONL01\n         GBLB   &QNERDC        NERDC OPTION                       UF035\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING WORK,R13       LOCAL WORK AREA\n         MVI   SLID#,0        CLEAR ID NUMBER                     UF035\n         CLC   =C'SL',QSUBNAME SYSLOG COMMAND?                    UF035\n         BE    SLIDNCK        YES, SKIP DSID CHECK                UF035\n         LH    R1,QLNG1       LENGTH OF PARAMETER FIELD\n         SH    R1,=H'1'       IS THE LENGTH ZERO?\n         BM    JOBAGAIN       YES. TRY JOBAGAIN                   WGH\n         BM    TILT           YES. TILT.\nSLIDNCK  DS    0H                                                 UF035\n******************************************************************UF007\n*                                                                 UF007\n*   ALLOW JOBNAME = \"*\" TO SIGNIFY CURRENT JOB & SKIP CKPT READ   UF007\n*                                                                 UF007\n******************************************************************UF007\n         CLI   QPARM1,C'*'    WANT CURRENT JOB AGAIN?             UF007\n         BE    JOBAGAIN       YES, SKIP CKPT READ                 UF007\n         CLI   QPARM1,C'='    WANT CURRENT JOB AGAIN?             WGH\n         BE    JOBAGAIN       YES, SKIP CKPT READ                 WGH\n******************************************************************UF006\n*                                                                 UF006\n*   CALL - READ JES2 CHECKPOINT ROUTINE                           UF006\n*                                                                 UF006\n******************************************************************UF006\nCALLCKPT L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006\n         BALR  R14,R15        GO TO IT                            UF006\n         MVI   SLID#,0        CLEAR ID NUMBER                     UF035\n******************************************************************UF035\n*                                                                 UF035\n*        SPECIAL PROCESSING IF THE COMMAND WAS SYSLOG.            UF035\n*                                                                 UF035\n******************************************************************UF035\n         CLC   =C'SL',QSUBNAME SYSLOG COMMAND?                    UF035\n         BNE   SLZ            NO, BACK TO NORMAL PROCESSING       UF035\n         ICM   R1,3,QLNG1     WAS A PARAMETER SPECIFIED?          UF035\n         BZ    SLTHIS         NO, WANT THIS SYSTEMS SYSLOG        UF035\n         CLI   QPARM1,C'0'    NUMERIC JOB NUMBER?                 UF035\n         BNL   SLZ            YES, MUST BE THE NUMBER - DO NORMAL UF035\n         CLC   QPARM1,=CL8'SYSLOG' WANT THIS SYSTEMS SYSLOG?      UF035\n         BE    SLTHIS         YES, DO IT                          UF035\nSLIDPRE  LA    R1,QSYSID      POINT TO SYSID TABLE                UF035\n         LR    R14,R1         POINT TO SYSID TABLE                UF035\n         LA    R15,7          MAX NUMBER OF SYSTEMS               UF035\nSLTESTID LA    R1,8(,R1)      BUMP TO NEXT ENTRY                  UF035\n         CLC   QPARM1(4),0(R1) DOES PARM MATCH SYSTEM ID?         UF035\n         BE    SLGOTID        YES, GET OUT OF LOOP                UF035\n         BCT   R15,SLTESTID   LOOP FOR ALL ID'S                   UF035\n         B     SLZ            NOT FOUND - DO NORMAL PROCESSING    UF035\nSLGOTID  SR    R1,R14         OFFSET TO ENTRY                     UF035\n         SRL   R1,3           DIVIDE BY 8                         UF035\n         STC   R1,SLID#       SAVE FOR LATER TEST                 UF035\n         MVC   QPARM1,=CL8'SYSLOG' SET JOBNAME TO MATCH ON        UF035\n         MVI   QLNG1+L'QLNG1-1,8   SET LENGTH OF NAME             UF035\n         B     SLZ            DONE FOR NOW                        UF035\nSLTHIS   DS    0H             NEED TO RETURN THIS SYSTEMS SYSLOG  UF035\n         L     R1,16          POINT TO CVT                        UF035\n         ICM   R1,15,CVTSMCA-CVTMAP(R1) POINT TO SMF CONTROL AREA UF035\n         BZ    SLZ            NONE, DO NORMAL PROCESSING          UF035\n         MVC   QPARM1(4),SMCASID-SMCABASE(R1)  MOVE SID TO AREA   UF035\n         AIF   (NOT &QNERDC).SLNNER  SKIP IF NOT NERDC            UF035\n         OI    QPARM1+3,X'F0' CHANGE A->1, B->2                   UF035\n.SLNNER  ANOP                                                     UF035\n         B     SLIDPRE        AND GO TO COMMON CODE               UF035\nSLZ      DS    0H                                                 UF035\n***********************************************************************\n*                                                                     *\n*   DETERMINE IF SEARCH IS BY JOBNUMBER OR JOBNAME                    *\n*                                                                     *\n***********************************************************************\n         LH    R1,QLNG1       LENGTH OF PARAMETER FIELD\n         SH    R1,=H'1'       IS THE LENGTH ZERO?\n         BM    TILT           YES. TILT.\n         CLI   QPARM1,C'0'    IS THE FIRST CHARACTER NUMERIC?\n         BL    JOBNAME        NO. SEARCH BY JOBNAME\n         MVC   QFZONES,QFZONE INITIALIZE NUMERIC TEST\n         EX    R1,MVZ         MOVE THE ZONES FOR VALIDITY CHECK\n         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?\n         BNE   TILT           NO. TILT.\n         EX    R1,PACK        PACK THE FIELD\n         CVB   R5,CONVERT     CONVERT TO BINARY\n***********************************************************************\n*                                                                     *\n*   LOCATE JQE BY JOBNAME                                             *\n*                                                                     *\n***********************************************************************\nJOBNAME  L     R2,QCJQHEAD    LOAD ADDR OF JQT\n         USING JQTDSECT,R2    BASE REG FOR JQT\n         LA    R2,JQTOUT      FIRST JQE QUEUE\n         LA    R1,JQTQMAX     MAXIMUM NUMBER OF QUEUES\n         DROP  R2\nNEXTJQT  L     R3,0(R2)       OFFSET TO FIRST JQE IN QUEUE        UF020\nNEXTJQE  N     R3,=A(X'00FFFFFF')  TEST FOR END OF CHAIN          UF020\n         BZ    ENDJQE         END OF QUEUE\n         A     R3,QCJQTA      ADD BASE TO OFFSET\n         USING JQE,R3         BASE REG FOR JQE\n         CLI   QPARM1,C'0'    IS SEARCH BY JOBNUMBER?\n         BL    CLCNAME        NO. SEARCH BY JOBNAME.\n         CH    R5,JQEJOBNO    IS THIS THE RIGHT JOBNUMBER?\n         BNE   NOMATCH        NO. TRY NEXT JQE.\n         B     FOUND          YES. PROCESS IT.\nCLCNAME  CLC   QPARM1,JQEJNAME IS THIS THE RIGHT JOBNAME?\n         BE    FOUND          YES. PROCESS IT.\nNOMATCH  L     R3,JQENEXT     NO. TRY NEXT ENTRY.                 UF020\n         B     NEXTJQE        LOOP                                UF020\nENDJQE   LA    R2,4(R2)       TRY NEXT QUEUE                      UF020\n         BCT   R1,NEXTJQT     LOOP IF NOT LAST QUEUE\nTILT     QTILT '*** JOBNAME NOT FOUND OR INVALID ***'\n         SPACE 1                                                  UF007\nJOBAGAIN EQU   *                                                  WGH\n         MVI   QPARM1,C'*'    SET SAME JOB REFERENCE              WGH\n         MVI   QLNG1+1,X'01'  SET LENGTH TO 1                     WGH\n         L     R3,QCJQEA      PRIME JQE ADDRESS                   UF007\n         LTR   R3,R3          ANYONE HOME?                        UF034\n         BNZ   FOUND          YES, CONTINUE                       UF034\n         QTILT '*** YOU MUST SPECIFY A JOBNAME OR NUMBER BEFORE USING \"+\n               *\" ***'                                            UF034\n         SPACE 1                                                  ONL03\nFOUND    ST    R3,QCJQEA      SAVE THE ADDRESS\n         CLI   SLID#,0        LOOKING FOR A SPECIFIC SYSLOG?      UF035\n         BE    FOUND1         NO, CONTINUE                        UF035\n         IC    R14,SLID#      GET DESIRED ID                      UF035\n         IC    R15,JQEFLAG1   GET SYSTEM ID OF THIS JOB           UF035\n         N     R14,=A(X'0000000F') MASK OFF EXTRA STUFF           UF035\n         N     R15,=A(X'0000000F') MASK OFF EXTRA STUFF           UF035\n         CR    R14,R15        SEE IF IT IS THE ONE WE WANTED      UF035\n         BNE   NOMATCH        NOPE, TRY AGAIN                     UF035\nFOUND1   DS    0H                                                 UF035\n         LR    R4,R3          SAVE THE ADDRESS FOR COMPARE        RNB22\n         SPACE 2                                                  ONL03\n******************************************************************ONL03\n*                                                                 ONL03\n*   READ THE JCT                                                  ONL03\n*                                                                 ONL03\n******************************************************************ONL03\n         SPACE 1                                                  ONL03\n         OC    JQETRAK,JQETRAK     IS THERE AN ADDRESS            UF046\n         BNZ   JCTOK               YES, CONTINUE                  UF046\n         CLC   =C'JQE',QSUBNAME    IS IT JQE COMMAND?             UF046\n         BE    STOP                YES, ALLOW TO CONTINUE         UF046\n         B     TILT                NO, ABORT                      UF046\nJCTOK    DS    0H                                                 UF046\n         MVC   QCTRAK,JQETRAK DISK ADDR OF JCT\n         L     R1,QCJCTA           ADDRESS OF JCT                 UF046\n         AL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16\n         XC    0(4,R1),0(R1)       CLEAR START OF AREA            UF046\n         NI    QFLAG1,255-QFLG1SDS CLEAR THE SYSTEM DS JOB FLAG   ONL14\n         SPACE 1                                                  ONL14\n         TM    JQEFLAG3,JQE3SYSD   JQETRAK POINT TO IOT?          UF046\n         BNO   READJCT             NO, GO READ JCT                   CL\n         SPACE 1                                                  ONL14\n         OI    QFLAG1,QFLG1SDS     SHOW IT'S A SYSTEM DS JOB      ONL14\n         SPACE 1                                                  ONL14\n         MVC   QPJOBID(2),=C'RM'   SET                               CL\n         MVC   QPJOBID+2(2),JQEJOBNO JOB KEY                         CL\n         B     CKAUTH              SKIP JCT READ                  ONL02\n         DROP  R3\nREADJCT  L     R3,QCJCTA      ADDR OF IOAREA FOR JCT                 CL\n         LR    R1,R3          PARM FOR READSPC\n         AL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16\n         L     R15,=V(READSPC) ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\n         USING JCT,R3         BASE REG FOR JCT                    ONL16\n         USING JQE,R4         BASE FOR JQE                        RNB22\n         SPACE 2                                                  ONL03\n******************************************************************ONL03\n*                                                                 ONL03\n*   ENSURE THAT THE CORRECT JCT WAS READ                          ONL03\n*                                                                 ONL03\n******************************************************************ONL03\n         SPACE 1                                                  ONL03\n         CLC   JCTID,=CL4'JCT'     DID WE READ A JCT ?            ONL03\n         BNE   BADJCT              TILT IF NO                     ONL03\n         CLC   JCTJNAME,JQEJNAME   DOES JOBNAME MATCH ?           ONL03\n         BNE   BADJCT              TILT IF NO                     ONL03\n         SPACE 1                                                  ONL03\n         LA    R1,JQE              ADDR OF JQE                    ONL03\n         SL    R1,QCJQTA           COMPUTE THE JQE OFFSET         ONL03\n         CL    R1,JCTJQE           DOES OFFSET MATCH THE JCT'S ?  ONL03\n         BNE   BADJCT              TILT IF NO                     ONL03\n         SPACE 1                                                  ONL03\n         CLI   QPARM1,C'*'         WAS CURRENT JOB REQUESTED ?    ONL03\n         BNE   NEWJOB              SKIP IF NO                     ONL03\n         CLC   QPJOBID,JCTJBKEY    DOES JOB KEY MATCH ?           ONL03\n         BE    VALIDJCT            SKIP IF YES                    ONL03\n         SPACE 1                                                  ONL03\nBADJCT   QTILT '*** JOB HAS PURGED (OR JCT IS INVALID) ***'       ONL03\n         SPACE 1                                                  ONL03\nNEWJOB   DS    0H                  A NEW JOB WAS REQUESTED        ONL03\n         MVC   QPJOBID,JCTJBKEY    SAVE JOB KEY FOR FUTURE CHECKS ONL03\n         MVC   QPDSID,=X'FFFF'     NULLIFY DATASET ID               SBG\n         MVC   QOLDDSID,=X'FFFF'   NULLIFY PREVIOUS DSID            SBG\n         SPACE 1                                                  ONL03\nVALIDJCT DS    0H                  THE CORRECT JCT WAS READ       ONL03\n         SPACE 2                                                  ONL03\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nCKAUTH   DS    0H                  SEE IF USER MAY LOOK AT JOB    ONL02\n         QAUTHCK QAFINDJ           PERFORM JOB AUTHORIZATION      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL03\n*                                                                 ONL03\n*   READ JOB'S ALLOCATION IOT                                     ONL03\n*                                                                 ONL03\n*    NOTE:  QUEUE SUB-COMMANDS MUST VALIDATE THIS IOT BEFORE USE. ONL03\n*                                                                 ONL03\n******************************************************************ONL03\n         SPACE 1                                                  ONL03\n         TM    QFLAG1,QFLG1SDS     IS THIS A SYSTEM DS JOB?       ONL03\n         BO    GOTMTTR             SKIP IF YES                    ONL03\n         MVC   QCTRAK,JCTIOT       GET MTTR FOR IOT               ONL03\nGOTMTTR  DS    0H                                                 ONL03\n         SPACE 1                                                  ONL03\n         DROP  R3                  KILL JCT ADDRESSABILITY        ONL03\n         SPACE 1                                                  ONL03\n         L     R1,QCIOTA      ADDR OF IOAREA FOR IOT\n         L     R15,=V(READSPC) ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\n         SPACE 2                                                  ONL03\n******************************************************************ONL03\n*                                                                 ONL03\n*   RETURN TO CALLER                                              ONL03\n*                                                                 ONL03\n******************************************************************ONL03\n         SPACE 1                                                  ONL03\nSTOP     QSTOP\n         SPACE 2                                                  ONL03\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL03\nMVZ      MVZ   QFZONES(1),QPARM1 CHECK FOR NUMERIC\nPACK     PACK  CONVERT,QPARM1(1) CONVERT TO BINARY\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nFINDJOB  CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $BUFFER ,                                                 ONL16\n         IFGRPL\n         $JQE\n         $JCT\nTABLNGTH EQU   0                                                  UF046\n         $IOT  ,                                                  UF046\n         $JQT\n         CVT   DSECT=YES                                          UF035\n         IEESMCA ,                                                UF035\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nWORK     DSECT\n         DS    72C\nCONVERT  DS    D\nSLID#    DS    X                   SYSTEM ID OF DESIRED SYSLOG    UF035\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FINDJOBO": {"ttr": 3845, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "FINDJOB  TITLE 'QUEUE COMMAND - LOCATE JQE, JCT, AND IOT BY JOBNAME'\nFINDJOB  QSTART ,                  START FINDJOB CSECT ASSEMBLY   ONL01\n         GBLB   &QNERDC        NERDC OPTION                       UF035\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING WORK,R13       LOCAL WORK AREA\n         MVI   SLID#,0        CLEAR ID NUMBER                     UF035\n         CLC   =C'SL',QSUBNAME SYSLOG COMMAND?                    UF035\n         BE    SLIDNCK        YES, SKIP DSID CHECK                UF035\n         LH    R1,QLNG1       LENGTH OF PARAMETER FIELD\n         SH    R1,=H'1'       IS THE LENGTH ZERO?\n         BM    TILT           YES. TILT.\nSLIDNCK  DS    0H                                                 UF035\n******************************************************************UF007\n*                                                                 UF007\n*   ALLOW JOBNAME = \"*\" TO SIGNIFY CURRENT JOB & SKIP CKPT READ   UF007\n*                                                                 UF007\n******************************************************************UF007\n         CLI   QPARM1,C'*'    WANT CURRENT JOB AGAIN?             UF007\n         BE    JOBAGAIN       YES, SKIP CKPT READ                 UF007\n******************************************************************UF006\n*                                                                 UF006\n*   CALL - READ JES2 CHECKPOINT ROUTINE                           UF006\n*                                                                 UF006\n******************************************************************UF006\nCALLCKPT L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006\n         BALR  R14,R15        GO TO IT                            UF006\n         MVI   SLID#,0        CLEAR ID NUMBER                     UF035\n******************************************************************UF035\n*                                                                 UF035\n*        SPECIAL PROCESSING IF THE COMMAND WAS SYSLOG.            UF035\n*                                                                 UF035\n******************************************************************UF035\n         CLC   =C'SL',QSUBNAME SYSLOG COMMAND?                    UF035\n         BNE   SLZ            NO, BACK TO NORMAL PROCESSING       UF035\n         ICM   R1,3,QLNG1     WAS A PARAMETER SPECIFIED?          UF035\n         BZ    SLTHIS         NO, WANT THIS SYSTEMS SYSLOG        UF035\n         CLI   QPARM1,C'0'    NUMERIC JOB NUMBER?                 UF035\n         BNL   SLZ            YES, MUST BE THE NUMBER - DO NORMAL UF035\n         CLC   QPARM1,=CL8'SYSLOG' WANT THIS SYSTEMS SYSLOG?      UF035\n         BE    SLTHIS         YES, DO IT                          UF035\nSLIDPRE  LA    R1,QSYSID      POINT TO SYSID TABLE                UF035\n         LR    R14,R1         POINT TO SYSID TABLE                UF035\n         LA    R15,7          MAX NUMBER OF SYSTEMS               UF035\nSLTESTID LA    R1,8(,R1)      BUMP TO NEXT ENTRY                  UF035\n         CLC   QPARM1(4),0(R1) DOES PARM MATCH SYSTEM ID?         UF035\n         BE    SLGOTID        YES, GET OUT OF LOOP                UF035\n         BCT   R15,SLTESTID   LOOP FOR ALL ID'S                   UF035\n         B     SLZ            NOT FOUND - DO NORMAL PROCESSING    UF035\nSLGOTID  SR    R1,R14         OFFSET TO ENTRY                     UF035\n         SRL   R1,3           DIVIDE BY 8                         UF035\n         STC   R1,SLID#       SAVE FOR LATER TEST                 UF035\n         MVC   QPARM1,=CL8'SYSLOG' SET JOBNAME TO MATCH ON        UF035\n         MVI   QLNG1+L'QLNG1-1,8   SET LENGTH OF NAME             UF035\n         B     SLZ            DONE FOR NOW                        UF035\nSLTHIS   DS    0H             NEED TO RETURN THIS SYSTEMS SYSLOG  UF035\n         L     R1,16          POINT TO CVT                        UF035\n         ICM   R1,15,CVTSMCA-CVTMAP(R1) POINT TO SMF CONTROL AREA UF035\n         BZ    SLZ            NONE, DO NORMAL PROCESSING          UF035\n         MVC   QPARM1(4),SMCASID-SMCABASE(R1)  MOVE SID TO AREA   UF035\n         AIF   (NOT &QNERDC).SLNNER  SKIP IF NOT NERDC            UF035\n         OI    QPARM1+3,X'F0' CHANGE A->1, B->2                   UF035\n.SLNNER  ANOP                                                     UF035\n         B     SLIDPRE        AND GO TO COMMON CODE               UF035\nSLZ      DS    0H                                                 UF035\n***********************************************************************\n*                                                                     *\n*   DETERMINE IF SEARCH IS BY JOBNUMBER OR JOBNAME                    *\n*                                                                     *\n***********************************************************************\n         LH    R1,QLNG1       LENGTH OF PARAMETER FIELD\n         SH    R1,=H'1'       IS THE LENGTH ZERO?\n         BM    TILT           YES. TILT.\n         CLI   QPARM1,C'0'    IS THE FIRST CHARACTER NUMERIC?\n         BL    JOBNAME        NO. SEARCH BY JOBNAME\n         MVC   QFZONES,QFZONE INITIALIZE NUMERIC TEST\n         EX    R1,MVZ         MOVE THE ZONES FOR VALIDITY CHECK\n         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?\n         BNE   TILT           NO. TILT.\n         EX    R1,PACK        PACK THE FIELD\n         CVB   R5,CONVERT     CONVERT TO BINARY\n***********************************************************************\n*                                                                     *\n*   LOCATE JQE BY JOBNAME                                             *\n*                                                                     *\n***********************************************************************\nJOBNAME  L     R2,QCJQHEAD    LOAD ADDR OF JQT\n         USING JQTDSECT,R2    BASE REG FOR JQT\n         LA    R2,JQTOUT      FIRST JQE QUEUE\n         LA    R1,JQTQMAX     MAXIMUM NUMBER OF QUEUES\n         DROP  R2\nNEXTJQT  L     R3,0(R2)       OFFSET TO FIRST JQE IN QUEUE        UF020\nNEXTJQE  N     R3,=A(X'00FFFFFF')  TEST FOR END OF CHAIN          UF020\n         BZ    ENDJQE         END OF QUEUE\n         A     R3,QCJQTA      ADD BASE TO OFFSET\n         USING JQE,R3         BASE REG FOR JQE\n         CLI   QPARM1,C'0'    IS SEARCH BY JOBNUMBER?\n         BL    CLCNAME        NO. SEARCH BY JOBNAME.\n         CH    R5,JQEJOBNO    IS THIS THE RIGHT JOBNUMBER?\n         BNE   NOMATCH        NO. TRY NEXT JQE.\n         B     FOUND          YES. PROCESS IT.\nCLCNAME  CLC   QPARM1,JQEJNAME IS THIS THE RIGHT JOBNAME?\n         BE    FOUND          YES. PROCESS IT.\nNOMATCH  L     R3,JQENEXT     NO. TRY NEXT ENTRY.                 UF020\n         B     NEXTJQE        LOOP                                UF020\nENDJQE   LA    R2,4(R2)       TRY NEXT QUEUE                      UF020\n         BCT   R1,NEXTJQT     LOOP IF NOT LAST QUEUE\nTILT     QTILT '*** JOBNAME NOT FOUND OR INVALID ***'\n         SPACE 1                                                  UF007\nJOBAGAIN L     R3,QCJQEA      PRIME JQE ADDRESS                   UF007\n         LTR   R3,R3          ANYONE HOME?                        UF034\n         BNZ   FOUND          YES, CONTINUE                       UF034\n         QTILT '*** YOU MUST SPECIFY A JOBNAME OR NUMBER BEFORE USING \"+\n               *\" ***'                                            UF034\n         SPACE 1                                                  ONL03\nFOUND    ST    R3,QCJQEA      SAVE THE ADDRESS\n         CLI   SLID#,0        LOOKING FOR A SPECIFIC SYSLOG?      UF035\n         BE    FOUND1         NO, CONTINUE                        UF035\n         IC    R14,SLID#      GET DESIRED ID                      UF035\n         IC    R15,JQEFLAG1   GET SYSTEM ID OF THIS JOB           UF035\n         N     R14,=A(X'0000000F') MASK OFF EXTRA STUFF           UF035\n         N     R15,=A(X'0000000F') MASK OFF EXTRA STUFF           UF035\n         CR    R14,R15        SEE IF IT IS THE ONE WE WANTED      UF035\n         BNE   NOMATCH        NOPE, TRY AGAIN                     UF035\nFOUND1   DS    0H                                                 UF035\n         LR    R4,R3          SAVE THE ADDRESS FOR COMPARE        RNB22\n         SPACE 2                                                  ONL03\n******************************************************************ONL03\n*                                                                 ONL03\n*   READ THE JCT                                                  ONL03\n*                                                                 ONL03\n******************************************************************ONL03\n         SPACE 1                                                  ONL03\n         OC    JQETRAK,JQETRAK     IS THERE AN ADDRESS            UF046\n         BNZ   JCTOK               YES, CONTINUE                  UF046\n         CLC   =C'JQE',QSUBNAME    IS IT JQE COMMAND?             UF046\n         BE    STOP                YES, ALLOW TO CONTINUE         UF046\n         B     TILT                NO, ABORT                      UF046\nJCTOK    DS    0H                                                 UF046\n         MVC   QCTRAK,JQETRAK DISK ADDR OF JCT\n         L     R1,QCJCTA           ADDRESS OF JCT                 UF046\n         AL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16\n         XC    0(4,R1),0(R1)       CLEAR START OF AREA            UF046\n         NI    QFLAG1,255-QFLG1SDS CLEAR THE SYSTEM DS JOB FLAG   ONL14\n         SPACE 1                                                  ONL14\n         TM    JQEFLAG3,JQE3SYSD   JQETRAK POINT TO IOT?          UF046\n         BNO   READJCT             NO, GO READ JCT                   CL\n         SPACE 1                                                  ONL14\n         OI    QFLAG1,QFLG1SDS     SHOW IT'S A SYSTEM DS JOB      ONL14\n         SPACE 1                                                  ONL14\n         MVC   QPJOBID(2),=C'RM'   SET                               CL\n         MVC   QPJOBID+2(2),JQEJOBNO JOB KEY                         CL\n         B     CKAUTH              SKIP JCT READ                  ONL02\n         DROP  R3\nREADJCT  L     R3,QCJCTA      ADDR OF IOAREA FOR JCT                 CL\n         LR    R1,R3          PARM FOR READSPC\n         AL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16\n         L     R15,=V(READSPC) ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\n         USING JCT,R3         BASE REG FOR JCT                    ONL16\n         USING JQE,R4         BASE FOR JQE                        RNB22\n         SPACE 2                                                  ONL03\n******************************************************************ONL03\n*                                                                 ONL03\n*   ENSURE THAT THE CORRECT JCT WAS READ                          ONL03\n*                                                                 ONL03\n******************************************************************ONL03\n         SPACE 1                                                  ONL03\n         CLC   JCTID,=CL4'JCT'     DID WE READ A JCT ?            ONL03\n         BNE   BADJCT              TILT IF NO                     ONL03\n         CLC   JCTJNAME,JQEJNAME   DOES JOBNAME MATCH ?           ONL03\n         BNE   BADJCT              TILT IF NO                     ONL03\n         SPACE 1                                                  ONL03\n         LA    R1,JQE              ADDR OF JQE                    ONL03\n         SL    R1,QCJQTA           COMPUTE THE JQE OFFSET         ONL03\n         CL    R1,JCTJQE           DOES OFFSET MATCH THE JCT'S ?  ONL03\n         BNE   BADJCT              TILT IF NO                     ONL03\n         SPACE 1                                                  ONL03\n         CLI   QPARM1,C'*'         WAS CURRENT JOB REQUESTED ?    ONL03\n         BNE   NEWJOB              SKIP IF NO                     ONL03\n         CLC   QPJOBID,JCTJBKEY    DOES JOB KEY MATCH ?           ONL03\n         BE    VALIDJCT            SKIP IF YES                    ONL03\n         SPACE 1                                                  ONL03\nBADJCT   QTILT '*** JOB HAS PURGED (OR JCT IS INVALID) ***'       ONL03\n         SPACE 1                                                  ONL03\nNEWJOB   DS    0H                  A NEW JOB WAS REQUESTED        ONL03\n         MVC   QPJOBID,JCTJBKEY    SAVE JOB KEY FOR FUTURE CHECKS ONL03\n         MVC   QPDSID,=X'FFFF'     NULLIFY DATASET ID               SBG\n         MVC   QOLDDSID,=X'FFFF'   NULLIFY PREVIOUS DSID            SBG\n         SPACE 1                                                  ONL03\nVALIDJCT DS    0H                  THE CORRECT JCT WAS READ       ONL03\n         SPACE 2                                                  ONL03\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nCKAUTH   DS    0H                  SEE IF USER MAY LOOK AT JOB    ONL02\n         QAUTHCK QAFINDJ           PERFORM JOB AUTHORIZATION      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL03\n*                                                                 ONL03\n*   READ JOB'S ALLOCATION IOT                                     ONL03\n*                                                                 ONL03\n*    NOTE:  QUEUE SUB-COMMANDS MUST VALIDATE THIS IOT BEFORE USE. ONL03\n*                                                                 ONL03\n******************************************************************ONL03\n         SPACE 1                                                  ONL03\n         TM    QFLAG1,QFLG1SDS     IS THIS A SYSTEM DS JOB?       ONL03\n         BO    GOTMTTR             SKIP IF YES                    ONL03\n         MVC   QCTRAK,JCTIOT       GET MTTR FOR IOT               ONL03\nGOTMTTR  DS    0H                                                 ONL03\n         SPACE 1                                                  ONL03\n         DROP  R3                  KILL JCT ADDRESSABILITY        ONL03\n         SPACE 1                                                  ONL03\n         L     R1,QCIOTA      ADDR OF IOAREA FOR IOT\n         L     R15,=V(READSPC) ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\n         SPACE 2                                                  ONL03\n******************************************************************ONL03\n*                                                                 ONL03\n*   RETURN TO CALLER                                              ONL03\n*                                                                 ONL03\n******************************************************************ONL03\n         SPACE 1                                                  ONL03\nSTOP     QSTOP\n         SPACE 2                                                  ONL03\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL03\nMVZ      MVZ   QFZONES(1),QPARM1 CHECK FOR NUMERIC\nPACK     PACK  CONVERT,QPARM1(1) CONVERT TO BINARY\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nFINDJOB  CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $BUFFER ,                                                 ONL16\n         IFGRPL\n         $JQE\n         $JCT\nTABLNGTH EQU   0                                                  UF046\n         $IOT  ,                                                  UF046\n         $JQT\n         CVT   DSECT=YES                                          UF035\n         IEESMCA ,                                                UF035\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nWORK     DSECT\n         DS    72C\nCONVERT  DS    D\nSLID#    DS    X                   SYSTEM ID OF DESIRED SYSLOG    UF035\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "FINDPDDB": {"ttr": 3850, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "FINDPDDB TITLE 'QUEUE COMMAND - FIND PDDB FOR A DSID'             ONL01\nFINDPDDB QSTART ,                  START FINDPDDB CSECT ASSEMBLY  ONL01\n         USING QCKPT,R10          BASE REG FOR CHECKPONT WORK AREA\n         L     R10,QVCKPT         LOAD BASE REG\n         USING QDISPLAY,R9        BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL          LOAD BASE REG\n         USING WORK,R13           BASE REG FOR LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   CONVERT DATASET ID TO BINARY                                      *\n*                                                                     *\n***********************************************************************\n         XC    CONVERT,CONVERT       CLEAR CONVERT WORK AREA\n         PACK  CONVERT+5(3),DSID+1(3) PACK ASID\n         CVB   R7,CONVERT         CONVERT DSID TO BINARY\n***********************************************************************\n*                                                                     *\n*   FIND  PDDB  FOR  THIS  DATASET  ID                                *\n*                                                                     *\n***********************************************************************\nNORMAL   MVI   SWITCH,0           INITIALIZE SWITCH\n         USING PDB,R2             BASE REG FOR PDDB\n         USING IOT,R3             BASE REG FOR IOT                UF046\n         L     R5,QCIOTA          I/O AREA FOR READ IOT BLOCK     UF046\n         L     R1,QCJCTA          ADDR OF JCT                     UF008\n         USING JCT,R1             SET TEMP ADDRESSING             ONL16\n         CLC   QCTRAK,JCTIOT      AT FIRST IOT?                   UF008\n         BNE   *+8                NO, SKIP FLAG SET               UF008\n         OI    SWITCH,X'02'       SET FLAG                        UF008\n         DROP  R1                 DROP TEMP ADDRESSING            UF008\n         LR    R3,R5              IOTSTART AREA                   UF046\n         SH    R3,=AL2(IOTSTART-IOT)  ADJUST FOR PROPER STRT      UF046\n         SPACE 1                                                  UF046\nNEXTIOT  LR    R4,R3              BASE OF IOT\n         CLC   IOTID,=CL4'IOT'    WAS AN IOT READ FROM SPOOL ?    ONL03\n         BNE   BADIOT             ERROR IF NO                     ONL03\n         CLC   QPJOBID,IOTJBKEY   IS THE IOT'S JOB KEY VALID ?    ONL03\n         BNE   BADIOT             ERROR IF NO                     ONL03\n         A     R4,IOTPDDBP        OFFSET BEYOND LAST PDDB\n         LR    R2,R3              BASE OF IOT\n         A     R2,IOTPDDB          OFFSET TO FIRST PDDB IN IOT    UF046\nFINDDS   C     R7,PDBDSKEY        IS THIS THE DATASET?            WGH42\n         BE    FOUNDDS            YES. CONTINUE\n         LA    R2,PDBLENG(R2)     NO. LOOK AT NEXT PDDB\n         CR    R2,R4              HAVE WE GONE PAST THE LAST PDDB\n         BL    FINDDS             NO. TRY AGAIN\n         L     R4,IOTIOTTR        DISK ADDR OF NEXT IOT\nSPIN     LTR   R4,R4              IS THERE ANOTHER IOT?\n         BZ    SPINIOT            NO. TRY THE SPIN IOT.\n         BAL   R8,READ            READ THE IOT\n         B     NEXTIOT            SEARCH THE NEXT IOT\n         USING JCT,R1             BASE REG FOR JCT                ONL16\nSPINIOT  TM    SWITCH,1           DID WE SEARCH THE SPINIOT ALREADY\n         BO    CKIOT1             YES, SEE IF WE STARTED AT FRONT UF008\n         OI    SWITCH,1           SET SWITCH\n         L     R1,QCJCTA          LOAD BASE REG\n         L     R4,JCTSPIOT        DISK ADDR OF SPIN IOT\n         DROP  R1\n         B     SPIN               SEARCH THE SPIN IOT CHAIN\nFOUNDDS  L     R0,PDBRECCT        GET THE RECORD COUNT\n         CVD   R0,CONVERT         CONVERT TO DECIMAL\n         MVC   DSRECCT,ED8        MOVE EDIT PATTERN TO DISPLAY\n         ED    DSRECCT,CONVERT+4  EDIT THE RECORD COUNT\n         MVC   DSCLASS,PDBCLASS   MOVE PDBCLASS TO DISPLAY\nSTOP     QSTOP                    GO BACK TO CALLER\nCKIOT1   TM    SWITCH,X'02'       DID WE START AT FIRST IOT?      UF008\n         BO    STOP               YES, NOT FOUND                  UF008\n         USING JCT,R1             SET TEMP ADDRESSING             ONL16\n         L     R1,QCJCTA          POINT TO JCT                    UF008\n         L     R4,JCTIOT          FIRST IOT ADDRESS               UF008\n         DROP  R1                 DROP TEMP ADDRESSING            UF008\n         BAL   R8,READ            READ THE IOT                    UF008\n         OI    SWITCH,X'02'       SET STARTED AT FRONT            UF008\n         B     NEXTIOT            AND TRY AGAIN                   UF008\n***********************************************************************\n*                                                                     *\n*   READ A BLOCK FROM HASPACE                                         *\n*                                                                     *\n***********************************************************************\nREAD     ST    R4,QCTRAK          STORE DISK ADDR\n         LR    R1,R5              IOAREA ADDRESS\n         L     R15,=V(READSPC)    ADDR OF ROUTINE TO READ HASPACE\n         BALR  R14,R15            GO TO IT\n         BR    R8                 RETURN TO CALLER\n         SPACE 3                                                  ONL03\nBADIOT   QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       ONL03\n         SPACE 2                                                  ONL03\nED8      DC    X'4020202020202120'\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nFINDPDDB CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $BUFFER ,                                                UF046\n         IFGRPL\n         $TAB\n         $JCT\n         $PDDB\n         $IOT\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\n         DS    CL36                             WAS CL24 - WGH\nDSID     DS    CL4\n         DS    CL4\nDSRECCT  DS    CL8\n         DS    CL4\nDSCLASS  DS    CL1\nWORK     DSECT\n         DS    CL72\nSWITCH   DS    C\nCONVERT  DS    D\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORMAT": {"ttr": 4097, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x00\\x00\\x942/\\x00\\x943/\\x192\\x02\\x0c\\x02\\x0b\\x00\\x03\\xe2\\xc3\\xc8\\xe4\\xc4\\xc5\\xd3@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-11-18T00:00:00", "modifydate": "1994-11-28T19:32:00", "lines": 524, "newlines": 523, "modlines": 3, "user": "SCHUDEL"}, "text": "FORMAT   TITLE 'QUEUE COMMAND - JQE AND JOE FORMAT ROUTINES'      ONL01\nFORMAT   QSTART ,                  START FORMAT CSECT ASSEMBLY    ONL01\n***********************************************************************\n* RNB CHANGES:                                                        *\n*      (1) RNB17 - WHEN FORMATTING JOES, CHECK FOR JOE ON PSO AND     *\n*                  INDICATE 'EXT-WTR' IF SO. ALSO, DON'T INDICATE ON  *\n*                  ON PRINT/PUNCH UNLESS SHOWS ACTIVE IN JOEFLAG1.    *\n*                  ALSO, FIX BUG IN GETTING TO CHECKPOINT JOE FOR     *\n*                  RECORDS LEFT, AND FIX RECORDS LEFT FOR SP2.        *\n*                  ALSO, IF JOE NOT BUSY, BUT CHKPT JOE VALID, PRINT  *\n*                  NUMBER OF RECORDS LEFT, NOT TOTAL RECORDS.         *\n*                  08 OCT 82 - FIX FOR REMOTE LINECNT NOT DECREMENTING*\n*      (2) RNB18 - DISTINGUISH BETWEEN JOES WITH REMOTE ROUTING AND   *\n*                  THOSE WITH SPECIAL LOCAL ROUTING (DEFINED BY DESTID*\n*                  STATEMENTS WITH DEST=UNNN).                        *\n*      (3) RNB19 - WHEN LISTING JQE'S, DON'T ASSUME INPUT QUEUE, BUT  *\n*                  USE THE JQETYPE INSTEAD. ALSO, SPECIALLY HANDLE    *\n*                  CONVERSION AND DUMP QUEUES, AND AWAITING OUTPUT.   *\n*      (4) RNB20 - WHEN LISTING THINGS, DISTINGUISH BETWEEN NORMAL    *\n*                  HOLD, HOLD ALL, AND DUPLICATE HOLD. ALSO, FOR      *\n*                  JOES, INDICATE SELECT=NO IF APPLICABLE.            *\n*      (5) RNB21 - FIX SETDEVIC SUBROUTINE FOR SP2.                   *\n*      (6) RNB25 - ALLOW 'COUNT' PARM TO HO TO INDICATE TOTAL LINE    *\n*                  COUNT DESIRED FOR JOBS ON HELD OUTPUT QUEUE        *\n*      (7) RNB28 - FIX FOR REMOTE PRINTER LINECOUNTS.                 *\n***********************************************************************\n         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA\n         L     R10,QVDSPL     LOAD BASE REG\n         USING JQE,R9         BASE REG FOR JQE DSECT\n         USING JOE,R8         BASE REG FOR JOE DSECT\n         USING WORK,R13       BASE FOR LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   INPUT TO THIS MODULE -                                            *\n*     R1 = 0 INDICATES PRINT JQE                                      *\n*     R1 = 4 INDICATES PRINT JOE                                      *\n*     R9 CONTAINS JQE ADDRESS                                         *\n*     R8 CONTAINS JOE ADDRESS                                         *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*   BRANCH TO PROPER ROUTINE                                          *\n*                                                                     *\n***********************************************************************\nFMTSTRT  STC   R1,TYPEQUE      FLAG AS JQE OR JOE CALL              WGH\n         MVC   FCLEAR,=CL80' ' CLEAR THE PRINT AREA\n         MVC   FQUEUE,QCLASS  CLASS NAME\n         CLI   QCLASS,C'@'     XMIT/DUMP Q?                         WGH\n         BNE   FMTHDR          NO..                                 WGH\n         MVC   FQUEUE+1(1),JOECURCL   .. MOVE IN CORRECT OUT CLASS  WGH\nFMTHDR   MVC   QDHLINE,HEADING REPORT HEADING\n         CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?\n         BE    NOTBUSY        YES. SKIP.\n*        CLC   =X'01000100',JQEPRTRT IS THE PRINT/PUNCH FOR LOCAL?\n*        BE    LOCAL          YES. SKIP THIS ROUTINE.\n*        MVC   FREMOTE,=C'RJE' INDICATE THIS JOB IS REMOTE\n         MVC   FTYPE,=C'JOB'   TRY STC TYPE NEXT                    WGH\n         TM    JQEFLAG3,JQE3JOB                                     WGH\n         BZ    TYPESET         YES.. CONTINUE                       WGH\n         MVC   FTYPE,=C'STC'   TRY STC TYPE NEXT                    WGH\n         TM    JQEFLAG3,JQE3STC                                     WGH\n         BO    TYPESET         YES.. CONTINUE                       WGH\n         MVC   FTYPE,=C'TSU'   MUST BE TSU TYPE                     WGH\nTYPESET  EQU   *                                                    WGH\n         CLI   JQEBUSY,0      IS THE JOB EXECUTING?\n         BE    NOTBUSY        NO. SKIP THIS ROUTINE.\n         SR    R15,R15\n         IC    R15,JQEBUSY    GET SYSTEM NUMBER\n         SLL   R15,3          MULTIPLY BY 8\n         LA    R15,QSYSID(R15) OBTAIN SYSTEM ID\n         MVC   FSYSID,0(R15)  MOVE SYSTEM ID TO DISPLAY\nNOTBUSY  CLI   QCLASS,36           SKIP SERVICE ROUTINE (WAS 24 WGH)\n         BH    CHEKJQE              IF UNDEFINED                  CL005\n         SR    R15,R15             COMPUTE BRANCH INDEX           CL005\n         IC    R15,QCLASS          QUEUE TYPE                     CL005\n         B     *+4(R15)            BR BASED ON QUEUE TYPE         CL005\n         B     LISTTSO             0  TSO QUEUE                   CL005\n         B     LISTSTC             4  STC QUEUE                   CL005\n         B     LISTHO              8  HELD OUTPUT QUEUE           CL005\n         B     LISTDM              12 DUMP QUEUE                  CL005\n         B     LISTCN              16 CONVERSION QUEUE            CL005\n         B     LISTAOUT            20 AWAITING OUTPUT QUEUE       CL005\n         B     LISTSTUP            24 AWAITING SETUP QUEUE        CL005\n         B     LISTRCV             28 NJE RECEIVE QUEUE           WGH\n         B     LISTXMIT            32 NJE XMIT    QUEUE           WGH\n         B     LISTINPU            36 INPUT       QUEUE           WGH\nCHEKJQE  LTR   R1,R1          IS REQUEST FOR JQE OR JOE?          CL005\n         BZ    LISTJQE        JQE.\n***********************************************************************\n*                                                                     *\n*   FORMAT JOE                                                        *\n*                                                                     *\n***********************************************************************\nLISTJOE  MVC   FQNAME,=C'OUTPUT' MOVE IN NAME OF QUEUE\n         CLI   QCLASS,C'!'     QUEUE OF HELD JOES                   WGH\n         BNE   LISTJOX         NO..                                 WGH\n         MVC   FQNAME,=C'HLDOUT' MOVE IN NAME OF QUEUE\n         MVC   FQUEUE(1),JOECURCL   .. MOVE IN CORRECT OUT CLASS  WGH\nLISTJOX  CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?\n         BE    HEXO           YES. DO IT.\n         TM    JOEFLAG3,$ODHOLD     OUTDISP=HOLD                  WGH42\n         BZ    LSTJOEL             /NO  - DON'T FLAG IT           WGH42\n         MVC   FHOLD,=C'HOLD'      /YES - SAY SO                  WGH42\n         B     LSTJOEAA            /NO  - DON'T FLAG IT           RNB20\nLSTJOEL  TM    JOEFLAG3,$ODLEAVE    OUTDISP=LEAVE                 WGH42\n         BZ    LSTJOEK             /NO  - DON'T FLAG IT           WGH42\n         MVC   FHOLD,=C'LEAV'      /YES - SAY SO                  WGH42\n         B     LSTJOEAA            /NO  - DON'T FLAG IT           RNB20\nLSTJOEK  TM    JOEFLAG3,$ODKEEP     OUTDISP=KEEP                  WGH42\n         BZ    LSTJOEW             /NO  - DON'T FLAG IT           WGH42\n         MVC   FHOLD,=C'KEEP'      /YES - SAY SO                  WGH42\n         B     LSTJOEAA            /NO  - DON'T FLAG IT           RNB20\nLSTJOEW  TM    JOEFLAG3,$ODWRITE    OUTDISP=WRITE                 WGH42\n         BZ    LSTJOEO             /NO  - DON'T FLAG IT           WGH42\n* WGH *  MVC   FHOLD,=C'WRIT'      /YES - SAY SO                  WGH42\n         B     LSTJOEAA            /NO  - DON'T FLAG IT           RNB20\nLSTJOEO  TM    JOEHOLD,X'80'       IS THIS JOE OPER HELD          WGH42\n         BZ    LSTJOES             /NO  - DON'T FLAG IT           RNB20\n         MVC   FHOLD,=C'OPER'      /YES - SAY SO                  WGH42\n         B     LSTJOEAA            /NO  - DON'T FLAG IT           RNB20\nLSTJOES  TM    JOEHOLD,X'20'       IS THIS JOE SYS  HELD          WGH42\n         BZ    LSTJOEAA            /NO  - DON'T FLAG IT           RNB20\n         MVC   FHOLD,=C'SYSH'      /YES - SAY SO                  WGH42\nLSTJOEAA EQU   *                                                  RNB20\n         L     R0,JOERECCT    NUMBER OF PRINT LINES\n         CVD   R0,CONVERT     CONVERT TO DECIMAL\n         MVC   FLINES,ED8     PREPARE FOR EDIT\n         ED    FLINES,CONVERT+4 EDIT NUMBER OF LINES\n*        TM    JOEFLAG,X'20'  IS THIS JOB PRINTING?               RNB17\n*        BNO   LOCAL          NO. SKIP.                           RNB17\n         CLI   JOEBUSY,0         IS JOE ACTIVE?                   RNB17\n         BE    LSTJOE$$          /NO  - DON'T SET DEVICE ID       RNB17\n*                                /YES -                           RNB17\n         CLI   JOEDEVID,X'0F'    IS JOB ON PSO (EXTERNAL WRITER)? RNB17\n         BNE   LSTJOE$           /NO  - GO DO REAL DEVICE         RNB17\n         MVC   FPRINT,=CL8'EXT-WTR'  /YES - SAY SO                RNB17\n         B     LSTJOE$$                                           RNB17\nLSTJOE$  TM    JOEDEVID,X'40'           JOB ON NJE DEVICE?        RNB17\n         BO    LOCAL                     /YES - SKIP DEVICE ID    RNB17\n         LA    R3,JOEDEVID    A(OUTPUT DEVICE DESCRIPTOR            FCI\n         BAL   R7,SETDEVIC    SET THE OUTPUT DEVICE                 FCI\nLSTJOE$$ EQU   *                                                  RNB17\n* WGH    TM    JOEFLAG1,JOE1CKV IS CKPT JOE VALID?                RNB17\n* WGH    BO    LSTJOE##         /YES - USE RECORDS PRINTED        RNB17\n         CLI   JOEBUSY,0         /NO - IS JOE BUSY?               RNB17\n         BE    LOCAL            IF NOT, GO DO LOCAL STUFF         RNB17\n         B     LIST             IF YES, SKIP LOCAL STUFF, GO LIST RNB17\nLSTJOE## EQU   *                                                  RNB17\n         L     R0,JOERECCT    RESTORE R0 FOR REMOTES              RNB28\n         LR    R3,R8            SAVE WORK JOE ADDRESS             RNB17\n         B     LIST                NO CKPT FOR NOW                UF046\nLOCAL    DS    0H                                                 UF047\n         SR    R1,R1               CLEAR REG                      UF047\n         ICM   R1,B'0111',JOECHARB OFFSET TO CHAR JOE             UF047\n         BZ    LOCAL1              NONE, SKIP THIS                UF047\n         A     R1,QCJOTA           GET JOE ADDRESS                UF047\n         PUSH  USING                                              UF047\n         DROP  R8                  DROP OLD JOE ADDRESSING        UF047\n         USING JOE,R1              TEMP USING                     UF047\n         TM    JOEWTRID,X'FF'-X'40'  WAS THERE A WTRID?           UF047\n         BZ    LOCALA              NO, SKIP                       UF047\n         MVC   FSYSID(2),=C'W='  SET PREFIX                       WGH42\n         MVC   FSYSID+2(8),JOEWTRID SET WRITER ID                 WGH42\nLOCALA   TM    JOEUSER,X'FF'-X'40'  WAS THERE A USERID            WGH42\n         BZ    LOCAL1              NO, SKIP                       UF047\n         MVC   FSYSID+2(8),JOEUSER    SET USERID                  WGH42\n         POP   USING                                              UF047\nLOCAL1   DS    0H                                                 UF047\n         LA    R15,FREMOTE    ADDRESS TO PUT TEXT\n         LA    R1,JOEROUT     POINT TO ROUTING INFO                FCI*\n***********************************************************************\n*RMTORLCL SUBROUTINE - DETERMINE REMOTE OR LOCAL DESTINATION       FCI*\n* R1 POINTS TO PRTRT/PUNRT, R15 TO ASSEMBLY POINTER                FCI*\n***********************************************************************\n         CLI   QCLASS,C'@'    IS THIS XMIT QUEUE                   WGH\n         BNE   RMTORLCL       NO.. TRY RMT OR LCL TEST             WGH\n         MVC   0(L'NODE,R15),NODE  MOVE IN NODE                    WGH\n         LA    R15,L'NODE(R15)     BUMP POINTER                    WGH\n         SR    R14,R14             CLEAR REG                       WGH\n         ICM   R14,3,0(R1)         GET NODE NUM                    WGH\n         CVD   R14,DOUBLEWD        CVT TO DECIMAL                  WGH\n         B     FITINUM1            PUT NUMBER IN MSG               WGH\nRMTORLCL CLI   3(R1),0        IS IT FOR REMOTE 00=LOCAL            FCI*\n         BE    LIST           NO LUCK .. HAVE TO WORK FOR IT       FCI*\n         CLC   =H'0',0(R1)    SPECIAL LOCAL ROUTING (SP2) ?       RNB18\n         BNE   RMTORLC1          /NO  - GO FORMAT RMTNN           RNB18\n         MVC   0(L'LCL,R15),LCL  /YES - MOVE IN LCL               RNB18\n         LA    R15,L'LCL(R15)    BUMP POINTER                     RNB18\n         B     RMTORLC2                                           RNB18\nRMTORLC1 EQU   *                                                  RNB18\n         MVC   0(L'RMT,R15),RMT       MOVE IN 'RMT'                FCI*\n         LA    R15,L'RMT(R15)  BUMP POINTER                        FCI*\nRMTORLC2 EQU   *                                                  RNB18\n         SR    R14,R14        LOAD RMT FLAGS                       FCI*\n*        IC    R14,3(R1)      FROM JOEROUT                        RNB18\n         ICM   R14,3,2(R1)    FROM JOEROUT                        WGH\n         CVD   R14,DOUBLEWD   RMT NUMBER TO DECIMAL                FCI*\n         B     FITINUM1       FIT THE NUMBER IN RMT MESSAGE        FCI*\n         SPACE 2\n***********************************************************************\n* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT           FCI*\n*                                                                  FCI*\n***********************************************************************\nFITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL            FCI*\nFITINUM1 MVC   NUMBER(L'NORMAL),NORMAL INITIALIZE THE EDIT FORMAT  FCI*\n         LA    R1,NUMBER+SIGNORM IN CASE OF ZEROES                 FCI*\n         EDMK  NUMBER(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC       FCI*\n         LA    R14,NUMBER+L'NORMAL-1 A(END OF CONVERTED NUMBER)    FCI*\n         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1   FCI*\n         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG            FCI*\n         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                  FCI*\n         B     LIST           RETURN TO OUR CALLER                 FCI*\n         SPACE 3                                                   FCI*\nMVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED                       FCI*\n         SPACE 2                                                   FCI*\nNORMAL   DC    X'402020202020202020202120' EDIT MASK               FCI*\nSIGNORM  EQU   11             OFFSET TO LAST DIGIT                 FCI*\nRMT      DC    C'RMT'                                              FCI*\nNODE     DC    C'NODE'                                             WGH\nLCL      DC    C'LCL'                                             RNB18\n***********************************************************************\n*                                                                     *\n*   FORMAT JQE                                                        *\n*                                                                     *\n***********************************************************************\nLISTRCV  MVC   FQNAME(8),=C'RECEIVE ' NAME OF QUEUE               WGH\n         B     LIST           CONTINUE                            WGH\nLISTXMIT MVC   FQNAME(8),=C'XMIT JOB' NAME OF QUEUE               WGH\n         LA    R15,FREMOTE            WHERE TO PUT TEXT           WGH\n         MVC   0(L'NODE,R15),NODE     MOVE IN NODE                WGH\n         LA    R15,L'NODE(R15)        BUMP POINTER                WGH\n         SR    R14,R14                CLEAR REG                   WGH\n         ICM   R14,3,JQEXEQND         GET NODE NUMBER             WGH\n         CVD   R14,DOUBLEWD           CVT TO DECIMAL              WGH\n         B     FITINUM1               PUT NUMBER IN MSG           WGH\nLISTINPU MVC   FQNAME(8),=C'INPUT   ' NAME OF QUEUE               WGH\n         B     LIST           CONTINUE                            WGH\nLISTTSO  MVC   FQNAME(8),=C'TSO USER' NAME OF QUEUE\n         B     LIST           CONTINUE\nLISTSTC  MVC   FQNAME(8),=C'SYSTEM Q' NAME OF QUEUE\n         B     LIST           CONTINUE\nLISTHO   MVC   FQNAME(8),=C'HELD OUT' NAME OF QUEUE\n         B     LIST           CONTINUE\nLISTDM   MVC   FQNAME(4),=C'DUMP'     NAME OF QUEUE               RNB19\n         B     LIST                                               RNB19\nLISTAOUT MVC   FQNAME(6),=C'AW OUT'   NAME OF QUEUE               RNB19\n         B     LISTCN1                GO DO SYSAFF                RNB19\nLISTSTUP MVC   FQNAME(5),=C'SETUP'    NAME OF QUEUE               CL005\n         B     LIST                                               CL005\nLISTCN   MVC   FQNAME(6),=C'CONVRT'   NAME OF QUEUE               RNB19\n         MVC   FQUEUE,JQEJCLAS        JOB CLASS                   RNB19\nLISTCN1  CLI   JQEBUSY,0              IS JOB CONVERTING?          RNB19\n         BNE   LIST                   /YES - GO LIST IT           RNB19\n*                                     /NO  - PUT SYSAFF IN        RNB19\n         AGO   .NOSAF\n         TM    JQEFLAG2,JQE2SAF       CHECK SYSTEM AFFINITY       RNB19\n         BO    LIST                   LIST IT IF NO SPECIAL AFF   RNB19\n         LA    R15,QSYSID+8           GET FIRST SID               RNB19\n         TM    JQEFLAG2,X'01'         IS THIS IT?                 RNB19\n         BO    LISTCN2                /YES -                      RNB19\n         LA    R15,8(,R15)            /NO  - CHECK REST           RNB19\n         TM    JQEFLAG2,X'02'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\n         TM    JQEFLAG2,X'04'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\n         TM    JQEFLAG2,X'08'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\n         TM    JQEFLAG2,X'10'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\n         TM    JQEFLAG2,X'20'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\nLISTCN2  MVC   FREMOTE(4),0(R15)      MOVE SYSTEM ID TO DISPLAY   RNB19\n.NOSAF   MNOTE 4,'STILL NEED TO ADD CODE TO DISPLAY SYSTEM AFFINITY'\n         B     LIST                                               RNB19\n*LISTJQE  MVC   FQNAME,=C' INPUT' NAME OF QUEUE                   RNB19\nLISTJQE  MVC   FQNAME(5),=CL5'XEQ'  ASSUME XEQ QUEUE              RNB19\n         TM    JQETYPE,$XEQ         IS IT XEQ QUEUE?              RNB19\n         BO    LIST                 /YES - GO LIST IT             RNB19\n         MVC   FQNAME(5),=C'INPUT'  ELSE ASSUME INPUT, ETC.       RNB19\n         TM    JQETYPE,$INPUT                                     RNB19\n         BO    LIST                                               RNB19\n         MVC   FQNAME(6),=C'OUTPUT'                               RNB19\n         TM    JQETYPE,$OUTPUT+$HARDCPY                           RNB19\n         BNZ   LIST                                               RNB19\n         MVC   FQNAME(5),=C'PURGE'                                RNB19\n         TM    JQETYPE,$PURGE                                     RNB19\n         BO    LIST                                               RNB19\n         MVC   FQNAME(8),=CL8'????????'                           RNB19\nLIST     CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?\n         BE    HEX            YES. DO IT.\n         MVC   FCOUNT,ED5     PREPARE FOR EDIT\n         ED    FCOUNT,QCOUNT  EDIT THE POSITION IN QUEUE\n         MVC   FNAME,JQEJNAME MOVE IN JOBNAME\n         MVC   FJOBNO,ED5     PREPARE FOR EDIT\n         LH    R0,JQEJOBNO    LOAD HASP JOBNUMBER\n         CVD   R0,CONVERT     CONVERT TO DECIMAL\n         ED    FJOBNO,CONVERT+5 EDIT HASP JOBNUMBER\n         SR    R0,R0          ZERO OUT REGISTER\n         IC    R0,JQEPRIO     LOAD JQE PRIORITY\n         CLI   TYPEQUE,X'04'  JOE FORMAT CALL?                   WGH\n         BNE   *+8            NO.. USE JQEPRIO                   WGH\n         LH    R0,JOEPRIO     YES.. LOAD JOEPRIO                 WGH\n         SRL   R0,4           DIVIDE BY 16\n         CVD   R0,CONVERT     CONVERT TO DECIMAL\n         MVC   FPRIO,ED3      PREPARE FOR EDIT\n         ED    FPRIO,CONVERT+6 EDIT JQE PRIORITY\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2\n         BZ    NOHOLD         NO.\n         MVC   FHOLD,=C'HELD' INDICATE JOB HELD\n         TM    JQEFLAG1,JQE1HLD1  SPECIFIC HOLD?                  RNB20\n         BO    NOHOLD             /YES - GO DISPLAY               RNB20\n         MVC   FHOLD,=C'DUP '     ASSUME DUPLICATE                RNB20\n         TM    JQEFLAG1,JQE1HLD2  IS IT DUPLICATE HOLD?           RNB20\n         BO    NOHOLD             /YES - GO DISPLAY               RNB20\n         MVC   FHOLD,=C'$HA '     ELSE MUST BE FROM $HA           RNB20\nNOHOLD   DS    0H\n*        CLC   QCODEH,=H'28'  IS THIS THE HO COMMAND?             RNB25\n         CLC   QCODEH,=H'60'  IS THIS THE HQ COMMAND?             WGH42\n         BNE   LIST2          /NO  - DO NORMAL LISTING            RNB25\n*                             /YES -                              RNB25\n         CLC   =C'COUNT',QPARM1  DOES USER WANT LINE COUNTS?      RNB25\n         BNE   LIST2          /NO  - DO NORMAL LISTING            RNB25\n*                             /YES - GET JCT AND FORMAT LINE CNT  RNB25\n         TM    JQEFLAG3,JQE3SYSD     SYSTEM DS ?                  WGH42\n         BNZ   LIST2           YES.. SKIP I/O COUNT               WGH42\n         MVC   QCTRAK,JQETRAK DISK ADDR OF JCT                    RNB25\n         L     R3,QCJCTA      ADDR OF IOAREA FOR JCT              RNB25\n         LR    R1,R3          PARM FOR READSPC                    RNB25\n         AL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16\n         L     R15,=V(READSPC)  ROUTINE TO READ HASPACE           RNB25\n         BALR  R14,R15          GO DO IT                          RNB25\n         USING JCT,R3         BASE FOR JCT                        ONL16\n         SPACE 1                                                  ONL03\n         CLC   JCTID,=CL4'JCT'  WAS A JCT READ FROM SPOOL ?       ONL03\n         BNE   LIST2          SKIP IF NO                          ONL03\n         CLC   JCTJNAME,JQEJNAME  DOES JOBNAME MATCH ?            ONL03\n         BNE   LIST2          SKIP IF NO                          ONL03\n         LA    R1,JQE         ADDR OF JQE                         ONL03\n         SL    R1,QCJQTA      COMPUTE THE JQE OFFSET              ONL03\n         CL    R1,JCTJQE      DOES OFFSET MATCH THE JCT'S ?       ONL03\n         BNE   LIST2          SKIP IF NO                          ONL03\n         SPACE 1                                                  ONL03\n         L     R0,JCTLINES    GET TOTAL LINES GENERATED BY JOB    RNB25\n         DROP  R3                                                 RNB25\n         SPACE 1                                                  ONL03\n         CVD   R0,CONVERT     CONVERT TO DECIMAL                  RNB25\n         MVC   FLINES,ED8     PREPARE FOR EDIT                    RNB25\n         ED    FLINES,CONVERT+4  PRINT TOTAL LINE COUNT           RNB25\n         C     R0,=F'9999999' IS THE LINE COUNT >= 10 MILLION?    RNB25\n         BNH   LIST2          /NO  - GO LIST IT                   RNB25\n         MVI   FLINES+8,C'+'  /YES - SHOW OVERFLOW                RNB25\nLIST2    EQU   *                                                  RNB25\n         LA    R1,QDMSG       ADDR OF MESSAGE AREA\n         ST    R1,QDMSGA      STORE MESSAGE ADDR\n         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE\n         BALR  R14,R15        DISPLAY THE LINE\nSTOP     QSTOP\n***********************************************************************\n*                                                                     *\n*   TAKE HEX DUMP OF JOE                                              *\n*                                                                     *\n***********************************************************************\nHEXO     UNPK  FHEX1,0(8,R8)  UNPK FIRST PART OF JOE INTO HEX\n         UNPK  FHEX2,7(8,R8)  SECOND\n         UNPK  FHEX3,14(8,R8) THIRD\n         UNPK  FHEX4,21(8,R8) FOURTH\n         UNPK  FHEX5,28(5,R8) FIFTH\n         MVI   FHEXOC,C' '    CLEAR LAST BYTE\n         TR    FHEXO,TABLE    CHANGE TO PRINTABLE HEX\n         LA    R1,QDMSG       ADDR OF MESSAGE AREA\n         ST    R1,QDMSGA      STORE MESSAGE ADDR\n         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE\n         BALR  R14,R15        DISPLAY THE LINE\n***********************************************************************\n*                                                                     *\n*   TAKE HEX DUMP OF JQE                                              *\n*                                                                     *\n***********************************************************************\nHEX      UNPK  FHEX1,0(8,R9)  UNPK FIRST PART OF JOE INTO HEX\n         UNPK  FHEX2,7(8,R9)  SECOND\n         UNPK  FHEX3,14(8,R9) THIRD\n         UNPK  FHEX4,21(8,R9) FOURTH\n         MVC   FHEXC,QBLANK   CLEAR LAST BYTES\n         TR    FHEX,TABLE     CHANGE TO PRINTABLE HEX\n         B     NOHOLD         CALL DISPLAY\n***********************************************************************\n* SETDEVIC SUBROUTINE - GET DEVICE DATA (R3) POINTS TO DEVID       FCI*\n*                                                                  FCI*\n***********************************************************************\nSETDEVIC ST    R7,SETDHOLD       SAVE LINK ADDRESS                 FCI*\n         MVC   FPRINT(9),=CL9' '\n         TM    0(R3),HIGHBIT REMOTE DEVICE?                        FCI*\n         BO    RMTDEV         YES => OUTPUT IT                     FCI*\n         SR    R1,R1          FOR THE INSERT CHARACTER             FCI*\n         IC    R1,0(R3)         DEVICE TYPE                        FCI*\n         SRL   R1,4           RIGHT JUSTIFIED                      FCI*\n         MH    R1,DEVTYPEL    TYPE * LENGTH OF A DEVICE ENTRY      FCI*\n         LA    R1,DEVTABLE(R1) A(DEVICE TYPE)                      FCI*\n         MVC   FPRINT,1(R1)   PUT IN THE DEVICE TYPE\n         CLI   0(R3),0          INTERNAL READER?                   FCI*\n         BE    SETDRTN        YES => GIVE THE USER THE INFO        FCI*\n         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*\n         ICM   R15,3,1(R3)      DEVICE NUMBER  (SP2)              RNB21\n         CVD   R15,DOUBLEWD   IN PACKED DECIMAL                    FCI*\n         IC    R15,0(R1)      OFFSET TO WHERE THE DEV # GOES       FCI*\n         LA    R15,FPRINT(R15) A(WHERE THE DEV # GOES)\n         MVC   1(L'DIGITS3,R15),DIGITS3 SET UP THE EDIT OF 3 DIGITSKMT*\n         EDMK  0(L'DIGITS3+1,R15),DOUBLEWD+6 DEV # IN EBCDIC       FCI*\n         MVC   0(L'DIGITS3+1,R15),0(R1) ADJUST FOR BLANKS          FCI*\n*                                                                  FCI*\n         B     SETDRTN        GO EXIT\n*                                                                  FCI*\nRMTDEV   SR    R0,R0          FOR THE INSERT CHARACTER             FCI*\n         IC    R0,2(R3)         REMOTE NUMBER                     RNB21\n         CVD   R0,DOUBLEWD    IN PACKED DECIMAL                    FCI*\n         MVI   FPRINT,C'R'    INDICATE A REMOTE DEVICE             FCI*\n         MVC   FPRINT+2(L'THREEPT),THREEPT SET UP THE EDIT MASK    FCI*\n         EDMK  FPRINT+1(L'THREEPT),DOUBLEWD+6 CONVERT TO EBCDIC    FCI*\n         MVC   FPRINT+1(L'THREEPT),0(R1) ADJUST FOR BLANKS         FCI*\n         LA    R1,FPRINT+1    A(SPOT JUST BEFORE POSSIBLE SEP)     FCI*\nFINDPT   LA    R1,1(R1)       A(NEXT BYTE)                         FCI*\n         CLI   0(R1),C'.'     FOUND THE SEPARATOR?                 FCI*\n         BNE   FINDPT         NO => KEEP LOOKING                   FCI*\n         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*\n         IC    R15,0(R3)        DEVICE TYPE INDICATOR              FCI*\n         SRL   R15,3          RIGHT JUSTIFIED                      FCI*\n         LA    R15,RMTDEVS-HIGHBIT/8(R15) A(DEVICE TYPE)           FCI*\n         MVC   1(2,R1),0(R15) PUT IN THE DEVICE TYPE               FCI*\n         MVC   3(1,R1),0(R3) PUT IN THE DEVICE NUMBER              FCI*\n         OI    3(R1),C'0'     MAKE THE DEVICE NUMBER PRINTABLE     FCI*\n         B     SETDRTN\n         EJECT ,                                                   FCI*\nSETDRTN  L     R7,SETDHOLD    GET RETURN ADDRESS                   FCI*\n         BR    R7             RETURN TO OUR CALLER                 FCI*\n         SPACE 5                                                   FCI*\nDIGITS3  DC    X'202020'                                           FCI*\nTHREEPT  DC    X'2020204B'                                         FCI*\n         DS    0H                                                  FCI*\nDEVTABLE DC    AL1(0),CL8'INTRDR',AL1(6),CL8'READER'               FCI*\n         DC    AL1(7),CL8'PRINTER',AL1(5),CL8'PUNCH'               FCI*\nDEVTYPEL DC    AL2((*-DEVTABLE)/4)                                 FCI*\nRMTDEVS  DC    C'**',C'RD',C'PR',C'PU'                             FCI*\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nED8      DC    X'4020202020202120'\nED5      DC    X'402020202021'\nED3      DC    X'40202021'\nHEADING  DC    C'  QUEUE     POS JOBNAME  TYPE  JNUM  PRIORITY  LINES'\n         DC    CL40'   EXECUTING'\nHIGHBIT  EQU   X'80'\nTABLE    EQU   *-240\n         DC    C'0123456789ABCDEF' TRANSLATE TO PRINTABLE HEX\nWORK     DSECT\n         DS    90F                5 SAVE AREAS                   WGH\nCONVERT  DS    D\nSETDHOLD DS    F\nDOUBLEWD DS    D\nNUMBER   DS    CL16\nTYPEQUE  DS    X            JOE/JQE FORMAT REQUEST FLAG JOE = 4  WGH\nFORMAT   CSECT\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nFORMAT   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $JQE\n         $JOE\n        $BUFFER ,                                                 ONL16\n         IFGRPL\n        $JCT   ,                                                  RNB25\n        $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\nFCLEAR   DS    0CL80          FORMAT FOR QUEUE RECORDS\nFQNAME   DS    CL6            NAME OF QUEUE\n         DS    C\nFQUEUE   DS    C              CLASS NAME\n         DS    CL1\nFCOUNT   DS    CL6            POSITION IN QUEUE\n         DS    CL1\nFNAME    DS    CL8            JOBNAME\n         DS    CL2\nFTYPE    DS    CL3            JOB TYPE (JOB, STC, TSU)            WGH\n         DS    CL1                                                WGH\nFJOBNO   DS    CL6            JES2 JOB NUMBER\n         DS    CL2\nFPRIO    DS    CL4            JOB PRIORITY\n         DS    CL2\nFLINES   DS    CL8            NUMBER OF OUTPUT LINES\n         DS    CL3\nFSYSID   DS    CL8            SYSTEM ID\n         DS    CL3\nFHOLD    DS    CL4            JOB HOLD STATUS\n         DS    CL1\nFREMOTE  DS    CL8            REMOTE\n         ORG   FSYSID\nFPRINT   DS    CL8            PRINTING\n         ORG   FCOUNT\nFHEX     DS    0CL56          LENGTH OF JQE HEX DUMP\nFHEXO    DS    0CL64          LENGTH OF JOE HEX DUMP\nFHEX1    DS    0CL15\n         DS    CL14\nFHEX2    DS    0CL15\n         DS    CL14\nFHEX3    DS    0CL15\n         DS    CL14\nFHEX4    DS    0CL15\n         DS    CL14\nFHEXC    DS    0CL9           CLEAR LAST BYTES FOR JQE\nFHEX5    DS    0CL9\n         DS    CL8\nFHEXOC   DS    C              CLEAR LAST BYTE FOR JOE\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FORMATO": {"ttr": 4106, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "FORMAT   TITLE 'QUEUE COMMAND - JQE AND JOE FORMAT ROUTINES'      ONL01\nFORMAT   QSTART ,                  START FORMAT CSECT ASSEMBLY    ONL01\n***********************************************************************\n* RNB CHANGES:                                                        *\n*      (1) RNB17 - WHEN FORMATTING JOES, CHECK FOR JOE ON PSO AND     *\n*                  INDICATE 'EXT-WTR' IF SO. ALSO, DON'T INDICATE ON  *\n*                  ON PRINT/PUNCH UNLESS SHOWS ACTIVE IN JOEFLAG1.    *\n*                  ALSO, FIX BUG IN GETTING TO CHECKPOINT JOE FOR     *\n*                  RECORDS LEFT, AND FIX RECORDS LEFT FOR SP2.        *\n*                  ALSO, IF JOE NOT BUSY, BUT CHKPT JOE VALID, PRINT  *\n*                  NUMBER OF RECORDS LEFT, NOT TOTAL RECORDS.         *\n*                  08 OCT 82 - FIX FOR REMOTE LINECNT NOT DECREMENTING*\n*      (2) RNB18 - DISTINGUISH BETWEEN JOES WITH REMOTE ROUTING AND   *\n*                  THOSE WITH SPECIAL LOCAL ROUTING (DEFINED BY DESTID*\n*                  STATEMENTS WITH DEST=UNNN).                        *\n*      (3) RNB19 - WHEN LISTING JQE'S, DON'T ASSUME INPUT QUEUE, BUT  *\n*                  USE THE JQETYPE INSTEAD. ALSO, SPECIALLY HANDLE    *\n*                  CONVERSION AND DUMP QUEUES, AND AWAITING OUTPUT.   *\n*      (4) RNB20 - WHEN LISTING THINGS, DISTINGUISH BETWEEN NORMAL    *\n*                  HOLD, HOLD ALL, AND DUPLICATE HOLD. ALSO, FOR      *\n*                  JOES, INDICATE SELECT=NO IF APPLICABLE.            *\n*      (5) RNB21 - FIX SETDEVIC SUBROUTINE FOR SP2.                   *\n*      (6) RNB25 - ALLOW 'COUNT' PARM TO HO TO INDICATE TOTAL LINE    *\n*                  COUNT DESIRED FOR JOBS ON HELD OUTPUT QUEUE        *\n*      (7) RNB28 - FIX FOR REMOTE PRINTER LINECOUNTS.                 *\n***********************************************************************\n         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA\n         L     R10,QVDSPL     LOAD BASE REG\n         USING JQE,R9         BASE REG FOR JQE DSECT\n         USING JOE,R8         BASE REG FOR JOE DSECT\n         USING WORK,R13       BASE FOR LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   INPUT TO THIS MODULE -                                            *\n*     R1 = 0 INDICATES PRINT JQE                                      *\n*     R1 = 4 INDICATES PRINT JOE                                      *\n*     R9 CONTAINS JQE ADDRESS                                         *\n*     R8 CONTAINS JOE ADDRESS                                         *\n*                                                                     *\n***********************************************************************\n*                                                                     *\n*   BRANCH TO PROPER ROUTINE                                          *\n*                                                                     *\n***********************************************************************\n         MVC   FCLEAR,=CL80' ' CLEAR THE PRINT AREA\n         MVC   FQUEUE,QCLASS  CLASS NAME\n         MVC   QDHLINE,HEADING REPORT HEADING\n         CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?\n         BE    NOTBUSY        YES. SKIP.\n*        CLC   =X'01000100',JQEPRTRT IS THE PRINT/PUNCH FOR LOCAL?\n*        BE    LOCAL          YES. SKIP THIS ROUTINE.\n*        MVC   FREMOTE,=C'RJE' INDICATE THIS JOB IS REMOTE\n         TM    JQEFLAG1,JQE1BUSY IS THE JOB EXECUTING?\n         BZ    NOTBUSY        NO. SKIP THIS ROUTINE.\n         IC    R15,JQEFLAG1   GET SYSTEM NUMBER\n         N     R15,=F'7'      ZERO OUT UNWANTED BITS\n         SLL   R15,3          MULTIPLY BY 8\n         LA    R15,QSYSID(R15) OBTAIN SYSTEM ID\n         MVC   FSYSID,0(R15)  MOVE SYSTEM ID TO DISPLAY\nNOTBUSY  CLI   QCLASS,24           SKIP SERVICE ROUTINE           CL005\n         BH    CHEKJQE              IF UNDEFINED                  CL005\n         SR    R15,R15             COMPUTE BRANCH INDEX           CL005\n         IC    R15,QCLASS          QUEUE TYPE                     CL005\n         B     *+4(R15)            BR BASED ON QUEUE TYPE         CL005\n         B     LISTTSO             0  TSO QUEUE                   CL005\n         B     LISTSTC             4  STC QUEUE                   CL005\n         B     LISTHO              8  HELD OUTPUT QUEUE           CL005\n         B     LISTDM              12 DUMP QUEUE                  CL005\n         B     LISTCN              16 CONVERSION QUEUE            CL005\n         B     LISTAOUT            20 AWAITING OUTPUT QUEUE       CL005\n         B     LISTSTUP            24 AWAITING SETUP QUEUE        CL005\nCHEKJQE  LTR   R1,R1          IS REQUEST FOR JQE OR JOE?          CL005\n         BZ    LISTJQE        JQE.\n***********************************************************************\n*                                                                     *\n*   FORMAT JOE                                                        *\n*                                                                     *\n***********************************************************************\nLISTJOE  MVC   FQNAME,=C'OUTPUT' MOVE IN NAME OF QUEUE\n         CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?\n         BE    HEXO           YES. DO IT.\n         TM    JOEFLAG2,JOE2SLEC   IS THIS JOE SELECTABLE?        RNB20\n         BZ    LSTJOEAA            /YES - DON'T FLAG IT           RNB20\n         MVC   FHOLD,=C' S=N'      /NO  - SAY SO                  RNB20\nLSTJOEAA EQU   *                                                  RNB20\n         L     R0,JOERECCT    NUMBER OF PRINT LINES\n         CVD   R0,CONVERT     CONVERT TO DECIMAL\n         MVC   FLINES,ED8     PREPARE FOR EDIT\n         ED    FLINES,CONVERT+4 EDIT NUMBER OF LINES\n*        TM    JOEFLAG,X'20'  IS THIS JOB PRINTING?               RNB17\n*        BNO   LOCAL          NO. SKIP.                           RNB17\n         TM    JOEFLAG1,JOE1BUSY IS JOE ACTIVE?                   RNB17\n         BZ    LSTJOE$$          /NO  - DON'T SET DEVICE ID       RNB17\n*                                /YES -                           RNB17\n         CLI   JOEDEVID,X'0F'    IS JOB ON PSO (EXTERNAL WRITER)? RNB17\n         BNE   LSTJOE$           /NO  - GO DO REAL DEVICE         RNB17\n         MVC   FPRINT,=CL8'EXT-WTR'  /YES - SAY SO                RNB17\n         B     LSTJOE$$                                           RNB17\nLSTJOE$  TM    JOEDEVID,X'40'           JOB ON NJE DEVICE?        RNB17\n         BO    LOCAL                     /YES - SKIP DEVICE ID    RNB17\n         LA    R3,JOEDEVID    A(OUTPUT DEVICE DESCRIPTOR            FCI\n         BAL   R7,SETDEVIC    SET THE OUTPUT DEVICE                 FCI\nLSTJOE$$ EQU   *                                                  RNB17\n         TM    JOEFLAG1,JOE1CKV IS CKPT JOE VALID?                RNB17\n         BO    LSTJOE##         /YES - USE RECORDS PRINTED        RNB17\n         TM    JOEFLAG1,JOE1BUSY /NO - IS JOE BUSY?               RNB17\n         BZ    LOCAL            IF NOT, GO DO LOCAL STUFF         RNB17\n         B     LIST             IF YES, SKIP LOCAL STUFF, GO LIST RNB17\nLSTJOE## EQU   *                                                  RNB17\n         L     R0,JOERECCT    RESTORE R0 FOR REMOTES              RNB28\n         LR    R3,R8            SAVE WORK JOE ADDRESS             RNB17\n         B     LIST                NO CKPT FOR NOW                UF046\nLOCAL    DS    0H                                                 UF047\n         SR    R1,R1               CLEAR REG                      UF047\n         ICM   R1,B'0111',JOECHARB OFFSET TO CHAR JOE             UF047\n         BZ    LOCAL1              NONE, SKIP THIS                UF047\n         A     R1,QCJOTA           GET JOE ADDRESS                UF047\n         PUSH  USING                                              UF047\n         DROP  R8                  DROP OLD JOE ADDRESSING        UF047\n         USING JOE,R1              TEMP USING                     UF047\n         TM    JOEWTRID,X'FF'-X'40'  WAS THERE A WTRID?           UF047\n         BZ    LOCAL1              NO, SKIP                       UF047\n         MVC   FLINES+10(3),=C' W='  SET PREFIX                   UF047\n         MVC   FLINES+13(8),JOEWTRID SET WRITER ID                UF047\n         POP   USING                                              UF047\nLOCAL1   DS    0H                                                 UF047\n         LA    R15,FREMOTE    ADDRESS TO PUT TEXT\n         LA    R1,JOEROUT     POINT TO ROUTING INFO                FCI*\n***********************************************************************\n*RMTORLCL SUBROUTINE - DETERMINE REMOTE OR LOCAL DESTINATION       FCI*\n* R1 POINTS TO PRTRT/PUNRT, R15 TO ASSEMBLY POINTER                FCI*\n***********************************************************************\nRMTORLCL CLI   3(R1),0        IS IT FOR REMOTE 00=LOCAL            FCI*\n         BE    LIST           NO LUCK .. HAVE TO WORK FOR IT       FCI*\n         CLC   =H'0',0(R1)    SPECIAL LOCAL ROUTING (SP2) ?       RNB18\n         BNE   RMTORLC1          /NO  - GO FORMAT RMTNN           RNB18\n         MVC   0(L'LCL,R15),LCL  /YES - MOVE IN LCL               RNB18\n         LA    R15,L'LCL(R15)    BUMP POINTER                     RNB18\n         B     RMTORLC2                                           RNB18\nRMTORLC1 EQU   *                                                  RNB18\n         MVC   0(L'RMT,R15),RMT       MOVE IN 'RMT'                FCI*\n         LA    R15,L'RMT(R15)  BUMP POINTER                        FCI*\nRMTORLC2 EQU   *                                                  RNB18\n         SR    R14,R14        LOAD RMT FLAGS                       FCI*\n         IC    R14,3(R1)      FROM JOEROUT                        RNB18\n         CVD   R14,DOUBLEWD   RMT NUMBER TO DECIMAL                FCI*\n         B     FITINUM1       FIT THE NUMBER IN RMT MESSAGE        FCI*\n         SPACE 2\n***********************************************************************\n* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT           FCI*\n*                                                                  FCI*\n***********************************************************************\nFITINUM  CVD   R1,DOUBLEWD    CONVERT TO PACKED DECIMAL            FCI*\nFITINUM1 MVC   NUMBER(L'NORMAL),NORMAL INITIALIZE THE EDIT FORMAT  FCI*\n         LA    R1,NUMBER+SIGNORM IN CASE OF ZEROES                 FCI*\n         EDMK  NUMBER(L'NORMAL),DOUBLEWD+2 CONVERT TO EBCDIC       FCI*\n         LA    R14,NUMBER+L'NORMAL-1 A(END OF CONVERTED NUMBER)    FCI*\n         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1   FCI*\n         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG            FCI*\n         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                  FCI*\n         B     LIST           RETURN TO OUR CALLER                 FCI*\n         SPACE 3                                                   FCI*\nMVNUMBER MVC   0(0,R15),0(R1) TO BE EXECUTED                       FCI*\n         SPACE 2                                                   FCI*\nNORMAL   DC    X'402020202020202020202120' EDIT MASK               FCI*\nSIGNORM  EQU   11             OFFSET TO LAST DIGIT                 FCI*\nRMT      DC    C'RMT'                                              FCI*\nLCL      DC    C'LCL'                                             RNB18\n***********************************************************************\n*                                                                     *\n*   FORMAT JQE                                                        *\n*                                                                     *\n***********************************************************************\nLISTTSO  MVC   FQNAME(8),=C'TSO USER' NAME OF QUEUE\n         B     LIST           CONTINUE\nLISTSTC  MVC   FQNAME(8),=C'SYSTEM Q' NAME OF QUEUE\n         B     LIST           CONTINUE\nLISTHO   MVC   FQNAME(8),=C'HELD OUT' NAME OF QUEUE\n         B     LIST           CONTINUE\nLISTDM   MVC   FQNAME(4),=C'DUMP'     NAME OF QUEUE               RNB19\n         B     LIST                                               RNB19\nLISTAOUT MVC   FQNAME(6),=C'AW OUT'   NAME OF QUEUE               RNB19\n         B     LISTCN1                GO DO SYSAFF                RNB19\nLISTSTUP MVC   FQNAME(5),=C'SETUP'    NAME OF QUEUE               CL005\n         B     LIST                                               CL005\nLISTCN   MVC   FQNAME(6),=C'CONVRT'   NAME OF QUEUE               RNB19\n         MVC   FQUEUE,JQEJCLAS        JOB CLASS                   RNB19\nLISTCN1  TM    JQEFLAG1,JQE1BUSY      IS JOB CONVERTING?          RNB19\n         BNZ   LIST                   /YES - GO LIST IT           RNB19\n*                                     /NO  - PUT SYSAFF IN        RNB19\n         TM    JQEFLAG2,JQE2SAF       CHECK SYSTEM AFFINITY       RNB19\n         BO    LIST                   LIST IT IF NO SPECIAL AFF   RNB19\n         LA    R15,QSYSID+8           GET FIRST SID               RNB19\n         TM    JQEFLAG2,X'01'         IS THIS IT?                 RNB19\n         BO    LISTCN2                /YES -                      RNB19\n         LA    R15,8(,R15)            /NO  - CHECK REST           RNB19\n         TM    JQEFLAG2,X'02'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\n         TM    JQEFLAG2,X'04'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\n         TM    JQEFLAG2,X'08'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\n         TM    JQEFLAG2,X'10'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\n         TM    JQEFLAG2,X'20'                                     RNB19\n         BO    LISTCN2                                            RNB19\n         LA    R15,8(,R15)                                        RNB19\nLISTCN2  MVC   FREMOTE(4),0(R15)      MOVE SYSTEM ID TO DISPLAY   RNB19\n         B     LIST                                               RNB19\n*LISTJQE  MVC   FQNAME,=C' INPUT' NAME OF QUEUE                   RNB19\nLISTJQE  MVC   FQNAME(5),=CL5'XEQ'  ASSUME XEQ QUEUE              RNB19\n         TM    JQETYPE,$XEQ         IS IT XEQ QUEUE?              RNB19\n         BO    LIST                 /YES - GO LIST IT             RNB19\n         MVC   FQNAME(5),=C'INPUT'  ELSE ASSUME INPUT, ETC.       RNB19\n         TM    JQETYPE,$INPUT                                     RNB19\n         BO    LIST                                               RNB19\n         MVC   FQNAME(6),=C'OUTPUT'                               RNB19\n         TM    JQETYPE,$OUTPUT+$HARDCPY                           RNB19\n         BNZ   LIST                                               RNB19\n         MVC   FQNAME(5),=C'PURGE'                                RNB19\n         TM    JQETYPE,$PURGE                                     RNB19\n         BO    LIST                                               RNB19\n         MVC   FQNAME(8),=CL8'????????'                           RNB19\nLIST     CLI   QSUBNAME,C'X'  IS THE REQUEST FOR A HEX DUMP?\n         BE    HEX            YES. DO IT.\n         MVC   FCOUNT,ED5     PREPARE FOR EDIT\n         ED    FCOUNT,QCOUNT  EDIT THE POSITION IN QUEUE\n         MVC   FNAME,JQEJNAME MOVE IN JOBNAME\n         MVC   FJOBNO,ED5     PREPARE FOR EDIT\n         LH    R0,JQEJOBNO    LOAD HASP JOBNUMBER\n         CVD   R0,CONVERT     CONVERT TO DECIMAL\n         ED    FJOBNO,CONVERT+5 EDIT HASP JOBNUMBER\n         SR    R0,R0          ZERO OUT REGISTER\n         IC    R0,JQEPRIO     LOAD JQE PRIORITY\n         SRL   R0,4           DIVIDE BY 16\n         CVD   R0,CONVERT     CONVERT TO DECIMAL\n         MVC   FPRIO,ED3      PREPARE FOR EDIT\n         ED    FPRIO,CONVERT+6 EDIT JQE PRIORITY\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2\n         BZ    NOHOLD         NO.\n         MVC   FHOLD,=C'HELD' INDICATE JOB HELD\n         TM    JQEFLAG1,JQE1HLD1  SPECIFIC HOLD?                  RNB20\n         BO    NOHOLD             /YES - GO DISPLAY               RNB20\n         MVC   FHOLD,=C'DUP '     ASSUME DUPLICATE                RNB20\n         TM    JQEFLAG1,JQE1HLD2  IS IT DUPLICATE HOLD?           RNB20\n         BO    NOHOLD             /YES - GO DISPLAY               RNB20\n         MVC   FHOLD,=C'$HA '     ELSE MUST BE FROM $HA           RNB20\nNOHOLD   DS    0H\n         CLC   QCODEH,=H'28'  IS THIS THE HO COMMAND?             RNB25\n         BNE   LIST2          /NO  - DO NORMAL LISTING            RNB25\n*                             /YES -                              RNB25\n         CLC   =C'COUNT',QPARM1  DOES USER WANT LINE COUNTS?      RNB25\n         BNE   LIST2          /NO  - DO NORMAL LISTING            RNB25\n*                             /YES - GET JCT AND FORMAT LINE CNT  RNB25\n         MVC   QCTRAK,JQETRAK DISK ADDR OF JCT                    RNB25\n         L     R3,QCJCTA      ADDR OF IOAREA FOR JCT              RNB25\n         LR    R1,R3          PARM FOR READSPC                    RNB25\n         AL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16\n         L     R15,=V(READSPC)  ROUTINE TO READ HASPACE           RNB25\n         BALR  R14,R15          GO DO IT                          RNB25\n         USING JCT,R3         BASE FOR JCT                        ONL16\n         SPACE 1                                                  ONL03\n         CLC   JCTID,=CL4'JCT'  WAS A JCT READ FROM SPOOL ?       ONL03\n         BNE   LIST2          SKIP IF NO                          ONL03\n         CLC   JCTJNAME,JQEJNAME  DOES JOBNAME MATCH ?            ONL03\n         BNE   LIST2          SKIP IF NO                          ONL03\n         LA    R1,JQE         ADDR OF JQE                         ONL03\n         SL    R1,QCJQTA      COMPUTE THE JQE OFFSET              ONL03\n         CL    R1,JCTJQE      DOES OFFSET MATCH THE JCT'S ?       ONL03\n         BNE   LIST2          SKIP IF NO                          ONL03\n         SPACE 1                                                  ONL03\n         L     R0,JCTLINES    GET TOTAL LINES GENERATED BY JOB    RNB25\n         DROP  R3                                                 RNB25\n         SPACE 1                                                  ONL03\n         CVD   R0,CONVERT     CONVERT TO DECIMAL                  RNB25\n         MVC   FLINES,ED8     PREPARE FOR EDIT                    RNB25\n         ED    FLINES,CONVERT+4  PRINT TOTAL LINE COUNT           RNB25\n         C     R0,=F'9999999' IS THE LINE COUNT >= 10 MILLION?    RNB25\n         BNH   LIST2          /NO  - GO LIST IT                   RNB25\n         MVI   FLINES+8,C'+'  /YES - SHOW OVERFLOW                RNB25\nLIST2    EQU   *                                                  RNB25\n         LA    R1,QDMSG       ADDR OF MESSAGE AREA\n         ST    R1,QDMSGA      STORE MESSAGE ADDR\n         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE\n         BALR  R14,R15        DISPLAY THE LINE\nSTOP     QSTOP\n***********************************************************************\n*                                                                     *\n*   TAKE HEX DUMP OF JOE                                              *\n*                                                                     *\n***********************************************************************\nHEXO     UNPK  FHEX1,0(8,R8)  UNPK FIRST PART OF JOE INTO HEX\n         UNPK  FHEX2,7(8,R8)  SECOND\n         UNPK  FHEX3,14(8,R8) THIRD\n         UNPK  FHEX4,21(8,R8) FOURTH\n         UNPK  FHEX5,28(5,R8) FIFTH\n         MVI   FHEXOC,C' '    CLEAR LAST BYTE\n         TR    FHEXO,TABLE    CHANGE TO PRINTABLE HEX\n         LA    R1,QDMSG       ADDR OF MESSAGE AREA\n         ST    R1,QDMSGA      STORE MESSAGE ADDR\n         MVC   QDMLNG,=H'80'  LENGTH OF DISPLAY LINE\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE\n         BALR  R14,R15        DISPLAY THE LINE\n***********************************************************************\n*                                                                     *\n*   TAKE HEX DUMP OF JQE                                              *\n*                                                                     *\n***********************************************************************\nHEX      UNPK  FHEX1,0(8,R9)  UNPK FIRST PART OF JOE INTO HEX\n         UNPK  FHEX2,7(8,R9)  SECOND\n         UNPK  FHEX3,14(8,R9) THIRD\n         UNPK  FHEX4,21(8,R9) FOURTH\n         MVC   FHEXC,QBLANK   CLEAR LAST BYTES\n         TR    FHEX,TABLE     CHANGE TO PRINTABLE HEX\n         B     NOHOLD         CALL DISPLAY\n***********************************************************************\n* SETDEVIC SUBROUTINE - GET DEVICE DATA (R3) POINTS TO DEVID       FCI*\n*                                                                  FCI*\n***********************************************************************\nSETDEVIC ST    R7,SETDHOLD       SAVE LINK ADDRESS                 FCI*\n         MVC   FPRINT(9),=CL9' '\n         TM    0(R3),HIGHBIT REMOTE DEVICE?                        FCI*\n         BO    RMTDEV         YES => OUTPUT IT                     FCI*\n         SR    R1,R1          FOR THE INSERT CHARACTER             FCI*\n         IC    R1,0(R3)         DEVICE TYPE                        FCI*\n         SRL   R1,4           RIGHT JUSTIFIED                      FCI*\n         MH    R1,DEVTYPEL    TYPE * LENGTH OF A DEVICE ENTRY      FCI*\n         LA    R1,DEVTABLE(R1) A(DEVICE TYPE)                      FCI*\n         MVC   FPRINT,1(R1)   PUT IN THE DEVICE TYPE\n         CLI   0(R3),0          INTERNAL READER?                   FCI*\n         BE    SETDRTN        YES => GIVE THE USER THE INFO        FCI*\n         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*\n         ICM   R15,3,1(R3)      DEVICE NUMBER  (SP2)              RNB21\n         CVD   R15,DOUBLEWD   IN PACKED DECIMAL                    FCI*\n         IC    R15,0(R1)      OFFSET TO WHERE THE DEV # GOES       FCI*\n         LA    R15,FPRINT(R15) A(WHERE THE DEV # GOES)\n         MVC   1(L'DIGITS3,R15),DIGITS3 SET UP THE EDIT OF 3 DIGITSKMT*\n         EDMK  0(L'DIGITS3+1,R15),DOUBLEWD+6 DEV # IN EBCDIC       FCI*\n         MVC   0(L'DIGITS3+1,R15),0(R1) ADJUST FOR BLANKS          FCI*\n*                                                                  FCI*\n         B     SETDRTN        GO EXIT\n*                                                                  FCI*\nRMTDEV   SR    R0,R0          FOR THE INSERT CHARACTER             FCI*\n         IC    R0,2(R3)         REMOTE NUMBER                     RNB21\n         CVD   R0,DOUBLEWD    IN PACKED DECIMAL                    FCI*\n         MVI   FPRINT,C'R'    INDICATE A REMOTE DEVICE             FCI*\n         MVC   FPRINT+2(L'THREEPT),THREEPT SET UP THE EDIT MASK    FCI*\n         EDMK  FPRINT+1(L'THREEPT),DOUBLEWD+6 CONVERT TO EBCDIC    FCI*\n         MVC   FPRINT+1(L'THREEPT),0(R1) ADJUST FOR BLANKS         FCI*\n         LA    R1,FPRINT+1    A(SPOT JUST BEFORE POSSIBLE SEP)     FCI*\nFINDPT   LA    R1,1(R1)       A(NEXT BYTE)                         FCI*\n         CLI   0(R1),C'.'     FOUND THE SEPARATOR?                 FCI*\n         BNE   FINDPT         NO => KEEP LOOKING                   FCI*\n         SR    R15,R15        FOR THE INSERT CHARACTER             FCI*\n         IC    R15,0(R3)        DEVICE TYPE INDICATOR              FCI*\n         SRL   R15,3          RIGHT JUSTIFIED                      FCI*\n         LA    R15,RMTDEVS-HIGHBIT/8(R15) A(DEVICE TYPE)           FCI*\n         MVC   1(2,R1),0(R15) PUT IN THE DEVICE TYPE               FCI*\n         MVC   3(1,R1),0(R3) PUT IN THE DEVICE NUMBER              FCI*\n         OI    3(R1),C'0'     MAKE THE DEVICE NUMBER PRINTABLE     FCI*\n         B     SETDRTN\n         EJECT ,                                                   FCI*\nSETDRTN  L     R7,SETDHOLD    GET RETURN ADDRESS                   FCI*\n         BR    R7             RETURN TO OUR CALLER                 FCI*\n         SPACE 5                                                   FCI*\nDIGITS3  DC    X'202020'                                           FCI*\nTHREEPT  DC    X'2020204B'                                         FCI*\n         DS    0H                                                  FCI*\nDEVTABLE DC    AL1(0),CL8'INTRDR',AL1(6),CL8'READER'               FCI*\n         DC    AL1(7),CL8'PRINTER',AL1(5),CL8'PUNCH'               FCI*\nDEVTYPEL DC    AL2((*-DEVTABLE)/4)                                 FCI*\nRMTDEVS  DC    C'**',C'RD',C'PR',C'PU'                             FCI*\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nED8      DC    X'4020202020202120'\nED5      DC    X'402020202021'\nED3      DC    X'40202021'\nHEADING  DC    C'  QUEUE  POSITION JOBNAME    JOB#  PRIORITY  LINES'\n         DC    CL40'   EXECUTING'\nHIGHBIT  EQU   X'80'\nTABLE    EQU   *-240\n         DC    C'0123456789ABCDEF' TRANSLATE TO PRINTABLE HEX\nWORK     DSECT\n         DS    CL80\nCONVERT  DS    D\nSETDHOLD DS    F\nDOUBLEWD DS    D\nNUMBER   DS    CL16\nFORMAT   CSECT\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nFORMAT   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $JQE\n         $JOE\n        $BUFFER ,                                                 ONL16\n         IFGRPL\n        $JCT   ,                                                  RNB25\n        $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\nFCLEAR   DS    0CL80          FORMAT FOR QUEUE RECORDS\nFQNAME   DS    CL6            NAME OF QUEUE\n         DS    C\nFQUEUE   DS    C              CLASS NAME\n         DS    CL2\nFCOUNT   DS    CL6            POSITION IN QUEUE\n         DS    CL2\nFNAME    DS    CL8            JOBNAME\n         DS    CL2\nFJOBNO   DS    CL6            JES2 JOB NUMBER\n         DS    CL2\nFPRIO    DS    CL4            JOB PRIORITY\n         DS    CL2\nFLINES   DS    CL8            NUMBER OF OUTPUT LINES\n         DS    CL3\nFSYSID   DS    CL8            SYSTEM ID\n         DS    CL3\nFHOLD    DS    CL4            JOB HOLD STATUS\n         DS    CL1\nFREMOTE  DS    CL8            REMOTE\n         ORG   FSYSID\nFPRINT   DS    CL8            PRINTING\n         ORG   FCOUNT\nFHEX     DS    0CL56          LENGTH OF JQE HEX DUMP\nFHEXO    DS    0CL64          LENGTH OF JOE HEX DUMP\nFHEX1    DS    0CL15\n         DS    CL14\nFHEX2    DS    0CL15\n         DS    CL14\nFHEX3    DS    0CL15\n         DS    CL14\nFHEX4    DS    0CL15\n         DS    CL14\nFHEXC    DS    0CL9           CLEAR LAST BYTES FOR JQE\nFHEX5    DS    0CL9\n         DS    CL8\nFHEXOC   DS    C              CLEAR LAST BYTE FOR JOE\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HELP": {"ttr": 4360, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "HELP     TITLE 'QUEUE COMMAND - DISPLAY HELP'                     ONL02 HEL00010\n******************************************************************ONL02 HEL00020\n*                                                                 ONL02 HEL00030\n* MODULE NAME = HELP                                              ONL02 HEL00040\n*                                                                 ONL02 HEL00050\n* DESCRIPTIVE NAME = THE QUEUE COMMAND HELP FACILITY DISPLAY      ONL02 HEL00060\n*                                                                 ONL02 HEL00070\n* AUTHOR = ROBERT M. JINKINS                                      ONL02 HEL00080\n*          COMPUTER SCIENCES DIVISION                             ONL02 HEL00090\n*          UNION CARBIDE CORP., NUCLEAR DIVISION                  ONL02 HEL00100\n*          OAK RIDGE NATIONAL LABORATORY                          ONL02 HEL00110\n*          P.O. BOX X                                             ONL02 HEL00120\n*          OAK RIDGE, TENNESSEE  37830                            ONL02 HEL00130\n*                                                                 ONL02 HEL00140\n*          PHONE: (615) 574-7208/5300                             ONL02 HEL00150\n*                  FTS  624-7208/5300                             ONL02 HEL00160\n*                                                                 ONL02 HEL00170\n*          SHARE INSTALLATION CODE = ONL                          ONL02 HEL00180\n*                                                                 ONL02 HEL00190\n* DATE WRITTEN = JUNE 83                                          ONL02 HEL00200\n*                                                                 ONL02 HEL00210\n* FUNCTION = TO DISPLAY THE HELP SCREENS IN RESPONSE TO A \"HELP\"  ONL02 HEL00220\n*    SUB-COMMAND OR AN UNDEFINED/UNAUTHORIZED SUB-COMMAND VERB.   ONL02 HEL00230\n*    HELP INFORMATION IS ONLY DISPLAYED FOR SUB-COMMANDS WHICH    ONL02 HEL00240\n*    THE USER IS AUTHORIZED TO USE.                               ONL02 HEL00250\n*                                                                 ONL02 HEL00260\n*    THE #H MACRO IS USED TO DEFINE THE HELP SCREENS AND IS       ONL02 HEL00270\n*    DISCUSSED IN THE COMMENTS AT THE BEGINNING OF THE #H MACRO.  ONL02 HEL00280\n*    AN OPERAND OF THIS MACRO DEFINES THE AUTHORITY REQUIRED      ONL02 HEL00290\n*    BEFORE A USER MAY SEE A GIVEN MESSAGE IN THE HELP DISPLAY.   ONL02 HEL00300\n*    THE USER'S AUTHORITY FOR HELP DISPLAYS (QAHELP) IS SET IN    ONL02 HEL00310\n*    THE AUTH CSECT BY DEFAULT TO THE USER'S AUTHORITY (QAFLAGS). ONL02 HEL00320\n*                                                                 ONL06 HEL00330\n* CHANGE ACTIVITY = NONE                                          ONL02 HEL00340\n*                                                                 ONL02 HEL00350\n******************************************************************ONL02 HEL00360\n         EJECT ,                                                  ONL02 HEL00370\n         MACRO ,                                                  ONL02 HEL00380\n&NAME    #H    &TYPE,&OFFSET,&TEXT,&USER=0                        ONL02 HEL00390\n.*****************************************************************ONL02 HEL00400\n.*                                                                ONL02 HEL00410\n.* MACRO NAME = #H                                                ONL02 HEL00420\n.*                                                                ONL02 HEL00430\n.* MODIFICATION ID = ONL02                                        ONL02 HEL00440\n.*                                                                ONL02 HEL00450\n.* DESCRIPTIVE NAME = QUEUE COMMAND HELP FACILITY MESSAGE ENTRY   ONL02 HEL00460\n.*                                                                ONL02 HEL00470\n.* AUTHOR = ROBERT M. JINKINS                                     ONL02 HEL00480\n.*          OAK RIDGE NATIONAL LABORATORY                         ONL02 HEL00490\n.*          4500-N MS-255                                         ONL02 HEL00500\n.*          P.O. BOX X                                            ONL02 HEL00510\n.*          OAK RIDGE, TENNESSEE  37830                           ONL02 HEL00520\n.*                                                                ONL02 HEL00530\n.*          PHONE: (615) 574-7208/5300                            ONL02 HEL00540\n.*                  FTS  624-7208/5300                            ONL02 HEL00550\n.*                                                                ONL02 HEL00560\n.*          SHARE INSTALLATION CODE = ONL                         ONL02 HEL00570\n.*                                                                ONL02 HEL00580\n.* DATE WRITTEN = JUNE 83                                         ONL02 HEL00590\n.*                                                                ONL02 HEL00600\n.* FUNCTION = THIS MACRO IS USED TO GENERATE ENTRIES IN HELP      ONL02 HEL00610\n.*    TABLE (IN THE HELP CSECT).  THE HELP TABLE ENTRIES, MAPPED  ONL02 HEL00620\n.*    BY THE HTEDSECT, IS UESD TO GENERATE THE HELP SCREENS.      ONL02 HEL00630\n.*                                                                ONL02 HEL00640\n.* SYNTAX:  NAME  #H  TYPE,OFFSET,TEXT,USER=X                     ONL02 HEL00650\n.*                                                                ONL02 HEL00660\n.*   WHERE:                                                       ONL02 HEL00670\n.*     NAME    - IS AN OPTIONL LABEL.                             ONL02 HEL00680\n.*     TYPE    - THIS REQUIRED OPERAND IS CODED AS FOLLOWS:       ONL02 HEL00690\n.*                 NORM  - MSG LINE WITH NO RESTRICTIONS.         ONL02 HEL00700\n.*                 ACTV  - MSG LINE, QAHFACTV AUTHORITY REQUIRED. ONL02 HEL00710\n.*                 BLOG  - MSG LINE, QAHFBLOG AUTHORITY REQUIRED. ONL02 HEL00720\n.*                 SSSM  - MSG LINE, QAHFSSSM AUTHORITY REQUIRED. ONL02 HEL00730\n.*                 SLOG  - MSG LINE, QAHFSLOG AUTHORITY REQUIRED. ONL02 HEL00740\n.*                 EXEC  - MSG LINE, QAHFEXEC AUTHORITY REQUIRED. ONL02 HEL00750\n.*                 OPER  - MSG LINE, QAHFOPER AUTHORITY REQUIRED. ONL02 HEL00760\n.*                 SYSP  - MSG LINE, QAHFSYSP AUTHORITY REQUIRED. ONL02 HEL00770\n.*                 QAHX... - AN EXPRESSION BEGINNING WITH THE     ONL02 HEL00780\n.*                           CHARACTERS \"QAHX\" DEFINING THE       ONL02 HEL00790\n.*                           REQUIRED AUTHORITY BITS              ONL02 HEL00800\n.*                           (E.G. \"QAHXSSSM+QAHXOPER\").          ONL02 HEL00810\n.*                 PAGE  - INDICATES END OF THE CURRENT SCREEN.   ONL02 HEL00820\n.*                 END   - INDICATES END OF THE LAST SCREEN.      ONL02 HEL00830\n.*                                                                ONL02 HEL00840\n.*               MESSAGE LINES REQUIRING AUTHORITY WILL NOT BE    ONL02 HEL00850\n.*               DISPLAYED UNLESS THE CORRESPONDING AUTHORITY     ONL02 HEL00860\n.*               BITS ARE ON IN QAHELP.                           ONL02 HEL00870\n.*                                                                ONL02 HEL00880\n.*     OFFSET  - GIVES THE NUMBER OF SPACES FROM THE RIGHT SIDE   ONL02 HEL00890\n.*               OF THE SCREEN TO THE BEGINNING OF THE MESSAGE    ONL02 HEL00900\n.*               TEXT.  THE OFFSET MUST BE A SELF-DEFINING TERM   ONL02 HEL00910\n.*               WITH A VALUE IN THE RANGE OF 0 TO 79.  THIS      ONL02 HEL00920\n.*               OPERAND IS IGNORED FOR TYPES \"PAGE\" AND \"END\".   ONL02 HEL00930\n.*                                                                ONL02 HEL00940\n.*               DEFAULT:  0                                      ONL02 HEL00950\n.*                                                                ONL02 HEL00960\n.*     TEXT    - IS THE TEXT TO BE DISPLAYED ON THE MESSAGE LINE. ONL02 HEL00970\n.*               THE TEXT MUST BE ENCLOSED IN APOSTROPHES.  THE   ONL02 HEL00980\n.*               OFFSET PLUS THE ASSEMBLED LENGTH OF THE TEXT     ONL02 HEL00990\n.*               MUST NOT EXCEED 80 CHARACTERS.  THIS OPERAND IS  ONL02 HEL01000\n.*               IGNORED FOR TYPES \"PAGE\" AND \"END\".              ONL02 HEL01010\n.*                                                                ONL02 HEL01020\n.*               NO DEFAULT, MUST BE CODED IF TYPE IS NOT \"PAGE\"  ONL02 HEL01030\n.*               OR \"END\"                                         ONL02 HEL01040\n.*                                                                ONL02 HEL01050\n.*     USER=X  - SPECIFIES OPTIONAL USER FLAGS FOR USE BY HELP    ONL02 HEL01060\n.*               CSECT MODS MADE BY YOUR INSTALLATION.  STANDARD  ONL02 HEL01070\n.*               HELP FACILITY PROCESSING DOES NOT USE THE USER   ONL02 HEL01080\n.*               FLAGS.  THIS OPERAND IS IGNORED FOR TYPES \"PAGE\" ONL02 HEL01090\n.*               AND \"END\".                                       ONL02 HEL01100\n.*                                                                ONL02 HEL01110\n.*               DEFAULT:  USER=0                                 ONL02 HEL01120\n.*                                                                ONL02 HEL01130\n.* CHANGE ACTIVITY = NONE                                         ONL02 HEL01140\n.*                                                                ONL02 HEL01150\n.*****************************************************************ONL02 HEL01160\n         GBLA  &MSGCNT             NUM HELP MSG'S ON CURRENT PAGE ONL02 HEL01170\n         LCLA  &OFF                OFFSET FOR MSG TEXT            ONL02 HEL01180\n         LCLA  &L                  COMPUTED TEXT LENGTH           ONL02 HEL01190\n         LCLA  &N                  CURRENT TEXT INDEX             ONL02 HEL01200\n         LCLB  &P                  SPECIAL CHAR PAIR INDICATOR    ONL02 HEL01210\n         LCLA  &TLEN               LENGTH OF OFFSET PLUS TEXT     ONL02 HEL01220\n         AIF   ('&TYPE' EQ 'NORM').LINE                           ONL02 HEL01230\n         AIF   ('&TYPE' EQ 'ACTV').LINE                           ONL02 HEL01240\n         AIF   ('&TYPE' EQ 'BLOG').LINE                           ONL02 HEL01250\n         AIF   ('&TYPE' EQ 'SSSM').LINE                           ONL02 HEL01260\n         AIF   ('&TYPE' EQ 'SLOG').LINE                           ONL02 HEL01270\n         AIF   ('&TYPE' EQ 'EXEC').LINE                           ONL02 HEL01280\n         AIF   ('&TYPE' EQ 'OPER').LINE                           ONL02 HEL01290\n         AIF   ('&TYPE' EQ 'SYSP').LINE                           ONL02 HEL01300\n         AIF   ('&TYPE'(1,4) EQ 'QAHX').LINE                      ONL02 HEL01310\n         AIF   ('&TYPE' EQ 'PAGE').HTEPAGE                        ONL02 HEL01320\n         AIF   ('&TYPE' EQ 'END').HTEEND                          ONL02 HEL01330\n         MNOTE 8,'#H MACRO - INVALID \"TYPE\" OPERAND'              ONL02 HEL01340\n         MEXIT ,                                                  ONL02 HEL01350\n.LINE    ANOP  ,                   DEFINE HELP MESSAGE LINE       ONL02 HEL01360\n         AIF   (T'&OFFSET EQ 'O').SKIPOFF                         ONL02 HEL01370\n         AIF   (T'&OFFSET NE 'N').OFFBAD                          ONL02 HEL01380\n&OFF     SETA  &OFFSET                                            ONL02 HEL01390\n.SKIPOFF ANOP ,                                                   ONL02 HEL01400\n         AIF   (&OFF LE 79).OFFOK                                 ONL02 HEL01410\n.OFFBAD  ANOP  ,                                                  ONL02 HEL01420\n         MNOTE 8,'#H MACRO - INVALID \"OFFSET\" OPERAND'            ONL02 HEL01430\n         MEXIT ,                                                  ONL02 HEL01440\n.OFFOK   ANOP  ,                                                  ONL02 HEL01450\n         AIF   (K'&TEXT LE 2).BADTEXT                             ONL02 HEL01460\n         AIF   ('&TEXT'(1,1) NE '''').BADTEXT                     ONL02 HEL01470\n         AIF   ('&TEXT'(K'&TEXT,1) NE '''').BADTEXT               ONL02 HEL01480\n&L       SETA  K'&TEXT-2                                          ONL02 HEL01490\n&N       SETA  1                                                  ONL02 HEL01500\n.CNTLOOP ANOP  ,                                                  ONL02 HEL01510\n&N       SETA  &N+1+&P                                            ONL02 HEL01520\n         AIF   (&N GE K'&TEXT).GOTLEN                             ONL02 HEL01530\n&P       SETB  ('&TEXT'(&N,2) EQ '''' OR '&TEXT'(&N,2) EQ '&&')   ONL02 HEL01540\n&L       SETA  &L-&P                                              ONL02 HEL01550\n         AGO   .CNTLOOP                                           ONL02 HEL01560\n.BADTEXT ANOP  ,                                                  ONL02 HEL01570\n         MNOTE 8,'#H MACRO - INVALID \"MSG-TEXT\" OPERAND'          ONL02 HEL01580\n         MEXIT ,                                                  ONL02 HEL01590\n.GOTLEN  ANOP  ,                                                  ONL02 HEL01600\n&TLEN    SETA  &OFF+&L                                            ONL02 HEL01610\n         AIF   (&TLEN LE 80).TLENOK                               ONL02 HEL01620\n         MNOTE 8,'#H MACRO - \"OFFSET\" + \"MSG-TEXT\" IS TOO LONG'   ONL02 HEL01630\n         MEXIT ,                                                  ONL02 HEL01640\n.TLENOK  ANOP  ,                                                  ONL02 HEL01650\n&MSGCNT  SETA  &MSGCNT+1                                          ONL02 HEL01660\n         AIF   ('&TYPE' NE 'NORM').USETYPE                        ONL02 HEL01670\n&NAME    DC    AL1(0,&L,&OFF,&USER),CL&L&TEXT                     ONL02 HEL01680\n         MEXIT ,                                                  ONL02 HEL01690\n.USETYPE ANOP  ,                                                  ONL02 HEL01700\n         AIF   ('&TYPE'(1,4) EQ 'QAHX').TYPEWHO                   ONL02 HEL01710\n&NAME    DC    AL1(QAHX&TYPE,&L,&OFF,&USER),CL&L&TEXT             ONL02 HEL01720\n         MEXIT ,                                                  ONL02 HEL01730\n.TYPEWHO ANOP  ,                                                  ONL02 HEL01740\n&NAME    DC    AL1(&TYPE,&L,&OFF,&USER),CL&L&TEXT                 ONL02 HEL01750\n         MEXIT ,                                                  ONL02 HEL01760\n.HTEPAGE ANOP  ,                   END OF PAGE ENTRY              ONL02 HEL01770\n         MNOTE *,'    &MSGCNT MESSAGES DEFINED FOR THIS SCREEN'   ONL02 HEL01780\n&MSGCNT  SETA  0                                                  ONL02 HEL01790\n&NAME    DC    XL3'00FFFF'         END OF PAGE                    ONL02 HEL01800\n         MEXIT ,                                                  ONL02 HEL01810\n&MSGCNT  SETA  0                                                  ONL02 HEL01820\n.HTEEND  ANOP  ,                   END OF TABLE ENTRY             ONL02 HEL01830\n         AIF   (&MSGCNT EQ 0).DONE                                ONL02 HEL01840\n         MNOTE *,'    &MSGCNT MESSAGES DEFINED FOR THIS SCREEN'   ONL02 HEL01850\n&MSGCNT  SETA  0                                                  ONL02 HEL01860\n.DONE    ANOP  ,                                                  ONL02 HEL01870\n&NAME    DC    XL3'FFFFFF'         END OF HELP DISPLAY            ONL02 HEL01880\n         MEND  ,                                                  ONL02 HEL01890\n         EJECT ,                                                  ONL02 HEL01900\n******************************************************************ONL02 HEL01910\n*                                                                 ONL02 HEL01920\n*  DO ENTRY POINT HOUSEKEEPING                                    ONL02 HEL01930\n*                                                                 ONL02 HEL01940\n******************************************************************ONL02 HEL01950\n         SPACE 1                                                  ONL02 HEL01960\nHELP     QSTART ,                  START HELP CSECT ASSEMBLY      ONL02 HEL01970\n         SPACE 1                                                  ONL02 HEL01980\n         GBLB  &QPFK               PF-KEY OPTION                  ONL02 HEL01990\n         SPACE 1                                                  ONL02 HEL02000\n         USING WORK,R13            NOTE SAVE/WORK ADDRESSABILITY  ONL02 HEL02010\n         SPACE 1                                                  ONL02 HEL02020\n         L     R10,QVDSPL          ADDR OF DISPLAY WORK AREA      ONL02 HEL02030\n         USING QDISPLAY,R10        NOTE DISPLAY ADDRESSABILITY    ONL02 HEL02040\n         EJECT ,                                                  ONL02 HEL02050\n******************************************************************ONL02 HEL02060\n*                                                                 ONL02 HEL02070\n*  BUILD HELP DISPLAY FROM HELP TABLE ENTRIES                     ONL02 HEL02080\n*                                                                 ONL02 HEL02090\n******************************************************************ONL02 HEL02100\n         SPACE 1                                                  ONL02 HEL02110\n         ZAP   DWORD,QDLNES        GET NUMBER OF AVAILABLE MESSAGEONL02 HEL02120\n         CVB   R4,DWORD              LINES PER SCREEN IN BINARY   ONL02 HEL02130\n         SLR   R5,R5               ZERO CURRENT LINE NUMBER       ONL02 HEL02140\n         MVC   QDHLINE,HEADINGQ    SET HELP DISPLAY HEADING       WGH   HEL02150\n         LA    R6,HELPQUE          ADDR OF QUEUE HELP TABLE ENTRY WGH   HEL02160\n         CLI   QPARM1,C'Q'         HELP QUEUE?                    WGH   HEL02170\n         BE    NEXTHTE             YES... USE INTRO HELP          WGH   HEL02180\n         MVC   QDHLINE,HEADING     SET HELP DISPLAY HEADING       ONL02 HEL02190\n         LA    R6,HELPTABL         ADDR OF FIRST HELP TABLE ENTRY ONL02 HEL02200\n         USING HTEDSECT,R6         NOTE HTE ADDRESSABILITY        ONL02 HEL02210\n         SPACE 2                                                  ONL02 HEL02220\n*                                                                 ONL02 HEL02230\n*  PROCESS NEXT HELP TABLE ENTRY                                  ONL02 HEL02240\n*                                                                 ONL02 HEL02250\n         SPACE 1                                                  ONL02 HEL02260\nNEXTHTE  DS    0H                  PROCESS NEXT HELP TABLE ENTRY  ONL02 HEL02270\n         CLC   HTEPAGE,=X'00FFFF'  IS THIS AN END OF PAGE ENTRY?  ONL02 HEL02280\n         BE    DONEPAGE            SKIP IF YES                    ONL02 HEL02290\n         CLC   HTEEND,=X'FFFFFF'   IS THIS AN END OF TABLE ENTRY? ONL02 HEL02300\n         BE    DONETABL            SKIP IF YES                    ONL02 HEL02310\n         SPACE 1                                                  ONL02 HEL02320\n         ICM   R1,1,HTEFLAGS       GET MSG AUTHORITY REQUIREMENT  ONL02 HEL02330\n         BZ    AUTHOK              SKIP IF MSG IS NOT RESTRICTED  ONL02 HEL02340\n         EX    R1,AUTHTM           DOES USER HAVE AUTHORITY?      ONL02 HEL02350\n         BO    AUTHOK              SKIP IF YES                    ONL02 HEL02360\n         SPACE 1                                                  ONL02 HEL02370\n*  INSERT CODE HERE IF YOU WISH TO OVERRIDE MESSAGE SUPPRESSION   ONL02 HEL02380\n         SPACE 1                                                  ONL02 HEL02390\n         B     MSGDONE             SKIP OVER MSG DISPLAY CODE     ONL02 HEL02400\n         SPACE 1                                                  ONL02 HEL02410\nAUTHTM   TM    QAHELP,*-*          EXECUTED - IS MSG AUTHORIZED?  ONL02 HEL02420\n         SPACE 1                                                  ONL02 HEL02430\nAUTHOK   DS    0H                  MSG IS AUTHORIZED FOR DISPLAY  ONL02 HEL02440\n         SPACE 1                                                  ONL02 HEL02450\n*  INSERT CODE HERE IF YOU WISH TO SUPPRESS AN AUTHORIZED MESSAGE ONL02 HEL02460\n         SPACE 1                                                  ONL02 HEL02470\n         MVC   QDMSG,QBLANK        BLANK OUT MSG WORK AREA        ONL02 HEL02480\n         LA    R3,QDMSG            ADDR OF MSG WORK AREA          ONL02 HEL02490\n         ST    R3,QDMSGA           SET MSG ADDR FOR DISPLAY RTN   ONL02 HEL02500\n         SLR   R1,R1                                              ONL02 HEL02510\n         IC    R1,HTEOFF           MSG OFFSET FROM COLUMN 1       ONL02 HEL02520\n         LA    R3,0(R1,R3)         ADJUST AREA POINTER PER OFFSET ONL02 HEL02530\n         SLR   R2,R2                                              ONL02 HEL02540\n         ICM   R2,1,HTETLEN        LENGTH OF MSG TEXT             ONL02 HEL02550\n         BZ    MSGLNERR            ERROR IF NO TEXT               ONL02 HEL02560\n         LA    R1,0(R2,R1)         LENGTH OF OFFSET + TEXT        ONL02 HEL02570\n         CL    R1,=F'80'           IS TOTAL LENGTH OK?            ONL02 HEL02580\n         BH    MSGLNERR            ERROR IF TOO LONG              ONL02 HEL02590\n         STH   R1,QDMLNG           SET MSG LENGTH FOR DISPLAY RTN ONL02 HEL02600\n         BCTR  R2,0                TEXT LENGTH LESS 1 FOR EXECUTE ONL02 HEL02610\n         EX    R2,MSGMVC           PLUG TEXT INTO MSG LINE        ONL02 HEL02620\n         L     R15,=V(DISPLAY)     ADDR OF DISPLAY ROUTINE        ONL02 HEL02630\n         BALR  R14,R15             LINK TO ROUTINE                ONL02 HEL02640\n         SPACE 1                                                  ONL02 HEL02650\n         LA    R5,1(,R5)           INCREMENT LINE COUNT           ONL02 HEL02660\n         CLR   R5,R4               HAVE WE FILLED A SCREEN?       ONL02 HEL02670\n         BL    MSGDONE             SKIP IF NO                     ONL02 HEL02680\n         SLR   R5,R5               CLEAR LINE COUNT FOR NEW SCREENONL02 HEL02690\n         SPACE 1                                                  ONL02 HEL02700\nMSGDONE  DS    0H                  FINISHED WITH CURRENT MSG      ONL02 HEL02710\n         SLR   R1,R1                                              ONL02 HEL02720\n         IC    R1,HTETLEN          LENGTH OF MSG TEXT             ONL02 HEL02730\n         LA    R6,HTETEXT(R1)      INDEX TO NEXT HELP TABLE ENTRY ONL02 HEL02740\n         B     NEXTHTE             LOOP TO PROCESS NEXT ENTRY     ONL02 HEL02750\n         SPACE 2                                                  ONL02 HEL02760\nMSGMVC   MVC   0(*-*,R3),HTETEXT   EXECUTED - SET MSG TEXT        ONL02 HEL02770\n         SPACE 1                                                  ONL02 HEL02780\nMSGLNERR DS    0H                  MSG LENGTH ERROR               ONL02 HEL02790\n         QTILT '*** QUEUE LOGIC ERROR - BAD HELP MSG LENGTH ***'  ONL02 HEL02800\n         SPACE 2                                                  ONL02 HEL02810\n*                                                                 ONL02 HEL02820\n*  END OF PAGE ENTRY FOUND, FILL OUT CURRENT HELP SCREEN          ONL02 HEL02830\n*                                                                 ONL02 HEL02840\n         SPACE 1                                                  ONL02 HEL02850\nDONEPAGE DS    0H                  COMPLETE CURRENT SCREEN        ONL02 HEL02860\n         LA    R6,L'HTEPAGE(,R6)   POINT TO NEXT TABLE ENTRY      ONL02 HEL02870\n         LTR   R5,R5               WAS ANYTHING DISPLAYED?        ONL02 HEL02880\n         BNP   NEWPAGE             SKIP IF NO                     ONL02 HEL02890\n         SPACE 1                                                  ONL02 HEL02900\n         LR    R2,R4               COPY NUMBER OF AVAILABLE LINES ONL02 HEL02910\n         SR    R2,R5               COMPUTE NUMBER OF UNUSED LINES ONL02 HEL02920\n         BNP   NEWPAGE             SKIP IF SCREEN IS FULL         ONL02 HEL02930\n         SPACE 1                                                  ONL02 HEL02940\n         LA    R3,QDMSG            ADDR OF MSG WORK AREA          ONL02 HEL02950\n         ST    R3,QDMSGA           SET MSG ADDR FOR DISPLAY RTN   ONL02 HEL02960\n         MVI   QDMSG,C' '          SET A BLANK MESSAGE            ONL02 HEL02970\n         MVC   QDMLNG,=H'1'         WITH A LENGTH OF ONE          ONL02 HEL02980\n         SPACE 1                                                  ONL02 HEL02990\nBLNKLOOP DS    0H                  FILL OUT CURRENT SCREEN        ONL02 HEL03000\n         L     R15,=V(DISPLAY)     ADDR OF DISPLAY ROUTINE        ONL02 HEL03010\n         BALR  R14,R15             LINK TO ROUTINE                ONL02 HEL03020\n         BCT   R2,BLNKLOOP         LOOP IF MORE LINES TO BLANK    ONL02 HEL03030\n         SPACE 1                                                  ONL02 HEL03040\nNEWPAGE  DS    0H                  SETUP FOR NEXT SCREEN          ONL02 HEL03050\n         SLR   R5,R5               CLEAR LINE COUNT FOR NEXT PAGE ONL02 HEL03060\n         B     NEXTHTE             LOOP TO PROCESS NEXT HELP ENTRYONL02 HEL03070\n         SPACE 2                                                  ONL02 HEL03080\n*                                                                 ONL02 HEL03090\n*  END OF HELP TABLE ENTRY FOUND, DONE WITH HELP DISPLAY          ONL02 HEL03100\n*                                                                 ONL02 HEL03110\n         SPACE 1                                                  ONL02 HEL03120\nDONETABL DS    0H                  DONE WITH HELP TABLE           ONL02 HEL03130\n         QSTOP ,                   RETURN TO DISPLAY LAST SCREEN  ONL02 HEL03140\n         SPACE 2                                                  ONL02 HEL03150\n******************************************************************ONL02 HEL03160\n*                                                                 ONL02 HEL03170\n*  READ-ONLY DATA                                                 ONL02 HEL03180\n*                                                                 ONL02 HEL03190\n******************************************************************ONL02 HEL03200\n         SPACE 1                                                  ONL02 HEL03210\nHEADING  DC    CL80'THE FOLLOWING SUBCOMMANDS ARE SUPPORTED:'           HEL03220\nHEADINGQ DC    CL80' '                                                  HEL03220\n         SPACE 1                                                  ONL02 HEL03240\n         LTORG ,                   DEFINE LITERAL ORIGIN          ONL02 HEL03250\n         TITLE 'DEFINE HELP SCREENS'                              ONL02 HEL03260\n******************************************************************ONL02 HEL03270\n*                                                                 ONL02 HEL03280\n*  DEFINE HELP SCREENS                                            ONL02 HEL03290\n*                                                                 ONL02 HEL03300\n******************************************************************ONL02 HEL03310\n         SPACE 1                                                  ONL02 HEL03320\n         PUSH  PRINT               SAVE CURRENT PRINT STATUS      ONL02 HEL03330\n         PRINT NOGEN               DON'T PRINT #H MACRO EXPANSIONSONL02 HEL03340\n         SPACE 1                                                  ONL02 HEL03350\nHELPQUE  DS    0C                  START OF HELP QUEUE            ONL02 HEL03360\n         SPACE 1                                                  ONL02 HEL03370\n #H NORM,08,'THE QUEUE COMMAND ALLOWS A TSO USER TO DISPLAY JOBS'       HEL03380\n #H NORM,08,'AND VIEW SYSOUT DATASETS IN THE MVS JES2 QUEUE.'           HEL03390\n #H NORM,08,' '                                                         HEL03400\n #H NORM,08,'QUEUE PROVIDES FULL SCREEN VIEWING WITH FIND, UP, DOWN'    HEL03470\n #H NORM,08,'AND COLUMN SCROLL COMMANDS OR WITH PREDEFINED PF KEYS.'    HEL03480\n #H NORM,08,' '                                                         HEL03490\n #H NORM,08,'OUTPUT CAN BE SAVED ON DISK, COPIES CAN BE SPOOLED FOR'    HEL03500\n #H NORM,08,'PRINT, OUTPUT CAN BE DELETED, AND HELD OUTPUT RELEASED.'   HEL03510\n #H NORM,08,'JOBS MAY BE CANCELLED AND OPTIONALY PURGED.'               HEL03520\n #H NORM,08,' '                                                         HEL03530\n #H NORM,08,'THE + SIGN ON THE REPLY LINE INDICATES THAT MORE DATA'     HEL03540\n #H NORM,08,'IS AVAILABLE BY PRESSING ENTER.'                           HEL03550\n #H NORM,08,' '                                                         HEL03560\n #H NORM,08,'PRESS THE ENTER KEY TO VIEW A LIST OF VALID SUBCOMMANDS.'  HEL03570\n         SPACE 1                                                  ONL02 HEL03580\n #H PAGE                           INDICATE END OF TABLE          ONL02 HEL03590\n         EJECT ,                                                  ONL02 HEL03600\nHELPTABL DS    0C                  START OF HELP TABLE            ONL02 HEL03610\n         SPACE 1                                                  ONL02 HEL03620\n #H NORM,4,'END               - EXIT QUEUE COMMAND'                     HEL03630\n #H NORM,4,'STAT LEVEL        - DISPLAY ALL JOBS BEGINNING WITH LEVEL'  HEL03640\n #H NORM,4,'DJ   JOB NAME     - DISPLAY JOB BY FULL JOB NAME ONLY'      HEL03650\n #H NORM,4,'JH   JOBNAME      - DISPLAY JOB HISTORY'                    HEL03660\n #H NORM,4,'JCL  JOBNAME      - LIST JCL FOR A JOB'                     HEL03670\n #H NORM,4,'JLOG JOBNAME      - LIST JOBLOG FOR A JOB'                  HEL03680\n #H NORM,4,'JMSG JOBNAME      - LIST SYSTEM MESSAGES FOR A JOB'         HEL03690\n #H NORM,4,'DD   JOBNAME      - LIST SYSIN/SYSOUT DATASETS FOR A JOB'   HEL03700\n #H NORM,4,'PDDB JOBNAME      - LIST PDDB''S FOR A JOB'                 HEL03710\n #H NORM,4,'LIST JOBNAME DSID - LIST A SYSIN OR SYSOUT DATASET'         HEL03720\n #H NORM,4,'LIST * +/-N         LIST NEXT OR PREVIOUS N''TH DATASET'    HEL03730\n #H NORM,4,'SAVE NAME <TYPE>  - CREATE A COPY OF THE CURRENT DATASET'   HEL03740\n #H NORM,4,'          <#LINES>  CREATES ''USERID.NAME.SUFFIX'' '        HEL03740\n #H NORM,4,'SPIN CLASS <#LINES><DEST>- SPOOL COPY OF CURRENT DATASET'   HEL03760\n #H NORM,4,'PRINT ON CLASS DEST - OPEN SCREEN LOG'                      HEL03770\n #H NORM,4,'PRINT             - PRINT CURRENT SCREEN'                   HEL03780\n #H NORM,4,'PRINT OFF         - CLOSE SCREEN LOG'                       HEL03790\n #H NORM,4,' '                                                          HEL03800\n #H NORM,8,'DEFAULT FOR LEVEL IS LOGON ID'                              HEL03810\n #H NORM,8,'JOBNAME CAN BE JOB NAME, NUMBER, OR \"*/=/ \" FOR CURRENT JOBXHEL03820\n               '                                                        HEL03830\n #H NORM,8,'DSID CAN BE DETERMINED BY USING SUBCOMMAND DD OR PDDB'      HEL03840\n*#H NORM,8,'COUNT IS # OF LINES STARTING AT CURRENT LINE POINTER'       HEL03840\n*#H NORM,8,'DSNAME WILL BE EXPANDED TO USERID.DSNAME.DATA'              HEL03850\n         SPACE 1                                                  ONL02 HEL03860\n #H PAGE                           INDICATE END OF PAGE           ONL02 HEL03870\n         EJECT ,                                                  ONL02 HEL03880\n #H NORM,4,'HELP              - PRODUCE THIS LIST OF SUBCOMMANDS'       HEL03890\n #H NORM,4,'HELP QUEUE        - BRIEF OVERVIEW OF QUEUE'                HEL03900\n #H NORM,4,'STACK             - PROCESS CLIST SUB-COMMANDS (DEFAULT)'   HEL03900\n #H NORM,4,'TERMINAL/ENDSTACK - DO NOT PROCESS CLIST SUB-COMMANDS'      HEL03900\n #H NORM,4,'QUIET/TALK        - USEFULL FOR CLIST SUB-COMMANDS'         HEL03900\n #H NORM,4,'MODEL #           - SET 3270 MODEL 2, 3, 4, OR 5'           HEL03910\n         AIF  (NOT &QPFK).PFK1                                          HEL03920\n #H NORM,4,'PFK               - LIST PROGRAM FUNCTION KEYS'             HEL03930\n #H NORM,4,'PFK  NN  TEXT     - REDEFINE PROGRAM FUNCTION KEYS'         HEL03940\n.PFK1    ANOP ,                                                         HEL03950\n #H NORM,4,'FIND ''STRING'' COL(SS,EE)  - FIND CHARACTER STRING'        HEL03960\n #H NORM,4,'FALL ''STRING'' COL(SS,EE)  - FIND ALL OCCURRENCES OF'      HEL03970\n #H NORM,4,'                              STRING (COL DEFAULTS TO ALL)' HEL03980\n #H NORM,4,'COL  #       - REPOSITION HORIZONTALLY TO COLUMN NUMBER'    HEL03990\n #H NORM,4,'@/MD #       - REPOSITION TO SPECIFIC RECORD NUMBER'        HEL04000\n #H NORM,4,'+/D  #       - REPOSITION FORWARD IN DATASET # RECORDS'     HEL04010\n #H NORM,4,'-/UP #       - REPOSITION BACKWARD IN DATASET # RECORDS'    HEL04020\n #H NORM,4,'T/TOP        - REPOSITION TO TOP OF DATASET'                HEL04030\n #H NORM,4,'B/BOTTOM     - REPOSITION TO BOTTOM OF DATASET'             HEL04040\n #H NORM,4,'HF/HB #      - FORWARD/BACKWARD # HALF PAGES'               HEL04050\n #H NORM,4,'PF/PB #      - FORWARD/BACKWARD # PAGES'                    HEL04060\n #H NORM,0,'NOTE: (1) STRING SPECIFICATION FOR FIND MAY BE DELIMITED'   HEL04070\n #H NORM,8,'  WITH BLANKS, SINGLE QUOTES, OR DOUBLE QUOTES'             HEL04080\n         SPACE 1                                                  ONL02 HEL04090\n #H PAGE                           INDICATE END OF PAGE           ONL02 HEL04100\n         EJECT ,                                                  ONL02 HEL04110\n #H ACTV,4,'DA           - DISPLAY ALL JOBS IN EXECUTION'               HEL04120\n #H ACTV,4,'DT           - DISPLAY TSO USERS'                           HEL04130\n #H ACTV,4,'DS           - DISPLAY SYSTEM TASKS'                        HEL04140\n #H ACTV,4,'DC TYPE      - DISPLAY CPU BATCH/STC/TSO'                   HEL04150\n #H BLOG,4,'DQ           - DISPLAY INPUT QUEUES'                        HEL04160\n #H BLOG,4,'DI CLASS     - DISPLAY ALL JOBS IN INPUT CLASS'             HEL04170\n #H BLOG,4,'AI CLASS     - DISPLAY JOBS AVAILABLE FOR PROCESSING'       HEL04180\n #H BLOG,4,'HI CLASS     - DISPLAY HELD JOBS IN INPUT CLASS'            HEL04190\n #H BLOG,4,'DF           - DISPLAY OUTPUT QUEUES'                       HEL04200\n #H BLOG,4,'DO CLASS     - DISPLAY ALL JOBS IN OUTPUT CLASS'            HEL04210\n #H BLOG,4,'AO CLASS     - DISPLAY AVAILABLE OUTPUT'                    HEL04220\n #H BLOG,4,'HO CLASS     - DISPLAY HELD OUTPUT'                         HEL04230\n #H BLOG,4,'WO           - DISPLAY ONLY OUTPUT JOBS WITH WRITER NAME SPEHEL04250\n               CIFIED'                                                  HEL04260\n #H BLOG,4,' '                                                          HEL04270\n #H BLOG,8,'DEFAULT FOR CLASS IS ALL CLASSES'                           HEL04280\n #H SSSM,4,' '                                                          HEL04290\n #H SSSM,4,'CAN JOBNAME <P>        - CANCEL JOB (\"P\" OPTION FOR PURGE)' HEL04300\n #H SSSM,4,'DEL JOBNAME            - DELETE JOB'                        HEL04310\n #H SSSM,4,'REQ JOBNAME <NEWCLASS> - RELEASE JOB''S HELD OUTPUT'        HEL04320\n         SPACE 1                                                  ONL02 HEL04330\n #H PAGE                           INDICATE END OF PAGE           ONL02 HEL04340\n         EJECT ,                                                  ONL02 HEL04350\n #H SLOG,4,'SLOG  ID  <SEQ>   - LIST THE SYSTEM LOG DATASET'            HEL04360\n #H SLOG,4,'FTIME HH:MM:SS    - REPOSITION SYSTEM LOG TO GIVEN TIME'    HEL04370\n #H SLOG,8,'ID MAY BE A JOB# DETERMINED BY STATUS SYSLOG,'              HEL04380\n #H SLOG,8,'  OR IT MAY SPECIFY THE SYSTEM ID OF THE DESIRED SYSTEM'    HEL04390\n #H SLOG,8,'  (A NULL FIELD WILL LIST THE ACTIVE SYSTEM''S LOG)'        HEL04400\n #H SLOG,8,'DEFAULT FOR SEQ IS 0 (THE CURRENT SYSLOG DATASET)'          HEL04410\n #H SLOG,8,'  (USE A VALUE OF 1, 2, ... TO OBTAIN PREVIOUS DATASETS)'   HEL04420\n #H EXEC,4,' '                                                          HEL04430\n #H EXEC,4,'TSO CMD PRMS      - ISSUE ANY TSO COMMAND W/OPTIONAL PARMS' HEL04440\n #H SYSP,4,'PFX LEVEL         - CHANGE DEFAULT LEVEL FOR STATUS'        HEL04460\n #H SYSP,4,'XB  MTTR          - DISPLAY BLOCK FROM SYS1.HASPACE'        HEL04460\n #H SYSP,4,'                      USE \"*\" TO RE-SHOW AND \"+\" TO CHAIN'  HEL04470\n #H SYSP,4,'XD  JOBNAME DSID  - UNRESTRICTED DISPLAY OF DATASETS'       HEL04480\n #H SYSP,4,'XI                - DISPLAY ACTIVE INITIATORS'              HEL04490\n #H SYSP,4,'XJ  JOBNAME       - DISPLAY UNINTERPRETED JQES AND JOES'    HEL04500\n #H SYSP,4,'JQE JOBNAME       - DISPLAY JQE IN HEX/EBCDIC'              HEL04510\n #H SYSP,4,'IOT JOBNAME       - DISPLAY IOT IN HEX/EBCDIC'              HEL04520\n #H SYSP,4,'JCT JOBNAME <OFFSET>  - DISPLAY JCT IN HEX/EBCDIC'          HEL04530\n #H SYSP,4,'JOE JOBNAME       - DISPLAY JOES IN HEX/EBCDIC'             HEL04540\n #H SYSP,4,'HCT <BLOCK#><OFFSET>  - DISP CKPT AREAS (DAS,TGM,JIX,JQT,PSXHEL04550\n               T,JOT)'\n #H SYSP,4,'TGPS              - LIST HIGH TRACK GROUP USERS (A VERY SLOXHEL04560\n               W COMMAND)'                                              HEL04570\n         SPACE 1                                                  ONL02 HEL04580\n #H PAGE                           INDICATE END OF PAGE           ONL02 HEL04590\n         SPACE 1                                                  ONL02 HEL04600\n #H NORM,08,' '                                                         HEL04610\n #H NORM,08,'A TYPICAL SESSION MIGHT PROCEED AS FOLLOWS'                HEL04620\n #H NORM,08,' '                                                         HEL04630\n #H NORM,10,'STATUS           - PRODUCE LIST OF USERS JOBS'             HEL04640\n #H NORM,10,'JLOG NNNN        - DISPLAY JOB LOG FOR GIVEN JOB'          HEL04650\n #H NORM,10,'JMSG NNNN        - DISPLAY JOB MESSAGES FOR GIVEN JOB'     HEL04660\n #H NORM,10,'DD   NNNN        - DISPLAY LIST OF DATASETS FOR JOB'       HEL04670\n #H NORM,10,'PDDB NNNN        - USE PDDB IF DD TABLE DOES NOT EXIST'    HEL04680\n #H NORM,10,'LIST NNNN XXX    - DISPLAY SYSOUT DATASET BY DSID'         HEL04690\n #H NORM,10,'FIND STRING      - LOCATE CHARACTER STRING ON SCREEN'      HEL04700\n #H NORM,10,'PRINT ON         - CREATE COPY OF SCREEN IMAGE'            HEL04710\n #H NORM,10,'PF               - PAGE FORWARD IN DATASET'                HEL04720\n #H NORM,10,'PRINT            - CREATE COPY OF SCREEN IMAGE'            HEL04730\n #H NORM,10,'PRINT OFF        - SPOOL IMAGES TO PRINTER'                HEL04740\n #H NORM,10,'SPIN             - CREATE COPY OF DATASET ON PRINTER'      HEL04750\n #H NORM,10,'SAVE DSNAME      - CREATE COPY OF DATASET ON DISK'         HEL04760\n #H NORM,10,'DEL  NNNN        - DELETE OUTPUT FOR GIVEN JOB'            HEL04770\n #H NORM,10,'END              - TERMINATE QUEUE SESSION'                HEL04780\n #H NORM,10,' '                                                         HEL04790\n #H NORM,21,'NNNN  = JOB NUMBER FROM STATUS DISPLAY'                    HEL04800\n #H NORM,21,'XXX   = DATASET IDENTIFIER (DSID) FROM DD/PDDB DISPLAY'    HEL04810\n         SPACE 1                                                  ONL02 HEL04820\n #H PAGE                           INDICATE END OF TABLE          ONL02 HEL04830\n         SPACE 1                                                  ONL02 HEL04840\n #H END                            INDICATE END OF TABLE          ONL02 HEL04850\n         SPACE 1                                                  ONL02 HEL04860\n         POP   PRINT               RESTORE PRINT STATUS           ONL02 HEL04870\n         TITLE 'DEFINE CONTROL BLOCK DSECT''S'                    ONL02 HEL04880\n******************************************************************ONL02 HEL04890\n*                                                                 ONL02 HEL04900\n*  HELP TABLE ENTRY DSECT                                         ONL02 HEL04910\n*                                                                 ONL02 HEL04920\n******************************************************************ONL02 HEL04930\n         SPACE 1                                                  ONL02 HEL04940\nHTEDSECT DSECT ,                   HELP TABLE ENTRY DSECT         ONL02 HEL04950\nHTE      DS    0X                  ALTERNATE DSECT NAME           ONL02 HEL04960\nHTEFLAGS DS    AL1                 SUB-COMMAND AUTHORITY FLAGS    ONL02 HEL04970\nHTETLEN  DS    AL1                 LENGTH OF MESSAGE TEXT         ONL02 HEL04980\nHTEOFF   DS    AL1                 SCREEN OFFSET OF MESSAGE TEXT  ONL02 HEL04990\nHTEUSER  DS    AL1                 USER FLAG BYTE                 ONL02 HEL05000\nHTETEXT  DS    0C                  MESSAGE TEXT                   ONL02 HEL05010\n         SPACE 1                                                  ONL02 HEL05020\n         ORG   HTE                 REDEFINE DSECT                 ONL02 HEL05030\nHTEPAGE  DC    0XL3'00FFFF'        END OF PAGE ENTRY              ONL02 HEL05040\nHTEEND   DC    0XL3'00FFFF'        END OF TABLE ENTRY             ONL02 HEL05050\n         SPACE 2                                                  ONL02 HEL05060\n******************************************************************ONL02 HEL05070\n*                                                                 ONL02 HEL05080\n*  SAVE AREA/WORK AREA DSECT                                      ONL02 HEL05090\n*                                                                 ONL02 HEL05100\n******************************************************************ONL02 HEL05110\n         SPACE 1                                                  ONL02 HEL05120\nWORK     DSECT ,                   SAVE AREA/WORK AREA DSECT      ONL02 HEL05130\n         DS    90F              5  OS SAVE AREAS                  ONL02 HEL05140\nDWORD    DS    D                   SCRATCH DOUBLE WORD            ONL02 HEL05150\n         SPACE 2                                                  ONL02 HEL05160\n******************************************************************ONL02 HEL05170\n*                                                                 ONL02 HEL05180\n*  GENERATE QCOMMON DSECT                                         ONL02 HEL05190\n*                                                                 ONL02 HEL05200\n******************************************************************ONL02 HEL05210\n         SPACE 1                                                  ONL02 HEL05220\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       ONL02 HEL05230\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL02 HEL05240\n         $HASPEQU                                                       HEL05250\n         QCOMMON                                                  ONL02 HEL05260\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL02 HEL05270\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    ONL02 HEL05280\n         END   ,                                                  ONL02 HEL05290\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HELPO": {"ttr": 4615, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "HELP     TITLE 'QUEUE COMMAND - DISPLAY HELP'                     ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n* MODULE NAME = HELP                                              ONL02\n*                                                                 ONL02\n* DESCRIPTIVE NAME = THE QUEUE COMMAND HELP FACILITY DISPLAY      ONL02\n*                                                                 ONL02\n* AUTHOR = ROBERT M. JINKINS                                      ONL02\n*          OAK RIDGE NATIONAL LABORATORY                          ONL02\n*          BLDG. 4500-N  MS-259                                   ONL02\n*          P.O. BOX X                                             ONL02\n*          OAK RIDGE, TENNESSEE  37830                            ONL02\n*                                                                 ONL02\n*          PHONE: (615) 574-7208/5300                             ONL02\n*                  FTS  624-7208/5300                             ONL02\n*                                                                 ONL02\n*          SHARE INSTALLATION CODE = OR                           ONL02\n*                                                                 ONL02\n* DATE WRITTEN = JUNE 83                                          ONL02\n*                                                                 ONL02\n* FUNCTION = TO DISPLAY THE HELP SCREENS IN RESPONSE TO A \"HELP\"  ONL02\n*    SUB-COMMAND OR AN UNDEFINED/UNAUTHORIZED SUB-COMMAND VERB.   ONL02\n*    HELP INFORMATION IS ONLY DISPLAYED FOR SUB-COMMANDS WHICH    ONL02\n*    THE USER IS AUTHORIZED TO USE.                               ONL02\n*                                                                 ONL02\n*    THE #H MACRO IS USED TO DEFINE THE HELP SCREENS AND IS       ONL02\n*    DISCUSSED IN THE COMMENTS AT THE BEGINNING OF THE #H MACRO.  ONL02\n*    AN OPERAND OF THIS MACRO DEFINES THE AUTHORITY REQUIRED      ONL02\n*    BEFORE A USER MAY SEE A GIVEN MESSAGE IN THE HELP DISPLAY.   ONL02\n*    THE USER'S AUTHORITY FOR HELP DISPLAYS (QAHELP) IS SET IN    ONL02\n*    THE AUTH CSECT BY DEFAULT TO THE USER'S AUTHORITY (QAFLAGS). ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         EJECT ,                                                  ONL02\n         MACRO ,                                                  ONL02\n&NAME    #H    &TYPE,&OFFSET,&TEXT,&USER=0                        ONL02\n.*****************************************************************ONL02\n.*                                                                ONL02\n.* MACRO NAME = #H                                                ONL02\n.*                                                                ONL02\n.* MODIFICATION ID = ONL02                                        ONL02\n.*                                                                ONL02\n.* DESCRIPTIVE NAME = QUEUE COMMAND HELP FACILITY MESSAGE ENTRY   ONL02\n.*                                                                ONL02\n.* FUNCTION = THIS MACRO IS USED TO GENERATE ENTRIES IN HELP      ONL02\n.*    TABLE (IN THE HELP CSECT).  THE HELP TABLE ENTRIES, MAPPED  ONL02\n.*    BY THE HTEDSECT, IS UESD TO GENERATE THE HELP SCREENS.      ONL02\n.*                                                                ONL02\n.* SYNTAX:  NAME  #H  TYPE,OFFSET,TEXT,USER=X                     ONL02\n.*                                                                ONL02\n.*   WHERE:                                                       ONL02\n.*     NAME    - IS AN OPTIONL LABEL.                             ONL02\n.*     TYPE    - THIS REQUIRED OPERAND IS CODED AS FOLLOWS:       ONL02\n.*                 NORM  - MSG LINE WITH NO RESTRICTIONS.         ONL02\n.*                 ACTV  - MSG LINE, QAHFACTV AUTHORITY REQUIRED. ONL02\n.*                 BLOG  - MSG LINE, QAHFBLOG AUTHORITY REQUIRED. ONL02\n.*                 SSSM  - MSG LINE, QAHFSSSM AUTHORITY REQUIRED. ONL02\n.*                 SLOG  - MSG LINE, QAHFSLOG AUTHORITY REQUIRED. ONL02\n.*                 EXEC  - MSG LINE, QAHFEXEC AUTHORITY REQUIRED. ONL02\n.*                 OPER  - MSG LINE, QAHFOPER AUTHORITY REQUIRED. ONL02\n.*                 SYSP  - MSG LINE, QAHFSYSP AUTHORITY REQUIRED. ONL02\n.*                 QAHX... - AN EXPRESSION BEGINNING WITH THE     ONL02\n.*                           CHARACTERS \"QAHX\" DEFINING THE       ONL02\n.*                           REQUIRED AUTHORITY BITS              ONL02\n.*                           (E.G. \"QAHXSSSM+QAHXOPER\").          ONL02\n.*                 PAGE  - INDICATES END OF THE CURRENT SCREEN.   ONL02\n.*                 END   - INDICATES END OF THE LAST SCREEN.      ONL02\n.*                                                                ONL02\n.*               MESSAGE LINES REQUIRING AUTHORITY WILL NOT BE    ONL02\n.*               DISPLAYED UNLESS THE CORRESPONDING AUTHORITY     ONL02\n.*               BITS ARE ON IN QAHELP.                           ONL02\n.*                                                                ONL02\n.*     OFFSET  - GIVES THE NUMBER OF SPACES FROM THE RIGHT SIDE   ONL02\n.*               OF THE SCREEN TO THE BEGINNING OF THE MESSAGE    ONL02\n.*               TEXT.  THE OFFSET MUST BE A SELF-DEFINING TERM   ONL02\n.*               WITH A VALUE IN THE RANGE OF 0 TO 79.  THIS      ONL02\n.*               OPERAND IS IGNORED FOR TYPES \"PAGE\" AND \"END\".   ONL02\n.*                                                                ONL02\n.*               DEFAULT:  0                                      ONL02\n.*                                                                ONL02\n.*     TEXT    - IS THE TEXT TO BE DISPLAYED ON THE MESSAGE LINE. ONL02\n.*               THE TEXT MUST BE ENCLOSED IN APOSTROPHES.  THE   ONL02\n.*               OFFSET PLUS THE ASSEMBLED LENGTH OF THE TEXT     ONL02\n.*               MUST NOT EXCEED 80 CHARACTERS.  THIS OPERAND IS  ONL02\n.*               IGNORED FOR TYPES \"PAGE\" AND \"END\".              ONL02\n.*                                                                ONL02\n.*               NO DEFAULT, MUST BE CODED IF TYPE IS NOT \"PAGE\"  ONL02\n.*               OR \"END\"                                         ONL02\n.*                                                                ONL02\n.*     USER=X  - SPECIFIES OPTIONAL USER FLAGS FOR USE BY HELP    ONL02\n.*               CSECT MODS MADE BY YOUR INSTALLATION.  STANDARD  ONL02\n.*               HELP FACILITY PROCESSING DOES NOT USE THE USER   ONL02\n.*               FLAGS.  THIS OPERAND IS IGNORED FOR TYPES \"PAGE\" ONL02\n.*               AND \"END\".                                       ONL02\n.*                                                                ONL02\n.*               DEFAULT:  USER=0                                 ONL02\n.*                                                                ONL02\n.* CHANGE ACTIVITY = NONE                                         ONL02\n.*                                                                ONL02\n.*****************************************************************ONL02\n         GBLA  &MSGCNT             NUM HELP MSG'S ON CURRENT PAGE ONL02\n         LCLA  &OFF                OFFSET FOR MSG TEXT            ONL02\n         LCLA  &L                  COMPUTED TEXT LENGTH           ONL02\n         LCLA  &N                  CURRENT TEXT INDEX             ONL02\n         LCLB  &P                  SPECIAL CHAR PAIR INDICATOR    ONL02\n         LCLA  &TLEN               LENGTH OF OFFSET PLUS TEXT     ONL02\n         AIF   ('&TYPE' EQ 'NORM').LINE                           ONL02\n         AIF   ('&TYPE' EQ 'ACTV').LINE                           ONL02\n         AIF   ('&TYPE' EQ 'BLOG').LINE                           ONL02\n         AIF   ('&TYPE' EQ 'SSSM').LINE                           ONL02\n         AIF   ('&TYPE' EQ 'SLOG').LINE                           ONL02\n         AIF   ('&TYPE' EQ 'EXEC').LINE                           ONL02\n         AIF   ('&TYPE' EQ 'OPER').LINE                           ONL02\n         AIF   ('&TYPE' EQ 'SYSP').LINE                           ONL02\n         AIF   ('&TYPE'(1,4) EQ 'QAHX').LINE                      ONL02\n         AIF   ('&TYPE' EQ 'PAGE').HTEPAGE                        ONL02\n         AIF   ('&TYPE' EQ 'END').HTEEND                          ONL02\n         MNOTE 8,'#H MACRO - INVALID \"TYPE\" OPERAND'              ONL02\n         MEXIT ,                                                  ONL02\n.LINE    ANOP  ,                   DEFINE HELP MESSAGE LINE       ONL02\n         AIF   (T'&OFFSET EQ 'O').SKIPOFF                         ONL02\n         AIF   (T'&OFFSET NE 'N').OFFBAD                          ONL02\n&OFF     SETA  &OFFSET                                            ONL02\n.SKIPOFF ANOP ,                                                   ONL02\n         AIF   (&OFF LE 79).OFFOK                                 ONL02\n.OFFBAD  ANOP  ,                                                  ONL02\n         MNOTE 8,'#H MACRO - INVALID \"OFFSET\" OPERAND'            ONL02\n         MEXIT ,                                                  ONL02\n.OFFOK   ANOP  ,                                                  ONL02\n         AIF   (K'&TEXT LE 2).BADTEXT                             ONL02\n         AIF   ('&TEXT'(1,1) NE '''').BADTEXT                     ONL02\n         AIF   ('&TEXT'(K'&TEXT,1) NE '''').BADTEXT               ONL02\n&L       SETA  K'&TEXT-2                                          ONL02\n&N       SETA  1                                                  ONL02\n.CNTLOOP ANOP  ,                                                  ONL02\n&N       SETA  &N+1+&P                                            ONL02\n         AIF   (&N GE K'&TEXT).GOTLEN                             ONL02\n&P       SETB  ('&TEXT'(&N,2) EQ '''' OR '&TEXT'(&N,2) EQ '&&')   ONL02\n&L       SETA  &L-&P                                              ONL02\n         AGO   .CNTLOOP                                           ONL02\n.BADTEXT ANOP  ,                                                  ONL02\n         MNOTE 8,'#H MACRO - INVALID \"MSG-TEXT\" OPERAND'          ONL02\n         MEXIT ,                                                  ONL02\n.GOTLEN  ANOP  ,                                                  ONL02\n&TLEN    SETA  &OFF+&L                                            ONL02\n         AIF   (&TLEN LE 80).TLENOK                               ONL02\n         MNOTE 8,'#H MACRO - \"OFFSET\" + \"MSG-TEXT\" IS TOO LONG'   ONL02\n         MEXIT ,                                                  ONL02\n.TLENOK  ANOP  ,                                                  ONL02\n&MSGCNT  SETA  &MSGCNT+1                                          ONL02\n         AIF   ('&TYPE' NE 'NORM').USETYPE                        ONL02\n&NAME    DC    AL1(0,&L,&OFF,&USER),CL&L&TEXT                     ONL02\n         MEXIT ,                                                  ONL02\n.USETYPE ANOP  ,                                                  ONL02\n         AIF   ('&TYPE'(1,4) EQ 'QAHX').TYPEWHO                   ONL02\n&NAME    DC    AL1(QAHX&TYPE,&L,&OFF,&USER),CL&L&TEXT             ONL02\n         MEXIT ,                                                  ONL02\n.TYPEWHO ANOP  ,                                                  ONL02\n&NAME    DC    AL1(&TYPE,&L,&OFF,&USER),CL&L&TEXT                 ONL02\n         MEXIT ,                                                  ONL02\n.HTEPAGE ANOP  ,                   END OF PAGE ENTRY              ONL02\n         MNOTE *,'    &MSGCNT MESSAGES DEFINED FOR THIS SCREEN'   ONL02\n&MSGCNT  SETA  0                                                  ONL02\n&NAME    DC    XL3'00FFFF'         END OF PAGE                    ONL02\n         MEXIT ,                                                  ONL02\n&MSGCNT  SETA  0                                                  ONL02\n.HTEEND  ANOP  ,                   END OF TABLE ENTRY             ONL02\n         AIF   (&MSGCNT EQ 0).DONE                                ONL02\n         MNOTE *,'    &MSGCNT MESSAGES DEFINED FOR THIS SCREEN'   ONL02\n&MSGCNT  SETA  0                                                  ONL02\n.DONE    ANOP  ,                                                  ONL02\n&NAME    DC    XL3'FFFFFF'         END OF HELP DISPLAY            ONL02\n         MEND  ,                                                  ONL02\n         EJECT ,                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  DO ENTRY POINT HOUSEKEEPING                                    ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nHELP     QSTART ,                  START HELP CSECT ASSEMBLY      ONL02\n         SPACE 1                                                  ONL02\n         GBLB  &QPFK               PF-KEY OPTION                  ONL02\n         GBLB  &LOCK               LOCKHEED OPTIONS                  CL\n         GBLB  &QONL               ENABLES ONL SPECIFIC CODE      ONL06\n         SPACE 1                                                  ONL02\n         USING WORK,R13            NOTE SAVE/WORK ADDRESSABILITY  ONL02\n         SPACE 1                                                  ONL02\n         L     R10,QVDSPL          ADDR OF DISPLAY WORK AREA      ONL02\n         USING QDISPLAY,R10        NOTE DISPLAY ADDRESSABILITY    ONL02\n         EJECT ,                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  BUILD HELP DISPLAY FROM HELP TABLE ENTRIES                     ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 3                                                    SBG\n******************************************************************  SBG\n*  NULLIFY QPDSID FIELD TO SHOW INVALID DSID.                       SBG\n         MVC   QPDSID,=X'FFFF'   SET DSID TO BE INVALID             SBG\n******************************************************************  SBG\n         SPACE 3                                                    SBG\n         SPACE 1                                                  ONL02\n         MVC   QDHLINE,HEADING     SET HELP DISPLAY HEADING       ONL02\n         ZAP   DWORD,QDLNES        GET NUMBER OF AVAILABLE MESSAGEONL02\n         CVB   R4,DWORD              LINES PER SCREEN IN BINARY   ONL02\n         SLR   R5,R5               ZERO CURRENT LINE NUMBER       ONL02\n         LA    R6,HELPTABL         ADDR OF FIRST HELP TABLE ENTRY ONL02\n         USING HTEDSECT,R6         NOTE HTE ADDRESSABILITY        ONL02\n         SPACE 2                                                  ONL02\n*                                                                 ONL02\n*  PROCESS NEXT HELP TABLE ENTRY                                  ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\nNEXTHTE  DS    0H                  PROCESS NEXT HELP TABLE ENTRY  ONL02\n         CLC   HTEPAGE,=X'00FFFF'  IS THIS AN END OF PAGE ENTRY?  ONL02\n         BE    DONEPAGE            SKIP IF YES                    ONL02\n         CLC   HTEEND,=X'FFFFFF'   IS THIS AN END OF TABLE ENTRY? ONL02\n         BE    DONETABL            SKIP IF YES                    ONL02\n         SPACE 1                                                  ONL02\n         ICM   R1,1,HTEFLAGS       GET MSG AUTHORITY REQUIREMENT  ONL02\n         BZ    AUTHOK              SKIP IF MSG IS NOT RESTRICTED  ONL02\n         EX    R1,AUTHTM           DOES USER HAVE AUTHORITY?      ONL02\n         BO    AUTHOK              SKIP IF YES                    ONL02\n         SPACE 1                                                  ONL02\n*  INSERT CODE HERE IF YOU WISH TO OVERRIDE MESSAGE SUPPRESSION   ONL02\n         SPACE 1                                                  ONL02\n         B     MSGDONE             SKIP OVER MSG DISPLAY CODE     ONL02\n         SPACE 1                                                  ONL02\nAUTHTM   TM    QAHELP,*-*          EXECUTED - IS MSG AUTHORIZED?  ONL02\n         SPACE 1                                                  ONL02\nAUTHOK   DS    0H                  MSG IS AUTHORIZED FOR DISPLAY  ONL02\n         SPACE 1                                                  ONL02\n*  INSERT CODE HERE IF YOU WISH TO SUPPRESS AN AUTHORIZED MESSAGE ONL02\n         SPACE 1                                                  ONL02\n         MVC   QDMSG,QBLANK        BLANK OUT MSG WORK AREA        ONL02\n         LA    R3,QDMSG            ADDR OF MSG WORK AREA          ONL02\n         ST    R3,QDMSGA           SET MSG ADDR FOR DISPLAY RTN   ONL02\n         SLR   R1,R1                                              ONL02\n         IC    R1,HTEOFF           MSG OFFSET FROM COLUMN 1       ONL02\n         LA    R3,0(R1,R3)         ADJUST AREA POINTER PER OFFSET ONL02\n         SLR   R2,R2                                              ONL02\n         ICM   R2,1,HTETLEN        LENGTH OF MSG TEXT             ONL02\n         BZ    MSGLNERR            ERROR IF NO TEXT               ONL02\n         LA    R1,0(R2,R1)         LENGTH OF OFFSET + TEXT        ONL02\n         CL    R1,=F'80'           IS TOTAL LENGTH OK?            ONL02\n         BH    MSGLNERR            ERROR IF TOO LONG              ONL02\n         STH   R1,QDMLNG           SET MSG LENGTH FOR DISPLAY RTN ONL02\n         BCTR  R2,0                TEXT LENGTH LESS 1 FOR EXECUTE ONL02\n         EX    R2,MSGMVC           PLUG TEXT INTO MSG LINE        ONL02\n         L     R15,=V(DISPLAY)     ADDR OF DISPLAY ROUTINE        ONL02\n         BALR  R14,R15             LINK TO ROUTINE                ONL02\n         SPACE 1                                                  ONL02\n         LA    R5,1(,R5)           INCREMENT LINE COUNT           ONL02\n         CLR   R5,R4               HAVE WE FILLED A SCREEN?       ONL02\n         BL    MSGDONE             SKIP IF NO                     ONL02\n         SLR   R5,R5               CLEAR LINE COUNT FOR NEW SCREENONL02\n         SPACE 1                                                  ONL02\nMSGDONE  DS    0H                  FINISHED WITH CURRENT MSG      ONL02\n         SLR   R1,R1                                              ONL02\n         IC    R1,HTETLEN          LENGTH OF MSG TEXT             ONL02\n         LA    R6,HTETEXT(R1)      INDEX TO NEXT HELP TABLE ENTRY ONL02\n         B     NEXTHTE             LOOP TO PROCESS NEXT ENTRY     ONL02\n         SPACE 2                                                  ONL02\nMSGMVC   MVC   0(*-*,R3),HTETEXT   EXECUTED - SET MSG TEXT        ONL02\n         SPACE 1                                                  ONL02\nMSGLNERR DS    0H                  MSG LENGTH ERROR               ONL02\n         QTILT '*** QUEUE LOGIC ERROR - BAD HELP MSG LENGTH ***'  ONL02\n         SPACE 2                                                  ONL02\n*                                                                 ONL02\n*  END OF PAGE ENTRY FOUND, FILL OUT CURRENT HELP SCREEN          ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\nDONEPAGE DS    0H                  COMPLETE CURRENT SCREEN        ONL02\n         LA    R6,L'HTEPAGE(,R6)   POINT TO NEXT TABLE ENTRY      ONL02\n         LTR   R5,R5               WAS ANYTHING DISPLAYED?        ONL02\n         BNP   NEWPAGE             SKIP IF NO                     ONL02\n         SPACE 1                                                  ONL02\n         LR    R2,R4               COPY NUMBER OF AVAILABLE LINES ONL02\n         SR    R2,R5               COMPUTE NUMBER OF UNUSED LINES ONL02\n         BNP   NEWPAGE             SKIP IF SCREEN IS FULL         ONL02\n         SPACE 1                                                  ONL02\n         LA    R3,QDMSG            ADDR OF MSG WORK AREA          ONL02\n         ST    R3,QDMSGA           SET MSG ADDR FOR DISPLAY RTN   ONL02\n         MVI   QDMSG,C' '          SET A BLANK MESSAGE            ONL02\n         MVC   QDMLNG,=H'1'         WITH A LENGTH OF ONE          ONL02\n         SPACE 1                                                  ONL02\nBLNKLOOP DS    0H                  FILL OUT CURRENT SCREEN        ONL02\n         L     R15,=V(DISPLAY)     ADDR OF DISPLAY ROUTINE        ONL02\n         BALR  R14,R15             LINK TO ROUTINE                ONL02\n         BCT   R2,BLNKLOOP         LOOP IF MORE LINES TO BLANK    ONL02\n         SPACE 1                                                  ONL02\nNEWPAGE  DS    0H                  SETUP FOR NEXT SCREEN          ONL02\n         SLR   R5,R5               CLEAR LINE COUNT FOR NEXT PAGE ONL02\n         B     NEXTHTE             LOOP TO PROCESS NEXT HELP ENTRYONL02\n         SPACE 2                                                  ONL02\n*                                                                 ONL02\n*  END OF HELP TABLE ENTRY FOUND, DONE WITH HELP DISPLAY          ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\nDONETABL DS    0H                  DONE WITH HELP TABLE           ONL02\n         QSTOP ,                   RETURN TO DISPLAY LAST SCREEN  ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  READ-ONLY DATA                                                 ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nHEADING  DC    CL80'THE FOLLOWING SUBCOMMANDS ARE SUPPORTED:'     ONL02\n         SPACE 1                                                  ONL02\n         LTORG ,                   DEFINE LITERAL ORIGIN          ONL02\n         TITLE 'DEFINE HELP SCREENS'                              ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  DEFINE HELP SCREENS                                            ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         PUSH  PRINT               SAVE CURRENT PRINT STATUS      ONL02\n         PRINT NOGEN               DON'T PRINT #H MACRO EXPANSIONSONL02\n         SPACE 1                                                  ONL02\nHELPTABL DS    0C                  START OF HELP TABLE            ONL02\n         SPACE 1                                                  ONL02\n #H NORM,4,'END               - EXIT QUEUE COMMAND'\n #H NORM,4,'STAT LEVEL        - DISPLAY ALL JOBS BEGINNING WITH LEVEL'\n #H NORM,4,'DJ   JOBNAME      - DISPLAY JOB BY JOBNAME'\n #H NORM,4,'JCL  JOBNAME      - LIST JCL FOR A JOB'\n #H NORM,4,'JLOG JOBNAME      - LIST JOBLOG FOR A JOB'\n #H NORM,4,'JMSG JOBNAME      - LIST SYSTEM MESSAGES FOR A JOB'\n #H NORM,4,'JHIS JOBNAME      - LIST JOB HISTORY INFORMATION'\n #H NORM,4,'DD   JOBNAME      - LIST SYSIN/SYSOUT DATASETS FOR A JOB'\n #H NORM,4,'PDDB JOBNAME      - LIST PDDB''S FOR A JOB'\n #H NORM,4,'LIST JOBNAME DSID - LIST A SYSIN OR SYSOUT DATASET'\n #H NORM,4,'LIST * +/-N         LIST NEXT OR PREVIOUS N''TH DATASET'\n #H NORM,4,'SAVE DSNAME       - CREATE A COPY OF THE CURRENT DATASET'\n #H NORM,4,'SPIN              - SEND COPY OF CURRENT DATASET TO SYSOUT'\n #H NORM,4,'PRINT ON CLASS DEST  - OPEN SCREEN LOG'\n #H NORM,4,'PRINT             - PRINT CURRENT SCREEN'\n #H NORM,4,'PRINT OFF         - CLOSE SCREEN LOG'\n #H NORM,4,'MODEL #           - SET 3270 MODEL 2, 3, 4, OR 5'\n #H NORM,0,'NOTES:  (1) DEFAULT FOR LEVEL IS LOGON ID'\n #H NORM,8,'(2) JOBNAME CAN BE JOBNAME, NUMBER, OR \"*\" FOR CURRENT JOB'\n #H NORM,8,'(3) DSID CAN BE DETERMINED BY USING SUBCOMMAND DD OR PDDB'\n #H NORM,8,'(4) DSNAME WILL BE EXPANDED TO USERID.DSNAME.DATA'\n         SPACE 1                                                  ONL02\n #H PAGE                           INDICATE END OF PAGE           ONL02\n         EJECT ,                                                  ONL02\n         AIF  (NOT &QPFK).PFK1\n #H NORM,4,'PFK               - LIST PROGRAM FUNCTION KEYS'\n #H NORM,4,'PFK  NN  TEXT     - REDEFINE PROGRAM FUNCTION KEYS'\n.PFK1    ANOP ,\n #H NORM,4,'FIND ''STRING'' COL(SS,EE)  - FIND CHARACTER STRING'\n #H NORM,4,'FALL ''STRING'' COL(SS,EE)  - FIND ALL OCCURRENCES OF'\n #H NORM,4,'                              STRING (COL DEFAULTS TO ALL)'\n #H NORM,4,'COL  #       - REPOSITION HORIZONTALLY TO COLUMN NUMBER'\n #H NORM,4,'@/MD #       - REPOSITION TO SPECIFIC RECORD NUMBER'\n #H NORM,4,'+/D  #       - REPOSITION FORWARD IN DATASET # RECORDS'\n #H NORM,4,'-/UP #       - REPOSITION BACKWARD IN DATASET # RECORDS'\n #H NORM,4,'T/TOP        - REPOSITION TO TOP OF DATASET'\n #H NORM,4,'B/BOTTOM     - REPOSITION TO BOTTOM OF DATASET'\n #H NORM,4,'HF/HB #      - FORWARD/BACKWARD # HALF PAGES'\n #H NORM,4,'PF/PB #      - FORWARD/BACKWARD # PAGES'\n #H NORM,4,' '                                                    ONL13\n #H NORM,0,'NOTES:  (1) STRING SPECIFICATION FOR FIND MAY BE DELIMITED'\n         AIF   (&QONL).ONL1                                       ONL12\n #H NORM,8,'    WITH BLANKS, SINGLE QUOTES, OR DOUBLE QUOTES.'    ONL13\n         AGO   .ONL2                                              ONL12\n.ONL1    ANOP  ,                                                  ONL12\n #H NORM,8,'    WITH BLANKS, SINGLE QUOTES, DOUBLE QUOTES, OR WITH A'\n #H NORM,8,'    SLASH (\"/\").'                                     ONL12\n.ONL2    ANOP  ,                                                  ONL12\n         SPACE 1                                                  ONL02\n #H PAGE                           INDICATE END OF PAGE           ONL02\n         EJECT ,                                                  ONL02\n #H ACTV,4,'DA           - DISPLAY ALL JOBS IN EXECUTION'\n #H ACTV,4,'DT           - DISPLAY TSO USERS'\n #H ACTV,4,'DS           - DISPLAY SYSTEM TASKS'\n #H ACTV,4,'DC TYPE      - DISPLAY CPU BATCH/STC/TSO  (BLANK,B/J/S/T)'\n #H BLOG,4,'DQ           - DISPLAY INPUT QUEUES'\n #H BLOG,4,'DI CLASS     - DISPLAY ALL JOBS IN INPUT CLASS'\n #H BLOG,4,'AI CLASS     - DISPLAY JOBS AVAILABLE FOR PROCESSING'\n #H BLOG,4,'HI CLASS     - DISPLAY HELD JOBS IN INPUT CLASS'\n #H BLOG,4,'DF           - DISPLAY OUTPUT QUEUES'\n #H BLOG,4,'DO CLASS     - DISPLAY ALL JOBS IN OUTPUT CLASS'\n #H BLOG,4,'WO           - DISPLAY ONLY OUTPUT JOBS WITH WRITER NAME SP+\n               ECIFIED'\n #H BLOG,4,'AO CLASS     - DISPLAY AVAILABLE OUTPUT'\n #H BLOG,4,'HO CLASS     - DISPLAY HELD OUTPUT'\n #H BLOG,4,' '\n #H BLOG,8,'DEFAULT FOR CLASS IS ALL CLASSES'\n #H SSSM,4,' '\n #H SSSM,4,'CAN JOBNAME <P>        - CANCEL JOB (\"P\" OPTION FOR PURGE)'\n #H SSSM,4,'DEL JOBNAME            - DELETE JOB'\n #H SSSM,4,'REQ JOBNAME <NEWCLASS> - RELEASE JOB''S HELD OUTPUT'\n         SPACE 1                                                  ONL02\n #H PAGE                           INDICATE END OF PAGE           ONL02\n         EJECT ,                                                  ONL02\n #H SLOG,4,'SLOG  ID  <SEQ>   - LIST THE SYSTEM LOG DATASET'\n #H SLOG,4,'FTIME HH.MM.SS    - REPOSITION SYSTEM LOG TO GIVEN TIME'\n #H SLOG,4,' '\n #H SLOG,8,'ID MAY BE A JOB# DETERMINED BY STATUS SYSLOG,'\n #H SLOG,8,'  OR IT MAY SPECIFY THE SYSTEM ID OF THE DESIRED SYSTEM'\n #H SLOG,8,'  (A NULL FIELD WILL LIST THE ACTIVE SYSTEM''S LOG)'\n #H SLOG,8,'DEFAULT FOR SEQ IS 0 (THE CURRENT SYSLOG DATASET)'\n #H SLOG,8,'  (USE A VALUE OF 1, 2, ... TO OBTAIN PREVIOUS DATASETS)'\n #H SLOG,4,' '\n #H EXEC,4,'TSO CMD PRMS      - ISSUE ANY TSO COMMAND W/OPTIONAL PARMS'\n #H SYSP,4,'XB  MTTR          - DISPLAY BLOCK FROM SYS1.HASPACE'\n #H SYSP,4,'                      USE \"*\" TO RE-SHOW AND \"+\" TO CHAIN'\n #H SYSP,4,'XD  JOBNAME DSID  - UNRESTRICTED DISPLAY OF DATASETS'\n #H SYSP,4,'XI                - DISPLAY ACTIVE INITIATORS'\n #H SYSP,4,'XJ  JOBNAME       - DISPLAY UNINTERPRETED JQES AND JOES'\n #H SYSP,4,'JQE JOBNAME       - DISPLAY JQE IN HEX/EBCDIC'\n #H SYSP,4,'JCT JOBNAME <OFFSET>  - DISPLAY JCT IN HEX/EBCDIC'\n #H SYSP,4,'IOT JOBNAME       - DISPLAY IOTS IN HEX/EBCDIC'          CL\n #H SYSP,4,'JOE JOBNAME       - DISPLAY JOES IN HEX/EBCDIC'\n #H SYSP,4,'HCT               - DISPLAY HCT $SAVE AREA'\n #H SYSP,4,'TGPS              - LIST HIGH TRACK GROUP USERS'         CL\n         SPACE 1                                                  ONL02\n #H PAGE                           INDICATE END OF PAGE           ONL02\n         SPACE 1                                                  ONL02\n #H END                            INDICATE END OF TABLE          ONL02\n         SPACE 1                                                  ONL02\n         POP   PRINT               RESTORE PRINT STATUS           ONL02\n         TITLE 'DEFINE CONTROL BLOCK DSECT''S'                    ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  HELP TABLE ENTRY DSECT                                         ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nHTEDSECT DSECT ,                   HELP TABLE ENTRY DSECT         ONL02\nHTE      DS    0X                  ALTERNATE DSECT NAME           ONL02\nHTEFLAGS DS    AL1                 SUB-COMMAND AUTHORITY FLAGS    ONL02\nHTETLEN  DS    AL1                 LENGTH OF MESSAGE TEXT         ONL02\nHTEOFF   DS    AL1                 SCREEN OFFSET OF MESSAGE TEXT  ONL02\nHTEUSER  DS    AL1                 USER FLAG BYTE                 ONL02\nHTETEXT  DS    0C                  MESSAGE TEXT                   ONL02\n         SPACE 1                                                  ONL02\n         ORG   HTE                 REDEFINE DSECT                 ONL02\nHTEPAGE  DC    0XL3'00FFFF'        END OF PAGE ENTRY              ONL02\nHTEEND   DC    0XL3'FFFFFF'        END OF TABLE ENTRY             ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  SAVE AREA/WORK AREA DSECT                                      ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nWORK     DSECT ,                   SAVE AREA/WORK AREA DSECT      ONL02\n         DS    18F                 OS SAVE AREA                   ONL02\nDWORD    DS    D                   SCRATCH DOUBLE WORD            ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*  GENERATE QCOMMON DSECT                                         ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       ONL02\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL02\n         QCOMMON                                                  ONL02\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL02\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    ONL02\n         END   ,                                                  ONL02\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "HEXBLK": {"ttr": 4869, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "HEXBLK   TITLE 'QUEUE COMMAND - HEXADECIMAL DUMP OF A BLOCK'      ONL01\nHEXBLK   QSTART ,                  START HEXBLK CSECT ASSEMBLY    ONL01\n         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n         L     R2,QCBLKA      BLOCK IOAREA ADDR                   UF013\n***********************************************************************\n*                                                                     *\n*   VALIDATE AND CONVERT BLOCK ADDRESS                                *\n*                                                                     *\n***********************************************************************\n         LH    R1,QLNG1       LENGTH OF USER PARM\n         LTR   R1,R1          IS THE LENGTH ZERO?\n         BNP   TILT           YES. TILT.\n         CH    R1,=H'8'       IS THE LENGTH TOO BIG?\n         BH    TILT           YES. TILT.\n         CLI   QPARM1,C'*'    USE CURRENT BUFFER CONTENTS?        UF013\n         BE    READOK         YES, SKIP THE READ                  UF013\n         CLI   QPARM1,C'+'    CHAIN TO NEXT BLOCK?                UF013\n         BNE   READ1          NO, CONTINUE WITH NORMAL CODE       UF013\n*        MVC   QCTRAK,0(R2)   GET NEXT BLOCK ADDRESS              UF013\n         MVC   QCTRAK,16(R2)  GET NEXT BLOCK ADDRESS              WGH42\n         OC    QCTRAK,QCTRAK  TEST FOR END OF CHAIN               UF013\n         BNZ   READ2          GO READ BLOCK IF OK                 UF013\n         QTILT ' *** BLOCK CHAIN FIELD IS ZERO ***'               UF013\nREAD1    MVC   QDWORD,QPARM1  LEAVE THE ORIGINAL ALONE            UF013\n         TR    QDWORD,TABLEH  CONVERT TO HEX                      UF013\n         EX    R1,PACK        PACK INTO QCTRAK\n***********************************************************************\n*                                                                     *\n*   READ THE BLOCK FROM HASPACE                                       *\n*                                                                     *\n***********************************************************************\nREAD2    DS    0H                                                 UF013\n         LR    R1,R2          PARM FOR READSPC\n         L     R15,=V(READSPC) ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\nREADOK   DS    0H                                                 UF013\n***********************************************************************\n*                                                                     *\n*   PRINT THE BLOCK                                                   *\n*                                                                     *\n***********************************************************************\n         LH    R0,HASPACE+62  LENGTH OF DATA                      UF012\n         LH    R1,QLNG2       LENGTH OF USER OFFSET               UF013\n         LTR   R1,R1          IS THE LENGTH ZERO?                 UF013\n         BNP   DUMP1          YES. NONE SPECIFIED                 UF013\n         CH    R1,=H'8'       IS THE LENGTH TOO BIG?              UF013\n         BH    TILTO          YES, GIVE UP                        UF013\n         EX    R1,OFFTR       CONVERT TO HEX                      UF013\n         EX    R1,OFFPACK     PACK INTO QDWORD                    UF013\n         LH    R1,QDWORD      PICK UP OFFSET                      UF013\n         AR    R2,R1          ADD TO BASE ADDRESS                 UF013\n         SR    R0,R1          SUBTRACT FROM TOTAL LENGTH          UF013\n         SLL   R1,16          MOVE TO PROPER POSITION             UF013\n         OR    R0,R1          INSERT INTO LENGTH REG              UF013\nDUMP1    LR    R1,R2          POINT TO BUFFER READ                UF012\n         L     R15,=V(HEXDUMP) ADDRESS OF DUMP ROUTINE            UF012\n         BALR  R14,R15        LINK TO IT                          UF012\nSTOP     QSTOP\n***********************************************************************\n*                                                                     *\n*   EXCEPTIONS AND RETURN                                             *\n*                                                                     *\n***********************************************************************\nTILT     QTILT '*** BLOCK ADDRESS WAS OMITTED ***'\nTILTO    QTILT '*** INVALID OFFSET SPRCIFIED ***'\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\nPACK     PACK  QCTRAK(5),QDWORD(1) BLOCK ADDRESS                  UF013\nOFFTR    TR    QPARM2,TABLEH       CONVERT TO HEX                 UF013\nOFFPACK  PACK  QDWORD(3),QPARM2(1) PACK TO WORK AREA              UF013\n         LTORG\n* TABLE FOR HEX CONVERT\nTABLEH   DC    CL193' '\n         DC    X'0A0B0C0D0E0F',CL41' ',C'01234567890',CL6' '\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HEXDUMP": {"ttr": 4872, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "HEXDUMP  TITLE 'QUEUE COMMAND - HEX DUMP OF PASSED DATA AREA'     ONL01\nHEXDUMP  QSTART ,                  START HEXDUMP ASSEMBLY         ONL01\n         L     R10,QVCKPT     LOAD BASE REG\n         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R8,QVPRINT     LOAD BASE REG\n         USING QCPRINT,R8     BASE REG FOR DISPLAY WORK AREA\n         LA    R8,QPLINE      LOAD BASE REG\n         USING WORK,R8        BASE REG FOR PRINT LINE AREA\n***********************************************************************\n*                                                                     *\n*   INPUT:                                                            *\n*        R1    POINTER TO DATA AREA TO BE DUMPED                      *\n*        R0    OFFSET AND LENGTH OF AREA TO DUMP (2 BYTES EACH)       *\n*              (OFFSET IS USED FOR PRINT DISPLACEMENT FIELD ONLY)     *\n*              (AS AN EXAMPLE, THE DUMP OF A JCT IS MOST USEFUL       *\n*              IF THE OFFSET IS SET TO THE LENGTH OF ITS              *\n*              ASSOCIATED IOB)                                        *\n*                                                                     *\n***********************************************************************\n         LR    R6,R1          POINTER TO START OF DATA AREA\n         LR    R3,R0          PRINT OFFSET FOR AREA\n         SRL   R3,16          MOVE TO PROPER POSITION\n         LR    R4,R0          LENGTH TO DUMP\n         SLL   R4,16          THROW AWAY OFFSET\n         SRL   R4,16          MOVE LENGTH TO PROPER POSITION\n***********************************************************************\n*                                                                     *\n*   FORMAT THE AREA                                                   *\n*                                                                     *\n***********************************************************************\n         MVC   QDHLINE,QBLANK BLANK THE TITLE LINE\n         LA    R5,WORKLINE    POINT TO LINE IN WORK AREA\n         ST    R5,QDMSGA      STORE ADDR OF PRINT LINE\n         MVC   QDMLNG,=H'80'  LENGTH OF MESSAGE\n         CLC   QDLNELEN,=H'132' LONG ENOUGH FOR DOUBLE LINE?\n         BL    *+4+6          NO, SKIP RESET OF LENGTH\n         MVC   QDMLNG,=H'132' LENGTH OF MESSAGE\n         SPACE 1\nLOOP     MVC   WORKLINE,QBLANK  BLANK THE WORK AREA\n         STH   R3,QDWORD      GET OFFSET\n         UNPK  OFFSET(5),QDWORD(3) CONVERT TO HEX\n         MVI   OFFSET+L'OFFSET,C' ' CLEAR GARBAGE BYTE\n         TR    OFFSET,TABLEP  TRANSLATE TO PRINTABLE CHARACTERS\n         SPACE 1\n         LR    R2,R6          POINTER TO DATA AREA\n         LA    R1,4           NUMBER OF WORDS IN LINE AREA\n         LA    R14,O1         POINTER TO FIRST OUTPUT AREA\n         LA    R15,P1         POINTER TO EBCDIC AREA\n         MVI   PS1,C'*'       SET STARS\n         MVI   PS2,C'*'       SET STARS\n         CLC   QDLNELEN,=H'132' SHORT LINES?\n         BL    LOOP1          YES, SKIP SETTING ALTERNATE PRINT AREA\n         MVI   PS1,C' '       FIX OTHER FLAG\n         MVI   PS2,C' '       FIX OTHER FLAG\n         LA    R15,P1A        ALTERNATE EBCDIC AREA\n         MVI   PS1A,C'*'      SET STARS\n         MVI   PS2A,C'*'      SET STARS\n         SPACE 1\nLOOP1    UNPK  0(9,R14),0(5,R2)  UNPACK DATA TO PRINT LINE\n         TR    0(8,R14),TABLEP TRANSLATE TO PRINTABLE CHARACTERS\n         MVI   8(R14),C' '    CLEAR WASTE BYTE\n         MVC   0(4,R15),0(R2) COPY DATA TO PRINT AREA\n         TR    0(4,R15),PRTAB FIX UNPRINTABLES\n         LA    R2,4(,R2)      NEXT DATA AREA\n         LA    R3,4(,R3)      BUMP OFFSET\n         LA    R14,9(,R14)    NEXT HEX AREA\n         LA    R15,4(,R15)    NEXT PRINT AREA\n         SH    R4,=H'4'       DROP BY PROCESSED LENGTH\n         BNP   PRINT1\n         BCT   R1,LOOP1       LOOP FOR ALL FOUR WORDS\n         SPACE 1\n         CLC   QDLNELEN,=H'132' SHORT LINES?\n         BL    PRINT1         YES, PRINT WHAT WE HAVE\n         LA    R14,O5         POINT TO OUTPUT AREA\n         LA    R15,P5A        POINT TO OUTPUT AREA\n         LA    R1,4           NUMBER OF WORDS\n         SPACE 1\nLOOP2    UNPK  0(9,R14),0(5,R2)  UNPACK DATA TO PRINT LINE\n         TR    0(8,R14),TABLEP TRANSLATE TO PRINTABLE CHARACTERS\n         MVI   8(R14),C' '    CLEAR WASTE BYTE\n         MVC   0(4,R15),0(R2) COPY DATA TO PRINT AREA\n         TR    0(4,R15),PRTAB FIX UNPRINTABLES\n         LA    R2,4(,R2)      NEXT DATA AREA\n         LA    R3,4(,R3)      BUMP OFFSET\n         LA    R14,9(,R14)    NEXT HEX AREA\n         LA    R15,4(,R15)    NEXT PRINT AREA\n         SH    R4,=H'4'       DROP BY PROCESSED LENGTH\n         BNP   PRINT1\n         BCT   R1,LOOP2       LOOP FOR ALL FOUR WORDS\n         SPACE 1\nPRINT1   L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE\n         BALR  R14,R15        GO TO IT\n         LR    R15,R6         ADDR OF DATA JUST DUMPED\n         LR    R6,R2          ADDRESS OF NEXT TO DUMP\n         SR    R2,R15         LENGTH JUST DUMPED\n         BCTR  R2,0           DROP FOR EXECUTE\n         SPACE 1\nSKIP     DS    0H\n         LTR   R4,R4          TEST REMAINING LENGTH\n         BNP   STOP           YES. GO HOME.\n         EX    R2,CLC         IS THIS RECORD THE SAME AS PREVIOUS?\n         BNE   LOOP           NO, PRINT IT\n         LA    R6,1(R2,R6)    BUMP TO NEXT AREA\n         LA    R3,1(R2,R3)    BUMP OFFSET\n         SR    R4,R2          DROP BY LENGTH DUMPED\n         BCTR  R4,0           FIX FOR EXECUTE STUFF\n         B     SKIP           SKIP PRINTING DUPS\n         SPACE 1\nCLC      CLC   0(*-*,R15),0(R6)  TEST FOR SAME DATA\n***********************************************************************\n*                                                                     *\n*   RETURN                                                            *\n*                                                                     *\n***********************************************************************\nSTOP     QSTOP\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\n* TABLE TO REMOVE UNPRINTABLES\nPRTAB    DC    CL64' '\n         DC    192AL1(*-PRTAB)\n* TABLE FOR HEX UNCONVERT\nTABLEP   EQU   *-240\n         DC    C'0123456789ABCDEF'\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nWORK     DSECT ,\nWORKLINE DS    CL132          LINE TO PRINT\n         ORG   WORKLINE       BACK UP TO WORK LINE\nOFFSET   DS    CL4            OFFSET INTO AREA\n         DS    XL3            SPACER\nO1       DS    CL8            OUTPUT HEX AREA\n         DS    X              SPACER\nO2       DS    CL8            OUTPUT HEX AREA\n         DS    X              SPACER\nO3       DS    CL8            OUTPUT HEX AREA\n         DS    X              SPACER\nO4       DS    CL8            OUTPUT HEX AREA\n         DS    XL3            SPACER\nO5       DS    CL8            OUTPUT HEX AREA\n         DS    X              SPACER\nO6       DS    CL8            OUTPUT HEX AREA\n         DS    X              SPACER\nO7       DS    CL8            OUTPUT HEX AREA\n         DS    X              SPACER\nO8       DS    CL8            OUTPUT HEX AREA\n         DS    XL2            SPACER\nPS1A     DS    C              STAR FOR PRINT AREA\nP1A      DS    CL4            PRINT AREA\nP2A      DS    CL4            PRINT AREA\nP3A      DS    CL4            PRINT AREA\nP4A      DS    CL4            PRINT AREA\nP5A      DS    CL4            PRINT AREA\nP6A      DS    CL4            PRINT AREA\nP7A      DS    CL4            PRINT AREA\nP8A      DS    CL4            PRINT AREA\nPS2A     DS    C              STAR FOR PRINT AREA\n         ORG   O5-1           BACK UP FOR SHORT LINES\nPS1      DS    C              STAR FOR PRINT AREA\nP1       DS    CL4            PRINT AREA\nP2       DS    CL4            PRINT AREA\nP3       DS    CL4            PRINT AREA\nP4       DS    CL4            PRINT AREA\nPS2      DS    C              STAR FOR PRINT AREA\n         ORG   ,              BACK TO NORMAL ADDRESSING\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INIT": {"ttr": 4876, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x00\\x00\\x942/\\x00\\x96\\x05\\x7f\\x19\\x12\\x03$\\x03\\x14\\x00\\x16\\xe2\\xc2\\xc7\\xc3\\xe2\\xc3@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-11-18T00:00:00", "modifydate": "1996-02-26T19:12:00", "lines": 804, "newlines": 788, "modlines": 22, "user": "SBGCSC"}, "text": "INIT     TITLE 'QUEUE COMMAND - INITIALIZATION ROUTINES'          ONL01\nINIT     QSTART ,                  START INIT CSECT ASSEMBLY      ONL01\n         GBLB  &QDBC          DBC    OPTION                       UF024\n         GBLB  &QONL          ONL    OPTION                       ONL08\n         GBLB  &LOCK          LOCKHEED OPTION                        CL\n***********************************************************************\n*                                                                     *\n*   LOAD QCOMMON                                                      *\n*                                                                     *\n***********************************************************************\n*\n****\n*******  IF YOU WANT TO CHANGE THE NAME FOR THE COMMON AREA,\n****               THIS IS THE ONLY REFERENCE TO IT.\n*\n         AIF   (&QONL).ONL08                                      ONL08\n         L     R11,=V(QCOMMON) ADDR OF QCOMMON                    UF002\n         LTR   R11,R11        SEE IF LINKED IN                    UF002\n         BNZ   LOADED         YES, CONTINUE                       UF002\n.ONL08   ANOP  ,                                                  ONL08\n         SPACE 1                                                  UF002\n         LOAD  EP=QUEUECMN    QUEUE COMMON AREA\n         LR    R11,R0         ADDR OF QCOMMON\n         SPACE 1                                                  UF002\nLOADED   DS    0H                                                 UF002\n         L     R1,4(R13)      PREVIOUS SAVE AREA\n         ST    R11,64(R1)     UPDATE R11 IN PREVIOUS SAVE AREA\n         ST    R1,QFRSTSA     STORE ADDR OF FIRST SAVEAREA IN QCOMMON\n         USING QDAIR,R10      BASE REG FOR DAIR WORK\n         L     R10,QVDAIR     LOAD BASE REG\n         USING QCKPT,R9       BASE REG FOR CKPT WORK\n         L     R9,QVCKPT      LOAD BASE REG\n         USING QDISPLAY,R8    BASE REG FOR DISPLAY WORK\n         L     R8,QVDSPL      LOAD BASE REG\n         SPACE 1\n         L     R1,16          GET CVT ADDRESS\n         USING CVT,R1\n         TM    CVTDCB,X'80'   EXECUTING XA MODE\n         BNO   NOTXA          NO, BR\n         OI    QFLAG1,QFLG1XA SET XA MODE FLAG\n         DROP  R1\n         SPACE 1\n         USING WORK,R13       ADDRESSING FOR SAVE/WORK AREA       UF024\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   VERIFY A TSO ENVIRONMENT, FIND THE ADDRRESS OF THE PROTECTED  ONL02\n*   STEP CONTROL BLOCK, AND VERIFY SOME FIELDS IN THE COMMAND     ONL02\n*   PROCESSOR PARAMETER LIST.                                     ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nNOTXA    LA    R3,QDWORK           ADDR FOR EXTRACT ANSWER AREA   ONL02\n         LA    R4,QAEXTLST         ADDR OF EXTRACT PARAMETER LIST ONL02\n         EXTRACT (R3),FIELDS=(TSO,PSB),MF=(E,(R4))  EXTRACT INFO  ONL02\n         SPACE 1                                                  ONL02\n         L     R1,QDWORK           PICKUP ADDR OF TSO INDICATOR   ONL02\n         TM    0(R1),X'80'         IS THIS A TSO ADDRESS SPACE?   ONL02\n         BO    NOTBATCH            YES... CONTINUE                WGH\n         OI    QFLAG1,QFLG1BAT     NO...  SET BATCH MODE          WGH\n         SPACE 1                                                  ONL02\nNOTBATCH L     R1,QDWORK+4         PICKUP ADDR OF PSCB            ONL02\n         LTR   R1,R1               IS PSCB AVAILABLE?             ONL02\n         BZ    QAABORT             IF NOT, ABORT                  ONL02\n         SPACE 1                                                  ONL02\n         USING PSCB,R1             NOTE PSCB ADDRESSABILITY       ONL02\n         USING CPPL,R2             NOTE CPPL ADDRESSABILITY       ONL02\n         USING UPT,R15             NOTE UPT  ADDRESSABILITY       WGH02\n         L     R15,PSCBUPT         ADDR OF UPT                    WGH\n         SPACE 1                                                  ONL02\n         CLM   R1,15,CPPLPSCB      VERIFY PSCB ADDR IN CPPL       ONL02\n         BNE   QAABORT             ABORT IF ADDR'S DON'T MATCH    ONL02\n         CLC   PSCBUPT,CPPLUPT     VERIFY UPT ADDR IN CPPL        ONL02\n         BNE   QAABORT             ABORT IF ADDR'S DON'T MATCH    ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   GET THE USERID AND ITS LENGTH AND SAVE THEM IN QCOMMON        ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         MVC   QLOGON(L'PSCBUSER),PSCBUSER  SET USERID IN QCOMMON ONL02\n         SLR   R0,R0               CLEAR FOR INSERT               ONL02\n         IC    R0,PSCBUSRL         PICKUP LENGTH OF USERID        ONL02\n         ST    R0,QLOGONLN         SET LENGTH IN QCOMMON          ONL02\n         CLI   QLOGON,C' '         IS USERID BLANK                WGH\n         BNE   IDOK                NO.. USE IT                    WGH\n         MVC   QLOGON(L'UPTPREFX),UPTPREFX SET PREFIX IN QCOMMON  WGH\n         IC    R0,UPTPREFL         PICKUP LENGTH OF PREFIX        WGH\n         ST    R0,QLOGONLN         SET LENGTH IN QCOMMON          WGH\n         DROP  R15                                                WGH\nIDOK     EQU   *                                                  WGH\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   CHECK PSCB FOR OPERATOR AUTHORITY                             ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         TM    QFLAG1,QFLG1BAT     ARE WE IN BATCH MODE ?         WGH\n         BO    SETOPER             YES.. GIVE FULL AUTH           WGH\n         TM    PSCBATR1,PSCBCTRL   DOES USER HAVE OPER AUTHORITY? ONL02\n         BZ    SKIPOPER            SKIP IF NO                     ONL02\nSETOPER  OI    QAFLAGS,QAFXOPER    SHOW USER HAS OPER AUTHORITY   ONL02\nSKIPOPER DS    0H                                                 ONL02\n         SPACE 2                                                  ONL02\n******************************************************************WGH\n*                                                                 WGH\n*   FILL IN IOPL PARAMETER LIST FROM THE CPPL                     WGH\n*                                                                 WGH\n******************************************************************WGH\n         SPACE 1                                                  WGH\n         MVC   STKIOPL,CPPLUPT     USER PROFILE TABLE             WGH\n         MVC   STKIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH\n         LA    R0,STKIOECB         ECB ADDRESS                    WGH\n         ST    R0,STKIOPL+8        FILL IT IN                     WGH\n         LA    R0,STKBLOCK         STACK   PARM BLOCK             WGH\n         ST    R0,STKIOPL+12       FILL IT IN                     WGH\n         SPACE 1                                                  WGH\n         MVC   GETIOPL,CPPLUPT     USER PROFILE TABLE             WGH\n         MVC   GETIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH\n         LA    R0,GETIOECB         ECB ADDRESS                    WGH\n         ST    R0,GETIOPL+8        FILL IT IN                     WGH\n         LA    R0,GETBLOCK         GETLINE PARM BLOCK             WGH\n         ST    R0,GETIOPL+12       FILL IT IN                     WGH\n         SPACE 1                                                  WGH\n         MVC   PUTIOPL,CPPLUPT     USER PROFILE TABLE             WGH\n         MVC   PUTIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH\n         LA    R0,PUTIOECB         ECB ADDRESS                    WGH\n         ST    R0,PUTIOPL+8        FILL IT IN                     WGH\n         LA    R0,PUTBLOCK         PUTLINE PARM BLOCK             WGH\n         ST    R0,PUTIOPL+12       FILL IT IN                     WGH\n******************************************************************ONL02\n*                                                                 ONL02\n*   FILL IN DAIR PARAMETER LIST FROM THE CPPL                     ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         MVC   DAPLUPT,CPPLUPT     USER PROFILE TABLE             ONL02\n         MVC   DAPLECT,CPPLECT     ENVIRONMENT CNTL TABLE         ONL02\n         MVC   DAPLPSCB,CPPLPSCB   PROTECTED STORAGE CNTL BLK     ONL02\n         DROP  R1                                                 CL006\n         SPACE 2                                                  ONL02\n         AIF   (NOT &QDBC).NODBC1 SKIP IF DBC NOT INSTALLED       UF024\n******************************************************************UF024\n*                                                                 UF024\n*   IF USER HAS OPER AUTHORITY, ESTABLISH ESTAE ENVIRONMENT       UF024\n*                                                                 UF024\n******************************************************************UF024\n         SPACE 1                                                  ONL02\n         TM    QAFLAGS,QAFXOPER    DOES USER HAVE OPER AUTHORITY? ONL02\n         BZ    NOTOPER             SKIP IF NO                     ONL02\n         SPACE 1                                                  ONL02\n         LOAD  EP=XDC,ERRET=NOTOPER  LOAD ESTAE ROUTINE           UF024\n         LR    R3,R0          ADDR OF ROUTINE                     UF024\n         MVC   WORKAREA(DBCMFLN),DBCMFL GET ESTAE PARM LIST       UF024\n         ESTAE (R3),MF=(E,WORKAREA)  CREATE THE ESTAE             UF024\n         OI    QFLAG1,QFLG1DBC  INDICATE NEED TO DELETE AT TERM   UF024\n         B     NOTOPER        CONTINUE PROCESSING                 UF024\nDBCMFL   ESTAE ,MF=L          LIST FORM OF ESTAE                  UF024\nDBCMFLN  EQU   *-DBCMFL       LENGTH OF LIST FORM ESTAE           UF024\nNOTOPER  DS    0H                                                 ONL02\n.NODBC1  ANOP                                                     UF024\n         EJECT                                                    CL006\n***********************************************************************\n*                                                                     *\n*        SCAN COMMAND BUFFER FOR KNOWN KEYWORDS.  IF FOUND TAKE       *\n*        APPROPRIATE ACTION.  IF NONE FOUND OR RECOGNIZED,            *\n*        THEN PASS TO OUR PARSE ROUTINE.                              *\n*                                                                     *\n*        OPTIONAL KEYWORDS MUST PRECEDE 1ST COMMAND                   *\n*                                                                     *\n*        Q VOL(VOLSER) UNIT(TYPE) PREFIX(XXXX) 1ST CMD                *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n         L     R1,CPPLCBUF     POINT TO COMMAND BUFFER            WGH\n         DROP  R2              DROP CPPL USING                    WGH\n         LH    R2,0(R1)        GET TOTAL LENGTH                   WGH\n         SH    R2,2(R1)        ADJUST FOR CMD LENGTH              WGH\n         SH    R2,=H'4'        ADJUST FOR HDR                     WGH\n         AH    R1,2(R1)        ADJUST FOR CMD LENGTH              WGH\n         AH    R1,=H'4'        ADJUST FOR HDR                     WGH\n         LTR   R2,R2                                              WGH\n         BNP   SKIP            NO PARMS                           WGH\n         STC   R2,QDLINE1      SAVE LENGTH FOR TPUT ON ERROR      WGH\n         BCTR  R2,0            REDUCE FOR TRANSLATE               WGH\n         EX    R2,MVCBUFA      MOVE TO WORK AREA                  WGH\n         LA    R1,QDLINE1+1    POINT TO WORK AREA                 WGH\n         EX    R2,OCBUF        XLATE TO UPPER CASE                WGH\n         LA    R2,1(R2)        TRUE LENGTH                        WGH\nPARMLOOP EQU   *                                                  WGH\n         CLI   0(R1),C' '      BLANK ?                            WGH\n         BNE   GOTPARM         NO.. GOT SOME PARMS                WGH\n         LA    R1,1(R1)        YES.. CHECK NEXT CHARACTER         WGH\n         BCT   R2,PARMLOOP     CHECK FOR MORE                     WGH\n         B     SKIP            NO MORE PARMS                      WGH\nGOTPARM  EQU   *                                                  WGH\n         CLC   =C'PREFIX(',0(R1) IS REQUEST FOR DSN PREFIX        WGH\n         BE    PREFIX          YES... GO PROCESS                  WGH\n         CLC   =C'UNIT(',0(R1) IS REQUEST FOR UNIT                WGH\n         BE    UNIT            YES... GO PROCESS                  WGH\n         CLC   =C'VOL(',0(R1)  IS REQUEST FOR VOLUME              WGH\n         BE    VOLUME          YES... GO PROCESS                  WGH\n         MVC   QDREPLY,QBLANK  BLANK THE REPLY LINE               WGH\n         SH    R2,=H'1'        REDUCE FOR EXECUTE                 WGH\n         BM    SKIP            NO MORE PARMS                      WGH\n         CH    R2,=H'62'       IS LENGTH OVER 63 ?                WGH\n         BNH   *+8             NO.. USE IT                        WGH\n         LA    R2,62           USE MAX LENGTH                     WGH\n         EX    R2,MVCBUF       MOVE THE DATA                      WGH\n         LA    R2,1(R2)        TRUE LENGTH                        WGH\n         STH   R2,QDRLNG       STORE REPLY LENGTH                 WGH\n         B     SKIP                                               CL006\nPREFIX   EQU   *                                                  WGH\n         LA    R1,7(R1)        POINT AT PREFIX FIELD              WGH\n         SH    R2,=H'7'        ADJUST LENGTH FIELD                WGH\n         BNP   ABORT2          INVALID PARM                       WGH\n         MVC   QPREFIX(8),QBLANK  BLANK THE PREFIX FIELD          WGH\n         LA    R6,QPREFIX      POINT TO PREFIX FIELD              WGH\n         LA    R15,8           MAX CHARS FOR FIELD                WGH\nPREFIXA  CLI   0(R1),C')'      END OF FIELD ?                     WGH\n         BE    PREFIXND        YES... LOOK FOR MORE               WGH\n         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH\n         BM    ABORT2          TOO LONG QUIT                      WGH\n         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH\n         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH\n         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH\n         BCT   R2,PREFIXA      BRANCH IF NOT EXHAUSTED            WGH\n         B     ABORT2          INVALID PARAMETERS                 WGH\nPREFIXND EQU   *                                                  WGH\n         LA    R1,1(R1)        POINT PAST PAREN                   WGH\n         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH\n         B     SKIP            NO MORE PARMS                      WGH\nUNIT     EQU   *                                                  WGH\n         LA    R1,5(R1)        POINT AT UNIT   FIELD              WGH\n         SH    R2,=H'5'        ADJUST LENGTH FIELD                WGH\n         BNP   ABORT2          INVALID PARM                       WGH\n         MVC   DA08UNIT(8),QBLANK BLANK THE UNIT   FIELD          WGH\n         LA    R6,DA08UNIT     POINT TO UNIT   FIELD              WGH\n         LA    R15,8           MAX CHARS FOR FIELD                WGH\nUNITA    CLI   0(R1),C')'      END OF FIELD ?                     WGH\n         BE    UNITEND         YES... LOOK FOR MORE               WGH\n         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH\n         BM    ABORT2          TOO LONG QUIT                      WGH\n         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH\n         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH\n         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH\n         BCT   R2,UNITA        BRANCH IF NOT EXHAUSTED            WGH\n         B     ABORT2          INVALID PARAMETERS                 WGH\nUNITEND  EQU   *                                                  WGH\n         LA    R1,1(R1)        POINT PAST PAREN                   WGH\n         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH\n         B     SKIP            NO MORE PARMS                      WGH\nVOLUME   EQU   *                                                  WGH\n         LA    R1,4(R1)        POINT AT VOLUME FIELD              WGH\n         SH    R2,=H'4'        ADJUST LENGTH FIELD                WGH\n         BNP   ABORT2          INVALID PARM                       WGH\n         MVC   DA08SER(8),QBLANK  BLANK THE VOLUME FIELD          WGH\n         LA    R6,DA08SER      POINT TO VOLUME FIELD              WGH\n         LA    R15,6           MAX CHARS FOR FIELD                WGH\nVOLUMEA  CLI   0(R1),C')'      END OF FIELD ?                     WGH\n         BE    VOLUMEND        YES... LOOK FOR MORE               WGH\n         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH\n         BM    ABORT2          TOO LONG QUIT                      WGH\n         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH\n         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH\n         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH\n         BCT   R2,VOLUMEA      BRANCH IF NOT EXHAUSTED            WGH\n         B     ABORT2          INVALID PARAMETERS                 WGH\nVOLUMEND EQU   *                                                  WGH\n         LA    R1,1(R1)        POINT PAST PAREN                   WGH\n         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH\n         B     SKIP            NO MORE PARMS                      WGH\nABORT2   EQU   *\n         TPUT  MESSAGE2,L'MESSAGE2,EDIT,MF=(E,QTPUT)   TELL THE USER\n         SR    R0,R0           CLEAR R0                           WGH\n         IC    R0,QDLINE1      GET LENGTH OF PARM                 WGH\n         LA    R1,QDLINE1+1    ADDRESS OF PARM                    WGH\n         TPUT  (1),(0),R\n         ABEND 97             QUIT.\n         SPACE 1                                                  CL006\nMVCBUF   MVC   QDREPLY(*-*),0(R1)  *** EXECUTE ONLY ***           WGH\nMVCBUFA  MVC   QDLINE1+1(*-*),0(R1) ** EXECUTE ONLY ***           WGH\nOCBUF    OC    0(*-*,R1),QBLANK        UPPER CASE COMMAND         WGH\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   OBTAIN BLOCK ADDR TABLE FOR LISTDS                                *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\nSKIP     EQU   *\n         MVC   QDLINE1(132),QBLANK  BLANK THE WORK LINE           WGH\n         MVC   QDLINE1+132(132),QBLANK   BLANK THE WORK LINE      WGH\n         GETMAIN R,LV=65536*4                                     CL006\n         ST    R1,QGETA1      SAVE START ADDR OF GETMAIN\n         ST    R1,QCSTART     STORE STARTING ADDR OF TABLE\n         A     R1,=A(65536*4) END OF TABLE\n         ST    R1,QCEND\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR QUEUE COMMAND START-UP        ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QASTART           PERFORM START-UP AUTHORIZATION ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   ALLOCATE HASPCKPT                                                 *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\n         MVC   DA08DDN,=CL8'HASPCKPQ' DDNAME FOR ALLOCATE         WGH\n         GETMAIN R,LV=2+44         WORK AREA                      CL006\n         ST    R1,DA08PDSN         SET POINTER TO DSNAME          CL006\n         LA    R1,DSNCKPT          ADDR OF CHECKPOINT DSN SUFFIX  CL006\n         BAL   R14,BUILDSN         GO BUILD DATA SET NAME         CL006\n         MVI   DAIRFLAG,X'08' REQUEST ALLOCATE FUNCTION\n         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE\n         BALR  R14,R15        GO TO IT\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM PRE-OPEN CHECKPOINT/SPOOL AUTHORIZATION CHECK         ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QABEFOPN          PRE-OPEN CKPT/SPOOL AUTH CHECK ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   OPEN HASPCKPT, READ FIRST BLOCK OF CHECKPOINT                     *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\n         OPEN  MF=(E,HOCKPT)  OPEN HASPCKPT\n         L     R2,QCSTART     USE TABLE AREA FOR IOAREA\n         POINT HASPCKPT,TIR3  POINT PAST SYNC RECORDS\n         READ  HDECB1,SF,,(R2),MF=E READ FIRST RECORD\n         CHECK HDECB1\n         SPACE 1                                                  2.2.0\n*                                                                 2.2.0\n*        FORMAT OF CHECKPOINT MASTER RECORD                       2.2.0\n*        $SAVEBEG - START OF HCT AREA                             2.2.0\n*                   ($SAVELEN LONG)                               2.2.0\n*        QSE1     - START OF QSE AREA                             2.2.0\n*                   (QSELEN*$QSEMAX)                              2.2.0\n*        $JQEEXT  - START OF JQE EXTENSION                        2.2.0\n*                   ($MAXEXSZ)                                    2.2.0\n*        $DASEXT  - START OF DAS EXTENSIONS                       2.2.0\n*                   (DASEXLEN*$SPOLNUM)                           2.2.0\n*        $KITPTR  - POINTER TO CHECKPOINT INFO TABLES             2.2.0\n*                   ($KITNUM*KITLNGTH)                            2.2.0\n*        $CTLB    - POINTER TO CHECKPT I/O CONTROL BYTES          2.2.0\n*                                                                 2.2.0\n         SPACE 1                                                  2.2.0\n*                                                                 UF039\n*        GETMAIN DECB WORK AREA FOR CKPT ROUTINE                  UF039\n*                                                                 UF039\n         SR    R0,R0          CLEAR FOR IC                        UF039\n         IC    R0,DCBNCP-IHADCB+HASPCKPT  NUMBER OF CHANNEL PGMS  UF039\n         MH    R0,=Y(HDECB1L) TIMES LENGTH OF A DECB              UF039\n         GETMAIN R,LV=(0)     GET ENOUGH STORAGE                  UF039\n         ST    R1,QCDECBPT    SAVE ADDRESS FOR CKPT ROUTINE       UF039\n         USING $SAVEBEG,R2    BASE REG FOR CHECKPOINT\n         CLC   =C'JES2',$HASPID    MAKE SURE IS VALID HCT         UF046\n         BE    HCTOK               YES, CONTINUE                  UF046\n         TPUT  MESSAGE3,L'MESSAGE3,EDIT,MF=(E,QTPUT) TELL USER    UF046\n         ABEND 90,DUMP             ABORT                          UF046\nHCTOK    DS    0H                                                 UF046\n***********************************************************************\n*                                                                     *\n*   INITIALIZE SYSTEM ID'S FROM CHECKPOINT SHARED Q CONTROL ELEMENTS  *\n*      - JOHN GRADY SULLIVAN - LOMA LINDA UNIVERSITY MEDICAL CENTER   *\n*                                                                     *\n***********************************************************************\n         LH    R3,$QSEMAX     GET MAX # OF DEFINED SYSTEMS    /* JGS */\n         LA    R4,QSYSID+8    => QCOMMON SYSTEM ENTRY - SID(1)/* JGS */\n         LA    R5,$SAVEEND    => QSE'S IN CHECKPOINT RECORD   /* JGS */\n         USING QSE,R5         ADDRESSABILITY TO QSE'S         /* JGS */\nSIDLOOP  DS    0H                                             /* JGS */\n         MVC   0(4,R4),QSESID SYSTEM ID TO QCOMMON            /* JGS */\n         MVC   4(4,R4),QBLANK BLANK NEXT 4 BYTES              /* JGS */\n         LA    R4,8(,R4)      => NEXT ENTRY IN QCOMMON        /* JGS */\n         TM    QSESTAT,QSELAST   IS THIS THE LAST QSE ?       /* JGS */\n         BO    SIDLOOPE       BIT=1 => YES, LAST, SO BRANCH   /* JGS */\n         LA    R5,QSELEN(,R5) => NEXT QSE                     /* JGS */\n         BCT   R3,SIDLOOP     LOOP FOR THE NUMBER OF SYSTEMS  /* JGS */\nSIDLOOPE DS    0H                                             /* JGS */\n         DROP  R5                                             /* JGS */\n         EJECT ,                                                  2.2.0\n***********************************************************************\n*                                                                     *\n*   COMPUTE SIZE OF TRACK GROUP MAPS ON CKPT                      2.2.0\n*                                                                     *\n***********************************************************************\n         L     R5,$NUMTG      NUMBER OF TRACK GROUPS TOTAL        2.2.0\n         SRL   R5,3           DIVIDE BY 8                         UF020\n         LR    R1,R5          SAVE LENGTH OF TRACK GROUP MAP\n         AIF   (NOT &LOCK).NOTLOCK                                   CL\n         MH    R1,=H'3'            NUMBER OF BYTES * 3               CL\n         AGO   .LOCK                                                 CL\n.NOTLOCK SLL   R1,1                NUMBER OF BYTES * 2            UF046\n.LOCK    LA    R1,BFPLEN(,R1)      ADD BUFFER PREFIX                 CL\n         LA    R1,4095(,R1)        PREPARE TO ROUND\n         SRL   R1,12               DIVIDE BY 4K                   UF046\n         STH   R1,QCTGML           NUMBER OF BLOCKS FOR TG MAPS   UF046\n***********************************************************************\n*                                                                     *\n*   COMPUTE HASPACE BUFFER SIZE                                       *\n*                                                                     *\n***********************************************************************\n         LH    R5,$BUFSIZE    BLKSIZE FOR HASPACE\n         STH   R5,HASPACE+62  STORE IN DCB\n         STH   R5,HDECB2+6    STORE IN DECB\n         LA    R5,63(R5)      PREPARE TO ROUND\n         N     R5,=F'-64'     ROUND TO 64 BYTE BOUNDARY\n***********************************************************************\n*                                                                     *\n*   OBTAIN BUFFERS FOR HASPCKPT AND HASPACE                           *\n*                                                                     *\n***********************************************************************\n         LR    R14,R5         HASPACE BUFFER SIZE\n         MH    R14,=H'3'      3 BUFFERS\n         LH    R1,$CKRECN     NUMBER OF 4K RECORDS                2.2.0\n         LA    R1,1(,R1)           PLUS MASTER RECORD             2.2.0\n         AH    R1,$CLRECN          + NUMBER OF CHANGE LOG RECORDS 2.2.0\n         ST    R1,QCJOTL      STORE RECORD COUNT\n         SLL   R1,12          MULTIPLY BY 4096\n         LA    R0,256(R1,R14) ADD CKPT BUFFERS, HASPACE BUFFERS, SLOP\n         ST    R0,QGETL2      SAVE LENGTH OF GETMAIN AREA\n         GETMAIN R,LV=(0)     OBTAIN BUFFERS\n         ST    R1,QGETA2      SAVE ADDRESS OF GETMAIN AREA\n         ST    R1,QCJQTL      BUFFER FOR FIRST CKPT REC\n         SPACE 1                                                  2.2.0\n         L     R15,=V(CKPT)        READ CKPT DATA                 2.2.0\n         BALR  R14,R15                                            2.2.0\n         SPACE 1                                                  2.2.0\n         L     R1,QCJQTL           RESTORE BUFFER ADDRESS         2.2.0\n         EJECT ,                                                  2.2.0\n         LR    R14,R1              COMPUTE ADDR OF JQE EXTENSION\n         LA    R14,$SAVELEN(,R14)  ACCOUNT FOR CHECKPOINTED HCT\n         LA    R4,QSELEN      QSE LENGTH                          2.2.0\n         MH    R4,$QSEMAX     MULTIPLY LENGTH TIMES NUM OF QSES   2.2.0\n         ALR   R14,R4              ACCOUNT FOR QSE'S\n         ST    R14,QCJQEXA         SAVE ADDR OF JQE EXTENSION\n         AH    R1,=H'4096'    INCREMENT\n*                                                                 2.2.0\n         LH    R15,$CLRECN         NUMBER OF CHANGE LOG BLKS      2.2.0\n         SLL   R15,12               TIMES 4K                      2.2.0\n         AR    R1,R15              BUMP PAST CHANGE LOG           2.2.0\n*                                                                 2.2.0\n         USING HDP,R1              CONTROL BLOCK POOL HEADER      2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**TGM  POOL**',HDPID                            2.2.0\n         BE    OKTGM                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE TGM POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKTGM    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCTGMA           BUFFER FOR TGM BLOCKS          UF046\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**SCQ  POOL**',HDPID                            2.2.0\n         BE    OKSCQ                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE SCQ POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKSCQ    DS    0H                                                 2.2.0\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**JIX  POOL**',HDPID                            2.2.0\n         BE    OKJIX                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE JIX POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKJIX    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCJIXA      BUFFER FOR JIX BLOCKS               UF020\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**JQE  POOL**',HDPID                            2.2.0\n         BE    OKJQE                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE JQE POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKJQE    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCJQTA      BUFFER FOR JQE BLOCKS\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**PST  POOL**',HDPID                            2.2.0\n         BE    OKPST                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE PST POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKPST    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCPSTA           BUFFER OF PST BLOCKS\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**JOE  POOL**',HDPID                            2.2.0\n         BE    OKJOE                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE JOE POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKJOE    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCJOTA      BUFFER FOR JOE BLOCKS\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**TGR  POOL**',HDPID                            2.2.0\n         BE    OKTGR                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE TGR POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKTGR    DS    0H                                                 2.2.0\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**RSO  POOL**',HDPID                            2.2.0\n         BE    OKRSO                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE RSO POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKRSO    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**LCK  POOL**',HDPID                            2.2.0\n         BE    OKLCK                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE LCK POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKLCK    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**DAS  POOL**',HDPID                            2.2.0\n         BE    OKDAS                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE DAS POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKDAS    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCTDASA          BUFFER FOR DAS BLOCKS          2.2.0\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         DROP  R1                                                 2.2.0\n         SPACE 1                                                  2.2.0\n         ST    R1,QCJCTA      BUFFER FOR JCT\n         AR    R1,R5          INCREMENT\n         ST    R1,QCIOTA      BUFFER FOR IOT\n         AR    R1,R5          INCREMENT\n         ST    R1,QCBLKA      BUFFER FOR DATA BLOCKS\n         SPACE 1                                                  ONL16\n         L     R1,QCJCTA           ADDR OF JCT BUFFER             ONL16\n         SL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16\n         ST    R1,QCJCTA           SAVE ADJUSTED JCT POINTER      ONL16\n         SPACE 1                                                  ONL16\n         LA    R1,$JQHEADS+$JQHEADL-$SAVEBEG OFFSET 1ST JQE HEAD  UF020\n         A     R1,QCJQTL      BASE OF FIRST CKPT REC\n         ST    R1,QCJQHEAD    ADDR OF FIRST JQE HEADER\n***********************************************************************\n*                                                                     *\n*   ALLOCATE AND OPEN HASPACE                                         *\n*                                                                     *\n***********************************************************************\n*                                                                 2.2.0\n         L     R3,QCTDASA          ADDR OF DAS AREA               2.2.0\n         USING DAS,R3              SET ADDRESSING                 UF046\n         MVC   DA08DDN,=CL8'HASPACQ' DDNAME FOR ALLOCATE          WGH\n         LA    R1,DSNSPACE         ADDR OF HASPACE DSN SUFFIX     CL006\n         BAL   R14,BUILDSN         GO BUILD DATA SET NAME         CL006\n         LA    R4,9           MAX POSSIBLE SPOOLS FOR QUEUE       UF020\n         LA    R7,QCDCBL      LENGTH OF HASPACE DCB\n         MR    R6,R4          COMPUTE LENGTH OF DCB POOL\n         GETMAIN R,LV=(R7)    OBTAIN DCB POOL\n         ST    R7,QGETL3      SAVE LENGTH OF GETMAIN\n         ST    R1,QGETA3      SAVE ADDRESS OF GETMAIN\n         LR    R7,R1          SAVE ADDR OF DCB POOL\n         LA    R8,QCSPOOLS-4  ADDR OF OPEN LIST\n         SR    R6,R6          ACTUAL NUMBER OF SPOOL VOLUMES\n         MVC   DA08SER(5),$SPOOL PATTERN FOR VOLSER\nSPOOL1   LA    R5,DEVTAB      ADDR OF DEVICE CHARACTERISTICS TBL\n         TM    DASFLAG,DASEXSTS    DOES VOLUME EXIST?             UF046\n         BZ    SPOOL4              NO, SKIP THIS ONE              UF046\n         TM    DASFLAG2,DASINACT   IS IT INACTIVE?                UF046\n         BO    SPOOL4              YES, SKIP IT                   UF046\n         LH    R15,DASNOTGE        NUMBER OF TRACKS IN EXTENT     CL001\n         A     R15,QCTNUMTG        ACCUMULATE ACTIVE              CL001\n         ST    R15,QCTNUMTG         TRACK GROUP COUNT             CL001\nSPOOL2   CLI   0(R5),X'FF'    IS THIS THE END OF TABLE?\n         BE    ABORT          YES. UNSUPPORTED DEVICE TYPE.\n         CLC   0(1,R5),DASTYPE     IS IT A MATCH?                 UF046\n         BE    SPOOL3         YES. GO WITH IT.\n         LA    R5,12(R5)      NEXT TABLE ENTRY\n         B     SPOOL2         TRY NEXT ENTRY\nSPOOL3   MVC   QCTRKCYL-QCSPOOLS+4+2(2,R8),2(R5) SET TRK/CYL         CL\n         MVC   DA08UNIT,4(R5) MOVE UNIT NAME\n         MVC   DA08SER+5(1),DASVOLID+5 LAST CHAR OF VOLSER        UF046\n         LA    R6,1(R6)       INCREASE COUNT BY ONE\n         STC   R6,DA08DDN+7   UPDATE DDNAME\n         OI    DA08DDN+7,X'F0' MAKE IT A VALID NUMBER\n         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE\n         BALR  R14,R15        GO TO IT\n         MVC   0(QCDCBL,R7),HASPACE MOVE PATTERN DCB TO POOL\n         MVC   47(1,R7),DA08DDN+7 UPDATE THE DDNAME\n         ST    R7,4(R8)       STORE DCB ADDR IN OPEN LIST\n         LA    R7,QCDCBL(R7)  INCREMENT TO NEXT DCB\nSPOOL4   LA    R8,4(R8)       NEXT ENTRY IN OPEN LIST\n         LA    R3,DASSIZ(,R3)      NEXT VOLUME                    UF046\n         BCT   R4,SPOOL1      BRANCH IF MORE VOLUMES.\n         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006\n         FREEMAIN R,LV=2+44,A=(1)  FREE WORK AREA                 CL006\n         SPACE 2                                                     CL\n***********************************************************************\n*                                                                     *\n*        OPEN ONE DCB FOR EACH ACTIVE EXTENT.                         *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n         LA    R4,9                MAX POSSIBLE SPOOLS FOR QUEUEJKAUG84\n         LA    R8,QCSPOOLS         ADDR OF FIRST DCB POINTER         CL\n         SPACE 1                                                     CL\nSPOOL5   OC    0(4,R8),0(R8)       SKIP IF THIS EXTENT               CL\n         BZ    SPOOL6               IS NOT ACTIVE                    CL\n         OI    0(R8),X'80'         SET END OF LIST INDICATOR         CL\n         OPEN  MF=(E,(R8))         OPEN ONE EXTENT                   CL\n         NI    0(R8),X'7F'         TURN OFF BIT JUST FOR NEATNESSKAUG84\nSPOOL6   LA    R8,4(,R8)           BUMP TO NEXT EXTENT               CL\n         BCT   R4,SPOOL5           CONTINUE IF ANY MORE              CL\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM POST-OPEN CHECKPOINT/SPOOL AUTHORIZATION CHECK        ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAAFTOPN          POST-OPEN CKPT/SPOOL AUTH CHECKONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   GO HOME                                                           *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\n         QSTOP\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   ABORT QUEUE COMMAND PROCESSING                                ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQAABORT  DS    0H                  ABORT QUEUE COMMAND PROCESSING ONL02\n         WTO   'QUEUE COMMAND ABORTED - INVALID ENVIRONMENT',     ONL02X\n               ROUTCDE=(11)        TELL USER WHY                  ONL02\n         SPACE 1                                                  ONL02\n         ABEND 913                 ABEND U913                     ONL02\n         EJECT                                                    CL006\n***********************************************************************\n*                                                                     *\n*        CONSTRUCT DATA SET NAME FOR JES2 DISK DATA SETS.             *\n*                                                                     *\n*        R1 = ADDR OF DSN PREFIX                                      *\n*        R14= LINK REGISTER                                           *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nBUILDSN  L     R15,DA08PDSN        ADDR OF WORK AREA              CL006\n         MVI   2(R15),C' '         BLANK DATA SET                 CL006\n         MVC   3(43,R15),2(R15)     NAME WORK AREA                CL006\n         MVC   2(8,R15),QPREFIX    SET PREFIX FROM COMMON         CL006\n         LA    R15,9(R15)          ADDR OF LAST POSSIBLE CHAR     CL006\n         CLI   0(R15),C' '         SKIP IF NON-BLANK              CL006\n         BNE   *+8                  CHARACTER FOUND               CL006\n         BCT   R15,*-8               ELSE KEEP LOOKING            CL006\n         MVI   1(R15),C'.'         SET PERIOD                     CL006\n         MVC   2(8,R15),0(R1)      COPY DSN SUFFIX                CL006\n         LA    R15,2+7(R15)        ADDR OF LAST POSSIBLE CHAR     CL006\n         CLI   0(R15),C' '         SKIP IF NON-BLANK              CL006\n         BNE   *+8                  CHARACTER FOUND               CL006\n         BCT   R15,*-8               ELSE KEEP LOOKING            CL006\n         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006\n         LA    R1,1(R1)            ADDR OF FIRST BYTE OF NAME-1   CL006\n         SR    R15,R1              LENGTH OF ENTIRE NAME          CL006\n         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006\n         STH   R15,0(R1)           SET LENGTH FOR DAIR            CL006\n         BR    R14                  AND RETURN                    CL006\n***********************************************************************\n*                                                                     *\n*   UNSUPPORTED DEVICE TYPE. ABORT.                                   *\n*                                                                     *\n***********************************************************************\nABORT    TPUT  MESSAGE,L'MESSAGE,EDIT,MF=(E,QTPUT)   TELL THE USER\nABORT98  ABEND 98,DUMP        QUIT.                               2.2.0\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nDEVTAB   DC    X'0900',H'19',CL8'3330' DEVTYPE,TRK/CYL,DEVNAME\n         DC    X'0B00',H'30',CL8'3350'\n         DC    X'0D00',H'19',CL8'3330-1'\n         DC    X'0E00',H'15',CL8'3380'                            UF037\n         DC    X'0F00',H'15',CL8'3390'                            WGH42\n         DC    X'FFFF'\n         DS    0F\nTIR3     DC    X'00000300'    POINT PAST SYNC RECORDS\nDSNCKPT  DC    CL8'HASPCKPT'                                      CL006\nDSNSPACE DC    CL8'HASPACE'                                       CL006\nMESSAGE  DC    C'UNSUPPORTED DEVICE TYPE SPECIFIED FOR SPOOL'\nMESSAGE2 DC    C'INVALID PARAMETER SPECIFIED - '                  WGH\nMESSAGE3 DC    C'INVALID HCT SAVEAREA ON CKPT'                    UF046\n         EJECT                                                    CL006\n***********************************************************************\n*                                                                     *\n*        CONSTRUCT PARSE PARAMETER LISTS                              *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nPCLSTART IKJPARM DSECT=IKJPARMD                                   CL006\n         SPACE 2                                                  CL006\nPSTRING  IKJIDENT 'SUB-COMMAND',ASTERISK,FIRST=ALPHA,OTHER=ANY,   CL006*\n               CHAR                                               CL006\n         SPACE 1                                                  CL006\nPPREFIX  IKJKEYWD ,                                               CL006\n         SPACE 1                                                  CL006\n         IKJNAME 'PREFIX',SUBFLD=SPREFIX                          CL006\n         SPACE 1                                                  CL006\nPUNIT    IKJKEYWD ,                                               CL006\n         SPACE 1                                                  CL006\n         IKJNAME 'UNIT',SUBFLD=SUNIT                              CL006\n         SPACE 1                                                  CL006\nPVOL     IKJKEYWD ,                                               CL006\n         SPACE 1                                                  CL006\n         IKJNAME 'VOL',SUBFLD=SVOL                                CL006\n         SPACE 5                                                  CL006\nSPREFIX  IKJSUBF ,                                                CL006\nXPREFIX  IKJIDENT 'PREFIX',LIST,MAXLNTH=8,FIRST=ALPHA,            CL006*\n               OTHER=ALPHANUM                                     CL006\n         SPACE 1                                                  CL006\nSUNIT    IKJSUBF ,                                                CL006\n         SPACE 1                                                  CL006\nXUNIT    IKJIDENT 'UNIT',LIST,MAXLNTH=8,OTHER=ALPHANUM,           CL006*\n               FIRST=ALPHANUM                                     CL006\n         SPACE 1                                                  CL006\nSVOL     IKJSUBF ,                                                CL006\n         SPACE 1                                                  CL006\nXVOL     IKJIDENT 'VOLUME',LIST,MAXLNTH=6,FIRST=ALPHANUM,         CL006*\n               OTHER=ALPHANUM                                     CL006\n         SPACE 2                                                  CL006\n         IKJENDP ,                                                CL006\n         EJECT                                                    CL006\nWORK     DSECT ,                                                  UF024\n         DS    18F                 SAVEAREA PORTION               UF024\nWORKAREA DS    D                   START OF SCRATCH WORK AREA     UF024\n         SPACE 1                                                  UF024\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nINIT     CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         COPY  $HASPGBL\n&MACSPLV SETC  '2'\n&SYSSPLV SETC  '2'\n&VERSION SETC  'SP 4.2.0'\n&FMID    SETC  'HJE4420'\n         $HASPEQU\n         $DAS  ,                                                  UF046\n         $MIT  ,                                                  UF046\n         $PCE  ,              NEEDED FOR NJE $HCT                 UF001\n         $PSV  ,\n         $JOE\n         $JOT\nNJOTPRFX EQU   (JOTJOES-JOT)/JOESIZE\n         $LCK  ,                                                  UF020\n         $BUFFER                                                  UF020\n         $LMT   ,                                                 WGH42\n         $XECB  ,                                                 WGH42\nPDS2BLEN EQU    1                                                 WGH42\n         IFGRPL\n         $JCT  ,                                                  UF020\n         $CAT  ,                                                  UF020\n         $TAB\n         $QSE\n         $PDDB                                                    UF021\n         $IOT\n         $JQE\n         $HCT\n         $HDP  ,                                                  2.2.0\n         IKJCPPL ,                                                ONL02\n         IKJPSCB ,                                                ONL02\n         IKJUPT  ,                                                WGH\n*        IHADCB DSORG=PS                                          UF039\n         DCBD   DSORG=PS                                          UF039\n         CVT    DSECT=YES                                         CL006\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INITO": {"ttr": 5379, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "INIT     TITLE 'QUEUE COMMAND - INITIALIZATION ROUTINES'          ONL01\nINIT     QSTART ,                  START INIT CSECT ASSEMBLY      ONL01\n         GBLB  &QDBC          DBC    OPTION                       UF024\n         GBLB  &QONL          ONL    OPTION                       ONL08\n         GBLB  &LOCK          LOCKHEED OPTION                        CL\n***********************************************************************\n*                                                                     *\n*   LOAD QCOMMON                                                      *\n*                                                                     *\n***********************************************************************\n*\n****\n*******  IF YOU WANT TO CHANGE THE NAME FOR THE COMMON AREA,\n****               THIS IS THE ONLY REFERENCE TO IT.\n*\n         AIF   (&QONL).ONL08                                      ONL08\n         L     R11,=V(QCOMMON) ADDR OF QCOMMON                    UF002\n         LTR   R11,R11        SEE IF LINKED IN                    UF002\n         BNZ   LOADED         YES, CONTINUE                       UF002\n.ONL08   ANOP  ,                                                  ONL08\n         SPACE 1                                                  UF002\n         LOAD  EP=QUEUECMN    QUEUE COMMON AREA\n         LR    R11,R0         ADDR OF QCOMMON\n         SPACE 1                                                  UF002\nLOADED   DS    0H                                                 UF002\n         L     R1,4(R13)      PREVIOUS SAVE AREA\n         ST    R11,64(R1)     UPDATE R11 IN PREVIOUS SAVE AREA\n         ST    R1,QFRSTSA     STORE ADDR OF FIRST SAVEAREA IN QCOMMON\n         USING QDAIR,R10      BASE REG FOR DAIR WORK\n         L     R10,QVDAIR     LOAD BASE REG\n         USING QCKPT,R9       BASE REG FOR CKPT WORK\n         L     R9,QVCKPT      LOAD BASE REG\n         USING QDISPLAY,R8    BASE REG FOR DISPLAY WORK\n         L     R8,QVDSPL      LOAD BASE REG\n         SPACE 1\n         L     R1,16          GET CVT ADDRESS\n         USING CVT,R1\n         TM    CVTDCB,X'80'   EXECUTING XA MODE\n         BNO   NOTXA          NO, BR\n         OI    QFLAG1,QFLG1XA SET XA MODE FLAG\n         DROP  R1\n         SPACE 1\n         USING WORK,R13       ADDRESSING FOR SAVE/WORK AREA       UF024\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   VERIFY A TSO ENVIRONMENT, FIND THE ADDRRESS OF THE PROTECTED  ONL02\n*   STEP CONTROL BLOCK, AND VERIFY SOME FIELDS IN THE COMMAND     ONL02\n*   PROCESSOR PARAMETER LIST.                                     ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nNOTXA    LA    R3,QDWORK           ADDR FOR EXTRACT ANSWER AREA   ONL02\n         LA    R4,QAEXTLST         ADDR OF EXTRACT PARAMETER LIST ONL02\n         EXTRACT (R3),FIELDS=(TSO,PSB),MF=(E,(R4))  EXTRACT INFO  ONL02\n         SPACE 1                                                  ONL02\n         L     R1,QDWORK           PICKUP ADDR OF TSO INDICATOR   ONL02\n         TM    0(R1),X'80'         IS THIS A TSO ADDRESS SPACE?   ONL02\n         BO    NOTBATCH            YES... CONTINUE                WGH\n         OI    QFLAG1,QFLG1BAT     NO...  SET BATCH MODE          WGH\n         SPACE 1                                                  ONL02\nNOTBATCH L     R1,QDWORK+4         PICKUP ADDR OF PSCB            ONL02\n         LTR   R1,R1               IS PSCB AVAILABLE?             ONL02\n         BZ    QAABORT             IF NOT, ABORT                  ONL02\n         SPACE 1                                                  ONL02\n         USING PSCB,R1             NOTE PSCB ADDRESSABILITY       ONL02\n         USING CPPL,R2             NOTE CPPL ADDRESSABILITY       ONL02\n         USING UPT,R15             NOTE UPT  ADDRESSABILITY       WGH02\n         L     R15,PSCBUPT         ADDR OF UPT                    WGH\n         SPACE 1                                                  ONL02\n         CLM   R1,15,CPPLPSCB      VERIFY PSCB ADDR IN CPPL       ONL02\n         BNE   QAABORT             ABORT IF ADDR'S DON'T MATCH    ONL02\n         CLC   PSCBUPT,CPPLUPT     VERIFY UPT ADDR IN CPPL        ONL02\n         BNE   QAABORT             ABORT IF ADDR'S DON'T MATCH    ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   GET THE USERID AND ITS LENGTH AND SAVE THEM IN QCOMMON        ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         MVC   QLOGON(L'PSCBUSER),PSCBUSER  SET USERID IN QCOMMON ONL02\n         SLR   R0,R0               CLEAR FOR INSERT               ONL02\n         IC    R0,PSCBUSRL         PICKUP LENGTH OF USERID        ONL02\n         ST    R0,QLOGONLN         SET LENGTH IN QCOMMON          ONL02\n         CLI   QLOGON,C' '         IS USERID BLANK                WGH\n         BNE   IDOK                NO.. USE IT                    WGH\n         MVC   QLOGON(L'UPTPREFX),UPTPREFX SET PREFIX IN QCOMMON  WGH\n         IC    R0,UPTPREFL         PICKUP LENGTH OF PREFIX        WGH\n         ST    R0,QLOGONLN         SET LENGTH IN QCOMMON          WGH\n         DROP  R15                                                WGH\nIDOK     EQU   *                                                  WGH\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   CHECK PSCB FOR OPERATOR AUTHORITY                             ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         TM    QFLAG1,QFLG1BAT     ARE WE IN BATCH MODE ?         WGH\n         BO    SETOPER             YES.. GIVE FULL AUTH           WGH\n         TM    PSCBATR1,PSCBCTRL   DOES USER HAVE OPER AUTHORITY? ONL02\n         BZ    SKIPOPER            SKIP IF NO                     ONL02\nSETOPER  OI    QAFLAGS,QAFXOPER    SHOW USER HAS OPER AUTHORITY   ONL02\nSKIPOPER DS    0H                                                 ONL02\n         SPACE 2                                                  ONL02\n******************************************************************WGH\n*                                                                 WGH\n*   FILL IN IOPL PARAMETER LIST FROM THE CPPL                     WGH\n*                                                                 WGH\n******************************************************************WGH\n         SPACE 1                                                  WGH\n         MVC   STKIOPL,CPPLUPT     USER PROFILE TABLE             WGH\n         MVC   STKIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH\n         LA    R0,STKIOECB         ECB ADDRESS                    WGH\n         ST    R0,STKIOPL+8        FILL IT IN                     WGH\n         LA    R0,STKBLOCK         STACK   PARM BLOCK             WGH\n         ST    R0,STKIOPL+12       FILL IT IN                     WGH\n         SPACE 1                                                  WGH\n         MVC   GETIOPL,CPPLUPT     USER PROFILE TABLE             WGH\n         MVC   GETIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH\n         LA    R0,GETIOECB         ECB ADDRESS                    WGH\n         ST    R0,GETIOPL+8        FILL IT IN                     WGH\n         LA    R0,GETBLOCK         GETLINE PARM BLOCK             WGH\n         ST    R0,GETIOPL+12       FILL IT IN                     WGH\n         SPACE 1                                                  WGH\n         MVC   PUTIOPL,CPPLUPT     USER PROFILE TABLE             WGH\n         MVC   PUTIOPL+4,CPPLECT   ENVIRONMENT CNTL TABLE         WGH\n         LA    R0,PUTIOECB         ECB ADDRESS                    WGH\n         ST    R0,PUTIOPL+8        FILL IT IN                     WGH\n         LA    R0,PUTBLOCK         PUTLINE PARM BLOCK             WGH\n         ST    R0,PUTIOPL+12       FILL IT IN                     WGH\n******************************************************************ONL02\n*                                                                 ONL02\n*   FILL IN DAIR PARAMETER LIST FROM THE CPPL                     ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         MVC   DAPLUPT,CPPLUPT     USER PROFILE TABLE             ONL02\n         MVC   DAPLECT,CPPLECT     ENVIRONMENT CNTL TABLE         ONL02\n         MVC   DAPLPSCB,CPPLPSCB   PROTECTED STORAGE CNTL BLK     ONL02\n         DROP  R1                                                 CL006\n         SPACE 2                                                  ONL02\n         AIF   (NOT &QDBC).NODBC1 SKIP IF DBC NOT INSTALLED       UF024\n******************************************************************UF024\n*                                                                 UF024\n*   IF USER HAS OPER AUTHORITY, ESTABLISH ESTAE ENVIRONMENT       UF024\n*                                                                 UF024\n******************************************************************UF024\n         SPACE 1                                                  ONL02\n         TM    QAFLAGS,QAFXOPER    DOES USER HAVE OPER AUTHORITY? ONL02\n         BZ    NOTOPER             SKIP IF NO                     ONL02\n         SPACE 1                                                  ONL02\n         LOAD  EP=DBC,ERRET=NOTOPER  LOAD ESTAE ROUTINE           UF024\n         LR    R3,R0          ADDR OF ROUTINE                     UF024\n         MVC   WORKAREA(DBCMFLN),DBCMFL GET ESTAE PARM LIST       UF024\n         ESTAE (R3),MF=(E,WORKAREA)  CREATE THE ESTAE             UF024\n         OI    QFLAG1,QFLG1DBC  INDICATE NEED TO DELETE AT TERM   UF024\n         B     NOTOPER        CONTINUE PROCESSING                 UF024\nDBCMFL   ESTAE ,MF=L          LIST FORM OF ESTAE                  UF024\nDBCMFLN  EQU   *-DBCMFL       LENGTH OF LIST FORM ESTAE           UF024\nNOTOPER  DS    0H                                                 ONL02\n.NODBC1  ANOP                                                     UF024\n         EJECT                                                    CL006\n***********************************************************************\n*                                                                     *\n*        SCAN COMMAND BUFFER FOR KNOWN KEYWORDS.  IF FOUND TAKE       *\n*        APPROPRIATE ACTION.  IF NONE FOUND OR RECOGNIZED,            *\n*        THEN PASS TO OUR PARSE ROUTINE.                              *\n*                                                                     *\n*        OPTIONAL KEYWORDS MUST PRECEDE 1ST COMMAND                   *\n*                                                                     *\n*        Q VOL(VOLSER) UNIT(TYPE) PREFIX(XXXX) 1ST CMD                *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n         L     R1,CPPLCBUF     POINT TO COMMAND BUFFER            WGH\n         DROP  R2              DROP CPPL USING                    WGH\n         LH    R2,0(R1)        GET TOTAL LENGTH                   WGH\n         SH    R2,2(R1)        ADJUST FOR CMD LENGTH              WGH\n         SH    R2,=H'4'        ADJUST FOR HDR                     WGH\n         AH    R1,2(R1)        ADJUST FOR CMD LENGTH              WGH\n         AH    R1,=H'4'        ADJUST FOR HDR                     WGH\n         LTR   R2,R2                                              WGH\n         BNP   SKIP            NO PARMS                           WGH\n         STC   R2,QDLINE1      SAVE LENGTH FOR TPUT ON ERROR      WGH\n         BCTR  R2,0            REDUCE FOR TRANSLATE               WGH\n         EX    R2,MVCBUFA      MOVE TO WORK AREA                  WGH\n         LA    R1,QDLINE1+1    POINT TO WORK AREA                 WGH\n         EX    R2,OCBUF        XLATE TO UPPER CASE                WGH\n         LA    R2,1(R2)        TRUE LENGTH                        WGH\nPARMLOOP EQU   *                                                  WGH\n         CLI   0(R1),C' '      BLANK ?                            WGH\n         BNE   GOTPARM         NO.. GOT SOME PARMS                WGH\n         LA    R1,1(R1)        YES.. CHECK NEXT CHARACTER         WGH\n         BCT   R2,PARMLOOP     CHECK FOR MORE                     WGH\n         B     SKIP            NO MORE PARMS                      WGH\nGOTPARM  EQU   *                                                  WGH\n         CLC   =C'PREFIX(',0(R1) IS REQUEST FOR DSN PREFIX        WGH\n         BE    PREFIX          YES... GO PROCESS                  WGH\n         CLC   =C'UNIT(',0(R1) IS REQUEST FOR UNIT                WGH\n         BE    UNIT            YES... GO PROCESS                  WGH\n         CLC   =C'VOL(',0(R1)  IS REQUEST FOR VOLUME              WGH\n         BE    VOLUME          YES... GO PROCESS                  WGH\n         MVC   QDREPLY,QBLANK  BLANK THE REPLY LINE               WGH\n         SH    R2,=H'1'        REDUCE FOR EXECUTE                 WGH\n         BM    SKIP            NO MORE PARMS                      WGH\n         CH    R2,=H'62'       IS LENGTH OVER 63 ?                WGH\n         BNH   *+8             NO.. USE IT                        WGH\n         LA    R2,62           USE MAX LENGTH                     WGH\n         EX    R2,MVCBUF       MOVE THE DATA                      WGH\n         LA    R2,1(R2)        TRUE LENGTH                        WGH\n         STH   R2,QDRLNG       STORE REPLY LENGTH                 WGH\n         B     SKIP                                               CL006\nPREFIX   EQU   *                                                  WGH\n         LA    R1,7(R1)        POINT AT PREFIX FIELD              WGH\n         SH    R2,=H'7'        ADJUST LENGTH FIELD                WGH\n         BNP   ABORT2          INVALID PARM                       WGH\n         MVC   QPREFIX(8),QBLANK  BLANK THE PREFIX FIELD          WGH\n         LA    R6,QPREFIX      POINT TO PREFIX FIELD              WGH\n         LA    R15,8           MAX CHARS FOR FIELD                WGH\nPREFIXA  CLI   0(R1),C')'      END OF FIELD ?                     WGH\n         BE    PREFIXND        YES... LOOK FOR MORE               WGH\n         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH\n         BM    ABORT2          TOO LONG QUIT                      WGH\n         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH\n         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH\n         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH\n         BCT   R2,PREFIXA      BRANCH IF NOT EXHAUSTED            WGH\n         B     ABORT2          INVALID PARAMETERS                 WGH\nPREFIXND EQU   *                                                  WGH\n         LA    R1,1(R1)        POINT PAST PAREN                   WGH\n         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH\n         B     SKIP            NO MORE PARMS                      WGH\nUNIT     EQU   *                                                  WGH\n         LA    R1,5(R1)        POINT AT UNIT   FIELD              WGH\n         SH    R2,=H'5'        ADJUST LENGTH FIELD                WGH\n         BNP   ABORT2          INVALID PARM                       WGH\n         MVC   DA08UNIT(8),QBLANK BLANK THE UNIT   FIELD          WGH\n         LA    R6,DA08UNIT     POINT TO UNIT   FIELD              WGH\n         LA    R15,8           MAX CHARS FOR FIELD                WGH\nUNITA    CLI   0(R1),C')'      END OF FIELD ?                     WGH\n         BE    UNITEND         YES... LOOK FOR MORE               WGH\n         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH\n         BM    ABORT2          TOO LONG QUIT                      WGH\n         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH\n         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH\n         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH\n         BCT   R2,UNITA        BRANCH IF NOT EXHAUSTED            WGH\n         B     ABORT2          INVALID PARAMETERS                 WGH\nUNITEND  EQU   *                                                  WGH\n         LA    R1,1(R1)        POINT PAST PAREN                   WGH\n         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH\n         B     SKIP            NO MORE PARMS                      WGH\nVOLUME   EQU   *                                                  WGH\n         LA    R1,4(R1)        POINT AT VOLUME FIELD              WGH\n         SH    R2,=H'4'        ADJUST LENGTH FIELD                WGH\n         BNP   ABORT2          INVALID PARM                       WGH\n         MVC   DA08SER(8),QBLANK  BLANK THE VOLUME FIELD          WGH\n         LA    R6,DA08SER      POINT TO VOLUME FIELD              WGH\n         LA    R15,6           MAX CHARS FOR FIELD                WGH\nVOLUMEA  CLI   0(R1),C')'      END OF FIELD ?                     WGH\n         BE    VOLUMEND        YES... LOOK FOR MORE               WGH\n         SH    R15,=H'1'       DECREMENT MAX LENGTH               WGH\n         BM    ABORT2          TOO LONG QUIT                      WGH\n         MVC   0(1,R6),0(R1)   MOVE ONE BYTE OF FIELD             WGH\n         LA    R6,1(R6)        ADD 1 TO RECEIVING ADDRESS         WGH\n         LA    R1,1(R1)        ADD 1 TO SENDING ADDRESS           WGH\n         BCT   R2,VOLUMEA      BRANCH IF NOT EXHAUSTED            WGH\n         B     ABORT2          INVALID PARAMETERS                 WGH\nVOLUMEND EQU   *                                                  WGH\n         LA    R1,1(R1)        POINT PAST PAREN                   WGH\n         BCT   R2,PARMLOOP     GO FOR MORE PARMS                  WGH\n         B     SKIP            NO MORE PARMS                      WGH\nABORT2   EQU   *\n         TPUT  MESSAGE2,L'MESSAGE2,EDIT,MF=(E,QTPUT)   TELL THE USER\n         SR    R0,R0           CLEAR R0                           WGH\n         IC    R0,QDLINE1      GET LENGTH OF PARM                 WGH\n         LA    R1,QDLINE1+1    ADDRESS OF PARM                    WGH\n         TPUT  (1),(0),R\n         ABEND 97             QUIT.\n         SPACE 1                                                  CL006\nMVCBUF   MVC   QDREPLY(*-*),0(R1)  *** EXECUTE ONLY ***           WGH\nMVCBUFA  MVC   QDLINE1+1(*-*),0(R1) ** EXECUTE ONLY ***           WGH\nOCBUF    OC    0(*-*,R1),QBLANK        UPPER CASE COMMAND         WGH\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   OBTAIN BLOCK ADDR TABLE FOR LISTDS                                *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\nSKIP     EQU   *\n         MVC   QDLINE1(132),QBLANK  BLANK THE WORK LINE           WGH\n         MVC   QDLINE1+132(132),QBLANK   BLANK THE WORK LINE      WGH\n         GETMAIN R,LV=65536*4                                     CL006\n         ST    R1,QGETA1      SAVE START ADDR OF GETMAIN\n         ST    R1,QCSTART     STORE STARTING ADDR OF TABLE\n         A     R1,=A(65536*4) END OF TABLE\n         ST    R1,QCEND\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR QUEUE COMMAND START-UP        ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QASTART           PERFORM START-UP AUTHORIZATION ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   ALLOCATE HASPCKPT                                                 *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\n         MVC   DA08DDN,=CL8'HASPCKPQ' DDNAME FOR ALLOCATE         WGH\n         GETMAIN R,LV=2+44         WORK AREA                      CL006\n         ST    R1,DA08PDSN         SET POINTER TO DSNAME          CL006\n         LA    R1,DSNCKPT          ADDR OF CHECKPOINT DSN SUFFIX  CL006\n         BAL   R14,BUILDSN         GO BUILD DATA SET NAME         CL006\n         MVI   DAIRFLAG,X'08' REQUEST ALLOCATE FUNCTION\n         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE\n         BALR  R14,R15        GO TO IT\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM PRE-OPEN CHECKPOINT/SPOOL AUTHORIZATION CHECK         ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QABEFOPN          PRE-OPEN CKPT/SPOOL AUTH CHECK ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   OPEN HASPCKPT, READ FIRST BLOCK OF CHECKPOINT                     *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\n         OPEN  MF=(E,HOCKPT)  OPEN HASPCKPT\n         L     R2,QCSTART     USE TABLE AREA FOR IOAREA\n         POINT HASPCKPT,TIR3  POINT PAST SYNC RECORDS\n         READ  HDECB1,SF,,(R2),MF=E READ FIRST RECORD\n         CHECK HDECB1\n         SPACE 1                                                  2.2.0\n*                                                                 2.2.0\n*        FORMAT OF CHECKPOINT MASTER RECORD                       2.2.0\n*        $SAVEBEG - START OF HCT AREA                             2.2.0\n*                   ($SAVELEN LONG)                               2.2.0\n*        QSE1     - START OF QSE AREA                             2.2.0\n*                   (QSELEN*$QSEMAX)                              2.2.0\n*        $JQEEXT  - START OF JQE EXTENSION                        2.2.0\n*                   ($MAXEXSZ)                                    2.2.0\n*        $DASEXT  - START OF DAS EXTENSIONS                       2.2.0\n*                   (DASEXLEN*$SPOLNUM)                           2.2.0\n*        $KITPTR  - POINTER TO CHECKPOINT INFO TABLES             2.2.0\n*                   ($KITNUM*KITLNGTH)                            2.2.0\n*        $CTLB    - POINTER TO CHECKPT I/O CONTROL BYTES          2.2.0\n*                                                                 2.2.0\n         SPACE 1                                                  2.2.0\n*                                                                 UF039\n*        GETMAIN DECB WORK AREA FOR CKPT ROUTINE                  UF039\n*                                                                 UF039\n         SR    R0,R0          CLEAR FOR IC                        UF039\n         IC    R0,DCBNCP-IHADCB+HASPCKPT  NUMBER OF CHANNEL PGMS  UF039\n         MH    R0,=Y(HDECB1L) TIMES LENGTH OF A DECB              UF039\n         GETMAIN R,LV=(0)     GET ENOUGH STORAGE                  UF039\n         ST    R1,QCDECBPT    SAVE ADDRESS FOR CKPT ROUTINE       UF039\n         USING $SAVEBEG,R2    BASE REG FOR CHECKPOINT\n         CLC   =C'JES2',$HASPID    MAKE SURE IS VALID HCT         UF046\n         BE    HCTOK               YES, CONTINUE                  UF046\n         TPUT  MESSAGE3,L'MESSAGE3,EDIT,MF=(E,QTPUT) TELL USER    UF046\n         ABEND 90,DUMP             ABORT                          UF046\nHCTOK    DS    0H                                                 UF046\n***********************************************************************\n*                                                                     *\n*   INITIALIZE SYSTEM ID'S FROM CHECKPOINT SHARED Q CONTROL ELEMENTS  *\n*      - JOHN GRADY SULLIVAN - LOMA LINDA UNIVERSITY MEDICAL CENTER   *\n*                                                                     *\n***********************************************************************\n         LH    R3,$QSEMAX     GET MAX # OF DEFINED SYSTEMS    /* JGS */\n         LA    R4,QSYSID+8    => QCOMMON SYSTEM ENTRY - SID(1)/* JGS */\n         LA    R5,$SAVEEND    => QSE'S IN CHECKPOINT RECORD   /* JGS */\n         USING QSE,R5         ADDRESSABILITY TO QSE'S         /* JGS */\nSIDLOOP  DS    0H                                             /* JGS */\n         MVC   0(4,R4),QSESID SYSTEM ID TO QCOMMON            /* JGS */\n         MVC   4(4,R4),QBLANK BLANK NEXT 4 BYTES              /* JGS */\n         LA    R4,8(,R4)      => NEXT ENTRY IN QCOMMON        /* JGS */\n         TM    QSESTAT,QSELAST   IS THIS THE LAST QSE ?       /* JGS */\n         BO    SIDLOOPE       BIT=1 => YES, LAST, SO BRANCH   /* JGS */\n         LA    R5,QSELEN(,R5) => NEXT QSE                     /* JGS */\n         BCT   R3,SIDLOOP     LOOP FOR THE NUMBER OF SYSTEMS  /* JGS */\nSIDLOOPE DS    0H                                             /* JGS */\n         DROP  R5                                             /* JGS */\n         EJECT ,                                                  2.2.0\n***********************************************************************\n*                                                                     *\n*   COMPUTE SIZE OF TRACK GROUP MAPS ON CKPT                      2.2.0\n*                                                                     *\n***********************************************************************\n         L     R5,$NUMTG      NUMBER OF TRACK GROUPS TOTAL        2.2.0\n         SRL   R5,3           DIVIDE BY 8                         UF020\n         LR    R1,R5          SAVE LENGTH OF TRACK GROUP MAP\n         AIF   (NOT &LOCK).NOTLOCK                                   CL\n         MH    R1,=H'3'            NUMBER OF BYTES * 3               CL\n         AGO   .LOCK                                                 CL\n.NOTLOCK SLL   R1,1                NUMBER OF BYTES * 2            UF046\n.LOCK    LA    R1,BFPLEN(,R1)      ADD BUFFER PREFIX                 CL\n         LA    R1,4095(,R1)        PREPARE TO ROUND\n         SRL   R1,12               DIVIDE BY 4K                   UF046\n         STH   R1,QCTGML           NUMBER OF BLOCKS FOR TG MAPS   UF046\n***********************************************************************\n*                                                                     *\n*   COMPUTE HASPACE BUFFER SIZE                                       *\n*                                                                     *\n***********************************************************************\n         LH    R5,$BUFSIZE    BLKSIZE FOR HASPACE\n         STH   R5,HASPACE+62  STORE IN DCB\n         STH   R5,HDECB2+6    STORE IN DECB\n         LA    R5,63(R5)      PREPARE TO ROUND\n         N     R5,=F'-64'     ROUND TO 64 BYTE BOUNDARY\n***********************************************************************\n*                                                                     *\n*   OBTAIN BUFFERS FOR HASPCKPT AND HASPACE                           *\n*                                                                     *\n***********************************************************************\n         LR    R14,R5         HASPACE BUFFER SIZE\n         MH    R14,=H'3'      3 BUFFERS\n         LH    R1,$CKRECN     NUMBER OF 4K RECORDS                2.2.0\n         LA    R1,1(,R1)           PLUS MASTER RECORD             2.2.0\n         AH    R1,$CLRECN          + NUMBER OF CHANGE LOG RECORDS 2.2.0\n         ST    R1,QCJOTL      STORE RECORD COUNT\n         SLL   R1,12          MULTIPLY BY 4096\n         LA    R0,256(R1,R14) ADD CKPT BUFFERS, HASPACE BUFFERS, SLOP\n         ST    R0,QGETL2      SAVE LENGTH OF GETMAIN AREA\n         GETMAIN R,LV=(0)     OBTAIN BUFFERS\n         ST    R1,QGETA2      SAVE ADDRESS OF GETMAIN AREA\n         ST    R1,QCJQTL      BUFFER FOR FIRST CKPT REC\n         SPACE 1                                                  2.2.0\n         L     R15,=V(CKPT)        READ CKPT DATA                 2.2.0\n         BALR  R14,R15                                            2.2.0\n         SPACE 1                                                  2.2.0\n         L     R1,QCJQTL           RESTORE BUFFER ADDRESS         2.2.0\n         EJECT ,                                                  2.2.0\n         LR    R14,R1              COMPUTE ADDR OF JQE EXTENSION\n         LA    R14,$SAVELEN(,R14)  ACCOUNT FOR CHECKPOINTED HCT\n         LA    R4,QSELEN      QSE LENGTH                          2.2.0\n         MH    R4,$QSEMAX     MULTIPLY LENGTH TIMES NUM OF QSES   2.2.0\n         ALR   R14,R4              ACCOUNT FOR QSE'S\n         ST    R14,QCJQEXA         SAVE ADDR OF JQE EXTENSION\n         AH    R1,=H'4096'    INCREMENT\n*                                                                 2.2.0\n         LH    R15,$CLRECN         NUMBER OF CHANGE LOG BLKS      2.2.0\n         SLL   R15,12               TIMES 4K                      2.2.0\n         AR    R1,R15              BUMP PAST CHANGE LOG           2.2.0\n*                                                                 2.2.0\n         USING HDP,R1              CONTROL BLOCK POOL HEADER      2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**TGM  POOL**',HDPID                            2.2.0\n         BE    OKTGM                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE TGM POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKTGM    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCTGMA           BUFFER FOR TGM BLOCKS          UF046\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**JIX  POOL**',HDPID                            2.2.0\n         BE    OKJIX                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE JIX POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKJIX    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCJIXA      BUFFER FOR JIX BLOCKS               UF020\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**JQE  POOL**',HDPID                            2.2.0\n         BE    OKJQE                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE JQE POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKJQE    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCJQTA      BUFFER FOR JQE BLOCKS\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**PST  POOL**',HDPID                            2.2.0\n         BE    OKPST                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE PST POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKPST    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCPSTA           BUFFER OF PST BLOCKS\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**JOE  POOL**',HDPID                            2.2.0\n         BE    OKJOE                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE JOE POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKJOE    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCJOTA      BUFFER FOR JOE BLOCKS\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**RSO  POOL**',HDPID                            2.2.0\n         BE    OKRSO                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE RSO POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKRSO    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**LCK  POOL**',HDPID                            2.2.0\n         BE    OKLCK                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE LCK POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKLCK    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         CLC   =C'**DAS  POOL**',HDPID                            2.2.0\n         BE    OKDAS                                              2.2.0\n         TPUT  =C'UNABLE TO LOCATE DAS POOL',25,EDIT,MF=(E,QTPUT) 2.2.0\n         B     ABORT98             AND ABEND                      2.2.0\nOKDAS    DS    0H                                                 2.2.0\n         LA    R0,HDPLNGTH(,R1) ADD BUFFER PREFIX                 2.2.0\n         ST    R0,QCTDASA          BUFFER FOR DAS BLOCKS          2.2.0\n         ICM   R15,B'1111',HDPSIZE SIZE OF AREA                   2.2.0\n         AR    R1,R15              BUMP                           2.2.0\n         SPACE 1                                                  2.2.0\n         DROP  R1                                                 2.2.0\n         SPACE 1                                                  2.2.0\n         ST    R1,QCJCTA      BUFFER FOR JCT\n         AR    R1,R5          INCREMENT\n         ST    R1,QCIOTA      BUFFER FOR IOT\n         AR    R1,R5          INCREMENT\n         ST    R1,QCBLKA      BUFFER FOR DATA BLOCKS\n         SPACE 1                                                  ONL16\n         L     R1,QCJCTA           ADDR OF JCT BUFFER             ONL16\n         SL    R1,=A(JCTSTART-JCT)  ADJUST FOR BUFFER PREFIX      ONL16\n         ST    R1,QCJCTA           SAVE ADJUSTED JCT POINTER      ONL16\n         SPACE 1                                                  ONL16\n         LA    R1,$JQHEADS+$JQHEADL-$SAVEBEG OFFSET 1ST JQE HEAD  UF020\n         A     R1,QCJQTL      BASE OF FIRST CKPT REC\n         ST    R1,QCJQHEAD    ADDR OF FIRST JQE HEADER\n***********************************************************************\n*                                                                     *\n*   ALLOCATE AND OPEN HASPACE                                         *\n*                                                                     *\n***********************************************************************\n*                                                                 2.2.0\n         L     R3,QCTDASA          ADDR OF DAS AREA               2.2.0\n         USING DAS,R3              SET ADDRESSING                 UF046\n         MVC   DA08DDN,=CL8'HASPACQ' DDNAME FOR ALLOCATE          WGH\n         LA    R1,DSNSPACE         ADDR OF HASPACE DSN SUFFIX     CL006\n         BAL   R14,BUILDSN         GO BUILD DATA SET NAME         CL006\n         LA    R4,9           MAX POSSIBLE SPOOLS FOR QUEUE       UF020\n         LA    R7,QCDCBL      LENGTH OF HASPACE DCB\n         MR    R6,R4          COMPUTE LENGTH OF DCB POOL\n         GETMAIN R,LV=(R7)    OBTAIN DCB POOL\n         ST    R7,QGETL3      SAVE LENGTH OF GETMAIN\n         ST    R1,QGETA3      SAVE ADDRESS OF GETMAIN\n         LR    R7,R1          SAVE ADDR OF DCB POOL\n         LA    R8,QCSPOOLS-4  ADDR OF OPEN LIST\n         SR    R6,R6          ACTUAL NUMBER OF SPOOL VOLUMES\n         MVC   DA08SER(5),$SPOOL PATTERN FOR VOLSER\nSPOOL1   LA    R5,DEVTAB      ADDR OF DEVICE CHARACTERISTICS TBL\n         TM    DASFLAG,DASEXSTS    DOES VOLUME EXIST?             UF046\n         BZ    SPOOL4              NO, SKIP THIS ONE              UF046\n         TM    DASFLAG2,DASINACT   IS IT INACTIVE?                UF046\n         BO    SPOOL4              YES, SKIP IT                   UF046\n         LH    R15,DASNOTGE        NUMBER OF TRACKS IN EXTENT     CL001\n         A     R15,QCTNUMTG        ACCUMULATE ACTIVE              CL001\n         ST    R15,QCTNUMTG         TRACK GROUP COUNT             CL001\nSPOOL2   CLI   0(R5),X'FF'    IS THIS THE END OF TABLE?\n         BE    ABORT          YES. UNSUPPORTED DEVICE TYPE.\n         CLC   0(1,R5),DASTYPE     IS IT A MATCH?                 UF046\n         BE    SPOOL3         YES. GO WITH IT.\n         LA    R5,12(R5)      NEXT TABLE ENTRY\n         B     SPOOL2         TRY NEXT ENTRY\nSPOOL3   MVC   QCTRKCYL-QCSPOOLS+4+2(2,R8),2(R5) SET TRK/CYL         CL\n         MVC   DA08UNIT,4(R5) MOVE UNIT NAME\n         MVC   DA08SER+5(1),DASVOLID+5 LAST CHAR OF VOLSER        UF046\n         LA    R6,1(R6)       INCREASE COUNT BY ONE\n         STC   R6,DA08DDN+7   UPDATE DDNAME\n         OI    DA08DDN+7,X'F0' MAKE IT A VALID NUMBER\n         L     R15,=V(ALLOCATE) ADDR OF ALLOCATE MODULE\n         BALR  R14,R15        GO TO IT\n         MVC   0(QCDCBL,R7),HASPACE MOVE PATTERN DCB TO POOL\n         MVC   47(1,R7),DA08DDN+7 UPDATE THE DDNAME\n         ST    R7,4(R8)       STORE DCB ADDR IN OPEN LIST\n         LA    R7,QCDCBL(R7)  INCREMENT TO NEXT DCB\nSPOOL4   LA    R8,4(R8)       NEXT ENTRY IN OPEN LIST\n         LA    R3,DASSIZ(,R3)      NEXT VOLUME                    UF046\n         BCT   R4,SPOOL1      BRANCH IF MORE VOLUMES.\n         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006\n         FREEMAIN R,LV=2+44,A=(1)  FREE WORK AREA                 CL006\n         SPACE 2                                                     CL\n***********************************************************************\n*                                                                     *\n*        OPEN ONE DCB FOR EACH ACTIVE EXTENT.                         *\n*                                                                     *\n***********************************************************************\n         SPACE 2\n         LA    R4,9                MAX POSSIBLE SPOOLS FOR QUEUEJKAUG84\n         LA    R8,QCSPOOLS         ADDR OF FIRST DCB POINTER         CL\n         SPACE 1                                                     CL\nSPOOL5   OC    0(4,R8),0(R8)       SKIP IF THIS EXTENT               CL\n         BZ    SPOOL6               IS NOT ACTIVE                    CL\n         OI    0(R8),X'80'         SET END OF LIST INDICATOR         CL\n         OPEN  MF=(E,(R8))         OPEN ONE EXTENT                   CL\n         NI    0(R8),X'7F'         TURN OFF BIT JUST FOR NEATNESSKAUG84\nSPOOL6   LA    R8,4(,R8)           BUMP TO NEXT EXTENT               CL\n         BCT   R4,SPOOL5           CONTINUE IF ANY MORE              CL\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM POST-OPEN CHECKPOINT/SPOOL AUTHORIZATION CHECK        ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAAFTOPN          POST-OPEN CKPT/SPOOL AUTH CHECKONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   GO HOME                                                           *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\n         QSTOP\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   ABORT QUEUE COMMAND PROCESSING                                ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQAABORT  DS    0H                  ABORT QUEUE COMMAND PROCESSING ONL02\n         WTO   'QUEUE COMMAND ABORTED - INVALID ENVIRONMENT',     ONL02X\n               ROUTCDE=(11)        TELL USER WHY                  ONL02\n         SPACE 1                                                  ONL02\n         ABEND 913                 ABEND U913                     ONL02\n         EJECT                                                    CL006\n***********************************************************************\n*                                                                     *\n*        CONSTRUCT DATA SET NAME FOR JES2 DISK DATA SETS.             *\n*                                                                     *\n*        R1 = ADDR OF DSN PREFIX                                      *\n*        R14= LINK REGISTER                                           *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nBUILDSN  L     R15,DA08PDSN        ADDR OF WORK AREA              CL006\n         MVI   2(R15),C' '         BLANK DATA SET                 CL006\n         MVC   3(43,R15),2(R15)     NAME WORK AREA                CL006\n         MVC   2(8,R15),QPREFIX    SET PREFIX FROM COMMON         CL006\n         LA    R15,9(R15)          ADDR OF LAST POSSIBLE CHAR     CL006\n         CLI   0(R15),C' '         SKIP IF NON-BLANK              CL006\n         BNE   *+8                  CHARACTER FOUND               CL006\n         BCT   R15,*-8               ELSE KEEP LOOKING            CL006\n         MVI   1(R15),C'.'         SET PERIOD                     CL006\n         MVC   2(8,R15),0(R1)      COPY DSN SUFFIX                CL006\n         LA    R15,2+7(R15)        ADDR OF LAST POSSIBLE CHAR     CL006\n         CLI   0(R15),C' '         SKIP IF NON-BLANK              CL006\n         BNE   *+8                  CHARACTER FOUND               CL006\n         BCT   R15,*-8               ELSE KEEP LOOKING            CL006\n         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006\n         LA    R1,1(R1)            ADDR OF FIRST BYTE OF NAME-1   CL006\n         SR    R15,R1              LENGTH OF ENTIRE NAME          CL006\n         L     R1,DA08PDSN         ADDR OF WORK AREA              CL006\n         STH   R15,0(R1)           SET LENGTH FOR DAIR            CL006\n         BR    R14                  AND RETURN                    CL006\n***********************************************************************\n*                                                                     *\n*   UNSUPPORTED DEVICE TYPE. ABORT.                                   *\n*                                                                     *\n***********************************************************************\nABORT    TPUT  MESSAGE,L'MESSAGE,EDIT,MF=(E,QTPUT)   TELL THE USER\nABORT98  ABEND 98,DUMP        QUIT.                               2.2.0\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nDEVTAB   DC    X'0900',H'19',CL8'3330' DEVTYPE,TRK/CYL,DEVNAME\n         DC    X'0B00',H'30',CL8'3350'\n         DC    X'0D00',H'19',CL8'3330-1'\n         DC    X'0E00',H'15',CL8'3380'                            UF037\n         DC    X'0F00',H'15',CL8'3390'                            WGH42\n         DC    X'FFFF'\n         DS    0F\nTIR3     DC    X'00000300'    POINT PAST SYNC RECORDS\nDSNCKPT  DC    CL8'HASPCKPT'                                      CL006\nDSNSPACE DC    CL8'HASPACE'                                       CL006\nMESSAGE  DC    C'UNSUPPORTED DEVICE TYPE SPECIFIED FOR SPOOL'\nMESSAGE2 DC    C'INVALID PARAMETER SPECIFIED - '                  WGH\nMESSAGE3 DC    C'INVALID HCT SAVEAREA ON CKPT'                    UF046\n         EJECT                                                    CL006\n***********************************************************************\n*                                                                     *\n*        CONSTRUCT PARSE PARAMETER LISTS                              *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nPCLSTART IKJPARM DSECT=IKJPARMD                                   CL006\n         SPACE 2                                                  CL006\nPSTRING  IKJIDENT 'SUB-COMMAND',ASTERISK,FIRST=ALPHA,OTHER=ANY,   CL006*\n               CHAR                                               CL006\n         SPACE 1                                                  CL006\nPPREFIX  IKJKEYWD ,                                               CL006\n         SPACE 1                                                  CL006\n         IKJNAME 'PREFIX',SUBFLD=SPREFIX                          CL006\n         SPACE 1                                                  CL006\nPUNIT    IKJKEYWD ,                                               CL006\n         SPACE 1                                                  CL006\n         IKJNAME 'UNIT',SUBFLD=SUNIT                              CL006\n         SPACE 1                                                  CL006\nPVOL     IKJKEYWD ,                                               CL006\n         SPACE 1                                                  CL006\n         IKJNAME 'VOL',SUBFLD=SVOL                                CL006\n         SPACE 5                                                  CL006\nSPREFIX  IKJSUBF ,                                                CL006\nXPREFIX  IKJIDENT 'PREFIX',LIST,MAXLNTH=8,FIRST=ALPHA,            CL006*\n               OTHER=ALPHANUM                                     CL006\n         SPACE 1                                                  CL006\nSUNIT    IKJSUBF ,                                                CL006\n         SPACE 1                                                  CL006\nXUNIT    IKJIDENT 'UNIT',LIST,MAXLNTH=8,OTHER=ALPHANUM,           CL006*\n               FIRST=ALPHANUM                                     CL006\n         SPACE 1                                                  CL006\nSVOL     IKJSUBF ,                                                CL006\n         SPACE 1                                                  CL006\nXVOL     IKJIDENT 'VOLUME',LIST,MAXLNTH=6,FIRST=ALPHANUM,         CL006*\n               OTHER=ALPHANUM                                     CL006\n         SPACE 2                                                  CL006\n         IKJENDP ,                                                CL006\n         EJECT                                                    CL006\nWORK     DSECT ,                                                  UF024\n         DS    18F                 SAVEAREA PORTION               UF024\nWORKAREA DS    D                   START OF SCRATCH WORK AREA     UF024\n         SPACE 1                                                  UF024\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nINIT     CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         COPY  $HASPGBL\n&MACSPLV SETC  '2'\n&SYSSPLV SETC  '2'\n&VERSION SETC  'SP 4.2.0'\n&FMID    SETC  'HJE4420'\n         $DAS  ,                                                  UF046\n         $MIT  ,                                                  UF046\n         $PCE  ,              NEEDED FOR NJE $HCT                 UF001\n         $JOE\n         $JOT\nNJOTPRFX EQU   (JOTJOES-JOT)/JOESIZE\n         $LCK  ,                                                  UF020\n         $BUFFER                                                  UF020\n         $LMT   ,                                                 WGH42\n         $XECB  ,                                                 WGH42\nPDS2BLEN EQU    1                                                 WGH42\n         IFGRPL\n         $JCT  ,                                                  UF020\n         $CAT  ,                                                  UF020\n         $TAB\n         $QSE\n         $PDDB                                                    UF021\n         $IOT\n         $JQE\n         $HCT\n         $HDP  ,                                                  2.2.0\n         $HASPEQU\n         IKJCPPL ,                                                ONL02\n         IKJPSCB ,                                                ONL02\n         IKJUPT  ,                                                WGH\n*        IHADCB DSORG=PS                                          UF039\n         DCBD   DSORG=PS                                          UF039\n         CVT    DSECT=YES                                         CL006\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "INITS": {"ttr": 5638, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "INITS    TITLE 'QUEUE COMMAND - LIST INITIATORS COMMAND'          ONL01\nINITS    QSTART ,                  START INITS CSECT ASSEMBLY     ONL01\n         USING QCKPT,R9       BASE REG FOR CHECKPOINT AREA\n         L     R9,QVCKPT      LOAD BASE REG\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA\n******************************************************************UF006\n*                                                                 UF006\n*   CALL - READ JES2 CHECKPOINT ROUTINE                           UF006\n*                                                                 UF006\n******************************************************************UF006\nCALLCKPT L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006\n         BALR  R14,R15        GO TO IT                            UF006\n         L     R8,16          POINT TO CVT\n         USING CVTDSECT,R8\n***********************************************************************\n*                                                                     *\n*        FIND THE ACTIVE MAIN SUBSYSTEM SSVT                          *\n*        AND CHECK TO SEE IF XA                                       *\n*                                                                     *\n***********************************************************************\n         L     R8,CVTJESCT    POINT TO JESCT\n         DROP  R8\n         USING JESCT,R8\n         L     R8,JESSSCT     POINT TO SSCT\n         DROP  R8\n         USING SSCT,R8\n         L     R8,SSCTSUS2    POINT TO HCCT                   WGH42\n         DROP  R8\n         USING HCCT,R8                                        WGH42\n***********************************************************************\n*                                                                     *\n*        FIND THE ACTIVE MAIN SUBSYSTEM'S PITS                        *\n*                                                                     *\n***********************************************************************\n         L     R7,CCTPIT      POINT TO PITTABLE               WGH42\n         LTR   R6,R7          TEST IF ANY PITS\n         BZ    NOPITS         NO, IGNORE COMMAND\n         TM    QFLAG1,QFLG1XA TEST FOR XA PROCESSOR\n         BNO   NOTXA          BR IF NOT\n         SPACE 1\n        $AMODE 31,PUSHR=4\nNOTXA    EQU   *\n         LA    R6,36          NUMBER OF CLASSES ALWAYS 36\n         USING PIT,R7\n         MVC   QDHLINE,INITHD MOVE IN THE HEADING\n***********************************************************************\n*                                                                     *\n*        BUILD THE MESSAGE(S) DESCRIBING THE PITS                     *\n*                                                                     *\n***********************************************************************\nBLDMSG   MVC   QDMSG,QBLANK   BLANK THE AREA\n         MVC   INIT#(2),PITPATID MOVE IN PIT ID\n         LR    R1,R6          COPY THE LENGTH\n         BCTR  R1,0           SUBTRACT ONE\n         EX    R1,MVCLAS      MOVE THE CLASSES\n         TM    PITSTAT,PITHOLDA+PITHOLD1 TEST FOR DRAINED\n         BNZ   HOLDPIT        YES\n         TM    PITSTAT,PITHALTA+PITHALT1 TEST FOR HALTED\n         BNZ   HALTPIT        YES\n         MVC   STATUS,=CL8'ACTIVE'\n         TM    PITSTAT,PITBUSY TEST FOR BUSY\n         BO    ACTPIT         YES\n         MVC   STATUS,=CL8'INACTIVE'\n         B     NEXTPIT        END OF MESSAGE LINE.\nMVCLAS   MVC   CLASSES(0),PITCLASS SET THE CLASSES\nHOLDPIT  MVC   STATUS,=CL8'DRAINED' SET STATUS\n         TM    PITSTAT,PITBUSY TEST FOR BUSY\n         BZ    NEXTPIT        NO\n         MVC   STATUS+5(3),=C'ING' SET STATUS\n         B     ACTPIT         YES\nHALTPIT  MVC   STATUS,=CL8'HALTED' SET STATUS\n         TM    PITSTAT,PITBUSY TEST FOR BUSY\n         BZ    NEXTPIT        NO\n         MVC   STATUS+4(3),=C'ING' SET STATUS\nACTPIT   L     R5,PITSJB      POINT TO THE SJB\n         USING SJB,R5\n         L     R1,SJBJQOFF    POINT TO JOB QUEUE OFFSET\n         A     R1,QCJQTA      POINT TO THE JQE\n         USING JQE,R1\n         CLC   JQEJNAME,SJBJOBNM TEST FOR RIGHT JOB\n         BNE   NEXTPIT        RIGHT JOB, GOOD\n         MVC   JOBNAME,SJBJOBNM MOVE IN JOBNAME\n         LH    R0,JQEJOBNO    LOAD JOB NUMBER\n         CVD   R0,CONVERT     GET THE DECIMAL VALUE\n         MVC   JOBNUM,ED5     GET THE CHARACTER VALUE\n         ED    JOBNUM,CONVERT+5 GET THE CHARACTER VALUE\n***********************************************************************\n*                                                                     *\n*        SEND THE MESSAGE DESCRIBING THE PIT                          *\n*                                                                     *\n***********************************************************************\nNEXTPIT  L     R7,PITNEXT     POINT TO NEXT PIT\n         DROP  R1,R5\n         MVC   QDMLNG,=H'80'  SET THE LENGTH\n         LA    R0,QDMSG       GET THE ADDRESS\n         ST    R0,QDMSGA      SET THE ADDRESS\n         TM    QFLAG1,QFLG1XA TEST IF XA MODE\n         BNO   NEXTPIT1       BR IF NOT\n        $AMODE POPR=4\nNEXTPIT1 L     R15,=V(DISPLAY) POINT TO THE ROUTINE\n         BALR  R14,R15        CALL THE ROUTINE\n         LTR   R7,R7          TEST FOR NEXT PIT\n         BZ    END            NO, LETS STOP\n         TM    QFLAG1,QFLG1XA TEST IF XA MODE\n         BNO   BLDMSG         BR IF NOT\n        $AMODE 31,PUSHR=4\n         B     BLDMSG\n***********************************************************************\n*                                                                     *\n*        END IT ALL                                                   *\n*                                                                     *\n***********************************************************************\nEND      QSTOP\nNOPITS   QTILT '***** NO PITS  TO DISPLAY *****'\nINITHD   DC    CL80'INIT    STATUS   JOBNAME    NUMBER    CLASSES'\nED5      DC    X'402020202120'\n         LTORG\n***********************************************************************\n*                                                                     *\n*        DESCRIBE ALL THE DSECTS NEEDED BY THIS MODULE                *\n*                                                                     *\n***********************************************************************\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nINITS    CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         CVT   PREFIX=NO,DSECT=YES                                UF046\nCVTDSECT EQU   CVT                                                UF046\n         IEFJESCT TYPE=DSECT                                      UF046\n         IEFJSCVT ,                                               UF046\nINITS    CSECT ,                                                  UF046\n         $PIT\n         IEZDEB ,                                                 UF046\nINITS    CSECT ,                                                  UF046\n         $SJB\n         $JQE\n         $TQE\n         $XECB ,                                                  UF046\n         $SCAT ,                                                  UF046\n         $HCCT ,                                                  WGH42\n         $HFAME ,\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\n         DS    C\nINIT#    DS    CL2\n         DS    CL4\nSTATUS   DS    CL8\n         DS    CL2\nJOBNAME  DS    CL8\n         DS    CL3\nJOBNUM   DS    CL6\n         DS    CL4\nCLASSES  DS    C\nWORK     DSECT\n         DS    CL72\nCONVERT  DS    D\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JCL": {"ttr": 5642, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JCL      TITLE 'QUEUE COMMAND - LIST THE JCL FOR A JOB'           ONL01\nJCL      QSTART ,                  START JCL CSECT ASSEMBLY       ONL01\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAJCL             PERFORM JOB AUTHORIZATION      ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   CALL LISTDS TO LIST THE DATASET                                   *\n*                                                                     *\n***********************************************************************\n         MVC   QPOFFSET,=H'10' PRINT OFFSET FOR EACH RECORD\n         MVC   QPDSID,=H'3'   DSID OF DATASET TO BE PRINTED\n         L     R15,=V(LISTDS) ADDR OF LISTDS MODULE\n         BALR  R14,R15        GO TO IT\n         QSTOP\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JLOG": {"ttr": 5644, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JLOG     TITLE 'QUEUE COMMAND - LIST JOBLOG MESSAGES FOR A JOB'   ONL01\nJLOG     QSTART ,                  START JLOG CSECT ASSEMBLY      ONL01\n         GBLB  &QJTIP         JTIP OPTION                         ONL05\n         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAJLOG            PERFORM JOB AUTHORIZATION      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL05\n*                                                                 ONL05\n*   FIND JOB LOG PDDB                                             ONL05\n*                                                                 ONL05\n******************************************************************ONL05\n         SPACE 1                                                  ONL05\n         USING PDB,R2              BASE REG FOR PDDB\n         USING IOT,R3              BASE REG FOR IOT               UF046\n         L     R3,QCIOTA           LOAD BASE REG\n         SH    R3,=AL2(IOTSTART-IOT) ADJUST FOR HEADER            UF046\n         SPACE 1                                                  ONL03\n         CLC   IOTID,=CL4'IOT'     WAS AN IOT READ FROM SPOOL?    ONL03\n         BNE   BADIOT              ERROR IF NO                    ONL03\n         CLC   QPJOBID,IOTJBKEY    IS THE IOT'S JOB KEY VALID?    ONL03\n         BNE   BADIOT              ERROR IF NO                    ONL03\n         SPACE 1                                                  ONL03\n         LR    R4,R3               COPY IOT ADDR                  ONL03\n         A     R4,IOTPDDBP         OFFSET BEYOND LAST PDDB\n         LR    R2,R3               BASE OF IOT\n         A     R2,IOTPDDB          OFFSET TO FIRST PDDB IN IOT    UF046\nFINDDS   CLC   PDBDSKEY,=F'2'      IS THIS THE JOB LOG            WGH42\n         BE    FOUNDDS             YES. CONTINUE.\n         LA    R2,PDBLENG(R2)      NO. LOOK AT NEXT PDDB\n         CR    R2,R4               HAVE WE GONE PAST THE LAST PDDB\n         BL    FINDDS              NO. TRY AGAIN\n         B     NOJLPDDB            ERROR IF JOB LOG PDDB NOT FOUNDONL05\n         SPACE 1                                                  ONL05\nFOUNDDS  DS    0H                  JLOG PDDB HAS BEEN FOUND       ONL05\n         SPACE 2                                                  ONL05\n******************************************************************ONL05\n*                                                                 ONL05\n*  THE JOBLOG IS CONSIDERED AVAILABLE IF:                         ONL05\n*                                                                 ONL05\n*     (1) IF THE JOBLOG HAS MORE THAN ONE LINE OF OUTPUT.         ONL05\n*     (2) THE JOB IS ON THE OUTPUT OR HARDCOPY QUEUES.            ONL05\n*     (3) THE JOB IS NOT ON THE INPUT OR CONVERSION QUEUES.       ONL05\n*     (4) THE CONVERTER RETURN CODE IS NON-ZERO.                  ONL05\n*     (5) IF THE &QJTIP OPTION IS OFF AND THE JOB'S EXECUTION     ONL05\n*         START TIME (JCTXEQON) IS NON-ZERO.                      ONL05\n*                                                                 ONL05\n*  OTHERWISE, THE JOBLOG IS CONSIDERED NOT AVAILABLE.             ONL05\n*                                                                 ONL05\n******************************************************************ONL05\n         SPACE 1                                                  ONL05\n         CLC   PDBRECCT,=F'2'      ARE WE SURE JOB LOG HAS INFO ? ONL05\n         BH    LOGOK               SKIP IF YES, LIST JOBLOG       ONL05\n         SPACE 1                                                  ONL05\n         L     R4,QCJQEA           ADDR OF JQE                    ONL05\n         USING JQE,R4              NOTE JQE ADDRESSABILITY        ONL05\n         SPACE 1                                                  ONL05\n         CLI   JQETYPE,$OUTPUT     IT'S OK TO                     ONL05\n         BE    LOGOK                LIST THE JOBLOG               ONL05\n         CLI   JQETYPE,$HARDCPY      IF THE JOB IS ON THE         ONL05\n         BE    LOGOK                  OUTPUT OR HARDCOPY QUEUES   ONL05\n         SPACE 1                                                  ONL05\n         CLI   JQETYPE,$INPUT      DON'T LIST THE                 ONL05\n         BE    NOLOG                JOBLOG IF THE JOB             ONL05\n         CLI   JQETYPE,$XEQ          IS ON THE INPUT              ONL05\n         BE    NOLOG                  OR CONVERSION QUEUES        ONL05\n         SPACE 1                                                  ONL05\n         L     R3,QCJCTA           ADDR OF JCT                    ONL05\n         USING JCT,R3              NOTE JCT ADDRESSABILITY        ONL16\n         SPACE 1                                                  ONL05\n         CLC   JCTCNVRC,=F'0'      NON-ZERO CONVERTER RETURN CODE?ONL05\n         BNE   LOGOK               SKIP IF YES, LIST JOBLOG       ONL05\n         SPACE 1                                                  ONL05\n         AIF   (&QJTIP).ONL05A                                    ONL05\n         CLC   JCTXEQON,=F'0'      JOB EXECUTING OR EXECUTED ?    ONL05\n         BNZ   LOGOK               SKIP IF YES, LIST JOBLOG       ONL05\n.ONL05A  ANOP  ,                                                  ONL05\n         SPACE 1                                                  ONL05\n         B     NOLOG               OTHERWISE, DON'T LIST JOBLOG   ONL05\n         SPACE 1                                                  ONL05\n         DROP  R3                  KILL JCT ADDRESSABILITY        ONL05\n         DROP  R4                  KILL JQE ADDRESSABILITY        ONL05\n         SPACE 1                                                  ONL05\nLOGOK    DS    0H                  OK TO LIST THE JOBLOG          ONL05\n         SPACE 2                                                  ONL05\n***********************************************************************\n*                                                                     *\n*   CALL LISTDS TO LIST THE DATASET                                   *\n*                                                                     *\n***********************************************************************\n         MVC   QPOFFSET,=H'0' PRINT OFFSET FOR EACH RECORD\n         MVC   QPDSID,=H'2'   DSID OF DATASET TO BE PRINTED\n         L     R15,=V(LISTDS) ADDR OF LISTDS MODULE\n         BALR  R14,R15        GO TO IT\n         QSTOP\n         SPACE 2                                                  ONL03\nBADIOT   QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       ONL03\nNOLOG    QTILT '*** JOBLOG IS NOT AVAILABLE ***'                  ONL05\nNOJLPDDB QTILT '*** JOBLOG PDDB NOT FOUND ***'                    ONL05\n         SPACE 1                                                  ONL05\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nJLOG     CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $BUFFER                                                  UF020\n         IFGRPL\n         $JQE\n         $TAB\n         $JCT\n         $PDDB\n         $IOT\n         $HASPEQU\n         QCOMMON ,                                                ONL11\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "JMSG": {"ttr": 5647, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "JMSG     TITLE 'QUEUE COMMAND - LIST SYSTEM MESSAGES FOR A JOB'   ONL01\nJMSG     QSTART ,                  START JMSG CSECT ASSEMBLY      ONL01\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAJMSG            PERFORM JOB AUTHORIZATION      ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   CALL LISTDS TO LIST THE DATASET                                   *\n*                                                                     *\n***********************************************************************\n         MVC   QPOFFSET,=H'0' PRINT OFFSET FOR EACH RECORD\n         MVC   QPDSID,=H'4'   DSID OF DATASET TO BE PRINTED\n         L     R15,=V(LISTDS) ADDR OF LISTDS MODULE\n         BALR  R14,R15        GO TO IT\n         QSTOP\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LIST": {"ttr": 5890, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "LIST     TITLE 'QUEUE COMMAND - PRINT A DATASET FROM SPOOL BY ID' ONL01\nLIST     QSTART ,                  START LIST CSECT ASSEMBLY      ONL01\n         GBLB  &QJTIP                                             ONL05\n         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING WORK,R13       BASE REG FOR TEMP WORK\n***********************************************************************\n*                                                                     *\n*   IF THIRD PARM IS OMITTED ASSUME CURRENT JOB                   WGH *\n*                                                                     *\n***********************************************************************\n         LH    R2,QLNG2       LENGTH OF DSID FIELD                WGH\n         SH    R2,=H'1'       IS LENGTH ZERO                      WGH\n         BNM   DSIDOK         NO.. CONTINUE                       WGH\n         MVC   QPARM2,QPARM1  YES.. ASSUME CURRENT JOB            WGH\n         MVC   QLNG2,QLNG1    MOVE DSID TO THIRD FIELD            WGH\n         MVI   QPARM1,C'='    SET CURRENT JOB                     WGH\n         LA    R2,1           SET LENGTH TO 1                     WGH\n         STH   R2,QLNG1       SET LENGTH                          WGH\nDSIDOK   EQU   *                                                  WGH\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n***********************************************************************\n*                                                                     *\n*   CHECK AND CONVERT THE DATASET ID NUMBER                           *\n*                                                                     *\n***********************************************************************\n         LH    R2,QLNG2       LENGTH OF DATASET ID FIELD\n         SH    R2,=H'1'       IS THE DATASET ID FIELD ZERO LENGTH?\n*  WGH   BM    TILT           YES. QUIT.\n         BNM   LNGOK                                              WGH\n         LA    R2,1           SET LENGTH TO 1                     WGH\n         STH   R2,QLNG2       STORE IT                            WGH\n         BCTR  R2,0           REDUCE BY 1                         WGH\n         MVI   QPARM2,C'+'    SET RELATIVE DSIS                   WGH\nLNGOK    EQU   *                                                  WGH\n         LH    R4,QOLDDSID    GET PREVIOUS DSID VALUE             ONL04\n         LA    R3,DSIDPLUS    POINT TO ADD INSTRUCTION            UF040\n         CLI   QPARM2,C'+'    RELATIVE DSID NUMBER?               UF040\n         BE    DSIDREL        YES, GO PROCESS IT                  UF040\n         LA    R3,DSIDSUB     POINT TO SUBTRACT INSTRUCTION       UF040\n         CLI   QPARM2,C'-'    RELATIVE DSID NUMBER?               UF020\n         BE    DSIDREL        YES, GO PROCESS IT                  UF040\n         LA    R3,DSIDABS     POINT TO NOP INSTRUCTION            UF040\n         B     DSIDTEST       NO, CONTINUE                        UF040\nDSIDREL  CLI   QPARM1,C'*'    WANT THE CURRENT JOB?               UF040\n         BNE   TILTREL        NO, RELATIVE REQUEST INVALID        UF040\n         MVI   QPARM2,C'0'    REPLACE WITH NUMERIC VALUE          UF040\n         LTR   R2,R2          WAS FIELD ONLY THE +/-?             UF040\n         BP    DSIDTEST       NO, CONTINUE AS BEFORE              UF040\n         LA    R2,1           YES, SET VALUE OF 1                 UF040\n         B     DSIDCHK        AND SKIP NUMERIC CHECKS             UF040\nDSIDTEST DS    0H                                                 UF040\n         MVC   QFZONES,QFZONE INITIALIZE NUMERIC TEST\n         EX    R2,MVZ         MOVE THE ZONES FOR VALIDITY CHECK\n         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?\n         BNE   TILT           NO. QUIT.\n         EX    R2,PACK        PACK THE FIELD\n         CVB   R2,CONVERT     CONVERT TO BINARY\n         SPACE 1                                                  UF005\nDSIDCHK  DS    0H                                                 UF040\n         EX    0,0(R3)        ADJUST VALUE IN R4 BY OFFSET        UF040\n         LR    R2,R4          PUT BACK IN R2                      UF040\n*        LTR   R2,R2          MAKE SURE IS POSITIVE                 SBG\n*        BNP   TILT           ERROR IF NOT                          SBG\n         STH   R2,QPDSID      STORE DATASET ID\n         STH   R2,QOLDDSID    SET PREVIOUS DSID TO CURRENT        ONL04\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB AND DSID                  ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QALIST            PERFORM JOB/DSID AUTHORIZATION ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   CHECK AND CONVERT THE PRINT OFFSET                                *\n*                                                                     *\n***********************************************************************\n         MVC   QPOFFSET,=H'0' DEFAULT TO ZERO\n         LH    R2,QLNG3       LENGTH OF OFFSET FIELD\n         SH    R2,=H'1'       IS THE OFFSET FIELD ZERO LENGTH?\n         BM    CALLLIST       YES. USE ZERO OFFSET.\n         MVC   QFZONES,QFZONE INITIALIZE NUMERIC TEST\n         EX    R2,MVZ2        MOVE THE ZONES FOR VALIDITY CHECK\n         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?\n         BNE   TILT           NO. QUIT.\n         EX    R2,PACK2       PACK THE FIELD\n         CVB   R2,CONVERT     CONVERT TO BINARY\n         STH   R2,QPOFFSET    STORE OFFSET\n***********************************************************************\n*                                                                     *\n*   CALL LISTDS TO LIST THE DATASET                                   *\n*                                                                     *\n***********************************************************************\nCALLLIST L     R15,=V(LISTDS) ADDR OF LISTDS MODULE\n         BALR  R14,R15        GO TO IT\n         QSTOP\nTILT     QTILT '*** DATASET ID INVALID ***'\nTILTREL  QTILT '*** RELATIVE DATASET ID ONLY VALID IF JOBID IS \"*\" ***'\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\nDSIDPLUS AR    R4,R2          ADD TO PRESENT VALUE                UF040\nDSIDSUB  SR    R4,R2          SUBTRACT FROM PRESENT VALUE         UF040\nDSIDABS  LR    R4,R2          SET TO PRESENT VALUE                UF040\nMVZ      MVZ   QFZONES(1),QPARM2 CHECK FOR NUMERIC\nMVZ2     MVZ   QFZONES(1),QPARM3 CHECK FOR NUMERIC\nPACK     PACK  CONVERT,QPARM2(1) CONVERT TO BINARY\nPACK2    PACK  CONVERT,QPARM3(1) CONVERT TO BINARY\n         LTORG\n         DROP  ,                   DROP ALL ADDRESSINGS           NERDC\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nLIST     CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $BUFFER                                                  UF020\n         IFGRPL\n         $JCT\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nWORK     DSECT\n         DS    72C\nCONVERT  DS    D\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LISTDS": {"ttr": 5893, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "LISTDS   TITLE 'QUEUE COMMAND - LIST A DATASET FROM SPOOL'        ONL01\nLISTDS   QSTART ,                  START LISTDS CSECT ASSEMBLY    ONL01\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n         USING WORK,R13       BASE REG FOR LOCAL WORK\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   SEE IF DATA SET ID IS VALID                                   ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         CLC   QPDSID,=X'FFFF'     IS THE DATA SET ID VALID?        SBG\n         BNE   DSIDOK              SKIP IF YES                    ONL02\n         SPACE 1                                                  ONL02\n         QTILT '*** QUEUE LOGIC ERROR - BAD DSID IN LISTDS ***'     SBG\n         SPACE 1                                                  ONL02\nDSIDOK   DS    0H                  DSID EXISTS                    ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   DETERMINE FUNCTION REQUESTED                                      *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\n         CLI   QCODE,0        IS THE REQUEST FOR REPOSITIONING?\n         BNE   REPOS          YES. DO IT.\n         SPACE 2                                                  ONL04\n***********************************************************************\n*                                                                     *\n*   LOCATE PDDB FOR DATASET SPECIFIED IN QPDSID                       *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL04\n         NI    QFLAG2,255-QFLG2SPN-QFLG2PDB  CLEAR SEARCH FLAGS   ONL04\n         USING PDB,R2         BASE REG FOR PDDB\n         USING IOT,R3         BASE REG FOR IOT                    UF046\n         L     R5,QCIOTA      IOAREA FOR READ IOT BLOCK           UF046\n         LR    R3,R5          POINT TO IOTSTART                   UF046\n         SH    R3,=AL2(IOTSTART-IOT) ADJUST FOR HEADER            UF046\n         SPACE 1                                                  ONL04\nNEXTIOT  LR    R4,R3          BASE OF IOT\n         CLC   IOTID,=CL4'IOT'  WAS AN IOT READ FROM SPOOL ?      ONL03\n         BNE   BADIOT         ERROR IF NO                         ONL03\n         CLC   QPJOBID,IOTJBKEY  IS THE IOT'S JOB KEY VALID ?     ONL03\n         BNE   BADIOT         ERROR IF NO                         ONL03\n         A     R4,IOTPDDBP    OFFSET BEYOND LAST PDDB\n         LR    R2,R3          BASE OF IOT\n         A     R2,IOTPDDB          OFFSET TO FIRST PDDB IN IOT    UF046\n         SPACE 1                                                  ONL04\nFINDDS   DS    0H             SEARCH IOT FOR DSID                 ONL04\n         CLC   QPDSID,PDBDSKEY+2  DOES THE DSID MATCH ?           WGH42\n         BNE   SKIPPDDB       SKIP IF NO                          ONL04\n         OI    QFLAG2,QFLG2PDB  SHOW PDDB FOR DSID EXISTS         ONL04\n         CLC   PDBMTTR,=F'0'  DOES PDDB HAVE OUTPUT ?             ONL04\n         BNE   FOUNDDS        SKIP IF YES, WE'VE FOUND OUR OUTPUT ONL04\nSKIPPDDB DS    0H                                                 ONL04\n         SPACE 1                                                  ONL04\n         LA    R2,PDBLENG(R2) ADDR OF NEXT PDDB IN IOT            ONL04\n         CR    R2,R4          HAVE WE GONE PAST THE LAST PDDB?\n         BL    FINDDS         NO. TRY AGAIN.\n         L     R4,IOTIOTTR    DISK ADDR OF NEXT IOT\nSPIN     LTR   R4,R4          IS THERE ANOTHER IOT?\n         BZ    SPINIOT        NO. TRY THE SPIN IOT?\n         BAL   R8,READ        READ THE IOT\n         B     NEXTIOT        SEARCH THE NEXT IOT\n         USING JCT,R1         BASE REG FOR JCT                    ONL16\n         SPACE 1                                                  ONL04\nSPINIOT  TM    QFLAG2,QFLG2SPN  HAVE THE SPIN IOT'S BEEN SEARCHED?ONL04\n         BO    NODATA         SKIP IF YES                         ONL04\n         OI    QFLAG2,QFLG2SPN  SHOW SPIN IOT'S NOW BEING SEARCHEDONL04\n         L     R1,QCJCTA      LOAD BASE REG\n         L     R4,JCTSPIOT    DISK ADDR OF SPIN IOT\n         DROP  R1\n         B     SPIN           SEARCH THE SPIN IOT CHAIN\n         SPACE 1                                                  ONL04\nNODATA   DS    0H             ALL PDDB'S HAVE BEEN SEARCHED       ONL04\n         MVC   QPDSID,=X'FFFF'    INVALIDATE DSID                   SBG\n         TM    QFLAG2,QFLG2PDB  WAS DATASET FOUND BUT EMPTY?      ONL04\n         BZ    DSNOTFND       SKIP IF NO                          ONL04\n         QTILT '*** DATASET ID IS EMPTY ***'                      ONL04\nDSNOTFND QTILT '*** DATASET ID NOT FOUND ***'                     ONL04\nBADIOT   QTILT '*** JOB HAS PURGED (OR IOT IS INVALID) ***'       ONL03\nTILT2    QTILT '*** DATASET TABLE LIMITS EXCEEDED ***'\n         SPACE 1                                                  ONL04\nFOUNDDS  DS    0H             PDDB W/DATA FOUND FOR DSID          ONL04\n         MVC   QOLDDSID,QPDSID  SET PREVIOUS DSID TO CURRENT      ONL04\n         MVC   QCJNAME,QPARM1 SAVE THE JOBNAME                    UF007\n         CLI   QPARM1,C'*'    USE LAST JOB NAME?                  UF007\n         BNE   JNAMEOK        NO,  SKIP OVERLAY OF JOBNAME        UF007\n         L     R1,QCJCTA      BASE ADDRESS OF JCT                 UF040\n         USING JCT,R1         BASE FOR REAL JCT                   ONL16\n         MVC   QCJNAME,JCTJNAME SET JOB NAME                      UF040\n         DROP  R1             DROP TEMP ADDRESSING                UF040\nJNAMEOK  DS    0H                                                 UF040\n*        MVC   QCDSNO,QPARM2  SAVE THE DATASET ID NUMBER          UF040\n         LH    R0,QPDSID      GET DATASET ID                      UF040\n         CVD   R0,DWORD       TO DECIMAL                          UF040\n         MVC   QCDSNO,EDIT    SET EDIT PATTERN                    UF040\n         ED    QCDSNO,DWORD+4 TO PRINTABLE                        UF040\n         MVC   QDHLINE,QCHLINE MOVE IN HEADING LINE\n         MVC   QCRECFM,PDBRECFM RECORD FORMAT FOR SAVE\n         MVC   QCLRECL,PDBLRECL RECORD LENGTH FOR SAVE\n         L     R4,PDBMTTR     DISK ADDR OF FIRST BLOCK\n         L     R5,QCBLKA      ADDR OF DATASET BLOCK IOAREA\n         L     R2,QCSTART     BEGINNING OF DISK ADDR TABLE\n         ZAP   QCCREC,=P'0'   ZERO CURRENT RECORD NO\n         MVC   QCCPTR,QCSTART BEGIN OF TBL\n         ZAP   QCHREC,=P'0'   ZERO HIGH REC NO\n         MVC   QCHPTR,QCSTART BEGIN OF TBL\n         ZAP   QPREC,=P'1'    REPOSITION TO TOP OF DATASET\n         B     FIRST          PROCESS DATASET\n         DROP  R2\n         DROP  R3\n***********************************************************************\n*                                                                     *\n*   PROCESS DATASET                                                   *\n*                                                                     *\n***********************************************************************\n*NEXTBLK  L     R4,0(R5)       DISK ADDR OF NEXT BLOCK\nNEXTBLK  L     R4,HDBNXTRK-BUFSTART(R5)  DISK ADDR OF NEXT BLOCK  WGH42\nFIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?\n         BZ    END            YES. END OF DATASET.\n         ST    R4,0(R2)       STORE DISK ADDR IN TABLE\n         BAL   R8,READ        READ A BLOCK\n* WGH *  CLC   QPJOBID,4(R5)  DOES THE JOBID MATCH?               UF046\n         CLC   QPJOBID,HDBJBKEY-BUFSTART(R5)   JOBID MATCH?       WGH42\n         BNE   END            NO. END OF DATASET.\n         L     R15,QCJQEA     ADDRESS OF JQE                      UF046\n         USING JQE,R15        TEMP ADDRESSING                     UF046\n         TM    JQEFLAG3,JQE3SYSD  SYSTEM DATASETS HAVE DSID=0     UF046\n         DROP  R15                                                UF046\n         BO    QDSIDOK        LET IT GO                           UF046\n* WGH *  CLC   QPDSID,8(R5)   DATASET ID MATCH?                   UF046\n         CLC   QPDSID,HDBDSKEY-BUFSTART+2(R5)   JOBID MATCH?      WGH42\n         BNE   END            NO. END OF DATASET                  UF046\nQDSIDOK  DS    0H                                                 UF046\n         MVC   4(4,R2),QCCREC STORE CURRENT REC NUM IN TABLE\n         ST    R2,QCCPTR      STORE CURRENT TABLE ADDR\n         CP    QCCREC,QCHREC  IS THE CURRENT REC NO > HIGHEST?\n         BNH   NOTHI          NO. SKIP.\n         MVC   QCHREC(8),QCCREC REPLACE HI REC CNT AND PTR\nNOTHI    LA    R2,8(R2)       INCREMENT TO NEXT TBL ENTRY\n         C     R2,QCEND       IS THIS THE END OF TABLE?\n         BNL   TILT2          YES. TILT.\n* WGH *  LA    R4,10(R5)      ADDR OF FIRST RECORD IN BLOCK\n         LA    R4,HDBSTART-BUFSTART(R5)  FIRST RECORD IN BLOCK   WGH42\n***********************************************************************\n*                                                                     *\n*   PROCESS RECORDS                                                   *\n*                                                                     *\n***********************************************************************\nNEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?\n         BE    NEXTBLK        YES. END OF BLOCK.\n         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?\n         BO    SPAN           YES. SKIP IT.\n         SR    R6,R6          ZERO OUT REG\n         IC    R6,0(R4)       INSERT LENGTH\n         LR    R7,R6          SAVE RECORD LENGTH\n         LR    R1,R4          SAVE RECORD LOCATION\n         TM    1(R4),X'80'    IS CARRIAGE CONTROL SPECIFIED?\n         BZ    NOCCTL         NO. CONTINUE.\n         LA    R1,1(R1)       SKIP OVER CARRIAGE CONTROL\nNOCCTL   TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?\n         LR    R4,R1          UPDATE RECORD POINTER\n         BNZ   SKIPREC        YES. SKIP IT.\n         AP    QCCREC,=P'1'   ADD ONE TO CUR REC NO\n         CP    QCCREC,QPREC   HAVE WE REACHED THE RECORD WE WANT?\n         BL    SKIPREC        NO. TRY NEXT RECORD.\n         CLI   QCODE,4        IS THE REQUEST FOR A FIND?\n         BE    FIND           YES. DO IT.\n         CLI   QCODE,8        IS THE REQUEST FOR A FINDTIME?\n         BE    FINDTIME       YES. DO IT.\nFINDOFF  AH    R1,QPOFFSET    ADD OFFSET TO START OF RECORD\n         SH    R7,QPOFFSET    SUBTRACT OFFSET FROM LENGTH\n         BNP   ZEROPRT        NO DATA LEFT IN RECORD.\n         CH    R7,QDLNELEN    IS THE RECORD BIGGER THAN LINE?     UF003\n         BNH   LTMAX          NO. USE RECORD LENGTH.              UF003\n         LH    R7,QDLNELEN    YES. USE A LENGTH OF LINE.          UF003\nLTMAX    STH   R7,QDMLNG      STORE MESSAGE LENGTH                UF003\n         LA    R1,3(R1)       OFFSET PAST REC HDR\n         ST    R1,QDMSGA      STORE ADDR OF MESSAGE LINE\n         L     R15,=V(DISPLAY) ADDRESS OF DISPLAY MODULE\n         BALR  R14,R15        GO TO IT\n         TM    QDOVER,1       WAS THERE A PAGE OVERFLOW?\n         BNO   SKIPREC        NO. SKIP.\n         ZAP   QPREC,QCCREC   UPDATE THE REPOSITION NUMBER\n         MVC   HREC,EDIT      PATTERN FOR EDIT\n         ED    HREC,QCCREC    EDIT RECORD NUMBER\nSKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\nSPAN     LH    R6,2(R4)       LENGTH OF SEGMENT\n         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?\n         BO    SPANFRST       YES. USE HEADER LENGTH OF 6.\n         LA    R4,4(R6,R4)    UPDATE RECORD POSITION\n         B     NEXTREC        PROCESS NEXT RECORD\nSPANFRST TM    1(R4),X'80'         SKIP IF CARRIAGE CONTROL       CL010\n         BNO   *+8                  IS NOT PRESENT                CL010\n         LA    R4,1(,R4)             ELSE ACCOUNT FOR CC          CL010\n         LA    R4,6(R6,R4)    UPDATE RECORD POSITION\n         B     NEXTREC        PROCESS NEXT RECORD\nZEROPRT  LA    R1,QBLANK      PRINT A BLANK\n         LA    R7,1           LENGTH OF ONE\n         B     LTMAX          PRINT THE RECORD                    UF003\nEND      CP    QCCREC,=P'0'   IS THE DATASET EMPTY\n         BE    STOP           YES. QUIT.\n         MVC   HEND,ENDLINE   TELL THEM THIS IS THE END\n         MVC   HREND,EDIT     PATTERN FOR EDIT\n         ED    HREND,QCCREC   LAST REC NO\n         CLI   QCODE,32       WAS REQUEST FOR BOTTOM?\n         BE    BOTTOM         YES. BACK UP 21 LINES.\n         MVC   QDMLNG,=H'0'   ZERO OUT MESSAGE LENGTH\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE\n         BALR  R14,R15        FLUSH THE SCREEN\n         ZAP   QPREC,=P'1'    RECORD NUMBER 1\n         MVC   QDHLINE,QCHLINE BLANK THE TITLE LINE\n         B     TOP            START AT TOP OF DATASET\nSTOP     MVC   QPDSID,=X'FFFF'  MAKE USER SPECIFY A NEW DATA SET\n         MVC   QDHLINE,=CL80'*** DATA SET IS EMPTY ***'\n         QSTOP\n***********************************************************************\n*                                                                     *\n*   BOTTOM OF DATASET                                                 *\n*                                                                     *\n***********************************************************************\nBOTTOM   ZAP   QPREC,QCCREC   LAST RECORD NUMBER\n         MVI   QCODE,0        AVOID A LOOP\n         SP    QPREC,QDLNES   TOP OF PAGE -1                      UF003\n         AP    QPREC,=P'1'    TOP OF PAGE                         UF003\n         BP    REPOS          CONTINUE IF POSITIVE.\n         ZAP   QPREC,=P'1'    TOP OF DATASET\n***********************************************************************\n*                                                                     *\n*   REPOSITION TO REQUESTED RECORD NUMBER                             *\n*                                                                     *\n***********************************************************************\nREPOS    MVC   QDHLINE,QCHLINE MOVE IN HEADING LINE\n         MVC   HREC,EDIT      PREPARE FOR EDIT\n         ED    HREC,QPREC     EDIT RECORD NUMBER\n         CP    QPREC,QCHREC   IS THE REQ NO > HIGHEST READ?\n         BNL   HI             YES. GO FROM HI.\n         CP    QPREC,QCCREC   IS THE REQ NO > CURRENT REC?\n         BH    UP             YES. GO FROM CURRENT.\n         CP    QPREC,=P'1'    IS REQ FOR TOP OF DATASET?\n         BH    DOWN           NO. GO DOWN FROM CURRENT.\nTOP      L     R2,QCSTART     START AT TOP\nRESUME   L     R4,0(R2)       LOAD DISK ADDR\n         L     R5,QCBLKA      ADDR OF BLOCK IOAREA\n         MVC   QCCREC,4(R2)   RESET CURRENT REC NO\n         B     FIRST          RESUME PROCESSING\nHI       L     R2,QCHPTR      START AT HIGHEST SO FAR\n         B     DOWNLOOP       FIND CORRECT BLOCK\nUP       L     R2,QCCPTR      CURRENT TABLE PTR\nUPLOOP   CP    QPREC,12(4,R2) IS THE NEXT ENTRY > REQ NO?\n         BNH   RESUME         YES. PROCESS IT.\n         LA    R2,8(R2)       TRY NEXT ENTRY\n         B     UPLOOP         AGAIN\nDOWN     L     R2,QCCPTR      CURRENT TABLE PTR\nDOWNLOOP CLI   QSUBNAME,C'M'  IS THIS THE MODEL COMMAND?          UF045\n         BNE   OKCMD                                              UF045\n         CLC   QPARM1,=CL8' ' WAS THERE A PARM?                   UF045\n         BNE   OKCMD          YES, SKIP                           UF045\n         QTILT 'MODEL OPERAND REQUIRED'                           UF045\n         SPACE 1                                                  UF045\nOKCMD    CP    QPREC,4(4,R2)  IS THE ENTRY < REQ NO?              UF045\n         BH    RESUME         YES. PROCESS IT.\n         SH    R2,=H'8'       TRY PREVIOUS ENTRY\n         B     DOWNLOOP       AGAIN\n***********************************************************************\n*                                                                     *\n*   FIND MATCHING RECORD ROUTINE                                      *\n*                                                                     *\n***********************************************************************\nFIND     LH    R3,QPLNG       LENGTH-1 OF COMPARE\n         LR    R14,R6         LENGTH OF RECORD\n         SR    R14,R3         NUMBER OF COMPARES\n         BNP   SKIPREC        RECORD IS TOO SMALL. SKIP IT.\n         LR    R15,R4         FIRST BYTE OF RECORD\n         CLC   QOFFE,=H'0'    END RANGE FOR FIND SPECIFIED ?\n         BE    FLOOP          NO. BYPASS RANGE FOR FIND\n         AH    R15,QOFFS      YES. START ADDR FOR FIND\n         LH    R14,QOFFE      END ADDR FOR FIND\n         SH    R14,QOFFS      VALID RANGE ?\n         BP    FLOOP          YES. CONTINUE PROCESSING\n         QTILT ' *** ERROR IN COLUMN SPECIFICATION ***'\nFLOOP    EX    R3,CLC         DOES THE FIND DATA MATCH THE RECORD?\n         BE    MATCH          YES. DISCONTINUE SEARCH.\n         LA    R15,1(R15)     INCREMENT TO NEXT BYTE\n         BCT   R14,FLOOP      TRY NEXT BYTE\n         B     SKIPREC        SKIP THE RECORD. NO MATCH.\nMATCH    CLI   QSUBNAME+1,C'A' IS THE REQUEST FOR A FINDALL?\n         BE    FALL           YES. DO NOT DISABLE SEARCH.\n         MVI   QCODE,0        END THE SEARCH\n         ZAP   QPREC,QCCREC   UPDATE THE REPOSITION NUMBER\nFALL     MVC   HREC,EDIT      PREPARE FOR EDIT\n         ED    HREC,QCCREC    EDIT RECORD NUMBER\n         B     FINDOFF        CONTINUE\nCLC      CLC   QPFIND(1),3(R15) COMPARE PARM TO RECORD\n***********************************************************************\n*                                                                     *\n*   FIND THE RECORD WHICH IS GREATER THAN OR EQUAL TO TIME            *\n*                                                                     *\n***********************************************************************\nFINDTIME CLI   10(R4),C'.'    DOES THIS RECORD HAVE TIME?\n         BE    FINDTSP1       YES, THIS IS SP 1 SYSLOG            CL003\n         CLI   30(R4),C':'         DOES RECORD HAVE TIME?         WGH42\n         BNE   SKIPREC             NO, NOT SP 2 SYSLOG            CL003\n         CLC   QPARM1,28(R4)       IS THIS THE TIME WE WANT?      WGH42\n         BH    SKIPREC             NO. SKIT IT.                   CL003\n         B     MATCH               END THE SEARCH                 CL003\n         SPACE 1                                                  CL003\nFINDTSP1 CLC   QPARM1,8(R4)   IS THIS THE TIME WE WANT?           CL003\n         BH    SKIPREC        NO. SKIP IT.\n         B     MATCH          END THE SEARCH\n***********************************************************************\n*                                                                     *\n*   READ A BLOCK FROM HASPACE                                         *\n*                                                                     *\n***********************************************************************\nREAD     ST    R4,QCTRAK      STORE DISK ADDR\n         LR    R1,R5          IOAREA ADDRESS\n         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\n         BR    R8             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nENDLINE  DC    C', END OF DATA. LAST REC #'\nEDIT     DC    X'4020202020202021'\n         DC    CL45' '\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nLISTDS   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         $BUFFER ,                                                UF046\n         IFGRPL\n         $TAB\n         $JQE  ,                                                  UF046\n         $JCT\n         $PDDB\n         $IOT\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDHLINE\n         DS    C'JOB XXXXXXXX, DSID XXXXXXXX, REC #'\nHREC     DS    CL8\nHEND     DS    C', END OF DATA. LAST REC #'\nHREND    DS    CL8\nWORK     DSECT\n         DS    CL72\nDWORD    DS    D                                                  UF040\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "NULLDSID": {"ttr": 5900, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "* INSERT THIS CODE AT THE BEGINNING OF ANY NON-DATASET COMMAND      SBG\n*    IF YOU WANT TO QUEUE TO FORGET THE PREVIOUS DATASET YOU WERE   SBG\n*    LOOKING AT.                                                    SBG\n         SPACE 3                                                    SBG\n******************************************************************  SBG\n*  NULLIFY QPDSID FIELD TO SHOW INVALID DSID.                       SBG\n         MVC   QPDSID,=X'FFFF'   SET DSID TO BE INVALID             SBG\n******************************************************************  SBG\n         SPACE 3                                                    SBG\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PARSE": {"ttr": 5902, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PARSE    TITLE 'QUEUE COMMAND - COMMAND LINE PARSE ROUTINES'      ONL01\nPARSE    QSTART ,                  START PARSE CSECT ASSEMBLY     ONL01\n***********************************************************************\n* RNB CHANGES:                                                        *\n*    (1) ADDED COMMAND ABBREVIATIONS: RNB06                           *\n*                JM FOR JMSG                                          *\n*                JL FOR JLOG                                          *\n*                JC FOR JCL                                           *\n*                SL FOR SLOG                                          *\n*                FT FOR FTIM                                          *\n*                DE FOR DEL                                           *\n*                RE FOR REQ                                           *\n*                                                                     *\n***********************************************************************\n         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA\n         L     R10,QVDSPL     LOAD BASE REG\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   PARSE SUBCOMMAND NAME                                             *\n*                                                                     *\n***********************************************************************\n         LH    R2,QDRLNG      LENGTH OF REPLY LINE\n         OC    QDREPLY,QBLANK TRANSLATE TO UPPER CASE\n         CLC   QDREPLY,QBLANK IS THE ENTIRE REPLY BLANK?\n         BE    LOOKUP         YES. DO LOOKUP.\n         MVC   QDTLINE,QDREPLY MOVE COMMAND LINE TO HEADING\n         MVC   FIELD,QBLANK   BLANK THE WORK FIELD\n         MVC   OFFSET(4),=F'0' ZERO THE OFFSET AND LENGTH\n         MVC   QOFF0(12),OFFSET INITIALIZE FIRST FIELD\n         MVC   QOFF1(48),QOFF0 INITIALIZE NEXT FOUR FIELDS\n         LA    R6,QOFF4+12    ADDR PAST LAST FIELD\n         LA    R5,QOFF0       ADDR OF FIRST SET OF FIELDS\n         LA    R3,QDREPLY     FIRST BYTE OF REPLY LINE\nENCORE   LA    R4,FIELD       FIRST BYTE OF WORK FIELD\nBLANK    CLI   0(R3),C' '     IS THIS BYTE BLANK?\n         BNE   FIRST          NO. START OF FIELD.\n         LA    R3,1(R3)       YES. SKIP IT.\n         BCT   R2,BLANK       TRY NEXT BYTE\n         B     EMPTY          END OF REPLY LINE.\nFIRST    LH    R1,QDRLNG      REPLY LENGTH\n         SR    R1,R2          COMPUTE OFFSET TO START OF FIELD\n         STH   R1,OFFSET      STORE OFFSET\n         LR    R1,R2          SAVE COUNT OF REMAINING BYTES\n         B     CHAR           CONTINUE\nLOOP     CLI   0(R3),C' '     IS THIS BYTE BLANK?\n         BE    LAST           YES. END OF FIELD.\nCHAR     MVC   0(1,R4),0(R3)  MOVE BYTE TO SUBNAME\n         LA    R3,1(R3)       INCREMENT\n         LA    R4,1(R4)       INCREMENT\n         BCT   R2,LOOP        TRY NEXT BYTE\nLAST     SR    R1,R2          COMPUTE FIELD LENGTH\n         CH    R1,=H'8'       IS LENGTH GREATER THAN 8?\n         BNH   STORE          NO. USE IT.\n         LA    R1,8           YES. USE LENGTH OF EIGHT.\nSTORE    STH   R1,LENGTH      STORE FIELD LENGTH\nEMPTY    MVC   0(12,R5),OFFSET MOVE FIELD TO QCOMMON\n         LTR   R2,R2          IS THE REMAINING LENGTH ZERO?\n         BZ    LOOKUP         YES. DO THE TABLE LOOKUP.\n         MVC   FIELD,QBLANK   BLANK THE WORK FIELD\n         MVC   OFFSET(4),=F'0' ZERO OUT OFFSET AND LENGTH\n         LA    R5,12(R5)      INCREMENT TO NEXT FIELD\n         CR    R5,R6          WAS THAT THE LAST FIELD?\n         BL    ENCORE         NO. PROCESS NEXT FIELD.\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM A TABLE LOOK UP FOR THE QUEUE SUB-COMMAND             ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nLOOKUP   DS    0H                  FIND QUE SUB-COMMAND IN TABLE  ONL02\n         CLI   QSUBNAME,C'0'       IS THIS A NUMBER               WGH\n         BL    LOOKUP2             NO..                           WGH\n         MVC   QPARM1,QSUBNAME     YES.. MOVE IT TO PARM1         WGH\n         MVC   QLNG1,QLNG0               AND LENGTH               WGH\n         MVC   QSUBNAME(4),=C'LIST'  CREATE LIST CMD              WGH\n         LA    R2,4                SET LENGTH                     WGH\n         STH   R2,QLNG0            STORE IT                       WGH\nLOOKUP2  LA    R2,TABLE            ADDR OF SUB-COMMAND TABLE      ONL02\n         SPACE 1                                                  ONL02\nNEXT     CLC   0(4,R2),QSUBNAME    COMPARE FIRST 4 CHARACTERS     UF014\n         BE    FOUND               THIS IS THE ONE\n         LA    R2,12(R2)           NEXT ENTRY                     UF014\n         CLI   0(R2),X'FF'         IS THIS THE END OF TABLE?\n         BNE   NEXT                NO. TRY NEXT ENTRY.\n         SPACE 1                                                  ONL02\nFOUND    DS    0H                  SUB-CMD FOUND OR END OF TABLE  ONL02\n         MVC   QSUBCMD,4(R2)       SET SUB-COMMAND ADDR FROM TABLEONL02\n         MVC   QCODEH,8(R2)        SET FUNCTION CODE FROM TABLE   ONL02\n         MVC   QASCFLGS,10(R2)     SET TYPE FLAGS FROM TABLE      ONL02\n         MVC   QASCUSER,11(R2)     SET USER FLAGS FROM TABLE      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AN AUTHORIZATION CHECK AND RETURN TO PROCESS COMMAND  ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QAPARSE           PERFORM AUTHORIZATION CHECK    ONL02\n         SPACE 1                                                  ONL02\n         QSTOP ,                   RETURN TO PROCESS COMMAND      ONL02\n         EJECT ,                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   TABLE OF QUEUE SUB-COMMANDS                                   ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nTABLE    DS    0F                  QUE SUB-COMMAND COMMAND TABLE  ONL02\n         QSCE  STAT,SEARCH                 STATUS                 ONL02\n         QSCE  ST,SEARCH                   STATUS                 ONL02\n         QSCE  DD,DDNAME                   LIST DSID'S FOR A JOB  ONL02\n         QSCE  LIST,LIST                   LIST SYSIN/SYSOUT FILE ONL02\n         QSCE  L,LIST                      LIST SYSIN/SYSOUT FILE ONL02\n         QSCE  FIND,REPOS,FNC=4            FIND                   ONL02\n         QSCE  FALL,REPOS,FNC=4            FIND ALL               ONL02\n         QSCE  FA,REPOS,FNC=4              FIND ALL               ONL02\n         QSCE  F,REPOS,FNC=4               FIND                   ONL02\n         QSCE  FTIM,REPOS,FNC=8            FTIME (SYSLOG)         ONL02\n         QSCE  FT,REPOS,FNC=8              FTIME (SYSLOG)         ONL02\n         QSCE  COL,REPOS,FNC=12            COLUMN                 ONL02\n         QSCE  CO,REPOS,FNC=12             COLUMN                 ONL02\n         QSCE  C,REPOS,FNC=12              COLUMN                 ONL02\n         QSCE  '@',REPOS,FNC=16            REPOS TO RECORD NUMBER ONL02\n         QSCE  MD,REPOS,FNC=16             REPOS TO RECORD NUMBER ONL02\n         QSCE  '+',REPOS,FNC=20            DOWN                   ONL02\n         QSCE  D,REPOS,FNC=20              DOWN                   ONL02\n         QSCE  PF,REPOS,FNC=20             PAGE FORWARD           ONL02\n         QSCE  HF,REPOS,FNC=20             HALF PAGE FORWARD      ONL02\n         QSCE  '-',REPOS,FNC=24            UP                     ONL02\n         QSCE  UP,REPOS,FNC=24             UP                     ONL02\n         QSCE  PB,REPOS,FNC=24             PAGE BACK              ONL02\n         QSCE  HB,REPOS,FNC=24             HALF BACK              ONL02\n         QSCE  TOP,REPOS,FNC=28            TOP                    ONL02\n         QSCE  T,REPOS,FNC=28              TOP                    ONL02\n         QSCE  BOTT,REPOS,FNC=32           BOTTOM                 ONL02\n         QSCE  BOT,REPOS,FNC=32            BOTTOM                 ONL02\n         QSCE  B,REPOS,FNC=32              BOTTOM                 ONL02\n         QSCE  MODE,REPOS,FNC=36           MODEL                  ONL02\n         QSCE  MO,REPOS,FNC=36             MODEL                  ONL02\n         QSCE  M,REPOS,FNC=36              MODEL                  ONL02\n         QSCE  SAVE,SAVE,FNC=4             SAVE CURRENT FILE      ONL02\n         QSCE  SPIN,CSPIN,FNC=4            SPIN CURRENT FILE      ONL02\n         QSCE  JCL,JCL                     LIST JCL               ONL02\n         QSCE  JC,JCL                      LIST JCL               ONL02\n         QSCE  JLOG,JLOG                   LIST JOBLOG            ONL02\n         QSCE  JL,JLOG                     LIST JOBLOG            ONL02\n         QSCE  JMSG,JMSG                   LIST SYSMSGS           ONL02\n         QSCE  JM,JMSG                     LIST SYSMSGS           ONL02\n         QSCE  JH,CJHIST                   LIST JOB HISTORY       ONL02\n         QSCE  JHIS,CJHIST                 LIST JOB HISTORY       ONL02\n         QSCE  PFK,CPFK                    PFK LIST/CHANGE CMD    ONL02\n         QSCE  PDDB,CPDDB                  LIST PDDB'S FOR JOB    ONL02\n         QSCE  DA,SEARCH,FNC=4,TYPE=QASXACTV  DISP ALL IN EXEC    ONL02\n         QSCE  DC,ACTIVE,TYPE=QASXACTV     DISP CPU BATCH/STC/TSO ONL02\n         QSCE  DI,SEARCH,FNC=8,            DISP ALL IN INPUT CLASSONL02X\n               TYPE=QASXBLOG                                      ONL02\n         QSCE  DO,SEARCH,FNC=12,           DISP ALL IN OUTPUT CLASONL02X\n               TYPE=QASXBLOG                                      ONL02\n         QSCE  WO,SEARCH,FNC=52,           OUTPUT QUEUE W/ WTRID  ONL02X\n               TYPE=QASXBLOG                                      ONL02\n         QSCE  AI,SEARCH,FNC=16,           DISP ALL AVAIL FOR EXECONL02X\n               TYPE=QASXBLOG                                      ONL02\n         QSCE  AO,SEARCH,FNC=20,           DISP ALL AVAIL OUTPUT  ONL02X\n               TYPE=QASXBLOG                                      ONL02\n         QSCE  HI,SEARCH,FNC=24,           DISP ALL IN INPUT HOLD ONL02X\n               TYPE=QASXBLOG                                      ONL02\n         QSCE  HO,SEARCH,FNC=28,           DISP ALL IN OUTPUT HOLDONL02X\n               TYPE=QASXBLOG                                      ONL02\n         QSCE  HQ,SEARCH,FNC=60,           DISP ALL IN $OUTPUT Q  WGH42X\n               TYPE=QASXBLOG                                      ONL02\n         QSCE  DT,SEARCH,FNC=32,TYPE=QASXACTV  DISP TSO USERS     ONL02\n         QSCE  DJ,SEARCH,FNC=36            DISPLAY JOB            ONL02\n         QSCE  DS,SEARCH,FNC=40,TYPE=QASXACTV  DISPLAY STC        ONL02\n         QSCE  DQ,SEARCH,FNC=44,TYPE=QASXBLOG  DISP INPUT QUEUES  ONL02\n         QSCE  DF,SEARCH,FNC=48,TYPE=QASXBLOG  DISP OUTPUT QUEUES ONL02\n         QSCE  DELE,SYSOUT,TYPE=QASXSSSM   DELETE JOB             ONL07\n         QSCE  DEL,SYSOUT,TYPE=QASXSSSM    DELETE JOB             ONL02\n         QSCE  DE,SYSOUT,TYPE=QASXSSSM     DELETE JOB             ONL02\n         QSCE  REQ,SYSOUT,FNC=4,TYPE=QASXSSSM  REQUEUE JOB        ONL02\n         QSCE  RE,SYSOUT,FNC=4,TYPE=QASXSSSM  REQUEUE JOB         ONL02\n         QSCE  CANC,SYSOUT,FNC=8,TYPE=QASXSSSM  CANCEL JOB        ONL07\n         QSCE  CAN,SYSOUT,FNC=8,TYPE=QASXSSSM  CANCEL JOB         ONL02\n         QSCE  CA,SYSOUT,FNC=8,TYPE=QASXSSSM  CANCEL JOB          ONL02\n         QSCE  TSO,CTSO,TYPE=QASXEXEC      ISSUE ANY TSO COMMAND  ONL02\n         QSCE  EX,CTSO,TYPE=QASXEXEC       IMPLICIT CLIST INVOKE  ONL02\n         QSCE  EXEC,CTSO,TYPE=QASXEXEC     IMPLICIT CLIST INVOKE  ONL02\n         QSCE  SLOG,SYSLOG,TYPE=QASXSLOG   LIST THE SYSTEM LOG    ONL02\n         QSCE  SL,SYSLOG,TYPE=QASXSLOG     LIST THE SYSTEM LOG    ONL02\n         QSCE  XI,INITS,TYPE=QASXSYSP      DISP ACTIVE INITS      ONL02\n         QSCE  XB,HEXBLK,TYPE=QASXSYSP     DISP SPOOL BLOCK       ONL02\n         QSCE  XJ,SEARCH,FNC=36,TYPE=QASXSYSP  DISP HEX JQE/JOE   ONL02\n         QSCE  XD,XDS,TYPE=QASXSYSP        UNRESTRICTED FILE DISP ONL02\n         QSCE  XP,HELP,TYPE=QASXOPER       ENTER PASSWORD         ONL02\n         QSCE  JQE,CJQE,TYPE=QASXSYSP      HEX DUMP OF JQE        ONL02\n         QSCE  JCT,CJCT,TYPE=QASXSYSP      HEX DUMP OF JCT        ONL02\n         QSCE  IOT,CIOT,TYPE=QASXSYSP      HEX DUMP OF IOTS          CL\n         QSCE  HCT,CHCT,TYPE=QASXSYSP      HEX DUMP OF HCT SAVEAREONL02\n         QSCE  JOE,CJOE,TYPE=QASXSYSP      HEX DUMP OF JOE        ONL02\n         QSCE  TGPS,CTGPS,TYPE=QASXSYSP    LIST LARGE SPOOL USERS ONL02\n         QSCE  PFX,SEARCH,FNC=56,TYPE=QASXSYSP  SET PREFIX        WGH\n         QSCE  QUIE,CQUIET                 SET QUIET MODE         WGH\n         QSCE  TALK,CQUIET                 SET TALK  MODE         WGH\n         QSCE  NOS,CQUIET                  SET NOSTACK MODE       WGH\n         QSCE  NOST,CQUIET                 SET NOSTACK MODE       WGH\n         QSCE  ENDS,CQUIET                 SET ENDSTACK MODE      WGH\n         QSCE  TERM,CQUIET                 SET ENDSTACK MODE      WGH\n         QSCE  STAC,CQUIET                 SET    STACK MODE      WGH\n         QSCE  DIE,CDIE,TYPE=QASXSYSP      FORCE 0C1 PROGRAM CHECKONL02\n         SPACE 1                                                  ONL02\nHELPCC   DC    F'-1',V(HELP),Y(0),AL1(0,0) MARK END OF TABLE      ONL02\n         EJECT ,                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nWPASS    DC    X'C1115D7F1140403C4040001D4C13'  *** SPF TCAM\n         SPACE 1                                                  UF024\nWORK     DSECT\n         DS    CL72\nOFFSET   DS    H\nLENGTH   DS    H\nFIELD    DS    CL8\nRPASS    DS    CL8\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRINT": {"ttr": 6149, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "PRINT    TITLE 'QUEUE COMMAND - PRINT SCREEN DISPLAY ROUTINE'     ONL01\nPRINT    QSTART ,                  START PRINT CSECT ASSEMBLY     ONL01\n***********************************************************************\n* RNB CHANGES:                                                        *\n*      (1) RNB10 - CHANGE DEFAULT SYSOUT CLASS TO C (IF QRNB=1)       *\n***********************************************************************\n         GBLB  &QRNB                                              RNB10\n         USING QDISPLAY,R10   BASE REG FOR DISPLAY WORK AREA       FCI*\n         L     R10,QVDSPL     LOAD BASE REG                        FCI*\n         USING QCPRINT,R9     BASE REG FOR PRINT WORK AREA         FCI*\n         L     R9,QVPRINT     LOAD BASE REGISTER                   FCI*\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA         FCI*\n***********************************************************************\n*   PROCESS THE PRINT COMMAND                                      FCI*\n***********************************************************************\nSTARTIT  BAL   R7,PARSECMD    GO PARSE THE PRINT COMMAND           FCI*\n         CLC   =C'ON',QPPARM1 IS IT ON?                            FCI*\n         BE    STARTPRT         YES..GO START IT                   FCI*\n         CLC   =C'OFF',QPPARM1 IS PRINT OFF?                       FCI*\n         BE    STOPPRT          YES..GO STOP IT                    FCI*\n         CLI   QPPARM1,C' '   NO PARM?                             FCI*\n         BE    STARTPRT         YES..ASSUME START                  FCI*\nSTOP     MVC   QDREPLY,QBLANK   KISS OFF OUR REPLY  (SNEAKY)       FCI*\n         XC    QDRLNG,QDRLNG    AND SAY NOBODY HOME                FCI*\n         QSTOP                                                     FCI*\n         EJECT ,                                                   FCI*\n***********************************************************************\n*   START (OR CONTINUE) THE PRINT PROCESS                          FCI*\n***********************************************************************\nSTARTPRT DS 0H                                                     FCI*\n         TM    QPFLAG,HARDCPY  IS HARDCOPY ON                      FCI*\n         BO    JUSTPRT         YES..JUST PRINT                     FCI*\n         ZAP   QPPAGE,=P'0'    RESET PAGE NUMBER                   FCI*\n         MVI   QPHEAD1,C'0'    AND ASA ON HEADING SO WELL START FRESH\n         BAL   R7,ALLOCHC      GO ALLOCATE / OPEN HARDCOPY         FCI*\nJUSTPRT  BAL   R7,GETTIME      GO GET DATE AND TIME                FCI*\n         MVC   QPUSER,QLOGON   MOVE IN USERID                      FCI*\n         MVC   QPDATE,JDATE    MOVE IN DATE TIME INFO              FCI*\n         MVC   QPPAGE#,QBLANK     CLEAR OUT PAGE # FIELD           FCI*\n         XC    QPHEAD1(1),=X'01'  TOGGLE ASA FLAG 0-1 OR 1-0       FCI*\n         CLI   QPHEAD1,C'1'    EJECT NOW SCHEDULED?                FCI*\n         BNE   NOPAGE             NO..SKIP PAGE SETTING            FCI*\n*                                                                  FCI*\n         AP    QPPAGE,=P'1'    BUMP PAGE COUNT                     FCI*\n         MVC   QPPAGE#,=X'402020202021'  MOVE IN MASK              FCI*\n         ZAP   DBLWORK,QPPAGE  MOVE INTO AREA                      FCI*\n         ED    QPPAGE#,DBLWORK+5   EDIT IN PAGE NUMBER             FCI*\nNOPAGE   PUT   HASPPRNT,QPHEAD1  PUT OUT TITLE LINE                FCI*\n         PUT   HASPPRNT,QPHEAD2  PUT OUT '-' LINE                  FCI*\n*                                                                  FCI*\n         MVC   QPLINE,QBLANK                   RECONSTRUCT IMAGE   FCI*\n         MVC   QPLINE(15),=C'QUEUE COMMAND -'    OF HEADER LINE    FCI*\n         MVC   QPLINE+16(L'QPRSAVE),QPRSAVE        WITHOUT 3270    FCI*\n         PUT   HASPPRNT,QPDETAIL                      CONTROL CHARS\n         EJECT ,                                                   FCI*\n*                                                                  FCI*\n*  PUT OUT ENTIRE SCREEN OF DETAIL LINES (BLANK OR NOT)            FCI*\n*                                                                  FCI*\n         MVC   QPLINE(80),QDHLINE MOVE HEADING LINE TO BUFFER     UF003\n         PUT   HASPPRNT,QPDETAIL PRINT THE LINE                   UF003\n         LH    R3,QDSCRLEN       SIZE OF SCREEN                   UF003\n         SR    R2,R2             CLEAR FOR DIVIDE                 UF003\n         LH    R7,QDLNELEN       LINE LENGTH                      UF003\n         DR    R2,R7             NUMBER OF LINES                  UF003\n         BCTR  R7,0              DROP LINE LEN FOR EXECUTES       UF003\n         LA    R2,QDLINE1        LOAD ADDRESS OF FIRST LINE       UF003\nPUTLOOP  EX    R7,PUTMVC         MOVE LINE TO BUFFER              UF003\n         PUT   HASPPRNT,QPDETAIL PUT DETAIL LINE LOUT              FCI*\n         LA    R2,1(R2,R7)       POINT TO NEXT LINE               UF003\n         BCT   R3,PUTLOOP        AND GRIND THE SCREEN THROUGH      FCI*\n*                                                                  FCI*\n         MVC   QPLINE,QBLANK                   RECONSTRUCT IMAGE   FCI*\n         MVC   QPLINE(07),=C'REPLY -'            OF COMMAND LINE   FCI*\n         MVC   QPLINE+08(L'QDREPLY),QDREPLY        WITHOUT 3270    FCI*\n         MVC   QPLINE+72(1),QDPLUS                   CONTROL CHARS FCI*\n         PUT   HASPPRNT,QPDETAIL                       AND PRINT IT\n*                                                                  FCI*\n         MVI   QPDETAIL,C'-'       TRIPLE SPACE A BLANK LINE       FCI*\n         MVC   QPLINE,QBLANK                                       FCI*\n         PUT   HASPPRNT,QPDETAIL   AND PRINT IT                    FCI*\n         MVI   QPDETAIL,C' '       RESTORE TO SINGLE SPACE         FCI*\n*                                                                  FCI*\n         MVC   QDTLINE+L'QDTLINE-L'PRTMSG-1(L'PRTMSG),PRTMSG       FCI*\nGOTMSG   LA    R1,0               SET A ZERO                       FCI*\n         L     R2,4(R13)              RETURN CODE                  FCI*\n         ST    R1,16(R2)                  IN REGISTER 15 (SAVED)   FCI*\n         B     STOP                                                FCI*\n         SPACE 2                                                   FCI*\nPUTMVC   MVC   QPLINE(*-*),0(R2)  EXECUTED MOVE                   UF003\nPRTMSG   DC    C'SCREEN PRINTED'                                   FCI*\n         EJECT ,                                                   FCI*\n***********************************************************************\n*   STOP PRINT PROCESS AND FREE HASPPRNT DDNAME                    FCI*\n***********************************************************************\nSTOPPRT  TM    QPFLAG,HARDCPY             IS HARDCPY ON            FCI*\n         BNO   STOP                       NOPE..NO WORK TO DO      FCI*\n         LA    R2,HASPPRNT          BUILD                          FCI*\n         LA    R1,DBLWORK                   LIST                   FCI*\n         MVI   DBLWORK,X'80'              LAST ENTRY IN LIST       FCI*\n         CLOSE ((2)),MF=(E,(1))           CLOSE OFF THE FILE       FCI*\n         FREEPOOL (2)                     FREE THE BUFFERS TOO     FCI*\n         MVC   DYNALLOC(F99LEN),F99PTR   COPY DYN FREE LIST        FCI*\n         LA    R1,FREERB          RELOCATE THE LIST ADDRESSES.     FCI*\n         STCM  R1,B'0111',FREEPTR+1   *                            FCI*\n         LA    R1,FREETXPT            *                            FCI*\n         ST    R1,FREETPTR            *                            FCI*\n         LA    R1,FREETU1             *                            FCI*\n         STCM  R1,B'0111',FREETXPT+1  *                            FCI*\n         LA    R1,FREETU2             *                            FCI*\n         STCM  R1,B'0111',FREETXPT+5  *                            FCI*\n         LA    R1,FREEPTR                                          FCI*\n         DYNALLOC                                                  FCI*\n         NI    QPFLAG,255-HARDCPY    TURN OFF PRINT FLAG           FCI*\n         MVC   QDTLINE+L'QDTLINE-L'PRTSTP-1(L'PRTSTP),PRTSTP       FCI*\n         B     GOTMSG                                              FCI*\nPRTSTP   DC    C'PRINT STOPPED; SYSOUT FREED FOR PRINT'            FCI*\n         EJECT ,                                                   FCI*\n***********************************************************************\n*                                                                  FCI*\n*   PARSE PRINT COMMAND                                            FCI*\n*                                                                  FCI*\n***********************************************************************\nPARSECMD LH    R2,QDRLNG      LENGTH OF REPLY LINE                 FCI*\n         OC    QDREPLY,QBLANK TRANSLATE TO UPPER CASE              FCI*\n         CLC   QDREPLY,QBLANK IS THE ENTIRE REPLY BLANK?           FCI*\n         BER   R7             YES. NOTHING TO PARSE..RETURN        FCI*\n         MVC   FIELD,QBLANK   BLANK THE WORK FIELD                 FCI*\n         MVC   OFFSET(4),=F'0' ZERO THE OFFSET AND LENGTH          FCI*\n         MVC   QPOFF0(12),OFFSET INITIALIZE FIRST FIELD            FCI*\n         MVC   QPOFF1(48),QPOFF0 INITIALIZE NEXT FOUR FIELDS       FCI*\n         LA    R6,QPOFF4+12   ADDR PAST LAST FIELD                 FCI*\n         LA    R5,QPOFF0      ADDR OF FIRST SET OF FIELDS          FCI*\n         LA    R3,QDREPLY     FIRST BYTE OF REPLY LINE             FCI*\nENCORE   LA    R4,FIELD       FIRST BYTE OF WORK FIELD             FCI*\nBLANK    CLI   0(R3),C' '     IS THIS BYTE BLANK?                  FCI*\n         BNE   FIRST          NO. START OF FIELD.                  FCI*\n         LA    R3,1(R3)       YES. SKIP IT.                        FCI*\n         BCT   R2,BLANK       TRY NEXT BYTE                        FCI*\n         B     EMPTY          END OF REPLY LINE.                   FCI*\nFIRST    LH    R1,QDRLNG      REPLY LENGTH                         FCI*\n         SR    R1,R2          COMPUTE OFFSET TO START OF FIELD     FCI*\n         STH   R1,OFFSET      STORE OFFSET                         FCI*\n         LR    R1,R2          SAVE COUNT OF REMAINING BYTES        FCI*\n         B     CHAR           CONTINUE                             FCI*\nLOOP     CLI   0(R3),C' '     IS THIS BYTE BLANK?                  FCI*\n         BE    LAST           YES. END OF FIELD.                   FCI*\nCHAR     MVC   0(1,R4),0(R3)  MOVE BYTE TO SUBNAME                 FCI*\n         LA    R3,1(R3)       INCREMENT                            FCI*\n         LA    R4,1(R4)       INCREMENT                            FCI*\n         BCT   R2,LOOP        TRY NEXT BYTE                        FCI*\nLAST     SR    R1,R2          COMPUTE FIELD LENGTH                 FCI*\n         CH    R1,=H'8'       IS LENGTH GREATER THAN 8?            FCI*\n         BNH   STORE          NO. USE IT.                          FCI*\n         LA    R1,8           YES. USE LENGTH OF EIGHT.            FCI*\nSTORE    STH   R1,LENGTH      STORE FIELD LENGTH                   FCI*\nEMPTY    MVC   0(12,R5),OFFSET MOVE FIELD TO QCOMMON               FCI*\n         LTR   R2,R2          IS THE REMAINING LENGTH ZERO?        FCI*\n         BZR   R7             YES. FINITO OF PARSE..RETURN         FCI*\n*                                                                  FCI*\n         MVC   FIELD,QBLANK   BLANK THE WORK FIELD                 FCI*\n         MVC   OFFSET(4),=F'0' ZERO OUT OFFSET AND LENGTH          FCI*\n         LA    R5,12(R5)      INCREMENT TO NEXT FIELD              FCI*\n         CR    R5,R6          WAS THAT THE LAST FIELD?             FCI*\n         BL    ENCORE         NO. PROCESS NEXT FIELD.              FCI*\n         EJECT ,                                                   FCI*\n***********************************************************************\n* GET DATE/TIME FOR HEADING   ENTER WITH BAL R7,GETTIME            FCI*\n* RETURNS WITH JDATE(LEN) = YY.DDD  HH:MM:SS DAY MTH DD,19YY       FCI*\n*                           123456789.123456789.123456789.123      FCI*\n*                                                                  FCI*\n***********************************************************************\nGETTIME  TIME  DEC                                                 FCI*\n         ST    R1,DATE                 SAVE DATE FOR LATER         FCI*\n***FORMAT THE PRESENT TIME (AS SET BY THE OPERATOR)                FCI*\n         ST    R0,DBLWORK              CNVT PACKED TO DEC          FCI*\n         MVC   MONMSK(MVCLEN),XMONMSK  MOVE IN AND INITIALIZE TABLE/DAT\n         MVI   DBLWORK+4,X'0F'                                     FCI*\n         UNPK  WORKWORD(9),DBLWORK(5)                              FCI*\n         MVC   TIMEHRS,WORKWORD        MOVE TIME TO MSG            FCI*\n         MVC   TIMMINS,WORKWORD+2                                  FCI*\n         MVC   TIMSECS,WORKWORD+4                                  FCI*\n***FORMAT TODAY'S DATE INTO THE OUTPUT MSG                         FCI*\n         MVC   WORKWORD(4),DATE        MOVE DATE TO WORK AREA.     FCI*\n         MVO   WORKWORD+1(3),WORKWORD(2)   MAKE 00YYDDDS INTO 00000YYS.\n         UNPK  CYR(2),WORKWORD+2(2)    FORMAT YEAR.                FCI*\n         XC    DBLWORK,DBLWORK                                     FCI*\n         MVC   DBLWORK+4(4),WORKWORD   CNVT YEAR TO BIN            FCI*\n         CVB   R0,DBLWORK                                          FCI*\n         ST    R0,BINYEAR              AND SAVE                    FCI*\n         TM    BINYEAR+3,X'03'         LEAP YEAR?                  FCI*\n         BNZ   MON1                    NO.                         FCI*\n         MVI   MONMSK+10,29            YES, CORRECT                FCI*\nMON1     XC    DBLWORK,DBLWORK         CNVT DAYS TO BIN            FCI*\n         MVC   DBLWORK+6(2),DATE+2                                 FCI*\n         CVB   R2,DBLWORK                                          FCI*\n         ST    R2,BINDAYS              SAVE FOR LATER              FCI*\n         XR    R1,R1                                               FCI*\n         LA    R15,11                                              FCI*\nMON2     IC    R1,MONMSK(R15)          COMPUTE MON & DAY           FCI*\n         SR    R2,R1                                               FCI*\n         BNP   MONOVR                                              FCI*\n         BCT   R15,MON2                                            FCI*\n         B     *+6                                                 FCI*\nMONOVR   AR    R2,R1                   CORRECT OVERDRAW            FCI*\n         CVD   R2,DBLWORK              FORMAT DAY                  FCI*\n         UNPK  CDAYN(2),DBLWORK+6(2)                               FCI*\n         OI    CDAYN+1,X'F0'           FIX UP SIGN                 FCI*\n         MH    R15,=H'3'               GET TABLE OFFSET            FCI*\n         LA    R15,MONTAB(R15)         AND POINT AT MONTH          FCI*\n         MVC   CMON(3),0(R15)          MOVE IT TO THE MSG          FCI*\n         EJECT ,                                                   FCI*\n***DAY OF WEEK                                                     FCI*\n         L     R15,BINYEAR                                         FCI*\n         SH    R15,=H'69'                                          FCI*\n         BNP   OUTT                    MUST BE GREATER OR BAD      FCI*\n         XR    R14,R14                 CLEAR DAY REG               FCI*\n         D     R14,=F'4'                                           FCI*\n         MH    R15,=H'5'                                           FCI*\n         AR    R14,R15                                             FCI*\n         A     R14,BINDAYS                                         FCI*\n         SRDA  R14,32                                              FCI*\n         D     R14,=F'7'               MODULO 7 FOR WEEK           FCI*\n         MH    R14,=H'3'                                           FCI*\n         LA    R14,DAYTAB(R14)         POINT AT TODAY              FCI*\n         MVC   CDAY(3),0(R14)          INSERT IN MSG               FCI*\n***                                                                FCI*\nMOVEJD   MVC   JDATE-1(7),=X'4020204B202020'                       FCI*\n         ED    JDATE-1(7),DATE+1                                   FCI*\n*                                                                  FCI*\nDATERTN  BR    R7                      RETURN TO MAINLINE          FCI*\n*                                                                  FCI*\nOUTT     MVC   CDAY(3),=CL3'???'                                   FCI*\n         B     MOVEJD                                              FCI*\n         SPACE 2                                                   FCI*\n***********************************************************************\n* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES       FCI*\n*                                                                  FCI*\nXMONMSK  DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)  L         FCI*\n         DC    C' XX.XXX',C'  '                          E  F      FCI*\n         DC    CL2' ',C':'                               A  I  T   FCI*\n         DC    CL2' ',C':'                               V  E  O   FCI*\n         DC    CL2' ',C' '                               E  L  G   FCI*\n         DC    CL3' ',C' '                                  D  E   FCI*\n         DC    CL3' ',C' '                                  S  T   FCI*\n         DC    CL2' ',C',19'                                   H   FCI*\n         DC    CL2'  ',C' '                                    E   FCI*\n*                                                              R   FCI*\n***********************************************************************\nMVCLEN   EQU   *-XMONMSK                                           FCI*\n*                                                                  FCI*\n***********************************************************************\nDAYTAB   DC    C'TUEWEDTHRFRISATSUNMON'                            FCI*\nMONTAB   DC    C'DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJAN'             FCI*\n         EJECT ,                                                   FCI*\n***********************************************************************\n* ALLOC HARDCOPY TO HASPPRNT DDNAME                                FCI*\n*                                                                  FCI*\n***********************************************************************\nALLOCHC  MVC   DYNALLOC(S99LENG),S99RBPTR COPY DYN ALLOCATION LIST.\n         LA    R1,P99RB           RELOCATE THE LIST ADDRESSES.     FCI*\n         STCM  R1,B'0111',P99RBPTR+1  *                            FCI*\n         LA    R1,P99TUPL             *                            FCI*\n         ST    R1,P99TXTPP            *                            FCI*\n         LA    R1,P99TUKY1            *                            FCI*\n         STCM  R1,B'0111',P99TUPL+1   *                            FCI*\n         LA    R1,P99TUKY2            *                            FCI*\n         STCM  R1,B'0111',P99TUPL+5   *                            FCI*\n         LA    R1,P99TUKY3            *                            FCI*\n         STCM  R1,B'0111',P99UPLL+1   *                            FCI*\n*  PROCESS PARMS..........                                         FCI*\n         LH    R1,QPLNG2        GET LENGTH OF SECOND PARM          FCI*\n         CH    R1,=H'1'         LENGTH OF ONE?                     FCI*\n         BNE   NOCLSCHG         NO..NO CHANGE OF SYSOUT CLASS      FCI*\n         CLI   QPPARM2,C'A'     IS IT ALPHA                        FCI*\n         BL    NOCLSCHG                                            FCI*\n         MVC   P99SYSOC,QPPARM2 MOVE IN PARM FOR SYSOUT CLASS      FCI*\nNOCLSCHG CLI   QPPARM3,C' '     ANY DEST SPECIFIED                 FCI*\n         BE    NODEST                                              FCI*\n         MVC   P99DEST,QPPARM3  MOVE IN DEST                       FCI*\n         MVC   P99DESTL,QPLNG3  MOVE IN LENGTH                     FCI*\n         MVI   P99EPARM,X'00'   SAY CLASS IS NOT LAST PARM         FCI*\n*  DO THE ALLOCATE                                                 FCI*\nNODEST   LA    1,DYNALLOC         ADDR OF PARM LIST FOR DYNALLOC.  FCI*\n         DYNALLOC                                                  FCI*\n         LTR   R15,R15            CHK RETURN CODE                  FCI*\n         BNZ   CANTALLC           NO CAN DO..POST MESSAGE          FCI*\n         LA    R6,HASPPRNT        ADDRESS OF OUTPUT DCB.           FCI*\n         USING IHADCB,R6          ADDRESSABILITY TO OUTPUT DCB.    FCI*\n         LA    R1,DBLWORK         BUILD                            FCI*\n         MVI   0(R1),X'80'          ONLY ENTRY IN LIST             FCI*\n         OPEN  ((6),(OUTPUT)),MF=(E,(1))  OPEN THE FILE            FCI*\n         TM    DCBOFLGS,X'10'     CHECK FOR SUCCESSFUL OPEN.       FCI*\n         DROP  R6                 ELIMINATE DCB ADDRESSABILITY.    FCI*\n         BZ    PRNTBAD            BYPASS SWITCH SETTING IF BAD OPEN.\n         OI    QPFLAG,HARDCPY     INDICATE HARDCPY FILE AVAILABLE. FCI*\n         MVC   QDTLINE(L'MSGSTART),MSGSTART  MOVE IN START MSG     FCI*\n         MVC   M1CLASS,P99SYSOC   MOVE IN SYSOUT CLASS             FCI*\n         MVC   M1DEST,P99DEST                                      FCI*\n         CLI   M1DEST,C' '        ANY DEST?                        FCI*\n         BNE   PRNTOKAY                                            FCI*\n         MVC   M1DEST,=CL8'LOCAL' SAY LOCAL                        FCI*\n         B     PRNTOKAY           BYPASS TPUT ERROR MSG.           FCI*\n         EJECT ,                                                   FCI*\nPRNTBAD  QTILT 'SORRY...UNABLE TO ALLOC/OPEN HASPPRNT FOR HARDCOPY'\nPRNTOKAY BR    R7                 RETURN                           FCI*\n         SPACE 2                                                   FCI*\nMSGSTART DC    CL63'PRINT STARTED; SYSOUT=X,DEST=XXXXXXXX'         FCI*\n         EJECT ,                                                   FCI*\n***********************************************************************\n*        FORMULATE TEXT FOR SVC99 ALLOCATE FAILURE                 FCI*\n***********************************************************************\n         SPACE 3                                                   FCI*\nCANTALLC MVC   QDTLINE,QBLANK     CLEAR OUT LINE                   FCI*\n         CLC   P99ERROR,=X'046C'  WAS IT 'RMT NOT DEF TO JES2'?    FCI*\n         BE    BADRMT             YES..POST MSG AND EXIT           FCI*\n*                                                                  FCI*\n         MVC   QDTLINE(L'MSGERR),MSGERR                            FCI*\n         CVD   R15,DBLWORK        CONVERT SVC 99 RETURN CODE       FCI*\n         MVC   M2RC,=X'40202020'   TO NICE PRINTABLE DECIMAL       FCI*\n         ED    M2RC,DBLWORK+6                                      FCI*\n*                                                                  FCI*\n         UNPK  M2ERC(5),P99ERROR(3) CONVERT DYNAM ALLOC ERR CODE   FCI*\n         NC    M2ERC,HEXMASK         TO PRINTABLE HEXADECIMAL      FCI*\n         TR    M2ERC,HEXTAB          AND FIX IT UP PRETTY          FCI*\n         MVI   M2ERC+4,C' '                                        FCI*\n*                                                                  FCI*\n         UNPK  M2INFO(5),P99INFO(3) CONVERT DYNAM ALLOC INFO       FCI*\n         NC    M2INFO,HEXMASK        CODE TO PRNTABLE HEX          FCI*\n         TR    M2INFO,HEXTAB         AND FIX IT UP PRETTY          FCI*\n         MVI   M2INFO+4,C' '                                       FCI*\n         B     GOTMSG                   AND GO POST THE MESSAGE    FCI*\n*                                                                  FCI*\nBADRMT   MVC   QDTLINE(L'MSGNRMT),MSGNRMT  MOVE IN NO SUCH REMOTE MSG\n         MVC   MREMOTE,QPPARM3         MOVE IN REMOTE ASKED FOR    FCI*\n         B     GOTMSG                   AND GO POST THE MESSAGE    FCI*\n         SPACE 2                                                   FCI*\nHEXTAB   DC    C'0123456789ABCDEF'                                 FCI*\nHEXMASK  DC    X'0F0F0F0F0F0F0F0F'                                 FCI*\nMSGNRMT  DC    C'REMOTE XXXXXXXX NOT DEFINED TO JES2; PRINT BYPASSED'\nMSGERR   DC    C'CANT ALLOC SYSOUT FOR PRINT; DARC= XXXX INFO= XXXX R15X\n               = XXXX '                                            FCI*\n***********************************************************************\n         EJECT ,                                                   FCI*\n         LTORG                                                     FCI*\n         SPACE 2                                                   FCI*\n         DS    0F                                                  FCI*\n*                                          SVC 99 REQUEST BLOCK  PTR\nS99RBPTR DC    X'80',AL3(S99RB)                                    FCI*\n*                                          SVC 99 REQUEST BLOCK    FCI*\nS99RB    DS    0F                                                  FCI*\nS99RBLN  DC    AL1(20)                     LENGTH=20 BYTES         FCI*\nS99VERB  DC    X'01'                       VERB CODE=01 (DSNAME ALLOC)\nS99FLAG1 DC    X'1000'                     DONT USE EXISTING ALLOC FCI*\nS99ERROR DC    AL2(0)                              ERROR CODE      FCI*\nS99INFO  DC    AL2(0)                              INFO  CODE      FCI*\nS99TXTPP DC    A(S99TUPL)                 POINTER TO TEXT UNIT POINTERS\nS99RSVD1 DC    A(0)                          RESERVED              FCI*\nS99FLAG2 DC    A(0)                          FLAGS 2               FCI*\nS99TUPL  DC    A(S99TUKY1)                TEXT UNIT POINTERS       FCI*\nS99EPARM DC    X'80',AL3(S99TUKY2)        LAST PARM IF NO DEST=    FCI*\n         DC    X'80',AL3(S99TUKY3)        LAST PARM IF DEST= GIVEN FCI*\nS99TUNIT DS    0F                                                  FCI*\n*                                                  DDNAME=HASPPRNT FCI*\nS99TUKY1 DC    X'0001',X'0001',X'0008',C'HASPPRNT'                 FCI*\n*                                                  SYSOUT=A        FCI*\nS99TUKY2 DC    X'0018',X'0001',X'0001'                             FCI*\n         AIF   (&QRNB).RNB10A                                     RNB10\nS99SYSOC DC    C'A'                                                FCI*\n         AGO   .RNB10B                                            RNB10\n.RNB10A  ANOP                                                     RNB10\nS99SYSOC DC    C'C'                                               RNB10\n.RNB10B  ANOP                                                     RNB10\n*                                      OPTIONAL    DEST=RMTXXX     FCI*\nS99TUKY3 DC    X'0058',X'0001'                                     FCI*\nS99DESTL DC    X'0000'   LENGTH OF DEST                            FCI*\nS99DEST  DC    CL8' '  DEST PARAMETER                              FCI*\n*                                                                  FCI*\n         DS    0D                                                  FCI*\nS99LENG  EQU   *-S99RBPTR              LENGTH OF WHOLE MAGILLA     FCI*\n         EJECT ,                                                   FCI*\n*.....................................................................*\n*.       DYNAMIC ALLOCATION REQUEST BLOCK TO FREE DDNAME HASPPRNT    .*\n*.....................................................................*\n         SPACE 3                                                   FCI*\n         DS    0F                  GET FULLWORD BOUNDARY           FCI*\nF99PTR   DC    X'80',AL3(F99RB)    THE POINTER TO THE MESS..       FCI*\n*                                                                  FCI*\nF99RB    DC    FL1'20'            LENGTH OF RB IN BYTES = 20       FCI*\n         DC    XL1'02'            VERB CODE=X'02'..FREE BY DDN     FCI*\n         DC    AL2(0)             FLAGS1..NO OPTIONS               FCI*\nF99RC    DC    XL2'0000'          ERROR CODE                       FCI*\nF99INFO  DC    XL2'0000'          INFO CODE                        FCI*\n         DC    AL4(F99TXPT)       ADDRESS OF TEXT UNITS            FCI*\n         DC    XL4'00'            RESERVED                         FCI*\n         DC    XL4'00'            FLAGS2                           FCI*\n         SPACE 2                                                   FCI*\nF99TXPT DC     AL4(F99TU1)        ADDR OF DSN TEXT UNIT            FCI*\n         DC    X'80',AL3(F99TU2) ADDR OF UNALLOC TEXT TU(LAST)     FCI*\n         SPACE 2                                                   FCI*\nF99TU1   DC    X'0001',X'0001',FL2'8',C'HASPPRNT' DDNAME           FCI*\nF99TU2   DC    X'0007',X'0000'        UNALLOC EVEN IF PERM ALLOC   FCI*\nF99LEN   EQU   *-F99PTR           LENGTH OF FILEDS                 FCI*\n         EJECT ,                                                   FCI*\n***********************************************************************\nWORK     DSECT                                                     FCI*\n         DS    CL72                                                FCI*\nOFFSET   DS    H                                                   FCI*\nLENGTH   DS    H                                                   FCI*\nFIELD    DS    CL8                                                 FCI*\nRPASS    DS    CL8                                                 FCI*\nDBLWORK  DC    D'0'                                                FCI*\nBINYEAR  DC    F'0'                                                FCI*\nBINDAYS  DC    F'0'                                                FCI*\nDATE     DC    F'0'                                                FCI*\nWORKWORD DC    2F'0'                                               FCI*\n***********************************************************************\n* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES       FCI*\n*                                                                  FCI*\nMONMSK   DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)            FCI*\n         DC    CL1' '                                    L         FCI*\nJDATE    DC    C'XX.XXX',C'  '                           E  F      FCI*\nTIMEHRS  DC    CL2' ',C'.'                               A  I  T   FCI*\nTIMMINS  DC    CL2' ',C'.'                               V  E  O   FCI*\nTIMSECS  DC    CL2' ',C' '                               E  L  G   FCI*\nCDAY     DC    CL3' ',C' '                                  D  E   FCI*\nCMON     DC    CL3' ',C' '                                  S  T   FCI*\nCDAYN    DC    CL2' ',C',19'                                   H   FCI*\nCYR      DC    CL2'  ',C' '                                    E   FCI*\n*                                                              R   FCI*\n***********************************************************************\nLEN      EQU   *-JDATE                                             FCI*\n         SPACE 2                                                   FCI*\n         DS    0F                                                  FCI*\nDYNALLOC DS    (S99LENG)XL1                                        FCI*\n         ORG   DYNALLOC                                            FCI*\n*                                          SVC 99 REQUEST BLOCK  PTR\nP99RBPTR DC    X'80',AL3(P99RB)                                    FCI*\n*                                          SVC 99 REQUEST BLOCK    FCI*\nP99RB    DS    0F                                                  FCI*\nP99RBLN  DC    AL1(20)                     LENGTH=20 BYTES         FCI*\nP99VERB  DC    X'01'                       VERB CODE=01 (DSNAME ALLOC)\nP99FLAG1 DC    X'1000'                     DONT USE EXISTING ALLOC FCI*\nP99ERROR DC    AL2(0)                              ERROR CODE      FCI*\nP99INFO  DC    AL2(0)                              INFO  CODE      FCI*\nP99TXTPP DC    A(P99TUPL)                 POINTER TO TEXT UNIT POINTERS\nP99RSVD1 DC    A(0)                          RESERVED              FCI*\nP99FLAG2 DC    A(0)                          FLAGS 2               FCI*\nP99TUPL  DC    A(P99TUKY1)                TEXT UNIT POINTERS       FCI*\nP99EPARM DC    X'80',AL3(P99TUKY2)        LAST PARM IF NO DEST=    FCI*\nP99UPLL  DC    X'80',AL3(P99TUKY3)        LAST PARM IF DEST= GIVEN FCI*\nP99TUNIT DS    0F                                                  FCI*\n*                                                  DDNAME=HASPPRNT FCI*\nP99TUKY1 DC    X'0001',X'0001',X'0008',C'HASPPRNT'                 FCI*\n*                                                  SYSOUT=A        FCI*\nP99TUKY2 DC    X'0018',X'0001',X'0001'                             FCI*\nP99SYSOC DC    C'A'                                                FCI*\n*                                      OPTIONAL    DEST=RMTXXX     FCI*\nP99TUKY3 DC    X'0058',X'0001'                                     FCI*\nP99DESTL DC    X'0000'   LENGTH OF DEST                            FCI*\nP99DEST  DC    CL8' '  DEST PARAMETER                              FCI*\n*                                                                  FCI*\n         ORG   DYNALLOC                                            FCI*\n         DS    0F                  GET FULLWORD BOUNDARY           FCI*\nFREEPTR  DC    X'80',AL3(FREERB)   THE POINTER TO THE MESS..       FCI*\n*                                                                  FCI*\nFREERB   DC    FL1'20'            LENGTH OF RB IN BYTES = 20       FCI*\n         DC    XL1'02'            VERB CODE=X'02'..FREE BY DDN     FCI*\n         DC    AL2(0)             FLAGS1..NO OPTIONS               FCI*\nFREERC   DC    XL2'0000'          ERROR CODE                       FCI*\nFREEINFO DC    XL2'0000'          INFO CODE                        FCI*\nFREETPTR DC    AL4(FREETXPT)      ADDRESS OF TEXT UNITS            FCI*\n         DC    XL4'00'            RESERVED                         FCI*\n         DC    XL4'00'            FLAGS2                           FCI*\n         SPACE 2                                                   FCI*\nFREETXPT DC    AL4(FREETU1)       ADDR OF DSN TEXT UNIT            FCI*\n         DC    X'80',AL3(FREETU2) ADDR OF UNALLOC TEXT TU(LAST)    FCI*\n         SPACE 2                                                   FCI*\nFREETU1  DC    X'0001',X'0001',FL2'8',C'HASPPRNT' DDNAME           FCI*\nFREETU2  DC    X'0007',X'0000'        UNALLOC EVEN IF PERM ALLOC   FCI*\n         ORG   ,                                                   FCI*\n*                                                                  FCI*\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON                                                   FCI*\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         SPACE 2                                                   FCI*\nMREMOTE  EQU   QDTLINE+7,8                                         FCI*\nM2ERC    EQU   QDTLINE+35,4                                        FCI*\nM2INFO   EQU   QDTLINE+46,4                                        FCI*\nM2RC     EQU   QDTLINE+56,4                                        FCI*\nM1CLASS  EQU   QDTLINE+22,1                                        FCI*\nM1DEST   EQU   QDTLINE+29,8                                        FCI*\n         EJECT ,                                                   FCI*\nPRINT    CSECT                                                     FCI*\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         DCBD  DSORG=(PS)                                          FCI*\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END  ,                                                    FCI*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QAUTHCK": {"ttr": 6404, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO ,                                                  ONL02\n&NAME    QAUTHCK &CODE                                            ONL02\n.*****************************************************************ONL02\n.*                                                                ONL02\n.* MACRO NAME = QAUTHCK                                           ONL02\n.*                                                                ONL02\n.* MODIFICATION ID = ONL02                                        ONL02\n.*                                                                ONL02\n.* DESCRIPTIVE NAME =  FUNCTION AUTHORIZATION CHECK REQUEST       ONL02\n.*                                                                ONL02\n.* AUTHOR = ROBERT M. JINKINS                                     ONL02\n.*          OAK RIDGE NATIONAL LABORATORY                         ONL02\n.*          BLDG. 4500-N  MS-259                                  ONL02\n.*          P.O. BOX X                                            ONL02\n.*          OAK RIDGE, TENNESSEE  37830                           ONL02\n.*                                                                ONL02\n.*          PHONE: (615) 574-7208/5300                            ONL02\n.*                  FTS  624-7208/5300                            ONL02\n.*                                                                ONL02\n.*          SHARE INSTALLATION CODE = OR                          ONL02\n.*                                                                ONL02\n.* DATE WRITTEN = JUNE 83                                         ONL02\n.*                                                                ONL02\n.* FUNCTION = THIS MACRO SETS THE AUTHORIZATION CHECK REQUEST     ONL02\n.*    CODE AND CALLS THE AUTHORIZATION ROUTINE (AUTH CSECT) TO    ONL02\n.*    VALIDATE THE REQUEST.                                       ONL02\n.*                                                                ONL02\n.* CHANGE ACTIVITY = NONE                                         ONL02\n.*                                                                ONL02\n.*****************************************************************ONL02\n         AIF   ('&CODE'(1,1) EQ '(').REG                          ONL02\n         AIF   ('&CODE' EQ 'QASTART').CODEOK                      ONL02\n         AIF   ('&CODE' EQ 'QAEND').CODEOK                        ONL02\n         AIF   ('&CODE' EQ 'QAALLOC').CODEOK                      ONL02\n         AIF   ('&CODE' EQ 'QABEFOPN').CODEOK                     ONL02\n         AIF   ('&CODE' EQ 'QAAFTOPN').CODEOK                     ONL02\n         AIF   ('&CODE' EQ 'QASPOOL').CODEOK                      ONL02\n         AIF   ('&CODE' EQ 'QAPARSE').CODEOK                      ONL02\n         AIF   ('&CODE' EQ 'QAFINDJ').CODEOK                      ONL02\n         AIF   ('&CODE' EQ 'QAJCL').CODEOK                        ONL02\n         AIF   ('&CODE' EQ 'QAJLOG').CODEOK                       ONL02\n         AIF   ('&CODE' EQ 'QAJMSG').CODEOK                       ONL02\n         AIF   ('&CODE' EQ 'QALIST').CODEOK                       ONL02\n         AIF   ('&CODE' EQ 'QAJHIST').CODEOK                      ONL02\n         AIF   ('&CODE' EQ 'QADD').CODEOK                         ONL02\n         AIF   ('&CODE' EQ 'QAPDDB').CODEOK                       ONL02\n         AIF   ('&CODE' EQ 'QASYSOUT').CODEOK                     ONL02\n         AIF   ('&CODE' EQ 'QASYSLOG').CODEOK                     ONL02\n         MNOTE 8,'QAUTHCK MACRO - INVALID REQUEST CODE'           ONL02\n         MEXIT ,                                                  ONL02\n.REG     ANOP  ,                                                  ONL02\n&NAME    STC   &CODE(1),QACODE     SET AUTHORIZATION REQUEST CODE ONL02\n         AGO   .CALL                                              ONL02\n.CODEOK  ANOP  ,                                                  ONL02\n&NAME    MVI   QACODE,&CODE        SET AUTHORIZATION REQUEST CODE ONL02\n.CALL    ANOP  ,                                                  ONL02\n         L     R15,=V(AUTH)        ADDR OF AUTHORIZATION CHECK RTNONL02\n         BALR  R14,R15             CALL AUTHORIZATION CHECK RTN   ONL02\n         MEND  ,                                                  ONL02\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QCOMMON": {"ttr": 6406, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x943/\\x00\\x943/\\x14\\x06\\x028\\x028\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc4\\xc5\\xd3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-11-28T00:00:00", "modifydate": "1994-11-28T14:06:00", "lines": 568, "newlines": 568, "modlines": 0, "user": "SCHUDEL"}, "text": "         MACRO\n         QCOMMON &CSECT=NO\n         GBLB  &QPFK      PF-KEY OPTION. SEE QSTART MACRO          ICBC\n         GBLB  &QRACF     RACF OPTION. SEE QSTART MACRO           RNB03\n         GBLC  &QRACUSR   RACF USERID. SEE QSTART MACRO           RNB03\n         GBLC  &QCKPTV    VOLSER OF CHECKPOINT DATASET            UF042\n         GBLC  &QSIDS(7)  SYSTEM IDS FOR CPUS                     UF042\n         GBLC  &QDSPRFX   DEFINES HASPCKPT/HASPACE DSN PREFIX     CL006\n         GBLC  &QPF(24)   PFK DEFINITIONS                         UF042\n         GBLC  &Q1CMD     DEFAULT FIRST COMMAND                   UF042\n         LCLA  &Q1CMDL    DEFAULT FIRST COMMAND LENGTH            UF042\n         LCLA  &RACLEN    LENGTH OF RACF USERID                   RNB03\n         LCLA  &SIZE      BLOCK SIZE FOR CKPT DCB\n         AIF   ('&CSECT' EQ 'YES').CSECT\n         TITLE 'QUEUE COMMAND - COMMON AREA DSECT'\n***********************************************************************\n*                                                                     *\n*   QUEUE COMMAND - COMMON AREA DSECT                                 *\n*                                                                     *\n***********************************************************************\nQCOMMON  DSECT\n.CSECT   ANOP\n***********************************************************************\n*                                                                     *\n*   VECTOR TABLE - ADDRESSES OF AREAS IN QCOMMON                      *\n*                                                                     *\n***********************************************************************\nQVDSPL   DC    A(QDISPLAY)    PTR TO DISPLAY WORK AREA\nQVDAIR   DC    A(QDAIR)       PTR TO DAIR WORK AREA\nQVCKPT   DC    A(QCKPT)       PTR TO CKPT WORK AREA\nQVPRINT  DC    A(QCPRINT)     PTR TO PRINT WORK AREA               FCI*\n         DC    3F'0'          SPARE POINTERS RESERVED FOR FUTURE\nQFRSTSA  DC    A(0)           ADDRESS OF FIRST SAVE AREA\n***********************************************************************\n*                                                                     *\n*   MISCELLANEOUS NUTS AND BOLTS                                      *\n*                                                                     *\n***********************************************************************\nQDWORK   DC    D'0'           SCRATCH DOUBLE WORD                 UF009\nQDWORD   DC    D'0'           SCRATCH DOUBLE WORD                 UF009\nQLOGON   DC    CL8' '         USERID  FROM PSCB                   ONL02\nQLOGONLN DC    F'0'           LENGTH OF USERID                    ONL02\nQCLASSH  DC    0H'0',X'00'    HALFWORD BOUNDARY\nQCLASS   DC    C' '           SEARCH CLASS\nQCODEH   DC    0H'0',X'00'    HALFWORD BOUNDARY\nQCODE    DC    X'00'          SEARCH FUNCTION CODE\nQSUBCMD  DC    A(0)           ADDR OF CURRENT SUBCOMMAND\nQOFF0    DC    H'0'           OFFSET TO SUBCOMMAND\nQLNG0    DC    H'0'           LENGTH OF SUBCOMMAND\nQSUBNAME DC    CL8' '         NAME OF SUBCOMMAND                  UF018\nQOFF1    DC    H'0'           OFFSET TO QPARM1\nQLNG1    DC    H'0'           LENGTH OF QPARM1\nQPARM1   DC    CL8' '         USER SUPPLIED PARAMETER #1\nQOFF2    DC    H'0'\nQLNG2    DC    H'0'\nQPARM2   DC    CL8' '                                 #2\nQOFF3    DC    H'0'\nQLNG3    DC    H'0'\nQPARM3   DC    CL8' '                                 #3\nQOFF4    DC    H'0'\nQLNG4    DC    H'0'\nQPARM4   DC    CL8' '                                 #4\n         SPACE 1                                                  ONL02\nQFLAG1   DC    AL1(*-*)       FLAG BYTE 1                         ONL02\nQFLG1IOE EQU   B'10000000'    I/O ERROR ON SPOOL READ             ONL02\nQFLG1DBC EQU   B'01000000'    ESTAE ENVIRONMENT ESTABLISHED       ONL02\nQFLG1LCL EQU   B'00100000'    Q20 - SEARCHING LOCAL JOE QUE (SP3) ONL02\nQFLG1SDS EQU   B'00010000'    SYSTEM DATA SET JOB (NO JCT)        ONL14\nQFLG1XA  EQU   B'00001000'    RUNNING ON XA SYSTEM                CL\nQFLG1USR EQU   B'00000100'    SEARCHING USER JOE QUE (SP4.2)      WGH42\nQFLG1BAT EQU   B'00000010'    RUNNING UNDER TSO BATCH             WGH\nQFLG1QUI EQU   B'00000001'    QUIET/TALK DISPLAY MODE             WGH\n         SPACE 1                                                  ONL02\nQFLAG2   DC    AL1(*-*)       FLAG BYTE 2                         ONL02\nQFLG2SPN EQU   B'10000000'    NOW SEARCHING SPIN IOT'S            ONL04\nQFLG2PDB EQU   B'01000000'    PDDB FOR DSID WAS FOUND             ONL04\nQFLG2STK EQU   B'00100000'    CMD RECEIVED FROM STACK             WGH\nQFLG2NSK EQU   B'00010000'    BYPASS STACK MODE FLAG              WGH\nQFLG2USR EQU   B'00001000'    SEARCHING USER JOE QUE (SP4.2)      WGH42\nQFLG2TC  EQU   B'00001000'    RUNNING UNDER TCAM RATHER THAN VTAM WGH\n         SPACE 1                                                  ONL02\nQOLDDSID DC    H'-1'          INITIALIZE TO HEX FFFF--OLD DSID      SBG\nQBLANK   DC    CL132' '       132 BLANKS                          UF003\nQFZONE   DC    C'0'           USED TO CLEAR QFZONES\nQFZONES  DC    C'00000000'    USED FOR NUMERIC CHECK\nQCOUNT   DC    PL3'0'         NUMBER OF ELEMENTS IN QUEUE\nQCOUNTA  DC    PL3'0'         NUMBER OF ELEMENTS IN AWAITING QUEUE\nQCOUNTE  DC    PL3'0'         NUMBER OF ELEMENTS IN EXECUTION QUEUE\nQCOUNTH  DC    PL3'0'         NUMBER OF ELEMENTS IN HOLD QUEUE\nQOFFS    DC    H'0'           START COLUMN FOR FIND\nQOFFE    DC    H'0'           END COLUMN FOR FIND\nQDELIMIT DC    C' '           DELIMITER\nQRSVD    DC    XL15'0'        RSVD\nQPJOBID  DC    F'0'           JOB ID FOR LISTDS     ** THESE TWO FIELDS\nQPDSID   DC    X'FFFF'        DATASET ID FOR LISTDS. MUST BE CONTIG.SBG\nQPOFFSET DC    H'0'           PRINT OFFSET FROM BEGINNING OF RECORD\nQPREC    DC    PL4'0'         CURRENT RECORD COUNT\nQPLNG    DC    H'0'           LENGTH OF COMPARE FIELD FOR FIND\nQPFIND   DC    CL58' '        COMPARE FIELD FOR FIND\nQSYSID   DC    CL8' '         SYSTEM ID TABLE\n* YOU MUST SUPPLY THE NAME OF EACH CPU IN YOUR COMPLEX\n         DC    CL8'&QSIDS(1)' SYSTEM ID FOR SYSTEM 1              UF042\n         DC    CL8'&QSIDS(2)'                      2              UF042\n         DC    CL8'&QSIDS(3)'                      3              UF042\n         DC    CL8'&QSIDS(4)'                      4              UF042\n         DC    CL8'&QSIDS(5)'                      5              UF042\n         DC    CL8'&QSIDS(6)'                      6              UF042\n         DC    CL8'&QSIDS(7)'                      7              UF042\n         DC    25CL8' '                            8-32\n         SPACE 1                                                  CL006\nQPREFIX  DC    CL8'&QDSPRFX'       DATA SET NAME PREFIX           CL006\n         EJECT\n******************************************************************ONL02\n*                                                                 ONL02\n*  FUNCTION AUTHORIZATION CHECKING FIELDS                         ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nQACODE   DC    AL1(*-*)            AUTHORIZATION CK REQUEST CODE  ONL02\nQAFLAGS  DC    AL1(QAFXDFLT)       AUTHORIZATION FLAGS            ONL02\nQASCFLGS DC    AL1(*-*)            SUB-COMMAND TYPE FLAGS         ONL02\nQASCUSER DC    AL1(*-*)            SUB-COMMAND USER FLAGS         ONL02\nQAHELP   DC    AL1(*-*)            HELP DISPLAY CONTROL FLAGS     ONL02\n         DC    X'00'               RESERVED                       ONL02\n         DC    X'00'               RESERVED                       ONL02\nQAUSER   DC    A(*-*)              USER FLAGS                     ONL02\nQAUSER1  DC    A(*-*)              USER WORD 1                    ONL02\nQAUSER2  DC    A(*-*)              USER WORD 2                    ONL02\n         SPACE 1                                                  ONL02\n*--------EXTRACT *-*,MF=L          EXTRACT PARAMETER LIST         ONL02\nQAEXTLST EXTRACT *-*,MF=L          EXTRACT PARAMETER LIST         ONL02\n         SPACE 2                                                  ONL02\n*                                                                 ONL02\n*  FUNCTION CODES (QACODE) USED FOR AUTHORIZATION CHECK REQUESTS  ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\nQANULL   EQU   0                   NULL REQUEST                   ONL02\nQASTART  EQU   1                   QUEUE COMMAND START-UP         ONL02\nQAEND    EQU   2                   QUEUE COMMAND TERMINATION      ONL02\nQAALLOC  EQU   3                   DATASET ALLOCATION/UNALLOCATIONONL02\nQABEFOPN EQU   4                   BEFORE CKPT/SPOOL OPEN         ONL02\nQAAFTOPN EQU   5                   AFTER CKPT/SPOOL OPEN          ONL02\nQASPOOL  EQU   6                   READSPC RTN (AFTER SPOOL I/O)  ONL02\nQAPARSE  EQU   7                   QUEUE SUBCOMMAND AUTHORIZATION ONL02\nQAFINDJ  EQU   8                   FINDJOB RTN FOR JOB            ONL02\nQAJCL    EQU   9                   JCL CMD FOR JOB                ONL02\nQAJLOG   EQU   10                  JLOG CMD FOR JOB               ONL02\nQAJMSG   EQU   11                  JMSG CMD FOR JOB               ONL02\nQALIST   EQU   12                  LIST CMD FOR JOB AND DSID      ONL02\nQAJHIST  EQU   13                  JHIST CMD FOR JOB              ONL02\nQADD     EQU   14                  DD CMD FOR JOB                 ONL02\nQAPDDB   EQU   15                  PDDB CMD FOR JOB               ONL02\nQASYSOUT EQU   16                  DEL/REQ/CAN CMDS FOR JOB       ONL02\nQASYSLOG EQU   17                  AUTHORIZATION TO LOOK AT SYSLOGONL02\n         EJECT ,                                                  ONL02\n*                                                                 ONL02\n*  QAFLAGS BIT DEFINITIONS  (AUTHORIZATION FLAGS)                 ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\nQAFXACTV EQU   B'10000000'         MAY DISPLAY ACTIVE LISTS       ONL02\nQAFXBLOG EQU   B'01000000'         MAY DISPLAY BACKLOG LISTS      ONL02\nQAFXSSSM EQU   B'00100000'         MAY USE CAN, DEL, AND REQ      ONL02\nQAFXSLOG EQU   B'00010000'         MAY LOOK AT SYSLOG             ONL02\nQAFXEXEC EQU   B'00001000'         MAY ISSUE TSO CMDS FROM QUEUE  ONL02\nQAFXOPER EQU   B'00000100'         USER HAS OPER AUTHORITY        ONL02\nQAFXSYSP EQU   B'00000010'         USER HAS JES2 SYS-PGMR AUTH    ONL02\n         SPACE 1                                                  ONL02\nQAFXOPSP EQU   QAFXOPER+QAFXSYSP   COMBINATION OF OPER AND SYSP   ONL02\nQAFXDFLT EQU   QAFXACTV+QAFXBLOG+QAFXSSSM+QAFXEXEC  DEFAULT AUTH  WGH\n***XDFLT EQU   QAFXACTV+QAFXBLOG+QAFXSSSM+QAFXSLOG  DEFAULT AUTH  ONL02\n         SPACE 2                                                  ONL02\n*                                                                 ONL02\n*  QASCFLGS BIT DEFINITIONS  (SUB-COMMAND TYPE FLAGS)             ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\nQASXACTV EQU   QAFXACTV            ACTIVE DISPLAY                 ONL02\nQASXBLOG EQU   QAFXBLOG            BACKLOG DISPLAY                ONL02\nQASXSSSM EQU   QAFXSSSM            CMD USES SUB-SYSTEM INTERFACE  ONL02\nQASXSLOG EQU   QAFXSLOG            SYSLOG COMMAND                 ONL02\nQASXEXEC EQU   QAFXEXEC            GIVES CONTROL TO OTHER PROGAMS ONL02\nQASXOPER EQU   QAFXOPER            OPERATOR AUTHORITY NEEDED      ONL02\nQASXSYSP EQU   QAFXSYSP            JES2 SYS-PGMR AUTHORITY NEEDED ONL02\n         SPACE 2                                                  ONL02\n*                                                                 ONL02\n*  QAHELP BIT DEFINITIONS  (HELP DISPLAY CONTROL FLAGS)           ONL02\n*                                                                 ONL02\n         SPACE 1                                                  ONL02\nQAHXACTV EQU   QAFXACTV            SHOW HELP FOR ACTIVE DISPLAYS  ONL02\nQAHXBLOG EQU   QAFXBLOG            SHOW HELP FOR BACKLOG DISPLAYS ONL02\nQAHXSSSM EQU   QAFXSSSM            SHOW HELP FOR SSSM COMMANDS    ONL02\nQAHXSLOG EQU   QAFXSLOG            SHOW HELP FOR SYSLOG           ONL02\nQAHXEXEC EQU   QAFXEXEC            SHOW HELP FOR TSO/EXEC COMMANDSONL02\nQAHXOPER EQU   QAFXOPER            SHOW HELP FOR OPERATOR AUTH    ONL02\nQAHXSYSP EQU   QAFXSYSP            SHOW HELP FOR SYS PGMR AUTH    ONL02\n         EJECT ,                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   DATASET ALLOCATION FIELDS                                         *\n*      (ADAPTED FROM SYS1.MACLIB (IKJDAPL,IKJDAP08,0C,18))            *\n*                                                                     *\n***********************************************************************\nQDAIR    DS    0D             START OF DAIR WORK AREAS\nDAIRECB  DC    F'0'           ECB USED BY DAIR\nDAIRFLAG DC    X'00'          FLAG USED BY ALLOCATE SUBROUTINE\n         DC    XL3'0'         DEAD SPACE FOR ALLIGNMENT\n***********************************************************************\n*    THE DYNAMIC ALLOCATION INTERFACE ROUTINE (DAIR) PARAMETER LIST   *\n*    (DAPL) IS A LIST OF ADDRESSES PASSED FROM THE INVOKER TO DAIR    *\n*    VIA REGISTER 1                                                   *\n***********************************************************************\nDAPLUPT  DC    A(0)     PTR TO UPT\nDAPLECT  DC    A(0)     PTR TO ECT\nDAPLECB  DC    A(DAIRECB) PTR TO CP'S ECB\nDAPLPSCB DC    A(0)     PTR TO PSCB\nDAPLDAPB DC    A(0)     PTR TO DAIR PARAMETER BLOCK\n***********************************************************************\n*                                                                     *\n*   ALLOCATE DDNAME(W) DSNAME(X) SHR UNIT(Y) VOLUME(Z)                *\n*                                                                     *\n***********************************************************************\nDA08CD   DC    X'0008'  DAIR ENTRY CODE\nDA08FLG  DC    X'00'    FUNCTIONS TO BE PERFORMED WHEN RET CODE IS 0\n         DC    X'00'\nDA08DARC DC    H'0'     DYN ALLOC RETURN CODE\nDA08CTRC DC    H'0'     CATALOG RETURN CODE\nDA08PDSN DC    A(0)     POINTER TO DSNAME TO BE SEARCHED IN DSE\nDA08DDN  DC    CL8' '   DDNAME TO BE SEARCHED IN DSE\n* YOU MUST SUPPLY THE DEFAULT UNIT AND VOLUME SERIAL FOR YOUR SYSTEM\nDA08UNIT DC    CL8'SYSALLDA' UNITNAME FOR SYS1.HASPCKPT\nDA08SER  DC    CL8'&QCKPTV' VOLUME SERIAL FOR SYS1.HASPCKPT       UF042\nDA08BLK  DC    F'0'     DATA SET  AVERAGE RECORD LENGTH\nDA08PQTY DC    F'0'     PRIMARY SPACE QUANTITY\nDA08SQTY DC    F'0'     SECONDARY SPACE QUANTITY\nDA08DQTY DC    F'0'     DIRECTORY BLOCK QUANTITY\nDA08MNM  DC    CL8' '   MEMBER NAME\nDA08PSWD DC    CL8' '   PASSWORD\nDA08DSP1 DC    X'08'    DATA SET STATUS FLGS - SHR\nDA08DPS2 DC    X'08'    DATA SET DISPOSITION - KEEP\nDA08DPS3 DC    X'08'    DATA SET CONDITIONAL DISPOSITION - KEEP\nDA08CTL  DC    X'00'    FLAGS TO CONTROL ACTIONS TAKEN BY DAIR\n         DC    XL3'0'   RESERVED\nDA08DSO  DC    X'00'    DSORG\nDA08ALN  DC    CL8' '   ATTR-LIST-NAME                           C99236\n***********************************************************************\n*                                                                     *\n*   FREE DDNAME(XXXXXXXX)                                             *\n*                                                                     *\n***********************************************************************\nDA18CD   DC    X'0018'  DAIR ENTRY CODE\nDA18FLG  DC    X'00'    FUNCTIONS TO BE PERFORMED WHEN RET CODE IS 0\n         DC    X'00'\nDA18DARC DC    H'0'     DYNAMIC ALLOCATION RETURN CODE\nDA18CTRC DC    H'0'     CATALOG RETURN CODE AREA\nDA18PDSN DC    A(0)     POINTER TO DSNAME TO BE SEARCHED IN DSE\nDA18DDN  DC    CL8' '   DDNAME TO BE SEARCHED IN DSE\nDA18MNM  DC    CL8' '   MEMBER NAME\nDA18SCLS DC    CL2' '   SYSOUT CLASS DESIRED WHEN UNALLOCATING  A\n*                       SYSOUT DATA SET\nDA18DPS2 DC    X'08'    DATA SET DISPOSITION - KEEP\nDA18CTL  DC    X'10'    FLAGS FOR SPECIAL DAIR PROCESSING\nDA18JBNM DC    CL8' '   IGNORED AS OF OS VS/2 RELEASE 2       Y02670\n******************************************************************UF036\n*                                                                 UF036\n*   ALLOCATE DDNAME(W) SYSOUT(X)                                  UF036\n*                                                                 UF036\n******************************************************************UF036\nDA30CD   DC    X'0030'  DAIR ENTRY CODE                           UF036\nDA30FLG  DC    X'00'    FN TO BE PERFORMED WHEN RET CODE IS 0     UF036\n         DC    X'00'                                              UF036\nDA30DARC DC    H'0'     DYN ALLOC RETURN CODE                     UF036\n         DC    H'0'     RESERVED                                  UF036\nDA30PDSN DC    A(0)     POINTER TO DSNAME TO BE SEARCHED IN DSE   UF036\nDA30DDN  DC    CL8' '   DDNAME TO BE SEARCHED IN DSE              UF036\nDA30UNIT DC    CL8' '   UNIT NAME                                 UF036\nDA30SER  DC    CL8' '   VOLUME SERIAL                             UF036\nDA30BLK  DC    F'0'     DATA SET  AVERAGE RECORD LENGTH           UF036\nDA30PQTY DC    F'0'     PRIMARY SPACE QUANTITY                    UF036\nDA30SQTY DC    F'0'     SECONDARY SPACE QUANTITY                  UF036\nDA30PGNM DC    CL8' '   WRITER NAME                               UF036\nDA30FORM DC    CL4' '   FORM NUMBER                               UF036\nDA30OCLS DC    CL2' '   SYSOUT CLASS                              UF036\n         DC    X'00'    RESERVED                                  UF036\nDA30CTL  DC    X'00'    FLAGS TO CONTROL ACTIONS TAKEN BY DAIR    UF036\nDA30ALN  DC    CL8' '   ATTR-LIST-NAME                            UF036\n         SPACE 2                                                  CL006\n***********************************************************************\n*                                                                     *\n*        PARAMETER LIST FOR CALL OF IKJPARS                           *\n*                                                                     *\n***********************************************************************\n         SPACE 2\nPPLUPT   DC    A(*-*)              ADDR OF UPT                    CL006\nPPLECT   DC    A(*-*)              ADDR OF ECT                    CL006\nPPLECB   DC    A(*-*)              ADDR OF CP'S ECB               CL006\nPPLPCL   DC    A(*-*)              ADDR OF PARAMETER CONTROL LIST CL006\nPPLANS   DC    A(PARSBACK)         ADDR OF PDL POINTER            CL006\nPPLCBUF  DC    A(*-*)              ADDR OF THE COMMAND BUFFER     CL006\nPPLUWA   DC    A(0)                ADDR OF WORK AREA              CL006\nPARSBACK DC    A(*-*)              ADDR OF FIRST PDL              CL006\n         EJECT\n***********************************************************************\n*                                                                     *\n*   CHECKPOINT WORK AREAS                                             *\n*                                                                     *\n***********************************************************************\n* NOTE - BLOCKSIZES ARE INSTALLATION DEPENDENT\nQCKPT    DS    0D\nQCTGML   DC    A(0)                NUMBER OF TGM BLOCKS           UF046\nQCTGMA   DC    A(0)                ADDRESS OF TGM IOAREA          UF046\nQCTNUMTG DC    A(0)                NUMBER OF TRACK GROUPS ON      CL001+\n                                    ACTIVE VOLUMES                CL001\nQCJIXL   DC    A(0)                                               UF020\nQCJIXA   DC    A(0)           ADDRESS OF JIX IOAREA               UF020\nQCJQEXA  DC    A(0)                ADDR OF JQE EXTENSIONS\nQCTDASL  DC    A(0)                NUMBER OF DAS CHKPT BLOCKS\nQCTDASA  DC    A(0)                ADDR OF FIRST DAS BLOCK\nQCPSTL   DC    A(0)                NUMBER OF PST CHKPT BLOCKS\nQCPSTA   DC    A(0)                ADDR OF FIRST PST BLOCK\nQCJQTA   DC    A(0)           ADDRESS OF JQT IOAREA\nQCJOTA   DC    A(0)           ADDRESS OF JOT IOAREA\nQCJCTA   DC    A(0)           ADDRESS OF JCT IOAREA\nQCIOTA   DC    A(0)           ADDRESS OF IOT IOAREA\nQCBLKA   DC    A(0)           ADDRESS OF DATASET BLOCK IOAREA\nQCJQTL   DC    F'0'           ADDRESS OF FIRST CKPT REOCRD\nQCJQEA   DC    A(0)           ADDR OF CURRENT JQE\nQCJOTL   DC    F'0'           COUNT OF RECORDS ON CKPT DS\nQCDECBPT DC    A(0)           ADDRESS OF DECB WORK AREA           UF039\nQCPDDB1  DC    F'0'           OFFSET IN IOT TO FIRST PDDB\nQCTRAK   DS    0F             DISK ADDR IN THE FORM MTTR\nQCTRAKM  DC    X'0'           EXTENT NUMBER\nQCTRAKTT DC    X'0000'        ABSOLUTE TRACK NUMBER\nQCTRAKR  DC    X'0'           RECORD NUMBER\n         DC    X'0'           EXTRA SPACE NEEDED FOR HEX CONVERT\nQCDAD    DS    0XL8           DISK ADDR IN THE FORM MBBCCHHR\nQCDADM   DC    X'0'           EXTENT NUMBER\nQCDADBB  DC    X'0000'        BIN NUMBER\nQCDADCC  DC    X'0000'        CYLINDER NUMBER\nQCDADHH  DC    X'0000'        HEAD NUMBER\nQCDADR   DC    X'0'           RECORD NUMBER\n         DC    XL3'0'         DEAD SPACE TO GET BACK TO FULLWORD\nQCJQHEAD DC    A(0)           OFFSET TO JQE HEADERS\n         DS    0F\nQCCREC   DC    PL4'0'         CURRENT RECORD NUMBER\nQCCPTR   DC    A(0)           CURRENT TABLE ADDRESS\nQCHREC   DC    PL4'0'         HIGHEST RECORD NUMBER\nQCHPTR   DC    A(0)           HIGHEST TABLE ADDRESS\nQCSTART  DC    A(0)           ADDRESS OF TABLE START\nQCEND    DC    A(0)           ADDRESS OF TABLE END\nQCHLINE  DS    0CL80          HEADING LINE FOR LISTDS\n         DC    C'JOB '\nQCJNAME  DC    CL8' '         JOBNAME\n         DC    C', DSID '\nQCDSNO   DC    CL8' '         DATASET ID NUMBER\n         DC    C', REC #       1'\n         DC    CL40' '\nQCLRECL  DC    H'0'           LRECL FOR SAVE\nQCRECFM  DC    X'0'           RECFM FOR SAVE\nQCSPOOLS DC    36F'0'         LIST OF DCBS FOR HASPACE\nQCTRKCYL DC    36F'0'         LIST OF TRACKS/CYLINDER FOR EACH DCB\n         EJECT\n&SIZE    SETA  4096\n*ASPCKPT DCB   DDNAME=HASPCKPQ,DSORG=PS,MACRF=(RCP),                  X\n*              RECFM=U,BLKSIZE=&SIZE,NCP=4                        UF039\nHASPCKPT DCB   DDNAME=HASPCKPQ,DSORG=PS,MACRF=(RCP),                   X\n               RECFM=U,BLKSIZE=&SIZE,NCP=25                    WGH\n         EJECT\n*ASPACE  DCB   DDNAME=HASPACQ1,DSORG=DA,MACRF=(RIC),OPTCD=A,          X\n*              RECFM=F\nHASPACE  DCB   DDNAME=HASPACQ1,DSORG=DA,MACRF=(RIC),OPTCD=A,           X\n               RECFM=F\nQCDCBL   EQU   *-HASPACE      LENGTH OF HASPACE DCB\n         EJECT\n*COUT    DCB   DDNAME=HASPSAVE,DSORG=PS,MACRF=(PM),BUFL=8192\nQCOUT    DCB   DDNAME=HASPSAVE,DSORG=PS,MACRF=(PM),BUFL=8192\n         EJECT\n*        READ  HDECB1,SF,HASPCKPT,,&SIZE,MF=L\n         READ  HDECB1,SF,HASPCKPT,,&SIZE,MF=L\nHDECB1L  EQU   *-HDECB1            LENGTH OF DECB                 UF039\n         SPACE 3\n*        READ  HDECB2,DI,HASPACE,,0,0,QCDAD,MF=L\n         READ  HDECB2,DI,HASPACE,,0,0,QCDAD,MF=L\n         SPACE 3\n*COPEN   OPEN  (QCOUT,OUTPUT),MF=L\nQCOPEN   OPEN  (QCOUT,OUTPUT),MF=L\n         SPACE 3\n*OCKPT   OPEN  (HASPCKPT),MF=L\nHOCKPT   OPEN  (HASPCKPT),MF=L\n         EJECT\n***********************************************************************\n*                                                                  FCI*\n*   PRINT WORKAREA                                                 FCI*\n*                                                                  FCI*\n***********************************************************************\nQCPRINT  DS    0D                                                  FCI*\nQPOFF0   DC    H'0'           OFFSET TO SUBCOMMAND                 FCI*\nQPLNG0   DC    H'0'           LENGTH OF SUBCOMMAND                 FCI*\nQPSUBNME DC    CL8'PRINT'     NAME OF SUBCOMMAND                   FCI*\nQPOFF1   DC    H'0'           OFFSET TO QPPARM1                    FCI*\nQPLNG1   DC    H'0'           LENGTH OF QPPARM1                    FCI*\nQPPARM1  DC    CL8' '         USER SUPPLIED PARAMETER #1           FCI*\nQPOFF2   DC    H'0'                                                FCI*\nQPLNG2   DC    H'0'                                                FCI*\nQPPARM2  DC    CL8' '                                 #2           FCI*\nQPOFF3   DC    H'0'                                                FCI*\nQPLNG3   DC    H'0'                                                FCI*\nQPPARM3  DC    CL8' '                                 #3           FCI*\nQPOFF4   DC    H'0'                                                FCI*\nQPLNG4   DC    H'0'                                                FCI*\nQPPARM4  DC    CL8' '                                 #4           FCI*\nQPHEAD1  DC    CL1'1'                                              FCI*\n*        123456789.123456789.123456789.123456789.'                 FCI*\n DC CL40'QUEUE HARDCOPY LOG  USER=XXXXXXXX  DATE='                 FCI*\n DC CL40'YY.DDD  HH:MM:SS DAY MON DD,19XX   XXXXX'                 FCI*\n DC CL52' '                                                       UF003\n         ORG   QPHEAD1+26                                          FCI*\nQPUSER   DS    CL8           FOR USERID                            FCI*\n         ORG   QPHEAD1+41                                          FCI*\nQPDATE   DS    CL32                                                FCI*\n         ORG   QPHEAD1+75                                          FCI*\nQPPAGE#  DS    CL6                                                 FCI*\n         ORG   ,                                                   FCI*\nQPHEAD2  DS    0CL81                                               FCI*\n         DC    C' ',80C'-'                                         FCI*\n         DC    52C' '                                             UF003\nQPDETAIL DC    CL1' '         ASA CONTROL CHARACTER                FCI*\nQPLINE   DC    CL132' '       TO HOLD PRINT LINE                  UF003\nQPPAGE   DC    PL3'1'                                              FCI*\nQPFLAG   DC    XL1'00'                                             FCI*\nHARDCPY  EQU   X'80'                                               FCI*\nQPRSAVE  DS    CL63           SAVE AREA TO HOLD SUBTITLE INFO      FCI*\nQPPWORK  DC    6F'0'          SPARE WORK ZONE                      FCI*\n         DS    0F                                                  FCI*\n*HASPPRNT DCB  DDNAME=HASPPRNT,DSORG=PS,MACRF=(PM),                FCI*\n*              RECFM=FA,LRECL=133,BLKSIZE=133                     UF003\nHASPPRNT DCB   DDNAME=HASPPRNT,DSORG=PS,MACRF=(PM),                FCI*X\n               RECFM=FA,LRECL=133,BLKSIZE=133                     UF003\n         EJECT ,                                                  ONL02\n         AIF   (NOT &QRACF).RNB03A                                RNB03\n******************************************************************RNB03\n*                                                                *RNB03\n*   RACF FIELDS                                                  *RNB03\n*                                                                *RNB03\n******************************************************************RNB03\n         SPACE 1                                                  RNB03\n&RACLEN  SETA  K'&QRACUSR       LENGTH OF NEW RACF USERID         RNB03\nQNEWUSR  DC    AL1(&RACLEN),CL8'&QRACUSR'  NEW USERID             RNB03\nQUSRSAV  EQU   *,9                         OLD USERID             RNB03\n         DC    AL1(0),CL8' '               OLD USERID             RNB03\nQRACNMXP DC    CL8'QUEUEXP'       ENTITY FOR RACHECK FOR XP CMD   RNB03\nQRACNMXD DC    CL8'QUEUEXDS'      ENTITY FOR RACHECK FOR XDS CMD  RNB03\n         SPACE 1                                                  RNB03\n*RACHECK RACHECK ENTITY=QRACNMXP,CLASS='APPL',ATTR=READ,          RNB03\n*              APPL=QRACNMXP,MF=L                                 RNB03\nQRACHECK RACHECK ENTITY=QRACNMXP,CLASS='APPL',ATTR=READ,          RNB03X\n               APPL=QRACNMXP,MF=L                                 RNB03\n.RNB03A  ANOP                                                     RNB03\n***********************************************************************\n*                                                                     *\n*   LIST FORM OF TPUT/TGET                                            *\n*                                                                     *\n***********************************************************************\nQTPUT    TPUT  QDSCREEN,QDSLNG,FULLSCR,MF=L\nQTGET    TGET  QDREPLY,63,MF=L\n         EJECT\n***********************************************************************\n*                                                                     *\n*   DISPLAY WORK FIELDS                                               *\n*                                                                     *\n***********************************************************************\nQDISPLAY DS    0D             START OS DISPLAY WORK AREA\nQDOSZR0  DC    F'0'           ORIG SCREEN DEPTH                   UF003\nQDOSZR1  DC    F'0'           ORIG SCREEN LINESZ                  UF003\nQDLNELEN DC    H'80'          LENGTH OF DISPLAY LINE              UF003\nQDLNES   DC    PL2'21'        LINES PER SCREEN                    UF003\nQDSCRLEN DC    AL2(21*80)     LEN OF DISPLAY AREA                 UF003\nQDSCRPLN DC    AL2(21*80+QDLINE1-QDSCREEN)   WHAT A PAIN          UF003\n         DS    0D                                                 UF003\n         AIF   (NOT &QPFK).PFK1\nPFREPLY  DS    0CL69                                               ICBC\nPFCODE   DC    CL6' '                                              ICBC\nPFTXT    DC    CL63' '                                             ICBC\n.PFK1    ANOP\nQDMSGA   DC    A(0)           ADDRESS OF MESSAGE TO BE DISPLAYED\nQDMLNG   DC    H'0'           MESSAGE LENGTH\nQDMSG    DC    CL80' '        WORK AREA FOR BUILDING OUTPUT LINE\n&Q1CMDL  SETA  K'&Q1CMD       LENGTH OF FIRST COMMAND             UF042\nQDRLNG   DC    AL2(&Q1CMDL)   REPLY LENGTH                        UF018\nQDREPLY  DC    CL63'&Q1CMD'   TERMINAL USER REPLY                 UF018\n         DC    C' '           RESERVED\nQDNEXT   DC    H'0'           CURRENT LINE NUMBER ON SCREEN\n         DC    C' '           RESERVED\nQDSCREEN DS    0C             DISPLAY SCREEN\n         DC    X'27'          CONTROL                             UF003\nQDSCRO1  DC    X'F5'          ERASE/WRITE ALTERNATE (132 COL)     UF003\n         DC    X'C1115D7F1140403C404000' CLEAR SCREEN\n         DC    C'QUEUE COMMAND -' TITLE LINE\n         DC    X'1DC8'        MARK NEXT FIELD AS INPUT FIELD\nQDTLINE  DC    CL63' '        SUBTITLE\n         DC    X'1DF0'        TERMINATE INPUT FIELD\n         DC    X'11'          SET BUFFER ADDRESS                  UF003\nQDSCRO2  DC    X'C150'        (2,1)                               UF003\nQDHLINE  DC    CL80' '        HEADING LINE\n         DC    X'11'          SET BUFFER ADDRESS                  UF003\nQDSCRO3  DC    X'5CF0'        (24,1)                              UF003\n         DC    C'REPLY -'     REPLY PROMPT\n*        DC    X'1DC8115DF71DF0' 3270 CONTROL CHARACTERS          UF003\n         DC    X'1DC8'        MARK NEXT FIELD AS INPUT FIELD      UF003\n         DC    X'13'          SET CURSOR ADDRESS                  UF003\n         DC    X'11'          SET BUFFER ADDRESS                  UF003\nQDSCRO4  DC    X'5DF7'        (24,72)                             UF003\n         DC    X'1DF0'        TERMINATE INPUT FIELD               UF003\nQDPLUS   DC    C' '           INDICATES MORE TO BE DISPLAYED\n         DC    X'11'          SET BUFFER ADDRESS                  UF003\nQDSCRO5  DC    X'C260'        (3,1)                               UF003\nQDLINE1  DC    40CL80' '      MESSAGE TEXT AREA (FOR 40X80 MAX)   UF003\n*DLINE1  DC    CL80' '        FIRST MESSAGE LINE ON SCREEN        UF003\n*        DC    20CL80' '      NEXT 20 LINES                       UF003\n*        DC    X'115CF813'    TCAM REQUIRES CURSOR AT END OF STR  UF003\nQDLINEND EQU   *              END OF LINE BUFFERS                 UF003\nQDSLNG   EQU   *-QDSCREEN     LENGTH OF SCREEN BUFFER\nQDOVER   DC    X'00'          PAGE OVERFLOW INDICATOR\n         SPACE 3                                                  UF043\n         AIF  (NOT &QPFK).PFK3                                     ICBC\n* PF-KEY DEFINITIONS                                               ICBC\nQDPFKTAB EQU   *                                                   ICBC\n         DC    CL8'&QPF(1)'                                       UF043\n         DC    CL8'&QPF(2)'                                       UF043\n         DC    CL8'&QPF(3)'                                       UF043\n         DC    CL8'&QPF(4)'                                       UF043\n         DC    CL8'&QPF(5)'                                       UF043\n         DC    CL8'&QPF(6)'                                       UF043\n         DC    CL8'&QPF(7)'                                       UF043\n         DC    CL8'&QPF(8)'                                       UF043\n         DC    CL8'&QPF(9)'                                       UF043\n         DC    CL8'&QPF(10)'                                      UF043\n         DC    CL8'&QPF(11)'                                      UF043\n         DC    CL8'&QPF(12)'                                      UF043\n.PFK3    ANOP                                                      ICBC\n         EJECT\n***********************************************************************\n*                                                                     *\n*   SAVE AREA FOR GETMAIN/FREEMAIN                                    *\n*                                                                     *\n***********************************************************************\nQGETAREA DC    3F'0'\nQGETA1   EQU   QGETAREA+0\nQGETA2   EQU   QGETAREA+4\nQGETA3   EQU   QGETAREA+8\nQGETLNGH DC    F'65536',2F'0'\nQGETL2   EQU   QGETLNGH+4\nQGETL3   EQU   QGETLNGH+8\nQFREE    FREEMAIN L,LA=QGETLNGH,A=QGETAREA,MF=L\n***********************************************************************\n*                                                                     *\n*   STACK/GETLINE/PUTLINE CONTROL BLOCKS                     WGH      *\n*                                                                     *\n***********************************************************************\nSTKIOPL  DC    A(0,0,STKIOECB,STKBLOCK) GETLINE IOPL(UPT,ECT,ECB,GTPB)\nSTKIOECB DC    F'0'              STACK   ECB\nSTKBLOCK STACK   MF=L\nGETIOPL  DC    A(0,0,GETIOECB,GETBLOCK) GETLINE IOPL(UPT,ECT,ECB,GTPB)\nGETIOECB DC    F'0'              GETLINE ECB\nGETBLOCK GETLINE MF=L\nPUTIOPL  DC    A(0,0,PUTIOECB,PUTBLOCK) PUTLINE IOPL(UPT,ECT,ECB,PTPB)\nPUTIOECB DC    F'0'              PUTLINE ECB\nPUTBLOCK PUTLINE MF=L\nQOUTLINE DC    AL2(0,0),CL80' '\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QCXX0001": {"ttr": 6661, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "CKPT     TITLE 'QUEUE COMMAND - READ JES2 CKPT RECORDS'           ONL01\nCKPT     QSTART ,                  START CKPT CSECT ASSEMBLY      ONL01\n         USING QCKPT,R10      BASE REG FOR HASP WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n***********************************************************************\n*                                                                     *\n*   REPOSITION DATASET                                                *\n*                                                                     *\n***********************************************************************\n         POINT HASPCKPT,TIR3  POINT PAST SYNC RECORDS\n***********************************************************************\n*                                                                     *\n*   READ FIRST CHECKPOINT RECORD                                      *\n*                                                                     *\n***********************************************************************\n         L     R2,QCJQTL      ADDR OF IOAREA FOR CKPT HEADER REC\n         READ  HDECB1,SF,,(R2),MF=E                               UF039\n         CHECK HDECB1\n         AH    R2,=H'4096'    INCREMENT PAST HEADER RECORD        UF049\n***********************************************************************\n*                                                                     *\n*   READ REMAINDER OF CHECKPOINT RECORDS                              *\n*                                                                     *\n***********************************************************************\n         L     R3,QCJOTL      NUMBER OF RECORDS IN CKPT DATASET   UF039\n         BCTR  R3,0           DROP FOR PREVIOUSLY READ HEADER REC UF039\n***********************************************************************\n*LOOP    READ  HDECB1,SF,,(R2),MF=E                               UF039\n*        CHECK HDECB1                                             UF039\n*        AH    R2,=H'4096'    INCREMENT TO NEXT BUFFER            UF039\n*        BCT   R3,LOOP        READ NEXT RECORD.                   UF039\n***********************************************************************\nLOOP1    LR    R6,R3          ASSUME CAN READ ALL BLOCKS AT ONCE  UF039\n         SR    R0,R0          CLEAR FOR IC                        UF039\n         IC    R0,DCBNCP-IHADCB+HASPCKPT  GET NCP ALLOWED         UF039\n         CR    R6,R0                                              UF039\n         BNH   *+6                                                UF039\n         LR    R6,R0          LIMIT READS TO NCP MAX              UF039\n         LR    R4,R6          SAVE NUMBER OF READS TO DO          UF039\n         L     R7,QCDECBPT    POINTER TO DECB WORK AREA           UF039\nLOOP2    MVC   0(HDECB1L,R7),HDECB1  PRIME THE DECB               UF039\n         READ  (R7),SF,,(R2),MF=E  START A READ                   UF039\n         AH    R2,=H'4096'    BUMP TO NEXT BUFFER AREA            UF039\n         LA    R7,HDECB1L(,R7) BUMP TO NEXT DECB ADDR             UF039\n         BCT   R4,LOOP2       LOOP FOR MAX READS                  UF039\n         SPACE 1                                                  UF039\n         LR    R4,R6          NUMBER OF CHECKS TO DO              UF039\n         L     R7,QCDECBPT    POINT TO DECBS                      UF039\nLOOP3    CHECK (R7)           CHECK A READ                        UF039\n         LA    R7,HDECB1L(,R7) BUMP TO NEXT DECB                  UF039\n         BCT   R4,LOOP3       CHECK ALL READS                     UF039\n         SPACE 1                                                  UF039\n         SR    R3,R6          TOTAL TO READ - JUST READ           UF039\n         BP    LOOP1          CONTINUE IF MORE TO READ            UF039\n***********************************************************************\n*                                                                     *\n*   RETURN TO CALLER                                                  *\n*                                                                     *\n***********************************************************************\n         QSTOP\n         LTORG\n         DS    0F\nTIR3     DC    X'00000300'    POINT PAST SYNC RECORDS\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n*        IHADCB DSORG=PS                                          UF039\n         DCBD   DSORG=PS                                          UF039\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QPRBGEN": {"ttr": 6664, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO ,                                                  ONL01\n&LABEL   QPRBGEN &TYPE                                            ONL01\n         GBLB  &QBGEN                                             ONL01\n         AIF   ('&TYPE' EQ 'BEGIN').BEGIN                         ONL01\n         AIF   ('&TYPE' EQ 'DONE').DONE                           ONL01\n         MNOTE 4,'PRTGENB MACRO - INVALID OPERAND'                ONL01\n         MEXIT ,                                                  ONL01\n.BEGIN   ANOP  ,                                                  ONL01\n         PUSH  PRINT               SAVE CURRENT PRINT STATUS      ONL01\n         AIF   (&QBGEN).GEN                                       ONL01\n         PRINT NOGEN               DON'T EXPAND CNTL BLOCK MACROS ONL01\n         MEXIT ,                                                  ONL01\n.GEN     ANOP  ,                                                  ONL01\n         PRINT GEN                 EXPAND CNTL BLOCK MACROS       ONL01\n         MEXIT ,                                                  ONL01\n.DONE    ANOP  ,                                                  ONL01\n         POP   PRINT               RESTORE PRINT STATUS           ONL01\n         MEND  ,                                                  ONL01\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QSCE": {"ttr": 6666, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO ,                                                  ONL02\n&NAME    QSCE  &CMDTEXT,&ADDR,&FNC=0,&TYPE=0,&USER=0              ONL02\n.*****************************************************************ONL02\n.*                                                                ONL02\n.* MACRO NAME = QSCE                                              ONL02\n.*                                                                ONL02\n.* MODIFICATION ID = ONL02                                        ONL02\n.*                                                                ONL02\n.* DESCRIPTIVE NAME =  QUEUE SUB-COMMAND ENTRY                    ONL02\n.*                                                                ONL02\n.* AUTHOR = ROBERT M. JINKINS                                     ONL02\n.*          OAK RIDGE NATIONAL LABORATORY                         ONL02\n.*          BLDG. 4500-N  MS-259                                  ONL02\n.*          P.O. BOX X                                            ONL02\n.*          OAK RIDGE, TENNESSEE  37830                           ONL02\n.*                                                                ONL02\n.*          PHONE: (615) 574-7208/5300                            ONL02\n.*                  FTS  624-7208/5300                            ONL02\n.*                                                                ONL02\n.*          SHARE INSTALLATION CODE = OR                          ONL02\n.*                                                                ONL02\n.* DATE WRITTEN = JUNE 83                                         ONL02\n.*                                                                ONL02\n.* FUNCTION = THIS MACRO DEFINES PARSE TABLE ENTRIES FOR QUEUE    ONL02\n.*    SUB-COMMANDS.                                               ONL02\n.*                                                                ONL02\n.* SYNTAX:  LLLL QSCE XXXX,AAAA,FNC=CCCC,TYPE=TTTT,USER=UUUU      ONL02\n.*                                                                ONL02\n.*   WHERE:                                                       ONL02\n.*     LLLL - IS AN OPTIONL LABEL.                                ONL02\n.*     XXXX - IS THE SUB-COMMAND NAME.  THE NAME MUST BE          ONL02\n.*            ENCLOSED IN APOSTROPHES IF SPECIAL CHARACTERS       ONL02\n.*            ARE USED.  THE ASSEMBLED LENGTH MUST NOT EXCEED     ONL02\n.*            FOUR CHARACTERS.                                    ONL02\n.*     AAAA - IS A V-TYPE ADDRESS CONSTANT FOR THE ROUTINE        ONL02\n.*            WHICH WILL PROCESS THE SUB-COMMAND.                 ONL02\n.*     CCCC - IS AN OPTIONAL FUNCTION CODE USED BY THE SUB--      ONL02\n.*            COMMAND PROCESSING ROUTINE.                         ONL02\n.*     TTTT - IS AN OPTIONAL COMMAND TYPE CLASSIFICATION          ONL02\n.*            USED FOR SUB-COMMAND AUTHORIZATION.  THE            ONL02\n.*            EQUATES FOR USE WITH THIS OPERAND MAY BE            ONL02\n.*            FOUND IN THE QCOMMON DSECT.                         ONL02\n.*     UUUU - IS THE SAME AS 'TTTT' ABOVE, BUT IS INTENDED        ONL02\n.*            FOR AUTHORIZATION CHECKING SPECIFIC TO YOUR         ONL02\n.*            INSTALLATION.                                       ONL02\n.*                                                                ONL02\n.* CHANGE ACTIVITY = NONE                                         ONL02\n.*                                                                ONL02\n.*****************************************************************ONL02\n         LCLC  &CMD                                               ONL02\n&CMD     SETC  '&CMDTEXT'                                         ONL02\n         AIF   ('&CMD'(1,1) EQ '''').SKIP                         ONL02\n&CMD     SETC  ''''.'&CMDTEXT'.''''                               ONL02\n.SKIP    ANOP  ,                                                  ONL02\n&NAME    DC    0F'0',CL4&CMD,V(&ADDR),Y(&FNC),AL1(&TYPE,&USER)    ONL02\n         MEND  ,                                                  ONL02\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QSTART": {"ttr": 6668, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x93\\x10o\\x00\\x942/\\x16$\\x015\\x017\\x00\\x00\\xe2\\xc3\\xc8\\xe4\\xc4\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-04-16T00:00:00", "modifydate": "1994-11-18T16:24:00", "lines": 309, "newlines": 311, "modlines": 0, "user": "SCHUDEL"}, "text": "         MACRO\n&NAME    QSTART &MAIN=NO,&TYPE=NORMAL                             ONL01\n         GBLB  &QPFK          PF-KEY OPTION\n         GBLB  &QACF2         ACF2 AUTH CHECKING                   FCI*\n         GBLB  &QGEN          FORCE PRINT GEN OF MACRO EXPANSIONS UF019\n         GBLB  &QBGEN         FORCE PRINT GEN OF CNTL BLOCK MACROSONL01\n         GBLB  &QJTIP         JTIP PRODUCT INSTALLED              UF025\n         GBLB  &QDBC          DBC  PRODUCT INSTALLED              UF024\n         GBLB  &QRNB          ENABLES RNB-SPECIFIC CODE           RNB05\n         GBLB  &QRACF         RACF CHECKING                       RNB03\n         GBLC  &QRACUSR       NEW RACF USERID                     RNB03\n         GBLB  &QNERDC        ENABLES NERDC SPECIFIC CODE         UF032\n         GBLB  &QONL          ENABLES ONL SPECIFIC CODE           ONL06\n         GBLB  &LOCK          ENABLES LOCKHEED SPECIFIC CODE         CL\n         GBLC  &QDSPRFX       DEFINES HASPCKPT/HASPACE DSN PREFIX ONL09\n         GBLC  &QCKPTV        VOLSER OF CHECKPOINT VOLUME         UF042\n         GBLC  &QSIDS(7)      SMF ID'S OF SHARED CPU'S            UF042\n         GBLC  &Q1CMD         DEFAULT FIRST COMMAND               UF042\n         GBLC  &QPF(24)       PFK DEFINITIONS                     UF042\n.*                                                                UF019\n.* QPFK=0 SELECTS NO PF-KEY SUPPORT\n.* QPFK=1 SELECTS PF=KEY SUPPORT\n.*QACF2=0 SELECTS NO ACF2 CHECKING (SHOPS WITHOUT ACF2)            FCI*\n.*QACF2=1 SELECTS ACF2 AUTH TO SYSOUT VIA DSN='SYSOUT.LID.JOBNAME' FCI*\n.* QGEN=0 SELECTS PRINT NOGEN OPTION                              UF019\n.* QGEN=1 SELECTS PRINT GEN OPTION                                UF019\n.*QBGEN=0 SELECTS PRINT NOGEN OPTION FOR CONTROL BLOCK MACROS     ONL01\n.*QBGEN=1 SELECTS PRINT GEN OPTION FOR CONTROL BLOCK MACROS       ONL01\n.*QJTIP=0 SELECTS NO JTIP SUPPORT.                                UF025\n.*QJTIP=1 SELECTS SHOPS WITH JTIP INSTALLED                       UF025\n.* QDBC=0 SELECTS NO DBC SUPPORT.                                 UF024\n.* QDBC=1 SELECTS SHOPS WITH DBC INSTALLED                        UF024\n.*QRACF=0 SELECTS NO RACF SUPPORT                                 RNB03\n.*QRACF=1 SELECTS RACF SUPPORT FOR ACCESS TO THE SPOOL/CHECKPOINT RNB03\n.*        AND FOR THE XP AND XDS COMMANDS. DEFINE TWO RACF        RNB03\n.*        RESOURCES IN CLASS(APPL): QUEUEXP WILL CONTROL THE XP   RNB03\n.*        COMMAND AND QUEUEXDS WILL PROVIDE FURTHER CONTROL OVER  RNB03\n.*        THE XDS COMMAND. WHEN THE RACHECK FOR THE XDS COMMAND   RNB03\n.*        IS DONE, THE JOBNAME WILL BE SPECIFIED AS THE APPLID.   RNB03\n.*        THUS, IF YOU SPECIFY AUDIT(ALL) FOR APPL-QUEUEXDS YOU   RNB03\n.*        WILL KNOW WHAT DATA YOUR PRIVILEGED USERS HAVE BEEN     RNB03\n.*        EXAMINING (AUDITORS LIKE THIS). QRACF IS NOT SUPPORTED  RNB03\n.*        VIA THE SYSPARM OPTION.                                 RNB03\n.*QRACUSR IS USED IF YOUR SPOOL AND CHECKPOINT ARE DEFINED TO     RNB03\n.*        RACF WITH UACC=NONE. IT SPECIFIES A USERID THAT HAS     RNB03\n.*        ACCESS TO THE SPOOL AND CHECKPOINT WITH READ AUTHORITY. RNB03\n.*        DURING INITIALIZATION, THE SPECIFIED USERID WILL BE     RNB03\n.*        SUBSTITUTED INTO THE RACF ACEE SO THE USER OF QUEUE HAS RNB03\n.*        ACCESS TO THE SPOOL AND CHECKPOINT DATA SETS ONLY WHILE RNB03\n.*        THE QUEUE COMMAND IS IN PROGRESS. IF QRACF=1, THEN      RNB03\n.*        QRACUSR MUST BE SPECIFIED. IF YOUR SPOOL AND CHECKPOINT RNB03\n.*        HAVE A UACC OF >= READ, SPECIFY QRACUSR AS NULL ('') TO RNB03\n.*        BYPASS CHANGING THE ACEE USERID. QRACUSR IS NOT         RNB03\n.*        SUPPORTED VIA THE SYSPARM OPTION.                       RNB03\n.*                                                                UF019\n&QPFK    SETB  1\n&QACF2   SETB  0                                                   FCI*\n&QGEN    SETB  0                                                  ONL01\n&QBGEN   SETB  0                                                  ONL01\n&QJTIP   SETB  0                                                  UF025\n&QDBC    SETB  0                                                  UF024\n&QRNB    SETB  0                                                  RNB05\n&QRACF   SETB  0                                                  RNB03\n&QRACUSR SETC  'QCMD'                                             RNB03\n&QNERDC  SETB  0                                                  UF032\n&QONL    SETB  0                                                  ONL06\n&QDSPRFX SETC  'SYS1'                                             ONL09\n*&QCKPTV  SETC  '      '\n&QCKPTV  SETC  '      '                                           UF042\n&QSIDS(1) SETC 'S90E'                                             UF042\n&QSIDS(2) SETC '    '                                             UF042\n&QSIDS(3) SETC '    '                                             UF042\n&QSIDS(4) SETC '    '                                             UF042\n&QSIDS(5) SETC '    '                                             UF042\n&QSIDS(6) SETC '    '                                             UF042\n&QSIDS(7) SETC '    '                                             UF042\n&Q1CMD    SETC 'ST'                                               UF042\n&QPF(1)  SETC  'HELP'                                             UF043\n&QPF(2)  SETC  'DA'                                               UF043\n&QPF(3)  SETC  'END'                                              UF043\n&QPF(4)  SETC  'PRINT'                                            UF043\n&QPF(5)  SETC  'FIND'                                             UF043\n&QPF(6)  SETC  'DI'                                               UF043\n&QPF(7)  SETC  '-     21'                                         UF043\n&QPF(8)  SETC  '+     21'                                         UF043\n&QPF(9)  SETC  'DO'                                               UF043\n&QPF(10) SETC  'CO    1'                                          UF043\n&QPF(11) SETC  'CO    41'                                         UF043\n&QPF(12) SETC  'ST'                                               UF043\n.*                                                                UF019\n         LCLA  &CNT,&CTR,&STRNG,&LNTH,&SUB                        UF019\n         AIF   (K'&SYSPARM EQ 0).SYSPEND                          UF019\n         MNOTE *,'SYSPARM IS ''&SYSPARM'' '                       UF019\n         AIF   ('&SYSPARM'(1,1) EQ '(').MORE                      UF019\n  MNOTE 2,'SYSPARM SYNTAX ERROR--MUST BE ENCLOSED IN PARENS'      UF019\n         AGO   .SYSPEND                                           UF019\n.MORE    ANOP                                                     UF019\n&CNT     SETA  K'&SYSPARM                                         UF019\n&CTR     SETA  1                                                  UF019\n&STRNG   SETA  &CTR+1                                             UF019\n.LOOP    AIF   ('&SYSPARM'(&CTR,1) EQ ',' OR &CTR EQ &CNT).FOUND  UF019\n&CTR     SETA  &CTR+1                                             UF019\n         AGO   .LOOP                                              UF019\n.FOUND   ANOP                                                     UF019\n&LNTH    SETA  &CTR-&STRNG                                        UF019\n         AIF   (&LNTH EQ 0).NULL                                  UF019\n         AIF   ('&SYSPARM'(&STRNG,6) NE 'CKPTV=').SPNCKPT\n&QCKPTV  SETC  '&SYSPARM'(&STRNG+6,&LNTH-6)\n.SPNCKPT ANOP\n         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'PFK').SPNPFK         UF019\n&QPFK    SETB  1                                                  UF019\n.SPNPFK  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOPFK').SPNPFK2      UF019\n&QPFK    SETB  0                                                  UF019\n.SPNPFK2 AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'ACF2').SPNACF        UF019\n&QACF2   SETB  1                                                  UF019\n.SPNACF  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOACF2').SPNACF2     UF019\n&QACF2   SETB  0                                                  UF019\n.SPNACF2 ANOP                                                     UF019\n         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'GEN').SPNGEN         UF019\n&QGEN    SETB  1                                                  UF019\n.SPNGEN  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOGEN').SPNGEN2      UF019\n&QGEN    SETB  0                                                  UF019\n.SPNGEN2 ANOP                                                     UF019\n         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'BGEN').BGENN1        ONL01\n&QBGEN   SETB  1                                                  ONL01\n.BGENN1  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOBGEN').BGENN0      ONL01\n&QBGEN   SETB  0                                                  ONL01\n.BGENN0  ANOP  ,                                                  ONL01\n         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'JTIP').SPNJTIP       UF019\n&QJTIP   SETB  1                                                  UF019\n.SPNJTIP AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOJTIP').SPNJTP2     UF019\n&QJTIP   SETB  0                                                  UF019\n.SPNJTP2 ANOP                                                     UF019\n         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'DBC').SPNDBC         UF019\n&QDBC    SETB  1                                                  UF019\n.SPNDBC  AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NODBC').SPNDBC2      UF019\n&QDBC    SETB  0                                                  UF019\n.SPNDBC2 ANOP                                                     UF019\n         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NERDC').SPNNER       UF032\n&QNERDC  SETB  1                                                  UF032\n&QDBC    SETB  1\n.*\n&QPF(2)  SETC  'L *    +'                                         UF043\n&QPF(9)  SETC  'HELP'                                             UF043\n.*\n.SPNNER  ANOP\n&QJTIP   SETB  0                   TURN OFF JTIP CODE             UF046\n.*\n         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NONERDC').SPNNER2    UF032\n&QNERDC  SETB  0                                                  UF032\n.SPNNER2 ANOP                                                     UF032\n         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'ONL').ONLN1          ONL06\n&QONL    SETB  1                                                  ONL06\n.ONLN1   AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'NOONL').ONLN0        ONL06\n&QONL    SETB  0                                                  ONL06\n.ONLN0   ANOP  ,                                                  ONL06\n         AIF   ('&SYSPARM'(&STRNG,&LNTH) NE 'LOCKHEED').LOCK1        CL\n&LOCK    SETB  1                                                     CL\n.LOCK1   ANOP                                                        CL\n.NULL    ANOP                                                     UF019\n         AIF   (&CTR EQ &CNT).SYSPEND                             UF019\n&CTR     SETA  &CTR+1                                             UF019\n&STRNG   SETA  &CTR                                               UF019\n         AGO   .LOOP                                              UF019\n.SYSPEND ANOP                                                     UF019\n         AIF   (NOT &QONL).NOTONL                                 ONL06\n&QPFK    SETB  1                   THESE                          ONL06\n&QACF2   SETB  ('&NAME' EQ 'CJHIST')  PARAMETERS                  ONL06\n&QGEN    SETB  1                       IF                         ONL06\n&QBGEN   SETB  0                        &QONL=1                   ONL06\n&QJTIP   SETB  0                         .                        ONL06\n&QDBC    SETB  0                          .                       ONL06\n&QRNB    SETB  0                           .                      ONL06\n&QRACF   SETB  0                            .                     ONL06\n&QNERDC  SETB  0                             .                    ONL06\n&QDSPRFX SETC  'JES2'                         .                   ONL06\n&QCKPTV  SETC  'SPOOL1'                        .                  ONL06\n&QSIDS(1) SETC 'X10A'                           .                 ONL06\n&QSIDS(2) SETC 'X10B'                            .                ONL06\n&QSIDS(3) SETC 'X10C'                             .               ONL06\n&QSIDS(4) SETC 'X10D'                              .              ONL06\n&QPF(2)  SETC  'L *    +'                           .             ONL06\n&QPF(6)  SETC  'FA F142I'                            .            ONL06\n&QPF(9)  SETC  'DD     *'                             .           ONL06\n.NOTONL  ANOP  ,                                                  ONL06\n         AIF   ('&TYPE'  EQ 'GLOBAL').GEN  FORCE PRINT GEN FOR QCOMMON\n         AIF   (&QGEN).GEN                                        UF019\n         PRINT NOGEN                                              UF019\n         AGO   .START                                             UF019\n.GEN     PRINT GEN                                                UF019\n.START   ANOP                                                     UF019\n***********************************************************************\n MNOTE *,'PFK=&QPFK, GEN=&QGEN, BGEN=&QBGEN, JTIP=&QJTIP, DBC=&QDBC'\n MNOTE *,'SPOOL=&QCKPTV, DSNPRFX=&QDSPRFX '\n MNOTE *,'NERDC=&QNERDC, ONL=&QONL, RNB=&QRNB, LOCK=&LOCK '\n MNOTE *,'ACF2=&QACF2, RACF=&QRACF, RACUSR=&QRACUSR'\n***********************************************************************\n         SPACE 1                                                  ONL01\n&NAME    START 0\n         AIF   ('&TYPE' EQ 'GLOBAL' OR '&MAIN' EQ 'YES').PRTSKP1  ONL01\n         AIF   (&QBGEN).PRTSKP1                                   ONL01\n         PUSH  PRINT                                              ONL01\n         PRINT OFF                                                ONL01\n.PRTSKP1 ANOP  ,                                                  ONL01\n         SPACE 1                                                  ONL01\n***********************************************************************\n*                                                                     *\n*   THE QUEUE COMMAND WAS WRITTEN FOR YOUR AMUSEMENT AND AMAZEMENT BY *\n*     THE INTERGALACTIC MESSIANIC INDIVIDUAL GROUP THERAPY DIVISION   *\n*     OF TRW SYSTEMS, 1 SPACE PARK, REDONDO BEACH, CA. 90278          *\n*   THE ORIGINAL PROGRAMMING WAS DONE BY ANDY ZIDE, CHIEF PROGRAMMER  *\n*     AND RESIDENT FLAKE WHO HAS SINCE DEPARTED TRW TO PLAY WITH      *\n*     MICROCODE.                                                      *\n*   PLEASE ADDRESS ANY COMMENTS, SUGGESTIONS, COMPLAINTS, OR THREATS  *\n*     TO STEVE ANDERSON (R3/1028)   (213) 535-0682   OR               *\n*        PAUL FELIX     (R3/1028)   (213) 535-0682                    *\n*                                                                     *\n*   STEVE ANDERSON HAS LEFT TRW.  PLEASE ADDRESS ANY COMMENTS OR      *\n*   FIXES TO JACK SCHUDEL AT THE ADDRESS LISTED BELOW.                *\n*                                                                     *\n*   THE FOLLOWING INDIVIDUALS HAVE MADE MODIFICATIONS TO QUEUE WHICH  *\n*     HAVE BEEN INCORPORATED INTO THIS CURRENT VERSION.               *\n*                                                                     *\n*        VILKO MACEK                                                  *\n*        INSURANCE CORPORATION OF BRITISH COLUMBIA                    *\n*        MODIFICATION: PFK SUPPORT                                    *\n*                                                                     *\n*        TRW ISD                                                      *\n*        ANAHEIM, CALIFORNIA                                          *\n*        MODIFICATION: DISPLAY CPU TIME FOR BATCH, STC AND TSO        *\n*                      DISPLAY INITIATORS                             *\n*                                                                     *\n*        KEN TRUE                                                     *\n*        FAIRCHILD CAMERA AND INSTRUMENT                              *\n*        MOUNTAIN VIEW, CALIFORNIA                                    *\n*        MODIFICATION: ACF2 SUPPORT                                   *\n*                      PRINT SCREEN SUPPORT                           *\n*                                                                     *\n*        JACK SCHUDEL                                                 *\n*        NORTHEAST REGIONAL DATA CENTER                               *\n*        233 SSRB, UNIVERSITY OF FLORIDA                              *\n*        GAINESVILLE, FLORIDA  32611                                  *\n*        (904) 392-4601                                               *\n*        MODIFICATIONS:  SEE MEMBER $UFDOC                            *\n*                                                                     *\n*        WALT FARRELL                                                 *\n*        RAINIER NATIONAL BANK                                        *\n*        P. O. BOX C34030                                             *\n*        SEATTLE, WASHINGTON  98124                                   *\n*        (206) 433-7467                                               *\n*        MODIFICATIONS:  SEE MEMBER $RNBDOC                           *\n*                                                                     *\n*        ROBERT M. JINKINS                                            *\n*        OAK RIDGE NATIONAL LABORATORY                                *\n*        BLDG. 4500-N  MS-259                                         *\n*        P.O. BOX X                                                   *\n*        OAK RIDGE, TENN.  37830                                      *\n*        (615) 574-7208/5300                                          *\n*          FTS 624-7208/5300                                          *\n*        SHARE INSTALLATION CODE:  OR                                 *\n*        MODIFICATIONS:  SEE MEMBER $ONLDOC                           *\n*                                                                     *\n*        JOHN KINN                                                    *\n*        LOCKHEED - CALIFORNIA COMPANY                                *\n*        PLANT A1 BUILDING 67 DEPTMENT 8321                           *\n*        P.O. BOX 551                                                 *\n*        BURBANK, CALIFORNIA 91520                                    *\n*        (818) 847-7492                                               *\n*        SHARE INSTALLATION CODE:  CL                                 *\n*        MODIFICATIONS:  SEE MEMBER $CLDOC                            *\n*                                                                     *\n***********************************************************************\n         SPACE 2                                                  ONL01\n*                                                                 ONL01\n*  REGISTER EQUATES                                               ONL01\n*                                                                 ONL01\n         SPACE 1                                                  ONL01\n         AIF   ('&TYPE' EQ 'GLOBAL' OR '&MAIN' EQ 'YES').PRTSKP2  ONL01\n         AIF   (&QBGEN).PRTSKP2                                   ONL01\n         SPACE 1                                                  ONL01\n         POP   PRINT                                              ONL01\n.PRTSKP2 ANOP  ,                                                  ONL01\n         AIF   ('&TYPE' EQ 'NORMAL').GO\n         MEXIT\n.GO      ANOP\n         SPACE 1                                                  ONL01\n         USING *,R12               BASE REGISTER\n         USING QCOMMON,R11         ACCESS TO COMMON VECTOR TABLE\n         STM   R14,R12,12(R13)     STANDARD REGISTER SAVE\n         LR    R12,R15             LOAD BASE REG\n         B     *+28                BRANCH AROUND IDENTIFIER\n         DC    CL8'&NAME'          MODULE IDENTIFIER\n         DC    CL8'&SYSDATE'       ASSEMBLY DATE\n         DC    CL8' &SYSTIME'      ASSEMBLY TIME\n         AIF   ('&MAIN' EQ 'YES').MAINYES\n         LR    R15,R13             RETAIN SAVE AREA ADDR\n         LA    R13,72(R13)         POINT TO NEXT SAVE AREA\n         AGO   .MAINNO\n.MAINYES ANOP\n         LR    R2,R1               SAVE PARAMETER REGISTER\n         GETMAIN R,LV=4096         GET STORAGE FOR SAVEAREA\n         ST    R1,8(R13)           FORWARD POINTER\n         ST    R13,4(R1)           BACKWARD POINTER\n         LR    R13,R1              MOVE ADDR TO R1\n         MEXIT\n.MAINNO  ANOP\n         ST    R13,8(R15)          FORWARD POINTER\n         ST    R15,4(R13)          BACKWARD POINTER\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QSTOP": {"ttr": 6915, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO ,                                                  ONL11\n&NAME    QSTOP &RC=                                               ONL11\n&NAME    L     R13,4(,R13)         ADDR OF CALLER'S SAVE AREA     ONL11\n         AIF   (T'&RC EQ 'O').NORC                                ONL11\n         RETURN (14,12),T,RC=&RC   RETURN TO CALLER               ONL11\n         MEXIT ,                                                  ONL11\n.NORC    ANOP  ,                                                  ONL11\n         LM    R14,R12,12(R13)     RESTORE CALLER'S REGISTERS     ONL11\n         MVI   12(R13),X'FF'       SET RETURN INDICATION          ONL11\n         BR    R14                 RETURN TO CALLER               ONL11\n         MEND  ,                                                  ONL11\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QTILT": {"ttr": 6917, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "         MACRO\n&NAME    QTILT &MESSAGE\n         USING QDISPLAY,R15   BASE REG FOR DISPLAY WORK AREA\n&NAME    L     R15,QVDSPL     LOAD BASE REG\n         MVC   QDHLINE,=CL80&MESSAGE\n         MVC   QDMLNG,=H'0'   ZERO MESSAGE LENGTH\n         DROP  R15\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE\n         LR    R14,R15        SET FOR LOOP\n         BR    R15            GO TO IT\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "QUEUE": {"ttr": 6919, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "QUEUE    TITLE 'QUEUE COMMAND - MAINLINE MODULE'                  ONL01\nQUEUE    QSTART MAIN=YES           START QUEUE CSECT ASSEMBLY     ONL01\n***********************************************************************\n* RNB CHANGES:                                                        *\n*      (1) RNB01 - FIX FINAL TPUT MESSAGE TO WORK WITH SPF TCAM       *\n*                                                                     *\n***********************************************************************\n***********************************************************************\n*                                                                     *\n*   CALL - INITIALIZATION                                             *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(INIT)   ADDR OF INIT\n         BALR  R14,R15        GO TO IT\n         LA    R10,LOOP       INTERRUPTED RETURN ADDRESS\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n******************************************************************UF003\n*                                                                 UF003\n*   INITIALIZE 3270 SCREEN VARIABLES                              UF003\n*                                                                 UF003\n*   COMPARE RESULTS OF GTSIZE TO GTTERM TO MAKE SURE WE DO NOT    WGH\n*   TRY TO WRITE A LARGER SCREEN THEN WE HAVE.                    WGH\n*                                                                 UF003\n******************************************************************UF003\n         GTSIZE ,             READ 3270 SCREEN SIZE               UF003\n         STM   R0,R1,QDOSZR0  SAVE FOR LATER RESTORE              UF003\n         LTR   R0,R0          DISPLAY DEVICE?                     UF003\n         BZ    NOTDISP        NO, ABORT                           UF003\n         SPACE 1                                                  UF003\n         STFSMODE ON,INITIAL=YES  TELL VTAM ABOUT FULLSCREEN MODE UF003\n         CH    R15,=H'08'     IS THIS TCAM?                       WGH\n         BNE   ISVTAM         NO.. MUST BE VTAM                   WGH\n         OI    QFLAG2,QFLG2TC     SET USING TCAM                  WGH\nISVTAM   EQU   *                                                  WGH\n         SPACE 1                                                  UF003\n         LA    R7,QDWORK      ADDR FOR PRMSZE                     WGH\n         LA    R8,QDWORD      ADDR FOR ALTSZE                     WGH\n         GTTERM PRMSZE=(R7),ALTSZE=(R8)                           WGH\n         SR    R0,R0                                             WGH\n         IC    R0,QDWORK     NUM LINES IN PRIMARY                WGH\n         SR    R1,R1                                             WGH\n         IC    R1,QDWORD     NUM LINES IN ALT                    WGH\n         CR    R0,R1         CHECK WHICH IS BIGGER               WGH\n         BNL   *+6           R0 IS BIGGER OR SAME                WGH\n         LR    R0,R1         R1 IS BIGGER USE IT                 WGH\n*\n* R0 CONTAINS ACTUAL SCREEN SIZE                                 WGH\n*\n         L     R1,QDOSZR0    RESTORE #LINES FROM GTSIZE          WGH\n         CR    R0,R1         CHECK WHICH IS SMALLER              WGH\n         BNH   *+6           R0 IS SMALLER OR SAME USE IT        WGH\n         LR    R0,R1         R1 IS SMALLER USE IT                WGH\n         SPACE 1                                                  UF003\n         L     R1,QDOSZR0+4   RESTORE LINESIZE                    WGH\n         CH    R1,=H'80'      POSSIBLE MODEL 2 OR 4 TERMINAL?     UF003\n         BNE   TRYM5          NO, TRY FOR MODEL 5                 UF003\n         CH    R0,=H'43'      MODEL 4 TERMINAL?                   UF003\n         BE    MODEL4         YES, SET IT                         UF003\n         CH    R0,=H'32'      MODEL 3 TERMINAL?                   UF003\n         BNE   SETM2          NO, SET MODEL 2 DEFAULT             UF003\n         SPACE 1                                                  UF003\nMODEL3   MVC   QDLNELEN,=H'80'     LINE LENGTH                    UF003\n         MVC   QDLNES,=PL2'29'     LINES PER SCREEN AREA          UF003\n         MVC   QDPFKTAB+6*8+6(2),=C'29'                           UF043\n         MVC   QDPFKTAB+7*8+6(2),=C'29'                           UF043\n         MVC   QDSCRLEN,=AL2(29*80)  SCR LENGTH                   UF003\n         MVC   QDSCRPLN,=AL2(29*80+QDLINE1-QDSCREEN) TPUT LEN     UF003\n         MVI   QDSCRO1,X'7E'       ERASE/WRITE ALTERNATE          UF003\n         MVI   CLEAR1+1,X'7E'      ERASE/WRITE ALTERNATE          WGH\n         MVC   QDSCRO2,=X'C150'    (2,1)                          UF003\n         MVC   QDSCRO3,=X'E6F0'    (32,1)                         UF003\n         MVC   QDSCRO4,=X'E7F7'    (32,72)                        UF003\n         MVC   QDSCRO5,=X'C260'    (3,1)                          UF003\n         B     LOOP                JOIN COMMON CODE               UF003\n         SPACE 1                                                  UF003\nMODEL4   MVC   QDLNELEN,=H'80'     LINE LENGTH                    UF003\n         MVC   QDLNES,=PL2'40'     LINES PER SCREEN AREA          UF003\n         MVC   QDPFKTAB+6*8+6(2),=C'40'                           UF043\n         MVC   QDPFKTAB+7*8+6(2),=C'40'                           UF043\n         MVC   QDSCRLEN,=AL2(40*80)  SCR LENGTH                   UF003\n         MVC   QDSCRPLN,=AL2(40*80+QDLINE1-QDSCREEN) TPUT LEN     UF003\n         MVI   QDSCRO1,X'7E'       ERASE/WRITE ALTERNATE          UF003\n         MVI   CLEAR1+1,X'7E'      ERASE/WRITE ALTERNATE          WGH\n         MVC   QDSCRO2,=X'C150'    (2,1)                          UF003\n         MVC   QDSCRO3,=X'F460'    (43,1)                         UF003\n         MVC   QDSCRO4,=X'F5E7'    (43,72)                        UF003\n         MVC   QDSCRO5,=X'C260'    (3,1)                          UF003\n         B     LOOP                JOIN COMMON CODE               UF003\n         SPACE 1                                                  UF003\nTRYM5    CH    R1,=H'132'     POSSIBLE MODEL 5 TERMINAL?          UF003\n         BNE   SETM2          NO, FORCE MODEL 2 DEFAULT           UF003\n         CH    R0,=H'27'      ACTUAL MODEL 5?                     UF003\n         BNE   SETM2          NO, FORCE MODEL 2 DEFAULT           UF003\n         SPACE 1                                                  UF003\nMODEL5   MVC   QDLNELEN,=H'132'    LINE LENGTH                    UF003\n         MVC   QDLNES,=PL2'24'     LINES PER SCREEN AREA          UF003\n         MVC   QDPFKTAB+6*8+6(2),=C'24'                           UF043\n         MVC   QDPFKTAB+7*8+6(2),=C'24'                           UF043\n         MVC   QDSCRLEN,=AL2(24*132)  SCR LENGTH                  UF003\n         MVC   QDSCRPLN,=AL2(24*132+QDLINE1-QDSCREEN) TPUT LEN    UF003\n         MVI   QDSCRO1,X'7E'       ERASE/WRITE ALTERNATE          UF003\n         MVI   CLEAR1+1,X'7E'      ERASE/WRITE ALTERNATE          WGH\n         MVC   QDSCRO2,=X'C2C4'    (2,1)                          UF003\n         MVC   QDSCRO3,=X'F5E8'    (27,1)                         UF003\n         MVC   QDSCRO4,=X'F66F'    (27,72)                        UF003\n         MVC   QDSCRO5,=X'C4C8'    (3,1)                          UF003\n         B     LOOP                JOIN COMMON CODE               UF003\n         SPACE 1                                                  UF003\nSETM2    EQU   *\n*        STSIZE SIZE=80,LINE=24  FORCE MODEL 2 DEFAULT            UF003\n         SPACE 1                                                  UF003\n         B     LOOP           GO TO PROCESS LOOP                  UF003\n         SPACE 1                                                  UF003\nNOTDISP  EQU   *              MUST BE TTY                         WGH\n         STSIZE SIZE=80                                           WGH\n         STATTN LINES=0                                           WGH\n         B     LOOP                                               WGH\n         TPUT  NOTDSPL,L'NOTDSPL SEND MESSAGE TO USER             UF003\n         B     EXIT2          AND RETURN TO CALLER                UF003\n         SPACE 1                                                  UF003\nNOTDSPL  DC    C'QUEUE COMMAND REQUIRES DISPLAY TERMINAL'         UF003\n         EJECT ,                                                  UF003\n***********************************************************************\n*                                                                     *\n*   CALL - COMMAND LINE PARSE                                         *\n*                                                                     *\n***********************************************************************\nLOOP     DS    0H                                                 UF006\n         L     R15,=V(PARSE)  ADDR OF PARSE\n         BALR  R14,R15        GO TO IT\n         CLC   =C'E ',QSUBNAME STOP?\n         BE    EXIT           YES.\n         CLC   =C'EXIT ',QSUBNAME STOP?\n         BE    EXIT           YES.\n         CLC   =C'END ',QSUBNAME STOP?\n         BE    EXIT           YES.\n         CLC   =C'STOP ',QSUBNAME STOP?\n         BE    EXIT           YES.\n***********************************************************************\n*                                                                     *\n*   CALL - SUB-COMMAND MODULE SELECTED BY PARSE                       *\n*                                                                     *\n***********************************************************************\n         MVC   QDHLINE,DUMMY  NO OUTPUT MESSAGE\n         L     R15,QSUBCMD    ADDR OF SUBCMD FROM QCOMMON\n         BALR  R14,R15        GO TO IT\n         MVC   QDMLNG,=H'0'   ZERO OUT MESSAGE LENGTH\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE\n         BALR  R14,R15        WRITE LAST SCREEN, GET NEXT INPUT\n         B     LOOP           DO IT AGAIN\n***********************************************************************\n*                                                                     *\n*   CLEAN UP AND GO HOME                                              *\n*                                                                     *\n***********************************************************************\nEXIT     EQU   *\n         L     R1,QDOSZR0                                         WGH\n         LTR   R1,R1            SEE IF TTY DEVICE\n         BZ    EXIT2            YES.. SKIP CLEAR                  WGH\n         STSIZE SIZELOC=QDOSZR1,LINELOC=QDOSZR0  RESTORE SCRSIZE  UF003\n         TPUT  CLEAR,L'CLEAR,FULLSCR,MF=(E,QTPUT) CLEAR SCREEN    UF003\n         STLINENO LINE=1,MODE=OFF                 OFF FULLSCR     UF003\n         USING QCKPT,R8 BASE REG FOR CKPT WORK AREA\nEXIT2    DS    0H                                                 UF003\n         L     R8,QVCKPT      LOAD BASE REG\n         CLOSE MF=(E,HOCKPT)\n         SPACE 1                                                     CL\n         LA    R7,QCSPOOLS         ADDR OF FIRST DCB POINTER         CL\n         LA    R6,9                MAXIMUM NUMBER OF EXTENTS         CL\n         SPACE 1                                                     CL\nCLOSELOP OC    0(4,R7),0(R7)       SKIP IF THIS EXTENT               CL\n         BZ    CLOSEBMP             IS NOT ACTIVE                    CL\n         OI    0(R7),X'80'         SET END OF LIST INDICATE          CL\n         CLOSE (,FREE),MF=(E,(R7)) CLOSE ONE EXTENT                  CL\nCLOSEBMP LA    R7,4(,R7)           BUMP TO NEXT EXTENT               CL\n         BCT   R6,CLOSELOP         CONTINUE IF MORE EXTENTS          CL\n         SPACE 1                                                     CL\n         TM    QPFLAG,HARDCPY         IS HARDCOPY INVOKED?         FCI*\n         BNO   FREEUP                   NO..SPLIT THIS STUFF       FCI*\n         L     R15,=V(PRINT)               INVOKE PRINT            FCI*\n         MVC   QDREPLY,QBLANK                  TO                  FCI*\n         MVC   QDREPLY(09),=C'PRINT OFF'          FREE UP          FCI*\n         MVC   QDRLNG,=X'0009'                        HARDCOPY     FCI*\n         BALR  R14,R15                                     OUTPUT  FCI*\n         EJECT\n***********************************************************************\n*                                                                  FCI*\n*   FREE HASPCKPT AND HASPACEN DDNAMES BEFORE LEAVING TO BE NEAT.. FCI*\n*                                                                  FCI*\n***********************************************************************\nFREEUP   MVI   DAIRFLAG,X'18'    INDICATE FREE DDNAME(XXXXXXXX)    FCI*\n         MVC   DA18DDN,HASPCKPT+40  GET DDNAME USED...             FCI*\n         L     R15,=V(ALLOCATE)  GET ROUTINE NAME                  FCI*\n         BALR  R14,R15           GO FREE IT..                      FCI*\n*\n         LA    R2,QCSPOOLS       GET ADDR OF LIST OF HASPACE DCBS  FCI*\n         LA    R4,35             MAX OF 35 PASSES THROUGH HERE..   FCI*\nFREEUP1  L     R3,0(R2)          GET ADDRESS OF DCB TO WORK ON     FCI*\n         LTR   R3,R3             ANYONE THERE?                     FCI*\n         BZ    EXITQCK                                             FCI*\n         MVC   DA18DDN,40(R3)    MOVE IN DDNAME FROM DCB           FCI*\n         L     R15,=V(ALLOCATE)  GET ROUTINE NAME                  FCI*\n         BALR  R14,R15           AND GO INVOKE DAIR TO FREE IT..   FCI*\n         LA    R2,4(R2)          BUMP                              FCI*\n         BCT   R4,FREEUP1                                          FCI*\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   ISSUE FINAL AUTHORIZATION CHECK BEFORE RETURNING TO THE SYSTEMONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\nEXITQCK  DS    0H                  QUEUE COMMAND PROCESSING DONE  ONL02\n         QAUTHCK QAEND             ISSUE FINAL AUTHORIZATION CHECKONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   FREE THE AREAS ACQUIRED IN INIT (Q3)                              *\n*                                                                     *\n***********************************************************************\n         SPACE 1                                                  ONL02\n         OI    QGETL3,X'80'        PREPARE FOR FREEMAIN           ONL02\n         FREEMAIN MF=(E,QFREE)\n         TM    QFLAG1,QFLG1DBC    NEED TO TERMINATE ESTAE?        UF024\n         BZ    NOESTAE            NO, SKIP THIS                   UF024\n         ESTAE 0                  DELETE CURRENT ESTAE            UF024\n         NI    QFLAG1,255-QFLG1DBC  CLEAR FLAG                    UF024\nNOESTAE  DS    0H                                                 UF024\n         QSTOP RC=0               RETURN TO TMP WITH RC=0         ONL11\n***********************************************************************\n*                                                                     *\n*   CONSTANTS AND OTHER ODDITIES                                      *\n*                                                                     *\n***********************************************************************\n         LTORG\nCLEAR1   EQU   *                   START OF CLEAR DATA            UF003\n*        DC    X'27F5C1'           ESC; ERASE/WRITE; RESET MDT    UF003\n         DC    X'C1'               FIX FOR SPF/TCAM               RNB01\n         DC    X'115D7E'           SBA  24,80                     UF003\n         DC    X'114040'           SBA  1,1                       UF003\n         DC    X'3C404000'         RTA  1,1 WITH NULLS            UF003\n         DC    X'1DC8'             SF, INTENSIFIED                UF003\n         DC    X'13'               INSERT CURSOR                  UF003\nCLEAR    EQU   CLEAR1,*-CLEAR1                                    UF003\nDUMMY    DC    CL80'    NO DATA IS AVAILABLE FOR YOUR REQUEST'\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "Q0": {"ttr": 6924, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "QCOMMON  TITLE 'QUEUE COMMAND - COMMON AREA'                      UF004\nQCOMMON  QSTART TYPE=GLOBAL\n         QCOMMON CSECT=YES\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "READSPC": {"ttr": 6926, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "READSPC  TITLE 'QUEUE COMMAND - READ A BLOCK FROM HASPACE'        ONL01\nREADSPC  QSTART ,                  START READSPC CSECT ASSEMBLY   ONL01\n         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n***********************************************************************\n*                                                                     *\n*   CONVERT MTTR TO MBBCCHHR                                          *\n*                                                                     *\n***********************************************************************\n*\n* NOTE - THE INPUT TO THIS ROUTINE IS AS FOLLOWS:\n*            QCTRAK CONTAINS THE MTTR\n*            R1 CONTAINS THE IOAREA ADDRESS\n*\n         LR    R2,R1          MOVE IOAREA ADDR TO R2\n         SR    R3,R3          ZERO R3\n         IC    R3,QCTRAKM     RELATIVE DCB NUMBER\n         CH    R3,=H'36'      COMPARE WITH MAX POSSIBLE SPOOLS    UF044\n         BNL   QTILT1         ERROR IF TOO LARGE                  UF044\n         SLL   R3,2           MULTIPLY BY 4\n         L     R15,QCTRKCYL(R3)                                   UF044\n         LTR   R15,R15        VALID?                              UF044\n         BZ    QTILT1         ERROR IF ZERO                       UF044\n         L     R15,QCSPOOLS(R3)                                   UF044\n         LTR   R15,R15        VALID?                              UF044\n         BZ    QTILT1         ERROR IF ZERO                       UF044\n         MVC   QCDADR,QCTRAKR MOVE RECORD NUMBER\n         MVC   QCDADHH,QCTRAKTT MOVE TRACK TO A HALFWORD BOUNDARY\n         LH    R5,QCDADHH     LOAD RELATIVE TRACK NUMBER\n         SR    R4,R4          ZERO R4\n         D     R4,QCTRKCYL(R3) DIVIDE TRACKS BY TRACKS PER CYLINDER\n         STH   R4,QCDADHH     STORE HEAD NUMBER\n         STH   R5,QCDADCC     STORE CYLINDER NUMBER\n         L     R3,QCSPOOLS(R3) DCB ADDRESS\n         USING IHADCB,R3      ADDRESSING FOR DCB DSECT            UF009\n         MVC   DCBSYNAD+1(3),=AL3(SYNAD)  SET SYNAD ADDR IN DCB   UF009\n         DROP  R3             DROP ADDRESSING FOR DCB             UF009\n         READ  HDECB2,DI,(R3),(R2),MF=E\n         CHECK HDECB2\n         TM    QFLAG1,QFLG1IOE  I/O ERROR?                        UF009\n         BZ    READOK         SKIP IF NO                          ONL02\n         NI    QFLAG1,255-QFLG1IOE  CLEAR ERROR FLAG              UF009\n*        SIMULATE QTILT ACTION                                    UF009\nQTILTSIM DS    0H                                                 UF044\n         L     R15,=V(DISPLAY) ADDR OF DISPLAY MODULE             UF009\n         LR    R14,R15        SET FOR LOOP                        UF009\n         BR    R15            GO TO IT                            UF009\n         SPACE 2                                                  ONL02\nREADOK   DS    0H                  SPOOL READ WAS SUCCESSFUL      ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR SPOOL BUFFER                  ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         LR    R1,R2               PASS BUFFER ADDR TO AUTH RTN   ONL02\n         QAUTHCK QASPOOL           LET AUTHORIZATION RTN SEE BUFR ONL02\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   RETURN TO CALLER                                              ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QSTOP ,                   RETURN TO CALLER               ONL02\n         SPACE 2                                                  ONL02\nQTILT1   MVC   QDHLINE,QBLANK CLEAR TARGET AREA                   UF044\n         MVC   QDHLINE(L'QTILT1M),QTILT1M  SET ERROR MESSAGE      UF044\n         UNPK  QDHLINE+QTILT1M2-QTILT1M1(9),QCTRAK(5)             UF044\n         TR    QDHLINE+QTILT1M2-QTILT1M1(8),HEXTAB                UF044\n         MVI   QDHLINE+QTILT1M2-QTILT1M1+8,C' '                   UF044\n         B     QTILTSIM       GO TO QTILT SIMULATION ROUTINE      UF044\nQTILT1M1 DC    C'*** INVALID INPUT TO READSPC - MTTR = '          UF044\nQTILT1M2 DC    CL8'        '                                      UF044\n         DC    C' ***'                                            UF044\nQTILT1M  EQU   QTILT1M1,*-QTILT1M1  ADDRESS AND LENGTH            UF044\n         SPACE 1                                                  UF044\nSYNAD    SYNADAF ACSMETH=BDAM DECODE ERROR CAUSE                  UF009\n         OI    QFLAG1,QFLG1IOE  SET I/O ERROR FLAG                UF009\n         USING QDISPLAY,R15   BASE REG FOR DISPLAY WORK AREA      UF009\n         L     R15,QVDSPL     LOAD BASE REG                       UF009\n         MVC   QDHLINE,QBLANK BLANK MESSAGE AREA                  UF009\n         MVC   QDHLINE(78),50(R1)  COPY SYNAD MESSAGE             UF009\n         MVC   QDMLNG,=H'0'   ZERO MESSAGE LENGTH                 UF009\n         DROP  R15                                                UF009\n         SYNADRLS ,           RELEASE WORK AREA                   UF009\n         BR    R14            RETURN TO OP SYS                    UF009\n         LTORG\nHEXTAB   EQU   *-C'0'                                             UF044\n         DC    C'0123456789ABCDEF'                                UF044\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nREADSPC  CSECT                                                    RNB03\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         DCBD  DSORG=DA,DEVD=DA                                   UF009\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REPOS": {"ttr": 6929, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "REPOS    TITLE 'QUEUE COMMAND - DATASET REPOSITIONING ROUTINES'   ONL01\nREPOS    QSTART ,                  START REPOS CSECT ASSEMBLY     ONL01\n         GBLB  &QONL          ENABLES ONL SPECIFIC CODE           ONL06\n         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   BRANCH TO PROPER ROUTINE                                          *\n*                                                                     *\n***********************************************************************\n         CLC   QCODEH,=H'36'  MODEL 2/5 COMMAND?                  UF003\n         BE    MODEL          OK IF NO DATASET                    UF003\n         SPACE 1                                                  UF003\nCHKID    CLC   QPDSID,=X'FFFF'    IS THERE A VALID DATASET?         SBG\n         BNE   GO             YES. GO AHEAD.\n         QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'\nGO       LH    R1,QCODEH      LOAD FUNCTION CODE\n         CH    R1,=H'32'      IS THE FUNCTION SUPPORTED?\n         BH    STOP           NO. RETURN.\n         B     *+4(R1)        BRANCH TO ROUTINE\n         B     TILT           0 OFFSET\n         B     FIND           4\n         B     FINDTIME       8\n         B     COLUMN         12\n         B     AT             16\n         B     PLUS           20\n         B     MINUS          24\n         B     TOP            28\n         B     BOTTOM         32\nTILT     QTILT '*** PARAMETER IS INVALID OR OMITTED ***'\n***********************************************************************\n*                                                                     *\n*   REPOSITION VERTICALLY                                             *\n*                                                                     *\n***********************************************************************\n* SKIP FORWARD\nPLUS     CLI   QPARM1,C' '    DEFAULT NEEDED\n         BNE   PLUS010        NO\n         MVI   QLNG1+1,X'01'  YES, SET LENGTH OF PARM\n         MVI   QPARM1,X'F1'   SET DEFAULT TO 1\nPLUS010  BAL   R4,NUMERIC     VALIDATE PARAMETER\n         AP    QPREC,COUNT    ADD COUNT TO CURRENT RECORD\n         B     RESUME         CALL LISTDS\n* SKIP BACKWARD\nMINUS    CLI   QPARM1,C' '    DEFAULT NEEDED\n         BNE   MINUS010       NO\n         MVI   QLNG1+1,X'01'  YES, SET LENGTH OF PARM\n         MVI   QPARM1,X'F1'   SET DEFAULT TO 1\nMINUS010 BAL   R4,NUMERIC     VALIDATE PARAMETER\n         SP    QPREC,COUNT    SUBTRACT COUNT FROM CURRENT RECORD\n         BP    RESUME         CALL LISTDS IF RESULT POSITIVE.\n* TOP OF DATASET\nTOP      ZAP   QPREC,=P'1'    SET CURRENT RECORD TO TOP OF DS\n* RESUME AT CURRENT RECORD\nRESUME   L     R15,=V(LISTDS) ADDR OF LISTDS MODULE\n         BALR  R14,R15        GO TO IT\nSTOP     QSTOP\n* BOTTOM OF DATASET\nBOTTOM   ZAP   QPREC,=P'9999999' SET CURRENT RECORD TO LARGEST\n         B     RESUME         CALL LISTDS\n* POSITION TO THIS RECORD\nAT       BAL   R4,NUMERIC     VALIDATE PARAMETER\n         ZAP   QPREC,COUNT    INDICATE REPOSITION NO\n         B     RESUME         CALL LISTDS\n* CHECK THE PARMETER FOR VALID NUMERIC AND PACK IT\nNUMERIC  LH    R2,QLNG1       LENGTH OF PARM\n         SH    R2,=H'1'       IS THE COUNT FIELD ZERO?\n         BM    RESUME         YES. RESUME FROM CURRENT POSITION.\n         MVC   QFZONES,QFZONE INITIALIZE NUMERIC CHECK\n         EX    R2,MVZ         MOVE THE ZONES FOR VALIDITY CHECK\n         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?\n         BNE   TILT           NO. TILT.\n         EX    R2,PACK        PACK THE FIELD INTO COUNT\n         CLI   QSUBNAME,C'P'  ?/PAGE FORWARD/BACKWARD SPECIFIED\n         BE    FOUNDP         YES. GO PROCESS\n         CLI   QSUBNAME,C'H'  ?/HALF PAGE FORWARD/BACKWARD SPECIFIED\n         BNE   NEXIT          NO. GO TO EXIT\n         MP    COUNT,QDLNES   YES. MULTIPLY BY PAGE SIZE          UF003\n         DP    COUNT,=P'2'    AND CONVERT TO HALF PAGES           UF003\n         ZAP   COUNT,COUNT(7) RE-ALIGN THE STUPID FIELD           UF003\n         B     NEXIT\nFOUNDP   MP    COUNT,QDLNES   YES. MULTIPLY BY PAGE SIZE          UF003\nNEXIT    BR    R4             RETURN\n* EXECUTED INSTRUCTIONS\nMVZ      MVZ   QFZONES(1),QPARM1 CHECK FOR NUMERIC\nPACK     PACK  COUNT,QPARM1(1) PACK COUNT\n***********************************************************************\n*                                                                     *\n*   REPOSITION HORIZONTALLY                                           *\n*                                                                     *\n***********************************************************************\nCOLUMN   CLI   QPARM1,C' '    ?/DEFAULT NEEDED\n         BE    COL010         YES, GO SET IT\n         CLI   QPARM1,C'0'    ?/SET COLUMN TO 1\n         BNE   COL020         NO, TEST IF NUMERIC\nCOL010   MVI   QLNG1+1,X'01'  SET LENGTH OF PARM\n         MVI   QPARM1,X'F1'   SET COLUMN TO 1\nCOL020   BAL   R4,NUMERIC     VALIDATE PARAMETER\n         CP    COUNT,=P'255'  IS THE COUNT FIELD TOO BIG?\n         BH    TILT           YES. TILT.\n         SP    COUNT,=P'1'    COLUMN RELATIVE TO ZERO\n         BM    TILT           INVALID. TILT.\n         CVB   R5,COUNT       CONVERT TO BINARY\n         STH   R5,QPOFFSET    STORE IN QPOFFSET\n         B     RESUME         CALL LISTDS\n***********************************************************************\n*                                                                     *\n*   LOCATE SPECIFIC RECORD                                            *\n*                                                                     *\n***********************************************************************\nFIND     CLI   QSUBNAME+1,C'A' IS THE REQUEST FOR FIND ALL?\n         BE    FIND2          YES. DO NOT UPDATE RECORD POINTER.\n         AP    QPREC,=P'1'    START SEARCH AT NEXT RECORD\nFIND2    CLI   QPARM1,C' '    IS THERE A PARAMETER?\n         BE    RESUME         NO. CONTINUE WITH PREVIOUS FIND.\n         LA    R2,QDREPLY+62  END OF USER REPLY\n         LA    R3,61          MAXIMUM LENGTH OF PARM\n         SH    R3,QOFF1       OFFSET TO FIRST PARM\n         AIF   (NOT &QONL).SKPONL1                                ONL12\n         CLI   QPARM1,C'/'         DO 'OLD TIME' SCAN IF FIRST    ONL12\n         BE    LOOP                 CHARACTER IS A SLASH          ONL12\n.SKPONL1 ANOP  ,                                                  ONL12\n         CLI   QPARM1,C''''        DO 'OLD TIME' SCAN IF FIRST    CL002\n         BE    LOOP                 CHARACTER IS AN APOSTROPHE    CL002\n         CLI   QPARM1,C'\"'           OR IF THE FIRST CHARACTER    ONL13\n         BE    LOOP                   IS A DOUBLE QUOTE           ONL13\n         LA    R2,QDREPLY+1         FIRST POSSIBLE ADDR OF REPLY  CL002\n         AH    R2,QOFF1            ADDR OF SECOND BYTE OF REPLY   CL002\n         SPACE 1                                                  CL002\nLOOPNA   CLI   0(R2),C' '          LOOK FOR FIRST BLANK           CL002\n         BE    FOUNDNA             BR WHEN FOUND                  CL002\n         LA    R2,1(,R2)           EXAMINE NEXT CHARACTER         CL002\n         BCT   R3,LOOPNA           KEEP LOOKING IF POSSIBLE       CL002\n         B     TILT                END IF TOO LONG                CL002\nFOUNDNA  LR    R3,R2               ADDR OF FIRST BLANK            CL002\n         LA    R2,QDREPLY          ADDR OF FIRST POSSIBLE CHAR    CL002\n         AH    R2,QOFF1            ACTUAL ADDR OF FIRST NON-BLANK CL002\n         SR    R3,R2               LENGTH OF STRING               CL002\n         BCTR  R3,0                MACHINE LENGTH OF STRING       CL002\n         B     FOUNDNA2            RE-JOIN LOGIC                  CL002\nLOOP     CLC   0(1,R2),QPARM1 IS THIS THE DELIMITER?\n         BE    FOUND          YES. CONTINUE.\n         BCTR  R2,0           TRY THE PREVIOUS BYTE\n         BCT   R3,LOOP        IS THE LENGTH FIELD EXHAUSTED?\n         B     TILT           YES. TILT.\nFOUND    BCTR  R3,0           DECREMENT LENGTH BY 1\n         LA    R2,QDREPLY+1   ADDR OF REPLY + 1\n         AH    R2,QOFF1       ADDR OF FIRST BYTE OF PARM\nFOUNDNA2 DS    0H                                                 CL002\n         EX    R3,MVC         MOVE PARM TO QPFIND\n         STH   R3,QPLNG       SAVE LENGTH-1 OF PARM\n         B     COLTEST        TEST IF COLUMN KEYWORD IS PRESENT\nMVC      MVC   QPFIND(1),0(R2) MOVE PARM TO QPFIND\n***********************************************************************\n*                                                                     *\n*    COLUMN RANGE FOR FIND                                            *\n*                                                                     *\n***********************************************************************\nCOLTEST  XC    QOFFS,QOFFS    RESET COLUMN OFFSETS\n         XC    QOFFE,QOFFE\n         LA    R2,3(R2,R3)    PREPARE FOR NEXT FIELD\n         LA    R3,QDREPLY+55  END OF USER REPLY\n         SPACE 1                                                  ONL13\n         AIF   (NOT &QONL).SKPONL2                                ONL12\n         CLI   QPARM1,C'/'         WERE DELIMETER CHARS USED?     ONL12\n         BE    DLMUSED             SKIP IF YES                    ONL12\n.SKPONL2 ANOP  ,                                                  ONL12\n         CLI   QPARM1,C''''        WERE DELIMETER CHARS USED?     ONL13\n         BE    DLMUSED             SKIP IF YES                    ONL13\n         CLI   QPARM1,C'\"'         WERE DELIMETER CHARS USED?     ONL13\n         BE    DLMUSED             SKIP IF YES                    ONL13\n         BCTR  R2,0                ACCOUNT FOR MISSING DELIMETERS ONL13\nDLMUSED  DS    0H                                                 ONL13\n         SPACE 1                                                  ONL13\nLOOP1    CLC   0(3,R2),=CL3'COL'  ?/COLUMN PARAMETER\n         BE    FOUNDA         YES. GO PROCESS\n         LA    R2,1(R2)       NO. LOOK AT NEXT FIELD\n         CR    R2,R3          ?/END OF REPLY\n         BH    RESUME         YES. EXIT\n         B     LOOP1          NO. CHECK AGAIN\nFOUNDA   LA    R2,3(R2)       NEXT FIELD\n         CLI   0(R2),C'('     ?/LP PRESENT\n         BNE   PRESUME        NO. EXIT\n         LA    R2,1(R2)       NEXT FIELD\n         LA    R3,QDREPLY+62  END OF REPLY\n         LR    R5,R2          SAVE START OF THIS FIELD\n         MVI   QDELIMIT,C','  LOOKING FOR DELIMETER = ','\n         BAL   R7,CHKDEL      GO CHECK THE DELIMETER\n         CVB   R6,COUNT       CONVERT START COLUMN OFFSET TO BINARY\n         LTR   R6,R6          ?/USER SPECIFY OFFSET OF ZERO\n         BZ    PRESUME        YES. GO INDICATE AN ERROR\n         BCTR  R6,0           DECREMENT OFFSET BY 1\n         STH   R6,QOFFS       SAVE START COLUMN\n         LA    R2,1(R2)       NEXT FIELD\n         LR    R5,R2          SAVE START OF THIS FIELD\n         MVI   QDELIMIT,C')'  LOOKING FOR DELIMETER = ')'\n         BAL   R7,CHKDEL      GO CHECK THE DELIMETER\n         CVB   R6,COUNT       CONVERT END COLUMN OFFSET TO BINARY\n         LTR   R6,R6          ?/USER SPECIFY OFFSET OF ZERO\n         BZ    PRESUME        YES. GO INDICATE AN ERROR\n         BCTR  R6,0           DECREMENT OFFSET BY 1\n         STH   R6,QOFFE       SAVE END COLUMN\n         CLC   QOFFS,QOFFE    ?/ERROR IN COLUMN SPECIFICATION\n         BNL   PRESUME        YES. DISREGARD COLUMN SEARCH\n         B     RESUME         NO. CONTINUE WITH NORMAL PROCESSING\nCHKDEL   CLC   0(1,R2),QDELIMIT ?/DELIMITER FOUND\n         BE    CHK010         YES. GO PROCESS\n         LA    R2,1(R2)       NO. LOOK AT NEXT FIELD\n         CR    R2,R3          ?/END OF REPLY\n         BH    PRESUME        YES. EXIT\n         B     CHKDEL         NO. CHECK AGAIN\nCHK010   LR    R4,R2          SAVE DELIMITER ADDRESS\n         SR    R4,R5          LENGTH OF SUB-PARM\n         CH    R4,=H'3'       ?/LENGTH TO LONG\n         BNL   PRESUME        YES. DISREGARD COLUMN SEARCH\n         BCTR  R4,0           LENGTH FOR EXEC INTRUCTION\n         MVC   QFZONES,QFZONE  NUMERIC TEST\n         EX    R4,MVZ1\n         CLC   QFZONES,QFZONE ?/FIELD NUMERIC\n         BNE   TILT           NO. EXIT WITH ERROR MESSAGE\n         EX    R4,PACK1\n         BR    R7\nPRESUME  XC    QOFFS,QOFFS    DISREGARD FIND\n         XC    QOFFE,QOFFE       BY COLUMN RANGE\n         QTILT ' *** ERROR IN COLUMN SPECIFICATION ***'\nMVZ1     MVZ   QFZONES(1),0(R5)\nPACK1    PACK  COUNT,0(1,R5)\n***********************************************************************\n*                                                                     *\n*   REPOSITION IN SYSLOG DATASET BY TIME OF DAY                       *\n*                                                                     *\n***********************************************************************\nFINDTIME CLI   QPARM1,C' '    IS THE PARM OMITTED?\n         BE    TILT           YES. TILT.\n         B     RESUME         CALL LISTDS\n         EJECT                                                    UF003\n******************************************************************UF003\n*                                                                 UF003\n*   SWITCH MODEL TYPE FOR 3270 TERMINAL                           UF003\n*                                                                 UF003\n******************************************************************UF003\nMODEL    DS    0H             ,                                   UF003\n         BAL   R4,NUMERIC     VALIDATE PARAMETER                  UF003\n         CP    COUNT,=P'2'    MODEL 2?                            UF003\n         BE    MODEL2         YES, BRANCH                         UF003\n         CP    COUNT,=P'3'    MODEL 3?                            UF003\n         BE    MODEL3         YES, BRANCH                         UF003\n         CP    COUNT,=P'4'    MODEL 4?                            UF003\n         BE    MODEL4         YES, BRANCH                         UF003\n         CP    COUNT,=P'5'    MODEL 5?                            UF003\n         BE    MODEL5         YES, BRANCH                         UF003\n         QTILT 'UNSUPPORTED MODEL TYPE'                           UF003\n         SPACE 1                                                  UF003\nMODEL2   MVC   QDLNELEN,=H'80'     LINE LENGTH                    UF003\n         MVC   QDLNES,=PL2'21'     LINES PER SCREEN AREA          UF003\n         MVC   QDPFKTAB+6*8+6(2),=C'21'                           UF043\n         MVC   QDPFKTAB+7*8+6(2),=C'21'                           UF043\n         MVC   QDSCRLEN,=AL2(21*80) SCREEN LENGTH                 UF003\n         MVC   QDSCRPLN,=AL2(21*80+QDLINE1-QDSCREEN) TPUT LEN     UF003\n         MVI   QDSCRO1,X'F5'       ERASE/WRITE                    UF003\n         MVC   QDSCRO2,=X'C150'    (2,1)                          UF003\n         MVC   QDSCRO3,=X'5CF0'    (24,1)                         UF003\n         MVC   QDSCRO4,=X'5DF7'    (24,72)                        UF003\n         MVC   QDSCRO5,=X'C260'    (3,1)                          UF003\n         STSIZE SIZE=80,LINE=24    SET SCREEN SIZE FOR VTAM       UF003\n         SPACE 1                                                  UF003\nMODELN   CLC   QPDSID,=X'FFFF'     IS THERE A DATASET?              SBG\n         BNE   RESUME              YES, CALL LISTDS               UF003\n         MVC   QDHLINE,=CL80' '    BLANK HEADING LINE             UF003\n         B     STOP                AND RETURN                     UF003\n         SPACE 1                                                  UF003\nMODEL3   MVC   QDLNELEN,=H'80'     LINE LENGTH                    UF003\n         MVC   QDLNES,=PL2'29'     LINES PER SCREEN AREA          UF003\n         MVC   QDPFKTAB+6*8+6(2),=C'29'                           UF043\n         MVC   QDPFKTAB+7*8+6(2),=C'29'                           UF043\n         MVC   QDSCRLEN,=AL2(29*80)  SCR LENGTH                   UF003\n         MVC   QDSCRPLN,=AL2(29*80+QDLINE1-QDSCREEN) TPUT LEN     UF003\n         MVI   QDSCRO1,X'7E'       ERASE/WRITE ALTERNATE          UF003\n         MVC   QDSCRO2,=X'C150'    (2,1)                          UF003\n         MVC   QDSCRO3,=X'E6F0'    (32,1)                         UF003\n         MVC   QDSCRO4,=X'E7F7'    (32,72)                        UF003\n         MVC   QDSCRO5,=X'C260'    (3,1)                          UF003\n         STSIZE SIZE=80,LINE=32    SET SCREEN SIZE FOR VTAM       UF003\n         B     MODELN              JOIN COMMON CODE               UF003\n         SPACE 1                                                  UF003\nMODEL4   MVC   QDLNELEN,=H'80'     LINE LENGTH                    UF003\n         MVC   QDLNES,=PL2'40'     LINES PER SCREEN AREA          UF003\n         MVC   QDPFKTAB+6*8+6(2),=C'40'                           UF043\n         MVC   QDPFKTAB+7*8+6(2),=C'40'                           UF043\n         MVC   QDSCRLEN,=AL2(40*80)  SCR LENGTH                   UF003\n         MVC   QDSCRPLN,=AL2(40*80+QDLINE1-QDSCREEN) TPUT LEN     UF003\n         MVI   QDSCRO1,X'7E'       ERASE/WRITE ALTERNATE          UF003\n         MVC   QDSCRO2,=X'C150'    (2,1)                          UF003\n         MVC   QDSCRO3,=X'F460'    (43,1)                         UF003\n         MVC   QDSCRO4,=X'F5E7'    (43,72)                        UF003\n         MVC   QDSCRO5,=X'C260'    (3,1)                          UF003\n         STSIZE SIZE=80,LINE=43    SET SCREEN SIZE FOR VTAM       UF003\n         B     MODELN              JOIN COMMON CODE               UF003\n         SPACE 1                                                  UF003\nMODEL5   MVC   QDLNELEN,=H'132'    LINE LENGTH                    UF003\n         MVC   QDLNES,=PL2'24'     LINES PER SCREEN AREA          UF003\n         MVC   QDPFKTAB+6*8+6(2),=C'24'                           UF043\n         MVC   QDPFKTAB+7*8+6(2),=C'24'                           UF043\n         MVC   QDSCRLEN,=AL2(24*132)  SCR LENGTH                  UF003\n         MVC   QDSCRPLN,=AL2(24*132+QDLINE1-QDSCREEN) TPUT LEN    UF003\n         MVI   QDSCRO1,X'7E'       ERASE/WRITE ALTERNATE          UF003\n         MVC   QDSCRO2,=X'C2C4'    (2,1)                          UF003\n         MVC   QDSCRO3,=X'F5E8'    (27,1)                         UF003\n         MVC   QDSCRO4,=X'F66F'    (27,72)                        UF003\n         MVC   QDSCRO5,=X'C4C8'    (3,1)                          UF003\n         STSIZE SIZE=132,LINE=27   SET SCREEN SIZE FOR VTAM       UF003\n         B     MODELN              JOIN COMMON CODE               UF003\n         EJECT                                                    UF003\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\nWORK     DSECT\n         DS    CL72\nCOUNT    DS    D\n         END\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SAVE": {"ttr": 7173, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SAVE     TITLE 'QUEUE COMMAND - CREATE A COPY OF CURRENT DATASET' ONL01\nSAVE     QSTART ,                  START SAVE CSECT ASSEMBLY      ONL01\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n         USING WORK,R13       LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   ALLOCATE OUTPUT DATASET                                           *\n*                                                                     *\n***********************************************************************\n         CLC   QPDSID,=X'FFFF' IS THERE A VALID DATASET?          SBG\n         BE    TILT1          NO. TELL THE USER.\n         LA    R1,1           DEFAULT FIRST LINE                  WGH\n         ST    R1,FRSTLINE    INIT DEFAULT                        WGH\n         LA    R1,0           INIT CURRENT  LINE                  WGH\n         ST    R1,LINECNT     DEFAULT CURRENT LINE                WGH\n         L     R1,=F'9999999'     DEFAULT LAST LINE               WGH\n         ST    R1,LASTLINE        TO ENSURE END OF DATASET        WGH\n         MVC   DSNAME+2(44),QBLANK BLANK THE DSNAME\n         MVC   DSNAME+2(8),QPARM1 FIRST PART OF DSNAME\n         LA    R1,DSNAME      ADDR OF DSNAME\n         ST    R1,DA08PDSN    STORE IN PARM LIST\n         LH    R2,QLNG1       LENGTH OF QPARM1\n         LA    R1,2(R2,R1)    OFFSET INTO DSNAME\n         LH    R3,QLNG2       LENGTH OF QPARM2\n         LTR   R3,R3          ?/LENGTH ZERO\n         BNZ   CHKVOL2        NO... CHECK FURTHUR                 WGH\n         BAL   R8,DATA        YES. USE DATA AS DEFAULT DS TYPE    WGH\n         B     DSALLOC        CONTINUE.. NO MORE PARMS            WGH\nCHKVOL2  CLC   QPARM2(2),=C'V='    IS VOLSER REQUESTED            WGH\n         BNE   COUNT2         NO... SEE IF A NUMBER               WGH\n         BAL   R8,DATA        USE DATA AS DEFAULT DS TYPE         WGH\n         MVC   DA08SER(6),QPARM2+2  YES... SET VOLSER             WGH\n         MVC   DA08UNIT(8),=C'SYSALLDA'    SET UNIT               WGH\n         B     COUNT3         SEE IF COUNT SPECIFIED              WGH\nCOUNT2   CLI   QPARM2,C'0'    SEE IF 1ST CHAR A NUM?              WGH\n         BL    SUFFIX         NO.. MUST BE SUFFIX                 WGH\n         BAL   R8,DATA        USE DATA AS DEFAULT TYPE            WGH\n         LA    R4,QLNG2       SET UP TO PROCESS COUNT             WGH\n         LA    R5,QPARM2      COUNT FIELD                         WGH\n         BAL   R8,CHKCNT      CHECK IF COUNT SPECIFIED            WGH\n         CLC   QPARM3(2),=C'V='   IS VOLSER REQUESTED?            WGH\n         BNE   DSALLOC        NO... CONTINUE                      WGH\n         MVC   DA08SER(6),QPARM3+2  YES.. SET VOLSER              WGH\n         MVC   DA08UNIT(8),=C'SYSALLDA'    SET UNIT               WGH\n         B     DSALLOC        CONTINUE                            WGH\nSUFFIX   MVI   0(R1),C'.'     NO.. MOVE IN DELIMITER\n         MVC   1(8,R1),QPARM2  SAVE DS TYPE\n         LA    R1,1(R3,R2)    LENGTH OF DSNAME\n         STH   R1,DSNAME      STORE LENGTH OF DSNAME              WGH\n         MVC   DA08DDN(72),ALCLIST REMAINDER OF PARM LIST\nCHKVOL3  LH    R3,QLNG3       LENGTH OF QPARM3                    WGH\n         LTR   R3,R3          WAS IT SPECIFIED?                   WGH\n         BZ    DSALLOC        NO, SKIP THIS                       WGH\n         CLC   QPARM3(2),=C'V='   IS VOLSER REQUESTED?            WGH\n         BNE   COUNT3         NO... CHECK COUNT PARM              WGH\n         MVC   DA08SER(6),QPARM3+2  YES.. SET VOLSER              WGH\n         MVC   DA08UNIT(8),=C'SYSALLDA'    SET UNIT               WGH\n         LA    R4,QLNG4       POINT TO 4TH PARM                   WGH\n         LA    R5,QPARM4      USE 4TH PARM AS COUNT               WGH\n         BAL   R8,CHKCNT      SEE IF COUNT SPECIFIED              WGH\n         B     DSALLOC        CONTINUE                            WGH\nCOUNT3   LA    R4,QLNG3       POINT TO 3RD PARM                   WGH\n         LA    R5,QPARM3      USE 3RD PARM AS COUNT               WGH\n         BAL   R8,CHKCNT      SEE IF COUNT SPECIFIED              WGH\n         CLC   QPARM4(2),=C'V='   IS VOLSER REQUESTED?            WGH\n         BNE   DSALLOC        NO... CONTINUE                      WGH\n         MVC   DA08SER(6),QPARM4+2  YES.. SET VOLSER              WGH\n         B     DSALLOC        CONTINUE                            WGH\nCHKCNT   LH    R3,0(R4)       LENGTH OF COUNT FIELD               WGH\n         LTR   R3,R3          WAS IT SPECIFIED?                   WGH\n         BZ    DSALLOC        NO... DEFAULT TO MAX                WGH\nCURRPTR  XC    SCRATCH,SCRATCH      ZERO WORK AREA                WGH\n         MVC   SCRATCH+4(4),QPREC   MOVE CURRENT LINE TO CONVERT  WGH\n         CVB   R15,SCRATCH    CONVERT TO BINARY                   WGH\n         LTR   R15,R15        IS IT POSITIVE?                     WGH\n         BNP   CHKNUM         NO..  LEAVE DEFAULT                 WGH\n         ST    R15,FRSTLINE   SAVE FOR LATER                      WGH\nCHKNUM   BCTR  R3,0           YES.. LAST LINE # LENGTH -1         WGH\n         LA    R14,0(R5)      POINT TO PARM FIELD                 WGH\n         MVC   QFZONES,QFZONE INIT CHECK FIELD                    WGH\n         EX    R3,MVZ         MOVE ZONES FROM PARM                WGH\n         CLC   QFZONES,QFZONE IS IT ALL NUMERIC                   WGH\n         BNE   NOTNUM         NO... EXIT                          WGH\n         EX    R3,PACK        PACK THE NUMBER                     WGH\n         CVB   R15,SCRATCH    LOAD THE COUNT                      WGH\n         A     R15,FRSTLINE   ADD TO START FOR LAST LINE          WGH\n         S     R15,=F'1'      ADJUST TO GET CORRECT COUNT         WGH\n         ST    R15,LASTLINE   SAVE IT                             WGH\n         BR    R8             RETURN                              WGH\n         SPACE 2\nDATA     MVC   0(5,R1),=C'.DATA' LAST PART OF DSNAME\n         LA    R1,5(R2)       LENGTH OF DSNAME\n         STH   R1,DSNAME      STORE LENGTH OF DSNAME\n         MVC   DA08DDN(72),ALCLIST REMAINDER OF PARM LIST\n         BR    R8             RETURN                              WGH\n         SPACE 2\nDSALLOC  MVI   DAIRFLAG,X'08' INDICATE ALLOC FUNCTION\n         L     R15,=V(ALLOCATE) ADDR OF DAIR MODULE\n         BALR  R14,R15        GO TO IT\n         MVC   QCOUT+36(1),QCRECFM MOVE IN RECORD FORMAT\n         NI    QCOUT+36,X'06' TURN OFF EVERTHING BUT CCTL\n         OI    QCOUT+36,X'90' SPECIFY FIXED BLOCKED RECORDS\n         LH    R1,QCLRECL     RECORD LENGTH\n         LTR   R1,R1          IS THE LRECL ZERO?\n         BNZ   RECOK          NO. SKIP.\n         LA    R1,133         YES. USE LRECL 133.\nRECOK    STH   R1,QCOUT+82    STORE LRECL\nBIGGER   LR    R2,R1          UPDATE BLKSIZE\n         AH    R1,QCOUT+82    ADD LRECL TO BLKSIZE\n*        CH    R1,=H'4096'    IS THE BLKSIZE GREATER THAN 4096?\n         CH    R1,=H'6233'    IS THE BLKSIZE GREATER THAN 6233?  WGH\n         BL    BIGGER         NO. MAKE IT BIGGER.\n         STH   R2,QCOUT+62    STORE BLKSIZE\n         OPEN  MF=(E,QCOPEN)\n***********************************************************************\n*                                                                     *\n*   REPOSITION DATASET TO TOP                                         *\n*                                                                     *\n***********************************************************************\n         L     R4,QCSTART     TOP OF DATASET POINTER\n         L     R4,0(R4)       DISK ADDR TOP OF DATASET\n         L     R5,QCBLKA      IOAREA ADDRESS\n         B     FIRST          GO DO IT\n***********************************************************************\n*                                                                     *\n*   PROCESS DATASET                                                   *\n*                                                                     *\n***********************************************************************\nNEXTBLK  L     R4,HDBNXTRK-BUFSTART(R5)   DISK ADDR NEXT BLOCK   WGH42\nFIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?\n         BZ    END            YES. END OF DATASET.\n         BAL   R8,READ        READ A BLOCK\n         CLC   QPJOBID,HDBJBKEY-BUFSTART(R5)   JOBID MATCH?     WGH42\n         BNE   END              NO.. END OF DATASET             WGH42\n         CLC   QPDSID,HDBDSKEY-BUFSTART+2(R5)   DSID MATCH?     WGH42\n         BE    IDISOK              BR IF SO                          CL\n         L     R4,QCJQEA           ADDR OF JQE                       CL\n         TM    JQEFLAG3-JQE(R4),JQE3SYSD END OF DATA SET             CL\n         BNO   END                    IF NOT SYSTEM JQE              CL\nIDISOK   LA    R4,HDBSTART-BUFSTART(R5)  FIRST RECORD IN BLOCK   WGH42\n***********************************************************************\n*                                                                     *\n*   PROCESS RECORDS                                                   *\n*                                                                     *\n***********************************************************************\nNEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?\n         BE    NEXTBLK        YES. END OF BLOCK.\n         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?\n         BO    SPAN           YES. SKIP IT.\n         SR    R6,R6          ZERO OUT REG\n         IC    R6,0(R4)       INSERT LENGTH\n         TM    1(R4),X'80'    IS CCTL SPECIFIED?\n         BZ    NOCCTL         NO. SKIP.\n         LA    R6,1(R6)       INCREMENT LENGTH FOR CCTL\nNOCCTL   TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?\n         BO    SKIPREC        YES. SKIP IT.\n         MVI   BUFFER,C' '    BLANK FIRST BYTE OF BUFFER\n         MVC   BUFFER+1(255),BUFFER BLANK THE BUFFER\n         LR    R7,R6          DO NOT DESTROY R6\n         SH    R7,=H'1'       IS LENGTH ZERO?\n         BM    SKIPREC        YES. SKIP RECORD.\n         EX    R7,MVCREC      MOVE RECORD TO BUFFER\n         L     R1,LINECNT     GET CURRENT LINE COUNT            WGH\n         LA    R1,1(R1)       ADD THIS LINE TO IT               WGH\n         ST    R1,LINECNT     SAVE IT                           WGH\n         C     R1,LASTLINE    IS IT GREATER THAN LAST REQUESTED WGH\n         BH    END            YES... CLOSE IT                   WGH\n         C     R1,FRSTLINE    IS IT LESS THAN 1ST REQUESTED?    WGH\n         BL    SKIPREC        YES... SKIP IT                    WGH\n         PUT   QCOUT,BUFFER\nSKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\nSPAN     LH    R6,2(R4)       SEGMENT LENGTH\n         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?\n         BO    SPANFRST       YES. USE LARGER HEADER SIZE.\n         LA    R4,4(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\nSPANFRST LA    R4,6(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\n***********************************************************************\n*                                                                     *\n*   CLOSE UP SHOP AND GO HOME                                         *\n*                                                                     *\n***********************************************************************\nEND      CLOSE MF=(E,QCOPEN)\n         MVI   DAIRFLAG,X'18' INDICATE FREE FUNCTION\n         L     R15,=V(ALLOCATE) ADDR OF DAIR MODULE\n         BALR  R14,R15        GO TO IT\n         L     R15,=V(LISTDS) GO BACK TO LISTDS\n         BALR  R14,R15        GO TO IT\n         QSTOP\n***********************************************************************\n*                                                                     *\n*   READ A BLOCK FROM HASPACE                                         *\n*                                                                     *\n***********************************************************************\nREAD     ST    R4,QCTRAK      STORE DISK ADDR\n         LR    R1,R5          IOAREA ADDRESS\n         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\n         BR    R8             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\nTILT1    QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'\nNOTNUM   QTILT '*** INVALID RANGE FIELD SPECIFIED ***'\n         LTORG\nMVCREC   MVC   BUFFER(1),3(R4)\nPACK     PACK  SCRATCH,0(1,R14)    PACK OPERAND                   WGH\nMVZ      MVZ   QFZONES(1),0(R14)   MOVE ZONES FROM PARM FIELD     WGH\n         DS    0F\nALCLIST  DC    C'HASPSAVE',CL16' ',F'0',F'10',F'50',F'0'\n         DC    CL16' ',X'040202B0',F'0',CL8' '\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $JQE                                                        CL\n         $HASPEQU\n         IFGRPL  ,                                                WGH\n         $BUFFER ,                                                WGH\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\nWORK     DSECT\n         DS    CL80\nBUFFER   DS    CL256\nDSNAME   DS    H\n         DS    CL44\nSCRATCH  DS    D                   DOUBLEWORD                     WGH\nFRSTLINE DS    F                   FIRST LINE TO SAVE             WGH\nLINECNT  DS    F                   CURRENT LINE #                 WGH\nLASTLINE DS    F                   LAST LINE TO SAVE              WGH\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SAVEO": {"ttr": 7178, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SAVE     TITLE 'QUEUE COMMAND - CREATE A COPY OF CURRENT DATASET' ONL01\nSAVE     QSTART ,                  START SAVE CSECT ASSEMBLY      ONL01\n         USING QCKPT,R10      BASE REG FOR CHECKPOINT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING QDISPLAY,R9    BASE REG FOR DISPLAY WORK AREA\n         L     R9,QVDSPL      LOAD BASE REG\n         USING WORK,R13       LOCAL WORK AREA\n***********************************************************************\n*                                                                     *\n*   ALLOCATE OUTPUT DATASET                                           *\n*                                                                     *\n***********************************************************************\n         CLC   QPDSID,=X'FFFF'   IS THERE A VALID DATASET?          SBG\n         BE    TILT1          NO. TELL THE USER.\n         MVC   DSNAME+2(44),QBLANK BLANK THE DSNAME\n         MVC   DSNAME+2(8),QPARM1 FIRST PART OF DSNAME\n         LA    R1,DSNAME      ADDR OF DSNAME\n         ST    R1,DA08PDSN    STORE IN PARM LIST\n         LH    R2,QLNG1       LENGTH OF QPARM1\n         LA    R1,2(R2,R1)    OFFSET INTO DSNAME\n         LH    R3,QLNG2       LENGTH OF QPARM2\n         LTR   R3,R3          ?/LENGTH ZERO\n         BZ    DATA           YES. USE DATA AS DEFAULT DS TYPE\n         MVI   0(R1),C'.'     MOVE IN DELIMITER\n         MVC   1(8,R1),QPARM2 NO. SAVE DS TYPE\n         LA    R1,1(R3,R2)    LENGTH OF DSNAME\n         B     DSLNGH         GO SAVE LENGTH\nDATA     MVC   0(5,R1),=C'.DATA' LAST PART OF DSNAME\n         LA    R1,5(R2)       LENGTH OF DSNAME\nDSLNGH   STH   R1,DSNAME      STORE LENGTH OF DSNAME\n         MVC   DA08DDN(72),ALCLIST REMAINDER OF PARM LIST\n         LH    R3,QLNG3       LENGTH OF QPARM3 (VOLSER)           UF028\n         LTR   R3,R3          WAS IT SPECIFIED?                   UF028\n         BZ    DSALLOC        NO, SKIP THIS                       UF028\n         MVC   DA08SER(8),QPARM3  SET VOLSER                      UF028\nDSALLOC  MVI   DAIRFLAG,X'08' INDICATE ALLOC FUNCTION\n         L     R15,=V(ALLOCATE) ADDR OF DAIR MODULE\n         BALR  R14,R15        GO TO IT\n         MVC   QCOUT+36(1),QCRECFM MOVE IN RECORD FORMAT\n         NI    QCOUT+36,X'06' TURN OFF EVERTHING BUT CCTL\n         OI    QCOUT+36,X'90' SPECIFY FIXED BLOCKED RECORDS\n         LH    R1,QCLRECL     RECORD LENGTH\n         LTR   R1,R1          IS THE LRECL ZERO?\n         BNZ   RECOK          NO. SKIP.\n         LA    R1,133         YES. USE LRECL 133.\nRECOK    STH   R1,QCOUT+82    STORE LRECL\nBIGGER   LR    R2,R1          UPDATE BLKSIZE\n         AH    R1,QCOUT+82    ADD LRECL TO BLKSIZE\n         CH    R1,=H'4096'    IS THE BLKSIZE GREATER THAN 4096?\n         BL    BIGGER         NO. MAKE IT BIGGER.\n         STH   R2,QCOUT+62    STORE BLKSIZE\n         OPEN  MF=(E,QCOPEN)\n***********************************************************************\n*                                                                     *\n*   REPOSITION DATASET TO TOP                                         *\n*                                                                     *\n***********************************************************************\n         L     R4,QCSTART     TOP OF DATASET POINTER\n         L     R4,0(R4)       DISK ADDR TOP OF DATASET\n         L     R5,QCBLKA      IOAREA ADDRESS\n         B     FIRST          GO DO IT\n***********************************************************************\n*                                                                     *\n*   PROCESS DATASET                                                   *\n*                                                                     *\n***********************************************************************\nNEXTBLK  L     R4,0(R5)       DISK ADDR OF NEXT BLOCK\nFIRST    LTR   R4,R4          IS THE DISK ADDR ZERO?\n         BZ    END            YES. END OF DATASET.\n         BAL   R8,READ        READ A BLOCK\n         CLC   QPJOBID(6),4(R5) DOES THE JOBID MATCH?\n         BE    IDISOK              BR IF SO                          CL\n         L     R4,QCJQEA           ADDR OF JQE                       CL\n         TM    JQEFLAG3-JQE(R4),JQE3SYSD END OF DATA SET             CL\n         BNO   END                    IF NOT SYSTEM JQE              CL\n         CLC   QPJOBID,4(R5)           ELSE JUST CHECK JOB KEY       CL\n         BNE   END            NO. END OF DATASET.\nIDISOK   LA    R4,10(R5)      ADDR OF FIRST RECORD IN BLOCK          CL\n***********************************************************************\n*                                                                     *\n*   PROCESS RECORDS                                                   *\n*                                                                     *\n***********************************************************************\nNEXTREC  CLI   0(R4),X'FF'    IS LENGTH BYTE FF?\n         BE    NEXTBLK        YES. END OF BLOCK.\n         TM    1(R4),X'10'    IS THIS A SPANNED RECORD?\n         BO    SPAN           YES. SKIP IT.\n         SR    R6,R6          ZERO OUT REG\n         IC    R6,0(R4)       INSERT LENGTH\n         TM    1(R4),X'80'    IS CCTL SPECIFIED?\n         BZ    NOCCTL         NO. SKIP.\n         LA    R6,1(R6)       INCREMENT LENGTH FOR CCTL\nNOCCTL   TM    1(R4),X'08'    IS THIS RECORD TO BE IGNORED?\n         BO    SKIPREC        YES. SKIP IT.\n         MVI   BUFFER,C' '    BLANK FIRST BYTE OF BUFFER\n         MVC   BUFFER+1(255),BUFFER BLANK THE BUFFER\n         LR    R7,R6          DO NOT DESTROY R6\n         SH    R7,=H'1'       IS LENGTH ZERO?\n         BM    SKIPREC        YES. SKIP RECORD.\n         EX    R7,MVCREC      MOVE RECORD TO BUFFER\n         PUT   QCOUT,BUFFER\nSKIPREC  LA    R4,3(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\nSPAN     LH    R6,2(R4)       SEGMENT LENGTH\n         TM    1(R4),X'08'    IS THIS THE FIRST SEGMENT?\n         BO    SPANFRST       YES. USE LARGER HEADER SIZE.\n         LA    R4,4(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\nSPANFRST LA    R4,6(R6,R4)    INCREMENT TO NEXT RECORD\n         B     NEXTREC        PROCESS NEXT RECORD\n***********************************************************************\n*                                                                     *\n*   CLOSE UP SHOP AND GO HOME                                         *\n*                                                                     *\n***********************************************************************\nEND      CLOSE MF=(E,QCOPEN)\n         MVI   DAIRFLAG,X'18' INDICATE FREE FUNCTION\n         L     R15,=V(ALLOCATE) ADDR OF DAIR MODULE\n         BALR  R14,R15        GO TO IT\n         L     R15,=V(LISTDS) GO BACK TO LISTDS\n         BALR  R14,R15        GO TO IT\n         QSTOP\n***********************************************************************\n*                                                                     *\n*   READ A BLOCK FROM HASPACE                                         *\n*                                                                     *\n***********************************************************************\nREAD     ST    R4,QCTRAK      STORE DISK ADDR\n         LR    R1,R5          IOAREA ADDRESS\n         L     R15,=V(READSPC) ADDR OF ROUTINE TO READ HASPACE\n         BALR  R14,R15        GO TO IT\n         BR    R8             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\nTILT1    QTILT '*** YOU ARE NOT PROCESSING A VALID DATASET ***'\n         LTORG\nMVCREC   MVC   BUFFER(1),3(R4)\n         DS    0F\nALCLIST  DC    C'HASPSAVE',CL16' ',F'0',F'10',F'50',F'0'\n         DC    CL16' ',X'040202B0',F'0',CL8' '\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $JQE                                                        CL\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\nWORK     DSECT\n         DS    CL80\nBUFFER   DS    CL256\nDSNAME   DS    H\n         DS    CL44\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SEARCH": {"ttr": 7425, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x00\\x942/\\x00\\x942/\\x16G\\x03I\\x03A\\x00\\x0e\\xe2\\xc3\\xc8\\xe4\\xc4\\xc5\\xd3@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-11-18T00:00:00", "modifydate": "1994-11-18T16:47:00", "lines": 841, "newlines": 833, "modlines": 14, "user": "SCHUDEL"}, "text": "SEARCH   TITLE 'QUEUE COMMAND - JQE AND JOE SEARCH AND FORMAT'    ONL01\nSEARCH   QSTART ,                  START SEARCH CSECT ASSEMBLY    ONL01\n*******************************************************************\n* RNB CHANGES:                                                    *\n*      (1) RNB16 - PROCESS BOTH LOCAL AND REMOTE JOE QUEUE.       *\n*                  ALSO, FIX BUG IN UF020 THAT WAS CLEARING       *\n*                  FIELD JOEFLAG1 IN THE WORK JOE.                *\n*      (2) RNB19 - FOR SP, SEARCH DUMP Q AND CONVERSION (XEQ) Q IF*\n*                  STATUS COMMAND OR DJ. ALSO OUTPUT QUEUE        *\n*******************************************************************\n* WGH CHANGES:                                                    *\n*                                                                 *\n*          MODIFDIED TO INCLUDE NJE AND SPOOL OFFLOAD QUEUES      *\n*                                                                 *\n*                                                                 *\n*                                                                 *\n*                                                                 *\n*******************************************************************\n         L     R10,QVCKPT     LOAD BASE REG\n         USING JQE,R9         BASE REG FOR JQE DSECT\n         USING JOE,R8         BASE REG FOR JOE DSECT\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA\n******************************************************************UF006\n*                                                                 UF006\n*   CALL - READ JES2 CHECKPOINT FILE                              UF006\n*                                                                 UF006\n******************************************************************UF006\n         L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006\n         BALR  R14,R15        GO TO IT                            UF006\n***********************************************************************\n*                                                                     *\n*   BRANCH TO PROPER ROUTINE                                          *\n*                                                                     *\n***********************************************************************\n         LH    R1,QCODEH      LOAD FUNCTION CODE INTO R1\n         CH    R1,=H'60'      IS THE FUNCTION SUPPORTED?\n         BH    STOP           NO. RETURN.\n         B     *+4(R1)        BRANCH TO ROUTINE\n         B     ST             0 OFFSET\n         B     DA             4\n         B     DI             8\n         B     AO   DO        12\n         B     AI             16\n         B     AO             20\n         B     HI             24\n         B     HO             28\n         B     DT             32\n         B     DJ             36\n         B     DS             40\n         B     DQ             44\n         B     DF             48\n         B     WO             52   WTRID OUTPUT                   UF047\n         B     PREFIX         56   CHANGE PREFIX                  WGH\n         B     HQ             60   DISPLAY $OUTPUT Q              WGH\n***********************************************************************\n*                                                                     *\n*   PREFIX - AUTHORIZED USER CHANGED  LEVEL                           *\n*                                                                     *\n***********************************************************************\nPREFIX   MVC   QLOGON,QPARM1  MOVE NEW LEVEL INTO QLOGON          WGH\n         MVC   QLOGONLN+2(2),QLNG1     MOVE IN LENGTH             WGH\n         B     ST             ENTER STAT PROCESSING               WGH\n***********************************************************************\n*                                                                     *\n*   STATUS - FIND ALL JOBS THAT MATCH LEVEL                           *\n*                                                                     *\n***********************************************************************\nST       CLI   QPARM1,C' '    DID USER SPECIFY LEVEL?\n         BNE   ST2            NO. USE QLOGON.\n         MVC   QPARM1,QLOGON  MOVE USER PARM1 TO LEVEL\nST2      BAL   R2,PARMLEN     DETERMINE PARM LENGTH\n* SEARCH THE TSO QUEUE\n         USING JQTDSECT,R1    BASE REG FOR JQT\nDJ2      LH    R6,QLNG1       LENGTH OF COMPARE FOR LEVEL\n         L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTTSU      ADDR OF TSO QUEUE\n         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DJ3            END OF QUEUE\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH THE SYSTEM QUEUE\nDJ3      L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTSTC      ADDR OF STC QUEUE\n         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DJ4A           END OF QUEUE                        CL005\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         B     PRTJQE         PRINT THE RECORD\n         SPACE 1                                                  CL005\n* SEARCH FOR SETUP QUEUE ELEMENT                                  CL005\nDJ4A     L     R1,QCJQHEAD         LOAD ADDR OF JQT               CL005\n         LA    R4,JQTSETUP         ADDR OF $SETUP QUEUE           CL005\n         MVI   QCLASS,24           INDICATE THIS IS SETUP QUEUE   CL005\n         BAL   R2,SRCHJQE          SEARCH THE QUEUE               CL005\n         B     DJ4                 + 0 END OF QUEUE               CL005\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC            + 4 JOBNAME EQUAL TO LEVEL?    CL005\n         BNE   SKIPJQE             NO, SKIP THIS RECORD           CL005\n         B     PRTJQE              PRINT THE ELEMENT              CL005\n         SPACE 1                                                  CL005\n* SEARCH FOR HELD OUTPUT\nDJ4      L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE\n         DROP  R1\n         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DJ6            END OF QUEUE                           CL\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    DJ4X           YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\nDJ4X     EQU   *                                                  WGH42\n         TM    JQEFLAG8,JQE8HLDS    ANY HELD 3540 DATASETS?       WGH42\n         BNZ   PRTJQE         YES. PRINT THE RECORD.\n         TM    JQEFLAG3,JQE3SYSD   PRINT JQE IF                      CL\n         BO    PRTJQE               SPECIAL                          CL\n         B     REJJQE         REJECT THE RECORD\n* SEARCH CONVERSION (XEQ) QUEUE                                   RNB19\nDJ6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    RNB19\n         USING JQTDSECT,R1    BASE REG FOR JQT                    RNB19\n         LA    R4,JQTXEQ      ADDR OF CONVERSION QUEUE            RNB19\n         DROP  R1                                                 RNB19\n         MVI   QCLASS,16      INDICATE THIS IS THE CNV QUEUE      RNB19\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    RNB19\n         B     DJ7            END OF QUEUE                        RNB19\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      RNB19\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               RNB19\n         B     PRTJQE         PRINT THE RECORD                    RNB19\n* SEARCH OUTPUT (AWAITING OUTPUT) QUEUE                           RNB19\nDJ7      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    RNB19\n         USING JQTDSECT,R1    BASE REG FOR JQT                    RNB19\n         LA    R4,JQTAWOUT    ADDR OF OUTPUT QUEUE                RNB19\n         DROP  R1                                                 RNB19\n         MVI   QCLASS,20      INDICATE THIS IS THE AWO QUEUE      RNB19\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    RNB19\n         B     DJ8            END OF QUEUE                  WGH   RNB19\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      RNB19\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               RNB19\n         B     PRTJQE         PRINT THE RECORD                    RNB19\n* SEARCH RECEIVE QUEUE     NJE                                    WGH\nDJ8      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                    WGH\n         LA    R4,JQTRCV      ADDR OF RECEIVE QUEUE               WGH\n         DROP  R1                                                 WGH\n         MVI   QCLASS,28      INDICATE THIS IS THE RECEIVE        WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    WGH\n         B     DJ10           END OF QUEUE                        WGH\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJQE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      WGH\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               WGH\n         B     PRTJQE         PRINT THE RECORD                    WGH\n* SEARCH XMIT    QUEUE                                            WGH\nDJ10     L     R1,QCJQHEAD    LOAD ADDR OF JQT                    WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                    WGH\n         LA    R4,JQTXMIT     ADDR OF XMIT    QUEUE               WGH\n         DROP  R1                                                 WGH\n         MVI   QCLASS,32      INDICATE THIS IS THE XMIT  QUEUE    WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    WGH\n         B     DJ11           END OF QUEUE                        WGH\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJQE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      WGH\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               WGH\n         B     PRTJQE         PRINT THE RECORD                    WGH\n* SEARCH $INPUT  QUEUE                                            WGH\nDJ11     L     R1,QCJQHEAD    LOAD ADDR OF JQT                    WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                    WGH\n         LA    R4,JQTINPUT    ADDR OF INPUT   QUEUE               WGH\n         DROP  R1                                                 WGH\n         MVI   QCLASS,36      INDICATE THIS IS THE INPUT QUEUE    WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    WGH\n         B     ST3            END OF QUEUE                        WGH\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJQE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      WGH\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               WGH\n         B     PRTJQE         PRINT THE RECORD                    WGH\n* SEARCH INPUT QUEUES\nST3      MVI   QCLASS,192     START WITH CLASS A\nST4      BAL   R2,NEXTJQT     FIND NEXT QUEUE\n         B     ST5            END OF QUEUES                       WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     ST4            END OF QUEUE\n         CLI   JQEFLAG1,0     IS THE JOB              HELD?\n         BNE   ST7            YES. SPECIAL HANDLING.\n         CLI   JQEBUSY,0      IS THE JOB EXECUTING\n         BNE   ST7            YES, SPECIAL HANDLING.\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJQE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         B     PRTJQE         PRINT THE JQE\nST7      EQU   *                                                  WGH\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRT2JQE        YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   REJJQE         NO. SKIP THIS RECORD.\n         B     PRT2JQE        PRINT THE RECORD WITHOUT INCR COUNT\n* SEARCH OUTPUT QUEUES\nST5      MVI   QCLASS,192     START WITH CLASS A\nST6      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE\n         B     STOP           NO MORE QUEUES                      WGH\n         BAL   R2,SRCHJOE     SEARCH A JOE QUEUE\n         B     ST6            END OF QUEUE\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJOE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   ST6WTR         NO. CHECK WTRID MATCH               WGH\n         B     PRTJOE         PRINT THE RECORD\n* SEARCH OUTPUT QUEUES FOR WRITID MATCH                           WGH\nST6WTR   SR    R1,R1          CLEAR REG FOR INSERT                WGH\n         ICM   R1,B'0111',JOECHARB  OFFSET TO CHAR JOE            WGH\n         BZ    SKIPJOE        NONE, SKIP THIS ONE                 WGH\n         A     R1,QCJOTA      GET REAL JOE ADDRESS                WGH\n         CLI   QPARM1,C' '    IS PREFIX BLANK?                    WGH\n         BE    SKIPJOE        YES,  SKIP IT                       WGH\n         EX    R6,STCLCW      IS THE WRTID   EQUAL TO LEVEL?      WGH\n         BNE   SKIPJOE        NO, TRY NEXT ONE                    WGH\n         B     PRTJOE         PRINT THE RECORD                    WGH\nSTCLCW   CLC   QPARM1(1),JOEWTRID-JOE(R1)                         WGH\n***********************************************************************\n* COMPARE USED TO CHECK LEVEL\nSTCLC    CLC   QPARM1(1),JQEJNAME IS THE JOBNAME EQUAL TO LEVEL?\n***********************************************************************\n*                                                                     *\n*   DQ - PRINT SUMMARY OF ALL JOBS IN THE INPUT QUEUES                *\n*                                                                     *\n***********************************************************************\n*  SEARCH ALL QUEUES\nDQ       MVI   QCLASS,192           START WITH CLASS A\n         MVC   QDHLINE,DQHEADER     MOVE IN THE HEADING\nDQ1      BAL   R2,NEXTJQT           FIND NEXT QUEUE\n         B     STOP                 END OF QUEUES                 WGH\n         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR EXECUTING JOBS\n         ZAP   QCOUNTA,=P'0'        ZERO COUNT FOR AWAITING JOBS\n         ZAP   QCOUNTH,=P'0'        ZERO COUNT FOR HELD JOBS\n         BAL   R2,SRCHJQE           SEARCH THE QUEUE\n         B     DQ4                  END OF QUEUE\n         CLI   JQEBUSY,0            IS THIS JOB EXECUTING\n         BE    DQ2                  NO, NEXT TEST\n         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER\n         B     SKIPJQE              PROCESS NEXT JQE\nDQ2      TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 HELD JOB?\n         BZ    DQ3                  NO, NEXT TEST\n         AP    QCOUNTH,=P'1'        YES, BUMP COUNTER\n         B     SKIPJQE              PROCESS NEXT JQE\nDQ3      CLI   JQEFLAG1,0           IS THIS JOB AWAITING EXECUTION\n         BNE   SKIPJQE              NO, PROCESS NEXT JQE\n         CLI   JQEBUSY,0            IS THE JOB BUSY?\n         BNE   SKIPJQE              YES, SKIP\n         AP    QCOUNTA,=P'1'        BUMP COUNTER\n         B     SKIPJQE              PROCESS NEXT JQE\nDQ4      CLC   QCOUNT,=PL3'0'       IS THIS QUEUE EMPTY\n         BE    DQ1                  YES, TRY THE NEXT QUEUE\n         MVC   QDMSG,DQLINE         MOVE IN DETAIL LINE\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS\n         MVC   QECOUNT,FCOUNT+3                    IN EXECUTION\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTA            NUMBER OF JOBS\n         MVC   QACOUNT,FCOUNT+3                    AWAITING EXECUTION\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTH            NUMBER OF JOBS\n         MVC   QHCOUNT,FCOUNT+3                    IN HELD STATUS\n         MVC   FCOUNT,ED5           MOVE IN THE TOTAL NUMBER OF JOBS\n         ED    FCOUNT,QCOUNT             IN THIS QUEUE\n         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS\n         BAL   R2,DISPLAY           GO DISPLAY THIS LINE\n         B     DQ1                  PROCESS THE NEXT QUEUE\n***********************************************************************\n*                                                                     *\n*   DF - PRINT SUMMARY OF ALL JOBS IN THE OUTPUT QUEUES               *\n*                                                                     *\n***********************************************************************\nDF       MVI   QCLASS,192           START WITH CLASS A\n         MVC   QDHLINE,DFHEADER     MOVE IN THE HEADING\nDF1      BAL   R2,NEXTJOT           FIND NEXT QUEUE\n         B     STOP                 NO MORE QUEUES                  WGH\n         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR JOBS PRINTING\n         BAL   R2,SRCHJOE           SEARCH THE QUEUE\n         B     DF2                  END OF QUEUE\n         TM    JOEFLAG1,X'20'       IS JOB PRINTING\n         BNO   SKIPJOE              NO, PROCESS NEXT JOE\n         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER\n         B     SKIPJOE              PROCESS NEXT JOE\nDF2      CLC   QCOUNT,=PL3'0'       QUEUE EMPTY\n         BE    DF1                  YES, TRY THE NEXT QUEUE\n         MVC   QDMSG,DFLINE         MOVE IN DETAIL LINE\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS\n         MVC   QECOUNT,FCOUNT+3                    PRINTING\n         MVC   FCOUNT,ED5           MOVE IN TOTAL NUMBER OF JOBS\n         ED    FCOUNT,QCOUNT             IN THIS QUEUE\n         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS\n         BAL   R2,DISPLAY           GO DISPLAY THIS LINE\n         B     DF1                  PROCESS NEXT QUEUE\n***********************************************************************\n*                                                                     *\n*   DJ - FIND A SPECIFIC JOB                                          *\n*                                                                     *\n***********************************************************************\nDJ       CLI   QPARM1,C' '    DID USER SPECIFY JOBNAME?\n         BE    DJ9            NO. TILT.\n         MVC   QLNG1,=H'7'    COMPARE FOR 8 CHARACTERS\n         B     DJ2            USE THE STATUS ROUTINES\nDJ9      QTILT '*** YOU MUST SPECIFY JOBNAME ***'\n***********************************************************************\n*                                                                     *\n*   DI - PRINT ALL JOBS IN INPUT QUEUES                               *\n*                                                                     *\n***********************************************************************\nDI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   DI5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nDI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         B     DI6            END OF QUEUES                         WGH\n         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE\n         B     DI2            END OF QUEUE                    WGH\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nDI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJQT     FIND QUEUE\n         B     DI6            END OF QUEUES                         WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DI6            END OF QUEUE                    WGH\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH XMIT QUEUE\nDI6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                      WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                      WGH\n         LA    R4,JQTXMIT     ADDR OF XMIT QUEUE                    WGH\n         DROP  R1                                                   WGH\n         MVI   QCLASS,32      INDICATE THIS IS XMIT QUEUE           WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                      WGH\n         B     STOP           END OF QUEUE                          WGH\n         B     PRTJQE         PRINT THE RECORD                      WGH\n***********************************************************************\n*                                                                     *\n*   AI - PRINT JOBS IN INPUT QUEUES THAT ARE AVAILABLE FOR SELECTION  *\n*                                                                     *\n***********************************************************************\nAI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   AI5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nAI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         B     AI6            END OF QUEUES                         WGH\n         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE\n         B     AI2            END OF QUEUE\n         CLI   JQEFLAG1,0     IS THE JOB         HELD?\n         BNE   REJJQE         YES. SKIP IT.\n         CLI   JQEBUSY,0      IS THE JOB BUSY\n         BNE   REJJQE          YES, SKIP IT\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nAI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJQT     FIND QUEUE\n         B     AI6            NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     AI6            END OF QUEUE                          WGH\n         CLI   JQEFLAG1,0     IS THE JOB         HELD?\n         BNE   REJJQE         YES. SKIP IT.\n         CLI   JQEBUSY,0      IS THE JOB BUSY?\n         BNE   REJJQE          YES, SKIP IT\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH XMIT QUEUE\nAI6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                      WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                      WGH\n         LA    R4,JQTXMIT     ADDR OF XMIT QUEUE                    WGH\n         DROP  R1                                                   WGH\n         MVI   QCLASS,32      INDICATE THIS IS XMIT QUEUE           WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                      WGH\n         B     STOP           END OF QUEUE                          WGH\n         CLI   JQEFLAG1,0     IS THE JOB         HELD?              WGH\n         BNE   REJJQE         YES. SKIP IT.                         WGH\n         CLI   JQEBUSY,0      IS THE JOB BUSY?\n         BNE   REJJQE          YES, SKIP IT\n         B     PRTJQE         PRINT THE RECORD                      WGH\n***********************************************************************\n*                                                                     *\n*   AO - PRINT AVAILABLE JOBS IN THE OUTPUT QUEUE                     *\n*                                                                     *\n***********************************************************************\nAO       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   AO5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nAO2      EQU   *\n         CLI   QSUBNAME,C'D'  IS THIS 'AO' OR 'DO' ?              WGH42\n         BE    AO3            CONTINUE FOR 'DO'                   WGH42\n         CLI   QCLASS,C'9'    HAVE WE REACHED HOLDQ YET?          WGH42\n         BE    STOP           YES.. DO NOT DISP HOLD ON AO REQ    WGH42\nAO3      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE\n         B     AO2            END OF QUEUE\n         B     PRTJOE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nAO5      EQU   *              USER SPECIFIED CLASS\n         CLC   QPARM1(4),=C'HELD'                                  WGH\n         BNE   AO6            NO.. USE CLASS SPECIFIED\n         MVI   QCLASS,C'!'    YES.. CHANGE TO ! TO SELECT HELD OUT Q\n         B     AO7            AND CONTINUE                        WGH42\nAO6      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\nAO7      BAL   R2,FINDJOT     FIND QUEUE\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH THE QUEUE\n         B     AO8            END OF QUEUE\n         B     PRTJOE         YES.. PRINT THE RECORD\n*   SEARCH HOLD Q FOR SELECTED CLASS                                WGH\nAO8      EQU   *                                                    WGH\n         CLI   QCLASS,C'!'    WAS ALL HELD OUT REQUESTED ?          WGH\n         BE    STOP           YES... DO NOT CONTINUE                WGH\n         CLI   QSUBNAME,C'A'  IS THIS 'AO' OR 'DO' ?              WGH42\n         BE    STOP           EXIT FOR 'AO'                       WGH42\n         MVI   QCLASS,C'!'    CHANGE TO ! TO SELECT HELD OUT Q      WGH\n         BAL   R2,FINDJOT     FIND QUEUE\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         CLC   JOECURCL,QPARM1     IS THIS CLASS REQUESTED ?        WGH\n         BNE   REJJOE         NO... SKIP IT                         WGH\n         B     PRTJOE         YES.. PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   WO - PRINT JOES IN OUTPUT QUEUE THAT HAVE WTRID SPECIFIED         *\n*                                                                     *\n***********************************************************************\n* SEARCH ALL QUEUES                                               UF047\nWO       MVI   QCLASS,192     START WITH CLASS A                  UF047\nWO2      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE                UF047\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE                  UF047\n         B     WO2            END OF QUEUE                        UF047\n         SR    R1,R1          CLEAR REG FOR INSERT                UF047\n         ICM   R1,B'0111',JOECHARB  OFFSET TO CHAR JOE            UF047\n         BZ    REJJOE         NONE, SKIP THIS ONE                 UF047\n         A     R1,QCJOTA      GET REAL JOE ADDRESS                UF047\n         TM    JOEUSER-JOE(R1),X'FF'-X'40' USERID PRESENT?        WGH42\n         BNZ   PRTJOE         YES.. PRINT IT                      WGH42\n         TM    JOEWTRID-JOE(R1),X'FF'-X'40' WTRID PRESENT?        UF047\n         BZ    REJJOE         NO, TRY NEXT ONE                    UF047\n         B     PRTJOE         PRINT THE RECORD                    UF047\n***********************************************************************\n*                                                                     *\n*   HI - PRINT JOBS IN INPUT QUEUES THAT ARE HELD                     *\n*                                                                     *\n***********************************************************************\nHI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   HI5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nHI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         B     HI6            END OF QUEUES                         WGH\n         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE\n         B     HI2            END OF QUEUE\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?\n         BZ    REJJQE         NO. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nHI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJQT     FIND QUEUE\n         B     HI6            NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     HI6            END OF QUEUE                     WGH\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?\n         BZ    REJJQE         NO. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH XMIT QUEUE                                                 WGH\nHI6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                      WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                      WGH\n         LA    R4,JQTXMIT     ADDR OF XMIT QUEUE                    WGH\n         DROP  R1                                                   WGH\n         MVI   QCLASS,32      INDICATE THIS IS XMIT QUEUE           WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                      WGH\n         B     STOP           END OF QUEUE                          WGH\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?     WGH\n         BZ    REJJQE         YES. SKIP IT.                         WGH\n         B     PRTJQE         PRINT THE RECORD                      WGH\n***********************************************************************\n*                                                                     *\n*   HO - LIST ALL JOBS WITH HELD OUTPUT                               *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nHO       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         B     HO5            SKIP $OUTPUT Q                     WGH42\n         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE\n         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n*        B     STOP           END OF QUEUE                    WGH\n         B     HO5            END OF QUEUE                          WGH\n*        TM    JQEFLAG8,JQE8HLDS    ANY HELD 3540 DATASETS?       WGH42\n*        BNZ   PRTJQE         YES. PRINT THE RECORD.\n         B     PRTJQE         PRINT THE  RECORD                   WGH42\n*        B     REJJQE         REJECT THE RECORD\n*        QUEUE OF HELD JOES                                       WGH42\nHO5      EQU   *              HELD OUTPUT Q FOR JOES              WGH42\n         MVI   QCLASS,C'!'    SPECIFY ! TO SELECT HELD OUT Q\n         BAL   R2,FINDJOT     FIND QUEUE\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BE    PRTJOE         NO.. PRINT THE RECORD               WGH42\n         CLC   JOECURCL,QPARM1 YES.  IS THIS CLASS REQUESTED ?      WGH\n         BE    PRTJOE         YES.. PRINT THE RECORD                WGH\n         B     REJJOE         NO... SKIP RECORD                     WGH\n***********************************************************************\n*                                                                     *\n*   HQ - LIST ALL JOBS IN   $OUTPUT QUEUE                             *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nHQ       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE\n         DROP  R1                                             WGH\n         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE                    WGH\n         B     PRTJQE         PRINT THE  RECORD                   WGH42\n***********************************************************************\n*                                                                     *\n*   DA - FIND ALL EXECUTING JOBS                                      *\n*                                                                     *\n***********************************************************************\nDA       MVI   QCLASS,192     START WITH CLASS A\nDA2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         B     STOP           END OF QUEUE                          WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DA2            END OF QUEUE\n         CLI   JQEBUSY,0      IS THE JOB EXECUTING?\n         BE    REJJQE         NO. REJECT IT.\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DT - LIST ALL TSO USERS                                           *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nDT       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTTSU      ADDR OF TSO QUEUE\n         DROP  R1\n         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DS - LIST ALL SYSTEM STARTED TASKS                                *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nDS       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTSTC      ADDR OF STC QUEUE\n         DROP  R1\n         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DETERMINE LENGTH OF LEVEL                                         *\n*                                                                     *\n***********************************************************************\nPARMLEN  LA    R3,7           MAXIMUM LENGTH OF 8\n         LA    R4,QPARM1+7    END OF FIELD\nPARMLEN2 CLI   0(R4),C' '     IS THIS BYTE BLANK?\n         BNE   PARMLEN3       NO. THIS IS THE LENGTH\n         BCTR  R4,0           TRY PREVIOUS BYTE\n         BCT   R3,PARMLEN2    LOOP\nPARMLEN3 STH   R3,QLNG1       STORE THE LENGTH OF LEVEL\n         BR    R2             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   SEARCH A JQE QUEUE                                                *\n*                                                                     *\n***********************************************************************\nSRCHJQE  ZAP   QCOUNT,=P'0'   ZERO THE QUEUE COUNT\n         L     R9,0(R4)       LOAD FIRST JQE OFFSET               UF020\nNEXTJQE  LA    R9,0(,R9)      KILL EXTRANEOUS BITS                UF020\n         LTR   R9,R9          TEST FOR END OF QUEUE               UF020\n         BZR   R2             END OF QUEUE. RETURN.\n         A     R9,QCJQTA      ADD BASE TO OFFSET\n         B     4(R2)          DETERMINE ELIGIBILITY\nPRTJQE   AP    QCOUNT,=P'1'   INCREMENT COUNT\nPRT2JQE  SR    R1,R1          INDICATE THIS IS A JQE\n         L     R15,=V(FORMAT) ADDR OF PRINT MODULE\n         BALR  R14,R15        PRINT THE JQE IN R9\nREJJQE   L     R9,JQENEXT     LOAD OFFSET TO NEXT JQE             UF020\n         B     NEXTJQE        GET THE NEXT JQE\nSKIPJQE  AP    QCOUNT,=P'1'   INCREMENT COUNT\n         B     REJJQE         CONTINUE\n***********************************************************************\n*                                                                     *\n*   SEARCH A JOE QUEUE                                                *\n*                                                                     *\n***********************************************************************\nSRCHJOE  ZAP   QCOUNT,=P'0'    ZERO THE QUEUE COUNT               RNB16\n         CLI   QCLASS,C'@'     NJE SYSOUT XMIT QUEUE??            WGH42\n         BE    FIRSTJOE        YES.. GO DO IT                     WGH42\n         CLI   QCLASS,C'!'     HOLD SYSOUT QUEUE    ??            WGH42\n         BE    FIRSTJOE        YES.. GO DO IT                     WGH42\n         OI    QFLAG1,QFLG1LCL SHOW SEARCHING LOCAL QUEUE         RNB16\n         B     FIRSTJOE        AND GO DO IT                       RNB16\n*                                                                 RNB16\nSRCHJOE1 TM    QFLAG1,QFLG1LCL   WERE WE PROCESSING LCL QUEUE?    WGH42\n         BO    SRCHJOE2          YES.. GO DO USER QUEUE           WGH42\n         NI    QFLAG1,X'FF'-QFLG1USR TURN OFF USER QUEUE FLAG     WGH42\n         LA    R4,4(,R4)             POINT TO REMOTE QUEUE        WGH42\n         B     FIRSTJOE          AND GO DO IT                     WGH42\nSRCHJOE2 NI    QFLAG1,X'FF'-QFLG1LCL TURN OFF LOCAL QUEUE FLAG    WGH42\n         OI    QFLAG1,QFLG1USR    SHOW SEARCHING USER  QUEUE      WGH42\n         LA    R4,4(,R4)             POINT TO USER QUEUE          WGH42\n*                                                                 RNB16\nFIRSTJOE L     R8,0(R4)       LOAD FIRST JOE OFFSET               UF020\n         LA    R8,0(,R8)       KILL EXTRANEOUS BITS.              UF020\n         LTR   R8,R8          IS THE QUEUE EMPTY?\n         BNZ   $1             /NO  - CONTINUE                     RNB16\n*                             /YES -                              RNB16\n         CLI   QCLASS,C'@'     NJE SYSOUT XMIT QUEUE??            WGH\n         BE    0(R2)           YES.. RETURN.. NO MORE QUEUES      WGH\n         CLI   QCLASS,C'!'     NJE SYSOUT XMIT QUEUE??            WGH\n         BE    0(R2)           YES.. RETURN.. NO MORE QUEUES      WGH\n*                             /WAS THIS THE LOCAL OR USER QUEUE   WGH42\n         TM    QFLAG1,QFLG1LCL+QFLG1USR     LCL OR USR QUEUE      WGH42\n         BNZ   SRCHJOE1       /YES - GO DO NEXT QUEUE             WGH42\n         BR    R2             /NO  - RETURN TO CALLER             RNB16\n$1       EQU   *                                                  RNB16\n         XC    PRIORITY(12),PRIORITY ZERO OUT HIGHEST POINTERS\nNEXTJOE  LA    R8,0(,R8)      CLEAR EXTRA BITS                    UF020\n         LTR   R8,R8          TEST FOR END OF QUEUE               UF020\n         BZ    TESTJOE        END OF QUEUE. PASS HIGHEST TO CALLER.\n         A     R8,QCJOTA      ADD BASE TO OFFSET\n         L     R9,JOEJQE      OFFSET TO JQE                       UF020\n         N     R9,=A(X'00FFFFFF')  CLEAR EXTRA BITS               UF020\n         BZ    TRYJOE         THIS JOE ALREADY USED. TRY NEXT ONE.\n         A     R9,QCJQTA      ADD BASE TO OFFSET\n*        LA    R7,255         PRESET MAXIMUM PRIORITY             WGH\n*        TM    JQEPRIO,240    IS THIS JOB PRIORITY 15?            WGH\n*        BO    HIGHJOE        YES. PASS TO CALLER.                WGH\n         LA    R1,1           PRESET PRIORITY ONE\n         CLI   JQETYPE,$HARDCPY IS THE JOB EXECUTING?\n         BNE   EXECJOE        YES. USE PRIORITY ONE.\n         IC    R1,JQEPRIO     INSERT JQE PRIORITY\n         SRL   R1,4           USE TOP HEX DIGIT                   WGH\n*EXECJOE  IC    R7,JOEPRIO     INSERT JOE PRIORITY\nEXECJOE  LH    R7,JOEPRIO     INSERT JOE PRIORITY\n         SRL   R7,4           REMOVE UNUSED DIGIT                 WGH\n         AR    R7,R1          ADD PRIORITIES\n         SRL   R7,1           BECAUSE HASP DOES IT, THAT'S WHY\nHIGHJOE  C     R7,PRIORITY    IS THIS LESS THAN PREVIOUS HIGH?\n         BL    TRYJOE         YES. TRY NEXT ONE.\n         STM   R7,R9,PRIORITY NO. REPLACE PREVIOUS HIGH.\nTRYJOE   L     R8,JOENEXT     ADDR OF NEXT JOE                    UF020\n         N     R8,=A(X'00FFFFFF')  CLEAR EXTRA BITS               UF020\n         B     NEXTJOE        TRY NEXT JOE\nTESTJOE  LM    R7,R9,PRIORITY LOAD ADDR OF HIGHEST JOE\n         LTR   R8,R8          WAS THE QUEUE EMPTY?\n         BNZ   $2                                                 RNB16\n         TM    QFLAG1,QFLG1LCL WAS THIS THE LOCAL QUEUE?          RNB16\n         BO    SRCHJOE1       /YES - GO DO REMOTE QUEUE           RNB16\n         BR    R2             /NO  - END OF QUEUE.                RNB16\n$2       EQU   *                                                  RNB16\n         MVC   JOEJQEB,=F'0'  INDICATE THIS JOE USED              RNB16\n         B     4(R2)          DETERMINE ELIGIBILITY\nPRTJOE   EQU   *                                                  WGH\n         LA    R1,4           INDICATE THIS IS A JOE\n         AP    QCOUNT,=P'1'   INCREMENT COUNT\n         L     R15,=V(FORMAT) ADDR OF PRINT MODULE\n         BALR  R14,R15        PRINT THE JOE IN R9\nREJJOE   B     FIRSTJOE       GET THE NEXT JOE\nSKIPJOE  AP    QCOUNT,=P'1'   INCREMENT COUNT\n         B     REJJOE         CONTINUE\n***********************************************************************\n*                                                                     *\n*   DETERMINE INPUT QUEUE                                             *\n*                                                                     *\n***********************************************************************\nFINDJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         BCTR  R4,0           SUBTRACT 1\n         STH   R4,QCLASSH     RESTORE VALUE\n         B     NEXTJQT2       CONTINUE\nNEXTJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         CH    R4,=H'36'      IS THIS THE LAST QUEUE?\n         BNL   0(R2)          YES. GO HOME                        WGH\n*        BNL   NEXTJQT9       YES. GO HOME.\nNEXTJQT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS\n         AR    R4,R4          MULTIPLY BY 2\n         AR    R4,R4          AND BY 2 AGAIN                      UF020\n         USING JQTDSECT,R1    BASE REG FOR JQT\n         L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTCLSA(R4) NEXT QUEUE\n         DROP  R1\n         B     4(R2)          RETURN TO CALLER                 WGH\n*        BR    R2             RETURN TO CALLER\nNEXTJQT9 CLI   QCODE,0        IS THIS A STATUS REQUEST?\n         BE    ST5            YES. GO TO STATUS.\n         CLI   QCODE,36       IS THIS A DJ REQUEST?\n         BNE   STOP           NO. GO HOME.\n         B     ST5            YES. GO TO STATUS.\n***********************************************************************\n*                                                                     *\n*   DETERMINE OUTPUT QUEUE                                            *\n*                                                                     *\n***********************************************************************\nFINDJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         BCTR  R4,0           SUBTRACT 1\n         STH   R4,QCLASSH     RESTORE VALUE\n         B     NEXTJOT2       CONTINUE\nNEXTJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n*        CH    R4,=H'36'      IS THIS THE LAST QUEUE?   '9'\n*        CH    R4,=H'37'      IS THIS THE LAST QUEUE?   '@'        WGH\n         CH    R4,=H'38'      IS THIS THE LAST QUEUE?   '!'        WGH\n         BNL   0(R2)          YES. GO HOME.                        WGH\n*        BNL   STOP           YES. GO HOME.\nNEXTJOT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS\n         CH    R4,=H'36'      IS THIS XMIT OR HOLD OUT QUEUE       WGH\n*        BNE   NEXTJOT3       NO... CONTINUE                       WGH\n         BL    NEXTJOT3       NO... CONTINUE                       WGH\n         BE    NEXTJOTN       YES XMIT QUEUE/                      WGH\n         B     NEXTJOTH       YES.. HOLD QUEUE                     WGH\nNEXTJOTH L     R1,QCJOTA      LOAD ADDR OF JOT                     WGH\n         USING JOT,R1         BASE REG FOR JOT                     WGH\n         LA    R4,JOTHOLDQ    HELD OUTPUT QUEUE                    WGH\n         DROP  R1                                                  WGH\n         B     4(R2)          RETURN TO CALLER                     WGH\nNEXTJOTN L     R1,QCJOTA      LOAD ADDR OF JOT                     WGH\n         USING JOT,R1         BASE REG FOR JOT                     WGH\n         LA    R4,JOTNTWKQ    NETWORK QUEUE (NOT A PAIR)           WGH\n         DROP  R1                                                  WGH\n         B     4(R2)          RETURN TO CALLER                     WGH\nNEXTJOT3 MH    R4,=H'12'      MULTIPLY BY 12 (POINT TO LOCALS)   WGH42\n         USING JOT,R1         BASE REG FOR JOT\n         L     R1,QCJOTA      LOAD ADDR OF JOT\n         LA    R4,JOTCLSQ(R4) NEXT QUEUE\n         DROP  R1\n         B     4(R2)          RETURN TO CALLER            WGH\n*        BR    R2             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   CALL DISPLAY ROUTINE                                              *\n*                                                                     *\n***********************************************************************\nDISPLAY  LA    R1,QDMSG             SAVE ADDRESS\n         ST    R1,QDMSGA                 OF THE MESSAGE\n         MVC   QDMLNG,=H'80'        SET THE LENGTH\n         L     R15,=V(DISPLAY)      BRANCH TO\n         BALR  R14,R15                     DISPLAY\n         BR    R2                   RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   GO HOME                                                           *\n*                                                                     *\n***********************************************************************\nSTOP     QSTOP\n         LTORG\n***********************************************************************\n*                                                                     *\n*   TABLES FOR CLASS DETERMINATION                                    *\n*                                                                     *\n***********************************************************************\n*NAMETBL  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\nNAMETBL  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@!'            WGH\nCLASSTBL DC    192X'01',64X'00'                              WGH\n         ORG   CLASSTBL+C'!'\n         DC    AL1(38)\n         ORG   CLASSTBL+C'@'\n         DC    AL1(37)\n         ORG   CLASSTBL+C'A'\n         DC    AL1(1,2,3,4,5,6,7,8,9)\n         ORG   CLASSTBL+C'J'\n         DC    AL1(10,11,12,13,14,15,16,17,18)\n         ORG   CLASSTBL+C'S'\n         DC    AL1(19,20,21,22,23,24,25,26)\n         ORG   CLASSTBL+C'0'\n         DC    AL1(27,28,29,30,31,32,33,34,35,36)\n         ORG   ,\n*CLASSTBL DC    124X'01',X'25',67X'01'                             WGH\n*         DC    X'00010203040506070809',7X'00'\n*         DC    X'0A0B0C0D0E0F101112',8X'00'\n*         DC    X'131415161718191A',6X'00'\n*         DC    X'1B1C1D1E1F2021222324',6X'00'\n***********************************************************************\n*                                                                     *\n*   MISCELLANEOUS GARBAGE                                             *\n*                                                                     *\n***********************************************************************\nED5      DC    X'402020202120'\nDQHEADER DC    CL80'*** INPUT QUEUES ***'\nDQLINE   DC    CL80' INPUT                        EXECUTING      WAITINX\n               G      HELD'\nDFHEADER DC    CL80'*** OUTPUT QUEUES ***'\nDFLINE   DC    CL80' OUTPUT                       PRINTING'\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nSEARCH   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         SPACE 1                                                  UF001\n         SPACE 1                                                  UF001\n         $JQE\n         $JOE\n         $JOT\n         $JQT\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\n         DS    CL9\nCLASS    DS    CL1\n         DS    CL2\nQTCOUNT  DS    CL6\n         DS    CL7\nQECOUNT  DS    CL3\n         DS    CL12\nQACOUNT  DS    CL3\n         DS    CL10\nQHCOUNT  DS    CL3\n         ORG   QTCOUNT\nFCOUNT   DS    CL6\nWORK     DSECT\n         DS    CL80\nPRIORITY DS    3F\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SEARCHO": {"ttr": 7686, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SEARCH   TITLE 'QUEUE COMMAND - JQE AND JOE SEARCH AND FORMAT'    ONL01\nSEARCH   QSTART ,                  START SEARCH CSECT ASSEMBLY    ONL01\n*******************************************************************\n* RNB CHANGES:                                                    *\n*      (1) RNB16 - PROCESS BOTH LOCAL AND REMOTE JOE QUEUE.       *\n*                  ALSO, FIX BUG IN UF020 THAT WAS CLEARING       *\n*                  FIELD JOEFLAG1 IN THE WORK JOE.                *\n*      (2) RNB19 - FOR SP, SEARCH DUMP Q AND CONVERSION (XEQ) Q IF*\n*                  STATUS COMMAND OR DJ. ALSO OUTPUT QUEUE        *\n*******************************************************************\n* WGH CHANGES:                                                    *\n*                                                                 *\n*          MODIFDIED TO INCLUDE NJE AND SPOOL OFFLOAD QUEUES      *\n*                                                                 *\n*                                                                 *\n*                                                                 *\n*                                                                 *\n*******************************************************************\n         L     R10,QVCKPT     LOAD BASE REG\n         USING JQE,R9         BASE REG FOR JQE DSECT\n         USING JOE,R8         BASE REG FOR JOE DSECT\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA\n******************************************************************UF006\n*                                                                 UF006\n*   CALL - READ JES2 CHECKPOINT FILE                              UF006\n*                                                                 UF006\n******************************************************************UF006\n         L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006\n         BALR  R14,R15        GO TO IT                            UF006\n***********************************************************************\n*                                                                     *\n*   BRANCH TO PROPER ROUTINE                                          *\n*                                                                     *\n***********************************************************************\n         LH    R1,QCODEH      LOAD FUNCTION CODE INTO R1\n         CH    R1,=H'60'      IS THE FUNCTION SUPPORTED?\n         BH    STOP           NO. RETURN.\n         B     *+4(R1)        BRANCH TO ROUTINE\n         B     ST             0 OFFSET\n         B     DA             4\n         B     DI             8\n         B     AO   DO        12\n         B     AI             16\n         B     AO             20\n         B     HI             24\n         B     HO             28\n         B     DT             32\n         B     DJ             36\n         B     DS             40\n         B     DQ             44\n         B     DF             48\n         B     WO             52   WTRID OUTPUT                   UF047\n         B     PREFIX         56   CHANGE PREFIX                  WGH\n         B     HQ             60   DISPLAY $OUTPUT Q              WGH\n***********************************************************************\n*                                                                     *\n*   PREFIX - AUTHORIZED USER CHANGED  LEVEL                           *\n*                                                                     *\n***********************************************************************\nPREFIX   MVC   QLOGON,QPARM1  MOVE NEW LEVEL INTO QLOGON          WGH\n         MVC   QLOGONLN+2(2),QLNG1     MOVE IN LENGTH             WGH\n         B     ST             ENTER STAT PROCESSING               WGH\n***********************************************************************\n*                                                                     *\n*   STATUS - FIND ALL JOBS THAT MATCH LEVEL                           *\n*                                                                     *\n***********************************************************************\nST       CLI   QPARM1,C' '    DID USER SPECIFY LEVEL?\n         BNE   ST2            NO. USE QLOGON.\n         MVC   QPARM1,QLOGON  MOVE USER PARM1 TO LEVEL\nST2      BAL   R2,PARMLEN     DETERMINE PARM LENGTH\n* SEARCH THE TSO QUEUE\n         USING JQTDSECT,R1    BASE REG FOR JQT\nDJ2      LH    R6,QLNG1       LENGTH OF COMPARE FOR LEVEL\n         L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTTSU      ADDR OF TSO QUEUE\n         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DJ3            END OF QUEUE\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH THE SYSTEM QUEUE\nDJ3      L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTSTC      ADDR OF STC QUEUE\n         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DJ4A           END OF QUEUE                        CL005\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         B     PRTJQE         PRINT THE RECORD\n         SPACE 1                                                  CL005\n* SEARCH FOR SETUP QUEUE ELEMENT                                  CL005\nDJ4A     L     R1,QCJQHEAD         LOAD ADDR OF JQT               CL005\n         LA    R4,JQTSETUP         ADDR OF $SETUP QUEUE           CL005\n         MVI   QCLASS,24           INDICATE THIS IS SETUP QUEUE   CL005\n         BAL   R2,SRCHJQE          SEARCH THE QUEUE               CL005\n         B     DJ4                 + 0 END OF QUEUE               CL005\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC            + 4 JOBNAME EQUAL TO LEVEL?    CL005\n         BNE   SKIPJQE             NO, SKIP THIS RECORD           CL005\n         B     PRTJQE              PRINT THE ELEMENT              CL005\n         SPACE 1                                                  CL005\n* SEARCH FOR HELD OUTPUT\nDJ4      L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE\n         DROP  R1\n         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DJ6            END OF QUEUE                           CL\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    DJ4X           YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\nDJ4X     EQU   *                                                  WGH42\n         TM    JQEFLAG8,JQE8HLDS    ANY HELD 3540 DATASETS?       WGH42\n         BNZ   PRTJQE         YES. PRINT THE RECORD.\n         TM    JQEFLAG3,JQE3SYSD   PRINT JQE IF                      CL\n         BO    PRTJQE               SPECIAL                          CL\n         B     REJJQE         REJECT THE RECORD\n* SEARCH CONVERSION (XEQ) QUEUE                                   RNB19\nDJ6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    RNB19\n         USING JQTDSECT,R1    BASE REG FOR JQT                    RNB19\n         LA    R4,JQTXEQ      ADDR OF CONVERSION QUEUE            RNB19\n         DROP  R1                                                 RNB19\n         MVI   QCLASS,16      INDICATE THIS IS THE CNV QUEUE      RNB19\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    RNB19\n         B     DJ7            END OF QUEUE                        RNB19\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      RNB19\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               RNB19\n         B     PRTJQE         PRINT THE RECORD                    RNB19\n* SEARCH OUTPUT (AWAITING OUTPUT) QUEUE                           RNB19\nDJ7      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    RNB19\n         USING JQTDSECT,R1    BASE REG FOR JQT                    RNB19\n         LA    R4,JQTAWOUT    ADDR OF OUTPUT QUEUE                RNB19\n         DROP  R1                                                 RNB19\n         MVI   QCLASS,20      INDICATE THIS IS THE AWO QUEUE      RNB19\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    RNB19\n         B     DJ8            END OF QUEUE                  WGH   RNB19\n         CLI   QPARM1,C'*'    REQUEST FOR ALL                     WGH\n         BE    PRTJQE         YES, LIST IT                        WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      RNB19\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               RNB19\n         B     PRTJQE         PRINT THE RECORD                    RNB19\n* SEARCH RECEIVE QUEUE     NJE                                    WGH\nDJ8      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                    WGH\n         LA    R4,JQTRCV      ADDR OF RECEIVE QUEUE               WGH\n         DROP  R1                                                 WGH\n         MVI   QCLASS,28      INDICATE THIS IS THE RECEIVE        WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    WGH\n         B     DJ10           END OF QUEUE                        WGH\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJQE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      WGH\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               WGH\n         B     PRTJQE         PRINT THE RECORD                    WGH\n* SEARCH XMIT    QUEUE                                            WGH\nDJ10     L     R1,QCJQHEAD    LOAD ADDR OF JQT                    WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                    WGH\n         LA    R4,JQTXMIT     ADDR OF XMIT    QUEUE               WGH\n         DROP  R1                                                 WGH\n         MVI   QCLASS,32      INDICATE THIS IS THE XMIT  QUEUE    WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    WGH\n         B     DJ11           END OF QUEUE                        WGH\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJQE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      WGH\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               WGH\n         B     PRTJQE         PRINT THE RECORD                    WGH\n* SEARCH $INPUT  QUEUE                                            WGH\nDJ11     L     R1,QCJQHEAD    LOAD ADDR OF JQT                    WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                    WGH\n         LA    R4,JQTINPUT    ADDR OF INPUT   QUEUE               WGH\n         DROP  R1                                                 WGH\n         MVI   QCLASS,36      INDICATE THIS IS THE INPUT QUEUE    WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    WGH\n         B     ST3            END OF QUEUE                        WGH\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJQE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      WGH\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               WGH\n         B     PRTJQE         PRINT THE RECORD                    WGH\n* SEARCH INPUT QUEUES\nST3      MVI   QCLASS,192     START WITH CLASS A\nST4      BAL   R2,NEXTJQT     FIND NEXT QUEUE\n         B     ST5            END OF QUEUES                       WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     ST4            END OF QUEUE\n         CLI   JQEFLAG1,0     IS THE JOB EXECUTING OR HELD?\n         BNE   ST7            YES. SPECIAL HANDLING.\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJQE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         B     PRTJQE         PRINT THE JQE\nST7      EQU   *                                                  WGH\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRT2JQE        YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   REJJQE         NO. SKIP THIS RECORD.\n         B     PRT2JQE        PRINT THE RECORD WITHOUT INCR COUNT\n* SEARCH OUTPUT QUEUES\nST5      MVI   QCLASS,192     START WITH CLASS A\nST6      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE\n         B     STOP           NO MORE QUEUES                      WGH\n         BAL   R2,SRCHJOE     SEARCH A JOE QUEUE\n         B     ST6            END OF QUEUE\n         CLI   QPARM1,C'*'    REQUEST FOR ALL?                    WGH\n         BE    PRTJOE         YES,  LIST IT                       WGH\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   ST6WTR         NO. CHECK WTRID MATCH               WGH\n         B     PRTJOE         PRINT THE RECORD\n* SEARCH OUTPUT QUEUES FOR WRITID MATCH                           WGH\nST6WTR   SR    R1,R1          CLEAR REG FOR INSERT                WGH\n         ICM   R1,B'0111',JOECHARB  OFFSET TO CHAR JOE            WGH\n         BZ    SKIPJOE        NONE, SKIP THIS ONE                 WGH\n         A     R1,QCJOTA      GET REAL JOE ADDRESS                WGH\n         CLI   QPARM1,C' '    IS PREFIX BLANK?                    WGH\n         BE    SKIPJOE        YES,  SKIP IT                       WGH\n         EX    R6,STCLCW      IS THE WRTID   EQUAL TO LEVEL?      WGH\n         BNE   SKIPJOE        NO, TRY NEXT ONE                    WGH\n         B     PRTJOE         PRINT THE RECORD                    WGH\nSTCLCW   CLC   QPARM1(1),JOEWTRID-JOE(R1)                         WGH\n***********************************************************************\n* COMPARE USED TO CHECK LEVEL\nSTCLC    CLC   QPARM1(1),JQEJNAME IS THE JOBNAME EQUAL TO LEVEL?\n***********************************************************************\n*                                                                     *\n*   DQ - PRINT SUMMARY OF ALL JOBS IN THE INPUT QUEUES                *\n*                                                                     *\n***********************************************************************\n*  SEARCH ALL QUEUES\nDQ       MVI   QCLASS,192           START WITH CLASS A\n         MVC   QDHLINE,DQHEADER     MOVE IN THE HEADING\nDQ1      BAL   R2,NEXTJQT           FIND NEXT QUEUE\n         B     STOP                 END OF QUEUES                 WGH\n         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR EXECUTING JOBS\n         ZAP   QCOUNTA,=P'0'        ZERO COUNT FOR AWAITING JOBS\n         ZAP   QCOUNTH,=P'0'        ZERO COUNT FOR HELD JOBS\n         BAL   R2,SRCHJQE           SEARCH THE QUEUE\n         B     DQ4                  END OF QUEUE\n         TM    JQEFLAG1,JQE1BUSY    IS THIS JOB EXECUTING\n         BZ    DQ2                  NO, NEXT TEST\n         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER\n         B     SKIPJQE              PROCESS NEXT JQE\nDQ2      TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 HELD JOB?\n         BZ    DQ3                  NO, NEXT TEST\n         AP    QCOUNTH,=P'1'        YES, BUMP COUNTER\n         B     SKIPJQE              PROCESS NEXT JQE\nDQ3      CLI   JQEFLAG1,0           IS THIS JOB AWAITING EXECUTION\n         BNE   SKIPJQE              NO, PROCESS NEXT JQE\n         AP    QCOUNTA,=P'1'        YES, BUMP COUNTER\n         B     SKIPJQE              PROCESS NEXT JQE\nDQ4      CLC   QCOUNT,=PL3'0'       IS THIS QUEUE EMPTY\n         BE    DQ1                  YES, TRY THE NEXT QUEUE\n         MVC   QDMSG,DQLINE         MOVE IN DETAIL LINE\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS\n         MVC   QECOUNT,FCOUNT+3                    IN EXECUTION\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTA            NUMBER OF JOBS\n         MVC   QACOUNT,FCOUNT+3                    AWAITING EXECUTION\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTH            NUMBER OF JOBS\n         MVC   QHCOUNT,FCOUNT+3                    IN HELD STATUS\n         MVC   FCOUNT,ED5           MOVE IN THE TOTAL NUMBER OF JOBS\n         ED    FCOUNT,QCOUNT             IN THIS QUEUE\n         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS\n         BAL   R2,DISPLAY           GO DISPLAY THIS LINE\n         B     DQ1                  PROCESS THE NEXT QUEUE\n***********************************************************************\n*                                                                     *\n*   DF - PRINT SUMMARY OF ALL JOBS IN THE OUTPUT QUEUES               *\n*                                                                     *\n***********************************************************************\nDF       MVI   QCLASS,192           START WITH CLASS A\n         MVC   QDHLINE,DFHEADER     MOVE IN THE HEADING\nDF1      BAL   R2,NEXTJOT           FIND NEXT QUEUE\n         B     STOP                 NO MORE QUEUES                  WGH\n         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR JOBS PRINTING\n         BAL   R2,SRCHJOE           SEARCH THE QUEUE\n         B     DF2                  END OF QUEUE\n         TM    JOEFLAG1,X'20'       IS JOB PRINTING\n         BNO   SKIPJOE              NO, PROCESS NEXT JOE\n         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER\n         B     SKIPJOE              PROCESS NEXT JOE\nDF2      CLC   QCOUNT,=PL3'0'       QUEUE EMPTY\n         BE    DF1                  YES, TRY THE NEXT QUEUE\n         MVC   QDMSG,DFLINE         MOVE IN DETAIL LINE\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS\n         MVC   QECOUNT,FCOUNT+3                    PRINTING\n         MVC   FCOUNT,ED5           MOVE IN TOTAL NUMBER OF JOBS\n         ED    FCOUNT,QCOUNT             IN THIS QUEUE\n         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS\n         BAL   R2,DISPLAY           GO DISPLAY THIS LINE\n         B     DF1                  PROCESS NEXT QUEUE\n***********************************************************************\n*                                                                     *\n*   DJ - FIND A SPECIFIC JOB                                          *\n*                                                                     *\n***********************************************************************\nDJ       CLI   QPARM1,C' '    DID USER SPECIFY JOBNAME?\n         BE    DJ9            NO. TILT.\n         MVC   QLNG1,=H'7'    COMPARE FOR 8 CHARACTERS\n         B     DJ2            USE THE STATUS ROUTINES\nDJ9      QTILT '*** YOU MUST SPECIFY JOBNAME ***'\n***********************************************************************\n*                                                                     *\n*   DI - PRINT ALL JOBS IN INPUT QUEUES                               *\n*                                                                     *\n***********************************************************************\nDI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   DI5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nDI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         B     DI6            END OF QUEUES                         WGH\n         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE\n         B     DI2            END OF QUEUE                    WGH\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nDI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJQT     FIND QUEUE\n         B     DI6            END OF QUEUES                         WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DI6            END OF QUEUE                    WGH\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH XMIT QUEUE\nDI6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                      WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                      WGH\n         LA    R4,JQTXMIT     ADDR OF XMIT QUEUE                    WGH\n         DROP  R1                                                   WGH\n         MVI   QCLASS,32      INDICATE THIS IS XMIT QUEUE           WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                      WGH\n         B     STOP           END OF QUEUE                          WGH\n         B     PRTJQE         PRINT THE RECORD                      WGH\n***********************************************************************\n*                                                                     *\n*   AI - PRINT JOBS IN INPUT QUEUES THAT ARE AVAILABLE FOR SELECTION  *\n*                                                                     *\n***********************************************************************\nAI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   AI5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nAI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         B     AI6            END OF QUEUES                         WGH\n         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE\n         B     AI2            END OF QUEUE\n         CLI   JQEFLAG1,0     IS THE JOB BUSY OR HELD?\n         BNE   REJJQE         YES. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nAI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJQT     FIND QUEUE\n         B     AI6            NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     AI6            END OF QUEUE                          WGH\n         CLI   JQEFLAG1,0     IS THE JOB BUSY OR HELD?\n         BNE   REJJQE         YES. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH XMIT QUEUE\nAI6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                      WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                      WGH\n         LA    R4,JQTXMIT     ADDR OF XMIT QUEUE                    WGH\n         DROP  R1                                                   WGH\n         MVI   QCLASS,32      INDICATE THIS IS XMIT QUEUE           WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                      WGH\n         B     STOP           END OF QUEUE                          WGH\n         CLI   JQEFLAG1,0     IS THE JOB BUSY OR HELD?              WGH\n         BNE   REJJQE         YES. SKIP IT.                         WGH\n         B     PRTJQE         PRINT THE RECORD                      WGH\n***********************************************************************\n*                                                                     *\n*   AO - PRINT AVAILABLE JOBS IN THE OUTPUT QUEUE                     *\n*                                                                     *\n***********************************************************************\nAO       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   AO5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nAO2      EQU   *\n         CLI   QSUBNAME,C'D'  IS THIS 'AO' OR 'DO' ?              WGH42\n         BE    AO3            CONTINUE FOR 'DO'                   WGH42\n         CLI   QCLASS,C'9'    HAVE WE REACHED HOLDQ YET?          WGH42\n         BE    STOP           YES.. DO NOT DISP HOLD ON AO REQ    WGH42\nAO3      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE\n         B     AO2            END OF QUEUE\n         B     PRTJOE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nAO5      EQU   *              USER SPECIFIED CLASS\n         CLC   QPARM1(4),=C'HELD'                                  WGH\n         BNE   AO6            NO.. USE CLASS SPECIFIED\n         MVI   QCLASS,C'!'    YES.. CHANGE TO ! TO SELECT HELD OUT Q\n         B     AO7            AND CONTINUE                        WGH42\nAO6      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\nAO7      BAL   R2,FINDJOT     FIND QUEUE\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH THE QUEUE\n         B     AO8            END OF QUEUE\n         B     PRTJOE         YES.. PRINT THE RECORD\n*   SEARCH HOLD Q FOR SELECTED CLASS                                WGH\nAO8      EQU   *                                                    WGH\n         CLI   QCLASS,C'!'    WAS ALL HELD OUT REQUESTED ?          WGH\n         BE    STOP           YES... DO NOT CONTINUE                WGH\n         CLI   QSUBNAME,C'A'  IS THIS 'AO' OR 'DO' ?              WGH42\n         BE    STOP           EXIT FOR 'AO'                       WGH42\n         MVI   QCLASS,C'!'    CHANGE TO ! TO SELECT HELD OUT Q      WGH\n         BAL   R2,FINDJOT     FIND QUEUE\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         CLC   JOECURCL,QPARM1     IS THIS CLASS REQUESTED ?        WGH\n         BNE   REJJOE         NO... SKIP IT                         WGH\n         B     PRTJOE         YES.. PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   WO - PRINT JOES IN OUTPUT QUEUE THAT HAVE WTRID SPECIFIED         *\n*                                                                     *\n***********************************************************************\n* SEARCH ALL QUEUES                                               UF047\nWO       MVI   QCLASS,192     START WITH CLASS A                  UF047\nWO2      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE                UF047\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE                  UF047\n         B     WO2            END OF QUEUE                        UF047\n         SR    R1,R1          CLEAR REG FOR INSERT                UF047\n         ICM   R1,B'0111',JOECHARB  OFFSET TO CHAR JOE            UF047\n         BZ    REJJOE         NONE, SKIP THIS ONE                 UF047\n         A     R1,QCJOTA      GET REAL JOE ADDRESS                UF047\n         TM    JOEUSER-JOE(R1),X'FF'-X'40' USERID PRESENT?        WGH42\n         BNZ   PRTJOE         YES.. PRINT IT                      WGH42\n         TM    JOEWTRID-JOE(R1),X'FF'-X'40' WTRID PRESENT?        UF047\n         BZ    REJJOE         NO, TRY NEXT ONE                    UF047\n         B     PRTJOE         PRINT THE RECORD                    UF047\n***********************************************************************\n*                                                                     *\n*   HI - PRINT JOBS IN INPUT QUEUES THAT ARE HELD                     *\n*                                                                     *\n***********************************************************************\nHI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   HI5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nHI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         B     HI6            END OF QUEUES                         WGH\n         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE\n         B     HI2            END OF QUEUE\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?\n         BZ    REJJQE         NO. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nHI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJQT     FIND QUEUE\n         B     HI6            NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     HI6            END OF QUEUE                     WGH\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?\n         BZ    REJJQE         NO. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH XMIT QUEUE                                                 WGH\nHI6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                      WGH\n         USING JQTDSECT,R1    BASE REG FOR JQT                      WGH\n         LA    R4,JQTXMIT     ADDR OF XMIT QUEUE                    WGH\n         DROP  R1                                                   WGH\n         MVI   QCLASS,32      INDICATE THIS IS XMIT QUEUE           WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                      WGH\n         B     STOP           END OF QUEUE                          WGH\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?     WGH\n         BZ    REJJQE         YES. SKIP IT.                         WGH\n         B     PRTJQE         PRINT THE RECORD                      WGH\n***********************************************************************\n*                                                                     *\n*   HO - LIST ALL JOBS WITH HELD OUTPUT                               *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nHO       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         B     HO5            SKIP $OUTPUT Q                     WGH42\n         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE\n         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n*        B     STOP           END OF QUEUE                    WGH\n         B     HO5            END OF QUEUE                          WGH\n*        TM    JQEFLAG8,JQE8HLDS    ANY HELD 3540 DATASETS?       WGH42\n*        BNZ   PRTJQE         YES. PRINT THE RECORD.\n         B     PRTJQE         PRINT THE  RECORD                   WGH42\n*        B     REJJQE         REJECT THE RECORD\n*        QUEUE OF HELD JOES                                       WGH42\nHO5      EQU   *              HELD OUTPUT Q FOR JOES              WGH42\n         MVI   QCLASS,C'!'    SPECIFY ! TO SELECT HELD OUT Q\n         BAL   R2,FINDJOT     FIND QUEUE\n         B     STOP           NO MORE QUEUES (NEVER COMES HERE)     WGH\n         BAL   R2,SRCHJOE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BE    PRTJOE         NO.. PRINT THE RECORD               WGH42\n         CLC   JOECURCL,QPARM1 YES.  IS THIS CLASS REQUESTED ?      WGH\n         BE    PRTJOE         YES.. PRINT THE RECORD                WGH\n         B     REJJOE         NO... SKIP RECORD                     WGH\n***********************************************************************\n*                                                                     *\n*   HQ - LIST ALL JOBS IN   $OUTPUT QUEUE                             *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nHQ       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE\n         DROP  R1                                             WGH\n         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE                    WGH\n         B     PRTJQE         PRINT THE  RECORD                   WGH42\n***********************************************************************\n*                                                                     *\n*   DA - FIND ALL EXECUTING JOBS                                      *\n*                                                                     *\n***********************************************************************\nDA       MVI   QCLASS,192     START WITH CLASS A\nDA2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         B     STOP           END OF QUEUE                          WGH\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DA2            END OF QUEUE\n         TM    JQEFLAG1,JQE1BUSY IS THE JOB EXECUTING?\n         BZ    REJJQE         NO. REJECT IT.\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DT - LIST ALL TSO USERS                                           *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nDT       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTTSU      ADDR OF TSO QUEUE\n         DROP  R1\n         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DS - LIST ALL SYSTEM STARTED TASKS                                *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nDS       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTSTC      ADDR OF STC QUEUE\n         DROP  R1\n         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DETERMINE LENGTH OF LEVEL                                         *\n*                                                                     *\n***********************************************************************\nPARMLEN  LA    R3,7           MAXIMUM LENGTH OF 8\n         LA    R4,QPARM1+7    END OF FIELD\nPARMLEN2 CLI   0(R4),C' '     IS THIS BYTE BLANK?\n         BNE   PARMLEN3       NO. THIS IS THE LENGTH\n         BCTR  R4,0           TRY PREVIOUS BYTE\n         BCT   R3,PARMLEN2    LOOP\nPARMLEN3 STH   R3,QLNG1       STORE THE LENGTH OF LEVEL\n         BR    R2             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   SEARCH A JQE QUEUE                                                *\n*                                                                     *\n***********************************************************************\nSRCHJQE  ZAP   QCOUNT,=P'0'   ZERO THE QUEUE COUNT\n         L     R9,0(R4)       LOAD FIRST JQE OFFSET               UF020\nNEXTJQE  LA    R9,0(,R9)      KILL EXTRANEOUS BITS                UF020\n         LTR   R9,R9          TEST FOR END OF QUEUE               UF020\n         BZR   R2             END OF QUEUE. RETURN.\n         A     R9,QCJQTA      ADD BASE TO OFFSET\n         B     4(R2)          DETERMINE ELIGIBILITY\nPRTJQE   AP    QCOUNT,=P'1'   INCREMENT COUNT\nPRT2JQE  SR    R1,R1          INDICATE THIS IS A JQE\n         L     R15,=V(FORMAT) ADDR OF PRINT MODULE\n         BALR  R14,R15        PRINT THE JQE IN R9\nREJJQE   L     R9,JQENEXT     LOAD OFFSET TO NEXT JQE             UF020\n         B     NEXTJQE        GET THE NEXT JQE\nSKIPJQE  AP    QCOUNT,=P'1'   INCREMENT COUNT\n         B     REJJQE         CONTINUE\n***********************************************************************\n*                                                                     *\n*   SEARCH A JOE QUEUE                                                *\n*                                                                     *\n***********************************************************************\nSRCHJOE  ZAP   QCOUNT,=P'0'    ZERO THE QUEUE COUNT               RNB16\n         CLI   QCLASS,C'@'     NJE SYSOUT XMIT QUEUE??            WGH42\n         BE    FIRSTJOE        YES.. GO DO IT                     WGH42\n         CLI   QCLASS,C'!'     HOLD SYSOUT QUEUE    ??            WGH42\n         BE    FIRSTJOE        YES.. GO DO IT                     WGH42\n         OI    QFLAG1,QFLG1LCL SHOW SEARCHING LOCAL QUEUE         RNB16\n         B     FIRSTJOE        AND GO DO IT                       RNB16\n*                                                                 RNB16\nSRCHJOE1 TM    QFLAG1,QFLG1LCL   WERE WE PROCESSING LCL QUEUE?    WGH42\n         BO    SRCHJOE2          YES.. GO DO USER QUEUE           WGH42\n         NI    QFLAG1,X'FF'-QFLG1USR TURN OFF USER QUEUE FLAG     WGH42\n         LA    R4,4(,R4)             POINT TO REMOTE QUEUE        WGH42\n         B     FIRSTJOE          AND GO DO IT                     WGH42\nSRCHJOE2 NI    QFLAG1,X'FF'-QFLG1LCL TURN OFF LOCAL QUEUE FLAG    WGH42\n         OI    QFLAG1,QFLG1USR    SHOW SEARCHING USER  QUEUE      WGH42\n         LA    R4,4(,R4)             POINT TO USER QUEUE          WGH42\n*                                                                 RNB16\nFIRSTJOE L     R8,0(R4)       LOAD FIRST JOE OFFSET               UF020\n         LA    R8,0(,R8)       KILL EXTRANEOUS BITS.              UF020\n         LTR   R8,R8          IS THE QUEUE EMPTY?\n         BNZ   $1             /NO  - CONTINUE                     RNB16\n*                             /YES -                              RNB16\n         CLI   QCLASS,C'@'     NJE SYSOUT XMIT QUEUE??            WGH\n         BE    0(R2)           YES.. RETURN.. NO MORE QUEUES      WGH\n         CLI   QCLASS,C'!'     NJE SYSOUT XMIT QUEUE??            WGH\n         BE    0(R2)           YES.. RETURN.. NO MORE QUEUES      WGH\n*                             /WAS THIS THE LOCAL OR USER QUEUE   WGH42\n         TM    QFLAG1,QFLG1LCL+QFLG1USR     LCL OR USR QUEUE      WGH42\n         BNZ   SRCHJOE1       /YES - GO DO NEXT QUEUE             WGH42\n         BR    R2             /NO  - RETURN TO CALLER             RNB16\n$1       EQU   *                                                  RNB16\n         XC    PRIORITY(12),PRIORITY ZERO OUT HIGHEST POINTERS\nNEXTJOE  LA    R8,0(,R8)      CLEAR EXTRA BITS                    UF020\n         LTR   R8,R8          TEST FOR END OF QUEUE               UF020\n         BZ    TESTJOE        END OF QUEUE. PASS HIGHEST TO CALLER.\n         A     R8,QCJOTA      ADD BASE TO OFFSET\n         L     R9,JOEJQE      OFFSET TO JQE                       UF020\n         N     R9,=A(X'00FFFFFF')  CLEAR EXTRA BITS               UF020\n         BZ    TRYJOE         THIS JOE ALREADY USED. TRY NEXT ONE.\n         A     R9,QCJQTA      ADD BASE TO OFFSET\n*        LA    R7,255         PRESET MAXIMUM PRIORITY             WGH\n*        TM    JQEPRIO,240    IS THIS JOB PRIORITY 15?            WGH\n*        BO    HIGHJOE        YES. PASS TO CALLER.                WGH\n         LA    R1,1           PRESET PRIORITY ONE\n         CLI   JQETYPE,$HARDCPY IS THE JOB EXECUTING?\n         BNE   EXECJOE        YES. USE PRIORITY ONE.\n         IC    R1,JQEPRIO     INSERT JQE PRIORITY\n         SRL   R1,4           USE TOP HEX DIGIT                   WGH\n*EXECJOE  IC    R7,JOEPRIO     INSERT JOE PRIORITY\nEXECJOE  LH    R7,JOEPRIO     INSERT JOE PRIORITY\n         SRL   R7,4           REMOVE UNUSED DIGIT                 WGH\n         AR    R7,R1          ADD PRIORITIES\n         SRL   R7,1           BECAUSE HASP DOES IT, THAT'S WHY\nHIGHJOE  C     R7,PRIORITY    IS THIS LESS THAN PREVIOUS HIGH?\n         BL    TRYJOE         YES. TRY NEXT ONE.\n         STM   R7,R9,PRIORITY NO. REPLACE PREVIOUS HIGH.\nTRYJOE   L     R8,JOENEXT     ADDR OF NEXT JOE                    UF020\n         N     R8,=A(X'00FFFFFF')  CLEAR EXTRA BITS               UF020\n         B     NEXTJOE        TRY NEXT JOE\nTESTJOE  LM    R7,R9,PRIORITY LOAD ADDR OF HIGHEST JOE\n         LTR   R8,R8          WAS THE QUEUE EMPTY?\n         BNZ   $2                                                 RNB16\n         TM    QFLAG1,QFLG1LCL WAS THIS THE LOCAL QUEUE?          RNB16\n         BO    SRCHJOE1       /YES - GO DO REMOTE QUEUE           RNB16\n         BR    R2             /NO  - END OF QUEUE.                RNB16\n$2       EQU   *                                                  RNB16\n         MVC   JOEJQEB,=F'0'  INDICATE THIS JOE USED              RNB16\n         B     4(R2)          DETERMINE ELIGIBILITY\nPRTJOE   EQU   *                                                  WGH\n         LA    R1,4           INDICATE THIS IS A JOE\n         AP    QCOUNT,=P'1'   INCREMENT COUNT\n         L     R15,=V(FORMAT) ADDR OF PRINT MODULE\n         BALR  R14,R15        PRINT THE JOE IN R9\nREJJOE   B     FIRSTJOE       GET THE NEXT JOE\nSKIPJOE  AP    QCOUNT,=P'1'   INCREMENT COUNT\n         B     REJJOE         CONTINUE\n***********************************************************************\n*                                                                     *\n*   DETERMINE INPUT QUEUE                                             *\n*                                                                     *\n***********************************************************************\nFINDJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         BCTR  R4,0           SUBTRACT 1\n         STH   R4,QCLASSH     RESTORE VALUE\n         B     NEXTJQT2       CONTINUE\nNEXTJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         CH    R4,=H'36'      IS THIS THE LAST QUEUE?\n         BNL   0(R2)          YES. GO HOME                        WGH\n*        BNL   NEXTJQT9       YES. GO HOME.\nNEXTJQT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS\n         AR    R4,R4          MULTIPLY BY 2\n         AR    R4,R4          AND BY 2 AGAIN                      UF020\n         USING JQTDSECT,R1    BASE REG FOR JQT\n         L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTCLSA(R4) NEXT QUEUE\n         DROP  R1\n         B     4(R2)          RETURN TO CALLER                 WGH\n*        BR    R2             RETURN TO CALLER\nNEXTJQT9 CLI   QCODE,0        IS THIS A STATUS REQUEST?\n         BE    ST5            YES. GO TO STATUS.\n         CLI   QCODE,36       IS THIS A DJ REQUEST?\n         BNE   STOP           NO. GO HOME.\n         B     ST5            YES. GO TO STATUS.\n***********************************************************************\n*                                                                     *\n*   DETERMINE OUTPUT QUEUE                                            *\n*                                                                     *\n***********************************************************************\nFINDJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         BCTR  R4,0           SUBTRACT 1\n         STH   R4,QCLASSH     RESTORE VALUE\n         B     NEXTJOT2       CONTINUE\nNEXTJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n*        CH    R4,=H'36'      IS THIS THE LAST QUEUE?   '9'\n*        CH    R4,=H'37'      IS THIS THE LAST QUEUE?   '@'        WGH\n         CH    R4,=H'38'      IS THIS THE LAST QUEUE?   '!'        WGH\n         BNL   0(R2)          YES. GO HOME.                        WGH\n*        BNL   STOP           YES. GO HOME.\nNEXTJOT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS\n         CH    R4,=H'36'      IS THIS XMIT OR HOLD OUT QUEUE       WGH\n*        BNE   NEXTJOT3       NO... CONTINUE                       WGH\n         BL    NEXTJOT3       NO... CONTINUE                       WGH\n         BE    NEXTJOTN       YES XMIT QUEUE/                      WGH\n         B     NEXTJOTH       YES.. HOLD QUEUE                     WGH\nNEXTJOTH L     R1,QCJOTA      LOAD ADDR OF JOT                     WGH\n         USING JOT,R1         BASE REG FOR JOT                     WGH\n         LA    R4,JOTHOLDQ    HELD OUTPUT QUEUE                    WGH\n         DROP  R1                                                  WGH\n         B     4(R2)          RETURN TO CALLER                     WGH\nNEXTJOTN L     R1,QCJOTA      LOAD ADDR OF JOT                     WGH\n         USING JOT,R1         BASE REG FOR JOT                     WGH\n         LA    R4,JOTNTWKQ    NETWORK QUEUE (NOT A PAIR)           WGH\n         DROP  R1                                                  WGH\n         B     4(R2)          RETURN TO CALLER                     WGH\nNEXTJOT3 MH    R4,=H'12'      MULTIPLY BY 12 (POINT TO LOCALS)   WGH42\n         USING JOT,R1         BASE REG FOR JOT\n         L     R1,QCJOTA      LOAD ADDR OF JOT\n         LA    R4,JOTCLSQ(R4) NEXT QUEUE\n         DROP  R1\n         B     4(R2)          RETURN TO CALLER            WGH\n*        BR    R2             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   CALL DISPLAY ROUTINE                                              *\n*                                                                     *\n***********************************************************************\nDISPLAY  LA    R1,QDMSG             SAVE ADDRESS\n         ST    R1,QDMSGA                 OF THE MESSAGE\n         MVC   QDMLNG,=H'80'        SET THE LENGTH\n         L     R15,=V(DISPLAY)      BRANCH TO\n         BALR  R14,R15                     DISPLAY\n         BR    R2                   RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   GO HOME                                                           *\n*                                                                     *\n***********************************************************************\nSTOP     QSTOP\n         LTORG\n***********************************************************************\n*                                                                     *\n*   TABLES FOR CLASS DETERMINATION                                    *\n*                                                                     *\n***********************************************************************\n*NAMETBL  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\nNAMETBL  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@!'            WGH\nCLASSTBL DC    192X'01',64X'00'                              WGH\n         ORG   CLASSTBL+C'!'\n         DC    AL1(38)\n         ORG   CLASSTBL+C'@'\n         DC    AL1(37)\n         ORG   CLASSTBL+C'A'\n         DC    AL1(1,2,3,4,5,6,7,8,9)\n         ORG   CLASSTBL+C'J'\n         DC    AL1(10,11,12,13,14,15,16,17,18)\n         ORG   CLASSTBL+C'S'\n         DC    AL1(19,20,21,22,23,24,25,26)\n         ORG   CLASSTBL+C'0'\n         DC    AL1(27,28,29,30,31,32,33,34,35,36)\n         ORG   ,\n*CLASSTBL DC    124X'01',X'25',67X'01'                             WGH\n*         DC    X'00010203040506070809',7X'00'\n*         DC    X'0A0B0C0D0E0F101112',8X'00'\n*         DC    X'131415161718191A',6X'00'\n*         DC    X'1B1C1D1E1F2021222324',6X'00'\n***********************************************************************\n*                                                                     *\n*   MISCELLANEOUS GARBAGE                                             *\n*                                                                     *\n***********************************************************************\nED5      DC    X'402020202120'\nDQHEADER DC    CL80'*** INPUT QUEUES ***'\nDQLINE   DC    CL80' INPUT                        EXECUTING      WAITINX\n               G      HELD'\nDFHEADER DC    CL80'*** OUTPUT QUEUES ***'\nDFLINE   DC    CL80' OUTPUT                       PRINTING'\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nSEARCH   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         SPACE 1                                                  UF001\n         SPACE 1                                                  UF001\n         $JQE\n         $JOE\n         $JOT\n         $JQT\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\n         DS    CL9\nCLASS    DS    CL1\n         DS    CL2\nQTCOUNT  DS    CL6\n         DS    CL7\nQECOUNT  DS    CL3\n         DS    CL12\nQACOUNT  DS    CL3\n         DS    CL10\nQHCOUNT  DS    CL3\n         ORG   QTCOUNT\nFCOUNT   DS    CL6\nWORK     DSECT\n         DS    CL80\nPRIORITY DS    3F\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SEARCHP": {"ttr": 7945, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SEARCH   TITLE 'QUEUE COMMAND - JQE AND JOE SEARCH AND FORMAT'    ONL01\nSEARCH   QSTART ,                  START SEARCH CSECT ASSEMBLY    ONL01\n*******************************************************************\n* RNB CHANGES:                                                    *\n*      (1) RNB16 - PROCESS BOTH LOCAL AND REMOTE JOE QUEUE.       *\n*                  ALSO, FIX BUG IN UF020 THAT WAS CLEARING       *\n*                  FIELD JOEFLAG1 IN THE WORK JOE.                *\n*      (2) RNB19 - FOR SP, SEARCH DUMP Q AND CONVERSION (XEQ) Q IF*\n*                  STATUS COMMAND OR DJ. ALSO OUTPUT QUEUE        *\n*******************************************************************\n         L     R10,QVCKPT     LOAD BASE REG\n         USING JQE,R9         BASE REG FOR JQE DSECT\n         USING JOE,R8         BASE REG FOR JOE DSECT\n         USING WORK,R13       BASE REG FOR LOCAL WORK AREA\n******************************************************************UF006\n*                                                                 UF006\n*   CALL - READ JES2 CHECKPOINT FILE                              UF006\n*                                                                 UF006\n******************************************************************UF006\n         L     R15,=V(CKPT)   ADDR OF CKPT ROUTINE                UF006\n         BALR  R14,R15        GO TO IT                            UF006\n***********************************************************************\n*                                                                     *\n*   BRANCH TO PROPER ROUTINE                                          *\n*                                                                     *\n***********************************************************************\n         LH    R1,QCODEH      LOAD FUNCTION CODE INTO R1\n         CH    R1,=H'52'      IS THE FUNCTION SUPPORTED?\n         BH    STOP           NO. RETURN.\n         B     *+4(R1)        BRANCH TO ROUTINE\n         B     ST             0 OFFSET\n         B     DA             4\n         B     DI             8\n         B     AO   DO        12\n         B     AI             16\n         B     AO             20\n         B     HI             24\n         B     HO             28\n         B     DT             32\n         B     DJ             36\n         B     DS             40\n         B     DQ             44\n         B     DF             48\n         B     WO             52   WTRID OUTPUT                   UF047\n***********************************************************************\n*                                                                     *\n*   STATUS - FIND ALL JOBS THAT MATCH LEVEL                           *\n*                                                                     *\n***********************************************************************\nST       CLI   QPARM1,C' '    DID USER SPECIFY LEVEL?\n         BNE   ST2            NO. USE QLOGON.\n         MVC   QPARM1,QLOGON  MOVE USER PARM1 TO LEVEL\nST2      BAL   R2,PARMLEN     DETERMINE PARM LENGTH\n* SEARCH THE TSO QUEUE\n         USING JQTDSECT,R1    BASE REG FOR JQT\nDJ2      LH    R6,QLNG1       LENGTH OF COMPARE FOR LEVEL\n         L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTTSU      ADDR OF TSO QUEUE\n         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DJ3            END OF QUEUE\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH THE SYSTEM QUEUE\nDJ3      L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTSTC      ADDR OF STC QUEUE\n         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DJ4A           END OF QUEUE                        CL005\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         B     PRTJQE         PRINT THE RECORD\n         SPACE 1                                                  CL005\n* SEARCH FOR SETUP QUEUE ELEMENT                                  CL005\nDJ4A     L     R1,QCJQHEAD         LOAD ADDR OF JQT               CL005\n         LA    R4,JQTSETUP         ADDR OF $SETUP QUEUE           CL005\n         MVI   QCLASS,24           INDICATE THIS IS SETUP QUEUE   CL005\n         BAL   R2,SRCHJQE          SEARCH THE QUEUE               CL005\n         B     DJ4                 + 0 END OF QUEUE               CL005\n         EX    R6,STCLC            + 4 JOBNAME EQUAL TO LEVEL?    CL005\n         BNE   SKIPJQE             NO, SKIP THIS RECORD           CL005\n         B     PRTJQE              PRINT THE ELEMENT              CL005\n         SPACE 1                                                  CL005\n* SEARCH FOR HELD OUTPUT\nDJ4      L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE\n         DROP  R1\n         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DJ6            END OF QUEUE                           CL\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         CLI   JQEHLDCT,0     ARE THERE ANY HELD DATASETS? (PART 1)\n         BNE   PRTJQE         YES. PRINT THE RECORD.\n         TM    JQEHQLOK,X'F0' ARE THERE ANY HELD DATASETS? (PART 2)\n         BNZ   PRTJQE         YES. PRINT THE RECORD.\n         TM    JQEFLAG3,JQE3SYSD   PRINT JQE IF                      CL\n         BO    PRTJQE               SPECIAL                          CL\n         B     REJJQE         REJECT THE RECORD\n* SEARCH CONVERSION (XEQ) QUEUE                                   RNB19\nDJ6      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    RNB19\n         USING JQTDSECT,R1    BASE REG FOR JQT                    RNB19\n         LA    R4,JQTXEQ      ADDR OF CONVERSION QUEUE            RNB19\n         DROP  R1                                                 RNB19\n         MVI   QCLASS,16      INDICATE THIS IS THE CNV QUEUE      RNB19\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    RNB19\n         B     DJ7            END OF QUEUE                        RNB19\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      RNB19\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               RNB19\n         B     PRTJQE         PRINT THE RECORD                    RNB19\n* SEARCH OUTPUT (AWAITING OUTPUT) QUEUE                           RNB19\nDJ7      L     R1,QCJQHEAD    LOAD ADDR OF JQT                    RNB19\n         USING JQTDSECT,R1    BASE REG FOR JQT                    RNB19\n         LA    R4,JQTAWOUT    ADDR OF OUTPUT QUEUE                RNB19\n         DROP  R1                                                 RNB19\n         MVI   QCLASS,20      INDICATE THIS IS THE CNV QUEUE      RNB19\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE                    RNB19\n         B     ST3            END OF QUEUE                        RNB19\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?      RNB19\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.               RNB19\n         B     PRTJQE         PRINT THE RECORD                    RNB19\n* SEARCH INPUT QUEUES\nST3      MVI   QCLASS,192     START WITH CLASS A\nST4      BAL   R2,NEXTJQT     FIND NEXT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     ST4            END OF QUEUE\n         CLI   JQEFLAG1,0     IS THE JOB EXECUTING OR HELD?\n         BNE   ST7            YES. SPECIAL HANDLING.\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJQE        NO. SKIP THIS RECORD.\n         B     PRTJQE         PRINT THE JQE\nST7      EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   REJJQE         NO. SKIP THIS RECORD.\n         B     PRT2JQE        PRINT THE RECORD WITHOUT INCR COUNT\n* SEARCH OUTPUT QUEUES\nST5      MVI   QCLASS,192     START WITH CLASS A\nST6      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE\n         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE\n         B     ST6            END OF QUEUE\n         EX    R6,STCLC       IS THE JOBNAME EQUAL TO LEVEL?\n         BNE   SKIPJOE        NO. SKIP THIS RECORD.\n         B     PRTJOE         PRINT THE RECORD\n* COMPARE USED TO CHECK LEVEL\nSTCLC    CLC   QPARM1(1),JQEJNAME IS THE JOBNAME EQUAL TO LEVEL?\n***********************************************************************\n*                                                                     *\n*   DQ - PRINT SUMMARY OF ALL JOBS IN THE INPUT QUEUES                *\n*                                                                     *\n***********************************************************************\n*  SEARCH ALL QUEUES\nDQ       MVI   QCLASS,192           START WITH CLASS A\n         MVC   QDHLINE,DQHEADER     MOVE IN THE HEADING\nDQ1      BAL   R2,NEXTJQT           FIND NEXT QUEUE\n         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR EXECUTING JOBS\n         ZAP   QCOUNTA,=P'0'        ZERO COUNT FOR AWAITING JOBS\n         ZAP   QCOUNTH,=P'0'        ZERO COUNT FOR HELD JOBS\n         BAL   R2,SRCHJQE           SEARCH THE QUEUE\n         B     DQ4                  END OF QUEUE\n         TM    JQEFLAG1,JQE1BUSY    IS THIS JOB EXECUTING\n         BZ    DQ2                  NO, NEXT TEST\n         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER\n         B     SKIPJQE              PROCESS NEXT JQE\nDQ2      TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 HELD JOB?\n         BZ    DQ3                  NO, NEXT TEST\n         AP    QCOUNTH,=P'1'        YES, BUMP COUNTER\n         B     SKIPJQE              PROCESS NEXT JQE\nDQ3      CLI   JQEFLAG1,0           IS THIS JOB AWAITING EXECUTION\n         BNE   SKIPJQE              NO, PROCESS NEXT JQE\n         AP    QCOUNTA,=P'1'        YES, BUMP COUNTER\n         B     SKIPJQE              PROCESS NEXT JQE\nDQ4      CLC   QCOUNT,=PL3'0'       IS THIS QUEUE EMPTY\n         BE    DQ1                  YES, TRY THE NEXT QUEUE\n         MVC   QDMSG,DQLINE         MOVE IN DETAIL LINE\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS\n         MVC   QECOUNT,FCOUNT+3                    IN EXECUTION\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTA            NUMBER OF JOBS\n         MVC   QACOUNT,FCOUNT+3                    AWAITING EXECUTION\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTH            NUMBER OF JOBS\n         MVC   QHCOUNT,FCOUNT+3                    IN HELD STATUS\n         MVC   FCOUNT,ED5           MOVE IN THE TOTAL NUMBER OF JOBS\n         ED    FCOUNT,QCOUNT             IN THIS QUEUE\n         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS\n         BAL   R2,DISPLAY           GO DISPLAY THIS LINE\n         B     DQ1                  PROCESS THE NEXT QUEUE\n***********************************************************************\n*                                                                     *\n*   DF - PRINT SUMMARY OF ALL JOBS IN THE OUTPUT QUEUES               *\n*                                                                     *\n***********************************************************************\nDF       MVI   QCLASS,192           START WITH CLASS A\n         MVC   QDHLINE,DFHEADER     MOVE IN THE HEADING\nDF1      BAL   R2,NEXTJOT           FIND NEXT QUEUE\n         ZAP   QCOUNTE,=P'0'        ZERO COUNT FOR JOBS PRINTING\n         BAL   R2,SRCHJOE           SEARCH THE QUEUE\n         B     DF2                  END OF QUEUE\n         TM    JOEFLAG1,X'20'       IS JOB PRINTING\n         BNO   SKIPJOE              NO, PROCESS NEXT JOE\n         AP    QCOUNTE,=P'1'        YES, BUMP COUNTER\n         B     SKIPJOE              PROCESS NEXT JOE\nDF2      CLC   QCOUNT,=PL3'0'       QUEUE EMPTY\n         BE    DF1                  YES, TRY THE NEXT QUEUE\n         MVC   QDMSG,DFLINE         MOVE IN DETAIL LINE\n         MVC   FCOUNT,ED5           MOVE IN\n         ED    FCOUNT,QCOUNTE            NUMBER OF JOBS\n         MVC   QECOUNT,FCOUNT+3                    PRINTING\n         MVC   FCOUNT,ED5           MOVE IN TOTAL NUMBER OF JOBS\n         ED    FCOUNT,QCOUNT             IN THIS QUEUE\n         MVC   CLASS,QCLASS         MOVE IN QUEUE CLASS\n         BAL   R2,DISPLAY           GO DISPLAY THIS LINE\n         B     DF1                  PROCESS NEXT QUEUE\n***********************************************************************\n*                                                                     *\n*   DJ - FIND A SPECIFIC JOB                                          *\n*                                                                     *\n***********************************************************************\nDJ       CLI   QPARM1,C' '    DID USER SPECIFY JOBNAME?\n         BE    DJ9            NO. TILT.\n         MVC   QLNG1,=H'7'    COMPARE FOR 8 CHARACTERS\n         B     DJ2            USE THE STATUS ROUTINES\nDJ9      QTILT '*** YOU MUST SPECIFY JOBNAME ***'\n***********************************************************************\n*                                                                     *\n*   DI - PRINT ALL JOBS IN INPUT QUEUES                               *\n*                                                                     *\n***********************************************************************\nDI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   DI5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nDI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE\n         B     DI2            END OF QUEUE\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nDI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJQT     FIND QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   AI - PRINT JOBS IN INPUT QUEUES THAT ARE AVAILABLE FOR SELECTION  *\n*                                                                     *\n***********************************************************************\nAI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   AI5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nAI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE\n         B     AI2            END OF QUEUE\n         CLI   JQEFLAG1,0     IS THE JOB BUSY OR HELD?\n         BNE   REJJQE         YES. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nAI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJQT     FIND QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         CLI   JQEFLAG1,0     IS THE JOB BUSY OR HELD?\n         BNE   REJJQE         YES. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   AO - PRINT AVAILABLE JOBS IN THE OUTPUT QUEUE                     *\n*                                                                     *\n***********************************************************************\nAO       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   AO5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nAO2      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE\n         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE\n         B     AO2            END OF QUEUE\n         B     PRTJOE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nAO5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJOT     FIND QUEUE\n         BAL   R2,SRCHJOE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         B     PRTJOE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   WO - PRINT JOES IN OUTPUT QUEUE THAT HAVE WTRID SPECIFIED         *\n*                                                                     *\n***********************************************************************\n* SEARCH ALL QUEUES                                               UF047\nWO       MVI   QCLASS,192     START WITH CLASS A                  UF047\nWO2      BAL   R2,NEXTJOT     DETERMINE NEXT QUEUE                UF047\n         BAL   R2,SRCHJOE     SEARCH A JQE QUEUE                  UF047\n         B     WO2            END OF QUEUE                        UF047\n         SR    R1,R1          CLEAR REG FOR INSERT                UF047\n         ICM   R1,B'0111',JOECHARB  OFFSET TO CHAR JOE            UF047\n         BZ    REJJOE         NONE, SKIP THIS ONE                 UF047\n         A     R1,QCJOTA      GET REAL JOE ADDRESS                UF047\n         TM    JOEWTRID-JOE(R1),X'FF'-X'40' WTRID PRESENT?        UF047\n         BZ    REJJOE         NO, TRY NEXT ONE                    UF047\n         B     PRTJOE         PRINT THE RECORD                    UF047\n***********************************************************************\n*                                                                     *\n*   HI - PRINT JOBS IN INPUT QUEUES THAT ARE HELD                     *\n*                                                                     *\n***********************************************************************\nHI       CLI   QPARM1,C' '    DID USER SPECIFY CLASS?\n         BNE   HI5            YES. LIMIT TO ONE QUEUE.\n* SEARCH ALL QUEUES\n         MVI   QCLASS,192     START WITH CLASS A\nHI2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         BAL   R2,SRCHJQE     SEARCH A JQE QUEUE\n         B     HI2            END OF QUEUE\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?\n         BZ    REJJQE         NO. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n* SEARCH ONLY ONE QUEUE\nHI5      MVC   QCLASS,QPARM1  USER SPECIFIED CLASS\n         BAL   R2,FINDJQT     FIND QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         TM    JQEFLAG1,JQE1HLDA+JQE1HLD1+JQE1HLD2 IS JOB HELD?\n         BZ    REJJQE         NO. SKIP IT.\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   HO - LIST ALL JOBS WITH HELD OUTPUT                               *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nHO       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTOUT      ADDR OF $OUTPUT QUEUE\n         DROP  R1\n         MVI   QCLASS,8       INDICATE THIS IS THE HELD OUT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         CLI   JQEHLDCT,0     ARE THERE ANY HELD DATASETS? (PART 1)\n         BNE   PRTJQE         YES. PRINT THE RECORD.\n         TM    JQEHQLOK,X'F0' ARE THERE ANY HELD DATASETS? (PART 2)\n         BNZ   PRTJQE         YES. PRINT THE RECORD.\n         B     REJJQE         REJECT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DA - FIND ALL EXECUTING JOBS                                      *\n*                                                                     *\n***********************************************************************\nDA       MVI   QCLASS,192     START WITH CLASS A\nDA2      BAL   R2,NEXTJQT     DETERMINE NEXT QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     DA2            END OF QUEUE\n         TM    JQEFLAG1,JQE1BUSY IS THE JOB EXECUTING?\n         BZ    REJJQE         NO. REJECT IT.\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DT - LIST ALL TSO USERS                                           *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nDT       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTTSU      ADDR OF TSO QUEUE\n         DROP  R1\n         MVI   QCLASS,0       INDICATE THIS IS THE TSO QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DS - LIST ALL SYSTEM STARTED TASKS                                *\n*                                                                     *\n***********************************************************************\n         USING JQTDSECT,R1    BASE REG FOR JQT\nDS       L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTSTC      ADDR OF STC QUEUE\n         DROP  R1\n         MVI   QCLASS,4       INDICATE THIS IS THE STC QUEUE\n         BAL   R2,SRCHJQE     SEARCH THE QUEUE\n         B     STOP           END OF QUEUE\n         B     PRTJQE         PRINT THE RECORD\n***********************************************************************\n*                                                                     *\n*   DETERMINE LENGTH OF LEVEL                                         *\n*                                                                     *\n***********************************************************************\nPARMLEN  LA    R3,7           MAXIMUM LENGTH OF 8\n         LA    R4,QPARM1+7    END OF FIELD\nPARMLEN2 CLI   0(R4),C' '     IS THIS BYTE BLANK?\n         BNE   PARMLEN3       NO. THIS IS THE LENGTH\n         BCTR  R4,0           TRY PREVIOUS BYTE\n         BCT   R3,PARMLEN2    LOOP\nPARMLEN3 STH   R3,QLNG1       STORE THE LENGTH OF LEVEL\n         BR    R2             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   SEARCH A JQE QUEUE                                                *\n*                                                                     *\n***********************************************************************\nSRCHJQE  ZAP   QCOUNT,=P'0'   ZERO THE QUEUE COUNT\n         L     R9,0(R4)       LOAD FIRST JQE OFFSET               UF020\nNEXTJQE  LA    R9,0(,R9)      KILL EXTRANEOUS BITS                UF020\n         LTR   R9,R9          TEST FOR END OF QUEUE               UF020\n         BZR   R2             END OF QUEUE. RETURN.\n         A     R9,QCJQTA      ADD BASE TO OFFSET\n         B     4(R2)          DETERMINE ELIGIBILITY\nPRTJQE   AP    QCOUNT,=P'1'   INCREMENT COUNT\nPRT2JQE  SR    R1,R1          INDICATE THIS IS A JQE\n         L     R15,=V(FORMAT) ADDR OF PRINT MODULE\n         BALR  R14,R15        PRINT THE JQE IN R9\nREJJQE   L     R9,JQENEXT     LOAD OFFSET TO NEXT JQE             UF020\n         B     NEXTJQE        GET THE NEXT JQE\nSKIPJQE  AP    QCOUNT,=P'1'   INCREMENT COUNT\n         B     REJJQE         CONTINUE\n***********************************************************************\n*                                                                     *\n*   SEARCH A JOE QUEUE                                                *\n*                                                                     *\n***********************************************************************\nSRCHJOE  ZAP   QCOUNT,=P'0'    ZERO THE QUEUE COUNT               RNB16\n         OI    QFLAG1,QFLG1LCL SHOW SEARCHING LOCAL QUEUE         RNB16\n         B     FIRSTJOE        AND GO DO IT                       RNB16\n*                                                                 RNB16\nSRCHJOE1 NI    QFLAG1,X'FF'-QFLG1LCL TURN OFF LOCAL QUEUE FLAG    RNB16\n         LA    R4,4(,R4)             POINT TO REMOTE QUEUE        RNB16\n*                                                                 RNB16\nFIRSTJOE L     R8,0(R4)       LOAD FIRST JOE OFFSET               UF020\n         LA    R8,0(,R8)       KILL EXTRANEOUS BITS.              UF020\n         LTR   R8,R8          IS THE QUEUE EMPTY?\n         BNZ   $1             /NO  - CONTINUE                     RNB16\n*                             /YES -                              RNB16\n         TM    QFLAG1,QFLG1LCL WAS THIS THE LOCAL QUEUE?          RNB16\n         BO    SRCHJOE1       /YES - GO DO REMOTE QUEUE           RNB16\n         BR    R2             /NO  - RETURN TO CALLER             RNB16\n$1       EQU   *                                                  RNB16\n         XC    PRIORITY(12),PRIORITY ZERO OUT HIGHEST POINTERS\nNEXTJOE  LA    R8,0(,R8)      CLEAR EXTRA BITS                    UF020\n         LTR   R8,R8          TEST FOR END OF QUEUE               UF020\n         BZ    TESTJOE        END OF QUEUE. PASS HIGHEST TO CALLER.\n         A     R8,QCJOTA      ADD BASE TO OFFSET\n         L     R9,JOEJQE      OFFSET TO JQE                       UF020\n         N     R9,=A(X'00FFFFFF')  CLEAR EXTRA BITS               UF020\n         BZ    TRYJOE         THIS JOE ALREADY USED. TRY NEXT ONE.\n         A     R9,QCJQTA      ADD BASE TO OFFSET\n         LA    R7,255         PRESET MAXIMUM PRIORITY\n         TM    JQEPRIO,240    IS THIS JOB PRIORITY 15?\n         BO    HIGHJOE        YES. PASS TO CALLER.\n         LA    R1,16          PRESET PRIORITY ONE\n         CLI   JQETYPE,$HARDCPY IS THE JOB EXECUTING?\n         BNE   EXECJOE        YES. USE PRIORITY ONE.\n         IC    R1,JQEPRIO     INSERT JQE PRIORITY\nEXECJOE  IC    R7,JOEPRIO     INSERT JOE PRIORITY\n         AR    R7,R1          ADD PRIORITIES\n         SRL   R7,1           BECAUSE HASP DOES IT, THAT'S WHY\nHIGHJOE  C     R7,PRIORITY    IS THIS LESS THAN PREVIOUS HIGH?\n         BL    TRYJOE         YES. TRY NEXT ONE.\n         STM   R7,R9,PRIORITY NO. REPLACE PREVIOUS HIGH.\nTRYJOE   L     R8,JOENEXT     ADDR OF NEXT JOE                    UF020\n         N     R8,=A(X'00FFFFFF')  CLEAR EXTRA BITS               UF020\n         B     NEXTJOE        TRY NEXT JOE\nTESTJOE  LM    R7,R9,PRIORITY LOAD ADDR OF HIGHEST JOE\n         LTR   R8,R8          WAS THE QUEUE EMPTY?\n         BNZ   $2                                                 RNB16\n         TM    QFLAG1,QFLG1LCL WAS THIS THE LOCAL QUEUE?          RNB16\n         BO    SRCHJOE1       /YES - GO DO REMOTE QUEUE           RNB16\n         BR    R2             /NO  - END OF QUEUE.                RNB16\n$2       EQU   *                                                  RNB16\n         MVC   JOEJQEB,=F'0'  INDICATE THIS JOE USED              RNB16\n         B     4(R2)          DETERMINE ELIGIBILITY\nPRTJOE   LA    R1,4           INDICATE THIS IS A JOE\n         AP    QCOUNT,=P'1'   INCREMENT COUNT\n         L     R15,=V(FORMAT) ADDR OF PRINT MODULE\n         BALR  R14,R15        PRINT THE JOE IN R9\nREJJOE   B     FIRSTJOE       GET THE NEXT JOE\nSKIPJOE  AP    QCOUNT,=P'1'   INCREMENT COUNT\n         B     REJJOE         CONTINUE\n***********************************************************************\n*                                                                     *\n*   DETERMINE INPUT QUEUE                                             *\n*                                                                     *\n***********************************************************************\nFINDJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         BCTR  R4,0           SUBTRACT 1\n         STH   R4,QCLASSH     RESTORE VALUE\n         B     NEXTJQT2       CONTINUE\nNEXTJQT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         CH    R4,=H'36'      IS THIS THE LAST QUEUE?\n         BNL   NEXTJQT9       YES. GO HOME.\nNEXTJQT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS\n         AR    R4,R4          MULTIPLY BY 2\n         AR    R4,R4          AND BY 2 AGAIN                      UF020\n         USING JQTDSECT,R1    BASE REG FOR JQT\n         L     R1,QCJQHEAD    LOAD ADDR OF JQT\n         LA    R4,JQTCLSA(R4) NEXT QUEUE\n         DROP  R1\n         BR    R2             RETURN TO CALLER\nNEXTJQT9 CLI   QCODE,0        IS THIS A STATUS REQUEST?\n         BE    ST5            YES. GO TO STATUS.\n         CLI   QCODE,36       IS THIS A DJ REQUEST?\n         BNE   STOP           NO. GO HOME.\n         B     ST5            YES. GO TO STATUS.\n***********************************************************************\n*                                                                     *\n*   DETERMINE OUTPUT QUEUE                                            *\n*                                                                     *\n***********************************************************************\nFINDJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         BCTR  R4,0           SUBTRACT 1\n         STH   R4,QCLASSH     RESTORE VALUE\n         B     NEXTJOT2       CONTINUE\nNEXTJOT  TR    QCLASS,CLASSTBL DETERMINE OFFSET FROM FIRST CLASS\n         LH    R4,QCLASSH     LOAD TABLE OFFSET\n         CH    R4,=H'36'      IS THIS THE LAST QUEUE?\n         BNL   STOP           YES. GO HOME.\nNEXTJOT2 TR    QCLASS,NAMETBL MOVE CLASS NAME TO QCLASS\n         AR    R4,R4          MULTIPLY BY 2\n         SLL   R4,2           AND THEN BY 4 (WILL ONLY GET LOCALS)UF020\n         USING JOT,R1         BASE REG FOR JOT\n         L     R1,QCJOTA      LOAD ADDR OF JOT\n         LA    R4,JOTCLSQ(R4) NEXT QUEUE\n         DROP  R1\n         BR    R2             RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   CALL DISPLAY ROUTINE                                              *\n*                                                                     *\n***********************************************************************\nDISPLAY  LA    R1,QDMSG             SAVE ADDRESS\n         ST    R1,QDMSGA                 OF THE MESSAGE\n         MVC   QDMLNG,=H'80'        SET THE LENGTH\n         L     R15,=V(DISPLAY)      BRANCH TO\n         BALR  R14,R15                     DISPLAY\n         BR    R2                   RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   GO HOME                                                           *\n*                                                                     *\n***********************************************************************\nSTOP     QSTOP\n         LTORG\n***********************************************************************\n*                                                                     *\n*   TABLES FOR CLASS DETERMINATION                                    *\n*                                                                     *\n***********************************************************************\nNAMETBL  DC    C'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\nCLASSTBL DC    192X'01'\n         DC    X'00010203040506070809',7X'00'\n         DC    X'0A0B0C0D0E0F101112',8X'00'\n         DC    X'131415161718191A',6X'00'\n         DC    X'1B1C1D1E1F2021222324',6X'00'\n***********************************************************************\n*                                                                     *\n*   MISCELLANEOUS GARBAGE                                             *\n*                                                                     *\n***********************************************************************\nED5      DC    X'402020202120'\nDQHEADER DC    CL80'*** INPUT QUEUES ***'\nDQLINE   DC    CL80' INPUT                        EXECUTING      WAITINX\n               G      HELD'\nDFHEADER DC    CL80'*** OUTPUT QUEUES ***'\nDFLINE   DC    CL80' OUTPUT                       PRINTING'\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nSEARCH   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         SPACE 1                                                  UF001\n         SPACE 1                                                  UF001\n         $JQE\nJQEHQLOK EQU   JQEJBLOK       NEW LABEL FOR OLD FIELD             UF020\n         $JOE\n         $JOT\n         $JQT\n         $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDMSG\n         DS    CL9\nCLASS    DS    CL1\n         DS    CL2\nQTCOUNT  DS    CL6\n         DS    CL7\nQECOUNT  DS    CL3\n         DS    CL12\nQACOUNT  DS    CL3\n         DS    CL10\nQHCOUNT  DS    CL3\n         ORG   QTCOUNT\nFCOUNT   DS    CL6\nWORK     DSECT\n         DS    CL80\nPRIORITY DS    3F\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSLOG": {"ttr": 8201, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SYSLOG   TITLE 'QUEUE COMMAND - PRINT THE SYSTEM LOG DATASET'     ONL01\nSYSLOG   QSTART ,                  START SYSLOG CSECT ASSEMBLY    ONL01\n         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING WORK,R13       BASE REG FOR TEMP WORK\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n***********************************************************************\n*                                                                     *\n*   CHECK JOBNAME EQUAL SYSLOG                                        *\n*                                                                     *\n***********************************************************************\n         L     R9,QCJCTA      ADDR OF IOAREA FOR JCT\n         USING JCT,R9         BASE REG FOR JCT                    ONL16\n         CLC   JCTJNAME,=CL8'SYSLOG' IS THIS SYSLOG?\n         BNE   TILT           NO. TILT.\n***********************************************************************\n*                                                                     *\n*   DETERMINE NUMBER OF DATASETS FROM CURRENT DATASET                 *\n*                                                                     *\n***********************************************************************\n*        LH    R3,JCTPDDBK    HIGHEST DATASET ID NUMBER\n         L     R3,JCTPDDBK    HIGHEST DATASET ID NUMBER          WGH42\n         LH    R2,QLNG2       LENGTH OF BACKUP PARM\n         SH    R2,=H'1'       IS THE BACKUP PARM ZERO LENGTH?\n         BM    CALLLIST       YES. SKIP.\n         CLI   QPARM2,C'-'    IS THERE A MINUS SIGN?\n         BNE   PLUS           NO. SKIP.\n         MVI   QPARM2,C'0'    CHANGE MINUS TO ZERO\nPLUS     MVC   QFZONES,QFZONE INITIALIZE NUMERIC TEST\n         EX    R2,MVZ         MOVE THE ZONES FOR VALIDITY CHECK\n         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?\n         BNE   TILT           NO. QUIT.\n         EX    R2,PACK        PACK THE FIELD\n         CVB   R2,CONVERT     CONVERT TO BINARY\n         SR    R3,R2          BACK UP NUMBER OF DATASETS\n         CH    R3,=H'101'     IS THE NUMBER LESS THAN 101?\n         BL    TILT           YES. TILT.\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR LOOKING AT THE SYSTEM LOG     ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QASYSLOG          SEE IF USER CAN LOOK AT SYSLOG ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   CALL LISTDS TO LIST THE DATASET                                   *\n*                                                                     *\n***********************************************************************\nCALLLIST STH   R3,QPDSID      STORE DATASET ID\n         MVC   QPOFFSET,=H'0' PRINT OFFSET ZERO\n         L     R15,=V(LISTDS) ADDR OF LISTDS MODULE\n         BALR  R14,R15        GO TO IT\n         QSTOP\nTILT     QTILT '*** INVALID PARAMETER ***'\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\nMVZ      MVZ   QFZONES(1),QPARM2 CHECK FOR NUMERIC\nPACK     PACK  CONVERT,QPARM2(1) CONVERT TO BINARY\n         LTORG\n         DROP  ,                   DROP ALL ADDRESSING            NERDC\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nSYSLOG   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $BUFFER ,                                                 ONL16\n         IFGRPL\n        $JCT   ,\n        $HASPEQU\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nWORK     DSECT\n         DS    72C\nCONVERT  DS    D\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSOUT": {"ttr": 8204, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "SYSOUT   TITLE 'QUEUE COMMAND - MANIPULATE SYSOUT'                ONL01\nSYSOUT   QSTART ,                  START SYSOUT CSECT ASSEMBLY    ONL01\n***********************************************************************\n* RNB CHANGES:                                                        *\n*      (1) RNB00 - MOVED THINGS AROUND FOR FOX ASSEMBLER              *\n*      (2) RNB09 - FOR A REQ COMMAND, IF NO NEWCLASS GIVEN USE CLASS C*\n*                  KEYED TO QRNB=1.                                   *\n***********************************************************************\n         GBLB  &QRNB                                              RNB09\n         USING QCKPT,R10\n         L     R10,QVCKPT\n         USING QDISPLAY,R9\n         L     R9,QVDSPL\n         USING WORK,R13\n***********************************************************************\n*                                                                     *\n*   TEST AUTHORIZATION OF QUEUE                                       *\n*                                                                     *\n***********************************************************************\n         TESTAUTH FCTN=1          TEST AUTHORIZATION OF USER\n         LTR   R15,R15            ?/AUTHORIZED\n         BZ    FJOB               YES. KEEP ON TRUCKING\n         QTILT ' *** FUNCTION IS NOT AUTHORIZED ***'\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE, JCT AND IOT                       *\n*                                                                     *\n***********************************************************************\nFJOB     L     R15,=V(FINDJOB)    ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15            GO TO IT\n         L     R4,QCJCTA          ADDR OF JCT                     ONL02\n         USING JCT,R4             NOTE JCT ADDRESSABILITY         ONL16\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   VALIDATE THE FUNCTION CODE                                        *\n*                                                                     *\n***********************************************************************\n         LH    R1,QCODEH          GET FUNCTION CODE\n         CH    R1,=H'8'           ?/VALID FUNCTION CODE\n         BH    STOP               NO. EXIT\n         SPACE 2                                                  ONL02\n******************************************************************ONL02\n*                                                                 ONL02\n*   PERFORM AUTHORIZATION CHECK FOR JOB                           ONL02\n*                                                                 ONL02\n******************************************************************ONL02\n         SPACE 1                                                  ONL02\n         QAUTHCK QASYSOUT          PERFORM JOB AUTHORIZATION      ONL02\n         SPACE 2                                                  ONL02\n***********************************************************************\n*                                                                     *\n*   BRANCH TO THE APPROPIATE PROCESSOR                                *\n*                                                                     *\n***********************************************************************\n         LA    R7,SSOBHDR         ADDR FOR SUBSYSTEM OPTION BLOCK\n         USING SSOB,R7\n         B     *+4(R1)\n         B     DELETE             0   DELETE REQUEST\n         B     REQUEUE            4   REQUEUE REQUEST\n         B     CANCEL             8   CANCEL REQUEST\n***********************************************************************\n*                                                                     *\n*   PROCESS CANCEL REQUEST                                            *\n*                                                                     *\n***********************************************************************\nCANCEL   LA    R5,SSCSBGN         A(CANCEL PARAMETER LIST)\n         BAL   R6,INITSSOB        GO INITIALIZE THE SSOB.\n         MVC   SSOBFUNC,=AL2(SSOBCANC)  SET THE FUNCTION\n         XC    SSCSBGN(SSCSIZE),SSCSBGN CLEAR PARM LIST\n         MVC   SSCSLEN,=AL2(SSCSIZE) SET LENGTH OF CANCEL PARM LIST\n         CLI   QPARM2,C'P'        ?/PURGE THE OUTPUT\n         BNE   CAN000             NO. DON'T SET THE FLAG\n         OI    SSCSFLGS,SSCSCOUT  YES\nCAN000   MVC   SSCSJOBN,JCTJNAME  JOBNAME\n         MVC   SSCSJOBI,JCTJOBID  JES2 JOB ID\n         MVC   SSCSDIMP,=H'16'\n         LA    R5,SSCSJOBI        A(JES2 JOB ID)\n         BAL   R6,FIXJOBID        ENSURE JOBID HAS NO IMBEDDED BLANKS\n         BAL   R6,VERREQ          VERIFY THE REQUEST\n         BAL   R6,CALLSSI         GO CALL SUBSYSTEM INTERFACE RTN\n         L     R1,SSOBRETN        GET RC FOR CANCEL FUNCTION\n         B     *+4(R1)\n         B     FUNCTOK            0 -  CANCEL COMPLETED\n         B     TILTNOJB           4 -  JOBNAME NOT FOUND\n         B     TILTBADI           8 -  INVALID JOBNAME/JOB ID COMB.\n         B     TILTNCAN           12 - JOB NOT CANCELLED - DUP JOBN\n         B     TILTMALL           16 - STATUS ARRAY TOO SMALL\n         B     TILTOUTP           20 - JOB NOT CANCELLED - ON OUTPUT Q\n         B     TILTYNTX           24 - JOB ID WITH INVALID SYNTAX\n         B     TILTICAN           28 - INVALID CANCEL REQUEST\n***********************************************************************\n*                                                                     *\n*   PROCESS REQUEUE REQUEST                                           *\n*                                                                     *\n***********************************************************************\nREQUEUE  LA    R5,SSSOBGN         A(REQUEUE SYSOUT PARM LIST)\n         BAL   R6,INITSSOB        GO INITIALIZE THE SSOB\n         AIF   (NOT &QRNB).RNB09A                                 RNB09\n         CLI   QPARM2,C' '        WAS NEW CLASS GIVEN?            RNB09\n         BNE   RNB09A             /YES - USE IT                   RNB09\n         MVI   QPARM2,C'C'        /NO  - DEFAULT TO CLASS C       RNB09\nRNB09A   DS    0H                                                 RNB09\n.RNB09A  ANOP                                                     RNB09\n         MVC   SSOBFUNC,=AL2(SSOBSOUT) INDICATE SYSOUT IS THE FUNCTION\n         XC    SSSOBGN(SSSOSIZE),SSSOBGN CLEAR PARM LIST\n         MVC   SSSOLEN,=AL2(SSSOSIZE) SET LENGTH OF SYSOUT PARM LIST\n         OI    SSSOUFLG,SSSOSETC  USE SSSOCLAS AS DISP\n         OI    SSSOUFLG,SSSORLSE  RELEASE ALL SELECTED DATA SETS\n         OI    SSSOFLG1,SSSOHLD   SELECTION INCLUDES HELD SYSOUT DS\n         OI    SSSOFLG1,SSSOSJBN  JOB NAME IS PRESENT\n         OI    SSSOFLG1,SSSOSJBI  JOB ID IS PRESENT\n         OI    SSSOFLG2,SSSOCTRL  PROCESSING COMPLETED\n         MVC   SSSOJOBN,JCTJNAME  JOBNAME\n         MVC   SSSOJOBI,JCTJOBID  JOB ID\n         MVC   SSSOCLAS,QPARM2    NEWCLASS\n         LA    R5,SSSOJOBI        A(JES JOB ID)\n         BAL   R6,FIXJOBID        ENSURE JOBID HAS NO EMBEDDED BLANKS\n         BAL   R6,VERREQ          VERIFY THE REQUEST\n         BAL   R6,CALLSSI         GO CALL SUBSYSTEM INTERFACE RTN\nCHKSORC  L     R1,SSOBRETN        GET RETURN CODE FOR SYSOUT FUNCTION\n         B     *+4(R1)\n         B     FUNCTOK            0 -  SYSOUT COMPLETED\n         B     TILTEODS           4 -  NO MORE DS TO SELECT\n         B     TILTNJOB           8 -  JOB NOT FOUND\n         B     TILTINVA           12 - INVALID SEARCH ARGUMENTS\n         B     TILTUNAV           16 - UNABLE TO PROCESS NOW\n         B     TILTDUPJ           20 - DUPLICATE JOB NAMES\n         B     TILTINVJ           24 - INVALID JOBN/JOBID COMBO\n         B     TILTIDST           28 - INVALID DEST SPECIFIED\n***********************************************************************\n*                                                                     *\n*   PROCESS DELETE  REQUEST                                           *\n*                                                                     *\n***********************************************************************\nDELETE   LA    R5,SSSOBGN         A(DELETE SYSOUT PARM LIST)\n         BAL   R6,INITSSOB        GO INITIALIZE THE SSOB\n         MVC   SSOBFUNC,=AL2(SSOBSOUT) INDICATE SYSOUT IS THE FUNCTION\n         XC    SSSOBGN(SSSOSIZE),SSSOBGN CLEAR PARM LIST\n         MVC   SSSOLEN,=AL2(SSSOSIZE) SET LENGTH OF SYSOUT PARM LIST\n         OI    SSSOUFLG,SSSODELC  INDICATE DELETE REQUEST\n         OI    SSSOFLG1,SSSOHLD   SELECTION INCLUDES HELD DS\n         OI    SSSOFLG1,SSSOSJBN  JOB NAME PRESENT\n         OI    SSSOFLG1,SSSOSJBI  JES2 JOB ID PRESENT\n         OI    SSSOFLG2,SSSOCTRL  PROCESSING COMPLETED\n         MVC   SSSOJOBN,JCTJNAME  JOBNAME\n         MVC   SSSOJOBI,JCTJOBID  JES2 JOBID\n         LA    R5,SSSOJOBI        A(JES2 JOBID)\n         BAL   R6,FIXJOBID        ENSURE JOBID HAS NO EMBEDDED BLANKS\n         BAL   R6,VERREQ          VERIFY THE REQUEST\n         BAL   R6,CALLSSI         GO CALL SUBSYSTEM INTERFACE RTN.\n         B     CHKSORC            GO CHECK RC\n***********************************************************************\n*                                                                     *\n*   INITIALIZE THE SUBSYSTEM OPTION BLOCK (SSOB)                      *\n*                                                                     *\n*        R5 - ADDRESS OF FUNCTION PARM LIST                           *\n*        R6 - RETURN ADDRESS                                          *\n*        R7 - A(SSOB)                                                 *\n*                                                                     *\n***********************************************************************\nINITSSOB XC    SSOBEGIN(SSOBHSIZ),SSOBEGIN CLEAR THE SSOB\n         MVC   SSOBID,=C'SSOB'\n         MVC   SSOBLEN,=AL2(SSOBHSIZ) LENGTH OF SSOB HEADER\n         ST    R5,SSOBINDV        FUNCTION DEPENDENT AREA POINTER\n         ST    R7,SSOBPTR         SAVE ADDR OF SSOB\n         OI    SSOBPTR,X'80'      REQUIRED FOR IEFSSREQ INTERFACE\n         BR    R6\n***********************************************************************\n*                                                                     *\n*   REMOVE EMBEDDED BLANKS IN JES2 JOB ID                             *\n*                                                                     *\n***********************************************************************\nFIXJOBID LA    R8,5               MAX LENGTH OF SCAN\n         LA    R5,3(R5)           START LOCATION FOR SCAN\nFIX000   CLI   0(R5),C' '         ?/EMBEDDED BLANK\n         BNE   FIX010             NO. CONTINUE WITH THE SCAN\n         MVI   0(R5),C'0'         YES. REPLACE WITH 0\nFIX010   LA    R5,1(R5)           POINT TO NEXT BYTE\n         BCT   R8,FIX000          GO DO IT AGAIN\n         BR    R6                 ALL OVER. RETURN TO CALLER\n***********************************************************************\n*                                                                     *\n*   TELL THE USER WHAT HE IS ABOUT TO DO                              *\n*                                                                     *\n***********************************************************************\nVERREQ   MVC   VCLEAR,WARNING     MOVE IN THE WARNING MSG\n         MVC   VJOBN(8),JCTJNAME\n         MVC   VJOBID(8),JCTJOBID\n         LR    R2,R6              SAVE RETURN ADDR\n         LA    R5,VJOBID          A(JES JOB ID)\n         BAL   R6,FIXJOBID        INSURE NO IMBEDDED BLANKS\n         LR    R6,R2              RESTORE RETURN ADDR\n         CLI   QSUBNAME,C'D'      ?/DELETE COMMAND\n         BNE   VER000\n         MVC   VCMD(6),=C'DELETE'\n         B     VER020\nVER000   CLI   QSUBNAME,C'C'      ?/CANCEL COMMAND\n         BNE   VER010\n         MVC   VCMD(6),=C'CANCEL'\n         CLI   QPARM2,C'P'        PURGE SPECIFIED\n         BNE   VER020\n         MVC   VACTION(5),QPARM2\n         B     VER020\nVER010   MVC   VCMD(7),=C'REQUEUE'\n         MVC   VACTION,RQACTION\n         MVC   VCLASS(1),QPARM2\nVER020   MVC   QDMLNG,=H'0'       TELL DISPLAY TO PRINT IT NOW\n         L     R15,=V(DISPLAY)    A(MODULE TO DISPLAY THE MESSAGE)\n         BALR  R14,R15            GO DISPLAY THE WARNING\n         BR    R6                 RETURN TO THE CALLER\n***********************************************************************\n*                                                                     *\n*   INTERFACE TO THE SUBSYSTEM                                        *\n*                                                                     *\n***********************************************************************\nCALLSSI  L     R2,16              A(CVT)\n         L     R2,296(R2)         A(JESCT)\n         MODESET MODE=SUP         GET SUPER\n         LA    R1,SSOBPTR         ADDR OF PTR TO SSOB\n         L     R15,20(R2)         A(JESSSREQ)\n         BALR  R14,R15\n         LR    R2,R15             SAVE RETURN CODE\n         MODESET MODE=PROB        BACK TO NORMAL\n         B     *+4(R2)\n         BR    R6                 0 -  SUCCESSFUL INSTRUCTION\n         BR    R6                      DUMMY INSTRUCTION\n         B     TILTNSUP           4 -  SS DOESN'T SUPPORT THIS FUNCTION\n         B     TILTNTUP           8 -  SS EXIST, BUT IS NOT UP\n         B     TILTNOSS           12 - SS DOES NOT EXIST\n         B     TILTDIST           16 - FUNCTION NOT SUPPORTED\n         B     TILTLERR           20 - LOGICAL ERROR\n***********************************************************************\n*                                                                     *\n*   RETURN TO CALLER                                                  *\n*                                                                     *\n***********************************************************************\nSTOP     QSTOP\nFUNCTOK  QTILT ' *** COMMAND SUCCESSFULLY PROCESSED ***'\n***********************************************************************\n*                                                                     *\n*   ERROR MESSAGES                                                    *\n*                                                                     *\n***********************************************************************\nTILTNSUP QTILT ' *** QUEUE LOGIC ERROR -- RC =4  FROM SSI ***'\nTILTNTUP QTILT ' *** JES2 IS NOT UP ***'\nTILTNOSS QTILT ' *** QUEUE LOGIC ERROR -- RC =12 FROM SSI ***'\nTILTDIST QTILT ' *** DISASTROUS ERROR DURING PROCESSING ***'\nTILTLERR QTILT ' *** QUEUE LOGIC ERROR -- RC =20 FROM SSI ***'\nTILTNOJB EQU   *\nTILTNJOB QTILT ' *** JOBNAME NOT FOUND ***'\nTILTBADI EQU   *\nTILTINVJ QTILT ' *** INVALID JOBNAME/JOB ID COMBINATION ***'\nTILTNCAN EQU   *\nTILTDUPJ QTILT ' *** DUPLICATE JOBNAME AND NO JOBID GIVEN ***'\nTILTEODS QTILT ' *** JOB HAS NO HELD DATA SETS ***'\nTILTICAN QTILT ' *** CAN''T CANCEL YOUR TSO SESSION OR A STARTED TASK *X\n               **'\nTILTOUTP QTILT ' *** JOB NOT CANCELLED - JOB ON OUTPUT QUEUE ***'\nTILTMALL EQU   *\nTILTYNTX EQU   *\nTILTINVA EQU   *\nTILTUNAV EQU   *\nTILTIDST QTILT ' *** QUEUE LOGIC ERROR ***'\n***********************************************************************\n*                                                                     *\n*   MISCELLANEOUS NUTS, BOLTS, ETC.                                   *\n*                                                                     *\n***********************************************************************\nWARNING  DS    0CL80\n         DC    CL21' *** '\n         DC    CL1'('\n         DC    CL8' '\n         DC    CL1')'\n         DC    CL12' '\n         DC    CL37'. HIT ENTER IF OK OR RESPECIFY. ***'\nRQACTION DC    CL11'NEWCLASS( )'\n         LTORG\n         DROP  ,                   DROP ALL ADDRESSINGS           NERDC\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nSYSOUT   CSECT ,                                                  UF023\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n        $BUFFER ,                                                 ONL16\n         IFGRPL\n         $TAB\n         $JCT\n         $PDDB                                                    RNB00\n         $IOT                                                     RNB00\n         $HASPEQU\n         IEFJSSOB (SO,CS),CONTIG=YES\n         QCOMMON\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\n         ORG   QDHLINE\nVCLEAR   DS    0CL80\n         DS    CL5\nVCMD     DS    CL8\nVJOBN    DS    CL9\nVJOBID   DS    CL10\nVACTION  DS    CL11\n         DS    CL37\nVCLASS   EQU   VACTION+9\nWORK     DSECT\nFILLER   DS    CL512              BIG FILLER\nSSOBPTR  DS    F\nSSOBHDR  DS    CL140\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XDS": {"ttr": 8454, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "XDS      TITLE 'QUEUE COMMAND - PRINT A DATASET FROM SPOOL BY ID' ONL01\nXDS      QSTART ,                  START XDS CSECT ASSEMBLY       ONL01\n         USING QCKPT,R10      BASE REG FOR CKPT WORK AREA\n         L     R10,QVCKPT     LOAD BASE REG\n         USING WORK,R13       BASE REG FOR TEMP WORK\n***********************************************************************\n*                                                                     *\n*   CALL FINDJOB TO LOCATE THE JQE, JCT, AND IOT                      *\n*                                                                     *\n***********************************************************************\n         L     R15,=V(FINDJOB) ADDR OF MODULE TO FIND JOB\n         BALR  R14,R15        GO TO IT\n***********************************************************************\n*                                                                     *\n*   CHECK AND CONVERT THE DATASET ID NUMBER                           *\n*                                                                     *\n***********************************************************************\n         LH    R2,QLNG2       LENGTH OF DATASET ID FIELD\n         SH    R2,=H'1'       IS THE DATASET ID FIELD ZERO LENGTH?\n         BM    TILT           YES. QUIT.\n         MVC   QFZONES,QFZONE INITIALIZE NUMERIC TEST\n         EX    R2,MVZ         MOVE THE ZONES FOR VALIDITY CHECK\n         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?\n         BNE   TILT           NO. QUIT.\n         EX    R2,PACK        PACK THE FIELD\n         CVB   R2,CONVERT     CONVERT TO BINARY\n         STH   R2,QPDSID      STORE DATASET ID\n***********************************************************************\n*                                                                     *\n*   CHECK AND CONVERT THE PRINT OFFSET                                *\n*                                                                     *\n***********************************************************************\n         MVC   QPOFFSET,=H'0' DEFAULT TO ZERO\n         LH    R2,QLNG3       LENGTH OF OFFSET FIELD\n         SH    R2,=H'1'       IS THE OFFSET FIELD ZERO LENGTH?\n         BM    CALLLIST       YES. USE ZERO OFFSET.\n         MVC   QFZONES,QFZONE INITIALIZE NUMERIC TEST\n         EX    R2,MVZ2        MOVE THE ZONES FOR VALIDITY CHECK\n         CLC   QFZONES,QFZONE IS THE FIELD NUMERIC?\n         BNE   TILT           NO. QUIT.\n         EX    R2,PACK2       PACK THE FIELD\n         CVB   R2,CONVERT     CONVERT TO BINARY\n         STH   R2,QPOFFSET    STORE OFFSET\n***********************************************************************\n*                                                                     *\n*   CALL LISTDS TO LIST THE DATASET                                   *\n*                                                                     *\n***********************************************************************\nCALLLIST L     R15,=V(LISTDS) ADDR OF LISTDS MODULE\n         BALR  R14,R15        GO TO IT\n         QSTOP\nTILT     QTILT '*** DATASET ID INVALID ***'\n***********************************************************************\n*                                                                     *\n*   MISCELLANY                                                        *\n*                                                                     *\n***********************************************************************\nMVZ      MVZ   QFZONES(1),QPARM2 CHECK FOR NUMERIC\nMVZ2     MVZ   QFZONES(1),QPARM3 CHECK FOR NUMERIC\nPACK     PACK  CONVERT,QPARM2(1) CONVERT TO BINARY\nPACK2    PACK  CONVERT,QPARM3(1) CONVERT TO BINARY\n         LTORG\nSYMDEL   DSECT ,                   KILL SYM CARD GENERATION       UF023\nWORK     DSECT\n         DS    72C\nCONVERT  DS    D\n         QPRBGEN BEGIN             SET PRINT FOR CNTL BLOCK GEN   ONL01\n         QCOMMON\n         $HASPEQU\n         QPRBGEN DONE              RESTORE NORMAL PRINT STATUS    ONL01\nSYMNODEL DSECT ,                   RESTORE SYM CARD GENERATION    UF023\n         END\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT389/FILE389.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT389", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}