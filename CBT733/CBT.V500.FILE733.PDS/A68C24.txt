===========================  Pack / Unpack Program ===========================

 Specification:
 --------------

         This program is used to pack and unpack text files for the ALGOL68C
    distribution tape.

         In the packed state, one physical file contains many logical files.
    Each logical file has the format:

              HEX01  "idf"  HEX02  text of file  HEX03.

         Logical records of the file are separated by HEX1E; the records of
    the physical file are irrelevant.  The characters HEX01, HEX02, HEX03
    and HEX1E should not appear in the unpacked file; if they do, an error
    message will be given, and they will be replaced by 'oddch'.

         The program either packs a series of text files to one packed file
    with the above format, or takes one packed file and unpacks it to a
    number of files, using either the idfs provided as a separate input, or
    the idfs in the header - i.e., the original ones used by the program
    when packing these files.

         Optionally, the program can also perform various manipulations on
    the files while packing or unpacking them.  The ones currently defined
    are:
         i) Translation:     A translation table is given, according to
                            which each character is translated.
        ii) Changing the strop convention:
                             Either change from using a strop convention of
                            upper and lower case words to one of preceding
                            stropwords by a single quote, or vice versa.
                             In changing the strop convention, strings and
                            comments are always copied unchanged.


 Method of use:
 --------------

         The program first reads a series of directives from the 'parameter
    channel' input.  These directives are words separated by spaces, commas
    or newlines.  Only the first character of each word is significant.
    Upper and lower case forms are recognised.  Directives currently
    recognised are:
         i) P(ack)  or  U(npack) :
                             Mutually exclusive.  One of these directives
                            must be present; 'P' specifies packing, 'U'
                            unpacking.
        ii) T(ranslate) :    Optional.  If present, translate according to
                            table in program.
       iii) Q(uotestrop)  or  C(asestrop) :
                             Optional and mutually exclusive.  If 'Q', then
                            change from uppercase strops to single quote
                            pre-strop; if 'C', then the reverse; otherwise,
                            leave strops unchanged.


 Files used:
 -----------

    i) Packing:
         The file specified by the idf "CTRL" on 'standin channel' must be
    present, and should contain a sequence of idfs.  These idfs are those of
    the files to be packed to a file with idf "TO".  The idfs are also
    written in the header of each file, for use when unpacking.

    ii) Unpacking:
         The packed input comes from a file with idf "FROM".  If the file
    specified by the idf "CTRL" on 'standin channel' is present, then the
    idfs for the unpacked files are taken from there, and there must be the
    same number of idfs given as files on the packed input.  Otherwise, the
    idfs in the headers are used.


         Error messages and program statistics are sent to the file
    specified by the null idf on 'standout channel'.

         Except for the directives from 'parameter channel', all transput is
    done via 'standin channel' and 'standout channel'.


 Idfs:
 -----

         The idfs are read as a sequence of characters between string
    quotes, with a maximum length of 'max idf length', which is 18 in the
    program provided.  Escape combinations are permitted but not translated.
         Idfs may therefore be separated by a sequence of newlines and any
    characters other than string quotes.


 Character translation:
 ----------------------

         An array of characters, 'translate', is used for character
    translation.  When the directive 'T' is specified, each character 'ch'
    read in is replaced by the character 'translateâABS chä'.  Note that
    characters read in are compared with character values declared in the
    program, and the translation table must be designed with this in mind.
