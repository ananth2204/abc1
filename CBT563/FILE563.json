{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012346000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 2292654, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 28, "INMDSNAM": "CBT.V500.FILE563.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 2292654, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 2292654, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE563.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00&\\x05'", "DS1TRBAL": "b'\\x90<'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\xa0\\x00\\x04\\x9a\\xc0\\xd8'", "b\"X\\xf4\\xfd\\xd0\\x00\\x00\\x04,\\x00\\x0b\\x04/\\x00\\x04\\x00'\"", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x02\\x13\\x0f\\x01\\x02\\x13\\x0f\\x15W\\x00\\x0c\\x00\\x0c\\x00\\x00\\xe2\\xc8\\xc9\\xd7\\xc4\\xc1\\xe3@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-10T00:00:00", "modifydate": "2002-05-10T15:57:00", "lines": 12, "newlines": 12, "modlines": 0, "user": "SHIPDAT"}, "text": "REGULAR CBT TAPE - VERSION 446    FILE:  563\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT446.FILE563\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    8000    PO\n\n   PDS117I 136 MEMBERS COUNTED; CUMULATIVE SIZE IS 20,864 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   05/10/02    15:57:18    GMT-5:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE1": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00X\\x01\\x02\\x13\\x0f\\x01\\x02\\x13\\x0f\\x15U\\x00\\x1e\\x00\\x1e\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-10T00:00:00", "modifydate": "2002-05-10T15:55:58", "lines": 30, "newlines": 30, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject: Updates to FILE563\nDate: Fri, 10 May 2002 10:31:33 -0400\nFrom: \"Thornton, Dick\" <rthornton@trigon.com>\nTo: xgob1 <sbgolob@attglobal.net>, xgob2 <sbgolob@aol.com>\n\nHi Sam,\n\nI am sending an XMIT unloaded PDS with changed and added members\nfor FILE563 (COBOL) most notably the documentation member,\n$$README.\n\nIn the process of creating the documentation member, I found a\nnumber of programs that are incorrect, incomplete, lack pieces\nand parts necessary for compilation, linkedit, or execution, and\nother matters that render them useless clutter. I have deleted\nthese members from my personal copy of FILE563. The deleted\nmembers are: CALLCBLT, CALLCNYY, CALLDB2A, CALLGRPC, CALLGTDS,\nCALLGTDT, CALLGTD3, CALLMLCK, CALLPASS, CALLRNMF, CALLSNAP,\nCALLSVDA, COBLMSGS, COBVMAIN, COB2RES, COPYERRS, COPYFILE,\nC1UEXT02, DYNAMSB1, ERRMSG, FILLBLOW, MCTFSEQ, MULTPROG,\nMULTTEST, RANDXREF, RECDEF, RZZMIX, SRTSVC99, STARTREK, TGTCOBV,\nTSTGNLDT, TWOPROG, WRTVRBL, and XFOOT.\n\nI hope to have a good $$README and trash list for the JCL file,\nFILE560 next, but it probably won't be ready until next week.\n\nHave a fun weekend,\n\nDick\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$README": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x001\\x01\\x02\\x12\\x8f\\x01\\x02\\x13\\x0f\\tX\\x01@\\x01&\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2002-05-08T00:00:00", "modifydate": "2002-05-10T09:58:31", "lines": 320, "newlines": 294, "modlines": 0, "user": "BC0THOR"}, "text": "************************************************************************\n* FILE 563 IS PRIMARILY COBOL LANGUAGE SOURCE PROGRAMS. THE FIRST      *\n* line for each program has a parenthesized, abbreviated attribute     *\n* field showing the type (text only, main program, subroutine), main   *\n* processing function (formatting, abend, listing, dynamic allocation, *\n* copy, etc.) and primary data type processed (assembler source code,  *\n* LISTING, VTOC, QSAM FILE, VSAM FILE, CATALOG DATA, ETC.). FOLLOWING  *\n* the attribute field is a short description.                          *\n************************************************************************\n*   ====> (TYPE/FUNC/DATA) <====\n\nABEND     (MAIN/TEST/    ) ABENDS WITH USER SPECIFIED ABEND (S0C7, S0CB,\n+                             CEE3, ILBO).\n+         JCL FILE560(ABEND)\nABNLTRM   (MAIN/TEST/    ) ABENDS WITH USER SPECIFIED ABEND CODE (S0C1,\n+                             S0C4, S0C7, OR S0CB)\n+         JCL FILE560(ABNLTRM)\nADDVERB   (MAIN/SAMP/    ) SAMPLE CODE SHOWING USE OF SOME COBOL VERBS.\nAFP5A     (MAIN/TEST/    ) USED TO TEST COMPILER'S USE OF THE AFP-5A\n+                             SPECIAL NAME.\nALLDYNCB  (MAIN/TEST/    ) TESTS CALLS TO THE ALLOCDYN SUBROUTINE.\n+         CALLS FILE558(ALLOCDYN, COBABEND)\nALLDYNC2  (MAIN/TEST/    ) TESTS CALLS TO THE ALLOCDYN SUBROUTINE.\n+         CALLS FILE558(ALLOCDYN, COBABEND)\nALLDYNC3  (MAIN/TEST/    ) TEST ALLOCDYN CALLS FOR SYSOUT=*\n+         CALLS FILE558(ALLOCDYN)\nALLDYN4   (MAIN/TEST/    ) TEST ALLOCDYN CALLS FOR VOLUME SERIAL RETURN\n+         CALLS FILE558(ALLOCDYN)\nBCBSEXTR  (MAIN/EXTR/QSAM) READS THE MACHINE FILE FROM THE EDGE PRODUCT\n+                             AND WRITES A FILE OF LOAD MODULE NAMES\n+                             THAT MUST BE RELINKED BEFORE THEY WILL RUN\n+                             UNDER LE/MVS. THIS LIST IS FOR ALL LOAD\n+                             MODULES CONTAINING BOTH COBOL RES AND\n+                             COBOL NORES MODULES.\n+         JCL FILE560(BCBSEXTR)\nBCBSEXT2  (MAIN/EXTR/QSAM) READS THE MACHINE FILE FROM THE EDGE PRODUCT\n+                             AND WRITES A FILE OF LOAD MODULE NAMES\n+                             THAT WERE COMPILED BY THE VS COBOL\n*                             COMPILERS AND/OR WITH THE NORES COMPILER\n+                             OPTION.\n+         CALLS FILE558(ILBOABN0)\n+         JCL FILE560(BCBSEXT2)\nBCBSEXT3  (MAIN/EXTR/QSAM) READS THE MACHINE FILE FROM THE EDGE PRODUCT\n+                             AND WRITES A FILE OF LOAD MODULE NAMES\n+                             THAT CONTAIN IP3 AND/OR PL/I CODE.\n+         CALLS FILE558(ILBOABN0)\n+         JCL FILE560(BCBSEXT3)\nBMPCOBOL  (MAIN/TEST/IMSQ) PROVIDES ACCESS TO THE IMS MESSAGE QUEUE TO\n+                             WRITE MESSAGES DIRECTLY TO TERMINALS.\nBRCHVERB  (MAIN/SAMP/    ) CODING EXAMPLES OF VARIOUS COBOL VERBS\n+                             INVOLVING BRANCHING, SUCH AS: CALL,       00\n+                             GOTO, ALTER, AND PERFORM.\nCALLABDP  (MAIN/TEST/    ) TESTS CALLS TO THE ABDUMP SUBROUTINE.\n+         CALLS FILE558(ABDUMP)\n+         JCL FILE560(CALLABDP)\nCALLABOV  (MAIN/TEST/    ) A COBOL II PROGRAM TO CALL A SUBROUTINE FROM\n+                             ABOVE THE LINE.\n+         DYNAMICALLY CALLS FILE563(GETJOBN)\n+         CALLS FILE558(WHEREAMI)\n+         JCL FILE560(CALLABOV)\nCALLALDY  (MAIN/TEST/    ) TESTS DYNAMIC ALLOCATIONS WITHOUT THE UNIT=\n+                             PARAMETER.\n+         CALLS FILE558(ALLOCDYN, COBABEND)\nCALLBLO   (MAIN/TEST/    ) A COBOL II PROGRAM TO CALL A SUBROUTINE FROM\n+                             BELOW THE LINE.\n+         DYNAMICALLY CALLS FILE558(WHEREAMI)\n+         CALLS FILE558(WHEREAMI)\nCALLCBND  (MAIN/TEST/    ) TEST CALLS TO THE COBABEND SUBROUTINE.\n+         CALLS FILE558(COBABEND)\n+         JCL FILE560(CALLCBND)\nCALLCLMN  (MAIN/TEST/    ) TESTS THE CLISTMON PROGRAM.\n+         CALLS FILE558(CLISTMON)\nCALLCPGM  (MAIN/TEST/    ) TESTS CALLS FROM A COBOL/390 PROGRAM TO A\n+                             C-LANGUAGE SUBROUTINE.\n+         CALLS FILE559(CFUNC)\n+         JCL FILE560(CALLCPGM)\nCALLCRVL  (MAIN/TEST/    ) TESTS CALLS TO THE CURRVOL SUBROUTINE.\n+         CALLS FILE558(CURRVOL)\nCALLDTIN  (MAIN/TEST/    ) TEST CALLS TO THE DATEINFO PROGRAM.\n+         CALLS FILE563(DATEINFO)\n+         JCL FILE560(CALLDTIN)\nCALLDYNA  (MAIN/TEST/    ) TEST CALLS TO DYNALLOC SUBROUTINE.\n+         CALLS FILE558(DYNALLOC, COBABEND)\nCALLDYN2  (MAIN/TEST/    ) TEST CALLS TO DYNALLOC SUBROUTINE.\n+         CALLS FILE558(DYNALLOC, COBABEND)\nCALLFILE  (MAIN/TEST/    ) TESTS CALLS TO THE VOLFILE SUBROUTINE.\n+         CALLS FILE558(VOLFILE)\n+         JCL FILE560(CALLFILE)\nCALLGDCB  (MAIN/TEST/    ) TESTS CALLS TO THE GETDCB SUBROUTINE.\n+         CALLS FILE558(GETDCB)\nCALLGDG   (MAIN/TEST/    ) TEST CALLS TO THE GETGDG SUBROUTINE.\n+         CALLS FILE558(GETGDG, COBABEND)\nCALLGDSN  (MAIN/TEST/    ) TESTS CALLS TO THE GETDCB SUBROUTINE.\n+         CALLS FILE558(GETDCB)\nCALLGTVL  (MAIN/TEST/    ) TEST CALLS TO THE GETVOLS SUBROUTINE.\n+         CALLS FILE558(GETVOLS)\nCALLGTVM  (MAIN/TEST/    ) TESTS CALLS TO THE GETVOLUM SUBROUTINE.\n+         CALLS FILE558(COBABEND, GETVOLUM)\n+         JCL FILE560(CALLGTVM, CALLGTV0)\nCALLJBIN  (MAIN/TEST/    ) TEST CALLS TO THE JOBINFO SUBROUTINE.\n+         CALLS FILE558(JOBINFO)\nCALLVERB  (MAIN/TEST/    ) CODING EXAMPLES OF VARIOUS COBOL VERBS.\n+         CALLS FILE558(GETDATE (ROUTINE-NAME))\nCALLVOLS  (MAIN/TEST/    ) TESTS CALLS TO THE DSNVOLS SUBROUTINE.\n+         CALLS FILE558(DSNVOLS)\n+         JCL FILE560(CALLVOLS)\nCALLWAIT  (MAIN/TEST/    ) TESTS CALLS TO THE WAITASEC SUBROUTINE.\n+         CALLS FILE558(WAITASEC)\nCALLWTO   (MAIN/TEST/    ) TESTS CALLS TO THE WTOPGMR SUBROUTINE.\n+         CALLS FILE558(WTOPGMR)\n+         JCL FILE560(CALLWTO)\nCALL095C  (MAIN/TEST/    ) TESTS CALLS TO THE IEFSD095 BLOCK LETTER\n+                             SUBROUTINE.\n+         CALLS FILE558(IEFSD095)\n+         JCL FILE560(CALL095C)\nCALL31BT  (MAIN/TEST/    ) TEST CALLS TO THE ASM31SUB SUBROUTINE.\nCBL2TRAC  (MAIN/TEST/    ) EXAMPLE PROGRAM TO SHOW HOW THE VS-COBOL\n+                             READY TRACE AND RESET TRACE STATEMENTS\n+                             CAN BE EMULATED IN COBOL II.\n+         CALLS FILE563(COBVSUBR, COB2SUBR)\n+         JCL FILE560(CBL2TRAC)\nCHECKTIM  (MAIN/TEST/    ) USED TO TEST DIFFERENCES BETWEEN VS COBOL AND\n+                             COBOL II TIME PARAMETER. ALSO TESTS\n+                             RUNNING ABOVE THE LINE.\nCHEKCOPY  (MAIN/TEST/    ) UTILITY SKELETON FOR CODING AND TESTING COPY\n+                             BOOKS IN COBOL.\nCHGDDNAM  (SUBR/TEST/    ) SUBROUTINE THAT RECEIVES AN FD PASSED BY A\n+                             CALLING COBOL PROGRAM AND CHANGES ITS\n+                             DDNAME.\nCHKPARMS  (MAIN/TEST/    ) A DO-NEARLY-NOTHING PROGRAM FOR TESTING PARM\n+                            OPTIONS SUCH AS RPTSTG(ON) AND RPTOPTS(ON)\n+         JCL FILE560(CHKPARMS)\nCHKRECD   (MAIN/TEST/    )  UTILITY SKELETON FOR CODING, TESTING RECORDS\nCMPRMACH  (MAIN/TEST/    ) COMPARES TWO FILES.\nCNV32BIT  (MAIN/TEST/    ) CONVERTS A CHARACTER-FORM DECIMAL NUMBER TO A\n+                              BASE-32 VALUE SO THAT IT CAN BE PRINTED,\n+                              YET FIT IN A SMALLER FIELD.\nCOBLSORT  (MAIN/TEST/    ) SAMPLE CODING FOR A COBOL INTERNAL SORT.\n+         JCL FILE560(COBLSORT)\nCOBLUTIL  (MAIN/TEST/    ) SKELETON PROGRAM FOR UTILITY WORK.\nCOBSUBD1  (SUBR/TEST/    ) TESTS VARIOUS STATIC AND DYNAMIC CALLS IN AN\n+                             ENCLAVE THAT HAS AN ASSEMBLER MAIN PROGRAM\n+                             WITH NO CALL TO ILBOSTP0 NOR TO IGZERRE.\n+         LOADED BY FILE558(ASMMAIN)\n+         DYNAMICALLY CALLS FILE563(COBSUBD2)\n+         CALLS FILE563(COBSUBS2)\nCOBSUBD2  (SUBR/TEST/    ) TESTS VARIOUS STATIC AND DYNAMIC CALLS IN AN\n+                             ENCLAVE THAT HAS AN ASSEMBLER MAIN PROGRAM\n+                             WITH NO CALL TO ILBOSTP0 NOR TO IGZERRE.\n+         LOADED BY FILE558(ASMMAIN, ASMSUBD1, AND ASMSUBS1)\n+         DYNAMICALLY CALLED BY FILE563(COBSUBS1)\nCOBSUBS1  (SUBR/TEST/    ) TESTS VARIOUS STATIC AND DYNAMIC CALLS IN AN\n+                             ENCLAVE THAT HAS AN ASSEMBLER MAIN PROGRAM\n+                             WITH NO CALL TO ILBOSTP0 NOR TO IGZERRE.\n+         DYNAMICALLY CALLS FILE563(COBSUBD2)\n+         CALLS FILE563(COBSUBS2)\nCOBSUBS2  (SUBR/TEST/    ) TESTS VARIOUS STATIC AND DYNAMIC CALLS IN AN\n+                             ENCLAVE THAT HAS AN ASSEMBLER MAIN PROGRAM\n+                             WITH NO CALL TO ILBOSTP0 NOR TO IGZERRE.\n+         CALLED BY FILE563(COBSUBD1, COBSUBS1)\nCOBVSSR   (SUBR/TEST/    ) USED AS A VS COBOL SUBROUTINE IN A RUN UNIT\n+                             CONTAINING A MIXTURE OF VS COBOL AND\n+                             COBOL II PROGRAMS.\n+         CALLED BY FILE563(COB3MAIN)\n+         CALLS FILE558(COBABEND)\nCOBVSUBR  (SUBR/TEST/    ) USED AS A VS COBOL SUBROUTINE IN A RUN UNIT\n+                             CONTAINING A MIXTURE OF VS COBOL AND\n+                             COBOL II PROGRAMS.\n+         CALLED BY FILE563(CBL2TRAC, COB2MAIN, COB3MAIN)\n+         CALLS FILE558(COBABEND)\nCOBVSUB1  (SUBR/TEST/    ) USED AS A VS COBOL SUBROUTINE IN A RUN UNIT\n+                             CONTAINING A MIXTURE OF VS COBOL AND\n+                             COBOL II PROGRAMS.\n+         CALLS FILE558(COBABEND)\nCOBVSUB2  (SUBR/TEST/    ) USED AS A VS COBOL SUBROUTINE IN A RUN UNIT\n+                             CONTAINING A MIXTURE OF VS COBOL AND\n+                             COBOL II PROGRAMS.\n+         CALLS FILE558(COBABEND)\nCOB2DSPL  (MAIN/TEST/    ) USED TO ANALYZE COBOL II'S DISPLAY CODE\n+                          GENERATION TO AID IN RECONSTRUCTING COBOL\n+                          SOURCE FOR PROGRAMS WHERE SOURCE HAS BEEN\n+                          LOST, BUT A LOAD MODULE EXISTS.\n+         JCL FILE560(COB2DSPL)\nCOB2MAIN  (MAIN/TEST/    ) USED AS A COBOL II MAINLINE PROGRAM IN\n+                              TESTING MIXED RUN UNITS CONTAINING BOTH\n+                              VS COBOL AND COBOL II COMPONENTS\n+         CALLS FILE563(COBVSUBR, COB2SUBR)\n+         JCL FILE560(COB2MAIN)\nCOB2SSR   (SUBR/TEST/    ) USED AS A COBOL II SUBROUTINE IN A RUN UNIT\n+                             CONTAINING A MIXTURE OF VS COBOL AND\n+                             COBOL II PROGRAMS.\n+         CALLED BY FILE563(COB3MAIN)\n+         CALLS FILE558(COBABEND)\nCOB2SUBR  (SUBR/TEST/    ) USED AS A COBOL II SUBROUTINE IN TESTING\n+                              MIXED RUN UNITS CONTAINING BOTH\n+                              VS COBOL AND COBOL II PROGRAMS.\n+         CALLED BY FILE563(COB2MAIN, COB3MAIN, CBL2TRAC)\n+         CALLS FILE558(COBABEND)\nCOB2SUB1  (SUBR/TEST/    ) USED AS A COBOL II SUBROUTINE IN TESTING\n+                              MIXED RUN UNITS CONTAINING BOTH\n+                              VS COBOL AND COBOL II PROGRAMS.\n+         CALLS FILE558(COBABEND)\nCOB2SUB2  (SUBR/TEST/    ) USED AS A COBOL II SUBROUTINE IN TESTING\n+                              MIXED RUN UNITS CONTAINING BOTH\n+                              VS COBOL AND COBOL II PROGRAMS.\n+         CALLS FILE558(COBABEND)\nCOB3MAIN  (MAIN/TEST/    ) USED AS A COBOL/390 MAIN PROGRAM IN TESTING\n+                              MIXED RUN UNITS CONTAINING VS COBOL,\n+                              COBOL II, AND COBOL/390 PROGRAMS.\n+         CALLS FILE563(COBVSUBR, COB2SUBR, COBVSSR, COB2SSR)\n+         JCL FILE560(COB3MAIN)\nCONTINU   (MAIN/TEST/    ) SAMPLE CODE TO SHOW LINE CONTINUATION IN\n+                              COBOL PROGRAMS.\nCOPYTEST  (MAIN/TEST/    ) SAMPLE PROGRAM USED TO TEST ACCURACY OF NEWLY\n+                              CREATED COPY BOOKS.\nCRE8VSAM  (MAIN/TEST/    ) WRITES DATA TO AN EMPTY VSAM DATASET.\n+         CALLS FILE558(COBABEND)\n+         JCL FILE560(CRE8VSAM)\nCTLBLOX2  (MAIN/TEST/    ) THIS VERSION ACCESSES THE CVT VIA A (COBOL)\n+                              SUBROUTINE CALLED READCVT, RATHER THAN\n+                              BY MOVING THE FIELD BYTE-BY-BYTE AS IS\n+                              DONE IN THE PROGRAM CTRLBLOX.\n+         CALLS FILE563(READCVT)\nCTLBLOX3  (MAIN/TEST/    ) ACCESSES THE SYSTEM CONTROL BLOCK CVT AND\n+                              ALSO ONE OF ITS OWN FD'S USING BLL\n+                              CELLS SET UP BY CALLING THE COBOL\n+                              SUBROUTINE SETUPBLL.\n+         CALLS FILE563(SETUPBLL)\nCTLBLOX4  (MAIN/TEST/    ) ACCESSES THE SYSTEM CONTROL BLOCK CVT BY\n+                              CALLING ANOTHER ENTRY POINT (READCVT)\n+                              THAT IS WITHIN THIS PROGRAM ITSELF.\n+         CALLS FILE563(READCVT)\nCTRLBLOX  (MAIN/TEST/    ) ACCESSES THE SYSTEM CONTROL BLOCK CVT BY USE\n+                              OF COBOL POINTERS WITHOUT CALLING ANY\n+                              OTHER PROGRAM OR ENTRY POINT.\nDATEINFO  (SUBR/TEST/    ) A SUBROUTINE TO OBTAIN REFORMATTED DATE\n+                              INFORMATION FROM GENLDAT2 AND PASS IT\n+                              BACK TO THE CALLER.\n+         CALLED BY FILE563(CALLDTIN)\n+         CALLS FILE563(GENLDAT2)\nDATES     (MAIN/TEST/    ) TESTS CALLS TO THE GENLDAT2 SUBROUTINE.\n+         CALLED BY FILE561(DATES)\n+         CALLED BY FILE562(DATE)\n+         CALLS FILE563(GENLDAT2)\n+         JCL FILE560(DATES)\nFLTPNT    (MAIN/TEST/    ) USED TO INVESTIGATE USE OF FLOATING POINT\n+                              NUMBERS IN COBOL.\nGENLDAT2  (SUBR/TEST/    ) GENERAL DATE CONVERSION AND REFORMATTING\n+                              SUBROUTINE.\n+         LOADED BY FILE558(ALLDSNS, CALLGND2, CALLGND3)\n+         CALLED BY FILE558(MSASMRPT, MSMCHRPT)\n+         CALLED BY FILE563(DATEINFO, DATES)\nGETJOBN   (SUBR/TEST/    ) OBTAINS THE JOB NAME FROM SYSTEM CONTROL\n+                              BLOCKS USING COBOL POINTERS AND RETURNS\n+                              IT TO THE CALLER.\n+         DYNAMICALLY CALLED BY FILE563(CALLABOV)\n+         JCL FILE560(CALLGJBN)\nGTULRECL  (SUBR/TEST/    ) THIS SUBROUTINE RETURNS THE LRECL FOR THE\n+                              LAST RECORD READ FROM A DSORG=PS DATASET\n+                              OF MOST USE FOR RECFM=U.\nPAYROLL   (MAIN/TEST/    ) EXAMPLE PROGRAM THAT ILLUSTRATES SOME COBOL\n+                              LANGUAGE CONSTRUCTS.\nPOINTER1  (MAIN/TEST/    ) EXAMPLE PROGRAM SHOWING DETAILS OF USING\n+                              COBOL POINTERS AND THE SET ... TO\n+                              ADDRESS OF ...\n+         JCL FILE560(POINTER1)\nPOINTER2  (MAIN/TEST/    ) EXAMPLE PROGRAM SHOWING DETAILS OF USING\n+                              COBOL POINTERS AND THE SET ... TO\n+                              ADDRESS OF ...\n+         JCL FILE560(POINTER2)\nPOINTER3  (MAIN/TEST/    ) EXAMPLE PROGRAM SHOWING DETAILS OF USING\n+                              COBOL POINTERS AND THE SET ... TO\n+                              ADDRESS OF ...\n+         JCL FILE560(POINTER3)\nPRTFPRAN  (MAIN/TEST/    ) PRINTS A SEQUENCE OF RANDOM NUMBERS BASED ON\n+                              INPUT FROM CONTROL STATEMENTS.\nPRTHEX    (MAIN/TEST/    ) PRITNS MEMORY IN HEXADECIMAL.\n+         JCL FILE560(PRTHEX)\nPRTINFO   (MAIN/TEST/    ) PRINTS INFORMATION FOR CERTAIN CATALOGED\n+                              DATASETS.\n+         CALLS FILE558(ALLOCDYN)\n+         JCL FILE560(PRTINFO)\nRANDMCTF  (SUBR/TEST/    ) SUBROUTINE THAT ACCESSES A VSAM DATASET.\nREADCVT   (SUBR/TEST/    ) SUBROUTINE THAT PASSES DATA BACK TO THE\n+                              CALLING PROGRAM USING POINTERS PASED BY\n+                              THE CALLER.\n+         CALLED BY FILE563(CTLBLOX2, CTLBLOX4)\nREFORMAT  (MAIN/TEST/    ) READS A DSORG=PS,RECFM=FB,LRECL=80 DATASET\n+                              AND CONCATENATES RECORDS TO FORM OUTPUT\n+                              RECORDS OF THE LENGTH SPECIFIED BY THE\n+                              USER SO THAT THE OUTPUT DATASET LRECL\n+                              CAN BE FROM 81-300.\n+         CALLS FILE558(WRITEKL)\n+         JCL FILE560(REFORMAT)\nSETUPBLL  (SUBR/TEST/    ) SUBROUTINE TO RETURN POINTERS TO SYSTEM\n+                              CONTROL BLOCKS IN THE CALLER'S BLL\n+                              CELLS SO THAT THE CALLING PROGRAM CAN\n+                              ACCESS THE CONTROL BLOCKS DIRECTLY VIA\n+                              ITS LINKAGE SECTION.\n+         CALLED BY FILE563(CTLBLOX3)\nSKELETON  (MAIN/TEST/    ) A BASIC COBOL PROGRAM STRUCTURE USEFUL IN\n+                              WRITING NEW PROGRAMS, AS IT CONTAINS A\n+                              NUMBER OF COMMONLY USED FACILITIES.\nSORTVERB  (MAIN/TEST/    ) SAMPLE CODE SHOWING AN INTERNAL SORT.\nSUBANAL   (SUBR/TEST/    ) SUBROUTINE USED IN TESTING THE ASSEMBLER\n+                              PROGRAM PULLGRPS.\n+         LOADED BY FILE558(PULLGRPS)\nTSTDYNA   (MAIN/TEST/    ) USED TO TEST THE DYNALLOC SUBROUTINE\n+         CALLS FILE558(DYNALLOC, COBABEND)\nTSTFREPL  (MAIN/TEST/    ) TESTS THE FREEPOOL SUBROUTINE.\n+         CALLS FILE558(FREEPOOL)\nTSTGNLDT  (MAIN/TEST/    ) TESTS THE GENLDATE SUBROUTINE.\n+         CALLS FILE558(GENLDATE)\nVERBCHEK  (MAIN/TEST/    ) SHOWS EXAMPLES OF VARIOUS COBOL VERBS.\nVSAMVERB  (MAIN/TEST/    ) SHOWS EXAMPLES OF COBOL VSAM PROCESSING CODE.\n+         CALLS FILE558(COBABEND)\nWRTFBA    (MAIN/TEST/    ) WRITES HEX 5A AS A CARRIAGE CONTROL BYTE IN\n+                              RECFM=FBA DATASET RECORDS.\nWRTQSAM   (MAIN/TEST/    ) TESTS USE OF THE COBOL COMPILE OPTIONS CMPR2\n+                              AND CBLQDA(OFF).\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "@FILE563": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x009\\x01\\x01\\x02_\\x01\\x02\\x10O\\x08\\x10\\x00\\n\\x00\\x02\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-01-25T00:00:00", "modifydate": "2002-04-14T08:10:39", "lines": 10, "newlines": 2, "modlines": 0, "user": "SBGOLOB"}, "text": "//***FILE 563 is from Dick Thornton, who is the author of the       *   FILE 563\n//*           DISASSEMBLER program on File 217, and his new         *   FILE 563\n//*           DISASSEMBLER program on File 234.  This is a large    *   FILE 563\n//*           collection of his COBOL code.                         *   FILE 563\n//*                                                                 *   FILE 563\n//*           emails:  (check to see which are relevant):           *   FILE 563\n//*               dickthor@hotmail.com                              *   FILE 563\n//*               cthornton@swva.net                                *   FILE 563\n//*               rthornton@trigon.com                              *   FILE 563\n//*                                                                 *   FILE 563\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ABEND": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00I\\x01\\x01\\x17\\x8f\\x01\\x02\\x00O\\x12\\x12\\x003\\x00l\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-06-27T00:00:00", "modifydate": "2002-01-04T12:12:49", "lines": 51, "newlines": 108, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    ABEND.\n000300 AUTHOR. R THORNTON'r PROGRAM\n000310 DATE-WRITTEN. MAY, 2000.\n000320 DATE-COMPILED.\n000400*REMARKS. THE ABEND PROGRAM CREATES AN ABEND USING NATIVE COBOL\n000410*         PROGRAM STATEMENTS.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'ABEND WORKING STORAGE BEGINS HERE'.\n001300 01  GENERAL-AREAS.\n001305     05  HEX-FF              PIC X VALUE X'FF'.\n001306     05  BAD-PACKED REDEFINES HEX-FF PIC S9 COMP-3.\n001307     05  ZERO-DIVISOR        PIC S9 COMP-3 VALUE +0.\n001308     05  DIVIDEND            PIC S9(5) COMP-3 VALUE +287.\n001310     05  ILBO-ABEND-CODE     PIC S9(4) COMP VALUE +654.\n001311     05  CEE3-ABEND-CODE     PIC S9(8) COMP VALUE +987.\n001312     05  CEE3-CLEANUP-CODE   PIC S9(8) COMP VALUE +0.\n001313\n001314 LINKAGE SECTION.\n001315 01  PARM-FIELD.\n001316     05  PARM-LENGTH         PIC S9(4) COMP.\n001317     05  PARM-DATA           PIC X(4).\n001320\n001700 PROCEDURE DIVISION USING PARM-FIELD.\n001710     IF PARM-DATA = 'S0C7' GO TO S0C7-ABEND.\n001800     IF PARM-DATA = 'S0CB' GO TO S0CB-ABEND.\n001801     IF PARM-DATA = 'CEE3' GO TO CEE3-ABEND.\n001802     IF PARM-DATA = 'ILBO' GO TO ILBO-ABEND.\n001810     DISPLAY 'INVALID PARM ABEND, USE S0C7, S0CB, CEE3, OR ILBO'.\n001811 ILBO-ABEND.\n001820     CALL 'ILBOABN0' USING ILBO-ABEND-CODE.\n001830\n001840 CEE3-ABEND.\n001850     CALL 'CEE3ABD' USING CEE3-ABEND-CODE, CEE3-CLEANUP-CODE.\n001860\n001900 S0C7-ABEND.\n001910     DISPLAY 'ADDING 1 TO A HEX FF'.\n002000     ADD 1 TO BAD-PACKED.\n002100     GOBACK.\n002400\n002500 S0CB-ABEND.\n002600     DISPLAY 'DIVIDING BY ZERO'.\n002601     DIVIDE ZERO-DIVISOR INTO DIVIDEND.\n002620     GOBACK.\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ABNLTRM": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00'\\x00\\x94\\x16_\\x01\\x02\\x00O\\x12\\x19\\x00b\\x00b\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-06-14T00:00:00", "modifydate": "2002-01-04T12:19:27", "lines": 98, "newlines": 98, "modlines": 0, "user": "BC0THOR"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    ABNLTRM.\n       AUTHOR. R THORNTON\n      *REMARKS. ABNORMAL TERMINATION PROGRAM. PARM FIELD SPECIFIES THE\n      *         DESIRED ABEND, S0C1, SOC4, SOC7, S0CB.\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT INPUT-FILE ASSIGN TO INPUT1.\n           SELECT PRINT-FILE ASSIGN TO PRINT1.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  INPUT-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  INPUT-RECORD.                                                      10\n         05  IN-FIELD-1            PIC XX.                                    20\n         05  IN-FIELD-2            PIC X(29).                                 30\n         05  FILLER                PIC X(49).                                 40\n\n       FD  PRINT-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  PRINT-RECORD.                                                      10\n         05  PRT-FIELD-1           PIC XX.                                    20\n         05  PRT-FIELD-2           PIC X(29).                                 30\n         05  FILLER                PIC X(49).                                 40\n\n       WORKING-STORAGE SECTION.\n       77  FILLER PIC X(36)  VALUE\n           'ABNLTRM WORKING STORAGE BEGINS HERE'.\n       01  MISCELLANEOUS-FIELDS.\n           05  PACKED-FIELD        PIC S9(5)V99 COMP-3.\n           05  SUB                 PIC S9(5) COMP-3.\n           05  EOF-SWITCH          PIC X VALUE 'N'.\n               88 END-OF-INPUT-FILE VALUE 'Y'.\n           05  NUMBER-FIELD        OCCURS 10 TIMES\n                                   PIC S9(4) COMP.\n\n       LINKAGE SECTION.\n       01  PARM-FIELD-ON-EXECUTE.\n           05  FILLER                  PIC S9(4) COMP.\n           05  ABEND-REQUEST           PIC X(4).\n\n       PROCEDURE DIVISION USING PARM-FIELD-ON-EXECUTE.\n\n       A100-EXECUTIVE-CONTROL.\n           PERFORM A100-INITIALIZATION.\n           PERFORM B100-MAINLINE-PROCESSING.\n           PERFORM Z100-END-OF-PROCESSING.\n           GOBACK.\n\n       A100-INITIALIZATION.\n           OPEN INPUT INPUT-FILE,\n                OUTPUT PRINT-FILE.\n\n       B100-MAINLINE-PROCESSING.\n           PERFORM C100-READ.\n           IF ABEND-REQUEST = 'S0C1'\n               PERFORM F100-S0C1.\n           IF ABEND-REQUEST = 'S0C4'\n               PERFORM G100-S0C4.\n           IF ABEND-REQUEST = 'S0C7'\n               PERFORM J100-S0C7.\n           IF ABEND-REQUEST = 'S0CB'\n               PERFORM K100-S0CB.\n           PERFORM W100-PRINT.\n       C100-READ.\n           READ INPUT-FILE\n               AT END MOVE 'Y' TO EOF-SWITCH.\n\n       F100-S0C1.\n           CALL 'NONESUCH' USING ABEND-REQUEST.\n\n       G100-S0C4.\n           PERFORM H100-SUB-REFER VARYING SUB FROM 1 BY 1\n               UNTIL SUB = 0.\n\n       H100-SUB-REFER.\n           MOVE NUMBER-FIELD (SUB) TO PACKED-FIELD.\n\n       J100-S0C7.\n           MOVE LOW-VALUES TO MISCELLANEOUS-FIELDS.\n           ADD 1 TO PACKED-FIELD.\n\n       K100-S0CB.\n           MOVE 1000.00 TO PACKED-FIELD.\n           MOVE 0 TO SUB.\n           DIVIDE SUB INTO PACKED-FIELD.\n\n       W100-PRINT.\n           WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n\n       Z100-END-OF-PROCESSING.\n           CLOSE INPUT-FILE, PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ADDVERB": {"ttr": 769, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00P\\x01\\x02\\x00O\\x01\\x02\\x00\\x7f\\x13'\\x00|\\x00j\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "2002-01-04T00:00:00", "modifydate": "2002-01-07T13:27:50", "lines": 124, "newlines": 106, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.    ADDVERB.                                                00\n000300 AUTHOR. R THORNTON.                                                    00\n000400*REMARKS. SHOWS EXAMPLES OF VARIOUS COBOL VERBS.                        00\n000500 ENVIRONMENT DIVISION.                                                  00\n000600 CONFIGURATION SECTION.                                                 00\n000700 INPUT-OUTPUT SECTION.                                                  00\n000800 FILE-CONTROL.                                                          00\n000900     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.                           00\n001000     SELECT OUTPUT-FILE ASSIGN TO UT-S-OUTPUT1.                         00\n001100 DATA DIVISION.                                                         00\n001200 FILE SECTION.                                                          00\n001300                                                                        00\n001400 FD INPUT-FILE                                                          00\n001500     RECORD CONTAINS 80 CHARACTERS                                      00\n001600     RECORDING MODE IS F                                                00\n001700     BLOCK CONTAINS 0 RECORDS                                           00\n001800     LABEL RECORD IS STANDARD                                           00\n001900     DATA RECORD IS INPUT-RECORD.                                       00\n002000                                                                        00\n002100 01  INPUT-RECORD.                                                      00\n002200     05  FILLER              PIC X(80).                                 00\n002300                                                                        00\n002400 FD OUTPUT-FILE                                                         00\n002500     RECORD CONTAINS 80 CHARACTERS                                      00\n002600     RECORDING MODE IS F                                                00\n002700     BLOCK CONTAINS 0 RECORDS                                           00\n002800     LABEL RECORD IS STANDARD                                           00\n002900     DATA RECORD IS INPUT-RECORD.                                       00\n003000                                                                        00\n003100 01  OUTPUT-RECORD.                                                     00\n003200     05  FILLER              PIC X(80).                                 00\n003300                                                                        00\n003400 WORKING-STORAGE SECTION.                                               00\n003500 77  FILLER PIC X(36)  VALUE                                            00\n003600     'VERBCHEK WORKING STORAGE BEGINS HERE'.                            00\n003700                                                                        00\n003800 01  MISCELLANEOUS-AREAS.                                               00\n003900     05 EOF-SWITCH               PIC X VALUE 'N'.                       00\n004000        88 END-OF-INPUT          VALUE 'Y'.                             00\n004100        88 MORE-INPUT            VALUE 'N'.                             00\n004200     05 TEXT-STRING              PIC XXX VALUE 'YES'.\n004300     05 ACCEPTED-DATE            PIC 9(6).\n004400     05 BINARY-HALFWORD          PIC S99V99 BINARY.\n004500     05 BINARY-FULLWORD          PIC S9(5)V99 BINARY.\n004600     05 BINARY-DOUBLEWORD        PIC S9(7)V99 BINARY.\n004700     05 ZONED-NUMBER             PIC S9(6)V9.\n004800     05 PACKED-NUMBER            PIC S9(6)V999 COMP-3.\n004900     05 ANSWER                   PIC S9(9)V999 COMP-3.\n005000     05 FLOATING-POINT-SHORT     COMP-1.\n005100     05 FLOATING-POINT-LONG      COMP-2.\n005200     05 INDEX-CELL               INDEX.\n005300                                                                        00\n005400 LINKAGE SECTION.\n005500 01  BIN-NUM                     PIC S9(8) COMP.\n005600 01  PACK-NUM                    PIC S9(5)V99 COMP-3.\n005700 01  ZON-NUM                     PIC S99V9(5).\n005800 01  ANS-NUM                     COMP-2.\n005900                                                                        00\n006000 PROCEDURE DIVISION.                                                    00\n006100     ACCEPT TEXT-STRING.                                                00\n006200     ACCEPT ACCEPTED-DATE FROM DATE.                                    00\n006300     COMPUTE ANSWER =                                                   00\n006400             BINARY-HALFWORD * (ZONED-NUMBER + PACKED-NUMBER).\n006500     COMPUTE ANSWER =                                                   00\n006600             (ZONED-NUMBER ** 1.2) / (5 * PACKED-NUMBER).\n006700     DIVIDE 2.35 INTO PACKED-NUMBER GIVING BINARY-FULLWORD\n006800          ROUNDED ON SIZE ERROR DISPLAY 'ERROR'.\n006900     DIVIDE BINARY-HALFWORD INTO BINARY-DOUBLEWORD.\n007000     DIVIDE PACKED-NUMBER INTO BINARY-FULLWORD GIVING ZONED-NUMBER.\n007010     MULTIPLY BINARY-HALFWORD BY PACKED-NUMBER.\n007020     MULTIPLY ZONED-NUMBER BY 2 GIVING ANSWER ROUNDED.\n007100     ENTRY 'ADDSUBR' USING BIN-NUM,\n007110                                  PACK-NUM, ZON-NUM, ANS-NUM.\n007200     ADD BINARY-HALFWORD TO BINARY-HALFWORD ROUNDED.\n007300     ADD BINARY-HALFWORD TO BINARY-FULLWORD ROUNDED.\n007400     ADD BINARY-HALFWORD TO BINARY-DOUBLEWORD ROUNDED.\n007500     ADD BINARY-HALFWORD TO ZONED-NUMBER ROUNDED.\n007600     ADD BINARY-HALFWORD TO PACKED-NUMBER ROUNDED.\n007700     ADD BINARY-HALFWORD TO FLOATING-POINT-SHORT ROUNDED.\n007800     ADD BINARY-HALFWORD TO FLOATING-POINT-LONG ROUNDED.\n007900     ADD BINARY-FULLWORD TO BINARY-HALFWORD ROUNDED.\n008000     ADD BINARY-FULLWORD TO BINARY-FULLWORD ROUNDED.\n008100     ADD BINARY-FULLWORD TO BINARY-DOUBLEWORD ROUNDED.\n008200     ADD BINARY-FULLWORD TO ZONED-NUMBER ROUNDED.\n008300     ADD BINARY-FULLWORD TO PACKED-NUMBER ROUNDED.\n008400     ADD BINARY-FULLWORD TO FLOATING-POINT-SHORT ROUNDED.\n008500     ADD BINARY-FULLWORD TO FLOATING-POINT-LONG ROUNDED.\n008600     ADD BINARY-DOUBLEWORD TO BINARY-HALFWORD ROUNDED.\n008700     ADD BINARY-DOUBLEWORD TO BINARY-FULLWORD ROUNDED.\n008800     ADD BINARY-DOUBLEWORD TO BINARY-DOUBLEWORD ROUNDED.\n008900     ADD BINARY-DOUBLEWORD TO ZONED-NUMBER ROUNDED.\n009000     ADD BINARY-DOUBLEWORD TO PACKED-NUMBER ROUNDED.\n009100     ADD BINARY-DOUBLEWORD TO FLOATING-POINT-SHORT ROUNDED.\n009200     ADD BINARY-DOUBLEWORD TO FLOATING-POINT-LONG ROUNDED.\n009300     ADD ZONED-NUMBER TO BINARY-HALFWORD ROUNDED.\n009400     ADD ZONED-NUMBER TO BINARY-FULLWORD ROUNDED.\n009500     ADD ZONED-NUMBER TO BINARY-DOUBLEWORD ROUNDED.\n009600     ADD ZONED-NUMBER TO ZONED-NUMBER ROUNDED.\n009700     ADD ZONED-NUMBER TO PACKED-NUMBER ROUNDED.\n009800     ADD ZONED-NUMBER TO FLOATING-POINT-SHORT ROUNDED.\n009900     ADD ZONED-NUMBER TO FLOATING-POINT-LONG ROUNDED.\n010000     ADD PACKED-NUMBER TO BINARY-HALFWORD ROUNDED.\n010100     ADD PACKED-NUMBER TO BINARY-FULLWORD ROUNDED.\n010200     ADD PACKED-NUMBER TO BINARY-DOUBLEWORD ROUNDED.\n010300     ADD PACKED-NUMBER TO ZONED-NUMBER ROUNDED.\n010400     ADD PACKED-NUMBER TO PACKED-NUMBER ROUNDED.\n010500     ADD PACKED-NUMBER TO FLOATING-POINT-SHORT ROUNDED.\n010600     ADD PACKED-NUMBER TO FLOATING-POINT-LONG ROUNDED.\n010700     ADD FLOATING-POINT-SHORT TO BINARY-HALFWORD ROUNDED.\n010800     ADD FLOATING-POINT-SHORT TO BINARY-FULLWORD ROUNDED.\n010900     ADD FLOATING-POINT-SHORT TO BINARY-DOUBLEWORD ROUNDED.\n011000     ADD FLOATING-POINT-SHORT TO ZONED-NUMBER ROUNDED.\n011100     ADD FLOATING-POINT-SHORT TO PACKED-NUMBER ROUNDED.\n011200     ADD FLOATING-POINT-SHORT TO FLOATING-POINT-SHORT ROUNDED.\n011300     ADD FLOATING-POINT-SHORT TO FLOATING-POINT-LONG ROUNDED.\n011400     ADD FLOATING-POINT-LONG TO BINARY-HALFWORD ROUNDED.\n011500     ADD FLOATING-POINT-LONG TO BINARY-FULLWORD ROUNDED.\n011600     ADD FLOATING-POINT-LONG TO BINARY-DOUBLEWORD ROUNDED.\n011700     ADD FLOATING-POINT-LONG TO ZONED-NUMBER ROUNDED.\n011800     ADD FLOATING-POINT-LONG TO PACKED-NUMBER ROUNDED.\n011900     ADD FLOATING-POINT-LONG TO FLOATING-POINT-SHORT ROUNDED.\n012000     ADD FLOATING-POINT-LONG TO FLOATING-POINT-LONG ROUNDED.\n012100     STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "AFP5A": {"ttr": 772, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00D\\x01\\x01\\x00\\x9f\\x01\\x02\\x00O\\x12$\\x00_\\x00_\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-09T00:00:00", "modifydate": "2002-01-04T12:24:44", "lines": 95, "newlines": 95, "modlines": 0, "user": "BC0THOR"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    AFP5A.\n       AUTHOR.        R  THORNTON.\n       DATE-WRITTEN.  JANUARY 2001.\n       DATE-COMPILED.\n      *+*********************************************************************\n      * USED TO TEST COMPILER'S USE OF THE AFP-5A SPECIAL NAME.             *\n      *+*********************************************************************\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SPECIAL-NAMES.\n           C01 IS TOP-OF-PAGE\n           AFP-5A IS DONT-ZAP.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT BILL-FILE-IN        ASSIGN TO INPUT1.\n           SELECT UDOC-BILL-FILE      ASSIGN TO PRINT1.\n       DATA DIVISION.\n       FILE SECTION.\n\n       FD  BILL-FILE-IN\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  BILL-RECORD-IN              PIC X(116).\n\n       FD  UDOC-BILL-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n\n       01  UDOC-BILL-REPORT.\n           05 CC                PIC X(1).\n           05 FILLER            PIC X(115).\n\n       WORKING-STORAGE SECTION.\n       01  FILLER                            PIC X(51) VALUE\n           '*** AFP5A WORKING STORAGE SECTION BEGINS HERE ***'.\n\n       01  WS-COUNTERS.\n           05  PAGE-COUNT                    PIC 9(02).\n           05  LINE-COUNT                    PIC 9(02).\n\n       01  WS-SWITCHES.\n           05  EOF-SW                        PIC X(01) VALUE 'N'.\n               88  EOF-ON                              VALUE 'Y'.\n\n       01  AFP-LINE-1.\n           05  AFP-A-1                       PIC X(01) VALUE SPACES.\n           05  AFP-A-2                       PIC X(02) VALUE SPACES.\n           05  AFP-A-3                       PIC X(03) VALUE SPACES.\n           05  AFP-A-4                       PIC X(03) VALUE SPACES.\n           05  AFP-A-5                       PIC X(07) VALUE SPACES.\n           05  FILLER                        PIC X(99) VALUE SPACES.\n\n       PROCEDURE DIVISION.\n           PERFORM B000-INITIALIZATION THRU B000-EXIT.\n           PERFORM C000-PROCESS-FILE THRU C000-EXIT\n                   UNTIL EOF-ON.\n           PERFORM Z6000-RTN.\n           PERFORM Z100-CLOSE-FILES THRU Z100-EXIT.\n           GOBACK.\n\n       B000-INITIALIZATION.\n           OPEN INPUT BILL-FILE-IN\n               OUTPUT UDOC-BILL-FILE.\n           MOVE X'5A'  TO AFP-A-1.\n       B000-EXIT.\n           EXIT.\n\n       B050-READ-INPUT.\n           READ BILL-FILE-IN\n             AT END\n                MOVE 'Y' TO EOF-SW.\n       B050-EXIT.\n           EXIT.\n\n       C000-PROCESS-FILE.\n           PERFORM B050-READ-INPUT THRU B050-EXIT.\n           IF EOF-SW = 'Y'\n              GO TO C000-EXIT.\n       C000-EXIT.\n           EXIT.\n\n        Z6000-RTN.\n           MOVE 'F2HMO2 ' TO AFP-A-5.\n           MOVE AFP-LINE-1 TO UDOC-BILL-REPORT.\n           WRITE UDOC-BILL-REPORT AFTER ADVANCING DONT-ZAP.\n\n       Z100-CLOSE-FILES.\n           CLOSE BILL-FILE-IN\n                 UDOC-BILL-FILE.\n       Z100-EXIT.\n           EXIT.\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALLDYNCB": {"ttr": 775, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0c\\x00\\x10\\x00\\x92\\x04?\\x01\\x02\\x00O\\x12%\\x01'\\x00\\xab\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.12", "flags": 0, "createdate": "1992-02-12T00:00:00", "modifydate": "2002-01-04T12:25:10", "lines": 295, "newlines": 171, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    ALLDYNCB.\n000300*AUTHOR. R THORNTON\n000400*REMARKS. USED TO TEST CALLS TO ALLOCDYN SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900     SELECT INPUT-FILE ASSIGN TO INPUT1.\n001000     SELECT PRINT-FILE ASSIGN TO PRINT1.\n001010     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.\n001100 DATA DIVISION.\n001200 FILE SECTION.\n001300\n001400 FD INPUT-FILE\n001500     RECORD CONTAINS 80 CHARACTERS\n001600     RECORDING MODE IS F\n001700     BLOCK CONTAINS 0 RECORDS\n001800     LABEL RECORD IS STANDARD\n001900     DATA RECORD IS INPUT-RECORD.\n002000\n002100 01  INPUT-RECORD.\n002200     05  FILLER              PIC X(80).\n002300\n002400 FD PRINT-FILE\n002500     RECORD CONTAINS 80 CHARACTERS\n002600     RECORDING MODE IS F\n002700     BLOCK CONTAINS 0 RECORDS\n002800     LABEL RECORD IS STANDARD\n002900     DATA RECORD IS INPUT-RECORD.\n003000\n003100 01  PRINT-RECORD.\n003200     05  FILLER              PIC X(80).\n003300\n003310\n003320 FD OUTPUT-FILE\n003330     RECORD CONTAINS 83 CHARACTERS\n003340     RECORDING MODE IS F\n003350     BLOCK CONTAINS 0 RECORDS\n003360     LABEL RECORD IS STANDARD\n003370     DATA RECORD IS OUTPUT-RECORD.\n003380\n003390 01  OUTPUT-RECORD.\n003391     05  FILLER              PIC X(80).\n003392\n003400 WORKING-STORAGE SECTION.\n003500 77  FILLER PIC X(36)  VALUE\n003600     'ALLDYNCB WORKING STORAGE BEGINS HERE'.\n003700\n003800 01  MISCELLANEOUS-AREAS.\n003900     05 EOF-SWITCH               PIC X VALUE 'N'.\n004000        88 END-OF-INPUT          VALUE 'Y'.\n004100        88 MORE-INPUT            VALUE 'N'.\n004200\n004300\n004400 01  ALLOCATE-DATA.\n004500     05  DDNAME                      PIC X(8).\n004600     05  DSNAME-DUMMY-SYSOUT         PIC X(44).\n004700     05  MEMBER-NAME-GENERATION      PIC X(8).\n004800     05  CURRENT-STATUS              PIC S9(4) COMP.\n004900         88  STATUS-OLD                VALUE +1.\n005000         88  STATUS-MOD                VALUE +2.\n005100         88  STATUS-NEW                VALUE +4.\n005200         88  STATUS-SHR                VALUE +8.\n005300     05  NORMAL-DISPOSITION          PIC S9(4) COMP.\n005400         88  NORM-UNCATLG              VALUE +1.\n005500         88  NORM-CATLG                VALUE +2.\n005600         88  NORM-DELETE               VALUE +4.\n005700         88  NORM-KEEP                 VALUE +8.\n005800     05  CONDITIONAL-DISPOSITION     PIC S9(4) COMP.\n005900         88  COND-UNCATLG              VALUE +1.\n006000         88  COND-CATLG                VALUE +2.\n006100         88  COND-DELETE               VALUE +4.\n006200         88  COND-KEEP                 VALUE +8.\n006300     05  UNIT-NAME                   PIC X(8).\n006400     05  UNIT-COUNT                  PIC S9(4) COMP.\n006500     05  VOLUME-SERIAL               PIC X(6)\n006600                                       OCCURS 6 TIMES.\n006700     05  LABEL-TYPE                  PIC S9(4) COMP.\n006800         88  NO-LABELS                 VALUE +1.\n006900         88  STANDARD-LABELS           VALUE +2.\n007000         88  BYPASS-LABELS             VALUE +16.\n007100     05  DATASET-SEQUENCE            PIC S9(4) COMP.\n007200     05  FREE-EQU-CLOSE-INDIC        PIC X.\n007300     05  RETENTION-PERIOD-DAYS       PIC S9(4) COMP.\n007400     05  RECORDING-MODE-SUM          PIC S9(4) COMP.\n007500         88  F-FIXED-RECORDS           VALUE +128.\n007600         88  V-VARIABLE-RECORDS        VALUE +64.\n007700         88  U-UNDEFINED-RECORDS       VALUE +192.\n007800         88  D-OR-T-ADD                VALUE +32.\n007900         88  B-BLOCKED-RECORDS-ADD     VALUE +16.\n008000         88  S-STANDARD-SPANNED-ADD    VALUE +8.\n008100         88  A-ASA-PRINT-CONTROL-ADD   VALUE +4.\n008200         88  M-MACHINE-CODE-CONTROL-ADD VALUE +2.\n008300     05  LOGICAL-RECORD-LENGTH       PIC S9(4) COMP.\n008400     05  BLOCK-LENGTH                PIC S9(4) COMP.\n008500     05  TAPE-DENSITY                PIC S9(4) COMP.\n008600         88  200-BPI                   VALUE +3.\n008700         88 556-BPI                    VALUE +67.\n008800         88 800-BPI                    VALUE +131.\n008900         88 1600-BPI                   VALUE +195.\n009000         88 6250-BPI                   VALUE +211.\n009100     05  NUMBER-BUFFERS              PIC S9(4) COMP.\n009200     05  KEY-LENGTH                  PIC S9(4) COMP.\n009300     05  DATASET-ORGANIZATION        PIC S9(4) COMP.\n009400         88 VSAM-DATASET               VALUE +8.\n009500         88 GRAPHICS-GS                VALUE +128.\n009600         88 PARTITIONED-DATASET        VALUE +512.\n009700         88 PARTITIONED-UNMOVABLE      VALUE +768.\n009800         88 DIRECT-DATASET             VALUE +8192.\n009900         88 DIRECT-UNMOVABLE           VALUE +8448.\n010000*        88 PHYSICAL-SEQUENTIAL        VALUE +16384.\n010100*        88 PHYSICAL-UNMOVABLE         VALUE +16640.\n010200     05  SPACE-TYPE                  PIC X.\n010300         88 CYLINDER-REQUEST           VALUE 'C'.\n010400         88 TRACK-REQUEST              VALUE 'T'.\n010500     05  PRIMARY-SPACE-AMOUNT        PIC S9(8) COMP.\n010600     05  SECONDARY-SPACE-AMOUNT      PIC S9(8) COMP.\n010700     05  RELEASE-SPACE-INDIC         PIC X.\n010800     05  NBR-DIRECTORY-BLOCKS        PIC S9(8) COMP.\n010900     05  EXPIRATION-DATE-CENTURY     PIC X(2).\n011000     05  EXPIRATION-DATE-YYDDD       PIC X(5).\n011100     05  AVG-BLKSIZE-FOR-SPACE       PIC S9(8) COMP.\n011200     05  SPACE-FORMAT-TYPE           PIC S9(4) COMP.\n011300         88  ALX-SPACE                 VALUE +2.\n011400         88  MXIG-SPACE                VALUE +4.\n011500         88  CONTIG-SPACE              VALUE +8.\n011600     05  SPACE-ROUNDING-INDIC        PIC X.\n011700     05  PRIVATE-VOLUME-INDIC        PIC X.\n011800     05  VOLUME-SEQUENCE-NUMBER      PIC S9(4) COMP.\n011900     05  VOLUME-COUNT                PIC S9(4) COMP.\n012000     05  DSNAME-FOR-VOL-REF          PIC X(44).\n012100     05  PARALLEL-MOUNT-INDIC        PIC X.\n012200     05  SYSOUT-PROGRAM-NAME         PIC X(8).\n012300     05  SYSOUT-FORM-NUMBER          PIC X(4).\n012400     05  SYSOUT-OUTLIM               PIC S9(8) COMP.\n012500     05  NUMBER-SYSOUT-COPIES        PIC S9(4) COMP.\n012600     05  PASSWORD-PROTECTION         PIC S9(4) COMP.\n012700         88  PASSWORD-ALL-REFERENCES   VALUE +16.\n012800         88  NO-PASSWORD-TO-READ       VALUE +48.\n012900     05  INPUT-OUTPUT-ONLY           PIC S9(4) COMP.\n013000         88  INPUT-ONLY                VALUE +64.\n013100         88  OUTPUT-ONLY               VALUE +128.\n013200     05  FCB-IMAGE-NAME              PIC X(4).\n013300     05  FCB-ALIGN-VERIFY            PIC S9(4) COMP.\n013400         88  CHECK-FCB-ALIGN           VALUE +8.\n013500         88  VERIFY-FCB                VALUE +4.\n013600     05  USE-TSO-TERMINAL-INDIC      PIC X.\n013700     05  UCS-IMAGE-NAME              PIC X(4).\n013800     05  FOLD-MODE-INDIC             PIC X.\n013900     05  CHAIN-MOUNT-VERIFY-INDIC    PIC X.\n014000     05  DCB-MODEL-DSNAME            PIC X(44).\n014100     05  DCB-DDNAME-BACKREF          PIC X(26).\n014200     05  ERROR-OPTION                PIC S9(4) COMP.\n014300         88  EROPT-EQU-T               VALUE +16.\n014400         88  EROPT-EQU-ABE             VALUE +32.\n014500         88  EROPT-EQU-SKP             VALUE +48.\n014600         88  EROPT-EQU-ACC             VALUE +128.\n014700     05  NCP-READ-WRITE-BEFORE-CHECK PIC S9(4) COMP.\n014800     05  OPTION-CODES-SUM            PIC S9(4) COMP.\n014900         88  OPTCD-EQU-R-OR-J          VALUE +1.\n015000         88  OPTCD-EQU-T               VALUE +2.\n015100         88  OPTCD-EQU-Z               VALUE +4.\n015200         88  OPTCD-EQU-A-OR-Q          VALUE +8.\n015300         88  OPTCD-EQU-F-OR-H-OR-O     VALUE +16.\n015400         88  OPTCD-EQU-C-OR-E          VALUE +32.\n015500         88  OPTCD-EQU-B-OR-U          VALUE +64.\n015600         88  OPTCD-EQU-W               VALUE +128.\n015700     05  PRINTER-SPACING              PIC S9(4) COMP.\n015800         88  NO-SPACED-PRINT            VALUE +1.\n015900         88  SINGLE-SPACED-PRINT        VALUE +9.\n016000         88  DOUBLE-SPACED-PRINT        VALUE +17.\n016100         88  TRIPLE-SPACED-PRINT        VALUE +25.\n016200     05  TRTCH-7-TRACK-TAPE           PIC S9(4) COMP.\n016300         88  NON-COMPACTION             VALUE +4.\n016400         88  COMPACTION                 VALUE +8.\n016500         88  TRTCH-EQU-C                VALUE +19.\n016600         88  TRTCH-EQU-E                VALUE +35.\n016700         88  TRTCH-EQU-ET               VALUE +43.\n016800         88  TRTCH-EQU-T                VALUE +59.\n016900     05  PASSWORD-VALUE               PIC X(32).\n017000     05  DIAGNOSTIC-TRACE-INDIC       PIC X.\n017100     05  SYSOUT-DEST-NODE-NAME        PIC X(8).\n017200     05  SYSOUT-HOLD-QUEUE-INDIC      PIC X.\n017300     05  SYSOUT-DEST-USERID           PIC X(8).\n017400     05  SYSOUT-BURSTER-STACKER       PIC S9(4) COMP.\n017500         88  BURST-EQU-YES              VALUE +2.\n017600         88  BURST-EQU-NO               VALUE +4.\n017700     05  CHARACTER-ARRANGEMENT-TABLE  PIC X(4)\n017800                                        OCCURS 4 TIMES.\n017900     05  SYSOUT-COPY-GROUP-VALUE      PIC S9(4) COMP\n018000                                        OCCURS 8 TIMES.\n018100     05  SYSOUT-FLASH-OVERLAY-NAME    PIC X(4).\n018200     05  SYSOUT-FLASH-OVERLAY-COUNT   PIC S9(4) COMP.\n018300     05  COPY-MODIFY-MODULE-NAME      PIC X(4).\n018400     05  COPY-MODULE-TRC              PIC S9(4) COMP.\n018500         88  FIRST-CHAR-ARR-TABLE       VALUE +0.\n018600         88  SECOND-CHAR-ARR-TABLE      VALUE +1.\n018700         88  THIRD-CHAR-ARR-TABLE       VALUE +2.\n018800         88  FOURTH-CHAR-ARR-TABLE      VALUE +3.\n018900     05  DEFER-MOUNT-INDIC            PIC X.\n019000     05  OUTPUT-STATEMENT-REFERENCE   PIC X(26)\n019100                                        OCCURS 8 TIMES.\n019200     05  CNTL-STATEMENT-REFERENCE     PIC X(26).\n019300     05  SMS-STORCLAS-NAME            PIC X(8).\n019400     05  SMS-MGMTCLAS-NAME            PIC X(8).\n019500     05  SMS-DATACLAS-NAME            PIC X(8).\n019600     05  SMS-RECORD-ORGANIZATION      PIC S9(4) COMP.\n019700         88  VSAM-KSDS                  VALUE +128.\n019800         88  VSAM-ESDS                  VALUE +64.\n019900         88  VSAM-RRDS                  VALUE +32.\n020000         88  VSAM-LINEAR-SPACE          VALUE +16.\n020100     05  SMS-KEY-OFFSET               PIC S9(4) COMP.\n020200     05  SMS-REFDD                    PIC X(26).\n020300     05  SMS-LIKE-DSNAME              PIC X(44).\n020400     05  SMS-AVERAGE-RECORD-UNITS     PIC S9(4) COMP.\n020500         88  IN-SINGLE-RECORDS          VALUE +128.\n020600         88  IN-THOUSAND-RECORD-UNITS   VALUE +64.\n020700         88  IN-MILLION-RECORD-UNITS    VALUE +32.\n020800     05  SMS-DSNTYPE                  PIC S9(4) COMP.\n020900         88  PDSE-LIBRARY               VALUE +128.\n021000         88  OLD-STYLE-PDS              VALUE +64.\n021100\n021200\n021300 01  ALLOCATION-RESULT.\n021400     05  ALLOCDYN-REQUEST             PIC X.\n021500         88  ALLOCATION-REQUEST         VALUE 'A'.\n021600         88  VOLSER-REQUEST             VALUE 'V'.\n021700     05  ALLOCDYN-RETURN-CODE         PIC XX.\n021800         88  SUCCESSFUL-ALLOCATION      VALUE '00'.\n021900         88  ENVIRONMENT-ERROR          VALUE '04'.\n022000         88  VALIDATION-DENIAL          VALUE '08'.\n022100         88  PARAMETER-ERROR            VALUE '12'.\n022200     05  ERROR-REASON-CODE.\n022300         10  CLASS-7-CODE             PIC X.\n022400         10  ERROR-CLASS              PIC X.\n022500             88  UNAVAILABLE-RESOURCE   VALUE '2'.\n022600             88  INVALID-PARAMETER-LIST VALUE '3'.\n022700             88  ERROR-IN-ENVIRONMENT   VALUE '4'.\n022800             88  SYSTEM-ROUTINE-ERROR   VALUE '7'.\n022900         10  SPECIFIC-ERROR-CODE      PIC XX.\n023000     05  ERROR-REASON-MESSAGE         PIC X(71).\n023100     05  INFORMATION-REASON           PIC X(4).\n023200     05  INFO-REASON-MESSAGE          PIC X(71).\n023300\n023400\n023500 PROCEDURE DIVISION.\n023600\n023700 A100-EXECUTIVE-CONTROL.\n023800     PERFORM A100-INITIALIZATION.\n023900     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT.\n024000     PERFORM Z100-END-OF-PROCESSING.\n024100     GOBACK.\n024200\n024300 A100-INITIALIZATION.\n024410      MOVE LOW-VALUES TO ALLOCATE-DATA.\n024420      MOVE 'OUTPUT1' TO DDNAME.\n024421      MOVE 'PROFIT.YZZ8100.SUMCYCLE.YEAR1909' TO\n024422           DSNAME-DUMMY-SYSOUT.\n024450      MOVE +4 TO CURRENT-STATUS.\n024460      MOVE +2 TO NORMAL-DISPOSITION.\n024470      MOVE +4 TO CONDITIONAL-DISPOSITION.\n024472      MOVE +12    TO VOLUME-COUNT.\n024480      MOVE 'CART' TO UNIT-NAME.\n024481      MOVE +2557 TO RETENTION-PERIOD-DAYS.\n024482      MOVE +8 TO TRTCH-7-TRACK-TAPE.\n024483      MOVE +144 TO RECORDING-MODE-SUM.\n024484      MOVE +83  TO LOGICAL-RECORD-LENGTH.\n024485      MOVE +32702 TO BLOCK-LENGTH.\n026000      MOVE 'A' TO ALLOCDYN-REQUEST.\n026200      CALL 'ALLOCDYN' USING ALLOCATE-DATA, ALLOCATION-RESULT.\n026300      IF SUCCESSFUL-ALLOCATION\n026400         NEXT SENTENCE\n026500      ELSE DISPLAY 'UNABLE TO ALLOCATE OUTPUT1: RETURN CODE='\n026600                   ALLOCDYN-RETURN-CODE\n026700          DISPLAY '   ERROR-REASON-CODE=' ERROR-REASON-CODE\n026800                   ': ' ERROR-REASON-MESSAGE\n026900          DISPLAY '   INFORMATION-REASON=' INFORMATION-REASON\n027000                   ': ' INFO-REASON-MESSAGE\n027100          CALL 'COBABEND'.\n027200     OPEN INPUT INPUT-FILE OUTPUT PRINT-FILE OUTPUT-FILE.\n027300\n027400 B100-MAINLINE-PROCESSING.\n027500     PERFORM C100-READ-FILE.\n027600     IF MORE-INPUT PERFORM D100-WRITE-FILE.\n027700\n027800 C100-READ-FILE.\n027900     READ INPUT-FILE AT END MOVE 'Y' TO EOF-SWITCH.\n028000\n028100 D100-WRITE-FILE.\n028200     WRITE PRINT-RECORD FROM INPUT-RECORD.\n028210     WRITE OUTPUT-RECORD FROM INPUT-RECORD.\n028300\n028400 Z100-END-OF-PROCESSING.\n028500     CLOSE INPUT-FILE PRINT-FILE OUTPUT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "ALLDYNC2": {"ttr": 781, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00C\\x00\\x92\\x04O\\x01\\x02\\x00O\\x12&\\x01&\\x01{\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1992-02-13T00:00:00", "modifydate": "2002-01-04T12:26:43", "lines": 294, "newlines": 379, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    ALLDYNC2.\n000300*AUTHOR. R THORNTON\n000400*REMARKS. USED TO TEST CALLS TO ALLOCDYN SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900     SELECT INPUT-FILE ASSIGN TO INPUT1.\n001000     SELECT PRINT-FILE ASSIGN TO PRINT1.\n001010     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.\n001100 DATA DIVISION.\n001200 FILE SECTION.\n001300\n001400 FD INPUT-FILE\n001500     RECORD CONTAINS 80 CHARACTERS\n001600     RECORDING MODE IS F\n001700     BLOCK CONTAINS 0 RECORDS\n001800     LABEL RECORD IS STANDARD\n001900     DATA RECORD IS INPUT-RECORD.\n002000\n002100 01  INPUT-RECORD.\n002200     05  FILLER              PIC X(80).\n002300\n002400 FD PRINT-FILE\n002500     RECORD CONTAINS 80 CHARACTERS\n002600     RECORDING MODE IS F\n002700     BLOCK CONTAINS 0 RECORDS\n002800     LABEL RECORD IS STANDARD\n002900     DATA RECORD IS INPUT-RECORD.\n003000\n003100 01  PRINT-RECORD.\n003200     05  FILLER              PIC X(80).\n003300\n003310\n003320 FD OUTPUT-FILE\n003330     RECORD CONTAINS 83 CHARACTERS\n003340     RECORDING MODE IS F\n003350     BLOCK CONTAINS 0 RECORDS\n003360     LABEL RECORD IS STANDARD\n003370     DATA RECORD IS OUTPUT-RECORD.\n003380\n003390 01  OUTPUT-RECORD.\n003391     05  FILLER              PIC X(83).\n003392\n003400 WORKING-STORAGE SECTION.\n003500 77  FILLER PIC X(36)  VALUE\n003600     \"ALLDYNC2 WORKING STORAGE BEGINS HERE\".\n003700\n003800 01  MISCELLANEOUS-AREAS.\n003900     05 EOF-SWITCH               PIC X VALUE \"N\".\n004000        88 END-OF-INPUT          VALUE \"Y\".\n004100        88 MORE-INPUT            VALUE \"N\".\n004200\n004300\n004400 01  ALLOCATE-DATA.\n004500     05  DDNAME                      PIC X(8).\n004600     05  DSNAME-DUMMY-SYSOUT         PIC X(44).\n004700     05  MEMBER-NAME-GENERATION      PIC X(8).\n004800     05  CURRENT-STATUS              PIC S9(4) COMP.\n004900         88  STATUS-OLD                VALUE +1.\n005000         88  STATUS-MOD                VALUE +2.\n005100         88  STATUS-NEW                VALUE +4.\n005200         88  STATUS-SHR                VALUE +8.\n005300     05  NORMAL-DISPOSITION          PIC S9(4) COMP.\n005400         88  NORM-UNCATLG              VALUE +1.\n005500         88  NORM-CATLG                VALUE +2.\n005600         88  NORM-DELETE               VALUE +4.\n005700         88  NORM-KEEP                 VALUE +8.\n005800     05  CONDITIONAL-DISPOSITION     PIC S9(4) COMP.\n005900         88  COND-UNCATLG              VALUE +1.\n006000         88  COND-CATLG                VALUE +2.\n006100         88  COND-DELETE               VALUE +4.\n006200         88  COND-KEEP                 VALUE +8.\n006300     05  UNIT-NAME                   PIC X(8).\n006400     05  UNIT-COUNT                  PIC S9(4) COMP.\n006500     05  VOLUME-SERIAL               PIC X(6)\n006600                                       OCCURS 6 TIMES.\n006700     05  LABEL-TYPE                  PIC S9(4) COMP.\n006800         88  NO-LABELS                 VALUE +1.\n006900         88  STANDARD-LABELS           VALUE +2.\n007000         88  BYPASS-LABELS             VALUE +16.\n007100     05  DATASET-SEQUENCE            PIC S9(4) COMP.\n007200     05  FREE-EQU-CLOSE-INDIC        PIC X.\n007300     05  RETENTION-PERIOD-DAYS       PIC S9(4) COMP.\n007400     05  RECORDING-MODE-SUM          PIC S9(4) COMP.\n007500         88  F-FIXED-RECORDS           VALUE +128.\n007600         88  V-VARIABLE-RECORDS        VALUE +64.\n007700         88  U-UNDEFINED-RECORDS       VALUE +192.\n007800         88  D-OR-T-ADD                VALUE +32.\n007900         88  B-BLOCKED-RECORDS-ADD     VALUE +16.\n008000         88  S-STANDARD-SPANNED-ADD    VALUE +8.\n008100         88  A-ASA-PRINT-CONTROL-ADD   VALUE +4.\n008200         88  M-MACHINE-CODE-CONTROL-ADD VALUE +2.\n008300     05  LOGICAL-RECORD-LENGTH       PIC S9(4) COMP.\n008400     05  BLOCK-LENGTH                PIC S9(4) COMP.\n008500     05  TAPE-DENSITY                PIC S9(4) COMP.\n008600         88  200-BPI                   VALUE +3.\n008700         88 556-BPI                    VALUE +67.\n008800         88 800-BPI                    VALUE +131.\n008900         88 1600-BPI                   VALUE +195.\n009000         88 6250-BPI                   VALUE +211.\n009100     05  NUMBER-BUFFERS              PIC S9(4) COMP.\n009200     05  KEY-LENGTH                  PIC S9(4) COMP.\n009300     05  DATASET-ORGANIZATION        PIC S9(4) COMP.\n009400         88 VSAM-DATASET               VALUE +8.\n009500         88 GRAPHICS-GS                VALUE +128.\n009600         88 PARTITIONED-DATASET        VALUE +512.\n009700         88 PARTITIONED-UNMOVABLE      VALUE +768.\n009800         88 DIRECT-DATASET             VALUE +8192.\n009900         88 DIRECT-UNMOVABLE           VALUE +8448.\n010000*        88 PHYSICAL-SEQUENTIAL        VALUE +16384.\n010100*        88 PHYSICAL-UNMOVABLE         VALUE +16640.\n010200     05  SPACE-TYPE                  PIC X.\n010300         88 CYLINDER-REQUEST           VALUE \"C\".\n010400         88 TRACK-REQUEST              VALUE \"T\".\n010500     05  PRIMARY-SPACE-AMOUNT        PIC S9(8) COMP.\n010600     05  SECONDARY-SPACE-AMOUNT      PIC S9(8) COMP.\n010700     05  RELEASE-SPACE-INDIC         PIC X.\n010800     05  NBR-DIRECTORY-BLOCKS        PIC S9(8) COMP.\n010900     05  EXPIRATION-DATE-CENTURY     PIC X(2).\n011000     05  EXPIRATION-DATE-YYDDD       PIC X(5).\n011100     05  AVG-BLKSIZE-FOR-SPACE       PIC S9(8) COMP.\n011200     05  SPACE-FORMAT-TYPE           PIC S9(4) COMP.\n011300         88  ALX-SPACE                 VALUE +2.\n011400         88  MXIG-SPACE                VALUE +4.\n011500         88  CONTIG-SPACE              VALUE +8.\n011600     05  SPACE-ROUNDING-INDIC        PIC X.\n011700     05  PRIVATE-VOLUME-INDIC        PIC X.\n011800     05  VOLUME-SEQUENCE-NUMBER      PIC S9(4) COMP.\n011900     05  VOLUME-COUNT                PIC S9(4) COMP.\n012000     05  DSNAME-FOR-VOL-REF          PIC X(44).\n012100     05  PARALLEL-MOUNT-INDIC        PIC X.\n012200     05  SYSOUT-PROGRAM-NAME         PIC X(8).\n012300     05  SYSOUT-FORM-NUMBER          PIC X(4).\n012400     05  SYSOUT-OUTLIM               PIC S9(8) COMP.\n012500     05  NUMBER-SYSOUT-COPIES        PIC S9(4) COMP.\n012600     05  PASSWORD-PROTECTION         PIC S9(4) COMP.\n012700         88  PASSWORD-ALL-REFERENCES   VALUE +16.\n012800         88  NO-PASSWORD-TO-READ       VALUE +48.\n012900     05  INPUT-OUTPUT-ONLY           PIC S9(4) COMP.\n013000         88  INPUT-ONLY                VALUE +64.\n013100         88  OUTPUT-ONLY               VALUE +128.\n013200     05  FCB-IMAGE-NAME              PIC X(4).\n013300     05  FCB-ALIGN-VERIFY            PIC S9(4) COMP.\n013400         88  CHECK-FCB-ALIGN           VALUE +8.\n013500         88  VERIFY-FCB                VALUE +4.\n013600     05  USE-TSO-TERMINAL-INDIC      PIC X.\n013700     05  UCS-IMAGE-NAME              PIC X(4).\n013800     05  FOLD-MODE-INDIC             PIC X.\n013900     05  CHAIN-MOUNT-VERIFY-INDIC    PIC X.\n014000     05  DCB-MODEL-DSNAME            PIC X(44).\n014100     05  DCB-DDNAME-BACKREF          PIC X(26).\n014200     05  ERROR-OPTION                PIC S9(4) COMP.\n014300         88  EROPT-EQU-T               VALUE +16.\n014400         88  EROPT-EQU-ABE             VALUE +32.\n014500         88  EROPT-EQU-SKP             VALUE +48.\n014600         88  EROPT-EQU-ACC             VALUE +128.\n014700     05  NCP-READ-WRITE-BEFORE-CHECK PIC S9(4) COMP.\n014800     05  OPTION-CODES-SUM            PIC S9(4) COMP.\n014900         88  OPTCD-EQU-R-OR-J          VALUE +1.\n015000         88  OPTCD-EQU-T               VALUE +2.\n015100         88  OPTCD-EQU-Z               VALUE +4.\n015200         88  OPTCD-EQU-A-OR-Q          VALUE +8.\n015300         88  OPTCD-EQU-F-OR-H-OR-O     VALUE +16.\n015400         88  OPTCD-EQU-C-OR-E          VALUE +32.\n015500         88  OPTCD-EQU-B-OR-U          VALUE +64.\n015600         88  OPTCD-EQU-W               VALUE +128.\n015700     05  PRINTER-SPACING              PIC S9(4) COMP.\n015800         88  NO-SPACED-PRINT            VALUE +1.\n015900         88  SINGLE-SPACED-PRINT        VALUE +9.\n016000         88  DOUBLE-SPACED-PRINT        VALUE +17.\n016100         88  TRIPLE-SPACED-PRINT        VALUE +25.\n016200     05  TRTCH-7-TRACK-TAPE           PIC S9(4) COMP.\n016300         88  NON-COMPACTION             VALUE +4.\n016400         88  COMPACTION                 VALUE +8.\n016500         88  TRTCH-EQU-C                VALUE +19.\n016600         88  TRTCH-EQU-E                VALUE +35.\n016700         88  TRTCH-EQU-ET               VALUE +43.\n016800         88  TRTCH-EQU-T                VALUE +59.\n016900     05  PASSWORD-VALUE               PIC X(32).\n017000     05  DIAGNOSTIC-TRACE-INDIC       PIC X.\n017100     05  SYSOUT-DEST-NODE-NAME        PIC X(8).\n017200     05  SYSOUT-HOLD-QUEUE-INDIC      PIC X.\n017300     05  SYSOUT-DEST-USERID           PIC X(8).\n017400     05  SYSOUT-BURSTER-STACKER       PIC S9(4) COMP.\n017500         88  BURST-EQU-YES              VALUE +2.\n017600         88  BURST-EQU-NO               VALUE +4.\n017700     05  CHARACTER-ARRANGEMENT-TABLE  PIC X(4)\n017800                                        OCCURS 4 TIMES.\n017900     05  SYSOUT-COPY-GROUP-VALUE      PIC S9(4) COMP\n018000                                        OCCURS 8 TIMES.\n018100     05  SYSOUT-FLASH-OVERLAY-NAME    PIC X(4).\n018200     05  SYSOUT-FLASH-OVERLAY-COUNT   PIC S9(4) COMP.\n018300     05  COPY-MODIFY-MODULE-NAME      PIC X(4).\n018400     05  COPY-MODULE-TRC              PIC S9(4) COMP.\n018500         88  FIRST-CHAR-ARR-TABLE       VALUE +0.\n018600         88  SECOND-CHAR-ARR-TABLE      VALUE +1.\n018700         88  THIRD-CHAR-ARR-TABLE       VALUE +2.\n018800         88  FOURTH-CHAR-ARR-TABLE      VALUE +3.\n018900     05  DEFER-MOUNT-INDIC            PIC X.\n019000     05  OUTPUT-STATEMENT-REFERENCE   PIC X(26)\n019100                                        OCCURS 8 TIMES.\n019200     05  CNTL-STATEMENT-REFERENCE     PIC X(26).\n019300     05  SMS-STORCLAS-NAME            PIC X(8).\n019400     05  SMS-MGMTCLAS-NAME            PIC X(8).\n019500     05  SMS-DATACLAS-NAME            PIC X(8).\n019600     05  SMS-RECORD-ORGANIZATION      PIC S9(4) COMP.\n019700         88  VSAM-KSDS                  VALUE +128.\n019800         88  VSAM-ESDS                  VALUE +64.\n019900         88  VSAM-RRDS                  VALUE +32.\n020000         88  VSAM-LINEAR-SPACE          VALUE +16.\n020100     05  SMS-KEY-OFFSET               PIC S9(4) COMP.\n020200     05  SMS-REFDD                    PIC X(26).\n020300     05  SMS-LIKE-DSNAME              PIC X(44).\n020400     05  SMS-AVERAGE-RECORD-UNITS     PIC S9(4) COMP.\n020500         88  IN-SINGLE-RECORDS          VALUE +128.\n020600         88  IN-THOUSAND-RECORD-UNITS   VALUE +64.\n020700         88  IN-MILLION-RECORD-UNITS    VALUE +32.\n020800     05  SMS-DSNTYPE                  PIC S9(4) COMP.\n020900         88  PDSE-LIBRARY               VALUE +128.\n021000         88  OLD-STYLE-PDS              VALUE +64.\n021100\n021200\n021300 01  ALLOCATION-RESULT.\n021400     05  ALLOCDYN-REQUEST             PIC X.\n021500         88  ALLOCATION-REQUEST         VALUE \"A\".\n021600         88  VOLSER-REQUEST             VALUE \"V\".\n021700     05  ALLOCDYN-RETURN-CODE         PIC XX.\n021800         88  SUCCESSFUL-ALLOCATION      VALUE \"00\".\n021900         88  ENVIRONMENT-ERROR          VALUE \"04\".\n022000         88  VALIDATION-DENIAL          VALUE \"08\".\n022100         88  PARAMETER-ERROR            VALUE \"12\".\n022200     05  ERROR-REASON-CODE.\n022300         10  CLASS-7-CODE             PIC X.\n022400         10  ERROR-CLASS              PIC X.\n022500             88  UNAVAILABLE-RESOURCE   VALUE \"2\".\n022600             88  INVALID-PARAMETER-LIST VALUE \"3\".\n022700             88  ERROR-IN-ENVIRONMENT   VALUE \"4\".\n022800             88  SYSTEM-ROUTINE-ERROR   VALUE \"7\".\n022900         10  SPECIFIC-ERROR-CODE      PIC XX.\n023000     05  ERROR-REASON-MESSAGE         PIC X(71).\n023100     05  INFORMATION-REASON           PIC X(4).\n023200     05  INFO-REASON-MESSAGE          PIC X(71).\n023300\n023400\n023500 PROCEDURE DIVISION.\n023600\n023700 A100-EXECUTIVE-CONTROL.\n023800     PERFORM A100-INITIALIZATION.\n023900     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT.\n024000     PERFORM Z100-END-OF-PROCESSING.\n024100     GOBACK.\n024200\n024300 A100-INITIALIZATION.\n024400     MOVE LOW-VALUES TO ALLOCATE-DATA.\n024500     MOVE \"OUTPUT1\" TO DDNAME.\n024600     MOVE \"BC0THOR.YZZ8100.SUMCYCLE.YEAR1996\" TO\n024700           DSNAME-DUMMY-SYSOUT.\n024800     MOVE +4 TO CURRENT-STATUS.\n024900     MOVE +8 TO TRTCH-7-TRACK-TAPE.\n025000     MOVE +2 TO NORMAL-DISPOSITION.\n025100     MOVE +4 TO CONDITIONAL-DISPOSITION.\n025200     MOVE \"CART\" TO UNIT-NAME.\n025300     MOVE +2557 TO RETENTION-PERIOD-DAYS.\n025400     MOVE +144 TO RECORDING-MODE-SUM.\n025500     MOVE +83 TO LOGICAL-RECORD-LENGTH.\n025600     MOVE +32702 TO BLOCK-LENGTH.\n026000     MOVE \"A\" TO ALLOCDYN-REQUEST.\n026200     CALL \"ALLOCDYN\" USING ALLOCATE-DATA, ALLOCATION-RESULT.\n026300     IF SUCCESSFUL-ALLOCATION\n026400         NEXT SENTENCE\n026500     ELSE DISPLAY \"UNABLE TO ALLOCATE OUTPUT1: RETURN CODE=\"\n026600                   ALLOCDYN-RETURN-CODE\n026700          DISPLAY \"   ERROR-REASON-CODE=\" ERROR-REASON-CODE\n026800                   \": \" ERROR-REASON-MESSAGE\n026900          DISPLAY \"   INFORMATION-REASON=\" INFORMATION-REASON\n027000                   \": \" INFO-REASON-MESSAGE\n027100          CALL \"COBABEND\".\n027200     OPEN INPUT INPUT-FILE OUTPUT PRINT-FILE OUTPUT-FILE.\n027300\n027400 B100-MAINLINE-PROCESSING.\n027500     PERFORM C100-READ-FILE.\n027600     IF MORE-INPUT PERFORM D100-WRITE-FILE.\n027700\n027800 C100-READ-FILE.\n027900     READ INPUT-FILE AT END MOVE \"Y\" TO EOF-SWITCH.\n028000\n028100 D100-WRITE-FILE.\n028200     WRITE PRINT-RECORD FROM INPUT-RECORD.\n028210     WRITE OUTPUT-RECORD FROM INPUT-RECORD.\n028300\n028400 Z100-END-OF-PROCESSING.\n028500     CLOSE INPUT-FILE PRINT-FILE OUTPUT-FILE.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ALLDYNC3": {"ttr": 1030, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x05\\x00\\x08\\x00\\x95\\x10\\x1f\\x01\\x02\\x00O\\x12'\\x01\\x05\\x01{\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.05", "flags": 0, "createdate": "1995-04-11T00:00:00", "modifydate": "2002-01-04T12:27:08", "lines": 261, "newlines": 379, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    ALLDYNC3.\n000300*AUTHOR. R THORNTON\n000400*REMARKS. USED TO TEST CALLS TO ALLOCDYN SUBROUTINE FOR SYSOUT=*\n000600 ENVIRONMENT DIVISION.\n000700 CONFIGURATION SECTION.\n000800 INPUT-OUTPUT SECTION.\n000900 FILE-CONTROL.\n001000     SELECT INPUT-FILE ASSIGN TO INPUT1.\n001100     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400\n001500 FD INPUT-FILE\n001600     RECORD CONTAINS 80 CHARACTERS\n001700     RECORDING MODE IS F\n001800     BLOCK CONTAINS 0 RECORDS\n001900     LABEL RECORD IS STANDARD\n002000     DATA RECORD IS INPUT-RECORD.\n002100\n002200 01  INPUT-RECORD.\n002300     05  FILLER              PIC X(80).\n002400\n002500 FD OUTPUT-FILE\n002600     RECORD CONTAINS 80 CHARACTERS\n002700     RECORDING MODE IS F\n002800     BLOCK CONTAINS 0 RECORDS\n002900     LABEL RECORD IS STANDARD\n003000     DATA RECORD IS OUTPUT-RECORD.\n003100\n003200 01  OUTPUT-RECORD.\n003300     05  FILLER              PIC X(80).\n003400\n003500 WORKING-STORAGE SECTION.\n003600 77  FILLER PIC X(36)  VALUE\n003700     \"ALLDYNC3 WORKING STORAGE BEGINS HERE\".\n003800\n003900 01  MISCELLANEOUS-AREAS.\n004000     05 EOF-SWITCH               PIC X VALUE \"N\".\n004100        88 END-OF-INPUT          VALUE \"Y\".\n004200        88 MORE-INPUT            VALUE \"N\".\n004300\n004400\n004500 01  ALLOCATE-DATA.\n004600     05  DDNAME                      PIC X(8).\n004700     05  DSNAME-DUMMY-SYSOUT         PIC X(44).\n004800     05  MEMBER-NAME-GENERATION      PIC X(8).\n004900     05  CURRENT-STATUS              PIC S9(4) COMP.\n005000         88  STATUS-OLD                VALUE +1.\n005100         88  STATUS-MOD                VALUE +2.\n005200         88  STATUS-NEW                VALUE +4.\n005300         88  STATUS-SHR                VALUE +8.\n005400     05  NORMAL-DISPOSITION          PIC S9(4) COMP.\n005500         88  NORM-UNCATLG              VALUE +1.\n005600         88  NORM-CATLG                VALUE +2.\n005700         88  NORM-DELETE               VALUE +4.\n005800         88  NORM-KEEP                 VALUE +8.\n005900     05  CONDITIONAL-DISPOSITION     PIC S9(4) COMP.\n006000         88  COND-UNCATLG              VALUE +1.\n006100         88  COND-CATLG                VALUE +2.\n006200         88  COND-DELETE               VALUE +4.\n006300         88  COND-KEEP                 VALUE +8.\n006410     05  UNIT-NAME                   PIC X(8).\n006500     05  UNIT-COUNT                  PIC S9(4) COMP.\n006600     05  VOLUME-SERIAL               PIC X(6)\n006700                                       OCCURS 6 TIMES.\n006800     05  LABEL-TYPE                  PIC S9(4) COMP.\n006900         88  NO-LABELS                 VALUE +1.\n007000         88  STANDARD-LABELS           VALUE +2.\n007100         88  BYPASS-LABELS             VALUE +16.\n007200     05  DATASET-SEQUENCE            PIC S9(4) COMP.\n007300     05  FREE-EQU-CLOSE-INDIC        PIC X.\n007400     05  RETENTION-PERIOD-DAYS       PIC S9(4) COMP.\n007510     05  RECORDING-MODE-SUM          PIC S9(4) COMP.\n007600         88  F-FIXED-RECORDS           VALUE +128.\n007700         88  V-VARIABLE-RECORDS        VALUE +64.\n007800         88  U-UNDEFINED-RECORDS       VALUE +192.\n007900         88  D-OR-T-ADD                VALUE +32.\n008000         88  B-BLOCKED-RECORDS-ADD     VALUE +16.\n008100         88  S-STANDARD-SPANNED-ADD    VALUE +8.\n008200         88  A-ASA-PRINT-CONTROL-ADD   VALUE +4.\n008300         88  M-MACHINE-CODE-CONTROL-ADD VALUE +2.\n008510     05  BLOCK-LENGTH                PIC S9(4) COMP.\n008600     05  TAPE-DENSITY                PIC S9(4) COMP.\n008700         88  200-BPI                   VALUE +3.\n008800         88 556-BPI                    VALUE +67.\n008900         88 800-BPI                    VALUE +131.\n009000         88 1600-BPI                   VALUE +195.\n009100         88 6250-BPI                   VALUE +211.\n009200     05  NUMBER-BUFFERS              PIC S9(4) COMP.\n009300     05  KEY-LENGTH                  PIC S9(4) COMP.\n009400     05  DATASET-ORGANIZATION        PIC S9(4) COMP.\n009500         88 VSAM-DATASET               VALUE +8.\n009600         88 GRAPHICS-GS                VALUE +128.\n009700         88 PARTITIONED-DATASET        VALUE +512.\n009800         88 PARTITIONED-UNMOVABLE      VALUE +768.\n009900         88 DIRECT-DATASET             VALUE +8192.\n010000         88 DIRECT-UNMOVABLE           VALUE +8448.\n010100     05  LOGICAL-RECORD-LENGTH       PIC S9(4) COMP.\n010510     05  SPACE-TYPE                  PIC X.\n010520         88 CYLINDER-REQUEST           VALUE \"C\".\n010530         88 TRACK-REQUEST              VALUE \"T\".\n010710     05  PRIMARY-SPACE-AMOUNT        PIC S9(8) COMP.\n010720     05  SECONDARY-SPACE-AMOUNT      PIC S9(8) COMP.\n010800     05  RELEASE-SPACE-INDIC         PIC X.\n010900     05  NBR-DIRECTORY-BLOCKS        PIC S9(8) COMP.\n011000     05  EXPIRATION-DATE-CENTURY     PIC X(2).\n011100     05  EXPIRATION-DATE-YYDDD       PIC X(5).\n011200     05  AVG-BLKSIZE-FOR-SPACE       PIC S9(8) COMP.\n011300     05  SPACE-FORMAT-TYPE           PIC S9(4) COMP.\n011400         88  ALX-SPACE                 VALUE +2.\n011500         88  MXIG-SPACE                VALUE +4.\n011600         88  CONTIG-SPACE              VALUE +8.\n011700     05  SPACE-ROUNDING-INDIC        PIC X.\n011800     05  PRIVATE-VOLUME-INDIC        PIC X.\n011900     05  VOLUME-SEQUENCE-NUMBER      PIC S9(4) COMP.\n012000     05  VOLUME-COUNT                PIC S9(4) COMP.\n012100     05  DSNAME-FOR-VOL-REF          PIC X(44).\n012200     05  PARALLEL-MOUNT-INDIC        PIC X.\n012300     05  SYSOUT-PROGRAM-NAME         PIC X(8).\n012400     05  SYSOUT-FORM-NUMBER          PIC X(4).\n012500     05  SYSOUT-OUTLIM               PIC S9(8) COMP.\n012600     05  NUMBER-SYSOUT-COPIES        PIC S9(4) COMP.\n012700     05  PASSWORD-PROTECTION         PIC S9(4) COMP.\n012800         88  PASSWORD-ALL-REFERENCES   VALUE +16.\n012900         88  NO-PASSWORD-TO-READ       VALUE +48.\n013000     05  INPUT-OUTPUT-ONLY           PIC S9(4) COMP.\n013100         88  INPUT-ONLY                VALUE +64.\n013200         88  OUTPUT-ONLY               VALUE +128.\n013300     05  FCB-IMAGE-NAME              PIC X(4).\n013400     05  FCB-ALIGN-VERIFY            PIC S9(4) COMP.\n013500         88  CHECK-FCB-ALIGN           VALUE +8.\n013600         88  VERIFY-FCB                VALUE +4.\n013700     05  USE-TSO-TERMINAL-INDIC      PIC X.\n013800     05  UCS-IMAGE-NAME              PIC X(4).\n013900     05  FOLD-MODE-INDIC             PIC X.\n014000     05  CHAIN-MOUNT-VERIFY-INDIC    PIC X.\n014100     05  DCB-MODEL-DSNAME            PIC X(44).\n014200     05  DCB-DDNAME-BACKREF          PIC X(26).\n014300     05  ERROR-OPTION                PIC S9(4) COMP.\n014400         88  EROPT-EQU-T               VALUE +16.\n014500         88  EROPT-EQU-ABE             VALUE +32.\n014600         88  EROPT-EQU-SKP             VALUE +48.\n014700         88  EROPT-EQU-ACC             VALUE +128.\n014800     05  NCP-READ-WRITE-BEFORE-CHECK PIC S9(4) COMP.\n014900     05  OPTION-CODES-SUM            PIC S9(4) COMP.\n015000         88  OPTCD-EQU-R-OR-J          VALUE +1.\n015100         88  OPTCD-EQU-T               VALUE +2.\n015200         88  OPTCD-EQU-Z               VALUE +4.\n015300         88  OPTCD-EQU-A-OR-Q          VALUE +8.\n015400         88  OPTCD-EQU-F-OR-H-OR-O     VALUE +16.\n015500         88  OPTCD-EQU-C-OR-E          VALUE +32.\n015600         88  OPTCD-EQU-B-OR-U          VALUE +64.\n015700         88  OPTCD-EQU-W               VALUE +128.\n015800     05  PRINTER-SPACING              PIC S9(4) COMP.\n015900         88  NO-SPACED-PRINT            VALUE +1.\n016000         88  SINGLE-SPACED-PRINT        VALUE +9.\n016100         88  DOUBLE-SPACED-PRINT        VALUE +17.\n016200         88  TRIPLE-SPACED-PRINT        VALUE +25.\n016300     05  TRTCH-7-TRACK-TAPE           PIC S9(4) COMP.\n016400         88  NON-COMPACTION             VALUE +4.\n016500         88  COMPACTION                 VALUE +8.\n016600         88  TRTCH-EQU-C                VALUE +19.\n016700         88  TRTCH-EQU-E                VALUE +35.\n016800         88  TRTCH-EQU-ET               VALUE +43.\n016900         88  TRTCH-EQU-T                VALUE +59.\n017000     05  PASSWORD-VALUE               PIC X(32).\n017100     05  DIAGNOSTIC-TRACE-INDIC       PIC X.\n017200     05  SYSOUT-DEST-NODE-NAME        PIC X(8).\n017300     05  SYSOUT-HOLD-QUEUE-INDIC      PIC X.\n017400     05  SYSOUT-DEST-USERID           PIC X(8).\n017500     05  SYSOUT-BURSTER-STACKER       PIC S9(4) COMP.\n017600         88  BURST-EQU-YES              VALUE +2.\n017700         88  BURST-EQU-NO               VALUE +4.\n017800     05  CHARACTER-ARRANGEMENT-TABLE  PIC X(4)\n017900                                        OCCURS 4 TIMES.\n018000     05  SYSOUT-COPY-GROUP-VALUE      PIC S9(4) COMP\n018100                                        OCCURS 8 TIMES.\n018200     05  SYSOUT-FLASH-OVERLAY-NAME    PIC X(4).\n018300     05  SYSOUT-FLASH-OVERLAY-COUNT   PIC S9(4) COMP.\n018400     05  COPY-MODIFY-MODULE-NAME      PIC X(4).\n018500     05  COPY-MODULE-TRC              PIC S9(4) COMP.\n018600         88  FIRST-CHAR-ARR-TABLE       VALUE +0.\n018700         88  SECOND-CHAR-ARR-TABLE      VALUE +1.\n018800         88  THIRD-CHAR-ARR-TABLE       VALUE +2.\n018900         88  FOURTH-CHAR-ARR-TABLE      VALUE +3.\n019000     05  DEFER-MOUNT-INDIC            PIC X.\n019100     05  OUTPUT-STATEMENT-REFERENCE   PIC X(26)\n019200                                        OCCURS 8 TIMES.\n019300     05  CNTL-STATEMENT-REFERENCE     PIC X(26).\n019400     05  SMS-STORCLAS-NAME            PIC X(8).\n019500     05  SMS-MGMTCLAS-NAME            PIC X(8).\n019600     05  SMS-DATACLAS-NAME            PIC X(8).\n019700     05  SMS-RECORD-ORGANIZATION      PIC S9(4) COMP.\n019800         88  VSAM-KSDS                  VALUE +128.\n019900         88  VSAM-ESDS                  VALUE +64.\n020000         88  VSAM-RRDS                  VALUE +32.\n020100         88  VSAM-LINEAR-SPACE          VALUE +16.\n020200     05  SMS-KEY-OFFSET               PIC S9(4) COMP.\n020300     05  SMS-REFDD                    PIC X(26).\n020400     05  SMS-LIKE-DSNAME              PIC X(44).\n020500     05  SMS-AVERAGE-RECORD-UNITS     PIC S9(4) COMP.\n020600         88  IN-SINGLE-RECORDS          VALUE +128.\n020700         88  IN-THOUSAND-RECORD-UNITS   VALUE +64.\n020800         88  IN-MILLION-RECORD-UNITS    VALUE +32.\n020900     05  SMS-DSNTYPE                  PIC S9(4) COMP.\n021000         88  PDSE-LIBRARY               VALUE +128.\n021100         88  OLD-STYLE-PDS              VALUE +64.\n021200\n021300\n021400 01  ALLOCATION-RESULT.\n021500     05  ALLOCDYN-REQUEST             PIC X.\n021600         88  ALLOCATION-REQUEST         VALUE \"A\".\n021700         88  VOLSER-REQUEST             VALUE \"V\".\n021800     05  ALLOCDYN-RETURN-CODE         PIC XX.\n021900         88  SUCCESSFUL-ALLOCATION      VALUE \"00\".\n022000         88  ENVIRONMENT-ERROR          VALUE \"04\".\n022100         88  VALIDATION-DENIAL          VALUE \"08\".\n022200         88  PARAMETER-ERROR            VALUE \"12\".\n022300     05  ERROR-REASON-CODE.\n022400         10  CLASS-7-CODE             PIC X.\n022500         10  ERROR-CLASS              PIC X.\n022600             88  UNAVAILABLE-RESOURCE   VALUE \"2\".\n022700             88  INVALID-PARAMETER-LIST VALUE \"3\".\n022800             88  ERROR-IN-ENVIRONMENT   VALUE \"4\".\n022900             88  SYSTEM-ROUTINE-ERROR   VALUE \"7\".\n023000         10  SPECIFIC-ERROR-CODE      PIC XX.\n023100     05  ERROR-REASON-MESSAGE         PIC X(71).\n023200     05  INFORMATION-REASON           PIC X(4).\n023300     05  INFO-REASON-MESSAGE          PIC X(71).\n023400\n023500\n023600 PROCEDURE DIVISION.\n023700\n023800 A100-EXECUTIVE-CONTROL.\n023900     PERFORM A100-INITIALIZATION.\n024000     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT.\n024100     PERFORM Z100-END-OF-PROCESSING.\n024200     GOBACK.\n024300\n024400 A100-INITIALIZATION.\n024500     MOVE LOW-VALUES TO ALLOCATE-DATA.\n024501     MOVE \"OUTPUT1\" TO DDNAME.\n024502     MOVE \"SYSOUT=*\" TO DSNAME-DUMMY-SYSOUT.\n025000     MOVE \"A\" TO ALLOCDYN-REQUEST.\n036600     OPEN INPUT INPUT-FILE OUTPUT OUTPUT-FILE.\n036700\n036800 B100-MAINLINE-PROCESSING.\n036900     PERFORM C100-READ-FILE.\n037000     IF MORE-INPUT PERFORM D100-WRITE-FILE.\n037100\n037200 C100-READ-FILE.\n037300     READ INPUT-FILE AT END MOVE \"Y\" TO EOF-SWITCH.\n037310     MOVE INPUT-RECORD TO OUTPUT-RECORD.\n037400\n037500 D100-WRITE-FILE.\n037510     DISPLAY \"OUTREC= \" OUTPUT-RECORD.\n037600     WRITE OUTPUT-RECORD.\n037700\n037800 Z100-END-OF-PROCESSING.\n037900     CLOSE INPUT-FILE OUTPUT-FILE.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ALLDYN4": {"ttr": 1035, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x01\\x000\\x00\\x96\\x07?\\x01\\x02\\x00O\\x12'\\x00\\xf9\\x00\\xf9\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.01", "flags": 0, "createdate": "1996-03-13T00:00:00", "modifydate": "2002-01-04T12:27:30", "lines": 249, "newlines": 249, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLALDY.\n000300*AUTHOR. R THORNTON\n000400*REMARKS. USED TO TEST ALLOCDYN CALLS FOR VOLUME SERIAL FEEDBACK\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n003393 FILE-CONTROL.\n003394     SELECT INPUT-FILE ASSIGN TO INPUT1.\n003397 DATA DIVISION.\n003398 FILE SECTION.\n003399\n003400 FD INPUT-FILE\n003401     RECORD CONTAINS 80 CHARACTERS\n003402     RECORDING MODE IS F\n003403     BLOCK CONTAINS 0 RECORDS\n003404     LABEL RECORD IS STANDARD\n003405     DATA RECORD IS INPUT-RECORD.\n003406\n003407 01  INPUT-RECORD.\n003408     05  FILLER              PIC X(80).\n003409\n003410 WORKING-STORAGE SECTION.\n003500 77  FILLER PIC X(36)  VALUE\n003600     \"CALLALDY WORKING STORAGE BEGINS HERE\".\n004300\n004400 01  ALLOCATE-DATA.\n004500     05  DDNAME                      PIC X(8).\n004600     05  DSNAME-DUMMY-SYSOUT         PIC X(44).\n004700     05  MEMBER-NAME-GENERATION      PIC X(8).\n004800     05  CURRENT-STATUS              PIC S9(4) COMP.\n004900         88  STATUS-OLD                VALUE +1.\n005000         88  STATUS-MOD                VALUE +2.\n005100         88  STATUS-NEW                VALUE +4.\n005200         88  STATUS-SHR                VALUE +8.\n005300     05  NORMAL-DISPOSITION          PIC S9(4) COMP.\n005400         88  NORM-UNCATLG              VALUE +1.\n005500         88  NORM-CATLG                VALUE +2.\n005600         88  NORM-DELETE               VALUE +4.\n005700         88  NORM-KEEP                 VALUE +8.\n005800     05  CONDITIONAL-DISPOSITION     PIC S9(4) COMP.\n005900         88  COND-UNCATLG              VALUE +1.\n006000         88  COND-CATLG                VALUE +2.\n006100         88  COND-DELETE               VALUE +4.\n006200         88  COND-KEEP                 VALUE +8.\n006300     05  UNIT-NAME                   PIC X(8).\n006400     05  UNIT-COUNT                  PIC S9(4) COMP.\n006500     05  VOLUME-SERIAL               PIC X(6)\n006600                                       OCCURS 6 TIMES.\n006700     05  LABEL-TYPE                  PIC S9(4) COMP.\n006800         88  NO-LABELS                 VALUE +1.\n006900         88  STANDARD-LABELS           VALUE +2.\n007000         88  BYPASS-LABELS             VALUE +16.\n007100     05  DATASET-SEQUENCE            PIC S9(4) COMP.\n007200     05  FREE-EQU-CLOSE-INDIC        PIC X.\n007300     05  RETENTION-PERIOD-DAYS       PIC S9(4) COMP.\n007400     05  RECORDING-MODE-SUM          PIC S9(4) COMP.\n007500         88  F-FIXED-RECORDS           VALUE +128.\n007600         88  V-VARIABLE-RECORDS        VALUE +64.\n007700         88  U-UNDEFINED-RECORDS       VALUE +192.\n007800         88  D-OR-T-ADD                VALUE +32.\n007900         88  B-BLOCKED-RECORDS-ADD     VALUE +16.\n008000         88  S-STANDARD-SPANNED-ADD    VALUE +8.\n008100         88  A-ASA-PRINT-CONTROL-ADD   VALUE +4.\n008200         88  M-MACHINE-CODE-CONTROL-ADD VALUE +2.\n008300     05  LOGICAL-RECORD-LENGTH       PIC S9(4) COMP.\n008400     05  BLOCK-LENGTH                PIC S9(4) COMP.\n008500     05  TAPE-DENSITY                PIC S9(4) COMP.\n008600         88  200-BPI                   VALUE +3.\n008700         88 556-BPI                    VALUE +67.\n008800         88 800-BPI                    VALUE +131.\n008900         88 1600-BPI                   VALUE +195.\n009000         88 6250-BPI                   VALUE +211.\n009100     05  NUMBER-BUFFERS              PIC S9(4) COMP.\n009200     05  KEY-LENGTH                  PIC S9(4) COMP.\n009300     05  DATASET-ORGANIZATION        PIC S9(4) COMP.\n009400         88 VSAM-DATASET               VALUE +8.\n009500         88 GRAPHICS-GS                VALUE +128.\n009600         88 PARTITIONED-DATASET        VALUE +512.\n009700         88 PARTITIONED-UNMOVABLE      VALUE +768.\n009800         88 DIRECT-DATASET             VALUE +8192.\n009900         88 DIRECT-UNMOVABLE           VALUE +8448.\n010000*        88 PHYSICAL-SEQUENTIAL        VALUE +16384.\n010100*        88 PHYSICAL-UNMOVABLE         VALUE +16640.\n010200     05  SPACE-TYPE                  PIC X.\n010300         88 CYLINDER-REQUEST           VALUE \"C\".\n010400         88 TRACK-REQUEST              VALUE \"T\".\n010500     05  PRIMARY-SPACE-AMOUNT        PIC S9(8) COMP.\n010600     05  SECONDARY-SPACE-AMOUNT      PIC S9(8) COMP.\n010700     05  RELEASE-SPACE-INDIC         PIC X.\n010800     05  NBR-DIRECTORY-BLOCKS        PIC S9(8) COMP.\n010900     05  EXPIRATION-DATE-CENTURY     PIC X(2).\n011000     05  EXPIRATION-DATE-YYDDD       PIC X(5).\n011100     05  AVG-BLKSIZE-FOR-SPACE       PIC S9(8) COMP.\n011200     05  SPACE-FORMAT-TYPE           PIC S9(4) COMP.\n011300         88  ALX-SPACE                 VALUE +2.\n011400         88  MXIG-SPACE                VALUE +4.\n011500         88  CONTIG-SPACE              VALUE +8.\n011600     05  SPACE-ROUNDING-INDIC        PIC X.\n011700     05  PRIVATE-VOLUME-INDIC        PIC X.\n011800     05  VOLUME-SEQUENCE-NUMBER      PIC S9(4) COMP.\n011900     05  VOLUME-COUNT                PIC S9(4) COMP.\n012000     05  DSNAME-FOR-VOL-REF          PIC X(44).\n012100     05  PARALLEL-MOUNT-INDIC        PIC X.\n012200     05  SYSOUT-PROGRAM-NAME         PIC X(8).\n012300     05  SYSOUT-FORM-NUMBER          PIC X(4).\n012400     05  SYSOUT-OUTLIM               PIC S9(8) COMP.\n012500     05  NUMBER-SYSOUT-COPIES        PIC S9(4) COMP.\n012600     05  PASSWORD-PROTECTION         PIC S9(4) COMP.\n012700         88  PASSWORD-ALL-REFERENCES   VALUE +16.\n012800         88  NO-PASSWORD-TO-READ       VALUE +48.\n012900     05  INPUT-OUTPUT-ONLY           PIC S9(4) COMP.\n013000         88  INPUT-ONLY                VALUE +64.\n013100         88  OUTPUT-ONLY               VALUE +128.\n013200     05  FCB-IMAGE-NAME              PIC X(4).\n013300     05  FCB-ALIGN-VERIFY            PIC S9(4) COMP.\n013400         88  CHECK-FCB-ALIGN           VALUE +8.\n013500         88  VERIFY-FCB                VALUE +4.\n013600     05  USE-TSO-TERMINAL-INDIC      PIC X.\n013700     05  UCS-IMAGE-NAME              PIC X(4).\n013800     05  FOLD-MODE-INDIC             PIC X.\n013900     05  CHAIN-MOUNT-VERIFY-INDIC    PIC X.\n014000     05  DCB-MODEL-DSNAME            PIC X(44).\n014100     05  DCB-DDNAME-BACKREF          PIC X(26).\n014200     05  ERROR-OPTION                PIC S9(4) COMP.\n014300         88  EROPT-EQU-T               VALUE +16.\n014400         88  EROPT-EQU-ABE             VALUE +32.\n014500         88  EROPT-EQU-SKP             VALUE +48.\n014600         88  EROPT-EQU-ACC             VALUE +128.\n014700     05  NCP-READ-WRITE-BEFORE-CHECK PIC S9(4) COMP.\n014800     05  OPTION-CODES-SUM            PIC S9(4) COMP.\n014900         88  OPTCD-EQU-R-OR-J          VALUE +1.\n015000         88  OPTCD-EQU-T               VALUE +2.\n015100         88  OPTCD-EQU-Z               VALUE +4.\n015200         88  OPTCD-EQU-A-OR-Q          VALUE +8.\n015300         88  OPTCD-EQU-F-OR-H-OR-O     VALUE +16.\n015400         88  OPTCD-EQU-C-OR-E          VALUE +32.\n015500         88  OPTCD-EQU-B-OR-U          VALUE +64.\n015600         88  OPTCD-EQU-W               VALUE +128.\n015700     05  PRINTER-SPACING              PIC S9(4) COMP.\n015800         88  NO-SPACED-PRINT            VALUE +1.\n015900         88  SINGLE-SPACED-PRINT        VALUE +9.\n016000         88  DOUBLE-SPACED-PRINT        VALUE +17.\n016100         88  TRIPLE-SPACED-PRINT        VALUE +25.\n016200     05  TRTCH-7-TRACK-TAPE           PIC S9(4) COMP.\n016300         88  NON-COMPACTION             VALUE +4.\n016400         88  COMPACTION                 VALUE +8.\n016500         88  TRTCH-EQU-C                VALUE +19.\n016600         88  TRTCH-EQU-E                VALUE +35.\n016700         88  TRTCH-EQU-ET               VALUE +43.\n016800         88  TRTCH-EQU-T                VALUE +59.\n016900     05  PASSWORD-VALUE               PIC X(32).\n017000     05  DIAGNOSTIC-TRACE-INDIC       PIC X.\n017100     05  SYSOUT-DEST-NODE-NAME        PIC X(8).\n017200     05  SYSOUT-HOLD-QUEUE-INDIC      PIC X.\n017300     05  SYSOUT-DEST-USERID           PIC X(8).\n017400     05  SYSOUT-BURSTER-STACKER       PIC S9(4) COMP.\n017500         88  BURST-EQU-YES              VALUE +2.\n017600         88  BURST-EQU-NO               VALUE +4.\n017700     05  CHARACTER-ARRANGEMENT-TABLE  PIC X(4)\n017800                                        OCCURS 4 TIMES.\n017900     05  SYSOUT-COPY-GROUP-VALUE      PIC S9(4) COMP\n018000                                        OCCURS 8 TIMES.\n018100     05  SYSOUT-FLASH-OVERLAY-NAME    PIC X(4).\n018200     05  SYSOUT-FLASH-OVERLAY-COUNT   PIC S9(4) COMP.\n018300     05  COPY-MODIFY-MODULE-NAME      PIC X(4).\n018400     05  COPY-MODULE-TRC              PIC S9(4) COMP.\n018500         88  FIRST-CHAR-ARR-TABLE       VALUE +0.\n018600         88  SECOND-CHAR-ARR-TABLE      VALUE +1.\n018700         88  THIRD-CHAR-ARR-TABLE       VALUE +2.\n018800         88  FOURTH-CHAR-ARR-TABLE      VALUE +3.\n018900     05  DEFER-MOUNT-INDIC            PIC X.\n019000     05  OUTPUT-STATEMENT-REFERENCE   PIC X(26)\n019100                                        OCCURS 8 TIMES.\n019200     05  CNTL-STATEMENT-REFERENCE     PIC X(26).\n019300     05  SMS-STORCLAS-NAME            PIC X(8).\n019400     05  SMS-MGMTCLAS-NAME            PIC X(8).\n019500     05  SMS-DATACLAS-NAME            PIC X(8).\n019600     05  SMS-RECORD-ORGANIZATION      PIC S9(4) COMP.\n019700         88  VSAM-KSDS                  VALUE +128.\n019800         88  VSAM-ESDS                  VALUE +64.\n019900         88  VSAM-RRDS                  VALUE +32.\n020000         88  VSAM-LINEAR-SPACE          VALUE +16.\n020100     05  SMS-KEY-OFFSET               PIC S9(4) COMP.\n020200     05  SMS-REFDD                    PIC X(26).\n020300     05  SMS-LIKE-DSNAME              PIC X(44).\n020400     05  SMS-AVERAGE-RECORD-UNITS     PIC S9(4) COMP.\n020500         88  IN-SINGLE-RECORDS          VALUE +128.\n020600         88  IN-THOUSAND-RECORD-UNITS   VALUE +64.\n020700         88  IN-MILLION-RECORD-UNITS    VALUE +32.\n020800     05  SMS-DSNTYPE                  PIC S9(4) COMP.\n020900         88  PDSE-LIBRARY               VALUE +128.\n021000         88  OLD-STYLE-PDS              VALUE +64.\n021100\n021200\n021300 01  ALLOCATION-RESULT.\n021400     05  ALLOCDYN-REQUEST             PIC X.\n021500         88  ALLOCATION-REQUEST         VALUE \"A\".\n021600         88  VOLSER-REQUEST             VALUE \"V\".\n021700     05  ALLOCDYN-RETURN-CODE         PIC XX.\n021800         88  SUCCESSFUL-ALLOCATION      VALUE \"00\".\n021900         88  ENVIRONMENT-ERROR          VALUE \"04\".\n022000         88  VALIDATION-DENIAL          VALUE \"08\".\n022100         88  PARAMETER-ERROR            VALUE \"12\".\n022200     05  ERROR-REASON-CODE.\n022300         10  CLASS-7-CODE             PIC X.\n022400         10  ERROR-CLASS              PIC X.\n022500             88  UNAVAILABLE-RESOURCE   VALUE \"2\".\n022600             88  INVALID-PARAMETER-LIST VALUE \"3\".\n022700             88  ERROR-IN-ENVIRONMENT   VALUE \"4\".\n022800             88  SYSTEM-ROUTINE-ERROR   VALUE \"7\".\n022900         10  SPECIFIC-ERROR-CODE      PIC XX.\n023000     05  ERROR-REASON-MESSAGE         PIC X(71).\n023100     05  INFORMATION-REASON           PIC X(4).\n023200     05  INFO-REASON-MESSAGE          PIC X(71).\n023300\n023400\n023500 PROCEDURE DIVISION.\n024400     MOVE LOW-VALUES TO ALLOCATE-DATA.\n024500     MOVE \"INPUT1\" TO DDNAME.\n024600     MOVE \"BC0THOR.TEST.TST.DATA\" TO\n024700           DSNAME-DUMMY-SYSOUT.\n024800     MOVE +8 TO CURRENT-STATUS.\n026000     MOVE \"A\" TO ALLOCDYN-REQUEST.\n026200     CALL \"ALLOCDYN\" USING ALLOCATE-DATA, ALLOCATION-RESULT.\n026300     IF SUCCESSFUL-ALLOCATION\n026400         NEXT SENTENCE\n026500     ELSE DISPLAY \"UNABLE TO ALLOCATE INPUT1: RETURN CODE=\"\n026600                   ALLOCDYN-RETURN-CODE\n026700          DISPLAY \"   ERROR-REASON-CODE=\" ERROR-REASON-CODE\n026800                   \": \" ERROR-REASON-MESSAGE\n026900          DISPLAY \"   INFORMATION-REASON=\" INFORMATION-REASON\n027000                   \": \" INFO-REASON-MESSAGE\n027100          CALL \"COBABEND\".\n027101     OPEN INPUT INPUT-FILE.\n027110     MOVE LOW-VALUES TO ALLOCATE-DATA.\n027120     MOVE \"INPUT1\" TO DDNAME.\n027190     MOVE \"V\" TO ALLOCDYN-REQUEST.\n027191     CALL \"ALLOCDYN\" USING ALLOCATE-DATA, ALLOCATION-RESULT.\n027192     IF SUCCESSFUL-ALLOCATION\n027193         DISPLAY \"VOLSER=\" VOLUME-SERIAL(1)\n027194     ELSE DISPLAY \"UNABLE TO GET VOLUME SERIAL, RETURN CODE=\"\n027195                   ALLOCDYN-RETURN-CODE\n027196          DISPLAY \"   ERROR-REASON-CODE=\" ERROR-REASON-CODE\n027197                   \": \" ERROR-REASON-MESSAGE\n027198          DISPLAY \"   INFORMATION-REASON=\" INFORMATION-REASON\n027199                   \": \" INFO-REASON-MESSAGE\n027200          CALL \"COBABEND\".\n029100     GOBACK.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "BCBSEXTR": {"ttr": 1285, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x17\\x01\\x00\\x04o\\x01\\x02\\x00O\\x12(\\x02<\\x01\\x1a\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2000-02-15T00:00:00", "modifydate": "2002-01-04T12:28:17", "lines": 572, "newlines": 282, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.\n000200 PROGRAM-ID. BCBSEXTR\n000210**************************************************************\n000300*    READ THE MACHINE FILE INPUT AND WRITE A FILE OF LOAD    *\n000400*    MODULES THAT MUST BE RELINKED BEFORE THEY WILL RUN UNDER*\n000410*    LEMVS. HIS LIST IS FOR ALL LOAD MODULES CONTAINING      *\n000420*    BOTH COBOL RES AND COBOL NORES MODULES.                 *\n000421*    SPP.EDGE.PRTFOLIO.SOURCE(MRRECCOB).                     *\n000422*    THE MACHINE RECORD CONTAINS COMMON FIELDS FROM MRMEM TO *\n000423*    MRDATLKD. FIELDS BETWEEN MRC2DATA AND MRC2AWO ARE FOR   *\n000424*    TYPES C2 AND C3. FIELDS BETWEEN MROCSYMD AND MROCSYSO   *\n000425*    ARE FOR TYPES VS AND V4. FIELDS MRCOBSM AND MRCOBDC ARE *\n000426*    COMMON TO ALL COBOLS.                                   *\n000430**************************************************************\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 SOURCE-COMPUTER. IBM-370.\n000800 OBJECT-COMPUTER. IBM-370.\n000900 INPUT-OUTPUT SECTION.\n001000 FILE-CONTROL.\n001100     SELECT MACHINE-FILE ASSIGN TO UT-S-MACHINE\n001200         FILE STATUS MACHINE-FILE-STATUS.\n001300     SELECT REPORT-FILE ASSIGN TO UT-S-REPORT\n001400         FILE STATUS REPORT-FILE-STATUS.\n001500 DATA DIVISION.\n001600 FILE SECTION.\n001700 FD  MACHINE-FILE\n001800     BLOCK CONTAINS 0 RECORDS\n001900     RECORD CONTAINS 200 CHARACTERS\n002000     RECORDING F.\n002100 01  MACHINER.\n002110     05 CSECT-DATA.\n002120        10 MEMBER-NAME               PIC X(8).\n002130        10 MEMBER-AMODE              PIC X(1).\n002140           88 MEMBER-AMODE-24           VALUE '2'.\n002150           88 MEMBER-AMODE-31           VALUE '3'.\n002160           88 MEMBER-AMODE-ANY          VALUE 'A'.\n002170        10 MEMBER-RMODE              PIC X(1).\n002180           88 MEMBER-RMODE-24           VALUE '2'.\n002190           88 MEMBER-RMODE-31           VALUE '3'.\n002191           88 MEMBER-RMODE-ANY          VALUE 'A'.\n002192        10 CSECTNAME                 PIC X(8).\n002193        10 COMPILER-ID               PIC X(10).\n002194        10 COMPILER-VVMM             PIC X(04).\n002195        10 COMPILE-DATE-YYDDD        PIC 9(05).\n002196        10 CSECT-AMODE               PIC X.\n002197           88 CSECT-AMODE-24            VALUE '2'.\n002198           88 CSECT-AMODE-31            VALUE '3'.\n002199           88 CSECT-AMODE-ANY           VALUE 'A'.\n002200           88 CSECT-AMODE-PREXA         VALUE ' '.\n002201        10 CSECT-RMODE               PIC X.\n002202           88 CSECT-RMODE-24            VALUE '2'.\n002203           88 CSECT-RMODE-ANY           VALUE 'A'.\n002204        10 CSECT-TYPE                PIC  X(02).\n002205           88 ASSEMBLER-PROGRAM         VALUE 'AR'.\n002206           88 BASIC-PROGRAM             VALUE 'BA'.\n002207           88 DEBUG-TOOL                VALUE 'BG'.\n002208           88 BERKELEY-SOCKET           VALUE 'BS'.\n002209           88 CICS-INTERFACE            VALUE 'CC'.\n002210           88 C370-RUNTIME-ROUTINE      VALUE 'CE'.\n002211           88 C370-PROGRAM              VALUE 'CI'.\n002212           88 LATTICE-C-PROGRAM         VALUE 'CL'.\n002213           88 COMMON-SECTION            VALUE 'CM'.\n002214           88 COBOL-RUNTIME-ROUTINE     VALUE 'CR'.\n002215           88 SAS-C-PROGRAM             VALUE 'CS'.\n002216           88 C-CPLUSPLUS-FOR-OS390     VALUE 'CP'.\n002217           88 COBOL-II-PROGRAM          VALUE 'C2'.\n002218           88 COBOL-370-390-PROGRAM     VALUE 'C3'.\n002219           88 DCE-ROUTINE               VALUE 'DC'.\n002220           88 DB2-INTERFACE             VALUE 'DI'.\n002221           88 EASYTRIEVE-PLUS-PROGRAM   VALUE 'EZ'.\n002222           88 FORTRAN-G-G1-PROGRAM      VALUE 'FG'.\n002223           88 FORTRAN-H-PROGRAM         VALUE 'FH'.\n002224           88 FORTRAN-RUNTIME-ROUTINE   VALUE 'FR'.\n002225           88 VS-FORTRAN-PROGRAM        VALUE 'FV'.\n002226           88 IMS-INTERFACE             VALUE 'II'.\n002227           88 ISPF-INTERFACE            VALUE 'IS'.\n002228           88 LE-RUNTIME-ROUTINE        VALUE 'LE'.\n002229           88 MARK-V-PROGRAM            VALUE 'MV'.\n002230           88 NOT-COMPLETELY-ANALYZED   VALUE 'NA'.\n002231           88 UNRECOGNIZED-CSECT-TYPE   VALUE 'NR'.\n002232           88 VA-PLI-FOR-OS390-PROGRAM  VALUE 'PL'.\n002233           88 PLI-FOR-MVS-AND-VM-PROGRAM VALUE 'PM'.\n002234           88 PLI-RUNTIME-ROUTINE       VALUE 'PR'.\n002235           88 VS-PASCAL-PROGRAM         VALUE 'PV'.\n002236           88 PLI-OPTIMIZER-V1-PROGRAM  VALUE 'P1'.\n002237           88 PLI-OPTIMIZER-V2-PROGRAM  VALUE 'P2'.\n002238           88 IBM-REXX-PROGRAM          VALUE 'RE'.\n002239           88 OLD-LANGUAGE-RUNTIME-ROUTINE VALUE 'RE'.\n002240           88 SNAPAID-INTERFACE         VALUE 'SA'.\n002241           88 COBOL-SAMPLE-PROGRAM      VALUE 'SC'.\n002242           88 USER-RECOGNIZED-ASSEMBLER VALUE 'UR'.\n002243           88 VERY-OLD-COBOL            VALUE 'VO'.\n002244           88 OSVS-COBOL-V2REL3         VALUE 'VS'.\n002245           88 OSVS-COBOL-V2REL4         VALUE 'V4'.\n002246        10 DATE-TIME-FORMAT          PIC X.\n002247           88 SVC-PATTERN-DATE-TIME     VALUE '1'.\n002248           88 STCK-DATE-TIME            VALUE '2'.\n002249           88 BOTH-SVC-AND-STCK         VALUE '3'.\n002250           88 COBOL-ACCEPT-FROM-FORMAT  VALUE '4'.\n002251           88 COBOL-ACCEPT-OTHER-FORMAT VALUE '9'.\n002252        10 LOAD-MODULE-ATTRIBUTES    PIC X.\n002253           88 REUSABLE-MODULE           VALUE '1'.\n002254           88 RENT-NOT-REUS-MODULE      VALUE '2'.\n002255           88 RENT-AND-REUS-MODULE      VALUE '3'.\n002256           88 OVERLAY-DATA-SUSPECT      VALUE '8'.\n002257           88 MODULE-NOT-REUSABLE       VALUE ' '.\n002258        10 PRIMARY-ENTRY-POINT-NAME  PIC X(8).\n002259        10 CSECT-SIZE-IN-DECIMAL     PIC 9(08).\n002260        10 SLASH-U-PARM-DATA         PIC X(04).\n002261        10 LAST-LINKEDIT-DATE-YYDDD  PIC 9(05).\n002262     05 COBOL-II-AND-COBOL-370-FIELDS.\n002263        10 COBOL-II-COMPILER-VERSION PIC X(06).\n002264        10 COBOL-II-LEVEL            PIC X(04).\n002265        10 COBOL-II-DATE-COMPILED    PIC X(9).\n002266        10 COBOL-II-TIME-COMPILED    PIC X(8).\n002267        10 COBOL-II-ADV-INDICATOR    PIC X(1).\n002268           88 COBOL-II-ADV              VALUE '1'.\n002269           88 COBOL-II-NOADV            VALUE '0'.\n002270        10 COBOL-II-QUOTE-APOST-INDICATOR PIC X.\n002271           88 COBOL-II-QUOTE            VALUE '0'.\n002272           88 COBOL-II-APOST            VALUE '1'.\n002273        10 COBOL-II-DATA-INDICATOR   PIC X.\n002274           88 COBOL-II-DATA-24          VALUE '0'.\n002275           88 COBOL-II-DATA-31          VALUE '1'.\n002276        10 COBOL-II-DECK-INDICATOR   PIC X.\n002277           88 COBOL-II-NODECK           VALUE '0'.\n002278           88 COBOL-II-DECK             VALUE '1'.\n002279        10 COBOL-II-DUMP-INDICATOR   PIC X.\n002280           88 COBOL-II-NODUMP           VALUE '0'.\n002281           88 COBOL-II-DUMP             VALUE '1'.\n002282        10 COBOL-II-DYNAM-INDICATOR  PIC X.\n002283           88 COBOL-II-NODYNAM          VALUE '0'.\n002284           88 COBOL-II-DYNAM            VALUE '1'.\n002285        10 COBOL-II-FASTSRT-INDICATOR PIC X.\n002286           88 COBOL-II-NOFASTSRT        VALUE '0'.\n002287           88 COBOL-II-FASTSRT          VALUE '1'.\n002288        10 COBOL-II-FDUMP-INDICATOR  PIC X.\n002289           88 COBOL-II-NOFDUMP          VALUE '0'.\n002290           88 COBOL-II-FDUMP            VALUE '1'.\n002291        10 COBOL-II-LIB-INDICATOR    PIC X.\n002292           88 COBOL-II-NOLIB            VALUE '0'.\n002293           88 COBOL-II-LIB              VALUE '1'.\n002294        10 COBOL-II-LIST-INDICATOR   PIC X.\n002295           88 COBOL-II-NOLIST           VALUE '0'.\n002296           88 COBOL-II-LIST             VALUE '1'.\n002297        10 COBOL-II-MAP-INDICATOR    PIC X.\n002298           88 COBOL-II-NOMAP            VALUE '0'.\n002299           88 COBOL-II-MAP              VALUE '1'.\n002300        10 COBOL-II-NUM-INDICATOR    PIC X.\n002301           88 COBOL-II-NONUM            VALUE '0'.\n002302           88 COBOL-II-NUM              VALUE '1'.\n002303        10 COBOL-II-OBJ-INDICATOR    PIC X.\n002304           88 COBOL-II-NOOBJ            VALUE '0'.\n002305           88 COBOL-II-OBJ              VALUE '1'.\n002306        10 COBOL-II-OFFSET-INDICATOR  PIC X.\n002307           88 COBOL-II-NOOFFSET         VALUE '0'.\n002308           88 COBOL-II-OFFSET           VALUE '1'.\n002309        10 COBOL-II-OPTIMIZ-INDICATOR PIC X.\n002310           88 COBOL-II-NOOPTIMIZ        VALUE '0'.\n002311           88 COBOL-II-OPTIMIZ          VALUE '1'.\n002312        10 COBOL-II-DD-INDICATOR     PIC X.\n002313           88 COBOL-II-DD               VALUE '0'.\n002314           88 COBOL-II-OUTDD            VALUE '1'.\n002315        10 COBOL-II-PFD-INDICATOR    PIC X.\n002316           88 COBOL-II-NOPFDSGN         VALUE '0'.\n002317           88 COBOL-II-PFDSGN           VALUE '1'.\n002318           88 COBOL-390-NUMNPFD          VALUE '0'.\n002319           88 COBOL-390-NUMPFD           VALUE '1'.\n002320           88 COBOL-390-NUMMIG           VALUE '2'.\n002321        10 COBOL-II-RENT-INDICATOR   PIC X.\n002322           88 COBOL-II-NORENT           VALUE '0'.\n002323           88 COBOL-II-RENT             VALUE '1'.\n002324        10 COBOL-II-RES-INDICATOR    PIC X.\n002325           88 COBOL-II-NORES            VALUE '0'.\n002326           88 COBOL-II-RES              VALUE '1'.\n002327        10 COBOL-II-SEQ-INDICATOR    PIC X.\n002328           88 COBOL-II-NOSEQ            VALUE '0'.\n002329           88 COBOL-II-SEQ              VALUE '1'.\n002330        10 COBOL-II-SIZE-INDICATOR   PIC X.\n002331           88 COBOL-II-SIZE-NBR         VALUE '0'.\n002332           88 COBOL-II-SIZE-MAX         VALUE '1'.\n002333        10 COBOL-II-SOURCE-INDICATOR PIC X.\n002334           88 COBOL-II-NOSOURCE         VALUE '0'.\n002335           88 COBOL-II-SOURCE           VALUE '1'.\n002336        10 COBOL-II-SSRANGE-INDICATOR PIC X.\n002337           88 COBOL-II-NOSSRANGE        VALUE '0'.\n002338           88 COBOL-II-SSRANGE          VALUE '1'.\n002339        10 COBOL-II-TERM-INDICATOR   PIC X.\n002340           88 COBOL-II-NOTERM           VALUE '0'.\n002341           88 COBOL-II-TERM             VALUE '1'.\n002342        10 COBOL-II-TEST-INDICATOR   PIC X.\n002343           88 COBOL-II-NOTEST           VALUE '0'.\n002344           88 COBOL-II-TEST             VALUE '1'.\n002345        10 COBOL-II-TRUNC-INDICATOR  PIC X.\n002346           88 COBOL-II-NOTRUNC          VALUE '0'.\n002347           88 COBOL-II-TRUNC            VALUE '1'.\n002348           88 COBOL-390-TRUNCOPT        VALUE '0'.\n002349           88 COBOL-390-TRUNC-STD       VALUE '1'.\n002350           88 COBOL-390-TRUNC-BIN       VALUE '1'.\n002351        10 COBOL-II-WORD-INDICATOR   PIC X.\n002352           88 COBOL-II-WORD-DEFAULT     VALUE '0'.\n002353           88 COBOL-II-WORD-SPECIFIED   VALUE '1'.\n002354        10 COBOL-II-VBREF-INDICATOR  PIC X.\n002355           88 COBOL-II-NOVBREF          VALUE '0'.\n002356           88 COBOL-II-VBREF            VALUE '1'.\n002357        10 COBOL-II-XREF-INDICATOR   PIC X.\n002358           88 COBOL-II-NOXREF           VALUE '0'.\n002359           88 COBOL-II-XREF             VALUE '1'.\n002360        10 COBOL-II-ZWB-INDICATOR    PIC X.\n002361           88 COBOL-II-NOZWB            VALUE '0'.\n002362           88 COBOL-II-ZWB              VALUE '1'.\n002363        10 COBOL-II-CMPR2-INDICATOR  PIC X.\n002364           88 COBOL-II-NOCMPR2          VALUE '0'.\n002365           88 COBOL-II-CMPR2            VALUE '1'.\n002366        10 COBOL-II-NAME-INDICATOR   PIC X.\n002367           88 COBOL-II-NONAME           VALUE '0'.\n002368           88 COBOL-II-NAME             VALUE '1'.\n002369        10 COBOL-II-NMCL-INDICATOR   PIC X.\n002370           88 COBOL-II-NMCLPRI          VALUE '0'.\n002371           88 COBOL-II-NMCLALT          VALUE '1'.\n002372        10 COBOL-II-DBCS-INDICATOR   PIC X.\n002373           88 COBOL-II-NODBCS           VALUE '0'.\n002374           88 COBOL-II-DBCS             VALUE '1'.\n002375        10 COBOL-II-AWO-INDICATOR    PIC X.\n002376           88 COBOL-II-NOAWO            VALUE '0'.\n002377           88 COBOL-II-AWO              VALUE '1'.\n002378     05 COBOL-370-AND-390-FIELDS.\n002379        10 COBOL-390-EVENTS-INDICATOR PIC X.\n002380           88 COBOL-390-NOEVENTS         VALUE '0'.\n002381           88 COBOL-390-EVENTS           VALUE '1'.\n002382        10 COBOL-390-CURRENCY-INDICATOR PIC X.\n002383           88 COBOL-39-NOCURRENCY       VALUE '0'.\n002384           88 COBOL-39-CURRENCY         VALUE '1'.\n002385        10 COBOL-390-RMODE-INDICATOR PIC X.\n002386           88 COBOL-39-RMODE-24         VALUE '0'.\n002387           88 COBOL-39-RMODE-ANY        VALUE '1'.\n002388        10 FILLER                    PIC X(4).\n002389     05 ALL-COBOL-SORTMERGE-INDICATOR PIC X.\n002390        88 SORT-OR-MERGE-FOUND          VALUE '1'.\n002391        88 NO-SORT-OR-MERGE-FOUND       VALUE '0'.\n002392     05 ALL-COBOL-DYNAM-CALL-FND-INDIC PIC X.\n002393        88 NO-DYNAMIC-CALLS-FOUND       VALUE '0'.\n002394        88 CALL-LITERAL-FORCED-DYNAMIC VALUE '1'.\n002395        88 CALL-DATANAME                VALUE '2'.\n002396        88 CALL-LIT-FRCD-AND-CALL-DATANM VALUE '3'.\n002397        88 CAPEX-OPT-CALL-ADDR          VALUE '4'.\n002398        88 CAPEX-CALL-LIT-FORCED-DYNAM VALUE '5'.\n002399        88 CAPEX-OPT-CALL-DATANAME      VALUE '6'.\n002400        88 CAPEX-CALL-LIT-FRCD-CALL-DTNM VALUE '7'.\n002401   05 VERSION-4-AND-VS-COBOL-FIELDS.\n002402        10 VSCOBOL-SYMDUMP-INDICATOR PIC X.\n002403           88 VSCOBOL-NOSYMDUMP         VALUE '0'.\n002404           88 VSCOBOL-SYMDUMP           VALUE '1'.\n002405        10 VSCOBOL-FLOW-INDICATOR    PIC X.\n002406           88 VSCOBOL-NOFLOW            VALUE '0'.\n002407           88 VSCOBOL-FLOW              VALUE '1'.\n002408        10 VSCOBOL-STATE-INDICATOR   PIC X.\n002409           88 VSCOBOL-NOSTATE           VALUE '0'.\n002410           88 VSCOBOL-STATE             VALUE '1'.\n002411        10 VSCOBOL-TEST-INDICATOR    PIC X.\n002412           88 VSCOBOL-NOTEST            VALUE '0'.\n002413           88 VSCOBOL-TEST              VALUE '1'.\n002414        10 VSCOBOL-RES-INDICATOR     PIC X.\n002415           88 VSCOBOL-NORES             VALUE '0'.\n002416           88 VSCOBOL-RES               VALUE '1'.\n002417        10 VSCOBOL-ENDJOB-INDICATOR  PIC X.\n002418           88 VSCOBOL-NOENDJOB          VALUE '0'.\n002419           88 VSCOBOL-ENDJOB            VALUE '1'.\n002420        10 VSCOBOL-OBJ370-INDICATOR  PIC X.\n002421           88 VSCOBOL-OBJ360            VALUE '0'.\n002422           88 VSCOBOL-OBJ370            VALUE '1'.\n002423        10 VSCOBOL-OPTIMIZED-INDICATOR PIC X.\n002424           88 VSCOBOL-NOOPT             VALUE '0'.\n002425           88 VSCOBOL-OPT               VALUE '1'.\n002426        10 VSCOBOL-CAPEX-OPT-INDICATOR PIC X.\n002427           88 VSCOBOL-NOCAPEX-OPT       VALUE '0'.\n002428           88 VSCOBOL-CAPEX-OPT         VALUE '1'.\n002429        10 VSCOBOL-CAPEX-DTECT-INDICATOR PIC X.\n002430           88 VSCOBOL-NOCAPEX-DTECT     VALUE '0'.\n002431           88 VSCOBOL-CAPEX-DTECT       VALUE '1'.\n002432        10 VSCOBOL-COUNT-INDICATOR   PIC X.\n002433           88 VSCOBOL-NOCOUNT           VALUE '0'.\n002434           88 VSCOBOL-COUNT             VALUE '1'.\n002435        10 VSCOBOL-TRACE-INDICATOR   PIC X.\n002436           88 VSCOBOL-NOTRACE           VALUE '0'.\n002437           88 VSCOBOL-TRACE             VALUE '1'.\n002438        10 VSCOBOL-LANGLEVEL-INDICATOR PIC X.\n002439           88 VSCOBOL-LANGLEVEL-1       VALUE '1'.\n002440           88 VSCOBOL-LANGLEVEL-2       VALUE '2'.\n002441        10 VSCOBOL-LAST-SYSOU-DDNM-CHAR PIC X.\n002442        10 FILLER                    PIC X(3).\n002443     05 PLI-V2-FIELDS.\n002444        10 PLI-V2-MAIN-INDICATOR     PIC X.\n002445           88 PLI-V2-PROC-OPTIONS-MAIN  VALUE '1'.\n002446           88 PLI-V2-NO-PROC-OPTIONS-MAIN VALUE '0'.\n002447        10 PLI-V2-REORDER-INDICATOR  PIC X.\n002448           88 PLI-V2-NOREORDER          VALUE '0'.\n002449           88 PLI-V2-REORDER            VALUE '1'.\n002450        10 PLI-V2-EXECOPS-INDICATOR  PIC X.\n002451           88 PLI-V2-NOEXECOPS          VALUE '0'.\n002452           88 PLI-V2-EXECOPS            VALUE '1'.\n002453        10 PLI-V2-CMPAT-INDICATOR    PIC X.\n002454           88 PLI-V2-CMPAT-V1           VALUE '1'.\n002455           88 PLI-V2-CMPAT-V2           VALUE '2'.\n002456        10 PLI-V2-GRAPHIC-INDICATOR  PIC X.\n002457           88 PLI-V2-NOGRAPHIC          VALUE '0'.\n002458           88 PLI-V2-GRAPHIC            VALUE '1'.\n002459        10 PLI-V2-OPTIMIZE-INDICATOR PIC X.\n002460           88 PLI-V2-NOOPTIMIZE         VALUE '0'.\n002461           88 PLI-V2-OPTIMIZE           VALUE '1'.\n002462        10 PLI-V2-INTERUPT-INDICATOR PIC X.\n002463           88 PLI-V2-NOINTERUPT         VALUE '0'.\n002464           88 PLI-V2-INTERUPT           VALUE '1'.\n002465        10 PLI-V2-FLOW-INDICATOR     PIC X.\n002466           88 PLI-V2-NOFLOW             VALUE '0'.\n002467           88 PLI-V2-FLOW               VALUE '1'.\n002468        10 PLI-V2-COUNT-INDICATOR    PIC X.\n002469           88 PLI-V2-NOCOUNT            VALUE '0'.\n002470           88 PLI-V2-COUNT              VALUE '1'.\n002471        10 PLI-V2-TEST-INDICATOR     PIC X.\n002472           88 PLI-V2-NOTEST             VALUE '0'.\n002473           88 PLI-V2-TEST               VALUE '1'.\n002474        10 PLI-V2-SYSTEM-INDICATOR   PIC X.\n002475           88 PLI-V2-SYSTEM-CMS         VALUE '1'.\n002476           88 PLI-V2-SYSTEM-CMSTP       VALUE '2'.\n002477           88 PLI-V2-SYSTEM-MVS         VALUE '3'.\n002478           88 PLI-V2-SYSTEM-TSO         VALUE '4'.\n002479           88 PLI-V2-SYSTEM-CICS        VALUE '5'.\n002480           88 PLI-V2-SYSTEM-IMS         VALUE '6'.\n002481        10 PLI-V2-CSECT-INDICATOR    PIC X.\n002482           88 PLI-V2-RUNTIME-CSECT      VALUE '1'.\n002483           88 PLI-V2-EXTERNAL-DATA-CSECT VALUE '2'.\n002484           88 PLI-V2-STATIC-DATA-CSECT  VALUE '3'.\n002485           88 PLI-V2-CODE-CSECT         VALUE '4'.\n002486     05 FILLER                       PIC X(28).\n002487     05 WINDOW-INDICATOR             PIC X(4).\n002488\n002489 FD  REPORT-FILE\n002490     BLOCK CONTAINS 0 RECORDS\n002500     RECORD CONTAINS 133 CHARACTERS\n002600     RECORDING MODE F.\n002700 01  REPORT-RECORD.\n002800     05  FILLER                      PIC X.\n002900     05  RPT-MEMBER-NAME             PIC X(8).\n003000     05  FILLER                      PIC X.\n003100     05  RPT-DSNAME                  PIC X(33).\n003200     05  FILLER                      PIC X.\n003300     05  RPT-ANY-REASON.\n003400         10  RPT-RNR                 PIC X(9).\n003500         10  FILLER                  PIC X.\n003600         10  RPT-PLI                 PIC X(4).\n003700         10  FILLER                  PIC X.\n003800         10  RPT-C370                PIC X(4).\n003900         10  FILLER                  PIC X.\n004000         10  RPT-ILBO                PIC X(8).\n004100         10  FILLER                  PIC X.\n004200         10  RPT-STPRRE              PIC X(8).\n004300         10  FILLER                  PIC X.\n004400         10  RPT-TUNE                PIC X(8).\n004500         10  FILLER                  PIC X(43).\n004600\n004700 WORKING-STORAGE SECTION.\n004800 01  MACHINE-FILE-STATUS.\n004900     05  MACHINE-FILE-STATUS-BYTE1   PIC 9 VALUE 0.\n005000         88  MACHINE-EOF VALUE 1.\n005100     05  SECOND-BYTE PIC X.\n005200 01  REPORT-FILE-STATUS.\n005300     05  REPORT-FILE-STATUS-BYTE1    PIC 9 VALUE 0.\n005400     05  REPORT-FILE-STATUS-BYTE2    PIC X.\n005500 01  STATISTICAL-DATA.\n005600     05  MACHINE-RECORDS-READ        PIC S9(8) COMP VALUE +0.\n005700 01  CURRENT-MODULE                  PIC X(8) VALUE SPACES.\n005800 01  CURRENT-USRDAT                  PIC X(4) VALUE SPACES.\n005900 01  ATTRIBUTES-OF-MODULE.\n006000     05  COBOL-CODE-COUNT            PIC S9(8) COMP VALUE +0.\n006100     05  COBOL-CODE-FOUND-SWITCH     PIC X(1) VALUE '0'.\n006200         88 COBOL-CODE-IN-MODULE     VALUE '1'.\n006300     05  RES-CODE-FOUND-SWITCH       PIC X(1) VALUE '0'.\n006400         88 RES-CODE-FOUND-IN-MODULE VALUE '1'.\n006500     05  RES-CODE-COUNT              PIC S9(8) COMP VALUE +0.\n006600     05  NORES-CODE-FOUND-SWITCH     PIC X(1) VALUE '0'.\n006700         88 NORES-CODE-FOUND-IN-MODULE VALUE '1'.\n006800     05  NORES-CODE-COUNT            PIC S9(8) COMP VALUE +0.\n006900 01  DSNAMES-ARRAY.\n007000     05  FILLER PIC X(4) VALUE 'EOLL'.\n007100     05  FILLER PIC X(33) VALUE 'EMVSP.OUTPUT.LOADLIB'.\n007300     05  FILLER PIC X(4) VALUE 'IMSQ'.\n007400     05  FILLER PIC X(33) VALUE 'EMVSP.IMSVS.PGMLIB'.\n007600     05  FILLER PIC X(4) VALUE 'KX01'.\n007700     05  FILLER PIC X(33) VALUE  'EMVSP.CICS.LOADLIB'.\n007800     05  FILLER PIC X(4) VALUE 'KX02'.\n007900     05  FILLER PIC X(33) VALUE  'EMVSQ.CICS.LOADLIB'.\n008000     05  FILLER PIC X(4) VALUE 'KX03'.\n008100     05  FILLER PIC X(33) VALUE  'EMVSP.HCS.LOADLIB'.\n008200     05  FILLER PIC X(4) VALUE 'KX04'.\n008300     05  FILLER PIC X(33) VALUE  'ECC.PRD.MDARNDP.LINKLIB'.\n008400     05  FILLER PIC X(4) VALUE 'KX05'.\n008500     05  FILLER PIC X(33) VALUE\n008510         'ECC.PRD.MDDCTI.V20000.LINKLIB'.\n008600     05  FILLER PIC X(4) VALUE 'KX06'.\n008700     05  FILLER PIC X(33) VALUE\n008710         'ECC.PRD.MDDOAI.V20000.PTF.LINKLIB'.\n008800     05  FILLER PIC X(4) VALUE 'KX07'.\n008900     05  FILLER PIC X(33) VALUE  'CICS.PROD.USERLOAD'.\n009000     05  FILLER PIC X(4) VALUE 'KX08'.\n009100     05  FILLER PIC X(33) VALUE  'CICS.TEST.USER.LOADLIB'.\n009200     05  FILLER PIC X(4) VALUE 'KX09'.\n009300     05  FILLER PIC X(33) VALUE  'CICS.MAINT.USER.LOADLIB'.\n009400     05  FILLER PIC X(4) VALUE 'KX10'.\n009500     05  FILLER PIC X(33) VALUE  'CICS.MAINT.OMNIDESK.LOADLIB'.\n009600     05  FILLER PIC X(4) VALUE 'KX11'.\n009700     05  FILLER PIC X(33) VALUE  'CICS.PROD.COINSERV.LOADLIB'.\n009800     05  FILLER PIC X(4) VALUE 'KX12'.\n009900     05  FILLER PIC X(33) VALUE  'DBEXCEL.PRD.ALT.LOADLIB'.\n010000     05  FILLER PIC X(4) VALUE 'KX13'.\n010100     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCEAP981.LOADLIBA'.\n010200     05  FILLER PIC X(4) VALUE 'KX14'.\n010300     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCEAP991.LOADLIBA'.\n010400     05  FILLER PIC X(4) VALUE 'KX15'.\n010500     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCE981.LOADLIBH'.\n010600     05  FILLER PIC X(4) VALUE 'KX16'.\n010700     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCE982.LOADLIBA'.\n010800     05  FILLER PIC X(4) VALUE 'KX17'.\n010900     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCE982.LOADLIBH'.\n011000     05  FILLER PIC X(4) VALUE 'KX18'.\n011100     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCE991.LOADLIBH'.\n011200     05  FILLER PIC X(4) VALUE 'KX19'.\n011300     05  FILLER PIC X(33) VALUE  'GIBC.PRODCICS'.\n011400     05  FILLER PIC X(4) VALUE 'KX20'.\n011500     05  FILLER PIC X(33) VALUE 'INTERQ.PROD.COB2.LOAD'.\n011600     05  FILLER PIC X(4) VALUE HIGH-VALUES.\n011700     05  FILLER PIC X(33) VALUE\n011800         '????UNKNOWN.LOADLIB?????         '.\n011900\n012000 01  DSNAME-TABLE REDEFINES DSNAMES-ARRAY.\n012100     05  DSNAME-TABLE-ENTRY               OCCURS 23 TIMES\n012200                                          INDEXED BY I.\n012300         10  TBL-ARG                      PIC X(4).\n012400         10  TBL-DSNAME                   PIC X(33).\n012500\n012600 PROCEDURE DIVISION.\n012700 0000-EXECUTIVE-CONTROL.\n012800     PERFORM 9900-INITIALIZATION.\n012900     PERFORM 1000-MAINLINE UNTIL MACHINE-EOF.\n013000     PERFORM 9990-END-OF-JOB.\n013100     GOBACK.\n013200\n013300 1000-MAINLINE.\n013400      READ MACHINE-FILE\n013500         AT END PERFORM 8000-END-OF-FILE.\n013600      IF MACHINE-EOF\n013700          NEXT SENTENCE\n013800      ELSE\n013900          ADD +1 TO MACHINE-RECORDS-READ\n014000          PERFORM 2000-CHECK-MODULE-CHANGE\n014100          PERFORM 3000-PROCESS-THIS-CSECT.\n014200\n014300 2000-CHECK-MODULE-CHANGE.\n014400      IF (MRMEM NOT EQUAL CURRENT-MODULE) OR\n014500          (MRUSRDAT NOT EQUAL CURRENT-USRDAT)\n014600              PERFORM 7000-MODULE-ANALYSIS\n014700              PERFORM 6000-INITIALIZE-NEW-MODULE.\n014800\n014900 3000-PROCESS-THIS-CSECT.\n015000      IF MRTYPE = 'VO'\n015100          MOVE '1' TO NORES-CODE-FOUND-SWITCH\n015200          ADD +1 TO NORES-CODE-COUNT\n015300          MOVE '1' TO COBOL-CODE-FOUND-SWITCH\n015400          ADD +1 TO   COBOL-CODE-COUNT.\n015500      IF MRTYPE = 'V4'\n015600          MOVE '1' TO COBOL-CODE-FOUND-SWITCH\n015700          ADD +1 TO   COBOL-CODE-COUNT\n015800          IF MROCRES EQUAL '1'\n015900              MOVE '1' TO RES-CODE-FOUND-SWITCH\n016000              ADD +1 TO RES-CODE-COUNT\n016100          ELSE\n016200              MOVE '1' TO NORES-CODE-FOUND-SWITCH\n016300              ADD +1 TO NORES-CODE-COUNT.\n016400      IF MRTYPE = 'VS'\n016500          MOVE '1' TO COBOL-CODE-FOUND-SWITCH\n016600          ADD +1 TO   COBOL-CODE-COUNT\n016700          IF MROCRES EQUAL '1'\n016800              MOVE '1' TO RES-CODE-FOUND-SWITCH\n016900              ADD +1 TO RES-CODE-COUNT\n017000          ELSE\n017100              MOVE '1' TO NORES-CODE-FOUND-SWITCH\n017200              ADD +1 TO NORES-CODE-COUNT.\n017300      IF MRTYPE = 'C2'\n017400          MOVE '1' TO COBOL-CODE-FOUND-SWITCH\n017500          ADD +1 TO   COBOL-CODE-COUNT\n017600          IF MRC2RES EQUAL '1'\n017700              MOVE '1' TO RES-CODE-FOUND-SWITCH\n017800              ADD +1 TO RES-CODE-COUNT\n017900          ELSE\n018000              MOVE '1' TO NORES-CODE-FOUND-SWITCH\n018100              ADD +1 TO NORES-CODE-COUNT.\n018200      IF MRTYPE = 'C3'\n018300          MOVE '1' TO RES-CODE-FOUND-SWITCH\n018400          ADD +1 TO RES-CODE-COUNT\n018500          MOVE '1' TO COBOL-CODE-FOUND-SWITCH\n018600          ADD +1 TO   COBOL-CODE-COUNT.\n018700      IF MRTYPE = 'PM' OR 'P1' OR 'P2' OR 'PR'\n018800          MOVE 'PL/1' TO RPT-PLI.\n018900      IF MRTYPE = 'CS' OR 'CE' OR 'C1' OR 'CL'\n019000          MOVE 'C-LANG' TO RPT-C370.\n019100      IF MRCSECT = 'ILBOD01' OR 'ILBODBE' OR 'ILBOPRM'\n019200          OR 'ILBOSND' OR 'ILBOSTN' OR 'ILBOTC2'\n019300              MOVE MRCSECT TO RPT-ILBO.\n019400      IF MRCSECT = 'ILBOSTP0' OR 'IGZERRE'\n019500              MOVE MRCSECT TO RPT-STPRRE.\n019600      IF MRCSECT = 'IGZETUN'\n019700              MOVE MRCSECT TO RPT-TUNE.\n019800      IF MRCSECT = 'PLICALLA' OR 'PLICALLB'\n019900              MOVE 'PL/1' TO RPT-PLI.\n020000\n020100 6000-INITIALIZE-NEW-MODULE.\n020200     MOVE MRMEM TO CURRENT-MODULE\n020300     MOVE MRUSRDAT TO CURRENT-USRDAT\n020400     MOVE '0' TO COBOL-CODE-FOUND-SWITCH\n020500     MOVE '0' TO NORES-CODE-FOUND-SWITCH\n020600     MOVE +0  TO NORES-CODE-COUNT.\n020700     MOVE '0' TO RES-CODE-FOUND-SWITCH\n020800     MOVE +0  TO RES-CODE-COUNT.\n020900     MOVE +0  TO COBOL-CODE-COUNT.\n021000\n021100 7000-MODULE-ANALYSIS.\n021200     IF COBOL-CODE-IN-MODULE\n021300         AND NORES-CODE-FOUND-IN-MODULE\n021400         AND RES-CODE-FOUND-IN-MODULE\n021500             MOVE 'RES&NORES' TO RPT-RNR.\n021600     IF RPT-ANY-REASON = ALL SPACES\n021700         NEXT SENTENCE\n021800     ELSE\n021900         MOVE CURRENT-MODULE TO RPT-MEMBER-NAME\n022000         PERFORM VARYING I FROM 1 BY 1\n022100             UNTIL TBL-ARG(I) = CURRENT-USRDAT\n022200             OR TBL-ARG(I) = HIGH-VALUES\n022300         END-PERFORM\n022400         MOVE TBL-DSNAME(I) TO RPT-DSNAME\n022500         WRITE REPORT-RECORD\n022600         MOVE SPACES TO REPORT-RECORD.\n022700\n022800 8000-END-OF-FILE.\n022900      IF MACHINE-RECORDS-READ EQUAL ZERO\n023000          DISPLAY 'NULL MACHINE INPUT FILE ENCOUNTERED - INVALID'\n023100          CALL 'ILBOABN0'\n023200      ELSE\n023300          IF (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 0)\n023400              AND (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 1)\n023500     DISPLAY 'UNEXPECTED FILE STATUS AFTER MACHINE FILE READ ='\n023600                      MACHINE-FILE-STATUS\n023700                  CALL 'ILBOABN0'.\n023800\n023900 9900-INITIALIZATION.\n024000     OPEN INPUT MACHINE-FILE.\n024100     IF (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 0)\n024200         AND (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 1)\n024300           DISPLAY 'UNEXPECTED FILE STATUS AFTER MACHINE OPEN = '\n024400                 MACHINE-FILE-STATUS\n024500             CALL 'ILBOABN0'.\n024600     OPEN OUTPUT REPORT-FILE.\n024700     IF ( REPORT-FILE-STATUS-BYTE1 NOT EQUAL 0 )\n024800       DISPLAY 'UNEXPECTED FILE STATUS AFTER REPORT FILE OPEN = '\n024900             REPORT-FILE-STATUS\n025000         CALL 'ILBOABN0'.\n025100     MOVE SPACES TO REPORT-RECORD.\n025200\n025300 9990-END-OF-JOB.\n025400      PERFORM 7000-MODULE-ANALYSIS\n025500     CLOSE MACHINE-FILE.\n025600     CLOSE REPORT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BCBSEXT2": {"ttr": 1541, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x00U\\x01\\x00\\x10\\x8f\\x01\\x02\\x00O\\x12(\\x00\\xd3\\x01\\x04\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2000-04-17T00:00:00", "modifydate": "2002-01-04T12:28:55", "lines": 211, "newlines": 260, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.\n000200 PROGRAM-ID. BCBSEXT2\n000210**************************************************************\n000300*    READ THE MACHINE FILE INPUT AND WRITE A FILE OF LOAD    *\n000400*    MODULES FROM CICS LOAD LIBRARIES THAT WERE COMPILED BY  *\n000410*    THE VS COBOL COMPILERS AND/OR WITH THE NORES COMPILER   *\n000420*    OPTION.   RECORD DESCRIPTION COPY BOOK IS IN            *\n000421*    SPP.EDGE.PRTFOLIO.SOURCE(MRRECCOB).                     *\n000422*    THE MACHINE RECORD CONTAINS COMMON FIELDS FROM MRMEM TO *\n000423*    MRDATLKD. FIELDS BETWEEN MRC2DATA AND MRC2AWO ARE FOR   *\n000424*    TYPES C2 AND C3. FIELDS BETWEEN MROCSYMD AND MROCSYSO   *\n000425*    ARE FOR TYPES VS AND V4. FIELDS MRCOBSM AND MRCOBDC ARE *\n000426*    COMMON TO ALL COBOLS.                                   *\n000430**************************************************************\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 SOURCE-COMPUTER. IBM-370.\n000800 OBJECT-COMPUTER. IBM-370.\n000900 INPUT-OUTPUT SECTION.\n001000 FILE-CONTROL.\n001100     SELECT MACHINE-FILE ASSIGN TO UT-S-MACHINE\n001200         FILE STATUS MACHINE-FILE-STATUS.\n001300     SELECT REPORT-FILE ASSIGN TO UT-S-REPORT\n001400         FILE STATUS REPORT-FILE-STATUS.\n001500 DATA DIVISION.\n001600 FILE SECTION.\n001700 FD  MACHINE-FILE\n001800     BLOCK CONTAINS 0 RECORDS\n001900     RECORD CONTAINS 200 CHARACTERS\n002000     RECORDING F.\n002100     COPY MRRECCOB.\n002200\n002300 FD  REPORT-FILE\n002400     BLOCK CONTAINS 0 RECORDS\n002500     RECORD CONTAINS 133 CHARACTERS\n002600     RECORDING MODE F.\n002700 01  REPORT-RECORD.\n002800     05  FILLER                      PIC X.\n002900     05  RPT-MEMBER-NAME             PIC X(8).\n003000     05  FILLER                      PIC X.\n003010     05  RPT-TYPE                    PIC XX.\n003020     05  FILLER                      PIC X.\n003030     05  RPT-RES                     PIC X(5).\n003040     05  FILLER                      PIC X.\n003100     05  RPT-DSNAME                  PIC X(33).\n003200     05  FILLER                      PIC X.\n003300     05  FILLER                      PIC X(80).\n004600\n004700 WORKING-STORAGE SECTION.\n004800 01  MACHINE-FILE-STATUS.\n004900     05  MACHINE-FILE-STATUS-BYTE1   PIC 9 VALUE 0.\n005000         88  MACHINE-EOF VALUE 1.\n005100     05  MACHINE-FILE-STATUS-BYTE2   PIC X.\n005200 01  REPORT-FILE-STATUS.\n005300     05  REPORT-FILE-STATUS-BYTE1    PIC 9 VALUE 0.\n005400     05  REPORT-FILE-STATUS-BYTE2    PIC X.\n005500 01  STATISTICAL-DATA.\n005600     05  MACHINE-RECORDS-READ        PIC S9(8) COMP VALUE +0.\n005700 01  CURRENT-MODULE                  PIC X(8) VALUE SPACES.\n005800 01  CURRENT-USRDAT.\n005810     05  CURRENT-USRDAT12            PIC X(2) VALUE SPACES.\n005820     05  CURRENT-USRDAT34            PIC X(2) VALUE SPACES.\n005900 01  ATTRIBUTES-OF-MODULE.\n006600     05  NORES-CODE-FOUND-SWITCH     PIC X(1) VALUE '0'.\n006700         88 NORES-CODE-FOUND-IN-MODULE VALUE '1'.\n006800     05  VSCOBOL-FOUND-SWITCH        PIC X(1) VALUE '0'.\n006810         88 VSCOBOL-FOUND-IN-MODULE  VALUE '1'.\n006900 01  DSNAMES-ARRAY.\n007000     05  FILLER PIC X(4) VALUE 'EOLL'.\n007100     05  FILLER PIC X(33) VALUE 'EMVSP.OUTPUT.LOADLIB'.\n007300     05  FILLER PIC X(4) VALUE 'IMSQ'.\n007400     05  FILLER PIC X(33) VALUE 'EMVSP.IMSVS.PGMLIB'.\n007600     05  FILLER PIC X(4) VALUE 'KX01'.\n007700     05  FILLER PIC X(33) VALUE  'EMVSP.CICS.LOADLIB'.\n007800     05  FILLER PIC X(4) VALUE 'KX02'.\n007900     05  FILLER PIC X(33) VALUE  'EMVSQ.CICS.LOADLIB'.\n008000     05  FILLER PIC X(4) VALUE 'KX03'.\n008100     05  FILLER PIC X(33) VALUE  'EMVSP.HCS.LOADLIB'.\n008200     05  FILLER PIC X(4) VALUE 'KX04'.\n008300     05  FILLER PIC X(33) VALUE  'ECC.PRD.MDARNDP.LINKLIB'.\n008400     05  FILLER PIC X(4) VALUE 'KX05'.\n008500     05  FILLER PIC X(33) VALUE\n008510         'ECC.PRD.MDDCTI.V20000.LINKLIB'.\n008600     05  FILLER PIC X(4) VALUE 'KX06'.\n008700     05  FILLER PIC X(33) VALUE\n008710         'ECC.PRD.MDDOAI.V20000.PTF.LINKLIB'.\n008800     05  FILLER PIC X(4) VALUE 'KX07'.\n008900     05  FILLER PIC X(33) VALUE  'CICS.PROD.USERLOAD'.\n009000     05  FILLER PIC X(4) VALUE 'KX08'.\n009100     05  FILLER PIC X(33) VALUE  'CICS.TEST.USER.LOADLIB'.\n009200     05  FILLER PIC X(4) VALUE 'KX09'.\n009300     05  FILLER PIC X(33) VALUE  'CICS.MAINT.USER.LOADLIB'.\n009400     05  FILLER PIC X(4) VALUE 'KX10'.\n009500     05  FILLER PIC X(33) VALUE  'CICS.MAINT.OMNIDESK.LOADLIB'.\n009600     05  FILLER PIC X(4) VALUE 'KX11'.\n009700     05  FILLER PIC X(33) VALUE  'CICS.PROD.COINSERV.LOADLIB'.\n009800     05  FILLER PIC X(4) VALUE 'KX12'.\n009900     05  FILLER PIC X(33) VALUE  'DBEXCEL.PRD.ALT.LOADLIB'.\n010000     05  FILLER PIC X(4) VALUE 'KX13'.\n010100     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCEAP981.LOADLIBA'.\n010200     05  FILLER PIC X(4) VALUE 'KX14'.\n010300     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCEAP991.LOADLIBA'.\n010400     05  FILLER PIC X(4) VALUE 'KX15'.\n010500     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCE981.LOADLIBH'.\n010600     05  FILLER PIC X(4) VALUE 'KX16'.\n010700     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCE982.LOADLIBA'.\n010800     05  FILLER PIC X(4) VALUE 'KX17'.\n010900     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCE982.LOADLIBH'.\n011000     05  FILLER PIC X(4) VALUE 'KX18'.\n011100     05  FILLER PIC X(33) VALUE  'DRG.PRD.CCE991.LOADLIBH'.\n011200     05  FILLER PIC X(4) VALUE 'KX19'.\n011300     05  FILLER PIC X(33) VALUE  'GIBC.PRODCICS'.\n011400     05  FILLER PIC X(4) VALUE 'KX20'.\n011500     05  FILLER PIC X(33) VALUE 'INTERQ.PROD.COB2.LOAD'.\n011600     05  FILLER PIC X(4) VALUE HIGH-VALUES.\n011700     05  FILLER PIC X(33) VALUE\n011800         '????UNKNOWN.LOADLIB?????         '.\n011900\n012000 01  DSNAME-TABLE REDEFINES DSNAMES-ARRAY.\n012100     05  DSNAME-TABLE-ENTRY               OCCURS 23 TIMES\n012200                                          INDEXED BY I.\n012300         10  TBL-ARG                      PIC X(4).\n012400         10  TBL-DSNAME                   PIC X(33).\n012500\n012600 PROCEDURE DIVISION.\n012700 0000-EXECUTIVE-CONTROL.\n012800     PERFORM 9900-INITIALIZATION.\n012900     PERFORM 1000-MAINLINE UNTIL MACHINE-EOF.\n013000     PERFORM 9990-END-OF-JOB.\n013100     GOBACK.\n013200\n013300 1000-MAINLINE.\n013400      READ MACHINE-FILE\n013500         AT END PERFORM 8000-END-OF-FILE.\n013600      IF MACHINE-EOF\n013700          NEXT SENTENCE\n013800      ELSE\n013900          ADD +1 TO MACHINE-RECORDS-READ\n014000          PERFORM 2000-CHECK-MODULE-CHANGE\n014100          PERFORM 3000-PROCESS-THIS-CSECT.\n014200\n014300 2000-CHECK-MODULE-CHANGE.\n014400      IF (MRMEM NOT EQUAL CURRENT-MODULE) OR\n014500          (MRUSRDAT NOT EQUAL CURRENT-USRDAT)\n014600              PERFORM 7000-MODULE-ANALYSIS\n014700              PERFORM 6000-INITIALIZE-NEW-MODULE.\n014800\n014900 3000-PROCESS-THIS-CSECT.\n015000     IF CURRENT-USRDAT12 = 'KX'\n015100       IF MRTYPE = 'C2' OR 'C3'\n017600         IF MRC2RES EQUAL '0'\n018000           MOVE '1' TO NORES-CODE-FOUND-SWITCH\n018001         ELSE\n018002           NEXT SENTENCE\n018003       ELSE\n018010         IF MRTYPE = 'VS' OR 'V4'\n018100           MOVE '1' TO VSCOBOL-FOUND-SWITCH\n018200           IF MROCRES EQUAL '0'\n018300             MOVE '1' TO NORES-CODE-FOUND-SWITCH.\n020000\n020100 6000-INITIALIZE-NEW-MODULE.\n020200     MOVE MRMEM TO CURRENT-MODULE.\n020300     MOVE MRUSRDAT TO CURRENT-USRDAT.\n020500     MOVE '0' TO NORES-CODE-FOUND-SWITCH.\n020600     MOVE '0' TO VSCOBOL-FOUND-SWITCH.\n021000\n021100 7000-MODULE-ANALYSIS.\n021110\n021200     IF VSCOBOL-FOUND-IN-MODULE\n021210         MOVE 'VS' TO RPT-TYPE.\n021300     IF NORES-CODE-FOUND-IN-MODULE\n021400         MOVE 'NORES' TO RPT-RES.\n021500     IF NORES-CODE-FOUND-IN-MODULE OR VSCOBOL-FOUND-IN-MODULE\n021900         MOVE CURRENT-MODULE TO RPT-MEMBER-NAME\n022000         PERFORM VARYING I FROM 1 BY 1\n022100             UNTIL TBL-ARG(I) = CURRENT-USRDAT\n022200             OR TBL-ARG(I) = HIGH-VALUES\n022300         END-PERFORM\n022400         MOVE TBL-DSNAME(I) TO RPT-DSNAME\n022500         WRITE REPORT-RECORD\n022600         MOVE SPACES TO REPORT-RECORD.\n022700\n022800 8000-END-OF-FILE.\n022900      IF MACHINE-RECORDS-READ EQUAL ZERO\n023000          DISPLAY 'NULL MACHINE INPUT FILE ENCOUNTERED - INVALID'\n023100          CALL 'ILBOABN0'\n023200      ELSE\n023300          IF (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 0)\n023400              AND (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 1)\n023500     DISPLAY 'UNEXPECTED FILE STATUS AFTER MACHINE FILE READ ='\n023600                      MACHINE-FILE-STATUS\n023700                  CALL 'ILBOABN0'.\n023800\n023900 9900-INITIALIZATION.\n024000     OPEN INPUT MACHINE-FILE.\n024100     IF (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 0)\n024200         AND (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 1)\n024300           DISPLAY 'UNEXPECTED FILE STATUS AFTER MACHINE OPEN = '\n024400                 MACHINE-FILE-STATUS\n024500             CALL 'ILBOABN0'.\n024600     OPEN OUTPUT REPORT-FILE.\n024700     IF ( REPORT-FILE-STATUS-BYTE1 NOT EQUAL 0 )\n024800       DISPLAY 'UNEXPECTED FILE STATUS AFTER REPORT FILE OPEN = '\n024900             REPORT-FILE-STATUS\n025000         CALL 'ILBOABN0'.\n025100     MOVE SPACES TO REPORT-RECORD.\n025200\n025300 9990-END-OF-JOB.\n025400      PERFORM 7000-MODULE-ANALYSIS\n025500     CLOSE MACHINE-FILE.\n025600     CLOSE REPORT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BCBSEXT3": {"ttr": 1546, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x18\\x01\\x00#\\x0f\\x01\\x02\\x00O\\x12)\\x00\\xd8\\x00\\xd8\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-08-17T00:00:00", "modifydate": "2002-01-04T12:29:18", "lines": 216, "newlines": 216, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.\n000200 PROGRAM-ID. BCBSEXT3\n000210**************************************************************\n000300*    READ THE MACHINE FILE INPUT AND WRITE A FILE OF LOAD    *\n000400*    MODULES CONTAINING IP3 AND/OR PL/I CODE.                *\n000420*    RECORD DESCRIPTION COPY BOOK IS IN                      *\n000421*    SPP.EDGE.PRTFOLIO.SOURCE(MRRECCOB).                     *\n000422*    THE MACHINE RECORD CONTAINS COMMON FIELDS FROM MRMEM TO *\n000423*    MRDATLKD. FIELDS BETWEEN MRC2DATA AND MRC2AWO ARE FOR   *\n000424*    TYPES C2 AND C3. FIELDS BETWEEN MROCSYMD AND MROCSYSO   *\n000425*    ARE FOR TYPES VS AND V4. FIELDS MRCOBSM AND MRCOBDC ARE *\n000426*    COMMON TO ALL COBOLS.                                   *\n000430**************************************************************\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 SOURCE-COMPUTER. IBM-370.\n000800 OBJECT-COMPUTER. IBM-370.\n000900 INPUT-OUTPUT SECTION.\n001000 FILE-CONTROL.\n001100     SELECT MACHINE-FILE ASSIGN TO UT-S-MACHINE\n001200         FILE STATUS MACHINE-FILE-STATUS.\n001300     SELECT REPORT-FILE ASSIGN TO UT-S-REPORT\n001400         FILE STATUS REPORT-FILE-STATUS.\n001500 DATA DIVISION.\n001600 FILE SECTION.\n001700 FD  MACHINE-FILE\n001800     BLOCK CONTAINS 0 RECORDS\n001900     RECORD CONTAINS 200 CHARACTERS\n002000     RECORDING F.\n002100     COPY MRRECCOB.\n002200\n002300 FD  REPORT-FILE\n002400     BLOCK CONTAINS 0 RECORDS\n002500     RECORD CONTAINS 133 CHARACTERS\n002600     RECORDING MODE F.\n002700 01  REPORT-RECORD.\n002800     05  FILLER                      PIC X.\n002900     05  RPT-MEMBER-NAME             PIC X(8).\n003000     05  FILLER                      PIC X.\n003001     05  RPT-MODULE-ATTRIBUTES.\n003010         10  RPT-TYPE-PM             PIC XX.\n003011         10  FILLER                  PIC X.\n003012         10  RPT-TYPE-PR             PIC XX.\n003020         10  FILLER                  PIC X.\n003021         10  RPT-TYPE-P1             PIC XX.\n003022         10  FILLER                  PIC X.\n003023         10  RPT-TYPE-P2             PIC XX.\n003024         10  FILLER                  PIC X.\n003030         10  RPT-IP3                 PIC X(6).\n003031         10  FILLER                  PIC X.\n003032         10  RPT-IBM                 PIC X(6).\n003040         10  FILLER                  PIC X.\n003050         10  RPT-PLISTART            PIC X(8).\n003060         10  FILLER                  PIC X.\n003070         10  RPT-PLIMAIN             PIC X(7).\n003080         10  FILLER                  PIC X.\n003100         10  RPT-DSNAME              PIC X(33).\n003300         10  FILLER                  PIC X(47).\n004600\n004700 WORKING-STORAGE SECTION.\n004800 01  MACHINE-FILE-STATUS.\n004900     05  MACHINE-FILE-STATUS-BYTE1   PIC 9 VALUE 0.\n005000         88  MACHINE-EOF VALUE 1.\n005100     05  MACHINE-FILE-STATUS-BYTE2   PIC X.\n005200 01  REPORT-FILE-STATUS.\n005300     05  REPORT-FILE-STATUS-BYTE1    PIC 9 VALUE 0.\n005400     05  REPORT-FILE-STATUS-BYTE2    PIC X.\n005500 01  STATISTICAL-DATA.\n005600     05  MACHINE-RECORDS-READ        PIC S9(8) COMP VALUE +0.\n005700 01  CURRENT-MODULE                  PIC X(8) VALUE SPACES.\n005800 01  CURRENT-USRDAT.\n005810     05  CURRENT-USRDAT12            PIC X(2) VALUE SPACES.\n005820     05  CURRENT-USRDAT34            PIC X(2) VALUE SPACES.\n006900 01  DSNAMES-ARRAY.\n007000     05  FILLER PIC X(4)  VALUE 'EOLL'.\n007100     05  FILLER PIC X(33) VALUE 'EMVSP.OUTPUT.LOADLIB'.\n007200     05  FILLER PIC X(4)  VALUE 'IMS1'.\n007300     05  FILLER PIC X(33) VALUE 'EMVSP.IMSVS.PGMLIB'.\n007400     05  FILLER PIC X(4)  VALUE 'KX01'.\n007500     05  FILLER PIC X(33) VALUE 'EMVSP.CICS.LOADLIB'.\n007600     05  FILLER PIC X(4)  VALUE 'KX02'.\n007700     05  FILLER PIC X(33) VALUE 'EMVSQ.CICS.LOADLIB'.\n007800     05  FILLER PIC X(4)  VALUE 'KX03'.\n007900     05  FILLER PIC X(33) VALUE 'EMVSP.HCS.LOADLIB'.\n008000     05  FILLER PIC X(4)  VALUE 'KX04'.\n008100     05  FILLER PIC X(33) VALUE 'ECC.PRD.MDARNDP.LINKLIB'.\n008200     05  FILLER PIC X(4)  VALUE 'KX05'.\n008300     05  FILLER PIC X(33) VALUE 'ECC.PRD.MDDCTI.V20000.LINKLIB'.\n008400     05  FILLER PIC X(4)  VALUE 'KX06'.\n008500     05  FILLER PIC X(33) VALUE\n008510                            'ECC.PRD.MDDOAI.V20000.PTF.LINKLIB'.\n008600     05  FILLER PIC X(4)  VALUE 'KX07'.\n008700     05  FILLER PIC X(33) VALUE 'CICS.PROD.USERLOAD'.\n008800     05  FILLER PIC X(4)  VALUE 'KX08'.\n008900     05  FILLER PIC X(33) VALUE 'CICS.TEST.USER.LOADLIB'.\n009000     05  FILLER PIC X(4)  VALUE 'KX09'.\n009100     05  FILLER PIC X(33) VALUE 'CICS.MAINT.USER.LOADLIB'.\n009200     05  FILLER PIC X(4)  VALUE 'KX10'.\n009300     05  FILLER PIC X(33) VALUE 'CICS.MAINT.OMNIDESK.LOADLIB'.\n009400     05  FILLER PIC X(4)  VALUE 'KX11'.\n009500     05  FILLER PIC X(33) VALUE 'CICS.PROD.COINSERV.LOADLIB'.\n009600     05  FILLER PIC X(4)  VALUE 'KX12'.\n009700     05  FILLER PIC X(33) VALUE 'DBEXCEL.PRD.ALT.LOADLIB'.\n009800     05  FILLER PIC X(4)  VALUE 'KX13'.\n009900     05  FILLER PIC X(33) VALUE 'DRG.PRD.CCEAP981.LOADLIBA'.\n010000     05  FILLER PIC X(4)  VALUE 'KX14'.\n010100     05  FILLER PIC X(33) VALUE 'DRG.PRD.CCEAP991.LOADLIBA'.\n010200     05  FILLER PIC X(4)  VALUE 'KX15'.\n010300     05  FILLER PIC X(33) VALUE 'DRG.PRD.CCE981.LOADLIBH'.\n010400     05  FILLER PIC X(4)  VALUE 'KX16'.\n010500     05  FILLER PIC X(33) VALUE 'DRG.PRD.CCE982.LOADLIBA'.\n010600     05  FILLER PIC X(4)  VALUE 'KX17'.\n010700     05  FILLER PIC X(33) VALUE 'DRG.PRD.CCE982.LOADLIBH'.\n010800     05  FILLER PIC X(4)  VALUE 'KX18'.\n010900     05  FILLER PIC X(33) VALUE 'DRG.PRD.CCE991.LOADLIBH'.\n011000     05  FILLER PIC X(4)  VALUE 'KX19'.\n011100     05  FILLER PIC X(33) VALUE 'GIBC.PRODCICS'.\n011200     05  FILLER PIC X(4)  VALUE 'KX20'.\n011300     05  FILLER PIC X(33) VALUE 'INTERQ.PROD.COB2.LOAD'.\n011704     05  FILLER PIC X(4)  VALUE HIGH-VALUES.\n011710     05  FILLER PIC X(33) VALUE '????UNKNOWN.LOADLIB?????'.\n011900\n012000 01  DSNAME-TABLE REDEFINES DSNAMES-ARRAY.\n012100     05  DSNAME-TABLE-ENTRY               OCCURS 23 TIMES\n012200                                          INDEXED BY I.\n012300         10  TBL-ARG                      PIC X(4).\n012400         10  TBL-DSNAME                   PIC X(33).\n012500\n012600 PROCEDURE DIVISION.\n012700 0000-EXECUTIVE-CONTROL.\n012800     PERFORM 9900-INITIALIZATION.\n012900     PERFORM 1000-MAINLINE UNTIL MACHINE-EOF.\n013000     PERFORM 9990-END-OF-JOB.\n013100     GOBACK.\n013200\n013300 1000-MAINLINE.\n013400      READ MACHINE-FILE\n013500         AT END PERFORM 8000-END-OF-FILE.\n013600      IF MACHINE-EOF\n013700          NEXT SENTENCE\n013800      ELSE\n013900          ADD +1 TO MACHINE-RECORDS-READ\n014000          PERFORM 2000-CHECK-MODULE-CHANGE\n014100          PERFORM 3000-PROCESS-THIS-CSECT.\n014200\n014300 2000-CHECK-MODULE-CHANGE.\n014400      IF (MRMEM NOT EQUAL CURRENT-MODULE) OR\n014500          (MRUSRDAT NOT EQUAL CURRENT-USRDAT)\n014600              PERFORM 7000-MODULE-ANALYSIS\n014700              PERFORM 6000-INITIALIZE-NEW-MODULE.\n014800\n014900 3000-PROCESS-THIS-CSECT.\n015000     IF MRCSECT(1:3) = 'IP3'\n015100       MOVE 'IP3...' TO RPT-IP3.\n015200     IF MRCSECT(1:3) = 'IBM'\n015300       MOVE 'IBM...' TO RPT-IBM.\n015400     IF MRCSECT = 'PLISTART'\n015500       MOVE 'PLISTART' TO RPT-PLISTART.\n015600     IF MRCSECT = 'PLIMAIN'\n015700       MOVE 'PLIMAIN' TO RPT-PLIMAIN.\n018010     IF MRTYPE = 'PM'\n018100           MOVE 'PM' TO RPT-TYPE-PM.\n018200     IF MRTYPE = 'PR'\n018300           MOVE 'PR' TO RPT-TYPE-PR.\n018400     IF MRTYPE = 'P1'\n018500           MOVE 'P1' TO RPT-TYPE-P1.\n018600     IF MRTYPE = 'P2'\n018700           MOVE 'P2' TO RPT-TYPE-P2.\n020000\n020100 6000-INITIALIZE-NEW-MODULE.\n020200     MOVE MRMEM TO CURRENT-MODULE.\n020300     MOVE MRUSRDAT TO CURRENT-USRDAT.\n020600     MOVE SPACES TO REPORT-RECORD.\n021000\n021100 7000-MODULE-ANALYSIS.\n021500     IF RPT-MODULE-ATTRIBUTES = SPACES\n021600         NEXT SENTENCE\n021700     ELSE\n021900         MOVE CURRENT-MODULE TO RPT-MEMBER-NAME\n022000         PERFORM VARYING I FROM 1 BY 1\n022100             UNTIL TBL-ARG(I) = CURRENT-USRDAT\n022200             OR TBL-ARG(I) = HIGH-VALUES\n022300         END-PERFORM\n022400         MOVE TBL-DSNAME(I) TO RPT-DSNAME\n022500         WRITE REPORT-RECORD\n022600         MOVE SPACES TO REPORT-RECORD.\n022700\n022800 8000-END-OF-FILE.\n022900      IF MACHINE-RECORDS-READ EQUAL ZERO\n023000          DISPLAY 'NULL MACHINE INPUT FILE ENCOUNTERED - INVALID'\n023100          CALL 'ILBOABN0'\n023200      ELSE\n023300          IF (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 0)\n023400              AND (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 1)\n023500     DISPLAY 'UNEXPECTED FILE STATUS AFTER MACHINE FILE READ ='\n023600                      MACHINE-FILE-STATUS\n023700                  CALL 'ILBOABN0'.\n023800\n023900 9900-INITIALIZATION.\n024000     OPEN INPUT MACHINE-FILE.\n024100     IF (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 0)\n024200         AND (MACHINE-FILE-STATUS-BYTE1 NOT EQUAL 1)\n024300           DISPLAY 'UNEXPECTED FILE STATUS AFTER MACHINE OPEN = '\n024400                 MACHINE-FILE-STATUS\n024500             CALL 'ILBOABN0'.\n024600     OPEN OUTPUT REPORT-FILE.\n024700     IF ( REPORT-FILE-STATUS-BYTE1 NOT EQUAL 0 )\n024800       DISPLAY 'UNEXPECTED FILE STATUS AFTER REPORT FILE OPEN = '\n024900             REPORT-FILE-STATUS\n025000         CALL 'ILBOABN0'.\n025100     MOVE SPACES TO REPORT-RECORD.\n025200\n025300 9990-END-OF-JOB.\n025400      PERFORM 7000-MODULE-ANALYSIS\n025500     CLOSE MACHINE-FILE.\n025600     CLOSE REPORT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BMPCOBOL": {"ttr": 1793, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x009\\x00\\x93\\x07\\x0f\\x01\\x02\\x00O\\x12)\\x00D\\x00D\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "2002-01-04T12:29:39", "lines": 68, "newlines": 68, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  BMPCOBOL.\n000300 AUTHOR. R THORNTON.\n000400 REMARKS. THIS PROGRAM PROVIDES ACCESS TO THE IMS MESSAGE QUEUE T\n000500          WRITE MESSAGES DIRECTLY TO TERMINALS. THE PSB USED IS\n000600          DXT0500P, WHICH HAS AN IOPCB AND A MODIFIABLE ALTERNATE\n000700          PCB SPECIFIED.\n000800 ENVIRONMENT DIVISION.\n000900 INPUT-OUTPUT SECTION.\n001000 FILE-CONTROL.\n001100     SELECT MESSAGE-FILE ASSIGN TO UT-S-READER1.\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  MESSAGE-FILE\n001500     BLOCK CONTAINS 0 RECORDS\n001600     RECORD CONTAINS 80 CHARACTERS\n001700     LABEL RECORDS ARE OMITTED\n001800     DATA RECORD IS MESSAGE-RECORD.\n001900 01  MESSAGE-RECORD.\n002000     05  MESSAGE-TEXT           PIC X(80).\n002100 WORKING-STORAGE SECTION.\n002200 77  FILLER                      PIC X(36)  VALUE\n002300     'BMPCOBOL WORKING STORAGE BEGINS HERE'.\n002400 01  MISCELLANEOUS-STORAGE-AREAS.\n002500     05  HM00A5                  PIC X(08) VALUE 'HM00A5'.\n002600     05  EOF-SWITCH              PIC X VALUE ' '.\n002700         88 END-OF-INPUT         VALUE 'E'.\n002800 01  TERMINAL-MESSAGE-AREA.\n002900     05  MESSAGE-LENG            PIC S9(4) COMP VALUE +4.\n003000     05  FILLER                  PIC S9(4) COMP VALUE ZEROS.\n003100     05  MESSAGE-LINE            OCCURS 10 TIMES\n003200                                 INDEXED BY MSG-LINE-NBR\n003300                                 PIC X(80).\n003400 01  IMS-COMMANDS                COPY IMSSFUN0.\n003500 01  IMS-STATUS-CODES            COPY IMSSSTA0.\n003600 LINKAGE SECTION.\n003700 01  IOPCB                   COPY IOPCB.\n003800 01  ALTPCB                  COPY ALTPCB.\n003900 PROCEDURE DIVISION USING IOPCB, ALTPCB.\n004000     PERFORM A100-INITIALIZE.\n004100     PERFORM B100-MAIN-PROCESS UNTIL END-OF-INPUT.\n004200     PERFORM Z900-TERMINATE.\n004300     GOBACK.\n004400 A100-INITIALIZE.\n004500     OPEN INPUT MESSAGE-FILE.\n004600 B100-MAIN-PROCESS.\n004700     PERFORM C100-READ-CARDS\n004800         VARYING MSG-LINE-NBR FROM 1 BY 1\n004900             UNTIL MSG-LINE-NBR IS GREATER THAN 10\n005000             OR END-OF-INPUT.\n005100        PERFORM D100-INSERT-TO-TERMINAL.\n005200 C100-READ-CARDS.\n005300     READ MESSAGE-FILE\n005400         AT END MOVE 'E' TO EOF-SWITCH.\n005500     IF NOT END-OF-INPUT\n005600         MOVE MESSAGE-TEXT TO MESSAGE-LINE (MSG-LINE-NBR)\n005700         ADD 80 TO MESSAGE-LENG.\n005800 D100-INSERT-TO-TERMINAL.\n005900     CALL 'CBLTDLI' USING CHNG-FUNCTION-CODE,\n006000                          ALTPCB,\n006100                          HM00A5.\n006200     CALL 'CBLTDLI' USING ISRT-FUNCTION-CODE,\n006300                          ALTPCB,\n006400                          TERMINAL-MESSAGE-AREA.\n006500     CALL 'CBLTDLI' USING PURG-FUNCTION-CODE,\n006600                          ALTPCB.\n006700 Z900-TERMINATE.\n006800     CLOSE MESSAGE-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "BRCHVERB": {"ttr": 1795, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00!\\x01\\x02\\x00\\x7f\\x01\\x02\\x00\\x7f\\x14\\x06\\x00\\x9e\\x00\\x97\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2002-01-07T00:00:00", "modifydate": "2002-01-07T14:06:21", "lines": 158, "newlines": 151, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.    BRCHVERB.                                               00\n000300 AUTHOR. R THORNTON.                                                    00\n000400*REMARKS. SHOWS EXAMPLES OF VARIOUS COBOL VERBS, PRINCIPALLY THOSE      00\n000500*         INVOLVING CALLS, GOTO'S, ALTERS, PERFORMS, ETC.\n000600 ENVIRONMENT DIVISION.                                                  00\n000700 CONFIGURATION SECTION.                                                 00\n000800 INPUT-OUTPUT SECTION.                                                  00\n000900 FILE-CONTROL.                                                          00\n001000     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.                           00\n001100     SELECT OUTPUT-FILE ASSIGN TO UT-S-OUTPUT1.                         00\n001200 DATA DIVISION.                                                         00\n001300 FILE SECTION.                                                          00\n001400                                                                        00\n001500 FD INPUT-FILE                                                          00\n001600     RECORD CONTAINS 80 CHARACTERS                                      00\n001700     RECORDING MODE IS F                                                00\n001800     BLOCK CONTAINS 0 RECORDS                                           00\n001900     LABEL RECORD IS STANDARD                                           00\n002000     DATA RECORD IS INPUT-RECORD.                                       00\n002100                                                                        00\n002200 01  INPUT-RECORD.                                                      00\n002300     05  FILLER              PIC X(80).                                 00\n002400                                                                        00\n002500 FD OUTPUT-FILE                                                         00\n002600     RECORD CONTAINS 80 CHARACTERS                                      00\n002700     RECORDING MODE IS F                                                00\n002800     BLOCK CONTAINS 0 RECORDS                                           00\n002900     LABEL RECORD IS STANDARD                                           00\n003000     DATA RECORD IS INPUT-RECORD.                                       00\n003100                                                                        00\n003200 01  OUTPUT-RECORD.                                                     00\n003300     05  FILLER              PIC X(80).                                 00\n003400                                                                        00\n003500 WORKING-STORAGE SECTION.                                               00\n003600 77  FILLER PIC X(36)  VALUE                                            00\n003700     'BRCHVERB WORKING STORAGE BEGINS HERE'.                            00\n003800                                                                        00\n003900 01  MISCELLANEOUS-AREAS.                                               00\n004000     05 EOJ-SWITCH               PIC X VALUE 'N'.                       00\n004100        88 PROCESSING-FINISHED   VALUE 'Y'.                             00\n004200     05 EOF-SWITCH               PIC X VALUE 'N'.                       00\n004300        88 NO-MORE-INPUT         VALUE 'Y'.                             00\n004400        88 MORE-INPUT            VALUE 'N'.                             00\n004500     05 TEXT-STRING              PIC XXX VALUE 'YES'.\n004600     05 ACCEPTED-DATE            PIC 9(6).\n004700     05 BINARY-HALFWORD          PIC S99V99 BINARY.\n004800     05 BINARY-FULLWORD          PIC S9(5)V99 BINARY.\n004900     05 BINARY-DOUBLEWORD        PIC S9(7)V99 BINARY.\n005000     05 ZONED-NUMBER             PIC S9(6)V9.\n005100     05 PACKED-NUMBER            PIC S9(6)V999 COMP-3.\n005200     05 FLOATING-POINT-SHORT     COMP-1.\n005300     05 FLOATING-POINT-LONG      COMP-2.\n005400     05 INDEX-CELL               INDEX.\n005500                                                                        00\n005600 01  ANOTHER-AREA.                                                      00\n005700     05  SUBSCRIPTED-TABLE-ENTRY OCCURS 20 TIMES.\n005800         10  ST-FIELD1           PIC X.\n005900         10  ST-FIELD2           PIC 9(5).\n006000         10  ST-FIELD3           PIC 9(3) COMP-3.\n006100         10  ST-SUBENTRY         OCCURS 5 TIMES.\n006200             15  STS-FIELD1      PIC X(5).\n006300             15  STS-FIELD2      PIC S9(5)V99 COMP-3.\n006400     05  INDEXED-TABLE-ENTRY     OCCURS 30 TIMES\n006500                                 ASCENDING KEY IS IT-KEY\n006600                                 INDEXED BY IX1.\n006700         10  IT-FIELD1           PIC X(20).\n006800         10  IT-KEY              PIC X(5).\n006900         10  IT-FIELD2           PIC S9(5)V99 COMP.\n007000         10  IT-FIELD3           COMP-2.\n007100         10  IT-SUBENTRY         OCCURS 5 TIMES\n007200                                 INDEXED BY IX2.\n007300             15  ITS-FIELD1      PIC X(5).\n007400             15  ITS-FIELD2      PIC S9(5)V99 COMP-3.\n007500     05  ROUTINE-NAME            PIC X(8) VALUE 'GETDATE'.\n007600     05  SUB1                    PIC 99.\n007700     05  SUB2                    PIC S99 COMP.\n007800                                                                        00\n007900 PROCEDURE DIVISION.                                                    00\n008000     PERFORM A000-INITIALIZATION.\n008100     PERFORM B000-MAINLINE THRU B000-EXIT\n008200         UNTIL PROCESSING-FINISHED.\n008300     PERFORM Z000-TERMINATION THRU Z000-EXIT.\n008400     GOBACK.\n008500\n008600 A000-INITIALIZATION.\n008700     INSPECT TEXT-STRING REPLACING ALL 'Y' BY 'Z'.\n008800     OPEN INPUT  INPUT-FILE,\n008900          OUTPUT OUTPUT-FILE.\n008910     INITIALIZE MISCELLANEOUS-AREAS.\n008920     STRING TEXT-STRING  DELIMITED BY SIZE,\n008921            ' ' DELIMITED BY SIZE\n008930            ROUTINE-NAME DELIMITED BY '/'\n008950         INTO OUTPUT-RECORD.\n008960     MOVE ROUTINE-NAME(1:4) TO TEXT-STRING.\n009000\n009100 B000-MAINLINE.\n009200     CALL ROUTINE-NAME.\n009210     CANCEL ROUTINE-NAME.\n009300     CALL ROUTINE-NAME USING PACKED-NUMBER, ZONED-NUMBER.\n009400     ALTER C000-EXIT TO PROCEED TO B000-RETURN-HERE.\n009500     GO TO C000-STATIC-CALLS.\n009600 B000-RETURN-HERE.\n009700     ALTER C000-EXIT TO PROCEED TO D000-SUBSCRIPT-MOVES.\n009800     IF PROCESSING-FINISHED\n009900         CONTINUE\n010000     ELSE\n010100         ADD +1.34 TO PACKED-NUMBER.\n010200     IF MORE-INPUT\n010300         NEXT SENTENCE\n010400     ELSE\n010500         SUBTRACT 1.34 FROM PACKED-NUMBER.\n010600 B000-EXIT. EXIT.\n010700\n010800 C000-STATIC-CALLS.\n010900     CALL 'GETDATE'.\n011000     CALL 'GETDATE' USING PACKED-NUMBER, ZONED-NUMBER.\n011100     PERFORM E000-INDEXED-MOVES THRU E000-EXIT.\n011200     EVALUATE TEXT-STRING\n011300         WHEN 'YES' ADD 1 TO ZONED-NUMBER\n011400         WHEN 'NO' PERFORM Z000-TERMINATION\n011500         WHEN '   ' SET IX1 TO IX2\n011600         WHEN OTHER MOVE 'OTH' TO TEXT-STRING.\n011700 C000-EXIT. GO TO.\n011800\n011900 D000-SUBSCRIPT-MOVES.\n012000     MOVE 1 TO SUB1.\n012100     MOVE ST-FIELD1 (SUB1) TO EOF-SWITCH.\n012200     PERFORM E000-INDEXED-MOVES VARYING SUB1 FROM 1 BY 1 UNTIL\n012300         SUB1 IS GREATER THAN 20 OR\n012400         NO-MORE-INPUT.\n012500     MOVE STS-FIELD2 (SUB1, SUB2) TO PACKED-NUMBER.\n012600     SET IX1 TO 1.\n012700     SET IX2 TO INDEX-CELL.\n012800 D000-EXIT. EXIT.\n012900\n013000 E000-INDEXED-MOVES.\n013100     SET IX1 TO 1.\n013200     MOVE IT-FIELD1 (IX1) TO TEXT-STRING.\n013300     MOVE ITS-FIELD2 (IX1, IX2) TO PACKED-NUMBER.\n013400     SEARCH INDEXED-TABLE-ENTRY VARYING IX1\n013500         AT END GO TO E000-EXIT\n013600         WHEN IT-FIELD2(IX1) IS GREATER THAN 6.3\n013700             ADD 5.05 TO PACKED-NUMBER\n013800         WHEN TEXT-STRING IS EQUAL TO 'NO'\n013900             NEXT SENTENCE\n014000     END-SEARCH.\n014100\n014200     SEARCH ALL INDEXED-TABLE-ENTRY\n014300         AT END\n014400             MOVE 'Y' TO EOJ-SWITCH\n014500         WHEN IT-KEY (IX1) IS EQUAL TO 'DATA '\n014600             GO TO Z000-TERMINATION.\n014700 E000-EXIT. EXIT.\n014800\n014900 Z000-TERMINATION.\n015000     CLOSE INPUT-FILE OUTPUT-FILE.\n015100 Z000-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLABDP": {"ttr": 1799, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x16\\x01\\x02\\x11_\\x01\\x02\\x11_\\x14T\\x00\\x1c\\x00\\x1c\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-04-25T00:00:00", "modifydate": "2002-04-25T14:54:16", "lines": 28, "newlines": 28, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLABDP.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET TO TEST CALLS TO ABDUMP.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000701 FILE-CONTROL.\n000702     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  PRINT-FILE\n000830     BLOCK CONTAINS 0 RECORDS\n000840     RECORDING MODE IS F\n000850     LABEL RECORDS ARE STANDARD\n000860     RECORD CONTAINS 80 CHARACTERS\n000870     DATA RECORD IS PRINT-LINE.\n000880 01  PRINT-LINE                 PIC X(80).\n000890\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLABDP WORKING STORAGE BEGINS HERE'.\n001200 01  MISC-AREAS.\n001300     05  ABDUMP            PIC X(8) VALUE 'ABDUMP'.\n001700 PROCEDURE DIVISION.\n002900     OPEN OUTPUT PRINT-FILE.\n003000     CALL ABDUMP.\n003200     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLABOV": {"ttr": 1801, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x03\\x00\\x93)_\\x01\\x02\\x00O\\x120\\x00\"\\x00\\x13\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "1993-10-22T00:00:00", "modifydate": "2002-01-04T12:30:03", "lines": 34, "newlines": 19, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLABOV.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. USED AS A COBOL II PROGRAM TO CALL WHEREAMI FROM ABOVE\n000410*         THE 16 MEGABYTE LINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLABV WORKING STORAGE BEGINS HERE'.\n001200 77  WHEREAMI-RETURN-BYTE    PIC X VALUE '?'.\n001300 77  BINARY-FIELD PIC S9(4) BINARY VALUE 234.\n001310 77  BINARY-FULLWORD PIC S9(9) BINARY VALUE 234.\n001320 77  BINARY-DOUBLEWORD PIC S9(18) BINARY VALUE 234.\n001400 77  DECIMAL-FIELD PIC S9(5)V99 COMP-3 VALUE +567.89.\n001500 77  ZONED-FIELD PIC S9(3)V9 VALUE -61.6.\n001600 77  RESULT-FIELD PIC ZZZ,ZZZ,ZZ9.99.\n001610 77  GETJOBN-NAME PIC X(8) VALUE 'GETJOBN'.\n001620 77  JOB-NAME PIC X(8).\n001700 PROCEDURE DIVISION.\n001800     IF BINARY-FIELD IS POSITIVE ADD 1 TO BINARY-FIELD.\n001900     IF DECIMAL-FIELD IS NEGATIVE SUBTRACT 1 FROM DECIMAL-FIELD.\n002000     IF ZONED-FIELD IS NUMERIC ADD 1 TO ZONED-FIELD.\n002100     COMPUTE RESULT-FIELD = (ZONED-FIELD ** 2) + DECIMAL-FIELD\n002200         - BINARY-FIELD.\n002900*    CALL 'WHEREAMI' USING WHEREAMI-RETURN-BYTE.\n003000*    DISPLAY 'WHEREAMI-RETURN-BYTE = ' WHEREAMI-RETURN-BYTE.\n003100     CALL GETJOBN-NAME USING JOB-NAME.\n003110     DISPLAY 'BACK FROM GETJOBN WITH JOB NAME = ' JOB-NAME.\n003200     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLALDY": {"ttr": 1803, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x07\\x00\\x94\\x05o\\x01\\x02\\x00O\\x121\\x01\\x08\\x01\\x1e\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-02-25T00:00:00", "modifydate": "2002-01-04T12:31:07", "lines": 264, "newlines": 286, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLALDY.\n000300*AUTHOR. R THORNTON\n000400*REMARKS. USED TO TEST DYNAMIC ALLOCATIONS WITHOUT UNIT PARAMETER\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n001100 DATA DIVISION.\n003392\n003400 WORKING-STORAGE SECTION.\n003500 77  FILLER PIC X(36)  VALUE\n003600     'CALLALDY WORKING STORAGE BEGINS HERE'.\n004300\n004400 01  ALLOCATE-DATA.\n004500     05  DDNAME                      PIC X(8).\n004600     05  DSNAME-DUMMY-SYSOUT         PIC X(44).\n004700     05  MEMBER-NAME-GENERATION      PIC X(8).\n004800     05  CURRENT-STATUS              PIC S9(4) COMP.\n004900         88  STATUS-OLD                VALUE +1.\n005000         88  STATUS-MOD                VALUE +2.\n005100         88  STATUS-NEW                VALUE +4.\n005200         88  STATUS-SHR                VALUE +8.\n005300     05  NORMAL-DISPOSITION          PIC S9(4) COMP.\n005400         88  NORM-UNCATLG              VALUE +1.\n005500         88  NORM-CATLG                VALUE +2.\n005600         88  NORM-DELETE               VALUE +4.\n005700         88  NORM-KEEP                 VALUE +8.\n005800     05  CONDITIONAL-DISPOSITION     PIC S9(4) COMP.\n005900         88  COND-UNCATLG              VALUE +1.\n006000         88  COND-CATLG                VALUE +2.\n006100         88  COND-DELETE               VALUE +4.\n006200         88  COND-KEEP                 VALUE +8.\n006300     05  UNIT-NAME                   PIC X(8).\n006400     05  UNIT-COUNT                  PIC S9(4) COMP.\n006500     05  VOLUME-SERIAL               PIC X(6)\n006600                                       OCCURS 6 TIMES.\n006700     05  LABEL-TYPE                  PIC S9(4) COMP.\n006800         88  NO-LABELS                 VALUE +1.\n006900         88  STANDARD-LABELS           VALUE +2.\n007000         88  BYPASS-LABELS             VALUE +16.\n007100     05  DATASET-SEQUENCE            PIC S9(4) COMP.\n007200     05  FREE-EQU-CLOSE-INDIC        PIC X.\n007300     05  RETENTION-PERIOD-DAYS       PIC S9(4) COMP.\n007400     05  RECORDING-MODE-SUM          PIC S9(4) COMP.\n007500         88  F-FIXED-RECORDS           VALUE +128.\n007600         88  V-VARIABLE-RECORDS        VALUE +64.\n007700         88  U-UNDEFINED-RECORDS       VALUE +192.\n007800         88  D-OR-T-ADD                VALUE +32.\n007900         88  B-BLOCKED-RECORDS-ADD     VALUE +16.\n008000         88  S-STANDARD-SPANNED-ADD    VALUE +8.\n008100         88  A-ASA-PRINT-CONTROL-ADD   VALUE +4.\n008200         88  M-MACHINE-CODE-CONTROL-ADD VALUE +2.\n008300     05  LOGICAL-RECORD-LENGTH       PIC S9(4) COMP.\n008400     05  BLOCK-LENGTH                PIC S9(4) COMP.\n008500     05  TAPE-DENSITY                PIC S9(4) COMP.\n008600         88  200-BPI                   VALUE +3.\n008700         88 556-BPI                    VALUE +67.\n008800         88 800-BPI                    VALUE +131.\n008900         88 1600-BPI                   VALUE +195.\n009000         88 6250-BPI                   VALUE +211.\n009100     05  NUMBER-BUFFERS              PIC S9(4) COMP.\n009200     05  KEY-LENGTH                  PIC S9(4) COMP.\n009300     05  DATASET-ORGANIZATION        PIC S9(4) COMP.\n009400         88 VSAM-DATASET               VALUE +8.\n009500         88 GRAPHICS-GS                VALUE +128.\n009600         88 PARTITIONED-DATASET        VALUE +512.\n009700         88 PARTITIONED-UNMOVABLE      VALUE +768.\n009800         88 DIRECT-DATASET             VALUE +8192.\n009900         88 DIRECT-UNMOVABLE           VALUE +8448.\n010000*        88 PHYSICAL-SEQUENTIAL        VALUE +16384.\n010100*        88 PHYSICAL-UNMOVABLE         VALUE +16640.\n010200     05  SPACE-TYPE                  PIC X.\n010300         88 CYLINDER-REQUEST           VALUE 'C'.\n010400         88 TRACK-REQUEST              VALUE 'T'.\n010500     05  PRIMARY-SPACE-AMOUNT        PIC S9(8) COMP.\n010600     05  SECONDARY-SPACE-AMOUNT      PIC S9(8) COMP.\n010700     05  RELEASE-SPACE-INDIC         PIC X.\n010800     05  NBR-DIRECTORY-BLOCKS        PIC S9(8) COMP.\n010900     05  EXPIRATION-DATE-CENTURY     PIC X(2).\n011000     05  EXPIRATION-DATE-YYDDD       PIC X(5).\n011100     05  AVG-BLKSIZE-FOR-SPACE       PIC S9(8) COMP.\n011200     05  SPACE-FORMAT-TYPE           PIC S9(4) COMP.\n011300         88  ALX-SPACE                 VALUE +2.\n011400         88  MXIG-SPACE                VALUE +4.\n011500         88  CONTIG-SPACE              VALUE +8.\n011600     05  SPACE-ROUNDING-INDIC        PIC X.\n011700     05  PRIVATE-VOLUME-INDIC        PIC X.\n011800     05  VOLUME-SEQUENCE-NUMBER      PIC S9(4) COMP.\n011900     05  VOLUME-COUNT                PIC S9(4) COMP.\n012000     05  DSNAME-FOR-VOL-REF          PIC X(44).\n012100     05  PARALLEL-MOUNT-INDIC        PIC X.\n012200     05  SYSOUT-PROGRAM-NAME         PIC X(8).\n012300     05  SYSOUT-FORM-NUMBER          PIC X(4).\n012400     05  SYSOUT-OUTLIM               PIC S9(8) COMP.\n012500     05  NUMBER-SYSOUT-COPIES        PIC S9(4) COMP.\n012600     05  PASSWORD-PROTECTION         PIC S9(4) COMP.\n012700         88  PASSWORD-ALL-REFERENCES   VALUE +16.\n012800         88  NO-PASSWORD-TO-READ       VALUE +48.\n012900     05  INPUT-OUTPUT-ONLY           PIC S9(4) COMP.\n013000         88  INPUT-ONLY                VALUE +64.\n013100         88  OUTPUT-ONLY               VALUE +128.\n013200     05  FCB-IMAGE-NAME              PIC X(4).\n013300     05  FCB-ALIGN-VERIFY            PIC S9(4) COMP.\n013400         88  CHECK-FCB-ALIGN           VALUE +8.\n013500         88  VERIFY-FCB                VALUE +4.\n013600     05  USE-TSO-TERMINAL-INDIC      PIC X.\n013700     05  UCS-IMAGE-NAME              PIC X(4).\n013800     05  FOLD-MODE-INDIC             PIC X.\n013900     05  CHAIN-MOUNT-VERIFY-INDIC    PIC X.\n014000     05  DCB-MODEL-DSNAME            PIC X(44).\n014100     05  DCB-DDNAME-BACKREF          PIC X(26).\n014200     05  ERROR-OPTION                PIC S9(4) COMP.\n014300         88  EROPT-EQU-T               VALUE +16.\n014400         88  EROPT-EQU-ABE             VALUE +32.\n014500         88  EROPT-EQU-SKP             VALUE +48.\n014600         88  EROPT-EQU-ACC             VALUE +128.\n014700     05  NCP-READ-WRITE-BEFORE-CHECK PIC S9(4) COMP.\n014800     05  OPTION-CODES-SUM            PIC S9(4) COMP.\n014900         88  OPTCD-EQU-R-OR-J          VALUE +1.\n015000         88  OPTCD-EQU-T               VALUE +2.\n015100         88  OPTCD-EQU-Z               VALUE +4.\n015200         88  OPTCD-EQU-A-OR-Q          VALUE +8.\n015300         88  OPTCD-EQU-F-OR-H-OR-O     VALUE +16.\n015400         88  OPTCD-EQU-C-OR-E          VALUE +32.\n015500         88  OPTCD-EQU-B-OR-U          VALUE +64.\n015600         88  OPTCD-EQU-W               VALUE +128.\n015700     05  PRINTER-SPACING              PIC S9(4) COMP.\n015800         88  NO-SPACED-PRINT            VALUE +1.\n015900         88  SINGLE-SPACED-PRINT        VALUE +9.\n016000         88  DOUBLE-SPACED-PRINT        VALUE +17.\n016100         88  TRIPLE-SPACED-PRINT        VALUE +25.\n016200     05  TRTCH-7-TRACK-TAPE           PIC S9(4) COMP.\n016300         88  NON-COMPACTION             VALUE +4.\n016400         88  COMPACTION                 VALUE +8.\n016500         88  TRTCH-EQU-C                VALUE +19.\n016600         88  TRTCH-EQU-E                VALUE +35.\n016700         88  TRTCH-EQU-ET               VALUE +43.\n016800         88  TRTCH-EQU-T                VALUE +59.\n016900     05  PASSWORD-VALUE               PIC X(32).\n017000     05  DIAGNOSTIC-TRACE-INDIC       PIC X.\n017100     05  SYSOUT-DEST-NODE-NAME        PIC X(8).\n017200     05  SYSOUT-HOLD-QUEUE-INDIC      PIC X.\n017300     05  SYSOUT-DEST-USERID           PIC X(8).\n017400     05  SYSOUT-BURSTER-STACKER       PIC S9(4) COMP.\n017500         88  BURST-EQU-YES              VALUE +2.\n017600         88  BURST-EQU-NO               VALUE +4.\n017700     05  CHARACTER-ARRANGEMENT-TABLE  PIC X(4)\n017800                                        OCCURS 4 TIMES.\n017900     05  SYSOUT-COPY-GROUP-VALUE      PIC S9(4) COMP\n018000                                        OCCURS 8 TIMES.\n018100     05  SYSOUT-FLASH-OVERLAY-NAME    PIC X(4).\n018200     05  SYSOUT-FLASH-OVERLAY-COUNT   PIC S9(4) COMP.\n018300     05  COPY-MODIFY-MODULE-NAME      PIC X(4).\n018400     05  COPY-MODULE-TRC              PIC S9(4) COMP.\n018500         88  FIRST-CHAR-ARR-TABLE       VALUE +0.\n018600         88  SECOND-CHAR-ARR-TABLE      VALUE +1.\n018700         88  THIRD-CHAR-ARR-TABLE       VALUE +2.\n018800         88  FOURTH-CHAR-ARR-TABLE      VALUE +3.\n018900     05  DEFER-MOUNT-INDIC            PIC X.\n019000     05  OUTPUT-STATEMENT-REFERENCE   PIC X(26)\n019100                                        OCCURS 8 TIMES.\n019200     05  CNTL-STATEMENT-REFERENCE     PIC X(26).\n019300     05  SMS-STORCLAS-NAME            PIC X(8).\n019400     05  SMS-MGMTCLAS-NAME            PIC X(8).\n019500     05  SMS-DATACLAS-NAME            PIC X(8).\n019600     05  SMS-RECORD-ORGANIZATION      PIC S9(4) COMP.\n019700         88  VSAM-KSDS                  VALUE +128.\n019800         88  VSAM-ESDS                  VALUE +64.\n019900         88  VSAM-RRDS                  VALUE +32.\n020000         88  VSAM-LINEAR-SPACE          VALUE +16.\n020100     05  SMS-KEY-OFFSET               PIC S9(4) COMP.\n020200     05  SMS-REFDD                    PIC X(26).\n020300     05  SMS-LIKE-DSNAME              PIC X(44).\n020400     05  SMS-AVERAGE-RECORD-UNITS     PIC S9(4) COMP.\n020500         88  IN-SINGLE-RECORDS          VALUE +128.\n020600         88  IN-THOUSAND-RECORD-UNITS   VALUE +64.\n020700         88  IN-MILLION-RECORD-UNITS    VALUE +32.\n020800     05  SMS-DSNTYPE                  PIC S9(4) COMP.\n020900         88  PDSE-LIBRARY               VALUE +128.\n021000         88  OLD-STYLE-PDS              VALUE +64.\n021100\n021200\n021300 01  ALLOCATION-RESULT.\n021400     05  ALLOCDYN-REQUEST             PIC X.\n021500         88  ALLOCATION-REQUEST         VALUE 'A'.\n021600         88  VOLSER-REQUEST             VALUE 'V'.\n021700     05  ALLOCDYN-RETURN-CODE         PIC XX.\n021800         88  SUCCESSFUL-ALLOCATION      VALUE '00'.\n021900         88  ENVIRONMENT-ERROR          VALUE '04'.\n022000         88  VALIDATION-DENIAL          VALUE '08'.\n022100         88  PARAMETER-ERROR            VALUE '12'.\n022200     05  ERROR-REASON-CODE.\n022300         10  CLASS-7-CODE             PIC X.\n022400         10  ERROR-CLASS              PIC X.\n022500             88  UNAVAILABLE-RESOURCE   VALUE '2'.\n022600             88  INVALID-PARAMETER-LIST VALUE '3'.\n022700             88  ERROR-IN-ENVIRONMENT   VALUE '4'.\n022800             88  SYSTEM-ROUTINE-ERROR   VALUE '7'.\n022900         10  SPECIFIC-ERROR-CODE      PIC XX.\n023000     05  ERROR-REASON-MESSAGE         PIC X(71).\n023100     05  INFORMATION-REASON           PIC X(4).\n023200     05  INFO-REASON-MESSAGE          PIC X(71).\n023300\n023400\n023500 PROCEDURE DIVISION.\n024400     MOVE LOW-VALUES TO ALLOCATE-DATA.\n024500     MOVE 'OUTPUT4' TO DDNAME.\n024600     MOVE 'USER02.OUTPUT4.FILE' TO\n024700           DSNAME-DUMMY-SYSOUT.\n024800     MOVE +4 TO CURRENT-STATUS.\n024900     MOVE +2 TO NORMAL-DISPOSITION.\n025000     MOVE 'T' TO SPACE-TYPE.\n025800     MOVE +1 TO PRIMARY-SPACE-AMOUNT.\n026000     MOVE 'A' TO ALLOCDYN-REQUEST.\n026200     CALL 'ALLOCDYN' USING ALLOCATE-DATA, ALLOCATION-RESULT.\n026300     IF SUCCESSFUL-ALLOCATION\n026400         NEXT SENTENCE\n026500     ELSE DISPLAY 'UNABLE TO ALLOCATE OUTPUT4: RETURN CODE='\n026600                   ALLOCDYN-RETURN-CODE\n026700          DISPLAY '   ERROR-REASON-CODE=' ERROR-REASON-CODE\n026800                   ': ' ERROR-REASON-MESSAGE\n026900          DISPLAY '   INFORMATION-REASON=' INFORMATION-REASON\n027000                   ': ' INFO-REASON-MESSAGE\n027100          CALL 'COBABEND'.\n027110     MOVE LOW-VALUES TO ALLOCATE-DATA.\n027120     MOVE 'OUTPUT5' TO DDNAME.\n027130     MOVE 'USER02.TST.OUTPUT5.FILE' TO\n027140           DSNAME-DUMMY-SYSOUT.\n027150     MOVE +4 TO CURRENT-STATUS.\n027160     MOVE +2 TO NORMAL-DISPOSITION.\n027170     MOVE 'T' TO SPACE-TYPE.\n027180     MOVE +1 TO PRIMARY-SPACE-AMOUNT.\n027190     MOVE 'A' TO ALLOCDYN-REQUEST.\n027191     CALL 'ALLOCDYN' USING ALLOCATE-DATA, ALLOCATION-RESULT.\n027192     IF SUCCESSFUL-ALLOCATION\n027193         NEXT SENTENCE\n027194     ELSE DISPLAY 'UNABLE TO ALLOCATE OUTPUT5: RETURN CODE='\n027195                   ALLOCDYN-RETURN-CODE\n027196          DISPLAY '   ERROR-REASON-CODE=' ERROR-REASON-CODE\n027197                   ': ' ERROR-REASON-MESSAGE\n027198          DISPLAY '   INFORMATION-REASON=' INFORMATION-REASON\n027199                   ': ' INFO-REASON-MESSAGE\n027200          CALL 'COBABEND'.\n027210     MOVE LOW-VALUES TO ALLOCATE-DATA.\n027300     MOVE 'OUTPUT6' TO DDNAME.\n027400     MOVE '&&OUTPUT6' TO\n027500           DSNAME-DUMMY-SYSOUT.\n027600     MOVE +4 TO CURRENT-STATUS.\n027700     MOVE +8 TO NORMAL-DISPOSITION.\n027800     MOVE 'T' TO SPACE-TYPE.\n027900     MOVE +1 TO PRIMARY-SPACE-AMOUNT.\n028000     MOVE 'A' TO ALLOCDYN-REQUEST.\n028100     CALL 'ALLOCDYN' USING ALLOCATE-DATA, ALLOCATION-RESULT.\n028200     IF SUCCESSFUL-ALLOCATION\n028300         NEXT SENTENCE\n028400     ELSE DISPLAY 'UNABLE TO ALLOCATE OUTPUT6: RETURN CODE='\n028500                   ALLOCDYN-RETURN-CODE\n028600          DISPLAY '   ERROR-REASON-CODE=' ERROR-REASON-CODE\n028700                   ': ' ERROR-REASON-MESSAGE\n028800          DISPLAY '   INFORMATION-REASON=' INFORMATION-REASON\n028900                   ': ' INFO-REASON-MESSAGE\n029000          CALL 'COBABEND'.\n029100     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLBLO": {"ttr": 1808, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00I\\x00\\x93)_\\x01\\x02\\x00O\\x121\\x00\\x16\\x00\\x13\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-10-22T00:00:00", "modifydate": "2002-01-04T12:31:49", "lines": 22, "newlines": 19, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLBLO.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. USED AS A VS COBOL PROGRAM TO CALL WHEREAMI FROM BELOW\n000410*         THE 16 MEGABYTE LINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLBLO WORKING STORAGE BEGINS HERE'.\n001200 77  WHEREAMI-RETURN-BYTE    PIC X VALUE '?'.\n001300 77  WHEREAMI-NAME PIC X(8) VALUE 'WHEREAMI'.\n001700 PROCEDURE DIVISION.\n002900     CALL 'WHEREAMI' USING WHEREAMI-RETURN-BYTE.\n003000     DISPLAY 'WHEREAMI-RETURN-BYTE = ' WHEREAMI-RETURN-BYTE.\n003100     CALL WHEREAMI-NAME USING WHEREAMI-RETURN-BYTE.\n003110     DISPLAY 'WHEREAMI-RETURN-BYTE = ' WHEREAMI-RETURN-BYTE.\n003200     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLCBLT": {"ttr": 2049, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00$\\x00\\x93\\x12?\\x01\\x02\\x00O\\x122\\x00\\x9f\\x002\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1993-05-03T00:00:00", "modifydate": "2002-01-04T12:32:24", "lines": 159, "newlines": 50, "modlines": 0, "user": "BC0THOR"}, "text": "000110 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.    CALLCBLT.                                               00\n000300 AUTHOR. R THORNTON                                                     00\n000400*REMARKS. TEST BUCKET FOR CALLING CBLTBCDP.                             00\n000500 ENVIRONMENT DIVISION.                                                  00\n000600 CONFIGURATION SECTION.                                                 00\n000700 INPUT-OUTPUT SECTION.                                                  00\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.\n000730     SELECT PRINT-FILE ASSIGN TO UT-S-PRINT1.\n000800*                                                                       00\n000900 DATA DIVISION.                                                         00\n000910 FILE SECTION.\n000920*\n000930 FD  INPUT-FILE\n000940     RECORD CONTAINS 80 CHARACTERS\n000950     RECORDING MODE IS F\n000960     BLOCK CONTAINS 0 RECORDS\n000970     LABEL RECORD IS STANDARD\n000980     DATA RECORD IS CONTROL-RECORD.\n000990*\n000991 01  CONTROL-RECORD.\n000992     05  CONTROL-FUNCTION-CODE     PIC XX.\n000993     05  FILLER                    PIC X.\n000994     05  CONTROL-RELATION-CODE     PIC XX.\n000995     05  FILLER                    PIC X.\n000996     05  CONTROL-KEY-VALUE         PIC X(28).\n000997     05  FILLER                    PIC X.\n000998     05  CONTROL-RELATION-CODE2    PIC XX.\n000999     05  FILLER                    PIC X.\n001000     05  CONTROL-KEY-VALUE2        PIC X(28).\n001001     05  FILLER                    PIC X(14).\n001008*\n001009 FD  PRINT-FILE\n001010     RECORD CONTAINS 80 CHARACTERS\n001011     RECORDING MODE IS F\n001012     BLOCK CONTAINS 0 RECORDS\n001013     LABEL RECORD IS STANDARD\n001014     DATA RECORD IS PRINT-RECORD.\n001015*\n001016 01  PRINT-RECORD.\n001017     05  FILLER                    PIC X(5).\n001018     05  CARR-CTL                  PIC X.\n001019     05  TAB1.\n001020         10  FILLER                PIC X(5).\n001021         10  TAB2.\n001022             15 FILLER             PIC X(5).\n001023             15 TAB3               PIC X(63).\n001024     05  FILLER                    PIC X.\n001025*\n001030 WORKING-STORAGE SECTION.                                               00\n001040*\n001200 77  FILLER PIC X(36)  VALUE                                            00\n001300     'CALLCBLT WORKING STORAGE BEGINS HERE'.                            00\n001400*\n001500 01  MISCELLANEOUS-AREAS.                                               00\n001600     05 BC-DBDANCHOR        PIC S9(5) COMP.                             00\n001610     05 IMS-STATUS-CODE     PIC XX VALUE '  '.                          00\n001620     05 CBLTBCDP-FUNCTION   PIC X(4) VALUE 'GU'.\n001630     05 BC-DBDNAME          PIC X(8) VALUE 'BCMAST  '.                  00\n001640     05 BC-RECORD-AREA      PIC X(500).\n001650     05 INPUT-SWITCH        PIC X VALUE 'N'.\n001660        88 MORE-INPUT       VALUE 'N'.\n001661        88 END-OF-INPUT     VALUE 'Y'.\n001670*\n001710 COPY HP10PCB.\n001720*\n001730 COPY HP10.\n001740*\n001810 COPY IMSSFUN0.\n001821*\n001830 01  SSA-HP10R.\n001840     05 SGN-HP10R            PIC X(8) VALUE 'HP10R   '.\n001850     05 CCA-HP10R            PIC X VALUE '*'.\n001860     05 CCF-HP10R            PIC X VALUE '-'.\n001870     05 BP-HP10R             PIC X VALUE '('.\n001880     05 FLN-HP10R            PIC X(8) VALUE 'NULLKEY0'.\n001890     05 RO-HP10R             PIC X(2) VALUE '=>'.\n001891     05 VALUE1-HP10R         PIC X(28) VALUE SPACES.\n001892     05 RO-AMPERSAND         PIC X VALUE ')'.\n001893     05 FLN-HP10R            PIC X(8) VALUE 'NULLKEY0'.\n001894     05 RO2-HP10R            PIC X(2) VALUE '=<'.\n001895     05 VALUE2-HP10R         PIC X(28) VALUE SPACES.\n001896     05 EP-HP10R             PIC X VALUE ')'.\n001897*\n001900 PROCEDURE DIVISION.                                                    00\n002000*\n002100 A100-EXECUTIVE-CONTROL.                                                00\n002101     PERFORM B100-INITIALIZATION.\n002102     PERFORM C100-MAINLINE\n002103         UNTIL END-OF-INPUT.\n002104     PERFORM Z100-TERMINATION.\n002105     GOBACK.                                                            00\n002106*\n002107 B100-INITIALIZATION.\n002108     MOVE 'OP' TO CBLTBCDP-FUNCTION.\n002109     CALL 'CBLTBCDP' USING CBLTBCDP-FUNCTION,                           00\n002110                           BC-DBDNAME,                                  00\n002111                           HP10R,                                       00\n002112                           BC-RECORD-AREA,\n002113                           BC-DBDANCHOR.\n002114     OPEN INPUT INPUT-FILE, OUTPUT PRINT-FILE.\n002115*\n002120 C100-MAINLINE.\n002121     PERFORM P100-READ-INPUT-FILE.\n002122     IF MORE-INPUT\n002123         PERFORM H100-CALL-CBLTBCDP\n002124         PERFORM L100-FORMAT-PRINTOUT.\n002125*\n002126 H100-CALL-CBLTBCDP.\n002127     MOVE CONTROL-FUNCTION-CODE TO CBLTBCDP-FUNCTION\n002128     MOVE CONTROL-RELATION-CODE TO RO-HP10R\n002129     MOVE CONTROL-KEY-VALUE TO VALUE1-HP10R\n002130     MOVE CONTROL-RELATION-CODE2 TO RO2-HP10R\n002131     MOVE CONTROL-KEY-VALUE2 TO VALUE2-HP10R\n002140     IF CONTROL-RELATION-CODE2 IS EQUAL TO SPACES\n002150         MOVE ')' TO RO-AMPERSAND\n002160     ELSE\n002170         MOVE '&' TO RO-AMPERSAND.\n002200     CALL 'CBLTBCDP' USING CBLTBCDP-FUNCTION,                           00\n002300                     PCB-HP10,                                          00\n002400                     HP10R,                                             00\n002410                     SSA-HP10R,\n002420                     BC-DBDANCHOR.\n002430     MOVE STC-HP10 TO IMS-STATUS-CODE.\n002431*\n002432 L100-FORMAT-PRINTOUT.\n002433     MOVE ' CONTROL CARD READ WAS: ' TO PRINT-RECORD.\n002434     PERFORM T100-PRINT-A-LINE.\n002435     MOVE SPACES TO PRINT-RECORD.\n002436     MOVE CONTROL-RECORD TO TAB1.\n002437     PERFORM T100-PRINT-A-LINE.\n002438     MOVE 'SSA CONTENT USED WAS: ' TO TAB1.\n002439     PERFORM T100-PRINT-A-LINE.\n002440     MOVE SPACES TO PRINT-RECORD.\n002441     MOVE SSA-HP10R TO TAB2.\n002442     PERFORM T100-PRINT-A-LINE.\n002443     MOVE 'STATUS CODE FROM CBLTBCDP IS: ' TO TAB1.\n002444     PERFORM T100-PRINT-A-LINE.\n002445     MOVE SPACES TO PRINT-RECORD.\n002446     MOVE STC-HP10 TO TAB2.\n002447     PERFORM T100-PRINT-A-LINE.\n002448     MOVE 'FIRST 74 BYTES OF RECORD RETURNED IS: ' TO TAB1.\n002449     PERFORM T100-PRINT-A-LINE.\n002450     MOVE SPACES TO PRINT-RECORD.\n002451     MOVE HP10R TO TAB2.\n002452     PERFORM T100-PRINT-A-LINE.\n002453     MOVE SPACES TO PRINT-RECORD.\n002455     PERFORM T100-PRINT-A-LINE.\n002456*\n002457 P100-READ-INPUT-FILE.\n002458     READ INPUT-FILE\n002459         AT END MOVE 'Y' TO INPUT-SWITCH.\n002460*\n002461 T100-PRINT-A-LINE.\n002462     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n002463*\n002464 Z100-TERMINATION.\n002470     CLOSE INPUT-FILE, PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLCBND": {"ttr": 2053, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00G\\x01\\x01\\x05\\x9f\\x01\\x02\\x00O\\x122\\x00\\x1c\\x00 \\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-02-28T00:00:00", "modifydate": "2002-01-04T12:32:47", "lines": 28, "newlines": 32, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLCBND.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET TO TEST CALLS TO COBABEND.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000701 FILE-CONTROL.\n000702     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  PRINT-FILE\n000830     BLOCK CONTAINS 0 RECORDS\n000840     RECORDING MODE IS F\n000850     LABEL RECORDS ARE STANDARD\n000860     RECORD CONTAINS 80 CHARACTERS\n000870     DATA RECORD IS PRINT-LINE.\n000880 01  PRINT-LINE                 PIC X(80).\n000890\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLCBND WORKING STORAGE BEGINS HERE'.\n001200 01  MISC-AREAS.\n001300     05  COBABEND          PIC X(8) VALUE 'COBABEND'.\n001700 PROCEDURE DIVISION.\n002900     OPEN OUTPUT PRINT-FILE.\n003000     CALL COBABEND.\n003200     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLCLMN": {"ttr": 2055, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00H\\x00\\x98!\\x8f\\x01\\x02\\x00O\\x123\\x00\\x11\\x00\\x11\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1998-08-06T00:00:00", "modifydate": "2002-01-04T12:33:48", "lines": 17, "newlines": 17, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLCLMN.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET FOR THE CLISTMON PROGRAM\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLCLMN WORKING STORAGE BEGINS HERE'.\n001200 77  MYNAME PIC X(8) VALUE 'CALLCLMN'.\n001700 PROCEDURE DIVISION.\n002900     CALL 'CLISTMON' USING MYNAME.\n003200     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLCNYY": {"ttr": 2057, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x12\\x00\\x94\\x01\\x1f\\x01\\x02\\x00O\\x124\\x00K\\x000\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-01-11T00:00:00", "modifydate": "2002-01-04T12:34:12", "lines": 75, "newlines": 48, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLCNYY.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET FOR THE CENTURYY SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000730     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000880 FD  PRINT-FILE\n000881     RECORDING MODE IS F\n000890     LABEL RECORDS ARE STANDARD.\n000891 01  PRINT-RECORD            PIC X(80).                                 10\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLCNYY WORKING STORAGE BEGINS HERE'.\n001110\n001200 01  MISCELLANEOUS-DATA.\n001210     05  WHERE-BYTE                PIC X.\n001220         88  ABOVE-THE-LINE        VALUE 'A'.\n001230         88  BELOW-THE-LINE        VALUE 'B'.\n001300     05  FULL-DATE.\n001400         10  YEAR-NBR              PIC 9(4).\n001500         10  MONTH-NBR             PIC 99.\n001510         10  DAY-NBR               PIC 99.\n001520         10  HOUR-NBR              PIC 99.\n001530         10  MINUTE-NBR            PIC 99.\n001540         10  SECOND-NBR            PIC 99V9(6).\n001541\n001550     05  ABOVE-MSG                 PIC X(80) VALUE\n001551                         'RUNNING ABOVE THE LINE'.\n001552     05  BELOW-MSG                 PIC X(80) VALUE\n001553                         'RUNNING BELOW THE LINE'.\n001554     05  BAD-WHERE-MSG             PIC X(80) VALUE\n001555                         'INVALID RETURN FROM WHEREAMI'.\n001556\n001557 01  PRINT-CENTURYY.\n001558     05  FILLER                    PIC X VALUE SPACE.\n001561     05  FILLER                    PIC X VALUE '/'.\n001570     05  PRINT-MONTH-NBR           PIC 99.\n001571     05  FILLER                    PIC X VALUE '/'.\n001572     05  PRINT-YEAR-NBR            PIC 9(4).\n001580     05  PRINT-DAY-NBR             PIC 99.\n001581     05  FILLER                    PIC X VALUE ' '.\n001590     05  PRINT-HOUR-NBR            PIC 99.\n001591     05  FILLER                    PIC X VALUE ':'.\n001592     05  PRINT-MINUTE-NBR          PIC 99.\n001593     05  FILLER                    PIC X VALUE ':'.\n001594     05  PRINT-SECOND-NBR          PIC 99.9(6).\n001600\n001700 PROCEDURE DIVISION.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n002000     OPEN OUTPUT PRINT-FILE.\n002001     CALL 'WHEREAMI' USING WHERE-BYTE.\n002002     IF ABOVE-THE-LINE\n002003         WRITE PRINT-RECORD FROM ABOVE-MSG\n002004     ELSE\n002005         IF BELOW-THE-LINE\n002006             WRITE PRINT-RECORD FROM BELOW-MSG\n002007         ELSE\n002008             WRITE PRINT-RECORD FROM BAD-WHERE-MSG.\n002010     CALL 'CENTURYY' USING FULL-DATE.\n002100     MOVE YEAR-NBR TO PRINT-YEAR-NBR.\n002200     MOVE MONTH-NBR TO PRINT-MONTH-NBR.\n002210     MOVE DAY-NBR TO PRINT-DAY-NBR.\n002220     MOVE HOUR-NBR TO PRINT-HOUR-NBR.\n002230     MOVE MINUTE-NBR TO PRINT-MINUTE-NBR.\n002240     MOVE SECOND-NBR TO PRINT-SECOND-NBR.\n002250     WRITE PRINT-RECORD FROM PRINT-CENTURYY.\n002260     CLOSE PRINT-FILE.\n002300     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLCPGM": {"ttr": 2060, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x15\\x01\\x01!?\\x01\\x02\\x00O\\x12R\\x00\\xa3\\x00|\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2001-08-01T00:00:00", "modifydate": "2002-01-04T12:52:15", "lines": 163, "newlines": 124, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLCPGM.\n000300 AUTHOR. R THORNTON\n000310**************************************************************\n000400*REMARKS. CALL A C LANGUAGE SUB-PROGRAM FROM COBOL/390.      *\n000410*         PASSING DATA FROM THE INPUT DATA FILE. THE INPUT   *\n000411*         DATA IS PRINTED BEFORE THE CALL, AND MODIFIED DATA *\n000412*         ON RETURN FROM THE C PROGRAM IS ALSO PRINTED.      *\n000413*                                                            *\n000414*     (1) DATA IS PASSED TO THE C PROGRAM USING BY REFERENCE *\n000415*         (THE COBOL DEFAULT), SO THE C PROGRAM MUST IDENTIFY*\n000416*         ALL ITS INPUT PARAMETERS AS POINTERS, AS THE       *\n000417*         ADDRESS OF THE REAL DATA (NOT A COPY) IS PASSED.   *\n000418*                                                            *\n000420*     (2) COMPILE WITH NODLL                                 *\n000421*                                                            *\n000422*     (3) CALLS TO THE C PROGRAM MUST BE STATIC AS THIS SET  *\n000423*         OF PROGRAMS IS CURRENTLY WRITTEN. WHEN A DYNAMIC   *\n000424*         CALL IS MADE, THE JOB ABENDS S0C7 ON ENTRY TO THE  *\n000425*         CALLED C LANGUAGE PROGRAM. I HAVE AN ETR TO IBM    *\n000426*         ASKING FOR ASSISTANCE WITH THIS.                   *\n000430**************************************************************\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FILE ASSIGN TO INPUT1.\n000740     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  INPUT-FILE\n000821     BLOCK CONTAINS 0 RECORDS\n000822     RECORD CONTAINS 80 CHARACTERS\n000823     RECORDING MODE IS F\n000830     LABEL RECORDS ARE STANDARD.\n000840 01  INPUT-RECORD.                                                      10\n000850     05  IN-CHAR               PIC X.\n000860     05  FILLER                PIC X.\n000861     05  IN-STRING             PIC X(6).\n000862     05  FILLER                PIC X.\n000870     05  IN-INT                PIC S9(4).\n000871     05  FILLER                PIC X.\n000872     05  IN-FLOAT              PIC S9(4)V9(3).\n000880     05  FILLER                PIC X(59).\n000883\n000895 FD  PRINT-FILE\n000896     BLOCK CONTAINS 0 RECORDS\n000897     RECORD CONTAINS 133 CHARACTERS\n000898     RECORDING MODE IS F\n000899     LABEL RECORDS ARE STANDARD.\n000900 01  PRINT-RECORD.                                                      10\n000901   05  CARRIAGE-CONTROL-BYTE   PIC X.                                   20\n000902   05  PRINT-DATA.                                                      20\n000903       10  PRT-PGM-NAME        PIC X(8).\n000904       10  FILLER              PIC X.\n000905       10  PRT-DATA-REC.\n000906           15  PRT-IN-CHAR         PIC X.\n000907           15  PRT-PTR1            PIC XX.\n000908           15  PRT-RET-CHAR        PIC X.\n000909           15  FILLER              PIC X.\n000910           15  PRT-IN-STRING       PIC X(6).\n000911           15  PRT-PTR2            PIC XX.\n000912           15  PRT-RET-STRING      PIC X(6).\n000913           15  FILLER              PIC X.\n000914           15  PRT-IN-INT          PIC Z,ZZ9-.\n000915           15  PRT-PTR3            PIC XX.\n000916           15  PRT-RET-INT         PIC Z,ZZ9-.\n000917           15  FILLER              PIC X.\n000918           15  PRT-IN-FLOAT        PIC Z,ZZ9.999-.\n000919           15  PRT-PTR4            PIC XX.\n000920           15  PRT-RET-FLOAT       PIC Z,ZZ9.999-.\n000921           15  FILLER              PIC X.\n000930           15  PRT-C-RETURN        PIC ZZZ9-.\n000932           15  FILLER              PIC X(60).\n000933\n000940 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLCPGM WORKING STORAGE BEGINS HERE'.\n001200 77  SUB                       PIC S9(4) COMP VALUE +0.\n001300 01  GENERAL-AREAS.\n001301     05  COUNTER               PIC S9(8) COMP-3.\n001302     05  CFUNC-NAME            PIC X(8) VALUE 'CFUNC   '.\n001303     05  C-RETURN-DATA         PIC S9(9) COMP.\n001304     05  WS-SHORT-INT          PIC S9(4) COMP.\n001308     05  WS-INT                PIC S9(9) COMP.                          40\n001310     05  WS-LONG-INT           PIC S9(9) COMP.\n001312     05  WS-FLOAT              COMP-1.\n001313     05  WS-DOUBLE             COMP-2.\n001314     05  WS-POINTER            POINTER.\n001315     05  WS-DECIMAL            PIC S9(5)V99 COMP-3.\n001316     05  WS-STRUCT.\n001317         10 WS-INT-ARRAY       OCCURS 10 TIMES\n001318                               PIC S9(4) COMP.\n001319         10 WS-STRING-ARRAY    OCCURS 15 TIMES\n001320                               PIC X.\n001321     05  WS-LINE-SPACING       PIC 9 VALUE 1.\n001322     05  END-OF-INPUT-SWITCH   PIC X VALUE 'N'.\n001323         88  END-OF-INPUT-DATA    VALUE IS 'Y'.\n001324         88  MORE-DATA-TO-PROCESS VALUE IS 'N'.\n001600\n001700 PROCEDURE DIVISION.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n002000     PERFORM A100-INITIALIZATION.\n002100     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT-DATA.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002500 A100-INITIALIZATION.\n002600     OPEN INPUT\n002601            INPUT-FILE,\n002610          OUTPUT\n002612            PRINT-FILE.\n002620     MOVE SPACES TO PRINT-RECORD.\n002700\n002800 B100-MAINLINE-PROCESSING.\n002900     PERFORM C100-READ-INPUT-FILE THRU C100-EXIT.\n002910     IF MORE-DATA-TO-PROCESS\n003000        PERFORM D100-PROCESS-THE-RECORD THRU D100-EXIT.\n003010\n003020 C100-READ-INPUT-FILE.\n003030     READ INPUT-FILE\n003040         AT END MOVE 'Y' TO END-OF-INPUT-SWITCH.\n003041     IF MORE-DATA-TO-PROCESS\n003042        MOVE '+ + + + + + + + + + + + +' TO PRT-DATA-REC\n003043        PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT\n003044        MOVE 'READ INPUT-RECORD BELOW: ' TO PRT-DATA-REC\n003045        PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT\n003046        MOVE INPUT-RECORD TO PRT-DATA-REC\n003047        PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003050 C100-EXIT. EXIT.\n003060\n003070 D100-PROCESS-THE-RECORD.\n003071     MOVE SPACES TO PRINT-DATA.\n003072     MOVE '->' TO PRT-PTR1, PRT-PTR2, PRT-PTR3, PRT-PTR4.\n003073     MOVE IN-CHAR TO PRT-IN-CHAR.\n003075     MOVE IN-STRING TO PRT-IN-STRING.\n003077     MOVE IN-INT TO WS-SHORT-INT.\n003078     MOVE WS-SHORT-INT TO PRT-IN-INT.\n003080     MOVE IN-FLOAT TO WS-FLOAT.\n003081     MOVE WS-FLOAT TO PRT-IN-FLOAT.\n003083     MOVE +0 TO C-RETURN-DATA.\n003085*    CALL CFUNC-NAME\n003086     CALL 'CFUNC'\n003087          USING IN-CHAR, IN-STRING, WS-SHORT-INT, WS-FLOAT,\n003088          RETURNING C-RETURN-DATA.\n003089     MOVE IN-CHAR TO PRT-RET-CHAR.\n003090     MOVE IN-STRING TO PRT-RET-STRING.\n003091     MOVE WS-SHORT-INT TO PRT-RET-INT.\n003092     MOVE WS-FLOAT TO PRT-RET-FLOAT.\n003093     MOVE C-RETURN-DATA TO PRT-C-RETURN.\n003094     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003096 D100-EXIT. EXIT.\n003097\n003102 Y100-PRINT-A-LINE.\n003103     MOVE 'CALLCPGM' TO PRT-PGM-NAME.\n003104     WRITE PRINT-RECORD AFTER ADVANCING WS-LINE-SPACING.\n003105     MOVE SPACES TO PRINT-RECORD.\n003106 Y100-EXIT. EXIT.\n003107\n003108 Z100-END-OF-PROCESSING.\n003300     CLOSE INPUT-FILE,\n003500           PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLCRVL": {"ttr": 2064, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00G\\x00\\x933O\\x01\\x02\\x00O\\x12R\\x00 \\x00 \\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1993-11-30T00:00:00", "modifydate": "2002-01-04T12:52:47", "lines": 32, "newlines": 32, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLCRVL.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET TO TEST THE CURRVOL SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000701 FILE-CONTROL.\n000702     SELECT IN-FILE ASSIGN TO INPUT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  IN-FILE\n000830     BLOCK CONTAINS 0 RECORDS\n000840     RECORDING MODE IS F\n000850     LABEL RECORDS ARE STANDARD\n000860     RECORD CONTAINS 80 CHARACTERS\n000870     DATA RECORD IS IN-RECORD.\n000880 01  IN-RECORD                  PIC X(80).\n000890\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLCRVL WORKING STORAGE BEGINS HERE'.\n001200 77  VOLUME-SERIAL           PIC X(6) VALUE SPACES.\n001700 PROCEDURE DIVISION.\n002900     OPEN INPUT IN-FILE.\n003000     CALL 'CURRVOL' USING IN-FILE, VOLUME-SERIAL.\n003100     IF VOLUME-SERIAL = HIGH-VALUES\n003110         DISPLAY 'CURRVOL RETURNED HIGH-VALUES'\n003120     ELSE\n003130         DISPLAY 'CURRVOL RETURNED VOLUME SERIAL: '\n003140                 VOLUME-SERIAL.\n003200     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLDB2A": {"ttr": 2066, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x002\\x00\\x94\\x04o\\x01\\x02\\x00O\\x12S\\x00\\x14\\x00\\x14\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-02-15T00:00:00", "modifydate": "2002-01-04T12:53:32", "lines": 20, "newlines": 20, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLDB2A.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. USED AS A COBOL II PROGRAM TO CALL DB2ABEND FROM ABOVE\n000410*         THE 16 MEGABYTE LINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLDB2A WORKING STORAGE BEGINS HERE'.\n001200 77  WHEREAMI-RETURN-BYTE    PIC X VALUE '?'.\n001700 PROCEDURE DIVISION.\n002900     CALL 'WHEREAMI' USING WHEREAMI-RETURN-BYTE.\n003000     DISPLAY 'WHEREAMI-RETURN-BYTE = ' WHEREAMI-RETURN-BYTE.\n003100     CALL 'DB2ABEND'.\n003200     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLDTIN": {"ttr": 2068, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x08\\x01\\x00\\x03/\\x01\\x02\\x00O\\x12T\\x00\\x13\\x00\\x11\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-02-01T00:00:00", "modifydate": "2002-01-04T12:54:08", "lines": 19, "newlines": 17, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLDTIN.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. USED AS A VS COBOL PROGRAM TO CALL THE DATEINFO PROGRAM.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLDTIN WORKING STORAGE BEGINS HERE'.\n001200 77  JULDATE PIC X(8) VALUE 'J2000015'.\n001300 77  GREGDATE PIC X(9) VALUE 'G12251935'.\n001700 PROCEDURE DIVISION.\n002900     CALL 'DATEINFO' USING JULDATE.\n003000     CALL 'DATEINFO' USING GREGDATE.\n003200     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLDYNA": {"ttr": 2305, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x19\\x00\\x92\\x03_\\x00\\x93\\x07\\x0f\\x13A\\x00\\xab\\x00\\xa6\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-02-04T00:00:00", "modifydate": "1993-03-11T13:41:19", "lines": 171, "newlines": 166, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.    CALLDYNA.                                               00\n000300 AUTHOR. R THORNTON                                                     00\n000400 REMARKS. USED TO TEST CALLS TO DYNALLOC SUBROUTINE.                    00\n000500 ENVIRONMENT DIVISION.                                                  00\n000600 CONFIGURATION SECTION.                                                 00\n000700 INPUT-OUTPUT SECTION.                                                  00\n000800 FILE-CONTROL.                                                          00\n000900     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.                           00\n001000     SELECT OUTPUT-FILE ASSIGN TO UT-S-OUTPUT1.                         00\n001100 DATA DIVISION.                                                         00\n001200 FILE SECTION.                                                          00\n001300                                                                        00\n001400 FD INPUT-FILE                                                          00\n001500     RECORD CONTAINS 80 CHARACTERS                                      00\n001600     RECORDING MODE IS F                                                00\n001700     BLOCK CONTAINS 0 RECORDS                                           00\n001800     LABEL RECORD IS STANDARD                                           00\n001900     DATA RECORD IS INPUT-RECORD.                                       00\n002000                                                                        00\n002100 01  INPUT-RECORD.                                                      00\n002200     05  FILLER              PIC X(80).                                 00\n002300                                                                        00\n002400 FD OUTPUT-FILE                                                         00\n002500     RECORD CONTAINS 80 CHARACTERS                                      00\n002600     RECORDING MODE IS F                                                00\n002700     BLOCK CONTAINS 0 RECORDS                                           00\n002800     LABEL RECORD IS STANDARD                                           00\n002900     DATA RECORD IS INPUT-RECORD.                                       00\n003000                                                                        00\n003100 01  OUTPUT-RECORD.                                                     00\n003200     05  FILLER              PIC X(80).                                 00\n003300                                                                        00\n003400 WORKING-STORAGE SECTION.                                               00\n003500 77  FILLER PIC X(36)  VALUE                                            00\n003600     'CALLDYNA WORKING STORAGE BEGINS HERE'.                            00\n003700                                                                        00\n003800 01  MISCELLANEOUS-AREAS.                                               00\n003900     05 EOF-SWITCH               PIC X VALUE 'N'.                       00\n004000        88 END-OF-INPUT          VALUE 'Y'.                             00\n004100        88 MORE-INPUT            VALUE 'N'.                             00\n004200                                                                        00\n004300 01  ALLOCATE-DATA.                                                     00\n004400     05 DDNAME                   PIC X(8).                              00\n004500     05 DSNAME                   PIC X(44).                             00\n004600     05 RELATIVE-GENERATION      PIC X(8).                              00\n004700     05 CURRENT-STATUS           PIC X.                                 00\n004800        88 STATUS-OLD            VALUE 'O'.                             00\n004900        88 STATUS-MOD            VALUE 'M'.                             00\n005000        88 STATUS-NEW            VALUE 'N'.                             00\n005100        88 STATUS-SHR            VALUE 'S'.                             00\n005200     05 NORMAL-DISPOSITION       PIC X.                                 00\n005300        88 NORM-UNCATLG          VALUE 'U'.                             00\n005400        88 NORM-CATLG            VALUE 'C'.                             00\n005500        88 NORM-DELETE           VALUE 'D'.                             00\n005600        88 NORM-KEEP             VALUE 'K'.                             00\n005700     05 CONDITIONAL-DISPOSITION  PIC X.                                 00\n005800        88 COND-UNCATLG          VALUE 'U'.                             00\n005900        88 COND-CATLG            VALUE 'C'.                             00\n006000        88 COND-DELETE           VALUE 'D'.                             00\n006100        88 COND-KEEP             VALUE 'K'.                             00\n006200     05 UNIT-NAME                PIC X(8).                              00\n006300     05 UNIT-COUNT               PIC S9(4) COMP.                        00\n006400     05 VOLUME-SERIAL            PIC X(6).                              00\n006500     05 LABEL-TYPE               PIC X.                                 00\n006600        88 NO-LABELS             VALUE 'N'.                             00\n006700        88 STANDARD-LABELS       VALUE 'S'.                             00\n006800        88 BYPASS-LABELS         VALUE 'B'.                             00\n006900     05 DATASET-SEQUENCE         PIC S9(4) COMP.                        00\n007000     05 FREE-CLOSE               PIC X.                                 00\n007100        88 FREE-WHEN-CLOSED      VALUE 'F'.                             00\n007200     05 RETENTION-PERIOD-DAYS    PIC S9(4) COMP.                        00\n007300     05 RECORDING-MODE           PIC X.                                 00\n007400        88 FIXED-RECORDS         VALUE 'F'.                             00\n007500        88 VARIABLE-RECORDS      VALUE 'V'.                             00\n007600        88 UNDEFINED-RECORDS     VALUE 'U'.                             00\n007700        88 FIXED-STANDARD        VALUE 'S'.                             00\n007800     05 BLOCKING                 PIC X.                                 00\n007900        88 BLOCKED-RECORDS       VALUE 'B'.                             00\n008000     05 CONTROL-CHARACTERS       PIC X.                                 00\n008100        88 ASA-CONTROL-CHAR      VALUE 'A'.                             00\n008200     05 LOGICAL-RECORD-LENGTH    PIC S9(4) COMP.                        00\n008300     05 BLOCK-LENGTH             PIC S9(4) COMP.                        00\n008400     05 TAPE-DENSITY             PIC X.                                 00\n008500        88 800-BPI               VALUE '8'.                             00\n008600        88 1600-BPI              VALUE '1'.                             00\n008700        88 6250-BPI              VALUE '6'.                             00\n008800     05 NUMBER-BUFFERS           PIC S9(4) COMP.                        00\n008900     05 KEY-LENGTH               PIC S9(4) COMP.                        00\n009000     05 DATASET-ORGANIZATION     PIC X.                                 00\n009100        88 VSAM-DATASET          VALUE 'V'.                             00\n009200        88 PARTITIONED-DATASET   VALUE 'P'.                             00\n009300        88 DIRECT-DATASET        VALUE 'D'.                             00\n009400        88 PHYSICAL-SEQUENTIAL   VALUE 'S'.                             00\n009500     05 SPACE-TYPE               PIC X.                                 00\n009600        88 CYLINDER-REQUEST      VALUE 'C'.                             00\n009700        88 TRACK-REQUEST         VALUE 'T'.                             00\n009800     05 PRIMARY-SPACE-AMOUNT     PIC S9(4) COMP.                        00\n009900     05 SECONDARY-SPACE-AMOUNT   PIC S9(4) COMP.                        00\n010000     05 RELEASE-SPACE            PIC X.                                 00\n010100        88 RELEASE-UNUSED        VALUE 'R'.                             00\n010200     05 NBR-DIRECTORY-BLOCKS     PIC S9(4) COMP.                        00\n010300     05 EXPIRATION-DATE-YYDDD    PIC X(5).                              00\n010400                                                                        00\n010500 01  ALLOCATION-RESULT.                                                 00\n010600     05 DYNALLOC-REQUEST         PIC X.                                 00\n010700        88 ALLOCATION-REQUEST    VALUE 'A'.                             00\n010800        88 VOLSER-REQUEST        VALUE 'V'.                             00\n010900     05 DYNALLOC-RETURN-CODE     PIC XX.                                00\n011000        88 SUCCESSFUL-ALLOCATION VALUE '00'.                            00\n011100        88 ENVIRONMENT-ERROR     VALUE '04'.                            00\n011200        88 VALIDATION-DENIAL     VALUE '08'.                            00\n011300        88 PARAMETER-ERROR       VALUE '12'.                            00\n011400     05 ERROR-REASON-CODE.                                              00\n011500        10 CLASS-7-CODE              PIC X.                             00\n011600        10 ERROR-CLASS               PIC X.                             00\n011700           88 UNAVAILABLE-RESOURCE   VALUE '2'.                         00\n011800           88 INVALID-PARAMETER-LIST VALUE '3'.                         00\n011900           88 ERROR-IN-ENVIRONMENT   VALUE '4'.                         00\n012000           88 SYSTEM-ROUTINE-ERROR   VALUE '7'.                         00\n012100        10 SPECIFIC-ERROR-CODE       PIC XX.                            00\n012200     05 INFORMATION-REASON           PIC X(4).                          00\n012300                                                                        00\n012400 PROCEDURE DIVISION.                                                    00\n012500                                                                        00\n012600 A100-EXECUTIVE-CONTROL.                                                00\n012700     PERFORM A100-INITIALIZATION.                                       00\n012800     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT.               00\n012900     PERFORM Z100-END-OF-PROCESSING.                                    00\n013000     GOBACK.                                                            00\n013100                                                                        00\n013200 A100-INITIALIZATION.                                                   00\n013300     MOVE LOW-VALUES TO ALLOCATE-DATA.                                  00\n013400     MOVE 'OUTPUT1' TO DDNAME.                                          00\n013500     MOVE 'USER02.GDGTEST.DATA' TO DSNAME.                              00\n013600     MOVE '+1' TO RELATIVE-GENERATION.                                  00\n013700     MOVE 'N' TO CURRENT-STATUS.                                        00\n013800     MOVE 'C' TO NORMAL-DISPOSITION.                                    00\n013900     MOVE 'D' TO CONDITIONAL-DISPOSITION.                               00\n014000     MOVE 'DISK' TO UNIT-NAME.                                          00\n014100     MOVE 'EMP810' TO VOLUME-SERIAL.                                    00\n014200     MOVE 'S' TO DATASET-ORGANIZATION.                                  00\n014300     MOVE 'T' TO SPACE-TYPE.                                            00\n014400     MOVE 5 TO PRIMARY-SPACE-AMOUNT.                                    00\n014500     MOVE 1 TO SECONDARY-SPACE-AMOUNT.                                  00\n014600     MOVE 'R' TO RELEASE-SPACE.                                         00\n014700     MOVE 'F' TO RECORDING-MODE.                                        00\n014800     MOVE 'B' TO BLOCKING.                                              00\n014900     MOVE 80 TO LOGICAL-RECORD-LENGTH.                                  00\n015000     MOVE 23440 TO BLOCK-LENGTH.                                        00\n015100     CALL 'DYNALLOC' USING ALLOCATE-DATA, ALLOCATION-RESULT.            00\n015200     IF SUCCESSFUL-ALLOCATION                                           00\n015300         NEXT SENTENCE                                                  00\n015400     ELSE DISPLAY 'UNABLE TO ALLOCATE OUTPUT1, RETURN CODE '            00\n015500                   DYNALLOC-RETURN-CODE ' ERROR REASON CODE '           00\n015600                   ERROR-REASON-CODE,                                   00\n015700          CALL 'COBABEND'.                                              00\n015800     OPEN INPUT INPUT-FILE OUTPUT OUTPUT-FILE.                          00\n015900                                                                        00\n016000 B100-MAINLINE-PROCESSING.                                              00\n016100     PERFORM C100-READ-FILE.                                            00\n016200     IF MORE-INPUT PERFORM D100-WRITE-FILE.                             00\n016300                                                                        00\n016400 C100-READ-FILE.                                                        00\n016500     READ INPUT-FILE AT END MOVE 'Y' TO EOF-SWITCH.                     00\n016600                                                                        00\n016700 D100-WRITE-FILE.                                                       00\n016800     WRITE OUTPUT-RECORD FROM INPUT-RECORD.                             00\n016900                                                                        00\n017000 Z100-END-OF-PROCESSING.                                                00\n017100     CLOSE INPUT-FILE OUTPUT-FILE.                                      00\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLDYN2": {"ttr": 2309, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00E\\x00\\x95\\x10\\x1f\\x00\\x95\\x10/\\x06\\x14\\x00\\x9e\\x00\\x9c\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1995-04-11T00:00:00", "modifydate": "1995-04-12T06:14:45", "lines": 158, "newlines": 156, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.    CALLDYN2.                                               00\n000300 AUTHOR. R THORNTON                                                     00\n000400*REMARKS. USED TO TEST CALLS TO DYNALLOC SUBROUTINE.                    00\n000500 ENVIRONMENT DIVISION.                                                  00\n000600 CONFIGURATION SECTION.                                                 00\n000700 INPUT-OUTPUT SECTION.                                                  00\n000800 FILE-CONTROL.                                                          00\n000900     SELECT INPUT-FILE ASSIGN TO INPUT1.                                00\n001000     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.                              00\n001100 DATA DIVISION.                                                         00\n001200 FILE SECTION.                                                          00\n001300                                                                        00\n001400 FD INPUT-FILE                                                          00\n001500     RECORD CONTAINS 80 CHARACTERS                                      00\n001600     RECORDING MODE IS F                                                00\n001700     BLOCK CONTAINS 0 RECORDS                                           00\n001800     LABEL RECORD IS STANDARD                                           00\n001900     DATA RECORD IS INPUT-RECORD.                                       00\n002000                                                                        00\n002100 01  INPUT-RECORD.                                                      00\n002200     05  FILLER              PIC X(80).                                 00\n002300                                                                        00\n002400 FD OUTPUT-FILE                                                         00\n002500     RECORD CONTAINS 80 CHARACTERS                                      00\n002600     RECORDING MODE IS F                                                00\n002700     BLOCK CONTAINS 0 RECORDS                                           00\n002800     LABEL RECORD IS STANDARD                                           00\n002900     DATA RECORD IS OUTPUT-RECORD.                                      00\n003000                                                                        00\n003100 01  OUTPUT-RECORD.                                                     00\n003200     05  FILLER              PIC X(80).                                 00\n003300                                                                        00\n003400 WORKING-STORAGE SECTION.                                               00\n003500 77  FILLER PIC X(36)  VALUE                                            00\n003600     \"CALLDYN2 WORKING STORAGE BEGINS HERE\".                            00\n003700                                                                        00\n003800 01  MISCELLANEOUS-AREAS.                                               00\n003900     05 EOF-SWITCH               PIC X VALUE \"N\".                       00\n004000        88 END-OF-INPUT          VALUE \"Y\".                             00\n004100        88 MORE-INPUT            VALUE \"N\".                             00\n004200                                                                        00\n004300 01  ALLOCATE-DATA.                                                     00\n004400     05 DDNAME                   PIC X(8).                              00\n004500     05 DSNAME                   PIC X(44).                             00\n004600     05 RELATIVE-GENERATION      PIC X(8).                              00\n004700     05 CURRENT-STATUS           PIC X.                                 00\n004800        88 STATUS-OLD            VALUE \"O\".                             00\n004900        88 STATUS-MOD            VALUE \"M\".                             00\n005000        88 STATUS-NEW            VALUE \"N\".                             00\n005100        88 STATUS-SHR            VALUE \"S\".                             00\n005200     05 NORMAL-DISPOSITION       PIC X.                                 00\n005300        88 NORM-UNCATLG          VALUE \"U\".                             00\n005400        88 NORM-CATLG            VALUE \"C\".                             00\n005500        88 NORM-DELETE           VALUE \"D\".                             00\n005600        88 NORM-KEEP             VALUE \"K\".                             00\n005700     05 CONDITIONAL-DISPOSITION  PIC X.                                 00\n005800        88 COND-UNCATLG          VALUE \"U\".                             00\n005900        88 COND-CATLG            VALUE \"C\".                             00\n006000        88 COND-DELETE           VALUE \"D\".                             00\n006100        88 COND-KEEP             VALUE \"K\".                             00\n006200     05 UNIT-NAME                PIC X(8).                              00\n006300     05 UNIT-COUNT               PIC S9(4) COMP.                        00\n006400     05 VOLUME-SERIAL            PIC X(6).                              00\n006500     05 LABEL-TYPE               PIC X.                                 00\n006600        88 NO-LABELS             VALUE \"N\".                             00\n006700        88 STANDARD-LABELS       VALUE \"S\".                             00\n006800        88 BYPASS-LABELS         VALUE \"B\".                             00\n006900     05 DATASET-SEQUENCE         PIC S9(4) COMP.                        00\n007000     05 FREE-CLOSE               PIC X.                                 00\n007100        88 FREE-WHEN-CLOSED      VALUE \"F\".                             00\n007200     05 RETENTION-PERIOD-DAYS    PIC S9(4) COMP.                        00\n007300     05 RECORDING-MODE           PIC X.                                 00\n007400        88 FIXED-RECORDS         VALUE \"F\".                             00\n007500        88 VARIABLE-RECORDS      VALUE \"V\".                             00\n007600        88 UNDEFINED-RECORDS     VALUE \"U\".                             00\n007700        88 FIXED-STANDARD        VALUE \"S\".                             00\n007800     05 BLOCKING                 PIC X.                                 00\n007900        88 BLOCKED-RECORDS       VALUE \"B\".                             00\n008000     05 CONTROL-CHARACTERS       PIC X.                                 00\n008100        88 ASA-CONTROL-CHAR      VALUE \"A\".                             00\n008200     05 LOGICAL-RECORD-LENGTH    PIC S9(4) COMP.                        00\n008300     05 BLOCK-LENGTH             PIC S9(4) COMP.                        00\n008400     05 TAPE-DENSITY             PIC X.                                 00\n008500        88 800-BPI               VALUE \"8\".                             00\n008600        88 1600-BPI              VALUE \"1\".                             00\n008700        88 6250-BPI              VALUE \"6\".                             00\n008800     05 NUMBER-BUFFERS           PIC S9(4) COMP.                        00\n008900     05 KEY-LENGTH               PIC S9(4) COMP.                        00\n009000     05 DATASET-ORGANIZATION     PIC X.                                 00\n009100        88 VSAM-DATASET          VALUE \"V\".                             00\n009200        88 PARTITIONED-DATASET   VALUE \"P\".                             00\n009300        88 DIRECT-DATASET        VALUE \"D\".                             00\n009400        88 PHYSICAL-SEQUENTIAL   VALUE \"S\".                             00\n009500     05 SPACE-TYPE               PIC X.                                 00\n009600        88 CYLINDER-REQUEST      VALUE \"C\".                             00\n009700        88 TRACK-REQUEST         VALUE \"T\".                             00\n009800     05 PRIMARY-SPACE-AMOUNT     PIC S9(4) COMP.                        00\n009900     05 SECONDARY-SPACE-AMOUNT   PIC S9(4) COMP.                        00\n010000     05 RELEASE-SPACE            PIC X.                                 00\n010100        88 RELEASE-UNUSED        VALUE \"R\".                             00\n010200     05 NBR-DIRECTORY-BLOCKS     PIC S9(4) COMP.                        00\n010300     05 EXPIRATION-DATE-YYDDD    PIC X(5).                              00\n010400                                                                        00\n010500 01  ALLOCATION-RESULT.                                                 00\n010600     05 DYNALLOC-REQUEST         PIC X.                                 00\n010700        88 ALLOCATION-REQUEST    VALUE \"A\".                             00\n010800        88 VOLSER-REQUEST        VALUE \"V\".                             00\n010900     05 DYNALLOC-RETURN-CODE     PIC XX.                                00\n011000        88 SUCCESSFUL-ALLOCATION VALUE \"00\".                            00\n011100        88 ENVIRONMENT-ERROR     VALUE \"04\".                            00\n011200        88 VALIDATION-DENIAL     VALUE \"08\".                            00\n011300        88 PARAMETER-ERROR       VALUE \"12\".                            00\n011400     05 ERROR-REASON-CODE.                                              00\n011500        10 CLASS-7-CODE              PIC X.                             00\n011600        10 ERROR-CLASS               PIC X.                             00\n011700           88 UNAVAILABLE-RESOURCE   VALUE \"2\".                         00\n011800           88 INVALID-PARAMETER-LIST VALUE \"3\".                         00\n011900           88 ERROR-IN-ENVIRONMENT   VALUE \"4\".                         00\n012000           88 SYSTEM-ROUTINE-ERROR   VALUE \"7\".                         00\n012100        10 SPECIFIC-ERROR-CODE       PIC XX.                            00\n012200     05 INFORMATION-REASON           PIC X(4).                          00\n012300                                                                        00\n012400 PROCEDURE DIVISION.                                                    00\n012500                                                                        00\n012600 A100-EXECUTIVE-CONTROL.                                                00\n012700     PERFORM A100-INITIALIZATION.                                       00\n012800     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT.               00\n012900     PERFORM Z100-END-OF-PROCESSING.                                    00\n013000     GOBACK.                                                            00\n013100                                                                        00\n013200 A100-INITIALIZATION.                                                   00\n013300     MOVE LOW-VALUES TO ALLOCATE-DATA.                                  00\n013400     MOVE \"OUTPUT1\" TO DDNAME.                                          00\n013500     MOVE \"SYSOUT=Y\" TO DSNAME.                                         00\n013600     MOVE \"A\" TO DYNALLOC-REQUEST.                                      00\n015100     CALL \"DYNALLOC\" USING ALLOCATE-DATA, ALLOCATION-RESULT.            00\n015200     IF SUCCESSFUL-ALLOCATION                                           00\n015300         NEXT SENTENCE                                                  00\n015400     ELSE DISPLAY \"UNABLE TO ALLOCATE OUTPUT1, RETURN CODE=\"            00\n015500                   DYNALLOC-RETURN-CODE \", ERROR REASON CODE=\"          00\n015600                   ERROR-REASON-CODE, \", INFORMATION REASON=\"           00\n015610                   INFORMATION-REASON\n015700          CALL \"COBABEND\".                                              00\n015800     OPEN INPUT INPUT-FILE OUTPUT OUTPUT-FILE.                          00\n015900                                                                        00\n016000 B100-MAINLINE-PROCESSING.                                              00\n016100     PERFORM C100-READ-FILE.                                            00\n016200     IF MORE-INPUT PERFORM D100-WRITE-FILE.                             00\n016300                                                                        00\n016400 C100-READ-FILE.                                                        00\n016500     READ INPUT-FILE AT END MOVE \"Y\" TO EOF-SWITCH.                     00\n016600                                                                        00\n016700 D100-WRITE-FILE.                                                       00\n016800     WRITE OUTPUT-RECORD FROM INPUT-RECORD.                             00\n016900                                                                        00\n017000 Z100-END-OF-PROCESSING.                                                00\n017100     CLOSE INPUT-FILE OUTPUT-FILE.                                      00\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CALLFILE": {"ttr": 2313, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00&\\x00\\x986/\\x00\\x986/\\x16\\x05\\x00V\\x00V\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1998-12-28T00:00:00", "modifydate": "1998-12-28T16:05:26", "lines": 86, "newlines": 86, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLFILE.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TESTS CALLS TO THE VOLFILE SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FILE ASSIGN TO INPUT1.\n000740     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  INPUT-FILE\n000821     BLOCK CONTAINS 0 RECORDS\n000822     RECORD CONTAINS 80 CHARACTERS\n000823     RECORDING MODE IS F\n000830     LABEL RECORDS ARE STANDARD.\n000840 01  INPUT-RECORD.                                                      10\n000850   05  DSNAME                PIC X(44).                                 20\n000860   05  FILLER                PIC X(36).                                 30\n000874\n000889 FD  PRINT-FILE\n000890     BLOCK CONTAINS 0 RECORDS\n000891     RECORD CONTAINS 133 CHARACTERS\n000892     RECORDING MODE IS F\n000893     LABEL RECORDS ARE STANDARD.\n000894 01  PRINT-RECORD.                                                      10\n000895   05  LINE-SPACING          PIC X.                                     20\n000896   05  PRT-TEXT              PIC X(132).                                20\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLFILE WORKING STORAGE BEGINS HERE'.\n001230\n001300 01  SWITCHES-AREA.\n001301     05  VOLFILE-RETCODE         PIC XX.\n001310         88  VOLFILE-ERROR       VALUE '12'.\n001320\n001700 PROCEDURE DIVISION.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n001910     OPEN INPUT INPUT-FILE, OUTPUT PRINT-FILE.\n002100     PERFORM B100-MAINLINE-PROCESSING.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002800 B100-MAINLINE-PROCESSING.\n002900     PERFORM C100-READ-INPUT-FILE THRU C100-EXIT.\n003000     PERFORM D100-PROCESS-THE-RECORD THRU D100-EXIT.\n003010\n003020 C100-READ-INPUT-FILE.\n003030     READ INPUT-FILE.\n003050 C100-EXIT. EXIT.\n003051\n003052 D100-PROCESS-THE-RECORD.\n003053     CALL 'VOLFILE' USING DSNAME, VOLFILE-RETCODE.\n003054     IF VOLFILE-ERROR\n003055         PERFORM E100-VOLFILE-ERROR THRU E100-EXIT\n003056     ELSE\n003057         PERFORM F100-VOLFILE-SUCCESSFUL THRU F100-EXIT.\n003059 D100-EXIT. EXIT.\n003060\n003061 E100-VOLFILE-ERROR.\n003062     MOVE DSNAME TO PRT-TEXT.\n003063     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003064     MOVE 'VOLFILE RETURNED ERROR CODE: BROWSE SYSOUT FILE.'\n003065         TO PRT-TEXT.\n003066     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003069 E100-EXIT. EXIT.\n003070\n003071 F100-VOLFILE-SUCCESSFUL.\n003072     MOVE DSNAME TO PRT-TEXT.\n003073     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003074     MOVE 'VOLFILE WAS SUCCESSFUL: BROWSE VOLSERFL FILE.'\n003075         TO PRT-TEXT.\n003076     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003078 F100-EXIT. EXIT.\n003079\n003097 Y100-PRINT-A-LINE.\n003098     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n003099     MOVE SPACES TO PRT-TEXT.\n003100 Y100-EXIT. EXIT.\n003101\n003102 Z100-END-OF-PROCESSING.\n003300     CLOSE INPUT-FILE,\n003500           PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLGDCB": {"ttr": 2316, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00Y\\x00\\x94#\\x0f\\x01\\x02\\x12\\x9f\\x14F\\x00(\\x00)\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-08-18T00:00:00", "modifydate": "2002-05-09T14:46:59", "lines": 40, "newlines": 41, "modlines": 0, "user": "BC0THOR"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    CALLGDCB.\n       AUTHOR. R THORNTON\n      *REMARKS. USED TO CALL THE GETDCB SUBROUTINE FOR TESTING\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT SAMPLE-FILE ASSIGN TO INPUT1.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  SAMPLE-FILE\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD\n           RECORDING MODE IS F\n           DATA RECORD IS FIXED-RECORD\n           RECORD CONTAINS 80 CHARACTERS.\n\n       01  FIXED-FILE-RECORD.\n           05 DATA-IN-RECORD                     PIC X(80).\n\n       WORKING-STORAGE SECTION.\n\n       01  GETDCB-PARAMETERS.                                                 00\n           05  GETDCB-STATUS         PIC X.\n               88 GETDCB-SUCCESSFUL  VALUE ' '.\n               88 DSORG-NOT-PS       VALUE 'X'.\n               88 FILE-NOT-OPEN      VALUE 'N'.\n           05  DATASET-NAME          PIC X(44).\n           05  VOLUME-SERIAL         PIC X(6)\n                                     OCCURS 5 TIMES.\n           05  RECORDING-FORMAT      PIC X(4).                                00\n           05  LOGICAL-RECORD-LENGTH PIC 9(9).                                00\n           05  BLOCK-SIZE            PIC 9(9).                                00\n\n       PROCEDURE DIVISION.\n           OPEN INPUT SAMPLE-FILE.                                            00\n           CALL 'GETDCB' USING SAMPLE-FILE,                                   00\n                               GETDCB-PARAMETERS.                             00\n           GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLGDG": {"ttr": 2318, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00A\\x00\\x90'\\x1f\\x01\\x02\\x12\\x9f\\x139\\x00\\x19\\x00\\x18\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1990-09-28T00:00:00", "modifydate": "2002-05-09T13:39:41", "lines": 25, "newlines": 24, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.    CALLGDG.                                                00\n000300 AUTHOR. R THORNTON                                                     00\n000400*REMARKS. TEST BUCKET FOR CALLING GETGDG.                               00\n000500 ENVIRONMENT DIVISION.                                                  00\n000600 CONFIGURATION SECTION.                                                 00\n000700 INPUT-OUTPUT SECTION.                                                  00\n000800                                                                        00\n000900 DATA DIVISION.                                                         00\n001000 WORKING-STORAGE SECTION.                                               00\n001100                                                                        00\n001200 77  FILLER PIC X(36)  VALUE                                            00\n001300     'CALLGDG WORKING STORAGE BEGINS HERE'.                             00\n001400                                                                        00\n001500 01  GETGDG-PARAMETERS.                                                 00\n001600     05 GDG-DSNAME PIC X(44) VALUE 'NTM.NETMAN.R410.TABLE(0)'.          00\n001700     05 GDG-GENNO  PIC 9(4).                                            00\n001800                                                                        00\n001900 PROCEDURE DIVISION.                                                    00\n002000                                                                        00\n002100 A100-EXECUTIVE-CONTROL.                                                00\n002200     CALL 'GETGDG' USING GDG-DSNAME, GDG-GENNO.                         00\n002300     IF GDG-GENNO = HIGH-VALUES,                                        00\n002400         CALL 'COBABEND'.                                               00\n002500     GOBACK.                                                            00\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLGDSN": {"ttr": 2320, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00'\\x00\\x94#\\x0f\\x01\\x02\\x12\\x9f\\x14F\\x00)\\x00\\r\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-08-18T00:00:00", "modifydate": "2002-05-09T14:46:27", "lines": 41, "newlines": 13, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLGDCB.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. USED TO CALL THE GETDCB SUBROUTINE FOR TESTING\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT SAMPLE-FILE ASSIGN TO INPUT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  SAMPLE-FILE\n000830     BLOCK CONTAINS 0 RECORDS\n000840     LABEL RECORDS ARE STANDARD\n000850     RECORDING MODE IS F\n000860     DATA RECORD IS FIXED-RECORD\n000870     RECORD CONTAINS 80 CHARACTERS.\n000880\n000890 01  FIXED-RECORD.\n000891     05 DATA                               PIC X(80).\n000892\n000900 WORKING-STORAGE SECTION.\n000910\n001000 01  GETDCB-PARAMETERS.                                                 00\n001100     05  GETDCB-STATUS         PIC X.\n001200         88 GETDCB-SUCCESSFUL  VALUE ' '.\n001300         88 DSORG-NOT-PS       VALUE 'X'.\n001400         88 FILE-NOT-OPEN      VALUE 'N'.\n001500     05  DATASET-NAME          PIC X(44).\n001600     05  VOLUME-SERIAL         PIC X(6)\n001610                               OCCURS 5 TIMES.\n001620     05  RECORDING-FORMAT      PIC X(4).                                00\n001630     05  LOGICAL-RECORD-LENGTH PIC 9(9).                                00\n001640     05  BLOCK-SIZE            PIC 9(9).                                00\n001650\n001700 PROCEDURE DIVISION.\n006000     OPEN INPUT SAMPLE-FILE,                                            00\n006100          OUTPUT PRINT-FILE.\n006400     CALL 'GETDCB' USING SAMPLE-FILE,                                   00\n006500                         GETDCB-PARAMETERS.                             00\n006600     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLGRPC": {"ttr": 2561, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x05\\x00\\x93\\x07\\x0f\\x00\\x93\\x07\\x0f\\x13E\\x007\\x007\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "1993-03-11T13:45:05", "lines": 55, "newlines": 55, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. CALLGRPC.\n000300 ENVIRONMENT DIVISION.\n000400 INPUT-OUTPUT SECTION.\n000500*\n000600 FILE-CONTROL.\n000700 DATA DIVISION.\n000800 FILE SECTION.\n000900*\n001000 WORKING-STORAGE SECTION.\n001100 77   FILLER         PIC X(35) VALUE 'START OF CALLGRPC W.S.'.\n001200 77   IOOP           PIC X.\n001300 77   GROUPNBR       PIC 9(8) COMP-3.\n001400 77   STAT-BYT       PIC X.\n001500 77   I              PIC S99 COMP.\n001600*\n001700 01   GRP-MAST             COPY WSGRPMST.\n001800*\n001900 PROCEDURE DIVISION.\n002000*\n002100 START-CALLGRPC.\n002200      MOVE 'O' TO IOOP.\n002300      MOVE ZEROS TO GROUPNBR.\n002400      CALL 'READGRP' USING IOOP, GRP-MAST, GROUPNBR, STAT-BYT.\n002500      IF STAT-BYT = '0'\n002600          NEXT SENTENCE\n002700      ELSE\n002800          DISPLAY 'ERROR OPENING GRP-MAST',\n002900          DISPLAY 'STATUS CODE IS ' STAT-BYT,\n003000          CALL 'COBABEND'.\n003100      MOVE 'N' TO IOOP.\n003200      MOVE ZEROS TO GROUPNBR.\n003300      PERFORM 1000-READ-SEQ THRU 1000-EXIT\n003400          VARYING I FROM 1 BY 1 UNTIL I > 5.\n003500      MOVE 'C' TO IOOP.\n003600      MOVE ZEROS TO GROUPNBR.\n003700      CALL 'READGRP' USING IOOP, GRP-MAST, GROUPNBR, STAT-BYT.\n003800      IF STAT-BYT = '0'\n003900          NEXT SENTENCE\n004000      ELSE\n004100          DISPLAY 'ERROR CLOSING GRP-MAST',\n004200          DISPLAY 'STATUS CODE IS ' STAT-BYT,\n004300          CALL 'COBABEND'.\n004400      GOBACK.\n004500 1000-READ-SEQ.\n004600      CALL 'READGRP' USING IOOP, GRP-MAST, GROUPNBR, STAT-BYT.\n004700      IF STAT-BYT = '0'\n004800          NEXT SENTENCE\n004900      ELSE\n005000          DISPLAY 'ERROR CLOSING GRP-MAST',\n005100          DISPLAY 'STATUS CODE IS ' STAT-BYT,\n005200          CALL 'COBABEND'.\n005300          DISPLAY 'READ RECORD NUMBER ' I.\n005400          DISPLAY 'GRP-NAME IS ' GRP-NAME.\n005500 1000-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLGTDS": {"ttr": 2563, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x13\\x00\\x93\\x07\\x0f\\x00\\x93\\x16\\x8f\\x14@\\x00\\xb9\\x00\\xb4\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "1993-06-17T14:40:13", "lines": 185, "newlines": 180, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLGTDS.\n000300***********************************************************\n000400*  TEST BUCKET FOR CALLING GETDSNC SUBROUTINE: A FILE IS  *\n000510*  READ WHICH CONTAINS A 6-BYTE VOLUME SERIAL NUMBER IN   *\n000511*  POSITIONS 1-6. THE VOLUME SERIAL MUST BE FOR A TAPE    *\n000512*  CATALOGED UNDER TMS. THE VOLUME SERIAL IS PASSED TO    *\n000513*  THE GETDSNC SUBROUTINE, WHICH OBTAINS THE DATASET NAME *\n000514*  BY INTERFACING WITH TMS. THE DATASET NAME RETURNED IS  *\n000515*  PRINTED.                                               *\n000516***********************************************************\n000520 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n001000     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.\n001010     SELECT PRINT-FILE ASSIGN TO UT-S-PRINT1.\n001100*\n001200 DATA DIVISION.\n001400 FILE SECTION.\n001500*\n001600 FD  INPUT-FILE\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     RECORDING MODE IS F\n001900     BLOCK CONTAINS 0 RECORDS\n002000     LABEL RECORD IS STANDARD\n002100     DATA RECORD IS INPUT-RECORD.\n002200*\n002300 01  INPUT-RECORD.\n002310     05 VOLUME-SERIAL       PIC X(6).\n002320     05 FILLER              PIC X(74).\n002410*\n002420 FD  PRINT-FILE\n002430     RECORD CONTAINS 133 CHARACTERS\n002440     RECORDING MODE IS F\n002450     BLOCK CONTAINS 0 RECORDS\n002460     LABEL RECORD IS STANDARD\n002470     DATA RECORD IS PRINT-RECORD.\n002480*\n002490 01  PRINT-RECORD.\n002491     05 CARRIAGE-CONTROL    PIC X.\n002492     05 PRINT-LINE.\n002493         10 VOLUME-SERIAL   PIC X(6).\n002494         10 FILLER          PIC XX.\n002495         10 DATASET-NAME    PIC X(44).\n002496         10 FILLER          PIC X(80).\n002497*\n002500 WORKING-STORAGE SECTION.\n002600*\n002610 01  MISCELLANEOUS-DATA-FIELDS.\n002700     05 FILLER                      PIC X(36)  VALUE\n002800                      'CALLGTDS WORKING STORAGE BEGINS HERE'.\n002801     05 TABLE-1-TEST                PIC XX OCCURS 30 TIMES.\n002802     05 UNTABLE-1-TEST              PIC X(60).\n002803     05 TARGET-TEST                 PIC XX.\n002810     05 END-OF-INPUT-SWITCH         PIC X VALUE 'N'.\n002820        88 END-OF-INPUT-FILE        VALUE 'Y'.\n002830     05 COUNT-OF-PAGES              PIC S9(5) COMP-3 VALUE +0.\n002850     05 COUNT-OF-LINES              PIC S9(3) COMP-3 VALUE +0.\n002851        88 BOTTOM-OF-PAGE           VALUE +58.\n002860     05 CCTL                        PIC 9.\n002861     05 WS-DATE.\n002862        10 WS-YEAR                  PIC XX.\n002863        10 WS-MONTH                 PIC XX.\n002864        10 WS-DAY                   PIC XX.\n002870*\n002871 01  HEADING-LINE-1.\n002872     05 FILLER                      PIC X VALUE SPACES.\n002873     05 FILLER                      PIC X(13) VALUE\n002874                                    'REPORT DATE: '.\n002875     05 HEADING-MONTH               PIC XX.\n002876     05 FILLER                      PIC X VALUE '/'.\n002877     05 HEADING-DAY                 PIC XX.\n002878     05 FILLER                      PIC X VALUE '/'.\n002879     05 HEADING-YEAR                PIC XX.\n002881     05 FILLER                      PIC X(19) VALUE\n002882                                    ', PROGRAM: CALLGTDS'.\n002883     05 FILLER                      PIC X(22) VALUE SPACES.\n002885     05 FILLER                      PIC X(37) VALUE\n002886                     'DATASET NAME FOR VOLUME SERIAL REPORT'.\n002887     05 FILLER                      PIC X(22) VALUE SPACES.\n002889     05 FILLER                      PIC X(6) VALUE 'PAGE: '.\n002890     05 HEADING-PAGE                PIC Z(5).\n002891*\n002892 01  HEADING-LINE-2.\n002893     05 FILLER                      PIC X VALUE SPACES.\n002894     05 FILLER                      PIC X(6) VALUE SPACES.\n002895     05 FILLER                      PIC XX   VALUE SPACES.\n002896     05 FILLER                      PIC X(44) VALUE SPACES.\n002897     05 FILLER                      PIC X(50) VALUE SPACES.\n002898*\n002899 01  PARM-FIELD.\n002900     05 VOLUME-SERIAL               PIC X(6).\n002901     05 FILLER                      PIC X.\n002902     05 DATASET-NAME                PIC X(44).\n002903     05 FILLER                      PIC X.\n002904     05 SUCCESS-INDICATOR           PIC XX.\n002905        88 CALL-WAS-SUCCESSFUL      VALUE '00'.\n002906     05 FILLER                      PIC X(16).\n002907*\n003000 PROCEDURE DIVISION.\n003001*\n003010 1000-EXECUTIVE.\n003011     MOVE TABLE-1-TEST (1) TO TARGET-TEST.\n003013     MOVE UNTABLE-1-TEST (1:3) TO TARGET-TEST.\n003020     PERFORM 2000-INITIALIZATION THRU 2000-EXIT.\n003030     PERFORM 3000-MAINLINE THRU 3000-EXIT\n003040         UNTIL END-OF-INPUT-FILE.\n003050     PERFORM 9000-TERMINATION THRU 9000-EXIT.\n003060     GOBACK.\n003061*\n003070 2000-INITIALIZATION.\n003100     OPEN INPUT INPUT-FILE,\n003110          OUTPUT PRINT-FILE.\n003111     ACCEPT WS-DATE FROM DATE.\n003112     MOVE WS-MONTH TO HEADING-MONTH.\n003113     MOVE WS-DAY TO HEADING-DAY.\n003114     MOVE WS-YEAR TO HEADING-YEAR.\n003124     PERFORM 7000-PRINT-HEADING THRU 7000-EXIT.\n003125     PERFORM 5000-READ-INPUT-FILE THRU 5000-EXIT.\n003130 2000-EXIT. EXIT.\n003140*\n003200 3000-MAINLINE.\n003210     PERFORM 4000-PROCESS-RECORD THRU 4000-EXIT.\n003300     PERFORM 5000-READ-INPUT-FILE THRU 5000-EXIT.\n003400 3000-EXIT. EXIT.\n003500*\n003501 4000-PROCESS-RECORD.\n003503     MOVE VOLUME-SERIAL IN INPUT-RECORD TO\n003504          VOLUME-SERIAL IN PARM-FIELD.\n003505     CALL 'GETDSNC' USING PARM-FIELD.\n003506     IF CALL-WAS-SUCCESSFUL\n003507         PERFORM 4100-FORMAT-DATA-LINE THRU 4100-EXIT\n003509     ELSE\n003510         PERFORM 4700-FORMAT-ERROR-LINE THRU 4700-EXIT.\n003511     PERFORM 6000-PRINT-A-LINE THRU 6000-EXIT.\n003512 4000-EXIT. EXIT.\n003513*\n003514 4100-FORMAT-DATA-LINE.\n003515          MOVE DATASET-NAME IN PARM-FIELD TO\n003516               DATASET-NAME IN PRINT-RECORD.\n003517          MOVE VOLUME-SERIAL IN INPUT-RECORD TO\n003518               VOLUME-SERIAL IN PRINT-RECORD.\n003519          PERFORM 6000-PRINT-A-LINE THRU 6000-EXIT.\n003520 4100-EXIT. EXIT.\n003521*\n003522 4700-FORMAT-ERROR-LINE.\n003523          MOVE 'UNABLE TO OBTAIN DATASET NAME' TO\n003524               DATASET-NAME IN PRINT-RECORD.\n003525          MOVE VOLUME-SERIAL IN INPUT-RECORD TO\n003526               VOLUME-SERIAL IN PRINT-RECORD.\n003527          PERFORM 6000-PRINT-A-LINE THRU 6000-EXIT.\n003528 4700-EXIT. EXIT.\n003529*\n003530 5000-READ-INPUT-FILE.\n003531     READ INPUT-FILE\n003532         AT END\n003533             MOVE 'Y' TO END-OF-INPUT-SWITCH.\n003541 5000-EXIT. EXIT.\n003542*\n003543 6000-PRINT-A-LINE.\n003544     WRITE PRINT-RECORD AFTER ADVANCING CCTL LINES.\n003545     ADD CCTL TO COUNT-OF-LINES.\n003546     MOVE 1 TO CCTL.\n003547     MOVE SPACES TO PRINT-RECORD.\n003548     IF BOTTOM-OF-PAGE\n003549         PERFORM 7000-PRINT-HEADING THRU 7000-EXIT.\n003550 6000-EXIT. EXIT.\n003551*\n003552 7000-PRINT-HEADING.\n003553     MOVE COUNT-OF-PAGES TO HEADING-PAGE.\n003555     MOVE HEADING-LINE-1 TO PRINT-RECORD.\n003556     WRITE PRINT-RECORD AFTER ADVANCING PAGE.\n003557     MOVE HEADING-LINE-2 TO PRINT-RECORD.\n003558     MOVE 2 TO CCTL.\n003559     WRITE PRINT-RECORD AFTER ADVANCING CCTL LINES.\n003560     MOVE SPACES TO PRINT-RECORD.\n003561     MOVE 3 TO COUNT-OF-LINES.\n003562     ADD 1 TO COUNT-OF-PAGES.\n003563 7000-EXIT. EXIT.\n003570*\n003600 9000-TERMINATION.\n003700     CLOSE INPUT-FILE,\n003800           PRINT-FILE.\n003900 9000-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLGTDT": {"ttr": 2567, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\t\\x00\\x93%\\x9f\\x00\\x93%\\x9f\\x12\\x03\\x00~\\x00\\x89\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1993-09-16T00:00:00", "modifydate": "1993-09-16T12:03:09", "lines": 126, "newlines": 137, "modlines": 0, "user": "USER02"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    CALLGTDT.\n       AUTHOR. R THORNTON\n      *TEST BUCKET TO COMPARE THE DATES RETURNED BY GETDATE\n      *AND GETDATE2 FOR ALL DATES IN A YEAR. THIS PROGRAM\n      *CREATES A DATE FILE, CALLS GETDATE, THEN GETDATE2 FOR EACH\n      *VALID FORMAT AND COMPARES THE DATA RETURNED. DIFFERENCES ARE\n      *PRINTED. AFTER EACH DATE IS PROCESSED, THE DATE FILE IS UPDATED\n      *FOR THE NEXT DATE UNTIL ALL DATES FROM JAN 1 THRU DEC 31 HAVE\n      *BEEN PROCESSED.\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT DATE-FILE ASSIGN TO DATE2.\n           SELECT PRINT-FILE ASSIGN TO PRINT1.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  DATE-FILE\n           RECORDING MODE IS F\n           LABEL RECORDS ARE STANDARD.\n       01  DATE-RECORD             PIC X(80).                                 10\n       FD  PRINT-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  PRINT-RECORD.                                                      10\n           05  PRINT-FLAG          PIC XXX.\n           05  FILLER              PIC X.\n           05  PRINT-DATE          PIC X(8).\n           05  FILLER              PIC X.\n           05  PRINT-REQUEST       PIC X.\n           05  FILLER              PIC X.\n           05  PRINT-GETDATE       PIC X(18).\n           05  FILLER              PIC X.\n           05  PRINT-GETDATE2      PIC X(18).\n           05  FILLER              PIC X(28).\n       WORKING-STORAGE SECTION.\n       77  FILLER PIC X(36)  VALUE\n           'CALLGTDT WORKING STORAGE BEGINS HERE'.\n       01  WS-MISCELLANEOUS.\n           05  WS-END-SWITCH       PIC X VALUE 'Y'.\n               88  MORE-DATES      VALUE 'Y'.\n               88  NO-MORE-DATES   VALUE 'N'.\n           05  WS-DATE-RECORD.\n               10  FILLER          PICTURE X(6) VALUE ' DATE='.\n               10  WS-DATE.\n                   15  WS-MONTH    PIC 99 VALUE 01.\n                   15  FILLER      PIC X VALUE '/'.\n                   15  WS-DAY      PIC 99 VALUE 00.\n                   15  FILLER      PIC X VALUE '/'.\n                   15  WS-YEAR     PIC 99 VALUE 92.\n           05  WS-GETDATE2-RETURN  PIC X(18).\n           05  WS-GETDATE-RETURN   PIC X(18).\n           05  WS-FORMAT-REQUEST   PIC X.\n\n       PROCEDURE DIVISION.\n\n       A100-EXECUTIVE-CONTROL.\n           PERFORM A100-INITIALIZATION.\n           PERFORM B100-MAINLINE-PROCESSING\n               UNTIL NO-MORE-DATES.\n           PERFORM Z100-END-OF-PROCESSING.\n           GOBACK.\n\n       A100-INITIALIZATION.\n           OPEN OUTPUT PRINT-FILE.\n\n       B100-MAINLINE-PROCESSING.\n           PERFORM C100-INITIALIZE-DATE-FILE.\n           IF MORE-DATES\n               PERFORM D100-COMPARE-RESULTS.\n\n       C100-INITIALIZE-DATE-FILE.\n           PERFORM C200-UPDATE-DATE.\n           IF MORE-DATES\n               OPEN OUTPUT DATE-FILE\n               WRITE DATE-RECORD FROM WS-DATE-RECORD\n               CLOSE DATE-FILE.\n\n       C200-UPDATE-DATE.\n           IF WS-DATE = '12/31/92'\n               MOVE 'N' TO WS-END-SWITCH.\n           ADD 1 TO WS-DAY.\n           IF WS-DAY > 31\n               ADD 1 TO WS-MONTH\n               MOVE 01 TO WS-DAY.\n\n       D100-COMPARE-RESULTS.\n           MOVE 'A' TO WS-FORMAT-REQUEST.\n           PERFORM D200-CALL-SUBROUTINES.\n           MOVE 'S' TO WS-FORMAT-REQUEST.\n           PERFORM D200-CALL-SUBROUTINES.\n           MOVE 'Y' TO WS-FORMAT-REQUEST.\n           PERFORM D200-CALL-SUBROUTINES.\n           MOVE 'D' TO WS-FORMAT-REQUEST.\n           PERFORM D200-CALL-SUBROUTINES.\n           MOVE SPACES TO PRINT-RECORD.\n           PERFORM E100-PRINT-A-LINE.\n\n       D200-CALL-SUBROUTINES.\n           MOVE ALL 'A' TO WS-GETDATE-RETURN.\n           MOVE WS-GETDATE-RETURN TO WS-GETDATE2-RETURN.\n           CALL 'GETDATE' USING WS-GETDATE-RETURN,\n                                WS-FORMAT-REQUEST.\n           CALL 'GETDATE2' USING WS-GETDATE2-RETURN,\n                                WS-FORMAT-REQUEST.\n           PERFORM D300-PRINT-RESULTS.\n\n       D300-PRINT-RESULTS.\n           MOVE SPACES TO PRINT-RECORD.\n           MOVE WS-FORMAT-REQUEST TO PRINT-REQUEST.\n           MOVE WS-DATE TO PRINT-DATE.\n           MOVE WS-GETDATE-RETURN TO PRINT-GETDATE.\n           MOVE WS-GETDATE2-RETURN TO PRINT-GETDATE2.\n           IF WS-GETDATE-RETURN = WS-GETDATE2-RETURN\n               MOVE '   ' TO PRINT-FLAG\n           ELSE\n               MOVE 'BAD' TO PRINT-FLAG.\n           PERFORM E100-PRINT-A-LINE.\n\n       E100-PRINT-A-LINE.\n           WRITE PRINT-RECORD.\n\n       Z100-END-OF-PROCESSING.\n           CLOSE PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLGTD3": {"ttr": 2570, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x00\\x930\\x7f\\x00\\x930\\x7f\\x082\\x00t\\x00r\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-11-03T00:00:00", "modifydate": "1993-11-03T08:32:02", "lines": 116, "newlines": 114, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLGTD3.\n000300 AUTHOR. R THORNTON\n000400*TEST BUCKET TO EXERCISE THE GETDATE3 SUBROUTINE. SENDS\n000500*ALL DATES IN A YEAR TO GETDATE3 BY WRITING SUCCESSIVELY\n000600*HIGHER DATES TO THE DATE FILE, THEN CALLING GETDATE3. EACH\n000700*OF THE GETDATE FORMATS IS EXERCISED AND THE RESULTING DATE\n000800*RETURNED IS PRINTED.\n001100 ENVIRONMENT DIVISION.\n001200 CONFIGURATION SECTION.\n001300 INPUT-OUTPUT SECTION.\n001400 FILE-CONTROL.\n001500     SELECT DATE-FILE ASSIGN TO DATE2.\n001600     SELECT PRINT-FILE ASSIGN TO PRINT1.\n001700 DATA DIVISION.\n001800 FILE SECTION.\n001900 FD  DATE-FILE\n002000     RECORDING MODE IS F\n002100     LABEL RECORDS ARE STANDARD.\n002200 01  DATE-RECORD             PIC X(80).                                 10\n002300 FD  PRINT-FILE\n002400     RECORDING MODE IS F\n002500     BLOCK CONTAINS 0 RECORDS\n002600     LABEL RECORDS ARE STANDARD.\n002700 01  PRINT-RECORD.                                                      10\n002900     05  FILLER              PIC X(4).\n003000     05  PRINT-DATE          PIC X(8).\n003100     05  FILLER              PIC X.\n003200     05  PRINT-REQUEST       PIC X.\n003300     05  FILLER              PIC X.\n003400     05  PRINT-GETDATE       PIC X(18).\n003500     05  FILLER              PIC X(47).\n003800 WORKING-STORAGE SECTION.\n003900 77  FILLER PIC X(36)  VALUE\n004000     'CALLGTD3 WORKING STORAGE BEGINS HERE'.\n004100 01  WS-MISCELLANEOUS.\n004200     05  ABOVE-BELOW-INDICATOR PIC X VALUE SPACE.\n004210     05  WS-END-SWITCH       PIC X VALUE 'Y'.\n004300         88  MORE-DATES      VALUE 'Y'.\n004400         88  NO-MORE-DATES   VALUE 'N'.\n004500     05  WS-DATE-RECORD.\n004600         10  FILLER          PICTURE X(6) VALUE ' DATE='.\n004700         10  WS-DATE.\n004800             15  WS-MONTH    PIC 99 VALUE 01.\n004900             15  FILLER      PIC X VALUE '/'.\n005000             15  WS-DAY      PIC 99 VALUE 00.\n005100             15  FILLER      PIC X VALUE '/'.\n005200             15  WS-YEAR     PIC 99 VALUE 92.\n005300     05  WS-GETDATE2-RETURN  PIC X(18).\n005400     05  WS-GETDATE-RETURN   PIC X(18).\n005500     05  WS-FORMAT-REQUEST   PIC X.\n005600\n005700 PROCEDURE DIVISION.\n005800\n005900 A100-EXECUTIVE-CONTROL.\n006000     PERFORM A100-INITIALIZATION.\n006100     PERFORM B100-MAINLINE-PROCESSING\n006200         UNTIL NO-MORE-DATES.\n006300     PERFORM Z100-END-OF-PROCESSING.\n006400     GOBACK.\n006500\n006600 A100-INITIALIZATION.\n006700     OPEN OUTPUT PRINT-FILE.\n006710     CALL 'WHEREAMI' USING ABOVE-BELOW-INDICATOR.\n006800\n006900 B100-MAINLINE-PROCESSING.\n007000     PERFORM C100-INITIALIZE-DATE-FILE.\n007100     IF MORE-DATES\n007200         PERFORM D100-EXERCISE-GETDATE3.\n007300\n007400 C100-INITIALIZE-DATE-FILE.\n007500     PERFORM C200-UPDATE-DATE.\n007600     IF MORE-DATES\n007700         OPEN OUTPUT DATE-FILE\n007800         WRITE DATE-RECORD FROM WS-DATE-RECORD\n007900         CLOSE DATE-FILE.\n008000\n008100 C200-UPDATE-DATE.\n008200     IF WS-DATE = '12/31/92'\n008300         MOVE 'N' TO WS-END-SWITCH.\n008400     ADD 1 TO WS-DAY.\n008500     IF WS-DAY > 31\n008600         ADD 1 TO WS-MONTH\n008700         MOVE 01 TO WS-DAY.\n008800\n008900 D100-EXERCISE-GETDATE3.\n009000     MOVE 'A' TO WS-FORMAT-REQUEST.\n009100     PERFORM D200-CALL-GETDATE3.\n009200     MOVE 'S' TO WS-FORMAT-REQUEST.\n009300     PERFORM D200-CALL-GETDATE3.\n009400     MOVE 'Y' TO WS-FORMAT-REQUEST.\n009500     PERFORM D200-CALL-GETDATE3.\n009600     MOVE 'D' TO WS-FORMAT-REQUEST.\n009700     PERFORM D200-CALL-GETDATE3.\n009800     MOVE SPACES TO PRINT-RECORD.\n009900     PERFORM E100-PRINT-A-LINE.\n010000\n010100 D200-CALL-GETDATE3.\n010200     MOVE ALL 'A' TO WS-GETDATE-RETURN.\n010300     MOVE WS-GETDATE-RETURN TO WS-GETDATE2-RETURN.\n010400     CALL 'GETDATE3' USING WS-GETDATE-RETURN,\n010500                          WS-FORMAT-REQUEST.\n010800     PERFORM D300-PRINT-RESULTS.\n010900\n011000 D300-PRINT-RESULTS.\n011100     MOVE SPACES TO PRINT-RECORD.\n011200     MOVE WS-FORMAT-REQUEST TO PRINT-REQUEST.\n011300     MOVE WS-DATE TO PRINT-DATE.\n011400     MOVE WS-GETDATE-RETURN TO PRINT-GETDATE.\n012000     PERFORM E100-PRINT-A-LINE.\n012100\n012200 E100-PRINT-A-LINE.\n012300     WRITE PRINT-RECORD.\n012400\n012500 Z100-END-OF-PROCESSING.\n012600     CLOSE PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLGTVL": {"ttr": 2573, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x14\\x00\\x92$\\x1f\\x00\\x933_\\x16%\\x00J\\x00H\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-08-28T00:00:00", "modifydate": "1993-12-01T16:25:14", "lines": 74, "newlines": 72, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLGTVL.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET FOR CALLING GETVOLS SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900*\n001000     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.\n001100     SELECT PRINT-FILE  ASSIGN TO UT-S-PRINT1.\n001200*\n001300 DATA DIVISION.\n001400*\n001500 FILE SECTION.\n001600*\n001700 FD  INPUT-FILE\n001800     RECORD CONTAINS 80 CHARACTERS\n001900     RECORDING MODE IS F\n002000     BLOCK CONTAINS 0 RECORDS\n002100     LABEL RECORD IS STANDARD\n002200     DATA RECORD IS SOURCE-RECORD.\n002300*\n002400 01  SOURCE-RECORD           PIC X(80).\n002500*\n002600 FD  PRINT-FILE\n002700     RECORD CONTAINS 133 CHARACTERS\n002800     RECORDING MODE IS F\n002900     BLOCK CONTAINS 0 RECORDS\n003000     LABEL RECORD IS STANDARD\n003100     DATA RECORD IS PRINT-RECORD.\n003200*\n003300 01  PRINT-RECORD.\n003400     05  CARRIAGE-CONTROL    PIC X.\n003500     05  PRINT-DATA          PIC X(132).\n003600\n003700 WORKING-STORAGE SECTION.\n003800\n003900 77  FILLER PIC X(36)  VALUE\n004000     'CALLGTVL WORKING STORAGE BEGINS HERE'.\n004100\n004200 01  MISCELLANEOUS-AREAS.\n004300     05 VOLSER-TABLE.\n004400        10 VOLUME-SERIAL     PIC X(6) OCCURS 5 TIMES.\n004500\n004600 PROCEDURE DIVISION.\n004700\n004800     OPEN OUTPUT PRINT-FILE.\n004900     CALL 'GETVOLS' USING INPUT-FILE, VOLSER-TABLE.\n005000     MOVE '1: GETVOLS CALLED FOR INPUT1 BEFORE OPEN:'\n005100         TO PRINT-DATA.\n005200     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n005300     MOVE VOLSER-TABLE TO PRINT-DATA.\n005400     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n005500     MOVE SPACES TO PRINT-DATA.\n005600     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n005700     OPEN INPUT INPUT-FILE.\n005800     CALL 'GETVOLS' USING INPUT-FILE, VOLSER-TABLE.\n005900     MOVE '1: GETVOLS CALLED FOR INPUT1 AFTER OPEN:'\n006000         TO PRINT-DATA.\n006100     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n006200     MOVE VOLSER-TABLE TO PRINT-DATA.\n006300     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n006400     MOVE SPACES TO PRINT-DATA.\n006500     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n006600     CALL 'GETVOLS' USING PRINT-FILE, VOLSER-TABLE.\n006700     MOVE '1: GETVOLS CALLED FOR PRINT1 AFTER OPEN:'\n006800         TO PRINT-DATA.\n006900     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n007000     MOVE VOLSER-TABLE TO PRINT-DATA.\n007100     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n007200     MOVE SPACES TO PRINT-DATA.\n007300     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n007400     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLGTVM": {"ttr": 2817, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00\\x06\\x00\\x99\\x11o\\x00\\x99\\x11\\x7f\\x11C\\x00\\xbb\\x00\\x9f\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "1999-04-26T00:00:00", "modifydate": "1999-04-27T11:43:06", "lines": 187, "newlines": 159, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLGTVM.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. CALLTHE GETVOLUM SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FILE ASSIGN TO INPUT1.\n000730     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.\n000740     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  INPUT-FILE\n000821     BLOCK CONTAINS 0 RECORDS\n000822     RECORD CONTAINS 80 CHARACTERS\n000823     RECORDING MODE IS F\n000830     LABEL RECORDS ARE STANDARD.\n000840 01  INPUT-RECORD.                                                      10\n000850   05  FIELD-1               PIC XX.                                    20\n000860   05  FIELD-2               PIC X(14).                                 30\n000861   05  FIELD-3               PIC Z(5).                                  30\n000870   05  FILLER                PIC X(59).                                 40\n000874\n000875 FD  OUTPUT-FILE\n000876     BLOCK CONTAINS 0 RECORDS\n000877     RECORD CONTAINS 80 CHARACTERS\n000878     RECORDING MODE IS F\n000879     LABEL RECORDS ARE STANDARD.\n000880 01  OUTPUT-RECORD.                                                     10\n000881   05  OUT-COUNT             PIC X(10).                                 20\n000884   05  FILLER                PIC X(70).                                 40\n000888\n000889 FD  PRINT-FILE\n000890     BLOCK CONTAINS 0 RECORDS\n000891     RECORD CONTAINS 133 CHARACTERS\n000892     RECORDING MODE IS F\n000893     LABEL RECORDS ARE STANDARD.\n000894\n000895 01  PRINT-LINE.\n000896     05  CARRIAGE-CONTROL-BYTE PIC X.                                   20\n000897     05  PRT-COUNT-MSG         PIC X(13).\n000898     05  FILLER                PIC X.\n000899     05  PRT-COUNTER           PIC X(10).\n000900     05  FILLER                PIC X(108).\n000901\n000902 01  PRINT-VOLSER.                                                      10\n000903     05  FILLER                PIC X.                                   20\n000904     05  PRT-DSNAME            PIC X(8).                                20\n000905     05  FILLER                PIC X.                                   30\n000906     05  PRT-MSG               PIC X(16).                               30\n000907     05  FILLER                PIC X.                                   40\n000908     05  PRT-VOLSER            PIC X(6).\n000909     05  FILLER                PIC X.                                   40\n000910     05  PRT-MSG2              PIC X(15).\n000911     05  FILLER                PIC X.                                   40\n000912     05  PRT-VOLCHG-COUNT      PIC X(10).\n000913     05  FILLER                PIC X(73).\n000914\n000920 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLGTVM WORKING STORAGE BEGINS HERE'.\n001300 01  GENERAL-AREAS.\n001302     05  END-OF-INPUT-SWITCH PIC X VALUE 'N'.\n001303         88  END-OF-INPUT-DATA  VALUE IS 'Y'.\n001304         88  MORE-DATA-TO-PROCESS VALUE IS 'N'.\n001305     05  COUNTER             PIC S9(10) COMP-3.\n001306     05  VOLUME-SERIAL-NO    PIC X(6).\n001307     05  INPUT1-VOLSER       PIC X(6).\n001308     05  OUTPUT1-VOLSER      PIC X(6).\n001309     05  PRINT1-VOLSER       PIC X(6).\n001320\n001400 LINKAGE SECTION.\n001500 01  PARM-FIELD.\n001510     05  PARM-LENGTH         PIC S9(4) COMP.\n001520     05  PARM-DATA           PIC 9(10).\n001600\n001700 PROCEDURE DIVISION USING PARM-FIELD.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n002000     PERFORM A100-INITIALIZATION.\n002100     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT-DATA.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002500 A100-INITIALIZATION.\n002501     OPEN INPUT INPUT-FILE, OUTPUT OUTPUT-FILE, PRINT-FILE.\n002503     MOVE SPACES TO PRINT-LINE.\n002504     MOVE SPACES TO OUTPUT-RECORD.\n002510     IF PARM-LENGTH = 10\n002520         AND PARM-DATA IS NUMERIC,\n002530             MOVE PARM-DATA TO COUNTER\n002540     ELSE\n002550        DISPLAY 'INVALID 10-DIGIT PARM FIELD'\n002560        CALL 'COBABEND'.\n002570     MOVE COUNTER TO PRT-COUNTER.\n002580     MOVE 'PARM COUNT IS' TO PRT-COUNT-MSG.\n002590     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n002611     CALL 'GETVOLUM' USING INPUT-FILE, INPUT1-VOLSER.\n002630     MOVE 'INPUT1' TO PRT-DSNAME.\n002640     MOVE 'VOLUME SERIAL IS' TO PRT-MSG.\n002641     MOVE INPUT1-VOLSER TO PRT-VOLSER.\n002650     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n002660     CALL 'GETVOLUM' USING OUTPUT-FILE, OUTPUT1-VOLSER.\n002662     MOVE 'OUTPUT1' TO PRT-DSNAME.\n002663     MOVE 'VOLUME SERIAL IS' TO PRT-MSG.\n002664     MOVE OUTPUT1-VOLSER TO PRT-VOLSER.\n002665     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n002670     CALL 'GETVOLUM' USING PRINT-FILE, PRINT1-VOLSER.\n002690     MOVE 'PRINT1' TO PRT-DSNAME.\n002691     MOVE 'VOLUME SERIAL IS' TO PRT-MSG.\n002692     MOVE PRINT1-VOLSER TO PRT-VOLSER.\n002693     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n002694     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n002700\n002800 B100-MAINLINE-PROCESSING.\n002900     PERFORM C100-READ-INPUT-FILE THRU C100-EXIT.\n002910     IF MORE-DATA-TO-PROCESS\n002920         PERFORM E100-WRITE-OUTPUT-FILE THRU E100-EXIT.\n003010\n003020 C100-READ-INPUT-FILE.\n003030     READ INPUT-FILE\n003040         AT END MOVE 'Y' TO END-OF-INPUT-SWITCH.\n003041     IF MORE-DATA-TO-PROCESS\n003042         CALL 'GETVOLUM' USING INPUT-FILE, VOLUME-SERIAL-NO\n003043             IF VOLUME-SERIAL-NO = INPUT1-VOLSER\n003044                 NEXT SENTENCE\n003045             ELSE\n003046                 MOVE VOLUME-SERIAL-NO TO INPUT1-VOLSER\n003047                 MOVE 'INPUT1' TO PRT-DSNAME\n003048                 MOVE 'VOLUME SERIAL IS' TO PRT-MSG\n003049                 MOVE INPUT1-VOLSER TO PRT-VOLSER\n003050                 MOVE 'RECORD COUNT IS' TO PRT-MSG2\n003051                 MOVE COUNTER TO PRT-VOLCHG-COUNT\n003052                 PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003053 C100-EXIT. EXIT.\n003060\n003092 E100-WRITE-OUTPUT-FILE.\n003093     SUBTRACT 1 FROM COUNTER.\n003094     MOVE COUNTER TO OUT-COUNT.\n003095     WRITE OUTPUT-RECORD.\n003096     MOVE SPACES TO OUTPUT-RECORD.\n003098     CALL 'GETVOLUM' USING OUTPUT-FILE, VOLUME-SERIAL-NO.\n003099     IF VOLUME-SERIAL-NO = OUTPUT1-VOLSER\n003100         NEXT SENTENCE\n003101     ELSE\n003102         MOVE VOLUME-SERIAL-NO TO OUTPUT1-VOLSER\n003103         MOVE 'OUTPUT1' TO PRT-DSNAME\n003104         MOVE 'VOLUME SERIAL IS' TO PRT-MSG\n003105         MOVE OUTPUT1-VOLSER TO PRT-VOLSER\n003106         MOVE 'RECORD COUNT IS' TO PRT-MSG2\n003107         MOVE COUNTER TO PRT-VOLCHG-COUNT\n003108         PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT\n003109         PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003110 E100-EXIT. EXIT.\n003111\n003112 Y100-PRINT-A-LINE.\n003113     WRITE PRINT-LINE AFTER ADVANCING 1.\n003114     MOVE SPACES TO PRINT-LINE.\n003115 Y100-EXIT. EXIT.\n003116\n003117 Z100-END-OF-PROCESSING.\n003118     PERFORM E100-WRITE-OUTPUT-FILE THRU E100-EXIT\n003119         UNTIL COUNTER < 1.\n003120     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003121     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003122     MOVE COUNTER TO PRT-COUNTER.\n003123     MOVE ' END COUNT IS' TO PRT-COUNT-MSG.\n003124     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003130     CALL 'GETVOLUM' USING INPUT-FILE, INPUT1-VOLSER.\n003150     MOVE 'INPUT1' TO PRT-DSNAME.\n003160     MOVE 'VOLUME SERIAL IS' TO PRT-MSG.\n003170     MOVE INPUT1-VOLSER TO PRT-VOLSER.\n003180     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003190     CALL 'GETVOLUM' USING OUTPUT-FILE, OUTPUT1-VOLSER.\n003210     MOVE 'OUTPUT1' TO PRT-DSNAME.\n003220     MOVE 'VOLUME SERIAL IS' TO PRT-MSG.\n003230     MOVE OUTPUT1-VOLSER TO PRT-VOLSER.\n003240     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003250     CALL 'GETVOLUM' USING PRINT-FILE, PRINT1-VOLSER.\n003270     MOVE 'PRINT1' TO PRT-DSNAME.\n003280     MOVE 'VOLUME SERIAL IS' TO PRT-MSG.\n003290     MOVE PRINT1-VOLSER TO PRT-VOLSER.\n003291     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003300     CLOSE INPUT-FILE,\n003400           OUTPUT-FILE,\n003500           PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLJBIN": {"ttr": 2821, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00G\\x00\\x96\\x01\\x0f\\x01\\x02\\x02\\x8f\\x13\\x19\\x00&\\x00&\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1996-01-10T00:00:00", "modifydate": "2002-01-28T13:19:47", "lines": 38, "newlines": 38, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLJBIN.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. USED TO TEST CALLS TO THE JOBINFO SUBROUTINE\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900     SELECT PRINT-FILE ASSIGN TO PRINT1.\n001000 DATA DIVISION.\n001100 FILE SECTION.\n001200 FD  PRINT-FILE\n001300     BLOCK CONTAINS 0 RECORDS\n001400     RECORD CONTAINS 133 CHARACTERS\n001500     LABEL RECORDS ARE STANDARD\n001600     RECORDING MODE IS F\n001700     DATA RECORD IS PRINT-LINE.\n001800 01  PRINT-LINE.\n001900     05  PRINT-CONTROL                  PIC X.\n002000     05  PRINT-JOB-NAME                 PIC X(8).\n002100     05  FILLER                         PIC XX.\n002200     05  PRINT-JOB-NUMBER               PIC X(8).\n002300     05  FILLER                         PIC X(114).\n002400 WORKING-STORAGE SECTION.\n002500 77  FILLER PIC X(36)  VALUE\n002600     \"CALLJBIN WORKING STORAGE BEGINS HERE\".\n002700 01  JOB-INFO-AREA.\n002800     05  JOB-NAME                      PIC X(8).\n002900     05  JOB-NUMBER                    PIC X(8).\n003000 PROCEDURE DIVISION.\n003100     OPEN OUTPUT PRINT-FILE.\n003200     MOVE SPACES TO PRINT-LINE.\n003300     CALL \"JOBINFO\" USING JOB-INFO-AREA.\n003400     MOVE JOB-NAME TO PRINT-JOB-NAME.\n003500     MOVE JOB-NUMBER TO PRINT-JOB-NUMBER.\n003600     WRITE PRINT-LINE AFTER ADVANCING 1 LINE.\n003700     CLOSE PRINT-FILE.\n003800     GOBACK.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CALLMLCK": {"ttr": 2823, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00B\\x00\\x95\\x05O\\x00\\x95\\x06/\\x165\\x00S\\x009\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-02-23T00:00:00", "modifydate": "1995-03-03T16:35:42", "lines": 83, "newlines": 57, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLMLCK.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET FOR THE MLNKCSUM SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900     SELECT DATA-FILE ASSIGN TO INPUT1.\n000910     SELECT PRINT-FILE ASSIGN TO PRINT1.\n001000 DATA DIVISION.\n001100 FILE SECTION.\n001200 FD  DATA-FILE\n001300     RECORDING MODE IS F\n001400     LABEL RECORDS ARE STANDARD.\n001500 01  INPUT-RECORD.                                                      10\n001510     05  DATA-AREA-LENGTH        PIC X(002).\n001520     05  DATA-AREA               PIC X(078).\n001600\n001610 FD  PRINT-FILE\n001620     RECORDING MODE IS F\n001630     LABEL RECORDS ARE STANDARD.\n001640 01  PRINT-RECORD            PIC X(80).                                 10\n001650\n001700 WORKING-STORAGE SECTION.\n001800 77  FILLER PIC X(36)  VALUE\n001900     \"CALLMLCK WORKING STORAGE BEGINS HERE\".\n002000\n002100 01  MISCELLANEOUS-DATA.\n002110     05  DATA-AREA-BINARY-LENGTH PIC S9(004) COMP.\n002120\n002130 01  DATA-AREA-CHECKSUM-RECORD.\n002140     05  FILLER                  PIC X(011) VALUE \"CHECKSUM = \".\n002150     05  DATA-AREA-CHECKSUM      PIC X(002).\n002160     05  FILLER                  PIC X(067) VALUE SPACES.\n002170\n002180 01  LONG-CHECK.\n002190     05  LONG-DATA-AREA.\n002200         10  FILL00  PIC X(16) VALUE \"0201899999999000\".\n002210         10  FILL01  PIC X(16) VALUE \"0000008999999988\".\n002300         10  FILL02  PIC X(16) VALUE \"9999999809502271\".\n002400         10  FILL03  PIC X(16) VALUE \"43521           \".\n002500         10  FILL04  PIC X(16) VALUE \"                \".\n002600         10  FILL05  PIC X(16) VALUE \"             000\".\n002700         10  FILL06  PIC X(16) VALUE \"0000000000      \".\n002800         10  FILL07  PIC X(16) VALUE \"      0000000000\".\n002900         10  FILL08  PIC X(16) VALUE \"000000      0000\".\n003000         10  FILL09  PIC X(16) VALUE \"000             \".\n003100         10  FILL0A  PIC X(16) VALUE \"                \".\n003200         10  FILL0B  PIC X(16) VALUE \"      00        \".\n003300         10  FILL0C  PIC X(16) VALUE \"                \".\n003400         10  FILL0D  PIC X(16) VALUE \"      0000000000\".\n003500         10  FILL0E  PIC X(16) VALUE \"0000            \".\n003600         10  FILL0F  PIC X(14) VALUE \"              \".\n003610     05  LONG-DATA-LENGTH     PIC S9(4) COMP VALUE +252.\n003620     05  LONG-DATA-CHECKSUM   PIC XX.\n005300\n005400 PROCEDURE DIVISION.\n005700     OPEN OUTPUT PRINT-FILE\n005710          INPUT  DATA-FILE.\n005711\n005720 MAINLINE-ROUTINE.\n005730     READ DATA-FILE\n005731         AT END GO TO END-OF-JOB.\n005740     MOVE INPUT-RECORD TO PRINT-RECORD.\n005750     WRITE PRINT-RECORD.\n005760     MOVE DATA-AREA-LENGTH TO DATA-AREA-BINARY-LENGTH.\n005770     CALL \"MLNKCSUM\" USING DATA-AREA,\n005780                           DATA-AREA-BINARY-LENGTH\n005790                           DATA-AREA-CHECKSUM.\n005791     MOVE DATA-AREA-CHECKSUM-RECORD TO PRINT-RECORD.\n005793     WRITE PRINT-RECORD.\n005794     GO TO MAINLINE-ROUTINE.\n005795\n005796 END-OF-JOB.\n005797     CALL \"MLNKCSUM\" USING LONG-DATA-AREA,\n005799                           LONG-DATA-LENGTH,\n005900                           DATA-AREA-CHECKSUM.\n006000     MOVE DATA-AREA-CHECKSUM-RECORD TO PRINT-RECORD.\n006100     WRITE PRINT-RECORD.\n007400     CLOSE PRINT-FILE.\n007410     CLOSE DATA-FILE.\n007500     GOBACK.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CALLPASS": {"ttr": 2826, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00&\\x00\\x94\\x02_\\x00\\x94\\x02\\x7f\\x08 \\x00 \\x00#\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1994-01-25T00:00:00", "modifydate": "1994-01-27T08:20:26", "lines": 32, "newlines": 35, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLPASS.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. CALLS ANOTHER COBOL PROGRAM PASSING AN ARGUMENT FIELD\n000410*         CONTAINED IN ITS WORKING-STORAGE SECTION. WHEN COMPILED\n000420*         WITH RENT,DATA(31), THE WORKING STORAGE WILL BE GOTTEN\n000430*         DYNAMICALLY FROM ABOVE THE LINE. PURPOSE OF THIS PROGRAM\n000440*         IS TO TEST THE PROBLEMS (IF ANY) CAUSED BY USE OF THIS\n000450*         SCENARIO IN CALLS BETWEEN AMODE=31 AND AMODE=24 COBOL\n000460*         PROGRAMS. A S0C7 ABEND IS CREATED FOLLOWING RETURN FROM\n000470*         RECEIVER IN ORDER TO PRODUCE A DUMP.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000900 WORKING-STORAGE SECTION.\n001000 77  PASSED-DATA             PIC X(36)  VALUE\n001100     'CALLPASS WORKING STORAGE BEGINS HERE'.\n001200 01  MISCELLANY.\n001300     05  INVAL-PACKED        PIC X(3) VALUE LOW-VALUES.\n001400     05  MAKE-S0C7           REDEFINES INVAL-PACKED\n001500                             PIC S9(5) COMP-3.\n001600\n001700 PROCEDURE DIVISION.\n001800     DISPLAY 'CALLPASS: CALLING RECEIVER'.\n002000     CALL 'RECEIVER' USING PASSED-DATA.\n002100     DISPLAY 'CALLPASS: RETURNED FROM RECEIVER.'\n002200     MOVE LOW-VALUES TO INVAL-PACKED.\n002210     ADD 1 TO MAKE-S0C7.\n002300     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLRNMF": {"ttr": 2828, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00&\\x01\\x00\\x07o\\x01\\x00\\x08O\\x10R\\x00W\\x00\\\\\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2000-03-16T00:00:00", "modifydate": "2000-03-24T10:52:26", "lines": 87, "newlines": 92, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.         CALLRNMF\n000300 AUTHOR.             R THORNTON\n000400*****************************************************************\n000500*REMARKS. PROGRAM TO TEST SUBROUTINE RANDMCTF.\n000600*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 CONFIGURATION SECTION.\n000900 INPUT-OUTPUT SECTION.\n001000 FILE-CONTROL.\n001100     SELECT REQUEST-FILE ASSIGN TO REQUESTS.\n001200     SELECT OUTPUT-FILE ASSIGN TO MCTFOUT.\n001300 DATA DIVISION.\n001400 FILE SECTION.\n001500 FD  REQUEST-FILE\n001600     BLOCK CONTAINS 0 RECORDS\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     RECORDING MODE IS F\n001900     LABEL RECORDS ARE STANDARD.\n002000 01  REQUEST-RECORD.                                                    10\n002100     05  REQUEST-CODE            PIC X(1).                              20\n002110     05  REQUEST-KEY             PIC X(15).                             20\n002200     05  FILLER                  PIC X(64).                             40\n002300 FD  OUTPUT-FILE\n002400     BLOCK CONTAINS 0 RECORDS\n002500     RECORD CONTAINS 244 CHARACTERS\n002600     RECORDING MODE IS F\n002700     LABEL RECORDS ARE STANDARD.\n002800 01  OUTPUT-RECORD.                                                     10\n002900     05  OUT-REQUEST-CODE-SENT   PIC X(1).                              20\n002910     05  OUT-REQUEST-KEY-SENT    PIC X(15).                             20\n002920     05  OUT-REQUEST-CODE-BACK   PIC X(1).                              20\n002930     05  OUT-REQUEST-KEY-BACK    PIC X(15).                             20\n003300     05  OUT-MCTF-RECORD-BACK    PIC X(212).                            30\n003400 WORKING-STORAGE SECTION.\n003500 01  MISCELLANEOUS-WORK-FIELDS.\n003600     05  REQUEST-FILE-SWITCH     PIC X VALUE 'N'.\n003700         88 MORE-KEYS            VALUE 'N'.\n003800         88 END-OF-JOB           VALUE 'Y'.\n005100 01  RANDMCTF-FIELDS.\n005200     05  RANDMCTF-IOOP           PIC X.\n005300     05  RANDMCTF-KEY-FIELD      PIC X(15).\n005800 01  RANDMCTF-RETURNED-RECORD    PIC X(212).\n006000\n006600 PROCEDURE DIVISION.\n006700 A100-EXECUTIVE-PROCESSING.\n006800     PERFORM A200-HOUSEKEEPING THRU A200-EXIT.\n006900     PERFORM B100-MAINLINE UNTIL END-OF-JOB.\n007000     PERFORM Z100-END-OF-JOB THRU Z100-EXIT.\n007100     GOBACK.\n007110\n007200 A200-HOUSEKEEPING.\n007300     OPEN INPUT REQUEST-FILE, OUTPUT OUTPUT-FILE.\n007600 A200-EXIT. EXIT.\n007700\n007800 B100-MAINLINE.\n007900     PERFORM C100-READ-REQUEST-RECORD THRU C100-EXIT.\n008000     IF MORE-KEYS\n008010         MOVE REQUEST-CODE TO RANDMCTF-IOOP\n008020         MOVE REQUEST-KEY TO RANDMCTF-KEY-FIELD\n008100         PERFORM D100-CALL-RANDMCTF THRU D100-EXIT\n008200         PERFORM E100-WRITE-OUTPUT THRU E100-EXIT.\n008300 B100-EXIT. EXIT.\n008400\n008500 C100-READ-REQUEST-RECORD.\n008600     READ REQUEST-FILE AT END MOVE 'Y' TO REQUEST-FILE-SWITCH.\n008700 C100-EXIT. EXIT.\n008800\n008900 D100-CALL-RANDMCTF.\n009000     MOVE RANDMCTF-IOOP TO OUT-REQUEST-CODE-SENT.\n009100     MOVE RANDMCTF-KEY-FIELD TO OUT-REQUEST-KEY-SENT.\n009200     MOVE SPACES TO RANDMCTF-RETURNED-RECORD.\n009300     CALL 'RANDMCTF' USING RANDMCTF-IOOP,\n009400                           RANDMCTF-KEY-FIELD,\n009500                           RANDMCTF-RETURNED-RECORD.\n009510     MOVE RANDMCTF-IOOP TO OUT-REQUEST-CODE-BACK.\n009520     MOVE RANDMCTF-KEY-FIELD TO OUT-REQUEST-KEY-BACK.\n009530     MOVE RANDMCTF-RETURNED-RECORD TO OUT-MCTF-RECORD-BACK.\n009600 D100-EXIT. EXIT.\n009700\n009800 E100-WRITE-OUTPUT.\n011500     WRITE OUTPUT-RECORD.\n011600 E100-EXIT. EXIT.\n011700\n011800 Z100-END-OF-JOB.\n011900     CLOSE REQUEST-FILE, OUTPUT-FILE.\n012000 Z100-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLSNAP": {"ttr": 2831, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00R\\x00\\x93(\\x7f\\x00\\x93(\\x7f\\x16#\\x00J\\x00J\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-10-14T00:00:00", "modifydate": "1993-10-14T16:23:52", "lines": 74, "newlines": 74, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.    CALLSNAP.                                               00\n000300 AUTHOR. R THORNTON                                                     00\n000400*REMARKS. USED TO TEST CALLS TO SNAPDUMP.                               00\n000500 ENVIRONMENT DIVISION.                                                  00\n000600 CONFIGURATION SECTION.                                                 00\n000700 INPUT-OUTPUT SECTION.                                                  00\n000800 FILE-CONTROL.                                                          00\n000900     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.                           00\n001000     SELECT OUTPUT-FILE ASSIGN TO UT-S-OUTPUT1.                         00\n001100 DATA DIVISION.                                                         00\n001200 FILE SECTION.                                                          00\n001300                                                                        00\n001400 FD INPUT-FILE                                                          00\n001500     RECORD CONTAINS 80 CHARACTERS                                      00\n001600     RECORDING MODE IS F                                                00\n001700     BLOCK CONTAINS 0 RECORDS                                           00\n001800     LABEL RECORD IS STANDARD                                           00\n001900     DATA RECORD IS INPUT-RECORD.                                       00\n002000                                                                        00\n002100 01  INPUT-RECORD.                                                      00\n002200     05  FILLER              PIC X(80).                                 00\n002300                                                                        00\n002400 FD OUTPUT-FILE                                                         00\n002500     RECORD CONTAINS 80 CHARACTERS                                      00\n002600     RECORDING MODE IS F                                                00\n002700     BLOCK CONTAINS 0 RECORDS                                           00\n002800     LABEL RECORD IS STANDARD                                           00\n002900     DATA RECORD IS INPUT-RECORD.                                       00\n003000                                                                        00\n003100 01  OUTPUT-RECORD.                                                     00\n003200     05  FILLER              PIC X(80).                                 00\n003300                                                                        00\n003400 WORKING-STORAGE SECTION.                                               00\n003500 77  FILLER PIC X(36)  VALUE                                            00\n003600     'CALLSNAP WORKING STORAGE BEGINS HERE'.                            00\n003700                                                                        00\n003800 01  MISCELLANEOUS-AREAS.                                               00\n003810     05  INPUT-RECORDS-READ      PIC S9(5) COMP-3 VALUE +0.\n003820     05  OUTPUT-RECORDS-WRITTEN  PIC S9(5) COMP-3 VALUE +0.\n003900     05 EOF-SWITCH               PIC X VALUE 'N'.                       00\n004000        88 END-OF-INPUT          VALUE 'Y'.                             00\n004100        88 MORE-INPUT            VALUE 'N'.                             00\n004200                                                                        00\n012300                                                                        00\n012400 PROCEDURE DIVISION.                                                    00\n012500                                                                        00\n012600 A100-EXECUTIVE-CONTROL.                                                00\n012700     PERFORM A100-INITIALIZATION.                                       00\n012800     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT.               00\n012900     PERFORM Z100-END-OF-PROCESSING.                                    00\n013000     GOBACK.                                                            00\n013100                                                                        00\n013200 A100-INITIALIZATION.                                                   00\n015800     OPEN INPUT INPUT-FILE OUTPUT OUTPUT-FILE.                          00\n015900                                                                        00\n016000 B100-MAINLINE-PROCESSING.                                              00\n016100     PERFORM C100-READ-FILE.                                            00\n016200     IF MORE-INPUT PERFORM D100-WRITE-FILE.                             00\n016210     IF INPUT-RECORDS-READ = 25\n016220         CALL 'SNAPDUMP'.\n016300                                                                        00\n016400 C100-READ-FILE.                                                        00\n016500     READ INPUT-FILE AT END MOVE 'Y' TO EOF-SWITCH.                     00\n016510     ADD 1 TO INPUT-RECORDS-READ.\n016600                                                                        00\n016700 D100-WRITE-FILE.                                                       00\n016800     WRITE OUTPUT-RECORD FROM INPUT-RECORD.                             00\n016810     ADD 1 TO OUTPUT-RECORDS-WRITTEN.\n016900                                                                        00\n017000 Z100-END-OF-PROCESSING.                                                00\n017010     DISPLAY INPUT-RECORDS-READ ' INPUT RECORDS READ'.\n017020     DISPLAY OUTPUT-RECORDS-WRITTEN 'OUTPUT RECORDS WRITTEN'.\n017100     CLOSE INPUT-FILE OUTPUT-FILE.                                      00\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLSVDA": {"ttr": 3073, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x01\\x00\\x94\\x02_\\x00\\x94\\x02o\\x14I\\x00T\\x00P\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1994-01-25T00:00:00", "modifydate": "1994-01-26T14:49:01", "lines": 84, "newlines": 80, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLSVDA.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. PROGRAM TO COPY INPUT1 TO OUTPUT1 WITH CALLS TO THE\n000410*         SAVEDATA AND OVRLYTGT SUBROUTINES. PURPOSE IS TO TEST\n000420*         THE SAVEDATA SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FILE ASSIGN TO INPUT1.\n000730     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  INPUT-FILE\n000821     RECORDING MODE IS F\n000822     BLOCK CONTAINS 0 RECORDS\n000830     LABEL RECORDS ARE STANDARD.\n000840 01  INPUT-RECORD.                                                      10\n000850   05  FIELD-1               PIC XX.                                    20\n000860   05  FIELD-2               PIC X(70).                                 30\n000870   05  FILLER                PIC X(8).                                  40\n000880 FD  OUTPUT-FILE\n000881     RECORDING MODE IS F\n000882     BLOCK CONTAINS 0 RECORDS\n000890     LABEL RECORDS ARE STANDARD.\n000891 01  OUTPUT-RECORD.                                                     10\n000892   05  OUT-FIELD-1           PIC XX.                                    20\n000893   05  OUT-FIELD-2           PIC X(70).                                 30\n000894   05  FILLER                PIC X(8).                                  40\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLSVDA WORKING STORAGE BEGINS HERE'.\n001101\n001110 01  MISCELLANEOUS-AREAS.\n001200     05  EOF-INPUT-SWITCH    PIC X VALUE 'N'.\n001300         88  MORE-RECORDS    VALUE 'N'.\n001400         88  EOF-INPUT       VALUE 'Y'.\n001500     05  ABC                 PIC XXX VALUE 'ABC'.\n001510     05  DEF                 PIC XXX VALUE 'DEF'.\n001520     05  GHI                 PIC XXX VALUE 'GHI'.\n001530     05  JKL                 PIC XXX VALUE 'JKL'.\n001540     05  MNO                 PIC XXX VALUE 'MNO'.\n001550     05  PQR                 PIC XXX VALUE 'PQR'.\n001560     05  STU                 PIC XXX VALUE 'STU'.\n001570     05  VWX                 PIC XXX VALUE 'VWX'.\n001580     05  YZ                  PIC XXX VALUE 'YZ '.\n001600\n001700 PROCEDURE DIVISION.\n001800     CALL 'SAVEDATA' USING ABC.\n001900 A100-EXECUTIVE-CONTROL.\n001910     CALL 'SAVEDATA' USING DEF.\n002000     PERFORM A100-INITIALIZATION.\n002100     PERFORM B100-MAINLINE-PROCESSING UNTIL EOF-INPUT.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002500 A100-INITIALIZATION.\n002510     CALL 'SAVEDATA' USING GHI.\n002600     OPEN INPUT INPUT-FILE\n002610          OUTPUT OUTPUT-FILE.\n002700\n002800 B100-MAINLINE-PROCESSING.\n002810     CALL 'SAVEDATA' USING JKL.\n002900     PERFORM C100-READ-INPUT.\n003000     IF MORE-RECORDS\n003010         PERFORM D100-WRITE-OUTPUT.\n003020\n003030 C100-READ-INPUT.\n003031     CALL 'SAVEDATA' USING MNO.\n003040     IF EOF-INPUT\n003050         NEXT SENTENCE\n003060     ELSE\n003070         READ INPUT-FILE\n003080             AT END MOVE 'Y' TO EOF-INPUT-SWITCH.\n003090\n003091 D100-WRITE-OUTPUT.\n003092     CALL 'SAVEDATA' USING PQR.\n003093     WRITE OUTPUT-RECORD FROM INPUT-RECORD.\n003094     CALL 'OVRLYTGT'.\n003095\n003100 Z100-END-OF-PROCESSING.\n003110     CALL 'SAVEDATA' USING STU.\n003200     CLOSE INPUT-FILE, OUTPUT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLVERB": {"ttr": 3076, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x16\\x01\\x02\\x00\\x7f\\x01\\x02\\x00\\x7f\\x11V\\x00\\x96\\x00\\x96\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-01-07T00:00:00", "modifydate": "2002-01-07T11:56:16", "lines": 150, "newlines": 150, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.    VERBCHEK.                                               00\n000300 AUTHOR. R THORNTON.                                                    00\n000400*REMARKS. SHOWS EXAMPLES OF VARIOUS COBOL VERBS.                        00\n000500 ENVIRONMENT DIVISION.                                                  00\n000600 CONFIGURATION SECTION.                                                 00\n000700 INPUT-OUTPUT SECTION.                                                  00\n000800 FILE-CONTROL.                                                          00\n000900     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.                           00\n001000     SELECT OUTPUT-FILE ASSIGN TO UT-S-OUTPUT1.                         00\n001100 DATA DIVISION.                                                         00\n001200 FILE SECTION.                                                          00\n001300                                                                        00\n001400 FD INPUT-FILE                                                          00\n001500     RECORD CONTAINS 80 CHARACTERS                                      00\n001600     RECORDING MODE IS F                                                00\n001700     BLOCK CONTAINS 0 RECORDS                                           00\n001800     LABEL RECORD IS STANDARD                                           00\n001900     DATA RECORD IS INPUT-RECORD.                                       00\n002000                                                                        00\n002100 01  INPUT-RECORD.                                                      00\n002200     05  FILLER              PIC X(80).                                 00\n002300                                                                        00\n002400 FD OUTPUT-FILE                                                         00\n002500     RECORD CONTAINS 80 CHARACTERS                                      00\n002600     RECORDING MODE IS F                                                00\n002700     BLOCK CONTAINS 0 RECORDS                                           00\n002800     LABEL RECORD IS STANDARD                                           00\n002900     DATA RECORD IS INPUT-RECORD.                                       00\n003000                                                                        00\n003100 01  OUTPUT-RECORD.                                                     00\n003200     05  FILLER              PIC X(80).                                 00\n003300                                                                        00\n003400 WORKING-STORAGE SECTION.                                               00\n003500 77  FILLER PIC X(36)  VALUE                                            00\n003600     'VERBCHEK WORKING STORAGE BEGINS HERE'.                            00\n003700                                                                        00\n003800 01  MISCELLANEOUS-AREAS.                                               00\n003900     05 EOJ-SWITCH               PIC X VALUE 'N'.                       00\n004000        88 PROCESSING-FINISHED   VALUE 'Y'.                             00\n004100     05 EOF-SWITCH               PIC X VALUE 'N'.                       00\n004200        88 NO-MORE-INPUT         VALUE 'Y'.                             00\n004300        88 MORE-INPUT            VALUE 'N'.                             00\n004400     05 TEXT-STRING              PIC XXX VALUE 'YES'.\n004500     05 ACCEPTED-DATE            PIC 9(6).\n004600     05 BINARY-HALFWORD          PIC S99V99 BINARY.\n004700     05 BINARY-FULLWORD          PIC S9(5)V99 BINARY.\n004800     05 BINARY-DOUBLEWORD        PIC S9(7)V99 BINARY.\n004900     05 ZONED-NUMBER             PIC S9(6)V9.\n005000     05 PACKED-NUMBER            PIC S9(6)V999 COMP-3.\n005100     05 FLOATING-POINT-SHORT     COMP-1.\n005200     05 FLOATING-POINT-LONG      COMP-2.\n005300     05 INDEX-CELL               INDEX.\n005400                                                                        00\n005500 01  ANOTHER-AREA.                                                      00\n005600     05  SUBSCRIPTED-TABLE-ENTRY OCCURS 20 TIMES.\n005700         10  ST-FIELD1           PIC X.\n005800         10  ST-FIELD2           PIC 9(5).\n005900         10  ST-FIELD3           PIC 9(3) COMP-3.\n006000         10  ST-SUBENTRY         OCCURS 5 TIMES.\n006100             15  STS-FIELD1      PIC X(5).\n006200             15  STS-FIELD2      PIC S9(5)V99 COMP-3.\n006300     05  INDEXED-TABLE-ENTRY     OCCURS 30 TIMES\n006400                                 ASCENDING KEY IS IT-KEY\n006500                                 INDEXED BY IX1.\n006600         10  IT-FIELD1           PIC X(20).\n006700         10  IT-KEY              PIC X(5).\n006800         10  IT-FIELD2           PIC S9(5)V99 COMP.\n006900         10  IT-FIELD3           COMP-2.\n007000         10  IT-SUBENTRY         OCCURS 5 TIMES\n007100                                 INDEXED BY IX2.\n007200             15  ITS-FIELD1      PIC X(5).\n007300             15  ITS-FIELD2      PIC S9(5)V99 COMP-3.\n007400     05  ROUTINE-NAME            PIC X(8) VALUE 'GETDATE'.\n007500     05  SUB1                    PIC 99.\n007600     05  SUB2                    PIC S99 COMP.\n007700                                                                        00\n007800 PROCEDURE DIVISION.                                                    00\n007900     PERFORM A000-INITIALIZATION.\n008000     PERFORM B000-MAINLINE THRU B000-EXIT\n008100         UNTIL PROCESSING-FINISHED.\n008200     PERFORM Z000-TERMINATION THRU Z000-EXIT.\n008300     GOBACK.\n008400\n008500 A000-INITIALIZATION.\n008600     INSPECT TEXT-STRING REPLACING ALL 'Y' BY 'Z'.\n008700     OPEN INPUT  INPUT-FILE,\n008800          OUTPUT OUTPUT-FILE.\n008900\n009000 B000-MAINLINE.\n009100     CALL ROUTINE-NAME.\n009200     CALL ROUTINE-NAME USING PACKED-NUMBER, ZONED-NUMBER.\n009300     ALTER C000-EXIT TO PROCEED TO B000-RETURN-HERE.\n009400     GO TO C000-STATIC-CALLS.\n009410 B000-RETURN-HERE.\n009420     ALTER C000-EXIT TO PROCEED TO D000-SUBSCRIPT-MOVES.\n009500     IF PROCESSING-FINISHED\n009600         CONTINUE\n009700     ELSE\n009800         ADD +1.34 TO PACKED-NUMBER.\n009900     IF MORE-INPUT\n010000         NEXT SENTENCE\n010100     ELSE\n010200         SUBTRACT 1.34 FROM PACKED-NUMBER.\n010500 B000-EXIT. EXIT.\n010600\n010700 C000-STATIC-CALLS.\n010800     CALL 'GETDATE'.\n010900     CALL 'GETDATE' USING PACKED-NUMBER, ZONED-NUMBER.\n011000     PERFORM E000-INDEXED-MOVES THRU E000-EXIT.\n011010     EVALUATE TEXT-STRING\n011020         WHEN 'YES' ADD 1 TO ZONED-NUMBER\n011030         WHEN 'NO' PERFORM Z000-TERMINATION\n011040         WHEN '   ' SET IX1 TO IX2\n011050         WHEN OTHER MOVE 'OTH' TO TEXT-STRING.\n011100 C000-EXIT. GO TO.\n011200\n011300 D000-SUBSCRIPT-MOVES.\n011400     MOVE 1 TO SUB1.\n011500     MOVE ST-FIELD1 (SUB1) TO EOF-SWITCH.\n011600     PERFORM E000-INDEXED-MOVES VARYING SUB1 FROM 1 BY 1 UNTIL\n011700         SUB1 IS GREATER THAN 20 OR\n011800         NO-MORE-INPUT.\n011900     MOVE STS-FIELD2 (SUB1, SUB2) TO PACKED-NUMBER.\n012000     SET IX1 TO 1.\n012100     SET IX2 TO INDEX-CELL.\n012200 D000-EXIT. EXIT.\n012300\n012400 E000-INDEXED-MOVES.\n012500     SET IX1 TO 1.\n012600     MOVE IT-FIELD1 (IX1) TO TEXT-STRING.\n012700     MOVE ITS-FIELD2 (IX1, IX2) TO PACKED-NUMBER.\n012800     SEARCH INDEXED-TABLE-ENTRY VARYING IX1\n012900         AT END GO TO E000-EXIT\n013000         WHEN IT-FIELD2(IX1) IS GREATER THAN 6.3\n013100             ADD 5.05 TO PACKED-NUMBER\n013200         WHEN TEXT-STRING IS EQUAL TO 'NO'\n013300             NEXT SENTENCE\n013400     END-SEARCH.\n013500\n013600     SEARCH ALL INDEXED-TABLE-ENTRY\n013700         AT END\n013800             MOVE 'Y' TO EOJ-SWITCH\n013900         WHEN IT-KEY (IX1) IS EQUAL TO 'DATA '\n014000             GO TO Z000-TERMINATION.\n014100 E000-EXIT. EXIT.\n014200\n014300 Z000-TERMINATION.\n014400     CLOSE INPUT-FILE OUTPUT-FILE.\n014500 Z000-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLVOLS": {"ttr": 3080, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x03\\x00\\x986/\\x00\\x986/\\x141\\x00q\\x00m\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1998-12-28T00:00:00", "modifydate": "1998-12-28T14:31:03", "lines": 113, "newlines": 109, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLVOLS.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TESTS CALLS TO THE DSNVOLS SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FILE ASSIGN TO INPUT1.\n000740     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  INPUT-FILE\n000821     BLOCK CONTAINS 0 RECORDS\n000822     RECORD CONTAINS 80 CHARACTERS\n000823     RECORDING MODE IS F\n000830     LABEL RECORDS ARE STANDARD.\n000840 01  INPUT-RECORD.                                                      10\n000850   05  DSNAME                PIC X(44).                                 20\n000860   05  FILLER                PIC X(36).                                 30\n000874\n000889 FD  PRINT-FILE\n000890     BLOCK CONTAINS 0 RECORDS\n000891     RECORD CONTAINS 133 CHARACTERS\n000892     RECORDING MODE IS F\n000893     LABEL RECORDS ARE STANDARD.\n000894 01  PRINT-RECORD.                                                      10\n000895   05  LINE-SPACING          PIC X.                                     20\n000896   05  PRT-TEXT              PIC X(132).                                20\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLVOLS WORKING STORAGE BEGINS HERE'.\n001200\n001201 01  SWITCHES.\n001210     05  END-OF-INPUT-SWITCH PIC X VALUE 'N'.\n001220         88  END-OF-INPUT-DATA     VALUE 'Y'.\n001221         88 MORE-DATA-TO-PROCESS   VALUE 'N'.\n001230\n001300 01  VOLSER-RETURN-AREA.\n001301     05  FILLER              PIC X(6).\n001302         88  DSNVOLS-ERROR   VALUE HIGH-VALUES.\n001303     05  IKJEHCIR-RET-CODE   PIC S9(8) COMP.\n001304     05  LOCATE-RET-CODE     PIC X.\n001305     05  ERROR-DESCRIP       PIC X(120).\n001306     05  FILLER              PIC X(1405).\n001307 01  VOLSER-TABLE REDEFINES VOLSER-RETURN-AREA.\n001308     05  VOLSER              PIC X(6)\n001309                             OCCURS 256 TIMES\n001310                             INDEXED BY VOLNO.\n001311         88  NO-MORE-VOLSERS VALUE HIGH-VALUES.\n001320\n001700 PROCEDURE DIVISION.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n001910     OPEN INPUT INPUT-FILE, OUTPUT PRINT-FILE.\n002100     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT-DATA.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002800 B100-MAINLINE-PROCESSING.\n002900     PERFORM C100-READ-INPUT-FILE THRU C100-EXIT.\n002910     IF MORE-DATA-TO-PROCESS\n003000        PERFORM D100-PROCESS-THE-RECORD THRU D100-EXIT.\n003010\n003020 C100-READ-INPUT-FILE.\n003030     READ INPUT-FILE\n003040         AT END MOVE 'Y' TO END-OF-INPUT-SWITCH.\n003050 C100-EXIT. EXIT.\n003051\n003052 D100-PROCESS-THE-RECORD.\n003053     CALL 'DSNVOLS' USING DSNAME, VOLSER-RETURN-AREA.\n003054     IF DSNVOLS-ERROR\n003055         PERFORM E100-DSNVOLS-ERROR THRU E100-EXIT\n003056     ELSE\n003057         PERFORM F100-DSNVOLS-SUCCESSFUL THRU F100-EXIT.\n003059 D100-EXIT. EXIT.\n003060\n003061 E100-DSNVOLS-ERROR.\n003062     MOVE DSNAME TO PRT-TEXT.\n003063     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003064     MOVE 'DSNVOLS RETURNED ERROR MESSAGE: ' TO PRT-TEXT.\n003065     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003066     MOVE ERROR-DESCRIP TO PRT-TEXT.\n003067     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003068     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003069 E100-EXIT. EXIT.\n003070\n003071 F100-DSNVOLS-SUCCESSFUL.\n003072     MOVE DSNAME TO PRT-TEXT.\n003073     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003074     SET VOLNO TO 1.\n003075     PERFORM G100-PRINT-VOLSER VARYING VOLNO FROM 1 BY 1\n003076         UNTIL NO-MORE-VOLSERS (VOLNO).\n003077     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003078 F100-EXIT. EXIT.\n003079\n003080 G100-PRINT-VOLSER.\n003081     MOVE VOLSER (VOLNO) TO PRT-TEXT.\n003082     IF NO-MORE-VOLSERS (VOLNO)\n003083         NEXT SENTENCE\n003084     ELSE\n003085         PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003086 G100-EXIT. EXIT.\n003090\n003097 Y100-PRINT-A-LINE.\n003098     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n003099     MOVE SPACES TO PRT-TEXT.\n003100 Y100-EXIT. EXIT.\n003101\n003102 Z100-END-OF-PROCESSING.\n003300     CLOSE INPUT-FILE,\n003500           PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALLWAIT": {"ttr": 3083, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00&\\x00\\x95\\x03\\x0f\\x00\\x95\\x03\\x0f\\x11\"\\x00P\\x00)\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1995-01-30T00:00:00", "modifydate": "1995-01-30T11:22:26", "lines": 80, "newlines": 41, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLWAIT.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. USED TO TEST CALLS TO THE WAITASEC SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000900 WORKING-STORAGE SECTION.\n001000 01 WAIT-TIME.\n001100    05 WAIT-HOURS            PIC 99 VALUE 00.\n001200    05 WAIT-MINUTES          PIC 99 VALUE 00.\n001300    05 WAIT-SECONDS          PIC 99 VALUE 05.\n001400    05 WAIT-HUNDREDTHS       PIC 99 VALUE 00.\n001500 01 START-TIME.\n001600    05 START-HOURS           PIC 99 VALUE 00.\n001601    05 START-MINUTES         PIC 99 VALUE 00.\n001602    05 START-SECONDS         PIC 99 VALUE 05.\n001603    05 START-HUNDREDTHS      PIC 99 VALUE 00.\n001604 01 END-TIME.\n001605    05 END-HOURS             PIC 99 VALUE 00.\n001606    05 END-MINUTES           PIC 99 VALUE 00.\n001607    05 END-SECONDS           PIC 99 VALUE 05.\n001608    05 END-HUNDREDTHS        PIC 99 VALUE 00.\n001610 01 MESSAGE-1.\n001620    05  FILLER               PIC X(17) VALUE \"ISSUED WAIT FOR: \".\n001630    05  HOURS1               PIC 99.\n001631    05  FILLER               PIC X VALUE \":\".\n001632    05  MINUTES1             PIC 99.\n001633    05  FILLER               PIC X VALUE \":\".\n001634    05  SECONDS1             PIC 99.\n001635    05  FILLER               PIC X VALUE \".\".\n001636    05  HUNDREDTHS1          PIC 99.\n001640 01 MESSAGE-2.\n001650    05  FILLER               PIC X(17) VALUE \"WAIT STARTED AT: \".\n001651    05  HOURS2               PIC 99.\n001652    05  FILLER               PIC X VALUE \":\".\n001653    05  MINUTES2             PIC 99.\n001654    05  FILLER               PIC X VALUE \":\".\n001655    05  SECONDS2             PIC 99.\n001656    05  FILLER               PIC X VALUE \".\".\n001657    05  HUNDREDTHS2          PIC 99.\n001670 01 MESSAGE-3.\n001680    05  FILLER               PIC X(15) VALUE \"WAIT ENDED AT: \".\n001681    05  HOURS3               PIC 99.\n001682    05  FILLER               PIC X VALUE \":\".\n001683    05  MINUTES3             PIC 99.\n001684    05  FILLER               PIC X VALUE \":\".\n001685    05  SECONDS3             PIC 99.\n001686    05  FILLER               PIC X VALUE \".\".\n001687    05  HUNDREDTHS3          PIC 99.\n001691\n001692 LINKAGE SECTION.\n001693 01  PARM-FIELD.\n001694     05 PARM-LENGTH          PIC S9(4) COMP.\n001695     05 PARM-DATA            PIC 9(8).\n001696\n001700 PROCEDURE DIVISION USING PARM-FIELD.\n001710     MOVE PARM-DATA TO WAIT-TIME.\n001800     ACCEPT START-TIME FROM TIME.\n002900     CALL \"WAITASEC\" USING WAIT-TIME.\n002910     ACCEPT END-TIME FROM TIME.\n002920     MOVE WAIT-HOURS TO HOURS1.\n002930     MOVE WAIT-MINUTES TO MINUTES1.\n002940     MOVE WAIT-SECONDS TO SECONDS1.\n002950     MOVE WAIT-HUNDREDTHS TO HUNDREDTHS1.\n002960     MOVE START-HOURS TO HOURS2.\n002970     MOVE START-MINUTES TO MINUTES2.\n002980     MOVE START-SECONDS TO SECONDS2.\n002990     MOVE START-HUNDREDTHS TO HUNDREDTHS2.\n003000     MOVE END-HOURS TO HOURS3.\n003100     MOVE END-MINUTES TO MINUTES3.\n003101     MOVE END-SECONDS TO SECONDS3.\n003102     MOVE WAIT-HUNDREDTHS TO HUNDREDTHS3.\n003110     DISPLAY MESSAGE-1.\n003130     DISPLAY MESSAGE-2.\n003150     DISPLAY MESSAGE-3.\n003200     GOBACK.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CALLWTO": {"ttr": 3086, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x01\\x01\\x01\\x11?\\x01\\x01\\x11O\\x08\\x18\\x00\\x17\\x00\\x17\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-04-23T00:00:00", "modifydate": "2001-04-24T08:18:01", "lines": 23, "newlines": 23, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALLWTO.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. CALL THE WTOPGMR PROGRAM TO TEST ITS OPERATION.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 DATA DIVISION.\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALLWTO WORKING STORAGE BEGINS HERE'.\n001200 77  SUB                     PIC S9(4) COMP VALUE +0.\n001300 01  WTO-TEXT.\n001301     05  MSG-TEXT-LEFT       PIC X(57) VALUE\n001302     'THIS IS THE TEXT AREA FOR A 72-BYTE MESSAGE TO BE DISPLAY'.\n001303     05  MSG-TEXT-RIGHT      PIC X(15) VALUE\n001304     'ED BY WTOPGMR!!'.\n001600\n001700 PROCEDURE DIVISION.\n001800\n001900     CALL 'WTOPGMR' USING WTO-TEXT.\n002300     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CALL095C": {"ttr": 3088, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x16\\x01\\x013?\\x01\\x015\\x1f\\x07H\\x00R\\x00>\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-11-29T00:00:00", "modifydate": "2001-12-17T07:48:16", "lines": 82, "newlines": 62, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALL095C.\n000300 AUTHOR. R THORNTON\n000310**********************************************************************\n000400*REMARKS. CALL095C IS A TEST DRIVER FOR THE IEFSD095 BLOCK LETTER    *\n000410*         SUBROUTINE. AS WRITTEN, A CHARACTER STRING CONTAINING      *\n000411*         \"BC0THORX\" IS SENT TO THE IEFSD095 SUBROUTINE 9 TIMES,     *\n000412*         TO OBTAIN ALL 9 LINES THAT COMPRISE THE BLOCK LETTER EQUIV-*\n000413*         ALENT. ALL 9 LINES ARE PRINTED TO THE PRINT1 FILE AS THEY  *\n000414*         ARE OBTAINED FROM IEFSD095, SO THAT THE PRINT1 FILE        *\n000415*         SHOULD CONTAIN THE BLOCK LETTER RESULT.                    *\n000416*                                                                    *\n000417*         A NUMBER OF TESTS CAN BE MADE BY COMPILING THIS DRIVER     *\n000418*         UNDER EITHER COBOL II OR COBOL/390; COMPILING WITH DYNAM   *\n000419*         OR NODYNAM, AND LINKEDITING WITH AMODE=31,RMODE=ANY OR     *\n000420*         WITH AMODE=24,RMODE=24. A TOTAL OF 8 TESTS CAN BE MADE     *\n000421*         USING THESE OPTIONS.                                       *\n000425*                                                                    *\n000426*                   *** TEST JCL FOR THIS PROGRAM ***                *\n000427* //CALL095C EXEC  PGM=CALL095C                                      *\n000428* //STEPLIB  DD    DISP=SHR,DSN=.............                        *\n000429* //SYSUDUMP DD    SYSOUT=*                                          *\n000430* //PRINT1   DD    SYSOUT=*                                          *\n000440**********************************************************************\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000740     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000889 FD  PRINT-FILE\n000890     BLOCK CONTAINS 0 RECORDS\n000891     RECORD CONTAINS 133 CHARACTERS\n000892     RECORDING MODE IS F\n000893     LABEL RECORDS ARE STANDARD.\n000894 01  PRINT-RECORD.                                                      10\n000895   05  CARRIAGE-CONTROL-BYTE PIC X.                                     20\n000896   05  PRINT-DATA            PIC X(132).                                20\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CALL095C WORKING STORAGE BEGINS HERE'.\n001200 01  IEFSD095-PARAMETERS.\n001300     05  IEFSD095-STRING           PIC X(8).\n001400     05  IEFSD095-LINE-NUMBER      PIC S9(8) COMP.\n001500     05  IEFSD095-RETURN-AREA      PIC X(133) VALUE SPACES.\n001510     05  IEFSD095-STRING-LENGTH    PIC S9(8) COMP.\n001600\n001700 PROCEDURE DIVISION.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n002000     PERFORM A100-INITIALIZATION.\n002100     PERFORM B100-MAINLINE-PROCESSING.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002500 A100-INITIALIZATION.\n002600     OPEN OUTPUT PRINT-FILE.\n002700\n002800 B100-MAINLINE-PROCESSING.\n002900     MOVE 'BC0THORX' TO IEFSD095-STRING.\n003000     MOVE +8 TO IEFSD095-STRING-LENGTH.\n003001     PERFORM C100-CALL-IEFSD095\n003002        VARYING IEFSD095-LINE-NUMBER FROM 1 BY 1 UNTIL\n003003        IEFSD095-LINE-NUMBER > 12.\n003096\n003097 C100-CALL-IEFSD095.\n003098     MOVE SPACES TO IEFSD095-RETURN-AREA.\n003099     CALL 'IEFSD095' USING IEFSD095-STRING,\n003100                           IEFSD095-LINE-NUMBER,\n003101                           IEFSD095-RETURN-AREA,\n003102                           IEFSD095-STRING-LENGTH.\n003103     MOVE IEFSD095-RETURN-AREA TO PRINT-DATA.\n003104     PERFORM Y100-PRINT-A-LINE.\n003105\n003106 Y100-PRINT-A-LINE.\n003107     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n003108     MOVE SPACES TO PRINT-RECORD.\n003109\n003110 Z100-END-OF-PROCESSING.\n003300     CLOSE PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CALL31BT": {"ttr": 3329, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x02\\x00\\x93#\\x1f\\x00\\x93#\\x1f\\x11\\x16\\x00&\\x00%\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1993-08-19T00:00:00", "modifydate": "1993-08-19T11:16:02", "lines": 38, "newlines": 37, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CALL31BT.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET FOR CALLING ASM31SUB SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900*\n001000     SELECT PRINT-FILE ASSIGN TO PRINT1.\n001100*\n001200 DATA DIVISION.\n001300*\n001400 FILE SECTION.\n001500*\n001600 FD  PRINT-FILE\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     RECORDING MODE IS F\n001900     BLOCK CONTAINS 0 RECORDS\n002000     LABEL RECORD IS STANDARD\n002100     DATA RECORD IS SOURCE-RECORD.\n002200*\n002300 01  PRINT-LINE           PIC X(80).\n002400\n002500 WORKING-STORAGE SECTION.\n002600\n002700 77  FILLER PIC X(36)  VALUE\n002800     'CALL31BT WORKING STORAGE BEGINS HERE'.\n002810\n002900 01  MISCELLANEOUS-AREAS.\n002910     05 LITERAL-AREA      PIC X(34).\n002920\n003000 PROCEDURE DIVISION.\n003100     OPEN OUTPUT PRINT-FILE.\n003400     CALL 'ASM31SUB' USING LITERAL-AREA.\n003500     WRITE PRINT-LINE FROM LITERAL-AREA.\n003600     CLOSE PRINT-FILE.\n003700     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CBL2TRAC": {"ttr": 3331, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x003\\x01\\x00\\x12/\\x01\\x02\\x12\\x9f\\x15 \\x01\\x04\\x01\\x05\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2000-05-01T00:00:00", "modifydate": "2002-05-09T15:20:33", "lines": 260, "newlines": 261, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. COB2MAIN.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED TO TEST USE OF THE COBOL II EQUIVALENT TO THE    *\n000610*         VS-COBOL 2.3 READY TRACE AND RESET TRACE STATEMENTS.  *\n000620*         NOTE THE FOLLOWING PROGRAM STATEMENTS:                *\n000621*         1. CONFIGURATION SECTION: SOURCE-COMPUTER.            *\n000622*         2. WORKING-STORAGE SECTION: TRACE-SWITCH.             *\n000623*         3. PROCEDURE DIVISION: DECLARATIVES.                  *\n000624*         4. PROCEDURE DIVISION: MOVE 1 TO TRACE SWITCH (SIMILAR*\n000625*            TO READY TRACE).                                   *\n000626*         5. PROCEDURE DIVISION: MOVE 0 TO TRACE SWITCH (SIMILAR*\n000627*            TO RESET TRACE).                                   *\n000628*         6. AT RUNTIME, USE PARM=(.../DEBUG)                   *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000710 CONFIGURATION SECTION.\n000720 SOURCE-COMPUTER. IBM-370 WITH DEBUGGING MODE.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT INFILE   ASSIGN TO UT-S-INPUT1.\n001100     SELECT PRINT    ASSIGN TO UT-S-PRINT1.\n001110*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001310*\n001400 FD  INFILE\n001500     LABEL RECORDS ARE STANDARD\n001600     RECORDING MODE IS F\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     BLOCK CONTAINS 0 CHARACTERS.\n001900 01  INFILE-RECORD.\n001910     05  IN-KEY                     PIC X(8).\n001920     05  IN-DATA                    PIC X(72).\n001930*\n002100 FD  PRINT\n002200     LABEL RECORDS ARE OMITTED\n002300     RECORD CONTAINS 133 CHARACTERS\n002400     RECORDING MODE IS F\n002500     BLOCK CONTAINS 0 CHARACTERS\n002600     DATA RECORD IS PRINT-REC.\n002610*\n002700 01  PRINT-REC.\n002800     05  CARR-CTL                    PIC X(1).\n002900     05  PRINT-RECORD.\n002910         10  SUBR-ID                 PIC X(4).\n002911         10  FILLER                  PIC X.\n002912         10  PRINT-KEY               PIC X(8).\n002920         10  PRINT-DATA              PIC X(72).\n002930         10  FILLER                  PIC X(47).\n002940*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER          PIC X(44)\n003300       VALUE 'CBL2TRAC WORKING STORAGE SECTION STARTS HERE'.\n003310*\n003500 01  SWITCHES.\n003510     05  TRACE-SWITCH                 PIC 9 VALUE 0.\n003520         88  TRACE-OFF                VALUE 0.\n003530         88  TRACE-ON                 VALUE 1.\n003600     05  END-OF-INPUT-SW              PIC X  VALUE 'N'.\n003700         88  MORE-INFILE-RECORDS      VALUE 'N'.\n003800         88  END-OF-INPUT             VALUE 'Y'.\n003900*\n003901 01  SUBROUTINE-PARAMETER-AREAS.\n003910     05  REQUEST-CODE                     PIC X.\n003920         88  OPEN-REQUEST                 VALUE 'O'.\n003930         88  READ-REQUEST                 VALUE 'R'.\n003940         88  CLOSE-REQUEST                VALUE 'C'.\n003960     05  RECORD-RETURN-AREA.\n003970         10  RETURN-KEY                   PIC X(8).\n003971         10  RETURN-DATA.\n003972             15  RETURN-FIRST-FIELD       PIC X(7).\n003973             15  RETURN-FIRST-FIELD9\n003974                 REDEFINES RETURN-FIRST-FIELD PIC S9(7).\n003975             15  RETURN-REST-OF-DATA      PIC X(65).\n003980     05  RECORD-KEY-ARGUMENT              PIC X(8).\n003991     05  COMPLETION-CODE                  PIC X VALUE 'Y'.\n003992         88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n003993         88  RECORD-NOT-FOUND             VALUE 'N'.\n004003*\n004010 01  MISCELLANEOUS-FIELDS.\n004100     05  LINE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004200     05  PAGE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004201     05  ANSWER1               PIC ZZ,ZZ9.999- BLANK ZERO.\n004202     05  ANSWER2               PIC ZZ,ZZ9.999- BLANK ZERO.\n004203     05  BINARY-NUM            PIC S9(4) COMP VALUE +403.\n004204     05  PACKED-NUM            PIC S99V9 COMP-3 VALUE -72.6.\n004205     05  ZONED-NUM             PIC S9(5)V99 VALUE +105.92.\n004206     05  ZONED-BINRCV          PIC S9(3)V9 VALUE +0.\n004207     05  PACKED-BINRCV         PIC S9(5)V9(4) COMP-3 VALUE +0.\n004208     05  ZONED-PKRCV           PIC S9V999 VALUE +0.\n004209     05  BINARY-PKRCV          PIC S9(7) COMP VALUE +0.\n004210     05  PACKED-ZONRCV         PIC S9999V9 COMP-3 VALUE +0.\n004211     05  BINARY-ZONRCV         PIC S9(7)V9(7) COMP VALUE +0.\n004220*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004600     05  TOTAL-CNT                    PIC S9(9) COMP-3 VALUE +0.\n004610*\n004800 01  HEAD-LINE-1.\n004900     05  FILLER                       PIC X(25)\n005000                                 VALUE '1PROGRAM NAME: COB2MAIN'.\n005100     05  FILLER                       PIC X(10)\n005200                                      VALUE 'RUN DATE: '.\n005310     05  HEADER-RUN-DATE              PIC 99/99/99.\n005320*    05  HEADER-RUN-DATE              PIC X(8) VALUE SPACE.\n005400     05  FILLER                       PIC X(8) VALUE SPACE.\n005500     05  FILLER                       PIC X(30)\n005600                          VALUE '    REPORT HEADING LINE 1     '.\n005700     05  FILLER                       PIC X(43) VALUE SPACE.\n005800     05  FILLER                       PIC X(6)\n005900                                      VALUE 'PAGE: '.\n006000     05  HEADER-PAGE-NUMBER           PIC ZZ9.\n006010*\n006300 01  DETAIL-REC.\n006400     05  DETAIL-CC                    PIC X VALUE SPACE.\n006500     05  FILLER                       PIC X(17)\n006600                                      VALUE '                 '.\n006700     05  DETAIL-TOTAL-CNT             PIC ZZZ,ZZZ,ZZ9.\n006800     05  FILLER                       PIC X(104) VALUE SPACE.\n006810*\n007000 01  TOTAL-LINE-1.\n007100     05  FILLER                       PIC X(13) VALUE '-'.\n007200     05  FILLER                       PIC X(21)\n007300                                     VALUE 'TOTAL RECORDS READ:'.\n007400     05  FILLER                       PIC X(7) VALUE SPACES.\n007500     05  TOTAL-READ-I                 PIC ZZZ,ZZZ,Z99.\n007510*\n007800 PROCEDURE DIVISION.\n007801 DECLARATIVES.\n007802 COBOL-II-DEBUG SECTION.\n007803     USE FOR DEBUGGING ON ALL PROCEDURES.\n007804 COBOL-II-DEBUG-PARA.\n007805     IF TRACE-ON\n007806         DISPLAY DEBUG-NAME\n007807     END-IF.\n007808 END DECLARATIVES.\n007810*\n007820 MAIN-PROCESSING SECTION.\n008000 A000-MAINLINE.\n008010     MOVE 1 TO TRACE-SWITCH.\n008100     PERFORM B010-INITIALIZATION THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT UNTIL END-OF-INPUT.\n008300     PERFORM Z030-END-OF-JOB THRU Z030-EXIT.\n008400     GOBACK.\n008410*\n008600 B010-INITIALIZATION.\n008610     MOVE 'O' TO REQUEST-CODE.\n008620     CALL 'COBVSUBR' USING REQUEST-CODE, COMPLETION-CODE.\n008621     CALL 'COB2SUBR' USING REQUEST-CODE, COMPLETION-CODE.\n008660     MOVE 'R' TO REQUEST-CODE.\n008800     OPEN INPUT  INFILE, OUTPUT PRINT.\n008900     ACCEPT HEADER-RUN-DATE FROM DATE.\n008910*    MOVE CURRENT-DATE TO HEADER-RUN-DATE.\n009000     PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n009100 B010-EXIT.\n009200     EXIT.\n009210*\n009400 C010-PROCESS.\n009500     PERFORM E010-READ-INFILE THRU E010-EXIT.\n009600     IF END-OF-INPUT GO TO C010-EXIT.\n009700     MOVE SPACES TO PRINT-RECORD.\n009701     MOVE IN-KEY TO PRINT-KEY.\n009800     MOVE IN-KEY TO RECORD-KEY-ARGUMENT.\n009803     CALL 'COBVSUBR' USING REQUEST-CODE,\n009804                           COMPLETION-CODE,\n009805                           RECORD-RETURN-AREA,\n009806                           RECORD-KEY-ARGUMENT.\n009807     IF SUCCESSFUL-OPERATION\n009808         MOVE 'COBV' TO SUBR-ID\n009809         MOVE RECORD-RETURN-AREA TO PRINT-DATA\n009810     ELSE\n009820         MOVE 'V-RECORD FOR THIS KEY NOT FOUND' TO PRINT-DATA.\n009842     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n009843     IF RETURN-FIRST-FIELD IS NUMERIC\n009844         COMPUTE ANSWER1 = (RETURN-FIRST-FIELD9 - BINARY-NUM) *\n009845            (PACKED-NUM / ZONED-NUM).\n009846     CALL 'COB2SUBR' USING REQUEST-CODE,\n009847                           COMPLETION-CODE,\n009848                           RECORD-RETURN-AREA,\n009849                           RECORD-KEY-ARGUMENT.\n009850     IF SUCCESSFUL-OPERATION\n009851         MOVE 'COB2' TO SUBR-ID\n009852         MOVE RECORD-RETURN-AREA TO PRINT-DATA\n009853     ELSE\n009854         MOVE '2-RECORD FOR THIS KEY NOT FOUND' TO PRINT-DATA.\n009860     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n009861     IF RETURN-FIRST-FIELD IS NUMERIC\n009870         COMPUTE ANSWER2 = (RETURN-FIRST-FIELD9 + BINARY-NUM) *\n009880            (PACKED-NUM / ZONED-NUM)\n009890     ELSE\n009891         MOVE BINARY-NUM TO ZONED-BINRCV\n009892         MOVE BINARY-NUM TO PACKED-BINRCV\n009893         MOVE PACKED-NUM TO ZONED-PKRCV\n009894         MOVE PACKED-NUM TO BINARY-PKRCV\n009895         MOVE ZONED-NUM TO PACKED-ZONRCV\n009896         MOVE ZONED-NUM TO BINARY-ZONRCV.\n009900 C010-EXIT.\n010000     EXIT.\n010710*\n010900 E010-READ-INFILE.\n011000     READ INFILE\n011100         AT END MOVE 'Y' TO END-OF-INPUT-SW.\n011200     IF MORE-INFILE-RECORDS\n011300         ADD 1 TO TOTAL-READ.\n011400 E010-EXIT.\n011500     EXIT.\n011510*\n011600 G010-WRITE-COUNTS.\n011700     PERFORM K010-PRINT-DETAIL THRU K010-EXIT.\n011800     MOVE TOTAL-READ TO TOTAL-READ-I.\n011900     MOVE TOTAL-LINE-1 TO PRINT-REC.\n012000     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n012100 G010-EXIT.\n012200     EXIT.\n012210*\n012500 K010-PRINT-DETAIL.\n012600     MOVE TOTAL-CNT TO DETAIL-TOTAL-CNT.\n012700     MOVE DETAIL-REC TO PRINT-REC.\n012800     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n012900 K010-EXIT.\n013000     EXIT.\n013010*\n013300 M010-PRINT-LINE.\n013400     WRITE PRINT-REC.\n013600     ADD 1 TO LINE-NUMBER.\n013700     MOVE SPACES TO PRINT-REC.\n013800     IF LINE-NUMBER > 56\n013900         PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n014000 M010-EXIT.\n014100     EXIT.\n014110*\n014300 Q010-PRINT-HEADING.\n014400     ADD 1 TO PAGE-NUMBER.\n014500     MOVE PAGE-NUMBER TO HEADER-PAGE-NUMBER.\n014600     MOVE HEAD-LINE-1 TO PRINT-REC.\n014700     WRITE PRINT-REC.\n014900     MOVE 2 TO LINE-NUMBER.\n014910     MOVE SPACES TO PRINT-REC.\n015000     MOVE '0' TO CARR-CTL.\n015100 Q010-EXIT.\n015200     EXIT.\n015300*\n015400 Z030-END-OF-JOB.\n015410     MOVE 0 TO TRACE-SWITCH.\n015500     PERFORM G010-WRITE-COUNTS THRU G010-EXIT.\n015600     CLOSE INFILE, PRINT.\n015800     MOVE 'C' TO REQUEST-CODE.\n016000     CALL 'COBVSUBR' USING REQUEST-CODE, COMPLETION-CODE.\n016010     CALL 'COB2SUBR' USING REQUEST-CODE, COMPLETION-CODE.\n016020     DISPLAY '************************************************'.\n016030     DISPLAY '*     GOOD COMPLETION. ANSWER1 IS: ' ANSWER1 ' *'.\n016040     DISPLAY '*     GOOD COMPLETION. ANSWER2 IS: ' ANSWER2 ' *'.\n016050     DISPLAY '************************************************'.\n016300 Z030-EXIT.\n016400     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHECKTIM": {"ttr": 3336, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x008\\x00\\x921_\\x01\\x02\\x00O\\x12Y\\x00\\xaa\\x00\\xaa\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-11-10T00:00:00", "modifydate": "2002-01-04T12:59:38", "lines": 170, "newlines": 170, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. CHECKTIM.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED TO TEST DIFFERENCES BETWEEN VS COBOL AND COBOL II*\n000610*         TIME PARAMETER. ALSO TESTS RUNNING ABOVE THE LINE.    *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT INFILE   ASSIGN TO UT-S-INPUT1.\n001100     SELECT PRINT    ASSIGN TO UT-S-PRINT1.\n001110*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001310*\n001400 FD  INFILE\n001500     LABEL RECORDS ARE STANDARD\n001600     RECORDING MODE IS F\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     BLOCK CONTAINS 0 CHARACTERS.\n001900 01  INFILE-RECORD.\n001910     05  IN-KEY                     PIC X(8).\n001920     05  IN-DATA                    PIC X(72).\n001930*\n002100 FD  PRINT\n002200     LABEL RECORDS ARE OMITTED\n002300     RECORD CONTAINS 133 CHARACTERS\n002400     RECORDING MODE IS F\n002500     BLOCK CONTAINS 0 CHARACTERS\n002600     DATA RECORD IS PRINT-REC.\n002610*\n002700 01  PRINT-REC.\n002800     05  CARR-CTL                    PIC X(1).\n002900     05  PRINT-RECORD.\n002910         10  PRINT-KEY               PIC X(8).\n002920         10  PRINT-DATA              PIC X(72).\n002930         10  FILLER                  PIC X(52).\n002940*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER          PIC X(44)\n003300       VALUE 'CHECKTIM WORKING STORAGE SECTION STARTS HERE'.\n003310*\n003500 01  SWITCHES.\n003600     05  END-OF-INPUT-SW              PIC X  VALUE 'N'.\n003700         88  MORE-INFILE-RECORDS      VALUE 'N'.\n003800         88  END-OF-INPUT             VALUE 'Y'.\n003900*\n003960 01  RECORD-RETURN-AREA.\n003970     05  RETURN-KEY                       PIC X(8).\n003971     05  RETURN-DATA                      PIC X(72).\n004003*\n004010 01  MISCELLANEOUS-FIELDS.\n004100     05  LINE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004200     05  PAGE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004210*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004600     05  TOTAL-CNT                    PIC S9(9) COMP-3 VALUE +0.\n004610*\n004800 01  HEAD-LINE-1.\n004900     05  FILLER                       PIC X(25)\n005000                                 VALUE '1PROGRAM NAME: CHECKTIM'.\n005100     05  FILLER                       PIC X(10)\n005200                                      VALUE 'RUN DATE: '.\n005310     05  HEADER-RUN-DATE              PIC 99/99/99.\n005320*    05  HEADER-RUN-DATE              PIC X(8) VALUE SPACE.\n005400     05  FILLER                       PIC X(4) VALUE ' AT '.\n005410     05  HEADER-TIME                  PIC X(6) VALUE SPACE.\n005500     05  FILLER                       PIC X(30)\n005600                          VALUE '    REPORT HEADING LINE 1     '.\n005700     05  FILLER                       PIC X(41) VALUE SPACE.\n005800     05  FILLER                       PIC X(6)\n005900                                      VALUE 'PAGE: '.\n006000     05  HEADER-PAGE-NUMBER           PIC ZZ9.\n006010*\n006300 01  DETAIL-REC.\n006400     05  DETAIL-CC                    PIC X VALUE SPACE.\n006500     05  FILLER                       PIC X(17)\n006600                                      VALUE '                 '.\n006700     05  DETAIL-TOTAL-CNT             PIC ZZZ,ZZZ,ZZ9.\n006800     05  FILLER                       PIC X(104) VALUE SPACE.\n006810*\n007000 01  TOTAL-LINE-1.\n007100     05  FILLER                       PIC X(13) VALUE '-'.\n007200     05  FILLER                       PIC X(21)\n007300                                     VALUE 'TOTAL RECORDS READ:'.\n007400     05  FILLER                       PIC X(7) VALUE SPACES.\n007500     05  TOTAL-READ-I                 PIC ZZZ,ZZZ,Z99.\n007510*\n007800 PROCEDURE DIVISION.\n007810*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZATION THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT UNTIL END-OF-INPUT.\n008300     PERFORM Z030-END-OF-JOB THRU Z030-EXIT.\n008400     GOBACK.\n008410*\n008600 B010-INITIALIZATION.\n008800     OPEN INPUT  INFILE, OUTPUT PRINT.\n008900     ACCEPT HEADER-RUN-DATE FROM DATE.\n008901     ACCEPT HEADER-TIME FROM TIME.\n008910*    MOVE CURRENT-DATE TO HEADER-RUN-DATE.\n008920*    MOVE TIME-OF-DAY TO HEADER-TIME.\n009000     PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n009100 B010-EXIT.\n009200     EXIT.\n009210*\n009400 C010-PROCESS.\n009500     PERFORM E010-READ-INFILE THRU E010-EXIT.\n009600     IF END-OF-INPUT GO TO C010-EXIT.\n009700     MOVE SPACES TO PRINT-RECORD.\n009701     MOVE IN-KEY TO PRINT-KEY.\n009842     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n009848     MOVE RECORD-RETURN-AREA TO PRINT-DATA\n009860     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n009900 C010-EXIT.\n010000     EXIT.\n010710*\n010900 E010-READ-INFILE.\n011000     READ INFILE INTO RECORD-RETURN-AREA,\n011100         AT END MOVE 'Y' TO END-OF-INPUT-SW.\n011200     IF MORE-INFILE-RECORDS\n011300         ADD 1 TO TOTAL-READ.\n011400 E010-EXIT.\n011500     EXIT.\n011510*\n011600 G010-WRITE-COUNTS.\n011700     PERFORM K010-PRINT-DETAIL THRU K010-EXIT.\n011800     MOVE TOTAL-READ TO TOTAL-READ-I.\n011900     MOVE TOTAL-LINE-1 TO PRINT-REC.\n012000     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n012100 G010-EXIT.\n012200     EXIT.\n012210*\n012500 K010-PRINT-DETAIL.\n012600     MOVE TOTAL-CNT TO DETAIL-TOTAL-CNT.\n012700     MOVE DETAIL-REC TO PRINT-REC.\n012800     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n012900 K010-EXIT.\n013000     EXIT.\n013010*\n013300 M010-PRINT-LINE.\n013400     WRITE PRINT-REC.\n013600     ADD 1 TO LINE-NUMBER.\n013700     MOVE SPACES TO PRINT-REC.\n013800     IF LINE-NUMBER > 56\n013900         PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n014000 M010-EXIT.\n014100     EXIT.\n014110*\n014300 Q010-PRINT-HEADING.\n014400     ADD 1 TO PAGE-NUMBER.\n014500     MOVE PAGE-NUMBER TO HEADER-PAGE-NUMBER.\n014600     MOVE HEAD-LINE-1 TO PRINT-REC.\n014700     WRITE PRINT-REC.\n014900     MOVE 2 TO LINE-NUMBER.\n014910     MOVE SPACES TO PRINT-REC.\n015000     MOVE '0' TO CARR-CTL.\n015100 Q010-EXIT.\n015200     EXIT.\n015300*\n015400 Z030-END-OF-JOB.\n015500     PERFORM G010-WRITE-COUNTS THRU G010-EXIT.\n015600     CLOSE INFILE, PRINT.\n016300 Z030-EXIT.\n016400     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHEKCOPY": {"ttr": 3340, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00P\\x00\\x93\\x07\\x0f\\x00\\x93\\x07\\x0f\\x13I\\x00\\x0e\\x00\\x0e\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "1993-03-11T13:49:50", "lines": 14, "newlines": 14, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CHEKCOPY.\n000300 AUTHOR. R THORNTON\n000400 REMARKS. UTILITY SKELETON FOR CODING, TESTING COPY FUNCTIONS.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 DATA DIVISION.\n000900 WORKING-STORAGE SECTION.\n001000 01  ABC  COPY FDGRPMST.\n001100\n001200 PROCEDURE DIVISION.\n001300 B100-MAINLINE-PROCESSING.\n001400     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHGDDNAM": {"ttr": 3342, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00!\\x01\\x000\\x7f\\x01\\x000\\x7f\\x11\\x00\\x00\\x1a\\x00\\x1a\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-11-02T00:00:00", "modifydate": "2000-11-02T11:00:21", "lines": 26, "newlines": 26, "modlines": 0, "user": "BC0THOR"}, "text": "014500 IDENTIFICATION DIVISION.\n014600 PROGRAM-ID.    CHGDDNAM.\n014700 DATE-COMPILED.\n014800******************************************************************\n014900*THE CHGDDNAM SUBROUTINE SETS THE DDNAME IN THE FD PASSED BY THE *\n015000*CALLER TO DATE. THIS IS NECESSARY IN ORDER TO DUPLICATE THE     *\n015100*FUNCTION OF THE OLD DATE SUBROUTINE WHICH WAS WRITTEN IN        *\n015200*ASSEMBLER AND USED THE DDNAME DATE, WHICH IS A RESERVED WORD    *\n015300*IN COBOL.                                                       *\n015400*                                                                *\n015500*AUTHOR R THORNTON - 11/01/93                                    *\n015600******************************************************************\n015700 ENVIRONMENT DIVISION.\n015800 INPUT-OUTPUT SECTION.\n015900 FILE-CONTROL.\n016000 DATA DIVISION.\n016100 FILE SECTION.\n016200 WORKING-STORAGE SECTION.\n016300 LINKAGE SECTION.\n016400 01  FD-AREA.\n016500     05  FILLER              PIC X(40).\n016600     05  FD-DDNAME           PIC X(8).\n016700 PROCEDURE DIVISION USING FD-AREA.\n016800     MOVE 'DATE    ' TO FD-DDNAME.\n016900     GOBACK.\n017000 END PROGRAM CHGDDNAM.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHKPARMS": {"ttr": 3344, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x000\\x00\\x99'\\x1f\\x01\\x02\\x00O\\x13\\x01\\x00p\\x00o\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1999-09-28T00:00:00", "modifydate": "2002-01-04T13:01:30", "lines": 112, "newlines": 111, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CHKPARMS.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. CHKPARMS IS A DO-NEARLY-NOTHING PROGRAM FOR TESTING PARM\n000410*         OPTIONS SUCH AS RPTSTG(ON) AND RPTOPTS(ON)\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FILE ASSIGN TO INPUT1.\n000730     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.\n000740     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  INPUT-FILE\n000821     BLOCK CONTAINS 0 RECORDS\n000822     RECORD CONTAINS 80 CHARACTERS\n000823     RECORDING MODE IS F\n000830     LABEL RECORDS ARE STANDARD.\n000840 01  INPUT-RECORD.                                                      10\n000850   05  FIELD-1               PIC XX.                                    20\n000860   05  FIELD-2               PIC X(14).                                 30\n000861   05  FIELD-3               PIC Z(5).                                  30\n000870   05  FILLER                PIC X(59).                                 40\n000874\n000875 FD  OUTPUT-FILE\n000876     BLOCK CONTAINS 0 RECORDS\n000877     RECORD CONTAINS 80 CHARACTERS\n000878     RECORDING MODE IS F\n000879     LABEL RECORDS ARE STANDARD.\n000880 01  OUTPUT-RECORD.                                                     10\n000881   05  OUT-FLD-1             PIC XX.                                    20\n000882   05  OUT-FLD-2             PIC X(14).                                 30\n000883   05  OUT-FLD-3             PIC Z(5).                                  30\n000884   05  FILLER                PIC X(59).                                 40\n000888\n000889 FD  PRINT-FILE\n000890     BLOCK CONTAINS 0 RECORDS\n000891     RECORD CONTAINS 133 CHARACTERS\n000892     RECORDING MODE IS F\n000893     LABEL RECORDS ARE STANDARD.\n000894 01  PRINT-RECORD.                                                      10\n000895   05  CARRIAGE-CONTROL-BYTE PIC X.                                     20\n000896   05  PRT-FIELD-1           PIC XX.                                    20\n000897   05  PRT-FIELD-2           PIC X(9).                                  30\n000898   05  PRT-COUNTER           PIC ZZ,ZZZ,ZZ9.                            30\n000899   05  FILLER                PIC X(1).                                  40\n000900   05  PRT-MESSAGE           PIC X(110).                                40\n000901\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'CHKPARMS WORKING STORAGE BEGINS HERE'.\n001200 77  SUB                     PIC S9(4) COMP VALUE +0.\n001300 01  GENERAL-AREAS.\n001301     05  LINE-SPACING        PIC 9 VALUE 1.\n001302     05  END-OF-INPUT-SWITCH PIC X VALUE 'N'.\n001303         88  END-OF-INPUT-DATA  VALUE IS 'Y'.\n001304         88  MORE-DATA-TO-PROCESS VALUE IS 'N'.\n001305     05  COUNTER             PIC S9(8) COMP-3 VALUE +0.\n001310\n001400 LINKAGE SECTION.\n001500 01  PARM-FIELD.\n001510     05  PARM-LENGTH         PIC S9(4) COMP.\n001520     05  PARM-DATA           PIC X(104).\n001600\n001700 PROCEDURE DIVISION USING PARM-FIELD.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n002000     PERFORM A100-INITIALIZATION.\n002100     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT-DATA.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002500 A100-INITIALIZATION.\n002600     OPEN INPUT INPUT-FILE,\n002610          OUTPUT OUTPUT-FILE, PRINT-FILE.\n002650     MOVE SPACES TO PRINT-RECORD.\n002660     MOVE PARM-LENGTH TO PRT-COUNTER.\n002670     MOVE PARM-DATA TO PRT-MESSAGE.\n002680     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n002700\n002800 B100-MAINLINE-PROCESSING.\n002900     PERFORM C100-READ-INPUT-FILE THRU C100-EXIT.\n002910     IF MORE-DATA-TO-PROCESS\n003000        PERFORM D100-PROCESS-THE-RECORD THRU D100-EXIT.\n003001     PERFORM E100-WRITE-OUTPUT-FILE THRU E100-EXIT.\n003010\n003020 C100-READ-INPUT-FILE.\n003030     READ INPUT-FILE\n003040         AT END MOVE 'Y' TO END-OF-INPUT-SWITCH.\n003050 C100-EXIT. EXIT.\n003060\n003070 D100-PROCESS-THE-RECORD.\n003080     ADD 1 TO COUNTER.\n003090 D100-EXIT. EXIT.\n003091\n003092 E100-WRITE-OUTPUT-FILE.\n003093     WRITE OUTPUT-RECORD FROM INPUT-RECORD.\n003095 E100-EXIT. EXIT.\n003096\n003097 Y100-PRINT-A-LINE.\n003098     WRITE PRINT-RECORD AFTER ADVANCING LINE-SPACING.\n003099 Y100-EXIT. EXIT.\n003100\n003101 Z100-END-OF-PROCESSING.\n003102     MOVE SPACES TO PRINT-RECORD.\n003103     MOVE COUNTER TO PRT-COUNTER.\n003104     MOVE 'RECORDS COPIED.' TO PRT-MESSAGE.\n003120     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003300     CLOSE INPUT-FILE,\n003400           OUTPUT-FILE,\n003500           PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CHKRECD": {"ttr": 3587, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x92%O\\x00\\x92%O\\t6\\x003\\x003\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1992-09-10T00:00:00", "modifydate": "1992-09-10T09:36:00", "lines": 51, "newlines": 51, "modlines": 0, "user": "USER02"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "CMPRMACH": {"ttr": 3589, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00@\\x01\\x01\\x12/\\x01\\x02\\x00O\\x13\\x03\\x02\\xe8\\x01\\x1a\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-05-02T00:00:00", "modifydate": "2002-01-04T13:03:40", "lines": 744, "newlines": 282, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.\n000200 PROGRAM-ID. CMPRMACH\n000300**************************************************************\n000400*    READ THE MACHINE FILES CREATED BY EDGE RUNS AGAINST     *\n000500*    TWO LIBRARIES AND COMPARES THEM TO IDENTIFY THE DIFF-   *\n000600*    ERENCES BETWEEN THE LIBRARIES.                          *\n000700*    1) THE OLD FILE INPUT IS THE EDGE MACHINE FILE FROM A   *\n000800*       LOAD LIBRARY CONTAINING PROGRAMS LINKED WITH THE OLD *\n000900*       COBOL II LIBRARY, SYS1.COB2LIB.                      *\n001000*    2) THE NEW FILE INPUT IS THE EDGE MACHINE FILE FROM A   *\n001100*       LOAD LIBRARY CONTAINING THE SAME PROGRAMS AS IN THE  *\n001200*       OLD FILE AFTER THEY HAVE BEEN RELINKED WITH THE L.E. *\n001300*       LIBRARY, CEE.SCEELKED.                               *\n001400**************************************************************\n001500 ENVIRONMENT DIVISION.\n001600 CONFIGURATION SECTION.\n001700 SOURCE-COMPUTER. IBM-370.\n001800 OBJECT-COMPUTER. IBM-370.\n001900 INPUT-OUTPUT SECTION.\n002000 FILE-CONTROL.\n002100     SELECT OLD-FILE ASSIGN TO UT-S-OLD.\n002300     SELECT NEW-FILE ASSIGN TO UT-S-NEW.\n002500     SELECT REPORT-FILE ASSIGN TO UT-S-REPORT.\n002700 DATA DIVISION.\n002800 FILE SECTION.\n002900 FD  OLD-FILE\n003000     BLOCK CONTAINS 0 RECORDS\n003100     RECORD CONTAINS 200 CHARACTERS\n003200     RECORDING F.\n003300 01  OLD-RECORD.\n003400     05 CSECT-DATA.\n003500        10 MEMBER-NAME               PIC X(8).\n003600        10 MEMBER-AMODE              PIC X(1).\n003700           88 MEMBER-AMODE-24           VALUE '2'.\n003800           88 MEMBER-AMODE-31           VALUE '3'.\n003900           88 MEMBER-AMODE-ANY          VALUE 'A'.\n004000        10 MEMBER-RMODE              PIC X(1).\n004100           88 MEMBER-RMODE-24           VALUE '2'.\n004200           88 MEMBER-RMODE-31           VALUE '3'.\n004300           88 MEMBER-RMODE-ANY          VALUE 'A'.\n004400        10 CSECTNAME                 PIC X(8).\n004500        10 COMPILER-ID               PIC X(10).\n004600        10 COMPILER-VVMM             PIC X(04).\n004700        10 COMPILE-DATE-YYDDD        PIC 9(05).\n004800        10 CSECT-AMODE               PIC X.\n004900           88 CSECT-AMODE-24            VALUE '2'.\n005000           88 CSECT-AMODE-31            VALUE '3'.\n005100           88 CSECT-AMODE-ANY           VALUE 'A'.\n005200           88 CSECT-AMODE-PREXA         VALUE ' '.\n005300        10 CSECT-RMODE               PIC X.\n005400           88 CSECT-RMODE-24            VALUE '2'.\n005500           88 CSECT-RMODE-ANY           VALUE 'A'.\n005600        10 CSECT-TYPE                PIC  X(02).\n005700           88 ASSEMBLER-PROGRAM         VALUE 'AR'.\n005800           88 BASIC-PROGRAM             VALUE 'BA'.\n005900           88 DEBUG-TOOL                VALUE 'BG'.\n006000           88 BERKELEY-SOCKET           VALUE 'BS'.\n006100           88 CICS-INTERFACE            VALUE 'CC'.\n006200           88 C370-RUNTIME-ROUTINE      VALUE 'CE'.\n006300           88 C370-PROGRAM              VALUE 'CI'.\n006400           88 LATTICE-C-PROGRAM         VALUE 'CL'.\n006500           88 COMMON-SECTION            VALUE 'CM'.\n006600           88 COBOL-RUNTIME-ROUTINE     VALUE 'CR'.\n006700           88 SAS-C-PROGRAM             VALUE 'CS'.\n006800           88 C-CPLUSPLUS-FOR-OS390     VALUE 'CP'.\n006900           88 COBOL-II-PROGRAM          VALUE 'C2'.\n007000           88 COBOL-370-390-PROGRAM     VALUE 'C3'.\n007100           88 DCE-ROUTINE               VALUE 'DC'.\n007200           88 DB2-INTERFACE             VALUE 'DI'.\n007300           88 EASYTRIEVE-PLUS-PROGRAM   VALUE 'EZ'.\n007400           88 FORTRAN-G-G1-PROGRAM      VALUE 'FG'.\n007500           88 FORTRAN-H-PROGRAM         VALUE 'FH'.\n007600           88 FORTRAN-RUNTIME-ROUTINE   VALUE 'FR'.\n007700           88 VS-FORTRAN-PROGRAM        VALUE 'FV'.\n007800           88 IMS-INTERFACE             VALUE 'II'.\n007900           88 ISPF-INTERFACE            VALUE 'IS'.\n008000           88 LE-RUNTIME-ROUTINE        VALUE 'LE'.\n008100           88 MARK-V-PROGRAM            VALUE 'MV'.\n008200           88 NOT-COMPLETELY-ANALYZED   VALUE 'NA'.\n008300           88 UNRECOGNIZED-CSECT-TYPE   VALUE 'NR'.\n008400           88 VA-PLI-FOR-OS390-PROGRAM  VALUE 'PL'.\n008500           88 PLI-FOR-MVS-AND-VM-PROGRAM VALUE 'PM'.\n008600           88 PLI-RUNTIME-ROUTINE       VALUE 'PR'.\n008700           88 VS-PASCAL-PROGRAM         VALUE 'PV'.\n008800           88 PLI-OPTIMIZER-V1-PROGRAM  VALUE 'P1'.\n008900           88 PLI-OPTIMIZER-V2-PROGRAM  VALUE 'P2'.\n009000           88 IBM-REXX-PROGRAM          VALUE 'RE'.\n009100           88 OLD-LANGUAGE-RUNTIME-ROUTINE VALUE 'RE'.\n009200           88 SNAPAID-INTERFACE         VALUE 'SA'.\n009300           88 COBOL-SAMPLE-PROGRAM      VALUE 'SC'.\n009400           88 USER-RECOGNIZED-ASSEMBLER VALUE 'UR'.\n009500           88 VERY-OLD-COBOL            VALUE 'VO'.\n009600           88 OSVS-COBOL-V2REL3         VALUE 'VS'.\n009700           88 OSVS-COBOL-V2REL4         VALUE 'V4'.\n009800        10 DATE-TIME-FORMAT          PIC X.\n009900           88 SVC-PATTERN-DATE-TIME     VALUE '1'.\n010000           88 STCK-DATE-TIME            VALUE '2'.\n010100           88 BOTH-SVC-AND-STCK         VALUE '3'.\n010200           88 COBOL-ACCEPT-FROM-FORMAT  VALUE '4'.\n010300           88 COBOL-ACCEPT-OTHER-FORMAT VALUE '9'.\n010400        10 LOAD-MODULE-ATTRIBUTES    PIC X.\n010500           88 REUSABLE-MODULE           VALUE '1'.\n010600           88 RENT-NOT-REUS-MODULE      VALUE '2'.\n010700           88 RENT-AND-REUS-MODULE      VALUE '3'.\n010800           88 OVERLAY-DATA-SUSPECT      VALUE '8'.\n010900           88 MODULE-NOT-REUSABLE       VALUE ' '.\n011000        10 PRIMARY-ENTRY-POINT-NAME  PIC X(8).\n011100        10 CSECT-SIZE-IN-DECIMAL     PIC 9(08).\n011200        10 SLASH-U-PARM-DATA         PIC X(04).\n011300        10 LAST-LINKEDIT-DATE-YYDDD  PIC 9(05).\n011400     05 COBOL-II-AND-COBOL-370-FIELDS.\n011500        10 COBOL-II-COMPILER-VERSION PIC X(06).\n011600        10 COBOL-II-LEVEL            PIC X(04).\n011700        10 COBOL-II-DATE-COMPILED    PIC X(9).\n011800        10 COBOL-II-TIME-COMPILED    PIC X(8).\n011900        10 COBOL-II-ADV-INDICATOR    PIC X(1).\n012000           88 COBOL-II-ADV              VALUE '1'.\n012100           88 COBOL-II-NOADV            VALUE '0'.\n012200        10 COBOL-II-QUOTE-APOST-INDICATOR PIC X.\n012300           88 COBOL-II-QUOTE            VALUE '0'.\n012400           88 COBOL-II-APOST            VALUE '1'.\n012500        10 COBOL-II-DATA-INDICATOR   PIC X.\n012600           88 COBOL-II-DATA-24          VALUE '0'.\n012700           88 COBOL-II-DATA-31          VALUE '1'.\n012800        10 COBOL-II-DECK-INDICATOR   PIC X.\n012900           88 COBOL-II-NODECK           VALUE '0'.\n013000           88 COBOL-II-DECK             VALUE '1'.\n013100        10 COBOL-II-DUMP-INDICATOR   PIC X.\n013200           88 COBOL-II-NODUMP           VALUE '0'.\n013300           88 COBOL-II-DUMP             VALUE '1'.\n013400        10 COBOL-II-DYNAM-INDICATOR  PIC X.\n013500           88 COBOL-II-NODYNAM          VALUE '0'.\n013600           88 COBOL-II-DYNAM            VALUE '1'.\n013700        10 COBOL-II-FASTSRT-INDICATOR PIC X.\n013800           88 COBOL-II-NOFASTSRT        VALUE '0'.\n013900           88 COBOL-II-FASTSRT          VALUE '1'.\n014000        10 COBOL-II-FDUMP-INDICATOR  PIC X.\n014100           88 COBOL-II-NOFDUMP          VALUE '0'.\n014200           88 COBOL-II-FDUMP            VALUE '1'.\n014300        10 COBOL-II-LIB-INDICATOR    PIC X.\n014400           88 COBOL-II-NOLIB            VALUE '0'.\n014500           88 COBOL-II-LIB              VALUE '1'.\n014600        10 COBOL-II-LIST-INDICATOR   PIC X.\n014700           88 COBOL-II-NOLIST           VALUE '0'.\n014800           88 COBOL-II-LIST             VALUE '1'.\n014900        10 COBOL-II-MAP-INDICATOR    PIC X.\n015000           88 COBOL-II-NOMAP            VALUE '0'.\n015100           88 COBOL-II-MAP              VALUE '1'.\n015200        10 COBOL-II-NUM-INDICATOR    PIC X.\n015300           88 COBOL-II-NONUM            VALUE '0'.\n015400           88 COBOL-II-NUM              VALUE '1'.\n015500        10 COBOL-II-OBJ-INDICATOR    PIC X.\n015600           88 COBOL-II-NOOBJ            VALUE '0'.\n015700           88 COBOL-II-OBJ              VALUE '1'.\n015800        10 COBOL-II-OFFSET-INDICATOR  PIC X.\n015900           88 COBOL-II-NOOFFSET         VALUE '0'.\n016000           88 COBOL-II-OFFSET           VALUE '1'.\n016100        10 COBOL-II-OPTIMIZ-INDICATOR PIC X.\n016200           88 COBOL-II-NOOPTIMIZ        VALUE '0'.\n016300           88 COBOL-II-OPTIMIZ          VALUE '1'.\n016400        10 COBOL-II-DD-INDICATOR     PIC X.\n016500           88 COBOL-II-DD               VALUE '0'.\n016600           88 COBOL-II-OUTDD            VALUE '1'.\n016700        10 COBOL-II-PFD-INDICATOR    PIC X.\n016800           88 COBOL-II-NOPFDSGN         VALUE '0'.\n016900           88 COBOL-II-PFDSGN           VALUE '1'.\n017000           88 COBOL-390-NUMNPFD          VALUE '0'.\n017100           88 COBOL-390-NUMPFD           VALUE '1'.\n017200           88 COBOL-390-NUMMIG           VALUE '2'.\n017300        10 COBOL-II-RENT-INDICATOR   PIC X.\n017400           88 COBOL-II-NORENT           VALUE '0'.\n017500           88 COBOL-II-RENT             VALUE '1'.\n017600        10 COBOL-II-RES-INDICATOR    PIC X.\n017700           88 COBOL-II-NORES            VALUE '0'.\n017800           88 COBOL-II-RES              VALUE '1'.\n017900        10 COBOL-II-SEQ-INDICATOR    PIC X.\n018000           88 COBOL-II-NOSEQ            VALUE '0'.\n018100           88 COBOL-II-SEQ              VALUE '1'.\n018200        10 COBOL-II-SIZE-INDICATOR   PIC X.\n018300           88 COBOL-II-SIZE-NBR         VALUE '0'.\n018400           88 COBOL-II-SIZE-MAX         VALUE '1'.\n018500        10 COBOL-II-SOURCE-INDICATOR PIC X.\n018600           88 COBOL-II-NOSOURCE         VALUE '0'.\n018700           88 COBOL-II-SOURCE           VALUE '1'.\n018800        10 COBOL-II-SSRANGE-INDICATOR PIC X.\n018900           88 COBOL-II-NOSSRANGE        VALUE '0'.\n019000           88 COBOL-II-SSRANGE          VALUE '1'.\n019100        10 COBOL-II-TERM-INDICATOR   PIC X.\n019200           88 COBOL-II-NOTERM           VALUE '0'.\n019300           88 COBOL-II-TERM             VALUE '1'.\n019400        10 COBOL-II-TEST-INDICATOR   PIC X.\n019500           88 COBOL-II-NOTEST           VALUE '0'.\n019600           88 COBOL-II-TEST             VALUE '1'.\n019700        10 COBOL-II-TRUNC-INDICATOR  PIC X.\n019800           88 COBOL-II-NOTRUNC          VALUE '0'.\n019900           88 COBOL-II-TRUNC            VALUE '1'.\n020000           88 COBOL-390-TRUNCOPT        VALUE '0'.\n020100           88 COBOL-390-TRUNC-STD       VALUE '1'.\n020200           88 COBOL-390-TRUNC-BIN       VALUE '1'.\n020300        10 COBOL-II-WORD-INDICATOR   PIC X.\n020400           88 COBOL-II-WORD-DEFAULT     VALUE '0'.\n020500           88 COBOL-II-WORD-SPECIFIED   VALUE '1'.\n020600        10 COBOL-II-VBREF-INDICATOR  PIC X.\n020700           88 COBOL-II-NOVBREF          VALUE '0'.\n020800           88 COBOL-II-VBREF            VALUE '1'.\n020900        10 COBOL-II-XREF-INDICATOR   PIC X.\n021000           88 COBOL-II-NOXREF           VALUE '0'.\n021100           88 COBOL-II-XREF             VALUE '1'.\n021200        10 COBOL-II-ZWB-INDICATOR    PIC X.\n021300           88 COBOL-II-NOZWB            VALUE '0'.\n021400           88 COBOL-II-ZWB              VALUE '1'.\n021500        10 COBOL-II-CMPR2-INDICATOR  PIC X.\n021600           88 COBOL-II-NOCMPR2          VALUE '0'.\n021700           88 COBOL-II-CMPR2            VALUE '1'.\n021800        10 COBOL-II-NAME-INDICATOR   PIC X.\n021900           88 COBOL-II-NONAME           VALUE '0'.\n022000           88 COBOL-II-NAME             VALUE '1'.\n022100        10 COBOL-II-NMCL-INDICATOR   PIC X.\n022200           88 COBOL-II-NMCLPRI          VALUE '0'.\n022300           88 COBOL-II-NMCLALT          VALUE '1'.\n022400        10 COBOL-II-DBCS-INDICATOR   PIC X.\n022500           88 COBOL-II-NODBCS           VALUE '0'.\n022600           88 COBOL-II-DBCS             VALUE '1'.\n022700        10 COBOL-II-AWO-INDICATOR    PIC X.\n022800           88 COBOL-II-NOAWO            VALUE '0'.\n022900           88 COBOL-II-AWO              VALUE '1'.\n023000     05 COBOL-370-AND-390-FIELDS.\n023100        10 COBOL-390-EVENTS-INDICATOR PIC X.\n023200           88 COBOL-390-NOEVENTS         VALUE '0'.\n023300           88 COBOL-390-EVENTS           VALUE '1'.\n023400        10 COBOL-390-CURRENCY-INDICATOR PIC X.\n023500           88 COBOL-39-NOCURRENCY       VALUE '0'.\n023600           88 COBOL-39-CURRENCY         VALUE '1'.\n023700        10 COBOL-390-RMODE-INDICATOR PIC X.\n023800           88 COBOL-39-RMODE-24         VALUE '0'.\n023900           88 COBOL-39-RMODE-ANY        VALUE '1'.\n024000        10 FILLER                    PIC X(4).\n024100     05 ALL-COBOL-SORTMERGE-INDICATOR PIC X.\n024200        88 SORT-OR-MERGE-FOUND          VALUE '1'.\n024300        88 NO-SORT-OR-MERGE-FOUND       VALUE '0'.\n024400     05 ALL-COBOL-DYNAM-CALL-FND-INDIC PIC X.\n024500        88 NO-DYNAMIC-CALLS-FOUND       VALUE '0'.\n024600        88 CALL-LITERAL-FORCED-DYNAMIC VALUE '1'.\n024700        88 CALL-DATANAME                VALUE '2'.\n024800        88 CALL-LIT-FRCD-AND-CALL-DATANM VALUE '3'.\n024900        88 CAPEX-OPT-CALL-ADDR          VALUE '4'.\n025000        88 CAPEX-CALL-LIT-FORCED-DYNAM VALUE '5'.\n025100        88 CAPEX-OPT-CALL-DATANAME      VALUE '6'.\n025200        88 CAPEX-CALL-LIT-FRCD-CALL-DTNM VALUE '7'.\n025300   05 VERSION-4-AND-VS-COBOL-FIELDS.\n025400        10 VSCOBOL-SYMDUMP-INDICATOR PIC X.\n025500           88 VSCOBOL-NOSYMDUMP         VALUE '0'.\n025600           88 VSCOBOL-SYMDUMP           VALUE '1'.\n025700        10 VSCOBOL-FLOW-INDICATOR    PIC X.\n025800           88 VSCOBOL-NOFLOW            VALUE '0'.\n025900           88 VSCOBOL-FLOW              VALUE '1'.\n026000        10 VSCOBOL-STATE-INDICATOR   PIC X.\n026100           88 VSCOBOL-NOSTATE           VALUE '0'.\n026200           88 VSCOBOL-STATE             VALUE '1'.\n026300        10 VSCOBOL-TEST-INDICATOR    PIC X.\n026400           88 VSCOBOL-NOTEST            VALUE '0'.\n026500           88 VSCOBOL-TEST              VALUE '1'.\n026600        10 VSCOBOL-RES-INDICATOR     PIC X.\n026700           88 VSCOBOL-NORES             VALUE '0'.\n026800           88 VSCOBOL-RES               VALUE '1'.\n026900        10 VSCOBOL-ENDJOB-INDICATOR  PIC X.\n027000           88 VSCOBOL-NOENDJOB          VALUE '0'.\n027100           88 VSCOBOL-ENDJOB            VALUE '1'.\n027200        10 VSCOBOL-OBJ370-INDICATOR  PIC X.\n027300           88 VSCOBOL-OBJ360            VALUE '0'.\n027400           88 VSCOBOL-OBJ370            VALUE '1'.\n027500        10 VSCOBOL-OPTIMIZED-INDICATOR PIC X.\n027600           88 VSCOBOL-NOOPT             VALUE '0'.\n027700           88 VSCOBOL-OPT               VALUE '1'.\n027800        10 VSCOBOL-CAPEX-OPT-INDICATOR PIC X.\n027900           88 VSCOBOL-NOCAPEX-OPT       VALUE '0'.\n028000           88 VSCOBOL-CAPEX-OPT         VALUE '1'.\n028100        10 VSCOBOL-CAPEX-DTECT-INDICATOR PIC X.\n028200           88 VSCOBOL-NOCAPEX-DTECT     VALUE '0'.\n028300           88 VSCOBOL-CAPEX-DTECT       VALUE '1'.\n028400        10 VSCOBOL-COUNT-INDICATOR   PIC X.\n028500           88 VSCOBOL-NOCOUNT           VALUE '0'.\n028600           88 VSCOBOL-COUNT             VALUE '1'.\n028700        10 VSCOBOL-TRACE-INDICATOR   PIC X.\n028800           88 VSCOBOL-NOTRACE           VALUE '0'.\n028900           88 VSCOBOL-TRACE             VALUE '1'.\n029000        10 VSCOBOL-LANGLEVEL-INDICATOR PIC X.\n029100           88 VSCOBOL-LANGLEVEL-1       VALUE '1'.\n029200           88 VSCOBOL-LANGLEVEL-2       VALUE '2'.\n029300        10 VSCOBOL-LAST-SYSOU-DDNM-CHAR PIC X.\n029400        10 FILLER                    PIC X(3).\n029500     05 PLI-V2-FIELDS.\n029600        10 PLI-V2-MAIN-INDICATOR     PIC X.\n029700           88 PLI-V2-PROC-OPTIONS-MAIN  VALUE '1'.\n029800           88 PLI-V2-NO-PROC-OPTIONS-MAIN VALUE '0'.\n029900        10 PLI-V2-REORDER-INDICATOR  PIC X.\n030000           88 PLI-V2-NOREORDER          VALUE '0'.\n030100           88 PLI-V2-REORDER            VALUE '1'.\n030200        10 PLI-V2-EXECOPS-INDICATOR  PIC X.\n030300           88 PLI-V2-NOEXECOPS          VALUE '0'.\n030400           88 PLI-V2-EXECOPS            VALUE '1'.\n030500        10 PLI-V2-CMPAT-INDICATOR    PIC X.\n030600           88 PLI-V2-CMPAT-V1           VALUE '1'.\n030700           88 PLI-V2-CMPAT-V2           VALUE '2'.\n030800        10 PLI-V2-GRAPHIC-INDICATOR  PIC X.\n030900           88 PLI-V2-NOGRAPHIC          VALUE '0'.\n031000           88 PLI-V2-GRAPHIC            VALUE '1'.\n031100        10 PLI-V2-OPTIMIZE-INDICATOR PIC X.\n031200           88 PLI-V2-NOOPTIMIZE         VALUE '0'.\n031300           88 PLI-V2-OPTIMIZE           VALUE '1'.\n031400        10 PLI-V2-INTERUPT-INDICATOR PIC X.\n031500           88 PLI-V2-NOINTERUPT         VALUE '0'.\n031600           88 PLI-V2-INTERUPT           VALUE '1'.\n031700        10 PLI-V2-FLOW-INDICATOR     PIC X.\n031800           88 PLI-V2-NOFLOW             VALUE '0'.\n031900           88 PLI-V2-FLOW               VALUE '1'.\n032000        10 PLI-V2-COUNT-INDICATOR    PIC X.\n032100           88 PLI-V2-NOCOUNT            VALUE '0'.\n032200           88 PLI-V2-COUNT              VALUE '1'.\n032300        10 PLI-V2-TEST-INDICATOR     PIC X.\n032400           88 PLI-V2-NOTEST             VALUE '0'.\n032500           88 PLI-V2-TEST               VALUE '1'.\n032600        10 PLI-V2-SYSTEM-INDICATOR   PIC X.\n032700           88 PLI-V2-SYSTEM-CMS         VALUE '1'.\n032800           88 PLI-V2-SYSTEM-CMSTP       VALUE '2'.\n032900           88 PLI-V2-SYSTEM-MVS         VALUE '3'.\n033000           88 PLI-V2-SYSTEM-TSO         VALUE '4'.\n033100           88 PLI-V2-SYSTEM-CICS        VALUE '5'.\n033200           88 PLI-V2-SYSTEM-IMS         VALUE '6'.\n033300        10 PLI-V2-CSECT-INDICATOR    PIC X.\n033400           88 PLI-V2-RUNTIME-CSECT      VALUE '1'.\n033500           88 PLI-V2-EXTERNAL-DATA-CSECT VALUE '2'.\n033600           88 PLI-V2-STATIC-DATA-CSECT  VALUE '3'.\n033700           88 PLI-V2-CODE-CSECT         VALUE '4'.\n033800     05 FILLER                       PIC X(28).\n033900     05 WINDOW-INDICATOR             PIC X(4).\n034000\n034100 FD  NEW-FILE\n034200     BLOCK CONTAINS 0 RECORDS\n034300     RECORD CONTAINS 200 CHARACTERS\n034400     RECORDING F.\n034500 01  NEW-RECORD.\n034600     05 CSECT-DATA.\n034700        10 MEMBER-NAME               PIC X(8).\n034800        10 MEMBER-AMODE              PIC X(1).\n034900           88 MEMBER-AMODE-24           VALUE '2'.\n035000           88 MEMBER-AMODE-31           VALUE '3'.\n035100           88 MEMBER-AMODE-ANY          VALUE 'A'.\n035200        10 MEMBER-RMODE              PIC X(1).\n035300           88 MEMBER-RMODE-24           VALUE '2'.\n035400           88 MEMBER-RMODE-31           VALUE '3'.\n035500           88 MEMBER-RMODE-ANY          VALUE 'A'.\n035600        10 CSECTNAME                 PIC X(8).\n035700        10 COMPILER-ID               PIC X(10).\n035800        10 COMPILER-VVMM             PIC X(04).\n035900        10 COMPILE-DATE-YYDDD        PIC 9(05).\n036000        10 CSECT-AMODE               PIC X.\n036100           88 CSECT-AMODE-24            VALUE '2'.\n036200           88 CSECT-AMODE-31            VALUE '3'.\n036300           88 CSECT-AMODE-ANY           VALUE 'A'.\n036400           88 CSECT-AMODE-PREXA         VALUE ' '.\n036500        10 CSECT-RMODE               PIC X.\n036600           88 CSECT-RMODE-24            VALUE '2'.\n036700           88 CSECT-RMODE-ANY           VALUE 'A'.\n036800        10 CSECT-TYPE                PIC  X(02).\n036900           88 ASSEMBLER-PROGRAM         VALUE 'AR'.\n037000           88 BASIC-PROGRAM             VALUE 'BA'.\n037100           88 DEBUG-TOOL                VALUE 'BG'.\n037200           88 BERKELEY-SOCKET           VALUE 'BS'.\n037300           88 CICS-INTERFACE            VALUE 'CC'.\n037400           88 C370-RUNTIME-ROUTINE      VALUE 'CE'.\n037500           88 C370-PROGRAM              VALUE 'CI'.\n037600           88 LATTICE-C-PROGRAM         VALUE 'CL'.\n037700           88 COMMON-SECTION            VALUE 'CM'.\n037800           88 COBOL-RUNTIME-ROUTINE     VALUE 'CR'.\n037900           88 SAS-C-PROGRAM             VALUE 'CS'.\n038000           88 C-CPLUSPLUS-FOR-OS390     VALUE 'CP'.\n038100           88 COBOL-II-PROGRAM          VALUE 'C2'.\n038200           88 COBOL-370-390-PROGRAM     VALUE 'C3'.\n038300           88 DCE-ROUTINE               VALUE 'DC'.\n038400           88 DB2-INTERFACE             VALUE 'DI'.\n038500           88 EASYTRIEVE-PLUS-PROGRAM   VALUE 'EZ'.\n038600           88 FORTRAN-G-G1-PROGRAM      VALUE 'FG'.\n038700           88 FORTRAN-H-PROGRAM         VALUE 'FH'.\n038800           88 FORTRAN-RUNTIME-ROUTINE   VALUE 'FR'.\n038900           88 VS-FORTRAN-PROGRAM        VALUE 'FV'.\n039000           88 IMS-INTERFACE             VALUE 'II'.\n039100           88 ISPF-INTERFACE            VALUE 'IS'.\n039200           88 LE-RUNTIME-ROUTINE        VALUE 'LE'.\n039300           88 MARK-V-PROGRAM            VALUE 'MV'.\n039400           88 NOT-COMPLETELY-ANALYZED   VALUE 'NA'.\n039500           88 UNRECOGNIZED-CSECT-TYPE   VALUE 'NR'.\n039600           88 VA-PLI-FOR-OS390-PROGRAM  VALUE 'PL'.\n039700           88 PLI-FOR-MVS-AND-VM-PROGRAM VALUE 'PM'.\n039800           88 PLI-RUNTIME-ROUTINE       VALUE 'PR'.\n039900           88 VS-PASCAL-PROGRAM         VALUE 'PV'.\n040000           88 PLI-OPTIMIZER-V1-PROGRAM  VALUE 'P1'.\n040100           88 PLI-OPTIMIZER-V2-PROGRAM  VALUE 'P2'.\n040200           88 IBM-REXX-PROGRAM          VALUE 'RE'.\n040300           88 OLD-LANGUAGE-RUNTIME-ROUTINE VALUE 'RE'.\n040400           88 SNAPAID-INTERFACE         VALUE 'SA'.\n040500           88 COBOL-SAMPLE-PROGRAM      VALUE 'SC'.\n040600           88 USER-RECOGNIZED-ASSEMBLER VALUE 'UR'.\n040700           88 VERY-OLD-COBOL            VALUE 'VO'.\n040800           88 OSVS-COBOL-V2REL3         VALUE 'VS'.\n040900           88 OSVS-COBOL-V2REL4         VALUE 'V4'.\n041000        10 DATE-TIME-FORMAT          PIC X.\n041100           88 SVC-PATTERN-DATE-TIME     VALUE '1'.\n041200           88 STCK-DATE-TIME            VALUE '2'.\n041300           88 BOTH-SVC-AND-STCK         VALUE '3'.\n041400           88 COBOL-ACCEPT-FROM-FORMAT  VALUE '4'.\n041500           88 COBOL-ACCEPT-OTHER-FORMAT VALUE '9'.\n041600        10 LOAD-MODULE-ATTRIBUTES    PIC X.\n041700           88 REUSABLE-MODULE           VALUE '1'.\n041800           88 RENT-NOT-REUS-MODULE      VALUE '2'.\n041900           88 RENT-AND-REUS-MODULE      VALUE '3'.\n042000           88 OVERLAY-DATA-SUSPECT      VALUE '8'.\n042100           88 MODULE-NOT-REUSABLE       VALUE ' '.\n042200        10 PRIMARY-ENTRY-POINT-NAME  PIC X(8).\n042300        10 CSECT-SIZE-IN-DECIMAL     PIC 9(08).\n042400        10 SLASH-U-PARM-DATA         PIC X(04).\n042500        10 LAST-LINKEDIT-DATE-YYDDD  PIC 9(05).\n042600     05 COBOL-II-AND-COBOL-370-FIELDS.\n042700        10 COBOL-II-COMPILER-VERSION PIC X(06).\n042800        10 COBOL-II-LEVEL            PIC X(04).\n042900        10 COBOL-II-DATE-COMPILED    PIC X(9).\n043000        10 COBOL-II-TIME-COMPILED    PIC X(8).\n043100        10 COBOL-II-ADV-INDICATOR    PIC X(1).\n043200           88 COBOL-II-ADV              VALUE '1'.\n043300           88 COBOL-II-NOADV            VALUE '0'.\n043400        10 COBOL-II-QUOTE-APOST-INDICATOR PIC X.\n043500           88 COBOL-II-QUOTE            VALUE '0'.\n043600           88 COBOL-II-APOST            VALUE '1'.\n043700        10 COBOL-II-DATA-INDICATOR   PIC X.\n043800           88 COBOL-II-DATA-24          VALUE '0'.\n043900           88 COBOL-II-DATA-31          VALUE '1'.\n044000        10 COBOL-II-DECK-INDICATOR   PIC X.\n044100           88 COBOL-II-NODECK           VALUE '0'.\n044200           88 COBOL-II-DECK             VALUE '1'.\n044300        10 COBOL-II-DUMP-INDICATOR   PIC X.\n044400           88 COBOL-II-NODUMP           VALUE '0'.\n044500           88 COBOL-II-DUMP             VALUE '1'.\n044600        10 COBOL-II-DYNAM-INDICATOR  PIC X.\n044700           88 COBOL-II-NODYNAM          VALUE '0'.\n044800           88 COBOL-II-DYNAM            VALUE '1'.\n044900        10 COBOL-II-FASTSRT-INDICATOR PIC X.\n045000           88 COBOL-II-NOFASTSRT        VALUE '0'.\n045100           88 COBOL-II-FASTSRT          VALUE '1'.\n045200        10 COBOL-II-FDUMP-INDICATOR  PIC X.\n045300           88 COBOL-II-NOFDUMP          VALUE '0'.\n045400           88 COBOL-II-FDUMP            VALUE '1'.\n045500        10 COBOL-II-LIB-INDICATOR    PIC X.\n045600           88 COBOL-II-NOLIB            VALUE '0'.\n045700           88 COBOL-II-LIB              VALUE '1'.\n045800        10 COBOL-II-LIST-INDICATOR   PIC X.\n045900           88 COBOL-II-NOLIST           VALUE '0'.\n046000           88 COBOL-II-LIST             VALUE '1'.\n046100        10 COBOL-II-MAP-INDICATOR    PIC X.\n046200           88 COBOL-II-NOMAP            VALUE '0'.\n046300           88 COBOL-II-MAP              VALUE '1'.\n046400        10 COBOL-II-NUM-INDICATOR    PIC X.\n046500           88 COBOL-II-NONUM            VALUE '0'.\n046600           88 COBOL-II-NUM              VALUE '1'.\n046700        10 COBOL-II-OBJ-INDICATOR    PIC X.\n046800           88 COBOL-II-NOOBJ            VALUE '0'.\n046900           88 COBOL-II-OBJ              VALUE '1'.\n047000        10 COBOL-II-OFFSET-INDICATOR  PIC X.\n047100           88 COBOL-II-NOOFFSET         VALUE '0'.\n047200           88 COBOL-II-OFFSET           VALUE '1'.\n047300        10 COBOL-II-OPTIMIZ-INDICATOR PIC X.\n047400           88 COBOL-II-NOOPTIMIZ        VALUE '0'.\n047500           88 COBOL-II-OPTIMIZ          VALUE '1'.\n047600        10 COBOL-II-DD-INDICATOR     PIC X.\n047700           88 COBOL-II-DD               VALUE '0'.\n047800           88 COBOL-II-OUTDD            VALUE '1'.\n047900        10 COBOL-II-PFD-INDICATOR    PIC X.\n048000           88 COBOL-II-NOPFDSGN         VALUE '0'.\n048100           88 COBOL-II-PFDSGN           VALUE '1'.\n048200           88 COBOL-390-NUMNPFD          VALUE '0'.\n048300           88 COBOL-390-NUMPFD           VALUE '1'.\n048400           88 COBOL-390-NUMMIG           VALUE '2'.\n048500        10 COBOL-II-RENT-INDICATOR   PIC X.\n048600           88 COBOL-II-NORENT           VALUE '0'.\n048700           88 COBOL-II-RENT             VALUE '1'.\n048800        10 COBOL-II-RES-INDICATOR    PIC X.\n048900           88 COBOL-II-NORES            VALUE '0'.\n049000           88 COBOL-II-RES              VALUE '1'.\n049100        10 COBOL-II-SEQ-INDICATOR    PIC X.\n049200           88 COBOL-II-NOSEQ            VALUE '0'.\n049300           88 COBOL-II-SEQ              VALUE '1'.\n049400        10 COBOL-II-SIZE-INDICATOR   PIC X.\n049500           88 COBOL-II-SIZE-NBR         VALUE '0'.\n049600           88 COBOL-II-SIZE-MAX         VALUE '1'.\n049700        10 COBOL-II-SOURCE-INDICATOR PIC X.\n049800           88 COBOL-II-NOSOURCE         VALUE '0'.\n049900           88 COBOL-II-SOURCE           VALUE '1'.\n050000        10 COBOL-II-SSRANGE-INDICATOR PIC X.\n050100           88 COBOL-II-NOSSRANGE        VALUE '0'.\n050200           88 COBOL-II-SSRANGE          VALUE '1'.\n050300        10 COBOL-II-TERM-INDICATOR   PIC X.\n050400           88 COBOL-II-NOTERM           VALUE '0'.\n050500           88 COBOL-II-TERM             VALUE '1'.\n050600        10 COBOL-II-TEST-INDICATOR   PIC X.\n050700           88 COBOL-II-NOTEST           VALUE '0'.\n050800           88 COBOL-II-TEST             VALUE '1'.\n050900        10 COBOL-II-TRUNC-INDICATOR  PIC X.\n051000           88 COBOL-II-NOTRUNC          VALUE '0'.\n051100           88 COBOL-II-TRUNC            VALUE '1'.\n051200           88 COBOL-390-TRUNCOPT        VALUE '0'.\n051300           88 COBOL-390-TRUNC-STD       VALUE '1'.\n051400           88 COBOL-390-TRUNC-BIN       VALUE '1'.\n051500        10 COBOL-II-WORD-INDICATOR   PIC X.\n051600           88 COBOL-II-WORD-DEFAULT     VALUE '0'.\n051700           88 COBOL-II-WORD-SPECIFIED   VALUE '1'.\n051800        10 COBOL-II-VBREF-INDICATOR  PIC X.\n051900           88 COBOL-II-NOVBREF          VALUE '0'.\n052000           88 COBOL-II-VBREF            VALUE '1'.\n052100        10 COBOL-II-XREF-INDICATOR   PIC X.\n052200           88 COBOL-II-NOXREF           VALUE '0'.\n052300           88 COBOL-II-XREF             VALUE '1'.\n052400        10 COBOL-II-ZWB-INDICATOR    PIC X.\n052500           88 COBOL-II-NOZWB            VALUE '0'.\n052600           88 COBOL-II-ZWB              VALUE '1'.\n052700        10 COBOL-II-CMPR2-INDICATOR  PIC X.\n052800           88 COBOL-II-NOCMPR2          VALUE '0'.\n052900           88 COBOL-II-CMPR2            VALUE '1'.\n053000        10 COBOL-II-NAME-INDICATOR   PIC X.\n053100           88 COBOL-II-NONAME           VALUE '0'.\n053200           88 COBOL-II-NAME             VALUE '1'.\n053300        10 COBOL-II-NMCL-INDICATOR   PIC X.\n053400           88 COBOL-II-NMCLPRI          VALUE '0'.\n053500           88 COBOL-II-NMCLALT          VALUE '1'.\n053600        10 COBOL-II-DBCS-INDICATOR   PIC X.\n053700           88 COBOL-II-NODBCS           VALUE '0'.\n053800           88 COBOL-II-DBCS             VALUE '1'.\n053900        10 COBOL-II-AWO-INDICATOR    PIC X.\n054000           88 COBOL-II-NOAWO            VALUE '0'.\n054100           88 COBOL-II-AWO              VALUE '1'.\n054200     05 COBOL-370-AND-390-FIELDS.\n054300        10 COBOL-390-EVENTS-INDICATOR PIC X.\n054400           88 COBOL-390-NOEVENTS         VALUE '0'.\n054500           88 COBOL-390-EVENTS           VALUE '1'.\n054600        10 COBOL-390-CURRENCY-INDICATOR PIC X.\n054700           88 COBOL-39-NOCURRENCY       VALUE '0'.\n054800           88 COBOL-39-CURRENCY         VALUE '1'.\n054900        10 COBOL-390-RMODE-INDICATOR PIC X.\n055000           88 COBOL-39-RMODE-24         VALUE '0'.\n055100           88 COBOL-39-RMODE-ANY        VALUE '1'.\n055200        10 FILLER                    PIC X(4).\n055300     05 ALL-COBOL-SORTMERGE-INDICATOR PIC X.\n055400        88 SORT-OR-MERGE-FOUND          VALUE '1'.\n055500        88 NO-SORT-OR-MERGE-FOUND       VALUE '0'.\n055600     05 ALL-COBOL-DYNAM-CALL-FND-INDIC PIC X.\n055700        88 NO-DYNAMIC-CALLS-FOUND       VALUE '0'.\n055800        88 CALL-LITERAL-FORCED-DYNAMIC VALUE '1'.\n055900        88 CALL-DATANAME                VALUE '2'.\n056000        88 CALL-LIT-FRCD-AND-CALL-DATANM VALUE '3'.\n056100        88 CAPEX-OPT-CALL-ADDR          VALUE '4'.\n056200        88 CAPEX-CALL-LIT-FORCED-DYNAM VALUE '5'.\n056300        88 CAPEX-OPT-CALL-DATANAME      VALUE '6'.\n056400        88 CAPEX-CALL-LIT-FRCD-CALL-DTNM VALUE '7'.\n056500   05 VERSION-4-AND-VS-COBOL-FIELDS.\n056600        10 VSCOBOL-SYMDUMP-INDICATOR PIC X.\n056700           88 VSCOBOL-NOSYMDUMP         VALUE '0'.\n056800           88 VSCOBOL-SYMDUMP           VALUE '1'.\n056900        10 VSCOBOL-FLOW-INDICATOR    PIC X.\n057000           88 VSCOBOL-NOFLOW            VALUE '0'.\n057100           88 VSCOBOL-FLOW              VALUE '1'.\n057200        10 VSCOBOL-STATE-INDICATOR   PIC X.\n057300           88 VSCOBOL-NOSTATE           VALUE '0'.\n057400           88 VSCOBOL-STATE             VALUE '1'.\n057500        10 VSCOBOL-TEST-INDICATOR    PIC X.\n057600           88 VSCOBOL-NOTEST            VALUE '0'.\n057700           88 VSCOBOL-TEST              VALUE '1'.\n057800        10 VSCOBOL-RES-INDICATOR     PIC X.\n057900           88 VSCOBOL-NORES             VALUE '0'.\n058000           88 VSCOBOL-RES               VALUE '1'.\n058100        10 VSCOBOL-ENDJOB-INDICATOR  PIC X.\n058200           88 VSCOBOL-NOENDJOB          VALUE '0'.\n058300           88 VSCOBOL-ENDJOB            VALUE '1'.\n058400        10 VSCOBOL-OBJ370-INDICATOR  PIC X.\n058500           88 VSCOBOL-OBJ360            VALUE '0'.\n058600           88 VSCOBOL-OBJ370            VALUE '1'.\n058700        10 VSCOBOL-OPTIMIZED-INDICATOR PIC X.\n058800           88 VSCOBOL-NOOPT             VALUE '0'.\n058900           88 VSCOBOL-OPT               VALUE '1'.\n059000        10 VSCOBOL-CAPEX-OPT-INDICATOR PIC X.\n059100           88 VSCOBOL-NOCAPEX-OPT       VALUE '0'.\n059200           88 VSCOBOL-CAPEX-OPT         VALUE '1'.\n059300        10 VSCOBOL-CAPEX-DTECT-INDICATOR PIC X.\n059400           88 VSCOBOL-NOCAPEX-DTECT     VALUE '0'.\n059500           88 VSCOBOL-CAPEX-DTECT       VALUE '1'.\n059600        10 VSCOBOL-COUNT-INDICATOR   PIC X.\n059700           88 VSCOBOL-NOCOUNT           VALUE '0'.\n059800           88 VSCOBOL-COUNT             VALUE '1'.\n059900        10 VSCOBOL-TRACE-INDICATOR   PIC X.\n060000           88 VSCOBOL-NOTRACE           VALUE '0'.\n060100           88 VSCOBOL-TRACE             VALUE '1'.\n060200        10 VSCOBOL-LANGLEVEL-INDICATOR PIC X.\n060300           88 VSCOBOL-LANGLEVEL-1       VALUE '1'.\n060400           88 VSCOBOL-LANGLEVEL-2       VALUE '2'.\n060500        10 VSCOBOL-LAST-SYSOU-DDNM-CHAR PIC X.\n060600        10 FILLER                    PIC X(3).\n060700     05 PLI-V2-FIELDS.\n060800        10 PLI-V2-MAIN-INDICATOR     PIC X.\n060900           88 PLI-V2-PROC-OPTIONS-MAIN  VALUE '1'.\n061000           88 PLI-V2-NO-PROC-OPTIONS-MAIN VALUE '0'.\n061100        10 PLI-V2-REORDER-INDICATOR  PIC X.\n061200           88 PLI-V2-NOREORDER          VALUE '0'.\n061300           88 PLI-V2-REORDER            VALUE '1'.\n061400        10 PLI-V2-EXECOPS-INDICATOR  PIC X.\n061500           88 PLI-V2-NOEXECOPS          VALUE '0'.\n061600           88 PLI-V2-EXECOPS            VALUE '1'.\n061700        10 PLI-V2-CMPAT-INDICATOR    PIC X.\n061800           88 PLI-V2-CMPAT-V1           VALUE '1'.\n061900           88 PLI-V2-CMPAT-V2           VALUE '2'.\n062000        10 PLI-V2-GRAPHIC-INDICATOR  PIC X.\n062100           88 PLI-V2-NOGRAPHIC          VALUE '0'.\n062200           88 PLI-V2-GRAPHIC            VALUE '1'.\n062300        10 PLI-V2-OPTIMIZE-INDICATOR PIC X.\n062400           88 PLI-V2-NOOPTIMIZE         VALUE '0'.\n062500           88 PLI-V2-OPTIMIZE           VALUE '1'.\n062600        10 PLI-V2-INTERUPT-INDICATOR PIC X.\n062700           88 PLI-V2-NOINTERUPT         VALUE '0'.\n062800           88 PLI-V2-INTERUPT           VALUE '1'.\n062900        10 PLI-V2-FLOW-INDICATOR     PIC X.\n063000           88 PLI-V2-NOFLOW             VALUE '0'.\n063100           88 PLI-V2-FLOW               VALUE '1'.\n063200        10 PLI-V2-COUNT-INDICATOR    PIC X.\n063300           88 PLI-V2-NOCOUNT            VALUE '0'.\n063400           88 PLI-V2-COUNT              VALUE '1'.\n063500        10 PLI-V2-TEST-INDICATOR     PIC X.\n063600           88 PLI-V2-NOTEST             VALUE '0'.\n063700           88 PLI-V2-TEST               VALUE '1'.\n063800        10 PLI-V2-SYSTEM-INDICATOR   PIC X.\n063900           88 PLI-V2-SYSTEM-CMS         VALUE '1'.\n064000           88 PLI-V2-SYSTEM-CMSTP       VALUE '2'.\n064100           88 PLI-V2-SYSTEM-MVS         VALUE '3'.\n064200           88 PLI-V2-SYSTEM-TSO         VALUE '4'.\n064300           88 PLI-V2-SYSTEM-CICS        VALUE '5'.\n064400           88 PLI-V2-SYSTEM-IMS         VALUE '6'.\n064500        10 PLI-V2-CSECT-INDICATOR    PIC X.\n064600           88 PLI-V2-RUNTIME-CSECT      VALUE '1'.\n064700           88 PLI-V2-EXTERNAL-DATA-CSECT VALUE '2'.\n064800           88 PLI-V2-STATIC-DATA-CSECT  VALUE '3'.\n064900           88 PLI-V2-CODE-CSECT         VALUE '4'.\n065000     05 FILLER                       PIC X(28).\n065100     05 WINDOW-INDICATOR             PIC X(4).\n065200\n065300 FD  REPORT-FILE\n065400     BLOCK CONTAINS 0 RECORDS\n065500     RECORD CONTAINS 133 CHARACTERS\n065600     RECORDING MODE F.\n065700 01  REPORT-RECORD.\n065800     05  FILLER                      PIC X.\n065900     05  RPT-MEMBER-NAME             PIC X(8).\n066000     05  FILLER                      PIC X.\n066100     05  RPT-CSECT-NAME              PIC X(8).\n066200     05  FILLER                      PIC X.\n066300     05  RPT-MESSAGE                 PIC X(114).\n066400\n066500 WORKING-STORAGE SECTION.\n066600 01  SWITCHES-AND-INDICATORS.\n066610     05  OLD-FILE-STATUS            PIC X VALUE 'M'.\n066800             88  NO-MORE-OLD-DATA          VALUE 'N'.\n066810             88  MORE-OLD-DATA             VALUE 'M'.\n067000     05  NEW-FILE-STATUS            PIC X VALUE 'M'.\n067200             88  NO-MORE-NEW-DATA          VALUE 'N'.\n067210             88  MORE-NEW-DATA             VALUE 'M'.\n067610     05  INPUT-DATA-SWITCH           PIC X VALUE 'N'.\n067620         88  END-OF-INPUT-DATA             VALUE 'Y'.\n067630         88  MORE-INPUT-DATA               VALUE 'N'.\n067640     05  GOT-OLD-DATA-FLAG           PIC X VALUE 'N'.\n067650         88  GOT-OLD-RECORD                VALUE 'Y'.\n067660         88  BYPASS-OLD-DATA-RECORD        VALUE 'N'.\n067670     05  GOT-NEW-DATA-FLAG           PIC X VALUE 'N'.\n067680         88  GOT-NEW-RECORD                VALUE 'Y'.\n067690         88  BYPASS-NEW-DATA-RECORD        VALUE 'N'.\n067691     05  READ-SWITCH                 PIC X VALUE 'B'.\n067692          88  READ-BOTH-FILES              VALUE 'O'.\n067693          88  READ-OLD-FILE                VALUE 'N'.\n067694          88  READ-NEW-FILE                VALUE 'B'.\n067700\n067800 PROCEDURE DIVISION.\n067900 0000-EXECUTIVE-CONTROL.\n068000     PERFORM 9900-INITIALIZATION.\n068100     PERFORM 1000-MAINLINE-PROCESSING UNTIL END-OF-INPUT-DATA.\n068200     PERFORM 9990-END-OF-JOB.\n068300     GOBACK.\n068400\n068500 1000-MAINLINE-PROCESSING.\n068600      IF READ-OLD-FILE OR READ-BOTH-FILES\n068900          PERFORM 9000-READ-OLD-FILE\n068901              UNTIL GOT-OLD-RECORD OR NO-MORE-OLD-DATA\n068910      ELSE\n069000          IF READ-NEW-FILE OR READ-BOTH-FILES\n069300          PERFORM 9001-READ-NEW-FILE\n069301              UNTIL GOT-NEW-RECORD OR NO-MORE-NEW-DATA\n069310      MOVE ' ' TO READ-SWITCH.\n069400      IF MORE-INPUT-DATA\n069500          PERFORM 2000-COMPARE-NEW-AND-OLD THRU 2000-EXIT.\n069900\n069901 2000-COMPARE-NEW-AND-OLD.\n069902      PERFORM 3000-CHECK-OLD-RECORD.\n069903      PERFORM 3001-CHECK-NEW-RECORD.\n069904      IF USABLE-OLD-RECORD AND USABLE-NEW-RECORD\n069905          IF MEMBER-NAME IN OLD-RECORD <\n069906             MEMBER-NAME IN NEW-RECORD\n069907 2000-EXIT. EXIT.\n069910\n070000 9000-READ-OLD-FILE.\n070002      IF MORE-OLD-DATA\n070010          READ OLD-FILE\n070020              AT END\n070100                  IF OLD-RECORDS-READ EQUAL ZERO\n070200                  DISPLAY 'NULL OLD INPUT FILE ENCOUNTERED'\n070300                  CALL 'ILBOABN0'\n070310              ELSE\n070320                  IF END-NEW-DATA-FILE\n070330                      MOVE 'Y' TO INPUT-DATA-SWITCH.\n070340      IF MORE-OLD-DATA\n070400          ADD 1 TO OLD-RECORDS-READ.\n072100\n072110 9001-READ-NEW-FILE.\n072120      READ NEW-FILE\n072130          AT END\n072140              IF NEW-RECORDS-READ EQUAL ZERO\n072150                  DISPLAY 'NULL NEW INPUT FILE ENCOUNTERED'\n072160                  CALL 'ILBOABN0'\n072170              ELSE\n072180                  IF END-OLD-DATA-FILE\n072190                      MOVE 'Y' TO INPUT-DATA-SWITCH.\n072191      IF MORE-NEW-DATA\n072192          ADD 1 TO NEW-RECORDS-READ.\n072193\n072194\n072200 9900-INITIALIZATION.\n072300     OPEN INPUT OLD-FILE, NEW-FILE,\n073400          OUTPUT REPORT-FILE.\n074000\n074100 9990-END-OF-JOB.\n074300     CLOSE OLD-FILE.\n074400     CLOSE NEW-FILE.\n074500     CLOSE REPORT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CNV32BIT": {"ttr": 3846, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00C\\x00\\x95\\x07o\\x01\\x02\\x00O\\x13\\x04\\x00~\\x00y\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1995-03-17T00:00:00", "modifydate": "2002-01-04T13:04:43", "lines": 126, "newlines": 121, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    CNV32BIT.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. CONVERTS A CHARACTER-FORM DECIMAL NUMBER TO A BASE-32\n000500*         VALUE SO THAT IT CAN BE PRINTED, YET FIT IN A SMALLER\n000600*         FIELD.\n000700 ENVIRONMENT DIVISION.\n000800 CONFIGURATION SECTION.\n000900 INPUT-OUTPUT SECTION.\n001000 FILE-CONTROL.\n001100     SELECT INPUT-FILE ASSIGN TO INPUT1.\n001200     SELECT PRINT-FILE ASSIGN TO PRINT1.\n001300 DATA DIVISION.\n001400 FILE SECTION.\n001500 FD  INPUT-FILE\n001600     BLOCK CONTAINS 0 RECORDS\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     RECORDING MODE IS F\n001900     LABEL RECORDS ARE STANDARD.\n002000 01  INPUT-RECORD.                                                      10\n002100   05  NUMBER-LENGTH         PIC 9.                                     20\n002200   05  FILLER                PIC X.                                     30\n002300   05  DECIMAL-NUMBER-6      PIC 9(6).                                  30\n002400   05  FILLER                REDEFINES DECIMAL-NUMBER-6.\n002500       10  DECIMAL-NUMBER-3  PIC 9(3).\n002600       10  FILLER            PIC X(3).\n002700   05  FILLER                PIC X(72).                                 40\n002800\n002900 FD  PRINT-FILE\n003000     BLOCK CONTAINS 0 RECORDS\n003100     RECORD CONTAINS 133 CHARACTERS\n003200     RECORDING MODE IS F\n003300     LABEL RECORDS ARE STANDARD.\n003400 01  PRINT-RECORD.                                                      10\n003500   05  CARRIAGE-CONTROL-BYTE PIC X.                                     20\n003600   05  PRT-LENGTH            PIC 99.                                    20\n003700   05  FILLER                PIC X.                                     30\n003800   05  PRT-NUMBER-6          PIC X(6).                                  30\n003900   05  FILLER                REDEFINES PRT-NUMBER-6.\n004000       10  PRT-NUMBER-3      PIC X(3).\n004100       10  FILLER            PIC X(3).\n004200   05  FILLER                PIC X.                                     40\n004300   05  PRT-32BIT-4           PIC X(4).                                  40\n004400   05  FILLER                REDEFINES PRT-32BIT-4.\n004500       10 PRT-32BIT-2        PIC XX.\n004600       10 FILLER             PIC XX.\n004700   05  FILLER                PIC X(118).                                40\n004800\n004900 WORKING-STORAGE SECTION.\n005000 77  FILLER PIC X(36)  VALUE\n005100     \"CNV32BIT WORKING STORAGE BEGINS HERE\".\n005200 01  GENERAL-AREAS.\n005300     05  END-OF-INPUT-SWITCH PIC X VALUE \"N\".\n005400         88  END-OF-INPUT-DATA     VALUE \"Y\".\n005500     05  I                   PIC S9(4) COMP VALUE +0.\n005600     05  J                   PIC S9(4) COMP VALUE +0.\n005700     05  32BIT-TABLE         PIC X(32) VALUE\n005800         \"0123456789ABCDEFGHIJKLMNOPQRSTUV\".\n005810     05  32BIT-TABLE-DIGIT   REDEFINES 32BIT-TABLE\n005820                             PIC X OCCURS 32 TIMES.\n005900     05  WORK-NUMBER         PIC S9(7) COMP-3.\n006000     05  32BIT-NUMBER-4      PIC X(4).\n006100     05  FILLER              REDEFINES 32BIT-NUMBER-4.\n006200         10 32BIT-DIGIT      PIC X OCCURS 4 TIMES.\n006300     05  FILLER              REDEFINES 32BIT-NUMBER-4.\n006400         10 FILLER           PIC XX.\n006500         10 32BIT-NUMBER-2   PIC XX.\n006600\n006700 PROCEDURE DIVISION.\n006800\n006900 A100-EXECUTIVE-CONTROL.\n007000     PERFORM A100-INITIALIZATION.\n007100     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT-DATA.\n007200     PERFORM Z100-END-OF-PROCESSING.\n007300     GOBACK.\n007400\n007500 A100-INITIALIZATION.\n007510     MOVE SPACES TO PRINT-RECORD.\n007600     OPEN INPUT INPUT-FILE,\n007700          OUTPUT PRINT-FILE.\n007800     PERFORM C100-READ-INPUT-FILE THRU C100-EXIT.\n007900\n008000 B100-MAINLINE-PROCESSING.\n008100     IF NUMBER-LENGTH = 6\n008200       MOVE DECIMAL-NUMBER-6 TO WORK-NUMBER\n008300     ELSE\n008400       IF NUMBER-LENGTH = 3\n008500         MOVE DECIMAL-NUMBER-3 TO WORK-NUMBER\n008600       ELSE\n008700         DISPLAY \"FOLLOWING RECORD INVALID, SKIPPED\"\n008800         DISPLAY INPUT-RECORD\n008810         PERFORM C100-READ-INPUT-FILE THRU C100-EXIT\n008900         GO TO B100-EXIT.\n009000     PERFORM D100-32BIT-CONVERSION VARYING I FROM 4 BY -1\n009100         UNTIL I = 0.\n009200     MOVE NUMBER-LENGTH TO PRT-LENGTH.\n009300     IF NUMBER-LENGTH = 6\n009400         MOVE DECIMAL-NUMBER-6 TO PRT-NUMBER-6\n009500         MOVE 32BIT-NUMBER-4 TO PRT-32BIT-4\n009600     ELSE\n009700         MOVE DECIMAL-NUMBER-3 TO PRT-NUMBER-3\n009800         MOVE 32BIT-NUMBER-2 TO PRT-32BIT-2.\n009900     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n010100     PERFORM C100-READ-INPUT-FILE THRU C100-EXIT.\n010110 B100-EXIT. EXIT.\n010200\n010300 C100-READ-INPUT-FILE.\n010400     READ INPUT-FILE\n010500         AT END MOVE \"Y\" TO END-OF-INPUT-SWITCH.\n010600 C100-EXIT. EXIT.\n010700\n010800 D100-32BIT-CONVERSION.\n010900     DIVIDE WORK-NUMBER BY 32 GIVING WORK-NUMBER\n011000         REMAINDER J.\n011010     ADD 1 TO J.\n011100     MOVE 32BIT-TABLE-DIGIT (J) TO 32BIT-DIGIT (I).\n011200 D100-EXIT. EXIT.\n011300\n011400 Y100-PRINT-A-LINE.\n011500     WRITE PRINT-RECORD AFTER ADVANCING 1 LINE.\n011510     MOVE SPACES TO PRINT-RECORD.\n011600 Y100-EXIT. EXIT.\n011700\n011800 Z100-END-OF-PROCESSING.\n011900     CLOSE INPUT-FILE,\n012000           PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "COBLMSGS": {"ttr": 3849, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00Y\\x00\\x91\\x16\\x8f\\x00\\x93\\x07\\x0f\\x13Q\\x00\\x02\\x00\\x02\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-06-17T00:00:00", "modifydate": "1993-03-11T13:51:59", "lines": 2, "newlines": 2, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. ERRMSG.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBLSORT": {"ttr": 3851, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x07\\x01\\x00\\x03/\\x01\\x02\\x00O\\x13\\x05\\x00Y\\x00Z\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-02-01T00:00:00", "modifydate": "2002-01-04T13:05:07", "lines": 89, "newlines": 90, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    COBLSORT.\n000300 AUTHOR.        R THORNTON\n000400 DATE-WRITTEN.  DEC 2000.\n000500 DATE-COMPILED.\n000600 REMARKS.\n000700 *****************************************************************\n000800 * THIS PROGRAM IS A SAMPLE COBOL INTERNAL SORT.                 *\n001000 *****************************************************************\n001100 ENVIRONMENT DIVISION.\n001200 CONFIGURATION SECTION.\n001300 INPUT-OUTPUT SECTION.\n001400 FILE-CONTROL.\n001500     SELECT SORT-FILE          ASSIGN   TO  SORTWK01.\n001600     SELECT INPUT-FILE         ASSIGN   TO  INPUT1.\n001700     SELECT SORTED-FILE        ASSIGN   TO  OUTPUT1.\n001800 DATA DIVISION.\n001900 FILE SECTION.\n002000 SD  SORT-FILE\n002100     DATA RECORD IS SORT-RECORD.\n002200 01  SORT-RECORD.\n002300     05  SD-MEMBER-NAME           PIC X(8).\n002400     05  SD-REST                  PIC X(72).\n002500 FD  INPUT-FILE\n002600     DATA RECORD IS INPUT-RECORD\n002700     RECORD CONTAINS 80 CHARACTERS\n002800     BLOCK CONTAINS 0 RECORDS\n002900     LABEL RECORDS ARE STANDARD\n003000     RECORDING MODE IS F.\n003100 01  INPUT-RECORD.\n003200     05  IN-MEMBER-NAME           PIC X(8).\n003300     05  IN-REST                  PIC X(72).\n003400 FD  SORTED-FILE\n003500     DATA RECORD IS SORTED-RECORD\n003600     RECORD CONTAINS 80 CHARACTERS\n003700     BLOCK CONTAINS 0 RECORDS\n003800     LABEL RECORDS ARE STANDARD\n003900     RECORDING MODE IS F.\n004000 01  SORTED-RECORD.\n004100     05  OUT-MEMBER-NAME          PIC X(8).\n004200     05  OUT-REST                 PIC X(72).\n004300 WORKING-STORAGE SECTION.\n004400 77  FILLER                        PIC X(36) VALUE\n004500     'COBLSORT WORKING STORAGE STARTS HERE'.\n004600 01  SWITCHES.\n004700     05  INPUT-EOF-SWITCH         PIC X VALUE 'N'.\n004800         88  INPUT-EOF            VALUE 'Y'.\n004900     05  SORT-EOF-SWITCH          PIC X VALUE 'N'.\n005000         88  SORT-EOF             VALUE 'Y'.\n005100\n005200 PROCEDURE DIVISION.\n005300     OPEN INPUT INPUT-FILE, OUTPUT SORTED-FILE.\n005400     SORT SORT-FILE ASCENDING KEY SD-MEMBER-NAME\n005500         INPUT PROCEDURE IS 100-READ-INPUT\n005600         OUTPUT PROCEDURE IS 200-WRITE-OUTPUT.\n005700     CLOSE INPUT-FILE, SORTED-FILE.\n005800     GOBACK.\n005900\n005901 100-READ-INPUT SECTION.\n005910     PERFORM 1000-READ-INPUT-FILE THRU 100-EXIT\n005911         UNTIL INPUT-EOF.\n005912\n005913 200-WRITE-OUTPUT SECTION.\n005920     PERFORM 2000-WRITE-SORTED-FILE THRU 200-EXIT\n005930         UNTIL SORT-EOF.\n005940\n005950 999-PROCEDURES SECTION.\n006000 1000-READ-INPUT-FILE.\n006100     READ INPUT-FILE\n006200         AT END\n006300             MOVE 'Y' TO INPUT-EOF-SWITCH\n006400             GO TO 100-EXIT.\n006500     PERFORM 110-BUILD-SORT-RECORD THRU 110-EXIT\n006600     GO TO 1000-READ-INPUT-FILE.\n006700 100-EXIT. EXIT.\n006800\n006900 110-BUILD-SORT-RECORD.\n007000     MOVE INPUT-RECORD TO SORT-RECORD.\n007100     RELEASE SORT-RECORD.\n007200 110-EXIT. EXIT.\n007300\n007400 2000-WRITE-SORTED-FILE.\n007500     RETURN SORT-FILE\n007600         AT END\n007700             MOVE 'Y' TO SORT-EOF-SWITCH\n007800             GO TO 200-EXIT.\n007900     WRITE SORTED-RECORD FROM SORT-RECORD.\n008000     GO TO 2000-WRITE-SORTED-FILE.\n008100 200-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBLUTIL": {"ttr": 3854, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00%\\x00\\x91)\\x0f\\x01\\x02\\x00O\\x13\\t\\x00\\x98\\x00\\x96\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-10-17T00:00:00", "modifydate": "2002-01-04T13:09:25", "lines": 152, "newlines": 150, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. COBLUTIL.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  MAY 1987.\n000500 DATE-COMPILED.\n000600*REMARKS. USED AS A SKELETON COBOL PROGRAM FOR MISCELLANEOUS PURPOSES.\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000900 FILE-CONTROL.\n001000     SELECT INFILE   ASSIGN TO UT-S-INPUT1.\n001100     SELECT PRINT    ASSIGN TO UT-S-PRINT1.\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  INFILE\n001500     LABEL RECORDS ARE STANDARD\n001600     RECORDING MODE IS F\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     BLOCK CONTAINS 0 CHARACTERS.\n001900 01  INFILE-RECORD PIC X(80).\n002000\n002100 FD  PRINT\n002200     LABEL RECORDS ARE OMITTED\n002300     RECORD CONTAINS 133 CHARACTERS\n002400     RECORDING MODE IS F\n002500     BLOCK CONTAINS 0 CHARACTERS\n002600     DATA RECORD IS PRINT-REC.\n002700 01  PRINT-REC.\n002800     03  CARR-CTL                    PIC X(1).\n002900     03  PRINT-RECORD                PIC X(132).\n003000\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER          PIC X(44)\n003300       VALUE 'COBLUTIL WORKING STORAGE SECTION STARTS HERE'.\n003400\n003500 01  SWITCHES.\n003600     05  END-OF-INPUT-SW              PIC X  VALUE 'N'.\n003700         88  MORE-INFILE-RECORDS      VALUE 'N'.\n003800         88  END-OF-INPUT             VALUE 'Y'.\n003900\n004000 01  MISCELLANEOUS-FIELDS.\n004100     05  LINE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004200     05  PAGE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004300\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004600     05  TOTAL-CNT                    PIC S9(9) COMP-3 VALUE +0.\n004700\n004800 01  HEAD-LINE-1.\n004900     05  FILLER                       PIC X(25)\n005000                                 VALUE '1PROGRAM NAME: COBLUTIL'.\n005100     05  FILLER                       PIC X(10)\n005200                                      VALUE 'RUN DATE: '.\n005300     05  HEADER-RUN-DATE              PIC X(8) VALUE SPACE.\n005400     05  FILLER                       PIC X(8) VALUE SPACE.\n005500     05  FILLER                       PIC X(30)\n005600                          VALUE '    REPORT HEADING LINE 1     '.\n005700     05  FILLER                       PIC X(43) VALUE SPACE.\n005800     05  FILLER                       PIC X(6)\n005900                                      VALUE 'PAGE: '.\n006000     05  HEADER-PAGE-NUMBER           PIC ZZ9.\n006100\n006200\n006300 01  DETAIL-REC.\n006400     05  DETAIL-CC                    PIC X VALUE SPACE.\n006500     05  FILLER                       PIC X(17)\n006600                                      VALUE '                 '.\n006700     05  DETAIL-TOTAL-CNT             PIC ZZZ,ZZZ,ZZ9.\n006800     05  FILLER                       PIC X(104) VALUE SPACE.\n006900\n007000 01  TOTAL-LINE-1.\n007100     05  FILLER                       PIC X(13) VALUE '-'.\n007200     05  FILLER                       PIC X(21)\n007300                                     VALUE 'TOTAL RECORDS READ:'.\n007400     05  FILLER                       PIC X(7) VALUE SPACES.\n007500     05  TOTAL-READ-I                 PIC ZZZ,ZZZ,Z99.\n007600\n007700\n007800 PROCEDURE DIVISION.\n007900\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZATION THRU B010-EXIT.\n008200     PERFORM B020-PROCESS THRU B020-EXIT UNTIL END-OF-INPUT.\n008300     PERFORM B030-END-OF-JOB THRU B030-EXIT.\n008400     GOBACK.\n008500\n008600 B010-INITIALIZATION.\n008700     OPEN INPUT  INFILE\n008800          OUTPUT PRINT.\n008900*    MOVE CURRENT-DATE TO HEADER-RUN-DATE.\n009000     PERFORM F010-PRINT-HEADING THRU F010-EXIT.\n009100 B010-EXIT.\n009200     EXIT.\n009300\n009400 B020-PROCESS.\n009500     PERFORM C020-READ-INFILE THRU C020-EXIT.\n009600     MOVE INFILE-RECORD TO PRINT-RECORD.\n009700      MOVE INFILE-RECORD TO DETAIL-REC.\n009800      PERFORM D040-PRINT-DETAIL THRU D040-EXIT.\n009900 B020-EXIT.\n010000     EXIT.\n010100\n010200 B030-END-OF-JOB.\n010300     PERFORM C070-WRITE-COUNTS THRU C070-EXIT.\n010400     CLOSE INFILE\n010500           PRINT.\n010600 B030-EXIT.\n010700     EXIT.\n010800\n010900 C020-READ-INFILE.\n011000     READ INFILE\n011100         AT END MOVE 'Y' TO END-OF-INPUT-SW.\n011200     IF MORE-INFILE-RECORDS\n011300         ADD 1 TO TOTAL-READ.\n011400 C020-EXIT.\n011500     EXIT.\n011600 C070-WRITE-COUNTS.\n011700     PERFORM D040-PRINT-DETAIL THRU D040-EXIT.\n011800     MOVE TOTAL-READ TO TOTAL-READ-I.\n011900     MOVE TOTAL-LINE-1 TO PRINT-REC.\n012000     PERFORM E030-PRINT-LINE THRU E030-EXIT.\n012100 C070-EXIT.\n012200     EXIT.\n012300\n012400\n012500 D040-PRINT-DETAIL.\n012600     MOVE TOTAL-CNT TO DETAIL-TOTAL-CNT.\n012700     MOVE DETAIL-REC TO PRINT-REC.\n012800     PERFORM E030-PRINT-LINE THRU E030-EXIT.\n012900 D040-EXIT.\n013000     EXIT.\n013100\n013200\n013300 E030-PRINT-LINE.\n013400*    WRITE PRINT-REC AFTER ADVANCING CARR-CTL.\n013500     WRITE PRINT-REC.\n013600     ADD 1 TO LINE-NUMBER.\n013700     MOVE SPACES TO DETAIL-REC.\n013800     IF LINE-NUMBER > 56\n013900         PERFORM F010-PRINT-HEADING THRU F010-EXIT.\n014000 E030-EXIT.\n014100     EXIT.\n014200\n014300 F010-PRINT-HEADING.\n014400     ADD 1 TO PAGE-NUMBER.\n014500     MOVE PAGE-NUMBER TO HEADER-PAGE-NUMBER.\n014600     MOVE HEAD-LINE-1 TO PRINT-REC.\n014700*    WRITE PRINT-REC AFTER ADVANCING CARR-CTL.\n014800     WRITE PRINT-REC.\n014900     MOVE 2 TO LINE-NUMBER.\n015000     MOVE '0' TO DETAIL-CC.\n015100 F010-EXIT.\n015200     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBSUBD1": {"ttr": 4100, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x03\\x01\\x01\"\\x9f\\x01\\x02\\x00O\\x13\\x10\\x00,\\x00$\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-08-17T00:00:00", "modifydate": "2002-01-04T13:10:03", "lines": 44, "newlines": 36, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    COBSUBD1.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. COBSUBD1 IS USED TO TEST VARIOUS STATIC AND DYNAMIC\n000411*         CALLS IN AN ENCLAVE THAT HAS AN ASSEMBLER MAIN PROGRAM\n000420*         WITH NO CALL TO ILBOSTP0 NOR TO IGZERRE.\n000430*         THIS DYNAMICALLY CALLED SUBROUTINE RECEIVES THREE\n000431*         PARAMETERS, (1) AN 8-CHARACTER STRING CONTAINING\n000440*         'COBSUBD1', (2) A 2-BYTE PACKED DECIMAL NUMBER, AND\n000450*         (3) A BINARY HALFWORD.\n000460*         A DISPLAY IS DONE TO SHOW THE CONTENTOF THE PARAMETERS\n000470*         RECEIVED.\n000480*         CALLS ARE MADE TO COBSUBS2 AND COBSUBD2\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'COBSUBD1 WORKING STORAGE BEGINS HERE'.\n001110 01  MISC-AREAS.\n001200     05  SUBRTN-NAME-S       PIC X(8) VALUE 'COBSUBS2'.\n001300     05  SUBRTN-NAME-D       PIC X(8) VALUE 'COBSUBD2'.\n001301     05  PACK200             PIC S9(3) COMP-3 VALUE +200.\n001302     05  BIN200              PIC S9(4) COMP VALUE +200.\n001310\n001400 LINKAGE SECTION.\n001500 01  PARM-STRING             PIC X(8).\n001510 01  PARM-PACKED             PIC S9(3) COMP-3.\n001520 01  PARM-BINARY             PIC S9(4) COMP.\n001600\n001700 PROCEDURE DIVISION USING PARM-STRING\n001710                          PARM-PACKED\n001720                          PARM-BINARY.\n002800 MAINLINE-PROCESSING.\n002900     DISPLAY 'COBSUBD1 RECEIVED: PARM1='\n002910             PARM-STRING ', PARM2='\n003000             PARM-PACKED, ', PARM3='\n003001             PARM-BINARY.\n003002     CALL 'COBSUBS2' USING SUBRTN-NAME-S, PACK200, BIN200.\n003003     CALL SUBRTN-NAME-D USING SUBRTN-NAME-D, PACK200, BIN200.\n003010     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBSUBD2": {"ttr": 4102, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x003\\x01\\x01\"\\x9f\\x01\\x02\\x00O\\x13\\x10\\x00$\\x00$\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-08-17T00:00:00", "modifydate": "2002-01-04T13:10:33", "lines": 36, "newlines": 36, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    COBSUBD2.\n000300 AUTHOR. R THORNTON\n000310*REMARKS. COBSUBD2 IS USED TO TEST VARIOUS STATIC AND DYNAMIC\n000320*         CALLS IN AN ENCLAVE THAT HAS AN ASSEMBLER MAIN PROGRAM\n000330*         WITH NO CALL TO ILBOSTP0 NOR TO IGZERRE.\n000340*         THIS DYNAMICALLY CALLED SUBROUTINE RECEIVES THREE\n000350*         PARAMETERS, (1) AN 8-CHARACTER STRING CONTAINING\n000360*         'COBSUBD1', (2) A 2-BYTE PACKED DECIMAL NUMBER, AND\n000370*         (3) A BINARY HALFWORD.\n000380*         A DISPLAY IS DONE TO SHOW THE CONTENT OF THE PARAMETERS\n000390*         RECEIVED.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'COBSUBD2 WORKING STORAGE BEGINS HERE'.\n001310\n001400 LINKAGE SECTION.\n001500 01  PARM-STRING             PIC X(8).\n001510 01  PARM-PACKED             PIC S9(3) COMP-3.\n001520 01  PARM-BINARY             PIC S9(4) COMP.\n001600\n001700 PROCEDURE DIVISION USING PARM-STRING\n001710                          PARM-PACKED\n001720                          PARM-BINARY.\n002800 MAINLINE-PROCESSING.\n002900     DISPLAY 'COBSUBD2 RECEIVED: PARM1='\n002910             PARM-STRING ', PARM2='\n003000             PARM-PACKED, ', PARM3='\n003001             PARM-BINARY.\n003010     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBSUBS1": {"ttr": 4104, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00\\x04\\x01\\x01\"\\x9f\\x01\\x02\\x00O\\x13\\x11\\x00,\\x00#\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-08-17T00:00:00", "modifydate": "2002-01-04T13:11:04", "lines": 44, "newlines": 35, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    COBSUBS1.\n000300 AUTHOR. R THORNTON\n000310*REMARKS. COBSUBS1 IS USED TO TEST VARIOUS STATIC AND DYNAMIC\n000320*         CALLS IN AN ENCLAVE THAT HAS AN ASSEMBLER MAIN PROGRAM\n000330*         WITH NO CALL TO ILBOSTP0 NOR TO IGZERRE.\n000340*         THIS STATICALLY CALLED SUBROUTINE RECEIVES THREE\n000350*         PARAMETERS, (1) AN 8-CHARACTER STRING CONTAINING\n000360*         'COBSUBD1', (2) A 2-BYTE PACKED DECIMAL NUMBER, AND\n000370*         (3) A BINARY HALFWORD.\n000380*         A DISPLAY IS DONE TO SHOW THE CONTENTOF THE PARAMETERS\n000390*         RECEIVED.\n000400*         CALLS ARE MADE TO COBSUBS2 AND COBSUBD2\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'COBSUBS1 WORKING STORAGE BEGINS HERE'.\n001200 01  MISC-AREAS.\n001210     05  SUBRTN-NAME-S       PIC X(8) VALUE 'COBSUBS2'.\n001220     05  SUBRTN-NAME-D       PIC X(8) VALUE 'COBSUBD2'.\n001300     05  PACK100             PIC S9(3) COMP-3 VALUE +100.\n001301     05  BIN100              PIC S9(4) COMP VALUE +100.\n001310\n001400 LINKAGE SECTION.\n001500 01  PARM-STRING             PIC X(8).\n001510 01  PARM-PACKED             PIC S9(3) COMP-3.\n001520 01  PARM-BINARY             PIC S9(4) COMP.\n001600\n001700 PROCEDURE DIVISION USING PARM-STRING\n001710                          PARM-PACKED\n001720                          PARM-BINARY.\n002800 MAINLINE-PROCESSING.\n002900     DISPLAY 'COBSUBS1 RECEIVED: PARM1='\n002910             PARM-STRING ', PARM2='\n003000             PARM-PACKED, ', PARM3='\n003001             PARM-BINARY.\n003002     CALL 'COBSUBS2' USING SUBRTN-NAME-S, PACK100, BIN100.\n003003     CALL SUBRTN-NAME-D USING SUBRTN-NAME-D, PACK100, BIN100.\n003010     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBSUBS2": {"ttr": 4106, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00@\\x01\\x01\"\\x9f\\x01\\x02\\x00O\\x13\\x11\\x00$\\x00$\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-08-17T00:00:00", "modifydate": "2002-01-04T13:11:40", "lines": 36, "newlines": 36, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    COBSUBS2.\n000300 AUTHOR. R THORNTON\n000310*REMARKS. COBSUBS2 IS USED TO TEST VARIOUS STATIC AND DYNAMIC\n000320*         CALLS IN AN ENCLAVE THAT HAS AN ASSEMBLER MAIN PROGRAM\n000330*         WITH NO CALL TO ILBOSTP0 NOR TO IGZERRE.\n000340*         THIS STATICALLY CALLED SUBROUTINE RECEIVES THREE\n000350*         PARAMETERS, (1) AN 8-CHARACTER STRING CONTAINING\n000360*         'COBSUBD1', (2) A 2-BYTE PACKED DECIMAL NUMBER, AND\n000370*         (3) A BINARY HALFWORD.\n000380*         A DISPLAY IS DONE TO SHOW THE CONTENT OF THE PARAMETERS\n000390*         RECEIVED.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'COBSUBS2 WORKING STORAGE BEGINS HERE'.\n001310\n001400 LINKAGE SECTION.\n001500 01  PARM-STRING             PIC X(8).\n001510 01  PARM-PACKED             PIC S9(3) COMP-3.\n001520 01  PARM-BINARY             PIC S9(4) COMP.\n001600\n001700 PROCEDURE DIVISION USING PARM-STRING\n001710                          PARM-PACKED\n001720                          PARM-BINARY.\n002800 MAINLINE-PROCESSING.\n002900     DISPLAY 'COBSUBS2 RECEIVED: PARM1='\n002910             PARM-STRING ', PARM2='\n003000             PARM-PACKED, ', PARM3='\n003001             PARM-BINARY.\n003010     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBVMAIN": {"ttr": 4108, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x19\\x00\\x11\\x00\\x92&\\x1f\\x01\\x02\\x00O\\x13\\x12\\x00\\xef\\x00\\xa3\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.25", "flags": 0, "createdate": "1992-09-17T00:00:00", "modifydate": "2002-01-04T13:12:11", "lines": 239, "newlines": 163, "modlines": 0, "user": "BC0THOR"}, "text": "000100*CBL APOST\n000110 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. COBVMAIN.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  SEP 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A COBOL VS MAINLINE PROGRAM IN TESTING MIXED  *\n000610*         RUN UNITS CONTAINING BOTH VS COBOL AND COBOL II       *\n000620*         COMPONENTS. TWO SUBROUTINES ARE CALLED: SUBR2 AND     *\n000621*         SUBR1 (COBOL II AND VS COBOL, RESPECTIVELY).          *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT INFILE   ASSIGN TO UT-S-INPUT1.\n001100     SELECT PRINT    ASSIGN TO UT-S-PRINT1.\n001110*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001310*\n001400 FD  INFILE\n001500     LABEL RECORDS ARE STANDARD\n001600     RECORDING MODE IS F\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     BLOCK CONTAINS 0 CHARACTERS.\n001900 01  INFILE-RECORD.\n001910     05  IN-KEY                     PIC X(8).\n001920     05  IN-DATA                    PIC X(72).\n001930*\n002100 FD  PRINT\n002200     LABEL RECORDS ARE OMITTED\n002300     RECORD CONTAINS 133 CHARACTERS\n002400     RECORDING MODE IS F\n002500     BLOCK CONTAINS 0 CHARACTERS\n002600     DATA RECORD IS PRINT-REC.\n002610*\n002700 01  PRINT-REC.\n002800     05  CARR-CTL                    PIC X(1).\n002900     05  PRINT-RECORD.\n002910         10  SUBR-ID                 PIC X(4).\n002920         10  FILLER                  PIC X.\n002930         10  PRINT-KEY               PIC X(8).\n002931         10  PRINT-DATA              PIC X(72).\n002932         10  FILLER                  PIC X(47).\n002940*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER          PIC X(44)\n003300       VALUE 'COBVMAIN WORKING STORAGE SECTION STARTS HERE'.\n003310*\n003500 01  SWITCHES.\n003600     05  END-OF-INPUT-SW              PIC X  VALUE 'N'.\n003700         88  MORE-INFILE-RECORDS      VALUE 'N'.\n003800         88  END-OF-INPUT             VALUE 'Y'.\n003900*\n003901 01  SUBROUTINE-PARAMETER-AREAS.\n003910     05  REQUEST-CODE                     PIC X.\n003920         88  OPEN-REQUEST                 VALUE 'O'.\n003930         88  READ-REQUEST                 VALUE 'R'.\n003940         88  CLOSE-REQUEST                VALUE 'C'.\n003960     05  RECORD-RETURN-AREA.\n003970         10  RETURN-KEY                   PIC X(8).\n003971         10  RETURN-DATA.\n003972             15  RETURN-FIRST-FIELD       PIC X(7).\n003973             15  RETURN-FIRST-FIELD9\n003974                       REDEFINES RETURN-FIRST-FIELD\n003975                                          PIC S9(7).\n003976             15  RETURN-REST-OF-DATA      PIC X(65).\n003980     05  RECORD-KEY-ARGUMENT              PIC X(8).\n003991     05  COMPLETION-CODE                  PIC X VALUE 'Y'.\n003992         88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n003993         88  RECORD-NOT-FOUND             VALUE 'N'.\n004003*\n004010 01  MISCELLANEOUS-FIELDS.\n004100     05  LINE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004200     05  PAGE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004201     05  ANSWER1               PIC ZZ,ZZ9.999- BLANK ZERO.\n004202     05  ANSWER2               PIC ZZ,ZZ9.999- BLANK ZERO.\n004203     05  BINARY-NUM            PIC S9(4) COMP VALUE +403.\n004204     05  PACKED-NUM            PIC S99V9 COMP-3 VALUE -72.6.\n004205     05  ZONED-NUM             PIC S9(5)V99 VALUE +105.92.\n004206     05  ZONED-BINRCV          PIC S9(3)V9 VALUE +0.\n004207     05  PACKED-BINRCV         PIC S9(5)V9(4) COMP-3 VALUE +0.\n004208     05  ZONED-PKRCV           PIC S9V999 VALUE +0.\n004209     05  BINARY-PKRCV          PIC S9(7) COMP VALUE +0.\n004210     05  PACKED-ZONRCV         PIC S9999V9 COMP-3 VALUE +0.\n004211     05  BINARY-ZONRCV         PIC S9(7)V9(7) COMP VALUE +0.\n004220*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004600     05  TOTAL-CNT                    PIC S9(9) COMP-3 VALUE +0.\n004610*\n004800 01  HEAD-LINE-1.\n004900     05  FILLER                       PIC X(25)\n005000                                 VALUE '1PROGRAM NAME: COBVMAIN'.\n005100     05  FILLER                       PIC X(10)\n005200                                      VALUE 'RUN DATE: '.\n005310*    05  HEADER-RUN-DATE              PIC 99/99/99.\n005320     05  HEADER-RUN-DATE              PIC X(8) VALUE SPACE.\n005400     05  FILLER                       PIC X(8) VALUE SPACE.\n005500     05  FILLER                       PIC X(30)\n005600                          VALUE '    REPORT HEADING LINE 1     '.\n005700     05  FILLER                       PIC X(43) VALUE SPACE.\n005800     05  FILLER                       PIC X(6)\n005900                                      VALUE 'PAGE: '.\n006000     05  HEADER-PAGE-NUMBER           PIC ZZ9.\n006010*\n006300 01  DETAIL-REC.\n006400     05  DETAIL-CC                    PIC X VALUE SPACE.\n006500     05  FILLER                       PIC X(17)\n006600                                      VALUE '                 '.\n006700     05  DETAIL-TOTAL-CNT             PIC ZZZ,ZZZ,ZZ9.\n006800     05  FILLER                       PIC X(104) VALUE SPACE.\n006810*\n007000 01  TOTAL-LINE-1.\n007100     05  FILLER                       PIC X(13) VALUE '-'.\n007200     05  FILLER                       PIC X(21)\n007300                                     VALUE 'TOTAL RECORDS READ:'.\n007400     05  FILLER                       PIC X(7) VALUE SPACES.\n007500     05  TOTAL-READ-I                 PIC ZZZ,ZZZ,Z99.\n007510*\n007800 PROCEDURE DIVISION.\n007810*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZATION THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT UNTIL END-OF-INPUT.\n008300     PERFORM Z030-END-OF-JOB THRU Z030-EXIT.\n008400     GOBACK.\n008410*\n008600 B010-INITIALIZATION.\n008610     MOVE 'O' TO REQUEST-CODE.\n008620     CALL 'SUBR1' USING REQUEST-CODE, COMPLETION-CODE.\n008624     CALL 'SUBR2'    USING REQUEST-CODE, COMPLETION-CODE.\n008660     MOVE 'R' TO REQUEST-CODE.\n008800     OPEN INPUT  INFILE, OUTPUT PRINT.\n008900*    ACCEPT HEADER-RUN-DATE FROM DATE.\n008910     MOVE CURRENT-DATE TO HEADER-RUN-DATE.\n009000     PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n009100 B010-EXIT.\n009200     EXIT.\n009210*\n009400 C010-PROCESS.\n009500     PERFORM E010-READ-INFILE THRU E010-EXIT.\n009600     IF END-OF-INPUT GO TO C010-EXIT.\n009700     MOVE SPACES TO PRINT-RECORD.\n009701     MOVE IN-KEY TO PRINT-KEY.\n009800     MOVE IN-KEY TO RECORD-KEY-ARGUMENT.\n009803     CALL 'SUBR1' USING REQUEST-CODE,\n009804                           COMPLETION-CODE,\n009805                           RECORD-RETURN-AREA,\n009806                           RECORD-KEY-ARGUMENT.\n009807     IF SUCCESSFUL-OPERATION\n009808         MOVE 'COBV' TO SUBR-ID\n009809         MOVE RECORD-RETURN-AREA TO PRINT-DATA\n009810     ELSE\n009820         MOVE 'V-RECORD FOR THIS KEY NOT FOUND' TO PRINT-DATA.\n009842     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n009843     IF RETURN-FIRST-FIELD IS NUMERIC\n009844         COMPUTE ANSWER1 = (RETURN-FIRST-FIELD9 - BINARY-NUM) *\n009845            (PACKED-NUM / ZONED-NUM).\n009846     CALL 'SUBR2' USING REQUEST-CODE,\n009847                           COMPLETION-CODE,\n009848                           RECORD-RETURN-AREA,\n009849                           RECORD-KEY-ARGUMENT.\n009850     IF SUCCESSFUL-OPERATION\n009851         MOVE 'COB2' TO SUBR-ID\n009852         MOVE RECORD-RETURN-AREA TO PRINT-DATA\n009853     ELSE\n009854         MOVE '2-RECORD FOR THIS KEY NOT FOUND' TO PRINT-DATA.\n009860     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n009870     IF RETURN-FIRST-FIELD IS NUMERIC\n009880         COMPUTE ANSWER2 = (RETURN-FIRST-FIELD9 + BINARY-NUM) *\n009890            (PACKED-NUM / ZONED-NUM)\n009891     ELSE\n009892         MOVE BINARY-NUM TO ZONED-BINRCV\n009893         MOVE BINARY-NUM TO PACKED-BINRCV\n009894         MOVE PACKED-NUM TO ZONED-PKRCV\n009895         MOVE PACKED-NUM TO BINARY-PKRCV\n009896         MOVE ZONED-NUM TO PACKED-ZONRCV\n009897         MOVE ZONED-NUM TO BINARY-ZONRCV.\n009910 C010-EXIT.\n010000     EXIT.\n010710*\n010900 E010-READ-INFILE.\n011000     READ INFILE\n011100         AT END MOVE 'Y' TO END-OF-INPUT-SW.\n011200     IF MORE-INFILE-RECORDS\n011300         ADD 1 TO TOTAL-READ.\n011400 E010-EXIT.\n011500     EXIT.\n011510*\n011600 G010-WRITE-COUNTS.\n011700     PERFORM K010-PRINT-DETAIL THRU K010-EXIT.\n011800     MOVE TOTAL-READ TO TOTAL-READ-I.\n011900     MOVE TOTAL-LINE-1 TO PRINT-REC.\n012000     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n012100 G010-EXIT.\n012200     EXIT.\n012210*\n012500 K010-PRINT-DETAIL.\n012600     MOVE TOTAL-CNT TO DETAIL-TOTAL-CNT.\n012700     MOVE DETAIL-REC TO PRINT-REC.\n012800     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n012900 K010-EXIT.\n013000     EXIT.\n013010*\n013300 M010-PRINT-LINE.\n013400     WRITE PRINT-REC.\n013600     ADD 1 TO LINE-NUMBER.\n013700     MOVE SPACES TO PRINT-REC.\n013800     IF LINE-NUMBER > 56\n013900         PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n014000 M010-EXIT.\n014100     EXIT.\n014110*\n014300 Q010-PRINT-HEADING.\n014400     ADD 1 TO PAGE-NUMBER.\n014500     MOVE PAGE-NUMBER TO HEADER-PAGE-NUMBER.\n014600     MOVE HEAD-LINE-1 TO PRINT-REC.\n014700     WRITE PRINT-REC.\n014900     MOVE 2 TO LINE-NUMBER.\n014910     MOVE SPACES TO PRINT-REC.\n015000     MOVE '0' TO CARR-CTL.\n015100 Q010-EXIT.\n015200     EXIT.\n015300*\n015400 Z030-END-OF-JOB.\n015500     PERFORM G010-WRITE-COUNTS THRU G010-EXIT.\n015600     CLOSE INFILE, PRINT.\n015800     MOVE 'C' TO REQUEST-CODE.\n016000     CALL 'SUBR1' USING REQUEST-CODE, COMPLETION-CODE.\n016010     CALL 'SUBR2' USING REQUEST-CODE, COMPLETION-CODE.\n016020     DISPLAY '************************************************'.\n016030     DISPLAY '*     GOOD COMPLETION. ANSWER1 IS: ' ANSWER1 ' *'.\n016031     DISPLAY '*     GOOD COMPLETION. ANSWER2 IS: ' ANSWER2 ' *'.\n016040     DISPLAY '************************************************'.\n016300 Z030-EXIT.\n016400     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBVSSR": {"ttr": 4113, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x006\\x01\\x01\\x04?\\x01\\x02\\x00O\\x13\\x12\\x00\\x86\\x00\\x86\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-02-12T00:00:00", "modifydate": "2002-01-04T13:12:36", "lines": 134, "newlines": 134, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. COBVSUBR.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A VS COBOL SUBROUTINE IN A RUN UNIT CONTAINING*\n000610*         A MIXTURE OF VS COBOL AND COBOL II PROGRAMS. CALLER   *\n000620*         PASSES A REQUEST CODE FOR OPEN, READ, OR CLOSE, AND   *\n000621*         A RETURN CODE FIELD. FOR READ REQUESTS, THE KEY OF THE*\n000622*         DESIRED RECORD AND AN AREA TO CONTAIN THE RECORD ARE  *\n000623*         ALSO PASSED. IF ANY UNUSUAL CONDITION OCCURS, A       *\n000624*         MESSAGE IS WRITTEN AND COBABEND IS CALLED.            *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT VSAM-FILE ASSIGN TO VSAM02\n001100            ORGANIZATION IS INDEXED\n001110            ACCESS IS RANDOM\n001120            RECORD KEY IS VSAM-KEY\n001130            FILE STATUS IS FILE-STATUS.\n001140*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  VSAM-FILE\n001500     LABEL RECORDS ARE STANDARD.\n001900 01  VSAM-RECORD.\n001910     05  VSAM-KEY                     PIC X(8).\n001920     05  VSAM-DATA                    PIC X(72).\n003000*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                           PIC X(44)\n003300       VALUE 'COBVSUBR WORKING STORAGE SECTION STARTS HERE'.\n003400*\n003500 01  SWITCHES.\n004010     05  FILE-STATUS                  PIC XX.\n004030         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n004050         88  NO-RECORD-FOUND          VALUE '23'.\n004300*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004700*\n004800 LINKAGE SECTION.\n004900 01  REQUEST-CODE                     PIC X.\n005000     88  OPEN-REQUEST                 VALUE 'O'.\n005100     88  READ-REQUEST                 VALUE 'R'.\n005200     88  CLOSE-REQUEST                VALUE 'C'.\n005300*\n007710 01  RECORD-RETURN-AREA               PIC X(80).\n007720*\n007730 01  RECORD-KEY-ARGUMENT              PIC X(8).\n007740*\n007750 01  COMPLETION-CODE                  PIC X.\n007760     88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n007770     88  RECORD-NOT-FOUND             VALUE 'N'.\n007780*\n007790 01  PARM-FIELD-ON-EXECUTE.\n007791     05  LINKAGE-PARM-LENGTH     PIC S9(4) COMP.\n007792     05  IDX-OR-SUB              PIC XXX.\n007793     05  COMMA-1                 PIC X.\n007794     05  PARM-1                  PIC 999.\n007795     05  COMMA-2                 PIC X.\n007796     05  PARM-2                  PIC 999.\n007797     05  COMMA-3                 PIC X.\n007798     05  PARM-3                  PIC 999.\n007799*\n007800 PROCEDURE DIVISION USING REQUEST-CODE,\n007801                          COMPLETION-CODE,\n007810                          RECORD-RETURN-AREA,\n007820                          RECORD-KEY-ARGUMENT.\n007900*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZE THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT.\n008400     GOBACK.\n008410*\n008420 B010-INITIALIZE.\n008430     MOVE 'Y' TO COMPLETION-CODE.\n008440 B010-EXIT.\n008450     EXIT.\n008500*\n008510 C010-PROCESS.\n008511     IF READ-REQUEST\n008512         PERFORM J010-READ-FILE THRU J010-EXIT\n008513     ELSE IF OPEN-REQUEST\n008514         PERFORM K010-OPEN-FILE THRU K010-EXIT\n008515     ELSE IF CLOSE-REQUEST\n008516         PERFORM Y010-CLOSE-FILE THRU Y010-EXIT\n008517     ELSE\n008518         DISPLAY 'COBVSUBR: INVALID REQUEST CODE FROM CALLER'\n008519         CALL 'COBABEND'.\n008520 C010-EXIT.\n008530     EXIT.\n010800*\n010900 J010-READ-FILE.\n010910     MOVE RECORD-KEY-ARGUMENT TO VSAM-KEY.\n011000     READ VSAM-FILE RECORD INTO RECORD-RETURN-AREA.\n011310     IF SUCCESSFUL-COMPLETION\n011311         ADD 1 TO TOTAL-READ\n011330     ELSE IF NO-RECORD-FOUND\n011331         MOVE 'N' TO COMPLETION-CODE\n011332     ELSE\n011340         DISPLAY 'COBVSUBR: READ FAILED FOR VSAM02 FILE'\n011341         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011400 J010-EXIT.\n011500     EXIT.\n011510*\n011520 K010-OPEN-FILE.\n011530     OPEN INPUT VSAM-FILE.\n011540     IF SUCCESSFUL-COMPLETION\n011550         NEXT SENTENCE\n011560     ELSE\n011570         DISPLAY 'COBVSUBR: OPEN FAILED FOR VSAM02 FILE'\n011571         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011590 K010-EXIT.\n011591     EXIT.\n011600*\n011620 Y010-CLOSE-FILE.\n011630     CLOSE VSAM-FILE.\n011631     IF SUCCESSFUL-COMPLETION\n011632         NEXT SENTENCE\n011633     ELSE\n011634         DISPLAY 'COBVSUBR: CLOSE FAILED FOR VSAM02 FILE'\n011635         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011640 Y010-EXIT.\n011650     EXIT.\n011660*\n011700 Z010-ERRORS.\n011800     DISPLAY 'COBVSUBR: VSAM02 FILE STATUS IS: ' FILE-STATUS.\n011810         CALL 'COBABEND'.\n012000 Z010-EXIT.\n012100     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBVSUBR": {"ttr": 4355, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00G\\x00\\x92&\\x1f\\x01\\x02\\x00O\\x13\\x15\\x00|\\x00r\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1992-09-17T00:00:00", "modifydate": "2002-01-04T13:15:47", "lines": 124, "newlines": 114, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. COBVSUBR.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A VS COBOL SUBROUTINE IN A RUN UNIT CONTAINING*\n000610*         A MIXTURE OF VS COBOL AND COBOL II PROGRAMS. CALLER   *\n000620*         PASSES A REQUEST CODE FOR OPEN, READ, OR CLOSE, AND   *\n000621*         A RETURN CODE FIELD. FOR READ REQUESTS, THE KEY OF THE*\n000622*         DESIRED RECORD AND AN AREA TO CONTAIN THE RECORD ARE  *\n000623*         ALSO PASSED. IF ANY UNUSUAL CONDITION OCCURS, A       *\n000624*         MESSAGE IS WRITTEN AND COBABEND IS CALLED.            *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT VSAM-FILE ASSIGN TO VSAM02\n001100            ORGANIZATION IS INDEXED\n001110            ACCESS IS RANDOM\n001120            RECORD KEY IS VSAM-KEY\n001130            FILE STATUS IS FILE-STATUS.\n001140*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  VSAM-FILE\n001500     LABEL RECORDS ARE STANDARD.\n001900 01  VSAM-RECORD.\n001910     05  VSAM-KEY                     PIC X(8).\n001920     05  VSAM-DATA                    PIC X(72).\n003000*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                           PIC X(44)\n003300       VALUE 'COBVSUBR WORKING STORAGE SECTION STARTS HERE'.\n003400*\n003500 01  SWITCHES.\n004010     05  FILE-STATUS                  PIC XX.\n004030         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n004050         88  NO-RECORD-FOUND          VALUE '23'.\n004300*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004700*\n004800 LINKAGE SECTION.\n004900 01  REQUEST-CODE                     PIC X.\n005000     88  OPEN-REQUEST                 VALUE 'O'.\n005100     88  READ-REQUEST                 VALUE 'R'.\n005200     88  CLOSE-REQUEST                VALUE 'C'.\n005300*\n007710 01  RECORD-RETURN-AREA               PIC X(80).\n007720*\n007730 01  RECORD-KEY-ARGUMENT              PIC X(8).\n007740*\n007750 01  COMPLETION-CODE                  PIC X.\n007760     88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n007770     88  RECORD-NOT-FOUND             VALUE 'N'.\n007780*\n007800 PROCEDURE DIVISION USING REQUEST-CODE,\n007801                          COMPLETION-CODE,\n007810                          RECORD-RETURN-AREA,\n007820                          RECORD-KEY-ARGUMENT.\n007900*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZE THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT.\n008400     GOBACK.\n008410*\n008420 B010-INITIALIZE.\n008430     MOVE 'Y' TO COMPLETION-CODE.\n008440 B010-EXIT.\n008450     EXIT.\n008500*\n008510 C010-PROCESS.\n008511     IF READ-REQUEST\n008512         PERFORM J010-READ-FILE THRU J010-EXIT\n008513     ELSE IF OPEN-REQUEST\n008514         PERFORM K010-OPEN-FILE THRU K010-EXIT\n008515     ELSE IF CLOSE-REQUEST\n008516         PERFORM Y010-CLOSE-FILE THRU Y010-EXIT\n008517     ELSE\n008518         DISPLAY 'COBVSUBR: INVALID REQUEST CODE FROM CALLER'\n008519         CALL 'COBABEND'.\n008520 C010-EXIT.\n008530     EXIT.\n010800*\n010900 J010-READ-FILE.\n010910     MOVE RECORD-KEY-ARGUMENT TO VSAM-KEY.\n011000     READ VSAM-FILE RECORD INTO RECORD-RETURN-AREA.\n011310     IF SUCCESSFUL-COMPLETION\n011311         ADD 1 TO TOTAL-READ\n011330     ELSE IF NO-RECORD-FOUND\n011331         MOVE 'N' TO COMPLETION-CODE\n011332     ELSE\n011340         DISPLAY 'COBVSUBR: READ FAILED FOR VSAM02 FILE'\n011341         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011400 J010-EXIT.\n011500     EXIT.\n011510*\n011520 K010-OPEN-FILE.\n011530     OPEN INPUT VSAM-FILE.\n011540     IF SUCCESSFUL-COMPLETION\n011550         NEXT SENTENCE\n011560     ELSE\n011570         DISPLAY 'COBVSUBR: OPEN FAILED FOR VSAM02 FILE'\n011571         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011590 K010-EXIT.\n011591     EXIT.\n011600*\n011620 Y010-CLOSE-FILE.\n011630     CLOSE VSAM-FILE.\n011631     IF SUCCESSFUL-COMPLETION\n011632         NEXT SENTENCE\n011633     ELSE\n011634         DISPLAY 'COBVSUBR: CLOSE FAILED FOR VSAM02 FILE'\n011635         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011640 Y010-EXIT.\n011650     EXIT.\n011660*\n011700 Z010-ERRORS.\n011800     DISPLAY 'COBVSUBR: VSAM02 FILE STATUS IS: ' FILE-STATUS.\n011810         CALL 'COBABEND'.\n012000 Z010-EXIT.\n012100     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBVSUB1": {"ttr": 4358, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x00\\x15\\x8f\\x01\\x02\\x00O\\x13\\x16\\x00|\\x00|\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-06-06T00:00:00", "modifydate": "2002-01-04T13:16:30", "lines": 124, "newlines": 124, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. SUBR1.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A VS COBOL SUBROUTINE IN A RUN UNIT CONTAINING*\n000610*         A MIXTURE OF VS COBOL AND COBOL II PROGRAMS. CALLER   *\n000620*         PASSES A REQUEST CODE FOR OPEN, READ, OR CLOSE, AND   *\n000621*         A RETURN CODE FIELD. FOR READ REQUESTS, THE KEY OF THE*\n000622*         DESIRED RECORD AND AN AREA TO CONTAIN THE RECORD ARE  *\n000623*         ALSO PASSED. IF ANY UNUSUAL CONDITION OCCURS, A       *\n000624*         MESSAGE IS WRITTEN AND COBABEND IS CALLED.            *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT VSAM-FILE ASSIGN TO VSAM02\n001100            ORGANIZATION IS INDEXED\n001110            ACCESS IS RANDOM\n001120            RECORD KEY IS VSAM-KEY\n001130            FILE STATUS IS FILE-STATUS.\n001140*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  VSAM-FILE\n001500     LABEL RECORDS ARE STANDARD.\n001900 01  VSAM-RECORD.\n001910     05  VSAM-KEY                     PIC X(8).\n001920     05  VSAM-DATA                    PIC X(72).\n003000*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                           PIC X(44)\n003300       VALUE 'COBVSUBR WORKING STORAGE SECTION STARTS HERE'.\n003400*\n003500 01  SWITCHES.\n004010     05  FILE-STATUS                  PIC XX.\n004030         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n004050         88  NO-RECORD-FOUND          VALUE '23'.\n004300*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004700*\n004800 LINKAGE SECTION.\n004900 01  REQUEST-CODE                     PIC X.\n005000     88  OPEN-REQUEST                 VALUE 'O'.\n005100     88  READ-REQUEST                 VALUE 'R'.\n005200     88  CLOSE-REQUEST                VALUE 'C'.\n005300*\n007710 01  RECORD-RETURN-AREA               PIC X(80).\n007720*\n007730 01  RECORD-KEY-ARGUMENT              PIC X(8).\n007740*\n007750 01  COMPLETION-CODE                  PIC X.\n007760     88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n007770     88  RECORD-NOT-FOUND             VALUE 'N'.\n007780*\n007800 PROCEDURE DIVISION USING REQUEST-CODE,\n007801                          COMPLETION-CODE,\n007810                          RECORD-RETURN-AREA,\n007820                          RECORD-KEY-ARGUMENT.\n007900*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZE THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT.\n008400     GOBACK.\n008410*\n008420 B010-INITIALIZE.\n008430     MOVE 'Y' TO COMPLETION-CODE.\n008440 B010-EXIT.\n008450     EXIT.\n008500*\n008510 C010-PROCESS.\n008511     IF READ-REQUEST\n008512         PERFORM J010-READ-FILE THRU J010-EXIT\n008513     ELSE IF OPEN-REQUEST\n008514         PERFORM K010-OPEN-FILE THRU K010-EXIT\n008515     ELSE IF CLOSE-REQUEST\n008516         PERFORM Y010-CLOSE-FILE THRU Y010-EXIT\n008517     ELSE\n008518         DISPLAY 'COBVSUBR: INVALID REQUEST CODE FROM CALLER'\n008519         CALL 'COBABEND'.\n008520 C010-EXIT.\n008530     EXIT.\n010800*\n010900 J010-READ-FILE.\n010910     MOVE RECORD-KEY-ARGUMENT TO VSAM-KEY.\n011000     READ VSAM-FILE RECORD INTO RECORD-RETURN-AREA.\n011310     IF SUCCESSFUL-COMPLETION\n011311         ADD 1 TO TOTAL-READ\n011330     ELSE IF NO-RECORD-FOUND\n011331         MOVE 'N' TO COMPLETION-CODE\n011332     ELSE\n011340         DISPLAY 'COBVSUBR: READ FAILED FOR VSAM02 FILE'\n011341         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011400 J010-EXIT.\n011500     EXIT.\n011510*\n011520 K010-OPEN-FILE.\n011530     OPEN INPUT VSAM-FILE.\n011540     IF SUCCESSFUL-COMPLETION\n011550         NEXT SENTENCE\n011560     ELSE\n011570         DISPLAY 'COBVSUBR: OPEN FAILED FOR VSAM02 FILE'\n011571         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011590 K010-EXIT.\n011591     EXIT.\n011600*\n011620 Y010-CLOSE-FILE.\n011630     CLOSE VSAM-FILE.\n011631     IF SUCCESSFUL-COMPLETION\n011632         NEXT SENTENCE\n011633     ELSE\n011634         DISPLAY 'COBVSUBR: CLOSE FAILED FOR VSAM02 FILE'\n011635         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011640 Y010-EXIT.\n011650     EXIT.\n011660*\n011700 Z010-ERRORS.\n011800     DISPLAY 'COBVSUBR: VSAM02 FILE STATUS IS: ' FILE-STATUS.\n011810         CALL 'COBABEND'.\n012000 Z010-EXIT.\n012100     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COBVSUB2": {"ttr": 4361, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x00\\x15\\x8f\\x01\\x02\\x00O\\x13\\x17\\x00|\\x00|\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-06-06T00:00:00", "modifydate": "2002-01-04T13:17:07", "lines": 124, "newlines": 124, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. SUBR2.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A VS COBOL SUBROUTINE IN A RUN UNIT CONTAINING*\n000610*         A MIXTURE OF VS COBOL AND COBOL II PROGRAMS. CALLER   *\n000620*         PASSES A REQUEST CODE FOR OPEN, READ, OR CLOSE, AND   *\n000621*         A RETURN CODE FIELD. FOR READ REQUESTS, THE KEY OF THE*\n000622*         DESIRED RECORD AND AN AREA TO CONTAIN THE RECORD ARE  *\n000623*         ALSO PASSED. IF ANY UNUSUAL CONDITION OCCURS, A       *\n000624*         MESSAGE IS WRITTEN AND COBABEND IS CALLED.            *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT VSAM-FILE ASSIGN TO VSAM02\n001100            ORGANIZATION IS INDEXED\n001110            ACCESS IS RANDOM\n001120            RECORD KEY IS VSAM-KEY\n001130            FILE STATUS IS FILE-STATUS.\n001140*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  VSAM-FILE\n001500     LABEL RECORDS ARE STANDARD.\n001900 01  VSAM-RECORD.\n001910     05  VSAM-KEY                     PIC X(8).\n001920     05  VSAM-DATA                    PIC X(72).\n003000*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                           PIC X(44)\n003300       VALUE 'COBVSUBR WORKING STORAGE SECTION STARTS HERE'.\n003400*\n003500 01  SWITCHES.\n004010     05  FILE-STATUS                  PIC XX.\n004030         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n004050         88  NO-RECORD-FOUND          VALUE '23'.\n004300*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004700*\n004800 LINKAGE SECTION.\n004900 01  REQUEST-CODE                     PIC X.\n005000     88  OPEN-REQUEST                 VALUE 'O'.\n005100     88  READ-REQUEST                 VALUE 'R'.\n005200     88  CLOSE-REQUEST                VALUE 'C'.\n005300*\n007710 01  RECORD-RETURN-AREA               PIC X(80).\n007720*\n007730 01  RECORD-KEY-ARGUMENT              PIC X(8).\n007740*\n007750 01  COMPLETION-CODE                  PIC X.\n007760     88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n007770     88  RECORD-NOT-FOUND             VALUE 'N'.\n007780*\n007800 PROCEDURE DIVISION USING REQUEST-CODE,\n007801                          COMPLETION-CODE,\n007810                          RECORD-RETURN-AREA,\n007820                          RECORD-KEY-ARGUMENT.\n007900*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZE THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT.\n008400     GOBACK.\n008410*\n008420 B010-INITIALIZE.\n008430     MOVE 'Y' TO COMPLETION-CODE.\n008440 B010-EXIT.\n008450     EXIT.\n008500*\n008510 C010-PROCESS.\n008511     IF READ-REQUEST\n008512         PERFORM J010-READ-FILE THRU J010-EXIT\n008513     ELSE IF OPEN-REQUEST\n008514         PERFORM K010-OPEN-FILE THRU K010-EXIT\n008515     ELSE IF CLOSE-REQUEST\n008516         PERFORM Y010-CLOSE-FILE THRU Y010-EXIT\n008517     ELSE\n008518         DISPLAY 'COBVSUBR: INVALID REQUEST CODE FROM CALLER'\n008519         CALL 'COBABEND'.\n008520 C010-EXIT.\n008530     EXIT.\n010800*\n010900 J010-READ-FILE.\n010910     MOVE RECORD-KEY-ARGUMENT TO VSAM-KEY.\n011000     READ VSAM-FILE RECORD INTO RECORD-RETURN-AREA.\n011310     IF SUCCESSFUL-COMPLETION\n011311         ADD 1 TO TOTAL-READ\n011330     ELSE IF NO-RECORD-FOUND\n011331         MOVE 'N' TO COMPLETION-CODE\n011332     ELSE\n011340         DISPLAY 'COBVSUBR: READ FAILED FOR VSAM02 FILE'\n011341         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011400 J010-EXIT.\n011500     EXIT.\n011510*\n011520 K010-OPEN-FILE.\n011530     OPEN INPUT VSAM-FILE.\n011540     IF SUCCESSFUL-COMPLETION\n011550         NEXT SENTENCE\n011560     ELSE\n011570         DISPLAY 'COBVSUBR: OPEN FAILED FOR VSAM02 FILE'\n011571         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011590 K010-EXIT.\n011591     EXIT.\n011600*\n011620 Y010-CLOSE-FILE.\n011630     CLOSE VSAM-FILE.\n011631     IF SUCCESSFUL-COMPLETION\n011632         NEXT SENTENCE\n011633     ELSE\n011634         DISPLAY 'COBVSUBR: CLOSE FAILED FOR VSAM02 FILE'\n011635         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011640 Y010-EXIT.\n011650     EXIT.\n011660*\n011700 Z010-ERRORS.\n011800     DISPLAY 'COBVSUBR: VSAM02 FILE STATUS IS: ' FILE-STATUS.\n011810         CALL 'COBABEND'.\n012000 Z010-EXIT.\n012100     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB2DSPL": {"ttr": 4364, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00\\x14\\x01\\x00\\x12?\\x01\\x02\\x00O\\x13\\x18\\x00\\x89\\x00)\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "2000-05-02T00:00:00", "modifydate": "2002-01-04T13:18:14", "lines": 137, "newlines": 41, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. COB2DSPL.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  MAY 2000.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED TO ANALYZE COBOL II'S DISPLAY CODE GENERATION    *\n000610*         TO AID IN RECONSTRUCTING COBOL SOURCE FOR PROGRAMS    *\n000620*         WHERE SOURCE HAS BEEN LOST, BUT A LOAD MODULE EXISTS. *\n000630*****************************************************************\n000640 ENVIRONMENT DIVISION.\n000650 INPUT-OUTPUT SECTION.\n000660*\n000670 FILE-CONTROL.\n000680     SELECT INFILE   ASSIGN TO UT-S-INPUT1.\n000690     SELECT PRINT    ASSIGN TO UT-S-PRINT1.\n000700*\n000800 DATA DIVISION.\n000900 FILE SECTION.\n001000*\n001100 FD  INFILE\n001101     LABEL RECORDS ARE STANDARD\n001102     RECORDING MODE IS F\n001103     RECORD CONTAINS 80 CHARACTERS\n001104     BLOCK CONTAINS 0 CHARACTERS.\n001105 01  INFILE-RECORD.\n001106     05  IN-KEY                     PIC X(8).\n001107     05  IN-DATA                    PIC X(72).\n001108*\n001109 FD  PRINT\n001110     LABEL RECORDS ARE OMITTED\n001111     RECORD CONTAINS 133 CHARACTERS\n001112     RECORDING MODE IS F\n001113     BLOCK CONTAINS 0 CHARACTERS\n001114     DATA RECORD IS PRINT-REC.\n001115*\n001116 01  PRINT-REC.\n001117     05  CARR-CTL                    PIC X(1).\n001118     05  PRINT-RECORD.\n001119         10  SUBR-ID                 PIC X(4).\n001120         10  FILLER                  PIC X.\n001121         10  PRINT-KEY               PIC X(8).\n001122         10  PRINT-DATA              PIC X(72).\n001123         10  FILLER                  PIC X(47).\n002940*\n003100 WORKING-STORAGE SECTION.\n003200 01  EYE-CATCHER     PIC X(44)\n003300       VALUE 'COB2DSPL WORKING STORAGE SECTION STARTS HERE'.\n003310 01  BL-NUMBER        PIC X VALUE LOW-VALUE.\n003400 01  MISCELLANEOUS.\n003410     05  CHAR-BLW0    PIC X(12) VALUE 'BLW0 LITERAL'.\n003500     05  PACKED-BLW0  PIC S9(5)V99 COMP-3 VALUE +00000.00.\n003600     05  BINARY-BLW0  PIC S9(7) COMP VALUE +0000.\n003700     05  ZONED-BLW0   PIC 9(8) VALUE 00000000.\n003800     05  FILLER       PIC X(4090).\n003810     05  CHAR-BLW1    PIC X(13) VALUE 'BLW11 LITERAL'.\n003900     05  PACKED-BLW1  PIC S9(5)V99 COMP-3 VALUE +11111.11.\n004000     05  BINARY-BLW1  PIC S9(7) COMP VALUE +1111.\n004100     05  ZONED-BLW1   PIC 9(8) VALUE 11111111.\n004200     05  FILLER       PIC X(4090).\n004210     05  CHAR-BLW2    PIC X(14) VALUE 'BLW222 LITERAL'.\n004300     05  PACKED-BLW2  PIC S9(5)V99 COMP-3 VALUE +22222.22.\n004400     05  BINARY-BLW2  PIC S9(7) COMP VALUE +2222.\n004500     05  ZONED-BLW2   PIC 9(8) VALUE 22222222.\n004600     05  FILLER       PIC X(4090).\n004610     05  CHAR-BLW3    PIC X(15) VALUE 'BLW3333 LITERAL'.\n004700     05  PACKED-BLW3  PIC S9(5)V99 COMP-3 VALUE +33333.33.\n004800     05  BINARY-BLW3  PIC S9(7) COMP VALUE +3333.\n004900     05  ZONED-BLW3   PIC 9(8) VALUE 33333333.\n005000     05  FILLER       PIC X(4090).\n005010     05  CHAR-BLW4    PIC X(16) VALUE 'BLW44444 LITERAL'.\n005100     05  PACKED-BLW4  PIC S9(5)V99 COMP-3 VALUE +44444.44.\n005200     05  BINARY-BLW4  PIC S9(7) COMP VALUE +4444.\n005300     05  ZONED-BLW4   PIC 9(8) VALUE 44444444.\n005400     05  FILLER       PIC X(4090).\n005410     05  CHAR-BLW5    PIC X(17) VALUE 'BLW555555 LITERAL'.\n005500     05  PACKED-BLW5  PIC S9(5)V99 COMP-3 VALUE +55555.55.\n005600     05  BINARY-BLW5  PIC S9(7) COMP VALUE +5555.\n005700     05  ZONED-BLW5   PIC 9(8) VALUE 55555555.\n005800     05  FILLER       PIC X(4090).\n007510*\n007530 LINKAGE SECTION.\n007540 01  BLL0-FIELD                      PIC X(32).\n007550 01  BLL1-GROUP.\n007560     05  BLL1-COMP2                  PIC S9(2) COMP.\n007570     05  FILLER                      PIC X(34).\n007580     05  BLL1-FLT1                   COMP-1.\n007590     05  FILLER                      PIC X(7).\n007600     05  BLL1-FLT2                   COMP-2.\n007700 01  BLL2-GROUP.\n007710     05  BLL2-PACKED                 PIC 9(3) COMP-3.\n007720     05  BLL2-BINARY                 PIC S9(12) COMP.\n007730     05  BLL2-CHAR                   PIC X(9).\n007740     05  BLL2-FLT1                   COMP-1.\n007750     05  BLL2-FLT2                   COMP-1.\n007760*\n007800 PROCEDURE DIVISION USING BLL0-FIELD, BLL1-GROUP, BLL2-GROUP.\n007810 SETBLW.\n007820     MOVE 'W' TO BL-NUMBER.\n007900 DISPLAY0.\n016020     DISPLAY 'MESSAGE W' ' IS A LITERAL' ' OF DIFFERING '\n016030              'SIZES: 9, 13, 14, AND THIS ONE OF 43 BYTES.'.\n016031 SETBLX.\n016032     MOVE 'X' TO BL-NUMBER.\n016033 DISPLAYX.\n016040     DISPLAY 'MESSAGE X IS A SINGLE 45 BYTE LITERAL STRING.'.\n016041 SETBL5.\n016042     MOVE '5' TO BL-NUMBER.\n016043 DISPLAY5.\n016050     DISPLAY 'MESSAGE 5 IS THREE PARTS: LITERAL-PACKED-TEXT: '\n016060              PACKED-BLW5 ' AS 47-4P-12.'.\n016061 SETBL3.\n016062     MOVE '3' TO BL-NUMBER.\n016063 DISPLAY3.\n016070     DISPLAY 'MESSAGE 3 IS TWO PARTS, 45 TEXT AND 4 BINARY.'\n016080              BINARY-BLW3.\n016081 SETBL4.\n016082     MOVE '4' TO BL-NUMBER.\n016083 DISPLAY4.\n016090     DISPLAY CHAR-BLW4 PACKED-BLW4 BINARY-BLW4 ZONED-BLW4\n016100     ' 4 FIELDS FROM BLW4.'.\n016200 SETBL2.\n016210     MOVE '2' TO BL-NUMBER.\n016220 DISPLAY2.\n016230     DISPLAY CHAR-BLW2 PACKED-BLW2 BINARY-BLW2 ZONED-BLW2\n016240     ' 4 FIELDS FROM BLW2.'.\n016250     OPEN INPUT INFILE, OUTPUT PRINT.\n016260     READ INFILE AT END MOVE 'E' TO BL-NUMBER.\n016270     MOVE INFILE-RECORD TO PRINT-REC.\n016271 SETBLAST.\n016272     MOVE 'Z' TO BL-NUMBER.\n016273 DISPLAYZ.\n016280     DISPLAY 'IN-KEY=' IN-KEY ' SUBR-ID=' SUBR-ID.\n016290     DISPLAY BLL0-FIELD BLL1-GROUP BLL2-GROUP.\n016291     DISPLAY BLL1-COMP2 BLL1-FLT1 BLL1-FLT2.\n016292     DISPLAY BLL2-PACKED BLL2-BINARY BLL2-CHAR BLL2-FLT1 BLL2-FLT2\n016300     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB2MAIN": {"ttr": 4609, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x14\\x00\\t\\x00\\x92&\\x1f\\x01\\x02\\x00O\\x13\\x19\\x00\\xee\\x00\\xa3\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.20", "flags": 0, "createdate": "1992-09-17T00:00:00", "modifydate": "2002-01-04T13:19:09", "lines": 238, "newlines": 163, "modlines": 0, "user": "BC0THOR"}, "text": "000020 CBL APOST\n000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. COB2MAIN.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A COBOL II MAINLINE PROGRAM IN TESTING MIXED  *\n000610*         RUN UNITS CONTAINING BOTH VS COBOL AND COBOL II       *\n000620*         COMPONENTS. TWO SUBROUTINES ARE CALLED: SUBR2 AND     *\n000621*         SUBR1 (COBOL II AND VS COBOL, RESPECTIVELY).          *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT INFILE   ASSIGN TO UT-S-INPUT1.\n001100     SELECT PRINT    ASSIGN TO UT-S-PRINT1.\n001110*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001310*\n001400 FD  INFILE\n001500     LABEL RECORDS ARE STANDARD\n001600     RECORDING MODE IS F\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     BLOCK CONTAINS 0 CHARACTERS.\n001900 01  INFILE-RECORD.\n001910     05  IN-KEY                     PIC X(8).\n001920     05  IN-DATA                    PIC X(72).\n001930*\n002100 FD  PRINT\n002200     LABEL RECORDS ARE OMITTED\n002300     RECORD CONTAINS 133 CHARACTERS\n002400     RECORDING MODE IS F\n002500     BLOCK CONTAINS 0 CHARACTERS\n002600     DATA RECORD IS PRINT-REC.\n002610*\n002700 01  PRINT-REC.\n002800     05  CARR-CTL                    PIC X(1).\n002900     05  PRINT-RECORD.\n002910         10  SUBR-ID                 PIC X(4).\n002911         10  FILLER                  PIC X.\n002912         10  PRINT-KEY               PIC X(8).\n002920         10  PRINT-DATA              PIC X(72).\n002930         10  FILLER                  PIC X(47).\n002940*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER          PIC X(44)\n003300       VALUE 'COB2MAIN WORKING STORAGE SECTION STARTS HERE'.\n003310*\n003500 01  SWITCHES.\n003600     05  END-OF-INPUT-SW              PIC X  VALUE 'N'.\n003700         88  MORE-INFILE-RECORDS      VALUE 'N'.\n003800         88  END-OF-INPUT             VALUE 'Y'.\n003900*\n003901 01  SUBROUTINE-PARAMETER-AREAS.\n003910     05  REQUEST-CODE                     PIC X.\n003920         88  OPEN-REQUEST                 VALUE 'O'.\n003930         88  READ-REQUEST                 VALUE 'R'.\n003940         88  CLOSE-REQUEST                VALUE 'C'.\n003960     05  RECORD-RETURN-AREA.\n003970         10  RETURN-KEY                   PIC X(8).\n003971         10  RETURN-DATA.\n003972             15  RETURN-FIRST-FIELD       PIC X(7).\n003973             15  RETURN-FIRST-FIELD9\n003974                 REDEFINES RETURN-FIRST-FIELD PIC S9(7).\n003975             15  RETURN-REST-OF-DATA      PIC X(65).\n003980     05  RECORD-KEY-ARGUMENT              PIC X(8).\n003991     05  COMPLETION-CODE                  PIC X VALUE 'Y'.\n003992         88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n003993         88  RECORD-NOT-FOUND             VALUE 'N'.\n004003*\n004010 01  MISCELLANEOUS-FIELDS.\n004100     05  LINE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004200     05  PAGE-NUMBER           PIC S999 COMP-3 VALUE +0.\n004201     05  ANSWER1               PIC ZZ,ZZ9.999- BLANK ZERO.\n004202     05  ANSWER2               PIC ZZ,ZZ9.999- BLANK ZERO.\n004203     05  BINARY-NUM            PIC S9(4) COMP VALUE +403.\n004204     05  PACKED-NUM            PIC S99V9 COMP-3 VALUE -72.6.\n004205     05  ZONED-NUM             PIC S9(5)V99 VALUE +105.92.\n004206     05  ZONED-BINRCV          PIC S9(3)V9 VALUE +0.\n004207     05  PACKED-BINRCV         PIC S9(5)V9(4) COMP-3 VALUE +0.\n004208     05  ZONED-PKRCV           PIC S9V999 VALUE +0.\n004209     05  BINARY-PKRCV          PIC S9(7) COMP VALUE +0.\n004210     05  PACKED-ZONRCV         PIC S9999V9 COMP-3 VALUE +0.\n004211     05  BINARY-ZONRCV         PIC S9(7)V9(7) COMP VALUE +0.\n004220*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004600     05  TOTAL-CNT                    PIC S9(9) COMP-3 VALUE +0.\n004610*\n004800 01  HEAD-LINE-1.\n004900     05  FILLER                       PIC X(25)\n005000                                 VALUE '1PROGRAM NAME: COB2MAIN'.\n005100     05  FILLER                       PIC X(10)\n005200                                      VALUE 'RUN DATE: '.\n005310     05  HEADER-RUN-DATE              PIC 99/99/99.\n005320*    05  HEADER-RUN-DATE              PIC X(8) VALUE SPACE.\n005400     05  FILLER                       PIC X(8) VALUE SPACE.\n005500     05  FILLER                       PIC X(30)\n005600                          VALUE '    REPORT HEADING LINE 1     '.\n005700     05  FILLER                       PIC X(43) VALUE SPACE.\n005800     05  FILLER                       PIC X(6)\n005900                                      VALUE 'PAGE: '.\n006000     05  HEADER-PAGE-NUMBER           PIC ZZ9.\n006010*\n006300 01  DETAIL-REC.\n006400     05  DETAIL-CC                    PIC X VALUE SPACE.\n006500     05  FILLER                       PIC X(17)\n006600                                      VALUE '                 '.\n006700     05  DETAIL-TOTAL-CNT             PIC ZZZ,ZZZ,ZZ9.\n006800     05  FILLER                       PIC X(104) VALUE SPACE.\n006810*\n007000 01  TOTAL-LINE-1.\n007100     05  FILLER                       PIC X(13) VALUE '-'.\n007200     05  FILLER                       PIC X(21)\n007300                                     VALUE 'TOTAL RECORDS READ:'.\n007400     05  FILLER                       PIC X(7) VALUE SPACES.\n007500     05  TOTAL-READ-I                 PIC ZZZ,ZZZ,Z99.\n007510*\n007800 PROCEDURE DIVISION.\n007810*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZATION THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT UNTIL END-OF-INPUT.\n008300     PERFORM Z030-END-OF-JOB THRU Z030-EXIT.\n008400     GOBACK.\n008410*\n008600 B010-INITIALIZATION.\n008610     MOVE 'O' TO REQUEST-CODE.\n008620     CALL 'COBVSUBR' USING REQUEST-CODE, COMPLETION-CODE.\n008621     CALL 'COB2SUBR' USING REQUEST-CODE, COMPLETION-CODE.\n008660     MOVE 'R' TO REQUEST-CODE.\n008800     OPEN INPUT  INFILE, OUTPUT PRINT.\n008900     ACCEPT HEADER-RUN-DATE FROM DATE.\n008910*    MOVE CURRENT-DATE TO HEADER-RUN-DATE.\n009000     PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n009100 B010-EXIT.\n009200     EXIT.\n009210*\n009400 C010-PROCESS.\n009500     PERFORM E010-READ-INFILE THRU E010-EXIT.\n009600     IF END-OF-INPUT GO TO C010-EXIT.\n009700     MOVE SPACES TO PRINT-RECORD.\n009701     MOVE IN-KEY TO PRINT-KEY.\n009800     MOVE IN-KEY TO RECORD-KEY-ARGUMENT.\n009803     CALL 'COBVSUBR' USING REQUEST-CODE,\n009804                           COMPLETION-CODE,\n009805                           RECORD-RETURN-AREA,\n009806                           RECORD-KEY-ARGUMENT.\n009807     IF SUCCESSFUL-OPERATION\n009808         MOVE 'COBV' TO SUBR-ID\n009809         MOVE RECORD-RETURN-AREA TO PRINT-DATA\n009810     ELSE\n009820         MOVE 'V-RECORD FOR THIS KEY NOT FOUND' TO PRINT-DATA.\n009842     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n009843     IF RETURN-FIRST-FIELD IS NUMERIC\n009844         COMPUTE ANSWER1 = (RETURN-FIRST-FIELD9 - BINARY-NUM) *\n009845            (PACKED-NUM / ZONED-NUM).\n009846     CALL 'COB2SUBR' USING REQUEST-CODE,\n009847                           COMPLETION-CODE,\n009848                           RECORD-RETURN-AREA,\n009849                           RECORD-KEY-ARGUMENT.\n009850     IF SUCCESSFUL-OPERATION\n009851         MOVE 'COB2' TO SUBR-ID\n009852         MOVE RECORD-RETURN-AREA TO PRINT-DATA\n009853     ELSE\n009854         MOVE '2-RECORD FOR THIS KEY NOT FOUND' TO PRINT-DATA.\n009860     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n009861     IF RETURN-FIRST-FIELD IS NUMERIC\n009870         COMPUTE ANSWER2 = (RETURN-FIRST-FIELD9 + BINARY-NUM) *\n009880            (PACKED-NUM / ZONED-NUM)\n009890     ELSE\n009891         MOVE BINARY-NUM TO ZONED-BINRCV\n009892         MOVE BINARY-NUM TO PACKED-BINRCV\n009893         MOVE PACKED-NUM TO ZONED-PKRCV\n009894         MOVE PACKED-NUM TO BINARY-PKRCV\n009895         MOVE ZONED-NUM TO PACKED-ZONRCV\n009896         MOVE ZONED-NUM TO BINARY-ZONRCV.\n009900 C010-EXIT.\n010000     EXIT.\n010710*\n010900 E010-READ-INFILE.\n011000     READ INFILE\n011100         AT END MOVE 'Y' TO END-OF-INPUT-SW.\n011200     IF MORE-INFILE-RECORDS\n011300         ADD 1 TO TOTAL-READ.\n011400 E010-EXIT.\n011500     EXIT.\n011510*\n011600 G010-WRITE-COUNTS.\n011700     PERFORM K010-PRINT-DETAIL THRU K010-EXIT.\n011800     MOVE TOTAL-READ TO TOTAL-READ-I.\n011900     MOVE TOTAL-LINE-1 TO PRINT-REC.\n012000     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n012100 G010-EXIT.\n012200     EXIT.\n012210*\n012500 K010-PRINT-DETAIL.\n012600     MOVE TOTAL-CNT TO DETAIL-TOTAL-CNT.\n012700     MOVE DETAIL-REC TO PRINT-REC.\n012800     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n012900 K010-EXIT.\n013000     EXIT.\n013010*\n013300 M010-PRINT-LINE.\n013400     WRITE PRINT-REC.\n013600     ADD 1 TO LINE-NUMBER.\n013700     MOVE SPACES TO PRINT-REC.\n013800     IF LINE-NUMBER > 56\n013900         PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n014000 M010-EXIT.\n014100     EXIT.\n014110*\n014300 Q010-PRINT-HEADING.\n014400     ADD 1 TO PAGE-NUMBER.\n014500     MOVE PAGE-NUMBER TO HEADER-PAGE-NUMBER.\n014600     MOVE HEAD-LINE-1 TO PRINT-REC.\n014700     WRITE PRINT-REC.\n014900     MOVE 2 TO LINE-NUMBER.\n014910     MOVE SPACES TO PRINT-REC.\n015000     MOVE '0' TO CARR-CTL.\n015100 Q010-EXIT.\n015200     EXIT.\n015300*\n015400 Z030-END-OF-JOB.\n015500     PERFORM G010-WRITE-COUNTS THRU G010-EXIT.\n015600     CLOSE INFILE, PRINT.\n015800     MOVE 'C' TO REQUEST-CODE.\n016000     CALL 'COBVSUBR' USING REQUEST-CODE, COMPLETION-CODE.\n016010     CALL 'COB2SUBR' USING REQUEST-CODE, COMPLETION-CODE.\n016020     DISPLAY '************************************************'.\n016030     DISPLAY '*     GOOD COMPLETION. ANSWER1 IS: ' ANSWER1 ' *'.\n016040     DISPLAY '*     GOOD COMPLETION. ANSWER2 IS: ' ANSWER2 ' *'.\n016050     DISPLAY '************************************************'.\n016300 Z030-EXIT.\n016400     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB2RES": {"ttr": 4614, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00X\\x00\\x94\\x11o\\x01\\x02\\x00O\\x13\\x19\\x00 \\x00 \\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-04-26T00:00:00", "modifydate": "2002-01-04T13:19:58", "lines": 32, "newlines": 32, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    COB2RES.\n000300*AUTHOR. R THORNTON\n000400*REMARKS. SUB-PROGRAM CALLED BY ASSEMBLER PROGRAM SPOUTST.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'COB2RES WORKING STORAGE BEGINS HERE'.\n001400 LINKAGE SECTION.\n001500 01  ONE-BYTE                PIC X.\n001600\n001700 PROCEDURE DIVISION USING ONE-BYTE.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n002000     PERFORM A100-INITIALIZATION.\n002100     PERFORM B100-MAINLINE-PROCESSING.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002500 A100-INITIALIZATION.\n002600     MOVE '1' TO ONE-BYTE.\n002700\n002800 B100-MAINLINE-PROCESSING.\n002900     MOVE '2' TO ONE-BYTE.\n003000\n003100 Z100-END-OF-PROCESSING.\n003200     MOVE '3' TO ONE-BYTE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB2SSR": {"ttr": 4616, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x004\\x01\\x02\\x13\\x0f\\x01\\x02\\x13\\x0f\\x08)\\x00\\x86\\x00\\x86\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-05-10T00:00:00", "modifydate": "2002-05-10T08:29:34", "lines": 134, "newlines": 134, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. COB2SSR.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A COBOL II SUBROUTINE IN A RUN UNIT CONTAINING*\n000610*         A MIXTURE OF VS COBOL AND COBOL II PROGRAMS. CALLER   *\n000620*         PASSES A REQUEST CODE FOR OPEN, READ, OR CLOSE, AND   *\n000621*         A RETURN CODE FIELD. FOR READ REQUESTS, THE KEY OF THE*\n000622*         DESIRED RECORD AND AN AREA TO CONTAIN THE RECORD ARE  *\n000623*         ALSO PASSED. IF ANY UNUSUAL CONDITION OCCURS, A       *\n000624*         MESSAGE IS WRITTEN AND COBABEND IS CALLED.            *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT VSAM-FILE ASSIGN TO VSAM02\n001100            ORGANIZATION IS INDEXED\n001110            ACCESS IS RANDOM\n001120            RECORD KEY IS VSAM-KEY\n001130            FILE STATUS IS FILE-STATUS.\n001140*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  VSAM-FILE\n001500     LABEL RECORDS ARE STANDARD.\n001900 01  VSAM-RECORD.\n001910     05  VSAM-KEY                     PIC X(8).\n001920     05  VSAM-DATA                    PIC X(72).\n003000*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                           PIC X(44)\n003300       VALUE 'COB2SSR WORKING STORAGE SECTION STARTS HERE'.\n003400*\n003500 01  SWITCHES.\n004010     05  FILE-STATUS                  PIC XX.\n004030         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n004050         88  NO-RECORD-FOUND          VALUE '23'.\n004300*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004700*\n004800 LINKAGE SECTION.\n004900 01  REQUEST-CODE                     PIC X.\n005000     88  OPEN-REQUEST                 VALUE 'O'.\n005100     88  READ-REQUEST                 VALUE 'R'.\n005200     88  CLOSE-REQUEST                VALUE 'C'.\n005300*\n007710 01  RECORD-RETURN-AREA               PIC X(80).\n007720*\n007730 01  RECORD-KEY-ARGUMENT              PIC X(8).\n007740*\n007750 01  COMPLETION-CODE                  PIC X.\n007760     88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n007770     88  RECORD-NOT-FOUND             VALUE 'N'.\n007780*\n007790 01  PARM-FIELD-ON-EXECUTE.\n007791     05  LINKAGE-PARM-LENGTH     PIC S9(4) COMP.\n007792     05  IDX-OR-SUB              PIC XXX.\n007793     05  COMMA-1                 PIC X.\n007794     05  PARM-1                  PIC 999.\n007795     05  COMMA-2                 PIC X.\n007796     05  PARM-2                  PIC 999.\n007797     05  COMMA-3                 PIC X.\n007798     05  PARM-3                  PIC 999.\n007799*\n007800 PROCEDURE DIVISION USING REQUEST-CODE,\n007801                          COMPLETION-CODE,\n007810                          RECORD-RETURN-AREA,\n007820                          RECORD-KEY-ARGUMENT.\n007900*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZE THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT.\n008400     GOBACK.\n008410*\n008420 B010-INITIALIZE.\n008430     MOVE 'Y' TO COMPLETION-CODE.\n008440 B010-EXIT.\n008450     EXIT.\n008500*\n008510 C010-PROCESS.\n008511     IF READ-REQUEST\n008512         PERFORM J010-READ-FILE THRU J010-EXIT\n008513     ELSE IF OPEN-REQUEST\n008514         PERFORM K010-OPEN-FILE THRU K010-EXIT\n008515     ELSE IF CLOSE-REQUEST\n008516         PERFORM Y010-CLOSE-FILE THRU Y010-EXIT\n008517     ELSE\n008518         DISPLAY 'COB2SSR: INVALID REQUEST CODE FROM CALLER'\n008519         CALL 'COBABEND'.\n008520 C010-EXIT.\n008530     EXIT.\n010800*\n010900 J010-READ-FILE.\n010910     MOVE RECORD-KEY-ARGUMENT TO VSAM-KEY.\n011000     READ VSAM-FILE RECORD INTO RECORD-RETURN-AREA.\n011310     IF SUCCESSFUL-COMPLETION\n011311         ADD 1 TO TOTAL-READ\n011330     ELSE IF NO-RECORD-FOUND\n011331         MOVE 'N' TO COMPLETION-CODE\n011332     ELSE\n011340         DISPLAY 'COB2SSR: READ FAILED FOR VSAM02 FILE'\n011341         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011400 J010-EXIT.\n011500     EXIT.\n011510*\n011520 K010-OPEN-FILE.\n011530     OPEN INPUT VSAM-FILE.\n011540     IF SUCCESSFUL-COMPLETION\n011550         NEXT SENTENCE\n011560     ELSE\n011570         DISPLAY 'COB2SSR: OPEN FAILED FOR VSAM02 FILE'\n011571         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011590 K010-EXIT.\n011591     EXIT.\n011600*\n011620 Y010-CLOSE-FILE.\n011630     CLOSE VSAM-FILE.\n011631     IF SUCCESSFUL-COMPLETION\n011632         NEXT SENTENCE\n011633     ELSE\n011634         DISPLAY 'COB2SSR: CLOSE FAILED FOR VSAM02 FILE'\n011635         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011640 Y010-EXIT.\n011650     EXIT.\n011660*\n011700 Z010-ERRORS.\n011800     DISPLAY 'COB2SSR: VSAM02 FILE STATUS IS: ' FILE-STATUS.\n011810         CALL 'COBABEND'.\n012000 Z010-EXIT.\n012100     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB2SUBR": {"ttr": 4619, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00)\\x00\\x92(\\x1f\\x01\\x02\\x00O\\x13 \\x00|\\x00W\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1992-10-07T00:00:00", "modifydate": "2002-01-04T13:20:29", "lines": 124, "newlines": 87, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. COB2SUBR.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A COBOL II SUBROUTINE IN A RUN UNIT CONTAINING*\n000610*         A MIXTURE OF VS COBOL AND COBOL II PROGRAMS. CALLER   *\n000620*         PASSES A REQUEST CODE FOR OPEN, READ, OR CLOSE, AND   *\n000621*         A RETURN CODE FIELD. FOR READ REQUESTS, THE KEY OF THE*\n000622*         DESIRED RECORD AND AN AREA TO CONTAIN THE RECORD ARE  *\n000623*         ALSO PASSED. IF ANY UNUSUAL CONDITION OCCURS, A       *\n000624*         MESSAGE IS WRITTEN AND COBABEND IS CALLED.            *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT VSAM-FILE ASSIGN TO VSAM01\n001100            ORGANIZATION IS INDEXED\n001110            ACCESS IS RANDOM\n001120            RECORD KEY IS VSAM-KEY\n001130            FILE STATUS IS FILE-STATUS.\n001140*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  VSAM-FILE\n001500     LABEL RECORDS ARE STANDARD.\n001900 01  VSAM-RECORD.\n001910     05  VSAM-KEY                     PIC X(8).\n001920     05  VSAM-DATA                    PIC X(72).\n003000*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                           PIC X(44)\n003300       VALUE 'COB2SUBR WORKING STORAGE SECTION STARTS HERE'.\n003400*\n003500 01  SWITCHES.\n004010     05  FILE-STATUS                  PIC XX.\n004030         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n004050         88  NO-RECORD-FOUND          VALUE '23'.\n004300*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004700*\n004800 LINKAGE SECTION.\n004900 01  REQUEST-CODE                     PIC X.\n005000     88  OPEN-REQUEST                 VALUE 'O'.\n005100     88  READ-REQUEST                 VALUE 'R'.\n005200     88  CLOSE-REQUEST                VALUE 'C'.\n005300*\n007710 01  RECORD-RETURN-AREA               PIC X(80).\n007720*\n007730 01  RECORD-KEY-ARGUMENT              PIC X(8).\n007740*\n007750 01  COMPLETION-CODE                  PIC X.\n007760     88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n007770     88  RECORD-NOT-FOUND             VALUE 'N'.\n007780*\n007800 PROCEDURE DIVISION USING REQUEST-CODE,\n007801                          COMPLETION-CODE,\n007810                          RECORD-RETURN-AREA,\n007820                          RECORD-KEY-ARGUMENT.\n007900*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZE THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT.\n008400     GOBACK.\n008410*\n008420 B010-INITIALIZE.\n008430     MOVE 'Y' TO COMPLETION-CODE.\n008440 B010-EXIT.\n008450     EXIT.\n008500*\n008510 C010-PROCESS.\n008511     IF READ-REQUEST\n008512         PERFORM J010-READ-FILE THRU J010-EXIT\n008513     ELSE IF OPEN-REQUEST\n008514         PERFORM K010-OPEN-FILE THRU K010-EXIT\n008515     ELSE IF CLOSE-REQUEST\n008516         PERFORM Y010-CLOSE-FILE THRU Y010-EXIT\n008517     ELSE\n008518         DISPLAY 'COB2SUBR: INVALID REQUEST CODE FROM CALLER'\n008519         CALL 'COBABEND'.\n008520 C010-EXIT.\n008530     EXIT.\n010800*\n010900 J010-READ-FILE.\n010910     MOVE RECORD-KEY-ARGUMENT TO VSAM-KEY.\n011000     READ VSAM-FILE RECORD INTO RECORD-RETURN-AREA.\n011310     IF SUCCESSFUL-COMPLETION\n011311         ADD 1 TO TOTAL-READ\n011330     ELSE IF NO-RECORD-FOUND\n011331         MOVE 'N' TO COMPLETION-CODE\n011332     ELSE\n011340         DISPLAY 'COB2SUBR: READ FAILED FOR VSAM01 FILE'\n011341         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011400 J010-EXIT.\n011500     EXIT.\n011510*\n011520 K010-OPEN-FILE.\n011530     OPEN INPUT VSAM-FILE.\n011540     IF SUCCESSFUL-COMPLETION\n011550         NEXT SENTENCE\n011560     ELSE\n011570         DISPLAY 'COB2SUBR: OPEN FAILED FOR VSAM01 FILE'\n011571         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011590 K010-EXIT.\n011591     EXIT.\n011600*\n011620 Y010-CLOSE-FILE.\n011630     CLOSE VSAM-FILE.\n011631     IF SUCCESSFUL-COMPLETION\n011632         NEXT SENTENCE\n011633     ELSE\n011634         DISPLAY 'COB2SUBR: CLOSE FAILED FOR VSAM01 FILE'\n011635         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011640 Y010-EXIT.\n011650     EXIT.\n011660*\n011700 Z010-ERRORS.\n011800     DISPLAY 'COB2SUBR: VSAM01 FILE STATUS IS: ' FILE-STATUS.\n011810         CALL 'COBABEND'.\n012000 Z010-EXIT.\n012100     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB2SUB1": {"ttr": 4622, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x05\\x01\\x00\\x15\\x8f\\x01\\x02\\x00O\\x13!\\x00|\\x00|\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-06-06T00:00:00", "modifydate": "2002-01-04T13:21:05", "lines": 124, "newlines": 124, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. SUBR1.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A COBOL II SUBROUTINE IN A RUN UNIT CONTAINING*\n000610*         A MIXTURE OF VS COBOL AND COBOL II PROGRAMS. CALLER   *\n000620*         PASSES A REQUEST CODE FOR OPEN, READ, OR CLOSE, AND   *\n000621*         A RETURN CODE FIELD. FOR READ REQUESTS, THE KEY OF THE*\n000622*         DESIRED RECORD AND AN AREA TO CONTAIN THE RECORD ARE  *\n000623*         ALSO PASSED. IF ANY UNUSUAL CONDITION OCCURS, A       *\n000624*         MESSAGE IS WRITTEN AND COBABEND IS CALLED.            *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT VSAM-FILE ASSIGN TO VSAM01\n001100            ORGANIZATION IS INDEXED\n001110            ACCESS IS RANDOM\n001120            RECORD KEY IS VSAM-KEY\n001130            FILE STATUS IS FILE-STATUS.\n001140*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  VSAM-FILE\n001500     LABEL RECORDS ARE STANDARD.\n001900 01  VSAM-RECORD.\n001910     05  VSAM-KEY                     PIC X(8).\n001920     05  VSAM-DATA                    PIC X(72).\n003000*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                           PIC X(44)\n003300       VALUE 'COB2SUBR WORKING STORAGE SECTION STARTS HERE'.\n003400*\n003500 01  SWITCHES.\n004010     05  FILE-STATUS                  PIC XX.\n004030         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n004050         88  NO-RECORD-FOUND          VALUE '23'.\n004300*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004700*\n004800 LINKAGE SECTION.\n004900 01  REQUEST-CODE                     PIC X.\n005000     88  OPEN-REQUEST                 VALUE 'O'.\n005100     88  READ-REQUEST                 VALUE 'R'.\n005200     88  CLOSE-REQUEST                VALUE 'C'.\n005300*\n007710 01  RECORD-RETURN-AREA               PIC X(80).\n007720*\n007730 01  RECORD-KEY-ARGUMENT              PIC X(8).\n007740*\n007750 01  COMPLETION-CODE                  PIC X.\n007760     88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n007770     88  RECORD-NOT-FOUND             VALUE 'N'.\n007780*\n007800 PROCEDURE DIVISION USING REQUEST-CODE,\n007801                          COMPLETION-CODE,\n007810                          RECORD-RETURN-AREA,\n007820                          RECORD-KEY-ARGUMENT.\n007900*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZE THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT.\n008400     GOBACK.\n008410*\n008420 B010-INITIALIZE.\n008430     MOVE 'Y' TO COMPLETION-CODE.\n008440 B010-EXIT.\n008450     EXIT.\n008500*\n008510 C010-PROCESS.\n008511     IF READ-REQUEST\n008512         PERFORM J010-READ-FILE THRU J010-EXIT\n008513     ELSE IF OPEN-REQUEST\n008514         PERFORM K010-OPEN-FILE THRU K010-EXIT\n008515     ELSE IF CLOSE-REQUEST\n008516         PERFORM Y010-CLOSE-FILE THRU Y010-EXIT\n008517     ELSE\n008518         DISPLAY 'COB2SUBR: INVALID REQUEST CODE FROM CALLER'\n008519         CALL 'COBABEND'.\n008520 C010-EXIT.\n008530     EXIT.\n010800*\n010900 J010-READ-FILE.\n010910     MOVE RECORD-KEY-ARGUMENT TO VSAM-KEY.\n011000     READ VSAM-FILE RECORD INTO RECORD-RETURN-AREA.\n011310     IF SUCCESSFUL-COMPLETION\n011311         ADD 1 TO TOTAL-READ\n011330     ELSE IF NO-RECORD-FOUND\n011331         MOVE 'N' TO COMPLETION-CODE\n011332     ELSE\n011340         DISPLAY 'COB2SUBR: READ FAILED FOR VSAM01 FILE'\n011341         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011400 J010-EXIT.\n011500     EXIT.\n011510*\n011520 K010-OPEN-FILE.\n011530     OPEN INPUT VSAM-FILE.\n011540     IF SUCCESSFUL-COMPLETION\n011550         NEXT SENTENCE\n011560     ELSE\n011570         DISPLAY 'COB2SUBR: OPEN FAILED FOR VSAM01 FILE'\n011571         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011590 K010-EXIT.\n011591     EXIT.\n011600*\n011620 Y010-CLOSE-FILE.\n011630     CLOSE VSAM-FILE.\n011631     IF SUCCESSFUL-COMPLETION\n011632         NEXT SENTENCE\n011633     ELSE\n011634         DISPLAY 'COB2SUBR: CLOSE FAILED FOR VSAM01 FILE'\n011635         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011640 Y010-EXIT.\n011650     EXIT.\n011660*\n011700 Z010-ERRORS.\n011800     DISPLAY 'COB2SUBR: VSAM01 FILE STATUS IS: ' FILE-STATUS.\n011810         CALL 'COBABEND'.\n012000 Z010-EXIT.\n012100     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB2SUB2": {"ttr": 4867, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00D\\x01\\x00\\x15\\x8f\\x01\\x02\\x00O\\x13!\\x00|\\x00|\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2000-06-06T00:00:00", "modifydate": "2002-01-04T13:21:44", "lines": 124, "newlines": 124, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. SUBR2.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. USED AS A COBOL II SUBROUTINE IN A RUN UNIT CONTAINING*\n000610*         A MIXTURE OF VS COBOL AND COBOL II PROGRAMS. CALLER   *\n000620*         PASSES A REQUEST CODE FOR OPEN, READ, OR CLOSE, AND   *\n000621*         A RETURN CODE FIELD. FOR READ REQUESTS, THE KEY OF THE*\n000622*         DESIRED RECORD AND AN AREA TO CONTAIN THE RECORD ARE  *\n000623*         ALSO PASSED. IF ANY UNUSUAL CONDITION OCCURS, A       *\n000624*         MESSAGE IS WRITTEN AND COBABEND IS CALLED.            *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT VSAM-FILE ASSIGN TO VSAM01\n001100            ORGANIZATION IS INDEXED\n001110            ACCESS IS RANDOM\n001120            RECORD KEY IS VSAM-KEY\n001130            FILE STATUS IS FILE-STATUS.\n001140*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  VSAM-FILE\n001500     LABEL RECORDS ARE STANDARD.\n001900 01  VSAM-RECORD.\n001910     05  VSAM-KEY                     PIC X(8).\n001920     05  VSAM-DATA                    PIC X(72).\n003000*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                           PIC X(44)\n003300       VALUE 'COB2SUBR WORKING STORAGE SECTION STARTS HERE'.\n003400*\n003500 01  SWITCHES.\n004010     05  FILE-STATUS                  PIC XX.\n004030         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n004050         88  NO-RECORD-FOUND          VALUE '23'.\n004300*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n004700*\n004800 LINKAGE SECTION.\n004900 01  REQUEST-CODE                     PIC X.\n005000     88  OPEN-REQUEST                 VALUE 'O'.\n005100     88  READ-REQUEST                 VALUE 'R'.\n005200     88  CLOSE-REQUEST                VALUE 'C'.\n005300*\n007710 01  RECORD-RETURN-AREA               PIC X(80).\n007720*\n007730 01  RECORD-KEY-ARGUMENT              PIC X(8).\n007740*\n007750 01  COMPLETION-CODE                  PIC X.\n007760     88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n007770     88  RECORD-NOT-FOUND             VALUE 'N'.\n007780*\n007800 PROCEDURE DIVISION USING REQUEST-CODE,\n007801                          COMPLETION-CODE,\n007810                          RECORD-RETURN-AREA,\n007820                          RECORD-KEY-ARGUMENT.\n007900*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZE THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT.\n008400     GOBACK.\n008410*\n008420 B010-INITIALIZE.\n008430     MOVE 'Y' TO COMPLETION-CODE.\n008440 B010-EXIT.\n008450     EXIT.\n008500*\n008510 C010-PROCESS.\n008511     IF READ-REQUEST\n008512         PERFORM J010-READ-FILE THRU J010-EXIT\n008513     ELSE IF OPEN-REQUEST\n008514         PERFORM K010-OPEN-FILE THRU K010-EXIT\n008515     ELSE IF CLOSE-REQUEST\n008516         PERFORM Y010-CLOSE-FILE THRU Y010-EXIT\n008517     ELSE\n008518         DISPLAY 'COB2SUBR: INVALID REQUEST CODE FROM CALLER'\n008519         CALL 'COBABEND'.\n008520 C010-EXIT.\n008530     EXIT.\n010800*\n010900 J010-READ-FILE.\n010910     MOVE RECORD-KEY-ARGUMENT TO VSAM-KEY.\n011000     READ VSAM-FILE RECORD INTO RECORD-RETURN-AREA.\n011310     IF SUCCESSFUL-COMPLETION\n011311         ADD 1 TO TOTAL-READ\n011330     ELSE IF NO-RECORD-FOUND\n011331         MOVE 'N' TO COMPLETION-CODE\n011332     ELSE\n011340         DISPLAY 'COB2SUBR: READ FAILED FOR VSAM01 FILE'\n011341         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011400 J010-EXIT.\n011500     EXIT.\n011510*\n011520 K010-OPEN-FILE.\n011530     OPEN INPUT VSAM-FILE.\n011540     IF SUCCESSFUL-COMPLETION\n011550         NEXT SENTENCE\n011560     ELSE\n011570         DISPLAY 'COB2SUBR: OPEN FAILED FOR VSAM01 FILE'\n011571         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011590 K010-EXIT.\n011591     EXIT.\n011600*\n011620 Y010-CLOSE-FILE.\n011630     CLOSE VSAM-FILE.\n011631     IF SUCCESSFUL-COMPLETION\n011632         NEXT SENTENCE\n011633     ELSE\n011634         DISPLAY 'COB2SUBR: CLOSE FAILED FOR VSAM01 FILE'\n011635         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011640 Y010-EXIT.\n011650     EXIT.\n011660*\n011700 Z010-ERRORS.\n011800     DISPLAY 'COB2SUBR: VSAM01 FILE STATUS IS: ' FILE-STATUS.\n011810         CALL 'COBABEND'.\n012000 Z010-EXIT.\n012100     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COB3MAIN": {"ttr": 4870, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x01\\x03\\x8f\\x01\\x01\\t?\\t7\\x01s\\x01)\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-02-07T00:00:00", "modifydate": "2001-04-03T09:37:00", "lines": 371, "newlines": 297, "modlines": 0, "user": "BC0THOR"}, "text": "000100 CBL APOST\n000200 IDENTIFICATION DIVISION.\n000300 PROGRAM-ID. COB3MAIN.\n000400 AUTHOR. R THORNTON.\n000500 DATE-WRITTEN.  OCT 1992.\n000600 DATE-COMPILED.\n000700*****************************************************************\n000800*REMARKS. USED AS A COBOL/390 MAIN    PROGRAM IN TESTING MIXED  *\n000900*         RUN UNITS CONTAINING BOTH VS COBOL AND COBOL II       *\n001000*         COMPONENTS. TWO SUBROUTINES ARE CALLED: SUBR2 AND     *\n001100*         SUBR1 (COBOL II AND VS COBOL, RESPECTIVELY).          *\n001200*****************************************************************\n001300 ENVIRONMENT DIVISION.\n001400 INPUT-OUTPUT SECTION.\n001500*\n001600 FILE-CONTROL.\n001700     SELECT INFILE   ASSIGN TO UT-S-INPUT1.\n001800     SELECT PRINT    ASSIGN TO UT-S-PRINT1.\n001900*\n002000 DATA DIVISION.\n002100 FILE SECTION.\n002200*\n002300 FD  INFILE\n002400     LABEL RECORDS ARE STANDARD\n002500     RECORDING MODE IS F\n002600     RECORD CONTAINS 80 CHARACTERS\n002700     BLOCK CONTAINS 0 CHARACTERS.\n002800 01  INFILE-RECORD.\n002900     05  IN-KEY                     PIC X(8).\n003000     05  IN-DATA                    PIC X(72).\n003100*\n003200 FD  PRINT\n003300     LABEL RECORDS ARE OMITTED\n003400     RECORD CONTAINS 133 CHARACTERS\n003500     RECORDING MODE IS F\n003600     BLOCK CONTAINS 0 CHARACTERS\n003700     DATA RECORD IS PRINT-REC.\n003800*\n003900 01  PRINT-REC.\n004000     05  CARR-CTL                    PIC X(1).\n004100     05  PRINT-RECORD.\n004200         10  SUBR-ID                 PIC X(4).\n004300         10  FILLER                  PIC X.\n004400         10  PRINT-KEY               PIC X(8).\n004500         10  PRINT-DATA              PIC X(72).\n004600         10  FILLER                  PIC X(47).\n004700     05 FILLER REDEFINES PRINT-RECORD.\n004800         10  PRINT-LEGEND            PIC X(13).\n004900         10  PRINT-TABLE-DATA        PIC X(13).\n005000         10  FILLER                  PIC X(106).\n005100*\n005200 WORKING-STORAGE SECTION.\n005300 77  FILLER          PIC X(44)\n005400       VALUE 'COB3MAIN WORKING STORAGE SECTION STARTS HERE'.\n005500*\n005600 01  SWITCHES.\n005700     05  END-OF-INPUT-SW              PIC X  VALUE 'N'.\n005800         88  MORE-INFILE-RECORDS      VALUE 'N'.\n005900         88  END-OF-INPUT             VALUE 'Y'.\n006000*\n006100 01  TABLE-AREA.\n006200     05  TABLE-SUB                    PIC S9(4) COMP.\n006300     05  TABLE-DATA-SETUP.\n006400         10                      PIC X(13) VALUE '001P567890123'.\n006500         10                      PIC X(13) VALUE '002P567890123'.\n006600         10                      PIC X(13) VALUE '003P567890123'.\n006700         10                      PIC X(13) VALUE '004R567890123'.\n006800         10                      PIC X(13) VALUE '005T567890123'.\n006900         10                      PIC X(13) VALUE '006D567890123'.\n007000         10                      PIC X(13) VALUE '008F567890123'.\n007100         10                      PIC X(13) VALUE '012E567890123'.\n007200         10                      PIC X(13) VALUE '017TY67890123'.\n007300         10                      PIC X(13) VALUE '019HH67890123'.\n007400         10                      PIC X(13) VALUE '032Y567890123'.\n007500         10                      PIC X(13) VALUE '036T567890123'.\n007600         10                      PIC X(13) VALUE '040E567890123'.\n007700         10                      PIC X(13) VALUE '051R567890123'.\n007800         10                      PIC X(13) VALUE '063L567890123'.\n007900         10                      PIC X(13) VALUE '067P567890123'.\n008000         10                      PIC X(13) VALUE '077O567890123'.\n008100         10                      PIC X(13) VALUE '081E567890123'.\n008200         10                      PIC X(13) VALUE '082W567890123'.\n008300         10                      PIC X(13) VALUE '088M567890123'.\n008400         10                      PIC X(13) VALUE '092N567890123'.\n008500         10                      PIC X(13) VALUE '095B567890123'.\n008600         10                      PIC X(13) VALUE '123R567890123'.\n008700         10                      PIC X(13) VALUE '124Y567890123'.\n008800         10                      PIC X(13) VALUE '125U567890123'.\n008900         10                      PIC X(13) VALUE '126S567890123'.\n009000         10                      PIC X(13) VALUE '127Q567890123'.\n009100         10                      PIC X(13) VALUE '128A567890123'.\n009200         10                      PIC X(13) VALUE '133B567890123'.\n009300         10                      PIC X(13) VALUE '135Y567890123'.\n009400         10                      PIC X(13) VALUE '143E567890123'.\n009500         10                      PIC X(13) VALUE '153W567890123'.\n009600         10                      PIC X(13) VALUE '161S567890123'.\n009700         10                      PIC X(13) VALUE '162H567890123'.\n009800         10                      PIC X(13) VALUE '169J567890123'.\n009900         10                      PIC X(13) VALUE '172L567890123'.\n010000         10                      PIC X(13) VALUE '177D567890123'.\n010100         10                      PIC X(13) VALUE '181S567890123'.\n010200         10                      PIC X(13) VALUE '193Q567890123'.\n010300         10                      PIC X(13) VALUE '223P567890123'.\n010400         10                      PIC X(13) VALUE '323R567890123'.\n010500         10                      PIC X(13) VALUE '423S567890123'.\n010600         10                      PIC X(13) VALUE '523I567890123'.\n010700         10                      PIC X(13) VALUE '623W567890123'.\n010800         10                      PIC X(13) VALUE '723N567890123'.\n010900         10                      PIC X(13) VALUE '823M567890123'.\n011000         10                      PIC X(13) VALUE '923E567890123'.\n011100         10                      PIC X(13) VALUE '977Z567890123'.\n011200         10                      PIC X(13) VALUE '978F567890123'.\n011300         10                      PIC X(13) VALUE '999V567890123'.\n011400     05  TABLE-ENTRY             REDEFINES TABLE-DATA-SETUP\n011500                                 OCCURS 50 TIMES\n011600                                 INDEXED BY TABLE-IX.\n011700         10  TABLE-ARG           PIC XXX.\n011800         10  TABLE-DATA          PIC X(10).\n011900*\n012000 01  SUBROUTINE-PARAMETER-AREAS.\n012100     05  REQUEST-CODE                     PIC X.\n012200         88  OPEN-REQUEST                 VALUE 'O'.\n012300         88  READ-REQUEST                 VALUE 'R'.\n012400         88  CLOSE-REQUEST                VALUE 'C'.\n012500     05  RECORD-RETURN-AREA.\n012600         10  RETURN-KEY                   PIC X(8).\n012700         10  RETURN-DATA.\n012800             15  RETURN-FIRST-FIELD       PIC X(7).\n012900             15  RETURN-FIRST-FIELD9\n013000                 REDEFINES RETURN-FIRST-FIELD PIC S9(7).\n013100             15  RETURN-REST-OF-DATA      PIC X(65).\n013200     05  RECORD-KEY-ARGUMENT              PIC X(8).\n013300     05  COMPLETION-CODE                  PIC X VALUE 'Y'.\n013400         88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n013500         88  RECORD-NOT-FOUND             VALUE 'N'.\n013600*\n013700 01  MISCELLANEOUS-FIELDS.\n013800     05  LINE-NUMBER           PIC S999 COMP-3 VALUE +0.\n013900     05  PAGE-NUMBER           PIC S999 COMP-3 VALUE +0.\n014000     05  ANSWER1               PIC ZZ,ZZ9.999- BLANK ZERO.\n014100     05  ANSWER2               PIC ZZ,ZZ9.999- BLANK ZERO.\n014200     05  BINARY-NUM            PIC S9(4) COMP VALUE +403.\n014300     05  PACKED-NUM            PIC S99V9 COMP-3 VALUE -72.6.\n014400     05  ZONED-NUM             PIC S9(5)V99 VALUE +105.92.\n014500     05  ZONED-BINRCV          PIC S9(3)V9 VALUE +0.\n014600     05  PACKED-BINRCV         PIC S9(5)V9(4) COMP-3 VALUE +0.\n014700     05  ZONED-PKRCV           PIC S9V999 VALUE +0.\n014800     05  BINARY-PKRCV          PIC S9(7) COMP VALUE +0.\n014900     05  PACKED-ZONRCV         PIC S9999V9 COMP-3 VALUE +0.\n015000     05  BINARY-ZONRCV         PIC S9(7)V9(7) COMP VALUE +0.\n015100*\n015200 01  COUNTERS.\n015300     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n015400     05  TOTAL-CNT                    PIC S9(9) COMP-3 VALUE +0.\n015500*\n015600 01  HEAD-LINE-1.\n015700     05  FILLER                       PIC X(25)\n015800                                 VALUE '1PROGRAM NAME: COB3MAIN'.\n015900     05  FILLER                       PIC X(10)\n016000                                      VALUE 'RUN DATE: '.\n016100     05  HEADER-RUN-DATE              PIC 99/99/99.\n016200*    05  HEADER-RUN-DATE              PIC X(8) VALUE SPACE.\n016300     05  FILLER                       PIC X(8) VALUE SPACE.\n016400     05  FILLER                       PIC X(30)\n016500                          VALUE '    REPORT HEADING LINE 1     '.\n016600     05  FILLER                       PIC X(43) VALUE SPACE.\n016700     05  FILLER                       PIC X(6)\n016800                                      VALUE 'PAGE: '.\n016900     05  HEADER-PAGE-NUMBER           PIC ZZ9.\n017000*\n017100 01  DETAIL-REC.\n017200     05  DETAIL-CC                    PIC X VALUE SPACE.\n017300     05  FILLER                       PIC X(17)\n017400                                      VALUE '                 '.\n017500     05  DETAIL-TOTAL-CNT             PIC ZZZ,ZZZ,ZZ9.\n017600     05  FILLER                       PIC X(104) VALUE SPACE.\n017700*\n017800 01  TOTAL-LINE-1.\n017900     05  FILLER                       PIC X(13) VALUE '-'.\n018000     05  FILLER                       PIC X(21)\n018100                                     VALUE 'TOTAL RECORDS READ:'.\n018200     05  FILLER                       PIC X(7) VALUE SPACES.\n018300     05  TOTAL-READ-I                 PIC ZZZ,ZZZ,Z99.\n018400*\n018500 LINKAGE SECTION.\n018600 01  PARM-FIELD-ON-EXECUTE.\n018700     05  LINKAGE-PARM-LENGTH     PIC S9(4) COMP.\n018800     05  IDX-OR-SUB              PIC XXX.\n018900     05  COMMA-1                 PIC X.\n019000     05  PARM-1                  PIC 999.\n019100     05  COMMA-2                 PIC X.\n019200     05  PARM-2                  PIC 999.\n019300     05  COMMA-3                 PIC X.\n019400     05  PARM-3                  PIC 999.\n019500*\n019600 PROCEDURE DIVISION USING PARM-FIELD-ON-EXECUTE.\n019700*\n019800 A000-MAINLINE.\n019900     PERFORM B010-INITIALIZATION THRU B010-EXIT.\n020000     PERFORM C010-PROCESS THRU C010-EXIT UNTIL END-OF-INPUT.\n020100     PERFORM D010-MATRIX THRU D010-EXIT.\n020200     PERFORM Z030-END-OF-JOB THRU Z030-EXIT.\n020300     GOBACK.\n020400*\n020500 B010-INITIALIZATION.\n020600     MOVE 'O' TO REQUEST-CODE.\n020700     CALL 'COBVSUBR' USING REQUEST-CODE, COMPLETION-CODE.\n020800     CALL 'COB2SUBR' USING REQUEST-CODE, COMPLETION-CODE.\n020900     MOVE 'R' TO REQUEST-CODE.\n021000     OPEN INPUT  INFILE, OUTPUT PRINT.\n021100     ACCEPT HEADER-RUN-DATE FROM DATE.\n021200*    MOVE CURRENT-DATE TO HEADER-RUN-DATE.\n021300     PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n021400 B010-EXIT.\n021500     EXIT.\n021600*\n021700 C010-PROCESS.\n021800     PERFORM E010-READ-INFILE THRU E010-EXIT.\n021900     IF END-OF-INPUT GO TO C010-EXIT.\n022000     MOVE SPACES TO PRINT-RECORD.\n022100     MOVE IN-KEY TO PRINT-KEY.\n022200     MOVE IN-KEY TO RECORD-KEY-ARGUMENT.\n022300     CALL 'COBVSUBR' USING REQUEST-CODE,\n022400                           COMPLETION-CODE,\n022500                           RECORD-RETURN-AREA,\n022600                           RECORD-KEY-ARGUMENT.\n022700     IF SUCCESSFUL-OPERATION\n022800         MOVE 'COBV' TO SUBR-ID\n022900         MOVE RECORD-RETURN-AREA TO PRINT-DATA\n023000     ELSE\n023100         MOVE 'V-RECORD FOR THIS KEY NOT FOUND' TO PRINT-DATA.\n023200     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n023300     IF RETURN-FIRST-FIELD IS NUMERIC\n023400         COMPUTE ANSWER1 = (RETURN-FIRST-FIELD9 - BINARY-NUM) *\n023500            (PACKED-NUM / ZONED-NUM).\n023600     CALL 'COB2SUBR' USING REQUEST-CODE,\n023700                           COMPLETION-CODE,\n023800                           RECORD-RETURN-AREA,\n023900                           RECORD-KEY-ARGUMENT.\n024000     IF SUCCESSFUL-OPERATION\n024100         MOVE 'COB2' TO SUBR-ID\n024200         MOVE RECORD-RETURN-AREA TO PRINT-DATA\n024300     ELSE\n024400         MOVE '2-RECORD FOR THIS KEY NOT FOUND' TO PRINT-DATA.\n024500     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n024600     IF RETURN-FIRST-FIELD IS NUMERIC\n024700         COMPUTE ANSWER2 = (RETURN-FIRST-FIELD9 + BINARY-NUM) *\n024800            (PACKED-NUM / ZONED-NUM)\n024900     ELSE\n025000         MOVE BINARY-NUM TO ZONED-BINRCV\n025100         MOVE BINARY-NUM TO PACKED-BINRCV\n025200         MOVE PACKED-NUM TO ZONED-PKRCV\n025300         MOVE PACKED-NUM TO BINARY-PKRCV\n025400         MOVE ZONED-NUM TO PACKED-ZONRCV\n025500         MOVE ZONED-NUM TO BINARY-ZONRCV.\n025600 C010-EXIT.\n025700     EXIT.\n025800*\n025900 D010-MATRIX.\n026000     IF LINKAGE-PARM-LENGTH NOT = 15\n026100         DISPLAY 'INVALID PARM LENGTH, NO D010-MATRIX PROCESSING'\n026200         GO TO D010-MESSAGE-2.\n026300     IF IDX-OR-SUB = 'IDX' OR 'SUB'\n026400         NEXT SENTENCE ELSE\n026500         DISPLAY 'INVALID IDX-OR-SUB, NO D010-MATRIX PROCESSING'\n026600         GO TO D010-MESSAGE-2.\n026700     IF PARM-1 NOT NUMERIC\n026800         DISPLAY 'PARM-1 NOT NUMERIC, NO D010-MATRIX PROCESSING'\n026900         GO TO D010-MESSAGE-2.\n027000     IF PARM-2 NOT NUMERIC\n027100         DISPLAY 'PARM-2 NOT NUMERIC, NO D010-MATRIX PROCESSING'\n027200         GO TO D010-MESSAGE-2.\n027300     IF PARM-3 NOT NUMERIC\n027400         DISPLAY 'PARM-3 NOT NUMERIC, NO D010-MATRIX PROCESSING'\n027500         GO TO D010-MESSAGE-2.\n027600     IF IDX-OR-SUB = 'SUB'\n027700         MOVE PARM-1 TO TABLE-SUB\n027800         MOVE 'PARM-1 DATA:' TO PRINT-LEGEND\n027900         MOVE TABLE-DATA(TABLE-SUB) TO PRINT-TABLE-DATA\n027910         PERFORM M010-PRINT-LINE THRU M010-EXIT\n027920         MOVE PARM-2 TO TABLE-SUB\n027930         MOVE 'PARM-2 DATA:' TO PRINT-LEGEND\n027940         MOVE TABLE-DATA(TABLE-SUB) TO PRINT-TABLE-DATA\n027950         PERFORM M010-PRINT-LINE THRU M010-EXIT\n027960         MOVE PARM-3 TO TABLE-SUB\n027970         MOVE 'PARM-3 DATA:' TO PRINT-LEGEND\n027980         MOVE TABLE-DATA(TABLE-SUB) TO PRINT-TABLE-DATA\n027990         PERFORM M010-PRINT-LINE THRU M010-EXIT\n027991         GO TO D010-EXIT\n027992     ELSE\n027993         SET TABLE-IX TO PARM-1\n027994         MOVE 'PARM-1 DATA:' TO PRINT-LEGEND\n027995         MOVE TABLE-DATA(TABLE-SUB) TO PRINT-TABLE-DATA\n027996         PERFORM M010-PRINT-LINE THRU M010-EXIT\n027997         SET TABLE-IX TO PARM-2\n027999         MOVE 'PARM-2 DATA:' TO PRINT-LEGEND\n028000         MOVE TABLE-DATA(TABLE-SUB) TO PRINT-TABLE-DATA\n028001         PERFORM M010-PRINT-LINE THRU M010-EXIT\n028002         SET TABLE-IX TO PARM-3\n028004         MOVE 'PARM-3 DATA:' TO PRINT-LEGEND\n028005         MOVE TABLE-DATA(TABLE-SUB) TO PRINT-TABLE-DATA\n028006         PERFORM M010-PRINT-LINE THRU M010-EXIT\n028007         GO TO D010-EXIT.\n028010 D010-MESSAGE-2.\n028100         DISPLAY 'PARM FORMAT: TTT,999,999,999'.\n028200         DISPLAY 'WHERE TTT = \"SUB\" OR \"IDX\"'.\n028300         DISPLAY '      999 = THREE DECIMAL DIGITS'.\n028400 D010-EXIT.\n028500     EXIT.\n028600*\n028700 E010-READ-INFILE.\n028800     READ INFILE\n028900         AT END MOVE 'Y' TO END-OF-INPUT-SW.\n029000     IF MORE-INFILE-RECORDS\n029100         ADD 1 TO TOTAL-READ.\n029200 E010-EXIT.\n029300     EXIT.\n029400*\n029500 G010-WRITE-COUNTS.\n029600     PERFORM K010-PRINT-DETAIL THRU K010-EXIT.\n029700     MOVE TOTAL-READ TO TOTAL-READ-I.\n029800     MOVE TOTAL-LINE-1 TO PRINT-REC.\n029900     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n030000 G010-EXIT.\n030100     EXIT.\n030200*\n030300 K010-PRINT-DETAIL.\n030400     MOVE TOTAL-CNT TO DETAIL-TOTAL-CNT.\n030500     MOVE DETAIL-REC TO PRINT-REC.\n030600     PERFORM M010-PRINT-LINE THRU M010-EXIT.\n030700 K010-EXIT.\n030800     EXIT.\n030900*\n031000 M010-PRINT-LINE.\n031100     WRITE PRINT-REC.\n031200     ADD 1 TO LINE-NUMBER.\n031300     MOVE SPACES TO PRINT-REC.\n031400     IF LINE-NUMBER > 56\n031500         PERFORM Q010-PRINT-HEADING THRU Q010-EXIT.\n031600 M010-EXIT.\n031700     EXIT.\n031800*\n031900 Q010-PRINT-HEADING.\n032000     ADD 1 TO PAGE-NUMBER.\n032100     MOVE PAGE-NUMBER TO HEADER-PAGE-NUMBER.\n032200     MOVE HEAD-LINE-1 TO PRINT-REC.\n032300     WRITE PRINT-REC.\n032400     MOVE 2 TO LINE-NUMBER.\n032500     MOVE SPACES TO PRINT-REC.\n032600     MOVE '0' TO CARR-CTL.\n032700 Q010-EXIT.\n032800     EXIT.\n032900*\n033000 Z030-END-OF-JOB.\n033100     PERFORM G010-WRITE-COUNTS THRU G010-EXIT.\n033200     CLOSE INFILE, PRINT.\n033300     MOVE 'C' TO REQUEST-CODE.\n           SUBTRACT 5 FROM PARM-1.\n           ADD 5 TO PARM-3.\n033400     CALL 'COBVSSR' USING REQUEST-CODE, COMPLETION-CODE,\n                PARM-FIELD-ON-EXECUTE.\n           SUBTRACT 5 FROM PARM-1.\n           ADD 5 TO PARM-3.\n033500     CALL 'COB2SSR' USING REQUEST-CODE, COMPLETION-CODE,\n                PARM-FIELD-ON-EXECUTE.\n033600     DISPLAY '************************************************'.\n033700     DISPLAY '*     GOOD COMPLETION. ANSWER1 IS: ' ANSWER1 ' *'.\n033800     DISPLAY '*     GOOD COMPLETION. ANSWER2 IS: ' ANSWER2 ' *'.\n033900     DISPLAY '************************************************'.\n034000 Z030-EXIT.\n034100     EXIT.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "CONTINU": {"ttr": 4877, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x004\\x01\\x011o\\x01\\x02\\x00O\\x13\"\\x00\\x1e\\x00\\x18\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-11-12T00:00:00", "modifydate": "2002-01-04T13:22:34", "lines": 30, "newlines": 24, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    SKELETON.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST PROGRAM TO ANALYZE CONTINUATION LINE USAGE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900 DATA DIVISION.\n001000 FILE SECTION.\n001100 WORKING-STORAGE SECTION.\n001200 77  FILLER PIC X(72)  VALUE 'CONTINU WORKING STORAGE BEGINS HERE'\n001300     .\n001400 01  GENERAL-AREAS.\n001500     05  CONTINUED-WITH-DASH PIC X(72) VALUE 'THIS IS A CONTINUED\n001600-    'NON-NUMERIC LITERAL WITH A DASH IN COLUMN 7.'.\n001700     05  PERIOD-IN-COL-72                        PIC S9(8) COMP-3.\n001800     05  PERIOD-BEFORE-COL-72                   PIC S9(8) COMP-3.\n002300\n002400 PROCEDURE DIVISION.\n002500\n002600 A100-EXECUTIVE-CONTROL.\n002700     PERFORM\n002800     D100-DISPLAY\n002900     THRU\n003000     D100-EXIT.\n003100     GOBACK.\n003200 D100-DISPLAY.\n003300     DISPLAY CONTINUED-WITH-DASH.\n003400 D100-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COPYERRS": {"ttr": 5121, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00V\\x00\\x91\\x11?\\x01\\x02\\x00O\\x13#\\x00\\x1d\\x00\\x9d\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "1991-04-23T00:00:00", "modifydate": "2002-01-04T13:23:56", "lines": 29, "newlines": 157, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  COPYERRS.\n000300 AUTHOR.  R THORNTON.\n000400 INSTALLATION.  BLUE CROSS AND BLUE SHIELD OF VIRGINIA.\n000500 DATE-WRITTEN.  NOV, 1987.\n000600 DATE-COMPILED.\n000700****************************************************************\n000800*          THE PURPOSE OF THIS PROGRAM IS TO DETERMINE WHY A   *\n000900*          PROGRAM GETS AN ERROR ON A COPY BOOK.               *\n001000****************************************************************\n001100 ENVIRONMENT DIVISION.\n001200 DATA DIVISION.\n001300 WORKING-STORAGE SECTION.\n001400 77  FILLER                     PIC X(36)  VALUE\n001500     'COPYERRS WORKING STORAGE BEGINS HERE'.\n001600 01  MISCELLANEOUS-WORK.\n001700     05  COMPILE-DATE           PIC X(20).\n001800     05  FIRST-TIME-SWITCH      PIC X VALUE ' '.\n001900 01  MISC-WORK.\n002000     05  FILLER                 PIC X(20).\n002100 01  CLAIMANT-SEGMENT COPY CSCLMT00.\n002200 PROCEDURE DIVISION.\n002300 A100-MAINLINE.\n002400     PERFORM B100-INITIALIZATION THRU B100-EXIT.\n002500     GOBACK.\n002600 B100-INITIALIZATION.\n002700     MOVE '1' TO FIRST-TIME-SWITCH.\n002800 B100-EXIT.\n002900     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COPYFILE": {"ttr": 5123, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x14\\x00\\x94\\x01\\x1f\\x01\\x02\\x00O\\x13$\\x00B\\x00@\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-01-11T00:00:00", "modifydate": "2002-01-04T13:24:14", "lines": 66, "newlines": 64, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    COPYFILE.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. PROGRAM TO COPY INPUT1 TO OUTPUT1 USING FILES WITH\n000410*         NO BLOCK CONTAINS CLAUSE IN ORDER TO TEST A REPORTED\n000420*         EXECUTION TIME FAILURE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FILE ASSIGN TO INPUT1.\n000730     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  INPUT-FILE\n000821     RECORDING MODE IS F\n000830     LABEL RECORDS ARE STANDARD.\n000840 01  INPUT-RECORD.                                                      10\n000850   05  FIELD-1               PIC XX.                                    20\n000860   05  FIELD-2               PIC X(70).                                 30\n000870   05  FILLER                PIC X(8).                                  40\n000880 FD  OUTPUT-FILE\n000881     RECORDING MODE IS F\n000890     LABEL RECORDS ARE STANDARD.\n000891 01  OUTPUT-RECORD.                                                     10\n000892   05  OUT-FIELD-1           PIC XX.                                    20\n000893   05  OUT-FIELD-2           PIC X(70).                                 30\n000894   05  FILLER                PIC X(8).                                  40\n000900 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'COPYFILE WORKING STORAGE BEGINS HERE'.\n001101\n001110 01  MISCELLANEOUS-AREAS.\n001200     05  EOF-INPUT-SWITCH    PIC X VALUE 'N'.\n001300         88  MORE-RECORDS    VALUE 'N'.\n001400         88  EOF-INPUT       VALUE 'Y'.\n001600\n001700 PROCEDURE DIVISION.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n002000     PERFORM A100-INITIALIZATION.\n002100     PERFORM B100-MAINLINE-PROCESSING UNTIL EOF-INPUT.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002500 A100-INITIALIZATION.\n002600     OPEN INPUT INPUT-FILE\n002610          OUTPUT OUTPUT-FILE.\n002700\n002800 B100-MAINLINE-PROCESSING.\n002900     PERFORM C100-READ-INPUT.\n003000     IF MORE-RECORDS\n003010         PERFORM D100-WRITE-OUTPUT.\n003020\n003030 C100-READ-INPUT.\n003040     IF EOF-INPUT\n003050         NEXT SENTENCE\n003060     ELSE\n003070         READ INPUT-FILE\n003080             AT END MOVE 'Y' TO EOF-INPUT-SWITCH.\n003090\n003091 D100-WRITE-OUTPUT.\n003092     WRITE OUTPUT-RECORD FROM INPUT-RECORD.\n003093\n003100 Z100-END-OF-PROCESSING.\n003200     CLOSE INPUT-FILE, OUTPUT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "COPYTEST": {"ttr": 5125, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00#\\x00\\x91\\x07\\x8f\\x01\\x02\\x00O\\x13$\\x00\\xbf\\x00!\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-03-19T00:00:00", "modifydate": "2002-01-04T13:24:23", "lines": 191, "newlines": 33, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.  COPYTEST.                                                 00\n000300 AUTHOR.  R THORNTON.                                                   00\n000400 INSTALLATION.  BLUE CROSS AND BLUE SHIELD OF VIRGINIA.                 00\n000500 DATE-WRITTEN.  NOV, 1987.                                              00\n000600 DATE-COMPILED.                                                         00\n000700****************************************************************        00\n000800*          THE PURPOSE OF THIS PROGRAM IS TO DETECT ERRORS IN  *        00\n000900*          COBOL COPY BOOKS, AND TO USE COBOL TO COMPUTE FIELD *        00\n001000*          AND RECORD LENGTHS.                                 *        00\n001100*                                                              *        00\n001200*          THE RECORD DESCRIPTION TO BE CHECKED IS PUT INTO THE*        00\n001300*          LINKAGE SECTION, WHERE THE DISPLACEMENTS WILL BE    *        00\n001400*          RELATIVE TO ZERO.                                   *        00\n001500****************************************************************        00\n001600 ENVIRONMENT DIVISION.                                                  00\n001700 DATA DIVISION.                                                         00\n001800 WORKING-STORAGE SECTION.                                               00\n001900 77  FILLER                     PIC X(36)  VALUE                        00\n002000     'COPYTEST WORKING STORAGE BEGINS HERE'.                            00\n002100 01  MISCELLANEOUS-WORK.                                                00\n002200     05  COMPILE-DATE           PIC X(20).                              00\n002300     05  FIRST-TIME-SWITCH      PIC X VALUE ' '.                        00\n002400 LINKAGE SECTION.                                                       00\n002500*****************************************************************\n002600*                                                               *\n002700*                    COPY MEMBER HDYY241K                       *\n002800*                                                               *\n002900*                NASCO ID CARD EXTRACT RECORD.                  *\n003000*                                                               *\n003100*                                                               *\n003200*                  M O D I F I C A T I O N S                    *\n003300*                  -------------------------                    *\n003400*                                                               *\n003500*     T. MARKER         ADD NUMBER OF PERSONS TO THE FILE       *\n003600*     ND000177DI        ALSO ADD G.M. FIELDS THAT ARE USED.     *\n003700*                                                               *\n003800*   CINDY ATANASOFF     ADD PAY-LOC (EMPIRE FIELD FROM COV SEG) *\n003900*     NT000836MX        USED FOR NEW CT GROUPS (FROM EMPIRE).   *\n004000*                                                               *\n004100*   GARY BRIGGS         ADDED ID CARD REASON CODE TO PASS A     *\n004200*     NM005951MX        REASON FOR THE ID CARD GENERATION BACK  *\n004300*                       TO THE GROUP.                           *\n004400*                                                               *\n004500*   JOHN WOODS          ADDED POS INFORMATION TO THE END OF THE *\n004600*    NE016049           RECORD.  RECORD SIZE INCREASED TO 918.  *\n004700*    08-27-90                                                   *\n004800*                                                               *\n004900*   TRACY SANDERS       CHANGED PROVIDER NAME LENGTH TO TWENTY  *\n005000*    BE016069           EIGHT BYTES INSTEAD OF TWENTY SIX       *\n005100*    11-26-90           BYTES.  ADDED MEMBER GROUP LEVEL TO     *\n005200*                       CLEAR OUT MEMBER FIELDS.                *\n005300*                                                               *\n005400*****************************************************************\n005500     SKIP2\n005600 01  NASCO-ID-REC-241-MD                   PIC  X(936).\n005700     SKIP1\n005800 01  ID-HEADER-RECORD\n005900     REDEFINES NASCO-ID-REC-241-MD.\n006000     SKIP1\n006100     05  ID-HEADER-CONSTANT                PIC  X(1).\n006200     05  ID-HEADER-CURR-DATE.\n006300         10 ID-HDR-MONTH                   PIC  X(02).\n006400         10 FILLER                         PIC  X(1).\n006500         10 ID-HDR-DAY                     PIC  X(02).\n006600         10 FILLER                         PIC  X(1).\n006700         10 ID-HDR-YEAR                    PIC  X(02).\n006800     05  ID-HEADER-DESCRIPT                PIC  X(31).\n006900\n007000 01  ID-INFORMATION-BODY\n007100     REDEFINES NASCO-ID-REC-241-MD.\n007200     SKIP1\n007300     03  WHOLE-RPT-CODE-241-MD.\n007400         10  FRST-DIGIT-RPT-CD-241-MD      PIC  X(1).\n007500         10  RPT-CODE-241-MD               PIC  X(02).\n007600     03  CONTROL-PLAN-CODE-241-MD          PIC S9(04) COMP.\n007700     03  ID-BODY-LESS-PLAN.\n007800         05  ID-FORM-COV-241-MD            PIC  X(01).\n007900         05  ID-FORM-PCP-1-COV-241-MD REDEFINES ID-FORM-COV-241-MD\n008000                                           PIC  X(01).\n008100         05  SORT-KEY-241-MD               PIC  X(44).\n008200         05  PROC-TYPE-CS-241-MD           PIC  X(02).\n008300         05  GROUP-SEC-CS-241-MD.\n008400             10  GROUP-CS-241-MD           PIC  X(09).\n008500             10  SEC-CS-241-MD             PIC  X(04).\n008600         05  BASE-EXT-ID-CS-241-MD.\n008700             10  BASE-ID-CS-241-MD         PIC  X(12).\n008800             10  EXT-ID-CS-241-MD          PIC  X(1).\n008900         05  SUB-NAME-ID-CS-241-MD         PIC  X(30).\n009000         05  COOP-PLAN-CD-241-MD           PIC  X(03).\n009100         05  PKG-CODE-241-MD               PIC  X(01).\n009200         05  TYPE-CONTRACT-241-MD          PIC  X(01).\n009300         05  EFF-DT-CS-241-MD              PIC  9(05).\n009400         05  HOME-PLAN-CD-241-MD           PIC  X(03).\n009500         05  BILL-REL-241-MD               PIC  X(1).\n009600         05  EMPLE-DEPT-241-MD             PIC  X(09).\n009700         05  EMP-NUM-CS-241-MD.\n009800             10  EMP-NUM-BASE-CS-241-MD    PIC  X(12).\n009900             10  EMP-NUM-EXT-CS-241-MD     PIC  X(1).\n010000         05  GRP-TYPE-CS-241-MD            PIC  X(02).\n010100         05  MAX-AGE-REG-DEP-241-MD        PIC  X(02).\n010200         05  MAX-AGE-STU-DEP-241-MD        PIC  X(02).\n010300         05  COVERAGE-CD-241-MD.\n010400             10  BC-COV-CD-241-MD          PIC  X(03).\n010500             10  BS-COV-CD-241-MD          PIC  X(03).\n010600             10  MM-COV-CD-241-MD          PIC  X(03).\n010700             10  DG-COV-CD-241-MD          PIC  X(03).\n010800             10  DN-COV-CD-241-MD          PIC  X(03).\n010900         05  DENTAL-DED-241-MD             PIC  X(1).\n011000         05  DRUG-DEDUCT-CD-241-MD         PIC S9(04) COMP.\n011100         05  DRUG-DEDUCT-MSG-241-MD        PIC  X(30).\n011200         05  ID-CD-TOP-241-MD              PIC  X(01).\n011300         05  ID-MSG-TOP-241-MD             PIC  X(30).\n011400         05  ID-CD-BOT-241-MD              PIC  X(01).\n011500         05  ID-MSG-BOT-241-MD             PIC  X(30).\n011600         05  ID-CD-CAR-STRP-TOP-241-MD     PIC S9(04) COMP.\n011700         05  ID-MSG-CAR-STRP-TOP-241-MD    PIC  X(30).\n011800\n011900         05  ID-CD-CAR-STRP-BOT-241-MD     PIC S9(04) COMP.\n012000         05  ID-MSG-CAR-STRP-BOT-241-MD    PIC  X(30).\n012100         05  HMO-PPO-INDICATOR-241-MD      PIC  X(1).\n012200         05  SORT-CODE-241-MD              PIC  X(01).\n012300         05  MATRL-DIST-CS-241-MD          PIC  X(1).\n012400         05  SUB-ADDR-241-MD.\n012500             10  SUB-ADDRESS-CS-241-MD     PIC  X(90).\n012600             10  ADDRESS-FILLER-CS-241-MD  PIC  X(08).\n012700         05  SUB-ZIP-CODE-CS-241-MD        PIC  X(09).\n012800         05  GRP-NAME-CS-241-MD            PIC  X(30).\n012900         05  GRP-ADDR-CS-241-MD.\n013000             10  GRP-ADDRESS-241-MD        PIC  X(98).\n013100             10  GRP-STATE-CS-241-MD       PIC  X(02).\n013200         05  CENT-CERT-PFX-241-MD          PIC  X(03).\n013300         05  EXP-DT-CS-241-MD              PIC  9(05).\n013400         05  GRP-ZIP-CODE-241-MD           PIC  9(09).\n013500         05  LOC-INDICATORS-241-MD         PIC  X(05).\n013600         05  NUMBER-OF-PERSONS-241-MD      PIC  9(02).\n013700         05  OLD-PAY-LOC-241-MD            PIC  X(04).\n013800         05  ID-GENERATION-RSN-241-MD      PIC  X(03).\n013900         05  CYCLE-DATE-YR-MM-DD-241-MD    PIC  9(07) COMP-3.\n014000         05  FILLER                        PIC  X(03).\n014100         05  LETTER-CODE-241-MD            PIC  X(02).\n014200         05  LTR-CODE-PCP-1-241-MD REDEFINES LETTER-CODE-241-MD\n014300                                           PIC  X(02).\n014400         05  MEMBER-LEVEL-INFO-241-MD.\n014500             10  MBR-NAME-LFM-241-MD       PIC  X(30).\n014600             10  MEMBER-ID-NUM-241-MD      PIC  X(02).\n014700             10  PCP-1-NUMBER-241-MD       PIC  X(15).\n014800             10  PCP-1-NAME-241-MD         PIC  X(28).\n014900             10  PCP-1-PHONE-241-MD        PIC  X(12).\n015000             10  PCP-1-SECOND-NAME-241-MD  PIC  X(28).\n015100             10  PCP-2-NUMBER-241-MD       PIC  X(15).\n015200             10  PCP-2-NAME-241-MD         PIC  X(28).\n015300             10  PCP-2-PHONE-241-MD        PIC  X(12).\n015400             10  PCP-2-SECOND-NAME-241-MD  PIC  X(28).\n015500             10  PCP-3-NUMBER-241-MD       PIC  X(15).\n015600             10  PCP-3-NAME-241-MD         PIC  X(28).\n015700             10  PCP-3-PHONE-241-MD        PIC  X(12).\n015800             10  PCP-3-SECOND-NAME-241-MD  PIC  X(28).\n015900             10  BE-1-NUMBER-241-MD        PIC  X(15).\n016000             10  BE-2-NUMBER-241-MD        PIC  X(15).\n016100             10  BE-3-NUMBER-241-MD        PIC  X(15).\n016200\n016300         05  ID-FORM-PCP-2-COV-241-MD      PIC  X(01).\n016400         05  ID-FORM-PCP-3-COV-241-MD      PIC  X(01).\n016500         05  LTR-CODE-PCP-2-241-MD         PIC  X(02).\n016600         05  LTR-CODE-PCP-3-241-MD         PIC  X(02).\n016700     SKIP1\n016800 01  ID-TRAILER-RECORD\n016900     REDEFINES NASCO-ID-REC-241-MD.\n017000     SKIP1\n017100     05 ID-TRAILER-CONSTANT                PIC  X(01).\n017200     05 ID-TRAILER-FORM-COUNT\n017300          OCCURS 30 TIMES\n017400            INDEXED BY INDX-TRLR.\n017500        10  ID-TRLR-ID-FORM-NUM            PIC  X(01).\n017600        10  ID-TRLR-FORM-CNT               PIC S9(05) COMP-3.\n017700     SKIP1\n017800 01  ID-LAST-CALL-TRLR\n017900     REDEFINES NASCO-ID-REC-241-MD.\n018000     SKIP1\n018100     05  FILLER                            PIC  X(08).\n018200     05  NASCO-ID-LAST-CALL-SWITCH         PIC  X(38).\n018300         88  ID-LAST-CALL-241-MD       VALUE HIGH-VALUES.\n018400 PROCEDURE DIVISION.                                                    00\n018500 A100-MAINLINE.                                                         00\n018600     PERFORM B100-INITIALIZATION THRU B100-EXIT.                        00\n018700     GOBACK.                                                            00\n018800 B100-INITIALIZATION.                                                   00\n018900     MOVE '1' TO FIRST-TIME-SWITCH.                                     00\n019000 B100-EXIT.                                                             00\n019100     EXIT.                                                              00\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CRE8VSAM": {"ttr": 5129, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x03\\x00\\x92(?\\x01\\x02\\x00O\\x13%\\x00h\\x00f\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1992-10-09T00:00:00", "modifydate": "2002-01-04T13:25:03", "lines": 104, "newlines": 102, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. CRE8VSAM.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. WRITES DATA TO AN EMPTY VSAM DATASET.                 *\n000630*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000810*\n000900 FILE-CONTROL.\n001000     SELECT VSAM-FILE ASSIGN TO VSAM01\n001100            ORGANIZATION IS INDEXED\n001110            ACCESS IS SEQUENTIAL\n001120            RECORD KEY IS VSAM-KEY\n001130            FILE STATUS IS FILE-STATUS.\n001131     SELECT SEQNTL-FILE ASSIGN TO SEQNTL01.\n001140*\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001310*\n001400 FD  VSAM-FILE\n001500     LABEL RECORDS ARE STANDARD.\n001900 01  VSAM-RECORD.\n001910     05  VSAM-KEY                     PIC X(8).\n001920     05  VSAM-DATA                    PIC X(72).\n001921*\n001930 FD  SEQNTL-FILE\n001931     BLOCK CONTAINS 0 RECORDS\n001940     LABEL RECORDS ARE STANDARD.\n001950 01  SEQNTL-RECORD.\n001960     05  SEQNTL-KEY                   PIC X(8).\n001970     05  SEQNTL-DATA                  PIC X(72).\n003000*\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                           PIC X(44)\n003300       VALUE 'CRE8VSAM WORKING STORAGE SECTION STARTS HERE'.\n003400*\n003500 01  SWITCHES.\n004010     05  FILE-STATUS                  PIC XX.\n004030         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n004050         88  NO-RECORD-FOUND          VALUE '23'.\n004060     05  EOF-SWITCH                   PIC X  VALUE 'N'.\n004070         88  NO-MORE-RECORDS          VALUE 'Y'.\n004090         88  MORE-RECORDS             VALUE 'N'.\n004300*\n004400 01  COUNTERS.\n004500     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n007780*\n007800 PROCEDURE DIVISION.\n007900*\n008000 A000-MAINLINE.\n008100     PERFORM B010-INITIALIZE THRU B010-EXIT.\n008200     PERFORM C010-PROCESS THRU C010-EXIT\n008300         UNTIL NO-MORE-RECORDS.\n008310     PERFORM Y010-TERMINATE THRU Y010-EXIT.\n008400     GOBACK.\n008410*\n008420 B010-INITIALIZE.\n008430     OPEN INPUT SEQNTL-FILE, OUTPUT VSAM-FILE.\n008440 B010-EXIT.\n008450     EXIT.\n008500*\n008510 C010-PROCESS.\n008511     PERFORM J010-READ-FILE THRU J010-EXIT.\n008512     IF MORE-RECORDS\n008514         MOVE SEQNTL-RECORD TO VSAM-RECORD\n008515         PERFORM K010-WRITE-FILE THRU K010-EXIT.\n008524 C010-EXIT.\n008530     EXIT.\n010800*\n010900 J010-READ-FILE.\n010901     READ SEQNTL-FILE  AT END MOVE 'Y' TO EOF-SWITCH.\n010902     IF MORE-RECORDS ADD 1 TO TOTAL-READ.\n011400 J010-EXIT.\n011500     EXIT.\n011510*\n011520 K010-WRITE-FILE.\n011530     WRITE VSAM-RECORD.\n011540     IF SUCCESSFUL-COMPLETION\n011550         NEXT SENTENCE\n011560     ELSE\n011570         DISPLAY 'CRE8VSAM: WRITE FAILED FOR VSAM01 FILE'\n011571         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011590 K010-EXIT.\n011591     EXIT.\n011600*\n011620 Y010-TERMINATE.\n011621     DISPLAY TOTAL-READ ' RECORDS PROCESSED'.\n011630     CLOSE VSAM-FILE, SEQNTL-FILE.\n011631     IF SUCCESSFUL-COMPLETION\n011632         NEXT SENTENCE\n011633     ELSE\n011634         DISPLAY 'CRE8VSAM: CLOSE FAILED FOR VSAM01 FILE'\n011635         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011640 Y010-EXIT.\n011650     EXIT.\n011660*\n011700 Z010-ERRORS.\n011800     DISPLAY 'CRE8VSAM: VSAM01 FILE STATUS IS: ' FILE-STATUS.\n011810         CALL 'COBABEND'.\n012000 Z010-EXIT.\n012100     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CTLBLOX2": {"ttr": 5132, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x12\\x00\\x93\\x07\\x0f\\x01\\x02\\x00O\\x13%\\x00g\\x00g\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "2002-01-04T13:25:12", "lines": 103, "newlines": 103, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  CTLBLOX2.\n000300 AUTHOR.  R THORNTON.\n000400 INSTALLATION.  BLUE CROSS AND BLUE SHIELD OF VIRGINIA.\n000500 DATE-WRITTEN.  NOV, 1987.\n000600 DATE-COMPILED.\n000700****************************************************************\n000800* TEST COBOL'S ABILITY TO ACCESS STORAGE IN UNUSUAL LOCATIONS, *\n000900* IN ORDER TO OBTAIN INFORMATION FROM CONTROL BLOCKS WITHOUT   *\n001000* HAVING TO RESORT TO USE OF ASSEMBLY LANGUAGE SUBROUTINES.    *\n001100*                                                              *\n001200* THIS VERSION ACCESSES THE CVT VIA A (COBOL) SUBROUTINE CALLED*\n001300* READCVT, RATHER THAN BY MOVING THE FIELD BYTE-BY-BYTE AS IS  *\n001400* DONE IN THE PROGRAM CTRLBLOX.                                *\n001500*                                                              *\n001600* THE FOLLOWING CHARACTERISTICS OF IBM COBOL ARE USED FOR THIS *\n001700* TECHNIQUE:                                                   *\n001800*                                                              *\n001900*   1. IN LINKAGE SECTION, BLL CELLS FOR EACH RECORD ARE SET TO*\n002000*      ZERO, AND ARE CHANGED ONLY WHEN ACCEPTED BY THE USING   *\n002100*      PARAMETER ON THE PROCEDURE DIVISION, OR AN ENTRY STATE- *\n002200*      MENT. THE RECORD MEMORY-BYTES IS NEVER RECEIVED, AND    *\n002300*      WILL THEREFORE ALWAYS BE LOCATED AT ABSOLUTE LOCATION   *\n002400*      ZERO, THE BEGINNING OF MEMORY.                          *\n002500*                                                              *\n002600*   2. SUBSCRIPT VALUES ARE NOT CHECKED FOR OUT-OF-RANGE VALUES*\n002700*      IN NORMAL OPERATION, THEREFORE ANY VALUE AT ALL CAN BE  *\n002800*      USED IN THE INDEX BYTE-NBR. BECAUSE OF THIS, ANY BYTE IN*\n002900*      MEMORY CAN BE ACCESSED BY PUTTING ITS ADDRESS IN THE    *\n003000*      INDEX FIELD BYTE-NBR, AND ACCESSING IT BY REFERRING TO  *\n003100*      MEMORY-BYTE (BYTE-NBR).                                 *\n003200*                                                              *\n003300*   3. SINCE COBOL'S SUBSCRIPT/INDEXING FACILITY REFERS TO THE *\n003400*      OCCURRENCE NUMBER OF A FIELD RELATIVE TO 1, RATHER THAN *\n003500*      TO 0 AS IS NORMALLY GIVEN IN CONTROL BLOCK BOOKS, THE   *\n003600*      SUBSCRIPT/INDEX VALUES MUST BE 1 GREATER THAN GIVEN IN  *\n003700*      THE CONTROL BLOCK BOOKS. (TO ACCESS A FIELD AT OFFSET   *\n003800*      67 RELATIVE TO ZERO, THE SUBSCRIPT OR INDEX MUST SPECIFY*\n003900*      68).                                                    *\n004000****************************************************************\n004100 ENVIRONMENT DIVISION.\n004200 INPUT-OUTPUT SECTION.\n004300 FILE-CONTROL.\n004400     SELECT PRINT-OUT ASSIGN TO UT-S-PRINT1.\n004500 DATA DIVISION.\n004600 FILE SECTION.\n004700 FD  PRINT-OUT\n004800       LABEL RECORDS ARE STANDARD\n004900       RECORD CONTAINS 80 CHARACTERS\n005000       BLOCK CONTAINS 0 RECORDS\n005100       DATA RECORD IS PRINT-LINE.\n005200 01  PRINT-LINE.\n005300     05  PRINT-DATE         PIC 99/999.\n005400     05  FILLER             PIC X(74).\n005500 WORKING-STORAGE SECTION.\n005600 77  FILLER                     PIC X(36)  VALUE\n005700     'CTLBLOX2 WORKING STORAGE BEGINS HERE'.\n005800 01  MISCELLANEOUS-WORK.\n005900     05  CVTADR                 PIC S9(8) COMP.\n006000     05  POINTER-WORK           PIC S9(8) COMP.\n006100     05  FILLER REDEFINES POINTER-WORK.\n006200         10  POINTER-HIGH-BYTE  PIC X.\n006300         10  POINTER-BYTE2      PIC X.\n006400         10  POINTER-BYTE3      PIC X.\n006500         10  POINTER-BYTE4      PIC X.\n006600     05  DATE-PACKED            PIC S9(7) COMP-3.\n006700 LINKAGE SECTION.\n006800 01  MEMORY-BYTES.\n006900     05  MEMORY-BYTE            PIC X OCCURS 4096 TIMES\n007000                                INDEXED BY BYTE-NBR.\n007100 PROCEDURE DIVISION.\n007200****************************************************************\n007300* INITIALIZE                                                   *\n007400****************************************************************\n007500     OPEN OUTPUT PRINT-OUT.\n007600     MOVE SPACES TO PRINT-LINE.\n007700****************************************************************\n007800* GET THE ADDRESS OF THE CVT INTO CVTADR. THE CVT ADDRESS IS   *\n007900* LOCATED AT ABSOLUTE MEMORY ADDRESSES 17-19 (DECIMAL).        *\n008000****************************************************************\n008100     MOVE LOW-VALUES TO POINTER-HIGH-BYTE.\n008200     MOVE MEMORY-BYTE (18) TO POINTER-BYTE2.\n008300     MOVE MEMORY-BYTE (19) TO POINTER-BYTE3.\n008400     MOVE MEMORY-BYTE (20) TO POINTER-BYTE4.\n008500     MOVE POINTER-WORK TO CVTADR.\n008600****************************************************************\n008700* GET THE SYSTEM DATE FROM THE CVT. THE CVT ADDRESS IS PASSED  *\n008800* TO THE SUBPROGRAM READCVT, WHICH RETURNS SYSTEM DATE FIELD IN*\n008900* THE DATE-PACKED FIELD. NOTE THAT THE CVT ADDRESS MUST BE     *\n009000* ADVANCED BY 1 TO ADJUST FOR COBOL'S CONVERSION FROM AN       *\n009100* OCCURRENCE NUMBER (CVTADR) TO AN OFFSET (BYTE-NBR).          *\n009200****************************************************************\n009300     SET BYTE-NBR TO CVTADR.\n009400     SET BYTE-NBR UP BY 1.\n009500     CALL 'READCVT' USING MEMORY-BYTE (BYTE-NBR),\n009600                          DATE-PACKED.\n009700****************************************************************\n009800* PRINT THE SYSTEM DATE.                                       *\n009900****************************************************************\n010000     MOVE DATE-PACKED TO PRINT-DATE.\n010100     WRITE PRINT-LINE.\n010200     CLOSE PRINT-OUT.\n010300     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CTLBLOX3": {"ttr": 5135, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x13\\x00\\x93\\x07\\x0f\\x01\\x02\\x00O\\x13&\\x00I\\x00I\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "2002-01-04T13:26:13", "lines": 73, "newlines": 73, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  CTLBLOX3.\n000300 AUTHOR.  R THORNTON.\n000400 INSTALLATION.  BLUE CROSS AND BLUE SHIELD OF VIRGINIA.\n000500 DATE-WRITTEN.  NOV, 1987.\n000600 DATE-COMPILED.\n000700****************************************************************\n000800* TEST COBOL'S ABILITY TO ACCESS STORAGE IN UNUSUAL LOCATIONS, *\n000900* IN ORDER TO OBTAIN INFORMATION FROM CONTROL BLOCKS WITHOUT   *\n001000* HAVING TO RESORT TO USE OF ASSEMBLY LANGUAGE SUBROUTINES.    *\n001100*                                                              *\n001200* THIS VERSION CALLS THE SETUPBLL SUBROUTINE (COBOL) WHICH     *\n001300* RETURNS ADDRESSES IN THIS PROGRAM'S BLL CELLS THAT PERMIT IT *\n001400* TO DIRECTLY ADDRESS A SYSTEM CONTROL BLOCK (CVT) AND ONE OF  *\n001500* ITS OWN FD'S (PRINT-OUT) BY USE OF RECORD DESCRIPTIONS IN THE*\n001600* LINKAGE SECTION.                                             *\n001700****************************************************************\n001800 ENVIRONMENT DIVISION.\n001900 INPUT-OUTPUT SECTION.\n002000 FILE-CONTROL.\n002100     SELECT PRINT-OUT ASSIGN TO UT-S-PRINT1.\n002200 DATA DIVISION.\n002300 FILE SECTION.\n002400 FD  PRINT-OUT\n002500       LABEL RECORDS ARE STANDARD\n002600       RECORD CONTAINS 80 CHARACTERS\n002700       BLOCK CONTAINS 0 RECORDS\n002800       DATA RECORD IS PRINT-LINE.\n002900 01  PRINT-LINE.\n003000     05  PRINT-DDNAME       PIC X(8).\n003100     05  FILLER             PIC X(4).\n003200     05  PRINT-DATE         PIC 99/999.\n003300     05  FILLER             PIC X(62).\n003400 WORKING-STORAGE SECTION.\n003500 77  FILLER                     PIC X(36)  VALUE\n003600     'CTLBLOX3 WORKING STORAGE BEGINS HERE'.\n003700 01  MISCELLANEOUS-WORK.\n003800     05  HOLD-DDNAME            PIC X(8).\n003900     05  REQUEST-AREA.\n004000         10  CELL1-CONTENT      PIC X(8) VALUE 'CVT'.\n004100         10  CELL2-CONTENT      PIC X(8) VALUE 'FD'.\n004200         10  CELL3-CONTENT      PIC X(8) VALUE SPACES.\n004300 LINKAGE SECTION.\n004400 01  CVT-AREA.\n004500     05  FILLER                 PIC X(56).\n004600     05  CVTDATE                PIC S9(7) COMP-3.\n004700     05  FILLER                 PIC X(1196).\n004800 01  DCB-AREA.\n004900     05  FILLER                 PIC X(40).\n005000     05  DCBDDNAM               PIC X(8).\n005100     05  FILLER                 PIC X(48).\n005200 PROCEDURE DIVISION.\n005300****************************************************************\n005400* INITIALIZE                                                   *\n005500****************************************************************\n005600 BLL-CALL.\n005700     CALL 'SETUPBLL' USING REQUEST-AREA,\n005800                           BLL-CALL,\n005900                           CVT-AREA,\n006000                           DCB-AREA,\n006100                           PRINT-OUT.\n006200     MOVE DCBDDNAM TO HOLD-DDNAME.\n006300     OPEN OUTPUT PRINT-OUT.\n006400     MOVE SPACES TO PRINT-LINE.\n006500****************************************************************\n006600* PRINT THE PRINT FILE DDNAME AND SYSTEM DATE.                 *\n006700****************************************************************\n006800     MOVE HOLD-DDNAME TO PRINT-DDNAME.\n006900     MOVE CVTDATE TO PRINT-DATE.\n007000     WRITE PRINT-LINE.\n007100 END-OF-JOB.\n007200     CLOSE PRINT-OUT.\n007300     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CTLBLOX4": {"ttr": 5377, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00 \\x00\\x93\\x07\\x0f\\x01\\x02\\x00O\\x13&\\x00\\x88\\x00\\x88\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "2002-01-04T13:26:20", "lines": 136, "newlines": 136, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  CTLBLOX4.\n000300 AUTHOR.  R THORNTON.\n000400 INSTALLATION.  BLUE CROSS AND BLUE SHIELD OF VIRGINIA.\n000500 DATE-WRITTEN.  NOV, 1987.\n000600 DATE-COMPILED.\n000700****************************************************************\n000800* TEST COBOL'S ABILITY TO ACCESS STORAGE IN UNUSUAL LOCATIONS, *\n000900* IN ORDER TO OBTAIN INFORMATION FROM CONTROL BLOCKS WITHOUT   *\n001000* HAVING TO RESORT TO USE OF ASSEMBLY LANGUAGE SUBROUTINES.    *\n001100*                                                              *\n001200* THIS VERSION ACCESSES THE CVT VIA A (COBOL) SUBROUTINE CALLED*\n001300* READCVT, WHICH IS CODED AS A SEPARATE SCETION IN THIS SAME   *\n001400* SOURCE PROGRAM.                                              *\n001500*                                                              *\n001600* THE FOLLOWING CHARACTERISTICS OF IBM COBOL ARE USED FOR THIS *\n001700* TECHNIQUE:                                                   *\n001800*                                                              *\n001900*   1. IN LINKAGE SECTION, BLL CELLS FOR EACH RECORD ARE SET TO*\n002000*      ZERO, AND ARE CHANGED ONLY WHEN ACCEPTED BY THE USING   *\n002100*      PARAMETER ON THE PROCEDURE DIVISION, OR AN ENTRY STATE- *\n002200*      MENT. THE RECORD MEMORY-BYTES IS NEVER RECEIVED, AND    *\n002300*      WILL THEREFORE ALWAYS BE LOCATED AT ABSOLUTE LOCATION   *\n002400*      ZERO, THE BEGINNING OF MEMORY.                          *\n002500*                                                              *\n002600*   2. SUBSCRIPT VALUES ARE NOT CHECKED FOR OUT-OF-RANGE VALUES*\n002700*      IN NORMAL OPERATION, THEREFORE ANY VALUE AT ALL CAN BE  *\n002800*      USED IN THE INDEX BYTE-NBR. BECAUSE OF THIS, ANY BYTE IN*\n002900*      MEMORY CAN BE ACCESSED BY PUTTING ITS ADDRESS IN THE    *\n003000*      INDEX FIELD BYTE-NBR, AND ACCESSING IT BY REFERRING TO  *\n003100*      MEMORY-BYTE (BYTE-NBR).                                 *\n003200*                                                              *\n003300*   3. SINCE COBOL'S SUBSCRIPT/INDEXING FACILITY REFERS TO THE *\n003400*      OCCURRENCE NUMBER OF A FIELD RELATIVE TO 1, RATHER THAN *\n003500*      TO 0 AS IS NORMALLY GIVEN IN CONTROL BLOCK BOOKS, THE   *\n003600*      SUBSCRIPT/INDEX VALUES MUST BE 1 GREATER THAN GIVEN IN  *\n003700*      THE CONTROL BLOCK BOOKS. (TO ACCESS A FIELD AT OFFSET   *\n003800*      67 RELATIVE TO ZERO, THE SUBSCRIPT OR INDEX MUST SPECIFY*\n003900*      68).                                                    *\n004000****************************************************************\n004100 ENVIRONMENT DIVISION.\n004200 INPUT-OUTPUT SECTION.\n004300 FILE-CONTROL.\n004400     SELECT PRINT-OUT ASSIGN TO UT-S-PRINT1.\n004500 DATA DIVISION.\n004600 FILE SECTION.\n004700 FD  PRINT-OUT\n004800       LABEL RECORDS ARE STANDARD\n004900       RECORD CONTAINS 80 CHARACTERS\n005000       BLOCK CONTAINS 0 RECORDS\n005100       DATA RECORD IS PRINT-LINE.\n005200 01  PRINT-LINE.\n005300     05  PRINT-DATE         PIC ZZ99/999.\n005400     05  FILLER             PIC X(72).\n005500 WORKING-STORAGE SECTION.\n005600 77  FILLER                     PIC X(36)  VALUE\n005700     'CTLBLOX4 WORKING STORAGE BEGINS HERE'.\n005800 01  MISCELLANEOUS-WORK.\n005900     05  CVTADR                 PIC S9(8) COMP.\n006000     05  POINTER-WORK           PIC S9(8) COMP.\n006100     05  FILLER REDEFINES POINTER-WORK.\n006200         10  POINTER-HIGH-BYTE  PIC X.\n006300         10  POINTER-BYTE2      PIC X.\n006400         10  POINTER-BYTE3      PIC X.\n006500         10  POINTER-BYTE4      PIC X.\n006600     05  DATE-PACKED            PIC S9(7) COMP-3.\n006700 LINKAGE SECTION.\n006800 01  MEMORY-BYTES.\n006900     05  MEMORY-BYTE            PIC X OCCURS 4096 TIMES\n007000                                INDEXED BY BYTE-NBR.\n007100 01  CVT-AREA.\n007200     05  CVTTCBP                PIC S9(8) COMP.\n007300     05  CVT0EF00               PIC S9(8) COMP.\n007400     05  CVTLINK                PIC S9(8) COMP.\n007500     05  CVTAUSCB               PIC S9(8) COMP.\n007600     05  CVTBUF                 PIC S9(8) COMP.\n007700     05  CVTXAPG                PIC S9(8) COMP.\n007800     05  CVT0VL00               PIC S9(8) COMP.\n007900     05  CVTPCNVT               PIC S9(8) COMP.\n008000     05  CVTPRLTV               PIC S9(8) COMP.\n008100     05  CVTILK1                PIC S9(8) COMP.\n008200     05  CVTILK2                PIC S9(8) COMP.\n008300     05  CVTXTLER               PIC S9(8) COMP.\n008400     05  CVTSYSAD               PIC S9(8) COMP.\n008500     05  CVTBTERM               PIC S9(8) COMP.\n008600     05  CVTDATE                PIC S9(7) COMP-3.\n008700     05  CVTMSLT                PIC S9(8) COMP.\n008800     05  CVTZDTAB               PIC S9(8) COMP.\n008900     05  CVTXITP                PIC S9(8) COMP.\n009000     05  REST-OF-CVT            PIC X(1188).\n009100 01  DATE-RETURN                PIC S9(7) COMP-3.\n009200 PROCEDURE DIVISION.\n009300 MAIN-PROGRAM SECTION 01.\n009400****************************************************************\n009500* INITIALIZE                                                   *\n009600****************************************************************\n009700     OPEN OUTPUT PRINT-OUT.\n009800     MOVE SPACES TO PRINT-LINE.\n009900****************************************************************\n010000* GET THE ADDRESS OF THE CVT INTO CVTADR. THE CVT ADDRESS IS   *\n010100* LOCATED AT ABSOLUTE MEMORY ADDRESSES 17-19 (DECIMAL).        *\n010200****************************************************************\n010300     MOVE LOW-VALUES TO POINTER-HIGH-BYTE.\n010400     MOVE MEMORY-BYTE (18) TO POINTER-BYTE2.\n010500     MOVE MEMORY-BYTE (19) TO POINTER-BYTE3.\n010600     MOVE MEMORY-BYTE (20) TO POINTER-BYTE4.\n010700     MOVE POINTER-WORK TO CVTADR.\n010800****************************************************************\n010900* GET THE SYSTEM DATE FROM THE CVT. THE CVT ADDRESS IS PASSED  *\n011000* TO THE SUBPROGRAM READCVT, WHICH RETURNS SYSTEM DATE FIELD IN*\n011100* THE DATE-PACKED FIELD. NOTE THAT THE CVT ADDRESS MUST BE     *\n011200* ADVANCED BY 1 TO ADJUST FOR COBOL'S CONVERSION FROM AN       *\n011300* OCCURRENCE NUMBER (CVTADR) TO AN OFFSET (BYTE-NBR).          *\n011400****************************************************************\n011500     SET BYTE-NBR TO CVTADR.\n011600     SET BYTE-NBR UP BY 1.\n011700     CALL 'READCVT' USING MEMORY-BYTE (BYTE-NBR),\n011800                          DATE-PACKED.\n011900****************************************************************\n012000* PRINT THE SYSTEM DATE.                                       *\n012100****************************************************************\n012200     MOVE DATE-PACKED TO PRINT-DATE.\n012300     WRITE PRINT-LINE.\n012400     CLOSE PRINT-OUT.\n012500     GOBACK.\n012600****************************************************************\n012700* SUBROUTINE SECTION TO PERMIT CALLS FROM THE MAIN PROGRAM     *\n012800****************************************************************\n012900 SUBROUTINE SECTION 50.\n013000     ENTRY 'READCVT' USING  CVT-AREA,\n013100                            DATE-RETURN.\n013200****************************************************************\n013300* MOVE THE SYSTEM DATE FROM THE CVT TO THE CALLER'S DATE FIELD.*\n013400****************************************************************\n013500     MOVE CVTDATE TO DATE-RETURN.\n013600     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "CTRLBLOX": {"ttr": 5380, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00)\\x00\\x93\\x07\\x0f\\x01\\x02\\x00O\\x13&\\x00j\\x00j\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "2002-01-04T13:26:29", "lines": 106, "newlines": 106, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  CTRLBLOX.\n000300 AUTHOR.  R THORNTON.\n000400 INSTALLATION.  BLUE CROSS AND BLUE SHIELD OF VIRGINIA.\n000500 DATE-WRITTEN.  OCT, 1987.\n000600 DATE-COMPILED.\n000700****************************************************************\n000800* TEST COBOL'S ABILITY TO ACCESS STORAGE IN UNUSUAL LOCATIONS, *\n000900* IN ORDER TO OBTAIN INFORMATION FROM CONTROL BLOCKS WITHOUT   *\n001000* HAVING TO RESORT TO USE OF ASSEMBLY LANGUAGE SUBROUTINES.    *\n001100* THE FOLLOWING CHARACTERISTICS OF IBM COBOL ARE USED FOR THIS *\n001200* TECHNIQUE:                                                   *\n001300*                                                              *\n001400*   1. IN LINKAGE SECTION, BLL CELLS FOR EACH RECORD ARE SET TO*\n001500*      ZERO, AND ARE CHANGED ONLY WHEN ACCEPTED BY THE USING   *\n001600*      PARAMETER ON THE PROCEDURE DIVISION, OR AN ENTRY STATE- *\n001700*      MENT. THE RECORD MEMORY-BYTES IS NEVER RECEIVED, AND    *\n001800*      WILL THEREFORE ALWAYS BE LOCATED AT ABSOLUTE LOCATION   *\n001900*      ZERO, THE BEGINNING OF MEMORY.                          *\n002000*                                                              *\n002100*   2. SUBSCRIPT VALUES ARE NOT CHECKED FOR OUT-OF-RANGE VALUES*\n002200*      IN NORMAL OPERATION, THEREFORE ANY VALUE AT ALL CAN BE  *\n002300*      USED IN THE INDEX BYTE-NBR. BECAUSE OF THIS, ANY BYTE IN*\n002400*      MEMORY CAN BE ACCESSED BY PUTTING ITS ADDRESS IN THE    *\n002500*      INDEX FIELD BYTE-NBR, AND ACCESSING IT BY REFERRING TO  *\n002600*      MEMORY-BYTE (BYTE-NBR).                                 *\n002700*                                                              *\n002800*   3. SINCE COBOL'S SUBSCRIPT/INDEXING FACILITY REFERS TO THE *\n002900*      OCCURRENCE NUMBER OF A FIELD RELATIVE TO 1, RATHER THAN *\n003000*      TO 0 AS IS NORMALLY GIVEN IN CONTROL BLOCK BOOKS, THE   *\n003100*      SUBSCRIPT/INDEX VALUES MUST BE 1 GREATER THAN GIVEN IN  *\n003200*      THE CONTROL BLOCK BOOKS. (TO ACCESS A FIELD AT OFFSET   *\n003300*      67 RELATIVE TO ZERO, THE SUBSCRIPT OR INDEX MUST SPECIFY*\n003400*      68).                                                    *\n003500*                                                              *\n003600*                                                              *\n003700* AUTHOR R THORNTON NOV 1987                                   *\n003800****************************************************************\n003900 ENVIRONMENT DIVISION.\n004000 CONFIGURATION SECTION.\n004100 INPUT-OUTPUT SECTION.\n004200 FILE-CONTROL.\n004300     SELECT PRINT-OUT ASSIGN TO UT-S-PRINT1.\n004400 DATA DIVISION.\n004500 FILE SECTION.\n004600 FD  PRINT-OUT\n004700       LABEL RECORDS ARE STANDARD\n004800       RECORD CONTAINS 80 CHARACTERS\n004900       BLOCK CONTAINS 0 RECORDS\n005000       DATA RECORD IS PRINT-LINE.\n005100 01  PRINT-LINE.\n005200     05  PRINT-DATE         PIC 99/999.\n005300     05  FILLER             PIC X(74).\n005400 WORKING-STORAGE SECTION.\n005500 77  FILLER                     PIC X(36)  VALUE\n005600     'CTRLBLOX WORKING STORAGE BEGINS HERE'.\n005700 01  MISCELLANEOUS-WORK.\n005800     05  CVTADR                 PIC S9(8) COMP.\n005900     05  POINTER-WORK           PIC S9(8) COMP.\n006000     05  FILLER REDEFINES POINTER-WORK.\n006100         10  POINTER-HIGH-BYTE  PIC X.\n006200         10  POINTER-BYTE2      PIC X.\n006300         10  POINTER-BYTE3      PIC X.\n006400         10  POINTER-BYTE4      PIC X.\n006500     05  DATE-PACKED            PIC S9(7) COMP-3.\n006600     05  FILLER REDEFINES DATE-PACKED.\n006700         10 DATE-BYTE1          PIC X.\n006800         10 DATE-BYTE2          PIC X.\n006900         10 DATE-BYTE3          PIC X.\n007000         10 DATE-BYTE4          PIC X.\n007100 LINKAGE SECTION.\n007200 01  MEMORY-BYTES.\n007300     05  MEMORY-BYTE            PIC X OCCURS 4096 TIMES\n007400                                INDEXED BY BYTE-NBR.\n007500 PROCEDURE DIVISION.\n007600****************************************************************\n007700* INITIALIZE                                                   *\n007800****************************************************************\n007900     OPEN OUTPUT PRINT-OUT.\n008000     MOVE SPACES TO PRINT-LINE.\n008100****************************************************************\n008200* GET THE ADDRESS OF THE CVT INTO CVTADR. THE CVT ADDRESS IS   *\n008300* LOCATED AT ABSOLUTE MEMORY ADDRESSES 17-19 (DECIMAL).        *\n008400****************************************************************\n008500     MOVE LOW-VALUES TO POINTER-HIGH-BYTE.\n008600     MOVE MEMORY-BYTE (18) TO POINTER-BYTE2.\n008700     MOVE MEMORY-BYTE (19) TO POINTER-BYTE3.\n008800     MOVE MEMORY-BYTE (20) TO POINTER-BYTE4.\n008900     MOVE POINTER-WORK TO CVTADR.\n009000****************************************************************\n009100* GET THE SYSTEM DATE FROM THE CVT. SYSTEM DATE IS MAINTAINED  *\n009200* AT OFFSETS 57-59 (DECIMAL) IN THE CVT. IT IS A PACKED-DECIMAL*\n009300* NUMBER CONTAINING THE CURRENT JULIAN DATE AS YYDDDF.         *\n009400****************************************************************\n009500     SET BYTE-NBR TO CVTADR.\n009600     MOVE MEMORY-BYTE (BYTE-NBR + 57) TO DATE-BYTE1.\n009700     MOVE MEMORY-BYTE (BYTE-NBR + 58) TO DATE-BYTE2.\n009800     MOVE MEMORY-BYTE (BYTE-NBR + 59) TO DATE-BYTE3.\n009900     MOVE MEMORY-BYTE (BYTE-NBR + 60) TO DATE-BYTE4.\n010000****************************************************************\n010100* PRINT THE SYSTEM DATE.                                       *\n010200****************************************************************\n010300     MOVE DATE-PACKED TO PRINT-DATE.\n010400     WRITE PRINT-LINE.\n010500     CLOSE PRINT-OUT.\n010600     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "C1UEXT02": {"ttr": 5383, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x007\\x01\\x01\\x10o\\x01\\x02\\x00O\\x13&\\x02\\x15\\x02\\x15\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2001-04-16T00:00:00", "modifydate": "2002-01-04T13:26:37", "lines": 533, "newlines": 533, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    C1UEXT02.\n000300 AUTHOR. R THORNTON\n000400*****************************************************************\n000500*REMARKS. C1UEXT02 IS AN ENDEVOR EXIT PROGRAM THAT IS INVOKED BY*\n000600*         THE ENDEVOR INTERFACE PROGRAM, EPC1UEXT, WHICH CALLS  *\n000700*         THIS EXIT, PASSING SEVERAL ENDEVOR CONTROL BLOCKS     *\n000800*         BEFORE ENDEVOR EXECUTES ANY OF THE FOLLOWING ACTIONS: *\n000900*                ADD, UPDATE, RETRIEVE, GENERATE,               *\n001000*                MOVE, DELETE, SIGNIN, TRANSFER,                *\n001100*                ARCHIVE, AND RESTORE.                          *\n001200*     PURPOSE: THIS EXIT WILL TEST FOR OVERRIDE TO A PREVIOUS   *\n001300*         SIGNOUT. WHEN THIS OCCURS, THE ORIGINAL OWNER WILL BE *\n001400*         SENT AN EMAIL NOTIFYING THEM THAT THE SIGHOUT OVERRIDE*\n001500*         OCCURRED, AND WILL GIVE THE LOGON ID OF THE OVERRIDER.*\n001600*     NOTES: C1UEXT02 USES THE COBOL COPY BOOK SUPPLIED BY      *\n001700*         ENDEVOR AS SPP.ENDEVOR.V3R9M1.SOURCE(EXITBLKS) TO     *\n001800*         DEFINE THE CONTROL BLOCKS PASSED IN THE LINKAGE       *\n001900*         SECTION OF THIS PROGRAM.                              *\n002000*         (2) THE LOAD MODULE FOR THIS PROGRAM MUST BE LINKED   *\n002100*         WITH EPC1UEXT AS THE ENTRY POINT, AND THE LOAD        *\n002200*         MODULE MUST BE IN SPP.ENDEVOR.V3R9M1.CONLIB(C1UEXT02) *\n002300*         (3) THE C1UEXT02 EXIT MUST BE IDENTIFIED TO ENDEVOR   *\n002400*         BY INCLUDING IT IN THE C1UEXITS TABLE.                *\n002500*****************************************************************\n002600 ENVIRONMENT DIVISION.\n002700 CONFIGURATION SECTION.\n002800 INPUT-OUTPUT SECTION.\n002900 FILE-CONTROL.\n003000 DATA DIVISION.\n003100 FILE SECTION.\n003200 WORKING-STORAGE SECTION.\n003300 77  FILLER PIC X(36)  VALUE\n003400     'C1UEXT02 WORKING STORAGE BEGINS HERE'.\n003410 01  EMAIL-MESSAGE.\n003420     05  CURRENT-OWNER-USERID       PIC X(8).\n003430     05  FILLER                     PIC X(29) VALUE\n003440                ': THIS IS TO INFORM YOU THAT '.\n003450     05  SIGNOUT-USERID             PIC X(8).\n003460     05  FILLER                     PIC X(41) VALUE\n003470                ' HAS OVERRIDDEN YOUR SIGNOUT FOR ELEMENT '.\n003480     05  ELEMENT-NAME               PIC X(8).\n003490     05  FILLER                     PIC X(16) VALUE\n003491                ' IN ENVIRONMENT '.\n003492     05  ENVIRONMENT-NAME           PIC X(8).\n003493     05  FILLER                     PIC X(9) VALUE\n003494                ', SYSTEM '.\n003495     05  SYSTEM-NAME               PIC X(8).\n003496     05  FILLER                    PIC X(12) VALUE\n003497                ', SUBSYSTEM '.\n003498     05  SUBSYSTEM-NAME            PIC X(8).\n003499     05  FILLER                    PIC X VALUE '.'.\n003500*\n003510 LINKAGE SECTION.\n003600*    COPY EXITBLKS.\n003700 01  EXIT-CONTROL-BLOCK.\n003800     05  ECB-LENGTH              PIC 9(4) COMP SYNC.\n003900     05  ECB-CURRENT-VERSION     PIC 9(4) COMP SYNC.\n004000     05  ECB-BLOCK-ID            PIC X(4).\n004100     05  ECB-FLAG                PIC 9(8) COMP SYNC.\n004200     05  ECB-RETURN-CODE         PIC 9(8) COMP SYNC.\n004300         88  RETURN-OK           VALUE 0.\n004400         88  RETURN-OK-MODS      VALUE 4.\n004500         88  RETURN-ABORT        VALUE 8.\n004600     05  ECB-ARGUMENTS           PIC 9(8) COMP SYNC.\n004700     05  ECB-EXIT-NUMBER         PIC 9(8) COMP SYNC.\n004800         88  C1IEXT01            VALUE 1.\n004900         88  C1IEXT02            VALUE 2.\n005000         88  C1IEXT03            VALUE 3.\n005100         88  C1IEXT04            VALUE 4.\n005200         88  C1IEXT05            VALUE 5.\n005300         88  C1IEXT06            VALUE 6.\n005400     05  ECB-USER-ID             PIC X(8).\n005500     05  ECB-TSO-BATCH-MODE      PIC X.\n005600         88  TSO                 VALUE 'T'.\n005700         88  BATCH               VALUE 'B'.\n005800     05  ECB-CALL-FLAG           PIC X.\n005900         88  INTERNAL-CALL       VALUE 'Y'.\n006000         88  ACTION-CALL         VALUE 'N'.\n006100     05  ECB-SMF-FLAG            PIC X.\n006200         88  SMF-ENABLED         VALUE 'Y'.\n006300         88  SMF-DISABLED        VALUE 'N'.\n006400     05  ECB-SMF-WRITE-FLAG      PIC X.\n006500         88  SMF-WRITE-BUFFER    VALUE 'Y'.\n006600         88  SMF-NO-WRITE-BUF    VALUE 'N'.\n006700     05  ECB-ACTION-CODE         PIC 9(8) COMP SYNC.\n006800         88  ADD-ACTION          VALUE 1.\n006900         88  UPDATE-ACTION       VALUE 2.\n007000         88  RETRIEVE-ACTION     VALUE 3.\n007100         88  DELETE-ACTION       VALUE 4.\n007200         88  GENERATE-ACTION     VALUE 5.\n007300         88  DISPLAY-ACTION      VALUE 6.\n007400         88  MOVE-ACTION         VALUE 7.\n007500         88  ARCHIVE-ACTION      VALUE 8.\n007600         88  SIGNIN-ACTION       VALUE 12.\n007700         88  SO-OVERRIDE-ACTION  VALUE 13.\n007800         88  ENV-MGR-ACTION      VALUE 14.\n007900         88  PRINT-ACTION        VALUE 15.\n008000         88  TRANSFER-ACTION     VALUE 16.\n008100         88  RESTORE-ACTION      VALUE 18.\n008200     05  ECB-ACTION-NAME         PIC X(8).\n008300     05  ECB-MESSAGE-CODE        PIC X(4).\n008400     05  ECB-MESSAGE-LENGTH      PIC 9(4) COMP SYNC.\n008500     05  ECB-MESSAGE-TEXT        PIC X(132).\n008600     05  ECB-CALLER-ORIGIN       PIC X(1).\n008700         88  CALLER-ENDEVOR      VALUE 'E'.\n008800         88  CALLER-QUICKEDIT    VALUE 'Q'.\n008900     05  FILLER                  PIC X(1).\n009000     05  ECB-REQUEST-POINTER     PIC 9(8) COMP SYNC.\n009100     05  ECB-PANEL-TYPE          PIC 9(8) COMP SYNC.\n009200         88  NO-PANEL-INFO       VALUE 0.\n009300         88  ENVIRONMENT-PANEL   VALUE 1.\n009400         88  MAIN-PANEL          VALUE 2.\n009500         88  FOREGROUND-PANEL    VALUE 3.\n009600     05  ECB-EXIT-HOLD-FIELD     PIC 9(8) COMP SYNC.\n009700     05  ECB-SECURITY-FUNCTION   PIC 9(8) COMP SYNC.\n009800     05  ECB-HIGH-RC             PIC 9(8) COMP SYNC.\n009900*\n010000*\n010100*\n010200 01  REQUEST-INFO-BLOCK.\n010300     05  REQ-LENGTH              PIC 9(4) COMP SYNC.\n010400     05  REQ-CURRENT-VERSION     PIC 9(4) COMP SYNC.\n010500     05  REQ-BLOCK-ID            PIC X(4).\n010600     05  REQ-CCID                PIC X(12).\n010700     05  REQ-COMMENT             PIC X(40).\n010800     05  REQ-REQUEST-FLAG        PIC 9(8) COMP SYNC.\n010900     05  REQ-SISO-INDICATOR      PIC X.\n011000         88  SIGNOUT-OVERRIDE    VALUE 'Y'.\n011100         88  NO-SIGNOUT-OVERRIDE VALUE 'N'.\n011200     05  REQ-COPY-INDICATOR      PIC X.\n011300         88  RETRIEVE-COPY-ONLY  VALUE 'Y'.\n011400         88  RETRIEVE-FOR-UPDATE VALUE 'N'.\n011500     05  REQ-EXPINCL-INDICATOR   PIC X.\n011600         88  EXPAND-INCLUDES     VALUE 'Y'.\n011700         88  NO-EXPAND-INCLUDES  VALUE 'N'.\n011800     05  REQ-OVERWRITE-INDICATOR PIC X.\n011900         88  WRITE-OVER-MEMBER    VALUE 'Y'.\n012000         88  NO-WRITE-OVER-MEMBER VALUE 'N'.\n012100     05  REQ-ACTION-RC           PIC 9(8) COMP SYNC.\n012200     05  REQ-NEW-VERSION         PIC X(2).\n012300     05  REQ-GEN-COPYBACK        PIC X.\n012400         88  GEN-COPYBACK           VALUE 'Y'.\n012500         88  NO-GEN-COPYBACK        VALUE 'N'.\n012600     05  FILLER                  PIC X(5).\n012700     05  REQ-DELETE-AFTER        PIC X.\n012800         88  DELETE-AFTER-ACTION    VALUE 'Y'.\n012900         88  NO-DELETE-AFTER-ACTION VALUE 'N'.\n013000     05  REQ-MOVE-WITH-HISTORY   PIC X.\n013100         88  MOVE-WITH-HISTORY    VALUE 'Y'.\n013200         88  MOVE-WITHOUT-HISTORY VALUE 'N'.\n013300     05  REQ-ADD-WITH-UPDATE     PIC X.\n013400         88  ADD-WITH-UPDATE     VALUE 'Y'.\n013500         88  ADD-WITHOUT-UPDATE  VALUE 'N'.\n013600     05  REQ-BYPASS-GEN-PROC     PIC X.\n013700         88  BYPASS-GEN-PROC     VALUE 'Y'.\n013800         88  NO-BYPASS-GEN-PROC  VALUE 'N'.\n013900     05  REQ-DEL-COMPS-ONLY      PIC X.\n014000         88  DEL-COMPS-ONLY      VALUE 'Y'.\n014100         88  NO-DEL-COMPS-ONLY   VALUE 'N'.\n014200     05  REQ-SYNCHRONIZE         PIC X.\n014300         88  YES-SYNCHRONIZE     VALUE 'Y'.\n014400         88  NO-SYNCHRONIZE      VALUE 'N'.\n014500     05  REQ-IGNGEN-FAIL         PIC X.\n014600         88  IGNORE-GEN-FAIL     VALUE 'Y'.\n014700         88  NO-INGORE-GEN-FAIL  VALUE 'N'.\n014800     05  REQ-BYPASS-DEL-PROC     PIC X.\n014900         88  BYPASS-DEL-PROC     VALUE 'Y'.\n015000         88  NO-BYPASS-DEL-PROC  VALUE 'N'.\n015100     05  REQ-PROCESSOR-GROUP     PIC X(8).\n015200     05  REQ-SIGNOUT-USRID       PIC X(8).\n015300     05  REQ-SEARCH-OPTION       PIC X.\n015400         88  SEARCH-ENV-MAP      VALUE 'Y'.\n015500         88  NO-SEARCH-ENV-MAP   VALUE 'N'.\n015600     05  REQ-RETAIN-SIGNOUT-OPT  PIC X.\n015700         88  RETAIN-SIGNOUT      VALUE 'Y'.\n015800         88  NO-RETAIN-SIGNOUT   VALUE 'N'.\n015900     05  REQ-JUMP-OPTION         PIC X.\n016000         88  JUMP-IS-OK          VALUE 'Y'.\n016100         88  NO-JUMP-SPECIFIED   VALUE 'N'.\n016200     05  REQ-SIGNIN-OPTION       PIC X.\n016300         88  SIGNIN-IS-SPECIFIED VALUE 'Y'.\n016400         88  NO-SIGNIN-SPECIFIED VALUE 'N'.\n016500*\n016600*\n016700*\n016800 01  SRC-ENVIRONMENT-BLOCK.\n016900     05  SRC-ENV-LENGTH              PIC 9(4) COMP SYNC.\n017000     05  SRC-ENV-CURRENT-VERSION     PIC 9(4) COMP SYNC.\n017100     05  SRC-ENV-BLOCK-ID            PIC X(4).\n017200     05  SRC-ENV-FLAGS               PIC 9(4) COMP SYNC.\n017300     05  SRC-ENV-TYPE-OF-BLOCK       PIC X.\n017400         88  SRC-INTERNAL-C1-BLOCK   VALUE 'C'.\n017500         88  SRC-EXTERNAL-ENV-BLOCK  VALUE 'E'.\n017600         88  SRC-ARCHIVE-FILE        VALUE 'A'.\n017700     05  SRC-ENV-IO-TYPE             PIC X.\n017800         88  SRC-SOURCE-LOCATION     VALUE 'I'.\n017900         88  SRC-TARGET-LOCATION     VALUE 'O'.\n018000     05  SRC-ENV-NEXT-ENV-POINTER    PIC 9(8) COMP SYNC.\n018100     05  SRC-ENV-FILE-POINTER        PIC 9(8) COMP SYNC.\n018200     05  SRC-ENV-SITE-NAME           PIC X.\n018300     05  SRC-ENV-STAGE-ID            PIC X.\n018400         88  SRC-STAGE-ONE           VALUE '1'.\n018500         88  SRC-STAGE-TWO           VALUE '2'.\n018600     05  SRC-ENV-STAGE-CODE          PIC X.\n018700     05  FILLER                  PIC X.\n018800     05  SRC-ENV-ELEMENT-VERSION     PIC 9(4) COMP SYNC.\n018900     05  SRC-ENV-ELEMENT-LEVEL       PIC 9(4) COMP SYNC.\n019000     05  SRC-ENV-ENVIRONMENT-NAME    PIC X(8).\n019100     05  SRC-ENV-STAGE-NAME          PIC X(8).\n019200     05  SRC-ENV-SYSTEM-NAME         PIC X(8).\n019300     05  SRC-ENV-SYSTEM-DATA         PIC X(8).\n019400     05  FILLER                      PIC X(8).\n019500     05  SRC-ENV-SUBSYSTEM-NAME      PIC X(8).\n019600     05  SRC-ENV-SUBSYSTEM-DATA      PIC X(8).\n019700     05  SRC-ENV-TYPE-NAME           PIC X(8).\n019800     05  SRC-ENV-TYPE-DATA           PIC X(8).\n019900     05  SRC-ENV-ELEMENT-NAME        PIC X(10).\n020000     05  FILLER                  PIC X(8).\n020100*\n020200*\n020300*\n020400 01  SRC-ELEMENT-MASTER-INFO-BLOCK.\n020500     05  SRC-ELM-LENGTH              PIC 9(4) COMP SYNC.\n020600     05  SRC-ELM-CURRENT-VERSION     PIC 9(4) COMP SYNC.\n020700     05  SRC-ELM-BLOCK-ID            PIC X(4).\n020800     05  SRC-ELM-FLAGS               PIC 9(8) COMP SYNC.\n020900     05  SRC-ELM-ELEMENT-VERSION     PIC 9(4) COMP SYNC.\n021000     05  SRC-ELM-ELEMENT-LEVEL       PIC 9(4) COMP SYNC.\n021100     05  SRC-ELM-NUMBER-INSERTS      PIC 9(8) COMP SYNC.\n021200     05  SRC-ELM-NUMBER-DELETES      PIC 9(8) COMP SYNC.\n021300     05  SRC-ELM-ELEMENT-NAME        PIC X(10).\n021400     05  SRC-ELM-CURRENT-CCID        PIC X(12).\n021500     05  SRC-ELM-BASE-LEVEL-NUMBER   PIC 9(4) COMP SYNC.\n021600     05  SRC-ELM-BASE-TOTAL-STMTS    PIC 9(8) COMP SYNC.\n021700     05  SRC-ELM-BASE-DATE           PIC 9(6).\n021800     05  SRC-ELM-BASE-TIME           PIC 9(4).\n021900     05  SRC-ELM-BASE-COMMENT        PIC X(40).\n022000     05  SRC-ELM-BASE-USERID         PIC X(8).\n022100     05  SRC-ELM-GEN-USERID          PIC X(8).\n022200     05  SRC-ELM-GEN-DATE            PIC 9(6).\n022300     05  SRC-ELM-GEN-TIME            PIC 9(4).\n022400     05  SRC-ELM-FROM-DSN            PIC X(44).\n022500     05  SRC-ELM-FROM-MEMBER         PIC X(10).\n022600     05  SRC-ELM-PROCESSOR-FLAG      PIC X.\n022700     05  FILLER                  PIC X(3).\n022800     05  SRC-ELM-PROCESSOR-LAST-DATE PIC 9(6).\n022900     05  SRC-ELM-PROCESSOR-LAST-TIME PIC 9(4).\n023000     05  SRC-ELM-PROCESSOR-USERID    PIC X(8).\n023100     05  SRC-ELM-PROCESSOR-NAME      PIC X(10).\n023200     05  SRC-ELM-PROCESSOR-RC        PIC 9(4) COMP SYNC.\n023300     05  SRC-ELM-PROCESSOR-C1-RC     PIC 9(4) COMP SYNC.\n023400     05  SRC-ELM-PROCESSOR-LAST-COMMENT PIC X(40).\n023500     05  SRC-ELM-LEVEL-COMMENT       PIC X(40).\n023600     05  SRC-ELM-LEVEL-DATE          PIC 9(6).\n023700     05  SRC-ELM-LEVEL-TIME          PIC 9(4).\n023800     05  SRC-ELM-LEVEL-USERID        PIC X(8).\n023900     05  SRC-ELM-LAST-ACTION         PIC X(8).\n024000     05  SRC-ELM-LAST-LEVEL-TOTAL    PIC 9(8) COMP SYNC.\n024100     05  SRC-ELM-MOVE-DATE           PIC 9(6).\n024200     05  SRC-ELM-MOVE-TIME           PIC 9(4).\n024300     05  SRC-ELM-MOVE-USERID         PIC X(8).\n024400     05  SRC-ELM-RETRIEVE-DATE       PIC 9(6).\n024500     05  SRC-ELM-RETRIEVE-TIME       PIC 9(4).\n024600     05  SRC-ELM-RETRIEVE-USERID     PIC X(8).\n024700     05  SRC-ELM-RETRIEVE-COMMENT    PIC X(40).\n024800     05  SRC-ELM-RETRIEVE-TO-DSN     PIC X(44).\n024900     05  SRC-ELM-RETRIEVE-TO-MEMBER  PIC X(10).\n025000     05  FILLER                  PIC X(30).\n025100     05  SRC-ELM-RET-CCID            PIC X(12).\n025200     05  SRC-ELM-GEN-CCID            PIC X(12).\n025300     05  SRC-ELM-MOD-ACTION          PIC X(8).\n025400     05  SRC-ELM-ACTION-CCID         PIC X(12).\n025500     05  SRC-ELM-ACTION-COMM         PIC X(40).\n025600     05  SRC-ELM-ACTION-USER         PIC X(8).\n025700     05  SRC-ELM-ACTION-DATE         PIC 9(6).\n025800     05  SRC-ELM-ACTIOM-TIME         PIC 9(4).\n025900     05  SRC-ELM-SIGNOUT-ID          PIC X(8).\n026000     05  SRC-ELM-LOC-FLAG            PIC X.\n026100     05  SRC-ELM-FR-ACTION           PIC X(8).\n026200     05  SRC-ELM-FR-ACT-USERID       PIC X(8).\n026300     05  SRC-ELM-FR-ACT-DATE         PIC 9(6).\n026400     05  SRC-ELM-FR-ACT-TIME         PIC 9(4).\n026500     05  SRC-ELM-FR-SITE             PIC X.\n026600     05  SRC-ELM-FR-ENV              PIC X(8).\n026700     05  SRC-ELM-FR-SYS              PIC X(8).\n026800     05  SRC-ELM-FR-SUBSYS           PIC X(8).\n026900     05  SRC-ELM-FR-ELEMENT          PIC X(10).\n027000     05  SRC-ELM-FR-TYPE             PIC X(8).\n027100     05  SRC-ELM-FR-STG-NBR          PIC X.\n027200     05  SRC-ELM-FR-VER              PIC 9(4) COMP SYNC.\n027300     05  SRC-ELM-FR-LEVEL            PIC 9(4) COMP SYNC.\n027400\n027500* NEW ELEMENT FIELDS FOR E/MVS 3.6 FOLLOW\n027600\n027700     05  SRC-ELM-UPDATE-MEMBER-NAME  PIC X(10).\n027800     05  SRC-ELM-BASE-MEMBER-NAME    PIC X(10).\n027900     05  SRC-ELM-LOWER-LEVEL-IND     PIC X(2).\n028000     05  SRC-ELM-PCT-PREV-INSERT-DEL PIC X.\n028100     05  SRC-ELM-PCT-PREV-DELS-REINS PIC X.\n028200     05  SRC-ELM-ESD-FP-NAME-IF-OBJ  PIC X(8).\n028300     05  SRC-ELM-DELTA-FORMAT        PIC X.\n028400         88  SRC-ELM-FORWARD-DELTA   VALUE 'F'.\n028500         88  SRC-ELM-REVVERSE-DELTA  VALUE 'R'.\n028600     05  SRC-ELM-PACKED-INDICATOR    PIC X.\n028700         88  SRC-ELM-BASE-NOT-PACKED VALUE 'Y'.\n028800     05  SRC-ELM-LAST-PROC-VERSION   PIC X.\n028900     05  SRC-ELM-LAST-PROC-LEVEL     PIC X.\n029000     05  SRC-ELM-RECORD-FORMAT       PIC X.\n029100     05  SRC-ELM-CONF-DELTA-MEM-ID   PIC X(8).\n029200     05  SRC-ELM-CONF-DELTA-VERSION  PIC S9(4) COMP SYNC.\n029300     05  SRC-ELM-CONF-BASE-TOTAL     PIC S9(8) COMP SYNC.\n029400     05  SRC-ELM-CONF-LAST-LVL-TOTAL PIC S9(8) COMP SYNC.\n029500     05  SRC-ELM-CONF-BASE-LVL-NBR   PIC S9(4) COMP SYNC.\n029600     05  SRC-ELM-CONF-LAST-LVL-NBR   PIC S9(4) COMP SYNC.\n029700     05  SRC-ELM-INSERTS-LAST-LEVEL  PIC S9(4) COMP SYNC.\n029800     05  SRC-ELM-DELETES-LAST-LEVEL  PIC S9(4) COMP SYNC.\n029900     05  SRC-ELM-CONF-REGRES-INS-PCT PIC S9(4) COMP SYNC.\n030000     05  SRC-ELM-CONF-REGRES-DEL-PCT PIC S9(4) COMP SYNC.\n030100     05  SRC-ELM-CONF-BASE-DATE      PIC 9(6).\n030200     05  SRC-ELM-CONF-BASE-TIME      PIC 9(4).\n030300     05  SRC-ELM-CONF-LAST-LVL-DATE  PIC 9(6).\n030400     05  SRC-ELM-CONF-LAST-LVL-TIME  PIC 9(4).\n030500     05  SRC-ELM-CONF-COMP-STAT-FLAG PIC X.\n030600     05  SRC-ELM-CONF-DELTA-FORMAT   PIC X.\n030700     05  SRC-ELM-CONF-DELTA-BASE-FLG PIC X.\n030800         88  SRC-ELM-CONF-BASE-IN-DELTA VALUE 'Y'.\n030900     05  SRC-ELM-LAST-PROC-PACKAGE   PIC X(16).\n031000     05  SRC-ELM-PACKAGE-TIMESTAMP1  PIC X(4).\n031100     05  SRC-ELM-PACKAGE-TIMESTAMP2  PIC X(4).\n031200     05  SRC-ELM-PACKAGE-WITH-OUTPUT PIC X(16).\n031300     05  SRC-ELM-OPACKAGE-TIMESTAMP1 PIC X(4).\n031400     05  SRC-ELM-OPACKAGE-TIMESTAMP2 PIC X(4).\n031500     05  SRC-ELM-PROCESSOR-GROUP     PIC X(8).\n031600\n031700*\n031800*\n031900*\n032000 01  SRC-FILE-CONTROL-BLOCK.\n032100     05  SRC-FIL-LENGTH          PIC 9(4) COMP SYNC.\n032200     05  SRC-FIL-CURRENT-VERSION PIC 9(4) COMP SYNC.\n032300     05  SRC-FIL-BLOCK-ID        PIC X(4).\n032400     05  SRC-FIL-DATASET-NAME    PIC X(44).\n032500     05  SRC-FIL-DATASET-MEMBER  PIC X(10).\n032600     05  SRC-FIL-DDNAME          PIC X(8).\n032700     05  SRC-FIL-DATASET-TYPE    PIC X(3).\n032800     05  FILLER              PIC X(21).\n032900*\n033000*\n033100*\n033200 01  TGT-ENVIRONMENT-BLOCK.\n033300     05  TGT-ENV-LENGTH              PIC 9(4) COMP SYNC.\n033400     05  TGT-ENV-CURRENT-VERSION     PIC 9(4) COMP SYNC.\n033500     05  TGT-ENV-BLOCK-ID            PIC X(4).\n033600     05  TGT-ENV-FLAGS               PIC 9(4) COMP SYNC.\n033700     05  TGT-ENV-TYPE-OF-BLOCK       PIC X.\n033800         88  TGT-INTERNAL-C1-BLOCK   VALUE 'C'.\n033900         88  TGT-EXTERNAL-ENV-BLOCK  VALUE 'E'.\n034000         88  TGT-ARCHIVE-FILE        VALUE 'A'.\n034100     05  TGT-ENV-IO-TYPE             PIC X.\n034200         88  TGT-SOURCE-LOCATION     VALUE 'I'.\n034300         88  TGT-TARGET-LOCATION     VALUE 'O'.\n034400     05  TGT-ENV-NEXT-ENV-POINTER    PIC 9(8) COMP SYNC.\n034500     05  TGT-ENV-FILE-POINTER        PIC 9(8) COMP SYNC.\n034600     05  TGT-ENV-SITE-NAME           PIC X.\n034700     05  TGT-ENV-STAGE-ID            PIC X.\n034800         88  TGT-STAGE-ONE           VALUE '1'.\n034900         88  TGT-STAGE-TWO           VALUE '2'.\n035000     05  TGT-ENV-STAGE-CODE          PIC X.\n035100     05  TGT-ENV-ELEMENT-CHANGES     PIC X.\n035200         88  TGT-SOURCE-CHANGES      VALUE 'Y'.\n035300         88  TGT-NO-SOURCE-CHANGES   VALUE 'N'.\n035400     05  TGT-ENV-ELEMENT-VERSION     PIC 9(4) COMP SYNC.\n035500     05  TGT-ENV-ELEMENT-LEVEL       PIC 9(4) COMP SYNC.\n035600     05  TGT-ENV-ENVIRONMENT-NAME    PIC X(8).\n035700     05  TGT-ENV-STAGE-NAME          PIC X(8).\n035800     05  TGT-ENV-SYSTEM-NAME         PIC X(8).\n035900     05  TGT-ENV-SYSTEM-DATA         PIC X(8).\n036000     05  FILLER                      PIC X(8).\n036100     05  TGT-ENV-SUBSYSTEM-NAME      PIC X(8).\n036200     05  TGT-ENV-SUBSYSTEM-DATA      PIC X(8).\n036300     05  TGT-ENV-TYPE-NAME           PIC X(8).\n036400     05  TGT-ENV-TYPE-DATA           PIC X(8).\n036500     05  TGT-ENV-ELEMENT-NAME        PIC X(10).\n036600     05  FILLER                  PIC X(8).\n036700*\n036800*\n036900*\n037000 01  TGT-ELEMENT-MASTER-INFO-BLOCK.\n037100     05  TGT-ELM-LENGTH              PIC 9(4) COMP SYNC.\n037200     05  TGT-ELM-CURRENT-VERSION     PIC 9(4) COMP SYNC.\n037300     05  TGT-ELM-BLOCK-ID            PIC X(4).\n037400     05  TGT-ELM-FLAGS               PIC 9(8) COMP SYNC.\n037500     05  TGT-ELM-ELEMENT-VERSION     PIC 9(4) COMP SYNC.\n037600     05  TGT-ELM-ELEMENT-LEVEL       PIC 9(4) COMP SYNC.\n037700     05  TGT-ELM-NUMBER-INSERTS      PIC 9(8) COMP SYNC.\n037800     05  TGT-ELM-NUMBER-DELETES      PIC 9(8) COMP SYNC.\n037900     05  TGT-ELM-ELEMENT-NAME        PIC X(10).\n038000     05  TGT-ELM-CURRENT-CCID        PIC X(12).\n038100     05  TGT-ELM-BASE-LEVEL-NUMBER   PIC 9(4) COMP SYNC.\n038200     05  TGT-ELM-BASE-TOTAL-STMTS    PIC 9(8) COMP SYNC.\n038300     05  TGT-ELM-BASE-DATE           PIC 9(6).\n038400     05  TGT-ELM-BASE-TIME           PIC 9(4).\n038500     05  TGT-ELM-BASE-COMMENT        PIC X(40).\n038600     05  TGT-ELM-BASE-USERID         PIC X(8).\n038700     05  TGT-ELM-GEN-USERID          PIC X(8).\n038800     05  TGT-ELM-GEN-DATE            PIC 9(6).\n038900     05  TGT-ELM-GEN-TIME            PIC 9(4).\n039000     05  TGT-ELM-FROM-DSN            PIC X(44).\n039100     05  TGT-ELM-FROM-MEMBER         PIC X(10).\n039200     05  TGT-ELM-PROCESSOR-FLAG      PIC X.\n039300     05  FILLER                  PIC X(3).\n039400     05  TGT-ELM-PROCESSOR-LAST-DATE PIC 9(6).\n039500     05  TGT-ELM-PROCESSOR-LAST-TIME PIC 9(4).\n039600     05  TGT-ELM-PROCESSOR-USERID    PIC X(8).\n039700     05  TGT-ELM-PROCESSOR-NAME      PIC X(10).\n039800     05  TGT-ELM-PROCESSOR-RC        PIC 9(4) COMP SYNC.\n039900     05  TGT-ELM-PROCESSOR-C1-RC     PIC 9(4) COMP SYNC.\n040000     05  TGT-ELM-PROCESSOR-LAST-COMMENT PIC X(40).\n040100     05  TGT-ELM-LEVEL-COMMENT       PIC X(40).\n040200     05  TGT-ELM-LEVEL-DATE          PIC 9(6).\n040300     05  TGT-ELM-LEVEL-TIME          PIC 9(4).\n040400     05  TGT-ELM-LEVEL-USERID        PIC X(8).\n040500     05  TGT-ELM-LAST-ACTION         PIC X(8).\n040600     05  TGT-ELM-LAST-LEVEL-TOTAL    PIC 9(8) COMP SYNC.\n040700     05  TGT-ELM-MOVE-DATE           PIC 9(6).\n040800     05  TGT-ELM-MOVE-TIME           PIC 9(4).\n040900     05  TGT-ELM-MOVE-USERID         PIC X(8).\n041000     05  TGT-ELM-RETRIEVE-DATE       PIC 9(6).\n041100     05  TGT-ELM-RETRIEVE-TIME       PIC 9(4).\n041200     05  TGT-ELM-RETRIEVE-USERID     PIC X(8).\n041300     05  TGT-ELM-RETRIEVE-COMMENT    PIC X(40).\n041400     05  TGT-ELM-RETRIEVE-TO-DSN     PIC X(44).\n041500     05  TGT-ELM-RETRIEVE-TO-MEMBER  PIC X(10).\n041600     05  FILLER                  PIC X(30).\n041700     05  TGT-ELM-RET-CCID            PIC X(12).\n041800     05  TGT-ELM-GEN-CCID            PIC X(12).\n041900     05  TGT-ELM-MOD-ACTION          PIC X(8).\n042000     05  TGT-ELM-ACTION-CCID         PIC X(12).\n042100     05  TGT-ELM-ACTION-COMM         PIC X(40).\n042200     05  TGT-ELM-ACTION-USER         PIC X(8).\n042300     05  TGT-ELM-ACTION-DATE         PIC 9(6).\n042400     05  TGT-ELM-ACTIOM-TIME         PIC 9(4).\n042500     05  TGT-ELM-SIGNOUT-ID          PIC X(8).\n042600     05  TGT-ELM-LOC-FLAG            PIC X.\n042700     05  TGT-ELM-FR-ACTION           PIC X(8).\n042800     05  TGT-ELM-FR-ACT-USERID       PIC X(8).\n042900     05  TGT-ELM-FR-ACT-DATE         PIC 9(6).\n043000     05  TGT-ELM-FR-ACT-TIME         PIC 9(4).\n043100     05  TGT-ELM-FR-SITE             PIC X.\n043200     05  TGT-ELM-FR-ENV              PIC X(8).\n043300     05  TGT-ELM-FR-SYS              PIC X(8).\n043400     05  TGT-ELM-FR-SUBSYS           PIC X(8).\n043500     05  TGT-ELM-FR-ELEMENT          PIC X(10).\n043600     05  TGT-ELM-FR-TYPE             PIC X(8).\n043700     05  TGT-ELM-FR-STG-NBR          PIC X.\n043800     05  TGT-ELM-FR-VER              PIC 9(4) COMP SYNC.\n043900     05  TGT-ELM-FR-LEVEL            PIC 9(4) COMP SYNC.\n044000\n044100* NEW ELEMENT FIELDS FOR E/MVS 3.6 FOLLOW\n044200\n044300     05  TGT-ELM-UPDATE-MEMBER-NAME  PIC X(10).\n044400     05  TGT-ELM-BASE-MEMBER-NAME    PIC X(10).\n044500     05  TGT-ELM-LOWER-LEVEL-IND     PIC X(2).\n044600     05  TGT-ELM-PCT-PREV-INSERT-DEL PIC X.\n044700     05  TGT-ELM-PCT-PREV-DELS-REINS PIC X.\n044800     05  TGT-ELM-ESD-FP-NAME-IF-OBJ  PIC X(8).\n044900     05  TGT-ELM-DELTA-FORMAT        PIC X.\n045000         88  TGT-ELM-FORWARD-DELTA   VALUE 'F'.\n045100         88  TGT-ELM-REVVERSE-DELTA  VALUE 'R'.\n045200     05  TGT-ELM-PACKED-INDICATOR    PIC X.\n045300         88  TGT-ELM-BASE-NOT-PACKED VALUE 'Y'.\n045400     05  TGT-ELM-LAST-PROC-VERSION   PIC X.\n045500     05  TGT-ELM-LAST-PROC-LEVEL     PIC X.\n045600     05  TGT-ELM-RECORD-FORMAT       PIC X.\n045700     05  TGT-ELM-CONF-DELTA-MEM-ID   PIC X(8).\n045800     05  TGT-ELM-CONF-DELTA-VERSION  PIC S9(4) COMP SYNC.\n045900     05  TGT-ELM-CONF-BASE-TOTAL     PIC S9(8) COMP SYNC.\n046000     05  TGT-ELM-CONF-LAST-LVL-TOTAL PIC S9(8) COMP SYNC.\n046100     05  TGT-ELM-CONF-BASE-LVL-NBR   PIC S9(4) COMP SYNC.\n046200     05  TGT-ELM-CONF-LAST-LVL-NBR   PIC S9(4) COMP SYNC.\n046300     05  TGT-ELM-INSERTS-LAST-LEVEL  PIC S9(4) COMP SYNC.\n046400     05  TGT-ELM-DELETES-LAST-LEVEL  PIC S9(4) COMP SYNC.\n046500     05  TGT-ELM-CONF-REGRES-INS-PCT PIC S9(4) COMP SYNC.\n046600     05  TGT-ELM-CONF-REGRES-DEL-PCT PIC S9(4) COMP SYNC.\n046700     05  TGT-ELM-CONF-BASE-DATE      PIC 9(6).\n046800     05  TGT-ELM-CONF-BASE-TIME      PIC 9(4).\n046900     05  TGT-ELM-CONF-LAST-LVL-DATE  PIC 9(6).\n047000     05  TGT-ELM-CONF-LAST-LVL-TIME  PIC 9(4).\n047100     05  TGT-ELM-CONF-COMP-STAT-FLAG PIC X.\n047200     05  TGT-ELM-CONF-DELTA-FORMAT   PIC X.\n047300     05  TGT-ELM-CONF-DELTA-BASE-FLG PIC X.\n047400         88  TGT-ELM-CONF-BASE-IN-DELTA VALUE 'Y'.\n047500     05  TGT-ELM-LAST-PROC-PACKAGE   PIC X(16).\n047600     05  TGT-ELM-PACKAGE-TIMESTAMP1  PIC X(4).\n047700     05  TGT-ELM-PACKAGE-TIMESTAMP2  PIC X(4).\n047800     05  TGT-ELM-PACKAGE-WITH-OUTPUT PIC X(16).\n047900     05  TGT-ELM-OPACKAGE-TIMESTAMP1 PIC X(4).\n048000     05  TGT-ELM-OPACKAGE-TIMESTAMP2 PIC X(4).\n048100     05  TGT-ELM-PROCESSOR-GROUP     PIC X(8).\n048200*\n048300*\n048400*\n048500 01  TGT-FILE-CONTROL-BLOCK.\n048600     05  TGT-FIL-LENGTH          PIC 9(4) COMP SYNC.\n048700     05  TGT-FIL-CURRENT-VERSION PIC 9(4) COMP SYNC.\n048800     05  TGT-FIL-BLOCK-ID        PIC X(4).\n048900     05  TGT-FIL-DATASET-NAME    PIC X(44).\n049000     05  TGT-FIL-DATASET-MEMBER  PIC X(10).\n049100     05  TGT-FIL-DDNAME          PIC X(8).\n049200     05  TGT-FIL-DATASET-TYPE    PIC X(3).\n049300     05  FILLER              PIC X(21).\n049600 PROCEDURE DIVISION USING EXIT-CONTROL-BLOCK,\n049601                          REQUEST-INFO-BLOCK,\n049602                          SRC-ENVIRONMENT-BLOCK,\n049800                          SRC-ELEMENT-MASTER-INFO-BLOCK,\n049900                          SRC-FILE-CONTROL-BLOCK,\n050000                          TGT-ENVIRONMENT-BLOCK,\n050100                          TGT-ELEMENT-MASTER-INFO-BLOCK,\n050200                          TGT-FILE-CONTROL-BLOCK.\n050210     IF RETRIEVE-ACTION AND\n050211        SIGNOUT-OVERRIDE AND\n050212        SRC-ELM-RETRIEVE-USERID NOT EQUAL TO '        ' AND             00\n050213        SRC-ELM-LAST-ACTION = 'RETRIEVE'\n050214           MOVE SRC-ELM-SIGNOUT-ID TO CURRENT-OWNER-USERID\n050220           MOVE SRC-ELM-SIGNOUT-ID TO SIGNOUT-USERID\n050230           MOVE SRC-ENV-ENVIRONMENT-NAME TO ENVIRONMENT-NAME\n050231           MOVE SRC-ENV-SYSTEM-NAME TO SYSTEM-NAME\n050232           MOVE SRC-ENV-SUBSYSTEM-NAME TO SUBSYSTEM-NAME\n050293           MOVE SRC-ENV-ELEMENT-NAME TO ELEMENT-NAME\n050294           CALL 'SNDEMAIL' USING EMAIL-MESSAGE.\n050320     MOVE +0 TO ECB-RETURN-CODE.\n050400     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DATEINFO": {"ttr": 5637, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00D\\x01\\x00\\x03/\\x01\\x02\\x00O\\x13&\\x00\\xdd\\x00\\xdd\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2000-02-01T00:00:00", "modifydate": "2002-01-04T13:26:44", "lines": 221, "newlines": 221, "modlines": 0, "user": "BC0THOR"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    DATEINFO.\n       AUTHOR. R THORNTON\n      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n      *   A JULIAN OR GREGORIAN DATE IS PASSED BY THE CALLER, WHICH IS*\n      *   PASSED TO GENLDAT2. ON RETURN FROM GENLDAT2, THE RETURN CODE*\n      *   IS TESTED FOR SUCCESSFUL CONVERSION. IF NOT SUCCESSFUL, AN  *\n      *   ERROR MESSAGE IS WRITTEN TO THE SYSPRINT FILE, OTHERWISE THE*\n      *   CONVERSION DATA IS REFORMATTED AND WRITTEN TO SYSPRINT.     *\n      *                                                               *\n      *   THE DATE INFORMATION IS ENTERED AS JYYYYDDD FOR JULIAN DATES*\n      *   OR AS GMMDDYYYY FOR GREGORIAN DATES.                        *\n      *                                                               *\n      *  AUTHOR R. THORNTON  JAN 2000                                 *\n      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PRINT-FILE ASSIGN TO UT-S-SYSPRINT.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PRINT-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  PRINT-FILE-RECORD       PIC X(72).\n\n\n       WORKING-STORAGE SECTION.\n       77  FILLER PIC X(36)  VALUE\n           'DATES WORKING STORAGE BEGINS HERE'.\n\n       01  SWITCHES.\n           05  EOF-SWITCH                PIC X(01) VALUE 'N'.\n               88  MORE-CARDS                      VALUE 'N'.\n               88  NO-MORE-CARDS                   VALUE 'Y'.\n           05  ERROR-SWITCH              PIC X(01) VALUE 'N'.\n               88  NO-ERROR-FOUND                  VALUE 'N'.\n               88  ERROR-FOUND                     VALUE 'Y'.\n\n       01  GENLDAT2-RETURN-AREA.\n           05  DATE-TYPE                 PIC X(01).\n               88  JULIAN-SUPPLIED                 VALUE 'J'.\n               88  GREGORIAN-MDY-SUPPLIED          VALUE 'G'.\n           05  DATE-ERROR                PIC X(01).\n               88  NO-DATE-ERROR                   VALUE SPACE.\n               88  YES-DATE-ERROR                  VALUE 'E'.\n           05  DAY-OF-THE-WEEK           PIC 9(01).\n               88  MONDAY                          VALUE 1.\n               88  TUESDAY                         VALUE 2.\n               88  WEDNESDAY                       VALUE 3.\n               88  THURSDAY                        VALUE 4.\n               88  FRIDAY                          VALUE 5.\n               88  SATURDAY                        VALUE 6.\n               88  SUNDAY                          VALUE 7.\n           05  HOLIDAY-INDICATOR         PIC X(01).\n               88  NOT-A-HOLIDAY                   VALUE ' '.\n               88  NEW-YEARS-DAY                   VALUE '1'.\n               88  GOOD-FRIDAY                     VALUE '3'.\n               88  MEMORIAL-DAY                    VALUE '4'.\n               88  INDEPENDENCE-DAY                VALUE '5'.\n               88  LABOR-DAY                       VALUE '6'.\n               88  THANKSGIVING-DAY                VALUE '7'.\n               88  THANKSGIVING-FRIDAY             VALUE '8'.\n               88  CHRISTMAS-DAY                   VALUE '9'.\n           05  YEAR-TYPE                 PIC X(01).\n               88  NOT-LEAP-YEAR                   VALUE '0'.\n               88  LEAP-YEAR                       VALUE '1'.\n           05  JULIAN-DATE               PIC 9(07) COMP-3.\n           05  GREGORIAN-MDY-DATE.\n               10  GREG-MDY-MONTH-DAY.\n                   15  GREG-MDY-MONTH    PIC 99.\n                   15  GREG-MDY-DAY      PIC 99.\n               10  GREG-MDY-YEAR         PIC 9(4).\n           05  GREGORIAN-YMD-DATE.\n               10  GREG-YMD-YEAR         PIC 9(4).\n               10  GREG-YMD-MONTH        PIC 99.\n               10  GREG-YMD-DAY          PIC 99.\n           05  LITERAL-DATE              PIC X(18).\n           05  JULIAN-SLASH.\n               10  JULIAN-SLASH-YEAR     PIC 9(4).\n               10  JULIAN-SLASH-SLASH    PIC X.\n               10  JULIAN-SLASH-DAY      PIC 999.\n           05  GREGORIAN-SLASH.\n               10  GREG-SLASH-MONTH      PIC 99.\n               10  GREG-SLASH-SLASH1     PIC X.\n               10  GREG-SLASH-DAY        PIC 99.\n               10  GREG-SLASH-SLASH2     PIC X.\n               10  GREG-SLASH-YEAR       PIC 9(4).\n           05  DAY-LITERAL               PIC X(09).\n           05  MONTH-LITERAL             PIC X(09).\n\n\n       01  PRT-RETURN-AREA.\n           05  PRT-LEAP-YEAR-LINE.\n               10  FILLER                 PIC X VALUE '('.\n               10  PRT-LEAP-YEAR          PIC X(4).\n               10  FILLER          PIC X(16) VALUE ' IS A LEAP YEAR.'.\n               10  FILLER                 PIC X VALUE ')'.\n           05  PRT-NOT-LEAP-YEAR-LINE.\n               10  FILLER                 PIC X VALUE '('.\n               10  PRT-NOT-LEAP-YEAR      PIC X(4).\n               10  FILLER      PIC X(20) VALUE ' IS NOT A LEAP YEAR.'.\n               10  FILLER                 PIC X VALUE ')'.\n           05  PRT-LITERAL-DATE-LINE.\n               10  PRT-DAY-LITERAL        PIC X(9).\n               10  FILLER                 PIC X VALUE ' '.\n               10  PRT-LITERAL-DATE       PIC X(18).\n               10  FILLER                 PIC X(4) VALUE SPACES.\n               10  PRT-LITERAL-LEAP-YEAR  PIC X(26).\n           05  PRT-HOLIDAY-INDICATOR-LINE.\n               10  FILLER       PIC X(9) VALUE 'HOLIDAY: '.\n               10  PRT-HOLIDAY-INDICATOR-MEANING PIC X(20).\n           05  PRT-DATES-LINE.\n               10  FILLER      PIC X(15) VALUE 'JULIAN SLASH = '.\n               10  PRT-JULIAN-SLASH       PIC X(8).\n               10  FILLER      PIC X(4) VALUE SPACES.\n               10  FILLER      PIC X(18) VALUE 'GREGORIAN SLASH = '.\n               10  PRT-GREGORIAN-SLASH    PIC X(10).\n\n       01  PRINT-MESSAGES.\n           05  BAD-CARD-TYPE              PIC X(45) VALUE\n                 'CARD BELOW HAS AN INVALID DATE TYPE IN COL 1:'.\n           05  BAD-CARD-DATE             PIC X(31) VALUE\n                 'CARD BELOW HAS AN INVALID DATE:'.\n           05  PRT-SEPARATOR-LINE.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n\n       01  LITERAL-TABLES.\n           05  SUB                       PIC S9(5) COMP-3.\n           05  DAY-OF-WEEK-LITERALS.\n               10  FILLER                PIC X(10) VALUE 'MONDAY)'.\n               10  FILLER                PIC X(10) VALUE 'TUESDAY)'.\n               10  FILLER                PIC X(10) VALUE 'WEDNESDAY)'.\n               10  FILLER                PIC X(10) VALUE 'THURSDAY)'.\n               10  FILLER                PIC X(10) VALUE 'FRIDAY)'.\n               10  FILLER                PIC X(10) VALUE 'SATURDAY)'.\n               10  FILLER                PIC X(10) VALUE 'SUNDAY)'.\n               10  FILLER                PIC X(10) VALUE '?????????)'.\n           05  DAY-OF-WEEK-LITERAL REDEFINES DAY-OF-WEEK-LITERALS\n                                         PIC X(10) OCCURS 8 TIMES.\n           05  HOLIDAY-LITERALS.\n               10  FILLER      PIC X(20) VALUE 'NEW YEARS DAY'.\n               10  FILLER      PIC X(20) VALUE '?????????????'.\n               10  FILLER      PIC X(20) VALUE 'GOOD FRIDAY'.\n               10  FILLER      PIC X(20) VALUE 'MEMORIAL DAY'.\n               10  FILLER      PIC X(20) VALUE 'INDEPENDENCE DAY'.\n               10  FILLER      PIC X(20) VALUE 'LABOR DAY'.\n               10  FILLER      PIC X(20) VALUE 'THANKSGIVING DAY'.\n               10  FILLER      PIC X(20) VALUE 'THANKSGIVING FRIDAY'.\n               10  FILLER      PIC X(20) VALUE 'CHRISTMAS DAY'.\n               10  FILLER      PIC X(20) VALUE 'NOT A HOLIDAY'.\n               10  FILLER      PIC X(20) VALUE '?????????????'.\n           05  HOLIDAY-LITERAL REDEFINES HOLIDAY-LITERALS\n                               PIC X(20) OCCURS 11 TIMES.\n       LINKAGE SECTION.\n       01  CARD-FILE-RECORD.\n           05  FILLER                    PIC S9(4) COMP.\n           05  CARD-DATE-TYPE            PIC X(01).\n           05  CARD-GREGORIAN-DATE       PIC 9(08).\n           05  FILLER REDEFINES CARD-GREGORIAN-DATE.\n               10  CARD-JULIAN-DATE      PIC 9(07).\n               10  FILLER                PIC X(01).\n           05  FILLER                    PIC X(71).\n       PROCEDURE DIVISION USING CARD-FILE-RECORD.\n           OPEN OUTPUT PRINT-FILE.\n           WRITE PRINT-FILE-RECORD FROM PRT-SEPARATOR-LINE.\n           PERFORM 1000-MAINLINE THRU 1000-EXIT.\n           CLOSE PRINT-FILE.\n           GOBACK.\n\n       1000-MAINLINE.\n           MOVE 'N' TO ERROR-SWITCH.\n           MOVE LOW-VALUES TO GENLDAT2-RETURN-AREA\n           MOVE CARD-DATE-TYPE TO DATE-TYPE\n           IF DATE-TYPE = 'J'\n                   MOVE CARD-JULIAN-DATE TO JULIAN-DATE\n               ELSE IF DATE-TYPE = 'G'\n                   MOVE CARD-GREGORIAN-DATE TO GREGORIAN-MDY-DATE\n               ELSE\n                   MOVE 'Y' TO ERROR-SWITCH\n                   WRITE PRINT-FILE-RECORD FROM BAD-CARD-TYPE\n                   WRITE PRINT-FILE-RECORD FROM CARD-FILE-RECORD\n                   WRITE PRINT-FILE-RECORD FROM PRT-SEPARATOR-LINE\n                   GO TO 1000-EXIT.\n           CALL 'GENLDAT2' USING GENLDAT2-RETURN-AREA.\n           IF DATE-ERROR = ' '\n               NEXT SENTENCE\n           ELSE\n               WRITE PRINT-FILE-RECORD FROM BAD-CARD-DATE\n               WRITE PRINT-FILE-RECORD FROM CARD-FILE-RECORD\n               WRITE PRINT-FILE-RECORD FROM PRT-SEPARATOR-LINE\n               GO TO 1000-EXIT.\n           IF YEAR-TYPE = '0'\n               MOVE GREG-MDY-YEAR TO PRT-NOT-LEAP-YEAR\n               MOVE PRT-NOT-LEAP-YEAR-LINE TO PRT-LITERAL-LEAP-YEAR\n           ELSE\n               MOVE GREG-MDY-YEAR TO PRT-LEAP-YEAR\n               MOVE PRT-LEAP-YEAR-LINE TO PRT-LITERAL-LEAP-YEAR.\n           MOVE DAY-LITERAL TO PRT-DAY-LITERAL.\n           MOVE LITERAL-DATE TO PRT-LITERAL-DATE.\n           WRITE PRINT-FILE-RECORD FROM PRT-LITERAL-DATE-LINE.\n           MOVE JULIAN-SLASH TO PRT-JULIAN-SLASH.\n           MOVE GREGORIAN-SLASH TO PRT-GREGORIAN-SLASH.\n           WRITE PRINT-FILE-RECORD FROM PRT-DATES-LINE.\n           IF NOT-A-HOLIDAY\n               NEXT SENTENCE\n           ELSE\n               MOVE HOLIDAY-INDICATOR TO SUB\n               MOVE HOLIDAY-LITERAL (SUB) TO\n                   PRT-HOLIDAY-INDICATOR-MEANING\n               WRITE PRINT-FILE-RECORD FROM PRT-HOLIDAY-INDICATOR-LINE.\n           WRITE PRINT-FILE-RECORD FROM PRT-SEPARATOR-LINE.\n       1000-EXIT.\n           EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DATES": {"ttr": 5642, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00Q\\x01\\x00\\x03\\x1f\\x01\\x02\\x00O\\x13&\\x00\\xeb\\x01)\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2000-01-31T00:00:00", "modifydate": "2002-01-04T13:26:51", "lines": 235, "newlines": 297, "modlines": 0, "user": "BC0THOR"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID.    DATES.\n       AUTHOR. R THORNTON\n      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n      *   DATES READS ITS SYSIN FILE TO OBTAIN A DATE TO BE CONVERTED,*\n      *   WHICH IS PASSED TO GENLDAT2. ON RETURN FROM GENLDAT2, THE   *\n      *   RETURN CODE IS TESTED FOR SUCCESSFUL CONVERSION. IF NOT     *\n      *   SUCCESSFUL, AN ERROR MESSAGE IS WRITTEN TO THE SYSPRINT FILE*\n      *   OTHERWISE THE CONVERSION DATA IS REFORMATTED AND WRITTEN TO *\n      *   THE SYSPRINT FILE.                                          *\n      *\n      *   THE SYSIN DATE INFORMATION IS ENTERED BEGINNING IN COLUMN 1 *\n      *   AS JYYYYDDD FOR JULIAN DATES OR AS GMMDDYYYY FOR GREGORIAN. *\n      *\n      *  AUTHOR R. THORNTON  JAN 2000\n      * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n           SELECT PRINT-FILE ASSIGN TO UT-S-SYSPRINT.\n           SELECT CARD-FILE ASSIGN TO UT-S-SYSIN.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  PRINT-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  PRINT-FILE-RECORD       PIC X(72).\n\n       FD  CARD-FILE\n           RECORDING MODE IS F\n           BLOCK CONTAINS 0 RECORDS\n           LABEL RECORDS ARE STANDARD.\n       01  CARD-FILE-RECORD.\n           05  CARD-DATE-TYPE            PIC X(01).\n           05  CARD-GREGORIAN-DATE       PIC 9(08).\n           05  FILLER REDEFINES CARD-GREGORIAN-DATE.\n               10  CARD-JULIAN-DATE      PIC 9(07).\n               10  FILLER                PIC X(01).\n           05  FILLER                    PIC X(71).\n       01  END-CARD-RECORD.\n           05 END-CARD                   PIC X(3).\n           05 FILLER                     PIC X(77).\n\n       WORKING-STORAGE SECTION.\n       77  FILLER PIC X(36)  VALUE\n           'DATES WORKING STORAGE BEGINS HERE'.\n\n       01  SWITCHES.\n           05  EOF-SWITCH                PIC X(01) VALUE 'N'.\n               88  MORE-CARDS                      VALUE 'N'.\n               88  NO-MORE-CARDS                   VALUE 'Y'.\n           05  ERROR-SWITCH              PIC X(01) VALUE 'N'.\n               88  NO-ERROR-FOUND                  VALUE 'N'.\n               88  ERROR-FOUND                     VALUE 'Y'.\n\n       01  GENLDAT2-RETURN-AREA.\n           05  DATE-TYPE                 PIC X(01).\n               88  JULIAN-SUPPLIED                 VALUE 'J'.\n               88  GREGORIAN-MDY-SUPPLIED          VALUE 'G'.\n           05  DATE-ERROR                PIC X(01).\n               88  NO-DATE-ERROR                   VALUE SPACE.\n               88  YES-DATE-ERROR                  VALUE 'E'.\n           05  DAY-OF-THE-WEEK           PIC 9(01).\n               88  MONDAY                          VALUE 1.\n               88  TUESDAY                         VALUE 2.\n               88  WEDNESDAY                       VALUE 3.\n               88  THURSDAY                        VALUE 4.\n               88  FRIDAY                          VALUE 5.\n               88  SATURDAY                        VALUE 6.\n               88  SUNDAY                          VALUE 7.\n           05  HOLIDAY-INDICATOR         PIC X(01).\n               88  NOT-A-HOLIDAY                   VALUE ' '.\n               88  NEW-YEARS-DAY                   VALUE '1'.\n               88  GOOD-FRIDAY                     VALUE '3'.\n               88  MEMORIAL-DAY                    VALUE '4'.\n               88  INDEPENDENCE-DAY                VALUE '5'.\n               88  LABOR-DAY                       VALUE '6'.\n               88  THANKSGIVING-DAY                VALUE '7'.\n               88  THANKSGIVING-FRIDAY             VALUE '8'.\n               88  CHRISTMAS-DAY                   VALUE '9'.\n           05  YEAR-TYPE                 PIC X(01).\n               88  NOT-LEAP-YEAR                   VALUE '0'.\n               88  LEAP-YEAR                       VALUE '1'.\n           05  JULIAN-DATE               PIC 9(07) COMP-3.\n           05  GREGORIAN-MDY-DATE.\n               10  GREG-MDY-MONTH-DAY.\n                   15  GREG-MDY-MONTH    PIC 99.\n                   15  GREG-MDY-DAY      PIC 99.\n               10  GREG-MDY-YEAR         PIC 9(4).\n           05  GREGORIAN-YMD-DATE.\n               10  GREG-YMD-YEAR         PIC 9(4).\n               10  GREG-YMD-MONTH        PIC 99.\n               10  GREG-YMD-DAY          PIC 99.\n           05  LITERAL-DATE              PIC X(18).\n           05  JULIAN-SLASH.\n               10  JULIAN-SLASH-YEAR     PIC 9(4).\n               10  JULIAN-SLASH-SLASH    PIC X.\n               10  JULIAN-SLASH-DAY      PIC 999.\n           05  GREGORIAN-SLASH.\n               10  GREG-SLASH-MONTH      PIC 99.\n               10  GREG-SLASH-SLASH1     PIC X.\n               10  GREG-SLASH-DAY        PIC 99.\n               10  GREG-SLASH-SLASH2     PIC X.\n               10  GREG-SLASH-YEAR       PIC 9(4).\n           05  DAY-LITERAL               PIC X(09).\n           05  MONTH-LITERAL             PIC X(09).\n\n\n       01  PRT-RETURN-AREA.\n           05  PRT-LEAP-YEAR-LINE.\n               10  FILLER                 PIC X VALUE '('.\n               10  PRT-LEAP-YEAR          PIC X(4).\n               10  FILLER          PIC X(16) VALUE ' IS A LEAP YEAR.'.\n               10  FILLER                 PIC X VALUE ')'.\n           05  PRT-NOT-LEAP-YEAR-LINE.\n               10  FILLER                 PIC X VALUE '('.\n               10  PRT-NOT-LEAP-YEAR      PIC X(4).\n               10  FILLER      PIC X(20) VALUE ' IS NOT A LEAP YEAR.'.\n               10  FILLER                 PIC X VALUE ')'.\n           05  PRT-LITERAL-DATE-LINE.\n               10  PRT-DAY-LITERAL        PIC X(9).\n               10  FILLER                 PIC X VALUE ' '.\n               10  PRT-LITERAL-DATE       PIC X(18).\n               10  FILLER                 PIC X(4) VALUE SPACES.\n               10  PRT-LITERAL-LEAP-YEAR  PIC X(26).\n           05  PRT-HOLIDAY-INDICATOR-LINE.\n               10  FILLER       PIC X(9) VALUE 'HOLIDAY: '.\n               10  PRT-HOLIDAY-INDICATOR-MEANING PIC X(20).\n           05  PRT-DATES-LINE.\n               10  FILLER      PIC X(15) VALUE 'JULIAN SLASH = '.\n               10  PRT-JULIAN-SLASH       PIC X(8).\n               10  FILLER      PIC X(4) VALUE SPACES.\n               10  FILLER      PIC X(18) VALUE 'GREGORIAN SLASH = '.\n               10  PRT-GREGORIAN-SLASH    PIC X(10).\n\n       01  PRINT-MESSAGES.\n           05  BAD-CARD-TYPE              PIC X(45) VALUE\n                 'CARD BELOW HAS AN INVALID DATE TYPE IN COL 1:'.\n           05  BAD-CARD-DATE             PIC X(31) VALUE\n                 'CARD BELOW HAS AN INVALID DATE:'.\n           05  PRT-SEPARATOR-LINE.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n               10  FILLER     PIC X(12) VALUE '-.-.-.-.-.-.'.\n\n       01  LITERAL-TABLES.\n           05  SUB                       PIC S9(5) COMP-3.\n           05  DAY-OF-WEEK-LITERALS.\n               10  FILLER                PIC X(10) VALUE 'MONDAY)'.\n               10  FILLER                PIC X(10) VALUE 'TUESDAY)'.\n               10  FILLER                PIC X(10) VALUE 'WEDNESDAY)'.\n               10  FILLER                PIC X(10) VALUE 'THURSDAY)'.\n               10  FILLER                PIC X(10) VALUE 'FRIDAY)'.\n               10  FILLER                PIC X(10) VALUE 'SATURDAY)'.\n               10  FILLER                PIC X(10) VALUE 'SUNDAY)'.\n               10  FILLER                PIC X(10) VALUE '?????????)'.\n           05  DAY-OF-WEEK-LITERAL REDEFINES DAY-OF-WEEK-LITERALS\n                                         PIC X(10) OCCURS 8 TIMES.\n           05  HOLIDAY-LITERALS.\n               10  FILLER      PIC X(20) VALUE 'NEW YEARS DAY'.\n               10  FILLER      PIC X(20) VALUE '?????????????'.\n               10  FILLER      PIC X(20) VALUE 'GOOD FRIDAY'.\n               10  FILLER      PIC X(20) VALUE 'MEMORIAL DAY'.\n               10  FILLER      PIC X(20) VALUE 'INDEPENDENCE DAY'.\n               10  FILLER      PIC X(20) VALUE 'LABOR DAY'.\n               10  FILLER      PIC X(20) VALUE 'THANKSGIVING DAY'.\n               10  FILLER      PIC X(20) VALUE 'THANKSGIVING FRIDAY'.\n               10  FILLER      PIC X(20) VALUE 'CHRISTMAS DAY'.\n               10  FILLER      PIC X(20) VALUE 'NOT A HOLIDAY'.\n               10  FILLER      PIC X(20) VALUE '?????????????'.\n           05  HOLIDAY-LITERAL REDEFINES HOLIDAY-LITERALS\n                               PIC X(20) OCCURS 11 TIMES.\n       PROCEDURE DIVISION.\n           OPEN OUTPUT PRINT-FILE, INPUT CARD-FILE.\n           WRITE PRINT-FILE-RECORD FROM PRT-SEPARATOR-LINE.\n           PERFORM 1000-MAINLINE THRU 1000-EXIT\n               UNTIL NO-MORE-CARDS.\n           CLOSE PRINT-FILE, CARD-FILE.\n           GOBACK.\n\n       1000-MAINLINE.\n           MOVE 'N' TO ERROR-SWITCH.\n           READ CARD-FILE\n               AT END MOVE 'Y' TO EOF-SWITCH\n               GO TO 1000-EXIT.\n           IF END-CARD = 'END'\n               MOVE 'Y' TO EOF-SWITCH\n               GO TO 1000-EXIT.\n           MOVE LOW-VALUES TO GENLDAT2-RETURN-AREA\n           MOVE CARD-DATE-TYPE TO DATE-TYPE\n           IF DATE-TYPE = 'J'\n                   MOVE CARD-JULIAN-DATE TO JULIAN-DATE\n               ELSE IF DATE-TYPE = 'G'\n                   MOVE CARD-GREGORIAN-DATE TO GREGORIAN-MDY-DATE\n               ELSE\n                   MOVE 'Y' TO ERROR-SWITCH\n                   WRITE PRINT-FILE-RECORD FROM BAD-CARD-TYPE\n                   WRITE PRINT-FILE-RECORD FROM CARD-FILE-RECORD\n                   WRITE PRINT-FILE-RECORD FROM PRT-SEPARATOR-LINE\n                   GO TO 1000-EXIT.\n           CALL 'GENLDAT2' USING GENLDAT2-RETURN-AREA.\n           IF DATE-ERROR = ' '\n               NEXT SENTENCE\n           ELSE\n               WRITE PRINT-FILE-RECORD FROM BAD-CARD-DATE\n               WRITE PRINT-FILE-RECORD FROM CARD-FILE-RECORD\n               WRITE PRINT-FILE-RECORD FROM PRT-SEPARATOR-LINE\n               GO TO 1000-EXIT.\n           IF YEAR-TYPE = '0'\n               MOVE GREG-MDY-YEAR TO PRT-NOT-LEAP-YEAR\n               MOVE PRT-NOT-LEAP-YEAR-LINE TO PRT-LITERAL-LEAP-YEAR\n           ELSE\n               MOVE GREG-MDY-YEAR TO PRT-LEAP-YEAR\n               MOVE PRT-LEAP-YEAR-LINE TO PRT-LITERAL-LEAP-YEAR.\n           MOVE DAY-LITERAL TO PRT-DAY-LITERAL.\n           MOVE LITERAL-DATE TO PRT-LITERAL-DATE.\n           WRITE PRINT-FILE-RECORD FROM PRT-LITERAL-DATE-LINE.\n           MOVE JULIAN-SLASH TO PRT-JULIAN-SLASH.\n           MOVE GREGORIAN-SLASH TO PRT-GREGORIAN-SLASH.\n           WRITE PRINT-FILE-RECORD FROM PRT-DATES-LINE.\n           IF NOT-A-HOLIDAY\n               NEXT SENTENCE\n           ELSE\n               MOVE HOLIDAY-INDICATOR TO SUB\n               MOVE HOLIDAY-LITERAL (SUB) TO\n                   PRT-HOLIDAY-INDICATOR-MEANING\n               WRITE PRINT-FILE-RECORD FROM PRT-HOLIDAY-INDICATOR-LINE.\n           WRITE PRINT-FILE-RECORD FROM PRT-SEPARATOR-LINE.\n       1000-EXIT.\n           EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "DYNAMSB1": {"ttr": 5891, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00X\\x00\\x91\\x14/\\x01\\x02\\x00O\\x13&\\x00\\x16\\x00\\x16\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-05-22T00:00:00", "modifydate": "2002-01-04T13:26:58", "lines": 22, "newlines": 22, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. DYNAMSB1.\n000300 ENVIRONMENT DIVISION.\n000400 INPUT-OUTPUT SECTION.\n000500*\n000600 FILE-CONTROL.\n000700 DATA DIVISION.\n000800 FILE SECTION.\n000900*\n001000 WORKING-STORAGE SECTION.\n001100 77   FILLER         PIC X(35) VALUE 'START OF DYNAMSB1 W.S.'.\n001200 01   TOTAL-COUNT          PIC S9(5) COMP-3 VALUE ZERO.\n001300*\n001400 LINKAGE SECTION.\n001500 01   PASS-BACK            PIC S9(5) COMP-3.\n001600*\n001700 PROCEDURE DIVISION USING PASS-BACK.\n001800*\n001900 START-DYNAMSB1.\n002000      ADD 1 TO TOTAL-COUNT.\n002100      MOVE TOTAL-COUNT TO PASS-BACK.\n002200      GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "EMP": {"ttr": 5893, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x0e\\x00\\x06\\x00\\x99\\x14O\\x01\\x02\\x00O\\x13'\\x05'\\x02\\x9d\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.14", "flags": 0, "createdate": "1999-05-24T00:00:00", "modifydate": "2002-01-04T13:27:06", "lines": 1319, "newlines": 669, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    EMPEROR.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. EMPEROR GAME TRANSLITERATED FROM PL/I. THE TGET, TPUT,\n000500*         AND RAND SUBROUTINE CALLS WERE CONVERTED TO USE IN-LINE\n000600*         PERFORMED ROUTINES RATHER THAN CALLS TO EXTERNAL\n000700*         ASSEMBLER LANGUAGE ROUTINES. IN ADDITION, THE USE OF\n000800*         TGET AND TPUT WAS CHANGED TO SYSIN READS AND SYSPRINT\n000900*         WRITES. OTHER CHANGES WERE MADE AS NECESSARY TO FIT\n001000*         THE COBOL LANGUAGE.\n001100 ENVIRONMENT DIVISION.\n001200 CONFIGURATION SECTION.\n001300 INPUT-OUTPUT SECTION.\n001400 FILE-CONTROL.\n001500     SELECT INPUT-FILE ASSIGN TO SYSIN.\n001600     SELECT PRINT-FILE ASSIGN TO SYSPRINT.\n001700 DATA DIVISION.\n001800 FILE SECTION.\n001900*\n002000 FD  INPUT-FILE\n002100     BLOCK CONTAINS 0 RECORDS\n002200     RECORD CONTAINS 80 CHARACTERS\n002300     RECORDING MODE IS F\n002400     LABEL RECORDS ARE STANDARD.\n002500 01  INPUT-RECORD.\n002600     05 INPUT-BYTE            PIC X OCCURS 80 INDEXED BY IX, IY.\n002700*\n002800 FD  PRINT-FILE\n002900     BLOCK CONTAINS 0 RECORDS\n003000     RECORD CONTAINS 80 CHARACTERS\n003100     RECORDING MODE IS F\n003200     LABEL RECORDS ARE STANDARD.\n003300 01  PRINT-RECORD             PIC X(80).\n003310 01  PRINT-REDEFINITION.\n003320     05  PRINT-BYTE           PIC X OCCURS 80\n003330                              INDEXED BY PX, PY.\n003400*\n003500 WORKING-STORAGE SECTION.\n003600 01  MISCELLANEOUS-FIELDS.\n003700     05  INPUT-NUMERIC-SWITCH PIC X VALUE 'N'.\n003800         88  INPUT-IS-NOT-NUMERIC VALUE 'N'.\n003900         88  INPUT-IS-NUMERIC     VALUE 'Y'.\n003910     05  LAST-BYTE-MOVED-SWITCH PIC X VALUE 'N'.\n003920         88  LAST-BYTE-MOVED-WAS-BLANK VALUE 'Y'.\n003930         88  LAST-BYTE-MOVED-WAS-SOLID VALUE 'N'.\n004000     05  L                    PIC X.\n004100     05  IN-NUMBER            PIC 9(15).\n004200     05  IN-DIGIT             REDEFINES IN-NUMBER\n004210                              PIC S9 OCCURS 15 INDEXED BY IZ.\n004300     05  PEOPLE               PIC S9(5) COMP-3 VALUE +0.\n004400     05  Y-ARS                PIC S9(3) COMP-3 VALUE +0.\n004500     05  IMMIGRANTS           PIC S9(5) COMP-3 VALUE +0.\n004600     05  GRAIN                PIC S9(9) COMP-3 VALUE +0.\n004700     05  ACRES                PIC S9(9) COMP-3 VALUE +0.\n004800     05  RATS                 PIC S9(9) COMP-3 VALUE +0.\n004900     05  FARMLAND             PIC S9(9) COMP-3 VALUE +0.\n005000     05  YIELD                PIC S9(4)V9 COMP-3 VALUE +0.\n005100     05  FERT-AMT             PIC S9(4)V9 COMP-3 VALUE +0.\n005200     05  FOOD                 PIC S9(9) COMP-3 VALUE +0.\n005300     05  STARVED              PIC S9(5) COMP-3 VALUE +0.\n005400     05  PLAGUE               PIC S9(5) COMP-3 VALUE +0.\n005500     05  R                    PIC S9(9) COMP-3 VALUE +0.\n005600     05  X                    PIC S9(5) COMP-3 VALUE +0.\n005700     05  FIRST-TIME-SWITCH    PIC X VALUE 'Y'.\n005800         88 FIRST-TIME        VALUE 'Y'.\n005900     05  FERT-SW              PIC X VALUE 'N'.\n005910         88  FERTILIZER-WANTED VALUE 'Y'.\n005920         88  NO-FERTILIZER-WANTED VALUE 'N'.\n006000     05  PLAG-SW              PIC X VALUE 'N'.\n006010         88  NO-PLAGUE-THREAT VALUE 'N'.\n006020         88  PLAGUE-THREAT    VALUE 'Y'.\n006100     05  BIN-NUMBER           PIC S9(9) COMP-3 VALUE +0.\n006200     05  NBR-RAND             PIC S9(6) COMP-3.\n006300     05  RAND-NBR REDEFINES NBR-RAND PIC SV9(6) COMP-3.\n006400     05  WORK-TIME            PIC 9(8).\n006500     05  FILLER REDEFINES WORK-TIME.\n006600         10  HOUR-TENS        PIC 9.\n006700         10  HOUR-UNITS       PIC 9.\n006800         10  MIN-TENS         PIC 9.\n006900         10  MIN-UNITS        PIC 9.\n007000         10  SEC-TENS         PIC 9.\n007100         10  SEC-UNITS        PIC 9.\n007200         10  SEC-TENTHS       PIC 9.\n007300         10  SEC-HUNDREDTHS   PIC 9.\n007400     05  WORK-RAND            PIC 9(6).\n007500     05  FILLER REDEFINES WORK-RAND.\n007600         10  RAND-1           PIC 9.\n007700         10  RAND-2           PIC 9.\n007800         10  RAND-3           PIC 9.\n007900         10  RAND-4           PIC 9.\n008000         10  RAND-5           PIC 9.\n008100         10  RAND-6           PIC 9.\n008200     05  DIFF                 PIC S9(9) COMP-3 VALUE +0.\n008300     05  COMPUTED-VALUE       PIC S9(5) COMP-3 VALUE +0.\n008400     05  TRADE                PIC S9(9) COMP-3 VALUE +0.\n008500     05  SERUM                PIC S9(5) COMP-3 VALUE +0.\n008600     05  GAMES-TABLE.\n008700         10  FILLER           PIC X(80)\n008800                              VALUE 'PING PONG FOR A YEAR'.\n008900         10  FILLER           PIC X(80)\n009000                              VALUE 'BRIDGE FOR A YEAR'.\n009100         10  FILLER           PIC X(80)\n009200                          VALUE 'LITTLE SALLY SAUCER FOR A YEAR'.\n009300         10  FILLER           PIC X(80)\n009400                              VALUE 'MONOPLY FOR A YEAR'.\n009500         10  FILLER           PIC X(80)\n009600                              VALUE 'MARBLES FOR A YEAR'.\n009700         10  FILLER           PIC X(80)\n009800                              VALUE 'SPIN THE BOTTLE FOR A YEAR'.\n009900         10  FILLER           PIC X(80)\n010000                              VALUE 'PINOCHLE FOR A YEAR'.\n010100         10  FILLER           PIC X(80)\n010200                              VALUE 'LEAP FROG FOR A YEAR'.\n010300         10  FILLER           PIC X(80)\n010400                              VALUE 'STRIP POKER FOR A YEAR'.\n010500         10  FILLER           PIC X(80)\n010600                              VALUE 'RUN-SHEEP-RUN FOR A YEAR'.\n010700     05  GAMES                REDEFINES GAMES-TABLE\n010800                              PIC X(80) OCCURS 10.\n010900     05  INNOCULATED          PIC S9(9) COMP-3 VALUE +0.\n011000     05  TOT-IMM              PIC S9(9) COMP-3 VALUE +0.\n011100     05  TOT-STARVED          PIC S9(9) COMP-3 VALUE +0.\n011200     05  TOT-PLAGUED          PIC S9(9) COMP-3 VALUE +0.\n011300     05  ACRES-BOT            PIC S9(9) COMP-3 VALUE +0.\n011400     05  ACRES-SOLD           PIC S9(9) COMP-3 VALUE +0.\n011500     05  ACRES-START          PIC S9(9) COMP-3 VALUE +0.\n011600     05  PEOPL-START          PIC S9(7) COMP-3 VALUE +0.\n011700     05  TOT-FERT             PIC S9(7) COMP-3 VALUE +0.\n011800     05  PLANTED              PIC S9(9) COMP-3 VALUE +0.\n011900     05  HARVESTD             PIC S9(9) COMP-3 VALUE +0.\n012000     05  GRAIN-PLANT          PIC S9(7) COMP-3 VALUE +0.\n012100     05  HARVEST-LST          PIC S9(7) COMP-3 VALUE +0.\n012200     05  GRAIN-BUY            PIC S9(9) COMP-3 VALUE +0.\n012300     05  GRAIN-SOLD           PIC S9(9) COMP-3 VALUE +0.\n012400     05  GRAIN-START          PIC S9(5) COMP-3 VALUE +0.\n012500     05  LAST-SHOT            PIC S9(5) COMP-3 VALUE +0.\n012600     05  TOTL-SHOT            PIC S9(7) COMP-3 VALUE +0.\n012700     05  ROBBED               PIC S9(5) COMP-3 VALUE +0.\n012800     05  THIS-SHOT            PIC S9(5) COMP-3 VALUE +0.\n012900 01  PRINT-FIELDS.\n013000     05  HDR1                 PIC X(34) VALUE\n013100                            'F I S  ECONOMETRIC MODELING SYSTEM'.\n013200     05  HDR2                 PIC X(34) VALUE\n013300                            '=================================='.\n013400     05  HDR3                 PIC X(33) VALUE\n013500                            'DO YOU NEED INSTRUCTIONS? Y OR N?'.\n013600     05  HDR4                 PIC X(37) VALUE\n013700                         'YOU ARE THE EMPEROR OF \"SOMEWHEREIA\"!'.\n013800     05  HDR5                 PIC X(41) VALUE\n013900                     'WHO WILL REIGN FOR A MAXIMUM OF 25 YEARS,'.\n014000     05  HDR6                 PIC X(42) VALUE\n014100                   'AND WILL BE GIVEN PEOPLE, LAND, AND GRAIN.'.\n014200     05  HDR7                 PIC X(36) VALUE\n014300                          'YOUR GOAL IS TO INCREASE YOUR EMPIRE'.\n014400     05  HDR8                 PIC X(36) VALUE\n014500                          'BY HAVING YOUR PEOPLE FARM YOUR LAND'.\n014600     05  HDR9                 PIC X(42) VALUE\n014700                    'TO PRODUCE THE GRAIN FOR YOUR USE AS FOOD,'.\n014800     05  HDR10                PIC X(38) VALUE\n014900                        'SEED FOR PLANTING, AND THE TRADE BASIS'.\n015000     05  HDR11                PIC X(36) VALUE\n015100                          'THAT MAY BE USED TO BUY MORE LAND TO'.\n015200     05  HDR12                PIC X(40) VALUE\n015300                      'PRODUCE MORE GRAIN TO BUY MORE LAND, ETC'.\n015400     05  HDR13                PIC X(40) VALUE\n015500                      'SIMPLE, RIGHT? THEN LETS GET STARTED....'.\n015600     05  STATUS-DASHES        PIC X(35) VALUE\n015700                           '-----------------------------------'.\n015800     05  STATUS-1             PIC X(35) VALUE\n015900                           'STATE OF YOUR EMPIRE AFTER ONE YEAR'.\n016000     05  STATUS-2.\n016100         10  FILLER           PIC X(26) VALUE\n016200                                    'STATE OF YOUR EMPIRE AFTER'.\n016300         10  STATUS-2-YARS    PIC ZZ9.\n016400         10  FILLER           PIC X(6) VALUE ' YEARS'.\n016500     05  STATUS-3.\n016600         10  FILLER           PIC X(11) VALUE 'THERE WERE '.\n016700         10  STATUS-3-IMMIGRANTS  PIC ZZ,ZZ9.\n016800         10  FILLER           PIC X(11) VALUE ' IMMIGRANTS'.\n016900     05  STATUS-4.\n017000         10  STATUS-4-STARVED PIC ZZ,ZZ9.\n017100         10  FILLER           PIC X(25) VALUE\n017200                                     ' PEOPLE STARVED TO DEATH.'.\n017300     05  STATUS-5             PIC X(33) VALUE\n017400                             'BUT THE WORST IS YET TO COME. . .'.\n017500     05  STATUS-6             PIC X(45) VALUE\n017600                 'THE PLAGUE WIPED OUT YOUR ENTIRE POPULATION!!'.\n017700     05  STATUS-7             PIC X(25) VALUE\n017800                                     'BETTER FORTUNE NEXT TIME!'.\n017900     05  STATUS-8.\n018000         10  STATUS-8-PLAGUE  PIC ZZ,ZZ9.\n018010         10  FILLER           PIC X(34) VALUE\n018020                            ' PEOPLE WERE KILLED BY THE PLAGUE.'.\n018100     05  STATUS-9.\n018200         10  FILLER           PIC X(38) VALUE\n018300                        'THEREFORE, YOUR CURRENT POPULATION IS '.\n018400         10  STATUS-9-PEOPLE  PIC ZZ,ZZ9.\n018500                  10  FILLER           PIC X(8) VALUE ' PEOPLE,'.\n018600     05  STATUS-10.\n018700         10  FILLER           PIC X(27) VALUE\n018800                                   'YOUR CURRENT POPULATION IS '.\n018900         10  STATUS-10-PEOPLE PIC ZZ,ZZ9.\n019000         10  FILLER           PIC X(8) VALUE ' PEOPLE,'.\n019100     05  STATUS-11.\n019200         10  FILLER           PIC X(11) VALUE 'AND YOU OWN'.\n019300         10  STATUS-11-ACRES  PIC ZZZ,ZZZ,ZZ9.\n019400         10  FILLER           PIC X(19) VALUE\n019500                                          ' ACRES, AND CONTROL'.\n019600         10  STATUS-11-GRAIN  PIC ZZZ,ZZZ,ZZ9.\n019700         10  FILLER           PIC X(18) VALUE\n019800                                           ' BUSHELS OF GRAIN.'.\n019900     05  STATUS-12            PIC X(47) VALUE\n020000               'YOUR SITUATION IS HOPELESS. THE SOUNDS YOU HEAR'.\n020100     05  STATUS-13            PIC X(47) VALUE\n020200               'ARE THE SHOUTED CURSES AS THE PEOPLE LEAVE YOUR'.\n020300     05  STATUS-14            PIC X(16) VALUE 'STINKING EMPIRE!'.\n020400     05  STATUS-15.\n020500         10  FILLER           PIC X(8) VALUE 'FARMING '.\n020600         10  STATUS-15-ACRES  PIC ZZZ,ZZZ,ZZ9.\n020700         10  FILLER           PIC X(20) VALUE\n020800                                          ' ACRES, AND STORING '.\n020900         10  STATUS-15-GRAIN  PIC ZZZ,ZZZ,ZZ9.\n021000         10  FILLER           PIC X(9) VALUE ' BUSHELS'.\n021100     05  STATUS-16.\n021200         10  FILLER           PIC X(9) VALUE 'YOU HAVE '.\n021300         10  STATUS-16-ACRES  PIC ZZZ,ZZZ,ZZ9.\n021400         10  FILLER           PIC X(15) VALUE ' ACRES OF LAND'.\n021500     05  STATUS-17.\n021600         10  FILLER           PIC X(25) VALUE\n021700                                     'ALL YOUR LAND WOULD BRING'.\n021800         10  STATUS-17-GRAIN  PIC ZZZ,ZZZ,ZZ9.\n021900         10  FILLER           PIC X(18) VALUE\n022000                                            ' BUSHELS OF GRAIN.'.\n022100     05  STATUS-18.\n022200         10  FILLER           PIC X(9) VALUE 'YOU HAVE '.\n022300         10  STATUS-18-GRAIN  PIC ZZZ,ZZZ,ZZ9.\n022400         10  FILLER           PIC X(30) VALUE\n022500                               ' BUSHELS OF GRAIN IN STORAGE, '.\n022600     05  STATUS-19.\n022700         10  FILLER           PIC X(5) VALUE ' AND '.\n022800         10  STATUS-19-PEOPLE PIC ZZ,ZZ9.\n022900         10  FILLER           PIC X(16) VALUE\n023000                                            ' PEOPLE TO FEED.'.\n023100     05  STATUS-20.\n023200         10  FILLER           PIC X(12) VALUE 'THAT LEAVES '.\n023300         10  STATUS-20-GRAIN  PIC ZZZ,ZZZ,ZZ9.\n023400         10  FILLER           PIC X(12) VALUE ' IN STORAGE.'.\n023500     05  STATUS-21.\n023600         10  FILLER           PIC X(9) VALUE 'YOU HAVE '.\n023700         10  STATUS-21-ACRES  PIC ZZZ,ZZZ,ZZ9.\n023800         10  FILLER           PIC X(19) VALUE\n023900                                           ' ACRES OF LAND, AND'.\n024000         10  STATUS-21-PEOPLE PIC ZZ,ZZ9.\n024100         10  FILLER           PIC X(19) VALUE\n024200                                           ' PEOPLE AS FARMERS.'.\n024300     05  CONTINUE-1           PIC X(32) VALUE\n024400                              'DO YOU WANT TO CONTINUE? Y OR N?'.\n024500     05  SO-LONG-1            PIC X(28) VALUE\n024600                                  'SO LONG, SUCCESSFUL. . . . .'.\n024700     05  GRAIN-1.\n024800         10  FILLER           PIC X(9) VALUE 'YOU HAVE '.\n024900         10  GRAIN-1-GRAIN    PIC ZZZ,ZZZ,ZZ9.\n025000         10  FILLER           PIC X(29) VALUE\n025100                                 ' BUSHELS OF GRAIN IN STORAGE.'.\n025200     05  LAND-1.\n025300         10  FILLER           PIC X(19) VALUE\n025400                                           'LAND IS TRADING FOR'.\n025500         10  LAND-1-VALUE     PIC ZZ,ZZ9.\n025600         10  FILLER           PIC X(27) VALUE\n025700                                   ' BUSHELS OF GRAIN PER ACRE.'.\n025800     05  LAND-2               PIC X(45) VALUE\n025900                 'UNFORTUNATELY, YOU ARE IN NO POSITION TO BUY!'.\n026000     05  BUY-1.\n026100         10  FILLER                 PIC X(27) VALUE\n026200                                  'THE MAXIMUM YOU MAY BUY IS '.\n026300         10  BUY-1-ACRES            PIC ZZZ,ZZZ,ZZ9.\n026400         10  FILLER                 PIC X(7) VALUE ' ACRES.'.\n026500     05  BUY-2                      PIC X(37) VALUE\n026600                        'HOW MANY ACRES WOULD YOU LIKE TO BUY?'.\n026700     05  BUY-3                PIC X(28) VALUE\n026800                                 'SORRY, I DONT BUY ON MARGIN.'.\n026900     05  BUY-4.\n027000         10  FILLER           PIC X(30) VALUE\n027100                               'I WILL BUY AS MUCH AS YOU OWN,'.\n027200         10  FILLER           PIC X(24) VALUE\n027300                                     ' BUT NO MORE THAN THAT!!'.\n027400     05  NUMBERS-ONLY         PIC X(22) VALUE\n027500                                        'NUMERICS ONLY, PLEASE.'.\n027600     05  NICE-TRY             PIC X(29) VALUE\n027700                                'NICE TRY THERE, EMPEROR BABY.'.\n027800     05  TRADING-1.\n027900         10  FILLER           PIC X(24) VALUE\n028000                                     'YOUR LAND TRADING LEAVES'.\n028100         10  TRADING-1-GRAIN  PIC ZZZ,ZZZ,ZZ9.\n028200         10  FILLER           PIC X(18) VALUE\n028300                                           ' BUSHELS OF GRAIN.'.\n028400     05  HOW-MANY-SELL        PIC X(38) VALUE\n028500                        'HOW MANY ACRES WOULD YOU LIKE TO SELL?'.\n028600     05  GROWL-1.\n028700         10  FILLER           PIC X(39) VALUE\n028800                       'THAT SOUND YOU HEAR IS THE GROWLING OF '.\n028900         10  GROWL-1-PEOPLE   PIC ZZ,ZZ9.\n029000         10  FILLER           PIC X(17) VALUE\n029100                                             ' HUNGRY STOMACHS!'.\n029200     05  NO-GRAIN             PIC X(41) VALUE\n029300                     'YOU HAVE NO GRAIN TO SET ASIDE FOR FOOD!!'.\n029400     05  HOW-MANY-GRAIN.\n029500         10  FILLER           PIC X(35) VALUE\n029600                           'HOW MANY BUSHELS OF GRAIN SHOULD BE'.\n029700         10  FILLER           PIC X(20) VALUE\n029800                                          ' SET ASIDE FOR FOOD?'.\n029900     05  NOT-ENOUGH-GRAIN     PIC X(48) VALUE\n030000             'YOU DONT HAVE ENOUGH GRAIN TO BUY THAT MUCH LAND'.\n030100     05  INSULTED             PIC X(51) VALUE\n030200           'YOU CANT SET ASIDE MORE GRAIN THAN YOU HAVE, DUMMY!'.\n030300     05  RECANTED             PIC X(43) VALUE\n030400                   'I MEAN YOUR EMPORERSHIP (HE MUMBLED HUMBLY)'.\n030500     05  GENOCIDE             PIC X(26) VALUE\n030600                                    'THATS GENOCIDE, YOU SWINE!'.\n030700     05  APOCALYPSE           PIC X(48) VALUE\n030800              'BEWARE OF THE FOUR HORSEMEN OF THE APOCALYPSE...'.\n030900     05  NO-LAND-1            PIC X(25) VALUE\n031000                                    'YOU HAVE NO LAND TO SELL!'.\n031100     05  NO-LAND-2            PIC X(39) VALUE\n031200                       'YOU HAVE NO FARMLAND! SORRY ABOUT THAT!'.\n031300     05  NO-SEED              PIC X(30) VALUE\n031400                                'BUT YOU HAVE NO SEED TO PLANT!'.\n031500     05  HOW-MANY-ACRES       PIC X(35) VALUE\n031600                           'HOW MANY ACRES DO YOU WANT TO FARM?'.\n031700     05  DONT-UNDERSTAND      PIC X(50) VALUE\n031800            'I DONT THINK YOU QUITE UNDERSTAND, EMPEROR, SIR...'.\n031900     05  CANT-FARM            PIC X(39) VALUE\n032000                       'YOU CANNOT FARM MORE LAND THAN YOU OWN!'.\n032100     05  NOT-ENOUGH-PEOPLE    PIC X(51) VALUE\n032200           'YOU DONT HAVE ENOUGH PEOPLE TO FARM THAT MUCH LAND!'.\n032300     05  NOT-ENOUGH-SEED      PIC X(49) VALUE\n032400             'YOU DONT HAVE ENOUGH SEED TO FARM THAT MUCH LAND!'.\n032500     05  FERTILIZER-1.\n032600         10  FILLER           PIC X(26) VALUE\n032700                                    'FERTILIZER IS SELLING FOR '.\n032800         10  FERTILIZER-1-PRICE PIC Z,ZZ9.9.\n032900         10  FILLER           PIC X(14) VALUE ' BUSHELS/ACRE.'.\n033000     05  WISH-TO-ENHANCE      PIC X(47) VALUE\n033100               'DO YOU WISH TO ENHANCE YOUR CROP YIELD? Y OR N?'.\n033200     05  NO-CREDIT            PIC X(51) VALUE\n033300          'NICE TRY EMP, BUT I DONT SELL THE MANURE ON CREDIT!'.\n033400     05  GRAIN-ROT            PIC X(47) VALUE\n033500              'A RARE GRAIN ROT ATTACKS YOUR GRAIN IN STORAGE!'.\n033600     05  ONLY-SAVED-1.\n033700         10  FILLER           PIC X(5) VALUE 'ONLY '.\n033800         10  ONLY-SAVED-1-GRAIN PIC ZZZ,ZZZ,ZZ9.\n033900         10  FILLER           PIC X(24) VALUE\n034000                                     ' BUSHELS COULD BE SAVED.'.\n034100     05  NO-SHOTS-NEEDED      PIC X(47) VALUE\n034200              'PLAGUE INNOCULATIONS ARE UNNECESSARY THIS YEAR,'.\n034300     05  IMMUNIZED            PIC X(35) VALUE\n034400                          'ALL YOUR EMPIRE IS STILL IMMUNIZED!'.\n034500     05  DISTRIBUTING-1       PIC X(45) VALUE\n034600                 'U.N. WORLD HEALTH IS DISTRIBUTING BLACK DEATH'.\n034700     05  DISTRIBUTING-2.\n034800         10  FILLER           PIC X(17) VALUE\n034900                                             'INNOCULATIONS AT '.\n035000         10  DISTRIBUTING-2-SERUM PIC ZZ,ZZ9.\n035100         10  FILLER           PIC X(28) VALUE\n035200                                  ' BUSHELS OF GRAIN PER PERSON'.\n035300     05  CANT-AFFORD-SHOTS-1  PIC X(47) VALUE\n035400               'UNFORTUNATELY, YOU CANT AFFORD IT....TSK....TSK'.\n035500     05  CAN-AFFORD-SHOTS-1.\n035600         10  FILLER           PIC X(29) VALUE\n035700                                  'YOU CAN AFFORD TO INNOCULATE'.\n035800         10  CAN-AFFORD-SHOTS-1-PEOPLE PIC ZZ,ZZ9.\n035900         10  FILLER           PIC X(8) VALUE ' PEOPLE.'.\n036000     05  STILL-IMMUNIZED-1.\n036100         10  FILLER           PIC X(9) VALUE 'HOWEVER, '.\n036200         10  STILL-IMMUNIZED-1-LAST PIC ZZ,ZZ9.\n036300         10  FILLER           PIC X(36) VALUE\n036400                          ' OF YOUR PEOPLE ARE STILL IMMUNIZED,'.\n036500     05  STILL-IMMUNIZED-2.\n036600         10  FILLER           PIC X(18) VALUE\n036700                                            'AND YOU NEED ONLY '.\n036800         10  STILL-IMMUNIZED-2-REST PIC ZZ,ZZ9.\n036900         10  FILLER           PIC X(12) VALUE ' MORE SHOTS.'.\n037000     05  HOW-MANY-GET         PIC X(22) VALUE\n037100                                        'HOW MANY GET THE SHOT?'.\n037200     05  EASY-TO-GAMBLE       PIC X(52) VALUE\n037300         'ITS EASY TO GAMBLE WITH SOMEONE ELSES LIFE, ISNT IT?'.\n037400     05  GRAIN-LEFT-1.\n037500         10  FILLER           PIC X(12) VALUE 'THAT LEAVES '.\n037600         10  GRAIN-LEFT-1-GRAIN PIC ZZZ,ZZZ,ZZ9.\n037700         10  FILLER           PIC X(16) VALUE\n037800                                              ' BUSHELS STORED.'.\n037900     05  GRAIN-LEFT-2.\n038000         10  FILLER           PIC X(13) VALUE 'LEAVING ONLY '.\n038100         10  GRAIN-LEFT-2-GRAIN PIC ZZZ,ZZZ,ZZ9.\n038200         10  FILLER           PIC X(25) VALUE\n038300                                    ' BUSHELS OF GRAIN STORED.'.\n038400     05  NOTHING-FARMED.\n038500         10  FILLER           PIC X(45) VALUE\n038600                 'WITH NO LAND BEING FARMED, THE PEOPLE PLAYED '.\n038700         10  NOTHING-FARMED-GAME PIC X(16).\n038800     05  RATS-OVERRAN         PIC X(39) VALUE\n038900                       'WHILE THE RATS OVERRAN YOUR GRAINERIES.'.\n039000     05  RATS-ATE-CATS        PIC X(48) VALUE\n039100              'WITH NOTHING LEFT TO EAT, THE RATS ATE THE CATS!'.\n039200     05  WORKING-AS-TOLD      PIC X(56) VALUE\n039300     'THE PEOPLE ARE WORKING UNDER YOUR PRESCRIBED CONDITIONS.'.\n039400     05  REVOLTED             PIC X(52) VALUE\n039500         'A REVOLT OF THE PEASANTRY HAS OVERTHROWN YOUR REIGN!'.\n039600     05  LUCKY-TO-ESCAPE      PIC X(45) VALUE\n039700                'YOU WERE LUCKY TO ESCAPE WITH YOUR LIFE . . .'.\n039800     05  HERE-ARE-FRUITS      PIC X(41) VALUE\n039900                    'HERE ARE THE FRUITS OF THEIR LABOR. . . .'.\n040000     05  OVER-FERTILIZED      PIC X(49) VALUE\n040100             'YOUR OVER-FERTILIZED LAND CAUSES A CROP BURN-OUT!'.\n040200     05  UNABLE-TO-SAVE       PIC X(41) VALUE\n040300                     'YOU WERE UNABLE TO SAVE ANY OF YOUR CROP.'.\n040400     05  YIELD-PER-ACRE.\n040500         10  FILLER           PIC X(24) VALUE\n040600                                      'YOUR YIELD PER ACRE WAS '.\n040700         10  YIELD-PER-ACRE-YIELD PIC ZZ,ZZ9.\n040800         10  FILLER           PIC X(9) VALUE ' BUSHELS.'.\n040900     05  TOTAL-HARVEST.\n041000         10  FILLER           PIC X(23) VALUE\n041100                                        'FOR A TOTAL HARVEST OF'.\n041200         10  TOTAL-HARVEST-BUSHELS PIC ZZZ,ZZZ,ZZ9.\n041300         10  FILLER           PIC X(9) VALUE ' BUSHELS.'.\n041400     05  LOCUSTS-ATE          PIC X(43) VALUE\n041500                  'A SWARM OF LOCUSTS DEVASTATED YOUR HARVEST!'.\n041600     05  RATS-ATE-1           PIC X(38) VALUE\n041700                       'BUT THE RATS ATE IT ALL. (THOSE PIGS)!'.\n041800     05  RATS-ATE-2.\n041900         10  FILLER           PIC X(17) VALUE\n042000                                            'BUT THE RATS ATE '.\n042100         10  RATS-ATE-2-BUSHELS PIC ZZZ,ZZZ,ZZ9.\n042200         10  FILLER           PIC X(9) VALUE ' BUSHELS.'.\n042300     05  PEASANTS-STEALING    PIC X(53) VALUE\n042400        'YOUR UNDERFED PEASANTS ARE PILFERING YOUR GRAINERIES.'.\n042500     05  ATE-SHOES            PIC X(51) VALUE\n042600          'WITH NO FOOD AVAILABLE, THE PEOPLE ATE THEIR SHOES.'.\n042700     05  STOLE-GRAIN.\n042800         10  FILLER           PIC X(11) VALUE 'THEY STOLE '.\n042900         10  STOLE-GRAIN-BUSHELS PIC ZZZ,ZZZ,ZZ9.\n043000         10  FILLER           PIC X(18) VALUE\n043100                                           ' BUSHELS FROM YOU!'.\n043200     05  FINAL-1              PIC X(53) VALUE\n043300        'SINCE YOU NOW HAVE MORE THAN 1,000,000 ACRES OF LAND,'.\n043400     05  FINAL-2              PIC X(47) VALUE\n043500              'AND/OR MORE THAN 4,000,000 BUSHELS OF GRAIN . .'.\n043600     05  FINAL-3              PIC X(41) VALUE\n043700                     'YOU FAR SURPASSED ALL ROYAL EXPECTATIONS!'.\n043800     05  FINAL-4              PIC X(51) VALUE\n043900           'AND YOUR IMMENSE EMPIRE IS BECOMING TOO TYRANNICAL.'.\n044000     05  FINAL-5              PIC X(56) VALUE\n044100      'AFTER 25 YEARS, YOU HAVE EXCEEDED YOUR ROYAL USEFULNESS.'.\n044200     05  FINAL-6              PIC X(48) VALUE\n044300              'IN AN EFFORT TO MAINTAIN A HAPPY POPULATION. . .'.\n044400     05  FINAL-7              PIC X(53) VALUE\n044500         'YOU DECIDE TO ABDICATE IN FAVOR OF THE PRIME MINISTER'.\n044600     05  FINAL-8              PIC X(37) VALUE\n044700                         'THE KING IS DEAD! LONG LIVE THE KING!'.\n044800     05  FINAL-9.\n044900         10  FILLER           PIC X(15) VALUE 'YOU BEGAN WITH'.\n045000         10  FINAL-9-PEOPLE   PIC ZZ,ZZ9.\n045100         10  FILLER           PIC X(9) VALUE ' PEOPLE,'.\n045200     05  FINAL-10.\n045300         10  FILLER           PIC X(11) VALUE 'THERE WERE '.\n045400         10  FINAL-10-IMMIGRANTS PIC ZZ,ZZ9.\n045500         10  FILLER           PIC X(12) VALUE ' IMMIGRANTS,'.\n045600     05  FINAL-11.\n045700         10  FILLER           PIC X(4) VALUE 'BUT '.\n045800         10  FINAL-11-STARVED PIC ZZ,ZZ9.\n045900         10  FILLER           PIC X(18) VALUE\n046000                                            ' STARVED TO DEATH.'.\n046100     05  FINAL-12.\n046200         10  FILLER           PIC X(4) VALUE 'AND '.\n046300         10  FINAL-12-PLAGUE  PIC ZZ,ZZ9.\n046400         10  FILLER           PIC X(20) VALUE\n046500                                          ' DIED OF THE \"CRUD\".'.\n046600     05  FINAL-13.\n046700         10  FILLER           PIC X(12) VALUE 'EVEN THOUGH '.\n046800         10  FINAL-13-SHOTS   PIC ZZ,ZZ9.\n046900         10  FILLER           PIC X(11) VALUE ' HAD SHOTS.'.\n047000     05  FINAL-14.\n047100         10  FILLER           PIC X(8) VALUE 'LEAVING '.\n047200         10  FINAL-14-PEOPLE  PIC ZZ,ZZ9.\n047300         10  FILLER           PIC X(18) VALUE\n047400                                            ' ALIVE AT THE END.'.\n047500     05  FINAL-15             PIC X(48) VALUE\n047600              'AS A RESULT OF YOUR LAND TRADING ENTERPRISES....'.\n047700     05  FINAL-16.\n047800         10  FILLER           PIC X(17) VALUE\n047900                                     'YOU STARTED WITH '.\n048000         10  FINAL-16-ACRES   PIC ZZZ,ZZZ,ZZ9.\n048100         10  FILLER           PIC X(24) VALUE\n048200                                 ' ACRES OF LAND, AND WITH'.\n048300     05  FINAL-17.\n048400         10  FINAL-17-GRAIN   PIC ZZZ,ZZZ,ZZ9.\n048500         10  FILLER           PIC X(18) VALUE\n048600                                      ' BUSHELS OF GRAIN,'.\n048700     05  FINAL-18.\n048800         10  FILLER           PIC X(11) VALUE 'YOU BOUGHT '.\n048900         10  FINAL-18-ACRES   PIC ZZZ,ZZZ,ZZ9.\n049000         10  FILLER           PIC X(14) VALUE ' ACRES, PAYING'.\n049100     05  FINAL-19.\n049200         10  FINAL-19-BUSHELS PIC ZZZ,ZZZ,ZZ9.\n049300         10  FILLER           PIC X(9) VALUE ' BUSHELS,'.\n049400     05  FINAL-20.\n049500         10  FILLER           PIC X(13) VALUE 'AND YOU SOLD '.\n049600         10  FINAL-20-ACRES   PIC ZZZ,ZZZ,ZZ9.\n049700         10  FILLER           PIC X(17) VALUE\n049800                                             ' ACRES, RECEIVING'.\n049900     05  FINAL-21.\n050000         10  FINAL-21-BUSHELS PIC ZZZ,ZZZ,ZZ9.\n050100         10  FILLER           PIC X(9) VALUE ' BUSHELS,'.\n050200     05  FINAL-22.\n050300         10  FILLER           PIC X(15) VALUE 'ENDING UP WITH '.\n050400         10  FINAL-22-ACRES   PIC ZZZ,ZZZ,ZZ9.\n050500         10  FILLER           PIC X(16) VALUE ' ACRES, AND WITH'.\n050600     05  FINAL-23.\n050700         10  FINAL-23-BUSHELS PIC ZZZ,ZZZ,ZZ9.\n050800         10  FILLER           PIC X(20) VALUE\n050900                                          ' BUSHELS IN STORAGE.'.\n051000     05  FINAL-24.\n051100         10  FILLER           PIC X(44) VALUE\n051200                  'OVER THE SEASONS OF YOUR IMPERIAL REIGN, OF '.\n051300         10  FINAL-24-YEARS   PIC ZZ9.\n051400         10  FILLER           PIC X(7) VALUE ' YEARS,'.\n051500     05  FINAL-25.\n051600         10  FILLER           PIC X(12) VALUE 'YOU PLANTED '.\n051700         10  FINAL-25-ACRES   PIC ZZZ,ZZZ,ZZ9.\n051800         10  FILLER           PIC X(13) VALUE ' ACRES, WITH '.\n051900         10  FINAL-25-PLANT   PIC ZZZ,ZZZ,ZZ9.\n052000     05  FINAL-26.\n052100         10  FILLER           PIC X(16) VALUE 'BUSHELS OF SEED,'.\n052200     05  FINAL-27.\n052300         10  FILLER           PIC X(9) VALUE 'YIELDING '.\n052400         10  FINAL-27-HARVESTED PIC ZZZ,ZZZ,ZZ9.\n052500         10  FILLER           PIC X(15) VALUE ' BUSHELS, USING'.\n052600     05  FINAL-28.\n052700         10  FINAL-28-BUSHELS PIC ZZZ,ZZZ,ZZ9.\n052710         10  FILLER           PIC X(23) VALUE\n052720                                       ' BUSHELS AS FERTILIZER,'.\n052800     05  FINAL-29.\n052900         10  FILLER           PIC X(13) VALUE 'BUT YOU LOST '.\n053000         10  FINAL-29-HARVEST PIC ZZZ,ZZZ,ZZ9.\n053100         10  FILLER           PIC X(28) VALUE\n053200                                 ' BUSHELS TO THE RATS, ET.AL.'.\n053600*\n053700 PROCEDURE DIVISION.\n053800     OPEN INPUT INPUT-FILE, OUTPUT PRINT-FILE.\n053900     MOVE SPACES TO PRINT-RECORD.\n054000     MOVE HDR1 TO PRINT-RECORD.\n054100     PERFORM PRINT-ROUTINE.\n054200     MOVE HDR2 TO PRINT-RECORD.\n054300     PERFORM PRINT-ROUTINE.\n054400     PERFORM PRINT-ROUTINE.\n054500     PERFORM RANDOMIZE.\n054600     COMPUTE ACRES = RAND-NBR * 1000.\n054700     COMPUTE ACRES-START = ACRES.\n054800     PERFORM RANDOMIZE.\n054900     COMPUTE PEOPLE = RAND-NBR * 1000.\n055000     COMPUTE PEOPL-START = PEOPLE.\n055100     PERFORM RANDOMIZE.\n055200     COMPUTE GRAIN = RAND-NBR * 2000.\n055300     COMPUTE GRAIN-START = GRAIN.\n055400     MOVE HDR3 TO PRINT-RECORD.\n055500     PERFORM PRINT-ROUTINE.\n055600     PERFORM GET-REPLY\n055700     IF X =  0  OR\n055800         L = 'N'\n055900             GO TO POP.\n056000     MOVE HDR4 TO PRINT-RECORD.\n056100     PERFORM PRINT-ROUTINE.\n056200     MOVE HDR5 TO PRINT-RECORD.\n056300     PERFORM PRINT-ROUTINE.\n056400     MOVE HDR6 TO PRINT-RECORD.\n056500     PERFORM PRINT-ROUTINE.\n056600     MOVE HDR7 TO PRINT-RECORD.\n056700     PERFORM PRINT-ROUTINE.\n056800     MOVE HDR8 TO PRINT-RECORD.\n056900     PERFORM PRINT-ROUTINE.\n057000     MOVE HDR9 TO PRINT-RECORD.\n057100     PERFORM PRINT-ROUTINE.\n057200     MOVE HDR10 TO PRINT-RECORD.\n057300     PERFORM PRINT-ROUTINE.\n057400     MOVE HDR11 TO PRINT-RECORD.\n057500     PERFORM PRINT-ROUTINE.\n057600     MOVE HDR12 TO PRINT-RECORD.\n057700     PERFORM PRINT-ROUTINE.\n057800     MOVE HDR13 TO PRINT-RECORD.\n057900     PERFORM PRINT-ROUTINE.\n058000     PERFORM PRINT-ROUTINE.\n058100     GO TO POP.\n058200 STATUS-DISPLAY.\n058300     PERFORM PRINT-ROUTINE.\n058400     IF FIRST-TIME\n058500         MOVE STATUS-1 TO PRINT-RECORD\n058600         MOVE 'N' TO FIRST-TIME-SWITCH\n058700     ELSE\n058710         MOVE Y-ARS TO STATUS-2-YARS\n058720         MOVE STATUS-2 TO PRINT-RECORD\n058800         IF FOOD > (PEOPLE * 1.3)\n058900             COMPUTE GRAIN = GRAIN + ((FOOD - (PEOPLE * 1.3))\n059000                 / 2).\n059300     PERFORM PRINT-ROUTINE.\n059400     MOVE STATUS-DASHES TO PRINT-RECORD.\n059500     PERFORM PRINT-ROUTINE.\n059600     IF IMMIGRANTS = 0\n059700         GO TO STARVOUT.\n059800     MOVE IMMIGRANTS TO STATUS-3-IMMIGRANTS.\n059900     MOVE STATUS-3 TO PRINT-RECORD.\n060000     PERFORM PRINT-ROUTINE.\n060100     COMPUTE TOT-IMM = TOT-IMM + IMMIGRANTS.\n060200 STARVOUT.\n060300     IF FIRST-TIME\n060400         GO TO DIED.\n060500     IF STARVED >= (IMMIGRANTS + PEOPLE)\n060600         MOVE PEOPLE TO STARVED.\n060700     IF STARVED = 0\n060800         GO TO DIED.\n060900     MOVE STARVED TO STATUS-4-STARVED.\n061000     MOVE STATUS-4 TO PRINT-RECORD.\n061100     PERFORM PRINT-ROUTINE.\n061200     COMPUTE TOT-STARVED = TOT-STARVED + STARVED.\n061300 DIED.\n061400     IF PLAGUE = 0\n061500         GO TO POP.\n061600     IF PLAGUE >= (PEOPLE + IMMIGRANTS) - STARVED\n061700         MOVE STATUS-5 TO PRINT-RECORD\n061800         PERFORM PRINT-ROUTINE\n061900         MOVE STATUS-6 TO PRINT-RECORD\n062000         PERFORM PRINT-ROUTINE\n062100         MOVE STATUS-7 TO PRINT-RECORD\n062200         PERFORM PRINT-ROUTINE\n062300         COMPUTE TOT-PLAGUED = TOT-PLAGUED + PLAGUE\n062400         MOVE 0 TO PEOPLE\n062500         GO TO FINIS.\n062510     MOVE PLAGUE TO STATUS-8-PLAGUE.\n062600     MOVE STATUS-8 TO PRINT-RECORD\n062700     PERFORM PRINT-ROUTINE.\n062800     COMPUTE TOT-PLAGUED = TOT-PLAGUED + PLAGUE.\n062900 POP.\n063000     COMPUTE PEOPLE = PEOPLE - (STARVED + PLAGUE) + IMMIGRANTS.\n063100     IF STARVED > 0 OR PLAGUE > 0\n063200         MOVE PEOPLE TO STATUS-9-PEOPLE\n063300         MOVE STATUS-9 TO PRINT-RECORD\n063400     ELSE\n063500         MOVE PEOPLE TO STATUS-10-PEOPLE\n063600         MOVE STATUS-10 TO PRINT-RECORD.\n063700     PERFORM PRINT-ROUTINE.\n063800     MOVE ACRES TO STATUS-11-ACRES.\n063900     MOVE GRAIN TO STATUS-11-GRAIN.\n064000     MOVE STATUS-11 TO PRINT-RECORD.\n064100     PERFORM PRINT-ROUTINE.\n064200     IF FIRST-TIME\n064300         GO TO GRAIN-CNT.\n064400     IF ACRES > 1000000\n064500         GO TO MILL-YUN-AIR.\n064600     IF GRAIN > 4000000\n064700         GO TO MILL-YUN-AIR.\n064800     IF ACRES = 0 AND GRAIN = 0\n064900         MOVE STATUS-12 TO PRINT-RECORD\n065000         PERFORM PRINT-ROUTINE\n065100         MOVE STATUS-13 TO PRINT-RECORD\n065200         PERFORM PRINT-ROUTINE\n065300         MOVE STATUS-14 TO PRINT-RECORD\n065400         PERFORM PRINT-ROUTINE\n065500         GO TO FINIS.\n065600 GRAINCOUNT.\n065700     IF Y-ARS > 24\n065800         GO TO OVER-AGE.\n065900     MOVE CONTINUE-1 TO PRINT-RECORD.\n066000     PERFORM PRINT-ROUTINE.\n066100     PERFORM GET-REPLY.\n066200     IF L = 'N'\n066300         MOVE SO-LONG-1 TO PRINT-RECORD\n066400         PERFORM PRINT-ROUTINE\n066500         GO TO FINIS.\n066600 GRAIN-CNT.\n066700     COMPUTE Y-ARS = Y-ARS + 1.\n066800     MOVE GRAIN TO GRAIN-1-GRAIN.\n066810     MOVE GRAIN-1 TO PRINT-RECORD.\n066900     PERFORM PRINT-ROUTINE.\n067000 LANDTRADE.\n067100     IF FIRST-TIME\n067200         GO TO EAT.\n067300     PERFORM RANDOMIZE.\n067400     COMPUTE COMPUTED-VALUE = (86 * RAND-NBR) + 1.\n067500 RETRY.\n067600     MOVE COMPUTED-VALUE TO LAND-1-VALUE.\n067700     MOVE LAND-1 TO PRINT-RECORD.\n067800     PERFORM PRINT-ROUTINE.\n067900     IF COMPUTED-VALUE > GRAIN\n068000         MOVE LAND-2 TO PRINT-RECORD\n068100         PERFORM PRINT-ROUTINE\n068200         GO TO SELL.\n068300 BUY.\n068400     COMPUTE TRADE = GRAIN / COMPUTED-VALUE.\n068500     MOVE TRADE TO BUY-1-ACRES.\n068600     MOVE BUY-1 TO PRINT-RECORD.\n068700     PERFORM PRINT-ROUTINE.\n068800     MOVE BUY-2 TO PRINT-RECORD.\n068900     PERFORM PRINT-ROUTINE.\n069000     PERFORM GET-REPLY\n069100     IF X = 0\n069200         GO TO SELL.\n069300     IF L = '?'\n069400         MOVE PEOPLE TO STATUS-10-PEOPLE\n069500         MOVE STATUS-10 TO PRINT-RECORD\n069600         PERFORM PRINT-ROUTINE\n069700         MOVE ACRES TO STATUS-15-ACRES\n069800         MOVE GRAIN TO STATUS-15-GRAIN\n069900         MOVE STATUS-15 TO PRINT-RECORD\n070000         PERFORM PRINT-ROUTINE\n070100         GO TO RETRY.\n070200     IF INPUT-IS-NUMERIC\n070300         NEXT SENTENCE\n070400     ELSE\n070500         MOVE NUMBERS-ONLY TO PRINT-RECORD\n070600         PERFORM PRINT-ROUTINE\n070700         GO TO BUY.\n070800     MOVE BIN-NUMBER TO TRADE.\n070900     IF TRADE = 0 THEN GO TO SELL.\n071000     IF (TRADE * COMPUTED-VALUE) > GRAIN\n071100         MOVE NOT-ENOUGH-GRAIN TO PRINT-RECORD\n071200         PERFORM PRINT-ROUTINE\n071300         MOVE NICE-TRY TO PRINT-RECORD\n071400         PERFORM PRINT-ROUTINE\n071500         GO TO RETRY.\n071600     COMPUTE ACRES-BOT = ACRES-BOT + TRADE.\n071700     COMPUTE GRAIN = GRAIN - (TRADE * COMPUTED-VALUE).\n071800     COMPUTE GRAIN-BUY = GRAIN-BUY + (TRADE * COMPUTED-VALUE).\n071900     COMPUTE ACRES = ACRES + TRADE.\n072000     MOVE GRAIN TO TRADING-1-GRAIN.\n072100     MOVE TRADING-1 TO PRINT-RECORD.\n072200     PERFORM PRINT-ROUTINE.\n072300     GO TO EAT-EM.\n072400 SELL.\n072500     IF ACRES = 0\n072600         MOVE NO-LAND-1 TO PRINT-RECORD\n072700         PERFORM PRINT-ROUTINE\n072800         GO TO EAT.\n072900     MOVE ACRES TO STATUS-16-ACRES.\n073000     MOVE STATUS-16 TO PRINT-RECORD.\n073100     PERFORM PRINT-ROUTINE.\n073200     COMPUTE TRADE = ACRES * COMPUTED-VALUE.\n073300     MOVE TRADE TO STATUS-17-GRAIN.\n073400     MOVE STATUS-17 TO PRINT-RECORD.\n073500     PERFORM PRINT-ROUTINE.\n073600 RETRYAGAIN.\n073700     MOVE HOW-MANY-SELL TO PRINT-RECORD.\n073800     PERFORM PRINT-ROUTINE.\n073900     PERFORM GET-REPLY.\n074000     IF X = 0\n074100         GO TO EAT.\n074200     IF L = '?'\n074300         MOVE PEOPLE TO STATUS-10-PEOPLE\n074400         MOVE STATUS-10 TO PRINT-RECORD\n074500         PERFORM PRINT-ROUTINE\n074600         MOVE ACRES TO STATUS-15-ACRES\n074700         MOVE GRAIN TO STATUS-15-GRAIN\n074800         MOVE STATUS-15 TO PRINT-RECORD\n074900         PERFORM PRINT-ROUTINE\n075000         GO TO RETRYAGAIN.\n075100     IF INPUT-IS-NUMERIC\n075200         NEXT SENTENCE\n075300     ELSE\n075400         MOVE NUMBERS-ONLY TO PRINT-RECORD\n075500         PERFORM PRINT-ROUTINE\n075600         GO TO RETRYAGAIN.\n075700     MOVE BIN-NUMBER TO TRADE.\n075800     IF TRADE = 0\n075900         GO TO EAT.\n076000     IF TRADE > ACRES\n076100         MOVE BUY-3 TO PRINT-RECORD\n076200         PERFORM PRINT-ROUTINE\n076300         MOVE BUY-4 TO PRINT-RECORD\n076400         PERFORM PRINT-ROUTINE\n076500         GO TO RETRYAGAIN.\n076600     COMPUTE GRAIN = GRAIN + (TRADE * COMPUTED-VALUE).\n076700     COMPUTE ACRES-SOLD = ACRES-SOLD + TRADE.\n076800     COMPUTE GRAIN-SOLD = GRAIN-SOLD + (TRADE * COMPUTED-VALUE).\n076900     COMPUTE ACRES = ACRES - TRADE.\n077000 EAT.\n077100     IF FIRST-TIME\n077200         GO TO PASS.\n077300     MOVE GRAIN TO STATUS-18-GRAIN.\n077400     MOVE STATUS-18 TO PRINT-RECORD.\n077500     PERFORM PRINT-ROUTINE.\n077600 EAT-EM.\n077700     MOVE PEOPLE TO STATUS-19-PEOPLE.\n077800     MOVE STATUS-19 TO PRINT-RECORD.\n077900     PERFORM PRINT-ROUTINE.\n078000 PASS.\n078100     IF GRAIN = 0\n078200         MOVE PEOPLE TO GROWL-1-PEOPLE\n078300         MOVE GROWL-1 TO PRINT-RECORD\n078400         PERFORM PRINT-ROUTINE\n078500         MOVE NO-GRAIN TO PRINT-RECORD\n078600         PERFORM PRINT-ROUTINE\n078700         GO TO FARM.\n078800     MOVE HOW-MANY-GRAIN TO PRINT-RECORD.\n078900     PERFORM PRINT-ROUTINE.\n079000     PERFORM GET-REPLY.\n079100     IF X = 0\n079200         MOVE '0' TO L.\n079300     IF L = '?'\n079400         MOVE PEOPLE TO STATUS-10-PEOPLE\n079500         MOVE STATUS-10 TO PRINT-RECORD\n079600         PERFORM PRINT-ROUTINE\n079700         MOVE ACRES TO STATUS-15-ACRES\n079800         MOVE GRAIN TO STATUS-15-GRAIN\n079900         MOVE STATUS-15 TO PRINT-RECORD\n080000         PERFORM PRINT-ROUTINE\n080100         GO TO PASS.\n080200     IF INPUT-IS-NUMERIC\n080300         NEXT SENTENCE\n080400     ELSE\n080500         MOVE NUMBERS-ONLY TO PRINT-RECORD\n080600         PERFORM PRINT-ROUTINE\n080700         GO TO EAT.\n080800     MOVE BIN-NUMBER TO FOOD.\n080900     IF FOOD > GRAIN\n081000         MOVE INSULTED TO PRINT-RECORD\n081100         PERFORM PRINT-ROUTINE\n081200         MOVE RECANTED TO PRINT-RECORD\n081300         PERFORM PRINT-ROUTINE\n081400         GO TO EAT.\n081500     IF L = 0\n081600         MOVE GENOCIDE TO PRINT-RECORD\n081700         PERFORM PRINT-ROUTINE\n081800         MOVE APOCALYPSE TO PRINT-RECORD\n081900         PERFORM PRINT-ROUTINE.\n082000     COMPUTE GRAIN = GRAIN - FOOD.\n082100     MOVE GRAIN TO STATUS-20-GRAIN.\n082110     MOVE STATUS-20 TO PRINT-RECORD.\n082200     PERFORM PRINT-ROUTINE.\n082300 FARM.\n082400     IF ACRES = 0\n082500         MOVE NO-LAND-2 TO PRINT-RECORD\n082600         PERFORM PRINT-ROUTINE\n082700         MOVE 0 TO FARMLAND\n082800         GO TO DOIT.\n082900     MOVE ACRES TO STATUS-21-ACRES.\n083000     MOVE PEOPLE TO STATUS-21-PEOPLE.\n083100     MOVE STATUS-21 TO PRINT-RECORD.\n083200     PERFORM PRINT-ROUTINE.\n083300     IF GRAIN = 0\n083400         MOVE NO-SEED TO PRINT-RECORD\n083500         PERFORM PRINT-ROUTINE\n083600         MOVE 0 TO FARMLAND\n083700         GO TO DOIT.\n083800 RETRY1.\n083900     MOVE HOW-MANY-ACRES TO PRINT-RECORD.\n084000     PERFORM PRINT-ROUTINE.\n084100     PERFORM GET-REPLY.\n084200     IF X = 0\n084300         MOVE 0 TO L.\n084400     IF L = '?'\n084500         MOVE PEOPLE TO STATUS-10-PEOPLE\n084600         MOVE STATUS-10 TO PRINT-RECORD\n084700         PERFORM PRINT-ROUTINE\n084800         MOVE ACRES TO STATUS-15-ACRES\n084900         MOVE GRAIN TO STATUS-15-GRAIN\n085000         MOVE STATUS-15 TO PRINT-RECORD\n085100         PERFORM PRINT-ROUTINE\n085200         GO TO RETRY1.\n085300     IF INPUT-IS-NUMERIC\n085310         NEXT SENTENCE\n085320     ELSE\n085400         MOVE NUMBERS-ONLY TO PRINT-RECORD\n085500         PERFORM PRINT-ROUTINE\n085600         GO TO RETRY1.\n085700     MOVE BIN-NUMBER TO FARMLAND.\n085800     IF FARMLAND > ACRES\n085900         MOVE DONT-UNDERSTAND TO PRINT-RECORD\n086000         PERFORM PRINT-ROUTINE\n086100         MOVE CANT-FARM TO PRINT-RECORD\n086200         PERFORM PRINT-ROUTINE\n086300         GO TO RETRY1.\n086400     IF (FARMLAND * 1.8) > PEOPLE\n086500         MOVE NOT-ENOUGH-PEOPLE TO PRINT-RECORD\n086600         PERFORM PRINT-ROUTINE\n086700         GO TO RETRY1.\n086800     IF (FARMLAND * .78) > GRAIN\n086900         MOVE NOT-ENOUGH-SEED TO PRINT-RECORD\n087000         PERFORM PRINT-ROUTINE\n087100         GO TO RETRY1.\n087200     IF FARMLAND = 0\n087300         GO TO DOIT.\n087400     IF GRAIN = 0\n087500         GO TO DOIT.\n087600     COMPUTE GRAIN = GRAIN - (FARMLAND * .78).\n087700     COMPUTE PLANTED = PLANTED + FARMLAND.\n087800     COMPUTE GRAIN-PLANT = GRAIN-PLANT + (FARMLAND * .78).\n087900     PERFORM RANDOMIZE.\n088000     IF RAND-NBR > .698765\n088100         MOVE 'N' TO FERT-SW\n088200         GO TO DOIT.\n088300     PERFORM RANDOMIZE.\n088400     COMPUTE FERT-AMT = (10 * RAND-NBR) + 0.5.\n088500     MOVE FERT-AMT TO FERTILIZER-1-PRICE.\n088600     MOVE FERTILIZER-1 TO PRINT-RECORD.\n088700     PERFORM PRINT-ROUTINE.\n088800     MOVE WISH-TO-ENHANCE TO PRINT-RECORD.\n088900     PERFORM PRINT-ROUTINE.\n089000     PERFORM GET-REPLY.\n089100     IF X =  0\n089200         MOVE 'Y' TO L.\n089300     IF L NOT = 'Y'\n089400         MOVE 'N' TO FERT-SW\n089500         GO TO DOIT.\n089600     MOVE 'Y' TO FERT-SW.\n089700     COMPUTE COMPUTED-VALUE = FARMLAND * FERT-AMT.\n089800     IF COMPUTED-VALUE > GRAIN\n089900         MOVE NO-CREDIT TO PRINT-RECORD\n090000         PERFORM PRINT-ROUTINE\n090100         MOVE 'N' TO FERT-SW\n090200         GO TO DOIT.\n090300     COMPUTE GRAIN = GRAIN - COMPUTED-VALUE.\n090400     COMPUTE TOT-FERT = TOT-FERT + COMPUTED-VALUE.\n090500 DOIT.\n090600     IF GRAIN > 22222\n090700         PERFORM RANDOMIZE\n090800         IF RAND-NBR > .920000\n090900            MOVE GRAIN-ROT TO PRINT-RECORD\n091000            PERFORM PRINT-ROUTINE\n091100            COMPUTE HARVEST-LST = HARVEST-LST + (GRAIN / 1.91)\n091200            COMPUTE GRAIN = GRAIN / 1.91\n091300            MOVE GRAIN TO ONLY-SAVED-1-GRAIN\n091400            MOVE ONLY-SAVED-1 TO PRINT-RECORD\n091500            PERFORM PRINT-ROUTINE.\n091600     IF NO-PLAGUE-THREAT\n091610         GO TO NOSHOTS.\n091700     IF LAST-SHOT >= PEOPLE\n091800         MOVE NO-SHOTS-NEEDED TO PRINT-RECORD\n091900         PERFORM PRINT-ROUTINE\n092000         MOVE IMMUNIZED TO PRINT-RECORD\n092100         PERFORM PRINT-ROUTINE\n092200         COMPUTE INNOCULATED = LAST-SHOT / 2\n092300         GO TO NO-SHOTS.\n092500     PERFORM RANDOMIZE\n092600     COMPUTE SERUM = (13 * RAND-NBR) + 1\n092700     IF GRAIN > 2000000\n092800         COMPUTE SERUM = SERUM + 128\n092900     ELSE\n093000         IF GRAIN > 1500000\n093100             COMPUTE SERUM = SERUM + 64\n093200         ELSE\n093300             IF GRAIN > 1000000\n093400                 COMPUTE SERUM = SERUM + 32\n093500             ELSE\n093600                 IF GRAIN > 500000\n093700                     COMPUTE SERUM = SERUM + 16\n093800                 ELSE\n093900                     IF GRAIN > 100000\n094000                         COMPUTE SERUM = SERUM + 8\n094100                     ELSE\n094200                         IF GRAIN > 50000\n094300                             COMPUTE SERUM = SERUM + 4\n094400                         ELSE\n094500                             IF GRAIN > 25000\n094600                                 COMPUTE SERUM = SERUM + 2.\n094800     MOVE DISTRIBUTING-1 TO PRINT-RECORD\n094900     PERFORM PRINT-ROUTINE\n095000     MOVE SERUM TO DISTRIBUTING-2-SERUM\n095100     MOVE DISTRIBUTING-2 TO PRINT-RECORD\n095200     PERFORM PRINT-ROUTINE\n095300     IF SERUM > GRAIN\n095400         MOVE CANT-AFFORD-SHOTS-1 TO PRINT-RECORD\n095500         PERFORM PRINT-ROUTINE\n095600         MOVE 0 TO INNOCULATED\n095700         GO TO NOSHOTS.\n095800 PEOPLESHOTS.\n095900     COMPUTE INNOCULATED = GRAIN / SERUM.\n096000     IF INNOCULATED >= PEOPLE\n096100         MOVE PEOPLE TO INNOCULATED.\n096200     MOVE INNOCULATED TO CAN-AFFORD-SHOTS-1-PEOPLE.\n096300     MOVE CAN-AFFORD-SHOTS-1 TO PRINT-RECORD.\n096400     PERFORM PRINT-ROUTINE.\n096500     IF INNOCULATED <= (PEOPLE - LAST-SHOT)\n096600         GO TO SHOTS.\n096700     IF LAST-SHOT = 0\n096800         GO TO SHOTS.\n096900     COMPUTE INNOCULATED = PEOPLE - LAST-SHOT.\n097000     MOVE LAST-SHOT TO STILL-IMMUNIZED-1-LAST.\n097100     MOVE STILL-IMMUNIZED-1 TO PRINT-RECORD.\n097200     PERFORM PRINT-ROUTINE.\n097300     MOVE INNOCULATED TO STILL-IMMUNIZED-2-REST.\n097400     MOVE STILL-IMMUNIZED-2 TO PRINT-RECORD.\n097500     PERFORM PRINT-ROUTINE.\n097600 SHOTS.\n097700     MOVE HOW-MANY-GET TO PRINT-RECORD.\n097800     PERFORM PRINT-ROUTINE.\n097900     PERFORM GET-REPLY.\n098000     IF X = 0\n098100         MOVE 0 TO L.\n098200     IF INPUT-IS-NUMERIC\n098210         NEXT SENTENCE\n098220     ELSE\n098300         MOVE NUMBERS-ONLY TO PRINT-RECORD\n098400         PERFORM PRINT-ROUTINE\n098500         GO TO SHOTS.\n098600     MOVE BIN-NUMBER TO INNOCULATED.\n098700     MOVE INNOCULATED TO THIS-SHOT.\n098800     IF INNOCULATED > (GRAIN / SERUM)\n098900         MOVE 'W H A A T ?' TO PRINT-RECORD\n099000         PERFORM PRINT-ROUTINE\n099100         GO TO PEOPLESHOTS.\n099200     IF INNOCULATED = 0\n099300         MOVE EASY-TO-GAMBLE TO PRINT-RECORD\n099400         PERFORM PRINT-ROUTINE\n099500         GO TO NOSHOTS.\n099600     COMPUTE GRAIN = GRAIN - (INNOCULATED * SERUM).\n099700     MOVE GRAIN TO GRAIN-LEFT-1-GRAIN.\n099800     MOVE GRAIN-LEFT-1 TO PRINT-RECORD.\n099900     PERFORM PRINT-ROUTINE.\n100000 NOSHOTS.\n100100     COMPUTE TOTL-SHOT = TOTL-SHOT + INNOCULATED.\n100200 NO-SHOTS.\n100400     IF FARMLAND = 0\n100500         PERFORM RANDOMIZE\n100600         COMPUTE X = RAND-NBR * 10\n100700         MOVE GAMES (X) TO NOTHING-FARMED-GAME\n100800         MOVE NOTHING-FARMED TO PRINT-RECORD\n100900         PERFORM PRINT-ROUTINE\n101000         PERFORM RANDOMIZE\n101100         COMPUTE RATS = GRAIN * RAND-NBR\n101200         MOVE RATS-OVERRAN TO PRINT-RECORD\n101300         PERFORM PRINT-ROUTINE\n101400         COMPUTE GRAIN = GRAIN - RATS\n101500         IF GRAIN = 0\n101600             MOVE RATS-ATE-CATS TO PRINT-RECORD\n101700             PERFORM PRINT-ROUTINE\n101800             GO TO PASSRATS\n101900         ELSE\n102000             MOVE GRAIN TO GRAIN-LEFT-2-GRAIN\n102100             MOVE GRAIN-LEFT-2 TO PRINT-RECORD\n102200             PERFORM PRINT-ROUTINE\n102300             GO TO PASSRATS.\n102400     MOVE WORKING-AS-TOLD TO PRINT-RECORD.\n102500     PERFORM PRINT-ROUTINE.\n102600     PERFORM RANDOMIZE.\n102700     IF RAND-NBR < .001111\n102800         MOVE REVOLTED TO PRINT-RECORD\n102900         PERFORM PRINT-ROUTINE\n103000         MOVE LUCKY-TO-ESCAPE TO PRINT-RECORD\n103100         PERFORM PRINT-ROUTINE\n103200         GO TO REVOLT.\n103300     MOVE HERE-ARE-FRUITS TO PRINT-RECORD.\n103400     PERFORM PRINT-ROUTINE.\n103500     MOVE 0 TO RATS.\n103600     PERFORM RANDOMIZE.\n103700     IF RAND-NBR < .002222\n103800         IF NO-FERTILIZER-WANTED\n103900             GO TO NOT-FERT-ED\n104000         ELSE\n104100             MOVE OVER-FERTILIZED TO PRINT-RECORD\n104200             PERFORM PRINT-ROUTINE\n104300             MOVE UNABLE-TO-SAVE TO PRINT-RECORD\n104400             PERFORM PRINT-ROUTINE\n104500             GO TO PASSRATS.\n104600 NOT-FERT-ED.\n104700     IF FARMLAND = 0\n104800         MOVE 0 TO YIELD\n104900     ELSE\n105000         PERFORM RANDOMIZE\n105100         COMPUTE YIELD = (17 * RAND-NBR) + 0.1.\n105200     IF FERTILIZER-WANTED\n105300         PERFORM RANDOMIZE\n105400         COMPUTE YIELD = YIELD + (FERT-AMT * (RAND-NBR + 1.0) +\n105500             FERT-AMT).\n105600     IF FARMLAND > 0\n105700         COMPUTE YIELD = YIELD + 0.8.\n105800     MOVE YIELD TO YIELD-PER-ACRE-YIELD.\n105900     MOVE YIELD-PER-ACRE TO PRINT-RECORD.\n106000     PERFORM PRINT-ROUTINE.\n106100     COMPUTE DIFF = YIELD * FARMLAND.\n106200     IF DIFF = 0\n106300         GO TO PASSRATS.\n106400     ADD 1 TO DIFF.\n106500     COMPUTE HARVESTD = HARVESTD + DIFF.\n106600     MOVE DIFF TO TOTAL-HARVEST-BUSHELS.\n106700     MOVE TOTAL-HARVEST TO PRINT-RECORD.\n106800     PERFORM PRINT-ROUTINE.\n106900     PERFORM RANDOMIZE.\n107000     IF RAND-NBR < .760000\n107100         COMPUTE GRAIN = GRAIN + DIFF\n107200         GO TO PASSRATS\n107300     ELSE\n107400         IF RAND-NBR > .960000\n107500             MOVE DIFF TO RATS\n107600         ELSE\n107700             COMPUTE RATS =(((RAND-NBR * RAND-NBR) *\n107800                              RAND-NBR) * DIFF) + 1.\n107900     IF DIFF = 0\n108000         GO TO PASSRATS.\n108100     IF RATS >= DIFF\n108200         IF RAND-NBR > .860000\n108300             MOVE LOCUSTS-ATE TO PRINT-RECORD\n108400         ELSE\n108500             MOVE RATS-ATE-1 TO PRINT-RECORD\n108600             PERFORM PRINT-ROUTINE\n108700     ELSE\n108800         IF FERTILIZER-WANTED\n108900             COMPUTE RATS = RATS / 2\n109000             MOVE RATS TO RATS-ATE-2-BUSHELS\n109100             MOVE RATS-ATE-2 TO PRINT-RECORD\n109200             PERFORM PRINT-ROUTINE\n109300             COMPUTE GRAIN =(GRAIN + DIFF) - RATS.\n109400 PASSRATS.\n109500     COMPUTE HARVEST-LST = HARVEST-LST + RATS + ROBBED.\n109600     MOVE 0 TO ROBBED.\n109700     IF FOOD > (PEOPLE * 1.3)\n109800         MOVE 0 TO STARVED\n109900     ELSE\n110000         COMPUTE STARVED = PEOPLE - (FOOD / 1.3).\n110100     IF STARVED NOT = 0\n110200         MOVE PEASANTS-STEALING TO PRINT-RECORD\n110300         PERFORM PRINT-ROUTINE\n110400         IF (STARVED * 1.11) >= GRAIN\n110500             MOVE GRAIN TO ROBBED\n110600             MOVE 0 TO GRAIN\n110700         ELSE\n110800             COMPUTE ROBBED = (STARVED * 1.11)\n110900             COMPUTE GRAIN = GRAIN - ROBBED.\n111000     IF STARVED NOT = 0 AND ROBBED = 0 THEN\n111100         MOVE ATE-SHOES TO PRINT-RECORD\n111110         PERFORM PRINT-ROUTINE\n111200     ELSE\n111300         MOVE ROBBED TO STOLE-GRAIN-BUSHELS\n111400         MOVE STOLE-GRAIN TO PRINT-RECORD\n111500         PERFORM PRINT-ROUTINE.\n111600     PERFORM RANDOMIZE.\n111700     COMPUTE IMMIGRANTS = RAND-NBR * 100.\n111800     MOVE 0 TO PLAGUE.\n111900     PERFORM RANDOMIZE.\n112000     IF RAND-NBR > .499999\n112100         MOVE 'Y' TO PLAG-SW\n112200         PERFORM RANDOMIZE\n112300         COMPUTE PLAGUE = ((PEOPLE - LAST-SHOT) / 2) -\n112400             (RAND-NBR * 99)\n112500         IF PLAGUE < 0\n112600             COMPUTE PLAGUE = PLAGUE * (-1).\n112700     IF RAND-NBR > .499999\n112800         IF (INNOCULATED + LAST-SHOT) >= PLAGUE\n112900             MOVE 0 TO PLAGUE\n113000         ELSE\n113100             COMPUTE PLAGUE = PLAGUE -(INNOCULATED + LAST-SHOT).\n113200     IF RAND-NBR > .499999\n113300         COMPUTE LAST-SHOT = (THIS-SHOT / 2)\n113400     ELSE\n113500         COMPUTE LAST-SHOT = LAST-SHOT + (THIS-SHOT * 0.7).\n113600     GO TO STATUS-DISPLAY.\n113700 MILL-YUN-AIR.\n113800     MOVE FINAL-1 TO PRINT-RECORD.\n113900     PERFORM PRINT-ROUTINE.\n114000     MOVE FINAL-2 TO PRINT-RECORD.\n114100     PERFORM PRINT-ROUTINE.\n114200     MOVE FINAL-3 TO PRINT-RECORD.\n114300     PERFORM PRINT-ROUTINE.\n114400     MOVE FINAL-4 TO PRINT-RECORD.\n114500     PERFORM PRINT-ROUTINE.\n114600     GO TO HAPPI-NESS.\n114700 OVER-AGE.\n114800     MOVE FINAL-5 TO PRINT-RECORD.\n114900     PERFORM PRINT-ROUTINE.\n115000 HAPPI-NESS.\n115100     MOVE FINAL-6 TO PRINT-RECORD.\n115200     PERFORM PRINT-ROUTINE.\n115300 REVOLT.\n115400     MOVE FINAL-7 TO PRINT-RECORD.\n115500     PERFORM PRINT-ROUTINE.\n115600     MOVE FINAL-8 TO PRINT-RECORD.\n115700     PERFORM PRINT-ROUTINE.\n115800 FINIS.\n115900     PERFORM PRINT-ROUTINE.\n116000     MOVE PEOPL-START TO FINAL-9-PEOPLE.\n116100     MOVE FINAL-9 TO PRINT-RECORD.\n116200     PERFORM PRINT-ROUTINE.\n116300     MOVE TOT-IMM TO FINAL-10-IMMIGRANTS.\n116400     MOVE FINAL-10 TO PRINT-RECORD.\n116500     PERFORM PRINT-ROUTINE.\n116600     MOVE TOT-STARVED TO FINAL-11-STARVED.\n116700     MOVE FINAL-11 TO PRINT-RECORD.\n116800     PERFORM PRINT-ROUTINE.\n116900     MOVE TOT-PLAGUED TO FINAL-12-PLAGUE.\n117000     MOVE FINAL-12 TO PRINT-RECORD.\n117100     PERFORM PRINT-ROUTINE.\n117200     MOVE TOTL-SHOT TO FINAL-13-SHOTS.\n117300     MOVE FINAL-13 TO PRINT-RECORD.\n117400     PERFORM PRINT-ROUTINE.\n117500     MOVE PEOPLE TO FINAL-14-PEOPLE.\n117600     PERFORM PRINT-ROUTINE.\n117700     MOVE FINAL-15 TO PRINT-RECORD.\n117800     PERFORM PRINT-ROUTINE.\n117900     MOVE ACRES-START TO FINAL-16-ACRES.\n118000     MOVE FINAL-16 TO PRINT-RECORD.\n118100     PERFORM PRINT-ROUTINE.\n118200     MOVE GRAIN-START TO FINAL-17-GRAIN.\n118300     MOVE FINAL-17 TO PRINT-RECORD.\n118400     PERFORM PRINT-ROUTINE.\n118500     MOVE ACRES-BOT TO FINAL-18-ACRES.\n118600     MOVE FINAL-18 TO PRINT-RECORD.\n118700     PERFORM PRINT-ROUTINE.\n118800     MOVE GRAIN-BUY TO FINAL-19-BUSHELS.\n118900     MOVE FINAL-19 TO PRINT-RECORD.\n119000     PERFORM PRINT-ROUTINE.\n119100     MOVE ACRES-SOLD TO FINAL-20-ACRES.\n119200     MOVE FINAL-20 TO PRINT-RECORD.\n119300     PERFORM PRINT-ROUTINE.\n119400     MOVE GRAIN-SOLD TO FINAL-21-BUSHELS.\n119500     MOVE FINAL-21 TO PRINT-RECORD.\n119600     PERFORM PRINT-ROUTINE.\n119700     MOVE ACRES TO FINAL-22-ACRES.\n119800     MOVE FINAL-22 TO PRINT-RECORD.\n119900     PERFORM PRINT-ROUTINE.\n120000     MOVE GRAIN TO FINAL-23-BUSHELS.\n120100     MOVE FINAL-23 TO PRINT-RECORD.\n120200     PERFORM PRINT-ROUTINE.\n120300     MOVE Y-ARS TO FINAL-24-YEARS.\n120400     MOVE FINAL-24 TO PRINT-RECORD.\n120500     PERFORM PRINT-ROUTINE.\n120600     MOVE PLANTED TO FINAL-25-ACRES.\n120700     MOVE GRAIN-PLANT TO FINAL-25-PLANT.\n120800     MOVE FINAL-25 TO PRINT-RECORD.\n120900     PERFORM PRINT-ROUTINE.\n121000     MOVE FINAL-26 TO PRINT-RECORD.\n121100     PERFORM PRINT-ROUTINE.\n121200     MOVE HARVESTD TO FINAL-27-HARVESTED.\n121300     MOVE FINAL-27 TO PRINT-RECORD.\n121400     PERFORM PRINT-ROUTINE.\n121410     MOVE TOT-FERT TO FINAL-28-BUSHELS.\n121500     MOVE FINAL-28 TO PRINT-RECORD.\n121600     PERFORM PRINT-ROUTINE.\n121700     MOVE HARVEST-LST TO FINAL-29-HARVEST.\n121800     MOVE FINAL-29 TO PRINT-RECORD.\n121900     PERFORM PRINT-ROUTINE.\n122000     PERFORM PRINT-ROUTINE.\n122100     GOBACK.\n122200 PRINT-ROUTINE.\n122201     SET PX TO 1.\n122202     SET PY TO 1.\n122203     IF PRINT-BYTE (1) = ' '\n122204         MOVE 'Y' TO LAST-BYTE-MOVED-SWITCH\n122205     ELSE\n122206         MOVE 'N' TO LAST-BYTE-MOVED-SWITCH.\n122210     PERFORM SQUEEZE-OUT-BLANKS\n122220         UNTIL PY > 80.\n122230     PERFORM CLEAR-TO-END\n122240         UNTIL PX > 80.\n122300     WRITE PRINT-RECORD.\n122400     MOVE ALL ' ' TO PRINT-RECORD.\n122440 SQUEEZE-OUT-BLANKS.\n122452     IF LAST-BYTE-MOVED-WAS-BLANK\n122453         IF PRINT-BYTE (PY) = ' '\n122454             SET PX DOWN BY 1\n122460         ELSE\n122470             MOVE PRINT-BYTE (PY) TO PRINT-BYTE (PX)\n122471             MOVE 'N' TO LAST-BYTE-MOVED-SWITCH\n122491     ELSE\n122492         MOVE PRINT-BYTE (PY) TO PRINT-BYTE (PX)\n122493         IF PRINT-BYTE (PX) = ' '\n122494             MOVE 'Y' TO LAST-BYTE-MOVED-SWITCH.\n122499     SET PX UP BY 1.\n122500     SET PY UP BY 1.\n122501 CLEAR-TO-END.\n122503     MOVE ' ' TO PRINT-BYTE (PX).\n122504     SET PX UP BY 1.\n122510 RANDOMIZE.\n122600     PERFORM GET-TIME.\n122700     MOVE SEC-HUNDREDTHS TO RAND-1.\n122800     MOVE SEC-TENTHS TO RAND-2.\n122900     MOVE SEC-UNITS TO RAND-3.\n123000     PERFORM GET-TIME UNTIL SEC-HUNDREDTHS NOT = RAND-1.\n123100     MOVE SEC-HUNDREDTHS TO RAND-4.\n123200     MOVE SEC-TENTHS TO RAND-5.\n123300     MOVE SEC-UNITS TO RAND-6.\n123400     MOVE WORK-RAND TO NBR-RAND.\n123800 GET-TIME.\n123900     ACCEPT WORK-TIME FROM TIME.\n124000 GET-REPLY.\n124100     MOVE ' ' TO L.\n124200     MOVE +0 TO X.\n124300     MOVE ZEROES TO IN-NUMBER.\n124500     READ INPUT-FILE\n124600         AT END GO TO FINIS.\n124700     IF INPUT-RECORD IS EQUAL TO ALL ' '\n124710         MOVE 'N' TO INPUT-NUMERIC-SWITCH\n124900     ELSE\n125000         MOVE 'Y' TO INPUT-NUMERIC-SWITCH\n125100         SET IX TO 1\n125200         PERFORM FIND-LEFT-END\n125300             UNTIL INPUT-BYTE (IX) NOT = ' '\n125400         MOVE INPUT-BYTE (IX) TO L\n125500         SET IY TO 80\n125600         PERFORM FIND-RIGHT-END\n125700             UNTIL INPUT-BYTE (IY) NOT = ' '\n125800         PERFORM MOVE-INPUT-NUMBER\n125900             VARYING IZ FROM 15 BY -1 UNTIL\n126000                 IY < IX OR\n126100                     X > 14.\n126200         IF INPUT-IS-NUMERIC\n126300             MOVE IN-NUMBER TO BIN-NUMBER\n126400         ELSE\n126500             MOVE ZEROES TO BIN-NUMBER, IN-NUMBER.\n126600 FIND-LEFT-END.\n126700     IF INPUT-BYTE (IX) = ' '\n126800         SET IX UP BY 1.\n126900 FIND-RIGHT-END.\n127000     IF INPUT-BYTE (IY) = ' '\n127100         SET IY DOWN BY 1.\n127200 MOVE-INPUT-NUMBER.\n127300     MOVE INPUT-BYTE (IY) TO IN-DIGIT (IZ).\n127400     IF INPUT-BYTE (IY) IS < '0' OR\n127500         INPUT-BYTE (IY) IS > '9'\n127600             MOVE 'N' TO INPUT-NUMERIC-SWITCH.\n127700     SET IY DOWN BY 1.\n127800     ADD 1 TO X.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "ERRMSG": {"ttr": 6404, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x90\\x08_\\x00\\x923\\x8f\\x15#\\x00\\x02\\x00\\x02\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-03-26T00:00:00", "modifydate": "1992-12-03T15:23:00", "lines": 2, "newlines": 2, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. ERRMSG.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FILLBLOW": {"ttr": 6406, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x04\\x00\\x17\\x00\\x94\\x01\\x9f\\x01\\x02\\x00O\\x13'\\x01\\xd6\\x01\\xba\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.04", "flags": 0, "createdate": "1994-01-19T00:00:00", "modifydate": "2002-01-04T13:27:17", "lines": 470, "newlines": 442, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    FILLBLOW.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. UTILITY PROGRAM TO USE UP ALL THE MEMORY BELOW THE LINE\n000410*         AS AN AID IN TESTING NEW VERSIONS OF COBOL.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FIL1 ASSIGN TO INPUT1.\n000721     SELECT INPUT-FIL2 ASSIGN TO INPUT2.\n000722     SELECT INPUT-FIL3 ASSIGN TO INPUT3.\n000723     SELECT INPUT-FIL4 ASSIGN TO INPUT4.\n000724     SELECT INPUT-FIL5 ASSIGN TO INPUT5.\n000725     SELECT INPUT-FIL6 ASSIGN TO INPUT6.\n000726     SELECT INPUT-FIL7 ASSIGN TO INPUT7.\n000727     SELECT INPUT-FIL8 ASSIGN TO INPUT8.\n000728     SELECT INPUT-FIL9 ASSIGN TO INPUT9.\n000730     SELECT PRINT-FIL1 ASSIGN TO PRINT1.\n000740     SELECT PRINT-FIL2 ASSIGN TO PRINT2.\n000750     SELECT PRINT-FIL3 ASSIGN TO PRINT3.\n000760     SELECT PRINT-FIL4 ASSIGN TO PRINT4.\n000770     SELECT PRINT-FIL5 ASSIGN TO PRINT5.\n000780     SELECT PRINT-FIL6 ASSIGN TO PRINT6.\n000790     SELECT PRINT-FIL7 ASSIGN TO PRINT7.\n000791     SELECT PRINT-FIL8 ASSIGN TO PRINT8.\n000792     SELECT PRINT-FIL9 ASSIGN TO PRINT9.\n000793     SELECT OUTPUT-FIL1 ASSIGN TO OUTPUT1.\n000794     SELECT OUTPUT-FIL2 ASSIGN TO OUTPUT2.\n000795     SELECT OUTPUT-FIL3 ASSIGN TO OUTPUT3.\n000796     SELECT OUTPUT-FIL4 ASSIGN TO OUTPUT4.\n000797     SELECT OUTPUT-FIL5 ASSIGN TO OUTPUT5.\n000798     SELECT OUTPUT-FIL6 ASSIGN TO OUTPUT6.\n000799     SELECT OUTPUT-FIL7 ASSIGN TO OUTPUT7.\n000800     SELECT OUTPUT-FIL8 ASSIGN TO OUTPUT8.\n000801     SELECT OUTPUT-FIL9 ASSIGN TO OUTPUT9.\n000802 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  INPUT-FIL1\n000821     RECORDING MODE IS F\n000822     BLOCK CONTAINS 0 RECORDS\n000830     LABEL RECORDS ARE STANDARD.\n000840 01  INPUT-RECORD1           PIC X(80).                                 10\n000841 FD  INPUT-FIL2\n000842     RECORDING MODE IS F\n000843     BLOCK CONTAINS 0 RECORDS\n000844     LABEL RECORDS ARE STANDARD.\n000845 01  INPUT-RECORD2           PIC X(80).                                 10\n000846 FD  INPUT-FIL3\n000847     RECORDING MODE IS F\n000848     BLOCK CONTAINS 0 RECORDS\n000849     LABEL RECORDS ARE STANDARD.\n000850 01  INPUT-RECORD3           PIC X(80).                                 10\n000851 FD  INPUT-FIL4\n000852     RECORDING MODE IS F\n000853     BLOCK CONTAINS 0 RECORDS\n000854     LABEL RECORDS ARE STANDARD.\n000855 01  INPUT-RECORD4           PIC X(80).                                 10\n000856 FD  INPUT-FIL5\n000857     RECORDING MODE IS F\n000858     BLOCK CONTAINS 0 RECORDS\n000859     LABEL RECORDS ARE STANDARD.\n000860 01  INPUT-RECORD5           PIC X(80).                                 10\n000861 FD  INPUT-FIL6\n000862     RECORDING MODE IS F\n000863     BLOCK CONTAINS 0 RECORDS\n000864     LABEL RECORDS ARE STANDARD.\n000865 01  INPUT-RECORD6           PIC X(80).                                 10\n000866 FD  INPUT-FIL7\n000867     RECORDING MODE IS F\n000868     BLOCK CONTAINS 0 RECORDS\n000869     LABEL RECORDS ARE STANDARD.\n000870 01  INPUT-RECORD7           PIC X(80).                                 10\n000871 FD  INPUT-FIL8\n000872     RECORDING MODE IS F\n000873     BLOCK CONTAINS 0 RECORDS\n000874     LABEL RECORDS ARE STANDARD.\n000875 01  INPUT-RECORD8           PIC X(80).                                 10\n000876 FD  INPUT-FIL9\n000877     RECORDING MODE IS F\n000878     BLOCK CONTAINS 0 RECORDS\n000879     LABEL RECORDS ARE STANDARD.\n000880 01  INPUT-RECORD9           PIC X(80).                                 10\n000881 FD  PRINT-FIL1\n000882     RECORDING MODE IS F\n000883     BLOCK CONTAINS 0 RECORDS\n000890     LABEL RECORDS ARE STANDARD.\n000891 01  PRINT-RECORD1           PIC X(133).                                10\n000892 FD  PRINT-FIL2\n000893     RECORDING MODE IS F\n000894     BLOCK CONTAINS 0 RECORDS\n000895     LABEL RECORDS ARE STANDARD.\n000896 01  PRINT-RECORD2           PIC X(133).                                10\n000897 FD  PRINT-FIL3\n000898     RECORDING MODE IS F\n000899     BLOCK CONTAINS 0 RECORDS\n000900     LABEL RECORDS ARE STANDARD.\n000901 01  PRINT-RECORD3           PIC X(133).                                10\n000902 FD  PRINT-FIL4\n000903     RECORDING MODE IS F\n000904     BLOCK CONTAINS 0 RECORDS\n000905     LABEL RECORDS ARE STANDARD.\n000906 01  PRINT-RECORD4           PIC X(133).                                10\n000907 FD  PRINT-FIL5\n000908     RECORDING MODE IS F\n000909     BLOCK CONTAINS 0 RECORDS\n000910     LABEL RECORDS ARE STANDARD.\n000911 01  PRINT-RECORD5           PIC X(133).                                10\n000912 FD  PRINT-FIL6\n000913     RECORDING MODE IS F\n000914     BLOCK CONTAINS 0 RECORDS\n000915     LABEL RECORDS ARE STANDARD.\n000916 01  PRINT-RECORD6           PIC X(133).                                10\n000917 FD  PRINT-FIL7\n000918     RECORDING MODE IS F\n000919     BLOCK CONTAINS 0 RECORDS\n000920     LABEL RECORDS ARE STANDARD.\n000921 01  PRINT-RECORD7           PIC X(133).                                10\n000922 FD  PRINT-FIL8\n000923     RECORDING MODE IS F\n000924     BLOCK CONTAINS 0 RECORDS\n000925     LABEL RECORDS ARE STANDARD.\n000926 01  PRINT-RECORD8           PIC X(133).                                10\n000927 FD  PRINT-FIL9\n000928     RECORDING MODE IS F\n000929     BLOCK CONTAINS 0 RECORDS\n000930     LABEL RECORDS ARE STANDARD.\n000931 01  PRINT-RECORD9           PIC X(133).                                10\n000932 FD  OUTPUT-FIL1\n000933     RECORDING MODE IS F\n000934     BLOCK CONTAINS 0 RECORDS\n000935     LABEL RECORDS ARE STANDARD.\n000936 01  OUTPUT-RECORD1           PIC X(80).                                10\n000937 FD  OUTPUT-FIL2\n000938     RECORDING MODE IS F\n000939     BLOCK CONTAINS 0 RECORDS\n000940     LABEL RECORDS ARE STANDARD.\n000941 01  OUTPUT-RECORD2           PIC X(80).                                10\n000942 FD  OUTPUT-FIL3\n000943     RECORDING MODE IS F\n000944     BLOCK CONTAINS 0 RECORDS\n000945     LABEL RECORDS ARE STANDARD.\n000946 01  OUTPUT-RECORD3           PIC X(80).                                10\n000947 FD  OUTPUT-FIL4\n000948     RECORDING MODE IS F\n000949     BLOCK CONTAINS 0 RECORDS\n000950     LABEL RECORDS ARE STANDARD.\n000951 01  OUTPUT-RECORD4           PIC X(80).                                10\n000952 FD  OUTPUT-FIL5\n000953     RECORDING MODE IS F\n000954     BLOCK CONTAINS 0 RECORDS\n000955     LABEL RECORDS ARE STANDARD.\n000956 01  OUTPUT-RECORD5           PIC X(80).                                10\n000957 FD  OUTPUT-FIL6\n000958     RECORDING MODE IS F\n000959     BLOCK CONTAINS 0 RECORDS\n000960     LABEL RECORDS ARE STANDARD.\n000961 01  OUTPUT-RECORD6           PIC X(80).                                10\n000962 FD  OUTPUT-FIL7\n000963     RECORDING MODE IS F\n000964     BLOCK CONTAINS 0 RECORDS\n000965     LABEL RECORDS ARE STANDARD.\n000966 01  OUTPUT-RECORD7           PIC X(80).                                10\n000967 FD  OUTPUT-FIL8\n000968     RECORDING MODE IS F\n000969     BLOCK CONTAINS 0 RECORDS\n000970     LABEL RECORDS ARE STANDARD.\n000971 01  OUTPUT-RECORD8           PIC X(80).                                10\n000972 FD  OUTPUT-FIL9\n000973     RECORDING MODE IS F\n000974     BLOCK CONTAINS 0 RECORDS\n000975     LABEL RECORDS ARE STANDARD.\n000976 01  OUTPUT-RECORD9           PIC X(80).                                10\n000977\n000980 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'FILLBLOW WORKING STORAGE BEGINS HERE'.\n001200 77  GETMAIN-CALLS         PIC S9(9) COMP-3 VALUE +0.\n001600\n001601 01  NUMBER-CALLS.\n001602     05  FILLER            PIC X(19) VALUE ' CALLED GETMAIN SUB'.\n001603     05  FILLER            PIC X(18) VALUE 'ROUTINE TO GET 9K '.\n001604     05  PRINT-CALLS       PIC ZZZ,ZZZ,ZZZ.\n001605     05  FILLER            PIC X(32) VALUE ' TIMES'.\n001607\n001608 01  SWITCHES-AREA.\n001609     05  FILE1-EOF-SWITCH          PIC X VALUE 'N'.\n001610         88  FILE1-EOF             VALUE 'Y'.\n001611     05  FILE2-EOF-SWITCH          PIC X VALUE 'N'.\n001612         88  FILE2-EOF             VALUE 'Y'.\n001613     05  FILE3-EOF-SWITCH          PIC X VALUE 'N'.\n001614         88  FILE3-EOF             VALUE 'Y'.\n001615     05  FILE4-EOF-SWITCH          PIC X VALUE 'N'.\n001616         88  FILE4-EOF             VALUE 'Y'.\n001617     05  FILE5-EOF-SWITCH          PIC X VALUE 'N'.\n001618         88  FILE5-EOF             VALUE 'Y'.\n001619     05  FILE6-EOF-SWITCH          PIC X VALUE 'N'.\n001620         88  FILE6-EOF             VALUE 'Y'.\n001621     05  FILE7-EOF-SWITCH          PIC X VALUE 'N'.\n001622         88  FILE7-EOF             VALUE 'Y'.\n001623     05  FILE8-EOF-SWITCH          PIC X VALUE 'N'.\n001624         88  FILE8-EOF             VALUE 'Y'.\n001625     05  FILE9-EOF-SWITCH          PIC X VALUE 'N'.\n001626         88  FILE9-EOF             VALUE 'Y'.\n001627\n001628 01  HEADER-LINE.\n001629     05  FILLER           PIC X(16) VALUE '1THIS IS LINE 1 '.\n001630     05  FILLER           PIC X(19) VALUE 'FOR PRINT FILE NBR '.\n001631     05  HEADER-ID        PIC X.\n001632     05  FILLER           PIC X(44) VALUE SPACES.\n001633\n001634 01  OUT-RECORD.\n001635     05  FILLER           PIC X(16) VALUE ' THIS IS RECORD '.\n001636     05  FILLER           PIC X(15) VALUE 'NUMBER ONE FOR '.\n001637     05  FILLER           PIC X(16) VALUE 'OUTPUT FILE NBR '.\n001638     05  OUT-FILE-NBR     PIC X.\n001639     05  FILLER           PIC X(32) VALUE SPACES.\n001640\n001641 01  TABLE1.\n001642     05  ENTRY1              OCCURS 180 TIMES INDEXED BY X1.\n001643         10 FIELD1           PIC X(80).\n001644 01  TABLE2.\n001650     05  ENTRY2              OCCURS 180 TIMES INDEXED BY X2.\n001660         10 FIELD2           PIC X(80).\n001670 01  TABLE3.\n001680     05  ENTRY3              OCCURS 180 TIMES INDEXED BY X3.\n001690         10 FIELD3           PIC X(80).\n001691 01  TABLE4.\n001692     05  ENTRY4              OCCURS 180 TIMES INDEXED BY X4.\n001693         10 FIELD4           PIC X(80).\n001694 01  TABLE5.\n001695     05  ENTRY5              OCCURS 180 TIMES INDEXED BY X5.\n001696         10 FIELD5           PIC X(80).\n001697 01  TABLE6.\n001698     05  ENTRY6              OCCURS 180 TIMES INDEXED BY X6.\n001699         10 FIELD6           PIC X(80).\n001700 01  TABLE7.\n001701     05  ENTRY7              OCCURS 180 TIMES INDEXED BY X7.\n001702         10 FIELD7           PIC X(80).\n001703 01  TABLE8.\n001704     05  ENTRY8              OCCURS 180 TIMES INDEXED BY X8.\n001705         10 FIELD8           PIC X(80).\n001706 01  TABLE9.\n001707     05  ENTRY9              OCCURS 180 TIMES INDEXED BY X9.\n001708         10 FIELD9           PIC X(80).\n001709\n001710 PROCEDURE DIVISION.\n001800\n002000     PERFORM A100-INITIALIZATION.\n002100     PERFORM B100-MAINLINE-PROCESSING.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002500 A100-INITIALIZATION.\n002600     OPEN INPUT INPUT-FIL1, INPUT-FIL2, INPUT-FIL3,\n002610                INPUT-FIL4, INPUT-FIL5, INPUT-FIL6,\n002611                INPUT-FIL7, INPUT-FIL8, INPUT-FIL9,\n002630         OUTPUT OUTPUT-FIL1, OUTPUT-FIL2, OUTPUT-FIL3,\n002631                OUTPUT-FIL4, OUTPUT-FIL5, OUTPUT-FIL6,\n002640                OUTPUT-FIL7, OUTPUT-FIL8, OUTPUT-FIL9,\n002660                PRINT-FIL1, PRINT-FIL2, PRINT-FIL3,\n002670                PRINT-FIL4, PRINT-FIL5, PRINT-FIL6,\n002671                PRINT-FIL7, PRINT-FIL8, PRINT-FIL9.\n002700     PERFORM A101-LOAD-TABLE1 UNTIL FILE1-EOF OR X1 > 179.\n002710     PERFORM A102-LOAD-TABLE2 UNTIL FILE2-EOF OR X2 > 179.\n002720     PERFORM A103-LOAD-TABLE3 UNTIL FILE3-EOF OR X3 > 179.\n002730     PERFORM A104-LOAD-TABLE4 UNTIL FILE4-EOF OR X4 > 179.\n002740     PERFORM A105-LOAD-TABLE5 UNTIL FILE5-EOF OR X5 > 179.\n002750     PERFORM A106-LOAD-TABLE6 UNTIL FILE6-EOF OR X6 > 179.\n002760     PERFORM A107-LOAD-TABLE7 UNTIL FILE7-EOF OR X7 > 179.\n002770     PERFORM A108-LOAD-TABLE8 UNTIL FILE8-EOF OR X8 > 179.\n002780     PERFORM A109-LOAD-TABLE9 UNTIL FILE9-EOF OR X9 > 179.\n002781     PERFORM A201-PRINT-HEADER1.\n002782     PERFORM A202-PRINT-HEADER2.\n002783     PERFORM A203-PRINT-HEADER3.\n002784     PERFORM A204-PRINT-HEADER4.\n002785     PERFORM A205-PRINT-HEADER5.\n002786     PERFORM A206-PRINT-HEADER6.\n002787     PERFORM A207-PRINT-HEADER7.\n002788     PERFORM A208-PRINT-HEADER8.\n002789     PERFORM A209-PRINT-HEADER9.\n002790     PERFORM A301-WRITE-OUTPUT1.\n002791     PERFORM A302-WRITE-OUTPUT2.\n002792     PERFORM A303-WRITE-OUTPUT3.\n002793     PERFORM A304-WRITE-OUTPUT4.\n002794     PERFORM A305-WRITE-OUTPUT5.\n002795     PERFORM A306-WRITE-OUTPUT6.\n002796     PERFORM A307-WRITE-OUTPUT7.\n002797     PERFORM A308-WRITE-OUTPUT8.\n002798     PERFORM A309-WRITE-OUTPUT9.\n002803\n002804 A101-LOAD-TABLE1.\n002810     READ INPUT-FIL1\n002900         AT END\n003000             MOVE 'Y' TO FILE1-EOF-SWITCH.\n003100     IF FILE1-EOF\n003200         MOVE HIGH-VALUES TO FIELD1 (X1)\n003300     ELSE\n003400         MOVE INPUT-RECORD1 TO FIELD1 (X1)\n003500         SET X1 UP BY 1.\n003600\n003700 A102-LOAD-TABLE2.\n003800     READ INPUT-FIL2\n003900         AT END\n004000             MOVE 'Y' TO FILE2-EOF-SWITCH.\n004100     IF FILE2-EOF\n004200         MOVE HIGH-VALUES TO FIELD2 (X2)\n004300     ELSE\n004400         MOVE INPUT-RECORD2 TO FIELD2 (X2)\n004500         SET X2 UP BY 1.\n004510\n004520 A103-LOAD-TABLE3.\n004530     READ INPUT-FIL3\n004540         AT END\n004550             MOVE 'Y' TO FILE3-EOF-SWITCH.\n004551     IF FILE3-EOF\n004552         MOVE HIGH-VALUES TO FIELD3 (X3)\n004553     ELSE\n004554         MOVE INPUT-RECORD3 TO FIELD3 (X3)\n004555         SET X3 UP BY 1.\n004556\n004557 A104-LOAD-TABLE4.\n004558     READ INPUT-FIL4\n004559         AT END\n004560             MOVE 'Y' TO FILE4-EOF-SWITCH.\n004561     IF FILE4-EOF\n004562         MOVE HIGH-VALUES TO FIELD4 (X4)\n004563     ELSE\n004564         MOVE INPUT-RECORD4 TO FIELD4 (X4)\n004565         SET X4 UP BY 1.\n004566\n004567 A105-LOAD-TABLE5.\n004568     READ INPUT-FIL5\n004569         AT END\n004570             MOVE 'Y' TO FILE5-EOF-SWITCH.\n004571     IF FILE5-EOF\n004572         MOVE HIGH-VALUES TO FIELD5 (X5)\n004573     ELSE\n004574         MOVE INPUT-RECORD5 TO FIELD5 (X5)\n004575         SET X5 UP BY 1.\n004576\n004577 A106-LOAD-TABLE6.\n004578     READ INPUT-FIL6\n004579         AT END\n004580             MOVE 'Y' TO FILE6-EOF-SWITCH.\n004581     IF FILE6-EOF\n004582         MOVE HIGH-VALUES TO FIELD6 (X6)\n004583     ELSE\n004584         MOVE INPUT-RECORD6 TO FIELD6 (X6)\n004585         SET X6 UP BY 1.\n004586\n004587 A107-LOAD-TABLE7.\n004588     READ INPUT-FIL7\n004589         AT END\n004590             MOVE 'Y' TO FILE7-EOF-SWITCH.\n004591     IF FILE7-EOF\n004592         MOVE HIGH-VALUES TO FIELD7 (X7)\n004593     ELSE\n004594         MOVE INPUT-RECORD7 TO FIELD7 (X7)\n004595         SET X7 UP BY 1.\n004596\n004597 A108-LOAD-TABLE8.\n004598     READ INPUT-FIL8\n004599         AT END\n004600             MOVE 'Y' TO FILE8-EOF-SWITCH.\n004601     IF FILE8-EOF\n004602         MOVE HIGH-VALUES TO FIELD8 (X8)\n004603     ELSE\n004604         MOVE INPUT-RECORD8 TO FIELD8 (X8)\n004605         SET X8 UP BY 1.\n004606\n004607 A109-LOAD-TABLE9.\n004608     READ INPUT-FIL9\n004609         AT END\n004610             MOVE 'Y' TO FILE9-EOF-SWITCH.\n004611     IF FILE9-EOF\n004612         MOVE HIGH-VALUES TO FIELD9 (X9)\n004613     ELSE\n004614         MOVE INPUT-RECORD9 TO FIELD9 (X9)\n004615         SET X9 UP BY 1.\n004616\n004617 A201-PRINT-HEADER1.\n004618     MOVE '1' TO HEADER-ID.\n004619     WRITE PRINT-RECORD1 FROM HEADER-LINE AFTER 1.\n004620\n004621 A202-PRINT-HEADER2.\n004622     MOVE '2' TO HEADER-ID.\n004623     WRITE PRINT-RECORD2 FROM HEADER-LINE AFTER 1.\n004624\n004625 A203-PRINT-HEADER3.\n004626     MOVE '3' TO HEADER-ID.\n004627     WRITE PRINT-RECORD3 FROM HEADER-LINE AFTER 1.\n004628\n004629 A204-PRINT-HEADER4.\n004630     MOVE '4' TO HEADER-ID.\n004631     WRITE PRINT-RECORD4 FROM HEADER-LINE AFTER 1.\n004632\n004633 A205-PRINT-HEADER5.\n004634     MOVE '5' TO HEADER-ID.\n004635     WRITE PRINT-RECORD5 FROM HEADER-LINE AFTER 1.\n004636\n004637 A206-PRINT-HEADER6.\n004638     MOVE '6' TO HEADER-ID.\n004639     WRITE PRINT-RECORD6 FROM HEADER-LINE AFTER 1.\n004640\n004641 A207-PRINT-HEADER7.\n004642     MOVE '7' TO HEADER-ID.\n004643     WRITE PRINT-RECORD7 FROM HEADER-LINE AFTER 1.\n004644\n004645 A208-PRINT-HEADER8.\n004646     MOVE '8' TO HEADER-ID.\n004647     WRITE PRINT-RECORD8 FROM HEADER-LINE AFTER 1.\n004648\n004649 A209-PRINT-HEADER9.\n004650     MOVE '9' TO HEADER-ID.\n004651     WRITE PRINT-RECORD9 FROM HEADER-LINE AFTER 1.\n004652\n004653 A301-WRITE-OUTPUT1.\n004654     MOVE '1' TO OUT-FILE-NBR.\n004655     WRITE OUTPUT-RECORD1 FROM OUT-RECORD.\n004656\n004657 A302-WRITE-OUTPUT2.\n004658     MOVE '2' TO OUT-FILE-NBR.\n004659     WRITE OUTPUT-RECORD2 FROM OUT-RECORD.\n004660\n004661 A303-WRITE-OUTPUT3.\n004662     MOVE '3' TO OUT-FILE-NBR.\n004663     WRITE OUTPUT-RECORD3 FROM OUT-RECORD.\n004664\n004665 A304-WRITE-OUTPUT4.\n004666     MOVE '4' TO OUT-FILE-NBR.\n004667     WRITE OUTPUT-RECORD4 FROM OUT-RECORD.\n004668\n004669 A305-WRITE-OUTPUT5.\n004670     MOVE '5' TO OUT-FILE-NBR.\n004671     WRITE OUTPUT-RECORD5 FROM OUT-RECORD.\n004672\n004673 A306-WRITE-OUTPUT6.\n004674     MOVE '6' TO OUT-FILE-NBR.\n004675     WRITE OUTPUT-RECORD6 FROM OUT-RECORD.\n004676\n004677 A307-WRITE-OUTPUT7.\n004678     MOVE '7' TO OUT-FILE-NBR.\n004679     WRITE OUTPUT-RECORD7 FROM OUT-RECORD.\n004680\n004681 A308-WRITE-OUTPUT8.\n004682     MOVE '8' TO OUT-FILE-NBR.\n004683     WRITE OUTPUT-RECORD8 FROM OUT-RECORD.\n004684\n004685 A309-WRITE-OUTPUT9.\n004686     MOVE '9' TO OUT-FILE-NBR.\n004687     WRITE OUTPUT-RECORD9 FROM OUT-RECORD.\n004688\n008117 B100-MAINLINE-PROCESSING.\n008118     CALL 'GETMAIN'.\n008119     ADD 1 TO GETMAIN-CALLS.\n008120     MOVE GETMAIN-CALLS TO PRINT-CALLS\n008121     WRITE PRINT-RECORD1 FROM NUMBER-CALLS AFTER 1.\n008122     GO TO B100-MAINLINE-PROCESSING.\n008129\n008130 Z100-END-OF-PROCESSING.\n008131     CLOSE INPUT-FIL1, INPUT-FIL2, INPUT-FIL3,\n008132           INPUT-FIL4, INPUT-FIL5, INPUT-FIL6,\n008133           INPUT-FIL7, INPUT-FIL8, INPUT-FIL9,\n008134           OUTPUT-FIL1, OUTPUT-FIL2, OUTPUT-FIL3,\n008135           OUTPUT-FIL4, OUTPUT-FIL5, OUTPUT-FIL6,\n008136           OUTPUT-FIL7, OUTPUT-FIL8, OUTPUT-FIL9,\n008137           PRINT-FIL1, PRINT-FIL2, PRINT-FIL3,\n008140           PRINT-FIL4, PRINT-FIL5, PRINT-FIL6,\n008200           PRINT-FIL7, PRINT-FIL8, PRINT-FIL9.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "FLTPNT": {"ttr": 6657, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00$\\x00\\x93\\x07\\x0f\\x01\\x02\\x00O\\x13'\\x00w\\x00w\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "2002-01-04T13:27:24", "lines": 119, "newlines": 119, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  FLTPNT.\n000300 REMARKS. USED TO INVESTIGATE COBOL'S USE OF FLOATING POINT. SEVERAL\n000400          SIGNIFICANT COBOL CODING RULES ARE:\n000500          (1) INTERNAL FLOATING POINT FIELDS:\n000600              (A) DO NOT CODE A PIC CLAUSE.\n000700              (B) FOR SHORT PRECISION (4-BYTE) FIELDS USE COMP-1.\n000800              (C) FOR LONG PRECISION (8-BYTE) FIELDS USE COMP-2.\n000900              (D) VALUE CLAUSES THE LITERAL MUST BE OF THE FORM\n001000                  SMM.MMESXX, WHERE:\n001100                  S IS A SIGN, + OR - AND IS REQUIRED BOTH PLACES.\n001200                  M IS A DIGIT IN THE MANTISSA (16 DIGITS MAX)\n001300                  . IS A DECIMAL POINT, AND IS REQUIRED.\n001400                  E IS THE LETTER E, IDENTIFYING THE EXPONENT, AND\n001500                    IS REQUIRED.\n001600                  XX IS THE EXPONENT VALUE BETWEEN -79 AND +76.\n001700              (E) MINIMUM VALUE IS +5.41E-79.\n001800              (F) MAXIMUM VALUE IS +.719E+76.\n001900          (2) EXTERNAL FLOATING POINT FIELDS:\n002000              (A) USAGE DISPLAY MUST BE CODED OR IMPLIED\n002100              (B) NO VALUE CLAUSE MAY BE CODED\n002200              (C) PIC CHARACTER STRING MUST BE OF THE FORM\n002300                  S99D99ESXX, WHERE\n002400                  S IS A SIGN INDICATOR, + SPECIFIES THAT \"+\"\n002500                    PRECEDES POSITIVE VALUES. IF - IS USED,\n002600                    A SPACE PRECEDES POSITIVE VALUES. FOR BOTH,\n002700                    A \"-\" PRECEDES NEGATIVE VALUES. REQUIRED.\n002800                  9 IS A DIGIT IN THE MANTISSA (16 DIGITS MAX)\n002900                  D IS AN ACTUAL DECIMAL POINT (.) OR IMPLIED\n003000                    DECIMAL POINT (V), AND IS REQUIRED.\n003100                  E IS THE LETTER E, IDENTIFYING THE EXPONENT\n003200                  XX REPRESENTS THE EXPONENT VALUE AND MUST BE\n003300                    TWO DIGITS.\n003400 ENVIRONMENT DIVISION.\n003500 CONFIGURATION SECTION.\n003600 INPUT-OUTPUT SECTION.\n003700 FILE-CONTROL.\n003800     SELECT PRINT-OUT ASSIGN TO UT-S-PRINT1.\n003900 DATA DIVISION.\n004000 FILE SECTION.\n004100 FD  PRINT-OUT\n004200       LABEL RECORDS ARE STANDARD\n004300       RECORD CONTAINS 133 CHARACTERS\n004400       DATA RECORD IS PRINT-LINE.\n004500 01  PRINT-LINE.\n004600     05  PRINT-CC                PIC X.\n004700     05  PRINT-DATA              PIC X(132).\n004800 WORKING-STORAGE SECTION.\n004900 77  MINFP                  COMP-2 VALUE +5.41E-79.\n005000 77  MAXFP                  COMP-2 VALUE +.719E+76.\n005100 77  MULNBR                 COMP-2 VALUE +1.7E+71.\n005200 77  DIVNBR                 COMP-2 VALUE +2147483647.E+0.\n005300 77  SEEDNBR                COMP-2 VALUE +1.111E+0.\n005400 77  FPANSWER               COMP-2 VALUE +0.E+0.\n005500 77  FP231-1                COMP-2.\n005600 77  FP9                    COMP-2.\n005700 77  FP1E9                  COMP-2.\n005800 77  FP2700                 COMP-2.\n005900*\n006000 01  PRINT-MINFP.\n006100     05 FILLER              PIC X(12) VALUE ' MINFP =    '.\n006200     05 PRT-MINFP           PIC -9.9(15)E-99.\n006300 01  PRINT-MAXFP.\n006400     05 FILLER              PIC X(12) VALUE ' MAXFP =    '.\n006500     05 PRT-MAXFP           PIC -9.9(15)E-99.\n006600 01  PRINT-MULNBR.\n006700     05 FILLER              PIC X(12) VALUE ' MULNBR =   '.\n006800     05 PRT-MULNBR          PIC -9.9(15)E-99.\n006900 01  PRINT-DIVNBR.\n007000     05 FILLER              PIC X(12) VALUE ' DIVNBR =   '.\n007100     05 PRT-DIVNBR          PIC -9.9(15)E-99.\n007200 01  PRINT-SEEDNBR.\n007300     05 FILLER              PIC X(12) VALUE ' SEEDNBR =  '.\n007400     05 PRT-SEEDNBR         PIC -9.9(15)E-99.\n007500 01  PRINT-FPANSWER.\n007600     05 FILLER              PIC X(12) VALUE ' FPANSWER = '.\n007700     05 PRT-FPANSWER        PIC -9.9(15)E-99.\n007800 01  PRINT-FP231-1.\n007900     05 FILLER              PIC X(12) VALUE ' FP231-1 =  '.\n008000     05 PRT-FP231-1         PIC -9.9(15)E-99.\n008100 01  PRINT-FP9.\n008200     05 FILLER              PIC X(12) VALUE ' FP9 =      '.\n008300     05 PRT-FP9             PIC -9.9(15)E-99.\n008400 01  PRINT-FP1E9.\n008500     05 FILLER              PIC X(12) VALUE ' FP1E9 =    '.\n008600     05 PRT-FP1E9           PIC -9.9(15)E-99.\n008700 01  PRINT-FP2700.\n008800     05 FILLER              PIC X(12) VALUE ' FP2700 =   '.\n008900     05 PRT-FP2700          PIC -9.9(15)E-99.\n009000\n009100 PROCEDURE DIVISION.\n009200     OPEN OUTPUT PRINT-OUT.\n009300     MOVE MINFP TO PRT-MINFP.\n009400     MOVE MAXFP TO PRT-MAXFP.\n009500     MOVE MULNBR TO PRT-MULNBR.\n009600     MOVE DIVNBR TO PRT-DIVNBR.\n009700     MOVE SEEDNBR TO PRT-SEEDNBR.\n009800     COMPUTE FPANSWER = (SEEDNBR / DIVNBR) * MULNBR.\n009900     MOVE FPANSWER TO PRT-FPANSWER.\n010000     COMPUTE FP231-1 = (2 ** 31) - 1.\n010100     MOVE FP231-1 TO PRT-FP231-1.\n010200     MOVE +9 TO FP9.\n010300     MOVE FP9 TO PRT-FP9.\n010400     MOVE +1.0E+9 TO FP1E9.\n010500     MOVE FP1E9 TO PRT-FP1E9.\n010600     MOVE 2700 TO FP2700.\n010700     MOVE FP2700 TO PRT-FP2700.\n010800     WRITE PRINT-LINE FROM PRINT-MINFP.\n010900     WRITE PRINT-LINE FROM PRINT-MAXFP.\n011000     WRITE PRINT-LINE FROM PRINT-MULNBR.\n011100     WRITE PRINT-LINE FROM PRINT-DIVNBR.\n011200     WRITE PRINT-LINE FROM PRINT-SEEDNBR.\n011300     WRITE PRINT-LINE FROM PRINT-FPANSWER.\n011400     WRITE PRINT-LINE FROM PRINT-FP231-1.\n011500     WRITE PRINT-LINE FROM PRINT-FP9.\n011600     WRITE PRINT-LINE FROM PRINT-FP1E9.\n011700     WRITE PRINT-LINE FROM PRINT-FP2700.\n011800     CLOSE PRINT-OUT.\n011900     GOBACK.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "GENLDAT2": {"ttr": 6660, "alias": false, "halfwords": 0, "notes": 0, "parms": "b''", "ispf": false, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    GENLDAT2.\n000300 AUTHOR. R THORNTON\n000800***********************************************************************\n000500* GENLDAT2 IS A FUNCTIONAL EQUIVALENT IN COBOL FOR THE ORIGINAL  *\n000600* ASSEMBLER VERSION. IT WAS REWRITTEN IN COBOL/390 TO IMPROVE ITS*\n000700* MAINTAINABILITY AND TO PROVIDE OPERATION BOTH ABOVE AND BELOW  *\n000710* THE 16M LINE.                                                  *\n000711*                                                                *\n000712*                 **** TESTING ****                              *\n000713* CALLGNDT IS A TEST DRIVER THAT CAN BE USED TO TEST CHANGES TO  *\n000714* THIS SUBROUTINE. SEE ALSO THE JCL FOR CALLGND0 AND CALLGND9    *\n000720*                                                                *\n000800******************************************************************\n000900* THIS SUBROUTINE PROVIDES A TABLE OF INFORMATION ABOUT THE DATE *\n000910* RECEIVED FROM THE CALLER. INFORMATION RETURNED TO THE CALLER   *\n001000* INCLUDES DAY OF WEEK, HOLIDAY INDICATION, AND VARIOUS DATE     *\n001010* FORMATS.                                                       *\n001100* THE CALLER MAY SUPPLY THE DATE TO BE ANALYZED IN EITHER JULIAN *\n001200* OR GREGORIAN FORMAT.                                           *\n001210* GENLDAT2 IS VALID FOR DATES FROM JAN 1, 1900 THRU DEC 31, 2099.*\n001400*                                                                *\n001500* A SINGLE PARAMETER IS SUPPLIED, FORMATTED AS FOLLOWS:          *\n001600*               BYTE 1     DATE SENT BY CALLER: J=JULIAN DATE IS *\n001700*                          SUPPLIED, G=GREGORIAN DATE SUPPLIED.  *\n001800*               BYTE 2     ERROR INDICATOR. BLANK=SUCCESSFUL DATE*\n001900*                          PROCESSING. E=ERROR IN DATE SUPPLIED. *\n002000*               BYTE 3     DAY OF WEEK INDICATOR: 1=MONDAY,      *\n002100*                          2=TUESDAY, 3=WEDNESDAY, 4=THURSDAY,   *\n002200*                          5=FRIDAY, 6=SATURDAY, 7=SUNDAY.       *\n002300*               BYTE 4     HOLIDAY INDICATOR: BLANK=NOT A HOLIDAY*\n002400*                          1=NEW YEAR'S DAY, 2=(NOT USED),       *\n002500*                          3=(NOT USED),  4=MEMORIAL DAY,        *\n002600*                          5=INDEPENDENCE DAY, 6=LABOR DAY,      *\n002700*                          7=THANKSGIVING DAY, 8=FRIDAY AFTER    *\n002800*                          THANKSGIVING, 9=CHRISTMAS DAY         *\n002900*               BYTE 5     LEAP YEAR INDICATOR: 0=NOT LEAP YEAR, *\n003000*                          1=LEAP YEAR                           *\n003100*              BYTES 6-9   JULIAN DATE. IF DATE SENT  IS J THIS  *\n003200*                          FIELD IS SUPPLIED BY THE CALLER. IF   *\n003210*                          NOT, THE JULIAN EQUIVALENT OF THE     *\n003300*                          GREGORIAN DATE SUPPLIED WILL BE       *\n003400*                          RETURNED HERE. THIS IS AN UNSIGNED,   *\n003500*                          PACKED DECIMAL FIELD WITH THE FORMAT  *\n003600*                          YYYYDDDF                              *\n003700*              BYTES 10-17 GREGORIAN DATE. IF DATE SENT IS G THIS*\n003800*                          IS SUPPLIED BY THE CALLER. IF NOT, THE*\n003900*                          GREGORIAN EQUIVALENT OF THE JULIAN    *\n004000*                          DATE SUPPLIED WILL BE RETURNED. THIS  *\n004100*                          IS AN UNSIGNED ZONED DECIMAL FIELD    *\n004200*                          WITH THE FORMAT MMDDYYYY              *\n004300*             BYTES 18-35  A LITERAL DATE, LEFT JUSTIFIED,       *\n004400*                          IN AN 18-BYTE FIELD.                  *\n004500*                          EXAMPLES ARE: JANUARY 16, 1979        *\n004600*                                        MAY 9, 1982             *\n004700*             BYTES 36-43  JULIAN DATE WITH SLASH: YYYY/DDD.     *\n004800*             BYTES 44-53  GREGORIAN DATE WITH SLASHES:          *\n004900*                          MM/DD/YYYY                            *\n005000*                                                                *\n005100*  AUTHOR R. THORNTON  DEC 2001                                  *\n005200******************************************************************\n005300*                   MAINTENANCE CHANGES                          *\n005310******************************************************************\n005500*                                                                *\n005600*                                                                *\n005700*                                                                *\n005800*                                                                *\n005900*                                                                *\n006000*                                                                *\n006100*                                                                *\n006200******************************************************************\n006300 ENVIRONMENT DIVISION.\n006400 CONFIGURATION SECTION.\n006500 INPUT-OUTPUT SECTION.\n006600 FILE-CONTROL.\n006700 DATA DIVISION.\n006800 FILE SECTION.\n006900 WORKING-STORAGE SECTION.\n007000 77  FILLER PIC X(36)  VALUE\n007100     'GENLDAT2 WORKING STORAGE BEGINS HERE'.\n007200 01  CONVERSION-AREAS.\n007300    05  GREGCV1.\n007400        10  JANUARY-OFFSET     PIC S9(3) COMP-3 VALUE +0.\n007500        10  FEBRUARY-OFFSET    PIC S9(3) COMP-3 VALUE +31.\n007600        10  MARCH-OFFSET       PIC S9(3) COMP-3 VALUE +59.\n007700        10  APRIL-OFFSET       PIC S9(3) COMP-3 VALUE +90.\n007800        10  MAY-OFFSET         PIC S9(3) COMP-3 VALUE +120.\n007900        10  JUNE-OFFSET        PIC S9(3) COMP-3 VALUE +151.\n008000        10  JULY-OFFSET        PIC S9(3) COMP-3 VALUE +181.\n008100        10  AUGUST-OFFSET      PIC S9(3) COMP-3 VALUE +212.\n008200        10  SEPTEMBER-OFFSET   PIC S9(3) COMP-3 VALUE +243.\n008300        10  OCTOBER-OFFSET     PIC S9(3) COMP-3 VALUE +273.\n008400        10  NOVEMBER-OFFSET    PIC S9(3) COMP-3 VALUE +304.\n008500        10  DECEMBER-OFFSET    PIC S9(3) COMP-3 VALUE +334.\n008600        10  TABLE-END-VALUE    PIC S9(3) COMP-3 VALUE +999.\n008700    05  MONTH-OFFSET REDEFINES GREGCV1 PIC S9(3) COMP-3\n008800                               OCCURS 13 TIMES.\n008900    05  GRGVLDY.\n009000        10 DAYS-IN-JANUARY     PIC 99 VALUE 31.\n009100        10 DAYS-IN-FEBRUARY    PIC 99 VALUE 28.\n009200        10 DAYS-IN-MARCH       PIC 99 VALUE 31.\n009300        10 DAYS-IN-APRIL       PIC 99 VALUE 30.\n009400        10 DAYS-IN-MAY         PIC 99 VALUE 31.\n009500        10 DAYS-IN-JUNE        PIC 99 VALUE 30.\n009600        10 DAYS-IN-JULY        PIC 99 VALUE 31.\n009700        10 DAYS-IN-AUGUST      PIC 99 VALUE 31.\n009800        10 DAYS-IN-SEPTEMBER   PIC 99 VALUE 30.\n009900        10 DAYS-IN-OCTOBER     PIC 99 VALUE 31.\n010000        10 DAYS-IN-NOVEMBER    PIC 99 VALUE 30.\n010100        10 DAYS-IN-DECEMBER    PIC 99 VALUE 31.\n010200    05  DAYS-IN-MONTH REDEFINES GRGVLDY PIC 99\n010300                               OCCURS 12 TIMES.\n010400    05  NEWYR                  PIC X VALUE '0'.\n010500        88 DEC-31-THIS-YEAR-IS-NEW-YEARS VALUE IS '1'.\n010600    05  HOLIDAY-FOUND-INDICATOR         PIC X.\n010700        88  HOLIDAY-DATE-FOUND            VALUE IS 'Y'.\n010800    05  YEARDATA.\n010900        10  YEAR-START-DAY              PIC 9.\n011000            88 YEAR-STARTS-ON-MONDAY      VALUE IS 0.\n011100            88 YEAR-STARTS-ON-TUESDAY     VALUE IS 1.\n011200            88 YEAR-STARTS-ON-WEDNESDAY   VALUE IS 2.\n011300            88 YEAR-STARTS-ON-THURSDAY    VALUE IS 3.\n011400            88 YEAR-STARTS-ON-FRIDAY      VALUE IS 4.\n011500            88 YEAR-STARTS-ON-SATURDAY    VALUE IS 5.\n011600            88 YEAR-STARTS-ON-SUNDAY      VALUE IS 6.\n011700        10  LEAP-YEAR-INDICATOR             PIC X.\n011800            88  THIS-YEAR-IS-A-LEAP-YEAR      VALUE IS '1'.\n011900            88  THIS-YEAR-IS-NOT-A-LEAP-YEAR  VALUE IS '0'.\n012000        10  YRHOL.\n012100            15  HOLIDAYS-THIS-YEAR          OCCURS 8 TIMES.\n012200                20  HOLIDAY-IDENTIFIER      PIC X.\n012300                    88  NEW-YEARS-DAY         VALUE IS '1'.\n012400                    88  MEMORIAL-DAY          VALUE IS '4'.\n012500                    88  INDEPENDENCE-DAY      VALUE IS '5'.\n012600                    88  LABOR-DAY             VALUE IS '6'.\n012700                    88  THANKSGIVING-DAY      VALUE IS '7'.\n012800                    88  DAY-AFTER-THANKSGIVING VALUE IS '8'.\n012900                    88  CHRISTMAS-DAY         VALUE IS '9'.\n013000                    88  NULL-HOLIDAY-ENTRY    VALUE IS '0'.\n013100                20  HOLIDAY-DATE.\n013200                    25  HOLIDAY-MONTH         PIC 99.\n013300                    25  HOLIDAY-DAY           PIC 99.\n013400    05  HSUB                           PIC S9(5) COMP-3.\n013500    05  CPRDAY                         PIC S9(5) COMP-3.\n013600    05  BLANX                          PIC X(20) VALUE SPACES.\n013700    05  UNPACKED-JULIAN-DATE           PIC 9(7).\n013800    05  FILLER REDEFINES UNPACKED-JULIAN-DATE.\n013900        10  UNPACKED-JULIAN-YEAR       PIC 9(4).\n014000        10  UNPACKED-JULIAN-DAY        PIC 9(3).\n014100    05  MTH                            PIC S9(5) COMP-3.\n014200    05  JULIAN-MONTH-FOUND-INDICATOR   PIC X.\n014300        88 JULIAN-MONTH-FOUND          VALUE 'Y'.\n014400    05  WORK1                          PIC S9(5) COMP-3.\n014500    05  WORK2                          PIC S9(5) COMP-3.\n014600    05  OFFSET                         PIC S9(5) COMP-3.\n014700    05  YRSUB                          PIC S9(5) COMP-3.\n014800*********************************************************************\n014900*        TABLE OF LITERAL MONTH NAMES                            *\n015000*********************************************************************\n015100 01  MONTH-NAME-TABLE.\n015200     05  MONTH-NAMES.\n015300         10 FILLER           PIC X(9) VALUE 'JANUARY'.\n015400         10 FILLER           PIC S9(2) COMP VALUE +9.\n015500         10 FILLER           PIC X(9) VALUE 'FEBRUARY'.\n015600         10 FILLER           PIC S9(2) COMP VALUE +10.\n015700         10 FILLER           PIC X(9) VALUE 'MARCH'.\n015800         10 FILLER           PIC S9(2) COMP VALUE +7.\n015900         10 FILLER           PIC X(9) VALUE 'APRIL'.\n016000         10 FILLER           PIC S9(2) COMP VALUE +7.\n016100         10 FILLER           PIC X(9) VALUE 'MAY'.\n016200         10 FILLER           PIC S9(2) COMP VALUE +5.\n016300         10 FILLER           PIC X(9) VALUE 'JUNE'.\n016400         10 FILLER           PIC S9(2) COMP VALUE +6.\n016500         10 FILLER           PIC X(9) VALUE 'JULY'.\n016600         10 FILLER           PIC S9(2) COMP VALUE +6.\n016700         10 FILLER           PIC X(9) VALUE 'AUGUST'.\n016800         10 FILLER           PIC S9(2) COMP VALUE +8.\n016900         10 FILLER           PIC X(9) VALUE 'SEPTEMBER'.\n017000         10 FILLER           PIC S9(2) COMP VALUE +11.\n017100         10 FILLER           PIC X(9) VALUE 'OCTOBER'.\n017200         10 FILLER           PIC S9(2) COMP VALUE +9.\n017300         10 FILLER           PIC X(9) VALUE 'NOVEMBER'.\n017400         10 FILLER           PIC S9(2) COMP VALUE +10.\n017500         10 FILLER           PIC X(9) VALUE 'DECEMBER'.\n017600         10 FILLER           PIC S9(2) COMP VALUE +10.\n017700     05  MONTH-ENTRY REDEFINES MONTH-NAMES,\n017800                             OCCURS 12 TIMES.\n017900         10  MONTH-NAME      PIC X(9).\n018000         10  MONTH-SIZE      PIC S9(2) COMP.\n018100*********************************************************************\n018200*        TABLE OF LITERAL DAY-OF-THE-WEEK NAMES                  *\n018300*********************************************************************\n018400    05  DWKTBL.\n018500        10  FILLER                    PIC X(9) VALUE 'MONDAY'.\n018600        10  FILLER                    PIC X(9) VALUE 'TUESDAY'.\n018700        10  FILLER                    PIC X(9) VALUE 'WEDNESDAY'.\n018800        10  FILLER                    PIC X(9) VALUE 'THURSDAY'.\n018900        10  FILLER                    PIC X(9) VALUE 'FRIDAY'.\n019000        10  FILLER                    PIC X(9) VALUE 'SATURDAY'.\n019100        10  FILLER                    PIC X(9) VALUE 'SUNDAY'.\n019200    05  DAY-OF-THE-WEEK-NAME REDEFINES DWKTBL OCCURS 7 TIMES\n019300                                      PIC X(9).\n019400*********************************************************************\n019500*YEARTBL1 CONTAINS 1-BYTE SUBSCRIPTS TO YEARTBL2. WHEN THE NEXT  *\n019600*YEAR IS 07 OR 14, JAN 1ST NEXT YEAR FALLS ON SATURDAY, AND WILL *\n019700*BE OBSERVED ON DECEMBER 31ST OF THIS YEAR (THE PRECEDING FRIDAY)*\n019800*********************************************************************\n019900    05  YEARTBL1.\n020000        10 YRS-1900-1909 PIC X(20) VALUE '09030405130102031106'.\n020100        10 YRS-1910-1919 PIC X(20) VALUE '07010904050614020304'.\n020200        10 YRS-1920-1929 PIC X(20) VALUE '12070102100506070803'.\n020300        10 YRS-1930-1939 PIC X(20) VALUE '04051301020311060701'.\n020400        10 YRS-1940-1949 PIC X(20) VALUE '09040506140203041207'.\n020500        10 YRS-1950-1959 PIC X(20) VALUE '01021005060708030405'.\n020600        10 YRS-1960-1969 PIC X(20) VALUE '13010203110607010904'.\n020700        10 YRS-1970-1979 PIC X(20) VALUE '05061402030412070102'.\n020800        10 YRS-1980-1989 PIC X(20) VALUE '10050607080304051301'.\n020900        10 YRS-1990-1999 PIC X(20) VALUE '02031106070109040506'.\n021000        10 YRS-2000-2009 PIC X(20) VALUE '14020304120701021005'.\n021100        10 YRS-2010-2019 PIC X(20) VALUE '06070803040513010203'.\n021200        10 YRS-2020-2029 PIC X(20) VALUE '11060701090405061402'.\n021300        10 YRS-2030-2039 PIC X(20) VALUE '03041207010210050607'.\n021400        10 YRS-2040-2049 PIC X(20) VALUE '08030405130102031106'.\n021500        10 YRS-2050-2059 PIC X(20) VALUE '07010904050614020304'.\n021600        10 YRS-2060-2069 PIC X(20) VALUE '12070102100506070803'.\n021700        10 YRS-2070-2079 PIC X(20) VALUE '04051301020311060701'.\n021800        10 YRS-2080-2089 PIC X(20) VALUE '09040506140203041207'.\n021900        10 YRS-2090-2099 PIC X(20) VALUE '01021005060708030405'.\n022000        10 YEAR-2100     PIC X(2)  VALUE '06'.\n022100    05  YEAR-SUBSCRIPT REDEFINES YEARTBL1 OCCURS 201 TIMES\n022200                                          PIC 99.\n022300*********************************************************************\n022400* YEARTBL2 CONTAINS DATA ABOUT THE YEAR: DAY OF WEEK FOR JANUARY *\n022500* 1ST, LEAP YEAR INDICATOR, AND HOLIDAY DATES. FORMAT IS:        *\n022600*     BYTE 1  : DAY OF WEEK FOR JANUARY 1ST, 0=MONDAY - 6=SUNDAY *\n022700*     BYTE 2  : LEAP YEAR INDICATOR, 1=LEAP YEAR ELSE ZERO.      *\n022800*     BYTES 3-42: 8 HOLIDAY FIELDS OF 5 BYTES EACH. FORMAT OF    *\n022900*                 EACH FIELD IS:                                 *\n023000*                   BYTE 1 : HOLIDAY TYPE INDICATOR (SAME AS IN  *\n023100*                            PARAMETER AREA)                     *\n023200*                   BYTES 2-5: MMDD DATE OF THE HOLIDAY          *\n023300*********************************************************************\n023400    05  YEARTBL2.\n023500        10  NON-LEAP-YEAR-STARTING-SUN   PIC X(42)\n023600              VALUE '6010102 0220405295070460904711238112491225'.\n023700        10  NON-LEAP-YEAR-STARTING-MON   PIC X(42)\n023800              VALUE '0010101 0219405285070460903711228112391225'.\n023900        10  NON-LEAP-YEAR-STARTING-TUE   PIC X(42)\n024000              VALUE '1010101 0218405275070460902711288112991225'.\n024100        10  NON-LEAP-YEAR-STARTING-WED   PIC X(42)\n024200              VALUE '2010101 0217405265070460901711278112891225'.\n024300        10  NON-LEAP-YEAR-STARTING-THUR  PIC X(42)\n024400              VALUE '3010101 0216405255070360907711268112791225'.\n024500        10  NON-LEAP-YEAR-STARTING-FRI   PIC X(42)\n024600              VALUE '4010101 0215405315070560906711258112691224'.\n024700        10  NON-LEAP-YEAR-STARTING-SAT   PIC X(42)\n024800              VALUE '5000000 0221405305070460905711248112591226'.\n024900        10  LEAP-YEAR-STARTING-SUN       PIC X(42)\n025000              VALUE '6110102 0220405285070460903711228112391225'.\n025100        10  LEAP-YEAR-STARTING-MON       PIC X(42)\n025200              VALUE '0110101 0219405275070460902711288112991225'.\n025300        10  LEAP-YEAR-STARTING-TUES      PIC X(42)\n025400              VALUE '1110101 0218405265070460901711278112891225'.\n025500        10  LEAP-YEAR-STARTING-WED       PIC X(42)\n025600              VALUE '2110101 0217405255070360907711268112791225'.\n025700        10  LEAP-YEAR-STARTING-THUR      PIC X(42)\n025800              VALUE '3110101 0216405315070560906711258112691224'.\n025900        10  LEAP-YEAR-STARTING-FRI       PIC X(42)\n026000              VALUE '4110101 0215405305070460905711248112591226'.\n026100        10  LEAP-YEAR-STARTING-SAT       PIC X(42)\n026200              VALUE '5100000 0221405295070460904711238112491225'.\n026300    05  YEAR-TABLE-2 REDEFINES YEARTBL2 OCCURS 14 TIMES\n026400                                        PIC X(42).\n031400\n031500 LINKAGE SECTION.\n031600 01  PARAMETER-FIELD.\n031700     05  DATE-TYPE                 PIC X(01).\n031800         88  JULIAN-SUPPLIED                 VALUE 'J'.\n031900         88  GREGORIAN-MDY-SUPPLIED          VALUE 'G'.\n032000         88  GREGORIAN-YMD-SUPPLIED          VALUE 'Y'.\n032100     05  DATE-ERROR                PIC X(01).\n032200         88  NO-DATE-ERROR                   VALUE SPACE.\n032300         88  YES-DATE-ERROR                  VALUE 'E'.\n032400     05  DAY-OF-THE-WEEK           PIC 9(01).\n032500         88  MONDAY                          VALUE 1.\n032600         88  TUESDAY                         VALUE 2.\n032700         88  WEDNESDAY                       VALUE 3.\n032800         88  THURSDAY                        VALUE 4.\n032900         88  FRIDAY                          VALUE 5.\n033000         88  SATURDAY                        VALUE 6.\n033100         88  SUNDAY                          VALUE 7.\n033200     05  HOLIDAY-INDICATOR         PIC X(01).\n033300         88  NOT-A-HOLIDAY                   VALUE ' '.\n033400         88  NEW-YEARS-DAY                   VALUE '1'.\n033600         88  MEMORIAL-DAY                    VALUE '4'.\n033700         88  INDEPENDENCE-DAY                VALUE '5'.\n033800         88  LABOR-DAY                       VALUE '6'.\n033900         88  THANKSGIVING-DAY                VALUE '7'.\n034000         88  THANKSGIVING-FRIDAY             VALUE '8'.\n034100         88  CHRISTMAS-DAY                   VALUE '9'.\n034200     05  YEAR-TYPE                 PIC X(01).\n034300         88  NOT-LEAP-YEAR                   VALUE '0'.\n034400         88  LEAP-YEAR                       VALUE '1'.\n034500     05  JULIAN-DATE               PIC 9(07) COMP-3.\n034600     05  GREGORIAN-MDY-DATE.\n034700         10  GREG-MDY-MONTH-DAY.\n034800             15  GREG-MDY-MONTH        PIC 99.\n034900             15  GREG-MDY-DAY          PIC 99.\n035000         10  GREG-MDY-YEAR         PIC 9(4).\n035100     05  GREGORIAN-YMD-DATE.\n035200         10  GREG-YMD-YEAR         PIC 9(4).\n035300         10  GREG-YMD-MONTH        PIC 99.\n035400         10  GREG-YMD-DAY          PIC 99.\n035500     05  LITERAL-DATE              PIC X(18).\n035600     05  JULIAN-SLASH.\n035700         10  JULIAN-SLASH-YEAR     PIC 9(4).\n035800         10  JULIAN-SLASH-SLASH    PIC X.\n035900         10  JULIAN-SLASH-DAY      PIC 999.\n036000     05  GREGORIAN-SLASH.\n036100         10  GREG-SLASH-MONTH      PIC 99.\n036200         10  GREG-SLASH-SLASH1     PIC X.\n036300         10  GREG-SLASH-DAY        PIC 99.\n036400         10  GREG-SLASH-SLASH2     PIC X.\n036500         10  GREG-SLASH-YEAR       PIC 9(4).\n036600     05  DAY-LITERAL               PIC X(09).\n036700     05  MONTH-LITERAL             PIC X(09).\n036800\n036900 PROCEDURE DIVISION USING PARAMETER-FIELD.\n037000     MOVE SPACES TO DATE-ERROR,\n037100                    HOLIDAY-INDICATOR,\n037200                    LITERAL-DATE.\n037300     IF JULIAN-SUPPLIED\n037400         PERFORM 1000-JULIAN-DATE-SUPPLIED THRU 1000-EXIT\n037500     ELSE\n037600         IF GREGORIAN-YMD-SUPPLIED\n037700             PERFORM 2000-YMD-DATE-SUPPLIED THRU 2000-EXIT\n037800         ELSE\n037900             IF GREGORIAN-MDY-SUPPLIED\n038000                 PERFORM 3000-MDY-DATE-SUPPLIED THRU 3000-EXIT\n038100             ELSE\n038200                 MOVE 'E' TO DATE-ERROR.\n038300     GOBACK.\n038400*********************************************************************\n038500*        CALLER PASSED A JULIAN DATE                             *\n038600*********************************************************************\n038700 1000-JULIAN-DATE-SUPPLIED.\n038800     IF JULIAN-DATE IS NUMERIC\n038900         NEXT SENTENCE\n039000     ELSE\n039100         MOVE 'E' TO DATE-ERROR\n039200         GO TO 1000-EXIT.\n039300     MOVE JULIAN-DATE TO UNPACKED-JULIAN-DATE.\n039400     MOVE UNPACKED-JULIAN-YEAR TO GREG-YMD-YEAR.\n039500     MOVE UNPACKED-JULIAN-YEAR TO GREG-MDY-YEAR.\n039600     PERFORM 5000-LOCATE-YEAR-DATA THRU 5000-EXIT.\n039700     IF UNPACKED-JULIAN-DAY = 0\n039800         MOVE 'E' TO DATE-ERROR\n039900         GO TO 1000-EXIT.\n040000     IF UNPACKED-JULIAN-DAY > 366\n040100         MOVE 'E' TO DATE-ERROR\n040200         GO TO 1000-EXIT.\n040300     IF UNPACKED-JULIAN-DAY = 366\n040400         IF THIS-YEAR-IS-A-LEAP-YEAR\n040500             NEXT SENTENCE\n040600         ELSE\n040700             MOVE 'E' TO DATE-ERROR\n040800             GO TO 1000-EXIT.\n040900     IF THIS-YEAR-IS-A-LEAP-YEAR\n041000         IF UNPACKED-JULIAN-DAY = 60\n041100             MOVE 02 TO GREG-YMD-MONTH\n041200             MOVE 29 TO GREG-YMD-DAY\n041300             MOVE 02 TO GREG-MDY-MONTH\n041400             MOVE 29 TO GREG-MDY-DAY\n041500             PERFORM 6000-COMMON-DATE-ROUTINE THRU 6000-EXIT\n041600             GO TO 1000-EXIT\n041700         ELSE\n041800             IF UNPACKED-JULIAN-DAY > 60\n041900                 SUBTRACT 1 FROM UNPACKED-JULIAN-DAY.\n042000     PERFORM 1100-CONVERT-JULIAN-TO-GREG THRU 1100-EXIT.\n042100     PERFORM 6000-COMMON-DATE-ROUTINE THRU 6000-EXIT.\n042200 1000-EXIT.\n042300     EXIT.\n043800*********************************************************************\n043900*     CONVERT THE JULIAN-DAY (WHICH HAS BEEN ADJUSTED FOR LEAP   *\n044000*     YEAR) TO GREGORIAN MONTH AND DAY.                          *\n044100*********************************************************************\n044200 1100-CONVERT-JULIAN-TO-GREG.\n044300     MOVE 'N' TO JULIAN-MONTH-FOUND-INDICATOR.\n044400     PERFORM 1110-FIND-JULIAN-MONTH THRU 1110-EXIT\n044500         VARYING MTH FROM 1 BY 1 UNTIL\n044600             JULIAN-MONTH-FOUND.\n044700     SUBTRACT 2 FROM MTH.\n044800     SUBTRACT MONTH-OFFSET (MTH) FROM UNPACKED-JULIAN-DAY.\n044900     MOVE UNPACKED-JULIAN-DAY TO GREG-YMD-DAY.\n045000     MOVE UNPACKED-JULIAN-DAY TO GREG-MDY-DAY.\n045100     MOVE MTH TO GREG-YMD-MONTH.\n045200     MOVE MTH TO GREG-MDY-MONTH.\n045300 1100-EXIT.\n045400     EXIT.\n045500*********************************************************************\n045600*     USE THE JULIAN DAY AS AN ARGUMENT TO LOCATE THE MONTH      *\n045700*     ENTRY IN THE JULIAN MONTH TABLE. THE TABLE CONTAINS THE    *\n045800*     CUMULATIVE NUMBER OF DAYS TO THE START OF EACH MONTH IN THE*\n045900*     YEAR.                                                      *\n046000*********************************************************************\n046100 1110-FIND-JULIAN-MONTH.\n046200     IF UNPACKED-JULIAN-DAY <= MONTH-OFFSET (MTH)\n046300         MOVE 'Y' TO JULIAN-MONTH-FOUND-INDICATOR.\n046400 1110-EXIT.\n046500     EXIT.\n046600*********************************************************************\n046700*     CALLER PASSED A GREGORIAN YMD DATE                         *\n046800*********************************************************************\n046900 2000-YMD-DATE-SUPPLIED.\n047000     MOVE GREG-YMD-MONTH TO GREG-MDY-MONTH.\n047100     MOVE GREG-YMD-DAY TO GREG-MDY-DAY.                                 TE\n047200     MOVE GREG-YMD-YEAR TO GREG-MDY-YEAR.                               TE\n047300     PERFORM 4000-COMMON-GREGORIAN-ROUTINE THRU 4000-EXIT.\n047310     PERFORM 6000-COMMON-DATE-ROUTINE THRU 6000-EXIT.\n047400 2000-EXIT.\n047500     EXIT.\n047600*********************************************************************\n047700*     CALLER PASSED A GREGORIAN MDY DATE                         *\n047800*********************************************************************\n047900 3000-MDY-DATE-SUPPLIED.\n048000     MOVE GREG-MDY-MONTH TO GREG-YMD-MONTH.\n048100     MOVE GREG-MDY-DAY TO GREG-YMD-DAY.                                 TE\n048200     MOVE GREG-MDY-YEAR TO GREG-YMD-YEAR.                               TE\n048300     PERFORM 4000-COMMON-GREGORIAN-ROUTINE THRU 4000-EXIT.\n048310     PERFORM 6000-COMMON-DATE-ROUTINE THRU 6000-EXIT.\n048400 3000-EXIT.\n048500     EXIT.\n050000*********************************************************************\n050100* EDIT THE GREGORIAN MDY DATE: THIS VALIDITY CHECKING LOGIC      *\n050200* IS DONE WHENEVER ANY GREGORIAN DATE IS RECEIVED (MDY OR YMD)   *\n050300*********************************************************************\n050400 4000-COMMON-GREGORIAN-ROUTINE.\n050500     IF GREGORIAN-MDY-DATE IS NUMERIC\n050600         NEXT SENTENCE\n050700     ELSE\n050800         MOVE 'E' TO DATE-ERROR\n050900         GO TO 4000-EXIT.\n051000     IF GREG-MDY-DAY < 01 OR\n051100        GREG-MDY-MONTH < 01 OR\n051200        GREG-MDY-MONTH > 12\n051300             MOVE 'E' TO DATE-ERROR\n051400             GO TO 4000-EXIT.\n051500     PERFORM 5000-LOCATE-YEAR-DATA THRU 5000-EXIT.\n051600     IF GREG-MDY-DAY > DAYS-IN-MONTH (GREG-MDY-MONTH)\n051700         IF GREG-MDY-MONTH = 02 AND\n051800            GREG-MDY-DAY = 29 AND\n051810            THIS-YEAR-IS-A-LEAP-YEAR\n051820             NEXT SENTENCE\n051830         ELSE\n051840             MOVE 'E' TO DATE-ERROR\n051850             GO TO 4000-EXIT.\n051860     MOVE GREG-MDY-YEAR TO UNPACKED-JULIAN-YEAR.\n051870     MOVE MONTH-OFFSET (GREG-MDY-MONTH) TO UNPACKED-JULIAN-DAY.\n051880     ADD GREG-MDY-DAY TO UNPACKED-JULIAN-DAY.\n051890     IF THIS-YEAR-IS-A-LEAP-YEAR AND\n051891        GREG-MDY-MONTH > 02\n051892         ADD 1 TO UNPACKED-JULIAN-DAY.\n051893     MOVE UNPACKED-JULIAN-DATE TO JULIAN-DATE.\n051894 4000-EXIT.\n051895     EXIT.\n051896*********************************************************************\n051897*     DO YEAR TABLE LOOKUPS. A TWO-TABLE LOOKUP IS USED, THE     *\n051898*     FIRST TABLE HAS ENTRIES FOR ALL YEARS FROM 1900 TO 2100    *\n051899*     AND CONTAINS SUBSCRIPT VALUES TO LOCATE THE APPROPRIATE    *\n051900*     ENTRY IN THE SECOND TABLE. THE SECOND TABLE (YEARTBL2)     *\n051901*     HAS 14 ENTRIES, ONE FOR EACH UNIQUE YEAR, WHICH HAVE THE   *\n051902*     SPECIFIC INFORMATION ABOUT THAT YEAR, SUCH AS HOLIDAY DATES*\n051903*     FIRST, THE ENTRY FOR NEXT YEAR IS FOUND TO SEE IF IT BEGINS*\n051904*     ON SATURDAY. IF IT DOES, THE NEWYR INDICATOR IS SET TO SHOW*\n051905*     THAT NEW YEARS DAY FOR NEXT YEAR WILL BE CELEBRATED ON DEC *\n051906*     31ST OF THIS YEAR.                                         *\n051907*********************************************************************\n051908 5000-LOCATE-YEAR-DATA.\n051909     MOVE '0' TO NEWYR.\n051910     MOVE GREG-MDY-YEAR TO YRSUB.\n051911     SUBTRACT 1898 FROM YRSUB.\n051912     IF YEAR-SUBSCRIPT (YRSUB) = 07 OR\n051913         YEAR-SUBSCRIPT (YRSUB) = 14\n051915             MOVE '1' TO NEWYR.\n051917     SUBTRACT 1 FROM YRSUB.\n051918     MOVE YEAR-SUBSCRIPT (YRSUB) TO YRSUB.\n051919     MOVE YEAR-TABLE-2 (YRSUB) TO YEARDATA.\n051920     MOVE LEAP-YEAR-INDICATOR TO YEAR-TYPE.\n051921 5000-EXIT.\n051922     EXIT.\n051930*********************************************************************\n052000*     COMMON DATE PROCESSING                                     *\n052100*********************************************************************\n052200 6000-COMMON-DATE-ROUTINE.\n052210     MOVE JULIAN-DATE TO UNPACKED-JULIAN-DATE.\n052300     MOVE UNPACKED-JULIAN-YEAR TO JULIAN-SLASH-YEAR.\n052400     MOVE '/' TO JULIAN-SLASH-SLASH.\n052500     MOVE UNPACKED-JULIAN-DAY TO JULIAN-SLASH-DAY.\n052600     MOVE GREG-MDY-MONTH TO GREG-SLASH-MONTH.\n052700     MOVE '/' TO GREG-SLASH-SLASH1.\n052800     MOVE GREG-MDY-DAY TO GREG-SLASH-DAY.\n052900     MOVE '/' TO GREG-SLASH-SLASH2.\n053000     MOVE GREG-MDY-YEAR TO GREG-SLASH-YEAR.\n053100     PERFORM 6100-CHECK-FOR-HOLIDAY THRU 6100-EXIT.\n053200     PERFORM 6200-DAY-OF-WEEK-PROCESSING THRU 6200-EXIT.\n053300     PERFORM 6300-BUILD-LITERAL-DATE THRU 6300-EXIT.\n053400 6000-EXIT.\n053500     EXIT.\n053600*********************************************************************\n053700*     DETERMINE IF DATE IS A HOLIDAY                             *\n053800*********************************************************************\n053900 6100-CHECK-FOR-HOLIDAY.\n054000     IF GREG-MDY-MONTH-DAY = 1231 AND\n054100        DEC-31-THIS-YEAR-IS-NEW-YEARS\n054200         MOVE '1' TO HOLIDAY-INDICATOR\n054300         GO TO 6100-EXIT.\n054900     MOVE 'N' TO HOLIDAY-FOUND-INDICATOR.\n055000     PERFORM 6110-SEARCH-HOLIDAY-TABLE THRU 6110-EXIT\n055100             VARYING HSUB FROM 1 BY 1\n055200         UNTIL HSUB > 8 OR HOLIDAY-DATE-FOUND.\n055300 6100-EXIT.\n055400     EXIT.\n055500*********************************************************************\n055600*     SEARCH TABLE OF HOLIDAYS THIS YEAR TO SEE IF THE DATE IS   *\n055700*     A HOLIDAY.                                                 *\n055800*********************************************************************\n055900 6110-SEARCH-HOLIDAY-TABLE.\n056000     IF HOLIDAY-DATE (HSUB) = GREG-MDY-MONTH-DAY\n056100         MOVE HOLIDAY-IDENTIFIER (HSUB) TO HOLIDAY-INDICATOR\n056200         MOVE 'Y' TO HOLIDAY-FOUND-INDICATOR.\n056300 6110-EXIT.\n056400     EXIT.\n056500*********************************************************************\n056600*     DETERMINE DAY OF WEEK                                      *\n056700*********************************************************************\n056800 6200-DAY-OF-WEEK-PROCESSING.\n056900     MOVE YEAR-START-DAY TO WORK1.\n057000     ADD UNPACKED-JULIAN-DAY TO WORK1.\n057100     DIVIDE WORK1 BY 7 GIVING WORK2 REMAINDER DAY-OF-THE-WEEK.\n057200     IF DAY-OF-THE-WEEK = 0\n057300         MOVE 7 TO DAY-OF-THE-WEEK.\n057400 6200-EXIT.\n057500     EXIT.\n057600*********************************************************************\n057700*     BUILD LITERAL DATE  AND THE DAY AND MONTH LITERALS         *\n057800*********************************************************************\n057900 6300-BUILD-LITERAL-DATE.\n058000     MOVE MONTH-NAME (GREG-MDY-MONTH) TO LITERAL-DATE.\n058100     MOVE MONTH-SIZE (GREG-MDY-MONTH) TO OFFSET.\n058200     IF GREG-MDY-DAY < '10'\n058300         MOVE GREG-MDY-DAY (2 : 1) TO LITERAL-DATE (OFFSET : 1)\n058400         ADD 1 TO OFFSET\n058500     ELSE\n058600         MOVE GREG-MDY-DAY TO LITERAL-DATE (OFFSET : 2)\n058700         ADD 2 TO OFFSET.\n058800     MOVE ',' TO LITERAL-DATE (OFFSET  : 1).\n058900     MOVE GREG-MDY-YEAR TO LITERAL-DATE (OFFSET + 2 : 4).\n059000     MOVE DAY-OF-THE-WEEK-NAME (DAY-OF-THE-WEEK) TO DAY-LITERAL.\n059100     MOVE MONTH-NAME (GREG-MDY-MONTH) TO MONTH-LITERAL.\n059200 6300-EXIT.\n059300     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GETJOBN": {"ttr": 6916, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x03\\x00R\\x00\\x920\\x1f\\x01\\x02\\x00O\\x13'\\x00)\\x00\\x18\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.03", "flags": 0, "createdate": "1992-10-27T00:00:00", "modifydate": "2002-01-04T13:27:52", "lines": 41, "newlines": 24, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.\n000200 PROGRAM-ID. GETJOBN.\n000201*****************************************************************\n000210*   GETJOBN LOCATES THE JOB NAME FOLLOWING THE PATH FROM THE    *       00\n000220*   NEW/OLD TCB POINTERS AT ADDRESS X'21C' TO THE TCB FOR THIS  *       00\n000230*   TASK AND FROM THERE TO THE TIOT. THE JOBNAME IS MOVED FROM  *       00\n000240*   THE TIOT TO AN 8-BYTE FIELD PASSED BY THE CALLER.           *       00\n000250*****************************************************************\n000300 ENVIRONMENT DIVISION.\n000400 INPUT-OUTPUT SECTION.\n000500 FILE-CONTROL.\n000600 DATA DIVISION.\n000700 FILE SECTION.\n000800 WORKING-STORAGE SECTION.\n000900 01  WS-POINTER.\n001000     05  LOCATION-ZERO           POINTER.\n001020*\n001100 LINKAGE SECTION.\n001200 01  JOBNAME-FIELD               PIC X(8).\n001201 01  PSA.\n001202     05  FILLER                  PIC X(16).\n001203     05  FLCCVT                  POINTER.\n001204 01  CVT.\n001205     05  CVTTCBP                 POINTER.\n001300 01  NEW-OLD-POINTERS.\n001301     05  NEW-TCB-POINTER         POINTER.\n001302     05  OLD-TCB-POINTER         POINTER.\n001310 01  TCB.\n001400     05  FILLER                  PIC X(12).\n001500     05  TCBTIOT                 POINTER.\n001600 01  TIOT.\n001700     05  JOB-NAME                PIC X(8).\n001800 PROCEDURE DIVISION USING JOBNAME-FIELD.\n001900     MOVE X'00000000' TO WS-POINTER.\n001901     SET ADDRESS OF PSA TO LOCATION-ZERO.\n001910     SET ADDRESS OF CVT TO FLCCVT.\n002000     SET ADDRESS OF NEW-OLD-POINTERS TO CVTTCBP.\n002100     SET ADDRESS OF TCB TO NEW-TCB-POINTER.\n002200     SET ADDRESS OF TIOT TO TCBTIOT.\n002300     MOVE JOB-NAME TO JOBNAME-FIELD.\n002400     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "GTULRECL": {"ttr": 6918, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00Y\\x01\\x00\\x03?\\x01\\x02\\x00O\\x13'\\x00a\\x00a\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-02-02T00:00:00", "modifydate": "2002-01-04T13:27:59", "lines": 97, "newlines": 97, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. GTULRECL.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  JAN 2000.\n000500 DATE-COMPILED.\n000510*****************************************************************\n000600*REMARKS. PROVIDES THE CALLER WITH THE LRECL FOR THE LAST RECORD*\n000610*         READ FROM A DSORG=PS DATASET. CALLER MUST DEFINE THE  *\n000620*         FILE AND ISSUE A READ BEFORE CALLING THIS ROUTINE.    *\n000621*         A CALL CAN BE MADE FOLLOWING EACH READ IF DESIRED.    *\n000622*         WHILE THE FILE CAN HAVE ANY DESIRED RECFM, IS IS MOST *\n000623*         USEFUL FOR RECFM=U DATASETS, AS COBOL DOES NOT        *\n000624*         PROVIDE THE LENGTH FOR UNDEFINED RECORDS.             *\n000625*         THE CALLER PASSES THE ADDRESS OF THE DCB (COBOL FD)   *\n000626*         AND A 2-BYTE BINARY FIELD IN WHICH THE LRECL IS       *\n000627*         RETURNED.                                             *\n000628*         COBOL EXAMPLE:                                        *\n000629*                 .                                             *\n000630*                 .                                             *\n000631*                  FD UNDEF-INPUT-FILE                          *\n000632*                     RECORDING MODE IS U                       *\n000633*                 .                                             *\n000634*                 .                                             *\n000635*                     05  LRECL       PIC S9(4) COMP.           *\n000636*                 .                                             *\n000637*                 .                                             *\n000638*                     OPEN INPUT UNDEF-INPUT-FILE.              *\n000639*                 .                                             *\n000640*                 .                                             *\n000641*                     READ UNDEF-INPUT-FILE                     *\n000642*                         AT END ...                            *\n000643*                     CALL 'GTULRECL' USING UNDEF-INPUT-FILE,   *\n000644*                                           LRECL.              *\n000645*                                                               *\n000650*****************************************************************\n000700 ENVIRONMENT DIVISION.\n000800 INPUT-OUTPUT SECTION.\n000900 FILE-CONTROL.\n001200 DATA DIVISION.\n001300 FILE SECTION.\n003100 WORKING-STORAGE SECTION.\n003200 77  FILLER                             PIC X(44)\n003300       VALUE 'GTULRECL WORKING STORAGE SECTION STARTS HERE'.\n004800 LINKAGE SECTION.\n004900 01  FD-DESCRIPTION.\n005000     05  FILLER                         PIC X(16).\n005100     05  KEY-LENGTH-BINARY              PIC X.\n005200     05  DEVICE-TYPE-HEX                PIC X.\n005210     05  FILLER                         PIC X(2).\n005300     05  NUMBER-BUFFERS-BINARY          PIC X.\n007710     05  BUFFER-POOL-CTRL-BLOCK-ADDRESS PIC X(3).\n007720     05  BUFFER-LENGTH-BINARY           PIC S9(4) COMP.\n007730     05  DSORG-HEX                      PIC X(2).\n007731     05  FILLER                         PIC X.\n007740     05  CHAINED-SCHED-IOB-ADDRESS      PIC X(3).\n007750     05  FILLER                         PIC X.\n007760     05  END-OF-DATA-ADDRESS            PIC X(3).\n007770     05  RECFM-HEX                      PIC X.\n007771     05  EXIT-LIST-ADDRESS              PIC X(3).\n007772     05  TIOT-OFFSET-BINARY             PIC S9(4) COMP.\n007773     05  MACRF-HEX                      PIC X(2).\n007774     05  FILLER                         PIC X.\n007775     05  DEB-ADDRESS                    PIC X(3).\n007776     05  OPEN-FLAGS-HEX                 PIC X.\n007777     05  INPUT-OUTPUT-MODULE-ADDRESS    PIC X(3).\n007778     05  OPTION-CODES-HEX               PIC X.\n007779     05  CHECK-SYNCH-ROUTINE-ADDRESS    PIC X(3).\n007780     05  IOB-LENGTH-HALFWORDS-BINARY    PIC X.\n007781     05  SYNAD-ROUTINE-ADDRESS          PIC X(3).\n007782     05  CONDITION-INDICATORS-HEX       PIC X(2).\n007783     05  BLOCK-SIZE-BINARY              PIC S9(4) COMP.\n007784     05  WRITE-CHANNEL-PGM-OFFSET-BIN   PIC X.\n007785     05  WRITE-CHANNEL-PGM-LENGTH-BIN   PIC X.\n007786     05  READ-CHANNEL-PGM-OFFSET-BIN    PIC X.\n007787     05  WRITE-CCW-OFFSET-BINARY        PIC X.\n007788     05  FILLER                         PIC X.\n007789     05  NORMAL-SCHED-IOB-PREFIX-ADDR   PIC X(3).\n007790     05  LAST-BYTE-CURRENT-BUFFER-ADDR  PIC X(4).\n007791     05  FILLER                         PIC X.\n007792     05  CURRENT-NEXT-RECORD-ADDRESS    PIC X(3).\n007793     05  FLAG-BYTE-HEX                  PIC X.\n007794     05  BYTES-USED-LAST-DIR-BLK-BIN    PIC X.\n007795     05  LRECL-BINARY                   PIC S9(4) COMP.\n007796     05  ERROR-OPTIONS-HEX              PIC X.\n007797     05  CONTROL-MODULE-ADDRESS         PIC X(3).\n007798     05  FILLER                         PIC XX.\n007799     05  BLOCK-MAX-BLOCK-LENGTH-BINARY  PIC S9(4) COMP.\n007800     05  END-OF-BLOCK-MODULE-ADDRESS    PIC X(4).\n007801*\n007802 01  LRECL                              PIC S9(4) COMP.\n007803*\n007804 PROCEDURE DIVISION USING FD-DESCRIPTION,\n007805                          LRECL.\n007900*\n008000 A000-MAINLINE.\n008100     MOVE LRECL-BINARY TO LRECL.\n008400     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MCTFSEQ": {"ttr": 6921, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x07\\x01\\x02\\x00O\\x01\\x02\\x00O\\x13)\\x00\\x90\\x00\\x90\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-01-04T00:00:00", "modifydate": "2002-01-04T13:29:07", "lines": 144, "newlines": 144, "modlines": 0, "user": "BC0THOR"}, "text": "000010 IDENTIFICATION DIVISION.\n000020     SKIP1\n000030 PROGRAM-ID. MCTFSEQ.\n000040     SKIP1\n      *TRANSLATED BY MHTRAN-2  9/06/94\n000050 AUTHOR. JACK E. BOWEN, JR.\n000060 INSTALLATION. BLUE CROSS AND BLUE SHIELD\n000070 DATE-WRITTEN. AUGUST 29,1973\n000080 DATE-COMPILED.\nY2000+*+*************************************************************** Y2000+\nY2000+*+  EDITED BY CGA/ARC RENOVATOR RENOALL V6.00 ON 1998-3-25 11:45  Y2000+\nY2000+*+*************************************************************** Y2000+\n000090     SKIP2\n000100*REMARKS.\n000110*        THIS SUBROUTINE READS THE MASTER CODE TABLE FILE\n000120*        SEQUENTIALLY BEGINNING AT ANY POINT IN THE FILE.\n000130\n000140*        FUNCTIONS - (ACCEPTABLE VALUES FOR F-R-CODE IN THE\n000150*                     CALL STATEMENT.)\n000160\n000170*          O     OPENS FILE\n000180*          S     INITIATES START VERB\n000190*          R     READS THE RECORD CURRENTLY POINTED TO\n000200*                IN THE FILE\n000210*          C     CLOSES THE FILE\n000220*        RETURN CODES - (CONTENTS OF F-R-CODE ON RETURN\n000230*                        FROM THE SUBROUTINE.)\n000240\n000250*          0     FUNCTION WAS SUCCESSFUL\n000260*          1     INVALID KEY\n000270*          2     INVALID FUNCTION\n000280*          3     READ ATTEMPTED BEFORE FILE WAS OPENED\n000290*          4     I O ERROR\n000300*          6     START VERB ATTEMPTED BEFORE FILE WAS\n000310*                OPENED\n000320*          7     END OF FILE WAS ENCOUNTERED\n000330\n000340*\n000350*  INCIDENT 83-00315 - IMPLEMENTED 05/20/83 BY IWANNA ATKINS\n000360*     CHANGED FILE ACCESS FOR MASTER CODE TABLE FILE TO REMOVE\n000370*     USAGE OF THE ISAM INTERFACE WHICH CAUSED AN 03B ABEND\n000380*     WHICH RESULTED WHEN FILE WHICH IS VSAM NEEDED TO BE VERIFIED\n000390*\n000400\n000410     SKIP2\n000420 ENVIRONMENT DIVISION.\n000430 INPUT-OUTPUT SECTION.\n000440 FILE-CONTROL.\n000450*    SELECT MCTF-IN  ASSIGN TO UT-I-MCTFSEQ\n000460     SELECT MCTF-IN  ASSIGN TO DA-MCTFSEQ\n000470                     ACCESS IS SEQUENTIAL\n000480                     ORGANIZATION IS INDEXED\n000490*                    NOMINAL KEY IS MCTR-NOMINAL-KEY\n000500                     RECORD KEY IS MCTRI-RECORD-KEY.\n000510     SKIP2\n000520 DATA DIVISION.\n000530 FILE SECTION.\n000540 FD  MCTF-IN\n000550     RECORD CONTAINS 211 CHARACTERS\n000560     LABEL RECORDS ARE STANDARD\n000570     DATA RECORD IS MCTR-IN.\n000580 01  MCTR-IN.\n000590     05  FILLER                      PIC X(001).\n000600     05  MCTRI-RECORD-KEY            PIC X(015).\n000610     05  FILLER                      PIC X(195).\n000620     SKIP2\n000630 WORKING-STORAGE SECTION.\n000640 77  FILLER                          PIC X(35)\n000650         VALUE  'MCTFSEQ WORKING STORAGE BEGINS HERE'.\n000660*01  MCTR-NOMINAL-KEY                PIC X(015).\n000670 01  WS-SWITCHES.\n000680     05  OPEN-SW                     PIC X(001).\n000690     88  OPENED   VALUE '1'.\n000700     05  START-SW                    PIC X(001).\n000710     88  STARTED   VALUE  '1'.\n000720 01  WS-MCTR-IN,  VALUE SPACE.\n000730     05  MI-STATUS-CODE              PIC X(001).\n000740     05  MI-RECORD-KEY.\n000750         10  MI-TABLE-ID             PIC X(003).\n000760         10  MI-CODE-ID              PIC X(012).\n000770     05  MI-DATA.\n000780         10  MI-CURR-EFF-DATE        PIC X(006).\n000790         10  MI-PREV-EFF-DATE        PIC X(006).\n000800         10  MI-TABLE-DATA           PIC X(183).\n000810     SKIP2\n000820 LINKAGE SECTION.\n000830 01  SUBPGM-PARAMETERS.\n000840     05  F-R-CODE                    PIC X(001).\n000850     05  MCTF-KEY                    PIC X(015).\n000860     05  MCTF-DATA                   PIC X(195).\n000870     EJECT\n000880 PROCEDURE DIVISION  USING SUBPGM-PARAMETERS.\n000890     SKIP2\n000900 DECLARATIVES.\n000910 USER-IO-ERROR-RTN SECTION.\n000920     USE AFTER ERROR PROCEDURE ON MCTF-IN.\n000930     GO TO I-O-ERROR.\n000940 END DECLARATIVES.\n000950     SKIP2\n000960     IF F-R-CODE NOT = 'R' THEN GO TO NOT-R.\n000970     IF NOT OPENED THEN MOVE '3' TO F-R-CODE\n000980                        GO TO GOBACK-RTN.\n000990     READ MCTF-IN INTO WS-MCTR-IN AT END GO TO E-O-F.\n001000     MOVE MI-RECORD-KEY TO MCTF-KEY.\n001010     MOVE MI-DATA TO MCTF-DATA.\n001020     MOVE '0' TO F-R-CODE.\n001030     GO TO GOBACK-RTN.\n001040     SKIP3\n001050 NOT-R.\n001060     IF F-R-CODE NOT = 'S' THEN GO TO NOT-S.\n001070     IF NOT OPENED THEN MOVE '6' TO F-R-CODE\n001080                        GO TO GOBACK-RTN.\n001090*    MOVE MCTF-KEY TO MCTR-NOMINAL-KEY.\n001100     MOVE MCTF-KEY TO MCTRI-RECORD-KEY.\n001110     START MCTF-IN INVALID KEY GO TO MCTF-BAD-READ.\n001120     MOVE '0' TO F-R-CODE.\n001130     GO TO GOBACK-RTN.\n001140 NOT-S.\n001150     IF F-R-CODE = 'O' THEN   OPEN INPUT MCTF-IN\n001160                              MOVE '1' TO OPEN-SW\n001170                              MOVE '0' TO F-R-CODE\n001180                              GO TO GOBACK-RTN.\n001190     IF F-R-CODE = 'C' THEN CLOSE MCTF-IN\n001200                            MOVE '0' TO OPEN-SW\n001210                            MOVE '0' TO F-R-CODE\n001220                            GO TO GOBACK-RTN.\n001230     MOVE '2' TO F-R-CODE.\n001240 GOBACK-RTN.\n001250     GOBACK.\n001260     EJECT\n001270 MCTF-BAD-READ.\n001280     MOVE '1' TO F-R-CODE.\n001290     GOBACK.\n001300 MCTF-BAD-READ-EXIT.\n001310     SKIP3\n001320 I-O-ERROR.\n001330     MOVE '4' TO F-R-CODE.\n001340     GOBACK.\n001350 I-O-ERROR-EXIT.\n001360     SKIP3\n001370 E-O-F.\n001380     MOVE '7' TO F-R-CODE.\n001390     GOBACK.\n001400 E-O-F-EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MRRECCOB": {"ttr": 6925, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x15\\x01\\x01\\x12?\\x01\\x01\\x12O\\x11\\x11\\x013\\x01H\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "2001-05-03T00:00:00", "modifydate": "2001-05-04T11:11:15", "lines": 307, "newlines": 328, "modlines": 0, "user": "BC0THOR"}, "text": "000800 01  MACHINER.\n001000     05 CSECT-DATA.\n001100        10 MEMBER-NAME               PIC X(8).\n001300        10 MEMBER-AMODE              PIC X(1).\n001400           88 MEMBER-AMODE-24           VALUE '2'.\n001410           88 MEMBER-AMODE-31           VALUE '3'.\n001420           88 MEMBER-AMODE-ANY          VALUE 'A'.\n001600        10 MEMBER-RMODE              PIC X(1).\n001610           88 MEMBER-RMODE-24           VALUE '2'.\n001620           88 MEMBER-RMODE-31           VALUE '3'.\n001630           88 MEMBER-RMODE-ANY          VALUE 'A'.\n001900        10 CSECTNAME                 PIC X(8).\n002100        10 COMPILER-ID               PIC X(10).\n002500        10 COMPILER-VVMM             PIC X(04).\n002800        10 COMPILE-DATE-YYDDD        PIC 9(05).\n003100        10 CSECT-AMODE               PIC X.\n003110           88 CSECT-AMODE-24            VALUE '2'.\n003120           88 CSECT-AMODE-31            VALUE '3'.\n003130           88 CSECT-AMODE-ANY           VALUE 'A'.\n003140           88 CSECT-AMODE-PREXA         VALUE ' '.\n003500        10 CSECT-RMODE               PIC X.\n003510           88 CSECT-RMODE-24            VALUE '2'.\n003530           88 CSECT-RMODE-ANY           VALUE 'A'.\n003900        10 CSECT-TYPE                PIC  X(02).\n004200           88 ASSEMBLER-PROGRAM         VALUE 'AR'.\n004210           88 BASIC-PROGRAM             VALUE 'BA'.\n004220           88 DEBUG-TOOL                VALUE 'BG'.\n004230           88 BERKELEY-SOCKET           VALUE 'BS'.\n004300           88 CICS-INTERFACE            VALUE 'CC'.\n004310           88 C370-RUNTIME-ROUTINE      VALUE 'CE'.\n004400           88 C370-PROGRAM              VALUE 'CI'.\n004500           88 LATTICE-C-PROGRAM         VALUE 'CL'.\n004600           88 COMMON-SECTION            VALUE 'CM'.\n004700           88 COBOL-RUNTIME-ROUTINE     VALUE 'CR'.\n004800           88 SAS-C-PROGRAM             VALUE 'CS'.\n004810           88 C-CPLUSPLUS-FOR-OS390     VALUE 'CP'.\n004900           88 COBOL-II-PROGRAM          VALUE 'C2'.\n005000           88 COBOL-370-390-PROGRAM     VALUE 'C3'.\n005010           88 DCE-ROUTINE               VALUE 'DC'.\n005100           88 DB2-INTERFACE             VALUE 'DI'.\n005110           88 EASYTRIEVE-PLUS-PROGRAM   VALUE 'EZ'.\n005200           88 FORTRAN-G-G1-PROGRAM      VALUE 'FG'.\n005300           88 FORTRAN-H-PROGRAM         VALUE 'FH'.\n005400           88 FORTRAN-RUNTIME-ROUTINE   VALUE 'FR'.\n005500           88 VS-FORTRAN-PROGRAM        VALUE 'FV'.\n005600           88 IMS-INTERFACE             VALUE 'II'.\n005610           88 ISPF-INTERFACE            VALUE 'IS'.\n005620           88 LE-RUNTIME-ROUTINE        VALUE 'LE'.\n005630           88 MARK-V-PROGRAM            VALUE 'MV'.\n005700           88 NOT-COMPLETELY-ANALYZED   VALUE 'NA'.\n005710           88 UNRECOGNIZED-CSECT-TYPE   VALUE 'NR'.\n005800           88 VA-PLI-FOR-OS390-PROGRAM  VALUE 'PL'.\n005810           88 PLI-FOR-MVS-AND-VM-PROGRAM VALUE 'PM'.\n005900           88 PLI-RUNTIME-ROUTINE       VALUE 'PR'.\n006000           88 VS-PASCAL-PROGRAM         VALUE 'PV'.\n006100           88 PLI-OPTIMIZER-V1-PROGRAM  VALUE 'P1'.\n006200           88 PLI-OPTIMIZER-V2-PROGRAM  VALUE 'P2'.\n006210           88 IBM-REXX-PROGRAM          VALUE 'RE'.\n006220           88 OLD-LANGUAGE-RUNTIME-ROUTINE VALUE 'RE'.\n006300           88 SNAPAID-INTERFACE         VALUE 'SA'.\n006301           88 COBOL-SAMPLE-PROGRAM      VALUE 'SC'.\n006310           88 USER-RECOGNIZED-ASSEMBLER VALUE 'UR'.\n006400           88 VERY-OLD-COBOL            VALUE 'VO'.\n006410           88 OSVS-COBOL-V2REL3         VALUE 'VS'.\n006500           88 OSVS-COBOL-V2REL4         VALUE 'V4'.\n007000        10 DATE-TIME-FORMAT          PIC X.\n007100           88 SVC-PATTERN-DATE-TIME     VALUE '1'.\n007200           88 STCK-DATE-TIME            VALUE '2'.\n007300           88 BOTH-SVC-AND-STCK         VALUE '3'.\n007400           88 COBOL-ACCEPT-FROM-FORMAT  VALUE '4'.\n007500           88 COBOL-ACCEPT-OTHER-FORMAT VALUE '9'.\n007800        10 LOAD-MODULE-ATTRIBUTES    PIC X.\n007810           88 REUSABLE-MODULE           VALUE '1'.\n007820           88 RENT-NOT-REUS-MODULE      VALUE '2'.\n007830           88 RENT-AND-REUS-MODULE      VALUE '3'.\n007840           88 OVERLAY-DATA-SUSPECT      VALUE '8'.\n007850           88 MODULE-NOT-REUSABLE       VALUE ' '.\n007900        10 PRIMARY-ENTRY-POINT-NAME  PIC X(8).\n008200        10 CSECT-SIZE-IN-DECIMAL     PIC 9(08).\n008400        10 SLASH-U-PARM-DATA         PIC X(04).\n008600        10 LAST-LINKEDIT-DATE-YYDDD  PIC 9(05).\n010600     05 COBOL-II-AND-COBOL-370-FIELDS.\n010700        10 COBOL-II-COMPILER-VERSION PIC X(06).\n010900        10 COBOL-II-LEVEL            PIC X(04).\n011100        10 COBOL-II-DATE-COMPILED    PIC X(9).\n012600        10 COBOL-II-TIME-COMPILED    PIC X(8).\n014400        10 COBOL-II-ADV-INDICATOR    PIC X(1).\n014500           88 COBOL-II-ADV              VALUE '1'.\n014510           88 COBOL-II-NOADV            VALUE '0'.\n014600        10 COBOL-II-QUOTE-APOST-INDICATOR PIC X.\n014610           88 COBOL-II-QUOTE            VALUE '0'.\n014620           88 COBOL-II-APOST            VALUE '1'.\n014800        10 COBOL-II-DATA-INDICATOR   PIC X.\n014810           88 COBOL-II-DATA-24          VALUE '0'.\n014820           88 COBOL-II-DATA-31          VALUE '1'.\n015110        10 COBOL-II-DECK-INDICATOR   PIC X.\n015120           88 COBOL-II-NODECK           VALUE '0'.\n015130           88 COBOL-II-DECK             VALUE '1'.\n015310        10 COBOL-II-DUMP-INDICATOR   PIC X.\n015320           88 COBOL-II-NODUMP           VALUE '0'.\n015330           88 COBOL-II-DUMP             VALUE '1'.\n015510        10 COBOL-II-DYNAM-INDICATOR  PIC X.\n015520           88 COBOL-II-NODYNAM          VALUE '0'.\n015530           88 COBOL-II-DYNAM            VALUE '1'.\n015710        10 COBOL-II-FASTSRT-INDICATOR PIC X.\n015720           88 COBOL-II-NOFASTSRT        VALUE '0'.\n015730           88 COBOL-II-FASTSRT          VALUE '1'.\n015910        10 COBOL-II-FDUMP-INDICATOR  PIC X.\n015920           88 COBOL-II-NOFDUMP          VALUE '0'.\n015930           88 COBOL-II-FDUMP            VALUE '1'.\n016110        10 COBOL-II-LIB-INDICATOR    PIC X.\n016120           88 COBOL-II-NOLIB            VALUE '0'.\n016130           88 COBOL-II-LIB              VALUE '1'.\n016310        10 COBOL-II-LIST-INDICATOR   PIC X.\n016320           88 COBOL-II-NOLIST           VALUE '0'.\n016330           88 COBOL-II-LIST             VALUE '1'.\n016510        10 COBOL-II-MAP-INDICATOR    PIC X.\n016520           88 COBOL-II-NOMAP            VALUE '0'.\n016530           88 COBOL-II-MAP              VALUE '1'.\n016710        10 COBOL-II-NUM-INDICATOR    PIC X.\n016720           88 COBOL-II-NONUM            VALUE '0'.\n016730           88 COBOL-II-NUM              VALUE '1'.\n016910        10 COBOL-II-OBJ-INDICATOR    PIC X.\n016920           88 COBOL-II-NOOBJ            VALUE '0'.\n016930           88 COBOL-II-OBJ              VALUE '1'.\n017110        10 COBOL-II-OFFSET-INDICATOR  PIC X.\n017120           88 COBOL-II-NOOFFSET         VALUE '0'.\n017130           88 COBOL-II-OFFSET           VALUE '1'.\n017310        10 COBOL-II-OPTIMIZ-INDICATOR PIC X.\n017320           88 COBOL-II-NOOPTIMIZ        VALUE '0'.\n017330           88 COBOL-II-OPTIMIZ          VALUE '1'.\n017510        10 COBOL-II-DD-INDICATOR     PIC X.\n017520           88 COBOL-II-DD               VALUE '0'.\n017530           88 COBOL-II-OUTDD            VALUE '1'.\n018010        10 COBOL-II-PFD-INDICATOR    PIC X.\n018020           88 COBOL-II-NOPFDSGN         VALUE '0'.\n018030           88 COBOL-II-PFDSGN           VALUE '1'.\n018040           88 COBOL-390-NUMNPFD          VALUE '0'.\n018050           88 COBOL-390-NUMPFD           VALUE '1'.\n018060           88 COBOL-390-NUMMIG           VALUE '2'.\n018210        10 COBOL-II-RENT-INDICATOR   PIC X.\n018220           88 COBOL-II-NORENT           VALUE '0'.\n018230           88 COBOL-II-RENT             VALUE '1'.\n018410        10 COBOL-II-RES-INDICATOR    PIC X.\n018420           88 COBOL-II-NORES            VALUE '0'.\n018430           88 COBOL-II-RES              VALUE '1'.\n018610        10 COBOL-II-SEQ-INDICATOR    PIC X.\n018620           88 COBOL-II-NOSEQ            VALUE '0'.\n018630           88 COBOL-II-SEQ              VALUE '1'.\n018810        10 COBOL-II-SIZE-INDICATOR   PIC X.\n018820           88 COBOL-II-SIZE-NBR         VALUE '0'.\n018830           88 COBOL-II-SIZE-MAX         VALUE '1'.\n019010        10 COBOL-II-SOURCE-INDICATOR PIC X.\n019020           88 COBOL-II-NOSOURCE         VALUE '0'.\n019030           88 COBOL-II-SOURCE           VALUE '1'.\n019210        10 COBOL-II-SSRANGE-INDICATOR PIC X.\n019220           88 COBOL-II-NOSSRANGE        VALUE '0'.\n019230           88 COBOL-II-SSRANGE          VALUE '1'.\n019410        10 COBOL-II-TERM-INDICATOR   PIC X.\n019420           88 COBOL-II-NOTERM           VALUE '0'.\n019430           88 COBOL-II-TERM             VALUE '1'.\n019610        10 COBOL-II-TEST-INDICATOR   PIC X.\n019620           88 COBOL-II-NOTEST           VALUE '0'.\n019630           88 COBOL-II-TEST             VALUE '1'.\n020110        10 COBOL-II-TRUNC-INDICATOR  PIC X.\n020120           88 COBOL-II-NOTRUNC          VALUE '0'.\n020130           88 COBOL-II-TRUNC            VALUE '1'.\n020140           88 COBOL-390-TRUNCOPT        VALUE '0'.\n020150           88 COBOL-390-TRUNC-STD       VALUE '1'.\n020160           88 COBOL-390-TRUNC-BIN       VALUE '1'.\n020410        10 COBOL-II-WORD-INDICATOR   PIC X.\n020420           88 COBOL-II-WORD-DEFAULT     VALUE '0'.\n020430           88 COBOL-II-WORD-SPECIFIED   VALUE '1'.\n020610        10 COBOL-II-VBREF-INDICATOR  PIC X.\n020620           88 COBOL-II-NOVBREF          VALUE '0'.\n020630           88 COBOL-II-VBREF            VALUE '1'.\n020810        10 COBOL-II-XREF-INDICATOR   PIC X.\n020820           88 COBOL-II-NOXREF           VALUE '0'.\n020830           88 COBOL-II-XREF             VALUE '1'.\n021110        10 COBOL-II-ZWB-INDICATOR    PIC X.\n021120           88 COBOL-II-NOZWB            VALUE '0'.\n021130           88 COBOL-II-ZWB              VALUE '1'.\n021310        10 COBOL-II-CMPR2-INDICATOR  PIC X.\n021320           88 COBOL-II-NOCMPR2          VALUE '0'.\n021330           88 COBOL-II-CMPR2            VALUE '1'.\n021510        10 COBOL-II-NAME-INDICATOR   PIC X.\n021520           88 COBOL-II-NONAME           VALUE '0'.\n021530           88 COBOL-II-NAME             VALUE '1'.\n021710        10 COBOL-II-NMCL-INDICATOR   PIC X.\n021720           88 COBOL-II-NMCLPRI          VALUE '0'.\n021730           88 COBOL-II-NMCLALT          VALUE '1'.\n021910        10 COBOL-II-DBCS-INDICATOR   PIC X.\n021920           88 COBOL-II-NODBCS           VALUE '0'.\n021930           88 COBOL-II-DBCS             VALUE '1'.\n022101        10 COBOL-II-AWO-INDICATOR    PIC X.\n022102           88 COBOL-II-NOAWO            VALUE '0'.\n022103           88 COBOL-II-AWO              VALUE '1'.\n022104     05 COBOL-370-AND-390-FIELDS.\n022410        10 COBOL-390-EVENTS-INDICATOR PIC X.\n022420           88 COBOL-390-NOEVENTS         VALUE '0'.\n022430           88 COBOL-390-EVENTS           VALUE '1'.\n022610        10 COBOL-390-CURRENCY-INDICATOR PIC X.\n022620           88 COBOL-39-NOCURRENCY       VALUE '0'.\n022630           88 COBOL-39-CURRENCY         VALUE '1'.\n022910        10 COBOL-390-RMODE-INDICATOR PIC X.\n022920           88 COBOL-39-RMODE-24         VALUE '0'.\n022930           88 COBOL-39-RMODE-ANY        VALUE '1'.\n023000        10 FILLER                    PIC X(4).\n023600     05 ALL-COBOL-SORTMERGE-INDICATOR PIC X.\n023700        88 SORT-OR-MERGE-FOUND          VALUE '1'.\n023800        88 NO-SORT-OR-MERGE-FOUND       VALUE '0'.\n024200     05 ALL-COBOL-DYNAM-CALL-FND-INDIC PIC X.\n024300        88 NO-DYNAMIC-CALLS-FOUND       VALUE '0'.\n024400        88 CALL-LITERAL-FORCED-DYNAMIC VALUE '1'.\n024500        88 CALL-DATANAME                VALUE '2'.\n024600        88 CALL-LIT-FRCD-AND-CALL-DATANM VALUE '3'.\n024700        88 CAPEX-OPT-CALL-ADDR          VALUE '4'.\n024900        88 CAPEX-CALL-LIT-FORCED-DYNAM VALUE '5'.\n025000        88 CAPEX-OPT-CALL-DATANAME      VALUE '6'.\n025100        88 CAPEX-CALL-LIT-FRCD-CALL-DTNM VALUE '7'.\n025300   05 VERSION-4-AND-VS-COBOL-FIELDS.\n025510        10 VSCOBOL-SYMDUMP-INDICATOR PIC X.\n025520           88 VSCOBOL-NOSYMDUMP         VALUE '0'.\n025530           88 VSCOBOL-SYMDUMP           VALUE '1'.\n025710        10 VSCOBOL-FLOW-INDICATOR    PIC X.\n025720           88 VSCOBOL-NOFLOW            VALUE '0'.\n025730           88 VSCOBOL-FLOW              VALUE '1'.\n025910        10 VSCOBOL-STATE-INDICATOR   PIC X.\n025920           88 VSCOBOL-NOSTATE           VALUE '0'.\n025930           88 VSCOBOL-STATE             VALUE '1'.\n026110        10 VSCOBOL-TEST-INDICATOR    PIC X.\n026120           88 VSCOBOL-NOTEST            VALUE '0'.\n026130           88 VSCOBOL-TEST              VALUE '1'.\n026310        10 VSCOBOL-RES-INDICATOR     PIC X.\n026320           88 VSCOBOL-NORES             VALUE '0'.\n026330           88 VSCOBOL-RES               VALUE '1'.\n026510        10 VSCOBOL-ENDJOB-INDICATOR  PIC X.\n026520           88 VSCOBOL-NOENDJOB          VALUE '0'.\n026530           88 VSCOBOL-ENDJOB            VALUE '1'.\n026710        10 VSCOBOL-OBJ370-INDICATOR  PIC X.\n026720           88 VSCOBOL-OBJ360            VALUE '0'.\n026730           88 VSCOBOL-OBJ370            VALUE '1'.\n026910        10 VSCOBOL-OPTIMIZED-INDICATOR PIC X.\n026920           88 VSCOBOL-NOOPT             VALUE '0'.\n026930           88 VSCOBOL-OPT               VALUE '1'.\n027110        10 VSCOBOL-CAPEX-OPT-INDICATOR PIC X.\n027120           88 VSCOBOL-NOCAPEX-OPT       VALUE '0'.\n027130           88 VSCOBOL-CAPEX-OPT         VALUE '1'.\n027410        10 VSCOBOL-CAPEX-DTECT-INDICATOR PIC X.\n027420           88 VSCOBOL-NOCAPEX-DTECT     VALUE '0'.\n027430           88 VSCOBOL-CAPEX-DTECT       VALUE '1'.\n027610        10 VSCOBOL-COUNT-INDICATOR   PIC X.\n027620           88 VSCOBOL-NOCOUNT           VALUE '0'.\n027630           88 VSCOBOL-COUNT             VALUE '1'.\n027810        10 VSCOBOL-TRACE-INDICATOR   PIC X.\n027820           88 VSCOBOL-NOTRACE           VALUE '0'.\n027830           88 VSCOBOL-TRACE             VALUE '1'.\n028110        10 VSCOBOL-LANGLEVEL-INDICATOR PIC X.\n028120           88 VSCOBOL-LANGLEVEL-1       VALUE '1'.\n028130           88 VSCOBOL-LANGLEVEL-2       VALUE '2'.\n028200        10 VSCOBOL-LAST-SYSOU-DDNM-CHAR PIC X.\n028700        10 FILLER                    PIC X(3).\n029100     05 PLI-V2-FIELDS.\n029300        10 PLI-V2-MAIN-INDICATOR     PIC X.\n029310           88 PLI-V2-PROC-OPTIONS-MAIN  VALUE '1'.\n029400           88 PLI-V2-NO-PROC-OPTIONS-MAIN VALUE '0'.\n029610        10 PLI-V2-REORDER-INDICATOR  PIC X.\n029620           88 PLI-V2-NOREORDER          VALUE '0'.\n029630           88 PLI-V2-REORDER            VALUE '1'.\n029810        10 PLI-V2-EXECOPS-INDICATOR  PIC X.\n029820           88 PLI-V2-NOEXECOPS          VALUE '0'.\n029830           88 PLI-V2-EXECOPS            VALUE '1'.\n030010        10 PLI-V2-CMPAT-INDICATOR    PIC X.\n030020           88 PLI-V2-CMPAT-V1           VALUE '1'.\n030030           88 PLI-V2-CMPAT-V2           VALUE '2'.\n030210        10 PLI-V2-GRAPHIC-INDICATOR  PIC X.\n030220           88 PLI-V2-NOGRAPHIC          VALUE '0'.\n030230           88 PLI-V2-GRAPHIC            VALUE '1'.\n030410        10 PLI-V2-OPTIMIZE-INDICATOR PIC X.\n030420           88 PLI-V2-NOOPTIMIZE         VALUE '0'.\n030430           88 PLI-V2-OPTIMIZE           VALUE '1'.\n030610        10 PLI-V2-INTERUPT-INDICATOR PIC X.\n030620           88 PLI-V2-NOINTERUPT         VALUE '0'.\n030630           88 PLI-V2-INTERUPT           VALUE '1'.\n030810        10 PLI-V2-FLOW-INDICATOR     PIC X.\n030820           88 PLI-V2-NOFLOW             VALUE '0'.\n030830           88 PLI-V2-FLOW               VALUE '1'.\n031010        10 PLI-V2-COUNT-INDICATOR    PIC X.\n031020           88 PLI-V2-NOCOUNT            VALUE '0'.\n031030           88 PLI-V2-COUNT              VALUE '1'.\n031210        10 PLI-V2-TEST-INDICATOR     PIC X.\n031220           88 PLI-V2-NOTEST             VALUE '0'.\n031230           88 PLI-V2-TEST               VALUE '1'.\n031410        10 PLI-V2-SYSTEM-INDICATOR   PIC X.\n031420           88 PLI-V2-SYSTEM-CMS         VALUE '1'.\n031430           88 PLI-V2-SYSTEM-CMSTP       VALUE '2'.\n031440           88 PLI-V2-SYSTEM-MVS         VALUE '3'.\n031450           88 PLI-V2-SYSTEM-TSO         VALUE '4'.\n031460           88 PLI-V2-SYSTEM-CICS        VALUE '5'.\n031470           88 PLI-V2-SYSTEM-IMS         VALUE '6'.\n032010        10 PLI-V2-CSECT-INDICATOR    PIC X.\n032020           88 PLI-V2-RUNTIME-CSECT      VALUE '1'.\n032030           88 PLI-V2-EXTERNAL-DATA-CSECT VALUE '2'.\n032040           88 PLI-V2-STATIC-DATA-CSECT  VALUE '3'.\n032050           88 PLI-V2-CODE-CSECT         VALUE '4'.\n032100     05 FILLER                       PIC X(28).\n032500     05 WINDOW-INDICATOR             PIC X(4).\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MULTPROG": {"ttr": 7172, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00\\x19\\x00\\x861\\x8f\\x01\\x02\\x00O\\x13)\\x00<\\x00;\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1986-11-14T00:00:00", "modifydate": "2002-01-04T13:29:19", "lines": 60, "newlines": 59, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. MULTPROG.\n000300 ENVIRONMENT DIVISION.\n000400 INPUT-OUTPUT SECTION.\n000500*\n000600 FILE-CONTROL.\n000700     SELECT IN-FILE  ASSIGN TO UT-S-DDTEXTS.\n000800     SELECT OUT-FILE ASSIGN TO UT-S-DDPRINT.\n000900 DATA DIVISION.\n001000 FILE SECTION.\n001100*\n001200 FD   IN-FILE\n001300      RECORDING MODE IS F\n001400      RECORD CONTAINS 80 CHARACTERS\n001500      BLOCK CONTAINS 0 RECORDS\n001600      LABEL RECORDS ARE STANDARD\n001700      DATA RECORD IS IN-RECORD.\n001800 01   IN-RECORD            PIC A(80).\n001900*\n002000 FD   OUT-FILE\n002100      RECORDING MODE IS F\n002200      RECORD CONTAINS 80 CHARACTERS\n002300      BLOCK CONTAINS 0 RECORDS\n002400      LABEL RECORDS ARE STANDARD\n002500      DATA RECORD IS OUT-RECORD.\n002600 01   OUT-RECORD           PIC X(80).\n002700*\n002800 WORKING-STORAGE SECTION.\n002900 77   TOTAL-COUNT          PIC 999   VALUE IS 0.\n003000 77   PASS-CODE            PIC 9.\n003100 01   WORK-RECORD.\n003200      02  NAME             PIC A(10) VALUE IS SPACES.\n003300      02  FILLER           PIC A(5)  VALUE IS SPACES.\n003400      02  MONTH            PIC A(5)  VALUE IS SPACES.\n003500      02  FILLER           PIC A(60) VALUE IS SPACES.\n003600*\n003700 PROCEDURE DIVISION.\n003800 BEGIN.\n003900      OPEN INPUT IN-FILE\n004000           OUTPUT OUT-FILE.\n004100 READ-WRITE.\n004200      READ IN-FILE INTO WORK-RECORD\n004300           AT END GO TO FINISH.\n004400      WRITE OUT-RECORD FROM WORK-RECORD.\n004500 BIRTH-MONTH.\n004600      IF MONTH IS EQUAL TO 'APRIL'\n004700           MOVE 1 TO PASS-CODE,\n004800      ELSE\n004900           MOVE 2 TO PASS-CODE.\n005000 CALL-TWOPROG.\n005100      CALL 'TWOPROG' USING PASS-CODE.\n005200      GO TO READ-WRITE.\n005300 FINISH.\n005400      MOVE 3 TO PASS-CODE.\n005500      CALL 'TWOPROG' USING PASS-CODE, TOTAL-COUNT.\n005600      MOVE SPACES TO OUT-RECORD.\n005700      WRITE OUT-RECORD FROM TOTAL-COUNT.\n005800      CLOSE IN-FILE.\n005900      CLOSE OUT-FILE.\n006000      STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "MULTTEST": {"ttr": 7174, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00 \\x00\\x91#\\x0f\\x00\\x93\\x07\\x0f\\x14$\\x00\\x10\\x00\\x10\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-08-18T00:00:00", "modifydate": "1993-03-11T14:24:20", "lines": 16, "newlines": 16, "modlines": 0, "user": "USER02"}, "text": "THIS FILE IS A TEST FILE FOR THE MULTPROG PROGRAM. THE ONLY FIELD USED\nIN THE PROGRAM IS IN COLUMNS 16-20, A CHARACTER FIELD  CONTAINING MONTH\nNAME. THE PROGRAM TESTS THIS FIELD FOR \"APRIL\" AND SETS A SWITCH TO 1\nIF IT IS APRIL, ELSE TO 2.\n               JANUA\n               FEBRU\n               MARCH\n               APRIL\n               MAY\n               JUNE\n               JULY\n               AUGUS\n               SEPTE\n               OCTOB\n               NOVEM\n               DECEM\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PAYROLL": {"ttr": 7176, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x003\\x01\\x01#_\\x01\\x02\\x00O\\x13)\\x00\\x9b\\x00\\x9b\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2001-08-23T00:00:00", "modifydate": "2002-01-04T13:29:33", "lines": 155, "newlines": 155, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.                                        *\n000200 PROGRAM-ID.    PAYROLL.                                         *\n000300 AUTHOR. R THORNTON                                              *\n000310**************************************************************** *\n000400*REMARKS. EXAMPLE PROGRAM INTENDED TO SHOW PRACTICAL USES FOR  * *\n000410*         COMMON COBOL FACILITIES.                             *\n000420**************************************************************** *\n000500 ENVIRONMENT DIVISION.                                           *\n000600 CONFIGURATION SECTION.                                          *\n000700 INPUT-OUTPUT SECTION.                                           *\n000710 FILE-CONTROL.                                                   *\n000720     SELECT TIMECARD-FILE ASSIGN TO TIMECARD.                    *\n000730     SELECT EMPLOYEE-FILE ASSIGN TO EMPLOYEE.                    *\n000732            ORGANIZATION IS INDEXED\n000733            ACCESS IS DYNAMIC\n000734            RECORD KEY IS EF-EMPLOYEE-NUMBER\n000735            STATUS IS EMPLOYEE-FILE-FEEDBACK.\n000740     SELECT CHECK-REGISTER ASSIGN TO CHECKS.                     *\n000800 DATA DIVISION.                                                  *\n000810 FILE SECTION.                                                   *\n000820 FD  TIMECARD-FILE                                               *\n000821     BLOCK CONTAINS 0 RECORDS                                    *\n000822     RECORD CONTAINS 80 CHARACTERS                               *\n000823     RECORDING MODE IS F                                         *\n000830     LABEL RECORDS ARE STANDARD.                                 *\n000840 01  TIMECARD-RECORD.                                            *      10\n000850   05  TF-EMPLOYEE-NUMBER    PIC X(4).                           *      20\n000860   05  FILLER                PIC X.                              *      30\n000861   05  TF-HOURS-WORKED       PIC 99V99.                          *      30\n000870   05  FILLER                PIC X(81).                          *      40\n000874                                                                 *\n000881 FD  EMPLOYEE-FILE                                               *\n000882     BLOCK CONTAINS 0 RECORDS                                    *\n000883     RECORD CONTAINS 225 CHARACTERS                              *\n000885     LABEL RECORDS ARE STANDARD.                                 *\n000886 01  OUTPUT-RECORD.                                              *      10\n000887   05  EF-EMPLOYEE-NUMBER    PIC X(4).                           *      20\n000888   05  EF-LAST-NAME PIC X(20).                                          30\n000889   05  EF-FIRST-NAME PIC X(15).                                         30\n000890   05  EF-MIDDLE-INITIAL PIC X.                                         40\n000891   05  EF-STREET-ADDRESS     PIC X(30).\n000892   05  EF-ADDRESS-LINE-2     PIC X(30).\n000893   05  EF-CITY               PIC X(20).\n000894   05  EF-STATE              PIC XX.\n000895   05  EF-ZIP-CODE-5         PIC X(5).\n000896   05  EF-ZIP-PLUS-4         PIC X(4).\n000898   05  EF-JOB-TITLE          PIC X(25).\n000899   05  EF-DIVISION           PIC X(5).\n000900   05  EF-YEARS-SERVICE      PIC S9(3) COMP-3.\n000901   05  EF-CLASSIFICATION     PIC X.\n000902       88  EF-SALARIED              VALUE 'S'.\n000903       88  EF-HOURLY                VALUE 'H'.\n000904       88  EF-PART-TIME             VALUE 'P'.\n000905   05  EF-PAY-INTERVAL       PIC X.\n000906       88  EF-PAID-WEEKLY           VALUE 'W'.\n000907       88  EF-PAID-BIMONTHLY        VALUE 'B'.\n000908       88  EF-PAID-MONTHLY          VALUE 'M'.\n000909   05  EF-PAY-RATE           PIC S9(7)V99 COMP-3.\n000910   05  EF-FEDERAL-DEPENDENTS PIC S9(3) COMP-3.\n000911   05  EF-FEDERAL-DEPENDENTS PIC S9(3) COMP-3.\n000912   05  EF-DEDUCTIONS COMP-3.\n000913       10  EF-401K-PERCENT   PIC S9(3).\n000914       10  EF-DENTAL         PIC S9(3)V99.\n000915       10  EF-EMPLOYEE-ASSOC PIC S9V99.\n000916       10  EF-UGF-DONATION   PIC S9(5)V99.\n000917   05  EF-YTD-TOTALS COMP-3.\n000918       10  EF-YTD-GROSS-PAY  PIC S9(9)V99.\n000919       10  EF-YTD-401K       PIC S9(7)V99.\n000920       10  EF-YTD-DENTAL     PIC S9(5)V99.\n000921       10  EF-YTD-EMPLOYEE-ASSOC PIC S9(3)V99.\n000922       10  EF-YTD-UGF        PIC S9(7)V99.\n000923       10  EF-PTO-HOURS-USED PIC S9(5)V99.\n000924                                                                 *\n000925 FD  CHECK-REGISTER                                              *\n000926     BLOCK CONTAINS 0 RECORDS                                    *\n000927     RECORD CONTAINS 133 CHARACTERS                              *\n000928     RECORDING MODE IS F                                         *\n000929     LABEL RECORDS ARE STANDARD.                                 *\n000930 01  CHECK-REGISTER-LINE.                                        *      10\n000931   05  CR-CARRIAGE-CONTROL   PIC X.                              *      20\n000932   05  CR-EMPLOYEE-NUMBER    PIC X(4).                           *      20\n000933   05  FILLER                PIC X.                              *      30\n000934   05  CR-LAST-NAME          PIC X(20).                                 30\n000935   05  FILLER                PIC X.                                     40\n000936   05  CR-FIRST-NAME         PIC X(15).\n000937   05  FILLER                PIC X.\n000938   05  CR-MIDDLE-INITIAL     PIC X.\n000939   05  FILLER                PIC X.\n000940   05  CR-CHECK-NUMBER       PIC X(5).\n000941   05  FILLER                PIC X.\n000942   05  CR-CHECK-AMOUNT       PIC ZZZ,ZZ9.99.\n000943   05  FILLER                PIC X(71).\n000944                                                                 *\n000950 WORKING-STORAGE SECTION.                                        *\n001000 77  FILLER PIC X(36)  VALUE                                     *\n001100     'PAYROLL WORKING STORAGE BEGINS HERE'.                      *\n001210 01  WS-FILE-STATUS-FIELDS.\n001220     05  EMPLOYEE-FILE-FEEDBACK     PIC X(2)   VALUE SPACES.\n001230         88  EMPLOYEE-RECORD-FOUND             VALUE '00'.\n001240\n001300 01  GENERAL-AREAS.                                              *\n001301     05  LINE-SPACING        PIC 9 VALUE 1.                      *\n001302     05  END-OF-TIMECARD-SWITCH PIC X VALUE 'N'.                 *\n001303         88  END-OF-TIMECARD-DATA VALUE IS 'Y'.                  *\n001304         88  MORE-TIMECARD-DATA VALUE IS 'N'.                    *\n001305     05  COUNTER             PIC S9(8) COMP-3.                   *\n001310                                                                 *\n001400 LINKAGE SECTION.                                                *\n001500 01  PARM-FIELD.                                                 *\n001510     05  PARM-LENGTH         PIC S9(4) COMP.                     *\n001520     05  PARM-CHECK-NUMBER   PIC X(5).                           *\n001600                                                                 *\n001700 PROCEDURE DIVISION USING PARM-FIELD.                            *\n001800                                                                 *\n001900 A100-EXECUTIVE-CONTROL.                                         *\n002000     PERFORM A100-INITIALIZATION.                                *\n002100     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-TIMECARD-DATA. *\n002200     PERFORM Z100-END-OF-PROCESSING.                             *\n002300     GOBACK.                                                     *\n002400                                                                 *\n002500 A100-INITIALIZATION.                                            *\n002600     OPEN INPUT TIMECARD-FILE,                                   *\n002610          I-O EMPLOYEE-FILE,\n002620          OUTPUT CHECK-REGISTER.\n002700                                                                 *\n002800 B100-MAINLINE-PROCESSING.                                       *\n002900     PERFORM C100-READ-TIMECARD-FILE THRU C100-EXIT.             *\n002910     IF MORE-TIMECARD-DATA                                       *\n003000        PERFORM D100-PROCESS-THE-RECORD THRU D100-EXIT.          *\n003001     PERFORM E100-WRITE-EMPLOYEE-FILE THRU E100-EXIT.            *\n003010                                                                 *\n003020 C100-READ-TIMECARD-FILE.                                        *\n003030     READ TIMECARD-FILE                                          *\n003040         AT END MOVE 'Y' TO END-OF-TIMECARD-SWITCH.              *\n003050 C100-EXIT. EXIT.                                                *\n003060                                                                 *\n003070 D100-PROCESS-THE-RECORD.                                        *\n003080     ADD 1 TO COUNTER.                                           *\n003090 D100-EXIT. EXIT.                                                *\n003091                                                                 *\n003092 E100-WRITE-EMPLOYEE-FILE.                                       *\n003093     WRITE OUTPUT-RECORD.                                        *\n003095 E100-EXIT. EXIT.                                                *\n003096                                                                 *\n003097 Y100-PRINT-A-LINE.                                              *\n003098     WRITE CHECK-REGISTER-LINE AFTER ADVANCING LINE-SPACING.     *\n003099 Y100-EXIT. EXIT.                                                *\n003100                                                                 *\n003101 Z100-END-OF-PROCESSING.                                         *\n003110     MOVE COUNTER TO PRT-COUNTER.                                *\n003120     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.                   *\n003200     ADD 1 TO SUB.                                               *\n003300     CLOSE TIMECARD-FILE,                                        *\n003400           EMPLOYEE-FILE,                                        *\n003500           CHECK-REGISTER.                                       *\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POINTER1": {"ttr": 7180, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x04\\x00A\\x00\\x91\\x07\\x1f\\x01\\x02\\x00O\\x13)\\x00%\\x00\\x18\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.04", "flags": 0, "createdate": "1991-03-12T00:00:00", "modifydate": "2002-01-04T13:29:41", "lines": 37, "newlines": 24, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.\n000200 PROGRAM-ID. POINTER1.\n000210**********************************************************************\n000220* FOLLOWING ARE VALID POINTER STATEMENTS:                            *\n000230* MOVE X'        ' TO REDEFINED-POINTER-ITEM.  (OR AS GROUP NAME)    *\n000240* MOVE LOW-VALUES TO REDEFINED-POINTER-ITEM.   (OR AS GROUP NAME)    *\n000250* SET PTR-DATA-ITEM1 TO PTR-DATA-ITEM2                               *\n000260* SET PTR-DATA-ITEM TO ADDRESS OF LINKAGE-SECTION-01.                *\n000270* SET PTR-DATA-ITEM TO NULLS.                                        *\n000280* SET ADDRESS OF LINKAGE-SECTION-01 TO POINTER-DATA-ITEM.            *\n000290* SET ADDRESS OF LINGAGE-SECTION-01 TO ADDRESS OF LINKAGE-SECTION-01 *\n000291* SET ADDRESS OF LINKAGE-SECTION-01 TO NULLS.                        *\n000292*                                                                    *\n000293* NOTICE THAT ADDRESS OF IS ONLY VALID FOR LINKAGE SECTION 01 OR 77. *\n000294**********************************************************************\n000300 ENVIRONMENT DIVISION.\n000400 INPUT-OUTPUT SECTION.\n000500 FILE-CONTROL.\n000600 DATA DIVISION.\n000700 FILE SECTION.\n000800 WORKING-STORAGE SECTION.\n000900 01  TCB-ADDRESS-POINTER.\n001000     05  TCB-ADDR-POINTER        POINTER.\n001100 LINKAGE SECTION.\n001200 01  TCB-POINTER                 POINTER.\n001300 01  TCB.\n001400     05  FILLER                  PIC X(12).\n001500     05  TIOT-POINTER            POINTER.\n001600 01  TIOT.\n001700     05  JOB-NAME                PIC X(8).\n001800 PROCEDURE DIVISION.\n001900     MOVE X'0000021C' TO TCB-ADDRESS-POINTER.\n002000     SET ADDRESS OF TCB-POINTER TO TCB-ADDR-POINTER.\n002100     SET ADDRESS OF TCB TO TCB-POINTER.\n002200     SET ADDRESS OF TIOT TO TIOT-POINTER.\n002300     DISPLAY JOB-NAME.\n002400     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POINTER2": {"ttr": 7182, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00I\\x00\\x91\\x07/\\x01\\x02\\x00O\\x13)\\x00\"\\x00\"\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1991-03-13T00:00:00", "modifydate": "2002-01-04T13:29:49", "lines": 34, "newlines": 34, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.\n000200 PROGRAM-ID. POINTER2.\n000300 ENVIRONMENT DIVISION.\n000400 INPUT-OUTPUT SECTION.\n000500 FILE-CONTROL.\n000600 DATA DIVISION.\n000700 FILE SECTION.\n000800 WORKING-STORAGE SECTION.\n000900 01  CVT-ADDRESS-POINTER.\n001000     05  CVT-ADDR-POINTER        POINTER.\n001100 LINKAGE SECTION.\n001200 01  CVT-POINTER                 POINTER.\n001300 01  CVT.\n001400     05  FILLER                  PIC X(296).\n001500     05  JESCT-POINTER           POINTER.\n001600 01  JESCT.\n001700     05  FILLER                  PIC X(24).\n001800     05  JESSSCVT-POINTER        POINTER.\n001900 01  SSCVT.\n002000     05  EYE-CATCHER             PIC X(4).\n002100     05  NEXT-SSCVT              POINTER.\n002200     05  SUBSYSTEM-NAME          PIC X(4).\n002300 PROCEDURE DIVISION.\n002400     MOVE X'00000010' TO CVT-ADDRESS-POINTER.\n002500     SET ADDRESS OF CVT-POINTER TO CVT-ADDR-POINTER.\n002600     SET ADDRESS OF CVT TO CVT-POINTER.\n002700     SET ADDRESS OF JESCT TO JESCT-POINTER.\n002800     SET ADDRESS OF SSCVT TO JESSSCVT-POINTER.\n002900     DISPLAY SUBSYSTEM-NAME.\n003000     PERFORM UNTIL NEXT-SSCVT = NULL\n003100         SET ADDRESS OF SSCVT TO NEXT-SSCVT\n003200         DISPLAY SUBSYSTEM-NAME\n003300     END-PERFORM.\n003400     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "POINTER3": {"ttr": 7184, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00V\\x00\\x91\\x07/\\x01\\x02\\x00O\\x13)\\x003\\x003\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1991-03-13T00:00:00", "modifydate": "2002-01-04T13:29:56", "lines": 51, "newlines": 51, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.\n000200 PROGRAM-ID. POINTER3.\n000300 ENVIRONMENT DIVISION.\n000400 INPUT-OUTPUT SECTION.\n000500 FILE-CONTROL.\n000600 DATA DIVISION.\n000700 FILE SECTION.\n000800 WORKING-STORAGE SECTION.\n000900 01  TCB-ADDRESS-POINTER.\n001000     05  TCB-ADDR-POINTER        POINTER.\n001100 01  TIOT-SEG-POINT.\n001200     05  TIOT-SEG-POINTER        POINTER.\n001300     05  TIOT-SEG-PNT            REDEFINES TIOT-SEG-POINTER\n001400                                 PIC S9(9) COMP.\n001500 01  JFCB-POINT.\n001600     05  JFCB-POINTER            POINTER.\n001700     05  JFCB-POINT-RED          REDEFINES JFCB-POINTER.\n001800         10  FILLER              PIC X.\n001900         10  JFCB-LOW-3          PIC X(3).\n002000 LINKAGE SECTION.\n002100 01  TCB-POINTER                 POINTER.\n002200 01  TCB.\n002300     05  FILLER                  PIC X(12).\n002400     05  TIOT-POINTER            POINTER.\n002500 01  TIOT-START                  PIC X(24).\n002600 01  TIOT-SEG.\n002700     05  TIO-LEN                 PIC X.\n002800     05  FILLER                  PIC X(3).\n002900     05  DD-NAME                 PIC X(8).\n003000     05  JFCB-ADDR               PIC X(3).\n003100 01  JFCB.\n003200     05  FILLER                  PIC X(16).\n003300     05  DS-NAME                 PIC X(44).\n003400 PROCEDURE DIVISION.\n003500     MOVE LOW-VALUES TO JFCB-POINT.\n003600     MOVE X'0000021C' TO TCB-ADDRESS-POINTER.\n003700     SET ADDRESS OF TCB-POINTER TO TCB-ADDR-POINTER.\n003800     SET ADDRESS OF TCB TO TCB-POINTER.\n003900     SET ADDRESS OF TIOT-START TO TIOT-POINTER.\n004000     SET TIOT-SEG-POINTER TO TIOT-POINTER\n004100     ADD 24 TO TIOT-SEG-PNT.\n004200     SET ADDRESS OF TIOT-SEG TO TIOT-SEG-POINTER.\n004300     PERFORM UNTIL TIO-LEN = LOW-VALUES\n004400         DISPLAY DD-NAME\n004500         MOVE JFCB-ADDR TO JFCB-LOW-3\n004600         SET ADDRESS OF JFCB TO JFCB-POINTER\n004700         DISPLAY DS-NAME\n004800         ADD 20 TO TIOT-SEG-PNT\n004900         SET ADDRESS OF TIOT-SEG TO TIOT-SEG-POINTER\n005000     END-PERFORM.\n005100     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRTCC": {"ttr": 7186, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00Q\\x01\\x02\\x12\\x1f\\x01\\x02\\x12\\x1f\\x12B\\x00\\xbc\\x00\\x92\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-05-01T00:00:00", "modifydate": "2002-05-01T12:42:51", "lines": 188, "newlines": 146, "modlines": 0, "user": "BC0THOR"}, "text": "       IDENTIFICATION DIVISION.\n\n       PROGRAM-ID.    PRTCC.\n\n       AUTHOR. R THORNTON\n\n      *REMARKS*********************************************************\n      * PRTCC CONTRASTS PRINTING USING SIMPLE WRITE AS COMPARED TO    *\n      * USING WRITE AFTER ADVANCING STATEMENTS FOR PRINTER CARRIAGE   *\n      * CONTROL:                                                      *\n      *   WHEN USING SIMPLE WRITE STATEMENTS:                         *\n      *     . THE COMPILER PARM \"ADV\" HAS NO EFFECT.                  *\n      *     . THE PRINT RECORD IS DEFINED TO CONTAIN THE CARRIAGE     *\n      *       CONTROL BYTE IN THE FIRST POSITION OF THE RECORD.       *\n      *     . BEFORE WRITING, THE PROGRAM MUST PUT THE PROPER         *\n      *       VALUE IN THE CARRIAGE CONTROL BYTE OF THE RECORD TO     *\n      *       BE WRITTEN: 1=SKIP TO CHANNEL 1, 2=SKIP TO CHANNEL 2,   *\n      *       +=NO SPACE, BLANK=SINGLE SPACE, 0=DOUBLE SPACE,         *\n      *       -=TRIPLE SPACE, ETC.                                    *\n      *     . NOTE THAT ONLY A SINGLE PRINT ROUTINE IS NEEDED FOR     *\n      *       THIS, SINCE THE CARRIAGE CONTROL BYTE IS SET BY THE     *\n      *       PROGRAM, RATHER THAN BY THE WRITE STATEMENT.            *\n      *   WHEN USING THE WRITE AFTER ADVANCING STATEMENTS:            *\n      *     . THE COMPILER PARM \"ADV\" CONTROLS WHETHER OR NOT THE     *\n      *       PROGRAM DEFINES THE FIRST BYTE OF THE RECORD TO         *\n      *       CONTAIN THE CARRIAGE CONTROL BYTE OR NOT.               *\n      *     . THE SPECIAL-NAMES PARAGRAPH OF THE CONFIGURATION SECTION*\n      *       MUST BE USED TO DEFINE NAMES FOR THE CHANNEL SKIPS TO BE*\n      *       USED, AND ALSO FOR SUPPRESSED SKIPPING IF THESE ARE TO  *\n      *       BE USED.                                                *\n      *     . THE PRINT RECORD IS DEFINED WITH OR WITHOUT THE         *\n      *       CARRIAGE CONTROL BYTE DEPENDING ON HOW THE \"ADV\"        *\n      *       COBOL COMPILE PARM IS SET, BUT THIS BYTE IS NOT         *\n      *       USED BY THE PROGRAM.                                    *\n      *     . THE PROGRAM REQUIRES A SEPARATE WRITE AFTER ADVANCING   *\n      *       STATEMENT FOR EACH DIFFERENT LINE SPACING TO BE USED    *\n      *       (ONE FOR WRITE AFTER ADVANCING 1 LINE, ANOTHER FOR      *\n      *       WRITE AFTER ADVANCING 2 LINES, ETC).                    *\n      *     . THE CARRIAGE CONTROL BYTE IS SET IN THE FIRST BYTE OF   *\n      *       THE PRINT RECORD BY THE WRITE AFTER ADVANCING           *\n      *       STATEMENT.                                              *\n      * THE LAST LINE WRITTEN TO EACH FILE IS A TRAILER RECORD THAT   *\n      * IS CONTAINS DIFFERENT CARRIAGE CONTROL VALUES DELIBERATELY.   *\n      * THE TWO PRINT FILES SHOULD BE IDENTICAL EXCEPT FOR THE FINAL  *\n      * RECORD.                                                       *\n      *****************************************************************\n       ENVIRONMENT DIVISION.\n\n       CONFIGURATION SECTION.\n\n       SPECIAL-NAMES.\n           C09 IS CHANNEL-9,\n           CSP IS NO-SPACE,\n           C01 IS HEAD-OF-FORM.\n\n       INPUT-OUTPUT SECTION.\n\n       FILE-CONTROL.\n           SELECT INPUT-FILE ASSIGN TO INPUT1.\n           SELECT ADVANCING-FILE ASSIGN TO ADVNCING.\n           SELECT NOADVANCING-FILE ASSIGN TO NOADVANC.\n\n       DATA DIVISION.\n\n       FILE SECTION.\n\n       FD  INPUT-FILE\n           BLOCK CONTAINS 0 RECORDS\n           RECORD CONTAINS 80 CHARACTERS\n           RECORDING MODE IS F\n           LABEL RECORDS ARE STANDARD.\n       01  INPUT-RECORD            PIC X(80).                                 10\n\n       FD  ADVANCING-FILE\n           BLOCK CONTAINS 0 RECORDS\n           RECORD CONTAINS 133 CHARACTERS\n           RECORDING MODE IS F\n           LABEL RECORDS ARE STANDARD.\n       01  PRINT-RECORD-ADV.                                                  10\n           05  FILLER                PIC X.                                   20\n           05  PRT-DATA-ADV          PIC X(80).                               20\n           05  FILLER                PIC X(52).                               30\n\n       FD  NOADVANCING-FILE\n           BLOCK CONTAINS 0 RECORDS\n           RECORD CONTAINS 133 CHARACTERS\n           RECORDING MODE IS F\n           LABEL RECORDS ARE STANDARD.\n       01  PRINT-RECORD-NOADV.                                                10\n           05  PRTCC-NOADV           PIC X.                                   20\n           05  PRT-DATA-NOADV        PIC X(80).                               20\n           05  FILLER                PIC X(52).                               30\n\n       WORKING-STORAGE SECTION.\n       77  FILLER PIC X(36)  VALUE\n           'PRTCC WORKING STORAGE BEGINS HERE'.\n\n       01  SWITCHES.\n           05  EOF-INPUT1             PIC X VALUE 'N'.\n               88  MORE-INPUT1-DATA         VALUE 'N'.\n               88  NO-MORE-INPUT1-DATA      VALUE 'Y'.\n           05  NEXT-PRINT-ACTION      PIC X VALUE '1'.\n               88  NEW-PAGE                 VALUE '1'.\n               88  GO-CHANNEL-9             VALUE '9'.\n               88  NO-SPACE-PRINT           VALUE '+'.\n               88  WRITE-SINGLE-SPACED      VALUE ' '.\n               88  WRITE-DOUBLE-SPACED      VALUE '0'.\n               88  WRITE-TRIPLE-SPACED      VALUE '-'.\n\n       01  FINAL-RECORDS.\n           05  FINAL-ADV-RECORD       PIC X(133) VALUE\n           ' FINAL ADVANCING RECORD: CARRIAGE CONTROL IS 1.'.\n           05  FINAL-NOADV-RECORD     PIC X(133) VALUE\n           '-FINAL NO-ADVANCING RECORD: CARRIAGE CONTROL IS -.'.\n\n       PROCEDURE DIVISION.\n\n       A100-EXECUTIVE-CONTROL.\n           OPEN INPUT INPUT-FILE,\n                OUTPUT ADVANCING-FILE, NOADVANCING-FILE.\n           PERFORM B100-MAINLINE-PROCESSING UNTIL NO-MORE-INPUT1-DATA.\n           MOVE FINAL-ADV-RECORD TO PRINT-RECORD-ADV.\n           PERFORM F100-WRITE-ADV-NEW-PAGE.\n           MOVE FINAL-NOADV-RECORD TO PRINT-RECORD-NOADV.\n           PERFORM E100-WRITE-NOADVANCING.\n           PERFORM Z100-END-OF-PROCESSING.\n           GOBACK.\n\n       B100-MAINLINE-PROCESSING.\n           PERFORM C100-READ-INPUT-FILE.\n           IF MORE-INPUT1-DATA\n              PERFORM D100-PROCESS-THE-RECORD.\n\n       C100-READ-INPUT-FILE.\n           READ INPUT-FILE\n               AT END MOVE 'Y' TO EOF-INPUT1.\n\n       D100-PROCESS-THE-RECORD.\n           MOVE SPACES TO PRINT-RECORD-ADV.\n           MOVE INPUT-RECORD TO PRT-DATA-ADV.\n           MOVE SPACES TO PRINT-RECORD-NOADV.\n           MOVE INPUT-RECORD TO PRT-DATA-NOADV.\n           MOVE NEXT-PRINT-ACTION TO PRTCC-NOADV.\n           PERFORM E100-WRITE-NOADVANCING.\n           IF NEW-PAGE\n               PERFORM F100-WRITE-ADV-NEW-PAGE\n               MOVE '9' TO NEXT-PRINT-ACTION\n           ELSE IF GO-CHANNEL-9\n               PERFORM G100-WRITE-ADV-CHANNEL-9\n               MOVE '+' TO NEXT-PRINT-ACTION\n           ELSE IF NO-SPACE-PRINT\n               PERFORM H100-WRITE-ADV-NOSPACE\n               MOVE ' ' TO NEXT-PRINT-ACTION\n           ELSE IF WRITE-SINGLE-SPACED\n               PERFORM J100-WRITE-ADV-SPACE1\n               MOVE '0' TO NEXT-PRINT-ACTION\n           ELSE IF WRITE-DOUBLE-SPACED\n               PERFORM K100-WRITE-ADV-SPACE2\n               MOVE '-' TO NEXT-PRINT-ACTION\n           ELSE IF WRITE-TRIPLE-SPACED\n               PERFORM L100-WRITE-ADV-SPACE3\n               MOVE '1' TO NEXT-PRINT-ACTION.\n\n       E100-WRITE-NOADVANCING.\n               WRITE PRINT-RECORD-NOADV.\n\n       F100-WRITE-ADV-NEW-PAGE.\n               WRITE PRINT-RECORD-ADV AFTER ADVANCING HEAD-OF-FORM.\n\n       G100-WRITE-ADV-CHANNEL-9.\n               WRITE PRINT-RECORD-ADV AFTER ADVANCING CHANNEL-9.\n\n       H100-WRITE-ADV-NOSPACE.\n               WRITE PRINT-RECORD-ADV AFTER ADVANCING NO-SPACE.\n\n       J100-WRITE-ADV-SPACE1.\n               WRITE PRINT-RECORD-ADV AFTER ADVANCING 1 LINE.\n\n       K100-WRITE-ADV-SPACE2.\n               WRITE PRINT-RECORD-ADV AFTER ADVANCING 2 LINES.\n\n       L100-WRITE-ADV-SPACE3.\n               WRITE PRINT-RECORD-ADV AFTER ADVANCING 3 LINES.\n\n       Z100-END-OF-PROCESSING.\n           CLOSE INPUT-FILE,\n                 ADVANCING-FILE,\n                 NOADVANCING-FILE.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PRTFPRAN": {"ttr": 7428, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x08\\x00\\x93\\x07\\x0f\\x01\\x02\\x00O\\x130\\x00P\\x00P\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "2002-01-04T13:30:08", "lines": 80, "newlines": 80, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  PRTFPRAN.\n000300 REMARKS. PRINT SEQUENCE OF RANDOM NUMBERS BASED ON CONTROL CARDS:\n000400           (A) THE CONTROL CARD CONTAINS A SEED VALUE IN COLUMNS\n000500               1-9, RIGHT-JUSTIFIED, AND THE NUMBER OF RANDOM OUTPUT\n000600               VALUES TO BE PRINTED IN COLUMNS 11-15, RIGHT JUSTIFIED.\n000700           (B) THE PRINTED OUTPUT CONTAINS THE ORIGINAL CONTROL\n000800               CARD FOLLOWED BY THE RANDOM NUMBERS GENERATED, ONE PER\n000900               PRINT LINE.\n001000 ENVIRONMENT DIVISION.\n001100 CONFIGURATION SECTION.\n001200 INPUT-OUTPUT SECTION.\n001300 FILE-CONTROL.\n001400     SELECT CONTROL-CARD ASSIGN TO UT-S-READER1.\n001500     SELECT PRINT-OUT ASSIGN TO UT-S-PRINT1.\n001600 DATA DIVISION.\n001700 FILE SECTION.\n001800 FD  CONTROL-CARD\n001900       LABEL RECORDS ARE STANDARD\n002000       RECORD CONTAINS 80 CHARACTERS\n002100       BLOCK CONTAINS 0 RECORDS\n002200       DATA RECORD IS CARD-IMAGE.\n002300 01  CARD-IMAGE.\n002400     05  RANDOM-SEED             PIC 9(9).\n002500     05  FILLER                  PIC X.\n002600     05  NUMBER-VALUES           PIC 9(5).\n002700     05  FILLER                  PIC X(65).\n002800 FD  PRINT-OUT\n002900       LABEL RECORDS ARE STANDARD\n003000       RECORD CONTAINS 80 CHARACTERS\n003100       BLOCK CONTAINS 0 RECORDS\n003200       DATA RECORD IS PRINT-LINE.\n003300 01  PRINT-LINE.\n003400     05  PRINT-LITERAL      PIC X(9).\n003500     05  PRINT-NUMBER       PIC .9(15).\n003600     05  FILLER             PIC X(55).\n003700 WORKING-STORAGE SECTION.\n003800 77  RANDOM-VALUE            COMP-2.\n003900 77  LOOP-CTR                PIC S9(5) COMP-3.\n004000 01  MISC-WORK.\n004100     05  PRINTABLE-FP        PIC -9.9(15)E-99.\n004200     05  FILLER REDEFINES PRINTABLE-FP.\n004300         10  FP-MANTISSA-FIELD.\n004400             15  FP-SIGN1    PIC X(1).\n004500             15  FP-HI-DIGIT PIC 9(1).\n004600             15  FP-DECIMAL  PIC X(1).\n004700             15  FP-FRACTION PIC V9(15).\n004800         10  FP-EXPONENT-FIELD.\n004900             15  FP-E        PIC X(1).\n005000             15  FP-SIGN2    PIC X(1).\n005100             15  FP-EXPONENT PIC 9(2).\n005200 PROCEDURE DIVISION.\n005300     OPEN INPUT CONTROL-CARD, OUTPUT PRINT-OUT.\n005400     READ CONTROL-CARD\n005500         AT END DISPLAY 'MISSING CONTROL CARD'\n005600         CLOSE CONTROL-CARD, PRINT-OUT\n005700         GOBACK.\n005800     IF RANDOM-SEED IS NUMERIC AND NUMBER-VALUES IS NUMERIC,\n005900         MOVE RANDOM-SEED TO RANDOM-VALUE\n006000     ELSE\n006100         DISPLAY 'INVALID CONTROL CARD'\n006200         CLOSE CONTROL-CARD, PRINT-OUT\n006300         GOBACK.\n006400     PERFORM COMPUTE-RANDOM VARYING LOOP-CTR FROM 1 BY 1\n006500         UNTIL LOOP-CTR IS GREATER THAN NUMBER-VALUES.\n006600     CLOSE CONTROL-CARD, PRINT-OUT.\n006700     GOBACK.\n006800 COMPUTE-RANDOM.\n006900     COMPUTE RANDOM-VALUE =\n007000         (RANDOM-VALUE / ((2 ** 31) - 1)) * (7 ** 5).\n007100     MOVE RANDOM-VALUE TO PRINTABLE-FP\n007200     MOVE SPACES TO PRINT-LINE.\n007300     MOVE 'RANDOM = ' TO PRINT-LITERAL.\n007400     IF FP-FRACTION IS ZERO\n007500         ADD 1 TO RANDOM-SEED\n007600         MOVE RANDOM-SEED TO RANDOM-VALUE\n007700         SUBTRACT 1 FROM LOOP-CTR\n007800     ELSE\n007900         MOVE FP-FRACTION TO PRINT-NUMBER\n008000         WRITE PRINT-LINE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRTHEX": {"ttr": 7431, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x00\\x16\\x00\\x92\\x04\\x9f\\x01\\x02\\x00O\\x130\\x00F\\x003\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1992-02-18T00:00:00", "modifydate": "2002-01-04T13:30:16", "lines": 70, "newlines": 51, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    PRTHEX.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. UTILITY PRTHEX PRINTS MEMORY IN HEX.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900     SELECT PRINT-FILE ASSIGN TO UT-S-PRINT1.\n001000 DATA DIVISION.\n001100 FILE SECTION.\n001200\n001300 FD PRINT-FILE\n001400     RECORD CONTAINS 80 CHARACTERS\n001500     RECORDING MODE IS F\n001600     BLOCK CONTAINS 0 RECORDS\n001700     LABEL RECORD IS STANDARD\n001800     DATA RECORD IS INPUT-RECORD.\n001900\n002000 01  PRINT-RECORD.\n002100     05  PRINT-NUMBER              PIC XX.\n002200     05  FILLER                    PIC X(78).\n002300\n002400 WORKING-STORAGE SECTION.\n002500 77  FILLER PIC X(36)  VALUE\n002600     'PRTHEX WORKING STORAGE BEGINS HERE'.\n002700 01  MISCELLANY.\n002800     05  QUOTIENT                PIC S9(4) COMP.\n002900     05  INCOMING-BINARY-NUMBER  PIC S9(4) COMP.\n003000     05  FILLER REDEFINES INCOMING-BINARY-NUMBER.\n003100         10 FILLER               PIC X.\n003200         10 INCOMING-BINARY-BYTE PIC X.\n003300\n003400     05  HALFWORD                PIC S9(4) COMP.\n003500     05  FILLER REDEFINES HALFWORD.\n003600         10 FILLER               PIC X.\n003700         10 HEX-BYTE             PIC X.\n003800\n003900     05  CONVERTED-NUMBER.\n004000         10  ZONE-DIGIT          PIC X.\n004100         10  NUMERIC-DIGIT       PIC X.\n004200\n004300 PROCEDURE DIVISION.\n004400\n004500     OPEN OUTPUT PRINT-FILE.\n004600 MAINLINE.\n004700     MOVE +0 TO INCOMING-BINARY-NUMBER.\n004800     PERFORM CONVERT-AND-PRINT 256 TIMES.\n004900     CLOSE PRINT-FILE.\n005000     GOBACK.\n005100 CONVERT-AND-PRINT.\n005200     MOVE +0 TO HALFWORD.\n005300     MOVE INCOMING-BINARY-BYTE TO HEX-BYTE.\n005400     DIVIDE HALFWORD BY 16 GIVING QUOTIENT REMAINDER HALFWORD.\n005500     IF HALFWORD > 9\n005600         ADD 183 TO HALFWORD\n005700     ELSE\n005800         ADD 240 TO HALFWORD.\n005900     MOVE HEX-BYTE TO NUMERIC-DIGIT.\n006000     MOVE +0 TO HALFWORD.\n006100     MOVE INCOMING-BINARY-BYTE TO HEX-BYTE.\n006200     DIVIDE HALFWORD BY 16 GIVING HALFWORD.\n006300     IF HALFWORD > 9\n006400         ADD 183 TO HALFWORD\n006500     ELSE\n006600         ADD 240 TO HALFWORD.\n006700     MOVE HEX-BYTE TO ZONE-DIGIT.\n006800     MOVE CONVERTED-NUMBER TO PRINT-NUMBER.\n006900     WRITE PRINT-RECORD.\n007000     ADD 1 TO INCOMING-BINARY-NUMBER.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRTINFO": {"ttr": 7433, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x05\\x00&\\x00\\x93'/\\x01\\x02\\x00O\\x130\\x01=\\x017\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.05", "flags": 0, "createdate": "1993-09-29T00:00:00", "modifydate": "2002-01-04T13:30:26", "lines": 317, "newlines": 311, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    PRTINFO.\n000300*AUTHOR. R THORNTON\n000400*REMARKS. PRINTS ALL DATASETS CATALOGED AS USER02.INFO01 THRU\n000500*         USER02.INFO99.\n000600 ENVIRONMENT DIVISION.\n000700 CONFIGURATION SECTION.\n000800 INPUT-OUTPUT SECTION.\n000900 FILE-CONTROL.\n001000     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.\n001100     SELECT PRINT-FILE ASSIGN TO UT-S-PRINT1.\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400\n001500 FD INPUT-FILE\n001600     RECORDING MODE IS V\n001700     BLOCK CONTAINS 0 RECORDS\n001800     LABEL RECORD IS STANDARD\n001900     DATA RECORD IS INPUT-RECORD.\n002000\n002100 01  INPUT-RECORD.\n002200     05  FILLER              PIC X(256).\n002300\n002400 FD PRINT-FILE\n002500     RECORDING MODE IS F\n002600     BLOCK CONTAINS 0 RECORDS\n002700     LABEL RECORD IS STANDARD\n002800     DATA RECORD IS INPUT-RECORD.\n002900\n003000 01  PRINT-RECORD.\n003100     05  FILLER              PIC X(161).\n003200\n003300 WORKING-STORAGE SECTION.\n003400 77  FILLER PIC X(36)  VALUE\n003500     'PRTINFO WORKING STORAGE BEGINS HERE'.\n003600\n003700 01  MISCELLANEOUS-AREAS.\n003800     05 EOF-SWITCH               PIC X VALUE 'N'.\n003900        88 END-OF-INPUT          VALUE 'Y'.\n004000        88 MORE-INPUT            VALUE 'N'.\n004100     05 LAST-FILE-SWITCH         PIC X VALUE 'N'.                       00\n004200        88 NO-MORE-FILES         VALUE 'Y'.                             00\n004300        88 MORE-FILES            VALUE 'N'.                             00\n004400     05 NEW-PAGE-SWITCH          PIC X VALUE 'N'.                       00\n004500        88 NEW-PAGE-NEEDED       VALUE 'Y'.                             00\n004600     05 INFO-COUNT               PIC 99 VALUE 0.\n004700     05 FILLER REDEFINES INFO-COUNT.\n004800        10 FILLER                PIC 9.\n004900        10 LOW-DIGIT             PIC 9.\n005000     05 LINE-COUNT               PIC S99 COMP-3 VALUE +0.\n005100                                                                        00\n005200 01  WS-RECORD.\n005300     05 WS-CC                    PIC X VALUE SPACE.\n005400     05 WS-DATA                  PIC X(256).\n005500\n005600\n005700 01  ALLOCATE-DATA.\n005800     05  DDNAME                      PIC X(8).\n005900     05  DSNAME.\n005910         10 FILLER                   PIC X(11).\n005920         10 DSN-SUFFIX2.\n005930            15 DSN-SUFFIX1           PIC X.\n005940            15 FILLER                PIC X.\n005950         10 FILLER                   PIC X(31).\n006000     05  MEMBER-NAME-GENERATION      PIC X(8).\n006100     05  CURRENT-STATUS              PIC S9(4) COMP.\n006200         88  STATUS-OLD                VALUE +1.\n006300         88  STATUS-MOD                VALUE +2.\n006400         88  STATUS-NEW                VALUE +4.\n006500         88  STATUS-SHR                VALUE +8.\n006600     05  NORMAL-DISPOSITION          PIC S9(4) COMP.\n006700         88  NORM-UNCATLG              VALUE +1.\n006800         88  NORM-CATLG                VALUE +2.\n006900         88  NORM-DELETE               VALUE +4.\n007000         88  NORM-KEEP                 VALUE +8.\n007100     05  CONDITIONAL-DISPOSITION     PIC S9(4) COMP.\n007200         88  COND-UNCATLG              VALUE +1.\n007300         88  COND-CATLG                VALUE +2.\n007400         88  COND-DELETE               VALUE +4.\n007500         88  COND-KEEP                 VALUE +8.\n007600     05  UNIT-NAME                   PIC X(8).\n007700     05  UNIT-COUNT                  PIC S9(4) COMP.\n007800     05  VOLUME-SERIAL               PIC X(6)\n007900                                       OCCURS 6 TIMES.\n008000     05  LABEL-TYPE                  PIC S9(4) COMP.\n008100         88  NO-LABELS                 VALUE +1.\n008200         88  STANDARD-LABELS           VALUE +2.\n008300         88  BYPASS-LABELS             VALUE +16.\n008400     05  DATASET-SEQUENCE            PIC S9(4) COMP.\n008500     05  FREE-EQU-CLOSE-INDIC        PIC X.\n008600     05  RETENTION-PERIOD-DAYS       PIC S9(4) COMP.\n008700     05  RECORDING-MODE-SUM          PIC S9(4) COMP.\n008800         88  F-FIXED-RECORDS           VALUE +128.\n008900         88  V-VARIABLE-RECORDS        VALUE +64.\n009000         88  U-UNDEFINED-RECORDS       VALUE +192.\n009100         88  D-OR-T-ADD                VALUE +32.\n009200         88  B-BLOCKED-RECORDS-ADD     VALUE +16.\n009300         88  S-STANDARD-SPANNED-ADD    VALUE +8.\n009400         88  A-ASA-PRINT-CONTROL-ADD   VALUE +4.\n009500         88  M-MACHINE-CODE-CONTROL-ADD VALUE +2.\n009600     05  LOGICAL-RECORD-LENGTH       PIC S9(4) COMP.\n009700     05  BLOCK-LENGTH                PIC S9(4) COMP.\n009800     05  TAPE-DENSITY                PIC S9(4) COMP.\n009900         88  200-BPI                   VALUE +3.\n010000         88 556-BPI                    VALUE +67.\n010100         88 800-BPI                    VALUE +131.\n010200         88 1600-BPI                   VALUE +195.\n010300         88 6250-BPI                   VALUE +211.\n010400     05  NUMBER-BUFFERS              PIC S9(4) COMP.\n010500     05  KEY-LENGTH                  PIC S9(4) COMP.\n010600     05  DATASET-ORGANIZATION        PIC S9(4) COMP.\n010700         88 VSAM-DATASET               VALUE +8.\n010800         88 GRAPHICS-GS                VALUE +128.\n010900         88 PARTITIONED-DATASET        VALUE +512.\n011000         88 PARTITIONED-UNMOVABLE      VALUE +768.\n011100         88 DIRECT-DATASET             VALUE +8192.\n011200         88 DIRECT-UNMOVABLE           VALUE +8448.\n011300*        88 PHYSICAL-SEQUENTIAL        VALUE +16384.\n011400*        88 PHYSICAL-UNMOVABLE         VALUE +16640.\n011500     05  SPACE-TYPE                  PIC X.\n011600         88 CYLINDER-REQUEST           VALUE 'C'.\n011700         88 TRACK-REQUEST              VALUE 'T'.\n011800     05  PRIMARY-SPACE-AMOUNT        PIC S9(8) COMP.\n011900     05  SECONDARY-SPACE-AMOUNT      PIC S9(8) COMP.\n012000     05  RELEASE-SPACE-INDIC         PIC X.\n012100     05  NBR-DIRECTORY-BLOCKS        PIC S9(8) COMP.\n012200     05  EXPIRATION-DATE-CENTURY     PIC X(2).\n012300     05  EXPIRATION-DATE-YYDDD       PIC X(5).\n012400     05  AVG-BLKSIZE-FOR-SPACE       PIC S9(8) COMP.\n012500     05  SPACE-FORMAT-TYPE           PIC S9(4) COMP.\n012600         88  ALX-SPACE                 VALUE +2.\n012700         88  MXIG-SPACE                VALUE +4.\n012800         88  CONTIG-SPACE              VALUE +8.\n012900     05  SPACE-ROUNDING-INDIC        PIC X.\n013000     05  PRIVATE-VOLUME-INDIC        PIC X.\n013100     05  VOLUME-SEQUENCE-NUMBER      PIC S9(4) COMP.\n013200     05  VOLUME-COUNT                PIC S9(4) COMP.\n013300     05  DSNAME-FOR-VOL-REF          PIC X(44).\n013400     05  PARALLEL-MOUNT-INDIC        PIC X.\n013500     05  SYSOUT-PROGRAM-NAME         PIC X(8).\n013600     05  SYSOUT-FORM-NUMBER          PIC X(4).\n013700     05  SYSOUT-OUTLIM               PIC S9(8) COMP.\n013800     05  NUMBER-SYSOUT-COPIES        PIC S9(4) COMP.\n013900     05  PASSWORD-PROTECTION         PIC S9(4) COMP.\n014000         88  PASSWORD-ALL-REFERENCES   VALUE +16.\n014100         88  NO-PASSWORD-TO-READ       VALUE +48.\n014200     05  INPUT-OUTPUT-ONLY           PIC S9(4) COMP.\n014300         88  INPUT-ONLY                VALUE +64.\n014400         88  OUTPUT-ONLY               VALUE +128.\n014500     05  FCB-IMAGE-NAME              PIC X(4).\n014600     05  FCB-ALIGN-VERIFY            PIC S9(4) COMP.\n014700         88  CHECK-FCB-ALIGN           VALUE +8.\n014800         88  VERIFY-FCB                VALUE +4.\n014900     05  USE-TSO-TERMINAL-INDIC      PIC X.\n015000     05  UCS-IMAGE-NAME              PIC X(4).\n015100     05  FOLD-MODE-INDIC             PIC X.\n015200     05  CHAIN-MOUNT-VERIFY-INDIC    PIC X.\n015300     05  DCB-MODEL-DSNAME            PIC X(44).\n015400     05  DCB-DDNAME-BACKREF          PIC X(26).\n015500     05  ERROR-OPTION                PIC S9(4) COMP.\n015600         88  EROPT-EQU-T               VALUE +16.\n015700         88  EROPT-EQU-ABE             VALUE +32.\n015800         88  EROPT-EQU-SKP             VALUE +48.\n015900         88  EROPT-EQU-ACC             VALUE +128.\n016000     05  NCP-READ-WRITE-BEFORE-CHECK PIC S9(4) COMP.\n016100     05  OPTION-CODES-SUM            PIC S9(4) COMP.\n016200         88  OPTCD-EQU-R-OR-J          VALUE +1.\n016300         88  OPTCD-EQU-T               VALUE +2.\n016400         88  OPTCD-EQU-Z               VALUE +4.\n016500         88  OPTCD-EQU-A-OR-Q          VALUE +8.\n016600         88  OPTCD-EQU-F-OR-H-OR-O     VALUE +16.\n016700         88  OPTCD-EQU-C-OR-E          VALUE +32.\n016800         88  OPTCD-EQU-B-OR-U          VALUE +64.\n016900         88  OPTCD-EQU-W               VALUE +128.\n017000     05  PRINTER-SPACING              PIC S9(4) COMP.\n017100         88  NO-SPACED-PRINT            VALUE +1.\n017200         88  SINGLE-SPACED-PRINT        VALUE +9.\n017300         88  DOUBLE-SPACED-PRINT        VALUE +17.\n017400         88  TRIPLE-SPACED-PRINT        VALUE +25.\n017500     05  TRTCH-7-TRACK-TAPE           PIC S9(4) COMP.\n017600         88  NON-COMPACTION             VALUE +4.\n017700         88  COMPACTION                 VALUE +8.\n017800         88  TRTCH-EQU-C                VALUE +19.\n017900         88  TRTCH-EQU-E                VALUE +35.\n018000         88  TRTCH-EQU-ET               VALUE +43.\n018100         88  TRTCH-EQU-T                VALUE +59.\n018200     05  PASSWORD-VALUE               PIC X(32).\n018300     05  DIAGNOSTIC-TRACE-INDIC       PIC X.\n018400     05  SYSOUT-DEST-NODE-NAME        PIC X(8).\n018500     05  SYSOUT-HOLD-QUEUE-INDIC      PIC X.\n018600     05  SYSOUT-DEST-USERID           PIC X(8).\n018700     05  SYSOUT-BURSTER-STACKER       PIC S9(4) COMP.\n018800         88  BURST-EQU-YES              VALUE +2.\n018900         88  BURST-EQU-NO               VALUE +4.\n019000     05  CHARACTER-ARRANGEMENT-TABLE  PIC X(4)\n019100                                        OCCURS 4 TIMES.\n019200     05  SYSOUT-COPY-GROUP-VALUE      PIC S9(4) COMP\n019300                                        OCCURS 8 TIMES.\n019400     05  SYSOUT-FLASH-OVERLAY-NAME    PIC X(4).\n019500     05  SYSOUT-FLASH-OVERLAY-COUNT   PIC S9(4) COMP.\n019600     05  COPY-MODIFY-MODULE-NAME      PIC X(4).\n019700     05  COPY-MODULE-TRC              PIC S9(4) COMP.\n019800         88  FIRST-CHAR-ARR-TABLE       VALUE +0.\n019900         88  SECOND-CHAR-ARR-TABLE      VALUE +1.\n020000         88  THIRD-CHAR-ARR-TABLE       VALUE +2.\n020100         88  FOURTH-CHAR-ARR-TABLE      VALUE +3.\n020200     05  DEFER-MOUNT-INDIC            PIC X.\n020300     05  OUTPUT-STATEMENT-REFERENCE   PIC X(26)\n020400                                        OCCURS 8 TIMES.\n020500     05  CNTL-STATEMENT-REFERENCE     PIC X(26).\n020600     05  SMS-STORCLAS-NAME            PIC X(8).\n020700     05  SMS-MGMTCLAS-NAME            PIC X(8).\n020800     05  SMS-DATACLAS-NAME            PIC X(8).\n020900     05  SMS-RECORD-ORGANIZATION      PIC S9(4) COMP.\n021000         88  VSAM-KSDS                  VALUE +128.\n021100         88  VSAM-ESDS                  VALUE +64.\n021200         88  VSAM-RRDS                  VALUE +32.\n021300         88  VSAM-LINEAR-SPACE          VALUE +16.\n021400     05  SMS-KEY-OFFSET               PIC S9(4) COMP.\n021500     05  SMS-REFDD                    PIC X(26).\n021600     05  SMS-LIKE-DSNAME              PIC X(44).\n021700     05  SMS-AVERAGE-RECORD-UNITS     PIC S9(4) COMP.\n021800         88  IN-SINGLE-RECORDS          VALUE +128.\n021900         88  IN-THOUSAND-RECORD-UNITS   VALUE +64.\n022000         88  IN-MILLION-RECORD-UNITS    VALUE +32.\n022100     05  SMS-DSNTYPE                  PIC S9(4) COMP.\n022200         88  PDSE-LIBRARY               VALUE +128.\n022300         88  OLD-STYLE-PDS              VALUE +64.\n022400\n022500\n022600 01  ALLOCATION-RESULT.\n022700     05  ALLOCDYN-REQUEST             PIC X.\n022800         88  ALLOCATION-REQUEST         VALUE 'A'.\n022900         88  VOLSER-REQUEST             VALUE 'V'.\n023000     05  ALLOCDYN-RETURN-CODE         PIC XX.\n023100         88  SUCCESSFUL-ALLOCATION      VALUE '00'.\n023200         88  ENVIRONMENT-ERROR          VALUE '04'.\n023300         88  VALIDATION-DENIAL          VALUE '08'.\n023400         88  PARAMETER-ERROR            VALUE '12'.\n023500     05  ERROR-REASON-CODE.\n023600         10  CLASS-7-CODE             PIC X.\n023700         10  ERROR-CLASS              PIC X.\n023800             88  UNAVAILABLE-RESOURCE   VALUE '2'.\n023900             88  INVALID-PARAMETER-LIST VALUE '3'.\n024000             88  ERROR-IN-ENVIRONMENT   VALUE '4'.\n024100             88  SYSTEM-ROUTINE-ERROR   VALUE '7'.\n024200         10  SPECIFIC-ERROR-CODE      PIC XX.\n024300     05  ERROR-REASON-MESSAGE         PIC X(71).\n024400     05  INFORMATION-REASON           PIC X(4).\n024500     05  INFO-REASON-MESSAGE          PIC X(71).\n024600\n024700\n024800 PROCEDURE DIVISION.\n024900\n025000 A100-EXECUTIVE-CONTROL.                                                00\n025100     PERFORM A100-INITIALIZATION.                                       00\n025200     PERFORM B100-MAINLINE-PROCESSING                                   00\n025300         UNTIL NO-MORE-FILES.                                           00\n025400     PERFORM Z100-END-OF-PROCESSING.                                    00\n025500     GOBACK.                                                            00\n025600\n025700 A100-INITIALIZATION.\n025800     OPEN OUTPUT PRINT-FILE.\n025900                                                                        00\n026000 B100-MAINLINE-PROCESSING.                                              00\n026100     PERFORM C100-ALLOCATE-INPUT1.\n026200     IF MORE-FILES\n026300         MOVE 'Y' TO NEW-PAGE-SWITCH\n026400         OPEN INPUT INPUT-FILE                                          00\n026410         MOVE 'N' TO EOF-SWITCH\n026500         PERFORM P100-PRINT-THE-FILE UNTIL END-OF-INPUT.                00\n026600                                                                        00\n026700 C100-ALLOCATE-INPUT1.\n026800     MOVE LOW-VALUES TO ALLOCATE-DATA.\n026900     MOVE 'INPUT1' TO DDNAME.                                           00\n027000     MOVE 'USER02.INFO' TO DSNAME.\n027100     ADD 1 TO INFO-COUNT.\n027200     IF INFO-COUNT < 10\n027300         MOVE LOW-DIGIT TO DSN-SUFFIX1\n027400     ELSE\n027500         MOVE INFO-COUNT TO DSN-SUFFIX2.\n027600     MOVE +1 TO CURRENT-STATUS.\n027700     MOVE +8 TO NORMAL-DISPOSITION.\n027800     MOVE +8 TO CONDITIONAL-DISPOSITION.\n027900     IF INFO-COUNT > 0\n028000         CALL 'ALLOCDYN' USING ALLOCATE-DATA, ALLOCATION-RESULT         00\n028100         IF SUCCESSFUL-ALLOCATION                                       00\n028200             NEXT SENTENCE                                              00\n028300         ELSE                                                           00\n028400             MOVE 'Y' TO LAST-FILE-SWITCH\n028500     ELSE\n028600         MOVE 'Y' TO LAST-FILE-SWITCH.\n028800                                                                        00\n028900 P100-PRINT-THE-FILE.\n029000     PERFORM Q100-READ-FILE.                                            00\n029100     IF MORE-INPUT                                                      00\n029200         PERFORM R100-PRINT-LINE.                                       00\n029300                                                                        00\n029400 Q100-READ-FILE.                                                        00\n029500     READ INPUT-FILE INTO WS-DATA                                       00\n029600         AT END                                                         00\n029700             MOVE 'Y' TO EOF-SWITCH                                     00\n029800             CLOSE INPUT-FILE.                                          00\n029900                                                                        00\n030000 R100-PRINT-LINE.\n030100     IF NEW-PAGE-NEEDED\n030200         WRITE PRINT-RECORD FROM WS-RECORD AFTER PAGE\n030210         MOVE +0 TO LINE-COUNT\n030300         MOVE 'N' TO NEW-PAGE-SWITCH\n030400     ELSE\n030500         WRITE PRINT-RECORD FROM WS-RECORD AFTER 1.\n030600     ADD 1 TO LINE-COUNT.\n030700     IF LINE-COUNT > 58\n030800         MOVE 'Y' TO NEW-PAGE-SWITCH.\n030900                                                                        00\n031000 Z100-END-OF-PROCESSING.                                                00\n031100     CLOSE PRINT-FILE.                                                  00\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RANDMCTF": {"ttr": 7681, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\n\\x005\\x01\\x00\\x08O\\x01\\x02\\x00O\\x130\\x00\\xa1\\x00\\xa1\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.10", "flags": 0, "createdate": "2000-03-24T00:00:00", "modifydate": "2002-01-04T13:30:35", "lines": 161, "newlines": 161, "modlines": 0, "user": "BC0THOR"}, "text": "000010 IDENTIFICATION DIVISION.\n000020 PROGRAM-ID. RANDMCTF.\n000030 AUTHOR. RICHARD THORNTON\n000040 DATE-WRITTEN. MARCH, 2000.\n000050 DATE-COMPILED.\n000060       *********************************************************\n000061       * THE RANDMCTF SUBROUTINE PROVIDES RANDOM READ ACCESS TO*\n000062       * THE MASTER CODE TABLE FILE.                           *\n000066       *                                                       *\n000067       * THIS VERSION WAS REWRITTEN IN COBOL II USING A DIS-   *\n000070       * ASSEMBLY OF THE ORIGINAL LOAD MODULE AS A GUIDELINE.  *\n000071       * IT IS COMPATIBLE WITH THE COBOL AND LANGUAGE ENVIRON- *\n000072       * MENT IN USE AT TRIGON IN MARCH, 2000.                 *\n000073       *                                                       *\n000080       * THE SOURCE PROGRAM FORMERLY IN ENDEVOR WAS AN ASSEMBLY*\n000090       * LANGUAGE DISASSEMBLY OF THE LOAD MODULE IN PRODUCTION,*\n000100       * SINCE THE ORIGINAL SOURCE HAD BEEN LOST AT THE TIME OF*\n000110       * CONVERSION TO ENDEVOR.                                *\n000111       *                                                       *\n000120       * THE ORIGINAL LOAD MODULE WAS COMPILED WITH VS COBOL   *\n000130       * R2.3 AND THE OLD CAPEX OPTIMIZER.                     *\n000150       *********************************************************\n000250       * WHEN CALLED FROM A COBOL PROGRAM, THERE ARE THREE     *\n000251       * PARAMETERS TO BE PASSED. SAMPLE CODE FOR THE DATA AND *\n000252       * CALL:                                                 *\n000254       *                                                       *\n000260       *       05  IOOP              PIC X.                    *\n000280       *           88  RANDMCTF-OPEN  VALUE 'O'.               *\n000290       *           88  RANDMCTF-CLOSE VALUE 'C'.               *\n000300       *           88  RANDMCTF-READ  VALUE 'R'.               *\n000410       *       05  KEY-VALUE         PIC X(15).                *\n000441       *       05  RETURN-AREA.                                *\n000442       *           10  RANDMCTF-RETURN-CODE  PIC X.            *\n000450       *               88  RANDMCTF-GOOD-READ       VALUE ' '. *\n000451       *               88  RANDMCTF-NO-RECORD-FOUND VALUE '*'. *\n000460       *               88  RANDMCTF-ERROR           VALUE 'E'. *\n000461       *           10  MCTF-RECORD-BYTE-1    PIC X.            *\n000462       *           10  MCTF-RECORD-KEY       PIC X(15).        *\n000463       *           10  MCTF-RECORD-BYTE-1    PIC X(195).       *\n000465       *       .                                               *\n000466       *       .                                               *\n000467       *       .                                               *\n000468       *       .                                               *\n000469       *       MOVE 'O' TO IOOP.                               *\n000470       *       MOVE SPACES TO KEY-VALUE, RETURN-AREA.          *\n000471       *       CALL 'RANDMCTF' USING IOOP,                     *\n000472       *                       KEY-VALUE,                      *\n000473       *                       RETURN-AREA.                    *\n000474       *                                                       *\n000475       *       .                                               *\n000476       *       .                                               *\n000477       *       .                                               *\n000478       *       .                                               *\n000479       *       MOVE 'R' TO IOOP.                               *\n000480       *       MOVE KEY-OF-RECORD-DESIRED TO KEY-VALUE         *\n000481       *       MOVE SPACES TO RETURN-AREA.                     *\n000482       *       CALL 'RANDMCTF' USING IOOP,                     *\n000483       *                       KEY-VALUE,                      *\n000484       *                       RETURN-AREA.                    *\n000485       *       IF RANDMCTF-GOOD-READ                           *\n000486       *          GO TO PROCESS-RECORD                         *\n000487       *       ELSE                                            *\n000488       *           IF RANDMCTF-NO-RECORD-FOUND                 *\n000489       *               GO TO RECORD-NOT-FOUND                  *\n000490       *           ELSE                                        *\n000491       *               GO TO HANDLE-RANDMCTF-ERRORS.           *\n000492       *       .                                               *\n000493       *       .                                               *\n000494       *       .                                               *\n000495       *       .                                               *\n000496       *       MOVE 'C' TO IOOP.                               *\n000497       *       MOVE SPACES TO KEY-VALUE, RETURN-AREA.          *\n000498       *       CALL 'RANDMCTF' USING IOOP,                     *\n000499       *                       KEY-VALUE,                      *\n000500       *                       RETURN-AREA.                    *\n000510       *********************************************************\n000600\n000708 ENVIRONMENT DIVISION.\n000709 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000711     SELECT MASTER-CODE-TABLE-FILE ASSIGN TO UT-MCTF\n000712         ACCESS IS RANDOM\n000713         ORGANIZATION IS INDEXED\n000714         RECORD KEY IS MCTF-KEY\n000715         FILE STATUS IS WS-MCTF-STATUS-CODE.\n000716\n000717 DATA DIVISION.\n000718 FILE SECTION.\n000719 FD  MASTER-CODE-TABLE-FILE\n000721     DATA RECORD IS MCTF-RECORD.\n000722 01  MCTF-RECORD.\n000723     05  FILLER                      PIC X.\n000724     05  MCTF-KEY                    PIC X(15).\n000725     05  MCTF-DATA                   PIC X(195).\n000726\n000727 WORKING-STORAGE SECTION.\n000729 01  FILLER                          PIC X(36)\n000730         VALUE  'RANDMCTF WORKING STORAGE BEGINS HERE'.\n000732 01  WS-OPEN-SWITCH                  PIC X.\n000733 01  WS-MCTF-STATUS-CODE             PIC X(2) VALUE ZEROS.\n000734 01  WS-MCTF-RECORD.\n000735     05  WS-MCTF-DELETE-CODE         PIC X VALUE SPACES.\n000736     05  WS-MCTF-KEY                 PIC X(15) VALUE SPACES.\n000737     05  WS-MCTF-DATA                PIC X(195) VALUE SPACES.\n001091\n001100 LINKAGE SECTION.\n001110 01  PARM-IOOP                       PIC X(1).\n001111\n001112 01  PARM-MCTF-KEY                   PIC X(15).\n001115\n001120 01  PARM-MCTF-RETURN-AREA.\n001121     05  PARM-ERR                    PIC X(1).\n001122         88  PARM-GOOD-COMPLETION    VALUE ' '.\n001123         88  PARM-NO-RECORD-FOUND    VALUE '*'.\n001124         88  PARM-ERROR-COMPLETION   VALUE 'E'.\n001125     05  PARM-MCTF-RECORD.\n001126         10  PARM-MCTF-DELETE-CODE   PIC X.\n001130         10  PARM-MCTF-RECORD-KEY    PIC X(15).\n001140         10  PARM-MCTF-RECORD-DATA   PIC X(195).\n001170\n001210 PROCEDURE DIVISION  USING PARM-IOOP, PARM-MCTF-KEY,\n001220                           PARM-MCTF-RETURN-AREA.\n001230 A100-EXECUTIVE-ROUTINE.\n001241     IF PARM-IOOP = 'R'                                                 9\n001250        IF WS-OPEN-SWITCH = '1'\n001260           PERFORM B100-READ-MCTF THRU B100-EXIT\n001270        ELSE\n001280           MOVE 'E' TO PARM-ERR\n001282     ELSE\n001283         IF PARM-IOOP = 'O'\n001284             PERFORM C100-OPEN-MCTF THRU C100-EXIT\n001285         ELSE\n001286             IF PARM-IOOP = 'C'\n001287                 PERFORM D100-CLOSE-MCTF THRU D100-EXIT\n001288             ELSE\n001289                 MOVE 'E' TO PARM-ERR.\n001290     GOBACK.\n001291\n001292 B100-READ-MCTF.\n001293     MOVE PARM-MCTF-KEY TO MCTF-KEY.\n001294     READ MASTER-CODE-TABLE-FILE INTO WS-MCTF-RECORD.\n001295     IF WS-MCTF-STATUS-CODE = '00'\n001296         MOVE WS-MCTF-RECORD TO PARM-MCTF-RECORD\n001297         MOVE ' ' TO PARM-ERR\n001298         MOVE ' ' TO PARM-MCTF-DELETE-CODE\n001299     ELSE\n001300         IF WS-MCTF-STATUS-CODE = '23'\n001301             MOVE '*' TO PARM-ERR\n001302         ELSE\n001303             MOVE 'E' TO PARM-ERR.\n001304 B100-EXIT. EXIT.\n001305\n001312 C100-OPEN-MCTF.\n001313     OPEN INPUT MASTER-CODE-TABLE-FILE.\n001314     MOVE '1' TO WS-OPEN-SWITCH.\n001315 C100-EXIT. EXIT.\n001316\n001317 D100-CLOSE-MCTF.\n001318        CLOSE MASTER-CODE-TABLE-FILE.\n001319        MOVE '0' TO WS-OPEN-SWITCH.\n001320 D100-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RANDXREF": {"ttr": 7685, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00B\\x01\\x02\\x00O\\x01\\x02\\x00O\\x130\\x01-\\x01-\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2002-01-04T00:00:00", "modifydate": "2002-01-04T13:30:42", "lines": 301, "newlines": 301, "modlines": 0, "user": "BC0THOR"}, "text": "000010 IDENTIFICATION DIVISION.\n000020 PROGRAM-ID. RANDXREF.\n000030 AUTHOR. RICHARD WOMBLE.\n000040 DATE-WRITTEN. JULY, 1983.\n000050 DATE-COMPILED.\n000060 REMARKS.\n000070        PROJECT 8300510 IMPLEMENTED 09/09/83.\n000080        THIS SUBROUTINE  WILL OPEN, READ AND CLOSE THE BLUE\n000090        CROSS BLUE SHIELD CROSS REFERENCE FILE.\n000100\n000110        PROJECT 8601799 IMPLEMENTED 04/24/87 BY ANGELA HERRING.\n000120        THE PROGRAM WAS MODIFIED SO THAT IT CAN NOW OPEN THE\n000130        CROSS REFERENCE FILE FOR INQUIRY ONLY.  A NEW PARAMETER\n000140        (I) WAS ADDED TO DO THIS.\n000150\n000180        ACCESS IS RANDOM.\n000250\n000260         FUNCTIONS - (ACCEPTABLE VALUES FOR IOOP CODE IN THE\n000270                      CALL STATEMENT.)\n000280           O     OPENS FILE\n000290           C     CLOSES THE FILE\n000300           R     READS THE FILE RANDOMLY\n000310           D     DELETES THE RECORD\n000330           A     WRITES THE RECORD RANDOMLY (FOR ADDS)\n000340           I     OPENS FILE FOR INQUIRY (READ ONLY)               8601799\n000350\n000360\n000370         RETURN CODES - VALUES RETURNED IN IOOP\n000380           O     GOOD OPEN\n000390           C     GOOD CLOSE\n000400           R     GOOD READ\n000410           D     GOOD DELETE\n000430           A     GOOD WRITE\n000440\n000450         RETURN CODE - VALUES RETURNED IN ERR CODE\n000460           N     RECORD NOT FOUND\n000470          ' '    GOOD ENTRY\n000480           E     INVALID KEY STRUCTURE\n000490           I     INVALID IOOP\n000500           D     DUPLICATE KEY (FOR ADDS).\nY2000+*+*************************************************************** Y2000+\nY2000+*+  EDITED BY CGA/ARC RENOVATOR RENOALL V6.05 ON 1998-5-21 18:18  Y2000+\nY2000+*+*************************************************************** Y2000+\n000510\n000511* 945026  PROGRAM RE-COMPILED AND RE-LINKED BY ANN JOHNSTON 09/01/94\n000512*         FOR NCALL. WAS PICKING UP OLD VSCOB SUBROUTINES NEED COB2\n000513*         SUBROUTINES.  THIS WAS CAUSING PROBLEMS WITH INQUIRIES.\n000514*\n000520\n000530 ENVIRONMENT DIVISION.\n000540 INPUT-OUTPUT SECTION.\n000550 FILE-CONTROL.\n000560     SELECT CROSS-REFERENCE  ASSIGN TO UT-MMXREF\n000570         ACCESS IS RANDOM\n000580         ORGANIZATION IS INDEXED\n000590         RECORD KEY IS CROSS-REFERENCE-KEY\n000600         FILE STATUS IS VSAM-FILE-STATUS.\n000610\n000620 DATA DIVISION.\n000630 FILE SECTION.\n000640 FD  CROSS-REFERENCE\n000650     LABEL RECORDS ARE STANDARD\n000660     DATA RECORDS IS CROSS-REF-REC.\n000670 01  CROSS-REF-REC  COPY BCBSXREF.\n000680\n000690 WORKING-STORAGE SECTION.\n000700 77  FILLER                          PIC X(36)\n000710         VALUE  'RANDXREF WORKING STORAGE BEGINS HERE'.\n000720 77  COMPILE-DATE                    PIC X(20).\n000730 01  VSAM-ERROR-DATA.\n000740     05 VSAM-FILE-STATUS             PIC XX    VALUE 'ZZ'.\n000750     05 VSAM-ERROR-MSG               PIC X(45).\n000760     05 MSG-02                       PIC X(45) VALUE\n000770        'DUPLICATE KEY AND DUPLICATES SPECIFIED'.\n000780     05 MSG-10                       PIC X(45) VALUE\n000790        'AT END, NO NEXT LOGICAL RECORD'.\n000800     05 MSG-20                       PIC X(45) VALUE\n000810        'INVALID KEY'.\n000820     05 MSG-21                       PIC X(45) VALUE\n000830        'INVALID KEY, SEQUENCE ERROR'.\n000840     05 MSG-22                       PIC X(45) VALUE\n000850        'DUPLICATE KEY AND NO DUPLICATES ALLOWED'.\n000860     05 MSG-23                       PIC X(45) VALUE\n000870        'NO RECORD FOUND'.\n000880     05 MSG-24                       PIC X(45) VALUE\n000890        'BOUNDARY VIOLATION INDEXED OR RELATIVE FILE'.\n000900     05 MSG-30                       PIC X(45) VALUE\n000910        'DATA CHECK, PARITY CHECK, TRANSMISSION ERROR'.\n000920     05 MSG-34                       PIC X(45) VALUE\n000930        'BOUNDARY VIOLATION SEQUENTIAL FILE'.\n000940     05 MSG-90                       PIC X(45) VALUE\n000950        'NO FURTHER INFORMATION'.\n000960     05 MSG-91                       PIC X(45) VALUE\n000970        'PASSWORD FAILURE'.\n000980     05 MSG-92                       PIC X(45) VALUE\n000990        'LOGIC ERROR'.\n001000     05 MSG-93                       PIC X(45) VALUE\n001010        'RESOURCE NOT AVAILABLE'.\n001020     05 MSG-94                       PIC X(45) VALUE\n001030        'NO CURRENT REC POINTER FOR SEQ REQUEST'.\n001040     05 MSG-95                       PIC X(45) VALUE\n001050        'INVALID OR INCOMPLETE FILE INFORMATION'.\n001060     05 MSG-96                       PIC X(45) VALUE\n001070        'NO FILE IDENTIFICATION'.\n001080     05 MSG-97                       PIC X(45) VALUE\n001090        'OPEN SUCCESSFUL, FILE INTEGRITY VERIFIED'.\n001100 LINKAGE SECTION.\n001110 01  PARM-IOOP                   PIC X(1).\n001120 01  PARM-ERR                    PIC X(1).\n001150 01  PARM-XREF-DATA              PIC X(30).\n001160 01  PARM-XREF-KEY               PIC X(18).\n001170\n001180\n001190\n001200\n001210 PROCEDURE DIVISION  USING PARM-IOOP PARM-ERR PARM-XREF-DATA\n001220       PARM-XREF-KEY.\n001230     MOVE WHEN-COMPILED TO COMPILE-DATE.\n001240*****IF PARM-IOOP = 'O' OR 'C' OR 'R' OR 'D' OR 'A'***************8601799\n001241     IF PARM-IOOP = 'O' OR 'C' OR 'R' OR 'D' OR 'A' OR 'I'        8601799\n001250        NEXT SENTENCE\n001260     ELSE\n001270        MOVE ZERO TO VSAM-FILE-STATUS\n001280        MOVE 'I' TO PARM-ERR.\n001290     IF PARM-IOOP = 'O'\n001300        PERFORM A100-OPEN-FILE THRU A100-EXIT.\n001310     IF PARM-IOOP = 'C'\n001320        PERFORM A200-CLOSE-FILE THRU A200-EXIT.\n001330     IF PARM-IOOP = 'R'\n001340        PERFORM A300-READ-REC THRU A300-EXIT.\n001350     IF PARM-IOOP = 'D'\n001360        PERFORM A400-DELETE-REC THRU A400-EXIT.\n001390     IF PARM-IOOP = 'A'\n001400        PERFORM A500-WRITE-REC THRU A500-EXIT.\n001401     IF PARM-IOOP = 'I'                                           8601799\n001402        PERFORM A600-INQUIRY THRU A600-EXIT.                      8601799\n001410     IF VSAM-FILE-STATUS = ZERO\n001420        NEXT SENTENCE\n001430     ELSE\n001440        DISPLAY 'VSAM ERROR CODE...' VSAM-FILE-STATUS\n001450        DISPLAY 'CODE EXPLANATION..' VSAM-ERROR-MSG\n001460        DISPLAY ' '\n001470        CALL 'COBABEND'.\n001480     GOBACK.\n001490 A100-OPEN-FILE SECTION.\n001500     OPEN I-O CROSS-REFERENCE.\n001510     IF VSAM-FILE-STATUS = ZERO\n001520        GO TO A100-EXIT.\n001530     IF VSAM-FILE-STATUS = '97'\n001540        MOVE ZERO TO VSAM-FILE-STATUS\n001550        GO TO A100-EXIT.\n001560     PERFORM A9999-VSAM-ERROR-RTN THRU A9999-VSAM-EXIT.\n001570 A100-EXIT.\n001580     EXIT.\n001590     SKIP3\n001600 A200-CLOSE-FILE SECTION.\n001610     CLOSE CROSS-REFERENCE.\n001620     IF VSAM-FILE-STATUS = ZERO\n001630        GO TO A200-EXIT.\n001640     PERFORM A9999-VSAM-ERROR-RTN THRU A9999-VSAM-EXIT.\n001650 A200-EXIT.\n001660     EXIT.\n001670     SKIP3\n001680 A300-READ-REC SECTION.\n001690     MOVE ' ' TO PARM-ERR.\n001700     MOVE PARM-XREF-KEY TO CROSS-REFERENCE-KEY.\n001710     READ CROSS-REFERENCE.\n001720     IF VSAM-FILE-STATUS = ZERO\n001730        MOVE CROSS-REF-REC TO PARM-XREF-DATA\n001740        GO TO A300-EXIT.\n001750     IF VSAM-FILE-STATUS = '23'\n001760        MOVE 'N' TO PARM-ERR\n001770        MOVE ZERO TO VSAM-FILE-STATUS\n001780        GO TO A300-EXIT.\n001790     IF VSAM-FILE-STATUS = '20'\n001800        MOVE 'E' TO PARM-ERR\n001810        MOVE ZERO TO VSAM-FILE-STATUS\n001820        GO TO A300-EXIT.\n001830     PERFORM A9999-VSAM-ERROR-RTN THRU A9999-VSAM-EXIT.\n001840 A300-EXIT.\n001850     EXIT.\n001860     SKIP3\n001870 A400-DELETE-REC SECTION.\n001880     MOVE ' ' TO PARM-ERR.\n001890     MOVE PARM-XREF-KEY TO CROSS-REFERENCE-KEY.\n001900     DELETE CROSS-REFERENCE RECORD.\n001910     IF VSAM-FILE-STATUS = ZERO\n001920        GO TO A400-EXIT.\n001930     IF VSAM-FILE-STATUS = '23'\n001940        MOVE 'N' TO PARM-ERR\n001950        MOVE ZERO TO VSAM-FILE-STATUS\n001960        GO TO A400-EXIT.\n001970     IF VSAM-FILE-STATUS = '20'\n001980        MOVE 'E' TO PARM-ERR\n001990        MOVE ZERO TO VSAM-FILE-STATUS\n002000        GO TO A400-EXIT.\n002010     PERFORM A9999-VSAM-ERROR-RTN THRU A9999-VSAM-EXIT.\n002020 A400-EXIT.\n002030     EXIT.\n002040     SKIP3\n002240 A500-WRITE-REC SECTION.\n002250     MOVE ' ' TO PARM-ERR.\n002260     MOVE PARM-XREF-KEY TO CROSS-REFERENCE-KEY.\n002270     READ CROSS-REFERENCE.\n002280     IF VSAM-FILE-STATUS = '23'\n002290        PERFORM A505-WRITE-REC THRU A505-EXIT\n002300     ELSE\n002310        MOVE 'D' TO PARM-ERR\n002320        MOVE ZERO TO VSAM-FILE-STATUS.\n002330 A500-EXIT.\n002340     EXIT.\n002350 A505-WRITE-REC.\n002360     MOVE ' ' TO PARM-ERR.\n002370     MOVE PARM-XREF-KEY TO CROSS-REFERENCE-KEY.\n002380     MOVE PARM-XREF-DATA TO CROSS-REF-REC.\n002390     WRITE CROSS-REF-REC.\n002400     IF VSAM-FILE-STATUS = ZEROS OR '02'\n002410         MOVE ZERO TO VSAM-FILE-STATUS\n002420         GO TO A505-EXIT.\n002430     IF VSAM-FILE-STATUS = '20'\n002440         MOVE 'E' TO PARM-ERR\n002450         MOVE ZERO TO VSAM-FILE-STATUS\n002460         GO TO A505-EXIT.\n002470     IF VSAM-FILE-STATUS = '22'\n002480         MOVE 'D' TO PARM-ERR\n002490         MOVE ZERO TO VSAM-FILE-STATUS\n002500         GO TO A505-EXIT.\n002510     IF VSAM-FILE-STATUS = '23'\n002520         MOVE 'N' TO PARM-ERR\n002530         MOVE ZERO TO VSAM-FILE-STATUS\n002540         GO TO A505-EXIT.\n002550     PERFORM A9999-VSAM-ERROR-RTN THRU A9999-VSAM-EXIT.\n002560 A505-EXIT.\n002570     EXIT.\n002571\n002572 A600-INQUIRY.                                                    8601799\n002573     OPEN INPUT CROSS-REFERENCE.                                  8601799\n002574     IF VSAM-FILE-STATUS = ZERO                                   8601799\n002575        GO TO A600-EXIT                                           8601799\n002576     ELSE                                                         8601799\n002577        IF VSAM-FILE-STATUS = '97'                                8601799\n002578           MOVE ZERO TO VSAM-FILE-STATUS                          8601799\n002579           GO TO A600-EXIT.                                       8601799\n002580     PERFORM A9999-VSAM-ERROR-RTN THRU A9999-VSAM-EXIT.           8601799\n002581 A600-EXIT.                                                       8601799\n002582     EXIT.                                                        8601799\n002584     SKIP3\n002590 A9999-VSAM-ERROR-RTN SECTION.\n002600     IF VSAM-FILE-STATUS = '02'\n002610        MOVE MSG-02 TO VSAM-ERROR-MSG\n002620        GO TO A9999-VSAM-EXIT.\n002630     IF VSAM-FILE-STATUS = '10'\n002640        MOVE MSG-10 TO VSAM-ERROR-MSG\n002650        GO TO A9999-VSAM-EXIT.\n002660     IF VSAM-FILE-STATUS = '20'\n002670        MOVE MSG-20 TO VSAM-ERROR-MSG\n002680        GO TO A9999-VSAM-EXIT.\n002690     IF VSAM-FILE-STATUS = '21'\n002700        MOVE MSG-21 TO VSAM-ERROR-MSG\n002710        GO TO A9999-VSAM-EXIT.\n002720     IF VSAM-FILE-STATUS = '22'\n002730        MOVE MSG-22 TO VSAM-ERROR-MSG\n002740        GO TO A9999-VSAM-EXIT.\n002750     IF VSAM-FILE-STATUS = '23'\n002760        MOVE MSG-23 TO VSAM-ERROR-MSG\n002770        GO TO A9999-VSAM-EXIT.\n002780     IF VSAM-FILE-STATUS = '24'\n002790        MOVE MSG-24 TO VSAM-ERROR-MSG\n002800        GO TO A9999-VSAM-EXIT.\n002810     IF VSAM-FILE-STATUS = '30'\n002820        MOVE MSG-30 TO VSAM-ERROR-MSG\n002830        GO TO A9999-VSAM-EXIT.\n002840     IF VSAM-FILE-STATUS = '34'\n002850        MOVE MSG-34 TO VSAM-ERROR-MSG\n002860        GO TO A9999-VSAM-EXIT.\n002870     IF VSAM-FILE-STATUS = '90'\n002880        MOVE MSG-90 TO VSAM-ERROR-MSG\n002890        GO TO A9999-VSAM-EXIT.\n002900     IF VSAM-FILE-STATUS = '91'\n002910        MOVE MSG-91 TO VSAM-ERROR-MSG\n002920        GO TO A9999-VSAM-EXIT.\n002930     IF VSAM-FILE-STATUS = '92'\n002940        MOVE MSG-92 TO VSAM-ERROR-MSG\n002950        GO TO A9999-VSAM-EXIT.\n002960     IF VSAM-FILE-STATUS = '93'\n002970        MOVE MSG-93 TO VSAM-ERROR-MSG\n002980        GO TO A9999-VSAM-EXIT.\n002990     IF VSAM-FILE-STATUS = '94'\n003000        MOVE MSG-94 TO VSAM-ERROR-MSG\n003010        GO TO A9999-VSAM-EXIT.\n003020     IF VSAM-FILE-STATUS = '95'\n003030        MOVE MSG-95 TO VSAM-ERROR-MSG\n003040        GO TO A9999-VSAM-EXIT.\n003050     IF VSAM-FILE-STATUS = '96'\n003060        MOVE MSG-96 TO VSAM-ERROR-MSG\n003070        GO TO A9999-VSAM-EXIT.\n003080     IF VSAM-FILE-STATUS = '97'\n003090        MOVE MSG-97 TO VSAM-ERROR-MSG\n003100        GO TO A9999-VSAM-EXIT.\n003110 A9999-VSAM-EXIT.\n003120     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "READCVT": {"ttr": 7691, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x009\\x00\\x93\\x07\\x0f\\x00\\x93\\x07\\x0f\\x145\\x006\\x006\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "1993-03-11T14:35:39", "lines": 54, "newlines": 54, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  READCVT.\n000300 AUTHOR.  R THORNTON.\n000400 INSTALLATION.  BLUE CROSS AND BLUE SHIELD OF VIRGINIA.\n000500 DATE-WRITTEN.  NOV, 1987.\n000600 DATE-COMPILED.\n000700****************************************************************\n000800* THIS SUBROUTINE IS USED WITH THE COBOL MAIN PROGRAM CTLBLOX2 *\n000900* TO TEST THE ABILITY OF A COBOL PROGRAM TO ACCESS NORMALLY    *\n001000* INACCESSIBLE MEMORY LOCATIONS. THE CALLING PROGRAM PASSES    *\n001100* POINTERS TO THE CVT AND TO A DATE FIELD. THIS SUBROUTINE WILL*\n001200* MOVE THE SYSTEM DATE FROM THE CVT TO THE CALLER'S DATE FIELD.*\n001300*                                                              *\n001400* THE FIRST PART OF THE CVT IS DEFINED IN WORKING STORAGE SO   *\n001500* THAT IT CAN BE REFERENCED BY FIELD NAME BY THIS SUBPROGRAM.  *\n001600* THE CVT IS THE PRINCIPAL OPERATING SYSTEM CONTROL BLOCK,     *\n001700* CONTAINING POINTERS TO OTHER MAJOR CONTROL BLOCKS. BY USE OF *\n001800* THE DEBUG HANDBOOKS, A COBOL PROGRAM SHOULD BE ABLE TO ACCESS*\n001900* JUST ABOUT ANYTHING AVAILABLE IN MEMORY.                     *\n002000****************************************************************\n002100 ENVIRONMENT DIVISION.\n002200 DATA DIVISION.\n002300 WORKING-STORAGE SECTION.\n002400 77  FILLER                     PIC X(36)  VALUE\n002500     'READCVT WORKING STORAGE BEGINS HERE'.\n002600 LINKAGE SECTION.\n002700 01  CVT-AREA.\n002800     05  CVTTCBP                PIC S9(8) COMP.\n002900     05  CVT0EF00               PIC S9(8) COMP.\n003000     05  CVTLINK                PIC S9(8) COMP.\n003100     05  CVTAUSCB               PIC S9(8) COMP.\n003200     05  CVTBUF                 PIC S9(8) COMP.\n003300     05  CVTXAPG                PIC S9(8) COMP.\n003400     05  CVT0VL00               PIC S9(8) COMP.\n003500     05  CVTPCNVT               PIC S9(8) COMP.\n003600     05  CVTPRLTV               PIC S9(8) COMP.\n003700     05  CVTILK1                PIC S9(8) COMP.\n003800     05  CVTILK2                PIC S9(8) COMP.\n003900     05  CVTXTLER               PIC S9(8) COMP.\n004000     05  CVTSYSAD               PIC S9(8) COMP.\n004100     05  CVTBTERM               PIC S9(8) COMP.\n004200     05  CVTDATE                PIC S9(7) COMP-3.\n004300     05  CVTMSLT                PIC S9(8) COMP.\n004400     05  CVTZDTAB               PIC S9(8) COMP.\n004500     05  CVTXITP                PIC S9(8) COMP.\n004600     05  REST-OF-CVT            PIC X(1188).\n004700 01  DATE-RETURN                PIC S9(7) COMP-3.\n004800 PROCEDURE DIVISION USING CVT-AREA,\n004900                          DATE-RETURN.\n005000****************************************************************\n005100* MOVE THE SYSTEM DATE FROM THE CVT TO THE CALLER'S DATE FIELD.*\n005200****************************************************************\n005300     MOVE CVTDATE TO DATE-RETURN.\n005400     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "RECDEF": {"ttr": 7693, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00V\\x00\\x92%O\\x00\\x93\\x07\\x0f\\x146\\x00%\\x00%\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1992-09-10T00:00:00", "modifydate": "1993-03-11T14:36:56", "lines": 37, "newlines": 37, "modlines": 0, "user": "USER02"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "REFORMAT": {"ttr": 7937, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00H\\x01\\x000\\x1f\\x01\\x000\\x1f\\x132\\x00\\xfb\\x00\\xfb\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-10-27T00:00:00", "modifydate": "2000-10-27T13:32:48", "lines": 251, "newlines": 251, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.                                                     09/18/77\n000200 PROGRAM-ID. REFORMAT.                                            REFORMAT\n000300 DATE-COMPILED.                                                      LV001\n000400 AUTHOR. R THORNTON\n000500*********************************************************\n000600* THIS PROGRAM USES A FIXED LENGTH 80-BYTE FILE OF INPUT*\n000700* RECORDS TO PRODUCE A FIXED LENGTH OUTPUT FILE WHOSE   *\n000800* RECORDS MAY BE FROM 81 TO 300 BYTES IN LENGTH, AS     *\n000900* SPECIFIED IN THE EXEC STATEMENT PARM FIELD. INPUT     *\n001000* RECORDS ARE READ AND CONCATENATED TO FORM THE OUTPUT  *\n001100* RECORDS. BECAUSE COBOL REQUIRES LENGTH TO BE SPECIFIED*\n001200* AT THE FD LEVEL, AN ASSEMBLER SUBROUTINE CALLED       *\n001300* WRITEKL IS CALLED TO WRITE THE RECORDS USING THE LRECL*\n001400* SPECIFIED IN THE OUTPUT1 DD STATEMENT.                *\n001500*                                                       *\n001600* THE EXEC STATEMENT PARM FIELD CONTAINS A 12-CHARACTER *\n001700* STRING: BYTES 1-8 ARE THE JOB NAME, WHICH IS PRINTED  *\n001800* IN THE HEADINGS OF THE OUTPUT2 AND OUTPUT3 REPORT     *\n001900* FILES. BYTES 9-11 ARE EXPECTED TO BE THE LRECL FOR THE*\n002000* OUTPUT1 FILE, HOWEVER THIS IS NEVER USED AFTER TESTING*\n002100* FOR A NUMERIC VALUE, AND THE ACTUAL LRECL FOR THE     *\n002200* OUTPUT1 FILE IS TAKEN FROM THE OUTPUT1 DD STATEMENT.  *\n002300* BYTE 12 OF THE PARM SPECIFIES THE NUMBER OF INPUT1    *\n002400* RECORDS REQUIRED TO BUILD AN OUTPUT1 RECORD. AN       *\n002500* EXAMPLE OF THE EXEC STATEMENT PARM IS:                *\n002600*     PARM=DVC8910Y1933                                 *\n002700* WHICH SHOWS JOBNAME IS DVC8910Y, OUTPUT1 LRECL IS     *\n002800* EXPECTED TO BE 193 BYTES, AND 3 INPUT1 RECORDS ARE    *\n002900* REQUIRED TO BUILD 1 OUTPUT1 RECORD.                   *\n003000*                                                       *\n003100* DURING THE CONVERSION TO COBOL390, SEVERAL POTENTIAL  *\n003200* PROBLEMS WERE NOTED, BUT LEFT AS-IS:                  *\n003300* 1. EXEC STATEMENT PARM FIELD LRECL FIELD IS MISLEADING*\n003400*    SINCE IT IS NOT USED, AND MAY LEAD THE USER TO     *\n003500*    BELIEVE THE OUTPUT1 FILE LRECL IS THAT LENGTH, WHEN*\n003600*    ONLY THE OUTPUT1 DD STATEMENT LRECL CONTROLS THIS. *\n003700* 2. THE EXEC STATEMENT PARM FIELD NUMBER OF INPUT      *\n003800*    RECORDS FIELD IS ONE BYTE THAT IS TESTED FOR NUM-  *\n003900*    ERICS, BUT NOT FOR RANGE. SINCE THE OUTPUT RECORD  *\n004000*    AREA IS HARD-CODED IN WORKING-STORAGE AS 300 BYTES,*\n004100*    ANY VALUE OVER 3 WILL RESULT IN OVERLAY OF THE     *\n004200*    FOLLOWING DATA, WHICH WOULD RESULT IN ABEND OR     *\n004300*    INCORRECT OUTPUT.                                  *\n004400* 3. OUTPUT RECORD FORMATTING SEEMS INEFFICIENT, AS IT  *\n004500*    INVOLVES BYTE-BY-BYTE MOVES IN A PERFORM LOOP,     *\n004600*    WHEN SIMPLE 80-BYTE MOVES WOULD SUFFICE IF THE     *\n004700*    RECORD AREAS ARE PROPERLY DEFINED.                 *\n004800* 4. NO ERROR INDICATION IS RETURNED BY THE WRITEKL SUB-*\n004900*    ROUTINE, SO THIS PROGRAM HAS NO WAY TO TELL WHETHER*\n005000*    THE CALL WAS SUCCESSFUL. IN FACT, IF THE REQUEST   *\n005100*    CODE SENT IS OTHER THAN \"C\" OR \"W\", WRITEKL DOES   *\n005200*    NOTHING, AND RETURNS AS THOUGH IT HAD ACCOMPLISHED *\n005300*    THE REQUESTED TASK.                                *\n005400*                                                       *\n005500*********************************************************\n005600*              *** MAINTENANCE ***                      *\n005700*********************************************************\n005800* ADDED DOCUMENTATION COMMENTS AND UPGRADED TO COBOL390 *\n005900* IN OCTOBER, 2000. NOTE THAT THIS CONVERSION REQUIRES  *\n006000* THAT THE EXECUTION-TIME STEPLIB CONTAIN CEE.SCEERUN.  *\n006100* ALSO, SYS1.COB2LIB MUST BE REMOVED FROM STEPLIB IF IT *\n006200* IS CURRENTLY USED.                                    *\n006300*********************************************************\n006400 ENVIRONMENT DIVISION.\n006500 INPUT-OUTPUT SECTION.\n006600 FILE-CONTROL.\n006700     SELECT KEY-DISC-INPUT               ASSIGN TO UT-S-INPUT1.\n006800     SELECT CONTROL-MSGS                 ASSIGN TO UT-S-OUTPUT2.\n006900     SELECT KEY-DISC-OPERATOR-MSGS       ASSIGN TO UT-S-OUTPUT3.\n007000 DATA DIVISION.\n007100 FILE SECTION.\n007200 FD  KEY-DISC-INPUT\n007300     RECORDING MODE IS F\n007400     LABEL RECORDS ARE STANDARD\n007500     RECORD CONTAINS 80 CHARACTERS\n007600     BLOCK CONTAINS 0 RECORDS.\n007700 01  KEY-DISC-INPUT-RECORD.\n007800     05  KEY-DISC-INPUT-REC            PIC   X OCCURS  80  TIMES.\n007900 FD  CONTROL-MSGS\n008000     RECORDING MODE IS F\n008100     LABEL RECORDS ARE STANDARD\n008200     RECORD CONTAINS 133 CHARACTERS\n008300     BLOCK CONTAINS 0 RECORDS.\n008400 01  CONTROL-MSGS-REC.\n008500     05  MSG-CC1                       PIC   9.\n008600     05  FILLER                        PIC   X(132).\n008700 FD  KEY-DISC-OPERATOR-MSGS\n008800     RECORDING MODE IS F\n008900     LABEL RECORDS ARE STANDARD\n009000     RECORD CONTAINS 133 CHARACTERS\n009100     BLOCK CONTAINS 0 RECORDS.\n009200 01  KEY-DISC-OPERATOR-MSGS-REC.\n009300     05  MSG-CC2                       PIC   9.\n009400     05  FILLER                        PIC   X(132).\n009500 WORKING-STORAGE SECTION.\n009600 77  FILLER                        PIC  X(36)   VALUE\n009700         'REFORMAT WORKING STORAGE BEGINS HERE'.\n009800 77  COMPILE-DATE                 PIC  X(20)   VALUE SPACES.\n009900 01  ACCEPT-DATE.\n010000     05 ACCEPT-YEAR               PIC XX.\n010100     05 ACCEPT-MONTH              PIC XX.\n010200     05 ACCEPT-DAY                PIC XX.\n010300 01  COUNTERS.\n010400     05  PAGE-NO                  PIC  S9(3)   VALUE ZERO COMP-3.\n010500     05  INDX                     PIC  S9(5)   VALUE ZERO COMP.\n010600     05  INDX2                    PIC  S9(5)   VALUE ZERO COMP.\n010700     05  BYTE-MAX                 PIC  S9(5)   VALUE ZERO COMP.\n010800     05  INPUT-REC-COUNT          PIC  S9(5)   VALUE ZERO COMP-3.\n010900     05  OUTPUT-REC-COUNT         PIC  S9(5)   VALUE ZERO COMP-3.\n011000 01  KEY-DISC-OUTPUT-RECORD.\n011100     05  KEY-DISC-OUTPUT-REC      PIC  X  OCCURS  300  TIMES.\n011200 01  ERROR-MESSAGES.\n011300     05  ERROR-MSG1               PIC  X(59)   VALUE\n011400           'INVALID OUTPUT RECORD LENGTH IN PARM FIELD --- JOB CAN\n011500-        'CELED'.\n011600     05  ERROR-MSG2               PIC  X(59)   VALUE\n011700           'INVALID NUMBER OF INPUT RECS IN PARM FIELD --- JOB CAN\n011800-        'CELED'.\n011900 01  HEADING-1.\n012000     05  FILLER                   PIC  X      VALUE '1'.\n012100     05  FILLER                   PIC  X(15)  VALUE\n012200         'CURRENT DATE = '.\n012300     05  PRINT-DATE.\n012400         10 PRINT-MONTH           PIC XX.\n012500         10 FILLER                PIC X VALUE '/'.\n012600         10 PRINT-DAY             PIC XX.\n012700         10 FILLER                PIC X VALUE '/'.\n012800         10 PRINT-YEAR            PIC XX.\n012900     05  FILLER                   PIC  X(42)  VALUE SPACES.\n013000     05  FILLER                   PIC  X(12)  VALUE\n013100         'RJE REFORMAT'.\n013200     05  FILLER                   PIC  X(44)  VALUE SPACES.\n013300     05  FILLER                   PIC  X(8)   VALUE\n013400         'PAGE NO '.\n013500     05  PRINT-PAGE-NO            PIC  ZZ9.\n013600 01  MESSAGE-LINE.\n013700     05  FILLER                   PIC  X      VALUE '2'.\n013800     05  FILLER                   PIC  X(9)   VALUE '$$$$$    '.\n013900     05  PRINT-PROGRAM-NAME       PIC  X(8)   VALUE SPACES.\n014000     05  FILLER                   PIC  X(30)  VALUE\n014100         ' HAS COMPLETED PROCESSING --- '.\n014200     05  PRINT-INPUT-REC-COUNT    PIC  ZZZZ9.\n014300     05  FILLER                   PIC  X(24)  VALUE\n014400         ' INPUT RECORDS READ     '.\n014500     05  PRINT-OUTPUT-REC-COUNT   PIC  ZZZZ9.\n014600     05  FILLER                   PIC  X(24)  VALUE\n014700         ' OUTPUT RECORDS WRITTEN '.\n014800     05  FILLER                   PIC  X(27)  VALUE SPACES.\n014900 01  SWITCHES.\n015000     05  EOF-INPUT                PIC  X      VALUE SPACE.\n015100         88  NO-MORE-INPUT    VALUE '1'.\n015200     05  IOOP                     PIC  X      VALUE SPACE.\n015300 01  ERROR-LINE.\n015400     05  FILLER                   PIC  X       VALUE '-'.\n015500     05  PRINT-ERR-MSG            PIC  X(59)   VALUE SPACES.\n015600     05  FILLER                   PIC  X(73)   VALUE SPACES.\n015700*\n015800 LINKAGE SECTION.\n015900 01  JCL-PARAMETERS.\n016000     05  FILLER                   PIC  9(2)    COMP.\n016100     05  JCL-PROGRAM-NAME         PIC  X(8).\n016200     05  JCL-OUTPUT-REC-LENGTH    PIC  9(3).\n016300     05  JCL-NO-INPUT-RECS        PIC  9.\n016400*\n016500 PROCEDURE DIVISION USING JCL-PARAMETERS.\n016600     MOVE WHEN-COMPILED TO COMPILE-DATE.\n016700     OPEN INPUT  KEY-DISC-INPUT\n016800          OUTPUT CONTROL-MSGS\n016900                 KEY-DISC-OPERATOR-MSGS.\n017000     ACCEPT ACCEPT-DATE FROM DATE.\n017100     MOVE ACCEPT-YEAR TO PRINT-YEAR.\n017200     MOVE ACCEPT-MONTH TO PRINT-MONTH.\n017300     MOVE ACCEPT-DAY TO PRINT-DAY.\n017400     PERFORM T100-PRINT-HEADINGS.\n017500     IF JCL-OUTPUT-REC-LENGTH NUMERIC\n017600     THEN NEXT SENTENCE\n017700     ELSE\n017800         MOVE ERROR-MSG1 TO PRINT-ERR-MSG\n017900         PERFORM Z100-ERROR-ROUTINE\n018000         STOP RUN.\n018100     IF JCL-NO-INPUT-RECS NUMERIC\n018200     THEN NEXT SENTENCE\n018300     ELSE\n018400         MOVE ERROR-MSG2 TO PRINT-ERR-MSG\n018500         PERFORM Z100-ERROR-ROUTINE\n018600         STOP RUN.\n018700     PERFORM A100-CREATE-KEY-DISC-RECS UNTIL NO-MORE-INPUT.\n018800     PERFORM S100-CONTROL-MESSAGE-FORMATING.\n018900     CLOSE KEY-DISC-INPUT\n019000           CONTROL-MSGS\n019100           KEY-DISC-OPERATOR-MSGS.\n019200     MOVE 'C' TO IOOP.\n019300     CALL 'WRITEKL' USING IOOP, KEY-DISC-OUTPUT-RECORD.\n019400     STOP RUN.\n019500*\n019600 A100-CREATE-KEY-DISC-RECS.\n019700     MOVE ZERO TO BYTE-MAX.\n019800     PERFORM D100-READ-INPUT JCL-NO-INPUT-RECS TIMES.\n019900     IF NO-MORE-INPUT\n020000     THEN NEXT SENTENCE\n020100     ELSE\n020200         PERFORM G100-WRITE-OUTPUT.\n020300*\n020400 D100-READ-INPUT.\n020500     IF NO-MORE-INPUT\n020600     THEN NEXT SENTENCE\n020700     ELSE\n020800         READ KEY-DISC-INPUT AT END MOVE '1' TO EOF-INPUT.\n020900     IF NO-MORE-INPUT\n021000     THEN NEXT SENTENCE\n021100     ELSE\n021200         ADD 1 TO INPUT-REC-COUNT\n021300         PERFORM F100-CREATE-OUTPUT-REC\n021400            VARYING INDX FROM 1 BY 1 UNTIL INDX IS GREATER THAN 80\n021500         ADD 80 TO BYTE-MAX.\n021600*\n021700 F100-CREATE-OUTPUT-REC.\n021800     ADD INDX TO BYTE-MAX GIVING INDX2.\n021900     MOVE KEY-DISC-INPUT-REC (INDX) TO\n022000        KEY-DISC-OUTPUT-REC (INDX2).\n022100*\n022200 G100-WRITE-OUTPUT.\n022300     MOVE 'W' TO IOOP.\n022400     CALL 'WRITEKL' USING IOOP, KEY-DISC-OUTPUT-RECORD.\n022500     ADD 1 TO OUTPUT-REC-COUNT.\n022600     PERFORM H100-FILL-OUTPUT-WITH-SPACES VARYING INDX FROM\n022700         1 BY 1 UNTIL INDX IS GREATER THAN 300.\n022800*\n022900 H100-FILL-OUTPUT-WITH-SPACES.\n023000     MOVE SPACE TO KEY-DISC-OUTPUT-REC (INDX).\n023100*\n023200 S100-CONTROL-MESSAGE-FORMATING.\n023300     MOVE JCL-PROGRAM-NAME TO PRINT-PROGRAM-NAME.\n023400     MOVE INPUT-REC-COUNT TO PRINT-INPUT-REC-COUNT.\n023500     MOVE OUTPUT-REC-COUNT TO PRINT-OUTPUT-REC-COUNT.\n023600     WRITE CONTROL-MSGS-REC FROM MESSAGE-LINE\n023700         AFTER ADVANCING MSG-CC1.\n023800     WRITE KEY-DISC-OPERATOR-MSGS-REC FROM MESSAGE-LINE\n023900         AFTER ADVANCING MSG-CC2.\n024000*\n024100 T100-PRINT-HEADINGS.\n024200     ADD 1 TO PAGE-NO.\n024300     MOVE PAGE-NO TO PRINT-PAGE-NO.\n024400     WRITE CONTROL-MSGS-REC FROM HEADING-1\n024500         AFTER ADVANCING MSG-CC1.\n024600*\n024700 Z100-ERROR-ROUTINE.\n024800     WRITE CONTROL-MSGS-REC FROM ERROR-LINE\n024900         AFTER ADVANCING MSG-CC1.\n025000     WRITE KEY-DISC-OPERATOR-MSGS-REC FROM ERROR-LINE\n025100         AFTER ADVANCING MSG-CC2.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "RZZMIX": {"ttr": 7942, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x06\\x000\\x00\\x900_\\x00\\x93\\x07\\x0f\\x147\\x00-\\x00%\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.06", "flags": 0, "createdate": "1990-11-01T00:00:00", "modifydate": "1993-03-11T14:37:30", "lines": 45, "newlines": 37, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.             RZZMIX.\n000300 AUTHOR.                 WADE DONAHUE.\n000400 DATE-WRITTEN.           OCTOBER 1990.\n000500* THIS PROGRAM IS USED TO TEST THE CALLREXX SUBROUTINE.\n000600 DATE-COMPILED.\n000700 ENVIRONMENT DIVISION.\n000800 CONFIGURATION SECTION.\n000900 INPUT-OUTPUT SECTION.\n001000 DATA DIVISION.\n001100 WORKING-STORAGE SECTION.\n001200 01  GENERAL-WORK-AREAS.\n001300   05  WS-RET-CODE PIC S9(04) COMP VALUE +0.\n001400 01  REXX-PARM.\n001500   05  REXX-LEN    PIC S9(04) COMP VALUE +19.\n001600   05  REXX-EXEC   PIC X(09) VALUE 'MIXABC'.\n001700   05  REXX-ARG    PIC X(50) VALUE 'ABCDEFGHIJ'.\n001800 01  RETURN-ARG    PIC X(50) VALUE SPACES.\n001900 PROCEDURE DIVISION.\n002000       CALL 'CALLREXX' USING REXX-PARM, RETURN-ARG\n002100       PERFORM REPORT-RESULTS THRU RRXIT.\n002200       MOVE 'MIX123' TO REXX-EXEC\n002300       MOVE '1234567890' TO REXX-ARG.\n002400       CALL 'CALLREXX' USING REXX-PARM, RETURN-ARG\n002500       PERFORM REPORT-RESULTS THRU RRXIT.\n002600       MOVE 'MIXABC' TO REXX-EXEC\n002700       MOVE 'ABCDEFGHIJ' TO REXX-ARG.\n002800       CALL 'CALLREXX' USING REXX-PARM, RETURN-ARG\n002900       PERFORM REPORT-RESULTS THRU RRXIT.\n003000       CALL 'CALLREXX' USING REXX-PARM, RETURN-ARG\n003100       PERFORM REPORT-RESULTS THRU RRXIT.\n003200       MOVE 'MIX123' TO REXX-EXEC\n003300       MOVE '1234567890' TO REXX-ARG.\n003400       CALL 'CALLREXX' USING REXX-PARM, RETURN-ARG\n003500       PERFORM REPORT-RESULTS THRU RRXIT.\n003600       CALL 'COBABEND'.\n003700       GOBACK.\n003800 REPORT-RESULTS.\n003900     MOVE RETURN-CODE TO WS-RET-CODE.\n004000     DISPLAY 'RETURN CODE = ' WS-RET-CODE.\n004100     DISPLAY 'REXX ' REXX-ARG.\n004200     DISPLAY 'RET  ' RETURN-ARG.\n004300     MOVE SPACES TO RETURN-ARG.\n004400     DISPLAY RETURN-ARG.\n004500 RRXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SETUPBLL": {"ttr": 7944, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00@\\x00\\x93\\x07\\x0f\\x00\\x93\\x07\\x0f\\x148\\x00G\\x00G\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "1993-03-11T14:38:40", "lines": 71, "newlines": 71, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.  SETUPBLL.\n000300 AUTHOR.  R THORNTON.\n000400 INSTALLATION.  BLUE CROSS AND BLUE SHIELD OF VIRGINIA.\n000500 DATE-WRITTEN.  NOV, 1987.\n000600 DATE-COMPILED.\n000700****************************************************************\n000800* TEST COBOL'S ABILITY TO ACCESS STORAGE IN UNUSUAL LOCATIONS, *\n000900* IN ORDER TO OBTAIN INFORMATION FROM CONTROL BLOCKS WITHOUT   *\n001000* HAVING TO RESORT TO USE OF ASSEMBLY LANGUAGE SUBROUTINES.    *\n001100*                                                              *\n001200* THIS SUBROUTINE IS CALLED BY A COBOL PROGRAM THAT DESIRES ITS*\n001300* LINKAGE SECTION BLL CELLS TO BE SET TO APPROPRIATE VALUES SO *\n001400* THAT IT CAN DIRECTLY ADDRESS SYSTEM CONTROL BLOCKS AND/OR ITS*\n001500* OWN FILE DESCRIPTIONS, ETC. THE CALLING PROGRAM PASSES:      *\n001600*   1. THE PARAGRAPH NAME WHICH IMMEDIATELY PRECEDES THE CALL  *\n001700*      TO THIS SUBROUTINE. THERE CAN BE NO OTHER STATEMENTS    *\n001800*      BETWEEN THE PARAGRAPH NAME AND THE CALL STATEMENT!      *\n001900*   2. THE NAME OF A GROUP ITEM WHICH MUST CONTAIN A SET OF    *\n002000*      8-CHARACTER FIELDS DEFINING THE DESIRED CONTENT OF THE  *\n002100*      CORRESPONDING BLL CELL. (CVT, ASCB, OUCB, TCB, OR FD).  *\n002200*      WHEN FD IS SPECIFIED, THE VALUE IS SET TO THE VALUE OF  *\n002300*      THE PARAMETER ON THA CALL STATEMENT AFTER THE LAST BLL  *\n002400*      CELL. THE LAST OF THESE FIELDS MUST CONTAIN ALL BLANKS. *\n002500*      THERE MUST BE OF ONE THESE FIELDS FOR EACH BLL PARAMETER*\n002600*      PASSED IN 3. BELOW, PLUS A BLANK ONE AT THE END.        *\n002700*   3. THE 3RD THROUGH NTH PARAMETERS ARE THE NAMES OF 01 LEVEL*\n002800*      RECORDS DEFINED IN THE LINKAGE SECTION THAT ARE TO BE   *\n002900*      INITIALIZED BY THIS SUBROUTINE. THERE MUST BE ONE LESS  *\n003000*      OF THESE THAN THERE ARE FIELDS IN THE GROUP ITEM ABOVE. *\n003100*   4. IF FD IS CODED IN ANY OF THE FIELDS IN 2. ABOVE, THERE  *\n003200*      MUST BE A PARAMETER FOLLOWING THE BLL CELLS WHICH HAS   *\n003300*      THE VALUE TO BE PLACED IN THE BLL CELL (USUALLY THIS    *\n003400*      WILL BE AN FD NAME).                                    *\n003500*                                                              *\n003600*                                                              *\n003700****************************************************************\n003800 ENVIRONMENT DIVISION.\n003900 DATA DIVISION.\n004000 WORKING-STORAGE SECTION.\n004100 77  FILLER                     PIC X(36)  VALUE\n004200     'SETUPBLL WORKING STORAGE BEGINS HERE'.\n004300 01  MISCELLANEOUS-WORK.\n004400     05  BLL-NUMBER             PIC S9(3) COMP-3 VALUE +1.\n004500     05  FD-NUMBER              PIC S9(3) COMP-3 VALUE +1.\n004600     05  POINTER-WORK           PIC S9(8) COMP.\n004700     05  FILLER REDEFINES POINTER-WORK.\n004800         10  POINTER-HIGH-BYTE  PIC X.\n004900         10  POINTER-BYTE2      PIC X.\n005000         10  POINTER-BYTE3      PIC X.\n005100         10  POINTER-BYTE4      PIC X.\n005200 LINKAGE SECTION.\n005300 01  MEMORY-BYTES.\n005400     05  MEMORY-BYTE            PIC X OCCURS 4096 TIMES.\n005500 01  REQUEST-AREA.\n005600     05  BLL-VALUE              PIC X(8) OCCURS 10 TIMES.\n005700 01  CALL-STATEMENT-AREA.\n005800     05  PREFIX-INSTRUCTIONS    PIC X(32).\n005900     05  PARAMETER-ADDRESS      OCCURS 10 TIMES\n006000                                PIC S9(8) COMP.\n006100 PROCEDURE DIVISION USING REQUEST-AREA, CALL-STATEMENT-AREA.\n006200****************************************************************\n006300* GET THE ADDRESS OF THE CVT INTO CVTADR. THE CVT ADDRESS IS   *\n006400* LOCATED AT ABSOLUTE MEMORY ADDRESSES 17-19 (DECIMAL).        *\n006500****************************************************************\n006600     MOVE LOW-VALUES TO POINTER-HIGH-BYTE.\n006700     MOVE MEMORY-BYTE (18) TO POINTER-BYTE2.\n006800     MOVE MEMORY-BYTE (19) TO POINTER-BYTE3.\n006900     MOVE MEMORY-BYTE (20) TO POINTER-BYTE4.\n007000     MOVE POINTER-WORK TO PARAMETER-ADDRESS (BLL-NUMBER).\n007100     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SKELETON": {"ttr": 7947, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x00)\\x00\\x93\\x07\\x0f\\x00\\x95\\x15\\x8f\\x14\\x02\\x00l\\x00 \\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "1995-06-07T14:02:29", "lines": 108, "newlines": 32, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    SKELETON.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. SKELETON FOR WRITING NEW PROGRAMS IN COBOL II.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000720     SELECT INPUT-FILE ASSIGN TO INPUT1.\n000730     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.\n000740     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000820 FD  INPUT-FILE\n000821     BLOCK CONTAINS 0 RECORDS\n000822     RECORD CONTAINS 225 CHARACTERS\n000823     RECORDING MODE IS F\n000830     LABEL RECORDS ARE STANDARD.\n000840 01  INPUT-RECORD.                                                      10\n000850   05  FIELD-1               PIC XX.                                    20\n000860   05  FIELD-2               PIC X(14).                                 30\n000861   05  FIELD-3               PIC Z(5).                                  30\n000870   05  FILLER                PIC X(204).                                40\n000871 01  REC-DEFN-2.\n000872   05  DEF-2-FLD1            PIC X(200).\n000873   05  FILLER                PIC X(25).\n000874\n000875 FD  OUTPUT-FILE\n000876     BLOCK CONTAINS 0 RECORDS\n000877     RECORD CONTAINS 225 CHARACTERS\n000878     RECORDING MODE IS F\n000879     LABEL RECORDS ARE STANDARD.\n000880 01  OUTPUT-RECORD.                                                     10\n000881   05  OUT-FLD-1             PIC XX.                                    20\n000882   05  OUT-FLD-2             PIC X(14).                                 30\n000883   05  OUT-FLD-3             PIC Z(5).                                  30\n000884   05  FILLER                PIC X(204).                                40\n000888\n000889 FD  PRINT-FILE\n000890     BLOCK CONTAINS 0 RECORDS\n000891     RECORD CONTAINS 133 CHARACTERS\n000892     RECORDING MODE IS F\n000893     LABEL RECORDS ARE STANDARD.\n000894 01  PRINT-RECORD.                                                      10\n000895   05  CARRIAGE-CONTROL-BYTE PIC X.                                     20\n000896   05  PRT-FIELD-1           PIC XX.                                    20\n000897   05  PRT-FIELD-2           PIC X(9).                                  30\n000898   05  PRT-COUNTER           PIC ZZ,ZZZ,ZZ9.                            30\n000899   05  FILLER                PIC X(111).                                40\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'SKELETON WORKING STORAGE BEGINS HERE'.\n001200 77  SUB                     PIC S9(4) COMP VALUE +0.\n001300 01  GENERAL-AREAS.\n001301     05  LINE-SPACING        PIC 9 VALUE 1.\n001302     05  END-OF-INPUT-SWITCH PIC X VALUE 'N'.\n001303         88  END-OF-INPUT-DATA  VALUE IS 'Y'.\n001304         88  MORE-DATA-TO-PROCESS VALUE IS 'N'.\n001305     05  COUNTER             PIC S9(8) COMP-3.\n001310\n001400 LINKAGE SECTION.\n001500 01  PARM-FIELD.\n001510     05  PARM-LENGTH         PIC S9(4) COMP.\n001520     05  PARM-DATA           PIC X(104).\n001600\n001700 PROCEDURE DIVISION USING PARM-FIELD.\n001800\n001900 A100-EXECUTIVE-CONTROL.\n002000     PERFORM A100-INITIALIZATION.\n002100     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT-DATA.\n002200     PERFORM Z100-END-OF-PROCESSING.\n002300     GOBACK.\n002400\n002500 A100-INITIALIZATION.\n002600     OPEN INPUT INPUT-FILE,\n002610          OUTPUT OUTPUT-FILE, PRINT-FILE.\n002700\n002800 B100-MAINLINE-PROCESSING.\n002900     PERFORM C100-READ-INPUT-FILE THRU C100-EXIT.\n002910     IF MORE-DATA-TO-PROCESS\n003000        PERFORM D100-PROCESS-THE-RECORD THRU D100-EXIT.\n003001     PERFORM E100-WRITE-OUTPUT-FILE THRU E100-EXIT.\n003010\n003020 C100-READ-INPUT-FILE.\n003030     READ INPUT-FILE\n003040         AT END MOVE 'Y' TO END-OF-INPUT-SWITCH.\n003050 C100-EXIT. EXIT.\n003060\n003070 D100-PROCESS-THE-RECORD.\n003080     ADD 1 TO COUNTER.\n003090 D100-EXIT. EXIT.\n003091\n003092 E100-WRITE-OUTPUT-FILE.\n003093     WRITE OUTPUT-RECORD.\n003095 E100-EXIT. EXIT.\n003096\n003097 Y100-PRINT-A-LINE.\n003098     WRITE PRINT-RECORD AFTER ADVANCING LINE-SPACING.\n003099 Y100-EXIT. EXIT.\n003100\n003101 Z100-END-OF-PROCESSING.\n003110     MOVE COUNTER TO PRT-COUNTER.\n003120     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n003200     ADD 1 TO SUB.\n003300     CLOSE INPUT-FILE,\n003400           OUTPUT-FILE,\n003500           PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SORTVERB": {"ttr": 7950, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00D\\x01\\x02\\x00\\x7f\\x01\\x02\\x00\\x7f\\x12 \\x00X\\x00Y\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2002-01-07T00:00:00", "modifydate": "2002-01-07T12:20:44", "lines": 88, "newlines": 89, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    SORTVERB.\n000300 AUTHOR.        R THORNTON\n000400 DATE-WRITTEN.  DEC 2000.\n000500 DATE-COMPILED.\n000600******************************************************************\n000700*REMARKS: THIS PROGRAM CONTAINS SAMPLE COBOL INTERNAL SORT CODE. *\n000800******************************************************************\n000900 ENVIRONMENT DIVISION.\n001000 CONFIGURATION SECTION.\n001100 INPUT-OUTPUT SECTION.\n001200 FILE-CONTROL.\n001300     SELECT SORT-FILE          ASSIGN   TO  SORTWK01.\n001400     SELECT INPUT-FILE         ASSIGN   TO  INPUT1.\n001500     SELECT SORTED-FILE        ASSIGN   TO  OUTPUT1.\n001600 DATA DIVISION.\n001700 FILE SECTION.\n001800 SD  SORT-FILE\n001900     DATA RECORD IS SORT-RECORD.\n002000 01  SORT-RECORD.\n002100     05  SD-MEMBER-NAME           PIC X(8).\n002200     05  SD-REST                  PIC X(72).\n002300 FD  INPUT-FILE\n002400     DATA RECORD IS INPUT-RECORD\n002500     RECORD CONTAINS 80 CHARACTERS\n002600     BLOCK CONTAINS 0 RECORDS\n002700     LABEL RECORDS ARE STANDARD\n002800     RECORDING MODE IS F.\n002900 01  INPUT-RECORD.\n003000     05  IN-MEMBER-NAME           PIC X(8).\n003100     05  IN-REST                  PIC X(72).\n003200 FD  SORTED-FILE\n003300     DATA RECORD IS SORTED-RECORD\n003400     RECORD CONTAINS 80 CHARACTERS\n003500     BLOCK CONTAINS 0 RECORDS\n003600     LABEL RECORDS ARE STANDARD\n003700     RECORDING MODE IS F.\n003800 01  SORTED-RECORD.\n003900     05  OUT-MEMBER-NAME          PIC X(8).\n004000     05  OUT-REST                 PIC X(72).\n004100 WORKING-STORAGE SECTION.\n004200 77  FILLER                        PIC X(36) VALUE\n004300     'COBLSORT WORKING STORAGE STARTS HERE'.\n004400 01  SWITCHES.\n004500     05  INPUT-EOF-SWITCH         PIC X VALUE 'N'.\n004600         88  INPUT-EOF            VALUE 'Y'.\n004700     05  SORT-EOF-SWITCH          PIC X VALUE 'N'.\n004800         88  SORT-EOF             VALUE 'Y'.\n004900\n005000 PROCEDURE DIVISION.\n005100     OPEN INPUT INPUT-FILE, OUTPUT SORTED-FILE.\n005200     SORT SORT-FILE ASCENDING KEY SD-MEMBER-NAME\n005300         INPUT PROCEDURE IS 100-READ-INPUT\n005400         OUTPUT PROCEDURE IS 200-WRITE-OUTPUT.\n005500     CLOSE INPUT-FILE, SORTED-FILE.\n005600     GOBACK.\n005700\n005800 100-READ-INPUT SECTION.\n005900     PERFORM 1000-READ-INPUT-FILE THRU 100-EXIT\n006000         UNTIL INPUT-EOF.\n006100\n006200 200-WRITE-OUTPUT SECTION.\n006300     PERFORM 2000-WRITE-SORTED-FILE THRU 200-EXIT\n006400         UNTIL SORT-EOF.\n006500\n006600 999-PROCEDURES SECTION.\n006700 1000-READ-INPUT-FILE.\n006800     READ INPUT-FILE\n006900         AT END\n007000             MOVE 'Y' TO INPUT-EOF-SWITCH\n007100             GO TO 100-EXIT.\n007200     PERFORM 110-BUILD-SORT-RECORD THRU 110-EXIT\n007300     GO TO 1000-READ-INPUT-FILE.\n007400 100-EXIT. EXIT.\n007500\n007600 110-BUILD-SORT-RECORD.\n007700     MOVE INPUT-RECORD TO SORT-RECORD.\n007800     RELEASE SORT-RECORD.\n007900 110-EXIT. EXIT.\n008000\n008100 2000-WRITE-SORTED-FILE.\n008200     RETURN SORT-FILE\n008300         AT END\n008400             MOVE 'Y' TO SORT-EOF-SWITCH\n008500             GO TO 200-EXIT.\n008600     WRITE SORTED-RECORD FROM SORT-RECORD.\n008700     GO TO 2000-WRITE-SORTED-FILE.\n008800 200-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SRTSVC99": {"ttr": 8193, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00$\\x01\\x004\\x0f\\x01\\x004\\x0f\\x155\\x00v\\x00v\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2000-12-05T00:00:00", "modifydate": "2000-12-05T15:35:24", "lines": 118, "newlines": 118, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    SRTSVC99.\n000300 AUTHOR.        R THORNTON\n000400 DATE-WRITTEN.  DEC 2000.\n000500     DATE-COMPILED.\n000700*****************************************************************\n000800* THIS PROGRAM IS A SAMPLE COBOL INTERNAL SORT WITH THE INPUT   *\n000900* FILE DYNAMICALLY ALLOCATED TO NULLFILE.                       *\n001000*****************************************************************\n001100 ENVIRONMENT DIVISION.\n001200 CONFIGURATION SECTION.\n001300 INPUT-OUTPUT SECTION.\n001400 FILE-CONTROL.\n001500     SELECT SORT-FILE          ASSIGN   TO  SORTWK01.\n001600     SELECT INPUT-FILE         ASSIGN   TO  INPUT1.\n001700     SELECT SORTED-FILE        ASSIGN   TO  OUTPUT1.\n001800 DATA DIVISION.\n001900 FILE SECTION.\n002000 SD  SORT-FILE\n002100     DATA RECORD IS SORT-RECORD.\n002200 01  SORT-RECORD.\n002300     05  SD-MEMBER-NAME           PIC X(8).\n002400     05  SD-REST                  PIC X(72).\n002500 FD  INPUT-FILE\n002600     DATA RECORD IS INPUT-RECORD\n002700     RECORD CONTAINS 80 CHARACTERS\n002800     BLOCK CONTAINS 0 RECORDS\n002900     LABEL RECORDS ARE STANDARD\n003000     RECORDING MODE IS F.\n003100 01  INPUT-RECORD.\n003200     05  IN-MEMBER-NAME           PIC X(8).\n003300     05  IN-REST                  PIC X(72).\n003400 FD  SORTED-FILE\n003500     DATA RECORD IS SORTED-RECORD\n003600     RECORD CONTAINS 80 CHARACTERS\n003700     BLOCK CONTAINS 0 RECORDS\n003800     LABEL RECORDS ARE STANDARD\n003900     RECORDING MODE IS F.\n004000 01  SORTED-RECORD.\n004100     05  OUT-MEMBER-NAME          PIC X(8).\n004200     05  OUT-REST                 PIC X(72).\n004300 WORKING-STORAGE SECTION.\n004400 77  FILLER                        PIC X(36) VALUE\n004500     'SRTSVC99 WORKING STORAGE STARTS HERE'.\n004510     COPY FSLDYA.\n004520     COPY FSLDYR.\n004600 01  SWITCHES.\n004700     05  INPUT-EOF-SWITCH         PIC X VALUE 'N'.\n004800         88  INPUT-EOF            VALUE 'Y'.\n004900     05  SORT-EOF-SWITCH          PIC X VALUE 'N'.\n005000         88  SORT-EOF             VALUE 'Y'.\n005100     05  WS-ABEND-CODE            PIC S9(8) COMP VALUE 777.\n005110\n005200 PROCEDURE DIVISION.\n005210     MOVE LOW-VALUES TO FEP-ALLOCATE-DATA.\n005220     MOVE 'INPUT1 ' TO C-FEPDYA-DDNAME.\n005230     MOVE 'NULLFILE' TO C-FEPDYA-DSNAME-DUMMY-SYSOUT.\n005240     MOVE +8 TO Q-FEPDYA-CURRENT-STATUS.\n005250     MOVE +8 TO Q-FEPDYA-NORMAL-DISPOSITION.\n005260     MOVE +8 TO Q-FEPDYA-CONDITIONAL-DISP.\n005270     MOVE '123456' TO C-FEPDYA-VOLUME-SERIAL (1).\n005292     MOVE '3590-1' TO C-FEPDYA-UNIT-NAME.\n005293     MOVE +2 TO Q-FEPDYA-LABEL-TYPE.\n005294     MOVE +0 TO Q-FEPDYA-DATASET-SEQUENCE.\n005295     MOVE 'A' TO C-FEPDYR-ALLOCDYN-REQUEST.\n005299     CALL 'ALLOCDYN' USING FEP-ALLOCATE-DATA\n005300                           FEP-ALLOCATE-RESULT.\n005301\n005302     IF FEPDYR-SUCCESSFUL-ALLOCATION\n005303         NEXT SENTENCE\n005304     ELSE\n005305         DISPLAY 'UNABLE TO ALLOCATE INPUT1: RETURN CODE='\n005306                 C-FEPDYR-ALLOCDYN-RETURN-CODE\n005307         DISPLAY '  ERROR-REASON-CODE=' G-FEPDYR-ERROR-REASON-CODE\n005308                 ': ' C-FEPDYR-ERROR-REASON-MESSAGE\n005309         DISPLAY '  INFORMATION-REASON='\n005310                 C-FEPDYR-INFORMATION-REASON\n005311                 ': ' C-FEPDYR-INFO-REASON-MESSAGE\n005312         DISPLAY '  DATASET NAME IS:' C-FEPDYA-DSNAME-DUMMY-SYSOUT\n005313         CALL 'CANCEL' USING WS-ABEND-CODE.\n005320     OPEN INPUT INPUT-FILE, OUTPUT SORTED-FILE.\n005400     SORT SORT-FILE ASCENDING KEY SD-MEMBER-NAME\n005500         INPUT PROCEDURE IS 100-READ-INPUT\n005600         OUTPUT PROCEDURE IS 200-WRITE-OUTPUT.\n005700     CLOSE INPUT-FILE, SORTED-FILE.\n005800     GOBACK.\n005900\n005901 100-READ-INPUT SECTION.\n005910     PERFORM 1000-READ-INPUT-FILE THRU 100-EXIT\n005911         UNTIL INPUT-EOF.\n005912\n005913 200-WRITE-OUTPUT SECTION.\n005920     PERFORM 2000-WRITE-SORTED-FILE THRU 200-EXIT\n005930         UNTIL SORT-EOF.\n005940\n005950 999-PROCEDURES SECTION.\n006000 1000-READ-INPUT-FILE.\n006100     READ INPUT-FILE\n006200         AT END\n006300             MOVE 'Y' TO INPUT-EOF-SWITCH\n006400             GO TO 100-EXIT.\n006500     PERFORM 110-BUILD-SORT-RECORD THRU 110-EXIT\n006600     GO TO 1000-READ-INPUT-FILE.\n006700 100-EXIT. EXIT.\n006800\n006900 110-BUILD-SORT-RECORD.\n007000     MOVE INPUT-RECORD TO SORT-RECORD.\n007100     RELEASE SORT-RECORD.\n007200 110-EXIT. EXIT.\n007300\n007400 2000-WRITE-SORTED-FILE.\n007500     RETURN SORT-FILE\n007600         AT END\n007700             MOVE 'Y' TO SORT-EOF-SWITCH\n007800             GO TO 200-EXIT.\n007900     WRITE SORTED-RECORD FROM SORT-RECORD.\n008000     GO TO 2000-WRITE-SORTED-FILE.\n008100 200-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "STARTREK": {"ttr": 8196, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00S\\x00\\x991?\\x00\\x991?\\x15\\x02\\ti\\tj\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1999-11-09T00:00:00", "modifydate": "1999-11-09T15:02:53", "lines": 2409, "newlines": 2410, "modlines": 0, "user": "BC0THOR"}, "text": "000100 ID DIVISION.\n000200 PROGRAM-ID.                     STARTREK.\n000300     SKIP1\n000400 AUTHOR.                         RICK JONES.\n000500 DATE-WRITTEN.                   JULY 1977.\n000700*REMARKS.\n000800*\n000900*    THIS IS THE MAIN PROGRAM FOR 'STAR TREK'.\n001000*\n001100*    THIS PROGRAM WAS CONVERTED TO ISPF FROM A CICS PROGRAM\n001200*    WRITTEN BY RICK JONES THAT APPEARED ON THE SHARE CICS\n001300*    MOD TAPE.\n001400*\n001500*    IT'S DESIGN IS BASED ON 'SUPER STAR TREK' BY ROBERT LEEDOM &\n001600*    DAVID AHL, AS IT APPEARED IN 'THE BEST OF CREATIVE COMPUTING,\n001700*    VOLUME 1'.\n001800*\n001900 ENVIRONMENT DIVISION.\n002000 CONFIGURATION SECTION.\n002100   SOURCE-COMPUTER.   IBM-370.\n002200   OBJECT-COMPUTER.   IBM-370.\n002300 INPUT-OUTPUT SECTION.\n002400 FILE-CONTROL.\n002500     SELECT GAME-FILE ASSIGN TO S-GAMEFILE.\n002600     EJECT\n002700 DATA DIVISION.\n002800 FILE SECTION.\n002900 FD  GAME-FILE,\n003000     LABEL RECORDS ARE STANDARD,\n003100     RECORD CONTAINS 425 CHARACTERS,\n003200     BLOCK CONTAINS 1 RECORDS,\n003300     DATA RECORD IS GAME-FILE-REC.\n003400 01  GAME-RECORD      PIC X(425).\n003500 WORKING-STORAGE SECTION.\n003600     SKIP1\n003700 01  TIME-VAR       PIC X(5).\n003800 01  TIME-VAR-BO REDEFINES TIME-VAR.\n003900     05  TIME-HOURS   PIC 99.\n004000     05  FILLER PIC X.\n004100     05  TIME-MINS PIC 99.\n004200 01  TIME-VAR-NUM.\n004300     05  TIME-HOURS   PIC 99.\n004400     05  TIME-MINS PIC 99.\n004500 01  TIME-VAR-NUM2    PIC 9999999  VALUE 0.\n004600 01  CONSTANTS.\n004700     12  LITERALS.\n004800         16  L-INDX              PIC S9.\n004900         16  L-MULT              PIC S9(5)   VALUE +31621  COMP-3.\n005000         16  L-NULL-TABLE        PIC X(64)   VALUE ALL ' '.\n005100         16  L-NULL              PIC X       VALUE ' '.\n005200         16  L-KLING             PIC X       VALUE 'K'.\n005300         16  L-SBASE             PIC X       VALUE 'B'.\n005400         16  L-STARS             PIC X       VALUE '*'.\n005500         16  L-EPRISE            PIC X       VALUE 'E'.\n005600         16  L-COLON             PIC X       VALUE ':'.\n005700         16  L-NAV               PIC XXX     VALUE 'NAV'.\n005800         16  L-LRS               PIC XXX     VALUE 'LRS'.\n005900         16  L-PHA               PIC XXX     VALUE 'PHA'.\n006000         16  L-TOR               PIC XXX     VALUE 'TOR'.\n006100         16  L-SHE               PIC XXX     VALUE 'SHE'.\n006200         16  L-DAM               PIC XXX     VALUE 'DAM'.\n006300         16  L-COM               PIC XXX     VALUE 'COM'.\n006400         16  L-END               PIC XXX     VALUE 'SUR'.\n006500         16  L-SAV               PIC XXX     VALUE 'SAV'.\n006600         16  L-RES               PIC XXX     VALUE 'RES'.\n006700         16  L-LRS-TOP           PIC X(50)\n006800                 VALUE '  ----- ----- ----- ----- ----- ----- ----\n006900-                      '- ----- '.\n007000         16  L-ROMAN             PIC X(21)\n007100                 VALUE ' I    II    III   IV '.\n007200     12  DAM-NAME-LIST.\n007300         16  FILLER              PIC X(12)   VALUE 'WARP ENGINES'.\n007400         16  FILLER              PIC X(12)   VALUE 'S.R. SENSORS'.\n007500         16  FILLER              PIC X(12)   VALUE 'L.R. SENSORS'.\n007600         16  FILLER              PIC X(12)   VALUE 'PHASER CNTRL'.\n007700         16  FILLER              PIC X(12)   VALUE 'PHOTON TUBES'.\n007800         16  FILLER              PIC X(12)   VALUE 'DAMAGE CNTRL'.\n007900         16  FILLER              PIC X(12)   VALUE 'SHIELD CNTRL'.\n008000         16  FILLER              PIC X(12)   VALUE 'COMPUTER    '.\n008100     12  DAM-NAME-TABLE  REDEFINES DAM-NAME-LIST.\n008200         16  DAM-NAME        OCCURS 8 TIMES\n008300                                 PIC X(12).\n008400     12  C-LIST.\n008500         16  FILLER              PIC S9  VALUE -1    COMP-3.\n008600         16  FILLER              PIC S9  VALUE +0    COMP-3.\n008700         16  FILLER              PIC S9  VALUE -1    COMP-3.\n008800         16  FILLER              PIC S9  VALUE +1    COMP-3.\n008900         16  FILLER              PIC S9  VALUE +0    COMP-3.\n009000         16  FILLER              PIC S9  VALUE +1    COMP-3.\n009100         16  FILLER              PIC S9  VALUE +1    COMP-3.\n009200         16  FILLER              PIC S9  VALUE +1    COMP-3.\n009300         16  FILLER              PIC S9  VALUE +1    COMP-3.\n009400         16  FILLER              PIC S9  VALUE +0    COMP-3.\n009500         16  FILLER              PIC S9  VALUE +1    COMP-3.\n009600         16  FILLER              PIC S9  VALUE -1    COMP-3.\n009700         16  FILLER              PIC S9  VALUE +0    COMP-3.\n009800         16  FILLER              PIC S9  VALUE -1    COMP-3.\n009900         16  FILLER              PIC S9  VALUE -1    COMP-3.\n010000         16  FILLER              PIC S9  VALUE -1    COMP-3.\n010100         16  FILLER              PIC S9  VALUE -1    COMP-3.\n010200         16  FILLER              PIC S9  VALUE +0    COMP-3.\n010300     12  C-TABLE REDEFINES C-LIST.\n010400         16  FILLER          OCCURS 9 TIMES\n010500                             INDEXED BY C-X1.\n010600             20  C-VERT          PIC S9              COMP-3.\n010700             20  C-HORZ          PIC S9              COMP-3.\n010800     12  REGION-AREA.\n010900         16  REGION-LIST.\n011000             20  FILLER          PIC X(33)\n011100                     VALUE 'ANTARES    SIRIUS     RIGEL      '.\n011200             20  FILLER          PIC X(33)\n011300                     VALUE 'DENEB      PROCYON    CAPELLA    '.\n011400             20  FILLER          PIC X(33)\n011500                     VALUE 'VEGA       BETELGEUSE CANOPUS    '.\n011600             20  FILLER          PIC X(33)\n011700                     VALUE 'ALDEBARAN  ALTAIR     REGULUS    '.\n011800             20  FILLER          PIC X(33)\n011900                     VALUE 'SAGITTARIUSANTARES    POLLUX     '.\n012000             20  FILLER          PIC X(11)\n012100                     VALUE 'SPICA      '.\n012200         16  REGION-TABLE  REDEFINES REGION-LIST.\n012300             20  REGION-NAME         OCCURS 16 TIMES\n012400                                     INDEXED BY REGION-X1\n012500                                 PIC X(11).\n012600     12  INIT-AREA.\n012700         16  INIT-TORPEDOS       PIC S999    VALUE +10   COMP-3.\n012800         16  INIT-ENERGY-EPRISE  PIC S9(5)   VALUE +3000 COMP-3.\n012900         16  INIT-ENERGY-KLING   PIC S999    VALUE +200  COMP-3.\n013000         16  MAX-KLING           PIC S9      VALUE +3    COMP-3.\n013100         16  TOR-ENERGY          PIC S999    VALUE +20   COMP-3.\n013200     SKIP1\n013300 01  MISC-WORK.\n013400         16  WRAPUP-CODE         PIC 9 VALUE 0.\n013500         16  NAV-EDIT-FLAG       PIC X.\n013600         16  COURSE              PIC S9V99           COMP-3.\n013700         16  WARP-FACTOR         PIC S9V99           COMP-3.\n013800         16  WARP-ENERGY         PIC S9(5)           COMP-3.\n013900         16  STARDATES-USED      PIC S99V9           COMP-3.\n014000         16  EPRISE-MOVE-FLAG    PIC X.\n014100         16  SECTORS-MOVE-CURR   PIC S999            COMP-3.\n014200         16  SECTORS-MOVE-TOTL   PIC S999            COMP-3.\n014300         16  OBSTACLE            PIC X.\n014400         16  GALAXY-LIMIT-FLAG   PIC S9              COMP-3.\n014500         16  PREV-GLXY-ROW       PIC S9              COMP-3.\n014600         16  PREV-GLXY-COL       PIC S9              COMP-3.\n014700         16  QUAD-NAME-ROW       PIC S9              COMP-3.\n014800         16  QUAD-NAME-COL       PIC S9              COMP-3.\n014900         16  REGION-ONLY-FLAG    PIC S9              COMP-3.\n015000         16  QUAD-NAME-AREA.\n015100             20  QUAD-NAME.\n015200                 24  QUAD-NAME-BYTE  OCCURS 16 TIMES\n015300                                     INDEXED BY QUAD-X1\n015400                                 PIC X.\n015500         16  SHIELD-ENERGY       PIC S9(5)           COMP-3.\n015600         16  PHASER-ENERGY       PIC S9(5)           COMP-3.\n015700         16  DIST                PIC S99V999         COMP-3.\n015800         16  HIT                 PIC S9(3)           COMP-3.\n015900         16  HIT-RATIO           PIC S999V99         COMP-3.\n016000         16  COMPUTER-REQUEST    PIC S9              COMP-3.\n016100         16  DAM-SUB             PIC S9              COMP-3.\n016200         16  DAM-HDG-FLAG        PIC X.\n016300         16  REPAIR-EST          PIC S99V9           COMP-3.\n016400         16  DAM-DELAY           PIC S99V9           COMP-3.\n016500         16  WORK-VERT           PIC S999V99         COMP-3.\n016600         16  WORK-HORZ           PIC S999V99         COMP-3.\n016700         16  STEP-VERT           PIC S9V99           COMP-3.\n016800         16  STEP-HORZ           PIC S9V99           COMP-3.\n016900         16  TOR-ROW             PIC S9              COMP-3.\n017000         16  TOR-COL             PIC S9              COMP-3.\n017100         16  RANDOM-ROW          PIC S9              COMP-3.\n017200         16  RANDOM-COL          PIC S9              COMP-3.\n017300         16  START-TIME          PIC S9(7)           COMP-3.\n017400         16  SEED1A              PIC  9(7).\n017500         16  SEED1B  REDEFINES SEED1A.\n017600             20  SEED-1          PIC 9.\n017700             20  SEED-2          PIC 9.\n017800             20  SEED-3          PIC 9.\n017900             20  SEED-4          PIC 9.\n018000             20  SEED-5          PIC 9.\n018100             20  SEED-6          PIC 9.\n018200             20  SEED-7          PIC 9.\n018300         16  SEED2A              PIC  9(7).\n018400         16  SEED2B  REDEFINES SEED2A.\n018500             20  SEED-7          PIC 9.\n018600             20  SEED-6          PIC 9.\n018700             20  SEED-5          PIC 9.\n018800             20  SEED-4          PIC 9.\n018900             20  SEED-3          PIC 9.\n019000             20  SEED-2          PIC 9.\n019100             20  SEED-1          PIC 9.\n019200         16  CURPOS              PIC S9(8)                 COMP.\n019300         16  TEMP-999            PIC S999            COMP-3.\n019400         16  TEMP-999V9999       PIC S999V9999       COMP-3.\n019500         16  TEMP-9-9            PIC 9.9.\n019600         16  TEMP-Z9             PIC Z9.\n019700         16  TEMP-ZZVZ           PIC ZZ.Z.\n019800         16  TEMP-ZZZ9           PIC ZZZ9.\n019900     12  TS-KEY.\n020000         16  TS-KEY-1-4          PIC X(4).\n020100         16  TS-KEY-5-8          PIC X(4).\n020200     12  C30-AREA.\n020300         16  C30-MSG                 PIC XXX.\n020400         16  C30-FLAGS.\n020500             20  C30-NON-BLANK-FLAG  PIC X.\n020600             20  C30-NEG-FLAG        PIC X.\n020700             20  C30-DECIMAL-FLAG    PIC X.\n020800         16  C30-DIGIT-CTR           PIC S999    COMP-3.\n020900         16  C30-DECIMAL-CTR         PIC S999    COMP-3.\n021000         16  C30-IN-QTY.\n021100             20  C30-I-CHAR          PIC X   OCCURS 4 TIMES\n021200                                             INDEXED BY C30-IX1.\n021300         16  C30-OUT-QTY             PIC S9(4).\n021400         16  FILLER  REDEFINES C30-OUT-QTY.\n021500             20  C30-O-CHAR          PIC X   OCCURS 4 TIMES\n021600                                             INDEXED BY C30-OX1.\n021700         16  C30-ADJ-QTY         PIC S9(4)V999  COMP-3.\n021800     12  MSG-LINE.\n021900         16  MSG-LINE01          PIC X.\n022000         16  MSG-LINE02          PIC X.\n022100         16  MSG-LINE03          PIC X.\n022200         16  MSG-LINE04          PIC X.\n022300         16  MSG-LINE05          PIC X.\n022400         16  MSG-LINE06          PIC X.\n022500         16  MSG-LINE07          PIC X.\n022600         16  MSG-LINE08          PIC X.\n022700         16  MSG-LINE09          PIC X.\n022800         16  MSG-LINE10          PIC X.\n022900         16  MSG-LINE11          PIC X.\n023000         16  MSG-LINE12          PIC X.\n023100         16  MSG-LINE13          PIC X.\n023200         16  MSG-LINE14          PIC X.\n023300         16  MSG-LINE15          PIC X.\n023400         16  MSG-LINE16          PIC X.\n023500         16  MSG-LINE17          PIC X.\n023600         16  MSG-LINE18          PIC X.\n023700         16  MSG-LINE19          PIC X.\n023800         16  MSG-LINE20          PIC X.\n023900         16  MSG-LINE21          PIC X.\n024000         16  MSG-LINE22          PIC X.\n024100         16  MSG-LINE23          PIC X.\n024200         16  MSG-LINE24          PIC X.\n024300         16  MSG-LINE25          PIC X.\n024400         16  MSG-LINE26          PIC X.\n024500         16  MSG-LINE27          PIC X.\n024600         16  MSG-LINE28          PIC X.\n024700         16  MSG-LINE29          PIC X.\n024800         16  MSG-LINE30          PIC X.\n024900         16  MSG-LINE31          PIC X.\n025000         16  MSG-LINE32          PIC X.\n025100         16  MSG-LINE33          PIC X.\n025200         16  MSG-LINE34          PIC X.\n025300         16  MSG-LINE35          PIC X.\n025400         16  MSG-LINE36          PIC X.\n025500         16  MSG-LINE37          PIC X.\n025600         16  MSG-LINE38          PIC X.\n025700         16  MSG-LINE39          PIC X.\n025800         16  MSG-LINE40          PIC X.\n025900         16  MSG-LINE41          PIC X.\n026000         16  MSG-LINE42          PIC X.\n026100         16  MSG-LINE43          PIC X.\n026200         16  MSG-LINE44          PIC X.\n026300         16  MSG-LINE45          PIC X.\n026400         16  MSG-LINE46          PIC X.\n026500         16  MSG-LINE47          PIC X.\n026600         16  MSG-LINE48          PIC X.\n026700         16  MSG-LINE49          PIC X.\n026800         16  MSG-LINE50          PIC X.\n026900     12  LRS-LINE  REDEFINES MSG-LINE.\n027000         16  LRS-ROW             PIC 9.\n027100         16  LRS-SEP1            PIC X.\n027200         16  FILLER                  OCCURS 8 TIMES\n027300                                     INDEXED BY LRS-X1.\n027400             20  FILLER          PIC X.\n027500             20  LRS-SECT        PIC ZZ9.\n027600             20  FILLER          PIC X.\n027700             20  LRS-SEP         PIC X.\n027800     12  GAL-LINE  REDEFINES MSG-LINE.\n027900         16  FILLER              PIC XXX.\n028000         16  GAL-LEFT.\n028100             20  GAL-MARG1       PIC X(4).\n028200             20  FILLER          PIC X.\n028300             20  GAL-LEFT-NAME   PIC X(11).\n028400             20  FILLER          PIC X.\n028500             20  GAL-MARG2       PIC X(4).\n028600         16  FILLER              PIC XXX.\n028700         16  GAL-RIGHT.\n028800             20  GAL-MARG3       PIC X(4).\n028900             20  FILLER          PIC X.\n029000             20  GAL-RIGHT-NAME  PIC X(11).\n029100             20  FILLER          PIC X.\n029200             20  GAL-MARG4       PIC X(4).\n029300         16  FILLER              PIC XX.\n029400     66  MSG-LINE01-20  RENAMES MSG-LINE01 THRU MSG-LINE20.\n029500     66  MSG-LINE01-35  RENAMES MSG-LINE01 THRU MSG-LINE35.\n029600     66  MSG-LINE05-06  RENAMES MSG-LINE05 THRU MSG-LINE06.\n029700     66  MSG-LINE14-29  RENAMES MSG-LINE14 THRU MSG-LINE29.\n029800     66  MSG-LINE27-42  RENAMES MSG-LINE27 THRU MSG-LINE42.\n029900     66  MSG-LINE17-18  RENAMES MSG-LINE17 THRU MSG-LINE18.\n030000     66  MSG-LINE39-42  RENAMES MSG-LINE39 THRU MSG-LINE42.\n030100     66  MSG-LINE18-19  RENAMES MSG-LINE18 THRU MSG-LINE19.\n030200     66  MSG-LINE13-14  RENAMES MSG-LINE13 THRU MSG-LINE14.\n030300     66  MSG-LINE28-31  RENAMES MSG-LINE28 THRU MSG-LINE31.\n030400     66  MSG-LINE35-37  RENAMES MSG-LINE35 THRU MSG-LINE37.\n030500     66  MSG-LINE37-40  RENAMES MSG-LINE37 THRU MSG-LINE40.\n030600     66  MSG-LINE38-39  RENAMES MSG-LINE38 THRU MSG-LINE39.\n030700     66  MSG-LINE10-11  RENAMES MSG-LINE10 THRU MSG-LINE11.\n030800     66  MSG-LINE10-13  RENAMES MSG-LINE10 THRU MSG-LINE13.\n030900     66  MSG-LINE11-12  RENAMES MSG-LINE11 THRU MSG-LINE12.\n031000     66  MSG-LINE11-22  RENAMES MSG-LINE11 THRU MSG-LINE22.\n031100     66  MSG-LINE12-13  RENAMES MSG-LINE12 THRU MSG-LINE13.\n031200     66  MSG-LINE01-04  RENAMES MSG-LINE01 THRU MSG-LINE04.\n031300     66  MSG-LINE20-23  RENAMES MSG-LINE20 THRU MSG-LINE23.\n031400     66  MSG-LINE19-22  RENAMES MSG-LINE19 THRU MSG-LINE22.\n031500     66  MSG-LINE31-34  RENAMES MSG-LINE31 THRU MSG-LINE34.\n031600     66  MSG-LINE32-34  RENAMES MSG-LINE32 THRU MSG-LINE34.\n031700     66  MSG-LINE22-25  RENAMES MSG-LINE22 THRU MSG-LINE25.\n031800     66  MSG-LINE23-26  RENAMES MSG-LINE23 THRU MSG-LINE26.\n031900     66  MSG-LINE24-27  RENAMES MSG-LINE24 THRU MSG-LINE27.\n032000     66  MSG-LINE24-35  RENAMES MSG-LINE24 THRU MSG-LINE35.\n032100     66  MSG-LINE26-29  RENAMES MSG-LINE26 THRU MSG-LINE29.\n032200     66  MSG-LINE16-19  RENAMES MSG-LINE16 THRU MSG-LINE19.\n032300     66  MSG-LINE27-30  RENAMES MSG-LINE27 THRU MSG-LINE30.\n032400     66  MSG-LINE44-47  RENAMES MSG-LINE44 THRU MSG-LINE47.\n032500     66  MSG-LINE47-50  RENAMES MSG-LINE47 THRU MSG-LINE50.\n032600     SKIP1\n032700 01  MAP1O.\n032800     12  DIALOG-V7.\n032900         16  M1-QUAD-NAME            PIC X(16).\n033000     12  M1-SECTOR-TABLE.\n033100         16  M1-ROW                  OCCURS 8 TIMES\n033200                                     INDEXED BY M1-X1.\n033300             20  M1-COL              OCCURS 8 TIMES\n033400                                     INDEXED BY M1-X2.\n033500                 24  FILLER      PIC X(2).\n033600                 24  M1-DISP     PIC X.\n033700     12  DIALOG-V1 REDEFINES M1-SECTOR-TABLE.\n033800         16  FILLER   PIC X(192).\n033900     12  DIALOG-V3.\n034000         16  M1-STARDATE             PIC 9999.9.\n034100         16  M1-CONDITION            PIC X(6).\n034200     12  DIALOG-V4.\n034300         16  M1-GLXY-ROW             PIC 9.\n034400         16  M1-QUAD-SEP             PIC X.\n034500         16  M1-GLXY-COL             PIC 9.\n034600         16  M1-SECT-ROW             PIC 9.\n034700         16  M1-SECT-SEP             PIC X.\n034800         16  M1-SECT-COL             PIC 9.\n034900         16  CMDI                    PIC XXX.\n035000     12  M1-TORPEDOS             PIC Z9.\n035100     12  DIALOG-V5.\n035200         16  FLDA     PIC 9999.\n035300         16  FLDB     PIC 9999.\n035400         16  M1-ENERGY               PIC ZZZ9.\n035500         16  M1-SHIELD               PIC ZZZ9.\n035600     12  DIALOG-V6.\n035700         16  MESSAGEO                PIC X(53).\n035800     SKIP1\n035900 01  MAP2O.\n036000     12  MLINE-AREA.\n036100         16  MLINE-AREA-ROWS         OCCURS 23 TIMES\n036200                                     INDEXED BY MLINE-X1.\n036300             20  MLINE           PIC X(50).\n036400     12  DIALOG-V2  REDEFINES MLINE-AREA.\n036500         16 FILLER  PIC X(1150).\n036600     SKIP1\n036700   01  TEMPSTRG.\n036800     12  CURR-STATUS.\n036900         16  ABEND-CODE          PIC X(4).\n037000         16  STARDATE            PIC S9(4)V9         COMP-3.\n037100         16  ENERGY              PIC S9(5)           COMP-3.\n037200         16  TORPEDOS            PIC S999            COMP-3.\n037300         16  SHIELD              PIC S9(5)           COMP-3.\n037400         16  CURR-QUAD           PIC X(16).\n037500         16  CONDITION           PIC X(6).\n037600         16  EPRISE-VERT         PIC S9V999.\n037700         16  FILLER  REDEFINES EPRISE-VERT.\n037800             20  EPRISE-ROW      PIC  9.\n037900             20  FILLER          PIC XXX.\n038000         16  EPRISE-HORZ         PIC S9V999.\n038100         16  FILLER  REDEFINES EPRISE-HORZ.\n038200             20  EPRISE-COL      PIC  9.\n038300             20  FILLER          PIC XXX.\n038400         16  EPRISE-GLXY-ROW     PIC S9              COMP-3.\n038500         16  EPRISE-GLXY-COL     PIC S9              COMP-3.\n038600         16  DOCKING-FLAG        PIC X.\n038700         16  SBASE-ROW           PIC S9              COMP-3.\n038800         16  SBASE-COL           PIC S9              COMP-3.\n038900         16  CURR-KLING          PIC S9              COMP-3.\n039000         16  CURR-SBASE          PIC S9              COMP-3.\n039100         16  CURR-STARS          PIC S9              COMP-3.\n039200         16  SBASE-TOTAL         PIC S999            COMP-3.\n039300         16  KLING-TOTAL         PIC S999            COMP-3.\n039400         16  ORIG-SBASE          PIC S999            COMP-3.\n039500         16  ORIG-KLING          PIC S999            COMP-3.\n039600         16  FIRST-STARDATE      PIC S9(5)           COMP-3.\n039700         16  ENDDATE             PIC S9(5)           COMP-3.\n039800         16  RND-MULT            PIC S9(9)           COMP-3.\n039900         16  RND                 PIC SV9(9)          COMP-3.\n040000         16  RND-WORK  REDEFINES RND\n040100                                 PIC S9(9)           COMP-3.\n040200     12  KLING-AREA.\n040300         16  KLING-TABLE     OCCURS 3 TIMES\n040400                             INDEXED BY KLING-X1.\n040500             20  KLING-ROW       PIC S9              COMP-3.\n040600             20  KLING-COL       PIC S9              COMP-3.\n040700             20  KLING-ENERGY    PIC S999            COMP-3.\n040800     12  SECTOR-AREA.\n040900         16  SECTOR-ROW              OCCURS 8 TIMES\n041000                                     INDEXED BY SECTOR-X1.\n041100             20  SECTOR-COL          OCCURS 8 TIMES\n041200                                     INDEXED BY SECTOR-X2.\n041300                 24  SECTOR-DISP PIC X.\n041400     12  G-AREA.\n041500         16  G-ROW           OCCURS 8 TIMES\n041600                             INDEXED BY G-X1.\n041700             20  G-COL       OCCURS 8 TIMES\n041800                             INDEXED BY G-X2.\n041900                 24  G-STATUS    PIC X.\n042000***                      VALUES... 0=UNKNOWN, 1=KNOWN\n042100                 24  G-TOTAL     PIC 999.\n042200                 24  FILLER  REDEFINES G-TOTAL.\n042300                     28  G-KLING PIC 9.\n042400                     28  G-SBASE PIC 9.\n042500                     28  G-STARS PIC 9.\n042600     12  DAM-REPAIR-LIST.\n042700         16  DAM-NAV             PIC S99V9           COMP-3.\n042800         16  DAM-SRS             PIC S99V9           COMP-3.\n042900         16  DAM-LRS             PIC S99V9           COMP-3.\n043000         16  DAM-PHA             PIC S99V9           COMP-3.\n043100         16  DAM-TOR             PIC S99V9           COMP-3.\n043200         16  DAM-DAM             PIC S99V9           COMP-3.\n043300         16  DAM-SHE             PIC S99V9           COMP-3.\n043400         16  DAM-COM             PIC S99V9           COMP-3.\n043500     12  DAM-REPAIR-TABLE  REDEFINES DAM-REPAIR-LIST.\n043600         16  DAM-REPAIR      OCCURS 8 TIMES\n043700                                 PIC S99V9           COMP-3.\n043800** ***************************************************************\n043900*                                                                *\n044000*         WORKING-STORAGE FIELDS FOR ISPF SERVICE CALLS          *\n044100*                                                                *\n044200******************************************************************\n044300 77  ISPF-ALT-NAME           PICTURE X(8)       VALUE SPACES.\n044400 77  ISPF-BUFFER             PICTURE X(80)      VALUE SPACES.\n044500*    ISPF-BUFFER FIELD LENGTH CAN BE INCREASED IF NECESSARY.\n044600 77  ISPF-BUF-LENGTH         PICTURE 9(6)  COMP VALUE ZEROES.\n044700 77  ISPF-CRP-NAME           PICTURE X(8)       VALUE SPACES.\n044800 77  ISPF-DATA               PICTURE X(80)      VALUE SPACES.\n044900*    ISPF-DATA FIELD LENGTH CAN BE INCREASED IF NECESSARY.\n045000 77  ISPF-DSNAME             PICTURE X(56)      VALUE SPACES.\n045100 77  ISPF-FIELD-NAME         PICTURE X(8)       VALUE SPACES.\n045200 77  ISPF-FILEID             PICTURE X(22)      VALUE SPACES.\n045300 77  ISPF-KEY-NAME           PICTURE X(8)       VALUE SPACES.\n045400 77  ISPF-KEYNUM-NAME        PICTURE X(8)       VALUE SPACES.\n045500 77  ISPF-LENGTH             PICTURE 9(6)  COMP VALUE ZEROES.\n045600 77  ISPF-LINE-NUMBER        PICTURE 9(6)  COMP VALUE ZEROES.\n045700 77  ISPF-MEMBER-NAME        PICTURE X(8)       VALUE SPACES.\n045800 77  ISPF-MSG-ID             PICTURE X(8)       VALUE SPACES.\n045900 77  ISPF-NAMENUM-NAME       PICTURE X(8)       VALUE SPACES.\n046000 77  ISPF-NUMBER             PICTURE S9(6) COMP VALUE ZEROES.\n046100 77  ISPF-OPTION1            PICTURE X(8)       VALUE SPACES.\n046200 77  ISPF-OPTION2            PICTURE X(8)       VALUE SPACES.\n046300 77  ISPF-PANEL-NAME         PICTURE X(8)       VALUE SPACES.\n046400 77  ISPF-PERCENT            PICTURE 9(6)  COMP VALUE ZEROES.\n046500 77  ISPF-PSWD-VALUE         PICTURE X(8)       VALUE SPACES.\n046600 77  ISPF-ROW                PICTURE 9(6)  COMP VALUE ZEROES.\n046700 77  ISPF-ROWNUM-NAME        PICTURE X(8)       VALUE SPACES.\n046800 77  ISPF-SERIAL             PICTURE X(6)       VALUE SPACES.\n046900 77  ISPF-SERVICE            PICTURE X(8)       VALUE SPACES.\n047000 77  ISPF-SKEL-NAME          PICTURE X(8)       VALUE SPACES.\n047100 77  ISPF-TABLE-NAME         PICTURE X(8)       VALUE SPACES.\n047200 77  ISPF-TYPE               PICTURE X(8)       VALUE SPACES.\n047300 77  ISPF-VAR-NAME           PICTURE X(8)       VALUE SPACES.\n047400******************************************************************\n047500*    ISPF-KEY-LIST IS USED BY THE TBCREATE SERVICE TO NAME THE   *\n047600*                 VARIABLES TO BE USED AS KEYS IN THE TABLE      *\n047700*                 BE CREATED                                     *\n047800 01  ISPF-KEY-LIST.\n047900     05  ISPF-KEY-COUNT      PICTURE 9(6)  COMP VALUE ZEROES.\n048000     05  FILLER              PICTURE 9(6)  COMP VALUE ZEROES.\n048100     05  ISPF-KEY       OCCURS 50 TIMES         PICTURE X(8).\n048200*        THIS ARRAY HAS BEEN DEFINED WITH A DIMENSION OF 50.     *\n048300*                 ADJUST ACCORDING TO YOUR REQUIREMENTS.         *\n048400******************************************************************\n048500*    ISPF-LENGTH-LIST IS USED BY THE VCOPY AND VREPLACE SERVICES *\n048600*                    TO SPECIFY THE LENGTH OF THE DATA FOR THE   *\n048700*                    VARIABLES(S) IN A NAME LIST. EACH LENGTH    *\n048800*                    CORRESPONDS BY POSITION TO A VARIABLE IN    *\n048900*                    THE NAME LIST, SO THERE MUST BE AS MANY     *\n049000*                    LENGTHS AS THERE ARE NAMES IN THE LIST.     *\n049100 01  ISPF-LENGTH-LIST.\n049200     05  ISPF-LENGTHS   OCCURS 50 TIMES  COMP   PICTURE 9(6)     .\n049300*        THIS ARRAY HAS BEEN DEFINED WITH A DIMENSION OF 50.     *\n049400*                 ADJUST ACCORDING TO YOUR REQUIREMENTS.         *\n049500******************************************************************\n049600*    ISPF-NAME-LIST IS USED BY MANY VARIABLE AND TABLE SERVICES  *\n049700*                  TO  SPECIFY THE NAME(S) OF VARIABLES: THESE   *\n049800*                  MAY BE DIALOG VARIABLES, NON-KEY NAME         *\n049900*                  VARIABLES FOR TABLES, OR EXTENSION TABLE      *\n050000*                  VARIABLES.                                    *\n050100 01  ISPF-NAME-LIST.\n050200     05  ISPF-NAME-COUNT     PICTURE 9(6)  COMP VALUE ZEROES.\n050300     05  FILLER              PICTURE 9(6)  COMP VALUE ZEROES.\n050400     05  ISPF-NAME      OCCURS 50 TIMES         PICTURE X(8).\n050500*        THIS ARRAY HAS BEEN DEFINED WITH A DIMENSION OF 50.     *\n050600*                 ADJUST ACCORDING TO YOUR REQUIREMENTS.         *\n050700******************************************************************\n050800*    ISPF-VARIABLE-LIST IS USED BY THE VDEFINE SERVICE TO        *\n050900*                      IDENTIFY THE VARIABLE(S) WHOSE STORAGE IS *\n051000*                      TO BE USED. EACH VARIABLE HERE CORRESPONDS*\n051100*                      BY POSITION TO AN ISPF VARIABLE IN THE    *\n051200*                      NAME LIST, SO THERE MUST BE AS MANY       *\n051300*                      VARIABLE NAMES AS THERE ARE ISPF NAMES.   *\n051400 01  ISPF-VARIABLE-LIST.\n051500     05  ISPF-VARIABLE  OCCURS 50 TIMES         PICTURE X(8).\n051600*        THIS ARRAY HAS BEEN DEFINED WITH A DIMENSION OF 50.     *\n051700*                 ADJUST ACCORDING TO YOUR REQUIREMENTS.         *\n051800******************************************************************\n051900*       END OF WORKING-STORAGE FIELDS FOR ISPF SERVICE CALLS     *\n052000******************************************************************\n052100     EJECT\n052200 PROCEDURE DIVISION.\n052300     SKIP1\n052400 A10-MAIN-PREPARATIONS.\n052500     MOVE  'VDEFINE' TO ISPF-SERVICE.\n052600     MOVE 08 TO ISPF-NAME-COUNT.\n052700     MOVE 'ROW1    ' TO ISPF-NAME(1).\n052800     MOVE 'ROW2    ' TO ISPF-NAME(2).\n052900     MOVE 'ROW3    ' TO ISPF-NAME(3).\n053000     MOVE 'ROW4    ' TO ISPF-NAME(4).\n053100     MOVE 'ROW5    ' TO ISPF-NAME(5).\n053200     MOVE 'ROW6    ' TO ISPF-NAME(6).\n053300     MOVE 'ROW7    ' TO ISPF-NAME(7).\n053400     MOVE 'ROW8    ' TO ISPF-NAME(8).\n053500     MOVE     'CHAR' TO ISPF-OPTION1.\n053600     MOVE    24 TO ISPF-LENGTH.\n053700     MOVE 'COPY    ' TO ISPF-OPTION2.\n053800     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n053900                           DIALOG-V1  ISPF-OPTION1\n054000                           ISPF-LENGTH  ISPF-OPTION2.\n054100     IF RETURN-CODE NOT = 0\n054200*                              8  - VARIABLE NOT FOUND\n054300*                              16 - DATA TRUNCATION OCCURED\n054400*                              20 - SEVERE ERROR\n054500         NEXT SENTENCE.\n054600\n054700     MOVE  'VDEFINE' TO ISPF-SERVICE.\n054800     MOVE 23 TO ISPF-NAME-COUNT.\n054900     MOVE 'MLINE01 ' TO ISPF-NAME(1).\n055000     MOVE 'MLINE02 ' TO ISPF-NAME(2).\n055100     MOVE 'MLINE03 ' TO ISPF-NAME(3).\n055200     MOVE 'MLINE04 ' TO ISPF-NAME(4).\n055300     MOVE 'MLINE05 ' TO ISPF-NAME(5).\n055400     MOVE 'MLINE06 ' TO ISPF-NAME(6).\n055500     MOVE 'MLINE07 ' TO ISPF-NAME(7).\n055600     MOVE 'MLINE08 ' TO ISPF-NAME(8).\n055700     MOVE 'MLINE09 ' TO ISPF-NAME(9).\n055800     MOVE 'MLINE10 ' TO ISPF-NAME(10).\n055900     MOVE 'MLINE11 ' TO ISPF-NAME(11).\n056000     MOVE 'MLINE12 ' TO ISPF-NAME(12).\n056100     MOVE 'MLINE13 ' TO ISPF-NAME(13).\n056200     MOVE 'MLINE14 ' TO ISPF-NAME(14).\n056300     MOVE 'MLINE15 ' TO ISPF-NAME(15).\n056400     MOVE 'MLINE16 ' TO ISPF-NAME(16).\n056500     MOVE 'MLINE17 ' TO ISPF-NAME(17).\n056600     MOVE 'MLINE18 ' TO ISPF-NAME(18).\n056700     MOVE 'MLINE19 ' TO ISPF-NAME(19).\n056800     MOVE 'MLINE20 ' TO ISPF-NAME(20).\n056900     MOVE 'MLINE21 ' TO ISPF-NAME(21).\n057000     MOVE 'MLINE22 ' TO ISPF-NAME(22).\n057100     MOVE 'MLINE23 ' TO ISPF-NAME(23).\n057200     MOVE     'CHAR' TO ISPF-OPTION1.\n057300     MOVE    50 TO ISPF-LENGTH.\n057400     MOVE 'COPY    ' TO ISPF-OPTION2.\n057500     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n057600                           DIALOG-V2  ISPF-OPTION1\n057700                           ISPF-LENGTH  ISPF-OPTION2.\n057800     IF RETURN-CODE NOT = 0\n057900*                              8  - VARIABLE NOT FOUND\n058000*                              16 - DATA TRUNCATION OCCURED\n058100*                              20 - SEVERE ERROR\n058200         NEXT SENTENCE.\n058300     MOVE  'VDEFINE' TO ISPF-SERVICE.\n058400     MOVE 02 TO ISPF-NAME-COUNT.\n058500     MOVE 'STRDTE  ' TO ISPF-NAME(1).\n058600     MOVE 'COND    ' TO ISPF-NAME(2).\n058700     MOVE     'CHAR' TO ISPF-OPTION1.\n058800     MOVE     6 TO ISPF-LENGTH.\n058900     MOVE 'COPY    ' TO ISPF-OPTION2.\n059000     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n059100                           DIALOG-V3  ISPF-OPTION1\n059200                           ISPF-LENGTH  ISPF-OPTION2.\n059300     IF RETURN-CODE NOT = 0\n059400*                              8  - VARIABLE NOT FOUND\n059500*                              16 - DATA TRUNCATION OCCURED\n059600*                              20 - SEVERE ERROR\n059700         NEXT SENTENCE.\n059800     MOVE  'VDEFINE' TO ISPF-SERVICE.\n059900     MOVE 03 TO ISPF-NAME-COUNT.\n060000     MOVE 'QDR     ' TO ISPF-NAME(1).\n060100     MOVE 'SCT     ' TO ISPF-NAME(2).\n060200     MOVE 'COM     ' TO ISPF-NAME(3).\n060300     MOVE     'CHAR' TO ISPF-OPTION1.\n060400     MOVE     3 TO ISPF-LENGTH.\n060500     MOVE 'COPY    ' TO ISPF-OPTION2.\n060600     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n060700                           DIALOG-V4 ISPF-OPTION1\n060800                           ISPF-LENGTH  ISPF-OPTION2.\n060900     IF RETURN-CODE NOT = 0\n061000*                              8  - VARIABLE NOT FOUND\n061100*                              16 - DATA TRUNCATION OCCURED\n061200*                              20 - SEVERE ERROR\n061300         NEXT SENTENCE.\n061400     MOVE  'VDEFINE' TO ISPF-SERVICE.\n061500     MOVE 04 TO ISPF-NAME-COUNT.\n061600     MOVE 'FLDA    ' TO ISPF-NAME(1).\n061700     MOVE 'FLDB    ' TO ISPF-NAME(2).\n061800     MOVE 'ENER    ' TO ISPF-NAME(3).\n061900     MOVE 'SHLD    ' TO ISPF-NAME(4).\n062000     MOVE     'CHAR' TO ISPF-OPTION1.\n062100     MOVE     4 TO ISPF-LENGTH.\n062200     MOVE 'COPY    ' TO ISPF-OPTION2.\n062300     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n062400                           DIALOG-V5  ISPF-OPTION1\n062500                           ISPF-LENGTH  ISPF-OPTION2.\n062600     IF RETURN-CODE NOT = 0\n062700*                              8  - VARIABLE NOT FOUND\n062800*                              16 - DATA TRUNCATION OCCURED\n062900*                              20 - SEVERE ERROR\n063000         NEXT SENTENCE.\n063100     MOVE  'VDEFINE' TO ISPF-SERVICE.\n063200     MOVE 01 TO ISPF-NAME-COUNT.\n063300     MOVE 'MESSAGEO' TO ISPF-NAME(1).\n063400     MOVE     'CHAR' TO ISPF-OPTION1.\n063500     MOVE    53 TO ISPF-LENGTH.\n063600     MOVE 'COPY    ' TO ISPF-OPTION2.\n063700     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n063800                           DIALOG-V6 ISPF-OPTION1\n063900                           ISPF-LENGTH  ISPF-OPTION2.\n064000     IF RETURN-CODE NOT = 0\n064100*                              8  - VARIABLE NOT FOUND\n064200*                              16 - DATA TRUNCATION OCCURED\n064300*                              20 - SEVERE ERROR\n064400         NEXT SENTENCE.\n064500     MOVE  'VDEFINE' TO ISPF-SERVICE.\n064600     MOVE 01 TO ISPF-NAME-COUNT.\n064700     MOVE 'QUADNAM ' TO ISPF-NAME(1).\n064800     MOVE     'CHAR' TO ISPF-OPTION1.\n064900     MOVE    16 TO ISPF-LENGTH.\n065000     MOVE 'COPY    ' TO ISPF-OPTION2.\n065100     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n065200                           DIALOG-V7  ISPF-OPTION1\n065300                           ISPF-LENGTH  ISPF-OPTION2.\n065400     IF RETURN-CODE NOT = 0\n065500*                              8  - VARIABLE NOT FOUND\n065600*                              16 - DATA TRUNCATION OCCURED\n065700*                              20 - SEVERE ERROR\n065800         NEXT SENTENCE.\n065900     MOVE  'VDEFINE' TO ISPF-SERVICE.\n066000     MOVE 01 TO ISPF-NAME-COUNT.\n066100     MOVE 'TP      ' TO ISPF-NAME(1).\n066200     MOVE     'CHAR' TO ISPF-OPTION1.\n066300     MOVE     2 TO ISPF-LENGTH.\n066400     MOVE 'COPY    ' TO ISPF-OPTION2.\n066500     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n066600                           M1-TORPEDOS  ISPF-OPTION1\n066700                           ISPF-LENGTH  ISPF-OPTION2.\n066800     IF RETURN-CODE NOT = 0\n066900*                              8  - VARIABLE NOT FOUND\n067000*                              16 - DATA TRUNCATION OCCURED\n067100*                              20 - SEVERE ERROR\n067200         NEXT SENTENCE.\n067300     MOVE  'VDEFINE' TO ISPF-SERVICE.\n067400     MOVE 01 TO ISPF-NAME-COUNT.\n067500     MOVE 'ZTIME   ' TO ISPF-NAME(1).\n067600     MOVE     'CHAR' TO ISPF-OPTION1.\n067700     MOVE     5 TO ISPF-LENGTH.\n067800     MOVE '        ' TO ISPF-OPTION2.\n067900     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n068000                           TIME-VAR  ISPF-OPTION1\n068100                           ISPF-LENGTH  ISPF-OPTION2.\n068200     IF RETURN-CODE NOT = 0\n068300*                              8  - VARIABLE NOT FOUND\n068400*                              16 - DATA TRUNCATION OCCURED\n068500*                              20 - SEVERE ERROR\n068600         NEXT SENTENCE.\n068700     PERFORM W10-GAME-BEGINS THRU W10-EXIT.\n068800     PERFORM C70-SRS-COMMAND THRU C70-EXIT.\n068900     GO TO A50-NEW-SCREENS.\n069000 A30-NEXT-COMMAND.\n069100     MOVE +0                     TO  WRAPUP-CODE.\n069200     MOVE +0                     TO  L-INDX.\n069300     SET MLINE-X1 TO L-INDX.\n069400     IF CMDI = L-NAV\n069500         PERFORM F00-NAV-COMMAND THRU F00-EXIT\n069600         GO TO A40-ENERGY-CHECK.\n069700     IF CMDI = L-LRS\n069800         PERFORM G00-LRS-COMMAND THRU G00-EXIT\n069900         GO TO A40-ENERGY-CHECK.\n070000     IF CMDI = L-PHA\n070100         PERFORM H00-PHA-COMMAND THRU H00-EXIT\n070200         GO TO A40-ENERGY-CHECK.\n070300     IF CMDI = L-TOR\n070400         PERFORM J00-TOR-COMMAND THRU J00-EXIT\n070500         GO TO A40-ENERGY-CHECK.\n070600     IF CMDI = L-SHE\n070700         PERFORM L00-SHE-COMMAND THRU L00-EXIT\n070800         GO TO A40-ENERGY-CHECK.\n070900     IF CMDI = L-DAM\n071000         PERFORM M00-DAM-COMMAND THRU M00-EXIT\n071100         GO TO A40-ENERGY-CHECK.\n071200     IF CMDI = L-COM\n071300         PERFORM K00-COM-COMMAND THRU K00-EXIT\n071400         GO TO A40-ENERGY-CHECK.\n071500     IF CMDI = L-SAV\n071600         PERFORM B00-SAV-COMMAND THRU B00-EXIT\n071700         GO TO A40-ENERGY-CHECK.\n071800     IF CMDI = L-RES\n071900         PERFORM B10-RES-COMMAND THRU B10-EXIT\n072000         GO TO A40-ENERGY-CHECK.\n072100     IF CMDI = L-END\n072200         MOVE +2 TO WRAPUP-CODE\n072300         MOVE 'YOUR LACK OF CONFIDENCE HAS DOOMED THE GALAXY.'\n072400                                 TO  MSG-LINE\n072500         PERFORM C50-NEXT-MSG THRU C50-EXIT\n072600         GO TO A40-ENERGY-CHECK.\n072700     PERFORM V70-VALID-COMMANDS THRU V70-EXIT.\n072800 A40-ENERGY-CHECK.\n072900     IF WRAPUP-CODE > +0\n073000         GO TO A50-NEW-SCREENS.\n073100     IF ENERGY > +10\n073200         GO TO A50-NEW-SCREENS.\n073300     IF (SHIELD + ENERGY) > +10\n073400         IF DAM-SHE NOT < +0\n073500             GO  TO A50-NEW-SCREENS.\n073600     IF ENERGY < +0\n073700         MOVE +0                 TO  ENERGY.\n073800     MOVE +1 TO WRAPUP-CODE.\n073900 A50-NEW-SCREENS.\n074000     PERFORM C70-SRS-COMMAND THRU C70-EXIT.\n074100     IF WRAPUP-CODE > +0\n074200         PERFORM Z80-GAME-OVER THRU Z80-EXIT\n074300         GO TO A50-NORESP.\n074400     GO TO A60-BMS-OUT-MAP1.\n074500 A50-NORESP.\n074600 A60-BMS-OUT-MAP1.\n074700 A60-NORESP.\n074800 A70-BMS-OUT-MAP2.\n074900     MOVE  'DISPLAY' TO ISPF-SERVICE.\n075000     MOVE 'TRKPMAIN' TO ISPF-PANEL-NAME.\n075100     MOVE '        ' TO ISPF-MSG-ID.\n075200     MOVE '        ' TO ISPF-FIELD-NAME.\n075300     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-PANEL-NAME\n075400                           ISPF-MSG-ID  ISPF-FIELD-NAME.\n075500*    IF RETURN-CODE NOT = 0\n075600*                              8  - END OR RETURN COMMAND ENTERED\n075700*                              12 - PANEL, MESSAGE, OR CURSOR\n075800*                                   FIELD COULD NOT BE FOUND\n075900*                              16 - DATA TRUNCATION OR TRANSLATION\n076000*                                   ERROR\n076100*                              20 - SEVERE ERROR\n076200**********  ERROR\n076300*        MOVE 'A70-' TO ABEND-CODE,\n076400*        GO TO Z99-ABEND.\n076500 A70-NORESP.\n076600     IF WRAPUP-CODE > +0\n076700         GO TO A90-FINAL-RETURN.\n076800     GO TO A30-NEXT-COMMAND.\n076900 A90-FINAL-RETURN.\n077000     STOP RUN.\n077100     EJECT\n077200 B00-SAV-COMMAND.\n077300     OPEN OUTPUT GAME-FILE.\n077400     WRITE GAME-RECORD FROM TEMPSTRG.\n077500     CLOSE GAME-FILE.\n077600 B00-EXIT.\n077700     EXIT.\n077800\n077900 B10-RES-COMMAND.\n078000     OPEN INPUT GAME-FILE.\n078100     READ GAME-FILE INTO TEMPSTRG.\n078200     CLOSE GAME-FILE.\n078300 B10-EXIT.\n078400     EXIT.\n078500\n078600 C30-EDIT-INPUT-QTY.\n078700     MOVE '   '              TO  C30-MSG.\n078800     MOVE 'N'                TO  C30-NON-BLANK-FLAG\n078900                                 C30-NEG-FLAG\n079000                                 C30-DECIMAL-FLAG.\n079100     MOVE +0                 TO  C30-DIGIT-CTR\n079200                                 C30-DECIMAL-CTR\n079300                                 C30-OUT-QTY.\n079400     MOVE -1                 TO  C30-ADJ-QTY.\n079500     MOVE +5                     TO  L-INDX.\n079600     SET C30-IX1 TO L-INDX.\n079700     MOVE +4                     TO  L-INDX.\n079800     SET C30-OX1 TO L-INDX.\n079900 C30-EDIT-QTY-LOOP.\n080000     SET C30-IX1 DOWN BY +1.\n080100     IF C30-IX1 < +1\n080200         GO TO C30-ADJUST-OUT-QTY.\n080300     IF C30-I-CHAR (C30-IX1) = ' '\n080400         IF C30-NON-BLANK-FLAG = 'N'\n080500             GO TO C30-EDIT-QTY-LOOP\n080600         ELSE\n080700             GO TO C30-ERR.\n080800     IF C30-I-CHAR (C30-IX1) = '-'\n080900         IF C30-NON-BLANK-FLAG = 'N'\n081000             MOVE 'Y' TO C30-NON-BLANK-FLAG\n081100                         C30-NEG-FLAG\n081200             GO TO C30-EDIT-QTY-LOOP\n081300         ELSE\n081400             GO TO C30-ERR.\n081500     IF C30-I-CHAR (C30-IX1) = '.'\n081600         IF C30-DECIMAL-FLAG = 'N'\n081700             MOVE 'Y' TO C30-NON-BLANK-FLAG\n081800                         C30-DECIMAL-FLAG\n081900             MOVE C30-DIGIT-CTR TO C30-DECIMAL-CTR\n082000             GO TO C30-EDIT-QTY-LOOP\n082100         ELSE\n082200             GO TO C30-ERR.\n082300     IF C30-I-CHAR (C30-IX1) IS NOT NUMERIC\n082400         GO TO C30-ERR.\n082500     MOVE 'Y' TO C30-NON-BLANK-FLAG.\n082600     ADD +1 TO C30-DIGIT-CTR.\n082700     MOVE C30-I-CHAR (C30-IX1)  TO  C30-O-CHAR (C30-OX1).\n082800     SET C30-OX1 DOWN BY +1.\n082900     GO TO C30-EDIT-QTY-LOOP.\n083000 C30-ADJUST-OUT-QTY.\n083100     IF C30-NEG-FLAG = 'Y'\n083200         MULTIPLY -1 BY C30-OUT-QTY.\n083300     COMPUTE C30-ADJ-QTY  ROUNDED =\n083400         C30-OUT-QTY / (10 ** C30-DECIMAL-CTR).\n083500     GO TO C30-EXIT.\n083600 C30-ERR.\n083700     MOVE 'ERR' TO C30-MSG.\n083800 C30-EXIT.  EXIT.\n083900     SKIP1\n084000 C40-GET-RND.\n084100     COMPUTE RND-WORK = RND-WORK * RND-MULT.\n084200 C40-EXIT.  EXIT.\n084300     SKIP1\n084400 C50-NEXT-MSG.\n084500     IF MLINE-X1 < +23\n084600         SET MLINE-X1 UP BY +1\n084700     ELSE\n084800         MOVE '*** OVERFLOW *** OVERFLOW *** OVERFLOW ***'\n084900                                 TO  MSG-LINE.\n085000***  I HAVE ONLY SEEN THE ABOVE 'OVERFLOW' OCCUR ONCE.\n085100***  IT SHOULD NOT PRESENT ANY REAL INCONVIENCE.\n085200     MOVE MSG-LINE               TO  MLINE (MLINE-X1).\n085300 C50-EXIT.  EXIT.\n085400     SKIP1\n085500 C60-BLANK-MSG.\n085600     MOVE SPACES                 TO  MSG-LINE.\n085700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n085800 C60-EXIT.  EXIT.\n085900     SKIP1\n086000 C70-SRS-COMMAND.\n086100     MOVE ' GREEN'               TO  CONDITION.\n086200     IF ENERGY < (0.1 * INIT-ENERGY-EPRISE)\n086300         MOVE 'YELLOW'           TO  CONDITION.\n086400     IF CURR-KLING > +0\n086500         MOVE ' *RED*'           TO  CONDITION.\n086600     IF DOCKING-FLAG = 'Y'\n086700         MOVE 'DOCKED'           TO  CONDITION.\n086800     MOVE CURR-QUAD              TO  M1-QUAD-NAME.\n086900     MOVE STARDATE               TO  M1-STARDATE.\n087000     MOVE CONDITION              TO  M1-CONDITION.\n087100     MOVE EPRISE-GLXY-ROW                     TO  M1-GLXY-ROW.\n087200     MOVE L-COLON                TO  M1-QUAD-SEP.\n087300     MOVE EPRISE-GLXY-COL                     TO  M1-GLXY-COL.\n087400     MOVE EPRISE-ROW             TO  M1-SECT-ROW.\n087500     MOVE L-COLON                TO  M1-SECT-SEP.\n087600     MOVE EPRISE-COL             TO  M1-SECT-COL.\n087700     MOVE ENERGY                 TO  M1-ENERGY.\n087800     MOVE SHIELD                 TO  M1-SHIELD.\n087900     MOVE TORPEDOS               TO  M1-TORPEDOS.\n088000     IF (DAM-SRS < +0) AND (MLINE-X1 < +21)\n088100         PERFORM C60-BLANK-MSG THRU C60-EXIT\n088200         MOVE '*** SHORT RANGE SENSORS ARE OUT ***'\n088300                                 TO  MSG-LINE\n088400         PERFORM C50-NEXT-MSG THRU C50-EXIT\n088500         PERFORM C60-BLANK-MSG THRU C60-EXIT\n088600         GO TO C70-EXIT.\n088700     MOVE +1 TO L-INDX.\n088800     SET SECTOR-X1 TO L-INDX.\n088900     MOVE +0 TO L-INDX.\n089000     SET SECTOR-X2 TO L-INDX.\n089100 C70-SRS-LOOP.\n089200     SET SECTOR-X2 UP BY +1.\n089300     IF SECTOR-X2 > +8\n089400         IF SECTOR-X1 < +8\n089500             SET SECTOR-X1 UP BY +1\n089600             MOVE +0 TO L-INDX\n089700             SET SECTOR-X2 TO L-INDX\n089800         ELSE\n089900             GO TO C70-EXIT.\n090000     SET M1-X1 TO SECTOR-X1.\n090100     SET M1-X2 TO SECTOR-X2.\n090200     MOVE SECTOR-DISP (SECTOR-X1, SECTOR-X2)\n090300                                 TO  M1-DISP (M1-X1, M1-X2).\n090400     GO TO C70-SRS-LOOP.\n090500 C70-EXIT.  EXIT.\n090600     EJECT\n090700 F00-NAV-COMMAND.\n090800     MOVE 'A'                    TO  NAV-EDIT-FLAG.\n090900     IF FLDA = SPACES\n091000         PERFORM T10-NAV-PROMPT THRU T10-EXIT\n091100         GO TO F00-EXIT.\n091200     MOVE FLDA                   TO  C30-IN-QTY.\n091300     PERFORM C30-EDIT-INPUT-QTY THRU C30-EXIT.\n091400     IF (C30-ADJ-QTY < +0) OR (C30-ADJ-QTY > +360)\n091500         PERFORM T10-NAV-PROMPT THRU T10-EXIT\n091600         GO TO F00-EXIT.\n091700     COMPUTE COURSE ROUNDED = 1 + (C30-ADJ-QTY / 45).\n091800     MOVE 'B'                    TO  NAV-EDIT-FLAG.\n091900     IF FLDB  = SPACES\n092000         PERFORM T10-NAV-PROMPT THRU T10-EXIT\n092100         GO TO F00-EXIT.\n092200     MOVE FLDB                   TO  C30-IN-QTY.\n092300     PERFORM C30-EDIT-INPUT-QTY THRU C30-EXIT.\n092400     IF (C30-ADJ-QTY < +0.01) OR (C30-ADJ-QTY > +8)\n092500         PERFORM T10-NAV-PROMPT THRU T10-EXIT\n092600         GO TO F00-EXIT.\n092700*******  INSTEAD OF RESTRICTING THE WARP FACTOR DURING ENGINE\n092800*******  DAMAGE, SOME RANDOM DEVIATION CAN BE EXPECTED IN\n092900*******  BOTH THE WARP FACTOR AND COURSE WHILE DAMAGED.\n093000**** IF (C30-ADJ-QTY > 0.2) AND (DAM-NAV < +0)\n093100****     PERFORM T10-NAV-PROMPT THRU T10-EXIT\n093200****     GO TO F00-EXIT.\n093300     MOVE C30-ADJ-QTY            TO  WARP-FACTOR.\n093400     COMPUTE SECTORS-MOVE-TOTL ROUNDED = WARP-FACTOR * 8.\n093500     COMPUTE WARP-ENERGY ROUNDED = (WARP-FACTOR * 8) + 10.\n093600     IF WARP-ENERGY NOT > ENERGY\n093700         GO TO F00-OKAY-TO-PROCEED.\n093800     MOVE 'ENGINEERING REPORTS INSUFFICIENT ENERGY AVAILABLE'\n093900                                 TO  MSG-LINE.\n094000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n094100     MOVE '   FOR MANEUVERING AT WARP      !'\n094200                                 TO  MSG-LINE.\n094300     MOVE FLDB                   TO  MSG-LINE28-31.\n094400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n094500     IF (WARP-ENERGY > (ENERGY + SHIELD)) OR (DAM-SHE < +0)\n094600         GO TO F00-EXIT.\n094700     IF ENERGY > (0.5 * WARP-ENERGY)\n094800         GO TO F00-OKAY-TO-PROCEED.\n094900     MOVE 'DEFLECTOR CONTROL ROOM ACKNOWLEDGES       UNITS'\n095000                                 TO  MSG-LINE.\n095100     MOVE SHIELD TO TEMP-ZZZ9.\n095200     MOVE TEMP-ZZZ9              TO  MSG-LINE37-40.\n095300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n095400     MOVE '   OF ENERGY PRESENTLY DEPLOYED TO SHIELDS.'\n095500                                 TO  MSG-LINE.\n095600     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n095700     MOVE 'ADJUSTING THE SHIELDS TO ZZZ9 UNITS WILL MAKE YOUR'\n095800                                 TO  MSG-LINE.\n095900     COMPUTE TEMP-ZZZ9 = (SHIELD + ENERGY) - WARP-ENERGY.\n096000     MOVE TEMP-ZZZ9              TO  MSG-LINE26-29.\n096100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n096200     MOVE '   WARP REQUEST POSSIBLE, SIR!!'\n096300                                 TO  MSG-LINE.\n096400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n096500     GO TO F00-EXIT.\n096600 F00-OKAY-TO-PROCEED.\n096700     PERFORM Q10-KLINGONS-FIRE THRU Q10-EXIT.\n096800     IF WRAPUP-CODE > +0\n096900         GO TO F00-EXIT.\n097000     PERFORM Q50-MOVE-KLINGONS THRU Q50-EXIT\n097100         VARYING KLING-X1 FROM 1 BY 1\n097200         UNTIL KLING-X1 > MAX-KLING.\n097300     IF DAM-NAV < +0\n097400         PERFORM T60-NAV-DAMAGED THRU T60-EXIT.\n097500     IF WARP-FACTOR < +1\n097600         COMPUTE STARDATES-USED ROUNDED = WARP-FACTOR\n097700     ELSE\n097800         MOVE 1 TO STARDATES-USED.\n097900     PERFORM F10-MOVE-EPRISE THRU F10-EXIT.\n098000     MOVE 'N' TO DAM-HDG-FLAG.\n098100     PERFORM F20-NORMAL-DAMAGE-REPAIRS THRU F20-EXIT\n098200         VARYING DAM-SUB FROM +1 BY +1\n098300         UNTIL DAM-SUB > +8.\n098400     PERFORM C40-GET-RND THRU C40-EXIT.\n098500     IF RND < +0.08\n098600         PERFORM R30-RANDOM-DAMAGE THRU R30-EXIT.\n098700     IF RND > +0.85\n098800         PERFORM R50-RANDOM-REPAIR THRU R50-EXIT.\n098900     PERFORM F40-IS-EPRISE-DOCKED THRU F40-EXIT.\n099000     IF DOCKING-FLAG = 'Y'\n099100         PERFORM V10-OPTIONAL-REPAIRS THRU V10-EXIT.\n099200 F00-EXIT.  EXIT.\n099300     SKIP1\n099400 F10-MOVE-EPRISE.\n099500     ADD STARDATES-USED       TO  STARDATE.\n099600     SET SECTOR-X1 TO EPRISE-ROW.\n099700     SET SECTOR-X2 TO EPRISE-COL.\n099800     MOVE L-NULL TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n099900     IF COURSE NOT < +9\n100000         SUBTRACT +8 FROM COURSE.\n100100     MOVE COURSE TO TEMP-999.\n100200     SET C-X1 TO TEMP-999.\n100300     COMPUTE STEP-VERT = C-VERT (C-X1)\n100400           + ((C-VERT (C-X1 + 1) - C-VERT (C-X1))\n100500              * (COURSE - TEMP-999)).\n100600     COMPUTE STEP-HORZ = C-HORZ (C-X1)\n100700           + ((C-HORZ (C-X1 + 1) - C-HORZ (C-X1))\n100800              * (COURSE - TEMP-999)).\n100900     MOVE EPRISE-VERT TO WORK-VERT.\n101000     MOVE EPRISE-HORZ TO WORK-HORZ.\n101100     MOVE EPRISE-GLXY-ROW TO PREV-GLXY-ROW.\n101200     MOVE EPRISE-GLXY-COL TO PREV-GLXY-COL.\n101300     MOVE +0                     TO  SECTORS-MOVE-CURR.\n101400     MOVE ' ' TO EPRISE-MOVE-FLAG.\n101500     PERFORM F15-NUDGE-EPRISE THRU F15-EXIT\n101600         UNTIL EPRISE-MOVE-FLAG NOT = ' '.\n101700     IF EPRISE-MOVE-FLAG = '2'\n101800         PERFORM S10-EPRISE-TO-NEW-QUAD THRU S10-EXIT.\n101900     SET SECTOR-X1 TO EPRISE-ROW.\n102000     SET SECTOR-X2 TO EPRISE-COL.\n102100     MOVE L-EPRISE TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n102200     PERFORM F30-ADJ-ENERGY-FOR-MOVE THRU F30-EXIT.\n102300     IF STARDATE > ENDDATE\n102400         MOVE +4 TO WRAPUP-CODE.\n102500 F10-EXIT. EXIT.\n102600     SKIP1\n102700 F15-NUDGE-EPRISE.\n102800     ADD +1 TO SECTORS-MOVE-CURR.\n102900     IF SECTORS-MOVE-CURR > SECTORS-MOVE-TOTL\n103000         MOVE '1' TO EPRISE-MOVE-FLAG\n103100         GO TO F15-EXIT.\n103200     ADD STEP-VERT TO EPRISE-VERT.\n103300     ADD STEP-HORZ TO EPRISE-HORZ.\n103400     IF (EPRISE-VERT < +1) OR (EPRISE-VERT NOT < +9)\n103500     OR (EPRISE-HORZ < +1) OR (EPRISE-HORZ NOT < +9)\n103600         MOVE '2' TO EPRISE-MOVE-FLAG\n103700         GO TO F15-EXIT.\n103800     SET SECTOR-X1 TO EPRISE-ROW.\n103900     SET SECTOR-X2 TO EPRISE-COL.\n104000     IF SECTOR-DISP (SECTOR-X1, SECTOR-X2) = L-NULL\n104100         GO TO F15-EXIT.\n104200     MOVE SECTOR-DISP (SECTOR-X1, SECTOR-X2) TO OBSTACLE.\n104300     SUBTRACT STEP-VERT FROM EPRISE-VERT.\n104400     SUBTRACT STEP-HORZ FROM EPRISE-HORZ.\n104500     MOVE '1' TO EPRISE-MOVE-FLAG.\n104600     MOVE 'WARP ENGINES SHUT DOWN AT SECTOR  :'\n104700                                 TO  MSG-LINE.\n104800     MOVE EPRISE-ROW                     TO  MSG-LINE34.\n104900     MOVE EPRISE-COL                     TO  MSG-LINE36.\n105000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n105100     IF OBSTACLE = L-STARS\n105200         MOVE '  DUE TO BAD NAVIGATION.'\n105300                                 TO  MSG-LINE.\n105400     IF OBSTACLE = L-KLING\n105500         MOVE '  DUE TO A DARING KLINGON MANEUVER.'\n105600                                 TO  MSG-LINE.\n105700     IF OBSTACLE = L-SBASE\n105800         MOVE '  TO AVOID RAMMING THE STARBASE.'\n105900                                 TO  MSG-LINE.\n106000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n106100 F15-EXIT.  EXIT.\n106200     SKIP1\n106300 F20-NORMAL-DAMAGE-REPAIRS.\n106400     IF DAM-REPAIR (DAM-SUB) NOT < +0\n106500         GO TO F20-EXIT.\n106600     ADD STARDATES-USED TO DAM-REPAIR (DAM-SUB).\n106700     IF DAM-REPAIR (DAM-SUB) < +0\n106800         GO TO F20-EXIT.\n106900     IF DAM-REPAIR (DAM-SUB) > +0\n107000         MOVE +0                 TO  DAM-REPAIR (DAM-SUB).\n107100     IF DAM-HDG-FLAG = 'N'\n107200         MOVE 'Y' TO DAM-HDG-FLAG\n107300         MOVE 'DAMAGE CONTROL REPORT:'\n107400                                 TO  MSG-LINE\n107500         PERFORM C50-NEXT-MSG THRU C50-EXIT.\n107600     MOVE '                       REPAIR COMPLETED'\n107700                                 TO  MSG-LINE.\n107800     MOVE DAM-NAME (DAM-SUB)    TO  MSG-LINE11-22.\n107900     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n108000 F20-EXIT.  EXIT.\n108100     SKIP1\n108200 F30-ADJ-ENERGY-FOR-MOVE.\n108300     COMPUTE ENERGY = ENERGY - WARP-ENERGY.\n108400     IF ENERGY NOT < +0\n108500         GO TO F30-EXIT.\n108600     MOVE 'SHIELD CONTROL SUPPLIED ENERGY FOR THE MANEUVER.'\n108700                                 TO  MSG-LINE.\n108800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n108900     ADD ENERGY TO SHIELD.\n109000     MOVE +0 TO ENERGY.\n109100     IF SHIELD < +0\n109200         MOVE +0 TO SHIELD.\n109300 F30-EXIT.  EXIT.\n109400     SKIP1\n109500 F40-IS-EPRISE-DOCKED.\n109600     SET SECTOR-X1 TO EPRISE-ROW.\n109700     SET SECTOR-X2 TO EPRISE-COL.\n109800     MOVE 'N' TO DOCKING-FLAG.\n109900     IF SECTOR-X1 > +1\n110000         SET SECTOR-X1 DOWN BY +1\n110100         PERFORM F45-DOCK-CHECK THRU F45-EXIT\n110200         SET SECTOR-X1  UP  BY +1.\n110300     PERFORM F45-DOCK-CHECK THRU F45-EXIT.\n110400     IF SECTOR-X1 < +8\n110500         SET SECTOR-X1  UP  BY +1\n110600         PERFORM F45-DOCK-CHECK THRU F45-EXIT\n110700         SET SECTOR-X1 DOWN BY +1.\n110800     IF (DOCKING-FLAG = 'Y')\n110900     AND ((ENERGY + SHIELD) < INIT-ENERGY-EPRISE)\n111000         MOVE INIT-ENERGY-EPRISE TO  ENERGY\n111100         MOVE INIT-TORPEDOS      TO  TORPEDOS\n111200         MOVE +0                 TO  SHIELD\n111300         MOVE 'SHIELDS DROPPED FOR DOCKING PURPOSES.'\n111400                                 TO  MSG-LINE\n111500         PERFORM C50-NEXT-MSG THRU C50-EXIT.\n111600 F40-EXIT.  EXIT.\n111700     SKIP1\n111800 F45-DOCK-CHECK.\n111900     IF SECTOR-X2 > +1\n112000         IF SECTOR-DISP (SECTOR-X1, SECTOR-X2 - 1) = L-SBASE\n112100             MOVE 'Y' TO DOCKING-FLAG.\n112200     IF SECTOR-X2 < +8\n112300         IF SECTOR-DISP (SECTOR-X1, SECTOR-X2 + 1) = L-SBASE\n112400             MOVE 'Y' TO DOCKING-FLAG.\n112500     IF SECTOR-DISP (SECTOR-X1, SECTOR-X2) = L-SBASE\n112600         MOVE 'Y' TO DOCKING-FLAG.\n112700 F45-EXIT.  EXIT.\n112800     EJECT\n112900 G00-LRS-COMMAND.\n113000     IF DAM-LRS < +0\n113100         MOVE '*** LONG RANGE SENSORS ARE INOPERABLE ***'\n113200                                 TO  MSG-LINE\n113300         PERFORM C50-NEXT-MSG THRU C50-EXIT\n113400         GO TO G00-EXIT.\n113500     SET G-X1 TO EPRISE-GLXY-ROW.\n113600     SET G-X2 TO EPRISE-GLXY-COL.\n113700     MOVE SPACES                 TO  MSG-LINE.\n113800     MOVE L-LRS-TOP              TO  MSG-LINE01-20.\n113900     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n114000     SET G-X1 DOWN BY +1.\n114100     PERFORM G10-LRS-PRINT THRU G10-EXIT.\n114200     SET G-X1  UP  BY +1.\n114300     PERFORM G10-LRS-PRINT THRU G10-EXIT.\n114400     SET G-X1  UP  BY +1.\n114500     PERFORM G10-LRS-PRINT THRU G10-EXIT.\n114600     SET G-X1 DOWN BY +1.\n114700 G00-EXIT.  EXIT.\n114800     SKIP1\n114900 G10-LRS-PRINT.\n115000     MOVE SPACES TO  LRS-LINE.\n115100     MOVE +0 TO L-INDX.\n115200     SET LRS-X1 TO L-INDX.\n115300     MOVE ':'    TO  LRS-SEP1\n115400                     LRS-SEP (LRS-X1 + 1)\n115500                     LRS-SEP (LRS-X1 + 2)\n115600                     LRS-SEP (LRS-X1 + 3).\n115700     IF (G-X1 < +1) OR (G-X1 > +8)\n115800         GO TO G10-CONTINUE.\n115900     MOVE '1'                    TO  G-STATUS (G-X1, G-X2).\n116000     MOVE G-TOTAL (G-X1, G-X2)   TO  LRS-SECT (LRS-X1 + 2).\n116100     IF G-X2 > +1\n116200         MOVE '1'                TO  G-STATUS (G-X1, G-X2 - 1)\n116300         MOVE G-TOTAL (G-X1, G-X2 - 1) TO LRS-SECT (LRS-X1 + 1).\n116400     IF G-X2 < +8\n116500         MOVE '1'                TO  G-STATUS (G-X1, G-X2 + 1)\n116600         MOVE G-TOTAL (G-X1, G-X2 + 1) TO LRS-SECT (LRS-X1 + 3).\n116700 G10-CONTINUE.\n116800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n116900     MOVE L-LRS-TOP              TO  MSG-LINE01-20.\n117000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n117100 G10-EXIT.  EXIT.\n117200     EJECT\n117300 H00-PHA-COMMAND.\n117400     IF CURR-KLING NOT > +0\n117500         MOVE 'SCIENCE OFFICER SPOCK REPORTS, SENSORS SHOW'\n117600                                 TO  MSG-LINE\n117700         PERFORM C50-NEXT-MSG THRU C50-EXIT\n117800         MOVE '   NO ENEMY SHIPS IN THIS QUADRANT.'\n117900                                 TO  MSG-LINE\n118000         PERFORM C50-NEXT-MSG THRU C50-EXIT\n118100         GO TO H00-EXIT.\n118200     IF DAM-PHA < +0\n118300         MOVE '*** PHASERS ARE INOPERATIVE ***'\n118400                                 TO  MSG-LINE\n118500         PERFORM C50-NEXT-MSG THRU C50-EXIT\n118600         GO TO H00-EXIT.\n118700     IF DOCKING-FLAG = 'Y'\n118800         MOVE 'PHASERS ARE DEACTIVATED WHILE DOCKED'\n118900                                 TO  MSG-LINE\n119000         PERFORM C50-NEXT-MSG THRU C50-EXIT\n119100         GO TO H00-EXIT.\n119200     IF DAM-COM < +0\n119300         MOVE '*** COMPUTER FAILURE HAMPERS ACCURACY ***'\n119400                                 TO  MSG-LINE\n119500         PERFORM C50-NEXT-MSG THRU C50-EXIT.\n119600     IF FLDA  = SPACES\n119700         PERFORM T40-PHA-PROMPT THRU T40-EXIT\n119800         GO TO H00-EXIT.\n119900     MOVE FLDA                   TO  C30-IN-QTY.\n120000     PERFORM C30-EDIT-INPUT-QTY THRU C30-EXIT.\n120100     IF (C30-ADJ-QTY < +1) OR (C30-ADJ-QTY > ENERGY)\n120200         PERFORM T40-PHA-PROMPT THRU T40-EXIT\n120300         GO TO H00-EXIT.\n120400     MOVE C30-ADJ-QTY            TO  PHASER-ENERGY.\n120500     SUBTRACT PHASER-ENERGY FROM ENERGY.\n120600     PERFORM Q10-KLINGONS-FIRE THRU Q10-EXIT.\n120700     IF WRAPUP-CODE > +0\n120800         GO TO H00-EXIT.\n120900     MOVE 'PHASERS ARE LOCKED ON TARGET'\n121000                                 TO  MSG-LINE.\n121100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n121200     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n121300     IF DAM-COM < +0\n121400         PERFORM C40-GET-RND THRU C40-EXIT\n121500         COMPUTE PHASER-ENERGY = PHASER-ENERGY * (RND ** 0.5).\n121600     COMPUTE PHASER-ENERGY = PHASER-ENERGY / CURR-KLING.\n121700     MOVE +0 TO L-INDX.\n121800     SET KLING-X1 TO L-INDX.\n121900     PERFORM H10-PHASER-1-KLINGON THRU H10-EXIT\n122000         MAX-KLING TIMES.\n122100 H00-EXIT.  EXIT.\n122200     SKIP1\n122300 H10-PHASER-1-KLINGON.\n122400     SET KLING-X1 UP BY +1.\n122500     IF KLING-ENERGY (KLING-X1) NOT > +0\n122600         GO TO H10-EXIT.\n122700     PERFORM Q30-DIST-FROM-KLINGON THRU Q30-EXIT.\n122800     PERFORM C40-GET-RND THRU C40-EXIT.\n122900     COMPUTE HIT ROUNDED =\n123000         (PHASER-ENERGY * (1 - (0.1 * RND))) / (DIST ** 0.5).\n123100     IF HIT < (0.15 * KLING-ENERGY (KLING-X1))\n123200         MOVE 'SENSORS SHOW NO DAMAGE TO KLINGON AT SECTOR  :'\n123300                                   TO  MSG-LINE\n123400         MOVE KLING-ROW (KLING-X1) TO  MSG-LINE45\n123500         MOVE KLING-COL (KLING-X1) TO  MSG-LINE47\n123600         PERFORM C50-NEXT-MSG THRU C50-EXIT\n123700         GO TO H10-EXIT.\n123800     SUBTRACT HIT FROM KLING-ENERGY (KLING-X1).\n123900     MOVE HIT TO TEMP-ZZZ9.\n124000     MOVE '     UNITS HIT ON KLINGON AT SECTOR  :'\n124100                                 TO  MSG-LINE.\n124200     MOVE TEMP-ZZZ9              TO  MSG-LINE01-04.\n124300     MOVE KLING-ROW (KLING-X1)   TO  MSG-LINE37.\n124400     MOVE KLING-COL (KLING-X1)   TO  MSG-LINE39.\n124500     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n124600     IF KLING-ENERGY (KLING-X1) > +0\n124700         MOVE '     (SENSORS SHOW      UNITS REMAINING)'\n124800                                 TO  MSG-LINE\n124900         MOVE KLING-ENERGY (KLING-X1) TO TEMP-ZZZ9\n125000         MOVE TEMP-ZZZ9          TO  MSG-LINE20-23\n125100         PERFORM C50-NEXT-MSG THRU C50-EXIT\n125200         GO TO H10-EXIT.\n125300     SET SECTOR-X1 TO KLING-ROW (KLING-X1).\n125400     SET SECTOR-X2 TO KLING-COL (KLING-X1).\n125500     PERFORM I10-KLINGON-DESTROYED THRU I10-EXIT.\n125600 H10-EXIT.  EXIT.\n125700     SKIP3\n125800 I10-KLINGON-DESTROYED.\n125900***\n126000***  REQUIRES THAT 'SECTOR-X1' & 'SECTOR-X2' POINT TO THE KLINGON.\n126100***\n126200     MOVE L-NULL TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n126300     MOVE '     **** KLINGON DESTROYED ****'\n126400                                 TO  MSG-LINE.\n126500     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n126600     SET G-X1 TO EPRISE-GLXY-ROW.\n126700     SET G-X2 TO EPRISE-GLXY-COL.\n126800     SUBTRACT +1 FROM CURR-KLING\n126900                      KLING-TOTAL\n127000                      G-KLING (G-X1, G-X2).\n127100     IF KLING-TOTAL NOT > +0\n127200         MOVE +5 TO WRAPUP-CODE.\n127300     IF CMDI = L-PHA\n127400         GO TO I10-FOUND-KLING-X1.\n127500     MOVE +0 TO L-INDX.\n127600     SET KLING-X1 TO L-INDX.\n127700 I10-FIND-KLING-X1.\n127800     SET KLING-X1 UP BY +1.\n127900     IF KLING-X1 > MAX-KLING\n128000         GO TO I10-EXIT.\n128100     IF KLING-ROW (KLING-X1) NOT = SECTOR-X1\n128200         GO TO I10-FIND-KLING-X1.\n128300     IF KLING-COL (KLING-X1) NOT = SECTOR-X2\n128400         GO TO I10-FIND-KLING-X1.\n128500 I10-FOUND-KLING-X1.\n128600     MOVE +0 TO KLING-ENERGY (KLING-X1)\n128700                KLING-ROW (KLING-X1)\n128800                KLING-COL (KLING-X1).\n128900 I10-EXIT.  EXIT.\n129000     EJECT\n129100 J00-TOR-COMMAND.\n129200     IF DAM-TOR < +0\n129300         MOVE '*** PHOTON TORPEDO TUBES ARE NOT OPERATIONAL ***'\n129400                                 TO  MSG-LINE\n129500         PERFORM C50-NEXT-MSG THRU C50-EXIT\n129600         GO TO J00-EXIT.\n129700     IF DOCKING-FLAG = 'Y'\n129800         MOVE 'PHOTON TUBES ARE DEACTIVATED WHILE DOCKED'\n129900                                 TO  MSG-LINE\n130000         PERFORM C50-NEXT-MSG THRU C50-EXIT\n130100         GO TO J00-EXIT.\n130200     IF TORPEDOS NOT > +0\n130300         MOVE 'ALL PHOTON TORPEDOS HAVE BEEN EXPENDED, SIR.'\n130400                                 TO  MSG-LINE\n130500         PERFORM C50-NEXT-MSG THRU C50-EXIT\n130600         GO TO J00-EXIT.\n130700     IF ENERGY < TOR-ENERGY\n130800         MOVE 'AT LEAST Z9 ENERGY UNITS REQUIRED TO FIRE TORPEDOS'\n130900                                 TO  MSG-LINE\n131000         MOVE TOR-ENERGY TO TEMP-Z9\n131100         MOVE TEMP-Z9            TO  MSG-LINE10-11\n131200         PERFORM C50-NEXT-MSG THRU C50-EXIT\n131300         GO TO J00-EXIT.\n131400     IF FLDA  = SPACES\n131500         PERFORM T30-TOR-PROMPT THRU T30-EXIT\n131600         GO TO J00-EXIT.\n131700     MOVE FLDA                   TO  C30-IN-QTY.\n131800     PERFORM C30-EDIT-INPUT-QTY THRU C30-EXIT.\n131900     IF (C30-ADJ-QTY < +0) OR (C30-ADJ-QTY > +360)\n132000         PERFORM T30-TOR-PROMPT THRU T30-EXIT\n132100         GO TO J00-EXIT.\n132200     COMPUTE TEMP-999 ROUNDED = C30-ADJ-QTY.\n132300     COMPUTE COURSE ROUNDED = 1 + (TEMP-999 / 45).\n132400     IF COURSE NOT < +9\n132500         SUBTRACT +8 FROM COURSE.\n132600     PERFORM Q10-KLINGONS-FIRE THRU Q10-EXIT.\n132700     IF WRAPUP-CODE > +0\n132800         GO TO J00-EXIT.\n132900     MOVE COURSE TO TEMP-999.\n133000     SET C-X1 TO TEMP-999.\n133100     COMPUTE STEP-VERT = C-VERT (C-X1)\n133200           + ((C-VERT (C-X1 + 1) - C-VERT (C-X1))\n133300              * (COURSE - TEMP-999)).\n133400     COMPUTE STEP-HORZ = C-HORZ (C-X1)\n133500           + ((C-HORZ (C-X1 + 1) - C-HORZ (C-X1))\n133600              * (COURSE - TEMP-999)).\n133700     SUBTRACT TOR-ENERGY FROM ENERGY.\n133800     MOVE EPRISE-ROW TO WORK-VERT.\n133900     MOVE EPRISE-COL TO WORK-HORZ.\n134000     SUBTRACT +1 FROM TORPEDOS.\n134100     MOVE 'TORPEDO TRACK, COURSE'\n134200                                 TO  MSG-LINE.\n134300     COMPUTE TEMP-ZZZ9 ROUNDED = C30-ADJ-QTY.\n134400     MOVE TEMP-ZZZ9              TO  MSG-LINE22-25.\n134500     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n134600 J00-TORPEDO-LOOP.\n134700     ADD STEP-VERT TO WORK-VERT.\n134800     ADD STEP-HORZ TO WORK-HORZ.\n134900     COMPUTE TOR-ROW ROUNDED = WORK-VERT.\n135000     COMPUTE TOR-COL ROUNDED = WORK-HORZ.\n135100     IF (TOR-ROW < +1) OR (TOR-ROW > +8)\n135200     OR (TOR-COL < +1) OR (TOR-COL > +8)\n135300         MOVE 'TORPEDO MISSED'\n135400                                 TO  MSG-LINE\n135500         PERFORM C50-NEXT-MSG THRU C50-EXIT\n135600         GO TO J00-TOR-WRAPUP.\n135700     MOVE '                 :'\n135800                                 TO  MSG-LINE.\n135900     MOVE TOR-ROW                     TO  MSG-LINE17.\n136000     MOVE TOR-COL                     TO  MSG-LINE19.\n136100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n136200     SET SECTOR-X1 TO TOR-ROW.\n136300     SET SECTOR-X2 TO TOR-COL.\n136400     IF SECTOR-DISP (SECTOR-X1, SECTOR-X2) = L-NULL\n136500         PERFORM C40-GET-RND THRU C40-EXIT\n136600         IF RND < +0.99\n136700             GO TO J00-TORPEDO-LOOP\n136800         ELSE\n136900             MOVE 'TORPEDO DETONATED PREMATURELY.'\n137000                                 TO  MSG-LINE\n137100             PERFORM C50-NEXT-MSG THRU C50-EXIT\n137200             GO TO J00-TOR-WRAPUP.\n137300     IF SECTOR-DISP (SECTOR-X1, SECTOR-X2) = L-KLING\n137400         PERFORM I10-KLINGON-DESTROYED THRU I10-EXIT\n137500         GO TO J00-TOR-WRAPUP.\n137600     IF SECTOR-DISP (SECTOR-X1, SECTOR-X2) = L-STARS\n137700         PERFORM X10-STAR-DESTROYED THRU X10-EXIT\n137800         GO TO J00-TOR-WRAPUP.\n137900     IF SECTOR-DISP (SECTOR-X1, SECTOR-X2) NOT = L-SBASE\n138000         GO TO J00-TORPEDO-LOOP.\n138100     MOVE '*** STARBASE DESTROYED ***'\n138200                                 TO  MSG-LINE.\n138300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n138400     SET G-X1 TO EPRISE-GLXY-ROW.\n138500     SET G-X2 TO EPRISE-GLXY-COL.\n138600     SUBTRACT +1 FROM CURR-SBASE\n138700                      SBASE-TOTAL\n138800                      G-SBASE (G-X1, G-X2).\n138900     MOVE L-NULL TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n139000     IF SBASE-TOTAL NOT > +0\n139100         MOVE +6 TO WRAPUP-CODE\n139200         GO TO J00-EXIT.\n139300     MOVE 'STARFLEET COMMAND IS REVIEWING YOUR RECORD'\n139400                                 TO  MSG-LINE.\n139500     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n139600     MOVE '   FOR A POSSIBLE COURT MARTIAL!!'\n139700                                 TO  MSG-LINE.\n139800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n139900     MOVE 'N' TO DOCKING-FLAG.\n140000 J00-TOR-WRAPUP.\n140100**** IF WRAPUP-CODE NOT > +0\n140200****     PERFORM Q10-KLINGONS-FIRE THRU Q10-EXIT.\n140300**** PERFORM Q50-MOVE-KLINGONS THRU Q50-EXIT\n140400****     VARYING KLING-X1 FROM +1 BY +1\n140500****     UNTIL   KLING-X1 > MAX-KLING.\n140600 J00-EXIT.  EXIT.\n140700     EJECT\n140800 K00-COM-COMMAND.\n140900     IF DAM-COM < +0\n141000         MOVE '*** COMPUTER DISABLED ***'\n141100                                 TO  MSG-LINE\n141200         PERFORM C50-NEXT-MSG THRU C50-EXIT\n141300         GO TO K00-EXIT.\n141400     IF FLDA  = SPACES\n141500         PERFORM T20-COM-PROMPT THRU T20-EXIT\n141600         GO TO K00-EXIT.\n141700     MOVE FLDA                   TO  C30-IN-QTY.\n141800     PERFORM C30-EDIT-INPUT-QTY THRU C30-EXIT.\n141900     IF C30-ADJ-QTY = (+0 OR +1 OR +2 OR +3 OR +4 OR +5)\n142000         MOVE C30-ADJ-QTY        TO  COMPUTER-REQUEST\n142100     ELSE\n142200         PERFORM T20-COM-PROMPT THRU T20-EXIT\n142300         GO TO K00-EXIT.\n142400     IF COMPUTER-REQUEST = +0\n142500         PERFORM K10-GALAXY-RECORD THRU K10-EXIT\n142600         GO TO K00-EXIT.\n142700     IF COMPUTER-REQUEST = +1\n142800         PERFORM K20-STATUS-REPORT THRU K20-EXIT\n142900         GO TO K00-EXIT.\n143000     IF COMPUTER-REQUEST = +2\n143100         PERFORM K30-GALAXY-NAMES THRU K30-EXIT\n143200         GO TO K00-EXIT.\n143300 K00-EXIT.  EXIT.\n143400     SKIP1\n143500 K10-GALAXY-RECORD.\n143600     MOVE 'AT THIS TIME, THE GALAXY IS KNOWN TO CONTAIN:'\n143700                                 TO  MSG-LINE.\n143800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n143900     MOVE '    1     2     3     4     5     6     7     8'\n144000                                 TO  MSG-LINE.\n144100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n144200     MOVE L-LRS-TOP              TO  MSG-LINE.\n144300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n144400     PERFORM K15-SCAN-SET THRU K15-EXIT\n144500         VARYING G-X1 FROM +1 BY +1\n144600         UNTIL   G-X1 > +8.\n144700 K10-EXIT.  EXIT.\n144800     SKIP1\n144900 K15-SCAN-SET.\n145000     MOVE SPACES                 TO  MSG-LINE.\n145100     SET LRS-ROW TO G-X1.\n145200     MOVE ':'                    TO  LRS-SEP1.\n145300     PERFORM K17-QUAD-DISP THRU K17-EXIT\n145400         VARYING G-X2 FROM +1 BY +1\n145500         UNTIL   G-X2 > +8.\n145600     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n145700     MOVE L-LRS-TOP              TO  MSG-LINE.\n145800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n145900 K15-EXIT.  EXIT.\n146000     SKIP1\n146100 K17-QUAD-DISP.\n146200     SET LRS-X1 TO G-X2.\n146300     MOVE ':'                    TO  LRS-SEP (LRS-X1).\n146400     IF G-STATUS (G-X1, G-X2) = '1'\n146500         MOVE G-TOTAL (G-X1, G-X2) TO LRS-SECT (LRS-X1).\n146600 K17-EXIT.  EXIT.\n146700     SKIP1\n146800 K20-STATUS-REPORT.\n146900     MOVE '   STATUS REPORT:'\n147000                                 TO  MSG-LINE.\n147100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n147200     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n147300     MOVE 'THERE ARE    KLINGONS LEFT MENACING THE GALAXY.'\n147400                                 TO  MSG-LINE.\n147500     MOVE KLING-TOTAL TO TEMP-Z9.\n147600     MOVE TEMP-Z9                TO  MSG-LINE11-12.\n147700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n147800     MOVE 'YOUR MISSION MUST BE COMPLETED BY STARDATE     .'\n147900                                 TO  MSG-LINE.\n148000     MOVE ENDDATE                TO  TEMP-ZZZ9.\n148100     MOVE TEMP-ZZZ9              TO  MSG-LINE44-47.\n148200     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n148300     MOVE '   THAT GIVES YOU      STARDATES !'\n148400                                 TO  MSG-LINE.\n148500     COMPUTE TEMP-ZZVZ = ENDDATE - STARDATE.\n148600     MOVE TEMP-ZZVZ              TO  MSG-LINE19-22.\n148700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n148800     IF SBASE-TOTAL > +0\n148900         MOVE 'THERE ARE    FEDERATION STARBASES IN THE GALAXY.'\n149000                                 TO  MSG-LINE\n149100         MOVE SBASE-TOTAL TO TEMP-Z9\n149200         MOVE TEMP-Z9            TO  MSG-LINE11-12\n149300     ELSE\n149400         MOVE 'YOUR STUPIDITY HAS LEFT YOU ON YOUR OWN IN'\n149500                                 TO  MSG-LINE\n149600         PERFORM C50-NEXT-MSG THRU C50-EXIT\n149700         MOVE '   THE GALAXY -- YOU HAVE NO STARBASES LEFT!!!'\n149800                                 TO  MSG-LINE.\n149900     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n150000 K20-EXIT.  EXIT.\n150100     SKIP1\n150200 K30-GALAXY-NAMES.\n150300     PERFORM K35-NAME-SET THRU K35-EXIT\n150400         VARYING REGION-X1 FROM +1 BY +2\n150500         UNTIL   REGION-X1 > +16.\n150600 K30-EXIT.  EXIT.\n150700     SKIP1\n150800 K35-NAME-SET.\n150900     MOVE SPACES                 TO  MSG-LINE.\n151000     MOVE '----'                 TO  GAL-MARG1  GAL-MARG2\n151100                                     GAL-MARG3  GAL-MARG4.\n151200     MOVE REGION-NAME (REGION-X1)     TO  GAL-LEFT-NAME.\n151300     MOVE REGION-NAME (REGION-X1 + 1) TO  GAL-RIGHT-NAME.\n151400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n151500     MOVE SPACES                 TO  MSG-LINE.\n151600     MOVE L-ROMAN                TO  GAL-LEFT   GAL-RIGHT.\n151700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n151800     IF REGION-X1 < +15\n151900         PERFORM C60-BLANK-MSG THRU C60-EXIT.\n152000 K35-EXIT.  EXIT.\n152100     EJECT\n152200 L00-SHE-COMMAND.\n152300     IF DAM-SHE < +0\n152400         MOVE '*** SHIELD CONTROL INOPERABLE ***'\n152500                                 TO  MSG-LINE\n152600         PERFORM C50-NEXT-MSG THRU C50-EXIT\n152700         GO TO L00-BLANK-MSG.\n152800     IF FLDA  = SPACES\n152900         PERFORM T50-SHE-PROMPT THRU T50-EXIT\n153000         GO TO L00-EXIT.\n153100     MOVE FLDA                   TO  C30-IN-QTY.\n153200     PERFORM C30-EDIT-INPUT-QTY THRU C30-EXIT.\n153300     IF (C30-ADJ-QTY < +0) OR (C30-ADJ-QTY > (SHIELD + ENERGY))\n153400         PERFORM T50-SHE-PROMPT THRU T50-EXIT\n153500         GO TO L00-EXIT.\n153600     MOVE C30-ADJ-QTY            TO  SHIELD-ENERGY.\n153700     MOVE 'DEFLECTOR CONTROL ROOM REPORT:'\n153800                                 TO  MSG-LINE.\n153900     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n154000     IF SHIELD-ENERGY = SHIELD\n154100         MOVE '   (SHELDS UNCHANGED)'\n154200                                 TO  MSG-LINE\n154300         PERFORM C50-NEXT-MSG THRU C50-EXIT\n154400         GO TO L00-BLANK-MSG.\n154500     COMPUTE ENERGY = ENERGY + (SHIELD - SHIELD-ENERGY).\n154600     MOVE SHIELD-ENERGY TO SHIELD.\n154700     MOVE '   SHIELDS NOW AT      PER YOUR COMMAND'\n154800                                 TO  MSG-LINE.\n154900     MOVE SHIELD TO TEMP-ZZZ9.\n155000     MOVE TEMP-ZZZ9              TO  MSG-LINE19-22.\n155100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n155200 L00-BLANK-MSG.\n155300     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n155400 L00-EXIT.  EXIT.\n155500     EJECT\n155600 M00-DAM-COMMAND.\n155700     IF DAM-DAM < +0\n155800         MOVE '*** DAMAGE CONTROL REPORT NOT AVAILABLE ***'\n155900                                 TO  MSG-LINE\n156000         PERFORM C50-NEXT-MSG THRU C50-EXIT\n156100     ELSE\n156200         PERFORM M10-DAM-REPORT THRU M10-EXIT.\n156300     IF DOCKING-FLAG = 'Y'\n156400         PERFORM V10-OPTIONAL-REPAIRS THRU V10-EXIT.\n156500 M00-EXIT.  EXIT.\n156600     SKIP1\n156700 M10-DAM-REPORT.\n156800     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n156900     MOVE 'CURRENT DAMAGES TO THE ENTERPRISE ARE AS FOLLOWS:'\n157000                                 TO  MSG-LINE.\n157100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n157200     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n157300     MOVE '...DEVICE.......STARDATES TO REPAIR...'\n157400                                 TO  MSG-LINE.\n157500     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n157600     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n157700     PERFORM M15-1-DEVICE-REPORT THRU M15-EXIT\n157800         VARYING DAM-SUB FROM +1 BY +1\n157900         UNTIL DAM-SUB > +8.\n158000     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n158100 M10-EXIT.  EXIT.\n158200     SKIP1\n158300 M15-1-DEVICE-REPORT.\n158400     IF DAM-REPAIR (DAM-SUB) > +0\n158500         MOVE +0                 TO  DAM-REPAIR (DAM-SUB).\n158600     IF DAM-REPAIR (DAM-SUB) = +0\n158700         GO TO M15-EXIT.\n158800     MOVE DAM-NAME (DAM-SUB)      TO  MSG-LINE.\n158900     MOVE DAM-REPAIR (DAM-SUB) TO TEMP-ZZVZ.\n159000     MOVE TEMP-ZZVZ              TO  MSG-LINE22-25.\n159100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n159200 M15-EXIT.  EXIT.\n159300     EJECT\n159400 N00-INSTRUCTIONS.\n159500 N00-EXIT.  EXIT.\n159600     EJECT\n159700 Q10-KLINGONS-FIRE.\n159800     IF CURR-KLING NOT > +0\n159900         GO TO Q10-EXIT.\n160000     IF DOCKING-FLAG = 'Y'\n160100         MOVE 'STAR BASE SHIELDS PROTECT THE ENTERPRISE'\n160200                                 TO  MSG-LINE\n160300         PERFORM C50-NEXT-MSG THRU C50-EXIT\n160400         GO TO Q10-EXIT.\n160500     PERFORM Q15-ONE-KLINGON-FIRES THRU Q15-EXIT\n160600         VARYING KLING-X1 FROM 1 BY 1\n160700         UNTIL KLING-X1 > MAX-KLING.\n160800 Q10-EXIT.  EXIT.\n160900     SKIP1\n161000 Q15-ONE-KLINGON-FIRES.\n161100     IF KLING-ENERGY (KLING-X1) NOT > +0\n161200         GO TO Q15-EXIT.\n161300     PERFORM C40-GET-RND THRU C40-EXIT.\n161400     PERFORM Q30-DIST-FROM-KLINGON THRU Q30-EXIT.\n161500*******************\n161600*********  THIS CALCULATION IS MY IDEA OF WHAT'S FAIR,\n161700*********  BUT IT IS VERY EASY TO CHANGE.\n161800*******************\n161900     COMPUTE HIT ROUNDED =\n162000         (KLING-ENERGY (KLING-X1) * (1 - (0.1 * RND)))\n162100         / (DIST ** 0.5).\n162200     IF SHIELD > +0\n162300         COMPUTE HIT-RATIO ROUNDED = HIT / SHIELD\n162400     ELSE\n162500         COMPUTE HIT-RATIO ROUNDED = HIT.\n162600     SUBTRACT HIT FROM SHIELD.\n162700     MOVE '     UNITS HIT ON ENTERPRISE FROM SECTOR  :'\n162800                                 TO  MSG-LINE.\n162900     MOVE HIT TO TEMP-ZZZ9.\n163000     MOVE TEMP-ZZZ9             TO  MSG-LINE01-04.\n163100     MOVE KLING-ROW (KLING-X1)   TO  MSG-LINE42.\n163200     MOVE KLING-COL (KLING-X1)   TO  MSG-LINE44.\n163300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n163400     IF SHIELD < +0\n163500         MOVE +3 TO WRAPUP-CODE\n163600         SET KLING-X1 TO MAX-KLING\n163700         MOVE +0                 TO  SHIELD\n163800         MOVE 'YOUR SHIELDS HAVE BEEN DEPLETED BY KLINGON ATTACK.'\n163900                                 TO  MSG-LINE\n164000         PERFORM C50-NEXT-MSG THRU C50-EXIT\n164100         GO TO Q15-BLANK-MSG.\n164200     MOVE '      (SHIELDS DOWN TO      UNITS)'\n164300                                 TO  MSG-LINE.\n164400     MOVE SHIELD TO TEMP-ZZZ9.\n164500     MOVE TEMP-ZZZ9             TO  MSG-LINE24-27.\n164600     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n164700     IF HIT < +20\n164800         GO TO Q15-BLANK-MSG.\n164900**************\n165000*********  THE MINIMUM HIT-RATIO BELOW IS ALSO EASILY CHANGED.\n165100**************\n165200     IF HIT-RATIO < +0.20\n165300         GO TO Q15-BLANK-MSG.\n165400***  DAMAGE TO THE 'ENTERPRISE' MAY HAVE OCCURED.  THE HIGHER\n165500***  THE HIT-RATIO, THE MORE LIKELY TO BE DAMAGED.\n165600     PERFORM C40-GET-RND THRU C40-EXIT.\n165700     IF RND > HIT-RATIO\n165800         GO TO Q15-BLANK-MSG.\n165900     PERFORM C40-GET-RND THRU C40-EXIT.\n166000     COMPUTE TEMP-999V9999 = (HIT-RATIO * 4)\n166100                            + (RND * 0.5).\n166200     IF TEMP-999V9999 > +5\n166300         MOVE +5                 TO  TEMP-999V9999.\n166400     PERFORM C40-GET-RND THRU C40-EXIT.\n166500     COMPUTE DAM-SUB = 1 + (RND * 8).\n166600     IF DAM-SUB = +2\n166700         MULTIPLY 0.5 BY TEMP-999V9999 ROUNDED.\n166800     SUBTRACT TEMP-999V9999 FROM DAM-REPAIR (DAM-SUB).\n166900     MOVE 'DAMAGE CONTROL REPORTS              DAMAGED BY HIT'\n167000                                 TO  MSG-LINE.\n167100     MOVE DAM-NAME (DAM-SUB)    TO  MSG-LINE24-35.\n167200     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n167300 Q15-BLANK-MSG.\n167400     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n167500 Q15-EXIT.  EXIT.\n167600     SKIP1\n167700 Q30-DIST-FROM-KLINGON.\n167800     COMPUTE DIST = (((KLING-ROW (KLING-X1) - EPRISE-ROW) ** 2)\n167900                   + ((KLING-COL (KLING-X1) - EPRISE-COL) ** 2))\n168000                   ** 0.5.\n168100     IF DIST < +1\n168200         MOVE +1                 TO  DIST.\n168300 Q30-EXIT.  EXIT.\n168400     SKIP1\n168500 Q50-MOVE-KLINGONS.\n168600     IF KLING-ENERGY (KLING-X1) NOT > +0\n168700         GO TO Q50-EXIT.\n168800     SET SECTOR-X1 TO KLING-ROW (KLING-X1).\n168900     SET SECTOR-X2 TO KLING-COL (KLING-X1).\n169000     MOVE L-NULL TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n169100     PERFORM R10-RANDOM-HOLE THRU R10-EXIT.\n169200     SET SECTOR-X1 TO RANDOM-ROW.\n169300     SET SECTOR-X2 TO RANDOM-COL.\n169400     MOVE L-KLING TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n169500     MOVE RANDOM-ROW TO KLING-ROW (KLING-X1).\n169600     MOVE RANDOM-COL TO KLING-COL (KLING-X1).\n169700 Q50-EXIT.  EXIT.\n169800     SKIP1\n169900 R10-RANDOM-HOLE.\n170000     PERFORM C40-GET-RND THRU C40-EXIT.\n170100     COMPUTE RANDOM-ROW = 1 + (RND * 8).\n170200     PERFORM C40-GET-RND THRU C40-EXIT.\n170300     COMPUTE RANDOM-COL = 1 + (RND * 8).\n170400     SET SECTOR-X1 TO RANDOM-ROW.\n170500     SET SECTOR-X2 TO RANDOM-COL.\n170600     IF SECTOR-DISP (SECTOR-X1, SECTOR-X2) NOT = L-NULL\n170700         GO TO R10-RANDOM-HOLE.\n170800 R10-EXIT.  EXIT.\n170900     SKIP1\n171000 R30-RANDOM-DAMAGE.\n171100     MOVE 'THE ENTERPRISE JUST PASSED THRU AN ION STORM.'\n171200                                 TO  MSG-LINE.\n171300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n171400     PERFORM C40-GET-RND THRU C40-EXIT.\n171500     COMPUTE DAM-SUB = 1 + (RND * 8).\n171600     IF DAM-REPAIR (DAM-SUB) < +0\n171700         MOVE '                       DAMAGED FURTHER'\n171800                                 TO  MSG-LINE\n171900     ELSE\n172000         MOVE '                       DAMAGED'\n172100                                 TO  MSG-LINE.\n172200     MOVE DAM-NAME (DAM-SUB)    TO  MSG-LINE11-22.\n172300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n172400     PERFORM C40-GET-RND THRU C40-EXIT.\n172500     IF DAM-SUB = +2\n172600         MULTIPLY 0.4 BY RND ROUNDED.\n172700     COMPUTE DAM-REPAIR (DAM-SUB) =\n172800             DAM-REPAIR (DAM-SUB) - (1 + (RND * 2)).\n172900 R30-EXIT.  EXIT.\n173000     SKIP1\n173100 R50-RANDOM-REPAIR.\n173200     PERFORM C40-GET-RND THRU C40-EXIT.\n173300     COMPUTE DAM-SUB = 1 + (RND * 8).\n173400     IF DAM-REPAIR (DAM-SUB) NOT < +0\n173500         PERFORM C40-GET-RND THRU C40-EXIT\n173600         IF RND > +0.1\n173700             GO TO R50-RANDOM-REPAIR\n173800         ELSE\n173900             GO TO R50-EXIT.\n174000     MOVE 'REPAIR CREWS HAVE BEEN WORKING OVERTIME.'\n174100                                 TO  MSG-LINE.\n174200     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n174300     COMPUTE DAM-REPAIR (DAM-SUB) =\n174400             DAM-REPAIR (DAM-SUB) + (1 + (RND * 2)).\n174500     IF DAM-REPAIR (DAM-SUB) > +0\n174600         MOVE +0 TO DAM-REPAIR (DAM-SUB).\n174700     IF DAM-REPAIR (DAM-SUB) = +0\n174800         MOVE '                       REPAIR COMPLETED EARLY'\n174900                                 TO  MSG-LINE\n175000     ELSE\n175100         MOVE '                       REPAIR TIME REDUCED'\n175200                                 TO  MSG-LINE.\n175300     MOVE DAM-NAME (DAM-SUB)    TO  MSG-LINE11-22.\n175400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n175500 R50-EXIT.  EXIT.\n175600     SKIP1\n175700 S10-EPRISE-TO-NEW-QUAD.\n175800     COMPUTE WORK-VERT =\n175900             WORK-VERT\n176000             + (8 * EPRISE-GLXY-ROW)\n176100             + (SECTORS-MOVE-TOTL * STEP-VERT).\n176200     COMPUTE WORK-HORZ =\n176300             WORK-HORZ\n176400             + (8 * EPRISE-GLXY-COL)\n176500             + (SECTORS-MOVE-TOTL * STEP-HORZ).\n176600     COMPUTE EPRISE-GLXY-ROW = WORK-VERT / 8.\n176700     COMPUTE EPRISE-GLXY-COL = WORK-HORZ / 8.\n176800     COMPUTE EPRISE-VERT = WORK-VERT - (8 * EPRISE-GLXY-ROW).\n176900     COMPUTE EPRISE-HORZ = WORK-HORZ - (8 * EPRISE-GLXY-COL).\n177000     IF EPRISE-VERT < +1\n177100         SUBTRACT +1 FROM EPRISE-GLXY-ROW\n177200         ADD +8 TO EPRISE-VERT.\n177300     IF EPRISE-HORZ < +1\n177400         SUBTRACT +1 FROM EPRISE-GLXY-COL\n177500         ADD +8 TO EPRISE-HORZ.\n177600     MOVE +0 TO GALAXY-LIMIT-FLAG.\n177700     IF EPRISE-GLXY-ROW < +1\n177800         MOVE +1 TO GALAXY-LIMIT-FLAG\n177900                    EPRISE-GLXY-ROW\n178000                    EPRISE-VERT.\n178100     IF EPRISE-GLXY-ROW > +8\n178200         MOVE +1 TO GALAXY-LIMIT-FLAG\n178300         MOVE +8 TO EPRISE-GLXY-ROW\n178400                    EPRISE-VERT.\n178500     IF EPRISE-GLXY-COL < +1\n178600         MOVE +1 TO GALAXY-LIMIT-FLAG\n178700                    EPRISE-GLXY-COL\n178800                    EPRISE-HORZ.\n178900     IF EPRISE-GLXY-COL > +8\n179000         MOVE +1 TO GALAXY-LIMIT-FLAG\n179100         MOVE +8 TO EPRISE-GLXY-COL\n179200                    EPRISE-HORZ.\n179300     IF GALAXY-LIMIT-FLAG = +1\n179400         MOVE 'LT. UHURA REPORTS MESSAGE FROM STARFLEET COMMAND:'\n179500                                 TO  MSG-LINE\n179600         PERFORM C50-NEXT-MSG THRU C50-EXIT\n179700         MOVE '   PERMISSION TO ATTEMPT CROSSING OF GALACTIC'\n179800                                 TO  MSG-LINE\n179900         PERFORM C50-NEXT-MSG THRU C50-EXIT\n180000         MOVE '   PERIMETER IS HEREBY DENIED.  SHUT DOWN ENGINES.'\n180100                                 TO  MSG-LINE\n180200         PERFORM C50-NEXT-MSG THRU C50-EXIT\n180300         MOVE 'CHIEF ENGINEER SCOTT REPORTS WARP ENGINES'\n180400                                 TO  MSG-LINE\n180500         PERFORM C50-NEXT-MSG THRU C50-EXIT\n180600         MOVE '   SHUT DOWN AT SECTOR  :  OF QUADRANT  :'\n180700                                 TO  MSG-LINE\n180800         MOVE EPRISE-ROW                 TO  MSG-LINE24\n180900         MOVE EPRISE-COL                 TO  MSG-LINE26\n181000         MOVE EPRISE-GLXY-ROW                 TO  MSG-LINE40\n181100         MOVE EPRISE-GLXY-COL                 TO  MSG-LINE42\n181200         PERFORM C50-NEXT-MSG THRU C50-EXIT.\n181300     IF  (EPRISE-GLXY-ROW NOT = PREV-GLXY-ROW)\n181400     OR  (EPRISE-GLXY-COL NOT = PREV-GLXY-COL)\n181500         PERFORM S15-ENTER-NEW-QUADRANT THRU S15-EXIT.\n181600 S10-EXIT.  EXIT.\n181700     SKIP1\n181800 S15-ENTER-NEW-QUADRANT.\n181900     MOVE EPRISE-GLXY-ROW TO QUAD-NAME-ROW.\n182000     MOVE EPRISE-GLXY-COL TO QUAD-NAME-COL.\n182100     MOVE +0 TO CURR-KLING\n182200                CURR-SBASE\n182300                CURR-STARS\n182400                REGION-ONLY-FLAG.\n182500     PERFORM C40-GET-RND THRU C40-EXIT.\n182600     PERFORM S30-QUADRANT-NAME THRU S30-EXIT.\n182700     MOVE QUAD-NAME              TO  CURR-QUAD.\n182800     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n182900     IF STARDATE NOT = FIRST-STARDATE\n183000         MOVE 'NOW ENTERING                  QUADRANT...'\n183100                                 TO  MSG-LINE\n183200         MOVE CURR-QUAD          TO  MSG-LINE14-29\n183300         PERFORM C50-NEXT-MSG THRU C50-EXIT\n183400     ELSE\n183500         MOVE 'YOUR MISSION BEGINS WITH YOUR STARSHIP LOCATED'\n183600                                 TO  MSG-LINE\n183700         PERFORM C50-NEXT-MSG THRU C50-EXIT\n183800         MOVE 'IN THE GALACTIC QUADRANT,'\n183900                                 TO  MSG-LINE\n184000         MOVE CURR-QUAD          TO  MSG-LINE27-42\n184100         PERFORM C50-NEXT-MSG THRU C50-EXIT.\n184200     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n184300     SET G-X1 TO EPRISE-GLXY-ROW.\n184400     SET G-X2 TO EPRISE-GLXY-COL.\n184500     MOVE G-KLING (G-X1, G-X2) TO CURR-KLING.\n184600     MOVE G-SBASE (G-X1, G-X2) TO CURR-SBASE.\n184700     MOVE G-STARS (G-X1, G-X2) TO CURR-STARS.\n184800     MOVE '1' TO G-STATUS (G-X1, G-X2).\n184900     IF CURR-KLING > +0\n185000         MOVE 'COMBAT AREA      CONDITION  *RED*'\n185100                                 TO  MSG-LINE\n185200         PERFORM C50-NEXT-MSG THRU C50-EXIT\n185300         IF SHIELD < (INIT-ENERGY-KLING * CURR-KLING)\n185400             PERFORM C60-BLANK-MSG THRU C60-EXIT\n185500             MOVE ALL '*'        TO  MSG-LINE01-35\n185600             PERFORM C50-NEXT-MSG THRU C50-EXIT\n185700             MOVE '*** SHIELDS ARE DANGEROUSLY LOW ***'\n185800                                 TO  MSG-LINE\n185900             PERFORM C50-NEXT-MSG THRU C50-EXIT\n186000             MOVE ALL '*'        TO  MSG-LINE01-35\n186100             PERFORM C50-NEXT-MSG THRU C50-EXIT.\n186200     MOVE +0 TO L-INDX.\n186300     SET KLING-X1 TO L-INDX.\n186400     MOVE +0                     TO  KLING-ROW    (KLING-X1 + 1)\n186500                                     KLING-COL    (KLING-X1 + 1)\n186600                                     KLING-ENERGY (KLING-X1 + 1)\n186700                                     KLING-ROW    (KLING-X1 + 2)\n186800                                     KLING-COL    (KLING-X1 + 2)\n186900                                     KLING-ENERGY (KLING-X1 + 2)\n187000                                     KLING-ROW    (KLING-X1 + 3)\n187100                                     KLING-COL    (KLING-X1 + 3)\n187200                                     KLING-ENERGY (KLING-X1 + 3).\n187300     MOVE L-NULL-TABLE           TO  SECTOR-AREA.\n187400     SET SECTOR-X1 TO EPRISE-ROW.\n187500     SET SECTOR-X2 TO EPRISE-COL.\n187600     MOVE L-EPRISE TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n187700     PERFORM S60-POSITION-1-KLINGON THRU S60-EXIT\n187800         CURR-KLING TIMES.\n187900     PERFORM S70-POSITION-1-STARBASE THRU S70-EXIT\n188000         CURR-SBASE TIMES.\n188100     PERFORM S80-POSITION-1-STAR THRU S80-EXIT\n188200         CURR-STARS TIMES.\n188300 S15-EXIT.  EXIT.\n188400     SKIP1\n188500 S30-QUADRANT-NAME.\n188600***  INPUT IS QUAD-NAME-ROW,QUAD-NAME-COL\n188700***      WHICH = EPRISE-GLXY-ROW,EPRISE-GLXY-COL.\n188800***  OUTPUT IS QUAD-NAME\n188900***  IF REGION-ONLY-FLAG=1, GIVE REGION NAME ONLY\n189000     COMPUTE TEMP-999 = QUAD-NAME-ROW * 2.\n189100     IF QUAD-NAME-COL < +5\n189200         SUBTRACT +1 FROM TEMP-999.\n189300     SET REGION-X1 TO TEMP-999.\n189400     MOVE REGION-NAME (REGION-X1) TO QUAD-NAME.\n189500     IF REGION-ONLY-FLAG = +1\n189600         GO TO S30-EXIT.\n189700     MOVE +5 TO L-INDX.\n189800     SET QUAD-X1 TO L-INDX.\n189900 S30-LOOP.\n190000     IF QUAD-NAME-BYTE (QUAD-X1) NOT = ' '\n190100         SET QUAD-X1 UP BY +1\n190200         GO TO S30-LOOP.\n190300     MOVE QUAD-NAME-COL TO TEMP-999.\n190400     IF QUAD-NAME-COL > +4\n190500         SUBTRACT +4 FROM TEMP-999.\n190600     MOVE 'I' TO QUAD-NAME-BYTE (QUAD-X1 + 1).\n190700     IF TEMP-999 = +1\n190800         GO TO S30-EXIT.\n190900     IF TEMP-999 = +4\n191000         MOVE 'V' TO QUAD-NAME-BYTE (QUAD-X1 + 2)\n191100         GO TO S30-EXIT\n191200     ELSE\n191300         MOVE 'I' TO QUAD-NAME-BYTE (QUAD-X1 + 2).\n191400     IF TEMP-999 = +3\n191500         MOVE 'I' TO QUAD-NAME-BYTE (QUAD-X1 + 3).\n191600 S30-EXIT.  EXIT.\n191700     SKIP1\n191800 S60-POSITION-1-KLINGON.\n191900     SET KLING-X1 UP BY +1.\n192000     PERFORM R10-RANDOM-HOLE THRU R10-EXIT.\n192100     MOVE L-KLING TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n192200     SET KLING-ROW (KLING-X1) TO SECTOR-X1.\n192300     SET KLING-COL (KLING-X1) TO SECTOR-X2.\n192400     MOVE INIT-ENERGY-KLING      TO  KLING-ENERGY (KLING-X1).\n192500 S60-EXIT.  EXIT.\n192600     SKIP1\n192700 S70-POSITION-1-STARBASE.\n192800     PERFORM R10-RANDOM-HOLE THRU R10-EXIT.\n192900     MOVE L-SBASE TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n193000     SET SBASE-ROW TO SECTOR-X1.\n193100     SET SBASE-COL TO SECTOR-X2.\n193200 S70-EXIT.  EXIT.\n193300     SKIP1\n193400 S80-POSITION-1-STAR.\n193500     PERFORM R10-RANDOM-HOLE THRU R10-EXIT.\n193600     MOVE L-STARS TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n193700 S80-EXIT.  EXIT.\n193800     SKIP1\n193900 T10-NAV-PROMPT.\n194000     IF NAV-EDIT-FLAG = 'B'\n194100         GO TO T10-B.\n194200     MOVE 'CHIEF ENGINEER SCOTT REQUESTS A COURSE HEADING:'\n194300                                 TO  MSG-LINE.\n194400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n194500     MOVE '  MIN=0, MAX=360'\n194600                                 TO  MSG-LINE.\n194700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n194800 T10-B.\n194900     MOVE 'SCOTTY ALSO NEEDS A WARP FACTOR: MIN=.01, MAX=8.00'\n195000                                 TO  MSG-LINE.\n195100**** IF DAM-NAV < +0\n195200****     MOVE '0'                TO  MSG-LINE47\n195300****     MOVE '2'                TO  MSG-LINE49\n195400****     PERFORM C50-NEXT-MSG THRU C50-EXIT\n195500****     MOVE '*** MAX WARP = 0.20 DUE TO DAMAGE TO WARP ENGINES'\n195600****                             TO  MSG-LINE.\n195700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n195800     IF NAV-EDIT-FLAG = 'A'\n195900         MOVE 'ENTER... COURSE (FLDA) & WARP FACTOR (FLDB)'\n196000                                 TO  MESSAGEO\n196100     ELSE\n196200         MOVE 'ENTER... WARP FACTOR (FLDB)'\n196300                                 TO  MESSAGEO.\n196400 T10-EXIT.  EXIT.\n196500     SKIP1\n196600 T20-COM-PROMPT.\n196700     MOVE 'FUNCTIONS AVAILABLE FROM THE LIBRARY-COMPUTER:'\n196800                                 TO  MSG-LINE.\n196900     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n197000     MOVE '  0 = CUMULATIVE GALAXY SCAN'\n197100                                 TO  MSG-LINE.\n197200     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n197300     MOVE '  1 = STATUS REPORT'\n197400                                 TO  MSG-LINE.\n197500     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n197600     MOVE '  2 = QUADRANT NOMENCLATURE MAP'\n197700                                 TO  MSG-LINE.\n197800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n197900     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n198000     MOVE 'ENTER... COMPUTER FUNCTION (FLDA)  OR CHANGE COMMAND'\n198100                                 TO  MESSAGEO.\n198200 T20-EXIT.  EXIT.\n198300     SKIP1\n198400 T30-TOR-PROMPT.\n198500     MOVE 'ENSIGN CHECKOV REQUESTS A TORPEDO COURSE HEADING.'\n198600                                 TO  MSG-LINE.\n198700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n198800     MOVE '  MIN=0, MAX=360'\n198900                                 TO  MSG-LINE.\n199000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n199100     MOVE 'ENTER... TORPEDO COURSE (FLDA)  OR CHANGE COMMAND'\n199200                                 TO  MESSAGEO.\n199300 T30-EXIT.  EXIT.\n199400     SKIP1\n199500 T40-PHA-PROMPT.\n199600     MOVE 'SCIENCE OFFICER SPOCK REQUESTS AMOUNT OF CURRENT'\n199700                                 TO  MSG-LINE.\n199800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n199900     MOVE 'ENERGY YOU WANT FIRED BY PHASERS?  MIN=1, MAX=    '\n200000                                 TO  MSG-LINE.\n200100     MOVE ENERGY TO TEMP-ZZZ9.\n200200     MOVE TEMP-ZZZ9              TO  MSG-LINE47-50.\n200300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n200400     MOVE 'ENTER... ENERGY TO FIRE (FLDA)  OR CHANGE COMMAND'\n200500                                 TO  MESSAGEO.\n200600 T40-EXIT.  EXIT.\n200700     SKIP1\n200800 T50-SHE-PROMPT.\n200900     MOVE 'SCIENCE OFFICER SPOCK REQUESTS AMOUNT OF ENERGY'\n201000                                 TO  MSG-LINE.\n201100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n201200     MOVE '  TO BE USED FOR SHIELDS:  MIN=0, MAX =   '\n201300                                 TO  MSG-LINE.\n201400     COMPUTE TEMP-ZZZ9 = ENERGY + SHIELD.\n201500     MOVE TEMP-ZZZ9              TO  MSG-LINE39-42.\n201600     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n201700     MOVE 'ENTER... NEW SHIELD STRENGTH (FLDA) OR CHANGE COMMAND'\n201800                                 TO  MESSAGEO.\n201900 T50-EXIT.  EXIT.\n202000     SKIP1\n202100 T60-NAV-DAMAGED.\n202200     MOVE 'NAVIGATION WAS INACCURATE (WARP ENGINE DAMAGED).'\n202300                                 TO  MSG-LINE.\n202400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n202500     PERFORM C40-GET-RND THRU C40-EXIT.\n202600     COMPUTE COURSE = COURSE + ((RND - 0.5) * 2).\n202700     IF COURSE < +1\n202800         ADD +8 TO COURSE.\n202900     PERFORM C40-GET-RND THRU C40-EXIT.\n203000     COMPUTE WARP-FACTOR = WARP-FACTOR + ((RND - 0.5) * 2).\n203100     IF WARP-FACTOR < +0.125\n203200         MOVE +0.125 TO WARP-FACTOR.\n203300     IF WARP-FACTOR > +8\n203400         MOVE +8 TO WARP-FACTOR.\n203500     COMPUTE SECTORS-MOVE-TOTL ROUNDED = WARP-FACTOR * 8.\n203600     COMPUTE WARP-ENERGY ROUNDED = (WARP-FACTOR * 8) + 10.\n203700 T60-EXIT.  EXIT.\n203800     SKIP1\n203900 V10-OPTIONAL-REPAIRS.\n204000     MOVE +0                     TO  REPAIR-EST.\n204100     PERFORM V15-IS-THERE-DAMAGE THRU V15-EXIT\n204200         VARYING DAM-SUB FROM +1 BY +1\n204300         UNTIL   DAM-SUB > +8.\n204400     IF REPAIR-EST = +0\n204500         GO TO V10-EXIT.\n204600     PERFORM M10-DAM-REPORT THRU M10-EXIT.\n204700     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n204800     PERFORM C40-GET-RND THRU C40-EXIT.\n204900     COMPUTE REPAIR-EST ROUNDED =\n205000         REPAIR-EST + (RND * 0.3).\n205100     IF REPAIR-EST > +1.0\n205200         MOVE +1.0               TO  REPAIR-EST.\n205300     MOVE 'TECHNICIANS STANDING BY TO REPAIR YOUR DAMAGES.'\n205400                                 TO  MSG-LINE.\n205500     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n205600     MOVE '   ESTIMATED TIME TO REPAIR IS     STARDATES.'\n205700                                 TO  MSG-LINE.\n205800     MOVE REPAIR-EST TO TEMP-9-9.\n205900     MOVE TEMP-9-9               TO  MSG-LINE32-34.\n206000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n206100     MOVE 'WILL YOU AUTHORIZE THE REPAIR ORDER?  YES/NO (CMD)'\n206200                                 TO  MSG-LINE.\n206300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n206400     PERFORM V30-YES-OR-NO THRU V30-EXIT.\n206500     IF CMDI NOT = 'YES'\n206600         GO TO V10-EXIT.\n206700     MOVE +0                     TO  DAM-NAV  DAM-TOR\n206800                                     DAM-SRS  DAM-DAM\n206900                                     DAM-LRS  DAM-SHE\n207000                                     DAM-PHA  DAM-COM.\n207100     PERFORM C40-GET-RND THRU C40-EXIT.\n207200     COMPUTE DAM-DELAY ROUNDED = RND * 0.5.\n207300     COMPUTE STARDATE = STARDATE + REPAIR-EST + DAM-DELAY.\n207400     MOVE 'ALL REPAIRS COMPLETED AS AUTHORIZED.'\n207500                                 TO  MSG-LINE.\n207600     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n207700     IF DAM-DELAY > +0\n207800         MOVE 'THE REPAIR CREW REQUIRED AN EXTRA     STARDATES.'\n207900                                 TO  MSG-LINE\n208000         MOVE DAM-DELAY TO TEMP-9-9\n208100         MOVE TEMP-9-9           TO  MSG-LINE35-37\n208200         PERFORM C50-NEXT-MSG THRU C50-EXIT.\n208300 V10-EXIT.  EXIT.\n208400     SKIP1\n208500 V15-IS-THERE-DAMAGE.\n208600     IF DAM-REPAIR (DAM-SUB) < +0\n208700         ADD +0.2 TO REPAIR-EST.\n208800 V15-EXIT.  EXIT.\n208900     SKIP1\n209000 V30-YES-OR-NO.\n209100     PERFORM C70-SRS-COMMAND THRU C70-EXIT.\n209200     MOVE 'ENTER... YES OR NO (CMD)'\n209300                                 TO  MESSAGEO.\n209400 V30-BMS-OUT-MAP1.\n209500 V30-BMS-OUT-MAP2.\n209600     MOVE  'DISPLAY' TO ISPF-SERVICE.\n209700     MOVE 'TRKPMAIN' TO ISPF-PANEL-NAME.\n209800     MOVE '        ' TO ISPF-MSG-ID.\n209900     MOVE '        ' TO ISPF-FIELD-NAME.\n210000     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-PANEL-NAME\n210100                           ISPF-MSG-ID  ISPF-FIELD-NAME.\n210200     IF RETURN-CODE NOT = 0\n210300*                              8  - END OR RETURN COMMAND ENTERED\n210400*                              12 - PANEL, MESSAGE, OR CURSOR\n210500*                                   FIELD COULD NOT BE FOUND\n210600*                              16 - DATA TRUNCATION OR TRANSLATION\n210700*                                   ERROR\n210800*                              20 - SEVERE ERROR\n210900**********  ERROR\n211000         MOVE 'X0502-' TO ABEND-CODE,\n211100         GO TO Z99-ABEND.\n211200 V30-BMS-IN.\n211300*********\n211400     IF CMDI = SPACES\n211500         GO TO V30-YES-OR-NO.\n211600     MOVE +0 TO L-INDX.\n211700     SET MLINE-X1 TO L-INDX.\n211800     MOVE SPACES                 TO  MAP2O\n211900                                     MESSAGEO.\n212000 V30-EXIT.  EXIT.\n212100     SKIP1\n212200 V50-TIME-CHECK.\n212300***  THIS PARAGRAPH CALL A SUB-ROUTINE WHICH CHECKS THE OPERATOR'S\n212400***  SIGN-ON VERSUS THE TIME-OF-DAY AND DETERMINES WHETHER HE\n212500***  IS ALLOWED TO PLAY AT THIS TIME.\n212600***  ALL RECREATIONAL PROGRAMS OBTAINED FROM ME CALL THIS\n212700***  SUB-ROUTINE, BUT 'PCDC17' IS A SEPARATE PROGRAM PRODUCT.\n212800***DFHPC TYPE=LINK,                                              X\n212900***      PROGRAM=PCDC17\n213000 V50-EXIT.  EXIT.\n213100     SKIP1\n213200 V70-VALID-COMMANDS.\n213300     MOVE +3 TO L-INDX.\n213400     SET MLINE-X1 TO L-INDX.\n213500     MOVE 'PLEASE ENTER ONE OF THE FOLLOWING VALID COMMANDS:'\n213600                                 TO  MLINE (MLINE-X1 + 00).\n213700     MOVE '  SAV - SAVE CURRENT GAME FOR LATER RECALL'\n213800                                 TO  MLINE (MLINE-X1 + 02).\n213900     MOVE '  NAV - NAVIGATE (FLDA=COURSE, FLDB=WARP FACTOR)'\n214000                                 TO  MLINE (MLINE-X1 + 03).\n214100     MOVE '  LRS - LONG RANGE SENSOR SCAN'\n214200                                 TO  MLINE (MLINE-X1 + 04).\n214300     MOVE '  PHA - FIRE PHASERS (FLDA=ENERGY)'\n214400                                 TO  MLINE (MLINE-X1 + 05).\n214500     MOVE '  TOR - FIRE PHOTON TORPEDOS (FLDA=COURSE)'\n214600                                 TO  MLINE (MLINE-X1 + 06).\n214700     MOVE '  SHE - SHIELD CONTROL (FLDA=NEW SHIELD LEVEL)'\n214800                                 TO  MLINE (MLINE-X1 + 07).\n214900     MOVE '  DAM - DAMAGE CONTROL REPORT'\n215000                                 TO  MLINE (MLINE-X1 + 08).\n215100     MOVE '  COM - LIBRARY-COMPUTER SUPPORT (FLDA..SEE BELOW)'\n215200                                 TO  MLINE (MLINE-X1 + 09).\n215300     MOVE '          0 - CUMULATIVE GALAXY SCAN'\n215400                                 TO  MLINE (MLINE-X1 + 10).\n215500     MOVE '          1 - STATUS REPORT'\n215600                                 TO  MLINE (MLINE-X1 + 11).\n215700     MOVE '          2 - QUADRANT NOMENCLATURE MAP'\n215800                                 TO  MLINE (MLINE-X1 + 12).\n215900     MOVE '  SUR - *** TO SURRENDER ***'\n216000                                 TO  MLINE (MLINE-X1 + 14).\n216100     MOVE '  RES - RESTORE THE LAST SAVED GAME'\n216200                                 TO  MLINE (MLINE-X1 + 15).\n216300 V70-EXIT.  EXIT.\n216400     SKIP1\n216500 W10-GAME-BEGINS.\n216600     MOVE L-MULT                 TO  RND-MULT.\n216700***DFHIC TYPE=GETIME,                                            X\n216800*****    FORM=PACKED,                                            X\n216900*****    TIMADR=START-TIME\n217000     MOVE     'VGET' TO ISPF-SERVICE.\n217100     MOVE 01 TO ISPF-NAME-COUNT.\n217200     MOVE 'ZTIME   ' TO ISPF-NAME(1).\n217300     MOVE     'ASIS' TO ISPF-OPTION1.\n217400     CALL 'ISPLINK' USING  ISPF-SERVICE  ISPF-NAME-LIST\n217500                           ISPF-OPTION1.\n217600     IF RETURN-CODE NOT = 0\n217700*                              8  - VARIABLE NOT FOUND\n217800*                              16 - TRANSLATION ERROR OR DATA\n217900*                                   TRUNCATION\n218000*                              20 - SEVERE ERROR\n218100         DISPLAY 'VGET FOR ZTIME FAILED',\n218200         STOP RUN.\n218300     MOVE CORR TIME-VAR-BO TO TIME-VAR-NUM.\n218400     MOVE TIME-VAR-NUM TO SEED1A.\n218500     MOVE CORRESPONDING SEED1B TO SEED2B.\n218600     MOVE SEED2A TO RND-WORK.\n218700     PERFORM C40-GET-RND THRU C40-EXIT  +10 TIMES.\n218800     COMPUTE FIRST-STARDATE = 100 * (21 + (4 * RND)).\n218900     MOVE FIRST-STARDATE         TO  STARDATE.\n219000     MOVE 'N'                    TO  DOCKING-FLAG.\n219100     MOVE INIT-ENERGY-EPRISE     TO  ENERGY.\n219200     MOVE INIT-TORPEDOS          TO  TORPEDOS.\n219300     MOVE +0                     TO  SHIELD.\n219400     MOVE L-NULL-TABLE           TO  SECTOR-AREA.\n219500     PERFORM R10-RANDOM-HOLE THRU R10-EXIT.\n219600     MOVE RANDOM-ROW             TO  EPRISE-GLXY-ROW.\n219700     MOVE RANDOM-COL             TO  EPRISE-GLXY-COL.\n219800     PERFORM R10-RANDOM-HOLE THRU R10-EXIT.\n219900     MOVE RANDOM-ROW             TO  EPRISE-VERT.\n220000     MOVE RANDOM-COL             TO  EPRISE-HORZ.\n220100     MOVE +0  TO  DAM-NAV  DAM-SRS  DAM-LRS  DAM-PHA\n220200                  DAM-TOR  DAM-SHE  DAM-DAM  DAM-COM.\n220300     MOVE +0                     TO  KLING-TOTAL\n220400                                     SBASE-TOTAL.\n220500     PERFORM W70-INITIALIZE-GALAXY THRU W70-EXIT\n220600         VARYING G-X1 FROM +1 BY +1\n220700           UNTIL G-X1 > +8\n220800         AFTER   G-X2 FROM +1 BY +1\n220900           UNTIL G-X2 > +8.\n221000     MOVE KLING-TOTAL                     TO  ORIG-KLING.\n221100     PERFORM C40-GET-RND THRU C40-EXIT.\n221200     COMPUTE ENDDATE  ROUNDED =\n221300         FIRST-STARDATE + 20\n221400       + (ORIG-KLING * 0.5) + (RND * 2).\n221500     IF SBASE-TOTAL < +1\n221600         PERFORM R10-RANDOM-HOLE THRU R10-EXIT\n221700         SET G-X1                TO  RANDOM-ROW\n221800         SET G-X2                TO  RANDOM-COL\n221900         MOVE +1                 TO  G-SBASE (G-X1, G-X2)\n222000                                     SBASE-TOTAL.\n222100     MOVE SBASE-TOTAL                     TO  ORIG-SBASE.\n222200     MOVE 'YOUR ORDERS ARE AS FOLLOWS:'\n222300                                 TO  MSG-LINE.\n222400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n222500     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n222600     MOVE '    DESTROY THE    KLINGON WARSHIPS, WHICH HAVE'\n222700                                 TO  MSG-LINE.\n222800     MOVE KLING-TOTAL TO TEMP-Z9.\n222900     MOVE TEMP-Z9                TO  MSG-LINE17-18.\n223000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n223100     MOVE '  INVADED THE GALAXY, BEFORE THEY CAN ATTACK THE'\n223200                                 TO  MSG-LINE.\n223300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n223400     MOVE '  FEDERATION HEADQUARTERS ON STARDATE     ;'\n223500                                 TO  MSG-LINE.\n223600     MOVE ENDDATE TO TEMP-ZZZ9.\n223700     MOVE TEMP-ZZZ9              TO  MSG-LINE39-42.\n223800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n223900     MOVE '  THIS GIVES YOU    STARDATES.'\n224000                                 TO  MSG-LINE.\n224100     COMPUTE TEMP-Z9 = ENDDATE - FIRST-STARDATE.\n224200     MOVE TEMP-Z9                TO  MSG-LINE18-19.\n224300     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n224400     MOVE '  THERE ARE    STARBASES IN THE GALAXY'\n224500                                 TO  MSG-LINE.\n224600     MOVE SBASE-TOTAL TO TEMP-Z9.\n224700     MOVE TEMP-Z9                TO  MSG-LINE13-14.\n224800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n224900     MOVE '  FOR RESUPPLYING YOUR SHIP.'\n225000                                 TO  MSG-LINE.\n225100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n225200     PERFORM S15-ENTER-NEW-QUADRANT THRU S15-EXIT.\n225300     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n225400     MOVE SPACES                 TO  CMDI.\n225500     MOVE 'FOR DETAILED OPERATING INSTRUCTIONS, PRESS \"PF1\"'\n225600                                 TO  MSG-LINE.\n225700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n225800     MOVE '  OTHERWISE, ISSUE YOUR FIRST COMMAND.'\n225900                                 TO  MSG-LINE.\n226000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n226100 W10-EXIT.  EXIT.\n226200     SKIP1\n226300 W70-INITIALIZE-GALAXY.\n226400     PERFORM C40-GET-RND THRU C40-EXIT.\n226500     MOVE +0                     TO  G-KLING (G-X1, G-X2).\n226600     IF RND > 0.80\n226700         ADD +1                  TO  G-KLING (G-X1, G-X2).\n226800     IF RND > 0.92\n226900         ADD +1                  TO  G-KLING (G-X1, G-X2).\n227000     IF RND > 0.97\n227100         ADD +1                  TO  G-KLING (G-X1, G-X2).\n227200     ADD G-KLING (G-X1, G-X2)    TO  KLING-TOTAL.\n227300     PERFORM C40-GET-RND THRU C40-EXIT.\n227400     MOVE +0                     TO  G-SBASE (G-X1, G-X2).\n227500     IF RND > 0.968\n227600         ADD +1                  TO  G-SBASE (G-X1, G-X2).\n227700     ADD G-SBASE (G-X1, G-X2)    TO  SBASE-TOTAL.\n227800     PERFORM C40-GET-RND THRU C40-EXIT.\n227900     COMPUTE G-STARS (G-X1, G-X2) = 3 + (6.9 * RND).\n228000     MOVE '0'                    TO  G-STATUS (G-X1, G-X2).\n228100 W70-EXIT.  EXIT.\n228200     SKIP1\n228300 X10-STAR-DESTROYED.\n228400     MOVE L-NULL TO SECTOR-DISP (SECTOR-X1, SECTOR-X2).\n228500     SET G-X1 TO EPRISE-GLXY-ROW.\n228600     SET G-X2 TO EPRISE-GLXY-COL.\n228700     SUBTRACT +1 FROM G-STARS (G-X1, G-X2).\n228800     MOVE 'TORPEDO DESTROYED THE STAR AT X:X'\n228900                                 TO  MSG-LINE.\n229000     MOVE TOR-ROW              TO  MSG-LINE31.\n229100     MOVE TOR-COL              TO  MSG-LINE33.\n229200     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n229300     PERFORM C40-GET-RND THRU C40-EXIT.\n229400     IF RND > +0.20\n229500         GO TO X10-EXIT.\n229600     MOVE L-NULL-TABLE           TO  SECTOR-AREA.\n229700     MOVE +3                     TO  WRAPUP-CODE.\n229800     SUBTRACT CURR-KLING FROM KLING-TOTAL.\n229900     MOVE '  UNFORTUNATELY, THE STAR WAS UNSTABLE AND BECAME'\n230000                                 TO  MSG-LINE.\n230100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n230200     MOVE '  A NOVA, VAPORIZING EVERYTHING IN THIS QUADRANT.'\n230300                                 TO  MSG-LINE.\n230400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n230500 X10-EXIT.  EXIT.\n230600     SKIP1\n230700 Z10-CLEAR-THE-SCREEN.\n230800** DFHTC TYPE=(ERASE,WRITE,WAIT)\n230900 Z10-EXIT.  EXIT.\n231000     SKIP1\n231100 Z80-GAME-OVER.\n231200     GO TO Z81, Z86, Z84, Z83, Z87, Z82\n231300         DEPENDING ON WRAPUP-CODE.\n231400     MOVE '*** PROGRAM ERROR (INVALID WRAPUP-CODE) ***'\n231500                                 TO  MSG-LINE.\n231600     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n231700     GO TO Z89-END-PROGRAM.\n231800 Z81.\n231900     MOVE '*** FATAL ERROR ***.  YOU JUST STRANDED YOUR SHIP'\n232000                                 TO  MSG-LINE.\n232100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n232200     MOVE '   IN SPACE!!  YOU HAVE INSUFFICIENT MANUEVERING'\n232300                                 TO  MSG-LINE.\n232400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n232500     MOVE '   ENERGY, AND SHIELD CONTROL IS PRESENTLY UNABLE'\n232600                                 TO  MSG-LINE.\n232700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n232800     MOVE '   TO CROSS-CIRCUIT SHIELD ENERGY TO THE ENGINES!!'\n232900                                 TO  MSG-LINE.\n233000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n233100     GO TO Z85.\n233200 Z82.\n233300     MOVE 'THAT DOES IT, CAPTAIN!!  YOU ARE HEREBY RELIEVED'\n233400                                 TO  MSG-LINE.\n233500     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n233600     MOVE '   OF COMMAND AND SENTENCED TO 99 STARDATES'\n233700                                 TO  MSG-LINE.\n233800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n233900     MOVE '   AT HARD LABOR ON CYGNUS 12!!'\n234000                                 TO  MSG-LINE.\n234100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n234200     GO TO Z86.\n234300 Z83.\n234400     MOVE 'YOU HAVE FAILED TO COMPLETE YOUR MISSION IN TIME.'\n234500                                 TO  MSG-LINE.\n234600     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n234700 Z84.\n234800     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n234900     MOVE 'THE ENTERPRISE HAS BEEN DESTROYED.'\n235000                                 TO  MSG-LINE.\n235100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n235200     MOVE 'THE FEDERATION WILL BE CONQUERED.'\n235300                                 TO  MSG-LINE.\n235400     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n235500 Z85.\n235600     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n235700     MOVE 'IT IS STARDATE'\n235800                                 TO  MSG-LINE.\n235900     MOVE STARDATE TO TEMP-ZZZ9.\n236000     MOVE TEMP-ZZZ9              TO  MSG-LINE16-19.\n236100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n236200 Z86.\n236300     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n236400     MOVE 'THERE WERE    KLINGON BATTLE CRUISERS LEFT'\n236500                                 TO  MSG-LINE.\n236600     MOVE KLING-TOTAL TO TEMP-Z9.\n236700     MOVE TEMP-Z9                TO  MSG-LINE12-13.\n236800     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n236900     MOVE '   AT THE END OF YOUR MISSION.'\n237000                                 TO  MSG-LINE.\n237100     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n237200     GO TO Z89-END-PROGRAM.\n237300 Z87.\n237400     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n237500     MOVE 'CONGRATULATIONS, CAPTAIN!!   THE LAST KLINGON'\n237600                                 TO  MSG-LINE.\n237700     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n237800     MOVE 'BATTLE CRUSIER MENACING THE FEDERATION'\n237900                                 TO  MSG-LINE.\n238000     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n238100     MOVE 'HAS BEEN DESTROYED, WITH ZZVZ STARDATES TO SPARE.'\n238200                                 TO  MSG-LINE.\n238300     COMPUTE TEMP-ZZVZ = ENDDATE - STARDATE.\n238400     MOVE TEMP-ZZVZ              TO  MSG-LINE26-29.\n238500     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n238600     PERFORM C60-BLANK-MSG THRU C60-EXIT.\n238700     MOVE 'YOUR EFFICIENCY RATING IS      ON THIS MISSION.'\n238800                                 TO  MSG-LINE.\n238900     COMPUTE TEMP-ZZZ9 ROUNDED =\n239000        ((ORIG-KLING * 1000) / (STARDATE - FIRST-STARDATE)).\n239100     MOVE TEMP-ZZZ9              TO  MSG-LINE27-30.\n239200     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n239300     MOVE 'YOU USED ZZ.9 OF YOUR ZZ.9 STARDATES TO DESTROY'\n239400                                 TO  MSG-LINE.\n239500     COMPUTE TEMP-ZZVZ = STARDATE - FIRST-STARDATE.\n239600     MOVE TEMP-ZZVZ              TO  MSG-LINE10-13.\n239700     COMPUTE TEMP-ZZVZ = ENDDATE - FIRST-STARDATE.\n239800     MOVE TEMP-ZZVZ              TO  MSG-LINE23-26.\n239900     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n240000     MOVE 'THE Z9 KLINGONS, WITH THE SUPPORT OF Z9 STARBASES.'\n240100                                 TO  MSG-LINE.\n240200     MOVE ORIG-KLING TO TEMP-Z9.\n240300     MOVE TEMP-Z9                TO  MSG-LINE05-06.\n240400     MOVE ORIG-SBASE TO TEMP-Z9.\n240500     MOVE TEMP-Z9                TO  MSG-LINE38-39.\n240600     PERFORM C50-NEXT-MSG THRU C50-EXIT.\n240700 Z89-END-PROGRAM.\n240800 Z80-EXIT.  EXIT.\n240900 Z99-ABEND.\n241000     STOP RUN.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SUBANAL": {"ttr": 9219, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00E\\x01\\x01\\x10\\x8f\\x01\\x01\\x10\\x8f\\x106\\x00k\\x00k\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-04-18T00:00:00", "modifydate": "2001-04-18T10:36:45", "lines": 107, "newlines": 107, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    SUBANAL.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. SUBANAL IS USED TO TEST THE ASSEMBLER PROBRAM PULLGRPS,\n000410*         WHICH CALLS THIS PROGRAM DYNAMICALLY.\n000420*         EACH TIME THIS PROGRAM IS CALLED, IT PRINTS THE CONTENT\n000430*         OF THE AREA PASSED BY PULLGRPS.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000710 FILE-CONTROL.\n000740     SELECT PRINT-FILE ASSIGN TO PRINT1.\n000800 DATA DIVISION.\n000810 FILE SECTION.\n000889 FD  PRINT-FILE\n000890     BLOCK CONTAINS 0 RECORDS\n000891     RECORD CONTAINS 133 CHARACTERS\n000892     RECORDING MODE IS F\n000893     LABEL RECORDS ARE STANDARD.\n000894 01  PRINT-LINE.                                                        10\n000895   05  CARRIAGE-CONTROL-BYTE   PIC X.                                   20\n000896   05  PRINT-DATA              PIC X(132).                              20\n000900\n000910 WORKING-STORAGE SECTION.\n001000 77  FILLER PIC X(36)  VALUE\n001100     'SUBANAL WORKING STORAGE BEGINS HERE'.\n001200 77  SUB                     PIC S9(4) COMP VALUE +0.\n001300\n001301 01  SWITCHES.\n001302     05  FIRST-TIME-SWITCH     PIC X VALUE 'Y'.\n001303         88  FIRST-TIME              VALUE 'Y'.\n001310\n001320 01  WS-PRINT-LINE1.\n001330     05  FILLER                PIC X(8) VALUE ' DSNAME='.\n001340     05  PRT-DSNAME            PIC X(44).\n001350     05  FILLER                PIC X(9) VALUE '  MEMBER='.\n001360     05  PRT-MEMBER            PIC X(8).\n001370     05  FILLER                PIC X(64) VALUE SPACES.\n001380\n001381 01  WS-PRINT-LINE2.\n001382     05  FILLER                PIC X(19) VALUE\n001383                                         ' STRING-FOUND-FLAG='.\n001384     05  PRT-MTCH-STRING-FLAG  PIC X.\n001385     05  FILLER                PIC X(14) VALUE '  MTCH-STRING='.\n001386     05  PRT-MTCH-STRING       PIC X(72).\n001387     05  FILLER                PIC X(27) VALUE SPACES.\n001388\n001389 01  WS-PRINT-LINE3.\n001390     05  FILLER                PIC X(16) VALUE\n001391                                         ' END-FOUND-FLAG='.\n001392     05  PRT-END-FOUND-FLAG    PIC X.\n001393     05  FILLER                PIC X(24) VALUE\n001394                                    '  NUMBER-LINES-IN-GROUP='.\n001395     05  PRT-NBR-LINES         PIC 999.\n001396     05  FILLER                PIC X(89) VALUE SPACES.\n001397\n001398 01  WS-PRINT-LINE4.\n001399     05  FILLER                PIC X(16) VALUE\n001400                                         '    LINE-NUMBER='.\n001401     05  PRT-LINE-NUMBER       PIC 999.\n001402     05  FILLER                PIC X(12) VALUE '  LINE-DATA='.\n001404     05  PRT-GROUP-LINE        PIC X(80).\n001405     05  FILLER                PIC X(22) VALUE SPACES.\n001406\n001426\n001430 LINKAGE SECTION.\n001500 01  PASSAREA.\n001510     05  LKG-DSNAME            PIC X(44).\n001520     05  LKG-MEMBER            PIC X(8).\n001530     05  LKG-MTCH-STRING       PIC X(72).\n001540     05  LKG-MTCH-STRING-FLAG  PIC X.\n001550         88  MATCH-STRING-FOUND VALUE 'Y'.\n001560     05  LKG-END-FOUND-FLAG    PIC X.\n001570         88  NORMAL-STATEMENT-END-FOUND VALUE 'Y'.\n001580     05  LKG-NBR-LINES         PIC S9(3) COMP-3.\n001590     05  LKG-GROUP-LINE        PIC X(80)\n001591                               OCCURS 100 TIMES.\n001600\n001700 PROCEDURE DIVISION USING PASSAREA.\n001800 A100-INITIALIZATION.\n001900     IF FIRST-TIME\n002000        MOVE 'N' TO FIRST-TIME-SWITCH,\n002610        OPEN OUTPUT PRINT-FILE.\n002700\n002710 B100-PROCESSING.\n002800     MOVE LKG-DSNAME TO PRT-DSNAME.\n002900     MOVE LKG-MEMBER TO PRT-MEMBER.\n003000     WRITE PRINT-LINE FROM WS-PRINT-LINE1\n003010           AFTER ADVANCING 3 LINES.\n003030     MOVE LKG-MTCH-STRING-FLAG TO PRT-MTCH-STRING-FLAG.\n003040     MOVE LKG-MTCH-STRING TO PRT-MTCH-STRING.\n003050     WRITE PRINT-LINE FROM WS-PRINT-LINE2\n003060           AFTER ADVANCING 1 LINE.\n003080     MOVE LKG-MTCH-STRING-FLAG TO PRT-MTCH-STRING-FLAG.\n003090     MOVE LKG-MTCH-STRING TO PRT-MTCH-STRING.\n003091     WRITE PRINT-LINE FROM WS-PRINT-LINE3\n003092           AFTER ADVANCING 1 LINE.\n003094     PERFORM L100-PRINT-GROUP-LINE\n003095        VARYING SUB FROM 1 BY 1\n003096           UNTIL SUB > LKG-NBR-LINES.\n003098     GOBACK.\n003099\n003100 L100-PRINT-GROUP-LINE.\n003101     MOVE SUB TO PRT-LINE-NUMBER.\n003102     MOVE LKG-GROUP-LINE (SUB) TO PRT-GROUP-LINE.\n003103     WRITE PRINT-LINE FROM WS-PRINT-LINE4\n003110           AFTER ADVANCING 1 LINE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TGTCOBV": {"ttr": 9222, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\t\\x01\\x01\\x01\\x8f\\x01\\x01\\x01\\x8f\\x10\\x19\\x00@\\x00@\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-01-18T00:00:00", "modifydate": "2001-01-18T10:19:09", "lines": 64, "newlines": 64, "modlines": 0, "user": "BC0THOR"}, "text": "TGT                          00000\n\nSAVE AREA               18F  00000\nSWITCH                  XL4  00048\nTALLY                   F    0004C\nSORT SAVE               A    00050\nENTRY-SAVE              F    00054\nSORT CORE SIZE          F    00058\nRET CODE                H    0005C\nSORT RET                H    0005E\nWORKING CELLS           76F  00060\nSORT FILE SIZE          F    00190\nSORT MODE SIZE          F    00194\nPGT-VN TBL              F    00198\nTGT-VN TBL              F    0019C\nRESERVED                F    001A0\nLENGTH OF VN TBL        H    001A4\nLABEL RET               X    001A6\nRESERVED                X    001A7\nDBG R14SAVE             A    001A8\nCOBOL INDICATOR         XL4  001AC\nA(INIT1)                A    001B0\nDEBUG TABLE PTR         A    001B4\nSUBCOM PTR              A    001B8\nSORT-MESSAGE            XL8  001BC\nSYSOUT DDNAME           X    001C4\nRESERVED                X    001C5\nCOBOL ID                H    001C6\nCOMPILED POINTER        A    001C8\nCOUNT TABLE ADDRESS     A    001CC\nRESERVED                2F   001D0\nDBG R11SAVE             A    001D8\nCOUNT CHAIN ADDRESS     A    001DC\nPRBL1 CELL PTR          A    001E0\nRESERVED                XL5  001E4\nTA LENGTH               XL3  001E9\nRESERVED                XL8  001EC\nPCS LIT PTR             A    001F4\nDEBUGGING               F    001F8\nCD FOR INITIAL INPUT    F    001FC\nOVERFLOW CELLS          0A   001F0\nBL CELLS                3A   001F0\nDECBADR CELLS           0A   0020C\nFIB CELLS               A    0020C\nTEMP STORAGE            10F  00210\nTEMP STORAGE-2          10X  00238\nTEMP STORAGE-3          0X   00248\nTEMP STORAGE-4          0X   00248\nBLL CELLS               2A   00248\nVLC CELLS               0A   00250\nSBL CELLS               0A   00250\nINDEX CELLS             0A   00250\nSUBADR CELLS            0A   00250\nONCTL CELLS             0A   00250\nPFMCTL CELLS            0A   00250\nPFMSAV CELLS            0A   00250\nVN CELLS                16A  00280\nSAVE AREA =2            0F   002C0\nSAVE AREA =3            3F   002C0\nXSASW CELLS             0A   002CC\nXSA CELLS               0A   002CC\nPARAM CELLS             4A   002CC\nRPTSAV AREA             0F   002DC\nCHECKPT CTR             0F   002DC\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSTDYNA": {"ttr": 9224, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00%\\x00\\x903/\\x00\\x93\\x07\\x0f\\x14@\\x00\\xa2\\x00\\xa2\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1990-11-28T00:00:00", "modifydate": "1993-03-11T14:40:25", "lines": 162, "newlines": 162, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    TSTDYNA.\n000300 AUTHOR. R THORNTON\n000400 REMARKS. UTILITY PROGRAM TO TEST THE DYNALLOC SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900     SELECT OUTPUT-FILE ASSIGN TO UT-S-OUTPUT1.\n001000 DATA DIVISION.\n001100 FILE SECTION.\n001200 FD  OUTPUT-FILE\n001300     RECORDING MODE IS F\n001400     RECORD CONTAINS 80 CHARACTERS\n001500     BLOCK CONTAINS 0 RECORDS\n001600     LABEL RECORDS ARE STANDARD\n001700     DATA RECORD IS OUTPUT-RECORD.\n001800 01  OUTPUT-RECORD               PIC X(80).\n001900\n002000 WORKING-STORAGE SECTION.\n002100 77  FILLER PIC X(36)  VALUE\n002200     'TSTDYNA WORKING STORAGE BEGINS HERE'.\n002300\n002400 01  ALLOCATE-DATA.\n002500     05 DDNAME                   PIC X(8).\n002600     05 DATASET-NAME             PIC X(44).\n002700     05 MEMBER-NAME              PIC X(8).\n002800     05 CURRENT-STATUS           PIC X.\n002900        88 STATUS-OLD            VALUE 'O'.\n003000        88 STATUS-MOD            VALUE 'M'.\n003100        88 STATUS-NEW            VALUE 'N'.\n003200        88 STATUS-SHR            VALUE 'S'.\n003300     05 NORMAL-DISPOSITION       PIC X.\n003400        88 NORM-UNCATLG          VALUE 'U'.\n003500        88 NORM-CATLG            VALUE 'C'.\n003600        88 NORM-DELETE           VALUE 'D'.\n003700        88 NORM-KEEP             VALUE 'K'.\n003800     05 CONDITIONAL-DISPOSITION  PIC X.\n003900        88 COND-UNCATLG          VALUE 'U'.\n004000        88 COND-CATLG            VALUE 'C'.\n004100        88 COND-DELETE           VALUE 'D'.\n004200        88 COND-KEEP             VALUE 'K'.\n004300     05 UNIT-NAME                PIC X(8).\n004400     05 UNIT-COUNT               PIC S9(4) COMP.\n004500     05 VOLUME-SERIAL            PIC X(6).\n004600     05 LABEL-TYPE               PIC X.\n004700        88 NO-LABELS             VALUE 'N'.\n004800        88 STANDARD-LABELS       VALUE 'S'.\n004900        88 BYPASS-LABELS         VALUE 'B'.\n005000     05 DATASET-SEQUENCE         PIC S9(4) COMP.\n005100     05 FREE-CLOSE               PIC X.\n005200        88 FREE-WHEN-CLOSED      VALUE 'F'.\n005300     05 RETENTION-PERIOD-DAYS    PIC S9(4) COMP.\n005400     05 RECORDING-MODE           PIC X.\n005500        88 FIXED-RECORDS         VALUE 'F'.\n005600        88 VARIABLE-RECORDS      VALUE 'V'.\n005700        88 UNDEFINED-RECORDS     VALUE 'U'.\n005800        88 FIXED-STANDARD        VALUE 'S'.\n005900     05 BLOCKING                 PIC X.\n006000        88 BLOCKED-RECORDS       VALUE 'B'.\n006100     05 CONTROL-CHARACTERS       PIC X.\n006200        88 ASA-CONTROL-CHAR      VALUE 'A'.\n006300     05 LOGICAL-RECORD-LENGTH    PIC S9(4) COMP.\n006400     05 BLOCK-LENGTH             PIC S9(4) COMP.\n006500     05 TAPE-DENSITY             PIC X.\n006600        88 800-BPI               VALUE '8'.\n006700        88 1600-BPI              VALUE '1'.\n006800        88 6250-BPI              VALUE '6'.\n006900     05 NUMBER-BUFFERS           PIC S9(4) COMP.\n007000     05 KEY-LENGTH               PIC S9(4) COMP.\n007100     05 DATASET-ORGANIZATION     PIC X.\n007200        88 VSAM-DATASET          VALUE 'V'.\n007300        88 PARTITIONED-DATASET   VALUE 'P'.\n007400        88 DIRECT-DATASET        VALUE 'D'.\n007500        88 PHYSICAL-SEQUENTIAL   VALUE 'S'.\n007600     05 SPACE-TYPE               PIC X.\n007700        88 CYLINDER-REQUEST      VALUE 'C'.\n007800        88 TRACK-REQUEST         VALUE 'T'.\n007900     05 PRIMARY-SPACE-AMOUNT     PIC S9(4) COMP.\n008000     05 SECONDARY-SPACE-AMOUNT   PIC S9(4) COMP.\n008100     05 RELEASE-SPACE            PIC X.\n008200        88 RELEASE-UNUSED        VALUE 'R'.\n008300     05 NBR-DIRECTORY-BLOCKS     PIC S9(4) COMP.\n008400     05 EXPIRATION-DATE-YYDDD    PIC X(5).\n008500\n008600 01  ALLOCATION-RESULT.\n008700     05 DYNALLOC-REQUEST         PIC X.\n008800        88 ALLOCATION-REQUEST    VALUE 'A'.\n008900        88 VOLSER-REQUEST        VALUE 'V'.\n009000     05 DYNALLOC-RETURN-CODE     PIC XX.\n009100        88 SUCCESSFUL-ALLOCATION VALUE '00'.\n009200        88 ENVIRONMENT-ERROR     VALUE '04'.\n009300        88 VALIDATION-DENIAL     VALUE '08'.\n009400        88 PARAMETER-ERROR       VALUE '12'.\n009500     05 ERROR-REASON-CODE.\n009600        10 CLASS-7-CODE              PIC X.\n009700        10 ERROR-CLASS               PIC X.\n009800           88 UNAVAILABLE-RESOURCE   VALUE '2'.\n009900           88 INVALID-PARAMETER-LIST VALUE '3'.\n010000           88 ERROR-IN-ENVIRONMENT   VALUE '4'.\n010100           88 SYSTEM-ROUTINE-ERROR   VALUE '7'.\n010200        10 SPECIFIC-ERROR-CODE       PIC XX.\n010300     05 INFORMATION-REASON           PIC X(4).\n010400\n010500 PROCEDURE DIVISION.\n010600\n010700 A100-EXECUTIVE-CONTROL.\n010800     PERFORM A200-ALLOCATE-THE-FILE THRU A200-EXIT.\n010900     PERFORM B100-MAINLINE-PROCESSING.\n011000     PERFORM Z100-END-OF-PROCESSING.\n011100     GOBACK.\n011200\n011300 A200-ALLOCATE-THE-FILE.\n011400      MOVE LOW-VALUES TO ALLOCATE-DATA.\n011500      MOVE 'OUTPUT1' TO DDNAME.\n011600      MOVE 'HCS.PROD.DICK001' TO DATASET-NAME.\n011700      MOVE '+1' TO MEMBER-NAME.\n011800      MOVE 'N' TO CURRENT-STATUS.\n011900      MOVE 'C' TO NORMAL-DISPOSITION.\n012000      MOVE 'D' TO CONDITIONAL-DISPOSITION.\n012100      MOVE 'DISK' TO UNIT-NAME.\n012200      MOVE 'F' TO RECORDING-MODE.\n012300      MOVE 'B' TO BLOCKING.\n012400      MOVE 80 TO LOGICAL-RECORD-LENGTH.\n012500      MOVE 23440 TO BLOCK-LENGTH.\n012600      MOVE 'S' TO DATASET-ORGANIZATION.\n012700      MOVE 'C' TO SPACE-TYPE.\n012800      MOVE 'R' TO RELEASE-SPACE.\n012900      MOVE 5 TO PRIMARY-SPACE-AMOUNT.\n013000      MOVE 2 TO SECONDARY-SPACE-AMOUNT.\n013100      CALL 'DYNALLOC' USING ALLOCATE-DATA, ALLOCATION-RESULT.\n013200      IF SUCCESSFUL-ALLOCATION OPEN OUTPUT OUTPUT-FILE\n013300         ELSE DISPLAY 'UNABLE TO ALLOCATE OUTPUT1, RETURN CODE '\n013400                      DYNALLOC-RETURN-CODE ' ERROR REASON CODE '\n013500                      ERROR-REASON-CODE,\n013600                      CALL 'COBABEND'.\n013700 A200-EXIT. EXIT.\n013800\n013900 B100-MAINLINE-PROCESSING.\n014000     MOVE 'RECORD 1' TO OUTPUT-RECORD.\n014100     WRITE OUTPUT-RECORD.\n014200     MOVE 'RECORD 2' TO OUTPUT-RECORD.\n014300     WRITE OUTPUT-RECORD.\n014400     MOVE 'RECORD 3' TO OUTPUT-RECORD.\n014500     WRITE OUTPUT-RECORD.\n014600     MOVE 'RECORD 4' TO OUTPUT-RECORD.\n014700     WRITE OUTPUT-RECORD.\n014800     MOVE 'RECORD 5' TO OUTPUT-RECORD.\n014900     WRITE OUTPUT-RECORD.\n015000     MOVE 'RECORD 6' TO OUTPUT-RECORD.\n015100     WRITE OUTPUT-RECORD.\n015200     MOVE 'RECORD 7' TO OUTPUT-RECORD.\n015300     WRITE OUTPUT-RECORD.\n015400     MOVE 'RECORD 8' TO OUTPUT-RECORD.\n015500     WRITE OUTPUT-RECORD.\n015600     MOVE 'RECORD 9' TO OUTPUT-RECORD.\n015700     WRITE OUTPUT-RECORD.\n015800 B100-EXIT. EXIT.\n015900\n016000 Z100-END-OF-PROCESSING.\n016100     CLOSE OUTPUT-FILE.\n016200 Z100-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSTFREPL": {"ttr": 9228, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00B\\x00\\x95&\\x9f\\x00\\x95&\\x9f\\x166\\x00w\\x00x\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1995-09-26T00:00:00", "modifydate": "1995-09-26T16:36:42", "lines": 119, "newlines": 120, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    TSTFREPL.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET FOR THE FREEPOOL SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900     SELECT INPUT-FILE ASSIGN TO INPUT1.\n001000     SELECT OUTPUT-FILE ASSIGN TO OUTPUT1.\n001100     SELECT PRINT-FILE ASSIGN TO PRINT1.\n001200 DATA DIVISION.\n001300 FILE SECTION.\n001400 FD  INPUT-FILE\n001500     BLOCK CONTAINS 0 RECORDS\n001600     RECORD CONTAINS 80 CHARACTERS\n001700     RECORDING MODE IS F\n001800     LABEL RECORDS ARE STANDARD.\n001900 01  INPUT-RECORD.                                                      10\n002000   05  FIELD-1               PIC XX.                                    20\n002100   05  FIELD-2               PIC X(14).                                 30\n002200   05  FIELD-3               PIC Z(5).                                  30\n002300   05  FILLER                PIC X(59).                                 40\n002400 01  REC-DEFN-2.\n002500   05  DEF-2-FLD1            PIC X(55).\n002600   05  FILLER                PIC X(25).\n002700\n002800 FD  OUTPUT-FILE\n002900     BLOCK CONTAINS 0 RECORDS\n003000     RECORD CONTAINS 80 CHARACTERS\n003100     RECORDING MODE IS F\n003200     LABEL RECORDS ARE STANDARD.\n003300 01  OUTPUT-RECORD.                                                     10\n003400   05  OUT-FLD-1             PIC XX.                                    20\n003500   05  OUT-FLD-2             PIC X(14).                                 30\n003600   05  OUT-FLD-3             PIC Z(5).                                  30\n003700   05  FILLER                PIC X(59).                                 40\n003800\n003900 FD  PRINT-FILE\n004000     BLOCK CONTAINS 0 RECORDS\n004100     RECORD CONTAINS 133 CHARACTERS\n004200     RECORDING MODE IS F\n004300     LABEL RECORDS ARE STANDARD.\n004400 01  PRINT-RECORD.                                                      10\n004500   05  CARRIAGE-CONTROL-BYTE PIC X.                                     20\n004600   05  PRT-FIELD-1           PIC XX.                                    20\n004700   05  PRT-FIELD-2           PIC X(9).                                  30\n004800   05  PRT-COUNTER           PIC ZZ,ZZZ,ZZ9.                            30\n004900   05  FILLER                PIC X(111).                                40\n005000\n005100 WORKING-STORAGE SECTION.\n005200 77  FILLER PIC X(36)  VALUE\n005300     'TSTFREPL WORKING STORAGE BEGINS HERE'.\n005400 77  SUB                     PIC S9(4) COMP VALUE +0.\n005500 01  GENERAL-AREAS.\n005600     05  FREEPOOL-CODE       PIC X VALUE 'F'.\n005700     05  LOCATE-CODE         PIC X VALUE 'L'.\n005800     05  INPUT-DDNAME        PIC X(8) VALUE 'INPUT1  '.\n005900     05  LINE-SPACING        PIC 9 VALUE 1.\n006000     05  END-OF-INPUT-SWITCH PIC X VALUE 'N'.\n006100         88  END-OF-INPUT-DATA  VALUE IS 'Y'.\n006200         88  MORE-DATA-TO-PROCESS VALUE IS 'N'.\n006300     05  COUNTER             PIC S9(8) COMP-3 VALUE +0.\n006400\n006500 LINKAGE SECTION.\n006600 01  PARM-FIELD.\n006700     05  PARM-LENGTH         PIC S9(4) COMP.\n006800     05  PARM-DATA           PIC X(104).\n006900\n007000 PROCEDURE DIVISION USING PARM-FIELD.\n007100\n007200 A100-EXECUTIVE-CONTROL.\n007300     PERFORM A100-INITIALIZATION.\n007400     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT-DATA.\n007500     PERFORM Z100-END-OF-PROCESSING.\n007700     PERFORM B100-MAINLINE-PROCESSING UNTIL END-OF-INPUT-DATA.\n007800     PERFORM Z100-END-OF-PROCESSING.\n007900     GOBACK.\n008000\n008100 A100-INITIALIZATION.\n008200     OPEN INPUT INPUT-FILE,\n008300          OUTPUT OUTPUT-FILE, PRINT-FILE.\n008400     CALL 'FREEPOOL' USING LOCATE-CODE, INPUT-DDNAME.\n008500\n008600 B100-MAINLINE-PROCESSING.\n008700     PERFORM C100-READ-INPUT-FILE THRU C100-EXIT.\n008800     IF MORE-DATA-TO-PROCESS\n008900        PERFORM D100-PROCESS-THE-RECORD THRU D100-EXIT.\n009000     PERFORM E100-WRITE-OUTPUT-FILE THRU E100-EXIT.\n009100\n009200 C100-READ-INPUT-FILE.\n009300     READ INPUT-FILE\n009400         AT END MOVE 'Y' TO END-OF-INPUT-SWITCH.\n009500 C100-EXIT. EXIT.\n009600\n009700 D100-PROCESS-THE-RECORD.\n009800     ADD 1 TO COUNTER.\n009900 D100-EXIT. EXIT.\n010000\n010100 E100-WRITE-OUTPUT-FILE.\n010200     WRITE OUTPUT-RECORD.\n010300 E100-EXIT. EXIT.\n010400\n010500 Y100-PRINT-A-LINE.\n010600     WRITE PRINT-RECORD AFTER ADVANCING LINE-SPACING.\n010700 Y100-EXIT. EXIT.\n010800\n010900 Z100-END-OF-PROCESSING.\n011000     MOVE COUNTER TO PRT-COUNTER.\n011100     PERFORM Y100-PRINT-A-LINE THRU Y100-EXIT.\n011200     ADD 1 TO SUB.\n011300     IF SUB = 1\n011400         CLOSE INPUT-FILE\n011500         CALL 'FREEPOOL' USING FREEPOOL-CODE\n011600         OPEN INPUT INPUT-FILE\n011700     ELSE\n011800         CLOSE INPUT-FILE\n011900               OUTPUT-FILE\n012000               PRINT-FILE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TSTGNLDT": {"ttr": 9231, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x003\\x00\\x904o\\x00\\x94%\\x8f\\x155\\x00p\\x00p\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "1990-12-12T00:00:00", "modifydate": "1994-09-15T15:35:33", "lines": 112, "newlines": 112, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    TSTGNLDT.\n000300*AUTHOR. R THORNTON\n000400*REMARKS. UTILITY PROGRAM TO TEST THE GENLDATE SUBROUTINE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900     SELECT PRINT-FILE ASSIGN TO UT-S-PRINT1.\n001000 DATA DIVISION.\n001100 FILE SECTION.\n001200 FD  PRINT-FILE\n001300     RECORDING MODE IS F\n001400     RECORD CONTAINS 80 CHARACTERS\n001500     BLOCK CONTAINS 0 RECORDS\n001600     LABEL RECORDS ARE STANDARD\n001700     DATA RECORD IS PRINT-LINE.\n001800 01  PRINT-LINE                  PIC X(80).\n001900\n002000 WORKING-STORAGE SECTION.\n002100 77  FILLER PIC X(36)  VALUE\n002200     'TSTGNLDT WORKING STORAGE BEGINS HERE'.\n002300\n002400 01  DATEPARM.\n002500     05  DATE-TYPE                           PIC X(01).\n002600         88  JULIAN-SUPPLIED                 VALUE 'J'.\n002700         88  GREGORIAN-SUPPLIED              VALUE 'G'.\n002800     05  DATE-ERROR                          PIC X(01).\n002900         88  NO-DATE-ERROR                   VALUE ' '.\n003000         88  DATE-IN-ERROR                   VALUE 'E'.\n003100     05  DAY-OF-THE-WEEK                     PIC X(01).\n003200         88  MONDAY                          VALUE '1'.\n003300         88  TUESDAY                         VALUE '2'.\n003400         88  WEDNESDAY                       VALUE '3'.\n003500         88  THURSDAY                        VALUE '4'.\n003600         88  FRIDAY                          VALUE '5'.\n003700         88  SATURDAY                        VALUE '6'.\n003800         88  SUNDAY                          VALUE '7'.\n003900     05  HOLIDAY-INDICATOR                   PIC X(01).\n004000         88  NOT-A-HOLIDAY                   VALUE ' '.\n004100         88  NEW-YEARS-DAY                   VALUE '1'.\n004200         88  WASHINGTONS-BIRTHDAY            VALUE '2'.\n004300         88  GOOD-FRIDAY                     VALUE '3'.\n004400         88  MEMORIAL-DAY                    VALUE '4'.\n004500         88  INDEPENDENCE-DAY                VALUE '5'.\n004600         88  LABOR-DAY                       VALUE '6'.\n004700         88  THANKSGIVING-DAY                VALUE '7'.\n004800         88  THANKSGIVING-FRIDAY             VALUE '8'.\n004900         88  CHRISTMAS-DAY                   VALUE '9'.\n005000     05  YEAR-TYPE                           PIC X(01).\n005100         88  NOT-LEAP-YEAR                   VALUE '0'.\n005200         88  LEAP-YEAR                       VALUE '1'.\n005300     05  JULIAN-DATE                         PIC 9(05) COMP-3.\n005400     05  GREGORIAN-DATE                      PIC 9(06).\n005500     05  LITERAL-DATE                        PIC X(18).\n005600     05  JULIAN-SLASH                        PIC X(06).\n005700     05  GREGORIAN-SLASH                     PIC X(08).\n005800     05  DAY-LITERAL                         PIC X(09).\n005900     05  MONTH-LITERAL                       PIC X(09).\n006000\n006100\n006200 01  WS-PRINT-LINE.\n006300     05  FILLER                  PIC X(01) VALUE SPACE.\n006400     05  PDATE-ERROR             PIC X(01).\n006500     05  FILLER                  PIC X(01) VALUE SPACE.\n006600     05  PDAY-OF-THE-WEEK        PIC X(01).\n006700     05  FILLER                  PIC X(01) VALUE SPACE.\n006800     05  PHOLIDAY-INDICATOR      PIC X(01).\n006900     05  FILLER                  PIC X(01) VALUE SPACE.\n007000     05  PYEAR-TYPE              PIC X(01).\n007100     05  FILLER                  PIC X(01) VALUE SPACE.\n007200     05  PJULIAN-DATE            PIC 9(05) COMP-3.\n007300     05  FILLER                  PIC X(01) VALUE SPACE.\n007400     05  PGREGORIAN-DATE         PIC 9(06).\n007500     05  FILLER                  PIC X(01) VALUE SPACE.\n007600     05  PLITERAL-DATE           PIC X(18).\n007700     05  FILLER                  PIC X(01) VALUE SPACE.\n007800     05  PJULIAN-SLASH           PIC X(06).\n007900     05  FILLER                  PIC X(01) VALUE SPACE.\n008000     05  PGREGORIAN-SLASH        PIC X(08).\n008100     05  FILLER                  PIC X(01) VALUE SPACE.\n008200     05  PDAY-LITERAL            PIC X(09).\n008300     05  FILLER                  PIC X(01) VALUE SPACE.\n008400     05  PMONTH-LITERAL          PIC X(09).\n008500\n008600 PROCEDURE DIVISION.\n008700     OPEN OUTPUT PRINT-FILE.\n008800     MOVE SPACES TO DATEPARM.\n008900     MOVE 'J' TO DATE-TYPE.\n009000     MOVE 90001 TO JULIAN-DATE.\n009100     PERFORM B100-PRINT-DATE THRU B100-EXIT\n009200         VARYING JULIAN-DATE FROM 90001 BY 1\n009300         UNTIL JULIAN-DATE IS GREATER THAN 90366.\n009400     CLOSE PRINT-FILE.\n009500     GOBACK.\n009600 B100-PRINT-DATE.\n009700     CALL 'GENLDATE' USING DATEPARM.\n009800     IF NOT-A-HOLIDAY AND NO-DATE-ERROR\n009900         GO TO B100-EXIT.\n010000     MOVE DATE-ERROR TO PDATE-ERROR.\n010100     MOVE DAY-OF-THE-WEEK TO PDAY-OF-THE-WEEK.\n010200     MOVE  HOLIDAY-INDICATOR TO PHOLIDAY-INDICATOR.\n010300     MOVE  YEAR-TYPE TO PYEAR-TYPE.\n010400     MOVE  JULIAN-DATE TO PJULIAN-DATE.\n010500     MOVE  GREGORIAN-DATE TO PGREGORIAN-DATE.\n010600     MOVE  LITERAL-DATE TO PLITERAL-DATE.\n010700     MOVE  JULIAN-SLASH TO PJULIAN-SLASH.\n010800     MOVE  GREGORIAN-SLASH TO PGREGORIAN-SLASH.\n010900     MOVE  DAY-LITERAL TO PDAY-LITERAL.\n011000     MOVE  MONTH-LITERAL TO PMONTH-LITERAL.\n011100     WRITE PRINT-LINE FROM WS-PRINT-LINE.\n011200 B100-EXIT. EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TWOPROG": {"ttr": 9475, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x19\\x00\\x93\\x07\\x0f\\x00\\x93\\x07\\x0f\\x14C\\x00\\x1c\\x00\\x1c\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-03-11T00:00:00", "modifydate": "1993-03-11T14:43:19", "lines": 28, "newlines": 28, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. TWOPROG.\n000300 ENVIRONMENT DIVISION.\n000400 INPUT-OUTPUT SECTION.\n000500*\n000600 FILE-CONTROL.\n000700 DATA DIVISION.\n000800 FILE SECTION.\n000900*\n001000 WORKING-STORAGE SECTION.\n001100 77   FILLER         PIC X(35) VALUE 'START OF TWOPROG W.S.'.\n001200*\n001300 LINKAGE SECTION.\n001400 01   PASS-CODE            PIC 9.\n001500 01   TOTAL-COUNT          PIC 999.\n001600*\n001700 PROCEDURE DIVISION USING PASS-CODE, TOTAL-COUNT.\n001800*\n001900 START-TWOPROG.\n002000      IF PASS-CODE = 1\n002100           MOVE 7 TO PASS-CODE\n002200      ELSE\n002300           IF PASS-CODE = 2\n002400               MOVE 8 TO PASS-CODE\n002500           ELSE\n002600               MOVE 9 TO PASS-CODE,\n002700               SUBTRACT 30 FROM TOTAL-COUNT.\n002800      GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VERBCHEK": {"ttr": 9477, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00D\\x01\\x02\\x00O\\x01\\x02\\x00O\\x150\\x00j\\x00i\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2002-01-04T00:00:00", "modifydate": "2002-01-04T15:30:44", "lines": 106, "newlines": 105, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.                                               00\n000200 PROGRAM-ID.    VERBCHEK.                                               00\n000300 AUTHOR. R THORNTON.                                                    00\n000400*REMARKS. SHOWS EXAMPLES OF VARIOUS COBOL VERBS.                        00\n000500 ENVIRONMENT DIVISION.                                                  00\n000600 CONFIGURATION SECTION.                                                 00\n000700 INPUT-OUTPUT SECTION.                                                  00\n000800 FILE-CONTROL.                                                          00\n000900     SELECT INPUT-FILE ASSIGN TO UT-S-INPUT1.                           00\n001000     SELECT OUTPUT-FILE ASSIGN TO UT-S-OUTPUT1.                         00\n001100 DATA DIVISION.                                                         00\n001200 FILE SECTION.                                                          00\n001300                                                                        00\n001400 FD INPUT-FILE                                                          00\n001500     RECORD CONTAINS 80 CHARACTERS                                      00\n001600     RECORDING MODE IS F                                                00\n001700     BLOCK CONTAINS 0 RECORDS                                           00\n001800     LABEL RECORD IS STANDARD                                           00\n001900     DATA RECORD IS INPUT-RECORD.                                       00\n002000                                                                        00\n002100 01  INPUT-RECORD.                                                      00\n002200     05  FILLER              PIC X(80).                                 00\n002300                                                                        00\n002400 FD OUTPUT-FILE                                                         00\n002500     RECORD CONTAINS 80 CHARACTERS                                      00\n002600     RECORDING MODE IS F                                                00\n002700     BLOCK CONTAINS 0 RECORDS                                           00\n002800     LABEL RECORD IS STANDARD                                           00\n002900     DATA RECORD IS INPUT-RECORD.                                       00\n003000                                                                        00\n003100 01  OUTPUT-RECORD.                                                     00\n003200     05  FILLER              PIC X(80).                                 00\n003300                                                                        00\n003400 WORKING-STORAGE SECTION.                                               00\n003500 77  FILLER PIC X(36)  VALUE                                            00\n003600     'VERBCHEK WORKING STORAGE BEGINS HERE'.                            00\n003700                                                                        00\n003800 01  MISCELLANEOUS-AREAS.                                               00\n003900     05 EOF-SWITCH               PIC X VALUE 'N'.                       00\n004000        88 END-OF-INPUT          VALUE 'Y'.                             00\n004100        88 MORE-INPUT            VALUE 'N'.                             00\n004200     05 TEXT-STRING              PIC XXX VALUE 'YES'.\n004300     05 ACCEPTED-DATE            PIC 9(6).\n004400     05 BINARY-HALFWORD          PIC S99V99 BINARY.\n004500     05 BINARY-FULLWORD          PIC S9(5)V99 BINARY.\n004600     05 BINARY-DOUBLEWORD        PIC S9(7)V99 BINARY.\n004700     05 ZONED-NUMBER             PIC S9(6)V9.\n004800     05 PACKED-NUMBER            PIC S9(6)V999 COMP-3.\n004900     05 FLOATING-POINT-SHORT     COMP-1.\n005000     05 FLOATING-POINT-LONG      COMP-2.\n005100     05 INDEX-CELL               INDEX.\n005200                                                                        00\n005300                                                                        00\n005400 PROCEDURE DIVISION.                                                    00\n005500     ACCEPT TEXT-STRING.                                                00\n005600     ACCEPT ACCEPTED-DATE FROM DATE.                                    00\n005700     ADD BINARY-HALFWORD TO BINARY-HALFWORD ROUNDED.\n005800     ADD BINARY-HALFWORD TO BINARY-FULLWORD ROUNDED.\n005900     ADD BINARY-HALFWORD TO BINARY-DOUBLEWORD ROUNDED.\n006000     ADD BINARY-HALFWORD TO ZONED-NUMBER ROUNDED.\n006100     ADD BINARY-HALFWORD TO PACKED-NUMBER ROUNDED.\n006200     ADD BINARY-HALFWORD TO FLOATING-POINT-SHORT ROUNDED.\n006300     ADD BINARY-HALFWORD TO FLOATING-POINT-LONG ROUNDED.\n006400     ADD BINARY-FULLWORD TO BINARY-HALFWORD ROUNDED.\n006500     ADD BINARY-FULLWORD TO BINARY-FULLWORD ROUNDED.\n006600     ADD BINARY-FULLWORD TO BINARY-DOUBLEWORD ROUNDED.\n006700     ADD BINARY-FULLWORD TO ZONED-NUMBER ROUNDED.\n006800     ADD BINARY-FULLWORD TO PACKED-NUMBER ROUNDED.\n006900     ADD BINARY-FULLWORD TO FLOATING-POINT-SHORT ROUNDED.\n007000     ADD BINARY-FULLWORD TO FLOATING-POINT-LONG ROUNDED.\n007100     ADD BINARY-DOUBLEWORD TO BINARY-HALFWORD ROUNDED.\n007200     ADD BINARY-DOUBLEWORD TO BINARY-FULLWORD ROUNDED.\n007300     ADD BINARY-DOUBLEWORD TO BINARY-DOUBLEWORD ROUNDED.\n007400     ADD BINARY-DOUBLEWORD TO ZONED-NUMBER ROUNDED.\n007500     ADD BINARY-DOUBLEWORD TO PACKED-NUMBER ROUNDED.\n007600     ADD BINARY-DOUBLEWORD TO FLOATING-POINT-SHORT ROUNDED.\n007700     ADD BINARY-DOUBLEWORD TO FLOATING-POINT-LONG ROUNDED.\n007800     ADD ZONED-NUMBER TO BINARY-HALFWORD ROUNDED.\n007900     ADD ZONED-NUMBER TO BINARY-FULLWORD ROUNDED.\n008000     ADD ZONED-NUMBER TO BINARY-DOUBLEWORD ROUNDED.\n008100     ADD ZONED-NUMBER TO ZONED-NUMBER ROUNDED.\n008200     ADD ZONED-NUMBER TO PACKED-NUMBER ROUNDED.\n008300     ADD ZONED-NUMBER TO FLOATING-POINT-SHORT ROUNDED.\n008400     ADD ZONED-NUMBER TO FLOATING-POINT-LONG ROUNDED.\n008500     ADD PACKED-NUMBER TO BINARY-HALFWORD ROUNDED.\n008600     ADD PACKED-NUMBER TO BINARY-FULLWORD ROUNDED.\n008700     ADD PACKED-NUMBER TO BINARY-DOUBLEWORD ROUNDED.\n008800     ADD PACKED-NUMBER TO ZONED-NUMBER ROUNDED.\n008900     ADD PACKED-NUMBER TO PACKED-NUMBER ROUNDED.\n009000     ADD PACKED-NUMBER TO FLOATING-POINT-SHORT ROUNDED.\n009100     ADD PACKED-NUMBER TO FLOATING-POINT-LONG ROUNDED.\n009200     ADD FLOATING-POINT-SHORT TO BINARY-HALFWORD ROUNDED.\n009300     ADD FLOATING-POINT-SHORT TO BINARY-FULLWORD ROUNDED.\n009400     ADD FLOATING-POINT-SHORT TO BINARY-DOUBLEWORD ROUNDED.\n009500     ADD FLOATING-POINT-SHORT TO ZONED-NUMBER ROUNDED.\n009600     ADD FLOATING-POINT-SHORT TO PACKED-NUMBER ROUNDED.\n009700     ADD FLOATING-POINT-SHORT TO FLOATING-POINT-SHORT ROUNDED.\n009800     ADD FLOATING-POINT-SHORT TO FLOATING-POINT-LONG ROUNDED.\n009900     ADD FLOATING-POINT-LONG TO BINARY-HALFWORD ROUNDED.\n010000     ADD FLOATING-POINT-LONG TO BINARY-FULLWORD ROUNDED.\n010100     ADD FLOATING-POINT-LONG TO BINARY-DOUBLEWORD ROUNDED.\n010200     ADD FLOATING-POINT-LONG TO ZONED-NUMBER ROUNDED.\n010300     ADD FLOATING-POINT-LONG TO PACKED-NUMBER ROUNDED.\n010400     ADD FLOATING-POINT-LONG TO FLOATING-POINT-SHORT ROUNDED.\n010500     ADD FLOATING-POINT-LONG TO FLOATING-POINT-LONG ROUNDED.\n010600     STOP RUN.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "VSAMVERB": {"ttr": 9480, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00E\\x01\\x02\\x00\\x7f\\x01\\x02\\x00\\x7f\\x132\\x00x\\x00|\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2002-01-07T00:00:00", "modifydate": "2002-01-07T13:32:45", "lines": 120, "newlines": 124, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID. VSAMVERB.\n000300 AUTHOR. R THORNTON.\n000400 DATE-WRITTEN.  OCT 1992.\n000500 DATE-COMPILED.\n000600*****************************************************************\n000700*REMARKS. CONTAINS COBOL VSAM PROCESSING CODE.                  *\n000800*****************************************************************\n000900 ENVIRONMENT DIVISION.\n001000 INPUT-OUTPUT SECTION.\n001100*\n001200 FILE-CONTROL.\n001300     SELECT VSAM-FILE ASSIGN TO VSAM01\n001400            ORGANIZATION IS INDEXED\n001500            ACCESS IS DYNAMIC\n001600            RECORD KEY IS VSAM-KEY\n001700            FILE STATUS IS FILE-STATUS.\n001800*\n001900 DATA DIVISION.\n002000 FILE SECTION.\n002100 FD  VSAM-FILE.\n002200 01  VSAM-RECORD.\n002300     05  VSAM-KEY                     PIC X(8).\n002400     05  VSAM-DATA                    PIC X(72).\n002500*\n002600 WORKING-STORAGE SECTION.\n002700 77  FILLER                           PIC X(44)\n002800       VALUE 'COB2SUBR WORKING STORAGE SECTION STARTS HERE'.\n002900*\n003000 01  SWITCHES.\n003100     05  FILE-STATUS                  PIC XX.\n003200         88  SUCCESSFUL-COMPLETION    VALUE '00'.\n003300         88  NO-RECORD-FOUND          VALUE '23'.\n003400*\n003500 01  COUNTERS.\n003600     05  TOTAL-READ                   PIC S9(9) COMP-3 VALUE +0.\n003700*\n003800 LINKAGE SECTION.\n003900 01  REQUEST-CODE                     PIC X.\n004000     88  OPEN-REQUEST                 VALUE 'O'.\n004100     88  READ-REQUEST                 VALUE 'R'.\n004200     88  CLOSE-REQUEST                VALUE 'C'.\n004300*\n004400 01  RECORD-RETURN-AREA               PIC X(80).\n004500*\n004600 01  RECORD-KEY-ARGUMENT              PIC X(8).\n004700*\n004800 01  COMPLETION-CODE                  PIC X.\n004900     88  SUCCESSFUL-OPERATION         VALUE 'Y'.\n005000     88  RECORD-NOT-FOUND             VALUE 'N'.\n005100*\n005200 PROCEDURE DIVISION USING REQUEST-CODE,\n005300                          COMPLETION-CODE,\n005400                          RECORD-RETURN-AREA,\n005500                          RECORD-KEY-ARGUMENT.\n005600*\n005700 A000-MAINLINE.\n005800     PERFORM B010-INITIALIZE THRU B010-EXIT.\n005900     PERFORM C010-PROCESS THRU C010-EXIT.\n006000     DELETE VSAM-FILE RECORD.\n006100     EXIT PROGRAM.\n006200*\n006300 B010-INITIALIZE.\n006400     MOVE 'Y' TO COMPLETION-CODE.\n006500 B010-EXIT.\n006600     EXIT.\n006700*\n006800 C010-PROCESS.\n006900     IF READ-REQUEST\n007000         PERFORM J010-READ-FILE THRU J010-EXIT\n007100         REWRITE VSAM-RECORD FROM RECORD-RETURN-AREA\n007200     ELSE IF OPEN-REQUEST\n007300         PERFORM K010-OPEN-FILE THRU K010-EXIT\n007400     ELSE IF CLOSE-REQUEST\n007500         PERFORM Y010-CLOSE-FILE THRU Y010-EXIT\n007600     ELSE\n007700         DISPLAY 'COB2SUBR: INVALID REQUEST CODE FROM CALLER'\n007800         CALL 'COBABEND'.\n007900 C010-EXIT.\n008000     EXIT.\n008100*\n008200 J010-READ-FILE.\n008300     MOVE RECORD-KEY-ARGUMENT TO VSAM-KEY.\n008400     READ VSAM-FILE RECORD INTO RECORD-RETURN-AREA.\n008500     IF SUCCESSFUL-COMPLETION\n008600         ADD 1 TO TOTAL-READ\n008700     ELSE IF NO-RECORD-FOUND\n008800         MOVE 'N' TO COMPLETION-CODE\n008900     ELSE\n009000         DISPLAY 'COB2SUBR: READ FAILED FOR VSAM01 FILE'\n009100         PERFORM Z010-ERRORS THRU Z010-EXIT.\n009200 J010-EXIT.\n009300     EXIT.\n009400*\n009500 K010-OPEN-FILE.\n009600     OPEN I-O VSAM-FILE.\n009700     IF SUCCESSFUL-COMPLETION\n009800         NEXT SENTENCE\n009900     ELSE\n010000         DISPLAY 'COB2SUBR: OPEN FAILED FOR VSAM01 FILE'\n010100         PERFORM Z010-ERRORS THRU Z010-EXIT.\n010200     START VSAM-FILE.\n010300 K010-EXIT.\n010400     EXIT.\n010500*\n010600 Y010-CLOSE-FILE.\n010700     CLOSE VSAM-FILE.\n010800     IF SUCCESSFUL-COMPLETION\n010900         NEXT SENTENCE\n011000     ELSE\n011100         DISPLAY 'COB2SUBR: CLOSE FAILED FOR VSAM01 FILE'\n011200         PERFORM Z010-ERRORS THRU Z010-EXIT.\n011300 Y010-EXIT.\n011400     EXIT.\n011500*\n011600 Z010-ERRORS.\n011700     DISPLAY 'COB2SUBR: VSAM01 FILE STATUS IS: ' FILE-STATUS.\n011800         CALL 'COBABEND'.\n011900 Z010-EXIT.\n012000     EXIT.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WRTFBA": {"ttr": 9483, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x13\\x01\\x005_\\x01\\x005_\\x15\\t\\x00T\\x00&\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2000-12-20T00:00:00", "modifydate": "2000-12-20T15:09:13", "lines": 84, "newlines": 38, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    WRTFBA.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET FOR WRITING HEX 5A AS CARRIAGE CONTROL TO\n000410*         A RECFM=FBA FILE.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900*\n001000     SELECT PRINT-FILE ASSIGN TO UT-S-PRINT1.\n001100*\n001200 DATA DIVISION.\n001300*\n001400 FILE SECTION.\n001500*\n001600 FD  PRINT-FILE\n001700     RECORD CONTAINS 133 CHARACTERS\n001800     RECORDING MODE IS F\n001900     BLOCK CONTAINS 0 RECORDS\n002000     LABEL RECORD IS STANDARD\n002100     DATA RECORDS ARE PRINT-RECORD.\n002200*\n002300 01  PRINT-RECORD.\n002310     05 CARRIAGE-CONTROL     PIC X.\n002320     05 PRINT-DATA           PIC X(132).\n002400*\n002500 WORKING-STORAGE SECTION.\n002600\n002700 77  FILLER PIC X(36)  VALUE\n002800     'WRTFBA WORKING STORAGE BEGINS HERE'.\n002801 77  COUNTER                 PIC S9(3) COMP-3 VALUE ZERO.\n002810 01  PRINT-AFP5A-RECORD.\n002820     05 CARRIAGE-CONTROL     PIC X VALUE X'5A'.\n002830     05 FILLER               PIC X(29) VALUE\n002840                             'THIS IS AFP-5A RECORD NUMBER '.\n002850     05 AFP5A-NUMBER         PIC 999.\n002900     05 FILLER               PIC X(100) VALUE SPACES.\n002910 01  PRINT-BLANK-RECORD.\n002920     05 CARRIAGE-CONTROL     PIC X VALUE ' '.\n002930     05 FILLER               PIC X(28) VALUE\n002940                             'THIS IS BLANK RECORD NUMBER '.\n002950     05 BLANK-NUMBER         PIC 999.\n002960     05 FILLER               PIC X(101) VALUE SPACES.\n002970 01  PRINT-ONE-RECORD.\n002980     05 CARRIAGE-CONTROL     PIC X VALUE '1'.\n002990     05 FILLER               PIC X(28) VALUE\n002991                             'THIS IS ONE RECORD NUMBER '.\n002992     05 ONE-NUMBER           PIC 999.\n002993     05 FILLER               PIC X(101) VALUE SPACES.\n002994 01  PRINT-ZERO-RECORD.\n002995     05 CARRIAGE-CONTROL     PIC X VALUE '0'.\n002996     05 FILLER               PIC X(27) VALUE\n002997                             'THIS IS ZERO RECORD NUMBER '.\n002998     05 ZERO-NUMBER          PIC 999.\n002999     05 FILLER               PIC X(102) VALUE SPACES.\n003000 01  PRINT-DASH-RECORD.\n003001     05 CARRIAGE-CONTROL     PIC X VALUE '-'.\n003002     05 FILLER               PIC X(27) VALUE\n003003                             'THIS IS DASH RECORD NUMBER '.\n003004     05 DASH-NUMBER          PIC 999.\n003005     05 FILLER               PIC X(102) VALUE SPACES.\n003006 01  PRINT-PLUS-RECORD.\n003007     05 CARRIAGE-CONTROL     PIC X VALUE '+'.\n003008     05 FILLER               PIC X(27) VALUE\n003009                             'THIS IS PLUS RECORD NUMBER '.\n003010     05 PLUS-NUMBER          PIC 999.\n003011     05 FILLER               PIC X(102) VALUE SPACES.\n003020 PROCEDURE DIVISION.\n003100     OPEN OUTPUT PRINT-FILE.\n003200 MAINLINE.\n003300     PERFORM WRITE-OUTPUT VARYING COUNTER FROM 1 BY 1 UNTIL\n003400          COUNTER IS GREATER THAN 5.\n003500     CLOSE PRINT-FILE.\n003600     GOBACK.\n003700 WRITE-OUTPUT.\n003800     MOVE COUNTER TO AFP5A-NUMBER, BLANK-NUMBER, ONE-NUMBER,\n003900                     ZERO-NUMBER, DASH-NUMBER, PLUS-NUMBER.\n004000     WRITE PRINT-RECORD FROM PRINT-AFP5A-RECORD.\n004100     WRITE PRINT-RECORD FROM PRINT-BLANK-RECORD.\n004200     WRITE PRINT-RECORD FROM PRINT-ONE-RECORD.\n004300     WRITE PRINT-RECORD FROM PRINT-ZERO-RECORD.\n004400     WRITE PRINT-RECORD FROM PRINT-DASH-RECORD.\n004500     WRITE PRINT-RECORD FROM PRINT-PLUS-RECORD.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WRTQSAM": {"ttr": 9486, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00\\x00\\x01\\x01\\x18o\\x01\\x01\\x18o\\x08V\\x00=\\x00&\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2001-07-05T00:00:00", "modifydate": "2001-07-05T08:56:00", "lines": 61, "newlines": 38, "modlines": 0, "user": "BC0THOR"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    WRTQSAM.\n000300 AUTHOR. R THORNTON\n000310****************************************************************\n000400*REMARKS. TEST BUCKET FOR WRITING A SEQUENTIAL FILE. PROGRAMS  *\n000401*         COMPILED WITH THE DEFAULT COMPILER OPTION NOCMPR2    *\n000402*         AND EXECUTED WITH THE DEFAULT RUNTIME OPTION         *\n000404*         CBLQDA(ON) WILL DYNAMICALLY ALLOCATE AN OUTPUT FILE  *\n000405*         TO A TEMPORARY DATASET AND DISCARD IT AT END OF JOB  *\n000406*         IF THE DD STATEMENT FOR THE FILE IS MISSING OR THE   *\n000410*         DDNAME IS MISSPELLED.                                *\n000420*         PURPOSE OF THIS PROGRAM IS TO INVESTIGATE THE EFFECTS*\n000430*         OF COMPILING WITH CMPR2 AND/OR EXECUTING WITH THE    *\n000440*         CBLQDA(OFF) RUNTIME OPTION.                          *\n000450****************************************************************\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900*\n001000     SELECT OUTPUT-FILE ASSIGN TO UT-S-OUTPUT1.\n001100*\n001200 DATA DIVISION.\n001300*\n001400 FILE SECTION.\n001500*\n001600 FD  OUTPUT-FILE\n001800     RECORDING MODE IS F\n001900     BLOCK CONTAINS 0 RECORDS\n001910     RECORD CONTAINS 80 CHARACTERS\n002000     LABEL RECORD IS STANDARD\n002100     DATA RECORD IS OUTPUT-RECORD.\n002200*\n002300 01  OUTPUT-RECORD           PIC X(80).\n002400*\n002500 WORKING-STORAGE SECTION.\n002600\n002700 77  FILLER PIC X(36)  VALUE\n002800     'WRTQSAM WORKING STORAGE BEGINS HERE'.\n002810 01  RECORD1                 PIC X(80) VALUE\n002900     'THIS IS RECORD 1'.\n002910 01  RECORD2                 PIC X(80) VALUE\n002920     'THIS IS RECORD 2'.\n002930 01  RECORD3                 PIC X(80) VALUE\n002940     'THIS IS RECORD 3'.\n002950 01  RECORD4                 PIC X(80) VALUE\n002960     'THIS IS RECORD 4'.\n002970 01  RECORD5                 PIC X(80) VALUE\n002980     'THIS IS RECORD 5'.\n002990 01  RECORD6                 PIC X(80) VALUE\n002991     'THIS IS RECORD 6'.\n003000 PROCEDURE DIVISION.\n003100     OPEN OUTPUT OUTPUT-FILE.\n003300     WRITE OUTPUT-RECORD FROM RECORD1.\n003310     WRITE OUTPUT-RECORD FROM RECORD2.\n003320     WRITE OUTPUT-RECORD FROM RECORD3.\n003330     WRITE OUTPUT-RECORD FROM RECORD4.\n003340     WRITE OUTPUT-RECORD FROM RECORD5.\n003350     WRITE OUTPUT-RECORD FROM RECORD6.\n003360     CLOSE OUTPUT-FILE.\n003700     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "WRTVRBL": {"ttr": 9488, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00Y\\x00\\x93\\x12O\\x00\\x93\\x12O\\x12F\\x00&\\x00&\\x00\\x00\\xe4\\xe2\\xc5\\xd9\\xf0\\xf2@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1993-05-04T00:00:00", "modifydate": "1993-05-04T12:46:59", "lines": 38, "newlines": 38, "modlines": 0, "user": "USER02"}, "text": "000100 IDENTIFICATION DIVISION.\n000200 PROGRAM-ID.    WRTVRBL.\n000300 AUTHOR. R THORNTON\n000400*REMARKS. TEST BUCKET FOR WRITING VARIABLE LENGTH RECORDS.\n000500 ENVIRONMENT DIVISION.\n000600 CONFIGURATION SECTION.\n000700 INPUT-OUTPUT SECTION.\n000800 FILE-CONTROL.\n000900*\n001000     SELECT OUTPUT-FILE ASSIGN TO UT-S-OUTPUT1.\n001100*\n001200 DATA DIVISION.\n001300*\n001400 FILE SECTION.\n001500*\n001600 FD  OUTPUT-FILE\n001700     RECORD CONTAINS 80 CHARACTERS\n001800     RECORDING MODE IS V\n001900     BLOCK CONTAINS 0 RECORDS\n002000     LABEL RECORD IS STANDARD\n002100     DATA RECORDS ARE OUTPUT-REC1.\n002200*\n002300 01  OUTPUT-REC1             PIC X(26).\n002310 01  OUTPUT-REC2             PIC X(10).\n002400*\n002500 WORKING-STORAGE SECTION.\n002600\n002700 77  FILLER PIC X(36)  VALUE\n002800     'WRTVRBL WORKING STORAGE BEGINS HERE'.\n002900\n003000 PROCEDURE DIVISION.\n003100     OPEN INPUT OUTPUT-FILE.\n003200 MAINLINE.\n003300     READ OUTPUT-FILE AT END GO TO EOJ.\n003400     CALL 'DKH0215P' USING OUTPUT-REC1.\n003500     GO TO MAINLINE.\n003600 EOJ.\n003700     GOBACK.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "XFOOT": {"ttr": 9490, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00V\\x01\\x01&/\\x01\\x01&/\\x11 \\x01'\\x01'\\x00\\x00\\xc2\\xc3\\xf0\\xe3\\xc8\\xd6\\xd9@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2001-09-19T00:00:00", "modifydate": "2001-09-19T11:20:56", "lines": 295, "newlines": 295, "modlines": 0, "user": "BC0THOR"}, "text": "       IDENTIFICATION DIVISION.\n       PROGRAM-ID. XFOOT.\n       AUTHOR.\n       DATE-WRITTEN.  SEPT, 2001\n       DATE-COMPILED.\n      ******************************************************************\n      *\n      ******************************************************************\n       ENVIRONMENT DIVISION.\n       CONFIGURATION SECTION.\n       SPECIAL-NAMES.  C01 IS TOP-OF-FORM.\n       INPUT-OUTPUT SECTION.\n       FILE-CONTROL.\n            SELECT MEDICAL-FILE       ASSIGN TO UT-S-INPUT1.\n       DATA DIVISION.\n       FILE SECTION.\n       FD  MEDICAL-FILE\n           BLOCK CONTAINS 0 RECORDS\n           RECORDING MODE IS V\n           LABEL RECORDS ARE STANDARD.\n       01  MEDICAL-RECORD.\n           05 MEDICAL-HEADER.\n              10 MEDICAL-ID        PIC  X(4).\n              10 FILLER            PIC  X(1481).\n           05 MEDICAL-LINE-COUNT   PIC S9(2)    COMP.\n           05 MEDICAL-OTHER-DATA   PIC X(221).\n           05 MEDICAL-LINE OCCURS 1 TO 15 TIMES\n                           DEPENDING ON MEDICAL-LINE-COUNT.\n              10 MEDICAL-LINE-DATA PIC X(698).\n\n       WORKING-STORAGE SECTION.\n       01  WS-END-MED-FILE          PIC X VALUE ZEROS.\n           88  END-OF-MED-FILE            VALUE '1'.\n       01  WS-END-REV-FILE          PIC X VALUE ZEROS.\n           88  END-OF-REV-FILE            VALUE '1'.\n       01  WS-NUMERIC-CLAIM-88      PIC X VALUE ZEROS.\n           88  WS-NUMERIC-CLAIM           VALUE '0'.\n           88  WS-NON-NUMERIC-CLAIM       VALUE '1'.\n\n       01  WS-DATA-AREA.\n           05   WS-TMP-CALC-AREA    PIC S9(09).\n           05   WS-TMP-DIFFERENCE   PIC S9(09).\n           05   WS-CNT              PIC 9(05).\n           05   WS-CNT1             PIC 9(05).\n           05   WS-SUB              PIC 9(03).\n\n           05   WS-TST-DTA.\n               15   WS-TST-NC-AMT              PIC 9(9)V99.\n               15   WS-TST-BASE-DED-AMT        PIC 9(9)V99.\n               15   WS-TST-MM-DED-AMT          PIC 9(9)V99.\n               15   WS-TST-A-COINS-BASE-LN     PIC 9(9)V99.\n               15   WS-TST-A-COINS-MM-LN       PIC 9(9)V99.\n               15   WS-TST-BASE-COIN-PEN-AMT   PIC 9(9)V99.\n               15   WS-TST-MM-COIN-PEN-AMT     PIC 9(9)V99.\n               15   WS-TST-BASE-AMT            PIC 9(9)V99.\n               15   WS-TST-MM-AMT              PIC 9(9)V99.\n               15   WS-TST-A-NEGOT-DISC        PIC 9(9)V99.\n\n           05   WS-DSP-DTA.\n               15   WS-DSP-CHARGE              PIC ZZZZZ9.99.\n               15   WS-DSP-DIFFERENCE          PIC -----9.99.\n               15   WS-DSP-NC-AMT              PIC ZZZZZ9.99.\n               15   WS-DSP-BASE-DED-AMT        PIC ZZZZZ9.99.\n               15   WS-DSP-MM-DED-AMT          PIC ZZZZZ9.99.\n               15   WS-DSP-A-COINS-BASE-LN     PIC ZZZZZ9.99.\n               15   WS-DSP-A-COINS-MM-LN       PIC ZZZZZ9.99.\n               15   WS-DSP-BASE-COIN-PEN-AMT   PIC ZZZZZ9.99.\n               15   WS-DSP-MM-COIN-PEN-AMT     PIC ZZZZZ9.99.\n               15   WS-DSP-BASE-AMT            PIC ZZZZZ9.99.\n               15   WS-DSP-MM-AMT              PIC ZZZZZ9.99.\n               15   WS-DSP-A-NEGOT-DISC        PIC ZZZZZ9.99.\n\n           05   WS-DSP-HDR.\n               15   WS-FILLER       PIC X(11) VALUE '           '.\n               15   WS-FILLER       PIC X(09) VALUE '*-CHARGE*'.\n               15   WS-FILLER       PIC X(09) VALUE '*--DIFF-*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-NC AMT*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-DED BA*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-DED MM*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-COI BS*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-COI MM*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-PEN BS*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-PEN MM*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-AMT BS*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-AMT MM*'.\n               15   WS-FILLER       PIC X(09) VALUE '*-NG DIS*'.\n       COPY CHPMED.\n\n       PROCEDURE DIVISION.\n       01000-MAINLINE.\n      ******************************************************************\n      *    OPEN  INPUT MEDICAL-FILE, REVENUE-FILE\n      *    CLOSE MEDICAL-FILE, REVENUE-FILE.\n      ******************************************************************\n           OPEN INPUT MEDICAL-FILE\n           PERFORM\n              UNTIL END-OF-MED-FILE\n\n                READ   MEDICAL-FILE\n                  AT END\n                     SET END-OF-MED-FILE TO TRUE\n\n                  NOT AT END\n                     ADD 1 TO WS-CNT\n                     ADD 1 TO WS-CNT1\n                     IF WS-CNT1 = 20\n                        MOVE 1 TO WS-CNT1\n                        DISPLAY   WS-DSP-HDR\n                     END-IF\n\n                     MOVE MEDICAL-RECORD TO PAYM-PAYMENT-RECORD\n\n                     EVALUATE TRUE\n                        WHEN WS-CNT > 70\n                             SET END-OF-MED-FILE TO TRUE\n\n                        WHEN MEDICAL-ID NOT = 'PAYM'\n      *                      DISPLAY 'M11.R', WS-CNT\n      *                              ' IS NOT A PAYM: ID = ' MEDICAL-ID\n                             CONTINUE\n                        WHEN PAYM-VOID-ORIG\n                        WHEN PAYM-VOID-SUBSEQ\n      *                      DISPLAY 'M12.R', WS-CNT ' IS A VOID'\n                             CONTINUE\n\n                        WHEN PAYM-OVR-CD(1) = 'P'\n      *                      DISPLAY 'M13.R', WS-CNT ' IS PENDED'\n                             CONTINUE\n\n                        WHEN OTHER\n                             PERFORM 20000-XFOOT-THE-CLAIM\n                     END-EVALUATE\n                END-READ\n\n           END-PERFORM\n\n           CLOSE MEDICAL-FILE\n           GOBACK.\n\n\n       20000-XFOOT-THE-CLAIM.\n      ******************************************************************\n      *\n      *    PROFESSIONAL/SEC PROF/SEC FAC\n      *\n      *    A_TOT_CHG =\n      *      A_NON_COVD\n      *    + A_DEDUCT_BASE/MM\n      *    + A_COINS_BASE/MM\n      *    + A_PEN_COIN_BASE/MM\n      *    + A_COPAY_BASE/MM\n      *    + A_PAID_BASE/MM\n      *\n      *    + COB-SAVNGS\n      *\n      *    + A_PROF_DISC\n      *    + A_NEGT_DISC\n      *\n      ******************************************************************\n           PERFORM\n           VARYING WS-SUB   FROM 1 BY 1\n           UNTIL   WS-SUB > PAYM-LINE-COUNT\n\n              PERFORM 70000-CHK-4-NUMERIC\n              IF WS-NUMERIC-CLAIM\n                 COMPUTE WS-TMP-CALC-AREA\n                    =   PAYM-NC-AMT             (WS-SUB)\n                      + PAYM-BASE-DED-AMT       (WS-SUB)\n                      + PAYM-MM-DED-AMT         (WS-SUB)\n                      + PAYM-A-COINS-BASE-LN    (WS-SUB)\n                      + PAYM-A-COINS-MM-LN      (WS-SUB)\n                      + PAYM-BASE-COIN-PEN-AMT  (WS-SUB)\n                      + PAYM-MM-COIN-PEN-AMT    (WS-SUB)\n                      + PAYM-BASE-AMT           (WS-SUB)\n                      + PAYM-MM-AMT             (WS-SUB)\n                      + PAYM-A-NEGOT-DISC       (WS-SUB)\n                 END-COMPUTE\n\n                 COMPUTE WS-TMP-DIFFERENCE\n                    =   PAYM-CHARGE   (WS-SUB)\n                      - WS-TMP-CALC-AREA\n                 END-COMPUTE\n\n                 IF WS-TMP-DIFFERENCE NOT = 0\n                    PERFORM 30000-FMT-N-DISP\n                 END-IF\n\n              END-IF\n\n           END-PERFORM.\n\n\n       30000-FMT-N-DISP.\n      ******************************************************************\n      *\n      ******************************************************************\n           MOVE PAYM-CHARGE            (WS-SUB)\n             TO WS-DSP-CHARGE\n\n           MOVE PAYM-NC-AMT            (WS-SUB)\n             TO WS-DSP-NC-AMT\n           MOVE PAYM-BASE-DED-AMT      (WS-SUB)\n             TO WS-DSP-BASE-DED-AMT\n           MOVE PAYM-MM-DED-AMT        (WS-SUB)\n             TO WS-DSP-MM-DED-AMT\n           MOVE PAYM-A-COINS-BASE-LN   (WS-SUB)\n             TO WS-DSP-A-COINS-BASE-LN\n           MOVE PAYM-A-COINS-MM-LN     (WS-SUB)\n             TO WS-DSP-A-COINS-MM-LN\n           MOVE PAYM-BASE-COIN-PEN-AMT (WS-SUB)\n             TO WS-DSP-BASE-COIN-PEN-AMT\n           MOVE PAYM-MM-COIN-PEN-AMT   (WS-SUB)\n             TO WS-DSP-MM-COIN-PEN-AMT\n           MOVE PAYM-BASE-AMT          (WS-SUB)\n             TO WS-DSP-BASE-AMT\n           MOVE PAYM-MM-AMT            (WS-SUB)\n             TO WS-DSP-MM-AMT\n           MOVE PAYM-A-NEGOT-DISC      (WS-SUB)\n             TO WS-DSP-A-NEGOT-DISC.\n\n           DISPLAY 'M30.R', WS-CNT, ' ', WS-DSP-DTA.\n\n      *          , ' ,'  WS-DSP-CHARGE\n      *          , ' ,', WS-DSP-DIFFERENCE\n      *          , ' ,', WS-DSP-NC-AMT\n      *          , ' ,', WS-DSP-BASE-DED-AMT\n      *          , ' ,', WS-DSP-MM-DED-AMT\n      *          , ' ,', WS-DSP-A-COINS-BASE-LN\n      *          , ' ,', WS-DSP-A-COINS-MM-LN\n      *          , ' ,', WS-DSP-BASE-COIN-PEN-AMT\n      *          , ' ,', WS-DSP-MM-COIN-PEN-AMT\n      *          , ' ,', WS-DSP-BASE-AMT\n      *          , ' ,', WS-DSP-MM-AMT\n      *          , ' ,', WS-DSP-A-NEGOT-DISC.\n\n\n       70000-CHK-4-NUMERIC.\n      ******************************************************************\n      *\n      ******************************************************************\n           SET WS-NUMERIC-CLAIM      TO TRUE\n\n           MOVE PAYM-NC-AMT            (WS-SUB)\n             TO WS-TST-NC-AMT\n           MOVE PAYM-BASE-DED-AMT      (WS-SUB)\n             TO WS-TST-BASE-DED-AMT\n           MOVE PAYM-MM-DED-AMT        (WS-SUB)\n             TO WS-TST-MM-DED-AMT\n           MOVE PAYM-A-COINS-BASE-LN   (WS-SUB)\n             TO WS-TST-A-COINS-BASE-LN\n           MOVE PAYM-A-COINS-MM-LN     (WS-SUB)\n             TO WS-TST-A-COINS-MM-LN\n           MOVE PAYM-BASE-COIN-PEN-AMT (WS-SUB)\n             TO WS-TST-BASE-COIN-PEN-AMT\n           MOVE PAYM-MM-COIN-PEN-AMT   (WS-SUB)\n             TO WS-TST-MM-COIN-PEN-AMT\n           MOVE PAYM-BASE-AMT          (WS-SUB)\n             TO WS-TST-BASE-AMT\n           MOVE PAYM-MM-AMT            (WS-SUB)\n             TO WS-TST-MM-AMT\n           MOVE PAYM-A-NEGOT-DISC      (WS-SUB)\n             TO WS-TST-A-NEGOT-DISC\n\n           EVALUATE TRUE\n               WHEN WS-TST-NC-AMT             IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M70.R', WS-CNT,    'NOT NUMERIC'\n               WHEN WS-TST-BASE-DED-AMT       IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M71.R', WS-CNT,    'NOT NUMERIC'\n               WHEN WS-TST-MM-DED-AMT         IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M72.R', WS-CNT,    'NOT NUMERIC'\n               WHEN WS-TST-A-COINS-BASE-LN    IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M73.R', WS-CNT,    'NOT NUMERIC'\n               WHEN WS-TST-A-COINS-MM-LN      IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M74.R', WS-CNT,    'NOT NUMERIC'\n               WHEN WS-TST-BASE-COIN-PEN-AMT  IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M75.R', WS-CNT,    'NOT NUMERIC'\n               WHEN WS-TST-MM-COIN-PEN-AMT    IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M76.R', WS-CNT,    'NOT NUMERIC'\n               WHEN WS-TST-BASE-AMT           IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M77.R', WS-CNT,    'NOT NUMERIC'\n               WHEN WS-TST-MM-AMT             IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M78.R', WS-CNT,    'NOT NUMERIC'\n               WHEN WS-TST-A-NEGOT-DISC       IS NOT NUMERIC\n                    SET WS-NON-NUMERIC-CLAIM  TO TRUE\n                    DISPLAY 'M79.R', WS-CNT,    'NOT NUMERIC'\n           END-EVALUATE.\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT563/FILE563.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT563", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}