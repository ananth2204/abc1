{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220012917000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 1234506, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 9, "INMDSNAM": "CBT.V500.FILE832.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 1234506, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 1234506, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE832.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x15\\x01'", "DS1TRBAL": "b'\\xe2\\xfa'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x05\\xc9\\x00\\n\\x05\\xcb\\x00\\x01\\x00\\x16'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$$#DATE": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00\\x03\\x01\\x13\\x07\\x7f\\x01\\x13\\x07\\x7f\\x13R\\x00\\x0c\\x00\\x0c\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-03-18T00:00:00", "modifydate": "2013-03-18T13:52:03", "lines": 12, "newlines": 12, "modlines": 0, "user": "CBT-486"}, "text": "REGULAR CBT TAPE - VERSION 486    FILE:  832\n\n    ORIGINAL DSNAME:  SBGOLOB.CBT486.FILE832\n    ---------------\n                    --RECFM-LRECL-BLKSIZE-DSORG\n                      FB    80    5600    PO\n\n   PDS117I 18 MEMBERS COUNTED; CUMULATIVE SIZE IS 11,612 RECORDS\n\n\nTIME THIS PDS WAS SHIPPED:   03/18/13    13:52:03    UTC-4:00\n\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "$$NOTE01": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x000\\x01\\x10\"O\\x01\\x10\"O\\x00)\\x00 \\x00 \\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-08-12T00:00:00", "modifydate": "2010-08-12T00:29:30", "lines": 32, "newlines": 32, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  Hi... (utiliy REXX in z/OS)\nFrom:     \"MARCO SERAFINI\" <MARCO.SERAFINI@t-systems.it>\nDate:     Wed, 11 Aug 2010 18:16:27 +0200\nTo:       <sbgolob@cbttape.org>\n\nHello!\n\nI'd like to deliver some REXX utilities for z/OS maintenance like\nprinting MVS file directly on TCPIP printers or give EREP report in\ninteractive mode with a guide in parameters without submit job JCL.\n\nThanks for your attention.\n\n                        Marco S.\n\n\nMarco Serafini\nSystem specialist\nICT-Operations - CSS - Control Centre - CC_MSY   Team 2\nT Systems Italia S.p.A.\nSocieta` unipersonale soggetta a direzione e coordinamento di\n   T-Systems International GmbH\nappartenente al Gruppo Deutsche Telekom\nSede Legale: Via degli Ontani, 25 - 36100 Vicenza\nCap. Soc. Euro 1.000.000 i.v., REA Vicenza 192315,\nReg. Impr. VI 01899910242,\nCod. Fisc. 01899910242, Partita IVA IT12622480155\n(  Phone : +39 0444 558.700  6 Fax. : +39 0444 558.352\n(Mobile : +39 348 2734089\nE-mail     : marco.serafini@t-systems.it\nInternet  : www.t-systems.it\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$NOTE02": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01\\x00\\x00'\\x01\\x13\\x07\\x7f\\x01\\x13\\x07\\x7f\\x13Q\\x00\\x1a\\x00\\x1a\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@\"", "ispf": {"version": "01.00", "flags": 0, "createdate": "2013-03-18T00:00:00", "modifydate": "2013-03-18T13:51:27", "lines": 26, "newlines": 26, "modlines": 0, "user": "SBGOLOB"}, "text": "Subject:  Minor Fix\nFrom:     MARCO SERAFINI <MARCO.SERAFINI@t-systems.it>\nDate:     3/15/2013 12:53 PM\nTo:       \"sbgolob@cbttape.org\" <sbgolob@cbttape.org>\n\nHello Sam!\n\nI have found a minor bug in my rexx program \"PRTLAN\" that\nyou have fitted into CBT-V479 some time ago.\n\nThe problem is in regard to the building of PostScript code in\nbatch execution.\n\nNow it is OK and works in full capability whether in interactive\nISPF session that in batch mode by a job.\n\nI just added one JCL member with example for execution.\n\nShould be appropriate to update the 832 file with the right\nprogram version.\n\nThanks in advance for everything.\n\nBye bye,\nMarco S.\n\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "$$README": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00)\\x01\\x10\"?\\x01\\x10\"O\\x00#\\x00)\\x00(\\x00\\x00\\xe2\\xc2\\xc7\\xd6\\xd3\\xd6\\xc2@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-08-11T00:00:00", "modifydate": "2010-08-12T00:23:29", "lines": 41, "newlines": 40, "modlines": 0, "user": "SBGOLOB"}, "text": "This utility is able to print a file or member of a library\nfrom z/OS - OS/390 IBM systems on a TCPIP priter defined\non a LAN network.\n\nIt was tested with OS/390 rel. 2.6 and as far as\nz/OS rel. 1.9\n\nThe PrtLan package is a mix of 2 Rexx pgms and 4 ISPF panels,\nplus a file/library for printer definitions :\n\n PRTLAN     : Maint rexx program to manage printer\n PYPRINT    : Rexx pgm to format output in PostScript print\n PRTLANP1   : ISPF panel for on-line help\n PRTLANP1-3 : ISPF panels for interative use under ISPF\n PRTLSRIN   : Eg. definitions printers\n LIBDEF     : Eg. for dynamic allocation library\n\nAll this is included in the PRTLAN.XMI file.\nI put all in one library: REXX pgm, ISPF panels and examples.\nYou can split into more if you'd like.\n\nThe REXX pgms expect a static allocation of ISPF libraries\nbut you can find commented instructions for \"LIBDEF\" on the side\nto do dynamic allocation or to test the use of LIBDEF for a pds.\n\nTo install, receive on your z/OS system with \"BIN\" options and\nthen unpack into a library with :\n\n  RECEIVE INDSN(--------.PRTLAN.XMI)\n  Dataset DB00988.REXX.PRTLAN from DB00988 on NJEMVS0\n  Enter restore parameters or 'DELETE' or 'END' +\n  DSN(in-your-lib-name)\n\nPay attention to Prerequisite sections described in PRTLAN.\nThere is DOCUMENTATION in WORD format to explain how work.\n\nI am supplying text members in IEBUPDTE SYSIN format, or\nmembers in XMIT format.  Use whichever ones you like.\nThey are a little bit different from each other.\n\n*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "@FILE832": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x04V\\x00V\\x01\\x13\\x07\\x7f\\x01\\x13\\x07\\x7f\\x13Q\\x00\\x08\\x00\\x08\\x00\\x00\\xc3\\xc2\\xe3`\\xf4\\xf8\\xf6@@@'", "ispf": {"version": "04.86", "flags": 0, "createdate": "2013-03-18T00:00:00", "modifydate": "2013-03-18T13:51:56", "lines": 8, "newlines": 8, "modlines": 0, "user": "CBT-486"}, "text": "//***FILE 832 is from Marco Serafini and contains REXX execs and    *   FILE 832\n//*           panels to print MVS files directly on TCPIP printers. *   FILE 832\n//*                                                                 *   FILE 832\n//*           email:  MARCO.SERAFINI@t-systems.it                   *   FILE 832\n//*                                                                 *   FILE 832\n//*           See member DOCPRLAN which is documentation in         *   FILE 832\n//*           Microsoft WORD format.                                *   FILE 832\n//*                                                                 *   FILE 832\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "CLEAR": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x10\"?\\x01\\x10\"?!X\\x00\\x15\\x00\\x15\\x00\\x00\\xd3\\xd6\\xc1\\xc4\\xd4\\xd6\\xc4@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-08-11T00:00:00", "modifydate": "2010-08-11T21:58:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "LOADMOD"}, "mimetype": "application/xmit", "datatype": "binary", "extension": ".xmi"}, "DOCPRLAN": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x01\\x10\"?\\x01\\x10\"?!X#g#g\\x00\\x00\\xd4\\xe2\\xe6\\xd6\\xd9\\xc4@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "2010-08-11T00:00:00", "modifydate": "2010-08-11T21:58:00", "lines": 9063, "newlines": 9063, "modlines": 0, "user": "MSWORD"}, "mimetype": "application/msword", "datatype": "binary", "extension": ".doc"}, "JOBPRINT": {"ttr": 4106, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x08\\x00\\x14\\x01\\x12\\x06\\x7f\\x01\\x13\\x07O\\x15!\\x00\\r\\x00\\r\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.08", "flags": 0, "createdate": "2012-03-07T00:00:00", "modifydate": "2013-03-15T15:21:14", "lines": 13, "newlines": 13, "modlines": 0, "user": "DB00988"}, "text": "//PCSGT988 JOB (PR00,PR0),'PRT-BATCH',CLASS=F,MSGCLASS=8,NOTIFY=&SYSUID\n//* ------------------------------------------------------- *\n//EXCTSO  EXEC PGM=IKJEFT01,DYNAMNBR=30\n//SYSEXEC  DD DISP=SHR,DSN=DB00988.V000.FILE832.PRTLAN\n//SYSTCPD  DD DISP=SHR,DSN=YCSTCP.V027.PARM(TCPDATA)\n//SYSTSPRT DD SYSOUT=*\n//SYSPRINT DD SYSOUT=*\n//SYSTSIN  DD *\n  PRTLAN   VI01PR  DB00988.V000.CNTL($DASDIO)\n  PRTLAN   VI06PR  DB00988.V000.CNTL(DASDIO)\n  PRTLAN   VI06PR  DB00988.V100.CNTL($DASDIO) / PORT DEBUG\n  PRTLAN   VI47PR  DB00988.V000.CNTL($DASDIO) / WIDE\n/*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LIBDEF": {"ttr": 4108, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x07\\x00S\\x01\\t\\x00\\x9f\\x01\\x11(\\x0f\\x100\\x00\\x1a\\x00\\x1b\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.07", "flags": 0, "createdate": "2009-01-09T00:00:00", "modifydate": "2011-10-07T10:30:53", "lines": 26, "newlines": 27, "modlines": 0, "user": "DB00988"}, "text": "/* rexx                                                               */\narg parmLIB\nif parmLIB = '' THEN parmLIB ='DB00988.V000.SYSIN'\npanlib  ='DB00988.V000.FILE832.PRTLAN'\nexeclib ='DB00988.V000.FILE832.PRTLAN'\nloadlib ='SYSTEM.CLEAR.ISPLLIB'\n\n/*--------------------------------------------------------------------*/\n/* LIBDEF required datasets                                           */\n/*--------------------------------------------------------------------*/\n\"ALTLIB ACTIVATE APPLICATION(EXEC) DA('\"execlib\"')\"\n\"ISPEXEC LIBDEF ISPPLIB DATASET ID('\"panlib\"')\"\n/* \"ISPEXEC LIBDEF ISPLLIB DATASET ID('\"loadlib\"')\"  */\n\n/*--------------------------------------------------------------------*/\n/* Invoke product                                                     */\n/*--------------------------------------------------------------------*/\n\"ISPEXEC SELECT CMD(PRTLAN   ) PASSLIB NEWAPPL(PRTL)\"\n\n/*--------------------------------------------------------------------*/\n/* Free up allocated libraries                                        */\n/*--------------------------------------------------------------------\n\"ISPEXEC LIBDEF ISPLLIB\"               */\n\"ISPEXEC LIBDEF ISPPLIB\"\n\"ALTLIB DEACTIVATE APPLICATION(EXEC)\"\nexit 0\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "PRTLAN": {"ttr": 4353, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01F\\x00\\x03\\x01\\x07\\x18\\x7f\\x01\\x13\\x07O\\x14$\\x02\\x81\\x02A\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.70", "flags": 0, "createdate": "2007-07-06T00:00:00", "modifydate": "2013-03-15T14:24:03", "lines": 641, "newlines": 577, "modlines": 0, "user": "DB00988"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "PRTLANPG": {"ttr": 4611, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x05\\x001\\x01\\x10\"?\\x01\\x13\\x07O\\x148\\x04\\x04\\x03\\xf1\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.05", "flags": 0, "createdate": "2010-08-11T00:00:00", "modifydate": "2013-03-15T14:38:31", "lines": 1028, "newlines": 1009, "modlines": 0, "user": "DB00988"}, "mimetype": "application/octet-stream", "datatype": "binary", "extension": ".bin"}, "PRTLANPH": {"ttr": 4873, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x03\\x00U\\x01\\x07\\x18\\x7f\\x01\\x10!\\x7f\\x17\\x15\\x00>\\x00?\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.03", "flags": 0, "createdate": "2007-07-06T00:00:00", "modifydate": "2010-08-05T17:15:55", "lines": 62, "newlines": 63, "modlines": 0, "user": "DB00988"}, "text": ")ATTR\n + TYPE(TEXT)   INTENS(LOW)  COLOR(TURQUOISE)\n \u00f9 TYPE(PT)                          /* panel title line             */\n ? TYPE(PIN)                         /* panel instruction line       */\n < TYPE(FP)                          /* field prompt attribute       */\n \u00a3 TYPE(NT)                          /* normal text attribute        */\n | TYPE(DT)                          /* description text             */\n \u00a7 AREA(SCRL) EXTEND(ON)             /* extendable scrollable area   */\n \u00ac AREA(SCRL)                        /* scrollable area attribute    */\n)BODY\n\u00f9------------------------------- PrtLan Tutorial ------------------------------\n\u00a3Command ===>_ZCMD                                                     \u00a3\n\u00a3\n\u00a3\n\u00acarea1                                                                \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00a3\n\u00a3\n)AREA AREA1\n+  PRTLAN allows you to print any dataset or PDS member directly\n+  from your ISPF EDIT session to any defined LAN printer.\n+  Alternatively, you can invoke PRTLAN as TSO command or even in\n+  batch as follows: %PRTLAN yourPrinter yourFile+.\n+\n+  In ISPF EDIT you can simply select %S+ the printer you want to\n+  send the data to or manage the list of defined printers\n+  directly from the provided ISPF interface.\n+\n+  To do so, overtype the field contaning %NO+ with other%MOD+to\n+  modify,%INS+to insert or%DEL+to delete. Then select the\n+  printer you want to perform your action against and press%ENTER+.\n+\n+  To view just a subset of all defined LAN printers, just overtype\n+  the top line field filled with asterisks by specifying a mask of\n+  your choice and then press%ENTER+.\n+\n+  Now you can use different printing formats further that landscape\n+  with 132 characters by 60 lines in 10 pt. by select%E+in replace\n+  of S, and than choose among 4 types, %PORT+-%WIDE+-%LAND+%2UP+.\n+\n+  %F3+-RETURN\n)INIT\n  .HELP = TUTORPAN                   /* insert name of tutorial panel */\n)REINIT\n)PROC\n)HELP\n  FIELD(FLDNAME) PANEL(PLNAME)       /* insert field help statements  */\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRTLANPN": {"ttr": 4875, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00E\\x01\\x10\"?\\x01\\x13\\x07O\\x15\\x06\\x00\\xa2\\x00\\xa2\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "2010-08-11T00:00:00", "modifydate": "2013-03-15T15:06:45", "lines": 162, "newlines": 162, "modlines": 0, "user": "DB00988"}, "text": "//*------------------------------------------------------\n//* IEBUPDTE JOB\n//*------------------------------------------------------\n//LOADPO EXEC PGM=IEBUPDTE,PARM=NEW\n//SYSPRINT DD SYSOUT=*\n//SYSUT2   DD DISP=(,CATLG),DSN=your_dsname,\n//         UNIT=3390,DCB=(RECFM=FB,LRECL=80),\n//         SPACE=(CYL,(5,5,20))\n//SYSOUT   DD  SYSOUT=*\n//SYSIN    DD DATA,DLM=$E\n./  ADD NAME=PRTLANPH\n)ATTR\n + TYPE(TEXT)   INTENS(LOW)  COLOR(TURQUOISE)\n ` TYPE(PT)                          /* panel title line             */\n ? TYPE(PIN)                         /* panel instruction line       */\n < TYPE(FP)                          /* field prompt attribute       */\n # TYPE(NT)                          /* normal text attribute        */\n ! TYPE(DT)                          /* description text             */\n @ AREA(SCRL) EXTEND(ON)             /* extendable scrollable area   */\n \u00ac AREA(SCRL)                        /* scrollable area attribute    */\n)BODY\n`------------------------------- PrtLan Tutorial ------------------------------\n#Command ===>_ZCMD                                                     #\n#\n#\n\u00acarea1                                                                \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n\u00ac                                                                     \u00ac\n#\n#\n)AREA AREA1\n+  PRTLAN allows you to print any dataset or PDS member directly\n+  from your ISPF EDIT session to any defined LAN printer.\n+  Alternatively, you can invoke PRTLAN as TSO command or even in\n+  batch as follows: %PRTLAN yourPrinter yourFile+.\n+\n+  In ISPF EDIT you can simply select %S+ the printer you want to\n+  send the data to or manage the list of defined printers\n+  directly from the provided ISPF interface.\n+\n+  To do so, overtype the field contaning %NO+ with other%MOD+to\n+  modify,%INS+to insert or%DEL+to delete. Then select the\n+  printer you want to perform your action against and press%ENTER+.\n+\n+  To view just a subset of all defined LAN printers, just overtype\n+  the top line field filled with asterisks by specifying a mask of\n+  your choice and then press%ENTER+.\n+\n+  Now you can use different printing formats further that landscape\n+  with 132 characters by 60 lines in 10 pt. by select%E+in replace\n+  of S, and than choose among 4 types, %PORT+-%WIDE+-%LAND+%2UP+.\n+\n+  %F3+-RETURN\n)INIT\n  .HELP = TUTORPAN                   /* insert name of tutorial panel */\n)REINIT\n)PROC\n)HELP\n  FIELD(FLDNAME) PANEL(PLNAME)       /* insert field help statements  */\n)END\n)ATTR\n./  ADD NAME=PRTLANP1\n)ATTR\n+ TYPE(TEXT)   INTENS(LOW)  SKIP(ON)    COLOR(BLUE)\n$ TYPE(INPUT)  INTENS(LOW)  CAPS(OFF)   JUST(LEFT)\n\u00a8 TYPE(TEXT)   INTENS(HIGH) COLOR(WHITE)\n\u00dd TYPE(INPUT)  INTENS(HIGH) PAD('_')    CAPS(ON)\n% TYPE(INPUT)  INTENS(HIGH) PAD(' ')    COLOR(TURQ) CAPS(ON)\n\u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(WHITE)\n)BODY WINDOW(65 17)\n+Command ===>$ZCMD                                            +\n\u00a8                    Select one only printer                    +\n+\n+INSerting/DELeting/MODifing a dynamic printer? ==>\u00ddz  +\n+Sel  Printer      Description +\n+---  -----------  ---------------------------------------------+\n     %APRTNAME   +%APRTDESC                                     +\n)MODEL ROWS(SCAN)\n+\u00ddZ+ \u00acPRTNAME    +\u00acPRTDESC                                      +\n)INIT\n&ZTDMARK = ' ________________________ End of data ________________________'\n .ZVARS  = '(DYNPRT,SELCPRT)'\n .CURSOR = ZCMD\n .HELP   = PRTLANPH\n)PROC\n VER (&DYNPRT,NB)\n VER (&DYNPRT,LIST,NO,INS,DEL,MOD)\n)END\n./  ADD NAME=PRTLANP2\n)ATTR\n+ TYPE(TEXT)   INTENS(LOW)  SKIP(ON)  COLOR(TURQ)\n# TYPE(TEXT)   INTENS(HIGH) COLOR(WHITE)\n\u00dd TYPE(INPUT)  INTENS(HIGH) PAD('_')  CAPS(ON)\n% TYPE(&ATT00) INTENS(HIGH) PAD('_')  CAPS(ON)\n\u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(WHITE) CAPS(OFF)\n)BODY WINDOW(48 10)\n+\n#        Dynamic definition of printers        +\n+\n+      Printer Name  Tcp/Ip Address  +\n+      ------------  ---------------------+\n+     %DYNNAME    + \u00ddZ  +.\u00ddZ  +.\u00ddZ  +.\u00ddZ  +\n+Description +\n+----------------------------------------------+\n\u00ddDYNDESC                                       +\n\u00acMSGMNT                                        +\n)INIT\n .ZVARS  = '(DYN1TCP,DYN2TCP,DYN3TCP,DYN4TCP)'\n)PROC\n &KEYS = .PFKEY\n VER (&DYNNAME,NB)\n VER (&DYN1TCP,NB,NUM)\n VER (&DYN1TCP,RANGE,0,255)\n VER (&DYN2TCP,NB,NUM)\n VER (&DYN2TCP,RANGE,0,255)\n VER (&DYN3TCP,NB,NUM)\n VER (&DYN3TCP,RANGE,0,255)\n VER (&DYN4TCP,NB,NUM)\n VER (&DYN4TCP,RANGE,0,255)\n VER (&DYNDESC,NB)\n)END\n./  ADD NAME=PRTLANP3\nATTR\n+ TYPE(TEXT)   INTENS(LOW)  SKIP(ON)  COLOR(TURQ)\n# TYPE(TEXT)   INTENS(HIGH) COLOR(WHITE)\n% TYPE(INPUT)  INTENS(HIGH) PAD(' ')  CAPS(ON)\n\u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(WHITE) CAPS(OFF)\n)BODY WINDOW(63 12)\n+\n+      Printer Selected #===>\u00acpsprtsel   +\n+      Print orientation#===>%z   +   See list below\n+      Burst Page Sep.  #===>%lpr+    Yes or No\n+\n+Valid orientations:\n#  Port+- Portrait 80 characters by 60 lines in 11 pt. Courier\n#  Wide+- Portrait 132 characters by 103 lines in 6 pt. Courier\n#  Land+- Landscape 132 characters by 60 lines in 9 pt. Courier\n#  2up +- Landscape 2 pages 80 characters by 66 lines side by\n#      +  side in 6 pt. Courier\n+\n)INIT\n .ZVARS  = '(pstype)'\n &pstype = 'PORT'\n &lpr    = 'YES'\n)PROC\n ver (&pstype,nb,list,PORT,LAND,WIDE,2UP)\n ver (&lpr,nb,list,YES,NO)\n)END\n$E\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRTLANP1": {"ttr": 5124, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\t\\x00E\\x01\\x07\\x03\\x1f\\x01\\x10!\\x7f\\x149\\x00\\x1a\\x00\\x1f\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.09", "flags": 0, "createdate": "2007-01-31T00:00:00", "modifydate": "2010-08-05T14:39:45", "lines": 26, "newlines": 31, "modlines": 0, "user": "DB00988"}, "text": ")ATTR\n+ TYPE(TEXT)   INTENS(LOW)  SKIP(ON)    COLOR(BLUE)\n$ TYPE(INPUT)  INTENS(LOW)  CAPS(OFF)   JUST(LEFT)\n\u00e9 TYPE(TEXT)   INTENS(HIGH) COLOR(WHITE)\n\u00b0 TYPE(INPUT)  INTENS(HIGH) PAD('_')    CAPS(ON)\n% TYPE(INPUT)  INTENS(HIGH) PAD(' ')    COLOR(TURQ) CAPS(ON)\n\u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(WHITE)\n)BODY WINDOW(65 17)\n+Command ===>$ZCMD                                            +\n\u00e9                    Select one only printer                    +\n+\n+INSerting/DELeting/MODifing a dynamic printer? ==>\u00b0z  +\n+Sel  Printer      Description +\n+---  -----------  ---------------------------------------------+\n     %APRTNAME   +%APRTDESC                                     +\n)MODEL ROWS(SCAN)\n+\u00b0Z+ \u00acPRTNAME    +\u00acPRTDESC                                      +\n)INIT\n&ZTDMARK = ' ________________________ End of data ________________________'\n .ZVARS  = '(DYNPRT,SELCPRT)'\n .CURSOR = ZCMD\n .HELP   = PRTLANPH\n)PROC\n VER (&DYNPRT,NB)\n VER (&DYNPRT,LIST,NO,INS,DEL,MOD)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRTLANP2": {"ttr": 5126, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x13\\x00\\x19\\x01\\x07\\x03/\\x01\\x07\\x16_\\x158\\x00 \\x00$\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.19", "flags": 0, "createdate": "2007-02-01T00:00:00", "modifydate": "2007-06-14T15:38:19", "lines": 32, "newlines": 36, "modlines": 0, "user": "DB00988"}, "text": ")ATTR\n+ TYPE(TEXT)   INTENS(LOW)  SKIP(ON)  COLOR(TURQ)\n\u00a3 TYPE(TEXT)   INTENS(HIGH) COLOR(WHITE)\n\u00b0 TYPE(INPUT)  INTENS(HIGH) PAD('_')  CAPS(ON)\n% TYPE(&ATT00) INTENS(HIGH) PAD('_')  CAPS(ON)\n\u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(WHITE) CAPS(OFF)\n)BODY WINDOW(48 10)\n+\n\u00a3        Dynamic definition of printers        +\n+\n+      Printer Name  Tcp/Ip Address  +\n+      ------------  ---------------------+\n+     %DYNNAME    + \u00b0Z  +.\u00b0Z  +.\u00b0Z  +.\u00b0Z  +\n+Description +\n+----------------------------------------------+\n\u00b0DYNDESC                                       +\n\u00acMSGMNT                                        +\n)INIT\n .ZVARS  = '(DYN1TCP,DYN2TCP,DYN3TCP,DYN4TCP)'\n)PROC\n &KEYS = .PFKEY\n VER (&DYNNAME,NB)\n VER (&DYN1TCP,NB,NUM)\n VER (&DYN1TCP,RANGE,0,255)\n VER (&DYN2TCP,NB,NUM)\n VER (&DYN2TCP,RANGE,0,255)\n VER (&DYN3TCP,NB,NUM)\n VER (&DYN3TCP,RANGE,0,255)\n VER (&DYN4TCP,NB,NUM)\n VER (&DYN4TCP,RANGE,0,255)\n VER (&DYNDESC,NB)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRTLANP3": {"ttr": 5128, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\r\\x00\\x02\\x01\\x07#\\x9f\\x01\\x07$\\x0f\\x16\"\\x00\\x1a\\x00%\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.13", "flags": 0, "createdate": "2007-08-27T00:00:00", "modifydate": "2007-08-28T16:22:02", "lines": 26, "newlines": 37, "modlines": 0, "user": "DB00988"}, "text": ")ATTR\n+ TYPE(TEXT)   INTENS(LOW)  SKIP(ON)  COLOR(TURQ)\n\u00a3 TYPE(TEXT)   INTENS(HIGH) COLOR(WHITE)\n% TYPE(INPUT)  INTENS(HIGH) PAD(' ')  CAPS(ON)\n\u00ac TYPE(OUTPUT) INTENS(HIGH) COLOR(WHITE) CAPS(OFF)\n)BODY WINDOW(63 12)\n+\n+      Printer Selected \u00a3===>\u00acpsprtsel   +\n+      Print orientation\u00a3===>%z   +   See list below\n+      Burst Page Sep.  \u00a3===>%lpr+    Yes or No\n+\n+Valid orientations:\n\u00a3  Port+- Portrait 80 characters by 60 lines in 11 pt. Courier\n\u00a3  Wide+- Portrait 132 characters by 103 lines in 6 pt. Courier\n\u00a3  Land+- Landscape 132 characters by 60 lines in 9 pt. Courier\n\u00a3  2up +- Landscape 2 pages 80 characters by 66 lines side by\n\u00a3      +  side in 6 pt. Courier\n+\n)INIT\n .ZVARS  = '(pstype)'\n &pstype = 'PORT'\n &lpr    = 'YES'\n)PROC\n ver (&pstype,nb,list,PORT,LAND,WIDE,2UP)\n ver (&lpr,nb,list,YES,NO)\n)END\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PRTLSRIN": {"ttr": 5130, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x02\\x00 \\x01\\x10!\\x7f\\x01\\x10!\\x7f\\x16\\t\\x00\\x13\\x00\\x12\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@'", "ispf": {"version": "01.02", "flags": 0, "createdate": "2010-08-05T00:00:00", "modifydate": "2010-08-05T16:09:20", "lines": 19, "newlines": 18, "modlines": 0, "user": "DB00988"}, "text": "Name        Address(TCP/IP) Description\nMYPRINTER01 0.0.0.2         Eg. definition printer in PrtLan\nMI38PR      172.24.67.157   Assago  H/P     LOC. FOTOCOPIE     V PIANO\nMI58PR      172.24.67.167   Assago  H/P              UFF. 516  V PIANO\nMI66PR      172.24.67.183   Assago  XEROX            UFF. 516  V PIANO\nVI06PR      172.24.7.155    Vicenza H/P   OS/DBMS    UFF. 126  I PIANO\nVI15PR      172.24.7.164    Vicenza XEROX OS/COMSERV UFF. 108  I PIANO\nVI22PR      172.24.7.171    Vicenza H/P   OPR/ENGIN. UFF. 129  I PIANO\nVI25PR      172.24.7.158    Vicenza H/P   OS/390     UFF. 127  I PIANO\nVI26PR      172.24.7.175    Vicenza XEROX OS/COMSERV UFF. 108  I PIANO\nVI29PR      172.24.6.177    Vicenza XEROX DBA/SUPP.  UFF. 107  I PIANO\nVI32PR      172.24.7.181    Vicenza XEROX STORAGE    UFF. 101  I PIANO\nVI37PR      172.24.7.182    Vicenza XEROX OPERATION  UFF. 123  I PIANO\nVI39PR      172.24.7.176    Vicenza H/P   DBA/SUPP.  UFF. 107  I PIANO\nVI41PR      172.24.7.184    Vicenza H/P   OPR/PROCE. UFF. 107  I PIANO\nVI55PR      172.24.7.190    Vicenza FOTOCOPIATRICE B/N        II PIANO\nVI05PRSRV   172.24.3.152    Torri Q H/P   COMPUTER ROOM       IV PIANO\nVI51PRSRV   172.24.7.169    Vicenza H/P   PRJ./MGN.  UFF. 101 II PIANO\nVI52PRSRV   172.24.7.195    Vicenza H/P   COMPUTER ROOM        I PIANO\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "PYPRINT": {"ttr": 5132, "alias": false, "halfwords": 30, "notes": 0, "parms": "b\"\\x01*\\x00\\x14\\x01\\x07#_\\x01\\x07'\\x8f\\x17)\\x01v\\x01h\\x00\\x00\\xc4\\xc2\\xf0\\xf0\\xf9\\xf8\\xf8@@@\"", "ispf": {"version": "01.42", "flags": 0, "createdate": "2007-08-23T00:00:00", "modifydate": "2007-10-05T17:29:14", "lines": 374, "newlines": 360, "modlines": 0, "user": "DB00988"}, "text": "        /* ---------------------  rexx procedure  ---------------------- *\n         * Name:      PSPRINT                                            *\n         *                                                               *\n         * Function:  Convert a text file into a PostScript print        *\n         *            stream.                                            *\n         *                                                               *\n         * Syntax:    %PSPRINT input-file output-file / options          *\n         *                                                               *\n         * where:                                                        *\n         *        input-file is the data set name of the input text file *\n         *        output-file is optional and is the data set name that  *\n         *           will contain the postscript results.                *\n         *           - if not specified this is dynamically generated.   *\n         *           - if specified the output file will not be deleted  *\n         *             at the end of processing.                         *\n         *           - if specified as @ then the ISPF dialog will be    *\n         *             invoked for additional prompting.                 *\n         *       / is the delimeter used to offset the options           *\n         *       options are optional values which may be:               *\n         *           PORT, WIDE, LAND, or 2UP for print orientation      *\n         *           DEBUG to cause tracing of the rexx program          *\n         *             during execution                                  *\n         *           NOLPR to prevent the execution of the LPRPRINT exec.*\n         *                                                               *\n         * If no parameters are entered then the ISPF Dialog is invoked. *\n         *                                                               *\n         * Defaults:                                                     *\n         *            PORT orientation and delete the output file after  *\n         *            invoking the lprprint procedure.                   *\n         *                                                               *\n         * Author:    Lionel B. Dyck                                     *\n         *            Rockwell International                             *\n         *            P.O. Box 2515                                      *\n         *            Seal Beach, California 90740                       *\n         *            (310) 797-1125                                     *\n         *            IBMMail:  USROKNTN                                 *\n         *            Internet: lbd@osreq48.rockwell.com                 *\n         *            IBMLINK:  ROK2027                                  *\n         *                                                               *\n         * History:                                                      *\n         *           08/28/07 - add EXIT statment for call by PRTLAN     *\n         *           02/22/96 - display dialog even if dsname provided   *\n         *           09/26/94 - minor bug fix in parse                   *\n         *           09/02/94 - Reset LPRPRINT lprps to no               *\n         *           08/25/94 - Fix test for options                     *\n         *           04/27/94 - Add prompt option                        *\n         *           01/26/94 - updated to support non-ISPF usage        *\n         *           01/20/94 - created for TSO/ISPF                     *\n         *                                                               *\n         * Originally based upon the PSPRINT.cmd                         *\n         * Written by Michael Perks (10/31/92)                           *\n         * (c) Copyright IBM Corp. 1992 All Rights Reserved              *\n         * modified to allow an option of lptn                           *\n         *                                                               *\n         * modified to run under MVS TSO/E by Lionel Dyck                *\n         * to use PostScript programming by Carl J. Lydick               *\n         * of CalTech picked up from comp.lang.postscript.               *\n         *                                                               *\n         * This eliminates the calculation of line placement and         *\n         * page ejects and provides the following options:               *\n         *                                                               *\n         * PORT -  Portrait 80 characters by 60 lines in 11 pt. Courier  *\n         * WIDE -  Portrait 132 characters by 103 lines in 6 pt. Courier *\n         * LAND -  Landscape 132 characters by 60 lines in 9 pt. Courier *\n         * 2UP  -  2 pages 80 characters by 66 lines side by side        *\n         *         in landscape in 6 pt. Courier                         *\n         *                                                               *\n         * ------------------------------------------------------------- */\n\n        parse arg psinds outname \"/\" options\n\n        outname = translate(strip(outname))\n\n        if length(psinds) >= 0 then prompt = 1\n        if outname        = \"@\" then do\n           prompt = 1 ; outname = ''\n           end\n           else if length(outname) > 0 then prompt = 0\n        if length(options) > 0 then prompt = 0\n\n        cmd = sysvar(\"sysicmd\")\n        spf = sysvar(\"sysispf\")\n\n        if prompt = 1 then do forever\n           if spf <> \"ACTIVE\" then do\n              say cmd\": Not running under ISPF and no parameters specified\"\n              say cmd\": terminating - review the documentation and retry.\"\n              exit 8\n              end\n           Address ISPEXEC\n           \"Display Panel(PSPRINT)\"\n           if rc > 3 then exit\n           if lpr = \"No\" then lpr = \"NOLPR\"\n                         else lpr = \"\"\n           if \"OK\" <> sysdsn(psinds) then do\n               smsg = \"Error\"\n               lmsg = sysdsn(psinds)\n               \"Vput (Smsg Lmsg)\"\n               \"Setmsg Msg(Pspr002)\"\n                end\n           else call test_pds\n        end\n\n        if length(options) > 0 then\n           options = translate(options)\n\n        /* test options for debug */\n        if wordpos(\"DEBUG\",options) > 1 then do\n           trace \"?i\"\n           x = wordpos(\"DEBUG\",options)\n           new_opt = delword(options,x,1)\n           options = new_opt\n           end\n\n        /* test options for nolpr */\n        if wordpos(\"NOLPR\",options) > 1 then do\n           no_lpr = \"on\"\n           no_del = \"on\"\n           x = wordpos(\"NOLPR\",options)\n           new_opt = delword(options,x,1)\n           options = new_opt\n           end\n\n        if spf <> \"ACTIVE\" then no_lpr = \"on\"\n\n        if length(outname) = 0 then do\n           d = date(u)\n           date = substr(d,7,2)substr(d,1,2)substr(d,4,2)\n           s = time(\"L\")  /* get the current time hh:mm:ss.th */\n           t = substr(s,1,2)substr(s,4,2)substr(s,7,2)substr(s,10,1)\n           prefix = sysvar(sysuid)\n           pscript_dsn = \"'\"prefix\".pscript.D\"date\".T\"t\".ps'\"\n           end\n        else do\n             pscript_dsn = outname\n             no_del = \"on\"\n             end\n\n        out. = \"\"\n\n        Select\n          When options = \"PORT\" then call do_port\n          When options = \"WIDE\" then call do_wide\n          When options = \"LAND\" then call do_land\n          When options = \"2UP\"  then call do_2up\n          Otherwise call do_port\n          end\n\n        /* test the existence of the input data set */\n        if \"OK\" <> sysdsn(psinds) then\n        do\n            smsg = \"Error\"\n            lmsg = sysdsn(psinds)\n            call do_msg\n            exit\n        end\n\n        x = listdsi(psinds)\n        if pos(\"(\",psinds) > 0 then sysdsorg = \"PS\"\n        if sysdsorg = \"PO\" then do\n           if spf <> \"ACTIVE\" then do\n              say cmd\": Has specified a partitioned data set:\",\n                        psinds\n              say cmd\": which is not supported by this command\",\n                     \"outside of the ISPF enviornment.\"\n              say cmd\": Terminating processing.  Specify a member\",\n                     \"name and retry.\"\n              exit\n              end\n           Address ISPEXEC\n           call do_pds\n           exit\n           end\n\n        /* generate a ddname and dynamically allocate the output\n           data set. */\n        pscript_odd = \"PSXO\"random()\n        \"Alloc f(\"pscript_odd\") ds(\"pscript_dsn\") New Spa(30,30) Tr\",\n              \"Recfm(V B) Lrecl(255) Blksize(0) Dsorg(PS)\"\n\n        /* read each line, quote characters and then output */\n        pscript_idd = \"PSXi\"random()\n        \"Alloc f(\"pscript_idd\") ds(\"psinds\") Shr\"\n        \"Execio * diskr\" pscript_idd \"(Finis stem in.\"\n        \"Free f(\"pscript_idd\")\"\n\n        \"Execio * diskw\" pscript_odd \"(stem out.\"\n        \"Execio * diskw\" pscript_odd \"(Finis stem in.\"\n        \"Free f(\"pscript_odd\")\"\n\n        drop out. in.\n\n        if no_lpr <> \"on\" then do\n          if spf = \"ACTIVE\" then do\n             Address ISPEXEC \"Vget (lprps) Profile\"\n             hold_lprps = lprps\n             lprps = \"No\"\n             Address ISPEXEC \"Vput (lprps) Profile\"\n             end\n          \"%lprprint\" pscript_dsn\n          lprps = hold_lprps\n          if spf = \"ACTIVE\" then\n             Address ISPEXEC \"Vput (lprps) Profile\"\n          end\n          else Do                /* Line code add for binding PRTLAN */\n             outname = pscript_dsn  /* By Marco S. */\n             Exit 00 psinds outname\n          end                       /* End code add */\n\n\n        x = msg(\"OFF\")\n        if no_del <> \"on\" then\n          \"Delete\" pscript_dsn\n          else do\n            smsg = \"\"\n            lmsg = \"Output dsname is:\" pscript_dsn\n            call do_msg\n            end\n\n        exit\n\n        do_msg:\n            if spf = \"ACTIVE\" then do\n               Address ISPEXEC\n               \"Vput (Smsg Lmsg)\"\n               \"Setmsg Msg(Pspr002)\"\n               end\n            else do\n                 say smsg\n                 say lmsg\n                 end\n            return\n\n        do_port:\n        out.1 = \"%!PS-Adobe-1.0\"\n        out.2 = \"%%Creator: Carl J Lydick\"\n        out.3 = \"%%DocumentFonts: Courier\"\n        out.4 = \"%%Pages: (atend)\"\n        out.5 = \"/Courier findfont 11 scalefont setfont\"\n        out.6 = \"/C 0 def\"\n        out.7 = \"/PG 4 string def\"\n        out.8 = \"/P {showpage /H 770 def} def\"\n        out.9 = \"/G {(    Page Number : ) 170 H moveto C 1 add PG cvs show\",\n                \" /C C 1 add def} def\"\n        out.10 = \"/Q {36 H moveto dup length 80 gt {0 80 getinterval}\",\n                \" if show /H H 12 sub def H 30 le {P} if} def\"\n        out.11 = \"/R 0 def\"\n        out.12 = \"/S 512 string def\"\n        out.13 = '/T {(\", FF, \") search {R 0 ne {Q pop P} {pop pop /R 1 def}',\n                \" ifelse T} if} def\"\n        out.14 = \"/L {/H 770 def {currentfile S readline not {exit} if\",\n                \" H 770 eq {G Q} if T Q} loop showpage} def\"\n        out.15 = \"L\"\n        out.0 = 15\n        return\n\n        do_wide:\n        out.1 = \"%!PS-Adobe-1.0\"\n        out.2 = \"%%Creator: Carl J Lydick\"\n        out.3 = \"%%DocumentFonts: Courier\"\n        out.4 = \"%%Pages: (atend)\"\n        out.5 = \"/C 0 def\"\n        out.6 = \"/PG 4 string def\"\n        out.7 = \"/Courier findfont 6 scalefont setfont\"\n        out.8 = \"/P {showpage /H 750 def} def\"\n        out.9 = \"/G {(    Page Number : ) 110 H moveto C 1 add PG cvs show\",\n                \" /C C 1 add def} def\"\n        out.10 = \"/Q {36 H moveto dup length 132 gt {0 132 getinterval}\",\n                \" if show /H H 7 sub def H 30 le {P} if} def\"\n        out.11 = \"/R 0 def\"\n        out.12 = \"/S 512 string def\"\n        out.13 = '/T {(\", FF, \") search {R 0 ne {Q pop P}',\n                \" {pop pop /R 1 def} ifelse T} if} def\"\n        out.14 = \"/L {/H 750 def {currentfile S readline not {exit} if\",\n                \" H 750 eq {G Q} if T Q} loop showpage} def\"\n        out.15 = \"L\"\n        out.0 = 15\n        return\n\n        do_land:\n        out.1 = \"%!PS-Adobe-1.0\"\n        out.2 = \"%%Creator: Carl J Lydick\"\n        out.3 = \"%%DocumentFonts: Courier\"\n        out.4 = \"%%Pages: (atend)\"\n        out.5 = \"/C 0 def\"\n        out.6 = \"/PG 4 string def\"\n        out.7 = \"/Courier findfont 9 scalefont setfont\"\n        out.8 = \"/P {showpage 90 rotate 0 -610 translate /H 590 def} def\"\n        out.9 = \"/G {(    Page Number : ) 145 H moveto C 1 add PG cvs show\",\n                \" /C C 1 add def} def\"\n        out.10 = \"/Q {36 H moveto dup length 132 gt {0 132 getinterval}\",\n                \" if show /H H 9.5 sub def H 30 le {P} if} def\"\n        out.11 = \"/R 0 def\"\n        out.12 = \"/S 512 string def\"\n        out.13 = '/T {(\", FF, \") search {R 0 ne {Q pop P}',\n                \" {pop pop /R 1 def} ifelse T} if} def\"\n        out.14 = \"/L {90 rotate 0 -610 translate /H 590 def {currentfile S\",\n                \" readline not {exit} if H 590 eq {G Q} if T Q}\",\n                \" loop showpage} def\"\n        out.15 = \"L\"\n        out.0 = 15\n        return\n\n        do_2up:\n        out.1 = \"%!PS-Adobe-1.0\"\n        out.2 = \"%%Creator: Carl J Lydick\"\n        out.3 = \"%%DocumentFonts: Courier\"\n        out.4 = \"%%Pages: (atend)\"\n        out.5 = \"/Courier findfont 6 scalefont setfont\"\n        out.6 = \"/N {showpage 90 rotate 0 -618 translate /H 538\",\n                \" def /V 71 def} def\"\n        out.7 = \"/O {/H 538 def /V 431 def} def\"\n        out.8 = \"/P {V 431 ne {O} {N} ifelse} def\"\n        out.9 = \"/Q {V H moveto dup length 80 gt {0 80 getinterval}\",\n                \" if show /H H 7 sub def H 79 le {P} if} def\"\n        out.10 = \"/R 0 def\"\n        out.11 = \"/S 512 string def\"\n        out.12 = '/T {(\", FF, \") search {R 0 ne {Q pop P} {pop pop',\n                \" /R 1 def} ifelse T} if} def\"\n        out.13 = \"/L {90 rotate 0 -618 translate /H 538 def /V 71 def\",\n                \" {currentfile S readline not {exit} if T Q}\",\n                \" loop showpage} def\"\n        out.14 = \"L\"\n        out.0 = 14\n        return\n\n        test_pds:\n              x = listdsi(psinds)\n              if pos(\"(\",psinds) > 0 then sysdsorg = \"PS\"\n              Select\n                When sysdsorg = \"PS\" | pos(\"(\",psinds) > 1\n                     then\n                     \"Select Cmd(%\"cmd  psinds psopds \"/\" pstype lpr \")\"\n                When sysdsorg = \"PO\"\n                     then call do_pds\n                Otherwise nop;\n              end\n        return\n\n        do_pds:\n            \"Lminit Dataid(dataid) Dataset(\"psinds\") Enq(Shrw)\"\n            \"Lmopen Dataid(\"dataid\") Option(Input)\"\n            \"Lmmdisp Dataid(\"dataid\") Option(Display)\",\n              \"Commands(Any) Panel(PsprM)\"\n              do while rc == 0\n                 Call process_selection\n                \"Lmmdisp Dataid(\"dataid\") Option(Get)\"\n                 if rc == 8\n                    then \"Lmmdisp Dataid(\"dataid\") Option(Display)\",\n                         \"Commands(Any) Panel(LPRPM)\"\n              end\n              \"Lmmdisp Dataid(\"dataid\") Option(Free)\"\n              \"Lmclose Dataid(\"dataid\")\"\n              \"Lmfree  Dataid(\"dataid\")\"\n            return\n\n         process_selection:\n            if left(psinds,1) = \"'\"\n               then parse value psinds with \"'\" w_dsn \"'\"\n               else w_dsn = sysvar(\"syspref\")\".\"psinds\n            zlmember = strip(zlmember)\n            Select\n            When zllcmd = \"/\" | zllcmd = \"S\"\n            Then do\n              \"Lmmdisp Dataid(\"dataid\") Option(Put) Member(\"zlmember\")\",\n                  \"Zludata(printed)\"\n              \"Select Cmd(%\"cmd  \"'\"w_dsn\"(\"zlmember\")'\",\n                  psopds \"/\" pstype lpr \")\"\n              end\n            When zllcmd = \"B\"\n            Then \"Browse Dataid(\"dataid\") Member(\"zlmember\")\"\n            Otherwise nop;\n            End\n            return\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT832/FILE832.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT832", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}