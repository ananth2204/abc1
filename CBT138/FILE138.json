{"INMR01": {"INMLRECL": 80, "INMFNODE": "N1", "INMFUID": "SBGOLOB", "INMTNODE": "A", "INMTUID": "A", "INMFTIME": "20201220011327000000", "INMNUMF": 1}, "INMR02": {"1": {"INMUTILN": "IEBCOPY", "INMSIZE": 176358, "INMDSORG": "PO", "INMTYPE": "None", "INMLRECL": 80, "INMBLKSZ": 5600, "INMRECFM": "FB", "INMDIR": 7, "INMDSNAM": "CBT.V500.FILE138.PDS", "numfile": 1}, "2": {"INMUTILN": "INMCOPY", "INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 32756, "INMBLKSZ": 3120, "INMRECFM": "VS", "numfile": 1}}, "INMR03": {"1": {"INMSIZE": 176358, "INMDSORG": "PS", "INMLRECL": 80, "INMRECFM": "?"}}, "file": {"CBT.V500.FILE138.PDS": {"COPYR1": {"type": "PDS", "DS1DSORG": 512, "DS1BLKL": 5600, "DS1LRECL": 80, "DS1RECFM": "FB", "DS1KEYL": 0, "DS1OPTCD": 0, "DS1SMSFG": 0, "file_tape_blocksize": 3120, "DVAOPTS": 12336, "DVACLASS": 32, "DVAUNIT": 15, "DVAMAXRC": 32760, "DVACYL": 3340, "DVATRK": 15, "DVATRKLN": 58786, "DVAOVHD": 0, "num_header_records": 2, "DS1REFD": "200354", "DS1SCEXT": "b'\\x00\\x00\\x00'", "DS1SCALO": "b'\\x80\\x00\\x00\\xbe'", "DS1LSTAR": "b'\\x00\\x04\\x01'", "DS1TRBAL": "b'\\xe2\\xfa'"}, "COPYR2": {"deb": "b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "extents": ["b'\\x01\\x00\\x00\\x00\\xff\\x00\\x00\\x00\\x8f\\x03\\x90\\x00\\x04\\x9a\\xc0\\xd8'", "b'X\\xf4\\xfd\\xd0\\x00\\x00\\x01\\x06\\x00\\x07\\x01\\x06\\x00\\x0b\\x00\\x05'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'", "b'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'"]}, "members": {"$$DOC": {"ttr": 516, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x01\\x00\\x00\\x00\\x94\\x00\\x7f\\x00\\x94\\x00\\x7f\\x08S\\x000\\x001\\x00\\x00\\xe5\\xc7\\xc3\\xc1\\xd9\\xe3@@@@'", "ispf": {"version": "01.01", "flags": 0, "createdate": "1994-01-07T00:00:00", "modifydate": "1994-01-07T08:53:00", "lines": 48, "newlines": 49, "modlines": 0, "user": "VGCART"}, "text": "This dataset has the source and jcl for the SYSTEMID command.  It\ncomes, originally, from the CBT tape (file 300), but has been heavily\nmodified and extended by Art Tansky at SunGard.\n\nDISCLAIMER:\n\n       This code has worked at Sungard.  There is no guarantee that the\n       code will work anywhere else.  Neither Sungard nor the author\n       may be held reponsible for any damage caused by this code.\n\n\nTo assemble and link the source, use the ASMJCL member, making\nnecessary dataset name changes.\n\nThe SYSTEMID command will be linked non-authorized.  To get full\ninformation when running under VM, you must use the SYSTEMAU command,\nwhich is linked authorized.  The command name must also be specified as\na valid TSO authorized command.  There is nothing sacred about these\nnames, you can rename them to whatever you wish.\n\nUnlike the original code, this will only work for XA systems and above.\nIn order to allow maximum information from non-authorized code, a STIDP\ninstruction is not used.   Instead the serial number, etc. is gotten\nfrom the CVT prefix area; that was not filled in prior to XA.\n\nNotice that the CPU model type is generated from a table based on the\nfirst byte of the serial number.  If your model is not in the table,\nyou can add it, but make sure the table is kept in proper collating\nsequence; X'A' will SORT before X'1' but must come after it in the\ntable.  The values can be found in the Functional Characteristics\nmanual for the processor type.\n\nI'm sorry about the relative sparseness of comments, but the original\ncode did not have a lot, and neither did the program I stole the VM\nstuff out of.\n\nThe members included are:\n     $$DOC       This member\n     ASMJCL      Assemble and link JCL\n     HELPMEM     Help member for SYSTEMID\n     LDROP       macro\n     LUSE        macro\n     PRIME       macro\n     REGS        macro\n     SYSTEMID    Source for the SYSTEMID command\n     SYSTEMOL    Source for previous version of the SYSTEMID command\n     TABLE       macro\n     TERME       macro\n", "mimetype": "text/plain", "datatype": "unknown-8bit", "extension": ".txt"}, "ASMJCL": {"ttr": 518, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x00\\x7f\\x00\\x94\\x00\\x7f\\x08W\\x00!\\x00!\\x00\\x00\\xe5\\xc7\\xc3\\xc1\\xd9\\xe3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-07T00:00:00", "modifydate": "1994-01-07T08:57:00", "lines": 33, "newlines": 33, "modlines": 0, "user": "VGCART"}, "text": "//JOBNAME  JOB ...\n//*\n//ASM      PROC APARM=\n//ASM      EXEC PGM=IEV90,\n//             PARM='BATCH,TERM,DECK,NOLOAD,LINECNT=55,&APARM'\n//SYSLIB   DD  DSN=SYS1.MACLIB,DISP=SHR\n//         DD  DSN=SYS1.AMODGEN,DISP=SHR\n//         DD  DSN=VGCART.SYSTEMID.ASM,DISP=SHR            <== THIS DSN\n//SYSUT1   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSUT2   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSUT3   DD  SPACE=(CYL,(5,5)),UNIT=SYSDA\n//SYSTERM  DD  SYSOUT=*\n//SYSPRINT DD  SYSOUT=*\n//SYSPUNCH DD  DSN=&SYSGO,SPACE=(TRK,(10,10),RLSE),\n//             DCB=(LRECL=80,BLKSIZE=2560,RECFM=FB),\n//             UNIT=SYSDA,DISP=(,PASS)\n//   PEND\n//*\n//LKED     PROC LPARM=\n//LKED     EXEC PGM=IEWL,PARM='XREF,LIST,LET,MAP,&LPARM'\n//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(2,1))\n//SYSLMOD  DD  DSN=VGCART.AEMC.LINKLIB(&MEM),DISP=SHR\n//SYSPRINT DD  SYSOUT=*\n//SYSLIN   DD  DSN=&SYSGO,DISP=(SHR,PASS)\n//         DD  DDNAME=SYSIN\n//          PEND\n//*\n//STEP1    EXEC ASM\n//ASM.SYSIN DD  DSN=VGCART.SYSTEMID.ASM(SYSTEMID),DISP=SHR <== THIS DSN\n//*\n//STEP2   EXEC LKED,MEM=SYSTEMID\n//STEP3   EXEC LKED,MEM=SYSTEMAU,LPARM='AC=1'\n//*\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "HELPMEM": {"ttr": 520, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\x00\\x1f\\x00\\x89\\x00\\x1f\\x12\\x00\\x00\\x15\\x00\\x15\\x00\\x00\\xd3\\xc1\\xe2\\xe3\\xe5\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-01-01T00:00:00", "modifydate": "1989-01-01T12:00:00", "lines": 21, "newlines": 21, "modlines": 0, "user": "LASTVER"}, "text": ")F FUNCTION :\n\n List:\n      operating system ID and FMID,\n      CPU type and model,\n      CPU serial number,\n      amount of real memory and ESTOR in Meg,\n      SYSRES volser,\n      and today's date.\n If the command has APF authorization, and the MVS system is running\n as a guest of VM, the above will be preceded by:\n      VM operating system\n      version and level\n      PTF tape number\n      userid of the machine on which MVS is running.\n Note that the CPU model number will be \"SUBVM\" if the MVS is running\n under VM, and the command is not APF authorized.\n\n)X SYNTAX :\n         SYSTEMID\n)O OPERANDS - None.\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "LDROP": {"ttr": 522, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\x00\\x1f\\x00\\x89\\x00\\x1f\\x12\\x00\\x00<\\x00<\\x00\\x00\\xd3\\xc1\\xe2\\xe3\\xe5\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-01-01T00:00:00", "modifydate": "1989-01-01T12:00:00", "lines": 60, "newlines": 60, "modlines": 0, "user": "LASTVER"}, "text": "         MACRO\n&NAME    LDROP &W1,&W2,&W3,&W4,&W5,&W6,&W7,&W8\n         GBLB  &LUSED\n         GBLC  &USENM(50),&USEW(25)\n         LCLA  &A,&B,&C,&D,&E\n         LCLC  &X1,&COMMA\n         AIF   (&LUSED).GO\n         AGO   .LDRM000\n.GO      ANOP\n         AIF   ('&NAME' EQ '').NONAME\n&NAME    DS    0H .           DEFINE NAME\n.NONAME  ANOP\n         AIF   (N'&SYSLIST GT 8).LDRM001\n         AIF   (N'&SYSLIST LT 1).LDRM002\n&A       SETA  1\n&C       SETA  N'&SYSLIST\n.OKX     AIF   ('&SYSLIST(&A)' EQ '').LDRM003\n&A       SETA  &A+1\n         AIF   (&A LE &C).OKX\n.GEN     ANOP\n&B       SETA  1\n.NEXT    ANOP\n&A       SETA  1\n.FDROP   AIF   ('&USEW(&A)' EQ '&SYSLIST(&B)').HDROP\n&A       SETA  &A+1\n         AIF   (&A LE 25).FDROP\n         AGO   .LDRM004\n.HDROP   ANOP\n&D       SETA  (&A*2)-1\n&E       SETA  &D+1\n&X1      SETC  '&X1'.'&COMMA'.'&SYSLIST(&B)'\n&COMMA   SETC  ','\n.CLOSEUP ANOP\n&USEW(&A) SETC '&USEW(&A+1)'\n&USENM(&D) SETC '&USENM(&D+2)'\n&USENM(&E) SETC '&USENM(&E+2)'\n&A       SETA  &A+1\n&D       SETA  (&A*2)-1\n&E       SETA  &D+1\n         AIF   ('&USEW(&A)' EQ '').NEXTB\n         AIF   (&A LE 25).CLOSEUP\n.NEXTB   ANOP\n&B       SETA  &B+1\n         AIF   (&B LE &C).NEXT\n.GENUSE  DROP  &X1            GEN DROP STMT\n         MEXIT\n.LDRM000 MNOTE 12,'LDROP ERROR - LUSE NEVER USED TO ESTABLISH BASE REG'\n         MEXIT\n.LDRM001 MNOTE 12,'OPERAND ERROR - TOO MANY OPERANDS'\n         AGO   .OPFIELD\n.LDRM002 MNOTE 12,'OPERAND ERROR - AT LEAST 1 REGISTER NUMBER REQUIRED'\n         AGO   .OPFIELD\n.LDRM003 MNOTE 12,'OPERAND ERROR - NULL OPERAND'\n         AGO   .OPFIELD\n.LDRM004 MNOTE 12,'LDROP ERROR - REGISTER &SYSLIST(&B) NEVER LUSED'\n         AGO   .OPFIELD\n.OPFIELD MNOTE *,'OPERAND LIST FOLLOWS - &SYSLIST(1),&SYSLIST(2),&SYSLI*\n               ST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),&SYSLIST(7),&S*\n               YSLIST(8)'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "LUSE": {"ttr": 524, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\x00\\x1f\\x00\\x89\\x00\\x1f\\x12\\x00\\x00A\\x00A\\x00\\x00\\xd3\\xc1\\xe2\\xe3\\xe5\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-01-01T00:00:00", "modifydate": "1989-01-01T12:00:00", "lines": 65, "newlines": 65, "modlines": 0, "user": "LASTVER"}, "text": "         MACRO\n&NAME    LUSE  &WHERE,&W1,&W2\n         GBLB  &LUSED\n         GBLC  &USENM(50),&USEW(25)\n         LCLA  &A,&B,&C,&D,&E\n         LCLC  &X1,&X2\n         AIF   ('&NAME' EQ '').NONAME\n&NAME    DS    0H .           DEFINE NAME\n.NONAME  ANOP\n         AIF   (N'&SYSLIST GT 8).LUSM001\n         AIF   (N'&SYSLIST LT 2).LUSM002\n&A       SETA  1\n&C       SETA  N'&SYSLIST\n.OKX     AIF   ('&SYSLIST(&A)' EQ '').LUSM003\n&A       SETA  &A+1\n         AIF   (&A LE &C).OKX\n&E       SETA  K'&WHERE\n         AIF   (&E GT 8).LUSM004\n&X1      SETC  '&WHERE'\n.GEN     ANOP\n&B       SETA  2\n&E       SETA  0\n.NEXT    ANOP\n&A       SETA  1\n&D       SETA  1\n.FNULL   AIF   ('&USEW(&A)' EQ '').HNULL\n         AIF   ('&USEW(&A)' EQ '&SYSLIST(&B)').MATCH\n&A       SETA  &A+1\n&D       SETA  (&A*2)-1\n         AIF   (&A LE 25).FNULL\n         AGO   .LUSM005\n.MATCH   MNOTE 0,'** WARNING **  REGISTER &USEW(&A) LUSED AS BASE FOR &*\n               USENM(&D)&USENM(&D+1) -'\n         MNOTE 0,'               NEW USING CREATED'\n.HNULL   ANOP\n&USENM(&D)   SETC '&X1'\n&USENM(&D+1) SETC '&X2'\n&USEW(&A)    SETC '&SYSLIST(&B)'\n         AIF   (&LUSED).GENUSE\n         SPACE 1\n*------> LUSE ENVIRONMENT ESTABLISHED <------\n         SPACE 1\n&LUSED   SETB  1\n.GENUSE  ANOP\n         USING &X1&X2,&SYSLIST(&B) .   GEN USING STMT\n&B       SETA  &B+1\n&E       SETA  &E+4096\n&X2      SETC  '+'.'&E'\n         AIF   (&B LE &C).NEXT\n         MEXIT\n.LUSM001 MNOTE 12,'OPERAND ERROR - TOO MANY OPERANDS'\n         AGO   .OPFIELD\n.LUSM002 MNOTE 12,'OPERAND ERROR - AT LEAST 2 OPERANDS REQUIRED'\n         AGO   .OPFIELD\n.LUSM003 MNOTE 12,'OPERAND ERROR - OPERAND &A IS NULL'\n         AGO   .OPFIELD\n.LUSM004 MNOTE 12,'OPERAND ERROR - OPERAND 1 IS LONGER THAN 8 CHARS'\n         AGO   .OPFIELD\n.LUSM005 MNOTE 12,'LUSE USER ERROR - TOO MANY LUSE WITHOUT LDROP'\n         INUSE\n         MEXIT\n.OPFIELD MNOTE *,'OPERAND LIST FOLLOWS - &SYSLIST(1),&SYSLIST(2),&SYSLI*\n               ST(3),&SYSLIST(4),&SYSLIST(5),&SYSLIST(6),&SYSLIST(7),&S*\n               YSLIST(8),&SYSLIST(9)'\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "PRIME": {"ttr": 526, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\x00\\x1f\\x00\\x89\\x00\\x1f\\x12\\x00\\x00<\\x00<\\x00\\x00\\xd3\\xc1\\xe2\\xe3\\xe5\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-01-01T00:00:00", "modifydate": "1989-01-01T12:00:00", "lines": 60, "newlines": 60, "modlines": 0, "user": "LASTVER"}, "text": "         MACRO\n&NAME    PRIME &REG1,&REG2,&REG3,&LV=72,&AREA=,&GETMAIN=NO,            X\n               &AMODE=24,&RMODE=24,&REGS=YES,&CSECT=YES\n         GBLA  &SAVESIZE\n         GBLB  &FREESAVE\n         GBLC  &R\n         LCLC  &REGX\n         AIF   ('&CSECT' EQ 'YES').CSECTOK\n         MNOTE 'CSECT=NO IS NO LONGER SUPPORTED'\n.CSECTOK ANOP\n         AIF   ('&REGS' EQ 'NO').NOREGS\n         REGS\n.NOREGS  ANOP\n&NAME    CSECT\n&NAME    AMODE &AMODE\n&NAME    RMODE &RMODE\n&REGX    SETC  '&REG1'\n         AIF   (T'&REG1 EQ 'O').NOREG\n         AIF   (T'&REG2 EQ 'O').ONEREG\n         LUSE  &NAME,&REG1,&REG2          ESTABLISH ADDRESSABILITY\n         AGO   .GOTUSE\n.NOREG   ANOP\n&REGX    SETC  '&R.12'\n.ONEREG  LUSE  &NAME,&REGX                ESTABLISH ADDRESSABILITY\n.GOTUSE  ANOP\n         B     22(&R.15)\n         DC    AL1(16)\n         DC    CL8'&NAME'\n         DC    CL8'&SYSDATE'\n         DS    0H\n         STM   &R.14,&R.12,12(&R.13)      SAVE REGISTERS\n         LR    &REGX,&R.15\n         AIF   (T'&REG2 EQ 'O').GOTBASE\n         LA    &REG2,4095(&REGX)           INITIALIZE THE SECOND\n         LA    &REG2,1(&REG2)               BASE REGISTER\n.GOTBASE ANOP\n         AIF   (T'&REG3 EQ 'O').NOPARM\n         LR    &REG3,R1                   GET PARAMETER LIST ADDR\n.NOPARM  ANOP\n         AIF   ('&AREA' EQ '').NOAREA\n         LA    1,&AREA\n         AGO   .SETSAVE\n.NOAREA  ANOP\n&SAVESIZE SETA &LV\n         AIF   ('&GETMAIN' EQ 'YES').GETSAVE\n&FREESAVE SETB 0\n         BAL   1,IX&SYSNDX\n         DS    CL(&SAVESIZE)\nIX&SYSNDX DS   0H\n         AGO   .SETSAVE\n.GETSAVE ANOP\n         GETMAIN R,LV=&SAVESIZE\n&FREESAVE SETB 1\n.SETSAVE ANOP\n         XC    0(72,&R.1),0(&R.1)        CLEAR SAVE AREA\n         ST    &R.1,8(&R.13)             PUT ADDR IN PREVIOUS SAVE\n         ST    13,4(&R.1)                CHAIN TO HIGHER SAVE AREA\n         LM    0,1,20(&R.13)             RESTORE 0 AND 1\n         L     &R.13,8(&R.13)            SET SAVE AREA POINTER\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "REGS": {"ttr": 528, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\x00\\x1f\\x00\\x89\\x00\\x1f\\x12\\x00\\x00\\x0f\\x00\\x0f\\x00\\x00\\xd3\\xc1\\xe2\\xe3\\xe5\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-01-01T00:00:00", "modifydate": "1989-01-01T12:00:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "LASTVER"}, "text": "         MACRO\n         REGS\n         GBLC   &R\n         LCLA   &N\n         AIF    ('&R' EQ 'R').E\n&R       SETC   'R'\n*\n**********************  REGISTER EQUATES  *****************************\n*\n.L       ANOP\n&R&N     EQU    &N\n&N       SETA   &N+1\n         AIF    (&N LT 16).L\n.E       ANOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "SYSTEMID": {"ttr": 530, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x00\\x7f\\x00\\x94\\x00\\x7f\\x08S\\x01\\xb8\\x01\\xb8\\x00\\x00\\xe5\\xc7\\xc3\\xc1\\xd9\\xe3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-07T00:00:00", "modifydate": "1994-01-07T08:53:00", "lines": 440, "newlines": 440, "modlines": 0, "user": "VGCART"}, "text": " TITLE 'S Y S T E M   C O N F I G U R A T I O N   D I S P L A Y'\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n*                                                                     *\n*        THIS CODE HAS WORKED AT SUNGARD.  THERE IS NO GURANTEE       *\n*        THAT THE CODE WILL WORK ANYWHERE ELSE.  NEITHER SUNGARD      *\n*        NOR THE AUTHOR MAY BE HELD RESPONSIBLE FOR ANY DAMAGE        *\n*        CAUSED BY THIS CODE.                                         *\n*                                                                     *\n*  SYSMVS IS THE OS/MVS VERSION OF THE SYSTEM CONFIGURATION DISPLAY   *\n*     COMMAND.  IT SHOWS A TSO USER THE OPERATING SYSTEM, RELEASE,    *\n*     CPU MODEL, SERIAL NUMBER(S), AND MAIN STORAGE SIZE, AND DATE.   *\n*                                                                     *\n*        MODIFIED TO GIVE MODEL NUMBERS FOR 308X, 3090, AND 4381      *\n*                                                                     *\n*        MODIFIED BY ART TANSKY AT SUNGARD FOR 3090                A.T.\n*        PROCESSORS.  IT MUST NOW BE AUTHORIZED AS                 A.T.\n*        IT MAKES USE OF THE \"STIDP\" PRIVELEGED                    A.T.\n*        INSTRUCTION                                               A.T.\n*                                                                     *\n*        COMES FROM CBT FILE#300                                      *\n*                                                                     *\n*        RE-MODIFIED TO LIST THE AMOUNT OF MEG ONLINE INSTEAD OF   A.T.\n*        THE AMOUNT OF K.  SYSTEMS KEEP GETTING BIGGER.            A.T.\n*                                                                     *\n*        MODIFIED TO GIVE INFOMATION ABOUT THE VM SYSTEM MVS IS    A.T.\n*        RUNNING UNDER.                                            A.T.\n*                                                                     *\n*        MODIFIED FORMAT OF OUTPUT LINE.                              *\n*                                                                     *\n*        MODIFIED TO SHOW AMOUNT OF ESTOR AVAILABLE.                  *\n*                                                                     *\n*        MODIFIED TO RUN AS A TSO COMMAND PROCESSOR.  USE PUTLINE  TSO*\n*        INSTEAD OF TPUT.  CODE ADDED (CHANGED) IS MARKED \"TSO\".   TSO*\n*                                                                     *\n*        NOTE:  THIS NEED NO LONGER BE RUN AUTHORIZED, UNLESS         *\n*        YOU WANT THE INFORMATION WHEN RUNNING UNDER VM, BUT THERE    *\n*        IS A RESTRICTION THAT THE DATA IN THE CVT PREFIX ARE WAS     *\n*        NOT THERE UNDER SP, IT STARTS WITH XA.  IF THIS PROGRAM IS   *\n*        TO RUN UNDER SP, THE DATA MUST BE RETRIEVED WITH THE STIDP   *\n*        COMMAND, AND THUS IT WILL HAVE TO BE AUTHORIZED, THOUGH      *\n*        THE REQUIRED INFORMATION MIGHT BE AVAILABLE IN THE PSA OR    *\n*        PCCA.                                                        *\n*                                                                     *\n*        MODIFIED TO COUNT ONLINE PROCESSORS.                         *\n*                                                                     *\n*        MODIFIED AGAIN FOR 2-LINE FORMAT & ADDITIONAL DATA           *\n*                                                                     *\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n         SPACE 2\n         MACRO\n&LBL     DIAG &R1,&R2,&CODE ISSUE DIAGNOSE MACHINE COMMAND\n         DS    0H                  ASSURE HALFWORD ALIGNMENT\n&LBL     DC    X'83'               OPCODE\n         DC    AL.4(&R1,&R2)       OPERANDS 4 BITS EACH\n         DC    Y(&CODE)            DIAGNOSE CODE\n         MEND\n         EJECT\nSYSMVS   PRIME R12,AMODE=31,GETMAIN=NO,LV=144  AMODE REQ'D FOR RCE TSO\n         LUSE  CPPL,R1                                             TSO\n         LA    R10,MYIOPL                                          TSO\n         LUSE  IOPL,R10                                            TSO\n         L     R0,CPPLUPT                                          TSO\n         ST    R0,IOPLUPT                                          TSO\n         L     R0,CPPLECT                                          TSO\n         ST    R0,IOPLECT                                          TSO\n         LA    R0,MYECB                                            TSO\n         ST    R0,IOPLECB                                          TSO\n         LDROP R10                                                 TSO\n         LDROP R1                                                  TSO\n         EJECT\n         L     R10,CVTPTR\n         LA    R5,CVTMAP-CVTFIX    BACK TO PREFIX\n         SR    R10,R5\n         LUSE  CVTFIX,R10\n         L     R3,CVTSYSAD\n         MVC   OPSYS,CVTPRODN\n         MVC   FMID,CVTPRODI\n         IC    R14,CVTDCB\n         N     R14,VSMASK\n         SRL   R14,1\n         L     R9,CVTEORM\n         SRL   R9,20\n         A     R9,=F'1'\n         CVD   R9,DWD\n         ED    CSTOR,DWD+5\n         L     R8,CVTRCEP          @ RCE\n         LUSE  RCE,R8\n         L     R8,RCEESPL          # FRAMES OF ESTOR AVAILABLE\n         LDROP R8\n         SRL   R8,8                CONVERT TO MEG\n         CVD   R8,DWD\n         ED    ESTOR,DWD+5\n         MVI   CSTOR+L'CSTOR,C'M'\n         MVI   ESTOR+L'ESTOR,C'M'\n         MVC   CUU,UCBNAME-UCBOB(R3)\n         MVC   VOLSER,UCBVOLI-UCBOB(R3)\n         L     R9,CVTDFA\n         LUSE  DFA,R9\n         ED    DFP,DFAREL\n         LDROP R9\n         L     R9,CVTSMCA\n         LUSE  SMCABASE,R9\n         MVC   SMFID,SMCASID\n         ED    YYDDD,SMCAIDTE+1\n         L     R1,SMCAITME\n         SLR   R0,R0\n         D     R0,=F'360000'\n         CVD   R1,DWD\n         OI    DWD+7,X'0F'\n         UNPK  HH,DWD+6(2)\n         LR    R1,R0\n         SLR   R0,R0\n         D     R0,=F'6000'\n         CVD   R1,DWD\n         OI    DWD+7,X'0F'\n         UNPK  MM,DWD+6(2)\n         LDROP R9\n         UNPK  WORK(5),CVTMDL(3)\n         MVC   CPU,WORK                                            A.T.\n         L     R9,CVTPCCAT         @ PCCAVT\n*  FIND HOW MANY CP'S (CPU'S) ARE ONLINE\n         LA    R15,16              UP TO 16 POSSIBLE\n         XR    R1,R1               COUNTER\nCPUON    DS    0H\n         CLC   =F'0',0(R9)         THIS CP ONLINE?\n         BE    NOTON                 NO\n         LA    R1,1(R1)              YES\nNOTON    DS    0H\n         LA    R9,4(R9)            POINT TO NEXT ADDRESS\n         BCT   R15,CPUON           AND CHECK NEXT\n         CVD   R1,DWD\n         ED    NUMCPS,DWD+6\n         CLC   =C' 1',NUMCPS+2     ONLY ONE CP?\n         BNE   MORECPS               NO, OKAY\n         MVC   CPS,=C'CP  '        GET RID OF THE PLURAL\nMORECPS  DS    0H\n         LUSE  PSA,R0\n         L     R9,PSAPCCAV         @ PCCA\n         LDROP R0\n         LUSE  PCCA,R9\n         MVC   SERIAL,PCCACPID+2\n         MVC   DWD+2(3),PCCACPID   CONVERT PRINTABLE HEX TO HEX\n         TR    DWD+2(3),PRHEXTBL\n         PACK  DWD(2),DWD+2(3)\n         LDROP R9\n         CLI   DWD,X'FF'           ARE WE UNDER VM?\n         BE    DOVM                  YES\nTYPELKUP DS    0H                  LOOK UP CPU TYPE\n         LA    R9,TBL23A1          ASSUME A 23A1\n         CLC   =C'23\u00b31',CPU        IS IT?\n         BE    FINDTYPE\n         LA    R9,TBL9000          ASSUME A 9000\n         CLC   =C'9000',CPU        IS IT?\n         BE    FINDTYPE\n         LA    R9,TBL3090          ASSUME A 3090\n         CLC   =C'3090',CPU        IS IT?\n         BE    FINDTYPE\n         LA    R9,TBL4381          ASSUME A 4381\n         CLC   =C'4381',CPU        IS IT?\n         BE    FINDTYPE\n         LA    R9,TBL308X          ASSUME A 308X\n         CLC   =C'30',CPU          IS IT?\n         BNE   NOTYPE              NO, CAN'T DETERMINE MODEL TYPE\n         CLC   =C'81',CPU+2        3081?\n         BE    FINDTYPE            YES\n         CLC   =C'83',CPU+2        3083?\n         BE    FINDTYPE            YES\n         CLC   =C'84',CPU+2        3084?\n         BE    FINDTYPE            YES\n         B     NOTYPE              CAN'T DETERMINE TYPE\nFINDTYPE DS    0D\n*  FIND CPU TYPE BASED ON INTERNAL (SEMI-RANDOM) NUMBERS IN THE\n*  FIRST BYTE OF VALUE GIVEN BY STIDP.  VALUES CAN BE FOUND IN THE\n*  FUNCTIONAL CHARACTERISTICS MANUAL FOR EACH CPU MODEL.\n         CLC   0(1,R9),DWD\n         BE    MOVETYPE\n         BH    NOTYPE              NO MATCH - GIVE UP\n         LA    R9,7(R9)            BUMP TO NEXT ENTRY\n         B     FINDTYPE            AND KEEP LOOKING\n*  WE GOT THE TYPE - MOVE IT INTO THE PRINT LINE\nMOVETYPE DS    0D\n         MVC   CPUTYPE,1(R9)\nNOTYPE   DS    0H\n         EJECT\n         PUTLINE PARM=PUTLPB,                                      TSO X\n               OUTPUT=(LINE1PTR,MULTLIN,DATA),                     TSO X\n               ENTRY=LINKPUTL,                                     TSO X\n               MF=(E,MYIOPL)                                       TSO\n         B     LEAVE               EXIT\nDOVM     DS    0D                  GET INFO FROM VM\n         TESTAUTH FCTN=1           ARE WE AUTHORIZED\n         LTR   R15,R15\n         BZ    AUTHOK                YES\n         MVC   CPUTYPE,=C' SUBVM'\n         B     NOTYPE\nAUTHOK   DS    0D\n         MODESET MODE=SUP,KEY=ZERO\n         LRA   R1,VMBUFF\n         LA    R2,VMBUFFLN\n         DIAG  R1,R2,X'0000'       X'83120000' IF NO DIAG MACRO\n         MODESET MODE=PROB,KEY=NZERO\n         MVC   DWD(1),IPUVC        MOVE IN VERSION\n         MVC   VMSYS,HPID\n         MVC   VMID,USID\n         XR    R7,R7\n         IC    R7,VC\n         CVD   R7,DWD2\n         ED    VMVERS,DWD2+6\n         IC    R7,LVL\n         CVD   R7,DWD2\n         ED    VMLVL,DWD2+6\n         ICM   R7,B'0011',MCEL\n         CVD   R7,DWD2\n         ED    VMPUT,DWD2+5\n*        LA    R7,VMLINEND-VMLINE                                  TSO\n*        TPUT  VMLINE,(R7)                                         TSO\n         PUTLINE PARM=PUTLPB,                                      TSO ?\n               OUTPUT=(VMRDW,SINGLE,DATA),                         TSO ?\n               ENTRY=LINKPUTL,                                     TSO ?\n               MF=(E,MYIOPL)                                       TSO\n         B     TYPELKUP            GO BACK AND PUT OUT 1ST LINE, SECOND\n         SPACE\nLEAVE    DS    0H\n*\n*     DEBUGGING STUFF:\n*\n*        MODESET MODE=SUP\n*        STIDP DWD\n*        MODESET MODE=PROB\n*        LUSE  PSA,R0\n*        L     R9,PSAPCCAV         @ PCCA\n*        LDROP R0\n*        LUSE  PCCA,R9\n*        MVC   DWD+1(7),PCCACPID\n*        LDROP R9\n*        EX    15,*                ABEND 0C3\n*\n*     END OF DEBUGGING STUFF\n*\n         TERME RC=0\nLINKPUTL SAVE  (14,12)\n         LA    R15,72(,R13)\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         LINK  SF=(E,CALLPUTL),MF=(E,(1))\n         L     R13,4(,R13)\n         RETURN (14,12),T,RC=(15)\n         EJECT\nCALLPUTL LINK  EP=IKJPUTL,SF=L                                     TSO\nMYECB    DC    F'0'                                                TSO\nMYIOPL   DC    XL(IOPLLEN)'0',0F'0'                                TSO\nPUTLPB   PUTLINE MF=L                                              TSO\nVSMASK   DC    F'2'\nF8       DC    F'8'\n*\n*  NOTE: THESE TABLES MUST EACH BE SORTED ASCENDING\n*        (WATCH OUT THAT A-F SHOULD SORT AFTER 0-9)\n*\nTBL9000  EQU   *                   MODEL NUMBERS FOR 9000'S\n         DC    X'A0',CL6' 190  '\n         DC    X'A1',CL6' 210  '\n         DC    X'A3',CL6' 260  '\n         DC    X'A4',CL6' 320  '\n         DC    X'A5',CL6' 440  '\n         DC    X'A6',CL6' 480  '\nTBL23A1  EQU   *      MODEL NUMBERS FOR 23A1'S (AIR-COOLED 9000'S?)\n         DC    X'28',CL6' 500  '\n         DC    X'38',CL6' 580  '\n         DC    X'39',CL6' 330  '\n         DC    X'45',CL6' 620  '\n         DC    X'49',CL6' 340  '\n         DC    X'65',CL6' 720  '\nTBL3090  EQU   *                   MODEL NUMBERS FOR 3090'S\n         DC    X'01',CL6' 120S '\n         DC    X'02',CL6' 150J '\n         DC    X'03',CL6' 120E '\n         DC    X'05',CL6' 150  '\n         DC    X'06',CL6' 150E '\n         DC    X'08',CL6' 280S '\n         DC    X'09',CL6' 280E '\n         DC    X'10',CL6' 180  '\n         DC    X'11',CL6' 180E '\n         DC    X'12',CL6' 180S '\n         DC    X'13',CL6' 180J '\n         DC    X'14',CL6' 150S '\n         DC    X'15',CL6' 170S '\n         DC    X'16',CL6' 250S '\n         DC    X'17',CL6' 170J '\n         DC    X'18',CL6' 280J '\n         DC    X'20',CL6' 200  '\n         DC    X'21',CL6' 200E '\n         DC    X'22',CL6' 200S '\n         DC    X'23',CL6' 200J '\n         DC    X'25',CL6' 250J '\n         DC    X'31',CL6' 300E '\n         DC    X'32',CL6' 300S '\n         DC    X'33',CL6' 300J '\n         DC    X'35',CL6' 380J '\n         DC    X'40',CL6' 400  '\n         DC    X'41',CL6' 400E '\n         DC    X'42',CL6' 400S '\n         DC    X'43',CL6' 400J '\n         DC    X'50',CL6' 500S '\n         DC    X'51',CL6' 500E '\n         DC    X'52',CL6' 500J '\n         DC    X'55',CL6' 110J '\n         DC    X'56',CL6' 120J '\n         DC    X'57',CL6' 150JH'\n         DC    X'58',CL6' 170JH'\n         DC    X'59',CL6' 250JH'\n         DC    X'61',CL6' 600E '\n         DC    X'62',CL6' 600S '\n         DC    X'63',CL6' 600J '\n         DC    X'FF',CL6' SUBVM'\nTBL308X  EQU   *                   MODEL NUMBERS FOR 308X'S\n         DC    X'01',CL6' E    '\n         DC    X'03',CL6' D    '\n         DC    X'11',CL6' B    '\n         DC    X'13',CL6' G    '\n         DC    X'21',CL6' J    '\n         DC    X'23',CL6' K    '\n         DC    X'26',CL6' Q    '\n         DC    X'53',CL6' G+   '\n         DC    X'63',CL6' K+   '\n         DC    X'66',CL6' Q+   '\n         DC    X'81',CL6' EX   '\n         DC    X'91',CL6' BX   '\n         DC    X'93',CL6' GX   '\n         DC    X'A1',CL6' JX   '\n         DC    X'A3',CL6' KX   '\n         DC    X'A6',CL6' QX   '\n         DC    X'B1',CL6' CX   '\n         DC    X'FF',CL6' SUBVM'\nTBL4381  EQU   *                   MODEL NUMBERS FOR 4381'S\n         DC    X'00',CL6'-2    '\n         DC    X'01',CL6'-3    '\n         DC    X'02',CL6'-1    '\n         DC    X'03',CL6'-13   '\n         DC    X'04',CL6'-14   '\n         DC    X'06',CL6'-11   '\n         DC    X'07',CL6'-23   '\n         DC    X'08',CL6'-12   '\n         DC    X'09',CL6'-21   '\n         DC    X'0A',CL6'-22   '\n         DC    X'FF',CL6' SUBVM'\nVMBUFFLC DC    0F'0',AL2(VMBUFFLN),XL2'0'\nPRHEXTBL TABLE\n         ORG   PRHEXTBL+C'A'\n         DC    X'FAFBFCFDFEFF'     TRANSLATE HEX LETTERS TO \"PACK-ABLE\"\n         ORG   PRHEXTBL+C'0'\n         DC    C'0123456789'\n         ORG   ,\n         LTORG\n         TITLE 'OUTPUT LINES'\nLINE1PTR DC    A(LINE2PTR)         @ 2ND LINE\nLINE1RDW DC    Y(LINE1END-LINE1RDW,0)\nLINE1    EQU   *\n         DC    C'SMFID'\nNUMCPS   DC    X'40202120'\n         DC    C' '\nCPS      DC    C'CP''S'\n         DC    C'  SERIAL CSTOR ESTOR  SYSTEM    FMID   DFP  '\n         DC    C'SYSRES   IPL='\nYYDDD    DC    X'40212061202020'   ' YY/DDD'                       A.T.\nLINE1END EQU   *\nLINE2PTR DC    A(0)                NO NEXT LINE\nLINE2RDW DC    Y(LINE2END-LINE2RDW,0)\nLINE2    EQU   *\nSMFID    DC    C'C309'\n         DC    C' '\nCPU      DC    CL4' '\nCPUTYPE  DC    CL6' '\n         DC    C' '\nSERIAL   DC    CL6' '\n         ORG   *-1                 OVERLAY CSTOR OVER LAST BYTE OF SER#\nCSTOR    DC    X'402020202120'     STORAGE AMOUNT                  A.T.\nESTOR    DC    X'402020202120'     STORAGE AMOUNT                  A.T.\n         DC    C'  '\nOPSYS    DC    C'SP3.1.3'\n         DC    C' '\nFMID     DC    CL7' '\nDFP      DC    X'40214B204B20'\n         DC    C' '\nCUU      DC    CL3' '\n         DC    C'='\nVOLSER   DC    CL6' '\n         DC    CL5'    @'\nHH       DC    C'  '\n         DC    C':'\nMM       DC    C'  '\nLINE2END EQU   *\nBESTORPL EQU   *,1                 PUT A PLUS HERE AFTER THE EDIT\nBCPHLD   DC    X'40202120'\nDWD      DS    D\nDWD2     DS    D\nVMBUFF   DS    0D\nHPID     DS    CL8                 SYSTEM NAME\n         DS    XL3                 RESERVED\nIPUVC    DS    XL1                 CPU VERS. CODE (1ST BYTE COP STIDP)\nMMCEL    DS    XL2                 370 GUESTS: MAX MCEL LENGTH\n*                                  XA GUESTS: RESERVED\nIPUAD    DS    XL2                 INSTR PROC UNIT\nUSID     DS    CL8                 VM USERID\nPPFLG    DS    XL8                 PROG PROD BIT MAP\nTIMEZONE DS    XL4                 TIME ZONE DIFFERENTIAL (IN SECONDS)\nLVL      DS    XL1                 RELEASE NUMBER\nVC       DS    XL1                 VERSION NUMBER\nMCEL     DS    XL2                 PLC TAPE NUMBER (MVS PUT EQUIV.)\nVMBUFFLN EQU   *-VMBUFF\nWORK     DS    CL7                                                 A.T.\nVMRDW    DC    Y(VMLINEND-VMRDW,0)\nVMLINE   DC    C'IPLED UNDER '\nVMSYS    DC    CL8'VM/XA/SP'\n         DC    C' VERSION '\nVMLVL    DC    X'40202120'\n         DC    C'.'\nVMVERS   DC    X'F0202120'\n         DC    C' AT TAPE#'\nVMPUT    DC    X'402020202120'\n         DC    C'.  VM USERID='\nVMID     DC    CL8'VMID'\nVMLINEND EQU   *\n         SPACE\n         EJECT\n         CVT   DSECT=YES,PREFIX=YES\n         EJECT\n         PRINT NOGEN\n         IEESMCA\n         IEFUCBOB\n         IHADFA\n         IHAPCCA\n         IHAPSA\n         IARRCE\n         SPACE 2\n         IKJCPPL ,                                                 TSO\n         SPACE 5                                                   TSO\n         IKJIOPL ,                                                 TSO\nIOPLLEN  EQU   *-IOPL                                              TSO\n         END   SYSMVS\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "SYSTEMOL": {"ttr": 774, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x94\\x00\\x7f\\x00\\x94\\x00\\x7f\\x12\\x08\\x01V\\x01V\\x00\\x00\\xe5\\xc7\\xc3\\xc1\\xd9\\xe3@@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1994-01-07T00:00:00", "modifydate": "1994-01-07T12:08:00", "lines": 342, "newlines": 342, "modlines": 0, "user": "VGCART"}, "text": " TITLE 'S Y S T E M   C O N F I G U R A T I O N   D I S P L A Y'\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n*                                                                     *\n*  SYSMVS IS THE OS/MVS VERSION OF THE SYSTEM CONFIGURATION DISPLAY   *\n*     COMMAND.  IT SHOWS A TSO USER THE OPERATING SYSTEM, RELEASE,    *\n*     CPU MODEL, SERIAL NUMBER(S), AND MAIN STORAGE SIZE, AND DATE.   *\n*                                                                     *\n*        MODIFIED TO GIVE MODEL NUMBERS FOR 308X, 3090, AND 4381      *\n*                                                                     *\n*        MODIFIED BY ART TANSKY AT SUNGARD FOR 3090                A.T.\n*        PROCESSORS.  IT MUST NOW BE AUTHORIZED AS                 A.T.\n*        IT MAKES USE OF THE \"STIDP\" PRIVELEGED                    A.T.\n*        INSTRUCTION                                               A.T.\n*                                                                     *\n*        COMES FROM CBT FILE#300                                      *\n*                                                                     *\n*        RE-MODIFIED TO LIST THE AMOUNT OF MEG ONLINE INSTEAD OF   A.T.\n*        THE AMOUNT OF K.  SYSTEMS KEEP GETTING BIGGER.            A.T.\n*                                                                     *\n*        MODIFIED TO GIVE INFOMATION ABOUT THE VM SYSTEM MVS IS    A.T.\n*        RUNNING UNDER.                                            A.T.\n*                                                                     *\n*        MODIFIED FORMAT OF OUTPUT LINE.                              *\n*                                                                     *\n*        MODIFIED TO SHOW AMOUNT OF ESTOR AVAILABLE.                  *\n*                                                                     *\n*        MODIFIED TO RUN AS A TSO COMMAND PROCESSOR.  USE PUTLINE  TSO*\n*        INSTEAD OF TPUT.  CODE ADDED (CHANGED) IS MARKED \"TSO\".   TSO*\n*                                                                     *\n*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\n         SPACE 2\n         MACRO\n&LBL     DIAG &R1,&R2,&CODE ISSUE DIAGNOSE MACHINE COMMAND\n         DS    0H                  ASSURE HALFWORD ALIGNMENT\n&LBL     DC    X'83'               OPCODE\n         DC    AL.4(&R1,&R2)       OPERANDS 4 BITS EACH\n         DC    Y(&CODE)            DIAGNOSE CODE\n         MEND\n         EJECT\nSYSMVS   PRIME R12,AMODE=31,GETMAIN=NO,LV=144  AMODE REQ'D FOR RCE TSO\n         LUSE  CPPL,R1                                             TSO\n         LA    R10,MYIOPL                                          TSO\n         LUSE  IOPL,R10                                            TSO\n         L     R0,CPPLUPT                                          TSO\n         ST    R0,IOPLUPT                                          TSO\n         L     R0,CPPLECT                                          TSO\n         ST    R0,IOPLECT                                          TSO\n         LA    R0,MYECB                                            TSO\n         ST    R0,IOPLECB                                          TSO\n         LDROP R10                                                 TSO\n         LDROP R1                                                  TSO\n         EJECT\n         L     R10,CVTPTR\n         LA    R5,CVTMAP-CVTFIX    BACK TO PREFIX\n         SR    R10,R5\n         LUSE  CVTFIX,R10\n         L     R3,CVTSYSAD\n         MVC   BUFFER(BUFEND-BUFFER),MASK\n         MVC   BPRODNAM,CVTPRODN\n         MVC   BFMID,CVTPRODI\n         IC    R14,CVTDCB\n         N     R14,VSMASK\n         SRL   R14,1\n         L     R9,CVTEORM\n         SRL   R9,20\n         A     R9,=F'1'\n         CVD   R9,DWD\n         ED    BCORE,DWD+5\n         L     R8,CVTRCEP          @ RCE\n         LUSE  RCE,R8\n         L     R8,RCEESPL          # FRAMES OF ESTOR AVAILABLE\n         LDROP R8\n         SRL   R8,8                CONVERT TO MEG\n         CVD   R8,DWD\n         MVO   DWD(4),DWD+5(3)     GET EXACTLY 4 DIGITS\n         ED    BESTOR,DWD+1\n         MVI   BESTORPL,C'+'       PUT THE PLUS SIGN IN THE OUTPUT LINE\n         MVC   BIPLV,UCBVOLI-UCBOB(R3)\n         ED    BDATE,CVTDATE+1\n         UNPK  WORK(5),CVTMDL(3)\n         MVC   BMODL,WORK                                          A.T.\n         LUSE  PSA,R0\n         L     R9,PSAPCCAV         @ PCCA\n         LDROP R0\n         LUSE  PCCA,R9\n         MVC   BSNUM,PCCACPID+2\n         MVC   DWD+2(3),PCCACPID   CONVERT PRINTABLE HEX TO HEX\n         TR    DWD+2(3),PRHEXTBL\n         PACK  DWD(2),DWD+2(3)\n         CLI   DWD,X'FF'           ARE WE UNDER VM?\n         BE    DOVM                  YES\n         LDROP R9\nTYPELKUP DS    0H                  LOOK UP CPU TYPE\n         LA    R9,TBL3090          ASSUME A 3090\n         CLC   =C'3090',BMODL      IS IT?\n         BE    FINDTYPE\n         LA    R9,TBL4381          ASSUME A 4381\n         CLC   =C'4381',BMODL      IS IT?\n         BE    FINDTYPE\n         LA    R9,TBL308X          ASSUME A 308X\n         CLC   =C'30',BMODL        IS IT?\n         BNE   NOTYPE              NO, CAN'T DETERMINE MODEL TYPE\n         CLC   =C'81',BMODL+2      3081?\n         BE    FINDTYPE            YES\n         CLC   =C'83',BMODL+2      3083?\n         BE    FINDTYPE            YES\n         CLC   =C'84',BMODL+2      3084?\n         BE    FINDTYPE            YES\n         B     NOTYPE              CAN'T DETERMINE TYPE\nFINDTYPE DS    0D\n*  FIND CPU TYPE BASED ON INTERNAL (SEMI-RANDOM) NUMBERS IN THE\n*  FIRST BYTE OF VALUE GIVEN BY STIDP.  VALUES CAN BE FOUND IN THE\n*  FUNCTIONAL CHARACTERISTICS MANUAL FOR EACH CPU MODEL.\n         CLC   0(1,R9),DWD\n         BE    MOVETYPE\n         BH    NOTYPE              NO MATCH - GIVE UP\n         LA    R9,6(R9)            BUMP TO NEXT ENTRY\n         B     FINDTYPE            AND KEEP LOOKING\n*  WE GOT THE TYPE - MOVE IT INTO THE PRINT LINE\nMOVETYPE DS    0D\n         MVC   BTYPE,1(R9)\nNOTYPE   DS    0H\n         EJECT\n*        LA    R7,BUFEND-BUFFER                                    TSO\n*        TPUT  BUFFER,(R7)                                         TSO\n         PUTLINE PARM=PUTLPB,                                      TSO ?\n               OUTPUT=(BUFRRDW,SINGLE,DATA),                       TSO ?\n               ENTRY=LINKPUTL,                                     TSO ?\n               MF=(E,MYIOPL)                                       TSO\n         B     LEAVE               EXIT\nDOVM     DS    0D                  GET INFO FROM VM\n         TESTAUTH FCTN=1           ARE WE AUTHORIZED\n         LTR   R15,R15\n         BZ    AUTHOK                YES\n         MVC   BTYPE,=C'SUBVM '\n         B     NOTYPE\nAUTHOK   DS    0D\n         MODESET MODE=SUP,KEY=ZERO\n         LRA   R1,VMBUFF\n         LA    R2,VMBUFFLN\n         DIAG  R1,R2,X'0000'       X'83120000' IF NO DIAG MACRO\n         MODESET MODE=PROB,KEY=NZERO\n         MVC   DWD(1),IPUVC        MOVE IN VERSION\n         MVC   VMSYS,HPID\n         MVC   VMID,USID\n         XR    R7,R7\n         IC    R7,VC\n         CVD   R7,DWD2\n         ED    VMVERS,DWD2+6\n         IC    R7,LVL\n         CVD   R7,DWD2\n         ED    VMLVL,DWD2+6\n         ICM   R7,B'0011',MCEL\n         CVD   R7,DWD2\n         ED    VMPUT,DWD2+5\n*        LA    R7,VMLINEND-VMLINE                                  TSO\n*        TPUT  VMLINE,(R7)                                         TSO\n         PUTLINE PARM=PUTLPB,                                      TSO ?\n               OUTPUT=(VMRDW,SINGLE,DATA),                         TSO ?\n               ENTRY=LINKPUTL,                                     TSO ?\n               MF=(E,MYIOPL)                                       TSO\n         B     TYPELKUP            GO BACK AND PUT OUT 1ST LINE, SECOND\n         SPACE\nLEAVE    DS    0H\n*\n*     DEBUGGING STUFF:\n*\n*        MODESET MODE=SUP\n*        STIDP DWD\n*        MODESET MODE=PROB\n*        LUSE  PSA,R0\n*        L     R9,PSAPCCAV         @ PCCA\n*        LDROP R0\n*        LUSE  PCCA,R9\n*        MVC   DWD+1(7),PCCACPID\n*        LDROP R9\n*        EX    15,*                ABEND 0C3\n*\n*     END OF DEBUGGING STUFF\n*\n         TERME RC=0\nLINKPUTL SAVE  (14,12)\n         LA    R15,72(,R13)\n         ST    R13,4(,R15)\n         ST    R15,8(,R13)\n         LR    R13,R15\n         LINK  SF=(E,CALLPUTL),MF=(E,(1))\n         L     R13,4(,R13)\n         RETURN (14,12),T,RC=(15)\n         EJECT\nCALLPUTL LINK  EP=IKJPUTL,SF=L                                     TSO\nMYECB    DC    F'0'                                                TSO\nMYIOPL   DC    XL(IOPLLEN)'0',0F'0'                                TSO\nPUTLPB   PUTLINE MF=L                                              TSO\nVSMASK   DC    F'2'\nF8       DC    F'8'\n*VS R038.   S/370-3081 SUBVM  222285    48M  IPL'D FROM X220R2. TODAY\n*P2.2.0  JBB2220  3081 SUBVM  222285    48M  IPL'D FROM X220R2. TODAY\n*P2.2.0  JBB2220 3090 300E   222285    48M+ 128M SYSRES=X220R2. TODAY\nMASK     DC    C'SP2.2.0 '         PRODUCT NAME\n         DC    C' '\n         DC    C'JBB2220'         FMID\n         DC    C' '\n         DC    C'3090'             CPU TYPE                        A.T.\n         DC    C' '\n         DC    C'     '            CPU MODEL (IF KNOWN)\n         DC    C'  '                                               A.T.\n         DC    C'123456'           SERIAL NUMBER                   A.T.\n         DC    X'402020202120'     STORAGE AMOUNT                  A.T.\n         DC    C'M'\n         DC    X'4020202120'\n         DC    C'M SYSRES='                                   A.T.\n         DC    C'RESPAK'                                           A.T.\n         DC    C'. TODAY IS YY.DDD'                                A.T.\n         ORG   *-7                                                 A.T.\n         DC    X'402120',C'.',X'202020'\n*\n*  NOTE: THESE TABLES MUST EACH BE SORTED ASCENDING\n*        (WATCH OUT THAT A-F SHOULD SORT AFTER 0-9)\n*\nTBL3090  EQU   *                   MODEL NUMBERS FOR 3090'S\n         DC    X'03',CL5'120E '\n         DC    X'05',CL5'150  '\n         DC    X'06',CL5'150E '\n         DC    X'09',CL5'280E '\n         DC    X'10',CL5'180  '\n         DC    X'11',CL5'180E '\n         DC    X'20',CL5'200  '\n         DC    X'21',CL5'200E '\n         DC    X'31',CL5'300E '\n         DC    X'40',CL5'400  '\n         DC    X'41',CL5'400E '\n         DC    X'51',CL5'500E '\n         DC    X'61',CL5'600E '\n         DC    X'FF',CL5'SUBVM'\nTBL308X  EQU   *                   MODEL NUMBERS FOR 308X'S\n         DC    X'01',CL5'E    '\n         DC    X'03',CL5'D    '\n         DC    X'11',CL5'B    '\n         DC    X'13',CL5'G    '\n         DC    X'21',CL5'J    '\n         DC    X'23',CL5'K    '\n         DC    X'26',CL5'Q    '\n         DC    X'53',CL5'G+   '\n         DC    X'63',CL5'K+   '\n         DC    X'66',CL5'Q+   '\n         DC    X'81',CL5'EX   '\n         DC    X'91',CL5'BX   '\n         DC    X'93',CL5'GX   '\n         DC    X'A1',CL5'JX   '\n         DC    X'A3',CL5'KX   '\n         DC    X'A6',CL5'QX   '\n         DC    X'B1',CL5'CX   '\n         DC    X'FF',CL5'SUBVM'\nTBL4381  EQU   *                   MODEL NUMBERS FOR 4381'S\n         DC    X'00',CL5'-2   '\n         DC    X'01',CL5'-3   '\n         DC    X'02',CL5'-1   '\n         DC    X'03',CL5'-13  '\n         DC    X'04',CL5'-14  '\n         DC    X'06',CL5'-11  '\n         DC    X'07',CL5'-23  '\n         DC    X'08',CL5'-12  '\n         DC    X'09',CL5'-21  '\n         DC    X'0A',CL5'-22  '\n         DC    X'FF',CL5'SUBVM'\nVMBUFFLC DC    0F'0',AL2(VMBUFFLN),XL2'0'\nNOTAUTH  DC    CL(BCORE-BMODL)'PGM NOT AUTH'\nPRHEXTBL TABLE\n         ORG   PRHEXTBL+C'A'\n         DC    X'FAFBFCFDFEFF'     TRANSLATE HEX LETTERS TO \"PACK-ABLE\"\n         ORG   PRHEXTBL+C'0'\n         DC    C'0123456789'\n         ORG   ,\n         LTORG\n         EJECT\nBUFRRDW  DC    Y(BUFEND-BUFRRDW,0)\nBUFFER   EQU   *\nBMASK    EQU   *\nBPRODNAM DC    C'SP2.2.0 '         PRODUCT NAME\n         DC    C' '\nBFMID    DC    C'JBB2220'         FMID\n         DC    C' '\nBMODL    DC    C'3090'             CPU TYPE                        A.T.\n         DC    C' '\nBTYPE    DC    C'     '            CPU MODEL (IF KNOWN)\n         DC    C'  '                                               A.T.\nBSNUM    DC    C'123456'           SERIAL NUMBER                   A.T.\nBCORE    DC    X'402020202120'     STORAGE AMOUNT                  A.T.\n         DC    C'M'\nBESTORPL EQU   *,1                 PUT A PLUS HERE AFTER THE EDIT\nBESTOR   DC    X'4020202120'\n         DC    C'M SYSRES='                                        A.T.\nBIPLV    DC    C'RESPAK'                                           A.T.\n         DC    C'. TODAY IS YY.DDD'                                A.T.\n         ORG   *-7                                                 A.T.\nBDATE    DC    X'4021204B202020'   ' YY.DDD'                       A.T.\nBUFEND   EQU   *\nDWD      DS    D\nDWD2     DS    D\nVMBUFF   DS    0D\nHPID     DS    CL8                 SYSTEM NAME\n         DS    XL3                 RESERVED\nIPUVC    DS    XL1                 CPU VERS. CODE (1ST BYTE COP STIDP)\nMMCEL    DS    XL2                 370 GUESTS: MAX MCEL LENGTH\n*                                  XA GUESTS: RESERVED\nIPUAD    DS    XL2                 INSTR PROC UNIT\nUSID     DS    CL8                 VM USERID\nPPFLG    DS    XL8                 PROG PROD BIT MAP\nTIMEZONE DS    XL4                 TIME ZONE DIFFERENTIAL (IN SECONDS)\nLVL      DS    XL1                 RELEASE NUMBER\nVC       DS    XL1                 VERSION NUMBER\nMCEL     DS    XL2                 PLC TAPE NUMBER (MVS PUT EQUIV.)\nVMBUFFLN EQU   *-VMBUFF\nWORK     DS    CL7                                                 A.T.\nVMRDW    DC    Y(VMLINEND-VMRDW,0)\nVMLINE   DC    C'IPLED UNDER '\nVMSYS    DC    CL8'VM/XA/SP'\n         DC    C' VERSION '\nVMLVL    DC    X'40202120'\n         DC    C'.'\nVMVERS   DC    X'F0202120'\n         DC    C' AT TAPE#'\nVMPUT    DC    X'402020202120'\n         DC    C'.  VM USERID='\nVMID     DC    CL8'VMID'\nVMLINEND EQU   *\n         SPACE\n         EJECT\n         CVT   DSECT=YES,PREFIX=YES\n         EJECT\n         PRINT NOGEN\n         IEFUCBOB\n         IHAPCCA\n         IHAPSA\n         IARRCE\n         SPACE 2\n         IKJCPPL ,                                                 TSO\n         SPACE 5                                                   TSO\n         IKJIOPL ,                                                 TSO\nIOPLLEN  EQU   *-IOPL                                              TSO\n         END   SYSMVS\n", "mimetype": "text/plain", "datatype": "ebcdic", "extension": ".txt"}, "TABLE": {"ttr": 780, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\x00\\x1f\\x00\\x89\\x00\\x1f\\x12\\x00\\x00\\t\\x00\\t\\x00\\x00\\xd3\\xc1\\xe2\\xe3\\xe5\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-01-01T00:00:00", "modifydate": "1989-01-01T12:00:00", "lines": 9, "newlines": 9, "modlines": 0, "user": "LASTVER"}, "text": "         MACRO\n&LABEL   TABLE\n         LCLA  &A\n&LABEL   DS    0CL256\n.LOOP    ANOP\n         DC    AL1(&A,&A.+1,&A.+2,&A.+3,&A.+4,&A.+5,&A.+6,&A.+7)\n&A       SETA  &A+8\n         AIF   (&A LE 255).LOOP\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}, "TERME": {"ttr": 782, "alias": false, "halfwords": 30, "notes": 0, "parms": "b'\\x01\\x00\\x00\\x00\\x00\\x89\\x00\\x1f\\x00\\x89\\x00\\x1f\\x12\\x00\\x00\\x0f\\x00\\x0f\\x00\\x00\\xd3\\xc1\\xe2\\xe3\\xe5\\xc5\\xd9@@@'", "ispf": {"version": "01.00", "flags": 0, "createdate": "1989-01-01T00:00:00", "modifydate": "1989-01-01T12:00:00", "lines": 15, "newlines": 15, "modlines": 0, "user": "LASTVER"}, "text": "         MACRO\n&NAME    TERME    &RC=(15)\n         GBLA  &SAVESIZE\n         GBLB  &FREESAVE\n         GBLC  &R\n&NAME    DS    0H\n         L     &R.13,4(&R.13)          GET HIGHER SAVE POINTER\n         AIF   (NOT &FREESAVE).RETURN\n         L     &R.1,8(&R.13)           LOAD ADDRESS OF AREA\n         LR    &R.2,&R.15              TEMPORARY SAVE OF REG. 15\n         FREEMAIN R,LV=&SAVESIZE,A=(1)\n         LR    &R.15,&R.2              RESTORE REG 15\n.RETURN  ANOP\n         RETURN (14,12),RC=&RC         RETURN TO CALLING MODULE\n         MEND\n", "mimetype": "text/plain", "datatype": "iso-8859-1", "extension": ".txt"}}}}, "SCRIPTOPTIONS": {"filename": "./CBT138/FILE138.XMI", "LRECL": 80, "loglevel": 30, "outputfolder": "CBT138", "encoding": "cp1140", "unnum": true, "quiet": false, "force": false, "binary": false, "modifydate": true}}