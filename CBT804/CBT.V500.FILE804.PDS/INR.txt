         MACRO
&NAME    INR   &WALEN=,&AMODE=31,&RMODE=ANY,&OPSYN=NO
.**********************************************************************
.*
.*  THIS MACRO GENERATES STANDARD REENTRANT ENTRY CODE USING
.*  RELATIVE ADDRESSING (NO CODE BASE REG)  (USE WITH "OUTR" MACRO)
.*
.*    WALEN= LENGTH OF STORAGE AREA (BYTES).  R13 WILL POINT TO
.*           THIS AREA, AND THE 1ST 72 BYTES WILL BE USED AS A
.*           STANDARD SAVE AREA.  THE REST IS YOUR DYNAMIC STORAGE
.*           AREA, SO YOU DON'T HAVE TO DO A SEPARATE GETMAIN IF
.*           YOU DON'T WANT TO.
.*    AMODE= AMODE OF THE PROGRAM
.*    RMODE= RMODE OF THE PROGRAM
.*    OPSYN= YES OR NO.  YES WILL INCLUDE THE BR2JMP MACRO TO
.*           "OPSYN" NON-RELATIVE INSTRUCTIONS TO THEIR RELATIVE
.*           COUNTERPARTS.  NO IS THE DEFAULT.
.*
.**********************************************************************
         GBLC  &LGETLEN
         LCLC  &PGMNAME,&INR0,&INR1,&INR2
&PGMNAME SETC  'MAIN'           DEFAULT NAME
&LGETLEN SETC  '72'             DEFAULT GETMAIN SIZE
.*
.* CHECK THE LABEL FOR PROGRAM NAME
.*
         AIF   ('&NAME' EQ '').NAMEBAD
&PGMNAME SETC  '&NAME'
         AGO   .NAMEOK
.NAMEBAD ANOP
         MNOTE 4,'PROGRAM NAME NOT SPECIFIED.  DEFAULTING TO MAIN'
.NAMEOK  ANOP
.*
.* CHECK THE WALEN. DEFAULT TO 72
.*
         AIF   ('&WALEN' EQ '').WALENOK NOT SPECIFIED, USE DEFAULT
&LGETLEN SETC  '&WALEN'
.WALENOK ANOP
.*
.* EDIT AMODE AND RMODE PARAMETERS
.*
         AIF   (('&AMODE' NE '24') AND ('&AMODE' NE '31') AND          X
               ('&AMODE' NE 'ANY')).AMERR
         AIF   (('&RMODE' NE '24') AND ('&RMODE' NE 'ANY')).RMERR
.DOIT    ANOP
&INR0    SETC  'INR0&SYSNDX'
&INR1    SETC  'INR1&SYSNDX'
&INR2    SETC  'INR2&SYSNDX'
&PGMNAME CSECT                   SET CSECT NAME
         ENTRY &PGMNAME          ENTRY POINT NAME
&PGMNAME AMODE &AMODE            SET AMODE
&PGMNAME RMODE &RMODE            SET RMODE
         J     &INR0             JUMP AROUND HEADER INFO
         ASMINFO
&INR0    DS    0H
         SAVE  (14,12)           SAVE CALLERS REGS
         LARL  R8,&INR1          ADDRESS LOCAL LITERAL POOL
         USING &INR1,R8
         STORAGE OBTAIN,LENGTH=&LGETLEN GET STORAGE AREA
         XC    0(4,R1),0(R1)     ZERO FIRST WORD
         ST    R13,4(R1)         PRIOR SAVEAREA ADDRESS TO MINE
         ST    R1,8(R13)         MY SAVEAREA ADDRESS TO HIS
         LR    R2,R13            KEEP OLD SAVE AREA FOR LATER RESTORE
         LR    R13,R1            THIS IS MY SAVEAREA
         LA    R4,12(,R13)       POINT PAST THE CHAIN
         L     R5,=A(&LGETLEN)
         LA    R6,12             SIZE - CHAIN AREA (12 BYTES) ...
         SR    R5,R6             ...GIVES THE AMOUNT TO CLEAR
         SR    R7,R7             CLEAR THE FROM COUNT AND CLEAR BYTE
         MVCL  R4,R6             WHEE, CLEAR IT OUT
         LM    R14,R8,12(R2)     RESTORE THE ORIGINAL REGISTERS
         DROP  R8
         J     &INR2             JUMP AROUND LITERAL POOL
&INR1    DS    0H
         LTORG
.*
.* IF THEY SAID OPSYN=YES, GENERATE OPSYN INSTRUCTIONS TO CHANGE
.* BRANCH-TYPE INSTRUCTIONS TO RELATIVE JUMPS
.*
         AIF   ('&OPSYN' NE 'YES').NOPSYN
         BR2JMP
.NOPSYN  ANOP
&INR2    DS    0H                START OF USER CODE
         MEXIT
.AMERR   MNOTE 8,'AMODE MUST BE 24, 31, OR ANY'
         MEXIT
.RMERR   MNOTE 8,'RMODE MUST BE 24 OR ANY'
         MEXIT
         MEND
