 /*                                                                rexx
   Locate member dialog
 */
 parse value '1000 0 0 0' with $maxmatch _maxrc _istso _isispf dsninfo.
 parse source . . $me .

 Address IspExec
 "Control errors return"

 /* determine if called as command handler */
 arg p1,pid,pcmd,ptable,ptext
 if p1 pcmd='XISPTBL CMD' then Exit PCmdX()
 if p1 pcmd='XISPTBL SEL' then Exit LCmdX()

 arg p
 parse value ' 'p  with p1 'DSNDD('dsndd')' p2
 parse value p1 p2 with p1 'MBRDD('mbrdd')' p2
 parse value p1 p2 with p1 'NAME('fmmember')' p2
 parse value p1 p2 with p1 'TEST('test')' p2
 if p1 p2<>'' then exit xmsg('Invalid parm:' space(p1 p2))
 if test='Y' & fmmember='' then exit xmsg('Name is required for test',8)
 if test='Y' then say 'Looking for' fmmember

 dsndd=word(dsndd 'WFMDSN',1)
 mbrdd=word(mbrdd 'WFMMBR',1)
 $table='T'right(space(translate(time('l'),' ',':.'),0),7,0)

 /* display if testing */
 if test='Y' then do
   Call MakeList
   "tbquery" $table "rownum(rown)"
   "tbtop"   $table
   do rown
     "tbskip"  $table
     say mbrname fmtext dsname dsnvol
   end
   Call Close 0
 end

 /* dialog */
 if fmmember<>'' then Call MakeList
 else Call CreateTbl
 Do forever
   "vput fmmember" shared
   cc=XISPTBL('table('$table') panel(wfmdiapl) width(80)',
             'proc('$me') id('$pid') sel(b bd e ed v vd se sed i p)',
             'sort(mbrname dsnname dsnvol) icmd(sort)',
             'retcmd(newmem)')
   if cc>8 then call close 8 'Display rc' rc
   if cc=8 then call close 0
   if cc=0 then call close 0
   if cc = '' then iterate
   if cc ='EXIT' then call close 0
   parse var cc cverb ctext
   if cverb ='NEWMEM' then do
     fmmember = ctext
     if fmmember<>'' then call MakeList
   end
   else say 'Invalid command:' pcmd
 end
 Call Close 0

 /*- Line command handlers -*/
LCmdX:
 "tbget" ptable
 err=''
 if zsel='S' & dsnrecfm<>'U' then zsel='E'
 $sel=dsndsorg''zsel
 Select
   when zsel =''    then nop
   when zsel ='B'   then call Accds 'Browse',dsnname,dsnvol,mbrname
   when zsel ='BD'  then call Accds 'Browse',dsnname,dsnvol
   when zsel ='E'   then call Accds 'Edit',dsnname,dsnvol,mbrname
   when zsel ='ED'  then call Accds 'Edit',dsnname,dsnvol
   when zsel ='V'   then call Accds 'View',dsnname,dsnvol,mbrname
   when zsel ='VD'  then call Accds 'View',dsnname,dsnvol
   when $sel ='SE'  then call Accds 'Edit',dsnname,dsnvol,mbrname
   when $sel ='SED' then call Accds 'Edit',dsnname,dsnvol
   when zsel ='I'   then Call ShowInfo
   when zsel ='P'   then Address TSO "PdsX '"dsnname"' vol("dsnvol") ml :"
   otherwise do
     call Ispmsg 'Invalid selection:' zsel
     zsel='?'zsel
   end
 end
 if left(zsel,1)<>'?' then zsel=''
 "tbput" ptable
 exit 0

 /*- Primary command handlers -*/
PCmdX:
 say 'Invalid command:' ptext
 exit 0

Close:
 trace off
 parse arg _rc _msg
 zz=outtrap('zz.')
 "tbend" $table
 Address TSO "delstack"
 cc=Bpxwdyn('free dd(mbrdb)')  /* just in case */
 zz=outtrap('off')
 if _msg<>'' then say _msg
 Exit word(_rc 0,1)

 /*--------------------------------------------------------------------
                          Build memberlist
 --------------------------------------------------------------------*/
CreateTbl:
 trace off
 "tbend" $table
 "tbcreate" $table "names(mbrname mbruser mbrcredt mbrupddt mbrsize",
                   "mbrisize mbraliof mbrssi",
                   "dsnname dsnvol dsntype dsndsorg dsnrecfm dsnlrecl",
                   "dsnblksz dsncat zsel)"
 if rc<>0 then call close 8 'Could not create results table rc' rc
 added=0
 drop mbrl.
 return 0

MakeList:
 trace off
 Call CreateTbl

 if pos('*',fmmember)>0 & length(fmmember)<4 then,
     return ispmsg('*member must be at least 3 wide plus *')

/* mbr db entry sample
1       10        20        30        40        50        60
K---+----+----+----K----+----+----+----+----+----+----+----+--
$$$$READ163124691489 SYSXU1 CBT422;99/11/18;99/11/1816:27;01.00;0;10;10;;;
*/

/* dsn db entry sample
1       10        20        30        40        50        60        70        80
K---+----+-K--+----+----+----+----+----+----+----+----+----+----+----+----+----+
163124686601 SYSXB1 WJ.ZB.FILE.D140331.T1921465 PE FB 80 0 1631 Y
*/
 Select
   when left(fmmember,1)='*' & verify(substr(fmmember,2),'*%','m')=0 then,
     p='text('strip(strip(fmmember),'l','*')') pos(1) endpos(8)'
   when right(fmmember,1)='*' & verify(fmmember,'*%','m')=length(fmmember),
     then p='key('strip(fmmember,'t','*')')'
   when verify(fmmember,'*%','m')>1 then do
     n=verify(fmmember,'*%','m')
     m=fmmember
   /*if right(m,1)<>'*' then,
       if length(m)<8 then m=m'\*'*/
     p='key('left(fmmember,n-1)') mask('m') pos(1) endpos(8)'
   end
   when verify(fmmember,'*%','m')>0 then,
     p='mask('fmmember') pos(1) endpos(8)'
   when right(fmmember,1)='*' then p='key('strip(fmmember,'t','*')')'
   otherwise                       p='key('left(fmmember,8,'\')')'
 End
 cc=RxVsamBa('get dd('mbrdd') stem(mbrl.)' p)
 if cc>0 | mbrl.0=0 then do
   if cc<>0 then call ispmsg 'Member(s) not found'
 /*if cc>4 then say 'get member' val 'by' act 'cc' cc rxvsbaem */
   drop mbrl. dsnl.
   return 0
 end

 /* get dataset info */
 drop did. dsl.
 n=0
 do mbrli=1 to mbrl.0
   dk=substr(mbrl.mbrli,9,12)
   if dsninfo.dk='' then parse value n+1 dk with n did.n
 end

 /* new datasetlist is used for just one pass through the dsndb */
 if n>0 then do
   did.0=n
   cc=RxVsamBa('get dd('dsndd') keystem(did.) stem(dsl.)')
   if datatype(dsl.0)<>'NUM' then dsl.0=0
   do i=1 to dsl.0
     parse var dsl.i key vol dsn dsorg recfm
     dsninfo.key=space(subword(dsl.i,2))
   end
 end
 drop did. dsl.

 /* table record layouts
 dsn  key vol dsn type dsorg recfm lrecl cat
 mbr  name||key||user;created;updated;vermod;mod;size;init;,
               ssi;attr;aliasof
 */
 zsel=''
 do mbrli=1 to mbrl.0
   parse var mbrl.mbrli mbrname +8 key +12 mbruser,
             ';'mbrcredt';'mbrupddt';'.';'.';'mbrsize';'mbrisize,
             ';'mbrssi';'mbrattr';'mbraliof
   parse var dsninfo.key dsnvol dsnname dsndsorg dsnrecfm,
             dsnlrecl dsnblksz dsncat .
   mbrupddt=word(mbrupddt mbrcredt,1)
   if mbrupddt<>'' then do
     parse var mbrcredt y'/'m'/'d
     if y<50 then mbrcredt='20'y''m''d
     else         mbrcredt='19'y''m''d
     parse var mbrupddt d +8 t
     parse var d y'/'m'/'d
     if y<50 then mbrupddt='20'y''m''d t
     else         mbrupddt='19'y''m''d t
   end
   mbrname=translate(mbrname,' ','\')
   address ispexec "tbadd" $table
   added=added+1
 end
 return 0

 /*--------------------------------------------------------------------
                      show member info screen
 --------------------------------------------------------------------*/
ShowInfo:
 do forever
   "display panel(WFMDIAPI)"
   cc=rc
   if cc=8 then leave
   if cc>0 then call close 8 'Info display rc' cc
 end
 return 0

Warning:
 fmwarn1=arg(1)
 fmwarn2=arg(2)
 fmwarn3=arg(3)
 fmwarn4=arg(4)
 "display panel(WFMDIAPM)"
 return rc

XTSO: zz=outtrap(word(arg(2) '$.',1))
        address tso arg(1);zz=outtrap('off');return rc

XMsg: if arg(1)<>'' then say arg(1);return word(arg(2) 0,1)

ISPMSG:
 parse arg zedlmsg
 address ispexec"setmsg msg(isrz000)"
 return 0

AccDs: procedure /* what,dsn,vol,mbr */
 arg what .,dsn .,vol .,mbr .
 if mbr<>'' then dsn=dsn'('mbr')'         /* member */
 call ispmsg what "dataset('"dsn"') volume("vol")"
 address ispexec "vput zedlmsg"
 ""what "dataset('"dsn"') volume("vol")"
 return rc
