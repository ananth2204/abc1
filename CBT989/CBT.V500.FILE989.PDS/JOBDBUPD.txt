//WFM4DBU  JOB (1),'WFM4UPD-set-catinf',CLASS=A,
//  COND=(0,LT),REGION=64M
//*
//* Ad-hoc update DSN db
//* -  set blksize
//* -  set catalog indicator
//*
//   SET     WFMLIB=WFM.WFM4.LIB
//   JCLLIB  ORDER=&WFMLIB
//   INCLUDE MEMBER=WFMSET
//*
//   EXEC RXINSTRM
//DSNDB   DD DISP=OLD,DSN=Z.WFM4.DSN    <<-- dsn db
//REXX    DD *

 call xmsg 'Update dsn db started'
 cc=RxVsamBa('get dd(dsndb) stem(dsn.)')
 if cc<>0 then exit xmsg('read db rc' cc,8)
 call xmsg dsn.0 +0 'records read'

 updn=0
 Do dsnn=1 to dsn.0
 /*if words(dsn.dsnn)<>6 then iterate */
   parse var dsn.dsnn key vol dsn dso recfm lrecl cat .
   dsn.dsnn=key vol dsn dso recfm lrecl GetBlkSz(dsn,vol),
            CatInd(dsn,vol)
   say left(dsnn,6) dsn.dsnn
   updn=updn+1
 End
 call xmsg updn 'records updated'

 cc=RxVsamBa('put dd(dsndb) stem(dsn.)')
 if cc<>0 then exit xmsg('write db rc' cc,8)
 exit xmsg('db updated')

XMsg: if arg(1)<>'' then say time() arg(1);return word(arg(2) 0,1)
 /* cataloged info */
CatInd: Procedure
 iscat='N'
 cc=XTSO("listc ent('"arg(1)"') volume")
 if cc=0 then do
   n=$.0
   cvol = right(word($.n,1),6)
   if cvol=arg(2) then iscat='Y'
 end
 return iscat
GetBlkSz: procedure
 if listdsi("'"arg(1)"' volume("arg(2)")")=0 then return sysblksize
 return '??'
XTso: trace off; zz=outtrap(word(arg(2) '$.',1))
        address tso arg(1);zz=outtrap('off');xtsorc=rc;return rc
