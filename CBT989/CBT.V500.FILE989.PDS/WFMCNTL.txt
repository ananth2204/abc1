 /*                                                                      rexx
  Subroutine - read CNTL file, make parsable
  Parameters:
    DD(ddname)            libref for data file
    ALIAS(alias-list)     keyword alias list
    VAL(valid-list)       list of valid keywords
    REQ(reqd-list)        list of required keywords
 */
 arg p
 parse var p . 'DD('dd')' .    0 . 'ALIAS('alias')' .,
           0 . 'VAL('vall')' . 0 . 'REQ('reql')' .
 dd=word(dd 'CNTL',1)

 "execio * diskr" dd "(stem ctl. finis)"
 if rc<>0 then exit 'ERR('rc')'

 ctl=''
 do n=1 to ctl.0
   if left(ctl.n,1)='*' then iterate
   ctl=ctl space(ctl.n)
 end

 /* drop blanks before '(' and ')' i.e. VOL ( list )  -> VOL(list) */
 ctl=translate(space(ctl))
 do while pos(' (',ctl)>0
   ctl=delstr(ctl,pos(' (',ctl),1)
 end
 do while pos('( ',ctl)>0
   ctl=delstr(ctl,pos('( ',ctl)+1,1)
 end
 do while pos(' )',ctl)>0
   ctl=delstr(ctl,pos(' )',ctl),1)
 end

 /* handle cmd alias, i.e.
   alias='EXC EXCLUDE INC INCLUDE'
   ctl='EXC(lst)' -> ctl='EXCLUDE(lst)'
 */
 do an=1 to words(alias) by 2
   p=pos(word(alias,an)'(',translate(ctl))+1
   if p=1 then iterate
   parse value ' 'ctl with s1 =(p) . '(' s2
   ctl=space(s1 word(alias,an+1)'('s2)
 end

 /* test valid */
 if vall<>'' then do
   s=ctl
   do while s<>''
     parse value strip(s) with k'(' . ')' s
     if wordpos(k,vall)=0 then exit 'ERR('k 'not valid)'
   end
 end

 /* test required */
 if reql<>'' then do
   s=ctl
   do while s<>''
     parse value strip(s) with k'(' . ')' s
     if wordpos(k,reql)>0 then reql=delword(reql,wordpos(k,reql),1)
   end
   if reql<>'' then exit 'ERR(Missing verbs(s)' reql')'
 end

 exit ctl
