/*                                                                        rexx
 VSEL - Include / Exclude disks in list
 Input dataset LISTIN layout:
  1-6  volser
  7-*  rest
*/

 arg p
 parse var p . 'MSGLVL('$msglvl')' .
 $msglvl=word($msglvl 0,1)

 parse value '0 0 0' with pass incl. excl. ctl list

 /* read control list, pull include and exclude lists */
 parse upper value WFMCNTL('alias(inc include exc exclude)'),
   with . 'INCLUDE(' incp ')' . 0 . 'EXCLUDE(' excp ')' .
 if $msglvl>0 then say 'Incl:' incp
 if $msglvl>0 then say 'Excl:' excp

 hasincl=(length(incp)>0)
 do n=1 to words(incp)
   v=word(incp,n)
   incl.v=1
 end

 hasexcl=(length(excp)>0)
 do n=1 to words(excp)
   v=word(excp,n)
   excl.v=1
 end
 drop incp excp

 /* read volume list, do filter */
 "Execio * diskr listin (stem lst. finis)"
 say 'List records read:' lst.0

 /* filter list */
 do n=1 to lst.0
   parse value left(lst.n,6) with vl6 +6 . 1 vl5 +5 . 1 vl4 +4 . 1 vl3 +3 .,
             1 vl2 +2 . 1 vl1 +1 .
   ok=1
   if hasexcl then Select
     when excl.vl6 then ok=0
     when excl.vl5 then ok=0
     when excl.vl4 then ok=0
     when excl.vl3 then ok=0
     when excl.vl2 then ok=0
     when excl.vl1 then ok=0
     otherwise nop /* say 'passed excl test' */
   End
   if hasincl then Select
     when incl.vl6 then nop
     when incl.vl5 then nop
     when incl.vl4 then nop
     when incl.vl3 then nop
     when incl.vl2 then nop
     when incl.vl1 then nop
     otherwise ok=0
   End
   if ok then do
     pass=pass+1
     out.pass=lst.n
     p='passed'
   end
   else p='dropped'
   if $msglvl>0 then say vl6 p
 end
 say 'List records passed:' pass

 /* update */
 "Execio" pass "diskw listout (stem out. finis)"
 exit xmsg('All done')

XMsg: if arg(1)<>'' then say arg(1);return word(arg(2) 0,1)
