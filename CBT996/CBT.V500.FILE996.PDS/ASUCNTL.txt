./ ADD NAME=$$LIB    0101-19004-19004-0952-00001-00001-00000-APLKS   12
     USERID().ASUTIL.CNTL
./ ADD NAME=ASMBCL   0145-17081-18186-1608-00092-00092-00000-APLKS   23
//APLKS    JOB ,'A/L BATCH PGM',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* CHANGE '%mbr' 'XXXXXXXX' ALL
//* SET VARIABLE NAMES
//  SET SRCMBR=%mbr
//  SET SRCLIB=APLKS.ASUTIL.ASM
//  SET SRCDSN=&SRCLIB(&SRCMBR)
//  SET LNKMBR=&SRCMBR
//  SET LNKLIB=APLKS.ASUTIL.LOADLIB
//  SET LOADLIB=APLKS.ASUTIL.LOADLIB
//  SET WORK=SYSDA
//*
//ASMBLR   PROC ASMPGM=ASMA90,
//             ASMPARM='NODECK,OBJECT',
//             OUTC=*,
//             WORK=SYSDA
//*        DECK - OUTPUT SYSPUNCH
//*        OBJECT - OUTPUT SYSLIN
//*
//ASM      EXEC PGM=&ASMPGM,PARM='&ASMPARM'
//SYSIN    DD  DUMMY          /*SOURCE INPUT*/
//SYSPRINT DD  SYSOUT=&OUTC
//SYSLIB   DD  DUMMY          /*COPYLIB/MACLIB INPUT*/
//SYSPUNCH DD  DUMMY          /*CARD DECK OUTPUT*/
//SYSLIN   DD  DUMMY          /*OUTPUT FILE*/
//SYSADATA DD  DUMMY          /*ASSOCIATED DATA OUTPUT LRECL=1020*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT2   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT3   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//         PEND  END OF PROC ASMBLR
//*
//BINDER   PROC LNKPGM=IEWBLINK,
//             LNKPARM='MAP',
//             LNKLIB=,
//             LNKMBR=,
//             OUTC=*,
//             WORK=SYSDA
//*
//* DEFAULT    LNKPARM='CALL,LET,LIST,NOMAP,RES,NOREUS,NOXREF'
//*
//LNK      EXEC PGM=&LNKPGM,PARM='&LNKPARM'
//IEWPARMS DD  DUMMY           /*INPUT BINDER OPTS*/
//OBJLIB   DD  DUMMY           /*INPUT INCLUDE FILE*/
//SYSLIN   DD  DUMMY           /*INPUT FILE*/
//SYSPRINT DD  SYSOUT=&OUTC
//SYSLIB   DD  DUMMY           /*EXTERNAL REF INPUT*/
//SYSLMOD  DD  DISP=SHR,DSNAME=&LNKLIB(&LNKMBR)   /*CATALOG TO LIB*/
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//         PEND  END OF PROC BINDER
//*
//* RUN ASSEMBLER TO CREATE OBJECT
//STEP040  EXEC ASMBLR  ,PARM=(MAP,SYSPARM(LBLTRCE))
//ASM.SYSIN  DD  DISP=SHR,DSN=&SRCDSN
//ASM.SYSLIB DD  DISP=SHR,DSN=&SRCLIB
//           DD  DISP=SHR,DSN=SYS1.MACLIB
//           DD  DISP=SHR,DSN=SYS1.MODGEN
//           DD  DISP=SHR,DSN=CEE.SCEEMAC
//           DD  DISP=SHR,DSN=CEE.SCEESAMP
//           DD  DISP=SHR,DSN=SYS1.SHASMAC
//ASM.SYSLIN DD  DSN=&&LOADSET,    /*OUTPUT FILE*/
//             UNIT=&WORK,SPACE=(4000,(100,100)),
//             DISP=(,PASS)
//*
//* COPY PARM STMT TO SYSUT2
//STEP050  EXEC PGM=ASUP2DSB,
//  PARM=('\','    NAME &LNKMBR(R) \')
//STEPLIB  DD  DISP=SHR,DSN=&LOADLIB
//SYSUT2   DD  DSN=&&CTLCRD,
//             UNIT=&WORK,SPACE=(TRK,(01),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//             DISP=(NEW,PASS,DELETE)
//SYSOUT   DD  SYSOUT=*
//*
//  IF (STEP040.ASM.RC LT 8) THEN
//* LNK/BIND OBJECT(S)
//STEP060  EXEC BINDER,
//             LNKPARM='MAP',
//             LNKLIB=&LNKLIB,
//             LNKMBR=&LNKMBR
//LNK.IEWPARMS DD  DUMMY
//LNK.SYSLIN DD  DISP=(OLD,PASS),DSN=&&LOADSET
//           DD  DISP=(OLD,PASS),DSN=&&CTLCRD
/*
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//  ENDIF /*end of IF for STEP060*/
//*
//
./ ADD NAME=ASMPKG   0132-17017-19325-1546-00127-00081-00000-APLKS   29
//APLKS    JOB ,'A/L STRING PACKAGE',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET VARIABLE NAMES
//  SET SRCLIB=APLKS.ASUTIL.ASM
//  SET OBJLIB=APLKS.ASUTIL.OBJ1LIB
//  SET LNKLIB=APLKS.ASUTIL.LOADLIB
//  SET WORK=SYSDA
//*
//ASMBLR   PROC ASMPGM=ASMA90,
//             ASMPARM='DECK,NOOBJECT,SYSPARM(PKG)',
//             SRCLIB=&SRCLIB,
//             SRCMBR=,
//             OUTC=*,
//             WORK=SYSDA
//*        DECK - OUTPUT SYSPUNCH
//*        OBJECT - OUTPUT SYSLIN
//*
//ASM      EXEC PGM=&ASMPGM,PARM='&ASMPARM'
//SYSIN    DD  DISP=SHR,DSN=&SRCLIB(&SRCMBR) /*SOURCE INPUT*/
//SYSLIB   DD  DISP=SHR,DSN=&SRCLIB     /*COPYLIB/MACLIB INPUT*/
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=CEE.SCEEMAC
//         DD  DISP=SHR,DSN=CEE.SCEESAMP
//         DD  DISP=SHR,DSN=SYS1.SHASMAC
//*
//SYSPUNCH DD  DISP=SHR,DSN=&OBJLIB(&SRCMBR) /*OBJ DECK OUT*/
//SYSLIN   DD  DUMMY          /*OUTPUT FILE*/
//SYSADATA DD  DUMMY          /*ASSOCIATED DATA OUTPUT LRECL=1020*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT2   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT3   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//         PEND  END OF PROC ASMBLR
//*
//BINDER   PROC LNKPGM=IEWBLINK,
//             LNKPARM='MAP',
//             LNKLIB=&LNKLIB,
//             OUTC=*,
//             WORK=SYSDA
//*
//* DEFAULT    LNKPARM='CALL,LET,LIST,NOMAP,RES,NOREUS,NOXREF'
//*
//LNK      EXEC PGM=&LNKPGM,PARM='&LNKPARM'
//IEWPARMS DD  DUMMY          /*INPUT BINDER OPTS*/
//SYSLIN   DD  DUMMY          /*INPUT FILE*/
//OBJLIB   DD  DUMMY          /*INPUT INCLUDE FILE*/
//SYSLIB   DD  DUMMY          /*EXTERNAL REF INPUT*/
//*
//SYSLMOD  DD  DISP=SHR,DSN=&LNKLIB     /*CATALOG TO LIB*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//         PEND  END OF PROC BINDER
//*
//* ALLOCATE OBJECT DATASET FOR ASSEMBLY OUTPUT
//STEP010  EXEC PGM=IEFBR14
//OFILE01  DD  DSN=&OBJLIB,
//             UNIT=&WORK,SPACE=(CYL,(5,5,30)),
//             DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3200),
//             DISP=(NEW,CATLG,DELETE)
//*
//* ASSEMBLE ALL MODULES
//APND     EXEC ASMBLR,SRCMBR=ASUDAPND  STRING APPEND
//BMPOS    EXEC ASMBLR,SRCMBR=ASUDBPOS  STRING 1ST POS BOYER-MOORE
//CNTR     EXEC ASMBLR,SRCMBR=ASUDCNTR  STRING CENTER
//DEDT     EXEC ASMBLR,SRCMBR=ASUDDEDT  STRING DE-EDIT
//FPOS     EXEC ASMBLR,SRCMBR=ASUDFPOS  STRING 1ST POS
//HHEX     EXEC ASMBLR,SRCMBR=ASUDHHEX  STRING HORIZONTAL|DUMP HEX
//LEFT     EXEC ASMBLR,SRCMBR=ASUDLEFT  STRING LEFT JUSTIFY
//LPOS     EXEC ASMBLR,SRCMBR=ASUDLPOS  STRING LAST POS
//RGHT     EXEC ASMBLR,SRCMBR=ASUDRGHT  STRING RIGHT JUSTIFY
//SCNT     EXEC ASMBLR,SRCMBR=ASUDSCNT  STRING COUNT
//SINS     EXEC ASMBLR,SRCMBR=ASUDSINS  STRING INSERT
//SSUB     EXEC ASMBLR,SRCMBR=ASUDSSUB  STRING SUB-STRING
//STRP     EXEC ASMBLR,SRCMBR=ASUDSTRP  STRING STRIP
//VHEX     EXEC ASMBLR,SRCMBR=ASUDVHEX  STRING VERTICAL HEX
//* GROUP ORDER MATTERS (COMPILE ASUDSCNT 1ST)
//JSTF     EXEC ASMBLR,SRCMBR=ASUDJSTF  STRING JUSTIFY
//SPCE     EXEC ASMBLR,SRCMBR=ASUDSPCE  STRING SPACE
//WDEL     EXEC ASMBLR,SRCMBR=ASUDWDEL  STRING WORD DELETE
//WPOS     EXEC ASMBLR,SRCMBR=ASUDWPOS  STRING WORD POS
//* GROUP ORDER MATTERS (COMPILE ASUDBPOS 1ST)
//SDEL     EXEC ASMBLR,SRCMBR=ASUDSDEL  STRING DELETE
//SREP     EXEC ASMBLR,SRCMBR=ASUDSREP  STRING REPLACE
//SVAR     EXEC ASMBLR,SRCMBR=ASUDSVAR  STRING VARIABLE
//* GROUP PACKAGE DRIVER
//CLASS    EXEC ASMBLR,SRCMBR=ASUSSVCB  STRING SERVICE MODULE
//*
//* LNK/BIND OBJECT(S)
//STEP040  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUSSVCB)            STRING SERVICE MODULE
    INCLUDE OBJLIB(ASUDAPND)            STRING APPEND
    INCLUDE OBJLIB(ASUDBPOS)            STRING 1ST POS BOYER-MOORE
    INCLUDE OBJLIB(ASUDCNTR)            STRING CENTER
    INCLUDE OBJLIB(ASUDDEDT)            STRING DE-EDIT
    INCLUDE OBJLIB(ASUDFPOS)            STRING 1ST POS
    INCLUDE OBJLIB(ASUDHHEX)            STRING HORIZONTAL HEX
    INCLUDE OBJLIB(ASUDJSTF)            STRING JUSTIFY
    INCLUDE OBJLIB(ASUDLEFT)            STRING LEFT
    INCLUDE OBJLIB(ASUDLPOS)            STRING LAST POS
    INCLUDE OBJLIB(ASUDRGHT)            STRING RIGHT JUSTIFY
    INCLUDE OBJLIB(ASUDSCNT)            STRING COUNT
    INCLUDE OBJLIB(ASUDSDEL)            STRING DELETE
    INCLUDE OBJLIB(ASUDSINS)            STRING INSERT
    INCLUDE OBJLIB(ASUDSPCE)            STRING SPACE
    INCLUDE OBJLIB(ASUDSREP)            STRING REPLACE
    INCLUDE OBJLIB(ASUDSSUB)            STRING SUB-STRING
    INCLUDE OBJLIB(ASUDSTRP)            STRING STRIP
    INCLUDE OBJLIB(ASUDSVAR)            STRING VARIABLE
    INCLUDE OBJLIB(ASUDVHEX)            STRING VERTICAL HEX
    INCLUDE OBJLIB(ASUDWDEL)            STRING WORD DELETE
    INCLUDE OBJLIB(ASUDWPOS)            STRING WORD POS
*   SETSSI CB@@@###
    NAME ASUSSVCB(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//
./ ADD NAME=ASMSTR   0104-19325-19325-1710-00303-00282-00000-APLKS   08
//APLKS    JOB ,'A/L STRING PGMS',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET VARIABLE NAMES
//  SET SRCLIB=APLKS.ASUTIL.ASM
//  SET OBJLIB=APLKS.ASUTIL.OBJ2LIB
//  SET LNKLIB=APLKS.ASUTIL.LOADLIB
//  SET WORK=SYSDA
//*
//ASMBLR   PROC ASMPGM=ASMA90,
//             ASMPARM='DECK,NOOBJECT',
//             SRCLIB=&SRCLIB,
//             SRCMBR=,
//             OUTC=*,
//             WORK=SYSDA
//*        DECK - OUTPUT SYSPUNCH
//*        OBJECT - OUTPUT SYSLIN
//*
//ASM      EXEC PGM=&ASMPGM,PARM='&ASMPARM'
//SYSIN    DD  DISP=SHR,DSN=&SRCLIB(&SRCMBR) /*SOURCE INPUT*/
//SYSLIB   DD  DISP=SHR,DSN=&SRCLIB     /*COPYLIB/MACLIB INPUT*/
//         DD  DISP=SHR,DSN=SYS1.MACLIB
//         DD  DISP=SHR,DSN=SYS1.MODGEN
//         DD  DISP=SHR,DSN=CEE.SCEEMAC
//         DD  DISP=SHR,DSN=CEE.SCEESAMP
//         DD  DISP=SHR,DSN=SYS1.SHASMAC
//*
//SYSPUNCH DD  DISP=SHR,DSN=&OBJLIB(&SRCMBR) /*OBJ DECK OUT*/
//SYSLIN   DD  DUMMY          /*OUTPUT FILE*/
//SYSADATA DD  DUMMY          /*ASSOCIATED DATA OUTPUT LRECL=1020*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT2   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//SYSUT3   DD  UNIT=&WORK,SPACE=(4008,(400,400))  /*WORK FILE*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//         PEND  END OF PROC ASMBLR
//*
//BINDER   PROC LNKPGM=IEWBLINK,
//             LNKPARM='MAP',
//             LNKLIB=&LNKLIB,
//             OUTC=*,
//             WORK=SYSDA
//*
//* DEFAULT    LNKPARM='CALL,LET,LIST,NOMAP,RES,NOREUS,NOXREF'
//*
//LNK      EXEC PGM=&LNKPGM,PARM='&LNKPARM'
//IEWPARMS DD  DUMMY          /*INPUT BINDER OPTS*/
//SYSLIN   DD  DUMMY          /*INPUT FILE*/
//OBJLIB   DD  DUMMY          /*INPUT INCLUDE FILE*/
//SYSLIB   DD  DUMMY          /*EXTERNAL REF INPUT*/
//*
//SYSLMOD  DD  DISP=SHR,DSN=&LNKLIB     /*CATALOG TO LIB*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//*
//SYSPRINT DD  SYSOUT=&OUTC
//         PEND  END OF PROC BINDER
//*
//* ALLOCATE OBJECT DATASET FOR ASSEMBLY OUTPUT
//STEP010  EXEC PGM=IEFBR14
//OFILE01  DD  DSN=&OBJLIB,
//             UNIT=&WORK,SPACE=(CYL,(5,5,30)),
//             DCB=(DSORG=PO,RECFM=FB,LRECL=80,BLKSIZE=3200),
//             DISP=(NEW,CATLG,DELETE)
//*
//* ASSEMBLE ALL MODULES
//APND     EXEC ASMBLR,SRCMBR=ASUDAPND  STRING APPEND
//BMPOS    EXEC ASMBLR,SRCMBR=ASUDBPOS  STRING 1ST POS BOYER-MOORE
//CNTR     EXEC ASMBLR,SRCMBR=ASUDCNTR  STRING CENTER
//DEDT     EXEC ASMBLR,SRCMBR=ASUDDEDT  STRING DE-EDIT
//FPOS     EXEC ASMBLR,SRCMBR=ASUDFPOS  STRING 1ST POS
//HHEX     EXEC ASMBLR,SRCMBR=ASUDHHEX  STRING HORIZONTAL|DUMP HEX
//LEFT     EXEC ASMBLR,SRCMBR=ASUDLEFT  STRING LEFT JUSTIFY
//LPOS     EXEC ASMBLR,SRCMBR=ASUDLPOS  STRING LAST POS
//RGHT     EXEC ASMBLR,SRCMBR=ASUDRGHT  STRING RIGHT JUSTIFY
//SCNT     EXEC ASMBLR,SRCMBR=ASUDSCNT  STRING COUNT
//SINS     EXEC ASMBLR,SRCMBR=ASUDSINS  STRING INSERT
//SSUB     EXEC ASMBLR,SRCMBR=ASUDSSUB  STRING SUB-STRING
//STRP     EXEC ASMBLR,SRCMBR=ASUDSTRP  STRING STRIP
//VHEX     EXEC ASMBLR,SRCMBR=ASUDVHEX  STRING VERTICAL HEX
//* GROUP ORDER MATTERS (COMPILE ASUDSCNT 1ST)
//JSTF     EXEC ASMBLR,SRCMBR=ASUDJSTF  STRING JUSTIFY
//SPCE     EXEC ASMBLR,SRCMBR=ASUDSPCE  STRING SPACE
//WDEL     EXEC ASMBLR,SRCMBR=ASUDWDEL  STRING WORD DELETE
//WPOS     EXEC ASMBLR,SRCMBR=ASUDWPOS  STRING WORD POS
//* GROUP ORDER MATTERS (COMPILE ASUDBPOS 1ST)
//SDEL     EXEC ASMBLR,SRCMBR=ASUDSDEL  STRING DELETE
//SREP     EXEC ASMBLR,SRCMBR=ASUDSREP  STRING REPLACE
//SVAR     EXEC ASMBLR,SRCMBR=ASUDSVAR  STRING VARIABLE
//*
//* LNK/BIND OBJECT(S)
//LNKAPND  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDAPND)            STRING APPEND
    NAME ASUDAPND(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKBPOS  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDBPOS)            STRING 1ST POS BOYER-MOORE
    NAME ASUDBPOS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKCNTR  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDCNTR)            STRING CENTER
    NAME ASUDCNTR(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKDEDT  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDDEDT)            STRING DE-EDIT
    NAME ASUDDEDT(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKFPOS  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDFPOS)            STRING 1ST POS
    NAME ASUDFPOS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKHHEX  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDHHEX)            STRING HORIZONTAL HEX
    NAME ASUDHHEX(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKLEFT  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDLEFT)            STRING LEFT
    NAME ASUDLEFT(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKLPOS  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDLPOS)            STRING LAST POS
    NAME ASUDLPOS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKRGHT  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDRGHT)            STRING RIGHT JUSTIFY
    NAME ASUDRGHT(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSCNT  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDSCNT)            STRING COUNT
    NAME ASUDSCNT(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSINS  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDSINS)            STRING INSERT
    NAME ASUDSINS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSSUB  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDSSUB)            STRING SUB-STRING
    NAME ASUDSSUB(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSTRP  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDSTRP)            STRING STRIP
    NAME ASUDSTRP(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKVHEX  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDVHEX)            STRING VERTICAL HEX
    NAME ASUDVHEX(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKJSTF  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDJSTF)            STRING JUSTIFY
    NAME ASUDJSTF(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSPCE  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDSPCE)            STRING SPACE
    NAME ASUDSPCE(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKWDEL  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDWDEL)            STRING WORD DELETE
    NAME ASUDWDEL(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKWPOS  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDWPOS)            STRING WORD POS
    NAME ASUDWPOS(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSDEL  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDSDEL)            STRING DELETE
    NAME ASUDSDEL(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSREP  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDSREP)            STRING REPLACE
    NAME ASUDSREP(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//* LNK/BIND OBJECT(S)
//LNKSVAR  EXEC BINDER
//LNK.SYSLIN DD  *
    INCLUDE OBJLIB(ASUDSVAR)            STRING VARIABLE
    NAME ASUDSVAR(R)
/*
//LNK.OBJLIB DD  DISP=SHR,DSN=&OBJLIB
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//
./ ADD NAME=ASTIVP01 0118-17243-19312-1012-00030-00016-00000-APLKS   08
//APLKST01 JOB ,'LE MSG TEST',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//*
//* Establish LOADLIB search path (place after JCLLIB card)
//JOBLIB   DD  DISP=SHR,DSN=APLKS.ASUTIL.LOADLIB
//*
//* all actions against LE service routines
//STEP020  EXEC PGM=ASTMSG1B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* test assembler macro's
//STEP030  EXEC PGM=ASTMISCB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//
./ ADD NAME=ASTIVP02 0137-15071-19326-1049-00087-00014-00000-APLKS   37
//APLKST02 JOB ,'STRING TEST',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//*
//* Establish LOADLIB search path (place after JCLLIB card)
//JOBLIB   DD  DSN=&LSHLQ..ASUTIL.LOADLIB,DISP=SHR
//*
//* all actions against AS String routines
//STEP020  EXEC PGM=ASTSTR1B ,PARM=PACKAGE
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
005        APPEND
006        CENTER
007        COUNT
008        DE-EDIT
010        JUSTIFY
011        LEFT JUSTIFY
013        RIGHT JUSTIFY
014        SPACE
015        STRING DELETE "GOOD+MEM+" "NOW+IS+" "GOOD..." "GOOD+"
016        FIRST/NEXT POSITION
017        STRIP TRAILING/LEADING/BOTH
018        STRING INSERT
019        LAST/PREV POSITION
020        FIRST/NEXT POSITION BOYER-MOORE method
021        STRING REPLACE
022        SUB-STRING
023        VAR/SCAN
024        VERTICAL HEX
025        WORD DELETE
027        WORD POS
090        NBR TO TEXT ZD
091        NBR TO TEXT PD
092        NBR TO TEXT ED
093        NBR OF
END
/*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* all actions against AS String routines
//STEP030  EXEC PGM=ASTSTR1B,PARM=PACKAGE
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
005        APPEND
006        CENTER
007        COUNT
008        DE-EDIT
010        JUSTIFY
011        LEFT JUSTIFY
013        RIGHT JUSTIFY
014        SPACE
015        STRING DELETE "GOOD+MEM+" "NOW+IS+" "GOOD..." "GOOD+"
016        FIRST/NEXT POSITION
017        STRIP TRAILING/LEADING/BOTH
018        STRING INSERT
019        LAST/PREV POSITION
020        FIRST/NEXT POSITION BOYER-MOORE method
021        STRING REPLACE
022        SUB-STRING
023        VAR/SCAN
024        VERTICAL HEX
025        WORD DELETE
027        WORD POS
090        NBR TO TEXT ZD
091        NBR TO TEXT PD
092        NBR TO TEXT ED
093        NBR OF
END
/*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//
009        EDIT          (not written)
012        LEX           (not written)
024        VHEX
026        WORD FND      (not written)
028        HHEX
./ ADD NAME=ASTIVP03 0112-16012-18186-1608-00027-00035-00000-APLKS   38
//APLKST03 JOB ,'COPY PARM TO SYSUT2',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET FSHLQ=&SYSUID   /*FILE SET HLQ*/
//  SET LSHLQ=&SYSUID   /*LIBRARY SET HLQ*/
//  SET WORK=SYSDA
//*
//STEP010  EXEC PGM=IEFBR14
//OUTDD    DD  DSN=&FSHLQ..ASUP2DSB.SYSUT2,
//             UNIT=&WORK,SPACE=(TRK,(01),RLSE),
//             DCB=(LRECL=80,BLKSIZE=0,RECFM=FB),
//             DISP=(MOD,DELETE)
//*
//* COPY PARM STMT TO SYSUT2
//STEP020  EXEC PGM=ASUP2DSB,
//  PARM=('\','CARD1\','CARD2\','CARD3\','CARD4\','CARD5\',
//        'CARD6\','CARD7\','CARD8\','CARD9\','CARD10\','CARD11\')
//STEPLIB  DD  DISP=SHR,DSN=APLKS.ASUTIL.LOADLIB
//SYSUT2   DD  DSN=&FSHLQ..ASUP2DSB.SYSUT2,
//             UNIT=&WORK,SPACE=(TRK,(01),RLSE),
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0),
//             DISP=(NEW,CATLG,DELETE)
//SYSPRINT DD  SYSOUT=*
//*
//
./ ADD NAME=ASTIVP04 0129-17095-19312-1014-00047-00020-00000-APLKS   36
//APLKST04 JOB ,'TEST ASUBSZAB',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET FSHLQ=&SYSUID   /*FILE SET HLQ*/
//  SET LSHLQ=&SYSUID   /*LIBRARY SET HLQ*/
//* SET INPUT=SYS1.WLM.CDS01  /*AM=QSAM,RECFM=U,LRECL=0,BLKSIZE=0*/
//* SET OUTPUT=&FSHLQ..FANAL.QSAMU.WLMCDS01
//* SET INPUT=SYS1.DAE        /*AM=QSAM,RECFM=FB,LRECL=255*/
//* SET OUTPUT=&FSHLQ..FANAL.QSAMFB.DAE
//* SET INPUT=QFIL.TSBCV.TSLOGT.MERGED  /*AM=VSAM,ORG=ESDS*/
//* SET OUTPUT=&FSHLQ..FANAL.VSAMVB.TSLOGT
//* SET INPUT=QFIL.SAOLV.SAP01     /*AM=VSAM,ORG=KSDS*/
//* SET OUTPUT=&FSHLQ..FANAL.VSAMVB.SAP01
//* SET INPUT=QFIL.SAOLV.SAREP     /*AM=VSAM,ORG=KSDS*/
//* SET OUTPUT=&FSHLQ..FANAL.VSAMVB.SAREP
//  SET WORK=SYSDA
//*
//* Establish LOADLIB search path (place after JCLLIB card)
//JOBLIB   DD  DISP=SHR,DSN=APLKS.ASUTIL.LOADLIB
//*
//* DELETE SEQ data set
//STEP010  EXEC PGM=IEFBR14   DELETE TARGET DATASET(S)
//OUTDD1   DD  DSN=&OUTPUT,
//             UNIT=&WORK,SPACE=(TRK,(1),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(MOD,DELETE,DELETE)
//*
//* test ASUBSZAB ASU3QFAA
//STEP010  EXEC PGM=ASUBSZAB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=&INPUT
//*            DCB=(RECFM=U)
//SYSUT2   DD  DSN=&OUTPUT,
//             UNIT=&WORK,SPACE=(TRK,(1,5),RLSE),
//             DCB=(RECFM=FB,LRECL=32,BLKSIZE=0),
//             DISP=(NEW,CATLG,DELETE)
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//
./ ADD NAME=ASTIVP05 0107-17340-19312-1015-00029-00044-00000-APLKS   13
//APLKST05 JOB ,'TEST ASTQFA1B',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET FSHLQ=&SYSUID   /*FILE SET HLQ*/
//* SET INPUT=NULLFILE
//  SET INPUT=QFIL.SABCS.SAXTR.S41S
//* SET INPUT=QFIL.TSBCV.TSLOGT.MERGED  /*AM=VSAM,ORG=ESDS*/
//* SET INPUT=QFIL.SAOLV.SAP01     /*AM=VSAM,ORG=KSDS*/
//* SET INPUT=QFIL.SAOLV.SAREP     /*AM=VSAM,ORG=KSDS*/
//*
//* Establish LOADLIB search path (place after JCLLIB card)
//JOBLIB   DD  DISP=SHR,DSN=APLKS.ASUTIL.LOADLIB
//*
//* test ASTQFA1B ASU3QFAA    query file attributes
//STEP010  EXEC PGM=ASTQFA1B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSUT1   DD  DISP=SHR,DSN=&INPUT
//*            DCB=(RECFM=U)
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//
./ ADD NAME=ASTIVP06 0114-19245-19312-1015-00031-00031-00000-APLKS   57
//APLKST06 JOB ,'TEST LE DATE',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//*
//* ESTABLISH LOADLIB SEARCH PATH (PLACE AFTER JCLLIB CARD)
//JOBLIB   DD  DSN=&LSHLQ..ASUTIL.LOADLIB,DISP=SHR
//*
//* ALL ACTIONS AGAINST LE CALLABLE SERVICES
//STEP010  EXEC PGM=ASTSVC1B,PARM='HIHOWAREYOU'
//CEEOPTS  DD  *
  ALL31(ON),STACK(,,ANY),TERMTHDACT(UADUMP),ENVAR('TZ=CST6CDT')
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//*
//* ALL ACTIONS AGAINST LE C/C++ FUNCTION CALLABLE SERVICES
//STEP020  EXEC PGM=ASTSVC2B
//CEEOPTS  DD  *
  ALL31(ON),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//SYSIN    DD  *
  CARD 1
   CARD 2
    CARD 3
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//
./ ADD NAME=ASTIVP07 0109-18173-19312-1017-00040-00019-00000-APLKS   21
//APLKST07 JOB ,'TEST HSORT BSRCH',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//*
//* ESTABLISH LOADLIB SEARCH PATH (PLACE AFTER JCLLIB CARD)
//JOBLIB   DD  DSN=&LSHLQ..ASUTIL.LOADLIB,DISP=SHR
//*
//* TEST HEAPSORT AND BINARY SEARCH ROUTINES
//STEP010  EXEC PGM=ASTSRT1B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST HEAPSORT AND BINARY SEARCH ROUTINES
//STEP020  EXEC PGM=ASTSRT2B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//* TEST ASM HEAPSORT AND SEARCH ROUTINES
//STEP030  EXEC PGM=ASTSRH1B
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//
./ ADD NAME=ASTIVP08 0107-18362-19312-1017-00023-00028-00000-APLKS   48
//APLKST08 JOB ,'TEST DOPE VECTOR',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//  SET DEBUG=&SYSUID..EQALANGX
//*
//* ESTABLISH LOADLIB SEARCH PATH (PLACE AFTER JCLLIB CARD)
//JOBLIB   DD  DSN=&LSHLQ..ASUTIL.LOADLIB,DISP=SHR
//*
//* TEST DOPE VECTOR GENERATION AND USE
//STEP010  EXEC PGM=ASTDOPEB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDILANGX DD  DISP=SHR,DSN=&DEBUG
//IDIOFF   DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//
./ ADD NAME=ASTIVP09 0111-19092-19312-1018-00029-00020-00000-APLKS   19
//APLKST09 JOB ,'TEST CHASE CTL BLKS',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET LSHLQ=&SYSUID   /*TARGET HLQ*/
//  SET DEBUG=&SYSUID..EQALANGX
//*
//* ESTABLISH LOADLIB SEARCH PATH (PLACE AFTER JCLLIB CARD)
//JOBLIB   DD  DISP=SHR,DSN=APLKS.BXS.UTIL.LOADLIB
//         DD  DISP=SHR,DSN=APLKS.BXS.REVIEW.LOADLIB
//         DD  DISP=SHR,DSN=&LSHLQ..ASUTIL.LOADLIB
//*
//* TEST CHASE CONTROL BLOCKS
//STEP010  EXEC PGM=ASTCCB1B
//STEPLIB  DD  DISP=SHR,DSN=APLKS.BXS.UTIL.LOADLIB
//         DD  DISP=SHR,DSN=APLKS.BXS.REVIEW.LOADLIB
//         DD  DISP=SHR,DSN=&LSHLQ..ASUTIL.LOADLIB
//CEEOPTS  DD  *
  ALL31(ON),RPTOPT(OFF),STACK(,,ANY),TERMTHDACT(UADUMP)
/*
//IDILANGX DD  DISP=SHR,DSN=&DEBUG
//IDIOFF   DD  DUMMY
//SYSOUT   DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//CEEDUMP  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*
//
./ ADD NAME=COBBCL   0131-14132-17348-1539-00101-00020-00000-APLKS   16
//APLKS    JOB ,'C/L BATCH PGM',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* CHANGE '%mbr' 'XXXXXXXX' ALL
//* SET VARIABLE NAMES
//  SET SRCMBR=%mbr
//  SET SRCLIB=&SYSUID..ASUTIL.COBOL
//  SET SRCDSN=&SRCLIB(&SRCMBR)
//  SET LNKLIB=&SYSUID..ASUTIL.LOADLIB
//  SET LNKMBR=&SRCMBR
//  SET WORK=SYSDA
//*
//COBOL    PROC COBPGM=IGYCRCTL,
//             COBPARM=,
//             OUTC=*,
//             WORK=SYSDA
//*
//COB      EXEC PGM=&COBPGM,PARM='&COBPARM'
//SYSOPTF  DD  DUMMY          /*COMPILER OPTIONS LRECL=80*/
//SYSIN    DD  DUMMY          /*SOURCE INPUT LRECL=80*/
//SYSPRINT DD  SYSOUT=&OUTC   /*LRECL=133*/
//SYSLIB   DD  DUMMY          /*COPYLIB INPUT LRECL=80*/
//SYSLIN   DD  DUMMY          /*OUTPUT FILE LRECL=80*/
//SYSMDECK DD  DUMMY          /*EXPANDED SOURCE OUTPUT LRECL=80*/
//SYSADATA DD  DUMMY          /*ASSOCIATED DATA OUTPUT LRECL=1020*/
//*
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT2   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT3   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT4   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT5   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT6   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT7   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT8   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT9   DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT10  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT11  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT12  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT13  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT14  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//SYSUT15  DD  UNIT=&WORK,SPACE=(CYL,(1,1),,,ROUND)
//         PEND  END OF PROC COBOL
//*
//BINDER   PROC LNKPGM=IEWBLINK,
//             LNKPARM='MAP,REUS(RENT)',
//             LNKLIB=,
//             LNKMBR=,
//             OUTC=*,
//             WORK=SYSDA
//*
//* DEFAULT    LNKPARM='CALL,LET,LIST,NOMAP,RES,NOREUS,NOXREF'
//*
//LNK      EXEC PGM=&LNKPGM,PARM='&LNKPARM'
//IEWPARMS DD  DUMMY           /*INPUT BINDER OPTS*/
//OBJLIB   DD  DUMMY           /*INPUT INCLUDE FILE*/
//SYSLIN   DD  DUMMY           /*INPUT FILE*/
//SYSPRINT DD  SYSOUT=&OUTC
//SYSLIB   DD  DUMMY           /*EXTERNAL REF INPUT*/
//SYSLMOD  DD  DISP=SHR,DSNAME=&LNKLIB(&LNKMBR)   /*CATALOG TO LIB*/
//SYSUT1   DD  UNIT=&WORK,SPACE=(CYL,(1,1))  /*WORK FILE*/
//         PEND  END OF PROC BINDER
//*
//* RUN COBOL COMPILER TO CREATE OBJECT
//STEP040  EXEC COBOL,
//             COBPARM='OPTFILE'
//COB.SYSOPTF  DD  *                         /*COMPILER OPTIONS*/
* BATCH COBOL COMPILE OPTIONS
  NOC(E),NODYN,LIB,NOLIST,MAP,NAME,OFFSET,OPT(STD)
  TRUNC(OPT),XREF(SHORT)
/*
//COB.SYSIN    DD  *     /*PROCESS STMTS*/
/*
//             DD  DISP=SHR,DSN=&SRCDSN      /*SOURCE INPUT*/
//COB.SYSLIB   DD  DISP=SHR,DSN=&SRCLIB      /*COPYLIB INPUT*/
//             DD  DISP=SHR,DSN=CEE.SCEESAMP
//COB.SYSLIN   DD  DSN=&&LOADSET,            /*OUTPUT FILE*/
//             UNIT=&WORK,SPACE=(TRK,(5,5)),
//             DISP=(,PASS)
//COB.SYSMDECK DD  DSN=&&SYSMDECK,      /*EXPANDED SOURCE OUTPUT*/
//             UNIT=&WORK,SPACE=(TRK,(5,5)),
//             DCB=(RECFM=FB,BLKSIZE=0,LRECL=80),
//             DISP=(,PASS)
//COB.SYSADATA DD  DSN=&&SYSADATA,      /*ASSOCIATED DATA OUTPUT*/
//             UNIT=&WORK,SPACE=(TRK,(5,5)),
//             DCB=(RECFM=VB,BLKSIZE=0,LRECL=1020),
//             DISP=(,PASS)
//*
//  IF (STEP040.COB.RC LT 8) THEN
//* LNK/BIND OBJECT(S)
//STEP060  EXEC BINDER,
//             LNKLIB=&LNKLIB,
//             LNKMBR=&LNKMBR
//LNK.IEWPARMS DD  DUMMY
//LNK.OBJLIB DD  DUMMY        /*INPUT INCLUDE FILE*/
//LNK.SYSLIN DD  DISP=(OLD,PASS),DSN=&&LOADSET
//LNK.SYSLIB DD  DISP=SHR,DSN=CEE.SCEELKED   /*EXTERNAL REF INPUT*/
//           DD  DISP=SHR,DSN=&LNKLIB
//*
//  ENDIF /*end of IF for STEP060*/
//
./ ADD NAME=SSLEANAL 0108-18065-18201-1528-00034-00038-00000-APLKS   32
//APLKS    JOB ,'BATCH JOB',
//             CLASS=T,MSGCLASS=H,MSGLEVEL=(1,1),REGION=8M,
//             NOTIFY=&SYSUID  ,TYPRUN=SCAN,RESTART=
//*
//* SET JCL VARIABLES
//  SET CTLLIB=&SYSUID..WORK.DATALIB
//  SET CTLDSN=&CTLLIB(SSLEANAL)
//  SET LSHLQ=RLIB       LIBRARY SET HLQ
//  SET LSMLQ=ALLTEL     LIBRARY SET MLQ ALLTEL/BANCORP
//  SET LSLLQ=CICSLOAD   LIBRARY SET LLQ BATLOAD/CICSLOAD
//  SET LSLIB=&LSHLQ..&LSMLQ..&LSLLQ
//  SET DOUT=*           DUMP OUTPUT CLASS
//  SET OUT=*            USE FOR PRTOUT? PRINT CLASS
//  SET SOUT=*           SIMESS OUTPUT CLASS
//*
//STEP010  EXEC PGM=SSLEANAL,
//* PARM='/RPTOPTS'
//  PARM='/RPTOPTS,S(NOOPT,  SSR,  TEST,  NC,  PC)'
//* PARM='/RPTOPTS,S( TEST, CMPR2,TRUNC(OPT),NOOPT)'
//* PARM='/RPTVERB'
//STEPLIB  DD  DISP=SHR,DSN=&LSLIB
//         DD  DISP=SHR,DSN=APLKS.BXS.UTIL.LOADLIB
//CEEOPTS  DD  *
  ALL31(ON),TERMTHDACT(UADUMP)
/*
//IDIOFF DD DUMMY      TURN OFF FAULT ANALYZER
//* MBRLIST  DD  DISP=SHR,DSN=&CTLDSN
/*
//APPLLIB  DD  DISP=SHR,DSN=&LSLIB
//*
//SYSPRINT DD  SYSOUT=&OUT
//PRTOUTA  DD  SYSOUT=&OUT
//SYSUDUMP DD  SYSOUT=&DOUT
//
