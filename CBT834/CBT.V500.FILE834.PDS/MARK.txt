/* REXX                                                              */
/*
   This macro allows you to set certain marks in colomns 72 - 80.
   Macro works with COBOL members only.
   If your Edit PROFILE is not NOSTD COBOL, then macro ask you to
   change your PROFILE.

   You may use macro in any time within Edit session.
   It is does not matter if you SAVE member or not. In any case
   macro correctly works until you leave Edit session.

   Invocation format:

         MARK (metric) (FORCE)

   where metric is set of alfabetic symbols you want to mark the
   strings with. You may assign null metric (use macro with blank
   argument in quotes). Macro uses only 8 characters from metric.
   If your metric has blank (or you issue blank metric) AND
   you use other arguments, you must close metric in quotes.

   For all non blank metric variable ZMARK will be saved in ISPF
   profile. Next time you will want to use the macro, you may
   do not issue metric. It will be fetched from ZMARK variable.

   Use FORCE option to change 73-80 columns even they were not
   been modified.

   You also may use range commands according common ISPF rules:
     Z - for single string;
     ZZ or Zn - for range of strings.

   Examples.
   MARK TEST       - word 'TEST' will appear in modified strings.
   MARK 'NEW LINE' - all modified lines will be marked with 'NEW LINE'.
   MARK ''         - text will be blanked out from 73-80 columns.

   Author: Alexander I. Vasilenko,
           LUXOFT, Moscow.
           e-mail: ali_vas@mail.ru
                   Alexander.I.Vasilenko@boeing.com
*/
/*  LOG.
   08.21.2012 FORCE realization.
*/
Address ISREDIT
'MACRO (PARMS) NOPROCESS'
if RC > 0 then do
  say ' It is EDIT macro. Do not use TSO prefix.'
  exit 0
end
Address ISPEXEC CONTROL ERRORS RETURN
CALL ON ERROR
upper PARMS
trace o
if substr(parms,1,1) = '?' then
  call Show_help

if wordpos('FORCE',PARMS) > 0 then do
  parse value PARMS with PARMS "FORCE"     /* 08.21.2012 */
  Force = 1
end
else do
  Force = 0
end
if substr(parms,1,1) = "'" then do /*metric may be some words or blank*/
  parse value PARMS with "'" metr "'" rest
  metr = substr(metr,1,8) /* use only 8 char */
  if metr Â¬= '' then do
    ZMARK = metr
    Address ISPEXEC "VPUT ZMARK PROFILE"
  end
end
else do /* metric is one word */
  parse value PARMS with metr rest
  if metr = '' then do
    Address ISPEXEC "VGET ZMARK PROFILE"
    if RC = 8 then do
      say ' Variable ZMARK not found.'
      say ' Use macro with argument.'
      say ' '
      call Show_help
    end
    else
      metr = ZMARK
  end
  else do
    ZMARK = metr
    Address ISPEXEC "VPUT ZMARK PROFILE"
  end
end
/*             */
firstln      = 1
Edit_pattern =  '00101110110010000000000000000000'
/*               12345678901234567890123456789012               */
/*               ||||||||||||||| reserved       |               */
/*               ||||||||||||||                                 */
/*               ||||||||||||||- renumbered                     */
/*               |||||||||||||- changed by TE, TF, TS           */
/*               ||||||||||||- changed by >, >>, <, <<          */
/*               |||||||||||- changed by ), )), (, ((           */
/*               ||||||||||- changed by CHANGE pimary or        */
/*               |||||||||              Overlay line commands   */
/*               |||||||||- overtyped                           */
/*               ||||||||- data was changed in the next way     */
/*               |||||||                                        */
/*               |||||||- created by Insert line commend        */
/*               ||||||- created by TE                          */
/*               |||||- created by COPY primary or macro        */
/*               ||||- created by MOVE primary or macro         */
/*               |||- Copy or Repeat line command               */
/*               ||- Move line command                          */
/*               |- original record (was before editing)        */
/*say 'metr - 'metr*/
Address ISREDIT
  '(VAR1,VAR2) = NUMBER'
/*say 'VAR1 - 'var1', VAR2 - 'var2*/
select
  when word(var2,1) = 'NOSTD' &,
       word(var2,2) = 'COBOL' then do
    StPos = 67
  end
  otherwise
    '(VAR3)  = LRECL'
    StPos = var3 - 7
    var3  = var3 - 0
    if var1 /= 'OFF' then do
      'NUM OFF'
      ZEDSMSG = 'NUM option changed.'
      ZEDLMSG = 'Profile was changed to allow comments in columns',
                StPos'-'var3'.'
      Address ISPEXEC "SETMSG MSG(ISRZ001)"
    end
end
  Range_RC = 0
  'process range Z'
  if Range_RC = 0 then do
    '(LNUM)    = LINENUM .ZLRANGE'
    '(FIRSTLN) = LINENUM .ZFRANGE'
  end
  do L = firstln to Lnum
    '(ST) = LINE_STATUS 'L
    ST = bitand(ST,Edit_pattern)
    if (index(ST,1,1) > 0) | Force then do    /* 08.21.2012 */
      '(TEXT) = LINE 'L
      if words(Text) = 0 then iterate
      Text = overlay(metr,Text,StPos,8,' ')
      'LINE 'L' = (TEXT)'
    end
  end
exit 0
/*                    */
Show_help:
trace o
eoh = 0
do line = 3 until eoh
  if substr(sourceline(line + 1),1,2) = '*/' then
    eoh = 1
  say sourceline(line)
end
exit 0
/*                    */
ERROR:
if RC = 4 then do
  Range_RC = RC
  firstln  = 1
  '(LNUM)    = LINENUM .ZLAST'
  return
end
  return
trace o
  say 'Error in string - 'SIGL', RC - 'RC
  say sourceline(SIGL)
  say 'Error text:'
  say ERRORTEXT(RC)
exit 4
