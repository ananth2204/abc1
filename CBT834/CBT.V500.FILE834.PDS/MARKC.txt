/* REXX                                                              */
/*

   This macro writes labels in comment columns based on COMPARE
   results.

   Format:
   MARKC metric

   Metric  - 1-8 symbols, You'd like to see as label.
             You must use quotes if metric includes blanks.

   For all non blank metric variable ZMARKC will be saved in ISPF
   profile. Next time you will want to use the macro, you may
   do not issue metric. It will be fetched from ZMARKC variable.

   Author: Alexander I. Vasilenko,
           LUXOFT, Moscow.
           e-mail: ali_vas@mail.ru
                   Alexander.I.Vasilenko@boeing.com
*/
Address ISREDIT
'MACRO (PARMS) NOPROCESS'
if RC > 0 then do
  say ' It is EDIT macro. Do not use TSO prefix.'
  exit 0
end
Address ISPEXEC CONTROL ERRORS RETURN
CALL ON ERROR
/*                                 */
if substr(parms,1,1) = '?' then
  call Show_help
if substr(parms,1,1) = "'" then do
  parse upper value PARMS with "'" metr "'" rest
  metr = substr(metr,1,8) /* use only 8 char */
  if metr Â¬= '' then do
    ZMARKC = metr
    Address ISPEXEC "VPUT ZMARKC PROFILE"
  end
end
else do
  parse upper value PARMS with metr rest
  if metr = '' then do
    Address ISPEXEC "VGET ZMARKC PROFILE"
    if RC = 8 then do
      say ' Variable ZMARKC not found.'
      say ' Use macro with argument.'
      say ' '
      call Show_help
    end
    else
      metr = ZMARKC
  end
  else do
    ZMARKC = metr
    Address ISPEXEC "VPUT ZMARKC PROFILE"
  end
end
/* code to form labels */
Lmas = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
x. = 1

/* code to form labels */

Address ISREDIT
  '(VAR1,VAR2) = NUMBER'
  select
    when word(var2,1) = 'NOSTD' &,
         word(var2,2) = 'COBOL' then do
      StPos = 67
    end
    when word(var2,1) = 'STD'  then do
      StPos = 73
      'NUM OFF'
      ZEDSMSG = 'NUM option changed.'
      ZEDLMSG = 'Profile was changed to allow comments in columns 73-80.'
      Address ISPEXEC "SETMSG MSG(ISRZ001)"
/*    'BNDS 7 80' */
    end
  otherwise
    StPos = 73
  end

Range_RC = 0
ScanEnd  = 0
Lprev    = 0

do forever
  I1 = substr(Lmas,x.1,1)
  I2 = substr(Lmas,x.2,1)
  I3 = substr(Lmas,x.3,1)
  I4 = substr(Lmas,x.4,1)
  LabName = '.O'I4||I3||I2||I1
  '(LCUR) = LINENUM ' LabName
  if RC = 8 then
    leave
  '(TEXT) = LINE 'LCur
/*if substr(TEXT,1,1) = '*' then iterate
  if words(Text) = 0 then iterate*/
  Text = overlay(metr,Text,StPos,8,' ')
  'LINE 'LCur' = (TEXT)'
  call graw 'x.1 x.2'
end
exit 0
/*                    */
Show_help:
eoh = 0
do line = 3 until eoh
  if substr(sourceline(line + 1),1,2) = '*/' then
    eoh = 1
  say sourceline(line)
end
exit 0

graw:
parse arg x '.' i y '.' j
x.i = x.i + 1
if x.i > length(lmas) then do
  x.i = 1
  call graw 'x.'j 'x.'j+1
end
return

ERROR:
if RC = 8 then
  return
trace o
  say 'Error in string - 'SIGL', RC - 'RC
  say sourceline(SIGL)
  say 'Error text:'
  say ERRORTEXT(RC)
exit 4
