/* REXX                                                              */
/*
   This macro comments or uncomments certain strings in edited member.
   You must define MASK in your profile before using this macro.
   Also BOUNDS from your profile will be used.

   Call format:

   COMMENT (comment_string) (FORCE)

   comment_string.
           Commonly mask value from EDIT profile will be used as
           comment string.
           You may issue desired string as option.

   FORCE.
           Use this option to force macro to comment selected lines
           regardless of contents. (See change history 14.12.2011).

   Also use line command 'S' and 'O' in conjuction with the makro.
           Use 'S' to shift commented line.
           Use 'O' to ovwrwrite it.

   Author: Alexander I. Vasilenko,
           LUXOFT, Moscow.
           e-mail: ali_vas@mail.ru
                   Alexander.I.Vasilenko@boeing.com
*/
/*   Change history.
     14.12.2011 - macro determins if comments will be removed or
                  inserted depending of first line of range.
                  If first line is commented out, then comments will
                  be removed. If first line is not ommented out, then
                  this line will be commented.
*/
Address ISREDIT
'MACRO (PARMS) NOPROCESS'
Address ISPEXEC CONTROL ERRORS RETURN
CALL ON ERROR
/*                                                                   */
if substr(parms,1,1) = '?' then
  call Show_help

/*       Main line                                                   */
upper parms
trace o
/*                 */
Blank = '          '
ParmGiven = 1
shift = 1   /* it is default value */
Cmask    = ''
OverCond = 0
Force    = 0
Address ISREDIT
"(MYSTATE) = USER_STATE"
"(MASK)  = MASKLINE"
"(LB,RB) = BOUNDS"
RB = RB + 1
"(LREC)  = LRECL"
Slen     = RB - LB  /* text length within bounds */
/*
if Cmask = ' ' then do
  ZEDSMSG = 'MASK not defined.'
  ZEDLMSG = 'You must define MASK in your profile.'
  Address ISPEXEC "SETMSG MSG(ISRZ001)"
  exit 4
end */
if Parms \= '' then do
  If wordpos('FORCE',Parms) > 0 then do
    Force = 1
    parse var Parms Cmask 'FORCE'
    Cmask = strip(Cmask)
  end
  else do
    Force = 0
  end
end
If Cmask = '' then
  Cmask = Mask     /* mask from profile */
'process range O S'
if RCode = 4 then do
  ZEDSMSG = 'Range Error.'
  ZEDLMSG = 'You must use O or S line command to define range.'
  Address ISPEXEC "SETMSG MSG(ISRZ001)"
  exit 4
end
'(FIRSTLN) = LINENUM .ZFRANGE'
'(LASTLN)  = LINENUM .ZLRANGE'
'(CMD)     = RANGE_CMD'
select
  when CMD = 'S' then
    shift = 1
  when CMD = 'O' then
    shift = 0
  otherwise
    ZEDSMSG = 'Range Error.'
    ZEDLMSG = 'You must use O or S line command to define range.'
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
    exit 4
end
Cmask = strip(Cmask)
ML = length(Cmask)     /* length of mask */
do l = FirstLn to LastLn
  '(TEXT) = LINE ' l
  Rest = substr(Text,RB)
  Text = substr(Text,LB,Slen)
  Text = strip(Text,T)
  If Force then do
    Remove = 0
    Insert = 1
  end
  else do
/*if l = FirstLn then do */ /* this line determine rem/ins oper */
    if substr(Text,1,ML) = Cmask then do
      Remove = 1
      Insert = 0
    end
    else do
      Remove = 0
      Insert = 1
    end
  end
/*end */ /* this line determine rem/ins oper according first line */
  if Remove then do
    if substr(Text,1,ML) = Cmask then
      call Remove_Comment
  end
  else do
    call Ins_Comment
  end
end
"USER_STATE = (MYSTATE)"
exit 0
/*                    */
Ins_comment:
  if \ParmGiven then do
    if substr(Text,1,ML) = ''  then
      shift = 0
    else
      shift = 1
  end
  if shift then do
    if length(Cmask) + length(Text) >= RB then do
      ZEDSMSG = 'BOUNDS.'
      ZEDLMSG = 'Some data may be lost after shifting in line 'L'.',
      'You may reformat this string or change bounds.'
      Address ISPEXEC "SETMSG MSG(ISRZ001)"
/*    exit 4 */
    end
    Text = Cmask||Text
    Text = overlay(Rest,Text,RB)
    "LINE "l" = (TEXT)"
  end
  else do
    if (substr(Text,1,ML) Â¬= '') then
      OverCond = 1
    Text = overlay(Cmask,Text,1,ML)
    Text = overlay(Rest,Text,RB)
    "LINE "l" = (TEXT)"
    if OverCond then do
      ZEDSMSG = 'Overwrite.'
      ZEDLMSG = "Text in commented lines has been overwritten.",
      "If you want to recover this text, undo the last action",
      "and reformat the string or use SHIFT option."
      Address ISPEXEC "SETMSG MSG(ISRZ001)"
/*    exit 4 */
    end
  end
Return

Remove_comment:
  if \ParmGiven then do
    if substr(Text,ML + 1,ML) = ''  then
      shift = 0
    else
      shift = 1
  end
  if shift then do
    Text = Substr(Text,ML+1)
    Text = overlay(Rest,Text,RB)
    "LINE "l" = (TEXT)"
  end
  else do
    Blank = substr(Blank,1,ML)
    Text = overlay(Blank,Text,1,ML)
    Text = overlay(Rest,Text,RB)
    "LINE "l" = (TEXT)"
  end
Return

Show_help:
eoh = 0
do line = 3 until eoh
  if substr(sourceline(line + 1),1,2) = '*/' then
    eoh = 1
  say sourceline(line)
end
exit 0

ERROR:
if RC = 4 then do
  RCode = 4
  return RCode
end
trace o
  say 'Error in string - 'SIGL', RC - 'RC
  say sourceline(SIGL)
  say 'Error text:'
  say ERRORTEXT(RC)
exit 4
