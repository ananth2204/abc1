/* REXX                                                              */
/*
   This macro allows build differents lists according to search
   argument.
   It must be used after SuperC is done.
   Find both DISP= and DSN= before use.

   Author: Alexander I. Vasilenko,
           LUXOFT, Moscow.
           e-mail: ali_vas@mail.ru
                   Alexander.I.Vasilenko@boeing.com
*/
Address ISREDIT
'MACRO (PARMS) NOPROCESS'
upper parms
if word(parms,1) = '?' |,
   word(parms,1) = 'HELP'
  then do
  Show_help:
  eoh = 0
  do line = 3 until eoh
    if substr(sourceline(line + 1),1,2) = '*/' then
      eoh = 1
    say sourceline(line)
  end
  exit 0
end
/* Check if output data set exist */
Address ISPEXEC CONTROL ERRORS RETURN
CALL ON ERROR
trace o
blanks = ' '
blank_line = '                                      '
end_text   = 0
DSN_found  = 0
/*                 */
Address ISREDIT
'(LNUM)    = LINENUM .ZLAST'
'(TEXT) = LINE ' 1
if word(Text,2) \= 'ISRSUPC' then call Warn_exit
trace o
/* find search argument */
a = 0 /* number of arguments */
do l = 1 by 1 for Lnum
  if l = lnum then do
    say 'SRCHFOR not found.'
    exit 1008
  end
  '(TEXT) = LINE ' lnum - l
  Text = translate(Text,' ',"'")
  select
    when pos('SRCHFOR   DISP=',Text) > 0 then do
      StAr_disp = 'DISP='
    end
    when pos('SRCHFOR   DSN=',Text) > 0 then do
      StAr_dsn = 'DSN='
    end
    when word(Text,1) = 'SELECT' then
      iterate l
    when substr(Text,2,13) = 'THE FOLLOWING' then do
      leave l
      end
  otherwise
      iterate l
  end
end
trace o
do l = 1 to lnum
  '(TEXT) = LINE ' l
  if pos('SEARCH-FOR SUMMARY SECTION',Text) > 0 then do
    end_text = 1
  end
  if word(Text,3) = 'STRING(S)' then do
    Member = word(Text,1)
    Text   = delword(Text,1)
/*  Text   = overlay('***',text,1)
    Text   = overlay(member,text,5) */
    'LINE' l ' = (TEXT)'
  end
  else do
    if end_text then do
      Text = delstr(Text,1)
      'LINE' l ' = (TEXT)'
    end
    else do
      if (pos(' DD ',Text) > 0)&(DSN_found) then do
        TextL = delstr(TextL,1)
/*      TextL = overlay(memberL,textL,1)*/
        TextL = overlay(DSN_Arg,textL,3)
        TextL = overlay(DISP_Arg,textL,48)
        'LINE' l-1 ' = (TEXTL)'
        DSN_found = 0
      end
      Text = translate(Text,' ',',')
      APos_dsn = pos(StAr_dsn,Text)
      APos_disp = pos(StAr_disp,Text)
      select
        when (APos_dsn > 0)&(APos_disp > 0) then do
/*        DSN_found = 1*/
          Temp = Substr(Text,APos_dsn+length(StAr_dsn))
          DSN_Arg = word(Temp,1)
          parse var DSN_Arg DSN_Arg '(' .
          Temp = Substr(Text,APos_disp+length(StAr_disp))
          DISP_Arg = word(Temp,1)
          Text = delstr(Text,1)
/*        Text = overlay(member,text,1)*/
          Text = overlay(DSN_Arg,text,3)
          Text = overlay(DISP_Arg,text,48)
          'LINE' l ' = (TEXT)'
        end
        when (APos_dsn > 0)&(APos_disp = 0) then do
          DSN_found = 1; MemberL = Member
          Temp = Substr(Text,APos_dsn+length(StAr_dsn))
          DSN_Arg = word(Temp,1)
          parse var DSN_Arg DSN_Arg '(' .
          DISP_Arg = '---'
          Text = delstr(Text,1)
          'LINE' l ' = (TEXT)'
        end
        when (APos_dsn = 0)&(APos_disp > 0) then do
          Temp = Substr(Text,APos_disp+length(StAr_disp))
          DISP_Arg = word(Temp,1)
          Text = delstr(Text,1)
          'LINE' l ' = (TEXT)'
        end
        otherwise do
          Text = delword(Text,1)
          'LINE' l ' = (TEXT)'
        end
      end
    end
  end
end
"EXCLUDE '"blank_line"' ALL 3 40"
'DEL X ALL'
'RES'
return
/*                    */
ERROR:
if RC = 4 then do
  Range_RC = RC
  firstln  = 1
  '(LNUM)    = LINENUM .ZLAST'
  return
end
trace o
  say 'Error in string - 'SIGL', RC - 'RC
  say sourceline(SIGL)
  say 'Error text:'
  say ERRORTEXT(RC)
  say 'String - ' l
exit 1004
/*                    */
Warn_exit:
say '   This macro is allowed only in SuperC contents.'
exit 1000
