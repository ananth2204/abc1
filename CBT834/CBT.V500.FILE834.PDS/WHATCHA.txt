/* REXX                                                              */
/*

   This macro finds all strings changed during current edit session.
   All operations over certain string appears in NOTE strings.

   You may use "Z" lline commands to restrict analyzing area.

   Call format:

   WHATCHA (?)

   Author: Alexander I. Vasilenko,
           LUXOFT, Moscow.
           e-mail: ali_vas@mail.ru
                   Alexander.I.Vasilenko@boeing.com
*/
Address ISREDIT
'MACRO (PARMS) NOPROCESS'
Address ISPEXEC CONTROL ERRORS RETURN
CALL ON ERROR
/*                                                                   */
if substr(parms,1,1) = '?' then
  call Show_help
/*               12345678901234567890                           */
Edit_pattern =  '01111110111110000000000000000000'
/*    say '       'Edit_pattern ' sh-'sh 'cm-'cm*/
/*               12345678901234567890123456789012               */
/*               ||||||||||||||| reserved       |               */
/*               ||||||||||||||                                 */
/*               ||||||||||||||- renumbered                     */
/*               |||||||||||||- changed by TE, TF, TS           */
/*               ||||||||||||- changed by >, >>, <, <<          */
/*               |||||||||||- changed by ), )), (, ((           */
/*               ||||||||||- changed by CHANGE pimary or        */
/*               |||||||||              Overlay line commands   */
/*               |||||||||- overtyped                           */
/*               ||||||||- data was changed in the next way     */
/*               |||||||                                        */
/*               |||||||- created by Insert line commend        */
/*               ||||||- created by TE                          */
/*               |||||- created by COPY primary or macro        */
/*               ||||- created by MOVE primary or macro         */
/*               |||- Copy or Repeat line command               */
/*               ||- Move line command                          */
/*               |- original record (was before editing)        */
/*       Main line                                                   */
NoteStr  = ''
NothingFound = 1
Fline = 0
trace o
/*                 */
Address ISREDIT
  trace o
'process range Z'
if RC = 4 then do
  firstln  = 1
  '(LNUM)    = LINENUM .ZLAST'
end
if RC = 0 then do
  '(LNUM)    = LINENUM .ZLRANGE'
  '(FIRSTLN) = LINENUM .ZFRANGE'
end
Address ISPEXEC 'VGET ZSCRMAXD'
'(CLINE) = LINENUM .ZCSR'  /* current line of edit session */
'RESET SPECIAL'
do l = FirstLn to Lnum
  '(TEXT) = LINE ' l
  '(ST) = LINE_STATUS 'L
  ST = bitand(ST,Edit_pattern)
  i   = 1 /* position pointer */
  eos = 0
  if ST > 0 then do
    if Â¬Fline then do
      FL    = L     /* remember first line to locate */
      Fline = 1
    end
    do until eos
      P = pos('1',ST,i)
      if P > 0 then do
        NothingFound = 0
        i = P + 1
        call FormNote
      end
      else
        eos = 1
    end
  end
end
if NothingFound then do
    ZEDSMSG = "Not changed."
    ZEDLMSG = "File was not changed."
    Address ISPEXEC "SETMSG MSG(ISRZ001)"
end
else do
  if (Cline+1 > FL) | ((Cline+ZSCRMAXD-7) < FL) then do
    if FL > 2 then
      "LOCATE " FL - 2
    else
      "LOCATE " 1
  end
  else
    "LOCATE " Cline
end
exit 0
/*                    */
FormNote:
select
  when P = '1' then do
  end
  when P = '2' then do
    NoteStr   = '   --- Line MOVE '
  end
  when P = '3' then do
    NoteStr   = '   --- Line COPY or REPEAT '
  end
  when P = '4' then do
    NoteStr   = '   --- Primary MOVE or macro '
  end
  when P = '5' then do
    NoteStr   = '   --- Primary COPY or macro '
  end
  when P = '6' then do
    NoteStr   = '   --- TE '
  end
  when P = '7' then do
    NoteStr   = '   --- Line Insert '
  end
  when P = '9' then do
    NoteStr   = '   --- Overtyped '
  end
  when P = '10' then do
    NoteStr   = '   --- Primary CHANGE or Line Overlay '
  end
  when P = '11' then do
    NoteStr   = '   --- ), )), ( or (( '
  end
  when P = '12' then do
    NoteStr   = '   --- >, >>, < or << '
  end
  when P = '13' then do
    NoteStr   = '   --- TE, TF, TS '
  end
  when P = '14' then do
    NoteStr   = '   --- Renumbered '
  end
end
call InsNote
return

InsNote:
/*"LINE_AFTER  "L" = NOTELINE '"NoteStr"'" */
  "LINE_BEFORE "L" = NOTELINE '"NoteStr"'"
return

Show_help:
eoh = 0
do line = 3 until eoh
  if substr(sourceline(line + 1),1,2) = '*/' then
    eoh = 1
  say sourceline(line)
end
exit 0

ERROR:
if RC = 4 then do
  return
end
trace o
  say 'Error in string - 'SIGL', RC - 'RC
  say sourceline(SIGL)
  say 'Error text:'
  say ERRORTEXT(RC)
exit 4
