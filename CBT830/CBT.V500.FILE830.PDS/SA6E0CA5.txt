A TSO log-on pre-prompt exit (continued)

This article is continued with the publication of the remaining
source code for the TSO pre-prompt exit IKJEFLD.


THE TSO PRE-PROMPT EXIT IKJEFLD (CONTINUED)

*  MOVE AVAILABLE ITEMS INTO PARMLIST
FILLPARM DS 0H
         L     R10,PLSTPTR           GET ADDRESS OF PARMLIST
         USING PARMLIST,R10          SETUP ADDRESSABILITY INTO PARMLIST
         USING PARMLDES,R9           SETUP ADDRESSABILITY INTO BUFF DES
*  MOVE USERID INTO PARMLIST
         L     R9,USERID             R9 = ADDRESS OF USERID DES
         L     R5,DATAPTR            R5 = ADDRESS OF USERID IN PARMLIST
         LA    R4,TSOUIDNM           R4 = ADDRESS OF RETRIEVED USERID
         XR    R3,R3                 CLEAR R3
         IC    R3,TSOUIDLN           R3 = LENGTH OF USERID
         STH   R3,CURLN              MOVE LENGTH TO PARMLIST
         BCTR  R3,0                  DECREMENT LENGTH, FOR EX INSTR.
         EX    R3,MOVEWRDS           EXECUTE MOVEWRDS INSTRUCTION
*  MOVE PASSWORD INTO PARMLIST
         L     R9,PASSW              R9 = ADDRESS OF PASSWORD DES
         L     R5,DATAPTR            R5 = ADDRESS OF PSW IN PARMLIST
         LA    R4,RCFPSWNM           R4 = ADDRESS OF RETRIEVED PASSWORD
         XR    R3,R3                 CLEAR R3
         IC    R3,RCFPSWLN           R3 = LENGTH OF PASSWORD
         STH   R3,CURLN              MOVE LENGTH TO PARMLIST
         BCTR  R3,0                  DECREMENT LENGTH, FOR EX INSTR.
         EX    R3,MOVEWRDS           EXECUTE MOVEWRDS INSTRUCTION
*  MOVE ACCT NO. INTO PARMLIST
DOACCT   DS    0H
         CLI   ACCTFLG,OFF           IF ACCOUNT NOT AVAILABLE THEN
         BE    DOPROC                SKIP
         L     R9,ACCT               R9 = ADDRESS OF ACCT DES
         L     R5,DATAPTR            R5 = ADDRESS OF ACCT IN PARMLIST
         LA    R4,ACCTFLD            R4 = ADDRESS OF RETRIEVED ACCT
         XR    R3,R3                 CLEAR R3
         IC    R3,ACCTFLN            R3 = LENGTH OF ACCT
         STH   R3,CURLN              MOVE LENGTH TO PARMLIST
         BCTR  R3,0                  DECREMENT LENGTH, FOR EX INSTR.
         EX    R3,MOVEWRDS           EXECUTE MOVEWRDS INSTRUCTION
*  MOVE LOGON PROC INTO PARMLIST
DOPROC   DS    0H
         CLI   PROCFLG,OFF           IF PROC NOT AVAILABLE THEN
         BE    DOSIZE                SKIP
         L     R9,PROC               R9 = ADDRESS OF PROC DES
         L     R5,DATAPTR            R5 = ADDRESS OF PROC IN PARMLIST
         LA    R4,PROCFLD            R4 = ADDRESS OF RETRIEVED PROC
         XR    R3,R3                 CLEAR R3
         IC    R3,PROCFLN            R3 = LENGTH OF PROC
         STH   R3,CURLN              MOVE LENGTH TO PARMLIST
         BCTR  R3,0                  DECREMENT LENGTH, FOR EX INSTR.
         EX    R3,MOVEWRDS           EXECUTE MOVEWRDS INSTRUCTION
*  MOVE SIZE NO. INTO PARMLIST
DOSIZE   DS    0H
         CLI   SIZEFLG,OFF           IF SIZE NOT AVAILABLE THEN
         BE    DORGRP                SKIP
         L     R9,REGION             R9 = ADDRESS OF REGION
         MVC   0(L'SIZEFLD,R9),SIZEFLD MOVE SIZE INTO REGION
*  MOVE RACF GROUP INTO PARMLIST
DORGRP   DS    0H
         CLI   RGRPFLG,OFF           IF RGRP NOT AVAILABLE THEN
         BE    SETBITS               SKIP
         L     R9,GROUP              R9 = ADDRESS OF GROUP DES
         L     R5,DATAPTR            R5 = ADDRESS OF GROUP IN PARMLIST
         LA    R4,RGRPFLD            R4 = ADDRESS OF RETRIEVED GROUP
         XR    R3,R3                 CLEAR R3
         IC    R3,RGRPFLN            R3 = LENGTH OF RACF GROUP
         STH   R3,CURLN              MOVE LENGTH TO PARMLIST
         BCTR  R3,0                  DECREMENT LENGTH, FOR EX INSTR.
         EX    R3,MOVEWRDS           EXECUTE MOVEWRDS INSTRUCTION
*  SET DON'T PROMPT BIT TO ON
SETBITS  DS    0H
         CLI   ACCTFLG,OFF           IF ACCOUNT ¬IN INPUT BUFFER THEN
         BE    PROMPT                PROMPT FOR TSO LOGON SCREEN
         CLI   PROCFLG,OFF           IF PROC ¬IN INPUT BUFFER THEN
         BE    PROMPT                PROMPT FOR TSO LOGON SCREEN
         CLI   SIZEFLG,OFF           IF SIZE ¬IN INPUT BUFFER THEN
         BE    PROMPT                PROMPT FOR TSO LOGON SCREEN
         L     R9,CNTLSW             R9 = ADDRESS OF CNTLSW DES
         L     R5,DATAPTR            R5 = ADDRESS OF CNTL IN PARMLIST
         OI    0(R5),DONTPRMP        SET DON'T PROMPT BIT ON
         DROP  R10                   NOT REQUIRED ANY MORE
         DROP  R9                    NOT REQUIRED ANY MORE
PROMPT   DS   0H
         B    RETURN
MOVEWRDS MVC   0(0,R5),0(R4)         MOVE INSTR FROM EX
* EXIT ERROR PROCESSING SECTION                                       *
*  RESOURCE ENQ FAILE (OTHER THAN USERID)
*  SET DISCONNECT BIT ON; AND ISSUE MSG
ERRRSRC  DS    0H
         OI    0(R2),DISCON          R2 STILL POINTS TO CNTLSW
         MVC   MESSAGE(LIFFC03A),IFFC03A        MOVE MSG TO WORK
         MVC   MESSAGE+29(L'TSOUIDNM),TSOUIDNM  INSERT USERID
         WTO   MF=(E,MESSAGE)      ISSUE WTO MSG
         B     FREEWKST
*  MISSING LOGON/USERID/PSW; REG. 15 TELLS WHAT IS WRONG
ERRINBF1 DS    0H
         LR    R1,R15
         BAL   R8,CONVEBC          CONVERT REASON CODE TO EBCEDIC
         MVC   MESSAGE(LIFFC01I),IFFC01I        MOVE MSG TO WORK
         MVC   MESSAGE+29(L'TSOUIDNM),TSOUIDNM  INSERT USERID
         MVC   MESSAGE+82(LCONVFLD),CONVFLD     INSERT RET CODE
         WTO   MF=(E,MESSAGE)      ISSUE WTO MSG
         B     FREEWKST
*  MISSING OR INVALID ACCOUNT/PROC/SIZE; REG. 15 TELLS WHAT IS WRONG
ERRINBF2 DS    0H
         LR    R1,R15
         BAL   R8,CONVEBC          CONVERT REASON CODE TO EBCEDIC
         MVC   MESSAGE(LIFFC02I),IFFC02I        MOVE MSG TO WORK
         MVC   MESSAGE+29(L'TSOUIDNM),TSOUIDNM  INSERT USERID
         MVC   MESSAGE+82(LCONVFLD),CONVFLD     INSERT RET CODE
         WTO   MF=(E,MESSAGE)      ISSUE WTO MSG
         B     FREEWKST
* EXIT CLEAN UP SECTION:                                              *
RETURN   DS    0H                  FINISHED
FREEWKST DS    0H
* FREE MAIN WORKING STORAGE
         LR    R1,R13              ADDRESS OF WORKA IN R1
         L     R13,4(R13)          R13 POINT TO CALLER SAVE AREA
         FREEMAIN RU,LV=LWORKA,A=(1),SP=21  FREE STORAGE
* RETURN TO CALLER
         L     R14,12(R13)         LOAD R14 WITH RETURN ADDRESS
         XR    R15,R15             SET RC = 00
         LM    R0,R12,20(R13)      RESTORE REGISTERS
         BSM   0,14                RETURN TO CALLER
*    INTERNAL ROUTINES                                                *
*   CONVEBC ROUTINE
*   CONVERT R1 CONTENTS INTO EBCEDIC
*    ENTRY :    CONVEBC
*    INPUT :    REGISTER 1 ( ONLY RIGHT HALF)
*               REGISTER 8  RETURN ADDRESS
*    OUTPUT:    CONVFLD
*    DESTROYES: REGISTER: 4,6,7
*    NOTE     : THIS ROUTINE DOES NOT USE CONVENTIONS
CONVEBC  DS    0H
         LA    R4,4                    LOOP COUNTER
         LR    R6,R1                   REASON OR RETURNCD INTO REG 6
RCERRLP  DS    0H
         SRDL  R6,4                    SHIFT R6 THRU R7
         SRL   R7,4                    SHIFT R7 APPEND 0 BEFORE DIGIT
         BCT   R4,RCERRLP              LOOP 4 TIMES
         ST    R7,CONVFLD              PREPARE FOR TR INSTR.
         TR    CONVFLD(LCONVFLD),CONVTAB   CONVERT TO EBCEDIC
*  RETURN TO CALLER
         BR    R8                          RETURN
*                        CONSTANT DEFINITIONS
         LTORG
LLOGONU  DC    A(15)                 LENGTH OF TEXT: LOGON UUUU/PPPP
*                                    UUUU = FOUR DIGIT USERID AND
*                                    PPPP = FOUR DIGIT PASSWORD
TSONONM  DC    C'NONAME'             USERID ID UNKNOWN
LOGNTXT  DC    C'LOGON '             LOGON TEXT
ACCTTXT  DC    C'ACCT('              ACCT NUMBER KEYWORD
PROCTXT  DC    C'PROC('              LOGON PROC KEYWORD
SIZETXT  DC    C'SIZE('              REGION SIZE KEYWORD
RGRPTXT  DC    C'GROUP('             GROUP KEYWORD
LLOGNTXT DC    A(L'LOGNTXT)          LENGTH OF LOGON TEXT
LTSOUIDN DC    A(L'TSOUIDNM)         MAX LENGTH OF USERID
LRCFPSWN DC    A(L'RCFPSWNM)         MAX LENGTH OF PSW
LOPTION  DC    A(8)                  LENGTH OF SMALLEST OPTION +1
LACCTTXT DC    A(L'ACCTTXT)          LENGTH OF ACCT TEXT
LPROCTXT DC    A(L'PROCTXT)          LENGTH OF PROC TEXT
LSIZETXT DC    A(L'SIZETXT)          LENGTH OF SIZE TEXT
LRGRPTXT DC    A(L'RGRPTXT)          LENGTH OF GROUP TEXT
LACCTFLD DC    A(L'ACCTFLD)          LENGTH OF ACCOUNT NUMBER FIELD
LPROCFLD DC    A(L'PROCFLD)          LENGTH OF LOGON PROC FIELD
LSIZEFLD DC    A(L'SIZEFLD)          LENGTH OF HEXADECIMAL SIZE FIELD
LRGRPFLD DC    A(L'RGRPFLD)          LENGTH OF RACF GROUP NAME FIELD
LSIZEEBC DC    A(L'SIZEEBC)          LENGTH OF EBECEDIC SIZE FIELD
CONVTAB  DC    C'0123456789ABCDEF'   HEX TO EBCEDIC CONVERSION TABLE
*   MESSAGE TEMPLATES
IFFC01I  WTO   'IFFC01I IKJEFLD, USERID: ??????? LOGON/USERID/PSW MISSIX
               NG OR INVALID REASON = ???? ',ROUTCDE=(11),MF=L
LIFFC01I EQU   *-IFFC01I
IFFC02I  WTO   'IFFC02I IKJEFLD, USERID: ??????? ACCNT/PROC/SIZE  MISSIX
               NG OR INVALID REASON = ???? ',ROUTCDE=(11),MF=L
LIFFC02I EQU   *-IFFC02I
IFFC03A  WTO   'IFFC03A IKJEFLD, USERID: ??????? RESOURCE ENQ FAILURE, X
               NOTIFY TDS',ROUTCDE=(1,9,11),MF=L
LIFFC03A EQU   *-IFFC03A
SPACES   DC    CL252' '
*               MAPPING  DSECT   DEFINITIONS                          *
*   DSECT DESCRIBING THE PARAMETERS PASSED FROM THE
*   LOGON PROCESSOR I.E. PARMLIST MAPPING
PARMLIST DSECT
CNTLSW   DS    F       PTR TO CONTROL SWITCH DESCRIPTOR
INBUF    DS    F       PTR TO INPUT BUFFER DESCRIPTOR
USERID   DS    F       PTR TO USER-ID DESCRIPTOR
PASSW    DS    F       PTR TO PASSWORD DESCRIPTOR
ACCT     DS    F       PTR TO ACCOUNT DISCRIPTOR
PROC     DS    F       PTR TO PROCEDURE DESCRIPTOR
REGION   DS    F       PTR TO REGION-SIZE AREA
JCL      DS    F       PTR TO JCL DESCRIPTOR
NPASSW   DS    F       PTR TO NEW PASSWORD DESCRIPTOR
SYSATTR  DS    F       PTR TO SYSTEM ATTRIBUTES DESCRIPTOR
USERATTR DS    F       PTR TO INSTALLATION ATTRIBUTES DESCRIPTOR
UNIT     DS    F       PTR TO UNIT DESCRIPTOR
UPT      DS    F       PTR TO UPT DESCRIPTOR
ECT      DS    F       PTR TO ECT
CECB     DS    F       PTR TO CECB
LSCC     DS    F       PTR TO LSCC
PERFORM  DS    F       PTR TO PERFORMANCE GROUP
DEST     DS    F       PTR TO DESTINATION DESCRIPTOR
GROUP    DS    F       PTR TO RACF-GROUP DESCRIPTOR
*   MAP OF PARMLIST DESCRIPTOR-BLOCK
PARMLDES DSECT
DATAPTR  DS    F       PTR TO DATA-AREA
MAXLN    DS    H       MAXIMUM LENGTH OF DATA-AREA
CURLN    DS    H       CURRENT LENGTH OF DATA-AREA
*               GETMAINED DSECT  DEFINITIONS                          *
WORKA    DSECT
SAVEAREA DS    18F     SAVE AREA
PLSTPTR  DS    F       INPUT PARMLIST ADDRESS
CONVFLD  DS    4X      WORK FIELD: HEX TO EBCEDIC CONV.
LCONVFLD EQU   *-CONVFLD
TSOUID   DS    0F
TSOUIDLN DS    AL1     MUST CONTAIN ACTUAL LENGTH
TSOUIDNM DS    CL8     ACTUAL USERID NAME
RCFPSW   DS    0F      PASSWORD
RCFPSWLN DS    AL1     PASSWORD LENGTH
RCFPSWNM DS    CL8     PASSWORD ITSELF
ACCTF    DS    0F
ACCTFLN  DS    AL1     WILL CONTAIN ACTUAL LENGTH
ACCTFLD  DS    CL40    ACCOUNT DESTINATION FIELD
PROCF    DS    0F
PROCFLN  DS    AL1     WILL CONTAIN ACTUAL LENGTH
PROCFLD  DS    CL8     PROC    DESTINATION FIELD
SIZEF    DS    0F
SIZEALGN DS    AL3     FOR ALINGMENT
SIZEFLN  DS    AL1     WILL CONTAIN ACTUAL LENGTH
SIZEFLD  DS    F       SIZE    DESTINATION FIELD
RGRPF    DS    0F
RGRPFLN  DS    AL1     WILL CONTAIN ACTUAL LENGTH
RGRPFLD  DS    CL8     RACFGROUP DESTINATION FIELD
ACCTFLG  DS    C       ACCOUNT FLAG ON ==> ACCOUNT # AVAILABLE IN INBUF
PROCFLG  DS    C       PROC FLAG    ON ==> LOGONPROC AVAILABLE IN INBUF
SIZEFLG  DS    C       SIZE FLAG    ON ==> SIZE AVAILABLE IN INBUF
RGRPFLG  DS    C       RGRP FLAG    ON ==> RGRP AVAILABLE IN INBUF
SIZEEBC  DS    CL7     MAXIMUM EBCEDIC SIZE FIELD
SIZEPACK DS    D       PACKED FORMAT OF SIZE
MESSAGE  DS    CL100   WTO MESSAGE AREA
LWORKA   EQU   *-WORKA LENGTH OF GETMAINED AREA
         END

This article will be continued next month when we shall be
looking at the RACF TSO data extraction routine.


Karel Bastiaansen
Systems Programmer
IFF Nederland BV (The Netherlands)                        c Xephon 1990

