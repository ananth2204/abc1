Comparing tape images

We recently had occasion to copy a significant number of tapes in
our current tape library. Existing utilities would allow us to copy
the data easily, but the question being asked was: "Are we sure
these tapes are identical?" We had no utility immediately
available that would allow us to compare the contents of two tapes
to verify their similarity.

TAPECMPR was developed to meet this need. It examines the
contents of two tapes and verifies that they contain the same data.
It ensures that the tape labels are identical, that the tape marks

match, that data block contents match, and that data block lengths
are equal. If any of these conditions are violated the program
terminates with a non-zero return code and issues a message that
attempts to identify the area where the two tapes differ.

The following JCL could be used to invoke TAPECMPR:

//STEP1   EXEC PGM=TAPECMPR
//STEPLIB   DD DSN=load.library,DISP=SHR
//TAPE01    DD DSN=TAPE01,DISP=SHR,UNIT=TAPE,
//          VOL=SER=TAPE01,LABEL=(,BLP)
//TAPE02    DD DSN=TAPE02,DISP=SHR,UNIT=TAPE,
//          VOL=SER=TAPE02,LABEL=(,BLP)
//SYSPRINT  DD SYSOUT=*

This utility has proven itself very beneficial in our tape conversion
project as it identified several tapes that did not contain identical
data even though the copy utility (a commercial software product)
had indicated a successful copy.

PROGRAM SOURCE CODE

         MACRO
&LBL     $XCL  &SRCADDR=,&DATALEN=
.*   THE CONTENTS OF REGS R0, R1, R14, R15 ARE NOT PRESERVED BY
.*   THIS MACRO
.*   SRCADDR:  IS THE ADDRESS OF THE DATA AREA TO BE CLEARED
.*   DATALEN:  IS THE LENGTH IF THE AREA TO BE CLEARED
         AIF   ('&SRCADDR'(1,1) EQ '(').ISAREG1
&LBL     LA    0,&SRCADDR               SET DATA AREA ADDRESS
         AGO   .GETLEN                  GET DATA AREA LENGTH
.ISAREG1 ANOP
&LBL     LR    0,&SRCADDR(1)            SET DATA AREA ADDRESS
.GETLEN  ANOP
         AIF   ('&DATALEN'(1,1) EQ '(').ISAREG2
         AIF   (T'&DATALEN NE 'N').SETLEN1
         AIF   (&DATALEN LE 4095).SETLEN2
         MNOTE 5,'CONSTANT GREATER THAN 4095'
.SETLEN1 L     1,&DATALEN               SET DATA AREA LENGTH
         AGO   .ALLDONE
.SETLEN2 XR    1,1                      CLEAR R1
         LA    1,&DATALEN               SET DATA AREA LENGTH
         AGO   .ALLDONE
.ISAREG2 LR    1,&DATALEN(1)            SET DATA AREA LENGTH
.ALLDONE ANOP
         LR    14,0                     COPY DATA AREA ADDRESS
         XR    15,15                    CLEAR R15
         MVCL  0,14                     CLEAR THE DATA AREA
         MEND
TAPECMPR CSECT
         STM   R14,R12,12(R13)          SAVE ENVIRONMENT
         LR    R10,R15                  SET UP MODULE ...
         USING TAPECMPR,R10                ADDRESSABILITY
         ST    R13,SVAREA01+4           SAVE OLD SAVEAREA ADDRESS
         LA    R13,SVAREA01             GET NEW SAVEAREA ADDRESS
         OPEN  (DMPRINT,OUTPUT)         OPEN OUTPUT DATASET
         OPEN  EXCPDS1                  OPEN INPUT TAPE #1
         OPEN  EXCPDS2                  OPEN INPUT TAPE #2
         LA    R9,EXCPDS1               SAVE DCB ADDRESS
         LA    R8,EXCPDS2               SAVE DCB ADDRESS
SETLEN   L     R5,=F'65536'             SET TO MAXIMUM
         TM    48(R9),X'10'             TAPE #1 OPEN OK?
         BNO   RET20                    NO - SET RETURN CODE AND END
         TM    48(R8),X'10'             TAPE #2 OPEN OK?
         BNO   RET20                    NO - SET RETURN CODE AND END
         SLL   R5,1                     MULTIPLY BY 2
         GETMAIN R,LV=(5)               GET INPUT RECORD AREA STORAGE
         LTR   R15,R15                  GOT STORAGE?
         BZ    GOTSTRG                  YES - WE CAN GO ON
         L     R15,=F'12'               SET RETURN CODE
         B     RETURN                   GO BACK
GOTSTRG  ST    R1,BUFFER1               SAVE BUFFER AREA ADDRESS
         LR    R2,R1                    GET BUFFER AREA ADDRESS
         SRL   R5,1                     DIVIDE BY 2
         LR    R3,R2                    GET SECOND ...
         A     R3,=F'65536'                BUFFER ADDRESS
         ST    R3,BUFFER2               SAVE BUFFER AREA ADDRESS
REWINDEM LA    R6,IOB01                 GET IOB ADDRESS
         USING IOB,R6
         MVI   IOBFLAG1,IOBCMDCH+IOBUNREL SET CHANNEL PGM ATTRIBUTES
         MVC   IOBECBPT,=A(EXCPECB)     GET ECB ADDRESS
         ST    R9,IOBDCBPT              SAVE DCB ADDRESS
         MVC   IOBSTART,=A(CHANPGM2)    GET CHANNEL PROGRAM ADDRESS
         XC    EXCPECB(4),EXCPECB       CLEAR OUT ECB AREA
         LA    R7,IOBSTDRD              LOAD IOB ADDRESS
         EXCP  (R7)                     ISSUE REWIND
         LA    R6,IOB02                 GET IOB ADDRESS
         MVI   IOBFLAG1,IOBCMDCH+IOBUNREL SET CHANNEL PGM ATTRIBUTES
         MVC   IOBECBPT,=A(EXCPECB1)    GET ECB ADDRESS
         ST    R8,IOBDCBPT              SAVE DCB ADDRESS
         MVC   IOBSTART,=A(CHANPGM2)    GET CHANNEL PROGRAM ADDRESS
         XC    EXCPECB1(4),EXCPECB1     CLEAR OUT ECB AREA
         LA    R7,IOBSTDRD              GET IOB ADDRESS
         EXCP  (R7)                     ISSUE REWIND
         WAIT  ECB=EXCPECB              WAIT FOR IT TO COMPLETE
         CLI   EXCPECB,X'7F'            SUCCESSFUL REWIND?
         BNE   READERR1                 NO - MUST BE AN ERROR
         WAIT  ECB=EXCPECB1             WAIT FOR IT TO COMPLETE
         CLI   EXCPECB1,X'7F'           SUCCESSFUL REWIND?
         BNE   READERR1                 NO - MUST BE AN ERROR
         XR    R3,R3                    CLEAR TAPE 1 BLOCK COUNTER
         XR    R4,R4                    CLEAR TAPE 2 BLOCK COUNTER
READLOOP MVI   IOBFLAG1,IOBCMDCH+IOBUNREL SET CHANNEL PGM ATTRIBUTES
         MVC   IOBECBPT,=A(EXCPECB)     GET ECB ADDRESS
         ST    R9,IOBDCBPT              SAVE DCB ADDRESS
         L     R2,BUFFER1               GET BUFFER ADDRESS
         STCM  R2,B'0111',CHANPGM1+1    SAVE BUFFER ADDR IN READ CCW
         $XCL  SRCADDR=(R2),DATALEN=(R5) CLEAR THE BUFFER
         MVC   IOBSTART,=A(CHANPGM1)    GET CHANNEL PROGRAM ADDRESS
         XC    EXCPECB(4),EXCPECB       CLEAR OUT ECB AREA
         EXCP  IOBSTDRD                 ISSUE READ
         WAIT  ECB=EXCPECB              WAIT FOR IT TO COMPLETE
         CLI   EXCPECB,X'7F'            SUCCESSFUL READ?
         BNE   READERR1                 NO - MUST BE AN ERROR
         XR    R1,R1                    CLEAR R1
         ICM   R1,B'0011',IOBUSTAT+2    GET RESIDUAL BYTE COUNT
         X     R1,=F'65535'             SUBTRACT THAT VALUE FROM 65535
         ST    R1,RECLEN1               SAVE RECORD LENGTH
         LTR   R1,R1                    TAPE MARK?
         BZ    TMARK1                   YES - GO SET TAPE MARK FLAG
         LA    R3,1(,R3)                UPDATE BLOCK COUNT
         L     R15,BUFFER1              GET DATA AREA ADDRESS
         C     R3,=F'1'                 THE FIRST BLOCK?
         BNE   NOSLCHK1                 NO - DON'T CHECK FOR SL
         CLC   0(4,R15),=C'VOL1'        A STANDARD LABEL?
         BNE   SETREC1                  NO - DON'T SET SL FLAG
         OI    FLAG1,SLFLAG             SET SL FLAG
         B     TAPE2                    GO CHECK OUT SECOND TAPE
NOSLCHK1 CLC   0(3,R15),=C'HDR'         A HDR LABEL RECORD?
         BNE   EOVCHK1                  NO - GO SEE IF IT'S AN EOV
         NI    FLAG1,SLFLAG             RESET ALL FLAGS EXCEPT SL
         OI    FLAG1,HDRFLAG            SET HDR FLAG
         B     TAPE2                    GO CHECK OUT SECOND TAPE
EOVCHK1  CLC   0(3,R15),=C'EOV'         END OF VOLUME?
         BNE   SETREC1                  NO - GO SET DATA BLOCK FLAG
         NI    FLAG1,SLFLAG             RESET ALL FLAGS EXCEPT SL
         OI    FLAG1,EOVFLAG            SET EOV FLAG
         B     TAPE2                    GO CHECK OUT SECOND TAPE
SETREC1  NI    FLAG1,SLFLAG             RESET ALL FLAGS EXCEPT SL
         OI    FLAG1,RECFLAG            SET VALID RECORD FLAG
         B     TAPE2                    GO READ TAPE 2
READERR1 TM    IOBUSTAT,X'01'           TAPE MARK/UNIT EXECPTION?
         BO    TMARK1                   YES - GO SET TAPE MARK FLAG
         TM    IOBUSTAT,X'02'           UNIT CHECK?
         BO    WINDUP1                  YES - GO END
         B     ABEND998                 NO - MUST BE SOMETHING ELSE
TMARK1   TM    FLAG1,EOVFLAG            IS EOV FLAG SET?
         BO    WINDUP1                  YES - WE'RE ALL DONE
         TM    FLAG1,TMFLAG             PREVIOUS BLOCK ALSO A TAPEMARK?
         BO    CHKNULL1                 YES - GO CHECK IF SL & NULL
         OI    FLAG1,TMFLAG             SET TAPE MARK FLAG
         B     TAPE2                    GO READ TAPE 2
CHKNULL1 TM    FLAG1,SLFLAG+HDRFLAG     SL TAPE & PREV BLK A HDR?
         BNO   WINDUP1                  NO - THIS IS END OF TAPE
         NI    FLAG1,SLFLAG             RESET ALL FLAGS EXCEPT SL
         B     TAPE2                    GO READ TAPE 2
ABEND998 ABEND 998,DUMP
WINDUP1  MVC   IOBSTART,=A(CHANPGM2)    GET CHANNEL PROGRAM ADDRESS
         XC    EXCPECB(4),EXCPECB       CLEAR OUT ECB AREA
         EXCP  IOBSTDRD                 ISSUE REWIND
         WAIT  ECB=EXCPECB              WAIT FOR IT TO COMPLETE
         MVI   FLAG1,ENDFLAG            SET END OF TAPE FLAG
TAPE2    MVI   IOBFLAG1,IOBCMDCH+IOBUNREL SET CHANNEL PGM ATTRIBUTES
         MVC   IOBECBPT,=A(EXCPECB)     GET ECB ADDRESS
         ST    R8,IOBDCBPT              SAVE DCB ADDRESS
         L     R2,BUFFER2               GET BUFFER ADDRESS
         STCM  R2,B'0111',CHANPGM1+1    SAVE BUFFER ADDR IN READ CCW
         $XCL  SRCADDR=(R2),DATALEN=(R5) CLEAR THE BUFFER
         MVC   IOBSTART,=A(CHANPGM1)    GET CHANNEL PROGRAM ADDRESS
         XC    EXCPECB(4),EXCPECB       CLEAR OUT ECB AREA
         EXCP  IOBSTDRD                 ISSUE READ
         WAIT  ECB=EXCPECB              WAIT FOR IT TO COMPLETE
         CLI   EXCPECB,X'7F'            SUCCESSFUL READ?
         BNE   READERR2                 NO - MUST BE AN ERROR
         XR    R1,R1                    CLEAR R1
         ICM   R1,B'0011',IOBUSTAT+2    GET RESIDUAL BYTE COUNT
         X     R1,=F'65535'             SUBTRACT THAT VALUE FROM 65535
         ST    R1,RECLEN2               SAVE RECORD LENGTH
         LTR   R1,R1                    TAPE MARK?
         BZ    TMARK2                   YES - GO SET TAPE MARK FLAG
         LA    R4,1(,R4)                UPDATE BLOCK COUNT
         L     R15,BUFFER2              GET DATA AREA ADDRESS
         C     R4,=F'1'                 THE FIRST BLOCK?
         BNE   NOSLCHK2                 NO - DON'T CHECK FOR SL
         CLC   0(4,R15),=C'VOL1'        A STANDARD LABEL?
         BNE   SETREC2                  NO - DON'T SET SL FLAG
         OI    FLAG2,SLFLAG             SET SL FLAG
         B     RECCMPR                  GO COMPARE THE RECORDS
NOSLCHK2 CLC   0(3,R15),=C'HDR'         A HDR LABEL RECORD?
         BNE   EOVCHK2                  NO - GO SEE IF IT'S AN EOV
         NI    FLAG2,SLFLAG             RESET ALL FLAGS EXCEPT SL
         OI    FLAG2,HDRFLAG            SET HDR FLAG
         B     RECCMPR                  GO COMPARE THE RECORDS
EOVCHK2  CLC   0(3,R15),=C'EOV'         END OF VOLUME?
         BNE   SETREC2                  NO - GO SET DATA BLOCK FLAG
         NI    FLAG2,SLFLAG             RESET ALL FLAGS EXCEPT SL
         OI    FLAG2,EOVFLAG            SET EOV FLAG
         B     RECCMPR                  GO COMPARE THE RECORDS
SETREC2  NI    FLAG2,SLFLAG             RESET ALL FLAGS EXCEPT SL
         OI    FLAG2,RECFLAG            SET VALID RECORD FLAG
         B     RECCMPR                  COMPARE THE RECORDS
READERR2 TM    IOBUSTAT,X'01'           TAPE MARK/UNIT EXECPTION?
         BO    TMARK2                   YES - GO SET TAPE MARK FLAG
         TM    IOBUSTAT,X'02'           UNIT CHECK?
         BO    WINDUP2                  YES - GO END
         B     ABEND999                 NO - MUST BE SOMETHING ELSE
TMARK2   TM    FLAG2,EOVFLAG            IS EOV FLAG SET?
         BO    WINDUP2                  YES - WE'RE ALL DONE
         TM    FLAG2,TMFLAG             PREVIOUS BLOCK ALSO A TAPEMARK?
         BO    CHKNULL2                 YES - GO CHECK IF SL & NULL
         OI    FLAG2,TMFLAG             SET TAPE MARK FLAG
         B     RECCMPR                  COMPARE THE RECORDS
CHKNULL2 TM    FLAG2,SLFLAG+HDRFLAG     SL TAPE & PREV BLK A HDR?
         BNO   WINDUP2                  NO - THIS IS END OF TAPE
         NI    FLAG2,SLFLAG             RESET ALL FLAGS EXCEPT SL
         B     RECCMPR                  COMPARE THE RECORDS
ABEND999 ABEND 999,DUMP
WINDUP2  MVC   IOBSTART,=A(CHANPGM2)    GET CHANNEL PROGRAM ADDRESS
         XC    EXCPECB(4),EXCPECB       CLEAR OUT ECB AREA
         EXCP  IOBSTDRD                 ISSUE REWIND
         WAIT  ECB=EXCPECB              WAIT FOR IT TO COMPLETE
         MVI   FLAG2,ENDFLAG            SET END OF TAPE FLAG
RECCMPR  CLC   FLAG1(1),FLAG2           FLAGS THE SAME?
         BNE   MATCHER1                 NO - TAPES ARE DIFFERENT
         TM    FLAG1,TMFLAG             TAPE MARKS?
         BO    READLOOP                 YES - READ NEXT BLOCK
         TM    FLAG1,ENDFLAG            END OF TAPES?
         BO    END                      YES - GO END
         CLC   RECLEN1(4),RECLEN2       BUFFER LENGTHS THE SAME?
         BNE   MATCHER2                 NO - TAPES ARE DIFFERENT
         L     R0,BUFFER1               GET FIRST BUFFER ADDRESS
         L     R1,RECLEN1               GET RECORD LENGTH
         L     R14,BUFFER2              GET SECOND BUFFER ADDRESS
         L     R15,RECLEN2              GET RECORD LENGTH
         CLCL  R0,R14                   BUFFERS THE SAME?
         BNE   MATCHER3                 NO - TAPES ARE DIFFERENT
         B     READLOOP                 READ NEXT BLOCK
MATCHER1 CVD   R3,DBL1                  CONVERT BLOCK COUNT TO DECIMAL
         UNPK  DBL2(8),DBL1+4(4)        UNPACK IT
         OI    DBL2+7,X'F0'             MAKE IT ALL READABLE
         MVC   ERROR02+36(8),DBL2       MOVE INTO ERROR MESSAGE
         CVD   R4,DBL1                  CONVERT BLOCK COUNT TO DECIMAL
         UNPK  DBL2(8),DBL1+4(4)        UNPACK IT
         OI    DBL2+7,X'F0'             MAKE IT ALL READABLE
         MVC   ERROR02+72(8),DBL2       MOVE INTO ERROR MESSAGE
         PUT   DMPRINT,ERROR02          WRITE ERROR MESSAGE
         B     MATCHERR                 GO FINISH OFF
MATCHER2 L     R15,RECLEN1              GET TAPE 1 DATA BLOCK LENGTH
         CVD   R15,DBL1                 CONVERT BLOCK LENGTH TO DECIMAL
         UNPK  DBL2(8),DBL1+4(4)        UNPACK IT
         OI    DBL2+7,X'F0'             MAKE IT ALL READABLE
         MVC   FILL03+26(8),DBL2        MOVE INTO ERROR MESSAGE
         L     R15,RECLEN2              GET TAPE 2 DATA BLOCK LENGTH
         CVD   R15,DBL1                 CONVERT BLOCK LENGTH TO DECIMAL
         UNPK  DBL2(8),DBL1+4(4)        UNPACK IT
         OI    DBL2+7,X'F0'             MAKE IT ALL READABLE
         MVC   FILL03+58(8),DBL2        MOVE INTO ERROR MESSAGE
         MVC   ERROR03+33(98),FILL03    FINISH MESSAGE
MATCHER3 CVD   R3,DBL1                  CONVERT BLOCK COUNT TO DECIMAL
         UNPK  DBL2(8),DBL1+4(4)        UNPACK IT
         OI    DBL2+7,X'F0'             MAKE IT ALL READABLE
         MVC   ERROR03+25(8),DBL2       MOVE INTO ERROR MESSAGE
         PUT   DMPRINT,ERROR03          WRITE ERROR MESSAGE
MATCHERR PUT   DMPRINT,ERROR01          WRITE ERROR MESSAGE
         WTO   'TAPECMPR - THESE TAPES DO NOT CONTAIN THE SAME DATA.'  X
               ROUTCDE=(1),DESC=1
         CLOSE ((R8))
         CLOSE ((R9))
         CLOSE DMPRINT
         B     RET12                    GO SET RETURN CODE
END      PUT   DMPRINT,MATCH01          WRITE MATCH MESSAGE
         WTO   'TAPECMPR - THESE TAPES CONTAIN THE SAME DATA.'         X
               ROUTCDE=(1),DESC=1
         CLOSE ((R8))                   CLOSE INPUT FILE
         CLOSE ((R9))                   CLOSE INPUT FILE
         CLOSE DMPRINT                  CLOSE OUTPUT FILE
         L     R5,=F'65536'             GET AREA LENGTH
         SLL   R5,1                     MULTIPLY BY TWO
         L     R1,BUFFER1               GET AREA ADDRESS
         FREEMAIN RU,LV=(5),A=(1)       FREE RECORD AREA STORAGE
RET00    XR    R15,R15                  SET RETURN CODE
RETURN   L     R13,SVAREA01+4           LOAD SAVEAREA ADDRESS
         L     R14,12(,R13)             LOAD RETURN ADDRESS
         LM    R0,R12,20(R13)           RESTORE ENVIRONMENT
         BR    R14                      RETURN
RET20    L     R15,=F'20'               SET RETURN CODE
         B     RETURN                   GO BACK
RET12    L     R15,=F'12'               SET RETURN CODE
         B     RETURN                   GO BACK
RET08    L     R15,=F'8'                SET RETURN CODE
         B     RETURN                   GO BACK
RET04    L     R15,=F'4'                SET RETURN CODE
         B     RETURN                   GO BACK
         $REQU
SVAREA01 DS    18F
DMPRINT  DCB   MACRF=(PM),LRECL=131,DSORG=PS,DDNAME=SYSPRINT,RECFM=FBA
EXCPDS1  DCB   MACRF=E,DSORG=PS,DDNAME=TAPE01
EXCPDS2  DCB   MACRF=E,DSORG=PS,DDNAME=TAPE02
EXCPECB  DC    F'0'
EXCPECB1 DC    F'0'
CHANPGM1 DS    0D
         CCW   READ,ZERO,SLI,RECSIZE
CHANPGM2 DS    0D
         CCW   REWIND,ZERO,SLI,1
READ     EQU   X'02'
REWIND   EQU   X'07'
ZERO     EQU   X'00'
RECSIZE  EQU   X'00FFFF'
SLI      EQU   X'20'
DBL1     DS    D
DBL2     DS    D
RECLEN1  DS    F
RECLEN2  DS    F
BUFFER1  DS    F
BUFFER2  DS    F
FLAG1    DC    X'00'
FLAG2    DC    X'00'
RECFLAG  EQU   X'80'
TMFLAG   EQU   X'40'
ENDFLAG  EQU   X'20'
SLFLAG   EQU   X'08'
HDRFLAG  EQU   X'04'
EOVFLAG  EQU   X'02'
ERROR01  DC    CL131' THESE TWO TAPES DO NOT CONTAIN THE SAME DATA.'
ERROR02  DC    CL131' AT ERROR, TAPE 1 BLOCK COUNT WAS:  XXXXXXXX   TAPX
               E 2 BLOCK COUNT WAS:  XXXXXXXX'
ERROR03  DC    CL131' COMPARE FAILED AT BLOCK XXXXXXXX'
MATCH01  DC    CL131' THESE TWO TAPES CONTAIN THE SAME DATA.'
FILL03   DC    CL98'    TAPE 1 BLOCK LENGTH:  XXXXXXXX   TAPE 2 BLOCK LX
               ENGTH:  XXXXXXXX'
OUTREC   DS    CL131
IOB01    DS    CL(IOBLEN)
IOB02    DS    CL(IOBLEN)
         IEZIOB DSECT=YES
IOBLEN   EQU   *-IOB
         IEZDEB
         IKJTCB
JFCBMAP  DSECT
         IEFJFCBN
         END




