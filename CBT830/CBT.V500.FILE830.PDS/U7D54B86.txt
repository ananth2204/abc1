Displaying real and virtual storage usage

We recently experienced the famous message 'IRA200I
auxiliary storage usage' indicating an unexpectedly high
auxiliary storage consumption.  Wanting to know a little more
about the reason for this message, we searched in the MVS/XA
System Commands manual for some help to determine who
caused the problem, but the only commands relating to page
datasets and the Auxiliary Storage Manager (ASM) we could
find were:

o      DISPLAY ASM, which only gives a summary report of
      page and swap datasets usage.

o      PAGEADD, which is used to add page/swap datasets.

We, however, first wanted to determine the reason for the
shortage.  That's why I wrote this program, which displays on
a TSO terminal the total count of slots in local page datasets,
and the detailed counts of slots allocated to each address space
(see Figure 1).

The program has been written to run on an MVS/XA 2.2.3
system.  Note some important things about it:

1      To access the ASSB, which is located above the 16-
      megabyte line, it  is necessary to code AMODE 31 in the
      Assembler source code as well as in the link-edit parameter
      (AMODE(31)).

2      In previous release of MVS, the non-VIO slot count
      ASSBNVSC and the VIO slot count ASSBVSC can be
      found directly in the ASCB at labels ASCBNVSC and
      ASCBVSC respectively.

3      Note the validation of the various control blocks used by
      verifying  the acronym at the beginning of each block
      (where applicable) - it is a good habit for system programs
      that are relatively 'release dependent'.

4      Included in the source is a very helpful macro I often use
      to debug and trace programs.  The macro displays a small
      comment (8  characters maximum) with the contents of a
      register.  It needs the translate table at label HEXTAB at
      the end of the code in the constants area.

Finally, a word about the reason for our original problem.  It
was caused by a 'clever' guy who changed 'UNIT=SYSDA' to
'UNIT=VIO' in a procedure with large work datasets.  He did
not however measure the impact this would have on the overall
system performance.


PROGRAM SOURCE CODE

* *                 S T O R A G E   R E P O R T E R                 * *
* *    THIS PROGRAM SCANS ASSIGNED ASID'S AND REPORTS THE REAL AND  * *
* *  AUXILIARY STORAGE THEY USE.                                    * *
* *      D E B U G G I N G   M A C R O                              * *
          MACRO                        .
&LABEL    PRTREG  &REG,&TEXT           .
&LABEL    STM   R0,R15,SAVE&SYSNDX     SAVE ALL REGISTERS
          ST    &REG,WRKP&SYSNDX       STORE REGISTER TO PRINT
          UNPK  WRKU&SYSNDX.(9),WRKP&SYSNDX.(5) UNPACK IT
          TR    WRKU&SYSNDX.(8),HEXTAB CONVERT TO DISPLAYABLE HEXADEC
          TPUT  MSG&SYSNDX,L'MSG&SYSNDX PRINT RESULT
          LM    R0,R15,SAVE&SYSNDX     RESTORE ALL REGISTERS
          B     END&SYSNDX             BRANCH AROUND DATAS
SAVE&SYSNDX DS  16F                    SAVE AREA FOR REGISTERS
WRKP&SYSNDX DS  F                      WORK AREA
            DS  C                      FILLER FOR SIGN
MSG&SYSNDX  DS  CL20                   LINE TO DISPLAY
          ORG   MSG&SYSNDX             .
TEXT&SYSNDX DC  CL8'&TEXT'             TEXT FOR EXPLANATION
          DC    CL3' : '               .
WRKU&SYSNDX DC  CL8'********'          VALUE OF REGISTER
          DC    CL1'.'                 .
END&SYSNDX DS   0H                     LABEL FOR BRANCH
          MEND                         .
* *  M A I N   L I N E                                              * *
          YREGS                        REGISTERS EQUATE
STORREP   CSECT                        START OF PROGRAM
STORREP   AMODE 31                     ASSB IS ABOVE THE 16MB LINE
STORREP   RMODE 24                     .
          USING STORREP,R15            SET UP ADDRESSABILITY
          B     START                  BYPASS HEADER
          DC    C'STORREP'             .
          DC    C'&SYSDATE'            .
          DC    C'&SYSTIME'            .
START     DS    0H                     .
          STM   R14,R12,12(R13)        SAVE REGISTERS IN OLD SAVE AREA
          DROP  R15                    DROP OLD BASE
          LR    R12,R15                STANDARD ..
          USING STORREP,R12            .. OS ..
          ST    R13,SAVE+4               .. LINKAGE ..
          LA    R15,SAVE                   .. OF ..
          ST    R15,8(R13)                   .. SAVE ..
          LR    R13,R15                        .. AREAS
          STLINENO LINE=1,MODE=OFF     CLEAR SCREEN
          TPUT  TITLE,L'TITLE          PRINT TITLE
          TPUT  BLANK,L'BLANK          PRINT BLANK LINE
* *  G E T   T O T A L   C O U N T S   F R O M   A S M V T          * *
          L     R2,CVTPTR              POINT TO CVT
          USING CVTMAP,R2              SET UP ADDRESSABILITY
          L     R2,CVTASMVT            POINT TO ASMVT
          USING ASMVT,R2               SET UP ADDRESSABILITY
          L     R1,ASMSLOTS            GET COUNT OF LOCAL SLOTS
          ST    R1,SAVSLOTS            SAVE IT FOR LATER
          CVD   R1,DWORK               CONVERT TO DECIMAL
          MVC   TOTSLOTS,=X'4020202020202120' INITIALIZE MASK
          ED    TOTSLOTS,DWORK+4       EDIT THE RESULT
          TPUT  TOTAL1,L'TOTAL1        PRINT LINE
          L     R1,ASMNVSC             GET COUNT OF NON-VIO ALLOC SLOTS
          CVD   R1,DWORK               CONVERT TO DECIMAL
          MVC   TOTNVSC,=X'4020202020202120' INITIALIZE MASK
          ED    TOTNVSC,DWORK+4        EDIT THE RESULT
          XR    R0,R0                  CLEAR R0
          M     R0,=F'1000'            MULTIPLY TO GET A PERCENTAGE
          D     R0,SAVSLOTS            DIVIDE BY TOTAL SLOTS COUNT
          CVD   R1,DWORK               CONVERT TO DECIMAL
          MVC   PCTNVSC,=X'4021204B2020' INITIALIZE MASK
          ED    PCTNVSC,DWORK+6        EDIT THE RESULT
          TPUT  TOTAL2,L'TOTAL2        PRINT LINE
          L     R1,ASMVSC              GET COUNT OF VIO ALLOCATED SLOTS
          CVD   R1,DWORK               AND ..
          MVC   TOTVSC,=X'4020202020202120' .. IT ..
          ED    TOTVSC,DWORK+4                .. IS ..
          XR    R0,R0                           .. THE ..
          M     R0,=F'1000'                       .. SAME ..
          D     R0,SAVSLOTS                         .. OLD ..
          CVD   R1,DWORK                              .. STORY ..
          MVC   PCTVSC,=X'4021204B2020'                 .. TO ..
          ED    PCTVSC,DWORK+6                            .. CONVERT ..
          TPUT  TOTAL3,L'TOTAL3                             .. AND ..
*                                                             .. PRINT.
          L     R1,ASMERRS             GET COUNT OF BAD SLOTS
          CVD   R1,DWORK               AND ..
          MVC   TOTERRS,=X'4020202020202120' .. DO ..
          ED    TOTERRS,DWORK+4                .. IT ..
          XR    R0,R0                            .. AGAIN ÝÝÝ
          M     R0,=F'1000'            .
          D     R0,SAVSLOTS            .
          CVD   R1,DWORK               .
          MVC   PCTERRS,=X'4021204B2020'
          ED    PCTERRS,DWORK+6        .
          TPUT  TOTAL4,L'TOTAL4        .
          TPUT  BLANK,L'BLANK          PRINT BLANK LINE
* *  S C A N   A S V T   F O R   A C T I V E   A S I D              * *
          L     R2,CVTPTR              POINT TO CVT
          USING CVTMAP,R2              SET UP ADDRESSABILITY
          L     R2,CVTASVT             POINT TO ASVT
          USING ASVT,R2                SET UP ADDRESSABILITY
          CLC   ASVTASVT,=CL4'ASVT'    VALIDATE ACRONYM OF ASVT
          BNE   RETURN16               ANY PROBLEM -> DIRECT TO END
          TPUT  HEADER,L'HEADER        PRINT HEADER
          TPUT  DASH,L'DASH            PRINT DASH LINE
          L     R3,ASVTMAXU            GET MAX NUMBER OF ADDRESS SPACE
SCANASVT  DS    0H                     .
          TM    ASVTENTY,ASVTAVAL      IF THIS ADDRESS SPACE ASSIGNED ?
          BZ    PROCESS                YES -> PROCESS IT
NEXTASCB  DS    0H                     .
          LA    R2,4(R2)               NEXT ASVT ENTRY
          BCT   R3,SCANASVT            DECREMENT COUNTER AND LOOP
          B     RETURN0                THAT'S ALL GOOD ÝÝÝ
* *  P R O C E S S   T H I S   A D D R E S S   S P A C E            * *
PROCESS   DS    0H                     .
          L     R4,ASVTENTY            GET ADDRESS OF ASCB
          USING ASCB,R4                SET UP ADDRESSABILITY
          CLC   ASCBASCB,=C'ASCB'      VALIDATE ACRONYM FOR ASCB
          BNE   RETURN16               ANY PROBLEM -> DIRECT TO END
          CLC   ASCBJBNI,=F'0'         IS IT A JOB ?
          BE    TESTSTC                NO -> TRY SOMETHING ELSE
          L     R1,ASCBJBNI            POINT TO JOBNAME
          MVC   MSGNAME,0(R1)          GET JOBNAME
          B     PROCONT                AND GO ON
TESTSTC   DS    0H                     .
          CLC   ASCBJBNS,=F'0'         IS IT START/MOUNT OR LOGON ?
          BE    RETURN8                NO -> SOMETHING IS WRONG
          L     R1,ASCBJBNS            POINT TO JOBNAME
          MVC   MSGNAME,0(R1)          GET JOBNAME
PROCONT   DS    0H                     .
          LH    R1,ASCBFMCT            GET ALLOCATED FRAME COUNT
          SLL   R1,2                   * 4 (1 FRAME = 4 KB)
          CVD   R1,DWORK               CONVERT TO DECIMAL
          MVC   MSGREAL,=X'4020202020202120' INITIALIZE MASK
          ED    MSGREAL,DWORK+4        EDIT RESULT
          L     R4,ASCBASSB            POINT TO ASSB
          USING ASSB,R4                SET UP ADDRESSABILITY
          CLC   ASSBASSB,=C'ASSB'      VALIDATE ACRONYM FOR ASSB
          BNE   RETURN16               ANY PROBLEM -> DIRECT TO END
          L     R1,ASSBNVSC            GET NON VIO SLOTS COUNT
          CVD   R1,DWORK               AND ..
          MVC   MSGVIRT,=X'4020202020202120' .. DO ..
          ED    MSGVIRT,DWORK+4                .. IT ..
          XR    R0,R0                            .. AGAIN ÝÝÝ
          M     R0,=F'1000'            .
          D     R0,SAVSLOTS            .
          CVD   R1,DWORK               .
          MVC   MSGPCTN,=X'4021204B2020'
          ED    MSGPCTN,DWORK+6        .
          L     R1,ASSBVSC             GET VIO SLOTS COUNT
          CVD   R1,DWORK               AND ..
          MVC   MSGVIO,=X'4020202020202120' ..AGAIN ÝÝÝ
          ED    MSGVIO,DWORK+4         .
          XR    R0,R0                  .
          M     R0,=F'1000'            .
          D     R0,SAVSLOTS            .
          CVD   R1,DWORK               .
          MVC   MSGPCTV,=X'4021204B2020'
          ED    MSGPCTV,DWORK+6        .
PROCEND   DS    0H                     .
          TPUT  MESSAGE,L'MESSAGE      PRINT THE WHOLE LINE
          B     NEXTASCB               BACK TO ASCB SCAN
* *  E N D   O F   P R O C E S S I N G                              * *
RETURN16  TPUT  BLANK,L'BLANK          PRINT BLANK LINE
          TPUT  RETCOD16,L'RETCOD16    TELL THE PROBLEM
          L     R15,=F'16'             SET RETURN CODE
          B     RETURN                 BACK TO CALLER
RETURN8   TPUT  BLANK,L'BLANK          PRINT BLANK LINE
          TPUT  RETCOD8,L'RETCOD8      TELL THE PROBLEM
          L     R15,=F'8'              SET RETURN CODE
          B     RETURN                 BACK TO CALLER
RETURN0   TPUT  BLANK,L'BLANK          PRINT BLANK LINE
          TPUT  RETCOD0,L'RETCOD0      PRINT FINAL MESSAGE
          SR    R15,R15                CLEAR RETURN CODE
RETURN    DS    0H                     .
          L     R13,SAVE+4             RESTORE SAVE AREA POINTER
          LM    R0,R12,20(R13)         RESTORE REGISTERS 0 TO 12
          L     R14,12(R13)            RESTORE REGISTER  14
          BR    R14                    BACK FROM WHERE WE ARE
* *  D A T A   A R E A                                              * *
DWORK     DS    D                      WORK AREA FOR CONVERSION
DWORKS    DS    C                      .
HEXTAB    EQU   *-C'0'                 TRANSLATE TABLE
          DC    CL16'0123456789ABCDEF' .
SAVE      DS    18F                    SAVE AREA
SAVSLOTS  DS    F                      SAVED TOTAL SLOTS COUNT
TITLE     DC    C'   *** STORREP : REAL AND VIRTUAL STORAGE REPORT ***'
BLANK     DC    C' '
TOTAL1    DS    0CL79
          DC    C'TOTAL LOCAL SLOTS       : '
TOTSLOTS  DS    CL8
          DS    CL(TOTAL1+L'TOTAL1-*)
TOTAL2    DS    0CL79
          DC    C'NON-VIO ALLOCATED SLOTS : '
TOTNVSC   DS    CL8
          DC    C', REPRESENTING '
PCTNVSC   DS    CL6
          DC    C'% OF TOTAL SLOTS'
          DC    CL(TOTAL2+L'TOTAL2-*)' '
TOTAL3    DS    0CL79
          DC    C'VIO ALLOCATED SLOTS     : '
TOTVSC    DS    CL8
          DC    C', REPRESENTING '
PCTVSC    DS    CL6
          DC    C'% OF TOTAL SLOTS'
          DS    CL(TOTAL3+L'TOTAL3-*)
TOTAL4    DS    0CL79
          DC    C'BAD SLOTS               : '
TOTERRS   DS    CL8
          DC    C', REPRESENTING '
PCTERRS   DS    CL6
          DC    C'% OF TOTAL SLOTS'
          DS    CL(TOTAL4+L'TOTAL4-*)
HEADER    DC    C'JOBNAME    REAL STO   NVIO SLO   %TOTAL   VIO SLOT   X
               %TOTAL'
DASH      DC    C'-----------------------------------------------------X
               ------'
MSGSTART  EQU   *
MSGNAME   DS    CL8
          DC    CL3' '
MSGREAL   DS    CL8
          DC    CL3' '
MSGVIRT   DS    CL8
          DC    CL3' '
MSGPCTN   DS    CL6
          DC    CL3' '
MSGVIO    DS    CL8
          DC    CL3' '
MSGPCTV   DS    CL6
          DC    CL3' '
MSGEND    EQU   *
          ORG   MSGSTART
MESSAGE   DS    CL(MSGEND-MSGSTART)
RETCOD16  DC    C'*** ACRONYM VALIDATION FAILED ***'
RETCOD8   DC    C'*** UNKNOWN TYPE OF ASID FOUND ***'
RETCOD0   DC    C'*** NORMAL END OF PROGRAM ***'
          LTORG
          CVT   DSECT=YES              COMMUNICATIONS VECTOR TABLE
*         ILRASMVT                     ASM VECTOR TABLE
* ILRASMVT DSECT IS NOT PROVIDED IN SYS1.AMODGEN.
* SO I HAD TO COPY THE REQUIRED PORTION FROM :
* MVS/XA DEBUGGING HANDBOOK : DATA AREA VOLUME 2
ASMVT     DSECT
          DS    112C
ASMSLOTS  DS    F
ASMVSC    DS    F
ASMNVSC   DS    F
ASMERRS   DS    F
          DS    CL(1024-128)
          IHAASVT                      ADDRESS SPACE VECTOR TABLE
          IHAASCB                      ADDRESS SPACE CONTROL BLOCK
          IHAASSB                      ADDRESS SPACE SECONDARY BLOCK
          END


HervÄ Paris
Systems Engineer
Groupe Trigone Informatique (France)                        c Xephon 1991

