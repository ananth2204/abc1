Locating system modules

We had an executable load module in our system called
LOCATE, but did not have the source code to go with it.  The
module only ran in 24-bit addressing mode which made me
believe it had been around for some time.  As we require the
source for all our modules, I decompiled it and changed it to
use 31-bit addressing.  This program is a TSO command
processor that will locate a module from the LPA, LINKLIST,
or the TASK/STEP/JOBLIB and return the size of the module,
its TTR address, and the module's alias (if any).

The program uses TSO IKJPARS to request the module name.
Once received, it branches through the LPA CDE queue
comparing the module name.  The LPA CDE queue points to
modules in the FLPA, MLPA, and possibly some currently
active PLPA modules, so the program will next check the
PLPA directory.  A BLDL is then performed for the
TASK/STEP/JOBLIB.  If the module is found during this
process it is displayed with the information, otherwise an error
message is displayed.

***********************************************************************
* NAME - LOCATE                                                       *
* FUNCTION - TO BE PASSED A PARAMETER OF A MODULE NAME AND INDICATE   *
*        WHERE THE MODULE RESIDES, SIZE OF MODULE, ALIAS (IF ANY)     *
*        AND TTR ADDRESS.                                             *
*  NOTE: THIS PROGRAM IS NOT REENTRANT.                               *
* REGISTERS:                                                          *
*        R0  - GETMAIN/FREEMAIN                                       *
*        R1  - GETMAIN/FREEMAIN                                       *
*        R2  - POINTER TO THE PDL                                     *
*        R3  - ADDRESSABILITY TO CVT                                  *
*        R4  - MACRO ADDRESS OF EITHER LPDE OR XTLST                  *
*        R6  - ADDRESS OF CSVSRCH                                     *
*        R12 - BASE ADDRESS                                           *
*        R13 - WORK/SAVE AREA                                         *
*        R14 - RETURN ADDRESS                                         *
*        R15 - RETURN CODE                                            *
***********************************************************************
         TITLE 'LOCATE FIND MODULE IN LPA, LINKLST OR JOB/STEP/TASKLIB'
LOCATE   CSECT
LOCATE   AMODE 31
LOCATE   RMODE 24
START    EQU   *
         STM   R14,R12,12(R13)    SAVE CALLERS REGISTERS
         LR    R12,R15            INITIALIZE BASE REGISTER
         USING LOCATE,R12         ESTABLISH ADDRESSABILITY
         GETMAIN R,LV=72          GETMAIN SAVE AREA
         B     CONT               BRANCH AROUND EYECATCH
EYECATCH DC    C' LOCATE  '
         DC    C' &SYSDATE -'
         DC    C' &SYSTIME -'
CONT     XC    0(72,R1),0(R1)     ZERO GETMAIN AREA
         ST    R13,4(R1)          LINK TO MY SAVEAREA
         ST    R1,8(R13)          LINK TO CALLERS SAVEAREA
         LR    R11,R1             SAVE REGISTER 1
         L     R15,16(R13)        LOAD RETURN ADDRESS
         ST    R0,16(R13)         STORE LENGTH OF GETMAIN
         LM    R0,R1,20(R13)      RELOAD REGISTERS
         LR    R13,R11            POINTER TO THE SAVE AREA
* ESTABLISH PARAMETER USING IKJPARS
         MVC   PPLUPT(4),4(R1)    MOVE ADDRESS OF UPT
         MVC   PPLECT,12(R1)      MOVE ADDRESS OF ECT
         MVC   PPLCBF,0(R1)       MOVE ADDRESS OF COMMAND BUFFER
         LA    R1,PPL             LOAD ADDRESS OF PARSE PARAMETER LIST
         LINK  EP=IKJPARS         CALL IKJPARS
         L     R2,PNTRPDL         LOAD POINTER TO THE PDL
         L     R1,8(,R2)          POINTER TO NEXT PDE
         LH    R2,12(,R2)         LENGTH OF MODULE NAME
* MOVE THE PARAMETER INTO THE MODULE NAME FIELDS
         BCTR  R2,0               SUBTRACT ONE FROM MODULE LENGTH
         EX    R2,EXECMVC         MOVE IN MODULE NAME
         MVC   BLDMEMBR,MODULE
         MVC   MODNAME(8),MODULE
* CHECK THE LPA FOR THE MODULE
         L     R3,CVTPTR          LOAD ADDRESS OF CVT
         USING CVTMAP,R3          ADDRESSABILITY TO THE CVT
         L     R15,CVTQLPAQ       GET ADDRESS OF POINTER TO CDE QUEUE
         L     R15,0(R15)         GET ADDRESS POINTED TO BY CVTQLPAQ
         USING CDENTRY,R15        ADDRESSABILITY TO THE CDE
         LTR   R15,R15            IS ADDRESS ZEROS ?
CHECKLPA BZ    NOTFMLPA           YES, TRY CHECKING THE PLPA
         CLC   MODULE(8),CDNAME   COMPARE LPA ENTRY WITH MODULE NAME
         BE    NAMEFUND           BRANCH IF EQUAL
         ICM   R15,7,1(R15)       MOVE TO NEXT ENTRY IN THE LPA QUEUE
         B     CHECKLPA           LOOP AROUND
NAMEFUND XC    RETCODE(4),RETCODE SET RETCODE = 0
         TM    CDATTR,CDMIN       IS THIS A MINOR CDE ?
         BZ    NOALIAS            NO, ALIAS NAME NOT REQUIRED.
         L     R15,CDXLMJP        MAJOR CDE NAME
         MVC   ALIASNM,CDNAME     8-BYTE NAME
NOALIAS  L     R4,CDXLMJP         EXTENT LIST ADDRESS (XTLST)
         S     R4,L24             SUBTRACT 24 SO THERE IS ADDRESSABILTY
*                                 TO BOTH LPDE AND XLST
         B     PUTUTMSG           BRANCH
NOTFMLPA LM    R0,R1,MODULE       SET UP REGISTERS FOR CSVSRCH
         L     R6,CVTLPDSR        ADDRESS OF LPA DIR SEARCH ROUTINE
BR_LPDSR BALR  R14,R6             BRANCH AND LINK TO CSVSRCH
         B     MODLFND            RETURN CODE = 0
         B     BUILD              RETURN CODE = 4 - PERFORM BLDL
MODLFND  XC    RETCODE(4),RETCODE SET RETCODE = 0
         LR    R4,R0              ADDRESS OF THE LPDE
         USING LPDE,R4            ESTABLISH ADDRESSABILITY
         TM    LPDEATTR,LPDEMIN   IS IT A MINOR CDE ?
         BZ    PUTUTMSG           NO, ALIAS NAME NOT REQUIRED.
         MVC   ALIASNM,LPDEMJNM   MAJOR CDE NAME
         LM    R0,R1,32(R4)       SET UP REGISTERS FOR CSVSRCH
         B     BR_LPDSR           SEARCH THE PLPA AGAIN
PUTUTMSG UNPK  BYTELEN(7),33(4,R4) UNPACK EITHER XTLMSBLN OR LPDEXTLN
*                                  DEPENDING ON ADDRESS IN R4
         TR    BYTELEN,TRTAB-240   TRANSLATE
         MVI   BYTESAT,C' '        CLEAR OUT SIGN
         UNPK  ADDRESS(9),36(5,R4) UNPACK EITHER XTLMSBAD OR LPDEXTAB
*                                  DEPENDING ON ADDRESS IN R4
         TR    ADDRESS,TRTAB-240   TRANSLATE
         MVI   ALIASOF,C' '       CLEAR OUT SIGN
         CLI   ALIASNM,C' '       IS ALIAS NAME BLANK
         BNE   ALIASYES           NO, TPUT ALIAS NAME
         TPUT  MODULE,37          PUT OUT MESSAGE (NOALIAS)
         B     BUILD              BRANCH AROUND SECOND TPUT
ALIASYES TPUT  MODULE,57          PUT OUT MESSAGE (ALIAS)
* CHECK TASK/STEP/JOBLIB FOR THE MODULE
BUILD    BLDL  0,BLDLLIST         BUILD A LIST FROM TASK/STEP/JOBLIB
         LTR   R15,R15            WAS MODULE NAME FOUND ?
         BNZ   CHKCOND            NO, BRANCH AND PUT NO MODULE FOUND
         XC    RETCODE(4),RETCODE SET RETCODE = 0
         TM    FLGUSRD,X'80'      IS THIS A MAJOR NAME ?
         BZ    LIBSTAT            BRANCH IF YES
         MVC   MAJORNM,MINORNM
* SET WHICH LIBRARY WAS MODULE FOUND IN
LIBSTAT  MVC   LIBRARY,JOBSTEP
         CLI   LOCCODE,X'01'      IS IT IN JOBSTEP ?
         BH    CONCATON           YES, BRANCH
         MVC   LIBRARY,LINKLST
         CLI   CONCAT#,X'00'      IS IT IN THE LINKLST ?
         BNE   CONCATON           YES, BRANCH
         MVC   LIBRARY(16),LINKLIB MODULE MUST BE IN THE LINKLIB !
         B     TPUTTTR             BRANCH AND PUT OUT THE TTR ADDRESS
* SET CONCATENATION NUMBER
CONCATON SR    R1,R1              CLEAR REGISTER 1
         IC    R1,CONCAT#         MOVE CONCATENATION NUMBER INTO R1
         XC    CONVDEC(8),CONVDEC SET TO ALL ZERO'S
         CVD   R1,CONVDEC         CONVERT TO DECIMAL
         UNPK  CONCAT(2),DEC2BYTE UNPACK LAST 2 BYTES OF CONVDEC
         OI    CONCAT1,X'F0'      MAKE IT PRINTABLE
* SET TTR ADDRESS
TPUTTTR  UNPK  TTRADDR(7),TTR1REC(4) UNPACK TTR ADDRESS FROM BLDL
         MVI   OVRFLOW1,C' '      BLANK OUT
         TR    TTRADDR,TRTAB-240  TRANSLATE TTR ADDRESS
         TPUT  MODNAME,80         PUT OUT MESSAGE
CHKCOND  OC    RETCODE(4),RETCODE IS RC = 0 ?
         BZ    SKP_TPUT           YES, MODULE WAS FOUND
         TPUT  LOCFAIL,50         PUT OUT MESSAGE
SKP_TPUT IKJRLSA PNTRPDL          RELEASE STORAGE ALLOCATED BY PARSE
* AND END
RETURN   L     R15,RETCODE        SET RETURN CODE
         LR    R1,R13             ADDRESS OF SAVEAREA FOR FREEMAIN
         L     R13,4(R13)         POINT TO CALLERS SAVEAREA
         L     R0,16(R13)         GET LENGTH FOR FREEMAIN
         ST    R15,16(R13)        STORE REGISTER 15
         FREEMAIN R,LV=(0),A=(1)
         LM    R14,R12,12(R13)    RELOAD CALLERS REGISTERS
         BR    R14                RETURN
EXECMVC  MVC   MODULE(0),0(R1)
BLDLLIST EQU   *                  LIST OF MEMBER NAMES FOR BLDL
         DC    H'01'              NUMBER OF ENTRIES
         DC    H'14'              NUMBER OF BYTES PER ENTRY
BLDMEMBR DC    C'        '        NAME OF MEMBER
TTR1REC  DC    CL3'0'             TTR OF FIRST RECORD
CONCAT#  DC    X'0'               K BYTE, CONCATENATED NUMBER
LOCCODE  DC    X'0'               Z BYTE, LOCATION CODE
FLGUSRD  DC    X'0'               C BYTE, FLAG AND USER DATA LENGTH
LOCFAIL  DC    C'REQUESTED MODULE NOT FOUND IN EITHER LPA OR LNKLST'
MODULE   DC    C'        '
         DC    C' IS: '
BYTELEN  DC    C'      '
BYTESAT  DC    C' BYTES AT '
ADDRESS  DC    C'        '
ALIASOF  DC    C' (ALIAS OF '
ALIASNM  DC    C'        '
         DC    C')'
MODNAME  DC    C'        '
         DC    C' FOUND AS A '
MAJORNM  DC    C'MAJOR'
         DC    C' NAME, AT TTR '
TTRADDR  DC    C'      '
OVRFLOW1 DC    C' '
         DC    C'IN '
LIBRARY  DC    C'            '
         DC    C'('
CONCAT   DC    C' '
CONCAT1  DC    C' '
         DC    C')'
NEWBRKT  DC    C'        '
TRTAB    DC    C'0123456789ABCDEF'
CONVDEC  DC    F'0'               CONVERT TO DECIMAL CONCATENATION NO
         DC    H'0'
DEC2BYTE DC    H'0'               LAST 2 BYTES OF CONCATENATION
         DC    F'0'
CMDECB   DC    F'0'               COMMAND EVENT CONTROL BLOCK
RETCODE  DC    F'4'
PNTRPDL  DC    F'0'               POINTER TO THE PDL
PPL      DS    0F                 ADDRESS OF PPL
PPLUPT   DC    F'0'               ADDRESS OF USER PROFILE TABLE
PPLECT   DC    F'0'               ADDRESS OF ENVIRONMENT CONTROL TABLE
         DC    A(CMDECB)          ADDRESS OF CMD PROC ECB
         DC    A(PCLTABLE)        ADDRESS OF PCL
         DC    A(PNTRPDL)       ADDRESS OF FULLWORD OF VIRTUAL STORAGE
PPLCBF   DC    F'0'               ADDRESS OF COMMAND BUFFER
L24      DC    F'24'              LENGTH OF 24
JOBSTEP  DC    C'JOB/STEP LIB'
LINKLST  DC    C'LINKLIST LIB'
MINORNM  DC    C'MINOR'
LINKLIB  DC    C'SYS1.LINKLIB    '
PCLTABLE IKJPARM
PARMTAB  IKJIDENT 'MODULE NAME',MAXLNTH=8,FIRST=NONATABC,              X
               OTHER=ALPHANUM,PROMPT='NAME OF MODULE TO LOCATE'
         IKJENDP
         IEZREGS                  REGISTERS
         DSECT
         CVT   DSECT=YES          COMMUNICATIONS VECTOR TABLE
         IHACDE                   CONTENTS DIRECTORY ENTRY
         IHALPDE                  LINK PACK DIRECTORY ENTRY
         IHAXTLST                 EXTENT LIST
         END


Craig Brown
Systems Programmer
Australian Paper Manufacturers (Australia)                 c Craig Brown 1992

