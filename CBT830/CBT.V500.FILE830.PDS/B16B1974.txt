REXXCALL program

PROBLEM ADDRESSED

TSO/E Version 2 makes available the REXX language.  REXX
is a powerful language and provides interfaces to various
components (eg ISPF).  It can also pass control to a program
(via LINK or ATTACH).  Unfortunately, non-standard linkage
conventions are used to pass parameters to this called program.
The MVS linkage convention for an externally invoked
program is shown in Figure 1, while the REXX parameter
linkage convention is shown in Figure 2.

SOLUTION

The REXXCALL program reformats the REXX linkage
parameters into those conforming to the standard MVS linkage
convention.  This enables 'normal' programs to be invoked
from REXX without having to be modified - necessary if
standard (utility) programs are to be invoked.

CALLING SEQUENCE

     ADDRESS LINK "REXXLINKlinknameÝlink-parameters¨"

where linkname is the name of the program to be LINKed to.
This program is loaded using the standard LOAD macro.  The
linkname must be 8 characters long (left justified and padded to
the right with blanks if necessary).

The link-parameters indicate any parameters which are to be
passed to the LINKed program .

Example

     ADDRESS LINK "REXXLINKT123456   EXIST DSNAME=T123456.EX.CLIST ; "

The program T123456 is loaded and executed.  'EXIST
DSNAME=T123456.EX.CLIST ; ' is passed as a parameter.

SOURCE PROGRAM

         TITLE 'REXX PROGRAM-LINK INTERFACE'
* Function: LINK from REXX using MVS parameter linkage conventions
* Parameter: program-name (CL8)
*            followed by parameters to be passed to linked program
REXXLINK CSECT
* initialize addressing
         STM   R14,R12,12(R13)         save registers
         BALR  R12,0                   base register
         USING *,R12
         LA    R15,SA                  A(save-area)
         ST    R13,4(R15)              backward ptr
         ST    R15,8(R13)              forward ptr
         LR    R13,R15                 A(new save-area)
         B     SA_END                  jump over save-area
SA       DS    18A                     save-area
SA_END   DS    0H
         LM    R2,R3,0(R1)        load REXX parameters
* R2: A(A(text))
* R3: A(L(text))
         L     R2,0(R2)           A(parameter text)
         MVC   PARM,0(R2)         save parm for LINKed program
         L     R3,0(R3)           L(parameter text)
         LA    R1,L'PGMNAME       L(fixed part of parameter)
         CR    R3,R1
         BH    A100               :parameter present
         LR    R1,R3              set original length
A100     SR    R3,R1              remaining length (=1(true parameter))
         LOAD  EPLOC=PGMNAME      load program
* R0: entry-point address
         LR    R15,R0             set entry-point address
         STH   R3,PGMPARML        set length for MVS PARM format
         LA    R1,APGMPARM        address of pointer to parameter
         BALR  R14,R15            link to program
EOJ      DS    0H                      job end
         L     R13,4(R13)              restore A(old save-area)
         RETURN (14,12),RC=(15)
APGMPARM DC    A(PGMPARML)
PARM     DS    0CL256
PGMNAME  DC    CL8' '             name of program to be LINKed
PGMPARML EQU   *-2                overwritten with parameter length
PGMPARM  DS    CL248              parameter for LINKed program
         END


A S Rudd
Technical Consultant (West Germany)                        € A S Rudd 1990


