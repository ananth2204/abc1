JES2 exits to control JOBCAT/STEPCAT use

There can be many good reasons for limiting the use of JOBCAT and
STEPCAT statements at an installation.  In our case we were converting
from VS1, where we needed the JOBCATs in our production JCL, to MVS/XA
where the JOBCATs would cause non-VSAM datasets to be catalogued in the
VSAM catalog instead of the VS1 OS CVOL catalog where they belonged.
The accompanying JES exits 2 and 4 gave us the flexibility to run the
same JCL under VS1 and MVS/XA.  When jobs containing JOBCATs or STEPCATs
are run under MVS, the exits turn JOBCAT and STEPCAT statements into
comments, unless the job name indicates a user from our Technical
Support department.

Our MVS master catalog is set up to direct catalog requests to the
proper user catalog via alias pointers.  The orderliness of this scheme
can be easily undone by allowing users to include JOBCAT or STEPCAT
statements in their JCL.  These exits are also useful in preserving our
intended catalog organisation.  We always have the option of including a
JOBCAT or STEPCAT when necessary, but only with the involvement of
technical support by running under a job name that matches the required
portion of technical support TSO user-ids.

JES exit 2 is the job statement scan exit.  As implemented, it will only
look at the original job card, immediately disabling itself from having
to look at job card continuations by masking off exit 2 in the JCT.  The
exit mask in the JCT (JCTXMASK) is a bit map of which exits are to be
enabled (1) or disabled (0) for a particular job.  If the job name
matches any of the possible technical support job names, the bit for
exit 4 is turned off so that exit 4 will not be taken by this job.
Customise this logic for the job names you wish to allow to use JOBCATs
and STEPCATs.

JES exit 4 is where the JOBCAT or STEPCAT statements and any
continuations and concatenations are turned into comment cards.  There
is no logic here to determine whether or not to do the commenting out -
that is decided by exit 2.  Any job that enters exit 4 will have both
JOBCATs and STEPCATs turned into comments.

To implement the exits, they must be linked into SYS1.LINKLIB as HASPU02
and HASPU04 respectively with AMODE(31) and RMODE(24) for MVS/XA.  The
following statements also need to be placed in the JES2 initialisation
member of SYS1.PARMLIB:

EXIT2    ROUTINE=UEXIT02,ENABLE,TRACE=NO    /* SETS EXIT MASK IN JCT*/
LOAD=HASPU02                                /* BASED ON JOBNAME     */
                                /*                                  */
EXIT4    ROUTINE=UEXIT04,ENABLE,TRACE=NO    /* COMMENTS OUT JOB AND */
LOAD=HASPU04                                /* STEPCATS EXCPT T/S   */

We installed the exits as source-type usermods in SMP/E so we will be
prompted to re-assemble them when going to a new version of JES2.  This
would be necessary to pick up any changes to the many DSECTS that are
called by the assembly.

UEXIT02
UEXIT02  TITLE 'JES2 JOB STATEMENT SCAN EXIT 2'
**********************************************************************
*                       JES2 JOB STATEMENT SCAN                      *
* PURPOSE:                                                           *
*    TO SET THE JOB EXIT MASK IN THE JCT BASED ON INFORMATION FROM   *
*    THE JOB CARD. EXIT 4 WILL BE DISABLED FOR ANY JOBNAME THAT DOES *
*    NOT BELONG TO TECH SUPPORT (00CTXXX, X0CTXXX)                   *
*    FOR ALL OTHER JOBS, EXIT 4 WILL COMMENT OUT ANY                 *
*    JOBCATS AND STEPCATS IT SEES. THIS EXIT WILL ALSO DISABLE ITSELF*
*    SO IT DOESN'T HAVE TO LOOK AT JOB CONTINUATION CARDS.           *
*    IT ALSO INITIALIZES BYTE ONE OF THE JCTXWRK FIELD TO X'00'      *
*    FOR USE BY EXIT 4 AS A FLAG BYTE.                               *
* ENTRY POINT = UEXIT02                                              *
* INPUT (REGISTERS):                                                 *
*    R0   =0 FOR AN INITIAL JOB CARD                                 *
*         =4 FOR CONTINUATION JOB CARD                               *
*    R1   ADDRESS OF A THREE WORD PARAMETER LIST:                    *
*         +0 = ADDRESS OF JOB STATEMENT IMAGE BUFFER                 *
*         +4 = ADDRESS OF RDWFLAGX IN PCE                            *
*         +8 = ADDRESS OF JCTXWRK FIELD IN JCT                       *
*    R2-9 N/A                                                        *
*    R10  ADDRESS OF THE JOB'S JCT                                   *
*    R11  ADDRESS OF THE JES2 HCT                                    *
*    R12  N/A                                                        *
*    R13  ADDRESS OF THE PRINTER OR PUNCH PCE                        *
*    R14  RETURN ADDRESS                                             *
*    R15  ENTRY ADDRESS                                              *
* RETURN (REGISTERS):                                                *
*    R0-14 SHOULD CONTAIN THE SAME CONTENTS AS ON ENTRY              *
*    R15  CONTAINS A RETURN CODE AS FOLLOWS:                         *
*         =0  JES2 WILL CALL NEXT EXIT IF ANY AND CONTINUE NORMALLY  *
*         =4  SAME AS 0, BUT CALL NO OTHER EXIT ROUTINES             *
*         =8  JES2 WILL CANCEL THE JOB                               *
*         =12 JES2 WILL UNCONDITIONALLY PURGE THE JOB - NO OUTPUT    *
* JES2 MACROS USED:                                                  *
*     $ENTRY, $SAVE                                                  *
*               $RETURN, $MODEND, $MODULE.                           *
**********************************************************************
         COPY  $HASPGBL           COPY HASP GLOBALS
HASPU02        $MODULE RPL,        REQ'D BY $BUFFER
               $BUFFER,            REQ'D BY $JCT
               $HASPEQU,           REQ'D FOR REG CONVENTIONS
               $HCT,               REQ'D BY $SAVE, $RETURN, ETC.
               $JCT,
               $MIT,               REQ'D BY HCT
               $PCE                REQ'D BY HCT
         USING JCT,R10             ESTABLISH JCT ADDRESSABILITY
         USING HCT,R11             ESTABLISH HCT ADDRESSABILITY
         USING PCE,R13             ESTABLISH PCE ADDRESSABILITY
NOEXIT2  EQU   B'11011111'         TO MASK OFF EXIT 2
NOEXIT4  EQU   B'11110111'         TO MASK OFF EXIT 4
UEXIT02  $ENTRY BASE=R12           EXIT ROUTINE'S ENTRY POINT
         $SAVE                     SAVE HASPRJCS REGISTERS
         LR    R12,R15             SET LOCAL BASE REGISTER
         L     R2,0(R1)            R2 -> JOB STATEMENT IMAGE
         NI    JCTXMASK,NOEXIT2    DISABLE FOR JOB CONT CARDS
         CLC   3(3,R2),=C'OCT'     TECH SUPPORT JOB ? (X0CT OR 00CT)
         BE    MASK4               IF YES, WE WILL MASK OFF EXIT 4
         CLC   2(2,R2),=C'TS'      TECH SUPPORT JOB ? (TS21 OR TS72)
         BE    MASK4               IF YES, WE WILL MASK OFF EXIT 4
         MVI   JCTXWRK,X'00'       INITIALIZE EXIT 4'S FLAG BYTE
RETURN   $RETURN RC=0              RETURN TO HASPRJCS
MASK4    NI    JCTXMASK,NOEXIT4    MASK OFF THE EXIT FOR THIS JOB
         B     RETURN              RETURN
         LTORG
         $MODEND
         END

UEXIT04

UEXIT04  TITLE 'JES2 JCL AND JECL SCAN EXIT 4'
**********************************************************************
*                       JES2 JCL AND JECL SCAN                       *
* PURPOSE:                                                           *
*    TO LOOK FOR JOBCAT AND STEPCAT DD STATEMENTS AND TO TURN THEM   *
*    AND ANY CONCATENATED DD STATEMENTS INTO COMMENT CARDS BY        *
*    INSERTING AN ASTERISK INTO COLUMN 3. IT WILL SET A FLAG OF X'FF'*
*    IN BYTE 1 OF THE JCTXWRK FIELD TO INDICATE THAT IT HAS FOUND A  *
*    JOBCAT OR STEPCAT. THE FLAG BYTE IS SET TO X'00' BY EXIT 2.     *
*    IF THE FLAG IS FOUND SET ON ENTRY AND IF WE ARE LOOKING AT A DD *
*    WITH NO DDNAME WE WILL COMMENT IT OUT AS A CONCATENATION;       *
*    WE MUST ALSO COMMENT OUT ANY CONTINUATIONS OF A DD;             *
*    OTHERWISE WE SET THE FLAG BACK TO X'00' AND EXIT.               *
* ENTRY POINT = UEXIT04                                              *
* INPUT (REGISTERS):                                                 *
*    R0   =0 FOR A JES2 CONTROL STATEMENT (JECL)                     *
*         =4 FOR JCL STATEMENT                                       *
*    R1   ADDRESS OF A THREE WORD PARAMETER LIST:                    *
*         +0 = ADDRESS OF CONTROL STATEMENT IMAGE BUFFER             *
*         +4 = ADDRESS OF RDWFLAGX IN PCE                            *
*         +8 = ADDRESS OF JCTXWRK FIELD IN JCT                       *
*    R2-9 N/A                                                        *
*    R10  ADDRESS OF THE JOB'S JCT                                   *
*    R11  ADDRESS OF THE JES2 HCT                                    *
*    R12  N/A                                                        *
*    R13  ADDRESS OF THE PRINTER OR PUNCH PCE                        *
*    R14  RETURN ADDRESS                                             *
*    R15  ENTRY ADDRESS                                              *
* RETURN (REGISTERS):                                                *
*    R0-14 SHOULD CONTAIN THE SAME CONTENTS AS ON ENTRY              *
*    R15  CONTAINS A RETURN CODE AS FOLLOWS:                         *
*         =0  JES2 WILL CALL NEXT EXIT IF ANY AND CONTINUE NORMALLY  *
*         =4  SAME AS 0, BUT CALL NO OTHER EXIT ROUTINES             *
*         =8  TURN THIS CARD INTO A COMMENT                          *
*         =12 JES2 WILL UNCONDITIONALLY PURGE THE JOB - NO OUTPUT    *
* JES2 MACROS USED:                                                  *
*     $ENTRY, $SAVE                                                  *
*               $RETURN, $MODEND, $MODULE.                           *
**********************************************************************
         COPY  $HASPGBL           COPY HASP GLOBALS
HASPU04        $MODULE RPL,        REQ'D BY $BUFFER
               $HASPEQU,           REQ'D FOR REG CONVENTIONS
               $BUFFER,            REQ'D BY $JCT
               $RDRWORK,
               $HCT,               REQ'D BY $SAVE, $RETURN, ETC.
               $JCT,
               $MIT,               REQ'D BY HCT
               $PCE                REQ'D BY HCT
               $RDRWORK
         USING JCT,R10             ESTABLISH JCT ADDRESSABILITY
         USING HCT,R11             ESTABLISH HCT ADDRESSABILITY
         USING PCE,R13             ESTABLISH PCE ADDRESSABILITY
UEXIT04  $ENTRY BASE=R12           EXIT ROUTINE'S ENTRY POINT
         $SAVE                     SAVE HASPRJCS REGISTERS
         LR    R12,R15             SET LOCAL BASE REGISTER
         L     R2,0(R1)            R2 -> CONTROL STATEMENT IMAGE
         LTR   R0,R0               CHECK FOR JCL VERSUS JECL
         BZ    RETURN              IF JECL, WE DON'T CARE
         CLI   JCTXWRK,X'FF'       AM I WORKING ON A JOB/STEPCAT CONT?
         BE    CONTINUE            YES, GO HANDLE CONTINUATION
         CLC   2(6,R2),=C'JOBCAT'  NEW JCL STMT, GOT A JOBCAT?
         BE    GOTCAT              GO MAKE IT A COMMENT
         CLC   2(7,R2),=C'STEPCAT' NEW JCL STMT, IS IT A STEPCAT?
         BNE   RETURN              NO, WE DON'T CARE
GOTCAT   MVI   JCTXWRK,X'FF'       TURN ON GOT-ONE FLAG
COMMENT  MVI   2(R2),C'*'          MAKE IT A //*
         B     RETURN              GO CARRY ON
CONTINUE CLI   2(R2),C'*'          COMMENT CARD ALREADY?
         BE    RETURN              PASS IT THRU
         CLI   2(R2),C' '          NAME BLANK? (CONT OR CONCAT DD)
         BNE   RESET               NO, MUST BE NEW STATEMENT
         LA    R4,3(,R2)           SET 'R4' FOR CARD SCAN
         LA    R14,1               SET INCREMENT FOR SCAN
         LA    R15,12(,R4)          AND LIMIT FOR END OF CONT AREA
RJBTEST  CLI   0(R4),C' '          SEARCH FOR FIRST NON-BLANK
         BNE   NONBLANK            BRANCH IF NON-BLANK
         BXLE  R4,R14,RJBTEST      ADVANCE TO NEXT COLUMN
         B     COMMENT             PAST COL 16 - IT'S A COMMENT
NONBLANK CLC   0(5,R4),=CL5'EXEC'  TEST FOR UNNAMED EXEC CARD
         BNE   COMMENT            //* CONCATENATIONS AND CONTINUATIONS
RESET    MVI   JCTXWRK,X'00'       TURN OFF JOB/STEPCAT FOUND FLAG
RETURN   $RETURN RC=0              RETURN TO HASPRDR
         LTORG
         $MODEND
         END


John Cornman
Systems Programmer
Key Pacific Services Corp (USA)    € Key Pacific Services 1988


