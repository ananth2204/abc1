Everyone should have DFSMS


INTRODUCTION

"DFSMS requires ESA."  "You have to implement System
Managed Storage when you convert to ESA."  "Implementing
DFSMS is a big job."  "Small shops cannot justify DFHSM."
"DFHSM is full of bugs."

All five of these statements are myths.  Nonetheless, I have
heard all of them said, and none of them was spoken in jest.

DFSMS is part of all releases of DFP Version 3.  DFP Version
3.1, initially released solely for MVS/ESA (MVS/SP Version
3), began to support MVS/XA in 1989.  DFP Version 3.2 and
3.3, however, run only in an MVS/ESA environment.

DFP Version 3 is a separate product from DFP Version 2, with
a separate IBM program number (5665-XA3) and a separate,
higher price, 12 to 37 percent higher on a monthly basis,
depending on the size of CPU it is running on.  Because it is a
separate product, it must be ordered.  DFP Version 2 customers
will not automatically receive either the installation tape or the
manuals.

DFP Version 3 and, therefore, MVS/ESA can be used without
converting to System Managed Storage.  That can come later
or never.  For ESA installations, the conversion to DFP
Version 3.2 or 3.3 is worth it just to get PDSE, a final solution
to the constant need to compress PDSs.

Implementing DFSMS is a sizeable job if you want all the
benefits of System Managed Storage, but if all you want to do
is volume pooling, DFSMS is simpler and faster than
implementing symbolic group names for units.  DFSMS
eliminates the need to change every piece of JCL in the
installation to remove VOL=SER specifications and change the
UNIT name.

Even easier to implement is a two pool approach:  one for
scratch files, the other for everything else.  All datasets,
scratch and permanent, could actually be stored together in
what is really one big pool, with an Automated Class Detection
routine coded to detect scratch datasets, ensuring they get
deleted when they should.

On the subject of HSM, I have talked to many DFHSM
installations (and there are a lot of them) and it has been years
since I have heard any complaints about DFHSM's reliability.
Installations using DFHSM have more than doubled in the last
four years, and there are more than five times as many
licences, indicating sharply increased acceptance by large,
multi-CPU organizations.


THE BENEFITS

DFHSM can save a lot of DASD, even for the smallest of
shops, especially when used in conjunction with System
Managed Storage in the simplest of DFSMS implementations.

Here are the benefits of DFSMS and DFHSM that I discovered
when doing storage management planning for one fairly small
MVS/XA installation.

Savings

o      41 percent savings in DASD eliminating 16.4 DASD
      volumes (equivalent to four 3380 boxes).

DFHSM for back-up

o      No gaps:  all data on all volumes is automatically backed up.

o      Integration of application and system back-up:  no
      duplications.

o      Daily incremental back-up (not full volume) results in an
      order of magnitude reduction in the tapes used and
      processing required.

o      Further reduction in tape usage and operator mounts
      through full utilization of tapes.  Tapes are filled with
      datasets:  a new tape is not started for each DASD volume.

o      Back-up tapes are kept as long as necessary to ensure that
      the number of generations specified by the application is met.

o      Old tapes with only one or two datasets on them that are
      still required are automatically consolidated to reduce tape usage.

Migration

o      22.5 percent reduction in allocated DASD space.

o      Old datasets are migrated first to compressed DASD and
      then to tape, but will be automatically recalled if ever
      needed, without affecting the application program.

o      Migrated datasets are still catalogued.

System Managed Storage

o      A reduction in unallocated space from 36.6 percent to 10 percent.

o      The ability to ignore all VOL=SER coding, virtually
      eliminating applications failing because of out of space
      conditions.

Figure 1 shows some figures to back up my claims.  For ease
of comprehension, I have turned the before and after numbers
into pie charts and these are shown in Figures 2 and 3.


SMSDSA

Where did the numbers come from?  IBM provides its Systems
Engineers with several tools to run at customer installations
that will determine the benefits of particular IBM products.
One is called SMSDSA, the DASD Space Analysis Program.
According to a statement made in an IBM Field Television
Network (FTN) broadcast on DFSMS on 16 November 1991, it
is also freely available to MVS customers.

SMSDSA summarizes the amount of DASD space used by
datasets, categorized in the same way DFHSM views the world
- the number of days since the last reference.  The defaults
provided with this program specify that datasets unreferenced
for 15 days get migrated to compressed DASD (level 1).  After
90 days they are migrated to tape (level 2), but remain
catalogued for transparent restoration.  After 365 days the
datasets become ready for automatic deletion.

I modified these values to match my own experiences and those
of DFHSM sites I have worked closely with over the last six
years.  After eight days, migrate to compressed DASD.  After
45 days migrate to tape, recognizing that datasets used monthly
should not be migrated to tape if month-end processing is
delayed.  Deletion should occur after 400 days.  Increasing this
value from 365 to 400 prevents problems when year-end
processing is delayed, as well as providing time for notices to
be sent to users warning them of the impending deletion of
some of their datasets, with an accompanying list.

Almost half the savings came from reducing unallocated DASD
to 10 percent.  At first glance, this installation looks like one
with DASD to spare, but in fact, it was constantly running out
of space on volumes, and changing VOL=SER specifications in
JCL for production jobs at midnight.  DFSMS early support
customers, like the Bank of Boston, which have had the
opportunity to see the results of their DFSMS implementation,
have substantially increased their DASD utilization, finding
that they need only 10 percent of their DASD unallocated.
Compare that with the standard in many installations where any
volume over 80 percent utilized means it is past time to order
more DASD.

Finally, here are a couple of tips on the use of SMSDSA.  It
pays to omit any scratch packs from SMSDSA's scan.  Results
could be inaccurate if there any large datasets allocated there
that were inadvertently not deleted when they should have
been.  By default, reports are printed in upper and lower case.
Specify the CAPS option in SMSDSA if the intended printer
cannot handle (ie print or fold) lower-case characters.


Jon E Pearkins
Certified Software Specialists (Canada)            c Xephon 1991

