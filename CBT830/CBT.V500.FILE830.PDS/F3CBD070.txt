TSO dataset concatenation

The environment provided by a TSO log-on procedure may not
always include all the necessary functionality required by a
particular application. TSO has always given you the opportunity
to redefine the default environment by using the FREE and
ALLOC commands. This is fine if you are using DD names that
are not being used or if you know all of the datasets currently
allocated to the DD you want to reallocate. It would be far better if
you could simply concatenate the datasets you need to the
existing allocation for a particular DD.

CONCAT is a TSO command processor that allows you to
perform this function. It will insert the datasets you specify in front
of the current datasets allocated to the DD you indicate or it will
allocate a new DD for a concatenation request to a DD that does
not yet exist. This relieves you of the cumbersome burden of
having to know all of the datasets allocated to a particular DD if
you still want to include them in the allocation.

The format of the command is as follows:

      CONCAT DD(ddname) DSN(dsnlist) ALLOC/FREE

Accepted syntax for the operands includes:

      DD(ddname)    or
      FILE(ddname)  or
      F(ddname)
      DSN(dsnlist)  or
      DS(dsnlist)   or
      DA(dsnlist)
      ALLOC         or
      FREE

where ddname is the DD you want to concatenate to, dsnlist is the
list of datasets you want to include in the concatenation, and
ALLOC or FREE indicates whether you want to allocate the
dataset list into the DD or free the dataset list from the DD
(ALLOC is the default).

Some examples follow:

      CONCAT F(ISPPLIB) DA(ISPF.PANEL,'YOUR.ISPF.PANEL')

This request would concatenate my.ISPF.PANEL and
YOUR.ISPF.PANEL in front of the current dataset list for
ISPPLIB.

      CONCAT DD(ISPPLIB) DSN(ISPF.PANEL,'YOUR.ISPF.PANEL') FREE

This request would free my.ISPF.PANEL and
YOUR.ISPF.PANEL from the ISPPLIB allocation.

A valid dsnlist is one or more qualified or unqualified datasets.

A fourth operand (VOL, VOLUME, or VOLSER) allows you to
concatenate an uncatalogued dataset. If this operand is coded it
applies to only the first dataset in the dsnlist. For example:

      CONCAT FILE(ISPPLIB) DS(ISPF.PANEL,'YOUR.ISPF.PANEL') VOL(BKPVOL)

would concatenate my.ISPF.PANEL on the DASD volume
labelled BKPVOL and the catalogued version of
YOUR.ISPF.PANEL in front of the current dataset list for
ISPPLIB.

CONCAT Program

CONCAT   CSECT
         STM   R14,R12,12(R13)   SAVE INCOMING ENVIRONMENT
         LR    R10,R15           ESTABLISH MODULE ...
         USING CONCAT,R10           ADDRESSABILITY
         ST    R13,SAVEAREA+4    SAVE OLD SAVEAREA
         LA    R13,SAVEAREA      LOAD NEW SAVEAREA
         LR    R8,R1             ESTABLISH CPPL ...
         USING CPPL,R8              ADDRESSABILITY
         ST    R8,CPPLPTR        SAVE CPPL ADDRESS
         LA    R6,PPLAREA        GET PPL AREA ADDRESS
         USING PPL,R6            SET ADDRESSABILITY
         MVC   PPLUPT,CPPLUPT    SAVE THE UPT ADDRESS
         MVC   PPLECT,CPPLECT    SAVE THE ECT ADDRESS
         MVC   PPLECB(4),=A(ECB) SAVE THE ECB ADDRESS
         MVC   PPLPCL(4),PADDR   GET PARAMETER ADDRESS
         MVC   PPLANS(4),=A(PARSANSR) SAVE ANSWER ADDRESS
         MVC   PPLCBUF,CPPLCBUF  SAVE BUFFER ADDRESS
         XC    PPLUWA(4),PPLUWA  CLEAR THE WORKAREA
         XC    ECB(4),ECB        CLEAR THE ECB
         LR    R1,R6             PARM ADDRESS IN R1
         CALLTSSR EP=IKJPARS     PARSE THE INPUT PARAMETERS
         L     R5,PARSANSR       GET ANSWER AREA ADDRESS
         USING IKJPARMD,R5
         OI    FLAG,DSALLOC      SET THE DEFAULT
         CLI   KEYWORD4+1,X'01'  ALLOC?
         BE    GETDDNAM          YES - DON'T SET DELETE FLAG
         XI    FLAG,DSFREE+DSALLOC INDICATE DATASET DELETE
GETDDNAM XR    R1,R1             CLEAR R1
         ICM   R1,B'0011',SF1V+4 GET DDNAME LENGTH
         L     R6,SF1V           GET DDNAME ADDRESS
         BCTR  R1,0              REDUCE BY ONE FOR EX
         MVC   DDNAME,=44C' '    CLEAR DDNAME AREA
         EX    R1,DDNAMMVC       MOVE IN DDNAME
         MVC   VOLSER(6),=44C' ' CLEAR VOLSER
         L     R6,SF3V           GET VOLSER ADDRESS
         LTR   R6,R6             ANY VOLSER?
         BZ    NOVSER00          NO - DON'T EXTRACT IT
         MVC   VOLSER(6),0(R6)   SAVE THE VOLSER
NOVSER00 XR    R9,R9             CLEAR THE COUNTER
         LA    R3,SF2V           GET ADDRESS OF INPUT DATA AREA
         GETMAIN RU,LV=54        GET SOME STORAGE
         ST    R1,DSNTAB1        SAVE THE ADDRESS
         LR    R4,R1             MOVE TO R4
         MVC   48(6,R4),VOLSER   MOVE THE VOLSER OVER
DSNLOOP  L     R2,0(,R3)         GET ADDRESS OF DSN
         MVC   4(44,R4),=44C' '  CLEAR THE AREA
         XC    0(4,R4),0(R4)     CLEAR THE POINTER
         LA    R9,1(,R9)         ADD ONE TO COUNTER
         XR    R1,R1             CLEAR R1
         ICM   R1,B'0011',4(R3)  GET DSN LENGTH
         BCTR  R1,0              REDUCE BY ONE FOR EX
         EX    R1,DSNMVC         MOVE THE DSN
         CLI   24(R3),X'FF'      END OF LIST?
         BE    PARMEND           YES - GO ON
         L     R3,24(,R3)        POINT TO NEXT ONE
         GETMAIN RU,LV=54        GET SOME STORAGE
         ST    R1,0(,R4)         SAVE THE ADDRESS
         LR    R4,R1             MOVE TO R4
         MVC   48(6,R4),=44C' '  CLEAR THE AREA
         B     DSNLOOP           CHECK IT OUT
PARMEND  ST    R4,ENDTAB1        SAVE ADDRESS OF LAST TABLE1 ENTRY
         LA    R5,DSNTAB2        GET ADDRESS OF SECOND TABLE ANCHOR
GETTIOT  EXTRACT TIOTADDR,FIELDS=TIOT GET TIOT ADDRESS
         L     R3,TIOTADDR       GET TIOT ADDRESS
         LA    R3,24(,R3)        POINT TO TIOT ENTRY AREA
         USING TIOENTRY,R3
DDLOOP   CLC   TIOELNGH(4),=F'0' DONE THE CHAIN?
         BE    CHANGE            YES - GO DO WHAT WE HAVE TO
         CLC   TIOEDDNM(8),DDNAME A DDNAME MATCH?
         BE    DDMATCH           YES - GO PULL THE DSNAME LIST
         LA    R3,20(,R3)        POINT TO NEXT TIOT ENTRY
         B     DDLOOP            GO CHECK IT OUT
DDMATCH  L     R4,TIOEJFCB       GET JFCB ADDRESS
         SRL   R4,8              SHIFT TO RIGHT JUSTIFY IN REG
         LA    R4,16(,R4)        POINT PAST PREFIX
         USING INFMJFCB,R4
         OI    FLAG,DDFOUND      SET DD FOUND FLAG
SAVEDSN  GETMAIN RU,LV=54        GET STORAGE
         XC    0(4,R1),0(R1)     CLEAR POINTER CHAIN
         ST    R1,0(,R5)         SAVE THE POINTER
         LR    R5,R1             MOVE TO R5
         LA    R9,1(,R9)         ADD ONE TO COUNTER
         MVC   4(44,R5),JFCBDSNM MOVE IN DSNAME
         MVC   WORKDSN(44),JFCBDSNM  SAVE THE DATASET NAME
         MVC   48(6,R5),=44C' '  CLEAR THE VOLSER AREA
         XC    LOCWORK(256),LOCWORK  CLEAR THE LOCATE ...
         XC    LOCWORK+256(9),LOCWORK+256   WORK AREA
         LOCATE LOCLIST          CHECK CATALOG
         LTR   R15,R15           CATALOGUED?
         BNZ   SAVEVSER          NO - SAVE THE VOLSER
         CLC   JFCBVOLS(6),LOCWORK+6 VOLSER MATCH?
         BE    NEXTTIOE          YES - DON'T SAVE THE VOLSER
SAVEVSER MVC   48(6,R5),JFCBVOLS SAVE THE FIRST VOLSER
NEXTTIOE LA    R3,20(,R3)        POINT TO NEXT TIOT ENTRY
         CLC   TIOELNGH(4),=F'0' END OF CHAIN?
         BE    CHANGE            YES - PROCESS ACCORDINGLY
         CLC   TIOEDDNM(8),=44C' ' SAME DD?
         BNE   CHANGE            NO - PROCESS ACCORDINGLY
         B     DDMATCH           CHECK OUT NEXT DSNAME
CHANGE   L     R1,ENDTAB1        GET ADDRESS OF LAST ENTRY IN TABLE1
         LTR   R1,R1             ANYTHING?
         BZ    RETURN            NO - GO END
         TM    FLAG,DSFREE       FREE REQUEST?
         BO    CHKLIST           YES - CHECK IF ALL FOUND
         MVC   0(4,R1),DSNTAB2   ADD SECOND TABLE TO LIST
         B     CHANGE1           GO FREE THE DD
CHKLIST  L     R6,DSNTAB1        GET FIRST TABLE ADDRESS
DELLOOP1 L     R8,DSNTAB2        GET SECOND TABLE ADDRESS
         LA    R7,DSNTAB2        SAVE STARTING POINT
         LTR   R6,R6             DONE THE DSN DELETES?
         BZ    DELDONE           YES - GO REBUILD THE LIST
DELLOOP2 CLC   4(44,R6),4(R8)    DSN MATCH?
         BE    DELDSN            YES - REMOVE FROM LIST
         LR    R7,R8             SAVE CURRENT ENTRY ADDRESS
         L     R8,0(,R7)         POINT TO NEXT ENTRY
         LTR   R8,R8             END OF LIST?
         BZ    DELDSNFD          YES - WE CAN'T FREE THIS DSN
         B     DELLOOP2          CHECK NEXT ENTRY FOR MATCH
DELDSN   LR    R1,R6             SAVE ENTRY ADDRESS
         L     R6,0(,R6)         SAVE NEXT ENTRY ADDRESS
         FREEMAIN RU,LV=54,A=(R1)
         LR    R1,R8             SAVE ENTRY ADDRESS
         L     R8,0(,R8)         SAVE NEXT ENTRY ADDRESS
         FREEMAIN RU,LV=54,A=(R1)
         ST    R8,0(,R7)         RESTORE THE CHAIN
         B     DELLOOP1          SEE IF THERE ARE MORE TO DELETE
DELDONE  MVC   DSNTAB1(4),DSNTAB2 MOVE THE TABLE ADDRESS ACROSS
CHANGE1  LA    R1,S99PARM3       ADDRESS OF SVC 99 PARAMETER LIST
         TM    FLAG,DDFOUND      WAS THE DD PREVIOUSLY ALLOCATED?
         BNO   NOFREE            NO - DON'T FREE IT
         SVC   99                FREE THE DD
         LTR   R15,R15           FREE OK?
         BNZ   FREEFAIL          NO - GO ISSUE MESSAGE
NOFREE   CLC   DSNTAB1(4),=F'0'  ANY ENTRIES?
         BE    RETURN            NO - END IT
         MH    R9,=H'10'         GET CONCAT TEXT ...
         AH    R9,=H'4'             UNIT LENGTH
         ST    R9,DDTABLEN       SAVE IT
         GETMAIN RU,LV=(R9)      GET THE STORAGE
         ST    R1,DDTABAD        SAVE THE ADDRESS
         LA    R7,4(,R1)         POINT TO START
         L     R8,DSNTAB1        GET FIRST ENTRY ADDRESS
         XR    R9,R9             CLEAR COUNTER
         XC    CONCTCNT(4),CONCTCNT ZERO THE COUNTER
ALLOCLP  MVC   DYNDSN,4(R8)      MOVE DSN IN
         OI    ENDKEY1,X'80'     SET DEFAULT ENDKEY
         CLC   48(6,R8),=44C' '  A VOLSER?
         BE    NOVOLSER          NO - DON'T SPECIFY VOLSER
         NI    ENDKEY1,X'7F'     TURN OFF ENDKEY
         MVC   DYNVSER(6),48(R8) MOVE IN THE VOLSER
NOVOLSER LA    R1,S99PARM1       ADDRESS ALLOCATE PARM LIST
         SVC   99                ISSUE ALLOCATE
         LTR   R15,R15           ALLOC OK?
         BNZ   PREVALLC          NO - SEE IF DD WAS PREVIOUSLY IN USE
         LA    R9,1(,R9)         ADD ONE TO COUNT
         MVC   2(8,R7),DDNAME    SAVE DDNAME
         MVC   0(2,R7),=H'8'     SET THE LENGTH
         L     R6,0(,R8)         SAVE POINTER TO NEXT ENTRY
         FREEMAIN RU,LV=54,A=(R8)
         LTR   R6,R6             END OF CHAIN?
         BZ    CONCATEN          YES - GO CONCATENATE
         LR    R8,R6             POINT TO NEXT ENTRY
         LA    R7,10(,R7)        ADDRESS NEXT DDNAME TABLE ENTRY
         XR    R12,R12           SET MAX LOOP COUNTER
GETDDN   L     R15,CONCTCNT      GET CURRENT COUNT
         CVD   R15,DBL2          CONVERT TO DECIMAL
         UNPK  DBL1,DBL2         UNPACK IT
         OI    DBL1+7,X'F0'      CLEAR THE SIGN
         MVC   DDNAME(5),=C'CONC@' MOVE IN DDNAME PREFIX
         MVC   DDNAME+5(3),DBL1+5  MOVE IN DDNAME SUFFIX
         LA    R15,1(,R15)       ADD ONE TO COUNT
         ST    R15,CONCTCNT      SAVE NEW COUNT
         B     ALLOCLP           GO ALLOCATE NEXT DATASET
PREVALLC CLC   DDNAME(5),=C'CONC@' OUR DD?
         BNE   ALLOFAIL          NO - ERROR
         C     R12,=F'100'       LOOPED TOO MUCH?
         BNL   ALLOFAIL          YES - ERROR
         CLC   S99FLAG1+2(2),=X'0410'  DD IN USE?
         BNE   ALLOFAIL          NO - ERROR
         LA    R12,1(,R12)       ADD ONE TO LOOP COUNT
         B     GETDDN            TRY THE NEXT DDNAME
CONCATEN CH    R9,=H'1'          ONLY ONE?
         BE    FREETAB           YES - GO FREE THE TABLE
         L     R7,DDTABAD        GET THE TABLE ADDRESS
         STCM  R7,B'0111',S99PTR2+5 SAVE THE TEXT UNIT ADDRESS
         MVC   0(2,R7),=H'1'     SET THE KEY
         STH   R9,2(,R7)         SAVE THE NUMBER OF DDS
         LA    R1,S99PARM2       ADDRESS CONCATENATE PARM LIST
         SVC   99                ISSUE ALLOCATE
         LTR   R15,R15           CONCATENATE OK?
         BZ    FREETAB           YES - FREE THE TABLE
         B     CONCFAIL          GO ISSUE MESSAGE
FREETAB  L     R1,DDTABAD        GET THE ADDRESS
         L     R2,DDTABLEN       GET THE LENGTH
         FREEMAIN RU,LV=(R2),A=(R1)
RETURN   XR    R15,R15           SET RETURN CODE
END      L     R13,SAVEAREA+4    LOAD OLD SAVEAREA
         L     14,12(13)         LOAD RETURN ADDRESS
         LM    0,12,20(13)       RESTORE ENVIRONMENT
         BR    R14               GO HOME
RET08    L     R15,=F'8'         SET RETURN CODE
         B     END               GO END
DELDSNFD TPUT  CCMSG1,80
         B     RET08
CCMSG1   DC    CL80'CONCAT01 - DATASET TO BE FREED WAS NOT FOUND'
FREEFAIL TPUT  CCMSG2,80
         B     RET08
CCMSG2   DC    CL80'CONCAT02 - FREE FAILED FOR SPECIFIED DD'
ALLOFAIL MVC   CCMSG3+33(44),DYNDSN
         TPUT  CCMSG3,80
         B     RET08
CCMSG3   DC    CL80'CONCAT03 - ALLOCATION FAILED FOR '
CONCFAIL TPUT  CCMSG4,80
         B     RET08
CCMSG4   DC    CL80'CONCAT04 - CONCATENATION FAILED'
DDNAMMVC MVC   DDNAME(0),0(R6)   MOVE IN DDNAME (EXECUTED INSTRUCTION)
DSNMVC   MVC   4(1,R4),0(R2)     MOVE IN DSNAME (EXECUTED INSTRUCTION)
CONCTCNT DC    F'0'
TIOTADDR DS    F
DSNTAB1  DS    F
DSNTAB2  DS    F
ENDTAB1  DS    F
DDTABAD  DS    F
DDTABLEN DS    F
DBL1     DS    D
DBL2     DS    D
* ALLOCATE PARAMETER LIST
         DS    0F
S99PARM1 DC    X'80',AL3(S99PARM1+4) ADDRESS OF PARM LIST
         DC    X'14'
S99VERB1 DC    X'01'             ALLOCATE
S99FLAG1 DC    X'0000',X'0000'
S99INFO1 DC    X'0000'
         DC    AL4(S99PTR1)      POINT TO PARM LIST
         DC    F'0',F'0'
S99PTR1  DC    AL4(S99ATU1)      POINT TO KEYS
         DC    AL4(S99ATU2)
         DC    AL4(S99ATU3)
         DC    AL4(S99ATU4)
ENDKEY1  DC    X'80',AL3(S99ATU5)
         DC    AL4(S99ATU6)
         DC    X'80',AL3(S99ATU7)
S99ATU1  DC    X'0001',X'0001',X'0008'
DDNAME   DC    CL8' '
S99ATU2  DC    X'0002',X'0001',X'002C'
DYNDSN   DC    CL44' '
S99ATU3  DC    X'0004',X'0001',X'0001',X'08'  DISP=(SHR,
S99ATU4  DC    X'0005',X'0001',X'0001',X'08'            KEEP,
S99ATU5  DC    X'0006',X'0001',X'0001',X'08'                 KEEP),
S99ATU6  DC    X'0010',X'0001',X'0006'
DYNVSER  DC    CL6' '
S99ATU7  DC    X'0015',X'0001',X'0008',C'SYSALLDA'
* CONCATENTATE PARAMETER LIST
         DS    0F
S99PARM2 DC    X'80',AL3(S99PARM2+4) ADDRESS OF PARM LIST
         DC    X'14'
S99VERB2 DC    X'03'             CONCATENATE
S99FLAG2 DC    X'0000',X'0000'
S99INFO2 DC    X'0000'
         DC    AL4(S99PTR2)      POINT TO PARM LIST
         DC    F'0',F'0'
S99PTR2  DC    AL4(S99BTU1)      POINT TO KEYS
         DC    X'80',AL3(0)
S99BTU1  DC    X'0004',X'0000'
* DEALLOCATE PARAMETER LIST
         DS    0F
S99PARM3 DC    X'80',AL3(S99PARM3+4) ADDRESS OF PARM LIST
         DC    X'14'
S99VERB3 DC    X'02'             DEALLOCATE
S99FLAG3 DC    X'0000',X'0000'
S99INFO3 DC    X'0000'
         DC    AL4(S99PTR3)      POINT TO PARM LIST
         DC    F'0',F'0'
S99PTR3  DC    AL4(S99ATU1)      POINT TO KEYS
         DC    X'80',AL3(S99CTU2)
S99CTU2  DC    X'0007',X'0000'
VOLSER   DC    CL6' '
DSN      DS    CL44
WORKDSN  DS    CL44
CPPLPTR  DS    F
ECB      DS    F
LOCLIST  CAMLST NAME,WORKDSN,,LOCWORK
LOCWORK  DS    0D,CL265
SAVEAREA DS    0D,18F
FLAG     DC    X'00'
DDFOUND  EQU   X'40'
DSFREE   EQU   X'20'
DSALLOC  EQU   X'10'
         LTORG
PARSANSR DS    F
PPLAREA  DS    CL(PPLLEN)
PADDR    DC    A(CCPARMS)
CCPARMS  IKJPARM
KEYWORD1 IKJKEYWD DEFAULT='F'
         IKJNAME 'F',SUBFLD=SF1,ALIAS=('DD','FILE')
KEYWORD2 IKJKEYWD DEFAULT='DS'
         IKJNAME 'DS',SUBFLD=SF2,ALIAS=('DA','DSN')
KEYWORD3 IKJKEYWD
         IKJNAME 'VOL',SUBFLD=SF3,ALIAS=('VOLUME','VOLSER')
KEYWORD4 IKJKEYWD DEFAULT='ALLOC'
         IKJNAME 'ALLOC'
         IKJNAME 'FREE'
SF1      IKJSUBF
SF1V     IKJPOSIT DSNAME,DDNAM,PROMPT='DDNAME'
SF2      IKJSUBF
SF2V     IKJPOSIT DSNAME,USID,LIST,PROMPT='DATASET NAME'
SF3      IKJSUBF
SF3V     IKJPOSIT DSNAME,VOLSER
         IKJENDP
         $REQU
MAPJFCB  DSECT
         IEFJFCBN LIST=YES
         IKJCPPL
         IKJPPL
PPLLEN   EQU    *-PPL
TIOT     DSECT
         IEFTIOT1
         CVT   DSECT=YES
         END




