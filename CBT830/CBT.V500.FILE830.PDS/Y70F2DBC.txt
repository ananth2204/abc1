A disk display utility

DASDMAP ISPF Table Panel (ZDMAP)

)ATTR
 ^ TYPE(OUTPUT) INTENS(LOW)
)BODY
+ZDMAP             %  MVS TSO/SPF TECHNICAL SUPPORT
+                  %          DASD DISPLAY
+COMMAND ===>_ZCMD                                            +USE PF13 FOR HELP
%
% CUU  DEVICE    VOLSER     STATUS       CUU  DEVICE    VOLSER     STATUS
%
)MODEL
 ^Z                                     ^Z
)INIT
 .HELP = ZDMAPH
 &VARS = '(DEV1 DEV2)'
)PROC
)END

DASDMAP ISPF First Help Panel (ZDMAPH)

+ZDMAPH            %  MVS TSO/SPF TECHNICAL SUPPORT
+                  %          DASD DISPLAY

%  VALID COMMANDS               COMMAND DESCRIPTION

+    O                  DISPLAY ALL THE ON-LINE DASD
     F                  DISPLAY ALL THE ON-LINE AND OFF-LINE DASD
     R                  DISPLAY ALL THE RESERVED DEVICES
     A                  SORT THE DISPLAY BY ADDRESS
     V                  SORT THE DISPLAY BY VOL SER
     A=XXX-XXX          DISPLAY A RANGE OF ADDRESSES
     M=X                DISPLAY THE 3380 MODEL TYPE   D, E OR K
                                 OR 3390 MODEL TYPE   1 OR 2
     V=XXXXXX           DISPLAY GENERIC VOL SER
                         IE V=VSE    MEANS DISPLAY ALL VSE VOLUMES

%             HIT ENTER TO GET THE MEANING OF DEVICE STATUS
)PROC
 &CONT = ZDMAPH1
)END

DASDMAP ISPF Second Help Panel (ZDMAPH1)

+ZDMAPH1            %    DASD DEVICE STATUS

%  VVVDDDUUU R=NNN

%                 VVV +IS VOLUME INFORMATION
+  BYTE 1: P            PERMANENTLY RESIDENT VOLUME
           R            REMOVABLE VOLUME
           S            SYSTEM RESIDENCE VOLUME
   BYTE 2: P            PRIVATE
           S            STORAGE
           C            PUBLIC
   BYTE 3: R            RESERVED
%                 DDD +IS DEVICE INFORMATION
   BYTE 1: V            TO BE VARIED OFF-LINE
   BYTE 2: U            UNLOAD PENDING
   BYTE 3: A            ALLOCATED
%                 UUU +IS DEVICE USAGE INFORMATION
   BYTE 1: N            DEVICE NOT READY
   BYTE 2: B            DEVICE IS BOXED OFF-LINE
   BYTE 3: U            THE SUBCHANNEL FOR THIS DEVICE IS UNUSABLE

%  R=NNN          THE NUMBER OF RESERVE MACROS ISSUED AGAINST THE DEVICE
)END

DASDMAP ISPF Message Member (ZMDM00)

ZMDM001A  'INVALID COMMAND'
'YOU TYPED IN AN INVALID DASD DISPLAY COMMAND'
ZMDM002A  'NO ENTRIES FOUND'
'NO VOLUMES MET YOUR SELECTION CRITERIA'
ZMDM003A 'VOL SER TOO LARGE'
'YOU SPECIFIED V= AND THE VOLSER WAS LARGER THAN 6 CHARACTERS'
ZMDM004A 'NO VOLSER SPECIFIED'
'YOU SPECIFIED V= AND DID NOT SPECIFY A VOLSER'

DASDMAP Program

         TITLE 'DASDMAP- DISPLAY DASD IN TSO ISPF'
         CVT   DSECT=YES
         IEFUCBOB
DEVWORK  DSECT
DEVWK    DS    0CL44
DEVWKHEX DS    CL4
DEVWKCUU DS    CL3
         DS    CL2
DEVWKCLS DS    CL9
         DS    C
DEVWKVOL DS    CL6
         DS    CL3
DEVWKSTA DS    0CL16
DEVWKATT DS    C
DEVWKUSE DS    C
DEVWKRES DS    C
DEVWKOFF DS    C
DEVWKULD DS    C
DEVWKALL DS    C
DEVWKNRD DS    C
DEVWKBOX DS    C
DEVWKUNU DS    C
DEVWKRCT DS    CL5
UCBTABD  DSECT
UCBTAB   DS    0CL8
UCBDEVX  DS    CL3
UCBDEVM  DS    CL1
UCBPTR   DS    CL4
DEVSTUFF DSECT
DEVENTRY DS    0CL24
         DS    CL8
DEVCYL#  DS    CL2
         DS    CL14
*---     DEFINE ALL THE NECESSARY SPF VARIABLES AND CREATE A       ---*
*---     TEMPORARY SPF TABLE                                       ---*
DASDMAP  CSECT
         USING DASDMAP,R15
         STM   R14,R12,12(R13)
         BAL   R1,*+84
         DC    18F'0'
         DC    C'SAVEAREA'
         ST    R13,4(R1)                SAVE ADDRESS OF OLD SAVE AREA
         ST    R1,8(R13)                SAVE ADDRESS OF NEW SAVE AREA
         LR    R13,R1                   MAKE R13 NEW SAVE AREA ADDRESS
         LR    R11,R15                  MAKE R11 FIRST BASE REG
         LR    R12,R15                  MAKE R12
         A     R12,F4096                  THE SECOND BASE REG
         CNOP  0,4
         B     *+8
F4096    DC    F'4096'
         DROP  R15
         USING DASDMAP,R11,R12
         CALL  ISPLINK,(VDEFINE,DEF8,PRINTER,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,DEFDEV,DEV1,CHAR,L40),VL
         CALL  ISPLINK,(VDEFINE,DEFCM,ZCMD,CHAR,L40),VL
         CALL  ISPLINK,(TBOPEN,DEVTB),VL
         CALL  ISPLINK,(TBCREATE,DEVTB,,DEVPRMS),VL
*---     BUILD A TABLE WITH THE ADDRESSES OF ALL THE DASD UCBS     ---*
*---     IN THE SYSTEM                                             ---*
         L     R0,=A(8*MAXUCBS)    GET STORAGE FOR UCBS
         GETMAIN R,LV=(0)
         ST    R1,UCBTABAD         SAVE UCB TABLE ADDRESS
         LR    R2,R1               COPY ADDRESS INTO R2
         L     R3,16               GET CVT POINTER
         USING CVT,R3
         OI    UCBPARM1,X'80'      INDICATE LAST PARM IN LIST
         MVI   DEVCLASS,UCB3DACC   PUT DEVICE CLASS INTO PARM
         USING UCBOB,R4
         USING UCBTABD,R2
         SR    R5,R5               CLEAR R5 FOR UCB COUNT
NEXTUCB  EQU   *
         LA    R1,UCBPARM          GET ADDRESS OF IOSVSUCB PARMLIST
         L     R15,CVTUCBSC        GET ADDRESS OF IOSVSUCB ROUTINE
         BALR  R14,R15             GO TO IOSVSUCB
         LTR   R15,R15             HAVE WE COME TO END OF UCBS
         BNZ   ENDOFUCB            YES, GET OUT
         MVC   UCBPTR,UCBADR       PUT THE UCB ADDRESS INTO THE TABLE
         L     R4,UCBADR           GET THE UCB ADDRESS
         MVC   ADRHEX1,UCBNAME     CONVERT THE DEVICE
         BAL   R10,CONVHEX           ADDRESS TO HEX
         MVC   UCBDEVX,ADRHEX1     PUT HEX DEVICE ADDRESS IN TO TABLE
         LA    R5,1(R5)            COUNT THE UCBS IN THE TABLE
         LA    R2,L'UCBTAB(R2)     GO TO NEXT ENTRY IN THE UCB TABLE
         B     NEXTUCB             GO GET THE NEXT UCB ADDRESS
ENDOFUCB ST    R5,UCBCOUNT         SAVE THE NUMBER OF UCBS FOUND
*---                  GET 3380 MODEL TYPES                         ---*
         L     R0,=A(4*MAXUCBS)    GET STORAGE FOR UCB ADDRESSES
         GETMAIN R,LV=(0)
         ST    R1,UCBDEVT1         SAVE ADDRESS OF UCB ADDRESS TABLE
         SR    R4,R4               CLEAR R4
         M     R4,=A(L'DEVENTRY)   GET SIZE OF DEVTYPE OUTPUT AREA
         ST    R5,DEVASIZE         SAVE DEVTYPE OUTPUT AREA SIZE
         GETMAIN R,LV=(R5)         GET STORAGE FOR DEVTYPE OUTPUT AREA
         ST    R1,DEVAREA          SAVE THE ADDRESS OF DEVTYPE AREA
         L     R5,UCBCOUNT         GET NUMBER OF DASD UCBS
         L     R6,UCBDEVT1         GET ADDRESS OF UCB ADDRESS TABLE
         L     R2,UCBTABAD         GET UCB TABLE ADDRESS
BLDDTAB  MVC   0(4,R6),UCBPTR      GET A UCB
         LA    R6,4(R6)             ADDRESS LIST
         LA    R2,L'UCBTAB(R2)       IN A FORM ACCEPTABLE
         BCT   R5,BLDDTAB             FOR THE DEVTYPE MACRO
         L     R2,DEVAREA          GET THE DEVTYPE OUTPUT AREA ADDRESS
         L     R3,DEVASIZE         GET THE DEVTYPE OUTPUT AREA SIZE
         L     R4,UCBDEVT1         GET THE UCB ADDRESS TABLE ADDRESS
         L     R5,UCBCOUNT         GET THE NUMBER OF DASD UCBS
         DEVTYPE ,((R2),(R3)),UCBLIST=((R4),(R5)),MF=(E,DEVTL)
         L     R5,UCBCOUNT         GET THE NUMBER OF DASD UCBS
         L     R1,DEVAREA          GET ADDRESS OF DEVTYPE OUTPUT AREA
         USING DEVSTUFF,R1
         L     R2,UCBTABAD         GET UCB TABLE ADDRESS
DEVMLOOP CLC   DEVCYL#,MODELD      IS THIS A 3380 MODEL D
         BNE   TRYME               NO, GO CHECK FOR MODEL E
         MVI   UCBDEVM,C'D'        MOVE IN MODEL D INDICATOR
         B     NEXTDEVA            GO CHECK THE NEXT DEVICE
TRYME    CLC   DEVCYL#,MODELE      IS THIS A 3380 MODEL E
         BNE   TRYMK               NO, GO CHECK FOR MODEL K
         MVI   UCBDEVM,C'E'        MOVE IN MODEL E INDICATOR
         B     NEXTDEVA            GO CHECK THE NEXT DEVICE
TRYMK    CLC   DEVCYL#,MODELK      IS THIS A 3380 MODEL K
         BNE   TRYM1               NO, GO CHECK FOR 3390 MODEL 1
         MVI   UCBDEVM,C'K'        MOVE IN MODEL K INDICATOR
         B     NEXTDEVA            GO CHECK THE NEXT DEVICE
TRYM1    CLC   DEVCYL#,MODEL1      IS THIS A 3390 MODEL 1
         BNE   TRYM2               NO, GO CHECK FOR MODEL 2
         MVI   UCBDEVM,C'1'        MOVE IN MODEL K INDICATOR
         B     NEXTDEVA            GO CHECK THE NEXT DEVICE
TRYM2    CLC   DEVCYL#,MODEL2      IS THIS A 3390 MODEL 1
         BNE   BLNKMOD             NO, GO BLANK OUT THE MODEL
         MVI   UCBDEVM,C'2'        MOVE IN MODEL K INDICATOR
         B     NEXTDEVA            GO CHECK THE NEXT DEVICE
BLNKMOD  MVI   UCBDEVM,C' '        BLACK OUT THE MODEL INDICATOR
NEXTDEVA LA    R1,L'DEVENTRY(R1)   GO TO THE NEXT DEVICE TYPE INFO
         LA    R2,L'UCBTAB(R2)     GO TO NEXT ENTRY IN THE UCB TABLE
         BCT   R5,DEVMLOOP         GO ROUND THE LOOP
         L     R4,UCBDEVT1         GET ADDRESS OF UCB ADDRESS LIST
         L     R5,=A(4*MAXUCBS)    GET MAX SIZE OF UCB ADDRESS LIST
         FREEMAIN R,A=(R4),LV=(R5)
         L     R5,UCBCOUNT         GET NUMBER OF DASD UCBS
         SR    R4,R4               CLEAR R4
         M     R4,=A(L'DEVENTRY)   GET SIZE OF DEVTYPE OUTPUT AREA
         L     R4,DEVAREA          GET ADDRESS OF DEVTYPE OUTPUT AREA
         FREEMAIN R,A=(R4),LV=(R5)
*---     BUILD A TABLE CONTAINING ALL THE DASD ADDRESSES, DEVICE   ---*
*---     TYPES, VOLUME SERIAL NUMBERS AND STATUS                   ---*
         SR    R4,R4               CLEAR R4 FOR MULTIPLY
         M     R4,=A(L'DEVWK)      GET THE DEVICE DISPLAY TABLE SIZE
         ST    R5,DEVTBSZ          SAVE THE DEV TABLE SIZE
         GETMAIN R,LV=(5)
         ST    R1,DISPTABA         SAVE THE ADDRESS OF THE
         OI    DEVFLAG,SORTA       INDICATE DISPLAY SORTED BY ADDRESS
REFRESH  L     R3,DISPTABA         GET ADDRESS OF DEV DISPLAY TABLE
         L     R5,UCBCOUNT         GET THE NUMBER OF UCBS
         L     R2,UCBTABAD         GET ADDRESS OF TABLE OF UCBS
         BAL   R10,BUILDTB         GO BUILD THE UCB DISPLAY TABLE
         LTR   R6,R6               WERE ANY UCBS SELECTED
         BZ    NOENTRYS            NO, GO PUT OUT A MESSAGE
         BAL   R10,SORTTB          GO SORT THE DEVICE DISPLAY TABLE
*---     PUT ALL THE ENTRIES OF THE DISPLAY TABLE JUST BUILT INTO  ---*
*---     AN SPF TABLE AND DISPLAY IT                               ---*
         CALL  ISPLINK,(TBEND,DEVTB),VL
         CALL  ISPLINK,(TBCREATE,DEVTB,,DEVPRMS),VL
         L     R3,DISPTABA         GET THE ADDRESS OF DEV TABLE AGAIN
ADDLOOP  MVC   DEV1,BLANKS         CLEAR DEVICE
         MVC   DEV2,BLANKS           TABLE ENTRIES
         MVC   DEV1,4(R3)          MOVE DISPLAY TO LEFT SIDE OF SCREEN
         LA    R3,L'DEVWK(R3)      GO TO THE NEXT DEV TABLE ENTRY
         BCT   R6,MVRIGHT
         B     DOTBADD
MVRIGHT  MVC   DEV2,4(R3)          MOVE DISPLAY TO RIGHT SIDE OF SCREEN
         LA    R3,L'DEVWK(R3)      GO TO THE NEXT DEV TABLE ENTRY
DOTBADD  EQU   *
         CALL  ISPLINK,(TBADD,DEVTB),VL
         LTR   R6,R6               DID WE END WITH ONLY 1 ON THE LEFT
         BZ    ADDEND              YES, GET OUT OF LOOP
         BCT   R6,ADDLOOP          GO ADD MORE ENTRIES TO DISPLAY TABLE
ADDEND   MVI   MODFLAG,X'00'       INITIALIZE MODEL FLAG
         CALL  ISPLINK,(TBTOP,DEVTB),VL
         CALL  ISPLINK,(TBDISPL,DEVTB,ZDMAP),VL
CHECKRC  C     R15,=F'8'           DOES THE USER WANT TO EXIT
         BE    GETOUT              YES, RETURN
*---             PROCESS COMMANDS SENT BY THE USER                 ---*
         CLC   ZCMD(2),=C'A '      DO WE JUST WANT TO SORT BY ADDRESS?
         BE    CHGCMD              YES, THEN JUST CHANGE THE COMMAND
         CLC   ZCMD(2),=C'V '      DO WE JUST WANT TO SORT BY VOLUME?
         BNE   SKIPCHG             NO, THEN SKIP CHANGE OF COMMAND
CHGCMD   LA    R5,SAVECMD          GET ADDRESS OF PREVIOUS COMMAND
CHGCMDL  CLI   0(R5),C','          SEARCH FOR A COMMA
         BE    CMDCOMMA            GOT A COMMA
         CLI   0(R5),C' '          SEARCH FOR A BLANK
         BE    CMDBLNK             GOT A BLANK
         LA    R5,1(R5)            GO TO NEXT COMMAND CHARACTER
         B     CHGCMDL             KEEP LOOKING
CMDCOMMA LA    R5,1(R5)            GO TO NEXT COMMAND CHARACTER
         CLC   0(2,R5),=C'V '      CHECK
         BE    CHGIT                FOR
         CLC   0(2,R5),=C'V,'        SORT
         BE    CHGIT                  INDICATOR
         CLC   0(2,R5),=C'A '          IN
         BE    CHGIT                    THE
         CLC   0(2,R5),=C'A,'            PREVIOUS
         BE    CHGIT                      COMMAND
         B     CHGCMDL             NOT HERE GO CONTINUE THE SEARCH
CHGIT    MVC   0(1,R5),ZCMD        MOVE SORT INDICATOR TO COMMAND
         MVC   ZCMD,SAVECMD        GET THE OLD COMMAND
         B     CMDLOOPI            GO PROCESS THE COMMAND
CMDBLNK  CLI   SAVECMD,C' '        IS PREVIOUS COMMAND BLANK
         BE    CHGIT               GO MAKE SORT INDICATOR THE COMMAND
         MVI   0(R5),C','          ADD A COMMA
         LA    R5,1(R5)            GO TO NEXT COMMAND CHARACTER
         B     CHGIT               GO ADD SORT INDICATOR TO COMMAND
SKIPCHG  MVC   SAVECMD,ZCMD        SAVE THE COMMAND
SKIPSAVE CLC   ZCMD,BLANKS         IS THE COMMAND BLANKS ?
         BE    REFRESH             YES, GO REFRESH THE DISPLAY
CMDLOOPI LA    R5,ZCMD             GET THE ADDRESS OF THE COMMAND
CMDLOOP  CLI   0(R5),C'F'          INCLUDE OFF-LINE DEVICES ?
         BNE   CMD1                NO, SKIP IT
         OI    DEVFLAG,OFFLINE     INDICATE INCLUDE OFF-LINE DEVICES
         NI    DEVFLAG,NOGEN       TURN OFF GENERIC FLAG BIT
         NI    DEVFLAG,NORESRV     TURN OFF RESERVE FLAG BIT
         OI    DEVFLAG,SORTA       INDICATE SORT BY ADDRESS
         NI    DEVFLAG,NOADR       TURN OFF ADDRESS SELECTION BIT
         NI    MODFLAG,NOMODD      TURN OFF 3380 MODEL D BIT
         NI    MODFLAG,NOMODE      TURN OFF 3380 MODEL E BIT
         NI    MODFLAG,NOMODK      TURN OFF 3380 MODEL K BIT
         NI    MODFLAG,NOMOD1      TURN OFF 3390 MODEL 1 BIT
         NI    MODFLAG,NOMOD2      TURN OFF 3390 MODEL 2 BIT
         LA    R5,1(R5)            GO TO NEXT COMMAND CHARACTER
         B     TRYCOMMA            GO CHECK FOR A COMMA
CMD1     CLI   0(R5),C'O'          INCLUDE ON-LINE DEVICES ONLY ?
         BNE   CMD2                NO, SKIP IT
         NI    DEVFLAG,ONLINE      INDICATE INCLUDE ONLY ON-LINE DEVICES
         NI    DEVFLAG,NOADR       TURN OFF ADDRESS SELECTION BIT
         NI    DEVFLAG,NOGEN       TURN OFF GENERIC FLAG BIT
         NI    DEVFLAG,NORESRV     TURN OFF RESERVE FLAG BIT
         NI    MODFLAG,NOMODD      TURN OFF 3380 MODEL D BIT
         NI    MODFLAG,NOMODE      TURN OFF 3380 MODEL E BIT
         NI    MODFLAG,NOMODK      TURN OFF 3380 MODEL K BIT
         NI    MODFLAG,NOMOD1      TURN OFF 3390 MODEL 1 BIT
         NI    MODFLAG,NOMOD2      TURN OFF 3390 MODEL 2 BIT
         LA    R5,1(R5)            GO TO NEXT COMMAND CHARACTER
         B     TRYCOMMA            GO CHECK FOR A COMMA
CMD2     CLI   0(R5),C'R'          INCLUDE RESERVED DEVICES ONLY ?
         BNE   CMD3                NO, SKIP IT
         OI    DEVFLAG,RESERVE     INDICATE RESERVED DEVICES
         LA    R5,1(R5)            GO TO NEXT COMMAND CHARACTER
         B     TRYCOMMA            GO CHECK FOR A COMMA
CMD3     CLC   VE,0(R5)            GENERIC VOLSER DISPLAY ?
         BNE   CMD4                NO, SKIP IT
         LA    R5,2(R5)            GET PAST   V=
         LA    R6,7                GET MAX SIZE OF VOLSER + 1
         LR    R8,R5               SAVE START ADDRESS OF VOLSER
VOLLOOP  CLI   0(R5),C','          , ?
         BE    OUT1                YES, DONE
         CLI   0(R5),C' '          BLANK ?
         BE    OUT1                YES, DONE
         LA    R5,1(R5)            GO TO NEXT VOLSER CHARACTER
         BCT   R6,VOLLOOP          GO CHECK IT OUT
         B     VOLTOBIG            VOLSER IS LARGER THAN 6 CHARACTERS
OUT1     LA    R7,6                GET MAX SIZE OF VOLSER
         BCTR  R6,0                SUBTRACT 1
         SR    R7,R6               GET THE SIZE OF THE VOLSER
         LTR   R7,R7               IS THE VOLSER LENGTH ZERO ?
         BZ    NOVOLSER            NO, GO PUT OUT A MESSAGE
         ST    R7,GENLEN           SAVE THE VOLSER LENGTH
         BCTR  R7,0                SUBTRACT 1 FOR EX INSTRUCTIONS
         MVC   GENVOL,BLANKS       BLANK OUT THE AREA FOR THE VOLSER
         EX    R7,MVVOL            MOVE THE VOLSER INTO THE AREA
         OI    DEVFLAG,GENERIC     INDICATE GENERIC VOLSER
         NI    DEVFLAG,ONLINE      INDICATE INCLUDE ONLY ONLINE DEVICES
         NI    DEVFLAG,SORTV       INDICATE SORT BY VOLSER
         NI    DEVFLAG,NOADR       TURN OFF ADDRESS SELECTION BIT
         NI    MODFLAG,NOMODD      TURN OFF 3380 MODEL D BIT
         NI    MODFLAG,NOMODE      TURN OFF 3380 MODEL E BIT
         NI    MODFLAG,NOMODK      TURN OFF 3380 MODEL K BIT
         NI    MODFLAG,NOMOD1      TURN OFF 3390 MODEL 1 BIT
         NI    MODFLAG,NOMOD2      TURN OFF 3390 MODEL 2 BIT
         B     TRYCOMMA            GO CHECK FOR A COMMA
CMD4     CLC   AE,0(R5)            IS THIS AN ADDRESS SPECIFICATION ?
         BNE   CMD5                NO, SKIP IT
         LA    R5,2(R5)            GET PAST  A=
         MVC   ADRHEX1,0(R5)       CONVERT THE SPECIFIED
         BAL   R10,CONVHEX           DEVICE ADDRESS TO HEX
         MVC   ADR1,ADRHEX1        AND PUT IT WHERE WE CAN USE IT LATER
         LA    R5,3(R5)            GET PAST DEVICE ADDRESS IN COMMAND
         CLI   0(R5),C'-'          IS THERE A TO ADDRESS ?
         BE    SECNDADR            YES, SKIP BLANK OUT OF SECOND ADDR
         MVC   ADR2,BLANKS         BLANK OUT THE SECOND ADDRESS
         B     DONEADR             SKIP 2ND DEVICE ADDRESS PROCESSING
SECNDADR LA    R5,1(R5)            GET ADDRESS OF 2ND DEVICE ADDRESS
         MVC   ADRHEX1,0(R5)       CONVERT THE SECOND
         BAL   R10,CONVHEX           DEVICE ADDRESS TO HEX
         MVC   ADR2,ADRHEX1        AND PUT IT WHERE WE CAN USE IT LATER
         LA    R5,3(R5)            GET PAST DEVICE ADDRESS IN COMMAND
DONEADR  OI    DEVFLAG,ADR         INDICATE SELECTED DEVICE ADDRESSES
         OI    DEVFLAG,OFFLINE     INDICATE INCLUDE OFFLINE ADDRESSES
         NI    DEVFLAG,NORESRV     INDICATE NOT RESERVED DEVS ONLY
         NI    DEVFLAG,NOGEN       INDICATE NOT VOLSER SELECTION
         OI    DEVFLAG,SORTA       INDICATE SORT BY ADDRESS
         B     TRYCOMMA            GO CHECK FOR A COMMA
CMD5     CLI   0(R5),C'A'          USER WANTS SORT BY ADDRESSES ?
         BNE   CMD6                NO, SKIP IT
         OI    DEVFLAG,SORTA       INDICATE SORT BY DEVICE ADDRESS
         LA    R5,1(R5)            GET PAST THE   A   IN COMMAND
         B     TRYCOMMA            GO CHECK FOR A COMMA
CMD6     CLI   0(R5),C'V'          USER WANT SORT BY VOLSER ?
         BNE   CMD7                NO, GO CHECK FOR MODEL REQUEST
         NI    DEVFLAG,SORTV       INDICATE SORT BY VOLSER
         LA    R5,1(R5)            GET PAST THE   V   IN COMMAND
         B     TRYCOMMA            GO CHECK FOR A COMMA
CMD7     CLI   0(R5),C'M'          IS THIS A DASD MODEL REQUEST ?
         BNE   BADCMD              NO, INVALID COMMAND
         CLI   2(R5),C'D'          IS REQUEST FOR MODEL DS ?
         BNE   CMDME               NO, GO CHECK FOR MODEL ES
         MVI   MODFLAG,MODD        INDICATE MODEL DS REQUESTED
         LA    R5,3(R5)            GET PAST MODEL SPECIFICATION
         B     TRYCOMMA            GO CHECK FOR ANOTHER COMMAND
CMDME    CLI   2(R5),C'E'          IS REQUEST FOR MODEL ES ?
         BNE   CMDMK               NO, GO CHECK FOR MODEL KS
         MVI   MODFLAG,MODE        INDICATE MODEL ES REQUESTED
         LA    R5,3(R5)            GET PAST MODEL SPECIFICATION
         B     TRYCOMMA            GO CHECK FOR ANOTHER COMMAND
CMDMK    CLI   2(R5),C'K'          IS REQUEST FOR MODEL KS ?
         BNE   CMDM1               NO, INVALID COMMAND
         MVI   MODFLAG,MODK        INDICATE MODEL KS REQUESTED
         LA    R5,3(R5)            GET PAST MODEL SPECIFICATION
         B     TRYCOMMA            GO CHECK FOR ANOTHER COMMAND
CMDM1    CLI   2(R5),C'1'          IS REQUEST FOR MODEL 1S ?
         BNE   CMDM2               NO, INVALID COMMAND
         MVI   MODFLAG,MOD1        INDICATE MODEL 1S REQUESTED
         LA    R5,3(R5)            GET PAST MODEL SPECIFICATION
         B     TRYCOMMA            GO CHECK FOR ANOTHER COMMAND
CMDM2    CLI   2(R5),C'2'          IS REQUEST FOR MODEL 2S ?
         BNE   BADCMD              NO, INVALID COMMAND
         MVI   MODFLAG,MOD2        INDICATE MODEL 2S REQUESTED
         LA    R5,3(R5)            GET PAST MODEL SPECIFICATION
TRYCOMMA CLI   0(R5),C','          ARE WE AT A COMMA ?
         BNE   CHKBLNK             NO, GO CHECK FOR A BLANK
         LA    R5,1(R5)            GO TO THE NEXT CHARACTER IN CMD
         B     CMDLOOP             GO PROCESS NEXT CMD CHARACTER
CHKBLNK  CLI   0(R5),C' '          END OF COMMAND INPUT ?
         BE    REFRESH             YES, GO REFRESH THE SCREEN
         B     CMDLOOP             GO PROCESS NEXT CMD CHARACTER
MVVOL    MVC   GENVOL(0),0(R8)     MOVE VOLSER SPECIFICATION
*---              CONVERT CHARACTER TO HEX FORMAT                  ---*
CONVHEX  TR    ADRHEX1,TRTABLE-X'C0'
         L     R6,ADRHEX
         SR   R7,R7
         SRDL R6,4              MOVE THE BITS WE WANT
         SRL  R6,4              PUSH OUT THE BITS WE DON'T WANT
         SRDL R6,4              MOVE THE BITS WE WANT
         SRL  R6,4              PUSH OUT THE BITS WE DON'T WANT
         SRDL R6,4              MOVE THE BITS WE WANT
         SRL  R7,20             RIGHT JUSTIFY THE HEX ADDRESS
         ST   R7,ADRHEX         SAVE THE HEX ADDRESS
         BR    R10
*---                      PUT OUT MESSAGES                         ---*
BADCMD   CALL  ISPLINK,(TBDISPL,DEVTB,ZDMAP,MSG1),VL
         B     CHECKRC             GO CHECK RETURN CODE
NOENTRYS CALL  ISPLINK,(TBDISPL,DEVTB,ZDMAP,MSG2),VL
         B     CHECKRC
VOLTOBIG CALL  ISPLINK,(TBDISPL,DEVTB,ZDMAP,MSG3),VL
         B     CHECKRC
NOVOLSER CALL  ISPLINK,(TBDISPL,DEVTB,ZDMAP,MSG4),VL
         B     CHECKRC
*---     BUILD THE DISPLAY TABLE WITH THE DEVICE ADDRESS, VOLUME   ---*
*---     SERIAL NUMBER, DEVICE TYPE AND STATUS                     ---*
         USING DEVWORK,R3
BUILDTB  L     R2,UCBTABAD         GET THE UCB TABLE ADDRESS
         S     R2,=A(L'UCBTAB)     BACK UP TO BEFORE THE TABLE
         SR    R6,R6               CLEAR SELECTION COUNT
NEXTUCB1 LA    R2,L'UCBTAB(R2)     GET THE NEXT UCB TABLE ENTRY
         L     R4,UCBPTR           GET THE NEXT UCB ADDRESS
         MVC   DEVWK,BLANKS        BLANK OUT THE DEVICE WORK AREA
         TM    DEVFLAG,ADR         WAS ADDRESS OR ADDRESS RANGE WANTED
         BZ    SKIPADR             NO, SKIP IT
         OI    DEVFLAG,OFFLINE     INCLUDE OFF-LINE DEVICES
         NI    DEVFLAG,NOGEN       INDICATE NO VOLSER SPECIFICATION
         CLC   ADR2,BLANKS         IS TO ADDRESS BLANKS ?
         BNE   TWOADRS             NO, THEN WE HAVE AN ADDRESS RANGE
         CLC   ADR1,UCBDEVX        IS THIS THE ADDRESS WANTED ?
         BNE   SKIPIT              NO, SKIP TO NEXT UCB
         B     SKIPADR             CONTINUE
TWOADRS  CLC   ADR1,UCBDEVX        IS DEVICE ADDRESS TOO SMALL ?
         BH    SKIPIT              YES, SKIPIT
         CLC   ADR2,UCBDEVX        IS DEVICE ADDRESS TOO BIG ?
         BL    SKIPIT              YES, SKIPIT
SKIPADR  TM    UCBSTAT,UCBONLI     IS THIS DEVICE ON-LINE ?
         BO    DOONLINE            YES, SKIP OFF-LINE MESSAGE
         TM    DEVFLAG,OFFLINE     ARE OFF-LINE DEVICES INCLUDED ?
         BZ    SKIPIT              NO, SKIP THE REST OF THE SCAN
         MVC   DEVWKCUU,UCBNAME    GET THE DEVICE ADDRESS
         CLC   UCBTBYT3(2),=X'200E'   IS THIS DASD A 3380 ?
         BNE   D3390               NO, GO CHECK FOR 3390
         TM    MODFLAG,MODL       WAS PARTICULAR 3380 MODEL SPECIFIED ?
         BZ    SKIPMODT            NO, SKIP 3380 MODEL PROCESSING
         CLI   UCBDEVM,C'D'        IS THIS 3380 A MODEL D ?
         BNE   TRYME2              NO, GO CHECK FOR A MODEL E
         CLI   MODFLAG,MODD        WERE MODEL DS REQUESTED ?
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
         B     SKIPMODT
TRYME2   CLI   UCBDEVM,C'E'        IS THIS 3380 A MODEL E ?
         BNE   TRYMK2              NO, GO CHECK FOR A MODEL K
         CLI   MODFLAG,MODE        WERE MODEL ES REQUESTED ?
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
         B     SKIPMODT
TRYMK2   CLI   UCBDEVM,C'K'        IS THIS 3380 A MODEL K ?
         BNE   SKIPIT              NO, DO NOT DISPLAY THIS ONE
         CLI   MODFLAG,MODK        WERE MODEL KS REQUESTED ?
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
SKIPMODT MVC   DEVWKCLS,=CL9'3380' INDICATE THIS IS A 3380
*        MVC   DEVWKCLS+5(1),UCBDEVM  GET THE 3380 MODEL
         B     SKIPUNK             SKIP UNKNOWN INDICATION
D3390    CLC   UCBTBYT3(2),=X'200F'   IS THIS DASD A 3390 ?
         BNE   DUNKNWN             NO, GO PUT UNKNOWN AS DEVICE TYPE
         TM    MODFLAG,MODL        WAS PARTICULAR MODEL 3390 SPECIFIED
         BZ    SKIPMOD9            NO, SKIP 3390 MODEL PROCESSING
         CLI   UCBDEVM,C'1'        IS THIS 3390 SINGLE DENSITY ?
         BNE   TRYM22              NO, GO CHECK FOR A DOUBLE DENSITY
         CLI   MODFLAG,MOD1        WERE SINGLE DENSITIES REQUESTED ?
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
         B     SKIPMOD9
TRYM22   CLI   UCBDEVM,C'2'        IS THIS 3390 DOUBLE DENSITY ?
         BNE   SKIPIT              NO, GO CHECK FOR A TRIPLE DENSITY
         CLI   MODFLAG,MOD2        WERE DOUBLE DENSITIES REQUESTED ?
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
SKIPMOD9 MVC   DEVWKCLS,=CL9'3390' INDICATE THIS IS A 3390
*        MVC   DEVWKCLS+5(1),UCBDEVM  GET THE 3390 MODEL
         B     SKIPUNK             SKIP UNKNOWN INDICATION
DUNKNWN  MVC   DEVWKCLS,=CL9'UNKNOWN'
SKIPUNK  MVC   DEVWKSTA,=CL16'*** OFFLINE ***'  UPDATE STATUS
         B     STATDONE
COMPVOL  CLC   UCBVOLI(0),GENVOL   COMPARE VOLSER IN UCB
DOONLINE EQU   *
         CLC   UCBTBYT3(2),=X'200E'   IS THIS DASD A 3380 ?
         BNE   D33901              NO, GO CHECK FOR 3390
         TM    MODFLAG,MODL        WAS PARTICULAR MODEL 3380 SPECIFIED
         BZ    SKIPMODL            NO, SKIP 3380 MODEL PROCESSING
         CLI   UCBDEVM,C'D'        IS THIS 3380 A MODEL D ?
         BNE   TRYME1              NO, GO CHECK FOR A MODEL E
         CLI   MODFLAG,MODD        WERE MODEL DS REQUESTED
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
         B     SKIPMODL
TRYME1   CLI   UCBDEVM,C'E'        IS THIS 3380 A MODEL E ?
         BNE   TRYMK1              NO, GO CHECK FOR A MODEL K
         CLI   MODFLAG,MODE        WERE MODEL ES REQUESTED
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
         B     SKIPMODL
TRYMK1   CLI   UCBDEVM,C'K'        IS THIS 3380 A MODEL K ?
         BNE   SKIPIT              NO, DO NOT DISPLAY THIS ONE
         CLI   MODFLAG,MODK        WERE MODEL KS REQUESTED
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
SKIPMODL MVC   DEVWKCLS,=CL9'3380' INDICATE THIS IS A 3380
         MVC   DEVWKCLS+5(1),UCBDEVM  GET THE 3380 MODEL
         B     SKIPUNK1
D33901   CLC   UCBTBYT3(2),=X'200F'   IS THIS DASD A 3390 ?
         BNE   DUNKNWN1            NO, GO PUT UNKNOWN AS DEVICE TYPE
         TM    MODFLAG,MODL        WAS PARTICULAR MODEL 3390 SPECIFIED
         BZ    SKIPMODA            NO, SKIP 3390 MODEL PROCESSING
         CLI   UCBDEVM,C'1'        IS THIS 3390 A SINGLE DENSITY ?
         BNE   TRYM12              NO, GO CHECK FOR A DOUBLE DENSITY
         CLI   MODFLAG,MOD1        WERE SINGLE DENSITYS REQUESTED
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
         B     SKIPMODA
TRYM12   CLI   UCBDEVM,C'2'        IS THIS 3390 A DOUBLE DENSITY ?
         BNE   SKIPIT              NO, DO NOT DISPLAY THIS ONE
         CLI   MODFLAG,MOD2        WERE DOUBLE DENSITYS REQUESTED
         BNE   SKIPIT              NO, DO NOT INCLUDE THIS 1 IN DISPLAY
SKIPMODA MVC   DEVWKCLS,=CL9'3390' INDICATE THIS IS A 3390
         MVC   DEVWKCLS+5(1),UCBDEVM  GET THE 3390 MODEL
         B     SKIPUNK1
DUNKNWN1 MVC   DEVWKCLS,=CL9'UNKNOWN'
SKIPUNK1 MVC   DEVWKCUU,UCBNAME    GET THE DEVICE ADDRESS
         MVC   DEVWKVOL,UCBVOLI    GET THE VOLSER
         TM    DEVFLAG,GENERIC     WAS VOLSER SELECT SPECIFIED
         BZ    TSTSYRES            NO, CONTINUE
         L     R7,GENLEN           GET THE VOLSER LENGTH
         BCTR  R7,0                SUBTRACT 1 FOR EXECUTE INSTRUCTION
         EX    R7,COMPVOL          IS IT A SPECIFIED VOLSER ?
         BNE   SKIPIT              NO, SKIP THIS UCB
TSTSYRES TM    UCBSTAT,UCBSYSR     STATUS SYSTEM RESIDENCE ?
         BZ    TSTPERM             NO, TEST IF PERMANENT
         MVI   DEVWKATT,C'S'       FLAG SYSTEM RESIDENCE
         B     TSTSTYPE            TEST STORAGE TYPE
TSTPERM  EQU   *
         TM    UCBSTAT,UCBPRES     STATUS PERMANENTLY RESIDENT?
         BZ    REMOVABL            NO, REMOVABLE
         MVI   DEVWKATT,C'P'       FLAG PERMANENT
         B     TSTSTYPE            TEST STORAGE TYPE
REMOVABL EQU   *
         MVI   DEVWKATT,C'R'       FLAG REMOVABLE
TSTSTYPE EQU   *
         TM    UCBSTAB,UCBBPRV     VOLUME USAGE PRIVATE ?
         BZ    TSTSTOR             NO, TEST STORAGE
         MVI   DEVWKUSE,C'P'       YES, FLAG PRIVATE
         B     TSTRESV                 TEST DEVICE STATUS
TSTSTOR  EQU   *
         TM    UCBSTAB,UCBBSTR     VOLUME USAGE STORAGE ?
         BZ    TSTPUB              NO, TEST PUBLIC
         MVI   DEVWKUSE,C'S'       YES, FLAG STORAGE
         B     TSTRESV                 TEST DEVICE STATUS
TSTPUB   EQU   *
         TM    UCBSTAB,UCBBPUB     VOLUME USAGE PUBLIC ?
         BZ    TSTRESV             NO, MAKE NO ASSUMPTIONS
         MVI   DEVWKUSE,C'C'       YES, FLAG PUBLIC
TSTRESV  EQU   *
         TM    UCBSTAT,UCBRESV     STATUS RESERVED ?
         BZ    TSTOFF              NO
         MVI   DEVWKRES,C'R'       FLAG RESERVED
*** DEVICE STATUS INFORMATION
TSTOFF   EQU   *
         TM    UCBSTAT,UCBCHGS     STATUS OFF-LINE PENDING ?
         BZ    TESTUNLD            NO
         MVI   DEVWKOFF,C'V'       FLAG OFF-LINE PENDING
TESTUNLD EQU   *
         TM    UCBSTAT,UCBUNLD     STATUS UNLOAD PENDING ?
         BZ    TESTALC             NO
         MVI   DEVWKULD,C'U'       FLAG UNLOAD PENDING
TESTALC  EQU   *
         TM    UCBSTAT,UCBALOC     STATUS ALLOCATED ?
         BZ    TESTUSGE            NO, TEST DEVICE USAGE
         MVI   DEVWKALL,C'A'       FLAG ALLOCATED
*** DEVICE USAGE INFORMATION
TESTUSGE EQU   *
         TM    UCBFL1,UCBNOTRD     DEVICE NOT READY ?
         BZ    TSTBOX              NO, TEST IF DEVICE IS BOXED
         MVI   DEVWKNRD,C'N'       YES, FLAG NOT READY
TSTBOX   EQU   *
         TM    UCBFL1,UCBBOX       HAS THIS DEVICE BEEN BOXED OFF-LINE?
         BZ    TSTSUBU             NO, TEST SUBCHANNEL UNUSABLE
         MVI   DEVWKBOX,C'B'       YES, FLAG DEVICE BOXED
TSTSUBU  EQU   *
         TM    UCBFL1,UCBPERM      SUBCHANNEL FOR THIS DEVICE UNUSABLE
         BZ    RESVCNT             NO, FINISHED
         MVI   DEVWKUNU,C'U'       YES, FLAG SUBCHANNEL UNUSABLE
*** RESERVE MACRO COUNT
RESVCNT  EQU   *
         XR    R0,R0               CLEAR REGISTER ZERO
         IC    R0,UCBSQC           GET # OF RESERVE MACROS
         LTR   R0,R0               IS THE RESERVE COUNT ZERO ?
         BNZ   WANTRES             NO, THEN WE WANT IT ANYWAY
         TM    DEVFLAG,RESERVE     DO WE WANT ONLY RESERVED DEVICES ?
         BO    SKIPIT              YES, SKIP ADD TO TABLE
WANTRES  CVD   R0,DOUBLE           CONVERT TO PACKED DECIMAL
         OI    DOUBLE+7,X'0F'      ADD SIGN
         LA    R1,DEVWKRCT         GET ADDRESS FOR RESERVE COUNT
         MVC   0(2,R1),=C'R='      ADD RESERVE LITERAL
         UNPK  2(3,R1),DOUBLE+6(2) UNPACK RESERVE MACRO COUNT
STATDONE LA    R6,1(R6)            ADD 1 TO # OF ENTRIES IN DISPLAY TAB
         LA    R3,L'DEVWK(R3)      GO TO NEXT ENTRY IN DISPLAY TABLE
SKIPIT   BCT   R5,NEXTUCB1         GO SCAN THE NEXT UCB
         BR    R10                 RETURN
*---     SORT THE DEVICE DISPLAY TABLE BY ADDRESS OR VOLSER        ---*
SORTTB   L     R3,DISPTABA         GET THE ADDRESS OF DEV TAB FOR SORT
         LR    R1,R6               SAVE THE NUMBER OF DISPLAY ENTRIES
         LR    R7,R6               GET TOTAL
         SR    R6,R6                 SIZE OF ALL
         M     R6,=A(L'DEVWK)          DISPLAY ENTRIES
         AR    R7,R3               GET ADDRESS OF END OF TABLE
         LR    R6,R1               RESTORE NUMBER OF DISPLAY ENTRIES
         C     R6,=F'1'            IS THERE ONLY 1 ENTRY ?
         BE    SORTBYAD            YES, SORT BY ADDRESS ANYWAY
         TM    DEVFLAG,SORTA       SORT BY DEVICE ADDRESS ?
         BZ    SORTBYVL            NO, GO SORT BY VOLSER
SORTBYAD EQU   *
         SORT  FIELD=0,LEN=4,ENTLEN=44,TABADDR=(R3),TABEND=(R7)
         B     DONESORT
SORTBYVL EQU   *
         SORT  FIELD=19,LEN=6,ENTLEN=44,TABADDR=(R3),TABEND=(R7)
DONESORT BR    R10                 RETURN
*---          TERMINATE THE DISPLAY TABLE AND EXIT PROGRAM         ---*
GETOUT   EQU   *
         CALL  ISPLINK,(TBEND,DEVTB),VL
         L     R4,DISPTABA         GET THE DEVICE DISPLAY TABLE ADDRESS
         L     R5,DEVTBSZ          GET THE DEVICE DISPLAY TABLE SIZE
         FREEMAIN R,A=(R4),LV=(R5)
         L     R4,UCBTABAD         GET THE UCB TABLE ADDRESS
         L     R5,=A(8*4096)       GET THE UCB TABLE SIZE
         FREEMAIN R,A=(R4),LV=(R5)
         L     R13,4(R13)       GET THE ADDRESS OF THE OLD SAVEAREA
         LA    R15,0            SET RETURN CODE TO ZERO
         LM    R0,R12,20(R13)   RESTORE REGISTERS
         L     R14,12(R13)      GET RETURN ADDRESS
         BR    R14              RETURN
         LTORG
N4       DC    CL1'4'
N5       DC    CL1'5'
N6       DC    CL1'6'
L40      DC    AL4(40)
L8       DC    AL4(8)
VDEFINE  DC    CL8'VDEFINE'
TBOPEN   DC    CL8'TBOPEN'
TBADD    DC    CL8'TBADD'
TBTOP    DC    CL8'TBTOP'
TBEND    DC    CL8'TBEND'
TBDISPL  DC    CL8'TBDISPL'
TBCREATE DC    CL8'TBCREATE'
CHAR     DC    CL8'CHAR'
ZDMAP    DC    CL8'ZDMAP'
MSG1     DC    CL8'ZMDM001A'
MSG2     DC    CL8'ZMDM002A'
MSG3     DC    CL8'ZMDM003A'
MSG4     DC    CL8'ZMDM004A'
MSG5     DC    CL8'ZMDM005A'
DEFCM    DC    CL6'(ZCMD)'
DEF8     DC    CL9'(PRINTER)'
DEVTB    DC    CL8'DEVTB'
DEFDEV   DC    CL11'(DEV1 DEV2)'
DEVPRMS  DC    CL11'(DEV1 DEV2)'
PRINTER  DC    CL8' '
SAVECMD  DC    CL40' '
ZCMD     DC    CL40' '
DEV1     DC    CL40' '
DEV2     DC    CL40' '
VE       DC    CL2'V='
AE       DC    CL2'A='
GENLEN   DC    F'0'
GENVOL   DC    CL6' '
ADR1     DC    CL3' '
ADR2     DC    CL3' '
ADRHEX   DS    0F
         DC    X'00'
ADRHEX1  DC    XL3'00'
TRTABLE  DC    X'00FAFBFCFDFEFF000000000000000000'   X'C0' TO X'CF'
         DC    X'00000000000000000000000000000000'   X'D0' TO X'DF'
         DC    X'00000000000000000000000000000000'   X'E0' TO X'EF'
         DC    X'F0F1F2F3F4F5F6F7F8F9000000000000'   X'F0' TO X'FF'
DEVFLAG  DC    X'00'
ONLINE   EQU   X'FE'
OFFLINE  EQU   X'01'
SORTA    EQU   X'02'
SORTV    EQU   X'FD'
RESERVE  EQU   X'04'
NORESRV  EQU   X'FB'
GENERIC  EQU   X'08'
NOGEN    EQU   X'F7'
ADR      EQU   X'10'
NOADR    EQU   X'EF'
MODFLAG  DC    X'00'
MODD     EQU   X'01'
NOMODD   EQU   X'FE'
MODE     EQU   X'02'
NOMODE   EQU   X'FD'
MODK     EQU   X'03'
NOMODK   EQU   X'FC'
MOD1     EQU   X'04'
NOMOD1   EQU   X'FB'
MOD2     EQU   X'05'
NOMOD2   EQU   X'FA'
MODL     EQU   X'0F'
DOUBLE   DC    D'0'
         DS    0F
UCBPARM  DC    A(UCBWK)          UCB
         DC    A(DEVCLASS)         SEARCH
UCBPARM1 DC    A(UCBADR)             PARMS
         DS    0D                      |
UCBWK    DC    100XL1'00'              |
DEVCLASS DC    X'00'                   |
UCBADR   DC    F'0'                    V
*                                  ----------
MAXUCBS  EQU   4096
UCBTABAD DC    F'0'
DEVTBSZ  DC    F'0'
DISPTABA DC    F'0'
UCBCOUNT DC    F'0'
DEVAREA  DC    F'0'
DEVASIZE DC    F'0'
UCBDEVT1 DC    F'0'
MODELD   DC    H'886'
MODELE   DC    H'1771'
MODELK   DC    H'2656'
MODEL1   DC    H'1114'
MODEL2   DC    H'2227'
BLANKS   DC    CL44' '
DEVTL    DEVTYPE ,UCBLIST=YES,MF=L
         END


Gary Smith
Senior Systems Programmer (Canada)                                     c Xephon

