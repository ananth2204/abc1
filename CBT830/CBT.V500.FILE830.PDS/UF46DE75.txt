Preventing duplicate started tasks

When operators have to start and stop started tasks manually,
the potential exists for starting the same PROC more than once.
This is usually no more than a nuisance: the STC gets hung as
indicated by the message 'waiting for datasets'. This then
requires the 'D J,' command followed by the 'C
STARTING,A=' command to get rid of the duplicate. This
small program will eliminate the problem. Simply execute the
program as the first step in the PROC. If a PROC by the same
name is already running, the program will abend and end the
task. The following JCL illustrates its use.

      //CICSPROD  PROC
      //DUPLSTC   EXEC PGM=DUPLSTC
      //CICS      EXEC PGM=DFHSIP,REGION=......
      // ... remainder of PROC ...

If another copy of CICSPROD is running, the DUPLSTC
program will put out a message to the console and abend. This
program can save the operators (and yourself) a little time
should a duplicate 'START procname' command be issued.
The program has been tested under MVS/ESA Version 3 up to
MVS/ESA 3.2.1.

DUPLSTC  CSECT
DUPLSTC  AMODE 24
DUPLSTC  RMODE 24
*   THIS PROGRAM WILL CHECK AND SEE IF AN STC OF THE SAME NAME IS
*   ALREADY RUNNING.  IF SO, IT WILL WRITE A CONSOLE MESSAGE AND
*   THEN ABEND.  THIS PGM CAN BE USED BY ANY STARTED TASK TO MAKE
*   SURE ONLY ONE COPY IS ACTIVE AT A TIME.
         COPY  REGEQU
         STM   R14,R12,12(R13)    SAVE REGS
         LR    R12,R15            LOAD BASE REG
         USING DUPLSTC,R12        ADDRESSABILITY
         LA    R15,SAVEA          SET UP ....
         ST    R13,4(R15)         ... SAVE ...
         ST    R15,8(R13)         ... AREA ...
         LA    R13,SAVEA          ... LINKAGE
*   FIRST, GET OUR PROC (STC) NAME.
         L     R2,CVTPTR          POINT TO CVT
         USING CVTMAP,R2          ADDRESS CVT
         L     R2,CVTTCBP         POINT TO TCBWORDS
         DROP  R2
         L     R3,12(R2)          GET ADDRESS OF OUR ASCB
         USING ASCB,R3            ADDRESS ASCB
         CLC   ASCBJBNS,=F'0'     ARE WE A STARTED TASK ?
         BE    RETURN0            IF NOT, EXIT WITH RC=0
         L     R4,ASCBJBNS        GET ADDRESS OF STC PROC NAME
         CLC   0(8,R4),=CL8'INIT' ARE WE IN AN INITIATOR ?
         BE    RETURN0            IF SO, EXIT WITH RC=0
         MVC   OURNAME,0(R4)      COPY TO OUR WKS
         MVC   OURASID,ASCBASID   COPY OUR ASID
         DROP  R3
*   NOW RUN THRU ALL ASCBS LOOKING FOR DUPLICATE STC PROC NAME
         L     R2,CVTPTR          POINT TO CVT
         USING CVTMAP,R2          ADDRESS CVT
         L     R3,CVTASVT         POINT TO AS VECTOR TABLE
         USING ASVT,R3            ADDRESS ASVT
         LA    R5,ASVTFRST        ADDRESS OF 1ST ENTRY IN ASVT
         L     R6,ASVTMAXU        MAX ADDRESS SPACES
ASVTLOOP TM    0(R5),ASVTAVAI     IS ADDRESS SPACE UNUSED ?
         BNO   CHKASCB            IF IN USE, WE MUST CHECK IT OUT
         C     R5,=A(X'80000000') ELSE, IS IT LAST ASCB IN CHAIN ?
         BE    RETURN0            IF SO, WE ARE DONE (NO DUPLICATE)
NEXTASVT LA    R5,L'ASVTENTY(R5)  SKIP TO NEXT ASVT ENTRY
         BCT   R6,ASVTLOOP        AND KEEP LOOKING
         B     RETURN0            DONE, EXIT WITH RC=0
CHKASCB  L     R4,0(R5)           ADDRESS OF ASCB FROM ASVT
         USING ASCB,R4            ADDRESS ASCB
         CLC   ASCBASID,OURASID   IS THIS OUR ASID ?
         BE    NEXTASVT           IF SO, SKIP TO NEXT ASVT ENTRY
         CLC   ASCBJBNS,=F'0'     IS THIS A STARTED TASK ?
         BE    NEXTASVT           IF NOT, SKIP TO NEXT ASVT ENTRY
         L     R7,ASCBJBNS        GET POINTER TO STC PROC NAME
         CLC   0(8,R7),OURNAME    SOMEBODY ELSE RUNNING THIS PROC ?
         BNE   NEXTASVT           IF NOT, SKIP TO NEXT ASVT ENTRY
* AN STC WITH THE SAME PROC NAME AS OURSELVES IS RUNNING
         MVC   DUPLMSG+13(8),OURNAME COPY OUR PROC NAME TO MSG
         LA    R6,DUPLMSG         POINT TO WTO LIST
         WTO   MF=(E,(6))         WRITE TO OPERATOR
         ABEND 1
*  RETURN FROM PROGRAM NORMALLY
RETURN0  DS    0H                 RETURN WITH 0 RC
         L     R13,4(R13)         GET OLD SAVE AREA ADDRESS
         LM    R14,R12,12(R13)    RESTORE REGS
         SR    R15,R15            SET RETURN CODE TO 0
         BR    R14                RETURN
*   WORKING STORAGE
SAVEA    DC    18F'0'             SAVE AREA
OURNAME  DC    CL8' '             OUR STC NAME
OURASID  DC    H'0'               OUR ASID
DUPLMSG  WTO   'DUPLSTC: XXXXXXXX ALREADY RUNNING, WILL ABEND.',       X
               ROUTCDE=(11),DESC=(6),MF=L
         LTORG
*   REQUIRED DSECTS
         CVT DSECT=YES,LIST=NO    CVT
         IHAASVT DSECT=YES        ASVT
         IHAASCB DSECT=YES        ASCB
         END   DUPLSTC


Steve Baggett
Senior Systems Programmer
AutoZone Inc (USA)                                    c Xephon 1992

