Creating useful ISPF global variables at log-on

Many installations would find it useful to give their TSO/ISPF
users the option to display, or otherwise manipulate,
information about their system environment.  Typically, the
more useful information is not available from standard ISPF
variables.  Having encountered this requirement in several
different sites, I have evolved the SETSYS routine.

SETSYS requires no authorization in its present form and can
be executed from any load library.  It is most convenient,
usually, to execute it from the ISPLLIB concatenation and to
arrange for that execution to take place as soon as possible after
ISPF is initialized.  The exact point of invocation will, of
course, depend upon an installation's precise method of
allowing its users to enter an ISPF session.

Assembling SETSYS requires both the SYS1.MACLIB and
SYS1.AMODGEN libraries.  To link-edit the routine, the
module ISPLINK from the ISPLOAD library is required.

It would obviously be possible to add other global variables to
these.  Care should then be taken in the matter of obtaining
data from system areas that require the use of APF-authorized
techniques for access.  If you have an authorized SVC, that is
the easiest way to give APF authorization to this module.

         MACRO
&NAME    YJPDAY &RET=15
         TITLE   'ROUTINE TO PRODUCE DAY OF WEEK'
**  Y J P D A Y   -   ASSUMES RETURN ADDRESS IN REG 14               **
**                -   PASSES ADDRESS OF DAY IN SPECIFIED REG OR R15  **
**                    'Day' = 1 byte length, 9 bytes day name        **
&NAME    DS    0H
         STM   0,14,R0RE&SYSNDX
         TIME
         ST    0,DATE
         OI    DATE+3,X'0F'
         ST    1,DATE
* ROUTINE TO DETERMINE DAY OF WEEK
* BASE IS TUESDAY 31 DEC 68  IF SATURDAY = 0, TUESDAY = 3
         ZAP   DUB3,P0
         MVO   DUB3+6(2),DATE+1(1)
         CVB   1,DUB3                  CURRENT YEAR
         STC   1,YEAR
         SH    1,H69                   # YEARS SINCE 1968
         LA    15,3(R1)                ADD TO BASE
         SR    0,0
         D     0,F4                    # LEAP YEARS
         AR    15,1                   ADD TO BASE
         SR    14,14                  REMAINDER = 31/12 OF PREVIOUS
         D     14,F7                        YEAR.
         ZAP   DUB3,DATE+2(2)
         CVB   1,DUB3
         AR    14,1                   ADD CURRENT DAY NO.
         SRDL  14,32
         D     14,F7                   REMAINDER = DAY OF WEEK NO.
         MH    14,LENDAY
         LA    14,DAYTAB(R14)
         ST    14,DAYADDR
RETURN   EQU   *
         LM    0,14,R0RE&SYSNDX
         L     &RET,DAYADDR
         BR    14
DWORD    DC    D'0'
DUB3     DS    D
R0RE&SYSNDX DS 15F
DATE     DS    F
DAYADDR  DS    F
YEAR     DS    C
LENDAY   DC    H'10'
F4       DC    F'4'
F7       DC    F'7'
H69      DC    H'69'
P0       DC    P'0'
* LAYOUT OF DAYTAB = 1 BYTE LENGTH OF DAY
*                    9 BYTES DAY
DAYTAB   DC    X'8',C'Saturday '
         DC    X'6',C'Sunday   '
         DC    X'6',C'Monday   '
         DC    X'7',C'Tuesday  '
         DC    X'9',C'Wednesday'
         DC    X'8',C'Thursday '
         DC    X'6',C'Friday   '
         MEND
         TITLE 'SETSYS'
***      ROUTINE:        SETSYS INITIALISATION                      ***
*        PURPOSE:        SET UP BASE REGISTER AND SAVE AREAS          *
***                      DEFINE REGISTER NAMES                      ***
SETSYS$  CSECT
SETSYS$  AMODE 31
SETSYS$  RMODE 24
         EXTRN ISPLINK
         SAVE  (14,12)
         BALR  BASE,0
         USING *,BASE,BASE2,BASE3
         LA    BASE2,2048(BASE)
         LA    BASE2,2048(BASE2)
         LA    BASE3,2048(BASE2)
         LA    BASE3,2048(BASE3)
         LR    R2,R1
         LA    R0,WORKLEN
         GETMAIN R,LV=(0)
         ST    R1,8(R13)
         ST    R13,4(R1)
         LR    R13,R1
         USING WORKAREA,R13
BASE3    EQU   10
BASE2    EQU   11
BASE     EQU   12
         LA    R3,CVTPTR           R3 -> CVT ADDRESS
         L     R3,0(R3)            R3 -> CVT
         XR    R4,R4               ZEROISE R4
         L     R4,=F'256'
         SR    R3,R4
         USING CVTFIX,R3
         MVC   SPRODN(8),CVTPRODN
         MVC   SPRODI(8),CVTPRODI
         MVC   WORK(2),CVTMDL
*        MVI   WORK+2,X'0C'
*        MVC   WMODEL(6),=X'F02020202120'
         UNPK  WMODEL(6),WORK(3)
         MVC   SMODEL(4),WMODEL+1
         L     R4,CVTSMCA          R4 -> SMCA
         USING SMCABASE,R4
         L     R7,SMCAIDTE
         ST    R7,DWORK+4
         MVC   QIPLD(7),=XL7'4020204B202120'
         ED    QIPLD(7),DWORK+5
         MVC   SIPLD(6),QIPLD+1
         MVC   $TITIME,SMCAITME    IPL TIME IN CENTISECONDS
         BAL   R14,$TIMTME         GET TIME IN HHMMSS FORMAT
         MVC   SIPLT(2),$TIHMS     HH
         MVI   SIPLT+2,C':'
         MVC   SIPLT+3(2),$TIHMS+2 MM
         MVI   SIPLT+5,C':'
         MVC   SIPLT+6(2),$TIHMS+4 SS
         MVC   SSYSTEM(4),16(R4)   SMF SYSTEM ID
         MVI   SSYSTEM+4,C'/'
         MVC   SSYSTEM+5(4),SMODEL
         CLI   SMODEL,C'3'
         BE    IBM
         CLI   SMODEL,C'4'
         BE    IBM
         CLI   SMODEL,C'5'
         BE    AMDAHL
         MVC   SMC(4),=C'NAS?'
         L     R9,L4
         ST    R9,LMC
         B     GETIPL
IBM      EQU   *
         MVC   SMC(3),=C'IBM'
         L     R9,=A(3)
         ST    R9,LMC
         B     GETIPL
AMDAHL   EQU   *
         MVC   SMC(6),=C'AMDAHL'
         L     R9,=A(6)
         ST    R9,LMC
         B     GETIPL
GETIPL   EQU   *
         L     R5,CVTSYSAD
         MVC   SIPLV(6),28(R5)
         MVC   SIPLU(3),13(R5)
         BAL   R14,FINDJNUM           * GET OUR JNUM
         BAL   R14,FINDDAY            * GET DAY OF WEEK
         BAL   R14,FINDMNTH           * GET MONTH NAME
DEFINE   EQU   *
         CALL  ISPLINK,(VDEFINE,SYSTEM,SSYSTEM,CHAR,L9),VL
         CALL  ISPLINK,(VDEFINE,MODEL,SMODEL,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,PRODN,SPRODN,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,PRODI,SPRODI,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,MC,SMC,CHAR,LMC),VL
         CALL  ISPLINK,(VDEFINE,IPLD,SIPLD,CHAR,L6),VL
         CALL  ISPLINK,(VDEFINE,IPLT,SIPLT,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,IPLV,SIPLV,CHAR,L6),VL
         CALL  ISPLINK,(VDEFINE,IPLU,SIPLU,CHAR,L3),VL
         CALL  ISPLINK,(VDEFINE,JNUM,SJNUM,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,DAY,SDAY,CHAR,LD),VL
         CALL  ISPLINK,(VDEFINE,MONTH,SMONTH,CHAR,LM),VL
         CALL  ISPLINK,(VPUT,VNAMES,PROFILE),VL
         SR    R15,R15
RETX     LR    R2,R15              REMEMBER RETURN CODE
         L     R11,4(R13)          POINT TO CALLER'S SAVE AREA
         LR    R1,R13              ADDRESS OF WORK AREA
         LA    R0,WORKLEN          LENGTH OF WORK AREA
         FREEMAIN R,LV=(0),A=(1)   FREE WORK AREA
         LR    R15,R2              RESTORE RETURN CODE
         LR    R13,R11             RESTORE CALLER'S SAVE AREA
         RETURN (14,12),RC=(15)    AND LEAVE THIS MORTAL COIL
FINDDAY  EQU   *
         STM   R0,R15,SSAE
         BAL   R14,GETDAY
         XR    R4,R4
         IC    R4,0(R3)
         ST    R4,LD
         MVC   SDAY(9),1(R3)
         LM    R0,R15,SSAE
         BR    R14
FINDMNTH EQU   *
         STM   R0,R15,SSAE
         CALL  ISPLINK,(VDEFINE,ZMON,SZMON,CHAR,L2),VL
         CALL  ISPLINK,(VGET,ZMON),VL
         PACK  PZMON,SZMON
         MVC   BPZMON,PZMON
         CVB   R3,XPZMON
         MH    R3,=H'9'
         LA    R2,MONTAB
         AR    R3,R2
         SH    R3,=H'8'
         MVC   SMONTH(9),1(R3)
         XR    R4,R4
         IC    R4,0(R3)
         ST    R4,LM
         LM    R0,R15,SSAE
         BR    R14
FINDJNUM EQU   *
         STM   R0,R15,SSAE
         L     R1,CVTPTR
         L     R2,0(,R1)             -> TCBWORDS
         L     R2,4(,R2)             -> TCB
         L     R2,180(,R2)           -> JSCB (TCBJSCB)
         L     R2,348(,R2)           -> ACTIVE JSCB (JSCBACT)
         ICM   R2,15,316(R2)         -> ACTIVE SSIB (JSCBSSIB)
         BZ    FJFOUND               (BRANCH IF NO SSIB)
         MVC   SJNUM,16(R2)          LAST 4 BYTES OF JID
FJFOUND  EQU   *
         LM    R0,R15,SSAE
         BR    R14
$TIMTME  EQU   *
         STM   R0,R15,SSAE
         ICM   R1,B'1111',$TITIME    TOD IN CENTISECONDS
         XR    R0,R0
         LA    R3,100
         DR    R0,R3                 R1 <- TOD IN SECONDS
         XR    R0,R0
         LA    R3,60
         DR    R0,R3
         CVD   R0,DWORK             *
         UNPK  DWORK(2),DWORK+6(2)
         OI    DWORK+1,X'F0'
         MVC   $TIHMS+4(2),DWORK
         XR    R0,R0
         DR    R0,R3
         CVD   R0,DWORK             *
         UNPK  DWORK(2),DWORK+6(2)
         OI    DWORK+1,X'F0'
         MVC   $TIHMS+2(2),DWORK
         XR    R0,R0
         DR    R0,R3
         CVD   R0,DWORK             *
         UNPK  DWORK(2),DWORK+6(2)
         OI    DWORK+1,X'F0'
         MVC   $TIHMS(2),DWORK
         LM    R0,R15,SSAE
         BR    R14
GETDAY   YJPDAY RET=3
*        WORKAREA DESCRIPTION                                         *
         DS    0F
L2       DC    AL4(2)
L3       DC    AL4(3)
L4       DC    AL4(4)
L5       DC    AL4(5)
L6       DC    AL4(6)
L7       DC    AL4(7)
L8       DC    AL4(8)
L9       DC    AL4(9)
LMC      DC    AL4(0)
LM       DC    AL4(0)
LD       DC    AL4(0)
TIOTA    DS    F
TIMEW    DC    XL4'0000000F'
VNAMES   DC    AL4(LVNAMESA/8),AL4(0)
VNAMESA  DC    CL8'SYSTEM'
         DC    CL8'MODEL'
         DC    CL8'PRODN'
         DC    CL8'PRODI'
         DC    CL8'MC'
         DC    CL8'IPLD'
         DC    CL8'IPLT'
         DC    CL8'IPLV'
         DC    CL8'IPLU'
         DC    CL8'JNUM'
         DC    CL8'DAY'
         DC    CL8'MONTH'
LVNAMESA EQU   *-VNAMESA
         DS    0H
VDEFINE  DC    CL8'VDEFINE'
VPUT     DC    CL8'VPUT'
VGET     DC    CL8'VGET'
SYSTEM   DC    CL8'SYSTEM'
MODEL    DC    CL8'MODEL'
PRODN    DC    CL8'PRODN'
PRODI    DC    CL8'PRODI'
MC       DC    CL8'MC'
IPLD     DC    CL8'IPLD'
IPLT     DC    CL8'IPLT'
IPLU     DC    CL8'IPLU'
IPLV     DC    CL8'IPLV'
JNUM     DC    CL8'JNUM'
DAY      DC    CL8'DAY'
MONTH    DC    CL8'MONTH'
CHAR     DC    CL8'CHAR'
PROFILE  DC    CL8'PROFILE'
SSYSTEM  DS    CL9
SMODEL   DS    CL4
SPRODN   DS    CL8
SPRODI   DS    CL8
SMC      DS    CL6
SIPLD    DS    CL6
SIPLT    DC    CL8'-----'
SIPLV    DS    CL6
SIPLU    DS    CL3
SJNUM    DS    CL4
SDAY     DS    CL9
SMONTH   DS    CL9
QIPLD    DS    CL7
SZMON    DC    CL2' '
ZMON     DC    CL8'ZMONTH'
PZMON    DC    PL2'0'
         DS    0D
XPZMON   DC    6X'00'
BPZMON   DC    PL2'0'
WORK     DC    XL3'000000'
TIMEC    DC    XL10'00'
CTIME    DC    CL9' '
         LTORG
MONTAB   DC    X'8',C'February '
         DC    X'5',C'March    '
         DC    X'5',C'April    '
         DC    X'3',C'May      '
         DC    X'4',C'June     '
         DC    X'4',C'July     '
         DC    X'6',C'August   '
         DC    X'9',C'September'
         DC    X'7',C'October  '
         DC    X'8',C'November '
         DC    X'8',C'December '
         DC    X'7',C'January  '
$TIWRKA  DS    0D
$TITIME  DS    XL4'00'
$TIHMS   DS    CL6'HHMMSS'
WORKAREA DSECT
SAE      DS    18F
SSAE     DS    18F
DWORK    DS    D
WMODEL   DS    CL6
WORKLEN  EQU   *-WORKAREA
         IEESMCA
         IKJTCB
         IHAASVT
         IHAASCB
         IHAASXB
         IEZJSCB
         CVT   PREFIX=YES,DSECT=YES,LIST=NO
         END


David R Dewar
Contract Systems Programmer (UK)          € Xephon 1990

