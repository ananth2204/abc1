Extended ISPF global variables

INTRODUCTION

In a multi-MVS/TSO/ISPF set-up, users are not always sure to which
system and to which logical terminal they are logged-on.  The following
software presents a solution.

DESCRIPTION

Command procedure 'I' can be invoked from your initial command procedure
(eg CBIPO-supplied ISPPDF) or can be used to re-enter ISPF with
different options without a LOGOFF.  Command procedure 'I2' invokes the
program to set the extended global variables and then makes them
available to ISPF.  Program PSSYSID1 sets the variables in the ISPF
pool.  It uses a supplied authorisation SVC which can be replaced by
your own if already present in your system.  It also uses a supplied
macro to define ISPF variables.  Program IGC0024G is the authorisation
SVC.  Macro PSPFV is for defining ISPF variables.  Panel ISP@PRIM serves
as an example of the usage of the two new global variables SIDS1 and
TERMS1.

INSTALLATION

*    Place PSPFV in your Assembler SYSLIB.
*    Assemble PSSYSID1.
*    Link PSSYSID1 into a LNKLSTnn, ISPLLIB, or TSO STEPLIB dataset.
     Refresh LLA if XA and LNKLSTnn are used.
*    Place I and I2 in TSO SYSPROC dataset.
*    Edit your ISPF panels to use variables as in ISP@PRIM.
*    Edit your primary command procedure to invoke %I rather than
     invoking ISPF directly.

ISP@PRIM

%----------------------  SPF-MVS PRIMARY OPTION MENU  ------------------------
%SELECT OPTION ===> OPT     +
%                                                           +USERID   -%&ZUSER
%   0 +SPF PARMS  - Specify terminal and SPF parameters     +LUNAME   - &TERM
%   1 +BROWSE     - Display source data or output listings  +TIME     - &ZTIME
%   2 +EDIT       - Create or change source data            +SYSID    -%&SIDS1
%   3 +UTILITIES  - Perform SPF utility functions           +TERMINAL - &ZTERM
%   4 +FOREGROUND - Compile, Assemble, Link Edit, or debug  +PF KEYS  - &ZKEYS
%   5 +BACKGROUND - Compile, Assemble, or Link Edit &SID
%   6 +COMMAND    - Enter TSO command or CLIST
%   7 +SUPPORT    - Test dialog or convert menu/message formats
%   8 +SDSF       - Spool Display and Search Facility
%   T +TUTORIAL   - Display information about SPF
%   X +EXIT       - Terminate SPF using LIST/LOG defaults
%   S +PRIVATE    - I.S. Software functions
%
+Press%END KEY+to terminate SPF+
%
)INIT
  .HELP = TTUTOR
  &ZHTOP = TTUTOR     /* TUTORIAL TABLE OF CONTENTS */
  &ZHINDEX = TINDEX   /* TUTORIAL INDEX - 1ST PAGE  */
  &SID     = &SIDS1   /* GET SYSTEM ID              */
  &TERM    = &TERMS1  /* GET TERMINAL ID            */
)PROC
  IF (&SID = '' )
     &OPT = I
  &SEL = TRANS( TRUNC (&OPT,'.')
                0,'PANEL(ISPOPT)'
                1,'PGM(ISPBRO)'
                2,'PGM(ISPEDIT)'
                3,'PANEL(ISPUTIL)'
                4,'PANEL(ISPFORA)'
                5,'PANEL(ISPJOB)'
                6,'PGM(ISPTSO)'
                7,'PANEL(ISPQTAC) NEWPOOL'
                8,'PANEL(ZSDSFOPT)'
                I,'PGM(PSSYSID1)'
                P,'PANEL(PDSMP00)'
                S,'PANEL(ISS@PRIM)'
                SS,'PANEL(SMRINITI)'
                T,'PGM(ISPTUTOR) PARM(T)'
                TSO,'PGM(&OPT)'
              ' ',' '
                X,'EXIT'
                *,'?' )
 IF (&OPT = '8')
   &SEL ='PGM(ISFINIT)'
)END

I
PROC 0 &TEST() &TRACE() &TESTX() &TRACEX() &LLIB()
IF &LLIB NE &STR() THEN DO
   FREE DDN(ISPLLIB)
   ALLOC DDN(ISPLLIB) DSN(&LLIB) SHR
END
ISPSTART CMD(%I2 ISP@MSTR) NEWAPPL(PDF) &TEST &TRACE &TESTX +
         &TRACEX
I2
PROC 1 PNL
ISPEXEC SELECT PGM(PSSYSID1)      /*GET SYSID AND TERMID FROM SYSTEM*/
ISPEXEC VGET SIDS1                /*GET SYSID FROM POOL             */
ISPEXEC VGET TERMS1               /*GET TERM ID FROM POOL           */
ISPEXEC SELECT PANEL(&PNL)        /*INVOKE REAL PDF                 */
IGC00247
IGC0024G CSECT
         USING IGC0024G,6                   +
         USING TCB,4                        +
         L     8,TCBJSCB                    +GET @ JSCB
         USING IEZJSCB,8                    +
         LTR   1,1                          +CHECK PARM
         BNZ   UNAUTH                       + NON ZERO - GO MAKE UNAUTH
AUTH     EQU   *                            + ZERO -
         OI    JSCBOPTS,JSCBAUTH            +        AUTH
         BR    14                           +
UNAUTH   EQU   *                            +
         NI    JSCBOPTS,255-JSCBAUTH        +UNAUTH
         BR    14                           +RETURN
         IEZJSCB                            +MAP JSCB
         IKJTCB                             +MAP TCB
         END   ,                            +
PSSYSID1
********       *A00MAIN - MAIN LINE
PSSYSID1 PSPS1 FUNC='PUT SMCASID AND TSBTERMID IN ISPF VAR',           +
               DATEW=880816,AUTH=BERTUS   in-house initialisation macro
         BAS   R8,B00INIT1             +PREPARE(GET FIELDS)
         BAS   R8,C00ISPFI             +PREPARE  ISPF
         BAS   R8,D00SIDP              +VPUT FIELDS
         PSPE1 RC=0                    +RETURN TO OS  termination macro
********       *B00INIT1 - GENERAL INITIALIZATION
B00INIT1 EQU *                         +
         L     R2,FLCCVT2-PSA(R0,R0)   +@CVT
         L     R2,CVTSMCA-CVT(R0,R2)   +@SMCA
         MVC   SIDS1,SMCASID-SMCABASE(R2) +PUT IN VAR
         XR    R1,R1                    +SET AUTH PARM
         SVC   247                      + AND GET JSCBAUTH SET
         MODESET KEY=ZERO               +FOR KEY 6 TSB AND MY KEY 8
         L     R2,PSAAOLD-PSA(R0,R0)    +GET @CURRENT ASCB
         L     R2,ASCBTSB-ASCB(R0,R2)   +GET TSB ADDRESS
         MVC   TERMS1,TSBTRMID-TSB(R2)  +SAVE TERMINAL ID
         MODESET KEY=NZERO              +ONLY KEY 8 NOW
         LA    R1,4                     +SET UNAUTH PARM
         SVC   247                      + AND GET JSCBAUTH OFF
B00EXIT1 EQU *                         +
         BR    R8                      +BACK TO CALLING POINT
********       *C00ISPFI - ISPF INITIALIZATION
C00ISPFI EQU *                         +
         CALL  ISPLINK,(VDEFINE,CSIDS1,SIDS1,CHAR,LSIDS1),VL +DEF VAR
         CALL  ISPLINK,(VDEFINE,CTERMS1,TERMS1,CHAR,LTERMS1),VL +
C00EXIT1 EQU *                         +
         BR    R8                      +BACK TO CALLING POINT
********       *D00SIDP  - VPUT SID
D00SIDP  EQU *                         +
         CALL  ISPLINK,(VPUT,CSIDS1,SHARED),VL   +PUT IN SHARED POOL
         CALL  ISPLINK,(VPUT,CTERMS1,SHARED),VL   +PUT IN SHARED POOL
D00EXIT1 EQU *                         +
         BR    R8                      +BACK TO CALLING POINT
********       *DATA
********  ISPF CONSTANTS
PSPFDBG1 DC    CL8'PSPFDBG1'           +
SWITCH01 DS    8                       +SWITCHES
STACK01  DS    10F                     +REG SAVE STACK
SIDS1    PSPFV CL4                     +SID SHARED
TERMS1   PSPFV CL8                     +TERMID SHARED
         IHAPSA                        +LOW CORE MAP
         CVT   DSECT=YES               +CVT MAP
         IEESMCA                       +SMCA
         IHAASCB                       +ASCB
         IKJTSB                        +TSB
         END
PSPFV
         MACRO
&VNAME   PSPFV &VDEF,&EXT=
.*******       *DEFINE SPF VARIABLE
.*******       *EXT     = EXTERNAL NAME
         LCLC  &VASM                   +NAME KNOWN TO ASM
&VASM    SETC  '&VNAME'                +DEFAULT = SPF VAR NAME
         AIF   ('*EXT' EQ '').CNT001   +EXTERNAL NAME SPECIFIED??
&VASM    SETC  '&EXT'                  +YES - USE IT
         AGO   .CNT002                 +      AND BYPASS DEFINITION
.CNT001  ANOP                          +
         AIF   ('&VDEF'(1,1) EQ 'C').DEFDC +DEFINE AS DC
&VNAME   DS    &VDEF                   +SPF VARIABLE
         AGO   .CNT002                 +
.DEFDC   ANOP                          +
&VNAME   DC    &VDEF.' '               +SPF VARIABLE
         AGO   .CNT002                 +
.CNT002  ANOP                          +
C&VNAME  DC    CL8'(&VNAME)'           +NAME FOR SPF
L&VNAME  DC    A(L'&VASM)              +LENGTH OF VARIABLE '
         MEND


PAB (South Africa)  â‚¬ Xephon 1988



