Dynamically allocating a SYSOUT dataset

The following subroutine has been found to be very useful at
our installation.  It is used by high-level programs to allocate a
SYSOUT dataset and has been found to be particularly helpful
in long-running programs as it allows SYSOUT to become
available as soon as it is created (by closing the dataset) rather
than having to wait until the end of the job step.

This routine can then be called again to allocate another
SYSOUT dataset.  The program is protected by an ESTAE
routine and should give some diagnostic information in the
event of any error, including invalid parameter addresses.
Error messages are issued via WTO.

ALCSOUT  TITLE 'SUBROUTINE TO DYNAMICALLY ALLOCATE A SYSOUT DATASET'
*****    INPUT PARMS:              ASM  PL1            COBOL      *****
*          1. RETURN CODE          F    FIXED BIN(31)  PIC 9(8) COMP  *
*          2. DDNAME               CL8  CHAR(8)        PIC X(8)       *
*          3. SYSOUT CLASS         CL1  CHAR(1)        PIC X(1)       *
*          4. DESTINATION          CL8  CHAR(8)        PIC X(8)       *
* OPTIONAL 5. DDNAME FROM WHICH                                       *
*             TO COPY DCBS.        CL8  CHAR(8)        PIC X(8)       *
*****    THIS PROGRAM IS REENTRANT.                               *****
ALCSOUT  CSECT ,
         SAVE  (14,12),,ALCSOUT-&SYSDATE-&SYSTIME  SAVE REGS/SET ID
         LR    R12,R15               COPY BASE REG
         USING ALCSOUT,R12           ADDRESSABILITY FOR CSECT
         BAL   R1,*+8                SKIP CONSTANT
         DC    AL4(DYNLEN)           DSA LENGTH
         L     R0,0(,R1)             DYNAMIC SA LEN
         BAL   1,*+4                 INDICATE GETMAIN
         SVC   10                    GETMAIN R,LV=(0)
         LR    R15,R1                SAVE GETMAINED ADDR
         LM    R0,R1,20(R13)         RESTORE REGS 0/1 FROM PREV SA
         ST    R13,4(R15)            HSA
         ST    R15,8(R13)            LSA
         LR    R13,R15               COPY SA PTR
         USING DYNAREA,R13           ADDRESSABILITY FOR DSECT
*                      I N I T I A L I S E
         LR    R10,R1              SAVE PARM PTR
         LA    R9,ABENDED          RETADDR FROM ESTAE
         ST    R9,ABRET            SAVE IT IN ESTAE PARM LIST
         XC    ABCODE(8),ABCODE    ZERO OTHER PARMS USED BY ESTAE RTN
         MVC   DYNEST,ESTSET       INIT ESTAE SVC PARM LIST
         LA    R2,ABRET            => RETADDR FROM ESTAE
         L     R3,=V(ESTAEX)       => ESTAE EXIT
         ESTAE (3),CT,PARAM=(2),PURGE=HALT,ASYNCH=NO,MF=(E,DYNEST)
         LTR   R15,R15             CHECK RETCODE
         BZ    ESTAEOK             BIF OK
         WTO   'ALCSOUT: ESTAE FAILURE',ROUTCDE=11,DESC=7
         LA    R11,8               INDICATE ERROR
         B     RETURN              AND RETURN
ESTAEOK  DS    0H
*              VALIDATE INPUT PARMS.....
         LTR   R10,R10             TEST PARM PTR
         BZ    PARMERR             BIF ZERO...NO GOOD
ABR1     LM    R2,R6,0(R10)        LOAD PARM PTRS
         LTR   R2,R2               RETCODE PTR OK ?
         BZ    RCERR               BIF NOT...
         BM    PARMERR             BIF NOT...
ABRC     XC    0(4,R2),0(R2)       ZERO THE RETCODE
         LTR   R3,R3               DDNAME PTR OK ?
         BZ    DDERR               BIF NOT...
         BM    PARMERR             BIF NOT...
ABDD     MVC   MYDDNM,0(R3)        SAVE DDNAME
         LTR   R4,R4               SYSOUT CLASS PTR OK ?
         BZ    SOUTERR             BIF NOT...
         BM    PARMERR             BIF NOT...
ABSO     MVC   MYSCLS,0(R4)        SAVE SYSOUT CLASS
         XC    MY99TURF,MY99TURF   ZERO TU PTR FOR DCB REFER
         LTR   R5,R5               DEST PTR OK ?
         BZ    DESTERR             BIF NOT...NO PARM PRESENT
ABDS     MVC   MYDEST,0(R5)        SAVE REMOTE DESTINATION
         BM    PARMEXIT            BIF LAST PARM IN LIST
         LTR   R6,R6               DCB REFERBACK PRESENT ?
         BNM   REFERR              BIF NOT...INVALID END OF PARM LIST
         LA    R15,MY99TXRF        => TU FOR DCB REFERBACK
         ST    R15,MY99TURF        SAVE IT
ABRF     MVC   MYREFDD,0(R6)       SAVE DDNAME FOR DCB REFERBACK
         B     PARMEXIT            END OF BASIC PARM VALIDATION
*              ISSUE PARAMETER ERROR MESSAGES
PARMERR  DS    0H
         WTO   'ALCSOUT: PARAMETER LIST MUST CONTAIN 4 OR 5 PARMS',    X
               ROUTCDE=11,DESC=7
         LA    R11,16              INDICATE BAD PARM LIST
         B     RETURN              AND RETURN
RCERR    DS    0H
         WTO   'ALCSOUT: ERROR AT PARM 1 (RETURN CODE)',               X
               ROUTCDE=11,DESC=7
         LA    R11,1               INDICATE ERROR NUMBER
         B     RETURN              AND RETURN
DDERR    DS    0H
         WTO   'ALCSOUT: ERROR AT PARM 2 (DDNAME)',                    X
               ROUTCDE=11,DESC=7
         LA    R11,2               INDICATE ERROR NUMBER
         B     RETERR              AND RETURN
SOUTERR  DS    0H
         WTO   'ALCSOUT: ERROR AT PARM 3 (SYSOUT CLASS)',              X
               ROUTCDE=11,DESC=7
         LA    R11,3               INDICATE ERROR NUMBER
         B     RETERR              AND RETURN
DESTERR  DS    0H
         WTO   'ALCSOUT: ERROR AT PARM 4 (DESTINATION)',               X
               ROUTCDE=11,DESC=7
         LA    R11,4               INDICATE ERROR NUMBER
         B     RETERR              AND RETURN
REFERR   DS    0H
         WTO   'ALCSOUT: ERROR AT PARM 5 (MODEL DDNAME FOR DCBS)',     X
               ROUTCDE=11,DESC=7
         LA    R11,5               INDICATE ERROR NUMBER
         B     RETERR              AND RETURN
PARMEXIT DS    0H
*              P R E P A R E   F O R   A L L O C A T I O N
         LA    R9,MY99RB           => RB PTR
         ST    R9,MY99RBP          SAVE IT
         OI    MY99RBP,X'80'       ONE AND ONLY PTR
         XC    MY99RB(20),MY99RB   ZERO OUT SVC99 REQUEST BLOCK
         MVC   MY99RB(2),=X'1401'  S99RBLN & S99VERB
         LA    R9,MY99TUPL         => TU PTRS
         ST    R9,MY99RBTP         SAVE IN SVC99 REQ BLK
         LA    R9,MY99TXDD         => DDNAME TU
         ST    R9,MY99TUDD         SAVE IT
         LA    R9,MY99TXSO         => SYSOUT CLASS TU
         ST    R9,MY99TUSO         SAVE IT
         LA    R9,MY99TXPE         => PERM ALLOC TU
         ST    R9,MY99TUPE         SAVE IT
         LA    R9,MY99TXDE         => DEST TU
         ST    R9,MY99TUDE         SAVE IT
         LA    R9,MY99TXFC         => FREE=CLOSE TU
         ST    R9,MY99TUFC         SAVE IT
         OI    MY99TUFC,X'80'      LAST IN PARM LIST
         MVC   MY99TXDD(6),CN99TXDD FIELDS FOR DDNAME TU
         MVC   MY99TXSO(6),CN99TXSO FIELDS FOR SYSOUT CLASS TU
         MVC   MY99TXPE(4),CN99TXPE FIELDS FOR PERM ALLOC TU
         MVC   MY99TXDE(6),CN99TXDE FIELDS FOR DEST TU
         MVC   MY99TXRF(6),CN99TXRF FIELDS FOR DCB REFERBACK TU
         MVC   MY99TXFC(4),CN99TXFC FIELDS FOR FREE=CLOSE TU
*              INITIALISE DAIRFAIL PARM LIST
         LA    R9,MY99RB           => SVC99 REQ BLOCK
         ST    R9,DFS99RBP         SAVE IT
         LA    R9,MYDFRC           => SVC99 RETCODE
         ST    R9,DFRCP            SAVE IT
         LA    R9,MYJEFF02         => IKJEFF02 ADDRESS
         ST    R9,DFJEFF02         SAVE IT
         LA    R9,MYDFID           => TYPE OF FAILURE
         ST    R9,DFIDP            SAVE IT
         XC    DFCPPLP,DFCPPLP     ZERO CPPL ADDR PTR
         XC    DFBUFP,DFBUFP       ZERO BUFFER ADDR PTR
         XC    MYJEFF02,MYJEFF02   ZERO IKJEFF02 ADDR
         MVC   MYDFID,=X'8032'     DAIRFAIL MESSAGE OPTION FLAGS
*              A L L O C A T E
         LA    R1,MY99RBP              => REQ BLK PTR
         SVC   99                      DYNALLOC
         LTR   R11,R15                 DYNALLOC OK ?
         BZ    RETURN                  BIF SO
*              A L L O C A T I O N   E R R O R
         ST    R15,MYDFRC          STORE SVC 99 RETURN CODE
         MVC   WTOOPTS(WTOPLEN),CNWTOP  COPY WTO OPTIONS
         MVC   WTODD,MYDDNM        COPY DDNAME PARM
         MVC   WTOSOUT,MYSCLS      COPY SYSOUT CLASS PARM
         MVC   WTODEST,MYDEST      COPY DEST PARM
         LA    R1,WTOOPTS          WTO PARM LIST
         SVC   35                  WTO OUR PARM DETAILS
         LA    R1,MYDFAREA         PREPARE TO ISSUE MESSAGE
         LINK  EP=IKJEFF18         DO IT
         L     R11,MY99RSC         FAILURE REASON CODE
         B     RETERR              AND RETURN
*              RETURN FROM ESTAE: PROVIDE ABEND INFO AND END
ABENDED  DS    0H
         ICM   R2,B'1111',ABADDR   COPY ABEND ADDR
         BZ    NOABADDR            BIF NO ADDR HAS BEEN SET
         LA    R3,ABTAB            => TABLE OF LIKELY ABENDS
         LA    R4,ABCOUNT          NO OF TABLE ENTRIES
ABLOOP   DS    0H
         L     R5,4(,R3)           LOAD ERROR ROUTINE ADDR
         C     R2,0(,R3)           'EXPECTED' ABEND ?
         BER   R5                  BIF SO...REPORT ON IT
         LA    R3,8(,R3)           => NEXT ENTRY
         BCT   R4,ABLOOP           CHECK ALL EXPECTED ABENDS
NOABADDR DS    0H
         WTO   'ALCSOUT: ABEND. RETCODE=OFFSET',ROUTCDE=11,DESC=7
         SR    R2,R12              ABEND ADDR MINUS BASE = OFFSET
         LR    R11,R2              SET RETURN CODE=OFFSET
         B     RETURN              AND RETURN
*              T E R M I N A T E
RETERR   DS    0H
         ST    R11,0(,R2)          SAVE RETCODE IN RETCODE PARM
         B     RETURN              AND EXIT WITH THAT RETCODE
RETURN0  DS    0H
         SR    11,11               RETURN CODE ZERO
RETURN   DS    0H
         ESTAE 0                   CANCEL ESTAE
         LR    R15,R11             SET RETURN CODE
         LR    R14,R13             SAVE PTR TO DYNAMIC SAVE AREA
         L     R13,4(R13)          => CALLING PROGS SAVE AREA
         ST    R15,16(R13)         SAVE RETURN CODE (R15)
         BAL   R1,*+8              SKIP CONSTANTS
         DC    AL4(DYNLEN)         DYNAMIC SA LENGTH
         L     R0,0(,R1)           LOAD IT
         LR    R1,R14              => DSA
         LA    1,0(0,1)            CLEAR HI-ORDER OF DSA ADDR
         SVC   10                  FREEMAIN R,LV=(0),A=(1)
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         BR    R14
         LTORG ,
         TITLE 'ESTAE EXIT: RETURN ABEND ADDRESS TO MAIN PROGRAM'
ESTAEX   CSECT
         USING ESTAEX,R9
         LR    R9,R15              SET BASE REG
         C     R0,=F'12'           NO SDWA IF RC=12
         BE    NOSDWA              BRANCH IF NO SDWA
         LR    R10,R1              COPY SDWA ADDR
         USING SDWA,R10
         L     R8,SDWAPARM         GET ADDR OF ESTAE PARAM
         L     R2,0(,R8)           LOAD ADDR OF RETRY ROUTINE
         L     R3,540              => CURRENT TCB
         MVC   5(3,R8),17(R3)      SAVE ABEND CODE
         SLR   R3,R3               ZERO REG
         ICM   R3,B'0111',SDWANXT1+1 => NEXT INSTR (FROM PSW)
         CLI   SDWAICD1,X'10'      INTC=10 ? (SEGMENT EXCEPTION)
         BE    OFFOK               BIF SO..OFFSET IS OK
         CLI   SDWAICD1,X'11'      INTC=11 ? (PAGE EXCEPTION)
         BE    OFFOK               BIF SO..OFFSET IS OK
         SLR   R4,R4               ZERO REG
         IC    R4,SDWAILC1         LOAD ILC
         SR    R3,R4               => ACTUAL ABENDING INSTR
OFFOK    DS    0H
         STCM  R3,B'0111',9(R8)    => ABENDING INSTR
         SETRP WKAREA=(10),RC=4,FRESDWA=YES,     RETURN                X
               RETADDR=(2),DUMP=NO,RETREGS=YES
         BR    R14                 RETURN TO RTM (+ RETRY)
NOSDWA   DS    0H
         LR    R8,R2               LOAD ADDR OF ESTAE PARM
         L     R3,540              => CURRENT TCB
         MVC   5(3,R8),17(R3)      SAVE ABEND CODE
         L     R0,0(,R8)           LOAD RETRY ADDRESS
         LA    R15,4               INDICATE RETRY
         BR    R14                 RETURN TO RTM (+ RETRY)
         LTORG ,
         TITLE 'SUBROUTINE TO DYNAMICALLY ALLOCATE A SYSOUT DATASET'
*              CONSTANTS AND STORAGE RESERVATIONS
ALCSOUT  CSECT ,                   RESUME MAIN CSECT
ESTSET   ESTAE MF=L
ESTLEN   EQU   *-ESTSET
ABTAB    DC    A(ABR1),A(PARMERR)
         DC    A(ABRC),A(RCERR)
         DC    A(ABDD),A(DDERR)
         DC    A(ABSO),A(SOUTERR)
         DC    A(ABDS),A(DESTERR)
         DC    A(ABRF),A(REFERR)
ABCOUNT  EQU   (*-ABTAB)/8         NO OF TABLE ENTRIES
CN99TXDD DC    H'1',H'1',H'8'      TEXT UNIT, DDNAME
CN99TXSO DC    H'24',H'1',H'1'     TEXT UNIT, SYSOUT CLASS
CN99TXPE DC    H'82',H'0'          TEXT UNIT, PERM ALLOCATION
CN99TXDE DC    H'88',H'1',H'8'     TU, DEST FOR SYSOUT
CN99TXRF DC    H'45',H'1',H'8'     TEXT UNIT, DCB REFERBACK
CN99TXFC DC    H'28',H'0'          TEXT UNIT, FREE=CLOSE
CNWTOP   DC    AL2(WTOPREFL)
         DC    X'8000'             MCS FLAGS
         DC    C'ALCSOUT: ALLOCATION ERROR FOR DDNAME='
         DS    CL8
         DC    C',SYSOUT='
         DS    CL1
         DC    C',DEST='
         DS    CL8
         DC    X'0200'             DESC=7
         DC    X'0020'             ROUTCDE=11
*              DYNAMICALLY ALLOCATED WORK AREA
DYNAREA  DSECT ,
         DS    18F                 SPACE FOR SAVE AREA
*           * THE NEXT 3 FIELDS ARE ESTAE PARMS AND MUST NOT BE MOVED *
ABRET    DC    A(ABENDED)              RET ADDR IN MAIN CODE FROM ESTAE
ABCODE   DC    F'0'                    ABEND CODE
ABADDR   DC    F'0'                    => ABENDING INSTR
         DS    0F
DYNEST   DS    CL(ESTLEN)
MY99RBP  DC    XL1'80',AL3(MY99RB) SVC 99 RB POINTER
MY99RB   DS    0F                  SVC 99 REQUEST BLK (MAC IEFZB4D0)
         DC    XL1'14',XL1'01'     S99RBLN & S99VERB
         DC    H'0'                S99FLAG1
MY99RSC  DC    F'0'                S99ERROR/S99INFO
MY99RBTP DC    A(MY99TUPL)         => TEXT UNIT POINTERS
         DC    2F'0'               RESERVED & FLAGS2
*              TEXT UNIT POINTERS
MY99TUPL DS    0A                  SVC 99 TEXT UNIT POINTERS
MY99TUDD DC    A(MY99TXDD)         TU PTR, DDNAME
MY99TUSO DC    A(MY99TXSO)         TU PTR, SYSOUT CLASS
MY99TUPE DC    A(MY99TXPE)         TU PTR, PERM ALLOC
MY99TUDE DC    A(MY99TXDE)         TU PTR, DEST FOR SYSOUT
MY99TURF DC    A(0)                TU PTR, DDNAME FOR DCB REFERBACK
MY99TUFC DC    XL1'80',AL3(MY99TXFC) TU PTR, FREE=CLOSE
*              TEXT UNITS
MY99TXDD DC    H'1',H'1',H'8'      TEXT UNIT, DDNAME
MYDDNM   DC    CL8' '              DDNAME PARM
MY99TXSO DC    H'24',H'1',H'1'     TEXT UNIT, SYSOUT CLASS
MYSCLS   DC    CL1' '              SYSOUT CLASS PARM
MY99TXPE DC    H'82',H'0'          TEXT UNIT, PERM ALLOCATION
MY99TXDE DC    H'88',H'1',H'8'     TU, DEST FOR SYSOUT
MYDEST   DC    CL8' '              DEST PARM
MY99TXRF DC    H'45',H'1',H'8'     TEXT UNIT, DCB REFERBACK
MYREFDD  DC    CL8' '              DDNAME FOR DCB REFERBACK
MY99TXFC DC    H'28',H'0'          TEXT UNIT, FREE=CLOSE
MYDFAREA DS    0F                  (IKJEFFDF DFDSECT=YES)
DFS99RBP DC    A(MY99RB)           => SVC99 RB
DFRCP    DC    A(MYDFRC)           => SVC99 RETCODE
DFJEFF02 DC    A(MYJEFF02)         => IKJEFF02 ADDRESS
DFIDP    DC    A(MYDFID)           => TYPE OF FAILURE
DFCPPLP  DC    F'0'                => CPPL IF AVAILABLE
DFBUFP   DC    F'0'                => RETURNED BUFFER (IF REQUESTED)
*              FIELDS FOR SVC99 FAILURE MESSAGES
MYDFRC   DS    F                   SVC 99 RETURN CODE
MYJEFF02 DC    F'0'                NO IKJEFF02 ADDRESS
MYDFID   DC    XL2'8032'           GENERAL SVC 99 FAILURE/USE WTP
WTOOPTS  DS    0F
         DC    AL2(WTOPREFL)
         DC    X'8000'             MCS FLAGS
WTOMSG   DC    C'ALCSOUT: ALLOCATION ERROR FOR DDNAME='
WTODD    DS    CL8
         DC    C',SYSOUT='
WTOSOUT  DS    CL1
         DC    C',DEST='
WTODEST  DS    CL8
WTOPREFL EQU   *-WTOOPTS           PARM LEN BEFORE DESC/ROUTCDE FIELDS
         DC    X'0200'             DESC=7
         DC    X'0020'             ROUTCDE=11
WTOPLEN  EQU   *-WTOOPTS
DYNLEN   EQU   *-DYNAREA           LENGTH OF DYNAMIC WORK AREA
         IHASDWA ,                 SDWA DSECT (FOR ESTAE)
         END


                                                         € Xephon 1990

