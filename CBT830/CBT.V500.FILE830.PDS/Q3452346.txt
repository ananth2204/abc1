Sharing memory between tasks

Source listing for PWLSPQEM

PWLSPQEM PWLINIT
* GETMAIN 256-BYTE AREA WITH UNIQUE SUBPOOL ID
         GETMAIN RC,SP=SPID,LV=256,LOC=BELOW,BNDRY=PAGE
* BNDRY FORCE GETMAIN FROM START OF ALLOCATED PAGE
*  OTHERWISE IT WILL BE FROM END OF ALLOCATED PAGE
         LR    R10,R1
         USING SHARED,R10
         MVC   EYE_CATCHER,ID1
         MVC   MESSAGEL,=H'50'
         MVC   MESSAGE,MSG1
* BY CALLING PWLSPQE1, IT WILL BE EXECUTING IN THE SAME TCB
         CALL  PWLSPQE1
         MVC   MESSAGE,MSG2
* ATTACHING PWLSPQE1 WILL CAUSE IT TO RUN UNDER ITS OWN TCB
         ATTACH EP=PWLSPQE1,ETXR=ENDSPQE1,ECB=ECBSPQE1,SHSPV=SPID
         WAIT  ,ECB=ECBSPQE1
         B     EXIT
ENDSPQE1 DS    0H
         PUSH USING
         DROP  ,
         SAVE  (14,12)
         LR    R12,R15
         USING ENDSPQE1,R12
         DETACH 24(,R13)          DETACH PWLSPQE1 TASK
         RETURN (14,12)
         POP   USING
SPID     EQU   77
ID1      DC    C'EYE CATCHER'
MSG1     DC    CL50'MESSGAE1 FROM MAIN TASK'
MSG2     DC    CL50'MESSGAE2 FROM MAIN TASK'
ECBSPQE1 DC    F'0'
SHARED   DSECT
EYE_CATCHER    DC    C'EYE CATCHER'
MESSAGEL DC    H'50'
MESSAGE  DC    CL50'MESSAGE FROM MAIN TASK'
         END   PWLSPQEM

Source listing for PWLSPQE1

PWLSPQE1 PWLINIT
* PROGRAM CALLED OR ATTACHED BY PWLSPQEM
*   LOCATE SHARED MEMORY CREATED BY PWLSPQE BY GOING THROUGH SPQE
*   CHAIN.
*
         L     R2,X'21C'          R1 -> TCB
         L     R2,X'18'(,R2)      R1 -> SPQE
COMP1    DS    0H
         CLI   X'11'(R2),SPID     IS IT THE PRE-DEFINED SUBPOOL ID
         BE    FOUND1             Y.
         ICM   R2,15,0(R2)        NEXT SPQE
         BNZ   COMP1
         B     EOJ
FOUND1   DS    0H
         ICM   R2,15,8(R2)        R2 -> SPQA
         LA    R4,0(,R2)          R4 -> 1ST/LAST PAIR
         ICM   R3,15,0(R2)        R3 -> 1ST DQE BACKED ABOVE LINE
         CR    R3,R4              NULL DQE?
         BNE   FOUND2             NO. GO CHECK IT.
         LA    R4,8(,R2)          R4 -> 1ST/LAST PAIR
         ICM   R3,15,8(R2)        R3 -> 1ST DQE BACKED ANYWHERE
         CR    R3,R4
         BNE   FOUND2
         B     EOJ
FOUND2   DS    0H
         ICM   R4,15,4(R4)        R4 -> LAST DQE
SRCH2    DS    0H
         ICM   R5,15,X'10'(R3)    R3 -> ALLOCATED PAGE
         CLC   ID1,0(R5)          IS THE SHARED MEMORY THERE?
         BE    FOUND3             YES.
         CR    R3,R4              R3 -> LAST DQE?
         BE    EOJ
         ICM   R3,15,0(R3)        R3 -> NEXT DQE
         B     SRCH2
FOUND3   DS    0H
         USING SHARED,R5
         LA    R5,MESSAGEL
         WTO   TEXT=(R5)
EOJ      DS    0H
         B     EXIT
SPID     EQU   77
ID1      DC    C'EYE CATCHER'
*
SHARED   DSECT
EYE_CATCHER    DC    C'EYE CATCHER'
MESSAGEL DC    H'50'
         DC    CL50'MESSAGE FROM MAIN TASK'
         END   PWLSPQE1

Source listing for macro PWLINIT

         MACRO
&L       PWLINIT
.* INIT MACRO FOR NON-RENT CODE
&L       CSECT ,
INIT_A&SYSNDX DS 0H
R0       EQU   0
R1       EQU   1
         etc
R15      EQU   15
         USING *,R15                    TEMPORARY
         B     INIT_B&SYSNDX
         DC    AL4(INIT_B&SYSNDX-INIT_A&SYSNDX-8)
         DC    CL23'&L   &SYSDATE &SYSTIME'
INIT_B&SYSNDX DS 0H
         STM   R14,R12,12(R13)
         LR    R1,R13                   WORK REGISTER
         CNOP  0,4
         BAL   R13,*+4+72               SET UP R13
         DC    18F'0'                   SAVE AREA
         LA    R13,0(,R13)              IN CASE 31-BIT
         ST    R1,4(,R13)               SAVE LAST IN THIS
         ST    R13,8(,R1)               SAVE THIS IN LAST
         USING *-84,R13
         B     INIT_C&SYSNDX
         DROP  R15
EXIT     DS    0H
         LA    R15,0                    STORE RETURN CODE
RC       EQU   *-1,1                    RETURN CODE
         L     R14,4(,R13)              PREV SAVE AREA
         STM   R0,R1,20(R14)            SAVE R0,R1 IN PREV SAVE AREA
         L     R13,4(,R13)              RESTORE REG 13
         L     R14,12(R13)              RESTORE R14
         LM    R0,R12,20(R13)
*        BR    R14
         BSM   R0,R14
INITMODE DC    H'0'
INIT_C&SYSNDX MVI RC,0                  ENSURE RETURN CODE = 0
         L     R1,4(,R13)
         LM    R14,R2,12(R1)            RESTORE LINKAGE REGS
         AGO   .MEND
.MEND    ANOP
         MEND


Peter Lee
Analyst (Canada)                                                      c Xephon 1

