Tape reorganization

SAMPLE JCL

/IBMUSERT  JOB ,IBMUSER,CLASS=A,MSGCLASS=X,REGION=5M,RESTART=XXXXXX
//**----------------------------------------------------------------**
//** YYY      <----          YOUR PREFIX DSNAME.                    **
//** XXXXXX   <----           "   WORK   DASD/VOLUME.               **
//**----------------------------------------------------------------**
//STEP00    EXEC PGM=IDCAMS
//SYSPRINT  DD   SYSOUT=*
//SYSIN     DD   *
 LISTCAT ENT(YYY.JCLTNC)
 LISTCAT ENT(YYY.JCLIST)
/*
//**-----------------------------------------------------------------**
//STEP01    EXEC PGM=IEFBR14,COND=(0,EQ,STEPAA)
//DD1       DD   UNIT=DISK,VOL=SER=XXXXXX,DSN=YYY.JCLIST,DISP=(,CATLG),
//   SPACE=(CYL,(9,5)),DCB=(LRECL=133,BLKSIZE=6650,RECFM=FB)
//DD2       DD   UNIT=DISK,VOL=SER=XXXXXX,DSN=YYY.JCLTNC,DISP=(,CATLG),
//   SPACE=(CYL,(9,5)),DCB=(LRECL=080,BLKSIZE=8000,RECFM=FB)
//**-----------------------------------------------------------------**
//STEP02    EXEC PGM=TLMSRPTS
//STEPLIB   DD   DSN=TLMSR5M3.CAILIB,DISP=SHR
//SORTLIB   DD   DSN=SYS1.SORTLIB,DISP=SHR
//CAIRMF    DD   DSN=TLMSR5M3.RMF,DISP=SHR
//CAIVMF    DD   DSN=TLMSR5M3.VMF,DISP=SHR
//CAIVMFI   DD   DSN=TLMSR5M3.VMF,DISP=SHR
//CAIVMFS   DD   DSN=TLMSR5M3.VMF,DISP=SHR,DCB=(OPTCD=C,BUFNO=15)
//CAIVMFXI  DD   DSN=TLMSR5M3.VMFINDEX,DISP=SHR
//BKUP      DD   DSN=TLMSR5M3.ALOG,DISP=SHR
//SYSPRINT  DD   DSN=&&TEMP1,UNIT=DISK,SPACE=(TRK,(350,100)),
// DCB=(LRECL=133,BLKSIZE=6650,RECFM=FB),DISP=(,PASS),VOL=SER=XXXXXX
//SYSOUT    DD   DUMMY
//SYSUDUMP  DD   DUMMY
//ALLSTOR   DD   UNIT=SYSDA,SPACE=(CYL,(15,5)),DCB=BLKSIZE=2150
//USEDSTOR  DD   UNIT=SYSDA,SPACE=(CYL,(15,5)),DCB=BLKSIZE=2150
//RPTSFILE  DD   UNIT=SYSDA,SPACE=(CYL,(15,5)),DCB=BLKSIZE=2150
//SORTFILE  DD   UNIT=SYSDA,SPACE=(CYL,(15,5)),DCB=BLKSIZE=2150
//SORTWK01  DD   UNIT=VIO,SPACE=(CYL,(5,2),,CONTIG)
//SORTWK02  DD   UNIT=VIO,SPACE=(CYL,(5,2),,CONTIG)
//SYSIN     DD   *
TLMS018,SCRATCH,DSN(44),FILESEQ,VOLCNT,VSN,BLKSIZE,LRECL,RECFM,        X
CDATE,BLKCNT
/*
//**-----------------------------------------------------------------**
//STEP03    EXEC  PGM=ICEMAN
//SORTIN    DD    DSN=&&TEMP1,DISP=(OLD,PASS)
//SYSOUT    DD    SYSOUT=*
//SORTOUT   DD    DSN=YYY.JCLIST,DISP=OLD
//SYSPRINT  DD    SYSOUT=*
//SYSIN     DD    *
   OPTION COPY
   INCLUDE COND=(56,3,CH,EQ,C'  1',           TEST FOR MONOVOLUME      *
                AND,2,3,CH,EQ,C' NO',           "   "  SCRATCH=NO      *
                AND,52,3,CH,EQ,C'  1',          "   "  FSEQ=1          *
                AND,94,5,CH,LE,C'20000',        "  BLKCNT - (8 BYTE)   *
                AND,6,8,CH,EQ,C'E.TNE.NA')      "   "  PATTERN/DSN
/*
//**-----------------------------------------------------------------**
//STEP04    EXEC  PGM=CNVPBTPC
//STEPLIB   DD    DSN=YYY.LOADLIB,DISP=SHR
//SYSOUT    DD    SYSOUT=*
//FINP      DD    DSN=YYY.JCLIST,DISP=SHR
//FOUT      DD    DSN=YYY.JCLTNC,DISP=SHR
//**-----------------------------------------------------------------**
//STEP05    EXEC  PGM=-IEBGENER,COND=(9,NE,STEP04)
//SYSPRINT  DD    DUMMY
//SYSIN     DD    DUMMY
//SYSUT2    DD    DSN=YYY.JCLTNC,DISP=SHR
//SYSUT1    DD    DUMMY,DCB=(LRECL=80,RECFM=FB,BLKSIZE=8000)

PROGRAM SOURCE CODE

 ID DIVISION.
 PROGRAM-ID.     CNVPBTPC.
**-------------------------------------------------**
** COMPILER OPTION:   SSRANGE,OPT                  **
**-------------------------------------------------**
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT FINP      ASSIGN     TO UT-S-FINP.
     SELECT FOUT      ASSIGN     TO UT-S-FOUT.
 DATA DIVISION.
 FILE SECTION.
 FD  FINP
          BLOCK  CONTAINS 0 RECORDS
          RECORDING  MODE IS F.
 01  REC-FINP                            PIC X(133).
 FD  FOUT
          BLOCK  CONTAINS 0 RECORDS
          RECORDING  MODE IS F.
 01  REC-FOUT                            PIC X(80).
 WORKING-STORAGE SECTION.
 77   W-IND                        PIC S9(4) COMP VALUE 0.
 77   W-INE                        PIC S9(2) COMP VALUE 0.
 77   W-INF                        PIC S9(2) COMP VALUE 0.
 77   W-GDG                        PIC S9(4) COMP VALUE 0.
 77   W-DUP                        PIC S9(4) COMP VALUE 0.
 77   W-REC                        PIC S9(4) COMP VALUE 0.
 77   W-CNV                        PIC S9(4) COMP VALUE 0.
 77   W-ERR                        PIC S9(4) COMP VALUE 0.
 77   W-LNG                        PIC S9(2) COMP VALUE 0.
 77   W-TLN                        PIC S9(4) COMP VALUE 0.
 01   W-TAB-FILE.
      03   W-TAB-FILE-ELEM OCCURS 10.
         05 W-ELEM-FILE-DSN           PIC X(44).
         05 W-ELEM-FILE-BLKSIZE       PIC X(5).
         05 W-ELEM-FILE-LRECL         PIC X(5).
         05 W-ELEM-FILE-RECFM         PIC X(3).
 01   W-DUP-DSN                    PIC X(44) VALUE SPACES.
 01   W-REC-FINP.
      03  FILLER                   PIC X.
      03  W-REC-FINP-USE           PIC X(3).
          88 SCRATCH    VALUE "YES".
          88 USED       VALUE " NO".
      03  FILLER                   PIC X.
      03  W-REC-FINP-DSN.
          05 W-TAB-DSN-ELEM OCCURS 44.
             07 W-ELEM-DSN         PIC X.
      03  FILLER                   PIC X(2).
      03  W-REC-FINP-FSEQ          PIC X(3).
          88 MFILE      VALUE "  1".
      03  FILLER                   PIC X.
      03  W-REC-FINP-NVL           PIC X(3).
          88 MONO       VALUE "  1".
      03  FILLER                   PIC X.
      03  W-REC-FINP-VOLSER        PIC X(6).
      03  FILLER                   PIC X.
      03  W-REC-FINP-BLKSIZE       PIC X(5).
      03  FILLER                   PIC X.
      03  W-REC-FINP-LRECL         PIC X(5).
      03  FILLER                   PIC X.
      03  W-REC-FINP-RECFM         PIC X(3).
 01   FILLER REDEFINES W-REC-FINP.
      03  FILLER                   PIC X(5).
      03  FILLER                   PIC X(44).
          88 CLOSED     VALUE ALL "$".
 01   W-CARD-JOB.
      03  FILLER                   PIC X(8)    VALUE "//IBMUSR".
      03  W-CARD-JOB-PR            PIC 9(2)    VALUE 0.
      03  FILLER                   PIC X(33)
          VALUE " JOB ,IBMUSER,CLASS=A,MSGCLASS=X,".
      03  FILLER                   PIC X(24)
          VALUE "COND=(0,NE),TYPRUN=HOLD".
 01   W-CARD-END-SYSIN             PIC X(80)    VALUE "/*".
 01   W-CARD-EXEC-IDC.
      03  FILLER                   PIC X(6)     VALUE "//STEP".
      03  W-CARD-EXEC-IDC-PR       PIC X(2)     VALUE SPACES.
      03  FILLER                   PIC X(17)
          VALUE "  EXEC PGM-IDCAMS".
 01   W-CARD-EXEC-IEB.
      03  FILLER                   PIC X(5)     VALUE "//STE".
      03  W-CARD-EXEC-IEB-PR       PIC 9(3)     VALUE 0.
      03  FILLER                   PIC X(32)
          VALUE "  EXEC PGM=IEBGENER,REGION=5M".
 01   W-CARD-SYSIN.
      03  FILLER                   PIC X(11) VALUE "//SYSIN DD ".
      03  W-CARD-SYSIN-PARM        PIC X(20)    VALUE SPACES.
 01   W-CARD-DEL.
      03  FILLER                   PIC X(6)     VALUE "  DEL ".
      03  W-CARD-DEL-DSN           PIC X(44)    VALUE SPACES.
      03  FILLER                   PIC X(6)     VALUE " NSCR".
 01   W-CARD-LIST.
      03  FILLER                   PIC X(13)
          VALUE " LISTCAT ENT(".
      03  W-CARD-LIST-DSN          PIC X(44)    VALUE SPACES.
      03  FILLER                   PIC X(5)     VALUE ") ALL".
 01   W-CARD-SYSPRINT.
      03  FILLER                   PIC X(23)
          VALUE "//SYSPRINT DD SYSOUT=*".
 01   W-CARD-SYSUT1.
      03  FILLER                   PIC X(26)
          VALUE "//SYSUT1  DD DISP=SHR,DSN=".
      03  W-CARD-SYSUT1-DSN        PIC X(44)    VALUE SPACES.
 01   W-CARD-SYSUT2.
      03  FILLER                   PIC X(16)
          VALUE "//SYSUT2 DD DSN=".
      03  W-CARD-SYSUT2-DSN        PIC X(44)   VALUE SPACES.
 01   W-CARD-LABEL.
      03  FILLER                   PIC X(10)   VALUE "// LABEL=(".
      03  W-CARD-LABEL-NBR         PIC 9(2)    VALUE 0.
      03  FILLER                   PIC X(20)
          VALUE ",SL),DISP=(,CATLG),".
 01   W-CARD-VOL.
      03  FILLER                   PIC X(20)
          VALUE "// VOL=(,,,REF=*.STE".
      03  W-CARD-VOL-STEN          PIC 9(3)    VALUE ZEROES.
      03  FILLER                   PIC X(9)    VALUE ".SYSUT2),".
 01   W-CARD-DCB.
      03  FILLER                   PIC X(25)
          VALUE "// UNIT=TAPEC,DCB=(LRECL=".
      03  W-CARD-DCB-LRECL         PIC X(5)    VALUE SPACES.
      03  FILLER                   PIC X(9)    VALUE ",BLKSIZE=".
      03  W-CARD-DCB-BLKSIZE       PIC X(5)    VALUE SPACES.
      03  FILLER                   PIC X(7)    VALUE ",RECFM=".
      03  W-CARD-DCB-RECFM         PIC X(3)    VALUE SPACES.
      03  FILLER                   PIC X       VALUE ")".
 01   W-CARD-DCB-TAB.
      03  FILLER                   PIC X(3).
      03  W-TAB-DCB OCCURS 68.
          05 W-ELEM-DCB            PIC X.
 01   W-CARD-REMARK.
      03  FILLER                   PIC X(3)     VALUE "//*".
      03  FILLER                   PIC X(74)    VALUE ALL "-".
      03  FILLER                   PIC X(3)     VALUE "*//".
 PROCEDURE DIVISION.
 ML0000.
      OPEN         INPUT  FINP
                   OUTPUT FOUT.
      MOVE         0 TO TALLY W-IND.
      READ         FINP   INTO W-REC-FINP
         AT END DISPLAY   " 'FINP' EMPTY DATASET    <----------"
                MOVE 9 TO RETURN-CODE
                GO TO     ML9999.
 ML0030.
      ADD          1 TO W-REC.
      IF           NOT MONO
                    OR W-REC-FINP-DSN = SPACES
                     OR NOT MFILE
                      OR SCRATCH
                DISPLAY " WRONG RECORD - DSN = " W-REC-FINP-DSN
                 ADD 1 TO W-ERR
                  GO TO ML2000
      END-IF.
      MOVE      0 TO W-LNG.
      INSPECT   W-REC-FINP-DSN TALLYING W-LNG FOR
                CHARACTERS BEFORE " ".
      IF        W-ELEM-DSN (W-LNG - 2) = "V"
                 AND W-ELEM-DSN (W-LNG - 7) = "G"
                  AND W-ELEM-DSN (W-LNG - 8) = "."
                   ADD 1 TO W-GDG
                    GO TO ML2000
      END-IF.
      MOVE      0 TO W-LNG.
      INSPECT   W-REC-FINP-DSN TALLYING W-LNG FOR ALL " ".
      IF        W-LNG NOT > 3
                ADD 1 TO W-TLN
                DISPLAY " TOO LONG DSNAME   " W-REC-FINP-DSN
                GO TO ML2000
      END-IF.
      MOVE      W-REC-FINP-DSN TO W-DUP-DSN.
      ADD       1 TO TALLY W-CNV.
      MOVE      W-REC-FINP-DSN     TO W-ELEM-FILE-DSN (TALLY)
      MOVE      W-REC-FINP-LRECL   TO W-ELEM-FILE-LRECL (TALLY)
      MOVE      W-REC-FINP-BLKSIZE TO W-ELEM-FILE-BLKSIZE (TALLY)
      MOVE      W-REC-FINP-RECFM   TO W-ELEM-FILE-RECFM (TALLY)
      IF        TALLY NOT = 10
                GO TO ML2000
      END-IF.
 ML0060.
      IF        TALLY = 0
                 GO TO ML2000
      END-IF.
      ADD           1 TO W-CARD-JOB-PR.
      MOVE          0 TO W-CARD-EXEC-IEB-PR.
      WRITE         REC-FOUT FROM W-CARD-JOB.
      MOVE          "LL"  TO W-CARD-EXEC-IDC-PR.
      WRITE         REC-FOUT FROM W-CARD-EXEC-IDC.
      WRITE         REC-FOUT FROM W-CARD-SYSPRINT.
      MOVE          "  *" TO W-CARD-SYSIN-PARM.
      WRITE         REC-FOUT FROM W-CARD-SYSIN.
      MOVE          TALLY TO W-IND
      PERFORM       WITH TEST BEFORE UNTIL W-IND = 0
        MOVE    W-ELEM-FILE-DSN(W-IND) TO W-CARD-LIST-DSN
        WRITE   REC-FOUT FROM W-CARD-LIST
        SUBTRACT 1 FROM W-IND
      END-PERFORM.
      WRITE         REC-FOUT FROM W-CARD-END-SYSIN.
      MOVE          TALLY TO W-IND
      PERFORM       WITH TEST BEFORE UNTIL W-IND = 0
         ADD   1 TO W-CARD-EXEC-IEB-PR
         WRITE REC-FOUT FROM W-CARD-EXEC-IEB
         WRITE REC-FOUT FROM W-CARD-SYSPRINT
         MOVE  " DUMMY  " TO W-CARD-SYSIN-PARM
         WRITE REC-FOUT FROM W-CARD-SYSIN
         MOVE  W-ELEM-FILE-DSN (W-IND) TO W-CARD-SYSUT1-DSN
         INSPECT W-CARD-SYSUT1-DSN REPLACING FIRST  " " BY ","
         WRITE REC-FOUT FROM W-CARD-SYSUT1
         MOVE  W-ELEM-FILE-RECFM (W-IND) TO W-CARD-DCB-RECFM
         MOVE  W-ELEM-FILE-LRECL (W-IND) TO W-CARD-DCB-LRECL
         MOVE  W-ELEM-FILE-BLKSIZE (W-IND) TO W-CARD-DCB-BLKSIZE
         MOVE  W-CARD-DCB TO W-CARD-DCB-TAB
         MOVE  55 TO W-INE
         MOVE  56 TO W-INF
           PERFORM WITH TEST BEFORE UNTIL W-INE = 0
             IF W-ELEM-DCB (W-INE) NOT = " "
                MOVE W-ELEM-DCB (W-INE) TO W-ELEM-DCB (W-INF)
                MOVE " " TO W-ELEM-DCB (W-INE)
                SUBTRACT 1 FROM W-INF
             END-IF
             SUBTRACT 1 FROM W-INE
           END-PERFORM
         WRITE REC-FOUT FROM W-CARD-DCB-TAB
         MOVE  W-ELEM-FILE-DSN (W-IND) TO W-CARD-SYSUT2-DSN
         INSPECT W-CARD-SYSUT2-DSN
                 REPLACING FIRST "     " BY ".CNV,"
         WRITE REC-FOUT FROM W-CARD-SYSUT2
         COMPUTE W-CARD-LABEL-NBR = TALLY - W-IND + 1
         WRITE REC-FOUT FROM W-CARD-LABEL
             IF W-CARD-EXEC-IEB-PR NOT = 1
                COMPUTE W-CARD-VOL-STEN = W-CARD-EXEC-IEB-PR - 1
                WRITE REC-FOUT FROM W-CARD-VOL
             END-IF
         WRITE REC-FOUT FROM W-CARD-DCB-TAB
         SUBTRACT 1 FROM W-IND
      END-PERFORM.
      MOVE          "DD" TO W-CARD-EXEC-IDC-PR.
      WRITE         REC-FOUT FROM W-CARD-EXEC-IDC.
      WRITE         REC-FOUT FROM W-CARD-SYSPRINT.
      MOVE          "  *" TO W-CARD-SYSIN-PARM.
      WRITE         REC-FOUT FROM W-CARD-SYSIN.
      MOVE          TALLY TO W-IND
      PERFORM       WITH TEST BEFORE UNTIL W-IND = 0
        MOVE    W-ELEM-FILE-DSN (W-IND) TO W-CARD-DEL-DSN
        WRITE   REC-FOUT FROM W-CARD-DEL
        SUBTRACT 1 FROM W-IND
      END-PERFORM.
      WRITE         REC-FOUT FROM W-CARD-END-SYSIN.
      WRITE         REC-FOUT FROM W-CARD-REMARK.
      MOVE          SPACES TO W-TAB-FILE.
      MOVE          0 TO TALLY W-IND.
 ML2000.
      IF           CLOSED
                GO TO ML9999
      END-IF.
      READ         FINP   INTO  W-REC-FINP
         AT END MOVE  ALL "$" TO W-REC-FINP-DSN
                GO TO ML0060.
      IF           W-DUP-DSN = W-REC-FINP-DSN
           DISPLAY "DUP -> " W-REC-FINP-DSN " " W-REC-FINP-VOLSER
            ADD 1 TO W-DUP
             MOVE 9 TO RETURN-CODE
              GO TO ML2000
      END-IF.
      GO TO     ML0030
 ML9999.
      CLOSE        FINP FOUT.
      DISPLAY      "**********************************".
      DISPLAY      "* INPUT  RECORD     *  " W-REC " *".
      DISPLAY      "* ERROR  DSNAME     *  " W-ERR " *".
      DISPLAY      "* GDG    FILE       *  " W-GDG " *".
      DISPLAY      "* DUP    DSN        *  " W-DUP " *".
      DISPLAY      "* LONG   DSN        *  " W-TLN " *".
      DISPLAY      "* CONVERTED FILE    *  " W-CNV " *".
      DISPLAY      "******************************".
      STOP         RUN.


Massimo Ambrosini  (Italy)                                                    c

