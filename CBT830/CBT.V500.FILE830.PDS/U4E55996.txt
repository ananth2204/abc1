Scanning DDNAMEs for specific members

SCANDDS ASSEMBLER SOURCE

*--- Title    : SCANDDS                                            ---*
*    Function : This program will scan the requested DDname for       *
*               all occurrences of the specified member.              *
*               The program will check to see if ISPF is active,      *
*               if it isn't, then a message is issued to this         *
*               effect. Otherwise the program invokes ISPF services   *
*               dynamically to scan for the specified member.         *
*    Notes    : Requires SYS1.MACLIB and SYS1.MODGEN for the          *
*               assembly.                                             *
* Register usage :                                                    *
*                  R12 Base register                                  *
*                  R2  Used for the TIOT address                      *
*                  R3  TIOELNGH Length counter                        *
*                  R4  Used for the DSCB address                      *
*                  R5  Used for the JFCB address                      *
*---               R9  Used for branch and link to read the DSCB   ---*
SCANDDS  TITLE 'SCAN TSO ALLOCATIONS FOR A MEMBER'
SCANDDS  CSECT
SCANDDS  AMODE 31
         USING SCANDDS,R15
         B     PASTINFO             Branch around the date
         DC    C'SCANDDS &SYSDATE'
PASTINFO EQU   *
         STM   R14,R12,12(R13)      Save caller's registers
         LR    R12,R15              Load new base register
         DROP  R15                  Drop register 15
         USING SCANDDS,R12          Use register 12 as my base
         LA    R11,SAVE             Point to my save area
         ST    R13,4(R11)           Store forward pointer
         ST    R11,8(R13)           Store backward pointer
         LR    R13,R11              Local save area pointer
*---     Check to see if ISPF is active                            ---*
CHKISPF  DS    0H
         LOAD  EP=ISPQRY            Get address of ISPQRY
         ST    R0,ISPQRY            Save it
         LR    R15,R0               And load it for CALL
         CALL  (15),ISPQRY,VL,MF=(E,CALLLIST)
         LTR   R15,R15              Is the return code = 00
         BZ    ISPFACT              Yep... ISPF lives!
NOISPF   EQU   *                    Otherwise ....
         STFSMODE ON                Set clear screen
         TPUT  SPACES,L'SPACES      Put in some fillers
         TPUT  SPACES,L'SPACES
         TPUT  ERRMSG1,L'ERRMSG1    Pass on the bad news to the invoker
         TPUT  SPACES,L'SPACES
         TPUT  ERRMSG2,L'ERRMSG2
         TPUT  SPACES,L'SPACES      Put in some more fillers
         TPUT  SPACES,L'SPACES
         STFSMODE OFF               Reset the screen
         XR    R15,R15              Set good return code
         B     GETOUT               Let's get the hell out of here
*---     Set up for dynamically calling ISPLINK                    ---*
ISPFACT  DS    0H
         LOAD  EP=ISPLINK           Get address of ISPLINK
         ST    R0,ISPLINK           Save it
         LR    R15,R0               And load it for CALL
*---     Define ISPF variables                                     ---*
*                                   Define ddname
         CALL  (15),(VDEFINE,NAME1,DDNAME,CHAR,L8),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Define ok?
         BNZ   DEFERR1              No..tell user and get out
*                                   Define member for vget
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(VDEFINE,NAME2,MEMBER,CHAR,L8),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Define ok?
         BNZ   DEFERR2              No..tell user and get out
*                                   Define member for tbadd
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(VDEFINE,NAME3,MEMNAME,CHAR,L8),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Define ok?
         BNZ   DEFERR2              No..tell user and get out
*                                   Define dataset name
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(VDEFINE,NAME4,DSNAME,CHAR,L44),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Define ok?
         BNZ   DEFERR3              No..tell user and get out
*                                   Define volser
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(VDEFINE,NAME5,VOLSER,CHAR,L6),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Define ok?
         BNZ   DEFERR4              No..tell user and get out
         SPACE
         MVC   DDNAME,SPACES        Clear the ddname field
         MVC   MEMBER,SPACES        Clear the member name field
*---     Create ISPF table                                         ---*
CREATAB  DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(TBCREATE,SCTABLE,NULL,SCANLIST,NOWRITE,REPLACE),  X
               VL,MF=(E,CALLLIST)
         C     R15,=F'04'           Was tbcreate successful?
         BH    TBCRERR              Nope... then say so and get out
*---     Display panel                                             ---*
DISPPAN  DS 0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(DISPLAY,SCANP1,(R1)),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Was PF3/END/RETURN entered?
         BNZ   GETOUT               Yep... then get out
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(VGET,VARLIST),VL,MF=(E,CALLLIST)
*---     Get the address of the TIOT                               ---*
GETTIOT  DS    0H
         EXTRACT ANSWER,'S',FIELDS=(TIOT)
*---     Read the TIOT entries                                     ---*
READTIOT DS    0H
         L     R2,ANSWER            Load TIOTPTR address
         USING TIOT1,R2             Establish addressability
         LA    R2,TIOENTRY          Address TIODDPTR entries
         USING TIOENTRY,R2          Establish addressability
         SLR   R3,R3                Clear down reg 3
*---     Look for the DD name                                      ---*
SCAN     DS    0H
         IC    R3,TIOELNGH          Get the length of the entry
         CLI   TIOELNGH,X'00'       Are we at the end of the entries?
         BE    NODD                 Yep... DD not found
         CLI   TIOSLTYP,X'80'       Is it a free entry?
         BE    NEXT                 Yes.. skip to the next entry
         CLC   TIOEDDNM,DDNAME      Is it DD name we are looking for
         BE    GOTDD                Yes
NEXT     DS    0H
         AR    R2,R3                Add to get to the next entry
         B     SCAN
*---     Found the DD that we are interested in                    ---*
GOTDD    DS    0H
         SLR   R5,R5                Clear down reg 5
         ICM   R5,B'0111',TIOEJFCB  Only want last 3 bytes to get
*                                   the JFCB
         LA    R5,16(0,R5)
         USING INFMJFCB,R5          Addressability of JFCB
         MVC   VOLNUM,JFCBVOLS      Save volser for obtain
         MVC   DSDSN,JFCBDSNM       Save dsname for obtain
         MVC   MEMNAME,SPACES       Clear the member name
         BAL   R9,READDSCB          Let's see if we can find the member
         MVC   DSNAME,JFCBDSNM      Save dsname for tbadd
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(TBADD,SCTABLE),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Test return code
         BNZ   TBADDERR             Trouble with TBADD
         MVC   DSNAME,SPACES        Clear the name
         MVC   VOLSER,SPACES        Clear the volser
         MVC   DDNAME,SPACES        Clear the ddname
*---     Look for concatenated datasets                            ---*
NEXTONE  DS    0H
         AR    R2,R3                SKIP to get the next entry
         IC    R3,TIOELNGH          Get the length of the entry
         CLI   TIOSLTYP,X'80'       Is it a free entry?
         BE    NEXTONE              Yes.. skip to the next entry
         CLI   TIOELNGH,X'00'       Are we at the end of the entries?
         BE    REDISP               Yep... show the user
         CLC   TIOEDDNM,BLANKS      Are we at the end of concats?
         BNE   REDISP               Yep... show the user
         B     GOTDD
*---     Read DSCB of the dataset                                  ---*
READDSCB DS    0H
         OBTAIN DSCBDSN             Get DSCB of dsn
         LA    R4,WORKAREA          Load address of the DSCB
         USING DS1FMTID,R4          Establish addressability for DSCB
         B     *+4(R15)             Test the return code
         B     ISITPDS              OK ==> RC=00
         B     RCODE04              Vol not mounted
         B     RCODE08              Format-1 DSCB not found
*                                   in the VTOC specified
         B     RCODE12              I/O error or invalid format-1
*                                   or unexpected return code
*                                   received from CVAF
         B     RCODE16              Invalid work area pointer
ISITPDS  DS    0H
         CLI   DS1DSORG,X'02'       Is it a PDS?
         BE    PDS                  Yep...
         DROP  R4
         MVC   VOLSER,NOTPDS        Not a PDS message
         BR    R9
PDS      DS    0H
         MVC   DSNIN,JFCBDSNM       Move in dsn for SVC99
         MVC   VOLIN,JFCBVOLS       Move in volser for SVC99
         MVC   VOLSER,JFCBVOLS      Save volser for tbadd
ALLOC    DS    0H
         LA    R1,ALLOC99           Get ready for dynamic allocation
         SVC   99                   Invoke alloc/dealloc SVC
         OPEN  (PDSDIR,INPUT)       Open dataset for read
         XR    R4,R4                Clear Reg 4
READDIR  DS    0H
         GET   PDSDIR,DIRAREA       Read the directory
         LA    R4,DIRAREA           Get the address of the directory
         AH    R4,0(,R4)            Add number of used bytes
         ST    R4,ENDOFBUF          Store address of last used byte
         LA    R4,DIRAREA+2         Point to first directory entry
         USING DIRECTRY,R4          Map the directory
COMPMEMB DS    0H
         CLC   DIRNAME,=X'FFFFFFFFFFFFFFFF' Are we at the end?
         BE    CLOSEDIR             Yep.. then get out
         CLC   DIRNAME,MEMBER       Is this the member ?
         BE    WRITEIT              Yep...
         XR    R1,R1                No... then clear reg 1
         LA    R4,DIRC              Get DIRC address
         NI    0(R4),X'1F'          Remove unwanted bits
         IC    R1,0(,R4)            Insert DIRC into R1
         SLL   R1,1                 Multiply by 2
         C     R4,ENDOFBUF          Are we at the end of the buffer?
         BH    READDIR              Yep...
         LA    R4,1(R1,R4)          Load address of the next member
         B     COMPMEMB
WRITEIT  DS    0H
         MVC   MEMNAME,MEMBER       Move in member name for tbadd
CLOSEDIR DS    0H
         CLOSE PDSDIR               Get out of the PDS
         BR    R9
RCODE04  DS    0H
         MVC   VOLSER,RC04          RC=04
         BR    R9
RCODE08  DS    0H
         MVC   VOLSER,RC08          RC=08
         BR    R9
RCODE12  DS    0H
         MVC   VOLSER,RC12          RC=12
         BR    R9
RCODE16  DS    0H
         MVC   VOLSER,RC16          RC=16
         BR    R9
*---     DD not found                                              ---*
NODD     DS    0H
         MVC   DSNAME,NODSN         Move in the not found message
         MVC   MEMBER,SPACES        Clear the member name
         MVC   VOLSER,SPACES        Clear down volser field
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(TBADD,SCTABLE),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Test return code
         BNZ   TBADDERR             Trouble with TBADD
*---     Re-display the panel                                      ---*
REDISP   DS    0H
         L     R15,ISPLINK
         CALL  (15),(TBTOP,SCTABLE),VL,MF=(E,CALLLIST)
         L     R15,ISPLINK
         CALL  (15),(TBDISPL,SCTABLE,SCANP2),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Was PF3/END/RETURN entered?
         BNZ   CLOSETAB             Yep... then get out
         B     REDISP
*---     Close the table                                           ---*
CLOSETAB DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(TBCLOSE,SCTABLE),VL,MF=(E,CALLLIST)
         LTR   R15,R15              Was tbclose ok?
         BH    TBCLERR              Nope... then say so and get out
         B     GETOUT               Let's get the hell out of here
*---     Tell user we had trouble with VDEFINE for DDname          ---*
DEFERR1  DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(DISPLAY,SCANM1,SCAN001),VL,MF=(E,CALLLIST)
         XR    R15,R15              Set good return code
         B     GETOUT               Let's get the hell out of here
*---     Tell user we had trouble with VDEFINE for Member          ---*
DEFERR2  DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(DISPLAY,SCANM1,SCAN002),VL,MF=(E,CALLLIST)
         XR    R15,R15              Set good return code
         B     GETOUT               Let's get the hell out of here
*---     Tell user we had trouble with VDEFINE for Memname         ---*
DEFERR3  DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(DISPLAY,SCANM1,SCAN003),VL,MF=(E,CALLLIST)
         XR    R15,R15              Set good return code
         B     GETOUT               Let's get the hell out of here
*---     Tell user we had trouble with VDEFINE for ds name         ---*
DEFERR4  DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(DISPLAY,SCANM1,SCAN004),VL,MF=(E,CALLLIST)
         XR    R15,R15              Set good return code
         B     GETOUT               Let's get the hell out of here
*---     Tell user we had trouble with VDEFINE for volser          ---*
DEFERR5  DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(DISPLAY,SCANM1,SCAN005),VL,MF=(E,CALLLIST)
         XR    R15,R15              Set good return code
         B     GETOUT               Let's get the hell out of here
*---     Tell user we had trouble with TBADD                       ---*
TBADDERR DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(DISPLAY,SCANM1,SCAN007),VL,MF=(E,CALLLIST)
         XR    R15,R15              Set good return code
         B     GETOUT               Let's get the hell out of here
*---     Tell user we had trouble with TBCREATE                    ---*
TBCRERR  DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(DISPLAY,SCANM1,SCAN006),VL,MF=(E,CALLLIST)
         XR    R15,R15              Set good return code
         B     GETOUT               Let's get the hell out of here
*---     Tell user we had trouble with TBCLOSE                     ---*
TBCLERR  DS    0H
         L     R15,ISPLINK          Get ISPLINK address
         CALL  (15),(DISPLAY,SCANM1,SCAN008),VL,MF=(E,CALLLIST)
         XR    R15,R15              Set good return code
         B     GETOUT               Let's get the hell out of here
*---     Clean up and get out                                      ---*
GETOUT   DS    0H
         L     R13,4(R13)           Get caller's save area
         LM    R14,R12,12(13)       Restore caller's regs
         LA    R15,00               Set return code
         BR    R14
*---     Define working storage areas                              ---*
ANSWER   DC    A(0)                 TCB extract address
BLANKS   DC    CL44' '
CHAR     DC    CL8'CHAR    '
DDNAME   DC    CL8'        '
NAME1    DC    CL8'DDNAME  '
NAME2    DC    CL8'MEMBER  '
NAME3    DC    CL8'MEMNAME '
NAME4    DC    CL8'DSNAME  '
NAME5    DC    CL8'VOLSER  '
DIRAREA  DS    CL256                To read pds directory
DISPLAY  DC    CL8'DISPLAY '        DISPLAY SERVICE
DSNAME   DC    CL44'DSNAME                                      '
ENDOFBUF DC    F'0'
L6       DC    F'6'                 VDEFINE length
L8       DC    F'8'                 VDEFINE length
L44      DC    F'44'                VDEFINE length
MEMBER   DC    CL8'        '
MEMNAME  DC    CL8'        '
NODSN    DC    CL44'DDNAME specified not allocated              '
NOTPDS   DC    CL6'NOTPDS'
NULL     DC    CL1' '
RC04     DC    CL6'RC=04  '
RC08     DC    CL6'RC=08  '
RC12     DC    CL6'RC=12  '
RC16     DC    CL6'RC=16  '
VGET     DC    CL8'VGET    '        VGET SERVICE
VPUT     DC    CL8'VPUT    '        VPUT SERVICE
VDEFINE  DC    CL8'VDEFINE '        VDEFINE SERVICE
VOLSER   DC    CL6'VOLSER'
SCANP1   DC    CL8'SCANP1  '        Panel name
SCANP2   DC    CL8'SCANP2  '        Panel name for tbdispl
SCANM1   DC    CL8'SCANM1  '        Panel name for messages
SCAN001  DC    CL8'SCAN001 '        VDEFINE error msg for ddname
SCAN002  DC    CL8'SCAN002 '        VDEFINE error msg for member
SCAN003  DC    CL8'SCAN003 '        VDEFINE error msg for memname
SCAN004  DC    CL8'SCAN004 '        VDEFINE error msg for dsn
SCAN005  DC    CL8'SCAN005 '        VDEFINE error msg for volser
SCAN006  DC    CL8'SCAN006 '        TBCREATE error
SCAN007  DC    CL8'SCAN007 '        TBADD error
SCAN008  DC    CL8'SCAN008 '        TBCLOSE error
SAVE     DC    18F'0'               New save area
DSCBDSN  CAMLST SEARCH,DSDSN,VOLNUM,WORKAREA
DSDSN    DC     CL44' '             Dataset name
VOLNUM   DC     CL6' '              Volser
WORKAREA DS     CL140               140 byte work area
*   Dynamic allocation
         DS    0D                   Align on dw boundary
         DC    CL8'OWNO'
ALLOC99  DC    A(ALLOCRB+X'80000000')    Turn the high order bit on
*                                   Must be on fw boundary
ALLOCRB  DC    AL1(20)              Length
         DC    AL1(01)              Verb code - 01 = dsname
*                                                    allocation
         DC    AL2(0)               Alloc  - flags1
RETCODE  DC    AL2(0)               Return code - s99error
INFOCODE DC    AL2(0)               Infor code  - s99info
         DC    A(ALLOCTP)           Pointer to text units
         DC    A(0,0)               Reserved flags
ALLOCTP  DC    A(DATASET)           Dataset name
         DC    A(DDNAMEA)           DD name
         DC    A(DISP)              Disp=shr
         DC    A(UNIT)              Unit=sysallda
         DC    A(DISKIN)            Volser
         DC    A(FREE+X'80000000')  Free at dcb close - set high-
*                                        order byte to signify end
DATASET  DC    X'0002'              Unit key 2 -d/s to be
*                                        allocated
         DC    X'0001'              No d/s to be allocated
         DC    X'002C'             Length of dsn
DSNIN    DC    CL44' '             DSN to alloc/dealloc
DDNAMEA  DC    X'0001'             Associates a ddname
         DC    X'0001'             Must be one
         DC    X'0008'             DD length
PDSIN    DC    CL8'PDSDIR'         DD name
DISP     DC    X'0004'             Disposition
         DC    X'0001'             Must be one
         DC    X'0001'             Must be one
         DC    X'08'               Share
UNIT     DC    X'0015'             Unit
         DC    X'0001'             Must be one
         DC    X'0008'             Length
         DC    CL8'SYSALLDA'       DD name
DISKIN   DC    X'0010'             Volser
         DC    X'0001'             No of volumes being specified
         DC    X'0006'             Length
VOLIN    DC    CL6' '              Volume
FREE     DC    X'001C'             Unallocation
         DC    X'0000'             Must be zero
PDSDIR   DCB   DDNAME=PDSDIR,                                          X
               DSORG=PS,                                               X
               LRECL=256,                                              X
               BLKSIZE=256,                                            X
               MACRF=(GM),                                             X
               RECFM=F,                                                X
               EODAD=CLOSEDIR
*---     Define table requirements                                ---*
NOWRITE  DC    C'NOWRITE '
WRITE    DC    C'WRITE   '
REPLACE  DC    C'REPLACE '
SCANLIST DC    C'(DDNAME DSNAME VOLSER MEMNAME)'
VARLIST  DC    C'(DDNAME MEMBER)'
SCTABLE  DC    C'SCTABLE '
TBADD    DC    C'TBADD   '
TBCLOSE  DC    C'TBCLOSE '
TBCREATE DC    C'TBCREATE'
TBDISPL  DC    C'TBDISPL '
TBLIST   DC    C'TBLIST  '
TBQUERY  DC    C'TBQUERY '
TBSTATS  DC    C'TBSTATS '
TBTOP    DC    C'TBTOP   '
*---     Define parameter list for ISPLINK                        ---*
CALLLIST CALL  ,(,,,,,,,,,,),MF=L  CALL LIST FORM
ISPLINK  DS    F
ISPQRY   DS    F
*---     Define TPUT message                                      ---*
LOSTIT   DS    0CL80
         DC    CL10' '
         DC    CL33'Sorry no can do! DD not allocated'
         DC    CL37' '
SPACES   DC    CL80' '
ERRMSG1  DS    0CL80
         DC    CL10' '
         DC    CL28'WARNING - ISPF NOT ACTIVE'
         DC    CL52' '
ERRMSG2  DS    0CL80
         DC    CL10' '
         DC    CL42'This program requires ISPF services to run'
         DC    CL28' '
*---     DSECTS                                                   ---*
DIRECTRY DSECT           Directory dsect
DIRNAME  DS    CL8       Member name
DIRTTR   DS    CL3       TTR
DIRC     DS    CL1       No of halfwords contained in user data field
FORMAT1  DSECT           DSCB dsect
         IECSDSL1 1
JFCBDSCT DSECT           JFCB dsect
         IEFJFCBN
TIOTDSCT DSECT           TIOT dsect
         IEFTIOT1
         END   SCANDDS

ASSEMBLY JCL

//jobname  JOB
/*JOBPARM K=0,L=999,R=xxxx
//*
//PRINT    OUTPUT DEPT='systems programming',
//         NAME='your name',
//         ROOM='location'
//**********************************************************************
//***            COMPILE                                             ***
//**********************************************************************
//C        EXEC PGM=IEV90,PARM=(NODECK,OBJECT)
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR
//         DD DSN=SYS1.MODGEN,DISP=SHR
//SYSUT1   DD DSN=&SYSUT1,
//            DCB=BUFNO=1,
//            SPACE=(1024,(120,120),,,ROUND),
//            UNIT=SYSDA
//SYSPUNCH DD SYSOUT=*
//SYSPRINT DD SYSOUT=SYSOUT= ,OUTPUT=(*.PRINT)
//SYSLIN   DD DSN=&OBJ,DISP=(MOD,PASS),
//            DCB=(BLKSIZE=3040,LRECL=80,RECFM=FBS,BUFNO=1),
//            SPACE=(3040,(40,40),,,ROUND),
//            UNIT=SYSDA
//*
//*   Assemble source dataset
//*
//SYSIN    DD DSN=assem.input.dataset(SCANDDS),DISP=SHR
//*
//**********************************************************************
//***            COMPILE                                             ***
//**********************************************************************
//L        EXEC PGM=IEWL,COND=(5,LT,C),
//         PARM='LIST,LET,XREF,MAP'
//*
//SYSPRINT DD SYSOUT=SYSOUT=N,OUTPUT=(*.PRINT)
//SYSLMOD  DD DSN=your.program.library,DISP=SHR
//SYSUT1   DD DSN=&SYSUT1,
//            DCB=BUFNO=1,
//            SPACE=(1024,(120,120),,,ROUND),
//            UNIT=SYSDA
//OBJIN    DD DSN=&OBJ,DISP=(OLD,DELETE)
//SYSLIN   DD *
   INCLUDE OBJIN
   NAME SCANDDS(R)
/*

SCANP1 PANEL

)ATTR DEFAULT(%+_)
  +  TYPE(TEXT) INTENS(LOW) SKIP(ON)
  %  TYPE(TEXT) INTENS(HIGH) SKIP(ON)
  _  TYPE(INPUT) INTENS(HIGH)
)BODY
+-------------------------------------------------------------------------------
%                        SCAN DD ALLOCATIONS FOR A MEMBER
+-------------------------------------------------------------------------------
%OPTION  ===>_ZCMD                                                             +




%   ENTER DD NAME AND MEMBER TO BE SCANNED



%    DD NAME     ===> _ddname  +

%    MEMBER NAME ===> _member  +






+Press%END+to terminate
+-------------------------------------------------------------------------------
)INIT
 .cursor = ddname
)REINIT
 REFRESH(*)
)PROC
 if (.resp = enter )
 ver (&ddname,nb)
 ver (&member,nb)
 vput (ddname,member) shared
)END

SCANP2 PANEL

)ATTR
   @ TYPE(OUTPUT) INTENS(LOW)
)BODY
%------------------------- TSO SCAN PROGRAM -----------------------------------
%
%ENTER COMMAND ===> _Z                                %SCROLL ===>_VAMT+
%
 DDNAME      DSNAME                                         VOLSER   MEMBER  +
%
)MODEL
@Z       +  @Z                                           + @Z     + @Z       +
)INIT
  .ZVARS = '(ZCMD DDNAME DSNAME VOLSER MEMNAME)'
  &ZTDMARK = '******************************** BOTTOM OF DATA *****************+
**************'
)PROC
  IF (.RESP = ENTER )
)END

SCANM1 PANELFOR ERROR MESSAGES

+------------------------% TSO DD SCAN PROGRAM +--------------------------------
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |    This program has encountered an error,                                   |
 |       refer to the short message.                                           |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 |                                                                             |
 | Press%END+key to return.                                                    |
+-------------------------------------------------------------------------------
)PROC
)END                                                                           |

SCAN00 ISPF MESSAGE MEMBER

SCAN001 'VDEFINE DDNAME ERROR'
'AN ERROR WAS ENCOUNTERED WITH THE VDEFINE SERVICE FOR DDNAME'
SCAN002 'VDEFINE MEMBER ERROR'
'AN ERROR WAS ENCOUNTERED WITH THE VDEFINE SERVICE FOR MEMBER'
SCAN003 'VDEFINE MEMBER ERROR'
'AN ERROR WAS ENCOUNTERED WITH THE VDEFINE SERVICE FOR MEMNAME'
SCAN004 'VDEFINE MEMBER ERROR'
'AN ERROR WAS ENCOUNTERED WITH THE VDEFINE SERVICE FOR DSNAME'
SCAN005 'VDEFINE MEMBER ERROR'
'AN ERROR WAS ENCOUNTERED WITH THE VDEFINE SERVICE FOR VOLSER'
SCAN006 'TBCREATE ERROR'
'AN ERROR WAS ENCOUNTERED CREATING AN ISPF TABLE'
SCAN007 'TBADD ERROR'
'AN ERROR WAS ENCOUNTERED ADDING TO THE TABLE'
SCAN008 'TBCLOSE ERROR'
'AN ERROR WAS ENCOUNTERED CLOSING AN ISPF TABLE'


I Dadabhoy
Systems Programmer (UK)                                     c Xephon 1995

