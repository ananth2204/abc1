A program with extended delete capabilities

Recently I discovered several datasets on our system that could not be deleted
by standard methods.  These were password protected datasets lingering on from
when we had RACF, and the index portion of a KSDS.  I tried deleting these
datasets with a number of different methods, but with no success.  Finally, I
discovered that if you issue the SCRATCH macro in key zero, it will bypass all
protection of that dataset and successfully delete it.  The generalised version
of the program seen here accepts card input and produces an audit trail.

Even though the program is technically simple, we could not have got over this
problem without it.

The program runs authorised, so link-edit it with AC=1 into an authorised
library.  We are running MVS/XA 2.1.3 but I am confident that it will also work
on SP.


SAMPLE JCL

//RUN EXEC PGM=DELETE
//SYSPRINT DD SYSOUT=Q
//SYSIN DD *
DELETE DSN=MY.BAD.DATASET,VOL=SYS001
DELETE DSN=MY.PROTECTED.DATASET,VOL=SYS001
/*


THE PROGRAM

DELETE   CSECT
         STM   14,12,12(13)       SAVE USERS REGISTERS
         LR    8,13               SAFESTORE SAVEAREA ADDRESS
         LR    12,15              ESTABLISH ADDRESSABILITY
         USING DELETE,12          USING REGISTER 12 AS BASE
         GETMAIN R,LV=72          GET OUR SAVEAREA BUFFER
         ST    8,4(1)             CHAINBACK USERS SAVEAREA
         LR    13,1               LOAD SAVEAREA INTO R13
         OPEN  (PRINT,(OUTPUT),INFILE,(INPUT))
GETREC   GET   INFILE,BUFF        GET RECORD
         PUT   PRINT,BUFF         PRINT IT OUT
         CLC   BUFF(6),=C'DELETE' DELETE COMMAND?
         BE    DEL                YES, THEN CONTINUE
PARMERR  MVI   EFLAG,C' '         SPACE
         MVC   EFLAG+1(79),EFLAG  OUT AREA
         S     2,=A(BUFF)         COMPUTE POSITION OF ERROR
         LA    2,EFLAG(2)         POINT AT IT
         MVI   0(2),C'*'          FLAG POSITION
         PUT   PRINT,EFLAG        PRINT ERROR LOCATION
         PUT   PRINT,BADCMD       PRINT ERROR MSG
         B     GETREC             AND GET NEXT RECORD
DEL      MVC   VOL(6),=6C' '      SPACE OUT VOLSER
         MVI   DSN,C' '           SPACE OUT
         MVC   DSN+1(43),DSN      DATASET NAME
         LA    2,BUFF+6           POINT AFTER "DELETE"
ARGLOOP  BAL   14,SUPPRESS        SUPPRESS SPACES
         CLC   0(4,2),=C'DSN='    DATASET NAME SPECIFICATION?
         BNE   NOTDSN             NO, THEN TRY "VOL"
         LA    2,4(2)             POINT TO DSN
         BAL   14,SUPPRESS        SUPPRESS ANY SPACES
         LR    3,2                SAVE DSN STARTING LOC
FINDEND  CLI   0(2),C','          COMMA ENDS DSN
         BE    DSNEND             GO IF COMMA
         CLI   0(2),C' '          SPACE ENDS IT ALSO
         BE    DSNEND             END IF SO
         LA    2,1(2)             BUMP ADDRESS
         C     2,=A(BUFF+80)      END OF CARD?
         BNL   PARMERR            ERROR IF SO
         B     FINDEND            CONTINUE SEARCH
DSNEND   LR    1,2                GET ENDING LOCATION
         SR    1,3                COMPUTE LENGTH
         BCTR  1,0                -1 FOR EX
         EX    1,MVCDSN           MOVE DATASET NAME
         LA    2,1(2)             POINT AFTER DSN TERMINATING CHAR
         B     ARGLOOP            AND CONTINUE
MVCDSN   MVC   DSN(*-*),0(3)
NOTDSN   CLC   0(4,2),=C'VOL='    VOLUME SPECIFICATION?
         BNE   PARMERR            NO, THEN ERROR
         MVC   VOL(6),4(2)        MOVE IN VOLSER
*** LOOKUP UCB OF DEVICE IN ORDER TO EXTRACT THE DEVICE TYPE ***
         LA    2,10(2)            POINT AFTER VOLSER
         L     3,CVTPTR           GET ADDRESS OF CVT
         L     3,CVTUCBA-CVTMAP(3) START OF UCBS
         USING UCBCMSEG,3         ESTABLISH ADDRESSABILITY
UCBLOOP  CLI   UCBTBYT3,UCB3DACC  DIRECT ACCESS DEVICE?
         BNE   NEXTUCB            NO, THEN CONTINUE
         CLC   UCBVOLI,VOL        IS THIS THE ONE?
         BE    VOLFOUND           YES, THEN CONTINUE
NEXTUCB  L     3,UCBNXUCB         GET ADDRESS OF NEXT UCB
         LTR   3,3                ANY NEXT?
         BNZ   UCBLOOP            YES, THEN CONTINUE SEARCH
         PUT   PRINT,BADVOL       INVALID VOLSER
         B     GETREC             AND CONTINUE
VOLFOUND MVC   DEVTYP,UCBTYP      SAVE DEVICE TYPE
         B     ARGLOOP            AND CONTINUE
         DROP  3
CMDEND   CLI   DSN,C' '           DID HE SPECIFY DSN?
         BE    PARMERR            NO, THEN ERROR
         CLI   VOL,C' '           HOW ABOUT VOLSER
         BE    PARMERR            NO, ALSO ERROR
         MODESET MODE=SUP,KEY=ZERO   GET INTO SUPERVISOR STATE
         XR     0,0
         SCRATCH CLIST            DELETE THE DATASET
         LR     5,15              SAVE RETURN CODE
         MODESET MODE=PROB,KEY=NZERO
         LTR    5,5               DID DELETE WORK?
         BZ     DELOK             GO IF O.K.
         PUT    PRINT,DELBAD      SAY IT DIDN'T
         B      GETREC            AND DO NEXT COMMAND
DELOK    PUT    PRINT,DELGOOD     SAY IT DID
         B      GETREC            AND CONTINUE
SUPPRESS CLI   0(2),C' '          SPACE ON INPUT?
         BNER  14                 NO, THEN RETURN
         LA    2,1(2)             BUMP ADDRESS
         C     2,=A(BUFF+80)      END OF LINE?
         BNL   CMDEND             YES,DONE
         B     SUPPRESS           CONTINUE SUPPRESS
ENDIN    CLOSE INFILE             CLOSE INPUT FILE
         CLOSE PRINT              CLOSE PRINTER FILE
         LR    1,13               SAVE FOR FREEMAIN
         L     13,4(13)           RESTORE USERS SAVEAREA POINTER
         ST    15,16(13)          SAVE RETURN CODE
         FREEMAIN R,LV=72,A=(1)   FREE SAVE AREA
         LM    14,12,12(13)       RESTORE REGISTERS
         BR    14                 AND RETURN TO CALLER
CLIST    CAMLST SCRATCH,DSN,,VOLIST,,OVRD
DSN      DC    CL44' '
VOLIST   DC    H'1'
DEVTYP   DC    X'00000000'
VOL      DC    CL6' '
         DC    H'0'
INFILE   DCB   DDNAME=SYSIN,DEVD=DA,DSORG=PS,                        X
               EODAD=ENDIN,LRECL=80,MACRF=GM,RECFM=FB
PRINT    DCB   DDNAME=SYSPRINT,DEVD=DA,DSORG=PS,MACRF=PM,            X
               RECFM=FB,LRECL=80,BLKSIZE=80
BUFF     DS    CL80
EFLAG    DS    CL80
BADCMD   DC    CL80'*** ERROR ***  SYNTAX ERROR IN ABOVE COMMAND'
DELBAD   DC    CL80'*** ERROR ***   DELETE FAILED'
DELGOOD  DC    CL80'*** DELETE SUCCESSFULLY PERFORMED ***'
BADVOL   DC    CL80'*** ERROR ***   INVALID VOLSER'
         IEFUCBOB                 UCB DSECT
         CVT   DSECT=YES          CVT DSECT
         END


Gary Desrosiers
Systems Programmer
Kay-Bee Toy and Hobby Shop (USA)   â‚¬ Xephon 1987




