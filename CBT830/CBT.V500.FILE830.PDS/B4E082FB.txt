GDG transfer between systems

* SUCKSPIT SOURCE CODE
* RETURN CODES VIA REG15     : 0 - GDG NAME AND VOLSERS FOUND
*                             12 - PARM FIELD EMPTY
*                             13 - NUMBER OF VOLUMES GT 20
*                             14 - PARM FIELD LONGER THAN 44 CHARS
*                             17 - GDG NAME AND VOLSERS NOT FOUND
R0       EQU   0
R1       EQU   1
       etc
R15      EQU   15
SUCKSPIT CSECT
         USING *,R10,R11           ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE3 REGISTERS
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,2048(R10)       SET SECOND BASE REGISTER
         LA    R11,2048(R11)       AND INCREMENT TO PROPER VALUE
         LR    R12,R13             STORE PREVIOUS SA ADDRESS
         LR    R8,R1               SAVE POINTER TO PARM FIELD
GETMATD  GETMAIN R,LV=400
         LR    R9,R1  (R9)= ADDR. OF THE ALLOCATED VIRT STORAGE AREA
         LTR   15,15
         BZ    OKGETMAT
         B     FINI
OKGETMAT EQU   *
         ST    R9,R9SAVE
         USING DUMMYREC,R9         ESTABLISH ADDRESSABILITY
         LA    R13,SAVE3           LOAD ADDRESS OF THIS SAVE3 AREA
         ST    R12,SAVE3+4         CHAIN BACKWARDS
         ST    R13,8(R12)          CHAIN FORWARD
         OPEN  (PRINTDCB,(OUTPUT))
         L     R8,0(R8)
         LH    R2,0(R8)     (R2) = LENGTH OF THE PARM FIELD
         LA    R1,0
         CR    R1,R2        TEST IF LENGTH OF PARM FIELD = 0 ?
         BNE   TESTLE44
         MVI   PRINT,C' '
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVC   PRINT+1(20),=C'PARM FIELD EMPTY    '
         PUT   PRINTDCB,PRINT
         LA    R7,12         LOAD RETURN CODE
         B     FREEM         NO PARAMETERS IN THE PARM FIELD, GO HOME
TESTLE44 EQU   *
         LA    R1,44
         CR    R2,R1         TEST IF LENGTH OF PTARM FIELD GT 44 ?
         BNH   GETPARMF      NOT, OK
         MVI   PRINT,C' '
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVC   PRINT+1(37),=C'PARM FIELD TOO LONG; GT THAN 44      '
         PUT   PRINTDCB,PRINT
         LA    R7,14          LOAD RETURN CODE
         B     FREEM          GO HOME
GETPARMF EQU   *
         LA    R4,2(R8)       (R4) = ADDRESS OF THE PARM FIELD
         LA    R5,GDGBASE     (R5) = ADDRESS OF THE GDGBASE FIELD
         MVI   GDGBASE,C' '   CLEAN THE RELATIVE GDG AREA
         MVC   GDGBASE+1(L'GDGBASE-1),GDGBASE
LOOP1    EQU   *
         MVC   0(1,R5),0(R4)      MOVE ONE CHARACTER
         OI    0(R5),B'01000000'  CHANGE LOWER TO UPPER CHARS
         A     R5,=F'1'
         A     R4,=F'1'
         BCT   R2,LOOP1
         MVI   DATAREC,C' '       CLEAN DATA RECORD AREA
         MVC   DATAREC+1(L'DATAREC-1),DATAREC
*    FIND ABSOLUTE GENARATION AND VERSION NUMBERS AND VOLSERS
         MVC   DSNAME(44),GDGBASE
         LA    R1,0
         ST    R1,VOLCOUNT
         LOCATE CAM
         LR    R7,R15
         LTR   R7,R7         TEST RC FROM LOCATE
         BZ    OKLOCATE
         ST    R7,NUMBER
         CALL  CONVFICL,(NUMBER,RESULT),VL
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(40),=C'DISPVOLS: NO INFO IN CATALOG, LOCATE RC='
         MVC   PRINT+41(4),RESULT+6
         PUT   PRINTDCB,PRINT
         B     FREEM          GO HOME
OKLOCATE EQU   *
         SR    R2,R2
         LH    R2,COUNTNUM
         ST    R2,VOLCOUNT
         LA    R1,20
         CR    R2,R1          TEST IF VOLUME COUNT GT 20 VOLSERS
         BL    OKVOLNUM
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(35),=C'WARNING: NUMBER OF VOLUMES GT 20   '
         PUT   PRINTDCB,PRINT
         LA    R7,13          LOAD RETURN CODE
         B     FREEM          TOO HOT TO HANDLE
OKVOLNUM EQU   *
         LA    R3,FIRSTENT
         LA    R5,VOLSER
DISPVOLU EQU   *
         MVC   0(6,R5),4(R3)
         A     R3,=F'12'
         A     R5,=F'7'
         BCT   R2,DISPVOLU
ENDLOCAT EQU   *
         OPEN  (SUCKFDCB,(INPUT))
         OPEN  (SPITFDCB,(OUTPUT))
         MVC   PRINT,BLANK
         MVC   PRINT+1(33),=C'THE FOLLOWING JCL WAS SUBMITTED: '
         PUT   PRINTDCB,PRINT
GETINJCL EQU   *
         GET   SUCKFDCB,INJCLREC
         CLC   INJCLREC(9),=C'##VOLSERS'
         BNE   NOVOLSER
         MVC   INJCLREC(12),=C'// VOL=SER=('
         L     R3,VOLCOUNT          (R3) = # OF VOLUMES
         LA    R5,INJCLREC+12       (R5) = ADDRESS OF TAPE VOLUME
         LA    R6,VOLSER            (R6) = ADDRESS OF VOLSER FIELD
LOOPVOLS EQU   *
         MVC   0(6,R5),0(R6)
         MVI   INJCLREC+18,C','
         LA    R1,1
         CR    R3,R1
         BNE   OKCOMMA
         MVC   INJCLREC+18(2),=C'),'
OKCOMMA  EQU   *
         MVC   JCLREC(80),BLANK
         MVC   JCLREC(80),INJCLREC
         PUT   SPITFDCB,JCLREC
         MVC   PRINT,BLANK
         MVC   PRINT+1(80),JCLREC
         PUT   PRINTDCB,PRINT
         MVC   INJCLREC+3(9),BLANK
         LA    R1,7
         AR    R6,R1
         BCT   R3,LOOPVOLS
         B     NOSPIT
NOVOLSER EQU   *
         CLC   INJCLREC(5),=C'##DSN'
         BNE   NODSN
         MVC   INJCLREC(7),=C'// DSN='
         MVC   INJCLREC+7(44),DSNAME
         MVC   JCLREC(80),BLANK
         MVC   JCLREC(80),INJCLREC
         PUT   SPITFDCB,JCLREC
         MVC   PRINT,BLANK
         MVC   PRINT+1(80),INJCLREC
         PUT   PRINTDCB,PRINT
         B     NOSPIT
NODSN    EQU   *
         MVC   PRINT,BLANK
         MVC   PRINT+1(80),INJCLREC
         PUT   PRINTDCB,PRINT
         MVC   JCLREC(80),BLANK
         MVC   JCLREC(80),INJCLREC
         PUT   SPITFDCB,JCLREC
NOSPIT   EQU   *
         B     GETINJCL
ENDINJCL EQU   *
         CLOSE (SUCKFDCB)
         CLOSE (SPITFDCB)
FREEM    EQU   *
         L     R9,R9SAVE
         FREEMAIN R,LV=400,A=(R9)
         CLOSE (PRINTDCB)
FINI     EQU   *
         L     R13,4(R13)
         LR    R15,R7
         RETURN (14,12),RC=(15)
*--------------------------------------------------------------------
SAVE3    DS    18F
R9SAVE   DS    F
BLANK    DC    CL133' '
NUMBER   DS    F
RESULT   DS    CL10
JCLREC   DS    CL80
INJCLREC DS    CL80
PRINT    DS    CL133
*--------------------------------------------------------------------
DATAREC  DS    0CL200
DSNAME   DS    CL44       DATASET NAME
VOLCOUNT DS    F          VOLSERS COUNTER
VOLSER   DS    CL6        VOLUME SERIAL NUMBER
         DS    CL146
*--------------------------------------------------------------------
*   LOCATE - CAMLST VARIABLES
CAM      CAMLST NAME,DSNAME,,LOCAREA
         DS    0D
LOCAREA  DS    0CL265
COUNTNUM DS    CL2    NUMBER OF VOLUMES IN THE LIST
FIRSTENT DS    0CL12  FIRST ENTRY
FIDEVCOD DS    0CL4   DEVICE CODE
FIDEBY16 DS    CL1
FIDEBY17 DS    CL1    OPTIONAL FEATURES
FIDEBY18 DS    CL1    DEVICE CLASS: X'80'-MAGN. TAPE, X'20'-DASD
FIDEBY19 DS    CL1    UNIT TYPE
FIVOLSER DS    CL6    VOLUME SERIAL NUMBER
FIDSNSEQ DS    CL2    VOLUME SEQUENCE NUMBER
NEXTEXTE DS    CL251
*--------------------------------------------------------------------
PRINTDCB DCB   MACRF=PT,RECFM=FBA,LRECL=133,BLKSIZE=133,DSORG=PS,      *
               DDNAME=PRINTOUT
SUCKFDCB DCB   MACRF=GM,RECFM=FB,DSORG=PS,LRECL=80,                    *
               DDNAME=INPUTJCL,EODAD=ENDINJCL
SPITFDCB DCB   MACRF=PM,RECFM=FB,DSORG=PS,LRECL=80,                    *
               DDNAME=FILEJOB
         LTORG
DUMMYREC DSECT
GDGBASE  DS    CL44     GDGBASE FIELD FROM THE EXEC STMT
         END
* PROCEDURE CONVFICL WAS DESCRIBED IN MVS UPDATE MARCH 1995

SAMPLE JCL

//SUCKSPIT EXEC PGM=SUCKSPIT,
//         PARM=('SMF.ACCUMP.DATA(-1)')
//STEPLIB  DD  DSN=your load library
//PRINTOUT DD  SYSOUT=T
//*  DO NOT FORGET /*EOF CART IF USING INTERNAL READER
//FILEJOB  DD  SYSOUT=(A,INTRDR)   submit via Internal Reader
//INPUTJCL DD  DATA,DLM=$$
//yourjobn JOB (accoun),'your name',CLASS=A,MSGCLASS=T
/*XEQ JSED    transmit all records to another node
//IFASMFDP EXEC PGM=IFASMFDP
//SYSPRINT  DD SYSOUT=T
//OUT DD DSN=FSS03.SDEV.SMFR00,DISP=OLD
//IN  DD DISP=OLD,UNIT=CART,
##VOLSERS
##DSN
//SYSIN   DD *
  INDD(IN,OPTIONS(DUMP))
  OUTDD(OUT,TYPE(77))
/*EOF
$$
//

Sample Output on the //PRINTOUT DD statement:

THE FOLLOWING JCL WAS SUBMITTED:
//yourjobn JOB (accoun),'your name',CLASS=A,MSGCLASS=T
/*XEQ JSED    transmit all records to another node
//IFASMFDP EXEC PGM=IFASMFDP
//SYSPRINT  DD SYSOUT=T
//OUT DD DSN=FSS03.SDEV.SMFR00,DISP=OLD
//IN  DD DISP=OLD,UNIT=CART,
// VOL=SER=(D01553,
//          D01480,
//          D02019,
//          D00001,
//          D00744,
//          D00919),
// DSN=SMF.ACCUMP.DATA.G0069V00
//SYSIN   DD *
  INDD(IN,OPTIONS(DUMP))
  OUTDD(OUT,TYPE(77))


Szczepan Kowalski
Software Specialist
The Johannesburg Stock Exchange (South Africa)            c Xephon 1995

