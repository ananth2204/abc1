Writing user messages to a 3480 display

This simple program can be used to write user messages on a
3480 display. The UCB of the 3480 unit is passed to the
program as a PARM. Two cards are read from the DDNAME
SYSIN and the contents of the first eight characters of each
appear as a flashing display on the 3480.


EXAMPLE

//JOB00MSG JOB  (AAAA,YYYY),CLASS=A,MSGCLASS=1
//MSG3480  EXEC PGM=MSG3480,PARM='0900'           <---- ucb in parm
//STEPLIB  DD  DSN=YOUR.AUTH.LOADLIB,DISP=SHR
//SYSIN DD *
these in                                          <---- 1st message
vault                                             <---- 2nd message


MSG3480 SOURCE CODE

The program must be linked with AC=1 in an authorized
library. The application has been tested under MVS/ESA 4.2
and MVS/ESA 3.1.1.

* HERE IS A PROGRAM THAT CAN BE USED TO DISPLAY USER MESSAGES ON
* THE DISPLAYS OF 3480 OR COMPATIBLE CARTRIDGE UNITS.
* THE UCB OF THE UNIT IS PASSED TO THE PROGRAM IN THE FORM XXXX
* (4 CHARACTERS REPRESENTING THE UCB PADDED ON THE LEFT BY ZERO.
* TWO CARDS ARE READ BY THE PROGRAM FROM THE DDNAME SYSIN.
* THESE ARE THE MESSAGES DISPLAYED FLASHING (ALTERNATELY) ON THE
* DISPLAY OF THE UNIT.
* THE PROGRAM NEEDS TO BE LINKED WITH AC=1 IN AN AUTHORIZED LIBRARY.
MSG3480  CSECT ,
         USING MSG3480,R12       TELL ASSEMBLER
         STM   R14,R12,12(R13)   SAVE REGISTERS
         LR    R12,R15           LOAD START ADDR INTO BASE REG
         ST    R13,SAVEAREA+4    SAVE CALLER'S SAVEAREA ADDRESS
         LA    R10,SAVEAREA      ->R10 TO WORKING STORAGE SAVEAREA
         ST    R10,8(R13)        SAVE SAVEAREA ADDR IN PASSED SAVEAREA
         LR    R13,R10           ->R13 TO SAVEAREA FOR OTHERS TO USE
         USING SAVEAREA,R13      EXTRA BASE REG TO ADDRESS TABLE DATA
         B     INIT              SKIP OVER EYECATCHERS
         DC    CL10'MSG3480'     NAME OF PROGRAM FOR VMFIBALL
         DC    CL10'&SYSDATE'    ASSEMBLY DATE
         DC    CL10'&SYSTIME'    ASSEMBLY TIME
INIT     DS 0H
         XR    R7,R7
         L     R6,0(R1)
         LH    R7,0(R6)          LENGTH OF PARM
         LA    R6,2(R6)          POINT TO PARM
         C     R7,=F'4'          MUST BE LENGTH OF 4
         BE    OKPARM
         WTO   'FM001E - PARM MUST BE 4 CHARS (DEVICE NUMBER)'
         ABEND 0001,DUMP
OKPARM   DS 0H
         MVC   XDEVC(4),0(R6)   SAVE THE UCB
         OPEN  (SYSIN,(INPUT))  OPEN INPUT
         GET   SYSIN,INP
         MVC   TEXT1(8),INP     FIRST MESSAGE
         GET   SYSIN,INP
         MVC   TEXT2(8),INP     SECOND MESSAGE
         MODESET KEY=ZERO
         UCBLOOK DEVNCHAR=XDEVC,UCBPTR=UCBPTR,DYNAMIC=YES,NOPIN
         LTR   R15,R15
         BZ    OKOK
         WTO   'FM002E - RC NOT ZERO FROM UCBLOOK............'
         LA    R15,8
         B     ENDPGM
OKOK     DS 0H
         L     R5,UCBPTR
*---     ISSUE THE MESSAGE.
         MSGDISP GEN,UCB=(5),FLASH=ALT,TXT=TEXT1,TXT2=TEXT2
         LTR   R15,R15
         BZ    OKMSG
         WTO   'FM003E - RC NOT ZERO FROM MSGDISP............'
         LA    R15,16
         B     ENDPGM
OKMSG    DS 0H
         XR    R15,R15           ZERO RC
ENDPGM   DS    0H
         MODESET KEY=NZERO       BACK TO NORMALITY
         CLOSE (SYSIN)
         L     R13,SAVEAREA+4    RESTORE R13
         LM    R14,R12,12(R13)   RESTORE R14 TO R12
         BR    R14               RETURN
SAVEAREA DS    9D
XDEVC    DC    C'0903'
UCBPTR   DS    F
TEXT1    DS    C'        '
TEXT2    DS    C'        '
INP      DS    CL80
SYSIN    DCB   MACRF=(GM),DDNAME=SYSIN,EODAD=OKMSG,DSORG=PS
         END


Franco Masone
Systems Programmer

