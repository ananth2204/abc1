A 31-bit re-entrant parser

Parsing is a task that occurs with high frequency in MVS systems.  While
user parsing support is available through the TSO IKJPARS routine, the
sea of documentation describing the many options supported by this
service can be intimidating.  Frequently, all that is desired is the
ability to isolate strings within delimiters, determine their lengths,
and move each length-string set to an output buffer for subsequent
processing.

The PARSER subroutine performs these functions quickly and efficiently.  PARSER
can function as either a stand-alone dynamically-called, or integrated
statically-linked, subroutine.  It should be link-edited with the RENT
attribute.

INPUT

PARSER input parameter address list (all addresses are 31-bit):

Displacement   Contents
+00  Address of a work area (minimum length 340 bytes) passed by the
     calling routine, or 0.  Passing a work area saves PARSER the
     necessity of issuing a GETMAIN/FREEMAIN to comply with re-entrancy
     requirements.
+04  Address of the input buffer.
+08  Address of a fullword containing the input buffer length.
+12  Address of a fullword containing the maximum allowable length of an
     individual parsed string.
+16  Address of the output buffer.
+20  Address of a fullword containing the output buffer length.
+24  Address of delimiters to be recognised by the parse operation.
+28  Address of a fullword containing the number of delimiters at the
     above address.

OUTPUT

Parsed strings are placed in the output buffer.  Each string is preceded
by 4 bytes containing the length of the string (excluding the length of
the 4 bytes).

The end of the parsed output is indicated by 4 bytes of hexadecimal
zeros.

R15 return contents
00   Successful
04   Input buffer length not between 1 and X'7FFFFFFF'
08   Maximum allowable string length not between 1 and X'7FFFFFFF'
12   Output buffer length not between 1 and X'7FFFFFFF'
16   Number of delimiters not between 1 and 256
20   A string longer than the maximum allowable was found in the input
     buffer
24   Space in the output buffer was exhausted
SAMPLE CALLS AND PARAMETERS
CALL PARSER,(WORKAREA,IBUF,IBUFLL,MAXSTL,OBUF,OBUFL,DLMS,DLMSNO)
CALL PARSER,(,IBUF,,IBUFL,MAXSTL,OBUF,OBUFL,DLMS,DLMSNO)

WORKAREA DC    340X'0'
IBUF     DC    C' STRING1,STRING02 STRING003;STRING0004;STRING00005  '
IBUFLEN  EQU   *-IBUF
IBUFL    DC    A(IBUFLEN)
MAXSTL   DC    A(11)
OBUF     DC    CL69' '
OBUFLEN  EQU   *-OBUF
OBUFL    DC    A(OBUFLEN)
DLMS     DC    C' ,;'
DLMSNO   DC    A(3)
PARSER SOURCE CODE
PARSER   AMODE 31
PARSER   RMODE 24
PARSER   CSECT
         B     24(R15)                 BRANCH AROUND PROLOG
         DC    CL8'PARSER'             ID
         DC    CL8'@#PTRDEF'           POINTER-DEFINED VALUE ID
         DC    A(PARSER+X'80000000')   POINTER-DEFINED VALUE FOR AMODE
         STM   R14,R12,12(R13)         SAVE REGISTERS
         LR    R12,R15                 ESTABLISH BASE
         USING PARSER,R12              DECLARE IT
         ICM   R1,15,0(R1)             ANY WORKAREA?
         BZ    @LINK1                  NO
         CNOP  0,4                     FULLWORD ALIGN
         ICM   R3,15,*+8               LOAD LENGTH
         B     @LINK2
         DC    A(WORKLEN)
@LINK1   DS    0H
         CNOP  0,4                     FULLWORD ALIGN
         ICM   R0,15,*+8               LOAD SUBPOOL & LENGTH
         B     *+8                     BRANCH AROUND IT
         DC    AL1(0),AL3(WORKLEN)       SUBPOOL & LENGTH
         LR    R3,R0                   L0AD LENGTH FOR FOLLOWING CLEAR
         LA    R3,0(R3)                CLEAR HIGH ORDER BIT/BYTE
         BAL   1,*+4                  INDICATE GETMAIN
         SVC   10                     ISSUE GETMAIN SVC
@LINK2   DS    0H
         LR    R2,R1                   TARGET ADDRESS
         SR    R4,R4                   NO SOURCE ADDRESS
         SR    R5,R5                   PAD CHARACTER = 0
         MVCL  R2,R4                   CLEAR GOTTEN STORAGE
         ST    R13,4(R1)               STORE OLD SAVEAREA ADDRESS
         ST    R1,8(R13)               CHAIN
         LR    R15,R13                 SAVE OLD SAVE AREA ADDRESS
         LR    R13,R1                  SET NEW SAVEAREA ADDRESS
         LM    R0,R4,20(R15)           RELOAD ORIGINAL CONTENTS
         B     @LINKE                  END OF LINKAGE - START PROGRAM
RETURN   DS    0H
         SR    R15,R15                 CLEAR R15
         LR    R2,R15                  SAVE R15 OVER THE FREEMAIN IF
*                                      THE USER BRANCHES TO 'RETURN+2'
         LR    R3,R0                   SAME FOR R0
         LR    R1,R13                  SAVE ADDRESS TO BE FREEMAINED
*                                      I.E. CURRENT SAVE AREA ADDRESS
         L     R13,4(R13)              RELOAD OLD SAVE AREA ADDRESS
         L     R4,24(R13)              LOAD R1 PARM. POINTER
         ICM   R4,R15,0(R4)       LOAD PASSED WORKAREA ADDRESS, IF ANY
         BNZ   @LINK3                  THERE IS ONE, DON'T FREEMAIN
         CNOP  0,4                     FULLWORD ALIGN
         ICM   R0,15,*+8               LOAD SUBPOOL & LENGTH
         B     *+8                     BRANCH AROUND IT
         DC    AL1(0),AL3(WORKLEN)       SUBPOOL & LENGTH
         LA    1,0(0,1)                         LOAD AREA ADDRESS
         SVC   10                               ISSUE FREEMAIN SVC
         LR    R15,R2                  RESTORE REGISTER 15
         LR    R0,R3                   AND R0
@LINK3   DS    0H
         L     R14,X'10'               CVT ADDR
         TM    X'74'(R14),X'80'        XA?
         BZ    *+14                    NO
         LM    R1,R12,24(R13)          RELOAD REGS
         L     R14,12(,R13)            RELOAD R14
         BSM   0,R14                   RETURN
         LM    R1,R12,24(R13)          RELOAD REGS
         L     R14,12(,R13)            RELOAD R14
         BR    R14                     RETURN
@LINKE   DS    0H
         USING WORKAREA,R13
         ST    R1,R1SAVE           SAVE R1
         LM    R3,R9,4(R1)         LOAD PROCESSING PARM ADDRS
*** VALIDATE PARAMETERS ***
         CLC   0(4,R4),=X'00000001' CHECK INPUT BUFFER LENGTH
         BNL   CHKHI1
         LA    R15,4                TOO LOW
         B     RETURN+2             GIVE UP
CHKHI1   DS    0H
         CLC   0(4,R4),=X'7FFFFFFF'
         BNH   ENDCHK1
         LA    R15,4                TOO HIGH
         B     RETURN+2             GIVE UP
ENDCHK1  DS    0H
         CLC   0(4,R5),=X'00000001' CHECK MAX NONBLANK STRING LENGTH
         BNL   CHKHI2
         LA    R15,8                TOO LOW
         B     RETURN+2             GIVE UP
CHKHI2   DS    0H
         CLC   0(4,R5),='7FFFFFFF'
         BNH   ENDCHK2
         LA    R15,8                TOO HIGH
         B     RETURN+2             GIVE UP
ENDCHK2  DS    0H
         CLC   0(4,R7),=X'00000001' CHECK OUTPUT BUFFER LENGTH
         BNL   CHKHI3
         LA    R15,12               TOO LOW
         B     RETURN+2             GIVE UP
CHKHI3   DS    0H
         CLC   0(4,R7),=X'7FFFFFFF'
         BNH   ENDCHK3
         LA    R15,12               TOO HIGH
         B     RETURN+2             GIVE UP
ENDCHK3  DS    0H
         CLC   0(4,R9),=AL4(1)      CHECK NO. OF DELIMITERS
         BNL   CHKHI4
         LA    R15,16               TOO FEW
         B     RETURN+2             GIVE UP
CHKHI4   DS    0H
         CLC   0(4,R9),=AL4(256)
         BNH   ENDCHK4
         LA    R15,16               TOO MANY
         B     RETURN+2             GIVE UP
ENDCHK4  DS    0H                   VALIDITY CHECKS PASSED
         L     R4,0(R4)             LOAD INPUT BUFFER LENGTH
         L     R5,0(R5)             LOAD MAX. NONBLANK STRING LENGTH
         L     R7,0(R7)             LOAD OUTPUT BUFFER LENGTH
         L     R9,0(R9)             LOAD NO. OF DELIMITERS
TABSET1  DS    0H                   SEARCH FOR A NON-DELIMITER STRING
         MVI   TRTABLE,X'FF'        INITIALISE TRANSLATE TABLE
         MVC   TRTABLE+1(255),TRTABLE
         SR    R1,R1
TABSET2  DS    0H
         SR    R2,R2
         IC    R2,0(R8,R1)          RETRIEVE A DELIMITER
         LA    R2,TRTABLE(R2)       INDEX INTO TRANSLATE TABLE
         MVI   0(R2),X'00'          DESENSITISE IT
         LA    R1,1(R1)             NEXT DELIMITER
         CR    R1,R9                FINISHED?
         BL    TABSET2              NOT YET
         LR    R11,R3               LOAD STARTING POINT
FNDSTRB  DS    0H
         LR    R10,R4               LOAD LENGTH WORK REGISTER
         CH    R10,=H'256'          MORE THAN 256?
         BNH   SCAN1                NO
         LA    R10,256              YES, CAN ONLY GO 256 AT A TIME
SCAN1    DS    0H
         BCTR  R10,0                REDUCE SCAN LENGTH FOR TRT
         EX    R10,TRT1             SCAN
         LA    R10,1(R10)           READJUST SCAN LENGTH
         BC    7,FNDSTR1            WE FOUND A STRING
         SR    R4,R10               SUBTRACT FROM TOTAL LENGTH TO SCAN
         LTR   R4,R4                ANYTHING LEFT TO SCAN?
         BP    MOREYET1             YES
         CH    R7,=H'4'             NO, ROOM FOR ENDING INDICATOR?
         BNL   ENDIT1               YES
         LA    R15,24               NO
         B     RETURN+2             RETURN WITH ERROR
ENDIT1   DS    0H
         MVC   0(4,R6),=F'0'        INDICATE END OF PARSED OUTPUT
         B     RETURN               RETURN
MOREYET1 DS    0H
         LA    R11,256(R11)         YES, UPDATE STARTING POINT
         B     FNDSTRB              REPEAT
FNDSTR1  DS    0H
         SR    R1,R11               GET LENGTH TO THE STRING
         SR    R4,R1                ADJUST LENGTH LEFT TO SCAN
         LA    R3,0(R11,R1)         UPDATE INPUT BUFFER POINTER
         LR    R11,R3               AND WORK POINTER
         MVI   TRTABLE,X'00'        SEARCH FOR END OF STRING
         MVC   TRTABLE+1(255),TRTABLE REINITIALISE TRANSLATE TABLE
         SR    R1,R1
TABSET3  DS    0H
         SR    R2,R2
         IC    R2,0(R8,R1)          RETRIEVE A DELIMITER
         LA    R2,TRTABLE(R2)       INDEX INTO TRANSLATE TABLE
         MVI   0(R2),X'FF'          SENSITISE IT
         LA    R1,1(R1)             NEXT DELIMITER
         CR    R1,R9                ARE WE FINISHED WITH THEM?
         BL    TABSET3              NOT YET
FNDSTRE  DS    0H
         LR    R10,R4               SAME
         CH    R10,=H'256'              METHOD
         BHN   SCAN2                          AS
         LA    R10,256                          ABOVE
SCAN2    DS    0H
         BCTR  R10,0                REDUCE SCAN LENGTH FOR TRT
         EX    R10,TRT1             SCAN
         LA    R10,1(R10)           READJUST SCAN LENGTH
         BC    7,FNDDLM2            WE FOUND A DELIMITER
         SR    R4,R10
         LTR   R4,R4                ANY MORE LEFT?
         BNP   FNDDLM1              NO
         LA    R11,256(R11)         YES, UPDATE STARTING POINT
         B     FNDSTRE              REPEAT
FNDDLM1  DS    0H
         LA    R1,0(R11,R10)        NO DELIMITER, POINT 1 PAST THE END
FNDDLM2  DS    0H
         SR    R1,R3                GET LENGTH OF STRING
         CR    R1,R5                GREATER THAN ALLOWABLE?
         BNH   CHKOUTL1             NO
         LR    R0,R11               POINT TO BAD STRING
         LA    R15,20               INDICATE IT'S TOO LONG
         B     RETURN+2             GIVE UP
CHKOUTL1 DS    0H
         AH    R1,=H'4'             ADD 4 TO ACCOUNT FOR LENGTH FIELD
         CR    R1,R7                WILL IT FIT?
         BNH   MOVESTR1             YES
         LA    R15,24               NO
         B     RETURN+2             GIVE UP
MOVESTR1 DS    0H
         SH    R1,=H'4'             READJUST
         ST    R1,0(R6)             STORE LENGTH OF STRING TO FOLLOW
         LR    R2,R1                SAVE R1 OVER FOLLOWING MVCL
         LR    R14,R3               LOAD SOURCE ADDRESS
         LA    R0,4(R6)             LOAD TARGET ADDRESS
         LR    R15,R1               LOAD SOURCE ADDRESS LENGTH
         MVCL  R0,R14               MOVE THE STRING
         LR    R1,R2                RESTORE R1
         LA    R1,0(R3,R1)          POINT BACK PAST END OF STRING
         SR    R1,R11               GET LENGTH OF LAST SUBSTRING
         SR    R7,R1                UPDATE LENGTH AVAILABLE...
         SH    R7,=H'4'             ...IN OUTPUT BUFFER
         SR    R4,R1                COMPUTE TOTAL LENGTH LEFT TO SCAN
         CH    R4,=H'1'             IS IT ONE OR LESS?
         BH    MOREYET2             NO, MORE YET
         CH    R7,=H'4'             YES, ROOM FOR ENDING INDICATOR?
         BNL   ENDIT2               YES
         LA    R15,24               NO
         B     RETURN+2             RETURN WITH ERROR
ENDIT2   DS    0H
         LA    R6,4(R2,R6)          UPDATE OUTPUT BUFFER POINTER
         MVC   0(4,R6),=F'0'        INDICATE END OF PARSED OUTPUT
         B     RETURN               RETURN
MOREYET2 DS    0H
         LA    R3,0(R11,R1)         ELSE UPDATE INPUT BUFFER POINTER
         LA    R6,4(R2,R6)          UPDATE OUTPUT BUFFER POINTER
         B     TABSET1              RECYCLE
NXTPARMS DS    0H
         B     RETURN               YES
TRT1     TRT   0(0,R11),TRTABLE     EXECUTED TRT
WORKAREA DSECT
         DS    18F                  REGISTER SAVE AREA
R1SAVE   DS    F                    PARM POINTER SAVE WORD
TRTABLE  DS    256X                 TRANSLATE TABLE
WORKLEN  EQU   *-WORKAREA
         END

     € Xephon 1988


