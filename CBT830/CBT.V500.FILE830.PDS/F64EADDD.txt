Revoke prevention for started task user-ids

Most RACF installations define user-ids for their started tasks.
This article deals with the problem of how to stop these RACF
user-ids from becoming revoked either by accident or deliberately.
Such a revoke often occurs because an inexperienced user tries to
log on to a VTAM application such as TSO by entering 'logon
TSO'. This may then result in a prompt for the password for the
user-id 'TSO' itself and after a number of attempts it gets revoked.
At the next IPL, TSO cannot be started up.

This situation also lends itself to deliberate sabotage and the effect
of started tasks such as JES2, NET, or TPX being revoked can be
very serious. IBM now recommends that all started task user-ids
have a connection to a common RACF group such as STASK.
This allows a single generic entry in the RACF started task table
(module ICHRIN03) to eliminate any need to update it. This is
coded as '* = STASK'. Such an entry means that any started task
is assigned its own name as a user-id but must be connected to the
RACF group STASK to become a started task. An example of
ICHRIN03 coded in this way is shown below.

With this definition, other RACF user-ids cannot be run as started
tasks which is important (it is still possible to run started tasks
without a RACF-id). This method, although useful, does not
prevent these ids being revoked but this can be achieved using a
RACF exit. First ensure that all valid started task user-ids have
their default-group set to a common group name, STASK being
the obvious choice. Afterwards use the RACINIT pre-processing
exit, ICHRIX01, as shown below, to prevent any revokes caused
by invalid password attempts.

This exit ensures that only started tasks can utilize user-ids which
have the value STASK in the default-group name field. Any
attempt to RACINIT such a user-id except by the normal started
task process will be failed. The exit does not check RACINITs
where a password has not been specified (such as inherited jobs)
as these cannot cause revokes and may also be legitimately
required. Pre-encrypted passwords which are utilized by
BDT/NFT will also be permitted without STASK checking.

The use of this exit will cause one extra RACF I/O to take place
during certain RACINITs but this should have very little impact
and in fact will probably just cause the actual RACINIT to find
the same user-id profile already in the RACF virtual storage
buffers. Having identified that the user-id is only for started task
use by the default-group name, the exit relies upon the started task
name field passed in the exit parameter list to decide if it can
proceed or not.

It would be possible to replace the RACXTRT with a hard-coded
list of started task user-id names and, if you prefer, to code all of
your started tasks in the ICHRIN03 table individually: then this
table could be scanned to determine if the user-id is to be
protected. If only critical started tasks are of concern, then hard-
coding a list is probably acceptable and will save I/O. The
example of group STASK can be changed to any suitable RACF
group name for your installation.

Exit ICHRIX01

*--- MODULE : ICHRIX01
*    RACF RACINIT PRE-PROCESSING EXIT
*    USED TO PREVENT DIRECT LOG-ONS TO STARTED TASK USERIDS
*    RETRIEVES USER PROFILE DEFAULT-GROUP FIELD. IF EQUAL TO STASK
*    CHECKS THAT THIS IS A STARTED TASK INITIATION. IF IT IS NOT
*    A STARTED TASK THEN IT FAILS THE REQUEST FOR LOGON.
*--- REENTRANT, AUTHORIZED
ICHRIX01 CSECT
ICHRIX01 AMODE 31
ICHRIX01 RMODE ANY
         STM   R14,R12,12(R13)   SAVE REGISTERS
         LR    R12,R15           ADDRESSABILITY
         LR    R11,R1            SAVE PARM ADDR
         USING ICHRIX01,R12
         GETMAIN R,LV=WORKLEN    GETMAIN DYNAMIC AREA
         LR    R10,R1            R10 -> DYNAMIC AREA
         USING WORKAREA,R10      ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLER'S SAVEAREA ADDRESS
         ST    R10,8(R13)        SAVE SAVEAREA ADDRESS
         LR    R13,R10           SAVE AREA PTR
         MVC   XRETC,=F'0'       DFT RC ZERO (ALLOW LOGON)
* ADDRESS PARAMETER LIST, CHECK CALL TYPE IS CREATE
         USING RIXPL,R11         ADDR PARM LIST
         L     R1,RIXFLAG        LOAD FLAG ADDR
         TM    0(R1),RIXENVCH+RIXENVDE  CHANGE OR DELETE ?
         BNZ   EXIT              YES, EXIT
         TM    0(R1),RIXPSCKN    PASSCHK=NO SPECIFIED?
         BNZ   EXIT              YES, EXIT (CANNOT BE A USER LOGON)
         TM    0(R1),RIXENCNO    ENCRYPT=NO SPECIFIED?
         BNZ   EXIT              YES, EXIT (CANNOT BE A USER LOGON)
         TM    0(R1),RIXSTANO    STAT=NO SPECIFIED?
         BNZ   EXIT              YES, EXIT (CANNOT BE A USER LOGON)
* PREPARE FOR RACXTRT, SET UP USERID
         L     R1,RIXUID         LOAD USER-ID ADDR
         LTR   R1,R1             TEST ADDR
         BZ    EXIT              NONE, EXIT
         XR    R2,R2             CLEAR LEN
         IC    R2,0(R1)          LEN OF USER-ID
         LTR   R2,R2             TEST LEN
         BZ    EXIT              ZERO, EXIT
         MVC   USERID,BLANKS     CLEAR
         BCTR  R2,0              DOWN FOR EX
         EX    R2,MOVEU          MOVE USER-ID
         CLC   USERID,BLANKS     BLANK USER-ID?
         BE    EXIT              YES, EXIT
         CLC   USERID,ZEROS      ZEROS USER-ID?
         BE    EXIT              YES, EXIT
         B     DORACX            DO RACXTRT
MOVEU    MVC   USERID(0),1(R1)   MOVE USER-ID VALUE IN
* EXTRACT THE USERS DATABASE DEFAULT GROUP
DORACX   EQU   *
         LA    R8,USERID         ADDR USER-ID FIELD
         LA    R6,RFLD1A         ADDR FIELDS TO BE OBTAINED
         LA    R9,RACWORK        RACROUTE WORK AREA
         MVC   RX2(RX2L),RX1     INITIALIZE REENTRANT AREA
         RACROUTE REQUEST=EXTRACT,WORKA=(9),RELEASE=1.8.1,             X
               TYPE=EXTRACT,FIELDS=(6),ENTITY=(8),MF=(E,RX2)
         LTR   R15,R15           TEST RACROUTE RETURN CODE
         BNZ   BADRACR           RACXTRT FAILED
         LR    R7,R1             RETURN AREA ADDR
* PROCESS THE RETURNED INFORMATION, LEN(4), DATA(8)
         XR    R4,R4             CLEAR
         IC    R4,0(R7)          SUBPOOL OF GETMAINED AREA
         XR    R5,R5             CLEAR
         ICM   R5,B'0111',1(R7)  LENGTH OF GETMAINED AREA
         LH    R6,4(R7)          OFFSET TO SEGMENT AREA
         AR    R6,R7             ADD BASE ADDR FOR SEGMENT AREA
         MVC   DFTGRP,4(R6)      COPY DATABASE DFTGRP   (8)
         FREEMAIN R,LV=(5),A=(7),SP=(4) FREE RACXTRT AREA
* IF STASK THEN CHECK THAT THIS IS AN STC INITIATION
         CLC   DFTGRP,GROUPX     IS IT A STASK TYPE USER-ID
         BNE   EXIT              NO, FORGET IT
         L     R1,RIXSTART       LOAD STARTED TASK NAME
         CLC   USERID,0(R1)      IS IT THE SAME
         BE    EXIT              OK, THIS IS ALLOWED
* FOUND A NON-STC USING A STASK USERID, FAIL THIS RACINIT
         WTO   'ICHRIX01 - INVALID USE OF STARTED-TASK ID',ROUTCDE=11
         MVC   XRETC,=F'4'       FAIL THIS ATTEMPT
         B     EXIT              OK, EXIT TO FAIL
* BAD RACROUTE AND/OR RACXTRT
BADRACR  EQU   *
         C     R15,=F'4'         IS IT FOUR (ID NOT FOUND)
         BE    EXIT              YES, NO MSG NEEDED
RACXMSG  EQU   *
         WTO   'ICHRIX01 - RACXTRT MACRO FAILED',ROUTCDE=11
         B     EXIT              QUIT
* QUIT EXIT, SET RC
EXIT     EQU   *
         L     R3,XRETC          RETURN CODE
         L     R13,SAVEAREA+4    RESTORE R13
         FREEMAIN R,LV=WORKLEN,A=(10) FREE DYNAMIC AREA
         LR    R15,R3            RETURN CODE TO R15
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 TO R12
         BR    R14               RETURN
         LTORG
* CONSTANTS, NON-MODIFIABLE
GROUPN   DC    CL8'STASK   '     DFT-GROUP TO DISALLOW LOGONS TO
ZEROS    DC    256XL1'00'        ZEROS
BLANKS   DC    CL255' '          BLANKS
RFLD1A   DC    A(1)              NUMBER OF FIELDS FOLLOWING
RFLD1B   DC    CL8'DFLTGRP'      NAME OF FIELD (DEFAULT GROUP)
RX1      RACROUTE REQUEST=EXTRACT,WORKA=ZEROS,RELEASE=1.8.1,           X
               TYPE=EXTRACT,FIELDS=ZEROS,ENTITY=ZEROS,CLASS='USER',MF=L
* PROGRAM DATA AREA
WORKAREA DSECT
SAVEAREA DS    18F               SAVE AREA
XRETC    DS    F                 RETURN CODE
USERID   DS    CL8               RACF USERID
DFTGRP   DS    CL8               DATABASE DFT-GRP
RX2      RACROUTE REQUEST=EXTRACT,WORKA=ZEROS,RELEASE=1.8.1,           X
               TYPE=EXTRACT,FIELDS=ZEROS,ENTITY=ZEROS,CLASS='USER',MF=L
RX2L     EQU   *-RX2             RACXTRT LENGTH
RACWORK  DS    CL512             RACROUTE WORK AREA
WORKLEN  EQU   *-WORKAREA
* DSECTS
         ICHRIXP                 RACINIT EXIT PARM MAPPING
         IEZBITS                 BIT PATTERN
         YREGS
         END

Table ICHRIN03

*--- ICHRIN03 - RACF STARTED TASK PROCEDURE TABLE
*    THIS CAUSES PROCEDURES TO BE GIVEN A USERID EQUAL TO THEIR
*    PROCEDURE NAME PROVIDED THEY HAVE CONNECT TO GROUP STASK.
*    THIS DEFINITION IS NOT ESSENTIAL BUT COMPLEMENTS EXIT ICHRIX01.
*--- STCS THAT MUST RUN TRUSTED/PRIVILEGED MUST BE EXPLICITLY CODED.
ICHRIN03 CSECT
ICHRIN03 AMODE 31
ICHRIN03 RMODE ANY
         DC    AL2(ENTRIES+X'8000')      FORMAT + ENTRIES
* START OF TABLE
FIRST    DS    0H
* GENERIC ENTRY
PROCGEN  DC    CL8'*       '             NAME OF PROCEDURE
USRIDG   DC    CL8'=       '             RACF USERID = PROC NAME
GROUPG   DC    CL8'STASK   '             RACF GROUP STASK
FLAGSG   DC    XL1'00'                   NOT PRIVILEGED/TRUSTED
RSRVDG   DC    XL7'00000000000000'
*   END OF ENTRY LIST
LAST     DS    0H
ENTLEN   EQU   32                             ENTRY LENGTH
TOTLEN   EQU   LAST-FIRST                     TOTAL LENGTH
ENTRIES  EQU   TOTLEN/ENTLEN                  NUMBER OF ENTRIES
         END




