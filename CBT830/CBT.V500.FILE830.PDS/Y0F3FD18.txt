A new JES2 command
Issue 3 of MVS Update contained an extension to the $DF command for JES2
1.3.3/4.  The main problem with this was that as it contained a modification to
the source code, considerably more time was required to maintain it over other
updates to the source code and also to transfer this modification to newer
releases of JES2.  It also required a cold start of JES2, something not always
convenient in sites like ours, which are open 24 hours a day, seven days a week.
The following user exit was therefore written to provide the same facility, with
enhancements, for JES2 2.1.5, requiring only a warm start to implement it.
To remove the need for any user modifications to the source code, it was decided
to create a completely new command, rather than modify an existing one.  This
meant that all processing of the command had to be done by the exit - in this
case EXIT 5, the command pre-processor exit.  This resulted in the $JOBS
command, which has the following format:
     $JOBS,F=formsname (,TYPE=PURGE) (,R=Rxx)
Formsname is the type of forms of the jobs you wish to display.  TYPE=PURGE
purges the requested output.  Rxx is the remote destination used for the routing
of the output.  This operand can only be entered by MCS consoles.  There is also
checking to stop this command being entered via the internal reader.  Figure 1
shows an example of a typical display produced by the command.
         PUNCH ' MODE AMODE(31),RMODE(24) '
         TITLE 'UX005 - USER EXIT 5,  COMMAND PREPROCESSOR'
         COPY  $HASPGBL            COPY HASP GLOBALS
UX005    $MODULE RESPA,                                                X
               $CMB,                                                   X
               $COMWORK,                                               X
               $HASPEQU,                                               X
               $HCT,                                                   X
               $JOE,                                                   X
               $JQE,                                                   X
               $MIT,                                                   X
               $PCE,                                                   X
               SYSP=(GEN,GEN,DATA,GEN,GEN)
UEXIT5   $ENTRY BASE=R12
         $SAVE
         LR    R12,R15             ESTABLISH LOCAL BASE REG
         USING PCE,R13             ADDRESSABILITY FOR COMMWORK PCE
*--------------------------------------------------------------------- *
* GET WORKING STORAGE FOR MESSAGES ETC.                                *
*--------------------------------------------------------------------- *
         $GETMAIN R,LV=MSGLEN
         LR    R6,R1
         MVI   0(R6),C' '          BLANK OUT GETMAINED STORAGE
         MVC   1((MSGLEN-1),R6),0(R6)
         USING MSG,R6
CHECK$J  CLI   COMVERB,C'J'        $J..... ?
         BE    CHECKOBS            CHECK FOR 'OBS'
         B     RC0
*--------------------------------------------------------------------- *
*    THIS ROUTINE CHECKS IF THE OPERATOR HAS ENTERED THE COMMAND       *
*          $JOBS,F=XXXXXXXX,R=RYYY,TYPE=PURGE                          *
*    WHERE XXXXXXXX IS THE FORMS NAME - (1-8) CHARS.                   *
*          YYY IS THE REMOTE NUMBER - (1-3) CHARS. (MCS ONLY)          *
*          TYPE=PURGE - PURGE JOBS FOUND                               *
*--------------------------------------------------------------------- *
CHECKOBS CLC   0(3,R2),=C'OBS'     $JOBS ?
         BNE   RC0                 NO - IGNORE COMMAND
         CR    R5,R7               ANY PARMS ENTERED ?
         BNE   JOBS                YES - BRANCH ROUND MESSAGE
NOFORMS  $CWTO MSG='FORMS NOT SPECIFIED',L=19,MSGID=900
         B     RC8
JOBS     NI    SW,255-(PUTIT1+ALLOWED+COMMA+PURG) ENSURE FLAGS ARE OFF
         MVC   REM,COMJRMT        INITIALISE FIELD FOR LATER COMPARE
         TM    COMFLAG,CMBFLAGW    IS COMMAND FROM A REMOTE ?
         BO    NOTALLOW            YES - SO THEY CANT ISSUE R=
         OI    SW,ALLOWED          FLAG THAT R= PARM ALLOWED
NOTALLOW LA    R5,4(,R5)           POINT TO NEXT PARM
         L     R2,0(,R5)           LOAD PARM
         CLC   0(2,R2),=C'F='      IS IT A FORMS SPEC ?
         BNE   REMOTES             NO - CHECK FOR REMOTE PARM
         CLI   2(R2),C' '          NO FORMS SPECIFIED ?
         BNE   GOTFORM             SPECIFIED - SO CARRY ON
         B     INVALOP             ISSUE INVALID OPERAND MESSAGE
GOTFORM  MVC   FORMS(8),2(R2)      YES - SAVE FORMS REQUEST
         LA    R9,8                LOOP COUNTER
         LA    R3,FORMS
         B     *+8
LOOP     LA    R3,1(R3)            NEXT CHAR
         CLI   0(R3),C','          IS IT A COMMA ?
         BNE   TESTIT              NO - SEE IF ONE ALREADY FOUND
         OI    SW,COMMA            YES - FLAG ONE FOUND
         B     BLANKIT                   AND BLANK IT OUT
TESTIT   TM    SW,COMMA            COMMA FOUND ?
         BNO   NOCOMMA             NO - SO DONT BLANK IT
BLANKIT  MVI   0(R3),C' '          YES - BLANK IT OUT
NOCOMMA  BCT   R9,LOOP
         B     NEXTPARM            GET NEXT PARM (IF ANY)
REMOTES  CLC   0(3,R2),=C'R=R'     IS IT A REMOTE SPEC ?
         BNE   PURGE               NO - CHECK IF PURGING
         CLC   3(1,R2),=C' '       NO REMOTE NUMBER SPECIFIED ?
         BE    INVALOP             NONE
CHECKIT  TM    SW,ALLOWED          ALLOWED TO ISSUE R= PARM ?
         BNO   INVALOP             (NO )-FORGET IT
         MVC   REMOTE(3),3(R2)     GET REMOTE NUMBER
LOOPREM  MVC   MVNCHECK(3),REMOTE  MOVE REMOTE NUMBER FOR CHECK
         MVN   MVNCHECK(3),=C'000' MOVE ZONES
         CLC   MVNCHECK(3),=C'000' COMPARE RESULT WITH ZEROES
         BE    CONVERT             MUST BE NUMERIC SO CONTINUE
         MVC   REMOTE1+1(2),REMOTE CHUNK ALONG
         MVI   REMOTE1,C'0'        ENSURE ITS PRECEDED BY A '0'
         MVC   REMOTE(3),REMOTE1   RESTORE IT
         B     LOOPREM             AND TRY AGAIN
PURGE    CLC   0(10,R2),=C'TYPE=PURGE' PURG PARM ?
         BNE   INVALOP             NO - ISSUE INVALID MESSAGE
         OI    SW,PURG             SET SWITCH FOR PURGE
         B     NEXTPARM            AND CHECK FOR ANY MORE PARMS
CONVERT  PACK  REMP,REMOTE         PACK REMOTE
         CVB   R9,REMP             CONVERT IT TO BINARY
         STH   R9,REM              SAVE IT FOR LATER
NEXTPARM CR    R5,R7               LAST PARM ?
         BE    PROCESS             YES
         B     NOTALLOW            NO - CHECK NEXT PARM
PROCESS  CLI   FORMS,C' '          DID WE GET ANY FORMS NAME ?
         BE    NOFORMS            (NO )-FORGET IT
         CLC   COMJRMT,=H'0'
         BNE   QINIT
         TM    COMAUTH,1          SYSTEM AUTHED ?
         BO    RC0
QINIT    LA    R3,1                JOB NUMBER 1
QLOC     $QLOC (R3)                FIND REQUESTED JOB
         BZ    NEXTJQE             GET NEXT JQE IF NOT FOUND
         USING JQE,R1
         TM    JQETYPE,$HARDCPY    ON THE HARDCOPY QUEUE ?
         BNO   NEXTJQE             NO
         L     R4,JQEJOE           OFFSET OF 1ST WORK JOE
GETJOE   N     R4,$ZEROFFF         SWITCH OFF FLAG BYTE
         BZ    NEXTJQE             END OF JQE'S OR $MASCOMM ETC. ?
         AL    R4,$JOTABLE         GEN ABSOLUTE ADDRESS TO JOE
         USING JOE,R4              JOE ADDRESSABILITY
*--------------------------------------------------------------------- *
* THE FIELD REM CONTAINS THE NUMBER ON THE R= PARM, OR IF THIS IS NOT  *
* SPECIFIED, THE VALUE OF COMJROUT.                                    *
*--------------------------------------------------------------------- *
         CLC   JOEREMOT,REM        DOES THE ROUTE MATCH ?
         BNE   NEXTJOE             NO - TRY NEXT WORK JOE
         L     R9,JOECHAR          GET CHAR. JOE OFFSET
         N     R9,$ZEROFFF         CLEAR FLAG BYTE
         BZ    NEXTJQE             NO CHAR. JOE ?
         AL    R9,$JOTABLE         NO - GEN ABSOLUTE ADDRESS TO JOE
         USING JOE,R9
         CLC   FORMS(8),JOEFORM    REQUESTED FORM ?
         BNE   NEXTJOE             (NO )-GET THE NEXT
         MVC   MESSAGE+20(8),JOEFORM YES - PUT FORMS IN MESSAGE
         B     GOTFORMS
         DROP  R9
         USING JOE,R4             SWITCH BACK TO WORK JOE
NEXTJOE  L     R4,JOEJQNXT         GET NEXT WORK JOE OFFSET FOR JOB
         B     GETJOE              AND CONTINUE SEARCH
GOTFORMS SR    R0,R0               CLEAR REG
         MVC   MESSAGE+36(5),=C'LOCAL' PUT 'LOCAL' IN MESSAGE
         ICM   R0,3,JOEREMOT       GET REMOTE ROUTING
         BZ    LABEL               IT IS LOCAL, SO LEAVE IT
*--------------------------------------------------------------------- *
* IT IS NOT LOCAL, SO FORMAT THE REMOTE NUMBER                         *
*--------------------------------------------------------------------- *
         CVD   R0,DW               CONVERT ROUTING TO DECIMAL
         MVC   JOEPRT(4),=X'40202120' EDIT PATTERN
         ED    JOEPRT(4),DW+6      EDIT ROUTE
         MVI   JOEPRT,C'R'         MAKE IT PRETTY
JUSTIFY  CLC   JOEPRT+1(1),=C' '   BLANK ?
         BNE   ROUTE               NO - PRINT IT
         MVC   JOEPRT+1(2),JOEPRT+2 CHUNK ALONG
         MVI   JOEPRT+3,C' '       ENSURE ITS BLANK
         B     JUSTIFY
ROUTE    MVC   MESSAGE+36(5),JOEPRT PUT ROUTE IN MESSAGE
LABEL    MVC   MESSAGE+34(2),=C'D=' LABEL IT
         TM    JQEFLAG3,JQE3STC    IS IT AN STC ?
         BO    STC                 YES
         TM    JQEFLAG3,JQE3TSU    IS IT A TSU ?
         BO    TSU                 YES
         MVC   MESSAGE(3),=C'JOB'  NO - MUST BE A JOB
         B     JOBNAME             INSERT JOBNAME
STC      MVC   MESSAGE(3),=C'STC'  PUT IN CORRECT 'TYPE'
         B     JOBNAME             AND GET JOBNAME
TSU      MVC   MESSAGE(3),=C'TSU'  PUT IN CORRECT 'TYPE'
JOBNAME  MVC   MESSAGE+9(8),JQEJNAME PUT JOBNAME IN MESSAGE
         MVC   MESSAGE+18(2),=C'F='
         LH    R8,JQEJOBNO         GET JOB NUMBER
         CVD   R8,JOBNODEC         JOB NUMBER IN DECIMAL
         MVC   JOBNO(6),=X'402020202020' INSERT EDIT PATTERN
         ED    JOBNO(6),JOBNODEC+5 MAKE IT PRINTABLE
         MVC   MESSAGE+4(4),JOBNO+2 INSERT JOB NUMBER IN MESSAGE
         SLR   R0,R0               CLEAR REGISTER
         IC    R0,JQEPRIO          = PRIORITY * 16
         SRA   R0,4                DIVIDE BY 16
         CVD   R0,JOBPRDEC         CONVERT PRIORITY TO DECIMAL
         OI    JOBPRDEC+7,X'0F'    MAKE SURE OF SIGN
         UNPK  JOBPRTY+1(3),JOBPRDEC+6(2) UNPACK IT
         MVC   JOBPRTY(2),=C'P='   ADD 'P='
         MVC   MESSAGE+29(4),JOBPRTY AND ADD IT TO THE MESSAGE
         OI    SW,PUTIT1           FLAG JOB FOR ACTION (PURGE/DISPLAY)
         TM    SW,PURG             PURGING?
         BNO   NOPURGE
PURGIT   CLC   JQEPRREM,REM       PRINT ROUTE MATCH ?
         BNE   NOPURGE            (NO )-DON'T PURGE IT
         $JCAN JQE=(R1),TYPE=CANALL,NOTJOB=NOPURGE,OK=NOPURGE          *
               OFFLINE=NOPURGE,NOJOE=NOPURGE
NOPURGE  $CWTO MSG=MESSAGE,L=42,MSGID=901
NEXTJQE  LA    R3,1(,R3)
         C     R3,=F'10000'
         BL    QLOC
NOMORE   TM    SW,PUTIT1           HAVE WE FOUND ANYTHING TO OUTPUT ?
         BO    RC8                 YES - FINISH
         $CWTO MSG='NO JOBS WITH SPECIFIED FORM NAME',L=32,MSGID=902
         B     RC8
         DROP  R1,R4               DROP ADDRESSABILITY
INVALOP  MVC   MESSAGE(9),0(R2)    PUT INVALID PARM IN MESSAGE
         MVC   MESSAGE+10(15),=C'INVALID OPERAND'
         $CWTO MSG=MESSAGE,L=25,MSGID=650
RC8      LA    R2,8                SET RC=8
         B     RETURN              RETURN TO CALLER
RC0      SLR   R2,R2               SET RC=0
RETURN   LR    R1,R6               RESTORE AREA POINTER
         $FREMAIN R,LV=MSGLEN,A=(1) FREE OFF MESSAGE STORAGE
         LR    R15,R2             RETURN CODE
         $STORE R0
         $RETURN RC=(R15)          RETURN TO MAIN PROG
*--------------------------------------------------------------------- *
* CONSTANTS                                                            *
*--------------------------------------------------------------------- *
         LTORG ,
         $MODEND
*--------------------------------------------------------------------- *
* DSECTS                                                               *
*--------------------------------------------------------------------- *
MSG      DSECT
MESSAGE  DS    CL110
JOBNODEC DS    D
JOBPRDEC DS    D
DW       DS    D
REMP     DS    D
REM      DS    H
MVNCHECK DC    CL3' '
REMOTE   DC    CL3' '
REMOTE1  DC    CL3' '
JOEPRT   DC    CL4' '
JOBNO    DC    CL8' '
JOBPRTY  DC    CL4' '
FORMS    DC    CL8' '
SW       DC    X'0'
PUTIT1   EQU   1
ALLOWED  EQU   2
COMMA    EQU   4
PURG     EQU   8
MSGLEN   EQU   *-MSG
         END


Martin Boland
Systems Programmer
Lucas Engineering and Systems (UK) € Lucas Engineering and Systems 1988













