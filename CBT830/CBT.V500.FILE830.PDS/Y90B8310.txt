Restricting use of ISPF options with RACF

The flexibility of ISPF and the inconvenience of maintaining
several primary option menus often leads to an ISPF system with
many options that should only be used by certain groups of users.
It would be useful to control access using RACF to avoid hard-
coding a list of the authorized user-ids inside the ISPF dialogs
themselves.

It is possible to achieve this using the ISPF select service start exit
(user exit 3). The example shown below issues a RACHECK
before an ISPF program, command (REXX, CLIST, TSO CP), or
selection panel is invoked. The RACF resource name is built as
'ISPF.element.type' where element is the member name and type
is either PGM, CMD, or PAN.

The RACF class used is FACILITY but this can be any suitable
class and should be a RACLISTed one for performance reasons.
Certain frequently-used dialog elements are exempted in the exit
to save unnecessary checks. If only non-IBM dialogs are to be
controlled then all elements starting ISP or ISR could also be
exempted.

It must be noted that using this exit does not prevent someone
from copying and renaming an ISPF dialog member in order to
avoid the checks, but most end users will not know how to do this
and it stops them from causing problems if they decide to
'investigate' the ISPF menus.

Should an option be denied, then ISPF will display an
'authorization failure' panel and then return to the primary option
menu. Please refer to the ISPF/PDF Installation and
Customization Guide for details on how to install this exit, which
requires a definition CSECT called ISPXDT as well as the
executable code together in module ISPEXITS.

Standard RACF profiles can be defined to control access and the
type name can be masked off unless needed, eg
'ISPF.OMEGAMON.*' would control the OMEGAMON
invocation CLIST. Users should be permitted read access to it by
their RACF group or user-id in the usual way. The module
ISPEXITS can be tested from an ISPLLIB-defined library.

ISPXDT CSECT

*****************************************************************
* CSECT - ISPXDT
* THIS IS PART OF MODULE ISPEXITS AND DEFINES TO ISPF WHICH USER
* EXITS ARE INSTALLED AND ALSO HOW MUCH WORKAREA TO PASS THEM.
*****************************************************************
         ISPMXED  START                BEGIN EXIT DEFINITIONS
         ISPMXLST (3)                  DEFINE EXITS TO BE CALLED
* SELECT SERVICE START EXIT
         ISPMXDEF 3                    DEFINE EXIT 3
         ISPMEPT  ISPUX3,EX3AREA       EXIT 3 ENTRY POINT, AREA
         ISPMXEND                      END EXIT 3 DEFINITIONS*
* END OF EXITS DEFINITION
         ISPMXED  END                  END EXIT DEFINITIONS
* DEFINITIONS FOR DATA AREAS PASSED TO EXITS*
         ISPMXDD  START                BEGIN EXIT AREA DEFINITIONS
         ISPMDAD  EX3AREA,256          EXIT 3 AREA AND SIZE IN BYTES
         ISPMXDD  END                  END EXIT AREA DEFINITIONS
         END

ISPUX3 CSECT

*******************************************************************
* CSECT - ISPUX3 - ISPF/PDF USER EXIT 3 - PART OF MODULE ISPEXITS
* IT IS CALLED BEFORE SELECT SERVICE REQUESTS ARE PROCESSED
* AND ALLOWS US TO RACF VERIFY THE SELECT IS PERMITTED.
* R15 = RETURN CODE = 0.    CONTINUE WITH SELECT.
* R15 = RETURN CODE = 16.   ABORT SELECT (ISPF SHOWS ERROR PANEL).
* DATA AREA PASSED TO US IS MAINTAINED FROM CALL TO CALL AND IS
* INITIALIZED TO 256 BINARY ZEROS (NOT USED HERE). REENTRANT CODE.
*******************************************************************
ISPUX3   CSECT
ISPUX3   AMODE 31
ISPUX3   RMODE ANY
         STM   R14,R12,12(R13)   SAVE REGISTERS
         LR    R12,R15           ADDRESSABILITY
         LR    R11,R1            SAVE PARM ADDR
         USING ISPUX3,R12
         GETMAIN R,LV=WORKLEN    GETMAIN DYNAMIC AREA
         LR    R10,R1            R10 -> DYNAMIC AREA
         USING WORKAREA,R10      ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLER'S SAVEAREA ADDRESS
         ST    R10,8(R13)        SAVE SAVEAREA ADDRESS
         LR    R13,R10           SAVE AREA PTR
* LOAD PARM REGS (SEE ISPF INSTALLATION AND CUSTOMIZATION GUIDE)
         LM    R2,R5,16(R11)     R2 -> DATALEN, R3 -> DATA-AREA
*                                R4 -> FLAGS,   R5 -> ELEMENT NAME
* STORE ELEMENT NAME AND TYPE FOR LATER CHECK
         MVC   ELEMENT,0(R5)     SAVE ISPF ELEMENT NAME
         TM    0(R4),BIT0        IS IT A PGM?
         BO    PGM
         TM    0(R4),BIT1        IS IT A CMD?
         BO    CMD
         TM    0(R4),BIT2        IS IT A PANEL?
         BO    PAN
         MVC   TYPE,=CL3'XXX'    UNKNOWN TYPE
         B     RACFC
* SKIP RACF CHECK FOR CERTAIN FREQUENTLY USED ELEMENTS
PGM      EQU   *
         CLC   ELEMENT,=CL8'ISREDIT'      FAST EDIT PGM?
         BE    ALLOW
         CLC   ELEMENT,=CL8'ISRBRO'       FAST BROWSE PGM?
         BE    ALLOW
         CLC   ELEMENT,=CL8'ISFISP'       FAST SDSF PGM?
         BE    ALLOW
         MVC   TYPE,=CL3'PGM'             PROGRAM TO BE CHECKED
         B     RACFC
CMD      EQU   *
         MVC   TYPE,=CL3'CMD'             COMMAND / CLIST TO CHECK
         B     RACFC
PAN      EQU   *
         CLC   ELEMENT,=CL4'ISR@PRIM'     FAST PRIMARY OPTION MENU?
         BE    ALLOW
         CLC   ELEMENT,=CL8'ISRUTIL'      FAST OPTION 3 MENU?
         BE    ALLOW
         CLC   ELEMENT,=CL8'ZSDSFOP2'     FAST SDSF MENU?
         BE    ALLOW
         MVC   TYPE,=CL3'PAN'    SELECTION PANEL CHECK
         B     RACFC
* RACF TEST OF RESOURCE CLASS=FACILITY RES=ISPF.ELEMENT.TYPE
RACFC    EQU   *
         MVC   RACR(RACHTMPL),RACHTMP  COPY TEMPLATE
         MVC   RESO,BLANKS        CLEAR RESOURCE NAME
         MVC   RESO(5),=CL5'ISPF.' START OF RESOURCE NAME
         LA    R6,ELEMENT+1       POINT TO ELEMENT + 1
         LA    R7,0               COUNTER (LEN - 1)
         LA    R8,7               LIMIT
LOOPN    EQU   *
         CLI   0(R6),C' '         END OF NAME?
         BE    ENDNAME            YES
         LA    R6,1(R6)           UP PTR
         LA    R7,1(R7)           UP COUNTER
         BCT   R8,LOOPN           LOOP MAX 7 TIMES
ENDNAME  EQU   *
         EX    R7,MOVEISPF        OPTION NAME
         LA    R8,RESO+6          POINT INTO RESOURCE NAME
         AR    R8,R7              ADD LEN - 1
         MVI   0(R8),C'.'         ADD DOT
         MVC   1(3,R8),TYPE       MOVE TYPE CODE
         RACROUTE REQUEST=AUTH,WORKA=RACFWORK,CLASS=FACILITY,          X
               ENTITY=RESO,MF=(E,RACR),ATTR=READ,RELEASE=1.8.1
         C     R15,=F'4'          0-4 ARE ALLOWED
         BH    FAIL               FAIL ACCESS
         B     ALLOW              OK, OR WARN, OR NOT DEFINED
MOVEISPF MVC   RESO+5(0),ELEMENT  MOVE ELEMENT NAME
* END OF EXIT, SET RETURN CODE 0 OR 16
ALLOW    EQU   *
         LA    R3,0               RETURN CODE IS 0 (OK)
         B     LEAVE
FAIL     EQU   *
         LA    R3,16              RETURN CODE IS 16 (FAIL)
         B     LEAVE
LEAVE    EQU   *
         L     R13,SAVEAREA+4     RESTORE R13
         FREEMAIN R,LV=WORKLEN,A=(10) FREE DYNAMIC AREA
         LR    R15,R3             RETURN CODE TO R15
         L     R14,12(R13)        RESTORE R14
         LM    R0,R12,20(R13)     RESTORE R0 TO R12
         BR    R14                RETURN
* CONSTANTS
BLANKS   DC    CL255' '           BLANKS
FACILITY DC    XL1'08',CL8'FACILITY' RACF RESOURCE CLASS NAME
RACHTMP  RACROUTE REQUEST=AUTH,MF=L,WORKA=*-*,RELEASE=1.8.1
RACHTMPL EQU   *-RACHTMP          LEN
* PROGRAM DATA AREA (GETMAINED, NOT THE ONE PASSED BY ISPF)
WORKAREA DSECT
SAVEAREA DS    18F                SAVE AREA
ELEMENT  DS    CL8                ISPF ELEMENT
TYPE     DS    CL3                ISPF TYPE
RESO     DS    CL39               RACF RESOURCE NAME
RACR     RACROUTE REQUEST=AUTH,MF=L,WORKA=*-*,RELEASE=1.8.1
RACFWORK DS    CL512             RACF WORK AREA
WORKLEN  EQU   *-WORKAREA
* OTHER DSECTS
         IEZBITS
         END




