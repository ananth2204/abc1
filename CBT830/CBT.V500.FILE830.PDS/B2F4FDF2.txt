Obtaining RACF profile information

The lack of a convenient programmer interface to RACF can be
annoying.  IBM supplies various Assembler routines, most of
which must run authorized, some TSO commands, and a basic
set of ISPF screens.  The following CLIST goes a small way
towards rectifying this situation.  When given a user-id and a
profile name, the CLIST returns the universal access of the
profile and the authorization of the UID.

The CLIST works by trapping the output of the TSO LISTDSD
command.  The return code, universal access (UACC), and the
UID's authorization are returned as ISPF variables in the shared
pool (should an ISPF interface not be desired the variables
could easily be made GLOBAL).  If there is an error in the
LISTDSD command, the error message identifier and the
message itself are also returned.  Checks are made that RACF
is available and that the user is defined.

The CLIST depends on the format of the output of the
LISTDSD command and has been rested under RACF 1.8.
Given the program logic, it is simple to modify should the
format change in the future.  The CLIST is most useful if the
user executing it also owns the profile being examined.
Otherwise the user access list is not available.  We have found
it particularly convenient as a basis for user-friendly utilities for
maintaining access lists to sets of central datasets.

PROC 2 PROF  ID DEBUG
/**********************************************************************/
/* FUNCTION  : Returns the universal access authority (UACC) and      */
/*             the user access authority for a specified RACF         */
/*             profile and user id.                                   */
/* DESCRIPT  : Checks that RACF is available and the user is defined  */
/*             The required information is obtained from the LISTDSD  */
/*             command by trapping and parsing the output. If there   */
/*             is an error in LISTDSD the RACF error message and      */
/*             message id are returned. This CLIST has been tested    */
/*             on RACF 1.8.                                           */
/*             The return code, UACC, user access, error message and  */
/*             message id are stored in the ISPF shared pool.         */
/* PARAMETERS: DEBUG    used for testing and debugging                */
/*             PROF     RACF profile to be checked                    */
/*             ID       User to be checked                            */
/* PRINCIPAL VARIABLES                                                */
/* PRRCODE   : return code  0 - ok                                    */
/*                         24 - user not defined to RACF              */
/*                         28 - RACF not active                       */
/*                       else - Error from LISTDSD                    */
/* PRUACC    : universal access to profile                            */
/* PRUSRACC  : the userid's access to the profile                     */
/* PRERID    : LISTDSD error message id                               */
/* PRERMSG   : LISTDSD error message test                             */
/**********************************************************************/
/* set debugging options, allow lower case, define subproc variables  */
/**********************************************************************/
IF &DEBUG = DEBUG THEN CONTROL   MSG   SYMLIST   CONLIST   LIST
                  ELSE CONTROL   MSG NOSYMLIST NOCONLIST NOLIST NOFLUSH
CONTROL ASIS
NGLOBAL LIN COL RLEV
SET &univ     = &str(UNIVERSAL ACCESS)
SET &erid     = &str(ICH3)
SET &luerid   = &str(ICH30001I)
SET &ids      = &str(  ID   )
SET &acc      = &str( ACCESS )
SET &pgm      = &str(PROGRAM )
SET &prrcode  = 0
SET &prerid   = &str( )
SET &prermsg  = &str( )
SET &pruacc   = &str(NOT FOUND)
SET &prusracc = &str(NOT FOUND)
/**********************************************************************/
/* check RACF available and user defined if not exit                  */
/**********************************************************************/
IF &sysracf ¬= AVAILABLE THEN +
  DO
    SET &prrcode = 28
    GOTO FINISH
  END
SET &sysouttrap = 100
LISTUSER &id
SET &rcode = &lastcc                          /* look for user not
SET &sysouttrap = 0                           /* defined to RACF error
SET &nline = &sysoutline                      /* message
SET &count = 1
IF &rcode ¬= 0 THEN +
  DO WHILE &count <= &nline
    SET &lin1 = &&sysoutline&count
    SET &lin  = &str(&lin1)
    SET &col = &sysindex(&luerid,&str(&lin),1)
    IF &col ¬= 0 THEN +
      DO
        SET &prrcode = 24
        GOTO FINISH
      END
    SET &count = &count + 1
  END
/**********************************************************************/
/* get profile information including list of authorized users         */
/**********************************************************************/
SET &sysouttrap = 5000
LISTDSD DA(&prof) AUTHUSER
SET &prrcode = &lastcc
SET &nline = &sysoutline
SET &sysouttrap = 0
SET &count = 1
/**********************************************************************/
/* if error in LISTDSD then get the RACF error message identifier     */
/**********************************************************************/
IF &prrcode ¬= 0 THEN +
  DO WHILE &count <= &nline
    SET &lin1 = &&sysoutline&count
    SET &lin  = &str(&lin1)
    SET &col = &sysindex(&erid,&str(&lin),1)
    IF &col ¬= 0 THEN +
      DO                                      /* message id
        SET &prerid = &substr(1:8,&str(&lin)) /* look for LD error
        SET &prermsg= &str(&lin)
        GOTO ENDLOOP1
      END
    SET &count = &count + 1
  END
ENDLOOP1: +
IF &prrcode ¬= 0 THEN GOTO FINISH
/**********************************************************************/
/* get the UACC value on line after 'UNIVERSAL ACCESS'                */
/**********************************************************************/
DO WHILE &count <= &nline
  SET &lin1 = &&sysoutline&count
  SET &lin  = &str(&lin1)                     /* look for 'UNIVERSAL
  SET &col = &sysindex(&univ,&str(&lin))       /* ACCESS'
  IF &col ¬= 0 THEN +
    DO
      SET &count = &count + 2
      SET &lin1 = &&sysoutline&count
      SET &lin  = &str(&lin1)
      SYSCALL RACFLEV                         /* get RACF authorization
      SET &pruacc = &rlev
      GOTO ENDLOOP2
    END
  SET &count = &count + 1
END
ENDLOOP2: SET &dummy = &str( )
/**********************************************************************/
/* get the user auth list starts after line with 'ID     ACCESS'      */
/**********************************************************************/
DO WHILE &count <= &nline
  SET &lin = &&sysoutline&count
  SET &col1 = &sysindex(&ids,&lin)            /* look for 'ID'
  IF &col1 ¬= 0 THEN +
    DO
      SET &col2 = &sysindex(&acc,&lin)        /* look for 'ACCESS'
      IF &col2 ¬= 0 THEN +
      DO
        SET &col3 = &sysindex(&pgm,&lin)      /* must not have 'PROGRAM'
        IF ( &col3 = 0 ) THEN +
          DO
            SET &col = &col2
            SET &count = &count + 2
            DO UNTIL &lin1 =
              SET &lin1 = &&sysoutline&count
              SET &col4 = &sysindex(&id,&lin1) /* look for uid
              IF &col4 ¬= 0 THEN +
                DO
                  SET &lin  = &lin1
                  SYSCALL RACFLEV              /* get RACF authorization
                  SET &prusracc = &rlev
                  GOTO FINISH
                END
              SET &count = &count + 1
            END
          END
      END
    END
  SET &count = &count + 1
END
/**********************************************************************/
/* store ISPF variables in shared pool, set return code, exit         */
/**********************************************************************/
FINISH: +
IF &sysipf = ACTIVE THEN +
  DO
    ISPEXEC VPUT (PRERID PRERMSG PRRCODE)  SHARED
    ISPEXEC VPUT (PRUACC PRUSRACC)         SHARED
  END
IF &debug = DEBUG THEN +
  DO
    WRITE PRRCODE= &prrcode, PRUACC= &pruacc, PRUSRACC= &prusracc
    IF &prrcode ¬= 0 THEN +
      DO
        WRITE PRERID = &prerid
        WRITE PRERMSG= &prermsg
      END
  END
EXIT CODE(&prrcode)
/**********************************************************************/
/* Subprocedure to search line for RACF authorization                 */
/**********************************************************************/
RACFLEV: PROC 0
   SET &rapos = &str(NONE    READ    UPDATE  CONTROL ALTER   )
   SET &lrapos = &length(&str(&rapos))
   SET &i = 1
   DO WHILE &i < &lrapos
      SET &rtest = &substr(&i:&i+7,&rapos)
      SET &rtest = &substr(1:&length(&rtest),&rtest)
      SET &found = &sysindex(&rtest,&lin,&col)
      IF &found ¬= 0 THEN +
         DO
            SET &rlev = &rtest
            GOTO SPEND
         END
      SET &i = &i + 8
   END
   SET &rlev =
SPEND: +
END


Dr Robert Frost
Computer Consultant
Tessella (Abingdon) Ltd (UK)                  € Xephon 1990

