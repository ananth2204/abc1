Linear dataset loading and unloading
(continued)

This month we conclude our look at a method of loading and
unloading linear datasets by publishing the source code for
DIVUNLD and an example of the JCL required to execute it.

DIVUNLD SOURCE

         TITLE 'D I V U N L D  -  D-I-V LINEAR DATA SET UNLOAD'
         MACRO
&NAME    LABEL
&NAME    MVC   LABEL,=CL8'&NAME'
         MEND
         MACRO
&NAME    AMODE24
&NAME    LA    R1,*+6                   CLEAR BIT 0, SET BRANCH ADDR
         BSM   0,R1                     SET AMODE BIT
         MEND
         MACRO
&NAME    AMODE31
         CNOP  2,4                      HALFWORD ALIGN
&NAME    LA    R1,*+14                  SET BRANCH ADDR
         O     R1,*+6                   TURN ON BIT 0 - AMODE = 31
         BSM   0,R1                     SET AMODE BIT
         DC    X'80000000'
         MEND
DIVUNLD  AMODE 31
DIVUNLD  CSECT
         STM   R14,R12,12(R13)          ENTRY LINKAGE
         LR    R12,R15
         USING DIVUNLD,R12
         ST    R13,SAVEAREA+4
         LA    R15,SAVEAREA
         ST    R15,8(R13)
         LA    R13,SAVEAREA
         B     DIVU0001
RETURN   SR    R15,R15
         L     R13,4(R13)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
DIVU0001 OPEN  (SYSPRINT,(OUTPUT))      OPEN MESSAGE DATA SET
         TM    SYSPRINT+DCBOFLGS-IHADCB,DCBOFOPN OK?
         BO    DIVU0005                 YES
         WTO   'SYSPRINT OPEN ERROR - TERMINATING'
         LA    R15,12                   LOAD RETURN CODE
         B     RETURN+2                 END
DIVU0005 OPEN  (SNAP,(OUTPUT))
         TM    SNAP+DCBOFLGS-IHADCB,DCBOFOPN OK?
         BO    DIVU0010                 YES
         WTO   'SNAP OPEN ERROR - TERMINATING'
         LA    R15,12                   LOAD RETURN CODE
         B     RETURN+2                 END
DIVU0010 AMODE24
         PUT   SYSPRINT,HEADING
         PUT   SYSPRINT,BLANKS
         AMODE31
         LA    R4,0                     INPUT 'RECORD' COUNTER
* ACCESS LINEAR INPUT DATA SET *
DIVU0025 LABEL
         DIV   IDENTIFY,ID=DIVID1,DDNAME=DIVDDN1,TYPE=DA
         LTR   R15,R15                  OK?
         BNZ   DIVU2000                 NO
DIVU0030 LABEL
         DIV   ACCESS,ID=DIVID1,MODE=READ,SIZE=DIVSIZE1
         LTR   R15,R15                  OK?
         BZ    DIVU0040                 YES
         CLM   R0,B'0011',=X'0028'      EMPTY DATA SET?
         BNE   DIVU2000                 NO, SOMETHING ELSE
         LR    R2,R15                   SAVE RETURN CODE
         AMODE24
         PUT   SYSPRINT,MSG05           INDICATE
         AMODE31
         LR    R15,R2                   RESTORE RETURN CODE
         B     DIVU2000
DIVU0040 GETMAIN RU,LV=65536,BNDRY=PAGE GET BUFFER STORAGE
         LR    R11,R1                   SAVE ADDRESS
         LR    R0,R1
         L     R1,=A(65536)
         LA    R14,0
         LA    R15,0
         MVCL  R0,R14                   CLEAR STORAGE
         A     R11,=A(32768)            BUMP TO LAST 32K
         ST    R11,DIVAREA1
DIVU0050 LABEL
         DIV  MAP,ID=DIVID1,AREA=DIVAREA1,OFFSET=DIVOFFS1,SPAN=DIVSPAN1
         LTR   R15,R15                  OK?
         BNZ   DIVU2000                 NO
         LA    R6,=A(32768)             LENGTH OF DATA LEFT IN WINDOW
         LR    R7,R11                   INPUT BUFFER POINTER
* OPEN NONVSAM OUTPUT DATA SET *
DIVU0065 LABEL
         OPEN  (DCB1,(OUTPUT))
         TM    DCB1+DCBOFLGS-IHADCB,DCBOFOPN OK?
         BO    DIVU0200                 YES
         LA    R15,12                   SET RETURN CODE
         B     DIVU2000
* GET A LINEAR RECORD *
DIVU0200 CH    R6,DCB1+DCBLRECL-IHADCB  < 'LRECL' OF WINDOW DATA?
         BNL   DIVU0250                 NO, STILL OK
         LR    R0,R11                   ADDRESS OF BUFFER START
         SR    R0,R6                    BACK OFF BY RESIDUAL DATA LEN.
         LR    R1,R6                    LOAD RESIDUAL DATA LEN.
         LR    R14,R7                   RESIDUAL DATA ADDRESS
         LR    R15,R1
         MVCL  R0,R14                   MOVE IN FRONT OF BUFFER
         LR    R0,R11                   ADDRESS OF BUFFER START
         L     R1,=A(32768)
         LA    R14,0
         LA    R14,0
         MVCL  R0,R14                   CLEAR BUFFER
         A     R6,=A(32768)             COMPUTE NEW LENGTH
         S     R7,=A(32768)             COMPUTE NEW BUFFER POINTER
DIVU0220 LABEL
         DIV   UNMAP,ID=DIVID1,AREA=DIVAREA1
         LTR   R15,R15                  OK?
         BNZ   DIVU2000                 NO
         L     R1,DIVOFFS1
         A     R1,DIVSPAN1
         ST    R1,DIVOFFS1
DIVU0230 LABEL
         DIV  MAP,ID=DIVID1,AREA=DIVAREA1,OFFSET=DIVOFFS1,SPAN=DIVSPAN1
         LTR   R15,R15                  OK?
         BNZ   DIVU2000                 NO
* WRITE AN OUTPUT RECORD *
DIVU0250 AMODE24
         PUT   DCB1,(R7)
         AMODE31
* UPDATE ACCUMULATORS AND POINTERS *
         SH    R6,DCB1+DCBLRECL-IHADCB  SUBTRACT LENGTH LEFT BY LRECL
         AH    R7,DCB1+DCBLRECL-IHADCB  BUMP BUFFER POINTER BY LRECL
         AP    UT2COUNT,=PL1'1'         INCREMENT OUTPUT RECORD COUNT
         LA    R0,0
         LR    R1,R7
         SR    R1,R11                   LENGTH INTO BUFFER
         D     R0,=A(4096)              NO. OF BLOCKS
         L     R4,DIVOFFS1              BLOCK OFFSET VALUE
         AR    R4,R1                    PLUS ADDITIONAL BLOCKS = TOTAL
         C     R4,DIVSIZE1              INPUT EXHAUSTED?
         BL    DIVU0200                 NOT YET, RECYCLE
* INPUT EXHAUSTED *
DIVU1000 LABEL
         DIV   UNIDENTIFY,ID=DIVID1
         LTR   R15,R15                  OK?
         BNZ   DIVU2000                 NO
         BAL   R14,DIVU3000             ISSUE RECORD COUNT MESSAGES
         B     RETURN
* ERROR ROUTINE *
DIVU2000 LR    R2,R15                   SAVE RETURN CODE
         SNAP  DCB=SNAP,PDATA=REGS,STORAGE=(SNAPBEG,SNAPEND)
         MVC   MSG01A+16(8),LABEL
         AMODE24
         PUT   SYSPRINT,MSG01A
         PUT   SYSPRINT,MSG01B
         AMODE31
         BAL   R14,DIVU3000             ISSUE RECORD COUNT MESSAGES
         LR    R15,R2                   RESTORE RETURN CODE
         B     RETURN+2
* INTERNAL SUBROUTINES *
* ISSUE RECORD COUNT MESSAGES *
DIVU3000 ST    R14,R14SAVE1             SAVE RETURN ADDRESS
         CVD   R4,WORK1                 INPUT 'RECORD' COUNT
         MVC   MSG03+21(10),=X'40202020202020202120'
         ED    MSG03+21(10),WORK1+3     EDIT INPUT RECORD COUNT
         AMODE24
         PUT   SYSPRINT,MSG03           PUT IT OUT
         MVC   MSG04+21(10),=X'40202020202020202120'
         ED    MSG04+21(10),UT2COUNT    EDIT OUTPUT RECORD COUNT
         PUT   SYSPRINT,MSG04           PUT IT OUT
         AMODE31
         L     R14,R14SAVE1             RELOAD RETURN ADDRESS
         BR    R14                      RETURN
SAVEAREA DC    18F'0'
HEADING  DC    CL80'                                 D I V U N L D'
BLANKS   DC    CL80' '
MSG01A   DC    CL80'ERROR AT LABEL ''XXXXXXXX'' - CHECK ''SNAP'' DATA S*
               ET FOR REGISTERS AND STORAGE'
MSG01B   DC    CL80'ALSO CHECK THE JOB LOG FOR ANY SYSTEM ERROR MESSAGE*
               S'
MSG03    DC    CL80'SYSUT1 RECORD COUNT = XXXXXXXXX  (NO. OF 4K BLOCKS *
               READ)'
MSG04    DC    CL80'SYSUT2 RECORD COUNT = XXXXXXXXX'
MSG05    DC    CL80'ERROR AT LABEL GIVEN BELOW - LIKELY CAUSE IS AN EMP*
               TY INPUT DATA SET'
SNAPBEG  EQU   *
R14SAVE1 DC    A(0)
WORK1    DC    D'0'
UT2COUNT DC    PL5'0'
DCB1     DCB   DDNAME=SYSUT2,DEVD=DA,MACRF=PM,DSORG=PS,RECFM=FB
SYSPRINT DCB   DDNAME=SYSPRINT,DEVD=DA,MACRF=PM,DSORG=PS,RECFM=FB,     *
               LRECL=80,BLKSIZE=800
SNAP     DCB   DDNAME=SNAP,RECFM=VBA,LRECL=125,BLKSIZE=1632,MACRF=(W), *
               DSORG=PS
LABEL    DC    CL8' '
DIVID1   DC    XL8'0'
DIVDDN1  DC    X'06',C'SYSUT1'
DIVAREA1 DC    A(0)
DIVOFFS1 DC    F'0'
DIVSPAN1 DC    F'8'
DIVSIZE1 DC    F'0'
SNAPEND  EQU   *
         LTORG
         DCBD  DEVD=DA,DSORG=PS
         END

EXECUTION JCL

//jobname  JOB
//DIVUNLD  EXEC PGM=DIVUNLD
//SYSUT1   DD   DSN=linear.data.set,DISP=SHR
//SYSUT2   DD   DSN=fixed.blocked.sequential.data.set,
//         DCB=(LRECL=lrecl,BLKSIZE=blksize),DISP=OLD
//SYSPRINT DD   SYSOUT=*
//SYSUDUMP DD   SYSOUT=*
//SNAP     DD   SYSOUT=*


    â‚¬ Xephon 1989

