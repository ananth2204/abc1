Changing SWA definitions for JES2 job classes

Since MVS/XA 2.1.7, some SWA-related control blocks such
as SCT and JFCB can be placed above the 16-megabyte line.
To support this feature, a new parameter has been added to the
JES2 definitions for STCCLASS, TSUCLASS, and
JOBCLASS.  The format of the new parameter is:

     STCCLASS SWA=ABOVE/BELOW,......         (started tasks)
     JOBCLASS SWA=ABOVE/BELOW,......         (batch job classes)
     TSUCLASS SWA=ABOVE/BELOW,......         (tso users)

By specifying SWA=ABOVE or BELOW, you can request that
the SWA control blocks are put above or below the 16-
megabyte line, respectively.  However, to change this
parameter, the JES2 parameter must be changed and a warm
start is required to effect the change.  There is no JES2
operator command to change the parameter.  This makes it
inconvenient sometimes if a job fails to run in a job class with
SWA=ABOVE specified and it is not practical to change the
JES2 definition and perform a warm start.

For example, some existing programs might get the JFCB

address from the TIOT entry.  With SWA=ABOVE, the TIOT
entry will contain a JFCB token not an address!  Such
programs will fail miserably with an S0C4.  To fix the
problem, such programs should be changed to either use
RDJFCB or the new SWAREQ macro.  In the meantime the
JES2 definition must be changed to let the job run.

Following is a simple program that can be run to reset the JES2
parameter definition for SWA dynamically.  Note the program
will flip-flop the SWA definition, ie if SWA=ABOVE is
specified, it will change it to SWA=BELOW, and vice versa.
The program can also be used to test program changes (to use
the new SWAREQ macro) without making permanent changes
to the JES2 parameters.

Since the program uses cross memory services to change the
JES2 class attribute table, it has to be linked into an authorized
library with AC=1.

PROGRAM SOURCE

         TITLE ' CHANGE SWA DEFINITION FOR JES2 JOB CLASSES'
PWLCSWA  INIT                   STANDARD LINKAGE
         B     PWLCSWA1
         DC    C' COPYRIGHT - PETER W.K. LEE  1990'
         DC    C' ALL RIGHTS RESERVED'
         DC    C' PWLCSWA &SYSDATE &SYSTIME'
PWLCSWA1 DS    0H
         L     R2,=F'409600'
         GETMAIN RC,LV=(2)
         ST    R1,WORKADDR
         MODESET MODE=SUP
         MODESET KEYADDR=ZERO,SAVEKEY=OLDKEY,WORKREG=2
         L     R2,X'4C'
         L     R2,X'128'(R2)             JESCT
         L     R2,X'18'(R2)              1ST SSCVT
         L     R2,X'10'(R2)              SSVT OF JES2
         L     R2,X'1AC'(R2)             ADDR OF JES2 HCT
         ST    R2,HCTADDR                SAVE ADDR OF HCT
         LA    R2,X'35C'(R2)
         ST    R2,HCTCAT                 SAVE ADDR OF CLASS ATTRIB TAB
         L     R2,16                     CVT
         L     R2,X'22C'(R2)             ASVT
         LA    R2,X'210'(R2)             PT TO 1ST ASID SLOT
         L     R3,X'204'(R2)             MAX # OF ADDR SPCES
         MH    R3,=H'4'
         LA    R4,X'210'(R2)
         AR    R4,R3
         SH    R4,=H'4'                  ADDR OF LAST SLOT
LOOP     DS    0H
         CR    R2,R4
         BH    EXIT
         L     R3,0(R2)
         LTR   R3,R3
         BM    SKIP                      SLOT NOT ASSIGNED
         L     R3,0(R2)
         L     R3,X'AC'(R3)              ASCBJBNI
         LTR   R3,R3
         BZ    LOOP1
         CLC   JOBNAME,0(R3)
         BE    FOUND
LOOP1    DS    0H
         L     R3,0(R2)
         L     R3,X'B0'(R3)              ASCBJBNS
         LTR   R3,R3
         BZ    SKIP
         CLC   JOBNAME,0(R3)
         BE    FOUND
SKIP     DS    0H
         LA    R2,4(R2)
         B     LOOP
FOUND    DS    0H
         L     R1,WORKADDR
         L     R3,0(R2)
         LH    R4,X'24'(R3)               LOAD ASID
         ST    R4,0(R1)                   R3=ASID
         ST    R2,4(R1)                   R2=ASVT SLOT ADDR
         L     R3,X'6C'(R3)               R3=ASXB ADDR
         ST    R3,8(R1)
         LR    R8,R1
         AXSET AX=AX1
         EPAR  R5                  PUT PRIMARY ASID INTO R5
         SSAR  R4                  SET SECONDARY ASID TO TARGET ASID
         L     R3,HCTADDR          GET HCT ADDR
         XR    R6,R6               ACCESS KEY TO SECONDARY
         LA    R7,16               LENGTH
         MVCP  0(R7,R8),0(R3),R6   GET HCT
         L     R8,WORKADDR
         CLC   =C'MIT HASPNUC',0(R8)     IS IT HCT?
         BNE   FOUND9
         L     R3,HCTCAT           GET ADDR OF CAT
         XR    R6,R6               ACCESS KEY TO SECONDARY
         LA    R7,4                LENGTH
         MVCP 16(R7,R8),0(R3),R6   GET ADDR OF CAT(CLASS ATTR TABLE)
         L     R8,WORKADDR
         L     R3,16(R8)          LOAD ADDR OF CAT
         ICM   R6,1,CLASSN        BATCH JOB CLASS
*USE FOLLOWING TO CHANGE STARTED CLASS OR TSO USERS, RESPECTIVELY
*        ICM   R6,1,STCCLASS      STARTED TASKS
*        ICM   R6,1,TSUCLASS      TSO USERS
         SLL   R6,26
         SRL   R6,26
         MH    R6,=H'32'           SIZE OF EACH ENTRY IS 32
         AR    R3,R6               POINT TO RIGHT JOB CLASS CAT
         ST    R3,CLASSCAT
         XR    R6,R6               ACCESS KEY TO SECONDARY
         LA    R7,32               LENGTH
         MVCP 20(R7,R8),0(R3),R6   GET CAT ENTRY
         L     R8,WORKADDR
         TM    28(R8),X'04'       X'04' - ON:  SWA=ABOVE
         BNO   FOUND2                     OFF: SWA=BELOW
         NI    28(R8),255-X'04'   SWITCH TO SWA=BELOW
         B     FOUND3
FOUND2   DS    0H
         OI    28(R8),X'04'       SWITCH TO SWA=ABOVE
FOUND3   DS    0H
         LA    R7,32               LENGTH
         XR    R6,R6               ACCESS KEY TO SECONDARY
         L     R3,CLASSCAT
         MVCS  0(R7,R3),20(R8),R6  MOVE DATA TO SECONDARY
FOUND9   DS    0H
         SSAR  R5                  SET SECONDARY BACK TO PRIMARY
         MODESET KEYADDR=OLDKEY,WORKREG=2
OPEN     DS    0H
         L     R3,WORKADDR
         LA    R4,OUTAREA
         L     R5,=F'80'
*FORMAT AND PRINT CAT ENTRY INTO 80 BYTE RECORDS
         OPEN  (SYSPRINT,OUTPUT)
F1       DS    0H
         MVC   OUTAREA(80),OUTAREA-1
         C     R5,=F'80'
         BNH   F2
         L     R6,=F'80'
         EX    R6,MOVE
         PUT   SYSPRINT,(R4)
         LA    R3,80(R3)
         S     R5,=F'80'
         B     F1
F2       DS    0H
         LR    R6,R5
         EX    R6,MOVE
         PUT   SYSPRINT,(R4)
         B     F3
MOVE     MVC   0(0,R4),0(R3)
F3       DS    0H
         CLOSE (SYSPRINT)
         B     EXIT                 STANDARD EXIT
WORKADDR DS    F
         DC    C' '
OUTAREA  DS    CL80
ZERO     DC    F'0'
OLDKEY   DC    F'0'
HCTADDR  DC    X'00006000'
HCTCAT   DC    X'0000635C'
JOBNAME  DC    C'JES2    '     JOBNAME OF JES2
AX1      DC    H'01'
STCCLASS DC    X'D0'           CAT OFFSET FOR STARTED TASKS
TSUCLASS DC    X'E0'           CAT OFFSET FOR TSO USERS
CLASSN   DC    C'C'            JOB CLASS TO BE CHANGED
CLASSCAT DS    F               CAT ADDR OF JOBCLASS
SYSPRINT DCB   DDNAME=SYSPRINT,MACRF=PM,DSORG=PS
         END   PWLCSWA


Peter W K Lee
Software Analyst (Canada)               â‚¬ Peter W K Lee 1990

