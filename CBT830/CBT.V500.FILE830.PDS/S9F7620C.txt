An SMP/E LIST post-processor


INTRODUCTION

SMPList is an SMP/E post-processor, written in REXX, to
enhance the information from the SMP/E LIST command
output.  The output consists of a list of SYSMODs that were
applied, accepted, or received into a zone during a user-
specified timespan.  This post-processor was originally written
to facilitate a maintenance acceptance policy in which PTFs
would be ACCEPTed if they had been applied for at least 3
months.  Another use of this utility has been to automate the
process of auditing weekly or monthly changes to the SMP/E
zones.


OPERATION

SMPList is run in batch mode.  With simple modifications on-
line operation should be possible.

The selection criteria are controlled by three parameters:
SDATE, EDATE, and OPT.  SDATE is the earliest date to be
considered eligible for selection and EDATE is the latest date
to be considered eligible for selection.  Both parameters accept
dates either in Julian format (eg 91213) or TODAY-offset,
where offset is in days (eg TODAY-90).  The third parameter,
OPT, has three possible values: REC, APP, and ACC.  REC
specifies that the RECEIVE date is to be used for the selection
criteria.  Similarly, APP and ACC specify that the APPLY or
ACCEPT date is to be used.  ACC is only valid if the LIST
was carried out on a distribution zone and APP is only
applicable to a target zone.  In practice either may be specified
as the form of the output for a LIST on a target zone and a
distribution zone are the same.  If no OPT is specified, APP or
ACC is assumed as the default value depending on the zone
being processed.  Further selectivity is achieved by
specification of further parameters on the LIST command - for
example the FORFMID parameter.

Intermediate output from the SMP/E LIST command is written
to the SMPLIST DD card.  This allows multiple uses of the
SMPList EXEC, with only one time-consuming SMP/E job.

The final output is written both to a spool dataset and to a
report dataset in such a format that it can be inserted into
further SMP/E JCL.

Each selected SYSMOD is reported on a separate line in the
form:

      SYSMOD-ID  /* FMID DATE */

Examples of the parameter specification are:

o      SDATE(90001) EDATE(TODAY-90) OPT(APP) - all
      PTFs applied over  90 days ago.

o      SDATE(TODAY-7) EDATE(TODAY) - all PTFs applied
      in the last week.

o      SDATE(91001) EDATE(91031) OPT(REC) - all PTFs
      received in January.


RESTRICTIONS

This utility has been run with SMP/E Release 5 and TSO/E
Version 2.1 under MVS/ESA.  There should be no problems
with earlier releases of SMP/E unless there have been
significant changes to the format of the LIST command output.


SAMPLE JCL TO RUN SMPLIST

//SYSPROG1 JOB (your favourite jobcard info here)
//* +--------------------------------------------------------+
//* | LIST ALL APPLIED PTFS IN TARGET ZONE NOT ACCEPTED INTO |
//* | DISTRIBUTION LIBRARIES AND PLACE OUTPUT IN SMPLIST DD. |
//* +--------------------------------------------------------+
//SMPE1   EXEC SMP5              (smp/e catalogued procedure)
//SMP5.SMPCNTL  DD *
  SET BDY(target-zone).
  LIST SYSMODS
       PTFS
       NOACCEPT.
/*
//SMP5.SMPLIST DD DSN=intermediate-dataset,DISP=(NEW,CATLG),
// SPACE=(CYL,(5,1)),
// DCB=(RECFM=FBA,LRECL=121,BLKSIZE=9075),
// UNIT=SYSDA
//*
//* +---------------------------------------------------------+
//* |  EXECUTE REXX IN BATCH                                  |
//* +---------------------------------------------------------+
//TSOBATCH EXEC PGM=IKJEFT01
//SYSEXEC  DD DSN=rexx-source-library,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SMPLIST  DD DSN=intermediate-dataset,DISP=SHR
//REPORT   DD DSN=final-output-dataset,DISP=SHR
//SYSTSIN  DD *
 EXECUTIL SEARCHDD(YES)
 SMPLIST
 SDATE(91200) EDATE(TODAY) OPT(APP)
/*
//


THE SMPLIST SOURCE

/* REXX */
SAY ' +---------------------------------------------+ '
SAY ' | SMPLIST UTILITY VER 3.2                     | '
SAY ' +---------------------------------------------+ '
PULL 'SDATE(' VAR1 ')'|'EDATE(' VAR2 ')'|'OPT(' VAR3 ')'
TODAY = DATE('J')
/* --------------------------------------------------------------- */
/* PARSE THE START DATE                                            */
/* --------------------------------------------------------------- */
IF DATATYPE(VAR1,N) ¬= 0 THEN
DO
 TEMP = VAR1
END
ELSE
DO
 TEMP_LENGTH = LENGTH(VAR1)
 IF SUBSTR(VAR1,1,5) = 'TODAY' THEN TEMP = TODAY
 IF TEMP_LENGTH > 5 THEN
 DO
  VAR1 = RIGHT(VAR1,TEMP_LENGTH-5)
  TEMP_LENGTH = LENGTH(VAR1)
  DELTA = RIGHT(VAR1,TEMP_LENGTH-1)
  OPERATION = SUBSTR(VAR1,1,1)
  IF OPERATION = '-' THEN TEMP = TEMP - DELTA
  ELSE
  DO
   SAY '>>> INVALID OPERATION IN SDATE - MUST BE MINUS'
   EXIT
  END
 END
END
 START_DATE = TEMP
 /* -------------------------------------------------------------- */
 /* PARSE THE END DATE                                             */
 /* -------------------------------------------------------------- */
IF DATATYPE(VAR2,N) ¬= 0 THEN
DO
 TEMP = VAR2
END
ELSE
DO
 TEMP_LENGTH = LENGTH(VAR2)
 IF SUBSTR(VAR2,1,5) = 'TODAY' THEN TEMP = TODAY
 IF TEMP_LENGTH > 5 THEN
 DO
  VAR2 = RIGHT(VAR2,TEMP_LENGTH-5)
  TEMP_LENGTH = TEMP_LENGTH - 5
  DELTA = RIGHT(VAR2,TEMP_LENGTH-1)
  OPERATION = SUBSTR(VAR2,1,1)
  IF OPERATION = '-' THEN TEMP = TEMP - DELTA
  ELSE
  DO
   SAY '>>> INVALID OPERATION IN EDATE - MUST BE MINUS'
   EXIT
  END
 END
END
 END_DATE = TEMP
 /* -------------------------------------------------------------- */
 /* CHECK THE OPTION INFORMATION                                   */
 /* -------------------------------------------------------------- */
 IF VAR3 ¬= 'REC' & VAR3 ¬= 'APP' & VAR3 ¬= 'ACC' THEN
 DO
  SAY '>>> OPTION MISSING OR INVALID - DEFAULTING TO APP'
  VAR3 = 'APP'
 END
 /* -------------------------------------------------------------- */
 /* READ THE SMPLIST INFORMATION FROM THE SMPLIST DDCARD           */
 /* -------------------------------------------------------------- */
"EXECIO * DISKR SMPLIST (STEM LINE. FINIS"
 /* -------------------------------------------------------------- */
 /* READ EACH LINE AND BUILD UP CANDIDATE LIST OF PTFS             */
 /* -------------------------------------------------------------- */
J = 1
DO I = 1 TO LINE.0
 IF INDEX(LINE.I,'TYPE') ¬= 0 & (INDEX(LINE.I,'= PTF') ¬= 0 | ,
                                 INDEX(LINE.I,'= FUNCTION') ¬= 0) THEN
  DO
   PARSE VAR LINE.I PTF_ID .
   CANDIDATE.J = PTF_ID
  END
 IF INDEX(LINE.I,'FMID') ¬= 0 THEN
  DO
   PARSE VAR LINE.I . . FMIDNAME .
   FMID_ID.J = FMIDNAME
  END
 IF INDEX(LINE.I,'INS  =') ¬= 0 & (VAR3 = 'APP' | VAR3 = 'ACC') THEN
  DO
   PARSE VAR LINE.I . . DATE_APP .
   DATE_APPLIED.J = TRUNC(DATE_APP * 1000)
   J = J + 1
  END
 IF INDEX(LINE.I,'DATE/TIME REC') ¬= 0 & VAR3 = 'REC' THEN
  DO
   PARSE VAR LINE.I . . . DATE_APP .
   DATE_APPLIED.J = TRUNC(DATE_APP * 1000)
   J = J + 1
  END
END
 /* -------------------------------------------------------------- */
 /* SELECT ACCEPTABLE PTFS FROM CANDIDATE LIST                     */
 /* -------------------------------------------------------------- */
K = 1
DO I = 1 TO J-1
 TESTDATE = DATE_APPLIED.I
 IF TESTDATE >= START_DATE & TESTDATE <= END_DATE THEN
  DO
   SELECTED.K = '  '|| CANDIDATE.I||'  /* '||FMID_ID.I DATE_APPLIED.I||' */'
   K = K + 1
  END
END
DO I = 1 TO K-1
 SAY SELECTED.I
END
SELECTED.0 = K-1
"EXECIO * DISKW REPORT (STEM SELECTED. FINIS"
EXIT


Dr A N Brooks
Systems Programmer
The Boots Company plc (UK)                               c The Boots Company plc

