Checking macro continuations in NCP


OVERVIEW

When generating an NCP (Network Control Program), continuation lines are
indicated by a character in column 72 as with any other macro expansion.
When the NCP is activated to VTAM however, VTAM checks for commas at the
end of each line to indicate when there are continuations.
Unfortunately, if a comma is missing, an error is generated by VTAM and
NCP doesn't activate.  Thus a very simple error can cause a large amount
of network down-time.

The following program reads the NCP generation deck and checks column 72
for a continuation character.  If there is a character in column 72, the
program will read from column 16 to the first blank character.  It will
then backspace itself by one to check if a comma is there.  If no comma
is found, it will read back to column 10 to ensure that the macro itself
has not been read (ie  if the macro is longer than five characters).  If
it appears that there is an error, the program will then TPUT the line
of code to the screen to enable the user to check if there is an error
and note it so that it can be fixed.  This code can be used for checking
any type of SYSGEN deck that uses both column 72 and commas to indicate
continuation lines.  The Assembler will pick up any errors with column
72 characters missing but it won't pick up the missing commas.  This
program, then, can save a lot of time and effort when performing an
NCPGEN.


PROGRAM REQUIREMENTS

The only requirements for this program are that the input be allocated
to a DD called INFILE and that the input dataset has a record length of
80 bytes.  Internally, the input needs to have the macro using column 10
and the continuation lines starting in column 16 (ie  basic Assembler
coding).  The program runs from TSO and as it uses TPUT it will not work
as a batch job.

CONTINUE AMODE 24                         DISPATCHED IN 24-BIT MODE
CONTINUE RMODE 24                         DISPATCHED IN 24-BIT MODE
CONTINUE START
         USING *,R15
         USING SP126,R13                  MAP OUT SUBPOOL 126
         BC    15,BEGIN
         DC C'&SYSDATE,&SYSTIME  CHECKING CONT. IN NCPS'
         CNOP  2,4
BEGIN    DS    0H
         STM   R14,R12,12(R13)
         DROP  R15
         BALR  R12,0                      POINT PC HERE
         USING *,R12
         GETMAIN RC,LV=SP126END-SP126,SP=126
         ST    R1,8(R13)                  FWD CHAIN
         ST    R13,4(R1)                  BWD CHAIN
         LR    R13,R1                     SUBPOOL BASE
****         PROCESS                                                  *
         OPEN  (INFILE)                   OPEN FILE FOR INPUT
GETREC   GET   INFILE,COL180
         CLI   COL72,X'40'                IS COL72 BLANK
         BE    GETREC                     YES
         LA    R5,COL1671                 LOAD ADDRESS OF COLS 16-71
LOOP     CLI   O(R5),X'40'                IS COL BLANK
         BE    CHECK                      CHECK PREV BYTE FOR COMMA
         LA    R5,1(R5)                   MOVE TO NEXT BYTE
         B     LOOP                       RELOOP
CHECK    LA    R6,1                       LOAD 1
         SR    R5,R6                      MOVE BACK ONE BYTE
         CLI   0(R5),X'6B'                IS BYTE A COMMA ?
         BE    GETREC                     YES
         LR    R7,R5                      STORE POINTER
         LA    R6,COL1015                 GET COL10 ADDRESS
MACRO    LA    R6,1(R6)                   GET NEXT COL
         CLI   0(R6),X'40'                IS COL BLANK
         BNE   MACRO                      CONTINUE
MACLEN   LA    R8,1
         SR    R6,R8
         LR    R8,R6                      STORE END OF MACRO
MLEN     LA    R6,1(R6)                   FIND START OF OPERAND
         CLI   0(R6),X'40'                STILL BLANK
         BE    MLEN
LENGTH   CR    R7,R8                      ARE BOTH THE SAME
         BNE   ERROR                      NO - BRANCH
         LR    R5,R6
         B     LOOP                       RECHECK
ERROR    CLI   SWITCH,X'FF'               HAS TPUT BEEN ISSUED
         BE    PUT                        YES
         TPUT  =C'CHECK THE FOLLOWING FOR POSSIBLE ERRORS:-',41
PUT      MVC   ERRLINE,COL180             NO
         TPUT  ERRLINE,80
         BNZ   ERRTN
         MVI   SWITCH,X'FF'               TPUT HAS BEEN ISSUED
         B     GETREC                     GET NEXT RECORD
****         CLOSE FILE AND END                                      *
OUT      CLOSE (INFILE)                   CLOSE FILE
         CLI   SWITCH,X'FF'               HAS TPUT BEEN ISSUED
         BE    FINISH                     YES
         TPUT  =C'NO STATEMENTS IN ERROR',22
FINISH   LR    R2,R13                     WHERE GOTTEN STORAGE
         L     R13,4(R13)                 PICK UP PREV RB'S SAVE
         FREEMAIN RC,SP=126,A=(R2),LV=SP126END-SP126
         ST    R3,16(R13)                 SET RETURN CODE
         LM    R14,R12,12(R13)            RESTORE CALLER'S ENVIRONMENT
         BCR   15,R14                     RET
         LTORG
****                 ERROR ROUTINE                                   *
ERRTN    TPUT  =C'YOU HAVE AN ERROR IN TPUT',25
         BC    15,OUT
****                 MAP INPUT DCB                                   *
INFILE   DCB   DSORG=PS,                                              X
               DDNAME=INFILE,                                         X
               EODAD=OUT,                                             X
               LRECL=80,                                              X
               MACRF=GM,                                              X
               RECFM=FB
****                 MAP SUBPOOL 126                                 *
SP126    DSECT
         DS    9D
SWITCH   DC    X'00'
ERRLINE  DS    CL80                       LINE OF POSSIBLE ERROR
COL180   DS    0CL80
COL19    DS    CL9
COL1015  DS    CL6
COL1671  DS    CL56
COL72    DS    CL1
COL7380  DS    CL8
SP126END EQU   *
         END


J A Coombs
Senior Systems Programmer
NRMA Data Processing Pty Ltd  (Australia)    â‚¬ NRMA 1987




