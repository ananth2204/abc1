Automated system initialization and shut-down

System initialization and shut-down involves a number of
commands to be issued by the console operators. Normally these
commands are to be issued in a certain sequence (eg VTAM
initialization has to be completed before CICS start-up). Most
large installations use tools like AOC which help to automate
operator functions. The following program explains how system
initialization and shut-down could be done using the console exit
IEAVMXIT.

The system initialization and shut-down sequence varies widely
with every installation depending on the products used. The
purpose of this exit routine is to explain how to code a
generalized console exit routine to handle initialization and shut-
down for any general environment. Normally a command has to
be issued when a certain message appears. Hence any general
initialization or shut-down program has to be table driven.

The program described contains three tables:

1      INITAB - contains all the messages to be processed during
      initialization and the commands to be issued.

2      SHUTAB - contains all the messages to be processed
      during shut-down and the commands.

3      MSGTAB - contains messages to be sent to users before
      shut-down.

The layout of each entry in the table is as follows:

o      Length - half-word containing length of the entry that
      follows.

o      Message length - half-word containing length of message to
      process.

o      Message - message text.

o      Command length - half-word containing length of command
      that follows.

o      Command - command text including replaceable fields.

The command entry is repeated if multiple commands are to be
issued in sequence when a certain message is to be processed.
The table is terminated by X'FFFF'.

The exit can be activated by the command 'K M,UEXIT=Y' in
COMMNDxx of SYS1.PARMLIB. When the system is IPLed, all
the required commands for complete system initialization are
issued by this exit. The exit can be de-activated by 'K
M,UEXIT=N'.

The system can be shut down by entering 'SHUTDOWN' on the
console. Since this is an invalid command, the message 'IEE305I
SHUTDOWN' is issued. The exit traps this message and sets a
flag to indicate that shut-down is in progress. All commands
required for normal shut-down are issued in sequence. Each of the
batch jobs running on the system is highlighted on the console.

Since many of the batch jobs may be using the database system, it
may be advisable to take appropriate action to terminate the batch
jobs before the database system is down ensuring the normal
shut-down of the database system.

Similarly, at the end all address spaces which have not been
terminated are displayed. The operator could take appropriate
action to terminate these address spaces. The exit could issue
these commands, but it may be better to have operator
intervention in such cases.

Before shut-down, the operator can send messages to all users by
entering 'SHUTMSG' on the console. The messages to be issued
are coded in MSGTAB.

The supplied program contains sample tables for INITAB,
SHUTAB, and MSGTAB. These tables should be modified by
each installation depending on individual requirements.

         TITLE 'IEAVMXIT INITIALIZATION AND SHUT-DOWN EXIT'
IEAVMXIT CSECT
IEAVMXIT AMODE 31                           31-BIT ADDRESSING MODE
IEAVMXIT RMODE ANY                          31-BIT RESIDENCE
         STM   R14,R12,12(R13)              SAVE REGS 14 - 12
         BALR  R12,R0                       ESTABLISH 1ST BASE REG
         USING *,R12,R10                    ADDRESSABILITY
         LA    R10,4095(R12)
         LA    R10,1(R10)                   R10 = R12 + 4K
         L     R5,0(R1)                     ESTABLISH ADDRESSABILITY
         USING CTXT,R5                      TO THE CTXT (CTXTPTR)
*****************************************************************
*   ACQUIRE DYNAMIC STORAGE FOR THE EXIT                        *
*****************************************************************
         GETMAIN RU,LV=DATAEND,SP=SPINPRVT,LOC=BELOW
         LR    R11,R1                       ADDRESS RETURNED IN REG1.
         USING DATAAREA,R11                 ADDRESSABILITY
         ST    R13,SAVEAREA+4               SET BACKWARD POINTER.
         LA    R15,SAVEAREA                 GET ADDRESS OF SAVE AREA
         ST    R15,8(R13)                   SET FORWARD POINTER.
         LR    R13,R15                      STANDARD SAVE AREA
*****************************************************************
*   DETERMINE WHICH MESSAGE IS TO BE PROCESSED.                 *
*****************************************************************
         L     R2,CTXTTXPJ                  POINTER TO TEXT
         USING CTXTATTR,R2                  COMM TASK EXIT MSG ATTR
         LA    R4,CTXTTMSG                  MESSAGE TEXT (LEN = 126
         USING MSGTEXT,R4                   MESSAGE TEXT MAPPING
         MVC   REPLYID(2),CTXTRPID          SAVE REP NO IF ONE
         L     R9,CTXTIWKP                  POINTER TO INST WORK AREA
         CLC   0(4,R9),SHUT                 IS SHUT-DOWN IN PROGRESS?
         BE    SHUT1                        THEN DO SHUT-DOWN
         CLC   MSGID(16),SHUTAB+4           SHUT-DOWN COMMAND ISSUED?
         BE    MSHUTDWN                     SHUT-DOWN SUBSYSTEMS
         CLC   MSGID(16),MSGTAB+4           MESSAGE FOR SHUT-DOWN?
         BE    MSHUTMSG                     SEND MESSAGES TO USERS
         LA    R4,MSGID                     ADDRESS OF MESSAGE
         USING MSGID,R4                     ADDRESSABILITY TO MESSAGE
*****************************************************************
*  HERE ISSUE SYSTEM INITIALIZATION COMMANDS                    *
*****************************************************************
INIT1    LA    R2,INITAB                    INITIALIZATION TABLE
ININEXT  CLC   0(2,R2),INITEND              END OF INITIALIZATION?
         BE    FINISHED                     END OF TABLE REACHED
         XR    R3,R3                        INITIALIZE LENGTH
         LH    R3,0(R2)                     LENGTH OF ONE ENTRY
         LA    R2,2(R2)                     POINT TO MESSAGE
         XR    R5,R5                        CLEAR MESSAGE LENGTH
         LH    R5,0(R2)                     LENGTH OF MESSAGE
         BCTR  R5,0                         REDUCE BY 1
         EX    R5,MSGCOMP                   COMPARE MESSAGE
         BE    INIMATCH                     YES MESSAGE MATCHED
         ALR   R2,R3                        POINT TO NEXT ENTRY
         B     ININEXT                      COMPARE NEXT ENTRY
INIMATCH LA    R5,3(R5)                     INCR LENGTH BY 3
         ALR   R2,R5                        POINT TO FIRST COMMAND
         LR    R6,R5                        SAVE USED LENGTH
NEXTICMD CR    R6,R3                        R6=R3?
         BE    FINISHED                     THEN OVER
         LH    R5,0(R2)                     LENGTH
         L     R7,MSTCONS                   MASTER CONSOLE
         MVC   MGCRETXT(80),0(R2)           MOVE COMMAND TO BUFFER
         CLC   2(5,R2),REPCMD               REPLY COMMAND
         BNE   SENDICMD                     SEND COMMAND
         MVC   REPNO,REPLYID                MOVE KEYWORD REPLY
SENDICMD LA    R8,MGCRETXT                  ADDRESS OF BUFFER
         MVC   MGCRE(MGCREL),MGCRE1         MGCRE CONTROL BLOCK
         MGCRE MF=(E,MGCRE),TEXT=(8),CONSID=(7)
         LA    R5,2(R5)                     COMMAND LENGTH
         ALR   R2,R5                        POSITION AT NEXT CMD
         AR    R6,R5                        INCR USED LENGTH
         MVC   USERAUTO,INITCMD             MOVE WTO LIST FORM
         LH    R7,MGCRETXT                  LENGTH OF COMMAND
         BCTR  R7,0                         REDUCE BY 1
         EX    R7,MOVECMD                   COMPARE MESSAGE
         WTO   MF=(E,USERAUTO)              ISSUE MESSAGE
         B     NEXTICMD
*****************************************************************
*   HERE SHUT-DOWN MESSAGE ISSUED                               *
*****************************************************************
MSHUTMSG OI    CTXTRFB2,CTXTRHCO            FORCE HARDCOPY ONLY
         MVC   USERAUTO,SHUTMSG             MOVE WTO LIST FORM
         WTO   MF=(E,USERAUTO)              ISSUE MESSAGE
         LA    R6,MSGTAB                    ADDRESS OF TABLE
         LA    R6,2(,R6)                    MESSAGE ADDRESS
         XR    R2,R2                        CLEAR LENGTH
         LH    R2,0(R6)                     MESSAGE LENGTH
         LA    R6,2(R6)                     INCREMENT BY 2
         ALR   R6,R2                        POSITION AT FIRST CMD
         L     R3,MSTCONS                   MASTER CONSOLE
NEXTMSG  CLC   0(2,R6),MSGEND               END OF TABLE REACHED?
         BE    FINISHED                     ALL MESSAGES DONE
         MVC   MGCRE(MGCREL),MGCRE1         MGCRE CONTROL BLOCK
         MGCRE MF=(E,MGCRE),TEXT=(6),CONSID=(3)
         LH    R2,0(R6)                     MESSAGE LENGTH
         LA    R6,2(R6)                     INCREMENT BY 2
         ALR   R6,R2                        POSITION AT NEXT CMD
         B     NEXTMSG                      ISSUE NEXT MESSAGE
*****************************************************************
*   HERE SHUT-DOWN COMMAND ISSUED                               *
*****************************************************************
MSHUTDWN OI    CTXTRFB2,CTXTRHCO            FORCE HARDCOPY ONLY
         MVC   0(4,R9),SHUT                 SET SHUT-DOWN FLAG
         XR    R2,R2                        INITIALIZE REPLY ID
         STH   R2,4(R9)                     SAVE IN WORKAREA
*****************************************************************
*   SHUT-DOWN IN PROGRESS                                       *
*****************************************************************
SHUT1    LA    R2,SHUTAB                    SHUT-DOWN TABLE
SHNEXT   CLC   0(2,R2),SHUTEND              END OF INITIALIZATION?
         BE    FINISHED                     END OF TABLE REACHED
         XR    R3,R3                        INITIALIZE LENGTH
         LH    R3,0(R2)                     LENGTH OF ONE ENTRY
         LA    R2,2(R2)                     POINT TO MESSAGE
         XR    R5,R5                        CLEAR MESSAGE LENGTH
         LH    R5,0(R2)                     LENGTH OF MESSAGE
         BCTR  R5,0                         REDUCE BY 1
         EX    R5,MSGCOMP                   COMPARE MESSAGE
         BE    SHMATCH                      YES MESSAGE MATCHED
         ALR   R2,R3                        POINT TO NEXT ENTRY
         B     SHNEXT                       COMPARE NEXT ENTRY
SHMATCH  LA    R5,3(R5)                     INCR LENGTH BY 3
         ALR   R2,R5                        POINT TO FIRST COMMAND
         LR    R6,R5                        SAVE USED LENGTH
NEXTSCMD CR    R6,R3                        R6=R3?
         BE    FINISHED                     THEN OVER
         LH    R5,0(R2)                     LENGTH
         L     R7,MSTCONS                   MASTER CONSOLE
         MVC   MGCRETXT(80),0(R2)           MOVE COMMAND TO BUFFER
         CLC   2(5,R2),REPCMD               REPLY COMMAND?
         BNE   SENDSCMD                     SEND SHUT-DOWN COMMAND
         MVC   REPNO,REPLYID                MOVE KEYWORD REPLY
         CLC   MGCRETXT(2),=H'8'            LENGTH = 8?
         BNE   SENDSCMD                     ISSUE SHUT-DOWN CMD
         XR    R2,R2                        CLEAR REG
         LH    R2,4(R9)                     GET LAST MESSAGE ID
         LA    R2,1(,R2)                    INCREMENT BY 1
         CH    R2,REPMAX                    EXCEEDS MAX LIMIT?
         BH    FINISHED                     ALL REPLY ID'S OVER
         STH   2,4(R9)                      SAVE LAST MSGID
         CVD   R2,DWORD                     CONVERT TO PACKED FORM
         UNPK  REPN0(2),DWORD+6(2)          DISPLAY FORMAT
         OI    REPNO+1,X'F0'                PROPER SIGN
SENDSCMD LA    R8,MGCRETXT                  ADDRESS OF BUFFER
         MVC   MGCRE(MGCREL),MGCRE1         MGCRE CONTROL BLOCK
         CLC   MGCRETXT(12),DBSTOP          IS IT DB STOP COMMAND?
         BE    BATDSP                       IF NOT SKIP NEXT INSTR
         CLC   MGCRETXT(10),ADISP           ASPACE DISPLAY COMMAND?
         BNE   ISSUECMD                     IF NOT SKIP NEXT INSTR
         MVI   DSPFLAG,ALL                  FLAG TO DISPLAY BATCH JOB
         BAL   14,ASPDISP                   DISPLAY BATCH JOBS
         B     FINISHED                     OVER
BATDSP   MVI   DSPFLAG,BATCH                FLAG TO DISPLAY BATCH JOB
         BAL   14,ASPDISP                   DISPLAY BATCH JOBS
ISSUECMD MGCRE MF=(E,MGCRE),TEXT=(8),CONSID=(7)
         LA    R5,2(R5)                     COMMAND LENGTH
         ALR   R2,R5                        POSITION AT NEXT CMD
         AR    R6,R5                        INCR USED LENGTH
         MVC   USERAUTO,SHUTCMD             MOVE WTO LIST FORM
         LH    R7,MGCRETXT                  LENGTH OF COMMAND
         BCTR  R7,0                         REDUCE BY 1
         EX    R7,MOVECMD                   COMPARE MESSAGE
         WTO   MF=(E,USERAUTO)              ISSUE MESSAGE
         B     NEXTSCMD                     NEXT SHUT-DOWN COMMAND
*******************************************************************
*  SUBROUTINE TO DISPLAY ALL ADDRESS SPACES RUNNING IN THE SYSTEM *
*  EXCEPT THE ONES WHICH ARE NOT TO BE STOPPED. IF DSPFLAG IS     *
*  SET TO BATCH ONLY THE BATCH JOBS RUNNING IN THE SYSTEM ARE     *
*  DISPLAYED .                                                    *
*******************************************************************
ASPDISP  STM   R14,R12,12(R13)              SAVE REGS
         L     R5,16                        CVT ADDRESS
         USING CVT,R5                       ADDRESS CVT
         L     R6,CVTASVT                   ASVT ADDRESS
         DROP  R5                           RELEASE R5
         USING ASVT,R6                      ADDRESS ASVT
         L     R5,ASVTMAXU                  MAX ENTRIES IN ASVT
         LA    R6,ASVTENTY-4                FISR ASCB-4
         DROP  R6                           RELEASE R6
NEXTASP  LTR   R5,R5                        MAXUSER = 0 ?
         BZ    ASPOVER                      ASVT LOOK-UP ENDED
         BCTR  R5,0                         REDUCE COUNT
         LA    R6,4(R6)                     NEXT ASVT ENTRY
         USING ASCB,R7                      ADDRESSABILITY TO ASCB
         L     R7,0(R6)                     R7=ASCB ADDRESS
         TM    0(R6),X'80'                  AVAILABLE ASID?
         BO    NEXTASP                      PROCESS NEXT ASP
         CLC   ASCBASCB,ASCB                IS IT ASCB?
         BNE   NEXTASP                      IF NOT PROCESS NEXT ASP
         L     R2,ASCBJBNI
         LTR   R2,R2                        IS IT BATCH JOB?
         BNZ   BATJOB                       THEN BATCH JOB
         CLI   DSPFLAG,BATCH                BATCH DISPLAY FLAG?
         BE    NEXTASP                      THEN SKIP STC & TSO
         L     R2,ASCBJBNS                  TSO OR STC
         DROP  R7
         LA    R7,NOSTPTBS                  NON-STOP TABLE
NEXTASP1 CLC   0(8,R7),0(R2)                JOB NON-STOPPABLE?
         BE    NEXTASP                      THEN SKIP IT
         LA    R7,8(,R7)                    POINT TO NEXT
         CLC   0(8,R7),NOSTPTBE             END OF TABLE?
         BE    *+8                          DISPLAY IT
         B     NEXTASP1                     CHECK NEXT TABLE ENTRY
         MVC   USERAUTO,MASPACE             MOVE MESSAGE
         MVC   USERAUTO+26(8),0(R2)         MOVE JOB NAME
         B     WTO1                         DISPLAY CONSOLE MESSAGE
BATJOB   MVC   USERAUTO,MBATCH              MOVE MESSAGE
         MVC   USERAUTO+24(8),0(R2)         MOVE JOB NAME
WTO1     WTO   MF=(E,USERAUTO)              ISSUE MESSAGE
         B     NEXTASP                      PROCESS NEXT ASID
ASPOVER  LM    R14,R12,12(R13)              RESTORE REGS
         BR    R14                          ALL ASPACES OVER
*****************************************************************
*   RETURN FROM THE EXIT .                                      *
*****************************************************************
FINISHED L     R13,4(R13)                   RESTORE REGISTER 13.
         FREEMAIN RU,LV=DATAEND,A=(11),SP=SPINPRVT
         LM    R14,R12,12(R13)              RESTORE REGS 14 - 12
         BR    R14                          RETURN TO CALLER.
*****************************************************************
*   CONSTANTS                                                   *
*****************************************************************
MSGCOMP  CLC   2(1,R2),MSGID                COMPARE MESSAGE
MOVECMD  MVC   USERAUTO+16(1),MGCRETXT+2    MOVE COMMAND
REPMAX   DC    H'20'                        MAX REPLY COUNT
MSTCONS  DC    F'01'                        MASTER CONSOLE
SHUT     DC    CL4'SHUT'                    SHUT-DOWN
REPCMD   DC    CL5'REPLY'                   REPLY COMMAND
INITAB   DS    0F                           INITIALIZATION TABLE
IFB010D  DC    H'22'
         DC    H'08',CL08'IFB010D '         IPL REASON
         DC    H'10',CL10'REPLY XX,U'
$HASP420 DC    H'22'
         DC    H'08',CL08'$HASP420'         JES2 DOWN .. IPL REQUIRED
         DC    H'10',CL10'REPLY XX,N'
$HASP426 DC    H'22'
         DC    H'08',CL08'$HASP426'         JES2 INIT OPTION
         DC    H'10',CL10'REPLY XX,U'
$HASP400 DC    H'14'
         DC    H'08',CL08'$HASP400'         ENTER OPTIONS
         DC    H'02',CL02'$S'
$HASP492 DC    H'68'
         DC    H'08',CL08'$HASP492'         JES2 INITIALIZATION OVER
         DC    H'06',CL06'$SPRT1'           START PRINTER
         DC    H'10',CL10'START VTAM'       START VTAM
         DC    H'22',CL22'START RMF.RMF,,,MEMBER(XA) '  START RMF
         DC    H'12',CL12'START DFHSM '     START DFHSM
ERB306D  DC    H'24'
         DC    H'08',CL08'ERB306D '         RMF INIT OPTION
         DC    H'12',CL12'REPLY XX,GO '
ERB100I  DC    H'34'
         DC    H'10',CL10'ERB100I ZZ'       RMF INITIALIZED
         DC    H'20',CL20'MODIFY RMF.RMF,S III' START RMF III
IST020I  DC    H'46'
         DC    H'08',CL08'IST020I '         VTAM INITIALIZED
         DC    H'10',CL10'@START DB2'       START DB2
         DC    H'10',CL10'START TSO '       START TSO
         DC    H'10',CL10'START CNM '       START NETVIEW
DSN9022I DC    H'58'
         DC    H'40',CL40'DSN9022I @ DSNYASCP ''@START DB2'' NORMAL '
*                                           DB2 INITIALIZED
         DC    H'14',CL14'START CICSTST'    START TEST CICS
IKT005I  DC    H'44'
         DC    H'08',CL08'IKT005I '         TSO INITIALIZED
         DC    H'08',CL08'$SLOGON1'         START JES/VTAM INTERFACE
         DC    H'10',CL10'$SLNE1-10'        START LINES
         DC    H'10',CL10'START JSX '       START JES/328X
INITEND  DC    X'FFFF'
**********************************************************************
*        SHUT-DOWN COMMAND TABLE                                     *
**********************************************************************
SHUTAB   DC    H'48'
         DC    H'16',CL16'IEE305I SHUTDOWN' SHUT-DOWN COMMAND
         DC    H'06',CL06'$PIA-9'           STOP INITIATORS
         DC    H'08',CL08'STOP JSX'         STOP JES/328X
         DC    H'10',CL10'STOP DFHSM'       STOP DFHSM
EJSX     DC    H'54'
         DC    H'12',CL12'$HASP395 JSX'     JES 328X ENDED
         DC    H'10',CL10'$PLNE1-10 '       DRAIN LINES
         DC    H'08',CL08'$PLOGON1'         STOP JES/VTAM INTERFACE
         DC    H'06',CL06'$PPRT1'           STOP PRINTER
         DC    H'08',CL08'STOP RMF'         STOP RMF
NJSX     DC    H'54'
         DC    H'12',CL12'IEE341I JSX '     JES 328X NOT ACTIVE
         DC    H'10',CL10'$PLNE1-10 '       STOP LINES
         DC    H'08',CL08'$PLOGON1'         STOP JES/VTAM INTERFACE
         DC    H'06',CL06'$PPRT1'           STOP PRINTER
         DC    H'08',CL08'STOP RMF'         STOP RMF
EDFHSM   DC    H'40'
         DC    H'08',CL08'ARC0002I'         DFHSM ENDED
         DC    H'28',CL28'F CICSTST,CEMT P SHUT IMMED'
*                                           SHUT-DOWN CICS
NDFHSM   DC    H'46'
         DC    H'14',CL14'IEE341I DFHSM'    DFHSM NOT RUNNING
         DC    H'28',CL28'F CICSTST,CEMT P SHUT IMMED'
*                                           SHUT-DOWN CICS
ECICS    DC    H'28'
         DC    H'16',CL16'$HASP395 CICSTST' CICS ENDED
         DC    H'08',CL08'STOP TSO'         STOP TSO
NCICS    DC    H'28'
         DC    H'16',CL16'IEE341I CICSTST'  CICS NOT RUNNING
         DC    H'08',CL08'STOP TSO'         STOP TSO
ETSO     DC    H'26'
         DC    H'12',CL12'$HASP395 TSO'     TSO ENDED
DBSTOP   DC    H'10',CL10'@STOP DB2'        STOP DB2
NTSO     DC    H'26'
         DC    H'12',CL12'IEE341I TSO'      TSO NOT UP
         DC    H'10',CL10'@STOP DB2 '       STOP DB2
EDB2     DC    H'50'
         DC    H'38',CL38'DSN9022I @ DSNYASCP ''@STOP DB2'' NORMAL'
*                                           DB2 ENDED
         DC    H'08',CL08'REPLY XX'         ISSUE REPLY COMMAND
NDB2     DC    H'52'                        DB2 NOT RUNNING
         DC    H'40',CL40'DSN3106I @ DSN3EC0X  SUBSYSTEM STOPPED. '
*                                           DB2 NOT RUNNING
         DC    H'08',CL08'REPLY XX'         ISSUE REPLY COMMAND
DSI803A  DC    H'32'
         DC    H'08',CL08'DSI803A '         REPLY ID TO NETVIEW FOUND
         DC    H'20',CL20'REPLY XX,CLOSE IMMED'
IKT010D  DC    H'24'
         DC    H'08',CL08'IKT010D '         REPLY ID TO TSO
         DC    H'12',CL12'REPLY XX,SIC'     REPLY XX,SIC
IKT016D  DC    H'24'
         DC    H'08',CL08'IKT016D '         REPLY ID TO TSO FOUND
         DC    H'12',CL12'REPLY XX,SIC'     REPLY XX,SIC
IEE701I  DC    H'24'
         DC    H'08',CL08'IEE701I '         NO REPLY OUTSTANDING
         DC    H'12',CL12'Z NET,QUICK '     SHUT-DOWN VTAM
EVTAM    DC    H'26'
         DC    H'14',CL14'$HASP395 VTAM '   VTAM ENDED
ADISP    DC    H'08',CL08'ASPDISP '         DISPLAY ADDRESS SPACES
IEE704I  DC    H'20'
         DC    H'08',CL08'IEE704I '         REPLY NOT VALID
         DC    H'08',CL08'REPLY XX'         ISSUE REPLY ID+1
ECNM     DC    H'24'
         DC    H'12',CL12'$HASP395 CNM'     NETVIEW ENDED
         DC    H'08',CL08'REPLY XX'         ISSUE REPLY ID+1
$HASP099 DC    H'18'
         DC    H'08',CL08'$HASP099'         ALL FUNCTIONS COMPLETE
         DC    H'06',CL06'$PJES2'           STOP JES2
$HASP085 DC    H'18'
         DC    H'08',CL08'$HASP085'         JES2 ENDED
         DC    H'06',CL06'Z EOD '           END OF DAY
SHUTEND  DC    X'FFFF'                      END OF TABLE
*****************************************************************
*        SHUT-DOWN MESSAGE TABLE                                *
*****************************************************************
MSGTAB   DC    H'142'
         DC    H'16',CL16'IEE305I SHUTMSG '
         DC    H'50',CL50'SE ''SYSTEM SHUTDOWN IN 3 MIN..LOGOFF IMMEDIAX
               TELY'''
         DC    H'70',CL70'F CICSTST,CMSG ''CICS SHUTDOWN IN 3 MIN..LOGOX
               FF'',ROUTE=ALL,SEND'
MSGEND   DC    X'FFFF'
*****************************************************************
* TABLE OF ADDRESS SPACES NOT TO BE STOPPED                     *
*****************************************************************
NOSTPTBS DC    CL8'*MASTER*'
         DC    CL8'SYSLOG'
         DC    CL8'PCAUTH'
         DC    CL8'RASP'
         DC    CL8'TRACE'
         DC    CL8'XCFAS'
         DC    CL8'GRS'
         DC    CL8'SMXC'
         DC    CL8'SYSBMAS'
         DC    CL8'DUMPSRV'
         DC    CL8'CONSOLE'
         DC    CL8'ALLOCAS'
         DC    CL8'MMS'
         DC    CL8'SMF'
         DC    CL8'LLA'
         DC    CL8'VLF'
         DC    CL8'IOSAS'
         DC    CL8'SMS'
         DC    CL8'JES2'
         DC    CL8'CATALOG'
         DC    CL8'INIT'
NOSTPTBE DC    8X'FF'
*****************************************************************
* END OF NON-STOPPABLE ADDRESS SPACES                           *
*****************************************************************
MGCRE1   MGCRE MF=L
MGCREL   EQU   *-MGCRE1
INITCMD  WTO   'INITMSG                                              ',X
               ROUTCDE=(02),DESC=(4),MF=L
LWTOLIST EQU   *-INITCMD
SHUTCMD  WTO   'SHUTMSG                                              ',X
               ROUTCDE=(02),DESC=(4),MF=L
MBATCH   WTO   'SHUTMSG BATCH JOB   XXXXXXXX  STILL RUNNING          ',X
               ROUTCDE=(02),DESC=(2),MF=L
MASPACE  WTO   'SHUTMSG ADDRESS SPACE XXXXXXXX  STILL ACTIVE         ',X
               ROUTCDE=(02),DESC=(2),MF=L
SHUTMSG  WTO   'SHUTMSG SHUTDOWN MESSAGES SENT TO USERS              ',X
               ROUTCDE=(02),DESC=(4),MF=L
*****************************************************************
*   STORAGE DEFINITIONS.                                        *
*****************************************************************
DATAAREA DSECT
         DS    0D
SAVEAREA DS    18F                          SAVE AREA
USERAUTO DS    CL(LWTOLIST)                 WTO WORK AREA
MGCRE    DS    CL(MGCREL)                   MGCRE WORK AREA
DSPFLAG  DS    CL1                          BATCH DISPLAY FLAG
DWORD    DS    D                            DOUBLE WORD WORK AREA
REPLYID  DS    CL2                          REPLY ID IN MESSAGE
MGCRETXT DS    0CL80                        COMMAND WORK AREA
         DS    H                            COMMAND LENGTH
         DS    CL6                          COMMAND VERB
REPNO    DS    CL2                          REPLY NO
         DS    CL70                         REST OF COMMAND
DATAEND  EQU   *-DATAAREA
*****************************************************************
*   MAPPING OF THE MESSAGE TEXT.                                *
*****************************************************************
MSGTEXT  DSECT
MSGID    DS    CL80                         MESSAGE ID
         IEZVX100
         CVT   DSECT=YES                    CVT DSECT
         IHAASCB                            ASCB DSECT
         IHAASVT                            ASVT DSECT
SPINPRVT EQU   230                          SUB POOL 230
BATCH    EQU   C'B'                         BATCH DISPLAY INDICATOR
ALL      EQU   C'A'                         ALL DISPLAY INDICATOR
*****************************************************************
*   REGISTER ASSIGNMENTS.                                       *
*****************************************************************
R0       EQU   0
R1       EQU   1
R2       EQU   2                            CTXTATTR
R3       EQU   3                            CTXTDESC
R4       EQU   4                            MSGTEXT
R5       EQU   5                            CTXT (CTXTPTR)
R6       EQU   6                            BAL GETIME
R7       EQU   7                            TIME HHMMSSTH FROM R0
R8       EQU   8                            DATE 0CYYDDDF FROM R1
R9       EQU   9
R10      EQU   10                           IEAVMXIT - 2ND BASE REG
R11      EQU   11                           DATAAREA
R12      EQU   12                           IEAVMXIT - 1ST BASE REG
R13      EQU   13
R14      EQU   14
R15      EQU   15
         END


M V George
Systems Programmer (Qatar)                                                   c X

