Cache statistics at the dataset level


DSNLEVEL Program Source:

R0       EQU   0
R1       EQU   1
         etc
R15      EQU   15
DSNLEVEL CSECT
         USING *,R10,R11           ESTABLISH ADDRESSABILITY
         STM   R14,R12,12(R13)     SAVE3 REGISTERS
         LR    R10,R15             SET FIRST BASE REGISTER
         LA    R11,2048(R10)       SET SECOND BASE REGISTER
         LA    R11,2048(R11)       AND INCREMENT TO PROPER VALUE
         LR    R12,R13             STORE PREVIOUS SA ADDRESS
         LA    R13,SAVE3           LOAD ADDRESS OF THIS SAVE3 AREA
         ST    R12,SAVE3+4         CHAIN BACKWARDS
         ST    R13,8(R12)          CHAIN FORWARD
         LR    R8,R1
GETMATD  GETMAIN R,LV=40000
         LR    R9,R1 (R9) = ADDR OF THE ALLOCATED VIRTUAL STORAGE AREA
         LTR   15,15
         BZ    OKGETMAT
         LA    R15,4
         B     FINI
OKGETMAT EQU   *
         ST    R9,R9SAVE
         OPEN  (PRINTDCB,(OUTPUT))
         OPEN  (OUTPUDCB,(OUTPUT))
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(16),=C'DSNLEVEL STARTED'
         PUT   PRINTDCB,PRINT
         L     R8,0(R8)       (R8) = FULLWORD
         LH    R12,0(R8)      (R12) = LENGTH OF THE PARM FIELD
         LA    R1,0
         CR    R1,R12         TEST IF LENGTH = 0
         BNE   TESLE40        LENGTH NE 0
         LA    R1,100
         ST    R1,LINENUM
         B     DISPLNUM
TESLE40 EQU    *
         LA    R1,4
         CR    R12,R1         TEST IF LENGTH OF THE PARM FIELD GT 4
         BNH   FIADPAFI       LENGTH LE 4 - O.K.
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(36),=C'SORRY, MAXIMUM 9999 LINES ALLOWED.  '
         MVC   PRINT+37(36),=C'TO PRINT MORE, SPECIFY PARM=(ALL)   '
         PUT   PRINTDCB,PRINT
         MVC   PRINT+1(36),=C'STANDARD ACTION TAKEN: 100 LINES WIL'
         MVC   PRINT+37(36),=C'L BE DISPLAYED.                     '
         PUT   PRINTDCB,PRINT
         LA    R1,100
         ST    R1,LINENUM
         B     DISPLNUM
FIADPAFI EQU   *
         LA    R4,2(R8)       (R4) = ADDRESS OF THE PARM FIELD
         CLC   0(3,R4),=C'ALL'
         BNE   NUMBEROK
         XR    R1,R1
         IC    R1,=X'FF'
         SLL   R1,24
         ST    R1,LINENUM
         B     DISPLNUM
NUMBEROK EQU   *  FIND THE PARAMETER LIST IN THE EXEC STATEMENT
         LA    R2,LINENUM+3   (R2)  = ADDRESS OF THE LINENUM
*                             (R4)  = ADDRESS OF THE PARM FIELD
*                             (R12) = LENGTH OF THE PARM FIELD
         LR    R5,R12         (R5)  = LENGTH OF THE PARM FIELD
         AR    R4,R12         (R5)  = LENGTH OF THE PARM FIELD
         S     R4,=F'1'
LOOPLINE EQU   *
         MVC   0(1,R2),0(R4)  MOVE ONE CHARACTER
         LA    R1,1
         SR    R2,R1
         SR    R4,R1
         BCT   R5,LOOPLINE
         XR    R1,R1
         ST    R1,PACKFIEL
         PACK  PACKSECO(4),LINENUM(4)
         L     R2,PACKSECO
         XR    R3,R3
         IC    R3,=X'CC'
         SLL   R3,24
         SRL   R2,4
         SLDL  R2,4
         ST    R2,PACKSECO
         CVB   R1,PACKFIEL
         ST    R1,LINENUM
DISPLNUM EQU   *
         LA    R7,0           (R7) = RETURN CODE
         BAL   R8,BLOCKPAG    WRITE HEADER
         OPEN  (SORTLDCB,(OUTPUT))
         LA    R1,0
         ST    R1,R426TOTA
         ST    R1,INICFIRS    SET INDICATOR FOR THE FIRST RECORD
         OPEN  (SMFREDCB,(INPUT))
         USING SMF42RCL,R9
GETSMFRE EQU   *
         GET   SMFREDCB,SMF42RCL
         CLI   SMF42RTY,X'2A' TEST IF RECORD TYPE 42
         BE    OKRECTYP
         B     NOTSMF42
OKRECTYP EQU   *  CHECK IF SUBTYPE 6; IF NOT ---> DO NOT PROCESS
         LH    R1,SMF42STY
         LA    R3,6
         CR    R3,R1
         BE    PROCESS
         B     NOTSMF42
PROCESS  EQU   *
         MVI   SORTPRIN,C' '
         MVC   SORTPRIN+1(L'SORTPRIN-1),SORTPRIN
         L     R3,R426TOTA
         A     R3,=F'1'       INCREASE COUNTER
         ST    R3,R426TOTA
         L     R3,INICFIRS
         XR    R1,R1
         CR    R1,R3
         BNE   NOTFIRST
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(35),=C'FIRST SMF RECORD MOVED INTO THE SMF'
         MVC   PRINT+37(10),=C'BUFFER ON:'
         MVC   SMFDATE(4),SMF42DTE
         CALL  SUYYDDDF,(SMFDATE,STAMP),VL
         MVC   PRINT+48(12),STAMP
         MVC   FIRSTDAT(12),STAMP
         MVC   TIME(4),SMF42TME
         CALL  SUTIME,(TIME,TIMESTAM),VL
         MVI   HH+2,C'H'
         MVI   MM+2,C'M'
         MVI   SS+2,C'S'
         MVC   PRINT+62(9),TIMESTAM
         MVC   FIRSTTIM(9),TIMESTAM
         PUT   PRINTDCB,PRINT
         XR    R1,R1
         LA    R1,1
         ST    R1,INICFIRS     SET INDICATOR FOR THE FIRST RECORD
NOTFIRST EQU   *
         MVC   SMFDATE(4),SMF42DTE
         LR    R3,R9           (R3) = ADDRESS OF BEGIN OF THE RECORD
         LA    R1,36
         AR    R3,R1           (R3) = ADDRESS OF SMF42JHO
         USING SMF42JHO,R3
         XR    R12,R12
         LH    R12,SMF42JHN    (R12) = NUMBER OF JOB HEADER SECTIONS
         XR    R4,R4
         XR    R1,R1
         LH    R1,SMF42JHL     (R1) = LENGTH OF JOB HEADER SECTION
         LA    R4,0
         CR    R1,R4           LENGTH OF JOB HEADER SECTION = 0 ?
         BE    GETSMFRE  YES, NO JOB HEADER SECTS, IGNORE THIS RECORD
         LA    R4,1
         CR    R12,R4
         BE    ONJHSECT        ONE JOB HEADER SECTION
         LR    R1,R12
         BAL   R8,CONVEBOX
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(14),=C'SMF42JHN=     '
         MVC   PRINT+10(8),RESULT+2
         MVC   PRINT+20(20),=C'<<<<<<<<<<<<<<'
         PUT   PRINTDCB,PRINT
ONJHSECT EQU   *
         LR    R4,R9           (R4) = ADDRESS OF BEGIN OF THE RECORD
         L     R1,SMF42JHO     (R1) = OFFSET TO FIRST JOB HEADER SECT
         AR    R4,R1           (R4) = ADDRESS OF JOB HEADER SECTION
         USING S42JDJNM,R4     EST. JOB HEADER SECTION ADDRESSABILITY
JOBHEABE EQU   *               START NEXT JOB HEADER SECTION
         CLI   S42JDCOD,X'01'  TEST IF INTERVAL RECORD ?
         BE    TES#JHSE        YES, IGNORE THIS JOB HEADER SECTION
         L     R1,S42JDDSO     (R1) = OFFSET TO FIRST DATASET HEADER
         XR    R7,R7
         CR    R1,R7           OFFSET TO 1ST DS HEADER SECTION = 0?
         BE    TES#JHSE  YES, NO DS HEADER SECTION FOR THIS JOBH SECT
         XR    R1,R1
         LH    R1,S42JDDSL     (R1) = LENGTH OF FIRST DATASET HEADER
         XR    R7,R7
         CR    R1,R7           LENGTH OF 1ST DS HEADER SECTION = 0?
         BE    TES#JHSE  YES, NO DS HEADER SECTION FOR THIS JOBH SECT
         XR    R1,R1
         LH    R1,S42JDIOL     (R1) = LENGTH OF DATASET I/O SECTION
         XR    R7,R7
         CR    R1,R7           LENGTH OF DS I/O SECTION = 0?
         BE    NOTPUTRE  YES, NO DS I/O SECTION FOR THIS DATASET
         L     R1,S42JDDSO     (R1) = OFFSET TO FIRST DATASET HEADER
STARTDSH EQU   *               START DATASET HEADER
         LR    R5,R9           (R5) = ADDRESS OF BEGIN OF THE RECORD
         AR    R5,R1           (R5) = FIRST DATASET HEADER
         USING S42DSNXT,R5     EST DATASET HEADER SECTION ADDRESS
         MVC   DSNAME(44),S42DSN   MOVE DATASET NAME
         MVC   VOLSER(6),S42DSVOL  MOVE VOLSER
         XR    R7,R7           (R7) = DATASET TYPE
         IC    R7,S42DSTYP
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   DSTYPE(5),RESULT+5
         LA    R1,0
         CR    R7,R1
         BNE   NOTOTHER
         MVC   DSTYPE(5),=C'OTHER'
         MVC   PRINT+24(5),DSTYPE
         B     ENDDSTYP
NOTOTHER EQU   *
         LA    R1,1
         CR    R7,R1
         BNE   NOTPHYSI
         MVC   DSTYPE(5),=C'PS   '   PHYSICAL SEQUENTIAL
         B     ENDDSTYP
NOTPHYSI EQU   *
         LA    R1,2
         CR    R7,R1
         BNE   NOTPDS
         MVC   DSTYPE(5),=C'PDS  '
         B     ENDDSTYP
NOTPDS   EQU   *
         LA    R1,3
         CR    R7,R1
         BNE   NOTPDSE
         MVC   DSTYPE(5),=C'PDSE '
         B     ENDDSTYP
NOTPDSE  EQU   *
         LA    R1,4
         CR    R7,R1
         BNE   NOTDA
         MVC   DSTYPE(5),=C'DA   '
         B     ENDDSTYP
NOTDA    EQU   *
         LA    R1,5
         CR    R7,R1
         BNE   NOTISAM
         MVC   DSTYPE(5),=C'ISAM '
         B     ENDDSTYP
NOTISAM  EQU   *
         LA    R1,6
         CR    R7,R1
         BNE   NOTEXCP
         MVC   DSTYPE(5),=C'EXCP '
         B     ENDDSTYP
NOTEXCP  EQU   *
         LA    R1,7
         CR    R7,R1
         BNE   NOTEXDS
         MVC   DSTYPE(5),=C'EXDS '   EXTENDED SEQUENTIAL DATASET
         B     ENDDSTYP
NOTEXDS  EQU   *
         LA    R1,16
         CR    R7,R1
         BNE   NOTKSDSD
         MVC   DSTYPE(5),=C'KSDSD'   KSDS DATA COMPONENT
         B     ENDDSTYP
NOTKSDSD EQU   *
         LA    R1,17
         CR    R7,R1
         BNE   NOTKSDSI
         MVC   DSTYPE(5),=C'KSDSI'   KSDS INDEX COMPONENT
         B     ENDDSTYP
NOTKSDSI EQU   *
         LA    R1,18
         CR    R7,R1
         BNE   NOTVRRDD
         MVC   DSTYPE(5),=C'VRRDD'   VARIABLE RRDS DATA COMPONENT
         B     ENDDSTYP
NOTVRRDD EQU   *
         LA    R1,19
         CR    R7,R1
         BNE   NOTVRRDI
         MVC   DSTYPE(5),=C'VRRDI'   VARIABLE RRDS INDEX COMPONENT
         B     ENDDSTYP
NOTVRRDI EQU   *
         LA    R1,20
         CR    R7,R1
         BNE   NOTFLRRD
         MVC   DSTYPE(5),=C'FLRRD'   FIXED LENGTH RRDS
         B     ENDDSTYP
NOTFLRRD EQU   *
         LA    R1,21
         CR    R7,R1
         BNE   NOTLINEA
         MVC   DSTYPE(5),=C'LINEA'   LINEAR DATASET
         B     ENDDSTYP
NOTLINEA EQU   *
         LA    R1,22
         CR    R7,R1
         BNE   ENDDSTYP
         MVC   DSTYPE(5),=C'ESDS '
ENDDSTYP EQU   *
         LR    R8,R9           (R8) = ADDRESS OF BEGIN OF THE RECORD
         L     R6,S42DSIOO     (R6) = OFFSET TO DATASET I/O STATISTI
         XR    R1,R1
         CR    R1,R6           S42DSIOO = 0 ?
         BE    NOTPUTRE        YES
         AR    R8,R6           (R8) = DATASET I/O STATISTICS
         USING S42DSIOR,R8     EST. DATASET I/O STATISTICS ADDRESS
         MVC   TOTALIO(4),S42DSION    TOTAL NUMBER OF I/O S
         MVC   NUCACHCA(4),S42DSCND   NUMBER OF CACHE CANDIDATES
         MVC   NUCAHITS(4),S42DSHTS   NUMBER OF CACHE HITS
         MVC   NUWRICAN(4),S42DSWCN   NUMBER OF WRITE CACHE CANDID.
         MVC   NUWRHITS(4),S42DSWHI   NUMBER OF WRITE HITS
         L     R1,S42DSCND     (R1) = NUMBER OF CACHE CANDIDATES
         L     R7,S42DSWCN     (R7) = NUMBER OF WRITE CACHE CANDIDATES
         SR    R1,R7           (R1) = NUMBER OF READ CACHE CANDIDATES
         ST    R1,NUREACAN
         L     R1,S42DSHTS     (R1) = NUMBER OF CACHE HITS
         L     R7,S42DSWHI     (R7) = NUMBER OF WRITE HITS
         SR    R1,R7           (R1) = NUMBER OF READ  HITS
         ST    R1,NUREHITS
         CLC   DSNAME(4),=X'04040404'   DATASET NAME UNKNOWN
         BNE   OKDSNAME
         MVC   DSNAME(17),=C'DATA FROM THE JOB'
         MVC   DSNAME+18(8),S42JDJNM
OKDSNAME EQU   *
         PUT   SORTLDCB,SORTPRIN
NOTPUTRE EQU   *
         L     R1,S42DSNXT
         XR    R7,R7
         CR    R1,R7           TEST IF LAST DATASET FOR THE JOBHSECT?
         BE    TES#JHSE        YES,LAST
         L     R1,S42DSNXT     (R1) = OFFSET TO FIRST DATASET HEADER
         B     STARTDSH
TES#JHSE EQU   *
         XR    R1,R1
         LH    R1,SMF42JHL
         AR    R4,R1      (R4) = ADDRESS OF THE NEXT JOB HEADER SECTION
         BCT   R12,JOBHEABE
NOTSMF42 EQU   *
         B     GETSMFRE
ENDATA   EQU   *
         CLOSE (SMFREDCB)
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(35),=C'LAST  SMF RECORD MOVED INTO THE SMF'
         MVC   PRINT+37(10),=C'BUFFER ON:'
         CALL  SUYYDDDF,(SMFDATE,STAMP),VL
         MVC   PRINT+48(12),STAMP
         MVC   LASTDATE(12),STAMP
         CALL  SUTIME,(TIME,TIMESTAM),VL
         MVI   HH+2,C'H'
         MVI   MM+2,C'M'
         MVI   SS+2,C'S'
         MVC   PRINT+62(9),TIMESTAM
         MVC   LASTTIME(9),TIMESTAM
         PUT   PRINTDCB,PRINT
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+1(24),=C'your comment here       '
         MVC   PRINT+25(16),=C'SMF RECORDS FROM'
         MVC   PRINT+42(3),FIRSTDAT
         MVC   PRINT+45(2),FIRSTDAT+3
         MVC   PRINT+48(3),FIRSTDAT+5
         MVC   PRINT+52(4),FIRSTDAT+8
         MVI   PRINT+56,C','
         MVC   PRINT+58(9),FIRSTTIM
         MVC   PRINT+68(2),=C'TO'
         MVC   PRINT+72(3),LASTDATE
         MVC   PRINT+76(2),LASTDATE+3
         MVC   PRINT+79(3),LASTDATE+5
         MVC   PRINT+83(4),LASTDATE+8
         MVI   PRINT+87,C','
         MVC   PRINT+88(9),LASTTIME
         MVC   PRINT+100(28),=C'SMF Records 42 ,sub 6, CLOSE'
         PUT   OUTPUDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(39),=C'TOTAL NUMBER OF RECORDS TYPE 42 SUBTYPE'
         MVC   PRINT+40(4),=C' 6 ='
         L     R1,R426TOTA
         BAL   R8,CONVEBOX
         MVC   PRINT+45(10),RESULT
         PUT   PRINTDCB,PRINT
         CLOSE (SORTLDCB)
         LA    R1,PARMSORT             LOAD PARAMETER LIST
         LINK  EP=ICEMAN
         OPEN  (SORTOUT,(INPUT))
         OPEN  (CACHIN,(OUTPUT))
LOOPGESO EQU   *
         GET   SORTOUT,SORTPRIN
         PUT   CACHIN,SORTPRIN
         B     LOOPGESO
ENDSOROU EQU   *
         CLOSE (SORTOUT)
         CLOSE (CACHIN)
         LA    R1,CACHSORT             LOAD PARAMETER LIST
         LINK  EP=ICEMAN
         OPEN  (CACHOUT,(INPUT))
         XR    R3,R3
         LA    R3,50                   EST LINES PER PAGE NUMBER
         XR    R2,R2
         LA    R2,1            EST LINES PRE PAGE COUNTER
         XR    R5,R5
         LA    R5,1
         BAL   R8,NEWPAGE
         XR    R4,R4
         L     R4,LINENUM
GETLOOP  EQU   *
         GET   CACHOUT,SORTPRIN
         MVC   ODSNAME(44),DSNAME
         MVC   OVOLSER(6),VOLSER
         L     R1,TOTALIO
         BAL   R8,CONVEBOX
         MVC   OTOTALIO(10),RESULT
         L     R1,NUREACAN
         BAL   R8,CONVEBOX
         MVC   ONUREACA(10),RESULT
         L     R1,NUREHITS
         BAL   R8,CONVEBOX
         MVC   ONUREHIT(10),RESULT
         L     R1,NUWRICAN
         BAL   R8,CONVEBOX
         MVC   ONUWRICA(10),RESULT
         L     R1,NUWRHITS
         BAL   R8,CONVEBOX
         MVC   ONUWRHIT(10),RESULT
         L     R1,NUCACHCA
         BAL   R8,CONVEBOX
         MVC   ONUCACHC(10),RESULT
         L     R1,NUCAHITS
         BAL   R8,CONVEBOX
         MVC   ONUCAHIT(10),RESULT
         MVC   ODSTYPE(5),DSTYPE
*   CALCULATE PERCENTAGE
         L     R7,TOTALIO      (R7) = TOTAL NUMBER OF I/OS
         XR    R1,R1
         CR    R7,R1           TEST IF ZERO
         BE    ENDPERCE
         L     R7,NUCAHITS     (R7) = NUMBER OF CACHE HITS
         XR    R6,R6           (R6) = 0
         XR    R1,R1
         LA    R1,100
         MR    R6,R1
         L     R1,TOTALIO      (R1) = TOTAL NUMBER OF I/OS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVC   PERCENT1(3),RESULT+7
         LR    R7,R6           (R7) = REMAINS
         XR    R6,R6           (R6) = 0
         XR    R1,R1
         LA    R1,100
         MR    R6,R1
         L     R1,TOTALIO              (R1) = TOTAL NUMBER OF I/OS
         DR    R6,R1
         LR    R1,R7
         BAL   R8,CONVEBOX
         MVI   PERCDOT,C'.'
         MVC   PERCENT2(2),RESULT+8
         CLI   PERCENT2,C' '
         BNE   ENDPERCE
         MVI   PERCENT2,C'0'
ENDPERCE EQU   *
         MVC   PRINT(133),BLANK
         MVC   PRINT(133),OUTPUREC
         PUT   OUTPUDCB,PRINT
         CR    R2,R3                   TEST IF PAGE IS FULL
         BNE   PAGENFUL                NOT
         XR    R2,R2
         BAL   R8,NEWPAGE
PAGENFUL EQU   *
         AR    R2,R5
         BCT   R4,GETLOOP
ENDODATA EQU   *
         CLOSE (CACHOUT)
         MVI   PRINT,C'-'
         MVC   PRINT+1(L'PRINT-1),PRINT
         PUT   OUTPUDCB,PRINT
         BAL   R8,BLOCKPAG             WRITE TRAILER
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         MVC   PRINT+1(27),=C'your comment here          '
         MVC   PRINT+100(28),=C'SMF records 42, sub 6, CLOSE'
         PUT   OUTPUDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(14),=C'DSNLEVEL ENDED'
         PUT   PRINTDCB,PRINT
         CLOSE (PRINTDCB)
         CLOSE (OUTPUDCB)
FINI     EQU   *
         L     R13,4(R13)
         L     R9,R9SAVE
         FREEMAIN  R,LV=40000,A=(R9)
         LA    R7,0
         LR    R15,R7
         RETURN (14,12),RC=(15)
NEWPAGE  EQU   *
*   PERCENTAGE = 100 * ((READ HITS) + (WRITE HITS)) / (TOTAL I/O)
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'1'
         MVC   PRINT+2(13),=C'SMF EXTRACT  '
         MVC   PRINT+25(33),=C'PERCENTAGE = 100 * ((READ HITS) +'
         MVC   PRINT+58(28),=C' (WRITE HITS)) / (TOTAL I/O)'
         MVC   PRINT+100(12),=C'REPORT DATE:'
         CALL  SUDATE,(DATE),VL
         MVC   PRINT+113(3),DATENAME
         MVC   PRINT+117(2),DATEDAY
         MVC   PRINT+120(3),DATEMONT
         MVC   PRINT+124(4),DATEYEAR
         PUT   OUTPUDCB,PRINT
         MVC   PRINT(133),BLANK
         PUT   OUTPUDCB,PRINT
         MVI   PRINT,C'-'
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVI   PRINT,C' '
         PUT   OUTPUDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+2(38),=C'DATASET NAME                          '
         MVC   PRINT+49(38),=C' TOTAL       READ      READ      WRITE'
         MVC   PRINT+87(38),=C'       WRITE    %       NUMBER    DS  '
         MVC   PRINT+126(6),=C'VOLSER'
         PUT   OUTPUDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+49(38),=C' NUMBER   CANDIDATES   HITS   CANDIDAT'
         MVC   PRINT+87(38),=C'ES     HITS            OF CACHE  TYPE '
         PUT   OUTPUDCB,PRINT
         MVC   PRINT(133),BLANK
         MVC   PRINT+49(38),=C' OF I/O                                '
         MVC   PRINT+87(38),=C'                         HITS          '
         PUT   OUTPUDCB,PRINT
         MVI   PRINT,C'-'
         MVC   PRINT+1(L'PRINT-1),PRINT
         MVI   PRINT,C' '
         PUT   OUTPUDCB,PRINT
         BR    R8
*---------------------------------------------------------------------
CONVEBOX EQU   *
         CVD   R1,PACKED
         MVC   COPYPATE(12),PATTERN
         ED    COPYPATE(12),PACKFIE2
         MVC   RESULT(10),COPYPATE+2
         BR    R8
*---------------------------------------------------------------------
BLOCKPAG EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'1'
         PUT   OUTPUDCB,PRINT
         MVC   PRINT(133),BLANK
         PUT   OUTPUDCB,PRINT
         LA    R5,1
         MVC   CHARFIEL(9),=C'DATASETS '
NEWLOOPS EQU   *
         LA    R7,12
         LA    R6,1
         ST    R6,LINECOUN
LOOPIEFS EQU   *
         MVI   CONSAREA,C' '
         MVC   CONSAREA+1(L'CONSAREA-1),CONSAREA
         LA    R1,PARMLIST
         CALL  IEFSD095
         MVC   PRINT(133),BLANK
         MVC   PRINT+1(132),CONSAREA
         PUT   OUTPUDCB,PRINT
         LA    R1,1
         AR    R6,R1
         ST    R6,LINECOUN
         BCT   R7,LOOPIEFS
         LA    R1,1
         AR    R5,R1
         LA    R1,5
         CR    R5,R1
         BE    ENDBLOCK
         LA    R1,2
         CR    R5,R1
         BE    SECONLIN
         LA    R1,3
         CR    R5,R1
         BE    THIRDLIN
         LA    R1,4
         CR    R5,R1
         BE    FOURTLIN
SECONLIN EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         PUT   OUTPUDCB,PRINT
         MVC   CHARFIEL(9),=C'ACTIVITY '
         B     NEWLOOPS
THIRDLIN EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         PUT   OUTPUDCB,PRINT
         MVC   CHARFIEL(9),=C'SMF CACHE'
         B     NEWLOOPS
FOURTLIN EQU   *
         MVC   PRINT(133),BLANK
         MVI   PRINT,C'0'
         PUT   OUTPUDCB,PRINT
         MVC   CHARFIEL(9),=C' REPORT  '
         B     NEWLOOPS
ENDBLOCK EQU   *
         BR    R8
*---------------------------------------------------------------------
PATTERN  DC    XL12'402020202020202020202120'
         DS    0D
PACKED   DS    0PL8
         DS    PL2
PACKFIE2 DS    PL6
COPYPATE DS    CL12
*---------------------------------------------------------------------
SAVE3    DS    18F
NUMBER   DS    F
R426TOTA DS    F
R9SAVE   DS    F
TIME     DS    F
RESULT   DS    CL10
PRINT    DS    CL133
BLANK    DC    CL133' '
*---------------------------------------------------------------------
         DS    0D
SORTPRIN DS    0CL100
DSNAME   DS    CL44    DSNAME
TOTALIO  DS    F       TOTAL NUMBER OF I/O
NUREACAN DS    F       NUMBER OF READ CANDIDATES
NUREHITS DS    F       NUMBER OF READ HITS
NUWRICAN DS    F       NUMBER OF WRITE CANDIDATES
NUWRHITS DS    F       NUMBER OF WRITE HITS
NUCACHCA DS    F       NUMBER OF CACHE CANDIDATES
NUCAHITS DS    F       NUMBER OF CACHE HITS
RESPTIME DS    F       AVERAGE RESPONSE TIME
DSTYPE   DS    CL5     DATASET TYPE
VOLSER   DS    CL6     VOLSER
         DS    CL80    FILLER
*---------------------------------------------------------------------
         DS    0D
PARMSORT DC    X'80',AL3(ADLST)
         CNOP  2,4
ADLST    DC    AL2(LISTEND-LISTBEG)
LISTBEG  DC    A(SORTA)    STARTING ADDRESS OF SORT STMT
         DC    A(SORTZ)    ENDING ADDRESS OF SORT STMT
         DC    A(RECA)     STARTING ADDRESS OF RECORD STMT
         DC    A(RECB)     ENDING ADDRESS OF RECORD STMT
         DC    A(0)        NO E15 EXIT
         DC    A(0)        NO E35 EXIT
         DC    X'07',AL3(SUMA)
         DC    X'00',AL3(SUMB)
LISTEND  EQU   *
SORTA    DC    C' SORT FIELDS=(1,44,CH,A)'
SORTZ    DC    C' '
RECA     DC    C' RECORD TYPE=F,LENGTH=100 '
RECB     DC    C' '
SUMA DC C' SUM  FIELDS=(45,4,49,4,53,4,57,4,61,4,65,4,69,4),FORMAT=BI'
SUMB     DC    C' '
*---------------------------------------------------------------------
         DS    0D
CACHSORT DC    X'80',AL3(CACHLST)
         CNOP  2,4
CACHLST  DC    AL2(CACHEND-CACHBEG)
CACHBEG  DC    A(CACSORTA)    STARTING ADDRESS OF SORT STMT
         DC    A(CACSORTZ)    ENDING ADDRESS OF SORT STMT
         DC    A(CACRECA)     STARTING ADDRESS OF RECORD STMT
         DC    A(CACRECB)     ENDING ADDRESS OF RECORD STMT
         DC    A(0)        NO E15 EXIT
         DC    A(0)        NO E35 EXIT
         DC    C'CACH'
CACHEND  EQU   *
CACSORTA DC    C' SORT FIELDS=(45,4,BI,D)'
CACSORTZ DC    C' '
CACRECA  DC    C' RECORD TYPE=F,LENGTH=100 '
CACRECB  DC    C' '
*---------------------------------------------------------------------
         DS    0D
PACKFIEL DS    0PL8
PACKFIRS DS    PL4
PACKSECO DS    PL4
*---------------------------------------------------------------------
SMFDATE  DS    F
LINENUM  DS    F
INICFIRS DS    F
FIRSTDAT DS    CL12
LASTDATE DS    CL12
FIRSTTIM DS    CL9
LASTTIME DS    CL9
*---------------------------------------------------------------------
DATE     DS    0CL12
DATENAME DS    CL3
DATEDAY  DS    CL2
DATEMONT DS    CL3
DATEYEAR DS    CL4
*---------------------------------------------------------------------
STAMP    DS   0CL12
DAY      DS   CL3      BLANK
DAYNO    DS   CL2      BLANK
MONTH    DS   CL3      BLANK
YEAR     DS   CL2      19
YEAR1    DS   CL2      BLANK
*---------------------------------------------------------------------
TIMESTAM DS   0CL11
HH       DS   CL2      BLANK
         DS   CL1      BLANK
MM       DS   CL2      BLANK
         DS   CL1      BLANK
SS       DS   CL2      BLANK
         DS   CL1      BLANK
DD       DS   CL2      BLANK
*--------------------------------------------------------------------
PARMLIST DS    0D
WORD1    DC    A(CHARFIEL)   ADDRESS OF THE FIELD CONT. CHARS STRING
WORD2    DC    A(LINECOUN)   ADDRESS OF LINE COUNT FIELD
WORD3    DC    A(CONSAREA)   ADDRESS OF A CONSTRUCION AREA
WORD4    DC    A(NUMCHARA)   ADDRESS OF THE NUMBER OF CHARACTERS
CHARFIEL DS    CL9
LINECOUN DC    F'1'          FOR THE FIRST ENTRY TO IEFSD095
CONSAREA DC    CL132' '      CONSTRUCTION AREA
NUMCHARA DC    F'9'          NUMBER OF CHARACTERS INM THE STRING
*---------------------------------------------------------------------
OUTPUREC DS    0CL150
         DS    CL1           CONTROL CHARACTER
ODSNAME  DS    CL44          DSNAME
         DS    CL1           FILLER
OTOTALIO DS    CL10          TOTAL NUMBER OF I/O
         DS    CL1           FILLER
ONUREACA DS    CL10          NUMBER OF READ CANDIDATES
         DS    CL1           FILLER
ONUREHIT DS    CL10          NUMBER OF READ HITS
         DS    CL1           FILLER
ONUWRICA DS    CL10          NUMBER OF WRITE CANDIDATES
         DS    CL1           FILLER
ONUWRHIT DS    CL10          NUMBER OF WRITE HITS
         DS    CL1           FILLER
PERCENT1 DS    CL3           PERCENTAGE: (HITS/TOTALI/O)*100%
PERCDOT  DS    CL1           DECIMAL DOT
PERCENT2 DS    CL2           PERCENTAGE: (HITS/TOTALI/O)*100%
         DS    CL1           FILLER
ONUCAHIT DS    CL10          NUMBER OF CACHE HITS
         DS    CL2           FILLER
ODSTYPE  DS    CL5           DATASET TYPE
         DS    CL1           FILLER
OVOLSER  DS    CL6           VOLSER
         DS    CL20          FILLER
ONUCACHC DS    CL10          NUMBER OF CACHE CANDIDATES
         DS    CL1           FILLER
RESPTIM1 DS    CL6           RESPONSE TIME IN SECONDS
RESPDOT  DS    CL1           DECIMAL DOT
RESPTIM2 DS    CL4           RESPONSE TIME IN MICROSECONDS
         DS    CL6           FILLER
         DS    0D
PRINTDCB DCB   MACRF=PT,RECFM=FBA,LRECL=133,DSORG=PS,                  *
               DDNAME=PRINTOUT
SORTLDCB DCB   MACRF=PM,RECFM=FB,LRECL=100,DSORG=PS,                   *
               DDNAME=SORTIN
SMFREDCB DCB   MACRF=GM,DSORG=PS,RECFM=VBS,DDNAME=SMFDATA,EODAD=ENDATA
CACHIN   DCB   MACRF=PM,RECFM=FB,LRECL=100,DSORG=PS,                   *
               DDNAME=CACHIN
SORTOUT  DCB   MACRF=GM,RECFM=FB,LRECL=100,DSORG=PS,                   *
               DDNAME=SORTOUT,EODAD=ENDSOROU
CACHOUT  DCB   MACRF=GM,RECFM=FB,DSORG=PS,LRECL=100,                   *
               DDNAME=CACHOUT,EODAD=ENDODATA
OUTPUDCB DCB   MACRF=PT,RECFM=FBA,LRECL=133,DSORG=PS,                  *
               DDNAME=OUTPDDN
         LTORG  LTORG LTORG LTORG LTORG LTORG LTORG LTORG
         IFASMFR  (42)
         END


Szczepan Kowalski
Software Specialist
The Johannesburg Stock Exchange (South Africa)                   c Xephon 1996

