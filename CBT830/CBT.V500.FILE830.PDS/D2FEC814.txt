Subsystem status display using REXX

REXX is a superb language, both for its language features and
its built-in functions.  The only problem I have found is that
numerical operations are slow because of all the data being
held in character format.  The following REXX is designed to
convince any remaining sceptics!

This REXX will chain through storage, starting with the CVT,
to display which MVS subsystems are currently active and
which subsystem functions they are receiving.  Many products
dynamically define subsystems and the SYS1.PARMLIB
definitions cannot be taken as complete, nor do they indicate
the active functions.

To relate function codes to meaningful descriptions, please
refer to the MVS System Logic Library.  For example, code 9
is for WTOs and code 10 is for operator commands.  Most
installations will find that there is more happening in this area
than they might have expected.

As the code below demonstrates, REXX has functions to
convert values between character, hexadecimal, and decimal
data formats.  It is also possible to use hexadecimal constants.
The only feature that is missing is the ability to use bit patterns
in binary.  Storage can be accessed directly by using the built-
in function STORAGE.


REXX TO DISPLAY SUBSYSTEM STATUS

/* REXX : SUBSYSTEM STATUS                                         */
/* DISPLAY ALL SUBSYSTEM NAMES AND WHICH FUNCTIONS ARE ACTIVE      */
/*******************************************************************/
NUMERIC DIGITS 10                        /* ALLOW FOR FULLWORD ADDR  */
CVT   = ADDC(16,'00')                    /* FIND CVT ADDR            */
JESCT = ADDC(CVT,'0128')                 /* FIND JESCT ADDR          */
SSCT  = ADDC(JESCT,'18')                 /* FIND SSCT (SSCVT) ADDR   */
DO WHILE (SSCT > 0)                      /* SEARCH SSCT CHAIN        */
   NM = STORAGE(D2X(SSCT+8),4)
   SAY 'SUBSYSTEM NAME IS ' NM  C2X(NM)  /* SHOW NAME, ALSO IN HEX   */
   SSVT = ADDC(SSCT,'10')                /* FIND SSVT ADDR           */
   IF SSVT > 0 THEN
      DO
         AL = SSVT + X2D('04')           /* OFFSET 4  = FUNC TABLE   */
         TB = STORAGE(D2X(AL),255)       /* TABLE ITSELF, 255 BYTES  */
         DO J = 1 TO 255
            IF SUBSTR(TB,J,1) Â¬= '00'X THEN  /* FUNCTION IS ACTIVE   */
               SAY 'ACTIVE FUNCTION ' J
         END
      END
   ELSE
      SAY 'NO SSVT'
   SAY ' '
   SSCT = ADDC(SSCT,'04')                /* FIND NEXT SSCT ADDR      */
END
EXIT 0
ADDC:ARG AD1,AD2                         /* CALC ADDRESS FUNCTION    */
RETURN C2D(STORAGE(D2X(AD1+X2D(AD2)),4)) /* AD1 = DEC, AD2 = HEX     */


                                                            c Reserved 1990

