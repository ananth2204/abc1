Loading an external file into GDDM/PGF (cont)

We conclude this article this month with the publication of the
remainder of the source code for PGFSTORE.

A200     GET   FILEPSIN                get data record
         L     R0,MAXREC
         SH    R0,=H'1'                MAXREC-1
         ST    R0,MAXREC
         BM    EOJ                     too many records
         AP    RECNO,=P'1'
         ZAP   FLDNO,=P'0'
         LR    R11,R1
         L     R1,NE
         LA    R1,1(R1)                increment data field count
         ST    R1,NE
         LTR   R10,R6
         BZ    A270
         L     R15,PMDPOS
         LA    R15,0(R15,R11)
         LH    R1,PMDLEN
         BCTR  R1,0
         MVC   0(0,R9),0(R15)
         EX    R1,*-6
         LA    R9,1(R1,R9)
*    convert data fields
A270     LR    R10,R5
*    field address
A210     AP    FLDNO,=P'1'             increment field no.
         L     R15,PMDPOS
         LA    R15,0(R15,R11)
         LE    FP0,=X'7C90E410'        default (10**72)
         CLI   0(R15),C'*'             ?"MISSING-VALUE"
         BE    A250                    :yes
         LH    R0,PMDLEN
*    test format
         CLI   PMDFORM,C'N'
         BNE   A220
*    numeric digit
         CLI   0(R15),C'-'             negative?
         BNE   A280                    :no
         LA    R15,1(R15)              increment address
         BCTR  R0,0                    decrement count
         MVC   SIGN,=E'-1'             multiplicand
A280     BAL   R14,CVN
         CVD   R1,XI
         BAL   R14,CVN
         CVD   R1,XF
*    convert to floating point
A240     BAL   R14,CVFP
         ME    FP0,SIGN                *multiplicand
         MVC   SIGN,=E'1'              reset default multiplicand
A250     ME    FP0,PMDSCAL             * scaling factor
         CLI   PMDCOORD,C'X'           ?X-coordinate
         BNE   *+12                    :no
         STE   FP0,0(R3)
         LA    R3,4(R3)
         CLI   PMDCOORD,C'Y'           ?Y-coordinate
         BNE   *+12                    :no
         STE   FP0,0(R4)
         LA    R4,4(R4)
A260     L     R10,PMCHAIN
         LTR   R10,R10
         BNZ   A210
         B     A200                    next record
A220     CLI   PMDFORM,C'P'            ?packed decimal
         BNE   A230                    :no
         LR    R1,R0                   field length
         BCTR  R1,0                    lengthcode
         EX    R1,ZAP
         ZAP   XF,=P'0'
         B     A240
ZAP      ZAP   XI,0(0,R15)
A230     CLI   PMDFORM,C'E'            ?floating point
         BNE   A260                    :no
         LE    FP0,0(R15)
         B     A250
EXME     ME    FP0,=E'10'
EXDE     DE    FP0,=E'10'
E100     BALR  R11,0                   base register
         USING *,R11
         UNPK  M1RECNO,RECNO
         OI    M1RECNO+L'M1RECNO-1,X'F0'
         UNPK  M1FLDNO,FLDNO
         OI    M1FLDNO+L'M1FLDNO-1,X'F0'
         TPUT  M1,M1L                  msg: data-error
         MVC   RC,=H'4'                return code
         L     R12,=A(PGFSTORE)        reset base register
         B     EOJ
         DROP  R11
M1       DC    C'DATA ERROR: RECORDNO. '
M1RECNO  DC    C'0000'
         DC    C' FIELDNO. '
M1FLDNO  DC    C'00'
M1L      EQU   *-M1
E200     TPUT  M2,M2L                  msg: no 'DATA'-statements
         MVC   RC,=H'4'                return code
         B     EOJ
E300     TPUT  M3,M3L                  msg: no groups
         MVC   RC,=H'4'                return code
         B     EOJ
E400     TPUT  M4,M4L                  msg: no elements
         MVC   RC,=H'4'                return code
         B     EOJ
M2       DC    C'NO ''DATA''-STATEMENTS'
M2L      EQU   *-M2
M3       DC    C'NO ''GROUP''-DEFINITIONS'
M3L      EQU   *-M3
M4       DC    C'NO DATA ELEMENTS'
M4L      EQU   *-M4
B100     DS    0H                      end of input file
*    allocate Y-values table
         SR    R0,R0
         LA    R1,4                    length(element)
         M     R0,NE                   * no. of elements
         LTR   R1,R1
         BZ    E400                    no elements
         STH   R1,NLE                  = group length
         M     R0,NG                   * no. of groups
         LR    R0,R1
         GETMAIN R,LV=(0)
         ST    R1,AY                   A(Y(final)-table)
*    reformat AZ-->AY
*    AZ:A(1,1) A(1,2) ... A(1,NG); A(2,1) A(2,2) ... A(2,NG);
*    AY:A(1,1) A(2,1) ... A(NE,1); A(1,2) A(2,2) ... A(NE,2);
         L     R3,AZ                   A(Y(intermediate)-table)
         L     R4,AY                   A(Y(final)-table)
         L     R0,NE                   no. of elements (= read records)
B202     LA    R8,0                    displacement
         L     R1,NG                   no. of groups
B201     L     R15,0(R3)
         ST    R15,0(R8,R4)
         AH    R8,NLE
         LA    R3,4(R3)
         BCT   R1,B201                 next group
         LA    R4,4(R4)
         BCT   R0,B202                 next element
         L     R1,KEYL
         LTR   R1,R1
         BZ    B210                    no entries
         SR    R0,R0
         CVB   R1,NKEY                 no. of entries
         M     R0,KEYL                 * maximum length
         LR    R0,R1
         GETMAIN R,LV=(0)
         ST    R1,AKEY                 A(Key-table)
         LR    R10,R5
         L     R1,KEYL
         BCTR  R1,0
         L     R11,AKEY
B220     CLI   PMDCOORD,C'Y'
         BNE   B230
         MVC   0(0,R11),PMKNAME
         EX    R1,*-6
         LA    R11,1(R1,R11)
B230     L     R10,PMCHAIN
         LTR   R10,R10
         BNZ   B220
B210     DS    0H             delete existing member in case present
         OPEN  (ADMCDATA,OUTPUT)
         STOW  ADMCDATA,MEMBER,D
         STH   R15,RC                  return code
         CLOSE (ADMCDATA,,PARMPSIN,,FILEPSIN)
         L     R15,=V(FSINN)
         LA    R1,0                    no parameter
         BALR  R14,R15                 CALL FSINIT
*    CALL CHART (to store values)
         L     R15,=V(CHART)
         BAL   R1,*+32
         DC    AL4(CHARTCTL)
         DC    AL4(DATACTL)
AX       DC    AL4(0)
AY       DC    AL4(0)
AKEY     DC    AL4(0)
ALABEL   DC    AL4(0)
         DC    X'80'
AHEAD    DC    AL3(0)
         BALR  R14,R15                 CALL CHART
*    terminate GDDM
         L     R15,=V(FSTERM)
         LA    R1,0                    no parameter
         BALR  R14,R15                 CALL FSTERM
EOJ      CLOSE (FILEPSIN)
         L     R13,4(R13)              restore A(old save-area)
         LH    R15,RC                  return code
         RETURN (14,12),RC=(15)
RC       DC    H'0'
AZ       DC    AL4(0)
CHARTCTL DC    A(0)
         DC    A(0)                    DISPLAY=0
         DC    A(0)                    HELP=0
         DC    A(0)                    ISOLATE=0
         DC    CL8' '                  FORMNAME=' '
MEMBER   DC    CL8'NULL'               DATANAME
         DC    A(0)                    PAIRED=0
NG       DC    F'0'
NE       DC    F'0'
KEYL     DC    F'0'
LABELL   DC    F'0'
HEADINGL DC    F'0'
         DC    CL8' '                  PRTNAME
         DC    F'0'                    PRTDEP
         DC    F'0'                    PRTWID
         DC    F'0'                    PRTCOPY
DATACTL  DC    A(0)
LENGTH   DS    0H                      determine field length
         LA    R0,LRECL(R10)           end of input area (high-order)
         SR    R0,R15                  maximum data length
         LA    R1,LRECL(R10)           end of input area (high-order)
LENGTH01 BCTR  R1,0                    address-1
         CLI   0(R1),C' '              ?trailing blank
         BNER  R14                     :no, search end
         BCT   R0,LENGTH01             loop
         BR    R14                     end
*    set entry into chain
CHAIN    LTR   R15,R15
         BNZ   *+8                     not first entry
         LA    R15,0(R10)              address of first entry
         MVC   PMTYPE(4),=XL4'0'       initialise, chain address=0
CHAIN02  CLC   0(4,R15),=XL4'0'
         BE    CHAIN01                 ;end of chain
         L     R15,0(R15)              address of next entry
         B     CHAIN02                 loop
CHAIN01  ST    R10,0(R15)
         MVC   PMTYPE(4),=XL4'0'       chain address = 0
         BR    R14                     return
         DC    A(0)
CVN      ST    R14,CVN-4               save return address
         SR    R1,R1                   zeroise result register
         LTR   R0,R0                   test field length
         BZR   R14                     null field
         SR    R14,R14                 zeroise work register
         ZAP   SF,=P'1'                initialise scaling factor
CVN02    CLI   0(R15),C'.'             ? delimiter
         BE    CVN03                   : end, integer part
         CLI   0(R15),C'0'             ? digit
         BL    CVN01                   : no numeric digit
         MP    SF,=P'10'               scaling factor * 10
         IC    R14,0(R15)              load character
         N     R14,=X'0000000F'        convert to digit
         MH    R1,=H'10'               intermediate result *10
         AR    R1,R14                  +digit
CVN01    LA    R15,1(R15)              update address
         BCT   R0,CVN02                decrement count
CVN04    L     R14,CVN-4               reload return address
         BR    R14                     return
CVN03    LA    R15,1(R15)              update address
         BCTR  R0,0                    remaining length -1
         B     CVN04                   loop
SF       DC    PL9'0'                  scaling factor
XI       DS    PL8
XF       DS    PL8
         DC    A(0)
CVFP     ST    R14,CVFP-4              save return address
         SER   FP0,FP0                 initialise, =0
         LA    R0,0
         ST    R0,YI
         LA    R15,1
         CVB   R0,XI                   convert integer part
         LTR   R0,R0
         BZ    CVFP03
         SR    R1,R1
CVFP01   SRDL  R0,4                    0XXXXXXX X.......
         LTR   R0,R0
         BZ    CVFP02                  normalised
         LA    R15,1(R15)              exponent
         B     CVFP01
CVFP02   LA    R0,X'40'(R15)           floating point exponent
         SRDL  R0,8                    00000000 EEMMMMMM
         ST    R1,YI                   integer result (floating point)
CVFP03   ZAP   PD,XF                   fractional part
         MP    PD,=P'16777216'         *16**6
         LA    R0,0
         CP    =P'0',SF+2(7)
         BZ    CVFP04
         DP    PD,SF+2(7)
         CVB   R0,PD
CVFP04   O     R0,=X'40000000'
         ST    R0,YF
         LE    FP0,YF
         AE    FP0,YI
*    FP0: result
         L     R14,CVFP-4              reload return address
         BR    R14                     return
FP0      EQU   0                       equate : Floating Point Reg. 0
SIGN     DC    E'1'                    multiplicand (1 or -1)
D        DS    PL8
PD       DS    PL15
YI       DS    F
YF       DS    F
MAXPARM  EQU   100                     maximum number of parameters
ABUF     DC    A(0)                    address of parameter table
NRECS    DC    A(0)                    no. of records in parm. file
LRECL    EQU   80                      record length of parm. file
NKEY     DC    PL8'0'                  no. of <KEY> statements
NLABEL   DC    PL8'0'                  no. of <LABEL> statements
NLE      DC    H'0'                    length of Y-group
NDATA    DC    H'0'                    no. of data fields
MAXREC   DC    F'0'                    no. of FILEPSIN records
RECNO    DC    PL3'0'                  no. of records
FLDNO    DC    PL2'0'                  no. of fields
         LTORG
FILEPSIN DCB   DDNAME=FILEPSIN,DSORG=PS,MACRF=GL,EODAD=B100
PARMPSIN DCB   DDNAME=PARMPSIN,DSORG=PS,MACRF=GM,EODAD=A000
ADMCDATA DCB   DDNAME=ADMCDATA,DSORG=PO,MACRF=W
PMDSECT  DSECT
PMTYPE   DS    CL7
         ORG   PMTYPE
PMCHAIN  DS    AL4                     chain address (0=end)
         ORG
PMVAR    DS    0C                      variable part
         ORG   PMVAR
PMHTEXT  DS    CL73                    heading text
         ORG   PMVAR
PMNNAME  DS    CL8                     member name
         ORG   PMVAR
PMDCOORD DS    CL1                     coordinate
         DS    C
PMDFORM  DS    CL1                     format
         DS    C
PMDSCAL  DS    CL4'annn'               scaling
         DS    C
PMDPOS   DS    CL4'nnnn'               position
         DS    C
PMDLEN   DS    CL2'nn'                 length
         DS    C
PMKNAME  DS    0C                      key name


A S Rudd
Senior Technical Specialist (West Germany)   € A S Rudd 1989

