Lower-case to upper-case conversion program

Recently we have found that a lot of documents sent to us by
suppliers and customers have been in upper-case and lower-
case format. This proved to be a problem when we tried to
print them as the line printer at our installation can only print
upper-case characters. In response to this I have written the
following translation program. BTRANS can read 80-byte files
and convert any lower-case characters to upper-case format.
The program will accept partitioned sequential datasets or
members of partitioned organized datasets. The only restriction
placed upon the program is that, in its present form, it only
handles 80-byte records. Obviously the program could be
modified to handle a variety of record lengths. As a quick
solution this program has proved adequate for our needs. The
JCL shown below can be used to run the program. The
program has only been used on an MVS/XA 2.2.3 system:
however, I am confident that it will work on other MVS
platforms.


JCL FOR BTRANS PROGRAM

//jobname    JOB    CLASS=A,MSGLEVEL=(1,1),MSGCLASS=A
//*        **********************************************************
//*        * If input dataset is partitioned code:-                 *
//*        * //SYSIN   DD DSN=PO.DATASET(MEMBER),DISP=SHR           *
//*        **********************************************************
//STEP1      EXEC   PGM=BTRANS
//STEPLIB    DD     DSN=load.library,DISP=SHR
//SYSOUT     DD     SYSOUT=*
//SYSIN      DD     DSN=PS.DATASET,DISP=SHR


BTRANS SOURCE CODE

*        **************************************************************
*        * PROGRAM PURPOSE: TO CONVERT LOWER CASE CHARACTERS TO       *
*        *                  UPPER CASE FORMAT.                        *
*        **************************************************************
BTRANS   CSECT
         SAVE      (14,12)             /* SAVE CALLER'S REGISTERS.   */
         LR        R12,R15             /* LOAD ENTRY POINT ADDRESS.  */
         USING     BTRANS,R12          /* BASE ON REGISTER 12.       */
         ST        R13,SAVEAREA+4      /* STORE SAVEAREA ADDRESS.    */
         LA        R15,SAVEAREA        /* LOAD NEW SAVEAREA ADDRESS. */
         ST        R15,8(R13)          /* STORE NEW SAVEAREA ADDR.   */
         LR        R13,R15             /* SET UP NEW SAVEAREA.       */
START    EQU       *
         OPEN      (SYSIN,INPUT,SYSOUT,OUTPUT)
PROCESS  EQU       *
         GET       SYSIN               /* GET FIRST RECORD.          */
         LR        R0,R1               /* LOAD POINTER TO RECORD.    */
         LA        R3,80               /* PROCESS 80 BYTE RECORD.    */
         LA        R2,1                /* SET UP R2 AS COUNTER.      */
P0010    EQU       *
         OI        0(R1),X'40'         /* CONVERT TO UPPER CASE.     */
         AR        R1,R2               /* POINT TO NEXT CHARACTER.   */
         BCT       R3,P0010            /* IF NOT END DO NEXT.        */
         PUT       SYSOUT,(R0)         /* ELSE WRITE RECORD.         */
         B         PROCESS             /* GET NEXT RECORD.           */
ENDFIL   EQU       *
         CLOSE     (SYSIN,,SYSOUT)     /* CLOSE FILES.               */
         L         R13,4(R13)          /* RELOAD SAVEAREA ADDRESS.   */
         RETURN    (14,12),RC=0        /* RETURN TO CALLER.          */
SAVEAREA DS        18F
SYSIN    DCB       DDNAME=SYSIN,MACRF=GL,LRECL=80,DSORG=PS,EODAD=ENDFIL
SYSOUT   DCB       DDNAME=SYSOUT,MACRF=PM,LRECL=80,RECFM=FBA,          X
                BLKSIZE=400,DSORG=PS
         END


John Bradley
Technical Support Engineer (UK)                         c Xephon 1993

