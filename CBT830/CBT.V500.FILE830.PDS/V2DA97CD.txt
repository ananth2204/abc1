Calculating the peak hour by Service Units


INTRODUCTION

Many installations base their capacity plan on their peak hour
or use the peak hour as the basis for measuring the performance
of their machine and how busy it gets. Often the peak hour is
determined by an arbitrary decision made many years before,
based on a gut feeling at the time. I decided to validate our
peak hour to see if it was correct and to see if it was the same
for our important workloads.

I decided that basing the decision on just one aspect of the
machine was not the best method. For instance, just using the
'CPU Busy' value would not take into account memory used or
I/O performed. I came to the conclusion that the best method
would be to use Service Units used during each RMF interval.

I wrote a little SAS routine which extracted the Service Units
used by each workload during each RMF interval and totalled
them to get the total Service Units used for that interval: in our
case this was an hour. These totals were then sorted for each
day, in descending order, and then a weighting was applied to
the top eight values. The highest value was given a value of
eight, the second highest total had a weighting of seven given
to it, the next a value of six, and so on right down to the eighth
highest value, which had a value of one. The totals for each
RMF time period during the year were then added together to
give a grand total and the one that had the highest weighting
value was thus the peak hour.

To calculate the peak hour for an individual workload, the SAS
routine was modified to extract the Service Unit values for that
workload only.

The routine uses the PDB segments for the whole year but can
be modified for a shorter period. We have set our RMF
intervals to half past each hour, so our peak hour worked out as
10.30 to 11.30.

The code is given below. The first step is the SAS job that
extracts the data from the PDB. It then sorts it into a
descending total of Service Units by date. The second job is a
COBOL program called TECJL43, which calculates the
weighting value. The output of this program is then sorted into
descending order of RMF intervals and is printed by another
COBOL program, TECJL44.


JCL AND SAS CODE

//S2       EXEC SAS6 OPTIONS='MACRO NODSNFERR'
//WORK     DD SPACE=(CYL,(10,10))
//SASLOG   DD SYSOUT=*
//SASLIST  DD SYSOUT=D
//FT16F001 DD SYSOUT=*
//FT17F001 DD SYSOUT=*
//FT18F001 DD SYSOUT=*
//SORTWK01 DD SPACE=(CYL,(5,5))
//SORTWK02 DD SPACE=(CYL,(5,5))
//SOURCLIB DD DISP=SHR,DSN=CSDTEC.MAST.GBZJL1.MXG.MACRO.SOURCE
//OUT DD DSN=&&FRODO,SPACE=(TRK,(2,2),RLSE),
// DISP=(,PASS),
// DCB=(RECFM=FB,LRECL=23,BLKSIZE=230)
//SYSIN  DD *
* PEAKALL - CALCULATES THE PEAK HOUR BY SERVICE UNITS;
DATA EXTRACT;
SET
PDB.RMFINT12
PDB.RMFINT11
PDB.RMFINT10
PDB.RMFINT09
PDB.RMFINT08
PDB.RMFINT07
PDB.RMFINT06
PDB.RMFINT05
PDB.RMFINT04
PDB.RMFINT03
PDB.RMFINT02
PDB.RMFINT01
PDB.RMFINT00
;
FORMAT DATE;
DATE=DATEPART(STARTIME);
YEAR  = YEAR(DATE);
MON   = MONTH(DATE);
DAY   = DAY(DATE);
BB=MDY(MON, DAY, YEAR);
X=WEEKDAY(BB);
* delete weekends ;
IF X=1 THEN DELETE;
IF X=7 THEN DELETE;
* Set up service units for each workload;
IF BATPSERV = . THEN BATPSERV = 0;
IF BATDSERV = . THEN BATDSERV = 0;
IF DB2SERV  = . THEN DB2SERV  = 0;
IF DB2PSERV = . THEN DB2PSERV = 0;
IF TSASSERV = . THEN TSASSERV = 0;
IF TNORSERV = . THEN TNORSERV = 0;
IF TINSSERV = . THEN TINSSERV = 0;
IF LIFZSERV = . THEN LIFZSERV = 0;
IF GENZSERV = . THEN GENZSERV = 0;
IF GATESERV = . THEN GATESERV = 0;
IF KEKZSERV = . THEN KEKZSERV = 0;
IF LIFCSERV = . THEN LIFCSERV = 0;
IF LIFDSERV = . THEN LIFDSERV = 0;
IF LIFESERV = . THEN LIFESERV = 0;
IF GENDSERV = . THEN GENDSERV = 0;
IF KEKDSERV = . THEN KEKDSERV = 0;
IF LIFASERV = . THEN LIFASERV = 0;
IF LIFBSERV = . THEN LIFBSERV = 0;
IF LIFMSERV = . THEN LIFMSERV = 0;
IF GENASERV = . THEN GENASERV = 0;
IF ZEOSSERV = . THEN ZEOSSERV = 0;
IF SERVSERV = . THEN SERVSERV = 0;
IF OTTPSERV = . THEN OTTPSERV = 0;
IF GRSSERV =  . THEN GRSSERV  = 0;
IF OTHRSERV = . THEN OTHRSERV = 0;
IF VTAMSERV = . THEN VTAMSERV = 0;
IF ROSCSERV = . THEN ROSCSERV = 0;
IF MONTSERV = . THEN MONTSERV = 0;
IF JES2SERV = . THEN JES2SERV = 0;
IF LGATSERV = . THEN LGATSERV = 0;
IF GENESERV = . THEN GENESERV = 0;
IF MSDZSERV = . THEN MSDZSERV = 0;
IF ZREGSERV = . THEN ZREGSERV = 0;
IF NVACSERV = . THEN NVACSERV = 0;
IF SARSERV = . THEN SARSERV = 0;
* calculate total number of service units;
SUS = (BATPSERV + BATDSERV + DB2SERV + TSASSERV  + TNORSERV +
TINSSERV
     + LIFZSERV + GENZSERV + NVACSERV
     + GATESERV + KEKZSERV + LIFCSERV + LIFDSERV + GENDSERV +
KEKDSERV
     + LIFASERV + GENASERV + ZEOSSERV + SERVSERV + OTTPSERV + GRSSERV
     + OTHRSERV + VTAMSERV + ROSCSERV + MONTSERV + JES2SERV
     + LGATSERV + GENESERV + MSDZSERV + ZREGSERV + DB2PSERV + SARSERV
     + LIFESERV + LIFBSERV + LIFMSERV
);
FOOTNOTE "PEAKALL";
Y = 1;
PROC SORT; BY Y DATE;
RUN ;
DATA GETDATES;
SET EXTRACT;
BY Y;
IF FIRST.Y THEN X=1;
ELSE
IF LAST.Y THEN X=3;
 ELSE X=2;
IF X = 1 THEN
 CALL SYMPUT('D1',PUT(DATE,DATE7.));
ELSE
 IF X = 3 THEN
   CALL SYMPUT('D2',PUT(DATE,DATE7.));
RUN;
PROC SORT ; BY DATE DESCENDING SUS;
DATA OUTFILE;
SET GETDATES;
IF _N_ = 1 THEN DO;
FILE OUT;
FORMAT SYS $CHAR4.;
SYS = "SUS " ;
PUT SYS " " "&D1" "&D2";
END;
FORMAT SUS Z6.;
FILE OUT; PUT STARTIME SUS;
RUN;
PROC PRINT NOOBS SPLIT='*'  ;
TITLE "SERVICE UNITS BUSY HOURS FROM &D1 TO &D2";
FORMAT DATE DATE7.;
LABEL DATE = "DATE";
BY DATE;
VAR STARTIME SUS;
RUN;
/*
//EXTRACT EXEC PGM=TECJL43
//STEPLIB DD DSN=CSDTEC.MAST.BATCH.LOAD,DISP=SHR
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//PRINT23 DD DSN=&&BILBO,SPACE=(TRK,(2,2),RLSE),
// DISP=(,PASS),
// DCB=(RECFM=FB,LRECL=23,BLKSIZE=230)
//CARD01 DD DSN=&&FRODO,DISP=(OLD,DELETE)
//SORT   EXEC ZSORT
//SORTIN  DD DSN=&&BILBO,DISP=(OLD,DELETE)
//SORTOUT DD DSN=&&PIPPEN,SPACE=(TRK,(2,2),RLSE),
// DISP=(,PASS),
// DCB=(RECFM=FB,LRECL=23,BLKSIZE=230)
//SYSIN DD *
  SORT  FIELDS=(1,1,CH,A,9,4,CH,D),WORK=3
  RECORD TYPE=F,LENGTH=23
  END
//PRINT   EXEC PGM=TECJL44
//STEPLIB DD DSN=CSDTEC.MAST.BATCH.LOAD,DISP=SHR
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSOUT   DD SYSOUT=*
//PRINT23 DD SYSOUT=*,DCB=RECFM=FBA
//CARD01 DD DSN=&&PIPPEN,DISP=(OLD,DELETE)
/*


TECJL43 - PROGRAM TO CALCULATE WEIGHTINGS

 IDENTIFICATION DIVISION.
 PROGRAM-ID.                TECJL43.
 REMARKS                    CALCULATES PEAK HOUR FOR A SYSTEM.
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SPECIAL-NAMES.
     C01 IS TO-TOP-OF-PAGE.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT A100-CARDFILE  ASSIGN TO UR-S-CARD01.
     SELECT B100-PRINTFILE ASSIGN TO UT-S-PRINT23.
 DATA DIVISION.
 FILE SECTION.
 FD  A100-CARDFILE
     BLOCK CONTAINS 0 RECORDS
     LABEL RECORDS ARE STANDARD.
 01  A100-CARD-IN.
     05 A100-DATE     PIC X(7).
     05 FILLER        PIC X.
     05 A100-HOUR     PIC 99.
     05 FILLER        PIC X(7).
     05 A100-TRANS    PIC X(6).
 01  A100-CARD-IN2.
     05 A100-SYSTEM   PIC X(4).
     05 FILLER        PIC X.
     05 A100-DATE2    PIC X(14).
     05 FILLER        PIC X(4).
 FD  B100-PRINTFILE
     LABEL RECORDS ARE STANDARD.
 01  P-PRINTLINE1.
     05 B100-CARD-TYPE PIC X.
     05 B100-TIME      PIC 99.
     05 FILLER         PIC X(5).
     05 B100-SCORE     PIC 9999.
     05 FILLER         PIC X(11).
 01  P-PRINTLINE2.
     05 FILLER         PIC X.
     05 B100-SYSTEM    PIC XXXX.
     05 FILLER         PIC XXXX.
     05 B100-DATE      PIC X(14).
 WORKING-STORAGE SECTION.
 77  W-VERSION          PIC X(15)  VALUE "PROGRAM TECJL43".
 77  W-SUB              PIC S999 COMP SYNC VALUE +0.
 77  W-DATE-STORE       PIC X(7)    VALUE SPACES.
 77  W-SCORE-CARD-STORE PIC S99   COMP-3 VALUE +0.
 01  W-TIME.
     05  FILLER OCCURS 24.
        10 W-SCORE-CARD  PIC S9999     COMP-3.
 PROCEDURE DIVISION.
 010M-MAINLINE SECTION.
     OPEN INPUT  A100-CARDFILE.
     OPEN OUTPUT B100-PRINTFILE.
     MOVE 0 TO W-SUB.
     PERFORM 055D-INIT 24 TIMES.
     MOVE SPACES TO P-PRINTLINE1.
     READ A100-CARDFILE
       AT END
       CALL "X".
     MOVE "1" TO B100-CARD-TYPE.
     MOVE A100-SYSTEM TO B100-SYSTEM.
     MOVE A100-DATE2  TO B100-DATE.
     WRITE P-PRINTLINE1.
     MOVE SPACES TO P-PRINTLINE1.
 015D-READ SECTION.
     READ A100-CARDFILE
       AT END
       MOVE 0 TO W-SUB
       GO TO 015D-READ-EXIT.
     COMPUTE W-SUB = A100-HOUR + 1.
     IF A100-DATE NOT = W-DATE-STORE
        MOVE A100-DATE TO W-DATE-STORE
        MOVE 8 TO W-SCORE-CARD-STORE
     ELSE
        IF W-SCORE-CARD-STORE NOT = 0
           SUBTRACT 1 FROM W-SCORE-CARD-STORE.
     ADD W-SCORE-CARD-STORE TO W-SCORE-CARD (W-SUB).
     GO TO 015D-READ.
 015D-READ-EXIT.
     EXIT.
 030D-WRITE SECTION.
     ADD 1 TO W-SUB.
     MOVE "2" TO B100-CARD-TYPE.
     MOVE W-SUB TO B100-TIME.
     SUBTRACT 1 FROM B100-TIME.
     MOVE W-SCORE-CARD (W-SUB) TO B100-SCORE.
     WRITE P-PRINTLINE1.
     MOVE SPACES TO P-PRINTLINE1.
     IF W-SUB < 24
         GO TO 030D-WRITE.
 030D-WRITE-EXIT.
     EXIT.
 040D-END SECTION.
     CLOSE A100-CARDFILE
           B100-PRINTFILE.
     GOBACK.
 055D-INIT SECTION.
     ADD 1 TO W-SUB.
     MOVE 0 TO W-SCORE-CARD (W-SUB).
 055D-EXIT.
     EXIT.


TECJL44 - PRINT PROGRAM

 IDENTIFICATION DIVISION.
 PROGRAM-ID.                TECJL44.
 REMARKS                    PRINTS PEAK HOUR FOR A SYSTEM.
 ENVIRONMENT DIVISION.
 CONFIGURATION SECTION.
 SPECIAL-NAMES.
     C01 IS TO-TOP-OF-PAGE.
 INPUT-OUTPUT SECTION.
 FILE-CONTROL.
     SELECT A100-CARDFILE  ASSIGN TO UR-S-CARD01.
     SELECT B100-PRINTFILE ASSIGN TO UT-S-PRINT23.
 DATA DIVISION.
 FILE SECTION.
 FD  A100-CARDFILE
     BLOCK CONTAINS 0 RECORDS
     LABEL RECORDS ARE STANDARD.
 01  A100-CARD-IN.
     05 A100-CARD-TYPE PIC X.
     05 A100-TIME.
        10 A100-HR     PIC 99.
        10 FILLER      PIC X(5).
     05 A100-SCORE     PIC 9999.
     05 FILLER         PIC X(11).
 01  A100-CARD-IN2.
     05 FILLER         PIC X.
     05 A100-SYSTEM    PIC XXXX.
     05 FILLER         PIC XXXX.
     05 A100-DATE1     PIC X(7).
     05 A100-DATE2     PIC X(7).
 FD  B100-PRINTFILE
     LABEL RECORDS ARE STANDARD.
 01  B1-PRINT PIC X(133).
 WORKING-STORAGE SECTION.
 77  W-VERSION        PIC X(15)  VALUE "PROGRAM TECJL44".
 77  W-SUB            PIC S999 COMP SYNC VALUE +0.
 77  W-HR             PIC 99.
 01  P-PRINT1.
     05 FILLER        PIC X(33) VALUE "1".
     05 FILLER        PIC X(23) VALUE "PEAK HOUR ANALYSIS FOR".
     05 P1-SYSTEM     PIC XXXX.
     05 FILLER        PIC X(6) VALUE " FROM ".
     05 P1-DATE1      PIC X(7).
     05 FILLER        PIC X(4) VALUE " TO ".
     05 P1-DATE2      PIC X(7).
 01  P-PRINT2.
     05 FILLER        PIC X(3)  VALUE "0".
     05 FILLER        PIC X(19) VALUE "  RMF HOUR".
     05 FILLER        PIC X(19) VALUE "FREQUENCY WEIGHTING".
 01  P-PRINT3.
     05 P3-CC         PIC X(3) VALUE "0".
     05 P3-HR1        PIC 99.
     05 FILLER        PIC X(4)  VALUE ":30-".
     05 P3-HR2        PIC 99.
     05 FILLER        PIC X(18)  VALUE ":30   ".
     05 P3-SCORE      PIC 9999.
 PROCEDURE DIVISION.
 010M-MAINLINE SECTION.
     OPEN INPUT  A100-CARDFILE.
     OPEN OUTPUT B100-PRINTFILE.
     MOVE SPACES TO B1-PRINT.
     READ A100-CARDFILE
       AT END
       CALL "X".
     MOVE A100-SYSTEM TO P1-SYSTEM.
     MOVE A100-DATE1  TO P1-DATE1.
     MOVE A100-DATE2  TO P1-DATE2.
     WRITE B1-PRINT FROM P-PRINT1.
     WRITE B1-PRINT FROM P-PRINT2.
     MOVE SPACES TO B1-PRINT.
 015D-READ SECTION.
     READ A100-CARDFILE
       AT END
       GO TO 015D-READ-EXIT.
     IF A100-SCORE NOT = 0
         MOVE A100-HR TO P3-HR1
         MOVE A100-HR TO W-HR
         ADD 1 TO W-HR
         PERFORM 060D-HR2
         MOVE W-HR TO P3-HR2
         MOVE A100-SCORE TO P3-SCORE
         WRITE B1-PRINT FROM P-PRINT3
         MOVE " " TO P3-CC.
     GO TO 015D-READ.
 015D-READ-EXIT.
     EXIT.
 040D-END SECTION.
     CLOSE A100-CARDFILE
           B100-PRINTFILE.
     GOBACK.
 060D-HR2 SECTION.
     IF W-HR = 24 THEN MOVE 0 TO W-HR.
 060D-HR2-EXIT.
     EXIT.


SAMPLE OUTPUT

              PEAK HOUR ANALYSIS FOR SUS FROM 31AUG92 TO 22SEP93

  RMF HOUR         FREQUENCY WEIGHTING

10:30-11:30               1868
14:30-15:30               1742
09:30-10:30               1741
11:30-12:30               1115
15:30-16:30               1054
13:30-14:30               0783
08:30-09:30               0642
12:30-13:30               0232
16:30-17:30               0024
23:30-00:30               0009
00:30-01:30               0005
20:30-21:30               0005
02:30-03:30               0002
17:30-18:30               0002


John Larry
Performance Analyst (UK)                               c Xephon 1993

