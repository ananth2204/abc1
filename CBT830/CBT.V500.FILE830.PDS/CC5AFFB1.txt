Selective tape dataset control with RACF

From the perspective of dataset security the ideal situation with
RACF is to have the PROTECTALL and TAPEDSN features
activated. This protects all datasets whether on DASD or tape and
prevents undefined datasets from being accessed or created
without a RACF profile. Yet the impact on tape processing can be
a reason why PROTECTALL is not activated despite the obvious
advantages for disk datasets.

This is because some users (eg systems programmers) have a
regular need to read tapes containing datasets that are not defined
to RACF and it becomes tiresome to set up RACF profiles each
time. What's needed is a selective means of allowing 'foreign'
tape datasets to be read (but perhaps not written to) by the
appropriate users only.

The RACHECK post-processing exit can be used to achieve this
by detecting this situation and overriding the RACF decision to
allow the access. The example of ICHRCX02 shown below tests
a FACILITY class resource called
'INST.UNDEFINED.TAPEDSN' whenever an access attempt is
made to a tape dataset undefined to RACF.

According to the result of the FACILITY class profile check the
access to the tape dataset is permitted or not. The authority level
tested is copied from the original RACHECK. This means that a
RACF group (for example SYSPROGS) could be granted read
access to the FACILITY class profile in order to read undefined
tapes.

This exit does not override protected (ie defined) tape datasets
which are still secured. However, the exit code could be modified
to allow selective overrides for protected tape datasets during the
implementation of PROTECTALL or TAPEDSN, which
otherwise can be extremely difficult to activate without disruption.

It should be noted that when a tape dataset is created as new
rather than updated the RACDEF post exit (ICHRDX02) needs
to be used to allow any overrides. This has comparable logic and
is shown below but is not required unless undefined tapes are to
be created. In this case UPDATE access is tested to the
FACILITY class profile.

Full auditability is provided by the RACHECK since the
FACILITY class profile can specify logging each time it is
referenced. Note that IBM recommends the activation of
TAPEVOL as well as TAPEDSN for those who are migrating to
tape dataset protection with PROTECTALL.

With careful use of these exits, installations will be able to take
advantage of RACF's tape protection features without causing the
manual intervention that is often required to allow access to
vendors' software and other undefined tapes. This has deterred
some RACF sites from protecting their tapes properly in the past.

EXIT ICHRCX02

************************************************************
* MODULE : ICHRCX02, RE-ENTRANT, AUTHORIZED
* RACF RACHECK POST PROCESSING EXIT
* USED TO MODIFY STANDARD TAPEDSN PROCESSING TO PERMIT USERS
* TO ACCESS UNDEFINED TAPES ONLY IF THEY HAVE RACF ACCESS
* (AT THE SAME LEVEL AS FOR THE TAPEDSN) TO THE FACILITY
* CLASS RESOURCE 'INST.UNDEFINED.TAPEDSN'.
* RECURSIVE ENTRY WILL OCCUR DUE TO THE RACHECK IN THE EXIT
* BUT WILL NOT CAUSE A LOOP AS THE CLASS NAME IS NOT DATASET.
************************************************************
ICHRCX02 CSECT
ICHRCX02 AMODE 31
ICHRCX02 RMODE ANY
         STM   R14,R12,12(R13)   SAVE REGISTERS
         LR    R12,R15           ADDRESSABILITY
         LR    R5,R1             SAVE PARM ADDR
         USING ICHRCX02,R12
         GETMAIN R,LV=WORKLEN    GETMAIN DYNAMIC AREA
         LR    R10,R1            R10 -> DYNAMIC AREA
         USING WORKAREA,R10      ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLER'S SAVEAREA ADDRESS
         ST    R10,8(R13)        SAVE SAVEAREA ADDRESS
         LR    R13,R10           SAVE AREA PTR
* ADDRESS PARAMETER LIST, CHECK RACF ABEND CODE
         USING RCXPL,R5          ADDR PARM LIST
         L     R1,RCXCOMP        ADDR RCOMP FROM RACHECK
         CLC   0(4,R1),=F'0'     IS IT ZERO?
         BNE   EXIT              NO, RACF WILL ABEND
* CHECK IF USER HAS ACCESS TO PROTECTED RACF RESOURCE
         L     R1,RCXRCODE       ADDR RCODE FROM RACHECK
         CLC   0(4,R1),=F'0'     IS IT ZERO?
         BE    EXIT              YES, USER HAS ACCESS OK
* RACF RC > 0, CHECK THE CLASS FOR BEING A DATASET
         L     R1,RCXCLASS       ADDR CLASS FROM RACHECK
         CLI   0(R1),X'07'       LENGTH OF CLASS = 7
         BNE   EXIT              NO, NOT A DATASET
         CLC   1(7,R1),=CL7'DATASET'  CHECK NAME
         BNE   EXIT              NO, NOT A DATASET
* BUT IS IT A TAPE DATASET AS WELL
         L     R1,RCXFLAG3       ADDR FLAG BYTE 3
         TM    0(R1),RCXDTYPT    IS IT DSTYPE=T
         BZ    EXIT              NO, NOT A TAPE DATASET
* SHOW TAPE DATASET NAME
         MVC   WTO2(WTO2L),WTO1   COPY WTO
         L     R1,RCXENORP        RESOURCE NAME ADDR
         MVC   WTO2+4+11(44),0(R1) COPY RESOURCE NAME
         WTO   MF=(E,WTO2)        ISSUE WTO
* SAVE ACCESS LEVEL USED FOR LATER FACILITY CLASS CHECK IN R7
         L     R1,RCXFLAG2       LOAD ADDR OF ACCESS LEVEL BITS
         XR    R7,R7             CLEAR R7
         IC    R7,0(R1)          SAVE ACCESS FOR TEST
* TAPE DATASET, IS IT PROTECTED ALREADY BY A PROFILE
         L     R1,RCXRCODE       ADDR RCODE FROM RACHECK
         CLC   0(4,R1),=F'4'     IS IT FOUR?
         BE    UNDEF             YES, DATASET UNDEFINED
         CLC   0(4,R1),=F'8'     IS IT EIGHT?
         BE    EXIT              YES, DATASET PROTECTED
         B     EXIT              OTHER, LEAVE ALONE
* UNDEFINED TAPE DATASET, ISSUE FACILITY CLASS RESOURCE CHECK
UNDEF    EQU   *
         LA    R8,RESU           RESOURCE NAME (UNDEF)
         LA    R9,RACWORK        RACROUTE WORK AREA
         MVC   RX2(RX2L),RX1     INITIALIZE RE-ENTRANT AREA
         WTO   'ICHRCX02 - TAPE DATASET UNDEFINED TO RACF',ROUTCDE=11
         RACROUTE REQUEST=AUTH,WORKA=(9),                              X
               ENTITY=((8)),ATTR=(7),MF=(E,RX2)
* TEST RESULT OF RACHECK TO DETERMINE IF USER CAN USE UNDEF TAPE
         LTR   R15,R15           TEST RC FROM SAF
         BNZ   FAILU             NOT ALLOWED TO UNDEFINED TAPE
         B     PERMU             ALLOWED TO UNDEFINED TAPE
* PERMIT THE ACCESS TO THIS UNDEFINED TAPE DATASET
PERMU    EQU   *
         WTO   'ICHRCX02 - PERMITTED USE OF UNDEF TAPEDSN',ROUTCDE=11
         L     R1,RCXLCNTL       ADDR LOGGING AREA
         MVC   0(4,R1),=F'4'     SET TO 4, FORCE LOGGING
         L     R1,RCXRCODE       ADDR RCODE FROM RACHECK
         MVC   0(4,R1),=F'0'     SET RETURN CODE 0 (PERMIT ACCESS)
         L     R1,RCXREASN       ADDR REASN FROM RACHECK
         MVC   0(4,R1),=F'0'     SET REASON CODE 0 (NORMAL)
         B     EXIT              AND EXIT
* FAIL THE ACCESS TO THIS UNDEFINED TAPE DATASET (LEAVE ORIGINAL RC)
FAILU    EQU   *
         WTO   'ICHRCX02 - FAILED ACCESS TO UNDEF TAPEDSN',ROUTCDE=11
         B     EXIT              AND EXIT
* QUIT EXIT WITH RC ZERO (RCODE IN EXIT LIST MAY BE MODIFIED)
EXIT     EQU   *
         L     R13,SAVEAREA+4    RESTORE R13
         FREEMAIN R,LV=WORKLEN,A=(10) FREE DYNAMIC AREA
         LA    R15,0             RETURN CODE TO R15 (ZERO)
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 TO R12
         BR    R14               RETURN
         LTORG
* CONSTANTS, NON-MODIFIABLE
RESU     DC    CL39'INST.UNDEFINED.TAPEDSN'  RESOURCE NAME UNDEFINED
RX1      RACROUTE REQUEST=AUTH,CLASS='FACILITY',MF=L
WTO1     WTO   'ICHRCX02 - MSG UP TO LEN 50 HERE                       X
                      ',ROUTCDE=11,MF=L
* PROGRAM DATA AREA
WORKAREA DSECT
SAVEAREA DS    18F               SAVE AREA
PAD      DS    0F
RX2      RACROUTE REQUEST=AUTH,CLASS='FACILITY',MF=L
RX2L     EQU   *-RX2
WTO2     WTO   'ICHRCX02 - MSG UP TO LEN 50 HERE                       X
                      ',ROUTCDE=11,MF=L
WTO2L    EQU   *-WTO2
RACWORK  DS    CL512             RACROUTE WORK AREA
WORKLEN  EQU   *-WORKAREA
* DSECTS
         ICHRCXP                 RACHECK EXIT PARM MAPPING
         YREGS
         END

EXIT ICHRDX02

************************************************************
* MODULE : ICHRDX02, RE-ENTRANT, AUTHORIZED
* RACF RACDEF POST PROCESSING EXIT
* USED TO MODIFY STANDARD TAPEDSN PROCESSING TO PERMIT USERS
* TO DEFINE UNDEFINED TAPE DATASETS ONLY IF THEY HAVE RACF
* ACCESS (UPDATE LEVEL IS TESTED) TO THE FACILITY CLASS
* RESOURCE 'INST.UNDEFINED.TAPEDSN'.
* THIS EXIT COMPLEMENTS THE ICHRCX02 RACHECK POST EXIT.
************************************************************
ICHRDX02 CSECT
ICHRDX02 AMODE 31
ICHRDX02 RMODE ANY
         STM   R14,R12,12(R13)   SAVE REGISTERS
         LR    R12,R15           ADDRESSABILITY
         LR    R5,R1             SAVE PARM ADDR
         USING ICHRDX02,R12
         GETMAIN R,LV=WORKLEN    GETMAIN DYNAMIC AREA
         LR    R10,R1            R10 -> DYNAMIC AREA
         USING WORKAREA,R10      ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLER'S SAVEAREA ADDRESS
         ST    R10,8(R13)        SAVE SAVEAREA ADDRESS
         LR    R13,R10           SAVE AREA PTR
* ADDRESS PARAMETER LIST, CHECK RACF ABEND CODE
         USING RDXPL,R5          ADDR PARM LIST
         L     R1,RDXCOMP        ADDR RCOMP FROM RACDEF
         CLC   0(4,R1),=F'0'     IS IT ZERO?
         BNE   EXIT              NO, RACF WILL ABEND
* CHECK IF USER HAS DEFINE TO PROTECTED RACF RESOURCE
         L     R1,RDXRCODE       ADDR RCODE FROM RACDEF
         CLC   0(4,R1),=F'0'     IS IT ZERO?
         BE    EXIT              YES, USER HAS RACDEF OK
* RACF RC > 0, CHECK THE CLASS FOR BEING A DATASET
         L     R1,RDXCLASS       ADDR CLASS FROM RACDEF
         CLI   0(R1),X'07'       LENGTH OF CLASS = 7
         BNE   EXIT              NO, NOT A DATASET
         CLC   1(7,R1),=CL7'DATASET'  CHECK NAME
         BNE   EXIT              NO, NOT A DATASET
* BUT IS IT A TAPE DATASET AS WELL
         L     R1,RDXFLAG2       ADDR FLAG BYTE 2
         TM    0(R1),RDXDSTYT    IS IT DSTYPE=T
         BZ    EXIT              NO, NOT A TAPE DATASET
* SHOW TAPE DATASET NAME
         MVC   WTO2(WTO2L),WTO1   COPY WTO
         L     R1,RDXENTIT        RESOURCE NAME ADDR
         MVC   WTO2+4+11(44),0(R1) COPY RESOURCE NAME
         WTO   MF=(E,WTO2)        ISSUE WTO
* TAPE DATASET, IS IT RETURN CODE 8 (RACDEF NOT AUTHORIZED)
         L     R1,RDXRCODE       ADDR RCODE FROM RACDEF
         CLC   0(4,R1),=F'8'     IS IT EIGHT?
         BNE   EXIT              NO, LEAVE ALONE
         L     R1,RDXREAS        ADDR REASON FROM RACDEF
         CLC   0(4,R1),=F'4'     IS IT FOUR?
         BE    UNDEF             YES, DATASET UNDEFINED
         CLC   0(4,R1),=F'0'     IS IT ZERO?
         BE    EXIT              YES, DATASET PROTECTED
         B     EXIT              OTHER, LEAVE ALONE
* UNDEFINED TAPE DATASET, ISSUE FACILITY CLASS RESOURCE CHECK
UNDEF    EQU   *
         WTO   'ICHRDX02 - TAPE DATASET UNDEFINED TO RACF',ROUTCDE=11
         LA    R8,RESU           RESOURCE NAME (UNDEF)
         LA    R9,RACWORK        RACROUTE WORK AREA
         MVC   RX2(RX2L),RX1     INITIALIZE REENTRANT AREA
         RACROUTE REQUEST=AUTH,WORKA=(9),                              X
               ENTITY=((8)),ATTR=UPDATE,MF=(E,RX2)
* TEST RESULT OF RACDEF TO DETERMINE IF USER CAN RDEF UNDEF TAPE
         LTR   R15,R15           TEST RC FROM SAF
         BNZ   FAILU             NOT ALLOWED TO UNDEFINED TAPE
         B     PERMU             ALLOWED TO UNDEFINED TAPE
* PERMIT THE RACDEF TO THIS UNDEFINED TAPE DATASET
PERMU    EQU   *
         WTO   'ICHRDX02 - PERMITTED RACDEF UNDEF TAPEDSN',ROUTCDE=11
         L     R1,RDXRCODE       ADDR RCODE FROM RACDEF
         MVC   0(4,R1),=F'0'     SET RETURN CODE 0 (PERMIT RACDEF)
         L     R1,RDXREAS        ADDR REASN FROM RACDEF
         MVC   0(4,R1),=F'0'     SET REASON CODE 0 (NORMAL)
         B     EXIT              AND EXIT
* FAIL THE RACDEF TO THIS UNDEFINED TAPE DATASET (LEAVE ORIGINAL RC)
FAILU    EQU   *
         WTO   'ICHRDX02 - FAILED RACDEF TO UNDEF TAPEDSN',ROUTCDE=11
         B     EXIT              AND EXIT
* QUIT EXIT WITH RC ZERO (RCODE IN EXIT LIST MAY BE MODIFIED)
EXIT     EQU   *
         L     R13,SAVEAREA+4    RESTORE R13
         FREEMAIN R,LV=WORKLEN,A=(10) FREE DYNAMIC AREA
         LA    R15,0             RETURN CODE TO R15 (ZERO)
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 TO R12
         BR    R14               RETURN
         LTORG
* CONSTANTS, NON-MODIFIABLE
RESU     DC    CL39'INST.UNDEFINED.TAPEDSN'  RESOURCE NAME UNDEFINED
RX1      RACROUTE REQUEST=AUTH,CLASS='FACILITY',MF=L
WTO1     WTO   'ICHRDX02 - MSG UP TO LEN 50 HERE                       X
                      ',ROUTCDE=11,MF=L
* PROGRAM DATA AREA
WORKAREA DSECT
SAVEAREA DS    18F               SAVE AREA
RX2      RACROUTE REQUEST=AUTH,CLASS='FACILITY',MF=L
RX2L     EQU   *-RX2
WTO2     WTO   'ICHRDX02 - MSG UP TO LEN 50 HERE                       X
                      ',ROUTCDE=11,MF=L
WTO2L    EQU   *-WTO2
RACWORK  DS    CL512             RACROUTE WORK AREA
WORKLEN  EQU   *-WORKAREA
* DSECTS
         ICHRDXP                 RACDEF EXIT PARM MAPPING
         YREGS
         END




