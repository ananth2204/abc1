Checking private/CSA storage size

The amount of private and CSA virtual storage available in MVS
will vary based on the requirements of other storage areas in the
system. The private area basically gets what's left over after
carving out room for the nucleus, PLPA, FLPA, MLPA, SQA,
and CSA, which is determined at IPL time. CSA size, both above
and below the 16-megabyte line, is requested via a parameter in
IEASYS, but it gets additional space because of rounding on a 1-
megabyte boundary. This additional space can end up being vital
to fulfilling CSA needs, even though the actual amount requested
is a lower value. This potentially leads to a situation where the
additional CSA allocation is required for normal operations, but is
not explicitly requested. On my system, 2 megabytes of below-
the-line CSA was being requested but after rounding, 2.6
megabytes was available. In reality, 2.2 to 2.3 megabytes was
generally used. It's possible to request an amount close to what
will be available after rounding, say 2.5 megabytes in this case,
but then there's a risk of taking 1 megabyte away from private if
another area such as PLPA grows. Since CSA filling up below
the line results in immediate system failure, it's best to be
proactive in managing the availability of this resource.

The reason for variability in the size of private and CSA becomes
apparent when looking at how the size of the other areas are
determined. Although the sizes of the nucleus, PLPA, FLPA, and
MLPA are constant after IPL, they can vary from one IPL to
another because of maintenance, installation of new products, or
some other system-related change. SQA gets allocated on a 64K
boundary based on a minimum requirement plus an amount
requested in IEASYS. This amount remains constant unless the
IEASYS value is changed. Since SQA and ESQA can spill over
to CSA and ECSA, they do have the potential to impact CSA
requirements and emphasize the need for proper sizing. I've found
the most likely variable to affect the size of CSA and private
during any IPL is LPA. Any maintenance applied to MVS, such
as a CBPDO or PUT tape, has the potential to affect PLPA size.
I've also installed new products which put modules into PLPA or
used MLPA for temporary testing which increase LPA storage
requirements.

Knowing the stability of MVS depends on having enough CSA
available, it's wise to monitor percentage use and determine a
minimal allocation level. Likewise, the requirements of some jobs
in the system will dictate that the private area is available at a
minimum level. One example might be a CICS address space
with a large REGION parameter coded. I was always concerned
the right combination of events could lead to the size of CSA or
private area dropping below a tolerable value and not necessarily
being recognized immediately.

To avoid any surprises, an Assembler program was written to
check the size of CSA, ECSA, and the private area at IPL time.
The program, called CHEKSTOR, does a comparison of actual
values against requested values. If the actual amount for any one
of the three is less than that requested, a message is output to the
console for immediate attention. The program has a default value
assigned internally to the requested amount for CSA, ECSA, and
the private area which can be overridden via a PARM value. The
program is executed by a simple started task like this:

//CHEKSTOR PROC CSA=2500,ECSA=14500,PVT=11264
//STEP1    EXEC PGM=CHEKSTOR,PARM='CSA=&CSA,ECSA=&ECSA,PVT=&PVT'

PARM options are:

o      CSA - CSA size desired, 4 decimal digits

o      PVT - private region size desired, 5 decimal digits

o      ECSA - ECSA size desired, 5 decimal digits.

This quick process is especially valuable on a test system where
most maintenance and new product installations take place before
going into production. By catching a value dropping below the
tolerable level on a test system, it is much easier to decide how the
situation will be resolved before it shows up and jeopardizes
stability on a production system. For example, if the private size
drops, it might dictate lowering the REGION parameter on a few
select jobs to avoid abends. If ECSA drops, it would just indicate
a need to raise the requested value in IEASYS, since above the
line virtual storage for this purpose is readily available. The most
difficult situation would generally be a lack of CSA below the
line. This could entail making a decision to pull selected modules
from an LPA area to make that storage available to CSA. I went
through an analysis at one point which indicated some modules in
LPA weren't used enough to justify having them there. This is
usually a good exercise to go through when MVS and
accompanying software products are upgraded. The use of
selected areas of virtual storage sometimes gets carried forward
from one release to another even though the reason behind it no
longer applies.

CHEKSTOR SOURCE CODE

R3        EQU   3                   GDA BASE
R4        EQU   4                   WORK
R5        EQU   5                   WORK
R8        EQU   8                   WORK
R9        EQU   9                   CVT BASE
R10       EQU   10                  PROGRAM BASE
CHEKSTOR  CSECT
CHEKSTOR  AMODE 31                  GDA IS ABOVE THE LINE
          STM   14,12,12(13)        SAVE REGS
          LR    R10,15              SAVE ENTRY ADDRESS
          USING CHEKSTOR,R10        ESTABLISH ADDRESSABILITY
          LA    R4,REGSAVE          LOAD REGSAVE ADDRESS
          ST    R4,8(13)            STORE OUR REGSAVE ADDRESS
          ST    13,4(R4)            STORE CALLING REGSAVE ADDRESS
          LR    13,R4               LOAD OUR REGSAVE
          L     R4,0(1)             GET PARM LENGTH ADDRESS
          LH    R5,0(R4)            LENGTH OF PARM DATA
          LTR   R5,R5               IS IT ZERO?
          BZ    CHEKS030            YES, NO PARMS
          LA    R5,2(R5,R4)         END OF PARM DATA
          LA    R4,1(,R4)           POSITION FOR COMPARE
CHEKS000  LA    R4,1(,R4)           POSITION FOR COMPARE
          CLC   0(4,R4),=C'CSA='    CSA VALUE?
          BE    CHEKS010            YES, SAVE IT
          CLC   0(5,R4),=C'ECSA='   ECSA VALUE?
          BE    CHEKS015            YES, SAVE IT
          CLC   0(4,R4),=C'PVT='    PRIVATE VALUE?
          BE    CHEKS020            YES, SAVE IT
CHEKS005  BCTR  R4,0                SUBTRACT 1 FROM POSITION
          MVC   WTOBPRM1+32(6),0(R4) MOVE PARM INTO MESSAGE
          WTO   MF=(E,WTOBPRM1)     WRITE BAD PARM MESSAGE
          ABEND 996                 ABEND AND QUIT
CHEKS010  LA    R4,4(R4)            POINT TO CSA AMOUNT
          TRT   0(4,R4),TRTNUM      IS IT NUMERIC?
          BC    7,CHEKS005          IF NO, BAD PARM
          MVC   CSASAVE(4),0(R4)    MOVE NUMBER TO CSA SAVE AREA
          LA    R4,4(R4)            JUMP PAST CSA AMOUNT
          B     CHEKS025            GO CHECK FOR PARM END
CHEKS015  LA    R4,5(R4)            POINT TO ECSA AMOUNT
          TRT   0(5,R4),TRTNUM      IS IT NUMERIC?
          BC    7,CHEKS005          IF NO, BAD PARM
          MVC   ECSASAVE(5),0(R4)   MOVE NUMBER TO ECSA SAVE AREA
          LA    R4,5(R4)            JUMP PAST ECSA AMOUNT
          B     CHEKS025            GO CHECK FOR PARM END
CHEKS020  LA    R4,4(R4)            POINT TO PVT AMOUNT
          TRT   0(5,R4),TRTNUM      IS IT NUMERIC?
          BC    7,CHEKS005          IF NO, BAD PARM
          MVC   PVTSAVE(5),0(R4)    MOVE NUMBER TO PVT SAVE AREA
          LA    R4,5(R4)            JUMP PAST PVT AMOUNT
CHEKS025  CR    R4,R5               AT END?
          BE    CHEKS030            IF YES, GO PROCESS
          B     CHEKS000            IF NO, CHECK NEXT PARM
CHEKS030  PACK  PPVT,PVTSAVE        PACK PVT FOR COMPARE
          PACK  PCSA,CSASAVE        PACK CSA FOR COMPARE
          PACK  PECSA,ECSASAVE      PACK ECSA FOR COMPARE
          L     R9,16               CVT ADDRESS
          USING CVT,R9
          L     R3,CVTGDA           GLOBAL DATA AREA ADDRESS
          USING GDA,R3
          L     R8,GDACSASZ         LOAD CSA SIZE
          SRL   R8,10               SHIFT TO K VALUE
          CVD   R8,WKFLD0           CONVERT CSA SIZE TO DECIMAL
          MVC   WTOBVALU+12,=C' CSA' SET MESSAGE TEXT IN CASE USED
          MVC   WTOBVALU+49(4),CSASAVE SET MESSAGE VALUE
          CP    WKFLD1,PCSA         IS CSA REQUESTED LESS THAN ACTUAL?
          BNL   CHEKS035            IF YES, IT'S OK
          BAL   R8,CHEKS050         IF NO, GO PUT MESSAGE ON CONSOLE
CHEKS035  L     R8,GDAPVTSZ         LOAD PRIVATE REGION SIZE
          SRL   R8,10               SHIFT TO K VALUE
          CVD   R8,WKFLD0           CONVERT PVT SIZE TO DECIMAL
          MVC   WTOBVALU+12,=C' PVT' SET MESSAGE TEXT IN CASE USED
          MVC   WTOBVALU+48(5),PVTSAVE SET MESSAGE VALUE
          CP    WKFLD1,PPVT         IS PVT REQUESTED LESS THAN ACTUAL?
          BNL   CHEKS040            IF YES, IT'S OK
          BAL   R8,CHEKS050         IF NO, GO PUT MESSAGE ON CONSOLE
CHEKS040  L     R8,GDAECSAS         LOAD ECSA SIZE
          SRL   R8,10               SHIFT TO K VALUE
          CVD   R8,WKFLD0           CONVERT ECSA SIZE TO DECIMAL
          MVC   WTOBVALU+12,=C'ECSA' SET MESSAGE TEXT IN CASE USED
          MVC   WTOBVALU+48(5),ECSASAVE SET MESSAGE VALUE
          CP    WKFLD1,PECSA        IS ECSA REQUESTED LESS THAN ACTUAL?
          BNL   CHEKS045            IF YES, IT'S OK
          BAL   R8,CHEKS050         IF NO, GO PUT MESSAGE ON CONSOLE
CHEKS045  L     13,REGSAVE+4        RELOAD SAVE ADDRESS
          LM    14,12,12(13)        RELOAD REGS
          LA    15,0                SET RETURN CODE TO ZERO
          BR    14                  PROCESSING COMPLETE
CHEKS050  UNPK WTOBVALU+29(5),WKFLD1 PUT ACTUAL VALUE INTO MESSAGE
          OI   WTOBVALU+33,X'F0'    MAKE LAST CHARACTER PRINTABLE
CHEKS055  WTOR  MF=(E,WTOBVALU)     WRITE MESSAGE TO CONSOLE
          WAIT  ECB=ECB1            WAIT FOR REPLY
          MVC   ECB1,X'00000000'    RESET ECB IN CASE USED AGAIN
          CLC   REPLY(2),=C'OK'     WAS REPLY 'OK'
          BNE   CHEKS055            IF NOT, MAKE SURE THEY'RE THINKING
          BR    R8                  GO BACK TO WHERE WE CAME FROM
          LTORG
TRTNUM    DC    256XL1'FF'          TRT TABLE TO CHECK NUMERICS
          ORG   TRTNUM+C'0'
          DC    XL10'00'
          ORG
REGSAVE   DS    18F                 REGISTER SAVE AREA
CSASAVE   DC    C'2500'             DEFAULT CSA REQUEST SIZE
ECSASAVE  DC    C'14500'            DEFAULT ECSA REQUEST SIZE
PVTSAVE   DC    C'11264'            DEFAULT PRIVATE REGION REQUEST SIZE
PCSA      DS    PL3                 PACKED CSA REQUEST SIZE
PECSA     DS    PL3                 PACKED ECSA REQUEST SIZE
PPVT      DS    PL3                 PACKED PRIVATE REGION REQUEST SIZE
WKFLD0    DS    0D                  DECIMAL CONVERT WORK FIELD
          DS    F
WKFLD1    DS    F                   DECIMAL COMPARE WORK FIELD
REPLY     DS    CL2                 WTOR REPLY AREA
ECB1      DC    F'0'                WTOR ECB
WTOBPRM1  WTO   '* BAD PARM DATA STARTING AT XXXXXX *',MF=L
WTOBVALU  WTOR  'XXXX AVAILABLE-> YYYYY, REQUESTED->  ZZZZ, ACKNOWLEDGE-
                WITH OK AND INFORM SYSTEMS SUPPORT',MF=L,REPLY,2,ECB1, -
               ROUTCDE=(1,2)
         CVT   DSECT=YES,LIST=NO
         IHAGDA
         END    CHEKSTOR


Ernie Ishman
Manager Systems Support
Geisinger System Services (USA)                                               c

