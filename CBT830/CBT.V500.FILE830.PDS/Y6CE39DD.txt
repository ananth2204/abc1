Console recovery using the SCSR

Although it happens infrequently, the failure of an MVS master
console without having passed control to a secondary console
can cause an undesirable system outage.  Even though the
outage may not occur immediately, circumstances will
eventually dictate the need to recover the master console (eg
master console WTO buffers fill up or you require a master
console only command).  The MVS Subsystem Console
Service Routine (SCSR) can be used to recover from this
situation and prevent a costly re-IPL.

Two conditions must be satisfied for the program SCSRCONS
to make a successful recovery from the type of scenario
described above.  The MVS system that has lost access to its
master console must have at least one secondary console still
functional and there must be at least one available subsystem-
allocatable console (the program comments discuss the
requirements of defining subsystem-allocatable consoles).

The SCSR is used to obtain an available subsystem console.
The SCSR parameter list, mapped by macro IEZVG100, is
used to inform the SCSR of the type of request being made.
Once the subsystem console has been obtained, the SCSR is
called again to set the acquired subsystem console as a pseudo
master console.

A pseudo master console has the ability to issue a subset of the
master console commands (ie commands that require master
console authority).  Some of the master console commands that
are eligible to be issued through a pseudo master console
include the DUMP command, the TRACE command with MT,
and most importantly for our discussion here, the VARY
cuu,MSTCONS command.

The SCSR is also used to set the subsystem console protocol to
be used for issuing commands and monitoring messages.  For
the subsystem console in this program, type-1 protocol is used
indicating that the subsystem console will use SVC 34 and
SVC 35 communication.

The program allows an initial parameter to be passed which, if
used, is the first command issued through the subsystem
console that will be obtained.  For example, the EXEC card for
a batch job might be as follows:

      //STEP1   EXEC PGM=SCSRCONS,PARM='D J,L'

This would cause the command 'D J,L' to be issued
immediately after the subsystem console has been obtained.

You are not required to pass an initial command to the program
and, whether an initial command is passed or not, once the
program is up and running commands can be passed to the
program with a modify console command.  For example, the
following command could be entered to force a master console
switch (you must include the angle brackets):

      F jobname,CMD=<V cuu,MSTCONS>

The simplest way of making the program available for use in
emergency situations would be to install the two load modules,
SCSRCONS and SCSRSSI1, into a system LINKLIST library
and place a start-up procedure in SYS1.PROCLIB.  The
following SCSRCONS procedure could be used:

      //SCSRCONS  PROC CMD=
      //SCSRCONS  EXEC PGM=SCSRCONS,TIME=1440,
      //          PARM='&CMD'

If access is lost to your system master console without control
being passed to an active secondary console, the following
command could be entered at an active console:

      S SCSRCONS,CMD='V cuu,MSTCONS'

where cuu is the unit address of an active secondary console.
This would cause the console cuu to become the active master
console without removing the pseudo master console authority
of the subsystem console.

The VARY cuu,MSTCONS command is issued through the
subsystem console which has sufficient authority as a pseudo
master console to establish a new master console.  By
performing this operation the master console has been
recovered without the IPL that would otherwise have been
required if a similar utility was not available.

SCSRCONS PROGRAM

SCSRCONS CSECT
* SCSRCONS IS THE DRIVER PROGRAM FOR A SUBSYSTEM NAMED 'SSIT'.  THIS
* PROGRAM ESTABLISHES A SUBSYSTEM ENVIRONMENT THAT MONITORS SUBSYSTEM
* FUNCTION CODE 9 REQUESTS.  IT ALSO ALLOCATES A SUBSYSTEM CONSOLE IN
* PSEUDO MASTER CONSOLE MODE TO ALLOW THE ENTRY OF A SUBSET OF MASTER
* CONSOLE COMMANDS THAT WOULD NOT BE PERMITTED FROM A CONSOLE OF LESSER
* AUTHORITY (EG. - V CUU,MSTCONS).
*   ATTRIBUTES    - RENT,AC(1)
* THE PROGRAM CAN BE RUN AS EITHER A STARTED TASK OR BATCH JOB WITH THE
* FOLLOWING EXEC STATEMENT
*  //STEP1   EXEC PGM=SCSRCONS,PARM='&CMD'
* WHERE THE PARM IS INCLUDED TO PROVIDE FOR AN OPTIONAL COMMAND TO BE
* ISSUED AT PROGRAM STARTUP.
*  - EG. - //S1 EXEC PGM=SCSRCONS - THIS SETS UP THE SUBSYSTEM
* ENVIRONMENT AND ALLOCATES A SUBSYSTEM CONSOLE BUT DOES NOT ISSUE A
* COMMAND
*  - EG. - //S1 EXEC PGM=SCSRCONS,PARM='V 111,MSTCONS' - THIS SETS UP
* THE SUBSYSTEM ENVIRONMENT, ALLOCATES A SUBSYSTEM CONSOLE, AND ISSUES
* THE COMMAND 'V 111,MSTCONS' THROUGH THAT CONSOLE WHEN THE PROGRAM IS
* STARTED.  A SUBSYSTEM ALLOCATABLE CONSOLE MUST BE AVAILABLE.
* DEPENDING ON THE LEVEL OF MVS, THIS IS DONE IN ONE OF TWO WAYS.
* 1. IN MVS/XA 2.2.0 THE FOLLOWING CONSOLE DEFINITION IS ADDED TO THE
* CONSOLXX MEMBER OF SYS1.PARMLIB - CONSOLE DEVNUM(SUBSYSTEM)
* 2. PRIOR TO MVS/XA 2.2.0 THE FOLLOWING CONSOLE DEFINITION IS ADDED TO
* THE I/O GEN DECK BEFORE PERFORMING AN I/O GEN
* - LABEL    CONSOLE   TYPE=JES
* THE CREATION OF AN SSCVT CONTROL BLOCK. THIS CAN BE DONE BY PLACING
* THE FOLLOWING ENTRY IN THE IEFSSNXX MEMBER OF SYS1.PARMLIB - SSIT
* OR BY ALLOWING THE SCSRCONS PROGRAM TO BUILD IT ON THE FLY.
*   MACRO LIBS    - SYS1.MACLIB
*                   SYS1.AMODGEN
* THE PROGRAM IS TERMINATED WITH THE HALT COMMAND. - EG. - P JOBNAME
* IF THE PROGRAM IS CANCELLED OR NOT HALTED NORMALLY, SOME GETMAINED
* STORAGE WILL NOT BE FREED.  COMMANDS CAN BE ENTERED, THROUGH THE
* SUBSYSTEM CONSOLE. WHILE THE TASK IS ACTIVE VIA THE FOLLOWING COMMAND
* F JOBNAME,CMD=<COMMAND>
* - EG. - F SCSRCONS,CMD=<D C,L>
* THE ABOVE MODIFY COMMAND WILL CAUSE THE 'D C,L' COMMAND TO BE ISSUED
* THROUGH THE SUBSYSTEM CONSOLE
         $REQU
         STM   R14,R12,12(R13)         SAVE INCOMING ENVIRONMENT
         LR    R10,R15                 SET UP MODULE ...
         USING SCSRCONS,R10               ADDRESSABILITY
BEGIN    GETMAIN RU,LV=WORKLEN,SP=245  GET WORKAREA STORAGE
         LTR   R15,R15                 O.K.?
         BNZ   GETERR01                NO - ABEND
         LR    R12,R1                  SAVE STORAGE ADDRESS
         USING WORKAREA,R12            SET ADDRESSABILITY
         MODESET MODE=SUP,KEY=ZERO     GET PROPERLY AUTHORIZED
         ST    R13,SAVEAREA+4          SAVE PREVIOUS SAVEAREA
*   EXTRACT ANY INCOMING PARAMETERS
         XC    CMD(4),CMD              CLEAR 4 BYTES
         L     R1,24(,R13)             RESTORE INCOMING R1
         SR    R5,R5                   CLEAR R5
         L     R4,0(,R1)               GET PARM ADDRESS
         LH    R5,0(,R4)               GET PARM LENGTH
         LTR   R5,R5                   ANY PARMS?
         BZ    NOPARM                  NO - DON'T BUILD COMMAND
         STH   R5,PARMLEN              SAVE PARM LENGTH
         LA    R4,2(,R4)               POINT PAST LENGTH
         BCTR  R5,0                    REDUCE BY ONE
         EX    R5,PARMMOVE             SAVE COMMAND
         A     R5,=F'5'                GET COMMAND LENGTH
         STH   R5,CMD                  SAVE LENGTH
NOPARM   EQU   *
         LA    R13,SAVEAREA            GET NEW SAVEAREA ADDRESS
SSCTINIT EQU   *
*    CHECK IF SUBSYSTEM INTERFACE IS INITIALIZED ALREADY
         L     R1,16                   GET CVT ADDRESS
         USING CVT,R1                  SET ADDRESSABILITY
         L     R1,CVTJESCT             GET JESCT ADDRESS
         USING JESCT,R1                SET ADDRESSABILITY
         MVC   JESID(4),JESPJESN       SAVE NAME OF JES
         L     R1,JESSSCT              GET SSCVT CHAIN ADDRESS
         USING SSCT,R1                 SET ADDRESSABILITY
SSCTLOOP EQU   *                       SCAN FOR SSIT SSCVT ENTRY
         LTR   R1,R1                   END OF SSCVT CHAIN?
         BZ    SSCTERR                 YES - TERMINATE SUBSYSTEM
         CLC   SSCTSNAM,=C'SSIT'       OUR SSCVT?
         BE    OURSSCT                 YES - EXIT LOOP
         ST    R1,ASSCVT               SAVE LAST SSCVT ADDRESS
         L     R1,SSCTSCTA             GET NEXT SSCVT ADDRESS
         B     SSCTLOOP                TRY AGAIN
OURSSCT  EQU   *
         NI    INITFLAG,X'7F'          RESET FLAG
         ST    R1,ASSCVT               SAVE SSCVT ADDRESS
         L     R4,SSCTSSVT             GET SSVT ADDRESS
         LTR   R4,R4                   ALREADY INITIALIZED?
         BZ    SSVTINIT                NO - INITIALIZE SSVT
         OI    INITFLAG,X'80'          SET FLAG
         B     CONTINUE                CONTINUE
         USING SSVT,R4
SSVTINIT EQU   *                       BUILD SSVT
         GETMAIN RU,LV=SSVTLEN,SP=245  GET SSVT STORAGE
         LTR   R15,R15                 O.K.?
         BNZ   GETERR02                NO - ABEND
         ST    R1,PARMAREA             SAVE STORAGE ADDRESS
         LR    R4,R1                   SAVE STORAGE ADDRESS
*   CLEAR GETMAINED AREA
         LR    R0,R1                   GET AREA ADDRESS
         LA    R1,SSVTLEN              GET AREA LENGTH
         LR    R6,R0                   GET AREA ADDRESS
         XR    R7,R7                   CLEAR R7
         MVCL  R0,R6                   CLEAR AREA
         MVI   SSVTFCOD+8,1            FUNCTION 9 (CONSOLE MESSAGES)
         LOAD  EP=SCSRSSI1,GLOBAL=(YES,P)
         ST    R0,SSVTFRTN             SAVE FUNCTION ROUTINE ADDRESS
         MVI   SSVTFNUM+1,1            ONE FUNCTION SUPPORTED
CONTINUE EQU   *
*   GET ADDRESS OF CIB
         LA    R5,ANSRAREA             ADDR OF RESPONSE AREA FOR QEDIT
         EXTRACT (5),FIELDS=COMM       GET ADDR OF COMMUNICATION AREA
         L     R5,ANSAREA              LOAD ADDR OF COMMUNICATION AREA
         USING COMLIST,R5
         L     R3,COMCIBPT             GET ADDRESS OF CIB
         USING CIBNEXT,R3
         C     R3,=F'0'                CIB EXIST ?
         BE    SETCOUNT                NO - GO SET COUNT
         QEDIT ORIGIN=COMCIBPT,BLOCK=(3) YES - FREE IT
         LTR   R15,R15                 GO O.K. ?
         BZ    SETCOUNT                YES - GO SET COUNT
         ABEND 990                     ABEND
SETCOUNT EQU   *
*   SET LIMIT ON MODIFY COMMANDS
         QEDIT ORIGIN=COMCIBPT,CIBCTR=10 TEN MODIFIES AT A TIME
         WTO   'SSIT002I - TEST SUBSYSTEM CONSOLE INTERFACE AVAILABLE',X
               ROUTCDE=(2),DESC=(6)
*   ENABLE SUBSYSTEM
         TM    INITFLAG,X'80'          SUBSYSTEM ALREADY ACTIVE?
         BO    ISSUECMD                YES - USE THAT SUBSYSTEM
         L     R1,ASSCVT               GET SSCT ADDRESS
         USING SSCT,R1
         ST    R4,SSCTSSVT             SAVE SSVT ADDRESS
         WTO   'SSIT001I - TEST SUBSYSTEM INTERFACE ENABLED',          X
               ROUTCDE=(2),DESC=(6)
* WE CAN USE THE SUBSYSTEM CONSOLE SERVICE ROUTINE TO NOTIFY SVC35 THAT
* CONSOLE MESSAGES SHOULD BE SENT TO ALL ACTIVE SUBSYSTEMS THAT WANT TO
* EXAMINE FUNCTION CODE 9 SUBSYSTEM REQUESTS.  WE DO THIS BY SETTING
* THE 'SCSBRDON' FLAG IN IN THE SCSR PARAMETER LIST PRIOR TO INVOKING
* THE SUBSYSTEM CONSOLE SERVICE ROUTINE.
         XC    SCSRWORK(SCSLEN),SCSRWORK  CLEAR PARM AREA
         LA    R6,SCSRWORK             GET PARM AREA ADDRESS
         USING SCSRPLST,R6             SET ADDRESSABILITY
         MVC   SCSACRO,=C'SCSR'        MOVE IN IDENTIFIER
         OI    SCSFUNC1,SCSBRDON       SET BRODCAST ON FLAG
         ST    R6,SCSRPARM             SAVE PARAMETER AREA ADDRESS
         LA    R1,SCSRPARM             GET ADDRESS OF PARM AREA ADDR
         LINK  EP=IEAVG700             GO TO SCSR
         LTR   R15,R15                 EVERYTHING O.K.?
         BNZ   PLANB1                  NO - LET'S DO IT OURSELVES
         B     BYPASS1                 IT'S O.K. SO LET'S GO ON
         DROP  R6
PLANB1   EQU   *
* THAT WAS SUCH A SIMPLE TASK THAT I DON'T SEE HOW ANYTHING COULD HAVE
* GONE WRONG.  WE WILL ISSUE A CONSOLE MESSAGE TO SAY WE HAD A PROBLEM,
* BUT THEN WE WILL SET THE FLAG OURSELVES ANYWAY.
         WTO   'SSIT901I - SUBSYSTEM CONSOLE SERVICE ROUTINE FAILED TO X
               ENABLE THE BRODCAST ALL FLAG.',ROUTCDE=(1),             X
               DESC=(6)
         L     R1,16                    GET CVT ADDRESS
         L     R7,CVTCUCB-CVT(,R1)      GET UCM ADDRESS
         XR    R6,R6                    CLEAR REGISTER
GETCNT1  L     R6,UCMBRDST-UCM(,R7)     GET COUNT OF SS REQUESTING MSGS
         CLC   UCMBRDST-UCM(2,R7),=2X'FF'   WRAP AROUND?
         BE    BYPASS1                  YES - DON'T ADD ONE
         LR    R1,R6                    SAVE VALUE
         A     R6,=X'00010000'          ADD ONE
         CS    R1,R6,UCMBRDST-UCM(R7)   SAVE NEW COUNT
         BNE   GETCNT1                  GET NEW COUNT
BYPASS1  EQU   *
* WE CAN USE THE SUBSYSTEM CONSOLE SERVICE ROUTINE TO NOTIFY MVS THAT
* WE WOULD LIKE TO ALLOCATE AN AVAILABLE SUBSYSTEM CONSOLE TO OUR
* ADDRESS SPACE.  THIS IS DONE BY SETTING THE SUBSYSTEM NAME THAT IS
* MAKING THE REQUEST IN 'SCSNAME' AND SETTING THE 'SCSOBTAN' FLAG ON IN
* THE SCSR PARAMETER LIST PRIOR TO INVOKING THE SUBSYSTEM CONSOLE
* SERVICE ROUTINE.
         XC    SCSRWORK(SCSLEN),SCSRWORK  CLEAR PARM AREA
         LA    R6,SCSRWORK             GET PARM AREA ADDRESS
         USING SCSRPLST,R6             SET ADDRESSABILITY
         MVC   SCSACRO,=C'SCSR'        MOVE IN IDENTIFIER
         MVC   SCSNAME(8),=C'SSIT    ' MOVE IN SUBSYSTEM NAME
         OI    SCSFUNC1,SCSOBTAN       SET OBTAIN CONSOLE FLAG ON
         ST    R6,SCSRPARM             SAVE PARAMETER AREA ADDRESS
         LA    R1,SCSRPARM             GET ADDRESS OF PARM AREA ADDR
         LINK  EP=IEAVG700             GO TO SCSR
         LTR   R15,R15                 EVERYTHING O.K.?
         BNZ   NOCONS                  NO - ISSUE MESSAGE & SET FLAG
         MVC   SSVTCNID(2),SCSNID      MOVE IN CONSOLE ID
* WE CAN USE THE SUBSYSTEM CONSOLE SERVICE ROUTINE TO NOTIFY MVS THAT
* THE CONSOLE THAT HAS JUST BEEN ALLOCATED TO OUR ADDRESS SPACE IS TO
* BE CONSIDERED A PSEUDO MASTER CONSOLE.  THIS IS DONE BY SETTING THE
* SUBSYSTEM NAME THAT IS MAKING THE REQUEST IN 'SCSNAME', BY SETTING
* THE CONSOLE ID IN 'SCSCNID', AND BY SETTING THE 'SCSPMSTR' FLAG ON IN
* THE SCSR PARAMETER LIST PRIOR TO INVOKING THE SUBSYSTEM CONSOLE
* SERVICE ROUTINE.  A PSEUDO MASTER CONSOLE IS ABLE TO ISSUE A SUBSET
* OF MASTER CONSOLE COMMANDS INCLUDING THE ABILITY TO VARY ANOTHER
* CURRENTLY ACTIVE CONSOLE AS THE MASTER CONSOLE.
         XC    SCSRWORK(SCSLEN),SCSRWORK  CLEAR PARM AREA
         LA    R6,SCSRWORK             GET PARM AREA ADDRESS
         USING SCSRPLST,R6             SET ADDRESSABILITY
         MVC   SCSACRO,=C'SCSR'        MOVE IN IDENTIFIER
         MVC   SCSNAME(8),=C'SSIT    ' MOVE IN SUBSYSTEM NAME
         MVC   SCSCNID(2),SSVTCNID     MOVE IN CONSOLE IDENTIFIER
         OI    SCSFUNC2,SCSPMSTR       MAKE CONSOLE A PSEUDO MASTER
         ST    R6,SCSRPARM             SAVE PARAMETER AREA ADDRESS
         LA    R1,SCSRPARM             GET ADDRESS OF PARM AREA ADDR
         LINK  EP=IEAVG700             GO TO SCSR
         LTR   R15,R15                 EVERYTHING O.K.?
         BZ    SETPROTO                YES - SET CONSOLE PROTOTYPE
         ST    R15,DBL2                SAVE RETURN CODE
         UNPK  DBL1(9),DBL2(5)         UNPACK
         NC    DBL1(8),=8X'0F'         CLEAR HIGH NIBBLE
         TR    DBL1(8),=C'0123456789ABCDEF'
         MVC   WTOWORK(WTOLEN),WTOLIST GET WTO MODEL
         MVC   WTOWORK+4(L'WTO1),WTO1  MOVE IN MESSAGE
         MVC   WTOWORK+4+L'WTO1-8(8),DBL1  MOVE IN RETURN CODE
         MVI   WTOWORK+4+6,C'1'        MOVE IN MESSAGE NUMBER
         WTO   MF=(E,WTOWORK)          ISSUE MESSAGE
         B     WAIT                    WAIT FOR COMMAND
SETPROTO EQU   *
* WE CAN USE THE SUBSYSTEM CONSOLE SERVICE ROUTINE TO NOTIFY MVS OF THE
* TYPE OF PROTOCOL THAT IS TO BE USED TO ISSUE COMMANDS AND MONITOR
* MESSAGES AND TO DETERMINE THE PRIMARY SUBSYSTEM.  THIS IS DONE BY
* SETTING THE SUBSYSTEM NAME THAT IS MAKING THE REQUEST IN 'SCSNAME',
* BY SETTING THE CONSOLE ID IN 'SCSNID', BY SETTING THE 'SCSPROTO'
* FLAG ON, BY SETTING THE SCSTYPE1 FLAG ON, AND BY MOVING THE ID OF THE
* PRIMARY SUBSYSTEM INTO 'SCSPJESN' IN THE SCSR PARAMETER LIST PRIOR TO
* INVOKING THE SUBSYSTEM CONSOLE SERVICE ROUTINE.
         XC    SCSRWORK(SCSLEN),SCSRWORK  CLEAR PARM AREA
         LA    R6,SCSRWORK             GET PARM AREA ADDRESS
         USING SCSRPLST,R6             SET ADDRESSABILITY
         MVC   SCSACRO,=C'SCSR'        MOVE IN IDENTIFIER
         MVC   SCSNAME(8),=C'SSIT    ' MOVE IN SUBSYSTEM NAME
         MVC   SCSCNID(2),SSVTCNID     MOVE IN CONSOLE IDENTIFIER
         OI    SCSFUNC1,SCSPROTO       SET CONSOLE PROTOCOL
         OI    SCSFLGS1,SCSTYPE1       SET TO TYPE1 PROTOCOL
         MVC   SCSPJESN,JESID          MOVE IN JESID
         ST    R6,SCSRPARM             SAVE PARAMETER AREA ADDRESS
         LA    R1,SCSRPARM             GET ADDRESS OF PARM AREA ADDR
         LINK  EP=IEAVG700             GO TO SCSR
         LTR   R15,R15                 EVERYTHING O.K.?
         BZ    ISSUECMD                YES - ISSUE COMMAND
         ST    R15,DBL2                SAVE RETURN CODE
         UNPK  DBL1(9),DBL2(5)         UNPACK
         NC    DBL1(8),=8X'0F'         CLEAR HIGH NIBBLE
         TR    DBL1(8),=C'0123456789ABCDEF'
         MVC   WTOWORK(WTOLEN),WTOLIST GET MESSAGE MODEL
         MVC   WTOWORK+4(L'WTO1),WTO1  MOVE IN MESSAGE
         MVC   WTOWORK+4+L'WTO1-8(8),DBL1  MOVE IN RETURN CODE
         MVI   WTOWORK+4+6,C'2'        MOVE IN MESSAGE NUMBER
         WTO   MF=(E,WTOWORK)          ISSUE MESSAGE
         B     WAIT                    WAIT FOR COMMAND
ISSUECMD EQU   *
* IF THERE IS A CMD TO ISSUE AND A CONSOLE AVAILABLE, ISSUE THE CMD
         SR    R15,R15                 CLEAR R15
         LH    R15,CMD                 GET COMMAND LENGTH
         LTR   R15,R15                 ANY COMMAND?
         BZ    WAIT                    NO - DON'T ISSUE COMMAND
         SR    R0,R0                   CLEAR R0
         CLI   SSVTCNID+1,X'00'        A CONSOLE?
         BE    NOCONS                  NO - SET NO CONSOLE CONDITION
         ICM   R0,B'0011',SSVTCNID     MOVE IN CONSOLE ID
         LA    R1,CMD                  GET COMMAND AREA ADDRESS
         SVC   34                      ISSUE COMMAND
         B     WAIT                    ALL DONE SO LET'S GO ON
         DROP  R6
NOCONS   EQU   *
         OI    INITFLAG,X'40'          SET NO CONSOLE FLAG
         WTO   'SSIT945I - CONSOLE NOT OBTAINED BY SUBSYSTEM CONSOLE ROX
               UTINE',ROUTCDE=(1),DESC=(6)
*    WAIT FOR COMMUNICATION
WAIT     L     R8,COMECBPT             ADDRESS OF COMMUNICATION ECB
         WAIT  1,ECB=(8)               WAIT FOR EVENT
         BAL   R6,CMDPROC              PROCESS COMMAND
         B     WAIT                    GO WAIT
*    COMMAND PROCESSING
CMDPROC  EQU   *
         TM    INITFLAG,X'40'          CONSOLE AVAILABLE?
         BO    RETR6                   NO - BYPASS ANY PROCESSING
         L     R3,COMCIBPT             GET ADDRESS OF CIB
         LTR   R3,R3                   VALID POINTER?
         BZ    RETR6                   NO - RETURN
         CLI   CIBVERB,CIBMODFY        IS IT A MODIFY COMMAND ?
         BE    CMODIFY                 YES - GO PROCESS
         CLI   CIBVERB,CIBSTOP         IS IT A STOP COMMAND ?
         BE    CSTOP                   YES - GO PROCESS
RETR6    EQU   *
         QEDIT ORIGIN=COMCIBPT,BLOCK=(3)  YES - FREE IT
         TM    INITFLAG,X'40'          CONSOLE AVAILABLE?
         BO    NOCONS                  NO - ISSUE MESSAGE
         BR    R6                      RETURN
DATMVC   MVC   WTOWORK+40(1),CIBDATA
CMODIFY  EQU  *
* THIS IS A MODIFY COMMAND SO WE MUST CHECK FOR VALID SYNTAX
         LH    R7,CIBDATLN             GET COMMAND LENGTH
         BCTR  R7,0                    REDUCE BY ONE FOR EX
         MVC   DATAAREA(80),=80C' '    BLANK IT OUT
         EX    R7,CMDMVC               DO MOVE
         CLC   CIBDATA(5),=C'CMD=<'    VALID COMMAND?
         BE    GETCMD                  YES - GO GET IT
CMDERROR EQU   *
         WTO   'SSIT063I - INVALID COMMAND FORMAT.  PLEASE RE-ENTER.', X
               ROUTCDE=(1),DESC=(6)
FREE     QEDIT ORIGIN=COMCIBPT,BLOCK=(3) FREE CIB
         BR    R6

This article will be concluded in next month's issue with the
publication of the remaining source code for SCSRCONS and
the SCSRSSI1 routine.

                                                            € Xephon 1990

