Saving and restoring ISPF PF key definitions

ISPF PF key values are stored as system variables in the user's
ISPF profile data pool.  Each ISPF function that is invoked with
the NEWAPPL keyword of the ISPEXEC SELECT service will have
a unique profile data pool, and thus unique PF key definitions.
This allows a user to have multiple sets of PF key definitions,
 keyed by the ISPF application-id, as specified in the NEWAPPL
keyword and reflected in the ZAPPLID system variable.  For more
information on managing ISPF's use of data pools, see the Dialog
Management Guide (SC34-4112-00).

Often, there is a need to change one or more PF key values
temporarily and later restore them; or perhaps to copy PF key
settings from one profile pool into another.  Use of the ISPF-
supplied KEYS command allows the user to access his PF key
definitions from any panel, within any application.  However,
there is no simple way to save/restore or copy the values from
one profile pool to another.

The following CLIST provides a mechanism for saving and
restoring complete sets of PF key definitions.  The CLIST
expects one of three keyword parameters:

1   SAVE - save the current setting of all PF key-related system
variables.

2   RESTORE - reset the value of all PF key-related system
variables to the most recently saved values.

3   SHOW - display all sets of save PF key values, allowing the
user to modify the saved values or select a specific set from which
to restore.

The sets of PF key definitions are stored in an ISPF table, along
with the date, time, and the current value of the ZAPPLID variable.
The table itself is saved in the user's ISPF profile dataset, assumed
to be pre-allocated with a DDNAME of ISPPROF.  Our installation has
the CLIST included in the default ISPF command table, ISPCMDS, with
the following entries:

KEYSAVE     SELECT CMD(%KEYSAVE &ZPARM)
KS          SELECT CMD(%KEYSAVE &ZPARM)

This permits the user to perform the following commands:

*   KEYSAVE SAVE - to save the current PF key settings

*   KEYS - to modify PF key settings temporarily

*   KEYSAVE RESTORE - to restore previous PF key settings.

KEYSAVE CLIST

PROC 0 SAVE RESTORE SHOW TEST
/*****************************************************************/
/*  CLIST TO PROCESS PFKEY SAVES/RESTORES/UPDATES                  */
/*****************************************************************/
/* ESTABLISH PROCESSING CONTROLS */
   CONTROL MSG PROMPT
   IF &TEST = TEST THEN CONTROL LIST CONLIST
/* VALIDATE FUNCTION ENTERED */
   IF &SAVE = &STR() && &RESTORE = &STR() && &SHOW = &STR() +
   THEN DO
        SET ZMSG000S = &STR(MISSING PARM)
        SET ZMSG000L = &STR(VALID PARMS ARE "SAVE" "RESTORE" OR "SHOW")
        ISPEXEC SETMSG MSG(ISPZ000)
        EXIT CODE(0)
        END
/* RETRIEVE INFORMATION ABOUT THE AVAILABILITY OF THE TABLE */
   ISPEXEC TBSTATS PFKEYTBL LIBRARY(ISPPROF) +
                            STATUS1(STATUS1) +
                            STATUS2(STATUS2)
/* IF TABLE IS ALREADY OPEN, CLOSE IT */
   IF &STATUS2 ¬= 1 +
   THEN ISPEXEC TBEND PFKEYTBL
/* IF TABLE DOES NOT EXIST CREATE IT, OTHERWISE OPEN IT */
   IF &STATUS1 = 1 +
   THEN ISPEXEC TBOPEN   PFKEYTBL WRITE         LIBRARY(ISPPROF)
   ELSE DO
        ISPEXEC TBCREATE PFKEYTBL WRITE REPLACE LIBRARY(ISPPROF) +
                    NAMES(SEL APPLID DATE TIME +
                          ZPF01 ZPF02 ZPF03 ZPF04 ZPF05 ZPF06 +
                          ZPF07 ZPF08 ZPF09 ZPF10 ZPF11 ZPF12 +
                          ZPF13 ZPF14 ZPF15 ZPF16 ZPF17 ZPF18 +
                          ZPF19 ZPF20 ZPF21 ZPF22 ZPF23 ZPF24 +
                          ZPFL01 ZPFL02 ZPFL03 ZPFL04 ZPFL05 ZPFL06 +
                          ZPFL07 ZPFL08 ZPFL09 ZPFL10 ZPFL11 ZPFL12 +
                          ZPFL13 ZPFL14 ZPFL15 ZPFL16 ZPFL17 ZPFL18 +
                          ZPFL19 ZPFL20 ZPFL21 ZPFL22 ZPFL23 ZPFL24)
        ISPEXEC TBVCLEAR PFKEYTBL
        ISPEXEC TBSORT   PFKEYTBL FIELDS(DATE,C,D,TIME,C,D)
        END /* THEN */
   ISPEXEC TBTOP   PFKEYTBL
/* IF SAVE, THEN ADD ROW TO TABLE */
   IF &SAVE = SAVE +
   THEN DO
        ISPEXEC VGET (ZPF01 ZPF02 ZPF03 ZPF04 ZPF05 ZPF06 +
                      ZPF07 ZPF08 ZPF09 ZPF10 ZPF11 ZPF12 +
                      ZPF13 ZPF14 ZPF15 ZPF16 ZPF17 ZPF18 +
                      ZPF19 ZPF20 ZPF21 ZPF22 ZPF23 ZPF24)   PROFILE
        ISPEXEC VGET (ZPFL01 ZPFL02 ZPFL03 ZPFL04 ZPFL05 ZPFL06 +
                      ZPFL07 ZPFL08 ZPFL09 ZPFL10 ZPFL11 ZPFL12 +
                      ZPFL13 ZPFL14 ZPFL15 ZPFL16 ZPFL17 ZPFL18 +
                      ZPFL19 ZPFL20 ZPFL21 ZPFL22 ZPFL23 ZPFL24) PROFILE
        ISPEXEC VGET (ZDATE ZTIME ZAPPLID) SHARED
        SET DATE   = &STR(&ZDATE)
        SET TIME   = &STR(&ZTIME)
        SET APPLID = &STR(&ZAPPLID)
        SET SEL    = &STR()
        ISPEXEC TBADD  PFKEYTBL ORDER
        SET ZMSG000S = &STR(PFKEYS SAVED)
        SET ZMSG000L = &STR(PFKEY VALUES ARE SAVED IN TABLE)
        ISPEXEC SETMSG MSG(ISPZ000)
        END
/* IF RESTORE, THEN RESTORE KEYS TO TOP ROW IN TABLE */
   IF &RESTORE = RESTORE +
   THEN DO
        ISPEXEC TBTOP  PFKEYTBL
        ISPEXEC TBSKIP PFKEYTBL
        ISPEXEC VPUT (ZPF01 ZPF02 ZPF03 ZPF04 ZPF05 ZPF06 +
                      ZPF07 ZPF08 ZPF09 ZPF10 ZPF11 ZPF12 +
                      ZPF13 ZPF14 ZPF15 ZPF16 ZPF17 APF18 +
                      ZPF19 ZPF20 ZPF21 ZPF22 ZPF23 ZPF24)   PROFILE
        ISPEXEC VPUT (ZPFL01 ZPFL02 ZPFL03 ZPFL04 ZPFL05 ZPFL06 +
                      ZPFL07 ZPFL08 ZPFL09 ZPFL10 ZPFL11 ZPFL12 +
                      ZPFL13 ZPFL14 ZPFL15 ZPFL16 ZPFL17 ZPFL18 +
                      ZPFL19 ZPFL20 ZPFL21 ZPFL22 ZPFL23 ZPFL24  PROFILE
        SET ZMSG000S = &STR(PFKEYS RESTORED)
        SET ZMSG000L = &STR(PFKEY VALUES RESTORED FROM MOST RECENT SAVE)
        ISPEXEC SETMSG MSG(ISPZ000)
        END
/* IF SHOW, THEN PROCESS TABLE DISPLAY */
   IF &SHOW = SHOW +
   THEN DO
        ISPEXEC TBTOP  PFKEYTBL
        ISPEXEC TBDISPL PFKEYTBL PANEL(KEYSAVE1)
                SET DISPRC = &LASTCC
        SET RESTORE = NO
        DO WHILE (&DISPRC < 8  &&  &RESTORE = NO)
           SET NUMROWS = &ZTDSELS
           SET I = 1
           SET TOPROW = &ZTDTOP
           DO WHILE (&I ¬> &NUMROWS  &&  &RESTORE = NO)
              ISPEXEC CONTROL DISPLAY SAVE
              IF &STR(&SEL) = &STR(R) +
              THEN DO
                   SET RESTORE = YES
                   END
              ELSE IF &STR(&SEL) = &STR(D) +
              THEN DO
                   ISPEXEC TBDELETE PFKEYTBL
                   END
              ELSE IF &STR(&SEL) = &STR(S) +
              THEN DO
                   SET SEL = &STR()
                   SET PANEL = KEYSAVE2
                   ISPEXEC DISPLAY PANEL(&PANEL)
                   SET CC = &LASTCC
                   DO WHILE (&CC = 0 && &ZCMD ¬= CANCEL)
                      IF &PANEL = KEYSAVE2 +
                      THEN SET PANEL = KEYSAVE3
                      ELSE SET PANEL = KEYSAVE2
                      ISPEXEC DISPLAY PANEL(&PANEL)
                      SET CC = &LASTCC
                   END
                   IF &ZCMD = CANCEL +
                   THEN SET ZCMD = &STR()
                   ELSE ISPEXEC TBPUT PFKEYTBL
                   END
              ISPEXEC CONTROL DISPLAY RESTORE
              IF &I ¬= &NUMROWS +
              THEN ISPEXEC TBDISPL PFKEYTBL
              SET I = &I + 1
           END /* OF MODIFIED ROW PROCESSING */
           IF &RESTORE = NO +
           THEN DO
               /* REPOSITION TO PREVIOUS TOP ROW */
                ISPEXEC TBTOP   PFKEYTBL
                ISPEXEC TBSKIP  PFKEYTBL NUMBER(&TOPROW)
                ISPEXEC TBDISPL PFKEYTBL PANEL(KEYSAVE1)
                        SET DISPRC = &LASTCC
                END
        END /* OF TABLE DISPLAY LOOP */
        IF &RESTORE = YES +
        THEN DO
             ISPEXEC VPUT (ZPF01 ZPF02 ZPF03 ZPF04 ZPF05 ZPF06 +
                           ZPF07 ZPF08 ZPF09 ZPF10 ZPF11 ZPF12 +
                           ZPF13 ZPF14 ZPF15 ZPF16 ZPF17 ZPF18 +
                           ZPF19 ZPF20 ZPF21 ZPF22 ZPF23 ZPF24) PROFILE
             ISPEXEC VPUT (ZPFL01 ZPFL02 ZPFL03 ZPFL04 ZPFL05 ZPFL06 +
                           ZPFL07 ZPFL08 ZPFL09 ZPFL10 ZPFL11 ZPFL12 +
                           ZPFL13 ZPFL14 ZPFL15 ZPFL16 ZPFL17 ZPFL18 +
                           ZPFL19 ZPFL20 ZPFL21 ZPFL22 ZPFL23 ZPFL24) +
                                                                PROFILE
             SET ZMSG000S = &STR(PFKEYS RESTORED)
             SET ZMSG000L = &STR(PFKEY VALUES RESTORED +
                                 FROM PREVIOUS SAVE)
             ISPEXEC SETMSG MSG(ISPZ000)
             END
        END /* OF SHOW PROCESSING */
   ISPEXEC TBCLOSE PFKEYTBL LIBRARY(ISPPROF)
EXIT CODE(0)
PANEL KEYSAVE1
)Attr Default(%+_)
 % type(text  ) intens(high) skip(on)
 + type(text  ) intens(low ) skip(on)
 $ type(text  ) intens(high) skip(on)
 @ type(output) intens(high) caps(on ) just(left )
 _ type( input) intens(high) caps(on ) just(left ) pad(user)
 ! type(output) intens(high) caps(off) just(left )
 ^ type( input) intens(low ) caps(on ) just(asis ) pad('_')
)Body  Expand(//)
$-/-/- Saved PFKEY Values Display -/-/-
%Command ===>_zcmd                                  / /%Scroll ===>_z  +
%
+Use%S+to view pfkey values,%R+to restore pfkey values,%D+to delete saved values
+
+Current appl id:@zapplid
+
%      Date      Time     Appl id
)Model
^z+  +!date    +!time     +!applid+
+  13:!zpf13   +14:!zpf14   +15:!zpf15   +16:!zpf16   +17:!zpf17   +18:!zpf18
+  19:!zpf19   +20:!zpf20   +21:!zpf21   +22:!zpf22   +23:!zpf23   +24:!zpf24
)Init
  .ZVARS = '(zscrolld sel)'
)Proc
  if (&zcmd ¬= &Z) .msg = ispz001
  if (&ztdsels ¬= 0000)
     ver (&sel,list,S,R,D)
)End
PANEL KEYSAVE2
)attr default(%+_)
 + type(text)  intens(low)  skip(on)
 @ type(text)  intens(low)  skip(on)
 % type(text)  intens(high) skip(on)
 _ type(input) intens(high) pad(user)
 $ type(input) intens(low)  padc('.') just(left) caps(on)
 ~ type(output) intens(high)
 ! type(text)  intens(low)
)body lmsg(lmsgfld)
!TITLE: Saved PFKEY definitions - 13 to 24    DATE &ZDATE &ZJDATE TIME &ZTIME
%COMMAND ===>_ZCMD
~LMSGFLD
+
+ PF13 %===>_zpf13
+ PF14 %===>_zpf14
+ PF15 %===>_zpf15
+ PF16 %===>_zpf16
+ PF17 %===>_zpf17
+ PF18 %===>_zpf18
+ PF19 %===>_zpf19
+ PF20 %===>_zpf20
+ PF21 %===>_zpf21
+ PF22 %===>_zpf22
+ PF23 %===>_zpf23
+ PF24 %===>_zpf24
+
+PF13 LABEL%===>_ZPFL13  +  PF14 LABEL%===>_ZPFL14  +  PF15 LABEL%===>_ZPFL15  +
+PF16 LABEL%===>_ZPFL16  +  PF17 LABEL%===>_ZPFL17  +  PF18 LABEL%===>_ZPFL18  +
+PF19 LABEL%===>_ZPFL19  +  PF20 LABEL%===>_ZPFL20  +  PF21 LABEL%===>_ZPFL21  +
+PF22 LABEL%===>_ZPFL22  +  PF23 LABEL%===>_ZPFL23  +  PF24 LABEL%===>_ZPFL24  +
+
%ENTER+to display keys 01-12,%END+command to exit,%CANCEL+to cancel changes.
)INIT
  .HELP = isp05300
)REINIT
  REFRESH (*)
)PROC
  if (&ZCMD = 'C','CAN') &ZCMD = 'CANCEL'
  if (&ZCMD ¬= CANCEL, &Z) .MSG = ISPZ001
)END
PANEL KEYSAVE3
)attr default(%+_)
 + type(text)  intens(low)  skip(on)
 @ type(text)  intens(low)  skip(on)
 % type(text)  intens(high) skip(on)
 _ type(input) intens(high) pad(user)
 $ type(input) intens(low)
 $ type(input) intens(low)  padc('.') just(left) caps(on)
 ~ type(output) intens(high) caps(on)
 ! type(text)  intens(low)  skip(on)
)body lmsg(lmsgfld)
!TITLE: Saved PFKEY definitions - 01 to 12     DATE &ZDATE &ZJDATE TIME &ZTIME
%COMMAND ===>_ZCMD
~LMSGFLD
+
+ PF01 %===>_zpf01
+ PF02 %===>_zpf02
+ PF03 %===>_zpf03
+ PF04 %===>_zpf04
+ PF05 %===>_zpf05
+ PF06 %===>_zpf06
+ PF07 %===>_zpf07
+ PF08 %===>_zpf08
+ PF09 %===>_zpf09
+ PF10 %===>_zpf10
+ PF11 %===>_zpf11
+ PF12 %===>_zpf12
+
+PF01 LABEL%===>_ZPFL01  +  PF02 LABEL%===>_ZPFL02  +  PF03 LABEL%===>_ZPFL03  +
+PF04 LABEL%===>_ZPFL04  +  PF05 LABEL%===>_ZPFL05  +  PF06 LABEL%===>_ZPFL06  +
+PF07 LABEL%===>_ZPFL07  +  PF08 LABEL%===>_ZPFL08  +  PF09 LABEL%===>_ZPFL09  +
+PF10 LABEL%===>_ZPFL10  +  PF11 LABEL%===>_ZPFL11  +  PF12 LABEL%===>_ZPFL12  +
+
%ENTER+to display keys 13-24,%END+command to exit,%CANCEL+to cancel changes.
)init
  .HELP = isp05300
)reinit
  refresh (*)
) proc
  if (&ZCMD = 'C','CAN') &ZCMD = 'CANCEL'
  if (&ZCMD ¬= CANCEL, &Z) .MSG = ISPZ001
)end


Scott M Barr
Systems Consultant
Pennsylvania Blue Shield (USA) € Pennsylvania Blue Shield 1990
