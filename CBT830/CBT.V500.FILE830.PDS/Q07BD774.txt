Displaying DASD volume information


PPGLIST SOURCE CODE

       TITLE 'PPGLIST - DISPLAY DIRECT ACCESS VOLUME INFORMATION'
***********************************************************************
*      PROGRAM-ID. PPGLIST.                                           *
*          THIS PROGRAM 'PPGLIST' LISTS INFORMATION ABOUT EACH ON-    *
*          LINE DIRECT ACCESS VOLUME THAT RESIDES IN A DATA CENTRE'S  *
*          INFORMATION GRANARY.  A TOTAL COUNT OF EACH DIRECT         *
*          ACCESS DEVICE-TYPE ENCOUNTERED IN THIS PROCESS IS PRINTED. *
*          THERE IS A PROVISION TO LIMIT THE AMOUNT OF INFORMATION    *
*          DISPLAYED TO A SINGLE VOLUME, OR A RANGE OF VOLUMES.       *
*          SPECIFY PARM=XXXXXX ON THE EXECUTE STATEMENT               *
*          INVOKING THIS ROUTINE, WHERE XXXXXX SPECIFIES A ONE TO     *
*          SIX CHARACTER PREFIX OF THE VOLUME SERIAL NUMBER OF THE    *
*          VOLUMES FOR WHICH INFORMATION IS DESIRED.                  *
*          ALSO, ONE OF THE FOLLOWING VALUES MAY BE SPECIFIED ON AN   *
*          EXEC STATEMENT INVOKING THIS PROGRAM TO GIVE THE           *
*          INDICATED RESULT:                                          *
*          VALUE  GENERATED OUTPUT                                    *
*          *      A LIST OF ON-LINE VOLUMES SORTED BY VOLUME SERIAL   *
*                 NUMBER, THEN BY UNIT ADDRESS.  THIS IS THE DEFAULT. *
*          -      LISTS ALL ON-LINE VOLUMES, DATASETS CONTAINED ON    *
*                 THOSE VOLUMES W/O ANY ASSOCIATED CATALOG ENTRY.     *
*          ' '    LISTS ALL ON-LINE VOLUMES, DATASETS CONTAINED ON    *
*                 THOSE VOLUMES ALONG WITH ANY ASSOCIATED CATALOG     *
*                 ENTRY.  DATASETS CATALOGUED TO A VOLUME OTHER THAN  *
*                 THE ONE CONTAINING THEM WILL HAVE AN ASTERISK PRE-  *
*                 CEDING THE VOLUME SERIAL NUMBER OF THE ENTRY FOUND  *
*                 IN THE CATALOG.                                     *
*                 NOTE:                                               *
*                 WHENEVER A SPECIFY VOLUME SERIAL NUMBER, OR A RANGE *
*                 OF VOLUME SERIAL NUMBERS, IS SPECIFIED, ALL INFOR-  *
*                 MATION CONTAINED HEREIN IS PROVIDED.                *
***********************************************************************
         MACRO
&TAPNAME TAPINFO
         DS    0F
&TAPNAME DC    CL8'&SYSECT'
         DC    A(&SYSECT)
         DC    CL6'&SYSTIME'
         DC    CL8'&SYSDATE'
         MEND
PPGLIST  CSECT
         USING PPGLIST,R13,R12     ESTABLISH PPGLIST ADDRESSABILITY
         BAKR  R14,R0              PRESERVE ENVIRONMENT AT ENTRY
         LR    R13,R15             PRIME BASE REGISTER
         LA    R12,2048(R13)       PRIME
         LA    R12,2048(R12)       PRIME SECOND BASE REGISTER
         L     R1,0(R1)            POINTER TO PARM LENGTH FIELD.
         LH    R2,0(R1)            LENGTH INTO 2.
         LTR   R2,R2               TEST IF ANY PARMS.
         BZ    PPGNOPRM            BRANCH IF NONE.
         C     R2,=F'7'            TEST IF TRUE VOLUME SERIAL NUMBER
         BL    PPGMVPRM            BRANCH IF SO
         WTO   'PPGLIST1  INVALID PARM ON EXEC STATEMENT - JOB ABORTED'
         PR    R14                 BACK TO DUST
PPGMVPRM BCTR  R2,R0               REDUCE LENGTH OF PARAMETER FOR EX
         STC   R2,PPGVLLEN         STOW LENGTH
         EX    R2,PPGMVCVL         STOW VOLUME INFORMATION
*---     ESTABLISH RECOVERY ENVIRONMENT                            ---*
PPGNOPRM L     R3,=A(PATEXIT)      POINT TO STAE EXIT ROUTINE ADDRESS
         ESTAE (R3),PARAM=PATLIST  ESTABLISH STAE ENVIRONMENT
         LTR   R15,R15             TEST IF UNDER STAE AEGIS
         BE    PATGO               BRANCH IF SO
         WTO   'STAE'
         PR    R14                 TERMINATE
*---     DISPLAY ENVIRONMENT OF OPERATING SYSTEM                   ---*
PATGO    L     R1,CVTPTR           FETCH ADDRESS OF CVT
         SH    R1,PATH256          POINT TO BEGINNING OF PREFIX
         USING CVTFIX,R1           ESTABLISH ADDRESSABILITY TO PREFIX
         MVC   PATPRODN,CVTPRODN   PRODUCT NAME OF OPERATING SYSTEM
         MVC   PATPRODI,CVTPRODI   FMID OF OPERATING SYSTEM
         MVC   PATNUMB,CVTNUMB     RELEASE NUMBER
         MVC   PATLEVEL,CVTLEVL    LEVEL OF RELEASE
         UNPK  PATMODEL,CVTMDL(3)  CONVERT TO EYE-
         TR    PATMODEL,PATRANS-240  READABLE FORMAT
         MVI   PATMODEL+4,C' '     CLEAR TRASH FROM MESSAGE
         L     R1,CVTEXT2          FETCH ADDRESS OF CVT'S EXTENSION
         DROP  R1                  FORGET CVT
         USING CVT2R000,R1         ESTABLISH CVT2R000 ADDRESSABILITY
         MVC   PATNUC,CVTNUCLS     IDENTIFICATION OF MEMBER NAME OF NUC
         MVC   PATHCD,CVTIOCID     IDENTIFICATION OF ACTIVE I/O CONFIG
         DROP  R1                  FORGET CVT
         WTO   MF=(E,PATWTOOP)
*---     ESTABLISH WORKING ENVIRONMENT                             ---*
         SR    R10,R10             ZERO WORKING REGISTER
         OPEN  (PPGDCB,OUTPUT)
         GETMAIN R,LV=50000        ROOM FOR HEAPS OF VOLUMES
         ST    R1,PPGNAMTB         SAVE IT
         ST    R1,PPGUCBTB         DITTO
         MVI   0(R1),X'FF'         SET END OF LIST
         GETMAIN R,LV=500000       ROOM FOR LOTS OF MESSAGES
         ST    R1,PPGWTOBG         SAVE IT
         ST    R1,PPGWTOND         SAVE IT, AGAIN
         MVI   0(R1),X'FF'         SET END OF LIST
*---     FABRICATE DATE AND TIME FOR INCLUSION IN SELECTED TITLES  ---*
         TIME  DEC                 GET DATE AND TIME
         MVC   PPGTITLE+30(11),PPGMASKT SET UP EDIT MASK
         CL    R0,PPGNOON          TEST IF AFTERNOON
         BL    PPGAM               BRANCH IF AM
         MVI   PPGTITLE+30+9,C'P'  OTHERWISE CHANGE IT TO PM
         SL    R0,PPGNOON          REDUCE BY TWELVE HOURS
PPGAM    ST    R0,PPGTWICE         STORE ADJUSTED TIME
         CLI   PPGTWICE,0          TEST IF MIDNIGHT
         BNE   PPGNOTMN            BRANCH IF NOT
         MVI   PPGTWICE,X'12'      MAKE ZERO A TWELVE
PPGNOTMN TM    PPGTWICE,X'08'      TEST FOR SUBTRACTION ERROR
         BZ    PPGNOERR            BRANCH IF NO ERROR
         NI    PPGTWICE,X'09'      OTHERWISE CORRECT IT
PPGNOERR ED    PPGTITLE+29(9),PPGTWICE DO TIME
         ST    R1,PPGTWICE+4       STASH DATE
         BAL   R14,PPGFABDT        FORMAT DATE
         MVC   PPGTITLE+30+13(9),PPGDATE+1 STOW IT INTO TITLE AREA
*---     PROCESS ALL ON-LINE DASD                                  ---*
PPGETUCB L     R3,CVTPTR           ADDRESS OF CVT
         USING CVTMAP,R3           ESTABLISH CVT ADDRESSABILITY
         L     R14,CVTDCQA         ADDRESS OF DEVICE CLASS QUEUE
         L     R15,CVTSMCA         ADDRESS SYSTEM MGMT CONTROL AREA
         MVC   PPGSYSID(4),16(R15) SYSTEM IDENTIFICATION
         DROP  R3
*---     LOCATE START OF DASD                                      ---*
         SR    R7,R7               CLEAR GPR USED FOR COUNTING UCBS
         USING DCQ,R14             SET DCQ ADDRESSABILITY
         L     R15,DCQFIRST        ADDRESS OF FIRST DCQELMNT
         USING DCQELMNT,R15        SET DCQELMNT ADDRESSABILITY
PATTYPE  CLI   DCQDEVCL,UCB3DACC   TEST IF DIRECT ACCESS DEVICE
         BE    PPGTLCOM            BRANCH IF SO
         ICM   R15,15,DCQCHAIN     PROCEED TO NEXT DCQ ELEMENT
         BNE   PATTYPE             PROCESS EVERY DCQ
PPGNONE  WTO   'CAN''T FIND DASD'
         B     PPGEXIT             BACK TO DUST
*---     PROCESS DASD ONLY                                         ---*
PPGTLCOM DS    0H
         L     R2,DCQUCBAD         ADDRESS OF FIRST UCB FOR THIS CLASS
         LH    R3,DCQUCBCT         NUMBER OF UCB'S WITHIN DEVICE CLASS
         USING UCBCMSEG,R2         SET UCB ADDRESSABILITY
PATFINDV DS    0H
         CLI   PPGONEVL,C' '       TEST IF VOLUME RANGE IS DESIRED
         BE    PPGNOT1             BRANCH IF NOT
         CLI   PPGONEVL,C'-'       TEST IF VOLUME LIST SANS CATALOG CK
         BE    PPGNOT1             BRANCH IF SO
         CLI   PPGONEVL,C'*'       TEST IF VOLUME AND ADDRESS LIST ONLY
         BE    PPGNOT1             BRANCH IF SO
         SR    R1,R1               CLEAR WORK REGISTER
         IC    R1,PPGVLLEN         LENGTH OF RANGE
         EX    R1,PPGCLCVL         TEST IF VOLUME DESIRED
         BNE   PPGNXUCB            BRANCH IF NOT
PPGNOT1  TM    UCBFLB,UCBNOPTH+UCBNOCON TEST IF PATH IS OPERATIONAL
         BZ    PATOP               BRANCH IF VALID
         B     PPGNXUCB             ELSE PROCESS NEXT UCB
PATOP    TM    UCBFL1,UCBPERM      TEST IF SUBCHANNEL IS USABLE
         BZ    PATUSE              BRANCH IF VALID
         B     PPGNXUCB             ELSE PROCESS NEXT UCB
PATUSE   TM    UCBSTAT,UCBONLI     TEST IF DEVICE IS ON-LINE
         BNO   PPGNXUCB            BRANCH IF NOT
PPGSKIP  TM    UCBFLA,UCBNRY       TEST IF DEVICE IS IN READY
         BO    PPGNXUCB            BRANCH IF NOT
         L     R9,PPGNAMTB         FETCH ADDRESS OF LAST ENTRY
         USING PPGVAREA,R9         ESTABLISH PPGVAREA ADDRESSABILITY
         ST    R2,PPGADUCB         SAVE ADDRESS OF UCB
         MVC   PPGVOLSR,UCBVOLI    SAVE VOLUME SERIAL NUMBER
         DROP  R9                  FORGET PPGVAREA
         LA    R9,PPGVALEN(R9)     POINT TO NEXT ENTRY
         ST    R9,PPGNAMTB         THEN SAVE IT
         XC    0(PPGVALEN,R9),0(R9) CLEAR ENTRY
         LA    R7,1(R7)            INCREMENT COUNT BY ONE
PPGNXUCB DS    0H
         ICM   R2,15,UCBNXUCB      ADDRESS OF NEXT UCB
         BE    PPGSORT             EXIT IF DONE
         BCT   R3,PATFINDV         LOOP POWER!
*---     SORT UCB ENTRIES BY VOLUME SERIAL NUMBER                  ---*
PPGSORT  L     R4,PPGUCBTB         POINT TO UCB ENTRIES
         LTR   R15,R7              SAVE NUMBER OF UCBS
         BE    PPGNONE             BRANCH IF NONE WERE LOCATED
         SR    R3,R3               ZERO REGISTER 3
         LR    R6,R4               ARRAY ADDRESS
         BCTR  R7,0                REDUCE NUMBER OF ENTRIES BY 1
         C     R7,=F'0'            TEST COUNT FOR ZERO
         BE    PPGNUR1             SKIP IF ONLY ONE
         LR    R9,R7               NUMBER OF MEMBERS
PPGCIRCL LR    R5,R6               ARRAY ADDRESS
PPGNXENT LA    R5,10(R5)           ADDRESS OF ENTRY TO BE TESTED
         CLC   4(6,R6),4(R5)       COMPARE MEMBER NAMES
         BL    PPGLPCNT            BRANCH IF LOW
         MVC   PPGHOLD(PPGVALEN),0(R6) SAVE PREEMPTED ENTRY
         MVC   0(PPGVALEN,R6),0(R5) REPLACE OLD LOW
         MVC   0(PPGVALEN,R5),PPGHOLD MOVE OLD LOW TO NEW POSITION
PPGLPCNT BCT   R7,PPGNXENT         ETC.
         LA    R6,PPGVALEN(R6)     ENTRY FOR NEXT LOOP
         BCTR  R9,0                REDUCE GPR9 BY ONE
         LTR   R7,R9               TEST IF FINISHED
         BNZ   PPGCIRCL            LOOP TILL DONE ( MEDIUM WELL )
PPGNUR1  LA    R6,PPGVALEN(R6)     POSITION BEYOND SELECTED MEMBERS
         MVC   0(PPGVALEN,R6),PPGLNTRY SET CONSTANT FOR END INDICATOR
         L     R8,PPGWTOND         POINT TO HOLD AREA
*---     OBTAIN AND PRINT SOME INFORMATION RELATED TO EACH VOLUME  ---*
         LR    R7,R15              RESTORE NUMBER OF UCBS
         L     R4,PPGUCBTB
         L     R2,0(R4)            FETCH FIRST UCB ADDRESS
PPGNEWPG PUT   PPGDCB,PPGUCBT-1    PRINT TITLES
         MVI   PPGAREA-1,C'0'      SKIP TWO LINES
         LA    R5,58               LINES PER PAGE
PPGDOLNE LA    R6,2                NUMBER OF ENTRIES PER LINE
         LA    R3,PPGAREA          POINT TO BEGINNING OF OUTPUT AREA
         USING PPGSVC78,R3         ESTABLISH PPGSVC78 ADDRESSABILITY
         MVI   PPGAREA,C' '        FIRST OF MANY BLANKS
         MVC   PPGAREA+1(L'PPGAREA-1),PPGAREA CLEAR OUTPUT AREA
PPGSETUP MVC   PPGVOLID,UCBVOLI    VOLUME SERIAL NUMBER
         UNPK  PPGADR(5),UCBCHAN(3) HEXADECIMAL NAME OF UNIT
         TR    PPGADR,PPGTRANS-240 EBCDIC NAME OF UNIT
         MVI   PPGADR+4,C' '       CLEAR THE TRASH
         LA    R1,SVCWKFLD         POINT TO SVC'S WORK AREA
         LR    R0,R2               PROVIDE ADDRESS OF UCB TO LSPACE
         SVC   78                  OBTAIN 'DSCB 5' INFORMATION
         LTR   R15,R15             TEST IF INFO OBTAINED SUCCESSFULLY
         BE    PPG78AOK            BRANCH IS SO
         MVC   PPGFRCYL-1(30),SVCWKFLD MOVE ERROR MESSAGE TO OUTPT AREA
         B     PPGOVR51            CONTINUE DOWN THE PRIMROSE PATH
PPG78AOK MVC   PPGFRCYL,SVCFRCYL   TRANSFER FREE-CYLINDER INFORMATION
         MVC   PPGFRTRK,SVCFRTRK   TRANSFER FREE-TRACK INFORMATION
         MVC   PPGNOEXT,SVCNOEXT   TRANSFER NUMBER OF EXTENTS
         MVC   PPGMXCYL,SVCMXCYL   TRANSFER SIZE OF LARGEST CYL EXTENT
         MVC   PPGMXTRK,SVCMXTRK   TRANSFER SIZE OF LARGEST TRK EXTENT
         MVI   PPGSLASF,C'/'       SEPARATE CYLINDERS AND TRACKS
         MVI   PPGSLASC,C'/'       SEPARATE CYLINDERS AND TRACKS
         SR    R14,R14             CLEAR A WORK REGISTER
         IC    R14,UCBTBYT4        RETRIEVE THE DEVICE CODE
         L     R1,CVTPTR           CVT ADDRESS
         USING CVTMAP,R1           ESTABLISH CVT ADDRESSABILITY
         L     R1,CVTZDTAB         DEVICE CHARACTERISTICS TABLE ADDRESS
         DROP  R1                  FORGET CVT
         USING DVCTI,R1            ESTABLISH DCVTI ADDRESSABILITY
         IC    R14,DVCTIOFF(R14)   OFFSET TO DEVICE DESCRIPTION
         DROP  R1                  FORGET DVCTI
         ALR   R14,R1              POINT TO DEVICE DESCRIPTION ENTRY
         USING DVCT,R14            ESTABLISH DCVT ADDRESSABILITY
         L     R15,UCBEXTP-1       UCB COMMON EXTENSION
         USING UCBETI,R15          ESTABLISH ADDRESSABILITY TO EXTNSION
         L     R15,UCBCLEXT        DASD CLASS EXTENSION
         DROP  R15                 FORGET EXTENSION
         USING DCE,R15             ESTABLISH DCE ADDRESSABILITY
         ICM   R0,3,DCEUDCYL       NUMBER OF CYLINDERS ON VOLUME
         MH    R0,DVCTRK           COMPUTE NUMBER OF TRACKS ON VOLUME
         SH    R0,DVCALT           REDUCE BY NUMBER OF ALTERNATE TRACKS
         CVD   R0,PPGTWICE         ALTER ITS RADIX
         MVC   PPGTOTCY(7),PPGPATCY MOVE PATTERN TO OUTPUT
         ED    PPGTOTCY(7),PPGTWICE+5 MAKE IT PRETTY
         LA    R1,PPGMODTB-PPGMODSZ POINT TO PSEUDO START OF MODEL TBL
         LA    R14,PPGNMENT        NUMBER OF ENTRIES IN MODEL TABLE
PPGMODLP LA    R1,PPGMODSZ(R1)     NEXT ENTRY IN MODEL TABLE
         CLC   DCEMDRDT(1),0(R1)   TEST FOR MATCHING MODEL NUMBER
         BE    PPGFNDMD            BRANCH IF A MATCH IS LOCATED
         BCT   R14,PPGMODLP        OTHERWISE, TRY AGAIN
         MVC   PPGTYPE+5(1),DCEMDRDT AT END, STOW MODEL INFO IN OUTPUT
         MVI   PPGTYPE+4,C'?'      INDICATE AN UNKNOWN MODEL # PRESENT
         B     PPGOVR51            OWNWARD...
PPGFNDMD MVC   PPGTYPE(6),2(R1)    DEVICE TYPE TO OUTPUT AREA
         L     R14,PPGMODCT(R1)    FETCH COUNT OF THIS TYPE OF DEVICE
         LA    R14,1(R14)          INCREMENT IT BY ONE
         ST    R14,PPGMODCT(R1)    THEN REVISE UNIT COUNT
         DROP  R15,R14             FORGET DVCT AND DCE
PPGOVR51 LA    R3,L'PPGUCBT(R3)    NEXT OUTPUT POSITION
         LA    R4,PPGVALEN(R4)     NEXT UCB ENTRY
         ICM   R2,15,0(R4)         ADDRESS OF UCB
         BE    PPGPUTIT            BRANCH IF AT END
         BCT   R6,PPGSETUP         FILL LINE
         PUT   PPGDCB,PPGAREA-1    TRANSCRIBE A LINE
         MVC   0(2*L'PPGUCBT,R8),PPGAREA SAVE EACH LINE PRINTED
         LA    R8,2*L'PPGUCBT(R8)  NEXT OUTPUT LOCATION
         LA    R10,2(R10)          COUNT ENTRIES
         MVI   PPGAREA-1,C' '      CLEAR DOUBLE SPACE
         BCT   R5,PPGDOLNE         LOOP POWER
         B     PPGNEWPG            PAGE EJECT
         DROP  R3                  FORGET PPGSVC78
PPGPUTIT PUT   PPGDCB,PPGAREA-1    TRANSCRIBE A LINE
         MVI   PPGAREA-1,C' '      CLEAR DOUBLE SPACE
         MVC   0(L'PPGUCBT,R8),PPGAREA SAVE EACH LINE PRINTED
         LA    R10,1(R10)          COUNT ENTRIES
         CLI   L'PPGUCBT+7(R8),C' ' TEST IF ONE-HALF LINE
         BE    PPGCOUTA            BRANCH IF SO
         LA    R10,1(R10)          COUNT ANOTHER
         MVC   L'PPGUCBT(L'PPGUCBT,R8),PPGAREA+L'PPGUCBT SAVE ANOTHER
PPGCOUTA MVC   PPGAREA,PPGAREA-1   CLEAR OUTPUT AREA
*---     SORT UCB ENTRIES BY UNIT ADDRESS                          ---*
PPGSORTA L     R4,PPGWTOBG         POINT TO UCB ENTRIES
         LR    R7,R10              PRINT NUMBER OF LINES
         LTR   R15,R7              SAVE NUMBER OF UCBS
         BE    PPGNONE             BRANCH IF NONE WERE LOCATED
         SR    R3,R3               ZERO REGISTER 3
         LR    R6,R4               ARRAY ADDRESS
         BCTR  R7,0                REDUCE NUMBER OF ENTRIES BY 1
         C     R7,=F'0'            TEST COUNT FOR ZERO
         BE    PPGNUR1A            SKIP IF ONLY ONE
         LR    R9,R7               NUMBER OF MEMBERS
PPGCIRCA LR    R5,R6               ARRAY ADDRESS
PPGNXENA LA    R5,L'PPGUCBT(R5)    ADDRESS OF ENTRY TO BE TESTED
         CLC   7(4,R6),7(R5)       COMPARE MEMBER NAMES
         BL    PPGLPCNA            BRANCH IF LOW
         MVC   PPGHOLD(L'PPGUCBT),0(R6) SAVE PREEMPTED ENTRY
         MVC   0(L'PPGUCBT,R6),0(R5) REPLACE OLD LOW
         MVC   0(L'PPGUCBT,R5),PPGHOLD MOVE OLD LOW TO NEW POSITION
PPGLPCNA BCT   R7,PPGNXENA         ETC.
         LA    R6,L'PPGUCBT(R6)    ENTRY FOR NEXT LOOP
         BCTR  R9,0                REDUCE 9 BY ONE
         LTR   R7,R9               TEST IF FINISHED
         BNZ   PPGCIRCA            LOOP TILL DONE
PPGNUR1A LA    R6,L'PPGUCBT(R6)    POSITION BEYOND SELECTED MEMBERS
         MVI   0(R6),C' '          FIRST BLANK
         MVC   0(156,R6),0(R6)     ALL BLANKS
         L     R8,PPGWTOBG         POINT TO HOLD AREA
PPGPUTA  PUT   PPGDCB,PPGUCBT-1    PRINT TITLES
         MVI   PPGAREA-1,C'0'      SKIP TWO LINES
         LA    R5,58               LINES PER PAGE
PPGPLNEA MVC   PPGAREA(2*L'PPGUCBT),0(R8) DATA TO OUTPUT AREA
         PUT   PPGDCB,PPGAREA-1    TRANSCRIBE DATA
         MVI   PPGAREA-1,C' '
         BCTR  R10,R0
         LTR   R10,R10
         BE    PPGDONEA
         BCTR  R10,R0
         LTR   R10,R10
         BE    PPGDONEA
         LA    R8,2*L'PPGUCBT(R8)
         BCT   R5,PPGPLNEA
         B     PPGPUTA
PPGDONEA L     R9,PPGUCBTB         PROCESS UCBS
         L     R2,0(R9)            FIRST OF MANY
         MVI   PPGAREA-1,C' '
         MVC   PPGAREA,PPGAREA-1   CLEAR OUTPUT AREA
         LA    R10,PPGMODTB-PPGMODSZ POINT TO PSEUDO START OF MODEL TBL
         LA    R3,PPGNMENT         NUMBER OF ENTRIES IN MODEL TABLE
         MVI   PPGAREA-1,C'1'      FORCE PAGE EJECT
         SR    R4,R4               CLEAR WORK REGISTER
PPGPCONT LA    R10,PPGMODSZ(R10)   NEXT ENTRY IN MODEL TABLE
         MVC   PPGAREA+7(6),2(R10) DEVICE TYPE TO OUTPUT AREA
         L     R0,PPGMODCT(R10)    FETCH COUNT OF DEVICES FOR THIS TYPE
         AR    R4,R0               TALLY UNITS
         CVD   R0,PPGTWICE         ALTER RADIX OF COUNT
         MVC   PPGAREA(6),PPGPATRN MOVE EDIT PATTERN TO OUTPUT AREA
         ED    PPGAREA(6),PPGTWICE+5 EDIT DATA
         PUT   PPGDCB,PPGAREA-1    TRANSCRIBE DATA
         MVI   PPGAREA-1,C' '      BLANK
         BCT   R3,PPGPCONT         LOOP 'TIL DONE
         MVI   PPGAREA-1,C'-'      TRIPLE SPACE
         MVC   PPGAREA+7(40),=CL40'TOTAL NUMBER OF DIRECT ACCESS DEVICES
               S'                  DESCRIBE DATA
         CVD   R4,PPGTWICE         ALTER RADIX OF COUNT
         MVC   PPGAREA(6),PPGPATRN MOVE EDIT PATTERN TO OUTPUT AREA
         ED    PPGAREA(6),PPGTWICE+5 EDIT DATA
         PUT   PPGDCB,PPGAREA-1    TRANSCRIBE DATA
         MVI   PPGAREA-1,C' '
         MVC   PPGAREA,PPGAREA-1   CLEAR OUTPUT AREA
         CLI   PPGONEVL,C'*'       TEST IF LISTING OF VOLUME AND ADR
         BE    PPGQEXIT            EXIT IF SO
         SR    R10,R10             CLEAR REGISTER USED TO COUNT DSN'S
PPGREAL  LA    R1,UCBVOLI
         ST    R1,CAMLST4+8        FEED VOLUME SERIAL NUMBER TO CAMLST
         ST    R1,CAMLST3+8        FEED VOLUME SERIAL NUMBER TO CAMLST
         ST    R1,CAMLST1+8        FEED VOLUME SERIAL NUMBER TO CAMLST
         MVC   PPGVOLUM,UCBVOLI    FEED VOLUME SERIAL NUMBER TO SVC 99
         SR    R14,R14             CLEAR A WORK REGISTER
         IC    R14,UCBTBYT4        RETRIEVE THE DEVICE CODE
         L     R1,CVTPTR           CVT ADDRESS
         USING CVTMAP,R1           ESTABLISH CVT ADDRESSABILITY
         L     R1,CVTZDTAB         DEVICE CHARACTERISTICS TABLE ADDRESS
         DROP  R1                  FORGET CVT
         USING DVCTI,R1            ESTABLISH DCVTI ADDRESSABILITY
         IC    R14,DVCTIOFF(R14)   OFFSET TO DEVICE DESCRIPTION
         DROP  R1                  FORGET DVCTI
         ALR   R14,R1              POINT TO DEVICE DESCRIPTION ENTRY
         USING DVCT,R14            ESTABLISH DCVT ADDRESSABILITY
         L     R15,UCBEXTP-1       UCB COMMON EXTENSION
         USING UCBETI,R15          ESTABLISH ADDRESSABILITY TO EXTNSION
         L     R15,UCBCLEXT        DASD CLASS EXTENSION
         DROP  R15                 FORGET EXTENSION
         USING DCE,R15             ESTABLISH DCE ADDRESSABILITY
         LA    R1,PPGMODTB-PPGMODSZ POINT TO PSEUDO START OF MODEL TBL
         LA    R14,PPGNMENT        NUMBER OF ENTRIES IN MODEL TABLE
PPGUNILP LA    R1,PPGMODSZ(R1)     NEXT ENTRY IN MODEL TABLE
         CLC   DCEMDRDT(1),0(R1)   TEST FOR MATCHING MODEL NUMBER
         BE    PPGFNDUN            BRANCH IF A MATCH IS LOCATED
         BCT   R14,PPGUNILP        OTHERWISE, TRY AGAIN
         WTO   'UNKNOWN UNIT TYPE'
         DC    H'0'                WHOA!!!
         DROP  R14,R15             FORGET DCE AND DVCT
PPGFNDUN MVC   PPGUNIT,2(R1)       DEVICE TYPE TO OUTPUT AREA
*---   COMPUTE THE CCHHR ADDRESS OF A VTOC                         ---*
         SR    R4,R4               CLEAR A WORK REGISTER
         IC    R4,UCBTBYT4         RETRIEVE THE DEVICE CODE
         L     R1,CVTPTR           CVT ADDRESS
         USING CVTMAP,R1           ESTABLISH CVT ADDRESSABILITY
         L     R1,CVTZDTAB         DEVICE CHARACTERISTICS TABLE ADDRESS
         DROP  R1                  FORGET CVT
         USING DVCTI,R1            ESTABLISH DCVTI ADDRESSABILITY
         IC    R4,DVCTIOFF(R4)     OFFSET TO DEVICE DESCRIPTION
         DROP  R1                  FORGET DVCTI
         ALR   R4,R1               POINT TO DEVICE DESCRIPTION ENTRY
         USING DVCT,R4             ESTABLISH DCVT ADDRESSABILITY
         LH    R6,DVCTRK           NUMBER OF TRACKS/CYLINDER
         LH    R7,DVCALT           NUMBER OF ALTERNATE TRACKS/VOLUME
         STM   R6,R7,PPGTPCYL      STOW THAT INFORMATION
         DROP  R4                  FORGET DCVT
         LH    R6,UCBVTOC          LOAD RELATIVE ADDRESS OF THE VTOC
         SRDA  R6,32               R6 --> R7
         D     R6,PPGTPCYL         DIV. TT / SPECIFIC TRACKS/CYLINDER
         STH   R7,PPGCCHHR         CC - VTOC'S CYLINDER ADDRESS
         STH   R6,PPGCCHHR+2       HH - VTOC'S TRACK ADDRESS
         MVI   PPGCCHHR+4,X'01'    R  - VTOC'S RECORD NUMBER - ALWAYS 1
         MVC   PPGKEEP,PPGCCHHR    RETAIN CCHHR
         NI    PPGSWT,255-DS4IVTOC RESET INDEXED VTOC INDICATOR
         OBTAIN CAMLST4            READ FORMAT 4 DSCB
         LTR   R15,R15             TEST IF FORMAT 4 IS OBTAINABLE
         BNE   PPG4ERR             BRANCH IF NOT
         CLI   DS4IDFMT,C'4'       TEST IF FORMAT 4 DSCB
         BNE   PPG4ERR             BRANCH IF NOT
         MVC   PPGDEVSZ,DS4DEVSZ   RETAIN DEVICE SIZE FOR COMPUTATIONS
         MVC   PPGDSCBT,DS4DEVDT   RETAIN NUMBER OF DSCB'S PER TRACK
         MVC   PPGHIADD,DS4HPCHR   RETAIN HIGHEST ADDRESS OF A FORMAT 1
         SR    R11,R11             CLEAR WORK REGISTER
         IC    R11,DS4DEVDT        FETCH NUMBER OF DSCB'S/TRACK
         BCTR  R11,R0               MINUS DSCB 4
         LH    R1,PPGDEVSZ         CYLINDERS ON THIS VOLUME
         CVD   R1,PPGTWICE         ALTER ITS RADIX
         MVC   PPGTITLE+30+13+13(7),PPGPATCY MOVE PATTERN TO OUTPUT
         ED    PPGTITLE+30+13+13(7),PPGTWICE+5 MAKE IT PRETTY
         MVC   PPGTITLE+30+13+13+8(40),=CL40'- SIZE OF VOLUME IN CYLINDE
               ERS'
         MVC   PPGTITLE+30+13+13+8+40(9),=CL9'INDEX - N' SHOW NO INDEX
         TM    DS4VTOCI,DS4IVTOC   TEST IF VOLUME CONTAINS INDEXED VTOC
         BNO   PPGREAD1            BRANCH IF NOT
         MVI   PPGTITLE+30+13+13+8+40+8,C'Y' SHOW VTOC IS INDEXED
         OI    PPGSWT,DS4IVTOC     SET INDEXED-VTOC SWITCH
         SR    R6,R6               CLEAR WORK REGISTER
         IC    R6,PPGDSCBT         NUMBER OF DSCB'S PER TRACK
         SH    R6,=H'2'             MINUS TWO
PPGDO6   SR    R15,R15             CLEAR WORK REGISTER
         IC    R15,PPGCCHHR+4      NUMBER OF LAST DSCB OBTAINED
         LA    R15,1(R15)          BUMP BY ONE
         STC   R15,PPGCCHHR+4      NUMBER OF NEXT DSCB TO BE OBTAINED
         OBTAIN CAMLST1            READ FORMAT 1 DSCB
         LTR   R15,R15             TEST IF DSCB IS OBTAINABLE
         BNE   PPG1ERR             BRANCH IF NOT
         CLI   DS1FMTID,C'1'       TEST IF FORMAT 1 DSCB
         BNE   PPGNEXT6            BRANCH IF NOT
         CLC   DS1DSNAM(12),=CL12'SYS1.VTOCIX.' TEST IF INDEXD VTOC DSN
         BNE   PPGNEXT6            BRANCH IF NOT
         MVC   PPGDSNAM,DS1DSNAM   PRIME SVC 99 PARAMETER LIST
         LA    R3,PPGDCB99         POINT TO ACTIVE DCB
         USING IHADCB,R3           ESTABLISH DCB ADDRESSABILITY
         MVC   DCBBLKSI,DS1BLKL    SET BLOCK SIZE OF DATASET
*---     ALLOCATE A DATASET WHOSE PREFIX IS SYS1.VTOCIX.          ---*
         STM   R0,R15,SAVE2        PRESERVE ALL REGISTERS
CMRALLY  OI    S99END,X'80'        TERMINATE SVC 99 PARAMETER LIST
         LA    R1,SVC99CMR         POINT TO SVC 99 PARAMETER LIST
         DYNALLOC                  REQUEST ALLOCATION OF DATASET
         LTR   R15,R15             TEST FOR SUCCESSFUL ALLOCATION
         BNE   PPGDYNER            BRANCH ON FAILURE & ISSUE DIAGNOSTIC
*        OPEN DATASET
         MVC   DCBDDNAM,PPGDDNAM   STUFF DDNAME INTO DCB
         OPEN  (PPGDCB99)          PREPARE DATASET FOR USE
         TM    DCBOFLGS,DCBOFOPN   TEST IF OPEN WAS SUCCESSFUL
         BO    PPGUDOPN            BRANCH IF SO
         MVC   PPGBADOP+8+16(8),PPGDDNAM STUFF DDNAME INTO WTO
PPGBADOP WTO   'OPEN FAILED FOR 12345678'
         DC    H'0'
PPGUDOPN LH    R1,DCBBLKSI         RETRIEVE SIZE OF BLOCKS TO BE READ
         ST    R1,PPGBLKSI         STOW FOR COMPUTATIONS
         ST    R1,PATREADV+4       STOW FOR READ
         CLC   PPGUNIT,=CL4'3390'  TEST IF DEVICE IS A 3390
         BNE   PPGCK80             BRANCH IF NOT
         BAL   R15,PPG3390         DO 3390 DEVICE
         B     PPGCKGET            CONTINUE...
PPGCK80  BAL   R15,PPG3380         DO 3380 DEVICE
PPGCKGET ICM   R1,15,PPGBASE       TEST IF GETMAIN HAS BEEN ISSUED
         BNE   PPGCORAV            BRANCH IF SO
PPGETCOR GETMAIN R,LV=200000       OBTAIN WORK AREA
         ST    R1,PPGBASE          POINT TO BEGINNING OF LIST
PPGCORAV LR    R8,R1               REPEAT R1
         AH    R8,DCBBLKSI         HOLD AREA 4 CCHHR OF FORMAT 1 DSCB'S
         ST    R8,PPGCCHHL         POINT TO END OF LIST
         ST    R8,PPGCCHHH         POINT TO BEGINNING OF LIST
         MVI   0(R8),X'FF'         TERMINATE ENTRIES
         ST    R1,PPGBASE          SAVE BASE OF ALL RELATIVE OFFSETS
         STCM  R1,7,PATREADV+1     STOW INPUT ADDRESS IN CCW
         LR    R4,R1               SAVE ADDRESS OF STORAGE AREA
         SR    R14,R14             CLEAR TRASH FROM WORK REGISTER
         SR    R15,R15             CLEAR TRASH FROM WORK REGISTER
         ICM   R15,7,DCBDEBA       OBTAIN ADDRESS OF DATA EXTENT BLOCK
         USING DEBBASIC,R15        ESTABLISH DEBBASIC ADDRESSABILITY
         LA    R1,32(R15)          POINT TO DEB'S EXTENSION
         USING DEBUCBAD,R1         ESTABLISH DASD SECTION ADDRESABILITY
         MVC   PATCYL#(4),DEBSTRCC PRIME STARTING CYLINDER AND TRACK
         MVI   PATREC#,1           PRIME STARTING RECORD NUMBER
         MVC   PATBGCYL(4),DEBSTRCC PRIME STARTING CYLINDER AND TRACK
         MVI   PPGECB,0            RESET ECB
         EXCP  PPGIOB              READ A BLOCK CONTAINING THE VIXM
         WAIT  ECB=PPGECB          TARRY AWHILE
         CLI   PPGECB,X'7F'        TEST IF READ WAS SUCCESSFUL
         BNE   PPGVIXME            BRANCH IF NOT
         MVI   PPGECB,0            RESET ECB
         USING VIMAP,R4            EXTABLISH VIXM ADDRESSABILITY
         CLC   VIMID,PPGVIXM       TEST IF MAP HEADER
         BNE   PPGVIXME            BRANCH IF NOT
         L     R15,VIMFHLV         FETCH RBA OF FIRST HI-LEVEL VIER
         LR    R7,R15
         BAL   R1,PPGRBABS         CONVERT RELATIVE BYTE ADR TO ABSOLUT
         EXCP  PPGIOB              READ BLOCK CONTAINING VIER HEADERS
         WAIT  ECB=PPGECB          TARRY AWHILE
         USING VIER,R4             EXTABLISH VIER ADDRESSABILITY
         LA    R15,*               POINT TO HERE
         CLI   PPGECB,X'7F'        TEST IF READ WAS SUCCESSFUL
         BNE   PPGVIERE            BRANCH IF NOT
         C     R7,VXRBA            TEST IF CORRECT VIER WAS READ
         BNE   PPGVIERE            BRANCH IF NOT
         CLI   VXPTRL,5            TEST IF THIS IS A LEVEL 1 VIER
         BE    PPGVIER5            BRANCH IF SO
PPGETLV5 L     R15,VXFOFST         FETCH OFFSET TO FIRST SECTION
         AR    R15,R4              ADDRESS OF FIRST SECTION
         USING VXSEC,R15           ESTABLISH ADDRESSABILITY FOR VXSEC
         LA    R15,VXENTS          POINT TO ENTRY DSECT
         USING VXENT,R15           ESTABLISH ADDRESSABILITY FOR VXENT
         L     R15,VXERPTR         FETCH RBA OF LOWER-LEVEL VIER
PPGDOCE  LR    R7,R15              SAVE RBA OF VIER TO BE READ
         BAL   R1,PPGRBABS         CONVERT RELATIVE BYTE ADR TO ABSOLUT
         MVI   PPGECB,0            RESET ECB
         EXCP  PPGIOB              READ A BLOCK
         WAIT  ECB=PPGECB          TARRY AWHILE
         LA    R15,*               POINT TO HERE
         CLI   PPGECB,X'7F'        TEST IF READ WAS SUCCESSFUL
         BNE   PPGVIERE            BRANCH IF NOT
         C     R7,VXRBA            TEST IF CORRECT VIER WAS READ
         BNE   PPGVIERE            BRANCH IF NOT
         CLI   VXPTRL,5            TEST IF VIER IS LEVEL 2 OR HIGHER
         BNE   PPGETLV5            BRANCH IF SO
PPGVIER5 LR    R15,R4              ADDRESS OF VIER
         A     R15,VXLSOFST        COMPUTE ADDRESS OF LAST SECTION
         ST    R15,PPGVLSEC        STOW IT
         DROP  R15                 FORGET DEB ET. AL.
         L     R5,VXFOFST          RETRIEVE OFFSET OF FIRST SECTION
         LR    R6,R4               SET BASE ADDRESS
         AR    R5,R6               COMPUTE ADDRESS OF FIRST SECTION
         USING VXSEC,R5            ESTABLISH VXSEC(SECTION) ADRESABILTY
PPGSLOOP LR    R3,R5               ADDRESS OF VXSEC
         AH    R3,VXLEOFST         ADR OF LAST ENTRY IN THIS SECTION
         LA    R11,VXENTS          POINT TO VIER ENTRY
         USING VXENT,R11           ESTABLISH VXENT(ENTRY) ADDRESSABILTY
PPGLOOP  LA    R1,VXERPTR          RBA OF LOWER LEVEL VIER
         LA    R9,VXERPTR+5        POINT TO DSN(HIGH KEY IN LOWER VIER)
         USING VXEKEY,R9           ESTABLISH VXEKEY ADDRESSABILTY
         A     R1,PPGBASE          POINT TO VIER STANDARD
         SR    R10,R10             CLEAR VOLATILE GENERAL PURPOSE REG
         ICM   R10,1,VXEKEYL       LENGTH OF DSNAME IN THIS VIER
         BE    PPGETNV             BRANCH IF SO
         BCTR  R10,R0              REDUCE LENGTH BY ONE
         MVI   PPGDSN,C' '         PREPARE TO BLANK HOLD AREA
         MVC   PPGDSN+1(L'PPGDSN-1),PPGDSN THEN BLANK IT
         EX    R10,PPGMVNAM        MOVE DSN TO HOLD AREA
PPGMVNAM MVC   PPGDSN(*-*),VXEKEY  HOLD DSN
         CLI   PPGDSN,X'FF'        TEST IF END OF FORMAT 1 DSCB'S
         BE    PPGIVEND            BRANCH IF END OF INDEXED VTOC
         MVC   0(5,R8),VXERPTR     STOW CCHHR OF DSN IN HOLD AREA
         LA    R8,5(R8)            POINT TO NEXT AVAILABLE LOCATION
         MVI   0(R8),X'FF'         TERMINATE LIST
*        UNPK  PPGCCHH#(9),VXERPTR(5) PRESENT CCHH
*        UNPK  PPGCCHH#+8(3),VXERPTR+4(2) PRESENT R
*        TR    PPGCCHH#(10),PPGTRANS-240 CONVERT TO EBCDIC
*        PUT   PPGOUT,PPGDSN       PRINT NAME
         CR    R11,R3              TEST IF LAST ENTRY IN THIS SECTION
         BNE   PPGNENS             BRANCH IF NOT
         C     R5,PPGVLSEC         TEST IF END OF SECTIONS IN THIS VIER
         BE    PPGETNV             BRANCH IF SO
         AH    R5,VXSECL           POINT TO NEXT SECTION IN THIS VIER
         B     PPGSLOOP
PPGNENS  LA    R11,VXERPTR+1+5(R10) POINT TO NEXT ENTRY IN THIS SECTION
         B     PPGLOOP
PPGETNV  ICM   R15,15,VXHZPTR      POINT TO NEXT VIER
         BNE   PPGDOCE             CONVERT RBA AND READ NEXT VIER
         DC    H'0'                UNABLE TO PROCEED
PPGIVEND CLOSE (PPGDCB99)          CLEAN HOUSE
         LM    R0,R15,SAVE2        RESTORE REGISTERS
         B     PPGREAD1            ENTER COMMON CODE
*  COMPUTE THE NUMBER OF BLOCKS POSSIBLE ON A 3380 FOR A SPECIFIC     *
*  BLOCK SIZE                                                         *
*  BLOCKS/TRACK = 1499 / ( 15 + 0 + ((BLKSIZE +12) / 32 )             *
PPG3380  SR    R0,R0               CLEAR REMAINDER REGISTER
         LH    R1,DCBBLKSI         FETCH BLOCK SIZE OF DATASET
         AH    R1,PATECC           ADD ECC BYTES
         D     R0,PAT32            DIVIDE BY CONSTANT OF 32
         LTR   R0,R0               TEST IF A REMAINDER IS PRESENT
         BE    PATNOREM            BRANCH IF NONE
         LA    R1,1(R1)            ROUND-UP TO NEXT HIGHER NUMBER
PATNOREM A     R1,PAT15            ADD CELLS FOR COUNT AREA AND GAPS
         LR    R14,R1              SAVE VALUE OBTAINED
         SR    R0,R0               CLEAR REMAINDER REGISTER
         L     R1,PAT1499          FETCH NUMBER OF USER DATA CELLS
         DR    R0,R14              COUMPUTE NUMBER OF BLOCKS PER TRACK
         ST    R1,PPGBLKPT         SAVE VALUE OBTAINED
         BR    R15                 RETURN TO CALLER
*  COMPUTE THE NUMBER OF BLOCKS POSSIBLE ON A 3390 FOR A SPECIFIC     *
*  BLOCK SIZE                                                         *
* BLOCKS/TRACK =1729/(10+0+(9+((BLKSIZE+(6*((BLKSIZE+6)/232))+6)/34)))*
PPG3390  LH    R1,DCBBLKSI         SET BLOCK SIZE OF DATA
         A     R1,PAT6             PLUS SIX
         SR    R0,R0               CLEAR REMAINDER REGISTER
         D     R0,PAT232           DIVIDE BY CONSTANT OF 232
         LTR   R0,R0               TEST IF A REMAINDER IS PRESENT
         BE    PPGNOREM            BRANCH IF NONE
         LA    R1,1(R1)            ROUND-UP TO NEXT HIGHER NUMBER
PPGNOREM MH    R1,PAT6+2           TIMES SIX
         A     R1,PAT6             PLUS SIX
         AH    R1,DCBBLKSI         PLUS BLOCK SIZE
         SR    R0,R0               CLEAR REMAINDER REGISTER
         D     R0,PAT34            DIVIDE BY 34
         LTR   R0,R0               TEST IF A REMAINDER IS PRESENT
         BE    PPHNOREM            BRANCH IF NONE
         LA    R1,1(R1)            ROUND-UP TO NEXT HIGHER NUMBER
PPHNOREM A     R1,PAT9             PLUS NINE
         A     R1,PAT10            PLUS TEN
         LR    R14,R1              SAVE VALUE
         L     R1,PAT1729          FETCH CONSTANT FOR 3390 DEVICES
         SR    R0,R0               CLEAR REMAINDER REGISTER
         DR    R0,R14              COUMPUTE NUMBER OF BLOCKS PER TRACK
         ST    R1,PPGBLKPT         SAVE VALUE OBTAINED
         BR    R15                 RETURN TO INVOKER
*  AT ENTRY, R15 CONTAINS THE RBA OF A VIER THAT IS TO BE READ;       *
*  USING THAT VIER'S RBA, COMPUTE ITS ABSOLUTE TRACK ADDRESS.         *
* RELATIVE RECORD # = R + 1 WHERE R IS THE REMAINDER OF:              *
*                   ((VIER'S RBA)/(VIER BLKSIZE))/(RECS PER TRK)      *
* RELATIVE TRACK NUMBER = REMAINDER OF:  Q / ( # OF RECORDS PER TRK ) *
*                       WHERE Q IS THE QUOTIENT FROM ABOVE.           *
* RELATIVE CYLINDER = ( Q OF REL TRK COMP / TRACKS PER CYLINDER )     *
* ABSOLUTE TRK ADR = RELATIVE CYL #, RELATIVE TRACK #, REL RECORD #   *
*                   (A JUXTAPOSITION OF COMPUTATIONS FROM ABOVE)      *
PPGRBABS SR    R14,R14             CLEAR REMAINDER REGISTER
         D     R14,PPGBLKSI        COMPUTE RELATIVE RECORD # OF VIER
         SR    R14,R14             ZERO ZERO
         D     R14,PPGBLKPT        COMPUTE RELATIVE TRACK ADR OF VIER
         LA    R14,1(R14)          ACTUAL RECORD NUMBER
         STC   R14,PATREC#         REMAINDER IS RECORD NUMBER
         SR    R14,R14             REMOVE REMAINDER
         D     R14,PPGTPCYL        COMPUTE RELATIVE CYL AND TRK ADDRESS
         AH    R14,PATBGTRK        ADD  BEGINNING OF EXTENTS
         STH   R14,PATTRK#         STOW RELATIVE TRACK NUMBER
         AH    R15,PATBGCYL        ADD  BEGINNING OF EXTENTS
         STH   R15,PATCYL#         STOW RELATIVE CYLINDER NUMBER
         LH    R15,PPGDEVSZ+2      FETCH MAXIMUM TRACK NUMBER
         BCTR  R15,R0              REDUCE BY ONE
         CH    R15,PATTRK#         TEST IF HEAD NUMBER EXCEEDS MAXIMUM
         BNL   0(R1)               IF NOT, RETURN
         MVI   PATTRK#+1,0           ELSE SET HEAD NUMBER TO ZERO
         LH    R15,PATCYL#         FETCH CYLINDER NUMBER OF NEXT READ
         LA    R15,1(R15)          INCREMENT IT BY ONE
         STH   R15,PATCYL#         AND REVISE SEEK ADDRESS
         BR    R1
*** USE ACTUAL AND COMPUTED VALUES
*---     ISSUE APPROPRIATE ERROR MESSAGES                          ---*
PPGDYNER MVC   PPGMSGNM,PPGDSNAM   STUFF NAME OF DATASET INTO MESSAGE
         ST    R15,PPGTWICE+4      STORE RETURN CODE
         UNPK  PPGTWICE(3),PPGTWICE+7(2) ADD ZONES TO PREFIX OF RC
         TR    PPGTWICE(2),PPGTRANS-240 CONVERT TO EBCDIC
         MVC   PPGR15RC,PPGTWICE   RC IN R15 TO ERROR MESSAGE
         ST    R0,PPGHOLDF         STORE REASON CODE
         UNPK  PPGTWICE(9),PPGHOLDF(5) ADD ZONES TO PREFIX OF REASON
         TR    PPGTWICE,PPGTRANS-240 CONVERT TO EBCDIC
         MVC   PPGR0RC,PPGTWICE    RC IN R15 TO ERROR MESSAGE
         WTO   MF=(E,PPGDYNMS)     ISSUE ERROR MESSAGE
         DC    H'0'
PPGVIXME MVC   PPGVITYP,=CL2'XM'   STUFF TYPE OF BLOCK INTO MESSAGE
PPGVIMSG MVC   PPGVIXMV,PPGVOLUM   STUFF VOLUME SERIAL NUMBER INTO MSG
         WTO   MF=(E,PPGVIXMS)     ISSUE ERROR MESSAGE
         DC    H'0'
PPGVIERE MVC   PPGVITYP,=CL2'ER'   STUFF TYPE OF BLOCK INTO MESSAGE
         B     PPGVIMSG            COMPLETE MESSAGE
PPGNEXT6 BCT   R6,PPGDO6           TRY UNTIL END OF FIRST TRACK
         MVC   PPGCCHHR,PPGKEEP    RESTORE CCHHR
         NI    PPGSWT,255-DS4IVTOC RESET INDEXED VTOC INDICATOR
*---     PROCESS A FORMAT 1 DSCB                                   ---*
PPGREAD1 TM    PPGSWT,DS4IVTOC     TEST IF VOLUME CONTAINS INDEXED VTOC
         BNO   PPGGET1             BRANCH IF NOT
         L     R1,PPGCCHHL         NEXT CCHHR IN LIST
         CLI   0(R1),X'FF'         TEST IF END OF LIST OF CCHHR'S
         BE    PPGDOUCB            IF SO, DEPART
         MVC   PPGCCHHR,0(R1)      PREPARE CAMLST PARAMETER
         LA    R1,5(R1)            POINT TO NEXT ENTRY
         ST    R1,PPGCCHHL         STOW POINTER TO NEXT ENTRY IN LIST
         B     PPGOB1              OBTAIN FORMAT 1 DSCB
PPGGET1  SR    R15,R15             CLEAR WORK REGISTER
         IC    R15,PPGCCHHR+4      NUMBER OF LAST DSCB OBTAINED
         LA    R15,1(R15)          BUMP BY ONE
         STC   R15,PPGCCHHR+4      NUMBER OF NEXT DSCB TO BE OBTAINED
         CLC   PPGCCHHR,PPGHIADD   TEST IF IN TWILIGHT ZONE
         BH    PPGDOUCB            BRANCH IF SO
PPGOB1   OBTAIN CAMLST1            READ FORMAT 1 DSCB
         LTR   R15,R15             TEST IF DSCB IS OBTAINABLE
         BNE   PPG1ERR             BRANCH IF NOT
         CLI   DS1FMTID,C'1'       TEST IF FORMAT 1 DSCB
         BNE   PPGNEXT1            BRANCH IF NOT
         SR    R1,R1               CLEAR WORK REGISTER
         ICM   R1,3,DS1LSTAR       LAST TRACK USED
         CLI   DS1LSTAR+2,0        TEST IF VALID BLOCK
         BE    PPGSTSTR            BRANCH IF NOT
         LA    R1,1(R1)            INCREMENT RELATIVE USE COUNT
PPGSTSTR ST    R1,PPGLSTAR         STOW IT
         MVC   PPGDNAME,DS1DSNAM   SAVE NAME OF DATASET
         MVC   PPGHOLD,DS1DSNAM    SAVE NAME OF DATASET
         MVC   PATNAME,DS1DSNAM    SAVE NAME OF DATASET
*---     CONSTRUCT THE DATE THAT A DATASET WAS CREATED            ---*
         LH    R0,DS1CREDT+1       JULIAN DAY THAT DATASET WAS CREATED
         CVD   R0,PPGTWICE         ALTER ITS RADIX
         MVC   PPGBORN(2),PPGTWICE+6 SAVE CREATE DATE IN YYYF FORMAT
         SR    R0,R0               CLEAR WORK REGISTER
         IC    R0,DS1CREDT         YEAR OF DATASET'S CREATION
         CVD   R0,PPGTWICE         ALTER ITS RADIX
         LH    R0,PPGTWICE+6       PACKED DECIMAL DATE
         SRL   R0,4                ALIGN VALUE FOR STORING
         STH   R0,PPGTWICE+4       THEN STORE IT
         MVC   PPGTWICE+6(2),PPGBORN FABRICATED DATE IN 00YYDDDF FORMAT
         SPACE
         BAL   R14,PPGFABDT        CONSTRUCT CREATION DATE
         MVC   PPGBORN(9),PPGDATE+1
*---     CONSTRUCT THE DATE THAT A DATASET WAS LAST REFERENCED    ---*
         MVC   PPGLREF(9),=CL9'NEVER' ASSUME DATASET NEVER REFERENCD
         SR    R0,R0               CLEAR WORK REGISTER
         ICM   R0,3,DS1REFD+1      DAY THAT DATASET WAS LAST REFERENCD
         BE    PPGNOREF            BRANCH IF IT WAS ONLY ALLOCATED
         CVD   R0,PPGTWICE         ALTER ITS RADIX
         MVC   PPGLREF(2),PPGTWICE+6 SAVE REFERENCE DATE IN YYYF FORMAT
         SR    R0,R0               CLEAR WORK REGISTER
         IC    R0,DS1REFD          YEAR OF DATASET'S LAST REFERENCE
         CVD   R0,PPGTWICE         ALTER ITS RADIX
         LH    R0,PPGTWICE+6       PACKED DECIMAL DATE
         SRL   R0,4                ALIGN VALUE FOR STORING
         STH   R0,PPGTWICE+4       THEN STORE IT
         MVC   PPGTWICE+6(2),PPGLREF FABRICATED DATE IN 00YYDDDF FORMAT
         BAL   R14,PPGFABDT        CONSTRUCT DATE OF LAST REFERENCE
         MVC   PPGLREF(9),PPGDATE+1 STOW IT IN OUTPUT AREA
*---     FORMAT CHARACTERISTICS OF DATASET                        ---*
PPGNOREF LA    R15,16              BITS IN A HALF-WORD
         SR    R1,R1               CLEAR WORK REGISTER
         ICM   R1,12,DS1DSORG      FETCH ORGANIZATION OF DATASET
         BE    PPGUNORG
PPGSHIFT SLDL  R0,1                SHIFT DSORG BITS
         LTR   R1,R1               TEST IF ANY LEFT TO SHIFT
         BE    PPGDOORG            BRANCH IF SO
         BCT   R15,PPGSHIFT        LOOP 'TIL DONE
PPGUNORG MVC   PPGDSORG,=C'??'     BEATS ME
         B     PPGSKP
PPGDOORG MH    R15,=H'2'           COMPUTE OFFSET TO
         LA    R15,PPGORGTB(R15)   ENTRY IN TABLE OF DSORG'S
         MVC   PPGDSORG,0(R15)     AND STOW VALUE IN OUTPUT AREA
PPGSKP   SR    R6,R6               CLEAR WORK REGISTER
         IC    R6,DS1NOEPV         COUNT OF EXTENTS
         CVD   R6,PPGTWICE         ALTER ITS RADIX
         MVC   PPGXTNT,=X'40202120' PATTERN TO HOLD AREA
         ED    PPGXTNT,PPGTWICE+6  CONVERT EXTENT INFO INTO EBCDIC
         LH    R6,DS1LRECL         FETCH LOGICAL RECORD LENGTH OF DATA
         CVD   R6,PPGTWICE         ALTER ITS RADIX
         MVC   PPGLRECL-1(7),PPGPATCY PATTERN TO HOLD AREA
         ED    PPGLRECL-1(7),PPGTWICE+5 CONVERT LRECL INTO EBCDIC
         LH    R6,DS1BLKL          FETCH BLOCK SIZE OF DATASET
         CVD   R6,PPGTWICE         ALTER ITS RADIX
         MVC   PPGBLKCI+1(7),PPGPATCY PATTERN TO HOLD AREA
         ED    PPGBLKCI+1(7),PPGTWICE+5 CONVERT BLKSIZE INTO EBCDIC
         LH    R14,DS1EXT1+2       BEGINNING CYLINDER ADDR OF DATASET
         MH    R14,PPGDEVSZ+2      COMPUTE BEGINNING TRACK ADDRESS
         AH    R14,DS1EXT1+4       OF DATASET
         LH    R15,DS1EXT1+6       ENDING CYLINDER ADDR OF DATASET
         MH    R15,PPGDEVSZ+2      COMPUTE ENDING TRACK ADDRESS
         AH    R15,DS1EXT1+8       OF DATASET
         SR    R15,R14             COMPUTE SIZE OF DATASET IN TRACKS
         LA    R15,1(R15)          PLUS ONE
         CLI   DS1EXT2,0           TEST IF THERE IS ONLY A SINGLE XTENT
         BE    PPGENDEX            BRANCH IF SO
         LR    R1,R15              SAVE CURRENT SIZE OF DATASET
         LH    R14,DS1EXT2+2       BEGINNING CYLINDER ADDR OF DATASET
         MH    R14,PPGDEVSZ+2      COMPUTE BEGINNING TRACK ADDRESS
         AH    R14,DS1EXT2+4       OF DATASET
         LH    R15,DS1EXT2+6       ENDING CYLINDER ADDR OF DATASET
         MH    R15,PPGDEVSZ+2      COMPUTE ENDING TRACK ADDRESS
         AH    R15,DS1EXT2+8       OF DATASET
         SR    R15,R14             COMPUTE SIZE OF DATASET IN TRACKS
         LA    R15,1(R15)          PLUS ONE
         AR    R15,R1              TALLY BOTH EXTENTS
         CLI   DS1EXT3,0           TEST IF THERE IS ANOTHER EXTENT
         BE    PPGENDEX            BRANCH IF NOT
         LR    R1,R15              SAVE CURRENT SIZE OF DATASET
         LH    R14,DS1EXT3+2       BEGINNING CYLINDER ADDR OF DATASET
         MH    R14,PPGDEVSZ+2      COMPUTE BEGINNING TRACK ADDRESS
         AH    R14,DS1EXT3+4       OF DATASET
         LH    R15,DS1EXT3+6       ENDING CYLINDER ADDR OF DATASET
         MH    R15,PPGDEVSZ+2      COMPUTE ENDING TRACK ADDRESS
         AH    R15,DS1EXT3+8       OF DATASET
         SR    R15,R14             COMPUTE SIZE OF DATASET IN TRACKS
         LA    R15,1(R15)          PLUS ONE
         AR    R15,R1              TALLY BOTH EXTENTS
         CLI   DS1NOEPV,3          TEST IF THERE ARE MORE THAN 3 XTENTS
         BNH   PPGENDEX            BRANCH IF NOT
         MVC   PPGCCHH3(5),DS1PTRDS SET UP READ OF FORMAT 3
         LR    R7,R15              SAVE ACCUMULATED TRACK USAGE
         SR    R6,R6               CLEAR WORK REGISTER
         IC    R6,DS1NOEPV         COUNT OF EXTENTS
         SH    R6,=H'3'            REDUCE BY NUMBER ALREADY PROCESSED
*---     PROCESS A FORMAT 3 DSCB                                   ---*
PPGCAM3  OBTAIN CAMLST3            READ FORMAT 3 DSCB
         LTR   R15,R15             TEST IF DSCB IS OBTAINABLE
         BNE   PPG3ERR             BRANCH IF NOT
         CLI   DS3FMTID,C'3'       TEST IF FORMAT 3 DSCB
         BE    PPGISFM3            BRANCH IF SO
         CLI   DS3FMTID,C'3'       TEST IF FORMAT 2 DSCB
         BNE   PPG3ERR             BRANCH IF NOT
         MVC   PPGCCHH3(5),DS2PTRDS SET UP READ OF FORMAT 3
         CLC   PPGCCHH3(5),=XL5'0000000000' TEST FOR ACTUAL CCHHR
         BNE   PPGCAM3             BRANCH IF 'TIS ONE
         B     PPG2ERR              ELSE DO ERROR SCENE
PPGISFM3 LA    R4,4                MAX NO OF EXTENTS IN FIRST PART OF 3
         LR    R15,R7              RESTORE TRACK COUNT
         LA    R7,DS3EXTNT         MAX NO OF EXTENTS IN FIRST PART OF 3
PPGDOEXT LR    R1,R15              SAVE CURRENT SIZE OF DATASET
         LH    R14,2(R7)           BEGINNING CYLINDER ADDR OF DATASET
         MH    R14,PPGDEVSZ+2      COMPUTE BEGINNING TRACK ADDRESS
         AH    R14,4(R7)           OF DATASET
         LH    R15,6(R7)           ENDING CYLINDER ADDR OF DATASET
         MH    R15,PPGDEVSZ+2      COMPUTE ENDING TRACK ADDRESS
         AH    R15,8(R7)           OF DATASET
         SR    R15,R14             COMPUTE SIZE OF DATASET IN TRACKS
         LA    R15,1(R15)          PLUS ONE
         AR    R15,R1              TALLY BOTH EXTENTS
         LA    R7,10(R7)           NEXT EXTENT
         BCTR  R6,R0               COUNT EXTENTS
         LTR   R6,R6               TEST IF ANY MORE
         BE    PPGENDEX            BRANCH IF NOT
         BCT   R4,PPGDOEXT         LOOP POWER
* NOTE: SO LONG AS VSAM EXTENTS ARE THE SAME LENGTH, THIS LOOP
*       ACCURATELY COMPUTES THE SIZE OF A VSAM DATASET - PURE LUCK!
         LA    R7,DS3ADEXT         NEXT SET OF EXTENTS
         LA    R4,9                MAXIMUM ADDITIONAL EXTENTS
         B     PPGDOEXT            PROCESS THEM
*---     FORMAT INFORMATIONAL MESSAGES IN HOLD AREA FOR PERMANENT  ---*
*        DATASETS THAT EXCEED NINE PERCENT OF A VOLUME'S TOTAL        *
*        SPACE.  FOR TEMPORARY DATASETS, ACCUMULATE TOTALS FOR        *
*        EACH JOB UNTIL ALL FORMAT 1 DSCB'S HAVE BEEN PROCESSED.      *
*        NOTE: ONLY THE FIRST FORMAT 3 DSCB OF A DATASET IS           *
*---     PROCESSED.                                                ---*
PPGENDEX CVD   R15,PPGTWICE        ALTER ITS RADIX
         ST    R15,PPGXSIZE        STOW IT
         MVC   PPGDSIZE,PPGPATRN   MOVE PATTERN TO OUTPUT AREA
         ED    PPGDSIZE,PPGTWICE+5 MAKE IT PRETTY
         SR    R14,R14             CLEAR REMAINDER REGISTER
         LR    R0,R14              CLEAR REMAINDER REGISTER
         ICM   R1,15,PPGLSTAR      LAST TRACK USED
         BNE   PPGDOCOM            BRANCH IF NOT AVAILABLE
         MVC   PPGPCENT+3(4),=CL4'N/A'  CANNOT COMPUTE USAGE
         B     PPGTSYS
PPGDOCOM MH    R1,=H'100'          ALIGN FOR PERCENT
         DR    R0,R15              COMPUTE PERCENTAGE UTILIZATION
         MVC   PPGPCENT,PPGPATRN   MOVE PATTERN TO OUTPUT AREA
         CVD   R1,PPGTWICE         ALTER ITS RADIX
         ED    PPGPCENT,PPGTWICE+5 MAKE IT PRETTY
         MVI   PPGPCENT+6,C'%'     SHOW PERCENTAGE
PPGTSYS  CLC   PPGHOLD(3),=CL3'SYS' TEST IF POTENTIAL PERMANENT NAME
         BNE   PPGWRITE            BRANCH IF IN FACT 'TIS
         CLC   PPGHOLD+8(2),=CL2'.T' TEST AGAIN
         BNE   PPGWRITE            BRANCH IF NOT TEMPORARY DATASET
         CLI   PPGHOLD+16,C'.'     TEST AGAIN
         BNE   PPGWRITE            BRANCH IF NOT TEMPORARY DATASET
         CLI   PPGHOLD+22,C'.'     TEST AGAIN
         BNE   PPGWRITE            BRANCH IF NOT TEMPORARY DATASET
         B     PATBUILD            BRANCH IF SO
*---     OBTAIN CATALOG INFORMATION, WHEN REQUIRED                 ---*
PPGWRITE MVC   PPGCATVL-1(7),=CL7' ' BLANK VOLUME SERIAL NUMBER
         CLI   PPGONEVL,C'-'       TEST IF CATALOG CHECK TO BE BYPASSED
         BE    PATBUILD            IF SO, SKIP ISSUING LOCATE
         CLC   PATNAME(12),=CL12'SYS1.VTOCIX.' INDEXED-VTOC DATASET?
         BE    PATBUILD            IF SO, SKIP ISSUING LOCATE
         CLC   PATNAME(12),=CL12'CATALOG.ICF.' CATALOG INDEX?
         BE    PATBUILD            IF SO, SKIP ISSUING LOCATE
         LOCATE PATCAM             LOCATE LOCATION OF DATASET
         LTR   R15,R15             TEST IF OPERATION WAS SUCCESSFUL
         BE    PPGCATOK            BRANCH IF SO
         STC   R15,PPGTWICE+7      ALTER RADIX OF RETURN CODE
         UNPK  PPGTWICE(3),PPGTWICE+7(2) TO BE IN EBCDIC
         TR    PPGTWICE(2),PPGTRANS-240 BUT RETAIN HEXADECIMAL VALUE
         MVC   PPGCATVL(6),=CL6'RC= ' EXPLAIN MEANING OF FOLLOWING DATA
         MVC   PPGCATVL+3(2),PPGTWICE STOW INFORMATION IN MESSAGE
         B     PATBUILD            CONTINUE WITH CONSTRUCTION OF MSG
PPGCATOK MVC   PPGCATVL,PATSERNO   MOVE VOLUME SERIAL NUMBER OUTPUT
         CLC   PPGCATVL,UCBVOLI    TEST IF CATALOGUED TO THIS VOLUME
         BE    PATBUILD            BRANCH IF SO
         MVI   PPGCATVL-1,C'*'     ELSE FLAG IT
PATBUILD DS    0H
         CLC   PPGWTOVL(6),UCBVOLI TEST IF TITLE HAS BEEN DISPLAYED
         BE    PPGLESS9            BRANCH IF SO
         MVC   PPGWTOVL(6),UCBVOLI PLACE NAME OF VOLUME IN WTO
         MVC   PPGTITVL(6),UCBVOLI PLACE NAME OF VOLUME IN TITLE
*---     TRANSCRIBE DATA                                           ---*
PPGPTWO  PUT   PPGDCB,PPGTITLE     WRITE TITLE
         PUT   PPGDCB,PPGHEAD      WRITE HEADINGS
         MVI   PPGAREA-1,C'0'      DOUBLE SPACE
         LA    R8,56               SET NUMBER OF LINES PER PAGE
PPGLESS9 MVI   PPGWTOJB,C' '
         MVC   PPGWTOJB+1(24),PPGWTOJB CLEAR TRASH
         MVC   PPGWTOJB(25),PPGDNAME NAME OF DATASET
         MVC   PPGWTOSZ(6),PPGDSIZE NUMBER OF TRACKS ALLOCATED
         MVC   PPGWTOP,PPGPCENT    % OF VOLUME ATTRIBUTABLE TO THIS DSN
PPGSHOT  DS    0H
         BCT   R8,PPGPUT1          TRANSCRIBE A LINE
         B     PPGPTWO             DO TITLING
PPGPUT1  PUT   PPGDCB,PPGAREA-1    TRANSCRIBE A LINE
         LA    R10,1(R10)          COUNT DATASETS
         MVI   PPGAREA-1,C' '      SINGLE SPACE
         MVC   PPGAREA,PPGAREA-1   CLEAR OUTPUT AREA
         B     PPGNEXT1
*---     PROCESS ALL DIRECT ACCESS DEVICES                         ---*
PPGDOUCB L     R9,PPGUCBTB         POINT TO TABLE OF JOB UCBS
         LA    R9,PPGVALEN(R9)     POINT TO NEXT ENTRY IN TABLE
         ICM   R2,15,0(R9)         ADDRESS OF NEXT UCB
         ST    R9,PPGUCBTB         RETAIN ADDRESS OF NEXT ENTRY
         BNE   PPGREAL             IF AVAILABLE, PROCESS IT
*---     SPIT OUT ALL MESSAGES THEN CLEAN-UP AND TERMINATE         ---*
PPGEXIT  DS    0H
         MVC   PPGAREA,PPGAREA-1   CLEAR OUTPUT AREA
         CVD   R10,PPGTWICE        ALTER RADIX OF COUNT OF DATASETS
         MVI   PPGAREA-1,C'1'      FORCE PAGE EJECT
         MVC   PPGAREA(10),PPGTPATN MOVE EDIT PATTERN TO OUTPUT AREA
         ED    PPGAREA(10),PPGTWICE+4 ELIMINATE LEADING ZEROES
         MVC   PPGAREA+10+1(L'PPGTMSG),PPGTMSG TOTALS MSG TO OUTPT AREA
         PUT   PPGDCB,PPGAREA-1    TRANSCRIBE INFORMATION
PPGQEXIT CLOSE (PPGDCB)            CLEAN-UP
         ESTAE (0)                 CANCEL ESTAE
         SR    R15,R15             SET GOOD RETURN CODE
         PR    R14                 BACK TO DUST
*        AFTER ALL DSCBS ON A TRACK HAVE BEEN READ, ESTABLISH         *
*        AN ENVIRONMENT TO READ ALL OF THE ONES ON THE NEXT TRACK.    *
PPGNEXT1 TM    PPGSWT,DS4IVTOC     TEST IF VOLUME CONTAINS INDEXED VTOC
         BO    PPGREAD1            BRANCH IF NOT
         BCT   R11,PPGREAD1        READ THE NEXT FORMAT 1 DSCB
         IC    R11,PPGDSCBT        PRIME WITH NUMBER OF DSCB'S/TRACK
         MVI   PPGCCHHR+4,0        CLEAR RECORD NUMBER
         LH    R15,PPGCCHHR+2      RETRIEVE HEAD NUMBER
         LA    R15,1(R15)          INCREMENT IT BY ONE
         STH   R15,PPGCCHHR+2      STOW IT
         LH    R15,PPGDEVSZ+2      RETRIEVE MAXIMUM TRACK NUMBER
         BCTR  R15,R0              REDUCE BY ONE
         CH    R15,PPGCCHHR+2      TEST IF HEAD NUMBER EXCEEDS MAXIMUM
         BNL   PPGREAD1            BRANCH IF NOT
         MVI   PPGCCHHR+3,0        SET HEAD NUMBER TO ONE
         LH    R15,PPGCCHHR        FETCH CYLINDER NUMBER
         LA    R15,1(R15)          INCREMENT IT BY ONE
         STH   R15,PPGCCHHR        STOW IT
         B     PPGREAD1            ATTEMPT READ OF NEXT RECORD
*---     FABRICATE MONTH AND DAY AND YEAR IN A WORK AREA FOR CALLER   *
PPGFABDT MVC   PPGDATE(10),PPGMASK EDIT PATERN TO DATE-FABRICATION AREA
         TM    PPGTWICE+5,1        TEST FOR LEAP YEAR
         BO    PPGNLEAP            BRANCH IF NOT
         TM    PPGTWICE+5,X'12'    ONCE MORE
         BM    PPGNLEAP            DITTO
         MVI   PPGMNTHS+4,29       SET UP TABLE FOR LEAP YEAR
PPGNLEAP ED    PPGDATE+7(3),PPGTWICE+5 CONVERT YEAR TO EBCDIC
         XC    PPGTWICE(6),PPGTWICE CLEAR ALL BUT JULIAN DATE
         SR    R0,R0               ZERO REGISTER 0
         CVB   R1,PPGTWICE         CONVERT JULIAN DATE TO BINARY
         LA    R15,PPGMNTHS-4      PREPARE TO SCAN CONVERSION TABLE
PPGETYRC SR    R1,R0               CONVERT FROM JULIAN DATE TO
         LA    R15,4(R15)            MONTH AND YEAR
         IC    R0,0(R15)
         CR    R0,R1
         BL    PPGETYRC
         CVD   R1,PPGTWICE         CONVERT TO DECIMAL
         MVO   PPGTWICE(2),PPGTWICE+6(2) SHIFT FOR EDIT
         ED    PPGDATE(3),PPGTWICE SETUP DAY
         MVC   PPGDATE+4(3),1(R15)   THEN MONTH
         BR    R14                     THEN RETURN TO CALLER
*---     BUILD AND ISSUE ERROR MESSAGES                            ---*
PPG4ERR  MVI   PPGDDSCB,C'4'       CHANGE TYPE OF DSCB IN ERROR MESSAGE
PPGDEMSG MVC   PPGDVOL,UCBVOLI     CHANGE VOLUME SERIAL IN ERROR MSG
         WTO   MF=(E,PPGDERR)      STATE THAT A DSCB IS UNREADABLE
         B     PPGDOUCB            DO NEXT UCB
PPG3ERR  MVI   PPGDDSCB,C'3'       CHANGE TYPE OF DSCB IN ERROR MESSAGE
         B     PPGDEMSG            ISSUE ERROR MESSAGE
PPG2ERR  MVI   PPGDDSCB,C'2'       CHANGE TYPE OF DSCB IN ERROR MESSAGE
         B     PPGDEMSG            ISSUE ERROR MESSAGE
PPG1ERR  MVI   PPGDDSCB,C'1'       CHANGE TYPE OF DSCB IN ERROR MESSAGE
         B     PPGDEMSG            DO NEXT UCB
PPGCLCVL CLC   UCBVOLI(*-*),PPGONEVL ====> EX ONLY <====
PPGMVCVL MVC   PPGONEVL(*-*),2(R1)   ====> EX ONLY <====
         DROP  R2                  FORGET UCB
*---     CONSTANTS AND DATA AREAS                                  ---*
         TAPINFO
PPGLNTRY DC    D'0'
PPGSYSID DS    CL4
PPGJBNAM DS    CL8
PPGTPCYL DS    2F
PPGDSCBT DS    C
PPGNAMTB DS    F
PPGUCBTB DS    F
PPGDEVSZ DS    F
PPGWTOBG DS    F
PPGWTOND DS    F
PPGLSTAR DS    F
PPGCCHHH DC    F'0'
PPGCCHHL DC    F'0'
PPGNOON  DC    0F'0',X'12000000'
CAMLST4  CAMLST SEEK,PPGCCHHR,0,PPGDSCB
CAMLST3  CAMLST SEEK,PPGCCHH3,0,PPGDSCB
CAMLST1  CAMLST SEEK,PPGCCHHR,0,PPGDSCB
PPGSWT   DC    X'00'
PPGDATE  DC    10X'40'
PPGTPATN DC    X'40206B2020206B202120'
PPGMASK  DC    X'40212040404040402120'
PPGMASKT DC    X'21204B20204B202040C1D4'
PPGPATCY DC    XL7'4020206B202120'
PPGPATRN DC    XL6'402020202120'
PPGCCHHR DC    XL5'0001020304'
PPGCCHH3 DC    XL5'0001020304'
PPGKEEP  DC    CL5' '
PPGHIADD DS    CL5
PPGVLLEN DC    X'00'
PPGONEVL DC    CL6'*'
PPGWTO   WTO   'PPGLIST2 JOB OR DATASET NAME     TRACKS  % OF CLAIRE',N
               MF=L
PPGWTOVL EQU   *-6,6
PPGWTOLN EQU   *-PPGWTO
PPGWTOH  WTO   'PPGLIST3                                             ',B
               MF=L
PPGWTOJB EQU   PPGWTOH+4+9,8
PPGWTOSZ EQU   PPGWTOH+4+9+25,6
PPGWTOP  EQU   PPGWTOH+4+9+25+12,7
PPGDERR  WTO   'ERROR READING FORMAT P DSCB ON 071444',MF=L
PPGDDSCB EQU   PPGDERR+4+21,1
PPGDVOL  EQU   PPGDERR+4+21+10,6
PPGDSCB  DS    0D
         DS    265C
         ORG   PPGDSCB
SVCWKFLD DS    0F            SVC WORK FIELD
         DS    CL6
SVCFRCYL DS    CL4           FREE-CYLINDER RESPONSE
         DS    CL2
SVCFRTRK DS    CL3           FREE-TRACK RESPONSE
         DS    CL2
SVCNOEXT DS    CL3           EXTENTS RESPONSE
         DS    CL1
SVCMXCYL DS    CL4           LARGEST-EXTENT-IN-CYLINDERS RESPONSE
         DS    CL2
SVCMXTRK DS    CL3           LARGEST-EXTENT-OF-TRACKS RESPONSE
*---   DEFINE FIELDS FOR A FORMAT 1 DSCB                           ---*
         ORG   PPGDSCB
         IECSDSL1 (1)        DATASET CONTROL BLOCK FORMAT 1
         ORG
*---   DEFINE FIELDS FOR A FORMAT 3 DSCB                           ---*
         ORG   PPGDSCB
         IECSDSL1 (3)        DATASET CONTROL BLOCK FORMAT 3
         ORG
*---   DEFINE FIELDS FOR A FORMAT 2 DSCB                           ---*
         ORG   PPGDSCB
         IECSDSL1 (2)        DATASET CONTROL BLOCK FORMAT 3
         ORG
*---   DEFINE FIELDS FOR A FORMAT 4 DSCB                           ---*
         ORG   PPGDSCB+L'DS1DSNAM
         IECSDSL1 (4)        DATASET CONTROL BLOCK FORMAT 4
         ORG
         DS    0F
PPGMODTB DC    X'24',C'3',CL6'3390-3',F'0'
PPGMODSZ EQU   *-PPGMODTB
PPGMODCT EQU   PPGMODTB+1+6,4
         DC    X'23',C'K',CL6'3380-K',F'0'
         DC    X'27',C'2',CL6'3390-2',F'0'
         DC    X'21',C'J',CL6'3380-J',F'0'
         DC    X'1C',C'D',CL6'3380-D',F'0'
         DC    X'14',C'D',CL6'3380-D',F'0'
PPGNMENT EQU   ((*-PPGMODTB)/PPGMODSZ)
PPGORGTB DC    C'??'               UNKNOWN
         DC    C'R1'               RESERVED
         DC    C'R2'               RESERVED
         DC    C'TR'               TCAM 3705
         DC    C'VS'               VSAM DATASET(ACCESS METHOD CNTL BLK)
         DC    C'RS'               RESERVED
         DC    C'TQ'               TCAM MESSAGE QUEUE
         DC    C'TX'               TCAM LINE GROUP
         DC    C'GS'               GRAPHICS ORGANIZATION
*        DS1DSRG1
         DC    C'U '               UNMOVABLE
         DC    C'PO'               PARTITIONED ORGANIZATION
         DC    C'R4'               RESERVED
         DC    C'R8'               RESERVED
         DC    C'CX'               BTAM OR QTAM LINE GROUP
         DC    C'DA'               DIRECT ORGANIZATION
         DC    C'PS'               PHYSICALLY SEQUENTIAL
         DC    C'IS'               INDEXED SEQUENTIAL
PPGMNTHS DC    AL1(31),C'JAN'
         DC    AL1(28),C'FEB'
         DC    AL1(31),C'MAR'
         DC    AL1(30),C'APR'
         DC    AL1(31),C'MAY'
         DC    AL1(30),C'JUN'
         DC    AL1(31),C'JUL'
         DC    AL1(31),C'AUG'
         DC    AL1(30),C'SEP'
         DC    AL1(31),C'OCT'
         DC    AL1(30),C'NOV'
         DC    AL1(31),C'DEC'
PPGTMSG  DC    CL66'IS THE TOTAL NUMBER OF DATASETS FOUND IN THE STATES
               ''S DASD GRANARY'
         DC    C'1'
PPGUCBT  DC  2CL52'VOLSER ADDR TYPE   TRACKS FREE-SPACE EXT CONTIGUOUS'
         DC    CL31' '
PPGTITLE DC    CL133'1LISTING OF VTOC ON PATTY  AT '
PPGTITVL EQU   PPGTITLE+20
PPGHEAD  DC    CL133' '
         ORG   PPGHEAD
         DC    C'0'
         DC    CL44'NAME OF DATASET'
         DC    C' '
         DC    CL6'TRACKS'
         DC    C' '
         DC    CL7' % USED'
         DC    CL2' '
         DC    CL3'ORG'
         DC    CL2' '
         DC    CL4'XTNT'
         DC    CL2' '
         DC    CL8'CREATED'
         DC    CL3' '
         DC    CL8'LAST REF'
         DC    CL3' '
         DC    CL7'CAT VOL'
         DC    CL1' '
         DC    CL6' LRECL'
         DC    CL1' '
         DC    CL11'BLK/CI-SIZE'
         ORG
PATCAM   CAMLST NAME,PATNAME,,PATDATA
PATNAME  DC    CL44' '
*---     MAP THE VOLUME LIST BLOCK RETURNED FROM LOCATE    ---*
         DS    0D
PATDATA  DS    CL300
         ORG   PATDATA
         DS    H                   NUMBER OF VOLUMES IN DATASET
PATDEVCD DS    CL4                 DEVICE TYPE CODE
PATSERNO DS    CL6                 VOLUME SERIAL NUMBER
         DS    CL2                 DATASET SEQUENCE NUMBER
         ORG   PATDATA+240
         DS    CL10                BINARY ZERO FILLER
         DS    CL3                 TTR OF NEXT LIST BLOCK
         DS    CL4                 BINARY ZERO FILLER
         DS    CL6                 VOLUME CONTAINING RET'D BLOCK
         ORG
PPGHOLD  DC    CL44' '
         DC    CL80' '
         DC    C' '
PPGAREA  DC    CL133' '
         ORG   PPGAREA
PPGDNAME DS    CL44
         DS    C
PPGDSIZE DS    CL6
         DS    C
PPGPCENT DS    CL6
         DS    CL3
PPGDSORG DS    CL2
         DS    CL2
PPGXTNT  DS    CL4
         DS    CL2
PPGBORN  DS    CL9
         DS    CL2
PPGLREF  DS    CL9
         DS    CL4
PPGCATVL DS    CL6
         DS    CL1
PPGLRECL DS    CL6
         DS    CL1
PPGBLKCI DS    CL11
         DS    CL3
PPGXSIZE DS    CL4
         ORG
PPGDCB   DCB   DSORG=PS,MACRF=PM,LRECL=121,BLKSIZE=121,RECFM=FA,       G
               DDNAME=SYSPRINT
PPGDYNMS WTO   'DYNAMIC ALLOCATION FAILED FOR                          P
                                       , R15=  , R0=        ',MF=L
PPGMSGNM EQU   PPGDYNMS+4+30,44
PPGR15RC EQU   *-15,2
PPGR0RC  EQU   *-8,8
PPGVIXMS WTO   'ERROR READING VIXM ON       ',MF=L
PPGVITYP EQU   *-12,2
PPGVIXMV EQU   *-6,6
PPGTRANS DC    C'0123456789ABCDEF'
PPGVLSEC DC    F'0'
PPGBLKSI DC    F'0'
PPGBLKPT DC    F'0'
PATBGCYL DC    H'0'
PATBGTRK DC    H'1'
PATECC   DC    F'12'
PAT6     DC    F'6'
PAT9     DC    F'9'
PAT10    DC    F'10'
PAT15    DC    F'15'
PAT32    DC    F'32'
PAT34    DC    F'34'
PAT232   DC    F'232'
PAT1499  DC    F'1499'
PAT1729  DC    F'1729'
PPGTWICE DC    D'0'
         DC    F'0'                SPACER
PPGHOLDF DC    F'0'
PPGVIXM  DC    CL4'VIXM'
PATH256  DC    H'256'
*---     PARAMETERS THAT WILL BE PASSED TO SVC 99                  ---*
         DS    0F
SVC99CMR DC    X'80',AL3(SVC99CMG)
SVC99CMG DC    X'14',X'01',H'0'
SVC99ERR DS    0F                                                  CK01
         DC    H'0'                ERROR REASON CODE               CK01
         DC    H'0'                INFORMATION REASON CODE         CK01
         DC    A(S99YLIST)
         DC    2F'0'
S99YLIST DC    A(S9CLAIRE)         RELEASE DATASET AT CLOSE TIME
         DC    A(S99RDDN)          RETURN DDNAME
         DC    A(S99STATS)         STATUS OF DATASET
         DC    A(S99DISP)          DISPOSITION OF DATASET
         DC    A(S99DSNAM)         NAME OF DATASET
         DC    A(S99VOLSR)         VOLUME SERIAL NUMBER
S99END   DC    A(S99UNIT)          DEVICE TYPE
S9CLAIRE DC    AL2(DALCLOSE)       FREE DATASET AT CLOSE-TIME
         DC    X'0000'             NUMBER OF PARAMETERS
S99RDDN  DC    AL2(DALRTDDN)       PROVIDE DNAME ASSOCIATED WITH REQ
         DC    X'0001'             NUMBER OF PARAMETERS
         DC    X'0008'             LENGTH OF FIRST PARAMETER
PPGDDNAM DC    CL8' '              DDNAME RETURNED FROM SVC 99
S99UNIT  DC    AL2(DALUNIT)        UNIT KEY
         DC    X'0001'             NUMBER OF PARAMETERS
         DC    X'0004'             LENGTH OF FIRST PARAMETER
PPGUNIT  DC    CL4'3390'           DEVICE TYPE
S99DSNAM DC    AL2(DALDSNAM)       KEY FOR NAME OF DATASET
         DC    X'0001'             NUMBER OF PARAMETERS
         DC    X'002C'             LENGTH OF FIRST PARAMETER
PPGDSNAM DC    CL44' '             NAME OF DATASET
S99VOLSR DC    AL2(DALVLSER)       KEY FOR VOLUME SERIAL NUMBER
         DC    X'0001'
         DC    X'0006'
PPGVOLUM DC    CL6'PRT500'         ACTUAL SERIAL NUMBER OF VOLUME
S99DISP  DC    AL2(DALNDISP)       NORMAL DISPOSITION OF DATASET
         DC    X'0001'             NUMBER OF PARAMETERS
         DC    X'0001'             LENGTH OF FIRST PARAMETER
         DC    X'08'               RETAIN DATASET
S99STATS DC    AL2(DALSTATS)       STATUS OF DATASET
         DC    X'0001'             NUMBER OF PARAMETERS
         DC    X'0001'             LENGTH OF FIRST PARAMETER
         DC    X'08'               ALLOW DATASET TO BE SHARED
SAVE2    DS    18F
SAVE     DS    18F
PPGBASE  DS    F
PPGDSN   DS    CL44
         DC    C' '
PPGCCHH# DS    CL10
         DS    C
         DS    0D
PPGIOB   DC    X'42000000'
         DC    A(PPGECB)
         DC    D'0'
         DC    A(PATCCW)
         DC    A(PPGDCB99)
         DC    D'0'
PATSEEK  DC    X'0000000000000001'
         ORG   PATSEEK+3
PATCYL#  DS    CL2
PATTRK#  DS    CL2
PATREC#  DS    C
         ORG
PPGECB   DC    F'0'
PATCCW   CCW   49,PATSEEK+3,X'60',5
         CCW   8,*-8,0,0
PATREADV CCW   6,0,X'00',0
PPGDCB99 DCB   MACRF=(E),DSORG=PS,DDNAME=PPGDYNAM
PATWTOOP WTO '12345678  12345678  1234  12.12  IEANUC00  HCD -   ',MF=L
PATPRODN EQU   PATWTOOP+4,8
PATPRODI EQU   PATWTOOP+4+10,8
PATMODEL EQU   PATWTOOP+4+10+10,5
PATNUMB  EQU   PATWTOOP+4+10+10+6,2
PATLEVEL EQU   PATWTOOP+4+10+10+6+3,2
PATNUC   EQU   PATWTOOP+4+10+10+6+3+11,1
PATHCD   EQU   PATWTOOP+4+10+10+6+3+11+9,2
         LTORG
*---     GENERALIZED PROGRAM RECOVERY ROUTINE                      ---*
*        PERFORMS THE ERROR RECOVERY PROCESSING FOR ANY ROUTINE.      *
*        THIS ROUTINE IS INVOKED VIA THE ESTAE ERROR RECOVERY         *
*        MECHANISM IN THE EVENT OF AN ABEND CONDITION IN A ROUTINE.   *
*        THE PURPOSE OF THIS RECOVERY ROUTINE IS TO IDENTIFY THE OFF- *
*        SET OF AN ABEND WITHIN A CSECT THAT ISSUED THE CORRESPONDING *
*        ESTAE AND, WHEN REQUESTED, ATTEMPT TO RECOVER AT A           *
*        RETRY ADDRESS IN PARAMETERS PASSED TO THIS EXIT IN THE SDWA. *
*        IF NO PARAMETERS WERE SPECIFIED WHEN A RECOVERY ENVIRONMENT  *
*        WAS ESTABLISHED, PERCOLATION CONTINUES WITHOUT AN ATTEMPT    *
*        TO RECOVER FROM ABEND CONDITIONS.                            *
*        REG       ENTRY VALUE                                        *
*        R0        CODE EXPLAINING TYPE I/O PROCESSING PERFORMED      *
*                  0    - I/O QUIESCED AND RESTORABLE                 *
*                  4    - I/O HALTED AND NOT RESTORABLE               *
*                  8    - NO I/O AT TIME OF ABEND                     *
*                  12   - SDWA STORAGE UNAVAILABLE                    *
*                         R1  -  ABEND COMPLETION CODE                *
*                         R2  -  ADDR OF ESTAE PARM LIST OR 0         *
*                  16   - NO I/O PROCESSING PERFORMED                 *
*        R1        POINTER TO SDWA                                    *
*                  FIRST WORD POINTS TO ESTAE PARM LIST               *
*        R13       POINTER TO 72-BYTE SAVE AREA ADDRESS               *
*        R14       RETURN ADDRESS                                     *
*---     R15       ENTRY ADDRESS                                   ---*
         DROP  R12
         DS    0F                  ALIGN RECOVERY RTN ON INTEGRAL BNDRY
         USING PSA,R0              ESTABLISH PSA ADDRESSABILITY
         USING *,R15
PATEXIT  DS    0H                  ESTAE ERROR RECOVERY
         SAC   0                   ENSURE OPERATING IN PRIMARY MODE
         C     R0,=F'12'           SDWA AVAILABLE?
         BE    0(R14)      RETURN IF NOT - IMPLIES CONTINUE WITH ABEND
         ST    R14,12(R13)         SAVE RETURN ADDRESS
         L     R14,0(R1)           RETRY ADDRESS
         TM    0(R14),X'80'        TEST IF RE-ENTRY
         L     R14,12(R13)         RESTORE RETURN ADDRESS
         BO    PATSTAE             BRANCH IF NOT
         SVC   3                   BACK TO DUST
PATSTAE  BAKR  R14,R0              SAVE ENVIRONMENT AT ENTRY
         LR    R12,R15             SET BASE REGISTER
         USING PATEXIT,R12         ESTABLISH  ADDRESSABILITY
         DROP  R15
         USING SDWA,R5             ESTABLISH SDWA ADDRESSABILITY
         LR    R5,R1               ADDRESS OF SDWA
         MVC   PATCNAME,SDWANAME   SDWA
         MVC   PATSDWA,0(R1)       SDWA
         L     R0,PATESIZE         SIZE OF WORK AREA
         GETMAIN R,LV=(0)          OBTAIN WORK AREA
         LR    R2,R1               POINT TO IT
         USING PATDSECT,R2         ESTABLISH BASE
         MVC   PATGPRS(4*16),SDWAGRSV REGISTERS AT TIME OF ABEND
         L     R9,SDWASR13         POINT TO SAVE AREA AT TIME OF ERROR
         MVC   PATEWTO(PATWTOL),PATWTO INITIALIZE WORK AREA
         UNPK  PATDLPSW(9),SDWAEC1(5)  LEFT HALF OF EC PSW
         MVI   PATDLPSW+8,C' '
         TR    PATDLPSW,PATRANS-240
         UNPK  PATDRPSW(9),SDWANXT1(5) RIGHT HALF OF EC PSW
         MVI   PATDRPSW+8,C' '
         TR    PATDRPSW,PATRANS-240
         L     R0,SDWANXT1         TERMINATION ADDRESS
         N     R0,PAT7FFF          CLEAR 31-AMODE BIT
         ST    R0,PATGILL          SAVE INSTRUCTION ADDRESS
         L     R4,PSATOLD          CURRENT TCB ADDRESS
         BAS   R8,PATMLOC          LOCATE FAILING MODULE
         L     R4,PSATOLD          CURRENT TCB ADDRESS
         USING TCB,R4              ESTABLISH TCB ADDRESSABILITY
         L     R8,TCBRBP           POINT TO AN RB
         DROP  R4                  FORGET TCB
         USING RBBASIC,R8          ESTABLISH RB ADDRESSABILITY
PATNXTRB N     R8,PAT0FFF          CLEAR THE TRASH
         LR    R11,R8              PRESERVE ADDRESS OF RB
         L     R8,RBLINK           FETCH ADDRESS OF NEXT RB
         CR    R4,R8               TEST IF MISSING RB
         BNE   PATNXTRB            BRANCH IF NOT
         LR    R8,R11              SET ADDRESS OF RB
         L     R0,RBOPSWA          FETCH RIGHT HALF OF PSW
         N     R0,PAT7FFF          CLEAR 31-AMODE BIT
         ST    R0,PATGILL          USE IT AS FAILING INSTRUCTION ADDRES
         BAS   R8,PATMLOC          LOCATE FAILING MODULE
         LR    R8,R11              RESTORE ADDRESS OF RB
         L     R3,RBCDE            POINT TO CONTENTS DIRECTORY ENTRY
         N     R3,PAT0FFF          CLEAR OPTIONS
         B     PHCDNAME            ENTER COMMON CODE
         DROP  R8                  FORGET RB
*---     LOCATE MODULE CONTAINING FAILING INSTRUCTION              ---*
PATMLOC  L     R4,PSATOLD          CURRENT TCB ADDRESS
         USING TCB,R4              ESTABLISH TCB ADDRESSABILITY
         L     R3,TCBJPQ           ADDR OF LAST CDE IN JOB PACK AREA Q
         MVC   PATDPGM,=CL8'UNKNOWN' SET CONSTANT IN WTO AREA
         MVC   PATDEP,=CL8'UNKNOWN' SET CONSTANT IN WTO AREA
         MVC   PATDOFF,=CL8'UNKNOWN' SET CONSTANT IN WTO AREA
         USING CDENTRY,R3          ESTABLISH CDE ADDRESSABILITY
         TM    CDATTR,CDMIN        TEST IF MINOR CDE
         BO    PGNXTCDE            BRANCH IF NOT
PATGETXL L     R7,CDXLMJP          ADDR OF EXTENT LIST OF THIS MODULE
         USING XTLST,R7            ESTABLISH XTLST ADDRESSABILITY
         CLC   PATGILL,XTLMSBAD    COULD BLOCK CONTAIN FAILING INST?
         BL    PGNXTCDE            BRANCH IF NOT
         L     R0,PATGILL          TERMINATION ADDRESS
         S     R0,XTLMSBAD         COMPUTE OFFSET INTO BLOCK
         CLM   R0,7,XTLMSBLN       TEST IF OFFSET WITHIN BLOCK
         BL    PATOK               BRANCH IF SO
PGNXTCDE ICM   R3,15,CDCHAIN       NEXT CDE ON CHAIN
         BE    0(R8)               AT END RETURN
         TM    CDATTR,CDMIN        TEST IF MINOR CDE
         BNO   PATGETXL            BRANCH IF NOT
         B     PGNXTCDE            ELSE TRY TRY AGAIN
PATOK    ST    R0,PATGILL          SAVE OFFSET
         MVI   PATGILL,0           CLEAR TRASH
         UNPK  PATDOFF(9),PATGILL(5)
         MVI   PATDOFF+8,C' '
         TR    PATDOFF,PATRANS-240
PHCDNAME MVC   PATDPGM,CDNAME      MODULE ACTIVE AT TIME OF ABEND
         L     R15,CDENTPT         FETCH ADDRESS OF ENTRY POINT
         CLC   0(3,R15),=XL3'47F0F0' TEST IF MODULE CONFORMS
         BNE   PATRADIC            BRANCH IF A RADICAL
         CLI   4(R15),0            TEST IF LENGTH IS ZERO
         BE    PATRADIC            BRANCH IF SO
         MVC   PATDEP,=CL8' '      BLANK AREA
         SR    R14,R14             CLEAR WORK REGISTER
         IC    R14,4(R15)          OBTAIN LENGTH OF ENTRY POINT NAME
         CH    R14,=H'9'           TEST IF NAME EXCEEDS EIGHT BYTES
         BL    *+8                 BRANCH IF NOT
         LA    R14,8               LIMIT LENGTH TO EIGHT BYTES
         BCTR  R14,R0              REDUCE BY ONE FOR MOVE
         EX    R14,PATMVEP         MOVE NAME OF ENTRY POINT TO WTO AREA
PATRADIC CLI   SDWACMPC+2,X'00'    TEST IF USER ABEND
         BNE   PATDOUSR            BRANCH IF SO
         TM    SDWACMPC+1,X'0F'    TEST IF USER ABEND
         BNZ   PATDOUSR            BRANCH IF SO
         UNPK  PATDCODE+1(5),SDWACMPC(3) ASSUME SYSTEM ABEND
         MVI   PATDCODE+4,C' '
         MVI   PATDCODE+5,C' '
         TR    PATDCODE+1(3),PATRANS-240
         B     PATXWTO
PATDOUSR L     R1,SDWACMPF         FETCH USER ABEND CODE
         N     R1,PAT003F          CLEAR HI-ORDER TRASH
         CVD   R1,PPHTWICE         THENCE TO PACKED DECIMAL
         UNPK  PATDCODE,PPHTWICE+5(3) ASSUME USER ABEND
         MVI   PATDCODE,C'U'       SHOW USER ABEND
         OI    PATDCODE+4,240      FILL FINAL CHARACTER FOR TRANSLATION
         MVI   PATDCODE+5,C' '     REMOVE GARBAGE
         TR    PATDCODE+1(4),PATRANS-240 EVERYTHING TO UPPERCASE EBCDIC
PATXWTO  WTO   MF=(E,PATEWTO)
*---     FORMAT GENERAL PURPOSE REGISTERS AT ENTRY TO ABEND       ---*
         MVI   PATEWTO+4,C' '      REMOVE TRASH
         MVC   PATEWTO+5(PATWTOL-5),PATEWTO+4 FROM WORK AREA
         LA    R3,PATGPRC-9        POINT TO CONSTANTS - 9
         LA    R7,SDWAGRSV         POINT TO REGISTERS AT ENTRY TO ABEND
         LA    R8,4                SET LOOP COUNT
PATPGPRS LA    R3,9(R3)            NEXT CONSTANT
         MVC   PATEWTO+4(9),0(R3)  CONSTANT TO WTO AREA
         LA    R4,4                SET LOOP COUNT
         LA    R6,PATEWTO+14       POINT TO REGISTER AREA
PATUNPKG UNPK  0(9,R6),0(5,R7)     CONVERT REGISTER CONTENTS
         TR    0(8,R6),PATRANS-240  TO EBCDIC
         MVI   8(R6),C' '          CLEAR TRASH FROM WTO
         LA    R6,10(R6)           NEXT OUTPUT LOCATION
         LA    R7,4(R7)            NEXT GENERAL PURPOSE REGISTER
         BCT   R4,PATUNPKG         LOOP POWER
         WTO   MF=(E,PATEWTO)      DISPLAY FORMATTED DATA
         BCT   R8,PATPGPRS         DISPLAY GENERAL PURPOSE REGISTERS
         L     R0,PATESIZE         SIZE OF AREA TO BE RELEASED
         FREEMAIN R,A=(2),LV=(0)
         ICM   R6,15,SDWAPARM      ADDRESS OF ESTAE PARAMETER LIST
         BE    PATABEND            IF NONE, CONTINUE WITH TERMINATION
         NI    0(R6),255-X'80'     CLEAR RETRY INDICATOR
         ICM   R6,15,0(R6)         RETRY ADDRESS
         BE    PATABEND            IF NONE, CONTINUE WITH TERMINATION
         SETRP WKAREA=(R5),RETADDR=(R6),RC=4  RETRY ONCE
         SR    R15,R15             SET RETURN CODE
         PR    R14                 RETURN TO DUST
PATABEND SETRP WKAREA=(R5),RC=0    ABEND
         SR    R15,R15             SET RETURN CODE
         PR    R14                 RETURN TO DUST
*---     CONSTANTS AND EQUATES                                  ---*
PPHTWICE DS    D
PAT7FFF  DC    X'7FFFFFFF'
PAT0FFF  DC    X'00FFFFFF'
PAT003F  DC    X'00000FFF'
PATMVEP  MVC   PATDEP(*-*),5(R15)  **** EXECUTE ONLY ****
PATSDWA  DC    XL256'00'
         DC  CL8'JOHNSLUV'
PATCNAME DC  CL8' '
PATSIZE  DC    A(18*4)
PATESIZE DC    A(PATDSIZE)
PATWTO   WTO  ' ABEND STAP  IN PGM LLEWWOP  AT EP HP       OFFSET PATTYL
               H   PSW - SNIKWAH   ENNA        ',MF=L
PATWTOL  EQU  *-PATWTO
PATRANS  DC    C'0123456789ABCDEF'
PATLIST  DC    X'80',AL3(0) <===== PLACE ADDRESS OF RETRY ROUTINE HERE
PATGPRC  DC    CL9'GPR  0-3'
         DC    CL9'GPR  4-7'
         DC    CL9'GPR  8-11'
         DC    CL9'GPR 12-15'
         LTORG
PPGVAREA DSECT
PPGADUCB DS    F
PPGVOLSR DS    CL6
PPGVALEN EQU   *-PPGADUCB
PPGSVC78 DSECT
PPGVOLID DS    CL6           VOLUME SERIAL NUMBER
         DS    C
PPGADR   DS    CL4           UNIT ADDRESS
         DS    CL1
PPGTYPE  DS    CL4           TYPE OF DEVICE
         DS    CL2
PPGTOTCY DS    CL7           TOTAL CYLINDERS AVAILABLE ON VOLUME
         DS    CL2
PPGFRCYL DS    CL4           FREE CYLINDERS
PPGSLASF DS    CL1
PPGFRTRK DS    CL3           FREE TRACKS
         DS    CL2
PPGNOEXT DS    CL3           NUMBER OF EXTENTS
         DS    CL2
PPGMXCYL DS    CL4           CYLINDERS OF LARGEST EXTENT
PPGSLASC DS    CL1
PPGMXTRK DS    CL3           TRACKS OF LARGEST EXTENT
PATDSECT DSECT
PATGILL  DS    2F
PATGPRS  DS    16F
PATEWTO  DS    (PATWTOL)C
         ORG   PATEWTO+4
         DC    C' ABEND '
PATDCODE DC    CL5'U0000'
         DC    C' IN PGM '
PATDPGM  DC    CL8' '
         DC    C' AT EP '
PATDEP   DC    CL8' '
         DC    C' OFFSET '
PATDOFF  DC    CL8' '
         DC    C' PSW - '
PATDLPSW DC    CL8' '
         DC    C'  '
PATDRPSW DC    CL8' '
         DC    C' '
         ORG
PATDSIZE EQU   ((((*-PATGILL)+7)/8)*8)
         TITLE 'ESA CONTROL BLOCKS'
*---     GENERATE REQUIRED OS CONTROL BLOCKS       ---*
         IKJTCB                    TASK CONTROL BLOCK
         IHAXTLST                  EXTENT LIST
         IHARB                     REQUEST BLOCK
         IHACDE                    CONTENTS DIRECTORY ENTRY
         IHAPSA                    ESA PREFIX SAVE AREA
         IEFJESCT                  JES CONTROL TABLE
         IEFJSSVT                 SUBSYSTEM COMMUNICATIONS VECTOR TABLE
         IEFJSCVT                 SUBSYSTEM COMMUNICATIONS VECTOR TABLE
         IHASDWA                   SYSTEM DIAGNOSTIC WORK AREA
         YREGS
         CVT   DSECT=YES,PREFIX=YES COMMUNICATIONS VECTOR TABLE
         IEFUCBOB ,
         IECDDCE
         IHAASCB
         IHAASVT
         IHADVCT
DCQ      DSECT
DCQHEAD  DS    0CL20               HEADER
DCQNAME  DS    CL4                 ACRONYM
DCQLNGTH DS    CL2
DCQCOUNT DS    CL2                 NUMBER OF ELEMENTS
DCQFIRST DS    CL4                 ADDRESS OF FIRST DCQELMNT
DCQDSCTC DS    CL4
DCQUCBNO DS    CL4
         DSECT
DCQELMNT DS    0CL28               ELEMENT OF DCQ
DCQCHAIN DS    A                   ADDRESS OF NEXT DCQELMNT
DCQDEVCL DS    X                   DEVICE CLASS
DCQFLG1  DS    X                   FLAGS
DCQUCBCT DS    H                   NUMBER OF UCBS WITHIN DEVICE CLASS
DCQUCBAD DS    F                   ADDRESS OF FIRST UCB FOR THIS CLASS
DCQDEVNM DS    CL8                 DEVICE CLASS NAME IN EBCDIC
         DS    CL8                 RESERVED
CKB4D2   IEFZB4D2
         DCBD DSORG=PS
         ICVVIER DSECT=YES
         ICVAFMAP DSECT=YES
         IEZDEB
         END


Systems Programmer (USA)                        c Reserved 1996

