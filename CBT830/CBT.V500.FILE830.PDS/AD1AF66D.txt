ISPF dataset name entry improvement

One of the most frequent tasks when using ISPF/PDF is to
enter a dataset name in the 'other dataset name' field.  This
field uses normal TSO syntax so that, if quotes are omitted,
your user-id prefix is automatically added.  On most occasions
it is necessary to add quotes which can be tiresome.

It is possible to use the PROFILE NOPREFIX option but this
has undesirable side-effects since many TSO commands
attempt to allocate personal datasets based on your prefix.
What would be ideal is if ISPF could be intelligent enough to
know when you wanted your prefix to be added and when you
did not.

The dataset name change exit as shown below will achieve this
by examining the dataset name in the 'other dataset' field and,
if it is unquoted, will test to see if a dataset exists with your
prefix.  If there is such a dataset then the dataset name is left
unchanged for ISPF to prefix automatically.  If no dataset with
your prefix exists then quotes are added to the dataset name by
the exit.

It is therefore possible to enter SYS1.PARMLIB for example,
without quotes, and access the dataset 'SYS1.PARMLIB'
unless you were found to have a dataset
'userid.SYS1.PARMLIB'.  This will operate throughout the
ISPF/PDF product whenever a dataset name may be entered
and the normal PROFILE PREFIX(userid) option can be left in
effect.

This exit must be activated by modifying the ISRCONFG
module to specify it as the dataset name change exit.  In order
that users can turn this feature on and off the ISPF profile
variable XISRDSN is tested and must be set to YES for the
code to take effect.  Both this exit and the ISRCONFG module
can be tested from an ISPLLIB.

A simple CLIST can be created to allow the setting of the
profile variable XISRDSN using the VGET and VPUT service.
Note that ISPF/PDF Version 3 will apparently add a missing
quote to the end of the other dataset name field, but it will not
add the first quote. This exit will operate with ISPF Version 2
and above.


*****************************************************************
*  XISRDSN     ISPF DATASET NAME EXIT     REENTRANT
*  DATASET NAME CHANGE EXIT FOR ISPF. IF THE DATASET NAME IS
*  ENTERED WITHOUT QUOTES THEN SEE IF A DATASET EXISTS WITH
*  THE CURRENT PREFIX. IF NOT THEN ADD QUOTES TO THE DATASET
*  NAME AND RETURN IT FOR PROCESSING. THIS ENABLES ANY DATASET
*  NAME TO BE SPECIFIED WITHOUT QUOTES EVEN WITH PREFIX SET.
*  TO BE SELECTIVE THIS EXIT LOOKS FOR THE PROFILE VARIABLE
*  XISRDSN BEING SET TO YES BEFORE TAKING ANY ACTION.
*  ISRCONFG MODULE MUST BE REASSEMBLED TO REFERENCE THIS EXIT.
*****************************************************************
XISRDSN  CSECT
         STM   R14,R12,12(R13)   SAVE REGISTERS
         LR    R12,R15           ADDRESSABILITY
         LR    R2,R1             SAVE PARMS
         USING XISRDSN,R12       BASE REGS
         GETMAIN R,LV=WORKLEN    GETMAIN DYNAMIC AREA
         LR    R10,R1            R10 -> DYNAMIC AREA
         USING WORKAREA,R10      ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLERS SAVEAREA ADDRESS
         ST    R10,8(R13)        SAVE SAVEAREA ADDRESS
         LR    R13,R10           SAVE AREA PTR
* PARM RETRIEVAL, LOOK FOR OTHER DATASET NAME FIELD
         L     R3,16(R2)         OTHER DATASET NAME
         CLI   0(R3),C' '        BLANK ODSN
         BE    EXIT              YES, EXIT
         CLI   0(R3),C''''       QUOTE START
         BE    EXIT              YES, EXIT
         L     R4,20(R2)         REASON CODE
         CLI   0(R4),C' '        BLANK CODE
         BNE   EXIT              NO, EXIT
* TEST IF EXIT REQUIRED BY USER USING PROFILE VARIABLE
         MVC   XISR,BLANKS       CLEAR VAR
         MVC   LEN,L3            LENGTH
         LA    R5,XISR           ADDR XISR VAR
         LA    R6,LEN            ADDR XISR LEN
         CALL  ISPLINK,(VCOPY,NXISR,(6),(5),MOVE),VL
         LTR   R15,R15           TEST
         BNZ   EXIT              EXIT
         CLC   XISR,=C'YES'      IS IT YES
         BNE   EXIT              NO, EXIT
* PROCESS THIS DSN, GET TSO PREFIX
         MVC   ODSN,0(R3)        SAVE DSN
         MVC   ZPRE,BLANKS       CLEAR PREFIX
         MVC   LEN,L8            LENGTH
         LA    R5,ZPRE           ADDR PREFIX VAR
         LA    R6,LEN            ADDR PREFIX LEN
         CALL  ISPLINK,(VCOPY,NZPRE,(6),(5),MOVE),VL
         LTR   R15,R15           TEST
         BNZ   EXIT              EXIT
* GET LENGTH OF PREFIX
         CLC   LEN,=F'0'         ZERO LEN
         BE    EXIT              EXIT
         LA    R5,ZPRE+7         LAST BYTE
         LA    R6,8              MAX LEN
LOOP1    EQU   *
         CLI   0(R5),C' '        END OF PREFIX
         BNE   FOUND1            YES
         BCTR  R5,0              DOWN ONE
         BCT   R6,LOOP1          REPEAT
         B     EXIT              NO PREFIX
FOUND1   EQU   *
* IF DSN ALREADY HAS THIS PREFIX THEN FORGET IT
         BCTR  R6,0              DOWN FOR EX
         EX    R6,COMP1          COMPARE PREFIX TO DSN
         BE    EXIT              SAME FORGET IT
* REMOVE ANY MEMBER FROM ODSN INTO LDSN
         MVC   LDSN,BLANKS       CLEAR IT
         MVC   NDSN,BLANKS       CLEAR IT
         LA    R7,LDSN           LOCATE DSN
         LA    R8,ODSN           ODSN
         LA    R9,44             MAX LOOP
LOOP2    EQU   *
         CLI   0(R8),C' '        END OF DSN
         BE    FOUND2            YES
         CLI   0(R8),C'('        END OF DSN
         BE    FOUND2            YES
         MVC   0(1,R7),0(R8)     MOVE CHARACTER
         LA    R7,1(R7)          UP PTR
         LA    R8,1(R8)          UP PTR
         BCT   R9,LOOP2          REPEAT
* ADD PREFIX TO DSN READY FOR LOCATE TEST TO NDSN
FOUND2   EQU   *
         EX    R6,MOVE1          MOVE PREFIX TO NEW DSN
         LA    R6,1(R6)          RESTORE AS LEN
         LA    R7,NDSN           ADDRESS NDSN
         LA    R9,NDSN           ADDRESS NDSN
         AR    R7,R6             ADD PREFIX LEN
         MVI   0(R7),C'.'        MOVE DOT
         LA    R7,1(R7)          UP ONE
         LA    R8,43             MAX LENGTH MINUS DOT
         SR    R8,R6             MINUS PREFIX LEN
         BCTR  R8,0              DOWN FOR DOT
         BCTR  R8,0              DOWN FOR EX
         EX    R8,MOVE2          MOVE REST OF DSN
* TEST IF DATASET EXISTS (IN CATALOG)
         MVC  RLOC(16),LOCLIST   COPY LIST TO REENTRANT AREA
         LA   R9,NDSN            UPDATE LIST
         ST   R9,RLOC+4
         LA   R9,LOCRET          UPDATE LIST
         ST   R9,RLOC+12
         LOCATE RLOC             LOCATE DATASET WITH PREFIX
         LTR   R15,R15           TEST
         BZ    EXIT              YES, LEAVE DSN AS IS
* ADD QUOTES TO FRONT AND BACK OF DSN
         MVI   0(R3),C''''       SET FIRST QUOTE
         LA    R3,1(R3)          PAST FIRST QUOTE
         LA    R7,ODSN           ODSN
         LA    R9,54             MAX LEN ALLOWING FOR QUOTES
LOOP3    EQU   *
         CLI   0(R7),C' '        END OF ODSN
         BE    FOUND3            YES
         MVC   0(1,R3),0(R7)     CHAR FROM ODSN TO ISPF
         LA    R3,1(R3)          PTR UP
         LA    R7,1(R7)          PTR UP
         BCT   R9,LOOP3          REPEAT
FOUND3   EQU   *
         MVI   0(R3),C''''       SET LAST QUOTE
         B     EXIT
* LEAVE PROGRAM
EXIT     EQU   *
         L     R13,SAVEAREA+4    RESTORE R13
         FREEMAIN R,LV=WORKLEN,A=(10) FREE WORK AREA
         LA    R15,0             RETURN CODE
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 TO R12
         BR    R14               RETURN
COMP1    CLC   ZPRE(0),ODSN      COMPARE PREFIX TO DSN
MOVE1    MVC   NDSN(0),ZPRE      MOVE PREFIX TO NDSN
MOVE2    MVC   0(0,R7),LDSN      MOVE DSN   TO NDSN
         LTORG
* CONSTANTS, NON-MODIFIABLE FOR REENTRANCY
L3       DC    F'3'              LENGTH 3
L8       DC    F'8'              LENGTH 8
VCOPY    DC    C'VCOPY '         VCOPY
MOVE     DC    C'MOVE '          MOVE
NZPRE    DC    C'ZPREFIX '       ZPREFIX
NXISR    DC    C'XISRDSN '       XISRDSN
BLANKS   DC    CL255' '          BLANKS
LOCLIST  CAMLST NAME,BLANKS,,BLANKS    (NDSN, LOCRET)
* UNINITIALIZED STORAGE (GETMAINED)
WORKAREA DSECT                   GETMAINED STORAGE AREA
SAVEAREA DS    18F               SAVE AREA
LEN      DS    F                 LENGTH
ZPRE     DS    CL8               PREFIX
XISR     DS    CL3               PROFILE OPTION
ODSN     DS    CL56              ODSN
LDSN     DS    CL44              LDSN
NDSN     DS    CL44              NDSN
LOCRET   DS    0D                LOCATE RETURN AREA
         DS    266C
RLOC     DS    4F                REENTRANT LOCLIST
WORKLEN  EQU   *-WORKAREA
         YREGS
         END   XISRDSN


                                                                     c Xephon 19

