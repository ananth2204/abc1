Altering and listing DFSMS datasets

I recently implemented DFSMS in my environment and have
been quite pleased with the positive impact it has had regarding
DASD management and performance. However, both during
and after implementation I needed to alter and report on
datasets at the management and storage class level. I found
there was no straightforward way to do either. To alter the
class structure of datasets, the IDCAMS ALTER function is
available, but it can only be issued against one dataset at a
time. What if I wanted to alter the management class of all
datasets with 'CICS' as the High-Level Qualifier (HLQ) from
MCMIGRAT to MCNOMIG? If there were 500 such datasets,
it would take quite an effort. DFDSS could be used to move
the datasets or DFHSM to migrate and recall them but that's
not a practical way to make a simple management class
change. On a couple of occasions during the implementation
phase, I removed a class from the active constructs. I then
wanted to go through the system and alter each dataset assigned
to it - again, a potentially significant task. Regarding the
reporting aspect, ISMF can produce output to a terminal but
provides no batch interface. The DCOLLECT option of
IDCAMS produces data, but only in a raw form. I wanted to be
able to run a single batch request that would show me all
datasets in the system assigned to a particular storage and/or
management class.

I decided to write a program which would satisfy both the need
to alter and report on the DFSMS management and storage
class constructs en masse. This following Assembler program,
called SMSASIST, provides the ability to select datasets using
masks on the dataset name in addition to matches on storage
and management class. The dataset name masks are:

o      ? - for any character

o      * - for any qualifier

o      / - for anything thereafter.

In other words, a request of 'CIC?.*.DFH/' would select
dataset CICS.R211.DFHCSD in addition to any other datasets
matching the criteria. SMSASIST runs as a batch program and
is told of the request via a single input record to the PARMIN
DD. In addition to the dataset, a field is provided to indicate
whether the request is an A (alter) or R (report), the desired
report sequence if reporting, a 'live' or 'simulate' flag if
altering, the desired storage and/or management class to select,
and the storage and/or management class to change to if
altering.

The program is coded to interface with standard IDCAMS
LISTCAT and ALTER processing so upgrades to DFP or
DFSMS should be transparent. Processing time is minimal
when a fully qualified HLQ is input. When the program is
instructed to process all datasets or a masked HLQ is used, it
determines and searches all catalogs in the system for a match.
The run time in that case would be based on the number of
catalogs and datasets in your shop. A message to indicate
which catalog is being processed is displayed to track progress
during 'all' or HLQ requests. The JCL to execute SMSASIST
is shown below along with specific comments on alignment
and values for the different fields. Since the ALTER function is
an authorized request, the program must be placed in
LINKLIST or an authorized library with AC=1 specified in the
link edit.


EXECUTION JCL

//*
//*   THIS JOB CAN BE RUN TO ALTER AND REPORT ON DFSMS DATASETS
//*
//STEP1    EXEC PGM=SMSASIST
//DISPLAY  DD   SYSOUT=*
//SYSPRINT DD   UNIT=VIO,SPACE=(CYL,(10,1))
//SYSIN    DD   UNIT=VIO,SPACE=(CYL,(10,1))
//SORTIN   DD   UNIT=VIO,SPACE=(CYL,(10,1))
//SORTOUT  DD   UNIT=VIO,SPACE=(CYL,(10,1))
//SYSOUT   DD   SYSOUT=*
//PARMIN   DD   *
FUNCTION, R = REPORT
|         A = ALTER
|
|IF FUNCTION = R, SORT REPORT BY A = STORCLAS, DSNAME, MGMTCLAS -DEFAULT
||                               B = STORCLAS, MGMTCLAS, DSNAME
||                               C = MGMTCLAS, DSNAME, STORCLAS
||                               D = MGMTCLAS, STORCLAS, DSNAME
||                               E = DSNAME, STORCLAS, MGMTCLAS
||                               F = DSNAME, MGMTCLAS, STORCLAS
| IF FUNCTION = A,  L = LIVE MODE
||      ANYTHING ELSE = SIMULATE MODE
||
||DATASET NAME, ALL = ALL DATASETS
|||               * = ANY REMAINING CHARACTERS IN QUALIFIER
|||               / = ANY REMAINING CHARACTERS
|||               ? = ANY CHARACTER
|||
|||                                           STORCLAS (REPORT OR ALTER FROM)
|||                                           |
|||                                           |       MGMTCLAS (RPT OR ALT FROM)
|||                                           |       |
|||         NOTE: ALL STORCLAS AND MGMTCLAS   |       |       STORCLAS (ALT TO)
|||               VALUES MUST BE RIGHT        |       |       |
|||               JUSTIFIED--------------->   |       |       |       MGMTCLAS
|||                                           |       |       |       | (ALT TO)
|||4567890123456789012345678901234567890123456|8901234|6789012|4567890|2
ALCICS.*DFH???.TEST/                            SCBASE  MCMIGR SCFASTWMCNOMIGR


SMSASIST SOURCE CODE

SMSASIST CSECT
         STM   R14,R12,12(R13)        HOUSEKEEPING
         BALR  R12,R0
         USING *,R12
         LR    R7,R1
         LA    R2,REGSAVE
         ST    R2,8(R13)
         ST    R13,4(R2)
         LR    R13,R2
         OPEN  (DISPLAY,(OUTPUT),PARMIN)
SMSAST00 GET   PARMIN                 READ THE PARAMETER RECORD
         MVC   REQUEST(80),0(R1)      SAVE THE RECORD
         CLI   RQFUNC,C'R'            IS THIS A REPORT REQUEST?
         BE    SMSAST03               IF YES, PROCESS
         CLI   RQFUNC,C'A'            IS THIS AN ALTER REQUEST?
         BE    SMSAST03               IF YES, PROCESS
         B     SMSAST00               MUST BE A COMMENT
SMSAST03 MVC   REQPRNT(80),REQUEST    PREPARE TO DISPLAY REQUEST
         PUT   DISPLAY,REQHOLD        DISPLAY THE REQUEST RECORD
         CLC   RQSTORF(8),BLANKS      IS STORCLAS(FROM) BLANKS?
         BE    SMSAST05               IF YES, OK
         CLI   RQSTORF+7,C' '         IS IT RIGHT JUSTIFIED?
         BE    SMSAST11               IF NOT PRINT MESSAGE
SMSAST05 CLC   RQMGMTF(8),BLANKS      IS MGMTCLAS(FROM) BLANKS?
         BE    SMSAST07               IF YES, OK
         CLI   RQMGMTF+7,C' '         IS IT RIGHT JUSTIFIED?
         BE    SMSAST11               IF NOT PRINT MESSAGE
SMSAST07 CLC   RQSTORT(8),BLANKS      IS STORCLAS(TO) BLANKS?
         BE    SMSAST09               IF YES, OK
         CLI   RQSTORT+7,C' '         IS IT RIGHT JUSTIFIED?
         BE    SMSAST11               IF NOT PRINT MESSAGE
SMSAST09 CLC   RQMGMTT(8),BLANKS      IS MGMTCLAS(TO) BLANKS?
         BE    SMSAST13               IF YES, OK
         CLI   RQMGMTT+7,C' '         IS IT RIGHT JUSTIFIED?
         BE    SMSAST11               IF NOT PRINT MESSAGE
         B     SMSAST13               EVERYTHING IS IN ORDER
SMSAST11 WTO   '* STORCLAS/MGMTCLAS FROM/TO MUST BE RIGHT JUSTIFIED *'
         B     SMSAST99               EXIT FOR CORRECTIONS
SMSAST13 OPEN  (SYSIN,(OUTPUT),SORTIN,(OUTPUT))
         CLC   RQDSN(3),=C'ALL'       IS THIS AN ALL REQUEST
         BNE   SMSAST17               IF NOT, IT'S A DSNAME
SMSAST15 MVC   LISTFIL1(9),BLANKS     PREPARE FOR
         MVC   LISTLVL,BLANKS                     LISTC ALL
         PUT   SYSIN,LISTCARD          PUT LISTC ALL OUT TO IDCAMS
         MVC   WTOL+24(6),=C'MASTER'   INDICATE MASTER CATALOG
         B     SMSAST23                GO CALL IDCAMS
SMSAST17 LA    R4,RQDSN                PREPARE TO BREAKDOWN HLQ
         LA    R3,RQDSN                     OF REQUESTED DATASET
SMSAST19 CLI   0(R4),C'*'              IS HLQ A GENERIC REQUEST?
         BE    SMSAST15                IF YES, PROCESS ALL CATALOGS
         CLI   0(R4),C'?'              IS HLQ A GENERIC REQUEST?
         BE    SMSAST15                IF YES, PROCESS ALL CATALOGS
         CLI   0(R4),C'/'              IS HLQ A GENERIC REQUEST?
         BE    SMSAST15                IF YES, PROCESS ALL CATALOGS
         CLI   0(R4),C'.'              IS HLQ FULLY QUALIFIED?
         BE    SMSAST21                IF YES, CAN PROCESS AS LEVEL
         LA    R4,1(R4)                POSITION TO NEXT CHARACTER
         B     SMSAST19                AND GO LOOK AT IT
SMSAST21 MVI   0(R4),C')'              FINISH OFF DSN FOR LISTC
         LR    R9,R4                   SAVE R4
         SR    R4,R3                   WHAT'S HLQ LENGTH?
         EX    R4,LVLMOVE              MOVE HLQ TO LISTC
         MVI   0(R9),C'.'              RESTORE . TO DSNAME
         PUT   SYSIN,LISTCARD          PUT LISTC LVL OUT TO IDCAMS
         B     SMSAST25                GO CALL IDCAMS
SMSAST23 WTO   MF=(E,WTOL)             DISPLAY MSG
SMSAST25 CLOSE SYSIN                   CLOSE SYSIN SO IDCAMS CAN READ
         LR    R1,R7                   PREPARE FOR IDCAMS LINK
         LINK  EP=IDCAMS               CALL IDCAMS TO DO LISTCAT
         LTR   R15,R15                 ZERO RC FROM IDCAMS?
         BZ    SMSAST27                IF YES, CONTINUE ON
         WTO   '* WARNING - NON ZERO RC FROM IDCAMS LISTCAT *'
SMSAST27 OPEN  (SYSIN,(OUTPUT),SYSPRINT)
SMSAST29 GET   SYSPRINT                 READ OUTPUT FROM IDCAMS LISTC
         LH    R5,0(R1)                 GET THE LENGTH
         SH    R5,=H'5'                 GET READY FOR SYSPRINT MOVE
         LR    R6,R1                    SAVE R1
         LA    R6,5(R6)                 SKIP OVER LENGTH
         CLC   0(7,R6),=C'USERCAT'      IS THIS A USERCAT ENTRY?
         BE    SMSAST73                 IF YES, WE WANT IT
         CLC   0(7,R6),=C'CLUSTER'      IS THIS A CLUSTER ENTRY?
         BE    SMSAST31                 IF YES, WE WANT IT
         CLC   0(7,R6),=C'NONVSAM'      IS THIS A NONVSAM ENTRY?
         BE    SMSAST31                 IF YES, WE WANT IT
         CLC   7(7,R6),=C'STORAGE'      IS THIS AN SMSDATA RECORD?
         BE    SMSAST47                 IF YES, PROCESS IT
         B     SMSAST29                 GO GET NEXT IDCAMS OUTPUT
SMSAST31 CLC   RQDSN(3),=C'ALL'         WAS THIS AN ALL REQUEST?
         BE    SMSAST43                 IF YES, DON'T CHECK DSN
         LA    R4,RQDSN                 PREPARE TO BREAKDOWN
         LA    R9,16(R6)                     THE DSNAME
         LR    R10,R6                   DETERMINE END
         AR    R10,R5                                OF RECORD
SMSAST33 CR    R9,R10                   AT END OF DSNAME?
         BNL   SMSAST37                 IF YES, IT MAY BE A HIT
         CLI   0(R4),C'*'               GENERIC TO END OF QUALIFER?
         BE    SMSAST35                 IF YES, GO PROCESS
         CLI   0(R4),C'?'               GENERIC CHARACTER?
         BE    SMSAST39                 IF YES, GET NEXT ONE
         CLI   0(R4),C'/'               GENERIC TO END OF DSN?
         BE    SMSAST43                 IF YES, IT'S A HIT
         CLC   0(1,R4),0(R9)            MATCH ON THIS CHARACTER?
         BE    SMSAST39                 IF YES, GET NEXT ONE
         MVI   INFOFLAG,C'N'            NOT A MATCH, INDICATE SO
         B     SMSAST29                 GO LOOK FOR ANOTHER DATASET
SMSAST35 LA    R9,1(R9)                 POSITION TO NEXT CHARACTER
         CLI   0(R9),C'.'               IS IT A .?
         BE    SMSAST41                 IF YES, AT END OF QUALIFIER
         CR    R9,R10                   AT END OF RECORD?
         BL    SMSAST35                 IF NO, CONTINUE
         LA    R4,1(R4)                 IF YES, SEE IF MASK IS AT END
SMSAST37 CLI   0(R4),C' '               IS MASK A BLANK?
         BNE   SMSAST29                 IF NO, NOT A HIT
         B     SMSAST43                 IT WAS A HIT
SMSAST39 LA    R9,1(R9)                 BUMP TO NEXT CHARACTER
SMSAST41 LA    R4,1(R4)                 BUMP TO NEXT CHARACTER
         B     SMSAST33                 GO CHECK FOR A MATCH
SMSAST43 MVI   INFOFLAG,C'Y'            FOUND A MATCH
         SH    R5,=H'17'                POSITION TO DSNAME
         CLI   RQFUNC,C'R'              IS THIS A REPORT REQUEST?
         BE    SMSAST45                 IF YES, PROCESS
         MVI   ALTDSN,X'40'             MUST BE AN ALTER
         MVC   ALTDSN+1(L'ALTDSN-1),ALTDSN  BLANK OUT ALTDSN
         EX    R5,ALTMOVE               SAVE THE DSN FOR ALTER
         B     SMSAST29                 GO LOOK FOR MORE
SMSAST45 MVI   SAVEDSN,X'40'            BLANK OUT
         MVC   SAVEDSN+1(L'SAVEDSN-1),SAVEDSN  THE SAVED DSNAME
         EX    R5,DSNMOVE               SAVE THE DATASET NAME
         B     SMSAST29                 GO LOOK FOR MORE
SMSAST47 CLI   INFOFLAG,C'Y'            DO WE WANT INFO FOR THIS DSN?
         BNE   SMSAST29                 IF NOT, BYPASS IT
         LA    R8,23(R6)                ADDRESS OF STORAGE CLASS
SMSAST49 CLI   0(R8),C'-'               IS THIS A DASH?
         BNE   SMSAST51                 IF NOT, IT'S VALID DATA
         MVI   0(R8),C' '               BLANK OUT THE DASH
         LA    R8,1(R8)                 BUMP TO NEXT CHARACTER
         B     SMSAST49                 GO CHECK IT
SMSAST51 CLC   23(8,R6),RQSTORF         IS THERE A STORCLAS MATCH?
         BE    SMSAST53                 IF YES, PROCESS
         CLI   RQFUNC,C'A'              IS THIS AN ALTER REQUEST?
         BE    SMSAST59                 IF YES, GO PROCESS MGMTCLAS
         CLC   RQSTORF(8),BLANKS        CAN WE BYPASS MATCH FOR PRINT?
         BNE   SMSAST29                 IF NOT, BYPASS IT
SMSAST53 CLI   RQFUNC,C'R'              IS THIS A REPORT REQUEST?
         BE    SMSAST57                 IF YES, BYPASS ALTER LOGIC
         MVC   ALTCLAS(8),RQSTORT       SAVE THE 'CHANGE TO' STORCLAS
         MVC   ALTTYPE(8),=C'STORCLAS'  INDICATE WHAT TO CHANGE
         CLI   RQFLAG,C'L'              IS THIS A LIVE REQUEST?
         BNE   SMSAST55                 IF NOT, JUST PRINT IT
         MVI   ALTERFLG,C'Y'            INDICATE WE'LL NEED IDCAMS
         PUT   SYSIN,ALTCARD            PUT ALTER OUT TO IDCAMS
         B     SMSAST59                 GO PROCESS MGMTCLAS
SMSAST55 PUT   DISPLAY,ALTCARD          PRINT THE ALTER RECORD
         B     SMSAST59                 GO PROCESS MGMTCLAS
SMSAST57 MVC   SAVESTOR(8),23(R6)       SAVE THE STORCLAS
SMSAST59 LA    R8,52(R6)                ADDRESS OF MANAGEMENT CLASS
SMSAST61 CLI   0(R8),C'-'               IS THIS A DASH?
         BNE   SMSAST63                 IF NOT, IT'S VALID DATA
         MVI   0(R8),C' '               BLANK OUT THE DASH
         LA    R8,1(R8)                 BUMP TO NEXT CHARACTER
         B     SMSAST61                 GO CHECK IT
SMSAST63 CLC   52(8,R6),RQMGMTF         IS THERE A MGMTCLAS MATCH?
         BE    SMSAST65                 IF YES, PROCESS
         CLI   RQFUNC,C'A'              IS THIS AN ALTER REQUEST?
         BE    SMSAST29                 IF YES, GO ON TO NEXT RECORD
         CLC   RQMGMTF(8),BLANKS        CAN WE BYPASS MATCH FOR PRINT?
         BNE   SMSAST29                 IF NOT, BYPASS IT
SMSAST65 CLI   RQFUNC,C'R'              IS THIS A REPORT REQUEST?
         BE    SMSAST68                 IF YES, BYPASS ALTER LOGIC
         MVC   ALTCLAS(8),RQMGMTT       SAVE THE 'CHANGE TO' MGMTCLAS
         MVC   ALTTYPE(8),=C'MGMTCLAS'  INDICATE WHAT TO CHANGE
         CLI   RQFLAG,C'L'              IS THIS A LIVE REQUEST?
         BNE   SMSAST67                 IF NOT, JUST PRINT IT
         MVI   ALTERFLG,C'Y'            INDICATE WE'LL NEED IDCAMS
         PUT   SYSIN,ALTCARD            PUT ALTER OUT TO IDCAMS
         B     SMSAST29                 GO PROCESS NEXT RECORD
SMSAST67 PUT   DISPLAY,ALTCARD          PRINT THE ALTER RECORD
         B     SMSAST29                 GO PROCESS NEXT RECORD
SMSAST68 MVC   SAVEMGMT(8),52(R6)       SAVE THE MGMTCLAS
         PUT   SORTIN,SAVERCRD          PUT RECORD OUT TO SORT
         B     SMSAST29                 GO PROCESS NEXT RECORD
SMSAST69 CLOSE SYSIN                    CLOSE SYSIN SO IDCAMS CAN READ
         MVI   ALTERFLG,C'N'            INDICATE ALTER NOT NEEDED
SMSAST70 LR    R1,R7                    PREPARE FOR IDCAMS LINK
         LINK  EP=IDCAMS                CALL IDCAMS TO DO ALTER
         LTR   R15,R15                  ZERO RC FROM IDCAMS?
         BZ    SMSAST71                 IF YES, CONTINUE ON
         WTO   '* WARNING - NON ZERO RC FROM IDCAMS ALTER *'
SMSAST71 OPEN  (SYSIN,(OUTPUT),SYSPRINT)
SMSAST72 GET   SYSPRINT                 READ OUTPUT FROM IDCAMS ALTER
         LH    R5,0(R1)                 GET THE LENGTH
         SH    R5,=H'5'                 GET READY FOR SYSPRINT MOVE
         MVI   SAVEPRNT,X'40'           SPACE OUT THE SAVE AREA
         MVC   SAVEPRNT+1(L'SAVEPRNT-1),SAVEPRNT
         EX    R5,PRNTMOVE              MOVE THE SYSPRINT RECORD
         PUT   DISPLAY,SAVEPRNT         DISPLAY OUTPUT FROM ALTER
         B     SMSAST72                 GO GET NEXT RECORD
SMSAST73 CLI   PHASEFLG,C'M'            STILL IN MASTER PHASE?
         BNE   SMSAST29                 IF NOT, BYPASS USERCAT INFO
         GETMAIN R,LV=48                NEED 48 BYTES FOR CATALOG NAME
         MVC   0(4,R1),GETMNQUE         SAVE PRIOR GETMAIN ADDRESS
         MVI   SAVEDSN,X'40'            SPACE OUT THE SAVE AREA
         MVC   SAVEDSN+1(L'SAVEDSN-1),SAVEDSN
         SH    R5,=H'17'                GET READY FOR DSN MOVE
         EX    R5,DSNMOVE               SAVE CATALOG NAME
         MVC   4(44,R1),SAVEDSN         PUT CATLG NAME STORAGE
         ST    R1,GETMNQUE              SAVE CURRENT GETMAIN ADDRESS
         B     SMSAST29                 GO LOOK FOR MORE
SMSAST75 CLOSE SYSPRINT                 AT END OF IDCAMS SYSPRINT
         CLI   ALTERFLG,C'Y'            DO WE NEED TO ALTER?
         BE    SMSAST69                 IF YES, DO IT
         CLI   PHASEFLG,C'D'            WAS THIS AN ALTER PROCESS?
         BE    SMSAST99                 IF YES, GET OUT
         CLI   PHASEFLG,C'U'            IN USERCATALOG PHASE?
         BE    SMSAST77                 IF YES, GO PROCESS NEXT CATLG
         L     R2,GETMNQUE              GET CHAIN START ADDRESS
         MVI   PHASEFLG,C'U'            INDICATE USERCATALOG PHASE
         B     SMSAST79
SMSAST77 L     R2,0(R2)                  LOAD NEXT ADDRESS IN CHAIN
SMSAST79 LTR   R2,R2                     IF ZERO,
         BZ    SMSAST83                          AT END OF CHAIN
         MVC   LISTFIL1,=C' CATALOG('    PREPARE TO DO
         MVI   LISTDSN,X'40'                        LISTC
         MVC   LISTDSN+1(L'SAVEDSN-1),LISTDSN           ON CATALOG
         LA    R4,LISTDSN                POSITION TO LISTDSN
         LA    R3,4(R2)                  POSTION TO CATALOG NAME
SMSAST81 MVC   0(1,R4),0(R3)             SAVE A CHARACTER
         LA    R4,1(R4)                  BUMP TO NEXT CHARACTER
         LA    R3,1(R3)
         CLI   0(R3),C' '                IS IT A BLANK?
         BNE   SMSAST81                  IF NOT, GO GET ANOTHER
         MVI   0(R4),C')'                AT END, FINISH OFF WITH )
         PUT   SYSIN,LISTCARD            GIVE LISTC TO IDCAMS
         MVC   WTOL+24(44),LISTDSN       PLUG CATALOG NAME INTO WTO
         B     SMSAST23                  GO CALL IDCAMS
SMSAST83 CLI   RQFUNC,C'R'               IF THIS A REPORT REQUEST?
         BE    SMSAST85                  IF YES, GO PROCESS
         MVI   PHASEFLG,C'D'             INDICATE ALTER PROCESSING
         CLI   ALTERFLG,C'Y'             DO WE NEED TO ALTER?
         BE    SMSAST69                  IF YES, DO IT
         B     SMSAST99                  ALL DONE, GO CLEAN UP
SMSAST85 CLOSE SORTIN                    CLOSE SORTIN SO SORT CAN READ
         CLI   RQFLAG,C'B'               DETERMINE AND
         BE    SMSAST86                     SET UP THE PROPER
         CLI   RQFLAG,C'C'                      SORT TYPE
         BE    SMSAST87
         CLI   RQFLAG,C'D'
         BE    SMSAST88
         CLI   RQFLAG,C'E'
         BE    SMSAST89
         CLI   RQFLAG,C'F'
         BE    SMSAST90
         MVC   SORTFLD,SRTFLD1
         B     SMSAST91
SMSAST86 MVC   SORTFLD,SRTFLD2
         B     SMSAST91
SMSAST87 MVC   SORTFLD,SRTFLD3
         B     SMSAST91
SMSAST88 MVC   SORTFLD,SRTFLD4
         B     SMSAST91
SMSAST89 MVC   SORTFLD,SRTFLD5
         B     SMSAST91
SMSAST90 MVC   SORTFLD,SRTFLD6
SMSAST91 LA    R1,POINTER                PREPARE FOR SORT
         LINK  EP=SORT                   CALL SORT
         LTR   R15,R15                   WAS SORT RC ZERO?
         BZ    SMSAST92                  IF YES, CONTINUE ON
         WTO   '* NON ZERO RC FROM SORT *'
         B     SMSAST97                  GET OUT IF NON ZERO
SMSAST92 OPEN  SORTOUT                   PREPARE TO READ SORTED DATA
         LA    R3,62                     ALLOW 62 LINES PER PAGE
SMSAST93 PUT   DISPLAY,HEADING           PRINT THE HEADING
         PUT   DISPLAY,BLANKS            PRINT A BLANK LINE
         LA    R4,3                      STARTING AT LINE 3
SMSAST95 GET   SORTOUT                   READ A SORT RECORD
         MVC   SAVEPRNT+1(80),0(R1)      MOVE THE RECORD TO PRINT AREA
         PUT   DISPLAY,SAVEPRNT          PRINT THE RECORD
         LA    R4,1(R4)                  ADD 1 TO LINE COUNT
         CR    R3,R4                     IS IT PAST LINE 62?
         BL    SMSAST93                  IF YES, GO PRINT HEADING
         B     SMSAST95                  GO GET NEXT RECORD
SMSAST97 CLOSE (SORTOUT)                 FINAL CLEANUP
SMSAST99 CLOSE (DISPLAY,,PARMIN)
         L     R13,REGSAVE+4             RESTORE REGISTERS
         ST    R15,16(R13)                               AND
         LM    R14,R12,12(R13)                              GO
         BR    R14                                            HOME
         LTORG
DSNMOVE  MVC   SAVEDSN(0),16(R6)         MVC FOR DATASET NAME
ALTMOVE  MVC   ALTDSN(0),16(R6)          MVC FOR IDCAMS ALTER
PRNTMOVE MVC   SAVEPRNT(0),4(R1)         MVC FOR SYSPRINT
LVLMOVE  MVC   LISTLVL(0),0(R3)          MVC FOR LISTC LEVEL
WTOL     WTO   'PROCESSING CATALOG:                                    X
                              ',MF=L
REGSAVE  DS    18F                       REGISTER SAVE AREA
GETMNQUE DC    A(0)                      GETMAIN ADDRESS QUE
PHASEFLG DC    C'M'                      FLAG TO INDICATE PHASE
INFOFLAG DC    C'N'                      DSN INFO REQUIRED INDICATOR
ALTERFLG DC    C'N'                      ALTER DSN NEED INDICATOR
SAVEPRNT DS    CL133                     PRINT LINE SAVE
BLANKS   DC    CL133' '
REQHOLD  DC    CL133' '
         ORG   REQHOLD
         DS    CL1
REQPRNT  DS    CL80
         ORG
SRTFLD1  DC    C'49,8,CH,A,3,44,CH,A,60,8,CH,A)'  STORCLAS,DSN,MGMTCLAS
SRTFLD2  DC    C'49,8,CH,A,60,8,CH,A,3,44,CH,A)'  STORCLAS,MGMTCLAS,DSN
SRTFLD3  DC    C'60,8,CH,A,3,44,CH,A,49,8,CH,A)'  MGMTCLAS,DSN,STORCLAS
SRTFLD4  DC    C'60,8,CH,A,49,8,CH,A,3,44,CH,A)'  MGMTCLAS,STORCLAS,DSN
SRTFLD5  DC    C'3,44,CH,A,60,8,CH,A,49,8,CH,A)'  DSN,MGMTCLAS,STORCLAS
SRTFLD6  DC    C'3,44,CH,A,49,8,CH,A,60,8,CH,A)'  DSN,STORCLAS,MGMTCLAS
HEADING  DC    CL133'1'                  REPORT HEADING
         ORG   HEADING
         DS    CL2
         DC    CL45' ----DATASET NAME----'
         DC    C'  STORCLAS'
         DC    C'   MGMTCLAS'
         ORG
SAVERCRD DC    CL80' '                   SAVE RECORD FOR SORT
         ORG   SAVERCRD
         DS    CL2
SAVEDSN  DS    CL44
         DS    CL2
SAVESTOR DS    CL8
         DS    CL3
SAVEMGMT DS    CL8
         ORG
ALTCARD  DC    CL80' '                   IDCAMS ALTER REQUEST
         ORG   ALTCARD
         DC    C' ALTER '
ALTDSN   DS    CL44
         DC    C' '
ALTTYPE  DS    CL8
         DC    C'('
ALTCLAS  DS    CL8
         DC    C')'
         ORG
         DC    CL53' '
LISTCARD DC    CL80' '                   IDCAMS LISTC REQUEST
         ORG   LISTCARD
         DC    C' LISTC'
LISTFIL1 DC    C'   LEVEL('
LISTLVL  DS    CL9
         ORG LISTLVL
LISTDSN  DS    CL46
         DC    C'ALL'
         ORG
REQUEST  DS    CL80                      REQUEST INPUT RECORD
         ORG   REQUEST
RQFUNC   DS    CL1
RQFLAG   DS    CL1
RQDSN    DS    CL44
RQSTORF  DS    CL8
RQMGMTF  DS    CL8
RQSTORT  DS    CL8
RQMGMTT  DS    CL8
         ORG
         CNOP  2,4
BYTECNT  DC    Y(24)                     SORT PARAMETERS
         DC    A(SORTBEG)
         DC    A(SORTEND)
         DC    A(RECBEG)
         DC    A(RECEND)
         DC    2F'0'
POINTER  DC    X'80'
         DC    AL3(BYTECNT)
SORTBEG  DC    C' SORT FIELDS=('
SORTFLD  DS    CL30
SORTEND  DC    C' '
RECBEG   DC    C' RECORD TYPE=F,LENGTH=80'
RECEND   DC    C' '
DISPLAY  DCB   DDNAME=DISPLAY,DSORG=PS,MACRF=PM,RECFM=FA,LRECL=133,    X
               BLKSIZE=133
PARMIN   DCB   DDNAME=PARMIN,DSORG=PS,MACRF=GL,EODAD=SMSAST97
SYSPRINT DCB   DDNAME=SYSPRINT,DSORG=PS,MACRF=GL,EODAD=SMSAST75
SORTOUT  DCB   DDNAME=SORTOUT,DSORG=PS,MACRF=GL,EODAD=SMSAST97
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=PM,RECFM=F,LRECL=80,        X
               BLKSIZE=80
SORTIN   DCB   DDNAME=SORTIN,DSORG=PS,MACRF=PM,RECFM=FB,LRECL=80
         END


Ernie Ishman
Senior Systems Programmer
Geisinger System Services (USA)                        c Xephon 1992

