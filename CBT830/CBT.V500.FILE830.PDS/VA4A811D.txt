DASD free space information

This program adapts a technique described in the article Obtaining
free space information in MVS Update issue 15 to produce a
display of freespace data from DASD on-line in the system.  At
our installation this served two main purposes:

1	It provided our storage administrator with a useful reporting
tool (pre-empting ISMF, which is not yet available at our
site).

2	It gave us a first stab at an ISPF application written in
Assembler.

The display is illustrated in Figure 1 and may be re-sorted by
entering a sort key on the panel (the code for which is also shown
below).

THE SOURCE CODE FOR FREESPCE

FREESPCE CSECT
         SAVE  (14,12)
         BASR  R2,0
         USING *,R2
         ST    R13,SAVE+4
         LA    R13,SAVE
         CALL  ISPLINK,(VDEFINE,CUU,PCUU,CHAR,L3),VL
         CALL  ISPLINK,(VDEFINE,VOLSER,PVOLSER,CHAR,L6),VL
         CALL  ISPLINK,(VDEFINE,CYLS,PCYLS,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,TRKS,PTRKS,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,EXTENT,PEXTENT,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,LCYLS,PLCYLS,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,LTRKS,PLTRKS,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,ZCMD,SORTKEY,CHAR,L6),VL
*        CREATE AND SORT ISPF TABLE
         CALL ISPLINK,(TBCREATE,FSTABLE,,NAMELIST,NOWRITE,REPLACE),VL
         MVC  SORTKEY,CYLS            SPECIFY SORT FIELD
         MVC  SORTTYPE,NUMRDSND       SPECIFY SORT DIRECTION
         CALL ISPLINK,(TBSORT,FSTABLE,SORTPARM),VL  SORT ISPF TABLE
*        SCAN UCB'S
GETUCB   L     R15,16                 R15 -> COMMS VECTOR TABLE
         L     R15,1076(R15)          R15 -> UCB SCAN ROUTINE
         LA    R1,UCBPARM             R1 -> PARM LIST FOR UCBSCAN
         BASR  R14,R15                EXECUTE UCB SCAN ROUTINE
         LTR   R15,R15                IS THERE A UCB THERE ?
         BNZ   DISPLAY                NO, DISPLAY RESULTS
         L     R3,UCBADDR             YES, R3 -> CURRENT UCB
         TM    3(R3),X'80'            IS THE DEVICE ONLINE ?
         BZ    GETUCB                 NO, GET NEXT UCB
DETAILS  MVC   PCUU,13(R3)            YES, ESTABLISH DASD CUU
         MVC   PVOLSER,28(R3)         ESTABLISH DASD VOLSER
         LR    R0,R3                  R0 -> CURRENT UCB
         LA    R1,RESULT              R1 -> SVC 78 RESULT FIELD
         SVC   78                     CALL SVC 78
*        LEADING ZEROES IN RESULT FIELDS MAY BE EDITED OUT HERE
         CALL  ISPLINK,(TBADD,FSTABLE,,ORDER),VL  ADD DATA INTO TABLE
         B     GETUCB                  GET NEXT UCB
DISPLAY  CALL  ISPLINK,(TBTOP,FSTABLE),VL  POINT TO TOP OF TABLE
REDISP   CALL  ISPLINK,(TBDISPL,FSTABLE,FSPANEL),VL  DISPLAY TABLE
         LTR   R15,R15                 HAS ENTER BEEN HIT (R15 = 0)?
         BNZ   FINISHKP                NO, TERMINATE PROGRAM
         MVC   SORTTYPE,NUMRDSND       YES, SORT DEFAULT IS NUM/DESCEND
         CLC   SORTKEY(3),CUU          IS SORT ON CUU REQUIRED ?
         BNE   NOTCUU                  NO, DO FURTHER CHECKING
         MVC   SORTTYPE,CHARASND       YES, SORT TYPE IS CHAR/ASCEND
         B     SORT                    BRANCH TO PERFORM SORT
NOTCUU   CLC   SORTKEY(6),VOLSER       IS SORT ON VOLSER REQUIRED ?
         BNE   SORT                    NO, PERFORM SORT
         MVC   SORTTYPE,CHARASND       YES, SORT TYPE IS CHAR/ASCEND
SORT     CALL  ISPLINK,(TBSORT,FSTABLE,SORTPARM),VL  SORT TABLE
         B     REDISP                  BRANCH TO REDISPLAY PANEL
FINISHKP CALL  ISPLINK,(TBCLOSE,FSTABLE),VL  CLOSE TABLE
         L     R13,SAVE+4              RESTORE CALLER'S REGISTERS
         RETURN (14,12),RC=0           RETURN CONTROL TO CALLER
CHAR     DC    CL4'CHAR'
CHARASND DC    CL3'C,A'
CUU      DC    CL8'CUU'
CYLS     DC    CL8'CYLS'
FSPANEL  DC    CL8'FSPANEL'
EXTENT   DC    CL8'EXTENT'
FSTABLE  DC    CL8'FSTABLE'
LCYLS    DC    CL8'LCYLS'
LTRKS    DC    CL8'LTRKS'
L3       DC    F'3'
L4       DC    F'4'
L6       DC    F'6'
NAMELIST DC    CL41'(CUU VOLSER CYLS TRKS EXTENT LCYLS LTRKS)'
NOWRITE  DC    CL7'NOWRITE'
NUMRDSND DC    CL3'N,D'
ORDER    DC    CL5'ORDER'
PCUU     DS    CL3
PVOLSER  DS    CL6
REPLACE  DC    CL7'REPLACE'
RESULT   DS    0CL30
         DS    CL6
PCYLS    DS    CL4
         DS    CL1
PTRKS    DS    CL4
         DS    CL1
PEXTENT  DS    CL4
         DS    CL1
PLCYLS   DS    CL4
         DS    CL1
PLTRKS   DS    CL4
SAVE     DS    18F
SORTPARM DS    0CL12
         DC    CL1'('
SORTKEY  DS    CL6
         DC    CL1','
SORTTYPE DS    CL3
         DC    CL1')'
TBADD    DC    CL5'TBADD'
TBCLOSE  DC    CL7'TBCLOSE'
TBCREATE DC    CL8'TBCREATE'
TBDISPL  DC    CL7'TBDISPL'
TBSORT   DC    CL6'TBSORT'
TBTOP    DC    CL5'TBTOP'
TRKS     DC    CL8'TRKS'
UCBPARM  DC    A(UCBWORK)
         DC    A(UCBTYPE)
         DC    X'80'
         DC    AL3(UCBADDR)
UCBWORK  DC    XL100'00'
UCBTYPE  DC    X'20'
UCBADDR  DS    F
UCBSCAN  DS    F
VDEFINE  DC    CL7'VDEFINE'
VOLSER   DC    CL8'VOLSER'
ZCMD     DC    CL8'ZCMD'
         END   FREESPCE

THE PANEL DFANP001

)ATTR
   ! TYPE(OUTPUT) INTENS(LOW) JUST(RIGHT)
   $ TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT)
   # TYPE(OUTPUT) INTENS(HIGH)
   Ì TYPE(TEXT) SKIP(ON) INTENS(LOW)
)BODY EXPAND(@@) LMSG(LONGMSG)
+@-@%DASD FREESPACE ANALYSIS+@-@+
|      !Z                                                 +
|
|  %ENTER+SORT KEY%===)_Z      Ì ( PRESS%PF3+TO EXIT OR%PF1+FOR HELP )
|
|
|
|                                               %FREE+    %LARGEST+
%LARGEST+ |
|  %CUU+   %VOLSER+    %CYLS+      %TRKS+      %EXTENTS+    %CYLS+      %TRKS+
|
|
|
)MODEL
|  !Z  +   $Z     +    !Z   +      !Z   +       !Z   +      !Z   +      !Z   +
|
)INIT
  .HELP = DFANH001
  .ZVARS = '(LONGMSG ZCMD CUU VOLSER CYLS TRKS EXTENT LCYLS LTRKS)
  &ZCMD = &Z
  &ZTDMARK = '******************************* BOTTOM OF DATA
*******************+
*************'
)PROC
  IF (.RESP = ENTER)
   VER (&ZCMD,NB,LIST,CUU,VOLSER,CYLS,TRKS,EXTENT,LCYLS,LTRKS)
)END


T T Whitehead
Technical Support Analyst
Rolls-Royce Motor Cars Ltd (UK)	€ Rolls-Royce Motor Cars Ltd 1989

