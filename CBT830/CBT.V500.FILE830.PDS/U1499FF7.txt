ISPF/PDF Version 2 edit macros

This article presents some examples of ISPF/PDF Version 2 edit macros to
illustrate how useful this new facility can be.  There are numerous
applications possible in the systems programming area as a great deal of
time is spent in ISPF/PDF edit, performing repetitive tasks that can be
automated by macros.  Edit macros are issued as primary commands when in
edit.  They should have different names from standard edit primary
commands and are most conveniently coded as CLISTs.

EXAMPLE 1

The macro will restore a member edit from the last saved copy - this is
used when you have made a change that you did not mean to.

/* MACRO NAME : RESTORE       reload last saved copy of member      */
/* SYNTAX     : RESTORE                                             */
/*                                                                  */
ISREDIT MACRO
  CONTROL ASIS
  ISREDIT (MEMBER) = MEMBER
  IF &MEMBER = THEN DO
    SET ZEDSMSG = Only available in PDS
    SET ZEDLMSG = You must perform this function yourself on PS files.
    EXIT
  END
  ISREDIT (CHANGED) = DATA_CHANGED
  IF &CHANGED = YES THEN DO
    ISREDIT EXCLUDE ALL
    ISREDIT COPY &MEMBER BEFORE .ZFIRST
    ISREDIT DELETE ALL EX
    SET ZEDSMSG = Member restored
    SET ZEDLMSG = This copy was replaced with the last disk one.
  END
  ELSE DO
    SET ZEDSMSG = Restore not required.
    SET ZEDLMSG - This copy was not changed from the last disk one.
  END
  ISPEXEC SETMSG MSG(ISRZ000)
EXIT

EXAMPLE 2

This macro will highlight a string or strings within an edit file.

/* MACRO NAME : HILITE        Show lines containing string(s)       */
/* SYNTAX     : HILITE word1 word2 word3                            */
/*                                                                  */
ISREDIT MACRO (WORD1 WORD2 WORD3)
  CONTROL ASIS
  ISREDIT EXCLUDE ALL
  IF &WORD1 ¬= THEN ISREDIT FIND ALL '&WORD1'
  IF &WORD2 ¬= THEN ISREDIT FIND ALL '&WORD2'
  IF &WORD3 ¬= THEN ISREDIT FIND ALL '&WORD3'
  SET &ZEDSMSG = Hilite complete.
  SET &ZEDLMSG = Lines with &WORD1 &WORD2 &WORD3 remain displayed.
  ISPEXEC SETMSG MSG(ISRZ000)
EXIT CODE(0)

EXAMPLE 3

This is a very interesting macro that only works with TSO/E Release 2
and upwards.  It allows any TSO command processor output to be trapped
into an edit file.  TSO CP must use PUTLINE macros rather than TPUT for
this to work.

/* MACRO NAME : TRAP          Put any TSO CP output into edit       */
/* SYNTAX     : TRAP command (plus any parameters)                  */
/*                                                                  */
ISREDIT MACRO (CMDNAME)
  ISREDIT EXCLUDE ALL
  ISREDIT LINE_AFTER .ZLAST = '> OUTPUT FROM TSO COMMAND : &CMDNAME <'
  CONTROL ASIS
  SET &I = 1
  SET &SYSOUTTRAP = 400
  TSOEXEC &CMDNAME
  SET &BOT = &SYSOUTLINE
  DO WHILE &BOT >= &I
     SET &TEMP = &&SYSOUTLINE&I
     ISREDIT LINE_AFTER .ZLAST = "&TEMP"
     SET &I = &I + 1
  END
EXIT

EXAMPLE 4

For ACF2 users, this macro allows an ACFCOMP compilation of a current
edit file.  It can be adapted for any command that has a dataset name as
a parameter (eg PRINTOFF).

/* MACRO NAME : ACFC           Invoke ACFCOMP on current edit file  */
/* SYNTAX     : ACFC (plus keywords)                                */
/*                                                                  */
ISREDIT MACRO (KW1 KW2 KW3)
  CONTROL ASIS
  ISREDIT (DATASET) = DATASET
  ISREDIT (MEMBER)  = MEMBER
  WRITE NOTE : DEFAULT ACFCOMP OPTIONS ARE STORE, FORCE, LIST
  WRITE        ADD OPTIONS NOSTORE, NOFORCE, NOLIST IF DESIRED
  WRITE
  ISREDIT SAVE
  IF &MEMBER = THEN +
     ACFCOMP '&DATASET' &KW1 &KW2 &KW3
  ELSE +
     ACFCOMP '&DATASET(&MEMBER)' &KW1 &KW2 &KW3
  SET &ZEDSMSG = Data saved and ACFCOMPed.
  SET &ZEDLMSG = Dataset '&DATASET(&MEMBER)' ACFCOMPed, &KW1 &KW2 &KW3
  ISPEXEC SETMSG MSG(ISRZ000)
EXIT

EXAMPLE 5

Finally, this is not an edit macro, but a useful way of saving your
current ISPF profile variables without having to exit and re-enter ISPF.
This could be useful if you were testing a program that could abend
without saving the profile.  It is coded as a CLIST so you would need to
enter the ISPF command TSO PROFSAVE to invoke it.

PROC 0
/* CLIST TO SAVE CURRENT ISPF PROFILE VARIABLES TO DISK */
ISPEXEC VGET (ZAPPLID)
ISPEXEC TBSAVE &ZAPPLID.PROF LIBRARY(ISPPROF)
END


Peter Toogood
Senior Systems Programmer (UK)     € Xephon 1988


