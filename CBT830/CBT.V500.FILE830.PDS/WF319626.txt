Searching for non-catalogued entries in a volume


HOW TO RUN THE EXEC

   (For USERID.VOLNAME.UNCAT: only the name of the files)

SIS.TASK00K.IPK06
SIS.TERMIT4.VER87.PPA
.......


   (For USERID.VOLNAME.CAT: the name of the file, the volume and the
    catalog where the catalogued entry is).

SIS.TERXP04.IP001                         VOL076 CATALOG.USER.SIS
SIS.TERXP04.IP002                         VOL076 CATALOG.USER.SIS
CICS321.PREV.SDFHLOAD.V1                  VOL144 CATALOG.CICS
.......


GHOST REXX EXEC

/* REXX MVS **********************************************************/
/*  GHOST  -  This exec searches non-catalogued entries in a volume. */
/*            It is formed by three independent routines.            */
/*            It should be invoked in TSO with 2 optional arguments: */
/*   Argument_1:  The name of the volume to search                   */
/*   Argument_2:  The type of dasd (3380, 3390...)                   */
/*   Argument_3:  The routine to execute:                            */
/*                If Argument_3 = null,     call execucao_tso1       */
/*                If Argument_3 = "BATCH2", call execucao_batch2     */
/*                If Argument_3 = "BATCH3", call execucao_batch3     */
/*   The output will appear on two sequential files, named:          */
/*    => userid.volume_name.CAT for the files that have a catalogued */
/*                                version in a different volume.     */
/*    => userid.volume_name.UNCAT for files without a catalogued     */
/*                                duplicate.                         */
/*===================================================================*/
 sys_exec  = "THIS.EXEC.PDS"         /* The PDS containing this exec */
 fic_cat   = userid()"."arg1".CAT"              /* output file names */
 fic_uncat = userid()"."arg1".UNCAT"
 arg arg1 arg2 arg3 .
 if arg1 = "" then do                         /* ask user for volume */
    say "Volume to search?"
    pull arg1 .
    if arg1 = "" then exit
 end
 if arg2 = "" then do                      /* ask user for dasd type */
    dasd_default = "3390"                       /* default dasd type */
    say "Type of DASD?  (Hit ENTER for "dasd_default
    pull arg2 .
    if arg2 = "" then arg2 = dasd_default
 end
 select                                              /* select which */
    when arg3 = "BATCH2" then call execucao_batch2   /* routine to   */
    when arg3 = "BATCH3" then call execucao_batch3   /* execute      */
    otherwise                 call execucao_tso1
 end
 exit
/*======================= R O U T I N E S ===========================*/
 execucao_tso1:
/*===================================================================*/
/* The first routine of this exec allocates a temp file to build a   */
/* batch job and submit it. This batch job has two steps:            */
/*   STEP1 builds a LISTVTOC of the volume to a batch temp file      */
/*   STEP2 invokes the second routine of this exec (execucao_batch2) */
/*===================================================================*/
 jobnome = userid()".tempjcl"
 "alloc da('"jobnome"') dd(jobe) ,
        new  reuse  blksize(8000)  lrecl(80),
        recfm(f,b)  dsorg(ps)  space (1 1),
        tracks  release  delete"
 if rc = 0 then do
    say "Error allocating file "jobnome
    exit
 end
dropbuf
queue "//"userid()"7 JOB CLASS=A,MSGCLASS=X,"
queue "//  MSGLEVEL=(1,1)"
queue "//* "
queue "//STEP1 EXEC PGM=IEHLIST,REGION=1M"
queue "//SYSPRINT DD DISP=(NEW,PASS),DSN=&&TEMP1,UNIT=VIO, "
queue "//         DCB=(RECFM=V,LRECL=140),SPACE=(TRK,(5,5))"
queue "//DD2      DD DISP=SHR,UNIT="arg2","
queue "//         VOL=SER="arg1
queue "//SYSIN    DD * "
queue "  LISTVTOC VOL="arg2"="arg1
queue "/* "
queue "//* "
queue "//REXX1    EXEC PGM=IRXJCL,REGION=1024K,COND=(4,LT,STEP1),"
queue "//         PARM='GHOST " arg1 arg2  "BATCH2' "
queue "//SYSEXEC  DD DISP=SHR,DSN="sys_exec
queue "//TEMP1    DD DISP=(OLD,DELETE),DSN=&&TEMP1 "
queue "//OUTPUN   DD SYSOUT=(B,INTRDR),DCB=(LRECL=80,RECFM=F)"
queue "//SYSPRINT DD SYSOUT=*"
queue "//SYSTSPRT DD SYSOUT=*"
queue "//"
queue ""
"execio * diskw jobe (finis"
 submit "'"jobnome"'"
"free dd(jobe)"
 say "Jobs submitted; See output in files:"
 say  fic_cat "   and   " fic_uncat
return
/*===================================================================*/
 execucao_batch2:
/*===================================================================*/
/* The second routine of this exec is executed in batch. It          */
/* extracts the names of the entries in the LISTVTOC output.         */
/* It builds and submits via internal reader a third job that will   */
/* make a LISTCAT ENTRY for every name captured in listvtoc, and     */
/* will invoke the third routine of this exec.                       */
/* The steps of this new job are:                                    */
/*  STEP2: Invoke IKJEFT01 with a LISTCAT VOLUME ENTRY for every     */
/*         VTOC entry. The output is written to a batch temp file.   */
/*  DEL2: Deletes the user output dasets, in case they already exist */
/*  REXX2: Allocates the user output datasets and invokes the third  */
/*         routine of this exec.                                     */
/*===================================================================*/
dropbuf
queue "//"userid()"7 JOB CLASS=A,MSGCLASS=X,"
queue "//  MSGLEVEL=(1,1),NOTIFY="userid()
queue "//* "
queue "//STEP2 EXEC PGM=IKJEFT01,REGION=2M"
queue "//SYSPRINT DD SYSOUT=* "
queue "//SYSTSPRT DD DISP=(NEW,PASS),DSN=&&TEMP2,UNIT=VIO, "
queue "//         DCB=(RECFM=V,LRECL=140),SPACE=(TRK,(7,7))"
queue "//SYSTSIN  DD * "
queue "  PROFILE NOPREFIX "
queue ""
execio "*" diskw outpun
 do alpha = 0
    execio 1 diskr temp1
    if rc =0 then leave alpha
    pull linha
    if left(linha,1)=' '         then iterate alpha
    if substr(linha,2,6)='DATE: ' then iterate alpha
    if substr(linha,2,6)='------' then iterate alpha
    if substr(linha,2,1)=' '      then iterate alpha
    fic = substr(linha,2,44)
    queue "  LISTCAT VOLUME ENT("fic")"
    execio 1 diskw outpun
 end
queue "/* "
queue "//* "
queue "//DEL2     EXEC PGM=IDCAMS,REGION=1024K,COND=(4,LT,STEP2)"
queue "//SYSPRINT DD SYSOUT=*"
queue "//SYSIN    DD *"
queue "  DELETE ("fic_uncat")"
queue "  DELETE ("fic_cat")"
queue "/*"
queue "//*"
queue "//REXX2    EXEC PGM=IRXJCL,REGION=1024K,COND=(4,LT,STEP2),"
queue "//         PARM='GHOST" arg1 arg2  "BATCH3' "
queue "//SYSEXEC  DD DISP=SHR,DSN="sys_exec
queue "//TEMP2    DD DISP=(OLD,DELETE),DSN=&&TEMP2 "
queue "//SAICAT   DD DISP=(NEW,CATLG),"
queue "//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160),"
queue "//         SPACE=(TRK,(2,2)),"
queue "//         UNIT=SYSDA,DSN="fic_cat
queue "//SAIUNCAT DD DISP=(NEW,CATLG),"
queue "//         DCB=(RECFM=FB,LRECL=80,BLKSIZE=6160),"
queue "//         SPACE=(TRK,(2,2)),"
queue "//         UNIT=SYSDA,DSN="fic_uncat
queue "//SYSPRINT DD SYSOUT=*"
queue "//SYSTSPRT DD SYSOUT=*"
queue "//"
queue ""
execio "*" diskw outpun "(finis"
return
/*===================================================================*/
 execucao_batch3:
/*===================================================================*/
/* The third routine of this exec is executed in batch. It analyses  */
/* the listcat output, determining which entries could not be        */
/* allocated (pure ghosts), and which reside in a different volume   */
/* (duplicate dataset names).                                        */
/* It then writes the output to the appropriate files.               */
/*===================================================================*/
 do beta  = 0
    execio 1 diskr temp2
    if rc =0 then leave
    pull linha
    if substr(linha,2,9)='READY    ' then iterate beta
    if substr(linha,2,9)='END      ' then iterate beta
    if substr(linha,2,3)='IDC'       then iterate beta
    if substr(linha,2,9)='  PROFILE' then iterate beta
    if substr(linha,2,9)='  LISTCAT' then do
       parse var linha . . "(" fich ")" .
       execio 2 diskr temp2
       if rc =0 then leave beta
       pull lin1
       pull lin2
       if substr(lin1,13,3)='---' then do
          cat = substr(lin2,16,44)
          do gama = 0
             execio 1 diskr temp2
             if rc =0 then leave beta
             pull lin3
             word1 = word(lin3,1)
             if left(word1,6)="VOLSER" then do
                vol = right(word1,6)
                leave gama
             end
          end
       end
       else do
          cat = ""
          vol = ""
       end
       if vol = arg1 then iterate beta
       queue fich vol cat
       if cat="" then execio 1 diskw saiuncat
                 else execio 1 diskw saicat
    end
 end
 "execio 0 diskw saicat   (finis"
 "execio 0 diskw saiuncat (finis"
return


Lu√Üs Paulo Figueiredo Sousa Ribeiro
Systems Programmer
Edinfor (Portugal)           c Xephon 1996

