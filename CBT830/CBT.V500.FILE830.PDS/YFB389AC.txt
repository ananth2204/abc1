MVS authorisation

In MVS there are really only two occasions when IBM security rears its
head.  The first is the transition between problem state and supervisor
state, ensuring that an application cannot perform restricted
interfacing to the operating system.  The second is at data access and
OPEN/CLOSE time, ensuring that an application gets authorisation to
access data.

The key to that authorisation is the MODESET, a type-6 SVC, which
permits an 'authorised program' to transform itself into supervisor
state: key-0.  The means of testing for authorisation is TESTAUTH: a
service for branching into one of the supervisor services.  It
determines if an SVC was or was not authorised.  TESTAUTH, another
type-6 SVC, is normally invoked by an SVC trying to determine whether
its caller is authorised and/or whether he may use the options he has
passed in the parameter list.  It tests for any or all of the following
three states:

*    Is the authorisation bit (JSCBAUTH) on in the Job Step Control
Block (JSCB)?

*    Is the caller in supervisor state?

*    Is the caller in key-0 at the time of the request?

The three conditions are by no means equivalent.  Being in supervisor
state may not be the same as having JSCBAUTH on for some supervisor
services.

Some SVCs are totally restrictive.  You must be in supervisor state to
issue them.  For example, you may not issue an SDUMP unless you're
APF-authorised.  Other SVCs may be issued by anyone; however, certain of
their options may be APF-restricted.  For example, a GETMAIN is
available to anyone; but if the storage subpool specified is greater
than 127, you had better be authorised.

A load module library is an APF-authorised library by virtue of one of
the following conditions:

*    It is in the LINKLIST concatenation
*    It is a load module in the Pageable Link Pack Area (PLPA)
*    It is a dataset specifically identified by both name and VOLSER in
IEAAPFxx of SYS1.PARMLIB.

It is important to remember that it is a job step and not a task that is
authorised - turning the JSCBAUTH bit on is done by initiator logic.  In
a batch job, two things cause this bit to be turned on: firstly, the
'PGM=module-name' must be found in an APF library in LINKLIST, LPALIB,
or in a STEPLIB or JOBLIB concatenation which is authorised; secondly,
the load module must have been link-edited with the AC=1 option.

However, AC=1 is not, in any way restrictive.  All the COBOL programs
that exist can be link-edited with AC=1; the programs will not be
authorised.  AC=1 only takes effect when the load module library is also
APF-authorised.

In coding an authorisation program, a little paranoia goes a long way in
ensuring against a disaster.  Never trust a user parameter. Test its
value, to whom it belongs, its key and the user's key as well.  Test it
all by using MODESET with the EXTKEY option.  This will put your SVC in
the same key as the caller (at the time he called).  Be even more
careful with dynamically changing parameters such as a homegrown
authorised subtask in CICS.  While your SVC is running as one task and
looking at its parameter list, a second task in the CICS address space
is changing that parameter list because it is sitting in the DSA
(Dynamic Storage Area) - where anyone might be able to get to it.  Copy
that parameter list to protected storage; such as OSCOR, and manipulate
it there.



Brett Jason Sinclair
CICS/VTAM Consultant (USA)     â‚¬ Brett Jason Sinclair 1987

































































