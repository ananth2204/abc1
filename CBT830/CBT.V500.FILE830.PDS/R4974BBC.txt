Programmable console

This program enables a TSO user to turn his screen into an
MVS console.  The program was written for MVS/XA but has
also run successfully under MVS/SP 1.3.3 (with a re-assembly
and the removal of the check for the literal 'RDCM') and
MVS/ESA Version 3.

On entry, the program tries to display the master console.  If
this is not possible (because of a screen size mismatch for
example), it will scan for the first console displayable on the
user's screen.  (This is where users of 24 by 80 screens find
that all their consoles are 32 by 80.)  The operator can switch
between scrolling and static displays.  The static display is
particularly useful on SNA terminals where scrolling can
interfere with command entry.  On bisynchronous terminals,
scrolling continues during command entry.  Attempts have
been made to improve problems on SNA terminals when
entering data when in scroll mode but interference still occurs
because of SNA bracketing.  Operator commands are issued as
if they were from the console being viewed, so the program
can issue master console-only commands when viewing the
master console image.  A help display  (accessible via PF1)
lists the available options and PF key settings.

This program should be linked AC=1 or authorized by more
dubious means where I have commented out APF ON/OFF.

CONSOLE  TITLE 'CONSOLE SIMULATOR FOR TSO'
CONSOLE  CSECT ,
         SAVE  (14,12),,CONSOLE-&SYSDATE-&SYSTIME   SAVE REGS/SET ID
         LR    R12,R15               COPY BASE REG
         USING CONSOLE,R12           ADDRESSABILITY FOR CSECT
         BAL   R1,*+8                SKIP CONSTANT
         DC    AL4(DYNLEN)           DSA LENGTH
         L     R0,0(R1)              DYNAMIC SA LEN
         BAL   1,*+4                 INDICATE GETMAIN
         SVC   10                    GETMAIN R,LV=(0)
         LR    R15,R1                SAVE GETMAINED ADDR
         LM    R0,R1,20(R13)         RESTORE REGS 0/1 FROM PREV SA
         ST    R13,4(R15)            HSA
         ST    R15,8(R13)            LSA
         LR    R13,R15               COPY SA PTR
         USING DYNAREA,R13           ADDRESSABILITY FOR DSECT
         LA    R11,2048(,R12)          EXTEND BASE REGS
         LA    R11,2048(,R11)          DITTO
         USING CONSOLE,R12,R11         SET PROGRAM ADDRESSABILITY
         TITLE 'VALIDATION AND INITIALIZATION'
*             INITIALIZATION
         L     15,540              TCB ADDR (PSATOLD)
         L     15,180(,15)         JSCB ADDR
         L     15,264(,15)         PSCB ADDR
         TM    16(15),X'80'        OPERATOR AUTHORIZED ?
         BO    OPERX               BIF SO
         B     R15                 OTHERWISE BYE BYE (OUCH)
OPERX    DS    0H
         MVC   MYBUFF,CONTROL      COPY SCRN CONTROL CHARS TO GOT AREA
         GTTERM PRMSZE=PATTR,ALTSZE=AATTR,ATTRIB=FWORK  TERM ATTRS
         LTR   R15,R15             MACRO OK ?
         BZ    TERMOK              BIF SO...
         TPUT  =CL20'GTTERM MACRO ERROR',20
         B     RETURN0             AND RETURN
TERMOK   DS    0H
         CLI   PATTR+1,X'50'       PRIMARY SCREEN 80 BYTES WIDE ?
         BE    WIDTHOK1            BIF SO...(RUINS SBA ORDERS IF NOT)
         OI    FLAG2,XPSIZE        NO GOOD TO US
         XC    PATTR,PATTR         DITTO
WIDTHOK1 DS    0H
         CLI   AATTR+1,X'50'       ALTERNATE SCREEN 80 BYTES WIDE ?
         BE    WIDTHOK2            BIF SO...(RUINS SBA ORDERS IF NOT)
         OI    FLAG2,XASIZE        NO GOOD TO US
         XC    AATTR,AATTR         DITTO
         TM    FLAG2,XPSIZE        PRIMARY SIZE OK ?
         BZ    WIDTHOK2            BIF SO...
         TPUT  =CL25'SCREEN NOT 80 BYTES WIDE',25  OTHERWISE ISSUE MSG
         B     RETURN0             AND END
WIDTHOK2 DS    0H
         MVC   LINES,PATTR         PRIM LINE COUNT FOR SCREEN
         CLC   PATTR(1),MINLINES+1 ENOUGH LINES FOR THIS PROG ?
         BNL   LINESOK1            BIF SO....
         OI    FLAG2,XPSIZE        PRIMARY SIZE NO GOOD
         XC    PATTR,PATTR         DITTO
LINESOK1 DS    0H
         CLC   AATTR(1),MINLINES+1 ENOUGH LINES FOR THIS PROG ?
         BNL   LINESOK2            BIF SO....
         OI    FLAG2,XASIZE        NO GOOD TO US
         XC    AATTR,AATTR         DITTO
         TM    FLAG2,XPSIZE        PRIMARY SIZE OK ?
         BZ    LINESOK2            BIF SO...
         TPUT  =CL30'NOT ENOUGH LINES ON SCREEN',30
         B     RETURN0             AND RETURN
LINESOK2 DS    0H
         MVC   LINES,PATTR         LINES ON PRIMARY SCREEN
         CLC   LINES,AATTR         GT ALT SCREEN SIZE ?
         BNL   SCREXIT             BIF SO...DEFAULT WRITE COMMAND
         MVC   LINES,AATTR         USE ALT SCREEN SIZE
         MVI   COMMCHAR,#ERSWTA    DON'T USE PRIMARY SIZE
SCREXIT  DS    0H
         TM    FWORK+3,X'01'       DOES SCREEN SUPPORT EXT ATTR ?
         BZ    SKIPEXT             BIF NOT....
         OI    FLAG,EXTEND+EXTON   OTHERWISE SHOW WE WANT THEM
SKIPEXT  DS    0H
         CLC   CMD,=H'128'         CMD BUFF LEN OK ? (SVC34 LIMIT)
         BNH   CLENOK              BIF SO...
         TPUT  =CL20'CMD BUFF LEN > MAX',20
         B     RETURN0             AND RETURN
CLENOK   DS    0H
*              GENERATE SBA'S FOR THIS SCREEN
         SLR   R2,R2               ZERO REG
         IC    R2,LINES            ROWS ON THIS SCREEN
         XC    DWORK,DWORK         CLEAR WORK AREA
         LA    R1,DWORK            => ROW+COL FOR SBA GENERATION
         MVI   DWORK+7,X'01'       => COLUMN FOR ALL OUR SBAS
         ST    R2,DWORK            ROWS FOR SBA NO 3 (LAST ROW)
         LA    R15,DSBA3           => SBA FIELD
         BAL   R14,SBAGEN          GEN THE SBA
         BCTR  R2,0
         BCTR  R2,0
         ST    R2,DWORK            ROWS FOR SBA NO 2 (LAST ROW-2)
         LA    R15,DSBA2           => SBA FIELD
         BAL   R14,SBAGEN          GEN THE SBA
         BCTR  R2,0
         ST    R2,DWORK            ROWS FOR SBA NO 1 (LAST ROW-3)
         LA    R15,DSBA1           => SBA FIELD
         BAL   R14,SBAGEN          GEN THE SBA
         BCTR  R2,0                MAX ROWS-4 = MAXROLL
         STH   R2,MAXROLL          MAX NO OF SCROLLING LINES
         LA    R2,2(,R2)           ROW FOR INPUT FIELD
         ST    R2,DWORK            ROWS FOR INSBA
         MVI   DWORK+7,X'02'       => COLUMN FOR INPUT FIELD
         LA    R15,INSBA           => SBA FIELD
         BAL   R14,SBAGEN          GEN THE SBA
         L     R2,16               => CVT
         MVC   SYSID,340(R2)       SAVE SYSTEM ID ON DISPLAY
*              I S S U E    E S T A E
         LA    R2,ABRET                => RETADDR FROM ESTAE
         L     R3,=V(ESTAEX)           => ESTAE EXIT
         ESTAE (3),CT,PARAM=(2),PURGE=HALT,ASYNCH=NO
         LTR   R15,R15                 CHECK RETCODE
         BZ    ESTAEOK                 BRANCH IF OK
         TPUT  =CL30'ESTAE FAILED',30  ISSUE ERR MSG
         B     RETURN0                 AND RETURN
ESTAEOK  DS    0H
         LA    R2,FLAG                 => FLAG FIELD
         STAX  STAXEXIT,USADDR=(2),IBUF=0,OBUF=0   SET STAX EXIT
         MVI   BLANKS,X'40'        PREPARE TO INIT BLANK FIELD
         MVC   BLANKS+1(L'BLANKS-1),BLANKS   DO IT
         L     R2,548              => OWN ASCB (PSAAOLD)
         MVC   MYASID,36(R2)       SAVE MY ASID
*              PREPARE CROSS MEMORY STUFF
         L     15,540              => TCB
         L     15,180(,15)         => JSCB
         TM    236(15),X'01'       TEST JSCBAUTH FLAG
         BO    AMAUTH              BIF AUTH
         OI    FLAG2,AUTHSVC       SHOW WE NEED AUTHORIZATION
****     #APF  ON                  USE AN AUTH SVC IF YOU HAVE ONE...
AMAUTH   DS    0H
         MODESET KEY=ZERO,MODE=SUP  SOUP UP...
         STFSMODE ON,INITIAL=YES   TELL VTAM WE'RE FULL SCREEN
         L     R2,60(,R2)          => MY TSB
         L     R2,96(,R2)          => MY TSBX
         CLI   81(R2),X'02'        IS IT NON-SNA ? (BIND IMAGE FMPROF)
         BE    SNAEXIT1            BIF SO....
         OI    FLAG2,SNA           MY TERMINAL IS SNA
         OI    FLAG,STATIC         SET DISPLAY NON-SCROLLING
         MVI   SAVTIME,SNADFLT     DEFAULT SNA SCROLL TIME (BINARY)
         OI    SAVTIME,X'F0'       DEFAULT SNA SCROLL TIME (CHAR)
         MVC   DELAY,SNADELAY      DEFAULT SCROLL TIME FOR STIMER
         MVI   SCRTIME,C'0'        SHOW SCROLLING IS OFF
         B     SNAEXIT2            LEAVE 'SNA TERMINAL' MSG
SNAEXIT1 DS    0H
         XC    MSGAREA,MSGAREA     CLEAR SNA MSG (WE'RE NON-SNA)
SNAEXIT2 DS    0H
         LA    R2,1
         AXSET AX=(R2)
         TITLE 'LOCATE THE UCM FOR THE REQUIRED CONSOLE'
*              START OF MAIN PROGRAM LOOP:
FINDCON  DS    0H
         LA    R10,BLANKS              => NO (BLANK) MESSAGE
         TM    FLAG,ATTN               ATTENTION PRESSED ?
         BO    DROPSUP                 BIF SO...BYEE....
         MVI   UCMID,0                 DEFAULT TO NO CONSOLE FOUND..
         L     R2,16                   => CVT
         L     R2,100(,R2)             => UCM BASE
         MVC   CONSASID,250(R2)        SAVE CONSOLE ASID
         TM    FLAG,SCANALL            LOOKING FOR ANY OLD CONSOLE ?
         BO    NOTMSTR                 BIF SO...
         CLI   CONSID,X'FF'            SHORT CUT TO MASTER CONSOLE ?
         BNE   NOTMSTR                 BIF NOT
         LR    R1,R2                   COPY UCM BASE PTR
         S     R1,=F'4'                MINUS 4
         L     R1,0(R1)                => UCM PREFIX
         L     R3,0(R1)                => MASTER CONSOLE UCME
         MVC   CONSID,26(R3)           SAVE THE REAL CONSOLE ID
         MVC   MASTUCM,26(R3)          DITTO FOR POSTERITY
         B     HAVEUCME                AND SKIP THE NEXT BIT
NOTMSTR  DS    0H
         L     R3,72(R2)               => FIRST UCME
UCMELOOP DS    0H
         TM    FLAG,SCANALL            LOOKING FOR ANY OLD CONSOLE ?
         BO    ALL1                    BIF SO...
         CLC   CONSID,26(R3)           IS THIS THE CONSOLE DESIRED?
         BNE   NEXTUCME                NO, KEEP LOOKING
ALL1     DS    0H
         TM    25(R3),X'10'            IS DEVICE ACTIVE ? (UCMATR)
         BO    ISACT                   BIF SO
         LA    R10,ERR1         CONSOLE NOT ACTIVE
         B     FINDCONX
ISACT    DS    0H
         CLC   28(4,R3),=F'0'          PTR TO RDCM ZERO ?
         BNE   HAVEUCME                BIF NOT ZERO
         LA    R10,ERR2         NO SCREEN BUFFER FOR THIS CONSOLE
         B     FINDCONX
NEXTUCME DS    0H
         A     R3,76(R2)               POINT TO NEXT UCME
         C     R3,80(R2)               IS THIS THE LAST UCME?
         BNH   UCMELOOP                NO, KEEP LOOKING
         TM    FLAG,SCANALL            WAS THAT A GENERAL SCAN ?
         BO    ALLDONE                 BIF SO...NO USABLE CONSOLES..
         LA    R10,ERR3         UNKNOWN CONSOLE ID
         B     FINDCONX
ALLDONE  DS    0H
         TPUT  =CL30'NO USABLE CONSOLES...',30  ISSUE MESSAGE
         B     PAUSE                   PAUSE AND END
         TITLE 'CHECK AND SAVE CONSOLE ATTRIBUTES'
*              WE'VE FOUND THE UCM ENTRY ... NOW CHECK IT OUT
HAVEUCME DS    0H
         ST    R3,UCMEPTR          SAVE UCME ADDR (FOR QADDR)
         MVC   UCMID,26(R3)        SAVE THE CONSOLE ID
         MVC   MFORM,BLANKS        BLANK MFORM
         LA    R1,MFORM            => DISPLAYED MFORM
         MVI   0(R1),C'M'          ASSUME MFORM = M (NO EXTRAS)
         LA    R1,2(,R1)           FOR COMPATIBILITY....
         TM    43(R3),X'C4'        IS MFORM M ?
         BZ    HAVEFORM            BIF SO..ITS ALL IT CAN BE
         BCTR  R1,0                CORRECT OUR POINTER...
         BCTR  R1,0                DITTO....
         TM    43(R3),X'80'        IS MFORM T ? (UCMDISPI)
         BZ    MFJOB               BIF NOT
         MVI   0(R1),C'T'          SHOW MFORM = T (TIME)
         MVI   1(R1),C','          ADD COMMA
         LA    R1,2(,R1)           => NEXT MFORM CHAR
MFJOB    DS    0H
         TM    43(R3),X'40'        IS MFORM J ? (UCMDISPJ)
         BZ    MFSYS               BIF NOT
         MVI   0(R1),C'J'          MFORM = J (JOBNAME)
         MVI   1(R1),C','          ADD COMMA
         LA    R1,2(,R1)           => NEXT MFORM CHAR
MFSYS    DS    0H
         TM    43(R3),X'04'        IS MFORM S ? (UCMDISPN)
         BZ    HAVEFORM            BIF NOT
         MVI   0(R1),C'S'          MFORM = S (SYSTEM NAME)
         LA    R1,2(,R1)           => NEXT MFORM CHAR + 1
HAVEFORM DS    0H
         BCTR  R1,0                CORRECT OUR POINTER
         MVI   0(R1),C')'          AND ADD RH BRACKET TO MFORM
*              MORE CONSOLE ATTRIBUTES....
         SLR   R1,R1               ZERO REG
         IC    R1,UCMID            LOAD CONSOLE ID
         CVD   R1,DWORK            PACK IT
         UNPK  CONSID2(2),DWORK+6(2) ZONE IT
         OI    CONSID2+1,X'F0'     CORRECT SIGN NIBBLE
         MVC   PF2CID(2),CONSID2   SAVE THIS CONSID IN PF2 MSG
         L     R4,12(R3)           => UCB (UCMUCB)
         MVC   UCBNAME,13(R4)      MOVE IN UCB NAME
         L     R1,28(R3)           RDCM ADDR (IN CONSOLE AS)
         ST    R1,RDCMPTR          SAVE RDCM ADDR (FOR QADDR)
         LR    R7,R1               COPY RDCM ADDR
         LA    R1,30               THIS MANY BYTES
         LA    R6,RDCMDATA         THIS IS WHERE WE WANT TO MOVE TO
         LA    R4,0                PROTECT KEY IS ZERO
         LH    R5,CONSASID         LOAD CONSOLE'S ASID
         SSAR  R5                  SET SECONDARY ADDRESS SPACE
         MVCP  0(R1,R6),0(R7),R4   MOVE THE POINTER(S)
         LH    R5,MYASID           LOAD MY ASID
         SSAR  R5                  RESET SECONDARY ADDRESS SPACE
         CLC   MAXROLL,ROLLSIZE    INSIDE PERMITTED SCREEN SIZE ?
         BNL   ROLLOK              BIF SO...
         LA    R10,ERR5            SCROLLING SCREEN TOO BIG...
         MVI   UCMID,X'00'         PRETEND CONSOLE NOT FOUND
         B     FINDCONX            AND TRY AGAIN WITH MASTER CONSOLE
ROLLOK   DS    0H
         CLC   RDCMLIT,=C'RDCM'    DO WE REALLY HAVE AN RDCM HERE ?
         BE    RDCMOK              BIF SO...SO FAR SO GOOD
         TPUT  =CL30'RDCM INVALID...LOGIC ERROR',30  ISSUE MSG
         B     PAUSE               AND QUIT WHILE WE CAN
RDCMOK   DS    0H
         TITLE 'LOCATE THE SCREEN IMAGE BUFFER'
*              LOCATE THE SCREEN BUFFER FOR THIS CONSOLE
         L     R1,TDCMPTR          => TDCM
         LR    R7,R1               SAVE TDCM ADDR FOR LATER
         LA    R3,48(R1)           => DCMASCRN FIELD (SCR IMAGE PTR)
         LA    R1,12               THIS MANY BYTES
         LA    R2,SCREENPT         THIS IS WHERE WE WANT TO MOVE TO
         LA    R4,0                PROTECT KEY IS ZERO
         LH    R5,CONSASID         LOAD CONSOLE'S ASID
         SSAR  R5                  SET SECONDARY ADDRESS SPACE
         MVCP  0(R1,R2),0(R3),R4   MOVE THE POINTER(S)
         LH    R5,MYASID           LOAD MY ASID
         SSAR  R5                  RESET SECONDARY ADDRESS SPACE
         L     R2,SCREENPT         => SCREEN IMAGE (1ST TEXT BYTE)
         L     R1,ENDSCRN          LOAD THE POINTER
         SR    R1,R2               = LEN OF SCREEN AREA
         ST    R1,SCRNLEN          SAVE SCREEN IMAGE LEN FOR MVCP
         S     R2,=F'12'           BACK UP 12 BYTES (TO GET ATTR)
         ST    R2,SCREENPT         SAVE ADDR OF SCREEN
         LA    R3,TARGET           => COPIED SCREEN BUFFER
         LA    R3,0(R1,R3)         => 1ST BYTE AFTER OUR SCR BUFF
         ST    R3,STATPT           SAVE ADDR OF STATIC SCREEN AREA
         CLC   SCRNLEN,MAXSIZE     SCREEN SIZE OK FOR OUR GETMAIN ?
         BNH   FINDCONX            BIF SO...GIVE IT A TRY
         TPUT  =CL30'SCREEN BUFFER TOO LARGE',30
         B     PAUSE               REVIEW MSG AND END
FINDCONX DS    0H
         TM    FLAG,ATTN               ATTENTION PRESSED ?
         BO    DROPSUP                 BIF SO...BYEE....
         CLI   UCMID,0                 DID WE FIND OUR CONSOLE ?
         BNE   HAVECON                 BIF SO ....
         TM    FLAG,SCANALL            SCAN FOR ANY CONSOLE ?
         BO    NEXTUCME                BIF SO...KEEP GOING...
         CLI   LASTUCM,X'FF'           ANY PREVIOUS UCM ?
         BE    NOPREV                  BIF NOT...GET ANYTHING WE CAN
         MVC   MSGAREA(35),0(R10)      ERROR ON REQUESTED CONSOLE
         CLC   LASTUCM,CONSID          LOOKING FOR THE LAST UCM ?
         BE    NOPREV                  BIF SO...GET ANYTHING WE CAN
         MVC   CONSID,LASTUCM          TRY THE CURRENT CONSID
         B     FINDCON                 ..DO IT
NOPREV   DS    0H
         OI    FLAG,SCANALL            INDICATE SCAN FOR ANY CONSOLE
         B     FINDCON                 AND GET SCANNING
*              USE CONSOLE ID IN UCMID
HAVECON  DS    0H
         CLC   =C'CNXX',MSGAREA   ANY MSGS NEEDING A CONSOLE ID ?
         BNE   SKIPCID             BIF NOT...
         MVC   MSGAREA+2(2),CIDREQ   OTHERWISE SAVE THE REQUESTED ONE
         MVC   CMDBUFF(4),MSGAREA    AND COPY CMD BACK TO SCREEN
SKIPCID  DS    0H
         MVC   CONLIT,=C'CONSOLE'  DEFAULT CONSOLE DESC = CONSOLE
         CLC   UCMID,MASTUCM       MASTER CONSOLE ?
         BNE   NOTMAST             BIF NOT...
         MVC   CONLIT,=C' MASTER'  SET CONSOLE DESC = MASTER
NOTMAST  DS    0H
         MVC   CONSID,UCMID        SAVE CURRENT CONSOLE ID
         MVI   MYBUFF,#WRITE       DEFAULT CC = WRITE
         CLC   UCMID,LASTUCM       SAME UCMID AS LAST TIME ?
         BE    COPYSCR             BIF SO..JUST COPY THE SCREEN IMAGE
*              NEW CONSOLE ID TO BE DISPLAYED - CLEAR CURRENT SCREEN
         MVC   MYBUFF(1),COMMCHAR  SET CC = ERASE/WRITE (/ALTERNATE)
         TCLEARQ OUTPUT            DELETE QUEUED MSGS
         MVC   LASTUCM,UCMID       SAVE CURRENT UCMID
         TITLE 'COPY THE SCREEN IMAGE TO OUR GETMAINED BUFFER'
*              CHECK LENGTH OF BUFFER PREFIX (6 OR 12 BYTES)
COPYSCR  DS    0H
         LH    R5,CONSASID             LOAD CONSOLE'S ASID
         SSAR  R5                      SET SECONDARY ADDRESS SPACE
*                    DOES SCREEN HAVE A 6 OR A 12 BYTE PREFIX ?
         LA    R1,7                    LENGTH TO MOVE
         LA    R2,DWORK2               THIS IS WHERE WE WANT TO MOVE TO
         L     R3,SCREENPT             MOVE FROM SCREEN IMAGE PREFIX
         LA    R4,0                    PROTECT KEY IS ZERO
         MVCP  0(R1,R2),0(R3),R4       COPY SCREEN IMAGE PREFIX FOR SBA
         CLI   DWORK2+6,X'11'      SBA AT DCMASCRN-6 ? (NO EXT ATTR)
         BNE   TRYEXT              BIF NOT...TRY DCMASCRN-12
         L     R1,SCREENPT         RELOAD 'SCREEN PTR' (PTR-6)
         LA    R1,6(,R1)           CORRECT IT
         ST    R1,SCREENPT         SAVE IT
         B     PTROK               AND USE IT
TRYEXT   DS    0H
         CLI   DWORK2,X'11'        SBA AT DCMASCRN-12 ? ( EXT ATTR)
         BE    PTROK               BIF SO...PTR ALREADY CORRECT
         TPUT  =CL30'SCREEN PREFIX FORMAT UNKNOWN',30
         B     PAUSE               REVIEW MSG AND END
PTROK    DS    0H
*              COPY CONSOLE BUFFER TO OUR SCREEN AREA
         L     R1,SCRNLEN              LENGTH TO MOVE
         LA    R2,TARGET               THIS IS WHERE WE WANT TO MOVE TO
         L     R3,SCREENPT             MOVE FROM HERE
         LA    R4,0                    PROTECT KEY IS ZERO
MVCPLOOP MVCP  0(R1,R2),0(R3),R4       MOVE A CHUNK
         BZ    MVCPDONE                QUIT IF EVERYTHING MOVED
         SL    R1,=F'256'              DECREASE TRUE LENGTH
         AL    R2,=F'256'              INCREASE TARGET ADDR
         AL    R3,=F'256'              INCREASE SOURCE ADDR
         B     MVCPLOOP
MVCPDONE DS    0H
         TITLE 'OBTAIN SCREEN CONTROL (K) PARAMETERS'
*              ESTABLISH 'K S' VALUES FOR THIS SCREEN
         LA    R1,8                    LENGTH TO MOVE
         LA    R2,DWORK                THIS IS WHERE WE WANT TO MOVE TO
         LA    R3,266(,R7)             MOVE FROM HERE (DCMDEL IN TDCM)
         LA    R4,0                    PROTECT KEY IS ZERO
         MVCP  0(R1,R2),0(R3),R4       MOVE OUR 'K S' VARIABLES
         LH    R5,MYASID               LOAD MY ASID
         SSAR  R5                      RESET SECONDARY ADDRESS SPACE
         MVC   DEL,DWORK           SAVE DEL= VALUE
         MVC   CON,DWORK+2         SAVE CON= VALUE
         SLR   R1,R1               ZERO WORK REG
         IC    R1,DWORK+3          SAVE SEG= VALUE
         CVD   R1,DWORK2           IN DECIMAL
         UNPK  FWORK(3),DWORK2+6(2) IN ZONED DECIMAL
         OI    FWORK+2,X'F0'       PRINTABLE
         MVC   SEG,FWORK+1         SAVE SEG= VALUE
         SLR   R1,R1               ZERO WORK REG
         IC    R1,DWORK+5          SAVE RNUM= VALUE
         CVD   R1,DWORK2           IN DECIMAL
         UNPK  FWORK(3),DWORK2+6(2) IN ZONED DECIMAL
         OI    FWORK+2,X'F0'       PRINTABLE
         MVC   RNUM,FWORK+1        SAVE RNUM= VALUE
         LH    R1,DWORK+6              RTME VALUE
         CVD   R1,DWORK2               => DECIMAL
         UNPK  RTME(3),DWORK2+6(2)     => CHARS
         OI    RTME+2,X'F0'            CORRECT THE SIGN
         MVC   MSGDISP(L'KMSG),KMSG   AND SAVE THE WHOLE 'K S' TEXT
         CLI   DEL+1,X'40'         SINGLE CHAR 'DEL=' OPTION ?
         BNE   KSDONE              BIF NOT...TEXT IS OK
         MVC   MSGDISP+DELOFFK+1(DELMVCL),SEGDC  SHIFT TEXT 1 CHAR LEFT
         MVI   MSGDISP+MFOFFK,X'40'  AND BLANK LAST CHAR
KSDONE   DS    0H
         L     R1,STATPT           => LOWER PART OF GETMAINED SCREEN
         MVC   0(LAREA1,R1),INAREA    COPY 1ST STATIC LINE TO SCREEN
         MVC   LAREA1(INAREAL-LAREA1,R1),INAREA+LAREA1 CPY LAST 3 LINES
         TITLE 'CHECK THE SCREEN BUFFER AND DISPLAY THE SCREEN'
*              CHANGE EXTENDED ATTRS TO NORMAL ATTRS FOR CHEAP SCREENS
         CLI   TARGET+3,X'29'          EXTENDED SCREEN ATTRS PRESENT ?
         BNE   ATTROK                  BIF NOT...LEAVE SCREEN ALONE
         TM    FLAG,EXTEND+EXTON       DO WE SUPPORT & WANT EXT ATTR ?
         BO    ATTROK                  BIF SO....LEAVE SCREEN ALONE
         LA    R1,TARGET               => COPIED CONSOLE BUFFER
         L     R2,SCRNLEN              LEN OF BUFFER
ATLOOP   DS    0H
         CLI   0(R1),X'11'             SBA ORDER ?
         BNE   NXTAT                   BIF NOT ..TRY NEXT CHAR
         CLC   3(2,R1),=X'2903'        SFE ORDER/3 ATTRS ?
         BNE   NXTAT                   BIF NOT ..TRY NEXT CHAR
         MVC   9(2,R1),=X'1DF0'        ATTR = SKIP + NORM
         CLI   6(R1),X'E4'             NORMAL ATTR ?
         BE    NORMAT                  BIF SO
         MVI   10(R1),X'F8'            OTHERWISE SET ATTR = SKIP + HI
NORMAT   DS    0H
         MVC   3(3,R1),0(R1)           COPY SBA OVER SFE
         MVC   6(3,R1),0(R1)           DITTO
         LA    R1,10(,R1)              SKIP OVER THIS SBA AND SFE
         SH    R2,=H'10'               AND SUBTRACT FROM COUNT FIELD
         BNP   ATTROK                  THATS IT IF NOT +VE
NXTAT    DS    0H
         LA    R1,1(,R1)               POINT UP BUFFER
         BCT   R2,ATLOOP               CHECK WHOLE CONS BUFFER
ATTROK   DS    0H
*              DISPLAY THE CONSOLE IMAGE
         TCLEARQ OUTPUT                PREVENT OUTPUT QUEUEING
         NI    FLAG,255-SCANALL        KEEP ON SELECTED CONSOLE...
         L     R6,SCRNLEN              LEN OF SCROLLING SCREEN AREA
         TM    FLAG,LONGWRT            BOTTOM OF SCREEN NEEDED ?
         BZ    PUTSHORT                BIF NOT
         LA    R6,LAREA2+L'CONTROL(,R6)  SET FULL SCREEN LENGTH
         NI    FLAG,255-LONGWRT        RESET FULL SCREEN FLAG
         TPUT  MYBUFF,(6),NOEDIT,HOLD  SYNCHRONIZE SCREEN AND PROGRAM
*              (IGNORE MNOTES FOR POSITIONAL PARAMETERS...)
         B     TPUTCC                  ....CHECK RETCODE
PUTSHORT DS    0H
         LA    R6,LAREA1+L'CONTROL(,R6)  SET SHORT SCREEN LENGTH
         TPUT  MYBUFF,(6),NOEDIT       AND DISPLAY SCREEN IMAGE
TPUTCC   DS    0H
         LTR   R15,R15             TPUT OK ?
         BZ    GETCMD              BIF SO...NOW GET CMD INPUT
         TPUT  =CL20'TPUT NOEDIT ERROR',20   OTHERWISE ISSUE MSG
         B     PAUSE               AND GO HOME....


This article will be concluded next month with the publication of the remaining

                                                                        c Xephon

