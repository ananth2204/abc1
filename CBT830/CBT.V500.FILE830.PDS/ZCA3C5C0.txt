A command utility

CMDUTIL is a utility program designed to issue START,
STOP, MODIFY, and JES2 commands. We use it to activate
our network and establish our NJE connections. It has relieved
the operations area of having to remember what needs to be
started at IPL time, although the utility can be invoked at any
time.

CMDUTIL has been designed to accept the WAIT parameter.
This tells CMDUTIL to wait until a specified time has expired
before reading and issuing the next command. The time range
is 1 to 999 seconds. We use it to ensure that the JES2 VTAM
interface and the SNA logical lines have been started before
issuing the START NJE networking commands. Comments can
also be included on the actual command record or as individual
records: an asterisk must be placed in column 1.

A test has been incorporated to check whether we have IPLed
from a test SYSRES. If we have, we do not start any NJE
sessions. This is because we might IPL with a test spool file to
which we would not want production output from our remote
sites spooled. We have set up another start procedure that will
issue the required NJE commands if this becomes necessary.


JCL TO BE PLACED IN PROCLIB LIBRARY

//TPSTART  PROC PARMLIB='SYS1.PARMLIB',
                MEMBER=COMAND01
//IEFPROC  EXEC PGM=CMDUTIL
//COMMANDS DD   DSN=&PARMLIB(&MEMBER),DISP=SHR
//SYSUDUMP DD   SYSOUT=*


EXAMPLE OF A PARMLIB MEMBER

* THIS MEMBER IS PROVIDED TO START STCS OR ISSUE COMMANDS DURING OR
* AFTER IPL. IF WAIT=NNN IS SPECIFIED WHERE NNN IS IN THE RANGE
* 001-999 SECONDS, THE NEXT COMMAND WILL NOT BE PASSED TO MVS UNTIL
* NNN SECONDS HAVE ELAPSED.
S NET,,,(LIST=01)                 START THE NETWORK
WAIT=30                           WAIT FOR 30 SECONDS
S TSPRINT                         START TSPRINT
S OMVTAM                          START OMEGAMON
S OCCI                            START OMEGAMON CICS
S TSO                             START TSO
@SLGN1                            ACTIVATE JES2 APPL
@SLNE1,LNE2,LNE3                  START SNA LINES
WAIT=10                           WAIT FOR 10 SECONDS
@SN,A=N1TOR                       START NETWORKING
@SN,A=N2TOR                       START NETWORKING
@SN,A=N3TOR                       START NETWORKING
@TN1,H=JR                         HOLD JOBS SENT FROM N1

All commands must start in column 1. A start command must
be issued from an MVS console to activate the procedure. For
example:

      S TPSTART

In all cases, the short or long form of commands is acceptable.
For example:

      STOP TSO
      P    TSO
      WAIT=10
      W=10


CMDUTIL SOURCE CODE

CMDUTIL must be link-edited into an authorized library with
SETCODE AC(1).

CMDUTIL TITLE 'START NETWORK SERVICES'
         MACRO
         BALS  &REG,&BRTO
         BAL   &REG,&BRTO
         DC    S(*+2)
         MEND
CMDUTIL CSECT
***      MODULE NAME.   CMDUTIL.                                    ***
*        REMARKS.       THIS MODULE IS DESIGNED TO ISSUE START        *
*                       STOP, MODIFY, AND JES2 COMMANDS. THESE ARE    *
***                     CONTAINED IN A DATASET WITH DDNAME COMMANDS.***
         TITLE 'HASP EQUATES'
         $HASPEQU
         TITLE 'EQUATES'
SPACE    EQU   C' '                     SPACE
ASTERISK EQU   C'*'                     ASTERISK
TSYSRES  EQU   X'01'                    INDICATE TEST RES
TEST     EQU   C'T'                     TEST RES IN UCB
DEFAULT  EQU   C'@'                     DEFAULT JES2 CHARACTER
EOT      EQU   X'FF'                    END OF TABLE INDICATOR
MAXCHARS EQU   70                       MAX NO OF DIGITS PER CARD - 1
NEXTSA   EQU   8                        POINTER TO PREVIOUS SAVEAREA
         TITLE 'MAIN PROCESSING LOGIC'
         SAVE  (14,12),,CMDUTIL_&SYSDATE-&SYSTIME
         USING CMDUTIL,R12              SET UP BASE ADDRESSABILITY
         LR    R12,R15                  ENTRY POINT ADDRESS
         GETMAIN RC,LV=WORKLEN,SP=0,LOC=BELOW,                         X
               RELATED=(FREE,'GET STORAGE')
         LTR   R15,R15                  GETMAIN OBTAINED?
         BNZ   SAERROR                  NO-
         LR    R14,R1                   CLEAR
         LA    R15,WORKLEN              THE
         LA    R10,LOWZERO              GOTTEN
         LA    R11,1(0,0)               AREA
         MVCL  R14,R10                  CLEAR
         ST    R13,4(,R1)               ADDRESS OF PREVIOUS SA
         ST    R1,8(,R13)               ADDRESS OF NEXT SA
         LR    R13,R1                   OUR SAVEAREA ADDRESS
         USING WORKAREA,R13             ADDRESSABILITY
         TITLE 'OPEN THE FILES'
OPEN     EQU   *
         USING IHADCB,R10               INFORM THE ASSEMBLER
         MVC   COMMSDCB,CMDDCB1         COMMANDS DDNAME
         LA    R0,OPENARA               @ OPEN PARAMETER LIST
         LA    R1,OPENLLEN              OPEN PARAMETER LIST LENGTH
         LA    R14,OPENLST              MAKE OPEN PARAMETER
         LR    R15,R1                   LIST RE-ENTRANT
         MVCL  R0,R14                   MOVE LONG
         OPEN (COMMSDCB,(INPUT)),MF=(E,OPENARA)
         LA    R10,COMMSDCB             ADDRESS COMMANDS DCB
         TM    DCBOFLGS,X'10'           OPEN OK?
         BZ    OPNERR1                  NO-
         TITLE 'CHECK FOR TEST SYSRES AND FIND JES2 COMMAND CHARACTER'
SYSRES   EQU   *
         USING PSA,0                    @ THE PSA
         L     R8,FLCCVT                CVT @
         USING CVT,R8                   @ THE CVT
         L     R8,CVTJESCT              JES CVT
         USING JESCT,R8                 @ THE JES CVT
         L     R8,JESUNITS              SYSRES UCB
         USING UCB,R8                   @ THE UCB
         MVC   JESTCOMC,DEFAULT         DEFAULT HASP COMMAND CHARACTER
         CLI   UCBVOLI+3,TEST           TESTING RES PACK
         BNE   KEYZERO                  YES- DON'T START NJE SERVICES
         MVI   TESTRES,TSYSRES          LET'S REMEMBER
         USING PSA,0                    INFORM THE ASSEMBLER
         L     R11,FLCCVT               CVT ADDRESS
         USING CVT,R11                  INFORM THE ASSEMBLER
         L     R11,CVTJESCT             JES CVT
         USING JESCT,R11                INFORM THE ASSEMBLER
         L     R11,JESSSCT              SSCT @
         USING SSCT,R11                 INFORM THE ASSEMBLER
CHKSSCT  EQU   *
         LTR   R11,R11                  END OF SSCT CHAIN?
         BZ    KEYZERO                  YES- GIVE UP
         CLC   SSCTSNAM,=C'JES2'        JES2 SUBSYSTEM?
         BNE   NXTSSCT                  NO-
         L     R1,SSCTSSVT              SSVT @
         USING SSVT,R1                  INFORM THE ASSEMBLER
         MVC   JESTCOMC,SVTCOMCH        HASP COMMAND CHARACTER
         B     NXTSSCT                  CHECK NEXT SSCVT
NXTSSCT  EQU   *
         L     R11,SSCTSCTA             @ OF NEXT SSCVT
         B     CHKSSCT                  CHECK IT OUT
         TITLE 'READ COMMANDS AND ISSUE START AND WAIT COMMANDS'
KEYZERO  EQU   *
         MVC   MDESETX,MDESETL1         MOVE FOR EXECUTE FORM
         MODESET MF=(E,MDESETX)         SUPV STATE KEY 0
READ     EQU   *
         GET   COMMSDCB,IOAREA          READ INTO I/O AREA
         CLI   COMMENT,ASTERISK         COMMENT CARD?
         BE    READ                     YES- IGNORE
         BAL   R2,VALIDATE              SEE WHAT WE HAVE
         B     READ                     DO WHILE NOT EOF?
         TITLE 'VALIDATE COMMAND INPUT'
VALIDATE EQU   *
         LA    R4,COMMTAB               @ COMMAND TABLE
         USING COMTDSCT,R4              INFORM THE ASSEMBLER
CHKCMD   EQU   *
         SR    R6,R6                    ZEROIZE
         IC    R6,COMMLEN               COMMAND LENGTH
         EX    R6,COMPCMD               HAVE WE FOUND A COMMAND?
         BNE   NXTENT                   NO- TRY AGAIN
         ICM   R6,B'1111',COMMRTNE      YES- ROUTINE ADDRESS
         BR    R6                       LET'S GO TO IT
NXTENT   EQU   *
         IC    R6,COMMTELN              TABLE ENTRY LENGTH
         LA    R4,0(R6,R4)              MOVE ONTO NEXT TABLE ENTRY
         CLI   COMMLEN,EOT              END OF TABLE?
         BNE   CHKCMD                   NO
NONSTART EQU   *
         LA    R7,IOAREA                @ I/O AREA
         LA    R6,MAXCHARS              LENGTH TO SCAN
NONBLK   EQU   *
         CLI   0(R7),SPACE              NON-BLANK?
         BNE   CMDFND                   YES-
         LA    R7,1(,R7)                MOVE ONTO NEXT BYTE
         BCT   R6,NONBLK                DO WHILE R6 > 0?
         BR    R2                       BLANK CARD
CMDFND   EQU   *
         LR    R8,R7                    STORE FOR FUTURE REFERENCE
         TM    TESTRES,TSYSRES          TEST SYSRES?
         BNO   BLDCMD                   NO-
         CLC   0(L'JESTCOMC,R7),JESTCOMC JES2 COMMAND ID?
         BNE   BLDCMD                   NO-
         LA    R9,JESBYPST              @ OF BYPASS TABLE
         USING JESBDSCT,R9              INFORM THE ASSEMBLER
JESSCAN  EQU   *
         SR    R5,R5                    ZEROIZE
         IC    R5,JCOMLEN               JES2 COMMAND LENGTH
         EX    R5,JESCOMP               COMPARE FOR JES2 COMMAND
         BER   R2                       YES- DO NOT ISSUE
         IC    R5,JTBENTLN              TABLE ENTRY LENGTH
         LA    R9,0(R5,R9)              MOVE ONTO NEXT ENTRY
         CLI   JTBENTLN,EOT             END OF TABLE?
         BNE   JESSCAN                  NO-
BLDCMD   EQU   *
         CLI   0(R7),SPACE              END OF COMMAND
         BE    MVECMD                   YES-
         LA    R7,1(,R7)                MOVE ONTO NEXT BYTE
         BCT   R6,BLDCMD                DO WHILE R6 > 0?
MVECMD   EQU   *
         MVI   SVC34CMD,SPACE          SPACEFILL SVC34 AREA
         MVC   SVC34CMD+L'SPACE(L'SVC34CMD-L'SPACE),SVC34CMD
         SR    R7,R8                   COMPUTE LENGTH TO MOVE
         BCTR  R7,0                    -1 FOR MVC
         EX    R7,CMDMVE               MOVE TO SVC 34 AREA
         MVC   CMDLEN,=X'0054'         SVC 34 PARAMETER LENGTH
         SR    R0,R0                   ZEROIZE
         LA    R1,CMDAREA              ADDR OF RELEASE COMMAND
         SVC   34                      ISSUE JES2 RELEASE COMMAND
         BR    R2                      KEEP READING
         TITLE 'PROCESS START STOP OR MODIFY COMMANDS '
START    EQU   *
STOP     EQU   *
MODIFY   EQU   *
         SR    R6,R6                    ZEROIZE
         IC    R6,COMMLEN               COMMAND LENGTH
         LA    R7,IOAREA                @ I/O AREA
         LA    R7,1(R6,R7)              LOCATE STC NAME
         LA    R6,IOAREA                CALCULATE THE
         LA    R6,MAXCHARS(,R6)         NUMBER
         SR    R6,R7                    TO SCAN
         LA    R6,1(,R6)
FRSTCHAR EQU   *
         CLI   0(R7),SPACE              NON-BLANK?
         BNE   STCFND                   YES-
         LA    R7,1(,R7)                MOVE ONTO NEXT BYTE
         BCT   R6,FRSTCHAR              DO WHILE R6 > 0?
COMERR   EQU   *
         MVC   WTOAREA(WTOIERLN),WTOINPER MESSAGE
         LA    R1,WTOAREA               WTO MESSAGE AREA ADDRESS
         WTO   MF=(E,(R1))              ISSUE WTO
         B     R2                       KEEP READING
STCFND   EQU   *
         LR    R8,R7                    STORE FOR FUTURE REFERENCE
         CLC   COMSHORT,=C'F '          MODIFY COMMAND?
         BNE   BLDSTC                   NO-
         MVI   STARTEXT,SPACE           SPACEFILL SVC34 AREA
         MVC   STARTEXT+L'SPACE(L'STARTEXT-L'SPACE),STARTEXT
         LA    R9,IOAREA                @ I/O AREA
         LA    R9,MAXCHARS(,R9)         POINT TO MAX CHARACTER
         SR    R9,R7                    LET'S GET THE MAX LENGTH
         EX    R9,MODFYMVE              MOVE TO SVC 34 AREA
         B     STCSVC34                 GET SVC 34 GOING
BLDSTC   EQU   *
         CLI   0(R7),SPACE              END OF STC NAME + PARMS?
         BE    MVESTC                   YES-
         LA    R7,1(,R7)                MOVE ONTO NEXT BYTE
         BCT   R6,BLDSTC                DO WHILE R6 > 0?
MVESTC   EQU   *
         MVI   STARTEXT,SPACE           SPACEFILL SVC34 AREA
         MVC   STARTEXT+L'SPACE(L'STARTEXT-L'SPACE),STARTEXT
         SR    R7,R8                    COMPUTE LENGTH TO MOVE
         BCTR  R7,0                     -1 FOR MVC
         EX    R7,STCMVE                MOVE TO SVC 34 AREA
STCSVC34 EQU   *
         MVI   FLAG1,X'00'              NO MEANINGFUL DATA IN FLAG2
         MVC   FLAG2,=X'0000'           NO TOKEN PARAMETER PRESENT
         SR    R0,R0                    INDICATE SYSTEM ISSUED
         MVC   LENGTH,=AL1(TOKEN-MGCRDATA) TEXT LENGTH
         MVC   SCMD,COMSHORT            SHORT FORM OF THE COMMAND
         LA    R1,MGCRDATA              POINT TO START COMMAND AREA
         MGCR  (R1)
         LTR   R15,R15                  OK?
         BR    R2                       YES-
COMERROR EQU   *
         MVC   WTOAREA(WTOSVCLN),WTO34ERR MESSAGE
         MVC   INVCOM,IOAREA            INVALID COMMAND
         LA    R1,WTOAREA               WTO MESSAGE AREA ADDRESS
         WTO   MF=(E,(R1))              ISSUE WTO
         BR    R2                       KEEP READING
         TITLE 'PROCESS WAIT COMMAND'
WAIT     EQU   *
         SR    R6,R6                    ZEROIZE
         IC    R6,COMMLEN               COMMAND LENGTH
         LA    R7,IOAREA                @ I/O AREA
         LA    R7,1(R6,R7)              LOCATE STC NAME
         CLI   0(R7),SPACE              NO WAIT TIME VALUE
         BE    NOWAIT                   YES-
         MVC   NUMSTORE,=3C'0'          ZEROIZE
         LA    R8,L'NUMSTORE            MAX NO OF WAIT TIME DIGITS
         SR    R11,R11                  ZEROIZE
NUMSCAN  EQU   *
         CLI   0(R7),SPACE              END OF VALUE?
         BE    NUMEND                   YES-
         CLI   0(R7),C'0'               < 0?
         BL    INVWAIT                  YES-
         CLI   0(R7),C'9'               < 9?
         BH    INVWAIT                  YES-
         LA    R7,1(,R7)                NEXT BYTE
         LA    R11,1(,R11)              NO OF BYTES SO FAR SCANNED
         BCT   R8,NUMSCAN               DO WHILE R8 > 0?
         CLI   0(R7),SPACE              SPACE AT END OF VALUE?
         BNE   INVWAIT                  NO- ERROR IN FORMAT
NUMEND   EQU   *
         SR    R7,R11                   RESET TO BEGINNING OF VALUE
         LA    R8,NUMSTORE+L'NUMSTORE   POINT PASS VALUE
         SR    R8,R11                   POSITION TO MOVE TO
         BCTR  R11,0                    -1 FOR MVC
         EX    R11,NUMMVC               MOVE VALUE TO NUMSTORE
         PACK  DW,NUMSTORE              PACK IT
         CVB   R9,DW                    LET'S CONVERT IT TO BINARY
         M     R8,=F'100'               GET INTO 1/100 OF A SECOND
         STCM  R9,B'1111',WAITTIME      WAITTIME FOR STIMER
         STIMER WAIT,BINTVL=WAITTIME    LET'S WAIT
         BR    R2                       RETURN TO CALLER
NOWAIT   EQU   *
         MVC   WTOAREA(WTONWLEN),WTONWAIT MESSAGE
         LA    R1,WTOAREA               WTO MESSAGE AREA ADDRESS
         WTO   MF=(E,(R1))              ISSUE WTO
         BR    R2                       KEEP READING
INVWAIT  EQU   *
         MVC   WTOAREA(WTOINLEN),WTOIWAIT MESSAGE
         LA    R1,WTOAREA               WTO MESSAGE AREA ADDRESS
         WTO   MF=(E,(R1))              ISSUE WTO
         BR    R2                       KEEP READING
         TITLE 'CLOSE THE FILES'
CLOSE    EQU   *
         MVC   MDESETX,MDESETL2         MOVE FOR EXECUTE FORM
         MODESET MF=(E,MDESETX)         PROB STATE KEY 8
         LA    R0,CLOSEARA              @ CLOSE PARAMETER LIST
         LA    R1,CLOSELEN              CLOSE PARAMETER LIST LENGTH
         LA    R14,CLOSELST             MAKE CLOSE PARAMETER
         LR    R15,R1                   LIST RE-ENTRANT
         MVCL  R0,R14                   MOVE LONG
         CLOSE (COMMSDCB),MF=(E,CLOSEARA)
         B    RETURN                    RETURN TO THE INITIATOR
         TITLE 'ERROR ABENDS'
SAERROR  EQU   *
         ABEND 001,DUMP
OPNERR1  EQU   *
         ABEND 002,DUMP
FREEERR  EQU   *
         ABEND 003,DUMP
         TITLE 'FREEMAIN AND RETURN TO THE INITIATOR'
RETURN   EQU   *
         LR    R1,R13                   FREEMAIN ADDRESS
         L     R13,PREVSA               ADDRESS OF THE PREVIOUS SA
         FREEMAIN RC,LV=WORKLEN,A=(1),SP=0,                            X
               RELATED=(GETSA,'GET SA STORAGE')
         LTR   R15,R15                  FREEMAIN OK?
         BNZ   FREEERR                  NO-
         RETURN (14,12),,RC=0           RETURN TO THE INITIATOR
         TITLE 'STANDALONE INSTRUCTIONS'
COMPCMD  CLC   IOAREA(*-*),COMMAND      COMPARE FOR = COMMAND
STCMVE   MVC   STC(*-*),0(R8)           MOVE STC NAME TO SVC 34 AREA
MODFYMVE MVC   STC(*-*),0(R8)           MOVE MODIFY INFO
CMDMVE   MVC   SVC34CMD(*-*),0(R8)      MOVE COMMAND TO SVC 34 AREA
JESCOMP  CLC   1(*-*,R7),JES2CMD        CHECK FOR JES2 COMMAND
NUMMVC   MVC   0(*-*,R8),0(R7)          MOVE NUMERIC WAIT TIME
         LTORG
LOWZERO  DC    X'00'                    LOW ZERO
STARTC   DC    CL2'S '                  START COMMAND
CALL     CALL  ,(,),VL,MF=L             CALL PARAMETER LIST
CALLLEN  EQU   *-CALL                   ALL PARAMETER LIST LEN
OPENLST  OPEN (CMDDCB1,(INPUT)),MF=L
OPENLLEN EQU   *-OPENLST                OPEN PARAMETER LIST LENGTH
CLOSELST CLOSE (CMDDCB1),MF=L CLOSE PARAMETER LIST
CLOSELEN EQU   *-CLOSELST               CLOSE PARAMETER LIST LENGTH
MDESETL1 MODESET KEY=ZERO,MODE=SUP,MF=L LIST FORM OF MODESET
MSETLEN  EQU   *-MDESETL1               LENGTH OF PARAMETER LIST
MDESETL2 MODESET KEY=NZERO,MODE=PROB,MF=L  LIST FORM OF MODESET
WTO34ERR WTO   'TP001 COMMAND INVALID - XXXXXXXXXXXXXXXXXXXX - PLEASE IX
               NFORM TSD',ROUTCDE=(2),DESC=(11),MF=L
WTOSVCLN EQU   *-WTO34ERR              LENGTH OF WTO PARAMETER LIST
WTOINPER WTO   'TP002 NO STC SPECIFIED - PLEASE INFORM TSD',ROUTCDE=(2)X
               ,DESC=(11),MF=L
WTOIERLN EQU   *-WTOINPER              LENGTH OF WTO PARAMETER LIST
WTONWAIT WTO   'TP003 NO WAIT TIME SPECIFIED - PLEASE INFORM TSD',ROUTCX
               DE=(2),DESC=(11),MF=L
WTONWLEN EQU   *-WTONWAIT              LENGTH OF WTO PARAMETER LIST
WTOIWAIT WTO   'TP004 INVALID WAIT TIME FORMAT - PLEASE INFORM TSD',ROUX
               TCDE=(2),DESC=(11),MF=L
WTOINLEN EQU   *-WTOIWAIT              LENGTH OF WTO PARAMETER LIST
*************************COMMANDS TABLE********************************
COMMTAB  DS    0XL1
         DC    AL1(1),AL4(START),AL1(10),CL2'S ',CL2'S '
         DC    AL1(5),AL4(START),AL1(14),CL2'S ',CL6'START '
         DC    AL1(1),AL4(STOP),AL1(10),CL2'P ',CL2'P '
         DC    AL1(4),AL4(STOP),AL1(13),CL2'P ',CL5'STOP '
         DC    AL1(1),AL4(MODIFY),AL1(10),CL2'F ',CL2'F '
         DC    AL1(6),AL4(MODIFY),AL1(15),CL2'F ',CL7'MODIFY '
         DC    AL1(1),AL4(WAIT),AL1(10),CL2'W',CL2'W='
         DC    AL1(4),AL4(WAIT),AL1(13),CL2'W',CL5'WAIT='
         DC    AL1(255)
COMMNENT EQU   9
**********************JES2 BYPASS TABLE********************************
JESBYPST DS    0XL1
         DC    AL1(4),AL1(1),CL2'SN'
         DC    AL1(6),AL1(3),CL4'SLNE'
         DC    AL1(6),AL1(3),CL4'SLGN'
         DC    AL1(255)
JESNOENT EQU   4
******************** COMMANDS DCB *************************************
CMDDCB1  DCB   DSORG=PS,DEVD=DA,MACRF=(GM),DDNAME=COMMANDS,EODAD=CLOSE
COMMDLEN EQU   *-CMDDCB1
*************************STORAGE ITEMS*********************************
WORKAREA DSECT
SAVEAREA DC    18F'0'                  REGISTER SAVEAREA
DW       DS    D                       DOUBLEWORD
TESTRES  DS    X                       TEST RES INDICATOR
JESTCOMC DS    C                       HASP COMMAND CHARACTER
NUMSTORE DS    CL3                     NUMERIC STORE AREA
PACKWAIT DS    PL2                     PACKED WAIT TIME
WAITTIME DS    XL4                     WAITTIME IN 1/100 OF A SECOND
IOAREA   DS    CL80                    I/O AREA
COMMENT  EQU   IOAREA,1                COMMENT CARD
PREVSA   EQU   SAVEAREA+4,4            PREVIOUS SAVEAREA
CALLPARM DS    XL(CALLLEN)             CALL PARAMETER LIST
COMMSDCB DS    XL(COMMDLEN)            COMMANDS DCB LEN
OPENARA  DS    XL(OPENLLEN)            OPEN PARAMETER LIST
CLOSEARA DS    XL(CLOSELEN)            CLOSE PARAMETER LIST
         DS    0F                      ALIGNMENT
MDESETX  DS    XL(MSETLEN)             MODESET EXECUTE FORM
         DS    0F                      ALIGNMENT
WTOAREA  DS    XL(WTOSVCLN)            WTO LENGTH
INVCOM   EQU   WTOAREA+28,20           INVALID COMMAND
CMDAREA  DS    0F                      ALIGNMENT
CMDLEN   DS    AL2                     SVC 34 LENGTH
FLAGS    DS    AL2                     FLAGS
SVC34CMD DS    CL80                    NJE COMMAND
SLACK    DS    CL35                    SLACK BYTES
MGCRDATA DS    0XL21                   INTERNAL START AREA
FLAG1    DS    XL1                     FLAG1
LENGTH   DS    AL1                     INTERNAL START AREA LENGTH
FLAG2    DS    XL2                     FLAG2
STARTEXT DS    CL80                    START COMMAND AREA
SCMD     EQU   STARTEXT,2              START TEXT
STC      EQU   STARTEXT+2,78           STARTED TASK + PARMS
TOKEN    EQU   *                       END OF INTERNAL START AREA
WORKLEN  EQU   *-WORKAREA              WORK AREA LENGTH
COMTDSCT DSECT                         COMMAND TABLE DSECT
COMMLEN  DS    AL1                     COMMAND LENGTH
COMMRTNE DS    AL4                     COMMAND ROUTINE @
COMMTELN DS    AL1                     COMMAND TABLE ENTRY LENGTH
COMSHORT DS    XL2                     SHORT FORM OF THE COMMAND
COMMAND  DS    X                       THE COMMAND
JESBDSCT DSECT                         JES2 BYPASS TABLE
JTBENTLN DS    AL1                     TABLE ENTRY LENGTH
JCOMLEN  DS    AL1                     COMMAND LENGTH
JES2CMD  DS    X                       THE COMMAND
         DCBD  DSORG=(QS),DEVD=DA      DCB DSECT
         IHAPSA DSECT=YES,LIST=NO      PSA MAPPING MACRO
         CVT DSECT=YES,LIST=NO         CVT MAPPING MACRO
         IEFJSCVT                      SSCT MAPPING MACRO
         IEFJESCT TYPE=DSECT           JES CONTROL TABLE MAPPING MACRO
         $XECB                         HASP XECB
         $SCAT                         HASP SCAT
         $HFAME                        HASP HFAME
         $SVT                          HASP SUBSYSTEM VECTOR TABLE
UCB      DSECT                         UCB DSECT
         IEFUCBOB LIST=NO,PREFIX=NO
         END   CMDUTIL


R F Perretta
Systems Consultant (UK)                              c Xephon 1993

