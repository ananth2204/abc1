CLIST for formatting and aligning JCL

Coding JCL statements is not an easy task.  There are many
syntax rules that you need to know and follow.  Also, if you do
not use some kind of standard format, JCL can be difficult to
read.

The FIXJCL CLIST is used as an ISPF macro during the edit
process.  After you have finished entering the JCL, enter the
FIXJCL command on the command line.  This CLIST will
format your file, putting any continuations in the proper
columns, and aligning DDs and other JCL in a very readable
format.  Comment cards beginning with '//*' are ignored as
well as any SYSIN data.  In fact, only those statements starting
with '//' are processed at all.

If you only want to process part of your JCL, and not the entire
file, follow these easy steps.

1      Mark the lines to be processed with a line command, ie
      'JJ' on the first line to process and another 'JJ' on the last
      line to process.  If you are only processing one line, just
      mark it with a single 'J'.

2      Enter the FIXJCL command on the command line.

3      Press ENTER.

ISREDIT MACRO NOPROCESS
/* CONTROL LIST SYMLIST CONLIST
/* PRESERVE CONTINUATION CHARACTERS IN 72
       ISREDIT PROCESS RANGE J
       IF &LASTCC = 0 THEN +
           DO
             ISREDIT (RCMD) = RANGE_CMD
             ISREDIT (JZF) = LINENUM .ZFRANGE
             ISREDIT (JZL) = LINENUM .ZLRANGE
           END
       ELSE +
           DO
             ISREDIT (JZF) = LINENUM .ZFIRST
             ISREDIT (JZL) = LINENUM .ZLAST
           END
       ISREDIT LABEL &JZF = .JZF
       ISREDIT LABEL &JZL = .JZL
       SET &LJZF = &STR(.JZF)
       SET &LJZL = &STR(.JZL)
       IF  &JZF  = &JZL THEN SET &LJZF = &STR(.JZL)
/*                                                        &LJZF &LJZL
/*     WRITE JZF = &JZF   JZL = &JZL   LJZF = &LJZF   LJZL = &LJZL
/*     ISREDIT X ALL  &LJZF &LJZL
/* ISREDIT MEND
 /*EXIT
       ISREDIT (CL,CR) = CURSOR
       ISREDIT (LB,RB) = BOUNDS
       ISREDIT BOUNDS    = 1 71
       ISREDIT X ALL
       ISREDIT F '//'  1 ALL &LJZF &LJZL
       ISREDIT X '//*' 1 ALL &LJZF &LJZL
       ISREDIT X '/*'  1 ALL &LJZF &LJZL
/* REMOVE EXTRA SPACES
       ISREDIT C ' ' '{'      3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{{{{{{' '{' 3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{{{{{{' '{' 3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{{{{{' '{'  3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{{{{' '{'   3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{{{' '{'    3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{{' '{'     3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{{' '{'     3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{{' '{'     3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{{' '{'     3 71 ALL NX  &LJZF &LJZL
       ISREDIT C '{' ' '      3 71 ALL NX  &LJZF &LJZL
/* JOB, PROC, EXEC, AND PEND CONVERSION
    SET &KEYWD = &STR(JOB)
    DO WHILE &KEYWD NE &STR()
       ISREDIT X ALL
       ISREDIT F ' &STR(&KEYWD) ' 3 25 ALL                &LJZF &LJZL
       SET &RC = &LASTCC
       IF &RC > 0 THEN GOTO CKKEYWD
       ISREDIT X '//*' 1 ALL                              &LJZF &LJZL
       ISREDIT C ' &STR(&KEYWD) ' '{&STR(&KEYWD)}' ALL NX &LJZF &LJZL
       ISREDIT C '{' '{{'  3 25 ALL NX                    &LJZF &LJZL
       ISREDIT C '}' '}}'  3 40 ALL NX                    &LJZF &LJZL
       ISREDIT C '{' '{{'  3 25 ALL NX                    &LJZF &LJZL
       ISREDIT C '}' '}}'  3 40 ALL NX                    &LJZF &LJZL
       ISREDIT C '{' '{{'  3 25 ALL NX                    &LJZF &LJZL
       ISREDIT C '}' '}}'  3 40 ALL NX                    &LJZF &LJZL
       ISREDIT C '{' '{{'  3 25 ALL NX                    &LJZF &LJZL
       ISREDIT C '{&STR(&KEYWD)}' '_&STR(&KEYWD)_' ALL NX &LJZF &LJZL
       ISREDIT C ' ' '¬'        ALL NX                    &LJZF &LJZL
       ISREDIT C '{' ' '   3 12 ALL NX                    &LJZF &LJZL
       ISREDIT C '{' ''         ALL NX                    &LJZF &LJZL
       ISREDIT C '}¬' '}'       ALL NX                    &LJZF &LJZL
       ISREDIT C '}' ' '  14 19 ALL NX                    &LJZF &LJZL
       ISREDIT C '}' ''         ALL NX                    &LJZF &LJZL
       ISREDIT C '_&STR(&KEYWD)_' ' &STR(&KEYWD) ' ALL    &LJZF &LJZL
       ISREDIT C '¬' ' '        ALL NX                    &LJZF &LJZL
CKKEYWD: SET &RC = 0
       IF &KEYWD = &STR(PEND) THEN SET &KEYWD = &STR()
       IF &KEYWD = &STR(EXEC) THEN SET &KEYWD = &STR(PEND)
       IF &KEYWD = &STR(PROC) THEN SET &KEYWD = &STR(EXEC)
       IF &KEYWD = &STR(JOB)  THEN SET &KEYWD = &STR(PROC)
    END
/* DD CONVERSION
       ISREDIT F ' DD ' 3 30 ALL                          &LJZF &LJZL
       SET &RC = &LASTCC
       IF &RC > 0 THEN GOTO FIXCONT
       ISREDIT X '//*' 1 ALL                              &LJZF &LJZL
       ISREDIT C ' DD ' '{DD}' ALL NX                     &LJZF &LJZL
       ISREDIT C '{' '{{'  3 20 ALL NX                    &LJZF &LJZL
       ISREDIT C '}' '}}'  3 30 ALL NX                    &LJZF &LJZL
       ISREDIT C '{' '{{'  3 20 ALL NX                    &LJZF &LJZL
       ISREDIT C '}' '}}'  3 30 ALL NX                    &LJZF &LJZL
       ISREDIT C '{' '{{'  3 20 ALL NX                    &LJZF &LJZL
       ISREDIT C '}' '}}'  3 30 ALL NX                    &LJZF &LJZL
       ISREDIT C '{' '{{'  3 20 ALL NX                    &LJZF &LJZL
       ISREDIT C '{DD}' '_DD_'  ALL NX                    &LJZF &LJZL
       ISREDIT C ' ' '¬'        ALL NX                    &LJZF &LJZL
       ISREDIT C '{' ' '   3 13 ALL NX                    &LJZF &LJZL
       ISREDIT C '{' ''         ALL NX                    &LJZF &LJZL
       ISREDIT C '}¬' '}' 20 70 ALL NX                    &LJZF &LJZL
       ISREDIT C '}' ' '  14 19 ALL NX                    &LJZF &LJZL
       ISREDIT C '}' ''   20 70 ALL NX                    &LJZF &LJZL
       ISREDIT C '_DD_' ' DD '  ALL                       &LJZF &LJZL
       ISREDIT C '¬' ' '        ALL NX                    &LJZF &LJZL
       ISREDIT C ' DD  ' '  DD ' 11 ALL NX                &LJZF &LJZL
       ISREDIT C ' DD  ' '  DD ' 12 ALL NX                &LJZF &LJZL
       ISREDIT C ' DD  ' '  DD ' 13 ALL NX                &LJZF &LJZL
/* EXIT CODE(0)
/* CONTINUATION CARD CONVERSION
FIXCONT: SET &RC = 0
       ISREDIT X ALL
       ISREDIT F '// '  1 ALL                             &LJZF &LJZL
       SET &RC = &LASTCC
       IF &RC > 0 THEN GOTO RESET
       ISREDIT X ' EXEC ' 3 20 ALL                        &LJZF &LJZL
       ISREDIT X ' DD '   3 20 ALL                        &LJZF &LJZL
       ISREDIT X ' PEND ' 3 20 ALL                        &LJZF &LJZL
       ISREDIT C ' ' '}'  3 ALL NX                        &LJZF &LJZL
       ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
       ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
       ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
       ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
       ISREDIT C '}' '}}' 3 25 ALL NX                     &LJZF &LJZL
       ISREDIT C ' ' '¬'  3 70 ALL NX                     &LJZF &LJZL
       ISREDIT C '}¬' '}' 3 70 ALL NX                     &LJZF &LJZL
       ISREDIT C '}' ' '  3 15 ALL NX                     &LJZF &LJZL
       ISREDIT C '}' ''        ALL NX                     &LJZF &LJZL
       ISREDIT C '¬' ' '       ALL NX                     &LJZF &LJZL
       ISREDIT BOUNDS =  &LB &RB
       ISREDIT LEFT MAX
RESET: SET &RC = 0
       ISREDIT RESET
       ISREDIT CURSOR = &CL &CR
     EXIT CODE(&RC)


Paul Jespersen
Systems Programmer
Gulf States Toyota (USA)                                      c Xephon 1990

