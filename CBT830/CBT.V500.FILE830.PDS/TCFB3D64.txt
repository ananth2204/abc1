TSO/E IDTF electronic mail customisation

Many sites are now using the TSO/E Interactive Data Transfer Facility
(IDTF) for electronic mail and file transfer.  However, some
customisation will make this feature more friendly.  Firstly, code a
JES2 exit 13 to notify users of the arrival of IDTF mail from external
nodes; the source is given in the JES2 User Modifications and Macros
manual.  Secondly, code IDTF exit INMXZ02 to notify users of the arrival
of mail from the same node; the source is given below.  Lastly, code
CONTROL PROMPT and RECEIVE in the user's log-on CLIST to alert the user
of mail waiting for him to receive.

Both the exits mentioned can be used to check for the destination
user-id to prevent unwanted IDTF data wasting spool space.  SDSF or the
command RECEIVE with the USERID operand can be used to clear unwanted
IDTF files.  Some sites may not have noticed that IBM supplies a help
file called NICKNAME even though there is not a command of this name;
this file contains information on the format of the names file, which
can be used to personalise IDTF mail options.  Another requirement might
be to allow a user to receive another user's mail; this is normally not
allowed except for OPER privileged users.  The exit INMRZ01 as supplied
below can be used to test the contents of the USERID operand on the
RECEIVE command and decide if the user issuing the command is allowed to
receive mail for the named user.  The exit shown tests an ACF2 dataset
rule of userid.NETMAIL, where userid is the one named on the operand.
This allows a dataset rule to be defined permitting the receive access
where required.  This exit also allows receives to be performed from a
batch job.  RACF users can adapt the exit to test a RACF profile
instead.

SOURCE OF EXIT INMXZ02

*** THIS PERFORMS A SAME-NODE NOTIFY FOR TSO/E IDTF.
*   THIS EXIT RECEIVES CONTROL DURING TRANSMIT PROCESSING AND IN THIS
*   CASE WILL ISSUE A CROSS MEMORY TPUT IF THE DEST NODE IS ABCNODE TO
*   NOTIFY THE RECEIVER(S) OF INCOMING MAIL. THE CODE COULD BE CHANGED
*   TO ISSUE AN OPERATOR SEND COMMAND IF PREFERRED SINCE IT IS INVOKED
*   AUTHORISED. THIS WOULD ENABLE THE MESSAGE TO BE RETAINED IN THE
*   BROADCAST DATASET.
*   MUST BE REENTRANT. CHANGE THE NODE NAMES TO MATCH YOUR SITE,
*** INCLUDE EXTRA CHECKS FOR ANY DESTID NAMES FOR THE NODE AS WELL.
INMXZ02  CSECT
         STM   R14,R12,12(R13)   SAVE REGISTERS
         BALR  R12,0             ADDRESSABILITY
         USING START,R12
START    LR    R2,R1             R2 -> PARM LIST
         L     R0,SIZDATD        R0 = SIZE OF DYNAMIC AREA
         GETMAIN R,LV=(0)        GETMAIN DYNAMIC AREA
         LR    R11,R1            R11 -> DYNAMIC AREA
         USING DATD,R11          ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLERS SAVEAREA ADDRESS
         ST    R11,8(R13)        SAVE OUR     SAVEAREA ADDRESS
         LR    R13,R11           R13 -> SAVEAREA
         L     R4,12(R2)         POINT TO CPPL
         L     R4,8(R4)          POINT TO PSCB
         MVC   USERID,0(R4)      SAVE SENDERS USERID
         L     R5,32(R2)         POINT TO XMIT PARAMETERS
LOOP     CLC   6(8,R5),=C'ABCNODE '      CHECK NODE NAMES FOR THIS
         BE    NOTIFY                    (OUR) NODE (N1/ABCNODE)
         CLC   6(8,R5),=C'N1      '
         BNE   NEXT                      SKIP IF NOT OURS
         B     NOTIFY
NEXT     CLC   0(4,R5),=F'0'             CHECK FOR MORE ADDRESSES
         BE    ALLDONE                   NO MORE? THEN EXIT
         L     R5,0(R5)                  MORE. GET ADDRESS OF NEXT
         B     LOOP                      LOOK AT NEXT ADDRESSEE
NOTIFY   MVC   PERSON,16(R5)             MOVE USERID OF ADDRESSEE
         MVC   NMSG,TEXT                 MOVE TEXT TO MSG AREA
         MVC   NMSG+41(7),USERID         MOVE USERID INTO MSG
         TPUT  NMSG,L'NMSG,EDIT,WAIT,NOHOLD,NOBREAK,HIGHP,            X
                USERIDL=PERSON           SEND USER NOTIFICATION
         B     NEXT                      CHECK FOR MORE
ALLDONE  XR    R3,R3                     RET CODE TO ZERO
RETURN   L     R13,SAVEAREA+4    RESTORE R13
         L     R0,SIZDATD        R0 = DYNAMIC AREA SIZE
         LR    R1,R11            R1 -> DYNAMIC AREA ADDRESS
         FREEMAIN R,LV=(0),A=(1)  FREE DYNAMIC AREA
         LR    R15,R3            RETURN CODE TO R15
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 TO R12
         BR    R14               RETURN
         LTORG
TEXT     DC    CL41'ABCxmit - IDTF mail from userid ABCNODE.'
         DC    CL31'          has been sent to you'
DATA     DS    0F
SIZDATD  DC    AL1(0)            DYNAMIC AREA SIZE
         DC    AL3(ENDDATD-DATD)
DATD     DSECT
SAVEAREA DS    18F
USERID   DS    CL7
PERSON   DS    CL8
NMSG     DS    CL71
ENDDATD  EQU   *
         END   INMXZ02
/*
//LKED.SYSLMOD DD DSN=XXXX.LINKLIB(INMXZ02),DISP=SHR
//*
//APPLY   EXEC IPOSMPE
//SMPPTFIN DD  *
++ USERMOD     (ABC0012) .
++ VER         (Z038) FMID(JBB2215) /* MODULE INMXZ02
               INTERACTIVE DATA TRANSMISSION FACILITY */  .
++ MOD         (INMXZ02) DISTLIB (AOST4) LKLIB (XXXLINK) .
/*
//SMPEIN   DD  *
  SET      BDY (GLOBAL).
  RECEIVE  SYSMODS.
  SET      BDY(M215TAA) .
  APPLY    S(ABC0012) BYPASS(ID).
  LIST     SYSMOD(ABC0012) .
/*
//XXXLINK  DD  DSN=XXXX.LINKLIB,DISP=SHR

SOURCE OF EXIT INMRZ01

*** THIS EXIT WILL TEST AN ACF2 RULE OF "USERID.NETMAIL" WHERE
*   USERID IS THE USERID OF THE MAIL REQUESTED. ALLOC ACCESS TESTED.
*   THIS WILL ALLOW USERS TO RECEIVE OTHER USERS MAIL IF NECESSARY.
*   MUST BE REENTRANT. NOTE THAT THIS TEST WILL ALWAYS OCCUR SINCE
*   EVEN WHEN THE USERID OPERAND IS NOT SPECIFIED IBM MOVE THE
*   DEFAULT USERID INTO THE CONTROL BLOCK, EXCEPT IN BATCH WHEN
*** THE DEFAULT IS BLANK (CONVERTED TO BATCHTSO HERE).
INMRZ01  CSECT
         STM   R14,R12,12(R13)   SAVE REGISTERS
         BALR  R12,0             ADDRESSABILITY
         USING START,R12
START    LR    R2,R1             R2 -> PARM LIST
         L     R0,SIZDATD        R0 = SIZE OF DYNAMIC AREA
         GETMAIN R,LV=(0)        GETMAIN DYNAMIC AREA
         LR    R11,R1            R11 -> DYNAMIC AREA
         USING DATD,R11          ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLERS SAVEAREA ADDRESS
         ST    R11,8(R13)        SAVE OUR     SAVEAREA ADDRESS
         LR    R13,R11           R13 -> SAVEAREA
         L     R4,28(R2)        POINT TO REQUESTED USERID
         MVC   USERID,BLANKS    BLANK USERID FIELD
         MVC   USERID(8),0(R4)  STORE 8 CHARS
         CLC   USERID(8),BLANKS IS IT BLANK? (BATCH NO USERID OPERAND)
         BNE   OK
         MVC   USERID(8),=C'BATCHTSO'  DUMMY USERID IF BLANK IN BATCH
** ACF2 SPECIFIC SECTION STARTS
OK       XC    ACFSPARM(ACFSPRML),ACFSPARM    CLEAR ACF2 PARMLIST
         MVI   ACFSPAC1,ACFSPAOT              ALLOC ACCESS
**   CONSTRUCT A DATASET NAME OF "USERID.NETMAIL" FOR THE JOB
         MVC   DATASET,BLANKS                 CLEAR DATASET NAME
         MVC   DATASET(8),USERID              SET HIGH PART OF DSNAME
         LA    R5,10                          MAX LOOP
         LA    R6,DATASET                     POINT TO DATASET NAME
LOOP     CLI   0(R6),C' '                     IS IT BLANK?
         BE    FOUND                          FOUND END OF USERID
         LA    R6,1(R6)                       ELSE INCREMENT
         BCT   R5,LOOP                        AND KEEP LOOKING
         WTO   'LOGIC ERROR IN EXIT INMRZ01'  BAD USERID DATA??
         LA    R3,4
         B     RETURN
NACF     WTO   'ACF2 CVT NOT AVAIL. INMRZ01'  BAD ACF2   DATA
         LA    R3,4
         B     RETURN
FOUND    MVC   0(8,R6),NETMAIL                SET .NETMAIL NAME
**   PREPARE THE ACF2 PARAMETER LIST AREA
         MVI   ACFSPREQ,ACFSPRDS      INDICATE DSNAME CALL
         MVI   ACFSPID1,ACFSPIUR      INDICATE USER CALL
         LA    R1,DATASET             GET ADDRESS OF DATASET NAME
         ST    R1,ACFSPDSN            PUT IN ACF2 PARMLIST
         ACFGACVT R7,NONE=NACF        GET ACF2 CVT ADDRESS
         USING ACCVT,R7               ADDRES ACF2 CVT
         LA    R1,ACFSPARM            POINT TO ACF2 PARMLIST
         ACFSVC (1),TYPE=S,NONE=NACF,CVT=HAVE
** END OF ACF2 SPECIFIC SECTION
         LR    R6,R15                 SAVE RETURN CODE
         LTR   R6,R6                  TEST RETURN CODE
         BNZ   NOTALLOW               ACCESS NOT ALLOWED
ALLOW    L     R4,8(R2)               POINT TO FLAG BYTE
         OI    0(R4),B'00001000'      SAY ALLOW
         B     OUT
NOTALLOW L     R4,8(R2)               POINT TO FLAG BYTE
         OI    0(R4),B'00000100'      SAY DISALLOW
         B     OUT
OUT      XR    R3,R3                  RET CODE TO ZERO
RETURN   L     R13,SAVEAREA+4    RESTORE R13
         L     R0,SIZDATD        R0 = DYNAMIC AREA SIZE
         LR    R1,R11            R1 -> DYNAMIC AREA ADDRESS
         FREEMAIN R,LV=(0),A=(1) FREE DYNAMIC AREA
         LR    R15,R3            RETURN CODE TO R15
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 TO R12
         BR    R14               RETURN
         LTORG
BLANK    DC    CL44' '           BLANKS
NETMAIL  DC    C'.NETMAIL'       DATASET NAME QUALIFIER
DATA     DS    0F
SIZDATD  DC    AL1(0)            DYNAMIC AREA SIZE
         DC    AL3(ENDDATD-DATD)
DATD     DSECT
SAVEAREA DS    18F
USERID   DS    CL9
         ACDSV DSECT=NO             ACF2 PARAMETER LIST
DATASET  DS    CL44                 DATASET NAME
BUFF     DS    44C
ENDDATD  EQU   *
         ACCVT                      ACF2 CVT MAP
         ACUCB                      ACF2 ACUCB MAP
         END  INMRZ01

Use a similar SMP usermod construction as that shown for INMXZ02 to
install this exit into the RECEIVE command.

Peter Toogood
Systems Programmer (UK)   â‚¬ Xephon 1988




