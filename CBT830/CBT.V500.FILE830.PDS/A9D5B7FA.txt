Password quality control with RACF 1.9

The principal means of controlling access to an MVS system
that has RACF installed is the user's password. It is therefore
important that a high degree of quality control is imposed to
prevent users choosing passwords that are easy to guess by
others with malicious intent.

It is possible to use the SETROPTS command to define the
minimum password length and to a limited extent restrict the
content, but these 'rules' cannot prevent many obvious
passwords from being used which are easy to predict; for
example, those including month names.

IBM provides the RACF exit ICHPWX01 to use for this
purpose and the example shown below performs several
checks. It ensures that the password does not start with the
user-id or the user's name and that it is not made up of all the
same character.

In addition, it uses the new RACF variable feature of Version
1.9 to allow the installation to define a list of passwords that
are specifically prohibited and to maintain this list without
changing the exit code. A RACHECK is made (without
logging) on a resource name (containing the password entered)
in the FACILITY class.

A profile is defined in the FACILITY class as
'INST.PASSWORD.&INVPASS' and &INVPASS is itself
defined as a RACFVARS profile containing, as members, any
specific passwords to be considered invalid. If the RACHECK
fails access this means that the password was listed and will be
prohibited. It is also possible to use generic characters in the
member names.

For those new to RACFVARS, it will help to imagine profiles
existing in the FACILITY class for each and every member of
the RACFVARS profile &INVPASS. In fact the variable is not
actually substituted but looked up dynamically during
RACHECK processing, which is why the RACFVARS class
needs to be RACLISTed before it can be used.

The UACC should be set to 'NONE' for the
'INST.PASSWORD.&INVPASS' profile so that the passwords
will be considered prohibited when the access is denied. To log
the password denial, a second RACHECK is issued with a
resource name of 'INST.LOGGING.BADPASS' (with logging
enabled).

Because the ICHPWX01 exit can be called before the user-id
has been initialized during RACINIT, this exit itself has to
issue RACINIT if no ACEE is available. Note that this exit is
effective for RACINITs (log-ons) and also the
ALTUSER/PASSWORD TSO commands.

When using this, it is necessary to activate and RACLIST the
class RACFVARS and it is also advisable to RACLIST the
FACILITY class. But it is possible to change the FACILITY
class to any other installation-defined class name if you don't
want to RACLIST the FACILITY class.

Because of the generic masking capability of RACF profiles it
will be possible for the installation to implement
comprehensive and flexible restrictions on password content
using this method. This will help reduce the exposure of
relying solely on passwords for authentication.


EXIT ICHPWX01

***********************************************************************
* MODULE : ICHPWX01, REENTRANT, AUTHORIZED, SYS1.LPALIB
* RACF NEW PASSWORD EXIT.
* USED TO ENFORCE PASSWORD CHANGE RESTRICTIONS.
* THIS EXIT IS CALLED FOR:
* 1. NEW PASSWORD ON RACINIT (LOGON)
* 2. ALTUSER COMMAND WITH PASSWORD OPERAND
* 3. PASSWORD COMMAND
* IT CHECKS FOR INVALID PASSWORDS WITH A RACROUTE REQUEST=AUTH
* USING THE RACF VARIABLE FACILITY TO EXCLUDE CERTAIN PASSWORDS,
* ADMINISTRATORS CAN ADD MEMBERS TO THE RACF VARIABLE CALLED
* RACFVARS &INVPASS TO LIST ANY PASSWORDS THAT ARE NOT ACCEPTABLE.
* ALSO PASSWORD CANNOT EQUAL OR BEGIN WITH THE USERID VALUE.
* ALSO PASSWORD CANNOT START WITH THE USER'S SURNAME (5 CHARS).
* ALSO PASSWORD CANNOT CONSIST OF ONLY THE SAME CHARACTER
* BECAUSE THE USER MAY NOT HAVE AN ACEE DURING RACINIT AN ACEE
* IS CREATED (STATS OFF) TO USE FOR THE RACHECK, THIS ALSO
* ENSURES THAT THE TARGET USER NOT THE ISSUER IS CHECKED. THE
* ACCESS LIST FOR INST.PASSWORD.&INVPASS IS ZERO SO THAT ANY
* PASSWORDS IN THE MEMBER LIST OF RACFVARS &INVPASS ARE NOT
* ALLOWED TO BE USED. NO LOGGING IS USED TO STOP THE INTENDED
* PASSWORD FROM APPEARING ON THE VIOLATION LOG.
* IF THE PASSWORD IS FAILED THEN ANOTHER RACHECK IS PERFORMED
* TO LOG THE ERROR ON RESOURCE NAME INST.LOGGING.BADPASS SO
* THAT ATTEMPTS CAN BE RECORDED FOR WHATEVER REASON AGAINST
* THE USERID CONCERNED, BUT ALTUSER COMMANDS ARE NOT LOGGED.
************************************************************
ICHPWX01 CSECT
ICHPWX01 AMODE 31
ICHPWX01 RMODE ANY
         STM   R14,R12,12(R13)   SAVE REGISTERS
         LR    R12,R15           ADDRESSABILITY
         LR    R11,R1            SAVE PARM ADDR
         USING ICHPWX01,R12
         GETMAIN R,LV=WORKLEN    GETMAIN DYNAMIC AREA
         LR    R10,R1            R10 -> DYNAMIC AREA
         USING WORKAREA,R10      ADDRESS DYNAMIC AREA
         ST    R13,SAVEAREA+4    SAVE CALLER'S SAVEAREA ADDRESS
         ST    R10,8(R13)        SAVE SAVEAREA ADDRESS
         LR    R13,R10           SAVE AREA PTR
* ADDRESS PARAMETER LIST, SET DEFAULT RC
         USING PWXPL,R11         ADDR PARM LIST
         MVC   RETC,ZEROS        DEFAULT ZERO RC
* CHECK CALL TYPE AND PROCESS
         L     R1,PWXCALLR       LOAD ADDR OF FLAG BYTE
         CLI   0(R1),PWXRINIT    IS IT RACINIT CALL
         BE    PASSC             YES
         CLI   0(R1),PWXPWORD    IS IT PASSWORD CALL?
         BE    PASSC             YES
         CLI   0(R1),PWXALTUS    IS IT ALU CMD CALL?
         BE    PASSC             YES
         B     EXIT              OTHERS (?)
* CHECK PASSWORD SUPPLIED AND IN CLEAR, COPY TO WORK AREA
PASSC    EQU   *
         L     R1,PWXFLAG        LOAD ADDR OF FLAG BYTE
         CLI   0(R1),PWXETEXT    ENCRYPTED PASSWORD
         BE    EXIT              YES, ALLOW
         MVC   RPASS,BLANKS      CLEAR NEW PASS
         L     R6,PWXNEWPW       NEW PASS PTR
         LTR   R6,R6             CHECK
         BZ    EXIT              NO NEW PASSWORD
         XR    R7,R7             CLEAR LEN
         IC    R7,0(R6)          LOAD LEN OF NEW PASS
         LTR   R7,R7             TEST LEN
         BZ    EXIT              NO NEW PASSWORD
         STC   R7,RPLEN          SAVE LENGTH
         BCTR  R7,0              DOWN FOR EX
         EX    R7,MOVENEW        MOVE NEW PASS TO RPASS
* CHECK USERID SUPPLIED, COPY TO WORK AREA
         MVC   RUSER,BLANKS      CLEAR USERID, BLANK PAD VITAL
         L     R6,PWXUSRID       USERID PTR
         LTR   R6,R6             CHECK
         BZ    EXIT              NO USERID PTR
         XR    R7,R7             CLEAR LEN
         IC    R7,0(R6)          LOAD LEN OF USERID
         LTR   R7,R7             TEST LEN
         BZ    EXIT              NO USERID
         STC   R7,RULEN          SAVE LENGTH
         BCTR  R7,0              DOWN FOR EX
         EX    R7,MOVEUSR        MOVE USERID TO RUSER
* USE CURRENT ACEE (COMMAND ISSUER) IF AVAILABLE.
         L     R1,PWXCALLR       LOAD ADDR OF FLAG BYTE
         CLI   0(R1),PWXRINIT    IS IT RACINIT CALL?
         BE    BUILD             YES, BUILD ACEE
         L     R1,PWXACEE        LOAD ADDR OF ACEE OF ISSUER
         LTR   R1,R1             IS ADDR SET?
         BZ    BUILD             NO, BUILD ONE (SHOULD NEVER OCCUR)
         ST    R1,RACEE          SAVE ACEE ADDR
         MVI   ABLD,C'N'         INDICATE NOT BUILT HERE
         B     CHECK             CONTINUE
* EXTRACT THE USER'S FLAG4 FIELD TO ENSURE NOT REVOKED.
BUILD    EQU   *
         MVI   ABLD,C'Y'         ACEE BUILT HERE
         LA    R8,RUSER          ADDR USERID FIELD
         LA    R6,RFLD1A         ADDR FIELDS TO BE OBTAINED
         LA    R9,RACWORK        RACROUTE WORK AREA
         MVC   RX8(RX8L),RX7     INITIALIZE REENTRANT AREA
         RACROUTE REQUEST=EXTRACT,WORKA=(9),RELEASE=1.8.1,             X
               TYPE=EXTRACT,FIELDS=(6),ENTITY=(8),MF=(E,RX8)
         LTR   R15,R15           TEST RACROUTE RETURN CODE
         BNZ   ERROR3            RACXTRT FAILED
* PROCESS THE RETURNED INFOMATION, LEN(4), DATA(1)
         LR    R7,R1             RETURN AREA ADDR
         XR    R4,R4             CLEAR
         IC    R4,0(R7)          SUBPOOL OF GETMAINED AREA
         XR    R5,R5             CLEAR
         ICM   R5,B'0111',1(R7)  LENGTH OF GETMAINED AREA
         LH    R6,4(R7)          OFFSET TO SEGMENT AREA
         AR    R6,R7             ADD BASE ADDR FOR SEGMENT AREA
         MVC   FLAG4,4(R6)       COPY DATABASE FLAG4 (1)
         FREEMAIN R,LV=(5),A=(7),SP=(4) FREE RACXTRT AREA
* CHECK REVOKE FLAG, EXIT IF USERID IS REVOKED AND NO PARM ACEE
         CLI   FLAG4,X'80'       REVOKED USER?
         BNE   RINIT             NO, CONT
         L     R1,PWXACEE        LOAD ADDR OF PARM ACEE
         LTR   R1,R1             IS ADDR SET?
         BZ    EXIT              NO, EXIT
         ST    R1,RACEE          SAVE ACEE ADDR
         MVI   ABLD,C'N'         INDICATE NOT BUILT HERE
         B     CHECK             CONTINUE
* RACROUTE REQUEST=VERIFY CREATE ACEE FOR THE USERID IN QUESTION
RINIT    EQU   *
         MVC   RX4(RX4L),RX3     COPY TEMPLATE
         RACROUTE REQUEST=VERIFY,WORKA=RACWORK,USERID=RULEN,           X
               ACEE=RACEE,ENVIR=CREATE,MF=(E,RX4),RELEASE=1.9,         X
               PASSCHK=NO,STAT=NO,LOG=ASIS
         L     R1,RX4+0          RETURN CODE
         LTR   R15,R15           TEST RACINIT SAF RC
         BNZ   ERROR             FAILED, LEAVE EXIT
* IF PASSWORD STARTS WITH USERID THEN SIMULATE RACHECK FAILURE
CHECK    EQU   *
         XR    R2,R2             CLEAR REG
         IC    R2,RULEN          LENGTH OF USERID
         BCTR  R2,0              LESS ONE
         EX    R2,COMPARE        COMPARE RUSER TO RPASS
         BNE   CHECK2            OK SO FAR
         LA    R15,8             PASSWORD STARTS WITH ID
         ST    R15,CHKC          SAVE RC
         B     TESTRC            AND SKIP RACHECK
* IF PASSWORD STARTS WITH USER'S SURNAME SIMULATE RACHECK FAILURE
CHECK2   EQU   *
         L     R2,RACEE          ACEE ADDR
         USING ACEE,R2           USING
         L     R3,ACEEUNAM       NAME PTR
         LTR   R3,R3             TEST
         BZ    CHECK3            NOT PRESENT
         DROP  R2                DROP
         CLC   RPASS(5),1(R3)    COMPARE RPASS TO SURNAME (FIRST 5)
         BNE   CHECK3            OK SO FAR
         LA    R15,8             PASSWORD STARTS WITH NAME (5 CHARS)
         ST    R15,CHKC          SAVE RC
         B     TESTRC            AND SKIP RACHECK
* IF PASSWORD CONSISTS OF THE SAME CHARACTER SIMULATE RACF FAILURE
CHECK3   EQU   *
         XR    R2,R2             CLEAR REG
         IC    R2,RPLEN          LENGTH OF PASSWORD
         BCTR  R2,0              LESS ONE
         LA    R3,RPASS          ADDR PASSWORD
LOOP1    EQU   *
         CLC   0(1,R3),1(R3)     COMPARE LETTER OF PASS TO NEXT
         BNE   RACCHK            DIFFERENT SO OK
         LA    R3,1(R3)          INCREMENT R3
         BCT   R2,LOOP1          LOOP FOR LEN - 1
         LA    R15,8             PASSWORD IS ALL THE SAME LETTER
         ST    R15,CHKC          SAVE RC
         B     TESTRC            AND SKIP RACHECK
* RACROUTE REQUEST=AUTH, WITH ACEE JUST CREATED, NO LOGGING
* BUILD RESOURCE NAME OF FACILITY INST.PASSWORD.XXXXXXX
RACCHK   EQU    *
         MVC   RES,BLANKS        CLEAR RESOURCE NAME
         MVC   RES(14),=CL14'INST.PASSWORD.'  START RESOURCE
         MVC   RES+14(8),RPASS   ADD PASSWORD
         MVC   RX2(RX2L),RX1     COPY TEMPLATE
         L     R2,RACEE          ACEE ADDR
         RACROUTE REQUEST=AUTH,WORKA=RACWORK,ACEE=(2),LOG=NONE,        X
               ENTITY=RES,ATTR=READ,MF=(E,RX2),RELEASE=1.9
         ST    R15,CHKC          SAVE RC
* IF RETURN CODE IS 8 (FAIL) AND NOT ALTUSER THEN LOG THIS EVENT
TESTRC   EQU   *
         L     R1,PWXCALLR       LOAD ADDR OF FLAG BYTE
         CLI   0(R1),PWXALTUS    IS IT ALU CMD CALL?
         BE    RACDEL            YES, DON'T LOG
         C     R15,=F'8'         COMPARE RC TO 8
         BNE   RACDEL            OK, DON'T LOG
* LOG THIS FAILURE FOR THE USER ATTEMPT WITH ANOTHER RACHECK
         MVC   RES,BLANKS        CLEAR RESOURCE NAME
         MVC   RES(20),=CL20'INST.LOGGING.BADPASS'  RESOURCE
         MVC   RX2(RX2L),RX1     COPY TEMPLATE
         L     R2,RACEE          ACEE ADDR
         RACROUTE REQUEST=AUTH,WORKA=RACWORK,ACEE=(2),                 X
               ENTITY=RES,ATTR=READ,MF=(E,RX2),RELEASE=1.9
* RACROUTE REQUEST=VERIFY DELETE ACEE FOR THE USERID
RACDEL   EQU    *
         CLI   ABLD,C'Y'         ACEE BUILT HERE?
         BNE   EXAM              NO, SKIP DEL
         MVC   RX6(RX6L),RX5     COPY TEMPLATE
         RACROUTE REQUEST=VERIFY,WORKA=RACWORK,STAT=NO,LOG=ASIS,       X
               ACEE=RACEE,ENVIR=DELETE,MF=(E,RX6),RELEASE=1.9
         L     R1,RX6+0          RETURN CODE
         LTR   R15,R15           TEST RACINIT SAF RC
         BNZ   ERROR             FAILED, LEAVE EXIT
* EXAMINE AUTH RETURN CODE TO SEE IF THIS PASSWORD WAS PROHIBITED
EXAM     EQU   *
         L     R15,CHKC          LOAD RC
         C     R15,=F'8'         COMPARE RC TO 8
         BH    ERROR2            HIGHER IS ERROR
         BE    FAIL              EQUAL TO PASSWORD BANNED
         B     ALLOW             LESS THAN OK OR UNDEFINED
* ERROR IN RACINIT, ALLOW PASSWORD RC = 0
ERROR    EQU   *
         MVC   RETC,ZEROS        ALLOW ATTEMPT TO CHANGE PASSWORD
         C     R1,=F'28'         IS IT REVOKED USER?
         BE    EXIT              OK, NO MESSAGE
         WTO   'ICHPWX01 - RACINIT MACRO FAILED',ROUTCDE=11
         B     EXIT
* ERROR IN RACHECK, ALLOW PASSWORD RC = 0
ERROR2   EQU   *
         WTO   'ICHPWX01 - RACHECK MACRO FAILED',ROUTCDE=11
         MVC   RETC,ZEROS        ALLOW ATTEMPT TO CHANGE PASSWORD
         B     EXIT
* ERROR IN RACXTRT, ALLOW PASSWORD RC = 0
ERROR3   EQU   *
         WTO   'ICHPWX01 - RACXTRT MACRO FAILED',ROUTCDE=11
         MVC   RETC,ZEROS        ALLOW ATTEMPT TO CHANGE PASSWORD
         B     EXIT
* PREVENT THIS PASSWORD CHANGE WITH RC = 4
FAIL     EQU   *
         WTO   'ICHPWX01 - PASSWORD VALUE NOT ALLOWED',ROUTCDE=11
         MVC   RETC,=F'4'        FAIL ATTEMPT TO CHANGE PASSWORD
         B     EXIT
* ALLOW THIS PASSWORD CHANGE WITH RC = 0
ALLOW    EQU   *
         MVC   RETC,ZEROS        ALLOW ATTEMPT TO CHANGE PASSWORD
         B     EXIT
* QUIT EXIT, SET RC TO 0 OR 4
EXIT     EQU   *
         L     R2,RETC           SAVE RC
         L     R13,SAVEAREA+4    RESTORE R13
         FREEMAIN R,LV=WORKLEN,A=(10) FREE DYNAMIC AREA
         LR    R15,R2            RETURN CODE TO R15
         L     R14,12(R13)       RESTORE R14
         LM    R0,R12,20(R13)    RESTORE R0 TO R12
         BR    R14               RETURN
MOVENEW  MVC   RPASS(0),1(R6)    MOVE NEW PASS
MOVEUSR  MVC   RUSER(0),1(R6)    MOVE USERID
COMPARE  CLC   RUSER(0),RPASS    COMPARE USERID TO PASSWORD
         LTORG
* CONSTANTS, NON-MODIFIABLE
ZEROS    DC    256XL1'00'        ZEROS
BLANKS   DC    CL255' '          BLANKS
RFLD1A   DC    A(1)              NUMBER OF FIELDS FOLLOWING
RFLD1B   DC    CL8'FLAG4'        NAME OF FIELD (FLAG BYTE 4)
RX1      RACROUTE REQUEST=AUTH,WORKA=ZEROS,CLASS='FACILITY',MF=L,      X
               ENTITY=ZEROS,ATTR=READ,ACEE=ZEROS,RELEASE=1.9
RX3      RACROUTE REQUEST=VERIFY,WORKA=ZEROS,USERID=ZEROS,             X
               ACEE=ZEROS,ENVIR=CREATE,MF=L,RELEASE=1.9,               X
               PASSCHK=NO,STAT=NO,INSTLN=ZEROS,LOG=ASIS
RX5      RACROUTE REQUEST=VERIFY,WORKA=ZEROS,STAT=NO,                  X
               ACEE=ZEROS,ENVIR=DELETE,MF=L,RELEASE=1.9,LOG=ASIS
RX7      RACROUTE REQUEST=EXTRACT,WORKA=ZEROS,RELEASE=1.8.1,           X
               TYPE=EXTRACT,FIELDS=ZEROS,ENTITY=ZEROS,CLASS='USER',MF=L
* PROGRAM DATA AREA
WORKAREA DSECT
SAVEAREA DS    18F               SAVE AREA
RETC     DS    F                 EXIT RETURN CODE
CHKC     DS    F                 CHECK RET CODE
RACEE    DS    F                 ACEE ADDRESS
RULEN    DS    AL1               LENGTH OF USERID   ) KEEP
RUSER    DS    CL8               USERID FOR RACHECK ) TOGETHER
RPLEN    DS    AL1               LENGTH OF PASSWORD
RPASS    DS    CL8               NEW PASSWORD
RES      DS    CL39              RESOURCE NAME FOR CHECK
FLAG4    DS    CL1               DATABASE FLAG4 FIELD
ABLD     DS    CL1               ACEE BUILT HERE
RX2      RACROUTE REQUEST=AUTH,WORKA=ZEROS,CLASS='FACILITY',MF=L,      X
               ENTITY=ZEROS,ATTR=READ,ACEE=ZEROS,RELEASE=1.9
RX2L     EQU   *-RX2
RX4      RACROUTE REQUEST=VERIFY,WORKA=ZEROS,USERID=ZEROS,             X
               ACEE=ZEROS,ENVIR=CREATE,MF=L,RELEASE=1.9                X
               PASSCHK=NO,STAT=NO,INSTLN=ZEROS,LOG=ASIS
RX4L     EQU   *-RX4
RX6      RACROUTE REQUEST=VERIFY,WORKA=ZEROS,STAT=NO,                  X
               ACEE=ZEROS,ENVIR=DELETE,MF=L,RELEASE=1.9,LOG=ASIS
RX6L     EQU   *-RX6
RX8      RACROUTE REQUEST=EXTRACT,WORKA=ZEROS,RELEASE=1.8.1,           X
               TYPE=EXTRACT,FIELDS=ZEROS,ENTITY=ZEROS,CLASS='USER',MF=L
RX8L     EQU   *-RX8             RACXTRT LENGTH
RACWORK  DS    CL512             RACROUTE WORK AREA
WORKLEN  EQU   *-WORKAREA
* DSECTS
         ICHPWXP                 NEW PASSWORD EXIT PARM MAPPING
         YREGS
         IHAACEE                 ACEE
         END


                                                                        c Xephon

