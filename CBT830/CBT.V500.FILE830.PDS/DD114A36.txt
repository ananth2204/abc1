An SMP/E front-end


SMPE REXX EXEC

/* REXX EXEC to invoke SMPE with a supplied CSI name
 * by providing an optional CSI selection menu.
/*
trace off
parse SOURCE . . ExecId .
PARSE UPPER ARG parm .
csilist = "'YOUR.DATA.SET(CSILIST)'" <==== Follow your installation stds
if parm = '?' then SIGNAL help
rcx=O
if parm \= ''
   then do
    call chk_parms
    rcx = result
   end
if rcx = O
   then ADDRESS ISPEXEC "SELECT PGM(GIMSTART) NEWAPPL(SMPE) PASSLIB
 NOCHECK"
exit
chk_parms: /* parse input parms and do general housekeeping */
rc1 = 0
if SYSDSN(csilist) \= 'OK'
   then do
    rc1 =99
    say execid':' csilist 'not found'
   end
   else do /* check that list of CSIs exists */
    ADDRESS TSO 'ALLOC F(CSIDD) DA('csilist') SHR'
   if ABBREV('CSILIST',parm,4) = 1
      then call csilist
      else call search
      if result = 0
         then call putvar
   rc1 = result
   'EXECIO 0 DISKR CSIDD (FINIS'
   end
return rc1
csilist: /* create table and display CSI list selection menu */
rc2 = 0
ADDRESS ISPEXEC 'TBCREATE CSILIST NAMES(CSIDSN)'
if rc = 0
   then do
    do forever
    'EXECIO 1 DISKR CSIDD (STEM LINE.'
     if rc = 0
        then leave
        else do
         csidsn = WORD(line.1,1)
         ADDRESS ISPEXEC 'TBADD CSILIST SAVE(CSIDSN)'
        end
     end
     ADDRESS ISPEXEC 'TBTOP CSILIST'
     ADDRESS ISPEXEC 'TBDISPL CSILIST PANEL(SMPEP001)'
     if rc = 8
        then rc2 = rc
        else ADDRESS ISPEXEC 'TBGET CSILIST'
     ADDRESS ISPEXEC 'TBEND CSILIST'
   end
   else rc2 = rc
return rc2
search: /* search string specified */
rc3 = 99
do forever
   'EXECIO 1 DISKR CSIDD (STEM LINE.'
   if rc = 0
      then leave
      else do
         if POS(parm,line.1 \= 0
            then do
               rc3 = 0
               csidsn = WORD(line.1,1)
               leave
         end
   end
end
if rc3 \= 0
   then say execid': Search string' parm 'not found in' csilist
return rc3
putvar: /* update SMPEPROF.*/
rc4 = 0
csidsn = STRIP(csidsn,B,"'") /* strip off quotes if any */
csidsn = "'"csidsn"'"        /* put quotes on */
/* check that selected CSI exists */
if SYSDSN(csidsn) = 'OK'
   then do
    c4 = 99
    say execid':' csidsn 'not found'
   end
   else do
    /* to recreate the profile variable requires using NEWAPPL */
    ADDRESS ISPEXEC 'SELECT CMD(%SMPEPUTV' csidsn') NEWAPPL(SMPE)
PASSLIB'
   end
return rc4
help:
say execid
say 'Access SMPE with an optional front-end panel that presents'
say 'a list of CSI names for selection.'
say ''
say 'Command format:'
say '     -        -'
say 'SMPE | CSIList|'
say '     | string |'
say '     | ?      |'
say '     -        -'
say '  where: CSIList causes the CSI pick list to be displayed.'
say '       : May be abbreviated to CSIL.'
say '       : string searches a table for a CSI name containing'
say '       : that string.'
say '       : ? displays this help information.'
say 'The default (no parameter) goes straight to the normal SMPE'
say 'panels.'
say ''
say 'The list of CSI names is maintained externally in'
say csilist'.'
exit


SMPEPUTV REXX EXEC

/* REXX EXEC to modify the saved SMPE GLOBAL CSI name
 * This should be executed with NEWAPPL(SMPE)
 */
trace off
parse SOURCE . . ExecId .
PARSE UPPER ARG name .
gpmstcsi = name
ADDRESS ISPEXEC 'VPUT (GPMSTCSI) PROFILE'
exit


SMPEP001 PANEL

)ATTR
@ TYPE(OUTPUT) INTENS(LOW)
)BODY EXPAND({{)
%{-{ SMPE CSI SELECTION PANEL {-{
%COMMAND ===>_ZCMD
+
%S CSI NAME
)MODEL
_Z @CSIDSN
)INIT
 .ZVARS = '(SELECT)'
 &AMT = PAGE
 .CURSOR = SELECT
 .CSRROW = &ZTDTOP
)REINIT
 IF (.MSG = '')
   &SELECT = ''
   REFRESH (SELECT)
)PROC
 IF (&ZTDSELS NE 0000)
   VER (&SELECT, LIST,S,s, MSG=SMPEM001)
)END


SMPEM00 MESSAGE MEMBER

SMPEM001 'Invalid Entry' .ALARM = YES
'S is the only valid entry'


Andrew Gardiner
Systems Programmer (Australia)                c Xephon 1996

