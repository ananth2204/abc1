Including the VOLSER in message IEF238D

BACKGROUND

When a job requests a volume that is not currently mounted, and no
on-line units are available on which to mount the volume, the MVS
initiator issues a series of 'allocation recovery' messages (IEF244I,
IEF489I, IEF247I, and IEF238D).  These messages invite the operator to
specify an off-line unit that is to be brought on-line so that the
volume can be mounted on it.

The design philosophy behind these messages dates from the days of
removable DASD (such as 2314s and 3330s) when it was possible to run a
computer room using a 'mount on demand' methodology.  This method of
working was never popular: most installations found it more convenient
to pre-mount volumes.  Now that practically all DASD is non-removable,
allocation recovery messages are widely seen as an inconvenient
anachronism.  In many cases the required volume will already be mounted
on one of the off-line units, and the operator can satisfy the request
merely by replying with the device number of the unit on which the
volume is mounted.  However, the allocation recovery message gives no
indication, other than the DDNAME, as to which volume is required.  If
the operator replies with the wrong device, a mount request will be
issued, which it may not be possible to satisfy.

To assist the operator in choosing the correct unit, the message:

IEF238D REPLY DEVICE NAME OR CANCEL.
needs to be changed to:

IEF238D REPLY DEVICE NAME OR CANCEL, FOR xxxxxx
where xxxxxx is the volume serial number of the required volume.

While this requirement has been addressed by MVS/XA Version 2 Release 2, it is
possible to fit the facility to Versions 2.1.2, 2.1.3, and 2.1.7 of the MVS/XA
Base Control Program by means of the user-specified MCS exit introduced in
MVS/XA 2.1.2.  This article presents a specification for such an exit.
Sufficient detail and references are given so that even a relatively
inexperienced Assembler language programmer can tackle the job.

METHOD

The objective is to write an MCS user exit module that will append a volume
serial number to the message:

IEF238D REPLY DEVICE NAME OR CANCEL.

Message IEF238D is issued by module IEFAB488.  This module is passed two
parameters by its caller, the second parameter being an internal data area
called RPLYDATA, which points to a VOLUNIT entry containing the required volume
serial number.

Whenever message IEF238D is issued (via SVC35, the write to operator SVC), SVC35
will invoke the user exit module.

The user exit is passed a control block called a CTXT, which points to a data
area containing the message length, flags, and text.

The intention is to add 11 characters ' FOR VOLSER' onto the end of the message
text and return to SVC35.  SVC35 will then issue the message using the updated
text.

The user exit module should first check that the current text length plus 11
does not exceed the maximum allowable length specified in the CTXT.  If it does,
the module will exit without doing anything.  Otherwise, the module should check
whether the last character of the message text is a full stop (period), and if
so, will change it to a comma.  The module will use the method described below
to find the required volume serial number.  It can then place the additional 11
characters behind the message text, using the current text length field in the
CTXT to determine where to place the characters in relation to the start of the
message text.  The module then updates the current text length field by adding
11 to it, and sets the 'change message text' bit on in the CTXT request flags.
Return is then made to SVC35 to action the changes.

How to locate the volume serial number

The current request block is an SVRB containing the registers for IEFAB488 at
the time it issued SVC35; register 13 in this SVRB points to IEFAB488's save
area.  The next higher save area contains the registers on entry to IEFAB488.
Register 1 on entry to IEFAB488 points to a two-word parameter list.  The second
word of this parameter list points to an internal data area called RPLYDATA.
The RPLYDATA area contains a pointer to the current VOLUNIT entry.  The VOLUNIT
entry contains the volume serial number.


Note: if the address of the VOLUNIT entry is zero, or if the volume serial
number is all blanks or all X'00', or contains unprintable characters, the user
exit module should return without altering the message.

How to locate the current request block

Location CVTPTR (at X'10' in the PSA) points to the CVT.  Field CVTTCBP in the
CVT points to a pair of fullwords called the 'TCB words'.  The second of these
'TCB words' points to the current TCB.  Field TCBRBP in the TCB points to the
current request block, which will be an SVRB.

PROGRAMMING NOTES

Instructions for coding MCS user exits are in the MVS/XA SPL: User Exits manual,
under the section entitled IEAVMXIT and User Specified Exits.  Programming
considerations and coding examples are provided in this manual.  The following
considerations in particular should be noted:

*    The module must run AMODE 31, RMODE ANY.  All addresses referenced should
be treated as fullword 31-bit addresses.

*    The module must be re-enterable.  This means that it must not store or move
any data into fields within the module itself.

*    Use the save area provided on entry to save the registers and restore them
prior to return.  It will not be necessary to provide a new save area, as the
module will not call any lower level modules.

Wherever possible, fields in control blocks should be referenced by using the
field names generated by mapping macros, not by explicit displacements.
Similarly, symbolic names should be used for flag bits, etc (eg CTXTRCMT, not
X'80').

Mapping macros for the control blocks that the module will need to reference are
available on SYS1.AMODGEN on the MVS/XA distribution library (DLIB) volumes.
The macros required are shown in Figure 1.

There are no Assembler mapping macros for the RPLYDATA and VOLUNIT data areas,
because these areas are normally accessed only by PL/S modules.  It will be
necessary to code in-line DSECTS for these control blocks, by referring to the
microfiche listings for module IEFAB488 (FMID JBB2125), and converting the PL/S
data structures to Assembler DSECTS.

There are no mapping macros for save areas or parameter lists.  It is
conventional to use explicit base and displacements to access these structures.
Refer to the MVS/XA Supervisor Services and Macro Instructions manual for
details of save areas and parameter lists.

INSTALLATION

The module must be link-edited into SYS1.LINKLIB, or any library specified in
the LNKLSTxx member of SYS1.PARMLIB.  Any load module name may be chosen that
does not duplicate the name of an existing module or alias in SYS1.LINKLIB,
SYS1.LPALIB, or other library specified in the LNKLSTxx or LPALSTxx members of
SYS1.PARMLIB.  The RENT and REUS attributes must be specified in the link-edit
parameter, otherwise the MVS Communications Task will not load the module.
The following statement must be added to the MPFLST00 member in SYS1.PARMLIB:

     IEF238D,SUP(N),USEREXIT(modulename)

where 'modulename' is the name chosen for the load module and specified by the
NAME statement on the link-edit.

After adding the module to SYS1.LINKLIB and updating the MPF list in
SYS1.PARMLIB, it is necessary to refresh the LLA and activate the MPF list by
entering these commands at the master console:

     T MPF=NO
     F LLA,REFRESH
     T MPF=00

REFERENCES

GC28-1147 MVS/XA SPL: User Exits
GC28-1149 MVS/XA SPL: Initialisation and Tuning
GC28-1154 MVS/XA: Supervisor Services and Macro Instructions

Roger Bowler
Technical Consultant
Tram Road Software (UK)  â‚¬ Roger Bowler 1988





