Checking and modifying JCL using JES exit 6

Installations use various tools to check and modify the JCL
statements, especially of batch jobs.  Submit exits are very
common as is the SMF exit IEFUJV.  But with both of them you
must cope with the problem of coding and decoding JCL
statements, including continuations, comments etc.

There is, however, a different solution.  JES exit 6 not only allows
you to check and modify control blocks like the JCT, it also
provides you with the JES2 internal text.  The advantage over the
former methods is that internal text consists of one variable
length record per JCL statement, so there is no need to decode JCL
statements.  However, there is no straightforward documentation
of the layout of this record.  An entry in INFO/MVS (Q117255)
refers to some documents and to the macros TEXT and KEYS
(IEFTXTFT and IEFVKEYS in SYS1.AMODGEN).  The first macro is a
DSECT that overlays the internal text record header.  It is
especially useful in determining the type of JCL statement the
record represents.  A simple statement like CLI STRINDCS, JOBSTR
tells you whether it is a job card.  STRINDCS and JOBSTR are both
defined in the macro.  Other indicators are readily available: just
browse SYS1.AMODGEN(IEFTXTFT).

The second part of the record contains the decoded parameters of
the JCL statement.  Its format is shown in Figure 1.

To make this layout a little clearer, let us look at what
TIME=(5,10) would result in.  TIME has a key value of X'A9', so
the internal text would show X'A9 02 01 F5 02 F1 F0'.  This means
that this is a TIME parameter and it has two subparameters: the
first has a length of 1 and a value of 5 (F5), and the second has a
length of 2 and a value of 10 (F1F0).
TIME=(,15) would become X'A9 02 00 02 F1 F5' -  a length of zero
indicates the omitted 'minutes' value.

Let's see how to find the parameter we are looking for.  The
following code is based on SYS1.HASPSRC(HASPCNVT).  It looks for
the address of the first byte (the key) of a parameter.  Register 15
must contain the KEY value in its high order byte, eg:
    ICM   R15,8,TIMEJK             for the 'A9'X of the TIME param.
Register 3 must contain the address from which to start the
search, for example:
    LA    R3,STRJKEY
Register 10 must contain the address of the next instruction.  The
routine branches to Register 10 or 4 bytes past Register 10,  like
this:
    BAL   R10,routine
    B     BADRESULT
    B     GOODRESULT


THE ROUTINE

routine        SLR  R5,R5          CLEAR REG 5
               LR   R7,R5          CLEAR REG 7
               B    E006P640       START SEARCH
E006P610       ICM  R5,1,1(R3)     SET R5 TO # PARMS
               LA   R3,2(,R3)      GET ADDR. 1ST PARM
               BZ   E006P640       BRANCH IF NONE
E006P620       ICM  R7,1,0(R3)     R7=PARM LENGTH
               BM   E006P650       BRANCH IF SUBPARM COUNT
               LA   R3,0(R3,R7)    ELSE GET ADDR. NEXT PARM
E006P630       LA   R3,1(,R3))     SKIP LENGTH BYTE
               BCT  R5,E006P620    BRANCH IF MORE TO SKIP
E006P640       CLI  0(R3),ENDK     IS IT THE END
               BE   0(R10)         RETURN, BADRESULT
               CLM  R15,8,0(R3)    IS IT THE DESIRED KEY
               BNE  E006P610       NO -> P610
               B    4(R10)         RETURN, GOODRESULT
E006P650       SL   R7,=A(X'80')   CLEAR HIGH ORDER OF CNT.
               ALR  R5,R7          ADD SUBCOUNT TO COUNT
               B    E006P630       BRANCH BACK


If internal text is changed, one must remember:

*   To change the total length indicator of the record (STRLTH in
the header DSECT).

*   That there is no specific sequence for the parameters; thus a
parameter may be removed, the rest of the record shifted to the
left, and the new value added to the end.

*   To have the ENDK byte as the last character; JES2 coding
expects it to be there.

*   That the changed code is not reflected in the printout.

*   An error in the record may cause JES2 to abend.

Marc Van der Wyngaert
Systems Programmer
Janssen Pharmaceutica (Belgium) â‚¬ Xephon 1989
