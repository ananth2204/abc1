Tools, hints, and tips for ISPF edit


INTRODUCTION

This article describes some ISPF routines which we have found
to be very useful.  Our current environment is MVS/XA and
ISPF/PDF 2.0.  All edit macros and CLISTs have to be
included in a dataset which is in your SYSPROC DDNAME
concatenation.


EDITALL

This is a CLIST which does a global edit of a PDS.  If you
wanted to make a common change to all the members of a
PDS, you could invoke the CLIST EDITALL with the dataset
name as a parameter.  The CLIST will ask for an edit macro
name to be processed against all the members of the PDS.

/**********************************************************************
/* THE  FOLLOWING FILE IS  EDITALL
/**********************************************************************
PROC 1 DSN
  ISPEXEC CONTROL ERRORS RETURN
  ERROR +
  DO
    ERROR OFF
    GOTO FINERR
  END
  IF &SUBSTR(1,&DSN) = &STR(') THEN +
    SET &DSN = &SUBSTR(2:&EVAL(&LENGTH(&DSN)-1),&DSN
  ELSE +
    SET &DSN = &SYSPREF..&DSN
  IF &SYSDSN('&DSN') ¬= &STR(OK)  THEN +
  DO
     WRITE '&DSN'  NOT FOUND/CATALOGUED
     GOTO FINISH
  END
  CLEAR
  WRITE ENTER EDIT MACRO TO BE PROCESSED FOR ALL MEMBERS IN &DSN
  WRITENR OR HIT ENTER TO EXIT  ===>
  READ &EMACRO
  IF &EMACRO = &STR() THEN  +
  DO
    WRITE EXITING FROM EDITALL
    GOTO FINISH
  END
  ISPEXEC LMINIT DATAID(DID) DATASET('&DSN') ENQ(SHRW) ORG(DSORG)
  IF &DSORG ¬= &STR(PO)  THEN +
  DO
    WRITE &DSN IS NOT A PARTITIONED DATASET
    ISPEXEC LMFREE DATAID(&DID)
    EXIT
  END
  ISPEXEC LMOPEN DATAID(&DID) OPTION(INPUT)
  SET &RC = &LASTCC
  DO WHILE &RC = 0
    ISPEXEC LMMLIST DATAID(&DID) OPTION(LIST) MEMBER(MEM)
    SET &RC = &LASTCC
    IF &RC = 0 THEN +
    DO
      SET &MEM = &SUBSTR(1:&LENGTH(&MEM),&MEM)
      ISPEXEC EDIT DATASET('&DSN(&MEM)') MACRO(&EMACRO)
      SET &EDITCC = &LASTCC
      IF &EDITCC <= 4 THEN +
         WRITE MEMBER PROCESSED  &MEM
    END
  END
FINERR:   +
  CONTROL NOMSG
  ISPEXEC LMMLIST DATAID(&DID) OPTION(FREE)
  ISPEXEC LMCLOSE DATAID(&DID)
  ISPEXEC LMFREE  DATAID(&DID)
FINISH:   +
   EXIT

Here is an example of a macro which could be used with
EDITALL.  It would change any lower-case characters to
upper-case in all the members of the specified PDS.

/*  THE EDIT MACRO NAME IS $CAPS
ISREDIT MACRO
ISREDIT CHANGE ALL P'<'  P'>'
ISREDIT BUILTIN END            /* Simulate END so that         */
EXIT CODE(0)                   /* next member can be processed */


PANLEVEL

This is an edit macro that will be useful if you are using
PANVALET for editing source data.  PANVALET maintains
level numbers when data is changed.  This edit macro will
show lines which fall between two particular level numbers.
If, for example, you have started maintaining source code at a
level number of 20 and after completion of the maintenance the
level number is 25, enter PANLEVEL 20 25 at the command
line when you are in PANVALET edit and the line numbers
which have a level between 20 and 25 will be displayed and
others will be excluded.  If you want to see all lines, enter
RESET at the command line.  This macro does not change the
data in any way.  It is the user"s responsibility to save the data.

/**********************************************************************
/* THE  FOLLOWING FILE IS  PANLEVEL
/**********************************************************************
ISREDIT MACRO (PARM1  PARM2)
  ISPEXEC CONTROL ERRORS RETURN
  ISREDIT (STAT) = USER_STATE
  IF &NRSTR(&PARM1) = &STR(?) THEN +
  DO
    ISPEXEC CONTROL DISPLAY SAVE
    /* ****************************************************************
    /* IF YOU WANT TO ADD HELP FACILITY FOR THIS MACRO, CREATE A
    /* PANEL CALLED PANLEVEL AND ADD THAT TO YOUR ISPPLIB CONCATENATION
    /* AND UNCOMMENT THE FOLLOWING ISPEXEC LINE
    /* ****************************************************************
    /* ISPEXEC SELECT PGM(ISPTUTOR) PARM(PANLEVEL)
    ISPEXEC CONTROL DISPLAY RESTORE
    EXIT CODE(0)
  END
  IF &DATATYPE(&NRSTR(&PARM1)) ¬= &STR(NUM) THEN +
  DO
    SET ZEDSMSG = &STR(PARM1 INVALID )
    SET ZEDLMSG = &STR(ONLY NUMBERS ARE ALLOWED AS PARAMETER)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(12)
  END
  IF &NRSTR(&PARM2) ¬= &STR()  AND               +
     &DATATYPE(&NRSTR(&PARM2)) ¬= &STR(NUM) THEN +
  DO
    SET ZEDSMSG = &STR(PARM2 INVALID )
    SET ZEDLMSG = &STR(ONLY NUMBERS ARE ALLOWED AS PARAMETER)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(12)
  END
  IF &LENGTH(&NRSTR(&PARM1)) > 3  THEN +
  DO
    SET ZEDSMSG = &STR(PARM1 INVALID )
    SET ZEDLMSG = &STR(NUMBERS WITH MORE THAN 3 DIGITS NOT VALID)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(12)
  END
  IF &NRSTR(&PARM2) ¬= &STR()  AND               +
     &LENGTH(&NRSTR(&PARM2)) > 3  THEN +
  DO
    SET ZEDSMSG = &STR(PARM2 INVALID )
    SET ZEDLMSG = &STR(NUMBERS WITH MORE THAN 3 DIGITS NOT VALID)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(12)
  END
  IF (&PARM2 <  &PARM1)  AND       +
     (&NRSTR(&PARM2) ¬= &STR())  THEN              +
  DO
    SET ZEDSMSG = &STR(INVALID RANGE)
    SET ZEDLMSG = &STR(PARM2 &PARM2 IS LESS THAN PARM1 &PARM1)
    ISPEXEC SETMSG MSG(ISRZ001)
    EXIT CODE(12)
  END
  IF &NRSTR(&PARM1) ¬=  THEN  ISREDIT EXCLUDE ALL
  IF &NRSTR(&PARM2)  =  THEN  SET &PARM2 = &PARM1
  SET A   = &STR(********)
  DO WHILE &PARM2 >= &PARM1
      SET L   = &LENGTH(&PARM1)
      SET LL  = 3 - &L
      IF  &LL <= 0  THEN +
          SET BIT =
      ELSE  +
          SET BIT = &SUBSTR(1:&LL,&A)
      ISREDIT FIND '&BIT&PARM1' 78 80 ALL
      SET &PARM1 = &PARM1 + 1
  END
  ISREDIT USER_STATE  = (STAT)
  IF &MAXCC > 4 THEN +
  DO
    ISREDIT RESET
    SET ZEDSMSG = &STR(PANLEVEL MACRO ERROR)
    SET ZEDLMSG = &STR(PANLEVEL MACRO ENDED WITH MAX RETURN CODE &MAXCC)
    ISPEXEC SETMSG MSG(ISRZ000)
  END
EXIT CODE(1)


DATACHG

This is an edit macro that will display whether data has been
changed during the session.  This will be especially useful if
you are not sure whether to save or cancel the current edit
session.

/**********************************************************************
/* THE  FOLLOWING FILE IS  DATACHG
/**********************************************************************
ISREDIT MACRO (PARM)
      ISPEXEC CONTROL ERRORS RETURN
      IF &STR(&PARM) ¬= &STR() THEN +
      DO
        SET ZEDSMSG = &STR(INVALID PARAMETERS)
        SET ZEDLMSG = &STR(PARAMTERS NOT ALLOWED FOR DATACHG COMMAND)
        ISPEXEC SETMSG MSG(ISRZ001)
        EXIT CODE(12)
      END
      ISREDIT (CHGSTAT) = DATA_CHANGED
      IF &CHGSTAT = &STR(YES) THEN +
      DO
        SET ZEDSMSG = &NRSTR(DATA CHANGED   )
        SET ZEDLMSG = &NRSTR(DATA HAS BEEN **CHANGED** IN +
                             THIS SESSION)
      END
      ELSE +
      DO
        SET ZEDSMSG = &NRSTR(DATA NOT CHANGED)
        SET ZEDLMSG = &NRSTR(DATA HAS **NOT** BEEN CHANGED IN +
                             THIS SESSION)
      END
      ISPEXEC SETMSG MSG(ISRZ001)
 EXIT CODE(0)


SHOWDCB

This is an edit macro that will display the Data Control Block
(DCB) information while you are in edit.  This macro uses the
TSO command LISTDSI to fetch the DCB information.

/**********************************************************************
/* THE  FOLLOWING FILE IS  SHOWDCB
/**********************************************************************
ISREDIT MACRO (PARM)
 ISPEXEC CONTROL ERRORS RETURN
 IF &STR(&PARM) ¬= &STR() THEN +
 DO
   SET ZEDSMSG = &STR(INVALID PARAMETERS)
   SET ZEDLMSG = &STR(PARAMTERS NOT ALLOWED FOR SHOWDCB COMMAND)
   ISPEXEC SETMSG MSG(ISRZ001)
   EXIT CODE(12)
 END
 ISREDIT (DSNAME) = DATASET
 CONTROL NOMSG
 LISTDSI '&DSNAME' DIRECTORY
 SET &RC = &LASTCC
 CONTROL MSG
 IF &RC = 0  THEN +
    SET ZEDLMSG = &STR(DCB=(LRECL=&SYSLRECL,BLKSIZE=&SYSBLKSIZE,+
                       RECFM=&SYSRECFM,DSORG=&SYSDSORG))
 ELSE             +
    SET ZEDLMSG = &STR(DCB INFORMATION NOT AVAILABLE )
 ISPEXEC SETMSG MSG(ISRZ001)
EXIT CODE(0)


RECOVON

This is an edit macro that will change the edit profile to
RECOVERY ON.  If there is a system crash or an abnormal
abend during edit with recovery on you will be able to retrieve
the data.  I would suggest having this as an initial macro at the
edit (option 2) panel itself so that any datasets or members you
are editing have recovery "on" in their profile.

/**********************************************************************
/* THE  FOLLOWING FILE IS  RECOVON
/**********************************************************************
ISREDIT MACRO
      ISREDIT RECOVERY ON
EXIT CODE(0)


RECOVOFF

This is an edit macro that will change the edit profile to
RECOVERY OFF.

/**********************************************************************
/* THE  FOLLOWING FILE IS  RECOVOFF
/**********************************************************************
ISREDIT MACRO
      ISREDIT RECOVERY OFF
EXIT CODE(0)


REMOVSPL

This is an edit macro that will change the special characters to
blanks.  Normally you won"t be able to enter data in the
positions where special characters are present.  You need to go
to "hex" mode and enter the data.  The data is not saved by the
macro automatically.  It is the user"s responsibility to save the
data in the session.

/**********************************************************************
/* THE  FOLLOWING FILE IS  REMOVSPL
/**********************************************************************
ISREDIT MACRO
   ISREDIT CHANGE ALL P'.'  ' '
   ISREDIT (CHANGES,ERRORS) = CHANGE_COUNTS
   ISREDIT RESET
   SET &CHANGES = &CHANGES
   SET &ERRORS = &ERRORS
   SET ZEDLMSG = &STR(CHG COUNT= &CHANGES ERR COUNT= &ERRORS )
   ISPEXEC SETMSG MSG(ISRZ000)
EXIT CODE(1)


P Kumar (Australia)`                        c Xephon 1991

