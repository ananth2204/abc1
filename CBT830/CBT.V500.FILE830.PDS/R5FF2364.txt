Efficient use of 3990-3 cache under MVS/XA

In an MVS/XA environment without DFSMS, it is only
possible to use the 3990-3 cache function at a volume level.
To increase the efficiency of the cache, it is necessary to tune
the configuration by choosing which volumes must be cached,
and which must not.  Referring to the Planning, Installation
and Storage Administration Guide GA32-0100, good cache
candidates must meet the following criteria:

o      Perform high I/O activity

o      Have a read hit ratio greater than 65%

o      Have a read/write ratio greater than 2.

The problem is that there is no easy way to get these ratios.
Other than the Cache RMF Reporter, the only tool available is
the IDCAMS utility with the LISTDATA COUNTS command
(see Figure 1, on page 16).

I wrote the following CLIST to do  all the computations
automatically.  Sample output is shown in Figure 2, on page 17.

PROC 0 DEBUG
 IF &DEBUG = DEBUG THEN +
   CONTROL LIST SYMLIST CONLIST
 ERROR DO
   SET RETCOD = &LASTCC
   IF &LASTCC = 400 THEN DO
     SET EOF = YES
     RETURN
   END
   ELSE DO
     WRITE ERREUR &LASTCC DETECTEE ???
     EXIT
   END
 END
 ALLOC FI(SORTIN)  UNIT(SYSDA) CYLINDERS SPACE(1 1) +
                   RECFM(F B) LRECL(80) BLKSIZE(3120)
 ALLOC FI(SORTOUT) UNIT(SYSDA) CYLINDERS SPACE(1 1) +
                   RECFM(F B) LRECL(80) BLKSIZE(3120)
 OPENFILE SORTIN OUTPUT
 OPENFILE SYSUT1
 SET &EOF = NO
 GETFILE SYSUT1
 SET SYSUT1 = &SYSUT1                                 .
 DO WHILE &EOF = NO
   IF &SUBSTR(22:27,&SYSUT1) = &STR(VOLUME) THEN DO
     SET &VOLSER = &SUBSTR(29:34,&SYSUT1)
     SET &EODEV = NO
     DO WHILE &EODEV = NO
       GETFILE SYSUT1
       SET SYSUT1 = &SYSUT1                                 .
       IF &SUBSTR(2:7,&SYSUT1) = &STR(TOTALS) THEN DO
         SET &SORTIN = &VOLSER&SUBSTR(20:80,&SYSUT1)
         PUTFILE SORTIN
         SET &EODEV = YES
       END
     END
   END
   GETFILE SYSUT1
   SET SYSUT1 = &SYSUT1                                 .
 END
 CLOSFILE SYSUT1
 OPENFILE SYSUT2
 SET &EOF = NO
 GETFILE SYSUT2
 SET SYSUT2 = &SYSUT2                                 .
 DO WHILE &EOF = NO
   IF &SUBSTR(22:27,&SYSUT2) = &STR(VOLUME) THEN DO
     SET &VOLSER = &SUBSTR(29:34,&SYSUT2)
     SET &EODEV = NO
     DO WHILE &EODEV = NO
       GETFILE SYSUT2
       SET SYSUT2 = &SYSUT2                                 .
       IF &SUBSTR(2:7,&SYSUT2) = &STR(TOTALS) THEN DO
         SET &SORTIN = &VOLSER&SUBSTR(20:80,&SYSUT2)
         PUTFILE SORTIN
         SET &EODEV = YES
       END
     END
   END
   GETFILE SYSUT2
   SET SYSUT2 = &SYSUT2                                 .
 END
 CLOSFILE SYSUT2
 CLOSFILE SORTIN
 ALLOC FI(SYSIN)   UNIT(SYSDA) CYLINDERS SPACE(1 1) +
                   RECFM(F B) LRECL(80) BLKSIZE(3120)
 OPENFILE SYSIN OUTPUT
 SET &SYSIN = &STR( RECORD TYPE=F )
 PUTFILE SYSIN
 SET &SYSIN = &STR( SORT FIELDS=(1,80,CH,A) )
 PUTFILE SYSIN
 CLOSFILE SYSIN
 ALLOC FI(SYSOUT) DUMMY
 CALL 'SYS1.LPALIB(SORT)'
 FREE FI(SYSOUT)
 FREE FI(SYSIN)
 WRITE  ********************************************
 WRITE  * STATISTIQUES 3990 LE &SYSDATE A &SYSTIME *
 WRITE  ********************************************
 WRITE
 WRITE  =============================================
 WRITE  ! VOLSER !  ACTIVITY  ! HIT READ ! READ/WRT !
 WRITE  =============================================
 OPENFILE SORTOUT
 SET &EOF = NO
 GETFILE SORTOUT
 SET &BEGCOUNT = &SORTOUT
 GETFILE SORTOUT
 SET &ENDCOUNT = &SORTOUT
 DO WHILE &EOF = NO
   IF &SUBSTR(1:6,&BEGCOUNT) ¬= &SUBSTR(1:6,&ENDCOUNT) THEN DO
     WRITE ERREUR A LA RELECTURE DES DONNEES
   END
   SET &VOLSER   = &SUBSTR(1:6,&BEGCOUNT)
   SET &TOTREADB = &VAL(&SUBSTR(09:17,&BEGCOUNT)
   SET &CACREADB = &VAL(&SUBSTR(21:29,&BEGCOUNT)
   SET &TOTWRITB = &VAL(&SUBSTR(33:41,&BEGCOUNT)
   SET &DASWRITB = &VAL(&SUBSTR(45:53,&BEGCOUNT)
   SET &CACWRITB = &VAL(&SUBSTR(57:65,&BEGCOUNT)
   SET &TOTREADE = &VAL(&SUBSTR(09:17,&ENDCOUNT)
   SET &CACREADE = &VAL(&SUBSTR(21:29,&ENDCOUNT)
   SET &TOTWRITE = &VAL(&SUBSTR(33:41,&ENDCOUNT)
   SET &DASWRITE = &VAL(&SUBSTR(45:53,&ENDCOUNT)
   SET &CACWRITE = &VAL(&SUBSTR(57:65,&ENDCOUNT)
   SET &TOTREAD  = &TOTREADE - &TOTREADB
   SET &CACREAD  = &CACREADE - &CACREADB
   SET &TOTWRIT  = &TOTWRITE - &TOTWRITB
   SET &DASWRIT  = &DASWRITE - &DASWRITB
   SET &CACWRIT  = &CACWRITE - &CACWRITB
   SET &CALCUL   = &TOTREAD+&TOTWRIT
   SET &CALCUL   = &STR(..........)&CALCUL
   SET &CALLEN   = &LENGTH(&CALCUL)
   SET &ACTIVITY = &SUBSTR(&CALLEN-9:&CALLEN,&CALCUL)
   IF &TOTREAD ¬= 0 THEN DO
     SET &CALCUL  = 100*&CACREAD/&TOTREAD
     SET &CALCUL  = &STR(........)&CALCUL
     SET &CALLEN  = &LENGTH(&CALCUL)
     SET &RATIORC = &SUBSTR(&CALLEN-7:&CALLEN,&CALCUL)
   END
   ELSE +
     SET &RATIORC = &STR(   N/A  )
   IF &TOTWRIT ¬= 0 THEN DO
     SET &CALCUL  = 100*&TOTREAD/&TOTWRIT
     SET &CALCUL  = &STR(........)&CALCUL
     SET &CALLEN  = &LENGTH(&CALCUL)
     SET &RATIORW = &SUBSTR(&CALLEN-7:&CALLEN,&CALCUL)
   END
   ELSE +
     SET &RATIORW = &STR(   R/O  )
   WRITE  ! &VOLSER ! &ACTIVITY ! &RATIORC ! &RATIORW !
   GETFILE SORTOUT
   SET &BEGCOUNT = &SORTOUT
   GETFILE SORTOUT
   SET &ENDCOUNT = &SORTOUT
 END
 CLOSFILE SORTOUT
 WRITE  =============================================
 FREE ALL
END

To use the CLIST:

o      Choose a revelant period for disk activity.

o      SETCACHE ON for all the volumes behind the 3990 you
      want to tune.

o      Run the following JCL at the beginning of the interval to
      execute LISTDATA COUNTS and save the results in a
      sequential file.

      //jobname   JOB  your.job.card
      //*
      //BASCULE  EXEC PGM=IDCAMS
      //SYSPRINT  DD  SYSOUT=*
      //COUNT1    DD  DISP=SHR,DSN=your.vbs.library(CACHE1)
      //COUNT2    DD  DISP=SHR,DSN=your.vbs.library(CACHE2)
      //SYSIN     DD  *
       REPRO INFILE(COUNT2) OUTFILE(COUNT1)
      /*
      //LISTDATA EXEC PGM=IDCAMS
      //SYSPRINT  DD  DISP=SHR,DSN=your.vbs.library(CACHE2)
      //SYSIN     DD  *
       LISTDATA  COUNTS   VOL(volser)  UNIT(3380)  ALL
      /*
      //EXECUTE  EXEC PGM=IKJEFT01,DYNAMNBR=16,COND=(0,NE,BASCULE)
      //SORTLIB   DD  DISP=SHR,DSN=your.sortlib
      //SYSPROC   DD  DISP=SHR,DSN=your.clist.library
      //SYSTSPRT  DD  SYSOUT=*
      //SYSTSIN   DD  *
       %CACHE
      //SYSUT1    DD  DISP=SHR,DSN=your.vbs.library(CACHE1)
      //SYSUT2    DD  DISP=SHR,DSN=your.vbs.library(CACHE2)
      //

o      Run the JCL again at the end of the interval to execute
      LISTDATA COUNTS, save the result in another
      sequential file, and execute the CLIST.

You will get:

o      The number of I/Os for each volume
o      The read hit ratio
o      The read/write ratio.

Finally, SETCACHE OFF the volumes that do not meet the
required criteria.


NOTES

The read/write ratio is multiplied by 100 to increase the
accuracy  of the computations.  Therefore, to be a cache
candidate, the figure in the read/write ratio column must be
higher than 200 for the corresponding volume.

Auxiliary Storage Management uses the 'bypass cache'
attribute in commands to 3990 for page and swap datasets, so
do not SETCACHE ON for page or swap volumes.

Cache Fast Write is OK to use for temporary datasets,
especially SORTWORK files.


CONCLUSION

Using this CLIST we were quickly able to tune our 3990-3
configuration.  By not overloading the 32-megabyte cache
memory, we increased the read/hit ratio from  3 to 5% and
decreased average response time of cached volumes by 1 to 2
milliseconds.


Paris HervÄ
Systems Engineer
Groupe Trigone Informatique (France)                  c Xephon 1991

