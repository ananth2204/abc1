ISPF-based user survey

We recently installed a trial version of a software product
which runs under ISPF.  At the end of the trial period, we
needed a convenient way to poll TSO users about their
experience with the product.  I wanted to gather their
evaluations in a consistent format and automate as much of the
process as possible.  The traditional method of distributing
hardcopy questionnaires was impractical because the
geographical dispersion of our TSO users, not to mention the
clerical chore of gathering and tabulating the responses
manually.

The accompanying ISPF panel definition and two REXX
EXECs automate most aspects of administering the survey and
tallying the results.  During the week of the survey, a TSO
broadcast message invited the users to participate by typing in
the command TSO SURVEY.  The SURVEY EXEC, placed in
a library in the SYSPROC concatenation of the users' log-on
procedures, displays the SURVEYP panel which does the work
of ensuring that the individual questions are uniformly
answered.  The user may cancel the survey by pressing PF3 or
send it in by pressing ENTER.  The EXEC responds to the
ENTER key by copying the responses to a temporary file and
transmitting it to the designated survey collector.

The transmitted file consists of four records: the first contains
the user-id of the respondent and the answers to the survey
questions, the next three are images of the three free-form
comment lines provided on the panel.  Four records are always
transmitted, even if one or more of the comment lines are
blank.  All of this is designed to take as little of the
participants' time as possible and does not require that they
know anything about how to use the TSO TRANSMIT
command.  Notice that the XMIT command in the EXEC has
the NOLOG option in order to avoid requiring (or creating) a
log file on behalf of the user.

When the survey collector receives notification of incoming
surveys, the TSO RECEIVE command must be entered. At the
prompt for receiving options, be sure to type MOD and press
ENTER.  In this way all received responses will be added to
the end of the file which accumulates them.  If a great many
responses are anticipated, it would be wise to pre-allocate the
receiving file with space parameters sufficient to accommodate
the expected volume, in case the default space provided
automatically by the first use of the RECEIVE command
proves inadequate.

The name of the receiving file should be of the same form as
the file used by the TRANSMIT command
(userid.PRODUCT.SURVEY in this example).  While this
naming convention will preclude the survey collector from
participating in the survey, it has the benefit of not requiring
the typing of the receiving dataset's name each time a response
is received.

Once all of the responses have been received, the collector can
execute the tabulation EXEC by typing TSO RESULTS on a
command line.  The counts and averages are calculated and
written to a file named userid.PRODUCT.REPORT, which is
displayed using the ISPF browse facility.  The results are thus
available for copying into a memo or other document in
support of the recommendation to purchase or return the
product.  If additional late responses are received, the
RESULTS EXEC may be run again to create an updated report
file.  Use ISPF edit to extract free-form comments from the
receiving file for inclusion in the recommendation document if
desired.

The only problem encountered in actual practice was a single
user who ran with PREFIX OFF and was prevented by RACF
from creating the PRODUCT.SURVEY file when running the
SURVEY EXEC.  Ballot stuffing is not prevented by the
RESULTS EXEC, so if this is thought to be a potential
problem, a copy of the response accumulation file should be
sorted to detect multiple votes from the same user-id.  Note,
however, that the RESULTS EXEC depends on the response
records coming in sets of four, so the original accumulation file
should not be sorted.  Duplicate responses would have to be
deleted as a set using ISPF edit.  Be sure to change the
node.userid in the XMIT command of the SURVEY EXEC to
the node and id of the user chosen to receive the responses.


THE SURVEY EXEC

/* REXX */
 user = Userid()
 Address TSO
 Call MSG 'OFF'
 "FREE FI(SURVEY)"
 "ALLOC FI(SURVEY) DA(PRODUCT.SURVEY) NEW UNIT(TSODA) TRACKS" ,
        "SPACE(1) LRECL(80) RECFM(F,B) BLKSIZE(3120)"
 Address ISPEXEC
 send = 0
 "DISPLAY PANEL(SURVEYP)"
 If rc = 0 Then Do
     send = 1
     O.0 = 4
     O.1 = user TPW MPW EU AC CO US Y
     O.2 = C1
     O.3 = C2
     O.4 = C3
     ADDRESS MVS 'EXECIO 4 DISKW SURVEY ( STEM O. FINIS'
     Address TSO
     "XMIT node.userid DSN(PRODUCT.SURVEY)"
 End
 Address TSO
 "FREE FI(SURVEY)"
 "DELETE PRODUCT.SURVEY"
 Call MSG 'ON'
 If send = 1 Then Say "Survey completed. Thank you."
 Else Say "Survey cancelled."
 Exit


THE SURVEYP PANEL DEFINITION

)ATTR
% TYPE(TEXT) INTENS(LOW) SKIP(ON) COLOR(GREEN)
+ TYPE(TEXT) INTENS(LOW) SKIP(ON) COLOR(BLUE)
$ TYPE(TEXT) INTENS(HIGH) SKIP(ON) COLOR(TURQUOISE)
~ TYPE(TEXT) INTENS(HIGH) SKIP(ON) COLOR(RED)
_ TYPE(INPUT) CAPS(OFF) COLOR(WHITE)
@ TYPE(INPUT) CAPS(ON) COLOR(WHITE)
# TYPE(INPUT) COLOR(WHITE) JUST(RIGHT) PAD(NULLS)
)BODY
+---------------------$PRODUCT Evaluation       Survey+------------------------
+
+  Please take a few moments to answer the following questions to help
+  us evaluate the usefulness of the$PRODUCT+product ($PR+).
+  Your responses will automatically be sent to a central collection
+  point for tabulation. Thank you for your cooperation.
+
+ %1.+About how many times per week have you used$PR+? #TPW+
+ %2.+About how many minutes per week has$PR+saved you?#MPW+
+
+  Please rate$PR+on a scale of 1 to 10 on the following:
+ %3.+Ease of use (1 = difficult; 10 = very easy)?      #EU+
+ %4.+Accuracy (1 = not accurate; 10 = very accurate)?  #AC+
+ %5.+Completeness (1 = incomplete; 10 = very complete)?#CO+
+ %6.+Usefulness (1 = useless; 10 = very useful)?       #US+
+
+ %7.+Would you recommend that we acquire$PR+(Y or N)?  @Y+
+
+  If you wish, enter up to 3 lines of additional comments below:+
$>_c1                                                                         +
$>_c2                                                                         +
$>_c3                                                                         +
+                    $Press~ENTER$to send,~PF3$to cancel+                     +
)INIT
  .CURSOR = TPW
)PROC
    VER (&TPW,NB,NUM)
    VER (&MPW,NB,NUM)
    VER (&EU,NB,RANGE,1,10)
    VER (&AC,NB,RANGE,1,10)
    VER (&CO,NB,RANGE,1,10)
    VER (&US,NB,RANGE,1,10)
    VER (&Y,NB,LIST,Y,N)
)END


THE RESULT TABULATION EXEC - RESULTS

/* REXX -------------------------------------------------------------*/
/* This exec reads the userid.PRODUCT.RESULTS file which contains    */
/* the accumulation of 4-line responses received from users who      */
/* ran the SURVEY exec. The first line of each response set contains */
/* the responding user's userid followed by the following fields:    */
/* TPW = number of times per week the user used the product.         */
/* MPW = number of minutes per week saved by using the product.      */
/* EU = Ease-of-use rating from 1 to 10 (1 = hard; 10 = easy).       */
/* AC = Accuracy rating from 1 to 10 (1 = inaccurate; 10 = accurate).*/
/* CO = Completeness rating (1 to 10) (1 = incomplete; 10 = complete)*/
/* US = Usefulness rating from 1 to 10 (1 = useless; 10 = useful).   */
/* Y = Recommendation to buy product (Y or N).                       */
/* The number of surveys returned is counted and averages are        */
/* computed for each of the numerical responses.                     */
/* The number of 'Yes' and 'No' buy recommendations is also tallied  */
/* and reported.                                                     */
/*-------------------------------------------------------------------*/
Call MSG 'OFF'
"FREE FI(RESULTS)"
Call MSG 'ON'
"ALLOC FI(RESULTS) DA(PRODUCT.SURVEY) SHR"
"EXECIO * DISKR RESULTS (FINIS STEM RESULT."
If RC <> 0 then do
   Say "Error" RC "reading RESULTS DD, execution terminated."
   "FREE FI(RESULTS)"
   Exit RC
End
"FREE FI(RESULTS)"
responses = 0
yeas = 0
nays = 0
tpw_tot = 0
mpw_tot = 0
eu_tot = 0
ac_tot = 0
co_tot = 0
us_tot = 0
responses =  result.0 / 4
Do rec_ctr = 1 to (result.0 -3) by 4
   Parse var result.rec_ctr uid tpw mpw eu ac co us yn .
   tpw_tot = tpw_tot + tpw
   mpw_tot = mpw_tot + mpw
   eu_tot = eu_tot + eu
   ac_tot = ac_tot + ac
   co_tot = co_tot + co
   us_tot = us_tot + us
   If yn = "Y" then yeas = yeas + 1
   Else nays = nays + 1
End
tpw_avg = Format(tpw_tot / responses,,1)
mpw_avg = Format(mpw_tot / responses,,1)
eu_avg = Format(eu_tot / responses,,1)
ac_avg = Format(ac_tot / responses,,1)
co_avg = Format(co_tot / responses,,1)
us_avg = Format(us_tot / responses,,1)
exists = SYSDSN(PRODUCT.REPORT)
Address TSO
If exists = "OK" then Do
   Call MSG 'OFF'
   "DELETE PRODUCT.REPORT"
   Call MSG 'ON'
End
"ALLOC FI(REPORT) DS(PRODUCT.REPORT) SPACE(1) TRACKS " ,
   "RECFM(F,B) LRECL(80) BLKSIZE(3120) UNIT(TSODA)"
Queue " "
Queue "                   PRODUCT Survey Results"
Queue "                   ======================"
Queue " "
Queue "          Total number of responses............... " responses
Queue " "
Queue "          Average uses per week per user..........  " tpw_avg
Queue "          Average minutes saved per week per user. " mpw_avg
Queue "          Average ease-of-use score...............  " eu_avg
Queue "          Average accuracy score..................  " ac_avg
Queue "          Average completeness score..............  " co_avg
Queue "          Average usefulness score................  " us_avg
Queue " "
Queue "          Number in favor of acquiring the product:" yeas
Queue "          Number opposed to acquiring the product:  " nays
Queue " "
"EXECIO 16 DISKW REPORT (FINIS"
If RC <> 0 then do
   Say "Error" RC "writing REPORT DD, execution terminated."
   "FREE FI(REPORT)"
   Exit RC
End
Address ISPEXEC
"BROWSE DATASET(PRODUCT.REPORT)"
Address TSO
"FREE FI(REPORT)"
Exit


John Cornman
Senior Systems Programmer
Key Services Corporation (USA)                     c Xephon 1991

