Breaking and fixing the TSOLOCK

I have made some modifications to the program TSOLOCK,
which is described in the article Unattended ACF2 TSO Session
Security, (Issue 22, MVS Update), changing the environment
from ACF2 to TOP SECRET using the RACINIT macro.  Some
problems have been discovered and fixed, and I believe these
problems are universal to other security packages.  In my
program, TSOLOCK has been re-named IKJRINIT

PROBLEM ONE

When TOP SECRET displays the prompt 'TSS750A PLEASE
ENTER YOUR TOP SECRET PASSWORD', you can hit the
ATTN key several times until '|I' shows, get 'READY' on the
screen, key in ISPF, get the ISPF primary screen, and then do
anything you want.

No matter how many STAXs have been issued by user programs,
sufficient attention interruptions can reach the TMP's attention
routine, and this will terminate all the stacked tasks and return
control to the TMP.

To fix this problem, clearing TSBSTAX of TSB can stop TCAS
receiving any other further attention.

* THIS PROGRAM IS MODIFIED FROM TSOLOCK (ISSUE 22)
*
* MODIFICATION:                                                       *
*   1: USE RACINIT MACRO FOR TOP SECRET ENVIRONMENT
*
*   2: ZERO OUT TSBSTAX TO PREVENT BREAKAGE BY HITTING
CONSECUTIVE    *
*      ATTENTIONS(ATTN KEY). RESTORE TSBSTAX AFTER PASSWORD
VALIDATION*
IKJRINIT CSECT
         STM   14,12,12(13)
         BALR  R12,0
         USING *,R12
         LA    R0,1          (REF: ISSUE 10, DYNAMIC APF AUTH.)
         SVC   235            TURN ON AUTH.
         MODESET KEY=ZERO
         .
         .
RINIT1   STAX  STAX2,REPLACE=NO
         STFSMODE
PUTMSG   TPUT  LOCKMSG,LOCKMSGL,FULLSCR
         TGET  DUMMY,0
PUTMSG1  B PUTMSG
RACFDEL  DS    0H
         RACINIT ENVIR=DELETE,MF=(E,RACINIT)
         L     R9,X'224'
         L     R9,X'3C'(R9)             (R9)=TSB ADDR.
         LA    R9,X'51'(R9)             (R9)=TSBSTAX ADDR.
         MVC   TSBSTAX(1),0(R9)         SAVE TSBSTAX
         MVC   0(1,R9),=X'00'      ===> IGNORE ATTN INTERRUPT
         LA    R3,UCBUID                ADDRESS OF USERID
ASKPSWD  RACINIT ENVIR=CREATE,USERID=(R3),MF=(E,RACINIT)
         LTR   R15,R15                  NORMAL END ?
         BNZ   ASKPSWD                  NO, ASK PASSWORD AGAIN
         MVC   0(1,R9),TSBSTAX     ===> PUT TSBSTAX BACK
ENDUP    DS    0H
         MODESET KEY=NZERO,MODE=PROB
         SR    R0,R0                    TURN OFF AUTH
         SVC   235
         RETURN (14,12),RC=0
*----------------------------------
         DROP  R12
STAX2    SAVE  (14,12)
         BALR  R12,0
         USING *,R12
         STAX  STAX2,REPLACE=NO
         .
         .
         .
         RETURN (14,12),RC=0
*----------------------------------
TSBSTAX  DC    F'0'                     SAVE THE TSBSTAX
         .
         .
         .
XRACINIT RACINIT MF=L
RACINIT  DS    XL60
         LTORG
         END

PROBLEM TWO

When 'TSOLOCK' appears on the screen, you can hit ATTN and
then PA1 key almost simultaneously to break the command, ie
you do not need a password to unlock your TSO.

When the PA1 key is hit before the second STAX is re-issued, the
attention is handled outside of IKJRINIT.  Hence the command is
broken.  This can be avoided by writing another program to issue
the first STAX and then link to the IKJRINIT.

*  THIS IS THE FRONT END OF IKJRINIT(TSOLOCK) TO PREVENT THE
BREAKAGE *
*  BY HITTING ATTN AND PA1 KEY SIMULTANEOUSLY                         *
IKJLOCK  CSECT
         STM   14,12,12(13)
         BALR  R12,0
         USING *,R12
         LA    R0,1
         SVC   235          TURN ON AUTH.
LOOP1    DS    0H
         STAX  STAX1,REPLACE=NO    FIRST ATTN EXIT
         LA    R15,=X'FF'
LINK1    LINK  EP=IKJRINIT
         LTR   R15,R15         NORMAL RETURN FROM IKJRINIT ?
         BNZ   LOOP1           NO, LOOP
ENDUP    DS    0H              END
         SR    R0,R0
         SVC   235             TURN OFF AUTHORIZATION
         RETURN (14,12),RC=0   BYE
* -----------------------
         DROP  R12
STAX1    SAVE  (14,12)
         BALR  R12,0
         USING *,R12
         RETURN (14,12),RC=0
*-----------------------------------
         LTORG
         END


James Liu
Senior Systems Programmer (USA)	â‚¬ Xephon 1989

