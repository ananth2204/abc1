DFRMM

INTRODUCTION

DFRMM is IBM's first major move into the tape management
system area. This product was designed and developed in the
software laboratories at IBM Warwick, UK. This article describes
the concepts and facilities that are part of the DFRMM product.

COMMON TERMS

Let us begin by describing some common terms used in
DFRMM.

RMM

Removable Media Manager.

Pool

A pool is a group of shelf locations in the removable media library
whose rack numbers share a common prefix.

Shelf location

A shelf location is a single space on a shelf where you store a
volume. DFRMM defines a shelf location in the removable media
library by a rack number, and a shelf location in a storage location
by a bin number.

Rack number

A six-character identifier that corresponds to a specific volume
shelf location in the installation removable media library.

Master volume

A volume that contains valid data and cannot be written to unless
the dataset names match or the volume is changed to 'user' status.

VRS

Vital Record Specifications (VRSs) are definitions that describe
how datasets and volumes are to be retained within DFRMM.

Scratch volume

A volume that is available to satisfy non-specific volume mount
requests.

Storage location

A location that is physically separate from the main DFRMM
removable media library where volumes are stored and retained
for purposes such as disaster recovery. At the current time,
DFRMM defines three storage locations: remote, local, and
distant.

Bin number

A shelf location where a volume resides in a storage location.

User volume

A volume that can be overwritten until the volume expires.

INSTALLATION

DFRMM is installed in the existing MVS zones using normal
SMP/E receive, apply, and accept. All load modules are link-
edited into SYS1.LINKLIB or SYS1.LPALIB. The DFRMM
hooks are installed at installation time by including object code in
the OPEN/CLOSE/EOV modules. There is a dependency that the
OPEN/CLOSE/EOV modules are at the latest level as shipped by
IBM. The following is a list of the OPEN/CLOSE/EOV modules
that DFRMM link-edits into:

o      IFG0194A

o      IG00020

o      IGC0005E

o      IGC0001I

o      IGC0002C.

There is also a dependency by DFRMM on the transfer of control
tables for some of the CSECTs that are part of the previous load
modules. These CSECTs are:

o      IFG0194F

o      IFG0195C

o      IFG0195K

o      IFG0195N

o      IFG0196P

o      IFG0196N

o      IFG0200Y

o      IFG0551H

o      IFG0553F

o      IFG0552B

o      IFG0552D

o      IFG0232S.

The activation of the interface is completed by the DFRMM
subsystem interface initialization module, EDGSSSI.

Support is also provided for existing EMODVOL1 or
OMODVOL1 routines. These routines are called after DFRMM
has completed its functions.

The following libraries are created as part of the ISFP/PDF
interface:

SYS1.SEDGEXE1  -  SYSEXEC/SYSPROC    - REXX EXECs

SYS1.SEDGMSG1  -  ISPMLIB                       - message
library

SYS1.SEDGPNL1  -  ISPPLIB                         - panel library.

SYS1.SEDGSKL1  -  ISPSLIB                         - skeleton
library.

SYS1.SEDGTBL1  -  ISPTLIB                        - table library.

A REXX EXEC is available (EDGRMLIB), which LIBDEFs the
DFRMM libraries and then calls the RMM ISPF interface.

The IEFSNNxx  and IKJTSOxx PARMLIB members will need
to be updated.Three other members can optionally be updated:
GRSRNLxx, SCHEDxx, andSMFPRMxx.

An entry must be included for DFRMM in the IEFSSNxx
member as DFRM, EDGSSSI or simply DFRM.

If the initialization module EDGSSSI is coded, DFRMM will be
fully enabled. If this route is chosen, all tape mounts will be
rejected unless the subsystem is also active. Any subsystem name
can be used, up to four characters in length. The started task name
for DFRMM does not have to match the subsystem name unless
you omit EDGSSSI from the IEFSSNxx entry. It is worth noting
that the DFRMM entry must be inserted before the NetView of
the CA-ACF2 entry if applicable.

The PARMLIB member IKJTSOxx must be updated to authorize
DFRMM commands and programs that will be used with TSO
and the TSO service facility.

There are two types of SMF record that can be generated by
DFRMM: audit records and security records.

For this purpose two SMF record numbers in the range 128 to
255 must be selected and SMFPRMxx updated accordingly. It
should be noted that this facility is optional and either record can
be generated.

DFRMM requires the use of two datasets: the DFRMM
CONTROL dataset and the DFRMM JOURNAL dataset. The
DFRMM control dataset is a VSAM KSDS and contains the
remote media inventory. The record size is variable with a range
between 512 bytes and 9216 bytes. A normal IDCAMS define
cluster is used to create this dataset and a special DFRMM utility,
EDGUTIL, is used to initialize the control dataset.

The DFRMM journal dataset is a sequential structure and is used
to contain a record of all changes that are made to the control
dataset. An interesting point to note here is that this dataset is
optional. However, without this dataset no easy method of
recovering the control dataset is possible.

SYSTEM OPTIONS

DFRMM has its own PARMLIB member(s), EDGRMMxx, and
is divided into five commands.

Option command

This part defines the system options. Here you define information
such as:

o      Control dataset name

o      Journal dataset name

o      Maximum retention period

o      Operational running mode

o      Retention period

o      SMF record numbers for audit and security records

o      The RACF tape support required

o      The tape dataset UNCATALOG option.

REJECT command

This command is used to reject a range of tape volume serial
numbers on particular systems. This could be used when an
installation has separate development and production systems.

VPOOL command

This command defines the installation pools to DFRMM. The
information that can be defined per pool is:

o      Expiration date check support. (This option controls the
automatic processing of unexpired tapes at the pool level.)

o      Prefix of the shelf location within the pool.

o      Whether RACF tape profile processing is enabled within the
pool.

o      Type of pool: rack or scratch.

MNTMSG command

This command allows an installation to tailor the normal MVS
mount and fetch messages so that the volume serial number, pool
number, and rack number are displayed. For example:

      IEF233A M 160, 001000,,JOBTAPE,JOB00, - RACK - 001000

This can help the operators when mounting or locating tapes.

SECCLS command

This command allows an installation to define security classes for
volumes and datasets. It should be noted that these are internal
security classes and do not affect RACF processing. These classes
are stored in the control dataset.

INITIALIZATION

To start the DFRMM subsystem address space, a procedure must
be created in a system PROCLIB and a start command for
DFRMM must be issued. For example:

      S DFRMM

This command should be placed in the COMMNDxx member of
SYS1.PARMLIB.

You can include the MASTER (control dataset) and JOURNAL
DD cards in the start member, but it is advisable to identify these

two datasets to DFRMM through the PARMLIB member,
EDGRMMxx.

To disable the DFRMM subsystem interface the following
commands must be issued:

      S DFRMM,OPTF=RESET
      P DFRMM

To re-enable, an S DFRMM command is all that is required.

To restart the DFRMM subsystem the following command must
be issued:

      F DFRMM,M=xx

where xx is the suffix of the EDGRMMxx member. When this
command is issued the subsystem stops and then re-initializes
itself.

THE MEDIA POOL

In the implementation phase of DFRMM an important issue is the
design of the volume pools. A pool contains a group of rack
numbers that all share a common prefix. In DFRMM there are
two types of pool: the rack pool and the scratch pool.

A rack pool is typically used to hold volumes that are read only.
The documentation defines software product tapes as prime
candidates for this pool. A scratch pool is a set of shelf locations
used to satisfy non-specific mount requests.

The DFRMM manuals go into a lot of detail on how to plan, size,
and design storage pools. I cannot stress enough the importance
of understanding and designing the storage pool strategy right at
the initial stages of implementation. A good recommendation is to
define one scratch pool for the entire removable media library.

DFRMM RUNNING MODES

There are four running modes available with DFRMM. These are
specified in the option command in the DFRMM PARMLIB
member EDGRMMxx.

Manual mode

When DFRMM is executing in this mode, you can use DFRMM
TSO commands, DFRMM ISPF panels, and inventory
management functions. When DFRMM is in manual mode,
DFRMM does not validate volume or record volume usage.

Record mode

When DFRMM is executing in record mode, it will record
information about tape volumes used, dataset names, and
information about volume owners. It does not validate or reflect
volumes in this mode.

Warning mode

When DFRMM is executing in warning mode, it will validate
tape volumes as they are used. If it discovers any errors, it will
issue warning messages without rejecting tapes.

Protect mode

When DFRMM is executing in protect mode, all tape requests are
validated and information is recorded in the control dataset.

It is worth noting that once DFRMM is in full protect mode it will
control all scratch mounts across all tape device types. There is no
way to restrict DFRMM to control scratch mounts on only one
device type.

RACF SUPPORT

The type of RACF support that is required is specified in the
option command in the active DFRMM PARMLIB member,
EDGRMMxx. This is the system-wide option. There is also a
RACF option at the pool level. This will allow certain pools to run
without security. There are a number of DFRMM resources that
can be protected with RACF profiles in the FACILITY class.

An example of this is RMM.RESET.SSI. This controls the use of
the RESET facility for removing DFRMM from the system, ie use
of the S DFRMM,OPT=RESET command

DFHSM INTERFACE

DFRMM provides support for DFHSM to use tapes from either a
DFHSM-managed tape pool or the system scratch pool. This is
specified through parameters in the DFHSM PARMLIB member.

DFRMM uses and supplies the DFHSM tape volume exit
ARCTVEXT. DFHSM initiates this exit when it needs to notify a
tape management system to expire one of its tapes. ARCTVEXT
calls the DFRMM program EDGDFHSM.

Two very important APARs are both supported by DRFMM:

o      OY50997 - ARCTVEXT is invoked for expiring CDS back-
up tapes.

o      OY58292 - ARCTVEXT will now also be invoked when the
CDS back-up function fails.

There is currently a compatibility problem between DFHSM and
DFRMM when the DFHSM TAPEREPL command is issued.
This command would typically be issued at a disaster recovery
site where hundreds of alternative volumes could be involved.
When the mount is issued for the alternative volume (ie the
replacement volume), DFHSM issues the open with the dataset
name of the original volume (ie the replaced volume). DFRMM
will then reject this mount because of a dataset name mismatch.

OEM tape management systems do not have these problems as
they treat products like DFHSM as external data managers and
only check that the high-level qualifier of the dataset name is
correct.

VITAL RECORDS

A vital record specification is used to control the movement and
retention of tape volumes. When creating the vital record
specifications either dataset names or volume serial numbers can
be used to determine how long to retain tapes. Vital record
specifications are also used to control the movement of tapes
between the removable media library and storage locations.
DFRMM currently defines three storage locations: local, distant,
and remote.

DFRMM also defines one other location (library), which is the
removable media library.

There are three ways that vital record specifications can be
defined:

1      By dataset name and minimum generation. For generation
datasets this type of vital record specifies the minimum number of
copies or generations that should be kept. For non-GDG datasets,
DFRMM considers each occurrence of a dataset to be a single
generation.

2      By dataset name and elapsed days.

3      By volume serial number.

If no vital record specification is found for a volume or dataset, the
default retention period in the active DFRMM PARMLIB
member EDGRMMxx is used. This value is added to the current
date to calculate the volume's new expiry date.

CLOSED CYCLE GDG PROCESSING

Closed cycle GDG processing is a method commonly used by
installations that have no tape management system or do not
define a scratch pool. In closed cycle GDG processing, the oldest
generation's tapes are used to satisfy a new generation. DFRMM
fully supports closed cycle GDG processing because it allows one
generation of the same GDG to be overwritten with another
generation of the same GDG. One of the problems with using
closed cycle GDG processing under DFRMM is that the size of a
new generation can vary, which can lead to some of the pre-
assigned volumes not being used. To avoid this problem, correct
vital record specifications must be used so that DFRMM will
retain all volumes that contain any of the GDG generations.

Those users that have no tape management systems will inevitably
be using closed cycle GDG processing. If they are considering
moving to a tape management system then DFRMM will fully
support that environment. It is strongly recommended, however,
that a scratch pool system is used to obtain the full benefits of a
tape management system.

EDGHSKP UTILITY

A utility program (EDGHSKP) is available, which will perform
the following functions:

Vital record processing

This process will determine which volumes and datasets are kept.
It will also determine which volumes are eligible to be moved to
other storage locations.

Expiry processing

This process identifies volumes that are ready to expire. DFRMM
checks the expiry dates of all volumes not managed by vital
record specification and, if it finds that they have expired, will set
the volume into PENDING RELEASE status. It normally takes
two runs of EDGHSKP before a volume is returned to scratch
status. If this job is run daily it will take at least 24 hours before
these volumes are available for scratch mounts.

Storage location processing

This process will identify datasets and volumes that are to be
moved from the library to a storage location or between storage
locations.

BACK-UP AND RECOVERY

Two programs are available to back up the control dataset. When
the DFRMM subsystem is active, EDGHSKP can be used. When
the subsystem is not active, EDGBKUP must be used. Both
programs produce back-up copies using the AMS REPRO
command. Once the back-up has been completed the journal
dataset is reset. There is also an option to back up the journal
dataset.

Full recovery of the DFRMM control dataset is available and is
very straightforward to implement. You can forward recover the
control dataset using an old back-up level and then use the
journals to bring DFRMM up to the precise moment that the
failure occurred. An important point to mention is that DFRMM
will attempt automatic recovery using the current journal. If
automatic recovery fails through an I/O error on the journal or the
control dataset, then DFRMM will notify the operator that
automatic recovery has failed and that manual recovery will be
required.

ISPF/PDF INTERFACE

DFRMM comes with a very user-friendly ISPF/PDF interface.
The ISPF dialog has been designed to cater for general users,
systems programmers, tape librarians, and storage administrators.

Through RACF profiles, users are assigned different levels of
authority depending on the user group that they are assigned to.

The panels offer functions such as:

o      Defining new volumes

o      Adding shelf locations

o      Confirming volume movement and action

o      Updating owner information

o      Releasing volumes

o      Listing volumes by volume serial number

o      Listing volumes by dataset name.

TSO sub-commands are also available to request DFRMM
functions.

You can create your own REXX EXECs or CLISTs and embed
DFRMM command calls within them. Each command will return
the information as REXX variables. The variables can take the
form of 'stems'. This can be extremely useful when processing a
list of volumes.

MIGRATION

While this article was being written some users of DFRMM were
either at the pilot test level or the service offering. The
DFSMSrmm level that is the GA code has now become available
and some enhancements that appear in this level are:

o      Support for the SMS tape and the IBM 3495 tape library
dataserver.

o      Support for some special keyword dates, such as 99000 and
98000, which are available in other tape management systems.
This support is implemented through an RMM installation exit.

o      Vital records have been enhanced.

o      Update to EDGINERS (volume initialization program).

It seems that to move to the DFSMSrmm level from a previous
level is very straightforward and requires minimal effort. No co-
existence PTFs are required, the DFRMM control dataset can be
shared between different levels, and you can move forward or go
back to the previous level if required.

An extremely useful red book is available that describes the
planning process for conversion to DFSMSrmm. The book
describes the process that is required to convert from other
vendors' tape management systems to DFSMSrmm. Also
included are two sample extract programs and information on the
IBM conversion program. This program uses as input the
sequential output created by the extract programs. The form
number and title of this manual is GG24-3988 Planning Guide
for Conversion to DFSMSrmm.

R F Perretta
Senior  Systems Programmer (UK)                                         c Xephon

