An alternative back-up method

A recent enhancement to DFHSM was a programming interface
that allows users to write programs that use the services of
DFHSM.

Currently, eight macros are available that request the following
services:

ARCHBACK      Back up a specific dataset
ARCHBDEL      Delete back-up versions of a dataset
ARCHDEL      Delete a migrated dataset
ARCHMIG      Migrate a dataset
ARCHRCAL      Recall a migrated dataset
ARCHRCOV      Recover a back-up version or a dump copy of
                        a dataset
ARCHSEND      Issue a DFHSM-authorized user command
ARCFMWE      Free up storage in the CSA.

These macros are only available in execute form: there is no
list form provided. This makes it difficult to code re-entrant
programs, so I hope this will be a future enhancement. Also,
these macros can only handle one dataset at a time, so each
macro must be invoked individually for each dataset processed.

Contained in this article is an interface to DFHSM, which can
be used to back up datasets in application code at the time the
datasets are updated or created.

This interface could be used in addition to the current methods
(batch TMP and ARCINBAK), which are available. An
advantage in using this interface is that the back-up strategy
can be incorporated into the program design.

All that is required is a call to HSMUTIL, for example:

         CALL  HSMUTIL,(DSNTAB,GLOBAL)
               .
               .
               .
DSNTAB   DC    0X
DSNAME   DC    CL44'BACKUP.DATASET'
* Name of dataset to be backed up
DSNOPT   DC    C'1'
* Option flag. 1=Dataset back-up option
DSNENQ   DC    C'Y'
* Serialization flag. Specifies whether DFHSM is to serialize the
* dataset during back-up processing. Y=YES, N=NO.
DSNTEST  DC    C'N'
* Test flag. Specifies whether to refrain from sending a request to
* DFHSM. Specify Y or N. In both cases the parameters are checked
* for correctness. This field should be set to Y during initial
* program testing.
DSNRC   DC    PL3'0'
* RETURN CODE
DSNRSC  DC    PL3'0'
* REASON CODE

For the values returned in DSNRC, refer to messages
ARC13XX in the DFHSM Version 2 Release 5.0 Messages
manual. DSNRC will contain the MWE reason code.

DSNTAB is a variable table, and the number of entries is
determined by the value that is contained in the data item
TABETS. This will allow more than one dataset to be backed
up per HSMUTIL invocation, for example:

GLOBAL   DS    0F
RETCODE  DC    F'0'
* High level return code
TABETS   DC    F'1'
* Number of entries continued in DSNTAB

RETCODE will contain, on return from HSMUTIL, one of the
following values:

0      Successful execution.

4      One or more errors have occurred. DSNRC will contain
      the return code for the individual table entries.

8      Internal error.

12      Data item TABETS contains a zero or minus value.

The example shown is an Assembler-level call specification,
but HSMUTIL can be invoked by a high-level language such as
COBOL.

HSMUTIL has run successfully on an MVS/XA and MVS/ESA
system using DFHSM 2.4 and 2.5.

For more information on the available DFHSM macros, please
refer to the DFHSM Version 2 Release 5.0 Users Guide SH35-
0093.

HSMUTIL CSECT
***********************************************************************
*        MODULE NAME.   HSMUTIL.                                      *
*        REMARKS.       THIS MODULE WILL ISSUE DFHSM ARCHBACK MACROS, *
*                       SO THAT HBACKDS COMMANDS WILL BE ISSUED FOR   *
*                       THE REQUESTED DATASETS.                       *
*        REGISTER CONVENTIONS = STANDARD CONVENTIONS.                 *
*                    REGISTER  2       = BAL REGISTER                 *
*                    REGISTER  3       = AVAILABLE                    *
*                    REGISTER  4       = @ DSN TABLE                  *
*                    REGISTER  5       = @ GLOBAL PARM                *
*                    REGISTER  6       = AVAILABLE                    *
*                    REGISTER  7       = NO OF DSN TABLE ENTRIES      *
*                    REGISTER  8       = AVAILABLE                    *
*                    REGISTER  9       = AVAILABLE                    *
*                    REGISTER  10      = AVAILABLE                    *
*                    REGISTER  11      = AVAILABLE                    *
*                    REGISTER  12      = BASE REGISTER                *
*                    REGISTER  13      = SAVE AREA ADDRESS            *
*                    REGISTER  14      = RETURN ADDRESS               *
*                    REGISTER  15      = INITIAL ENTRY ADDRESS        *
*             INPUT = REG1 POINTS TO TWO FOUR-BYTE ADRESSES WHICH     *
*                     CONTAIN:                                        *
*                     1. DSN TABLE @.                                 *
*                     2. GLOBAL PARAMETER @.                          *
***********************************************************************
NEXTSA   EQU   8                       POINTER TO PREVIOUS SAVEAREA
ARCHBACK EQU   X'F1'                   BACK UP SPECIFIC DATASET
ARCHBDEL EQU   X'F2'                   DELETE BACK-UP VERSION OF
*                                      A DATASET
ARCHDEL  EQU   X'F3'                   DELETE A MIGRATED DATASET
ARCHMIG  EQU   X'F4'                   MIGRATE A DATASET
ARCHRCAL EQU   X'F5'                   RECALL A MIGRATED DATASET
ARCHRCOV EQU   X'F6'                   RECOVER A BACK-UP VERSION OR
*                                      A DUMP COPY OF A DATASET
ARCHSEND EQU   X'F7'                   ISSUE A DFHSM AUTHORIZED
*                                      USER COMMAND
ARCFMWE  EQU   X'F8'                   FREE UP STORAGE IN THE
*                                      COMMON STORAGE AREA
YES      EQU   C'Y'                    YES
NO       EQU   C'N'                    NO
WSUBPOOL EQU   0                       SUBPOOL ZERO
NOSDWA   EQU   12                      NO SDWA PASSED TO ESTAE
         SAVE  (14,12),,HSMUTIL_&SYSDATE-&SYSTIME
         USING HSMUTIL,R12              SET UP BASE ADDRESSABILITY
         LR    R12,R15                  ENTRY POINT ADDRESS
         LM    R4,R5,0(R1)              PARAMETERS
         USING DSNTAB,R4                INFORM THE ASSEMBLER
         USING GLOBAL,R5                INFORM THE ASSEMBLER
         GETMAIN RC,LV=WORKLEN,SP=WSUBPOOL,LOC=BELOW,                  X
               RELATED=(FREE,'GET STORAGE')
         LTR   R15,R15                  GETMAIN OBTAINED?
         BNZ   SAERROR                  NO-
         LR    R14,R1                   CLEAR
         LA    R15,WORKLEN              THE
         SR    R10,R10                  GOTTEN
         SR    R11,R11                  AREA
         MVCL  R14,R10                  CLEAR
         ST    R13,4(,R1)               ADDRESS OF PREVIOUS SA
         ST    R1,8(,R13)               ADDRESS OF NEXT SA
         LR    R13,R1                   OUR SAVEAREA ADDRESS
         USING WORKAREA,R13             ADDRESSABILITY
         MVC   EYECATCH,=CL8'PDSUPDWA'  EYE CATCHER
SETESTAE EQU   *
         STCM  R13,B'1111',ESTPARM1     MOVE TO ESTAE PARAM
         LA    R0,WORKLEN(0,0)          WORK AREA LENGTH
         STCM  R0,B'1111',ESTPARM2      MOVE TO ESTAE PARAM
         LA    R0,WSUBPOOL              WORK AREA SUBPOOL NO
         STCM  R0,B'1111',ESTPARM3      MOVE TO ESTAE PARAM
         ESTAE RECOVERY,CT,PARAM=ESTAPARM,MF=(E,ESTAEW)
GCHECK   EQU   *
         ICM   R7,B'1111',TABETS        NO OF TABLE ENTRIES
         LTR   R7,R7                    CHECK FOR
         BNP   TENTERR                  ZERO|MINUS
         MVC   RETCODE,=F'0'            SET THE GLOBAL RETURN CODE
         B     BACKUP                   LET'S BACK UP THE DATASETS
BACKUP   EQU   *
         CLI   DSNOPT,ARCHBACK          HBACK COMMAND?
         BE    TSTENQ                   YES-
         MVC   RETCODE,=F'4'            INDICATE AN ERROR
         MVC   DSNRC,=PL3'1000'         INVALID OPTION
         MVC   DSNRSC,=PL3'0'           REASON CODE
         B     NXTTABET                 NEXT TABLE ENTRY
TSTENQ   EQU   *
         CLI   DSNENQ,YES               DSN ENQ OPTION?
         BNE   NOENQ                    ENQ = N?
         CLI   DSNTEST,NO               TEST = N?
         BNE   TEST1                    NO-
         BAL   R2,VAR1                  ENQ=Y AND TEST=N
         B     SETRC                    SET THE RETURN CODE
TEST1    EQU   *
         CLI   DSNTEST,YES              TEST = Y?
         BNE   INVTEST                  NO- INVALID
         BAL   R2,VAR2                  ENQ=Y AND TEST=Y
         B     SETRC                    SET THE RETURN CODE
NOENQ    EQU   *
         CLI   DSNENQ,NO                ENQ = N?
         BNE   INVENQ                   NO-
         CLI   DSNTEST,NO               TEST = N?
         BNE   TEST2                    NO-
         BAL   R2,VAR3                  ENQ=Y AND TEST=N
         B     SETRC                    SET THE RETURN CODE
TEST2    EQU   *
         CLI   DSNTEST,YES              TEST = Y?
         BNE   INVTEST                  NO- INVALID
         BAL   R2,VAR4                  ENQ=Y AND TEST=Y
         B     SETRC                    SET THE RETURN CODE
INVTEST  EQU   *
         MVC   RETCODE,=F'4'            INDICATE AN ERROR
         MVC   DSNRC,=PL3'1001'         INVALID TEST PARM
         MVC   DSNRSC,=PL3'0'           REASON CODE
         B     NXTTABET                 NEXT TABLE ENTRY
INVENQ   EQU   *
         MVC   RETCODE,=F'4'            INDICATE AN ERROR
         MVC   DSNRC,=PL3'1002'         INVALID ENQ PARM
         MVC   DSNRSC,=PL3'0'           REASON CODE
         B     NXTTABET                 NEXT TABLE ENTRY
SETRC    EQU   *
         CVD   R15,DW                   CONVERT TO DECIMAL
         ZAP   DSNRC,PRETCODE           RETURN CODE
         LTR   R15,R15                  SUCCESSFUL?
         BZ    CONVRSN                  YES-
         MVC   RETCODE,=F'4'            INDICATE AN ERROR
CONVRSN  EQU   *
         CVD   R0,DW                    CONVERT TO DECIMAL
         ZAP   DSNRSC,PRESCODE          REASON CODE
NXTTABET EQU   *
         LA    R4,DSNTBELN(,R4)         NEXT TABLE ENTRY
         BCT   R7,BACKUP                DO WHILE R7 > 0?
         B     RETURN                   RETURN TO CALLER
VAR1     EQU   *
         ARCHBACK DSN=(R4),             DATASET TO BACK UP             X
               WKAREA=HSMWKARA,         DFHSM WORK AREA                X
               WAIT=YES,                LET'S WAIT FOR HSM             X
               DSNENQ=YES,              SERIALIZE                      X
               TEST=NO                  FOR REAL
         BR    R2                       RETURN TO CALLER
VAR2     EQU   *
         ARCHBACK DSN=(R4),             DATASET TO BACK UP             X
               WKAREA=HSMWKARA,         DFHSM WORK AREA                X
               WAIT=YES,                LET'S WAIT FOR HSM             X
               DSNENQ=YES,              SERIALIZE                      X
               TEST=YES                 FOR REAL
         BR    R2                       RETURN TO CALLER
VAR3     EQU   *
         ARCHBACK DSN=(R4),             DATASET TO BACK UP             X
               WKAREA=HSMWKARA,         DFHSM WORK AREA                X
               WAIT=YES,                LET'S WAIT FOR HSM             X
               DSNENQ=NO,               SERIALIZE                      X
               TEST=NO                  FOR REAL
         BR    R2                       RETURN TO CALLER
VAR4     EQU   *
         ARCHBACK DSN=(R4),             DATASET TO BACK UP             X
               WKAREA=HSMWKARA,         DFHSM WORK AREA                X
               WAIT=YES,                LET'S WAIT FOR HSM             X
               DSNENQ=NO,               SERIALIZE                      X
               TEST=YES                 FOR REAL
         BR    R2                       RETURN TO CALLER
SAERROR  EQU    *
         MVC   RETCODE,=F'8'            INTERNAL ERROR
         B     RETURN2                  RETURN TO CALLER
FREEERR  EQU    *
         ABEND 999,DUMP                 CANNOT RECOVER
TENTERR  EQU   *
         MVC   RETCODE,=F'12'           TABLE ENTRIES OUT OF RANGE
         B     RETURN                   RETURN TO CALLER
RETURN   EQU   *
         ESTAE 0                        CANCEL ESTAE ROUTINE
         LR    R1,R13                   FREEMAIN ADDRESS
         L     R13,PREVSA               ADDRESS OF THE PREVIOUS SA
         FREEMAIN RC,LV=WORKLEN,A=(1),SP=WSUBPOOL,                     X
               RELATED=(GETIO,'GET I/O STORAGE')
         LTR   R15,R15                  FREEMAIN OKAY?
         BNZ   FREEERR                  NO-
RETURN2  EQU   *
         RETURN (14,12),,RC=0           RETURN TO THE INITIATOR
RECOVERY DS    0H
         USING *,R9                     INFORM THE ASSEMBLER
         LR    R9,R15                   BASE ADDRESS
         LA    R3,NOSDWA(0,0)           NO SDWA INDICATOR
         CR    R0,R3                    ANY SDWA?
         BE    NOPSDWA                  NO-
SDWAPTR  EQU   *
         STM   R14,R12,12(R13)          STORE THE REGISTERS
         LR    R4,R1                    SDWA POINTER
         USING SDWA,R4                  INFORM THE ASSEMBLER
         L     R5,SDWAPARM              PARAM ADDRESS
         L     R6,0(,R5)                ADDRESS TO FREEMAIN
         LTR   R6,R6                    ANYTHING THERE?
         BZ    SETRPRET                 NO- JUST RETURN
         LM    R7,R8,4(R5)              LENGTH + SUBPOOL NO
         BAL   R2,FREEMN                FREEMAIN
SETRPRET EQU   *
         SETRP WKAREA=(4),RC=0,REGS=(14)
NOPSDWA  EQU   *
         LR    R10,R14                  SAVE RETURN ADDRESS
         LR    R5,R2                    SAVE PARM ADDRESS
         LM    R6,R8,0(R5)              R6 = ADDRESS TO FREE
*                                       R7 = LENGTH OF AREA TO FREE
*                                       R8 = SUBPOOL NO
         LTR   R6,R6                    ANYTHING THERE?
         BZ    NOSDWART                 NO- JUST RETURN
         BAL   R2,FREEMN                FREEMAIN
NOSDWART EQU   *
         SR    R15,R15                  CONTINUE WITH TERMINATION
         BR    R10                      RETURN TO CALLER
FREEMN   EQU   *
         FREEMAIN RC,A=(R6),LV=(R7),SP=(R8)
         LTR   R15,R15                  ANY PROBLEMS?
         BZR   R2                       NO- RETURN TO CALLER
*  UPDATE THE FOLLOWING WTO MACRO AS REQUIRED.
*       WTO   'RECOVER - FREEMAIN ERROR IN ESTAE RECOVERY ROUTINE -PL,X
*              EASE INFORM SYSPROGS',ROUTCDE=2,DESC=2
         BR    R2                       RETURN TO CALLER
         LTORG
WORKAREA DSECT
SAVEAREA DC    18F'0'                  REGISTER SAVEAREA
PREVSA   EQU   SAVEAREA+4,4            PREVIOUS SAVEAREA
EYECATCH DS    CL8                     EYE CATCHER
DW       DS    D                       DOUBLEWORD
PRETCODE EQU   DW+5,3                  RETURN CODE
PRESCODE EQU   DW+5,3                  REASON CODE
ESTAEW   ESTAE MF=L
LESTAEW  EQU   *-ESTAEW                ESTAE LENGTH
ESTAPARM DS    0F
ESTPARM1 DS    F                       ESTAE PARAM 1
ESTPARM2 DS    F                       ESTAE PARAM 2
ESTPARM3 DS    F                       ESTAE PARAM 3
HSMWKARA DS    CL200                   ARCHBACK SCRATCH PAD
WORKLEN  EQU   *-WORKAREA              WORK AREA LENGTH
DSNTAB   DSECT
DSNAME   DS    CL44                    DATASET NAME
DSNOPT   DS    C                       OPTION
DSNENQ   DS    C                       DATASET ENQ Y|N
DSNTEST  DS    C                       TEST OPTION Y|N
DSNRC    DS    PL3                     RETURN CODE
*  SEE MESSAGE ARC13XX FOR RETURN CODES.
*  OTHER RETURN CODES ARE:
*  1.  1000   -   INVALID OPTION.
*  2.  1001   -   INVALID TEST OPTION.
*  3.  1002   -   INVALID ENQ PARM.
DSNRSC   DS    PL3                     REASON CODE
*  WILL CONTAIN THE MWE REASON CODE
DSNTBELN EQU   *-DSNTAB                TABLE ENTRY LENGTH
GLOBAL   DSECT
RETCODE  DS    XL4                     GLOBAL RETURN CODE
*  0 = SUCCESSFUL EXECUTION
*  4 = ONE OR MORE ERRORS HAVE OCCURRED.
*  8 = INTERNAL ERROR.
* 12 = DATA-ITEM TABETS, CONTAINS A ZERO OR MINUS FIELD.
TABETS   DS    XL4                     NO OF TABLE ENTRIES
         IHASDWA                       SDWA
         END   HSMUTIL


R F Perretta
Systems Consultant (UK)                                                      c X

