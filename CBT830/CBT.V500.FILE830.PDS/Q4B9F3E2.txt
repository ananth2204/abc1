Moving modules from test to production

This article describes an alternative solution to the problem of how
to move programs from test to production.  The solution involves a
communicating program and a started task.  A security manager like
RACF should be used in conjunction with these programs.  The source is
in two parts.  MOVES is the communication program that sends MODIFY
commands to a started task called MOVETASK.  MOVETASK accepts the
MODIFY commands and links in IEBCOPY to perform the move.  The MOVE
program makes use of ISPF Dialog Management. Two panels are needed.
LOADMODS defines the member to be moved, and the FROM and TO
libraries.  MOVECONF is a confirmation panel asking the user again if
the MOVE should be performed.


JCL FOR MOVETASK

//MOVETASK EXEC PGM=MOVETASK
//SYSIN    DD   UNIT=VIO,SPACE=(TRK,1),
//         DCB=(LRECL=80,BLKSIZE=6160,RECFM=FB)


MOVES

MOVES    START 0
         SAVE  (14,12),,*
         BALR  R11,0
         USING *,R11
         USING *+4095,R12
         LA    R12,4095(R11)
         ST    R13,SAVE+4
         LA    R13,SAVE
         BAL   R10,MOVETASK              CHECK IF MOVETASK IS ACTIVE
*** DEFINE SPF VARIABLES ***
         VDEFINE '(FROMLIB,TOLIB)',FROMLIB,CHAR,44
         VDEFINE '(ZUSER)',ZUSER,CHAR,7
         VDEFINE '(LOADNAME)',LOADNAME,CHAR,8
         VDEFINE '(ZDATE)',ZDATE,CHAR,8
         VDEFINE '(ZTIME)',ZTIME,CHAR,5
*** DISPLAY ENTRY PANEL ***
LOOP     DISPLAY PANEL='LOADMODS'
         C     R15,=F'8'                  USER HIT END KEY
         BE    RETURN                     YES? THEN EXIT PROGRAM
         VGET  '(ZUSER)',SHARED           TSO USER
         VGET  '(ZUSER)',SHARED          TSO USER
         VGET  '(ZDATE,ZTIME)',SHARED    DATE AND TIME
         DISPLAY PANEL='MOVECONF'        DISPLAY CONFIRMATION PANEL
         C     R15,=F'8'                 DID THE USER HIT END
         BE    DONTMOVE                  YES? THEN DONT MOVE IT
         BAL   R9,MOVEIT                 NO? THEN GO AHEAD AND MOVE IT
         B     LOOP                      BRANCH BACK AND DISPLAY PANEL
RETURN   EQU   *                         END PROGRAM
         L     R13,SAVE+4                RESTORE SAVE AREA POINTER
         RETURN  (14,12),RC=0            NORMAL RETURN
DONTMOVE EQU   *
         SETMSG MSG='MVE007'             DISPLAY NOT MOVED MESSAGE
         B     LOOP
***   CHECK ASVT TO SEE IF MOVETASK IS ACTIVE ***
MOVETASK EQU   *
         L     R3,16(R0)                 CVT
         L     R3,556(R3)                ASVT
         USING ASVT,R3                   USE REG 3 FOR ADDRESSING
         L     R5,ASVTMAXU               MAX ADDRESS SPACES
         LA    R3,528(R3)                START OF ASVT CHAIN
         DROP  R3
NEXTASID EQU   *
         TM    0(R3),X'80'               CHECK HIGH ORDER BIT
         BO    GETOUT                    IF ON CHECK NEXT ASID
         L     R6,0(R3)                  ASCB ADDRESS
         L     R7,176(R6)                POINTER TO NAME
         CLC   0(8,R7),=CL8'MOVETASK'    IS IT MOVETASK?
         BER   R10                       YES THEN RETURN TO MAIN
GETOUT   LA    R3,4(R3)                  POINT TO NEXT ASVT ENTRY
         BCT   R5,NEXTASID               GO CHECK NEXT ENTRY
         SETMSG MSG='MVE015'             END OF CHAIN TASK NOT ACTIVE
         B     RETURN                    GO END PROGRAM
***  PASS DATA TO STARTED TASK TO MOVE LOAD MODULES & UTLCNTRL MEMBERS
MOVEIT   DS    0D
         XC    MGCRPL(MGCRLTH),MGCRPL
         MVI   COMMAND,X'40'
         MVC   COMMAND+1(63),COMMAND     FORMAT MODIFY COMMAND
         MVC   COMMAND(11),=C'F MOVETASK,'
         BAL   R10,CODEIT                CHANGE TOLIB TO NUMBER
         MVC   COMMAND+11(1),CODE        PROD LIBRARY CODE
         MVC   COMMAND+12(44),FROMLIB    FROM LIBRARY NAME
         MVC   COMMAND+56(8),LOADNAME    LOAD MODULE NAME
         MVC   COMMAND+107(7),ZUSER      TSO USER ID
         MVC   COMMAND+114(8),ZDATE      DATE
         MVC   COMMAND+86(5),ZTIME       TIME
         SVC   255                       PUT USER IN SUP KEY
         MODESET KEY=ZERO,MODE=SUP       ISSUE MODESET
         LA    R1,(MGCRTEXT-MGCRPL)+L'COMMAND
         STC   R1,MGCRLGTH
         SR    R0,R0
         MGCR  MGCRPL                     ISSUE MGCR FOR MODIFY CMD
         MODESET KEY=NZERO,MODE=PROB     PUT BACK TO PROBLEM STATE
         SETMSG MSG='MVE004              ISSUE REQUEST ISSUED MESSAGE
         BR    9                         BRANCH BACK TO MAIN ROUTINE
***   CHANGE LIBRARY NAME TO A NUMBER TO SAVE SPACE ON MODIFY COMMAND
***   1 = IMSVS.PGMLIB
***   2 = MVS.PGMLIB
CODEIT   EQU   *
         MVI   CODE,C' '
         CLC   TOLIB,=CL44'IMSVS.PGMLIB'
         BNE   CODE2
         MVI   CODE,C'1'
         BR    R10
CODE2    CLC   TOLIB,=CL44'MVS.PGMLIB'
         BNER  R10
         MVI   CODE,C'2'
***   CONSTANTS  ***
SAVE     DS    18F
CODE     DC    C' '
FROMLIB  DC    CL44' '
TOLIB    DC    CL44' '
LOADNAME DC    CL8' '
ZUSER    DC    CL7' '
ZDATE    DC    CL8' '
ZTIME    DC    CL5' '
ISPLINK  DC    V(ISPLINK)
         IEZMGCR DSECT=NO
         ORG  MGCRTEXT
COMMAND  DS   CL64
         ORG
         LTORG
         IHAASVT
         END MOVES


MOVETASK

MOVETASK START 0
         SAVE  (14,12),,*                  SAVE REGISTERS
         BALR  12,0                        LOAD BASE REGISTER
         USING *,12                        ESTABLISH R12 AS BASE
         ST    13,SAVE+4                   STORE POINTER TO SAVE
         LA    13,SAVE                     LOAD ADDRESS OF OUR SAVE
         LA    5,ANSRAREA                  LOAD RESPONSE AREA ADDRESS
         EXTRACT (5),FIELDS=COMM           COMMUNICATIONS AREA
         L     5,ANSRAREA                  LOAD COMM AREA ADDRESS
         USING COMLIST,5                   ESTABLISH ADDRESSABILITY
         L     3,COMCIBPT                  ADDRESS OF CIB
         USING CIBNEXT,3                   ESTABLISH ADDRESSABILITY
         CLI   CIBVERB,CIBSTART            START COMMAND?
         BNE   SETCOUNT                    NO THEN CHECK FOR MODIFY
         QEDIT ORIGIN=COMCIBPT,BLOCK=(3)   FREE START CIB
         LTR   15,15                       IS IS FREE?
         BZ    SETCOUNT                    YES, GO WAIT FOR REQUESTS
         WTO   'START CIB NOT FREED'       NO THEN WTO ERROR MESSAGE
SETCOUNT EQU   *
         QEDIT ORIGIN=COMCIBPT,CIBCTR=255  SET LIMIT TO 255
WAIT     EQU   *
         L     4,COMECBPT                  ADDRESS OF COM ECB
         WAIT  ECB=(4)                     WAIT FOR MODIFY OR STOP
         L     3,COMCIBPT                  ADDRESS OF CIB
         CLI   CIBVERB,CIBMODFY            MODIFY COMMAND?
         BNE   TSTSTOP                     NO THEN CHECK STEP CMD
         MVI   DATAAREA,X'40'              CLEAR DATA BUFFER
         MVC   DATAAREA+1(112),DATAAREA
         LH    4,CIBDATLN                  LOAD LENGTH OF COMMAND
         BCTR  R,0                         SUBTRACT 1 FOR EX
         EX    4,DATAMOVE                  EXECUTE MVC
         CLI   TOLIB,C'1'                  DECODE TOLIB CODE
         BNE   TOLIB2                         INTO
         MVC   ALLOCDSN,=CL44'IMSVS.PGMLIB'     REAL DATASET NAME
         B     ALLOCATE                    GO CALL SVC 99 AND COPY
TOLIB2   CLI   TOLIB,C'2'
         BNE   FREECIB
         MVC   ALLOCDSN,=CL44'MVS.PGMLIB'
ALLOCATE EQU   *
         BAL   R10,LOGREC                  CREATE AUDIT RECORD
INDD     DDD   DSN=FROMLIB@,DISP=SHR,FREE=CLOSE   SVC 99 FOR INDD
OUTDD    DDD   DSN=ALLOCDSN@,DISP=SHR,FREE=CLOSE  SVC 99 FOR OUTDD
         OPEN  (CARDFILE,OUTPUT)           CREATE IEBCOPY RECORD
         MVI   CARD1,X'40'                 CLEAR CARD1
         MVC   CARD1+1(79),CARD1
         MVC   CARD1,MOVECARD              MOVE IN S M= STATEMENT
         PUT   CARDFILE,COPYCARD           WRITE OUT COPY STATEMENT
         LA    R6,MEMBER                   FIND END OF MEMBER
CHECKEND CLI   0(R6),X'40'                 END OF MEMBER
         BE    MOVE                        YES? MOVE ,,R)) AFTER IT
         LA    R6,1(R6)                    BUMP UP MEMBER ADDRESS
         B     CHECKEND                    GO CHECK FOR END
MOVE     MVC   0(5,R6),=CL5',,R))'         MOVE IN ,,R))
         PUT   CARDFILE,CARD2              PUT MEMBER SELECT STATEMENT
CALLCOPY EQU   *                           LINK IN IEBCOPY
         CLOSE CARDFILE                    CLOSE SYSIN DATASET
         GETMAIN R,LV=72                   GET SAVE AREA FOR COPY
         ST    R1,8(R13)                   LINK
         ST    R13,4(R1)                      SAVE
         LR    R13,R1                            AREAS
         LINK  EP=IEBCOPY                  CALL IEBCOPY
         LR    R9,R15                      SAVE RETURN CODE
         L     R14,4(R13)                  RESTORE SAVE AREA
         FREEMAIN R,LV=72,A=(R13)          FREE COPY SAVE AREA
         LR    R13,R14
         CVD   R9,DOUBLE                   CONVERT RETURN CODE
         MVC   EDITO,MASK                  RETURN CODE EDIT MASK
         ED    EDITO,DOUBLE+6              EDIT RETURN CODE
         MVC   RETCD,EDITO+2               MOVE TO SEND MESSAGE
         XC    MGCRPL(MGCRLTH),MGCRPL      SEND MOVE MESSAGE TO USER
         MVI   COMMAND,X'40'               FORMAT SEND COMMAND
         MVC   COMMAND+1(99),COMMAND
         MVC   COMMAND(80),MESSAGE
         MVC   COMMAND+11(8),MEMBER
         MVC   COMMAND+38(25),ALLOCDSN
         MVC   COMMAND+63(11),=CL11'IEBCOPY RC='
         MVC   COMMAND+74(2),RETCD
         MVI   COMMAND+76,X'7D'
         MVC   COMMAND+77(21),=C',LOGON,USER=(        )'
         MVC   COMMAND+90(7),USER
         MODESET KEY=ZERO,MODE=SUP         GET INTO SUP STATE
         LA    R1,(MGCRTEXT-MGCRPL)+L'COMMAND
         STC   R1,MGCRLGTH
         SR    R0,R0
         MGCR  MGCRPL                      ISSUE MGCR COMMAND
         MODESET KEY=NZERO,MODE=PROB       PUT BACK TO PROBLEM STATE
FREECIB  QEDIT ORIGIN=COMCIBPT,BLOCK=(3)   FREE MODIFY CIB
         B     WAIT                        GET NEXT REQUEST
TSTSTOP  EQU  *
         CLI   CIBVERB,CIBSTOP             STOP COMMAND?
         BNE   ERROR1                      NO THEN ERROR MESSAGE
         QEDIT ORIGIN=COMCIBPT,BLOCK=(3)   FREE STOP CIB
         L     13,SAVE+4                   RESTORE SAVE POINTER
         RETURN (14,12),RC=0               NORMAL RETURN
ERROR1   EQU   *
         WTO   'INVALID MOVETASK COMMAND'
***   LOG MOVE DATA TO AUDIT DATASET  ***
LOGREC   EQU   *
AUDITFIL DDD   DSN=MOVE1.AUDIT,DISP=SHR,FREE=CLOSE  SVC 99
         OPEN  (AUDIT)                     OPEN AUDIT DATASET
         MVI   AUDLINE,X'40'               FORMAT AUDIT RECORD
         MVC   AUDLINE+1(132),AUDLINE
         MVC   AUDLINE(8),MEMBER
         MVC   AUDLINE+8(8),DATE
         MVC   AUDLINE+16(7),USER
         MVC   AUDLINE+23(5),TIME
         MVC   AUDLINE+28(1),TOLIB
         MVC   AUDLINE+29(44),FROMLIB
         MVC   AUDLINE+73(44),ALLOCDSN
         MVC   AUDKEY,AUDLINE
         PUT   RPL=AUDITRPL               WRITE AUDIT RECORD
         CLOSE AUDIT                      CLOSE AUDIT DATASET
AUDITFIL FREE                             SVC 99
         BR    10
SAVE     DS    18F
RETCD    DC    CL2' '
EDITO    DC    CL4' '
MASK     DC    XL4'40212020'
DOUBLE   DS    D
DATAAREA DS    0CL53
TOLIB    DS    CL1
FROMLIB  DS    CL44
MEMBER   DS    CL8
USER     DS    CL7
DATE     DS    CL8
TIME     DS    CL5
ANSRAREA DS    F
DATAMOVE MVC   DATAAREA(0),CIBDATA
CARDFILE DCB   LRECL=80,DSORG=PS,MACRF=PM,RECFM=FB,DDNAME=SYSIN
AUDIT    ACB   AM=VSAM,DDNAME=AUDITFIL,MACRF=(KEY,DIR,OUT)
AUDITRPL RPL   ACB=AUDIT,AM=VSAM,AREA=AUDLINE,AREALEN=133,ARG=AUDKEY,  X
               OPTCD=(KEY,DIR,NUP),RECLEN=133
AUDLINE  DC    CL133' '
AUDKEY   DC    CL29' '
COPYCARD DC    CL80'    COPY INDD=INDD,OUTDD=OUTDD'
CARD1    DS    CL80
         ORG   CARD1+20
CARD2    DS    CL80
         ORG   CARD2+20
MEMBER1  DS    CL8
         ORG
MOVECARD DC    CL80'    SELECT MEMBER=(('
MESSAGE  DC    CL80'SE ''MODULE          HAS BEEN MOVED TO '
ALLOCDSN DC    CL44' '
COMSAVE  DS    F
ANSSAVE  DS    F
         LTORG
         IEZMGCR DSECT=NO
         ORG MGCRTEXT
COMMAND  DS    CL53
         ORG
         DDDD
         DSECT
         IEZCOM
         DSECT
         IEZCIB
         END


Michael Skopec
Operations Analyst
Illinois Bell Telephone (USA) € Michael Skopec 1987


