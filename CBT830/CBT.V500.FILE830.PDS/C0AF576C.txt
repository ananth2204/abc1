Building an ISPF toolbox

TBOX CLIST SOURCE CODE

PROC 0 DEBUG
CONTROL NOMSG NOFLUSH
IF &DEBUG=DEBUG THEN  +
  CONTROL LIST CONLIST SYMLIST MSG NOFLUSH
/**************************** INITIALIZATION **********************/
SET MSG      =                           /* MESSAGE PARM          */
SET CSR      =                           /* CURSOR PARM           */
SET CSRR     = 1                         /* CURSOR ROW PARM       */
SET RC       = 0                         /* RETURN CODE PARM      */
SET PANELNAM = TBOXPNL0                  /* PANEL NAME            */
SET TABLENAM = TBOXTBL1                  /* TABLE NAME            */
SET NAMELIST = &STR(VID VDESC VDSN VDATE VTIME VLF)
/* ALLOCATE DD FOR THE TABLE IN USER'S ISPF PROFILE*/
ALLOCATE FILE(&TABLENAM) +
         DATASET(&SYSUID..ISPPROF) SHR
/* OPEN TABLE                  */
/* IF NOT EXIST THEN CREATE IT */
ISPEXEC TBOPEN &TABLENAM WRITE LIBRARY(&TABLENAM) SHARE
IF &LASTCC = 8 THEN +
DO
  ISPEXEC TBCREATE &TABLENAM LIBRARY(&TABLENAM) WRITE +
    NAMES(&NAMELIST) SHARE
  SET VDSN=PROJECT.GROUP.TYPE(MEMBER)
  ISPEXEC TBADD    &TABLENAM   /* ADD INIT RECORD */
END
/**************************** MAINLINE   **************************/
/* LOOP UNTIL END KEY HIT */
DO WHILE &RC < 8
/* DISPLAY TABLE */
  ISPEXEC TBDISPL &TABLENAM +
          PANEL(&PANELNAM) +
          MSG(&MSG) +
          CURSOR(&CSR) CSRROW(&CSRR) +
          POSITION(CRP) +
          AUTOSEL(NO)
/* INITIALIZE VARIABLES */
  SET RC    = &LASTCC           /* LAST RETURN CODE              */
  SET CSR   = LCMD              /* CURSOR IN LINE COMMAND COLUMN */
  SET CSRR  =                   /* BLANK CURSOR ROW              */
  SET MSG   =                   /* BLANK MESSAGE                 */
  SET VTIME = &SYSSTIME         /* GET SYSTEM TIME               */
  SET VDATE = &STR(&SYSSDATE)   /* GET SYSTEM DATE               */
  SET VLF   = &LCMD             /* LAST LINE COMMAND             */
/* PROCESS PRIMARY COMMANDS */
PRIMCMDS: +
  SELECT (&PCMD)
    WHEN (GROUP)    +
      GOTO GROUP                /* SELECT MAIN PANEL            */
    WHEN (DISPMAIN) +
      GOTO DISPMAIN             /* SELECT MAIN PANEL            */
    WHEN (DISPDATE) +
      GOTO DISPDATE             /* SELECT DATE PANEL            */
    WHEN (SORTDATE) +
      GOTO SORTDATE             /* SORT LIST BY DATE            */
    WHEN (SORTDSN)  +
      GOTO SORTDSN              /* SORT LIST BY DATASETNAME     */
    WHEN (SORTGRP)  +
      GOTO SORTGRP              /* SORT LIST BY GROUP           */
    WHEN (SAVE)     +
      GOTO SAVELIST             /* SAVE LIST                    */
    WHEN (CANCEL)   +
      GOTO ENDLOOP              /* CANCEL -- END WITHOUT SAVE   */
    WHEN (QUERY)    +
      GOTO QUERY                /* QUERY TABLE                  */
    WHEN (STATS)   +
      GOTO STATS                /* SHOW TABLE STATISTICS        */
    WHEN (U31)     +
      ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA1) +
              NEWAPPL(NO)       /* ISPF 3.1                     */
    WHEN (U32)     +
      ISPEXEC SELECT PGM(ISRUDA) PARM(ISRUDA2) +
              NEWAPPL(NO)       /* ISPF 3.2                     */
    WHEN (U33)     +
      ISPEXEC SELECT PGM(ISRUMC)                /* ISPF 3.3     */
    WHEN (U34)     +
      ISPEXEC SELECT PGM(ISRUDL) PARM(ISRUDLP)  /* ISPF 3.4     */
  END
/* PROCESS LINE    COMMANDS */
LINECMDS: +
  DO WHILE &ZTDSELS > 0
  SELECT (&LCMD)
    WHEN (E)       +
      GOTO EDITROW              /* EDIT      DATASET      */
    WHEN (B)       +
      GOTO BROWROW              /* BROWSE    DATASET      */
    WHEN (S)       +
      GOTO SUBMROW              /* SUBMIT    JOB          */
    WHEN (X)       +
      GOTO EXECROW              /* EXECUTE   CLIST        */
    WHEN (A)       +
      GOTO ADDROW               /* ADD       TABLE ROW    */
    WHEN (R)       +
      GOTO RPLROW               /* REPLICATE TABLE ROW    */
    WHEN (U)       +
      GOTO UPDROW               /* UPDATE    TABLE ROW    */
    WHEN (D)       +
      GOTO DELROW               /* DELETE    TABLE ROW    */
  END
NEXTCMDS: +
  IF &ZTDSELS > 1 THEN +
    ISPEXEC TBDISPL &TABLENAM +
          PANEL(&PANELNAM) +
          MSG(&MSG) +
          CURSOR(&CSR) CSRROW(&CSRR) +
          POSITION(CRP) +
          AUTOSEL(NO)
  ELSE +
    SET ZTDSELS = 0
  END
  ISPEXEC TBTOP  &TABLENAM
  ISPEXEC TBSKIP &TABLENAM NUMBER(&ZTDTOP)
  ISPEXEC VGET (ZVERB ZSCROLLN)
  SELECT (&ZVERB)
    WHEN (UP) THEN +
        ISPEXEC TBSKIP &TABLENAM NUMBER(-&ZSCROLLN)
    WHEN (DOWN) THEN +
        ISPEXEC TBSKIP &TABLENAM NUMBER(&ZSCROLLN)
    OTHERWISE
  END
END
/**************************** FINALIZATION ************************/
ENDLOOP: +
  ISPEXEC TBCLOSE &TABLENAM LIBRARY(&TABLENAM)
  EXIT
/**************************** SUBROUTINES *************************/
/**************************** SELECT MAIN PANEL *******************/
DISPMAIN: +
  SET PANELNAM = TBOXPNL0
  GOTO NEXTCMDS
/**************************** SELECT DATE PANEL *******************/
DISPDATE: +
  SET PANELNAM = TBOXPNL1
  GOTO NEXTCMDS
/**************************** SORT LIST BY DATE *******************/
SORTDATE: +
  ISPEXEC TBSORT &TABLENAM FIELDS(VDATE,C,D,VTIME,C,D)
  SET ZTDTOP = 1 /* POSITION TO TOP */
  GOTO NEXTCMDS
/**************************** SORT LIST BY DSN ********************/
SORTDSN:  +
  ISPEXEC TBSORT &TABLENAM FIELDS(VDSN,C,A)
  SET ZTDTOP = 1 /* POSITION TO TOP */
  GOTO NEXTCMDS
/**************************** SORT LIST BY GROUP ******************/
SORTGRP:  +
  ISPEXEC TBSORT &TABLENAM FIELDS(VID,C,A,VDSN,C,A)
  SET ZTDTOP = 1 /* POSITION TO TOP */
  GOTO NEXTCMDS
/**************************** SAVE LIST ***************************/
SAVELIST: +
  ISPEXEC TBSAVE &TABLENAM LIBRARY(&TABLENAM)
  SET ZTDTOP = 1 /* POSITION TO TOP */
  GOTO NEXTCMDS
/**************************** DISPLAY TABLE STATS *****************/
STATS:    +
  ISPEXEC TBSTATS &TABLENAM +
          CDATE(STCDATE)    +
          CTIME(STCTIME)    +
          UDATE(STUDATE)    +
          UTIME(STUTIME)    +
          USER (STUSER)
  WRITE CREATE DATE/TIME = &STCDATE &STCTIME
  WRITE USE    DATE/TIME = &STUDATE &STUTIME
  WRITE USER             = &STUSER
  GOTO NEXTCMDS
/**************************** QUERY TABLE INFO    *****************/
QUERY:    +
  ISPEXEC TBQUERY &TABLENAM +
          NAMES(QNAMES)     +
          ROWNUM(QROWS)
  WRITE NAMES = &QNAMES
  WRITE ROWS  = &QROWS
  GOTO NEXTCMDS
/**************************** EDIT   DATASET **********************/
EDITROW: +
  ISPEXEC TBPUT  &TABLENAM
  /* TRUNCATE MEMBER NAME FROM DSN      */
  SET A = &SYSINDEX((,&VDSN)
  IF &A = 0 THEN +
    DO
      SET STRDSN = &VDSN
    END
  ELSE +
    DO
      SET A = &A - 1
      SET STRDSN = &SUBSTR(1:&A,&VDSN)
    END
  /* GO AHEAD IF DSN IS VALID           */
  IF &SYSDSN('&STRDSN') = OK THEN +
    DO
      ISPEXEC EDIT DATASET('&VDSN')
      SET CSRR = &CRP
    END
  ELSE +
    DO
      WRITE CANNOT EDIT DATASET(MEMBER)
    END
  GOTO NEXTCMDS
/**************************** BROWSE DATASET **********************/
BROWROW: +
  ISPEXEC TBPUT  &TABLENAM
  /* TRUNCATE MEMBER NAME FROM DSN      */
  SET A = &SYSINDEX((,&VDSN)
  IF &A = 0 THEN +
    DO
      SET STRDSN = &VDSN
    END
  ELSE +
    DO
      SET A      = &A - 1
      SET STRDSN = &SUBSTR(1:&A,&VDSN)
    END
  /* GO AHEAD IF DSN IS VALID           */
  IF &SYSDSN('&STRDSN') = OK THEN +
    DO
      ISPEXEC BROWSE DATASET('&VDSN')
      SET CSRR = &CRP
    END
  ELSE +
    DO
      WRITE CANNOT BROWSE DATASET(MEMBER)
    END
  GOTO NEXTCMDS
/**************************** EXECUTE A CLIST *********************/
EXECROW: +
  ISPEXEC TBPUT   &TABLENAM
  IF &SYSDSN('&VDSN') = OK THEN +
      EX '&VDSN'
  ELSE +
      WRITE CLIST NOT FOUND OR INVALID
  SET CSRR = &CRP
  GOTO NEXTCMDS
/**************************** SUBMIT A JOB    *********************/
SUBMROW: +
  ISPEXEC TBPUT   &TABLENAM
  IF &SYSDSN('&VDSN') = OK THEN +
    DO
      SUBMIT &VDSN
      WRITE JCL SUBMITTED
    END
  ELSE +
      WRITE JCL NOT FOUND OR INVALID
  SET CSRR = &CRP
  GOTO NEXTCMDS
/**************************** ADD ROW        **********************/
ADDROW: +
  ISPEXEC TBVCLEAR &TABLENAM
  ISPEXEC TBADD    &TABLENAM
  ISPEXEC TBSAVE &TABLENAM LIBRARY(&TABLENAM)
  SET CSRR = &CRP + 1
  SET LCMD = 'U'
  GOTO NEXTCMDS
/**************************** UPDATE ROW     **********************/
UPDROW: +
  ISPEXEC TBPUT    &TABLENAM
  ISPEXEC TBSAVE &TABLENAM LIBRARY(&TABLENAM)
  SET CSRR = &CRP
  GOTO NEXTCMDS
/**************************** DELETE ROW     **********************/
DELROW: +
  ISPEXEC TBDELETE &TABLENAM
  ISPEXEC TBSAVE &TABLENAM LIBRARY(&TABLENAM)
  SET CSRR = &CRP
  GOTO NEXTCMDS
/**************************** REPLICATE ROW  **********************/
RPLROW: +
  ISPEXEC TBADD    &TABLENAM
  ISPEXEC TBSAVE &TABLENAM LIBRARY(&TABLENAM)
  SET CSRR = &CRP + 1
  GOTO NEXTCMDS

PANEL TBOXPNL0 SOURCE

)Attr
  ! type(input) intens(low) just(left ) caps(on ) pad('_')
  [ type(output) intens(low ) just(left ) caps(off) padc('-')
)Body expand(//)
%-/-/- Dataset Work List -/-/-
%Command ===>_PCMD                                / / %Scroll ===>+_AMT   +
+
%Line Commands:+E)dit, B)rowse, e(X)ecute, S)ubmit
%              +A)dd, U)pdate, D)elete, R)eplicate
%C Dataset Name                     Group    Description
)Model
!Z!VDSN                            !VID     !VDESC
)Init
  .zvars = '(LCMD)'
  &LCMD=' ' &PCMD=&Z
)Reinit
  if (&LCMD = E)
    &lcmd=E   refresh(lcmd)
  else
    &lcmd=' ' refresh(lcmd)
  &pcmd = &z
)Proc
  if (&ztdsels Â¬= 0000)
   ver(&lcmd,nonblank,list,E,B,X,S,A,U,D,R)
)End

PANEL TBOXPNL1 SOURCE

)Attr
  ! type(input) intens(low) just(left ) caps(on ) pad('_')
  [ type(output) intens(low ) just(left ) caps(off) padc('-')
)Body expand(//)
%-/-/- Dataset Work List -/-/-
%Command ===>_PCMD                                / / %Scroll ===>+_AMT   +
+
%Line Commands:+E)dit, B)rowse, e(X)ecute, S)ubmit
%              +A)dd, U)pdate, D)elete, R)eplicate
%C Dataset Name                                    Group    Date     Time  LC
)Model
!Z!VDSN                                           !VID     [VDATE   [VTIME[VLF
)Init
  .zvars = '(LCMD)'
  &LCMD=' ' &PCMD=&Z
)Reinit
  if (&LCMD = E)
    &lcmd=E   refresh(lcmd)
  else
    &lcmd=' ' refresh(lcmd)
  &pcmd = &z
)Proc
  if (&ztdsels Â¬= 0000)
   ver(&lcmd,nonblank,list,E,B,X,S,A,U,D,R)
)End


Larry Prestosa
Systems Engineer
USAir (USA)

