EDT display utility


ASSEMBLER SOURCE OF $EDT UTILITY:

$EDT     CSECT
         SAVE  (14,12)
         BALR  R12,0
         USING *,R12
         GETMAIN R,LV=WORKL
         ST    R1,8(R13)
         ST    R13,4(R1)
         LR    R13,R1
         USING DSECT,R13
*        CREATE ISPF VARIABLES
         CALL  ISPLINK,(VDEFINE,CUU,PCUU,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,VOLSER,PVOLSER,CHAR,L6),VL
         CALL  ISPLINK,(VDEFINE,UNITNAME,PUNITNA,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,MOUNT,PMOUNT,CHAR,L8),VL
         CALL  ISPLINK,(VDEFINE,TYPE,PTYPE,CHAR,L4),VL
         CALL  ISPLINK,(VDEFINE,SKEY,PSKEY,CHAR,L8),VL
*        CREATE AND SORT ISPF TABLE
         CALL ISPLINK,(TBCREATE,FSTABLE,,VARLIST,NOWRITE,REPLACE),VL
         MVC  SORTKEY1,CUU            SPECIFY DEFAULT SORT FIELD
         MVC  SORTTYP1,CHARASND       SPECIFY SORT DIRECTION
         MVC  SORTKEY2,UNITNAME       SPECIFY DEFAULT SORT FIELD
         MVC  SORTTYP2,CHARASND       SPECIFY SORT DIRECTION
         CALL ISPLINK,(TBSORT,FSTABLE,SORTPARM),VL  SORT ISPF TABLE
*        PROCESS DATA
         AUTHON                                 AUTH SVC ON
         MODESET KEY=ZERO
         LR    R2,R13
         LA    R3,LGDSECT
         AR    R2,R3                            R2 = ADDR(DEVNLIST)
         EDTINFO RTNNAMD,                       RETURN UNITNAME FOR    X
               DEVCLASS=DASD,                   DASD                   X
               NAMELIST=NAMELIST
         LTR   R15,R15
         BNZ   ERROR1
         L     R7,NAMELIST
         L     R8,4(R7)                         R8 = NUMBER OF UNITNAME
*                                               ENTRIES
         LA    R9,8(R7)                         R9 POINTS TO 1ST ENTRY
UNILOOP  MVC   UNITN,0(R9)                      COPY UNITNAME TO USE
         MVC   PUNITNA,UNITN
         LA    R11,BYPASS                       R11 = ADDR OF START OF
*                                               BYPASS TABLE
         LA    R10,BYPASSL                      R10 = NUMBER OF ENTRIES
CLCLOOP  CLC   PUNITNA,0(R11)
         BE    UNINEXT
         AH    R11,=H'8'
         BCT   R10,CLCLOOP
         LA    R3,LGSTOR
         ST    R3,0(R2)                         COPY DEVNLIST SIZE
*                                               IN HEADER
         ST    R2,DEVNPTR                       COPY DEVNLIST ADDRESS
         EDTINFO RTNDEVN,                       RETURN UCB FOR A       X
               DYNAMIC=YES,                     GIVEN UNITNAME         X
               LOC=ANY,                                                X
               UNITNAME=UNITN,                                         X
               DEVNLIST=DEVNPTR
         LTR   R15,R15
         BNZ   ERROR1
         L     R4,4(R2)                         LOAD NUMBER OF UCB IN
*                                               DEVNLIST
         LA    R5,8(R2)                         R5 POINTS TO 1ST ENTRY
UCBLOOP  MVC   PCUU,0(R5)                       MOVE EBCDIC DEVN
         MVC   PUNITNA,UNITN                    COPY UNITNAME
         UCBLOOK DEVNCHAR=PCUU,                 GET UCB FOR THAT       X
               NOPIN,                           DEVICE                 X
               LOC=ANY,                                                X
               UCBPTR=UCBPTR,                                          X
               DYNAMIC=YES
         LTR   R15,R15
         BNZ   ERROR2
         L     R6,UCBPTR                        LOAD UCB ADDRESS
         USING UCBOB,R6
         TM    UCBSTAT,UCBONLI                  IS THE DEVICE ON-LINE ?
         BZ    OFFLINE                          NO
         MVC   PVOLSER,UCBVOLI                  COPY VOLSER
         B     FLAG1
OFFLINE  MVC   PVOLSER,=CL8'OFFLINE'
         B     UCBNEXT
FLAG1    TM    UCBSTAB,UCBBPRV                  PRIVATE DEVICE ?
         BZ    NOTPRIV                          NO
         MVC   PMOUNT,=CL8'PRIVATE'
         B     FLAG2
NOTPRIV  TM    UCBSTAB,UCBBPUB                  PUBLIC DEVICE ?
         BZ    NOTPUBL                          NO
         MVC   PMOUNT,=CL8'PUBLIC'
         B     FLAG2
NOTPUBL  MVC   PMOUNT,=CL8'STORAGE'             SO STORAGE DEVICE !!!
FLAG2    EQU   *
*                                               FIND OUT UNIT TYPE
         TM    UCBTBYT4,X'0F'
         BNO   NOT3390
         MVC   PTYPE,=CL4'3390'
         B     ADD
NOT3390  TM    UCBTBYT4,X'0E'
         BNO   NOT3380
         MVC   PTYPE,=CL4'3380'
         B     ADD
NOT3380  MVC   PTYPE,=CL4'????'
*        ADD A NEW ROW
ADD      CALL  ISPLINK,(TBADD,FSTABLE,,ORDER),VL  ADD DATA INTO TABLE
UCBNEXT  AH    R5,=H'4'                         POINT TO NEXT DEVN
         BCT   R4,UCBLOOP                       PROCESS IT
UNINEXT  AH    R9,=H'8'                         POINT TO NEXT UNITNAME
         BCT   R8,UNILOOP                       PROCESS IT
DISPLAY  CALL  ISPLINK,(TBTOP,FSTABLE),VL  POINT TO TOP OF TABLE
REDISP   CALL  ISPLINK,(TBDISPL,FSTABLE,FSPANEL),VL  DISPLAY TABLE
         LTR   R15,R15                 HAS ENTER BEEN HIT (R15 = 0)?
         BNZ   FINISHKP                NO, TERMINATE PROGRAM
*        CHANGE SORT KEY
         CLC   PSKEY,CUU
         BNE   NOTCUU
         MVC   SORTKEY1,CUU
         MVC   SORTKEY2,UNITNAME
         B     SORT
NOTCUU   CLC   PSKEY,UNITNAME
         BNE   NOTUNIT
         MVC   SORTKEY1,UNITNAME
         MVC   SORTKEY2,CUU
         B     SORT
NOTUNIT  CLC   PSKEY,VOLSER
         BNE   NOTVOLS
         MVC   SORTKEY1,VOLSER
         MVC   SORTKEY2,UNITNAME
         B     SORT
NOTVOLS  CLC   PSKEY,MOUNT
         BNE   NOTMOUNT
         MVC   SORTKEY1,MOUNT
         MVC   SORTKEY2,UNITNAME
NOTMOUNT EQU   *
SORT     CALL  ISPLINK,(TBSORT,FSTABLE,SORTPARM),VL  SORT TABLE
         B     REDISP                  BRANCH TO REDISPLAY PANEL
FINISHKP CALL  ISPLINK,(TBCLOSE,FSTABLE),VL   CLOSE TABLE
RETURN   EQU   *
         MODESET KEY=NZERO
         AUTHOFF
         L     R13,4(R13)
         L     R1,8(R13)
         FREEMAIN R,LV=WORKL,A=(R1)
         L     R14,12(R13)
         LM    R0,R12,20(R13)
         BR    R14
ERROR1   EQU   *
         CALL  ISPLINK,(SETMSG,MSG1),VL       SEND ERROR MSG
         B     RETURN
ERROR2   EQU   *
         CALL  ISPLINK,(SETMSG,MSG2),VL       SEND ERROR MSG
         B     RETURN
SAVE     DS    18F
DASD     DC    X'20'                          CLASS BIT FOR DASD
FSPANEL  DC    CL8'$EDT'             <===     ISPF PANEL NAME
*                                             ISPF VARIABLES
*                                             --------------
CUU      DC    CL8'CUU'
VOLSER   DC    CL8'VOLSER'
UNITNAME DC    CL8'UNITNAME'
MOUNT    DC    CL8'MOUNT'
TYPE     DC    CL8'TYPE'
SKEY     DC    CL8'SKEY'
VARLIST  DC    CL80'(CUU VOLSER UNITNAME MOUNT TYPE)'
FSTABLE  DC    CL8'FSTABLE'                   TABLE NAME
*                                             TYPES
*                                             ----
CHAR     DC    CL4'CHAR'
*                                             LENGTH
*                                             ------
L3       DC    F'3'
L4       DC    F'4'
L6       DC    F'6'
L8       DC    F'8'
*                                             FIELDS
*                                             -----
PCUU     DS    CL4
PVOLSER  DS    CL6
PUNITNA  DS    CL8
PMOUNT   DS    CL8
PTYPE    DS    CL4
PSKEY    DS    CL8
*                                             ISPF MESSAGES
*                                             -------------
MSG1     DC    CL8'$EDT001A'
MSG2     DC    CL8'$EDT002A'
*                                             SORT PARMS
*                                             ----------
CHARASND DC    CL3'C,A'
NUMRDSND DC    CL3'N,D'
SORTPARM DS    0CL14
         DC    CL1'('
SORTKEY1 DS    CL8
         DC    CL1','
SORTTYP1 DS    CL3
         DC    CL1','
SORTKEY2 DS    CL8
         DC    CL1','
SORTTYP2 DS    CL3
         DC    CL1')'
*                                             ISPF FUNCTIONS
*                                             --------------
VDEFINE  DC    CL7'VDEFINE'
TBADD    DC    CL5'TBADD'
TBCLOSE  DC    CL7'TBCLOSE'
TBCREATE DC    CL8'TBCREATE'
TBDISPL  DC    CL7'TBDISPL'
TBSORT   DC    CL6'TBSORT'
TBTOP    DC    CL5'TBTOP'
TRKS     DC    CL8'TRKS'
ORDER    DC    CL5'ORDER'
NOWRITE  DC    CL7'NOWRITE'
REPLACE  DC    CL7'REPLACE'
SETMSG   DC    CL6'SETMSG'
BYPASS   DS    0F                             TABLE OF TRIVIAL
         DC    CL8'3380'                      UNIT NAME TO BYPASS
         DC    CL8'3390'
         DC    CL8'SYSALLDA'
BYPASSE  EQU   *
BYPASSL  EQU   (BYPASSE-BYPASS)/4             NUMBER OF ENTRIES
DSECT    DSECT
SAVEAREA DS    18F                            SAVEAREA
NAMELIST DS    F
UNITN    DS    CL8
DEVNPTR  DS    F
UCBPTR   DS    F
LGDSECT  EQU   *-DSECT
LGSTOR   EQU   4*500+8                          WORKAREA FOR EDTINFO
WORKL    EQU   LGDSECT+LGSTOR
         REGISTER
         IEFUCBOB                               DSECT FOR UCB
         END


ISPF PANEL $EDT TO DISPLAY THE RESULT OF $EDT

)ATTR
   ! TYPE(OUTPUT) INTENS(LOW) JUST(RIGHT)
   $ TYPE(OUTPUT) INTENS(HIGH) JUST(RIGHT)
   # TYPE(TEXT) COLOR(RED) INTENS(HIGH)
   \ TYPE(TEXT) COLOR(YELLOW) INTENS(HIGH)
   % TYPE(TEXT) COLOR(GREEN) INTENS(HIGH)
   $ TYPE(TEXT) SKIP(ON) INTENS(LOW)
)BODY EXPAND(@@)
+@-@#EDT INFO+@-@+
$\COMMAND%===>_ZCMD                                          %SCROOL ===>_SAMT+
$\SORT KEY%===>_SKEY
$
$   %CUU+  %VOLSER+  %UNITNAME  %MOUNT     %TYPE
$
)MODEL
$  !Z   +  $Z     +  !Z       + !Z       + !Z   +
)INIT
 .ZVARS = '(CUU VOLSER UNITNAME MOUNT TYPE)'
 &ZTDMARK = '******************************* BOTTOM OF DATA +
*******************+
*************'
)PROC
  IF (.RESP = ENTER)
   VER (&SKEY,LIST,CUU,VOLSER,UNITNAME,MOUNT)
)END


ISPF MESSAGE MEMBER $EDT00
$EDT001A 'ERROR...' .ALARM=YES
'ERROR DURING EDTINFO MACRO...'
$EDT002A 'ERROR...' .ALARM=YES
'ERROR DURING UCBLOOK MACRO...'


Patrick Renard
CTRCE NE (France)                           c Xephon 1996

