Automatic reminder and command facility

The following utility provides a site with the ability to issue MVS or JES2
commands, or to send messages to the master MVS console at specific or regular
intervals.  The program can also cope with multiple systems, scheduling the
event to occur on all or specific machines.  The utility is used at our site to
schedule regular events, eg daily SMF reporting, operator reminders to start
production teleprocessing systems, etc.

Below is the Assembler code, some sample control cards specifying some uses for
the utility, and the JCL that must be added to a JES2 PROCLIB.

To initiate the procedure, a S ZTIMER command should be added to
SYSl.PARMLIB(COMMNDxx), or entered shortly after each IPL; similarly, the
procedure should be refreshed if a parameter change has been made and the
changes are required before the next scheduled event.

Included within the program are some useful routines, such as Julian to Calendar
date conversions, and issuing messages to operator consoles, that can be
incorporated into other programs.


THE PROGRAM

         TITLE '*** ZTIMER - TSG ACTION REMINDER.                 ***'
*---------------------------------------------------------------------*
*    THIS PROGRAM PROVIDES A 'REMINDER' FACILITY FOR EVENTS WHICH     *
*    OCCUR REGULARLY. THIS PROGRAM WILL ISSUE A WRITE-TO-OPERATOR     *
*    OR A CONSOLE COMMAND DEPENDING ON THE INPUT.                     *
*    INPUT:  VIA DDNAME SYSIN (CONTROL STATEMENTS)                    *
*            VIA DDNAME SMFIN (SMFPRMOO MEMBER IN SYS1.PARMLIB)       *
*    OUTPUT: TO CONSOLE VIA WTO OR MGCR MACRO.                        *
*---------------------------------------------------------------------*
ZTIMER   ZENT    Sun Alliance program entry and register save macro
*---------------------------------------------------------------------*
*       GET CURRENT TIME AND DATE INTO CHARACTER FORMAT.              *
*       CHECK FOR LEAP YEAR AND ADJUST.                               *
*       EVALUATE DAY OF THE WEEK AND WHETHER WEEK-END OR NOT.         *
*---------------------------------------------------------------------*
         TIME  DEC                        GET SYSTEM TIME AND DATE
         ST    R0,PTIM                    STORE PACKED TIME
         ST    Rl,PDAT                    STORE PACKED DATE
         ST    R1,PDAT                    STORE PACKED DATE
         STCM  R1,4,YEAREND+1             SAVE 'YY' PART OF DATE
         ED    CURTMSK(6),PTIM            UNPACK TIME
         ED    CURDMSK(7),PDAT+1          UNPACK DATE
         SLR   R2,R2                      R2 = 0
         CVB   R3,PDATDBL                 R3 = YYDDD IN BINARY
         D     R2,FULL1000                R3 = YY,  R2 = DDD
         LR    R4,R3                      KEEP YEARS FOR LATER
         SRL   R4,2                       R4 = R4 / 4
         SLL   R4,2                       R4 = R4 * 4
         CR    R3,R4                      ARE YEARS EQUAL ?
         BNE   NOLEAP                     NO ->
         MVC   YEAREND+2(2),LEAPDAYS      LEAP YEARS HAVE 366 DAYS
NOLEAP   EQU   *
         ST    R3,YEARS                   SAVE BINARY YEARS
         ST    R2,DAYS                    SAVE BINARY DAYS
         SLR   R2,R2                      R2 = 0
         LA    R3,365                     R3 = 365
         M     R2,YEARS                   R3 = YEARS * 365
         L     R4,YEARS                   R4 = YEARS IN BINARY
         BCTR  R4,0                       R4 = R4 - 1
         SRL   R4,2                       R4 = R4 / 4
         AR    R3,R4                      R3 = R3 + R4
         A     R3,DAYS                    R3 = R3 + DDD DAYS
         ST    R3,TEMP                    SAVE IT FOR NOW
         SLR   R2,R2                      R2 = 0
         D     R2,FULL7                   R3 = INTEGER(R3 / 7)
         M     R2,FULL7                   R3 = R3 * 7
         L     R2,TEMP                    GET BACK PREVIOUS VALUE
         SR    R2,R3                      R2 = 0 TO 6 (SUN TO SAT)
         SLL   R2,2                       R2 = R2 * 4
         LA    R2,WKDAYS(R2)              R2 -> TABLE ENTRY
         MVC   WKDAY,0(R2)                EXTRACT WEEKDAY
         CLC   WKDAY,SATURDAY             IS IT A SATURDAY ?
         BE    WEEKEND                    YES ->
         CLC   WKDAY,SUNDAY               IS IT A SUNDAY ?
         BNE   WEEKDAY                    NO ->
WEEKEND  EQU   *
         MVC   DAYTYPE,WKEND              SET DAYTYPE TO 'WEEK-END'
WEEKDAY  EQU   *
*---------------------------------------------------------------------*
*        CALCULATE NEXT INVOCATION OF ZTIMER                          *
*        (2 HRS HENCE OR AT NEXT EVENT WHICHEVER COMES EARLIER)       *
*        GET SYSTEM-ID FROM SMF PARAMETERS                            *
*---------------------------------------------------------------------*
         OI    PTIM+3,X'0F'               GIVE A DECENT SIGN TO PTIM
         SRP   PTIM,64-1,0                SHIFT RIGHT 1 DIGIT POS
         AP    PTIM,HRS2                  TIME = TIME + 2 HOURS
         ED    NXTTMSK(7),PTIM            TIME FOR NEXT EXECUTION
         CP    PTIM,DAYEND                DID WE PASS MIDNIGHT ?
         BNH   SAMEDAY                    NO ->
         MVC   NXTTIM+1(5),TWENTY4        NEXT EXECUTION IS AT MIDNIGHT
SAMEDAY  EQU   *
         OPEN  (SMFIN,(INPUT))            OPEN SMF PARMLIB MEMBER
SMFREAD  EQU   *
         GET   SMFIN,INAREA               READ A RECORD
         LA    R2,INAREA                  R2 -> START OF SMF RECORD
         LA    R4,1                       R4 =  INCREMENT FOR BXLE
         LA    R5,INAREA+68               R5 -> END OF SMF RECORD
SIDSERCH EQU   *
         CLC   0(4,R2),SIDKEY             'SID(' KEYWORD FOUND ?
         BE    SIDFOUND                   YES ->
         BXLE  R2,R4,SIDSERCH             INCR, CHECK AND LOOP
         B     SMFREAD                    NOT FOUND, TRY NEXT CARD
SMFEOF   EQU   *
         MVC   SYSID,BLANKS               NO SYSID FOUND.
         B     SYSIDOK
SIDFOUND EQU   *
         MVC   SYSID,4(R2)                SAVE CURRENT SYSTEM-ID
SYSIDOK  EQU   *
         CLOSE SMFIN                      CLOSE INPUT FILE
*---------------------------------------------------------------------*
*        READ EACH RECORD, AND CHECK FORMAT, DATE AND SYSTEM-ID       *
*---------------------------------------------------------------------*
         OPEN  (SYSIN,(INPUT))            OPEN INPUT FILE
READ     EQU   *
         GET   SYSIN,INAREA               READ A RECORD
         CLI   INAREA,C'*'                IS THIS A COMMENT CARD ?
         BE    READ                       YES ->
         CLC   INAREA(3),ALL              TO BE DONE ON 'ALL' DAYS ?
         BE    CHKSYSID                   YES ->
         CLC   INAREA(5),DAYTYPE          TO BE DONE ON THIS TYP OF DAY
         BE    CHKSYSID                   YES ->
         CLC   INAREA(3),WKDAY            TO BE DONE ON THIS WEEKDAY ?
         BE    CHKSYSID                   YES ->
         LA    R2,WKDAYS                  R2 -> WEEKDAY TABLE
         LA    R4,4                       R4 =  LENGTH OF TABLE ENTRIES
         LA    R5,WKDAYS+24               R5 -> END OF WEEKDAY TABLE
DAYSERCH EQU   *
         CLC   INAREA(3),0(R2)            TO BE DONE ON ANOTHER DAY ?
         BE    READ                       YES ->
         BXLE  R2,R4,DAYSERCH             INCR, CHECK AND LOOP
         CLC   INAREA(5),WKEND            TO BE DONE ON A WEEKEND ?
         BE    READ                       YES ->
         CLC   INAREA(5),WORKDAY          TO BE DONE IN THE WEEK ?
         BE    READ                       YES ->
         CLC   INAREA(5),CURDAT           TO BE DONE ON THIS JULDATE ?
         BE    CHKSYSID                   YES ->
         CLI   INAREA+2,C'/'              VALID DATE SEPARATOR ?
         BNE   DUFFCARD                   NO ->
         CLI   INAREA+5,C'/'              VALID DATE SEPARATOR ?
         BNE   DUFFCARD                   NO ->
         BAL   R14,CALTOJUL               DDMMYY TO YYDDD CONVERSION
         CLC   JULDAT,CURDAT              TO BE DONE TODAY ?
         BNE   READ                       NO ->
CHKSYSID EQU   *
         CLC   INSYSID,BLANKS             WAS A SYSTEM-ID SPECIFIED ?
         BE    CHKTIME                    NO -> GO AND CHECK TIME
         CLC   INSYSID,SYSID              ACTION FOR THIS SYSTEM ?
         BNE   READ                       NO ->
*---------------------------------------------------------------------*
*        CHECK TIME OR EXECUTION AND TYPE OF ACTION REQUIRED.         *
*        PERFORM THE REQUIRED FUNCTION.                               *
*---------------------------------------------------------------------*
CHKTIME  EQU   *
         CLC   INTIME,BLANKS              WAS A TIME SPECIFIED ?
         BE    EXECUTE                    NO -> GO AND DO IT
         CLC   INTIME,CURTIM              WHEN IS THE EVENT FOR ?
         BE    EXECUTE                    NOW -> GO AND DO IT
         BL    READ                       BEFORE -> IGNORE IT
         CLC   INTIME,NXTTIM+1            BEFORE THE NEXT EXECUTION ?
         BH    READ                       NO -> IGNORE IT
         MVC   NXTTIM+1(5),INTIME         ENSURE WE CATCH HIM
         B     READ                       GET NEXT CARD
EXECUTE  EQU   *
         CLC   INTYPE,COMMAND             IS IT A COMMAND REQUEST ?
         BE    ISSUECOM                   YES ->
         CLC   INTYPE,DISPLAY             IS IT A DISPLAY REQUEST ?
         BNE   DUFFCARD                   NO ->
         MVC   MESSAGE+8(49),INACTN       MOVE MESSAGE TO WTO AREA
MESSAGE  WTO   '....+....1....+....2....+....3....+....4....+....',
               DESC=(2)                   TELL 'EM
         B     READ                       GO BACK FOR MORE
ISSUECOM EQU   *
         MVC   COMACTN(49),INACTN         MOVE COMMAND TO COM AREA
         MODESET KEY=ZERO,MODE=SUP        SWITCH TO SUPERVISOR STATE
         SLR   R0,R0                      PRETEND YOU'RE MVS
         MGCR  COMAREA                    ISSUE THE COMMAND
         MODESET KEY=NZERO,MODE=PROB      SWITCH BACK TO NORMAL
         B     READ                       GO BACK FOR MORE
*---------------------------------------------------------------------*
*        END-OF-FILE HANDLING.                                        *
*        RETURN TO CALLER.                                            *
*        DUFF INPUT HANDLING.                                         *
*---------------------------------------------------------------------*
EOF      EQU   *
         CLOSE SYSIN                      CLOSE INPUT FILE
         MVC   AUTOTIME,NXTTIM+1          MOVE NEXT TIME TO AUTO-COMM
         MODESET KEY=ZERO,MODE=SUP        SWITCH TO SUPERVISOR STATE
         SLR   R0,R0                      PRETEND YOU'RE MVS
         MGCR  SCHEDULE                   ISSUE THE AUTOMATIC COMMAND
         MODESET KEY=NZERO,MODE=PROB      SWITCH BACK TO NORMAL
         ZEXT                 Sun Alliance program return macro
DUFFCARD EQU   *
         WTO   'ZTIMER: INVALID INPUT DETECTED - DUFF CARD READS:'
         MVC   DUFFMSG+8(54),INAREA
DUFFMSG  WTO   '....+....1....+....2....+....3....+....4....+....5....'
         B     READ                       IGNORE THIS ONE
*---------------------------------------------------------------------*
*        CALENDER DATE (DD/MM/YY) TO JULIAN DATE (YY.DDD) CONVERSION  *
*        INPUT AREA IS FIELD CALLED 'INDATE'                          *
*        OUTPUT AREA IS FIELD CALLED 'JULDAT'                         *
*---------------------------------------------------------------------*
CALTOJUL EQU   *
         PACK  DAY,INDATE(2)              EXTRACT DAY PORTION
         PACK  MONTH,INDATE+3(2)          EXTRACT MONTH PORTION
         PACK  YEAR,INDATE+6(2)           EXTRACT YEAR PORTION
         CVB   R5,MONTHDBL                R5 = MONTH IN BINARY
         BCTR  R5,0                       R5 = R5 - 1
         SLL   R5,1                       R5 = R5 * 2
         LH    R2,TABLE(R5)               EXTRACT CUMULATIVE DAYS
         CVB   R3,YEARDBL                 R3 = YEAR IN BINARY
         LR    R5,R3                      R5 = YEAR IN BINARY
         SRL   R3,2                       R3 = R3 / 4
         SLL   R3,2                       R3 = R3 * 4
         CR    R3,R5                      WAS IT A LEAP YEAR ?
         BNE   MNTHREDY                   NO ->
         CP    MONTH,PACK2                IS IT PAST FEBRUARY ?
         BNH   MNTHREDY                   NO ->
         LA    R2,1(R2)                   ADD 1 FOR THE 29TH
MNTHREDY EQU   *
         CVB   R3,DAYDBL                  R3 = DAY IN BINARY
         AR    R2,R3                      R2 = TOTAL DAYS
         M     R4,FULL1000                R5 = YEAR * 1000
         AR    R5,R2                      R5 = R5 + DAYS
         CVD   R5,DOUBLE                  CONVERT DATE TO PACKED
         MVC   JULDATF(7),JULDMSK         MOVE EDIT MASK TO FIELD
         ED    JULDATF(7),DOUBLE+5        FORMAT INTO CHAR FIELD
         BR    R14                        RETURN TO CALLER
*---------------------------------------------------------------------*
*        CONSTANT DATA AREAS.                                         *
*---------------------------------------------------------------------*
FULL7    DC    F'7'                       CONSTANT
FULL1000 DC    F'1000'                    CONSTANT
PACK2    DC    PL2'2'                     CONSTANT
HRS2     DC    PL4'020000'                02 HOURS
HRS24    DC    PL4'240000'                24 HOURS
DAYEND   DC    PL4'235959'                END OF DAY (MIDNIGHT - 1 MIN)
YEAREND  DC    PL4'365'                   END OF YEAR
LEAPDAYS DC    PL2'366'                   NO OF DAYS IN A LEAP YEAR
CURDMSK  DC    CL1'0'                     FILL CHAR
CURDAT   DC    XL6'21204B202020'          CURRENT DATE   (YY.DDD)
CURTMSK  DC    CL1'0'                     FILL CHAR
CURTIM   DC    XL5'21204B2020'            CURRENT TIME  (HH.MM)
NXTTMSK  DC    CLl'0'                     FILL CHAR
NXTTMSK  DC    CL1'0'                     FILL CHAR
NXTTIM   DC    XL6'2120204B2020'          TIME OF NEXT EXECUTION
JULDMSK  DC    XL7'F021204B202020'        JULIAN DATE EDIT MASK
JULDATF  DS    XL1                        FILL CHAR
JULDAT   DS    XL6                        JULIAN DATE
TABLE    DC    H'000',H'031',H'059',H'090',H'120',H'151'
         DC    H'181',H'212',H'243',H'273',H'304',H'334'
WKDAYS   DC    C'SUN MON TUE WED THU FRI SAT'  ALL THE WEEKDAYS
ALL      DC    CL3'ALL'                   CONSTANT
TWENTY4  DC    CL5'24.00'                 CONSTANT
BLANKS   DC    CL5'     '                 CONSTANT
DISPLAY  DC    CL3'DIS'                   CONSTANT
COMMAND  DC    CL3'COM'                   CONSTANT
SATURDAY DC    CL3'SAT'                   CONSTANT
SUNDAY   DC    CL3'SUN'                   CONSTANT
SIDKEY   DC    CL4'SID('                  CONSTANT
WKEND    DC    CL5'WKEND'                 CONSTANT
WORKDAY  DC    CL5'WKDAY'                 CONSTANT
DAYTYPE  DC    CL5'WKDAY'                 EITHER 'WKDAY' OR 'WKEND'
COMAREA  DS    0F                         COMMAND AREA
         DC    H'70'                      LENGTH
         DC    X'0000'                    FLAGS
COMACTN  DC    CL80' '                    COMMAND FIELD
SCHEDULE DS    0F                         AUTOMATIC COMMAND AREA
         DC    H'37'                      LENGTH
         DC    X'0000'                    FLAGS
         DC    CL08'$TA99,T='
AUTOTIME DC    CL05'00.00'                TIME FOR NEXT EXECUTION
         DC    CL80',''$VS,''''S ZTIMER'''''''
*---------------------------------------------------------------------*
*        OTHER STORAGE REQUIREMENTS                                   *
*---------------------------------------------------------------------*
DOUBLE   DS    D                          WORK SPACE FOR CONVERSIONS
PTIMDBL  DC    XL4'0'
PTIM     DC    PL4'0'                     PACKED TIME FORMAT HHMMSSCC
PDATDBL  DC    XL4'0'
PDAT     DC    PL4'0'                     PACKED DATE FORMAT 00YYDDDF
DAYDBL   DC    XL5'0'
DAY      DC    PL3'0'                     WORKSPACE - JULTOCAL
MONTHDBL DC    XL5'0'
MONTH    DC    PL3'0'                     WORKSPACE - JULTOCAL
YEARDBL  DC    XL5'0'
YEAR     DC    PL3'0'                     WORKSPACE - JULTOCAL
TEMP     DS    F                          WORKSPACE
YEARS    DS    F                          YEARS IN BINARY
DAYS     DS    F                          DAYS IN BINARY
WKDAY    DS    CL3                        TODAY'S WEEK DAY
SYSID    DS    CL4                        SMF SYSID OF CURRENT SYSTEM
INAREA   DS    0CL80                      INPUT AREA
INDATE   DS    CL08                       DATE FORMAT DD/MM/YY
         DS    CL01
INTIME   DS    CL05                       TIME FORMAT HH.MM OR BLANK
         DS    CL01
INTYPE   DS    CL03                       ACTION TYPE DISPLAY/COMMAND
INSYSID  DS    CL04                       SMF SYSTEM-ID OF TARGET SYS
         DS    CL01
INACTN   DS    CL49                       COMMAND OR MESSAGE
         DS    CL08
*---------------------------------------------------------------------*
*        DATA CONTROL BLOCKS.                                         *
*---------------------------------------------------------------------*
SYSIN    DCB   DDNAME=SYSIN,DSORG=PS,MACRF=(GM),EODAD=EOF
SMFIN    DCB   DDNAME=SMFIN,DSORG=PS,MACRF=(GM),EODAD=SMFEOF
         END

SAMPLE CONTROL CARDS

*----------------------------------------------------------------------*
*             ZTIMER - AUTOMATIC REMINDER/COMMAND FACILITY             *
* COL 1 TO 8:  EITHER DATE IN FORMAT 'DD/MM/YY'                        *
*                 OR DATE IN FORMAT 'YY/DDD'                           *
*                 OR 3-CHAR WEEKDAY 'MON TUE WED THU FRI SAT SUN'      *
*                 OR WORD 'WKDAY' FOR ANY WEEKDAY (MON TO FRI)         *
*                 OR WORD 'WKEND' FOR WEEKEND (SAT AND SUN)            *
*                 OR WORD 'ALL' FOR EVERY DAY EXECUTION                *
*                 OR '*' IN COL 1 FOR A COMMENT CARD.                  *
* COL 10 TO 14:  EITHER TIME IN FORMAT 'HH.MM'                         *
*                 OR BLANKS FOR EXECUTION EVERY TIME.                  *
* COL 16 TO 18:  EITHER 'COM' TO ISSUE COMMAND                         *
*                 OR 'DIS' TO ISSUE A HIGH-BRIGHTNESS MESSAGE          *
* COL 19 TO 22:  EITHER THE SYSTEM-ID WHERE THE ACTION IS TO BE DONE   *
*                 OR BLANKS FOR ACTION ON ALL SYSTEMS                  *
* COL 24 TO 72:  EITHER THE MESSAGE TO BE DISPLAYED                    *
*                 OR THE COMMAND AS ENTERED AT THE MASTER CONSOLE.      *
*----------------------------------------------------------------------*
*...+....1....+....2....+....3....+....4....+....5....+....6....+....7..
*--------PURGE SYSOUT '0' & 'Z' OLDER THAN N DAYS, BOTH SYSTEMS
ALL      00.05 COM     $OQ,Q=Z,CANCEL,A=2
ALL      00.05 COM     $OQ,Q=0,CANCEL,A=5
ALL      00.05 COM     $OQ,Q=K,CANCEL,A=5
*
*--------ENSURE LOGREC AND PM2 RUN IN THE MORNING
ALL      07.00 COMSYS1 S PXLOGSl
ALL      07.30 COMSYS1 S PX2DALY,MEM=PM2HST
*
*--------ENSURE JES2 LINES UP FOR 8100'S
WKDAY    05.45 DISSYS1 PLEASE ENSURE THAT LNE2 + LNE6 ARE ACTIVE !!!
*
*--------RUN INITS1 AT 06:00 EACH WEEKDAY ON SYS1
WKDAY    06.00 COMSYS1 S INITS1
*
*--------AUTO START OF SMF PROCEDURE AT 07.00 EACH WEEKDAY ON SYS1
WKDAY    07.00 COMSYSl S SMF
WKDAY    07.00 COMSYS1 S SMF
*
*--------AUTO START OF SMF PROCEDURE AT 07.00 EACH SATURDAY ON SYS1
SAT      07.00 COMSYS1 S SMF
*
*--------TIDY UP SMF/RMF DATA EACH MONDAY ON SYS1
MON      09.00 COMSYS1 S ZCOLLECT
*
*--------START BIBLE PRINT ONCE A DAY AT 16.00
ALL      16.00 COMSYS1 S ZBIBLE
*
*--------CHECK RELEASE OF CLASS 'D' JOBS OVERNIGHT
ALL      01.00 DISSYS1 HAVE CLASS 'D' JOBS BEEN RELEASED TONIGHT
*
*--------PROMPT OPERATORS TO CHECK H015/BDT, WEEKDAYS SYS1 ONLY
WKDAY    06.00 COMSYS1 S ZBDTMEMO
WKDAY    08.15 COMSYS1 S ZBDTMEMO
*
*--------STOP BDT DURING THE DAY, WEEKDAYS SYS1 ONLY
WKDAY    09.00 COMSYS1 P ZBDTS1
*
*--------STOP BDT JUST BEFORE STARTUP, IN CASE ITS UP
WKDAY    18.25 COMSYS1 P ZBDTS1
*
*--------START BDT AT END OF TP, WEEKDAYS SYS1 ONLY

WKDAY    18.30 COMSYS1 S ZBDTS1
*
*--------ENSURE NPM UP DURING TP, WEEKDAYS SYS1 ONLY
WKDAY    06.00 COMSYS1 S NPM
WKDAY    18.35 COMSYS1 P NPM
FRI      23.30 COMSYS1 S ZNPMCLR
MON      05.30 COMSYS1 S ZNPMCLR
*
*--------REMIND SHIFT ABOUT STARTING CICS IN THE MORNINGS
WKDAY    06.15 DISSYS1 IT'S 6.15: DON'T FORGET CICS STARTUP AT 6.30
WKDAY    06.16 DISSYS1 REMEMBER TO START PTCDLI AS WELL
*
*--------START / STOP  TAPE ACTIVITY LOGGING
ALL      17.55 COMSYS1 S RESTP
ALL      18.00 COMSYS1 F RESTP,LOG,TP
ALL      07.00 COMSYS1 P RESTP
ALL      09.35 COMSYS1 S TSGJOB,MEMBER=TAPEUSE
*
*--------TRACE NETWORK TRAFFIC
16/07/86 10.10 COMSYS1 S ZGTFTAPE,DATE=86197
16/07/86 10.10 DISSYS1 PLEASE REPLY 'U' TO 'AHL125A RESPECIFY TRACE...'
16/07/86 10.15 COMSYS1 F NET,TRACE,TYPE=BUF,ID=UPlAPPLS,SCOPE=ALL
16/07/86 12.15 COMSYS1 F NET,NOTRACE,TYPE=BUF,ID=UPlAPPLS,SCOPE=ALL
16/07/86 12.15 DISSYS1 TELL TSG OS GROUP TO STOP ZGTFTAPE NOW PLEASE
PROCLIB JCL

//ZTIMER  PROC MEM=ZTIMER,SMF=00,SOUT=A
//REMINDR EXEC PGM=ZTIMER
//SYSUDUMP DD  SYSOUT=&SOUT
//SMFIN    DD  DSN=SYS1.PARMLIB(SMFPRM&SMF),DISP=SHR
//SYSIN    DD  DSN=pds.for.ctlcards(&MEM),DISP=SHR


Stefan Neumann
Systems Programmer
Sun Alliance PLC (UK)    € Xephon 1987



