Scanning for active jobs


//your job card
//STEPA EXEC ASMFCL
//ASM.SYSIN DD *                  ASSEMBLER SOURCE FOLLOWS
* The following code is a demonstration of scanning the ASVT to locate
* ASCBs and job names.
ASVTSCN  AMODE 24
ASVTSCN  CSECT
         BAKR 14,0
         LR   12,15
         USING ASVTSCN,12
         REGS
         L     R3,0   (R1)                ADDRESS INPUT PARM
         LA    R4,2(,R3)               ADDRESS THE ACTUAL DATA
         LH    R3,0   (,R3)               GET LENGTH OF PARM
         BCTR  R3,0                       DROP BY 1 FOR EXECUTE
         EX    R3,MOVE
         XR    R2,R2                   CLEAR R2
* Commence the scan ....
* PSA => CVT =>  ASVT => ASCB =>-
*                  ¬===========|
         USING PSA,R2                  AND MAP PSA
         L     R2,FLCCVT               GET THE CVT
         DROP  R2
         USING CVT,R2                  MAP THE CVT
         L     R2,CVTASVT              GET THE ASVT ADDRESS
         DROP  R2
         USING ASVT,R2                 MAP THE ASVT
         L     R3,ASVTMAXU             GET NUMBER OF ADDRESS SPACES
         LA    R5,ASVTENTY             POINT AT FIRST ASVT ENTRY
         USING ASCB,R6
CHKASCBS DS    0   H
         L     R6,0   (,R5)               POINT AT ASCB
         LTR   R6,R6                   CHECK ADDRESS SPACE ASSIGNED.
         BM    NEXTASCB                IF NOT THEN BYPASS.
         L     R4,ASCBJBNI             ADDRESS JOBNAME
         LTR   R4,R4                   IS IT A STARTED TASK
         BNZ   ADOK                    NO SO R4 IS OK.
         L     R4,ASCBJBNS             ADDRESS JOBNAME
         LTR   R4,R4                   IS ASID NOT ASSIGNED
         BZ    NEXTASCB                NO, SO GET NEXT
ADOK     DS    0   H
         CLC   JOB,0   (R4)
         BNE   NEXTASCB
         B     SET8
NEXTASCB DS    0   H
         LA    R5,4(,R5)               POINT AT NEXT ASVT
         BCT   R3,CHKASCBS
SET0        DS    0   H
         XR    R15,R15
         PR
SET8     DS    0   H
         LA R15,8
         PR
         LTORG
MOVE     MVC  JOB(0   ),0   (R4)
JOBST    DC   8C' '
         ORG JOBST
JOB      DS   CL8
         IHAPSA
         IHAASVT
         IHAASCB
         CVT DSECT=YES
         END
/*                                SOURCE INPUT DELIMETER
//LKED.SYSLMOD DD DSN=your load library,DISP=SHR
//LKED.SYSIN DD *
 ENTRY ASVTSCN
 NAME ASVTSCN(R)
/*
//STEP1 EXEC PGM=ASVTSCN,PARM='job to search for'
//STEPLIB DD DSN=your load library,DISP=SHR


//your job card
//STEPA EXEC ASMFCL
//ASM.SYSIN DD *                     ASSEMBLER SOURCE FOLLOWS
CSCBSCN  AMODE 31
CSCBSCN  RMODE ANY
CSCBSCN  CSECT
         BAKR 14,0
         LR   12,15
         USING CSCBSCN,12
         L     2,0   (1)                ADDRESS PARMS
         LA    3,2(,2)               ADDRESS THE PARMS
         LH    4,0   (,2)               GET LENGTH OF PARMS
         BCTR  4,0                      DECREMENT R4
         EX    4,MOVE
MOVEIT   LOCTR
MOVE     MVC  JOB(0   ),0   (3)
CSCBSCN  LOCTR
* Commence the scan ....
* PSA => CVT =>  BASE => CSCB =>-
*                        ¬=====|
         XR   2,2
         USING PSA,2
         L    3,FLCCVT
         USING CVT,3
         L    4,CVTMSER
         USING BASE,4
         L    5,BACHN                ADDRESS FIRST CSCB
         USING CHAIN,5
LOOP     DS   0   H
         CLC  CHKEY,NOJOB  * ALL CSCBS DONE?
*                          * INDICATED BY ZERO CSCB CHAIN ADDRESS.
         BE   SET0            * YES SO END JOB CODE 0
         CLC  CHKEY,JOB    * IS THIS THE JOB
         BE   SET8         * YES SO SET CODE 8
         L    5,CHPTR
         B    LOOP
SET0        XR 15,15
         PR
SET8     LA 15,8
         PR
         LTORG
JOB      DC CL8' '
NOJOB    DC XL8'0   '
         DSECT
         IEECHAIN
         IHAPSA
         IEEBASEA
         CVT DSECT=YES
         END
/*                                SOURCE INPUT DELIMETER
//LKED.SYSLMOD DD DSN=your load library,DISP=SHR
//LKED.SYSIN DD *
 ENTRY CSCBSCN
 NAME CSCBSCN(R)
/*
//STEP1 EXEC PGM=CSCBSCN,PARM='job to search for'
//STEPLIB DD DSN=your load library,DISP=SHR


/* REXX */
QUEUE 'JOBNAME  ASID'
QUEUE '-------  ----'
cvtmser=D2X(C2D(STORAGE(10   ,4))+60   ) /* point to cvtmser */
base=D2X(C2D(STORAGE(cvtmser,4))) /* point to basea */
cscb=D2X(C2D(STORAGE(base,4))) /* point to 1st cscb */
loop:
DO WHILE cscb¬   ='0   0   0   0   0   0   0   0   '
nameaddr=d2x(x2d(cscb)+8)
asidaddr=d2x(x2d(cscb)+30   )
asid=c2x(STORAGE(asidaddr,2))
jobname=STORAGE(nameaddr,8)
IF LEFT(jobname,1)¬   =' ' then queue jobname asid
cscb=D2X(C2D(STORAGE(cscb,4))) /* point to next cscb */
END
QUEUE ''
CALL MSG(OFF)
'FREE FI(SPONGE)'
"ALLOC FI(SPONGE) CATALOG",
   "DSORG(PS) REC(F B) LR(44) BLK(440   )",
   "SPACE(1,2) TRACKS"
QUEUE ''
'EXECIO * DISKW SPONGE (FINIS'
X=LISTDSI(SPONGE 'FILE')
'ISPEXEC VIEW DATASET('sysdsname') VOLUME('sysvolume')'


            JOBNAME  ASID
            -------------

            *MASTER* 0   0   0   1
            PCAUTH   0   0   0   2
            RASP     0   0   0   3
            TRACE    0   0   0   4
            DUMPSRV  0   0   0   5
            XCFAS    0   0   0   6
            GRS      0   0   0   7
            SMXC     0   0   0   8
            SYSBMAS  0   0   0   9
            CONSOLE  0   0   0   A
            WLM      0   0   0   B
            ANTMAIN  0   0   0   C
            JESXCF   0   0   0   E
            ALLOCAS  0   0   0   F
            etc


Systems Programmer (UK)             c Xephon 1996

