Assembler macros in XA 31-bit mode (cont)

We conclude this article, which began in last month's issue, by printing
the source code for the remaining macros: BALRXA, CALLXA, BSM24, BSM31,
and TESTXA.  BALRXA

* GENERATES BASSM 14,15 IF RUNNING USER XA, CALL AS BALRXA R14,R15
* GENERATES BALR 14,15 IF RUNNING UNDER MVS/370, CALL AS BALRXA R14,R15
* ENSURES THAT SUBROUTINES IN AN XA ENVIRONMENT ARE CALLED IN CORRECT
* ADDRESSING MODE; THE REQUIREMENT IS THAT R15 CONTAINS CORRECT
* ADDRESSING MODE IN HIGH ORDER BIT; THE ADDRESSING MODE IS RETURNED
* TO THE USER FROM THE LOAD MACRO.
         MACRO
&NAME    BALRXA &RREG,&BREG
         LCLC  &NONXA
         LCLC  &NEXTOP
&NONXA   SETC  'BL1'.'&SYSNDX'
&NEXTOP  SETC  'BL2'.'&SYSNDX'
         TESTXA (14) .
         LTR   14,14 .                    TEST FOR XA
         LA    14,&NEXTOP .               SET RETURN ADDRESS
         BP    &NONXA .                   USE BALR FOR MVS/370
         BASSM &RREG,&BREG .              LINK
&NONXA   DS    0H
         BALR  &RREG,&BREG .              LINK
&NEXTOP  DS    0H
         MEXIT
         MEND
CALLXA
* GENERATES BASSM 14,15 IF RUNNING UNDER XA, CALL AS CALLXA R14,R15
* GENERATES BALR 14,15 IF RUNNING UNDER MVS/370, CALL AS CALLXA R14,R15
* ENSURES THAT SUBROUTINES IN AN XA ENVIRONMENT ARE CALLED IN CORRECT
* ADDRESSING MODE; THE REQUIREMENT IS THAT R15 CONTAINS CORRECT
* ADDRESSING MODE IN HIGH ORDER BIT; THE ADDRESSING MODE IS RETURNED
* TO THE USER FROM THE LOAD MACRO.
* TO ENSURE CORRECT ADDR MODE USE CALLXA (15),PARMS .
* IN CASE CALLXA ENTRY,PARMS IS USED INITR WILL CHANGE ADDR MODE IF
* POSSIBLE .
         MACRO
&NAME    CALLXA &ENTRY,&OPRNDS,&VLPARA,&ID=,&MF=I
         GBLB  &IHBSWA,&IHBSWB
         GBLC  &IHBNO
         LCLC  &GNAME
         LCLC  &NONXA
         LCLC  &NEXTOP
&NONXA   SETC  'CX1'.'&SYSNDX'
&NEXTOP  SETC  'CX2'.'&SYSNDX'
&IHBNO   SETC  '309'
&GNAME   SETC  'IHB'.'&SYSNDX'
&IHBSWA  SETB  ('&VLPARA' EQ 'VL')
&IHBSWB  SETB  ('&ENTRY' EQ '(15)')
         AIF   ('&VLPARA' NE '' AND '&VLPARA' NE 'VL').ERROR4  àZA33014
         AIF   ('&MF' EQ 'L' AND '&ENTRY' NE '').ERROR1
         AIF   ('&MF' EQ 'L' AND '&ID' NE '').ERROR2
         AIF   ('&MF' NE 'L' AND '&ENTRY' EQ '').ERROR3
         AIF   ('&MF' EQ 'L' ).CONTC
         AIF   (&IHBSWB).CONTCC
         CNOP  0,4
&NAME    B     *+8                               BRANCH AROUND VCON
&GNAME.B DC    V(&ENTRY)                         ENTRY POINT ADDRESS
.CONTC   AIF   ('&OPRNDS' EQ '' AND '&MF(1)' NE 'E').CONTB
.CONTA   IHBOPLST &ENTRY,&OPRNDS,&NAME,MF=&MF
.CONTB   AIF   ('&MF' EQ 'L').EXITI
         AIF   (&IHBSWB).CONTD
         L     15,&GNAME.B                       LOAD 15 WITH ENTRY ADR
.CONTD   ANOP
         TESTXA (14)
         LTR   14,14 .                    TEST FOR XA
         LA    14,&NEXTOP .               SET RETURN ADDRESS
         BP    &NONXA .                   USE BALR 14,15 FOR MVS/370
         BASSM 14,15 .                    LINK
         AIF   ('&ID' EQ '').EXITX
         DC    X'4700'                             NOP INSTRUCTION WITH
         DC    AL2(&ID)                            ID IN LAST TWO BYTES
.EXITX   ANOP
&NONXA   DS    0H
         BALR  14,15                               BRANCH TO ENTRY POINT
         AIF   ('&ID' EQ '').EXIT
         DC    X'4700'                             NOP INSTRUCTION WITH
         DC    AL2(&ID)                            ID IN LAST TWO BYTES
         DS    0H
.EXIT    ANOP
&NEXTOP  DS    0H
.EXITI   MEXIT
.CONTCC  ANOP
&NAME    DS    0H
         AGO   .CONTC
.ERROR1  IHBERMAC 73,&IHBNO,&ENTRY            ENTRY W/ MF=L
         MEXIT
.ERROR2  IHBERMAC 74,&IHBNO,&ID               ID W/ MF=L
         MEXIT
.ERROR3  IHBERMAC 26,&IHBNO                   ENTRY SYMBOL MISSING
         MEXIT
.ERROR4  IHBERMAC 1014,THIRD                  INVALID THIRD PARM àZA33014
         MEND
BSM24
*   SET ADDRESSING MODE TO 24 BIT IF RUNNING UNDER XA
*   NEUTRAL UNDER MVS/370
*   USES WORK REGISTER, DEFAULT TO R15
*    WORKREGISTER CAN BE OVERWRITTEN BY BSM (RX)
*   WORK REG CONTAINS ADDR OF NEXT INSTR AND ADDR MODE (24)
         MACRO
&NAME    BSM24  &REG
         LCLC  &NONXA
&NONXA   SETC  'B24'.'&SYSNDX'
         AIF   ('&REG'(1,1) EQ '(').AREG
         AGO   .RNULL
.AREG    ANOP
&REGR    SETC  '&REG(1)'
         AGO   .REG
.RNULL   ANOP
&REGR    SETC  'R15'
.REG     ANOP
&NAME    DS    0H .
         TESTXA (&REGR)
         LTR   &REGR,&REGR .              TEST FOR MODE
         BP    &NONXA .                   MVS/370
         LA    &REGR,&NONXA               POINT TO AMODE 24 CODE
         BSM   0,&REGR .                  BRANCH TO AMODE 24 CODE
&NONXA   DS    0H .
         BALR  &REGR,0                    LET WORK REG POINT TO NEXT
         MEXIT
         MEND
BSM31
*   SET ADDRESSING MODE TO 31 BIT IF RUNNING UNDER XA
*   NEUTRAL UNDER MVS/370
*   USES WORK REGISTER, DEFAULT TO R15
*    WORKREGISTER CAN BE OVERWRITTEN BY BSM (RX)
*   WORK REG CONTAINS ADDR OF NEXT INSTR AND ADDR MODE
         MACRO
&NAME    BSM31  &REG
         LCLC  &NONXA
&NONXA   SETC  'B31'.'&SYSNDX'
         AIF   ('&REG'(1,1) EQ '(').AREG
         AGO   .RNULL
.AREG    ANOP
&REGR    SETC  '&REG(1)'
         AGO   .REG
.RNULL   ANOP
&REGR    SETC  'R15'
.REG     ANOP
&NAME    DS    0H .
         TESTXA (&REGR)
         LTR   &REGR,&REGR .              TEST FOR MODE
         BP    &NONXA .                   MVS/370
         LA    &REGR,&NONXA .             POINT TO AMODE 31 CODE
         O     &REGR,&NONXA-4             TURN ON AMODE 31 BIT
         BSM   0,&REGR .                  BRANCH TO AMODE 31 CODE
         CNOP  0,4                        ALIGN
         DC    X'80000000'                AMODE 31 BIT
&NONXA   DS    0H .
         BALR  &REGR,0                    LET WORK REG POINT TO NEXT
         MEXIT
         MEND
TESTXA
* TESTS FOR RUNNING UNDER XA
* RETURNS RX = 4 FOR MVS/370
* RETURNS RX = 0 FOR RUNNING UNDER XA IN 24 BIT MODE
* RETURNS RX = X'80000000' (MINUS) FOR RUNNING UNDER XA IN 31 BIT MODE
*  RX DEFAULTS TO R15
*  ANOTHER REGISTER CAN BE USED AS TESTXA (RY)
         MACRO
&NAME    TESTXA &REG
         LCLC  &NONXA
&NONXA   SETC  'TXA'.'&SYSNDX'
         AIF   ('&REG'(1,1) EQ '(').AREG
         AGO   .RNULL
.AREG    ANOP
&REGR    SETC  '&REG(1)'
         AGO   .REG
.RNULL   ANOP
&REGR    SETC  'R15'
.REG     ANOP
&NAME    DS    0H .
         L     &REGR,X'10' .              GET CVT ADDR
         TM    X'74'(&REGR),X'80' .       TEST CVTDEB FOR UNDER XA
         LA    &REGR,4 .                  INDICATE MVS/370
         BNO   &NONXA .                   NOT UNDER XA
         BSM   &REGR,0 .                  SAVE ADDRESSING MODE IN REG
&NONXA   DS    0H .
         MEXIT
         MEND


Nils Plum
Systems Programmer (Denmark)  € Nils Plum 1988














