Displaying CSA/ECSA usage by protect key

This article describes a program which has been developed at
my installation to display CSA/ECSA usage by subpool within
protect key for MVS/XA and MVS/ESA.  The program can be
invoked via a call or as a command processor.  By default, the
program will display CSA usage below the 16-megabyte line.
PARM=E will give you a display of extended CSA (ie CSA
above the 16-megabyte line) only, while PARM=A will give
you an aggregate display of both CSA and ECSA usage.

Strictly speaking, the displays show CSA usage in pages rather
than in actual GETMAINed amounts of storage.  For example,
if you GETMAIN 10 bytes or 4000 bytes in a previously
unused subpool both would be displayed as 4K (ie one page).
The program does not take account of unused areas within
allocated pages.

SHOWCSA  AMODE 31
SHOWCSA  RMODE 24
SHOWCSA  CSECT ,
         SAVE  (14,12),,SHOWCSA-&SYSDATE-&SYSTIME  SAVE REGS/SET ID
         LR    R12,R15               BASE REG FOR CSECT
         USING SHOWCSA,R12
         CNOP  0,4                   ALIGN TO FULLWORD
         LA    R15,*+8               SET SA ADDRESS AND CLEAR HI-ORDER
         B     *+76                  SKIP SAVE AREA
         DC    18A(0)                SAVE AREA
         ST    R13,4(R15)            => CALLING PROGS SAVEAREA
         ST    R15,8(R13)            => MY SAVEAREA
         LR    R13,R15               BY CONVENTION
*              I N I T I A L I S A T I O N
*              ...GENERATE CPPL ADDRESSES FOR PUTLINE
         USING PSA,R0              PSA ADDR=0
         L     R3,PSATOLD          TCB ADDR
         USING TCB,R3
         DROP  R2                  END OF PSA
         L     R2,TCBJSCB          JSCB ADDR
         USING IEZJSCB,R2
         DROP  R3                  END OF TCB
         L     R3,JSCBPSCB         PSCB ADDR
         USING PSCB,R3
         MVC   IOPLUPT,PSCBUPT     SAVE UPT ADDR
         DROP  R2                  END OF JSCB
         L     R2,PSCBRLGB         RLGB ADDR
         USING RLGB,R2
         DROP  R3                  END OF PSCB
         MVC   IOPLECT,RLGBECT     SAVE ECT ADDR
         DROP  R2                  END OF RLGB
*              ...PROCESS INPUT PARM (IF ANY)
         TM    0(R1),X'80'         ONE AND ONLY PARM ?
         BO    CALLPARM            BIF SO..MUST BE A CALL PARM
*                                  OTHERWISE ITS A CPPL PARM
         L     R2,0(,R1)           => CBUF
         LH    R3,0(,R2)           TOTAL CBUF LEN
         LH    R4,2(,R2)           OFFSET TO 1ST OPERAND
         LA    R5,4(R4,R2)         => CMD OPERAND (IF ANY)
         LA    R4,4(,R4)           UP OFFSET FOR NEXT LINE
         SR    R3,R4               IF ZERO..THERES NO PARM...
         BZ    PARMEX              BIF NO PARM ENTERED
         LR    R2,R5               => PARM
         B     GOTPARM             AND CARRY ON
CALLPARM DS    0H
         L     R2,0(,R1)           => ACTUAL PARM
         LH    R3,0(,R2)           PARM LEN
         LTR   R3,R3               IS IT ZERO ?
         BZ    PARMEX              BIF SO
         LA    R2,2(,R2)           => ACTUAL PARM
         B     GOTPARM             AND CARRY ON
PARMERR  DS    0H
         LA    R1,ERRMSG1          => MSG TO BE WRITTEN
         BAL   R10,PUTLINE         WRITE IT
         B     RETURN0             AND END
MVCPARM  MVC   PARM(*-*),0(R2)     << EXECUTED >>
*              ...MORE PARM PROCESSING
GOTPARM  DS    0H
         BCT   R3,PARMERR          PARMLEN SHOULD BE 1 BYTE...BIF NOT
         EX    R3,MVCPARM          COPY DSN PARM
PARMOK   DS    0H
         OI    PARM,X'40'          CONVERT PARM TO UPPER CASE
         LA    R2,PARM             => STORED PARM
         CLI   0(R2),C'A'          PARM=A (CSA/ECSA COMBINED) ?
         BNE   NOTA                BIF NOT...
         OI    FLAG,REQA           OTHERWISE INDICATE ITS 'ALL'
         MVC   HTYPE,=CL5'E/CSA'   ALTER HEADING FOR 'ALL' DISPLAY
         B     PARMEX              ...AND SKIP THE REST
NOTA     DS    0H
         CLI   0(R2),C'E'          PARM=E (ECSA ONLY) ?
         BNE   PARMERR             BIF NOT...
         MVC   HTYPE,=CL5' ECSA'   ALTER HEADING FOR ECSA DISPLAY
         MVC   TOTTYPE,=CL5'ECSA'  ALTER TRAILER LINE
         OI    FLAG,REQE           OTHERWISE INDICATE ECSA REQUIRED
PARMEX   DS    0H
*              PREPARE FOR ACTION...
         LA    R1,UNDERLN          => MSG (UNDERLINE)
         BAL   R10,PUTLINE         WRITE IT
         LA    R1,HEAD1            => MSG TO BE WRITTEN
         BAL   R10,PUTLINE         WRITE IT
         LA    R1,HEAD2            => MSG TO BE WRITTEN
         BAL   R10,PUTLINE         WRITE IT
         LA    R1,UNDERLN          => MSG (UNDERLINE)
         BAL   R10,PUTLINE         WRITE IT
         L     R2,CVTPTR           => CVT
         USING CVT,R2
         L     R2,CVTGDA           => GDA
         USING GDA,R2
         L     R3,GDACSASZ         CSASIZE BELOW 16M
         SRL   R3,10               IN KBYTES
         ST    R3,CSAK             SAVE CSA SIZE (K)
         L     R3,GDAECSAS         CSASIZE ABOVE 16M
         SRL   R3,10               IN KBYTES
         ST    R3,ECSAK            SAVE ECSA SIZE (K)
*              NOW LOOP AROUND KEY/SUBPOOL TABLE
         L     R3,GDASPT           => CSA SUBPOOL TABLE (SPT)
         USING SPT,R3              (SPT DATA BEGINS AT SPT + 4)
*              L O O P   A R O U N D   A L L   K E Y S
         LA    R4,KEYCNT           NO OF KEYS (0-15) TO BE PROCESSED
         SH    R3,=H'20'           => 1ST SP FOR 1ST KEY - 24 (NOT 20)
         ST    R3,KEYBASE          SAVE IT
KEYLOOP  DS    0H
*              L O O P   A R O U N D   A L L   S U B P O O L S
         L     R3,KEYBASE          SAVE PTR TO 1ST SP FOR LAST KEY
         LA    R3,24(,R3)          => 1ST SP FOR NEW KEY
         ST    R3,KEYBASE          SAVE IT
         LA    R5,SPCNT            NO OF SUBPOOLS PER KEY
         LA    R7,SPTOT+PFLDLEN    => SP227 TOTAL FOR THIS KEY
SPLOOP   DS    0H
*              L O O P   A R O U N D   A L L   D Q E S
         LA    R6,1                INIT NO OF DQE BASES/SP (1 FOR ECSA)
         LA    R3,16(,R3)          => START OF ECSA DQE BASE
         TM    FLAG,REQE           ECSA WANTED ?
         BO    BASLOOP             BIF SO..WE'RE OK
         SH    R3,=H'16'           SHIFT BACK TO 1ST DQE
         LA    R6,1(,R6)           NO OF DQE BASES/SP + 1 (2=CSA ONLY)
         TM    FLAG,REQA           CSA AND ECSA WANTED ?
         BZ    BASLOOP             BIF NOT..WE'RE OK..JUST CSA
         LA    R6,1(,R6)           NO OF DQE BASES/SP FOR ECSA AND CSA
BASLOOP  DS    0H
         C     R3,0(,R3)           DQE ADDR SAME AS POINTER ADDR ?
         BE    NXTBASE             BIF SO...NO DQE HERE
         L     R8,0(,R3)           => DQE
         USING DQE,R8
DQELOOP  DS    0H
         L     R2,DQESIZE          SIZE OF AREA DESCRIBED BY DQE
         SRL   R2,10               CONVERT TO KBYTES
         CVD   R2,DWORD            PACK IT
         AP    0(PFLDLEN,R7),DWORD ADD TO TOTAL FOR SUBPOOL
         AP    SPTOT,DWORD         ADD TO TOTAL FOR KEY
         C     R3,0(,R8)           DQE => BACK TO BASE ?
         BE    NXTBASE             BIF SO...LAST DQE ON CHAIN
         L     R8,DQENEXT          => DQE
         B     DQELOOP             DETAILS OF NEXT DQE
*              CONTINUE LOOPS...
NXTBASE  DS    0H
         LA    R3,8(,R3)           => NEXT DQE BASE
         BCT   R6,BASLOOP          CHECK ALL DQE BASES FOR THIS SP
         TM    FLAG,REQA+REQE      ONLY CSA WANTED ?
         BNZ   NXTSP               BIF NOT..DQE PTR IS OK
         LA    R3,8(,R3)           SKIP OVER ECSA DQE BASE
NXTSP    DS    0H
         LA    R7,PFLDLEN(,R7)     => NEXT PACKED SP TOTAL
         LA    R3,24*(KEYCNT-1)(,R3) => NEXT SP FOR THIS KEY
         BCT   R5,SPLOOP           CHECK ALL SUBPOOLS FOR THIS KEY
*              P R I N T   D A T A   F O R   T H I S   K E Y
         LA    R5,SPTOT            => PACKED FIELDS FOR FORMATTING
         BAL   R11,FORMAT          FORMAT AND PRINT OUTPUT LINE
         BCT   R4,KEYLOOP          CHECK ALL KEYS
*              P R I N T   G R A N D   T O T A L S
         LA    R5,GSPTOT           => PACKED FIELDS FOR FORMATTING
         BAL   R11,FORMAT          FORMAT AND PRINT OUTPUT LINE
         TM    FLAG,REQE           WANT ECSA TOTALS ONLY ?
         BO    DOXCSA              BIF SO..SKIP CSA STUFF
         L     R3,CSAK             CSA SIZE
         CVD   R3,DWORD            PACK IT
         MVC   CSATOT(6),EDMASK    COPY IN EDIT MASK
         ED    CSATOT(6),DWORD+5   EDIT VALUE
         LA    R1,TOTAVAIL         => MSG (CSA DEFINED AT IPL)
         BAL   R10,PUTLINE         WRITE IT
DOXCSA   DS    0H
         TM    FLAG,REQA+REQE      WANT ECSA TOTALS ?
         BZ    DONE                BIF NOT...JUST UNDERLINE IT ALL
         MVC   TOTTYPE,=CL5'ECSA'  ALTER TRAILER LINE
         L     R3,ECSAK            ECSA SIZE
         CVD   R3,DWORD            PACK IT
         MVC   CSATOT(6),EDMASK    COPY IN EDIT MASK
         ED    CSATOT(6),DWORD+5   EDIT VALUE
         LA    R1,TOTAVAIL         => MSG (ECSA DEFINED AT IPL)
         BAL   R10,PUTLINE         WRITE IT
DONE     DS    0H
         LA    R1,UNDERLN          => MSG (UNDERLINE)
         BAL   R10,PUTLINE         WRITE IT
*              T E R M I N A T E
RETURN0  DS    0H
         SLR   R15,R15             SET RETURN CODE TO ZERO
RETURN   DS    0H
         L     R13,4(R13)          => CALLING PROGS SAVE AREA
         ST    R15,16(R13)         RETURN CODE (R15)
         LM    R14,R12,12(R13)     RESTORE CALLERS REGS
         BR    R14
*              SUBROUTINE TO WRITE OUTPUT USING PUTLINE
*              R1 => LINE TO BE WRITTEN: FORMAT=AL2(TEXTLEN-1),C'TEXT'
PUTLINE  DS    0H
         MVI   OMSGTXT,C' '        PREPARE TO CLEAR LINE
         MVC   OMSGTXT+1(L'OMSGTXT-1),OMSGTXT DO IT
         LH    R15,0(,R1)          TEXT LEN (-1) FOR COPY
         EX    R15,COPYMSG         COPY REQUIRED TEXT TO OUTPUT LINE
         XC    TSOECB,TSOECB       CLEAR THE ECB
         PUTLINE OUTPUT=(OMSG,SINGLE,DATA),MF=(E,IOPL)  WRITE THE LINE
         BR    R10                 RETURN TO CALLER
COPYMSG  MVC   OMSGTXT(*-*),2(R1)  << EXECUTED >>
*        SUBROUTINE TO FORMAT KEY/SUBPOOL INFORMATION FOR OUTPUT
*        INPUT: R4=16-KEY, R5 => 5 PL3 FIELDS
FORMAT   DS    0H
         LA    R2,KEYCNT           PREPARE TO GET KEY VAL
         SR    R2,R4               = CURRENT KEY VALUE
         CH    R2,=H'9'            KEY < 9 ?
         BL    PRT                 BIF SO...PRINT THE LINE
         CH    R2,=H'16'           KEY = 16 ? (IE GRAND TOTAL LINE)
         BE    PRTOT               BIF SO...PRINT THE LINE
         CH    R2,=H'15'           KEY = 15 ? (LAST USER KEY)
         BNER  R11                 RETURN IF NOT...ACCUM 9-15 FIELDS
         LA    R2,9                CONVERT KEY 15 TO 9
         B     PRT                 GET PRINTING
PRTOT    DS    0H
         LA    R1,UNDERLN          => MSG (UNDERLINE)
         BAL   R10,PUTLINE         WRITE IT
         LA    R2,10               CONVERT KEY 16 TO 10
PRT      DS    0H
         MH    R2,=AL2(DESCLEN)    TIMES LEN OF 1 DESCRIPTION
         LA    R6,KDESCS           => START OF DESC FIELDS
         LA    R2,0(R6,R2)         => DESC FOR THIS KEY
         MVC   OKEY,0(R2)          KEY VALUE (CHAR)
         MVC   OJOB,4(R2)          DESC OF USER OF KEY
         LA    R6,5                NO OF FIELDS TO BE UNPACKED
         LA    R7,OTOT             => 1ST OUTPUT FIELD
         LA    R2,GSPTOT           => 1ST OUTPUT FIELD
EDLOOP1  DS    0H
         MVC   0(L'OTOT,R7),EDMASK COPY IN EDIT MASK
         ED    0(L'OTOT,R7),0(R5)  EDIT SP SIZE
         AP    0(PFLDLEN,R2),0(PFLDLEN,R5) ADD FIELD TO GRAND TOTAL
         ZAP   0(PFLDLEN,R5),=P'0' CLEAR THIS FIELD
         LA    R5,L'SPTOT(,R5)     => NEXT PACKED FIELD
         LA    R2,L'GSPTOT(,R2)    => NEXT TOTAL FIELD
         LA    R7,9(,R7)           => NEXT OUTPUT FIELD
         BCT   R6,EDLOOP1          FOR ALL SUBPOOLS
         LA    R1,OPLINE           => MSG (DATA FOR THIS KEY)
         BAL   R10,PUTLINE         WRITE IT
         BR    R11                 RETURN TO CALLER
*              CONSTANTS AND STORAGE RESERVATIONS
         LTORG
TSOECB   DS    F
IOPB     PUTLINE MF=L
IOPL     DS    0F
IOPLUPT  DS    F
IOPLECT  DS    F
IOPLECB  DC    A(TSOECB)
IOPLIOPB DC    A(IOPB)
KEYCNT   EQU   16                  NO OF STORAGE KEYS (0-15)
SPCNT    EQU   4                   NO OF SUBPOOLS (227/228/231/241)
DWORD    DS    D
PARM     DS    CL1                 INPUT PARM
FLAG     DC    XL1'00'             FLAGS
REQA     EQU   X'80'               ECSA/CSA COMBINED
REQE     EQU   X'40'               ECSA ONLY
EDMASK   DC    XL6'402020202120'   EDIT MASK FOR PL3
KEYBASE  DS    F                   => 1ST DQE (SP227) FOR THIS KEY
KEYPTR   DS    F                   => DATA FOR CURRENT KEY
TOTPTR   DS    F                   => DATA FOR ALL KEYS (TOTAL)
CSAK     DS    F                   TOTAL CSA AVAILABLE TO SYSTEM (K)
ECSAK    DS    F                   TOTAL ECSA AVAILABLE TO SYSTEM (K)
KDESCS   DC    CL4' 0',CL12'SUPERVISOR'
DESCLEN  EQU   *-KDESCS
         DC    CL4' 1',CL12'SCHDLR/JES'
         DC    CL4' 2',CL12'VSPC'
         DC    CL4' 3',CL12' '
         DC    CL4' 4',CL12' '
         DC    CL4' 5',CL12'DATA MGMT'
         DC    CL4' 6',CL12'VTAM/TCAM'
         DC    CL4' 7',CL12'IMS'
         DC    CL4' 8',CL12'V=V JOBS'
         DC    CL4'9-15',CL12'V=R JOBS'
         DC    CL4'0-15',CL12'ALL KEYS'
ERRMSG1  DC    AL2(ERRMSG1L-3)     TEXT LEN MINUS 1 FOR EX
         DC    C'PARM MUST BE NULL, E OR A'
ERRMSG1L EQU   *-ERRMSG1
HEAD1    DC    AL2(H1LEN-3)        1ST HEADING LINE
         DC    CL21' '
HTYPE    DC    C'  CSA'            CSA OR ECSA OR E/CSA
         DC    C' USAGE BY PROTECT KEY'
H1LEN    EQU   *-HEAD1
HEAD2    DC    AL2(H2LEN-3)        2ND HEADING LINE
         DC    CL1' ',CL10'KEY',CL15'USER'
         DC    CL8'TOTAL',CL9'SP 227',CL9'SP 228',CL9'SP 231'
         DC    CL6'SP 241'
H2LEN    EQU   *-HEAD2
TOTAVAIL DC    AL2(TOTLEN-3)
         DC    CL8' ',CL10'AVAILABLE '
TOTTYPE  DC    CL5'CSA'                    CSA/ECSA
CSATOT   DC    CL6' ',CL2' K'
TOTLEN   EQU   *-TOTAVAIL
UNDERLN  DC    AL2(OPLEN-3)
         DC    CL1' '
         DC    (OPLEN-3)CL1'-'     UNDERLINE CHARS
OPLINE   DC    AL2(OPLEN-3)        MAP OUTPUT LINE
         DC    CL1' '
OKEY     DC    CL4' '              PROTECT KEY
         DC    CL3' '
OJOB     DC    CL12' '             DESC OF KEY USER
         DC    CL3' '
OTOT     DC    CL6' '              TOTAL CSA FOR THIS KEY
OBLNK    DC    CL3' K'             SAMPLE SPACER FIELD
O227     DC    CL6' '              CSA USAGE FOR SP 227
         DC    CL3' K'
O228     DC    CL6' '              CSA USAGE FOR SP 228
         DC    CL3' K'
O231     DC    CL6' '              CSA USAGE FOR SP 231
         DC    CL3' K'
O241     DC    CL6' '              CSA USAGE FOR SP 241
         DC    CL2' K'
OPLEN    EQU   *-OPLINE
SPTOT    DC    PL3'0'              TOTAL CSA FOR KEY
PFLDLEN  EQU   *-SPTOT             LENGTH OF ONE FIELD ENTRY
SP227    DC    PL3'0'              SP 227 STG FOR KEY
SP228    DC    PL3'0'              SP 228 STG FOR KEY
SP231    DC    PL3'0'              SP 231 STG FOR KEY
SP241    DC    PL3'0'              SP 241 STG FOR KEY
GSPTOT   DC    PL3'0'              GRAND TOTAL CSA
GSP227   DC    PL3'0'              GRAND TOTAL SP 227 STG
GSP228   DC    PL3'0'              GRAND TOTAL SP 228 STG
GSP231   DC    PL3'0'              GRAND TOTAL SP 231 STG
GSP241   DC    PL3'0'              GRAND TOTAL SP 241 STG
OMSG     DC    AL2(OMSGL),AL2(0)
OMSGTXT  DC    CL79' '
OMSGL    EQU   *-OMSG
*              D S E C T S
         CVT   DSECT=YES           CVT DSECT
         IHAGDA ,                  GDA DSECT
         IHASPT ,                  SPT DSECT
         IHADQE ,                  DQE DSECT
         IHAPSA ,                  PSA DSECT
         IKJTCB LIST=NO            TCB DSECT
         IEZJSCB ,                 JSCB DSECT
         IKJPSCB ,                 PSCB DSECT
         IKJRLGB ,                 RLGB DSECT
         END   SHOWCSA


                                                            c Xephon 1990

