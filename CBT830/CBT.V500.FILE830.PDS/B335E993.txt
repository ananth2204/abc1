A friendly interface to DFHSM dataset
recovery

HSMRECOV

*  PROGRAM TO LIST BACKUP VERSIONS OF A DATASET AND ISSUE DFHSM RECOVER
*  COMMANDS TO RECOVER SELECTED VERSIONS.
HSMRECOV CSECT
         STM   14,12,12(13)              SAVE REGISTERS
         USING HSMRECOV,12,11            ESTABLISH ADDRESSABILITY
         LR    12,15                     FIRST BASE REG
         LA    11,4095(12)
         LA    11,1(11)                  SECOND BASE = FIRST BASE +4096
         LA    15,SAVEAREA               ADDRESS OF REGISTER SAVE AREA
         ST    13,4(15)                  FORWARD POINTER
         ST    15,8(13)                  REVERSE POINTER
         LR    13,15                     NEW SAVE AREA ADDRESS IN R13
         TPUT  @CLEAR,L'@CLEAR,FULLSCR   CLEAR SCREEN
REP1     MVC   PFKMSG,PFKMSG1            MOVE PFKEY MESSAGE TO SCREEN
         TPUT  SCREEN1,SLEN1,FULLSCR     DISPLAY FIRST SCREEN
         MVC   INPUT(121),@SPACES        INITIALIZE INPUT AREA
         TGET  INPUT,L'INPUT,ASIS        RECEIVE THE INPUT FROM SCREEN
         CLI   INPUT,PA2                 IF PA2 ATTENTION KEY
         BE    TERMIN                    THEN TERMINATE
         CLI   INPUT,PF3                 IF PF3
         BE    TERMIN                    THEN TERMINATE PROGRAM
         CLI   INPUT+3,SBA               SBA FOUND IN INPUT ?
         BNE   NODSN                     THEN PROCESS THE INPUT
         MVC   HIQUAL(44),INPUT+6        SAVE HLQ OF DATASET
         MVC   HLQDSN,HIQUAL             MOVE TO DFHSM LIST COMMAND
         OC    HLQDSN(44),@SPACES        TRANSLATE TO UPPER CASE
         CLC   HLQDSN,@SPACES            IF DATASET NAME IS SPACES
         BE    NODSN                     THEN NO DSN MESSAGE
         TIME  DEC                       GET SYSTEM DATE AND TIME
         SRL   0,4                       TIME IN 0HHMMSSX FORMAT
         ST    0,PTIM
         OI    PTIM+3,X'0F'              SET PROPER SIGN
         UNPK  CURTIME(6),PTIM(4)        CONVERT TIME TO DISPLAY FORMAT
         OI    CURTIME+5,X'F0'           SET SIGN
         ST    1,PDAT                    SAVE THE DATE
         UNPK  CURDATE(5),PDAT+1(3)      CONVERT TO DISPLAY FORMAT
         OI    CURDATE+4,X'F0'           SET SIGN
         L     4,CVTPTR                  GET ADDRESS OF CVT
         USING CVT,4                     ESTABLISH ADDRESSABILITY
         L     4,CVTTCBP                 GET ADDRESS OF TCB
         L     4,12(,4)                  POINT TO ASCB
         USING ASCB,4                    ADDRESSABILITY TO ASCB
         L     4,ASCBASXB                POINT TO ASXB
         USING ASXB,4                    ADDRESSABILITY TO ASXB
         L     4,ASXBSENV                POINT TO ACEE
         USING ACEE,4                    ADDRESSABILITY TO ACEE
         MVC   ODSN(46),@SPACES
         MVC   ODSN(8),ACEEUSRI          GET CURRENT USER-ID
         LA    5,ODSN                    ADDRESS OF OUTPUT DATASET
SCAN1    CLI   0(5),SPACE                SPACE IN USER-ID
         BE    ENDUSRID                  THEN USER-ID IS OVER
         LA    5,1(,5)                   NEXT CHAR IN ODSN
         B     SCAN1                     CHECK NEXT CHAR IN USER-ID
ENDUSRID MVC   0(15,5),CURDYTIM          2ND AND 3RD QUALIFIERS
         MVC   $$DSN1+6(44),ODSN         MOVE ODSN TO DYNALLOC
         MVC   15(2,5),=CL2''')'         COMMAND TERMINATOR
* SEND DFHSM LIST COMMAND
         ARCHSEND TEXT=COMMAND,WKAREA=HSMWORK,WAIT=YES
         LTR   15,15                     RETURN CODE FROM HSM
         BNZ   HSMERR                    ERROR FROM DFHSM
         LA    1,$HSMLIST
         DYNALLOC ,                      ALLOCATE HSMLIST DATASET
         LTR   15,15                     CHECK RET CODE
         BNZ  DYNERROR                   ALLOCATION ERROR
         OPEN (HSMLIST,INPUT)            OPEN DFHSM LIST DATASET
         LTR   15,15                     CHECK RET CODE
         BNZ   OPENERR                   SUCCESSFUL OPEN
*  ACQUIRE STORAGE FOR BACK-UP VERSIONS' TABLE
PROCESS  GETMAIN  R,LV=MAXNO*OUTRECL+OUTRECL
         LTR   15,15                     CHECK RET CODE
         BNZ   NOSTORE                   IF OK CONTINUE
CONT1    ST    1,TABADDR                 ADDRESS OF ACQUIRED STORAGE
         LR    9,1
         USING OUTREC,9                  ESTABLISH ADDRESSABILITY
         XR    8,8                       INITIALIZE TABLE LENGTH
GETNEXT  BAL   10,GETHLST                GET A RECORD FROM HSMLIST
         CLC   RECORD+1(6),=C'DSNAME'    SEARCH DATSET NAME
         BE    SAVEDSN                   IF FOUND SAVE IT
         LA    8,1(,8)                   INCREMENT COUNTER
         CH    8,MAXTABSZ                MORE THAN MAXIMUM SIZE ?
         BH    TOOLARG                   THEN DISPLAY MESSAGE
         MVC   OUTDET,@SPACES            INITIALIZE RECORD
         MVC   OUTDSN,HSMDSN             DATASET NAME
         MVC   OUTTVOL,RECORD+51         DASD VOLUME
         MVC   OUTDVOL,RECORD+59         TAPE VOLUME
         MVC   OUTDATE,RECORD+67         BACK-UP DATE
         MVC   OUTGEN,RECORD+82          BACK-UP GENERATION
         MVC   OUTVER,RECORD+88          BACK-UP VERSION
         LA    9,OUTRECL(,9)             POSITION TO NEXT TABLE ENTRY
         B     GETNEXT                   PROCESS NEXT RECORD
         DROP  9                         RELEASE R9
SAVEDSN  MVC   HSMDSN,RECORD+10          SAVE DATASET NAME
         B     GETNEXT                   GET NEXT HSMLIST RECORD
*  END OF DFHSM LIST DATASET
ENDINPUT CLOSE HSMLIST                   CLOSE "HSMLIST" DATASET
         LA    1,$HSMLSTU
         DYNALLOC ,                      DE-ALLOCATE HSMLIST
         MVC   0(OUTRECL,9),@SPACES      LAST TABLE ENTRY IS SPACES
         ST    8,TABLEN                  SAVE NUMBER OF ITEMS
         LTR   8,8                       NO OF ENTRIES = 0
         BZ   NOPAGE                     NO ENTRIES TO DISPLAY
* FILL SCREEN AND DISPLAY
DISPAGE  ZAP   CURPAGE,ONE               INITIALIZE PAGE NUMBER
         MVC   PFKMSG,PFKMSG2            PF KEY MESSAGE
         MVC   HIQUAL-1,PROATTR          PROTECT HLQ FIELD
         MVC   CURSOR+1(2),=XL2'4652'    CURSOR POSITION
         L     7,TABADDR                 ADDRESS OF FIRST PAGE
*  FILL ONE PAGE
MOVPAGE  ST    7,CURADDR                 SAVE ADDRESS OF CURRENT PAGE
         USING OUTREC,7                  ESTABLISH ADDRESSABILITY
         MVC   PROCMSG,MSG0              INITIALIZE MESSAGE FIELD
         UNPK  PAGE1(2),CURPAGE(2)       CONVERT PAGE NUMBER TO DISPLAY
         OI    PAGE1+1,X'F0'             SET PROPER SIGN
         LA    3,PAGELEN                 NO OF LINES PER PAGE
         LA    8,LINE1                   ADDRESS OF FIRST ROW
         USING SCRNREC,8                 ESTABLISH ADDRESSABILITY
*  FILL ONE ITEM ON SCREEN
MOVLINE  MVC   SCRNDET,OUTDET            MOVE A RECORD TO SCREEN
         MVI   SCRNCMDA+1,UNPATTR        UNPROTECT COMMAND FIELD
         MVI   SCRNWNMA+1,UNPATTR        UNPROTECT NEW NAME FIELD
         MVC   SCRNWNM,@SPACES           BLANK NEW NAME FIELD
         MVI   SCRNCMD,SPACE             BLANK COMMAND FIELD
         LA    7,OUTRECL(,7)             POINT TO NEXT TABLE ROW
         ST    7,LASTADR                 SAVE THE LAST ROW ADDRESS
         CLC   0(OUTRECL,7),@SPACES      END OF TABLE FOUND
         BE    PROTECT                   THEN DISPLAY PAGE
         LA    8,SCRNRECL(,8)            POINT TO NEXT SCREEN ROW
         BCT   3,MOVLINE                 PROCESS NEXT ROW
         B     DSPSCRN                   DISPLAY SCREEN
*  PROTECT THE UNFILLED LINES ON SCREEN
PROTECT  BCTR  3,0                       # OF REMAINING ROWS ON SCREEN
         LTR   3,3                       NO ROWS REMAINING
         BZ    DSPSCRN                   THEN DISPLAY SCREEN
         LA    8,SCRNRECL(,8)            POINT TO NEXT SCREEN ROW
         MVI   SCRNCMDA+1,PROATTR        PROTECT COMMAND FIELD
         MVI   SCRNWNMA+1,PROATTR        PROTECT NEW NAME
         MVI   SCRNCMD,SPACE             BLANK COMMAND
         MVC   SCRNDET,@SPACES           BLANK DETAIL LINE
         MVC   SCRNWNM,@SPACES           BLANK NEW NAME
         B     PROTECT                   REPEAT FOR REMAINING ROWS
         DROP  8                         RELEASE ADDRESSABILITY
*  DISPLAY THE FILLED SCREEN AND PROCESS INPUT
DSPSCRN  TPUT  @CLEAR,L'@CLEAR,FULLSCR   CLEAR SCREEN
         TPUT  SCREEN1,SLEN1,FULLSCR     DISPLAY A SCREEN
         MVI   INPUT,X'00'               INITIALIZE INPUT AREA
         MVC   INPUT+1(249),INPUT        INITIALIZE INPUT
         MVC   INPUT+250(250),INPUT            "
         MVC   INPUT+500(250),INPUT            "
         TGET  INPUT,L'INPUT,ASIS        READ THE SCREEN INPUT
         CLI   INPUT,PA2                 PA2 ATTENTION KEY
         BE    TERMIN                    IF PA2 TERMINATE PROGRAM
         CLI   INPUT,PF3                 IF PF3
         BE    TERMIN                    TERMINATE PROGRAM
         CLI   INPUT,PF4                 IF PF4
         BE    REFRESH                   REFRESH SCREEN
         CLI   INPUT,PF5                 IF PF5
         BE    SRTDATE                   SORT ON DATE
         CLI   INPUT,PF6                 IF PF6
         BE    SRTNAME                   SORT ON NAME
         CLI   INPUT,PF7                 IF PF7
         BE    PREVPAGE                  DISPLAY PREVIOUS PAGE
         CLI   INPUT,PF8                 IF PF8
         BE    NEXTPAGE                  DISPLAY NEXT PAGE
         B     SAMEPAGE                  PROCESS CURRENT PAGE
SRTDATE  MVI   NAMEFLAG,NO               NAME SORT FLAG = N
         MVI   DATEFLAG,YES              DATE SORT FLAG = Y
         B     SORT                      SORT ON DATE
SRTNAME  MVI   NAMEFLAG,YES              NAME SORT FLAG = Y
         MVI   DATEFLAG,NO               DATE SORT FLAG = N
         B     SORT                      SORT ON DATE
*  DISPLAY PREVIOUS PAGE
PREVPAGE CP    CURPAGE,ONE               IS IT FIRST PAGE?
         BE    DSPSCRN                   THEN NO PREVIOUS PAGE
         SP    CURPAGE,ONE               PAGENO = PAGENO - 1
         L     7,CURADDR                 START ADDRESS OF CURRENT PAGE
         S     7,PAGESIZE                REDUCE BY PAGE SIZE
         B     MOVPAGE                   FILL THE NEW PAGE
*  DISPLAY NEXT PAGE
NEXTPAGE CLC   0(OUTRECL,7),@SPACES      IS IT LAST PAGE?
         BE    DSPSCRN                   THEN NO PREVIOUS PAGE
         AP    CURPAGE,ONE               INCREMENT PAGE NUMBER
         ST    7,CURADDR                 SAVE NEXT PAGE ADDRESS
         B     MOVPAGE                   FILL PAGE
*  REFRESH THE SCREEN ..
REFRESH  MVC   HIQUAL,@SPACES            INITIALIZE HLQ
         MVI   HIQUAL-1,UNPATTR          UNPROTECT HLQ
         MVC   CURSOR+1(2),=XL2'4161'    CURSOR AT HLQ FIELD
         MVC   PAGE1,=CL2'01'            PAGE = 01
         LA    4,PAGELEN                 NO OF ROWS PER PAGE
         LA    6,LINE1                   ADDRESS OF FIRST SCREEN ROW
         USING SCRNREC,6                 ESTABLISH ADDRESSABILITY
CLRNEXT  MVC   SCRNCMD,@SPACES           INITIALIZE COMMAND
         MVC   SCRNDET,@SPACES                  "
         MVC   SCRNWNM,@SPACES                  "
         MVI   SCRNCMDA+1,PROATTR        PROTECT COMMAND FIELD
         MVI   SCRNWNMA+1,PROATTR        PROTECT NEW NAME FIELD
         LA    6,SCRNRECL(,6)            POINT TO NEXT SCREEN ROW
         BCT   4,CLRNEXT                 CLEAR NEXT ROW
         MVC   PROCMSG,@SPACES           CLEAR ERROR MESSAGE
         MVC   PFKMSG,PFKMSG1            SET PFKEY MESSAGE
         B     REP1                      AND DISPLAY SCREEN
*  PROCESS THE COMMANDS ON THE SAME PAGE
SAMEPAGE MVC   PROCMSG,MSG0              CLEAR MESSAGE FIELD
         LA    5,INPUT+3                 FIRST SBA IN INPUT
NEXTSBA  CLI   0(5),X'00'                NULL IN DATA STREAM
         BE    PROCES1                   THEN INPUT OVER
         CLI   0(5),SBA                  SBA FOUND
         BNE   PROCES1                   IF NOT START COMMAND PROCESS
         NC    1(2,5),=XL2'3F3F'         IGNORE HIGH TWO BITS OF SBA
         LA    7,CMDADR                  ADDRESS OF COMMAND FIELD
         LA    4,PAGELEN                 NO OF ROWS ON SCREEN
         LA    6,LINE1                   ADDRESS OF FIRST SCREEN ROW
NXTCMD   CLC   0(2,7),1(5)               CHECK THE LOCATIONS
         BE    CMDMOVE                   IF MATCH MOVE TO SCREEN
         LA    6,SCRNRECL(,6)            ELSE POSITION AT NEXT ROW
         LA    7,2(,7)                   POSITION TO NEXT ADDRESS
         BCT   4,NXTCMD                  AND COMPARE LOCATIONS
         B     NEWNAM1                   CHECK IF NEW NAME FIELD
CMDMOVE  MVC   SCRNCMD,3(5)              MOVE COMMAND TO SCREEN
         LA    5,4(,5)                   POSITION AT NEXT SBA
         B     NEXTSBA                   CHECK NEXT SBA
NEWNAM1  LA    7,NWNMADR                 ADDRESS OF NEW NAME FIELD
         LA    6,LINE1                   ADDRESS OF FIRST SCREEN ROW
NXTNWNAM CLC   0(2,7),1(5)               LOCATIONS MATCH
         BE    NWNMMOVE                  THEN MOVE TO SCREEN
         LA    6,SCRNRECL(,6)            POSITION AT NEXT ROW
         LA    7,2(,7)                   NEXT LOCATION ADDRESS
         B     NXTNWNAM                  CHECK IF ADDRESSES MATCH
NWNMMOVE MVC   SCRNWNM,3(5)              MOVE NEW NAME TO SCREEN
         LA    5,47(,5)                  POSITION AT NEXT SBA
         B     NEXTSBA                   PROCESS NEXT SBA
         B     PROCES1                   AND PROCESS COMMANDS
PROCES1  L     7,LASTADR
         LA    6,LINE1                   ADDRESS OF FIRST ROW
         LA    4,PAGELEN                 LINES PER PAGE
CMDLOOP  CLI   SCRNCMD,SPACE             COMMAND IS BLANK
         BE    NOCMD1                    THEN NO PROCESS
         OI    SCRNCMD,SPACE             CONVERT TO UPPER CASE
         OC    SCRNWNM,@SPACES           TRANSLATE NEW NAME TO UC
         CLI   SCRNCMD,C'S'              SELECT COMMAND ENTERED
         BNE   INVCMD                    IF NOT INVALID
         CLC   SCRNWNM,@SPACES           NEW NAME IS SPACE ?
         BE    NONEW                     RECOVER WITH SAME NAME
         MVC   NEWNAME,SCRNWNM           NEWNAME TO RECOVER
         B     *+10
NONEW    MVC   NEWNAME,SCRNDET           NEW NAME = OLD NAME
         PACK  GENPACK(8),SCRNDET+68(3)  CONVERT GEN TO PACKED
         CVB   2,GENPACK                 CONVERT TO BINARY
         ST    2,GENBIN                  STORE IN BINARY
*  ISSUE DFHSM RECOVER COMMAND
         ARCHRCOV DSN=SCRNDET,WKAREA=HSMWORK,NEWNAME=NEWNAME,          X
               REPLACE=YES,GEN=GENBIN
         LTR   15,15                     IS RECOVER OK?
         BNZ   INVCMD                    IF NOT FAILED TO RECOVER
         MVI   SCRNCMD,C'*'              OK STATUS
         B     NOCMD1+6
*  INVALID COMMAND ENTERED
INVCMD   MVI   SCRNCMD,C'?'              ERROR IN PROCESSING
NOCMD1   MVC   SCRNWNM,@SPACES           INITIALIZE NEW NAME
         LA    6,SCRNRECL(,6)            POSITION AT NEXT ROW
         BCT   4,CMDLOOP                 PROCESS ALL ROWS
         B     DSPSCRN                   DISPLAY SCREEN
         DROP  6                         RELEASE ADDRESSABILITY
*  SORT THE BACK-UP VERSION TABLE ON NAME/DATE
SORT     L     5,TABADDR                 ADDRESS OF ARRAY
         L     4,TABLEN                  COUNT OF ENTRIES
         BCTR  4,0                       REDUCE BY 1
         LTR   4,4                       ONLY 1 ENTRY
         BZ    DISPAGE                   NO SORTING
OUTLOOP  LA    6,OUTRECL(,5)             ADDRESS OF NEXT
         LR    3,4                       LOOP COUNTER
INLOOP   CLI   NAMEFLAG,C'Y'             SORT ON NAME
         BE    INLOOP1
         CLC   44(OUTRECL-44,5),44(6)    COMPARE TWO DATES
         BNH   NOSWAP                    NO SWAP
         B     INLOOP2                   BYPASS NAME SORT
INLOOP1  CLC   0(OUTRECL,5),0(6)         COMPARE TWO NAMES
         BNH   NOSWAP                    NO SWAP
INLOOP2  MVC   SORTWK,0(5)               FIRST ITEM TO TEMP AREA
         MVC   0(OUTRECL,5),0(6)         SECOND ITEM MOVED TO FIRST
         MVC   0(OUTRECL,6),SORTWK       FIRST ITEM MOVED TO SECOND
NOSWAP   LA    6,OUTRECL(,6)             POINT TO NEXT ITEM
         BCT   3,INLOOP                  REPEAT
         LA    5,OUTRECL(,5)             POINT TO NEXT OUTER LOOP
         BCT   4,OUTLOOP                 REPEAT
         B     DISPAGE                   DISPLAY PAGE
* ERROR HANDLING
DYNERROR MVC   PROCMSG,MSG1              DYNAMIC ALLOCATION ERROR
         B     REP1                      GO TO FIRST SCREEN
NOSTORE  MVC   PROCMSG,MSG2              ERROR MESSAGE
         B     REP1                      GO TO INITIAL SCREEN
OPENERR  MVC   PROCMSG,MSG3              ERROR MESSAGE
         B     REP1                      GO TO INITIAL SCREEN
NODSN    MVC   PROCMSG,MSG4              NO INPUT MESSAGE
         B     REP1                      DISPLAY SCREEN AGAIN
HSMERR   MVC   PROCMSG,MSG5              DISPLAY HSM ERROR MESSAGE
         B     REP1                      GO TO FIRST SCREEN
TOOLARG  MVC   PROCMSG,MSG6              TOO MANY ENTRIES FOUND
         B     REP1                      GO TO INITIAL SCREEN
NOPAGE   MVC   PROCMSG,MSG7              NO BACK-UP EXISTS MESSAGE
         B     REP1                      INITIAL SCREEN
*  TERMINATE PROGRAM
TERMIN   TCLEARQ
EXIT     TPUT  @CLEAR,L'@CLEAR,FULLSCR   CLEAR SCREEN
         TPUT  END,L'END                 TERMINATE PROGRAM
PROGEND  L     13,4(13)                  GET OLD SAVE AREA ADDRESS
         LM    14,12,12(13)              RESTORE REGS
         XR    15,15                     NORMAL RET CODE
         BR    14                        RETURN FROM PROGRAM
*  READ ONE RECORD FROM HSMLIST DATASET
GETHLST  GET   HSMLIST                   READ ONE RECORD
         MVC   RECORD(121),0(1)          MOVE THE RECORD
         CLC   RECORD+1(6),=CL6'DSNAME'  DATASET NAME RECORD
         BE    GETX                      THEN LEAVE
         CLC   RECORD+5(6),=CL6'DFHSM.'  BACK-UP VERSION RECORD
         BNE   GETHLST                   IF NOT TRY NEXT RECORD
GETX     BR    10                        RETURN
*  DATA AREAS
         LTORG                           LITERALS
SAVEAREA DS    18F                       REGISTER SAVE AREA
HSMLIST  DCB   DDNAME=HSMLIST,DSORG=PS,MACRF=GL,EODAD=ENDINPUT,        X
               EROPT=ACC
COMMAND  DC    H'115',CL11'LIST LEVEL('    HSM LIST COMMAND
HLQDSN   DC    CL44' '
         DC    CL12') BCDS ODS('''
ODSN     DC    CL46' '                   HSM LIST DATASET
HSMWORK  DS    50F                       HSM WORK AREA
GENBIN   DS    F                         GEN NO BINARY
GENPACK  DS    D                         GEN NO PACKED DECIMAL
NEWNAME  DS    CL44                      NEW DATASET NAME
CURDYTIM DS    0CL15                     CURRENT DATE AND TIME
         DC    CL2'.D'
CURDATE  DS    CL5                       DATE YYDDD
         DC    CL2'.T'
CURTIME  DS    CL6                       TIME HHMMSS
PDAT     DS    F                         DATE PACKED DECIMAL
PTIM     DS    F                         TIME PACKED DECIMAL
HSMDSN   DS    CL44                      DATASET NAME BACKED UP
RECORD   DS    CL121                     HSM LIST RECORD
TABADDR  DS    F                         START ADDRESS OF TABLE
TABLEN   DS    F                         NO OF ENTRIES IN TABLE
MAXTABSZ DC    H'1188'                   MAXIMUM TABLE SIZE
CURPAGE  DC    PL2'0'                    PAGE NUMBER
CURADDR  DS    F                         CURRENT PAGE START ADDRESS
LASTADR  DS    F                         ADDRESS OF LAST LINE
NAMEFLAG DS    CL1                       NAME SORT INDICATOR
DATEFLAG DS    CL1                       DATE SORT INDICATOR
@SPACES  DC    CL250' '                  INITIALIZED TO SPACES
SORTWK   DS    CL(OUTRECL)               SORT TEMP AREA
PAGESIZE DC    F'900'                    PAGE SIZE
ONE      DC    PL2'1'                    PACKED DECIMAL 1
*  MESSAGES
MSG0     DC    CL78' ''S'' IN COMMAND FIELD TO RECOVER ; NEW NAME TO REX
               COVER AND RENAME'
MSG1     DC    CL78'  DYNAMIC ALLOCATION ERROR FOR HSMLIST DATASET'
MSG2     DC    CL78'  FAILURE TO ACQUIRE STORAGE '
MSG3     DC    CL78'  ERROR IN OPENING HSMLIST DATASET'
MSG4     DC    CL78'  ENTER DATASET NAME OR HIGH LEV QUAL'
MSG5     DC    CL78'  DFHSM LIST ERROR CHECK DATSET NAME'
MSG6     DC    CL78'  TOO MANY DATASETS TO LIST'
MSG7     DC    CL78'  NO DATASETS FOUND'
PFKMSG1  DC    CL78'PF3: EXIT  ENTER: PROCESS'
PFKMSG2  DC    CL78'PF3:EXIT PF4:REFRESH PF5:SRT-DATE PF6:SRT-NAME PF7:-
               REV PF8:NEXT ENTER:PROCESS'
END      DC    CL78'  PROGRAM TERMINATED'
*   DYNAMIC ALLOCATION PARAMETER FOR HSMLIST
$HSMLIST DC    A(X'80000000'+$HSMLST1)
$HSMLST1 DC    AL1(S99RBEND-S99RB,S99VRBAL,S99NOMNT,0)
         DC    Y(0,0),A($HSMLSTX,0,0)
$HSMLSTX DC    A($$DDNM1)
         DC    A($$DSN1)
         DC    A($$STAT1)
         DC    A($$DISP1)
         DC    A($$DISP2)
         DC    A(X'80000000')
$$DDNM1  DC    Y(DALDDNAM,1,7),CL7'HSMLIST'
$$DSN1   DC    Y(DALDSNAM,1,44),CL44' '
$$STAT1  DC    Y(DALSTATS,1,1),X'08'
$$DISP1  DC    Y(DALNDISP,1,1),X'04'
$$DISP2  DC    Y(DALCDISP,1,1),X'04'
*   DYNAMIC DEALLOCATION PARAMETER FOR HSMLIST
$HSMLSTU DC    AL1(X'80'),AL3($HSMLSU1)
$HSMLSU1 DC    AL1(20),AL1(S99VRBUN),AL1(0),AL1(0)
         DC    AL2(0),AL2(0),AL4($HSMLSUX),AL4(0),AL4(0)
$HSMLSUX DC    AL4($DDNMU1)
         DC    AL1(X'80'),AL3($DISPU1)
$DDNMU1  DC    AL2(DUNDDNAM),AL2(1),AL2(7),CL7'HSMLIST'
$DISPU1  DC    AL2(DUNOVDSP),AL2(1),AL2(1),X'04'
*   SCREEN ADDRESS FOR COMMAND FIELD
CMDADR   DC    X'0612',X'0832',X'0B12',X'0D32',X'1012,X'1232',X'1512',X
               X'1732',X'1A12',X'1C32',X'1F12',X'2132'
*  SCREEN ADDRESS FOR NEWNAME FIELD
NWNMADR  DC    X'0724',X'0A04',X0C24',X'0F04',X'1124',X'1404',X'1624',X
               X'1904',X'1B24',X'1E04',X'2024',X'2304'
*  THIS SCREEN LAYOUT IS CODED USING 3270 DATASTREAM AND IS MEANT FOR
*  DISPLAY ON 32 X 80 SCREENS. FOR USING ON 24 X 80 SCREENS THE CHANGES
*  NEEDED ARE AS SHOWN BELOW
*   1. DELETE 8 LINES FROM THE LABEL LINE2
*   2. CHANGE THE X'116450'  TO X'115A50' ON LINE3
*   3. CHANGE THE X'116560'  TO X'115B60' ON LINE4
*   4. CHANGE THE X'116670'  TO X'115C70' ON LINE5
*   5. CHANGE PAGELEN FROM 12 TO 8
*   6. CHANGE PAGESIZE FROM 900 TO 600
*   7. CHANGE 677F  TO 5D7F ON THE LINE @CLEAR
SCREEN1  DC    X'C2114040',X'1D60'
         DC    CL25' ',CL28'DFHSM DATASET RECOVER',CL25' '
         DC    X'114150',X'1DE8',CL15'HIGH LEV QUAL :'
         DC    X'114160',X'1D40'
HIQUAL   DC    CL44' '                                   HLQ OF DATASET
         DC    X'11424D',X'1DE8',CL15          PAGE: '
PAGE1    DC    CL2'01'                                   PAGE NO
         DC    X'114370',X'1D60'
         DC    CL78'CMD NAME/NEW NAME                                DAX
               TE     DASD   TAPE  GEN VER'
         DC    X'114540',X'1DE8',78CL1'-'
LINE1    DC    X'114651',X'1D60',CL01' ',X'114653',X'1DE8',CL75' '
         DC    X'114763',X'1D60',CL44' ',X'114850',X'1DE8'
         DC    X'114871',X'1D60',CL01' ',X'114873',X'1DE8',CL75' '
         DC    X'114A43',X'1D60',CL44' ',X'114A70',X'1DE8'
         DC    X'114B51',X'1D60',CL01' ',X'114B53',X'1DE8',CL75' '
         DC    X'114C63',X'1D60',CL44' ',X'114D50',X'1DE8'
         DC    X'114D71',X'1D60',CL01' ',X'114D73',X'1DE8',CL75' '
         DC    X'114F43',X'1D60',CL44' ',X'114F70',X'1DE8'
         DC    X'115051',X'1D60',CL01' ',X'115053',X'1DE8',CL75' '
         DC    X'115163',X'1D60',CL44' ',X'115250',X'1DE8'
         DC    X'115271',X'1D60',CL01' ',X'115273',X'1DE8',CL75' '
         DC    X'115443',X'1D60',CL44' ',X'115470',X'1DE8'
         DC    X'115551',X'1D60',CL01' ',X'115553',X'1DE8',CL75' '
         DC    X'115663',X'1D60',CL44' ',X'115750',X'1DE8'
         DC    X'115771',X'1D60',CL01' ',X'115773',X'1DE8',CL75' '
         DC    X'115943',X'1D60',CL44' ',X'115970',X'1DE8'
LINE2    DC    X'115A51',X'1D60',CL01' ',X'115A53',X'1DE8',CL75' '
         DC    X'115B63',X'1D60',CL44' ',X'115C50',X'1DE8'
         DC    X'115C71',X'1D60',CL01' ',X'115C73',X'1DE8',CL75' '
         DC    X'115E43',X'1D60',CL44' ',X'115E70',X'1DE8'
         DC    X'115F51',X'1D60',CL01' ',X'115F53',X'1DE8',CL75' '
         DC    X'116063',X'1D60',CL44' ',X'116150',X'1DE8'
         DC    X'116171',X'1D60',CL01' ',X'116173',X'1DE8',CL75' '
         DC    X'116343',X'1D60',CL44' ',X'116370',X'1DE8'
LINE3    DC    X'116450',X'1DE8',78CL1'-'
LINE4    DC    X'116560',X'1D60'
PFKMSG   DC    CL78' '
LINE5    DC    X'116670',X'1DE8'
PROCMSG  DC    CL78' '
CURSOR   DC    X'11416113'
SLEN1    EQU   *-SCREEN1
@CLEAR   DC    X'C31140403C677F40'        CLEAR SCREEN COMMAND
INPUT    DS    CL750
SPACE    EQU   C' '
YES      EQU   C'Y'
NO       EQU   C'N'
PA2      EQU   X'6E'                      PA2 ATTENTION KEY
PF3      EQU   X'F3'                      PF3
PF4      EQU   X'F4'                      PF4
PF5      EQU   X'F5'                      PF5
PF6      EQU   X'F6'                      PF6
PF7      EQU   X'F7'                      PF7
PF8      EQU   X'F8'                      PF8
SBA      EQU   X'11'                      SBA
PROATTR  EQU   X'60'                      PROTECT ATTRIBUTE
UNPATTR  EQU   X'40'                      UNPROTECT ATTRIBUTE
PAGELEN  EQU   12                         NO OF LINES PER PAGE
MAXNO    EQU   PAGELEN*99                 MAXIMUM # OF ROWS 99 X 12
OUTREC   DSECT                            DSECT FOR TABLE ENTRY
OUTDET   DS    0CL75
OUTDSN   DS    CL44                       DSNAME
         DS    CL1
OUTDATE  DS    CL8                        BACK-UP DATE
         DS    CL1
OUTDVOL  DS    CL6                        DASD VOLUME
         DS    CL1
OUTTVOL  DS    CL6                        TAPE VOLUME
         DS    CL1
OUTGEN   DS    CL3                        GENERATION
         DS    CL1
OUTVER   DS    CL3                        VERSION
OUTRECL  EQU   *-OUTREC                   LENGTH OF OUTREC
SCRNREC  DSECT                            SCREEN ROW LAYOUT
         DS    CL3                        SBA AND ADDRESS
SCRNCMDA DS    CL2                        COMMAND ATTRIBUTE
SCRNCMD  DS    CL1                        COMMAND
         DS    CL5                        SBA, ADDRESS, AND ATTR
SCRNDET  DS    CL(OUTRECL)                DETAIL LINE
         DS    CL3                        SBA AND ADDRESS
SCRNWNMA DS    CL2                        NEWNAME ATTRIBUTE
SCRNWNM  DS    CL44                       NEW NAME
         DS    CL5                        SBA ADDRESS AND ATTRIBUTE
SCRNRECL EQU   *-SCRNREC
         IHAASCB
         IHAASXB
         CVT   DSECT=YES,LIST=YES
         IHAACEE
         IEFZB4D0
         IEFZB4D2
         END   HSMRECOV


M V George
Systems Programmer
Ministry of Interior (Qatar)                                            c Xephon

