A stacking facility

XPRIM is a CLIST which provides a stacking facility.
Consider the situation in which you have edit sessions in both
screens and you don't want to exit from either. You also have a
requirement to use options like edit, browse, utility etc. This
CLIST will be very handy in those situations. Just enter TSO
XPRIM from the command line and you will have stacked
another primary option menu on top of the current application
and your two edit sessions are still active. You will be in edit
session after exiting from the stacked menu.

Even though this seems a very easy method there are a few
problems with this kind of set up. Some applications do not
allow recursive invocations. For example, when you are in
utilities option 3.2 and you invoke stacking of another menu
and try to use option 3.1 or 3.2, you will get an error stating
that recursion is not allowed.

I suggest you use 'RECOVERY ON' either as a primary
command or as an initial macro in all editing sessions before
using this stacking feature. This will prevent data loss even if
there is any abend/abnormal termination due to a recursion
error or an invalid logical screen request etc.

If you invoke XPRIM with the parameter 'S' it will just display
the current stacking level. By setting up a variable called
SCNT you can control the number of stacking levels.

The following is a very simple way to have stacking. Include a
command table entry called PRIM and define it as shown
below.

      PRIM    0    SELECT PANEL(ISR@PRIM) OPT(&ZPARM)

or

      PRIM    0    SELECT PANEL(ISR@PRIM) OPT(&ZPARM) NEWAPPL(ISR)

After the above set up you can stack another PRIM option menu just by entering P


XPRIM CLIST

/**********************************************************************
/* Stacks another prim option menu on top of the current application.
/* When "S" parameter is coded it just displays the current stack level
/**********************************************************************
PROC 0 PARM() S
     CONTROL ASIS
     /******************************************************************
     /* Variable SCNT determines the number of stackings allowed
     /******************************************************************
     SET &SCNT = 5
     /******************************************************************
     /* If you have customized ISR@PRIM and using different panel
     /* set PANID to the name of prim option menu at your site.
     /******************************************************************
     SET &PANID = &STR(ISR@PRIM)
     ISPEXEC VGET (LVL) SHARED
     IF &LVL = &STR() THEN SET &LVL = 0
     IF &S = S THEN +
     DO
       SET &ZEDSMSG = &STR(LVL=&LVL USER=&SYSUID)
       SET &ZEDLMSG = &STR(Current stacking level is &LVL)
       ISPEXEC SETMSG MSG(ISRZ001)
       EXIT
     END
     SET &LVL = &LVL + 1
     IF &LVL > &SCNT THEN +
     DO
       SET &ZEDSMSG = &STR(Level exceeds limit)
       SET &ZEDLMSG = &STR(Stacking is limited to &SCNT level only)
       ISPEXEC SETMSG MSG(ISRZ001)
       EXIT
     END
     ISPEXEC VPUT (LVL) SHARED
     ISPEXEC CONTROL DISPLAY SAVE
     SET &ZEDSMSG = &STR(LVL=&LVL USER=&SYSUID)
     SET &ZEDLMSG = &STR(Current stacking level is &LVL)
     ISPEXEC SETMSG MSG(ISRZ001)
     ISPEXEC SELECT PANEL(&PANID) OPT(&PARM)
     ISPEXEC CONTROL DISPLAY RESTORE
     ISPEXEC VGET (LVL) SHARED
     SET &LVL = &LVL - 1
     ISPEXEC VPUT (LVL) SHARED
EXIT


P Kumar (Australia)                                    c Xephon 1992

