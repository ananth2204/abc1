Trapping IPL system parameter information

On occasions, it can be very beneficial to be able to determine the
system parameters as they were entered by the operators at IPL
time.  Since systems can be up for several days between IPLs,
tracking down the SYSLOG data that contains the IPL
information can be time consuming and sometimes futile.

During Nucleus Initialisation Program (NIP) processing, MVS
maintains the system parameter information and is able to access
this information through a pointer in the NIP Vector Table (NVT).
When the NIP processing has completed, the NVT and storage
areas that it points to are freed.  This makes it difficult to locate
the system parameter information, either through a batch utility or
some form of on-line clean-up routine, so that the system
parameter information is saved and accessible long after NIP
processing has completed.

The modifications provided here are functional in an MVS/XA
environment and are used to trap the operator-entered system
parameters.  Of the three modifications, $UMOD01 is the single
modification that is used for all levels of MVS/XA 2.1.x and
$UMOD02 and $UMOD03 are the two modifications that are
used for MVS/XA 2.2.0.  The modifications work as follows:

*   $UMOD01/$UMOD02 - these trap the clean-up of the NVT
and acquire 96 bytes of common area storage.  The first 80
bytes of storage pointed to by the current NVTSPE are moved
to the first 80 bytes of the acquired storage area (leaving 16
bytes of user area).  Instead of allowing the CVTNVTO
pointer to be cleared, the modifications place the address of
the acquired storage area into the CVTNVTO field, making it
accessible for later use.

*   $UMOD03 - this is used in conjunction with modification
$UMOD02 at the MVS/XA 2.2.0 level.  It traps system read
requests to SYS1.PARMLIB and determines whether the NIP
service routine should be used to read from SYS1.PARMLIB
(ie the NIP is active) or whether data management should be
used.  Since the normal test of NIP being active is a non-zero
CVTNVT0 pointer, and we have placed our storage area
address in this pointer field, this modification is put in place
to check for the NVT control block-id in the area pointed to
by the CVTNVT0.  If the NVTID is found, NIP processing
proceeds as normal.  If it is not found, processing proceeds as
if the NIP has completed (ie it uses data management).

The modifications are packaged in SMP format to provide easy
maintainability and notification of potential regression.  The
program, IPLPARMS, can be run either on-line or in batch to
provide output displaying the IPL parameters entered by the
operator for the current IPL.  The program will display the IPL
parameters if they are located and will also indicate if none could
be found.  The following CLIST can be used to perform this
function on-line:

ALLOC FILE(SYSPRINT) DA(*)
CALL  'SYS1.LINKLIB(IPLPARMS)'
FREE  FILE(SYSPRINT)
END
Sample output from running the program may look as follows:
SYSX IPL PARMS ARE:
CLPA,LNK=01,CMD=02

SOURCE CODE FOR IPLPARMS
IPLPARMS CSECT
         STM   R14,R12,12(R13)         SAVE ENVIRONMENT
         LR    R10,R15                 SET UP MODULE ...
         USING IPLPARMS,R10                ADDRESSABILITY
         ST    R13,SAVEAREA+4          SET UP NEW ...
         LA    R13,SAVEAREA                SAVE AREA
         L     R6,16                   GET CVT ADDRESS
         USING CVTMAP,R6
         L     R1,CVTSMCA              GET SMCA ADDRESS
         USING SMCABASE,R1
         LTR   R1,R1                   VALID SMCA POINTER?
         BZ    NOSYSID                 NO - DON'T MOVE IN SYSTEM ID
         MVC   HEADER(4),SMCASID       GET SYSTEM ID
NOSYSID  L     R7,CVTNVT0              GET POINTER TO IPL PARM DATA
         LTR   R7,R7                   VALID POINTER?
         BZ    NODATA                  NO - NO DATA TO PROCESS
         LA    R4,OUTPUT               GET OUTPUT ADDRESS
         LA    R5,80                   SET MAX LOOP COUNT
LOOP     CLI   0(R7),X'7D'             END CHARACTER?
         BE    ALLDONE                 YES - FINISH UP
         MVC   0(1,R4),0(R7)           MOVE IN CHARACTER
         LA    R4,1(,R4)               NEXT OUTPUT CHARACTER
         LA    R7,1(,R7)               NEXT INPUT CHARACTER
         BCT   R5,LOOP                 CHECK AGAIN
ALLDONE  CLI   OUTPUT,C' '             ANY DATA?
         BNE   PUTDATA                 YES - WRITE IT OUT
         MVC   OUTPUT(20),FIELD1       MOVE IN OUTPUT RECORD
PUTDATA  OPEN  (OUT,(OUTPUT))          OPEN DATASET
         PUT   OUT,HEADER              WRITE RECORD
         PUT   OUT,OUTPUT              WRITE RECORD
         CLOSE OUT                     CLOSE DATASET
         B     END                     FINISH UP
NODATA   MVC   HEADER(38),FIELD2       MOVE IN OUTPUT RECORD
         B     PUTDATA                 WRITE OUT
END      L     R13,SAVEAREA+4          RESTORE THE ...
         LM    R14,R12,12(R13)             ENVIRONMENT
         LA    R15,0
         BR    R14
SAVEAREA DS    18F
HEADER   DC    CL80'     IPL PARMS ARE:'
OUTPUT   DC    80C' '
FIELD1   DC    C'NO IPL PARMS ENTERED'
FIELD2   DC    C'INFORMATION UNAVAILABLE FOR PROCESSING'
OUT      DCB   MACRF=(PM),DSORG=PS,LRECL=80,DDNAME=SYSPRINT
         CVT   DSECT=YES
         IEESMCA
         $REQU                         REGISTER EQUATES
         END
USERMOD $UMOD01
++USERMOD($UMOD01)
  /*
      THIS MOD TRAPS THE CLEANUP OF THE NVT CONTROL BLOCK
      AND PLACES THE ADDRESS OF A 96 BYTE DATA AREA INTO THE
      CVTNVT0 FIELD OF THE CVT
      THE FIRST 80 BYTES OF THIS DATA AREA ARE USED TO SAVE THE
      FIRST 80 BYTES OF OPERATOR ENTERED SYSTEM PARAMETER DATA
      THE REMAINING 16 BYTES ARE USER AREA
      ###
      SYSTEM LIBRARY:   SYS1.NUCLEUS
      LMOD:             IEAVNIPX
  */.
++VER(Z038) FMID(HBB2102).
++ZAP(IEAVNIPX) DISTLIB(AOSC5).
  NAME  IEAVNIPX
  VER   002A 50E0D008                   ST    R14,8(,R13)
  VER   002E 18DE                       LR    R13,R14
  VER   0030 45E0A050          BACK     BAL   R14,NPXFBUF
  VER   0066 1F66                       SLR   R6,R6
  VER   0068 506054C4                   ST    R6,CVTNVT0(,R5)
  VER   02DC E3C3C840C1D9               DC    X'E3C3C840C1D9
  REP   002A 47F0A2BA0000               B     PATCH
  REP   0066 D20354C4A2FA               MVC   CVTNVT0(4,R5),GETADDR
  REP   02DC 47F0A2C6          PATCH    B     GETINIT
  REP   02E0 00000060,0000F512 PARMS    DC    F'96',X'0000F512'
  REP   02E8 5800A2BE          GETINIT  L     R0,PARMS
  REP   02EC 58F0A2C2                   L     R15,PARMS+4
  REP   02F0 1B11                       SR    R1,R1
  REP   02F2 0A78                       SVC   120         GET STORAGE
  REP   02F4 12FF                       LTR   R15,R15     OK?
  REP   02F6 4770A2EE                   BNZ   RETSETUP    NO - GO BACK
  REP   02FA 5010A2FA                   ST    R1,GETADDR  SAVE ADDRESS
  REP   02FE 58500010                   L     R5,16       GET CVT ADDR
  REP   0302 586054C4                   L     R6,CVTNVT0(,R5) NVT ADDR
  REP   0306 5850615C                   L     R5,X'15C'(,R6)  SPE ADDR
  REP   030A D24F10005000               MVC   0(80,R1),0(R5) IPL
PARMS
  REP   0310 50E0D008          RETSETUP ST    R14,8(,R13)
  REP   0314 18DE                       LR    R13,R14
  REP   0316 47F0A00E                   B     BACK
  REP   031A 0000                       DC    H'0'
  REP   031C 00000000          GETADDR  DC    F'0'
USERMOD $UMOD02
++USERMOD($UMOD02)
  /*
      THIS MOD TRAPS THE CLEANUP OF THE NVT CONTROL BLOCK
      AND PLACES THE ADDRESS OF A 96 BYTE DATA AREA INTO THE
      CVTNVT0 FIELD OF THE CVT
      THE FIRST 80 BYTES OF THIS DATA AREA ARE USED TO SAVE THE
      FIRST 80 BYTES OF OPERATOR ENTERED SYSTEM PARAMETER DATA
      THE REMAINING 16 BYTES ARE USER AREA
      ###
      SYSTEM LIBRARY:   SYS1.NUCLEUS
      LMOD:             IEAVNIPX
  */.
++VER(Z038) FMID(JBB2220) REQ($UMOD03).
++ZAP(IEAVNIPX) DISTLIB(AOSC5).
  NAME  IEAVNIPX
  VER   002A 50E0D008                   ST    R14,8(,R13)
  VER   002E 18DE                       LR    R13,R14
  VER   0030 45E0A054          BACK     BAL   R14,NPXFBUF
  VER   0068 1FEE                       SLR   R14,R14
  VER   006A 50E084C4                   ST    R14,CVTNVT0(,R8)
  VER   0398 C840C1D9                   DC    X'C840C1D9'
  REP   002A 47F0A3760000               B     PATCH
  REP   0068 D20384C4A3B6               MVC   CVTNVT0(4,R8),GETADDR
  REP   0398 47F0A382          PATCH    B     GETINIT
  REP   039C 00000060,0000F512 PARMS    DC    F'96',X'0000F512'
  REP   03A4 5800A37A          GETINIT  L     R0,PARMS
  REP   03A8 58F0A37E                   L     R15,PARMS+4
  REP   03AC 1B11                       SR    R1,R1
  REP   03AE 0A78                       SVC   120          GET STORAGE
  REP   03B0 12FF                       LTR   R15,R15      OK?
  REP   03B2 4770A3AA                   BNZ   RETSETUP     NO - GO BACK
  REP   03B6 5010A3B6                   ST    R1,GETADDR   SAVE
ADDRESS
  REP   03BA 58500010                   L     R5,16        GET CVT ADDR
  REP   03BE 58F054C4                   L     R15,CVTNVT0(,R5) NVT ADDR
  REP   03C2 5850F15C                   L     R5,X'15C'(,R15)  SPE ADDR
  REP   03C6 D24F10005000               MVC   0(80,R1),0(R5) IPL
PARMS
  REP   03CC 50E0D008          RETSETUP ST    R14,8(,R13)
  REP   03D0 18DE                       LR    R13,R14
  REP   03D2 47F0A00E                   B     BACK
  REP   03D6 0000                       DC    H'0'
  REP   03D8 00000000          GETADDR  DC    F'0'
USERMOD $UMOD03
++USERMOD($UMOD03)
  /*
      THIS MOD TRAPS THE REQUEST FOR USE OF THE NVT CONTROL
BLOCK
      AND DETERMINES WHETHER OR NOT NIP HAS COMPLETED
      ###
      SYSTEM LIBRARY:   SYS1.LINKLIB
      LMOD:             IEEMB878
  */.
++VER(Z038) FMID(JBB2220) REQ($UMOD02).
++ZAP(IEEMB878) DISTLIB(AOSB3).
  NAME  IEEMB878
  VER   0106 58A00010                   L     R10,CVTPTR
  VER   0112 45E0B358          BACK     BAL   R14,NIPPROC
  VER   011A 45E0B166          @RF00159 BAL   R14,DATAMGMT
  VER   0570 B570B572                   DC    X'B570B572'
  REP   0106 47F0B570                   B     PATCH
  REP   0570 58A00010          PATCH    L     R10,CVTPTR        CVT
ADDR
  REP   0574 58A0A4C4                   L     R10,CVTNVT0(,R10) NVT
ADDR
  REP   0578 D503A000B586               CLC   0(4,R10),NVTID    NVT
ID?
  REP   057E 4780B112                   BE    BACK              YES
  REP   0582 47F0B11A                   B     @RF00159          NO
  REP   0586 D5E5E340          NVTID    DC    C'NVT '


    € Xephon 1989

