A REXX-written OUTLIST utility

RDR REXX EXEC

/* REXX */
/* **************************************************************** */
/* REXX NAME : RDR OUTLIST UTILITY                                  */
/* **************************************************************** */
/* TRACE R */
SIGNAL ON SYNTAX
ADDRESS ISPEXEC "ADDPOP ROW(1) COLUMN(1)"
ZPFCTL = 'OFF'
ADDRESS ISPEXEC 'VPUT (ZPFCTL) PROFILE'
ADDRESS ISPEXEC "VGET JOBNAME"
IF JOBNAME = '' THEN JOBNAME = SYSVAR(SYSUID)
DO WHILE RC =  0
   KOM =  ' '
   X = OUTTRAP('VAR.',12)
   ADDRESS TSO "STATUS" JOBNAME
   II = VAR.0
   IF SUBSTR(VAR.1,1,9) = IKJ56701I
   THEN KOM = FIRST LETTER NOT VALID
   IF SUBSTR(VAR.1,1,9) = IKJ56202I THEN KOM = JOBNAME NOT FOUND
   /* DISPLAY THE STATUS OF JOBS                                    */
   DO I = 1 TO VAR.0 WHILE I < 13 &,
      (SUBSTR(VAR.1,1,9) ¬= IKJ56202I & SUBSTR(VAR.1,1,9) ¬= IKJ56701I)
      JN = JOBN||I
      INTERPRET JN '='JOBNAME
      Z = INDEX(VAR.I,'(')+1
      K = INDEX(VAR.I,')')-Z
      JI = JOBI||I
      INTERPRET JI '='SUBSTR(VAR.I,Z,K)
      IF SUBSTR(VAR.I,1,9) = IKJ56192I THEN KO = ON OUTPUT QUEUE
      IF SUBSTR(VAR.I,1,9) = IKJ56211I THEN KO = EXECUTING
      IF SUBSTR(VAR.I,1,9) = IKJ56197I THEN KO = WAITING FOR EXECUTION
      ST = STAT||I
      INTERPRET ST '='KO
   END
   ADDRESS ISPEXEC "DISPLAY PANEL(RDRMAP) CURSOR(JOBNAME)"
   IF RC = 8 THEN EXIT
   DO I = 1 TO VAR.0 WHILE I < 13 &,
      (SUBSTR(VAR.1,1,9) ¬= IKJ56202I & SUBSTR(VAR.1,1,9) ¬= IKJ56701I)
      /* DISPLAY JOB OUTPUT FROM SYSOUT QUEUE                       */
      IF VALUE(S||I) = S & SUBSTR(VAR.I,1,9) = IKJ56192I THEN DO
         IME = VALUE(JOBN||I)||"("||VALUE(JOBI||I)||")"
         DSN = "('"||USERID()||'.'||,
              VALUE(JOBN||I)||'.'||VALUE(JOBI||I)||"')"
         PRI = PRINT||DSN
         ADDRESS TSO "OUTPUT" IME PRI BEGIN KEEP HOLD
         ADDRESS ISPEXEC REMPOP ALL
         ADDRESS ISPEXEC CONTROL ERRORS RETURN
         ADDRESS ISPEXEC "BROWSE" DATASET DSN
         IF RC = 12 THEN ADDRESS ISPEXEC "SETMSG MSG(LIST006)"
         ADDRESS ISPEXEC CONTROL ERRORS CANCEL
         ADDRESS TSO "DELETE" DSN
         ADDRESS ISPEXEC "ADDPOP ROW(1) COLUMN(1)"
      END
      /* DELETE OUTPUT JOB FROM SYSOUT QUEUE                        */
      IF VALUE(S||I) = D & SUBSTR(VAR.I,1,9) = IKJ56192I THEN DO
         IME = VALUE(JOBN||I)||"("||VALUE(JOBI||I)||")"
         ADDRESS TSO "OUTPUT" IME DELETE
      END
      /* REQUEUEING THE OUTPUT OF A HELD JOB TO ANOTHER SYSOUT QUEUE */
      IF VALUE(S||I) = R & SUBSTR(VAR.I,1,9) = IKJ56192I THEN DO
         IME = VALUE(JOBN||I)||"("||VALUE(JOBI||I)||")"
         ADDRESS ISPEXEC REMPOP ALL
         ADDRESS ISPEXEC "ADDPOP ROW(6) COLUMN(25)"
         ADDRESS ISPEXEC "DISPLAY PANEL(CLASSMAP)"
         IF RC = 0 THEN DO
            X = OUTTRAP('OFF')
            X = OUTTRAP('VAR.',1)
            CLAS = CLASS||"(X"||")"
            NEWCLAS = NEWCLASS||"("||KLASA||")"
            ADDRESS TSO "OUTPUT" IME CLAS NEWCLAS
            IF SUBSTR(VAR.1,1,9) = IKJ56343I
            THEN ADDRESS ISPEXEC "SETMSG MSG(LIST007)"
         END
         ADDRESS ISPEXEC REMPOP ALL
         ADDRESS ISPEXEC "ADDPOP ROW(1) COLUMN(1)"
         RC = 0
      END
      /* CANCEL COMMAND TO HALT BATCH JOBS THAT YOU HAVE SUBMITTED  */
      IF VALUE(S||I) = F THEN DO
         IME = VALUE(JOBN||I)||"("||VALUE(JOBI||I)||")"
         ADDRESS TSO "CANCEL" IME PURGE
      END
      /* CANCEL COMMAND TO HALT BATCH JOBS - NOPURGE                */
      IF VALUE(S||I) = FP THEN DO
         IME = VALUE(JOBN||I)||"("||VALUE(JOBI||I)||")"
         ADDRESS TSO "CANCEL" IME
      END
      /* MOVE OUTPUT JOB TO PS FILE ORGANIZATION                    */
      IF VALUE(S||I) = M & SUBSTR(VAR.I,1,9) = IKJ56192I THEN DO
         IME = VALUE(JOBN||I)||"("||VALUE(JOBI||I)||")"
         DSN = USERID()||'.'||VALUE(JOBN||I)||'.'||VALUE(JOBI||I)
         PRI = PRINT||"('"||DSN||"')"
         ADDRESS TSO "OUTPUT" IME PRI
         ADDRESS ISPEXEC "SETMSG MSG(LIST009)"
      END
   END
   /* INIT INPUT FIELDS TO BLANK                                    */
   DO I = 1 TO 12
      SS = S||I
      INTERPRET SS '='
      JN = JOBN||I
      INTERPRET JN '='
      JI = JOBI||I
      INTERPRET JI '='
      ST = STAT||I
      INTERPRET ST '='
   END
   X = OUTTRAP('OFF')
END
EXIT
SYNTAX:
SAY ERROR JOBNAME
"%RDR"

RDRMAP PANEL

)ATTR DEFAULT(%+_)
   # TYPE (OUTPUT) INTENS(LOW)  COLOR(WHITE) CAPS(OFF)
   @ TYPE (TEXT)   INTENS(HIGH) COLOR(RED)   CAPS(OFF) HILITE(REVERSE)
)BODY EXPAND ($$)
%$-$ @ OUTLIST UTILITY + $-$
+
%JOBNAME:_JOBNAME +                                       + %USERID - &ZUSER
+        #KOM                                             + +TIME   - &ZTIME
+---------------------------------------------------------------------------
+ S     JOBNAME   JOBID     STATUS
+----   --------  --------  ------------------------------------------------
+_S1+  #JOBN1   +#JOBI1   +#STAT1                                          +
+_S2+  #JOBN2   +#JOBI2   +#STAT2                                          +
+_S3+  #JOBN3   +#JOBI3   +#STAT3                                          +
+_S4+  #JOBN4   +#JOBI4   +#STAT4                                          +
+_S5+  #JOBN5   +#JOBI5   +#STAT5                                          +
+_S6+  #JOBN6   +#JOBI6   +#STAT6                                          +
+_S7+  #JOBN7   +#JOBI7   +#STAT7                                          +
+_S8+  #JOBN8   +#JOBI8   +#STAT8                                          +
+_S9+  #JOBN9   +#JOBI9   +#STAT9                                          +
+_S10+ #JOBN10  +#JOBI10  +#STAT10                                         +
+_S11+ #JOBN11  +#JOBI11  +#STAT11                                         +
+_S12+ #JOBN12  +#JOBI12  +#STAT12                                         +
+---------------------------------------------------------------------------
%JOBNAME AND PRESS <ENTER>                                                 +
%PF1+= HELP               %PF3+= END
)INIT
  .HELP = RDRHEL
)PROC
  VER(&JOBNAME,NB,MSG=LIST001)
  IF (.PFKEY = PF03) &PF3 = EXIT
  VPUT (JOBNAME) PROFILE
)END

RDRHEL HELP PANEL

)ATTR DEFAULT(%+_)
   @ TYPE (TEXT)   INTENS(HIGH) COLOR(RED)   CAPS(OFF) HILITE(REVERSE)
)BODY WINDOW(37,20) EXPAND ($$)
%$-$@ H E L P   OUTLIST + $-$
+
+Field%Jobname:+Job name.
+
+Field%S:+Valid items:
+
+  %S+Displaying output job
+
+  %D +Delete output job
+  %F +Cancel output - Purge
+  %FP+Cancel output - No Purge
+
+  %R+Requeueing output job
+
+  %M+Move output job in PS file
+
)PROC
   &ZUP   = RDRHEL
   &ZCONT = RDRHEL
)END

CLASSMAP PANEL

)ATTR DEFAULT(%+_)
   " TYPE (OUTPUT) INTENS(LOW)  COLOR(WHITE) CAPS(OFF)
   @ TYPE (INPUT)  INTENS(HIGH) COLOR(RED)   CAPS(OFF) HILITE(REVERSE)
)BODY WINDOW(26,5) EXPAND ($$)
+ Job:@ime               +
+
+ New  class: :_klasa+
+
% PF3+=> Cancel
)INIT
  .CURSOR = klasa
)PROC
  VER(&klasa,NB,MSG=LIST001)
  VPUT (KLASA) PROFILE
)END

LIST00 PDS MEMBER CONTAINING MESSAGES

LIST001                        .WINDOW=NORESP .ALARM = YES
'Empty field'
LIST006                        .WINDOW=NORESP .TYPE=ACTION
'Output job &ime not in valid class'
LIST007                        .WINDOW=NORESP .TYPE=ACTION
'Output job &ime can not change in &klasa class'
LIST009                        .WINDOW=NORESP .TYPE=ACTION
'Copy successful in &dsn


Bernard Zver
Database Administrator
Informatika Maribor (Slovenia)                                              c Xe

