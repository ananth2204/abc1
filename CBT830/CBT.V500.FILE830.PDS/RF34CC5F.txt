Extracting IPL information

REXX Program IPLDATAR

/* rexx */
/* **************************************************** */
/* Function:                                            */
/*  To provide IPL and general processor-oriented       */
/*  information.                                        */
/*  Can be invoked under ISPF to provide detailed       */
/*  information written to a temporary dataset.         */
/*  Or, can be invoked in batch to write basic details  */
/*  to a dataset. Normally invoked by IPLDATAJ which    */
/*  comes in at IPL time to provide automatic logging   */
/*  of every IPL.                                       */
/* Input:                                               */
/*  Parameter: blank or LOG                             */
/* Output:                                              */
/*  If parameter is blank, output is to a temporary     */
/*  dataset displayed under ISPF.                       */
/*  If parameter is LOG, output is directed to          */
/*  the dataset on DD LOGFILE.                          */
/* **************************************************** */
Address "TSO"
Arg parm .
/* **************************************************** */
/* Set up constants and lists for later usage           */
/* **************************************************** */
daylist="Tuesday Wednesday Thursday Friday Saturday Sunday Monday"
datelp="0 31 60 91 121 152 182 213 244 274 305 335 366"
datenl="0 31 59 90 120 151 181 212 243 273 304 334 365"
mlist="JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC"
/* **************************************************** */
/* Fetch storage pointers                               */
/* **************************************************** */
cvt=Storage(10,4)
fmid=d2x(x2d(c2x(cvt))-32)
fmid=Storage(fmid,8)
rels=d2x(x2d(c2x(cvt))-40)
rels=Storage(rels,8)
dcb=d2x(x2d(c2x(cvt))+116)
dcb=c2x(Storage(dcb,1))
pccat=d2x(x2d(c2x(cvt))+764)
pccat=c2x(Storage(pccat,4))
cvtext2=d2x(x2d(c2x(cvt))+328)
cvtext2=Storage(cvtext2,4)
sccb=d2x(x2d(c2x(cvt))+832)
sccb=d2x(c2d(Storage(sccb,4))+24)
sccbparm=Storage(sccb,8)
sysres=d2x(x2d(c2x(cvt))+296)
sysres=Storage(sysres,4)
sysres=d2x(x2d(c2x(sysres))+4)
sysres=Storage(sysres,4)
sysres=d2x(x2d(c2x(sysres))+4)
asmvt=d2x(x2d(c2x(cvt))+704)
asmvt=Storage(asmvt,4)
asmvt=d2x(x2d(c2x(asmvt))+1)
clpaflag=Storage(asmvt,1)
If c2x(Bitand(clpaflag ,x2c("08")))="08" then clpaflag= "CLPA=No"
Else clpaflag="CLPA=Yes"
/* **************************************************** */
/* Get operating system XA or ESA                       */
/* **************************************************** */
If Bitand(x2c(dcb),"80"x)="80"x then os="XA"
If Bitand(x2c(dcb),"08"x)="08"x then Do    /* OSLVL present */
   osl1=d2x(x2d(c2x(cvt))+1264)
   osl2=d2x(x2d(c2x(cvt))+1265)
   osl1=c2x(Storage(osl1,1))
   osl2=c2x(Storage(osl2,1))
   If Bitand(x2c(osl1),"80"x)="80"x then os="ESA"
End
/* **************************************************** */
/* Fetch data & time of last IPL ready for formatting   */
/* **************************************************** */
smca=d2x(x2d(c2x(cvt))+196)
smca= c2x(Storage(smca,4))
smca="00"Right(smca,6)
iplt=d2x(x2d(smca)+336)
iplt=c2x(Storage(iplt,4))
ipld=d2x(x2d(smca)+340)
ipld= c2x(Storage(ipld,4))
/* **************************************************** */
/* Get Nucleus and Active I/O configuration data        */
/* **************************************************** */
nucmem=Storage(d2x(c2d(cvtext2)+4),1)
ioconf=Storage(d2x(c2d(cvtext2)46),2)
Parse value Storage(sysres,30) with sysres . 10 sysunit 13 . 25 sysres
/* **************************************************** */
/* Calculate the day of the week for YYDDD              */
/* **************************************************** */
Parse var ipld . 3 yy 5 ddd 8 .
If yy<90 then yyyy="20"yy
Else          yyyy="19"yy
work=yyyy-1601
wd=((work*365)+(work%4)+(work%400)(work%100)+ddd-2)//7
wd=Word(daylist,wd+1)
/* **************************************************** */
/* Convert YYDDD to a gregorian date                    */
/* **************************************************** */
dstr=daten1
If yy="00" then Do
   If yyyy//400=0 then dstr=datelp
End
Else Do
   If yyyy//4=0 then dstr=datelp
End
Do i=1 to 13
    If Word(dstr,i)>=ddd then Leave
End
dd=ddd-Word(dstr,i-1)
mon=Word(mlist,i-1)
/* **************************************************** */
/* Convert time from binary centiseconds to HH:MM:SS    */
/* **************************************************** */
iplt= x2d(iplt)%100
hh=iplt%3600
hh=Right(hh,2,"0")
iplt=iplt//3600
mm=iplt%60
mm=Right(mm,2,"0")
ss=iplt//60
ss=Right(ss,2,"0")
If parm<>"LOG" then Do
  /* **************************************************** */
  /* Print date & time of last IPL information            */
  /* **************************************************** */
  Queue "Date & time of last IPL:"
  Queue " "wd"," dd"-"mon"-"yy" at "hh":"mm":"ss ,
     "(Julian date:" Substr(ipld,3,5)")"
  Queue " Parameter:" sccbparm","clpaflag
  Queue " PARMLIB member: LOAD"Substr(sccbparm,5,2)
  /* **************************************************** */
  /* Print nucleus & IOCDS information                    */
  /* **************************************************** */
  Queue " Nucleus="nucmem", Active IODF="ioconf
  Queue " SYSRES Volume="sysres", cuu="sysunit
  /* **************************************************** */
  /* Print Operating System release information           */
  /* **************************************************** */
  Queue ; Queue "Operating System:"
  Queue " MVS/"os" REL "rels" FMID "fmid
  /* **************************************************** */
  /* Print processor information                          */
  /* **************************************************** */
  Queue ; Queue "Processor information:"
  Do i=0 to 15
     pcca=d2x(x2d(pccat)+(i*4))
     pcca=c2x(Storage(pcca,4))
     If pcca=0 then Iterate
     pcca=Storage(pcca,16)
     parse var pcca . 7 cpuid 13 model 17 .
     Queue " CPU" i "Serial#" cpuid", Model" model
  End
  /* **************************************************** */
  /* Print other options if available                     */
  /* **************************************************** */
  If Bitand(x2c(dcb),"08"x)="08"x then Do    /* OSLVL present */
     Queue ; Queue "OSLVL options available:"
     If Bitand(x2c(osl1),"80"x)="80"x ,
        then Queue " ESA/370 is supported"
     If Bitand(x2c(osl1),"40"x)="40"x ,
        then Queue " HBB4220 Functions are present"
     If Bitand(x2c(osl1),"20"x)="20"x ,
        then Queue " JBB3313 Functions are present"
     If Bitand(x2c(osl1),"10"x)="10"x ,
        then Queue " Hiperspaces are supported"
     If Bitand(x2c(osl1),"08"x)="08"x then Do
        Queue " HBB4410 Functions are present"
        Queue " Spin lock restructure on"
        Queue " UCB services installed"
     End
     If Bitand(x2c(osl1),"04"x)="04"x ,
        then Queue " SCOPE=COMMON Data spaces supported"
     If Bitand(x2c(osl1),"02"x)="02"x ,
        then Queue " Encryption asymmetric feature supported"
     If Bitand(x2c(osl1),"01"x)="01"x ,
        then Queue " JBB4422 Functions are present"
     If Bitand(x2c(osl2),"80"x)="80"x then Do
        Queue " HBB4430 Functions are present"
        Queue " Dynamic APF through CSVAPF present"
     End
  End
  "ISPEXEC VGET (ZTEMPF) ASIS"
  "ALLOC F(TEMPF) NEW DA('"ztempf"')"
  count=Queued()
  "EXECIO" count "DISKW TEMPF (FINIS"
  "ISPEXEC BROWSE DATASET('"ztempf"')"
  xx=MSG("OFF")
  "DELETE '"ztempf"'"
  xx= MSG("ON")
End
Else Do
  /* **************************************************** */
  /* Get all required data                                */
  /* **************************************************** */
   datal="IPL="Left(wd,9) Right(dd,2)"-"mon"-"yy" at "hh":"mm":"ss
   Queue datal "PARM="nucmem||ioconf "REL=MVS/"os rels clpaflag
   "EXECIO 1 DISKW LOGFILE (FINIS"
End
Exit

Started task IPLDATAJ

//IPLDATAJ  PROC
//*  ******************************************************
//* *****                                             ******
//***    THIS PROCEDURE WILL CAPTURE THE DATE AND TIME    ***
//***    OF THE LAST IPL AND OTHER IPL INFORMATION.       ***
//* *****                                             ******
//*  ******************************************************
//TMP      EXEC PGM=IKJEFT01,DYNAMNBR=30,REGION=4M
//SYSEXEC  DD DISP=SHR,DSN=your.clist.dataset
//LOGFILE  DD DISP=SHR,DSN=your.logfile.dataset
//SYSTSPRT DD SYSOUT=Z
//SYSTSIN  DD DISP=SHR,DSN=your.parm.dataset(IPLDATAP)

Parameter member IPLDATAP

EXECUTIL SEARCHDD(YES)
%IPLDATAR LOG

SYS1.PARMLIB(COMMND00) entry

      .
      .
COM='S IPLDATAJ'
      .
      .

Typical entry in LOGFILE dataset

                             .
                             .
IPL=Sunday  12-MAR-95 at 08:02:33 PARM=103 REL=MVS/ESA SP4.3.0  CLPA=Yes
IPL=Sunday  12-MAR-95 at 08:13:58 PARM=103 REL=MVS/ESA SP4.3.0  CLPA=Yes
IPL=Sunday  12-MAR-95 at 20:36:57 PARM=104 REL=MVS/ESA SP4.3.0  CLPA=Yes
IPL=Sunday  19-MAR-95 at 21:06:52 PARM=104 REL=MVS/ESA SP4.3.0  CLPA=Yes
IPL=Sunday  26-MAR-95 at 00:09:38 PARM=104 REL=MVS/ESA SP4.3.0  CLPA=Yes
IPL=Sunday   2-APR-95 at 20:43:46 PARM=101 REL=MVS/ESA SP4.3.0  CLPA=Yes
                             .
                             .

Typical display under ISPF

Date & time of last IPL:
 Monday, 2-APR-95 at 20:43:46 (Julian date: 95092)
 Parameter: 0200A1M ,CLPA=Yes
 PARMLIB member: LOADA1
 Nucleus=1, Active IODF=01
 SYSRES Volume=SYSRS1, cuu=200

Operating System:
 MVS/ESA REL SP4.3.0  FMID HBB4430

Processor information:
 CPU 0 Serial# 000278, Model 9021
 CPU 1 Serial# 100278, Model 9021
 CPU 2 Serial# 200278, Model 9021

OSLVL options available:
 ESA/370 is supported
 HBB4220 Functions are present
 JBB3313 Functions are present
 Hiperspaces are supported
 HBB4410 Functions are present
 Spin lock restructure on
 UCB services installed
 SCOPE=COMMON Data spaces supported
 Encryption asymmetric feature supported
 JBB4422 Functions are present
 HBB4430 Functions are present
 Dynamic APF through CSVAPF present


Roger Butler-Ellis
Senior Systems Programmer (UK)                                            c Xeph

