JES2 supercancel command

We have all come across the job or started task which appears
to be in a loop or is causing so much degradation to the system
that the only solution is to cancel the job.  Then, when you
issue the cancel command, you can sometimes get the message
'IEE841I JOB NON-CANCELABLE'.  The following exit was
written to overcome this problem.

Every job, started task, and TSO user active in the system has
a system control block called a Command Scheduling Control
Block (CSCB) associated with it.  This control block is pointed
to by the Address Space Control Block (ASCB).  The CSCB is
searched when a cancel command is issued by the operator.
The CHCL bit in the CSCB indicates whether the job is eligible
to be cancelled.  This exit sets the CHCL bit so the job can be
cancelled and then issues the 'C JOBNAME' command using
SVC 34.  If you wish, you can bypass the cancel command and
issue a standard cancel command from the console by
removing the comment from the line labelled 'NOCAN'.

         TITLE 'JES2 $Z COMMAND PROCESSOR'
* COMMAND SYNTAX: $Z,JOBNAME
* THE FOLLOWING SHOULD BE PUT INTO THE JES2 START-UP DECK.
* LOAD=EXIT$Z
* EXIT5    ROUTINE=$Z
* THE EXIT SHOULD BE LINK EDITED AS REFRESHABLE, RE-USABLE
* AND RE-ENTERABLE.
         COPY  $HASPGBL            COPY HASP GLOBALS
EXIT$Z   $MODULE SYSP=(NOGEN,NOGEN,NODATA,NOGEN,NOGEN),                X
               ENVIRON=JES2,                                           X
               TITLE='JES2 $Z PROCESSOR  ',                            X
               $HASPEQU,           GENERATE HASP EQUATES               X
               $PCE,                                                   X
               $MIT,                                                   X
               $HCT,                                                   X
               $JOE,                                                   X
               RESPA,                                                  X
               CVT,                                                    X
               ASCB,                                                   X
               CSCB,                                                   X
               ASVT,                                                   X
               $COMWORK
***       REGISTER  CONTENTS AT ENTRY TO THE EXIT                   ***
*         R5        ADDRESS OF CURRENT  OPERAND                       *
*         R6        INCREMENT VALUE OF  4                             *
*         R7        ADDRESS OF LAST OPERAND                           *
*         R11       ADDRESS OF THE HCT                                *
*         R13       ADDRESS OF THE HASPCOMM PCE                       *
*         R14       RETURN ADDRESS                                    *
***       R15       ENTRY ADDRESS                                   ***
$Z        $ENTRY    BASE=R12
          $SAVE
          LR        R12,R15             SET UP BASE REG
*         IS THIS A  $Z COMMAND                                       *
          CLC       COMVERB(1),=C'Z'    CHECK FOR $Z
          BNE       EXIT0               NO EXIT
          CR        5,7                 ARE THERE ANY PARMS
          BE        EXIT0               NO EXIT
*         CALCULATE LENGTH OF PARM                                    *
          SR        1,1                 ZERO FOR LENGTH
          LA        10,COMVERB+2
          LA        5,COMVERB+2
GO        CLI       0(10),C' '          IS THIS END OF PARM
          BE        HAVEIT              GO MOVE PARM
          LA        1,1(,1)             INCREMENT LENGTH
          LA        10,1(,10)           SHUNT R10
          B         GO                  GO AGAIN
HAVEIT    EX        1,MOVE
*         SEARCH    FOR ASCB                                          *
          L         9,16
          USING     CVT,9               ADDRESS CVT
          L         10,CVTASVT
          USING     ASVT,10             ADDRESS ASVT
          USING     ASCB,2              ADDRESS ASCB
          L         9,ASVTMAXU          LOAD MAX NO OF ASCB'S
          LA        8,ASVTENTY          LOAD ASCB IN USE MARKER
          B         SKIP
GETASCB   BCT       9,*+8
          B         EXIT12
          LA        8,4(,8)
SKIP      TM        0(8),X'80'          IS ASCB IN USE
          BO        GETASCB
          L         2,0(8)
          ICM       4,15,ASCBJBNS       LOAD JOB POINTER
          LTR       4,4
          BNZ       INITCHCK
          ICM       4,15,ASCBJBNI       LOAD INITIATED PROG POINTER
          LTR       4,4
          BZ        GETASCB
INITCHCK  EX        1,CHECK             COMPARE
          BNE       GETASCB
*         SET JOB   CANCELABLE                                        *
          L         4,ASCBCSCB          LOAD CSCB ADDRESS
          USING     CHAIN,4
          MODESET   EXTKEY=ZERO,SAVEKEY=(2) SET KEY ZERO
          OI        CHACT,X'08'              SET  CANCEL OK
MESG      WTO       'JOB IS NOW IN CANCEL STATUS',ROUTCDE=2
          MODESET   KEYADDR=(2)         RETURN TO JES KEY
*         BUILD AND ISSUE CANCEL COMMAND                              *
*NOCAN    B         EXIT8               DONT ISSUE CANCEL COMMAND
          MVC       COMMAND(4),MSG      MOVE CANCEL COMMAND
          EX        1,CANCEL            MOVE JOBNAME
          $WTO      COMMAND,12,TYPE=SVC34 ISSUE COMMAND
          B         EXIT8               EXIT
MOVE      MVC       PCEUSER0(0),COMVERB+2
CHECK     CLC       0(0,4),PCEUSER0
CANCEL    MVC       COMMAND+4(0),PCEUSER0
***       RC = 00   CONTINUE USING ANY OTHER EXITS                  ***
*         RC = 04   CONTINUE WITHOUT ANY OTHER EXITS                  *
*         RC = 08   TERMINATE WITHOUT ANY MESSAGE                     *
*         RC = 12   TERMINATE USING AN 'OK' MESSAGE                   *
***       RC = 16   TERMINATE USING A USER SUPPLIED MESSAGE         ***
EXIT0     DS        0H
          LA        R15,0
          $RETURN   RC=(R15)
EXIT8     DS        0H
          LA        R15,8
          $RETURN   RC=(R15)
EXIT12    MVC       COMMAND(13),EXITMG
          LA        0,13
          DS        0H
          LA        R15,16
          $RETURN   RC=(R15)
MSG       DC        C'  C '
EXITMG    DC        C'JOB NOT FOUND'
          LTORG
          $MODEND
          END


Justin Connolly
Systems Programmer (Eire) â‚¬ Xephon 1989

