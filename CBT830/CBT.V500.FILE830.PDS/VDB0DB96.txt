Automated shut-down

      S SHUTDOWN,SUB=MSTR

         MACRO
         ADDR31
         LA    R1,*+10
         O     R1,=X'80000000'                turn high-order bit on
         BSM   R0,R1                          into 31-bit mode
         MEND
         MACRO
         ADDR24
         LA    R1,*+6
         BSM   R0,R1                          into 24-bit mode
         MEND
         MACRO
&LABEL   CMDTAB &CMD
         AIF   ('&CMD' EQ 'END').END
&LEN     SETA  K'&CMD-2
&LABEL   DC    AL2(&LEN),C&CMD
         MEXIT
.END     DC    X'FF'
         MEND
         MACRO
&LABEL   MSGTAB &MSGNO,&REPLY=
         AIF   ('&MSGNO' EQ 'END').END
&LEN     SETA  K'&REPLY
&LABEL   DC    CL8&MSGNO,AL2(&LEN),C'&REPLY'
         MEXIT
.END     DC    X'FF'
         MEND
         MACRO
&LABEL   STOPCMD &NAME,&ACTION=
         AIF   ('&NAME' EQ 'END').END
         AIF   ('&ACTION' NE '').OK
         MNOTE 8,'no action specified for &NAME'
         MEXIT
.OK      ANOP
&LEN     SETA  K'&ACTION-2
&LABEL   DC    CL8'&NAME',AL2(&LEN),C&ACTION
         MEXIT
.END     DC    X'FF'
         MEND
SHUTDOWN CSECT
SHUTDOWN AMODE 24
SHUTDOWN RMODE 24
         USING SHUTDOWN,R15
         B     A_START
         DC    CL8'SHUTDOWN'
         DC    CL8'&SYSDATE'
A_START  DS    0H
         BAKR  R14,0
         LR    R12,R15
         USING SHUTDOWN,R12
         DROP  R15
         LA    R13,SAVE_AREA
         TESTAUTH FCTN=1                      APF-authorized?
         LTR   R15,R15
         BZ    A_CONTINUE
         WTO   'Shdn-1A  program not authorized'
         B     A_EXIT
A_CONTINUE EQU *
         L     R1,CVTPTR                      r1 --> cvt
         ICM   R2,15,CVTSMCA-CVT(R1)          r2 --> smca (smf)
         MVC   SMF_ID(4),SMCASID-SMCABASE(R2)
         L     R2,CVTTCBP-CVT(,R1)            r2 --> tcb/ascb pointer
         L     R2,4(,R2)                      r2 --> tcb
         L     R3,TCBTIO-TCB(,R2)             r3 --> tiot
         MVC   SELF(8),TIOCNJOB-TIOT1(R3)     put our name in table
         L     R2,TCBJSCB-TCB(,R2)            r2 --> jscb
         USING IEZJSCB,R2
         L     R2,JSCBSSIB                    r2 --> ssib
         DROP  R2
         CLC   SSIBSSNM-SSIBEGIN(4,R2),=C'MSTR'
         BE    A_OBTAIN_ENQ
         BAS   R14,G_RESTART_UNDER_MSTR
         WTO   'Shdn-1L  Procedure restarted under MSTR'
         B     A_EXIT
A_OBTAIN_ENQ   EQU *
         ENQ   (QNAME,RNAME,E,,SYSTEM),RET=USE
         LTR   R15,R15                        did we get the enq
         BZ    A_CHECK_IF_JES_ACTIVE
         WTO   'Shdn-1J  shutdown program already active'
         B     A_EXIT
A_CHECK_IF_JES_ACTIVE EQU *
         MVI   JES_ACTIVE,C'Y'
         L     R1,CVTPTR                      r1 --> cvt
         L     R2,CVTJESCT-CVT(,R1)
         L     R2,JESSSCT-JESCT(,R2)
         ICM   R2,15,SSCTSSVT-SSCT(R2)        jes active ?
         BNZ   A_CHECK_VTAM
         MVI   JES_ACTIVE,C'N'                no - set flag
A_CHECK_VTAM EQU *
         MVI   NET_ACTIVE,C'Y'
         L     R2,CVTEXT2-CVT(,R1)            cvt extension
         ICM   R2,15,CVTATCVT-CVTXTNT2(R2)    r2 --> vtam's cvt
         BNZ   A_CHECK_TSO                    vtam active ?
         MVI   NET_ACTIVE,C'N'                no - set flag
A_CHECK_TSO EQU *
         MVI   TSO_ACTIVE,C'N'
         ICM   R2,15,CVTTCASP-CVT(R1)         tso active ?
         BZ    A_CONFIRM_SHUTDOWN
         MVI   TSO_ACTIVE,C'Y'                yes - set flag
         MODESET KEY=ZERO
         MVC   NO_OF_TSO_USERS(2),TCASUSEC-TCAST(R2)
         MODESET KEY=NZERO
A_CONFIRM_SHUTDOWN EQU *
         XC    WTOR_ECB,WTOR_ECB
         WTOR  MF=(E,MSG1B)                   confirm shutdown
         WAIT  1,ECB=WTOR_ECB                 wait for reply
         CLC   WTOR_REPLY(4),SMF_ID
         BNE   A_MSG1C
         TIME  DEC                            r0 time (packed)
         ST    R0,P_TIME
         MVC   C_TIME(9),=X'4021204B20204B2020'
         ED    C_TIME(9),P_TIME               " hh.mm.ss"
         CLC   C_TIME+1(5),=C'18.00'
         BH    A_SKIP_TIME_OF_DAY_CHECK
         CLC   C_TIME+1(5),=C'07.00'
         BL    A_SKIP_TIME_OF_DAY_CHECK
         XC    WTOR_ECB,WTOR_ECB
         MVC   MSG1H+12+17(5),C_TIME+1        hh.mm
         WTOR  MF=(E,MSG1H)                   confirm shutdown
         WAIT  1,ECB=WTOR_ECB                 wait for reply
         CLC   WTOR_REPLY(1),=C'Y'
         BNE   A_MSG1I
A_SKIP_TIME_OF_DAY_CHECK EQU *
         CLC   NO_OF_TSO_USERS(2),=H'0'       any tso users active ?
         BE    A_SKIP_NOTIFY                  no - skip message
         LA    R10,SEND_COMMAND
         BAS   R14,E_MVS_COMMAND              notify tso users
         STIMER WAIT,DINTVL=TEN_SECONDS
A_SKIP_NOTIFY EQU *
         CLI   JES_ACTIVE,C'Y'                is jes going ?
         BNE   A_SKIP_INITIAL_COMMANDS
         LA    R10,INITIAL_COMMANDS
         BAS   R14,B_ISSUE_COMMANDS
A_SKIP_INITIAL_COMMANDS EQU *
         BAS   R14,C_SHUTDOWN_USER_TASKS
         WTO   'Shdn-1E  waiting ...... '
         STIMER WAIT,DINTVL=SIXTY_SECONDS
         CLI   TSO_ACTIVE,C'Y'                tso going ?
         BNE   A_TSO_NOT_ACTIVE
         LA    R10,STOP_TSO
         BAS   R14,E_MVS_COMMAND              issue "p tso"
A_TSO_NOT_ACTIVE EQU *
         LA    R10,OTHER_COMMANDS             stop d-p vsam
         BAS   R14,B_ISSUE_COMMANDS
         BAS   R14,D_REPLY_TO_WTORS           reply to ENF,TCAS etc
         STIMER WAIT,DINTVL=TEN_SECONDS
         CLI   NET_ACTIVE,C'Y'
         BNE   A_WAIT_FOR_STCS
         LA    R10,STOP_VTAM
         BAS   R14,E_MVS_COMMAND              issue "z net,quick"
         STIMER WAIT,DINTVL=THIRTY_SECONDS
         LA    R2,3                           loop counter
A_WAIT_FOR_STCS EQU *
         BAS   R14,F_HOW_MANY_LEFT            what is left running ?
         CLC   NO_OF_ACTIVE_STC,=F'1'         me ?
         BE    A_STOP_JES
         WTO   'Shdn-1F  ... waiting for tasks to shutdown'
         STIMER WAIT,DINTVL=TWENTY_SECONDS
         BCT   R2,A_WAIT_FOR_STCS             do this 3 times
         B     A_MSG1G
A_STOP_JES EQU *
         CLI   JES_ACTIVE,C'Y'
         BNE   A_STOP_ACF2
         LA    R10,STOP_JES2
         BAS   R14,E_MVS_COMMAND              issue "$pjes2"
         STIMER WAIT,DINTVL=TEN_SECONDS
         L     R1,CVTPTR
         L     R1,CVTJESCT-CVT(,R1)
         L     R1,JESSSCT-JESCT(,R1)
         ICM   R1,15,SSCTSSVT-SSCT(R1)        jes still active ?
         BNZ   A_MSG1G
A_STOP_ACF2 EQU *
         LA    R10,STOP_ACF2
         BAS   R14,E_MVS_COMMAND              issue "p acf2"
         STIMER WAIT,DINTVL=TEN_SECONDS
         LA    R10,HALT
         BAS   R14,E_MVS_COMMAND              issue "z eod"
         WTO   'Shdn-1K  completed'
A_FINISH EQU   *
         DEQ   (QNAME,RNAME,,SYSTEM)          release our enq
         XR    R15,R15
A_EXIT   PR                                   return to mvs
A_MSG1C  WTO   'Shdn-1C  invalid reply - shutdown cancelled '
         B     A_FINISH
A_MSG1D  WTO   'Shdn-1D  task shutdown by operator'
         B     A_FINISH
A_MSG1G  WTO   'Shdn-1G  JES2 still active - unable to continue'
         B     A_FINISH
A_MSG1I  WTO   'Shdn-1I  shutdown cancelled'
         B     A_FINISH
MVC001   MVC   REPLY_COMMAND+7(0),10(R4)
B_ISSUE_COMMANDS EQU *                        subroutine
         BAKR  R14,0
B_LOOP   EQU *
         MODESET KEY=ZERO
         MGCRE MF=(E,MGCRE),TEXT=(R10),CONSID=CONSOLE_ID
         MODESET KEY=NZERO
         LH    R3,0(,R10)                     length
         LA    R10,2(R3,R10)                  r10 --> next table entry
         CLI   0(R10),X'FF'                   end of table ?
         BNE   B_LOOP
B_EXIT   PR                                   return to caller
C_SHUTDOWN_USER_TASKS EQU *                   subroutine
         BAKR  R14,0
         L     R2,CVTPTR                      r2 --> cvt
         L     R2,CVTASVT-CVT(,R2)            r2 --> asvt
         L     R4,ASVTMAXU-ASVT(,R2)          r4 no of asvt slots
         LA    R3,ASVTENTY-ASVT(,R2)          r3 --> first asvt slot
C_ASVT_LOOP EQU *
         ICM   R6,15,0(R3)                    asvt entry
         BM    C_ASVT_NEXT                    skip if not assigned ?
         ICM   R5,15,ASCBJBNI-ASCB(R6)        r5 --> jobname (batch)
         BNZ   C_ASVT_NEXT                    skip if batch
         ICM   R5,15,ASCBTSB-ASCB(R6)         r5 --> tsb
         BNZ   C_ASVT_NEXT                    skip if TSO
         L     R5,ASCBJBNS-ASCB(R6)           r5 --> jobname (stc)
         LA    R2,SYSTEM_TABLE
C_SEARCH_SYSTEM_TABLE_LOOP EQU *
         CLC   0(8,R2),0(R5)                  is it a system stc ?
         BE    C_ASVT_NEXT                    yes - ignore
         LA    R2,8(,R2)                      r2 --> next table entry
         CLI   0(R2),X'FF'                    end of table ?
         BNE   C_SEARCH_SYSTEM_TABLE_LOOP
         LA    R2,IGNORE_TABLE
C_SEARCH_IGNORE_TABLE_LOOP EQU *
         CLC   0(8,R2),0(R5)                  in our table ?
         BE    C_ASVT_NEXT                    yes - ignore
         LA    R2,8(,R2)                      r2 --> next table entry
         CLI   0(R2),X'FF'                    end of table ?
         BNE   C_SEARCH_IGNORE_TABLE_LOOP
         L     R1,ASCBCSCB-ASCB(R6)           r1 --> cscb
         MVC   STEPNAME(8),CHKEY-CHAIN(R1)
         LA    R2,TASK_TABLE
C_SEARCH_TASK_TABLE_LOOP EQU *
         LH    R7,8(,R2)                      length
         CLC   0(8,R2),0(R5)                  in the table ?
         BE    C_FOUND_IT                     yes - go process
         LA    R2,10(R7,R2)                   r2 --> next table entry
         CLI   0(R2),X'FF'                    end of table ?
         BNE   C_SEARCH_TASK_TABLE_LOOP
         B     C_NOT_FOUND
C_FOUND_IT EQU *
         LA    R10,8(,R2)                     r10 --> command
         B     C_STOP_TASK                    go issue command
C_NOT_FOUND EQU *
         LA    R10,P_TASKNAME                 try a "P taskname"
         MVC   P_TASKNAME+4(8),0(R5)          proc name
         CLC   STEPNAME(8),0(R5)              stepname = proc name ?
         BE    C_STOP_TASK
         MVC   P_TASKNAME+4(8),STEPNAME       no - use stepname
C_STOP_TASK EQU *
         MODESET KEY=ZERO
         MGCRE MF=(E,MGCRE),TEXT=(R10),CONSID=CONSOLE_ID
         MODESET KEY=NZERO
C_ASVT_NEXT EQU *
         LA    R3,4(,R3)                      r3 --> next asvt slot
         BCT   R4,C_ASVT_LOOP
C_EXIT   PR                                   return to caller
D_REPLY_TO_WTORS EQU *                        subroutine
         BAKR  R14,0
         MODESET MODE=SUP
         EPAR  R1
         ST    R1,PRIMARY_ASID                our asid
         LA    R1,1
         AXSET AX=(R1)
         MODESET MODE=PROB
         L     R2,CVTPTR
         L     R2,CVTCUCB-CVT(,R2)            r2 --> ucm
         XR    R3,R3
         LH    R3,UCMCTID-UCM(,R2)            console asid
         ST    R3,CONSOLE_ASID
         ICM   R2,15,UCMRPYQ-UCM(R2)          r2 --> first ore
         BZ    D_EXIT
D_GETWQE_LOOP EQU   *
         MODESET KEY=ZERO,MODE=SUP
         ADDR31
         L     R3,ORERWQE-OREF(,R2)           r3 --> wqe
         ADDR24
         L     R1,CONSOLE_ASID
         SSAR  R1                             set secondary asid
         LA    R4,128                         length to move
         XR    R5,R5
         LA    R6,MESSAGE_TEXT                r6 --> destination
         MVCP  0(R4,R6),WQETXT-WQE(R3),R5     x-memory move
         L     R1,PRIMARY_ASID
         SSAR  R1                             set secondary to primary
         MODESET KEY=NZERO,MODE=PROB
         LA    R4,MESSAGE_TABLE               r4 --> table to search
D_SEARCH_MESSAGE_TABLE_LOOP EQU *
         LH    R5,8(,R4)                      length of "reply"
         CLC   MESSAGE_TEXT+4(8),0(R4)        found ?
         BE    D_REPLY_TO_WTOR
         LA    R4,10(R5,R4)                   r4 --> next entry
         CLI   0(R4),X'FF'                    end of table ?
         BNE   D_SEARCH_MESSAGE_TABLE_LOOP
         B     D_NEXT_ORE
D_REPLY_TO_WTOR EQU *
         MVC   REPLY_COMMAND+4(2),MESSAGE_TEXT+1
         BCTR  R5,0
         EX    R5,MVC001                      move in reply text
         LA    R5,6(,R5)                      length of command
         STH   R5,REPLY_COMMAND
         LA    R10,REPLY_COMMAND
         BAS   R14,E_MVS_COMMAND              issue reply
D_NEXT_ORE EQU *
         MODESET KEY=ZERO
         ADDR31
         L     R2,ORELKP-OREF(,R2)            r2 --> next ore
         ADDR24
         MODESET KEY=NZERO
         LTR   R2,R2                          end of chain ?
         BNZ   D_GETWQE_LOOP
D_EXIT   PR                                   return to caller
E_MVS_COMMAND EQU *                           subroutine
         BAKR  R14,0
         MODESET KEY=ZERO
         MGCRE MF=(E,MGCRE),TEXT=(R10),CONSID=CONSOLE_ID
         MODESET KEY=NZERO
E_EXIT   PR                                   return to caller
F_HOW_MANY_LEFT EQU *                         subroutine
         BAKR  R14,0
         XR    R9,R9
         L     R2,CVTPTR                      r2 --> cvt
         L     R2,CVTASVT-CVT(,R2)            r2 --> asvt
         L     R4,ASVTMAXU-ASVT(,R2)          r4 no of asvt slots
         LA    R3,ASVTENTY-ASVT(,R2)          r3 --> first asvt slot
F_ASVT_LOOP EQU *
         ICM   R6,15,0(R3)                    asvt entry
         BM    F_ASVT_NEXT                    skip if not assigned ?
         ICM   R5,15,ASCBJBNI-ASCB(R6)        r5 --> jobname (batch)
         BNZ   F_ASVT_NEXT                    skip if batch
         ICM   R5,15,ASCBTSB-ASCB(R6)         r5 --> tsb
         BNZ   F_ASVT_NEXT                    skip if TSO
         L     R5,ASCBJBNS-ASCB(R6)           r5 --> jobname (stc)
         LA    R2,SYSTEM_TABLE
F_SEARCH_SYSTEM_TABLE_LOOP EQU *
         CLC   0(8,R2),0(R5)                  is it a system stc ?
         BE    F_ASVT_NEXT                    yes - ignore
         LA    R2,8(,R2)                      r2 --> next table entry
         CLI   0(R2),X'FF'                    end of table ?
         BNE   F_SEARCH_SYSTEM_TABLE_LOOP
         LA    R9,1(,R9)                      count +1
F_ASVT_NEXT EQU *
         LA    R3,4(,R3)                      r3 --> next asvt slot
         BCT   R4,F_ASVT_LOOP
         ST    R9,NO_OF_ACTIVE_STC
F_EXIT   PR                                   return to caller
G_RESTART_UNDER_MSTR EQU *                    subroutine
         BAKR  R14,0
         MVC   RESTART_COMMAND+4(8),SELF      our "name"
         LA    R2,RESTART_COMMAND+3
         XR    R3,R3
G_FIND_SPACE_LOOP EQU *
         LA    R2,1(,R2)
         LA    R3,1(,R3)                      length counter
         CLI   0(R2),C' '
         BNE   G_FIND_SPACE_LOOP
         LA    R3,10(,R3)
         STH   R3,RESTART_COMMAND             length
         MVC   0(9,R2),=C',SUB=MSTR'          to run under mstr
         LA    R10,RESTART_COMMAND
         BAS   R14,E_MVS_COMMAND              issue start
G_EXIT   PR                                   return to caller
                 DS    0D
SAVE_AREA        DC    18F'0'
TEN_SECONDS      DC    C'00001000'
TWENTY_SECONDS   DC    C'00002000'
THIRTY_SECONDS   DC    C'00003000'
SIXTY_SECONDS    DC    C'00006000'
WTOR_ECB         DC    F'0'
CONSOLE_ID       DC    F'0'
PRIMARY_ASID     DC    F'0'
CONSOLE_ASID     DC    F'0'
NO_OF_ACTIVE_STC DC    F'0'
NO_OF_TSO_USERS  DC    H'0'
WTOR_REPLY       DC    CL4' '
REPLY_COMMAND    DC    AL2(0),C'R nn,          '
SMF_ID           DC    CL4' '
MESSAGE_TEXT     DC    CL128' '
P_TASKNAME       DC    AL2(10),C'P taskname'
STEPNAME         DC    CL8' '
P_TIME           DC    F'0'
C_TIME           DC    CL9' '
QNAME            DC    CL8'XSSHUTDN'
RNAME            DC    CL6'ACTIVE'
JES_ACTIVE       DC    C' '
TSO_ACTIVE       DC    C' '
NET_ACTIVE       DC    C' '
RESTART_COMMAND  DC    AL2(0),C'S xxxxxxxx         '
MGCRE    MGCRE MF=L
MSG1B    WTOR  'Shdn-1B  confirm shutdown',                            X
               WTOR_REPLY,4,WTOR_ECB,MF=L
MSG1H    WTOR  'Shdn-1H  time is hh.mm - confirm shutdown, Y or N',    X
               WTOR_REPLY,1,WTOR_ECB,MF=L
SEND_COMMAND     DC  AL2(L'SC)
SC               DC  C'SE ''Shutdown in progress - please logoff'''
INITIAL_COMMANDS CMDTAB '$PPRT1'
                 CMDTAB '$PI'
                 CMDTAB '$PLINE1-15'
                 CMDTAB '$PLOGON1'
                 CMDTAB  END
SYSTEM_TABLE     DC CL8'*MASTER*'
                 DC CL8'SYSLOG'
                 DC CL8'PCAUTH'
                 DC CL8'RASP'
                 DC CL8'TRACE'
                 DC CL8'XCFAS'
                 DC CL8'GRS'
                 DC CL8'IOSAS'
                 DC CL8'SMXC'
                 DC CL8'SYSBMAS'
                 DC CL8'DUMPSRV'
                 DC CL8'CONSOLE'
                 DC CL8'ALLOCAS'
                 DC CL8'SMF'
                 DC CL8'SMS'
                 DC CL8'CATALOG'
                 DC CL8'JES2'
                 DC CL8'ACF2'
                 DC X'FF'
IGNORE_TABLE     DC CL8'NET'
                 DC CL8'CTDPRINT'
                 DC CL8'INIT'
                 DC CL8'DWUIRLM'
                 DC CL8'TSO'
                 DC CL8'BMCCAS'
                 DC CL8'BMCBCSS'
                 DC CL8'BMCP'
SELF             DC CL8'********'
                 DC X'FF'
MESSAGE_TABLE    MSGTAB 'IKT010D ',REPLY=FSTOP
                 MSGTAB 'CAS9227A',REPLY=Y
                 MSGTAB END
TASK_TABLE       STOPCMD DWUMSTR,ACTION='+STOP DB2'
                 STOPCMD CICSA,ACTION='F CICSA,CEMT PER SHUT'
                 STOPCMD NETMAOM,ACTION='F NETMAOM,FSTOP'
                 STOPCMD ACWASAR,ACTION='CANCEL ACWASAR'
                 STOPCMD END
                 CMDTAB 'BCSS CAS STOP ALL'
                 CMDTAB 'BCSS SHUTDOWN'
                 CMDTAB 'BMCP SHUTDOWN'
                 CMDTAB  END
STOP_TSO         CMDTAB 'P TSO'
STOP_VTAM        CMDTAB 'Z NET,QUICK'
STOP_JES2        CMDTAB '$PJES2'
STOP_ACF2        CMDTAB 'P ACF2'
HALT             CMDTAB 'Z EOD'
         LTORG
         CVT   DSECT=YES
         IHAASVT
         IHAASCB
         IEESMCA
         IEECHAIN
         IKJTCB
         IEFTIOT1
         IKTTCAST
         IHAWQE
         IHAORE
         IEECUCM FORMAT=NEW
         IEFJESCT
         IEFJSCVT
         IEZJSCB
         IEFJSSIB
         @REGS
         END


David Welch (New Zealand)                                    c Xephon 1995

