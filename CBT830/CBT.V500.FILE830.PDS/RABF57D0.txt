A JES2 archiving facility (continued)

This month we conclude our look at our JES2 archiving facility
by describing the remaining components of the system.


JAFRU
         TITLE 'JAF - JES2 JOB LOG ARCHIVING FACILITY - RELOAD UTILITY'
JAFRU    CSECT
* DESCRIPTION = A BATCH JOB THAT SELECTS THE APPROPRIATE DATA AND
* INDEX FILES AND RELOADS THE SPECIFIED JOB LOG FROM THE JAF DATA FILE.
ENTRYPT  DS    0H
         ENTRY ENTRYPT
         STM   R14,R12,12(R13)     -SAVE CALLERS REGISTERS
         LR    R12,R15             -CREATE BASE REG
         USING JAFRU,R12           -ESTABLISH ADDRESSABILITY
         B     BYPHEAD
         DC    C'JAFRU-1.01'
BYPHEAD  DS    0H
         ST    R13,SAVEAREA+4      -SAVE CALLERS SAVEAREA ADDRESS
         LA    R15,SAVEAREA        -OBTAIN OUR SAVEAREA ADDRESS
         ST    R15,8(0,R13)        -AND SAVE IT IN CALLERS SAVEAREA
         LA    R13,SAVEAREA        -RE-OBTAIN OUR SAVEAREA ADDRESS
COMMENCE DS    0H                  -INTERVAL TIMER LOOP
         WTO   'JAF100: JAF RELOAD UTILITY COMMENCING',                X
               ROUTCDE=2,DESC=4
         OPEN  (SYSIN,(INPUT))
         OPEN  (PRINTOUT,(OUTPUT))
RETPARM  DS    0H                  -RETRIEVE A PARMCARD
         GET   SYSIN,PARMCARD
         MVC   ARCIX#,PARMDAY      -MOVE PROCESSING DAY TO INDEX DSNAME
         MVC   ARCHIVE#,PARMDAY    -MOVE PROCESSING DAY TO DATA DSNAME
         LA    R8,ENDOFPRT         -POINT R8 TO END OF EXPANDED PRT REC
         BAL   R11,ALLOCOPN        -ALLOC AND OPEN DATA SETS
         BAL   R11,PROCJOBS        -PROCESS JOBS
         BAL   R11,DEALLOC         -DE-ALLOCATE DATA AND INDEX
         B     RETPARM             -CONTINUE READING PARMS
TERMEXIT DS    0H
         BAL   R11,DEALLOC         -DE-ALLOCATE DATA AND INDEX
         LA    R1,SDUMPRM          -ADDRESS SDUMP PARAMETER LIST
         LA    R2,ENTRYPT          -SET BEGINNING STORAGE ADDRESS
         L     R3,ENDPTADD         -SET ENDING STORAGE ADDRESS
         CLOSE SYSIN
         CLOSE PRINTOUT
         WTO   'JAF100: JAF IS ABNORMALLY TERMINATING',                X
               ROUTCDE=2,DESC=4
         ABEND 998,DUMP
         L     R13,SAVEAREA+4      -RELOAD R13
         RETURN (14,12),RC=0
NORMEXIT DS    0H                  -
         CLOSE SYSIN
         CLOSE PRINTOUT
         WTO   'JAF100: JAF IS TERMINATING',                           X
               ROUTCDE=2,DESC=4
         L     R13,SAVEAREA+4      -RELOAD R13
         RETURN (14,12),RC=0
ALLOCOPN DS    0H                  -ALLOCATE AND OPEN ARCHIVE DATA SET
         MVI   DYNVERB,X'01'       -REQUEST ALLOCATION
         MVC   TXTDSN,ARCDADSN     -COPY DSN
         MVC   TXTDSORG,=X'2000'   -MOVE IN DSORG FOR DA
         MVI   TXTNDSP,X'08'       -SET NORMAL DISP TO KEEP
         MVI   TXTCDSP,X'08'       -SET COND DISP TO KEEP
         MVI   TXTSTAT,X'08'       -SET STATUS TO SHR
         LA    R1,DYNTXTAL         -RETRIEVE ALLOC TEXT PTRS TO ALLOC
         ST    R1,DYNTXTPT         -SAVE IN REQUEST BLOCK
         LA    R1,DYNPTR           -POINT REG 1 TO ADDR OF SVC 99
         DYNALLOC
         LTR   R15,R15             -LOCATE SUCCESSFUL
         BZ    ALLOCDOK
         ST    R15,RETCODE         -SAVE REG 15
         WTO   'JAF004: UNABLE TO ALLOCATE ARCHIVE DATA DATASET',      X
               ROUTCDE=2,DESC=4
         OI    FLAGS,TERMJAF       -TERMINATE JAF
         B     TERMEXIT            -EXIT
ALLOCDOK DS    0H                  -ALLOC  OK
         LA    R3,ARCDADCB         -RETRIEVE ADDRESS OF DATA DCB
         USING IHADCB,R3           -ESTABLISH ADDR. OF DCB DSECT
         MVC   DCBDDNAM,ARCDDNAM   -MOVE DDNAME AS SET BY SVC 99 TO DCB
         OPEN  (ARCDADCB,(INPUT))
         TM    DCBOFLGS,X'10'     Q-OPEN SUCCESSFUL
         DROP  R3
         BO    OPENDAOK            -
         WTO   'JAF005: UNABLE TO OPEN ARCHIVE DATA DATASET',          X
               ROUTCDE=2,DESC=4
         B     TERMEXIT            -EXIT
OPENDAOK DS    0H                  -OPEN OK - NOW ALLOCATE INDEX
         MVC   TXTDSORG,=X'4000'   -MOVE IN DSORG FOR PS
         MVC   TXTDSN,ARCIXDSN     -COPY DSN
         LA    R1,DYNTXTAL         -RETRIEVE ALLOC TEXT PTRS TO ALLOC
         ST    R1,DYNTXTPT         -SAVE IN REQUEST BLOCK
         LA    R1,DYNPTR           -POINT REG 1 TO ADDR OF SVC 99
         DYNALLOC
         LTR   R15,R15             -ALLOC SUCCESSFUL
         BZ    ALLOCIOK
         ST    R15,RETCODE         -SAVE REG 15
         WTO   'JAF006: UNABLE TO ALLOCATE ARCHIVE INDEX DATASET',     X
               ROUTCDE=2,DESC=4
         B     TERMEXIT            -EXIT
ALLOCIOK DS    0H                  -ALLOC  OK
         LA    R3,ARCIXDCB         -RETRIEVE ADDRESS OF INDEX DCB
         USING IHADCB,R3           -ESTABLISH ADDR. OF DCB DSECT
         MVC   DCBDDNAM,ARCDDNAM   -MOVE DDNAME AS SET BY SVC 99 TO DCB
         OPEN  (ARCIXDCB,(INPUT))
         TM    DCBOFLGS,X'10'     Q-OPEN SUCCESSFUL
         BO    OPENIXOK            -
         WTO   'JAF007: UNABLE TO OPEN ARCHIVE INDEX DATASET',         X
               ROUTCDE=2,DESC=4
         B     TERMEXIT            -EXIT
OPENIXOK DS    0H                  -LOCATE OK
         DROP  R3
         BR    R11
PROCJOBS DS    0H                  -RETRIEVE INDEX RECORD
         GET   ARCIXDCB,INDEXREC   -READ AN INDEX RECORD
         CLC   PARMJOBN,IDXJOBNM  Q-JOB FOUND
         BE    JOBFOUND            -
         B     PROCJOBS            -CONTINUE LOOKING
JOBFOUND DS    0H                  -RETRIEVE DATA
         MVI   FOUNDFLG,C'Y'       -INDICATE JOB FOUND
         MVC   JOBHDRNM,PARMJOBN   -MOVE JOBNAME INTO HEADER
         MVC   JOBHDR#,IDXJOB#     -MOVE JOB NUMBER INTO HEADER
         MVI   PRINTREC,C'1'       -EJECT
         MVI   PRINTREC+1,C' '     -BLANK FIRST PRINT POSITION
         MVC   PRINTREC+2(131),PRINTREC+1 -CLEAR PRINT LINE
         PUT   PRINTOUT,PRINTREC
         PUT   PRINTOUT,JOBERR1    -PRINT JOB ERROR 1 MSG
         MVI   PRINTREC,C' '       -BLANK
         MVC   PRINTREC+2(131),PRINTREC -CLEAR PRINT LINE
         PUT   PRINTOUT,PRINTREC
         PUT   PRINTOUT,JOBHDR0    -PRINT JOB HEADER 0
         MVC   PRINTREC+2(131),PRINTREC -CLEAR PRINT LINE
         PUT   PRINTOUT,PRINTREC
         PUT   PRINTOUT,JOBHDR1    -PRINT JOB HEADER 1
         MVI   PRINTREC,C' '       -BLANK
         MVC   PRINTREC+2(131),PRINTREC -CLEAR PRINT LINE
         PUT   PRINTOUT,PRINTREC
         PUT   PRINTOUT,JOBERR1    -PRINT SEPARATOR LINE
         MVI   PRINTREC,C' '       -BLANK
         MVC   PRINTREC+2(131),PRINTREC -CLEAR PRINT LINE
         PUT   PRINTOUT,PRINTREC
         MVC   DATATTR,IDXTTR      -MOVE ABSOLUTE RECORD ADDRESS
         POINT ARCDADCB,DATATTR,TYPE=REL
         LTR   R15,R15             -LOCATE SUCCESSFUL
         BZ    READDATA
         ST    R15,RETCODE         -SAVE REG 15
         WTO   'JAF006: POINT UNSUCCESSFUL',                           X
               ROUTCDE=2,DESC=4
         OI    FLAGS,TERMJAF       -TERMINATE JAF
         B     TERMEXIT            -EXIT
READDATA DS    0H                  -READ A DATA RECORD
         READ  ARCHDECB,SF,ARCDADCB,DATAREC,23476,MF=E
         CHECK ARCHDECB
         LA    R3,ARCDADCB         -RETRIEVE ADDRESS OF DATA DCB
         USING IHADCB,R3           -ESTABLISH ADDR. OF DCB DSECT
         MVC   HALFWORD,DCBLRECL   -MOVE DCBLRECL TO A HALFWORD
         LH    R4,HALFWORD         -EXTRACT RECORD LENGTH
         DROP  R3
         LA    R5,DATAREC          -RETRIEVE ADDRESS OF DATA RECORD
         LA    R6,PRINTREC         -RETRIEVE ADDRESS OF PRINT RECORD
DECOMPRS DS    0H                  -DE-COMPRESS A BUFFER
         CLC   0(1,R5),ENDOFJOB   Q-END OF JOB FOUND
         BNE   JOBNTDN            N-CONTINUE
         C     R4,=F'1'           Q-END OF BLOCK
         BH    JOBNTDN            N-CONTINUE
         B     JOBDONE            Y-PROCESS SEPARATOR
JOBNTDN  DS    0H                 -
         CLC   0(1,R5),ENDOFREC   Q-END OF RECORD FOUND
         BE    PRTLINE            Y-PRINT THIS RECORD
         CLC   0(1,R5),DUPCHRST   Q-DUPLICATE DATA INDICATED
         BE    PROCDUP            Y-PROCESS DUPLICATE STRING
         CLI   LINENDFL,C'Y'      Q-END OF OUTPUT LINE
         BE    UPDATEDI           Y-UPDATE INDECIS
         CR    R6,R8              Q-END OF PRINT REC
         BNL   ENDOFLIN           Y-INDICATE ERROR
         MVC   0(1,R6),0(R5)      N-MOVE ONE MORE CHARACTER
UPDATEIX DS    0H                  -UPDATE INDEXES
         LA    R6,1(R6)            -INCREMENT PRINT RECORD INDEX
UPDATEDI DS    0H                  -UPDATE DATA RECORD INDEX
         LA    R5,1(R5)            -INCREMENT DATA RECORD INDEX
         BCT   R4,DECOMPRS         -CONTINUE LOOP
         MVI   LINENDFL,C'N'       -RESET LINE END FLAG
         B     READDATA            -READ ANOTHER BUFFER
PRTLINE  DS    0H                  -PRINT A DE-COMPRESSED RECORD
         PUT   PRINTOUT,PRINTREC
         MVI   PRINTREC,C' '       -CLEAR PRINT LINE
         MVC   PRINTREC+1(132),PRINTREC
         LA    R6,PRINTREC         -RETRIEVE ADDRESS OF PRINT RECORD
         MVI   LINENDFL,C'N'       -RESET LINE END FLAG
         B     UPDATEDI            -UPDATE INDEXES AND CONTINUE
PROCDUP  DS    0H                  -PROCESS A DUP STRING
         SR    R7,R7               -CLEAR REG 6
         CLI   2(R5),X'00'        Q-NUMBER OF DUP'S GREATER THAN 0
         BE    DUPERROR           Y-MUST BE AN ERROR
         IC    R7,2(R5)            -INSERT NUMBER OF DUPS
DUPLOOP  DS    0H                  -BEGINNING OF EXPAND DUP LOOP
         MVC   0(1,R6),1(R5)       -MOVE 1 DUP'ED CHAR
         LA    R6,1(R6)            -INCREMENT PRINT RECORD INDEX
         BCT   R7,DUPLOOP          -KEEP EXPANDING
         LA    R5,3(R5)            -POINT BEYOND DUP STRING
         BCTR  R4,0                -DECREMENT R4 FOR DUP STRING
         BCTR  R4,0                -DECREMENT R4 FOR DUP STRING
         BCT   R4,DECOMPRS         -CONTINUE LOOP
         MVI   LINENDFL,C'N'       -RESET LINE END FLAG
         B     READDATA            -READ ANOTHER BUFFER
ENDOFLIN DS    0H        -END OF OUTPUT LINE FOUND (MIGHT BE AN ERROR)
         MVI   LINENDFL,C'Y'       -INDICATE END OF LINE FOUND
         B     UPDATEDI            -UPDATE INDEXES AND CONTINUE
JOBDONE  DS    0H                  -JOB DONE
         MVI   PRINTREC,C'1'       -EJECT
         MVI   PRINTREC+1,C' '     -CLEAR PRINT LINE
         MVC   PRINTREC+2(131),PRINTREC+1 -CLEAR PRINT LINE
         PUT   PRINTOUT,PRINTREC
         MVI   LINENDFL,C'N'       -RESET LINE END FLAG
         B     PROCJOBS            -CONTINUE LOOKING FOR OTHER JOBS
INDEXEOF DS    0H                  -INDEX EOF
         CLI   FOUNDFLG,C'Y'       -JOB FOUND
         BE    JOBOK               -
         MVC   JOBERRNM,PARMJOBN   -MOVE JOBNAME INTO ERROR LINE
         MVI   PRINTREC,C'1'       -EJECT
         MVC   PRINTREC+2(131),PRINTREC+1 -CLEAR PRINT LINE
         PUT   PRINTOUT,PRINTREC
         PUT   PRINTOUT,JOBERR1    -PRINT JOB ERROR 1 MSG
         PUT   PRINTOUT,JOBERR2    -PRINT JOB ERROR 2 MSG
         PUT   PRINTOUT,JOBERR1    -PRINT JOB ERROR 3 MSG
JOBOK    DS    0H                  -
         MVI   FOUNDFLG,C'N'       -RESET FOUNDFLG FOR NEXT REQUEST
         BR    R11                 -RETURN
DUPERROR DS    0H                  -ERROR IN DUP STRING FOUND
         WTO   'JAF010: ERROR IN DUP STRING FOUND',                    X
               ROUTCDE=2,DESC=4
         BR    R11
DEALLOC  DS    0H                  -DE-ALLOCATE AND CLOSE ARCH DATA SET
         CLOSE ARCDADCB
         MVI   DYNVERB,X'02'       -REQUEST DE-ALLOCATION
         MVC   TXTDSN,ARCDADSN     -COPY DSN
         LA    R1,DYNTXTDL         -RETRIEVE ALLOC TEXT PTRS TO ALLOC
         ST    R1,DYNTXTPT         -SAVE IN REQUEST BLOCK
         LA    R1,DYNPTR           -POINT REG 1 TO ADDR OF SVC 99
         DYNALLOC
         LTR   R15,R15             -LOCATE SUCCESSFUL
         BZ    DEALCDOK
         ST    R15,RETCODE         -SAVE REG 15
         WTO   'JAF009: UNABLE TO DE-ALLOCATE ARCHIVE DATA DATASET',   X
               ROUTCDE=2,DESC=4
DEALCDOK DS    0H                  -DE-ALLOC  OK
         CLOSE ARCIXDCB
         MVC   TXTDSN,ARCIXDSN     -COPY DSN
         LA    R1,DYNTXTDL         -RETRIEVE ALLOC TEXT PTRS TO ALLOC
         ST    R1,DYNTXTPT         -SAVE IN REQUEST BLOCK
         LA    R1,DYNPTR           -POINT REG 1 TO ADDR OF SVC 99
         DYNALLOC
         LTR   R15,R15             -ALLOC SUCCESSFUL
         BZ    DEALCIOK
         ST    R15,RETCODE         -SAVE REG 15
         WTO   'JAF010: UNABLE TO DE-ALLOCATE ARCHIVE INDEX DATASET',  X
               ROUTCDE=2,DESC=4
DEALCIOK DS    0H                  -DE-ALLOC  OK
         BR    R11
SYNODATA DS    0H                  -SYNAD ROUTINE FOR DATA FILE
         SYNADAF ACSMETH=BSAM
         MVC   SYNERRMS,0(R1)      -SAVE ERROR MSG
         SYNADRLS
         WTO   'JAF013: I/O ERROR',                                    X
               ROUTCDE=2,DESC=4
         TM    FLAGS,TERMJAF      Q-JAF TERM ALREADY INDICATED
         BOR   R11                Y-AVOID A TERMINATION LOOP
         OI    FLAGS,TERMJAF      N-INDICATE TERM OF JAF REQUIRED
         B     TERMEXIT            -EXIT
*  WORK AREAS AND CONSTANTS FOR JAF100
DATATTR  DC    F'0'                -FULL TTR FOR DATA RECORD
FOUNDFLG DC    C'N'
LINENDFL DC    C'N'
ENDOFJOB DC    X'FF'               -END OF JOB INDICATOR
ENDOFREC DC    X'EE'               -END OF LOGICAL COMPRESSED RECORD
DUPCHRST DC    X'DD'               -DUPLICATE CHARACTER INDICATOR
*                                  - FORMAT IS X'DDXXYY'
*                                  - WHERE XX = CHARACTER TO DUPLICATE
*                                  -       YY = NUMBER OF DUPS IN HEX
HALFWORD DC    H'0'
FLAGS    DC    F'0'
TERMJAF  EQU   X'80'
PARMCARD DS    0CL80
PARMDAY  DC    C' '
PARMJOBN DC    CL8' '
         DC    CL71' '
PRINTREC DC    CL133' '
ENDOFPRT DC    X'FF'               -INDICATES END OF PRINT RECORD
         DS    CL30                -BUFFER FOR LONG EXPANSIONS
JOBERR1  DC    133C'='
JOBERR2  DS    0CL133
         DC    CL50'    JAF999 - NO JOBS FOUND UNDER REQUESTED NAME - '
JOBERRNM DC    CL8' '
         DC    CL75' '
JOBHDR0  DS    0CL133
         DC    C' '
         DC    CL14' '
         DC    CL50'JAF - VERSION 2  -  JES2 JOB LOG ARCHIVING FACILTY'
         DC    CL68' '
JOBHDR1  DS    0CL133
         DC    C' '
         DC    CL10' '
         DC    CL29'JOB LOG LISTING FOR JOBNAME: '
JOBHDRNM DC    CL8' '
         DC    CL19'  WITH JOB NUMBER: '
JOBHDR#  DC    CL4' '
         DC    CL62' '
INDEXREC DS    0CL36
IDXJOBNM DS    CL8
IDXJOB#  DS    CL4
IDXSTRDT DS    CL10
IDXENDDT DS    CL10
IDXTTR   DS    XL4
SUPMODE  MODESET KEY=ZERO,MODE=SUP,MF=L
PROBMODE MODESET KEY=NZERO,MODE=PROB,MF=L
RETCDEYE DC    C'REG 15 FOLLOWS ON A FULLWORD BOUNDRY'
RETCODE  DC    F'0'
SYNERRMS DC    CL136' '
SDUMPRM  SDUMP HDR='*** JAF *** - ABNORMAL TERMINATION',               X
               MF=L
ARCDADSN DS    0CL44
         DC    CL18'DS.SSDPRM.JAF.DATA'
ARCHIVE# DC    CL1' '
         DC    CL25' '
ARCIXDSN DS    0CL44
         DC    CL19'DS.SSDPRM.JAF.INDEX'
ARCIX#   DC    CL1' '
         DC    CL24' '
DYNPTR   DC    0F'0',X'80',AL3(DYNRQBLK)
DYNRQBLK DS    0F
         DC    AL1(20)
DYNVERB  DC    XL1'00'
DYNFLGS1 DC    XL2'00'
DYNERR   DC    XL2'0000'
DYNINFO  DC    XL2'0000'
DYNTXTPT DC    A(0)
         DC    F'0'
DYNFLGS2 DC    0XL4'00'
         DC    X'40000000'         -INDICATE TO WAIT FOR DSNAME
DYNTXTAL DS    0F                  -LIST OF TEXT PTR ADDRESS FOR ALLOC
         DC    A(TXTDSNA)           AND UNALLOC OF DATA AND INDEX
         DC    A(TXTSTATA)
         DC    A(TXTNDSPA)
         DC    A(TXTCDSPA)
         DC    A(TXTORGA)
         DC    X'80'
         DC    AL3(TXTDDNAM)
TXTDSNA  DS    0F                  -SPECIFY DSN
         DC    XL2'0002'
         DC    XL2'0001'
         DC    AL2(0022)
TXTDSN   DS    CL44
TXTSTATA DS    0F                  -SPECIFY STATUS
         DC    XL2'0004'
         DC    XL2'0001'
         DC    XL2'0001'
TXTSTAT  DC    XL1'01'
TXTNDSPA DS    0F                  -SPECIFY NORMAL DISPOSITION
         DC    XL2'0005'
         DC    XL2'0001'
         DC    XL2'0001'
TXTNDSP  DC    XL1'01'
TXTCDSPA DS    0F                  -SPECIFY COND DISPOSITION
         DC    XL2'0006'
         DC    XL2'0001'
         DC    XL2'0001'
TXTCDSP  DC    XL1'01'
TXTORGA  DS    0F                  -SPECIFY DSORG
         DC    XL2'003C'
         DC    XL2'0001'
         DC    XL2'0002'
TXTDSORG DC    XL2'4000'
TXTDDNAM DS    0F                  -SPECIFY REQUEST DDNAME
         DC    XL2'0055'
         DC    XL2'0001'
         DC    XL2'0008'
ARCDDNAM DC    CL8' '
DYNTXTDL DS    0F                  -LIST OF TEXT PTR ADDRESS FOR DE-ALC
         DC    A(TXTDSNA)           ARC DATA & INDEX
         DC    X'80'
         DC    AL3(TXTUNALA)
TXTUNALA DS    0F                  -SPECIFY FORCED UN-ALLOCATE
         DC    XL2'0007'
         DC    XL2'0000'
ARCDADCB DCB   DSORG=PS,                                               X
               BLKSIZE=23476,                                          X
               MACRF=(RP),                                             X
               RECFM=U,                                                X
               DDNAME=DUMMY,                                           X
               DEVD=DA,                                                X
               SYNAD=SYNODATA
         READ  ARCHDECB,                                               X
               SF,                                                     X
               MF=L
ARCIXDCB DCB   DSORG=PS,                                               X
               MACRF=(GM),                                             X
               RECFM=FB,                                               X
               LRECL=36,                                               X
               BLKSIZE=23472,                                          X
               DDNAME=DUMMY,                                           X
               EODAD=INDEXEOF,                                         X
               DEVD=DA
SYSIN    DCB   DDNAME=SYSIN,                                           +
               EODAD=NORMEXIT,                                         +
               DSORG=PS,                                               +
               MACRF=GM
PRINTOUT DCB   DDNAME=PRINTOUT,                                        +
               DEVD=DA,                                                +
               RECFM=FBA,                                              +
               LRECL=133,                                              +
               DSORG=PS,                                               +
               BLKSIZE=0,                                              +
               MACRF=PM
SAVEAREA DS    18F
         LTORG ,
ENDPTADD DC    A(ENDPT)            -END POINT FOR DUMP
DATAREC  DS    0CL23476            -1/2 OF A 3380 TRACK
         DS    CL23476             -MAX DATA RECORD SIZE
         DC    C'END OF JAFRU-1.02'
ENDPT    EQU   *                   -END OF DUMPED STORAGE
         DCBD  DSORG=PS,DEVD=DA    DCB DSECT
         END   JAFRU


JAF INVOCATION CLIST

PROC 0 DAY JOBNAME
CONTROL NOPROMPT NOMSG NOCAPS
SET PERIOD = &STR(.)
SET BLANK = &STR( )
CLS
WRITENR ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
WRITE
WRITE &BLANK
WRITENR       JAF Version 2 - JES2 Job Log Archiving Facility
WRITE
WRITENR       ...............................................
WRITE
WRITE
IF &JOBNAME= THEN DO
WRITENR    Enter Jobname to be restored ===>
READ &JOBNAME
SET JOBNAME = &SYSCAPS(&JOBNAME)
WRITE
END
IF &JOBNAME= THEN DO
WRITENR    Jobname is required - JAF is terminating
WRITE
WRITE
WRITENR ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
WRITE
EXIT
END
IF &DAY= THEN DO
WRITENR    Enter (MON, TUE, WED, THU, FRI, SAT, SUN) or EOM
WRITE
WRITENR    (for end of month) as the processing day the job
WRITE
WRITENR    requested was run  =======>
READ &DAY
SET DAY = &SYSCAPS(&DAY)
WRITE
END
IF &DAY= THEN DO
WRITENR    Day is required - JAF is terminating
WRITE
WRITE
WRITENR ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
WRITE
EXIT
END
IF (&DAY NE MON) AND +
                   (&DAY NE TUE) AND +
                   (&DAY NE WED) AND +
                   (&DAY NE THU) AND +
                   (&DAY NE FRI) AND +
                   (&DAY NE SAT) AND +
                   (&DAY NE SUN) AND +
                   (&DAY NE MSC) AND +
                   (&DAY NE EOM) THEN DO
WRITENR    Day is invalid - JAF is terminating
WRITE
WRITE
WRITENR ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
WRITE
EXIT
END
IF &DAY = MON THEN SET ARCHIVE =(1)
IF &DAY = TUE THEN SET ARCHIVE =(2)
IF &DAY = WED THEN SET ARCHIVE =(3)
IF &DAY = THU THEN SET ARCHIVE =(4)
IF &DAY = FRI THEN SET ARCHIVE =(5)
IF &DAY = SAT THEN SET ARCHIVE =(6)
IF &DAY = SUN THEN SET ARCHIVE =(6)
IF &DAY = EOM THEN SET ARCHIVE =(7)
IF &DAY = MSC THEN SET ARCHIVE =(8)
SET JAFJOB = &SYSUID.Z
SUBMIT * END(XX)
//&SYSUID.Z JOB (3804290971000008),
//          'JAF',
//          CLASS=A,
//          USER=&SYSUID,
//          NOTIFY=&SYSUID,
//          MSGCLASS=O
//IEFPROC    EXEC  PGM=JAFRU102,REGION=1024K
//SYSPRINT   DD    SYSOUT=O
//PRINTOUT   DD    SYSOUT=O,DCB=(BLKSIZE=133)
//SYSUDUMP   DD    SYSOUT=O
//SYSIN      DD    *
&ARCHIVE&JOBNAME
/*
XX
WRITENR    Your requested Job Log will be is being retrieved
WRITE
WRITENR    by the batch JOB named &JAFJOB in class A. Upon
WRITE
WRITENR    completion of that JOB, your requested JES2 JOB LOG
WRITE
WRITENR    for JOB &JOBNAME, will be placed in the held queue
WRITE
WRITENR    under the JOBNAME &JAFJOB&PERIOD To review only the JOB
WRITE
WRITENR    LOG for the requested JOB, place a "?" in the input
WRITE
WRITENR    area next to &JAFJOB in SDSF. Then place an "S" next
WRITE
WRITENR    to the DDNAME PRINTOUT.
WRITE
WRITE
WRITENR ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
WRITE
WRITE
WRITE
WRITE


END OF MONTH ARCHIVE JOB STREAM

//*  THIS PROC IS INVOKED AT EOM TO COPY THE EOM JAF ARCHIVE DATASET
//*  TO DS.SSDPRM.JAF.DATA7 TO REMOVE THE EOM OFFLOAD DATA FROM
//*  THE WEEKLY CYCLE OF JAF. THIS PROVIDES A MONTH LONG RETENTION
//*  OF THE EOM OFFLOAD JOB LOGS.
//JAFDEL   EXEC PGM=IEHPROGM
//SYSPRINT  DD   SYSOUT=*
//DD1       DD   UNIT=3380,VOL=SER=SYSPG7,DISP=SHR
//*  THE FOLLOWING MEMBER NEEDS TO CONTAIN THE IEHPROGM COMMANDS TO
//*  PERFORM THE DELETE OF LAST MONTH'S DATABASES.
//*  AN EXAMPLE OF THE CONTENTS FOR JAFDL:
//*   SCRATCH DSNAME=DS.SSDPRM.JAF.DATA7,VOL=3380=SYSPG7
//*   UNCATLG DSNAME=DS.SSDPRM.JAF.DATA7,VOL=3380=SYSPG7
//*   SCRATCH DSNAME=DS.SSDPRM.JAF.INDEX7,VOL=3380=SYSPG7
//*   UNCATLG DSNAME=DS.SSDPRM.JAF.INDEX7,VOL=3380=SYSPG7
//SYSIN     DD   DSN=SYS1.VENPRODP.PROCLIB(JAFDL),DISP=SHR
//JAFCOPY   EXEC  PGM=IEHMOVE,REGION=1026K
//SYSUT1    DD   UNIT=3380,VOL=SER=SYSPG8,DISP=OLD
//DISKIN    DD  DSN=DS.SSDPRM.JAF.DATA&ARCHIVE,
//          DISP=(SHR,KEEP,KEEP)
//DISKOUT   DD  DSN=DS.SSDPRM.JAF.DATA7,
//          DISP=(NEW,CATLG,CATLG),
//          UNIT=3380,VOL=SER=SYSPG7,
//          SPACE=(23476,(4000,200)),
//          DCB=(RECFM=U,LRECL=0,BLKSIZE=23476,DSORG=PS)
//DISKIN2   DD  DSN=DS.SSDPRM.JAF.DATA&ARCHIVE,
//          DISP=(SHR,KEEP,KEEP)
//DISKOUT2  DD  DSN=DS.SSDPRM.JAF.INDEX7,
//          DISP=(NEW,CATLG,CATLG),
//          UNIT=3380,VOL=SER=SYSPG7,
//          SPACE=(23472,(25,5)),
//          DCB=(RECFM=FB,LRECL=36,BLKSIZE=23472,DSORG=PS)
//SYSPRINT  DD    SYSOUT=O
//*  THE FOLLOWING MEMBER NEEDS TO CONTAIN THE IEHPROGM COMMANDS TO
//*  PERFORM THE COPY OF THE EOM DATABASES. A SEPARATE MEMBER IS
//*  NEEDED FOR DATABASE #1 - 7 (EG JAFCP1, JAFCP2, JAFCP3 ETC.)
//*  AN EXAMPLE OF THE CONTENTS FOR JAFCP1 IS:
//*  COPY DSNAME=DS.SSDPRM.JAF.DATA1,TO=3380=SYSPG7,                   X
//*            RENAME=DS.SSDPRM.JAF.DATA7
//*  COPY DSNAME=DS.SSDPRM.JAF.INDEX1,TO=3380=SYSPG7,                  X
//*            RENAME=DS.SSDPRM.JAF.INDEX7
//SYSIN     DD   DSN=SYS1.VENPRODP.PROCLIB(JAFCP&ARCHIVE),DISP=SHR


ALLOCATION OF DAILY DATABASE

//*  THIS JOB ALLOCATES THE DATA PORTION OF A DAILY DATABASE.
//*  IT NEEDS TO BE INITIALLY RUN FOR DATABASE 1-7.
//IEFPROC    EXEC  PGM=IEFBR14,REGION=1026K
//DISK1      DD  DSN=DS.SSDPRM.JAF.DATA1,DISP=(NEW,CATLG,CATLG),
//           UNIT=3380,VOL=SER=SYSPG6,
//           SPACE=(23476,(4000,200)),
//           DCB=(RECFM=U,LRECL=0,BLKSIZE=23476,DSORG=PS)
//SYSPRINT   DD    SYSOUT=X

//*  THIS JOB ALLOCATES THE INDEX PORTION OF A DAILY DATABASE.
//*  IT NEEDS TO BE INITIALLY RUN FOR DATABASE 1-7.
//IEFPROC    EXEC  PGM=IEFBR14,REGION=1026K
//DISK1      DD  DSN=DS.SSDPRM.JAF.INDEX1,DISP=(NEW,CATLG,CATLG),
//           UNIT=3380,VOL=SER=SYSPG6,
//           SPACE=(23472,(25,5)),
//           DCB=(RECFM=FB,LRECL=36,BLKSIZE=23472,DSORG=PS)
//SYSPRINT   DD    SYSOUT=X


Steven Zeh
Lead Systems Programmer
Fleet/Norstar Services (USA)                                      c Xephon 1991

