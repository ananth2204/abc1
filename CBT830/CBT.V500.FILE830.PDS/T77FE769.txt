Adding comments to source code

    COMMENT <no of lines> <source type>

    COMMENT ?

    COMMENT HELP

COMMENT REXX EXEC

/* ---------- Rexx ----------------- */
/* This Rexx program adds or removes */
/* comments from lines               */
/* '*' '*n' '**' for commenting      */
/* '/' '/n' '//' for decommenting    */
/* A B for inserting a comment line  */
/* Set a PF key & use                */
/* --------------------------------  */
Trace O
MsgSet = MSG("OFF")
'ISPEXEC CONTROL ERRORS RETURN'
'ISREDIT  MACRO (arg) NOPROCESS '
If Rc¬=0 Then Do
   Say 'You Can Only Use Comment While In ISPF/EDIT'
   Exit 9999
   End
If Arg='?' | Translate(arg)='HELP' Then Signal Help
lines=''
type=''
If arg¬='' Then Call CheckArg
If lines='' Then lines=0
  Else lines=lines-1
comment='N'
'ISREDIT PROCESS DEST RANGE * / '
Select
 When Rc=0  Then Do
      zedsmsg='**,// & A,B Not Allowed'
      zedlmsg='Comment & Decomment Together Not Allowed'
      End
 When Rc=4 Then Do
      dowhat='Add'
      cmd='*'
      Call ComDecom
      End
 When Rc=8 Then Do
      If lines>0 Then Do
         zedsmsg='Only TYPE Allowed'
         zedlmsg='You Can Use Only TYPE Parameter With ** or //'
         End
       Else Do
         dowhat='Upd'
         Call ComDecom
         End
      End
 When Rc=16 Then Do
      zedsmsg='Conflicting/Invalid Commands'
      zedlmsg='You Must Use *, *nn, **, /, /nn, //, A Or B With Comment'
      End
 Otherwise Do
      zedsmsg='No Line Commands Present'
      zedlmsg='You Must Use *, *nn, **, /, /nn, //, A Or B With Comment'
      End
End
ResetMsg=MSG(MsgSet)
If zedsmsg ¬='' Then Do
   Address ISPEXEC 'SETMSG MSG(ISRZ001)'
   End
Exit
/* ------------- start of subroutines ---------------------------- */
ComDecom:
'ISREDIT (dsn) = DATASET'
If dowhat='Upd' Then Do
   'ISREDIT (cmd) = RANGE_CMD'
   'ISREDIT (first) = LINENUM .ZFRANGE'
   'ISREDIT (last) = LINENUM .ZLRANGE'
   End
 Else Do
   'ISREDIT (first) = LINENUM .ZDEST'
   last=first+lines
   End
inform=''
'ISREDIT (data) = LINE 1'
'ISREDIT (lrecl) = LRECL'
data=Strip(Space(data),'B',' ')
Select
 When type¬=''                                Then Nop
 When Pos('.ASSEMBLY',dsn)>0                  Then type='ASSEMBLER'
 When Pos('.BMSMAP',dsn)>0                    Then type='ASSEMBLER'
 When Pos('.CLIST',dsn)>0                     Then type='REXX'
 When Pos('.COBOL2',dsn)>0                    Then type='COBOL'
 When Pos('.COBOL',dsn)>0                     Then type='COBOL'
 When Pos('.EXEC',dsn)>0                      Then type='REXX'
 When Pos('.JCL',dsn)>0                       Then type='JCL'
 When Pos('.REXX',dsn)>0                      Then type='REXX'
 When Pos('.SYSEXEC',dsn)>0                   Then type='REXX'
 When Pos('.VSAM',dsn)>0                      Then type='VSAM'
 When Translate(type)='VSAM'                  Then type='VSAM'
 When Word(data,1)='PROC'                     Then type='REXX'
 When Left(data,2)='/*' & Right(data,2)='*/'  Then type='REXX'
 When Pos('IDENTIFICATION DIVISION',data)>0   Then type='COBOL'
 When Pos('ID DIVISION',data)>0               Then type='COBOL'
 When Left(data,2)='//'                       Then type='JCL'
 When Pos('DFHMDF',data)>0                    Then type='ASSEMBLER'
 Otherwise                                         type='COBOL'
End
Do i=first By 1 Until i=last
   If dowhat='Upd' Then 'ISREDIT (data) = LINE' I
     Else data=Copies(' ',lrecl)
   If cmd='*' Then Interpret 'Call Comment'type
     Else Interpret 'Call Decomment'Type
   If dowhat='Upd' Then 'ISREDIT LINE ' i '= (data)'
     Else 'ISREDIT LINE_AFTER ' i '= (data)'
   If inform¬='' Then 'ISREDIT LINE_AFTER' i '= MSGLINE (inform)'
End
Select
  When dowhat='Add' Then curs=first+1
  When cmd='*'      Then curs=last+1
  Otherwise              curs=first
End
'ISREDIT CURSOR = ' curs 1
Exit
/* ------------------ comment subroutines ------------------------ */
CommentRexx:
If Left(data,3)='' Then Do
   If data='' Then Do
      If lrecl>65 Then data='/*' Copies(' ',60) '*/'
        Else data='/*' Copies(' ',lrecl-8) '*/'
      End
     Else data='/*'||Strip(Substr(data,4),t,' ')||'*/'
   End
  Else data='/*'||Strip(data,'T',' ')||'*/'
Return
CommentCobol:
data=Overlay('*',data,7)
Return
CommentJcl:
If Left(data,2)='//' Then data='//*'||Substr(data,3,68)
  Else data='//*'||Substr(data,1,68)
Return
CommentVsam:
data=' /*'||Left(data,67)||'*/'
Return
CommentAssembler:
data='*'||Left(data,70)
Return
/* -------------------- remove comments routines ------------------- */
DecommentRexx:
pos1=Pos('/*',data)
pos2=Pos('*/',data,pos1+1)
If pos1>0 & pos2>0 Then Do
   data=Overlay('  ',data,pos1)              /* blank start comment */
   data=Overlay('  ',data,pos2)              /* blank last comment */
   End
  Else inform='Above Line Has No "/*" & "*/"'
Return
DecommentCobol:
If Substr(data,7,1)='' Then inform='Above Line Is Not Comment Line'
  Else data=Overlay(' ',data,7)
Return
DecommentVsam:
pos1=Pos('/*',data)
pos2=Pos('*/',data,pos1+1)
If pos1>0 & pos2>0 Then Do
   data=Overlay('  ',data,pos1)              /* blank start comment */
   data=Overlay('  ',data,pos2)              /* blank last comment */
   End
  Else inform='Above Line Is Not A Comment Line'
Return
DecommentJcl:
If Substr(data,3,1)='*' Then Do
   data='//'Substr(data,4,69)
   If Left(Reverse(Strip(data)),1)=',' Then data=data||'*'
   End
  Else inform='Above JCL Line Is Not A Comment Line'
Return
DecommentAssembler:
If Left(data,1)='*' Then Do
   data=Substr(data,2,71)
   If Left(Reverse(Strip(data)),1)=',' Then data=data||'*'
   End
  Else inform='Above Line Is Not A Comment Line'
Return
/* ---------------------- check arguments --------------------- */
Checkarg:
If Words(arg)>2 Then Do
   zedsmsg='Only 2 Arguments Allowed'
   zedlmsg='More Than Two Arguments Not Allowed'
   Address ISPEXEC 'SETMSG MSG(ISRZ001)'
   Exit
   End
arg=Translate(arg)
lines=''
type=''
Do i=1 By 1 For Words(arg)
   If Datatype(Word(arg,i),'N') Then Do
      If Datatype(lines,'N') Then Do
         zedsmsg='Both Args Cannot Be Nos'
         zedlmsg='One Arg Can Be A Number And The Other Filetype'
         Address ISPEXEC 'SETMSG MSG(ISRZ001)'
         Exit
         End
       Else
         lines=Word(arg,i)
      End
    Else Do
      If type¬='' Then Do
         zedsmsg='Both Args Cannot Be Types'
         zedlmsg='One Arg Can Be Number And The Other Filetype'
         ADDRESS ISPEXEC 'SETMSG MSG(ISRZ001)'
         Exit
         End
       Else Do
         Call DiffTypes
         name=Word(arg,i)
         If type.name='?' Then Do
            zedsmsg='Invalid Argument'
            zedlmsg='One Arg Can Be Number And The Other Filetype'
            Address ISPEXEC 'SETMSG MSG(ISRZ001)'
            Exit
            End
           Else type=name
         End
      End
End
Return
/* ----------------------   difftypes    -------------------- */
DiffTypes:
type.='?'
type.ASSEMBLY='*'
type.BMSMAP='*'
type.CLIST='*'
type.COBOL2='*'
type.COBOL='*'
type.EXEC='*'
type.JCL='*'
type.REXX='*'
type.SYSEXEC='*'
type.VSAM='*'
Return
Help:
Queue 'Format is COMMENT <type> <No of lines>'
Queue ' '
Queue 'Use COMMENT command in ISPF/EDIT to'
Queue '  - comment an existing a line     '
Queue '  - decomment a commented line'
Queue '  - insert comment line(s) before/after'
Queue ' '
Queue ' Use *, *nn or ** to identify lines for commenting'
Queue ' Use /, /nn or // to identify lines for removing comments'
Queue ' Use A or B to insert a comment line after/before a line'
Queue ' If you want to insert more than one line, pass the number'
Queue ' of lines as a parameter'
Queue ' If you want to override the type, pass the new type'
Queue ' as a parameter (useful if you have JCL & other data mixed)'
Queue ' Set a PF Key for ease of use'
Do Until Queued()=0
   Parse Pull data
   Say data
End
Exit


Moyeen Ahmed Khan
Senior Systems Designer
Manulife Financial (Canada)                                              c Xepho

