Editing the VSAM definitions of existing clusters

The accompanying REXX EXEC creates AMS definition
statements from an existing VSAM cluster, adds the IDCAMS
JCL, and starts an ISPF edit session on the resulting job.
Unlike the CLIST presented in Cloning an MVS dataset (MVS
Update, Issue 42, March 1990), which allowed only the
VOLSER of a cloned VSAM dataset to be changed, the DV
EXEC provides the complete flexibility to change the cluster
name, space parameters, VOLSER, and attributes by using the
ISPF editor.  The EXEC supports multi-volume datasets as
well as KSDS clusters which have their data and index
components on different volumes.  It has been tested with
KSDS, ESDS, and RRDS clusters.

TSO/E Version 2 is required to use REXX EXECs with MVS.
Place the DV EXEC in any library in the SYSPROC
concatenation of your log-on procedure.  DV is most
conveniently used as a prefix command on an ISPF 3.4 DSList
display by entering it to the left of the name of the cluster
whose definition you want to edit, but the EXEC will also
accept the cluster name as a parameter if DV is entered on the
command line.  DV uses the job cards recorded on the ISPF
log and list default screen (accessed from primary option menu
0).  If no job cards appear when using DV, enter the desired
job information on the log/list screen so DV can retrieve them
in future executions.  The JCL created by DV is saved in a file
named userid.DV.JCL where it can be accessed for future
modification or reference.  Each time DV runs it deletes the old
userid.DV.JCL and creates a new one.

/* REXX ----------------------------------------------------------*/
/* This exec creates IDCAMS DEFINE JCL for a VSAM dataset.        */
/* Invoked as a prefix command from a 3.4 DSLIST panel or as a    */
/* command with the cluster name as an argument, it puts the user */
/* into en edit session with the created JCL and IDCAMS DEFINE    */
/* statements.                                                    */
/*----------------------------------------------------------------*/
Arg dsn .
If Left(dsn,1) = "'"    Then /* dsn arg from 3.4 comes with tickies */
   Do
      dsn = Strip(Translate(dsn," ","'"))
   End
Else               /* dsn entered as primary command without tickies */
   Do
      dsn = Userid()"."dsn
   End
qdsn = "'"dsn"'"   /* qdsn gets quoted version of dsn with tickies */
Stat = SYSDSN(qdsn)  /* See if data set exists */
If Stat <> "OK" Then
   Do
     Say qdsn "not found."
     Exit
   End
/* Make sure it's VSAM */
fc = LISTDSI(qdsn)
If fc > 4 Then
   Do
      Say "LISTDSI returned function code" fc
      Say "Reason Code =" SYSREASON
      Exit
   End
dsorg = SYSDSORG
If dsorg <> "VS" Then
   Do
      Say "DV supports only VSAM data sets."
      Exit
   End
Call OUTTRAP O.
"LISTCAT ENTRY("qdsn") ALL"
If rc <> 0 then do
   Say "Error from LISTCAT. RC =" rc
   Exit
End
section = "CLUSTER"
dvolser = ""
ivolser = ""
Do l = 1 to o.0
   o.l = translate(o.l," ","-")
   word1 = Word(o.l,1)
   word2 = Word(o.l,2)
   If word1 = "IN" Then    /* Change sections on "IN CAT" lines */
      Do
        p = l - 1
        section = Word(o.p,1)
      End
   Select     /* Select based on section of listcat output */
      When section = "CLUSTER" Then
         Select /* Select based on line within a given section */
            When word1 = "CLUSTER"           Then
               clname = Word(o.l,2)
            When word1 = "DATA"              Then
               dname = Word(o.l,2)
            When word1 = "INDEX"             Then
               iname = Word(o.l,2)
            Otherwise Nop
         End /* End of Select on line within CLUSTER section */
      When section = "DATA" Then
         Select /* Select based on line within a given section */
            When word1 = "KEYLEN"            Then
               Parse var o.l . keylen . avglrecl . bufspace . dcisize .
            When word1 = "RKP"               Then
               Parse var o.l . rkp . maxlrecl .
            When Left(word1,8) = "SHROPTNS"  Then
               Do
                  Parse var o.l "(" shroptns ")" recovery unique ,
                                erase type writechk imbed replicat .
                  n = l + 1
                  Parse var o.n ordered reuse spanned .
                  writechk = Insert("EC",writechk,Index(writechk,"H"))
               End
            When word1 = "REC" & word2 = "INSERTED"  Then
                  dfreeci = Word(o.l,6)
            When word1 = "REC" & word2 = "UPDATED"  Then
                  dfreeca = Word(o.l,6)
            When word1 = "SPACE" & word2 = "TYPE"  Then
                  dspacetype = Word(o.l,3)
            When word1 = "SPACE" & word2 = "PRI"  Then
                  dspacepri = Word(o.l,3)
            When word1 = "SPACE" & word2 = "SEC"  Then
                  dspacesec = Word(o.l,3)
            When word1 = "VOLSER" Then
                  dvolser = dvolser Word(o.l,2)
            Otherwise Nop
         End /* End of Select on line within DATA section */
      When section = "INDEX" Then
         Select /* Select based on line within a given section */
            When word1 = "KEYLEN"            Then
               icisize = Word(o.l,8)
            When word1 = "SPACE" & word2 = "TYPE"  Then
                  ispacetype = Word(o.l,3)
            When word1 = "SPACE" & word2 = "PRI"  Then
                  ispacepri = Word(o.l,3)
            When word1 = "SPACE" & word2 = "SEC"  Then
                  ispacesec = Word(o.l,3)
            When word1 = "VOLSER" Then
                  ivolser = ivolser Word(o.l,2)
            Otherwise Nop
         End /* End of Select on line within INDEX section */
      Otherwise Nop
   End /* End of Select on section */
End /* End of  Do l = 1 to o.0 */
Call OUTTRAP "OFF"
Newstack
"ISPEXEC VGET (ZLLGJOB1 ZLLGJOB2 ZLLGJOB3 ZLLGJOB4) PROFILE"
Do i = 1 To 4
   If Value(zllgjob || i) <> "" Then Queue Value(zllgjob || i)
End
Queue "//IDCAMS   EXEC PGM=IDCAMS"
Queue "//SYSPRINT DD SYSOUT=*"
Queue "//SYSIN    DD *"
Queue " DEFINE CLUSTER -"
Queue "           (NAME("clname") -"
Queue "           "type" -"
Queue "           SHAREOPTIONS("shroptns") -"
Queue "           "erase" -"
Queue "           "recovery" -"
Queue "           "writechk" -"
Queue "           "reuse") -"
Queue "        DATA -"
Queue "           (NAME("dname") -"
If type = "INDEXED" Then
   Do
      Queue "           KEYS("keylen rkp") -"
   End
Queue "           CONTROLINTERVALSIZE("dcisize") -"
Queue "           "dspacetype"("dspacepri dspacesec") -"
Queue "           FREESPACE("dfreeci dfreeca") -"
Queue "           RECORDSIZE("avglrecl maxlrecl") -"
Queue "           "spanned" -"
Queue "           VOLUMES("dvolser") -"
If type = "INDEXED" Then
   Do
      Queue "           )-"
      Queue "        INDEX -"
      Queue "           (NAME("iname") -"
      Queue "           CONTROLINTERVALSIZE("icisize") -"
      Queue "           "ispacetype"("ispacepri ispacesec") -"
      Queue "           "imbed" -"
      Queue "           "ordered" -"
      Queue "           "replicat"E -"
      Queue "           VOLUMES("ivolser"))"
   End
Else  Queue "           )"
Queue "/*"
Call MSG 'OFF'
"FREE FI(DV)"
"DELETE DV.JCL"
"ALLOC FI(DV) DA(DV.JCL) NEW CATALOG SPACE(1,1) TRACKS " ,
"UNIT(TSODA) LRECL(80) RECFM(F,B) BLKSIZE(3120)"
"EXECIO" Queued() "DISKW DV ( FINIS"
"ISPEXEC EDIT DATASET(DV.JCL)"
Delstack
Exit


John Cornman
Senior Systems Programmer
Key Services Corporation (USA)                        c Xephon 1990

